0x0000000000420581 : adc al, -1 ; call rsp
0x0000000000421f9d : adc al, 0 ; add byte ptr [rax], ah ; sbb bh, bh ; call rbx
0x0000000000404f51 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041b980 : adc dword ptr [rax + 1], ecx ; ret 0x8948
0x0000000000415fd9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004203fd : adc eax, dword ptr [rax] ; add byte ptr [rbx + rax*8 - 2], ch ; call rsp
0x00000000004209ff : add ah, bl ; mov ch, -1 ; call rsp
0x000000000042053f : add ah, ch ; or bh, bh ; call rsp
0x0000000000405954 : add al, -0x36 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000413b11 : add al, -0x36 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000411c1a : add al, 0x48 ; add eax, ecx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403a97 : add al, ch ; ret
0x000000000040af98 : add al, ch ; ret 0xff79
0x0000000000406ed8 : add al, ch ; ret 0xffb6
0x00000000004219bf : add al, dh ; sar esi, cl ; call qword ptr [rsi]
0x0000000000421d01 : add bh, bh ; call rsp
0x000000000041cdef : add bl, dh ; ret
0x0000000000406428 : add byte ptr [r8 - 0x77], cl ; ret 0x2ee8
0x0000000000408007 : add byte ptr [r8], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004178ff : add byte ptr [rax + 0x63], cl ; ret 0x8b48
0x000000000040d64f : add byte ptr [rax + 1], cl ; ret 0x8b48
0x00000000004209bf : add byte ptr [rax + rbp*4 - 1], cl ; call rsp
0x00000000004205bf : add byte ptr [rax + rbx - 1], bl ; call rsp
0x000000000042087f : add byte ptr [rax + rsi*2 - 1], ch ; call rsp
0x0000000000410c33 : add byte ptr [rax - 0x75], cl ; push rbp ; call 0x1d038d8b
0x00000000004199d8 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000041a1b8 : add byte ptr [rax - 0x77], cl ; push rbp ; ror byte ptr [rax - 0x77], 1 ; ret 0x8b4c
0x0000000000406429 : add byte ptr [rax - 0x77], cl ; ret 0x2ee8
0x0000000000406640 : add byte ptr [rax - 0x77], cl ; ret 0x7e8
0x0000000000403b5b : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x0000000000410c3e : add byte ptr [rax - 0x7f], cl ; ret 0x40
0x0000000000421f9f : add byte ptr [rax], ah ; sbb bh, bh ; call rbx
0x000000000041cded : add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004178fd : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8b48
0x000000000040d64d : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8b48
0x0000000000410c31 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbp ; call 0x1d038d8d
0x000000000041a1b6 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; push rbp ; ror byte ptr [rax - 0x77], 1 ; ret 0x8b4c
0x000000000040663e : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x7e8
0x0000000000403b59 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x0000000000410c3c : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x40
0x000000000041cdeb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040663c : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x7e8
0x000000000040663a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x7e8
0x0000000000400640 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400d78 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000004005e0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x0000000000400642 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400d7a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000004005e2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x000000000040be7f : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040535e : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000417fc5 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000420c3d : add byte ptr [rax], al ; add byte ptr [rax], al ; and edi, esi ; jmp rdx
0x000000000040b151 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000413dcb : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040ed20 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000400644 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400d7c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000004005e4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x000000000040af8e : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7238b], cl ; ret 0xb0
0x000000000041a0b3 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b72b8b], cl ; ret 0xb0
0x000000000040d8f0 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8d0f
0x000000000040b29e : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0xf41
0x0000000000408ee7 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5588
0x0000000000408db5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x9588
0x0000000000404107 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000405b98 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf280
0x0000000000418963 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0xe280
0x0000000000406f80 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0xf280
0x0000000000408cb1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x00000000004168ae : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000406ac3 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405360 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406584 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000417fc7 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000402353 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000422cda : add byte ptr [rax], al ; and dword ptr [rax], r8d ; add byte ptr [rax], dh ; test edi, edi ; jmp rax
0x0000000000420c3f : add byte ptr [rax], al ; and edi, esi ; jmp rdx
0x000000000042053e : add byte ptr [rax], al ; in al, dx ; or bh, bh ; call rsp
0x00000000004202be : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jle 0x4202c6 ; call rsp
0x000000000042087e : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jo 0x420887 ; call rsp
0x00000000004203fe : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret
0x0000000000402529 : add byte ptr [rax], al ; jmp 0x402369
0x000000000041bbcc : add byte ptr [rax], al ; mov al, sil ; movzx eax, al ; pop rbp ; ret
0x000000000041bb4d : add byte ptr [rax], al ; mov ax, si ; movzx eax, ax ; pop rbp ; ret
0x000000000040b153 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000422dfe : add byte ptr [rax], al ; mov edi, dr1 ; jmp qword ptr [rdi]
0x0000000000414b82 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000413dcd : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000420c3a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax], al ; and edi, esi ; jmp rdx
0x000000000042233e : add byte ptr [rax], al ; nop ; cmp edi, edi ; call rdx
0x000000000042185e : add byte ptr [rax], al ; or dh, 0xfe ; call qword ptr [rax]
0x0000000000404f53 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000041989b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000415d08 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004204be : add byte ptr [rax], al ; pop rsp ; in eax, -2 ; call rsp
0x000000000042047e : add byte ptr [rax], al ; pop rsp ; sar esi, cl ; call rsp
0x00000000004205be : add byte ptr [rax], al ; pop rsp ; sbb bh, bh ; call rsp
0x000000000042163e : add byte ptr [rax], al ; push rax ; mov ch, -2 ; jmp qword ptr [rax]
0x0000000000422e1e : add byte ptr [rax], al ; push rax ; mov edi, dr1 ; jmp qword ptr [rdi]
0x00000000004206be : add byte ptr [rax], al ; pushfq ; cmp edi, edi ; call rsp
0x00000000004202fe : add byte ptr [rax], al ; pushfq ; test edi, esi ; call rsp
0x0000000000400646 : add byte ptr [rax], al ; ret
0x0000000000400d7e : add byte ptr [rax], al ; ret 1
0x00000000004005e6 : add byte ptr [rax], al ; ret 2
0x0000000000421fde : add byte ptr [rax], al ; sbb byte ptr [rcx], -1 ; call qword ptr [rbx]
0x0000000000421ffe : add byte ptr [rax], al ; sbb byte ptr [rcx], -1 ; jmp qword ptr [rdi]
0x000000000042101e : add byte ptr [rax], al ; shr byte ptr [rsi - 2], 1 ; jmp qword ptr [rcx]
0x00000000004209be : add byte ptr [rax], al ; test al, -1 ; call rsp
0x0000000000422e1a : add byte ptr [rax], al ; test byte ptr [rdx], ah ; add byte ptr [rax], al ; push rax ; mov edi, dr1 ; jmp qword ptr [rdi]
0x0000000000422cdf : add byte ptr [rax], dh ; test edi, edi ; jmp rax
0x0000000000422d9f : add byte ptr [rax], dl ; mov edi, edi ; call qword ptr [rax]
0x000000000042067f : add byte ptr [rbp + rsi - 1], ch ; call rsp
0x00000000004204bf : add byte ptr [rbp - 2], bl ; call rsp
0x000000000041989c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000415d09 : add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004203ff : add byte ptr [rbx + rax*8 - 2], ch ; call rsp
0x0000000000420a7f : add byte ptr [rbx + rdi*4 - 1], bh ; call rsp
0x000000000042047f : add byte ptr [rbx + rdx*8 - 2], bl ; call rsp
0x00000000004085ee : add byte ptr [rbx - 0x76b71f8b], cl ; ret 0xb0
0x000000000040af90 : add byte ptr [rbx - 0x76b7238b], cl ; ret 0xb0
0x000000000041a0b5 : add byte ptr [rbx - 0x76b72b8b], cl ; ret 0xb0
0x000000000040e304 : add byte ptr [rbx - 0x76b73b8b], cl ; ret 0xb0
0x000000000041895f : add byte ptr [rcx + 0x9f9], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0xe280
0x0000000000420a3f : add byte ptr [rcx + rdi*4 - 1], bl ; call rsp
0x0000000000407998 : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000422cdb : add byte ptr [rcx], al ; add byte ptr [rax], dh ; test edi, edi ; jmp rax
0x0000000000402bd8 : add byte ptr [rcx], al ; ret
0x000000000040d8f2 : add byte ptr [rcx], bh ; ret 0x8d0f
0x000000000040b2a0 : add byte ptr [rcx], bh ; ret 0xf41
0x0000000000408ee9 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5588
0x0000000000408db7 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x9588
0x0000000000404109 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000405b9a : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf280
0x0000000000418965 : add byte ptr [rdi], cl ; xchg eax, esi ; ret 0xe280
0x0000000000406f82 : add byte ptr [rdi], cl ; xchg eax, esi ; ret 0xf280
0x0000000000408cb3 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x00000000004168b0 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004204ff : add byte ptr [rdx + rbp*8 - 2], cl ; call rsp
0x000000000042073f : add byte ptr [rdx + rcx*2 - 1], bl ; call rsp
0x000000000040c947 : add byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041aef1 : add byte ptr [rdx], al ; jmp rcx
0x0000000000411a8d : add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x00000000004205ff : add byte ptr [rsi + rbx - 1], cl ; call rsp
0x00000000004202bf : add byte ptr [rsi + rdi*2 - 2], ch ; call rsp
0x000000000041388c : add dword ptr [rax + 0xf], eax ; mov dh, -0x39 ; pop rbp ; ret
0x000000000041854d : add dword ptr [rax - 0x49f0fe1e], eax ; ret 0x8148
0x0000000000415f98 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041989a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000415d07 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004058d8 : add dword ptr [rax], eax ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000406f88 : add dword ptr [rdi + rcx - 0x4a], eax ; ret 0x8341
0x0000000000405b87 : add dword ptr [rdi + rcx - 0x4a], eax ; ret 0x944
0x000000000040cb7f : add dword ptr [rdi], ecx ; mov dh, -0x3f ; pop rbp ; ret
0x0000000000405afc : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408710 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000412b3a : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040946c : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000402bd4 : add eax, 0x2219de ; add ebx, esi ; ret
0x0000000000411c1c : add eax, ecx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402b9b : add eax, edx ; sar rax, 1 ; jne 0x402bac ; pop rbp ; ret
0x0000000000402bd9 : add ebx, esi ; ret
0x0000000000421d21 : add edi, edi ; call rsp
0x0000000000402f0b : add esp, 0x10 ; pop rbp ; ret
0x0000000000407996 : add esp, 0x100 ; pop rbp ; ret
0x000000000040a4b7 : add esp, 0x10b0 ; pop rbp ; ret
0x0000000000404f4f : add esp, 0x110 ; pop rbp ; ret
0x00000000004069a6 : add esp, 0x120 ; pop rbp ; ret
0x000000000040af1a : add esp, 0x1240 ; pop rbp ; ret
0x000000000041c99c : add esp, 0x130 ; pop rbp ; ret
0x0000000000415d04 : add esp, 0x138 ; pop rbx ; pop rbp ; ret
0x0000000000407565 : add esp, 0x140 ; pop rbp ; ret
0x000000000040d3aa : add esp, 0x180 ; pop rbp ; ret
0x0000000000419b8c : add esp, 0x1a0 ; pop rbp ; ret
0x000000000040e1e4 : add esp, 0x1d0 ; pop rbp ; ret
0x00000000004064be : add esp, 0x1e0 ; pop rbp ; ret
0x000000000040c6fc : add esp, 0x1f0 ; pop rbp ; ret
0x0000000000404ef2 : add esp, 0x20 ; pop rbp ; ret
0x000000000040c945 : add esp, 0x200 ; pop rbp ; ret
0x000000000040301d : add esp, 0x30 ; pop rbp ; ret
0x000000000040818a : add esp, 0x40 ; pop rbp ; ret
0x0000000000405097 : add esp, 0x50 ; pop rbp ; ret
0x0000000000404eb4 : add esp, 0x60 ; pop rbp ; ret
0x000000000040a6b8 : add esp, 0x70 ; pop rbp ; ret
0x0000000000415ebe : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040b52b : add esp, 0x80 ; pop rbp ; ret
0x0000000000405646 : add esp, 0x90 ; pop rbp ; ret
0x0000000000408e4e : add esp, 0xa0 ; pop rbp ; ret
0x0000000000407ed9 : add esp, 0xb0 ; pop rbp ; ret
0x0000000000410cbb : add esp, 0xc0 ; pop rbp ; ret
0x0000000000408471 : add esp, 0xd0 ; pop rbp ; ret
0x0000000000410966 : add esp, 0xe0 ; pop rbp ; ret
0x0000000000402356 : add esp, 8 ; ret
0x0000000000406ed7 : add r8b, bpl ; ret 0xffb6
0x0000000000411c1b : add rax, rcx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402b9a : add rax, rdx ; sar rax, 1 ; jne 0x402bad ; pop rbp ; ret
0x0000000000402f0a : add rsp, 0x10 ; pop rbp ; ret
0x0000000000407995 : add rsp, 0x100 ; pop rbp ; ret
0x000000000040a4b6 : add rsp, 0x10b0 ; pop rbp ; ret
0x0000000000404f4e : add rsp, 0x110 ; pop rbp ; ret
0x00000000004069a5 : add rsp, 0x120 ; pop rbp ; ret
0x000000000040af19 : add rsp, 0x1240 ; pop rbp ; ret
0x000000000041c99b : add rsp, 0x130 ; pop rbp ; ret
0x0000000000415d03 : add rsp, 0x138 ; pop rbx ; pop rbp ; ret
0x0000000000407564 : add rsp, 0x140 ; pop rbp ; ret
0x000000000040d3a9 : add rsp, 0x180 ; pop rbp ; ret
0x0000000000419b8b : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000040e1e3 : add rsp, 0x1d0 ; pop rbp ; ret
0x00000000004064bd : add rsp, 0x1e0 ; pop rbp ; ret
0x000000000040c6fb : add rsp, 0x1f0 ; pop rbp ; ret
0x0000000000404ef1 : add rsp, 0x20 ; pop rbp ; ret
0x000000000040c944 : add rsp, 0x200 ; pop rbp ; ret
0x000000000040301c : add rsp, 0x30 ; pop rbp ; ret
0x0000000000408189 : add rsp, 0x40 ; pop rbp ; ret
0x0000000000405096 : add rsp, 0x50 ; pop rbp ; ret
0x0000000000404eb3 : add rsp, 0x60 ; pop rbp ; ret
0x000000000040a6b7 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000415ebd : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040b52a : add rsp, 0x80 ; pop rbp ; ret
0x0000000000405645 : add rsp, 0x90 ; pop rbp ; ret
0x0000000000408e4d : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000407ed8 : add rsp, 0xb0 ; pop rbp ; ret
0x0000000000410cba : add rsp, 0xc0 ; pop rbp ; ret
0x0000000000408470 : add rsp, 0xd0 ; pop rbp ; ret
0x0000000000410965 : add rsp, 0xe0 ; pop rbp ; ret
0x0000000000402355 : add rsp, 8 ; ret
0x000000000041cd6c : addps xmm1, xmm2 ; movaps xmm0, xmm1 ; pop rbp ; ret
0x000000000041cd6b : addsd xmm1, xmm2 ; movaps xmm0, xmm1 ; pop rbp ; ret
0x000000000040946b : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000422d9d : and al, byte ptr [rax] ; add byte ptr [rax], dl ; mov edi, edi ; call qword ptr [rax]
0x0000000000402bd7 : and al, byte ptr [rax] ; add ebx, esi ; ret
0x000000000041388a : and bh, 1 ; movzx eax, dil ; pop rbp ; ret
0x0000000000405b96 : and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf280
0x000000000042073d : and byte ptr [rax], al ; add byte ptr [rdx + rcx*2 - 1], bl ; call rsp
0x00000000004069a8 : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040cb7d : and cl, 1 ; movzx eax, cl ; pop rbp ; ret
0x0000000000413889 : and dil, 1 ; movzx eax, dil ; pop rbp ; ret
0x0000000000422cdd : and dword ptr [rax], eax ; add byte ptr [rax], dh ; test edi, edi ; jmp rax
0x0000000000422cdc : and dword ptr [rax], r8d ; add byte ptr [rax], dh ; test edi, edi ; jmp rax
0x0000000000411ff5 : and eax, 0x41f210 ; mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x00000000004162c7 : and eax, 0x48fffffd ; add esp, 0x20 ; pop rbp ; ret
0x0000000000404bc9 : and eax, 0x624500 ; pop rbp ; ret
0x000000000040eb9f : and eax, 0x624b88 ; pop rbp ; ret
0x000000000040ebc3 : and eax, 0x624b90 ; pop rbp ; ret
0x0000000000417845 : and edi, dword ptr [rbp - 0x10] ; mov rax, rdi ; pop rbp ; ret
0x0000000000420c41 : and edi, esi ; jmp rdx
0x0000000000417844 : and rdi, qword ptr [rbp - 0x10] ; mov rax, rdi ; pop rbp ; ret
0x0000000000410a83 : call 0x1d038bd3
0x0000000000410bc1 : call 0x1d038d11
0x0000000000410c37 : call 0x1d038d87
0x00000000004163be : call 0x402662
0x00000000004164f3 : call 0x4027d2
0x000000000041a10e : call 0x416412
0x0000000000413fe4 : call 0x4903c934
0x0000000000413fe3 : call 0x4903c935
0x0000000000413fe4 : call 0x4903c937
0x0000000000413fe3 : call 0x4903c938
0x000000000040bf49 : call 0x490b489c
0x000000000040bf48 : call 0x490b489d
0x000000000040c014 : call 0x490b4967
0x000000000040c013 : call 0x490b4968
0x000000000040e61d : call 0x4932dd70
0x000000000040e61c : call 0x4932dd71
0x000000000040a748 : call 0x496a37
0x000000000040a747 : call 0x496a38
0x000000000040a583 : call 0xffffffffd8b632d6
0x0000000000416005 : call 0xffffffffe08ee959
0x000000000040adcd : call 0xffffffffe0b63921
0x000000000040d0c7 : call 0xffffffffe9035a17
0x0000000000415d39 : call 0xffffffffe903e689
0x0000000000415d38 : call 0xffffffffe903e68a
0x00000000004124e1 : call 0xffffffffff7ab032
0x00000000004124e0 : call 0xffffffffff7ab033
0x000000000041261f : call 0xffffffffff7ab170
0x000000000041261e : call 0xffffffffff7ab171
0x000000000041cdc9 : call qword ptr [r12 + rbx*8]
0x0000000000420ca3 : call qword ptr [rax]
0x0000000000421fe3 : call qword ptr [rbx]
0x0000000000421bc3 : call qword ptr [rdx]
0x0000000000421923 : call qword ptr [rsi]
0x000000000041cdca : call qword ptr [rsp + rbx*8]
0x0000000000402bfd : call rax
0x0000000000421ce3 : call rbx
0x00000000004215e3 : call rcx
0x00000000004221c3 : call rdi
0x0000000000421343 : call rdx
0x00000000004201c3 : call rsp
0x0000000000404f93 : clc ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407994 : clc ; add rsp, 0x100 ; pop rbp ; ret
0x000000000041c99a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x0000000000411cbe : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405a41 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040c4da : clc ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000405095 : clc ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040e412 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004146b2 : clc ; add rsp, 0x90 ; pop rbp ; ret
0x00000000004136e6 : clc ; add rsp, 0xc0 ; pop rbp ; ret
0x0000000000417843 : clc ; and rdi, qword ptr [rbp - 0x10] ; mov rax, rdi ; pop rbp ; ret
0x0000000000402b9f : clc ; jne 0x402ba8 ; pop rbp ; ret
0x0000000000404bd6 : clc ; mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000414cc5 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040ed1c : clc ; mov dword ptr [rdi + 0x18], 0 ; pop rbp ; ret
0x000000000041c01b : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040edbe : clc ; mov esi, dword ptr [rbp - 0xc] ; mov dword ptr [rdi], esi ; pop rbp ; ret
0x000000000041396c : clc ; mov qword ptr [rbp - 0x10], rsi ; pop rbp ; ret
0x0000000000416eb3 : clc ; mov qword ptr [rdi + 0x10], rsi ; pop rbp ; ret
0x000000000041371e : clc ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000416e93 : clc ; mov qword ptr [rdi + 8], rsi ; pop rbp ; ret
0x000000000040527f : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004117db : clc ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x00000000004117fb : clc ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000041181b : clc ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000416fdd : clc ; mov rdi, qword ptr [rdx + 0x10] ; call rax
0x0000000000413aae : clc ; mov rdi, qword ptr [rdx + rcx*8] ; mov rsi, qword ptr [rbp - 0x28] ; call rax
0x0000000000413c46 : clc ; mov rsi, qword ptr [rdx + rcx*8 + 8] ; call rax
0x0000000000405283 : clc ; pop rbp ; ret
0x000000000040b150 : cld ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000402f37 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040a4b5 : cld ; add rsp, 0x10b0 ; pop rbp ; ret
0x00000000004192de : cld ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040c943 : cld ; add rsp, 0x200 ; pop rbp ; ret
0x000000000041b824 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041b9b9 : cld ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000408903 : cld ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000411596 : cld ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040a6b6 : cld ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000411192 : cld ; add rsp, 0x80 ; pop rbp ; ret
0x0000000000412ffa : cld ; add rsp, 0xc0 ; pop rbp ; ret
0x0000000000410964 : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x0000000000404bc6 : cld ; mov dword ptr [0x624500], eax ; pop rbp ; ret
0x000000000041c018 : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000041161d : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004192db : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041b821 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041b9b6 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000408900 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040a6b3 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040c340 : cld ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040b157 : cld ; pop rbp ; ret
0x0000000000413ab1 : cmp al, -0x36 ; mov rsi, qword ptr [rbp - 0x28] ; call rax
0x000000000040be78 : cmp al, ch ; ret 0xfff6
0x0000000000415d06 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000411efa : cmp dword ptr [rax - 0x75], ecx ; jne 0x411ee4 ; call rax
0x0000000000402b5d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x402b70 ; pop rbp ; ret
0x0000000000422341 : cmp edi, edi ; call rdx
0x00000000004206c1 : cmp edi, edi ; call rsp
0x00000000004058d6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; push rax ; add dword ptr [rax], eax ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041aef0 : cwde ; add byte ptr [rdx], al ; jmp rcx
0x00000000004193dc : cwde ; mov rcx, qword ptr [rax*8 + 0x41fab0] ; jmp rcx
0x000000000040d5e2 : dec dword ptr [rax + 0x39] ; ret 0x8948
0x000000000041aeeb : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; cwde ; add byte ptr [rdx], al ; jmp rcx
0x00000000004151a5 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; enter 0x41f5, 0 ; jmp rcx
0x000000000041a65b : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; lock inc byte ptr [rcx] ; jmp rcx
0x000000000041a6db : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; nop ; inc byte ptr [rcx] ; jmp rcx
0x0000000000410a7f : dec dword ptr [rax - 0x75] ; push rbp ; call 0x1d038bd7
0x000000000040d635 : dec dword ptr [rax - 0x77] ; ret 0x12e8
0x00000000004067e6 : dec dword ptr [rax - 0x77] ; ret 0x21e8
0x000000000040aeb9 : dec dword ptr [rax - 0x77] ; ret 0x2ee8
0x0000000000416b41 : dec dword ptr [rax - 0x77] ; ret 0x86e8
0x0000000000406448 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000040aa86 : dec dword ptr [rax - 0x77] ; ret 0xa1e8
0x000000000040ad3e : dec dword ptr [rax - 0x77] ; ret 0xa9e8
0x000000000040a238 : dec dword ptr [rax - 0x77] ; ret 0xafe8
0x0000000000404236 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000407247 : dec dword ptr [rax - 0x77] ; ret 0xe8
0x000000000040aca7 : dec dword ptr [rax - 0x7f] ; ret 0x9c
0x00000000004066c5 : dec dword ptr [rax - 0x7f] ; ret 0xffe0
0x000000000041c8ff : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000040cbd1 : dec dword ptr [rax - 0x7f] ; ret 8
0x000000000040cb41 : div dword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000040cb40 : div qword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x0000000000415deb : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000411ef7 : enter -0x74b8, 0x39 ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x0000000000408188 : enter -0x7cb8, -0x3c ; pop rbp ; ret
0x000000000040b805 : enter 0x3d48, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5588
0x00000000004151aa : enter 0x41f5, 0 ; jmp rcx
0x000000000041cd2f : enter 0x4d89, -0x14 ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000402bd5 : ficomp word ptr [rcx] ; and al, byte ptr [rax] ; add ebx, esi ; ret
0x0000000000416f11 : fild dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041a123 : fmul dword ptr [r8 - 0x77] ; shr r8b, -0x1e ; ret 0xffff
0x000000000041413c : fmul dword ptr [rax + 0x29] ; ror byte ptr [rax - 0x77], 1 ; ret 0xe8e8
0x0000000000415723 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000408153 : fmul dword ptr [rax - 0x75] ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x80
0x000000000041a124 : fmul dword ptr [rax - 0x77] ; shr r8b, -0x1e ; ret 0xffff
0x0000000000408157 : fmul dword ptr [rax - 0x7f] ; ret 0x80
0x000000000040af93 : fmul qword ptr [rax - 0x77] ; ret 0xb0
0x000000000041cdcc : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000411688 : fsub st(0), st(0) ; ret 0x7b
0x000000000040a587 : fsubr st(0) ; ret
0x0000000000402f09 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004086aa : hlt ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040edc1 : hlt ; mov dword ptr [rdi], esi ; pop rbp ; ret
0x0000000000402b70 : hlt ; pop rbp ; mov edi, 0x624560 ; jmp rax
0x000000000040a78b : in al, -0x75 ; in al, 0x48 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040a78e : in al, 0x48 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000406427 : in al, dx ; add byte ptr [r8 - 0x77], cl ; ret 0x2ee8
0x0000000000404ef0 : in al, dx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041cd32 : in al, dx ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000420540 : in al, dx ; or bh, bh ; call rsp
0x000000000041cd35 : in al, dx ; pop rbp ; ret
0x00000000004204c1 : in eax, -2 ; call rsp
0x000000000041a661 : inc byte ptr [rcx] ; jmp rcx
0x0000000000408a56 : inc dword ptr [rax] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000406f7e : inc dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0xf280
0x00000000004202c0 : insb byte ptr [rdi], dx ; jle 0x4202c4 ; call rsp
0x0000000000420880 : insb byte ptr [rdi], dx ; jo 0x420885 ; call rsp
0x0000000000420400 : insb byte ptr [rdi], dx ; ret
0x00000000004199e0 : int 0x80
0x0000000000402b63 : ja 0x402b6a ; pop rbp ; ret
0x0000000000413721 : ja 0x41376e ; pop rbp ; ret
0x0000000000416e96 : ja 0x416ea3 ; pop rbp ; ret
0x0000000000416eb6 : ja 0x416ecb ; pop rbp ; ret
0x0000000000402b6f : je 0x402b6d ; pop rbp ; mov edi, 0x624560 ; jmp rax
0x0000000000407f09 : jge 0x407f02 ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040edbd : jge 0x40edbf ; mov esi, dword ptr [rbp - 0xc] ; mov dword ptr [rdi], esi ; pop rbp ; ret
0x00000000004117da : jge 0x4117db ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x00000000004117fa : jge 0x4117fb ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000041181a : jge 0x41181b ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000411b70 : jge 0x411b63 ; mov rcx, qword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000413080 : jge 0x413073 ; mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000041371d : jge 0x41371e ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000041396b : jge 0x41396c ; mov qword ptr [rbp - 0x10], rsi ; pop rbp ; ret
0x0000000000416e92 : jge 0x416e93 ; mov qword ptr [rdi + 8], rsi ; pop rbp ; ret
0x0000000000416eb2 : jge 0x416eb3 ; mov qword ptr [rdi + 0x10], rsi ; pop rbp ; ret
0x0000000000417846 : jge 0x41783e ; mov rax, rdi ; pop rbp ; ret
0x00000000004202c1 : jle 0x4202c3 ; call rsp
0x000000000040252b : jmp 0x402367
0x0000000000413261 : jmp 0x413264
0x0000000000412380 : jmp 0x4903acd0
0x0000000000412dbe : jmp 0x4903b70e
0x0000000000412e2b : jmp 0x4903b77b
0x0000000000413562 : jmp 0x4903beb2
0x00000000004135cf : jmp 0x4903bf1f
0x000000000041399e : jmp 0xffffffff838a39a9
0x0000000000420c83 : jmp qword ptr [rax]
0x000000000040f019 : jmp qword ptr [rcx]
0x0000000000421e23 : jmp qword ptr [rdi]
0x00000000004223c3 : jmp qword ptr [rdx]
0x0000000000402b77 : jmp rax
0x00000000004213c3 : jmp rbx
0x0000000000403625 : jmp rcx
0x0000000000402bb7 : jmp rdx
0x0000000000420d63 : jmp rsi
0x0000000000402ba0 : jne 0x402ba7 ; pop rbp ; ret
0x000000000040cb42 : jne 0x40cb3a ; mov rax, rdx ; pop rbp ; ret
0x000000000040edc0 : jne 0x40edbb ; mov dword ptr [rdi], esi ; pop rbp ; ret
0x0000000000411be6 : jne 0x411bd1 ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x0000000000411efd : jne 0x411ee1 ; call rax
0x000000000041396f : jne 0x413964 ; pop rbp ; ret
0x0000000000413ab5 : jne 0x413a91 ; call rax
0x0000000000413c79 : jne 0x413c55 ; call rax
0x000000000041781c : jne 0x4177f4 ; mov rax, qword ptr [rsi] ; pop rbp ; ret
0x000000000040a6ba : jo 0x40a71b ; ret
0x0000000000414e15 : jo 0x414e76 ; ret
0x0000000000416524 : jo 0x416585 ; ret
0x000000000041665e : jo 0x4166bf ; ret
0x000000000041876b : jo 0x4187cc ; ret
0x0000000000420881 : jo 0x420884 ; call rsp
0x0000000000416fe0 : jp 0x416ff4 ; call rax
0x0000000000415ec0 : js 0x415f20 ; pop rbp ; ret
0x000000000041a660 : lock inc byte ptr [rcx] ; jmp rcx
0x000000000040c9ea : loop 0x40c9ca ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041ba29 : loop 0x41ba7b ; or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x000000000041bb11 : loop 0x41bb63 ; or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x000000000040cb7e : loope 0x40cb87 ; movzx eax, cl ; pop rbp ; ret
0x00000000004064c0 : loopne 0x4064c8 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000409775 : loopne 0x4097c5 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000409774 : loopne 0x4097c6 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040affb : loopne 0x40b04b ; add esp, 0x30 ; pop rbp ; ret
0x000000000040affa : loopne 0x40b04c ; add esp, 0x30 ; pop rbp ; ret
0x000000000040b5ac : loopne 0x40b5fc ; add esp, 0x20 ; pop rbp ; ret
0x000000000040b5ab : loopne 0x40b5fd ; add esp, 0x20 ; pop rbp ; ret
0x0000000000410968 : loopne 0x41096f ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000410e2b : loopne 0x410e7b ; add esp, 0x20 ; pop rbp ; ret
0x0000000000410e2a : loopne 0x410e7c ; add esp, 0x20 ; pop rbp ; ret
0x0000000000411be7 : loopne 0x411c39 ; mov esi, eax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x0000000000417934 : loopne 0x4178c6 ; push rbp ; mov ah, -0x7f ; ret 3
0x0000000000417933 : loopne 0x4178c7 ; push rbp ; mov ah, -0x7f ; ret 3
0x0000000000417b97 : loopne 0x417b29 ; push rbp ; mov ah, -0x7f ; ret 2
0x0000000000417b96 : loopne 0x417b2a ; push rbp ; mov ah, -0x7f ; ret 2
0x0000000000417c9c : loopne 0x417c2e ; push rbp ; mov al, -0x7f ; ret 3
0x0000000000417c9b : loopne 0x417c2f ; push rbp ; mov al, -0x7f ; ret 3
0x0000000000417eff : loopne 0x417e91 ; push rbp ; mov al, -0x7f ; ret 2
0x0000000000417efe : loopne 0x417e92 ; push rbp ; mov al, -0x7f ; ret 2
0x000000000041a8a1 : loopne 0x41a8a8 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041b131 : loopne 0x41b138 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041b6a0 : loopne 0x41b6a8 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004178f9 : mov ah, -0x7f ; ret 1
0x0000000000417918 : mov ah, -0x7f ; ret 2
0x0000000000417937 : mov ah, -0x7f ; ret 3
0x0000000000417956 : mov ah, -0x7f ; ret 4
0x0000000000417975 : mov ah, -0x7f ; ret 5
0x0000000000417994 : mov ah, -0x7f ; ret 6
0x00000000004179b3 : mov ah, -0x7f ; ret 7
0x00000000004215e1 : mov ah, -2 ; call rcx
0x00000000004203fc : mov ah, 0x13 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret
0x000000000042047c : mov ah, 0x15 ; add byte ptr [rax], al ; pop rsp ; sar esi, cl ; call rsp
0x00000000004204bc : mov ah, 0x16 ; add byte ptr [rax], al ; pop rsp ; in eax, -2 ; call rsp
0x000000000042053c : mov ah, 0x18 ; add byte ptr [rax], al ; in al, dx ; or bh, bh ; call rsp
0x00000000004205bc : mov ah, 0x1a ; add byte ptr [rax], al ; pop rsp ; sbb bh, bh ; call rsp
0x00000000004206bc : mov ah, 0x1e ; add byte ptr [rax], al ; pushfq ; cmp edi, edi ; call rsp
0x000000000042087c : mov ah, 0x25 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jo 0x420889 ; call rsp
0x00000000004209bc : mov ah, 0x2a ; add byte ptr [rax], al ; test al, -1 ; call rsp
0x0000000000411aee : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004202bc : mov ah, 0xe ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jle 0x4202c8 ; call rsp
0x00000000004202fc : mov ah, 0xf ; add byte ptr [rax], al ; pushfq ; test edi, esi ; call rsp
0x0000000000406426 : mov al, -0x14 ; add byte ptr [r8 - 0x77], cl ; ret 0x2ee8
0x00000000004163bd : mov al, -0x18 ; popfq ; ret 0xfffe
0x0000000000417c61 : mov al, -0x7f ; ret 1
0x0000000000417c80 : mov al, -0x7f ; ret 2
0x0000000000417c9f : mov al, -0x7f ; ret 3
0x0000000000417cbe : mov al, -0x7f ; ret 4
0x0000000000417cdd : mov al, -0x7f ; ret 5
0x0000000000417cfc : mov al, -0x7f ; ret 6
0x0000000000417d1b : mov al, -0x7f ; ret 7
0x0000000000407edb : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040a4b9 : mov al, 0x10 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040ea4d : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000041628b : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x00000000004119d5 : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041bc46 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000409468 : mov al, byte ptr [rbp - 9] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000409bf7 : mov al, ch ; ret
0x000000000041bbcf : mov al, dh ; movzx eax, al ; pop rbp ; ret
0x000000000041bbce : mov al, sil ; movzx eax, al ; pop rbp ; ret
0x000000000041bb4f : mov ax, si ; movzx eax, ax ; pop rbp ; ret
0x000000000041bb53 : mov bh, -0x40 ; pop rbp ; ret
0x000000000040ebc1 : mov byte ptr [0x624b90], al ; pop rbp ; ret
0x000000000040771b : mov byte ptr [rax + 0x30], 0 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000408a54 : mov byte ptr [rax - 1], 0 ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040e5d3 : mov byte ptr [rax], 0 ; pop rbp ; ret
0x0000000000404bd7 : mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000402bd3 : mov byte ptr [rip + 0x2219de], 1 ; ret
0x0000000000420a01 : mov ch, -1 ; call rsp
0x00000000004203c1 : mov ch, -2 ; call rsp
0x0000000000421641 : mov ch, -2 ; jmp qword ptr [rax]
0x000000000040c33c : mov dh, -0x36 ; mov dword ptr [rbp - 4], ecx ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000041cd2e : mov dh, -0x38 ; mov dword ptr [rbp - 0x14], ecx ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000041388f : mov dh, -0x39 ; pop rbp ; ret
0x000000000040cb81 : mov dh, -0x3f ; pop rbp ; ret
0x0000000000405afe : mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408712 : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000412b3c : mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040946e : mov dh, -0x40 ; pop rbp ; ret
0x0000000000404bc7 : mov dword ptr [0x624500], eax ; pop rbp ; ret
0x000000000040eb9d : mov dword ptr [0x624b88], edi ; pop rbp ; ret
0x0000000000410c67 : mov dword ptr [rax + 0x18], ecx ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000414cc6 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000418766 : mov dword ptr [rax], ecx ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000414bd4 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000414c88 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040ca30 : mov dword ptr [rbp - 0x10], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407f08 : mov dword ptr [rbp - 0x10], edi ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040e629 : mov dword ptr [rbp - 0x10], edx ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000041396e : mov dword ptr [rbp - 0x10], esi ; pop rbp ; ret
0x0000000000404eee : mov dword ptr [rbp - 0x14], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041cd30 : mov dword ptr [rbp - 0x14], ecx ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000408078 : mov dword ptr [rbp - 0x18], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000409773 : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041ccca : mov dword ptr [rbp - 0x24], eax ; mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x0000000000403019 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041a10b : mov dword ptr [rbp - 0x38], eax ; call 0x416415
0x000000000041a126 : mov dword ptr [rbp - 0x40], eax ; call 0x416415
0x0000000000411aec : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040ea4b : mov dword ptr [rbp - 0x50], eax ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004163bb : mov dword ptr [rbp - 0x50], eax ; call 0x402665
0x00000000004164f0 : mov dword ptr [rbp - 0x60], ecx ; call 0x4027d5
0x0000000000402f07 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402f35 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040c33e : mov dword ptr [rbp - 4], ecx ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040e218 : mov dword ptr [rbp - 8], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041c019 : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040527d : mov dword ptr [rbp - 8], eax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000041396a : mov dword ptr [rbp - 8], edi ; mov qword ptr [rbp - 0x10], rsi ; pop rbp ; ret
0x0000000000414d3e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040bd19 : mov dword ptr [rcx + 0x30], edx ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004107a3 : mov dword ptr [rcx + 0xc], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000411ffa : mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x0000000000416eb5 : mov dword ptr [rdi + 0x10], esi ; pop rbp ; ret
0x000000000040ed1d : mov dword ptr [rdi + 0x18], 0 ; pop rbp ; ret
0x0000000000413720 : mov dword ptr [rdi + 0x48], esi ; pop rbp ; ret
0x0000000000416e95 : mov dword ptr [rdi + 8], esi ; pop rbp ; ret
0x000000000040edc2 : mov dword ptr [rdi], esi ; pop rbp ; ret
0x0000000000405953 : mov dword ptr [rdx + rcx*8], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000413b10 : mov dword ptr [rdx + rcx*8], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000415ebc : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000417f77 : mov eax, 0x81b0558b ; ret 7
0x0000000000417c0f : mov eax, 0x81b4558b ; ret 7
0x0000000000414b88 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000413233 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040b6f8 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040e5d0 : mov eax, dword ptr [rbp - 0x10] ; mov byte ptr [rax], 0 ; pop rbp ; ret
0x0000000000414b85 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000041cc65 : mov eax, dword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000407f0c : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004171e7 : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041cd33 : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000407639 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d08d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000409113 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000414bce : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004118df : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040a78c : mov eax, dword ptr [rbp - 0x1c] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040aff9 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000411bec : mov eax, dword ptr [rbp - 0x20] ; call rax
0x000000000041a071 : mov eax, dword ptr [rbp - 0x24] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041cccd : mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x00000000004132df : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000414c8a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000413cc3 : mov eax, dword ptr [rbp - 0x30] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040d135 : mov eax, dword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040cf4d : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000414e0f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000415eba : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004163f9 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004086a8 : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041161e : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004192dc : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041b822 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041b9b7 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000408901 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000411594 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040a6b4 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040b155 : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000404f91 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000411cbc : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405a3f : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040c4d8 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000405093 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040e410 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000405281 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004117dd : mov eax, dword ptr [rdi + 0x10] ; pop rbp ; ret
0x00000000004117fd : mov eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000041181d : mov eax, dword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000041781f : mov eax, dword ptr [rsi] ; pop rbp ; ret
0x000000000041498f : mov eax, ecx ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000408187 : mov eax, ecx ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000417849 : mov eax, edi ; pop rbp ; ret
0x00000000004121e1 : mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040cb45 : mov eax, edx ; pop rbp ; ret
0x000000000041bb50 : mov eax, esi ; movzx eax, ax ; pop rbp ; ret
0x000000000041ba63 : mov eax, esi ; pop rbp ; ret
0x0000000000402bfb : mov ebp, esp ; call rax
0x0000000000402b61 : mov ebp, esp ; ja 0x402b6c ; pop rbp ; ret
0x000000000040361e : mov ecx, dword ptr [rax*8 + 0x41ce60] ; jmp rcx
0x0000000000404fed : mov ecx, dword ptr [rax*8 + 0x41d088] ; jmp rcx
0x000000000040515a : mov ecx, dword ptr [rax*8 + 0x41d0b0] ; jmp rcx
0x00000000004140e6 : mov ecx, dword ptr [rax*8 + 0x41f218] ; jmp rcx
0x0000000000414ec7 : mov ecx, dword ptr [rax*8 + 0x41f580] ; jmp rcx
0x00000000004151a7 : mov ecx, dword ptr [rax*8 + 0x41f5c8] ; jmp rcx
0x00000000004193de : mov ecx, dword ptr [rax*8 + 0x41fab0] ; jmp rcx
0x000000000041a6dd : mov ecx, dword ptr [rax*8 + 0x41fe90] ; jmp rcx
0x000000000041a65d : mov ecx, dword ptr [rax*8 + 0x41fef0] ; jmp rcx
0x000000000041af6d : mov ecx, dword ptr [rax*8 + 0x420038] ; jmp rcx
0x000000000041aeed : mov ecx, dword ptr [rax*8 + 0x420098] ; jmp rcx
0x0000000000414bd1 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000412542 : mov ecx, dword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000041a107 : mov ecx, dword ptr [rbp - 0x18] ; mov qword ptr [rbp - 0x38], rax ; call 0x416419
0x00000000004124df : mov ecx, dword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000041a122 : mov ecx, dword ptr [rbp - 0x28] ; mov qword ptr [rbp - 0x40], rax ; call 0x416419
0x0000000000411b73 : mov ecx, dword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000413083 : mov ecx, dword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000413150 : mov ecx, dword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000041498d : mov ecx, eax ; mov eax, ecx ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041ba8d : mov ecx, eax ; shl edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000041ba5d : mov ecx, eax ; shr edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000040ccda : mov edi, 0x48ffffff ; add esp, 0x10 ; pop rbp ; ret
0x0000000000402bf5 : mov edi, 0x623e10 ; mov rbp, rsp ; call rax
0x0000000000402b72 : mov edi, 0x624560 ; jmp rax
0x0000000000402bb2 : mov edi, 0x624560 ; jmp rdx
0x0000000000422e01 : mov edi, dr1 ; jmp qword ptr [rdi]
0x000000000040edbc : mov edi, dword ptr [rbp - 8] ; mov esi, dword ptr [rbp - 0xc] ; mov dword ptr [rdi], esi ; pop rbp ; ret
0x0000000000416eb1 : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x10], rsi ; pop rbp ; ret
0x000000000041371c : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000416e91 : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 8], rsi ; pop rbp ; ret
0x00000000004117d9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x00000000004117f9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000411819 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x00000000004124e3 : mov edi, dword ptr [rcx] ; call rax
0x0000000000411ef9 : mov edi, dword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x0000000000416fdf : mov edi, dword ptr [rdx + 0x10] ; call rax
0x0000000000413ab0 : mov edi, dword ptr [rdx + rcx*8] ; mov rsi, qword ptr [rbp - 0x28] ; call rax
0x000000000041cdc7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000422da1 : mov edi, edi ; call qword ptr [rax]
0x000000000041cdc6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000041c374 : mov edx, dword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000416fdb : mov edx, dword ptr [rbp - 8] ; mov rdi, qword ptr [rdx + 0x10] ; call rax
0x0000000000413c44 : mov edx, dword ptr [rbp - 8] ; mov rsi, qword ptr [rdx + rcx*8 + 8] ; call rax
0x000000000041cc69 : mov edx, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004164ed : mov edx, ecx ; mov qword ptr [rbp - 0x60], rcx ; call 0x4027d8
0x0000000000414847 : mov es, word ptr [rax] ; add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x0000000000411fc2 : mov esi, 0x48ffffff ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000411efc : mov esi, dword ptr [rbp - 0x20] ; call rax
0x0000000000413ab4 : mov esi, dword ptr [rbp - 0x28] ; call rax
0x000000000041781b : mov esi, dword ptr [rbp - 0x30] ; mov rax, qword ptr [rsi] ; pop rbp ; ret
0x000000000040edbf : mov esi, dword ptr [rbp - 0xc] ; mov dword ptr [rdi], esi ; pop rbp ; ret
0x0000000000411b77 : mov esi, dword ptr [rcx] ; call rax
0x0000000000413c48 : mov esi, dword ptr [rdx + rcx*8 + 8] ; call rax
0x0000000000402bb0 : mov esi, eax ; mov edi, 0x624560 ; jmp rdx
0x0000000000411be9 : mov esi, eax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x00000000004163b8 : mov esi, ecx ; mov qword ptr [rbp - 0x50], rax ; call 0x402668
0x0000000000411a8b : mov esp, 0xf660000 ; pop rsp ; ret 0xf66
0x000000000040eb9c : mov qword ptr [0x624b88], rdi ; pop rbp ; ret
0x0000000000418765 : mov qword ptr [rax], rcx ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000407f07 : mov qword ptr [rbp - 0x10], rdi ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040e628 : mov qword ptr [rbp - 0x10], rdx ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000041396d : mov qword ptr [rbp - 0x10], rsi ; pop rbp ; ret
0x000000000041a10a : mov qword ptr [rbp - 0x38], rax ; call 0x416416
0x000000000041a125 : mov qword ptr [rbp - 0x40], rax ; call 0x416416
0x00000000004163ba : mov qword ptr [rbp - 0x50], rax ; call 0x402666
0x00000000004164ef : mov qword ptr [rbp - 0x60], rcx ; call 0x4027d6
0x000000000040527c : mov qword ptr [rbp - 8], rax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000413969 : mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; pop rbp ; ret
0x0000000000414d3d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040bd18 : mov qword ptr [rcx + 0x30], rdx ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000416eb4 : mov qword ptr [rdi + 0x10], rsi ; pop rbp ; ret
0x000000000041371f : mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000416e94 : mov qword ptr [rdi + 8], rsi ; pop rbp ; ret
0x0000000000405952 : mov qword ptr [rdx + rcx*8], rax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000413b0f : mov qword ptr [rdx + rcx*8], rax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000411aed : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004163bc : mov r8b, -0x18 ; popfq ; ret 0xfffe
0x000000000040ea4c : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000415ebb : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000417f76 : mov r8d, 0x81b0558b ; ret 7
0x0000000000417c0e : mov r8d, 0x81b4558b ; ret 7
0x0000000000413232 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040b6f7 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040e5cf : mov rax, qword ptr [rbp - 0x10] ; mov byte ptr [rax], 0 ; pop rbp ; ret
0x0000000000414b84 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000041cc64 : mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000407f0b : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000407638 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d08c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000409112 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004118de : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040aff8 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000411beb : mov rax, qword ptr [rbp - 0x20] ; call rax
0x00000000004132de : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000413cc2 : mov rax, qword ptr [rbp - 0x30] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040d134 : mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040cf4c : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000414e0e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004163f8 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000404f90 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000411cbb : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405a3e : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040c4d7 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000405092 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040e40f : mov rax, qword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000405280 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004117dc : mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x00000000004117fc : mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000041181c : mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000041781e : mov rax, qword ptr [rsi] ; pop rbp ; ret
0x0000000000408186 : mov rax, rcx ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000417848 : mov rax, rdi ; pop rbp ; ret
0x00000000004121e0 : mov rax, rdx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040cb44 : mov rax, rdx ; pop rbp ; ret
0x0000000000402bfa : mov rbp, rsp ; call rax
0x0000000000402b60 : mov rbp, rsp ; ja 0x402b6d ; pop rbp ; ret
0x000000000040361d : mov rcx, qword ptr [rax*8 + 0x41ce60] ; jmp rcx
0x0000000000404fec : mov rcx, qword ptr [rax*8 + 0x41d088] ; jmp rcx
0x0000000000405159 : mov rcx, qword ptr [rax*8 + 0x41d0b0] ; jmp rcx
0x00000000004140e5 : mov rcx, qword ptr [rax*8 + 0x41f218] ; jmp rcx
0x0000000000414ec6 : mov rcx, qword ptr [rax*8 + 0x41f580] ; jmp rcx
0x00000000004151a6 : mov rcx, qword ptr [rax*8 + 0x41f5c8] ; jmp rcx
0x00000000004193dd : mov rcx, qword ptr [rax*8 + 0x41fab0] ; jmp rcx
0x000000000041a6dc : mov rcx, qword ptr [rax*8 + 0x41fe90] ; jmp rcx
0x000000000041a65c : mov rcx, qword ptr [rax*8 + 0x41fef0] ; jmp rcx
0x000000000041af6c : mov rcx, qword ptr [rax*8 + 0x420038] ; jmp rcx
0x000000000041aeec : mov rcx, qword ptr [rax*8 + 0x420098] ; jmp rcx
0x0000000000412541 : mov rcx, qword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x00000000004124de : mov rcx, qword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000411b72 : mov rcx, qword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000413082 : mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000041314f : mov rcx, qword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000416eb0 : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x10], rsi ; pop rbp ; ret
0x000000000041371b : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000416e90 : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 8], rsi ; pop rbp ; ret
0x00000000004117d8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x00000000004117f8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000411818 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x00000000004124e2 : mov rdi, qword ptr [rcx] ; call rax
0x0000000000411ef8 : mov rdi, qword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x0000000000416fde : mov rdi, qword ptr [rdx + 0x10] ; call rax
0x0000000000413aaf : mov rdi, qword ptr [rdx + rcx*8] ; mov rsi, qword ptr [rbp - 0x28] ; call rax
0x000000000041c373 : mov rdx, qword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000416fda : mov rdx, qword ptr [rbp - 8] ; mov rdi, qword ptr [rdx + 0x10] ; call rax
0x0000000000413c43 : mov rdx, qword ptr [rbp - 8] ; mov rsi, qword ptr [rdx + rcx*8 + 8] ; call rax
0x000000000041cc68 : mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004164ec : mov rdx, r9 ; mov qword ptr [rbp - 0x60], rcx ; call 0x4027d9
0x0000000000411efb : mov rsi, qword ptr [rbp - 0x20] ; call rax
0x0000000000413ab3 : mov rsi, qword ptr [rbp - 0x28] ; call rax
0x000000000041781a : mov rsi, qword ptr [rbp - 0x30] ; mov rax, qword ptr [rsi] ; pop rbp ; ret
0x0000000000411b76 : mov rsi, qword ptr [rcx] ; call rax
0x0000000000413c47 : mov rsi, qword ptr [rdx + rcx*8 + 8] ; call rax
0x0000000000402baf : mov rsi, rax ; mov edi, 0x624560 ; jmp rdx
0x0000000000411be8 : mov rsi, rax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x00000000004140e4 : movabs al, byte ptr [0x41f218c50c8b48] ; jmp rcx
0x000000000041cd6f : movaps xmm0, xmm1 ; pop rbp ; ret
0x0000000000420c3c : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax], al ; and edi, esi ; jmp rdx
0x000000000040d4ce : movsxd rax, dword ptr [rbp - 0x24] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000405afd : movzx eax, al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408711 : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000412b3b : movzx eax, al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040946d : movzx eax, al ; pop rbp ; ret
0x000000000041bb52 : movzx eax, ax ; pop rbp ; ret
0x000000000041388e : movzx eax, bh ; pop rbp ; ret
0x0000000000404bda : movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x000000000040cb80 : movzx eax, cl ; pop rbp ; ret
0x000000000041388d : movzx eax, dil ; pop rbp ; ret
0x0000000000409469 : mul dword ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000040946a : mul dword ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x0000000000422340 : nop ; cmp edi, edi ; call rdx
0x000000000041a6e0 : nop ; inc byte ptr [rcx] ; jmp rcx
0x000000000041cde8 : nop dword ptr [rax + rax] ; ret
0x00000000004107a5 : or al, 0x48 ; add esp, 0x30 ; pop rbp ; ret
0x000000000041aeee : or al, 0xffffffffffffffc5 ; cwde ; add byte ptr [rdx], al ; jmp rcx
0x00000000004151a8 : or al, 0xffffffffffffffc5 ; enter 0x41f5, 0 ; jmp rcx
0x000000000041a65e : or al, 0xffffffffffffffc5 ; lock inc byte ptr [rcx] ; jmp rcx
0x000000000041a6de : or al, 0xffffffffffffffc5 ; nop ; inc byte ptr [rcx] ; jmp rcx
0x0000000000420541 : or bh, bh ; call rsp
0x000000000041571e : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000041571f : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000416fd9 : or byte ptr [rax - 0x75], cl ; push rbp ; clc ; mov rdi, qword ptr [rdx + 0x10] ; call rax
0x0000000000408cad : or byte ptr [rcx + 0x2df9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x0000000000404103 : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000421860 : or dh, 0xfe ; call qword ptr [rax]
0x00000000004165e1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041b9eb : or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x000000000041ba61 : or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000041b9ea : or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x000000000040cba6 : out 0, al ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041388b : out 1, eax ; movzx eax, dil ; pop rbp ; ret
0x000000000041ba60 : out dx, eax ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000411a79 : outsb dx, byte ptr [rsi] ; ret 0x280f
0x000000000041cddc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041cdde : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041989e : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041cde0 : pop r14 ; pop r15 ; ret
0x00000000004198a0 : pop r15 ; pop rbp ; ret
0x000000000041cde2 : pop r15 ; ret
0x0000000000402bd2 : pop rbp ; mov byte ptr [rip + 0x2219de], 1 ; ret
0x0000000000402b71 : pop rbp ; mov edi, 0x624560 ; jmp rax
0x0000000000402bae : pop rbp ; mov rsi, rax ; mov edi, 0x624560 ; jmp rdx
0x000000000041cddb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041cddf : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000402b65 : pop rbp ; ret
0x000000000041989d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000415d0a : pop rbx ; pop rbp ; ret
0x0000000000406ac2 : pop rdi ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004198a1 : pop rdi ; pop rbp ; ret
0x000000000041cde3 : pop rdi ; ret
0x000000000041989f : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000041cde1 : pop rsi ; pop r15 ; ret
0x000000000040cdde : pop rsi ; shl dword ptr [rsi + 0xf], 1 ; ret 0x860f
0x00000000004204c0 : pop rsp ; in eax, -2 ; call rsp
0x000000000041cddd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000411a90 : pop rsp ; ret 0xf66
0x0000000000420480 : pop rsp ; sar esi, cl ; call rsp
0x00000000004205c0 : pop rsp ; sbb bh, bh ; call rsp
0x00000000004163bf : popfq ; ret 0xfffe
0x000000000041aaf4 : push 0x48fffe7e ; add esp, 0x60 ; pop rbp ; ret
0x00000000004058d7 : push rax ; add dword ptr [rax], eax ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000421640 : push rax ; mov ch, -2 ; jmp qword ptr [rax]
0x0000000000422e20 : push rax ; mov edi, dr1 ; jmp qword ptr [rdi]
0x0000000000405099 : push rax ; pop rbp ; ret
0x0000000000410a82 : push rbp ; call 0x1d038bd4
0x0000000000410bc0 : push rbp ; call 0x1d038d12
0x0000000000410c36 : push rbp ; call 0x1d038d88
0x0000000000416004 : push rbp ; call 0xffffffffe08ee95a
0x000000000041c375 : push rbp ; clc ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000416fdc : push rbp ; clc ; mov rdi, qword ptr [rdx + 0x10] ; call rax
0x0000000000413c45 : push rbp ; clc ; mov rsi, qword ptr [rdx + rcx*8 + 8] ; call rax
0x000000000041cc6a : push rbp ; clc ; pop rbp ; ret
0x000000000041413b : push rbp ; fmul dword ptr [rax + 0x29] ; ror byte ptr [rax - 0x77], 1 ; ret 0xe8e8
0x0000000000415722 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000408156 : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x80
0x00000000004178f8 : push rbp ; mov ah, -0x7f ; ret 1
0x0000000000417917 : push rbp ; mov ah, -0x7f ; ret 2
0x0000000000417936 : push rbp ; mov ah, -0x7f ; ret 3
0x0000000000417955 : push rbp ; mov ah, -0x7f ; ret 4
0x0000000000417974 : push rbp ; mov ah, -0x7f ; ret 5
0x0000000000417993 : push rbp ; mov ah, -0x7f ; ret 6
0x00000000004179b2 : push rbp ; mov ah, -0x7f ; ret 7
0x0000000000417c60 : push rbp ; mov al, -0x7f ; ret 1
0x0000000000417c7f : push rbp ; mov al, -0x7f ; ret 2
0x0000000000417c9e : push rbp ; mov al, -0x7f ; ret 3
0x0000000000417cbd : push rbp ; mov al, -0x7f ; ret 4
0x0000000000417cdc : push rbp ; mov al, -0x7f ; ret 5
0x0000000000417cfb : push rbp ; mov al, -0x7f ; ret 6
0x0000000000417d1a : push rbp ; mov al, -0x7f ; ret 7
0x0000000000402bf4 : push rbp ; mov edi, 0x623e10 ; mov rbp, rsp ; call rax
0x0000000000410be5 : push rbp ; ror byte ptr [rax + 1], 1 ; ret 0x8948
0x000000000040e8b5 : push rbp ; ror byte ptr [rax - 0x77], 1 ; ret 0x81e8
0x000000000041a1bb : push rbp ; ror byte ptr [rax - 0x77], 1 ; ret 0x8b4c
0x000000000041c58d : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x0000000000415dee : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000040bd00 : push rcx ; sub byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000040bd13 : push rcx ; xor byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000040e5ce : push rsi ; mov rax, qword ptr [rbp - 0x10] ; mov byte ptr [rax], 0 ; pop rbp ; ret
0x00000000004206c0 : pushfq ; cmp edi, edi ; call rsp
0x0000000000420300 : pushfq ; test edi, esi ; call rsp
0x000000000041ba5e : rcl ebx, -0x11 ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000041ba8e : rcl ebx, -0x19 ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000400648 : ret
0x0000000000407e2a : ret 0
0x000000000040ae17 : ret 0x10
0x000000000040d638 : ret 0x12e8
0x0000000000410a11 : ret 0x148
0x000000000040eeb6 : ret 0x14e8
0x0000000000418cb9 : ret 0x1a8
0x000000000040ee92 : ret 0x1c
0x000000000040d67c : ret 0x1ee8
0x00000000004067e9 : ret 0x21e8
0x0000000000402932 : ret 0x2219
0x0000000000402732 : ret 0x221a
0x0000000000402532 : ret 0x221b
0x0000000000411a7a : ret 0x280f
0x00000000004083ef : ret 0x2b48
0x000000000040642c : ret 0x2ee8
0x0000000000413d8b : ret 0x30
0x000000000040801d : ret 0x40
0x0000000000405d35 : ret 0x41eb
0x000000000040e623 : ret 0x4240
0x0000000000406df6 : ret 0x44e8
0x0000000000418cb6 : ret 0x458a
0x000000000040ca71 : ret 0x49e8
0x0000000000408eec : ret 0x5588
0x000000000041821e : ret 0x5589
0x0000000000407c5b : ret 0x5fe8
0x000000000040887f : ret 0x6be8
0x000000000041168a : ret 0x7b
0x0000000000406643 : ret 0x7e8
0x000000000040815a : ret 0x80
0x0000000000418553 : ret 0x8148
0x000000000040e8b9 : ret 0x81e8
0x0000000000406f8c : ret 0x8341
0x0000000000412383 : ret 0x8348
0x0000000000418ca3 : ret 0x840f
0x000000000040cde3 : ret 0x860f
0x0000000000416b44 : ret 0x86e8
0x0000000000419399 : ret 0x8844
0x0000000000410a14 : ret 0x8941
0x000000000040a814 : ret 0x8948
0x000000000041584d : ret 0x89a5
0x000000000040b470 : ret 0x8a44
0x0000000000405f09 : ret 0x8b48
0x000000000041a1bf : ret 0x8b4c
0x000000000040d8f4 : ret 0x8d0f
0x0000000000405b8b : ret 0x944
0x0000000000408cb6 : ret 0x9588
0x000000000040acaa : ret 0x9c
0x000000000040aa89 : ret 0xa1e8
0x000000000040ad41 : ret 0xa9e8
0x000000000040a23b : ret 0xafe8
0x0000000000403b5e : ret 0xb0
0x0000000000418022 : ret 0xb8e8
0x00000000004057de : ret 0xb948
0x0000000000402b95 : ret 0xc148
0x00000000004168b3 : ret 0xd284
0x000000000040cadd : ret 0xdde8
0x000000000040410c : ret 0xe280
0x000000000040724a : ret 0xe8
0x0000000000414142 : ret 0xe8e8
0x0000000000404fd3 : ret 0xea83
0x0000000000415d3c : ret 0xee8
0x000000000041573b : ret 0xefe8
0x000000000040d0ca : ret 0xf0e8
0x0000000000410bd9 : ret 0xf1e8
0x0000000000405b9d : ret 0xf280
0x000000000040b2a2 : ret 0xf41
0x0000000000411a91 : ret 0xf66
0x000000000041c59a : ret 0xfe62
0x0000000000412dd0 : ret 0xff3
0x000000000040af9a : ret 0xff79
0x0000000000406eda : ret 0xffb6
0x00000000004066c8 : ret 0xffe0
0x0000000000407faa : ret 0xfff5
0x000000000040be7a : ret 0xfff6
0x0000000000404d2a : ret 0xfffe
0x0000000000403c54 : ret 0xffff
0x0000000000400d80 : ret 1
0x00000000004005e8 : ret 2
0x0000000000417939 : ret 3
0x000000000041731a : ret 4
0x0000000000417977 : ret 5
0x0000000000417996 : ret 6
0x00000000004179b5 : ret 7
0x000000000040a74a : ret 8
0x0000000000413ab2 : retf -0x74b8 ; jne 0x413a94 ; call rax
0x0000000000413c76 : retf -0x74b8 ; jne 0x413c58 ; call rax
0x0000000000408473 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040e1e6 : rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000404ff1 : rol byte ptr [rcx], 1 ; jmp rcx
0x000000000040cb7c : rol dword ptr [rax - 0x49f0fe1f], -0x3f ; pop rbp ; ret
0x0000000000410bbc : ror byte ptr [r8 - 0x75], 1 ; push rbp ; call 0x1d038d16
0x00000000004199db : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000414e10 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x414e7b ; ret
0x000000000040cf4e : ror byte ptr [r8 - 0x7d], -0x3c ; pop rbp ; ret
0x0000000000410be6 : ror byte ptr [rax + 1], 1 ; ret 0x8948
0x0000000000402b9c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x402bab ; pop rbp ; ret
0x0000000000417819 : ror byte ptr [rax - 0x75], 1 ; jne 0x4177f7 ; mov rax, qword ptr [rsi] ; pop rbp ; ret
0x0000000000410bbd : ror byte ptr [rax - 0x75], 1 ; push rbp ; call 0x1d038d15
0x0000000000408185 : ror byte ptr [rax - 0x77], -0x38 ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004199dc : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x000000000040e8b6 : ror byte ptr [rax - 0x77], 1 ; ret 0x81e8
0x000000000041a1bc : ror byte ptr [rax - 0x77], 1 ; ret 0x8b4c
0x000000000041413f : ror byte ptr [rax - 0x77], 1 ; ret 0xe8e8
0x0000000000414e11 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x414e7a ; ret
0x000000000040cf4f : ror byte ptr [rax - 0x7d], -0x3c ; pop rbp ; ret
0x0000000000412b3d : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x00000000004069a4 : ror byte ptr [rax - 0x7f], -0x3c ; and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000407ed7 : ror byte ptr [rax - 0x7f], -0x3c ; mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041c58e : ror byte ptr [rax - 0x7f], 1 ; ret 1
0x0000000000415def : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000417930 : ror dword ptr [rax - 0x77], 0x4d ; loopne 0x4178ca ; push rbp ; mov ah, -0x7f ; ret 3
0x0000000000417c98 : ror dword ptr [rax - 0x77], 0x4d ; loopne 0x417c32 ; push rbp ; mov al, -0x7f ; ret 3
0x000000000041498e : ror dword ptr [rcx - 0x3b7cb738], 0x30 ; pop rbp ; ret
0x000000000041cd6a : sal dl, 1 ; addps xmm1, xmm2 ; movaps xmm0, xmm1 ; pop rbp ; ret
0x0000000000414846 : salc ; mov es, word ptr [rax] ; add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x0000000000421921 : sar dh, cl ; call qword ptr [rsi]
0x0000000000402b9e : sar eax, 1 ; jne 0x402ba9 ; pop rbp ; ret
0x00000000004203f9 : sar esi, -1 ; mov ah, 0x13 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret
0x00000000004219c1 : sar esi, cl ; call qword ptr [rsi]
0x0000000000420481 : sar esi, cl ; call rsp
0x0000000000402b9d : sar rax, 1 ; jne 0x402baa ; pop rbp ; ret
0x00000000004205bd : sbb al, byte ptr [rax] ; add byte ptr [rax + rbx - 1], bl ; call rsp
0x0000000000421fa1 : sbb bh, bh ; call rbx
0x00000000004205c1 : sbb bh, bh ; call rsp
0x000000000042053d : sbb byte ptr [rax], al ; add ah, ch ; or bh, bh ; call rsp
0x0000000000421fe0 : sbb byte ptr [rcx], -1 ; call qword ptr [rbx]
0x0000000000422000 : sbb byte ptr [rcx], -1 ; jmp qword ptr [rdi]
0x0000000000402bd6 : sbb dword ptr [rdx], esp ; add byte ptr [rcx], al ; ret
0x00000000004205fd : sbb eax, dword ptr [rax] ; add byte ptr [rsi + rbx - 1], cl ; call rsp
0x0000000000421fe1 : sbb edi, edi ; call qword ptr [rbx]
0x0000000000422001 : sbb edi, edi ; jmp qword ptr [rdi]
0x0000000000412204 : sete al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000412206 : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000411aaf : shl dword ptr [rsi + 0xf], 0x5c ; ret 0xf66
0x000000000040cddf : shl dword ptr [rsi + 0xf], 1 ; ret 0x860f
0x000000000041ba8f : shl edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000041ba28 : shl edx, cl ; or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x000000000041a128 : shr al, -0x1e ; ret 0xffff
0x0000000000421020 : shr byte ptr [rsi - 2], 1 ; jmp qword ptr [rcx]
0x000000000041ba5f : shr edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000041b9e8 : shr edx, cl ; or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x000000000041a127 : shr r8b, -0x1e ; ret 0xffff
0x00000000004202fd : sldt word ptr [rax] ; pushfq ; test edi, esi ; call rsp
0x0000000000408caf : stc ; sub eax, 0xf000000 ; xchg eax, esp ; ret 0x9588
0x000000000041a10f : std ; ret 0xffff
0x000000000041bc48 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000420a3d : sub al, 0 ; add byte ptr [rcx + rdi*4 - 1], bl ; call rsp
0x00000000004209bd : sub al, byte ptr [rax] ; add byte ptr [rax + rbp*4 - 1], cl ; call rsp
0x000000000040bd01 : sub byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000041cd70 : sub cl, al ; pop rbp ; ret
0x000000000040aca4 : sub dh, -1 ; dec dword ptr [rax - 0x7f] ; ret 0x9c
0x0000000000408cb0 : sub eax, 0xf000000 ; xchg eax, esp ; ret 0x9588
0x00000000004209fd : sub eax, dword ptr [rax] ; add ah, bl ; mov ch, -1 ; call rsp
0x000000000041ce41 : sub esp, 8 ; add rsp, 8 ; ret
0x000000000041ce40 : sub rsp, 8 ; add rsp, 8 ; ret
0x00000000004209c1 : test al, -1 ; call rsp
0x000000000041cdea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000422e1c : test byte ptr [rdx], ah ; add byte ptr [rax], al ; push rax ; mov edi, dr1 ; jmp qword ptr [rdi]
0x0000000000422ce1 : test edi, edi ; jmp rax
0x0000000000420301 : test edi, esi ; call rsp
0x0000000000408eeb : xchg eax, ebp ; ret 0x5588
0x0000000000408db9 : xchg eax, ebp ; ret 0x9588
0x000000000040410b : xchg eax, ebp ; ret 0xe280
0x0000000000405b9c : xchg eax, ebp ; ret 0xf280
0x000000000041c2ee : xchg eax, edi ; ret 0xe280
0x0000000000411a8a : xchg eax, edx ; mov esp, 0xf660000 ; pop rsp ; ret 0xf66
0x000000000040c336 : xchg eax, edx ; ret 0xe280
0x0000000000418967 : xchg eax, esi ; ret 0xe280
0x0000000000406f84 : xchg eax, esi ; ret 0xf280
0x0000000000408cb5 : xchg eax, esp ; ret 0x9588
0x00000000004168b2 : xchg eax, esp ; ret 0xd284
0x000000000040cb7b : xchg eax, esp ; rol dword ptr [rax - 0x49f0fe1f], -0x3f ; pop rbp ; ret
0x0000000000412205 : xchg eax, esp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000041b9ec : xlatb ; mov rax, rdi ; pop rbp ; ret
0x0000000000406424 : xor al, 0x25 ; mov al, -0x14 ; add byte ptr [r8 - 0x77], cl ; ret 0x2ee8
0x000000000040bd14 : xor byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000040771d : xor byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041c99e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000414c86 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
