0x000000000040ea03 : adc dword ptr [rax - 0x7f], ecx ; ret 1
0x0000000000403dc9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000400dd8 : adc ebp, dword ptr [rcx + 0x69] ; or eax, 0x40000 ; ret
0x00000000004108f1 : adc edi, edi ; jmp rdx
0x0000000000410b53 : add ah, ch ; add al, byte ptr [rax] ; add al, bl ; sub al, -1 ; call qword ptr [rbx]
0x0000000000400dde : add al, 0 ; ret
0x00000000004104db : add al, ah ; xor edi, edi ; call qword ptr [rax]
0x0000000000410b57 : add al, bl ; sub al, -1 ; call qword ptr [rbx]
0x0000000000410b55 : add al, byte ptr [rax] ; add al, bl ; sub al, -1 ; call qword ptr [rbx]
0x000000000040e4a4 : add al, byte ptr [rax] ; add byte ptr [rcx - 0xdf43], al ; call qword ptr [rax]
0x000000000040866e : add al, byte ptr [rcx] ; jmp rcx
0x000000000041059b : add al, dl ; cmp al, -1 ; call qword ptr [rax]
0x000000000040ed3f : add bl, dh ; ret
0x00000000004077b3 : add byte ptr [r8 - 0x77], cl ; call 0xffffffffffde3aac
0x0000000000400ddd : add byte ptr [rax + rax], al ; ret
0x00000000004061b3 : add byte ptr [rax - 0x73], cl ; or al, 0x25 ; ret 0x40fd
0x000000000040c40f : add byte ptr [rax - 0x75], cl ; clc ; mov rsp, rbp ; pop rbp ; ret
0x00000000004037f5 : add byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x000000000040c515 : add byte ptr [rax - 0x75], cl ; loopne 0x40c57e ; ret
0x000000000040d239 : add byte ptr [rax - 0x75], cl ; push rbp ; call 0x21035391
0x0000000000406948 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x00000000004077b4 : add byte ptr [rax - 0x77], cl ; call 0xffffffffffde3aab
0x000000000040db56 : add byte ptr [rax - 0x77], cl ; fsubr st(1) ; ret 0xffff
0x0000000000409df5 : add byte ptr [rax - 0x77], cl ; ret 0x22e8
0x0000000000409d7c : add byte ptr [rax - 0x77], cl ; ret 0x9be8
0x000000000041058b : add byte ptr [rax], ah ; cmp edi, edi ; call rax
0x00000000004104cb : add byte ptr [rax], ah ; xor edi, edi ; call rax
0x0000000000400ddc : add byte ptr [rax], al ; add al, 0 ; ret
0x000000000040ed3d : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040c513 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; loopne 0x40c580 ; ret
0x000000000040d237 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbp ; call 0x21035393
0x000000000040db54 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fsubr st(1) ; ret 0xffff
0x000000000040ed3b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000400330 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x0000000000400332 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x0000000000404324 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040c512 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x20] ; pop rbp ; ret
0x000000000040ed3c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400334 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x000000000040327d : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040e635 : add byte ptr [rax], al ; add byte ptr [rcx - 0xdf43], al ; call qword ptr [rax]
0x00000000004105ca : add byte ptr [rax], al ; add byte ptr [rcx - 1], al ; call rax
0x00000000004037a9 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5588
0x000000000040bc07 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x000000000040623e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004105da : add byte ptr [rax], al ; add byte ptr [rdx - 1], al ; call qword ptr [rax]
0x000000000040375b : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004056d0 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402ed6 : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000402706 : add byte ptr [rax], al ; add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x0000000000401553 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000041074a : add byte ptr [rax], al ; and byte ptr [rbx - 1], ch ; call rax
0x000000000041054a : add byte ptr [rax], al ; cmp byte ptr [rax], -1 ; call rax
0x0000000000411656 : add byte ptr [rax], al ; cmp byte ptr [rsi - 1], ah ; jmp rax
0x000000000041055a : add byte ptr [rax], al ; cmp edi, edi ; call qword ptr [rax]
0x0000000000410b56 : add byte ptr [rax], al ; fsubr dword ptr [rdi + rdi*8] ; call qword ptr [rbx]
0x0000000000410b52 : add byte ptr [rax], al ; in al, dx ; add al, byte ptr [rax] ; add al, bl ; sub al, -1 ; call qword ptr [rbx]
0x0000000000401729 : add byte ptr [rax], al ; jmp 0x401569
0x000000000040c65f : add byte ptr [rax], al ; mov dword ptr [rbp - 4], eax ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000404512 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000404326 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040c514 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x20] ; pop rbp ; ret
0x00000000004037f4 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000410af2 : add byte ptr [rax], al ; mov word ptr [rdx], es ; add byte ptr [rax], al ; sub al, -1 ; jmp qword ptr [rbx]
0x0000000000410d56 : add byte ptr [rax], al ; pop rax ; xor bh, bh ; jmp qword ptr [rbx]
0x0000000000402c68 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040680b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040327e : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000405698 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000410802 : add byte ptr [rax], al ; push rax ; ret 0xffff
0x000000000040ed3e : add byte ptr [rax], al ; ret
0x0000000000400336 : add byte ptr [rax], al ; ret 1
0x000000000041059a : add byte ptr [rax], al ; sar byte ptr [rdi + rdi*8], 1 ; call qword ptr [rax]
0x000000000041071a : add byte ptr [rax], al ; shr byte ptr [rcx - 1], 1 ; call qword ptr [rax]
0x0000000000410af6 : add byte ptr [rax], al ; sub al, -1 ; jmp qword ptr [rbx]
0x0000000000410d92 : add byte ptr [rax], al ; sub al, 5 ; add byte ptr [rax], al ; xor rdi, rdi ; call qword ptr [rdx]
0x0000000000410d96 : add byte ptr [rax], al ; xor rdi, rdi ; call qword ptr [rdx]
0x0000000000410db6 : add byte ptr [rax], al ; xor rdi, rdi ; call qword ptr [rsi]
0x000000000040680c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040327f : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000405699 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000400dd7 : add byte ptr [rbx], dl ; imul ebp, dword ptr [rcx + 0xd], 0x40000 ; ret
0x000000000040c660 : add byte ptr [rcx + 0x458bfc45], cl ; cld ; pop rbp ; ret
0x000000000040e4a6 : add byte ptr [rcx - 0xdf43], al ; call qword ptr [rax]
0x00000000004105cc : add byte ptr [rcx - 1], al ; call rax
0x0000000000401a98 : add byte ptr [rcx], al ; ret
0x00000000004037ab : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5588
0x000000000040bc09 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x0000000000406240 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004105dc : add byte ptr [rdx - 1], al ; call qword ptr [rax]
0x0000000000405928 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040680a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000405697 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040e560 : add dword ptr [rax], eax ; add byte ptr [rcx - 0xdf43], al ; call qword ptr [rax]
0x000000000040a299 : add dword ptr [rcx], eax ; jmp rcx
0x000000000040381e : add dword ptr [rdi], ecx ; mov dh, -0x3f ; pop rbp ; ret
0x00000000004041e6 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040741d : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040c464 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040397a : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401a94 : add eax, 0x21087e ; add ebx, esi ; ret
0x0000000000408643 : add eax, 0x8301148b ; ret 0x89ee
0x000000000040e3e6 : add eax, dword ptr [rcx] ; jmp rcx
0x0000000000401a5b : add eax, edx ; sar rax, 1 ; jne 0x401a6c ; pop rbp ; ret
0x0000000000401a99 : add ebx, esi ; ret
0x0000000000401c8b : add esp, 0x10 ; pop rbp ; ret
0x0000000000407c7c : add esp, 0x130 ; pop rbp ; ret
0x0000000000405694 : add esp, 0x138 ; pop rbx ; pop rbp ; ret
0x0000000000406afc : add esp, 0x1a0 ; pop rbp ; ret
0x000000000040d1de : add esp, 0x1b8 ; pop rbp ; ret
0x000000000040ecbb : add esp, 0x1c0 ; pop rbp ; ret
0x00000000004022aa : add esp, 0x20 ; pop rbp ; ret
0x0000000000402c64 : add esp, 0x2d0 ; pop rbp ; ret
0x0000000000401d6d : add esp, 0x30 ; pop rbp ; ret
0x0000000000402ed9 : add esp, 0x40 ; pop rbp ; ret
0x0000000000405d0c : add esp, 0x50 ; pop rbp ; ret
0x0000000000402709 : add esp, 0x58 ; pop rbx ; pop rbp ; ret
0x0000000000403002 : add esp, 0x60 ; pop rbp ; ret
0x00000000004030d8 : add esp, 0x68 ; pop rbx ; pop rbp ; ret
0x00000000004047a3 : add esp, 0x70 ; pop rbp ; ret
0x000000000040584e : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000402e5d : add esp, 0x80 ; pop rbp ; ret
0x0000000000405c1d : add esp, 0x90 ; pop rbp ; ret
0x0000000000406994 : add esp, 0xa0 ; pop rbp ; ret
0x0000000000401556 : add esp, 8 ; ret
0x0000000000401a5a : add rax, rdx ; sar rax, 1 ; jne 0x401a6d ; pop rbp ; ret
0x0000000000401c8a : add rsp, 0x10 ; pop rbp ; ret
0x0000000000407c7b : add rsp, 0x130 ; pop rbp ; ret
0x0000000000405693 : add rsp, 0x138 ; pop rbx ; pop rbp ; ret
0x0000000000406afb : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000040d1dd : add rsp, 0x1b8 ; pop rbp ; ret
0x000000000040ecba : add rsp, 0x1c0 ; pop rbp ; ret
0x00000000004022a9 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000402c63 : add rsp, 0x2d0 ; pop rbp ; ret
0x0000000000401d6c : add rsp, 0x30 ; pop rbp ; ret
0x0000000000402ed8 : add rsp, 0x40 ; pop rbp ; ret
0x0000000000405d0b : add rsp, 0x50 ; pop rbp ; ret
0x0000000000402708 : add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x0000000000403001 : add rsp, 0x60 ; pop rbp ; ret
0x00000000004030d7 : add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x00000000004047a2 : add rsp, 0x70 ; pop rbp ; ret
0x000000000040584d : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000402e5c : add rsp, 0x80 ; pop rbp ; ret
0x0000000000405c1c : add rsp, 0x90 ; pop rbp ; ret
0x0000000000406993 : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000401555 : add rsp, 8 ; ret
0x0000000000401a34 : and ah, byte ptr [rcx] ; jmp rax
0x0000000000401a74 : and ah, byte ptr [rcx] ; jmp rdx
0x0000000000403979 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041074c : and byte ptr [rbx - 1], ch ; call rax
0x000000000040381c : and cl, 1 ; movzx eax, cl ; pop rbp ; ret
0x0000000000401a97 : and dword ptr [rax], eax ; add ebx, esi ; ret
0x0000000000405c57 : and eax, 0x48fffffd ; add esp, 0x20 ; pop rbp ; ret
0x0000000000403f0f : and eax, 0x6123d8 ; pop rbp ; ret
0x0000000000403f33 : and eax, 0x6123e0 ; pop rbp ; ret
0x0000000000404452 : and esp, dword ptr [rcx] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403f11 : and esp, dword ptr [rcx] ; pop rbp ; ret
0x0000000000402358 : call 0x202a4a8
0x000000000040d23d : call 0x2103538d
0x000000000040ea00 : call 0x48527553
0x000000000040e9ff : call 0x48527554
0x00000000004042e2 : call 0x4902cc32
0x00000000004042e1 : call 0x4902cc33
0x00000000004042e2 : call 0x4902cc35
0x00000000004042e1 : call 0x4902cc36
0x00000000004031f7 : call 0x902b347
0x0000000000402d13 : call 0xffffffffb102b663
0x00000000004056c9 : call 0xffffffffe902e019
0x00000000004056c8 : call 0xffffffffe902e01a
0x00000000004077b8 : call 0xffffffffffde3aa7
0x00000000004077b7 : call 0xffffffffffde3aa8
0x000000000040ed19 : call qword ptr [r12 + rbx*8]
0x000000000040e3f0 : call qword ptr [rax]
0x000000000040e6cc : call qword ptr [rbx]
0x000000000040e62e : call qword ptr [rcx]
0x000000000040886e : call qword ptr [rdx]
0x000000000040e663 : call qword ptr [rsi]
0x000000000040ed1a : call qword ptr [rsp + rbx*8]
0x0000000000401abd : call rax
0x00000000004117fb : call rbx
0x0000000000410ffb : call rdx
0x0000000000407c7a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x0000000000406cff : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403739 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040393c : clc ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000401a5f : clc ; jne 0x401a68 ; pop rbp ; ret
0x00000000004037f2 : clc ; mov byte ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000404655 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000403d4b : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040c413 : clc ; mov rsp, rbp ; pop rbp ; ret
0x00000000004037f9 : clc ; pop rbp ; ret
0x0000000000407dc6 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040d1dc : cld ; add rsp, 0x1b8 ; pop rbp ; ret
0x000000000040ecb9 : cld ; add rsp, 0x1c0 ; pop rbp ; ret
0x000000000040764b : cld ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407590 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004074cf : cld ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000403d48 : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000407dc3 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407d66 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040758d : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004074cc : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040c663 : cld ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040c666 : cld ; pop rbp ; ret
0x000000000041059d : cmp al, -1 ; call qword ptr [rax]
0x000000000041054d : cmp bh, bh ; call rax
0x000000000041054c : cmp byte ptr [rax], -1 ; call rax
0x0000000000405696 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000411658 : cmp byte ptr [rsi - 1], ah ; jmp rax
0x0000000000401a1d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401a30 ; pop rbp ; ret
0x000000000041055d : cmp edi, edi ; call qword ptr [rax]
0x000000000041058d : cmp edi, edi ; call rax
0x000000000040634c : cwde ; mov rcx, qword ptr [rax*8 + 0x40fdd8] ; jmp rcx
0x000000000040a293 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; nop ; add dword ptr [rcx], eax ; jmp rcx
0x00000000004031f3 : dec dword ptr [rax - 0x75] ; push rbp ; call 0x902b34b
0x00000000004071ce : dec dword ptr [rax - 0x75] ; push rbp ; fmul dword ptr [rax + 1] ; ret 0x8948
0x00000000004092fc : dec dword ptr [rax - 0x77] ; ret 0x8148
0x0000000000407bdf : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000040e162 : dec dword ptr [rcx] ; ret 0x9589
0x000000000040577b : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x00000000004071d2 : fmul dword ptr [rax + 1] ; ret 0x8948
0x00000000004050b3 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040ed1c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000410b58 : fsubr dword ptr [rdi + rdi*8] ; call qword ptr [rbx]
0x000000000040db5a : fsubr st(1) ; ret 0xffff
0x0000000000401c89 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401a30 : hlt ; pop rbp ; mov edi, 0x6122d8 ; jmp rax
0x0000000000400dd9 : imul ebp, dword ptr [rcx + 0xd], 0x40000 ; ret
0x0000000000410b54 : in al, dx ; add al, byte ptr [rax] ; add al, bl ; sub al, -1 ; call qword ptr [rbx]
0x000000000040c416 : in al, dx ; pop rbp ; ret
0x0000000000406950 : int 0x80
0x0000000000401a23 : ja 0x401a2a ; pop rbp ; ret
0x000000000041079d : jae 0x4107a0 ; call qword ptr [rax]
0x0000000000401a2f : je 0x401a2d ; pop rbp ; mov edi, 0x6122d8 ; jmp rax
0x0000000000401a95 : jle 0x401aa5 ; and dword ptr [rax], eax ; add ebx, esi ; ret
0x000000000040172b : jmp 0x401567
0x0000000000409e1f : jmp 0xffffffff8a032737
0x000000000041119b : jmp qword ptr [rax]
0x0000000000410afb : jmp qword ptr [rbx]
0x000000000041107b : jmp qword ptr [rdx]
0x0000000000401a37 : jmp rax
0x0000000000401ee9 : jmp rcx
0x0000000000401a77 : jmp rdx
0x0000000000401a60 : jne 0x401a67 ; pop rbp ; ret
0x000000000041078d : jno 0x410790 ; call rax
0x00000000004047a5 : jo 0x404806 ; ret
0x0000000000405eb4 : jo 0x405f15 ; ret
0x0000000000405fee : jo 0x40604f ; ret
0x0000000000405850 : js 0x4058b0 ; pop rbp ; ret
0x0000000000410598 : lock or dword ptr [rax], eax ; add al, dl ; cmp al, -1 ; call qword ptr [rax]
0x000000000040381d : loope 0x403826 ; movzx eax, cl ; pop rbp ; ret
0x000000000040c519 : loopne 0x40c57a ; ret
0x000000000040c518 : loopne 0x40c57b ; ret
0x0000000000410748 : mov al, 0x10 ; add byte ptr [rax], al ; and byte ptr [rbx - 1], ch ; call rax
0x0000000000405d8b : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000405c1b : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x00000000004105c8 : mov al, 0xa ; add byte ptr [rax], al ; add byte ptr [rcx - 1], al ; call rax
0x0000000000410548 : mov al, 8 ; add byte ptr [rax], al ; cmp byte ptr [rax], -1 ; call rax
0x0000000000403976 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000403f31 : mov byte ptr [0x6123e0], al ; pop rbp ; ret
0x00000000004037f3 : mov byte ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000401a93 : mov byte ptr [rip + 0x21087e], 1 ; ret
0x0000000000403820 : mov dh, -0x3f ; pop rbp ; ret
0x00000000004041e8 : mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040741f : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040c466 : mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040397c : mov dh, -0x40 ; pop rbp ; ret
0x0000000000402d0d : mov dh, 0x4d ; test byte ptr [rax - 0x75], 0x7d ; call 0xffffffffb102b669
0x0000000000403f0d : mov dword ptr [0x6123d8], edi ; pop rbp ; ret
0x0000000000404656 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000404564 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000404618 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040c5dc : mov dword ptr [rbp - 0x18], eax ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000401d69 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402392 : mov dword ptr [rbp - 0x30], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401c87 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040c661 : mov dword ptr [rbp - 4], eax ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000403d49 : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004046ce : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407326 : mov dword ptr [rdx], ecx ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040d1e0 : mov eax, 0x5d000001 ; ret
0x000000000040584c : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000404518 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000406c1b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040415c : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404515 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004040df : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000406eb3 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403ec9 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040455e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000404329 : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040c517 : mov eax, dword ptr [rbp - 0x20] ; pop rbp ; ret
0x000000000040461a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040479f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040584a : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000405d89 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000407dc4 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407649 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040758e : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004074cd : mov eax, dword ptr [rbp - 4] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040c664 : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000406cfd : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403737 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040393a : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040c411 : mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004037f7 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000403323 : mov eax, edx ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401abb : mov ebp, esp ; call rax
0x0000000000401a21 : mov ebp, esp ; ja 0x401a2c ; pop rbp ; ret
0x0000000000401551 : mov ebx, 0x48000002 ; add esp, 8 ; ret
0x0000000000401ee2 : mov ecx, dword ptr [rax*8 + 0x40eda0] ; jmp rcx
0x0000000000404857 : mov ecx, dword ptr [rax*8 + 0x40f8d0] ; jmp rcx
0x0000000000404b37 : mov ecx, dword ptr [rax*8 + 0x40f918] ; jmp rcx
0x000000000040634e : mov ecx, dword ptr [rax*8 + 0x40fdd8] ; jmp rcx
0x000000000040a295 : mov ecx, dword ptr [rax*8 + 0x410190] ; jmp rcx
0x000000000040866a : mov ecx, dword ptr [rax*8 + 0x410218] ; jmp rcx
0x000000000040c6c7 : mov ecx, dword ptr [rax*8 + 0x410240] ; jmp rcx
0x000000000040e3e2 : mov ecx, dword ptr [rax*8 + 0x410318] ; jmp rcx
0x0000000000404561 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401ab5 : mov edi, 0x611e20 ; mov rbp, rsp ; call rax
0x0000000000401a32 : mov edi, 0x6122d8 ; jmp rax
0x0000000000401a72 : mov edi, 0x6122d8 ; jmp rdx
0x000000000040ed17 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000040ed16 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000401a70 : mov esi, eax ; mov edi, 0x6122d8 ; jmp rdx
0x000000000040c415 : mov esp, ebp ; pop rbp ; ret
0x0000000000403f0c : mov qword ptr [0x6123d8], rdi ; pop rbp ; ret
0x000000000040c5db : mov qword ptr [rbp - 0x18], rax ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004046cd : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407325 : mov qword ptr [rdx], rcx ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000405d8a : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040584b : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000406c1a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040415b : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404514 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004040de : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000406eb2 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403ec8 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404328 : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040c516 : mov rax, qword ptr [rbp - 0x20] ; pop rbp ; ret
0x000000000040479e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000405d88 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000406cfc : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403736 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403939 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040c410 : mov rax, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004037f6 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000403322 : mov rax, rdx ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401aba : mov rbp, rsp ; call rax
0x0000000000401a20 : mov rbp, rsp ; ja 0x401a2d ; pop rbp ; ret
0x0000000000401ee1 : mov rcx, qword ptr [rax*8 + 0x40eda0] ; jmp rcx
0x0000000000404856 : mov rcx, qword ptr [rax*8 + 0x40f8d0] ; jmp rcx
0x0000000000404b36 : mov rcx, qword ptr [rax*8 + 0x40f918] ; jmp rcx
0x000000000040634d : mov rcx, qword ptr [rax*8 + 0x40fdd8] ; jmp rcx
0x000000000040a294 : mov rcx, qword ptr [rax*8 + 0x410190] ; jmp rcx
0x0000000000408669 : mov rcx, qword ptr [rax*8 + 0x410218] ; jmp rcx
0x000000000040c6c6 : mov rcx, qword ptr [rax*8 + 0x410240] ; jmp rcx
0x000000000040e3e1 : mov rcx, qword ptr [rax*8 + 0x410318] ; jmp rcx
0x0000000000401a6f : mov rsi, rax ; mov edi, 0x6122d8 ; jmp rdx
0x000000000040c414 : mov rsp, rbp ; pop rbp ; ret
0x0000000000410af4 : mov word ptr [rdx], es ; add byte ptr [rax], al ; sub al, -1 ; jmp qword ptr [rbx]
0x0000000000401ee0 : movabs al, byte ptr [0x40eda0c50c8b48] ; jmp rcx
0x000000000040e55f : movsd dword ptr [rdi], dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xdf43], al ; call qword ptr [rax]
0x000000000040c4ba : movsx eax, cl ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004041e7 : movzx eax, al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040741e : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040c465 : movzx eax, al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040397b : movzx eax, al ; pop rbp ; ret
0x000000000040381f : movzx eax, cl ; pop rbp ; ret
0x000000000040327c : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040a298 : nop ; add dword ptr [rcx], eax ; jmp rcx
0x000000000040ed38 : nop dword ptr [rax + rax] ; ret
0x00000000004061b6 : or al, 0x25 ; ret 0x40fd
0x000000000040c6c8 : or al, 0xffffffffffffffc5 ; add al, byte ptr [rcx] ; jmp rcx
0x000000000040a296 : or al, 0xffffffffffffffc5 ; nop ; add dword ptr [rcx], eax ; jmp rcx
0x00000000004050ae : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x00000000004050af : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x00000000004037a5 : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5588
0x0000000000401a96 : or byte ptr [rcx], ah ; add byte ptr [rcx], al ; ret
0x0000000000410599 : or dword ptr [rax], eax ; add al, dl ; cmp al, -1 ; call qword ptr [rax]
0x0000000000410589 : or dword ptr [rax], eax ; add byte ptr [rax], ah ; cmp edi, edi ; call rax
0x0000000000400ddb : or eax, 0x40000 ; ret
0x0000000000405f71 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004031f1 : out -1, eax ; dec dword ptr [rax - 0x75] ; push rbp ; call 0x902b34d
0x000000000040369c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040ed2c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040369e : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040ed2e : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004036a0 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040ed30 : pop r14 ; pop r15 ; ret
0x0000000000403281 : pop r14 ; pop rbp ; ret
0x00000000004036a2 : pop r15 ; pop rbp ; ret
0x000000000040ed32 : pop r15 ; ret
0x000000000040270b : pop rax ; pop rbx ; pop rbp ; ret
0x0000000000410d58 : pop rax ; xor bh, bh ; jmp qword ptr [rbx]
0x0000000000401a92 : pop rbp ; mov byte ptr [rip + 0x21087e], 1 ; ret
0x0000000000401a31 : pop rbp ; mov edi, 0x6122d8 ; jmp rax
0x0000000000401a6e : pop rbp ; mov rsi, rax ; mov edi, 0x6122d8 ; jmp rdx
0x000000000040ed2b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040369f : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040ed2f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401a25 : pop rbp ; ret
0x000000000040680d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403280 : pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040270c : pop rbx ; pop rbp ; ret
0x00000000004036a3 : pop rdi ; pop rbp ; ret
0x000000000040ed33 : pop rdi ; ret
0x00000000004036a1 : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040ed31 : pop rsi ; pop r15 ; ret
0x0000000000403282 : pop rsi ; pop rbp ; ret
0x000000000040369d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040ed2d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004104c7 : push qword ptr [rax + 0x20000006] ; xor edi, edi ; call rax
0x0000000000410587 : push qword ptr [rax + 0x20000009] ; cmp edi, edi ; call rax
0x0000000000410787 : push qword ptr [rax - 0x7fffffef] ; jno 0x410796 ; call rax
0x0000000000410547 : push qword ptr [rax - 0x7ffffff8] ; cmp bh, bh ; call rax
0x0000000000410597 : push rax ; or dword ptr [rax], eax ; add al, dl ; cmp al, -1 ; call qword ptr [rax]
0x0000000000405d0e : push rax ; pop rbp ; ret
0x0000000000410804 : push rax ; ret 0xffff
0x0000000000410717 : push rax ; sldt word ptr [rax] ; shr byte ptr [rcx - 1], 1 ; call qword ptr [rax]
0x0000000000402357 : push rbp ; call 0x202a4a9
0x000000000040d23c : push rbp ; call 0x2103538e
0x00000000004031f6 : push rbp ; call 0x902b348
0x00000000004071d1 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8948
0x00000000004050b2 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000401ab4 : push rbp ; mov edi, 0x611e20 ; mov rbp, rsp ; call rax
0x000000000040786d : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000040577e : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000400de0 : ret
0x000000000040b27d : ret 0
0x000000000040cbdb : ret 0x10
0x00000000004050cb : ret 0x1fe8
0x000000000040d240 : ret 0x20
0x0000000000401932 : ret 0x2108
0x0000000000401732 : ret 0x2109
0x0000000000409df8 : ret 0x22e8
0x0000000000403305 : ret 0x28
0x00000000004042d7 : ret 0x30
0x00000000004061b8 : ret 0x40fd
0x000000000040cc43 : ret 0x4810
0x00000000004037ae : ret 0x5588
0x00000000004074c9 : ret 0x5589
0x00000000004094de : ret 0x58
0x00000000004042e5 : ret 0x8148
0x0000000000409e22 : ret 0x8589
0x0000000000406309 : ret 0x8844
0x0000000000406d82 : ret 0x8948
0x00000000004051dd : ret 0x89a5
0x0000000000408648 : ret 0x89ee
0x00000000004050b6 : ret 0x8b48
0x0000000000402e37 : ret 0x8b4c
0x000000000040bc0c : ret 0x9588
0x000000000040e164 : ret 0x9589
0x0000000000409d7f : ret 0x9be8
0x0000000000402d16 : ret 0xb0
0x0000000000401a55 : ret 0xc148
0x0000000000407f22 : ret 0xc8e8
0x0000000000406243 : ret 0xd284
0x00000000004056cc : ret 0xee8
0x00000000004027aa : ret 0xf
0x00000000004077ba : ret 0xff9d
0x00000000004042e8 : ret 0xffff
0x0000000000400338 : ret 1
0x0000000000402b77 : ret 8
0x0000000000402c66 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040381b : rol dword ptr [rax - 0x49f0fe1f], -0x3f ; pop rbp ; ret
0x000000000040694b : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x00000000004047a0 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x40480b ; ret
0x0000000000401a5c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401a6b ; pop rbp ; ret
0x000000000040c6c5 : ror byte ptr [rax - 0x75], 1 ; or al, 0xffffffffffffffc5 ; add al, byte ptr [rcx] ; jmp rcx
0x000000000040694c : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x00000000004047a1 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x40480a ; ret
0x000000000040786e : ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000040577f : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000041059c : sar byte ptr [rdi + rdi*8], 1 ; call qword ptr [rax]
0x0000000000401a5e : sar eax, 1 ; jne 0x401a69 ; pop rbp ; ret
0x0000000000401a5d : sar rax, 1 ; jne 0x401a6a ; pop rbp ; ret
0x000000000041071c : shr byte ptr [rcx - 1], 1 ; call qword ptr [rax]
0x0000000000410719 : sldt word ptr [rax] ; shr byte ptr [rcx - 1], 1 ; call qword ptr [rax]
0x00000000004061b1 : std ; add byte ptr [rax - 0x73], cl ; or al, 0x25 ; ret 0x40fd
0x0000000000403978 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000410b59 : sub al, -1 ; call qword ptr [rbx]
0x0000000000410af9 : sub al, -1 ; jmp qword ptr [rbx]
0x0000000000410d94 : sub al, 5 ; add byte ptr [rax], al ; xor rdi, rdi ; call qword ptr [rdx]
0x000000000040ed81 : sub esp, 8 ; add rsp, 8 ; ret
0x000000000040ed80 : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000402d0e : test byte ptr [r8 - 0x75], 0x7d ; call 0xffffffffb102b668
0x0000000000402d0f : test byte ptr [rax - 0x75], 0x7d ; call 0xffffffffb102b667
0x000000000040ed3a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004037ad : xchg eax, ebp ; ret 0x5588
0x000000000040381a : xchg eax, ebp ; rol dword ptr [rax - 0x49f0fe1f], -0x3f ; pop rbp ; ret
0x000000000040bc0b : xchg eax, esp ; ret 0x9588
0x0000000000406242 : xchg eax, esp ; ret 0xd284
0x0000000000410d59 : xor bh, bh ; jmp qword ptr [rbx]
0x0000000000407c7e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004104dd : xor edi, edi ; call qword ptr [rax]
0x0000000000410d99 : xor edi, edi ; call qword ptr [rdx]
0x0000000000410db9 : xor edi, edi ; call qword ptr [rsi]
0x00000000004104cd : xor edi, edi ; call rax
0x0000000000404616 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000410d98 : xor rdi, rdi ; call qword ptr [rdx]
0x0000000000410db8 : xor rdi, rdi ; call qword ptr [rsi]
