0x00000000004017a3 : adc byte ptr [rdx + 0x61], 0 ; jmp rax
0x00000000004017e3 : adc byte ptr [rdx + 0x61], 0 ; jmp rdx
0x000000000040f51b : adc dword ptr [rsi], ecx ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040ec09 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000413a9b : add ah, ah ; or dword ptr [rax], eax ; add al, al ; ret
0x0000000000401d8b : add al, 0x25 ; ret
0x0000000000401d38 : add al, 0x25 ; ret 0x6152
0x00000000004132bc : add al, 2 ; add byte ptr [rax], al ; add byte ptr [rbx], -1 ; call qword ptr [rsi]
0x0000000000412e9b : add al, al ; ret
0x0000000000401f81 : add al, ch ; mov ecx, 0xf6fffff8 ; add al, 0x25 ; ret 0x6152
0x0000000000412ea3 : add al, dh ; ret
0x0000000000412e94 : add bl, -1 ; lcall ptr [rax] ; or eax, dword ptr [rax] ; add al, al ; ret
0x000000000041156f : add bl, dh ; ret
0x0000000000402ab6 : add byte ptr [r8 - 0x77], cl ; ret 0x40e8
0x0000000000402a62 : add byte ptr [r8 - 0x77], cl ; ret 0x94e8
0x0000000000402b0a : add byte ptr [r8 - 0x77], cl ; ret 0xece8
0x0000000000402895 : add byte ptr [r8], r8b ; add dh, dh ; add al, 0x25 ; ret 0x6152
0x0000000000402b84 : add byte ptr [rax + 0x2504f601], dh ; ret
0x00000000004130d3 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; cwde ; loop 0x4130e1 ; jmp rax
0x000000000040d028 : add byte ptr [rax - 0x75], cl ; push rbp ; call 0x59035180
0x000000000040fc18 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000402ab7 : add byte ptr [rax - 0x77], cl ; ret 0x40e8
0x0000000000402a63 : add byte ptr [rax - 0x77], cl ; ret 0x94e8
0x0000000000402b0b : add byte ptr [rax - 0x77], cl ; ret 0xece8
0x000000000040d033 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000004136df : add byte ptr [rax], ah ; mov ah, -1 ; call rdx
0x0000000000413a99 : add byte ptr [rax], al ; add ah, ah ; or dword ptr [rax], eax ; add al, al ; ret
0x00000000004132ba : add byte ptr [rax], al ; add al, 2 ; add byte ptr [rax], al ; add byte ptr [rbx], -1 ; call qword ptr [rsi]
0x000000000041156d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000402b82 : add byte ptr [rax], al ; add byte ptr [rax + 0x2504f601], dh ; ret
0x000000000040d026 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbp ; call 0x59035182
0x000000000040d031 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000041156b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000403837 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041156c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004132be : add byte ptr [rax], al ; add byte ptr [rbx], -1 ; call qword ptr [rsi]
0x00000000004041f5 : add byte ptr [rax], al ; add byte ptr [rcx - 0xfb43], al ; call qword ptr [rax]
0x0000000000402289 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040317d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000403bd7 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000040f4de : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000402439 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000401d87 : add byte ptr [rax], al ; add dh, al ; add al, 0x25 ; ret
0x0000000000402896 : add byte ptr [rax], al ; add dh, dh ; add al, 0x25 ; ret 0x6152
0x000000000040ebca : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403ed7 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040135b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004130d6 : add byte ptr [rax], al ; cwde ; loop 0x4130de ; jmp rax
0x0000000000401519 : add byte ptr [rax], al ; jmp 0x401379
0x000000000040d7b2 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000413a5a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; or dword ptr [rax], eax ; add byte ptr [rax], dl ; ret 0xffff
0x0000000000402bd0 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040fadb : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040cd60 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000412e72 : add byte ptr [rax], al ; push rax ; ret 0xffff
0x000000000041156e : add byte ptr [rax], al ; ret
0x00000000004130d2 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; cwde ; loop 0x4130e2 ; jmp rax
0x0000000000412e6b : add byte ptr [rax], dl ; ret 0xffff
0x000000000040fadc : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040cd61 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000402333 : add byte ptr [rbx - 0x1234b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004132c0 : add byte ptr [rbx], -1 ; call qword ptr [rsi]
0x00000000004041f7 : add byte ptr [rcx - 0xfb43], al ; call qword ptr [rax]
0x0000000000401808 : add byte ptr [rcx], al ; ret
0x000000000040228b : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040317f : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000403bd9 : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000040f4e0 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040243b : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x00000000004132bb : add byte ptr [rdx + rax], al ; add byte ptr [rax], al ; add byte ptr [rbx], -1 ; call qword ptr [rsi]
0x0000000000401d89 : add dh, al ; add al, 0x25 ; ret
0x0000000000401d36 : add dh, al ; add al, 0x25 ; ret 0x6152
0x0000000000402898 : add dh, dh ; add al, 0x25 ; ret 0x6152
0x000000000040ebc8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040fada : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040e937 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000403237 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402d44 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000403196 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004110ca : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401804 : add eax, 0x213aae ; add ebx, esi ; ret
0x000000000040cd5f : add eax, 0x5d5b0000 ; ret
0x00000000004017cb : add eax, edx ; sar rax, 1 ; jne 0x4017dc ; pop rbp ; ret
0x0000000000401809 : add ebx, esi ; ret
0x0000000000401d84 : add ecx, ebp ; wait ; add byte ptr [rax], al ; add dh, al ; add al, 0x25 ; ret
0x00000000004132c1 : add edi, edi ; call qword ptr [rsi]
0x0000000000401d5f : add esi, eax ; add al, 0x25 ; ret 0x6152
0x00000000004023b0 : add esi, eax ; mov rax, rsi ; pop rbp ; ret
0x0000000000402b86 : add esi, esi ; add al, 0x25 ; ret
0x00000000004019eb : add esp, 0x10 ; pop rbp ; ret
0x000000000041108c : add esp, 0x130 ; pop rbp ; ret
0x000000000040e934 : add esp, 0x138 ; pop rbx ; pop rbp ; ret
0x0000000000402bcc : add esp, 0x150 ; pop rbp ; ret
0x000000000040d27b : add esp, 0x170 ; pop rbp ; ret
0x00000000004040c6 : add esp, 0x1a0 ; pop rbp ; ret
0x00000000004106de : add esp, 0x1e0 ; pop rbp ; ret
0x000000000040323c : add esp, 0x20 ; pop rbp ; ret
0x0000000000401acd : add esp, 0x30 ; pop rbp ; ret
0x0000000000402d49 : add esp, 0x40 ; pop rbp ; ret
0x000000000040d05f : add esp, 0x50 ; pop rbp ; ret
0x000000000040cd5c : add esp, 0x578 ; pop rbx ; pop rbp ; ret
0x000000000040319b : add esp, 0x60 ; pop rbp ; ret
0x000000000040da43 : add esp, 0x70 ; pop rbp ; ret
0x000000000040eaee : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040eebd : add esp, 0x90 ; pop rbp ; ret
0x000000000040fc64 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040135e : add esp, 8 ; ret
0x00000000004017ca : add rax, rdx ; sar rax, 1 ; jne 0x4017dd ; pop rbp ; ret
0x00000000004023af : add rsi, rax ; mov rax, rsi ; pop rbp ; ret
0x00000000004019ea : add rsp, 0x10 ; pop rbp ; ret
0x000000000041108b : add rsp, 0x130 ; pop rbp ; ret
0x000000000040e933 : add rsp, 0x138 ; pop rbx ; pop rbp ; ret
0x0000000000402bcb : add rsp, 0x150 ; pop rbp ; ret
0x000000000040d27a : add rsp, 0x170 ; pop rbp ; ret
0x00000000004040c5 : add rsp, 0x1a0 ; pop rbp ; ret
0x00000000004106dd : add rsp, 0x1e0 ; pop rbp ; ret
0x000000000040323b : add rsp, 0x20 ; pop rbp ; ret
0x0000000000401acc : add rsp, 0x30 ; pop rbp ; ret
0x0000000000402d48 : add rsp, 0x40 ; pop rbp ; ret
0x000000000040d05e : add rsp, 0x50 ; pop rbp ; ret
0x000000000040cd5b : add rsp, 0x578 ; pop rbx ; pop rbp ; ret
0x000000000040319a : add rsp, 0x60 ; pop rbp ; ret
0x000000000040da42 : add rsp, 0x70 ; pop rbp ; ret
0x000000000040eaed : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040eebc : add rsp, 0x90 ; pop rbp ; ret
0x000000000040fc63 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040135d : add rsp, 8 ; ret
0x00000000004110c9 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401807 : and dword ptr [rax], eax ; add ebx, esi ; ret
0x000000000040eef7 : and eax, 0x48fffffd ; add esp, 0x20 ; pop rbp ; ret
0x0000000000401d31 : and eax, 0x6152c1 ; add dh, al ; add al, 0x25 ; ret 0x6152
0x0000000000401d5a : and eax, 0x6152c1 ; add esi, eax ; add al, 0x25 ; ret 0x6152
0x000000000040364f : and eax, 0x6152e0 ; pop rbp ; ret
0x0000000000403673 : and eax, 0x6152e8 ; pop rbp ; ret
0x0000000000401fc4 : call 0x401848
0x000000000040328d : call 0x493229e0
0x000000000040328c : call 0x493229e1
0x000000000040ce7f : call 0x59034fcf
0x000000000040d02c : call 0x5903517c
0x000000000040e969 : call 0xffffffffe90372b9
0x000000000040e968 : call 0xffffffffe90372ba
0x0000000000411549 : call qword ptr [r12 + rbx*8]
0x00000000004041fd : call qword ptr [rax]
0x00000000004132c3 : call qword ptr [rsi]
0x000000000041154a : call qword ptr [rsp + rbx*8]
0x000000000040182d : call rax
0x00000000004136e3 : call rdx
0x000000000041108a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x000000000040ffcf : clc ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040f4f1 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040d5c8 : clc ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004017cf : clc ; jne 0x4017d8 ; pop rbp ; ret
0x000000000040d8f5 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000041149b : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004023c7 : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000403a3f : clc ; mov rdi, qword ptr [rbp - 0x10] ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x00000000004023cb : clc ; pop rbp ; ret
0x0000000000412202 : clc ; sal byte ptr [rax - 0x75], 1 ; ret 0xbe30
0x0000000000410746 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004040c4 : cld ; add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000410329 : cld ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000410864 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000411498 : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000410743 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000410326 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000410861 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401806 : cmp ah, byte ptr [rcx] ; add byte ptr [rcx], al ; ret
0x000000000040e936 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040178d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4017a0 ; pop rbp ; ret
0x0000000000402b08 : cmp ebx, dword ptr [rdi] ; add byte ptr [r8 - 0x77], cl ; ret 0xece8
0x00000000004130d8 : cwde ; loop 0x4130dc ; jmp rax
0x000000000040f61c : cwde ; mov rcx, qword ptr [rax*8 + 0x412908] ; jmp rcx
0x000000000040ce7b : dec dword ptr [rax - 0x75] ; push rbp ; call 0x59034fd3
0x0000000000402a7f : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000402339 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000410fef : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000040ea1b : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000040e353 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000041154c : fmul qword ptr [rax - 0x7d] ; ret
0x00000000004019e9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004017a0 : hlt ; pop rbp ; mov edi, 0x615280 ; jmp rax
0x0000000000412188 : in al, 0xe ; out dx, eax ; mov esi, 0xbf597fc7 ; ret 0xa88f
0x00000000004121e2 : in eax, dx ; leave ; ret 0x3b81
0x0000000000402287 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040fc20 : int 0x80
0x0000000000401793 : ja 0x40179a ; pop rbp ; ret
0x00000000004121df : jbe 0x4121ce ; scasb al, byte ptr [rdi] ; in eax, dx ; leave ; ret 0x3b81
0x000000000040179f : je 0x40179d ; pop rbp ; mov edi, 0x615280 ; jmp rax
0x00000000004023c6 : jge 0x4023c7 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000403a42 : jge 0x403a3a ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x000000000040151b : jmp 0x401377
0x0000000000401d85 : jmp 0x401e2d
0x0000000000402894 : jmp 0x4028ee
0x0000000000413883 : jmp qword ptr [rax]
0x0000000000413763 : jmp qword ptr [rdx]
0x00000000004017a7 : jmp rax
0x0000000000401d10 : jmp rcx
0x00000000004017e7 : jmp rdx
0x00000000004017d0 : jne 0x4017d7 ; pop rbp ; ret
0x000000000040d27d : jo 0x40d285 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040d2dd : jo 0x40d2e5 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040da45 : jo 0x40daa6 ; ret
0x000000000040f154 : jo 0x40f1b5 ; ret
0x000000000040f28e : jo 0x40f2ef ; ret
0x0000000000412204 : jo 0x412194 ; ret 0xbe30
0x000000000040cd5e : js 0x40cd6b ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040eaf0 : js 0x40eb50 ; pop rbp ; ret
0x0000000000412e70 : js 0x412e81 ; add byte ptr [rax], al ; push rax ; ret 0xffff
0x0000000000412e77 : lcall ptr [rax - 0x7ffffff6] ; ret 0xffff
0x0000000000412e97 : lcall ptr [rax] ; or eax, dword ptr [rax] ; add al, al ; ret
0x00000000004121e5 : leave ; ret 0x3b81
0x0000000000402ab4 : loop 0x402ada ; add byte ptr [r8 - 0x77], cl ; ret 0x40e8
0x00000000004130d9 : loop 0x4130db ; jmp rax
0x000000000040d44b : loopne 0x40d49b ; add esp, 0x20 ; pop rbp ; ret
0x000000000040d44a : loopne 0x40d49c ; add esp, 0x20 ; pop rbp ; ret
0x00000000004106e0 : loopne 0x4106e8 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004136e1 : mov ah, -1 ; call rdx
0x000000000040f02b : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040eebb : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x00000000004110c6 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000413761 : mov bh, -1 ; jmp qword ptr [rdx]
0x0000000000403671 : mov byte ptr [0x6152e8], al ; pop rbp ; ret
0x0000000000401803 : mov byte ptr [rip + 0x213aae], 1 ; ret
0x00000000004120d1 : mov ch, 0x48 ; pop rbx ; ret 0x3956
0x0000000000403239 : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402d46 : mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000403198 : mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004110cc : mov dh, -0x40 ; pop rbp ; ret
0x000000000040364d : mov dword ptr [0x6152e0], edi ; pop rbp ; ret
0x0000000000403834 : mov dword ptr [rax + 0x50], 0 ; pop rbp ; ret
0x000000000040d8f6 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040d804 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040d8b8 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000403299 : mov dword ptr [rbp - 0x10], edx ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040d449 : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401ac9 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004019e7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000411499 : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040362b : mov dword ptr [rbp - 8], eax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004023c5 : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040d96e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d05b : mov dword ptr [rcx + 0x50], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000403a45 : mov dword ptr [rsi], edi ; pop rbp ; ret
0x000000000040eaec : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000412e80 : mov eax, 0xb000000a ; ret 0xffff
0x000000000040d7b8 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040feeb : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403a22 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d7b5 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040329d : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000410183 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d76d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040d7fe : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040d8ba : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040da3f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040eaea : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040f029 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000410744 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000410327 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000410862 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040ffcd : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040f4ef : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040d5c6 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004023c9 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004023b3 : mov eax, esi ; pop rbp ; ret
0x000000000040182b : mov ebp, esp ; call rax
0x0000000000401791 : mov ebp, esp ; ja 0x40179c ; pop rbp ; ret
0x0000000000402a60 : mov ebx, dword ptr [rsi] ; add byte ptr [r8 - 0x77], cl ; ret 0x94e8
0x0000000000401f83 : mov ecx, 0xf6fffff8 ; add al, 0x25 ; ret 0x6152
0x0000000000401d09 : mov ecx, dword ptr [rax*8 + 0x4115c0] ; jmp rcx
0x000000000040daf7 : mov ecx, dword ptr [rax*8 + 0x412400] ; jmp rcx
0x000000000040ddd7 : mov ecx, dword ptr [rax*8 + 0x412448] ; jmp rcx
0x000000000040f61e : mov ecx, dword ptr [rax*8 + 0x412908] ; jmp rcx
0x000000000040d801 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401825 : mov edi, 0x614e20 ; mov rbp, rsp ; call rax
0x00000000004017a2 : mov edi, 0x615280 ; jmp rax
0x00000000004017e2 : mov edi, 0x615280 ; jmp rdx
0x0000000000403a41 : mov edi, dword ptr [rbp - 0x10] ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x0000000000411547 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000411546 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000041218b : mov esi, 0xbf597fc7 ; ret 0xa88f
0x00000000004017e0 : mov esi, eax ; mov edi, 0x615280 ; jmp rdx
0x000000000040364c : mov qword ptr [0x6152e0], rdi ; pop rbp ; ret
0x0000000000403833 : mov qword ptr [rax + 0x50], 0 ; pop rbp ; ret
0x0000000000403298 : mov qword ptr [rbp - 0x10], rdx ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040362a : mov qword ptr [rbp - 8], rax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004023c4 : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040d96d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d05a : mov qword ptr [rcx + 0x50], rax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000403a44 : mov qword ptr [rsi], rdi ; pop rbp ; ret
0x000000000040f02a : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040eaeb : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x000000000040feea : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403a21 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d7b4 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040329c : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000410182 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d76c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040da3e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040f028 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040ffcc : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040f4ee : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040d5c5 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004023c8 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004023b2 : mov rax, rsi ; pop rbp ; ret
0x000000000040182a : mov rbp, rsp ; call rax
0x0000000000401790 : mov rbp, rsp ; ja 0x40179d ; pop rbp ; ret
0x0000000000401d08 : mov rcx, qword ptr [rax*8 + 0x4115c0] ; jmp rcx
0x000000000040daf6 : mov rcx, qword ptr [rax*8 + 0x412400] ; jmp rcx
0x000000000040ddd6 : mov rcx, qword ptr [rax*8 + 0x412448] ; jmp rcx
0x000000000040f61d : mov rcx, qword ptr [rax*8 + 0x412908] ; jmp rcx
0x0000000000403a40 : mov rdi, qword ptr [rbp - 0x10] ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x00000000004017df : mov rsi, rax ; mov edi, 0x615280 ; jmp rdx
0x0000000000413a5c : movsb byte ptr [rdi], byte ptr [rsi] ; or dword ptr [rax], eax ; add byte ptr [rax], dl ; ret 0xffff
0x0000000000403238 : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402d45 : movzx eax, al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000403197 : movzx eax, al ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004110cb : movzx eax, al ; pop rbp ; ret
0x0000000000411568 : nop dword ptr [rax + rax] ; ret
0x0000000000413abd : or al, byte ptr [rax] ; add al, dh ; ret
0x0000000000412e89 : or al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000412e69 : or al, byte ptr [rax] ; add byte ptr [rax], dl ; ret 0xffff
0x000000000040e34e : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040e34f : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000403223 : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x00000000004121dd : or ch, byte ptr [rdx + 0x76] ; out -0x52, al ; in eax, dx ; leave ; ret 0x3b81
0x0000000000413a9d : or dword ptr [rax], eax ; add al, al ; ret
0x0000000000413a5d : or dword ptr [rax], eax ; add byte ptr [rax], dl ; ret 0xffff
0x0000000000412e99 : or eax, dword ptr [rax] ; add al, al ; ret
0x0000000000412ea1 : or eax, dword ptr [rax] ; add al, dh ; ret
0x000000000040f211 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004121e0 : out -0x52, al ; in eax, dx ; leave ; ret 0x3b81
0x0000000000412ccd : out -2, al ; call qword ptr [rax]
0x000000000041218a : out dx, eax ; mov esi, 0xbf597fc7 ; ret 0xa88f
0x000000000041155c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041155e : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040fade : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000411560 : pop r14 ; pop r15 ; ret
0x000000000040fae0 : pop r15 ; pop rbp ; ret
0x0000000000411562 : pop r15 ; ret
0x000000000040d030 : pop rax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000412e68 : pop rax ; or al, byte ptr [rax] ; add byte ptr [rax], dl ; ret 0xffff
0x0000000000401802 : pop rbp ; mov byte ptr [rip + 0x213aae], 1 ; ret
0x00000000004017a1 : pop rbp ; mov edi, 0x615280 ; jmp rax
0x00000000004017de : pop rbp ; mov rsi, rax ; mov edi, 0x615280 ; jmp rdx
0x000000000041155b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041155f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401795 : pop rbp ; ret
0x000000000040fadd : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040cd62 : pop rbx ; pop rbp ; ret
0x00000000004120d4 : pop rbx ; ret 0x3956
0x000000000040fae1 : pop rdi ; pop rbp ; ret
0x0000000000411563 : pop rdi ; ret
0x000000000040fadf : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000411561 : pop rsi ; pop r15 ; ret
0x000000000041155d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004121de : push 0x76 ; out -0x52, al ; in eax, dx ; leave ; ret 0x3b81
0x000000000040d05c : push r8 ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000403836 : push rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040d05d : push rax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040d061 : push rax ; pop rbp ; ret
0x0000000000412e74 : push rax ; ret 0xffff
0x000000000040ce7e : push rbp ; call 0x59034fd0
0x000000000040d02b : push rbp ; call 0x5903517d
0x000000000040e352 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000401824 : push rbp ; mov edi, 0x614e20 ; mov rbp, rsp ; call rax
0x0000000000410c7d : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000040ea1e : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000401f86 : push rsi ; add al, 0x25 ; ret 0x6152
0x0000000000401d32 : rcl dword ptr [rdx + 0x61], 0 ; add dh, al ; add al, 0x25 ; ret 0x6152
0x0000000000401d5b : rcl dword ptr [rdx + 0x61], 0 ; add esi, eax ; add al, 0x25 ; ret 0x6152
0x0000000000401361 : ret
0x0000000000401722 : ret 0x213a
0x0000000000401522 : ret 0x213b
0x00000000004122b9 : ret 0x21c0
0x00000000004120d5 : ret 0x3956
0x00000000004121e6 : ret 0x3b81
0x0000000000402aba : ret 0x40e8
0x0000000000403293 : ret 0x4240
0x000000000040ce82 : ret 0x58
0x0000000000401d3a : ret 0x6152
0x000000000040d036 : ret 0x80
0x000000000040f5d9 : ret 0x8844
0x000000000040ce11 : ret 0x8948
0x000000000040e47d : ret 0x89a5
0x0000000000402693 : ret 0x8b48
0x0000000000403eb2 : ret 0x8e8
0x0000000000402a66 : ret 0x94e8
0x0000000000412190 : ret 0xa88f
0x0000000000401e71 : ret 0xb0
0x0000000000412207 : ret 0xbe30
0x00000000004017c5 : ret 0xc148
0x000000000040228e : ret 0xd284
0x000000000040243e : ret 0xe280
0x0000000000402b0e : ret 0xece8
0x000000000040e96c : ret 0xee8
0x000000000040e36b : ret 0xffe8
0x0000000000412e6d : ret 0xffff
0x000000000040204e : ret 1
0x000000000040ea22 : ret 8
0x000000000040fc1b : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000040da40 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x40daab ; ret
0x00000000004017cc : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4017db ; pop rbp ; ret
0x000000000040fc1c : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x000000000040da41 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x40daaa ; ret
0x0000000000402d47 : ror byte ptr [rax - 0x7d], -0x3c ; pop rbp ; ret
0x0000000000410c7e : ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000040ea1f : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000412203 : sal byte ptr [rax - 0x75], 1 ; ret 0xbe30
0x000000000040179e : sal byte ptr [rsp + rsi*8 + 0x5d], -0x41 ; adc byte ptr [rdx + 0x61], 0 ; jmp rax
0x0000000000402ad0 : sar dh, -1 ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x00000000004017ce : sar eax, 1 ; jne 0x4017d9 ; pop rbp ; ret
0x00000000004017cd : sar rax, 1 ; jne 0x4017da ; pop rbp ; ret
0x00000000004130d4 : sbb al, 0 ; add byte ptr [rax], al ; cwde ; loop 0x4130e0 ; jmp rax
0x0000000000413a58 : sbb al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; or dword ptr [rax], eax ; add byte ptr [rax], dl ; ret 0xffff
0x00000000004121fe : sbb ch, byte ptr [rax - 0x2f07686f] ; jo 0x41219a ; ret 0xbe30
0x0000000000401805 : scasb al, byte ptr [rdi] ; cmp ah, byte ptr [rcx] ; add byte ptr [rcx], al ; ret
0x00000000004121e1 : scasb al, byte ptr [rdi] ; in eax, dx ; leave ; ret 0x3b81
0x00000000004110c8 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040f622 : sub dword ptr [rcx], eax ; jmp rcx
0x00000000004023ad : sub eax, edx ; add rsi, rax ; mov rax, rsi ; pop rbp ; ret
0x000000000041159d : sub esp, 8 ; add rsp, 8 ; ret
0x000000000041159c : sub rsp, 8 ; add rsp, 8 ; ret
0x00000000004121ff : test al, -0x6f ; xchg eax, edi ; clc ; sal byte ptr [rax - 0x75], 1 ; ret 0xbe30
0x000000000041156a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000401d0b : vunpckhps xmm0, xmm7, xmmword ptr [rcx] ; jmp rcx
0x0000000000401d86 : wait ; add byte ptr [rax], al ; add dh, al ; add al, 0x25 ; ret
0x000000000040228d : xchg eax, ebp ; ret 0xd284
0x0000000000403181 : xchg eax, ebp ; ret 0xe280
0x0000000000402acf : xchg eax, ebp ; sar dh, -1 ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000412200 : xchg eax, ecx ; xchg eax, edi ; clc ; sal byte ptr [rax - 0x75], 1 ; ret 0xbe30
0x0000000000412201 : xchg eax, edi ; clc ; sal byte ptr [rax - 0x75], 1 ; ret 0xbe30
0x0000000000403bdb : xchg eax, edx ; ret 0xd284
0x000000000040f4e2 : xchg eax, esp ; ret 0xd284
0x000000000040243d : xchg eax, esp ; ret 0xe280
0x0000000000402b06 : xor al, 0x25 ; cmp ebx, dword ptr [rdi] ; add byte ptr [r8 - 0x77], cl ; ret 0xece8
0x0000000000402ab2 : xor al, 0x25 ; loop 0x402adc ; add byte ptr [r8 - 0x77], cl ; ret 0x40e8
0x0000000000402a5e : xor al, 0x25 ; mov ebx, dword ptr [rsi] ; add byte ptr [r8 - 0x77], cl ; ret 0x94e8
0x000000000041108e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040d8b6 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
