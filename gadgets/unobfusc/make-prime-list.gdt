0x00000000004010ef : add bl, dh ; ret
0x00000000004010ed : add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004010eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004010ec : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004006e3 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000400799 : add byte ptr [rax], al ; jmp 0x4006f9
0x0000000000401065 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004010ee : add byte ptr [rax], al ; ret
0x0000000000400898 : add byte ptr [rcx], al ; ret
0x0000000000400894 : add eax, 0x201816 ; add ebx, esi ; ret
0x000000000040085b : add eax, edx ; sar rax, 1 ; jne 0x40086c ; pop rbp ; ret
0x0000000000400899 : add ebx, esi ; ret
0x0000000000400b6c : add esp, 0x20 ; pop rbp ; ret
0x0000000000401003 : add esp, 0x40 ; pop rbp ; ret
0x0000000000400e8c : add esp, 0x50 ; pop rbp ; ret
0x0000000000400b2e : add esp, 0x70 ; pop rbp ; ret
0x00000000004006e6 : add esp, 8 ; ret
0x000000000040085a : add rax, rdx ; sar rax, 1 ; jne 0x40086d ; pop rbp ; ret
0x0000000000400b6b : add rsp, 0x20 ; pop rbp ; ret
0x0000000000401002 : add rsp, 0x40 ; pop rbp ; ret
0x0000000000400e8b : add rsp, 0x50 ; pop rbp ; ret
0x0000000000400b2d : add rsp, 0x70 ; pop rbp ; ret
0x00000000004006e5 : add rsp, 8 ; ret
0x0000000000400834 : and byte ptr [rax], ah ; jmp rax
0x0000000000400874 : and byte ptr [rax], ah ; jmp rdx
0x0000000000400897 : and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000401070 : call 0xfffffffff08599c3
0x000000000040106f : call 0xfffffffff08599c4
0x00000000004010c9 : call qword ptr [r12 + rbx*8]
0x00000000004010ca : call qword ptr [rsp + rbx*8]
0x00000000004008bd : call rax
0x000000000040128b : call rsp
0x000000000040085f : clc ; jne 0x400868 ; pop rbp ; ret
0x0000000000400b2c : cld ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040081d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x400830 ; pop rbp ; ret
0x0000000000400833 : cwde ; and byte ptr [rax], ah ; jmp rax
0x0000000000400873 : cwde ; and byte ptr [rax], ah ; jmp rdx
0x0000000000401001 : enter -0x7cb8, -0x3c ; pop rbp ; ret
0x00000000004010cc : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000400830 : hlt ; pop rbp ; mov edi, 0x602098 ; jmp rax
0x0000000000400823 : ja 0x40082a ; pop rbp ; ret
0x000000000040082f : je 0x40082d ; pop rbp ; mov edi, 0x602098 ; jmp rax
0x000000000040079b : jmp 0x4006f7
0x0000000000400837 : jmp rax
0x0000000000400877 : jmp rdx
0x0000000000400860 : jne 0x400867 ; pop rbp ; ret
0x0000000000400b30 : jo 0x400b91 ; ret
0x0000000000400893 : mov byte ptr [rip + 0x201816], 1 ; ret
0x0000000000400fff : mov dword ptr [rbp - 0x38], eax ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000400e88 : mov dword ptr [rbp - 0x48], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000400be7 : mov dword ptr [rdx + 0x10], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000400e8a : mov eax, 0x50c48348 ; pop rbp ; ret
0x0000000000400b68 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401068 : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000400b2a : mov eax, dword ptr [rbp - 4] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004008bb : mov ebp, esp ; call rax
0x0000000000400821 : mov ebp, esp ; ja 0x40082c ; pop rbp ; ret
0x00000000004008b5 : mov edi, 0x601e20 ; mov rbp, rsp ; call rax
0x0000000000400832 : mov edi, 0x602098 ; jmp rax
0x0000000000400872 : mov edi, 0x602098 ; jmp rdx
0x00000000004010c7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x00000000004010c6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000400870 : mov esi, eax ; mov edi, 0x602098 ; jmp rdx
0x0000000000400be6 : mov qword ptr [rdx + 0x10], rax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000400e89 : mov r8d, 0x50c48348 ; pop rbp ; ret
0x0000000000400b67 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401067 : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004008ba : mov rbp, rsp ; call rax
0x0000000000400820 : mov rbp, rsp ; ja 0x40082d ; pop rbp ; ret
0x000000000040086f : mov rsi, rax ; mov edi, 0x602098 ; jmp rdx
0x00000000004010e8 : nop dword ptr [rax + rax] ; ret
0x00000000004010dc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004010de : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004010e0 : pop r14 ; pop r15 ; ret
0x00000000004010e2 : pop r15 ; ret
0x0000000000400892 : pop rbp ; mov byte ptr [rip + 0x201816], 1 ; ret
0x0000000000400831 : pop rbp ; mov edi, 0x602098 ; jmp rax
0x000000000040086e : pop rbp ; mov rsi, rax ; mov edi, 0x602098 ; jmp rdx
0x00000000004010db : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004010df : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000400825 : pop rbp ; ret
0x00000000004010e3 : pop rdi ; ret
0x00000000004010e1 : pop rsi ; pop r15 ; ret
0x00000000004010dd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000400e8e : push rax ; pop rbp ; ret
0x00000000004008b4 : push rbp ; mov edi, 0x601e20 ; mov rbp, rsp ; call rax
0x00000000004006e9 : ret
0x00000000004007a2 : ret 0x2018
0x0000000000400e0b : ret 0x8b48
0x0000000000400b0c : ret 0xb0
0x0000000000400855 : ret 0xc148
0x0000000000401076 : ret 0xffff
0x00000000004009eb : ret 1
0x00000000004009e3 : ror byte ptr [r11 - 0x35763bb3], -0x7f ; ret 1
0x000000000040085c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40086b ; pop rbp ; ret
0x00000000004009e4 : ror byte ptr [rbx - 0x35763bb3], -0x7f ; ret 1
0x000000000040082e : sal byte ptr [rsp + rsi*8 + 0x5d], -0x41 ; cwde ; and byte ptr [rax], ah ; jmp rax
0x000000000040085e : sar eax, 1 ; jne 0x400869 ; pop rbp ; ret
0x000000000040085d : sar rax, 1 ; jne 0x40086a ; pop rbp ; ret
0x0000000000400896 : sbb byte ptr [rax], ah ; add byte ptr [rcx], al ; ret
0x00000000004010f5 : sub esp, 8 ; add rsp, 8 ; ret
0x00000000004010f4 : sub rsp, 8 ; add rsp, 8 ; ret
0x00000000004010ea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
