0x00000000004039aa : adc al, -0x33 ; rcl bl, 0x60 ; add byte ptr [rax - 0x7f], cl ; ret 1
0x00000000004062b9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040b853 : add ah, al ; add eax, dword ptr [rax] ; add al, bl ; mov edi, dr1 ; call qword ptr [rsi]
0x000000000040b2c7 : add ah, bh ; ret 0xffff
0x000000000040b7b7 : add al, bh ; mov bh, bh ; call qword ptr [rax]
0x000000000040b857 : add al, bl ; mov edi, dr1 ; call qword ptr [rsi]
0x0000000000403dfa : add al, byte ptr [rdx] ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000405157 : add al, ch ; ret
0x000000000040978f : add bl, dh ; ret
0x00000000004072c8 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000407aa8 : add byte ptr [rax - 0x77], cl ; push rbp ; ror byte ptr [rax - 0x77], 1 ; ret 0x8b4c
0x0000000000401fac : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x00000000004039af : add byte ptr [rax - 0x7f], cl ; ret 1
0x000000000040978d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000407aa6 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; push rbp ; ror byte ptr [rax - 0x77], 1 ; ret 0x8b4c
0x0000000000401faa : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000040978b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000403a80 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004041a4 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403fed : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000408169 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004032e7 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040978c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004079a3 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b72b8b], cl ; ret 0xb0
0x000000000040397b : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7338b], cl ; ret 0xb0
0x0000000000403710 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040209b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000403a82 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406020 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004041a6 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403dfc : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000402ad9 : add byte ptr [rax], al ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040141b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000040b7b2 : add byte ptr [rax], al ; and al, 3 ; add byte ptr [rax], al ; clc ; mov bh, bh ; call qword ptr [rax]
0x000000000040b7b6 : add byte ptr [rax], al ; clc ; mov bh, bh ; call qword ptr [rax]
0x000000000040b2c6 : add byte ptr [rax], al ; cld ; ret 0xffff
0x000000000040b776 : add byte ptr [rax], al ; cwde ; xchg bh, bh ; jmp rdi
0x000000000040b772 : add byte ptr [rax], al ; in al, 2 ; add byte ptr [rax], al ; cwde ; xchg bh, bh ; jmp rdi
0x0000000000401459 : add byte ptr [rax], al ; jmp 0x401439
0x000000000040b516 : add byte ptr [rax], al ; mov byte ptr [rbp - 1], ah ; jmp rdx
0x000000000040816b : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000404e62 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004032b4 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040718b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405fe8 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040978e : add byte ptr [rax], al ; ret
0x000000000040b512 : add byte ptr [rax], al ; test byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rbp - 1], ah ; jmp rdx
0x000000000040718c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000405fe9 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040b7b3 : add byte ptr [rbx + rax], ah ; add byte ptr [rax], al ; clc ; mov bh, bh ; call qword ptr [rax]
0x00000000004025e7 : add byte ptr [rbx - 0x1034b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004079a5 : add byte ptr [rbx - 0x76b72b8b], cl ; ret 0xb0
0x000000000040397d : add byte ptr [rbx - 0x76b7338b], cl ; ret 0xb0
0x00000000004018e8 : add byte ptr [rcx], al ; ret
0x0000000000403712 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040209d : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000401d39 : add cl, ch ; ret
0x0000000000406278 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040718a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000405fe7 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004049c6 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403610 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004033e5 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403a24 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004092ea : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004018e4 : add eax, 0x20ba2e ; add ebx, esi ; ret
0x000000000040b7b5 : add eax, dword ptr [rax] ; add al, bh ; mov bh, bh ; call qword ptr [rax]
0x000000000040b855 : add eax, dword ptr [rax] ; add al, bl ; mov edi, dr1 ; call qword ptr [rsi]
0x0000000000402ad7 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004018ab : add eax, edx ; sar rax, 1 ; jne 0x4018bc ; pop rbp ; ret
0x00000000004018e9 : add ebx, esi ; ret
0x0000000000401a9b : add esp, 0x10 ; pop rbp ; ret
0x000000000040901c : add esp, 0x130 ; pop rbp ; ret
0x0000000000405fe4 : add esp, 0x138 ; pop rbx ; pop rbp ; ret
0x000000000040747c : add esp, 0x1a0 ; pop rbp ; ret
0x000000000040866e : add esp, 0x1e0 ; pop rbp ; ret
0x00000000004027b6 : add esp, 0x20 ; pop rbp ; ret
0x0000000000401b7d : add esp, 0x30 ; pop rbp ; ret
0x0000000000403a29 : add esp, 0x40 ; pop rbp ; ret
0x00000000004042bc : add esp, 0x50 ; pop rbp ; ret
0x0000000000402adc : add esp, 0x60 ; pop rbp ; ret
0x00000000004050f3 : add esp, 0x70 ; pop rbp ; ret
0x000000000040619e : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000403869 : add esp, 0x90 ; pop rbp ; ret
0x0000000000407314 : add esp, 0xa0 ; pop rbp ; ret
0x00000000004032b0 : add esp, 0xb0 ; pop rbp ; ret
0x00000000004080ff : add esp, 0xe0 ; pop rbp ; ret
0x000000000040141e : add esp, 8 ; ret
0x00000000004018aa : add rax, rdx ; sar rax, 1 ; jne 0x4018bd ; pop rbp ; ret
0x0000000000401a9a : add rsp, 0x10 ; pop rbp ; ret
0x000000000040901b : add rsp, 0x130 ; pop rbp ; ret
0x0000000000405fe3 : add rsp, 0x138 ; pop rbx ; pop rbp ; ret
0x000000000040747b : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000040866d : add rsp, 0x1e0 ; pop rbp ; ret
0x00000000004027b5 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000401b7c : add rsp, 0x30 ; pop rbp ; ret
0x0000000000403a28 : add rsp, 0x40 ; pop rbp ; ret
0x00000000004042bb : add rsp, 0x50 ; pop rbp ; ret
0x0000000000402adb : add rsp, 0x60 ; pop rbp ; ret
0x00000000004050f2 : add rsp, 0x70 ; pop rbp ; ret
0x000000000040619d : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000403868 : add rsp, 0x90 ; pop rbp ; ret
0x0000000000407313 : add rsp, 0xa0 ; pop rbp ; ret
0x00000000004032af : add rsp, 0xb0 ; pop rbp ; ret
0x00000000004080fe : add rsp, 0xe0 ; pop rbp ; ret
0x000000000040141d : add rsp, 8 ; ret
0x00000000004092e9 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040b7b4 : and al, 3 ; add byte ptr [rax], al ; clc ; mov bh, bh ; call qword ptr [rax]
0x00000000004018e7 : and byte ptr [rax], al ; add ebx, esi ; ret
0x00000000004065a7 : and eax, 0x48fffffd ; add esp, 0x20 ; pop rbp ; ret
0x000000000040453f : and eax, 0x60d3e8 ; pop rbp ; ret
0x0000000000404563 : and eax, 0x60d3f0 ; pop rbp ; ret
0x00000000004052d4 : call 0x401532
0x0000000000402a5f : call 0x4028a7
0x0000000000402078 : call 0xffffffffd654abcc
0x0000000000406019 : call 0xffffffffe902e969
0x0000000000406018 : call 0xffffffffe902e96a
0x0000000000409769 : call qword ptr [r12 + rbx*8]
0x000000000040b7bb : call qword ptr [rax]
0x000000000040b53b : call qword ptr [rbx]
0x000000000040b7fb : call qword ptr [rcx]
0x000000000040b71b : call qword ptr [rsi]
0x000000000040976a : call qword ptr [rsp + rbx*8]
0x000000000040190d : call rax
0x000000000040bb7b : call rdx
0x000000000040901a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x000000000040767f : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406ba1 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404948 : clc ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004018af : clc ; jne 0x4018b8 ; pop rbp ; ret
0x000000000040b7b8 : clc ; mov bh, bh ; call qword ptr [rax]
0x00000000004040b6 : clc ; mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000404fa5 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004096bb : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004027b1 : clc ; mov qword ptr [rcx], rax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004096be : clc ; pop rbp ; ret
0x0000000000408168 : cld ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004086d6 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004082b9 : cld ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004087f4 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404c70 : cld ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000403867 : cld ; add rsp, 0x90 ; pop rbp ; ret
0x00000000004080fd : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x00000000004096b8 : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004086d3 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004082b6 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004087f1 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040922a : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040816f : cld ; pop rbp ; ret
0x000000000040b2c8 : cld ; ret 0xffff
0x0000000000405fe6 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040186d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401880 ; pop rbp ; ret
0x00000000004052d3 : cwde ; call 0x401533
0x0000000000406ccc : cwde ; mov rcx, qword ptr [rax*8 + 0x40aab8] ; jmp rcx
0x00000000004052cf : cwde ; mov rdi, qword ptr [rbp - 0x68] ; call 0x401537
0x00000000004052ce : cwde ; mov rdi, qword ptr [rbp - 0x68] ; call 0x401538
0x000000000040b778 : cwde ; xchg bh, bh ; jmp rdi
0x00000000004025ed : dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000408f7f : dec dword ptr [rax - 0x7f] ; ret 1
0x00000000004060cb : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000404bb6 : enter -1, 0x48 ; add esp, 0x10 ; pop rbp ; ret
0x0000000000405a03 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040976c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000401a99 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401880 : hlt ; pop rbp ; mov edi, 0x60d2a8 ; jmp rax
0x000000000040b774 : in al, 2 ; add byte ptr [rax], al ; cwde ; xchg bh, bh ; jmp rdi
0x00000000004081cd : in al, dx ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004072d0 : int 0x80
0x0000000000401873 : ja 0x40187a ; pop rbp ; ret
0x0000000000401419 : jae 0x401425 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000040187f : je 0x40187d ; pop rbp ; mov edi, 0x60d2a8 ; jmp rax
0x0000000000402a5d : jge 0x402a20 ; call 0x4028a9
0x00000000004052d2 : jge 0x405270 ; call 0x401534
0x000000000040145b : jmp 0x401437
0x0000000000405081 : jmp 0x405047
0x000000000040bd1b : jmp qword ptr [rax]
0x000000000040bbfb : jmp qword ptr [rdx]
0x0000000000401887 : jmp rax
0x0000000000401ea7 : jmp rcx
0x000000000040b77b : jmp rdi
0x00000000004018c7 : jmp rdx
0x00000000004018b0 : jne 0x4018b7 ; pop rbp ; ret
0x00000000004050f5 : jo 0x405156 ; ret
0x0000000000406804 : jo 0x406865 ; ret
0x000000000040693e : jo 0x40699f ; ret
0x00000000004061a0 : js 0x406200 ; pop rbp ; ret
0x00000000004035be : lodsb al, byte ptr [rsi] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004047cb : loopne 0x40481b ; add esp, 0x20 ; pop rbp ; ret
0x00000000004047ca : loopne 0x40481c ; add esp, 0x20 ; pop rbp ; ret
0x0000000000408101 : loopne 0x408108 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000408670 : loopne 0x408678 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004032b2 : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004066db : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040656b : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x00000000004029bb : mov al, 0x48 ; mov ecx, dword ptr [rax*8 + 0x409858] ; jmp rcx
0x00000000004092e6 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040b7b9 : mov bh, bh ; call qword ptr [rax]
0x0000000000404561 : mov byte ptr [0x60d3f0], al ; pop rbp ; ret
0x0000000000403803 : mov byte ptr [rax - 0x77], cl ; ret 0x24e8
0x000000000040b518 : mov byte ptr [rbp - 1], ah ; jmp rdx
0x00000000004040b7 : mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x00000000004018e3 : mov byte ptr [rip + 0x20ba2e], 1 ; ret
0x00000000004049c8 : mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403612 : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004033e7 : mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403a26 : mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004092ec : mov dh, -0x40 ; pop rbp ; ret
0x0000000000402991 : mov dh, 0x4d ; ret
0x000000000040453d : mov dword ptr [0x60d3e8], edi ; pop rbp ; ret
0x00000000004040a7 : mov dword ptr [rax + 0x18], ecx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404fa6 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000404eb4 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000404f68 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004047c9 : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401b79 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004035bc : mov dword ptr [rbp - 0x54], eax ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004052cd : mov dword ptr [rbp - 0x68], eax ; mov rdi, qword ptr [rbp - 0x68] ; call 0x401539
0x0000000000401a97 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004096b9 : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040501e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004027b3 : mov dword ptr [rcx], eax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004032e4 : mov dword ptr [rdi + 0x10], 0 ; pop rbp ; ret
0x0000000000403b1d : mov dword ptr [rdi + 0x18], 0 ; pop rbp ; ret
0x000000000040619c : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000402a5e : mov eax, 0xfffe3ce8 ; push rsi ; ret
0x0000000000404e68 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000403b68 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040478c : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040288f : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404e65 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040470f : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004081cb : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407833 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404e1d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404eae : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000407961 : mov eax, dword ptr [rbp - 0x24] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404f6a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004050ef : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040619a : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004066d9 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004086d4 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004082b7 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004087f2 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404c6e : mov eax, dword ptr [rbp - 4] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040816d : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040767d : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406b9f : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404946 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004096bc : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040190b : mov ebp, esp ; call rax
0x0000000000401871 : mov ebp, esp ; ja 0x40187c ; pop rbp ; ret
0x0000000000401ea0 : mov ecx, dword ptr [rax*8 + 0x4097e0] ; jmp rcx
0x00000000004029bd : mov ecx, dword ptr [rax*8 + 0x409858] ; jmp rcx
0x00000000004051a7 : mov ecx, dword ptr [rax*8 + 0x40a5b0] ; jmp rcx
0x0000000000405487 : mov ecx, dword ptr [rax*8 + 0x40a5f8] ; jmp rcx
0x0000000000406cce : mov ecx, dword ptr [rax*8 + 0x40aab8] ; jmp rcx
0x0000000000407f3d : mov ecx, dword ptr [rax*8 + 0x40aea0] ; jmp rcx
0x0000000000407ebd : mov ecx, dword ptr [rax*8 + 0x40af00] ; jmp rcx
0x0000000000404eb1 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401905 : mov edi, 0x60ce20 ; mov rbp, rsp ; call rax
0x0000000000401882 : mov edi, 0x60d2a8 ; jmp rax
0x00000000004018c2 : mov edi, 0x60d2a8 ; jmp rdx
0x000000000040b859 : mov edi, dr1 ; call qword ptr [rsi]
0x00000000004052d1 : mov edi, dword ptr [rbp - 0x68] ; call 0x401535
0x0000000000409767 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000040b7f9 : mov edi, edi ; call qword ptr [rcx]
0x0000000000409766 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x00000000004018e6 : mov edx, 0xf3010020 ; ret
0x00000000004018c0 : mov esi, eax ; mov edi, 0x60d2a8 ; jmp rdx
0x000000000040453c : mov qword ptr [0x60d3e8], rdi ; pop rbp ; ret
0x00000000004040a6 : mov qword ptr [rax + 0x18], rcx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040501d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004027b2 : mov qword ptr [rcx], rax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004032e3 : mov qword ptr [rdi + 0x10], 0 ; pop rbp ; ret
0x0000000000403b1c : mov qword ptr [rdi + 0x18], 0 ; pop rbp ; ret
0x00000000004066da : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040619b : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000403b67 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040478b : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040288e : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404e64 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040470e : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000407832 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404e1c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004050ee : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004066d8 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040767c : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406b9e : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404945 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040190a : mov rbp, rsp ; call rax
0x0000000000401870 : mov rbp, rsp ; ja 0x40187d ; pop rbp ; ret
0x0000000000401e9f : mov rcx, qword ptr [rax*8 + 0x4097e0] ; jmp rcx
0x00000000004029bc : mov rcx, qword ptr [rax*8 + 0x409858] ; jmp rcx
0x00000000004051a6 : mov rcx, qword ptr [rax*8 + 0x40a5b0] ; jmp rcx
0x0000000000405486 : mov rcx, qword ptr [rax*8 + 0x40a5f8] ; jmp rcx
0x0000000000406ccd : mov rcx, qword ptr [rax*8 + 0x40aab8] ; jmp rcx
0x0000000000407f3c : mov rcx, qword ptr [rax*8 + 0x40aea0] ; jmp rcx
0x0000000000407ebc : mov rcx, qword ptr [rax*8 + 0x40af00] ; jmp rcx
0x00000000004052d0 : mov rdi, qword ptr [rbp - 0x68] ; call 0x401536
0x00000000004018bf : mov rsi, rax ; mov edi, 0x60d2a8 ; jmp rdx
0x00000000004049c7 : movzx eax, al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403611 : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004033e6 : movzx eax, al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403a25 : movzx eax, al ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004092eb : movzx eax, al ; pop rbp ; ret
0x00000000004040ba : movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000409788 : nop dword ptr [rax + rax] ; ret
0x00000000004059fe : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x00000000004059ff : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000402097 : or byte ptr [rcx + 0x32f9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x00000000004068c1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040977c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040977e : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040718e : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000409780 : pop r14 ; pop r15 ; ret
0x0000000000407190 : pop r15 ; pop rbp ; ret
0x0000000000409782 : pop r15 ; ret
0x00000000004018e2 : pop rbp ; mov byte ptr [rip + 0x20ba2e], 1 ; ret
0x0000000000401881 : pop rbp ; mov edi, 0x60d2a8 ; jmp rax
0x00000000004018be : pop rbp ; mov rsi, rax ; mov edi, 0x60d2a8 ; jmp rdx
0x000000000040977b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040977f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401875 : pop rbp ; ret
0x000000000040718d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405fea : pop rbx ; pop rbp ; ret
0x0000000000407191 : pop rdi ; pop rbp ; ret
0x0000000000409783 : pop rdi ; ret
0x000000000040718f : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000409781 : pop rsi ; pop r15 ; ret
0x000000000040977d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004042be : push rax ; pop rbp ; ret
0x0000000000405a02 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000401904 : push rbp ; mov edi, 0x60ce20 ; mov rbp, rsp ; call rax
0x0000000000407aab : push rbp ; ror byte ptr [rax - 0x77], 1 ; ret 0x8b4c
0x0000000000408c0d : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x00000000004060ce : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x00000000004052d5 : push rdi ; ret 0xffff
0x0000000000402a63 : push rsi ; ret
0x00000000004039ac : rcl bl, 0x60 ; add byte ptr [rax - 0x7f], cl ; ret 1
0x0000000000401421 : ret
0x0000000000401662 : ret 0x20ba
0x0000000000401462 : ret 0x20bb
0x0000000000403806 : ret 0x24e8
0x0000000000403df8 : ret 0x2e8
0x000000000040378c : ret 0x2ee8
0x0000000000406c89 : ret 0x8844
0x0000000000407702 : ret 0x8948
0x0000000000405b2d : ret 0x89a5
0x0000000000403fbf : ret 0x8b44
0x0000000000405a06 : ret 0x8b48
0x0000000000407aaf : ret 0x8b4c
0x0000000000403c02 : ret 0x8e8
0x000000000040297a : ret 0x940f
0x0000000000401faf : ret 0xb0
0x0000000000403d41 : ret 0xb9e8
0x00000000004018a5 : ret 0xc148
0x0000000000402cf0 : ret 0xc189
0x0000000000403c2d : ret 0xcde8
0x0000000000403715 : ret 0xd284
0x0000000000405a1b : ret 0xdfe8
0x00000000004020a0 : ret 0xe280
0x000000000040601c : ret 0xee8
0x00000000004049aa : ret 0xffcc
0x00000000004052d6 : ret 0xffff
0x0000000000402356 : ret 1
0x000000000040207f : ret 2
0x00000000004060d2 : ret 8
0x00000000004072cb : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x00000000004050f0 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x40515b ; ret
0x00000000004018ac : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4018bb ; pop rbp ; ret
0x00000000004072cc : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000407aac : ror byte ptr [rax - 0x77], 1 ; ret 0x8b4c
0x00000000004050f1 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x40515a ; ret
0x0000000000403a27 : ror byte ptr [rax - 0x7d], -0x3c ; pop rbp ; ret
0x0000000000408c0e : ror byte ptr [rax - 0x7f], 1 ; ret 1
0x00000000004060cf : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x00000000004018ae : sar eax, 1 ; jne 0x4018b9 ; pop rbp ; ret
0x00000000004018ad : sar rax, 1 ; jne 0x4018ba ; pop rbp ; ret
0x000000000040451c : shl byte ptr [rax], cl ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401884 : shl byte ptr [rax], cl ; jmp rax
0x00000000004018c4 : shl byte ptr [rax], cl ; jmp rdx
0x0000000000404da2 : shl dword ptr [rax], cl ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404541 : shl dword ptr [rax], cl ; pop rbp ; ret
0x000000000040507f : shr al, 1 ; jmp 0x405049
0x000000000040507e : shr r8b, 1 ; jmp 0x40504a
0x00000000004092e8 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004097bd : sub esp, 8 ; add rsp, 8 ; ret
0x00000000004097bc : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040978a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040b514 : test byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rbp - 1], ah ; jmp rdx
0x000000000040b779 : xchg bh, bh ; jmp rdi
0x0000000000404bb5 : xchg eax, edi ; enter -1, 0x48 ; add esp, 0x10 ; pop rbp ; ret
0x000000000040297c : xchg eax, esp ; ret
0x0000000000402979 : xchg eax, esp ; ret 0x940f
0x0000000000403714 : xchg eax, esp ; ret 0xd284
0x000000000040209f : xchg eax, esp ; ret 0xe280
0x000000000040901e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000404657 : xor eax, 0x48ffffce ; add esp, 0x10 ; pop rbp ; ret
0x0000000000404f66 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
