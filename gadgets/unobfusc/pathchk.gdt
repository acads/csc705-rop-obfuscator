0x0000000000403c89 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004076df : add al, ah ; ret 0xffff
0x0000000000401cb7 : add al, ch ; ret
0x0000000000401bb8 : add al, ch ; ret 0xfff8
0x000000000040624f : add bl, dh ; ret
0x0000000000404c68 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000407cff : add byte ptr [rax], ah ; fdivp st(7) ; jmp rax
0x000000000040624d : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040624b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040624c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004076f9 : add byte ptr [rax], al ; add byte ptr [rbx + rax], al ; add byte ptr [rax], al ; ret
0x000000000040455e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004076fa : add byte ptr [rax], al ; add r8d, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000403c4a : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004039f0 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040117b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004012f9 : add byte ptr [rax], al ; jmp 0x401199
0x0000000000402832 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000407cfa : add byte ptr [rax], al ; or dword ptr [rax], r8d ; add byte ptr [rax], ah ; fdivp st(7) ; jmp rax
0x0000000000402140 : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000404b2b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004039b8 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040624e : add byte ptr [rax], al ; ret
0x0000000000404b2c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004039b9 : add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004076fb : add byte ptr [rbx + rax], al ; add byte ptr [rax], al ; ret
0x0000000000407cfb : add byte ptr [rcx + rcx], al ; add byte ptr [rax], ah ; fdivp st(7) ; jmp rax
0x00000000004015b8 : add byte ptr [rcx], al ; ret
0x0000000000404560 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000403c48 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404b2a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004039b7 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000401a23 : add dword ptr [rdi + rcx - 0x4a], eax ; ret 0x8840
0x00000000004021fe : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402330 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000405daa : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004015b4 : add eax, 0x207cbe ; add ebx, esi ; ret
0x00000000004076dd : add eax, dword ptr [rax] ; add al, ah ; ret 0xffff
0x00000000004076fd : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000040157b : add eax, edx ; sar rax, 1 ; jne 0x40158c ; pop rbp ; ret
0x00000000004015b9 : add ebx, esi ; ret
0x00000000004016eb : add esp, 0x10 ; pop rbp ; ret
0x0000000000405b0c : add esp, 0x130 ; pop rbp ; ret
0x00000000004039b4 : add esp, 0x138 ; pop rbx ; pop rbp ; ret
0x000000000040213c : add esp, 0x190 ; pop rbp ; ret
0x0000000000404e1c : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000402203 : add esp, 0x20 ; pop rbp ; ret
0x00000000004017cd : add esp, 0x30 ; pop rbp ; ret
0x000000000040402c : add esp, 0x50 ; pop rbp ; ret
0x0000000000402335 : add esp, 0x70 ; pop rbp ; ret
0x0000000000403b6e : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000403f3d : add esp, 0x90 ; pop rbp ; ret
0x0000000000404cb4 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040117e : add esp, 8 ; ret
0x00000000004076fc : add r8d, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000040157a : add rax, rdx ; sar rax, 1 ; jne 0x40158d ; pop rbp ; ret
0x00000000004016ea : add rsp, 0x10 ; pop rbp ; ret
0x0000000000405b0b : add rsp, 0x130 ; pop rbp ; ret
0x00000000004039b3 : add rsp, 0x138 ; pop rbx ; pop rbp ; ret
0x000000000040213b : add rsp, 0x190 ; pop rbp ; ret
0x0000000000404e1b : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000402202 : add rsp, 0x20 ; pop rbp ; ret
0x00000000004017cc : add rsp, 0x30 ; pop rbp ; ret
0x000000000040402b : add rsp, 0x50 ; pop rbp ; ret
0x0000000000402334 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000403b6d : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000403f3c : add rsp, 0x90 ; pop rbp ; ret
0x0000000000404cb3 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040117d : add rsp, 8 ; ret
0x0000000000405da9 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004015b7 : and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000403f77 : and eax, 0x48fffffd ; add esp, 0x20 ; pop rbp ; ret
0x00000000004023ef : and eax, 0x609280 ; pop rbp ; ret
0x0000000000402413 : and eax, 0x609288 ; pop rbp ; ret
0x000000000040162c : call 0x4012e9
0x00000000004039e9 : call 0xffffffffe902c339
0x00000000004039e8 : call 0xffffffffe902c33a
0x0000000000406229 : call qword ptr [r12 + rbx*8]
0x0000000000407fdb : call qword ptr [rax]
0x0000000000407523 : call qword ptr [rsi]
0x000000000040622a : call qword ptr [rsp + rbx*8]
0x00000000004015dd : call rax
0x0000000000407723 : call rdx
0x0000000000405b0a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x000000000040501f : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404571 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040157f : clc ; jne 0x401588 ; pop rbp ; ret
0x0000000000402975 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040617b : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402371 : clc ; pop rbp ; ret
0x0000000000405c56 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004054db : cld ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405420 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406178 : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000405c53 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405bf6 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040541d : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401633 : cmp al, 0x25 ; ret
0x00000000004039b6 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040153d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401550 ; pop rbp ; ret
0x000000000040466c : cwde ; mov rcx, qword ptr [rax*8 + 0x406cb8] ; jmp rcx
0x0000000000401630 : dec dword ptr [rax - 0x73] ; cmp al, 0x25 ; ret
0x000000000040236d : dec dword ptr [rax - 0x75] ; clc ; pop rbp ; ret
0x0000000000401cb2 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000405a6f : dec dword ptr [rax - 0x7f] ; ret 1
0x0000000000401cac : dec dword ptr [rbx - 0x1374b] ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000403a9b : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000407d01 : fdivp st(7) ; jmp rax
0x00000000004033d3 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040622c : fmul qword ptr [rax - 0x7d] ; ret
0x00000000004016e9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401550 : hlt ; pop rbp ; mov edi, 0x609240 ; jmp rax
0x0000000000404c70 : int 0x80
0x0000000000401543 : ja 0x40154a ; pop rbp ; ret
0x000000000040154f : je 0x40154d ; pop rbp ; mov edi, 0x609240 ; jmp rax
0x00000000004015b6 : jl 0x4015dd ; add byte ptr [rcx], al ; ret
0x00000000004012fb : jmp 0x401197
0x00000000004078c3 : jmp qword ptr [rax]
0x00000000004077a3 : jmp qword ptr [rdx]
0x0000000000401557 : jmp rax
0x0000000000402b7e : jmp rcx
0x0000000000401597 : jmp rdx
0x0000000000401580 : jne 0x401587 ; pop rbp ; ret
0x0000000000402337 : jo 0x402398 ; ret
0x0000000000402ac5 : jo 0x402b26 ; ret
0x00000000004041d4 : jo 0x404235 ; ret
0x000000000040430e : jo 0x40436f ; ret
0x0000000000403b70 : js 0x403bd0 ; pop rbp ; ret
0x0000000000407fd9 : loop 0x407fdc ; call qword ptr [rax]
0x00000000004040ab : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000403f3b : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000405da6 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000402411 : mov byte ptr [0x609288], al ; pop rbp ; ret
0x00000000004015b3 : mov byte ptr [rip + 0x207cbe], 1 ; ret
0x0000000000402200 : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402332 : mov dh, -0x40 ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000405dac : mov dh, -0x40 ; pop rbp ; ret
0x00000000004023ed : mov dword ptr [0x609280], edi ; pop rbp ; ret
0x0000000000402976 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000402884 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000402938 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004017c9 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004016e7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406179 : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004029ee : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004023d4 : mov eax, 0x48ffffff ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000403b6c : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000402838 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000404f3b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040263c : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402835 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004023d9 : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004051d3 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004027ed : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040287e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040293a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000402abf : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000403b6a : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004040a9 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000405c54 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004054d9 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040541e : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040501d : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040456f : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040236f : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004015db : mov ebp, esp ; call rax
0x0000000000401541 : mov ebp, esp ; ja 0x40154c ; pop rbp ; ret
0x0000000000402b77 : mov ecx, dword ptr [rax*8 + 0x4067b0] ; jmp rcx
0x0000000000402e57 : mov ecx, dword ptr [rax*8 + 0x4067f8] ; jmp rcx
0x000000000040466e : mov ecx, dword ptr [rax*8 + 0x406cb8] ; jmp rcx
0x0000000000402881 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004015d5 : mov edi, 0x608e20 ; mov rbp, rsp ; call rax
0x0000000000401552 : mov edi, 0x609240 ; jmp rax
0x0000000000401592 : mov edi, 0x609240 ; jmp rdx
0x0000000000406227 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000406226 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x00000000004015b5 : mov esi, 0x100207c ; ret
0x0000000000401590 : mov esi, eax ; mov edi, 0x609240 ; jmp rdx
0x00000000004015d7 : mov fs, word ptr [rax] ; mov rbp, rsp ; call rax
0x00000000004023ec : mov qword ptr [0x609280], rdi ; pop rbp ; ret
0x00000000004029ed : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004040aa : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000403b6b : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000404f3a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040263b : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402834 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004023d8 : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004051d2 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004027ec : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402abe : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004040a8 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040501c : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040456e : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040236e : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004015da : mov rbp, rsp ; call rax
0x0000000000401540 : mov rbp, rsp ; ja 0x40154d ; pop rbp ; ret
0x0000000000402b76 : mov rcx, qword ptr [rax*8 + 0x4067b0] ; jmp rcx
0x0000000000402e56 : mov rcx, qword ptr [rax*8 + 0x4067f8] ; jmp rcx
0x000000000040466d : mov rcx, qword ptr [rax*8 + 0x406cb8] ; jmp rcx
0x000000000040158f : mov rsi, rax ; mov edi, 0x609240 ; jmp rdx
0x00000000004021ff : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402331 : movzx eax, al ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000405dab : movzx eax, al ; pop rbp ; ret
0x0000000000406248 : nop dword ptr [rax + rax] ; ret
0x00000000004033ce : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x00000000004033cf : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000407cfd : or dword ptr [rax], eax ; add byte ptr [rax], ah ; fdivp st(7) ; jmp rax
0x0000000000407cfc : or dword ptr [rax], r8d ; add byte ptr [rax], ah ; fdivp st(7) ; jmp rax
0x0000000000404291 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040623c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040623e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000404b2e : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406240 : pop r14 ; pop r15 ; ret
0x0000000000404b30 : pop r15 ; pop rbp ; ret
0x0000000000406242 : pop r15 ; ret
0x00000000004015b2 : pop rbp ; mov byte ptr [rip + 0x207cbe], 1 ; ret
0x0000000000401551 : pop rbp ; mov edi, 0x609240 ; jmp rax
0x000000000040158e : pop rbp ; mov rsi, rax ; mov edi, 0x609240 ; jmp rdx
0x000000000040623b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040623f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401545 : pop rbp ; ret
0x0000000000404b2d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004039ba : pop rbx ; pop rbp ; ret
0x0000000000404b31 : pop rdi ; pop rbp ; ret
0x0000000000406243 : pop rdi ; ret
0x0000000000404b2f : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000406241 : pop rsi ; pop r15 ; ret
0x000000000040623d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000402771 : push 0x48006092 ; add esp, 0x30 ; pop rbp ; ret
0x000000000040402e : push rax ; pop rbp ; ret
0x00000000004033d2 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x00000000004015d4 : push rbp ; mov edi, 0x608e20 ; mov rbp, rsp ; call rax
0x00000000004056fd : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x0000000000403a9e : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000401181 : ret
0x0000000000401302 : ret 0x207d
0x0000000000401a27 : ret 0x8840
0x0000000000404629 : ret 0x8844
0x00000000004050a2 : ret 0x8948
0x00000000004034fd : ret 0x89a5
0x00000000004033d6 : ret 0x8b48
0x0000000000401cb5 : ret 0xb0
0x0000000000401575 : ret 0xc148
0x0000000000404563 : ret 0xd284
0x00000000004039ec : ret 0xee8
0x00000000004033eb : ret 0xffe8
0x0000000000401bba : ret 0xfff8
0x00000000004076e1 : ret 0xffff
0x0000000000403d0e : ret 1
0x0000000000403aa2 : ret 8
0x0000000000404c6b : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000402ac0 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x402b2b ; ret
0x000000000040157c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40158b ; pop rbp ; ret
0x0000000000404c6c : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000402333 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x40239c ; ret
0x0000000000402ac1 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x402b2a ; ret
0x00000000004056fe : ror byte ptr [rax - 0x7f], 1 ; ret 1
0x0000000000403a9f : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000040157e : sar eax, 1 ; jne 0x401589 ; pop rbp ; ret
0x000000000040157d : sar rax, 1 ; jne 0x40158a ; pop rbp ; ret
0x00000000004076f8 : sbb al, 0 ; add byte ptr [rax], al ; add r8d, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000405da8 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000406291 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000406290 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040624a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000401d73 : test dword ptr [rax - 0x17000002], ebp ; ret
0x0000000000404562 : xchg eax, esp ; ret 0xd284
0x0000000000405b0e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000402936 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
