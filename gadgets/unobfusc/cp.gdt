0x000000000041b688 : adc al, 0x48 ; add esp, 0x10 ; pop rbp ; ret
0x0000000000418445 : adc al, 1 ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041f2a1 : adc al, byte ptr [rax] ; add al, dl ; ret
0x000000000041f299 : adc al, byte ptr [rax] ; add byte ptr [rax], dl ; ret
0x0000000000420f91 : adc bh, bh ; call rdx
0x000000000040b8af : adc byte ptr [r8 + 0x39], r9b ; ret 0x870f
0x000000000040bb0d : adc byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000040b8b0 : adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x00000000004177ca : adc byte ptr [rax - 0x75], cl ; jge 0x417794 ; call rax
0x00000000004177c9 : adc byte ptr [rax - 0x75], cl ; jge 0x417795 ; call rax
0x0000000000417943 : adc byte ptr [rax - 0x75], cl ; jge 0x41790d ; call rax
0x0000000000417942 : adc byte ptr [rax - 0x75], cl ; jge 0x41790e ; call rax
0x0000000000421c70 : adc byte ptr [rax - 1], bl ; jmp qword ptr [rdi]
0x0000000000408ec3 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000041b66c : adc dh, dh ; ret 0xf01
0x000000000040ad92 : adc dword ptr [rax + 1], ecx ; ret 0x8948
0x000000000041f281 : adc dword ptr [rax], eax ; add byte ptr [rax], al ; ret 0xfffe
0x00000000004122f9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000409fa8 : add al, 0 ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000421c6c : add al, 0x21 ; add byte ptr [rax], al ; adc byte ptr [rax - 1], bl ; jmp qword ptr [rdi]
0x000000000042206c : add al, 0x25 ; add byte ptr [rax], al ; xchg dil, dil ; call rdi
0x000000000040cf32 : add al, 0x25 ; push 0x5d006239 ; ret
0x000000000040e3fa : add al, 0x48 ; add eax, ecx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000408f44 : add al, 2 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000042212f : add al, al ; mov bh, bh ; jmp rax
0x000000000040e26b : add al, byte ptr [rcx] ; add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x000000000040b4ce : add al, ch ; lodsq rax, qword ptr [rsi] ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000405e0c : add al, ch ; outsb dx, byte ptr [rsi] ; ret
0x0000000000405e1d : add al, ch ; pop rbp ; ret
0x0000000000405f1e : add al, ch ; pop rsp ; ret 0xffff
0x0000000000409397 : add al, ch ; ret
0x000000000040bfd8 : add al, ch ; ret 0xff69
0x00000000004031b8 : add al, ch ; ret 0xffef
0x0000000000405f2f : add al, ch ; ret 0xffff
0x0000000000421f0f : add al, dl ; jnp 0x421f16 ; jmp qword ptr [rcx]
0x000000000041ff0f : add al, dl ; mov dh, bh ; call qword ptr [rcx]
0x000000000041f2a3 : add al, dl ; ret
0x000000000041fabb : add al, dl ; ret 0xffff
0x000000000041fe8f : add al, dl ; test edi, esi ; jmp rax
0x000000000041b81f : add bl, dh ; ret
0x0000000000405e1a : add byte ptr [r8], r8b ; add al, ch ; pop rbp ; ret
0x0000000000405f2c : add byte ptr [r8], r8b ; add al, ch ; ret 0xffff
0x00000000004171bb : add byte ptr [r8], r8b ; add byte ptr [rcx - 0x100f43], al ; jmp qword ptr [rsi]
0x0000000000419103 : add byte ptr [rax + 1], cl ; ret 0x4a3b
0x000000000040bba4 : add byte ptr [rax + 1], cl ; ret 0x4a8b
0x000000000040bb5c : add byte ptr [rax + 1], cl ; ret 0x8b48
0x0000000000417a14 : add byte ptr [rax + rax], 0 ; pop rbp ; ret
0x0000000000405f0a : add byte ptr [rax - 0x75], cl ; jge 0x405eee ; call 0x402197
0x00000000004179c1 : add byte ptr [rax - 0x75], cl ; jge 0x417983 ; call rax
0x0000000000417855 : add byte ptr [rax - 0x75], cl ; mov ebp, 0xfffffba0 ; call rax
0x0000000000415bc8 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000041370d : add byte ptr [rax - 0x77], cl ; jge 0x413710 ; pop rbp ; ret
0x000000000040c996 : add byte ptr [rax - 0x77], cl ; ret 0x11e8
0x000000000040c505 : add byte ptr [rax - 0x77], cl ; ret 0xa2e8
0x000000000040318a : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x0000000000421c50 : add byte ptr [rax - 1], bl ; jmp qword ptr [rdi]
0x0000000000420b2f : add byte ptr [rax], ah ; loope 0x420b35 ; jmp qword ptr [rdi]
0x000000000041fab3 : add byte ptr [rax], ah ; ret 0xffff
0x0000000000421c6e : add byte ptr [rax], al ; adc byte ptr [rax - 1], bl ; jmp qword ptr [rdi]
0x0000000000421c6a : add byte ptr [rax], al ; add al, 0x21 ; add byte ptr [rax], al ; adc byte ptr [rax - 1], bl ; jmp qword ptr [rdi]
0x000000000042206a : add byte ptr [rax], al ; add al, 0x25 ; add byte ptr [rax], al ; xchg dil, dil ; call rdi
0x000000000040b4cc : add byte ptr [rax], al ; add al, ch ; lodsq rax, qword ptr [rsi] ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000405e0a : add byte ptr [rax], al ; add al, ch ; outsb dx, byte ptr [rsi] ; ret
0x0000000000405e1b : add byte ptr [rax], al ; add al, ch ; pop rbp ; ret
0x0000000000405f1c : add byte ptr [rax], al ; add al, ch ; pop rsp ; ret 0xffff
0x000000000040bfd6 : add byte ptr [rax], al ; add al, ch ; ret 0xff69
0x00000000004031b6 : add byte ptr [rax], al ; add al, ch ; ret 0xffef
0x0000000000405f2d : add byte ptr [rax], al ; add al, ch ; ret 0xffff
0x000000000041b81d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000419101 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x4a3b
0x000000000040bba2 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x4a8b
0x000000000040bb5a : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8b48
0x0000000000405f08 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jge 0x405ef0 ; call 0x402199
0x000000000041370b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jge 0x413712 ; pop rbp ; ret
0x000000000040c994 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x11e8
0x000000000040c503 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xa2e8
0x0000000000403188 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x0000000000421c4e : add byte ptr [rax], al ; add byte ptr [rax - 1], bl ; jmp qword ptr [rdi]
0x000000000041b81b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004007b8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x000000000041beea : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x41d6
0x00000000004007ba : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x0000000000403888 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040ed6d : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041b561 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041370a : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000041b81c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000041beec : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x41d6
0x00000000004007bc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x000000000040aee7 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000409feb : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7038b], cl ; ret 0xb0
0x00000000004171bc : add byte ptr [rax], al ; add byte ptr [rcx - 0x100f43], al ; jmp qword ptr [rsi]
0x00000000004163e5 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0xf40
0x000000000041b5b2 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040d494 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000040d86d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf280
0x0000000000408f46 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004042fa : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x0000000000412bce : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040c792 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000040388a : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040ed6f : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b308 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402123 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000042142e : add byte ptr [rax], al ; and byte ptr [rax], 0xff ; jmp qword ptr [rdi]
0x0000000000405f1d : add byte ptr [rax], al ; call 0x402184
0x0000000000420a2e : add byte ptr [rax], al ; fdiv st(6), st(0) ; call rsp
0x0000000000421c4a : add byte ptr [rax], al ; in al, 0x20 ; add byte ptr [rax], al ; add byte ptr [rax - 1], bl ; jmp qword ptr [rdi]
0x0000000000402159 : add byte ptr [rax], al ; jmp 0x402139
0x00000000004175dc : add byte ptr [rax], al ; mov al, sil ; movzx eax, al ; pop rbp ; ret
0x000000000041755d : add byte ptr [rax], al ; mov ax, si ; movzx eax, ax ; pop rbp ; ret
0x000000000041339a : add byte ptr [rax], al ; mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004134cd : add byte ptr [rax], al ; mov eax, edi ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000413629 : add byte ptr [rax], al ; mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b1bd : add byte ptr [rax], al ; mov eax, esi ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000413441 : add byte ptr [rax], al ; mov eax, esi ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041370c : add byte ptr [rax], al ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000410ea2 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000405f09 : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x28] ; call 0x402198
0x000000000041ff0a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add eax, dword ptr [rax] ; add al, dl ; mov dh, bh ; call qword ptr [rcx]
0x0000000000421f0a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; and eax, dword ptr [rax] ; add al, dl ; jnp 0x421f1b ; jmp qword ptr [rcx]
0x000000000042080a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; or al, 0 ; add byte ptr [rax], dl ; sar esi, cl ; call rdi
0x000000000041f292 : add byte ptr [rax], al ; nop ; ret 0xfffe
0x00000000004212ce : add byte ptr [rax], al ; nop ; sbb edi, edi ; call rbx
0x0000000000408286 : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000415a8b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000408ec5 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000412028 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004209ee : add byte ptr [rax], al ; rcr dl, -2 ; call rbx
0x000000000041b81e : add byte ptr [rax], al ; ret
0x000000000041beee : add byte ptr [rax], al ; ret 0x41d6
0x000000000041f283 : add byte ptr [rax], al ; ret 0xfffe
0x00000000004007be : add byte ptr [rax], al ; ret 2
0x0000000000421f0e : add byte ptr [rax], al ; sar byte ptr [rbx - 1], 1 ; jmp qword ptr [rcx]
0x0000000000420a0e : add byte ptr [rax], al ; sbb bl, -2 ; call rsp
0x00000000004215aa : add byte ptr [rax], al ; sbb r8b, byte ptr [rax] ; add byte ptr [rax], dh ; and edi, edi ; call qword ptr [rdx]
0x00000000004209ea : add byte ptr [rax], al ; test byte ptr [rsi], cl ; add byte ptr [rax], al ; rcr dl, -2 ; call rbx
0x000000000042206e : add byte ptr [rax], al ; xchg dil, dil ; call rdi
0x000000000041f0ba : add byte ptr [rax], al ; xor byte ptr [rax], 0xfe ; call rax
0x000000000042156f : add byte ptr [rax], dh ; and edi, edi ; call qword ptr [rdx]
0x000000000042036f : add byte ptr [rax], dl ; mov dl, -2 ; call qword ptr [rbx]
0x000000000041f29b : add byte ptr [rax], dl ; ret
0x000000000042080f : add byte ptr [rax], dl ; sar esi, cl ; call rdi
0x000000000041bee7 : add byte ptr [rbp], dh ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x41d6
0x0000000000415a8c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000408ec6 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000412029 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000409fed : add byte ptr [rbx - 0x76b7038b], cl ; ret 0xb0
0x00000000004042f7 : add byte ptr [rcx + 0x4000f9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x00000000004171be : add byte ptr [rcx - 0x100f43], al ; jmp qword ptr [rsi]
0x0000000000421c6b : add byte ptr [rcx], al ; add byte ptr [rax], al ; adc byte ptr [rax - 1], bl ; jmp qword ptr [rdi]
0x0000000000416ffd : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000402968 : add byte ptr [rcx], al ; ret
0x00000000004163e7 : add byte ptr [rcx], bh ; ret 0xf40
0x000000000041f0b7 : add byte ptr [rdi + 1], cl ; add byte ptr [rax], al ; xor byte ptr [rax], 0xfe ; call rax
0x000000000041365a : add byte ptr [rdi], cl ; mov bh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405f18 : add byte ptr [rdi], cl ; test byte ptr [rax], ah ; add byte ptr [rax], al ; call 0x402189
0x0000000000405f29 : add byte ptr [rdi], cl ; test byte ptr [rdi], cl ; add byte ptr [rax], al ; call 0x402189
0x000000000041b5b4 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040d496 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000040d86f : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf280
0x0000000000408f48 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004042fd : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x0000000000412bd0 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040c794 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x00000000004215ab : add byte ptr [rdx + rbx], al ; add byte ptr [rax], dh ; and edi, edi ; call qword ptr [rdx]
0x000000000040e26d : add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x0000000000414725 : add byte ptr es:[rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407083 : add cl, ch ; ret
0x000000000041006c : add dword ptr [rax + 0xf], eax ; mov dh, -0x39 ; pop rbp ; ret
0x00000000004122b8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000415a8a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000408ec4 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000412027 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040cb54 : add dword ptr [rax], eax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040b615 : add dword ptr [rcx + rax], esp ; movzx eax, al ; pop rbp ; ret
0x000000000040d4ac : add dword ptr [rdi], ecx ; mov dh, -0x3e ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040b22b : add dword ptr [rdi], ecx ; mov dh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040afcd : add dword ptr [rdi], ecx ; mov dh, -0x3f ; pop rbp ; ret
0x000000000040518b : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408536 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004088e7 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404367 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040844d : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000408b4a : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000404278 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000407c0c : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000407c78 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x9588
0x0000000000408133 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xe280
0x0000000000402964 : add eax, 0x220b6e ; add ebx, esi ; ret
0x000000000041ff0d : add eax, dword ptr [rax] ; add al, dl ; mov dh, bh ; call qword ptr [rcx]
0x000000000041fe8d : add eax, dword ptr [rax] ; add al, dl ; test edi, esi ; jmp rax
0x000000000041ab46 : add eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040e3fc : add eax, ecx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040292b : add eax, edx ; sar rax, 1 ; jne 0x40293c ; pop rbp ; ret
0x0000000000419af9 : add eax, esi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x0000000000402969 : add ebx, esi ; ret
0x000000000041847b : add edi, eax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x000000000040a630 : add esi, eax ; mov rax, rsi ; pop rbp ; ret
0x0000000000402c8b : add esp, 0x10 ; pop rbp ; ret
0x0000000000416ffb : add esp, 0x100 ; pop rbp ; ret
0x000000000041737c : add esp, 0x1030 ; pop rbp ; ret
0x000000000040bc9e : add esp, 0x1070 ; pop rbp ; ret
0x000000000041a135 : add esp, 0x10e0 ; pop rbp ; ret
0x00000000004154ca : add esp, 0x120 ; pop rbp ; ret
0x00000000004181dc : add esp, 0x130 ; pop rbp ; ret
0x0000000000412024 : add esp, 0x138 ; pop rbx ; pop rbp ; ret
0x00000000004109b7 : add esp, 0x170 ; pop rbp ; ret
0x000000000041b8bb : add esp, 0x18 ; ret
0x0000000000408282 : add esp, 0x190 ; pop rbp ; ret
0x0000000000415d7c : add esp, 0x1a0 ; pop rbp ; ret
0x000000000040d74f : add esp, 0x1b0 ; pop rbp ; ret
0x0000000000414683 : add esp, 0x1d0 ; pop rbp ; ret
0x00000000004167be : add esp, 0x1e0 ; pop rbp ; ret
0x000000000040853b : add esp, 0x20 ; pop rbp ; ret
0x0000000000418e7d : add esp, 0x250 ; pop rbp ; ret
0x0000000000402d9d : add esp, 0x30 ; pop rbp ; ret
0x000000000040436c : add esp, 0x40 ; pop rbp ; ret
0x0000000000417a12 : add esp, 0x480 ; pop rbp ; ret
0x0000000000403a98 : add esp, 0x50 ; pop rbp ; ret
0x000000000040c5d5 : add esp, 0x60 ; pop rbp ; ret
0x0000000000404fc4 : add esp, 0x68 ; pop rbx ; pop rbp ; ret
0x0000000000408b4f : add esp, 0x70 ; pop rbp ; ret
0x00000000004121de : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000408699 : add esp, 0x80 ; pop rbp ; ret
0x000000000040a353 : add esp, 0x90 ; pop rbp ; ret
0x0000000000410d30 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040ca13 : add esp, 0xb0 ; pop rbp ; ret
0x000000000040f7dc : add esp, 0xc0 ; pop rbp ; ret
0x0000000000413c67 : add esp, 0xf0 ; pop rbp ; ret
0x0000000000402126 : add esp, 8 ; ret
0x000000000041ab45 : add rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040e3fb : add rax, rcx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040292a : add rax, rdx ; sar rax, 1 ; jne 0x40293d ; pop rbp ; ret
0x0000000000419af8 : add rax, rsi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x000000000041847a : add rdi, rax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x000000000040a62f : add rsi, rax ; mov rax, rsi ; pop rbp ; ret
0x0000000000402c8a : add rsp, 0x10 ; pop rbp ; ret
0x0000000000416ffa : add rsp, 0x100 ; pop rbp ; ret
0x000000000041737b : add rsp, 0x1030 ; pop rbp ; ret
0x000000000040bc9d : add rsp, 0x1070 ; pop rbp ; ret
0x000000000041a134 : add rsp, 0x10e0 ; pop rbp ; ret
0x00000000004154c9 : add rsp, 0x120 ; pop rbp ; ret
0x00000000004181db : add rsp, 0x130 ; pop rbp ; ret
0x0000000000412023 : add rsp, 0x138 ; pop rbx ; pop rbp ; ret
0x00000000004109b6 : add rsp, 0x170 ; pop rbp ; ret
0x000000000041b8ba : add rsp, 0x18 ; ret
0x0000000000408281 : add rsp, 0x190 ; pop rbp ; ret
0x0000000000415d7b : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000040d74e : add rsp, 0x1b0 ; pop rbp ; ret
0x0000000000414682 : add rsp, 0x1d0 ; pop rbp ; ret
0x00000000004167bd : add rsp, 0x1e0 ; pop rbp ; ret
0x000000000040853a : add rsp, 0x20 ; pop rbp ; ret
0x0000000000418e7c : add rsp, 0x250 ; pop rbp ; ret
0x0000000000402d9c : add rsp, 0x30 ; pop rbp ; ret
0x000000000040436b : add rsp, 0x40 ; pop rbp ; ret
0x0000000000417a11 : add rsp, 0x480 ; pop rbp ; ret
0x0000000000403a97 : add rsp, 0x50 ; pop rbp ; ret
0x000000000040c5d4 : add rsp, 0x60 ; pop rbp ; ret
0x0000000000404fc3 : add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x0000000000408b4e : add rsp, 0x70 ; pop rbp ; ret
0x00000000004121dd : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000408698 : add rsp, 0x80 ; pop rbp ; ret
0x000000000040a352 : add rsp, 0x90 ; pop rbp ; ret
0x0000000000410d2f : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040ca12 : add rsp, 0xb0 ; pop rbp ; ret
0x000000000040f7db : add rsp, 0xc0 ; pop rbp ; ret
0x0000000000413c66 : add rsp, 0xf0 ; pop rbp ; ret
0x0000000000402125 : add rsp, 8 ; ret
0x0000000000404277 : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000407c0b : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000402967 : and al, byte ptr [rax] ; add ebx, esi ; ret
0x000000000041006a : and bh, 1 ; movzx eax, dil ; pop rbp ; ret
0x0000000000421431 : and bh, bh ; jmp qword ptr [rdi]
0x0000000000421430 : and byte ptr [rax], 0xff ; jmp qword ptr [rdi]
0x00000000004154cc : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040afcb : and cl, 1 ; movzx eax, cl ; pop rbp ; ret
0x0000000000410069 : and dil, 1 ; movzx eax, dil ; pop rbp ; ret
0x00000000004060c5 : and eax, 0x41da67 ; call 0x402357
0x000000000040e7d5 : and eax, 0x41e510 ; mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x00000000004125e7 : and eax, 0x48fffffd ; add esp, 0x20 ; pop rbp ; ret
0x000000000040cdaf : and eax, 0x623958 ; pop rbp ; ret
0x000000000040cf0f : and eax, 0x623960 ; pop rbp ; ret
0x000000000040cf33 : and eax, 0x623968 ; pop rbp ; ret
0x0000000000421f0d : and eax, dword ptr [rax] ; add al, dl ; jnp 0x421f18 ; jmp qword ptr [rcx]
0x0000000000421571 : and edi, edi ; call qword ptr [rdx]
0x0000000000405f1f : call 0x402182
0x0000000000405f0f : call 0x402192
0x00000000004060ca : call 0x402352
0x0000000000416145 : call 0x402402
0x0000000000418cd9 : call 0x40e29
0x00000000004074b0 : call 0x413722
0x00000000004074e6 : call 0x413762
0x0000000000412059 : call 0xffffffffe903a9a9
0x0000000000412058 : call 0xffffffffe903a9aa
0x0000000000403978 : call 0xffffffffff407b3b
0x000000000040ecc1 : call 0xffffffffff7a7812
0x000000000040ecc0 : call 0xffffffffff7a7813
0x000000000040edff : call 0xffffffffff7a7950
0x000000000040edfe : call 0xffffffffff7a7951
0x000000000041b7f9 : call qword ptr [r12 + rbx*8]
0x000000000041fb0f : call qword ptr [rax]
0x0000000000420373 : call qword ptr [rbx]
0x000000000041ff13 : call qword ptr [rcx]
0x00000000004208d3 : call qword ptr [rdx]
0x00000000004205d3 : call qword ptr [rsi]
0x000000000041b7fa : call qword ptr [rsp + rbx*8]
0x000000000040298d : call rax
0x00000000004209f3 : call rbx
0x000000000041fcb3 : call rcx
0x0000000000420813 : call rdi
0x0000000000420f93 : call rdx
0x0000000000420a13 : call rsp
0x000000000040ff8d : clc ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004181da : clc ; add rsp, 0x130 ; pop rbp ; ret
0x000000000040e49e : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000418e7b : clc ; add rsp, 0x250 ; pop rbp ; ret
0x000000000040b473 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040c3d4 : clc ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000417a10 : clc ; add rsp, 0x480 ; pop rbp ; ret
0x000000000040c12b : clc ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040c5d3 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040bfc7 : clc ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040de8d : clc ; add rsp, 0x80 ; pop rbp ; ret
0x0000000000410d2e : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x000000000040fec6 : clc ; add rsp, 0xc0 ; pop rbp ; ret
0x000000000040292f : clc ; jne 0x402938 ; pop rbp ; ret
0x000000000041b685 : clc ; mov dword ptr [rax + 0x14], ecx ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000410fe5 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040a387 : clc ; mov dword ptr [rbp - 0xc], esi ; mov qword ptr [rbp - 0x18], rdx ; pop rbp ; ret
0x000000000041aa9b : clc ; mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x000000000041b26b : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040fefe : clc ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000403aa7 : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040dfbb : clc ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040dfdb : clc ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040dffb : clc ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x00000000004136ab : clc ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x00000000004136eb : clc ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x00000000004136cb : clc ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000403aab : clc ; pop rbp ; ret
0x0000000000402cb7 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000416ff9 : cld ; add rsp, 0x100 ; pop rbp ; ret
0x000000000041737a : cld ; add rsp, 0x1030 ; pop rbp ; ret
0x000000000041a133 : cld ; add rsp, 0x10e0 ; pop rbp ; ret
0x00000000004154c8 : cld ; add rsp, 0x120 ; pop rbp ; ret
0x0000000000414e02 : cld ; add rsp, 0x1b0 ; pop rbp ; ret
0x0000000000414681 : cld ; add rsp, 0x1d0 ; pop rbp ; ret
0x000000000040af34 : cld ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004169e4 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000416d16 : cld ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041aa80 : cld ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040a351 : cld ; add rsp, 0x90 ; pop rbp ; ret
0x000000000040ca11 : cld ; add rsp, 0xb0 ; pop rbp ; ret
0x000000000040f7da : cld ; add rsp, 0xc0 ; pop rbp ; ret
0x000000000041b268 : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000416823 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040af31 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004169e1 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000416d13 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004060c4 : cmp al, 0x25 ; fiadd dword ptr [ecx] ; call 0x402358
0x000000000040cdae : cmp al, 0x25 ; pop rax ; cmp dword ptr [rdx], esp ; pop rbp ; ret
0x0000000000402a58 : cmp al, 0x25 ; scasb al, byte ptr [rdi] ; ret
0x000000000040a415 : cmp bh, -1 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000412026 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040e6da : cmp dword ptr [rax - 0x75], ecx ; jne 0x40e6c4 ; call rax
0x000000000040cdb1 : cmp dword ptr [rdx], esp ; pop rbp ; ret
0x00000000004028ed : cmp eax, 0xe ; mov rbp, rsp ; ja 0x402900 ; pop rbp ; ret
0x0000000000419d64 : cmp esi, -1 ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004155cc : cwde ; mov rcx, qword ptr [rax*8 + 0x41ead8] ; jmp rcx
0x000000000041fab8 : cwde ; xor al, byte ptr [rax] ; add al, dl ; ret 0xffff
0x0000000000414c05 : dec dword ptr [rax + 0x3b] ; or byte ptr [r15], cl ; sahf ; ret 0xe280
0x0000000000414c1c : dec dword ptr [rax + 0x3b] ; sbb byte ptr [r15], cl ; sahf ; ret 0xe280
0x0000000000402a55 : dec dword ptr [rax - 0x73] ; cmp al, 0x25 ; scasb al, byte ptr [rdi] ; ret
0x000000000040b169 : dec dword ptr [rax - 0x75] ; clc ; pop rbp ; ret
0x00000000004114c5 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; enter 0x41e5, 0 ; jmp rcx
0x0000000000418cd5 : dec dword ptr [rax - 0x75] ; push rbp ; call 0x40e2d
0x000000000041390a : dec dword ptr [rax - 0x77] ; ret 0x3de8
0x00000000004061b4 : dec dword ptr [rax - 0x77] ; ret 0x83e8
0x0000000000418d0b : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000413bbb : dec dword ptr [rax - 0x77] ; ret 0x8ce8
0x000000000040652d : dec dword ptr [rax - 0x77] ; ret 0xae8
0x00000000004072ec : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040ace6 : dec dword ptr [rax - 0x77] ; ret 0xd1e8
0x000000000041813f : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000040780c : dec dword ptr [rbx - 0x19773] ; jmp qword ptr [rcx]
0x00000000004048cc : dec dword ptr [rbx - 0x1bb73] ; jmp qword ptr [rcx]
0x0000000000404757 : dec dword ptr [rbx - 0x1eb73] ; jmp qword ptr [rcx]
0x0000000000406838 : dec dword ptr [rbx - 0x68773] ; jmp qword ptr [rcx]
0x000000000040b500 : div dword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000040b4ff : div qword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x0000000000416b19 : enter -0x3577, -0x7f ; ret 0xffff
0x000000000041210b : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000040e6d7 : enter -0x74b8, 0x39 ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x0000000000404f03 : enter -0x74b8, 0x7d ; fsubr st(0) ; ret
0x00000000004087d4 : enter -0x7cb8, -0x3c ; pop rbp ; ret
0x00000000004114ca : enter 0x41e5, 0 ; jmp rcx
0x0000000000410391 : enter 0x6234, 0 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000420a31 : fdiv st(6), st(0) ; call rsp
0x00000000004060c6 : fiadd dword ptr [ecx] ; call 0x402356
0x00000000004060c7 : fiadd dword ptr [rcx] ; call 0x402355
0x0000000000407c74 : fmul dword ptr [r8 + 0x3b] ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x9588
0x0000000000407c75 : fmul dword ptr [rax + 0x3b] ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x9588
0x0000000000411a43 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x00000000004072e6 : fmul dword ptr [rbx - 0x74b4b] ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000041b7fc : fmul qword ptr [rax - 0x7d] ; ret
0x000000000040a376 : fsub dword ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000040a377 : fsub dword ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x0000000000400288 : fsubr qword ptr [rsi + rbp*2 + 0x2a5862a4] ; insd dword ptr [rdi], dx ; ret 0x920f
0x0000000000404f07 : fsubr st(0) ; ret
0x0000000000402c89 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041b5bf : hlt ; mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040a38a : hlt ; mov qword ptr [rbp - 0x18], rdx ; pop rbp ; ret
0x0000000000402900 : hlt ; pop rbp ; mov edi, 0x623468 ; jmp rax
0x0000000000402121 : imul eax, dword ptr [rax + rax], 0 ; add rsp, 8 ; ret
0x0000000000421c4c : in al, 0x20 ; add byte ptr [rax], al ; add byte ptr [rax - 1], bl ; jmp qword ptr [rdi]
0x0000000000417b3c : in al, 0x48 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040a057 : in al, dx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000419cd3 : in al, dx ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040427e : in al, dx ; pop rbp ; ret
0x000000000040b613 : in eax, -0x50 ; add dword ptr [rcx + rax], esp ; movzx eax, al ; pop rbp ; ret
0x00000000004133b3 : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x00000000004177a4 : inc dword ptr [rcx - 0x46343] ; jmp qword ptr [rdx]
0x0000000000404776 : inc dword ptr [rcx - 0xf] ; jmp qword ptr [rcx]
0x000000000040028f : insd dword ptr [rdi], dx ; ret 0x920f
0x0000000000415bd0 : int 0x80
0x00000000004028f3 : ja 0x4028fa ; pop rbp ; ret
0x000000000040ff01 : ja 0x40ff4e ; pop rbp ; ret
0x00000000004142ea : ja 0x4142fe ; xchg eax, esp ; ret 0xe280
0x00000000004028ff : je 0x4028fd ; pop rbp ; mov edi, 0x623468 ; jmp rax
0x0000000000405f19 : je 0x405f87 ; call 0x402188
0x0000000000403aa6 : jge 0x403aa7 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000405f0d : jge 0x405eeb ; call 0x402194
0x000000000040dfba : jge 0x40dfbb ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040dfda : jge 0x40dfdb ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040dffa : jge 0x40dffb ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000040e350 : jge 0x40e343 ; mov rcx, qword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040f860 : jge 0x40f853 ; mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040fefd : jge 0x40fefe ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x00000000004133b6 : jge 0x4133b3 ; pop rbp ; ret
0x00000000004136aa : jge 0x4136ab ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x00000000004136ca : jge 0x4136cb ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x00000000004136ea : jge 0x4136eb ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000413710 : jge 0x41370d ; pop rbp ; ret
0x00000000004177cd : jge 0x417791 ; call rax
0x00000000004178e9 : jge 0x4178b4 ; mov rsi, qword ptr [rbp - 0x460] ; call rax
0x0000000000417946 : jge 0x41790a ; call rax
0x00000000004179c4 : jge 0x417980 ; call rax
0x00000000004179f6 : jge 0x4179b2 ; call rax
0x000000000041aa9a : jge 0x41aa9d ; mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x000000000040b604 : jle 0x40b61d ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040215b : jmp 0x402137
0x000000000040707f : jmp 0x4079a3
0x000000000040fa41 : jmp 0x40fa44
0x000000000040eb60 : jmp 0x490374b0
0x000000000040f59e : jmp 0x49037eee
0x000000000040f60b : jmp 0x49037f5b
0x000000000040fd42 : jmp 0x49038692
0x000000000040fdaf : jmp 0x490386ff
0x0000000000421133 : jmp qword ptr [rax]
0x000000000040475d : jmp qword ptr [rcx]
0x0000000000420213 : jmp qword ptr [rdi]
0x00000000004177aa : jmp qword ptr [rdx]
0x00000000004171c4 : jmp qword ptr [rsi]
0x0000000000402907 : jmp rax
0x0000000000402f3b : jmp rcx
0x0000000000402947 : jmp rdx
0x0000000000420673 : jmp rsp
0x0000000000402930 : jne 0x402937 ; pop rbp ; ret
0x000000000040a389 : jne 0x40a386 ; mov qword ptr [rbp - 0x18], rdx ; pop rbp ; ret
0x000000000040b501 : jne 0x40b4f9 ; mov rax, rdx ; pop rbp ; ret
0x000000000040e3c6 : jne 0x40e3b1 ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000040e6dd : jne 0x40e6c1 ; call rax
0x00000000004100f2 : jne 0x4100ea ; mov rax, rdx ; pop rbp ; ret
0x0000000000413379 : jne 0x41335d ; mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x00000000004146b1 : jne 0x4146a9 ; mov rax, rdx ; pop rbp ; ret
0x0000000000417bb8 : jne 0x417bb0 ; mov rax, rdx ; pop rbp ; ret
0x000000000041bee8 : jne 0x41bef2 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x41d6
0x0000000000421f11 : jnp 0x421f14 ; jmp qword ptr [rcx]
0x0000000000408b51 : jo 0x408bb2 ; ret
0x000000000040bca0 : jo 0x40bcb7 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040bfcb : jo 0x40c02c ; ret
0x00000000004109b9 : jo 0x4109c1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000411135 : jo 0x411196 ; ret
0x0000000000412844 : jo 0x4128a5 ; ret
0x000000000041297e : jo 0x4129df ; ret
0x0000000000412e4e : jo 0x412e56 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004136cf : jo 0x413730 ; ret
0x00000000004136ce : jo 0x413731 ; ret
0x000000000041aa84 : jo 0x41aae5 ; ret
0x00000000004121e0 : js 0x412240 ; pop rbp ; ret
0x0000000000414724 : js 0x414755 ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041fab7 : lcall ptr [rax - 0x2fffffce] ; ret 0xffff
0x000000000041f297 : lcall ptr [rax] ; adc al, byte ptr [rax] ; add byte ptr [rax], dl ; ret
0x00000000004048ce : lea eax, dword ptr [rsi + rdi*8 - 1] ; jmp qword ptr [rcx]
0x00000000004060c3 : lea edi, dword ptr [0x41da67] ; call 0x402359
0x00000000004074aa : lea edi, dword ptr [rbp - 0xf8] ; call 0x413728
0x0000000000407ac8 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004074a9 : lea rdi, qword ptr [rbp - 0xf8] ; call 0x413729
0x0000000000407ac7 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040b4d1 : lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040b4d0 : lodsq rax, qword ptr [rsi] ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000417439 : loop 0x41748b ; or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x0000000000417521 : loop 0x417573 ; or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x000000000040afcc : loope 0x40afd5 ; movzx eax, cl ; pop rbp ; ret
0x0000000000420b31 : loope 0x420b33 ; jmp qword ptr [rdi]
0x000000000040d4eb : loopne 0x40d53b ; add esp, 0x20 ; pop rbp ; ret
0x000000000040d4ea : loopne 0x40d53c ; add esp, 0x20 ; pop rbp ; ret
0x000000000040dcef : loopne 0x40dd3f ; add esp, 0x20 ; pop rbp ; ret
0x000000000040dcee : loopne 0x40dd40 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040df9b : loopne 0x40dfeb ; add esp, 0x30 ; pop rbp ; ret
0x000000000040df9a : loopne 0x40dfec ; add esp, 0x30 ; pop rbp ; ret
0x000000000040e3c7 : loopne 0x40e419 ; mov esi, eax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x0000000000416370 : loopne 0x4163c0 ; add esp, 0x20 ; pop rbp ; ret
0x000000000041636f : loopne 0x4163c1 ; add esp, 0x20 ; pop rbp ; ret
0x00000000004167c0 : loopne 0x4167c8 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041a137 : loopne 0x41a14e ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040e2ce : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040ca15 : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040aee6 : mov al, 0 ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040c33d : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004125ab : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x000000000040d751 : mov al, 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040b614 : mov al, 1 ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000407c08 : mov al, byte ptr [rbp - 0xa] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000408728 : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040b196 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040a5cb : mov al, byte ptr [rbp - 9] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004175df : mov al, dh ; movzx eax, al ; pop rbp ; ret
0x00000000004175de : mov al, sil ; movzx eax, al ; pop rbp ; ret
0x000000000041755f : mov ax, si ; movzx eax, ax ; pop rbp ; ret
0x000000000041365c : mov bh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000417563 : mov bh, -0x40 ; pop rbp ; ret
0x0000000000422131 : mov bh, bh ; jmp rax
0x000000000040cf31 : mov byte ptr [0x623968], al ; pop rbp ; ret
0x0000000000418443 : mov byte ptr [rax + 0x14], 1 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000419acb : mov byte ptr [rax + 0xc], 1 ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040dbed : mov byte ptr [rbp - 1], 0x3f ; movsx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000407b17 : mov byte ptr [rdx + 0x19], cl ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040db08 : mov byte ptr [rdx + 0xb], 0 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402963 : mov byte ptr [rip + 0x220b6e], 1 ; ret
0x000000000041006f : mov dh, -0x39 ; pop rbp ; ret
0x000000000040d4ae : mov dh, -0x3e ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040b22d : mov dh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040afcf : mov dh, -0x3f ; pop rbp ; ret
0x000000000040518d : mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408538 : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004088e9 : mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404369 : mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040844f : mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000404fc1 : mov dh, -0x40 ; add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x0000000000408b4c : mov dh, -0x40 ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040427a : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000407c0e : mov dh, -0x40 ; pop rbp ; ret
0x0000000000413376 : mov dh, -0xe ; mov dword ptr [rbp - 0x24], esi ; mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x000000000041ff11 : mov dh, bh ; call qword ptr [rcx]
0x0000000000420371 : mov dl, -2 ; call qword ptr [rbx]
0x000000000040cdad : mov dword ptr [0x623958], edi ; pop rbp ; ret
0x000000000040cf0d : mov dword ptr [0x623960], edi ; pop rbp ; ret
0x000000000041b686 : mov dword ptr [rax + 0x14], ecx ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000410fe6 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000410ef4 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000410fa8 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000416142 : mov dword ptr [rbp - 0x10], eax ; call 0x402405
0x000000000040a55f : mov dword ptr [rbp - 0x18], eax ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040a38c : mov dword ptr [rbp - 0x18], edx ; pop rbp ; ret
0x0000000000417b3a : mov dword ptr [rbp - 0x1c], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d4e9 : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000413378 : mov dword ptr [rbp - 0x24], esi ; mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x000000000040a375 : mov dword ptr [rbp - 0x28], eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000402d99 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004087d2 : mov dword ptr [rbp - 0x38], eax ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004074e0 : mov dword ptr [rbp - 0x488], eax ; call 0x413768
0x000000000040e2cc : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040c33b : mov dword ptr [rbp - 0x50], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000402c87 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040a388 : mov dword ptr [rbp - 0xc], esi ; mov qword ptr [rbp - 0x18], rdx ; pop rbp ; ret
0x0000000000402cb5 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041b269 : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040cd91 : mov dword ptr [rbp - 8], eax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000416915 : mov dword ptr [rbp - 8], ecx ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000403aa5 : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004133b5 : mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x000000000041105e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404e85 : mov dword ptr [rcx + 0x38], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404ed5 : mov dword ptr [rcx + 0x40], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000419afc : mov dword ptr [rdi + 0x10], eax ; pop rbp ; ret
0x000000000040e7da : mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x000000000040ff00 : mov dword ptr [rdi + 0x48], esi ; pop rbp ; ret
0x000000000041aa9c : mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x000000000040b603 : mov dword ptr [rsi + 0x10], edi ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041847e : mov dword ptr [rsi], edi ; pop rbp ; ret
0x000000000041f280 : mov eax, 0x11 ; ret 0xfffe
0x000000000041fac0 : mov eax, 0x32 ; ret
0x00000000004121dc : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000403973 : mov eax, 0xc50c8b48 ; call 0xffffffffff407b40
0x0000000000408130 : mov eax, 0xf013b48 ; xchg eax, esp ; ret 0xe280
0x00000000004177c8 : mov eax, dword ptr [rax + 0x10] ; mov rdi, qword ptr [rbp - 0x40] ; call rax
0x00000000004179f1 : mov eax, dword ptr [rax + 0x18] ; mov rdi, qword ptr [rbp - 0x48] ; call rax
0x0000000000417854 : mov eax, dword ptr [rax] ; mov rdi, qword ptr [rbp - 0x460] ; call rax
0x00000000004179c0 : mov eax, dword ptr [rax] ; mov rdi, qword ptr [rbp - 0x48] ; call rax
0x0000000000410ea8 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040d15d : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040d42c : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d11b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000410ea5 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000413731 : mov eax, dword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040d3af : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040a055 : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d232 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000410e5d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000410eee : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040a563 : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040dced : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040df99 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040e3cc : mov eax, dword ptr [rbp - 0x20] ; call rax
0x000000000040bd80 : mov eax, dword ptr [rbp - 0x24] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041337b : mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x000000000040fabf : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000410faa : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004162bb : mov eax, dword ptr [rbp - 0x2c] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040b3ab : mov eax, dword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041112f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004121da : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000412719 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041b5c0 : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000416824 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040af32 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004169e2 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000416d14 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041aa7e : mov eax, dword ptr [rbp - 4] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040ff8b : mov eax, dword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040e49c : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b471 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040c3d2 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040c129 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040c5d1 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040bfc5 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000403aa9 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040dfbd : mov eax, dword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040dfdd : mov eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040dffd : mov eax, dword ptr [rdi + 0x20] ; pop rbp ; ret
0x00000000004136ad : mov eax, dword ptr [rdi + 0x50] ; pop rbp ; ret
0x00000000004136ed : mov eax, dword ptr [rdi + 0x60] ; pop rbp ; ret
0x00000000004136cd : mov eax, dword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000041339c : mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004134cf : mov eax, edi ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004173fe : mov eax, edi ; pop rbp ; ret
0x000000000040e9c1 : mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040a46d : mov eax, edx ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040b504 : mov eax, edx ; pop rbp ; ret
0x000000000040b1bf : mov eax, esi ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000413443 : mov eax, esi ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000417560 : mov eax, esi ; movzx eax, ax ; pop rbp ; ret
0x000000000040a633 : mov eax, esi ; pop rbp ; ret
0x0000000000417858 : mov ebp, 0xfffffba0 ; call rax
0x00000000004074ab : mov ebp, 0xffffff08 ; call 0x413727
0x000000000040298b : mov ebp, esp ; call rax
0x00000000004028f1 : mov ebp, esp ; ja 0x4028fc ; pop rbp ; ret
0x00000000004133b2 : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000403a93 : mov ecx, 0x48ffffe6 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000402f34 : mov ecx, dword ptr [rax*8 + 0x41b8e0] ; jmp rcx
0x0000000000403975 : mov ecx, dword ptr [rax*8 + 0x41bae8] ; jmp rcx
0x00000000004111e7 : mov ecx, dword ptr [rax*8 + 0x41e580] ; jmp rcx
0x00000000004114c7 : mov ecx, dword ptr [rax*8 + 0x41e5c8] ; jmp rcx
0x00000000004155ce : mov ecx, dword ptr [rax*8 + 0x41ead8] ; jmp rcx
0x0000000000410ef1 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040ed22 : mov ecx, dword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040ecbf : mov ecx, dword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040e353 : mov ecx, dword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040f863 : mov ecx, dword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000041777b : mov ecx, dword ptr [rbp - 0x48] ; call rax
0x000000000040f930 : mov ecx, dword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000041749d : mov ecx, eax ; shl edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000041746d : mov ecx, eax ; shr edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000402985 : mov edi, 0x622e20 ; mov rbp, rsp ; call rax
0x0000000000402902 : mov edi, 0x623468 ; jmp rax
0x0000000000402942 : mov edi, 0x623468 ; jmp rdx
0x0000000000405f0c : mov edi, dword ptr [rbp - 0x28] ; call 0x402195
0x00000000004177cc : mov edi, dword ptr [rbp - 0x40] ; call rax
0x0000000000417857 : mov edi, dword ptr [rbp - 0x460] ; call rax
0x00000000004179c3 : mov edi, dword ptr [rbp - 0x48] ; call rax
0x000000000040fefc : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040dfb9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040dfd9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040dff9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x00000000004136a9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x00000000004136e9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x00000000004136c9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000040ecc3 : mov edi, dword ptr [rcx] ; call rax
0x000000000040e6d9 : mov edi, dword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x0000000000418478 : mov edi, dword ptr [rsi] ; add rdi, rax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x000000000041613f : mov edi, eax ; mov qword ptr [rbp - 0x10], rax ; call 0x402408
0x000000000041b7f7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000041b7f6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000417777 : mov edx, dword ptr [rbp - 0x40] ; mov rcx, qword ptr [rbp - 0x48] ; call rax
0x0000000000413735 : mov edx, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040e7a2 : mov esi, 0x48ffffff ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040e6dc : mov esi, dword ptr [rbp - 0x20] ; call rax
0x00000000004178ec : mov esi, dword ptr [rbp - 0x460] ; call rax
0x000000000040e357 : mov esi, dword ptr [rcx] ; call rax
0x0000000000402940 : mov esi, eax ; mov edi, 0x623468 ; jmp rdx
0x000000000040e3c9 : mov esi, eax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000040427d : mov esp, ebp ; pop rbp ; ret
0x000000000040cdac : mov qword ptr [0x623958], rdi ; pop rbp ; ret
0x000000000040cf0c : mov qword ptr [0x623960], rdi ; pop rbp ; ret
0x0000000000416141 : mov qword ptr [rbp - 0x10], rax ; call 0x402406
0x000000000040a55e : mov qword ptr [rbp - 0x18], rax ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040a38b : mov qword ptr [rbp - 0x18], rdx ; pop rbp ; ret
0x00000000004074df : mov qword ptr [rbp - 0x488], rax ; call 0x413769
0x000000000040cd90 : mov qword ptr [rbp - 8], rax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000416914 : mov qword ptr [rbp - 8], rcx ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000403aa4 : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004133b4 : mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000041105d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404e84 : mov qword ptr [rcx + 0x38], rax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404ed4 : mov qword ptr [rcx + 0x40], rax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000419afb : mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x000000000040feff : mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000041847d : mov qword ptr [rsi], rdi ; pop rbp ; ret
0x000000000040e2cd : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040c33c : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004121db : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x00000000004177c7 : mov rax, qword ptr [rax + 0x10] ; mov rdi, qword ptr [rbp - 0x40] ; call rax
0x00000000004179f0 : mov rax, qword ptr [rax + 0x18] ; mov rdi, qword ptr [rbp - 0x48] ; call rax
0x00000000004179bf : mov rax, qword ptr [rax] ; mov rdi, qword ptr [rbp - 0x48] ; call rax
0x000000000040d15c : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040d42b : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d11a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000410ea4 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000413730 : mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040d3ae : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040d231 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000410e5c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040a562 : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040dcec : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040df98 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040e3cb : mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000040fabe : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040b3aa : mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041112e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000412718 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040ff8a : mov rax, qword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040e49b : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b470 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040c3d1 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040c128 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040c5d0 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040bfc4 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000403aa8 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040dfbc : mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040dfdc : mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040dffc : mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x00000000004136ac : mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x00000000004136ec : mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x00000000004136cc : mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x00000000004173fd : mov rax, rdi ; pop rbp ; ret
0x000000000040e9c0 : mov rax, rdx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040a46c : mov rax, rdx ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040b503 : mov rax, rdx ; pop rbp ; ret
0x000000000040a632 : mov rax, rsi ; pop rbp ; ret
0x000000000040298a : mov rbp, rsp ; call rax
0x00000000004028f0 : mov rbp, rsp ; ja 0x4028fd ; pop rbp ; ret
0x00000000004133b1 : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000402f33 : mov rcx, qword ptr [rax*8 + 0x41b8e0] ; jmp rcx
0x0000000000403974 : mov rcx, qword ptr [rax*8 + 0x41bae8] ; jmp rcx
0x00000000004111e6 : mov rcx, qword ptr [rax*8 + 0x41e580] ; jmp rcx
0x00000000004114c6 : mov rcx, qword ptr [rax*8 + 0x41e5c8] ; jmp rcx
0x00000000004155cd : mov rcx, qword ptr [rax*8 + 0x41ead8] ; jmp rcx
0x000000000040ed21 : mov rcx, qword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040ecbe : mov rcx, qword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040e352 : mov rcx, qword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040f862 : mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000041777a : mov rcx, qword ptr [rbp - 0x48] ; call rax
0x000000000040f92f : mov rcx, qword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000405f0b : mov rdi, qword ptr [rbp - 0x28] ; call 0x402196
0x00000000004177cb : mov rdi, qword ptr [rbp - 0x40] ; call rax
0x0000000000417856 : mov rdi, qword ptr [rbp - 0x460] ; call rax
0x00000000004179c2 : mov rdi, qword ptr [rbp - 0x48] ; call rax
0x000000000040fefb : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040dfb8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040dfd8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040dff8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x00000000004136a8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x00000000004136e8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x00000000004136c8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000040ecc2 : mov rdi, qword ptr [rcx] ; call rax
0x000000000040e6d8 : mov rdi, qword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x000000000041613e : mov rdi, rax ; mov qword ptr [rbp - 0x10], rax ; call 0x402409
0x0000000000417776 : mov rdx, qword ptr [rbp - 0x40] ; mov rcx, qword ptr [rbp - 0x48] ; call rax
0x0000000000413734 : mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040e6db : mov rsi, qword ptr [rbp - 0x20] ; call rax
0x00000000004178eb : mov rsi, qword ptr [rbp - 0x460] ; call rax
0x000000000040e356 : mov rsi, qword ptr [rcx] ; call rax
0x000000000040293f : mov rsi, rax ; mov edi, 0x623468 ; jmp rdx
0x000000000040e3c8 : mov rsi, rax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000040427c : mov rsp, rbp ; pop rbp ; ret
0x0000000000417825 : movabs al, byte ptr [0x8148ca8948fffffb] ; ret 1
0x000000000041ff0c : movsb byte ptr [rdi], byte ptr [rsi] ; add eax, dword ptr [rax] ; add al, dl ; mov dh, bh ; call qword ptr [rcx]
0x0000000000421f0c : movsb byte ptr [rdi], byte ptr [rsi] ; and eax, dword ptr [rax] ; add al, dl ; jnp 0x421f19 ; jmp qword ptr [rcx]
0x000000000042080c : movsb byte ptr [rdi], byte ptr [rsi] ; or al, 0 ; add byte ptr [rax], dl ; sar esi, cl ; call rdi
0x000000000040dbf1 : movsx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x000000000040518c : movzx eax, al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408537 : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004088e8 : movzx eax, al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404368 : movzx eax, al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040844e : movzx eax, al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000404fc0 : movzx eax, al ; add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x0000000000408b4b : movzx eax, al ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000404279 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000407c0d : movzx eax, al ; pop rbp ; ret
0x0000000000417562 : movzx eax, ax ; pop rbp ; ret
0x000000000041006e : movzx eax, bh ; pop rbp ; ret
0x000000000040b22c : movzx eax, cl ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040afce : movzx eax, cl ; pop rbp ; ret
0x000000000041365b : movzx eax, cx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041006d : movzx eax, dil ; pop rbp ; ret
0x000000000040d4ad : movzx eax, dl ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000407c09 : mul byte ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x0000000000407c0a : mul byte ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000040a5cc : mul dword ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000040a5cd : mul dword ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000041f294 : nop ; ret 0xfffe
0x000000000041f27c : nop ; sar esi, -1 ; mov eax, 0x11 ; ret 0xfffe
0x00000000004212d0 : nop ; sbb edi, edi ; call rbx
0x000000000041b818 : nop dword ptr [rax + rax] ; ret
0x000000000042080d : or al, 0 ; add byte ptr [rax], dl ; sar esi, cl ; call rdi
0x0000000000403976 : or al, 0xffffffffffffffc5 ; call 0xffffffffff407b3d
0x00000000004114c8 : or al, 0xffffffffffffffc5 ; enter 0x41e5, 0 ; jmp rcx
0x0000000000419acd : or al, 1 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000414c08 : or byte ptr [r15], cl ; sahf ; ret 0xe280
0x000000000041336d : or byte ptr [r15], cl ; xchg eax, edi ; ret 0xe280
0x000000000040b553 : or byte ptr [r15], cl ; xchg eax, esp ; ret 0x5588
0x0000000000411a3e : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000411a3f : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000042036d : or byte ptr [rax], al ; add byte ptr [rax], dl ; mov dl, -2 ; call qword ptr [rbx]
0x000000000040c78e : or byte ptr [rcx + 0x39f9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000040d490 : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000414c09 : or byte ptr [rdi], cl ; sahf ; ret 0xe280
0x000000000041336e : or byte ptr [rdi], cl ; xchg eax, edi ; ret 0xe280
0x000000000040b554 : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x0000000000407081 : or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000412901 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040db0a : or eax, dword ptr [rax] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004173fb : or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x0000000000417471 : or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000402966 : or esp, dword ptr [rdx] ; add byte ptr [rcx], al ; ret
0x00000000004173fa : or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x000000000041006b : out 1, eax ; movzx eax, dil ; pop rbp ; ret
0x0000000000417470 : out dx, eax ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000402965 : outsb dx, byte ptr [rsi] ; or esp, dword ptr [rdx] ; add byte ptr [rcx], al ; ret
0x0000000000405e0e : outsb dx, byte ptr [rsi] ; ret
0x000000000040e259 : outsb dx, byte ptr [rsi] ; ret 0x280f
0x000000000041b80c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041b80e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000415a8e : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041b810 : pop r14 ; pop r15 ; ret
0x0000000000407acc : pop r14 ; pop rbp ; ret
0x0000000000415a90 : pop r15 ; pop rbp ; ret
0x000000000041b812 : pop r15 ; ret
0x000000000040cdb0 : pop rax ; cmp dword ptr [rdx], esp ; pop rbp ; ret
0x0000000000402962 : pop rbp ; mov byte ptr [rip + 0x220b6e], 1 ; ret
0x0000000000402901 : pop rbp ; mov edi, 0x623468 ; jmp rax
0x000000000040293e : pop rbp ; mov rsi, rax ; mov edi, 0x623468 ; jmp rdx
0x000000000041b80b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041b80f : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004028f5 : pop rbp ; ret
0x0000000000415a8d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000407acb : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000404fc7 : pop rbx ; pop rbp ; ret
0x0000000000415a91 : pop rdi ; pop rbp ; ret
0x000000000041b813 : pop rdi ; ret
0x0000000000415a8f : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000041b811 : pop rsi ; pop r15 ; ret
0x0000000000407acd : pop rsi ; pop rbp ; ret
0x0000000000405dee : pop rsi ; ret
0x000000000041b80d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040e270 : pop rsp ; ret 0xf66
0x0000000000405f20 : pop rsp ; ret 0xffff
0x000000000040cf34 : push 0x5d006239 ; ret
0x00000000004136ae : push r8 ; pop rbp ; ret
0x0000000000403a9a : push rax ; pop rbp ; ret
0x0000000000418cd8 : push rbp ; call 0x40e2a
0x0000000000413736 : push rbp ; clc ; pop rbp ; ret
0x0000000000411a42 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000402984 : push rbp ; mov edi, 0x622e20 ; mov rbp, rsp ; call rax
0x00000000004133b0 : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000040c1a5 : push rbp ; ror byte ptr [rax - 0x77], 1 ; ret 0xb1e8
0x0000000000417dcd : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000041210e : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000412d17 : push rbp ; shr al, 1 ; ret 0xfef7
0x000000000040bb0c : push rsi ; adc byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000040ceeb : rcl dword ptr [rdx - 1], -1 ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041746e : rcl ebx, -0x11 ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000041749e : rcl ebx, -0x19 ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x00000000004209f0 : rcr dl, -2 ; call rbx
0x00000000004002da : ret
0x00000000004074b2 : ret 0
0x0000000000419b95 : ret 0x10
0x000000000040c999 : ret 0x11e8
0x0000000000418525 : ret 0x18
0x0000000000419ed2 : ret 0x18e8
0x0000000000402762 : ret 0x220b
0x0000000000402562 : ret 0x220c
0x0000000000402362 : ret 0x220d
0x0000000000402162 : ret 0x220e
0x00000000004083c6 : ret 0x24e8
0x000000000040e25a : ret 0x280f
0x000000000041390d : ret 0x3de8
0x0000000000402a3b : ret 0x41
0x000000000041bef0 : ret 0x41d6
0x0000000000419106 : ret 0x4a3b
0x000000000040bba7 : ret 0x4a8b
0x0000000000404300 : ret 0x5588
0x000000000041a08f : ret 0x5be8
0x000000000040abea : ret 0x7e
0x000000000040d4af : ret 0x8348
0x00000000004061b7 : ret 0x83e8
0x000000000040b8b3 : ret 0x870f
0x0000000000415589 : ret 0x8844
0x00000000004099b7 : ret 0x8948
0x00000000004099c5 : ret 0x894d
0x0000000000411b6d : ret 0x89a5
0x000000000040a7f1 : ret 0x8b48
0x0000000000413bbe : ret 0x8ce8
0x0000000000406e3f : ret 0x8d88
0x0000000000400290 : ret 0x920f
0x0000000000419986 : ret 0x94e8
0x0000000000407c7b : ret 0x9588
0x000000000041a351 : ret 0x99e8
0x000000000040c508 : ret 0xa2e8
0x0000000000409dde : ret 0xace8
0x0000000000406530 : ret 0xae8
0x000000000040318d : ret 0xb0
0x000000000040c1a9 : ret 0xb1e8
0x00000000004077d4 : ret 0xb6e8
0x000000000040ebe6 : ret 0xb948
0x0000000000411a5b : ret 0xbfe8
0x00000000004182e6 : ret 0xc
0x0000000000402925 : ret 0xc148
0x000000000040ace9 : ret 0xd1e8
0x0000000000412bd3 : ret 0xd284
0x0000000000408136 : ret 0xe280
0x00000000004082ea : ret 0xe8
0x000000000041205c : ret 0xee8
0x000000000041b66e : ret 0xf01
0x000000000040d872 : ret 0xf280
0x00000000004163e9 : ret 0xf40
0x000000000040e271 : ret 0xf66
0x0000000000409cee : ret 0xfce8
0x0000000000412d1a : ret 0xfef7
0x000000000040f5b0 : ret 0xff3
0x000000000040bfda : ret 0xff69
0x0000000000403f6a : ret 0xffe5
0x00000000004031ba : ret 0xffef
0x0000000000416147 : ret 0xfffe
0x0000000000405f11 : ret 0xffff
0x0000000000408615 : ret 1
0x00000000004007c0 : ret 2
0x000000000041a7cb : ret 3
0x000000000040d6e8 : ret 8
0x0000000000414685 : rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040afca : rol dword ptr [rax - 0x49f0fe1f], -0x3f ; pop rbp ; ret
0x00000000004179bd : ror byte ptr [r8 - 0x75], 1 ; add byte ptr [rax - 0x75], cl ; jge 0x417987 ; call rax
0x0000000000415bcb : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000411130 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x41119b ; ret
0x000000000040292c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40293b ; pop rbp ; ret
0x00000000004177c6 : ror byte ptr [rax - 0x75], 1 ; adc byte ptr [rax - 0x75], cl ; jge 0x417798 ; call rax
0x000000000041793f : ror byte ptr [rax - 0x75], 1 ; adc byte ptr [rax - 0x75], cl ; jge 0x417911 ; call rax
0x00000000004179be : ror byte ptr [rax - 0x75], 1 ; add byte ptr [rax - 0x75], cl ; jge 0x417986 ; call rax
0x00000000004179ef : ror byte ptr [rax - 0x75], 1 ; sbb byte ptr [rax - 0x75], cl ; jge 0x4179b9 ; call rax
0x000000000040427b : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x0000000000415bcc : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x000000000040c1a6 : ror byte ptr [rax - 0x77], 1 ; ret 0xb1e8
0x0000000000408b4d : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x408bb6 ; ret
0x0000000000411131 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x41119a ; ret
0x000000000040436a : ror byte ptr [rax - 0x7d], -0x3c ; pop rbp ; ret
0x0000000000408450 : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x000000000040bc9c : ror byte ptr [rax - 0x7f], -0x3c ; jo 0x40bcbb ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004109b5 : ror byte ptr [rax - 0x7f], -0x3c ; jo 0x4109c5 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000412e4a : ror byte ptr [rax - 0x7f], -0x3c ; jo 0x412e5a ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000417dce : ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000041210f : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000414c0b : sahf ; ret 0xe280
0x0000000000421f10 : sar byte ptr [rbx - 1], 1 ; jmp qword ptr [rcx]
0x000000000040292e : sar eax, 1 ; jne 0x402939 ; pop rbp ; ret
0x000000000041f27d : sar esi, -1 ; mov eax, 0x11 ; ret 0xfffe
0x0000000000420811 : sar esi, cl ; call rdi
0x000000000040292d : sar rax, 1 ; jne 0x40293a ; pop rbp ; ret
0x000000000042156d : sbb al, byte ptr [rax] ; add byte ptr [rax], dh ; and edi, edi ; call qword ptr [rdx]
0x0000000000421251 : sbb bh, bh ; jmp qword ptr [rdx]
0x0000000000420a10 : sbb bl, -2 ; call rsp
0x0000000000414c1f : sbb byte ptr [r15], cl ; sahf ; ret 0xe280
0x00000000004179f3 : sbb byte ptr [rax - 0x75], cl ; jge 0x4179b5 ; call rax
0x00000000004179f2 : sbb byte ptr [rax - 0x75], cl ; jge 0x4179b6 ; call rax
0x0000000000414c20 : sbb byte ptr [rdi], cl ; sahf ; ret 0xe280
0x000000000041330f : sbb eax, 0x48fffef2 ; add esp, 0x20 ; pop rbp ; ret
0x00000000004212d1 : sbb edi, edi ; call rbx
0x00000000004215ac : sbb r8b, byte ptr [rax] ; add byte ptr [rax], dh ; and edi, edi ; call qword ptr [rdx]
0x0000000000402a5a : scasb al, byte ptr [rdi] ; ret
0x000000000040e9e4 : sete al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040b573 : setne al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040b575 : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000040e28f : shl dword ptr [rsi + 0xf], 0x5c ; ret 0xf66
0x000000000041749f : shl edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000417438 : shl edx, cl ; or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x0000000000412d18 : shr al, 1 ; ret 0xfef7
0x000000000041746f : shr edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x00000000004173f8 : shr edx, cl ; or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x00000000004042f9 : stc ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x000000000040b198 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004173c2 : sub al, byte ptr [rbx] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040a62d : sub eax, edx ; add rsi, rax ; mov rax, rsi ; pop rbp ; ret
0x0000000000419ba1 : sub ebx, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041b8c1 : sub esp, 8 ; add rsp, 8 ; ret
0x000000000041b8c0 : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000405f1a : test byte ptr [rax], ah ; add byte ptr [rax], al ; call 0x402187
0x000000000041b81a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000405f2b : test byte ptr [rdi], cl ; add byte ptr [rax], al ; call 0x402187
0x00000000004209ec : test byte ptr [rsi], cl ; add byte ptr [rax], al ; rcr dl, -2 ; call rbx
0x000000000040b8ac : test dword ptr [rax + 0x2b], 0x39481047 ; ret 0x870f
0x000000000041fe91 : test edi, esi ; jmp rax
0x0000000000422071 : xchg bh, bh ; call rdi
0x0000000000422070 : xchg dil, dil ; call rdi
0x000000000041b5b6 : xchg eax, ebp ; ret 0xd284
0x000000000040d498 : xchg eax, ebp ; ret 0xe280
0x000000000040d871 : xchg eax, ebp ; ret 0xf280
0x000000000040b574 : xchg eax, ebp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000413370 : xchg eax, edi ; ret 0xe280
0x000000000040afc9 : xchg eax, edx ; rol dword ptr [rax - 0x49f0fe1f], -0x3f ; pop rbp ; ret
0x0000000000408f4a : xchg eax, esp ; ret
0x00000000004042ff : xchg eax, esp ; ret 0x5588
0x0000000000407c7a : xchg eax, esp ; ret 0x9588
0x0000000000412bd2 : xchg eax, esp ; ret 0xd284
0x0000000000408135 : xchg eax, esp ; ret 0xe280
0x000000000040e9e5 : xchg eax, esp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004173fc : xlatb ; mov rax, rdi ; pop rbp ; ret
0x000000000041fac9 : xor al, byte ptr [rax] ; add al, dl ; ret
0x000000000041fab9 : xor al, byte ptr [rax] ; add al, dl ; ret 0xffff
0x000000000041fab1 : xor al, byte ptr [rax] ; add byte ptr [rax], ah ; ret 0xffff
0x000000000041fac1 : xor al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000041f0bc : xor byte ptr [rax], 0xfe ; call rax
0x000000000041737e : xor byte ptr [rax], dl ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004181de : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041f0bd : xor dh, bh ; call rax
0x000000000041fc11 : xor dh, bh ; jmp rdx
0x0000000000410fa6 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000407bad : xor esp, dword ptr [rdx] ; add rsp, 0x10 ; pop rbp ; ret
