0x0000000000403879 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040737f : add al, dh ; ret
0x0000000000407400 : add bh, -1 ; jmp qword ptr [rdx]
0x00000000004060af : add bl, dh ; ret
0x0000000000404ffe : add byte ptr [rax - 0x75], cl ; jge 0x405002 ; call 0x4012d7
0x0000000000404858 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x00000000004073fe : add byte ptr [rax], al ; add bh, -1 ; jmp qword ptr [rdx]
0x00000000004060ad : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000404ffc : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jge 0x405004 ; call 0x4012d9
0x00000000004060ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004060ac : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000407359 : add byte ptr [rax], al ; add byte ptr [rbx + rax], ah ; add byte ptr [rax], al ; nop ; ret 0xffff
0x0000000000407379 : add byte ptr [rax], al ; add byte ptr [rbx + rax], al ; add al, dh ; ret
0x000000000040414e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040737a : add byte ptr [rax], al ; add r8d, dword ptr [rax] ; add al, dh ; ret
0x000000000040383a : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004035e0 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004012ab : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000040735a : add byte ptr [rax], al ; and al, 3 ; add byte ptr [rax], al ; nop ; ret 0xffff
0x000000000040535b : add byte ptr [rax], al ; call 0x401584
0x00000000004013c9 : add byte ptr [rax], al ; jmp 0x4012c9
0x0000000000402422 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000404ffd : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 8] ; call 0x4012d8
0x000000000040735e : add byte ptr [rax], al ; nop ; ret 0xffff
0x0000000000402238 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040471b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004035a8 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004060ae : add byte ptr [rax], al ; ret
0x000000000040471c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004035a9 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040735b : add byte ptr [rbx + rax], ah ; add byte ptr [rax], al ; nop ; ret 0xffff
0x000000000040737b : add byte ptr [rbx + rax], al ; add al, dh ; ret
0x0000000000401728 : add byte ptr [rcx], al ; ret
0x0000000000404150 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000403838 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040471a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004035a7 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004051bd : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405c0a : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401724 : add eax, 0x206b76 ; add ebx, esi ; ret
0x000000000040737d : add eax, dword ptr [rax] ; add al, dh ; ret
0x00000000004016eb : add eax, edx ; sar rax, 1 ; jne 0x4016fc ; pop rbp ; ret
0x0000000000401729 : add ebx, esi ; ret
0x000000000040185b : add esp, 0x10 ; pop rbp ; ret
0x000000000040596c : add esp, 0x130 ; pop rbp ; ret
0x00000000004035a4 : add esp, 0x138 ; pop rbx ; pop rbp ; ret
0x0000000000404a0c : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000402234 : add esp, 0x1c0 ; pop rbp ; ret
0x0000000000401baa : add esp, 0x20 ; pop rbp ; ret
0x000000000040193d : add esp, 0x30 ; pop rbp ; ret
0x0000000000401d4c : add esp, 0x40 ; pop rbp ; ret
0x0000000000403c1c : add esp, 0x50 ; pop rbp ; ret
0x00000000004026b3 : add esp, 0x70 ; pop rbp ; ret
0x000000000040375e : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000403b2d : add esp, 0x90 ; pop rbp ; ret
0x00000000004048a4 : add esp, 0xa0 ; pop rbp ; ret
0x00000000004012ae : add esp, 8 ; ret
0x000000000040737c : add r8d, dword ptr [rax] ; add al, dh ; ret
0x00000000004016ea : add rax, rdx ; sar rax, 1 ; jne 0x4016fd ; pop rbp ; ret
0x000000000040185a : add rsp, 0x10 ; pop rbp ; ret
0x000000000040596b : add rsp, 0x130 ; pop rbp ; ret
0x00000000004035a3 : add rsp, 0x138 ; pop rbx ; pop rbp ; ret
0x0000000000404a0b : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000402233 : add rsp, 0x1c0 ; pop rbp ; ret
0x0000000000401ba9 : add rsp, 0x20 ; pop rbp ; ret
0x000000000040193c : add rsp, 0x30 ; pop rbp ; ret
0x0000000000401d4b : add rsp, 0x40 ; pop rbp ; ret
0x0000000000403c1b : add rsp, 0x50 ; pop rbp ; ret
0x00000000004026b2 : add rsp, 0x70 ; pop rbp ; ret
0x000000000040375d : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000403b2c : add rsp, 0x90 ; pop rbp ; ret
0x00000000004048a3 : add rsp, 0xa0 ; pop rbp ; ret
0x00000000004012ad : add rsp, 8 ; ret
0x0000000000405c09 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040735c : and al, 3 ; add byte ptr [rax], al ; nop ; ret 0xffff
0x0000000000401727 : and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000405357 : and byte ptr [rdi + 0xe], bh ; call 0x401588
0x0000000000403b67 : and eax, 0x48fffffd ; add esp, 0x20 ; pop rbp ; ret
0x0000000000401daf : and eax, 0x6082a8 ; pop rbp ; ret
0x0000000000401dd3 : and eax, 0x6082b0 ; pop rbp ; ret
0x0000000000405003 : call 0x4012d2
0x00000000004050a8 : call 0x4013a2
0x00000000004052b8 : call 0x4014c2
0x000000000040535d : call 0x401582
0x00000000004035d9 : call 0xffffffffe902bf29
0x00000000004035d8 : call 0xffffffffe902bf2a
0x0000000000406089 : call qword ptr [r12 + rbx*8]
0x0000000000407163 : call qword ptr [rsi]
0x000000000040608a : call qword ptr [rsp + rbx*8]
0x000000000040174d : call rax
0x0000000000407383 : call rdx
0x000000000040596a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x0000000000404c0f : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404161 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000405002 : clc ; call 0x4012d3
0x00000000004016ef : clc ; jne 0x4016f8 ; pop rbp ; ret
0x0000000000402565 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405fdb : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000405fde : clc ; pop rbp ; ret
0x0000000000405ab6 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040533b : cld ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405280 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000405fd8 : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000405ab3 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405a56 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040527d : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004035a6 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004016ad : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4016c0 ; pop rbp ; ret
0x000000000040425c : cwde ; mov rcx, qword ptr [rax*8 + 0x406938] ; jmp rcx
0x0000000000402765 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; xor byte ptr [rax + rax*2], ah ; jmp rcx
0x0000000000404f6e : dec dword ptr [rax - 0x75] ; push rbp ; fmul dword ptr [rax + 1] ; ret 0x8948
0x00000000004058cf : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000040368b : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000404f72 : fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000402fc3 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040608c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000401859 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004016c0 : hlt ; pop rbp ; mov edi, 0x608260 ; jmp rax
0x0000000000401726 : imul esp, dword ptr [rax], 0 ; add ebx, esi ; ret
0x0000000000405356 : in al, dx ; and byte ptr [rdi + 0xe], bh ; call 0x401589
0x0000000000404860 : int 0x80
0x00000000004016b3 : ja 0x4016ba ; pop rbp ; ret
0x0000000000401725 : jbe 0x401798 ; and byte ptr [rax], al ; add ebx, esi ; ret
0x00000000004016bf : je 0x4016bd ; pop rbp ; mov edi, 0x608260 ; jmp rax
0x0000000000405001 : jge 0x404fff ; call 0x4012d4
0x00000000004052b6 : jge 0x4052ac ; call 0x4014c4
0x00000000004013cb : jmp 0x4012c7
0x0000000000407523 : jmp qword ptr [rax]
0x0000000000407403 : jmp qword ptr [rdx]
0x00000000004016c7 : jmp rax
0x000000000040276e : jmp rcx
0x0000000000401707 : jmp rdx
0x00000000004070e3 : jmp rsi
0x00000000004016f0 : jne 0x4016f7 ; pop rbp ; ret
0x00000000004026b5 : jo 0x402716 ; ret
0x0000000000403dc4 : jo 0x403e25 ; ret
0x0000000000403efe : jo 0x403f5f ; ret
0x0000000000403760 : js 0x4037c0 ; pop rbp ; ret
0x0000000000403c9b : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000403b2b : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000405c06 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401dd1 : mov byte ptr [0x6082b0], al ; pop rbp ; ret
0x00000000004052b1 : mov byte ptr [rbp - 0x11], cl ; mov rdi, qword ptr [rbp - 0x10] ; call 0x4014c9
0x0000000000401723 : mov byte ptr [rip + 0x206b76], 1 ; ret
0x00000000004051bf : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405c0c : mov dh, -0x40 ; pop rbp ; ret
0x0000000000401dad : mov dword ptr [0x6082a8], edi ; pop rbp ; ret
0x0000000000402566 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000402474 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000402528 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000401939 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401857 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405fd9 : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004025de : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004050c6 : mov dword ptr [rdx], ecx ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040375c : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000402428 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000404b2b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401ffc : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402425 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000401f7f : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000404dc3 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004023dd : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040246e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040252a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004026af : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040375a : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000403c99 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000405ab4 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405339 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040527e : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404c0d : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040415f : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000405fdc : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040174b : mov ebp, esp ; call rax
0x00000000004016b1 : mov ebp, esp ; ja 0x4016bc ; pop rbp ; ret
0x0000000000402767 : mov ecx, dword ptr [rax*8 + 0x406430] ; jmp rcx
0x0000000000402a47 : mov ecx, dword ptr [rax*8 + 0x406478] ; jmp rcx
0x000000000040425e : mov ecx, dword ptr [rax*8 + 0x406938] ; jmp rcx
0x0000000000402471 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401745 : mov edi, 0x607e20 ; mov rbp, rsp ; call rax
0x00000000004016c2 : mov edi, 0x608260 ; jmp rax
0x0000000000401702 : mov edi, 0x608260 ; jmp rdx
0x0000000000405358 : mov edi, 0xe ; call 0x401587
0x00000000004052b5 : mov edi, dword ptr [rbp - 0x10] ; call 0x4014c5
0x0000000000405000 : mov edi, dword ptr [rbp - 8] ; call 0x4012d5
0x0000000000406087 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000406086 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000401700 : mov esi, eax ; mov edi, 0x608260 ; jmp rdx
0x0000000000401dac : mov qword ptr [0x6082a8], rdi ; pop rbp ; ret
0x00000000004025dd : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004050c5 : mov qword ptr [rdx], rcx ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000403c9a : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040375b : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000404b2a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401ffb : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402424 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000401f7e : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000404dc2 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004023dc : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004026ae : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000403c98 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000404c0c : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040415e : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040174a : mov rbp, rsp ; call rax
0x00000000004016b0 : mov rbp, rsp ; ja 0x4016bd ; pop rbp ; ret
0x0000000000402766 : mov rcx, qword ptr [rax*8 + 0x406430] ; jmp rcx
0x0000000000402a46 : mov rcx, qword ptr [rax*8 + 0x406478] ; jmp rcx
0x000000000040425d : mov rcx, qword ptr [rax*8 + 0x406938] ; jmp rcx
0x00000000004052b4 : mov rdi, qword ptr [rbp - 0x10] ; call 0x4014c6
0x0000000000404fff : mov rdi, qword ptr [rbp - 8] ; call 0x4012d6
0x00000000004016ff : mov rsi, rax ; mov edi, 0x608260 ; jmp rdx
0x00000000004051be : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405c0b : movzx eax, al ; pop rbp ; ret
0x0000000000407360 : nop ; ret 0xffff
0x00000000004060a8 : nop dword ptr [rax + rax] ; ret
0x0000000000402768 : or al, 0xffffffffffffffc5 ; xor byte ptr [rax + rax*2], ah ; jmp rcx
0x0000000000402fbe : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000402fbf : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000403e81 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004052b3 : out dx, eax ; mov rdi, qword ptr [rbp - 0x10] ; call 0x4014c7
0x00000000004052b2 : out dx, eax ; mov rdi, qword ptr [rbp - 0x10] ; call 0x4014c8
0x000000000040609c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040609e : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040471e : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004060a0 : pop r14 ; pop r15 ; ret
0x0000000000404720 : pop r15 ; pop rbp ; ret
0x00000000004060a2 : pop r15 ; ret
0x0000000000401722 : pop rbp ; mov byte ptr [rip + 0x206b76], 1 ; ret
0x00000000004016c1 : pop rbp ; mov edi, 0x608260 ; jmp rax
0x00000000004016fe : pop rbp ; mov rsi, rax ; mov edi, 0x608260 ; jmp rdx
0x000000000040609b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040609f : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004016b5 : pop rbp ; ret
0x000000000040471d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004035aa : pop rbx ; pop rbp ; ret
0x0000000000404721 : pop rdi ; pop rbp ; ret
0x00000000004060a3 : pop rdi ; ret
0x000000000040471f : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004060a1 : pop rsi ; pop r15 ; ret
0x000000000040609d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004050a4 : push -0x17000001 ; ret 0xffff
0x0000000000403c1e : push rax ; pop rbp ; ret
0x0000000000404f71 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000402fc2 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000401744 : push rbp ; mov edi, 0x607e20 ; mov rbp, rsp ; call rax
0x000000000040555d : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000040368e : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x00000000004012b1 : ret
0x00000000004015d2 : ret 0x206b
0x00000000004013d2 : ret 0x206c
0x0000000000404219 : ret 0x8844
0x0000000000404c92 : ret 0x8948
0x00000000004030ed : ret 0x89a5
0x0000000000402fc6 : ret 0x8b48
0x0000000000402fdb : ret 0xafe8
0x00000000004016e5 : ret 0xc148
0x0000000000404153 : ret 0xd284
0x00000000004035dc : ret 0xee8
0x0000000000404f2a : ret 0xfffb
0x0000000000405005 : ret 0xffff
0x00000000004038fe : ret 1
0x0000000000403692 : ret 8
0x000000000040485b : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x00000000004026b0 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x40271b ; ret
0x00000000004016ec : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4016fb ; pop rbp ; ret
0x000000000040485c : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x00000000004026b1 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x40271a ; ret
0x000000000040555e : ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000040368f : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x00000000004016ee : sar eax, 1 ; jne 0x4016f9 ; pop rbp ; ret
0x00000000004016ed : sar rax, 1 ; jne 0x4016fa ; pop rbp ; ret
0x0000000000407378 : sbb al, 0 ; add byte ptr [rax], al ; add r8d, dword ptr [rax] ; add al, dh ; ret
0x0000000000407358 : sbb al, 0 ; add byte ptr [rax], al ; and al, 3 ; add byte ptr [rax], al ; nop ; ret 0xffff
0x0000000000405c08 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004060dd : sub esp, 8 ; add rsp, 8 ; ret
0x00000000004060dc : sub rsp, 8 ; add rsp, 8 ; ret
0x00000000004070e1 : test al, -1 ; jmp rsi
0x00000000004060aa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000404152 : xchg eax, esp ; ret 0xd284
0x000000000040276a : xor byte ptr [rax + rax*2], ah ; jmp rcx
0x000000000040596e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000402526 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
