0x0000000000404719 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401a46 : add al, 0x25 ; ret
0x0000000000401a3e : add al, 0x25 ; ret 0x60a2
0x000000000040882b : add al, bh ; fdivp st(7) ; call qword ptr [rax]
0x000000000040885b : add al, bh ; out -1, eax ; call rax
0x000000000040862b : add al, bl ; test al, -1 ; call qword ptr [rax]
0x00000000004051eb : add al, ch ; lahf ; ret 0xffff
0x000000000040523e : add al, ch ; ret 0xffff
0x000000000040508f : add al, ch ; sti ; ret
0x00000000004074df : add bl, dh ; ret
0x0000000000401d0b : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x0000000000405728 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000405f08 : add byte ptr [rax - 0x77], cl ; push rbp ; ror byte ptr [rax - 0x77], 1 ; ret 0x8b4c
0x0000000000401f37 : add byte ptr [rax - 0x77], cl ; ret 0x148
0x0000000000401c10 : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x00000000004074dd : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000401d09 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x0000000000405f06 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; push rbp ; ror byte ptr [rax - 0x77], 1 ; ret 0x8b4c
0x0000000000401f35 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x148
0x0000000000401c0e : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x00000000004074db : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000402979 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004074dc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000405e03 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b72b8b], cl ; ret 0xb0
0x0000000000402937 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040275c : add byte ptr [rax], al ; add cl, ch ; ret 0
0x00000000004027a0 : add byte ptr [rax], al ; add dh, dh ; add al, 0x25 ; ret
0x0000000000402766 : add byte ptr [rax], al ; add dh, dh ; add al, 0x25 ; ret 0x60a2
0x0000000000402e80 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040297b : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401273 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004088ea : add byte ptr [rax], al ; call 0x114088e4
0x000000000040882a : add byte ptr [rax], al ; clc ; fdivp st(7) ; call qword ptr [rax]
0x000000000040885a : add byte ptr [rax], al ; clc ; out -1, eax ; call rax
0x000000000040881a : add byte ptr [rax], al ; fdivp st(7) ; call rax
0x0000000000401409 : add byte ptr [rax], al ; jmp 0x401289
0x00000000004032c2 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004026f6 : add byte ptr [rax], al ; pop rbp ; ret
0x00000000004055eb : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000404448 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004074de : add byte ptr [rax], al ; ret
0x000000000040861b : add byte ptr [rax], ch ; test al, -1 ; call rax
0x00000000004055ec : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000404449 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000405e05 : add byte ptr [rbx - 0x76b72b8b], cl ; ret 0xb0
0x00000000004050f6 : add byte ptr [rcx - 0x5bba7631], cl ; call 0x4013a8
0x00000000004050f5 : add byte ptr [rcx - 0x5bba7631], cl ; call 0x4013a9
0x0000000000402935 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004016c8 : add byte ptr [rcx], al ; ret
0x0000000000402939 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000401b95 : add cl, ch ; add dword ptr [r8], r8d ; add dh, al ; add al, 0x25 ; ret
0x0000000000401b88 : add cl, ch ; push rsp ; add dword ptr [rax], eax ; add dh, al ; add al, 0x25 ; ret 0x60a2
0x000000000040275e : add cl, ch ; ret 0
0x0000000000402763 : add cl, ch ; xchg eax, esi ; add byte ptr [rax], al ; add dh, dh ; add al, 0x25 ; ret 0x60a2
0x0000000000401b9a : add dh, al ; add al, 0x25 ; ret
0x0000000000401b8d : add dh, al ; add al, 0x25 ; ret 0x60a2
0x00000000004027a2 : add dh, dh ; add al, 0x25 ; ret
0x0000000000402768 : add dh, dh ; add al, 0x25 ; ret 0x60a2
0x0000000000401b97 : add dword ptr [r8], r8d ; add dh, al ; add al, 0x25 ; ret
0x00000000004046d8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004055ea : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000404447 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000401b98 : add dword ptr [rax], eax ; add dh, al ; add al, 0x25 ; ret
0x0000000000401b8b : add dword ptr [rax], eax ; add dh, al ; add al, 0x25 ; ret 0x60a2
0x0000000000402e26 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040703a : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000402758 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0
0x00000000004016c4 : add eax, 0x208bee ; add ebx, esi ; ret
0x000000000040275b : add eax, 0xe9000000 ; ret 0
0x000000000040168b : add eax, edx ; sar rax, 1 ; jne 0x40169c ; pop rbp ; ret
0x00000000004016c9 : add ebx, esi ; ret
0x0000000000401a44 : add esi, eax ; add al, 0x25 ; ret
0x0000000000401a3c : add esi, eax ; add al, 0x25 ; ret 0x60a2
0x00000000004018bb : add esp, 0x10 ; pop rbp ; ret
0x0000000000406d6c : add esp, 0x130 ; pop rbp ; ret
0x0000000000404444 : add esp, 0x138 ; pop rbx ; pop rbp ; ret
0x00000000004026f2 : add esp, 0x190 ; pop rbp ; ret
0x00000000004058dc : add esp, 0x1a0 ; pop rbp ; ret
0x00000000004063be : add esp, 0x1e0 ; pop rbp ; ret
0x000000000040297e : add esp, 0x20 ; pop rbp ; ret
0x000000000040199d : add esp, 0x30 ; pop rbp ; ret
0x0000000000402827 : add esp, 0x40 ; pop rbp ; ret
0x0000000000404abc : add esp, 0x50 ; pop rbp ; ret
0x0000000000403553 : add esp, 0x70 ; pop rbp ; ret
0x00000000004045fe : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004049cd : add esp, 0x90 ; pop rbp ; ret
0x0000000000405774 : add esp, 0xa0 ; pop rbp ; ret
0x0000000000401276 : add esp, 8 ; ret
0x000000000040168a : add rax, rdx ; sar rax, 1 ; jne 0x40169d ; pop rbp ; ret
0x00000000004018ba : add rsp, 0x10 ; pop rbp ; ret
0x0000000000406d6b : add rsp, 0x130 ; pop rbp ; ret
0x0000000000404443 : add rsp, 0x138 ; pop rbx ; pop rbp ; ret
0x00000000004026f1 : add rsp, 0x190 ; pop rbp ; ret
0x00000000004058db : add rsp, 0x1a0 ; pop rbp ; ret
0x00000000004063bd : add rsp, 0x1e0 ; pop rbp ; ret
0x000000000040297d : add rsp, 0x20 ; pop rbp ; ret
0x000000000040199c : add rsp, 0x30 ; pop rbp ; ret
0x0000000000402826 : add rsp, 0x40 ; pop rbp ; ret
0x0000000000404abb : add rsp, 0x50 ; pop rbp ; ret
0x0000000000403552 : add rsp, 0x70 ; pop rbp ; ret
0x00000000004045fd : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004049cc : add rsp, 0x90 ; pop rbp ; ret
0x0000000000405773 : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000401275 : add rsp, 8 ; ret
0x0000000000407039 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004016c7 : and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000402ab7 : and eax, 0x48ffffe8 ; add esp, 0x10 ; pop rbp ; ret
0x0000000000404a07 : and eax, 0x48fffffd ; add esp, 0x20 ; pop rbp ; ret
0x0000000000401a37 : and eax, 0x60a2c1 ; add esi, eax ; add al, 0x25 ; ret 0x60a2
0x0000000000401a3f : and eax, 0x60a2c2 ; add esi, eax ; add al, 0x25 ; ret
0x000000000040299f : and eax, 0x60a2d8 ; pop rbp ; ret
0x00000000004029c3 : and eax, 0x60a2e0 ; pop rbp ; ret
0x00000000004088ec : call 0x114088e2
0x00000000004050cd : call 0x4013a2
0x00000000004051a1 : call 0x401492
0x0000000000402ab8 : call 0xffffffff83892ac4
0x0000000000405ec3 : call 0xffffffffe08dea16
0x0000000000404479 : call 0xffffffffe902cdc9
0x0000000000404478 : call 0xffffffffe902cdca
0x00000000004074b9 : call qword ptr [r12 + rbx*8]
0x00000000004085af : call qword ptr [rax]
0x0000000000408a63 : call qword ptr [rsi]
0x00000000004074ba : call qword ptr [rsp + rbx*8]
0x00000000004016ed : call rax
0x0000000000408d83 : call rdx
0x0000000000406d6a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x0000000000405adf : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405001 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402da8 : clc ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040882c : clc ; fdivp st(7) ; call qword ptr [rax]
0x000000000040168f : clc ; jne 0x401698 ; pop rbp ; ret
0x0000000000403405 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040740b : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040885c : clc ; out -1, eax ; call rax
0x000000000040740e : clc ; pop rbp ; ret
0x0000000000406426 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406009 : cld ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406544 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406f7d : cld ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000407408 : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000406423 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406006 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406541 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406f7a : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401d0e : cmp al, 0x25 ; ret
0x0000000000404446 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040164d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401660 ; pop rbp ; ret
0x000000000040512c : cwde ; mov rcx, qword ptr [rax*8 + 0x408168] ; jmp rcx
0x00000000004022ca : dec dword ptr [rax + 0x3b] ; or byte ptr [r15], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000406ccf : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000040452b : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000402825 : enter -0x7cb8, -0x3c ; pop rbp ; ret
0x000000000040508d : enter 0xb0, -0x18 ; sti ; ret
0x000000000040882d : fdivp st(7) ; call qword ptr [rax]
0x000000000040881d : fdivp st(7) ; call rax
0x0000000000403e63 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x00000000004074bc : fmul qword ptr [rax - 0x7d] ; ret
0x000000000040279d : fsubr st(1) ; pop rsp ; add byte ptr [rax], al ; add dh, dh ; add al, 0x25 ; ret
0x00000000004018b9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401660 : hlt ; pop rbp ; mov edi, 0x60a250 ; jmp rax
0x0000000000405730 : int 0x80
0x00000000004050cc : iretd ; call 0x4013a3
0x00000000004050f8 : iretd ; mov dword ptr [rbp - 0x5c], eax ; call 0x4013a6
0x0000000000401653 : ja 0x40165a ; pop rbp ; ret
0x000000000040165f : je 0x40165d ; pop rbp ; mov edi, 0x60a250 ; jmp rax
0x00000000004050c8 : jge 0x405079 ; mov rdi, rcx ; call 0x4013a7
0x000000000040140b : jmp 0x401287
0x0000000000401b96 : jmp 0x401cea
0x000000000040279e : jmp 0x402807
0x0000000000408f23 : jmp qword ptr [rax]
0x0000000000408e03 : jmp qword ptr [rdx]
0x0000000000401667 : jmp rax
0x000000000040360e : jmp rcx
0x0000000000402d4d : jmp rdi
0x00000000004016a7 : jmp rdx
0x0000000000401690 : jne 0x401697 ; pop rbp ; ret
0x0000000000403555 : jo 0x4035b6 ; ret
0x0000000000404c64 : jo 0x404cc5 ; ret
0x0000000000404d9e : jo 0x404dff ; ret
0x0000000000404600 : js 0x404660 ; pop rbp ; ret
0x00000000004050fd : lahf ; ret 0xffff
0x000000000040502b : loope 0x405045 ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402c2b : loopne 0x402c7b ; add esp, 0x20 ; pop rbp ; ret
0x0000000000402c2a : loopne 0x402c7c ; add esp, 0x20 ; pop rbp ; ret
0x0000000000405147 : loopne 0x405198 ; mov dword ptr [rbp - 0x78], eax ; call 0x4013a7
0x0000000000405146 : loopne 0x405199 ; mov dword ptr [rbp - 0x78], eax ; call 0x4013a8
0x0000000000405ec7 : loopne 0x405eb3 ; ret
0x0000000000405ec6 : loopne 0x405eb4 ; ret
0x00000000004063c0 : loopne 0x4063c8 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040519f : mov al, 0 ; call 0x401494
0x0000000000404b3b : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004049cb : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000408818 : mov al, 0xd ; add byte ptr [rax], al ; fdivp st(7) ; call rax
0x0000000000408858 : mov al, 0xe ; add byte ptr [rax], al ; clc ; out -1, eax ; call rax
0x0000000000407036 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040514b : mov al, ch ; ret 0xffff
0x00000000004029c1 : mov byte ptr [0x60a2e0], al ; pop rbp ; ret
0x00000000004016c3 : mov byte ptr [rip + 0x208bee], 1 ; ret
0x0000000000402e28 : mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040703c : mov dh, -0x40 ; pop rbp ; ret
0x000000000040299d : mov dword ptr [0x60a2d8], edi ; pop rbp ; ret
0x0000000000403406 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000403314 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004033c8 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000402c29 : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401999 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402823 : mov dword ptr [rbp - 0x38], eax ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004050c7 : mov dword ptr [rbp - 0x58], edi ; mov rdi, rcx ; call 0x4013a8
0x00000000004050f9 : mov dword ptr [rbp - 0x5c], eax ; call 0x4013a5
0x0000000000405149 : mov dword ptr [rbp - 0x78], eax ; call 0x4013a5
0x000000000040517b : mov dword ptr [rbp - 0x88], eax ; call 0x4013a8
0x00000000004018b7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407409 : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040347e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004045fc : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x00000000004032c8 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004059fb : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402bec : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004032c5 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000402b6f : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405c93 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040327d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040330e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000405145 : mov eax, dword ptr [rbp - 0x20] ; mov qword ptr [rbp - 0x78], rax ; call 0x4013a9
0x0000000000405dc1 : mov eax, dword ptr [rbp - 0x24] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004030c8 : mov eax, dword ptr [rbp - 0x24] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004033ca : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040354f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004045fa : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000404b39 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000406424 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406007 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406542 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406f7b : mov eax, dword ptr [rbp - 4] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000405add : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404fff : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402da6 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040740c : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004016eb : mov ebp, esp ; call rax
0x0000000000401651 : mov ebp, esp ; ja 0x40165c ; pop rbp ; ret
0x0000000000403607 : mov ecx, dword ptr [rax*8 + 0x407c60] ; jmp rcx
0x00000000004038e7 : mov ecx, dword ptr [rax*8 + 0x407ca8] ; jmp rcx
0x000000000040512e : mov ecx, dword ptr [rax*8 + 0x408168] ; jmp rcx
0x0000000000403311 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004016e5 : mov edi, 0x609e20 ; mov rbp, rsp ; call rax
0x0000000000401662 : mov edi, 0x60a250 ; jmp rax
0x00000000004016a2 : mov edi, 0x60a250 ; jmp rdx
0x00000000004050cb : mov edi, ecx ; call 0x4013a4
0x00000000004050f7 : mov edi, ecx ; mov dword ptr [rbp - 0x5c], eax ; call 0x4013a7
0x00000000004074b7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x00000000004074b6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000040519d : mov esi, eax ; mov al, 0 ; call 0x401496
0x00000000004016a0 : mov esi, eax ; mov edi, 0x60a250 ; jmp rdx
0x00000000004016c6 : mov esp, dword ptr [rax] ; add byte ptr [rcx], al ; ret
0x000000000040299c : mov qword ptr [0x60a2d8], rdi ; pop rbp ; ret
0x0000000000402822 : mov qword ptr [rbp - 0x38], rax ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004050c6 : mov qword ptr [rbp - 0x58], rdi ; mov rdi, rcx ; call 0x4013a9
0x0000000000405148 : mov qword ptr [rbp - 0x78], rax ; call 0x4013a6
0x000000000040517a : mov qword ptr [rbp - 0x88], rax ; call 0x4013a9
0x000000000040347d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404b3a : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040514a : mov r8b, r13b ; ret 0xffff
0x00000000004045fb : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x00000000004059fa : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402beb : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004032c4 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000402b6e : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405c92 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040327c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040354e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000404b38 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000405adc : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404ffe : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402da5 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004016ea : mov rbp, rsp ; call rax
0x0000000000401650 : mov rbp, rsp ; ja 0x40165d ; pop rbp ; ret
0x0000000000403606 : mov rcx, qword ptr [rax*8 + 0x407c60] ; jmp rcx
0x00000000004038e6 : mov rcx, qword ptr [rax*8 + 0x407ca8] ; jmp rcx
0x000000000040512d : mov rcx, qword ptr [rax*8 + 0x408168] ; jmp rcx
0x00000000004050ca : mov rdi, rcx ; call 0x4013a5
0x000000000040519c : mov rsi, rax ; mov al, 0 ; call 0x401497
0x000000000040169f : mov rsi, rax ; mov edi, 0x60a250 ; jmp rdx
0x0000000000402933 : movabs byte ptr [0x940f000000010060], al ; ret 0xd284
0x00000000004050fb : movsb byte ptr [rdi], byte ptr [rsi] ; call 0x4013a3
0x00000000004050fa : movsb byte ptr [rdi], byte ptr [rsi] ; call 0x4013a4
0x0000000000402e27 : movzx eax, al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040703b : movzx eax, al ; pop rbp ; ret
0x00000000004074d8 : nop dword ptr [rax + rax] ; ret
0x00000000004022cd : or byte ptr [r15], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000403e5e : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000403e5f : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x00000000004022ce : or byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000404d21 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040885d : out -1, eax ; call rax
0x00000000004016c5 : out dx, al ; mov esp, dword ptr [rax] ; add byte ptr [rcx], al ; ret
0x00000000004074cc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004074ce : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004055ee : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004074d0 : pop r14 ; pop r15 ; ret
0x00000000004055f0 : pop r15 ; pop rbp ; ret
0x00000000004074d2 : pop r15 ; ret
0x00000000004016c2 : pop rbp ; mov byte ptr [rip + 0x208bee], 1 ; ret
0x0000000000401661 : pop rbp ; mov edi, 0x60a250 ; jmp rax
0x000000000040169e : pop rbp ; mov rsi, rax ; mov edi, 0x60a250 ; jmp rdx
0x00000000004074cb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004074cf : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401655 : pop rbp ; ret
0x00000000004055ed : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040444a : pop rbx ; pop rbp ; ret
0x00000000004055f1 : pop rdi ; pop rbp ; ret
0x00000000004074d3 : pop rdi ; ret
0x00000000004055ef : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004074d1 : pop rsi ; pop r15 ; ret
0x000000000040279f : pop rsp ; add byte ptr [rax], al ; add dh, dh ; add al, 0x25 ; ret
0x00000000004074cd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000408617 : push qword ptr [rax + 0x28000005] ; test al, -1 ; call rax
0x0000000000408817 : push qword ptr [rax + 0x4800000d] ; fdivp st(7) ; call rax
0x0000000000408857 : push qword ptr [rax - 0x7fffff2] ; out -1, eax ; call rax
0x0000000000404abe : push rax ; pop rbp ; ret
0x0000000000405ec2 : push rbp ; call 0xffffffffe08dea17
0x0000000000403e62 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x00000000004016e4 : push rbp ; mov edi, 0x609e20 ; mov rbp, rsp ; call rax
0x0000000000405f0b : push rbp ; ror byte ptr [rax - 0x77], 1 ; ret 0x8b4c
0x000000000040695d : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000040452e : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000401b8a : push rsp ; add dword ptr [rax], eax ; add dh, al ; add al, 0x25 ; ret 0x60a2
0x0000000000401279 : ret
0x0000000000402760 : ret 0
0x0000000000401f3a : ret 0x148
0x0000000000401412 : ret 0x208c
0x00000000004025f0 : ret 0x3ae8
0x0000000000401a40 : ret 0x60a2
0x00000000004050e9 : ret 0x8844
0x0000000000405b62 : ret 0x8948
0x0000000000403f8d : ret 0x89a5
0x0000000000403e66 : ret 0x8b48
0x0000000000405f0f : ret 0x8b4c
0x0000000000401c13 : ret 0xb0
0x0000000000401685 : ret 0xc148
0x0000000000403079 : ret 0xc1e8
0x0000000000403e7b : ret 0xcfe8
0x000000000040293c : ret 0xd284
0x00000000004022d1 : ret 0xe280
0x000000000040447c : ret 0xee8
0x0000000000402530 : ret 0xfae8
0x00000000004050cf : ret 0xffff
0x000000000040479e : ret 1
0x0000000000404532 : ret 8
0x000000000040572b : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000403550 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x4035bb ; ret
0x000000000040168c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40169b ; pop rbp ; ret
0x000000000040572c : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000405f0c : ror byte ptr [rax - 0x77], 1 ; ret 0x8b4c
0x0000000000403551 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x4035ba ; ret
0x000000000040695e : ror byte ptr [rax - 0x7f], 1 ; ret 1
0x0000000000405089 : ror byte ptr [rbx + rcx*4 + 0x45], 1 ; enter 0xb0, -0x18 ; sti ; ret
0x000000000040452f : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x00000000004050ee : sahf ; ret
0x000000000040168e : sar eax, 1 ; jne 0x401699 ; pop rbp ; ret
0x000000000040168d : sar rax, 1 ; jne 0x40169a ; pop rbp ; ret
0x00000000004050ec : shr al, -0x62 ; ret
0x000000000040502c : sldt word ptr [rax] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407038 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000405091 : sti ; ret
0x0000000000401271 : sub eax, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000040750d : sub esp, 8 ; add rsp, 8 ; ret
0x000000000040750c : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040862d : test al, -1 ; call qword ptr [rax]
0x000000000040861d : test al, -1 ; call rax
0x00000000004050c9 : test al, 0x48 ; mov edi, ecx ; call 0x4013a6
0x00000000004074da : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040275a : test dword ptr [rip - 0x17000000], eax ; ret 0
0x00000000004022d0 : xchg eax, ebp ; ret 0xe280
0x0000000000402765 : xchg eax, esi ; add byte ptr [rax], al ; add dh, dh ; add al, 0x25 ; ret 0x60a2
0x000000000040293b : xchg eax, esp ; ret 0xd284
0x0000000000406d6e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004033c6 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
