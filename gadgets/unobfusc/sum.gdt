0x0000000000404da9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040900f : add ah, dl ; ret
0x000000000040965c : add al, 4 ; add byte ptr [rax], al ; mov sil, -1 ; call rdx
0x00000000004099bf : add al, ah ; ret
0x00000000004018a7 : add al, ch ; ret
0x000000000040929f : add al, dh ; test edi, edi ; call rcx
0x0000000000409c9f : add al, dl ; sar edi, 1 ; call qword ptr [rax]
0x00000000004092df : add al, dl ; xchg bh, bh ; jmp rdx
0x0000000000407f9f : add bl, dh ; ret
0x000000000040929b : add byte ptr [rax + rax], al ; add al, dh ; test edi, edi ; call rcx
0x0000000000405e48 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x00000000004075f4 : add byte ptr [rax - 0x77], cl ; call 0xffffffffffde38eb
0x00000000004075f3 : add byte ptr [rax - 0x77], cl ; call 0xffffffffffde38ec
0x000000000040965a : add byte ptr [rax], al ; add al, 4 ; add byte ptr [rax], al ; mov sil, -1 ; call rdx
0x00000000004018a5 : add byte ptr [rax], al ; add al, ch ; ret
0x000000000040929d : add byte ptr [rax], al ; add al, dh ; test edi, edi ; call rcx
0x00000000004092dd : add byte ptr [rax], al ; add al, dl ; xchg bh, bh ; jmp rdx
0x0000000000407f9d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000407f9b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000406b19 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000407f9c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040929a : add byte ptr [rax], al ; add byte ptr [rax], r8b ; add al, dh ; test edi, edi ; call rcx
0x00000000004099b9 : add byte ptr [rax], al ; add byte ptr [rdi + rax], ah ; add al, ah ; ret
0x0000000000402613 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x000000000040567e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000404d6a : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404b10 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004013a3 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000040519e : add byte ptr [rax], al ; call 0x4013e4
0x00000000004014d9 : add byte ptr [rax], al ; jmp 0x4013b9
0x0000000000406b1b : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000403952 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040965e : add byte ptr [rax], al ; mov sil, -1 ; call rdx
0x0000000000409006 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000409c9a : add byte ptr [rax], al ; or r8b, byte ptr [rax] ; add al, dl ; sar edi, 1 ; call qword ptr [rax]
0x0000000000401fd4 : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000405d0b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403232 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000407f9e : add byte ptr [rax], al ; ret
0x0000000000408fe6 : add byte ptr [rax], al ; ret 0xffff
0x000000000040929c : add byte ptr [rax], r8b ; add al, dh ; test edi, edi ; call rcx
0x0000000000405d0c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000403233 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000402223 : add byte ptr [rbx - 0x22c343], cl ; inc ecx ; call qword ptr [rax]
0x0000000000402254 : add byte ptr [rbx - 0x22e74b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000401f76 : add byte ptr [rbx - 0x2cb4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004022b0 : add byte ptr [rbx], ah ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040260f : add byte ptr [rcx + 0xfa], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000401858 : add byte ptr [rcx], al ; ret
0x00000000004099bb : add byte ptr [rdi + rax], ah ; add al, ah ; ret
0x00000000004018a1 : add byte ptr [rdi], cl ; test byte ptr [rdx], cl ; add byte ptr [rax], al ; add al, ch ; ret
0x0000000000402615 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000405680 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000409c9b : add byte ptr [rdx + rcx], al ; add al, dl ; sar edi, 1 ; call qword ptr [rax]
0x000000000040965b : add byte ptr [rsp + rax], al ; add byte ptr [rax], al ; mov sil, -1 ; call rdx
0x0000000000404d68 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405d0a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000403231 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000402cb2 : add dword ptr [rbx - 0x73e6bbb], ecx ; add dword ptr [rcx], eax ; ret 0x9589
0x0000000000402cb8 : add dword ptr [rcx], eax ; ret 0x9589
0x0000000000407afa : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401854 : add eax, 0x209a7e ; add ebx, esi ; ret
0x000000000040181b : add eax, edx ; sar rax, 1 ; jne 0x40182c ; pop rbp ; ret
0x0000000000401859 : add ebx, esi ; ret
0x00000000004019ab : add esp, 0x10 ; pop rbp ; ret
0x0000000000407abc : add esp, 0x130 ; pop rbp ; ret
0x0000000000404ad4 : add esp, 0x138 ; pop rbx ; pop rbp ; ret
0x0000000000405ffc : add esp, 0x1a0 ; pop rbp ; ret
0x000000000040322e : add esp, 0x1e8 ; pop rbx ; pop rbp ; ret
0x0000000000402520 : add esp, 0x20 ; pop rbp ; ret
0x00000000004022ae : add esp, 0x2300 ; pop rbp ; ret
0x0000000000401fd0 : add esp, 0x2e0 ; pop rbp ; ret
0x0000000000401a8d : add esp, 0x30 ; pop rbp ; ret
0x0000000000403734 : add esp, 0x40 ; pop rbp ; ret
0x000000000040514c : add esp, 0x50 ; pop rbp ; ret
0x0000000000403be3 : add esp, 0x70 ; pop rbp ; ret
0x0000000000404c8e : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000403484 : add esp, 0x90 ; pop rbp ; ret
0x0000000000405e94 : add esp, 0xa0 ; pop rbp ; ret
0x0000000000406aaf : add esp, 0xe0 ; pop rbp ; ret
0x00000000004013a6 : add esp, 8 ; ret
0x000000000040181a : add rax, rdx ; sar rax, 1 ; jne 0x40182d ; pop rbp ; ret
0x00000000004019aa : add rsp, 0x10 ; pop rbp ; ret
0x0000000000407abb : add rsp, 0x130 ; pop rbp ; ret
0x0000000000404ad3 : add rsp, 0x138 ; pop rbx ; pop rbp ; ret
0x0000000000405ffb : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000040322d : add rsp, 0x1e8 ; pop rbx ; pop rbp ; ret
0x000000000040251f : add rsp, 0x20 ; pop rbp ; ret
0x00000000004022ad : add rsp, 0x2300 ; pop rbp ; ret
0x0000000000401fcf : add rsp, 0x2e0 ; pop rbp ; ret
0x0000000000401a8c : add rsp, 0x30 ; pop rbp ; ret
0x0000000000403733 : add rsp, 0x40 ; pop rbp ; ret
0x000000000040514b : add rsp, 0x50 ; pop rbp ; ret
0x0000000000403be2 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000404c8d : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000403483 : add rsp, 0x90 ; pop rbp ; ret
0x0000000000405e93 : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000406aae : add rsp, 0xe0 ; pop rbp ; ret
0x00000000004013a5 : add rsp, 8 ; ret
0x0000000000407af9 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401857 : and byte ptr [rax], al ; add ebx, esi ; ret
0x00000000004023e7 : and eax, 0x48fffff0 ; add esp, 0x10 ; pop rbp ; ret
0x0000000000405097 : and eax, 0x48fffffd ; add esp, 0x20 ; pop rbp ; ret
0x00000000004022cf : and eax, 0x60b2e0 ; pop rbp ; ret
0x00000000004022f3 : and eax, 0x60b2e8 ; pop rbp ; ret
0x00000000004051a0 : call 0x4013e2
0x0000000000405401 : call 0x401612
0x0000000000404b09 : call 0xffffffffe902d459
0x0000000000404b08 : call 0xffffffffe902d45a
0x00000000004075f8 : call 0xffffffffffde38e7
0x00000000004075f7 : call 0xffffffffffde38e8
0x0000000000407f79 : call qword ptr [r12 + rbx*8]
0x000000000040222b : call qword ptr [rax]
0x0000000000409363 : call qword ptr [rsi]
0x0000000000407f7a : call qword ptr [rsp + rbx*8]
0x000000000040187d : call rax
0x00000000004092a3 : call rcx
0x0000000000409663 : call rdx
0x0000000000409343 : call rsi
0x0000000000402cb7 : clc ; add dword ptr [rcx], eax ; ret 0x9589
0x0000000000407aba : clc ; add rsp, 0x130 ; pop rbp ; ret
0x00000000004061ff : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405691 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000407274 : clc ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000406fcb : clc ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040181f : clc ; jne 0x401828 ; pop rbp ; ret
0x0000000000403a95 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000407ecb : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000407ece : clc ; pop rbp ; ret
0x0000000000406b18 : cld ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000406cc6 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406c69 : cld ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406de4 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403732 : cld ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000406aad : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x0000000000407ec8 : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000406cc3 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406c66 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406de1 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406b1f : cld ; pop rbp ; ret
0x0000000000403768 : cmove ecx, edx ; movsxd rax, ecx ; pop rbp ; ret
0x0000000000401ce1 : cmp al, -0x36 ; mov esi, dword ptr [rbp - 0x1c] ; call rax
0x0000000000404ad6 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004017dd : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4017f0 ; pop rbp ; ret
0x0000000000405400 : cwde ; call 0x401613
0x00000000004053ff : cwde ; call 0x401614
0x000000000040584c : cwde ; mov rcx, qword ptr [rax*8 + 0x408958] ; jmp rcx
0x0000000000403f7a : cwde ; test byte ptr [rax], al ; jmp rcx
0x00000000004027e0 : dec dword ptr [rax + 0x69] ; ret 0xa
0x0000000000403f75 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; cwde ; test byte ptr [rax], al ; jmp rcx
0x0000000000403c95 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; push rax ; test byte ptr [rax], al ; jmp rcx
0x0000000000401f7c : dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000407a1f : dec dword ptr [rax - 0x7f] ; ret 1
0x0000000000404bbb : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000403891 : enter 0x60b2, 0 ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040334f : faddp st(1) ; fstp xword ptr [rbp - 0x20] ; fld xword ptr [rbp - 0x20] ; pop rbp ; ret
0x0000000000403354 : fld xword ptr [rbp - 0x20] ; pop rbp ; ret
0x00000000004044f3 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000405049 : fmul qword ptr [r9 - 0x621773bb] ; ret
0x0000000000407f7c : fmul qword ptr [rax - 0x7d] ; ret
0x000000000040504a : fmul qword ptr [rcx - 0x621773bb] ; ret
0x0000000000403351 : fstp xword ptr [rbp - 0x20] ; fld xword ptr [rbp - 0x20] ; pop rbp ; ret
0x00000000004019a9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004017f0 : hlt ; pop rbp ; mov edi, 0x60b288 ; jmp rax
0x0000000000404fd8 : hlt ; ret
0x000000000040350e : in al, 0x48 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000406b7d : in al, dx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040900c : in al, dx ; or byte ptr [rax], al ; add ah, dl ; ret
0x0000000000402229 : inc ecx ; call qword ptr [rax]
0x0000000000403355 : insd dword ptr [rdi], dx ; loopne 0x4033b8 ; ret
0x0000000000405e50 : int 0x80
0x00000000004017e3 : ja 0x4017ea ; pop rbp ; ret
0x00000000004017ef : je 0x4017ed ; pop rbp ; mov edi, 0x60b288 ; jmp rax
0x0000000000403352 : jge 0x40333a ; fld xword ptr [rbp - 0x20] ; pop rbp ; ret
0x0000000000401855 : jle 0x4017f7 ; and byte ptr [rax], al ; add ebx, esi ; ret
0x00000000004014db : jmp 0x4013b7
0x0000000000409803 : jmp qword ptr [rax]
0x00000000004096e3 : jmp qword ptr [rdx]
0x00000000004017f7 : jmp rax
0x0000000000403c9e : jmp rcx
0x0000000000401837 : jmp rdx
0x0000000000401820 : jne 0x401827 ; pop rbp ; ret
0x0000000000401cad : jne 0x401c95 ; call rax
0x0000000000401ce4 : jne 0x401ccc ; call rax
0x000000000040519a : jne 0x4051ad ; call 0x4013e8
0x00000000004075f1 : jne 0x40758a ; add byte ptr [rax - 0x77], cl ; call 0xffffffffffde38ee
0x0000000000403be5 : jo 0x403c46 ; ret
0x00000000004052f4 : jo 0x405355 ; ret
0x000000000040542e : jo 0x40548f ; ret
0x0000000000404c90 : js 0x404cf0 ; pop rbp ; ret
0x0000000000406871 : lea eax, dword ptr [rax] ; jmp rcx
0x000000000040518f : lodsd eax, dword ptr [rsi] ; ret
0x0000000000401fd2 : loopne 0x401fdb ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040255b : loopne 0x4025ab ; add esp, 0x20 ; pop rbp ; ret
0x000000000040255a : loopne 0x4025ac ; add esp, 0x20 ; pop rbp ; ret
0x0000000000403353 : loopne 0x403335 ; insd dword ptr [rdi], dx ; loopne 0x4033ba ; ret
0x0000000000403356 : loopne 0x4033b7 ; ret
0x0000000000406ab1 : loopne 0x406ab8 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000404fd6 : mov al, -0x18 ; hlt ; ret
0x000000000040518d : mov al, -0x18 ; lodsd eax, dword ptr [rsi] ; ret
0x00000000004051cb : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040505b : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000407af6 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004022f1 : mov byte ptr [0x60b2e8], al ; pop rbp ; ret
0x0000000000401853 : mov byte ptr [rip + 0x209a7e], 1 ; ret
0x0000000000407afc : mov dh, -0x40 ; pop rbp ; ret
0x0000000000409661 : mov dh, -1 ; call rdx
0x00000000004022cd : mov dword ptr [0x60b2e0], edi ; pop rbp ; ret
0x0000000000403a96 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405852 : mov dword ptr [rax], eax ; jmp rcx
0x00000000004039a4 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000403a58 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000402559 : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401a89 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004071db : mov dword ptr [rbp - 0x50], eax ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004053fe : mov dword ptr [rbp - 0x68], eax ; call 0x401615
0x00000000004019a7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407ec9 : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000403b0e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404c8c : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000403958 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040611b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040251c : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403955 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040249f : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000406b7b : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004063b3 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040390d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040399e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040350c : mov eax, dword ptr [rbp - 0x1c] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401ca9 : mov eax, dword ptr [rbp - 0x28] ; mov esi, dword ptr [rbp - 0x1c] ; call rax
0x0000000000403a5a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000403bdf : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000404c8a : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004051c9 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000406cc4 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406c67 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406de2 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403730 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000406b1d : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004061fd : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040568f : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000407272 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000406fc9 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000407ecc : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040504d : mov eax, gs ; popfq ; ret
0x000000000040187b : mov ebp, esp ; call rax
0x00000000004017e1 : mov ebp, esp ; ja 0x4017ec ; pop rbp ; ret
0x0000000000403c97 : mov ecx, dword ptr [rax*8 + 0x408450] ; jmp rcx
0x0000000000403f77 : mov ecx, dword ptr [rax*8 + 0x408498] ; jmp rcx
0x000000000040584e : mov ecx, dword ptr [rax*8 + 0x408958] ; jmp rcx
0x00000000004068ed : mov ecx, dword ptr [rax*8 + 0x408cd0] ; jmp rcx
0x000000000040686d : mov ecx, dword ptr [rax*8 + 0x408d30] ; jmp rcx
0x00000000004039a1 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401875 : mov edi, 0x60ae20 ; mov rbp, rsp ; call rax
0x00000000004017f2 : mov edi, 0x60b288 ; jmp rax
0x0000000000401832 : mov edi, 0x60b288 ; jmp rdx
0x0000000000409341 : mov edi, dr1 ; call rsi
0x0000000000401ce0 : mov edi, dword ptr [rdx + rcx*8] ; mov esi, dword ptr [rbp - 0x1c] ; call rax
0x0000000000407f77 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000407f76 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x00000000004053fb : mov edx, edx ; mov qword ptr [rbp - 0x68], rax ; call 0x401618
0x0000000000401cac : mov esi, dword ptr [rbp - 0x1c] ; call rax
0x0000000000401830 : mov esi, eax ; mov edi, 0x60b288 ; jmp rdx
0x00000000004022cc : mov qword ptr [0x60b2e0], rdi ; pop rbp ; ret
0x00000000004053fd : mov qword ptr [rbp - 0x68], rax ; call 0x401616
0x0000000000403b0d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040518c : mov r8b, -0x18 ; lodsd eax, dword ptr [rsi] ; ret
0x00000000004051ca : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000404c8b : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x000000000040504c : mov r8d, gs ; popfq ; ret
0x000000000040611a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040251b : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403954 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040249e : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004063b2 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040390c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401ca8 : mov rax, qword ptr [rbp - 0x28] ; mov esi, dword ptr [rbp - 0x1c] ; call rax
0x0000000000403bde : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004051c8 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004061fc : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040568e : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000407271 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000406fc8 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040187a : mov rbp, rsp ; call rax
0x00000000004017e0 : mov rbp, rsp ; ja 0x4017ed ; pop rbp ; ret
0x0000000000403c96 : mov rcx, qword ptr [rax*8 + 0x408450] ; jmp rcx
0x0000000000403f76 : mov rcx, qword ptr [rax*8 + 0x408498] ; jmp rcx
0x000000000040584d : mov rcx, qword ptr [rax*8 + 0x408958] ; jmp rcx
0x00000000004068ec : mov rcx, qword ptr [rax*8 + 0x408cd0] ; jmp rcx
0x000000000040686c : mov rcx, qword ptr [rax*8 + 0x408d30] ; jmp rcx
0x0000000000401cdf : mov rdi, qword ptr [rdx + rcx*8] ; mov esi, dword ptr [rbp - 0x1c] ; call rax
0x00000000004053fa : mov rdx, r10 ; mov qword ptr [rbp - 0x68], rax ; call 0x401619
0x000000000040182f : mov rsi, rax ; mov edi, 0x60b288 ; jmp rdx
0x0000000000409660 : mov sil, -1 ; call rdx
0x00000000004068f1 : mov word ptr [rax], es ; jmp rcx
0x0000000000409008 : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000040376c : movsxd rax, ecx ; pop rbp ; ret
0x0000000000407afb : movzx eax, al ; pop rbp ; ret
0x0000000000407f98 : nop dword ptr [rax + rax] ; ret
0x0000000000403f78 : or al, 0xffffffffffffffc5 ; cwde ; test byte ptr [rax], al ; jmp rcx
0x000000000040584f : or al, 0xffffffffffffffc5 ; pop rax ; mov dword ptr [rax], eax ; jmp rcx
0x0000000000403c98 : or al, 0xffffffffffffffc5 ; push rax ; test byte ptr [rax], al ; jmp rcx
0x0000000000409c9d : or al, byte ptr [rax] ; add al, dl ; sar edi, 1 ; call qword ptr [rax]
0x00000000004026d8 : or al, ch ; ret 0xffed
0x00000000004044ee : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x00000000004044ef : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040900d : or byte ptr [rax], al ; add ah, dl ; ret
0x00000000004053b1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000409c9c : or r8b, byte ptr [rax] ; add al, dl ; sar edi, 1 ; call qword ptr [rax]
0x0000000000407f8c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000407f8e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405d0e : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000407f90 : pop r14 ; pop r15 ; ret
0x0000000000405d10 : pop r15 ; pop rbp ; ret
0x0000000000407f92 : pop r15 ; ret
0x0000000000405851 : pop rax ; mov dword ptr [rax], eax ; jmp rcx
0x0000000000401852 : pop rbp ; mov byte ptr [rip + 0x209a7e], 1 ; ret
0x00000000004017f1 : pop rbp ; mov edi, 0x60b288 ; jmp rax
0x000000000040182e : pop rbp ; mov rsi, rax ; mov edi, 0x60b288 ; jmp rdx
0x0000000000407f8b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000407f8f : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004017e5 : pop rbp ; ret
0x0000000000405d0d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403234 : pop rbx ; pop rbp ; ret
0x0000000000405d11 : pop rdi ; pop rbp ; ret
0x0000000000407f93 : pop rdi ; ret
0x0000000000405d0f : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000407f91 : pop rsi ; pop r15 ; ret
0x0000000000407f8d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040504f : popfq ; ret
0x000000000040514e : push rax ; pop rbp ; ret
0x0000000000403c9a : push rax ; test byte ptr [rax], al ; jmp rcx
0x00000000004044f2 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000401874 : push rbp ; mov edi, 0x60ae20 ; mov rbp, rsp ; call rax
0x0000000000407045 : push rbp ; ror byte ptr [rax - 0x77], 1 ; ret 0xc1e8
0x00000000004076ad : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x0000000000404bbe : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000403350 : rcr ebx, 0x7d ; loopne 0x403338 ; insd dword ptr [rdi], dx ; loopne 0x4033bd ; ret
0x00000000004013a9 : ret
0x0000000000402efe : ret 0
0x0000000000402d2a : ret 0x205
0x00000000004016e2 : ret 0x209a
0x00000000004014e2 : ret 0x209b
0x0000000000402bf4 : ret 0x2b48
0x000000000040300d : ret 0x8148
0x0000000000405809 : ret 0x8844
0x0000000000402fa1 : ret 0x8948
0x000000000040461d : ret 0x89a5
0x00000000004044f6 : ret 0x8b48
0x0000000000402cba : ret 0x9589
0x00000000004035e1 : ret 0x99e8
0x00000000004027e3 : ret 0xa
0x0000000000401f7f : ret 0xb0
0x0000000000401815 : ret 0xc148
0x0000000000407049 : ret 0xc1e8
0x0000000000405683 : ret 0xd284
0x000000000040450b : ret 0xdfe8
0x0000000000402d24 : ret 0xe280
0x0000000000404b0c : ret 0xee8
0x00000000004075fa : ret 0xff9d
0x0000000000402c1a : ret 0xffea
0x00000000004026da : ret 0xffed
0x0000000000402f87 : ret 0xffff
0x0000000000404e2e : ret 1
0x0000000000402887 : ret 2
0x0000000000404bc2 : ret 8
0x0000000000405e4b : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000403be0 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x403c4b ; ret
0x000000000040181c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40182b ; pop rbp ; ret
0x0000000000405e4c : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000407046 : ror byte ptr [rax - 0x77], 1 ; ret 0xc1e8
0x00000000004053fc : ror byte ptr [rax - 0x77], cl ; cwde ; call 0x401617
0x0000000000403be1 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x403c4a ; ret
0x00000000004022ac : ror byte ptr [rax - 0x7f], -0x3c ; add byte ptr [rbx], ah ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401fce : ror byte ptr [rax - 0x7f], -0x3c ; loopne 0x401fdf ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004076ae : ror byte ptr [rax - 0x7f], 1 ; ret 1
0x0000000000404bbf : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000040181e : sar eax, 1 ; jne 0x401829 ; pop rbp ; ret
0x0000000000409ca1 : sar edi, 1 ; call qword ptr [rax]
0x000000000040181d : sar rax, 1 ; jne 0x40182a ; pop rbp ; ret
0x0000000000407af8 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000407fcd : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000407fcc : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000407f9a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000403c9b : test byte ptr [rax], al ; jmp rcx
0x00000000004018a3 : test byte ptr [rdx], cl ; add byte ptr [rax], al ; add al, ch ; ret
0x0000000000403766 : test dh, dh ; cmove ecx, edx ; movsxd rax, ecx ; pop rbp ; ret
0x0000000000403006 : test dword ptr [rax - 0x75], 0x8948a845 ; ret 0x8148
0x00000000004092a1 : test edi, edi ; call rcx
0x00000000004092e1 : xchg bh, bh ; jmp rdx
0x0000000000402617 : xchg eax, ebp ; ret
0x0000000000402d23 : xchg eax, edx ; ret 0xe280
0x0000000000405682 : xchg eax, esp ; ret 0xd284
0x0000000000407abe : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000403a56 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
