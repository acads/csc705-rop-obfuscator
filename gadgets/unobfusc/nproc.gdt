0x0000000000403769 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407a4b : add ah, ah ; add al, 0 ; add al, dh ; ret 0xffff
0x0000000000407a2b : add ah, al ; add al, 0 ; add al, ah ; ret 0xffff
0x00000000004074e7 : add ah, bh ; out -1, eax ; call rsp
0x0000000000407467 : add ah, bl ; loop 0x40746e ; call rsp
0x0000000000407a0d : add al, 0 ; add al, ah ; ret 0xffff
0x0000000000407a4d : add al, 0 ; add al, dh ; ret 0xffff
0x00000000004079ed : add al, 0 ; add al, dl ; ret 0xffff
0x000000000040796d : add al, 0 ; add byte ptr [rax], dh ; ret 0xffff
0x0000000000401c12 : add al, 0x25 ; enter 0x6092, 0 ; pop rbp ; ret
0x0000000000407b0f : add al, ah ; ret
0x0000000000407a0f : add al, ah ; ret 0xffff
0x0000000000404f1d : add al, ch ; lodsd eax, dword ptr [rsi] ; ret
0x0000000000404f2e : add al, ch ; pushfq ; ret
0x0000000000401727 : add al, ch ; ret
0x0000000000407b2f : add al, dh ; ret
0x0000000000407a4f : add al, dh ; ret 0xffff
0x0000000000407aef : add al, dl ; ret
0x00000000004079ef : add al, dl ; ret 0xffff
0x00000000004063ef : add bl, dh ; ret
0x0000000000407327 : add byte ptr [rax + rcx*8 - 1], ch ; call rsp
0x0000000000404748 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000407a49 : add byte ptr [rax], al ; add ah, ah ; add al, 0 ; add al, dh ; ret 0xffff
0x0000000000407a29 : add byte ptr [rax], al ; add ah, al ; add al, 0 ; add al, ah ; ret 0xffff
0x0000000000404f1b : add byte ptr [rax], al ; add al, ch ; lodsd eax, dword ptr [rsi] ; ret
0x0000000000404f2c : add byte ptr [rax], al ; add al, ch ; pushfq ; ret
0x0000000000401725 : add byte ptr [rax], al ; add al, ch ; ret
0x00000000004063ed : add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004063eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000405419 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004063ec : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040403e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000407989 : add byte ptr [rax], al ; add byte ptr [rsp + rax], ah ; add byte ptr [rax], al ; push rax ; ret 0xffff
0x00000000004078ee : add byte ptr [rax], al ; add cl, -1 ; jmp qword ptr [rdx]
0x000000000040372a : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004034d0 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040127b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000040798a : add byte ptr [rax], al ; and al, 4 ; add byte ptr [rax], al ; push rax ; ret 0xffff
0x00000000004074e6 : add byte ptr [rax], al ; cld ; out -1, eax ; call rsp
0x00000000004072ee : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret 0xffff
0x00000000004013f9 : add byte ptr [rax], al ; jmp 0x401299
0x0000000000404f17 : add byte ptr [rax], al ; jmp 0x404f61
0x00000000004072f6 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0xffff
0x000000000040541b : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000402312 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000407a0a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add al, 0 ; add al, ah ; ret 0xffff
0x0000000000407aae : add byte ptr [rax], al ; nop ; ret
0x0000000000402128 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040460b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403498 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040798e : add byte ptr [rax], al ; push rax ; ret 0xffff
0x00000000004063ee : add byte ptr [rax], al ; ret
0x00000000004079ea : add byte ptr [rax], al ; test byte ptr [rax + rax], al ; add al, dl ; ret 0xffff
0x00000000004078ea : add byte ptr [rax], al ; test byte ptr [rbx], al ; add byte ptr [rax], al ; add cl, -1 ; jmp qword ptr [rdx]
0x000000000040796f : add byte ptr [rax], dh ; ret 0xffff
0x0000000000407a6f : add byte ptr [rax], dl ; ret
0x000000000040460c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000403499 : add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004072e7 : add byte ptr [rbx + rsi*4 - 1], bh ; call rsp
0x00000000004016d8 : add byte ptr [rcx], al ; ret
0x0000000000400289 : add byte ptr [rdi + 0x79fe78ea], ah ; ret 0x1de0
0x00000000004073e7 : add byte ptr [rdi + rdx*8 - 1], bl ; call rsp
0x0000000000401721 : add byte ptr [rdi], cl ; test byte ptr [rdx], cl ; add byte ptr [rax], al ; add al, ch ; ret
0x0000000000404040 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000407427 : add byte ptr [rdx + rbx*8 - 1], cl ; call rsp
0x000000000040798b : add byte ptr [rsp + rax], ah ; add byte ptr [rax], al ; push rax ; ret 0xffff
0x00000000004078f0 : add cl, -1 ; jmp qword ptr [rdx]
0x0000000000403728 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040460a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000403497 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040553a : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004016d4 : add eax, 0x207bde ; add ebx, esi ; ret
0x000000000040169b : add eax, edx ; sar rax, 1 ; jne 0x4016ac ; pop rbp ; ret
0x00000000004016d9 : add ebx, esi ; ret
0x000000000040182b : add esp, 0x10 ; pop rbp ; ret
0x000000000040610c : add esp, 0x130 ; pop rbp ; ret
0x0000000000403494 : add esp, 0x138 ; pop rbx ; pop rbp ; ret
0x00000000004048fc : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000401e40 : add esp, 0x20 ; pop rbp ; ret
0x000000000040190d : add esp, 0x30 ; pop rbp ; ret
0x0000000000403b0c : add esp, 0x50 ; pop rbp ; ret
0x000000000040209a : add esp, 0x60 ; pop rbp ; ret
0x00000000004025a3 : add esp, 0x70 ; pop rbp ; ret
0x000000000040364e : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000402124 : add esp, 0x90 ; pop rbp ; ret
0x0000000000404794 : add esp, 0xa0 ; pop rbp ; ret
0x00000000004053af : add esp, 0xe0 ; pop rbp ; ret
0x000000000040127e : add esp, 8 ; ret
0x000000000040169a : add rax, rdx ; sar rax, 1 ; jne 0x4016ad ; pop rbp ; ret
0x000000000040182a : add rsp, 0x10 ; pop rbp ; ret
0x000000000040610b : add rsp, 0x130 ; pop rbp ; ret
0x0000000000403493 : add rsp, 0x138 ; pop rbx ; pop rbp ; ret
0x00000000004048fb : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000401e3f : add rsp, 0x20 ; pop rbp ; ret
0x000000000040190c : add rsp, 0x30 ; pop rbp ; ret
0x0000000000403b0b : add rsp, 0x50 ; pop rbp ; ret
0x0000000000402099 : add rsp, 0x60 ; pop rbp ; ret
0x00000000004025a2 : add rsp, 0x70 ; pop rbp ; ret
0x000000000040364d : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000402123 : add rsp, 0x90 ; pop rbp ; ret
0x0000000000404793 : add rsp, 0xa0 ; pop rbp ; ret
0x00000000004053ae : add rsp, 0xe0 ; pop rbp ; ret
0x000000000040127d : add rsp, 8 ; ret
0x0000000000405539 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040798c : and al, 4 ; add byte ptr [rax], al ; push rax ; ret 0xffff
0x00000000004016d7 : and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000403a57 : and eax, 0x48fffffd ; add esp, 0x20 ; pop rbp ; ret
0x0000000000401bef : and eax, 0x6092c0 ; pop rbp ; ret
0x0000000000401c13 : and eax, 0x6092c8 ; pop rbp ; ret
0x00000000004034c9 : call 0xffffffffe902be19
0x00000000004034c8 : call 0xffffffffe902be1a
0x00000000004063c9 : call qword ptr [r12 + rbx*8]
0x0000000000407633 : call qword ptr [rsi]
0x00000000004063ca : call qword ptr [rsp + rbx*8]
0x00000000004016fd : call rax
0x00000000004075b3 : call rcx
0x0000000000407873 : call rdx
0x000000000040726b : call rsp
0x000000000040610a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x0000000000404aff : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404051 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402098 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000402122 : clc ; add rsp, 0x90 ; pop rbp ; ret
0x000000000040169f : clc ; jne 0x4016a8 ; pop rbp ; ret
0x0000000000402455 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040590b : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040590e : clc ; pop rbp ; ret
0x0000000000405418 : cld ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000406256 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405adb : cld ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405a20 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004053ad : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x0000000000405908 : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000406253 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004061f6 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405a1d : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004074e8 : cld ; out -1, eax ; call rsp
0x000000000040541f : cld ; pop rbp ; ret
0x0000000000403496 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040165d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401670 ; pop rbp ; ret
0x000000000040414c : cwde ; mov rcx, qword ptr [rax*8 + 0x406d38] ; jmp rcx
0x000000000040606f : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000040357b : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000401c14 : enter 0x6092, 0 ; pop rbp ; ret
0x00000000004016d5 : fidivr word ptr [rbx + 0x20] ; add byte ptr [rcx], al ; ret
0x0000000000402eb3 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x00000000004063cc : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000401829 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401670 : hlt ; pop rbp ; mov edi, 0x609250 ; jmp rax
0x00000000004074a9 : in al, -1 ; call rsp
0x000000000040547d : in al, dx ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004072f0 : insb byte ptr [rdi], dx ; ret 0xffff
0x0000000000404750 : int 0x80
0x0000000000401663 : ja 0x40166a ; pop rbp ; ret
0x000000000040166f : je 0x40166d ; pop rbp ; mov edi, 0x609250 ; jmp rax
0x00000000004013fb : jmp 0x401297
0x0000000000404f19 : jmp 0x404f5f
0x0000000000407a13 : jmp qword ptr [rax]
0x00000000004078f3 : jmp qword ptr [rdx]
0x0000000000401677 : jmp rax
0x000000000040265e : jmp rcx
0x00000000004016b7 : jmp rdx
0x00000000004016a0 : jne 0x4016a7 ; pop rbp ; ret
0x00000000004016d6 : jnp 0x4016fd ; add byte ptr [rcx], al ; ret
0x00000000004025a5 : jo 0x402606 ; ret
0x0000000000403cb4 : jo 0x403d15 ; ret
0x0000000000403dee : jo 0x403e4f ; ret
0x0000000000403650 : js 0x4036b0 ; pop rbp ; ret
0x00000000004072f8 : lodsb al, byte ptr [rsi] ; ret 0xffff
0x0000000000404f1f : lodsd eax, dword ptr [rsi] ; ret
0x0000000000407469 : loop 0x40746c ; call rsp
0x00000000004053b1 : loopne 0x4053b8 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000408071 : loopne 0x408074 ; jmp rax
0x00000000004074e4 : mov ah, 0xd ; add byte ptr [rax], al ; cld ; out -1, eax ; call rsp
0x0000000000403b8b : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000403a1b : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000405536 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004072e9 : mov bl, -1 ; call rsp
0x0000000000401c11 : mov byte ptr [0x6092c8], al ; pop rbp ; ret
0x00000000004016d3 : mov byte ptr [rip + 0x207bde], 1 ; ret
0x000000000040553c : mov dh, -0x40 ; pop rbp ; ret
0x0000000000401bed : mov dword ptr [0x6092c0], edi ; pop rbp ; ret
0x0000000000402456 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000402364 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000402418 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000401909 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401827 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405909 : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004024ce : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040364c : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000402318 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000404a1b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401e3c : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402315 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000401dbf : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040547b : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404cb3 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004022cd : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040235e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040241a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040259f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040364a : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000403b89 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000406254 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405ad9 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405a1e : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040541d : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000404afd : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040404f : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402096 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040590c : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004016fb : mov ebp, esp ; call rax
0x0000000000401661 : mov ebp, esp ; ja 0x40166c ; pop rbp ; ret
0x0000000000402657 : mov ecx, dword ptr [rax*8 + 0x406830] ; jmp rcx
0x0000000000402937 : mov ecx, dword ptr [rax*8 + 0x406878] ; jmp rcx
0x000000000040414e : mov ecx, dword ptr [rax*8 + 0x406d38] ; jmp rcx
0x00000000004051ed : mov ecx, dword ptr [rax*8 + 0x4070b0] ; jmp rcx
0x000000000040516d : mov ecx, dword ptr [rax*8 + 0x407110] ; jmp rcx
0x0000000000402361 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004016f5 : mov edi, 0x608e20 ; mov rbp, rsp ; call rax
0x0000000000401672 : mov edi, 0x609250 ; jmp rax
0x00000000004016b2 : mov edi, 0x609250 ; jmp rdx
0x00000000004063c7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x00000000004063c6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x00000000004016b0 : mov esi, eax ; mov edi, 0x609250 ; jmp rdx
0x00000000004016f7 : mov fs, word ptr [rax] ; mov rbp, rsp ; call rax
0x0000000000401bec : mov qword ptr [0x6092c0], rdi ; pop rbp ; ret
0x00000000004024cd : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403b8a : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040364b : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000404a1a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401e3b : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402314 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000401dbe : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000404cb2 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004022cc : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040259e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000403b88 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000404afc : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040404e : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402095 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004016fa : mov rbp, rsp ; call rax
0x0000000000401660 : mov rbp, rsp ; ja 0x40166d ; pop rbp ; ret
0x0000000000402656 : mov rcx, qword ptr [rax*8 + 0x406830] ; jmp rcx
0x0000000000402936 : mov rcx, qword ptr [rax*8 + 0x406878] ; jmp rcx
0x000000000040414d : mov rcx, qword ptr [rax*8 + 0x406d38] ; jmp rcx
0x00000000004051ec : mov rcx, qword ptr [rax*8 + 0x4070b0] ; jmp rcx
0x000000000040516c : mov rcx, qword ptr [rax*8 + 0x407110] ; jmp rcx
0x00000000004016af : mov rsi, rax ; mov edi, 0x609250 ; jmp rdx
0x0000000000407a0c : movsb byte ptr [rdi], byte ptr [rsi] ; add al, 0 ; add al, ah ; ret 0xffff
0x000000000040553b : movzx eax, al ; pop rbp ; ret
0x0000000000407ab0 : nop ; ret
0x00000000004063e8 : nop dword ptr [rax + rax] ; ret
0x0000000000407425 : or al, byte ptr [rax] ; add byte ptr [rdx + rbx*8 - 1], cl ; call rsp
0x0000000000402eae : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000402eaf : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x00000000004073e5 : or dword ptr [rax], eax ; add byte ptr [rdi + rdx*8 - 1], bl ; call rsp
0x0000000000407465 : or eax, dword ptr [rax] ; add ah, bl ; loop 0x407470 ; call rsp
0x0000000000403d71 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004074e9 : out -1, eax ; call rsp
0x00000000004063dc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004063de : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040460e : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004063e0 : pop r14 ; pop r15 ; ret
0x0000000000404610 : pop r15 ; pop rbp ; ret
0x00000000004063e2 : pop r15 ; ret
0x00000000004016d2 : pop rbp ; mov byte ptr [rip + 0x207bde], 1 ; ret
0x0000000000401671 : pop rbp ; mov edi, 0x609250 ; jmp rax
0x00000000004016ae : pop rbp ; mov rsi, rax ; mov edi, 0x609250 ; jmp rdx
0x00000000004063db : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004063df : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401665 : pop rbp ; ret
0x000000000040460d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040349a : pop rbx ; pop rbp ; ret
0x0000000000404611 : pop rdi ; pop rbp ; ret
0x00000000004063e3 : pop rdi ; ret
0x000000000040460f : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004063e1 : pop rsi ; pop r15 ; ret
0x00000000004063dd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000403b0e : push rax ; pop rbp ; ret
0x0000000000407990 : push rax ; ret 0xffff
0x0000000000402eb2 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x00000000004016f4 : push rbp ; mov edi, 0x608e20 ; mov rbp, rsp ; call rax
0x0000000000405cfd : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000040357e : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000404f30 : pushfq ; ret
0x0000000000401281 : ret
0x000000000040028f : ret 0x1de0
0x0000000000401602 : ret 0x207b
0x0000000000401402 : ret 0x207c
0x0000000000404109 : ret 0x8844
0x0000000000404b82 : ret 0x8948
0x0000000000402fdd : ret 0x89a5
0x0000000000401b03 : ret 0x8b48
0x0000000000402ecb : ret 0xbfe8
0x0000000000401695 : ret 0xc148
0x0000000000404043 : ret 0xd284
0x00000000004034cc : ret 0xee8
0x00000000004072f1 : ret 0xffff
0x00000000004037ee : ret 1
0x0000000000403582 : ret 8
0x000000000040474b : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x00000000004025a0 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x40260b ; ret
0x000000000040169c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4016ab ; pop rbp ; ret
0x000000000040474c : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x00000000004025a1 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x40260a ; ret
0x0000000000405cfe : ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000040357f : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000040169e : sar eax, 1 ; jne 0x4016a9 ; pop rbp ; ret
0x000000000040169d : sar rax, 1 ; jne 0x4016aa ; pop rbp ; ret
0x0000000000407988 : sbb al, 0 ; add byte ptr [rax], al ; and al, 4 ; add byte ptr [rax], al ; push rax ; ret 0xffff
0x0000000000407a08 : sbb al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add al, 0 ; add al, ah ; ret 0xffff
0x00000000004079e8 : sbb al, 0 ; add byte ptr [rax], al ; test byte ptr [rax + rax], al ; add al, dl ; ret 0xffff
0x0000000000404fe3 : shr al, 1 ; xlatb ; ret
0x0000000000405538 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040641d : sub esp, 8 ; add rsp, 8 ; ret
0x000000000040641c : sub rsp, 8 ; add rsp, 8 ; ret
0x00000000004079ec : test byte ptr [rax + rax], al ; add al, dl ; ret 0xffff
0x00000000004063ea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004078ec : test byte ptr [rbx], al ; add byte ptr [rax], al ; add cl, -1 ; jmp qword ptr [rdx]
0x0000000000401723 : test byte ptr [rdx], cl ; add byte ptr [rax], al ; add al, ch ; ret
0x0000000000404042 : xchg eax, esp ; ret 0xd284
0x0000000000404fe5 : xlatb ; ret
0x000000000040610e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000402416 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
