0x000000000040439b : adc dword ptr [rsi], ecx ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403a89 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407181 : add al, 0 ; add al, dl ; mov cl, -1 ; jmp rax
0x0000000000407a54 : add al, 6 ; add byte ptr [rax], al ; call 0x23407a2b
0x00000000004072c3 : add al, ah ; fdivr st(7) ; jmp rax
0x0000000000407353 : add al, al ; in al, -1 ; jmp qword ptr [rax]
0x00000000004071d3 : add al, al ; mov bh, -1 ; jmp qword ptr [rax]
0x0000000000407cd7 : add al, bh ; sar edi, cl ; jmp rax
0x0000000000401727 : add al, ch ; ret
0x00000000004077d7 : add al, cl ; ret 0xffff
0x0000000000407183 : add al, dl ; mov cl, -1 ; jmp rax
0x00000000004063ef : add bl, dh ; ret
0x0000000000407350 : add byte ptr [rax + rax], cl ; add al, al ; in al, -1 ; jmp qword ptr [rax]
0x0000000000405102 : add byte ptr [rax - 0x75], cl ; jge 0x4050fe ; call 0x401347
0x0000000000404a98 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000407a52 : add byte ptr [rax], al ; add al, 6 ; add byte ptr [rax], al ; call 0x23407a2d
0x0000000000401725 : add byte ptr [rax], al ; add al, ch ; ret
0x00000000004063ed : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000405100 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jge 0x405100 ; call 0x401349
0x00000000004063eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000400728 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x000000000040072a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000004063ec : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040072c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x0000000000401b63 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7638b], cl ; ret 0xb0
0x000000000040435e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000403a4a : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004037f0 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040126b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000407a56 : add byte ptr [rax], al ; call 0x23407a29
0x0000000000401ad7 : add byte ptr [rax], al ; call 0x401718
0x0000000000407796 : add byte ptr [rax], al ; call 0xffffffffd3407763
0x0000000000407cd6 : add byte ptr [rax], al ; clc ; sar edi, cl ; jmp rax
0x0000000000401409 : add byte ptr [rax], al ; jmp 0x401289
0x0000000000407192 : add byte ptr [rax], al ; mov bl, -1 ; jmp qword ptr [rax]
0x000000000040513e : add byte ptr [rax], al ; mov edi, eax ; call 0x4013d6
0x0000000000402632 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000405101 : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x10] ; call 0x401348
0x0000000000407282 : add byte ptr [rax], al ; nop ; sar bh, 1 ; jmp rax
0x000000000040201e : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040495b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004037b8 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004063ee : add byte ptr [rax], al ; ret
0x000000000040072e : add byte ptr [rax], al ; ret 1
0x0000000000407293 : add byte ptr [rax], al ; sar edi, 1 ; jmp qword ptr [rax]
0x0000000000407312 : add byte ptr [rax], al ; sbb dh, -1 ; jmp qword ptr [rax]
0x0000000000407352 : add byte ptr [rax], al ; shl ah, -1 ; jmp qword ptr [rax]
0x00000000004073c2 : add byte ptr [rax], al ; shr bh, -1 ; jmp rax
0x0000000000407cd2 : add byte ptr [rax], al ; test byte ptr [rax], cl ; add byte ptr [rax], al ; clc ; sar edi, cl ; jmp rax
0x0000000000407303 : add byte ptr [rax], dh ; fdivp st(7) ; jmp rax
0x0000000000407143 : add byte ptr [rax], dl ; test al, -1 ; jmp rax
0x000000000040495c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004037b9 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000401f26 : add byte ptr [rbx - 0x204f4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000401b65 : add byte ptr [rbx - 0x76b7638b], cl ; ret 0xb0
0x0000000000407310 : add byte ptr [rbx], cl ; add byte ptr [rax], al ; sbb dh, -1 ; jmp qword ptr [rax]
0x00000000004050a6 : add byte ptr [rcx - 0xe1703bb], cl ; ret 0xffff
0x00000000004016d8 : add byte ptr [rcx], al ; ret
0x0000000000401721 : add byte ptr [rdi], cl ; test byte ptr [rdx], cl ; add byte ptr [rax], al ; add al, ch ; ret
0x0000000000404360 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000407a53 : add byte ptr [rsi + rax], al ; add byte ptr [rax], al ; call 0x23407a2c
0x0000000000403a48 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040513c : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov edi, eax ; call 0x4013d8
0x000000000040495a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004037b7 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000405f4a : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004016d4 : add eax, 0x207bbe ; add ebx, esi ; ret
0x00000000004077d5 : add eax, dword ptr [rax] ; add al, cl ; ret 0xffff
0x0000000000407141 : add eax, dword ptr [rax] ; add byte ptr [rax], dl ; test al, -1 ; jmp rax
0x000000000040169b : add eax, edx ; sar rax, 1 ; jne 0x4016ac ; pop rbp ; ret
0x00000000004016d9 : add ebx, esi ; ret
0x000000000040182b : add esp, 0x10 ; pop rbp ; ret
0x0000000000405f0c : add esp, 0x130 ; pop rbp ; ret
0x00000000004037b4 : add esp, 0x138 ; pop rbx ; pop rbp ; ret
0x0000000000404c4c : add esp, 0x1a0 ; pop rbp ; ret
0x000000000040555e : add esp, 0x1e0 ; pop rbp ; ret
0x0000000000402290 : add esp, 0x20 ; pop rbp ; ret
0x000000000040201a : add esp, 0x2050 ; pop rbp ; ret
0x000000000040190d : add esp, 0x30 ; pop rbp ; ret
0x000000000040244a : add esp, 0x40 ; pop rbp ; ret
0x0000000000403e2c : add esp, 0x50 ; pop rbp ; ret
0x00000000004028c3 : add esp, 0x70 ; pop rbp ; ret
0x000000000040396e : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000403d3d : add esp, 0x90 ; pop rbp ; ret
0x0000000000404ae4 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040126e : add esp, 8 ; ret
0x000000000040169a : add rax, rdx ; sar rax, 1 ; jne 0x4016ad ; pop rbp ; ret
0x000000000040182a : add rsp, 0x10 ; pop rbp ; ret
0x0000000000405f0b : add rsp, 0x130 ; pop rbp ; ret
0x00000000004037b3 : add rsp, 0x138 ; pop rbx ; pop rbp ; ret
0x0000000000404c4b : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000040555d : add rsp, 0x1e0 ; pop rbp ; ret
0x000000000040228f : add rsp, 0x20 ; pop rbp ; ret
0x0000000000402019 : add rsp, 0x2050 ; pop rbp ; ret
0x000000000040190c : add rsp, 0x30 ; pop rbp ; ret
0x0000000000402449 : add rsp, 0x40 ; pop rbp ; ret
0x0000000000403e2b : add rsp, 0x50 ; pop rbp ; ret
0x00000000004028c2 : add rsp, 0x70 ; pop rbp ; ret
0x000000000040396d : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000403d3c : add rsp, 0x90 ; pop rbp ; ret
0x0000000000404ae3 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040126d : add rsp, 8 ; ret
0x0000000000405f49 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004016d7 : and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000403d77 : and eax, 0x48fffffd ; add esp, 0x20 ; pop rbp ; ret
0x000000000040203f : and eax, 0x6092a0 ; pop rbp ; ret
0x0000000000402063 : and eax, 0x6092a8 ; pop rbp ; ret
0x0000000000407a58 : call 0x23407a27
0x0000000000405107 : call 0x401342
0x00000000004050aa : call 0x4013a2
0x0000000000405142 : call 0x4013d2
0x0000000000401ad9 : call 0x401716
0x0000000000401a68 : call 0x401719
0x0000000000407798 : call 0xffffffffd3407761
0x00000000004037e9 : call 0xffffffffe902c139
0x00000000004037e8 : call 0xffffffffe902c13a
0x00000000004063c9 : call qword ptr [r12 + rbx*8]
0x000000000040753b : call qword ptr [rsi]
0x00000000004063ca : call qword ptr [rsp + rbx*8]
0x00000000004016fd : call rax
0x000000000040749b : call rcx
0x000000000040779b : call rdx
0x0000000000405f0a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x0000000000404e4f : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404371 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402448 : clc ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040169f : clc ; jne 0x4016a8 ; pop rbp ; ret
0x0000000000402775 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040631b : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040631e : clc ; pop rbp ; ret
0x0000000000407cd8 : clc ; sar edi, cl ; jmp rax
0x00000000004055c6 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004051a9 : cld ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004056e4 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004050a9 : cld ; call 0x4013a3
0x00000000004050a8 : cld ; call 0x4013a4
0x0000000000406318 : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004055c3 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004051a6 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004056e1 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004037b6 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040165d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401670 ; pop rbp ; ret
0x000000000040449c : cwde ; mov rcx, qword ptr [rax*8 + 0x406d58] ; jmp rcx
0x0000000000401a6c : dec dword ptr [rax - 0x73] ; xor al, 0x25 ; ret 0x4065
0x0000000000401f2c : dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000405e6f : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000040389b : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000407315 : fdivp st(7) ; jmp qword ptr [rax]
0x0000000000407305 : fdivp st(7) ; jmp rax
0x00000000004072c5 : fdivr st(7) ; jmp rax
0x00000000004031d3 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x00000000004063cc : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000401829 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401670 : hlt ; pop rbp ; mov edi, 0x609258 ; jmp rax
0x0000000000407355 : in al, -1 ; jmp qword ptr [rax]
0x00000000004050ef : in eax, dx ; ret
0x000000000040734f : inc dword ptr [rax] ; or al, 0 ; add al, al ; in al, -1 ; jmp qword ptr [rax]
0x000000000040728f : inc dword ptr [rax] ; or dword ptr [rax], eax ; add byte ptr [rax], al ; sar edi, 1 ; jmp qword ptr [rax]
0x000000000040717f : inc eax ; add al, 0 ; add al, dl ; mov cl, -1 ; jmp rax
0x000000000040713f : inc eax ; add eax, dword ptr [rax] ; add byte ptr [rax], dl ; test al, -1 ; jmp rax
0x00000000004072ff : inc eax ; or al, byte ptr [rax] ; add byte ptr [rax], dh ; fdivp st(7) ; jmp rax
0x00000000004072bf : inc eax ; or dword ptr [rax], eax ; add al, ah ; fdivr st(7) ; jmp rax
0x0000000000404aa0 : int 0x80
0x00000000004050ab : int1 ; ret 0xffff
0x0000000000401663 : ja 0x40166a ; pop rbp ; ret
0x000000000040166f : je 0x40166d ; pop rbp ; mov edi, 0x609258 ; jmp rax
0x0000000000405105 : jge 0x4050fb ; call 0x401344
0x000000000040140b : jmp 0x401287
0x0000000000407157 : jmp qword ptr [rax]
0x000000000040781b : jmp qword ptr [rdx]
0x0000000000401677 : jmp rax
0x000000000040297e : jmp rcx
0x00000000004016b7 : jmp rdx
0x00000000004016a0 : jne 0x4016a7 ; pop rbp ; ret
0x00000000004016d6 : jnp 0x4016fd ; add byte ptr [rcx], al ; ret
0x00000000004028c5 : jo 0x402926 ; ret
0x0000000000403fd4 : jo 0x404035 ; ret
0x000000000040410e : jo 0x40416f ; ret
0x0000000000403970 : js 0x4039d0 ; pop rbp ; ret
0x00000000004022cb : loopne 0x40231b ; add esp, 0x20 ; pop rbp ; ret
0x00000000004022ca : loopne 0x40231c ; add esp, 0x20 ; pop rbp ; ret
0x0000000000405560 : loopne 0x405568 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000407345 : loopne 0x407348 ; jmp rax
0x0000000000403eab : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000403d3b : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000405f46 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004071d5 : mov bh, -1 ; jmp qword ptr [rax]
0x0000000000407195 : mov bl, -1 ; jmp qword ptr [rax]
0x0000000000402061 : mov byte ptr [0x6092a8], al ; pop rbp ; ret
0x00000000004016d3 : mov byte ptr [rip + 0x207bbe], 1 ; ret
0x0000000000407185 : mov cl, -1 ; jmp rax
0x0000000000405f4c : mov dh, -0x40 ; pop rbp ; ret
0x00000000004071c5 : mov dh, -1 ; jmp rax
0x000000000040203d : mov dword ptr [0x6092a0], edi ; pop rbp ; ret
0x0000000000402776 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000402684 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000402738 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004022c9 : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401909 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401827 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004050a7 : mov dword ptr [rbp - 4], eax ; call 0x4013a5
0x0000000000406319 : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004027ee : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040396c : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000402638 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000404d6b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040228c : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402635 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040220f : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405003 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004025ed : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040267e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040273a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004028bf : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040396a : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000403ea9 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004055c4 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004051a7 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004056e2 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404e4d : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040436f : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402446 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040631c : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004016fb : mov ebp, esp ; call rax
0x0000000000401661 : mov ebp, esp ; ja 0x40166c ; pop rbp ; ret
0x0000000000402977 : mov ecx, dword ptr [rax*8 + 0x406850] ; jmp rcx
0x0000000000402c57 : mov ecx, dword ptr [rax*8 + 0x406898] ; jmp rcx
0x000000000040449e : mov ecx, dword ptr [rax*8 + 0x406d58] ; jmp rcx
0x0000000000402681 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004016f5 : mov edi, 0x608e20 ; mov rbp, rsp ; call rax
0x0000000000401672 : mov edi, 0x609258 ; jmp rax
0x00000000004016b2 : mov edi, 0x609258 ; jmp rdx
0x0000000000405104 : mov edi, dword ptr [rbp - 0x10] ; call 0x401345
0x0000000000405140 : mov edi, eax ; call 0x4013d4
0x00000000004063c7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x00000000004063c6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000040513b : mov edx, 1 ; mov edi, eax ; call 0x4013d9
0x00000000004016d5 : mov esi, 0x100207b ; ret
0x00000000004016b0 : mov esi, eax ; mov edi, 0x609258 ; jmp rdx
0x00000000004016f7 : mov fs, word ptr [rax] ; mov rbp, rsp ; call rax
0x000000000040203c : mov qword ptr [0x6092a0], rdi ; pop rbp ; ret
0x00000000004027ed : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403eaa : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040396b : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000404d6a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040228b : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402634 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040220e : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405002 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004025ec : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004028be : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000403ea8 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000404e4c : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040436e : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402445 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004016fa : mov rbp, rsp ; call rax
0x0000000000401660 : mov rbp, rsp ; ja 0x40166d ; pop rbp ; ret
0x0000000000402976 : mov rcx, qword ptr [rax*8 + 0x406850] ; jmp rcx
0x0000000000402c56 : mov rcx, qword ptr [rax*8 + 0x406898] ; jmp rcx
0x000000000040449d : mov rcx, qword ptr [rax*8 + 0x406d58] ; jmp rcx
0x0000000000405103 : mov rdi, qword ptr [rbp - 0x10] ; call 0x401346
0x00000000004016af : mov rsi, rax ; mov edi, 0x609258 ; jmp rdx
0x0000000000405f4b : movzx eax, al ; pop rbp ; ret
0x0000000000407284 : nop ; sar bh, 1 ; jmp rax
0x00000000004063e8 : nop dword ptr [rax + rax] ; ret
0x0000000000407351 : or al, 0 ; add al, al ; in al, -1 ; jmp qword ptr [rax]
0x0000000000407301 : or al, byte ptr [rax] ; add byte ptr [rax], dh ; fdivp st(7) ; jmp rax
0x00000000004031ce : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x00000000004031cf : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000407cd5 : or byte ptr [rax], al ; add al, bh ; sar edi, cl ; jmp rax
0x00000000004072c1 : or dword ptr [rax], eax ; add al, ah ; fdivr st(7) ; jmp rax
0x0000000000407291 : or dword ptr [rax], eax ; add byte ptr [rax], al ; sar edi, 1 ; jmp qword ptr [rax]
0x0000000000404091 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004063dc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004063de : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040495e : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004063e0 : pop r14 ; pop r15 ; ret
0x0000000000404960 : pop r15 ; pop rbp ; ret
0x00000000004063e2 : pop r15 ; ret
0x00000000004016d2 : pop rbp ; mov byte ptr [rip + 0x207bbe], 1 ; ret
0x0000000000401671 : pop rbp ; mov edi, 0x609258 ; jmp rax
0x00000000004016ae : pop rbp ; mov rsi, rax ; mov edi, 0x609258 ; jmp rdx
0x00000000004063db : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004063df : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401665 : pop rbp ; ret
0x000000000040495d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004037ba : pop rbx ; pop rbp ; ret
0x0000000000404961 : pop rdi ; pop rbp ; ret
0x00000000004063e3 : pop rdi ; ret
0x000000000040495f : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004063e1 : pop rsi ; pop r15 ; ret
0x00000000004063dd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000403e2e : push rax ; pop rbp ; ret
0x00000000004031d2 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x00000000004016f4 : push rbp ; mov edi, 0x608e20 ; mov rbp, rsp ; call rax
0x0000000000405afd : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000040389e : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000401271 : ret
0x0000000000401612 : ret 0x207b
0x0000000000401412 : ret 0x207c
0x0000000000401a71 : ret 0x4065
0x0000000000404459 : ret 0x8844
0x0000000000404ed2 : ret 0x8948
0x00000000004032fd : ret 0x89a5
0x00000000004031d6 : ret 0x8b48
0x0000000000401b6b : ret 0xb0
0x0000000000401695 : ret 0xc148
0x0000000000404363 : ret 0xd284
0x00000000004037ec : ret 0xee8
0x00000000004031eb : ret 0xffe8
0x0000000000401adf : ret 0xfffe
0x00000000004050ac : ret 0xffff
0x0000000000400730 : ret 1
0x00000000004038a2 : ret 8
0x0000000000407140 : rol byte ptr [rbx], 0 ; add byte ptr [rax], dl ; test al, -1 ; jmp rax
0x00000000004071c0 : rol byte ptr [rip - 0x49900000], -1 ; jmp rax
0x0000000000404a9b : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x00000000004028c0 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x40292b ; ret
0x000000000040169c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4016ab ; pop rbp ; ret
0x0000000000404a9c : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x00000000004028c1 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x40292a ; ret
0x0000000000405afe : ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000040389f : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x00000000004072c0 : ror byte ptr [rcx], 0 ; add al, ah ; fdivr st(7) ; jmp rax
0x0000000000407300 : ror byte ptr [rdx], 0 ; add byte ptr [rax], dh ; fdivp st(7) ; jmp rax
0x00000000004073c0 : ror byte ptr [rip - 0x10400000], -1 ; jmp rax
0x0000000000407285 : sar bh, 1 ; jmp rax
0x000000000040169e : sar eax, 1 ; jne 0x4016a9 ; pop rbp ; ret
0x0000000000407295 : sar edi, 1 ; jmp qword ptr [rax]
0x0000000000407cd9 : sar edi, cl ; jmp rax
0x000000000040169d : sar rax, 1 ; jne 0x4016aa ; pop rbp ; ret
0x0000000000407314 : sbb dh, -1 ; jmp qword ptr [rax]
0x000000000040512d : scasd eax, dword ptr [rdi] ; ret
0x0000000000407354 : shl ah, -1 ; jmp qword ptr [rax]
0x00000000004073c4 : shr bh, -1 ; jmp rax
0x0000000000405f48 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040641d : sub esp, 8 ; add rsp, 8 ; ret
0x000000000040641c : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000407145 : test al, -1 ; jmp rax
0x00000000004063ea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000407cd4 : test byte ptr [rax], cl ; add byte ptr [rax], al ; clc ; sar edi, cl ; jmp rax
0x0000000000401723 : test byte ptr [rdx], cl ; add byte ptr [rax], al ; add al, ch ; ret
0x0000000000404362 : xchg eax, esp ; ret 0xd284
0x0000000000401a6f : xor al, 0x25 ; ret 0x4065
0x0000000000405f0e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000402736 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
