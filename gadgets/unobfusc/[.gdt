0x0000000000401e2c : adc al, 0x25 ; nop ; ret 0x60
0x000000000040336a : adc al, 0x25 ; pushfq ; ret 0x60
0x0000000000401ef7 : adc byte ptr [rax + 0x63], cl ; add al, 0x25 ; pushfq ; ret 0x60
0x0000000000403470 : adc byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040a981 : adc dword ptr [rax], eax ; add al, al ; loope 0x40a98c ; jmp rax
0x00000000004059f9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040b533 : add ah, ah ; or al, byte ptr [rax] ; add al, ch ; ret
0x0000000000401bee : add al, 0x25 ; cwde ; ret 0x60
0x0000000000401bf5 : add al, 0x25 ; pushfq ; ret 0x60
0x0000000000404a6b : add al, 0x25 ; ret 0x409a
0x000000000040b754 : add al, 0xd ; add byte ptr [rax], al ; call 0xffffffffe140b731
0x000000000040a693 : add al, al ; jl 0x40a69a ; jmp qword ptr [rax]
0x000000000040a983 : add al, al ; loope 0x40a98a ; jmp rax
0x000000000040ac97 : add al, bl ; jnp 0x40ac9e ; call rdi
0x0000000000400027 : add al, bl ; ret
0x000000000040ac95 : add al, byte ptr [rax] ; add al, bl ; jnp 0x40aca0 ; call rdi
0x000000000040b537 : add al, ch ; ret
0x0000000000403bb8 : add al, ch ; ret 1
0x000000000040a793 : add al, dh ; mov dh, -1 ; jmp qword ptr [rax]
0x000000000040a6c3 : add al, dh ; mov dr1, edi ; jmp rax
0x0000000000401bf3 : add bh, al ; add al, 0x25 ; pushfq ; ret 0x60
0x0000000000408c6f : add bl, dh ; ret
0x00000000004023fb : add byte ptr [rax + 0x250c8b00], dh ; pushfq ; ret 0x60
0x0000000000401da9 : add byte ptr [rax + 0x63], cl ; add al, 0x25 ; pushfq ; ret 0x60
0x0000000000402416 : add byte ptr [rax + 0x63], cl ; or al, 0x25 ; pushfq ; ret 0x60
0x0000000000403375 : add byte ptr [rax + 0x63], cl ; ret 0x8b48
0x0000000000401ec9 : add byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x75], 1 ; xor al, 0x25 ; nop ; ret 0x60
0x000000000040b2b3 : add byte ptr [rax + rcx], ah ; add byte ptr [rax], bh ; mov al, -1 ; call qword ptr [rdx]
0x0000000000404a68 : add byte ptr [rax - 0x73], cl ; add al, 0x25 ; ret 0x409a
0x000000000040497d : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x409a
0x00000000004062c1 : add byte ptr [rax - 0x73], cl ; or al, 0x25 ; ret 0x409a
0x000000000040241e : add byte ptr [rax - 0x75], cl ; adc al, 0x25 ; nop ; ret 0x60
0x0000000000405117 : add byte ptr [rax - 0x75], cl ; jge 0x4050fb ; call 0x401337
0x0000000000401c5d : add byte ptr [rax - 0x75], cl ; or al, 0x25 ; nop ; ret 0x60
0x00000000004076d8 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000401cdf : add byte ptr [rax - 0x75], cl ; xor al, 0x25 ; nop ; ret 0x60
0x000000000040635d : add byte ptr [rax - 0x77], cl ; jge 0x406360 ; pop rbp ; ret
0x000000000040a8c3 : add byte ptr [rax], ah ; sar edi, 1 ; jmp rax
0x000000000040b531 : add byte ptr [rax], al ; add ah, ah ; or al, byte ptr [rax] ; add al, ch ; ret
0x000000000040b752 : add byte ptr [rax], al ; add al, 0xd ; add byte ptr [rax], al ; call 0xffffffffe140b733
0x0000000000400025 : add byte ptr [rax], al ; add al, bl ; ret
0x0000000000408c6d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000401da7 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; add al, 0x25 ; pushfq ; ret 0x60
0x0000000000403373 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8b48
0x0000000000404a66 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add al, 0x25 ; ret 0x409a
0x0000000000405115 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jge 0x4050fd ; call 0x401339
0x000000000040635b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jge 0x406362 ; pop rbp ; ret
0x0000000000400023 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bl ; ret
0x0000000000408c6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000400021 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bl ; ret
0x0000000000400630 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000400632 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000406e9d : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040635a : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x00000000004043b6 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000408c6c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400634 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000040226f : add byte ptr [rax], al ; add byte ptr [rcx + rax], ah ; movzx eax, al ; pop rbp ; ret
0x0000000000403cde : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x9588
0x00000000004065c3 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0xe280
0x00000000004062ce : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000403e54 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000040ac92 : add byte ptr [rax], al ; add r8b, byte ptr [rax] ; add al, bl ; jnp 0x40aca3 ; call rdi
0x0000000000402245 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405760 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401233 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000402270 : add byte ptr [rax], al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040b756 : add byte ptr [rax], al ; call 0xffffffffe140b72f
0x000000000040acb6 : add byte ptr [rax], al ; cwde ; jge 0x40acbf ; jmp qword ptr [rsi]
0x000000000040ac96 : add byte ptr [rax], al ; fdivr dword ptr [rbx - 1] ; call rdi
0x000000000040a942 : add byte ptr [rax], al ; fdivr st(7) ; jmp rax
0x000000000040a642 : add byte ptr [rax], al ; je 0x40a64b ; jmp rax
0x000000000040a682 : add byte ptr [rax], al ; jl 0x40a68b ; jmp rax
0x0000000000401449 : add byte ptr [rax], al ; jmp 0x401249
0x000000000040a783 : add byte ptr [rax], al ; mov ah, -1 ; jmp rax
0x000000000040ab16 : add byte ptr [rax], al ; mov byte ptr [rcx - 1], dh ; jmp qword ptr [rax]
0x000000000040aad6 : add byte ptr [rax], al ; mov byte ptr [rsi - 1], ch ; jmp rdx
0x0000000000406e9f : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040635c : add byte ptr [rax], al ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x00000000004045a2 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004043b8 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000405116 : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x28] ; call 0x401338
0x000000000040b4f2 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; or al, byte ptr [rax] ; add byte ptr [rax], bh ; ret 0xffff
0x000000000040b2f2 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; or byte ptr [rax], al ; add byte ptr [rax], bh ; mov al, -1 ; call qword ptr [rdx]
0x000000000040b2b2 : add byte ptr [rax], al ; or byte ptr fs:[rax], al ; add byte ptr [rax], bh ; mov al, -1 ; call qword ptr [rdx]
0x0000000000403472 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040759b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405728 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000408c6e : add byte ptr [rax], al ; ret
0x0000000000400636 : add byte ptr [rax], al ; ret 0
0x000000000040a982 : add byte ptr [rax], al ; shl cl, -1 ; jmp rax
0x000000000040aad2 : add byte ptr [rax], al ; test byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rsi - 1], ch ; jmp rdx
0x000000000040b2b7 : add byte ptr [rax], bh ; mov al, -1 ; call qword ptr [rdx]
0x000000000040b4f7 : add byte ptr [rax], bh ; ret 0xffff
0x000000000040a8d3 : add byte ptr [rax], dl ; sar edi, cl ; jmp qword ptr [rax]
0x000000000040759c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000405729 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000401c05 : add byte ptr [rbx], bh ; add al, 0x25 ; cwde ; ret 0x60
0x0000000000401c3b : add byte ptr [rbx], bh ; cmp al, 0x25 ; cwde ; ret 0x60
0x0000000000402304 : add byte ptr [rbx], bh ; or al, 0x25 ; cwde ; ret 0x60
0x0000000000402557 : add byte ptr [rbx], ch ; add al, 0x25 ; pushfq ; ret 0x60
0x0000000000402655 : add byte ptr [rbx], ch ; or al, 0x25 ; pushfq ; ret 0x60
0x000000000040336f : add byte ptr [rcx + 0x2c2], al ; add byte ptr [rax + 0x63], cl ; ret 0x8b48
0x00000000004065bf : add byte ptr [rcx + 0x9f9], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0xe280
0x0000000000402271 : add byte ptr [rcx + rax], ah ; movzx eax, al ; pop rbp ; ret
0x00000000004016a8 : add byte ptr [rcx], al ; ret
0x0000000000403ce0 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x9588
0x00000000004065c5 : add byte ptr [rdi], cl ; xchg eax, esi ; ret 0xe280
0x00000000004062d0 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000403e56 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000040ac93 : add byte ptr [rdx + rax], al ; add al, bl ; jnp 0x40aca2 ; call rdi
0x0000000000402439 : add byte ptr es:[rax], al ; add byte ptr [rax + 0x63], cl ; add al, 0x25 ; pushfq ; ret 0x60
0x0000000000401cdc : add dl, 0x60 ; add byte ptr [rax - 0x75], cl ; xor al, 0x25 ; nop ; ret 0x60
0x0000000000402585 : add dword ptr [rax + 0x6348ff45], ecx ; or al, 0x25 ; pushfq ; ret 0x60
0x0000000000401ee8 : add dword ptr [rax + 0xf], eax ; mov dh, -0x39 ; pop rbp ; ret
0x0000000000403bb6 : add dword ptr [rax], eax ; add al, ch ; ret 1
0x0000000000402076 : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; add al, 0x25 ; pushfq ; ret 0x60
0x00000000004059b8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040759a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000405727 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040201a : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401e9a : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402273 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004020bb : add dword ptr cs:[rax], eax ; add byte ptr [rax + 0x63], cl ; add al, 0x25 ; pushfq ; ret 0x60
0x00000000004016a4 : add eax, 0x20abde ; add ebx, esi ; ret
0x000000000040166b : add eax, edx ; sar rax, 1 ; jne 0x40167c ; pop rbp ; ret
0x00000000004016a9 : add ebx, esi ; ret
0x000000000040195b : add esp, 0x10 ; pop rbp ; ret
0x000000000040852c : add esp, 0x130 ; pop rbp ; ret
0x0000000000405724 : add esp, 0x138 ; pop rbx ; pop rbp ; ret
0x000000000040788c : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000401e9f : add esp, 0x20 ; pop rbp ; ret
0x000000000040346e : add esp, 0x210 ; pop rbp ; ret
0x0000000000401a3d : add esp, 0x30 ; pop rbp ; ret
0x0000000000405d9c : add esp, 0x50 ; pop rbp ; ret
0x0000000000404833 : add esp, 0x70 ; pop rbp ; ret
0x00000000004058de : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000405cad : add esp, 0x90 ; pop rbp ; ret
0x0000000000407724 : add esp, 0xa0 ; pop rbp ; ret
0x0000000000404001 : add esp, 0xc0 ; pop rbp ; ret
0x0000000000403d70 : add esp, 0xe0 ; pop rbp ; ret
0x0000000000401236 : add esp, 8 ; ret
0x000000000040ac94 : add r8b, byte ptr [rax] ; add al, bl ; jnp 0x40aca1 ; call rdi
0x000000000040166a : add rax, rdx ; sar rax, 1 ; jne 0x40167d ; pop rbp ; ret
0x000000000040195a : add rsp, 0x10 ; pop rbp ; ret
0x000000000040852b : add rsp, 0x130 ; pop rbp ; ret
0x0000000000405723 : add rsp, 0x138 ; pop rbx ; pop rbp ; ret
0x000000000040788b : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000401e9e : add rsp, 0x20 ; pop rbp ; ret
0x000000000040346d : add rsp, 0x210 ; pop rbp ; ret
0x0000000000401a3c : add rsp, 0x30 ; pop rbp ; ret
0x0000000000405d9b : add rsp, 0x50 ; pop rbp ; ret
0x0000000000404832 : add rsp, 0x70 ; pop rbp ; ret
0x00000000004058dd : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000405cac : add rsp, 0x90 ; pop rbp ; ret
0x0000000000407723 : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000404000 : add rsp, 0xc0 ; pop rbp ; ret
0x0000000000403d6f : add rsp, 0xe0 ; pop rbp ; ret
0x0000000000401235 : add rsp, 8 ; ret
0x0000000000406fdc : addps xmm1, xmm2 ; movaps xmm0, xmm1 ; pop rbp ; ret
0x0000000000406fdb : addsd xmm1, xmm2 ; movaps xmm0, xmm1 ; pop rbp ; ret
0x0000000000402272 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401ee6 : and bh, 1 ; movzx eax, dil ; pop rbp ; ret
0x00000000004016a7 : and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000401ee5 : and dil, 1 ; movzx eax, dil ; pop rbp ; ret
0x0000000000405ce7 : and eax, 0x48fffffd ; add esp, 0x20 ; pop rbp ; ret
0x0000000000401cb9 : and eax, 0x60c200 ; pop rbp ; ret
0x0000000000403d9d : and eax, 0x60c29c ; pop rbp ; ret
0x000000000040401f : and eax, 0x60c2a0 ; pop rbp ; ret
0x0000000000404043 : and eax, 0x60c2a8 ; pop rbp ; ret
0x000000000040511c : call 0x401332
0x00000000004050f6 : call 0x4013b2
0x0000000000405319 : call 0x4015c2
0x00000000004052da : call 0x4015d2
0x0000000000404979 : call 0x4061e9
0x0000000000404374 : call 0x4902ccc4
0x0000000000404373 : call 0x4902ccc5
0x0000000000404374 : call 0x4902ccc7
0x0000000000404373 : call 0x4902ccc8
0x000000000040b758 : call 0xffffffffe140b72d
0x0000000000405759 : call 0xffffffffe902e0a9
0x0000000000405758 : call 0xffffffffe902e0aa
0x0000000000408c49 : call qword ptr [r12 + rbx*8]
0x000000000040ad5b : call qword ptr [rax]
0x000000000040b2bb : call qword ptr [rdx]
0x000000000040ad9b : call qword ptr [rsi]
0x0000000000408c4a : call qword ptr [rsp + rbx*8]
0x00000000004016cd : call rax
0x000000000040ac9b : call rdi
0x000000000040afbb : call rdx
0x000000000040852a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x0000000000407a8f : clc ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004062e1 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040166f : clc ; jne 0x401678 ; pop rbp ; ret
0x0000000000403f66 : clc ; mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x00000000004046e5 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000408b9b : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004062fb : clc ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000040633b : clc ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000040631b : clc ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000406361 : clc ; pop rbp ; ret
0x0000000000406e9c : cld ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000408676 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407efb : cld ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407e40 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406c5c : cld ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401cb6 : cld ; mov dword ptr [0x60c200], eax ; pop rbp ; ret
0x0000000000408b98 : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000408673 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408616 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407e3d : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406c59 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000406ea3 : cld ; pop rbp ; ret
0x00000000004025c2 : cli ; idiv bh ; dec dword ptr [rax + 0x63] ; add al, 0x25 ; pushfq ; ret 0x60
0x0000000000401c3d : cmp al, 0x25 ; cwde ; ret 0x60
0x0000000000402d44 : cmp al, 0x25 ; nop ; ret 0x60
0x0000000000401c36 : cmp al, 0x25 ; pushfq ; ret 0x60
0x0000000000404980 : cmp al, 0x25 ; ret 0x409a
0x0000000000405726 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000402243 : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040339a : cmp eax, 0x8bfffffe ; add al, 0x25 ; pushfq ; ret 0x60
0x000000000040162d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401640 ; pop rbp ; ret
0x0000000000401231 : cmp eax, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000401dec : cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; add al, 0x25 ; pushfq ; ret 0x60
0x000000000040acb8 : cwde ; jge 0x40acbd ; jmp qword ptr [rsi]
0x00000000004070dc : cwde ; mov rcx, qword ptr [rax*8 + 0x40a258] ; jmp rcx
0x0000000000401bf0 : cwde ; ret 0x60
0x0000000000402587 : dec dword ptr [r8 + 0x63] ; or al, 0x25 ; pushfq ; ret 0x60
0x00000000004024a4 : dec dword ptr [rax + 0x63] ; add al, 0x25 ; pushfq ; ret 0x60
0x0000000000401c55 : dec dword ptr [rax + 0x63] ; cmp al, 0x25 ; pushfq ; ret 0x60
0x0000000000402588 : dec dword ptr [rax + 0x63] ; or al, 0x25 ; pushfq ; ret 0x60
0x000000000040848f : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000040580b : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000406f9f : enter 0x4d89, -0x14 ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000040ac98 : fdivr dword ptr [rbx - 1] ; call rdi
0x000000000040a945 : fdivr st(7) ; jmp rax
0x00000000004016a5 : fisubr word ptr [rbx - 0xcfeffe0] ; ret
0x0000000000405143 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000408c4c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000401959 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401640 : hlt ; pop rbp ; mov edi, 0x60c260 ; jmp rax
0x00000000004025c3 : idiv bh ; dec dword ptr [rax + 0x63] ; add al, 0x25 ; pushfq ; ret 0x60
0x0000000000401c53 : idiv edi ; dec dword ptr [rax + 0x63] ; cmp al, 0x25 ; pushfq ; ret 0x60
0x000000000040a9d5 : in al, -1 ; jmp qword ptr [rax]
0x0000000000401ef6 : in al, dx ; adc byte ptr [rax + 0x63], cl ; add al, 0x25 ; pushfq ; ret 0x60
0x0000000000401da6 : in al, dx ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; add al, 0x25 ; pushfq ; ret 0x60
0x0000000000406fa2 : in al, dx ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000406fa5 : in al, dx ; pop rbp ; ret
0x0000000000401eb3 : in eax, -0x75 ; add al, 0x25 ; pushfq ; ret 0x60
0x000000000040a78f : inc dword ptr [rax] ; or al, byte ptr [rax] ; add al, dh ; mov dh, -1 ; jmp qword ptr [rax]
0x000000000040a97f : inc eax ; adc dword ptr [rax], eax ; add al, al ; loope 0x40a98e ; jmp rax
0x000000000040a77f : inc eax ; or dword ptr [rax], eax ; add byte ptr [rax], al ; mov ah, -1 ; jmp rax
0x0000000000402661 : insb byte ptr [rdi], dx ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; add al, 0x25 ; pushfq ; ret 0x60
0x00000000004076e0 : int 0x80
0x00000000004052db : int1 ; ret 0xffff
0x0000000000401633 : ja 0x40163a ; pop rbp ; ret
0x000000000040a655 : jbe 0x40a658 ; jmp qword ptr [rax]
0x000000000040163f : je 0x40163d ; pop rbp ; mov edi, 0x60c260 ; jmp rax
0x000000000040a645 : je 0x40a648 ; jmp rax
0x000000000040a644 : je 0x40a649 ; jmp rax
0x000000000040abb9 : je 0x40abbc ; call rax
0x000000000040511a : jge 0x4050f8 ; call 0x401334
0x00000000004062fa : jge 0x4062fb ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000040631a : jge 0x40631b ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000040633a : jge 0x40633b ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000406360 : jge 0x40635d ; pop rbp ; ret
0x000000000040acb9 : jge 0x40acbc ; jmp qword ptr [rsi]
0x000000000040a685 : jl 0x40a688 ; jmp rax
0x000000000040a684 : jl 0x40a689 ; jmp rax
0x000000000040a695 : jl 0x40a698 ; jmp qword ptr [rax]
0x000000000040144b : jmp 0x401247
0x0000000000403bb4 : jmp 0x403d6d
0x0000000000404a64 : jmp 0x404a72
0x000000000040a657 : jmp qword ptr [rax]
0x000000000040b03b : jmp qword ptr [rdx]
0x000000000040acbb : jmp qword ptr [rsi]
0x0000000000401647 : jmp rax
0x0000000000401d7b : jmp rcx
0x0000000000401687 : jmp rdx
0x0000000000401670 : jne 0x401677 ; pop rbp ; ret
0x000000000040ab19 : jno 0x40ab1c ; jmp qword ptr [rax]
0x000000000040ac99 : jnp 0x40ac9c ; call rdi
0x0000000000404835 : jo 0x404896 ; ret
0x0000000000405f44 : jo 0x405fa5 ; ret
0x000000000040607e : jo 0x4060df ; ret
0x000000000040631f : jo 0x406380 ; ret
0x000000000040631e : jo 0x406381 ; ret
0x000000000040a9c5 : jrcxz 0x40a9c8 ; jmp rax
0x00000000004058e0 : js 0x405940 ; pop rbp ; ret
0x0000000000402df9 : lahf ; ret 0xe280
0x0000000000403548 : lea eax, dword ptr [rax] ; jmp rcx
0x0000000000402d5e : lea ecx, dword ptr [rbx - 0x74000002] ; add al, 0x25 ; pushfq ; ret 0x60
0x0000000000405313 : lea edi, dword ptr [rbp - 0x90] ; call 0x4015c8
0x0000000000405312 : lea rdi, qword ptr [rbp - 0x90] ; call 0x4015c9
0x000000000040a995 : loop 0x40a998 ; jmp qword ptr [rax]
0x000000000040a985 : loope 0x40a988 ; jmp rax
0x0000000000403d72 : loopne 0x403d79 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040a785 : mov ah, -1 ; jmp rax
0x000000000040b2b9 : mov al, -1 ; call qword ptr [rdx]
0x0000000000405e1b : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000405cab : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x00000000004034ea : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004087c6 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000404041 : mov byte ptr [0x60c2a8], al ; pop rbp ; ret
0x0000000000403bb1 : mov byte ptr [rbp - 1], al ; jmp 0x403d70
0x0000000000403f67 : mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x000000000040ab18 : mov byte ptr [rcx - 1], dh ; jmp qword ptr [rax]
0x00000000004016a3 : mov byte ptr [rip + 0x20abde], 1 ; ret
0x000000000040aad8 : mov byte ptr [rsi - 1], ch ; jmp rdx
0x0000000000406f9e : mov dh, -0x38 ; mov dword ptr [rbp - 0x14], ecx ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000401eeb : mov dh, -0x39 ; pop rbp ; ret
0x000000000040201c : mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401e9c : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402275 : mov dh, -0x40 ; pop rbp ; ret
0x000000000040a795 : mov dh, -1 ; jmp qword ptr [rax]
0x000000000040a6c5 : mov dr1, edi ; jmp rax
0x0000000000401cb7 : mov dword ptr [0x60c200], eax ; pop rbp ; ret
0x0000000000403d9b : mov dword ptr [0x60c29c], edi ; pop rbp ; ret
0x000000000040401d : mov dword ptr [0x60c2a0], edi ; pop rbp ; ret
0x00000000004046e6 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004045f4 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004046a8 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000406fa0 : mov dword ptr [rbp - 0x14], ecx ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000406f3a : mov dword ptr [rbp - 0x24], eax ; mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x0000000000401a39 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401957 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408b99 : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040635f : mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x000000000040475e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402218 : mov dword ptr [rcx], 0x89000000 ; cmp al, 0x25 ; pushfq ; ret 0x60
0x00000000004058dc : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x00000000004045a8 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004079ab : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040426c : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004045a5 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000406381 : mov eax, dword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004041ef : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000406fa3 : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000407c43 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403f24 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004045ee : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004043bb : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000406f3d : mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x00000000004046aa : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040482f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004058da : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000405e19 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000408674 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407ef9 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407e3e : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406c5a : mov eax, dword ptr [rbp - 4] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000406ea1 : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000407a8d : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004062df : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000408b9c : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004062fd : mov eax, dword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000040633d : mov eax, dword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000040631d : mov eax, dword ptr [rdi + 0x70] ; pop rbp ; ret
0x00000000004052d5 : mov ebp, 0xffffff6c ; call 0x4015d7
0x0000000000405314 : mov ebp, 0xffffff70 ; call 0x4015c7
0x00000000004016cb : mov ebp, esp ; call rax
0x0000000000401631 : mov ebp, esp ; ja 0x40163c ; pop rbp ; ret
0x0000000000401d74 : mov ecx, dword ptr [rax*8 + 0x408cd8] ; jmp rcx
0x0000000000403544 : mov ecx, dword ptr [rax*8 + 0x408d00] ; jmp rcx
0x00000000004048e7 : mov ecx, dword ptr [rax*8 + 0x409d50] ; jmp rcx
0x0000000000404bc7 : mov ecx, dword ptr [rax*8 + 0x409d98] ; jmp rcx
0x00000000004070de : mov ecx, dword ptr [rax*8 + 0x40a258] ; jmp rcx
0x00000000004045f1 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004016c5 : mov edi, 0x60be20 ; mov rbp, rsp ; call rax
0x0000000000401642 : mov edi, 0x60c260 ; jmp rax
0x0000000000401682 : mov edi, 0x60c260 ; jmp rdx
0x0000000000405119 : mov edi, dword ptr [rbp - 0x28] ; call 0x401335
0x00000000004052d4 : mov edi, dword ptr [rbp - 0x94] ; call 0x4015d8
0x00000000004062f9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000406339 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000406319 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x00000000004050f4 : mov edi, eax ; call 0x4013b4
0x0000000000408c47 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000408c46 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000406385 : mov edx, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000401680 : mov esi, eax ; mov edi, 0x60c260 ; jmp rdx
0x000000000040401c : mov qword ptr [0x60c2a0], rdi ; pop rbp ; ret
0x000000000040635e : mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000040475d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405e1a : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004058db : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x00000000004079aa : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040426b : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004045a4 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000406380 : mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004041ee : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000407c42 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403f23 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004043ba : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040482e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000405e18 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000407a8c : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004062de : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004062fc : mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000040633c : mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000040631c : mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x00000000004016ca : mov rbp, rsp ; call rax
0x0000000000401630 : mov rbp, rsp ; ja 0x40163d ; pop rbp ; ret
0x0000000000401d73 : mov rcx, qword ptr [rax*8 + 0x408cd8] ; jmp rcx
0x0000000000403543 : mov rcx, qword ptr [rax*8 + 0x408d00] ; jmp rcx
0x00000000004048e6 : mov rcx, qword ptr [rax*8 + 0x409d50] ; jmp rcx
0x0000000000404bc6 : mov rcx, qword ptr [rax*8 + 0x409d98] ; jmp rcx
0x00000000004070dd : mov rcx, qword ptr [rax*8 + 0x40a258] ; jmp rcx
0x0000000000405118 : mov rdi, qword ptr [rbp - 0x28] ; call 0x401336
0x00000000004062f8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000406338 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000406318 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x00000000004050f3 : mov rdi, rax ; call 0x4013b5
0x0000000000406384 : mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040167f : mov rsi, rax ; mov edi, 0x60c260 ; jmp rdx
0x0000000000401d78 : mov word ptr [rax], es ; jmp rcx
0x0000000000406fdf : movaps xmm0, xmm1 ; pop rbp ; ret
0x000000000040b4f4 : movsb byte ptr [rdi], byte ptr [rsi] ; or al, byte ptr [rax] ; add byte ptr [rax], bh ; ret 0xffff
0x000000000040b2f4 : movsb byte ptr [rdi], byte ptr [rsi] ; or byte ptr [rax], al ; add byte ptr [rax], bh ; mov al, -1 ; call qword ptr [rdx]
0x000000000040201b : movzx eax, al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401e9b : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402274 : movzx eax, al ; pop rbp ; ret
0x0000000000401eea : movzx eax, bh ; pop rbp ; ret
0x0000000000403f6a : movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000401ee9 : movzx eax, dil ; pop rbp ; ret
0x0000000000401ad1 : nop ; ret 0x60
0x0000000000408c68 : nop dword ptr [rax + rax] ; ret
0x0000000000402296 : or al, 0x25 ; cwde ; ret 0x60
0x0000000000401c60 : or al, 0x25 ; nop ; ret 0x60
0x0000000000401ec4 : or al, 0x25 ; pushfq ; ret 0x60
0x00000000004062c4 : or al, 0x25 ; ret 0x409a
0x000000000040b535 : or al, byte ptr [rax] ; add al, ch ; ret
0x000000000040a791 : or al, byte ptr [rax] ; add al, dh ; mov dh, -1 ; jmp qword ptr [rax]
0x0000000000406422 : or al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040b4f5 : or al, byte ptr [rax] ; add byte ptr [rax], bh ; ret 0xffff
0x000000000040513e : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040513f : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040b2b5 : or byte ptr [rax], al ; add byte ptr [rax], bh ; mov al, -1 ; call qword ptr [rdx]
0x0000000000403e50 : or byte ptr [rcx + 0x2df9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000040b2b4 : or byte ptr fs:[rax], al ; add byte ptr [rax], bh ; mov al, -1 ; call qword ptr [rdx]
0x000000000040a781 : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov ah, -1 ; jmp rax
0x0000000000406001 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401ee7 : out 1, eax ; movzx eax, dil ; pop rbp ; ret
0x0000000000408c5c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000408c5e : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040759e : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000408c60 : pop r14 ; pop r15 ; ret
0x00000000004075a0 : pop r15 ; pop rbp ; ret
0x0000000000408c62 : pop r15 ; ret
0x00000000004016a2 : pop rbp ; mov byte ptr [rip + 0x20abde], 1 ; ret
0x0000000000401641 : pop rbp ; mov edi, 0x60c260 ; jmp rax
0x000000000040167e : pop rbp ; mov rsi, rax ; mov edi, 0x60c260 ; jmp rdx
0x0000000000408c5b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000408c5f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401635 : pop rbp ; ret
0x000000000040759d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040572a : pop rbx ; pop rbp ; ret
0x00000000004075a1 : pop rdi ; pop rbp ; ret
0x0000000000408c63 : pop rdi ; ret
0x000000000040759f : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000408c61 : pop rsi ; pop r15 ; ret
0x0000000000408c5d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040355e : push -0x74000001 ; add al, 0x25 ; pushfq ; ret 0x60
0x0000000000402510 : push -0x75000000 ; add al, 0x25 ; pushfq ; ret 0x60
0x00000000004062fe : push r8 ; pop rbp ; ret
0x0000000000405d9e : push rax ; pop rbp ; ret
0x0000000000406386 : push rbp ; clc ; pop rbp ; ret
0x0000000000405142 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x00000000004016c4 : push rbp ; mov edi, 0x60be20 ; mov rbp, rsp ; call rax
0x000000000040811d : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000040580e : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000401bf7 : pushfq ; ret 0x60
0x000000000040a980 : rcl byte ptr [rcx], 0 ; add al, al ; loope 0x40a98d ; jmp rax
0x0000000000400029 : ret
0x0000000000400638 : ret 0
0x0000000000406919 : ret 0x1a8
0x0000000000401452 : ret 0x20ac
0x0000000000401242 : ret 0x20ad
0x0000000000404369 : ret 0x30
0x0000000000404982 : ret 0x409a
0x0000000000406916 : ret 0x458a
0x00000000004037da : ret 0x54
0x0000000000400869 : ret 0x60
0x0000000000404377 : ret 0x8148
0x0000000000406903 : ret 0x840f
0x0000000000402e00 : ret 0x8589
0x0000000000407099 : ret 0x8844
0x0000000000407b12 : ret 0x8948
0x000000000040526d : ret 0x89a5
0x0000000000403522 : ret 0x89b9
0x0000000000403378 : ret 0x8b48
0x0000000000403ce3 : ret 0x9588
0x000000000040515b : ret 0xafe8
0x0000000000401665 : ret 0xc148
0x000000000040641e : ret 0xc189
0x00000000004062d3 : ret 0xd284
0x0000000000402dfa : ret 0xe280
0x000000000040575c : ret 0xee8
0x000000000040437a : ret 0xffff
0x0000000000403bba : ret 1
0x0000000000403371 : ret 2
0x0000000000405812 : ret 8
0x000000000040a640 : rol byte ptr [rax + rax], 0 ; je 0x40a64d ; jmp rax
0x000000000040a680 : rol byte ptr [rip + 0x7c400000], -1 ; jmp rax
0x000000000040a6c0 : rol byte ptr [rsi], 0 ; add al, dh ; mov dr1, edi ; jmp rax
0x00000000004076db : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000404830 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x40489b ; ret
0x000000000040166c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40167b ; pop rbp ; ret
0x0000000000401ecc : ror byte ptr [rax - 0x75], 1 ; xor al, 0x25 ; nop ; ret 0x60
0x00000000004076dc : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000404831 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x40489a ; ret
0x000000000040346c : ror byte ptr [rax - 0x7f], -0x3c ; adc byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000403d6e : ror byte ptr [rax - 0x7f], -0x3c ; loopne 0x403d7d ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040811e : ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000040580f : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000040a780 : ror byte ptr [rcx], 0 ; add byte ptr [rax], al ; mov ah, -1 ; jmp rax
0x000000000040a880 : ror byte ptr [rip - 0x39a00000], -1 ; jmp rax
0x000000000040a8c0 : ror byte ptr [rsi], 0 ; add byte ptr [rax], ah ; sar edi, 1 ; jmp rax
0x0000000000402df7 : ror dword ptr [rdi], -0x61 ; ret 0xe280
0x0000000000406fda : sal dl, 1 ; addps xmm1, xmm2 ; movaps xmm0, xmm1 ; pop rbp ; ret
0x000000000040ba31 : sar bh, cl ; call qword ptr [rax]
0x000000000040166e : sar eax, 1 ; jne 0x401679 ; pop rbp ; ret
0x000000000040a8c5 : sar edi, 1 ; jmp rax
0x000000000040a8d5 : sar edi, cl ; jmp qword ptr [rax]
0x000000000040166d : sar rax, 1 ; jne 0x40167a ; pop rbp ; ret
0x000000000040b4f0 : sbb al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; or al, byte ptr [rax] ; add byte ptr [rax], bh ; ret 0xffff
0x000000000040497b : sbb byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x409a
0x0000000000403bb5 : scasb al, byte ptr [rdi] ; add dword ptr [rax], eax ; add al, ch ; ret 1
0x000000000040a984 : shl cl, -1 ; jmp rax
0x0000000000403e52 : stc ; sub eax, 0xf000000 ; xchg eax, esp ; ret 0xe280
0x00000000004087c8 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401f5d : stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; add al, 0x25 ; pushfq ; ret 0x60
0x00000000004016a6 : stosd dword ptr [rdi], eax ; and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000406fe0 : sub cl, al ; pop rbp ; ret
0x0000000000403e53 : sub eax, 0xf000000 ; xchg eax, esp ; ret 0xe280
0x0000000000408cc1 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000408cc0 : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000408c6a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040aad4 : test byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rsi - 1], ch ; jmp rdx
0x0000000000403399 : test dword ptr [rip - 0x74000002], edi ; add al, 0x25 ; pushfq ; ret 0x60
0x000000000040213b : test eax, 0x8b000000 ; add al, 0x25 ; pushfq ; ret 0x60
0x0000000000403ce2 : xchg eax, ebp ; ret 0x9588
0x00000000004065c7 : xchg eax, esi ; ret 0xe280
0x00000000004062d2 : xchg eax, esp ; ret 0xd284
0x0000000000403e58 : xchg eax, esp ; ret 0xe280
0x0000000000401acf : xor al, 0x25 ; nop ; ret 0x60
0x00000000004062be : xor al, 0xffffffffffffffa2 ; add byte ptr [rax - 0x73], cl ; or al, 0x25 ; ret 0x409a
0x000000000040852e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004046a6 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
