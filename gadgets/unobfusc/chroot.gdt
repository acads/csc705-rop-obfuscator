0x0000000000405378 : adc byte ptr [rcx + 0x7fe8984d], cl ; ret 0xffff
0x00000000004044d9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402c62 : add al, 0x25 ; push 0x5d0060b3 ; ret
0x00000000004093b7 : add al, bh ; mov bh, bh ; jmp rdx
0x0000000000409997 : add al, bh ; mov dl, -1 ; jmp qword ptr [rdx]
0x00000000004054a2 : add al, ch ; clc ; ret
0x000000000040562e : add al, ch ; insb byte ptr [rdi], dx ; ret 0xffff
0x0000000000409877 : add al, ch ; mov cl, -1 ; jmp qword ptr [rax]
0x0000000000405550 : add al, ch ; ret
0x0000000000409b17 : add al, ch ; ret 0xffff
0x0000000000409dd7 : add al, cl ; fdivr st(7) ; jmp rax
0x0000000000407faf : add bl, dh ; ret
0x000000000040260d : add byte ptr [rax - 0x73], cl ; or al, 0x25 ; ret
0x0000000000405402 : add byte ptr [rax - 0x75], cl ; jge 0x4053be ; call 0x401627
0x0000000000405b18 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x00000000004093b5 : add byte ptr [rax], al ; add al, bh ; mov bh, bh ; jmp rdx
0x0000000000407fad : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040260b : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; or al, 0x25 ; ret
0x0000000000405400 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jge 0x4053c0 ; call 0x401629
0x0000000000407fab : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000406849 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000406bf6 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000407fac : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040247c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf280
0x0000000000404dae : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040449a : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404240 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004015db : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000409876 : add byte ptr [rax], al ; call 0x21409833
0x00000000004093b6 : add byte ptr [rax], al ; clc ; mov bh, bh ; jmp rdx
0x0000000000409996 : add byte ptr [rax], al ; clc ; mov dl, -1 ; jmp qword ptr [rdx]
0x0000000000401699 : add byte ptr [rax], al ; jmp 0x4015f9
0x000000000040684b : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000403082 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000406bf8 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000405401 : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x50] ; call 0x401628
0x0000000000409dd2 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; or al, byte ptr [rax] ; add al, cl ; fdivr st(7) ; jmp rax
0x00000000004028cf : add byte ptr [rax], al ; pop rbp ; ret
0x00000000004059db : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000404208 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000407fae : add byte ptr [rax], al ; ret
0x00000000004093b2 : add byte ptr [rax], al ; test byte ptr [rax], al ; add byte ptr [rax], al ; clc ; mov bh, bh ; jmp rdx
0x0000000000409a17 : add byte ptr [rax], bh ; mov ch, -1 ; call rdi
0x0000000000409b37 : add byte ptr [rax], bl ; ret
0x0000000000409ab7 : add byte ptr [rax], ch ; ret 0xffff
0x0000000000409873 : add byte ptr [rbp + rax], al ; add al, ch ; mov cl, -1 ; jmp qword ptr [rax]
0x00000000004059dc : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000404209 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040222a : add byte ptr [rbx - 0xd34b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000402578 : add byte ptr [rbx - 0xf34b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004026a0 : add byte ptr [rbx - 0xfb4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004026f2 : add byte ptr [rbx - 0xff4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004054e6 : add byte ptr [rcx - 0x5bba7631], cl ; call 0x401768
0x00000000004054e5 : add byte ptr [rcx - 0x5bba7631], cl ; call 0x401769
0x0000000000401b38 : add byte ptr [rcx], al ; ret
0x000000000040247e : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf280
0x0000000000404db0 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000409993 : add byte ptr [rsi + rax], ah ; add al, bh ; mov dl, -1 ; jmp qword ptr [rdx]
0x0000000000404498 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004059da : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000404207 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004028f2 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401b34 : add eax, 0x20981e ; add ebx, esi ; ret
0x0000000000402d57 : add eax, 0x48ffffe9 ; add esp, 0x10 ; pop rbp ; ret
0x0000000000401afb : add eax, edx ; sar rax, 1 ; jne 0x401b0c ; pop rbp ; ret
0x0000000000401b39 : add ebx, esi ; ret
0x0000000000401cab : add esp, 0x10 ; pop rbp ; ret
0x000000000040721c : add esp, 0x130 ; pop rbp ; ret
0x0000000000404204 : add esp, 0x138 ; pop rbx ; pop rbp ; ret
0x0000000000405ccc : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000402e90 : add esp, 0x20 ; pop rbp ; ret
0x0000000000401d8d : add esp, 0x30 ; pop rbp ; ret
0x0000000000407f2d : add esp, 0x40 ; pop rbp ; ret
0x000000000040487c : add esp, 0x50 ; pop rbp ; ret
0x0000000000403313 : add esp, 0x70 ; pop rbp ; ret
0x00000000004043be : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000402bfb : add esp, 0x80 ; pop rbp ; ret
0x000000000040478d : add esp, 0x90 ; pop rbp ; ret
0x0000000000404e38 : add esp, 0xa0 ; pop rbp ; ret
0x00000000004028cb : add esp, 0xd0 ; pop rbp ; ret
0x000000000040541f : add esp, 0xe0 ; pop rbp ; ret
0x00000000004015de : add esp, 8 ; ret
0x0000000000401afa : add rax, rdx ; sar rax, 1 ; jne 0x401b0d ; pop rbp ; ret
0x0000000000401caa : add rsp, 0x10 ; pop rbp ; ret
0x000000000040721b : add rsp, 0x130 ; pop rbp ; ret
0x0000000000404203 : add rsp, 0x138 ; pop rbx ; pop rbp ; ret
0x0000000000405ccb : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000402e8f : add rsp, 0x20 ; pop rbp ; ret
0x0000000000401d8c : add rsp, 0x30 ; pop rbp ; ret
0x0000000000407f2c : add rsp, 0x40 ; pop rbp ; ret
0x000000000040487b : add rsp, 0x50 ; pop rbp ; ret
0x0000000000403312 : add rsp, 0x70 ; pop rbp ; ret
0x00000000004043bd : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000402bfa : add rsp, 0x80 ; pop rbp ; ret
0x000000000040478c : add rsp, 0x90 ; pop rbp ; ret
0x0000000000404e37 : add rsp, 0xa0 ; pop rbp ; ret
0x00000000004028ca : add rsp, 0xd0 ; pop rbp ; ret
0x000000000040541e : add rsp, 0xe0 ; pop rbp ; ret
0x00000000004015dd : add rsp, 8 ; ret
0x00000000004028f1 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401b37 : and byte ptr [rax], al ; add ebx, esi ; ret
0x00000000004047c7 : and eax, 0x48fffffd ; add esp, 0x20 ; pop rbp ; ret
0x00000000004027b9 : and eax, 0x60b270 ; pop rbp ; ret
0x0000000000402c3f : and eax, 0x60b360 ; pop rbp ; ret
0x0000000000402c63 : and eax, 0x60b368 ; pop rbp ; ret
0x0000000000409878 : call 0x21409831
0x000000000040537c : call 0x401602
0x0000000000405407 : call 0x401622
0x0000000000405527 : call 0x401639
0x00000000004054bd : call 0x401762
0x00000000004055dc : call 0x4018a2
0x0000000000406bb4 : call 0x4902f504
0x0000000000406bb3 : call 0x4902f505
0x0000000000406bb4 : call 0x4902f507
0x0000000000406bb3 : call 0x4902f508
0x0000000000404239 : call 0xffffffffe902cb89
0x0000000000404238 : call 0xffffffffe902cb8a
0x0000000000401ad3 : call 0xffffffffff407b8e
0x0000000000401b13 : call 0xffffffffff407bce
0x0000000000407f89 : call qword ptr [r12 + rbx*8]
0x00000000004094bb : call qword ptr [rax]
0x000000000040941b : call qword ptr [rbx]
0x00000000004094db : call qword ptr [rsi]
0x0000000000407f8a : call qword ptr [rsp + rbx*8]
0x0000000000401b5d : call rax
0x0000000000409a1b : call rdi
0x00000000004096db : call rdx
0x000000000040537a : cdqe ; call 0x401604
0x000000000040721a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x0000000000405ecf : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404dc1 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404e36 : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x0000000000401aff : clc ; jne 0x401b08 ; pop rbp ; ret
0x00000000004093b8 : clc ; mov bh, bh ; jmp rdx
0x0000000000402c26 : clc ; mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000409998 : clc ; mov dl, -1 ; jmp qword ptr [rdx]
0x00000000004031c5 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000407cfb : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402c17 : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402c1b : clc ; pop rbp ; ret
0x00000000004054a4 : clc ; ret
0x0000000000406848 : cld ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004077d6 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406aab : cld ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004069f0 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040761d : cld ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004067dd : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x00000000004027b6 : cld ; mov dword ptr [0x60b270], eax ; pop rbp ; ret
0x0000000000407cf8 : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004077d3 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407776 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004069ed : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040761a : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040684f : cld ; pop rbp ; ret
0x000000000040552e : cmp al, 0x25 ; ret 0x408b
0x0000000000404206 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000401abd : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401ad0 ; pop rbp ; ret
0x0000000000401b36 : cwde ; and byte ptr [rax], al ; add ebx, esi ; ret
0x000000000040537b : cwde ; call 0x401603
0x000000000040551c : cwde ; mov rcx, qword ptr [rax*8 + 0x408a90] ; jmp rcx
0x000000000040552b : dec dword ptr [rax - 0x73] ; cmp al, 0x25 ; ret 0x408b
0x000000000040540b : dec dword ptr [rax - 0x75] ; jge 0x4053b7 ; call 0x401627
0x00000000004021e9 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040717f : dec dword ptr [rax - 0x7f] ; ret 1
0x00000000004042eb : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000404f40 : enter -0x7cb8, -0x3c ; push rax ; pop rbp ; ret
0x00000000004054a0 : enter 0xb0, -0x18 ; clc ; ret
0x0000000000409dd9 : fdivr st(7) ; jmp rax
0x0000000000403c23 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000407f8c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000401ca9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401ad0 : hlt ; pop rbp ; mov edi, 0x60b2e8 ; jmp rax
0x000000000040619b : in al, 0x48 ; add esp, 0x20 ; pop rbp ; ret
0x00000000004068ad : in al, dx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405630 : insb byte ptr [rdi], dx ; ret 0xffff
0x0000000000405b20 : int 0x80
0x00000000004054bc : iretd ; call 0x401763
0x00000000004054e8 : iretd ; mov dword ptr [rbp - 0x5c], eax ; call 0x401766
0x0000000000401ac3 : ja 0x401aca ; pop rbp ; ret
0x0000000000401acf : je 0x401acd ; pop rbp ; mov edi, 0x60b2e8 ; jmp rax
0x0000000000402c16 : jge 0x402c17 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040540e : jge 0x4053b4 ; call 0x401624
0x0000000000405405 : jge 0x4053bb ; call 0x401624
0x00000000004054b8 : jge 0x405469 ; mov rdi, rcx ; call 0x401767
0x000000000040169b : jmp 0x4015f7
0x0000000000402d58 : jmp 0xffffffff83892d64
0x00000000004093fb : jmp qword ptr [rax]
0x000000000040975b : jmp qword ptr [rdx]
0x0000000000401ad7 : jmp rax
0x000000000040947b : jmp rbx
0x00000000004033ce : jmp rcx
0x0000000000401b17 : jmp rdx
0x0000000000401b00 : jne 0x401b07 ; pop rbp ; ret
0x0000000000403315 : jo 0x403376 ; ret
0x0000000000404a24 : jo 0x404a85 ; ret
0x0000000000404b5e : jo 0x404bbf ; ret
0x0000000000407621 : jo 0x407682 ; ret
0x00000000004043c0 : js 0x404420 ; pop rbp ; ret
0x0000000000405421 : loopne 0x405428 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000405537 : loopne 0x405588 ; mov dword ptr [rbp - 0x78], eax ; call 0x401767
0x0000000000405536 : loopne 0x405589 ; mov dword ptr [rbp - 0x78], eax ; call 0x401768
0x00000000004067e1 : loopne 0x4067e8 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000407f2b : loopne 0x407f7b ; add esp, 0x40 ; pop rbp ; ret
0x0000000000407f2a : loopne 0x407f7c ; add esp, 0x40 ; pop rbp ; ret
0x0000000000402bf9 : mov ah, 0x48 ; add esp, 0x80 ; pop rbp ; ret
0x00000000004075e0 : mov al, -0x75 ; or byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; ret 0x8148
0x0000000000409759 : mov al, -1 ; jmp qword ptr [rdx]
0x00000000004055da : mov al, 0 ; call 0x4018a4
0x00000000004048fb : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040478b : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000405522 : mov al, byte ptr [rax] ; jmp rcx
0x0000000000407926 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004093b9 : mov bh, bh ; jmp rdx
0x0000000000402c61 : mov byte ptr [0x60b368], al ; pop rbp ; ret
0x0000000000402c27 : mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000401b33 : mov byte ptr [rip + 0x20981e], 1 ; ret
0x0000000000409a19 : mov ch, -1 ; call rdi
0x0000000000409879 : mov cl, -1 ; jmp qword ptr [rax]
0x00000000004028f4 : mov dh, -0x40 ; pop rbp ; ret
0x0000000000409999 : mov dl, -1 ; jmp qword ptr [rdx]
0x00000000004027b7 : mov dword ptr [0x60b270], eax ; pop rbp ; ret
0x0000000000402c3d : mov dword ptr [0x60b360], edi ; pop rbp ; ret
0x00000000004031c6 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004030d4 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000403188 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000401d89 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004054b7 : mov dword ptr [rbp - 0x58], edi ; mov rdi, rcx ; call 0x401768
0x00000000004054e9 : mov dword ptr [rbp - 0x5c], eax ; call 0x401765
0x0000000000405379 : mov dword ptr [rbp - 0x68], ecx ; call 0x401605
0x0000000000405539 : mov dword ptr [rbp - 0x78], eax ; call 0x401765
0x0000000000401ca7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407cf9 : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402c15 : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040323e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004043bc : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000405375 : mov eax, 0x8910488b ; cdqe ; call 0x401609
0x0000000000403088 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000405deb : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402e8c : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403085 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000402e0f : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004068ab : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406083 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040303d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004030ce : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000406bfb : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000406199 : mov eax, dword ptr [rbp - 0x1c] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407f29 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000405535 : mov eax, dword ptr [rbp - 0x20] ; mov qword ptr [rbp - 0x78], rax ; call 0x401769
0x000000000040318a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000404f3e : mov eax, dword ptr [rbp - 0x38] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040330f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004043ba : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004048f9 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004077d4 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406aa9 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004069ee : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040761b : mov eax, dword ptr [rbp - 4] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040684d : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000405ecd : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404dbf : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402c19 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000401b5b : mov ebp, esp ; call rax
0x0000000000401ac1 : mov ebp, esp ; ja 0x401acc ; pop rbp ; ret
0x0000000000405376 : mov ecx, dword ptr [rax + 0x10] ; mov dword ptr [rbp - 0x68], ecx ; call 0x401608
0x00000000004033c7 : mov ecx, dword ptr [rax*8 + 0x408560] ; jmp rcx
0x00000000004036a7 : mov ecx, dword ptr [rax*8 + 0x4085a8] ; jmp rcx
0x000000000040551e : mov ecx, dword ptr [rax*8 + 0x408a90] ; jmp rcx
0x000000000040661d : mov ecx, dword ptr [rax*8 + 0x408e00] ; jmp rcx
0x000000000040659d : mov ecx, dword ptr [rax*8 + 0x408e60] ; jmp rcx
0x00000000004030d1 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401b55 : mov edi, 0x60ae20 ; mov rbp, rsp ; call rax
0x0000000000401ad2 : mov edi, 0x60b2e8 ; jmp rax
0x0000000000401b12 : mov edi, 0x60b2e8 ; jmp rdx
0x0000000000405404 : mov edi, dword ptr [rbp - 0x50] ; call 0x401625
0x000000000040540d : mov edi, dword ptr [rbp - 0x60] ; call 0x401625
0x00000000004054bb : mov edi, ecx ; call 0x401764
0x00000000004054e7 : mov edi, ecx ; mov dword ptr [rbp - 0x5c], eax ; call 0x401767
0x0000000000407f87 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000407f86 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x00000000004065a1 : mov es, word ptr [rax] ; jmp rcx
0x00000000004055d8 : mov esi, eax ; mov al, 0 ; call 0x4018a6
0x0000000000401b10 : mov esi, eax ; mov edi, 0x60b2e8 ; jmp rdx
0x0000000000402c3c : mov qword ptr [0x60b360], rdi ; pop rbp ; ret
0x00000000004054b6 : mov qword ptr [rbp - 0x58], rdi ; mov rdi, rcx ; call 0x401769
0x0000000000405538 : mov qword ptr [rbp - 0x78], rax ; call 0x401766
0x0000000000402c14 : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040323d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004048fa : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004043bb : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000405dea : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402e8b : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403084 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000402e0e : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000406082 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040303c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406bfa : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000404f3d : mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040330e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004048f8 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000405ecc : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404dbe : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402c18 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000401b5a : mov rbp, rsp ; call rax
0x0000000000401ac0 : mov rbp, rsp ; ja 0x401acd ; pop rbp ; ret
0x00000000004033c6 : mov rcx, qword ptr [rax*8 + 0x408560] ; jmp rcx
0x00000000004036a6 : mov rcx, qword ptr [rax*8 + 0x4085a8] ; jmp rcx
0x000000000040551d : mov rcx, qword ptr [rax*8 + 0x408a90] ; jmp rcx
0x000000000040661c : mov rcx, qword ptr [rax*8 + 0x408e00] ; jmp rcx
0x000000000040659c : mov rcx, qword ptr [rax*8 + 0x408e60] ; jmp rcx
0x0000000000405403 : mov rdi, qword ptr [rbp - 0x50] ; call 0x401626
0x000000000040540c : mov rdi, qword ptr [rbp - 0x60] ; call 0x401626
0x00000000004054ba : mov rdi, rcx ; call 0x401765
0x00000000004055d7 : mov rsi, rax ; mov al, 0 ; call 0x4018a7
0x0000000000401b0f : mov rsi, rax ; mov edi, 0x60b2e8 ; jmp rdx
0x0000000000402b32 : movabs al, byte ptr [0x8948c8458b48c189] ; ret 0x8148
0x00000000004054eb : movsb byte ptr [rdi], byte ptr [rsi] ; call 0x401763
0x00000000004054ea : movsb byte ptr [rdi], byte ptr [rsi] ; call 0x401764
0x0000000000409dd4 : movsb byte ptr [rdi], byte ptr [rsi] ; or al, byte ptr [rax] ; add al, cl ; fdivr st(7) ; jmp rax
0x00000000004028f3 : movzx eax, al ; pop rbp ; ret
0x0000000000402c2a : movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000405521 : nop ; mov al, byte ptr [rax] ; jmp rcx
0x0000000000407fa8 : nop dword ptr [rax + rax] ; ret
0x0000000000402610 : or al, 0x25 ; ret
0x000000000040551f : or al, 0xffffffffffffffc5 ; nop ; mov al, byte ptr [rax] ; jmp rcx
0x0000000000409dd5 : or al, byte ptr [rax] ; add al, cl ; fdivr st(7) ; jmp rax
0x0000000000403c1e : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000403c1f : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x00000000004075e2 : or byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; ret 0x8148
0x0000000000409b35 : or byte ptr [rax], al ; add byte ptr [rax], bl ; ret
0x0000000000404ae1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004054ed : outsd dx, dword ptr [rsi] ; ret 0xffff
0x0000000000407f9c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000407f9e : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004059de : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000407fa0 : pop r14 ; pop r15 ; ret
0x00000000004059e0 : pop r15 ; pop rbp ; ret
0x0000000000407fa2 : pop r15 ; ret
0x0000000000401b32 : pop rbp ; mov byte ptr [rip + 0x20981e], 1 ; ret
0x0000000000401ad1 : pop rbp ; mov edi, 0x60b2e8 ; jmp rax
0x0000000000401b0e : pop rbp ; mov rsi, rax ; mov edi, 0x60b2e8 ; jmp rdx
0x0000000000407f9b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000407f9f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401ac5 : pop rbp ; ret
0x00000000004059dd : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040420a : pop rbx ; pop rbp ; ret
0x00000000004059e1 : pop rdi ; pop rbp ; ret
0x0000000000407fa3 : pop rdi ; ret
0x00000000004059df : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000407fa1 : pop rsi ; pop r15 ; ret
0x0000000000407f9d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000402c64 : push 0x5d0060b3 ; ret
0x000000000040487e : push rax ; pop rbp ; ret
0x0000000000403c22 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000401b54 : push rbp ; mov edi, 0x60ae20 ; mov rbp, rsp ; call rax
0x0000000000406e0d : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x00000000004042ee : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x00000000004054f9 : push rbx ; ret
0x00000000004015e1 : ret
0x00000000004018a2 : ret 0x2098
0x00000000004016a2 : ret 0x2099
0x0000000000406ba9 : ret 0x30
0x0000000000405530 : ret 0x408b
0x0000000000403c3b : ret 0x7fe8
0x0000000000402b3b : ret 0x8148
0x00000000004054d9 : ret 0x8844
0x0000000000405f52 : ret 0x8948
0x0000000000403d4d : ret 0x89a5
0x0000000000403c26 : ret 0x8b48
0x000000000040201b : ret 0xb0
0x0000000000401af5 : ret 0xc148
0x0000000000404db3 : ret 0xd284
0x000000000040423c : ret 0xee8
0x0000000000402481 : ret 0xf280
0x000000000040537e : ret 0xffff
0x0000000000402b3e : ret 1
0x00000000004075ec : ret 4
0x00000000004042f2 : ret 8
0x00000000004028cd : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004015d9 : rol dword ptr [rdx], cl ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000405b1b : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x00000000004075e5 : ror byte ptr [r8 - 0x77], 1 ; ret 0x8148
0x0000000000403310 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x40337b ; ret
0x0000000000401afc : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401b0b ; pop rbp ; ret
0x000000000040549c : ror byte ptr [rax - 0x75], 1 ; enter 0xb0, -0x18 ; clc ; ret
0x0000000000405b1c : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x00000000004075e6 : ror byte ptr [rax - 0x77], 1 ; ret 0x8148
0x0000000000403311 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x40337a ; ret
0x00000000004028c9 : ror byte ptr [rax - 0x7f], -0x3c ; rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000406e0e : ror byte ptr [rax - 0x7f], 1 ; ret 1
0x00000000004042ef : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x00000000004054be : sahf ; ret 0xffff
0x0000000000401ace : sal byte ptr [rsp + rsi*8 + 0x5d], -0x41 ; call 0xffffffffff407b93
0x0000000000401afe : sar eax, 1 ; jne 0x401b09 ; pop rbp ; ret
0x0000000000401afd : sar rax, 1 ; jne 0x401b0a ; pop rbp ; ret
0x00000000004028ee : sete al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004028f0 : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004054dc : shr al, -0x42 ; ret
0x0000000000407928 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000408001 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000408000 : sub rsp, 8 ; add rsp, 8 ; ret
0x00000000004054b9 : test al, 0x48 ; mov edi, ecx ; call 0x401766
0x0000000000407faa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004093b4 : test byte ptr [rax], al ; add byte ptr [rax], al ; clc ; mov bh, bh ; jmp rdx
0x00000000004033cb : test dword ptr [rax], eax ; jmp rcx
0x0000000000402480 : xchg eax, ebp ; ret 0xf280
0x0000000000404db2 : xchg eax, esp ; ret 0xd284
0x00000000004028ef : xchg eax, esp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000040721e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000403186 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
