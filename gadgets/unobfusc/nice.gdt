0x0000000000403859 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407ae0 : add al, -1 ; jmp qword ptr [rdx]
0x0000000000401fe2 : add al, 0x25 ; enter 0x6092, 0 ; pop rbp ; ret
0x0000000000407cff : add al, ah ; ret 0xffff
0x000000000040807f : add al, al ; fdiv st(7), st(0) ; jmp rax
0x00000000004074ab : add al, bl ; mov cl, -1 ; jmp rax
0x0000000000404f97 : add al, ch ; ret 0xffff
0x0000000000407d5f : add al, dh ; ret
0x0000000000407d1f : add al, dh ; ret 0xffff
0x0000000000407cdf : add al, dl ; ret 0xffff
0x000000000040646f : add bl, dh ; ret
0x0000000000404838 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000407ade : add byte ptr [rax], al ; add al, -1 ; jmp qword ptr [rdx]
0x0000000000404f95 : add byte ptr [rax], al ; add al, ch ; ret 0xffff
0x000000000040646d : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040646b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040549d : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040646c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000401c07 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x830f
0x0000000000401a18 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x000000000040412e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040381a : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004035c0 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040123b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000404f96 : add byte ptr [rax], al ; call 0x401294
0x0000000000401439 : add byte ptr [rax], al ; jmp 0x401259
0x000000000040549f : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000402402 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000407c9e : add byte ptr [rax], al ; nop ; ret 0xffff
0x000000000040807a : add byte ptr [rax], al ; or dword ptr [rax], r8d ; add al, al ; fdiv st(7), st(0) ; jmp rax
0x000000000040763a : add byte ptr [rax], al ; pop rax ; loop 0x407643 ; jmp qword ptr [rax]
0x00000000004074ca : add byte ptr [rax], al ; pop rax ; ret
0x0000000000403b11 : add byte ptr [rax], al ; pop rbp ; ret
0x00000000004046fb : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403588 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040807e : add byte ptr [rax], al ; rcr ah, -1 ; jmp rax
0x000000000040646e : add byte ptr [rax], al ; ret
0x00000000004075eb : add byte ptr [rax], bh ; fcos ; jmp rax
0x000000000040762b : add byte ptr [rax], bl ; loope 0x407632 ; jmp rax
0x0000000000407c5f : add byte ptr [rax], dl ; ret 0xffff
0x00000000004046fc : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000403589 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000401d98 : add byte ptr [rbx - 0xab4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000401e23 : add byte ptr [rbx - 0xb34b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040807b : add byte ptr [rcx + rcx], al ; add al, al ; fdiv st(7), st(0) ; jmp rax
0x0000000000401698 : add byte ptr [rcx], al ; ret
0x0000000000401c09 : add byte ptr [rcx], bh ; ret 0x830f
0x0000000000404fa2 : add byte ptr [rdi], cl ; test byte ptr [rax + rax], ah ; add byte ptr [rax], al ; call 0x401299
0x0000000000401a1a : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x0000000000404130 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000404f92 : add cl, ch ; cmp al, byte ptr [rax] ; add byte ptr [rax], al ; call 0x401298
0x0000000000403818 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004046fa : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000403587 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000401a14 : add dword ptr [rcx + 0x2bf9], eax ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x0000000000401faa : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401694 : add eax, 0x207c1e ; add ebx, esi ; ret
0x000000000040165b : add eax, edx ; sar rax, 1 ; jne 0x40166c ; pop rbp ; ret
0x0000000000401699 : add ebx, esi ; ret
0x000000000040180b : add esp, 0x10 ; pop rbp ; ret
0x0000000000405d2c : add esp, 0x130 ; pop rbp ; ret
0x0000000000403584 : add esp, 0x138 ; pop rbx ; pop rbp ; ret
0x00000000004049ec : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000402210 : add esp, 0x20 ; pop rbp ; ret
0x000000000040191d : add esp, 0x30 ; pop rbp ; ret
0x0000000000403bfc : add esp, 0x50 ; pop rbp ; ret
0x0000000000402693 : add esp, 0x70 ; pop rbp ; ret
0x000000000040373e : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000403b0d : add esp, 0x90 ; pop rbp ; ret
0x0000000000404884 : add esp, 0xa0 ; pop rbp ; ret
0x00000000004053f0 : add esp, 0xc0 ; pop rbp ; ret
0x000000000040123e : add esp, 8 ; ret
0x000000000040165a : add rax, rdx ; sar rax, 1 ; jne 0x40166d ; pop rbp ; ret
0x000000000040180a : add rsp, 0x10 ; pop rbp ; ret
0x0000000000405d2b : add rsp, 0x130 ; pop rbp ; ret
0x0000000000403583 : add rsp, 0x138 ; pop rbx ; pop rbp ; ret
0x00000000004049eb : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000040220f : add rsp, 0x20 ; pop rbp ; ret
0x000000000040191c : add rsp, 0x30 ; pop rbp ; ret
0x0000000000403bfb : add rsp, 0x50 ; pop rbp ; ret
0x0000000000402692 : add rsp, 0x70 ; pop rbp ; ret
0x000000000040373d : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000403b0c : add rsp, 0x90 ; pop rbp ; ret
0x0000000000404883 : add rsp, 0xa0 ; pop rbp ; ret
0x00000000004053ef : add rsp, 0xc0 ; pop rbp ; ret
0x000000000040123d : add rsp, 8 ; ret
0x0000000000404fa5 : and al, 0 ; add byte ptr [rax], al ; call 0x401296
0x0000000000401fa9 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401697 : and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000403b47 : and eax, 0x48fffffd ; add esp, 0x20 ; pop rbp ; ret
0x0000000000401f79 : and eax, 0x6091f0 ; pop rbp ; ret
0x0000000000401fbf : and eax, 0x6092c0 ; pop rbp ; ret
0x0000000000401fe3 : and eax, 0x6092c8 ; pop rbp ; ret
0x0000000000404f98 : call 0x401292
0x00000000004035b9 : call 0xffffffffe902bf09
0x00000000004035b8 : call 0xffffffffe902bf0a
0x0000000000406449 : call qword ptr [r12 + rbx*8]
0x0000000000407863 : call qword ptr [rsi]
0x000000000040644a : call qword ptr [rsp + rbx*8]
0x00000000004016bd : call rax
0x0000000000407a63 : call rdx
0x0000000000405d2a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x0000000000404bef : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404141 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040165f : clc ; jne 0x401668 ; pop rbp ; ret
0x0000000000402545 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040639b : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040639e : clc ; pop rbp ; ret
0x000000000040549c : cld ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000401837 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004056fb : cld ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405640 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004053ee : cld ; add rsp, 0xc0 ; pop rbp ; ret
0x0000000000401f76 : cld ; mov dword ptr [0x6091f0], eax ; pop rbp ; ret
0x0000000000406398 : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000405e73 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405e16 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040563d : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004054a3 : cld ; pop rbp ; ret
0x0000000000404f94 : cmp al, byte ptr [rax] ; add byte ptr [rax], al ; call 0x401296
0x0000000000403586 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040161d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401630 ; pop rbp ; ret
0x000000000040423c : cwde ; mov rcx, qword ptr [rax*8 + 0x406f08] ; jmp rcx
0x0000000000405232 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; xor byte ptr [rdx + 0x40], 0 ; jmp rcx
0x0000000000401d9e : dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000405c8f : dec dword ptr [rax - 0x7f] ; ret 1
0x0000000000401ea5 : dec dword ptr [rbx - 0xbb4b] ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040366b : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000401fe4 : enter 0x6092, 0 ; pop rbp ; ret
0x00000000004075fd : fcos ; jmp qword ptr [rax]
0x00000000004075ed : fcos ; jmp rax
0x0000000000408081 : fdiv st(7), st(0) ; jmp rax
0x0000000000402fa3 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040644c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000401809 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401630 : hlt ; pop rbp ; mov edi, 0x609250 ; jmp rax
0x00000000004054fd : in al, dx ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004074c7 : inc dword ptr [rax + 6] ; add byte ptr [rax], al ; pop rax ; ret
0x00000000004075e7 : inc eax ; or al, byte ptr [rax] ; add byte ptr [rax], bh ; fcos ; jmp rax
0x0000000000407627 : inc eax ; or eax, dword ptr [rax] ; add byte ptr [rax], bl ; loope 0x407636 ; jmp rax
0x0000000000404840 : int 0x80
0x0000000000401623 : ja 0x40162a ; pop rbp ; ret
0x000000000040162f : je 0x40162d ; pop rbp ; mov edi, 0x609250 ; jmp rax
0x0000000000404fa3 : je 0x404fd5 ; call 0x401298
0x0000000000401696 : jl 0x4016bd ; add byte ptr [rcx], al ; ret
0x000000000040143b : jmp 0x401257
0x000000000040743f : jmp qword ptr [rax]
0x0000000000407ae3 : jmp qword ptr [rdx]
0x0000000000401637 : jmp rax
0x000000000040274e : jmp rcx
0x0000000000401677 : jmp rdx
0x0000000000401660 : jne 0x401667 ; pop rbp ; ret
0x0000000000402695 : jo 0x4026f6 ; ret
0x0000000000403da4 : jo 0x403e05 ; ret
0x0000000000403ede : jo 0x403f3f ; ret
0x0000000000403740 : js 0x4037a0 ; pop rbp ; ret
0x000000000040763d : loop 0x407640 ; jmp qword ptr [rax]
0x000000000040762d : loope 0x407630 ; jmp rax
0x0000000000403c7b : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000403b0b : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000401fa6 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401fe1 : mov byte ptr [0x6092c8], al ; pop rbp ; ret
0x0000000000401693 : mov byte ptr [rip + 0x207c1e], 1 ; ret
0x00000000004074ad : mov cl, -1 ; jmp rax
0x0000000000401fac : mov dh, -0x40 ; pop rbp ; ret
0x0000000000401f77 : mov dword ptr [0x6091f0], eax ; pop rbp ; ret
0x0000000000401fbd : mov dword ptr [0x6092c0], edi ; pop rbp ; ret
0x0000000000402546 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000402454 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000402508 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000401919 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401807 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401835 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406399 : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004025be : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040373c : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000402408 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000404b0b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040220c : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402405 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040218f : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004054fb : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404da3 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004023bd : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040244e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040250a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040268f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040373a : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000403c79 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000405e74 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004056f9 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040563e : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004054a1 : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000404bed : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040413f : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040639c : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004016bb : mov ebp, esp ; call rax
0x0000000000401621 : mov ebp, esp ; ja 0x40162c ; pop rbp ; ret
0x0000000000402747 : mov ecx, dword ptr [rax*8 + 0x406a00] ; jmp rcx
0x0000000000402a27 : mov ecx, dword ptr [rax*8 + 0x406a48] ; jmp rcx
0x000000000040423e : mov ecx, dword ptr [rax*8 + 0x406f08] ; jmp rcx
0x0000000000405234 : mov ecx, dword ptr [rax*8 + 0x407280] ; jmp rcx
0x00000000004051c0 : mov ecx, dword ptr [rax*8 + 0x4072e0] ; jmp rcx
0x0000000000402451 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004016b5 : mov edi, 0x608e20 ; mov rbp, rsp ; call rax
0x0000000000401632 : mov edi, 0x609250 ; jmp rax
0x0000000000401672 : mov edi, 0x609250 ; jmp rdx
0x0000000000406447 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000406446 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000401670 : mov esi, eax ; mov edi, 0x609250 ; jmp rdx
0x00000000004016b7 : mov fs, word ptr [rax] ; mov rbp, rsp ; call rax
0x0000000000401fbc : mov qword ptr [0x6092c0], rdi ; pop rbp ; ret
0x00000000004025bd : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403c7a : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040373b : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000404b0a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040220b : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402404 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040218e : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000404da2 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004023bc : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040268e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000403c78 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000404bec : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040413e : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004016ba : mov rbp, rsp ; call rax
0x0000000000401620 : mov rbp, rsp ; ja 0x40162d ; pop rbp ; ret
0x0000000000402746 : mov rcx, qword ptr [rax*8 + 0x406a00] ; jmp rcx
0x0000000000402a26 : mov rcx, qword ptr [rax*8 + 0x406a48] ; jmp rcx
0x000000000040423d : mov rcx, qword ptr [rax*8 + 0x406f08] ; jmp rcx
0x0000000000405233 : mov rcx, qword ptr [rax*8 + 0x407280] ; jmp rcx
0x00000000004051bf : mov rcx, qword ptr [rax*8 + 0x4072e0] ; jmp rcx
0x000000000040166f : mov rsi, rax ; mov edi, 0x609250 ; jmp rdx
0x0000000000401fab : movzx eax, al ; pop rbp ; ret
0x0000000000407ca0 : nop ; ret 0xffff
0x0000000000406468 : nop dword ptr [rax + rax] ; ret
0x0000000000405235 : or al, 0xffffffffffffffc5 ; xor byte ptr [rdx + 0x40], 0 ; jmp rcx
0x00000000004075e9 : or al, byte ptr [rax] ; add byte ptr [rax], bh ; fcos ; jmp rax
0x0000000000402f9e : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000402f9f : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040807d : or dword ptr [rax], eax ; add al, al ; fdiv st(7), st(0) ; jmp rax
0x000000000040807c : or dword ptr [rax], r8d ; add al, al ; fdiv st(7), st(0) ; jmp rax
0x0000000000403e61 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407629 : or eax, dword ptr [rax] ; add byte ptr [rax], bl ; loope 0x407634 ; jmp rax
0x000000000040645c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040645e : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004046fe : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406460 : pop r14 ; pop r15 ; ret
0x0000000000404700 : pop r15 ; pop rbp ; ret
0x0000000000406462 : pop r15 ; ret
0x000000000040763c : pop rax ; loop 0x407641 ; jmp qword ptr [rax]
0x00000000004074cc : pop rax ; ret
0x0000000000401692 : pop rbp ; mov byte ptr [rip + 0x207c1e], 1 ; ret
0x0000000000401631 : pop rbp ; mov edi, 0x609250 ; jmp rax
0x000000000040166e : pop rbp ; mov rsi, rax ; mov edi, 0x609250 ; jmp rdx
0x000000000040645b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040645f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401625 : pop rbp ; ret
0x00000000004046fd : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040358a : pop rbx ; pop rbp ; ret
0x0000000000404701 : pop rdi ; pop rbp ; ret
0x0000000000406463 : pop rdi ; ret
0x00000000004046ff : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000406461 : pop rsi ; pop r15 ; ret
0x000000000040645d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000403bfe : push rax ; pop rbp ; ret
0x0000000000402fa2 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x00000000004016b4 : push rbp ; mov edi, 0x608e20 ; mov rbp, rsp ; call rax
0x000000000040591d : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000040366e : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000405029 : push rbx ; ret
0x0000000000408080 : rcr ah, -1 ; jmp rax
0x0000000000401241 : ret
0x0000000000401442 : ret 0x207c
0x0000000000401aae : ret 0x20b8
0x0000000000401acf : ret 0x448d
0x0000000000402fbb : ret 0x4fe8
0x0000000000401a1d : ret 0x5588
0x0000000000401c0b : ret 0x830f
0x00000000004041f9 : ret 0x8844
0x0000000000404c72 : ret 0x8948
0x00000000004030cd : ret 0x89a5
0x0000000000402fa6 : ret 0x8b48
0x0000000000401d2e : ret 0xb0
0x0000000000401655 : ret 0xc148
0x0000000000404133 : ret 0xd284
0x00000000004035bc : ret 0xee8
0x0000000000404f9a : ret 0xffff
0x00000000004038de : ret 1
0x0000000000403672 : ret 8
0x00000000004074a8 : rol byte ptr [rip - 0x4e280000], -1 ; jmp rax
0x000000000040483b : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000402690 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x4026fb ; ret
0x000000000040165c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40166b ; pop rbp ; ret
0x000000000040483c : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000402691 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x4026fa ; ret
0x000000000040591e : ror byte ptr [rax - 0x7f], 1 ; ret 1
0x0000000000407628 : ror byte ptr [rbx], 0 ; add byte ptr [rax], bl ; loope 0x407635 ; jmp rax
0x000000000040366f : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x00000000004075e8 : ror byte ptr [rdx], 0 ; add byte ptr [rax], bh ; fcos ; jmp rax
0x00000000004076a8 : ror byte ptr [rip - 0x12a80000], -1 ; jmp rax
0x0000000000401aa7 : sar byte ptr [rax + 0x40673b], -0x77 ; ret 0x20b8
0x000000000040165e : sar eax, 1 ; jne 0x401669 ; pop rbp ; ret
0x000000000040165d : sar rax, 1 ; jne 0x40166a ; pop rbp ; ret
0x0000000000404f06 : shr al, -0x7c ; ret
0x0000000000404f05 : shr r8b, -0x7c ; ret
0x0000000000401fa8 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040649d : sub esp, 8 ; add rsp, 8 ; ret
0x000000000040649c : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000404fa4 : test byte ptr [rax + rax], ah ; add byte ptr [rax], al ; call 0x401297
0x000000000040646a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000401a1c : xchg eax, esp ; ret 0x5588
0x0000000000404132 : xchg eax, esp ; ret 0xd284
0x0000000000405027 : xor al, ch ; push rbx ; ret
0x0000000000405d2e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000405237 : xor byte ptr [rdx + 0x40], 0 ; jmp rcx
0x0000000000402506 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
