0x000000000040deb1 : adc al, -0x75 ; hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040a383 : adc al, byte ptr [rcx + 0x4f9] ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x000000000040a2f8 : adc al, byte ptr [rcx + 0x4f9] ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf280
0x000000000040a727 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040c447 : adc byte ptr [rcx], al ; mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x0000000000405779 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000412b45 : adc eax, dword ptr [rax] ; add byte ptr [rax], bl ; mov dl, -1 ; call qword ptr [rsi]
0x0000000000412b05 : adc eax, dword ptr [rax] ; add byte ptr [rax], cl ; mov cl, -1 ; call rbx
0x0000000000412b43 : add ah, ah ; adc eax, dword ptr [rax] ; add byte ptr [rax], bl ; mov dl, -1 ; call qword ptr [rsi]
0x0000000000411943 : add ah, ah ; add dword ptr [rax], eax ; add al, ch ; and bh, bh ; call rsp
0x0000000000412e64 : add al, 0x17 ; add byte ptr [rax], al ; pop rax ; ret 0xffff
0x0000000000412f64 : add al, 0x18 ; add byte ptr [rax], al ; pop rax ; ret
0x000000000040c06a : add al, 0x48 ; add eax, ecx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000412f27 : add al, bl ; ret 0xffff
0x0000000000411947 : add al, ch ; and bh, bh ; call rsp
0x0000000000412f47 : add al, ch ; ret 0xffff
0x0000000000412fa7 : add al, cl ; ret
0x0000000000412f07 : add al, cl ; ret 0xffff
0x000000000040f4ef : add bl, dh ; ret
0x000000000040600f : add byte ptr [r8 - 0x73], cl ; or al, 0x25 ; ret 0x4109
0x0000000000402830 : add byte ptr [r8], r8b ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000412fa3 : add byte ptr [rax + rbx], al ; add al, cl ; ret
0x0000000000412f63 : add byte ptr [rax + rbx], al ; add byte ptr [rax], al ; pop rax ; ret
0x0000000000406010 : add byte ptr [rax - 0x73], cl ; or al, 0x25 ; ret 0x4109
0x00000000004067c8 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x00000000004023ae : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x0000000000412e62 : add byte ptr [rax], al ; add al, 0x17 ; add byte ptr [rax], al ; pop rax ; ret 0xffff
0x0000000000412f62 : add byte ptr [rax], al ; add al, 0x18 ; add byte ptr [rax], al ; pop rax ; ret
0x000000000040f4ed : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000412fa1 : add byte ptr [rax], al ; add byte ptr [rax + rbx], al ; add al, cl ; ret
0x0000000000412f61 : add byte ptr [rax], al ; add byte ptr [rax + rbx], al ; add byte ptr [rax], al ; pop rax ; ret
0x00000000004023ac : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000040f4eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004023f7 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040c9dd : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040958f : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004075c9 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000404136 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004027ca : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040f4ec : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040f5a4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4022
0x0000000000402999 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7478b], cl ; ret 0xb0
0x0000000000402a24 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b74b8b], cl ; ret 0xb0
0x0000000000412e61 : add byte ptr [rax], al ; add byte ptr [rdi + rdx], al ; add byte ptr [rax], al ; pop rax ; ret 0xffff
0x0000000000407903 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x9588
0x00000000004023f9 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004023da : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000040a387 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x0000000000403801 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040a2fc : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf280
0x000000000040573a : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004054e0 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402831 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000409591 : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000401733 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000411946 : add byte ptr [rax], al ; call 0xffffffffd5411874
0x0000000000411942 : add byte ptr [rax], al ; in al, 1 ; add byte ptr [rax], al ; call 0xffffffffd5411878
0x0000000000401949 : add byte ptr [rax], al ; jmp 0x401749
0x000000000040efcc : add byte ptr [rax], al ; mov al, sil ; movzx eax, al ; pop rbp ; ret
0x000000000040ef4d : add byte ptr [rax], al ; mov ax, si ; movzx eax, ax ; pop rbp ; ret
0x00000000004075cb : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000404322 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000404138 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000412b02 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; adc eax, dword ptr [rax] ; add byte ptr [rax], cl ; mov cl, -1 ; call rbx
0x0000000000412f66 : add byte ptr [rax], al ; pop rax ; ret
0x0000000000412e66 : add byte ptr [rax], al ; pop rax ; ret 0xffff
0x00000000004123e6 : add byte ptr [rax], al ; pop rax ; test bh, bh ; call qword ptr [rcx]
0x00000000004027cc : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040668b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004054a8 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000041157e : add byte ptr [rax], al ; pushfq ; ret
0x000000000040f4ee : add byte ptr [rax], al ; ret
0x000000000040f5a6 : add byte ptr [rax], al ; ret 0x4022
0x0000000000412fa2 : add byte ptr [rax], al ; sbb byte ptr [rax], r8b ; add al, cl ; ret
0x0000000000412b47 : add byte ptr [rax], bl ; mov dl, -1 ; call qword ptr [rsi]
0x0000000000412b07 : add byte ptr [rax], cl ; mov cl, -1 ; call rbx
0x0000000000412e47 : add byte ptr [rax], cl ; ret 0xffff
0x0000000000402890 : add byte ptr [rax], r8b ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040668c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004054a9 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040299b : add byte ptr [rbx - 0x76b7478b], cl ; ret 0xb0
0x0000000000402a26 : add byte ptr [rbx - 0x76b74b8b], cl ; ret 0xb0
0x00000000004078ff : add byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x9588
0x0000000000402acd : add byte ptr [rcx], al ; jmp rcx
0x0000000000401ca8 : add byte ptr [rcx], al ; ret
0x0000000000412e63 : add byte ptr [rdi + rdx], al ; add byte ptr [rax], al ; pop rax ; ret 0xffff
0x0000000000407905 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x9588
0x00000000004023fb : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004023dc : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000040a389 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x0000000000403803 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040a2fe : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf280
0x000000000040bedd : add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x000000000041171f : add byte ptr [rsp - 1], bh ; jmp rsp
0x000000000040beda : add dl, byte ptr [rcx] ; add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x000000000040dcdc : add dword ptr [rax + 0xf], eax ; mov dh, -0x39 ; pop rbp ; ret
0x0000000000411945 : add dword ptr [rax], eax ; add al, ch ; and bh, bh ; call rsp
0x0000000000405738 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407d15 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040668a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004054a7 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040ba05 : add dword ptr [rdi], ecx ; mov dh, -0x3f ; pop rbp ; ret
0x0000000000408483 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040b9d6 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407def : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040ab01 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000402a3c : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000406f29 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x000000000040b5b4 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x5588
0x0000000000401ca4 : add eax, 0x21268e ; add ebx, esi ; ret
0x000000000040a402 : add eax, 0xf000000 ; xchg eax, esp ; ret 0x9588
0x000000000040c06c : add eax, ecx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401c6b : add eax, edx ; sar rax, 1 ; jne 0x401c7c ; pop rbp ; ret
0x0000000000401ca9 : add ebx, esi ; ret
0x0000000000401eeb : add esp, 0x10 ; pop rbp ; ret
0x000000000040a725 : add esp, 0x110 ; pop rbp ; ret
0x000000000040e4dc : add esp, 0x130 ; pop rbp ; ret
0x00000000004054a4 : add esp, 0x138 ; pop rbx ; pop rbp ; ret
0x000000000040697c : add esp, 0x1a0 ; pop rbp ; ret
0x000000000040bc0f : add esp, 0x1b0 ; pop rbp ; ret
0x000000000040ec2e : add esp, 0x1e0 ; pop rbp ; ret
0x00000000004035ba : add esp, 0x1f0 ; pop rbp ; ret
0x0000000000403f70 : add esp, 0x20 ; pop rbp ; ret
0x0000000000401fcd : add esp, 0x30 ; pop rbp ; ret
0x00000000004087fd : add esp, 0x40 ; pop rbp ; ret
0x0000000000405b1c : add esp, 0x50 ; pop rbp ; ret
0x0000000000402a41 : add esp, 0x60 ; pop rbp ; ret
0x00000000004045b3 : add esp, 0x70 ; pop rbp ; ret
0x000000000040565e : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040cd93 : add esp, 0x80 ; pop rbp ; ret
0x0000000000405a2d : add esp, 0x90 ; pop rbp ; ret
0x00000000004060d8 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040d44c : add esp, 0xc0 ; pop rbp ; ret
0x0000000000403c1e : add esp, 0xd0 ; pop rbp ; ret
0x0000000000403871 : add esp, 0xe0 ; pop rbp ; ret
0x0000000000401736 : add esp, 8 ; ret
0x000000000040c06b : add rax, rcx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401c6a : add rax, rdx ; sar rax, 1 ; jne 0x401c7d ; pop rbp ; ret
0x0000000000401eea : add rsp, 0x10 ; pop rbp ; ret
0x000000000040a724 : add rsp, 0x110 ; pop rbp ; ret
0x000000000040e4db : add rsp, 0x130 ; pop rbp ; ret
0x00000000004054a3 : add rsp, 0x138 ; pop rbx ; pop rbp ; ret
0x000000000040697b : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000040bc0e : add rsp, 0x1b0 ; pop rbp ; ret
0x000000000040ec2d : add rsp, 0x1e0 ; pop rbp ; ret
0x00000000004035b9 : add rsp, 0x1f0 ; pop rbp ; ret
0x0000000000403f6f : add rsp, 0x20 ; pop rbp ; ret
0x0000000000401fcc : add rsp, 0x30 ; pop rbp ; ret
0x00000000004087fc : add rsp, 0x40 ; pop rbp ; ret
0x0000000000405b1b : add rsp, 0x50 ; pop rbp ; ret
0x0000000000402a40 : add rsp, 0x60 ; pop rbp ; ret
0x00000000004045b2 : add rsp, 0x70 ; pop rbp ; ret
0x000000000040565d : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040cd92 : add rsp, 0x80 ; pop rbp ; ret
0x0000000000405a2c : add rsp, 0x90 ; pop rbp ; ret
0x00000000004060d7 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040d44b : add rsp, 0xc0 ; pop rbp ; ret
0x0000000000403c1d : add rsp, 0xd0 ; pop rbp ; ret
0x0000000000403870 : add rsp, 0xe0 ; pop rbp ; ret
0x0000000000401735 : add rsp, 8 ; ret
0x0000000000406f28 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040f5a1 : and al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4022
0x000000000040dcda : and bh, 1 ; movzx eax, dil ; pop rbp ; ret
0x0000000000411949 : and bh, bh ; call rsp
0x0000000000402fc8 : and byte ptr [r15], cl ; xchg eax, esp ; ret 0x9588
0x0000000000402fc9 : and byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x000000000040ba03 : and cl, 1 ; movzx eax, cl ; pop rbp ; ret
0x000000000040dcd9 : and dil, 1 ; movzx eax, dil ; pop rbp ; ret
0x0000000000401ca7 : and dword ptr [rax], eax ; add ebx, esi ; ret
0x0000000000401ca6 : and dword ptr es:[rax], eax ; add ebx, esi ; ret
0x000000000040c445 : and eax, 0x411080 ; mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x0000000000405a67 : and eax, 0x48fffffd ; add esp, 0x20 ; pop rbp ; ret
0x0000000000403d1f : and eax, 0x614358 ; pop rbp ; ret
0x0000000000403d43 : and eax, 0x614360 ; pop rbp ; ret
0x0000000000411969 : and edi, edi ; call qword ptr [rsi]
0x000000000040553d : call 0x401792
0x00000000004040f4 : call 0x4902ca44
0x00000000004040f3 : call 0x4902ca45
0x00000000004040f4 : call 0x4902ca47
0x00000000004040f3 : call 0x4902ca48
0x0000000000402dc8 : call 0x80f0b7
0x0000000000411948 : call 0xffffffffd5411872
0x00000000004054d9 : call 0xffffffffe902de29
0x00000000004054d8 : call 0xffffffffe902de2a
0x000000000040c931 : call 0xffffffffff7a5482
0x000000000040c930 : call 0xffffffffff7a5483
0x000000000040ca6f : call 0xffffffffff7a55c0
0x000000000040ca6e : call 0xffffffffff7a55c1
0x000000000040f4c9 : call qword ptr [r12 + rbx*8]
0x0000000000413083 : call qword ptr [rax]
0x00000000004123eb : call qword ptr [rcx]
0x000000000041272b : call qword ptr [rdx]
0x000000000041196b : call qword ptr [rsi]
0x000000000040f4ca : call qword ptr [rsp + rbx*8]
0x0000000000401ccd : call rax
0x000000000041284b : call rbx
0x0000000000411bcb : call rdx
0x000000000041182b : call rsi
0x000000000041194b : call rsp
0x000000000040dbfd : clc ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040a723 : clc ; add rsp, 0x110 ; pop rbp ; ret
0x000000000040e4da : clc ; add rsp, 0x130 ; pop rbp ; ret
0x0000000000406b7f : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406061 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040b00b : clc ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004083b6 : clc ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040d625 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040943c : clc ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000407c99 : clc ; add rsp, 0x90 ; pop rbp ; ret
0x00000000004060d6 : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x000000000040db36 : clc ; add rsp, 0xc0 ; pop rbp ; ret
0x0000000000401c6f : clc ; jne 0x401c78 ; pop rbp ; ret
0x000000000040de0c : clc ; mov byte ptr [rax + 0x1c], 0 ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000404465 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040dd51 : clc ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x000000000040b1be : clc ; mov dword ptr [rcx + 0x18], eax ; pop rbp ; ret
0x000000000040ad25 : clc ; mov dword ptr [rcx + 0x2c], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b8c7 : clc ; mov dword ptr [rdi + 0x18], 0x95f616 ; pop rbp ; ret
0x000000000040f41b : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040db6e : clc ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040c2cd : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040bc2b : clc ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040bc4b : clc ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040bc6b : clc ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x00000000004027d7 : clc ; pop rbp ; ret
0x00000000004075c8 : cld ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040ec96 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040adb2 : cld ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b700 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004087fb : cld ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040d44a : cld ; add rsp, 0xc0 ; pop rbp ; ret
0x000000000040386f : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000040f418 : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040ec93 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040e78b : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b6fd : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004075cf : cld ; pop rbp ; ret
0x000000000040b158 : cmovno eax, dword ptr [rax] ; jmp rcx
0x000000000041157c : cmp al, 0x19 ; add byte ptr [rax], al ; pushfq ; ret
0x0000000000411bc9 : cmp bh, bh ; call rdx
0x00000000004054a6 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040c34a : cmp dword ptr [rax - 0x75], ecx ; jne 0x40c334 ; call rax
0x0000000000401c2d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401c40 ; pop rbp ; ret
0x00000000004061cc : cwde ; mov rcx, qword ptr [rax*8 + 0x4109c8] ; jmp rcx
0x0000000000402ac7 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; add byte ptr [rcx], al ; jmp rcx
0x0000000000403242 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; nop ; add byte ptr [rcx], al ; jmp rcx
0x0000000000404665 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; rol byte ptr [rcx + rax*2], 0 ; jmp rcx
0x000000000040e43f : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000040b450 : div dword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000040b44f : div qword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000040558b : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000040c347 : enter -0x74b8, 0x39 ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x00000000004061d1 : enter 0x4109, 0 ; jmp rcx
0x000000000040b5bc : fbld dword ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000040b5bd : fbld dword ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x0000000000411578 : fdivr qword ptr [rsi + 0x193cffff] ; add byte ptr [rax], al ; pushfq ; ret
0x0000000000401731 : fild dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000404ec3 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040f4cc : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000401ee9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040276f : hlt ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040dd4d : hlt ; mov rcx, qword ptr [rbp - 8] ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x0000000000401c40 : hlt ; pop rbp ; mov edi, 0x6142e0 ; jmp rax
0x0000000000411721 : in al, -1 ; jmp rsp
0x0000000000411944 : in al, 1 ; add byte ptr [rax], al ; call 0xffffffffd5411876
0x000000000040762d : in al, dx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b41d : in al, dx ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000040b420 : in al, dx ; pop rbp ; ret
0x00000000004027d3 : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x000000000040288f : in eax, dx ; add byte ptr [rax], r8b ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004067d0 : int 0x80
0x0000000000401c33 : ja 0x401c3a ; pop rbp ; ret
0x000000000040db71 : ja 0x40dbbe ; pop rbp ; ret
0x00000000004002d6 : jbe 0x40027d ; xchg al, dh ; xchg eax, esi ; jl 0x400326 ; ret
0x0000000000401c3f : je 0x401c3d ; pop rbp ; mov edi, 0x6142e0 ; jmp rax
0x00000000004027d6 : jge 0x4027d3 ; pop rbp ; ret
0x000000000040bc2a : jge 0x40bc2b ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040bc4a : jge 0x40bc4b ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040bc6a : jge 0x40bc6b ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000040bfc0 : jge 0x40bfb3 ; mov rcx, qword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040d4d0 : jge 0x40d4c3 ; mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040db6d : jge 0x40db6e ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x00000000004002db : jl 0x400321 ; ret
0x000000000040194b : jmp 0x401747
0x000000000040d6b1 : jmp 0x40d6b4
0x000000000040c7d0 : jmp 0x49035120
0x000000000040d20e : jmp 0x49035b5e
0x000000000040d27b : jmp 0x49035bcb
0x000000000040d9b2 : jmp 0x49036302
0x000000000040da1f : jmp 0x4903636f
0x0000000000411d6b : jmp qword ptr [rax]
0x00000000004126ab : jmp qword ptr [rcx]
0x000000000041298b : jmp qword ptr [rdi]
0x0000000000411c4b : jmp qword ptr [rdx]
0x0000000000401c47 : jmp rax
0x0000000000402272 : jmp rcx
0x0000000000401c87 : jmp rdx
0x0000000000411723 : jmp rsp
0x0000000000401c70 : jne 0x401c77 ; pop rbp ; ret
0x000000000040b059 : jne 0x40b03c ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x000000000040b451 : jne 0x40b449 ; mov rax, rdx ; pop rbp ; ret
0x000000000040b562 : jne 0x40b55a ; mov rax, rdx ; pop rbp ; ret
0x000000000040c036 : jne 0x40c021 ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000040c34d : jne 0x40c331 ; call rax
0x00000000004045b5 : jo 0x404616 ; ret
0x0000000000405cc4 : jo 0x405d25 ; ret
0x0000000000405dfe : jo 0x405e5f ; ret
0x0000000000409440 : jo 0x4094a1 ; ret
0x000000000040a3ff : jo 0x40a38b ; stc ; add eax, 0xf000000 ; xchg eax, esp ; ret 0x9588
0x0000000000405660 : js 0x4056c0 ; pop rbp ; ret
0x000000000040ee29 : loop 0x40ee7b ; or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x000000000040ef11 : loop 0x40ef63 ; or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x000000000040ba04 : loope 0x40ba0d ; movzx eax, cl ; pop rbp ; ret
0x00000000004023d8 : loopne 0x4023e1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000403873 : loopne 0x40387a ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000406e7b : loopne 0x406ecb ; add esp, 0x20 ; pop rbp ; ret
0x0000000000406e7a : loopne 0x406ecc ; add esp, 0x20 ; pop rbp ; ret
0x0000000000407561 : loopne 0x407568 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040985d : loopne 0x409864 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040c037 : loopne 0x40c089 ; mov esi, eax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000040ec30 : loopne 0x40ec38 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040bf3e : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000405b9b : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000405a2b : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000405538 : mov al, 0x48 ; mov dword ptr [rbp - 0x30], eax ; call 0x401797
0x000000000040bc11 : mov al, 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000406f25 : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040b5bb : mov al, byte ptr [rbp - 0x21] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040be25 : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040f046 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040dd6c : mov al, byte ptr [rdi + 0x1c] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040efcf : mov al, dh ; movzx eax, al ; pop rbp ; ret
0x000000000040efce : mov al, sil ; movzx eax, al ; pop rbp ; ret
0x000000000040ef4f : mov ax, si ; movzx eax, ax ; pop rbp ; ret
0x000000000040ef53 : mov bh, -0x40 ; pop rbp ; ret
0x0000000000403d41 : mov byte ptr [0x614360], al ; pop rbp ; ret
0x000000000040de0d : mov byte ptr [rax + 0x1c], 0 ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000401ca3 : mov byte ptr [rip + 0x21268e], 1 ; ret
0x0000000000412b09 : mov cl, -1 ; call rbx
0x000000000040dcdf : mov dh, -0x39 ; pop rbp ; ret
0x000000000040ba07 : mov dh, -0x3f ; pop rbp ; ret
0x0000000000408485 : mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040b9d8 : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407df1 : mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040ab03 : mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000402a3e : mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000406f2b : mov dh, -0x40 ; pop rbp ; ret
0x0000000000412b49 : mov dl, -1 ; call qword ptr [rsi]
0x0000000000403d1d : mov dword ptr [0x614358], edi ; pop rbp ; ret
0x0000000000404466 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000404374 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000404428 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040b41b : mov dword ptr [rbp - 0x14], eax ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000401fc9 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040553a : mov dword ptr [rbp - 0x30], eax ; call 0x401795
0x000000000040bf3c : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401ee7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040f419 : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040c2cb : mov dword ptr [rbp - 8], eax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004027d5 : mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x000000000040dd52 : mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x000000000040b1bf : mov dword ptr [rcx + 0x18], eax ; pop rbp ; ret
0x000000000040ad26 : mov dword ptr [rcx + 0x2c], eax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004044de : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040a948 : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040c44a : mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x000000000040b8c8 : mov dword ptr [rdi + 0x18], 0x95f616 ; pop rbp ; ret
0x00000000004027c7 : mov dword ptr [rdi + 0x20], 0 ; pop rbp ; ret
0x000000000040db70 : mov dword ptr [rdi + 0x48], esi ; pop rbp ; ret
0x000000000040565c : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000402fc6 : mov eax, 0xf20413b ; xchg eax, esp ; ret 0x9588
0x0000000000404328 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000406a9b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403f6c : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404325 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000403eef : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040762b : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b41e : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000406d33 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403cfb : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040436e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040413b : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000406e79 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040c03c : mov eax, dword ptr [rbp - 0x20] ; call rax
0x000000000040d72f : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040b05f : mov eax, dword ptr [rbp - 0x28] ; call rax
0x000000000040442a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004045af : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040565a : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000405b99 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000405536 : mov eax, dword ptr [rbp - 0x50] ; mov qword ptr [rbp - 0x30], rax ; call 0x401799
0x000000000040deb2 : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040276d : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040ec94 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040adb0 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b6fe : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004087f9 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004075cd : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040dbfb : mov eax, dword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406b7d : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040605f : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040b009 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004083b4 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040d623 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040943a : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040c2cf : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040bc2d : mov eax, dword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040bc4d : mov eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040bc6d : mov eax, dword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000040edee : mov eax, edi ; pop rbp ; ret
0x000000000040c631 : mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b454 : mov eax, edx ; pop rbp ; ret
0x000000000040ef50 : mov eax, esi ; movzx eax, ax ; pop rbp ; ret
0x000000000040ee63 : mov eax, esi ; pop rbp ; ret
0x0000000000401ccb : mov ebp, esp ; call rax
0x0000000000401c31 : mov ebp, esp ; ja 0x401c3c ; pop rbp ; ret
0x00000000004027d2 : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000040226b : mov ecx, dword ptr [rax*8 + 0x40f590] ; jmp rcx
0x0000000000402ac9 : mov ecx, dword ptr [rax*8 + 0x410040] ; jmp rcx
0x0000000000403244 : mov ecx, dword ptr [rax*8 + 0x410090] ; jmp rcx
0x0000000000404667 : mov ecx, dword ptr [rax*8 + 0x4104c0] ; jmp rcx
0x0000000000404947 : mov ecx, dword ptr [rax*8 + 0x410508] ; jmp rcx
0x00000000004061ce : mov ecx, dword ptr [rax*8 + 0x4109c8] ; jmp rcx
0x000000000040739d : mov ecx, dword ptr [rax*8 + 0x410db8] ; jmp rcx
0x000000000040731d : mov ecx, dword ptr [rax*8 + 0x410e18] ; jmp rcx
0x000000000040b154 : mov ecx, dword ptr [rax*8 + 0x410f00] ; jmp rcx
0x0000000000404371 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040c992 : mov ecx, dword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040c92f : mov ecx, dword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040bfc3 : mov ecx, dword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040d4d3 : mov ecx, dword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040dd4f : mov ecx, dword ptr [rbp - 8] ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x000000000040b1bc : mov ecx, dword ptr [rbp - 8] ; mov dword ptr [rcx + 0x18], eax ; pop rbp ; ret
0x000000000040d5a0 : mov ecx, dword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040ee8d : mov ecx, eax ; shl edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000040ee5d : mov ecx, eax ; shr edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000401cc5 : mov edi, 0x613e20 ; mov rbp, rsp ; call rax
0x0000000000401c42 : mov edi, 0x6142e0 ; jmp rax
0x0000000000401c82 : mov edi, 0x6142e0 ; jmp rdx
0x000000000040db6c : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040bc29 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040bc49 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040bc69 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000040c933 : mov edi, dword ptr [rcx] ; call rax
0x000000000040c349 : mov edi, dword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x000000000040f4c7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000040f4c6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000411579 : mov esi, 0x193cffff ; add byte ptr [rax], al ; pushfq ; ret
0x000000000040885a : mov esi, 0x48ffffff ; add esp, 0x10 ; pop rbp ; ret
0x000000000040c412 : mov esi, 0x48ffffff ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040c34c : mov esi, dword ptr [rbp - 0x20] ; call rax
0x000000000040bfc7 : mov esi, dword ptr [rcx] ; call rax
0x0000000000401c80 : mov esi, eax ; mov edi, 0x6142e0 ; jmp rdx
0x000000000040c039 : mov esi, eax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000040b05c : mov esi, eax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x0000000000401ca5 : mov fs, word ptr [rsi] ; and dword ptr [rax], eax ; add ebx, esi ; ret
0x0000000000403d1c : mov qword ptr [0x614358], rdi ; pop rbp ; ret
0x0000000000405539 : mov qword ptr [rbp - 0x30], rax ; call 0x401796
0x000000000040c2ca : mov qword ptr [rbp - 8], rax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004027d4 : mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x00000000004044dd : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040a947 : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004027c6 : mov qword ptr [rdi + 0x20], 0 ; pop rbp ; ret
0x000000000040db6f : mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040bf3d : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000405b9a : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000405537 : mov r8b, 0x48 ; mov dword ptr [rbp - 0x30], eax ; call 0x401798
0x000000000040565b : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000406a9a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403f6b : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404324 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000403eee : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000406d32 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403cfa : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040413a : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000406e78 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040c03b : mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000040d72e : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040b05e : mov rax, qword ptr [rbp - 0x28] ; call rax
0x00000000004045ae : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000405b98 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040dbfa : mov rax, qword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406b7c : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040605e : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040b008 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004083b3 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040d622 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000409439 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040c2ce : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040bc2c : mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040bc4c : mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040bc6c : mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000040eded : mov rax, rdi ; pop rbp ; ret
0x000000000040c630 : mov rax, rdx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b453 : mov rax, rdx ; pop rbp ; ret
0x0000000000401cca : mov rbp, rsp ; call rax
0x0000000000401c30 : mov rbp, rsp ; ja 0x401c3d ; pop rbp ; ret
0x00000000004027d1 : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000040226a : mov rcx, qword ptr [rax*8 + 0x40f590] ; jmp rcx
0x0000000000402ac8 : mov rcx, qword ptr [rax*8 + 0x410040] ; jmp rcx
0x0000000000403243 : mov rcx, qword ptr [rax*8 + 0x410090] ; jmp rcx
0x0000000000404666 : mov rcx, qword ptr [rax*8 + 0x4104c0] ; jmp rcx
0x0000000000404946 : mov rcx, qword ptr [rax*8 + 0x410508] ; jmp rcx
0x00000000004061cd : mov rcx, qword ptr [rax*8 + 0x4109c8] ; jmp rcx
0x000000000040739c : mov rcx, qword ptr [rax*8 + 0x410db8] ; jmp rcx
0x000000000040731c : mov rcx, qword ptr [rax*8 + 0x410e18] ; jmp rcx
0x000000000040b153 : mov rcx, qword ptr [rax*8 + 0x410f00] ; jmp rcx
0x000000000040c991 : mov rcx, qword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040c92e : mov rcx, qword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040bfc2 : mov rcx, qword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040d4d2 : mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040dd4e : mov rcx, qword ptr [rbp - 8] ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x000000000040b1bb : mov rcx, qword ptr [rbp - 8] ; mov dword ptr [rcx + 0x18], eax ; pop rbp ; ret
0x000000000040d59f : mov rcx, qword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040db6b : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040bc28 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040bc48 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040bc68 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000040c932 : mov rdi, qword ptr [rcx] ; call rax
0x000000000040c348 : mov rdi, qword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x000000000040c34b : mov rsi, qword ptr [rbp - 0x20] ; call rax
0x000000000040bfc6 : mov rsi, qword ptr [rcx] ; call rax
0x0000000000401c7f : mov rsi, rax ; mov edi, 0x6142e0 ; jmp rdx
0x000000000040c038 : mov rsi, rax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000040b05b : mov rsi, rax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x000000000040b7db : movabs eax, dword ptr [0x5d10c48348000030] ; ret
0x0000000000412b04 : movsb byte ptr [rdi], byte ptr [rsi] ; adc eax, dword ptr [rax] ; add byte ptr [rax], cl ; mov cl, -1 ; call rbx
0x0000000000408484 : movzx eax, al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040b9d7 : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407df0 : movzx eax, al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040ab02 : movzx eax, al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000402a3d : movzx eax, al ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000406f2a : movzx eax, al ; pop rbp ; ret
0x000000000040ef52 : movzx eax, ax ; pop rbp ; ret
0x000000000040dcde : movzx eax, bh ; pop rbp ; ret
0x000000000040ba06 : movzx eax, cl ; pop rbp ; ret
0x000000000040dcdd : movzx eax, dil ; pop rbp ; ret
0x00000000004081d0 : movzx eax, word ptr [rbp - 2] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403247 : nop ; add byte ptr [rcx], al ; jmp rcx
0x000000000040f4e8 : nop dword ptr [rax + rax] ; ret
0x0000000000406013 : or al, 0x25 ; ret 0x4109
0x0000000000402aca : or al, 0xffffffffffffffc5 ; add byte ptr [rcx], al ; jmp rcx
0x00000000004061cf : or al, 0xffffffffffffffc5 ; enter 0x4109, 0 ; jmp rcx
0x0000000000403245 : or al, 0xffffffffffffffc5 ; nop ; add byte ptr [rcx], al ; jmp rcx
0x0000000000404668 : or al, 0xffffffffffffffc5 ; rol byte ptr [rcx + rax*2], 0 ; jmp rcx
0x0000000000404ebe : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000404ebf : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x00000000004061d2 : or dword ptr [rcx], eax ; jmp rcx
0x0000000000405d81 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040edeb : or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x000000000040ee61 : or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000040edea : or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x000000000040dcdb : out 1, eax ; movzx eax, dil ; pop rbp ; ret
0x0000000000406f27 : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040ee60 : out dx, eax ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000040bec9 : outsb dx, byte ptr [rsi] ; ret 0x280f
0x000000000040f4dc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040f4de : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040668e : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040f4e0 : pop r14 ; pop r15 ; ret
0x0000000000406690 : pop r15 ; pop rbp ; ret
0x000000000040f4e2 : pop r15 ; ret
0x0000000000412f68 : pop rax ; ret
0x0000000000412e68 : pop rax ; ret 0xffff
0x00000000004123e8 : pop rax ; test bh, bh ; call qword ptr [rcx]
0x0000000000401ca2 : pop rbp ; mov byte ptr [rip + 0x21268e], 1 ; ret
0x0000000000401c41 : pop rbp ; mov edi, 0x6142e0 ; jmp rax
0x0000000000401c7e : pop rbp ; mov rsi, rax ; mov edi, 0x6142e0 ; jmp rdx
0x000000000040f4db : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040f4df : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401c35 : pop rbp ; ret
0x000000000040668d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004054aa : pop rbx ; pop rbp ; ret
0x0000000000406691 : pop rdi ; pop rbp ; ret
0x000000000040f4e3 : pop rdi ; ret
0x000000000040668f : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040f4e1 : pop rsi ; pop r15 ; ret
0x000000000040f4dd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040bee0 : pop rsp ; ret 0xf66
0x00000000004002d5 : push rax ; jbe 0x40027e ; xchg al, dh ; xchg eax, esi ; jl 0x400327 ; ret
0x0000000000405b1e : push rax ; pop rbp ; ret
0x0000000000404ec2 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000401cc4 : push rbp ; mov edi, 0x613e20 ; mov rbp, rsp ; call rax
0x00000000004027d0 : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000040e0cd : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000040558e : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000411580 : pushfq ; ret
0x000000000040ee5e : rcl ebx, -0x11 ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000040ee8e : rcl ebx, -0x19 ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x00000000004002dd : ret
0x000000000040d55c : ret 0
0x0000000000407e1a : ret 0x110
0x0000000000401b52 : ret 0x2126
0x0000000000401952 : ret 0x2127
0x0000000000401742 : ret 0x2128
0x000000000040beca : ret 0x280f
0x00000000004040e9 : ret 0x30
0x00000000004081fa : ret 0x3948
0x000000000040246a : ret 0x3a
0x0000000000402dca : ret 0x40
0x000000000040f5a8 : ret 0x4022
0x0000000000406015 : ret 0x4109
0x000000000040b5b7 : ret 0x5588
0x00000000004084f6 : ret 0x5589
0x000000000040a827 : ret 0x60
0x00000000004040f7 : ret 0x8148
0x000000000040c7d3 : ret 0x8348
0x0000000000406189 : ret 0x8844
0x0000000000402661 : ret 0x8948
0x0000000000404fed : ret 0x89a5
0x0000000000404ec6 : ret 0x8b48
0x000000000040370a : ret 0x8e0f
0x0000000000402fcc : ret 0x9588
0x00000000004023b1 : ret 0xb0
0x000000000040c856 : ret 0xb948
0x0000000000401c65 : ret 0xc148
0x00000000004023fe : ret 0xd284
0x00000000004023df : ret 0xe280
0x0000000000403225 : ret 0xe883
0x00000000004054dc : ret 0xee8
0x0000000000404edb : ret 0xefe8
0x000000000040a301 : ret 0xf280
0x000000000040bee1 : ret 0xf66
0x000000000040d220 : ret 0xff3
0x00000000004040fa : ret 0xffff
0x00000000004057fe : ret 1
0x0000000000405592 : ret 8
0x0000000000403c20 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040466a : rol byte ptr [rcx + rax*2], 0 ; jmp rcx
0x000000000040ba02 : rol dword ptr [rax - 0x49f0fe1f], -0x3f ; pop rbp ; ret
0x00000000004067cb : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x00000000004045b0 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x40461b ; ret
0x0000000000401c6c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401c7b ; pop rbp ; ret
0x00000000004067cc : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x00000000004045b1 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x40461a ; ret
0x000000000040ab04 : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x000000000040e0ce : ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000040558f : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000040b41a : ror dword ptr [rcx + 0x458bec45], -0x14 ; pop rbp ; ret
0x00000000004002d7 : sahf ; xchg al, dh ; xchg eax, esi ; jl 0x400325 ; ret
0x0000000000403222 : sar dh, -0x77 ; ret 0xe883
0x0000000000401c6e : sar eax, 1 ; jne 0x401c79 ; pop rbp ; ret
0x0000000000401c6d : sar rax, 1 ; jne 0x401c7a ; pop rbp ; ret
0x0000000000412e60 : sbb al, 0 ; add byte ptr [rax], al ; add al, 0x17 ; add byte ptr [rax], al ; pop rax ; ret 0xffff
0x0000000000412f60 : sbb al, 0 ; add byte ptr [rax], al ; add al, 0x18 ; add byte ptr [rax], al ; pop rax ; ret
0x0000000000412fa0 : sbb al, 0 ; add byte ptr [rax], al ; sbb byte ptr [rax], r8b ; add al, cl ; ret
0x000000000040de0f : sbb al, 0 ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000040dd6e : sbb al, 0x24 ; add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000412fa5 : sbb byte ptr [rax], al ; add al, cl ; ret
0x0000000000412fa4 : sbb byte ptr [rax], r8b ; add al, cl ; ret
0x000000000040b48a : sete al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040b48c : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000040beff : shl dword ptr [rsi + 0xf], 0x5c ; ret 0xf66
0x000000000040ee8f : shl edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000040ee28 : shl edx, cl ; or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x000000000040553c : shr al, 1 ; ret 0xffff
0x000000000040ee5f : shr edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000040ede8 : shr edx, cl ; or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x000000000040553b : shr r8b, 1 ; ret 0xffff
0x000000000040a401 : stc ; add eax, 0xf000000 ; xchg eax, esp ; ret 0x9588
0x000000000040f048 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040ad28 : sub al, 0x48 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040f569 : sub esp, 8 ; add rsp, 8 ; ret
0x000000000040f568 : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000407f3e : test al, 0 ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004123e9 : test bh, bh ; call qword ptr [rcx]
0x000000000040f4ea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000402464 : test dword ptr [rax - 0x17000002], ebx ; ret 0x3a
0x00000000004088c3 : test eax, 0x48ffff8e ; add esp, 0x10 ; pop rbp ; ret
0x00000000004002d8 : xchg al, dh ; xchg eax, esi ; jl 0x400324 ; ret
0x0000000000407907 : xchg eax, ebp ; ret 0x9588
0x00000000004023fd : xchg eax, ebp ; ret 0xd284
0x00000000004023de : xchg eax, ebp ; ret 0xe280
0x00000000004002da : xchg eax, esi ; jl 0x400322 ; ret
0x000000000040b5b6 : xchg eax, esp ; ret 0x5588
0x0000000000402fcb : xchg eax, esp ; ret 0x9588
0x0000000000403805 : xchg eax, esp ; ret 0xd284
0x000000000040a300 : xchg eax, esp ; ret 0xf280
0x000000000040ba01 : xchg eax, esp ; rol dword ptr [rax - 0x49f0fe1f], -0x3f ; pop rbp ; ret
0x000000000040b48b : xchg eax, esp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000040edec : xlatb ; mov rax, rdi ; pop rbp ; ret
0x000000000040e4de : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000404426 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
