0x00000000004017a3 : adc byte ptr [rdx + 0x61], 0 ; jmp rax
0x00000000004017e3 : adc byte ptr [rdx + 0x61], 0 ; jmp rdx
0x000000000040f4eb : adc dword ptr [rsi], ecx ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040ebd9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000413a6b : add ah, ah ; or dword ptr [rax], eax ; add al, al ; ret
0x0000000000401d8b : add al, 0x25 ; ret
0x0000000000401d38 : add al, 0x25 ; ret 0x6152
0x000000000041328c : add al, 2 ; add byte ptr [rax], al ; add byte ptr [rbx], -1 ; call qword ptr [rsi]
0x0000000000412c9b : add al, ah ; out -2, al ; call qword ptr [rax]
0x0000000000412e6b : add al, al ; ret
0x0000000000401f81 : add al, ch ; mov ecx, 0xf6fffff8 ; add al, 0x25 ; ret 0x6152
0x00000000004022e7 : add al, ch ; ret
0x00000000004130a7 : add al, cl ; loop 0x4130ad ; jmp rax
0x0000000000412e73 : add al, dh ; ret
0x0000000000412e64 : add bl, -1 ; lcall ptr [rax] ; or eax, dword ptr [rax] ; add al, al ; ret
0x000000000041153f : add bl, dh ; ret
0x0000000000402ad7 : add byte ptr [r8 - 0x77], cl ; ret 0x1fe8
0x0000000000402a83 : add byte ptr [r8 - 0x77], cl ; ret 0x73e8
0x0000000000402a2f : add byte ptr [r8 - 0x77], cl ; ret 0xc7e8
0x0000000000402862 : add byte ptr [r8], r8b ; add dh, dh ; add al, 0x25 ; ret 0x6152
0x0000000000402b51 : add byte ptr [rax + 0x2504f601], dh ; ret
0x000000000040203a : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x4123
0x000000000040cff8 : add byte ptr [rax - 0x75], cl ; push rbp ; call 0x59035150
0x000000000040fbe8 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000402ad8 : add byte ptr [rax - 0x77], cl ; ret 0x1fe8
0x0000000000402a84 : add byte ptr [rax - 0x77], cl ; ret 0x73e8
0x0000000000402a30 : add byte ptr [rax - 0x77], cl ; ret 0xc7e8
0x000000000040d003 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000004136af : add byte ptr [rax], ah ; mov ah, -1 ; call rdx
0x0000000000413a69 : add byte ptr [rax], al ; add ah, ah ; or dword ptr [rax], eax ; add al, al ; ret
0x000000000041328a : add byte ptr [rax], al ; add al, 2 ; add byte ptr [rax], al ; add byte ptr [rbx], -1 ; call qword ptr [rsi]
0x0000000000412c99 : add byte ptr [rax], al ; add al, ah ; out -2, al ; call qword ptr [rax]
0x00000000004022e5 : add byte ptr [rax], al ; add al, ch ; ret
0x00000000004130a5 : add byte ptr [rax], al ; add al, cl ; loop 0x4130af ; jmp rax
0x000000000041153d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000402b4f : add byte ptr [rax], al ; add byte ptr [rax + 0x2504f601], dh ; ret
0x0000000000402038 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x4123
0x000000000040cff6 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbp ; call 0x59035152
0x000000000040d001 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000041153b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000403807 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041153c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000041328e : add byte ptr [rax], al ; add byte ptr [rbx], -1 ; call qword ptr [rsi]
0x00000000004041c5 : add byte ptr [rax], al ; add byte ptr [rcx - 0xfb43], al ; call qword ptr [rax]
0x0000000000402262 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040314d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000403ba7 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000040f4ae : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000402406 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000401d87 : add byte ptr [rax], al ; add dh, al ; add al, 0x25 ; ret
0x0000000000402863 : add byte ptr [rax], al ; add dh, dh ; add al, 0x25 ; ret 0x6152
0x000000000040eb9a : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403ea7 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040135b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000401519 : add byte ptr [rax], al ; jmp 0x401379
0x000000000040d782 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000413a2a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; or dword ptr [rax], eax ; add byte ptr [rax], dl ; ret 0xffff
0x0000000000402b9d : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040faab : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040cd30 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000412e42 : add byte ptr [rax], al ; push rax ; ret 0xffff
0x000000000041153e : add byte ptr [rax], al ; ret
0x0000000000412ca2 : add byte ptr [rax], al ; shr dl, -2 ; jmp rax
0x0000000000412e3b : add byte ptr [rax], dl ; ret 0xffff
0x000000000040faac : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040cd31 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000402306 : add byte ptr [rbx - 0x1134b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000413290 : add byte ptr [rbx], -1 ; call qword ptr [rsi]
0x00000000004041c7 : add byte ptr [rcx - 0xfb43], al ; call qword ptr [rax]
0x0000000000401808 : add byte ptr [rcx], al ; ret
0x0000000000402264 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040314f : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000403ba9 : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000040f4b0 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000402408 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000041328b : add byte ptr [rdx + rax], al ; add byte ptr [rax], al ; add byte ptr [rbx], -1 ; call qword ptr [rsi]
0x0000000000402037 : add byte ptr es:[rax], al ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x4123
0x0000000000401d89 : add dh, al ; add al, 0x25 ; ret
0x0000000000401d36 : add dh, al ; add al, 0x25 ; ret 0x6152
0x0000000000402865 : add dh, dh ; add al, 0x25 ; ret 0x6152
0x000000000040eb98 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040faaa : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040e907 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000403207 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402d14 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000403166 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041109a : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401804 : add eax, 0x213aae ; add ebx, esi ; ret
0x000000000040cd2f : add eax, 0x5d5b0000 ; ret
0x00000000004017cb : add eax, edx ; sar rax, 1 ; jne 0x4017dc ; pop rbp ; ret
0x0000000000401809 : add ebx, esi ; ret
0x0000000000401d84 : add ecx, ebp ; wait ; add byte ptr [rax], al ; add dh, al ; add al, 0x25 ; ret
0x0000000000413291 : add edi, edi ; call qword ptr [rsi]
0x0000000000401d5f : add esi, eax ; add al, 0x25 ; ret 0x6152
0x0000000000402380 : add esi, eax ; mov rax, rsi ; pop rbp ; ret
0x0000000000402b53 : add esi, esi ; add al, 0x25 ; ret
0x00000000004019eb : add esp, 0x10 ; pop rbp ; ret
0x000000000041105c : add esp, 0x130 ; pop rbp ; ret
0x000000000040e904 : add esp, 0x138 ; pop rbx ; pop rbp ; ret
0x0000000000402b99 : add esp, 0x140 ; pop rbp ; ret
0x000000000040d24b : add esp, 0x170 ; pop rbp ; ret
0x0000000000404096 : add esp, 0x1a0 ; pop rbp ; ret
0x00000000004106ae : add esp, 0x1e0 ; pop rbp ; ret
0x000000000040320c : add esp, 0x20 ; pop rbp ; ret
0x0000000000401acd : add esp, 0x30 ; pop rbp ; ret
0x0000000000402d19 : add esp, 0x40 ; pop rbp ; ret
0x000000000040d02f : add esp, 0x50 ; pop rbp ; ret
0x000000000040cd2c : add esp, 0x578 ; pop rbx ; pop rbp ; ret
0x000000000040316b : add esp, 0x60 ; pop rbp ; ret
0x000000000040da13 : add esp, 0x70 ; pop rbp ; ret
0x000000000040eabe : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040ee8d : add esp, 0x90 ; pop rbp ; ret
0x000000000040fc34 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040135e : add esp, 8 ; ret
0x00000000004017ca : add rax, rdx ; sar rax, 1 ; jne 0x4017dd ; pop rbp ; ret
0x000000000040237f : add rsi, rax ; mov rax, rsi ; pop rbp ; ret
0x00000000004019ea : add rsp, 0x10 ; pop rbp ; ret
0x000000000041105b : add rsp, 0x130 ; pop rbp ; ret
0x000000000040e903 : add rsp, 0x138 ; pop rbx ; pop rbp ; ret
0x0000000000402b98 : add rsp, 0x140 ; pop rbp ; ret
0x000000000040d24a : add rsp, 0x170 ; pop rbp ; ret
0x0000000000404095 : add rsp, 0x1a0 ; pop rbp ; ret
0x00000000004106ad : add rsp, 0x1e0 ; pop rbp ; ret
0x000000000040320b : add rsp, 0x20 ; pop rbp ; ret
0x0000000000401acc : add rsp, 0x30 ; pop rbp ; ret
0x0000000000402d18 : add rsp, 0x40 ; pop rbp ; ret
0x000000000040d02e : add rsp, 0x50 ; pop rbp ; ret
0x000000000040cd2b : add rsp, 0x578 ; pop rbx ; pop rbp ; ret
0x000000000040316a : add rsp, 0x60 ; pop rbp ; ret
0x000000000040da12 : add rsp, 0x70 ; pop rbp ; ret
0x000000000040eabd : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040ee8c : add rsp, 0x90 ; pop rbp ; ret
0x000000000040fc33 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040135d : add rsp, 8 ; ret
0x0000000000411099 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401807 : and dword ptr [rax], eax ; add ebx, esi ; ret
0x000000000040eec7 : and eax, 0x48fffffd ; add esp, 0x20 ; pop rbp ; ret
0x0000000000401d31 : and eax, 0x6152c1 ; add dh, al ; add al, 0x25 ; ret 0x6152
0x0000000000401d5a : and eax, 0x6152c1 ; add esi, eax ; add al, 0x25 ; ret 0x6152
0x000000000040361f : and eax, 0x6152e0 ; pop rbp ; ret
0x0000000000403643 : and eax, 0x6152e8 ; pop rbp ; ret
0x000000000040dacb : and eax, dword ptr [rcx] ; jmp rcx
0x0000000000402518 : call 0x31e807
0x0000000000401fc4 : call 0x401848
0x000000000040325d : call 0x493229b0
0x000000000040325c : call 0x493229b1
0x000000000040ce4f : call 0x59034f9f
0x000000000040cffc : call 0x5903514c
0x000000000040e939 : call 0xffffffffe9037289
0x000000000040e938 : call 0xffffffffe903728a
0x0000000000411519 : call qword ptr [r12 + rbx*8]
0x00000000004041cd : call qword ptr [rax]
0x0000000000413293 : call qword ptr [rsi]
0x000000000041151a : call qword ptr [rsp + rbx*8]
0x000000000040182d : call rax
0x00000000004136b3 : call rdx
0x000000000041105a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x000000000040ff9f : clc ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040f4c1 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040d598 : clc ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004017cf : clc ; jne 0x4017d8 ; pop rbp ; ret
0x000000000040d8c5 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000041146b : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402397 : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000403a0f : clc ; mov rdi, qword ptr [rbp - 0x10] ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x000000000040239b : clc ; pop rbp ; ret
0x00000000004121d2 : clc ; sal byte ptr [rax - 0x75], 1 ; ret 0xbe30
0x0000000000410716 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404094 : cld ; add rsp, 0x1a0 ; pop rbp ; ret
0x00000000004102f9 : cld ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000410834 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000411468 : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000410713 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004102f6 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000410831 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401806 : cmp ah, byte ptr [rcx] ; add byte ptr [rcx], al ; ret
0x000000000040203d : cmp al, 0x25 ; ret 0x4123
0x000000000040e906 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040178d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4017a0 ; pop rbp ; ret
0x000000000040f5ec : cwde ; mov rcx, qword ptr [rax*8 + 0x4128d8] ; jmp rcx
0x0000000000402514 : dec dword ptr [rax - 0x75] ; push rbp ; call 0x31e80b
0x000000000040ce4b : dec dword ptr [rax - 0x75] ; push rbp ; call 0x59034fa3
0x0000000000402a4c : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000040230c : dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000410fbf : dec dword ptr [rax - 0x7f] ; ret 1
0x00000000004022e1 : dec dword ptr [rdi] ; test dword ptr [rdi], ebp ; add byte ptr [rax], al ; add al, ch ; ret
0x000000000040e9eb : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000040e323 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000041151c : fmul qword ptr [rax - 0x7d] ; ret
0x00000000004019e9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004017a0 : hlt ; pop rbp ; mov edi, 0x615280 ; jmp rax
0x0000000000412158 : in al, 0xe ; out dx, eax ; mov esi, 0xbf597fc7 ; ret 0xa88f
0x00000000004121b2 : in eax, dx ; leave ; ret 0x3b81
0x000000000040fbf0 : int 0x80
0x0000000000401793 : ja 0x40179a ; pop rbp ; ret
0x00000000004121af : jbe 0x41219e ; scasb al, byte ptr [rdi] ; in eax, dx ; leave ; ret 0x3b81
0x000000000040179f : je 0x40179d ; pop rbp ; mov edi, 0x615280 ; jmp rax
0x0000000000402396 : jge 0x402397 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000403a12 : jge 0x403a0a ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x000000000040151b : jmp 0x401377
0x0000000000401d85 : jmp 0x401e2d
0x0000000000402861 : jmp 0x4028bb
0x0000000000413853 : jmp qword ptr [rax]
0x0000000000413733 : jmp qword ptr [rdx]
0x00000000004017a7 : jmp rax
0x0000000000401d10 : jmp rcx
0x00000000004017e7 : jmp rdx
0x00000000004017d0 : jne 0x4017d7 ; pop rbp ; ret
0x000000000040d24d : jo 0x40d255 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040d2ad : jo 0x40d2b5 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040da15 : jo 0x40da76 ; ret
0x000000000040f124 : jo 0x40f185 ; ret
0x000000000040f25e : jo 0x40f2bf ; ret
0x00000000004121d4 : jo 0x412164 ; ret 0xbe30
0x000000000040cd2e : js 0x40cd3b ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040eac0 : js 0x40eb20 ; pop rbp ; ret
0x0000000000412e40 : js 0x412e51 ; add byte ptr [rax], al ; push rax ; ret 0xffff
0x0000000000412e47 : lcall ptr [rax - 0x7ffffff6] ; ret 0xffff
0x0000000000412e67 : lcall ptr [rax] ; or eax, dword ptr [rax] ; add al, al ; ret
0x00000000004121b5 : leave ; ret 0x3b81
0x00000000004130a9 : loop 0x4130ab ; jmp rax
0x000000000040d41b : loopne 0x40d46b ; add esp, 0x20 ; pop rbp ; ret
0x000000000040d41a : loopne 0x40d46c ; add esp, 0x20 ; pop rbp ; ret
0x00000000004106b0 : loopne 0x4106b8 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004136b1 : mov ah, -1 ; call rdx
0x000000000040effb : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040ee8b : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000411096 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000413731 : mov bh, -1 ; jmp qword ptr [rdx]
0x0000000000403641 : mov byte ptr [0x6152e8], al ; pop rbp ; ret
0x0000000000401803 : mov byte ptr [rip + 0x213aae], 1 ; ret
0x00000000004120a1 : mov ch, 0x48 ; pop rbx ; ret 0x3956
0x0000000000403209 : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402d16 : mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000403168 : mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041109c : mov dh, -0x40 ; pop rbp ; ret
0x0000000000402a81 : mov dl, 0x1e ; add byte ptr [r8 - 0x77], cl ; ret 0x73e8
0x000000000040361d : mov dword ptr [0x6152e0], edi ; pop rbp ; ret
0x0000000000403804 : mov dword ptr [rax + 0x50], 0 ; pop rbp ; ret
0x000000000040d8c6 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040d7d4 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040d888 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000403269 : mov dword ptr [rbp - 0x10], edx ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040d419 : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401ac9 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004019e7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000411469 : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004035fb : mov dword ptr [rbp - 8], eax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402395 : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040d93e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d02b : mov dword ptr [rcx + 0x50], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000403a15 : mov dword ptr [rsi], edi ; pop rbp ; ret
0x000000000040eabc : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000412e50 : mov eax, 0xb000000a ; ret 0xffff
0x000000000040d788 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040febb : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004039f2 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d785 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040326d : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000410153 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d73d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040d7ce : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040d88a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040da0f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040eaba : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040eff9 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000410714 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004102f7 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000410832 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040ff9d : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040f4bf : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040d596 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000402399 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402383 : mov eax, esi ; pop rbp ; ret
0x000000000040182b : mov ebp, esp ; call rax
0x0000000000401791 : mov ebp, esp ; ja 0x40179c ; pop rbp ; ret
0x0000000000401f83 : mov ecx, 0xf6fffff8 ; add al, 0x25 ; ret 0x6152
0x0000000000401d09 : mov ecx, dword ptr [rax*8 + 0x411590] ; jmp rcx
0x000000000040dac7 : mov ecx, dword ptr [rax*8 + 0x4123d0] ; jmp rcx
0x000000000040dda7 : mov ecx, dword ptr [rax*8 + 0x412418] ; jmp rcx
0x000000000040f5ee : mov ecx, dword ptr [rax*8 + 0x4128d8] ; jmp rcx
0x000000000040d7d1 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401825 : mov edi, 0x614e20 ; mov rbp, rsp ; call rax
0x00000000004017a2 : mov edi, 0x615280 ; jmp rax
0x00000000004017e2 : mov edi, 0x615280 ; jmp rdx
0x0000000000403a11 : mov edi, dword ptr [rbp - 0x10] ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x0000000000411517 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000411516 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000041215b : mov esi, 0xbf597fc7 ; ret 0xa88f
0x00000000004017e0 : mov esi, eax ; mov edi, 0x615280 ; jmp rdx
0x000000000040361c : mov qword ptr [0x6152e0], rdi ; pop rbp ; ret
0x0000000000403803 : mov qword ptr [rax + 0x50], 0 ; pop rbp ; ret
0x0000000000403268 : mov qword ptr [rbp - 0x10], rdx ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004035fa : mov qword ptr [rbp - 8], rax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402394 : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040d93d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d02a : mov qword ptr [rcx + 0x50], rax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000403a14 : mov qword ptr [rsi], rdi ; pop rbp ; ret
0x000000000040effa : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040eabb : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x000000000040feba : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004039f1 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d784 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040326c : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000410152 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d73c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040da0e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040eff8 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040ff9c : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040f4be : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040d595 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000402398 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402382 : mov rax, rsi ; pop rbp ; ret
0x000000000040182a : mov rbp, rsp ; call rax
0x0000000000401790 : mov rbp, rsp ; ja 0x40179d ; pop rbp ; ret
0x0000000000401d08 : mov rcx, qword ptr [rax*8 + 0x411590] ; jmp rcx
0x000000000040dac6 : mov rcx, qword ptr [rax*8 + 0x4123d0] ; jmp rcx
0x000000000040dda6 : mov rcx, qword ptr [rax*8 + 0x412418] ; jmp rcx
0x000000000040f5ed : mov rcx, qword ptr [rax*8 + 0x4128d8] ; jmp rcx
0x0000000000403a10 : mov rdi, qword ptr [rbp - 0x10] ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x00000000004017df : mov rsi, rax ; mov edi, 0x615280 ; jmp rdx
0x0000000000413a2c : movsb byte ptr [rdi], byte ptr [rsi] ; or dword ptr [rax], eax ; add byte ptr [rax], dl ; ret 0xffff
0x0000000000403208 : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402d15 : movzx eax, al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000403167 : movzx eax, al ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041109b : movzx eax, al ; pop rbp ; ret
0x0000000000411538 : nop dword ptr [rax + rax] ; ret
0x0000000000413a8d : or al, byte ptr [rax] ; add al, dh ; ret
0x0000000000412e59 : or al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000412e39 : or al, byte ptr [rax] ; add byte ptr [rax], dl ; ret 0xffff
0x000000000040e31e : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040e31f : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x00000000004031f3 : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x00000000004121ad : or ch, byte ptr [rdx + 0x76] ; out -0x52, al ; in eax, dx ; leave ; ret 0x3b81
0x0000000000413a6d : or dword ptr [rax], eax ; add al, al ; ret
0x0000000000413a2d : or dword ptr [rax], eax ; add byte ptr [rax], dl ; ret 0xffff
0x0000000000412e69 : or eax, dword ptr [rax] ; add al, al ; ret
0x0000000000412e71 : or eax, dword ptr [rax] ; add al, dh ; ret
0x000000000040f1e1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402ad5 : or ebx, dword ptr [rdi] ; add byte ptr [r8 - 0x77], cl ; ret 0x1fe8
0x00000000004121b0 : out -0x52, al ; in eax, dx ; leave ; ret 0x3b81
0x0000000000412c9d : out -2, al ; call qword ptr [rax]
0x000000000041215a : out dx, eax ; mov esi, 0xbf597fc7 ; ret 0xa88f
0x000000000041152c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041152e : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040faae : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000411530 : pop r14 ; pop r15 ; ret
0x000000000040fab0 : pop r15 ; pop rbp ; ret
0x0000000000411532 : pop r15 ; ret
0x000000000040d000 : pop rax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000412e38 : pop rax ; or al, byte ptr [rax] ; add byte ptr [rax], dl ; ret 0xffff
0x0000000000401802 : pop rbp ; mov byte ptr [rip + 0x213aae], 1 ; ret
0x00000000004017a1 : pop rbp ; mov edi, 0x615280 ; jmp rax
0x00000000004017de : pop rbp ; mov rsi, rax ; mov edi, 0x615280 ; jmp rdx
0x000000000041152b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041152f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401795 : pop rbp ; ret
0x000000000040faad : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040cd32 : pop rbx ; pop rbp ; ret
0x00000000004120a4 : pop rbx ; ret 0x3956
0x000000000040fab1 : pop rdi ; pop rbp ; ret
0x0000000000411533 : pop rdi ; ret
0x000000000040faaf : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000411531 : pop rsi ; pop r15 ; ret
0x000000000041152d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004121ae : push 0x76 ; out -0x52, al ; in eax, dx ; leave ; ret 0x3b81
0x000000000040d02c : push r8 ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000403806 : push rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040d02d : push rax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040d031 : push rax ; pop rbp ; ret
0x0000000000412e44 : push rax ; ret 0xffff
0x0000000000402517 : push rbp ; call 0x31e808
0x000000000040ce4e : push rbp ; call 0x59034fa0
0x000000000040cffb : push rbp ; call 0x5903514d
0x000000000040e322 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000401824 : push rbp ; mov edi, 0x614e20 ; mov rbp, rsp ; call rax
0x0000000000410c4d : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000040e9ee : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000401f86 : push rsi ; add al, 0x25 ; ret 0x6152
0x0000000000401d32 : rcl dword ptr [rdx + 0x61], 0 ; add dh, al ; add al, 0x25 ; ret 0x6152
0x0000000000401d5b : rcl dword ptr [rdx + 0x61], 0 ; add esi, eax ; add al, 0x25 ; ret 0x6152
0x0000000000401361 : ret
0x0000000000402adb : ret 0x1fe8
0x0000000000401722 : ret 0x213a
0x0000000000401522 : ret 0x213b
0x0000000000412289 : ret 0x21c0
0x0000000000403e82 : ret 0x38e8
0x00000000004120a5 : ret 0x3956
0x00000000004121b6 : ret 0x3b81
0x000000000040203f : ret 0x4123
0x0000000000403263 : ret 0x4240
0x000000000040ce52 : ret 0x58
0x0000000000401d3a : ret 0x6152
0x0000000000402a87 : ret 0x73e8
0x000000000040d006 : ret 0x80
0x000000000040f5a9 : ret 0x8844
0x000000000040cde1 : ret 0x8948
0x000000000040e44d : ret 0x89a5
0x0000000000402660 : ret 0x8b48
0x0000000000412160 : ret 0xa88f
0x0000000000401e71 : ret 0xb0
0x00000000004121d7 : ret 0xbe30
0x00000000004017c5 : ret 0xc148
0x0000000000402a33 : ret 0xc7e8
0x0000000000402267 : ret 0xd284
0x000000000040240b : ret 0xe280
0x000000000040e93c : ret 0xee8
0x000000000040e33b : ret 0xffe8
0x000000000040251a : ret 0xfff1
0x0000000000412e3d : ret 0xffff
0x000000000040204e : ret 1
0x000000000040e9f2 : ret 8
0x000000000040fbeb : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000040da10 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x40da7b ; ret
0x00000000004017cc : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4017db ; pop rbp ; ret
0x000000000040fbec : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x000000000040da11 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x40da7a ; ret
0x0000000000402d17 : ror byte ptr [rax - 0x7d], -0x3c ; pop rbp ; ret
0x0000000000410c4e : ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000040e9ef : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x00000000004121d3 : sal byte ptr [rax - 0x75], 1 ; ret 0xbe30
0x000000000040179e : sal byte ptr [rsp + rsi*8 + 0x5d], -0x41 ; adc byte ptr [rdx + 0x61], 0 ; jmp rax
0x00000000004017ce : sar eax, 1 ; jne 0x4017d9 ; pop rbp ; ret
0x00000000004017cd : sar rax, 1 ; jne 0x4017da ; pop rbp ; ret
0x0000000000413a28 : sbb al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; or dword ptr [rax], eax ; add byte ptr [rax], dl ; ret 0xffff
0x00000000004121ce : sbb ch, byte ptr [rax - 0x2f07686f] ; jo 0x41216a ; ret 0xbe30
0x0000000000401805 : scasb al, byte ptr [rdi] ; cmp ah, byte ptr [rcx] ; add byte ptr [rcx], al ; ret
0x00000000004121b1 : scasb al, byte ptr [rdi] ; in eax, dx ; leave ; ret 0x3b81
0x0000000000412ca4 : shr dl, -2 ; jmp rax
0x0000000000411098 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040f5f2 : sub byte ptr [rcx], al ; jmp rcx
0x000000000040237d : sub eax, edx ; add rsi, rax ; mov rax, rsi ; pop rbp ; ret
0x000000000041156d : sub esp, 8 ; add rsp, 8 ; ret
0x000000000041156c : sub rsp, 8 ; add rsp, 8 ; ret
0x00000000004121cf : test al, -0x6f ; xchg eax, edi ; clc ; sal byte ptr [rax - 0x75], 1 ; ret 0xbe30
0x000000000041153a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000402260 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004022e3 : test dword ptr [rdi], ebp ; add byte ptr [rax], al ; add al, ch ; ret
0x0000000000402036 : test dword ptr [rsi], esp ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x4123
0x0000000000401d0b : vunpckhps xmm0, xmm13, xmmword ptr [rcx] ; jmp rcx
0x0000000000401d86 : wait ; add byte ptr [rax], al ; add dh, al ; add al, 0x25 ; ret
0x0000000000402266 : xchg eax, ebp ; ret 0xd284
0x0000000000403151 : xchg eax, ebp ; ret 0xe280
0x00000000004121d0 : xchg eax, ecx ; xchg eax, edi ; clc ; sal byte ptr [rax - 0x75], 1 ; ret 0xbe30
0x00000000004121d1 : xchg eax, edi ; clc ; sal byte ptr [rax - 0x75], 1 ; ret 0xbe30
0x0000000000403bab : xchg eax, edx ; ret 0xd284
0x000000000040f4b2 : xchg eax, esp ; ret 0xd284
0x000000000040240a : xchg eax, esp ; ret 0xe280
0x0000000000402a7f : xor al, 0x25 ; mov dl, 0x1e ; add byte ptr [r8 - 0x77], cl ; ret 0x73e8
0x0000000000402ad3 : xor al, 0x25 ; or ebx, dword ptr [rdi] ; add byte ptr [r8 - 0x77], cl ; ret 0x1fe8
0x000000000041105e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040d886 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
