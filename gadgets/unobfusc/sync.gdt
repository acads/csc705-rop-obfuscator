0x0000000000403369 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401109 : adc eax, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000040688b : add ah, al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov al, -1 ; call qword ptr [rsi]
0x0000000000401866 : add al, bpl ; ret
0x0000000000403e0b : add al, ch ; call rsp
0x0000000000401867 : add al, ch ; ret
0x0000000000404148 : add al, ch ; ret 0xffd1
0x00000000004058df : add bl, dh ; ret
0x0000000000404eff : add byte ptr [rax - 0x75], cl ; jge 0x404ecb ; call 0x4011b7
0x0000000000404348 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x00000000004058dd : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000404efd : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jge 0x404ecd ; call 0x4011b9
0x00000000004058db : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040688d : add byte ptr [rax], al ; add byte ptr [rax], al ; mov al, -1 ; call qword ptr [rsi]
0x00000000004058dc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000403c3e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040332a : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004030d0 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040110b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000401169 : add byte ptr [rax], al ; jmp 0x401129
0x000000000040706e : add byte ptr [rax], al ; loope 0x407077 ; jmp rax
0x000000000040688f : add byte ptr [rax], al ; mov al, -1 ; call qword ptr [rsi]
0x0000000000401f12 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000404efe : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x40] ; call 0x4011b8
0x0000000000401d28 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040420b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403098 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004058de : add byte ptr [rax], al ; ret
0x000000000040420c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000403099 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000401518 : add byte ptr [rcx], al ; ret
0x0000000000403c40 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000403328 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040420a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000403097 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040543a : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401514 : add eax, 0x206d66 ; add ebx, esi ; ret
0x00000000004014db : add eax, edx ; sar rax, 1 ; jne 0x4014ec ; pop rbp ; ret
0x0000000000401519 : add ebx, esi ; ret
0x000000000040164b : add esp, 0x10 ; pop rbp ; ret
0x000000000040519c : add esp, 0x130 ; pop rbp ; ret
0x0000000000403094 : add esp, 0x138 ; pop rbx ; pop rbp ; ret
0x00000000004044fc : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000401d24 : add esp, 0x1c0 ; pop rbp ; ret
0x0000000000401af0 : add esp, 0x20 ; pop rbp ; ret
0x000000000040172d : add esp, 0x30 ; pop rbp ; ret
0x000000000040370c : add esp, 0x50 ; pop rbp ; ret
0x00000000004021a3 : add esp, 0x70 ; pop rbp ; ret
0x000000000040324e : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040361d : add esp, 0x90 ; pop rbp ; ret
0x0000000000404394 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040110e : add esp, 8 ; ret
0x00000000004014da : add rax, rdx ; sar rax, 1 ; jne 0x4014ed ; pop rbp ; ret
0x000000000040164a : add rsp, 0x10 ; pop rbp ; ret
0x000000000040519b : add rsp, 0x130 ; pop rbp ; ret
0x0000000000403093 : add rsp, 0x138 ; pop rbx ; pop rbp ; ret
0x00000000004044fb : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000401d23 : add rsp, 0x1c0 ; pop rbp ; ret
0x0000000000401aef : add rsp, 0x20 ; pop rbp ; ret
0x000000000040172c : add rsp, 0x30 ; pop rbp ; ret
0x000000000040370b : add rsp, 0x50 ; pop rbp ; ret
0x00000000004021a2 : add rsp, 0x70 ; pop rbp ; ret
0x000000000040324d : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040361c : add rsp, 0x90 ; pop rbp ; ret
0x0000000000404393 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040110d : add rsp, 8 ; ret
0x0000000000405439 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401517 : and byte ptr [rax], al ; add ebx, esi ; ret
0x00000000004033e7 : and dword ptr [rax], 0x81d8558b ; ret 1
0x0000000000403657 : and eax, 0x48fffffd ; add esp, 0x20 ; pop rbp ; ret
0x000000000040189f : and eax, 0x608288 ; pop rbp ; ret
0x00000000004018c3 : and eax, 0x608290 ; pop rbp ; ret
0x0000000000404f04 : call 0x4011b2
0x0000000000404fb3 : call 0x401202
0x00000000004030c9 : call 0xffffffffe902ba19
0x00000000004030c8 : call 0xffffffffe902ba1a
0x00000000004058b9 : call qword ptr [r12 + rbx*8]
0x0000000000406893 : call qword ptr [rsi]
0x00000000004058ba : call qword ptr [rsp + rbx*8]
0x000000000040153d : call rax
0x0000000000406ab3 : call rdx
0x0000000000403e0d : call rsp
0x000000000040519a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x00000000004046ff : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403c51 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004014df : clc ; jne 0x4014e8 ; pop rbp ; ret
0x0000000000402055 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040580b : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040580e : clc ; pop rbp ; ret
0x00000000004052e6 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404b6b : cld ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404ab0 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000405808 : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004052e3 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405286 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404aad : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401862 : cmp al, 0x25 ; std ; pop rcx ; add al, bpl ; ret
0x000000000040253a : cmp byte ptr [rax + rax*2], bl ; jmp rcx
0x0000000000403096 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040149d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4014b0 ; pop rbp ; ret
0x0000000000404f05 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xffff
0x0000000000403d4c : cwde ; mov rcx, qword ptr [rax*8 + 0x4060f8] ; jmp rcx
0x0000000000402535 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; cmp byte ptr [rax + rax*2], bl ; jmp rcx
0x00000000004050ff : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000040317b : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000402ab3 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x00000000004058bc : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000401649 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004014b0 : hlt ; pop rbp ; mov edi, 0x608228 ; jmp rax
0x0000000000401516 : insd dword ptr [rdi], dx ; and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000401515 : insw word ptr [rdi], dx ; and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000404350 : int 0x80
0x00000000004014a3 : ja 0x4014aa ; pop rbp ; ret
0x00000000004014af : je 0x4014ad ; pop rbp ; mov edi, 0x608228 ; jmp rax
0x0000000000404f02 : jge 0x404ec8 ; call 0x4011b4
0x000000000040116b : jmp 0x401127
0x0000000000406c53 : jmp qword ptr [rax]
0x0000000000406b33 : jmp qword ptr [rdx]
0x00000000004014b7 : jmp rax
0x000000000040225e : jmp rcx
0x00000000004014f7 : jmp rdx
0x00000000004014e0 : jne 0x4014e7 ; pop rbp ; ret
0x00000000004021a5 : jo 0x402206 ; ret
0x00000000004038b4 : jo 0x403915 ; ret
0x00000000004039ee : jo 0x403a4f ; ret
0x0000000000403250 : js 0x4032b0 ; pop rbp ; ret
0x0000000000407071 : loope 0x407074 ; jmp rax
0x0000000000407070 : loope 0x407075 ; jmp rax
0x0000000000406891 : mov al, -1 ; call qword ptr [rsi]
0x000000000040378b : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040361b : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000405436 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004018c1 : mov byte ptr [0x608290], al ; pop rbp ; ret
0x0000000000401513 : mov byte ptr [rip + 0x206d66], 1 ; ret
0x000000000040543c : mov dh, -0x40 ; pop rbp ; ret
0x000000000040189d : mov dword ptr [0x608288], edi ; pop rbp ; ret
0x0000000000402056 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000401f64 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000402018 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000401729 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401647 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405809 : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004020ce : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040324c : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000401f18 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040461b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401aec : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401f15 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000401a6f : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004048b3 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401ecd : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401f5e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040201a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040219f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040324a : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000403789 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004052e4 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404b69 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404aae : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004046fd : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403c4f : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040580c : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000404fc1 : mov ebp, 0xffffff00 ; call 0x401207
0x000000000040153b : mov ebp, esp ; call rax
0x00000000004014a1 : mov ebp, esp ; ja 0x4014ac ; pop rbp ; ret
0x0000000000402257 : mov ecx, dword ptr [rax*8 + 0x405bf0] ; jmp rcx
0x0000000000402537 : mov ecx, dword ptr [rax*8 + 0x405c38] ; jmp rcx
0x0000000000403d4e : mov ecx, dword ptr [rax*8 + 0x4060f8] ; jmp rcx
0x0000000000401f61 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401535 : mov edi, 0x607e20 ; mov rbp, rsp ; call rax
0x00000000004014b2 : mov edi, 0x608228 ; jmp rax
0x00000000004014f2 : mov edi, 0x608228 ; jmp rdx
0x0000000000404fc0 : mov edi, dword ptr [rbp - 0x100] ; call 0x401208
0x0000000000404f01 : mov edi, dword ptr [rbp - 0x40] ; call 0x4011b5
0x0000000000404fb1 : mov edi, eax ; call 0x401204
0x00000000004058b7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x00000000004058b6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x00000000004014f0 : mov esi, eax ; mov edi, 0x608228 ; jmp rdx
0x000000000040189c : mov qword ptr [0x608288], rdi ; pop rbp ; ret
0x00000000004020cd : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040378a : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040324b : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x000000000040461a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401aeb : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401f14 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000401a6e : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004048b2 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401ecc : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040219e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000403788 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004046fc : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403c4e : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040153a : mov rbp, rsp ; call rax
0x00000000004014a0 : mov rbp, rsp ; ja 0x4014ad ; pop rbp ; ret
0x0000000000402256 : mov rcx, qword ptr [rax*8 + 0x405bf0] ; jmp rcx
0x0000000000402536 : mov rcx, qword ptr [rax*8 + 0x405c38] ; jmp rcx
0x0000000000403d4d : mov rcx, qword ptr [rax*8 + 0x4060f8] ; jmp rcx
0x0000000000404fbf : mov rdi, qword ptr [rbp - 0x100] ; call 0x401209
0x0000000000404f00 : mov rdi, qword ptr [rbp - 0x40] ; call 0x4011b6
0x0000000000404fb0 : mov rdi, rax ; call 0x401205
0x00000000004014ef : mov rsi, rax ; mov edi, 0x608228 ; jmp rdx
0x000000000040543b : movzx eax, al ; pop rbp ; ret
0x00000000004058d8 : nop dword ptr [rax + rax] ; ret
0x0000000000402538 : or al, 0xffffffffffffffc5 ; cmp byte ptr [rax + rax*2], bl ; jmp rcx
0x0000000000402aae : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000402aaf : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000403971 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004058cc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004058ce : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040420e : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004058d0 : pop r14 ; pop r15 ; ret
0x0000000000404210 : pop r15 ; pop rbp ; ret
0x00000000004058d2 : pop r15 ; ret
0x0000000000401512 : pop rbp ; mov byte ptr [rip + 0x206d66], 1 ; ret
0x00000000004014b1 : pop rbp ; mov edi, 0x608228 ; jmp rax
0x00000000004014ee : pop rbp ; mov rsi, rax ; mov edi, 0x608228 ; jmp rdx
0x00000000004058cb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004058cf : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004014a5 : pop rbp ; ret
0x000000000040420d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040309a : pop rbx ; pop rbp ; ret
0x0000000000401865 : pop rcx ; add al, bpl ; ret
0x0000000000404211 : pop rdi ; pop rbp ; ret
0x00000000004058d3 : pop rdi ; ret
0x000000000040420f : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004058d1 : pop rsi ; pop r15 ; ret
0x00000000004058cd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000401e51 : push 0x48006082 ; add esp, 0x30 ; pop rbp ; ret
0x000000000040370e : push rax ; pop rbp ; ret
0x0000000000402ab2 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000401534 : push rbp ; mov edi, 0x607e20 ; mov rbp, rsp ; call rax
0x0000000000404d8d : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000040317e : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000040505b : push rcx ; ret
0x000000000040028d : ret
0x0000000000401372 : ret 0x206d
0x0000000000401172 : ret 0x206e
0x0000000000403d09 : ret 0x8844
0x0000000000404782 : ret 0x8948
0x0000000000402bdd : ret 0x89a5
0x0000000000402ab6 : ret 0x8b48
0x0000000000402acb : ret 0xafe8
0x0000000000401878 : ret 0xb0
0x00000000004014d5 : ret 0xc148
0x0000000000403c43 : ret 0xd284
0x00000000004030cc : ret 0xee8
0x0000000000404d9a : ret 0xffc5
0x000000000040414a : ret 0xffd1
0x0000000000404f06 : ret 0xffff
0x00000000004033ee : ret 1
0x0000000000403182 : ret 8
0x000000000040434b : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x00000000004021a0 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x40220b ; ret
0x00000000004014dc : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4014eb ; pop rbp ; ret
0x000000000040434c : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x00000000004021a1 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x40220a ; ret
0x0000000000404d8e : ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000040317f : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x00000000004014de : sar eax, 1 ; jne 0x4014e9 ; pop rbp ; ret
0x00000000004014dd : sar rax, 1 ; jne 0x4014ea ; pop rbp ; ret
0x0000000000404f03 : shr al, -0x59 ; ret 0xffff
0x0000000000404ea7 : shr al, 3 ; ret
0x0000000000401864 : std ; pop rcx ; add al, bpl ; ret
0x0000000000405438 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040590d : sub esp, 8 ; add rsp, 8 ; ret
0x000000000040590c : sub rsp, 8 ; add rsp, 8 ; ret
0x00000000004058da : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000402539 : vsubps xmm8, xmm8, xmmword ptr [rax] ; jmp rcx
0x0000000000403c42 : xchg eax, esp ; ret 0xd284
0x000000000040519e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000402016 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
