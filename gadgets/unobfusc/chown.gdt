0x000000000040e5b1 : adc al, -0x75 ; hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040aa83 : adc al, byte ptr [rcx + 0x4f9] ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x000000000040a9f8 : adc al, byte ptr [rcx + 0x4f9] ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf280
0x00000000004074c7 : adc byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; call qword ptr [rsi]
0x000000000040ae27 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000405889 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004068d2 : adc eax, dword ptr [rcx] ; jmp rcx
0x0000000000412323 : add ah, ah ; add dword ptr [rax], eax ; add byte ptr [rax], bl ; sbb bh, bh ; call rsp
0x0000000000411f6f : add ah, bh ; ret 0xffff
0x00000000004125a5 : add al, 0 ; add al, bl ; xor edi, edi ; call rdx
0x000000000040c76a : add al, 0x48 ; add eax, ecx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000412347 : add al, bl ; sbb bh, bh ; call qword ptr [rsi]
0x00000000004125a7 : add al, bl ; xor edi, edi ; call rdx
0x0000000000412345 : add al, byte ptr [rax] ; add al, bl ; sbb bh, bh ; call qword ptr [rsi]
0x00000000004130c7 : add al, ch ; mov dr1, edi ; jmp qword ptr [rcx]
0x0000000000406cc8 : add al, ch ; ret 0xffad
0x000000000040fbef : add bl, dh ; ret
0x000000000040e713 : add byte ptr [r8 - 0x77], cl ; call 0xffffffffff71aa0c
0x0000000000402940 : add byte ptr [r8], al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403c6d : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x0000000000406ec8 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000040e714 : add byte ptr [rax - 0x77], cl ; call 0xffffffffff71aa0b
0x0000000000402521 : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x00000000004125a2 : add byte ptr [rax], al ; add al, 0 ; add al, bl ; xor edi, edi ; call rdx
0x000000000040fbed : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000403c6b : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x000000000040251f : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000040fbeb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040256a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040d0dd : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000409c8f : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000407cc9 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000404246 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004028da : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040fbec : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000402aa9 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7478b], cl ; ret 0xb0
0x0000000000402b34 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b74b8b], cl ; ret 0xb0
0x0000000000408003 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x9588
0x000000000040256c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040254d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000040aa87 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x0000000000403911 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040a9fc : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf280
0x0000000000413a9e : add byte ptr [rax], al ; add cl, -1 ; call qword ptr [rax]
0x000000000040584a : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004055f0 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402941 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000409c91 : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004017ab : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004130c6 : add byte ptr [rax], al ; call 0x22413060
0x0000000000413526 : add byte ptr [rax], al ; call 0xffffffffd44134df
0x0000000000411f6e : add byte ptr [rax], al ; cld ; ret 0xffff
0x0000000000412d06 : add byte ptr [rax], al ; fcomp dword ptr [rdi - 1] ; jmp qword ptr [rdx]
0x0000000000413522 : add byte ptr [rax], al ; in al, 0x13 ; add byte ptr [rax], al ; call 0xffffffffd44134e3
0x00000000004018c9 : add byte ptr [rax], al ; jmp 0x4017c9
0x0000000000411f7e : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret
0x000000000040f6cc : add byte ptr [rax], al ; mov al, sil ; movzx eax, al ; pop rbp ; ret
0x000000000040f64d : add byte ptr [rax], al ; mov ax, si ; movzx eax, ax ; pop rbp ; ret
0x0000000000407ccb : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000404432 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000404248 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004028dc : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000406d8b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004055b8 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004120de : add byte ptr [rax], al ; pop rsp ; loope 0x4120e7 ; call rsp
0x0000000000411f66 : add byte ptr [rax], al ; pushfq ; ret 0xffff
0x000000000040fbee : add byte ptr [rax], al ; ret
0x00000000004130c2 : add byte ptr [rax], al ; test byte ptr [rdi], cl ; add byte ptr [rax], al ; call 0x22413064
0x00000000004128e7 : add byte ptr [rax], bl ; cmp bh, bh ; call rdi
0x0000000000412327 : add byte ptr [rax], bl ; sbb bh, bh ; call rsp
0x0000000000400283 : add byte ptr [rbp + 0xdb771ab], cl ; ret 0x9bce
0x0000000000406d8c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004055b9 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000402aab : add byte ptr [rbx - 0x76b7478b], cl ; ret 0xb0
0x0000000000402b36 : add byte ptr [rbx - 0x76b74b8b], cl ; ret 0xb0
0x0000000000407fff : add byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x9588
0x00000000004120df : add byte ptr [rcx - 1], bl ; call rsp
0x0000000000401d48 : add byte ptr [rcx], al ; ret
0x0000000000408005 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x9588
0x000000000040256e : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040254f : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000040aa89 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x0000000000403913 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040a9fe : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf280
0x000000000040c5dd : add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x00000000004125a3 : add byte ptr [rsp + rax], ah ; add al, bl ; xor edi, edi ; call rdx
0x0000000000413aa0 : add cl, -1 ; call qword ptr [rax]
0x000000000040e3dc : add dword ptr [rax + 0xf], eax ; mov dh, -0x39 ; pop rbp ; ret
0x0000000000405848 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408415 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000412325 : add dword ptr [rax], eax ; add byte ptr [rax], bl ; sbb bh, bh ; call rsp
0x0000000000406d8a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004055b7 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040c105 : add dword ptr [rdi], ecx ; mov dh, -0x3f ; pop rbp ; ret
0x0000000000408b83 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040c0d6 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004084ef : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040b201 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000402b4c : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000407629 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x000000000040bcb4 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x5588
0x0000000000401d44 : add eax, 0x21262e ; add ebx, esi ; ret
0x000000000040ab02 : add eax, 0xf000000 ; xchg eax, esp ; ret 0x9588
0x000000000040c76c : add eax, ecx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401d0b : add eax, edx ; sar rax, 1 ; jne 0x401d1c ; pop rbp ; ret
0x0000000000401d49 : add ebx, esi ; ret
0x0000000000401fcb : add esp, 0x10 ; pop rbp ; ret
0x000000000040ae25 : add esp, 0x110 ; pop rbp ; ret
0x000000000040ebdc : add esp, 0x130 ; pop rbp ; ret
0x00000000004055b4 : add esp, 0x138 ; pop rbx ; pop rbp ; ret
0x000000000040707c : add esp, 0x1a0 ; pop rbp ; ret
0x000000000040c30f : add esp, 0x1b0 ; pop rbp ; ret
0x000000000040f32e : add esp, 0x1e0 ; pop rbp ; ret
0x00000000004036ca : add esp, 0x1f0 ; pop rbp ; ret
0x0000000000404080 : add esp, 0x20 ; pop rbp ; ret
0x00000000004020ad : add esp, 0x30 ; pop rbp ; ret
0x0000000000408efd : add esp, 0x40 ; pop rbp ; ret
0x0000000000405c2c : add esp, 0x50 ; pop rbp ; ret
0x0000000000402b51 : add esp, 0x60 ; pop rbp ; ret
0x00000000004046c3 : add esp, 0x70 ; pop rbp ; ret
0x000000000040576e : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040d493 : add esp, 0x80 ; pop rbp ; ret
0x0000000000405b3d : add esp, 0x90 ; pop rbp ; ret
0x00000000004061e8 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040db4c : add esp, 0xc0 ; pop rbp ; ret
0x0000000000403d2e : add esp, 0xd0 ; pop rbp ; ret
0x0000000000403981 : add esp, 0xe0 ; pop rbp ; ret
0x00000000004017ae : add esp, 8 ; ret
0x000000000040c76b : add rax, rcx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401d0a : add rax, rdx ; sar rax, 1 ; jne 0x401d1d ; pop rbp ; ret
0x0000000000401fca : add rsp, 0x10 ; pop rbp ; ret
0x000000000040ae24 : add rsp, 0x110 ; pop rbp ; ret
0x000000000040ebdb : add rsp, 0x130 ; pop rbp ; ret
0x00000000004055b3 : add rsp, 0x138 ; pop rbx ; pop rbp ; ret
0x000000000040707b : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000040c30e : add rsp, 0x1b0 ; pop rbp ; ret
0x000000000040f32d : add rsp, 0x1e0 ; pop rbp ; ret
0x00000000004036c9 : add rsp, 0x1f0 ; pop rbp ; ret
0x000000000040407f : add rsp, 0x20 ; pop rbp ; ret
0x00000000004020ac : add rsp, 0x30 ; pop rbp ; ret
0x0000000000408efc : add rsp, 0x40 ; pop rbp ; ret
0x0000000000405c2b : add rsp, 0x50 ; pop rbp ; ret
0x0000000000402b50 : add rsp, 0x60 ; pop rbp ; ret
0x00000000004046c2 : add rsp, 0x70 ; pop rbp ; ret
0x000000000040576d : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040d492 : add rsp, 0x80 ; pop rbp ; ret
0x0000000000405b3c : add rsp, 0x90 ; pop rbp ; ret
0x00000000004061e7 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040db4b : add rsp, 0xc0 ; pop rbp ; ret
0x0000000000403d2d : add rsp, 0xd0 ; pop rbp ; ret
0x0000000000403980 : add rsp, 0xe0 ; pop rbp ; ret
0x00000000004017ad : add rsp, 8 ; ret
0x0000000000407628 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040e3da : and bh, 1 ; movzx eax, dil ; pop rbp ; ret
0x00000000004030d8 : and byte ptr [r15], cl ; xchg eax, esp ; ret 0x9588
0x00000000004030d9 : and byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x000000000040c103 : and cl, 1 ; movzx eax, cl ; pop rbp ; ret
0x000000000040e3d9 : and dil, 1 ; movzx eax, dil ; pop rbp ; ret
0x0000000000401d47 : and dword ptr [rax], eax ; add ebx, esi ; ret
0x0000000000401d46 : and dword ptr es:[rax], eax ; add ebx, esi ; ret
0x000000000040cb45 : and eax, 0x411a50 ; mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x0000000000405b77 : and eax, 0x48fffffd ; add esp, 0x20 ; pop rbp ; ret
0x0000000000403e2f : and eax, 0x614398 ; pop rbp ; ret
0x0000000000403e53 : and eax, 0x6143a0 ; pop rbp ; ret
0x00000000004130c8 : call 0x2241305e
0x0000000000404204 : call 0x4902cb54
0x0000000000404203 : call 0x4902cb55
0x0000000000404204 : call 0x4902cb57
0x0000000000404203 : call 0x4902cb58
0x0000000000413528 : call 0xffffffffd44134dd
0x00000000004055e9 : call 0xffffffffe902df39
0x00000000004055e8 : call 0xffffffffe902df3a
0x0000000000407a20 : call 0xffffffffff40bb40
0x000000000040e718 : call 0xffffffffff71aa07
0x000000000040e717 : call 0xffffffffff71aa08
0x000000000040d031 : call 0xffffffffff7a5b82
0x000000000040d030 : call 0xffffffffff7a5b83
0x000000000040d16f : call 0xffffffffff7a5cc0
0x000000000040d16e : call 0xffffffffff7a5cc1
0x000000000040fbc9 : call qword ptr [r12 + rbx*8]
0x0000000000413aa3 : call qword ptr [rax]
0x0000000000412e0b : call qword ptr [rcx]
0x000000000041314b : call qword ptr [rdx]
0x00000000004074cc : call qword ptr [rsi]
0x000000000040fbca : call qword ptr [rsp + rbx*8]
0x0000000000401d6d : call rax
0x000000000041326b : call rbx
0x00000000004128eb : call rdi
0x00000000004125ab : call rdx
0x00000000004120e3 : call rsp
0x000000000040e2fd : clc ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040ae23 : clc ; add rsp, 0x110 ; pop rbp ; ret
0x000000000040ebda : clc ; add rsp, 0x130 ; pop rbp ; ret
0x000000000040727f : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406171 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040b70b : clc ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000408ab6 : clc ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040dd25 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000409b3c : clc ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000408399 : clc ; add rsp, 0x90 ; pop rbp ; ret
0x00000000004061e6 : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x000000000040e236 : clc ; add rsp, 0xc0 ; pop rbp ; ret
0x0000000000401d0f : clc ; jne 0x401d18 ; pop rbp ; ret
0x000000000040e50c : clc ; mov byte ptr [rax + 0x1c], 0 ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000404575 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040e451 : clc ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x000000000040b8be : clc ; mov dword ptr [rcx + 0x18], eax ; pop rbp ; ret
0x000000000040b425 : clc ; mov dword ptr [rcx + 0x2c], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040bfc7 : clc ; mov dword ptr [rdi + 0x18], 0x95f616 ; pop rbp ; ret
0x000000000040fb1b : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040e26e : clc ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000402887 : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040c32b : clc ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040c34b : clc ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040c36b : clc ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000040288b : clc ; pop rbp ; ret
0x0000000000407cc8 : cld ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040f396 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040b4b2 : cld ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040be00 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000408efb : cld ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040db4a : cld ; add rsp, 0xc0 ; pop rbp ; ret
0x000000000040397f : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000040fb18 : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040f393 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040ee8b : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040bdfd : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000407ccf : cld ; pop rbp ; ret
0x0000000000411f70 : cld ; ret 0xffff
0x00000000004074ca : cmp al, 0x25 ; call qword ptr [rsi]
0x0000000000403c70 : cmp al, 0x25 ; ret
0x00000000004128e9 : cmp bh, bh ; call rdi
0x00000000004055b6 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040ca4a : cmp dword ptr [rax - 0x75], ecx ; jne 0x40ca34 ; call rax
0x000000000040293f : cmp eax, 0x4800004b ; add esp, 0x30 ; pop rbp ; ret
0x0000000000401ccd : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401ce0 ; pop rbp ; ret
0x00000000004068cc : cwde ; mov rcx, qword ptr [rax*8 + 0x4113a0] ; jmp rcx
0x0000000000407a1b : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; call 0xffffffffff40bb45
0x0000000000403352 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; push rax ; or al, byte ptr [rcx] ; jmp rcx
0x000000000040eb3f : dec dword ptr [rax - 0x7f] ; ret 1
0x0000000000411f7b : dec dword ptr [rdx + rbx] ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret
0x0000000000411f6b : dec esp ; sbb dword ptr [rax], eax ; add ah, bh ; ret 0xffff
0x000000000040bb50 : div dword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000040bb4f : div qword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000040569b : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000040ca47 : enter -0x74b8, 0x39 ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x00000000004062f0 : enter -0x7cb8, -0x3c ; push rax ; pop rbp ; ret
0x000000000040bcbc : fbld dword ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000040bcbd : fbld dword ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x0000000000412d08 : fcomp dword ptr [rdi - 1] ; jmp qword ptr [rdx]
0x0000000000404fd3 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040fbcc : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000401fc9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040af36 : hlt ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040e44d : hlt ; mov rcx, qword ptr [rbp - 8] ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x0000000000401ce0 : hlt ; pop rbp ; mov edi, 0x614308 ; jmp rax
0x0000000000412161 : idiv dh ; call rax
0x0000000000413524 : in al, 0x13 ; add byte ptr [rax], al ; call 0xffffffffd44134e1
0x00000000004074c6 : in al, dx ; adc byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; call qword ptr [rsi]
0x0000000000407d2d : in al, dx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040bb1d : in al, dx ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000040bb20 : in al, dx ; pop rbp ; ret
0x00000000004028e3 : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x0000000000406ed0 : int 0x80
0x0000000000401cd3 : ja 0x401cda ; pop rbp ; ret
0x000000000040e271 : ja 0x40e2be ; pop rbp ; ret
0x00000000004002d6 : jbe 0x40027d ; xchg al, dh ; xchg eax, esi ; jl 0x400326 ; ret
0x0000000000401cdf : je 0x401cdd ; pop rbp ; mov edi, 0x614308 ; jmp rax
0x0000000000402886 : jge 0x402887 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004028e6 : jge 0x4028e3 ; pop rbp ; ret
0x000000000040c32a : jge 0x40c32b ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040c34a : jge 0x40c34b ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040c36a : jge 0x40c36b ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000040c6c0 : jge 0x40c6b3 ; mov rcx, qword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040dbd0 : jge 0x40dbc3 ; mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040e26d : jge 0x40e26e ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x00000000004002db : jl 0x400321 ; ret
0x00000000004018cb : jmp 0x4017c7
0x000000000040ddb1 : jmp 0x40ddb4
0x000000000040ced0 : jmp 0x49035820
0x000000000040d90e : jmp 0x4903625e
0x000000000040d97b : jmp 0x490362cb
0x000000000040e0b2 : jmp 0x49036a02
0x000000000040e11f : jmp 0x49036a6f
0x000000000041274b : jmp qword ptr [rax]
0x00000000004130cb : jmp qword ptr [rcx]
0x00000000004133ab : jmp qword ptr [rdi]
0x000000000041262b : jmp qword ptr [rdx]
0x0000000000401ce7 : jmp rax
0x000000000040236e : jmp rcx
0x0000000000401d27 : jmp rdx
0x0000000000401d10 : jne 0x401d17 ; pop rbp ; ret
0x000000000040b759 : jne 0x40b73c ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x000000000040bb51 : jne 0x40bb49 ; mov rax, rdx ; pop rbp ; ret
0x000000000040bc62 : jne 0x40bc5a ; mov rax, rdx ; pop rbp ; ret
0x000000000040c736 : jne 0x40c721 ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000040ca4d : jne 0x40ca31 ; call rax
0x0000000000400286 : jno 0x400246 ; or eax, 0x79bcec2 ; ret
0x00000000004046c5 : jo 0x404726 ; ret
0x0000000000405dd4 : jo 0x405e35 ; ret
0x0000000000405f0e : jo 0x405f6f ; ret
0x0000000000409b40 : jo 0x409ba1 ; ret
0x000000000040aaff : jo 0x40aa8b ; stc ; add eax, 0xf000000 ; xchg eax, esp ; ret 0x9588
0x0000000000405770 : js 0x4057d0 ; pop rbp ; ret
0x0000000000411f80 : lodsb al, byte ptr [rsi] ; ret
0x000000000040f529 : loop 0x40f57b ; or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x000000000040f611 : loop 0x40f663 ; or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x000000000040c104 : loope 0x40c10d ; movzx eax, cl ; pop rbp ; ret
0x00000000004120e1 : loope 0x4120e4 ; call rsp
0x0000000000403983 : loopne 0x40398a ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004067d1 : loopne 0x4067d8 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040757b : loopne 0x4075cb ; add esp, 0x20 ; pop rbp ; ret
0x000000000040757a : loopne 0x4075cc ; add esp, 0x20 ; pop rbp ; ret
0x0000000000407c61 : loopne 0x407c68 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000409f5d : loopne 0x409f64 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040c737 : loopne 0x40c789 ; mov esi, eax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000040f330 : loopne 0x40f338 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040c63e : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000405cab : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000405b3b : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x000000000040c311 : mov al, 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000407625 : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040bcbb : mov al, byte ptr [rbp - 0x21] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040c525 : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040f746 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040e46c : mov al, byte ptr [rdi + 0x1c] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040f6cf : mov al, dh ; movzx eax, al ; pop rbp ; ret
0x000000000040f6ce : mov al, sil ; movzx eax, al ; pop rbp ; ret
0x000000000040f64f : mov ax, si ; movzx eax, ax ; pop rbp ; ret
0x000000000040f653 : mov bh, -0x40 ; pop rbp ; ret
0x0000000000400287 : mov bh, 0xd ; ret 0x9bce
0x0000000000403e51 : mov byte ptr [0x6143a0], al ; pop rbp ; ret
0x000000000040e50d : mov byte ptr [rax + 0x1c], 0 ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000401d43 : mov byte ptr [rip + 0x21262e], 1 ; ret
0x000000000040e3df : mov dh, -0x39 ; pop rbp ; ret
0x000000000040c107 : mov dh, -0x3f ; pop rbp ; ret
0x0000000000408b85 : mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040c0d8 : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004084f1 : mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040b203 : mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000402b4e : mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040762b : mov dh, -0x40 ; pop rbp ; ret
0x00000000004130c9 : mov dr1, edi ; jmp qword ptr [rcx]
0x0000000000403e2d : mov dword ptr [0x614398], edi ; pop rbp ; ret
0x0000000000404576 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000404484 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000404538 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040bb1b : mov dword ptr [rbp - 0x14], eax ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x00000000004020a9 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040c63c : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401fc7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040fb19 : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040c9cb : mov dword ptr [rbp - 8], eax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402885 : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004028e5 : mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x000000000040e452 : mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x000000000040b8bf : mov dword ptr [rcx + 0x18], eax ; pop rbp ; ret
0x000000000040b426 : mov dword ptr [rcx + 0x2c], eax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004045ee : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b048 : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040cb4a : mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x000000000040bfc8 : mov dword ptr [rdi + 0x18], 0x95f616 ; pop rbp ; ret
0x00000000004028d7 : mov dword ptr [rdi + 0x20], 0 ; pop rbp ; ret
0x000000000040e270 : mov dword ptr [rdi + 0x48], esi ; pop rbp ; ret
0x000000000040576c : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x00000000004030d6 : mov eax, 0xf20413b ; xchg eax, esp ; ret 0x9588
0x0000000000404438 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040719b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040407c : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404435 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000403fff : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000407d2b : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040bb1e : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000407433 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403e0b : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040447e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040424b : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000407579 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040c73c : mov eax, dword ptr [rbp - 0x20] ; call rax
0x000000000040de2f : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040b75f : mov eax, dword ptr [rbp - 0x28] ; call rax
0x000000000040453a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004062ee : mov eax, dword ptr [rbp - 0x38] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004046bf : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040576a : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000405ca9 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040e5b2 : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040af34 : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040f394 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040b4b0 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040bdfe : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000408ef9 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000407ccd : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040e2fb : mov eax, dword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040727d : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040616f : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040b709 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000408ab4 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040dd23 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000409b3a : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000402889 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040c32d : mov eax, dword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040c34d : mov eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040c36d : mov eax, dword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000040f4ee : mov eax, edi ; pop rbp ; ret
0x000000000040cd31 : mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040bb54 : mov eax, edx ; pop rbp ; ret
0x000000000040f650 : mov eax, esi ; movzx eax, ax ; pop rbp ; ret
0x000000000040f563 : mov eax, esi ; pop rbp ; ret
0x0000000000401d6b : mov ebp, esp ; call rax
0x0000000000401cd1 : mov ebp, esp ; ja 0x401cdc ; pop rbp ; ret
0x00000000004028e2 : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000402367 : mov ecx, dword ptr [rax*8 + 0x40fc90] ; jmp rcx
0x0000000000402bd9 : mov ecx, dword ptr [rax*8 + 0x410a00] ; jmp rcx
0x0000000000403354 : mov ecx, dword ptr [rax*8 + 0x410a50] ; jmp rcx
0x0000000000404777 : mov ecx, dword ptr [rax*8 + 0x410e70] ; jmp rcx
0x0000000000404a57 : mov ecx, dword ptr [rax*8 + 0x410eb8] ; jmp rcx
0x00000000004068ce : mov ecx, dword ptr [rax*8 + 0x4113a0] ; jmp rcx
0x0000000000407a9d : mov ecx, dword ptr [rax*8 + 0x411788] ; jmp rcx
0x0000000000407a1d : mov ecx, dword ptr [rax*8 + 0x4117e8] ; jmp rcx
0x000000000040b854 : mov ecx, dword ptr [rax*8 + 0x4118d0] ; jmp rcx
0x0000000000404481 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040d092 : mov ecx, dword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040d02f : mov ecx, dword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040c6c3 : mov ecx, dword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040dbd3 : mov ecx, dword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040e44f : mov ecx, dword ptr [rbp - 8] ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x000000000040b8bc : mov ecx, dword ptr [rbp - 8] ; mov dword ptr [rcx + 0x18], eax ; pop rbp ; ret
0x000000000040dca0 : mov ecx, dword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040f58d : mov ecx, eax ; shl edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000040f55d : mov ecx, eax ; shr edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000401d65 : mov edi, 0x613e20 ; mov rbp, rsp ; call rax
0x0000000000401ce2 : mov edi, 0x614308 ; jmp rax
0x0000000000401d22 : mov edi, 0x614308 ; jmp rdx
0x000000000040e26c : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040c329 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040c349 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040c369 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000040d033 : mov edi, dword ptr [rcx] ; call rax
0x000000000040ca49 : mov edi, dword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x000000000040fbc7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000040fbc6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000408f5a : mov esi, 0x48ffffff ; add esp, 0x10 ; pop rbp ; ret
0x000000000040cb12 : mov esi, 0x48ffffff ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040ca4c : mov esi, dword ptr [rbp - 0x20] ; call rax
0x000000000040c6c7 : mov esi, dword ptr [rcx] ; call rax
0x0000000000401d20 : mov esi, eax ; mov edi, 0x614308 ; jmp rdx
0x000000000040c739 : mov esi, eax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000040b75c : mov esi, eax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x0000000000403e2c : mov qword ptr [0x614398], rdi ; pop rbp ; ret
0x000000000040c9ca : mov qword ptr [rbp - 8], rax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402884 : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004028e4 : mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x00000000004045ed : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b047 : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004028d6 : mov qword ptr [rdi + 0x20], 0 ; pop rbp ; ret
0x000000000040e26f : mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040c63d : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000405caa : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040576b : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x000000000040719a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040407b : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404434 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000403ffe : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000407432 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403e0a : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040424a : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000407578 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040c73b : mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000040de2e : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040b75e : mov rax, qword ptr [rbp - 0x28] ; call rax
0x00000000004062ed : mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004046be : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000405ca8 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040e2fa : mov rax, qword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040727c : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040616e : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040b708 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000408ab3 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040dd22 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000409b39 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000402888 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040c32c : mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040c34c : mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040c36c : mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000040f4ed : mov rax, rdi ; pop rbp ; ret
0x000000000040cd30 : mov rax, rdx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040bb53 : mov rax, rdx ; pop rbp ; ret
0x0000000000401d6a : mov rbp, rsp ; call rax
0x0000000000401cd0 : mov rbp, rsp ; ja 0x401cdd ; pop rbp ; ret
0x00000000004028e1 : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000402366 : mov rcx, qword ptr [rax*8 + 0x40fc90] ; jmp rcx
0x0000000000402bd8 : mov rcx, qword ptr [rax*8 + 0x410a00] ; jmp rcx
0x0000000000403353 : mov rcx, qword ptr [rax*8 + 0x410a50] ; jmp rcx
0x0000000000404776 : mov rcx, qword ptr [rax*8 + 0x410e70] ; jmp rcx
0x0000000000404a56 : mov rcx, qword ptr [rax*8 + 0x410eb8] ; jmp rcx
0x00000000004068cd : mov rcx, qword ptr [rax*8 + 0x4113a0] ; jmp rcx
0x0000000000407a9c : mov rcx, qword ptr [rax*8 + 0x411788] ; jmp rcx
0x0000000000407a1c : mov rcx, qword ptr [rax*8 + 0x4117e8] ; jmp rcx
0x000000000040b853 : mov rcx, qword ptr [rax*8 + 0x4118d0] ; jmp rcx
0x000000000040d091 : mov rcx, qword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040d02e : mov rcx, qword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040c6c2 : mov rcx, qword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040dbd2 : mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040e44e : mov rcx, qword ptr [rbp - 8] ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x000000000040b8bb : mov rcx, qword ptr [rbp - 8] ; mov dword ptr [rcx + 0x18], eax ; pop rbp ; ret
0x000000000040dc9f : mov rcx, qword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040e26b : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040c328 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040c348 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040c368 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000040d032 : mov rdi, qword ptr [rcx] ; call rax
0x000000000040ca48 : mov rdi, qword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x000000000040ca4b : mov rsi, qword ptr [rbp - 0x20] ; call rax
0x000000000040c6c6 : mov rsi, qword ptr [rcx] ; call rax
0x0000000000401d1f : mov rsi, rax ; mov edi, 0x614308 ; jmp rdx
0x000000000040c738 : mov rsi, rax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000040b75b : mov rsi, rax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x00000000004120dc : mov word ptr [rdi], ds ; add byte ptr [rax], al ; pop rsp ; loope 0x4120e9 ; call rsp
0x000000000040bedb : movabs eax, dword ptr [0x5d10c48348000030] ; ret
0x0000000000408b84 : movzx eax, al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040c0d7 : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004084f0 : movzx eax, al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040b202 : movzx eax, al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000402b4d : movzx eax, al ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040762a : movzx eax, al ; pop rbp ; ret
0x000000000040f652 : movzx eax, ax ; pop rbp ; ret
0x000000000040e3de : movzx eax, bh ; pop rbp ; ret
0x000000000040c106 : movzx eax, cl ; pop rbp ; ret
0x000000000040e3dd : movzx eax, dil ; pop rbp ; ret
0x00000000004088d0 : movzx eax, word ptr [rbp - 2] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040fbe8 : nop dword ptr [rax + rax] ; ret
0x0000000000411f7c : or al, 0x1a ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret
0x0000000000407a1e : or al, 0xffffffffffffffc5 ; call 0xffffffffff40bb42
0x0000000000403355 : or al, 0xffffffffffffffc5 ; push rax ; or al, byte ptr [rcx] ; jmp rcx
0x0000000000402bdd : or al, byte ptr [rcx] ; jmp rcx
0x0000000000404fce : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000404fcf : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000400288 : or eax, 0x79bcec2 ; ret
0x0000000000405e91 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040f4eb : or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x000000000040f561 : or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000040f4ea : or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x000000000040e3db : out 1, eax ; movzx eax, dil ; pop rbp ; ret
0x0000000000407627 : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040f560 : out dx, eax ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000040c5c9 : outsb dx, byte ptr [rsi] ; ret 0x280f
0x000000000040fbdc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040fbde : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000406d8e : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040fbe0 : pop r14 ; pop r15 ; ret
0x0000000000406d90 : pop r15 ; pop rbp ; ret
0x000000000040fbe2 : pop r15 ; ret
0x0000000000401d42 : pop rbp ; mov byte ptr [rip + 0x21262e], 1 ; ret
0x0000000000401ce1 : pop rbp ; mov edi, 0x614308 ; jmp rax
0x0000000000401d1e : pop rbp ; mov rsi, rax ; mov edi, 0x614308 ; jmp rdx
0x000000000040fbdb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040fbdf : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401cd5 : pop rbp ; ret
0x0000000000406d8d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004055ba : pop rbx ; pop rbp ; ret
0x0000000000406d91 : pop rdi ; pop rbp ; ret
0x000000000040fbe3 : pop rdi ; ret
0x0000000000406d8f : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040fbe1 : pop rsi ; pop r15 ; ret
0x00000000004120e0 : pop rsp ; loope 0x4120e5 ; call rsp
0x000000000040fbdd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040c5e0 : pop rsp ; ret 0xf66
0x0000000000404371 : push 0x48006143 ; add esp, 0x30 ; pop rbp ; ret
0x00000000004002d5 : push rax ; jbe 0x40027e ; xchg al, dh ; xchg eax, esi ; jl 0x400327 ; ret
0x0000000000403357 : push rax ; or al, byte ptr [rcx] ; jmp rcx
0x0000000000405c2e : push rax ; pop rbp ; ret
0x000000000040cb46 : push rax ; sbb al, byte ptr [rcx] ; mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x0000000000400282 : push rbp ; add byte ptr [rbp + 0xdb771ab], cl ; ret 0x9bce
0x0000000000404fd2 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000401d64 : push rbp ; mov edi, 0x613e20 ; mov rbp, rsp ; call rax
0x00000000004028e0 : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000040e7cd : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000040569e : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000411f68 : pushfq ; ret 0xffff
0x000000000040c5da : rcl byte ptr [rbx], cl ; add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x000000000040f55e : rcl ebx, -0x11 ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000040f58e : rcl ebx, -0x19 ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000040028d : ret
0x000000000040dc5c : ret 0
0x000000000040851a : ret 0x110
0x0000000000401ad2 : ret 0x2126
0x00000000004018d2 : ret 0x2127
0x000000000040c5ca : ret 0x280f
0x00000000004041f9 : ret 0x30
0x00000000004088fa : ret 0x3948
0x000000000040bcb7 : ret 0x5588
0x0000000000408bf6 : ret 0x5589
0x000000000040af27 : ret 0x60
0x0000000000404207 : ret 0x8148
0x000000000040ced3 : ret 0x8348
0x0000000000406889 : ret 0x8844
0x0000000000402717 : ret 0x8948
0x00000000004050fd : ret 0x89a5
0x0000000000404fd6 : ret 0x8b48
0x000000000040381a : ret 0x8e0f
0x00000000004030dc : ret 0x9588
0x0000000000400289 : ret 0x9bce
0x0000000000402524 : ret 0xb0
0x000000000040cf56 : ret 0xb948
0x0000000000401d05 : ret 0xc148
0x0000000000402571 : ret 0xd284
0x0000000000404feb : ret 0xdfe8
0x0000000000402552 : ret 0xe280
0x0000000000403335 : ret 0xe883
0x00000000004055ec : ret 0xee8
0x000000000040aa01 : ret 0xf280
0x000000000040c5e1 : ret 0xf66
0x000000000040d920 : ret 0xff3
0x000000000040e71a : ret 0xff30
0x0000000000406cca : ret 0xffad
0x000000000040420a : ret 0xffff
0x000000000040590e : ret 1
0x00000000004056a2 : ret 8
0x0000000000403d30 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040c102 : rol dword ptr [rax - 0x49f0fe1f], -0x3f ; pop rbp ; ret
0x0000000000406ecb : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x00000000004046c0 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x40472b ; ret
0x0000000000401d0c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401d1b ; pop rbp ; ret
0x0000000000406ecc : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x00000000004046c1 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x40472a ; ret
0x000000000040b204 : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x000000000040e7ce : ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000040569f : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000040bb1a : ror dword ptr [rcx + 0x458bec45], -0x14 ; pop rbp ; ret
0x00000000004002d7 : sahf ; xchg al, dh ; xchg eax, esi ; jl 0x400325 ; ret
0x0000000000403856 : salc ; ret
0x0000000000403332 : sar dh, -0x77 ; ret 0xe883
0x0000000000401d0e : sar eax, 1 ; jne 0x401d19 ; pop rbp ; ret
0x0000000000401d0d : sar rax, 1 ; jne 0x401d1a ; pop rbp ; ret
0x000000000040e50f : sbb al, 0 ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000040e46e : sbb al, 0x24 ; add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x000000000040cb47 : sbb al, byte ptr [rcx] ; mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x0000000000412349 : sbb bh, bh ; call qword ptr [rsi]
0x0000000000412329 : sbb bh, bh ; call rsp
0x000000000040b858 : sbb byte ptr [rcx], al ; jmp rcx
0x0000000000411f6d : sbb dword ptr [rax], eax ; add ah, bh ; ret 0xffff
0x000000000040bb8a : sete al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040bb8c : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000040c5ff : shl dword ptr [rsi + 0xf], 0x5c ; ret 0xf66
0x000000000040f58f : shl edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000040f528 : shl edx, cl ; or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x000000000040f55f : shr edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000040f4e8 : shr edx, cl ; or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x00000000004130c5 : sldt word ptr [rax] ; call 0x22413061
0x000000000040ab01 : stc ; add eax, 0xf000000 ; xchg eax, esp ; ret 0x9588
0x000000000040f748 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000400285 : stosd dword ptr [rdi], eax ; jno 0x400247 ; or eax, 0x79bcec2 ; ret
0x000000000040b428 : sub al, 0x48 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040fc69 : sub esp, 8 ; add rsp, 8 ; ret
0x000000000040fc68 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040863e : test al, 0 ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040fbea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000403c69 : test byte ptr [rcx], bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x00000000004130c4 : test byte ptr [rdi], cl ; add byte ptr [rax], al ; call 0x22413062
0x00000000004002d8 : xchg al, dh ; xchg eax, esi ; jl 0x400324 ; ret
0x0000000000408007 : xchg eax, ebp ; ret 0x9588
0x0000000000402570 : xchg eax, ebp ; ret 0xd284
0x0000000000402551 : xchg eax, ebp ; ret 0xe280
0x00000000004002da : xchg eax, esi ; jl 0x400322 ; ret
0x000000000040bcb6 : xchg eax, esp ; ret 0x5588
0x00000000004030db : xchg eax, esp ; ret 0x9588
0x0000000000403915 : xchg eax, esp ; ret 0xd284
0x000000000040aa00 : xchg eax, esp ; ret 0xf280
0x000000000040c101 : xchg eax, esp ; rol dword ptr [rax - 0x49f0fe1f], -0x3f ; pop rbp ; ret
0x000000000040bb8b : xchg eax, esp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000040f4ec : xlatb ; mov rax, rdi ; pop rbp ; ret
0x000000000040ebde : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004125a9 : xor edi, edi ; call rdx
0x0000000000404536 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
