0x0000000000403419 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040693b : add ah, al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov al, -1 ; call qword ptr [rsi]
0x00000000004018a6 : add al, bpl ; ret
0x00000000004018a7 : add al, ch ; ret
0x0000000000405035 : add al, ch ; xchg eax, ebp ; ret 0xffff
0x000000000040598f : add bl, dh ; ret
0x0000000000404f53 : add byte ptr [rax - 0x75], cl ; jge 0x404f1f ; call 0x4011f7
0x0000000000404faf : add byte ptr [rax - 0x75], cl ; jge 0x404f7b ; call 0x4011f7
0x00000000004043f8 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000040598d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000404f51 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jge 0x404f21 ; call 0x4011f9
0x0000000000404fad : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jge 0x404f7d ; call 0x4011f9
0x000000000040598b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004005c0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000004005c2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x000000000040693d : add byte ptr [rax], al ; add byte ptr [rax], al ; mov al, -1 ; call qword ptr [rsi]
0x000000000040598c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004005c4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x0000000000404f22 : add byte ptr [rax], al ; add byte ptr [rbx - 0x4c173783], cl ; ret
0x0000000000403cee : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004033da : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403180 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040113b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000401339 : add byte ptr [rax], al ; jmp 0x401159
0x000000000040711e : add byte ptr [rax], al ; loope 0x407127 ; jmp rax
0x000000000040693f : add byte ptr [rax], al ; mov al, -1 ; call qword ptr [rsi]
0x0000000000401fc2 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000404f52 : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x40] ; call 0x4011f8
0x00000000004050c1 : add byte ptr [rax], al ; mov rdi, rax ; call 0x401397
0x0000000000405105 : add byte ptr [rax], al ; mov rsi, rax ; call 0x4013f7
0x0000000000401dd8 : add byte ptr [rax], al ; pop rbp ; ret
0x00000000004042bb : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403148 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040598e : add byte ptr [rax], al ; ret
0x00000000004005c6 : add byte ptr [rax], al ; ret 1
0x00000000004042bc : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000403149 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000404f24 : add byte ptr [rbx - 0x4c173783], cl ; ret
0x0000000000401558 : add byte ptr [rcx], al ; ret
0x0000000000403cf0 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004033d8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004050bf : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rax ; call 0x401399
0x0000000000405103 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rsi, rax ; call 0x4013f9
0x00000000004042ba : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000403147 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004054ea : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401554 : add eax, 0x206d26 ; add ebx, esi ; ret
0x000000000040151b : add eax, edx ; sar rax, 1 ; jne 0x40152c ; pop rbp ; ret
0x0000000000401559 : add ebx, esi ; ret
0x000000000040168b : add esp, 0x10 ; pop rbp ; ret
0x000000000040524c : add esp, 0x130 ; pop rbp ; ret
0x0000000000403144 : add esp, 0x138 ; pop rbx ; pop rbp ; ret
0x00000000004045ac : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000401dd4 : add esp, 0x1c0 ; pop rbp ; ret
0x0000000000401ba0 : add esp, 0x20 ; pop rbp ; ret
0x000000000040176d : add esp, 0x30 ; pop rbp ; ret
0x00000000004037bc : add esp, 0x50 ; pop rbp ; ret
0x0000000000402253 : add esp, 0x70 ; pop rbp ; ret
0x00000000004032fe : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004036cd : add esp, 0x90 ; pop rbp ; ret
0x0000000000404444 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040113e : add esp, 8 ; ret
0x000000000040151a : add rax, rdx ; sar rax, 1 ; jne 0x40152d ; pop rbp ; ret
0x000000000040168a : add rsp, 0x10 ; pop rbp ; ret
0x000000000040524b : add rsp, 0x130 ; pop rbp ; ret
0x0000000000403143 : add rsp, 0x138 ; pop rbx ; pop rbp ; ret
0x00000000004045ab : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000401dd3 : add rsp, 0x1c0 ; pop rbp ; ret
0x0000000000401b9f : add rsp, 0x20 ; pop rbp ; ret
0x000000000040176c : add rsp, 0x30 ; pop rbp ; ret
0x00000000004037bb : add rsp, 0x50 ; pop rbp ; ret
0x0000000000402252 : add rsp, 0x70 ; pop rbp ; ret
0x00000000004032fd : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004036cc : add rsp, 0x90 ; pop rbp ; ret
0x0000000000404443 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040113d : add rsp, 8 ; ret
0x00000000004054e9 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401557 : and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000403497 : and dword ptr [rax], 0x81d8558b ; ret 1
0x0000000000403707 : and eax, 0x48fffffd ; add esp, 0x20 ; pop rbp ; ret
0x000000000040194f : and eax, 0x608288 ; pop rbp ; ret
0x0000000000401973 : and eax, 0x608290 ; pop rbp ; ret
0x0000000000401139 : and eax, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000404f58 : call 0x4011f2
0x0000000000405036 : call 0x4012d2
0x00000000004050c6 : call 0x401392
0x000000000040510a : call 0x4013f2
0x0000000000403179 : call 0xffffffffe902bac9
0x0000000000403178 : call 0xffffffffe902baca
0x00000000004025ea : call 0xffffffffff40664f
0x0000000000405969 : call qword ptr [r12 + rbx*8]
0x0000000000406943 : call qword ptr [rsi]
0x000000000040596a : call qword ptr [rsp + rbx*8]
0x000000000040157d : call rax
0x0000000000406b63 : call rdx
0x000000000040524a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x00000000004047af : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403d01 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040151f : clc ; jne 0x401528 ; pop rbp ; ret
0x0000000000402105 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004058bb : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004058be : clc ; pop rbp ; ret
0x0000000000405396 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404c1b : cld ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404b60 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004058b8 : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000405393 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405336 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404b5d : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004018a2 : cmp al, 0x25 ; scasb al, byte ptr [rdi] ; pop rdx ; add al, bpl ; ret
0x0000000000403146 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004014dd : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4014f0 ; pop rbp ; ret
0x0000000000403dfc : cwde ; mov rcx, qword ptr [rax*8 + 0x4061a8] ; jmp rcx
0x00000000004025e5 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; call 0xffffffffff406654
0x00000000004051af : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000040322b : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000402b63 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040596c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000402b3b : fsubr st(0) ; jmp rsi
0x0000000000401689 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004014f0 : hlt ; pop rbp ; mov edi, 0x608230 ; jmp rax
0x0000000000401556 : insd dword ptr [rdi], dx ; and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000404400 : int 0x80
0x00000000004014e3 : ja 0x4014ea ; pop rbp ; ret
0x00000000004014ef : je 0x4014ed ; pop rbp ; mov edi, 0x608230 ; jmp rax
0x0000000000404f56 : jge 0x404f1c ; call 0x4011f4
0x0000000000404fb2 : jge 0x404f78 ; call 0x4011f4
0x000000000040133b : jmp 0x401157
0x0000000000406d03 : jmp qword ptr [rax]
0x0000000000406be3 : jmp qword ptr [rdx]
0x00000000004014f7 : jmp rax
0x000000000040230e : jmp rcx
0x0000000000401537 : jmp rdx
0x0000000000402b3d : jmp rsi
0x0000000000401520 : jne 0x401527 ; pop rbp ; ret
0x0000000000402255 : jo 0x4022b6 ; ret
0x0000000000403964 : jo 0x4039c5 ; ret
0x0000000000403a9e : jo 0x403aff ; ret
0x0000000000403300 : js 0x403360 ; pop rbp ; ret
0x0000000000405010 : lodsb al, byte ptr [rsi] ; ret
0x0000000000407121 : loope 0x407124 ; jmp rax
0x0000000000407120 : loope 0x407125 ; jmp rax
0x0000000000406941 : mov al, -1 ; call qword ptr [rsi]
0x0000000000405034 : mov al, 0 ; call 0x4012d4
0x000000000040383b : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004036cb : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x00000000004054e6 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401971 : mov byte ptr [0x608290], al ; pop rbp ; ret
0x0000000000401553 : mov byte ptr [rip + 0x206d26], 1 ; ret
0x00000000004054ec : mov dh, -0x40 ; pop rbp ; ret
0x000000000040194d : mov dword ptr [0x608288], edi ; pop rbp ; ret
0x0000000000402106 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000402014 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004020c8 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000401769 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401687 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004058b9 : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040217e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004032fc : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000401fc8 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004046cb : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401b9c : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401fc5 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000401b1f : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000404963 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401f7d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040200e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004020ca : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040224f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004032fa : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000403839 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000405394 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404c19 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404b5e : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004047ad : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403cff : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004058bc : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040157b : mov ebp, esp ; call rax
0x00000000004014e1 : mov ebp, esp ; ja 0x4014ec ; pop rbp ; ret
0x0000000000402307 : mov ecx, dword ptr [rax*8 + 0x405ca0] ; jmp rcx
0x00000000004025e7 : mov ecx, dword ptr [rax*8 + 0x405ce8] ; jmp rcx
0x0000000000403dfe : mov ecx, dword ptr [rax*8 + 0x4061a8] ; jmp rcx
0x0000000000402011 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401575 : mov edi, 0x607e20 ; mov rbp, rsp ; call rax
0x00000000004014f2 : mov edi, 0x608230 ; jmp rax
0x0000000000401532 : mov edi, 0x608230 ; jmp rdx
0x0000000000404f55 : mov edi, dword ptr [rbp - 0x40] ; call 0x4011f5
0x00000000004050c4 : mov edi, eax ; call 0x401394
0x0000000000405967 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000405966 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000405108 : mov esi, eax ; call 0x4013f4
0x0000000000401530 : mov esi, eax ; mov edi, 0x608230 ; jmp rdx
0x000000000040194c : mov qword ptr [0x608288], rdi ; pop rbp ; ret
0x000000000040217d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040383a : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004032fb : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x00000000004046ca : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401b9b : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401fc4 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000401b1e : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000404962 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401f7c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040224e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000403838 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004047ac : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403cfe : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040157a : mov rbp, rsp ; call rax
0x00000000004014e0 : mov rbp, rsp ; ja 0x4014ed ; pop rbp ; ret
0x0000000000402306 : mov rcx, qword ptr [rax*8 + 0x405ca0] ; jmp rcx
0x00000000004025e6 : mov rcx, qword ptr [rax*8 + 0x405ce8] ; jmp rcx
0x0000000000403dfd : mov rcx, qword ptr [rax*8 + 0x4061a8] ; jmp rcx
0x0000000000404f54 : mov rdi, qword ptr [rbp - 0x40] ; call 0x4011f6
0x00000000004050c3 : mov rdi, rax ; call 0x401395
0x0000000000405107 : mov rsi, rax ; call 0x4013f5
0x000000000040152f : mov rsi, rax ; mov edi, 0x608230 ; jmp rdx
0x00000000004054eb : movzx eax, al ; pop rbp ; ret
0x0000000000405988 : nop dword ptr [rax + rax] ; ret
0x00000000004025e8 : or al, 0xffffffffffffffc5 ; call 0xffffffffff406651
0x0000000000402b5e : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000402b5f : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000403a21 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040597c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040597e : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004042be : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405980 : pop r14 ; pop r15 ; ret
0x00000000004042c0 : pop r15 ; pop rbp ; ret
0x0000000000405982 : pop r15 ; ret
0x0000000000401552 : pop rbp ; mov byte ptr [rip + 0x206d26], 1 ; ret
0x00000000004014f1 : pop rbp ; mov edi, 0x608230 ; jmp rax
0x000000000040152e : pop rbp ; mov rsi, rax ; mov edi, 0x608230 ; jmp rdx
0x000000000040597b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040597f : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004014e5 : pop rbp ; ret
0x00000000004042bd : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040314a : pop rbx ; pop rbp ; ret
0x00000000004042c1 : pop rdi ; pop rbp ; ret
0x0000000000405983 : pop rdi ; ret
0x00000000004018a5 : pop rdx ; add al, bpl ; ret
0x00000000004042bf : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000405981 : pop rsi ; pop r15 ; ret
0x000000000040597d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000401f01 : push 0x48006082 ; add esp, 0x30 ; pop rbp ; ret
0x00000000004037be : push rax ; pop rbp ; ret
0x0000000000402b62 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000401574 : push rbp ; mov edi, 0x607e20 ; mov rbp, rsp ; call rax
0x0000000000404e3d : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000040322e : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000401141 : ret
0x0000000000401342 : ret 0x206d
0x0000000000403db9 : ret 0x8844
0x0000000000404832 : ret 0x8948
0x0000000000402c8d : ret 0x89a5
0x0000000000402b66 : ret 0x8b48
0x0000000000402b7b : ret 0xafe8
0x000000000040192c : ret 0xb0
0x0000000000401515 : ret 0xc148
0x0000000000403cf3 : ret 0xd284
0x000000000040317c : ret 0xee8
0x0000000000404f5a : ret 0xffff
0x00000000004005c8 : ret 1
0x0000000000403232 : ret 8
0x00000000004043fb : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000402250 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x4022bb ; ret
0x000000000040151c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40152b ; pop rbp ; ret
0x00000000004043fc : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000402251 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x4022ba ; ret
0x0000000000404e3e : ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000040322f : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000040151e : sar eax, 1 ; jne 0x401529 ; pop rbp ; ret
0x000000000040151d : sar rax, 1 ; jne 0x40152a ; pop rbp ; ret
0x00000000004018a4 : scasb al, byte ptr [rdi] ; pop rdx ; add al, bpl ; ret
0x000000000040500e : shr al, -0x54 ; ret
0x0000000000404f57 : shr al, -0x6d ; ret 0xffff
0x0000000000404fb3 : shr al, 0x37 ; ret 0xffff
0x00000000004054e8 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004059bd : sub esp, 8 ; add rsp, 8 ; ret
0x00000000004059bc : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040598a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000402309 : vsubps xmm0, xmm11, xmmword ptr [rax] ; jmp rcx
0x00000000004025e9 : vsubps xmm0, xmm2, xmmword ptr [rax] ; jmp rcx
0x0000000000405037 : xchg eax, ebp ; ret 0xffff
0x0000000000404f59 : xchg eax, ebx ; ret 0xffff
0x0000000000403cf2 : xchg eax, esp ; ret 0xd284
0x000000000040524e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004020c6 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
