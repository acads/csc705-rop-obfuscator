0x0000000000415f51 : adc bh, bh ; jmp qword ptr [rdx]
0x0000000000411ce9 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x0000000000410a93 : adc dword ptr [rax - 0x7f], ecx ; ret 1
0x0000000000406859 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000415245 : add al, 0 ; add byte ptr [rbp + 0x60000000], al ; ret 0xfffe
0x0000000000415f4f : add al, al ; adc bh, bh ; jmp qword ptr [rdx]
0x0000000000415c8f : add al, al ; or bh, bh ; call rdx
0x00000000004156ef : add al, al ; ret 0xfffe
0x0000000000410534 : add al, byte ptr [rax] ; add byte ptr [rcx - 0xdf43], al ; call qword ptr [rax]
0x000000000040c707 : add al, ch ; ret
0x0000000000410dcf : add bl, dh ; ret
0x00000000004093e3 : add byte ptr [r8 - 0x77], cl ; call 0xffffffffffc156dc
0x00000000004093e2 : add byte ptr [r8 - 0x77], cl ; call 0xffffffffffc156dd
0x00000000004156eb : add byte ptr [rax + rax], al ; add al, al ; ret 0xfffe
0x00000000004038c7 : add byte ptr [rax - 0x73], cl ; call 0xffffffffb102c21f
0x000000000040e03f : add byte ptr [rax - 0x75], cl ; clc ; mov rsp, rbp ; pop rbp ; ret
0x00000000004041d2 : add byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x000000000040e5a5 : add byte ptr [rax - 0x75], cl ; loopne 0x40e60e ; ret
0x000000000040f2c9 : add byte ptr [rax - 0x75], cl ; push rbp ; call 0x21037421
0x0000000000407838 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x00000000004093e4 : add byte ptr [rax - 0x77], cl ; call 0xffffffffffc156db
0x000000000040fbe6 : add byte ptr [rax - 0x77], cl ; fsubr st(1) ; ret 0xffff
0x000000000040ba25 : add byte ptr [rax - 0x77], cl ; ret 0x12e8
0x000000000040427d : add byte ptr [rax - 0x77], cl ; ret 0x148
0x000000000040b9ac : add byte ptr [rax - 0x77], cl ; ret 0x8be8
0x0000000000402177 : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x00000000004156ed : add byte ptr [rax], al ; add al, al ; ret 0xfffe
0x000000000040c705 : add byte ptr [rax], al ; add al, ch ; ret
0x0000000000410dcd : add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004156e9 : add byte ptr [rax], al ; add byte ptr [rax + rax], al ; add al, al ; ret 0xfffe
0x00000000004038c5 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; call 0xffffffffb102c221
0x00000000004041d0 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x000000000040e5a3 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; loopne 0x40e610 ; ret
0x000000000040f2c7 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbp ; call 0x21037423
0x000000000040fbe4 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fsubr st(1) ; ret 0xffff
0x000000000040427b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x148
0x0000000000402175 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x0000000000410dcb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004110a8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004110aa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000411ceb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x0000000000414fc3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add cl, dh ; ret 0x40
0x0000000000403a85 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403b7c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004045ff : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000414fc4 : add byte ptr [rax], al ; add byte ptr [rax], al ; int1 ; ret 0x40
0x000000000040849d : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040e5a2 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x20] ; pop rbp ; ret
0x00000000004041cf : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000410dcc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000411ced : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x0000000000415695 : add byte ptr [rax], al ; add byte ptr [rax], ch ; ret 0xfffe
0x00000000004156ea : add byte ptr [rax], al ; add byte ptr [rax], r8b ; add al, al ; ret 0xfffe
0x00000000004106c5 : add byte ptr [rax], al ; add byte ptr [rcx - 0xdf43], al ; call qword ptr [rax]
0x000000000040d837 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x000000000040712e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000414fc5 : add byte ptr [rax], al ; add cl, dh ; ret 0x40
0x000000000040681a : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403a87 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402e47 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404601 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040148b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000415c8a : add byte ptr [rax], al ; in al, 5 ; add byte ptr [rax], al ; ror byte ptr [rdx], -1 ; call rdx
0x0000000000414fc6 : add byte ptr [rax], al ; int1 ; ret 0x40
0x00000000004015e9 : add byte ptr [rax], al ; jmp 0x4014a9
0x000000000040e6ef : add byte ptr [rax], al ; mov dword ptr [rbp - 4], eax ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040849f : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000405402 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040e5a4 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x20] ; pop rbp ; ret
0x00000000004041d1 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000415f4a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; or byte ptr [rax], al ; add al, al ; adc bh, bh ; jmp qword ptr [rdx]
0x0000000000404137 : add byte ptr [rax], al ; pop rbp ; ret
0x00000000004076fb : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406588 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000415f4e : add byte ptr [rax], al ; rcl byte ptr [rax], -1 ; jmp qword ptr [rdx]
0x0000000000410dce : add byte ptr [rax], al ; ret
0x0000000000411cef : add byte ptr [rax], al ; ret 1
0x0000000000415c8e : add byte ptr [rax], al ; ror byte ptr [rdx], -1 ; call rdx
0x0000000000415697 : add byte ptr [rax], ch ; ret 0xfffe
0x00000000004156ec : add byte ptr [rax], r8b ; add al, al ; ret 0xfffe
0x0000000000415247 : add byte ptr [rbp + 0x60000000], al ; ret 0xfffe
0x00000000004076fc : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000406589 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040e6f0 : add byte ptr [rcx + 0x458bfc45], cl ; cld ; pop rbp ; ret
0x0000000000410536 : add byte ptr [rcx - 0xdf43], al ; call qword ptr [rax]
0x0000000000401978 : add byte ptr [rcx], al ; ret
0x000000000040d839 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x0000000000407130 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000414fc7 : add cl, dh ; ret 0x40
0x0000000000403784 : add dl, byte ptr [rcx] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406818 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004076fa : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000406587 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004105f0 : add dword ptr [rax], eax ; add byte ptr [rcx - 0xdf43], al ; call qword ptr [rax]
0x00000000004035d7 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403d93 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040e12a : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401974 : add eax, 0x215986 ; add ebx, esi ; ret
0x000000000040a273 : add eax, 0x8301148b ; ret 0x89ee
0x000000000040c704 : add eax, 0xe8000000 ; ret
0x000000000040193b : add eax, edx ; sar rax, 1 ; jne 0x40194c ; pop rbp ; ret
0x0000000000401979 : add ebx, esi ; ret
0x0000000000401e8b : add esp, 0x10 ; pop rbp ; ret
0x00000000004098ac : add esp, 0x130 ; pop rbp ; ret
0x0000000000406584 : add esp, 0x138 ; pop rbx ; pop rbp ; ret
0x00000000004079ec : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000404133 : add esp, 0x1b0 ; pop rbp ; ret
0x000000000040f26e : add esp, 0x1b8 ; pop rbp ; ret
0x0000000000410d4b : add esp, 0x1c0 ; pop rbp ; ret
0x0000000000408fce : add esp, 0x1e0 ; pop rbp ; ret
0x0000000000402dc3 : add esp, 0x20 ; pop rbp ; ret
0x0000000000401f9d : add esp, 0x30 ; pop rbp ; ret
0x0000000000403e4b : add esp, 0x40 ; pop rbp ; ret
0x0000000000404604 : add esp, 0x50 ; pop rbp ; ret
0x0000000000403d98 : add esp, 0x60 ; pop rbp ; ret
0x0000000000405693 : add esp, 0x70 ; pop rbp ; ret
0x000000000040673e : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000406b0d : add esp, 0x90 ; pop rbp ; ret
0x0000000000407884 : add esp, 0xa0 ; pop rbp ; ret
0x00000000004083f0 : add esp, 0xc0 ; pop rbp ; ret
0x0000000000408b3f : add esp, 0xe0 ; pop rbp ; ret
0x000000000040148e : add esp, 8 ; ret
0x0000000000403783 : add r10b, byte ptr [rcx] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040193a : add rax, rdx ; sar rax, 1 ; jne 0x40194d ; pop rbp ; ret
0x0000000000401e8a : add rsp, 0x10 ; pop rbp ; ret
0x00000000004098ab : add rsp, 0x130 ; pop rbp ; ret
0x0000000000406583 : add rsp, 0x138 ; pop rbx ; pop rbp ; ret
0x00000000004079eb : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000404132 : add rsp, 0x1b0 ; pop rbp ; ret
0x000000000040f26d : add rsp, 0x1b8 ; pop rbp ; ret
0x0000000000410d4a : add rsp, 0x1c0 ; pop rbp ; ret
0x0000000000408fcd : add rsp, 0x1e0 ; pop rbp ; ret
0x0000000000402dc2 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000401f9c : add rsp, 0x30 ; pop rbp ; ret
0x0000000000403e4a : add rsp, 0x40 ; pop rbp ; ret
0x0000000000404603 : add rsp, 0x50 ; pop rbp ; ret
0x0000000000403d97 : add rsp, 0x60 ; pop rbp ; ret
0x0000000000405692 : add rsp, 0x70 ; pop rbp ; ret
0x000000000040673d : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000406b0c : add rsp, 0x90 ; pop rbp ; ret
0x0000000000407883 : add rsp, 0xa0 ; pop rbp ; ret
0x00000000004083ef : add rsp, 0xc0 ; pop rbp ; ret
0x0000000000408b3e : add rsp, 0xe0 ; pop rbp ; ret
0x000000000040148d : add rsp, 8 ; ret
0x000000000040e129 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401977 : and dword ptr [rax], eax ; add ebx, esi ; ret
0x0000000000406b47 : and eax, 0x48fffffd ; add esp, 0x20 ; pop rbp ; ret
0x0000000000404f2f : and eax, 0x617390 ; pop rbp ; ret
0x0000000000404f53 : and eax, 0x617398 ; pop rbp ; ret
0x000000000040f2cd : call 0x2103741d
0x0000000000405252 : call 0x4014d2
0x00000000004051eb : call 0x4014e2
0x00000000004052d0 : call 0x4014f2
0x0000000000401d04 : call 0x4016d9
0x0000000000410a90 : call 0x485295e3
0x0000000000410a8f : call 0x485295e4
0x0000000000404a9b : call 0x490ad3ee
0x0000000000404a9a : call 0x490ad3ef
0x00000000004038cb : call 0xffffffffb102c21b
0x00000000004038ca : call 0xffffffffb102c21c
0x00000000004065b9 : call 0xffffffffe902ef09
0x00000000004065b8 : call 0xffffffffe902ef0a
0x0000000000405a2a : call 0xffffffffff409b77
0x00000000004093e8 : call 0xffffffffffc156d7
0x00000000004093e7 : call 0xffffffffffc156d8
0x0000000000410da9 : call qword ptr [r12 + rbx*8]
0x0000000000410480 : call qword ptr [rax]
0x000000000041075c : call qword ptr [rbx]
0x00000000004106be : call qword ptr [rcx]
0x000000000040a49e : call qword ptr [rdx]
0x00000000004106f3 : call qword ptr [rsi]
0x0000000000410daa : call qword ptr [rsp + rbx*8]
0x000000000040199d : call rax
0x00000000004166d3 : call rbx
0x0000000000415c93 : call rdx
0x0000000000403ddd : call rsi
0x00000000004098aa : clc ; add rsp, 0x130 ; pop rbp ; ret
0x0000000000407bef : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404cc2 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040193f : clc ; jne 0x401948 ; pop rbp ; ret
0x0000000000404d16 : clc ; mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000405545 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040e4fb : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000404c20 : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040e043 : clc ; mov rsp, rbp ; pop rbp ; ret
0x00000000004041d6 : clc ; pop rbp ; ret
0x000000000040849c : cld ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000401eb7 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040f26c : cld ; add rsp, 0x1b8 ; pop rbp ; ret
0x0000000000410d49 : cld ; add rsp, 0x1c0 ; pop rbp ; ret
0x0000000000402dc1 : cld ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405218 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403e49 : cld ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004083ee : cld ; add rsp, 0xc0 ; pop rbp ; ret
0x0000000000408b3d : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000040e4f8 : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004099f3 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402dbe : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405215 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004090fc : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040e6f3 : cld ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004084a3 : cld ; pop rbp ; ret
0x0000000000401d0b : cmp al, 0x25 ; ret 0x4133
0x0000000000406586 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004018fd : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401910 ; pop rbp ; ret
0x000000000040723c : cwde ; mov rcx, qword ptr [rax*8 + 0x4149a8] ; jmp rcx
0x0000000000401d08 : dec dword ptr [rax - 0x73] ; cmp al, 0x25 ; ret 0x4133
0x0000000000405a25 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; call 0xffffffffff409b7c
0x00000000004081be : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; or byte ptr [rbp + 0x41], 0 ; jmp rcx
0x000000000040af2c : dec dword ptr [rax - 0x77] ; ret 0x8148
0x000000000040237a : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040980f : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000040524e : dec dword ptr [rcx + 0x79e8e445] ; ret 0xffff
0x00000000004051e7 : dec dword ptr [rcx - 0xf171fbb] ; ret 0xffff
0x00000000004101f2 : dec dword ptr [rcx] ; ret 0x9589
0x000000000040666b : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000405201 : fmul dword ptr [r9 - 0x2a172b8b] ; ret 0xffff
0x0000000000405fa3 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000403b60 : fmul dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000405202 : fmul dword ptr [rcx - 0x2a172b8b] ; ret 0xffff
0x0000000000410dac : fmul qword ptr [rax - 0x7d] ; ret
0x000000000040fbea : fsubr st(1) ; ret 0xffff
0x0000000000401e89 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401910 : hlt ; pop rbp ; mov edi, 0x617298 ; jmp rax
0x0000000000404a37 : in al, 0x48 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000415c8c : in al, 5 ; add byte ptr [rax], al ; ror byte ptr [rdx], -1 ; call rdx
0x0000000000404d07 : in al, dx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404d04 : in al, dx ; mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040e046 : in al, dx ; pop rbp ; ret
0x0000000000407840 : int 0x80
0x0000000000414fc8 : int1 ; ret 0x40
0x0000000000401903 : ja 0x40190a ; pop rbp ; ret
0x00000000004093e1 : ja 0x40943b ; add byte ptr [r8 - 0x77], cl ; call 0xffffffffffc156de
0x000000000040190f : je 0x40190d ; pop rbp ; mov edi, 0x617298 ; jmp rax
0x00000000004015eb : jmp 0x4014a7
0x000000000040c703 : jmp 0x40c713
0x000000000040ba4f : jmp 0xffffffff8a034367
0x00000000004156cb : jmp qword ptr [rax]
0x0000000000415d13 : jmp qword ptr [rdx]
0x0000000000401917 : jmp rax
0x0000000000404c65 : jmp rcx
0x00000000004033b5 : jmp rdi
0x0000000000401957 : jmp rdx
0x0000000000401940 : jne 0x401947 ; pop rbp ; ret
0x0000000000405204 : jne 0x4051de ; call 0x4014e4
0x0000000000405695 : jo 0x4056f6 ; ret
0x0000000000406da4 : jo 0x406e05 ; ret
0x0000000000406ede : jo 0x406f3f ; ret
0x0000000000406740 : js 0x4067a0 ; pop rbp ; ret
0x0000000000404c5c : loopne 0x404caf ; mov ecx, dword ptr [rax*8 + 0x410e20] ; jmp rcx
0x0000000000408b41 : loopne 0x408b48 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000408fd0 : loopne 0x408fd8 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040e5a9 : loopne 0x40e60a ; ret
0x000000000040e5a8 : loopne 0x40e60b ; ret
0x0000000000404990 : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000406c7b : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000406b0b : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000404135 : mov al, 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040e126 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000404f51 : mov byte ptr [0x617398], al ; pop rbp ; ret
0x0000000000404d17 : mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000403782 : mov byte ptr [rdx + rax + 0x11], cl ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401973 : mov byte ptr [rip + 0x215986], 1 ; ret
0x00000000004035d9 : mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403d95 : mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040e12c : mov dh, -0x40 ; pop rbp ; ret
0x0000000000404f2d : mov dword ptr [0x617390], edi ; pop rbp ; ret
0x0000000000405546 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405454 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000405508 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040e66c : mov dword ptr [rbp - 0x18], eax ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000404a35 : mov dword ptr [rbp - 0x1c], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040524f : mov dword ptr [rbp - 0x1c], eax ; call 0x4014d5
0x00000000004051e8 : mov dword ptr [rbp - 0x20], eax ; call 0x4014e5
0x00000000004037fe : mov dword ptr [rbp - 0x24], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000405200 : mov dword ptr [rbp - 0x28], eax ; mov dword ptr [rbp - 0x2c], esi ; call 0x4014e8
0x0000000000401f99 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000405203 : mov dword ptr [rbp - 0x2c], esi ; call 0x4014e5
0x000000000040498e : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401e87 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401eb5 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040e6f1 : mov dword ptr [rbp - 4], eax ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040e4f9 : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000404c1e : mov dword ptr [rbp - 8], eax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004055be : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040f270 : mov eax, 0x5d000001 ; ret
0x000000000040673c : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000405408 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000407b0b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040517c : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405405 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004050ff : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000404d05 : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040399c : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004053bd : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040544e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040e670 : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040e5a7 : mov eax, dword ptr [rbp - 0x20] ; pop rbp ; ret
0x000000000040550a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040568f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040673a : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000406c79 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004099f4 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402dbf : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405216 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403e47 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004084a1 : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000407bed : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404cc0 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040e041 : mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004041d4 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040199b : mov ebp, esp ; call rax
0x0000000000401901 : mov ebp, esp ; ja 0x40190c ; pop rbp ; ret
0x0000000000404c5e : mov ecx, dword ptr [rax*8 + 0x410e20] ; jmp rcx
0x0000000000405747 : mov ecx, dword ptr [rax*8 + 0x4144a0] ; jmp rcx
0x0000000000405a27 : mov ecx, dword ptr [rax*8 + 0x4144e8] ; jmp rcx
0x000000000040723e : mov ecx, dword ptr [rax*8 + 0x4149a8] ; jmp rcx
0x0000000000408234 : mov ecx, dword ptr [rax*8 + 0x414d20] ; jmp rcx
0x00000000004081c0 : mov ecx, dword ptr [rax*8 + 0x414d80] ; jmp rcx
0x000000000040897d : mov ecx, dword ptr [rax*8 + 0x414e50] ; jmp rcx
0x00000000004088fd : mov ecx, dword ptr [rax*8 + 0x414eb0] ; jmp rcx
0x000000000040bec5 : mov ecx, dword ptr [rax*8 + 0x414fb0] ; jmp rcx
0x000000000040a29a : mov ecx, dword ptr [rax*8 + 0x415038] ; jmp rcx
0x000000000040e757 : mov ecx, dword ptr [rax*8 + 0x415060] ; jmp rcx
0x0000000000410472 : mov ecx, dword ptr [rax*8 + 0x415138] ; jmp rcx
0x0000000000405451 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401995 : mov edi, 0x616e20 ; mov rbp, rsp ; call rax
0x0000000000401912 : mov edi, 0x617298 ; jmp rax
0x0000000000401952 : mov edi, 0x617298 ; jmp rdx
0x00000000004052ce : mov edi, eax ; call 0x4014f4
0x0000000000410da7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x00000000004166d1 : mov edi, edi ; call rbx
0x0000000000410da6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000401950 : mov esi, eax ; mov edi, 0x617298 ; jmp rdx
0x000000000040e045 : mov esp, ebp ; pop rbp ; ret
0x0000000000404f2c : mov qword ptr [0x617390], rdi ; pop rbp ; ret
0x000000000040e66b : mov qword ptr [rbp - 0x18], rax ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000404c1d : mov qword ptr [rbp - 8], rax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004055bd : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040498f : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000406c7a : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040673b : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000407b0a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040517b : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405404 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004050fe : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040399b : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004053bc : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040e66f : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040e5a6 : mov rax, qword ptr [rbp - 0x20] ; pop rbp ; ret
0x000000000040568e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000406c78 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000407bec : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404cbf : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040e040 : mov rax, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004041d3 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040199a : mov rbp, rsp ; call rax
0x0000000000401900 : mov rbp, rsp ; ja 0x40190d ; pop rbp ; ret
0x0000000000404c5d : mov rcx, qword ptr [rax*8 + 0x410e20] ; jmp rcx
0x0000000000405746 : mov rcx, qword ptr [rax*8 + 0x4144a0] ; jmp rcx
0x0000000000405a26 : mov rcx, qword ptr [rax*8 + 0x4144e8] ; jmp rcx
0x000000000040723d : mov rcx, qword ptr [rax*8 + 0x4149a8] ; jmp rcx
0x0000000000408233 : mov rcx, qword ptr [rax*8 + 0x414d20] ; jmp rcx
0x00000000004081bf : mov rcx, qword ptr [rax*8 + 0x414d80] ; jmp rcx
0x000000000040897c : mov rcx, qword ptr [rax*8 + 0x414e50] ; jmp rcx
0x00000000004088fc : mov rcx, qword ptr [rax*8 + 0x414eb0] ; jmp rcx
0x000000000040bec4 : mov rcx, qword ptr [rax*8 + 0x414fb0] ; jmp rcx
0x000000000040a299 : mov rcx, qword ptr [rax*8 + 0x415038] ; jmp rcx
0x000000000040e756 : mov rcx, qword ptr [rax*8 + 0x415060] ; jmp rcx
0x0000000000410471 : mov rcx, qword ptr [rax*8 + 0x415138] ; jmp rcx
0x00000000004052cd : mov rdi, rax ; call 0x4014f5
0x000000000040194f : mov rsi, rax ; mov edi, 0x617298 ; jmp rdx
0x000000000040e044 : mov rsp, rbp ; pop rbp ; ret
0x0000000000415f4c : movsb byte ptr [rdi], byte ptr [rsi] ; or byte ptr [rax], al ; add al, al ; adc bh, bh ; jmp qword ptr [rdx]
0x00000000004105ef : movsd dword ptr [rdi], dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xdf43], al ; call qword ptr [rax]
0x000000000040e0ea : movsx eax, cl ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004035d8 : movzx eax, al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403d94 : movzx eax, al ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040e12b : movzx eax, al ; pop rbp ; ret
0x0000000000404d1a : movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000414fc0 : nop ; rol dword ptr [rax], 0 ; add byte ptr [rax], al ; add cl, dh ; ret 0x40
0x0000000000410dc8 : nop dword ptr [rax + rax] ; ret
0x0000000000405a28 : or al, 0xffffffffffffffc5 ; call 0xffffffffff409b79
0x00000000004081c1 : or al, 0xffffffffffffffc5 ; or byte ptr [rbp + 0x41], 0 ; jmp rcx
0x0000000000415c91 : or bh, bh ; call rdx
0x0000000000405f9e : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000405f9f : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000415f4d : or byte ptr [rax], al ; add al, al ; adc bh, bh ; jmp qword ptr [rdx]
0x00000000004081c3 : or byte ptr [rbp + 0x41], 0 ; jmp rcx
0x0000000000406e61 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000410dbc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000410dbe : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004076fe : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000410dc0 : pop r14 ; pop r15 ; ret
0x0000000000407700 : pop r15 ; pop rbp ; ret
0x0000000000410dc2 : pop r15 ; ret
0x0000000000401972 : pop rbp ; mov byte ptr [rip + 0x215986], 1 ; ret
0x0000000000401911 : pop rbp ; mov edi, 0x617298 ; jmp rax
0x000000000040194e : pop rbp ; mov rsi, rax ; mov edi, 0x617298 ; jmp rdx
0x0000000000410dbb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000410dbf : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401905 : pop rbp ; ret
0x00000000004076fd : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040658a : pop rbx ; pop rbp ; ret
0x0000000000401976 : pop rcx ; and dword ptr [rax], eax ; add ebx, esi ; ret
0x0000000000407701 : pop rdi ; pop rbp ; ret
0x0000000000410dc3 : pop rdi ; ret
0x00000000004076ff : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000410dc1 : pop rsi ; pop r15 ; ret
0x0000000000410dbd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000404606 : push rax ; pop rbp ; ret
0x000000000040f2cc : push rbp ; call 0x2103741e
0x0000000000405fa2 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000401994 : push rbp ; mov edi, 0x616e20 ; mov rbp, rsp ; call rax
0x000000000040949d : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000040666e : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000415f50 : rcl byte ptr [rax], -1 ; jmp qword ptr [rdx]
0x0000000000400288 : ret
0x000000000040cead : ret 0
0x000000000040ec6b : ret 0x10
0x000000000040ba28 : ret 0x12e8
0x0000000000404280 : ret 0x148
0x0000000000405fbb : ret 0x1fe8
0x000000000040f2d0 : ret 0x20
0x00000000004017f2 : ret 0x2159
0x00000000004015f2 : ret 0x215a
0x0000000000409b52 : ret 0x28e8
0x0000000000404bab : ret 0x40
0x0000000000401d0d : ret 0x4133
0x000000000040ecd3 : ret 0x4810
0x0000000000402c71 : ret 0x49e8
0x00000000004090f9 : ret 0x5589
0x000000000040b10e : ret 0x58
0x0000000000402cb3 : ret 0x7e8
0x000000000040af2f : ret 0x8148
0x000000000040ba52 : ret 0x8589
0x00000000004071f9 : ret 0x8844
0x0000000000407c72 : ret 0x8948
0x00000000004060cd : ret 0x89a5
0x000000000040a278 : ret 0x89ee
0x0000000000405fa6 : ret 0x8b48
0x000000000040b9af : ret 0x8be8
0x000000000040d83c : ret 0x9588
0x00000000004101f4 : ret 0x9589
0x000000000040217a : ret 0xb0
0x0000000000401935 : ret 0xc148
0x0000000000407133 : ret 0xd284
0x00000000004065bc : ret 0xee8
0x00000000004093ea : ret 0xff80
0x00000000004094aa : ret 0xff82
0x000000000041524d : ret 0xfffe
0x00000000004051ed : ret 0xffff
0x000000000040221f : ret 1
0x0000000000406672 : ret 8
0x0000000000414fc1 : rol dword ptr [rax], 0 ; add byte ptr [rax], al ; add cl, dh ; ret 0x40
0x000000000040783b : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000405690 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x4056fb ; ret
0x000000000040193c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40194b ; pop rbp ; ret
0x000000000040783c : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x00000000004042ff : ror byte ptr [rax - 0x77], 1 ; ret 0xb0
0x0000000000405691 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x4056fa ; ret
0x000000000040949e : ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000040666f : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000415c90 : ror byte ptr [rdx], -1 ; call rdx
0x000000000040193e : sar eax, 1 ; jne 0x401949 ; pop rbp ; ret
0x000000000040193d : sar rax, 1 ; jne 0x40194a ; pop rbp ; ret
0x00000000004156e8 : sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add al, al ; ret 0xfffe
0x000000000040e128 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000410dfd : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000410dfc : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000410dca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000411b88 : xchg byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000401975 : xchg byte ptr [rcx + 0x21], bl ; add byte ptr [rcx], al ; ret
0x000000000040d83b : xchg eax, esp ; ret 0x9588
0x0000000000407132 : xchg eax, esp ; ret 0xd284
0x00000000004098ae : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000405506 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
