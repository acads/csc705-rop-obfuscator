0x000000000041165d : adc al, 0 ; add byte ptr [rcx + rsi*4 - 1], dh ; jmp rsp
0x0000000000412995 : adc dword ptr [rax], eax ; add byte ptr [rax], bh ; mov ah, -1 ; jmp rax
0x000000000041159d : adc dword ptr [rax], eax ; add byte ptr [rbx - 1], dl ; jmp rsp
0x0000000000410188 : adc dword ptr [rcx], eax ; add byte ptr [rax], al ; loopne 0x410197 ; add byte ptr [rax], al ; ret 0x4105
0x0000000000401e56 : adc eax, 0xf3010021 ; ret
0x0000000000409f19 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000412993 : add ah, ah ; adc dword ptr [rax], eax ; add byte ptr [rax], bh ; mov ah, -1 ; jmp rax
0x0000000000411993 : add ah, ah ; add dword ptr [rax], eax ; add al, bl ; sbb edi, edi ; call qword ptr [rsi]
0x00000000004116b7 : add ah, dl ; ret 0xffff
0x00000000004116ac : add al, 0x16 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xffff
0x00000000004121b4 : add al, 0xa ; add byte ptr [rax], al ; cwde ; xchg bh, bh ; call qword ptr [rdx]
0x0000000000411997 : add al, bl ; sbb edi, edi ; call qword ptr [rsi]
0x0000000000402ec8 : add al, ch ; ret 0xffef
0x000000000040e98f : add bl, dh ; ret
0x000000000040bb0b : add byte ptr [r8], r8b ; add byte ptr [rcx - 0x100f43], al ; jmp qword ptr [rsi]
0x00000000004078e9 : add byte ptr [r8], r8b ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004039f7 : add byte ptr [rax + 1], cl ; ret 0x8948
0x00000000004077e5 : add byte ptr [rax + rax], 0 ; pop rbp ; ret
0x000000000041145f : add byte ptr [rax + rdx*4 - 1], ah ; jmp rsp
0x0000000000407907 : add byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x000000000040b008 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000040a87d : add byte ptr [rax - 0x77], cl ; jge 0x40a880 ; pop rbp ; ret
0x00000000004121b2 : add byte ptr [rax], al ; add al, 0xa ; add byte ptr [rax], al ; cwde ; xchg bh, bh ; call qword ptr [rdx]
0x0000000000402ec6 : add byte ptr [rax], al ; add al, ch ; ret 0xffef
0x000000000040e98d : add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004039f5 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000407905 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x000000000040a87b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jge 0x40a882 ; pop rbp ; ret
0x000000000040e98b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040ddb8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040a87a : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000407904 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004066f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040e98c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000410da4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x40ac
0x00000000004084ed : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b71bb3], cl ; ret 0xb5e8
0x000000000040bb0c : add byte ptr [rax], al ; add byte ptr [rcx - 0x100f43], al ; jmp qword ptr [rsi]
0x00000000004064eb : add byte ptr [rax], al ; add byte ptr [rcx], al ; pop rbp ; ret
0x00000000004078ea : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000407318 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xe280
0x0000000000407c33 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x00000000004079e6 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004069ac : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000407c06 : add byte ptr [rax], al ; add byte ptr [rdx + 0x4d88c44d], cl ; ret
0x00000000004066f0 : add byte ptr [rax], al ; add cl, ch ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000405179 : add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000409eda : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000409c80 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040185b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004118d2 : add byte ptr [rax], al ; and al, 1 ; add byte ptr [rax], al ; call 0x114117fb
0x00000000004118d6 : add byte ptr [rax], al ; call 0x114117f7
0x0000000000411856 : add byte ptr [rax], al ; call 0xffffffffe3411769
0x0000000000411e76 : add byte ptr [rax], al ; cwde ; jg 0x411e7f ; call rdx
0x0000000000412136 : add byte ptr [rax], al ; cwde ; test edi, edi ; jmp qword ptr [rdx]
0x0000000000412176 : add byte ptr [rax], al ; cwde ; xchg bh, bh ; call qword ptr [rdx]
0x0000000000412192 : add byte ptr [rax], al ; in al, 9 ; add byte ptr [rax], al ; cwde ; xchg bh, bh ; call qword ptr [rdx]
0x0000000000401a19 : add byte ptr [rax], al ; jmp 0x401879
0x000000000041018a : add byte ptr [rax], al ; loopne 0x410195 ; add byte ptr [rax], al ; ret 0x4105
0x000000000040a87c : add byte ptr [rax], al ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000408ac2 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000407906 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004116ae : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xffff
0x0000000000411cf6 : add byte ptr [rax], al ; or byte ptr [rbx - 1], ch ; call rdi
0x0000000000411c56 : add byte ptr [rax], al ; pop rax ; movsxd rdi, edi ; call qword ptr [rax]
0x0000000000402eae : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040aecb : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000409c48 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040e98e : add byte ptr [rax], al ; ret
0x0000000000410da6 : add byte ptr [rax], al ; ret 0x40ac
0x000000000041018e : add byte ptr [rax], al ; ret 0x4105
0x0000000000412132 : add byte ptr [rax], al ; test byte ptr [rcx], cl ; add byte ptr [rax], al ; cwde ; test edi, edi ; jmp qword ptr [rdx]
0x0000000000412997 : add byte ptr [rax], bh ; mov ah, -1 ; jmp rax
0x000000000041139f : add byte ptr [rbp + rbp*2 - 1], al ; jmp rsp
0x000000000040aecc : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000409c49 : add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004084ef : add byte ptr [rbx - 0x76b71bb3], cl ; ret 0xb5e8
0x000000000041159f : add byte ptr [rbx - 1], dl ; jmp rsp
0x00000000004118d3 : add byte ptr [rcx + rax], ah ; add byte ptr [rax], al ; call 0x114117fa
0x000000000041165f : add byte ptr [rcx + rsi*4 - 1], dh ; jmp rsp
0x000000000040bb0e : add byte ptr [rcx - 0x100f43], al ; jmp qword ptr [rsi]
0x000000000040b94d : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004064ed : add byte ptr [rcx], al ; pop rbp ; ret
0x0000000000401e58 : add byte ptr [rcx], al ; ret
0x000000000041169f : add byte ptr [rdi + rdi*4 - 1], dl ; jmp rsp
0x00000000004078ec : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000040731a : add byte ptr [rdi], cl ; pushfq ; ret 0xe280
0x0000000000407c35 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x00000000004079e8 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004069ae : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000407c08 : add byte ptr [rdx + 0x4d88c44d], cl ; ret
0x00000000004121b3 : add byte ptr [rdx + rcx], al ; add byte ptr [rax], al ; cwde ; xchg bh, bh ; call qword ptr [rdx]
0x0000000000407c32 : add byte ptr cs:[rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x00000000004066f2 : add cl, ch ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040517b : add cl, ch ; ret
0x0000000000405ac8 : add dword ptr [rax + 1], ecx ; ret 0x8948
0x0000000000411995 : add dword ptr [rax], eax ; add al, bl ; sbb edi, edi ; call qword ptr [rsi]
0x0000000000409ed8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040aeca : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000409c47 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000407b31 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d4f8 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040bd0a : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401e54 : add eax, 0x21153e ; add ebx, esi ; ret
0x000000000040dd26 : add eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407c2f : add eax, dword ptr [rcx + 0x2ef9] ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x0000000000401e1b : add eax, edx ; sar rax, 1 ; jne 0x401e2c ; pop rbp ; ret
0x0000000000401e59 : add ebx, esi ; ret
0x000000000040200b : add esp, 0x10 ; pop rbp ; ret
0x000000000040b94b : add esp, 0x100 ; pop rbp ; ret
0x000000000040bccc : add esp, 0x1030 ; pop rbp ; ret
0x000000000040d87a : add esp, 0x120 ; pop rbp ; ret
0x000000000040c8dc : add esp, 0x130 ; pop rbp ; ret
0x0000000000409c44 : add esp, 0x138 ; pop rbx ; pop rbp ; ret
0x000000000040b1bc : add esp, 0x1a0 ; pop rbp ; ret
0x000000000040d1b4 : add esp, 0x1b0 ; pop rbp ; ret
0x000000000040e8de : add esp, 0x1e0 ; pop rbp ; ret
0x0000000000402b10 : add esp, 0x20 ; pop rbp ; ret
0x000000000040211d : add esp, 0x30 ; pop rbp ; ret
0x00000000004030cf : add esp, 0x40 ; pop rbp ; ret
0x00000000004077e3 : add esp, 0x480 ; pop rbp ; ret
0x000000000040301d : add esp, 0x50 ; pop rbp ; ret
0x00000000004087f5 : add esp, 0x60 ; pop rbp ; ret
0x000000000040869c : add esp, 0x70 ; pop rbp ; ret
0x0000000000409dfe : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000402eaa : add esp, 0x80 ; pop rbp ; ret
0x000000000040a1cd : add esp, 0x90 ; pop rbp ; ret
0x0000000000406291 : add esp, 0xa0 ; pop rbp ; ret
0x0000000000405b69 : add esp, 0xc10 ; pop rbp ; ret
0x00000000004082e8 : add esp, 0xf0 ; pop rbp ; ret
0x000000000040185e : add esp, 8 ; ret
0x000000000040dd25 : add rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401e1a : add rax, rdx ; sar rax, 1 ; jne 0x401e2d ; pop rbp ; ret
0x000000000040200a : add rsp, 0x10 ; pop rbp ; ret
0x000000000040b94a : add rsp, 0x100 ; pop rbp ; ret
0x000000000040bccb : add rsp, 0x1030 ; pop rbp ; ret
0x000000000040d879 : add rsp, 0x120 ; pop rbp ; ret
0x000000000040c8db : add rsp, 0x130 ; pop rbp ; ret
0x0000000000409c43 : add rsp, 0x138 ; pop rbx ; pop rbp ; ret
0x000000000040b1bb : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000040d1b3 : add rsp, 0x1b0 ; pop rbp ; ret
0x000000000040e8dd : add rsp, 0x1e0 ; pop rbp ; ret
0x0000000000402b0f : add rsp, 0x20 ; pop rbp ; ret
0x000000000040211c : add rsp, 0x30 ; pop rbp ; ret
0x00000000004030ce : add rsp, 0x40 ; pop rbp ; ret
0x00000000004077e2 : add rsp, 0x480 ; pop rbp ; ret
0x000000000040301c : add rsp, 0x50 ; pop rbp ; ret
0x00000000004087f4 : add rsp, 0x60 ; pop rbp ; ret
0x000000000040869b : add rsp, 0x70 ; pop rbp ; ret
0x0000000000409dfd : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000402ea9 : add rsp, 0x80 ; pop rbp ; ret
0x000000000040a1cc : add rsp, 0x90 ; pop rbp ; ret
0x0000000000406290 : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000405b68 : add rsp, 0xc10 ; pop rbp ; ret
0x00000000004082e7 : add rsp, 0xf0 ; pop rbp ; ret
0x000000000040185d : add rsp, 8 ; ret
0x0000000000411321 : and al, 0xffffffffffffffff ; jmp rsp
0x00000000004118d4 : and al, 1 ; add byte ptr [rax], al ; call 0x114117f9
0x000000000040bd09 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040d87c : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401e57 : and dword ptr [rax], eax ; add ebx, esi ; ret
0x000000000040a207 : and eax, 0x48fffffd ; add esp, 0x20 ; pop rbp ; ret
0x000000000040337f : and eax, 0x6133d8 ; pop rbp ; ret
0x00000000004033a3 : and eax, 0x6133e0 ; pop rbp ; ret
0x00000000004118d8 : call 0x114117f5
0x0000000000411858 : call 0xffffffffe3411767
0x0000000000409c79 : call 0xffffffffe90325c9
0x0000000000409c78 : call 0xffffffffe90325ca
0x000000000040e969 : call qword ptr [r12 + rbx*8]
0x00000000004074f7 : call qword ptr [rax]
0x0000000000411b5b : call qword ptr [rbx]
0x000000000041217b : call qword ptr [rdx]
0x000000000041199b : call qword ptr [rsi]
0x000000000040e96a : call qword ptr [rsp + rbx*8]
0x0000000000401e7d : call rax
0x00000000004100cf : call rbx
0x000000000041038f : call rcx
0x0000000000411cfb : call rdi
0x0000000000411e7b : call rdx
0x00000000004102af : call rsi
0x000000000041285b : call rsp
0x00000000004078e8 : clc ; add byte ptr [r8], r8b ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000040c8da : clc ; add rsp, 0x130 ; pop rbp ; ret
0x00000000004080f4 : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403369 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004032c4 : clc ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040301b : clc ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040e1bb : clc ; add rsp, 0x80 ; pop rbp ; ret
0x0000000000401e1f : clc ; jne 0x401e28 ; pop rbp ; ret
0x00000000004064e7 : clc ; mov byte ptr [rax + 0xa9], 1 ; pop rbp ; ret
0x0000000000407fb6 : clc ; mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000408c05 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040dc7b : clc ; mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x000000000040c0db : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040670c : clc ; mov qword ptr [rbp - 0x10], rsi ; pop rbp ; ret
0x00000000004062e3 : clc ; mov qword ptr [rdx + 0x68], rcx ; pop rbp ; ret
0x000000000040a81b : clc ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000040a85b : clc ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000040a83b : clc ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000040790b : clc ; pop rbp ; ret
0x0000000000402037 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040b949 : cld ; add rsp, 0x100 ; pop rbp ; ret
0x000000000040bcca : cld ; add rsp, 0x1030 ; pop rbp ; ret
0x000000000040d878 : cld ; add rsp, 0x120 ; pop rbp ; ret
0x000000000040d1b2 : cld ; add rsp, 0x1b0 ; pop rbp ; ret
0x000000000040c2ab : cld ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403668 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004087f3 : cld ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040869a : cld ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040628f : cld ; add rsp, 0xa0 ; pop rbp ; ret
0x000000000040c0d8 : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040ca5f : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040d38a : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403665 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000407a64 : cld ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000407a67 : cld ; pop rbp ; ret
0x0000000000409c46 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000401ddd : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401df0 ; pop rbp ; ret
0x0000000000411e78 : cwde ; jg 0x411e7d ; call rdx
0x000000000040aa0c : cwde ; mov rcx, qword ptr [rax*8 + 0x410d68] ; jmp rcx
0x0000000000412138 : cwde ; test edi, edi ; jmp qword ptr [rdx]
0x0000000000412178 : cwde ; xchg bh, bh ; call qword ptr [rdx]
0x00000000004074cf : dec byte ptr [rax - 0x7f] ; ret 0xca00
0x000000000040cfb5 : dec dword ptr [rax + 0x3b] ; or byte ptr [r15], cl ; sahf ; ret 0xe280
0x000000000040cfcc : dec dword ptr [rax + 0x3b] ; sbb byte ptr [r15], cl ; sahf ; ret 0xe280
0x00000000004075dc : dec dword ptr [rax + 9] ; ret 0x8b48
0x0000000000404497 : dec dword ptr [rax - 0x77] ; ret 0x2b48
0x0000000000402954 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x00000000004070ff : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040c83f : dec dword ptr [rax - 0x7f] ; ret 1
0x00000000004074cc : dec dword ptr [rax - 9] ; dec byte ptr [rax - 0x7f] ; ret 0xca00
0x0000000000407443 : dec dword ptr [rdi] ; pushfq ; ret 0xe280
0x0000000000409d2b : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000409663 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040e96c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000402009 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401df0 : hlt ; pop rbp ; mov edi, 0x613328 ; jmp rax
0x000000000040378c : in al, 0x48 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000412194 : in al, 9 ; add byte ptr [rax], al ; cwde ; xchg bh, bh ; call qword ptr [rdx]
0x000000000040ca13 : in al, dx ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407791 : inc dword ptr [rax - 0x49f0fe1f] ; shl dword ptr [rcx], 1 ; ret 0xfa81
0x0000000000407316 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xe280
0x0000000000405177 : inc dword ptr [rcx] ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000000004116ab : inc dword ptr [rsi + rdx] ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xffff
0x000000000041165b : inc esp ; adc al, 0 ; add byte ptr [rcx + rsi*4 - 1], dh ; jmp rsp
0x000000000041159b : inc esp ; adc dword ptr [rax], eax ; add byte ptr [rbx - 1], dl ; jmp rsp
0x000000000041145b : inc esp ; or al, 0 ; add byte ptr [rax + rdx*4 - 1], ah ; jmp rsp
0x000000000041139b : inc esp ; or dword ptr [rax], eax ; add byte ptr [rbp + rbp*2 - 1], al ; jmp rsp
0x000000000040b010 : int 0x80
0x0000000000401de3 : ja 0x401dea ; pop rbp ; ret
0x0000000000401def : je 0x401ded ; pop rbp ; mov edi, 0x613328 ; jmp rax
0x0000000000411e79 : jg 0x411e7c ; call rdx
0x000000000040670b : jge 0x40670c ; mov qword ptr [rbp - 0x10], rsi ; pop rbp ; ret
0x00000000004078e7 : jge 0x4078e9 ; add byte ptr [r8], r8b ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000040a81a : jge 0x40a81b ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000040a83a : jge 0x40a83b ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000040a85a : jge 0x40a85b ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000040a880 : jge 0x40a87d ; pop rbp ; ret
0x000000000040dc7a : jge 0x40dc7d ; mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x0000000000401a1b : jmp 0x401877
0x000000000041201b : jmp qword ptr [rax]
0x0000000000411efb : jmp qword ptr [rdx]
0x000000000040bb14 : jmp qword ptr [rsi]
0x0000000000401df7 : jmp rax
0x00000000004103cf : jmp rbx
0x00000000004022b9 : jmp rcx
0x0000000000401e37 : jmp rdx
0x00000000004112a3 : jmp rsp
0x0000000000401e20 : jne 0x401e27 ; pop rbp ; ret
0x000000000040670f : jne 0x406704 ; pop rbp ; ret
0x000000000040869e : jo 0x4086ff ; ret
0x0000000000408d55 : jo 0x408db6 ; ret
0x000000000040a464 : jo 0x40a4c5 ; ret
0x000000000040a59e : jo 0x40a5ff ; ret
0x000000000040a83f : jo 0x40a8a0 ; ret
0x000000000040a83e : jo 0x40a8a1 ; ret
0x000000000040dc64 : jo 0x40dcc5 ; ret
0x0000000000409e00 : js 0x409e60 ; pop rbp ; ret
0x000000000040b664 : js 0x40b683 ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004113e1 : js 0x4113e4 ; jmp rsp
0x000000000040371e : loopne 0x40376e ; add esp, 0x20 ; pop rbp ; ret
0x000000000040371d : loopne 0x40376f ; add esp, 0x20 ; pop rbp ; ret
0x000000000040e8e0 : loopne 0x40e8e8 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041018c : loopne 0x410193 ; add byte ptr [rax], al ; ret 0x4105
0x0000000000412999 : mov ah, -1 ; jmp rax
0x000000000040322d : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040a1cb : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x000000000040d1b6 : mov al, 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040bd06 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000411421 : mov bh, bh ; jmp rsp
0x00000000004033a1 : mov byte ptr [0x6133e0], al ; pop rbp ; ret
0x00000000004064e8 : mov byte ptr [rax + 0xa9], 1 ; pop rbp ; ret
0x0000000000407fb7 : mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000401e53 : mov byte ptr [rip + 0x21153e], 1 ; ret
0x0000000000411661 : mov cl, -1 ; jmp rsp
0x0000000000407b33 : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d4fa : mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040bd0c : mov dh, -0x40 ; pop rbp ; ret
0x000000000040337d : mov dword ptr [0x6133d8], edi ; pop rbp ; ret
0x0000000000408c06 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000408b14 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000408bc8 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040670e : mov dword ptr [rbp - 0x10], esi ; pop rbp ; ret
0x000000000040378a : mov dword ptr [rbp - 0x1c], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402119 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040322b : mov dword ptr [rbp - 0x50], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000402007 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402035 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407a62 : mov dword ptr [rbp - 4], ecx ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040c0d9 : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040670a : mov dword ptr [rbp - 8], edi ; mov qword ptr [rbp - 0x10], rsi ; pop rbp ; ret
0x000000000040a87f : mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x0000000000408c7e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040dc7c : mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x00000000004062e5 : mov dword ptr [rdx + 0x68], ecx ; pop rbp ; ret
0x0000000000409dfc : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000408ac8 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040b2db : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004035cc : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040787e : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000408ac5 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040a8a1 : mov eax, dword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040354f : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040b573 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000408a7d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406406 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000408b0e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040371c : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000408bca : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000408d4f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000409dfa : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040a339 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040ca60 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040c2a9 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403666 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004087f1 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000408698 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000407a65 : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004080f2 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403367 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004032c2 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000403019 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000407909 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040a81d : mov eax, dword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000040a85d : mov eax, dword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000040a83d : mov eax, dword ptr [rdi + 0x70] ; pop rbp ; ret
0x00000000004088cf : mov eax, ecx ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401e7b : mov ebp, esp ; call rax
0x0000000000401de1 : mov ebp, esp ; ja 0x401dec ; pop rbp ; ret
0x00000000004022b2 : mov ecx, dword ptr [rax*8 + 0x40ea30] ; jmp rcx
0x0000000000403d8e : mov ecx, dword ptr [rax*8 + 0x40f500] ; jmp rcx
0x0000000000408e07 : mov ecx, dword ptr [rax*8 + 0x410860] ; jmp rcx
0x00000000004090e7 : mov ecx, dword ptr [rax*8 + 0x4108a8] ; jmp rcx
0x000000000040aa0e : mov ecx, dword ptr [rax*8 + 0x410d68] ; jmp rcx
0x0000000000408b11 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000407a60 : mov ecx, eax ; mov dword ptr [rbp - 4], ecx ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004088cd : mov ecx, eax ; mov eax, ecx ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401e75 : mov edi, 0x612e20 ; mov rbp, rsp ; call rax
0x0000000000401df2 : mov edi, 0x613328 ; jmp rax
0x0000000000401e32 : mov edi, 0x613328 ; jmp rdx
0x000000000040a819 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000040a859 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000040a839 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000040e967 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000040e966 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x00000000004062e1 : mov edx, dword ptr [rbp - 8] ; mov qword ptr [rdx + 0x68], rcx ; pop rbp ; ret
0x000000000040a8a5 : mov edx, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000401e30 : mov esi, eax ; mov edi, 0x613328 ; jmp rdx
0x000000000040337c : mov qword ptr [0x6133d8], rdi ; pop rbp ; ret
0x000000000040670d : mov qword ptr [rbp - 0x10], rsi ; pop rbp ; ret
0x0000000000406709 : mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; pop rbp ; ret
0x000000000040a87e : mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000408c7d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004062e4 : mov qword ptr [rdx + 0x68], rcx ; pop rbp ; ret
0x000000000040322c : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000409dfb : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x000000000040b2da : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004035cb : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040787d : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000408ac4 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040a8a0 : mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040354e : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040b572 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000408a7c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406405 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000408d4e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040a338 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004080f1 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403366 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004032c1 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000403018 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000407908 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040a81c : mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000040a85c : mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000040a83c : mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000401e7a : mov rbp, rsp ; call rax
0x0000000000401de0 : mov rbp, rsp ; ja 0x401ded ; pop rbp ; ret
0x00000000004022b1 : mov rcx, qword ptr [rax*8 + 0x40ea30] ; jmp rcx
0x0000000000403d8d : mov rcx, qword ptr [rax*8 + 0x40f500] ; jmp rcx
0x0000000000408e06 : mov rcx, qword ptr [rax*8 + 0x410860] ; jmp rcx
0x00000000004090e6 : mov rcx, qword ptr [rax*8 + 0x4108a8] ; jmp rcx
0x000000000040aa0d : mov rcx, qword ptr [rax*8 + 0x410d68] ; jmp rcx
0x000000000040a818 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000040a858 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000040a838 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x00000000004062e0 : mov rdx, qword ptr [rbp - 8] ; mov qword ptr [rdx + 0x68], rcx ; pop rbp ; ret
0x000000000040a8a4 : mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000401e2f : mov rsi, rax ; mov edi, 0x613328 ; jmp rdx
0x0000000000406ebc : movabs al, byte ptr [0x89fffffe90858b48] ; ret 0x5589
0x00000000004116b0 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xffff
0x0000000000411c59 : movsxd rdi, edi ; call qword ptr [rax]
0x0000000000407b32 : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d4f9 : movzx eax, al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040bd0b : movzx eax, al ; pop rbp ; ret
0x0000000000407fba : movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x000000000040e988 : nop dword ptr [rax + rax] ; ret
0x000000000041145d : or al, 0 ; add byte ptr [rax + rdx*4 - 1], ah ; jmp rsp
0x000000000040cfb8 : or byte ptr [r15], cl ; sahf ; ret 0xe280
0x000000000040965e : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040965f : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000411cf8 : or byte ptr [rbx - 1], ch ; call rdi
0x00000000004069a8 : or byte ptr [rcx + 0x5cf9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000408e0b : or byte ptr [rcx], al ; jmp rcx
0x000000000040cfb9 : or byte ptr [rdi], cl ; sahf ; ret 0xe280
0x000000000041139d : or dword ptr [rax], eax ; add byte ptr [rbp + rbp*2 - 1], al ; jmp rsp
0x000000000040a521 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040e97c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040e97e : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040aece : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040e980 : pop r14 ; pop r15 ; ret
0x000000000040aed0 : pop r15 ; pop rbp ; ret
0x000000000040e982 : pop r15 ; ret
0x0000000000411c58 : pop rax ; movsxd rdi, edi ; call qword ptr [rax]
0x0000000000401e52 : pop rbp ; mov byte ptr [rip + 0x21153e], 1 ; ret
0x0000000000401df1 : pop rbp ; mov edi, 0x613328 ; jmp rax
0x0000000000401e2e : pop rbp ; mov rsi, rax ; mov edi, 0x613328 ; jmp rdx
0x000000000040e97b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040e97f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401de5 : pop rbp ; ret
0x000000000040aecd : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000409c4a : pop rbx ; pop rbp ; ret
0x000000000040aed1 : pop rdi ; pop rbp ; ret
0x000000000040e983 : pop rdi ; ret
0x000000000040aecf : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040e981 : pop rsi ; pop r15 ; ret
0x00000000004069ab : pop rsp ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000040e97d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040a81e : push r8 ; pop rbp ; ret
0x000000000040301f : push rax ; pop rbp ; ret
0x00000000004062e2 : push rbp ; clc ; mov qword ptr [rdx + 0x68], rcx ; pop rbp ; ret
0x000000000040a8a6 : push rbp ; clc ; pop rbp ; ret
0x0000000000409662 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000401e74 : push rbp ; mov edi, 0x612e20 ; mov rbp, rsp ; call rax
0x0000000000407c3a : push rbp ; ret 0x458a
0x0000000000403095 : push rbp ; ror byte ptr [rax - 0x77], 1 ; ret 0xe1e8
0x000000000040c4cd : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x0000000000409d2e : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x00000000004078ee : pushfq ; ret 0xd284
0x0000000000404104 : pushfq ; ret 0xe280
0x0000000000401861 : ret
0x00000000004070ee : ret 0x14c
0x0000000000401c22 : ret 0x2115
0x0000000000401a22 : ret 0x2116
0x000000000040449a : ret 0x2b48
0x0000000000410da8 : ret 0x40ac
0x0000000000410190 : ret 0x4105
0x0000000000407c3e : ret 0x4588
0x0000000000407c3b : ret 0x458a
0x0000000000407c38 : ret 0x5588
0x0000000000406ea7 : ret 0x5589
0x00000000004076e7 : ret 0x8148
0x0000000000407c21 : ret 0x850f
0x000000000040a9c9 : ret 0x8844
0x00000000004039fa : ret 0x8948
0x000000000040978d : ret 0x89a5
0x0000000000402957 : ret 0x8b48
0x0000000000402557 : ret 0xb0
0x00000000004084f5 : ret 0xb5e8
0x00000000004026f0 : ret 0xbae8
0x0000000000401e15 : ret 0xc148
0x00000000004074d2 : ret 0xca00
0x00000000004078ef : ret 0xd284
0x0000000000403099 : ret 0xe1e8
0x0000000000404105 : ret 0xe280
0x0000000000409c7c : ret 0xee8
0x00000000004026bc : ret 0xeee8
0x000000000040967b : ret 0xefe8
0x0000000000407799 : ret 0xfa81
0x0000000000402eca : ret 0xffef
0x000000000040389c : ret 0xfffe
0x00000000004116b1 : ret 0xffff
0x0000000000405c4d : ret 1
0x000000000040d9ab : ret 3
0x0000000000409d32 : ret 8
0x000000000040b00b : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000408d50 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x408dbb ; ret
0x0000000000401e1c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401e2b ; pop rbp ; ret
0x000000000040b00c : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000403ea6 : ror byte ptr [rax - 0x77], 1 ; ret 0x8948
0x0000000000403096 : ror byte ptr [rax - 0x77], 1 ; ret 0xe1e8
0x0000000000408d51 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x408dba ; ret
0x000000000040d4fb : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x00000000004077e1 : ror byte ptr [rax - 0x7f], -0x3c ; add byte ptr [rax + rax], 0 ; pop rbp ; ret
0x000000000040c4ce : ror byte ptr [rax - 0x7f], 1 ; ret 1
0x0000000000409d2f : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000407a61 : ror dword ptr [rcx + 0x458bfc4d], -4 ; pop rbp ; ret
0x00000000004088ce : ror dword ptr [rcx - 0x3b7cb738], 0x30 ; pop rbp ; ret
0x000000000040cfbb : sahf ; ret 0xe280
0x0000000000411721 : sar bh, 1 ; jmp rsp
0x0000000000401e1e : sar eax, 1 ; jne 0x401e29 ; pop rbp ; ret
0x00000000004116a9 : sar edi, -1 ; add al, 0x16 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xffff
0x0000000000401e1d : sar rax, 1 ; jne 0x401e2a ; pop rbp ; ret
0x000000000040cfcf : sbb byte ptr [r15], cl ; sahf ; ret 0xe280
0x000000000040cfd0 : sbb byte ptr [rdi], cl ; sahf ; ret 0xe280
0x0000000000411999 : sbb edi, edi ; call qword ptr [rsi]
0x0000000000407797 : shl dword ptr [rcx], 1 ; ret 0xfa81
0x0000000000407c31 : stc ; add byte ptr cs:[rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x00000000004069aa : stc ; pop rsp ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000040bd08 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004064e9 : sub byte ptr [rcx + 0x1000000], 0x5d ; ret
0x000000000040ea09 : sub esp, 8 ; add rsp, 8 ; ret
0x000000000040ea08 : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000412019 : test bh, bh ; jmp qword ptr [rax]
0x000000000040e98a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000412134 : test byte ptr [rcx], cl ; add byte ptr [rax], al ; cwde ; test edi, edi ; jmp qword ptr [rdx]
0x0000000000406ebf : test dword ptr [rax - 0x76000002], edx ; ret 0x5589
0x00000000004070fb : test dword ptr [rsp + rdi*8 - 0x76b70001], ebp ; ret 0xb0
0x00000000004064ea : test eax, 0x1000000 ; pop rbp ; ret
0x0000000000412139 : test edi, edi ; jmp qword ptr [rdx]
0x0000000000412179 : xchg bh, bh ; call qword ptr [rdx]
0x0000000000407c37 : xchg eax, esp ; ret 0x5588
0x00000000004079ea : xchg eax, esp ; ret 0xd284
0x00000000004069b0 : xchg eax, esp ; ret 0xe280
0x000000000040bcce : xor byte ptr [rax], dl ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040c8de : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000408bc6 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000408a02 : xor esp, dword ptr [rcx] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401df4 : xor esp, dword ptr [rcx] ; jmp rax
0x0000000000401e34 : xor esp, dword ptr [rcx] ; jmp rdx
0x0000000000403381 : xor esp, dword ptr [rcx] ; pop rbp ; ret
