0x0000000000403bb9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407d2b : add ah, ah ; add al, 0 ; add al, ah ; ret
0x0000000000407d2d : add al, 0 ; add al, ah ; ret
0x0000000000407c8d : add al, 0 ; add al, ah ; ret 0xffff
0x00000000004075e3 : add al, ah ; ret
0x0000000000407c8f : add al, ah ; ret 0xffff
0x00000000004051c3 : add al, ch ; ret
0x0000000000404998 : add al, ch ; ret 0xffca
0x0000000000407d4f : add al, dh ; ret
0x000000000040612f : add bl, dh ; ret
0x00000000004051e9 : add byte ptr [rax - 0x75], cl ; jge 0x4051e5 ; call 0x401497
0x0000000000405213 : add byte ptr [rax - 0x75], cl ; jge 0x40520f ; call 0x4014e7
0x0000000000405227 : add byte ptr [rax - 0x75], cl ; jge 0x405223 ; call 0x401497
0x00000000004052c9 : add byte ptr [rax - 0x75], cl ; jge 0x4052c5 ; call 0x4014e7
0x0000000000404b98 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000407d29 : add byte ptr [rax], al ; add ah, ah ; add al, 0 ; add al, ah ; ret
0x0000000000407c8a : add byte ptr [rax], al ; add al, 0 ; add al, ah ; ret 0xffff
0x000000000040612d : add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004051e7 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jge 0x4051e7 ; call 0x401499
0x0000000000405211 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jge 0x405211 ; call 0x4014e9
0x0000000000405225 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jge 0x405225 ; call 0x401499
0x00000000004052c7 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jge 0x4052c7 ; call 0x4014e9
0x000000000040612b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000406754 : add byte ptr [rax], al ; add byte ptr [rax], al ; call 0x102e551
0x0000000000402346 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040612c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040643c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x9796
0x000000000040448e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000407c89 : add byte ptr [rax], al ; add byte ptr [rsp + rax], al ; add al, ah ; ret 0xffff
0x0000000000403b7a : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403920 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040123b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000406756 : add byte ptr [rax], al ; call 0x102e54f
0x0000000000407c2a : add byte ptr [rax], al ; in al, 3 ; add byte ptr [rax], al ; nop ; ret 0xffff
0x0000000000401439 : add byte ptr [rax], al ; jmp 0x401259
0x0000000000402762 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000402348 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004051e8 : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x10] ; call 0x401498
0x0000000000405212 : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x10] ; call 0x4014e8
0x0000000000407c2e : add byte ptr [rax], al ; nop ; ret 0xffff
0x0000000000402578 : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000404a5b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004038e8 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040612e : add byte ptr [rax], al ; ret
0x000000000040643e : add byte ptr [rax], al ; ret 0x9796
0x00000000004080cf : add byte ptr [rax], al ; sar edi, 1 ; jmp rax
0x0000000000404a5c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004038e9 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000406437 : add byte ptr [rbx], bl ; mov al, -0x2c ; pop rbx ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x9796
0x0000000000401688 : add byte ptr [rcx], al ; ret
0x0000000000404490 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000407c8b : add byte ptr [rsp + rax], al ; add al, ah ; ret 0xffff
0x0000000000403b78 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404a5a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004038e7 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000401efd : add dword ptr [rax], eax ; pop rbp ; ret
0x0000000000405c8a : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401684 : add eax, 0x207c16 ; add ebx, esi ; ret
0x000000000040164b : add eax, edx ; sar rax, 1 ; jne 0x40165c ; pop rbp ; ret
0x0000000000401689 : add ebx, esi ; ret
0x00000000004017bb : add esp, 0x10 ; pop rbp ; ret
0x0000000000401ef9 : add esp, 0x10080 ; pop rbp ; ret
0x0000000000405c4c : add esp, 0x130 ; pop rbp ; ret
0x00000000004038e4 : add esp, 0x138 ; pop rbx ; pop rbp ; ret
0x0000000000404d4c : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000402574 : add esp, 0x1c0 ; pop rbp ; ret
0x0000000000402170 : add esp, 0x20 ; pop rbp ; ret
0x000000000040189d : add esp, 0x30 ; pop rbp ; ret
0x0000000000403f5c : add esp, 0x50 ; pop rbp ; ret
0x00000000004029f3 : add esp, 0x70 ; pop rbp ; ret
0x0000000000403a9e : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000403e6d : add esp, 0x90 ; pop rbp ; ret
0x0000000000404be4 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040123e : add esp, 8 ; ret
0x000000000040164a : add rax, rdx ; sar rax, 1 ; jne 0x40165d ; pop rbp ; ret
0x00000000004017ba : add rsp, 0x10 ; pop rbp ; ret
0x0000000000401ef8 : add rsp, 0x10080 ; pop rbp ; ret
0x0000000000405c4b : add rsp, 0x130 ; pop rbp ; ret
0x00000000004038e3 : add rsp, 0x138 ; pop rbx ; pop rbp ; ret
0x0000000000404d4b : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000402573 : add rsp, 0x1c0 ; pop rbp ; ret
0x000000000040216f : add rsp, 0x20 ; pop rbp ; ret
0x000000000040189c : add rsp, 0x30 ; pop rbp ; ret
0x0000000000403f5b : add rsp, 0x50 ; pop rbp ; ret
0x00000000004029f2 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000403a9d : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000403e6c : add rsp, 0x90 ; pop rbp ; ret
0x0000000000404be3 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040123d : add rsp, 8 ; ret
0x0000000000405c89 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401687 : and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000403ea7 : and eax, 0x48fffffd ; add esp, 0x20 ; pop rbp ; ret
0x0000000000401f1f : and eax, 0x6092a8 ; pop rbp ; ret
0x0000000000401f43 : and eax, 0x6092b0 ; pop rbp ; ret
0x0000000000406758 : call 0x102e54d
0x00000000004051ee : call 0x401492
0x0000000000405218 : call 0x4014e2
0x0000000000402304 : call 0x4902ac54
0x0000000000402303 : call 0x4902ac55
0x0000000000402304 : call 0x4902ac57
0x0000000000402303 : call 0x4902ac58
0x0000000000403919 : call 0xffffffffe902c269
0x0000000000403918 : call 0xffffffffe902c26a
0x0000000000406109 : call qword ptr [r12 + rbx*8]
0x0000000000407933 : call qword ptr [rsi]
0x000000000040610a : call qword ptr [rsp + rbx*8]
0x00000000004016ad : call rax
0x0000000000407bb3 : call rdx
0x0000000000405c4a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x0000000000404f4f : clc ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004044a1 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040164f : clc ; jne 0x401658 ; pop rbp ; ret
0x00000000004028a5 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040605b : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040605e : clc ; pop rbp ; ret
0x0000000000405306 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004052a9 : cld ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405424 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406058 : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000405303 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004052a6 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405421 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004038e6 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040160d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401620 ; pop rbp ; ret
0x000000000040459c : cwde ; mov rcx, qword ptr [rax*8 + 0x407168] ; jmp rcx
0x0000000000405baf : dec dword ptr [rax - 0x7f] ; ret 1
0x00000000004039cb : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000403303 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040610c : fmul qword ptr [rax - 0x7d] ; ret
0x00000000004017b9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401620 : hlt ; pop rbp ; mov edi, 0x609248 ; jmp rax
0x0000000000407c2c : in al, 3 ; add byte ptr [rax], al ; nop ; ret 0xffff
0x0000000000404ba0 : int 0x80
0x0000000000401613 : ja 0x40161a ; pop rbp ; ret
0x000000000040161f : je 0x40161d ; pop rbp ; mov edi, 0x609248 ; jmp rax
0x0000000000406980 : je 0x4069b7 ; mov al, -0x7f ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004051ec : jge 0x4051e2 ; call 0x401494
0x0000000000405216 : jge 0x40520c ; call 0x4014e4
0x000000000040522a : jge 0x405220 ; call 0x401494
0x00000000004052cc : jge 0x4052c2 ; call 0x4014e4
0x0000000000401686 : jl 0x4016ad ; add byte ptr [rcx], al ; ret
0x000000000040143b : jmp 0x401257
0x0000000000407527 : jmp qword ptr [rax]
0x0000000000407913 : jmp qword ptr [rcx]
0x00000000004078f3 : jmp qword ptr [rdi]
0x0000000000407c33 : jmp qword ptr [rdx]
0x0000000000401627 : jmp rax
0x0000000000402aae : jmp rcx
0x0000000000401667 : jmp rdx
0x0000000000401650 : jne 0x401657 ; pop rbp ; ret
0x00000000004029f5 : jo 0x402a56 ; ret
0x0000000000404104 : jo 0x404165 ; ret
0x000000000040423e : jo 0x40429f ; ret
0x0000000000403aa0 : js 0x403b00 ; pop rbp ; ret
0x00000000004021ab : loopne 0x4021fb ; add esp, 0x20 ; pop rbp ; ret
0x00000000004021aa : loopne 0x4021fc ; add esp, 0x20 ; pop rbp ; ret
0x0000000000406439 : mov al, -0x2c ; pop rbx ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x9796
0x0000000000406982 : mov al, -0x7f ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000403fdb : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000403e6b : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000405c86 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401f41 : mov byte ptr [0x6092b0], al ; pop rbp ; ret
0x0000000000406753 : mov byte ptr [rax], 0 ; add byte ptr [rax], al ; call 0x102e552
0x0000000000401683 : mov byte ptr [rip + 0x207c16], 1 ; ret
0x0000000000405c8c : mov dh, -0x40 ; pop rbp ; ret
0x0000000000401f1d : mov dword ptr [0x6092a8], edi ; pop rbp ; ret
0x00000000004028a6 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004027b4 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000402868 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004021a9 : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401899 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004017b7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406059 : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040291e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403a9c : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000402768 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000404e6b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040216c : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402765 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004020ef : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405103 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040271d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004027ae : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040234b : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040286a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004029ef : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000403a9a : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000403fd9 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000405304 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004052a7 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405422 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404f4d : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040449f : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040605c : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004016ab : mov ebp, esp ; call rax
0x0000000000401611 : mov ebp, esp ; ja 0x40161c ; pop rbp ; ret
0x0000000000402aa7 : mov ecx, dword ptr [rax*8 + 0x406c60] ; jmp rcx
0x0000000000402d87 : mov ecx, dword ptr [rax*8 + 0x406ca8] ; jmp rcx
0x000000000040459e : mov ecx, dword ptr [rax*8 + 0x407168] ; jmp rcx
0x00000000004027b1 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004016a5 : mov edi, 0x608e20 ; mov rbp, rsp ; call rax
0x0000000000401622 : mov edi, 0x609248 ; jmp rax
0x0000000000401662 : mov edi, 0x609248 ; jmp rdx
0x00000000004051eb : mov edi, dword ptr [rbp - 0x10] ; call 0x401495
0x0000000000405215 : mov edi, dword ptr [rbp - 0x10] ; call 0x4014e5
0x0000000000406107 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000406106 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000401660 : mov esi, eax ; mov edi, 0x609248 ; jmp rdx
0x00000000004016a7 : mov fs, word ptr [rax] ; mov rbp, rsp ; call rax
0x0000000000401f1c : mov qword ptr [0x6092a8], rdi ; pop rbp ; ret
0x000000000040291d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403fda : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000403a9b : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000404e6a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040216b : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402764 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004020ee : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405102 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040271c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040234a : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004029ee : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000403fd8 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000404f4c : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040449e : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004016aa : mov rbp, rsp ; call rax
0x0000000000401610 : mov rbp, rsp ; ja 0x40161d ; pop rbp ; ret
0x0000000000402aa6 : mov rcx, qword ptr [rax*8 + 0x406c60] ; jmp rcx
0x0000000000402d86 : mov rcx, qword ptr [rax*8 + 0x406ca8] ; jmp rcx
0x000000000040459d : mov rcx, qword ptr [rax*8 + 0x407168] ; jmp rcx
0x00000000004051ea : mov rdi, qword ptr [rbp - 0x10] ; call 0x401496
0x0000000000405214 : mov rdi, qword ptr [rbp - 0x10] ; call 0x4014e6
0x000000000040165f : mov rsi, rax ; mov edi, 0x609248 ; jmp rdx
0x0000000000405c8b : movzx eax, al ; pop rbp ; ret
0x0000000000407c30 : nop ; ret 0xffff
0x0000000000406128 : nop dword ptr [rax + rax] ; ret
0x00000000004032fe : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x00000000004032ff : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x00000000004080cd : or byte ptr [rax], al ; add byte ptr [rax], al ; sar edi, 1 ; jmp rax
0x00000000004041c1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040611c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040611e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000404a5e : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406120 : pop r14 ; pop r15 ; ret
0x0000000000404a60 : pop r15 ; pop rbp ; ret
0x0000000000406122 : pop r15 ; ret
0x0000000000401682 : pop rbp ; mov byte ptr [rip + 0x207c16], 1 ; ret
0x0000000000401621 : pop rbp ; mov edi, 0x609248 ; jmp rax
0x000000000040165e : pop rbp ; mov rsi, rax ; mov edi, 0x609248 ; jmp rdx
0x000000000040611b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040611f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401615 : pop rbp ; ret
0x000000000040643b : pop rbx ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x9796
0x0000000000404a5d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004038ea : pop rbx ; pop rbp ; ret
0x0000000000404a61 : pop rdi ; pop rbp ; ret
0x0000000000406123 : pop rdi ; ret
0x000000000040522d : pop rdi ; ret 0xffff
0x0000000000404a5f : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000406121 : pop rsi ; pop r15 ; ret
0x000000000040611d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004051ef : popfq ; ret 0xffff
0x0000000000403f5e : push rax ; pop rbp ; ret
0x0000000000403302 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x00000000004016a4 : push rbp ; mov edi, 0x608e20 ; mov rbp, rsp ; call rax
0x000000000040583d : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x00000000004039ce : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x00000000004050e9 : push rbx ; ret
0x0000000000401241 : ret
0x000000000040675b : ret 0
0x0000000000401442 : ret 0x207c
0x00000000004022f9 : ret 0x30
0x0000000000402307 : ret 0x8148
0x0000000000404559 : ret 0x8844
0x0000000000404fd2 : ret 0x8948
0x000000000040342d : ret 0x89a5
0x0000000000403306 : ret 0x8b48
0x0000000000406440 : ret 0x9796
0x0000000000401c29 : ret 0xb0
0x0000000000401645 : ret 0xc148
0x0000000000404493 : ret 0xd284
0x000000000040391c : ret 0xee8
0x000000000040331b : ret 0xfe8
0x000000000040499a : ret 0xffca
0x000000000040230a : ret 0xffff
0x0000000000403c3e : ret 1
0x00000000004039d2 : ret 8
0x0000000000404b9b : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x00000000004029f0 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x402a5b ; ret
0x000000000040164c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40165b ; pop rbp ; ret
0x0000000000404b9c : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x00000000004029f1 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x402a5a ; ret
0x000000000040583e : ror byte ptr [rax - 0x7f], 1 ; ret 1
0x00000000004039cf : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000040164e : sar eax, 1 ; jne 0x401659 ; pop rbp ; ret
0x00000000004080d1 : sar edi, 1 ; jmp rax
0x000000000040164d : sar rax, 1 ; jne 0x40165a ; pop rbp ; ret
0x0000000000407c88 : sbb al, 0 ; add byte ptr [rax], al ; add al, 0 ; add al, ah ; ret 0xffff
0x0000000000407c28 : sbb al, 0 ; add byte ptr [rax], al ; in al, 3 ; add byte ptr [rax], al ; nop ; ret 0xffff
0x0000000000406438 : sbb esi, dword ptr [rax + 0x5bd4] ; add byte ptr [rax], al ; ret 0x9796
0x0000000000405c88 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000406981 : sub eax, 0x81b0 ; add byte ptr [rax], al ; ret
0x000000000040615d : sub esp, 8 ; add rsp, 8 ; ret
0x000000000040615c : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040612a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000404492 : xchg eax, esp ; ret 0xd284
0x0000000000405c4e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401239 : xor eax, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000402866 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
