0x0000000000403ff3 : adc al, 0x25 ; ret
0x000000000040dde0 : adc byte ptr [rcx - 1], al ; jmp rdx
0x0000000000404d4c : adc dword ptr [rax - 0x7f], ecx ; ret 1
0x0000000000408019 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004019e4 : add ah, byte ptr [rcx] ; jmp rax
0x0000000000401a24 : add ah, byte ptr [rcx] ; jmp rdx
0x0000000000405728 : add al, ch ; push rdx ; ret
0x000000000040e45f : add al, dl ; jnp 0x40e466 ; call qword ptr [rsi]
0x000000000040af1f : add bl, dh ; ret
0x0000000000402c39 : add byte ptr [rax + 0x63], cl ; ret 0x8b48
0x0000000000403ff0 : add byte ptr [rax - 0x73], cl ; adc al, 0x25 ; ret
0x0000000000402448 : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; push rax ; ret
0x0000000000402579 : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; xchg eax, ecx ; ret
0x0000000000402025 : add byte ptr [rax - 0x73], cl ; xor al, 0x25 ; hlt ; ret 0x40
0x00000000004068d2 : add byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x0000000000408ff8 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000040245f : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x0000000000404567 : add byte ptr [rax - 0x77], cl ; ret 0xb0e8
0x000000000040ddde : add byte ptr [rax], al ; adc byte ptr [rcx - 1], al ; jmp rdx
0x0000000000405726 : add byte ptr [rax], al ; add al, ch ; push rdx ; ret
0x000000000040af1d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000402c37 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8b48
0x0000000000403fee : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; adc al, 0x25 ; ret
0x0000000000402446 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; push rax ; ret
0x0000000000402577 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; xchg eax, ecx ; ret
0x000000000040245d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x0000000000404565 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0e8
0x000000000040af1b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000403fec : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; adc al, 0x25 ; ret
0x000000000040b289 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdx], bl ; ret
0x000000000040b3a9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dl, ah ; ret
0x000000000040b3ca : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xchg eax, ebx ; ret
0x000000000040b28b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdx], bl ; ret
0x000000000040b3ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add dl, ah ; ret
0x00000000004052fd : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040af1c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040b3cc : add byte ptr [rax], al ; add byte ptr [rax], al ; xchg eax, ebx ; ret
0x000000000040b209 : add byte ptr [rax], al ; add byte ptr [rbx], al ; add byte ptr [rax], al ; add byte ptr [rbx], dl ; ret
0x000000000040b20d : add byte ptr [rax], al ; add byte ptr [rbx], dl ; ret
0x0000000000403ac2 : add byte ptr [rax], al ; add byte ptr [rcx - 0xb343], al ; call qword ptr [rdx]
0x0000000000405504 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5588
0x0000000000403873 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x9588
0x00000000004056d9 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf280
0x00000000004088ee : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040b28d : add byte ptr [rax], al ; add byte ptr [rdx], bl ; ret
0x000000000040e0fe : add byte ptr [rax], al ; add byte ptr [rsi - 1], ch ; jmp rsp
0x000000000040b3ad : add byte ptr [rax], al ; add dl, ah ; ret
0x0000000000407fda : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407d80 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040152b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000040e45a : add byte ptr [rax], al ; and al, 7 ; add byte ptr [rax], al ; sar byte ptr [rbx - 1], 1 ; call qword ptr [rsi]
0x0000000000401749 : add byte ptr [rax], al ; jmp 0x401549
0x000000000040474a : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000406bc2 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004068d1 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040319e : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000408ebb : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000407d48 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040dc7e : add byte ptr [rax], al ; push rsp ; ret
0x000000000040af1e : add byte ptr [rax], al ; ret
0x000000000040e45e : add byte ptr [rax], al ; sar byte ptr [rbx - 1], 1 ; call qword ptr [rsi]
0x000000000040b3ce : add byte ptr [rax], al ; xchg eax, ebx ; ret
0x0000000000408ebc : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000407d49 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040329d : add byte ptr [rbx - 0x76b74f83], cl ; ret 0xb0
0x00000000004029fe : add byte ptr [rbx - 0xab4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040b20b : add byte ptr [rbx], al ; add byte ptr [rax], al ; add byte ptr [rbx], dl ; ret
0x000000000040b20f : add byte ptr [rbx], dl ; ret
0x000000000040565d : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5588
0x000000000040386f : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x9588
0x00000000004056d5 : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf280
0x0000000000403ac4 : add byte ptr [rcx - 0xb343], al ; call qword ptr [rdx]
0x0000000000401a48 : add byte ptr [rcx], al ; ret
0x000000000040e45b : add byte ptr [rdi + rax], ah ; add byte ptr [rax], al ; sar byte ptr [rbx - 1], 1 ; call qword ptr [rsi]
0x0000000000405506 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5588
0x0000000000403875 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x9588
0x00000000004056db : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf280
0x0000000000405547 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x00000000004088f0 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040b28f : add byte ptr [rdx], bl ; ret
0x000000000040e100 : add byte ptr [rsi - 1], ch ; jmp rsp
0x000000000040b3af : add dl, ah ; ret
0x000000000040b288 : add dword ptr [rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdx], bl ; ret
0x0000000000407fd8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408eba : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000407d47 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004051ea : add dword ptr [rdi], ecx ; mov dh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004067a3 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405bfa : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401a44 : add eax, 0x20e90e ; add ebx, esi ; ret
0x0000000000401a0b : add eax, edx ; sar rax, 1 ; jne 0x401a1c ; pop rbp ; ret
0x0000000000401a49 : add ebx, esi ; ret
0x0000000000401ebb : add esp, 0x10 ; pop rbp ; ret
0x000000000040ac3c : add esp, 0x130 ; pop rbp ; ret
0x0000000000407d44 : add esp, 0x138 ; pop rbx ; pop rbp ; ret
0x0000000000403e03 : add esp, 0x160 ; pop rbp ; ret
0x00000000004045cf : add esp, 0x180 ; pop rbp ; ret
0x00000000004091ac : add esp, 0x1a0 ; pop rbp ; ret
0x000000000040491d : add esp, 0x20 ; pop rbp ; ret
0x0000000000401fcd : add esp, 0x30 ; pop rbp ; ret
0x0000000000404b58 : add esp, 0x40 ; pop rbp ; ret
0x0000000000403f4e : add esp, 0x50 ; pop rbp ; ret
0x0000000000406e53 : add esp, 0x70 ; pop rbp ; ret
0x0000000000407efe : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040342b : add esp, 0x80 ; pop rbp ; ret
0x00000000004082cd : add esp, 0x90 ; pop rbp ; ret
0x0000000000409044 : add esp, 0xa0 ; pop rbp ; ret
0x0000000000403a6d : add esp, 0xb0 ; pop rbp ; ret
0x000000000040319a : add esp, 0xc0 ; pop rbp ; ret
0x0000000000404ef8 : add esp, 0xd0 ; pop rbp ; ret
0x000000000040a33f : add esp, 0xe0 ; pop rbp ; ret
0x000000000040152e : add esp, 8 ; ret
0x00000000004031ff : add esp, dword ptr [rcx] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406b02 : add esp, dword ptr [rcx] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406041 : add esp, dword ptr [rcx] ; pop rbp ; ret
0x0000000000401a0a : add rax, rdx ; sar rax, 1 ; jne 0x401a1d ; pop rbp ; ret
0x0000000000401eba : add rsp, 0x10 ; pop rbp ; ret
0x000000000040ac3b : add rsp, 0x130 ; pop rbp ; ret
0x0000000000407d43 : add rsp, 0x138 ; pop rbx ; pop rbp ; ret
0x0000000000403e02 : add rsp, 0x160 ; pop rbp ; ret
0x00000000004045ce : add rsp, 0x180 ; pop rbp ; ret
0x00000000004091ab : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000040491c : add rsp, 0x20 ; pop rbp ; ret
0x0000000000401fcc : add rsp, 0x30 ; pop rbp ; ret
0x0000000000404b57 : add rsp, 0x40 ; pop rbp ; ret
0x0000000000403f4d : add rsp, 0x50 ; pop rbp ; ret
0x0000000000406e52 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000407efd : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040342a : add rsp, 0x80 ; pop rbp ; ret
0x00000000004082cc : add rsp, 0x90 ; pop rbp ; ret
0x0000000000409043 : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000403a6c : add rsp, 0xb0 ; pop rbp ; ret
0x0000000000403199 : add rsp, 0xc0 ; pop rbp ; ret
0x0000000000404ef7 : add rsp, 0xd0 ; pop rbp ; ret
0x000000000040a33e : add rsp, 0xe0 ; pop rbp ; ret
0x000000000040152d : add rsp, 8 ; ret
0x0000000000406b01 : add rsp, qword ptr [rcx] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000405bf9 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040e45c : and al, 7 ; add byte ptr [rax], al ; sar byte ptr [rbx - 1], 1 ; call qword ptr [rsi]
0x0000000000401a47 : and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000408307 : and eax, 0x48fffffd ; add esp, 0x20 ; pop rbp ; ret
0x000000000040603f : and eax, 0x6103d0 ; pop rbp ; ret
0x0000000000406063 : and eax, 0x6103d8 ; pop rbp ; ret
0x00000000004056c0 : call 0x401982
0x0000000000404d49 : call 0x4851d89c
0x0000000000404d48 : call 0x4851d89d
0x000000000040541d : call 0x4851df70
0x000000000040541c : call 0x4851df71
0x0000000000406875 : call 0x490af1c8
0x0000000000406874 : call 0x490af1c9
0x0000000000407d79 : call 0xffffffffe90306c9
0x0000000000407d78 : call 0xffffffffe90306ca
0x00000000004019e3 : call 0xffffffffff407aee
0x0000000000401a23 : call 0xffffffffff407b2e
0x00000000004071ea : call 0xffffffffff40b2c0
0x000000000040aef9 : call qword ptr [r12 + rbx*8]
0x000000000040e0a3 : call qword ptr [rax]
0x0000000000403aca : call qword ptr [rdx]
0x000000000040e463 : call qword ptr [rsi]
0x000000000040aefa : call qword ptr [rsp + rbx*8]
0x0000000000401a6d : call rax
0x000000000040e703 : call rdx
0x000000000040ac3a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x00000000004093af : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405bc9 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000405b24 : clc ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004046f2 : clc ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401a0f : clc ; jne 0x401a18 ; pop rbp ; ret
0x00000000004068cf : clc ; mov byte ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000404a46 : clc ; mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000406d05 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405fcb : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000404883 : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000404887 : clc ; pop rbp ; ret
0x00000000004052fc : cld ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000401ee7 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403e01 : cld ; add rsp, 0x160 ; pop rbp ; ret
0x000000000040a60b : cld ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040a550 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404b56 : cld ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040547d : cld ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004051af : cld ; add rsp, 0x80 ; pop rbp ; ret
0x0000000000409bee : cld ; add rsp, 0xc0 ; pop rbp ; ret
0x0000000000404ef6 : cld ; add rsp, 0xd0 ; pop rbp ; ret
0x000000000040a33d : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x0000000000405fc8 : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040ad83 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040ad26 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040a54d : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404b53 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040547a : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040474e : cld ; pop rbp ; ret
0x0000000000402020 : cmp al, 0x25 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x000000000040244b : cmp al, 0x25 ; push rax ; ret
0x000000000040257c : cmp al, 0x25 ; xchg eax, ecx ; ret
0x0000000000407d46 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004019cd : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4019e0 ; pop rbp ; ret
0x0000000000402576 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; xchg eax, ecx ; ret
0x0000000000402022 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x00000000004089fc : cwde ; mov rcx, qword ptr [rax*8 + 0x40d2a8] ; jmp rcx
0x000000000040201d : dec dword ptr [rax - 0x73] ; cmp al, 0x25 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x00000000004025d2 : dec dword ptr [rax - 0x73] ; xor al, 0x25 ; wait ; ret
0x00000000004071e5 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; call 0xffffffffff40b2c5
0x0000000000403f98 : dec dword ptr [rax - 0x77] ; ret 0x8148
0x0000000000403bf9 : dec dword ptr [rax - 0x77] ; ret 0x8d8b
0x0000000000402a04 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004066d2 : dec dword ptr [rax - 0x77] ; ret 0xf5e8
0x000000000040ab9f : dec dword ptr [rax - 0x7f] ; ret 1
0x0000000000407e2b : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x00000000004069cd : enter -0x7cb8, -0x3c ; pop rbp ; ret
0x0000000000404561 : enter 0x2d48, 1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0e8
0x0000000000403f4a : fld xword ptr [rbp - 0x10] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040463b : fld xword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040479e : fld xword ptr [rbp - 0x24] ; pop rbp ; ret
0x0000000000404a36 : fldcw word ptr [rbp - 0x1a] ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000407763 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040aefc : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000404638 : fstp xword ptr [rbp - 0x10] ; fld xword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040479b : fstp xword ptr [rbp - 0x24] ; fld xword ptr [rbp - 0x24] ; pop rbp ; ret
0x00000000004049be : fstp xword ptr [rbp - 0x24] ; pop rbp ; ret
0x0000000000401eb9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004019e0 : hlt ; pop rbp ; mov edi, 0x6102e8 ; jmp rax
0x000000000040202a : hlt ; ret 0x40
0x0000000000409cfd : in al, dx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040565f : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5588
0x0000000000403871 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x9588
0x00000000004056d7 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf280
0x0000000000404a37 : insd dword ptr [rdi], dx ; out 0x48, al ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000409000 : int 0x80
0x00000000004056bb : iretd ; mov qword ptr [rbp - 0x38], rcx ; call 0x401987
0x00000000004019d3 : ja 0x4019da ; pop rbp ; ret
0x00000000004019df : je 0x4019dd ; pop rbp ; mov edi, 0x6102e8 ; jmp rax
0x0000000000404639 : jge 0x404631 ; fld xword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040479c : jge 0x404780 ; fld xword ptr [rbp - 0x24] ; pop rbp ; ret
0x00000000004049bf : jge 0x4049a0 ; pop rbp ; ret
0x000000000040174b : jmp 0x401547
0x0000000000402033 : jmp 0x49402036
0x000000000040e8a3 : jmp qword ptr [rax]
0x000000000040de83 : jmp qword ptr [rbx]
0x000000000040e783 : jmp qword ptr [rdx]
0x00000000004019e7 : jmp rax
0x000000000040219c : jmp rcx
0x0000000000401a27 : jmp rdx
0x000000000040e103 : jmp rsp
0x0000000000401a10 : jne 0x401a17 ; pop rbp ; ret
0x000000000040e1c1 : jne 0x40e1c4 ; call qword ptr [rax]
0x000000000040e461 : jnp 0x40e464 ; call qword ptr [rsi]
0x0000000000406e55 : jo 0x406eb6 ; ret
0x0000000000408564 : jo 0x4085c5 ; ret
0x000000000040869e : jo 0x4086ff ; ret
0x0000000000407f00 : js 0x407f60 ; pop rbp ; ret
0x0000000000402b58 : loopne 0x402ba8 ; add esp, 0x30 ; pop rbp ; ret
0x0000000000402b57 : loopne 0x402ba9 ; add esp, 0x30 ; pop rbp ; ret
0x0000000000404989 : loopne 0x4049d9 ; add esp, 0x30 ; pop rbp ; ret
0x0000000000404988 : loopne 0x4049da ; add esp, 0x30 ; pop rbp ; ret
0x0000000000404f34 : loopne 0x404f87 ; mov ecx, dword ptr [rax*8 + 0x40b050] ; jmp rcx
0x0000000000405253 : loopne 0x4052a6 ; mov ecx, dword ptr [rax*8 + 0x40b088] ; jmp rcx
0x000000000040a341 : loopne 0x40a348 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000403429 : mov ah, 0x48 ; add esp, 0x80 ; pop rbp ; ret
0x0000000000403a6f : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000405a8d : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004082cb : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000405bf6 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040028b : mov bh, 0x41 ; test dword ptr [rsi + 0x44349150], ebp ; std ; ret 0xa10e
0x0000000000401529 : mov bl, 2 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000406061 : mov byte ptr [0x6103d8], al ; pop rbp ; ret
0x00000000004040e5 : mov byte ptr [rax], -0x77 ; ret 0xf48
0x00000000004068d0 : mov byte ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000404a47 : mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000401a43 : mov byte ptr [rip + 0x20e90e], 1 ; ret
0x00000000004051ec : mov dh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004067a5 : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405bfc : mov dh, -0x40 ; pop rbp ; ret
0x000000000040603d : mov dword ptr [0x6103d0], edi ; pop rbp ; ret
0x0000000000406d06 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000406c14 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000406cc8 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004048e2 : mov dword ptr [rbp - 0x18], eax ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000401fc9 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004056bd : mov dword ptr [rbp - 0x38], ecx ; call 0x401985
0x0000000000405a8b : mov dword ptr [rbp - 0x50], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401eb7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401ee5 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405fc9 : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000404881 : mov dword ptr [rbp - 8], eax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000406d7e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407efc : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000406bc8 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004092cb : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040628c : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406bc5 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040620f : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000409cfb : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406852 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406b7d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000405713 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004049bb : mov eax, dword ptr [rbp - 0x18] ; fstp xword ptr [rbp - 0x24] ; pop rbp ; ret
0x0000000000406c0e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004048e6 : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000402b56 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406cca : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004069cb : mov eax, dword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000406e4f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000407efa : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000408439 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040ad84 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040a609 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040a54e : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404b54 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040547b : mov eax, dword ptr [rbp - 4] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040474c : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004093ad : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405bc7 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000405b22 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004046f0 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000404885 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040491a : mov eax, ecx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040dc79 : mov ebp, 0x138cffff ; add byte ptr [rax], al ; push rsp ; ret
0x0000000000401a6b : mov ebp, esp ; call rax
0x00000000004019d1 : mov ebp, esp ; ja 0x4019dc ; pop rbp ; ret
0x0000000000402195 : mov ecx, dword ptr [rax*8 + 0x40af70] ; jmp rcx
0x0000000000404670 : mov ecx, dword ptr [rax*8 + 0x40afe0] ; jmp rcx
0x00000000004047d6 : mov ecx, dword ptr [rax*8 + 0x40b008] ; jmp rcx
0x0000000000404f36 : mov ecx, dword ptr [rax*8 + 0x40b050] ; jmp rcx
0x0000000000405255 : mov ecx, dword ptr [rax*8 + 0x40b088] ; jmp rcx
0x0000000000406f07 : mov ecx, dword ptr [rax*8 + 0x40cda0] ; jmp rcx
0x00000000004071e7 : mov ecx, dword ptr [rax*8 + 0x40cde8] ; jmp rcx
0x00000000004089fe : mov ecx, dword ptr [rax*8 + 0x40d2a8] ; jmp rcx
0x0000000000409a34 : mov ecx, dword ptr [rax*8 + 0x40d620] ; jmp rcx
0x00000000004099c0 : mov ecx, dword ptr [rax*8 + 0x40d680] ; jmp rcx
0x000000000040a17d : mov ecx, dword ptr [rax*8 + 0x40d750] ; jmp rcx
0x000000000040a0fd : mov ecx, dword ptr [rax*8 + 0x40d7b0] ; jmp rcx
0x0000000000406c11 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401a65 : mov edi, 0x60fe20 ; mov rbp, rsp ; call rax
0x00000000004019e2 : mov edi, 0x6102e8 ; jmp rax
0x0000000000401a22 : mov edi, 0x6102e8 ; jmp rdx
0x000000000040aef7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000040aef6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000401a20 : mov esi, eax ; mov edi, 0x6102e8 ; jmp rdx
0x000000000040603c : mov qword ptr [0x6103d0], rdi ; pop rbp ; ret
0x00000000004048e1 : mov qword ptr [rbp - 0x18], rax ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004056bc : mov qword ptr [rbp - 0x38], rcx ; call 0x401986
0x0000000000404880 : mov qword ptr [rbp - 8], rax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000406d7d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405a8c : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000407efb : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x00000000004092ca : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040628b : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406bc4 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040620e : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000406851 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406b7c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000405712 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004049ba : mov rax, qword ptr [rbp - 0x18] ; fstp xword ptr [rbp - 0x24] ; pop rbp ; ret
0x00000000004048e5 : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000402b55 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004069ca : mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000406e4e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000408438 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004093ac : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405bc6 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000405b21 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004046ef : mov rax, qword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000404884 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000404919 : mov rax, rcx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401a6a : mov rbp, rsp ; call rax
0x00000000004019d0 : mov rbp, rsp ; ja 0x4019dd ; pop rbp ; ret
0x0000000000402194 : mov rcx, qword ptr [rax*8 + 0x40af70] ; jmp rcx
0x000000000040466f : mov rcx, qword ptr [rax*8 + 0x40afe0] ; jmp rcx
0x00000000004047d5 : mov rcx, qword ptr [rax*8 + 0x40b008] ; jmp rcx
0x0000000000404f35 : mov rcx, qword ptr [rax*8 + 0x40b050] ; jmp rcx
0x0000000000405254 : mov rcx, qword ptr [rax*8 + 0x40b088] ; jmp rcx
0x0000000000406f06 : mov rcx, qword ptr [rax*8 + 0x40cda0] ; jmp rcx
0x00000000004071e6 : mov rcx, qword ptr [rax*8 + 0x40cde8] ; jmp rcx
0x00000000004089fd : mov rcx, qword ptr [rax*8 + 0x40d2a8] ; jmp rcx
0x0000000000409a33 : mov rcx, qword ptr [rax*8 + 0x40d620] ; jmp rcx
0x00000000004099bf : mov rcx, qword ptr [rax*8 + 0x40d680] ; jmp rcx
0x000000000040a17c : mov rcx, qword ptr [rax*8 + 0x40d750] ; jmp rcx
0x000000000040a0fc : mov rcx, qword ptr [rax*8 + 0x40d7b0] ; jmp rcx
0x0000000000401a1f : mov rsi, rax ; mov edi, 0x6102e8 ; jmp rdx
0x000000000040b3c8 : mov word ptr [rax], es ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xchg eax, ebx ; ret
0x000000000040dc7c : mov word ptr [rbx], ss ; add byte ptr [rax], al ; push rsp ; ret
0x000000000040201a : movabs byte ptr [0xa6253c8d48fffff8], al ; ret
0x00000000004025df : movabs byte ptr [0xb025048d4c0040c3], al ; ret
0x00000000004056ba : movsxd rcx, edi ; mov qword ptr [rbp - 0x38], rcx ; call 0x401988
0x00000000004056b9 : movsxd rcx, edi ; mov qword ptr [rbp - 0x38], rcx ; call 0x401989
0x00000000004067a4 : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405bfb : movzx eax, al ; pop rbp ; ret
0x0000000000404a4a : movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x00000000004051eb : movzx eax, cl ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040af18 : nop dword ptr [rax + rax] ; ret
0x0000000000405596 : or al, 0x25 ; push 0xf006102 ; xchg eax, ebp ; ret 0x5588
0x0000000000405542 : or al, 0x25 ; push 0xf006102 ; xchg eax, esp ; ret 0x5588
0x00000000004071e8 : or al, 0xffffffffffffffc5 ; call 0xffffffffff40b2c2
0x000000000040775e : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040775f : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000408621 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004049b9 : out 0x48, al ; mov eax, dword ptr [rbp - 0x18] ; fstp xword ptr [rbp - 0x24] ; pop rbp ; ret
0x0000000000404a38 : out 0x48, al ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040af0c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040af0e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000408ebe : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040af10 : pop r14 ; pop r15 ; ret
0x0000000000408ec0 : pop r15 ; pop rbp ; ret
0x000000000040af12 : pop r15 ; ret
0x0000000000401a42 : pop rbp ; mov byte ptr [rip + 0x20e90e], 1 ; ret
0x00000000004019e1 : pop rbp ; mov edi, 0x6102e8 ; jmp rax
0x0000000000401a1e : pop rbp ; mov rsi, rax ; mov edi, 0x6102e8 ; jmp rdx
0x000000000040af0b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040af0f : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004019d5 : pop rbp ; ret
0x0000000000408ebd : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000407d4a : pop rbx ; pop rbp ; ret
0x0000000000408ec1 : pop rdi ; pop rbp ; ret
0x000000000040af13 : pop rdi ; ret
0x0000000000408ebf : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040af11 : pop rsi ; pop r15 ; ret
0x000000000040af0d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405598 : push 0xf006102 ; xchg eax, ebp ; ret 0x5588
0x0000000000405544 : push 0xf006102 ; xchg eax, esp ; ret 0x5588
0x0000000000403f50 : push rax ; pop rbp ; ret
0x000000000040244d : push rax ; ret
0x000000000040028f : push rax ; xchg eax, ecx ; xor al, 0x44 ; std ; ret 0xa10e
0x0000000000407762 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000401a64 : push rbp ; mov edi, 0x60fe20 ; mov rbp, rsp ; call rax
0x00000000004058f5 : push rbp ; ror byte ptr [rax - 0x77], 1 ; ret 0x81e8
0x000000000040a82d : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x0000000000407e2e : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000040572a : push rdx ; ret
0x000000000040dc80 : push rsp ; ret
0x0000000000401531 : ret
0x00000000004050e7 : ret 0
0x00000000004040d4 : ret 0x20
0x0000000000401952 : ret 0x20e8
0x0000000000401752 : ret 0x20e9
0x0000000000401542 : ret 0x20ea
0x000000000040202b : ret 0x40
0x0000000000405509 : ret 0x5588
0x00000000004038b1 : ret 0x5589
0x0000000000403f9b : ret 0x8148
0x00000000004058f9 : ret 0x81e8
0x0000000000403b2a : ret 0x858a
0x0000000000403ce6 : ret 0x8844
0x0000000000409432 : ret 0x8948
0x000000000040788d : ret 0x89a5
0x0000000000402c3c : ret 0x8b48
0x0000000000403bfc : ret 0x8d8b
0x0000000000406358 : ret 0x92e8
0x0000000000403878 : ret 0x9588
0x000000000040777b : ret 0x9fe8
0x0000000000400294 : ret 0xa10e
0x0000000000402462 : ret 0xb0
0x000000000040456a : ret 0xb0e8
0x0000000000401a05 : ret 0xc148
0x0000000000406479 : ret 0xc1e8
0x00000000004088f3 : ret 0xd284
0x00000000004034fe : ret 0xd689
0x0000000000407d7c : ret 0xee8
0x00000000004056de : ret 0xf280
0x00000000004040e9 : ret 0xf48
0x00000000004066d5 : ret 0xf5e8
0x00000000004028cd : ret 0xffff
0x0000000000402c35 : ret 1
0x0000000000407e32 : ret 8
0x0000000000404efa : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000408a02 : rol byte ptr [rax], cl ; jmp rcx
0x0000000000408ffb : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000406e50 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x406ebb ; ret
0x0000000000401a0c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401a1b ; pop rbp ; ret
0x0000000000408ffc : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x00000000004058f6 : ror byte ptr [rax - 0x77], 1 ; ret 0x81e8
0x0000000000406e51 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x406eba ; ret
0x0000000000403a6b : ror byte ptr [rax - 0x7f], -0x3c ; mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040a82e : ror byte ptr [rax - 0x7f], 1 ; ret 1
0x0000000000407e2f : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000404918 : ror dword ptr [rax - 0x77], -0x38 ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004019de : sal byte ptr [rsp + rsi*8 + 0x5d], -0x41 ; call 0xffffffffff407af3
0x000000000040e460 : sar byte ptr [rbx - 1], 1 ; call qword ptr [rsi]
0x0000000000403da5 : sar dh, -1 ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004040e2 : sar dword ptr [rax + 0x40c60b], -0x77 ; ret 0xf48
0x0000000000404435 : sar dword ptr [rax + 0x40c6b4], -0x77 ; ret 0xf48
0x0000000000401a0e : sar eax, 1 ; jne 0x401a19 ; pop rbp ; ret
0x0000000000401a0d : sar rax, 1 ; jne 0x401a1a ; pop rbp ; ret
0x000000000040028e : scasb al, byte ptr [rdi] ; push rax ; xchg eax, ecx ; xor al, 0x44 ; std ; ret 0xa10e
0x0000000000400293 : std ; ret 0xa10e
0x0000000000405bf8 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040af4d : sub esp, 8 ; add rsp, 8 ; ret
0x000000000040af4c : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040af1a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040028c : test dword ptr [r14 + 0x44349150], ebp ; std ; ret 0xa10e
0x000000000040028d : test dword ptr [rsi + 0x44349150], ebp ; std ; ret 0xa10e
0x00000000004025d7 : wait ; ret
0x0000000000405508 : xchg eax, ebp ; ret 0x5588
0x0000000000403877 : xchg eax, ebp ; ret 0x9588
0x00000000004056dd : xchg eax, ebp ; ret 0xf280
0x000000000040b3d0 : xchg eax, ebx ; ret
0x000000000040257e : xchg eax, ecx ; ret
0x0000000000400290 : xchg eax, ecx ; xor al, 0x44 ; std ; ret 0xa10e
0x0000000000405549 : xchg eax, esp ; ret 0x5588
0x00000000004088f2 : xchg eax, esp ; ret 0xd284
0x0000000000402028 : xor al, 0x25 ; hlt ; ret 0x40
0x00000000004025d5 : xor al, 0x25 ; wait ; ret
0x0000000000400291 : xor al, 0x44 ; std ; ret 0xa10e
0x000000000040ac3e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000406cc6 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
