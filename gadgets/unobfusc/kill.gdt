0x0000000000403e69 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407c7b : add al, ah ; sar edi, cl ; call qword ptr [rax]
0x0000000000407ceb : add al, al ; fcos ; call rax
0x0000000000407bb3 : add al, al ; ret
0x000000000040505b : add al, ch ; out dx, eax ; ret
0x0000000000408477 : add al, ch ; ret 0xffff
0x000000000040761f : add al, dl ; xor eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; sysenter
0x0000000000407bac : add bl, -1 ; call rax
0x00000000004067ff : add bl, dh ; ret
0x0000000000404e48 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000407baa : add byte ptr [rax], al ; add bl, -1 ; call rax
0x00000000004067fd : add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004067fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000400320 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x0000000000400322 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000004067fc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400324 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x000000000040734c : add byte ptr [rax], al ; add byte ptr [rax], al ; sysenter
0x000000000040473e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000408471 : add byte ptr [rax], al ; add byte ptr [rsi + rax], ah ; add al, ch ; ret 0xffff
0x0000000000403e2a : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403bd0 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004012f3 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000408432 : add byte ptr [rax], al ; and al, 6 ; add byte ptr [rax], al ; call 0x23408407
0x0000000000408436 : add byte ptr [rax], al ; call 0x23408403
0x0000000000408176 : add byte ptr [rax], al ; call 0xffffffffd340813d
0x0000000000401389 : add byte ptr [rax], al ; jmp 0x401309
0x0000000000402a12 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000407bfa : add byte ptr [rax], al ; or al, 0xff ; call qword ptr [rax]
0x0000000000404121 : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000404d0b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403b98 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000407cba : add byte ptr [rax], al ; push rax ; fdivr st(7) ; call qword ptr [rax]
0x0000000000407d3a : add byte ptr [rax], al ; push rax ; out -1, eax ; call qword ptr [rax]
0x0000000000407cea : add byte ptr [rax], al ; rcr cl, -1 ; call rax
0x00000000004067fe : add byte ptr [rax], al ; ret
0x0000000000400326 : add byte ptr [rax], al ; ret 1
0x0000000000407c3a : add byte ptr [rax], al ; ror dl, -1 ; call qword ptr [rax]
0x0000000000407daa : add byte ptr [rax], al ; shr bl, -1 ; call rax
0x0000000000407dba : add byte ptr [rax], al ; sub ah, -1 ; call qword ptr [rax]
0x0000000000407d6a : add byte ptr [rax], al ; sub cl, -1 ; call rax
0x000000000040734e : add byte ptr [rax], al ; sysenter
0x0000000000408797 : add byte ptr [rax], bh ; fcos ; jmp rax
0x0000000000407d2b : add byte ptr [rax], dl ; out -1, al ; call rax
0x0000000000404d0c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000403b99 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040503e : add byte ptr [rcx - 0x161703bb], cl ; ret
0x0000000000405068 : add byte ptr [rcx - 0x401707bb], cl ; ret
0x0000000000401778 : add byte ptr [rcx], al ; ret
0x0000000000404740 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000408473 : add byte ptr [rsi + rax], ah ; add al, ch ; ret 0xffff
0x0000000000408433 : add byte ptr [rsi + rax], ah ; add byte ptr [rax], al ; call 0x23408406
0x0000000000403e28 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404d0a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000403b97 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040635a : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401774 : add eax, 0x207cfe ; add ebx, esi ; ret
0x000000000040173b : add eax, edx ; sar rax, 1 ; jne 0x40174c ; pop rbp ; ret
0x0000000000401779 : add ebx, esi ; ret
0x000000000040191b : add esp, 0x10 ; pop rbp ; ret
0x00000000004060bc : add esp, 0x130 ; pop rbp ; ret
0x0000000000403b94 : add esp, 0x138 ; pop rbx ; pop rbp ; ret
0x0000000000404ffc : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000402820 : add esp, 0x20 ; pop rbp ; ret
0x0000000000401a2d : add esp, 0x30 ; pop rbp ; ret
0x00000000004022c3 : add esp, 0x40 ; pop rbp ; ret
0x0000000000402184 : add esp, 0x50 ; pop rbp ; ret
0x00000000004025b6 : add esp, 0x60 ; pop rbp ; ret
0x0000000000402ca3 : add esp, 0x70 ; pop rbp ; ret
0x0000000000403d4e : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040411d : add esp, 0x90 ; pop rbp ; ret
0x0000000000404e94 : add esp, 0xa0 ; pop rbp ; ret
0x00000000004012f6 : add esp, 8 ; ret
0x000000000040173a : add rax, rdx ; sar rax, 1 ; jne 0x40174d ; pop rbp ; ret
0x000000000040191a : add rsp, 0x10 ; pop rbp ; ret
0x00000000004060bb : add rsp, 0x130 ; pop rbp ; ret
0x0000000000403b93 : add rsp, 0x138 ; pop rbx ; pop rbp ; ret
0x0000000000404ffb : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000040281f : add rsp, 0x20 ; pop rbp ; ret
0x0000000000401a2c : add rsp, 0x30 ; pop rbp ; ret
0x00000000004022c2 : add rsp, 0x40 ; pop rbp ; ret
0x0000000000402183 : add rsp, 0x50 ; pop rbp ; ret
0x00000000004025b5 : add rsp, 0x60 ; pop rbp ; ret
0x0000000000402ca2 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000403d4d : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040411c : add rsp, 0x90 ; pop rbp ; ret
0x0000000000404e93 : add rsp, 0xa0 ; pop rbp ; ret
0x00000000004012f5 : add rsp, 8 ; ret
0x0000000000406359 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000408434 : and al, 6 ; add byte ptr [rax], al ; call 0x23408405
0x0000000000401777 : and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000404157 : and eax, 0x48fffffd ; add esp, 0x20 ; pop rbp ; ret
0x00000000004025cf : and eax, 0x609480 ; pop rbp ; ret
0x00000000004025f3 : and eax, 0x609488 ; pop rbp ; ret
0x0000000000408438 : call 0x23408401
0x0000000000405474 : call 0x401616
0x0000000000408178 : call 0xffffffffd340813b
0x0000000000403bc9 : call 0xffffffffe902c519
0x0000000000403bc8 : call 0xffffffffe902c51a
0x00000000004067d9 : call qword ptr [r12 + rbx*8]
0x0000000000407aff : call qword ptr [rax]
0x0000000000407f7b : call qword ptr [rsi]
0x00000000004067da : call qword ptr [rsp + rbx*8]
0x0000000000407baf : call rax
0x000000000040817b : call rdx
0x00000000004060ba : clc ; add rsp, 0x130 ; pop rbp ; ret
0x00000000004051ff : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404751 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040173f : clc ; jne 0x401748 ; pop rbp ; ret
0x0000000000402b55 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040672b : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040672e : clc ; pop rbp ; ret
0x0000000000401947 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405a8b : cld ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004059d0 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000405796 : cld ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004025b4 : cld ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000406728 : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000406203 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004061a6 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004059cd : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004025b1 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000403b96 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004016fd : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401710 ; pop rbp ; ret
0x00000000004012f1 : cmp eax, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000401b5b : cwde ; mov rcx, qword ptr [rax*8 + 0x406850] ; jmp rcx
0x000000000040484c : cwde ; mov rcx, qword ptr [rax*8 + 0x4076f8] ; jmp rcx
0x000000000040601f : dec dword ptr [rax - 0x7f] ; ret 1
0x0000000000403c7b : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000407ced : fcos ; call rax
0x0000000000408799 : fcos ; jmp rax
0x0000000000407cbd : fdivr st(7) ; call qword ptr [rax]
0x00000000004035b3 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x00000000004067dc : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000401919 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401710 : hlt ; pop rbp ; mov edi, 0x609418 ; jmp rax
0x0000000000405065 : in al, 0x79 ; add byte ptr [rcx - 0x401707bb], cl ; ret
0x00000000004022c1 : in al, dx ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000404e50 : int 0x80
0x0000000000401703 : ja 0x40170a ; pop rbp ; ret
0x000000000040170f : je 0x40170d ; pop rbp ; mov edi, 0x609418 ; jmp rax
0x0000000000401776 : jl 0x40179d ; add byte ptr [rcx], al ; ret
0x000000000040138b : jmp 0x401307
0x000000000040831b : jmp qword ptr [rax]
0x00000000004081fb : jmp qword ptr [rdx]
0x0000000000401717 : jmp rax
0x0000000000401b64 : jmp rcx
0x0000000000401757 : jmp rdx
0x0000000000401740 : jne 0x401747 ; pop rbp ; ret
0x000000000040503c : jns 0x405086 ; add byte ptr [rcx - 0x161703bb], cl ; ret
0x0000000000405066 : jns 0x4050b0 ; add byte ptr [rcx - 0x401707bb], cl ; ret
0x0000000000402ca5 : jo 0x402d06 ; ret
0x00000000004043b4 : jo 0x404415 ; ret
0x00000000004044ee : jo 0x40454f ; ret
0x0000000000403d50 : js 0x403db0 ; pop rbp ; ret
0x0000000000407c78 : lock or dword ptr [rax], eax ; add al, ah ; sar edi, cl ; call qword ptr [rax]
0x0000000000407b7d : mov al, -1 ; call qword ptr [rax]
0x0000000000405472 : mov al, 0 ; call 0x401618
0x000000000040428b : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040411b : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000407ce8 : mov al, 0xb ; add byte ptr [rax], al ; rcr cl, -1 ; call rax
0x0000000000407d68 : mov al, 0xd ; add byte ptr [rax], al ; sub cl, -1 ; call rax
0x0000000000407da8 : mov al, 0xe ; add byte ptr [rax], al ; shr bl, -1 ; call rax
0x0000000000407ba8 : mov al, 6 ; add byte ptr [rax], al ; add bl, -1 ; call rax
0x0000000000406356 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004025f1 : mov byte ptr [0x609488], al ; pop rbp ; ret
0x0000000000401773 : mov byte ptr [rip + 0x207cfe], 1 ; ret
0x000000000040635c : mov dh, -0x40 ; pop rbp ; ret
0x00000000004025cd : mov dword ptr [0x609480], edi ; pop rbp ; ret
0x0000000000402b56 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000402a64 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000402b18 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000401a29 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040235a : mov dword ptr [rbp - 0x44], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401917 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401945 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406729 : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402bce : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403d4c : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000402a18 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040511b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040281c : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402a15 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040279f : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004022bf : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004053b3 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004029cd : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402180 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000402a5e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000402b1a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000402c9f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000403d4a : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000404289 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000406204 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405a89 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004059ce : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000405794 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004025b2 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004051fd : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040474f : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040672c : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040553d : mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040179b : mov ebp, esp ; call rax
0x0000000000401701 : mov ebp, esp ; ja 0x40170c ; pop rbp ; ret
0x0000000000401b5d : mov ecx, dword ptr [rax*8 + 0x406850] ; jmp rcx
0x0000000000402d57 : mov ecx, dword ptr [rax*8 + 0x4071f0] ; jmp rcx
0x0000000000403037 : mov ecx, dword ptr [rax*8 + 0x407238] ; jmp rcx
0x000000000040484e : mov ecx, dword ptr [rax*8 + 0x4076f8] ; jmp rcx
0x0000000000402a61 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401795 : mov edi, 0x608e20 ; mov rbp, rsp ; call rax
0x0000000000401712 : mov edi, 0x609418 ; jmp rax
0x0000000000401752 : mov edi, 0x609418 ; jmp rdx
0x00000000004067d7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x00000000004067d6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000401750 : mov esi, eax ; mov edi, 0x609418 ; jmp rdx
0x000000000040235c : mov esp, 0x50c48348 ; pop rbp ; ret
0x0000000000401797 : mov fs, word ptr [rax] ; mov rbp, rsp ; call rax
0x00000000004025cc : mov qword ptr [0x609480], rdi ; pop rbp ; ret
0x0000000000402bcd : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040235b : mov r12d, 0x50c48348 ; pop rbp ; ret
0x000000000040428a : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000403d4b : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x000000000040511a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040281b : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402a14 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040279e : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004053b2 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004029cc : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402c9e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000404288 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004051fc : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040474e : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040179a : mov rbp, rsp ; call rax
0x0000000000401700 : mov rbp, rsp ; ja 0x40170d ; pop rbp ; ret
0x0000000000401b5c : mov rcx, qword ptr [rax*8 + 0x406850] ; jmp rcx
0x0000000000402d56 : mov rcx, qword ptr [rax*8 + 0x4071f0] ; jmp rcx
0x0000000000403036 : mov rcx, qword ptr [rax*8 + 0x407238] ; jmp rcx
0x000000000040484d : mov rcx, qword ptr [rax*8 + 0x4076f8] ; jmp rcx
0x000000000040174f : mov rsi, rax ; mov edi, 0x609418 ; jmp rdx
0x0000000000407ba4 : movabs al, byte ptr [0x80000006b0ffffc2] ; ret
0x000000000040635b : movzx eax, al ; pop rbp ; ret
0x00000000004067f8 : nop dword ptr [rax + rax] ; ret
0x0000000000407d29 : or al, 0 ; add byte ptr [rax], dl ; out -1, al ; call rax
0x0000000000407bfc : or al, 0xff ; call qword ptr [rax]
0x00000000004035ae : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x00000000004035af : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000407c79 : or dword ptr [rax], eax ; add al, ah ; sar edi, cl ; call qword ptr [rax]
0x0000000000408795 : or dword ptr [rax], eax ; add byte ptr [rax], bh ; fcos ; jmp rax
0x0000000000407ce9 : or eax, dword ptr [rax] ; add al, al ; fcos ; call rax
0x0000000000404471 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407d2d : out -1, al ; call rax
0x0000000000407d3d : out -1, eax ; call qword ptr [rax]
0x000000000040505d : out dx, eax ; ret
0x00000000004067ec : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004067ee : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000404d0e : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004067f0 : pop r14 ; pop r15 ; ret
0x0000000000404d10 : pop r15 ; pop rbp ; ret
0x00000000004067f2 : pop r15 ; ret
0x0000000000401772 : pop rbp ; mov byte ptr [rip + 0x207cfe], 1 ; ret
0x0000000000401711 : pop rbp ; mov edi, 0x609418 ; jmp rax
0x000000000040174e : pop rbp ; mov rsi, rax ; mov edi, 0x609418 ; jmp rdx
0x00000000004067eb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004067ef : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401705 : pop rbp ; ret
0x0000000000404d0d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403b9a : pop rbx ; pop rbp ; ret
0x0000000000404d11 : pop rdi ; pop rbp ; ret
0x00000000004067f3 : pop rdi ; ret
0x0000000000404d0f : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004067f1 : pop rsi ; pop r15 ; ret
0x00000000004067ed : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000402951 : push 0x48006094 ; add esp, 0x30 ; pop rbp ; ret
0x0000000000407d27 : push qword ptr [rax + 0x1000000c] ; out -1, al ; call rax
0x0000000000407c67 : push qword ptr [rax + 0x60000009] ; sar bh, cl ; call rax
0x0000000000407ce7 : push qword ptr [rax - 0x3ffffff5] ; fcos ; call rax
0x0000000000407ba7 : push qword ptr [rax - 0x7ffffffa] ; ret
0x0000000000407cbc : push rax ; fdivr st(7) ; call qword ptr [rax]
0x0000000000407c77 : push rax ; or dword ptr [rax], eax ; add al, ah ; sar edi, cl ; call qword ptr [rax]
0x0000000000407d3c : push rax ; out -1, eax ; call qword ptr [rax]
0x0000000000402186 : push rax ; pop rbp ; ret
0x00000000004035b2 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000401794 : push rbp ; mov edi, 0x608e20 ; mov rbp, rsp ; call rax
0x0000000000405cad : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x0000000000403c7e : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000401c36 : push rbp ; test byte ptr [rax - 0x77], cl ; ret 0x4d8b
0x0000000000407cec : rcr cl, -1 ; call rax
0x00000000004012f9 : ret
0x0000000000401592 : ret 0x207b
0x0000000000401392 : ret 0x207c
0x0000000000401c3a : ret 0x4d8b
0x00000000004021d7 : ret 0x5589
0x0000000000404809 : ret 0x8844
0x0000000000405282 : ret 0x8948
0x00000000004036dd : ret 0x89a5
0x0000000000401c9a : ret 0x8b48
0x00000000004035cb : ret 0xafe8
0x0000000000401d09 : ret 0xb0
0x0000000000401735 : ret 0xc148
0x000000000040588f : ret 0xd139
0x0000000000404743 : ret 0xd284
0x0000000000403bcc : ret 0xee8
0x0000000000405cba : ret 0xffb8
0x000000000040547a : ret 0xffbe
0x0000000000407ba5 : ret 0xffff
0x0000000000400328 : ret 1
0x0000000000401c0e : ret 2
0x0000000000403c82 : ret 8
0x0000000000404e4b : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000402ca0 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x402d0b ; ret
0x000000000040173c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40174b ; pop rbp ; ret
0x0000000000404e4c : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000402ca1 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x402d0a ; ret
0x0000000000405cae : ror byte ptr [rax - 0x7f], 1 ; ret 1
0x0000000000402234 : ror byte ptr [rcx + 0x48ce89cf], -0x77 ; ret 0x8b48
0x0000000000403c7f : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000407c3c : ror dl, -1 ; call qword ptr [rax]
0x0000000000407c6d : sar bh, cl ; call rax
0x000000000040503b : sar byte ptr [rcx + 0x40], 1 ; add byte ptr [rcx - 0x161703bb], cl ; ret
0x000000000040173e : sar eax, 1 ; jne 0x401749 ; pop rbp ; ret
0x0000000000407c7d : sar edi, cl ; call qword ptr [rax]
0x000000000040173d : sar rax, 1 ; jne 0x40174a ; pop rbp ; ret
0x0000000000407dac : shr bl, -1 ; call rax
0x0000000000406358 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000407dbc : sub ah, -1 ; call qword ptr [rax]
0x0000000000407d6c : sub cl, -1 ; call rax
0x000000000040682d : sub esp, 8 ; add rsp, 8 ; ret
0x000000000040682c : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000407350 : sysenter
0x0000000000401c37 : test byte ptr [rax - 0x77], cl ; ret 0x4d8b
0x00000000004067fa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000404742 : xchg eax, esp ; ret 0xd284
0x00000000004060be : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000407621 : xor eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; sysenter
0x0000000000402b16 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
