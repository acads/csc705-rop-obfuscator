0x000000000040a8d8 : adc al, 0x48 ; add esp, 0x10 ; pop rbp ; ret
0x0000000000407e95 : adc al, 1 ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040a8bc : adc dh, dh ; ret 0xf01
0x0000000000402d77 : adc eax, 0x48ffffe8 ; add esp, 0x10 ; pop rbp ; ret
0x0000000000405819 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004066fb : add al, 0 ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x40b6
0x0000000000402a38 : add al, 0x25 ; push rax ; shl byte ptr [rax], cl ; pop rbp ; ret
0x00000000004023d8 : add al, ch ; ret 0xfff2
0x0000000000402558 : add al, ch ; ret 0xfff3
0x000000000040aa6f : add bl, dh ; ret
0x0000000000408b53 : add byte ptr [rax + 1], cl ; ret 0x4a3b
0x00000000004020b4 : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x0000000000402196 : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x40ac
0x00000000004066fd : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x40b6
0x0000000000406cb8 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000040aa6d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000408b51 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x4a3b
0x000000000040aa6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000400398 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040039a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040a7b1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040039c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000402f73 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x0000000000403086 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000040a802 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004060ee : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004057da : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405580 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040a7b3 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401523 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000040cd5a : add byte ptr [rax], al ; and al, 0xf ; add byte ptr [rax], al ; rcr bl, -1 ; call rdi
0x000000000040befe : add byte ptr [rax], al ; and byte ptr [rbx - 1], ch ; jmp qword ptr [rax]
0x0000000000401559 : add byte ptr [rax], al ; jmp 0x401539
0x00000000004043c2 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000402a10 : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000406b7b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405548 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040cd5e : add byte ptr [rax], al ; rcr bl, -1 ; call rdi
0x000000000040039e : add byte ptr [rax], al ; ret
0x000000000040bcbb : add byte ptr [rax], dh ; ret 0xffff
0x0000000000406b7c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000405549 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000402f75 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x0000000000403088 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000401a48 : add byte ptr [rcx], al ; ret
0x000000000040cd5b : add byte ptr [rdi + rcx], ah ; add byte ptr [rax], al ; rcr bl, -1 ; call rdi
0x000000000040a804 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004060f0 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004030b1 : add byte ptr [rsi + 0xf], ah ; enter 0xf41, -0x69 ; ret 0x8445
0x00000000004057d8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406b7a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000405547 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000408ffb : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000040a1ca : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401a44 : add eax, 0x20b8b6 ; add ebx, esi ; ret
0x0000000000401a0b : add eax, edx ; sar rax, 1 ; jne 0x401a1c ; pop rbp ; ret
0x0000000000409549 : add eax, esi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x0000000000401a49 : add ebx, esi ; ret
0x0000000000407ecb : add edi, eax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x0000000000401b7b : add esp, 0x10 ; pop rbp ; ret
0x00000000004099c5 : add esp, 0x10e0 ; pop rbp ; ret
0x0000000000407c2c : add esp, 0x130 ; pop rbp ; ret
0x0000000000405544 : add esp, 0x138 ; pop rbx ; pop rbp ; ret
0x0000000000403f87 : add esp, 0x170 ; pop rbp ; ret
0x0000000000406e6c : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000403834 : add esp, 0x1c0 ; pop rbp ; ret
0x0000000000402a0c : add esp, 0x1e0 ; pop rbp ; ret
0x0000000000402eb0 : add esp, 0x20 ; pop rbp ; ret
0x00000000004088cd : add esp, 0x250 ; pop rbp ; ret
0x0000000000401c5d : add esp, 0x30 ; pop rbp ; ret
0x0000000000402b2d : add esp, 0x40 ; pop rbp ; ret
0x0000000000405bbc : add esp, 0x50 ; pop rbp ; ret
0x0000000000403137 : add esp, 0x60 ; pop rbp ; ret
0x0000000000402c44 : add esp, 0x70 ; pop rbp ; ret
0x00000000004056fe : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004035ec : add esp, 0x90 ; pop rbp ; ret
0x0000000000404300 : add esp, 0xa0 ; pop rbp ; ret
0x0000000000409d87 : add esp, 0xc0 ; pop rbp ; ret
0x00000000004065c7 : add esp, 0xf0 ; pop rbp ; ret
0x0000000000401526 : add esp, 8 ; ret
0x0000000000401a0a : add rax, rdx ; sar rax, 1 ; jne 0x401a1d ; pop rbp ; ret
0x0000000000409548 : add rax, rsi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x0000000000407eca : add rdi, rax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x0000000000401b7a : add rsp, 0x10 ; pop rbp ; ret
0x00000000004099c4 : add rsp, 0x10e0 ; pop rbp ; ret
0x0000000000407c2b : add rsp, 0x130 ; pop rbp ; ret
0x0000000000405543 : add rsp, 0x138 ; pop rbx ; pop rbp ; ret
0x0000000000403f86 : add rsp, 0x170 ; pop rbp ; ret
0x0000000000406e6b : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000403833 : add rsp, 0x1c0 ; pop rbp ; ret
0x0000000000402a0b : add rsp, 0x1e0 ; pop rbp ; ret
0x0000000000402eaf : add rsp, 0x20 ; pop rbp ; ret
0x00000000004088cc : add rsp, 0x250 ; pop rbp ; ret
0x0000000000401c5c : add rsp, 0x30 ; pop rbp ; ret
0x0000000000402b2c : add rsp, 0x40 ; pop rbp ; ret
0x0000000000405bbb : add rsp, 0x50 ; pop rbp ; ret
0x0000000000403136 : add rsp, 0x60 ; pop rbp ; ret
0x0000000000402c43 : add rsp, 0x70 ; pop rbp ; ret
0x00000000004056fd : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004035eb : add rsp, 0x90 ; pop rbp ; ret
0x00000000004042ff : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000409d86 : add rsp, 0xc0 ; pop rbp ; ret
0x00000000004065c6 : add rsp, 0xf0 ; pop rbp ; ret
0x0000000000401525 : add rsp, 8 ; ret
0x000000000040cd5c : and al, 0xf ; add byte ptr [rax], al ; rcr bl, -1 ; call rdi
0x0000000000408ffa : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040a1c9 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401a47 : and byte ptr [rax], al ; add ebx, esi ; ret
0x000000000040bf00 : and byte ptr [rbx - 1], ch ; jmp qword ptr [rax]
0x0000000000405b07 : and eax, 0x48fffffd ; add esp, 0x20 ; pop rbp ; ret
0x0000000000402a39 : and eax, 0x60d250 ; pop rbp ; ret
0x0000000000402c5f : and eax, 0x60d308 ; pop rbp ; ret
0x0000000000402c83 : and eax, 0x60d310 ; pop rbp ; ret
0x0000000000408729 : call 0x30879
0x000000000040263b : call 0x401929
0x00000000004020b0 : call 0x402a49
0x0000000000402d78 : call 0xffffffff83892d84
0x0000000000405579 : call 0xffffffffe902dec9
0x0000000000405578 : call 0xffffffffe902deca
0x00000000004093d3 : call 0xffffffffe9031d23
0x000000000040aa49 : call qword ptr [r12 + rbx*8]
0x000000000040ba27 : call qword ptr [rax]
0x000000000040bfa3 : call qword ptr [rsi]
0x000000000040aa4a : call qword ptr [rsp + rbx*8]
0x0000000000401a6d : call rax
0x000000000040cd63 : call rdi
0x000000000040c283 : call rdx
0x0000000000407c2a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x000000000040706f : clc ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004088cb : clc ; add rsp, 0x250 ; pop rbp ; ret
0x0000000000403a2e : clc ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040a6c8 : clc ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000409ed1 : clc ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040a9f0 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004042fe : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x0000000000409d85 : clc ; add rsp, 0xc0 ; pop rbp ; ret
0x0000000000401a0f : clc ; jne 0x401a18 ; pop rbp ; ret
0x000000000040a8d5 : clc ; mov dword ptr [rax + 0x14], ecx ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404505 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040a59b : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040a59e : clc ; pop rbp ; ret
0x000000000040a076 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004099c3 : cld ; add rsp, 0x10e0 ; pop rbp ; ret
0x00000000004075fb : cld ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407540 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402a36 : cld ; mov dword ptr [0x60d250], eax ; pop rbp ; ret
0x000000000040a598 : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040a073 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040a016 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040753d : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004020b7 : cmp al, 0x25 ; ret
0x0000000000402199 : cmp al, 0x25 ; ret 0x40ac
0x0000000000406700 : cmp al, 0x25 ; ret 0x40b6
0x0000000000405546 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004019cd : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4019e0 ; pop rbp ; ret
0x00000000004066bc : cwde ; mov rcx, qword ptr [rax*8 + 0x40b580] ; jmp rcx
0x000000000040bcb7 : dec dword ptr [rax + 0x3000000e] ; ret 0xffff
0x000000000040263f : dec dword ptr [rax - 0x73] ; cmp al, 0x25 ; ret
0x00000000004049e5 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; enter 0x40b0, 0 ; jmp rcx
0x0000000000408725 : dec dword ptr [rax - 0x75] ; push rbp ; call 0x3087d
0x0000000000402a90 : dec dword ptr [rax - 0x75] ; push rbp ; ror byte ptr [rax + 1], 1 ; ret 0x8948
0x000000000040626a : dec dword ptr [rax - 0x77] ; ret 0x4de8
0x000000000040875b : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000040651b : dec dword ptr [rax - 0x77] ; ret 0x9ce8
0x0000000000407b8f : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000040562b : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000402b7d : enter -0x7cb8, -0x3c ; pop rbp ; ret
0x00000000004049ea : enter 0x40b0, 0 ; jmp rcx
0x00000000004030b6 : enter 0xf41, -0x69 ; ret 0x8445
0x000000000040355e : fadd dword ptr [rcx + 0xf] ; xchg eax, edi ; ret 0x8445
0x0000000000404f63 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040aa4c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000401b79 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040a80f : hlt ; mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004019e0 : hlt ; pop rbp ; mov edi, 0x60d2b0 ; jmp rax
0x0000000000409001 : in al, dx ; pop rbp ; ret
0x0000000000406cc0 : int 0x80
0x00000000004019d3 : ja 0x4019da ; pop rbp ; ret
0x000000000040abed : jb 0x40ac56 ; jns 0x40abf8 ; push rax ; ret
0x000000000040abec : jb 0x40ac57 ; jns 0x40abf9 ; push rax ; ret
0x00000000004019df : je 0x4019dd ; pop rbp ; mov edi, 0x60d2b0 ; jmp rax
0x000000000040155b : jmp 0x401537
0x00000000004066f9 : jmp 0x406b7f
0x000000000040bf03 : jmp qword ptr [rax]
0x000000000040c9a3 : jmp qword ptr [rcx]
0x000000000040c303 : jmp qword ptr [rdx]
0x00000000004019e7 : jmp rax
0x000000000040470e : jmp rcx
0x0000000000401a27 : jmp rdx
0x0000000000401a10 : jne 0x401a17 ; pop rbp ; ret
0x000000000040abf0 : jns 0x40abf5 ; push rax ; ret
0x000000000040abef : jns 0x40abf6 ; push rax ; ret
0x0000000000402c46 : jo 0x402ca7 ; ret
0x0000000000403f89 : jo 0x403f91 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000404655 : jo 0x4046b6 ; ret
0x0000000000405d64 : jo 0x405dc5 ; ret
0x0000000000405e9e : jo 0x405eff ; ret
0x0000000000405700 : js 0x405760 ; pop rbp ; ret
0x0000000000402a0e : loopne 0x402a16 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000407400 : loopne 0x407450 ; add esp, 0x20 ; pop rbp ; ret
0x00000000004073ff : loopne 0x407451 ; add esp, 0x20 ; pop rbp ; ret
0x00000000004099c7 : loopne 0x4099de ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000403135 : mov ah, 0x48 ; add esp, 0x60 ; pop rbp ; ret
0x0000000000405c3b : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000405acb : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x000000000040a1c6 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000402c81 : mov byte ptr [0x60d310], al ; pop rbp ; ret
0x0000000000407e93 : mov byte ptr [rax + 0x14], 1 ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040951b : mov byte ptr [rax + 0xc], 1 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401a43 : mov byte ptr [rip + 0x20b8b6], 1 ; ret
0x0000000000408ffd : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000040a1cc : mov dh, -0x40 ; pop rbp ; ret
0x0000000000401a45 : mov dh, -0x48 ; and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000402a37 : mov dword ptr [0x60d250], eax ; pop rbp ; ret
0x0000000000402c5d : mov dword ptr [0x60d308], edi ; pop rbp ; ret
0x000000000040a8d6 : mov dword ptr [rax + 0x14], ecx ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404506 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000404414 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004044c8 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000401c59 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402b7b : mov dword ptr [rbp - 0x38], eax ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000402c40 : mov dword ptr [rbp - 0x58], eax ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000401b77 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040a599 : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040457e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040954c : mov dword ptr [rdi + 0x10], eax ; pop rbp ; ret
0x0000000000407ece : mov dword ptr [rsi], edi ; pop rbp ; ret
0x00000000004056fc : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000401a46 : mov eax, 0xf3010020 ; ret
0x00000000004043c8 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000406f8b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402eac : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004043c5 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000402e2f : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000407223 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040437d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040440e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004073fe : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402b29 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004044ca : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040734b : mov eax, dword ptr [rbp - 0x2c] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004033c6 : mov eax, dword ptr [rbp - 0x3c] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040464f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004056fa : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000403133 : mov eax, dword ptr [rbp - 0x4c] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000405c39 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040a810 : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040a074 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004075f9 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040753e : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040706d : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403a2c : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040a6c6 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000409ecf : mov eax, dword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040a9ee : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040a59c : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000401a6b : mov ebp, esp ; call rax
0x00000000004019d1 : mov ebp, esp ; ja 0x4019dc ; pop rbp ; ret
0x0000000000404707 : mov ecx, dword ptr [rax*8 + 0x40b080] ; jmp rcx
0x00000000004049e7 : mov ecx, dword ptr [rax*8 + 0x40b0c8] ; jmp rcx
0x00000000004066be : mov ecx, dword ptr [rax*8 + 0x40b580] ; jmp rcx
0x0000000000404411 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401a65 : mov edi, 0x60ce20 ; mov rbp, rsp ; call rax
0x00000000004019e2 : mov edi, 0x60d2b0 ; jmp rax
0x0000000000401a22 : mov edi, 0x60d2b0 ; jmp rdx
0x0000000000407ec8 : mov edi, dword ptr [rsi] ; add rdi, rax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x000000000040aa47 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000040aa46 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000401a20 : mov esi, eax ; mov edi, 0x60d2b0 ; jmp rdx
0x0000000000409000 : mov esp, ebp ; pop rbp ; ret
0x0000000000402c5c : mov qword ptr [0x60d308], rdi ; pop rbp ; ret
0x000000000040457d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040954b : mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x0000000000407ecd : mov qword ptr [rsi], rdi ; pop rbp ; ret
0x0000000000403134 : mov r12b, 0x48 ; add esp, 0x60 ; pop rbp ; ret
0x0000000000405c3a : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004056fb : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000406f8a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402eab : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004043c4 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000402e2e : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000407222 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040437c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004073fd : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402b28 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040464e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000405c38 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040706c : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403a2b : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040a6c5 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000409ece : mov rax, qword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040a9ed : mov rax, qword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000401a6a : mov rbp, rsp ; call rax
0x00000000004019d0 : mov rbp, rsp ; ja 0x4019dd ; pop rbp ; ret
0x0000000000404706 : mov rcx, qword ptr [rax*8 + 0x40b080] ; jmp rcx
0x00000000004049e6 : mov rcx, qword ptr [rax*8 + 0x40b0c8] ; jmp rcx
0x00000000004066bd : mov rcx, qword ptr [rax*8 + 0x40b580] ; jmp rcx
0x0000000000401a1f : mov rsi, rax ; mov edi, 0x60d2b0 ; jmp rdx
0x0000000000408fff : mov rsp, rbp ; pop rbp ; ret
0x0000000000408ffc : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040a1cb : movzx eax, al ; pop rbp ; ret
0x000000000040aa68 : nop dword ptr [rax + rax] ; ret
0x00000000004049e8 : or al, 0xffffffffffffffc5 ; enter 0x40b0, 0 ; jmp rcx
0x000000000040951d : or al, 1 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404f5e : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000404f5f : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000402194 : or byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x40ac
0x00000000004020b2 : or dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x0000000000405e21 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040aa5c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040aa5e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000406b7e : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040aa60 : pop r14 ; pop r15 ; ret
0x0000000000406b80 : pop r15 ; pop rbp ; ret
0x000000000040aa62 : pop r15 ; ret
0x0000000000401a42 : pop rbp ; mov byte ptr [rip + 0x20b8b6], 1 ; ret
0x00000000004019e1 : pop rbp ; mov edi, 0x60d2b0 ; jmp rax
0x0000000000401a1e : pop rbp ; mov rsi, rax ; mov edi, 0x60d2b0 ; jmp rdx
0x000000000040aa5b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040aa5f : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004019d5 : pop rbp ; ret
0x0000000000406b7d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040554a : pop rbx ; pop rbp ; ret
0x0000000000406b81 : pop rdi ; pop rbp ; ret
0x000000000040aa63 : pop rdi ; ret
0x0000000000406b7f : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040aa61 : pop rsi ; pop r15 ; ret
0x000000000040aa5d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405bbe : push rax ; pop rbp ; ret
0x000000000040abf2 : push rax ; ret
0x0000000000402a3a : push rax ; shl byte ptr [rax], cl ; pop rbp ; ret
0x0000000000408728 : push rbp ; call 0x3087a
0x0000000000404f62 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000401a64 : push rbp ; mov edi, 0x60ce20 ; mov rbp, rsp ; call rax
0x0000000000402a93 : push rbp ; ror byte ptr [rax + 1], 1 ; ret 0x8948
0x000000000040781d : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000040562e : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x00000000004035ea : pushfq ; add rsp, 0x90 ; pop rbp ; ret
0x000000000040cd60 : rcr bl, -1 ; call rdi
0x00000000004003a0 : ret
0x00000000004095e5 : ret 0x10
0x0000000000407f75 : ret 0x18
0x0000000000401962 : ret 0x20b8
0x0000000000401762 : ret 0x20b9
0x0000000000401562 : ret 0x20ba
0x00000000004093d6 : ret 0x34e8
0x000000000040219b : ret 0x40ac
0x0000000000406702 : ret 0x40b6
0x0000000000408b56 : ret 0x4a3b
0x0000000000402c24 : ret 0x4d89
0x000000000040626d : ret 0x4de8
0x0000000000409762 : ret 0x58e8
0x0000000000402f79 : ret 0x8041
0x000000000040308c : ret 0x8445
0x0000000000406679 : ret 0x8844
0x0000000000402a97 : ret 0x8948
0x000000000040508d : ret 0x89a5
0x0000000000404f66 : ret 0x8b48
0x0000000000404f7b : ret 0x8fe8
0x000000000040991f : ret 0x9be8
0x000000000040651e : ret 0x9ce8
0x0000000000407d36 : ret 0xc
0x0000000000401a05 : ret 0xc148
0x00000000004060f3 : ret 0xd284
0x0000000000409be1 : ret 0xd9e8
0x000000000040557c : ret 0xee8
0x000000000040a8be : ret 0xf01
0x00000000004064aa : ret 0xffb4
0x00000000004023da : ret 0xfff2
0x000000000040255a : ret 0xfff3
0x0000000000407d4a : ret 0xfff6
0x000000000040872c : ret 0xffff
0x000000000040589e : ret 1
0x0000000000405632 : ret 8
0x0000000000406cbb : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000404650 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x4046bb ; ret
0x0000000000402a94 : ror byte ptr [rax + 1], 1 ; ret 0x8948
0x0000000000401a0c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401a1b ; pop rbp ; ret
0x0000000000408ffe : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x0000000000406cbc : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000404651 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x4046ba ; ret
0x0000000000403f85 : ror byte ptr [rax - 0x7f], -0x3c ; jo 0x403f95 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040781e : ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000040562f : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000401a0e : sar eax, 1 ; jne 0x401a19 ; pop rbp ; ret
0x0000000000401a0d : sar rax, 1 ; jne 0x401a1a ; pop rbp ; ret
0x000000000040a915 : setne al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000403962 : shl byte ptr [rax], cl ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004019e4 : shl byte ptr [rax], cl ; jmp rax
0x0000000000401a24 : shl byte ptr [rax], cl ; jmp rdx
0x0000000000402a3b : shl byte ptr [rax], cl ; pop rbp ; ret
0x000000000040a917 : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000402c61 : shl dword ptr [rax], cl ; pop rbp ; ret
0x000000000040cd5d : sldt word ptr [rax] ; rcr bl, -1 ; call rdi
0x000000000040a1c8 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004095f1 : sub edx, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040aa9d : sub esp, 8 ; add rsp, 8 ; ret
0x000000000040aa9c : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000402c42 : test al, 0x48 ; add esp, 0x70 ; pop rbp ; ret
0x000000000040aa6a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000402f78 : xchg eax, ebp ; ret 0x8041
0x000000000040308b : xchg eax, ebp ; ret 0x8445
0x000000000040a806 : xchg eax, ebp ; ret 0xd284
0x000000000040a916 : xchg eax, ebp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004030b9 : xchg eax, edi ; ret 0x8445
0x00000000004060f2 : xchg eax, esp ; ret 0xd284
0x0000000000407c2e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004044c6 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
