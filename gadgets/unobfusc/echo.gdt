0x0000000000403859 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040736b : add ah, ah ; add al, byte ptr [rax] ; add al, ah ; ret
0x000000000040736f : add al, ah ; ret
0x000000000040736d : add al, byte ptr [rax] ; add al, ah ; ret
0x000000000040507c : add al, ch ; ret 0xffff
0x0000000000405dcf : add bl, dh ; ret
0x0000000000404838 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000407369 : add byte ptr [rax], al ; add ah, ah ; add al, byte ptr [rax] ; add al, ah ; ret
0x000000000040507a : add byte ptr [rax], al ; add al, ch ; ret 0xffff
0x0000000000405dcd : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000405dcb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000400660 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000400662 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000405dcc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400664 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000401787 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x000000000040412e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040381a : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004035c0 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040105b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000040507b : add byte ptr [rax], al ; call 0x4012c4
0x0000000000401219 : add byte ptr [rax], al ; jmp 0x401079
0x0000000000401fa2 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000402402 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000403b11 : add byte ptr [rax], al ; pop rbp ; ret
0x00000000004046fb : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403588 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000405dce : add byte ptr [rax], al ; ret
0x0000000000400666 : add byte ptr [rax], al ; ret 0
0x00000000004046fc : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000403589 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000404e46 : add byte ptr [rcx + 0x21e8fc45], cl ; ret
0x0000000000401458 : add byte ptr [rcx], al ; ret
0x0000000000401789 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x0000000000404130 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000403818 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004046fa : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000403587 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040592a : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401454 : add eax, 0x206dee ; add ebx, esi ; ret
0x0000000000401059 : add eax, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000040141b : add eax, edx ; sar rax, 1 ; jne 0x40142c ; pop rbp ; ret
0x0000000000401459 : add ebx, esi ; ret
0x000000000040162b : add esp, 0x10 ; pop rbp ; ret
0x000000000040568c : add esp, 0x130 ; pop rbp ; ret
0x0000000000403584 : add esp, 0x138 ; pop rbx ; pop rbp ; ret
0x00000000004049ec : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000402210 : add esp, 0x20 ; pop rbp ; ret
0x000000000040170d : add esp, 0x30 ; pop rbp ; ret
0x0000000000403bfc : add esp, 0x50 ; pop rbp ; ret
0x0000000000402693 : add esp, 0x70 ; pop rbp ; ret
0x000000000040373e : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000403b0d : add esp, 0x90 ; pop rbp ; ret
0x0000000000404884 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040105e : add esp, 8 ; ret
0x000000000040141a : add rax, rdx ; sar rax, 1 ; jne 0x40142d ; pop rbp ; ret
0x000000000040162a : add rsp, 0x10 ; pop rbp ; ret
0x000000000040568b : add rsp, 0x130 ; pop rbp ; ret
0x0000000000403583 : add rsp, 0x138 ; pop rbx ; pop rbp ; ret
0x00000000004049eb : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000040220f : add rsp, 0x20 ; pop rbp ; ret
0x000000000040170c : add rsp, 0x30 ; pop rbp ; ret
0x0000000000403bfb : add rsp, 0x50 ; pop rbp ; ret
0x0000000000402692 : add rsp, 0x70 ; pop rbp ; ret
0x000000000040373d : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000403b0c : add rsp, 0x90 ; pop rbp ; ret
0x0000000000404883 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040105d : add rsp, 8 ; ret
0x0000000000405929 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401457 : and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000405077 : and byte ptr [rdi + 0xe], bh ; call 0x4012c8
0x00000000004038d7 : and dword ptr [rax], 0x81d8558b ; ret 1
0x0000000000403b47 : and eax, 0x48fffffd ; add esp, 0x20 ; pop rbp ; ret
0x0000000000401fbf : and eax, 0x608250 ; pop rbp ; ret
0x0000000000401fe3 : and eax, 0x608258 ; pop rbp ; ret
0x0000000000404e69 : call 0x4010a2
0x0000000000404edd : call 0x401162
0x0000000000404fd8 : call 0x401222
0x000000000040507d : call 0x4012c2
0x00000000004035b9 : call 0xffffffffe902bf09
0x00000000004035b8 : call 0xffffffffe902bf0a
0x0000000000405da9 : call qword ptr [r12 + rbx*8]
0x0000000000407173 : call qword ptr [rsi]
0x0000000000405daa : call qword ptr [rsp + rbx*8]
0x000000000040147d : call rax
0x0000000000407373 : call rdx
0x000000000040568a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x0000000000404bef : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404141 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040141f : clc ; jne 0x401428 ; pop rbp ; ret
0x0000000000402545 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405cfb : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000405cfe : clc ; pop rbp ; ret
0x00000000004057d6 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040505b : cld ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404fa0 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000405cf8 : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004057d3 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405776 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404f9d : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401fa6 : cld ; pop rbp ; ret
0x0000000000403586 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004013dd : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4013f0 ; pop rbp ; ret
0x000000000040423c : cwde ; mov rcx, qword ptr [rax*8 + 0x4069b8] ; jmp rcx
0x00000000004055ef : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000040366b : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000401f4a : enter 0x405e, 0 ; jmp rcx
0x0000000000402fa3 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000401f45 : fmul dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; enter 0x405e, 0 ; jmp rcx
0x0000000000405dac : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000401629 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004013f0 : hlt ; pop rbp ; mov edi, 0x608220 ; jmp rax
0x0000000000405076 : in al, dx ; and byte ptr [rdi + 0xe], bh ; call 0x4012c9
0x0000000000401456 : insd dword ptr [rdi], dx ; and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000404840 : int 0x80
0x00000000004013e3 : ja 0x4013ea ; pop rbp ; ret
0x00000000004013ef : je 0x4013ed ; pop rbp ; mov edi, 0x608220 ; jmp rax
0x0000000000404fd6 : jge 0x404fcc ; call 0x401224
0x000000000040121b : jmp 0x401077
0x0000000000407513 : jmp qword ptr [rax]
0x00000000004073f3 : jmp qword ptr [rdx]
0x00000000004013f7 : jmp rax
0x0000000000401b7e : jmp rcx
0x0000000000401437 : jmp rdx
0x0000000000401420 : jne 0x401427 ; pop rbp ; ret
0x0000000000402695 : jo 0x4026f6 ; ret
0x0000000000403da4 : jo 0x403e05 ; ret
0x0000000000403ede : jo 0x403f3f ; ret
0x0000000000403740 : js 0x4037a0 ; pop rbp ; ret
0x0000000000404ed8 : loopne 0x404f29 ; mov ecx, dword ptr [rbp - 0x28] ; call 0x401167
0x0000000000403c7b : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000403b0b : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000405926 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401fe1 : mov byte ptr [0x608258], al ; pop rbp ; ret
0x0000000000404fd1 : mov byte ptr [rbp - 0x11], cl ; mov rdi, qword ptr [rbp - 0x10] ; call 0x401229
0x0000000000401453 : mov byte ptr [rip + 0x206dee], 1 ; ret
0x000000000040592c : mov dh, -0x40 ; pop rbp ; ret
0x0000000000401fbd : mov dword ptr [0x608250], edi ; pop rbp ; ret
0x0000000000402546 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000402454 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000402508 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000401709 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401627 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405cf9 : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004025be : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040373c : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000402408 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000404b0b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040220c : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402405 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040218f : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000404da3 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004023bd : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040244e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040250a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040268f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040373a : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000403c79 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004057d4 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405059 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404f9e : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401fa4 : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000404bed : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040413f : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000405cfc : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040147b : mov ebp, esp ; call rax
0x00000000004013e1 : mov ebp, esp ; ja 0x4013ec ; pop rbp ; ret
0x0000000000401ba9 : mov ecx, dword ptr [rax*8 + 0x405e18] ; jmp rcx
0x0000000000401b77 : mov ecx, dword ptr [rax*8 + 0x405e70] ; jmp rcx
0x0000000000401f47 : mov ecx, dword ptr [rax*8 + 0x405ec8] ; jmp rcx
0x0000000000401f21 : mov ecx, dword ptr [rax*8 + 0x405ef8] ; jmp rcx
0x0000000000402747 : mov ecx, dword ptr [rax*8 + 0x4064b0] ; jmp rcx
0x0000000000402a27 : mov ecx, dword ptr [rax*8 + 0x4064f8] ; jmp rcx
0x000000000040423e : mov ecx, dword ptr [rax*8 + 0x4069b8] ; jmp rcx
0x0000000000402451 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000404eda : mov ecx, dword ptr [rbp - 0x28] ; call 0x401165
0x0000000000401475 : mov edi, 0x607e20 ; mov rbp, rsp ; call rax
0x00000000004013f2 : mov edi, 0x608220 ; jmp rax
0x0000000000401432 : mov edi, 0x608220 ; jmp rdx
0x0000000000405078 : mov edi, 0xe ; call 0x4012c7
0x0000000000404fd5 : mov edi, dword ptr [rbp - 0x10] ; call 0x401225
0x0000000000405da7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000405da6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000404ed6 : mov edx, dword ptr [rbp - 0x20] ; mov rcx, qword ptr [rbp - 0x28] ; call 0x401169
0x0000000000401430 : mov esi, eax ; mov edi, 0x608220 ; jmp rdx
0x0000000000401fbc : mov qword ptr [0x608250], rdi ; pop rbp ; ret
0x00000000004025bd : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403c7a : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040373b : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000404b0a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040220b : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402404 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040218e : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000404da2 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004023bc : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040268e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000403c78 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000404bec : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040413e : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040147a : mov rbp, rsp ; call rax
0x00000000004013e0 : mov rbp, rsp ; ja 0x4013ed ; pop rbp ; ret
0x0000000000401ba8 : mov rcx, qword ptr [rax*8 + 0x405e18] ; jmp rcx
0x0000000000401b76 : mov rcx, qword ptr [rax*8 + 0x405e70] ; jmp rcx
0x0000000000401f46 : mov rcx, qword ptr [rax*8 + 0x405ec8] ; jmp rcx
0x0000000000401f20 : mov rcx, qword ptr [rax*8 + 0x405ef8] ; jmp rcx
0x0000000000402746 : mov rcx, qword ptr [rax*8 + 0x4064b0] ; jmp rcx
0x0000000000402a26 : mov rcx, qword ptr [rax*8 + 0x4064f8] ; jmp rcx
0x000000000040423d : mov rcx, qword ptr [rax*8 + 0x4069b8] ; jmp rcx
0x0000000000404ed9 : mov rcx, qword ptr [rbp - 0x28] ; call 0x401166
0x0000000000404fd4 : mov rdi, qword ptr [rbp - 0x10] ; call 0x401226
0x000000000040142f : mov rsi, rax ; mov edi, 0x608220 ; jmp rdx
0x000000000040592b : movzx eax, al ; pop rbp ; ret
0x0000000000405dc8 : nop dword ptr [rax + rax] ; ret
0x0000000000401f48 : or al, 0xffffffffffffffc5 ; enter 0x405e, 0 ; jmp rcx
0x0000000000402f9e : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000402f9f : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x00000000004018fd : or byte ptr [rcx + 0x2df9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x0000000000403e61 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401455 : out dx, al ; insd dword ptr [rdi], dx ; and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000404fd3 : out dx, eax ; mov rdi, qword ptr [rbp - 0x10] ; call 0x401227
0x0000000000404fd2 : out dx, eax ; mov rdi, qword ptr [rbp - 0x10] ; call 0x401228
0x0000000000405dbc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405dbe : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004046fe : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405dc0 : pop r14 ; pop r15 ; ret
0x0000000000404700 : pop r15 ; pop rbp ; ret
0x0000000000405dc2 : pop r15 ; ret
0x0000000000401452 : pop rbp ; mov byte ptr [rip + 0x206dee], 1 ; ret
0x00000000004013f1 : pop rbp ; mov edi, 0x608220 ; jmp rax
0x000000000040142e : pop rbp ; mov rsi, rax ; mov edi, 0x608220 ; jmp rdx
0x0000000000405dbb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405dbf : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004013e5 : pop rbp ; ret
0x00000000004046fd : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040358a : pop rbx ; pop rbp ; ret
0x0000000000404701 : pop rdi ; pop rbp ; ret
0x0000000000405dc3 : pop rdi ; ret
0x00000000004046ff : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000405dc1 : pop rsi ; pop r15 ; ret
0x0000000000405dbd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000403bfe : push rax ; pop rbp ; ret
0x0000000000402fa2 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000404ed7 : push rbp ; loopne 0x404f2a ; mov ecx, dword ptr [rbp - 0x28] ; call 0x401168
0x0000000000401474 : push rbp ; mov edi, 0x607e20 ; mov rbp, rsp ; call rax
0x000000000040527d : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000040366e : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000401061 : ret
0x0000000000400668 : ret 0
0x0000000000401222 : ret 0x206e
0x000000000040178c : ret 0x5588
0x00000000004041f9 : ret 0x8844
0x0000000000401c13 : ret 0x8948
0x00000000004030cd : ret 0x89a5
0x0000000000401952 : ret 0x89bb
0x0000000000402fa6 : ret 0x8b48
0x0000000000402fbb : ret 0xafe8
0x0000000000401415 : ret 0xc148
0x0000000000404133 : ret 0xd284
0x00000000004035bc : ret 0xee8
0x0000000000404e6b : ret 0xffff
0x0000000000401d60 : ret 1
0x0000000000403672 : ret 8
0x000000000040483b : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000402690 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x4026fb ; ret
0x000000000040141c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40142b ; pop rbp ; ret
0x000000000040483c : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000402691 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x4026fa ; ret
0x000000000040527e : ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000040366f : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000040141e : sar eax, 1 ; jne 0x401429 ; pop rbp ; ret
0x000000000040141d : sar rax, 1 ; jne 0x40142a ; pop rbp ; ret
0x00000000004018ff : stc ; sub eax, 0xf000000 ; xchg eax, esp ; ret 0x5588
0x0000000000405928 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401900 : sub eax, 0xf000000 ; xchg eax, esp ; ret 0x5588
0x0000000000405dfd : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000405dfc : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000405dca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000401f23 : vdivps xmm0, xmm0, xmmword ptr [rax] ; jmp rcx
0x0000000000401f49 : vdivps xmm0, xmm6, xmmword ptr [rax] ; jmp rcx
0x0000000000401b79 : vdivps xmm8, xmm1, xmmword ptr [rax] ; jmp rcx
0x0000000000401bab : vdivps xmm8, xmm12, xmmword ptr [rax] ; jmp rcx
0x000000000040178b : xchg eax, esp ; ret 0x5588
0x0000000000404132 : xchg eax, esp ; ret 0xd284
0x000000000040568e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000402506 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
