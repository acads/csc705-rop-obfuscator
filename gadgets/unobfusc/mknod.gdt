0x00000000004048c9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408d4f : add ah, ch ; ret
0x0000000000408d37 : add ah, ch ; ret 0xffff
0x00000000004093c5 : add al, 0 ; add al, bh ; mov bl, -1 ; call rdx
0x00000000004093c4 : add al, 4 ; add byte ptr [rax], al ; clc ; mov bl, -1 ; call rdx
0x0000000000409edf : add al, al ; fcos ; call qword ptr [rax]
0x00000000004093c7 : add al, bh ; mov bl, -1 ; call rdx
0x0000000000409947 : add al, bl ; ret 0xffff
0x0000000000401d67 : add al, ch ; ret
0x000000000040786f : add bl, dh ; ret
0x0000000000405bc8 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000401d62 : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x00000000004093c2 : add byte ptr [rax], al ; add al, 4 ; add byte ptr [rax], al ; clc ; mov bl, -1 ; call rdx
0x000000000040786d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000401d60 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000040786b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000406899 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040786c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000409065 : add byte ptr [rax], al ; add byte ptr [rax], ch ; mov edi, edi ; jmp rdx
0x0000000000402816 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0x5588
0x0000000000402bbb : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0x9588
0x00000000004028ff : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x0000000000402e55 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x000000000040519e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040488a : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404630 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401303 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000409566 : add byte ptr [rax], al ; call 0x2140952a
0x00000000004093c6 : add byte ptr [rax], al ; clc ; mov bl, -1 ; call rdx
0x0000000000408d4e : add byte ptr [rax], al ; in al, dx ; ret
0x0000000000408d36 : add byte ptr [rax], al ; in al, dx ; ret 0xffff
0x0000000000408d1e : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret 0xffff
0x0000000000401379 : add byte ptr [rax], al ; jmp 0x401319
0x0000000000408d46 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret
0x000000000040689b : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004051da : add byte ptr [rax], al ; mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040530d : add byte ptr [rax], al ; mov eax, edi ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405469 : add byte ptr [rax], al ; mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004024dd : add byte ptr [rax], al ; mov eax, esi ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405281 : add byte ptr [rax], al ; mov eax, esi ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403472 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000409062 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax], ch ; mov edi, edi ; jmp rdx
0x0000000000402ef4 : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000405a8b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004045f8 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000408d26 : add byte ptr [rax], al ; pushfq ; ret 0xffff
0x0000000000409ede : add byte ptr [rax], al ; rcr cl, -1 ; call qword ptr [rax]
0x000000000040786e : add byte ptr [rax], al ; ret
0x0000000000409eda : add byte ptr [rax], al ; sbb al, 0xf ; add byte ptr [rax], al ; rcr cl, -1 ; call qword ptr [rax]
0x0000000000409067 : add byte ptr [rax], ch ; mov edi, edi ; jmp rdx
0x0000000000405a8c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004045f9 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000402495 : add byte ptr [rcx + rax], ah ; movzx eax, al ; pop rbp ; ret
0x0000000000401788 : add byte ptr [rcx], al ; ret
0x0000000000409edb : add byte ptr [rdi + rcx], bl ; add byte ptr [rax], al ; rcr cl, -1 ; call qword ptr [rax]
0x000000000040549a : add byte ptr [rdi], cl ; mov bh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402818 : add byte ptr [rdi], cl ; pushfq ; ret 0x5588
0x0000000000402bbd : add byte ptr [rdi], cl ; pushfq ; ret 0x9588
0x0000000000402901 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x0000000000402e57 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x00000000004051a0 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004093c3 : add byte ptr [rsp + rax], al ; add byte ptr [rax], al ; clc ; mov bl, -1 ; call rdx
0x0000000000404888 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405a8a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004045f7 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000402497 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401784 : add eax, 0x209b4e ; add ebx, esi ; ret
0x000000000040174b : add eax, edx ; sar rax, 1 ; jne 0x40175c ; pop rbp ; ret
0x0000000000401789 : add ebx, esi ; ret
0x000000000040195b : add esp, 0x10 ; pop rbp ; ret
0x000000000040712c : add esp, 0x130 ; pop rbp ; ret
0x00000000004045f4 : add esp, 0x138 ; pop rbx ; pop rbp ; ret
0x00000000004078cb : add esp, 0x18 ; ret
0x0000000000405d7c : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000402750 : add esp, 0x20 ; pop rbp ; ret
0x0000000000401a6d : add esp, 0x30 ; pop rbp ; ret
0x0000000000404c6c : add esp, 0x50 ; pop rbp ; ret
0x0000000000403703 : add esp, 0x70 ; pop rbp ; ret
0x00000000004047ae : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000404b7d : add esp, 0x90 ; pop rbp ; ret
0x0000000000402fd0 : add esp, 0xa0 ; pop rbp ; ret
0x0000000000402ef0 : add esp, 0xe0 ; pop rbp ; ret
0x0000000000401306 : add esp, 8 ; ret
0x000000000040174a : add rax, rdx ; sar rax, 1 ; jne 0x40175d ; pop rbp ; ret
0x000000000040195a : add rsp, 0x10 ; pop rbp ; ret
0x000000000040712b : add rsp, 0x130 ; pop rbp ; ret
0x00000000004045f3 : add rsp, 0x138 ; pop rbx ; pop rbp ; ret
0x00000000004078ca : add rsp, 0x18 ; ret
0x0000000000405d7b : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000040274f : add rsp, 0x20 ; pop rbp ; ret
0x0000000000401a6c : add rsp, 0x30 ; pop rbp ; ret
0x0000000000404c6b : add rsp, 0x50 ; pop rbp ; ret
0x0000000000403702 : add rsp, 0x70 ; pop rbp ; ret
0x00000000004047ad : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000404b7c : add rsp, 0x90 ; pop rbp ; ret
0x0000000000402fcf : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000402eef : add rsp, 0xe0 ; pop rbp ; ret
0x0000000000401305 : add rsp, 8 ; ret
0x0000000000402496 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401787 : and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000404bb7 : and eax, 0x48fffffd ; add esp, 0x20 ; pop rbp ; ret
0x00000000004024ff : and eax, 0x60b2e0 ; pop rbp ; ret
0x0000000000402523 : and eax, 0x60b2e8 ; pop rbp ; ret
0x0000000000409568 : call 0x21409528
0x0000000000404629 : call 0xffffffffe902cf79
0x0000000000404628 : call 0xffffffffe902cf7a
0x0000000000407849 : call qword ptr [r12 + rbx*8]
0x0000000000409ee3 : call qword ptr [rax]
0x000000000040912b : call qword ptr [rsi]
0x000000000040784a : call qword ptr [rsp + rbx*8]
0x00000000004017ad : call rax
0x0000000000403fed : call rbx
0x00000000004093cb : call rdx
0x0000000000405310 : clc ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040712a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x0000000000405f7f : clc ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004051b1 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402fce : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x0000000000402eee : clc ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000040174f : clc ; jne 0x401758 ; pop rbp ; ret
0x00000000004093c8 : clc ; mov bl, -1 ; call rdx
0x00000000004035b5 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040779b : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004024b7 : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004024ac : clc ; pop rbp ; ret
0x0000000000406898 : cld ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000401987 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406afb : cld ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406a40 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040682d : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x0000000000407798 : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000407273 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407216 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406a3d : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402f06 : cld ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000402f09 : cld ; pop rbp ; ret
0x00000000004045f6 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040170d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401720 ; pop rbp ; ret
0x0000000000401301 : cmp eax, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004055cc : cwde ; mov rcx, qword ptr [rax*8 + 0x4086b8] ; jmp rcx
0x00000000004065eb : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; nop ; mov al, byte ptr [rax] ; jmp rcx
0x00000000004024a8 : dec dword ptr [rax - 0x77] ; jge 0x4024ab ; pop rbp ; ret
0x0000000000401ed1 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040708f : dec dword ptr [rax - 0x7f] ; ret 1
0x0000000000408d43 : dec dword ptr [rdx + rcx] ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret
0x0000000000408d33 : dec esp ; or dword ptr [rax], eax ; add ah, ch ; ret 0xffff
0x00000000004046db : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x00000000004033b1 : enter 0x60b2, 0 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000409ee1 : fcos ; call qword ptr [rax]
0x0000000000404013 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040784c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000403feb : fsubr st(0) ; call rbx
0x0000000000401959 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401720 : hlt ; pop rbp ; mov edi, 0x60b268 ; jmp rax
0x00000000004068fd : in al, dx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000408d50 : in al, dx ; ret
0x0000000000408d38 : in al, dx ; ret 0xffff
0x0000000000402493 : in eax, -0x50 ; add byte ptr [rcx + rax], ah ; movzx eax, al ; pop rbp ; ret
0x0000000000402f03 : in eax, -0x77 ; jge 0x402f0b ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004051f3 : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x0000000000408d20 : insb byte ptr [rdi], dx ; ret 0xffff
0x0000000000405bd0 : int 0x80
0x0000000000401713 : ja 0x40171a ; pop rbp ; ret
0x000000000040171f : je 0x40171d ; pop rbp ; mov edi, 0x60b268 ; jmp rax
0x00000000004024ab : jge 0x4024a8 ; pop rbp ; ret
0x00000000004024b6 : jge 0x4024b7 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402f05 : jge 0x402f09 ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004051f6 : jge 0x4051f3 ; pop rbp ; ret
0x000000000040137b : jmp 0x401317
0x000000000040956b : jmp qword ptr [rax]
0x000000000040910b : jmp qword ptr [rdi]
0x000000000040944b : jmp qword ptr [rdx]
0x0000000000401727 : jmp rax
0x0000000000402cf5 : jmp rcx
0x0000000000401767 : jmp rdx
0x0000000000401750 : jne 0x401757 ; pop rbp ; ret
0x0000000000403705 : jo 0x403766 ; ret
0x0000000000404e14 : jo 0x404e75 ; ret
0x0000000000404f4e : jo 0x404faf ; ret
0x00000000004047b0 : js 0x404810 ; pop rbp ; ret
0x0000000000408d4b : ljmp ptr [rdx + rcx] ; add byte ptr [rax], al ; in al, dx ; ret
0x0000000000408d48 : lodsb al, byte ptr [rsi] ; ret
0x0000000000402ef2 : loopne 0x402ef9 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000406831 : loopne 0x406838 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000402494 : mov al, 0 ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000404ceb : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000404b7b : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x00000000004065f1 : mov al, byte ptr [rax] ; jmp rcx
0x00000000004073c6 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040549c : mov bh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000409449 : mov bh, -1 ; jmp qword ptr [rdx]
0x00000000004093c9 : mov bl, -1 ; call rdx
0x0000000000402521 : mov byte ptr [0x60b2e8], al ; pop rbp ; ret
0x0000000000401783 : mov byte ptr [rip + 0x209b4e], 1 ; ret
0x0000000000402499 : mov dh, -0x40 ; pop rbp ; ret
0x00000000004024fd : mov dword ptr [0x60b2e0], edi ; pop rbp ; ret
0x00000000004035b6 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004034c4 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000403578 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000401a69 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401957 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401985 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402f04 : mov dword ptr [rbp - 4], edi ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000407799 : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004024b5 : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004024aa : mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x000000000040362e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403280 : mov dword ptr [rcx], eax ; mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x00000000004047ac : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000403478 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000402f6b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040274c : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403475 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004026cf : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004068fb : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406133 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040342d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004034be : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000403282 : mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x000000000040357a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004036ff : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004047aa : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000404ce9 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000407274 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406af9 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406a3e : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402f07 : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000405f7d : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004051af : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004024b9 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004051dc : mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040530f : mov eax, edi ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040546b : mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004024df : mov eax, esi ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405283 : mov eax, esi ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004017ab : mov ebp, esp ; call rax
0x0000000000401711 : mov ebp, esp ; ja 0x40171c ; pop rbp ; ret
0x0000000000402f02 : mov ebp, esp ; mov dword ptr [rbp - 4], edi ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004051f2 : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000402cee : mov ecx, dword ptr [rax*8 + 0x408128] ; jmp rcx
0x00000000004037b7 : mov ecx, dword ptr [rax*8 + 0x4081b0] ; jmp rcx
0x0000000000403a97 : mov ecx, dword ptr [rax*8 + 0x4081f8] ; jmp rcx
0x00000000004055ce : mov ecx, dword ptr [rax*8 + 0x4086b8] ; jmp rcx
0x000000000040666d : mov ecx, dword ptr [rax*8 + 0x408a30] ; jmp rcx
0x00000000004065ed : mov ecx, dword ptr [rax*8 + 0x408a90] ; jmp rcx
0x00000000004034c1 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040327d : mov ecx, dword ptr [rbp - 0x20] ; mov dword ptr [rcx], eax ; mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x00000000004017a5 : mov edi, 0x60ae20 ; mov rbp, rsp ; call rax
0x0000000000401722 : mov edi, 0x60b268 ; jmp rax
0x0000000000401762 : mov edi, 0x60b268 ; jmp rdx
0x0000000000407847 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000409069 : mov edi, edi ; jmp rdx
0x0000000000407846 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000401760 : mov esi, eax ; mov edi, 0x60b268 ; jmp rdx
0x0000000000408d30 : mov esp, 0xccffffc2 ; or dword ptr [rax], eax ; add ah, ch ; ret 0xffff
0x00000000004024fc : mov qword ptr [0x60b2e0], rdi ; pop rbp ; ret
0x00000000004024b4 : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004024a9 : mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000040362d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404cea : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004047ab : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000402f6a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040274b : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403474 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004026ce : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000406132 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040342c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004036fe : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000404ce8 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000405f7c : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004051ae : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004024b8 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004017aa : mov rbp, rsp ; call rax
0x0000000000401710 : mov rbp, rsp ; ja 0x40171d ; pop rbp ; ret
0x00000000004051f1 : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000402ced : mov rcx, qword ptr [rax*8 + 0x408128] ; jmp rcx
0x00000000004037b6 : mov rcx, qword ptr [rax*8 + 0x4081b0] ; jmp rcx
0x0000000000403a96 : mov rcx, qword ptr [rax*8 + 0x4081f8] ; jmp rcx
0x00000000004055cd : mov rcx, qword ptr [rax*8 + 0x4086b8] ; jmp rcx
0x000000000040666c : mov rcx, qword ptr [rax*8 + 0x408a30] ; jmp rcx
0x00000000004065ec : mov rcx, qword ptr [rax*8 + 0x408a90] ; jmp rcx
0x000000000040175f : mov rsi, rax ; mov edi, 0x60b268 ; jmp rdx
0x0000000000408d24 : mov word ptr [rcx], cs ; add byte ptr [rax], al ; pushfq ; ret 0xffff
0x0000000000409064 : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax], ch ; mov edi, edi ; jmp rdx
0x0000000000402498 : movzx eax, al ; pop rbp ; ret
0x000000000040549b : movzx eax, cx ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004065f0 : nop ; mov al, byte ptr [rax] ; jmp rcx
0x0000000000407868 : nop dword ptr [rax + rax] ; ret
0x0000000000408d44 : or al, 0xa ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret
0x00000000004065ee : or al, 0xffffffffffffffc5 ; nop ; mov al, byte ptr [rax] ; jmp rcx
0x0000000000408d4d : or al, byte ptr [rax] ; add ah, ch ; ret
0x000000000040400e : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040400f : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x00000000004028fb : or byte ptr [rcx + 0x2df9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x0000000000402e51 : or byte ptr [rcx + 0x2df9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x0000000000402812 : or byte ptr [rcx + 0x38f9], al ; add byte ptr [rdi], cl ; pushfq ; ret 0x5588
0x0000000000402bb7 : or byte ptr [rcx + 0x38f9], al ; add byte ptr [rdi], cl ; pushfq ; ret 0x9588
0x0000000000408d35 : or dword ptr [rax], eax ; add ah, ch ; ret 0xffff
0x0000000000409945 : or dword ptr [rax], eax ; add al, bl ; ret 0xffff
0x0000000000404ed1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040785c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040785e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405a8e : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000407860 : pop r14 ; pop r15 ; ret
0x0000000000405a90 : pop r15 ; pop rbp ; ret
0x0000000000407862 : pop r15 ; ret
0x00000000004050c4 : pop rax ; ret
0x0000000000401782 : pop rbp ; mov byte ptr [rip + 0x209b4e], 1 ; ret
0x0000000000401721 : pop rbp ; mov edi, 0x60b268 ; jmp rax
0x000000000040175e : pop rbp ; mov rsi, rax ; mov edi, 0x60b268 ; jmp rdx
0x000000000040785b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040785f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401715 : pop rbp ; ret
0x0000000000405a8d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004045fa : pop rbx ; pop rbp ; ret
0x0000000000405a91 : pop rdi ; pop rbp ; ret
0x0000000000407863 : pop rdi ; ret
0x0000000000405a8f : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000407861 : pop rsi ; pop r15 ; ret
0x000000000040785d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000404c6e : push rax ; pop rbp ; ret
0x0000000000404012 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x00000000004017a4 : push rbp ; mov edi, 0x60ae20 ; mov rbp, rsp ; call rax
0x00000000004051f0 : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000406d1d : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x00000000004046de : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000040281a : pushfq ; ret 0x5588
0x0000000000402bbf : pushfq ; ret 0x9588
0x0000000000408d28 : pushfq ; ret 0xffff
0x0000000000409ee0 : rcr cl, -1 ; call qword ptr [rax]
0x0000000000401309 : ret
0x0000000000401bcb : ret 0
0x0000000000401582 : ret 0x209b
0x0000000000401382 : ret 0x209c
0x000000000040281b : ret 0x5588
0x0000000000405589 : ret 0x8844
0x0000000000406002 : ret 0x8948
0x000000000040413d : ret 0x89a5
0x0000000000404016 : ret 0x8b48
0x0000000000402bc0 : ret 0x9588
0x0000000000401d65 : ret 0xb0
0x0000000000403031 : ret 0xbe01
0x0000000000401745 : ret 0xc148
0x000000000040223c : ret 0xcf89
0x00000000004051a3 : ret 0xd284
0x000000000040402b : ret 0xdfe8
0x00000000004022c7 : ret 0xe3e8
0x000000000040462c : ret 0xee8
0x0000000000408d21 : ret 0xffff
0x000000000040494e : ret 1
0x00000000004046e2 : ret 8
0x0000000000405bcb : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000403700 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x40376b ; ret
0x000000000040174c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40175b ; pop rbp ; ret
0x0000000000405bcc : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000403701 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x40376a ; ret
0x0000000000406d1e : ror byte ptr [rax - 0x7f], 1 ; ret 1
0x00000000004046df : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000040174e : sar eax, 1 ; jne 0x401759 ; pop rbp ; ret
0x000000000040174d : sar rax, 1 ; jne 0x40175a ; pop rbp ; ret
0x0000000000409edc : sbb al, 0xf ; add byte ptr [rax], al ; rcr cl, -1 ; call qword ptr [rax]
0x0000000000409edd : sldt word ptr [rax] ; rcr cl, -1 ; call qword ptr [rax]
0x00000000004028fd : stc ; sub eax, 0xf000000 ; xchg eax, esp ; ret 0x5588
0x0000000000402e53 : stc ; sub eax, 0xf000000 ; xchg eax, esp ; ret 0x9588
0x00000000004073c8 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000408d4c : sub al, 0xa ; add byte ptr [rax], al ; in al, dx ; ret
0x00000000004028fe : sub eax, 0xf000000 ; xchg eax, esp ; ret 0x5588
0x0000000000402e54 : sub eax, 0xf000000 ; xchg eax, esp ; ret 0x9588
0x00000000004078d1 : sub esp, 8 ; add rsp, 8 ; ret
0x00000000004078d0 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040786a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000401786 : wait ; and byte ptr [rax], al ; add ebx, esi ; ret
0x00000000004055d2 : xchg byte ptr [rax], al ; jmp rcx
0x0000000000402903 : xchg eax, esp ; ret 0x5588
0x0000000000402e59 : xchg eax, esp ; ret 0x9588
0x00000000004051a2 : xchg eax, esp ; ret 0xd284
0x000000000040712e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000403576 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
