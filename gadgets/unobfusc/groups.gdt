0x0000000000403b59 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407bb3 : add ah, ah ; add eax, dword ptr [rax] ; add al, bl ; ret 0xffff
0x0000000000407b93 : add ah, al ; add eax, dword ptr [rax] ; add al, cl ; ret 0xffff
0x0000000000407bd5 : add al, 0 ; add al, ch ; ret 0xffff
0x0000000000407bf5 : add al, 0 ; add byte ptr [rax], bl ; ret
0x0000000000407bb7 : add al, bl ; ret 0xffff
0x0000000000401b87 : add al, ch ; ret
0x0000000000407bd7 : add al, ch ; ret 0xffff
0x0000000000407b97 : add al, cl ; ret 0xffff
0x000000000040677f : add bl, dh ; ret
0x0000000000404b38 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000407bb1 : add byte ptr [rax], al ; add ah, ah ; add eax, dword ptr [rax] ; add al, bl ; ret 0xffff
0x0000000000407b91 : add byte ptr [rax], al ; add ah, al ; add eax, dword ptr [rax] ; add al, cl ; ret 0xffff
0x0000000000401b85 : add byte ptr [rax], al ; add al, ch ; ret
0x000000000040677d : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040677b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004003c0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000004003c2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x0000000000402516 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040677c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004003c4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x0000000000401f8c : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b75b8b], cl ; ret 0xb0
0x0000000000401bf4 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b76b8b], cl ; ret 0xb0
0x0000000000401c4d : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b76f8b], cl ; ret 0xb0
0x0000000000401ca6 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7738b], cl ; ret 0xb0
0x000000000040442e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040215f : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004038c0 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040135b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004051a1 : add byte ptr [rax], al ; call 0x4013c4
0x00000000004053db : add byte ptr [rax], al ; call 0x401664
0x0000000000408396 : add byte ptr [rax], al ; cwde ; loope 0x40839f ; call rdx
0x0000000000407c36 : add byte ptr [rax], al ; cwde ; ret
0x0000000000401519 : add byte ptr [rax], al ; jmp 0x401379
0x0000000000402702 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000402518 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004076ba : add byte ptr [rax], al ; nop ; fdivp st(7) ; call qword ptr [rax]
0x000000000040752a : add byte ptr [rax], al ; nop ; mov bl, -1 ; call rax
0x00000000004075aa : add byte ptr [rax], al ; or bl, 0xff ; call rax
0x0000000000403e11 : add byte ptr [rax], al ; pop rbp ; ret
0x00000000004049fb : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403888 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040753a : add byte ptr [rax], al ; push rax ; mov ah, -1 ; call qword ptr [rax]
0x000000000040677e : add byte ptr [rax], al ; ret
0x00000000004003c6 : add byte ptr [rax], al ; ret 1
0x000000000040763a : add byte ptr [rax], al ; sbb al, -1 ; call qword ptr [rax]
0x00000000004076fa : add byte ptr [rax], al ; sub bl, -1 ; call qword ptr [rax]
0x0000000000407bf7 : add byte ptr [rax], bl ; ret
0x00000000004049fc : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000403889 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000401f8e : add byte ptr [rbx - 0x76b75b8b], cl ; ret 0xb0
0x0000000000401bf6 : add byte ptr [rbx - 0x76b76b8b], cl ; ret 0xb0
0x0000000000401c4f : add byte ptr [rbx - 0x76b76f8b], cl ; ret 0xb0
0x0000000000401ca8 : add byte ptr [rbx - 0x76b7738b], cl ; ret 0xb0
0x0000000000405146 : add byte ptr [rcx + 0x71e8fc45], cl ; ret
0x0000000000401818 : add byte ptr [rcx], al ; ret
0x0000000000404430 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000403b18 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004049fa : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000403887 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000402047 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004060fa : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401814 : add eax, 0x207a9e ; add ebx, esi ; ret
0x0000000000407bb5 : add eax, dword ptr [rax] ; add al, bl ; ret 0xffff
0x0000000000407b95 : add eax, dword ptr [rax] ; add al, cl ; ret 0xffff
0x00000000004017db : add eax, edx ; sar rax, 1 ; jne 0x4017ec ; pop rbp ; ret
0x0000000000401819 : add ebx, esi ; ret
0x000000000040194b : add esp, 0x10 ; pop rbp ; ret
0x00000000004059ec : add esp, 0x130 ; pop rbp ; ret
0x0000000000403884 : add esp, 0x138 ; pop rbx ; pop rbp ; ret
0x0000000000404cec : add esp, 0x1a0 ; pop rbp ; ret
0x00000000004023d0 : add esp, 0x20 ; pop rbp ; ret
0x0000000000401a2d : add esp, 0x30 ; pop rbp ; ret
0x000000000040212c : add esp, 0x40 ; pop rbp ; ret
0x0000000000403efc : add esp, 0x50 ; pop rbp ; ret
0x000000000040204c : add esp, 0x60 ; pop rbp ; ret
0x0000000000402993 : add esp, 0x70 ; pop rbp ; ret
0x0000000000403a3e : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000403e0d : add esp, 0x90 ; pop rbp ; ret
0x0000000000404b84 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040135e : add esp, 8 ; ret
0x00000000004017da : add rax, rdx ; sar rax, 1 ; jne 0x4017ed ; pop rbp ; ret
0x000000000040194a : add rsp, 0x10 ; pop rbp ; ret
0x00000000004059eb : add rsp, 0x130 ; pop rbp ; ret
0x0000000000403883 : add rsp, 0x138 ; pop rbx ; pop rbp ; ret
0x0000000000404ceb : add rsp, 0x1a0 ; pop rbp ; ret
0x00000000004023cf : add rsp, 0x20 ; pop rbp ; ret
0x0000000000401a2c : add rsp, 0x30 ; pop rbp ; ret
0x000000000040212b : add rsp, 0x40 ; pop rbp ; ret
0x0000000000403efb : add rsp, 0x50 ; pop rbp ; ret
0x000000000040204b : add rsp, 0x60 ; pop rbp ; ret
0x0000000000402992 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000403a3d : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000403e0c : add rsp, 0x90 ; pop rbp ; ret
0x0000000000404b83 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040135d : add rsp, 8 ; ret
0x00000000004060f9 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401817 : and byte ptr [rax], al ; add ebx, esi ; ret
0x00000000004053d7 : and byte ptr [rdi + 0xe], bh ; call 0x401668
0x0000000000403e47 : and eax, 0x48fffffd ; add esp, 0x20 ; pop rbp ; ret
0x000000000040217f : and eax, 0x6092d8 ; pop rbp ; ret
0x00000000004021a3 : and eax, 0x6092e0 ; pop rbp ; ret
0x0000000000405169 : call 0x4013b2
0x00000000004051a3 : call 0x4013c2
0x000000000040523d : call 0x4014b2
0x0000000000405338 : call 0x401592
0x00000000004053dd : call 0x401662
0x00000000004024d4 : call 0x4902ae24
0x00000000004024d3 : call 0x4902ae25
0x00000000004024d4 : call 0x4902ae27
0x00000000004024d3 : call 0x4902ae28
0x00000000004038b9 : call 0xffffffffe902c209
0x00000000004038b8 : call 0xffffffffe902c20a
0x0000000000406759 : call qword ptr [r12 + rbx*8]
0x00000000004074bf : call qword ptr [rax]
0x00000000004078fb : call qword ptr [rsi]
0x000000000040675a : call qword ptr [rsp + rbx*8]
0x000000000040183d : call rax
0x00000000004078bb : call rcx
0x0000000000407b1b : call rdx
0x00000000004059ea : clc ; add rsp, 0x130 ; pop rbp ; ret
0x0000000000404eef : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404441 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004017df : clc ; jne 0x4017e8 ; pop rbp ; ret
0x0000000000402845 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004064cb : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004064ce : clc ; pop rbp ; ret
0x0000000000405fa6 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004053bb : cld ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405300 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000405ded : cld ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004064c8 : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000405fa3 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405f46 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004052fd : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000405dea : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000403886 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040179d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4017b0 ; pop rbp ; ret
0x0000000000408398 : cwde ; loope 0x40839d ; call rdx
0x000000000040453c : cwde ; mov rcx, qword ptr [rax*8 + 0x4070c8] ; jmp rcx
0x0000000000407c38 : cwde ; ret
0x0000000000402d25 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; or byte ptr [rax + rax*2], ch ; jmp rcx
0x0000000000402a45 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; shr byte ptr [rbx + 0x40], 0 ; jmp rcx
0x000000000040594f : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000040396b : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000404541 : enter 0x4070, 0 ; jmp rcx
0x00000000004076bd : fdivp st(7) ; call qword ptr [rax]
0x000000000040763d : fdivr st(7) ; call qword ptr [rax]
0x00000000004032a3 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040675c : fmul qword ptr [rax - 0x7d] ; ret
0x000000000040327b : fsubr st(0) ; jmp rcx
0x000000000040523c : fsubr st(0) ; outsb dx, byte ptr [rsi] ; ret 0xffff
0x0000000000401949 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004017b0 : hlt ; pop rbp ; mov edi, 0x609280 ; jmp rax
0x00000000004051bb : in al, 0x48 ; add esp, 0x20 ; pop rbp ; ret
0x00000000004053d6 : in al, dx ; and byte ptr [rdi + 0xe], bh ; call 0x401669
0x0000000000404b40 : int 0x80
0x00000000004017a3 : ja 0x4017aa ; pop rbp ; ret
0x00000000004017af : je 0x4017ad ; pop rbp ; mov edi, 0x609280 ; jmp rax
0x000000000040215d : jg 0x40216a ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405336 : jge 0x40532c ; call 0x401594
0x000000000040151b : jmp 0x401377
0x0000000000407cbb : jmp qword ptr [rax]
0x00000000004078db : jmp qword ptr [rdi]
0x0000000000407b9b : jmp qword ptr [rdx]
0x00000000004017b7 : jmp rax
0x0000000000402a4e : jmp rcx
0x00000000004017f7 : jmp rdx
0x00000000004017e0 : jne 0x4017e7 ; pop rbp ; ret
0x000000000040519d : jne 0x4051c1 ; call 0x4013c8
0x0000000000402995 : jo 0x4029f6 ; ret
0x00000000004040a4 : jo 0x404105 ; ret
0x00000000004041de : jo 0x40423f ; ret
0x0000000000405df1 : jo 0x405e52 ; ret
0x0000000000401816 : jp 0x40183d ; add byte ptr [rcx], al ; ret
0x0000000000403a40 : js 0x403aa0 ; pop rbp ; ret
0x0000000000408399 : loope 0x40839c ; call rdx
0x0000000000405238 : loopne 0x405289 ; mov ecx, dword ptr [rbp - 0x28] ; call 0x4014b7
0x00000000004066fb : loopne 0x40674b ; add esp, 0x40 ; pop rbp ; ret
0x00000000004066fa : loopne 0x40674c ; add esp, 0x40 ; pop rbp ; ret
0x000000000040753d : mov ah, -1 ; call qword ptr [rax]
0x0000000000405db0 : mov al, -0x75 ; or byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; ret 0x8148
0x0000000000403f7b : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000403e0b : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000407528 : mov al, 5 ; add byte ptr [rax], al ; nop ; mov bl, -1 ; call rax
0x00000000004075a8 : mov al, 7 ; add byte ptr [rax], al ; or bl, 0xff ; call rax
0x00000000004060f6 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040752d : mov bl, -1 ; call rax
0x00000000004021a1 : mov byte ptr [0x6092e0], al ; pop rbp ; ret
0x0000000000405331 : mov byte ptr [rbp - 0x11], cl ; mov rdi, qword ptr [rbp - 0x10] ; call 0x401599
0x0000000000401813 : mov byte ptr [rip + 0x207a9e], 1 ; ret
0x0000000000402049 : mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004060fc : mov dh, -0x40 ; pop rbp ; ret
0x000000000040217d : mov dword ptr [0x6092d8], edi ; pop rbp ; ret
0x0000000000402846 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000402754 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000402808 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000401a29 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401947 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004064c9 : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004028be : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403a3c : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000402708 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000404e0b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004023cc : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402705 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040234f : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004050a3 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004026bd : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040274e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040251b : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004051b9 : mov eax, dword ptr [rbp - 0x1c] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004066f9 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040280a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040298f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000403a3a : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000403f79 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000405fa4 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004053b9 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004052fe : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000405deb : mov eax, dword ptr [rbp - 4] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000404eed : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040443f : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004064cc : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402129 : mov eax, edx ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040183b : mov ebp, esp ; call rax
0x00000000004017a1 : mov ebp, esp ; ja 0x4017ac ; pop rbp ; ret
0x0000000000402a47 : mov ecx, dword ptr [rax*8 + 0x406bc0] ; jmp rcx
0x0000000000402d27 : mov ecx, dword ptr [rax*8 + 0x406c08] ; jmp rcx
0x000000000040453e : mov ecx, dword ptr [rax*8 + 0x4070c8] ; jmp rcx
0x0000000000402751 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040523a : mov ecx, dword ptr [rbp - 0x28] ; call 0x4014b5
0x0000000000401835 : mov edi, 0x608e20 ; mov rbp, rsp ; call rax
0x00000000004017b2 : mov edi, 0x609280 ; jmp rax
0x00000000004017f2 : mov edi, 0x609280 ; jmp rdx
0x00000000004053d8 : mov edi, 0xe ; call 0x401667
0x0000000000405335 : mov edi, dword ptr [rbp - 0x10] ; call 0x401595
0x0000000000406757 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000406756 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000405236 : mov edx, dword ptr [rbp - 0x20] ; mov rcx, qword ptr [rbp - 0x28] ; call 0x4014b9
0x00000000004017f0 : mov esi, eax ; mov edi, 0x609280 ; jmp rdx
0x0000000000401837 : mov fs, word ptr [rax] ; mov rbp, rsp ; call rax
0x000000000040217c : mov qword ptr [0x6092d8], rdi ; pop rbp ; ret
0x00000000004028bd : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403f7a : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000403a3b : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000404e0a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004023cb : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402704 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040234e : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004050a2 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004026bc : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040251a : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040298e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000403f78 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000404eec : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040443e : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040183a : mov rbp, rsp ; call rax
0x00000000004017a0 : mov rbp, rsp ; ja 0x4017ad ; pop rbp ; ret
0x0000000000402a46 : mov rcx, qword ptr [rax*8 + 0x406bc0] ; jmp rcx
0x0000000000402d26 : mov rcx, qword ptr [rax*8 + 0x406c08] ; jmp rcx
0x000000000040453d : mov rcx, qword ptr [rax*8 + 0x4070c8] ; jmp rcx
0x0000000000405239 : mov rcx, qword ptr [rbp - 0x28] ; call 0x4014b6
0x0000000000405334 : mov rdi, qword ptr [rbp - 0x10] ; call 0x401596
0x00000000004017ef : mov rsi, rax ; mov edi, 0x609280 ; jmp rdx
0x0000000000401cab : mov word ptr [rax - 0x77], cs ; ret 0xb0
0x0000000000401daa : movabs al, byte ptr [0x8141ca8941006092] ; ret 1
0x0000000000402048 : movzx eax, al ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004060fb : movzx eax, al ; pop rbp ; ret
0x00000000004076bc : nop ; fdivp st(7) ; call qword ptr [rax]
0x000000000040752c : nop ; mov bl, -1 ; call rax
0x0000000000406778 : nop dword ptr [rax + rax] ; ret
0x000000000040453f : or al, 0xffffffffffffffc5 ; enter 0x4070, 0 ; jmp rcx
0x0000000000402d28 : or al, 0xffffffffffffffc5 ; or byte ptr [rax + rax*2], ch ; jmp rcx
0x0000000000402a48 : or al, 0xffffffffffffffc5 ; shr byte ptr [rbx + 0x40], 0 ; jmp rcx
0x00000000004075ac : or bl, 0xff ; call rax
0x000000000040329e : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000402d2a : or byte ptr [rax + rax*2], ch ; jmp rcx
0x000000000040329f : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000405db2 : or byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; ret 0x8148
0x0000000000404161 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405333 : out dx, eax ; mov rdi, qword ptr [rbp - 0x10] ; call 0x401597
0x0000000000405332 : out dx, eax ; mov rdi, qword ptr [rbp - 0x10] ; call 0x401598
0x000000000040523e : outsb dx, byte ptr [rsi] ; ret 0xffff
0x000000000040676c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040676e : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004049fe : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406770 : pop r14 ; pop r15 ; ret
0x0000000000404a00 : pop r15 ; pop rbp ; ret
0x0000000000406772 : pop r15 ; ret
0x0000000000401812 : pop rbp ; mov byte ptr [rip + 0x207a9e], 1 ; ret
0x00000000004017b1 : pop rbp ; mov edi, 0x609280 ; jmp rax
0x00000000004017ee : pop rbp ; mov rsi, rax ; mov edi, 0x609280 ; jmp rdx
0x000000000040676b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040676f : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004017a5 : pop rbp ; ret
0x00000000004049fd : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040388a : pop rbx ; pop rbp ; ret
0x0000000000404a01 : pop rdi ; pop rbp ; ret
0x0000000000406773 : pop rdi ; ret
0x00000000004049ff : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000406771 : pop rsi ; pop r15 ; ret
0x000000000040676d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000407527 : push qword ptr [rax - 0x6ffffffb] ; mov bl, -1 ; call rax
0x000000000040753c : push rax ; mov ah, -1 ; call qword ptr [rax]
0x0000000000403efe : push rax ; pop rbp ; ret
0x00000000004032a2 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000405237 : push rbp ; loopne 0x40528a ; mov ecx, dword ptr [rbp - 0x28] ; call 0x4014b8
0x0000000000401834 : push rbp ; mov edi, 0x608e20 ; mov rbp, rsp ; call rax
0x00000000004055dd : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000040396e : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000405339 : push rbx ; ret 0xffff
0x0000000000401361 : ret
0x0000000000401722 : ret 0x207a
0x0000000000401522 : ret 0x207b
0x00000000004024c9 : ret 0x30
0x00000000004024d7 : ret 0x8148
0x00000000004044f9 : ret 0x8844
0x0000000000401e2d : ret 0x8948
0x00000000004033cd : ret 0x89a5
0x00000000004020c4 : ret 0x8b48
0x0000000000401bfc : ret 0xb0
0x00000000004017d5 : ret 0xc148
0x0000000000404433 : ret 0xd284
0x00000000004038bc : ret 0xee8
0x00000000004032bb : ret 0xfe8
0x00000000004024da : ret 0xffff
0x00000000004003c8 : ret 1
0x0000000000405dbc : ret 4
0x0000000000403972 : ret 8
0x0000000000404b3b : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000405db5 : ror byte ptr [r8 - 0x77], 1 ; ret 0x8148
0x0000000000402990 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x4029fb ; ret
0x00000000004017dc : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4017eb ; pop rbp ; ret
0x0000000000404b3c : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000405db6 : ror byte ptr [rax - 0x77], 1 ; ret 0x8148
0x0000000000402991 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x4029fa ; ret
0x00000000004055de : ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000040396f : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000401815 : sahf ; jp 0x40183e ; add byte ptr [rcx], al ; ret
0x00000000004017de : sar eax, 1 ; jne 0x4017e9 ; pop rbp ; ret
0x00000000004017dd : sar rax, 1 ; jne 0x4017ea ; pop rbp ; ret
0x000000000040763c : sbb al, -1 ; call qword ptr [rax]
0x0000000000402a4a : shr byte ptr [rbx + 0x40], 0 ; jmp rcx
0x00000000004060f8 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004076fc : sub bl, -1 ; call qword ptr [rax]
0x00000000004067ad : sub esp, 8 ; add rsp, 8 ; ret
0x00000000004067ac : sub rsp, 8 ; add rsp, 8 ; ret
0x00000000004078f9 : test al, -1 ; call qword ptr [rsi]
0x00000000004078d9 : test al, -1 ; jmp qword ptr [rdi]
0x000000000040677a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000404432 : xchg eax, esp ; ret 0xd284
0x00000000004059ee : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000402806 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
