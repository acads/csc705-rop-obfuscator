0x0000000000405287 : adc byte ptr [rax - 0x77], cl ; jge 0x40528b ; call 0x401527
0x00000000004052c7 : adc byte ptr [rax - 0x77], cl ; jge 0x4052cb ; call 0x401527
0x00000000004052f7 : adc byte ptr [rax - 0x77], cl ; jge 0x4052fb ; call 0x401527
0x0000000000404989 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040a9f3 : add ah, ah ; or al, 0 ; add al, cl ; sar bh, cl ; jmp rax
0x0000000000402f47 : add al, ch ; ret
0x000000000040a9f7 : add al, cl ; sar bh, cl ; jmp rax
0x00000000004085cf : add bl, dh ; ret
0x0000000000405220 : add byte ptr [rax - 0x73], cl ; or al, 0x25 ; ret 0x4093
0x0000000000406278 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000401eb4 : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x00000000004085cd : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000401eb2 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x00000000004085cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000406fa9 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000403346 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004085cc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000402dbc : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b75b8b], cl ; ret 0xb0
0x000000000040525e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000402c0f : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004046f0 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004014c3 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000040a556 : add byte ptr [rax], al ; call 0x2840a510
0x00000000004015b9 : add byte ptr [rax], al ; jmp 0x4014d9
0x0000000000409b46 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0xffff
0x0000000000406fab : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040529a : add byte ptr [rax], al ; mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004053cd : add byte ptr [rax], al ; mov eax, edi ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405529 : add byte ptr [rax], al ; mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405341 : add byte ptr [rax], al ; mov eax, esi ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403532 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000403348 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040a656 : add byte ptr [rax], al ; pop rax ; mov al, -1 ; call rdi
0x0000000000402bea : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040613b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004046b8 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004085ce : add byte ptr [rax], al ; ret
0x000000000040613c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004046b9 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000402dbe : add byte ptr [rbx - 0x76b75b8b], cl ; ret 0xb0
0x0000000000402aa4 : add byte ptr [rbx - 0x834b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040238d : add byte ptr [rbx - 0xcb4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000402434 : add byte ptr [rbx - 0xcf4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004024cc : add byte ptr [rbx - 0xd34b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000402533 : add byte ptr [rbx - 0xd74b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004026f5 : add byte ptr [rcx + rax], ah ; movzx eax, al ; pop rbp ; ret
0x00000000004019d8 : add byte ptr [rcx], al ; ret
0x000000000040555a : add byte ptr [rdi], cl ; mov bh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405260 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000404948 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040613a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004046b7 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000402e77 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004026f7 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004019d4 : add eax, 0x20993e ; add ebx, esi ; ret
0x000000000040199b : add eax, edx ; sar rax, 1 ; jne 0x4019ac ; pop rbp ; ret
0x00000000004019d9 : add ebx, esi ; ret
0x0000000000401b4b : add esp, 0x10 ; pop rbp ; ret
0x000000000040783c : add esp, 0x130 ; pop rbp ; ret
0x00000000004046b4 : add esp, 0x138 ; pop rbx ; pop rbp ; ret
0x000000000040642c : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000403200 : add esp, 0x20 ; pop rbp ; ret
0x0000000000401c2d : add esp, 0x30 ; pop rbp ; ret
0x0000000000402f5c : add esp, 0x40 ; pop rbp ; ret
0x0000000000404d2c : add esp, 0x50 ; pop rbp ; ret
0x0000000000402e7c : add esp, 0x60 ; pop rbp ; ret
0x00000000004037c3 : add esp, 0x70 ; pop rbp ; ret
0x000000000040486e : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000404c3d : add esp, 0x90 ; pop rbp ; ret
0x0000000000402be6 : add esp, 0xa0 ; pop rbp ; ret
0x0000000000405b7f : add esp, 0xe0 ; pop rbp ; ret
0x00000000004014c6 : add esp, 8 ; ret
0x000000000040199a : add rax, rdx ; sar rax, 1 ; jne 0x4019ad ; pop rbp ; ret
0x0000000000401b4a : add rsp, 0x10 ; pop rbp ; ret
0x000000000040783b : add rsp, 0x130 ; pop rbp ; ret
0x00000000004046b3 : add rsp, 0x138 ; pop rbx ; pop rbp ; ret
0x000000000040642b : add rsp, 0x1a0 ; pop rbp ; ret
0x00000000004031ff : add rsp, 0x20 ; pop rbp ; ret
0x0000000000401c2c : add rsp, 0x30 ; pop rbp ; ret
0x0000000000402f5b : add rsp, 0x40 ; pop rbp ; ret
0x0000000000404d2b : add rsp, 0x50 ; pop rbp ; ret
0x0000000000402e7b : add rsp, 0x60 ; pop rbp ; ret
0x00000000004037c2 : add rsp, 0x70 ; pop rbp ; ret
0x000000000040486d : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000404c3c : add rsp, 0x90 ; pop rbp ; ret
0x0000000000402be5 : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000405b7e : add rsp, 0xe0 ; pop rbp ; ret
0x00000000004014c5 : add rsp, 8 ; ret
0x00000000004026f6 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004019d7 : and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000404c77 : and eax, 0x48fffffd ; add esp, 0x20 ; pop rbp ; ret
0x0000000000402faf : and eax, 0x60b398 ; pop rbp ; ret
0x0000000000402fd3 : and eax, 0x60b3a0 ; pop rbp ; ret
0x000000000040a558 : call 0x2840a50e
0x000000000040528c : call 0x401522
0x0000000000403304 : call 0x4902bc54
0x0000000000403303 : call 0x4902bc55
0x0000000000403304 : call 0x4902bc57
0x0000000000403303 : call 0x4902bc58
0x00000000004046e9 : call 0xffffffffe902d039
0x00000000004046e8 : call 0xffffffffe902d03a
0x00000000004085a9 : call qword ptr [r12 + rbx*8]
0x0000000000409efb : call qword ptr [rsi]
0x00000000004085aa : call qword ptr [rsp + rbx*8]
0x00000000004019fd : call rax
0x0000000000409ebb : call rcx
0x000000000040a65b : call rdi
0x000000000040a11b : call rdx
0x0000000000409cd3 : call rsp
0x00000000004019d6 : cdq ; and byte ptr [rax], al ; add ebx, esi ; ret
0x00000000004053d0 : clc ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040783a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x000000000040662f : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405271 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040528b : clc ; call 0x401523
0x000000000040199f : clc ; jne 0x4019a8 ; pop rbp ; ret
0x0000000000403675 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040831b : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402711 : clc ; pop rbp ; ret
0x0000000000406fa8 : cld ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000407df6 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040720b : cld ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407150 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000407c3d : cld ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000406f3d : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x0000000000408318 : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000407df3 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407d96 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040714d : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000407c3a : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000406faf : cld ; pop rbp ; ret
0x00000000004046b6 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040195d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401970 ; pop rbp ; ret
0x0000000000405c7c : cwde ; mov rcx, qword ptr [rax*8 + 0x4093f0] ; jmp rcx
0x000000000040270d : dec dword ptr [rax - 0x77] ; jge 0x402710 ; pop rbp ; ret
0x0000000000402393 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040779f : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000040479b : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x00000000004056a0 : enter -0x7cb8, -0x3c ; push rax ; pop rbp ; ret
0x00000000004040d3 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x00000000004085ac : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000401b49 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401970 : hlt ; pop rbp ; mov edi, 0x60b2d0 ; jmp rax
0x00000000004068fb : in al, 0x48 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000405286 : in al, dx ; adc byte ptr [rax - 0x77], cl ; jge 0x40528c ; call 0x401528
0x00000000004052c6 : in al, dx ; adc byte ptr [rax - 0x77], cl ; jge 0x4052cc ; call 0x401528
0x00000000004052f6 : in al, dx ; adc byte ptr [rax - 0x77], cl ; jge 0x4052fc ; call 0x401528
0x000000000040700d : in al, dx ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004026f3 : in eax, -0x50 ; add byte ptr [rcx + rax], ah ; movzx eax, al ; pop rbp ; ret
0x00000000004052b3 : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x0000000000406280 : int 0x80
0x0000000000401963 : ja 0x40196a ; pop rbp ; ret
0x000000000040196f : je 0x40196d ; pop rbp ; mov edi, 0x60b2d0 ; jmp rax
0x0000000000402f8d : jg 0x402f9a ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402710 : jge 0x40270d ; pop rbp ; ret
0x000000000040528a : jge 0x405288 ; call 0x401524
0x00000000004052b6 : jge 0x4052b3 ; pop rbp ; ret
0x00000000004052ca : jge 0x4052c8 ; call 0x401524
0x00000000004052fa : jge 0x4052f8 ; call 0x401524
0x0000000000409d99 : jge 0x409d9c ; jmp rdx
0x00000000004015bb : jmp 0x4014d7
0x000000000040a2bb : jmp qword ptr [rax]
0x0000000000409e5b : jmp qword ptr [rdi]
0x000000000040a19b : jmp qword ptr [rdx]
0x0000000000401977 : jmp rax
0x000000000040387e : jmp rcx
0x00000000004019b7 : jmp rdx
0x00000000004019a0 : jne 0x4019a7 ; pop rbp ; ret
0x00000000004037c5 : jo 0x403826 ; ret
0x0000000000404ed4 : jo 0x404f35 ; ret
0x000000000040500e : jo 0x40506f ; ret
0x0000000000407c41 : jo 0x407ca2 ; ret
0x0000000000404870 : js 0x4048d0 ; pop rbp ; ret
0x0000000000409b48 : lodsb al, byte ptr [rsi] ; ret 0xffff
0x0000000000405b81 : loopne 0x405b88 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000406f41 : loopne 0x406f48 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040854b : loopne 0x40859b ; add esp, 0x40 ; pop rbp ; ret
0x000000000040854a : loopne 0x40859c ; add esp, 0x40 ; pop rbp ; ret
0x0000000000407c00 : mov al, -0x75 ; or byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; ret 0x8148
0x000000000040a659 : mov al, -1 ; call rdi
0x00000000004026f4 : mov al, 0 ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000404dab : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000404c3b : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000407f46 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000402a58 : mov al, ch ; ret 0xffeb
0x000000000040555c : mov bh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402fd1 : mov byte ptr [0x60b3a0], al ; pop rbp ; ret
0x00000000004019d3 : mov byte ptr [rip + 0x20993e], 1 ; ret
0x0000000000402e79 : mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004026f9 : mov dh, -0x40 ; pop rbp ; ret
0x0000000000402f45 : mov dl, 0x60 ; add al, ch ; ret
0x0000000000402fad : mov dword ptr [0x60b398], edi ; pop rbp ; ret
0x0000000000403676 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000403584 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000403638 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000401c29 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401b47 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408319 : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000405289 : mov dword ptr [rbp - 8], edi ; call 0x401525
0x000000000040270f : mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x00000000004036ee : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040486c : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000403538 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040654b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004031fc : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403535 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040317f : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040700b : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004067e3 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004034ed : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040357e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040334b : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004068f9 : mov eax, dword ptr [rbp - 0x1c] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000408549 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040363a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040569e : mov eax, dword ptr [rbp - 0x38] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004037bf : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040486a : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000404da9 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000407df4 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407209 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040714e : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000407c3b : mov eax, dword ptr [rbp - 4] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000406fad : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040662d : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040526f : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040831c : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040529c : mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004053cf : mov eax, edi ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040552b : mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402f59 : mov eax, edx ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000405343 : mov eax, esi ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000409b41 : mov ebp, 0xd6cffff ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0xffff
0x00000000004019fb : mov ebp, esp ; call rax
0x0000000000401961 : mov ebp, esp ; ja 0x40196c ; pop rbp ; ret
0x00000000004052b2 : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000403877 : mov ecx, dword ptr [rax*8 + 0x408ec0] ; jmp rcx
0x0000000000403b57 : mov ecx, dword ptr [rax*8 + 0x408f08] ; jmp rcx
0x0000000000405c7e : mov ecx, dword ptr [rax*8 + 0x4093f0] ; jmp rcx
0x0000000000406d7d : mov ecx, dword ptr [rax*8 + 0x409760] ; jmp rcx
0x0000000000406cfd : mov ecx, dword ptr [rax*8 + 0x4097c0] ; jmp rcx
0x0000000000403581 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004019f5 : mov edi, 0x60ae20 ; mov rbp, rsp ; call rax
0x0000000000401972 : mov edi, 0x60b2d0 ; jmp rax
0x00000000004019b2 : mov edi, 0x60b2d0 ; jmp rdx
0x00000000004085a7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x00000000004085a6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000040387b : mov es, word ptr [rax] ; jmp rcx
0x00000000004019b0 : mov esi, eax ; mov edi, 0x60b2d0 ; jmp rdx
0x0000000000402fac : mov qword ptr [0x60b398], rdi ; pop rbp ; ret
0x0000000000405288 : mov qword ptr [rbp - 8], rdi ; call 0x401526
0x000000000040270e : mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x00000000004036ed : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404daa : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040486b : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x000000000040654a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004031fb : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403534 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040317e : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004067e2 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004034ec : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040334a : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040569d : mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004037be : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000404da8 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040662c : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040526e : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004019fa : mov rbp, rsp ; call rax
0x0000000000401960 : mov rbp, rsp ; ja 0x40196d ; pop rbp ; ret
0x00000000004052b1 : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000403876 : mov rcx, qword ptr [rax*8 + 0x408ec0] ; jmp rcx
0x0000000000403b56 : mov rcx, qword ptr [rax*8 + 0x408f08] ; jmp rcx
0x0000000000405c7d : mov rcx, qword ptr [rax*8 + 0x4093f0] ; jmp rcx
0x0000000000406d7c : mov rcx, qword ptr [rax*8 + 0x409760] ; jmp rcx
0x0000000000406cfc : mov rcx, qword ptr [rax*8 + 0x4097c0] ; jmp rcx
0x00000000004019af : mov rsi, rax ; mov edi, 0x60b2d0 ; jmp rdx
0x0000000000402e78 : movzx eax, al ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004026f8 : movzx eax, al ; pop rbp ; ret
0x000000000040555b : movzx eax, cx ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004085c8 : nop dword ptr [rax + rax] ; ret
0x000000000040a9f5 : or al, 0 ; add al, cl ; sar bh, cl ; jmp rax
0x0000000000405223 : or al, 0x25 ; ret 0x4093
0x00000000004040ce : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x00000000004040cf : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000407c02 : or byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; ret 0x8148
0x0000000000404f91 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403b5b : pop qword ptr [rax] ; jmp rcx
0x00000000004085bc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004085be : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040613e : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004085c0 : pop r14 ; pop r15 ; ret
0x0000000000406140 : pop r15 ; pop rbp ; ret
0x00000000004085c2 : pop r15 ; ret
0x000000000040a658 : pop rax ; mov al, -1 ; call rdi
0x00000000004019d2 : pop rbp ; mov byte ptr [rip + 0x20993e], 1 ; ret
0x0000000000401971 : pop rbp ; mov edi, 0x60b2d0 ; jmp rax
0x00000000004019ae : pop rbp ; mov rsi, rax ; mov edi, 0x60b2d0 ; jmp rdx
0x00000000004085bb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004085bf : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401965 : pop rbp ; ret
0x000000000040613d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004046ba : pop rbx ; pop rbp ; ret
0x0000000000406141 : pop rdi ; pop rbp ; ret
0x00000000004085c3 : pop rdi ; ret
0x000000000040613f : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004085c1 : pop rsi ; pop r15 ; ret
0x00000000004085bd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000404d2e : push rax ; pop rbp ; ret
0x00000000004040d2 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x00000000004019f4 : push rbp ; mov edi, 0x60ae20 ; mov rbp, rsp ; call rax
0x00000000004052b0 : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000040742d : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000040479e : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x00000000004014c9 : ret
0x00000000004017c2 : ret 0x2099
0x00000000004015c2 : ret 0x209a
0x00000000004040eb : ret 0x2fe8
0x00000000004032f9 : ret 0x30
0x0000000000405225 : ret 0x4093
0x0000000000402637 : ret 0x8041
0x0000000000403307 : ret 0x8148
0x0000000000405c39 : ret 0x8844
0x000000000040224f : ret 0x8948
0x00000000004041fd : ret 0x89a5
0x0000000000402ef4 : ret 0x8b48
0x0000000000401eb7 : ret 0xb0
0x0000000000401995 : ret 0xc148
0x0000000000405263 : ret 0xd284
0x00000000004046ec : ret 0xee8
0x0000000000402a5a : ret 0xffeb
0x0000000000401cca : ret 0xfff8
0x000000000040330a : ret 0xffff
0x0000000000404a0e : ret 1
0x0000000000407c0c : ret 4
0x00000000004047a2 : ret 8
0x000000000040627b : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000407c05 : ror byte ptr [r8 - 0x77], 1 ; ret 0x8148
0x00000000004037c0 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x40382b ; ret
0x000000000040199c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4019ab ; pop rbp ; ret
0x000000000040627c : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000407c06 : ror byte ptr [rax - 0x77], 1 ; ret 0x8148
0x00000000004037c1 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x40382a ; ret
0x000000000040742e : ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000040479f : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000040a9f9 : sar bh, cl ; jmp rax
0x000000000040199e : sar eax, 1 ; jne 0x4019a9 ; pop rbp ; ret
0x000000000040199d : sar rax, 1 ; jne 0x4019aa ; pop rbp ; ret
0x0000000000407f48 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000405285 : sub esp, 0x10 ; mov qword ptr [rbp - 8], rdi ; call 0x401529
0x00000000004085fd : sub esp, 8 ; add rsp, 8 ; ret
0x00000000004085fc : sub rsp, 8 ; add rsp, 8 ; ret
0x00000000004085ca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040521e : xchg eax, ebx ; add byte ptr [rax - 0x73], cl ; or al, 0x25 ; ret 0x4093
0x0000000000405262 : xchg eax, esp ; ret 0xd284
0x0000000000402a55 : xor byte ptr [rcx - 0x3d17778b], cl ; jmp 0x402a61
0x000000000040783e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000403636 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
