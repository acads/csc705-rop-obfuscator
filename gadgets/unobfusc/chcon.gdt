0x000000000040db11 : adc al, -0x75 ; hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000409523 : adc al, byte ptr [rcx + 0x4f9] ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x0000000000409498 : adc al, byte ptr [rcx + 0x4f9] ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf280
0x000000000040a2f8 : adc al, byte ptr [rcx] ; jmp rcx
0x0000000000405487 : adc byte ptr [rax - 0x77], cl ; jge 0x40548b ; call 0x401707
0x000000000040aa99 : adc byte ptr [rax], dl ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004054b7 : adc byte ptr [rcx + 0x40e8fc7d], cl ; ret 0xffff
0x00000000004098c7 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000404b19 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000411ee9 : adc edi, edi ; call qword ptr [rsi]
0x0000000000411605 : adc edi, edi ; call rax
0x0000000000413664 : add al, 0x19 ; add byte ptr [rax], al ; cwde ; mov ah, -1 ; jmp rax
0x000000000040bcca : add al, 0x48 ; add eax, ecx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000411653 : add al, ah ; and bh, bh ; call qword ptr [rax]
0x0000000000411693 : add al, ah ; xor bh, bh ; call qword ptr [rax]
0x0000000000411b53 : add al, al ; ret 0xffff
0x000000000040bd27 : add al, ch ; ret
0x0000000000411603 : add al, dh ; adc edi, edi ; call rax
0x0000000000411743 : add al, dh ; cmp al, -1 ; call rax
0x0000000000411703 : add al, dh ; cmp bh, bh ; call rax
0x0000000000411bd3 : add al, dh ; sar edi, cl ; call qword ptr [rax]
0x0000000000411613 : add al, dh ; sbb edi, edi ; call qword ptr [rax]
0x0000000000411e09 : add bh, bh ; jmp rdx
0x000000000040f9ef : add bl, dh ; ret
0x000000000040a907 : add byte ptr [r8], r8b ; add byte ptr [rcx - 0xfff43], al ; jmp qword ptr [rsi]
0x00000000004135a3 : add byte ptr [rax + rbx], al ; add byte ptr [rax], bl ; mov al, -1 ; call rdi
0x00000000004028ac : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x0000000000406078 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x00000000004022dc : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x00000000004116d3 : add byte ptr [rax], ah ; cmp edi, edi ; call qword ptr [rax]
0x0000000000413662 : add byte ptr [rax], al ; add al, 0x19 ; add byte ptr [rax], al ; cwde ; mov ah, -1 ; jmp rax
0x000000000040bd25 : add byte ptr [rax], al ; add al, ch ; ret
0x000000000040f9ed : add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004028aa : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x00000000004022da : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000040f9eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004003b8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004003ba : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040eae8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040c63d : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040872f : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004003bc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000402702 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7238b], cl ; ret 0xb0
0x0000000000402777 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7278b], cl ; ret 0xb0
0x000000000040a908 : add byte ptr [rax], al ; add byte ptr [rcx - 0xfff43], al ; jmp qword ptr [rsi]
0x0000000000406aa3 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x9588
0x0000000000409527 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x00000000004053ee : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040949c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf280
0x0000000000411882 : add byte ptr [rax], al ; add byte ptr [rsi - 1], cl ; call rax
0x0000000000404ada : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404880 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000408731 : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004016b3 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000411d12 : add byte ptr [rax], al ; and ah, 0xff ; jmp qword ptr [rax]
0x0000000000413782 : add byte ptr [rax], al ; and al, 0x1a ; add byte ptr [rax], al ; call 0x28413751
0x0000000000412482 : add byte ptr [rax], al ; and al, 7 ; add byte ptr [rax], al ; cwde ; xor bh, bh ; jmp qword ptr [rdi]
0x0000000000411852 : add byte ptr [rax], al ; and byte ptr [rdx - 1], cl ; call qword ptr [rax]
0x0000000000411cc2 : add byte ptr [rax], al ; and cl, 0xff ; call rax
0x0000000000413786 : add byte ptr [rax], al ; call 0x2841374d
0x0000000000411712 : add byte ptr [rax], al ; cmp edi, edi ; call qword ptr [rax]
0x0000000000413666 : add byte ptr [rax], al ; cwde ; mov ah, -1 ; jmp rax
0x0000000000412fe6 : add byte ptr [rax], al ; cwde ; mov bh, bh ; call qword ptr [rdx]
0x0000000000412486 : add byte ptr [rax], al ; cwde ; xor bh, bh ; jmp qword ptr [rdi]
0x0000000000412642 : add byte ptr [rax], al ; in al, 8 ; add byte ptr [rax], al ; pop rax ; xor edi, edi ; jmp qword ptr [rdi]
0x00000000004017c9 : add byte ptr [rax], al ; jmp 0x4016c9
0x000000000040f4cc : add byte ptr [rax], al ; mov al, sil ; movzx eax, al ; pop rbp ; ret
0x000000000040f44d : add byte ptr [rax], al ; mov ax, si ; movzx eax, ax ; pop rbp ; ret
0x000000000040549a : add byte ptr [rax], al ; mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040550d : add byte ptr [rax], al ; mov eax, edi ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405919 : add byte ptr [rax], al ; mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405731 : add byte ptr [rax], al ; mov eax, esi ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004036c2 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000411952 : add byte ptr [rax], al ; nop ; jno 0x41195b ; call qword ptr [rax]
0x0000000000411cd2 : add byte ptr [rax], al ; nop ; loop 0x411cdb ; call qword ptr [rax]
0x00000000004115d2 : add byte ptr [rax], al ; or dil, dil ; call qword ptr [rax]
0x0000000000411e06 : add byte ptr [rax], al ; pop rax ; add bh, bh ; jmp rdx
0x0000000000412646 : add byte ptr [rax], al ; pop rax ; xor edi, edi ; jmp qword ptr [rdi]
0x0000000000402cea : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000405f3b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000404848 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000411c92 : add byte ptr [rax], al ; push rax ; loopne 0x411c9b ; call qword ptr [rax]
0x0000000000411982 : add byte ptr [rax], al ; push rax ; mov bh, bh ; call rax
0x0000000000411b12 : add byte ptr [rax], al ; push rax ; mov dh, -1 ; call qword ptr [rax]
0x0000000000411c42 : add byte ptr [rax], al ; rcr ch, -1 ; call rax
0x00000000004003be : add byte ptr [rax], al ; ret
0x0000000000411b52 : add byte ptr [rax], al ; rol dl, -1 ; call qword ptr [rax]
0x00000000004135a2 : add byte ptr [rax], al ; sbb byte ptr [rax], r8b ; add byte ptr [rax], bl ; mov al, -1 ; call rdi
0x0000000000412fe2 : add byte ptr [rax], al ; test byte ptr [rdx], dl ; add byte ptr [rax], al ; cwde ; mov bh, bh ; call qword ptr [rdx]
0x00000000004117d2 : add byte ptr [rax], al ; xor byte ptr [rcx - 1], al ; call qword ptr [rax]
0x00000000004135a7 : add byte ptr [rax], bl ; mov al, -1 ; call rdi
0x00000000004120e7 : add byte ptr [rax], ch ; sub edi, edi ; call rdx
0x0000000000411c53 : add byte ptr [rax], dh ; fdivp st(7) ; call qword ptr [rax]
0x0000000000411b03 : add byte ptr [rax], dh ; mov dl, -1 ; call rax
0x0000000000411b4b : add byte ptr [rax], dh ; ret 0xffff
0x00000000004054df : add byte ptr [rbp + 0x48], dl ; mov ebp, esp ; mov dword ptr [rbp - 4], edi ; pop rbp ; ret
0x0000000000405f3c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000404849 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000402704 : add byte ptr [rbx - 0x76b7238b], cl ; ret 0xb0
0x0000000000402779 : add byte ptr [rbx - 0x76b7278b], cl ; ret 0xb0
0x0000000000406a9f : add byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x9588
0x0000000000413663 : add byte ptr [rcx + rbx], al ; add byte ptr [rax], al ; cwde ; mov ah, -1 ; jmp rax
0x000000000040a90a : add byte ptr [rcx - 0xfff43], al ; jmp qword ptr [rsi]
0x0000000000401c08 : add byte ptr [rcx], al ; ret
0x0000000000412483 : add byte ptr [rdi + rax], ah ; add byte ptr [rax], al ; cwde ; xor bh, bh ; jmp qword ptr [rdi]
0x000000000040594a : add byte ptr [rdi], cl ; mov bh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406aa5 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x9588
0x0000000000409529 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x00000000004053f0 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040949e : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf280
0x0000000000413783 : add byte ptr [rdx + rbx], ah ; add byte ptr [rax], al ; call 0x28413750
0x000000000040bb3d : add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x0000000000411884 : add byte ptr [rsi - 1], cl ; call rax
0x0000000000402bb3 : add byte ptr fs:[rax], al ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x000000000040d93c : add dword ptr [rax + 0xf], eax ; mov dh, -0x39 ; pop rbp ; ret
0x0000000000404ad8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406eb5 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405f3a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000404847 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040b665 : add dword ptr [rdi], ecx ; mov dh, -0x3f ; pop rbp ; ret
0x0000000000407623 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040b636 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040278f : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000409ca1 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004067d9 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x000000000040a754 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x5588
0x0000000000401c04 : add eax, 0x21272e ; add ebx, esi ; ret
0x000000000040bd24 : add eax, 0xe8000000 ; ret
0x00000000004095a2 : add eax, 0xf000000 ; xchg eax, esp ; ret 0x9588
0x00000000004120e5 : add eax, dword ptr [rax] ; add byte ptr [rax], ch ; sub edi, edi ; call rdx
0x000000000040ea56 : add eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040bccc : add eax, ecx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401bcb : add eax, edx ; sar rax, 1 ; jne 0x401bdc ; pop rbp ; ret
0x0000000000401c09 : add ebx, esi ; ret
0x0000000000401e2b : add esp, 0x10 ; pop rbp ; ret
0x000000000040aa97 : add esp, 0x1010 ; pop rbp ; ret
0x00000000004098c5 : add esp, 0x110 ; pop rbp ; ret
0x000000000040e13c : add esp, 0x130 ; pop rbp ; ret
0x0000000000404844 : add esp, 0x138 ; pop rbx ; pop rbp ; ret
0x000000000040622c : add esp, 0x1a0 ; pop rbp ; ret
0x000000000040b86f : add esp, 0x1b0 ; pop rbp ; ret
0x000000000040ef8e : add esp, 0x1e0 ; pop rbp ; ret
0x00000000004034d0 : add esp, 0x20 ; pop rbp ; ret
0x0000000000401f3d : add esp, 0x30 ; pop rbp ; ret
0x000000000040799d : add esp, 0x40 ; pop rbp ; ret
0x0000000000404ebc : add esp, 0x50 ; pop rbp ; ret
0x000000000040d287 : add esp, 0x60 ; pop rbp ; ret
0x0000000000403953 : add esp, 0x70 ; pop rbp ; ret
0x00000000004049fe : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000403266 : add esp, 0x80 ; pop rbp ; ret
0x0000000000402f8a : add esp, 0x90 ; pop rbp ; ret
0x0000000000405478 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040d0ac : add esp, 0xc0 ; pop rbp ; ret
0x0000000000402ce6 : add esp, 0xd0 ; pop rbp ; ret
0x00000000004089fb : add esp, 0xe0 ; pop rbp ; ret
0x00000000004016b6 : add esp, 8 ; ret
0x000000000040ea55 : add rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040bccb : add rax, rcx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401bca : add rax, rdx ; sar rax, 1 ; jne 0x401bdd ; pop rbp ; ret
0x0000000000401e2a : add rsp, 0x10 ; pop rbp ; ret
0x000000000040aa96 : add rsp, 0x1010 ; pop rbp ; ret
0x00000000004098c4 : add rsp, 0x110 ; pop rbp ; ret
0x000000000040e13b : add rsp, 0x130 ; pop rbp ; ret
0x0000000000404843 : add rsp, 0x138 ; pop rbx ; pop rbp ; ret
0x000000000040622b : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000040b86e : add rsp, 0x1b0 ; pop rbp ; ret
0x000000000040ef8d : add rsp, 0x1e0 ; pop rbp ; ret
0x00000000004034cf : add rsp, 0x20 ; pop rbp ; ret
0x0000000000401f3c : add rsp, 0x30 ; pop rbp ; ret
0x000000000040799c : add rsp, 0x40 ; pop rbp ; ret
0x0000000000404ebb : add rsp, 0x50 ; pop rbp ; ret
0x000000000040d286 : add rsp, 0x60 ; pop rbp ; ret
0x0000000000403952 : add rsp, 0x70 ; pop rbp ; ret
0x00000000004049fd : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000403265 : add rsp, 0x80 ; pop rbp ; ret
0x0000000000402f89 : add rsp, 0x90 ; pop rbp ; ret
0x0000000000405477 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040d0ab : add rsp, 0xc0 ; pop rbp ; ret
0x0000000000402ce5 : add rsp, 0xd0 ; pop rbp ; ret
0x00000000004089fa : add rsp, 0xe0 ; pop rbp ; ret
0x00000000004016b5 : add rsp, 8 ; ret
0x0000000000411d14 : and ah, 0xff ; jmp qword ptr [rax]
0x0000000000413784 : and al, 0x1a ; add byte ptr [rax], al ; call 0x2841374f
0x00000000004067d8 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000412484 : and al, 7 ; add byte ptr [rax], al ; cwde ; xor bh, bh ; jmp qword ptr [rdi]
0x000000000040d93a : and bh, 1 ; movzx eax, dil ; pop rbp ; ret
0x0000000000411655 : and bh, bh ; call qword ptr [rax]
0x0000000000411854 : and byte ptr [rdx - 1], cl ; call qword ptr [rax]
0x0000000000411cc4 : and cl, 0xff ; call rax
0x000000000040b663 : and cl, 1 ; movzx eax, cl ; pop rbp ; ret
0x000000000040d939 : and dil, 1 ; movzx eax, dil ; pop rbp ; ret
0x0000000000411c51 : and dword ptr [rax], eax ; add byte ptr [rax], dh ; fdivp st(7) ; call qword ptr [rax]
0x0000000000401c07 : and dword ptr [rax], eax ; add ebx, esi ; ret
0x000000000040c0a5 : and eax, 0x411450 ; mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x0000000000404e07 : and eax, 0x48fffffd ; add esp, 0x20 ; pop rbp ; ret
0x000000000040327f : and eax, 0x614390 ; pop rbp ; ret
0x00000000004032a3 : and eax, 0x614398 ; pop rbp ; ret
0x0000000000411685 : and edi, edi ; call rax
0x0000000000413788 : call 0x2841374b
0x000000000040548c : call 0x401702
0x00000000004020db : call 0xffffffff8085aa39
0x0000000000404879 : call 0xffffffffe902d1c9
0x0000000000404878 : call 0xffffffffe902d1ca
0x000000000040c591 : call 0xffffffffff7a50e2
0x000000000040c590 : call 0xffffffffff7a50e3
0x000000000040c6cf : call 0xffffffffff7a5220
0x000000000040c6ce : call 0xffffffffff7a5221
0x000000000040f9c9 : call qword ptr [r12 + rbx*8]
0x0000000000411b57 : call qword ptr [rax]
0x0000000000412c2b : call qword ptr [rcx]
0x0000000000412feb : call qword ptr [rdx]
0x0000000000411eeb : call qword ptr [rsi]
0x000000000040f9ca : call qword ptr [rsp + rbx*8]
0x0000000000401c2d : call rax
0x000000000041310b : call rbx
0x00000000004135ab : call rdi
0x00000000004120eb : call rdx
0x000000000041312b : call rsp
0x0000000000405510 : clc ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004098c3 : clc ; add rsp, 0x110 ; pop rbp ; ret
0x000000000040e13a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x000000000040642f : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405401 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040a1ab : clc ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000407556 : clc ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040d285 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004085dc : clc ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040f2ab : clc ; add rsp, 0x80 ; pop rbp ; ret
0x0000000000406e39 : clc ; add rsp, 0x90 ; pop rbp ; ret
0x0000000000405476 : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x000000000040d796 : clc ; add rsp, 0xc0 ; pop rbp ; ret
0x000000000040548b : clc ; call 0x401703
0x0000000000401bcf : clc ; jne 0x401bd8 ; pop rbp ; ret
0x000000000040da6c : clc ; mov byte ptr [rax + 0x1c], 0 ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000403805 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040d9b1 : clc ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x000000000040a35e : clc ; mov dword ptr [rcx + 0x18], eax ; pop rbp ; ret
0x0000000000409ec5 : clc ; mov dword ptr [rcx + 0x2c], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b527 : clc ; mov dword ptr [rdi + 0x18], 0x95f616 ; pop rbp ; ret
0x000000000040e9ab : clc ; mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x000000000040f91b : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040d7ce : clc ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000402687 : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040b88b : clc ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040b8ab : clc ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040b8cb : clc ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000040268b : clc ; pop rbp ; ret
0x0000000000401e57 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040aa95 : cld ; add rsp, 0x1010 ; pop rbp ; ret
0x0000000000409f52 : cld ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b360 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040799b : cld ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040e990 : cld ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000403264 : cld ; add rsp, 0x80 ; pop rbp ; ret
0x0000000000402f88 : cld ; add rsp, 0x90 ; pop rbp ; ret
0x000000000040d0aa : cld ; add rsp, 0xc0 ; pop rbp ; ret
0x00000000004089f9 : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x00000000004054ba : cld ; call 0x401703
0x000000000040f918 : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040e4cf : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040e5ab : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b35d : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004054e6 : cld ; pop rbp ; ret
0x0000000000411745 : cmp al, -1 ; call rax
0x00000000004028af : cmp al, 0x25 ; ret
0x00000000004116c5 : cmp bh, bh ; call rax
0x0000000000404846 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040bfaa : cmp dword ptr [rax - 0x75], ecx ; jne 0x40bf94 ; call rax
0x0000000000401b8d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401ba0 ; pop rbp ; ret
0x00000000004116d5 : cmp edi, edi ; call qword ptr [rax]
0x0000000000413668 : cwde ; mov ah, -1 ; jmp rax
0x0000000000412fe8 : cwde ; mov bh, bh ; call qword ptr [rdx]
0x0000000000405a7c : cwde ; mov rcx, qword ptr [rax*8 + 0x410ed8] ; jmp rcx
0x0000000000412488 : cwde ; xor bh, bh ; jmp qword ptr [rdi]
0x000000000040e09f : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000040a5f0 : div dword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000040a5ef : div qword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000040492b : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000040bfa7 : enter -0x74b8, 0x39 ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x000000000040a2f7 : enter 0x4112, 0 ; jmp rcx
0x000000000040a75c : fbld dword ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000040a75d : fbld dword ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x0000000000411c55 : fdivp st(7) ; call qword ptr [rax]
0x0000000000404263 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040277c : fmul dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000402707 : fmul qword ptr [rax - 0x77] ; ret 0xb0
0x000000000040f9cc : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000401e29 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004099d6 : hlt ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040d9ad : hlt ; mov rcx, qword ptr [rbp - 8] ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x0000000000401ba0 : hlt ; pop rbp ; mov edi, 0x6142d0 ; jmp rax
0x0000000000411d15 : in al, -1 ; jmp qword ptr [rax]
0x0000000000412644 : in al, 8 ; add byte ptr [rax], al ; pop rax ; xor edi, edi ; jmp qword ptr [rdi]
0x0000000000405486 : in al, dx ; adc byte ptr [rax - 0x77], cl ; jge 0x40548c ; call 0x401708
0x00000000004054b6 : in al, dx ; adc byte ptr [rcx + 0x40e8fc7d], cl ; ret 0xffff
0x000000000040a5bd : in al, dx ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000040e483 : in al, dx ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040a5c0 : in al, dx ; pop rbp ; ret
0x00000000004054e3 : in eax, -0x77 ; jge 0x4054e8 ; pop rbp ; ret
0x00000000004056a3 : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x0000000000406080 : int 0x80
0x0000000000401b93 : ja 0x401b9a ; pop rbp ; ret
0x000000000040d7d1 : ja 0x40d81e ; pop rbp ; ret
0x00000000004002d6 : jbe 0x40027d ; xchg al, dh ; xchg eax, esi ; jl 0x400326 ; ret
0x0000000000401b9f : je 0x401b9d ; pop rbp ; mov edi, 0x6142d0 ; jmp rax
0x0000000000402686 : jge 0x402687 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040548a : jge 0x405488 ; call 0x401704
0x00000000004054b9 : jge 0x4054bb ; call 0x401704
0x00000000004054e5 : jge 0x4054e6 ; pop rbp ; ret
0x00000000004056a6 : jge 0x4056a3 ; pop rbp ; ret
0x000000000040b88a : jge 0x40b88b ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040b8aa : jge 0x40b8ab ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040b8ca : jge 0x40b8cb ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000040bc20 : jge 0x40bc13 ; mov rcx, qword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040d130 : jge 0x40d123 ; mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040d7cd : jge 0x40d7ce ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040e9aa : jge 0x40e9ad ; mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x00000000004002db : jl 0x400321 ; ret
0x00000000004017cb : jmp 0x4016c7
0x00000000004028a8 : jmp 0x402908
0x0000000000402bb2 : jmp 0x402c24
0x000000000040d311 : jmp 0x40d314
0x000000000040c430 : jmp 0x49034d80
0x000000000040ce6e : jmp 0x490357be
0x000000000040cedb : jmp 0x4903582b
0x000000000040d612 : jmp 0x49035f62
0x000000000040d67f : jmp 0x49035fcf
0x0000000000411d17 : jmp qword ptr [rax]
0x0000000000412f6b : jmp qword ptr [rcx]
0x000000000041246b : jmp qword ptr [rdi]
0x000000000041216b : jmp qword ptr [rdx]
0x000000000040a910 : jmp qword ptr [rsi]
0x0000000000401ba7 : jmp rax
0x0000000000402118 : jmp rcx
0x0000000000401be7 : jmp rdx
0x0000000000401bd0 : jne 0x401bd7 ; pop rbp ; ret
0x000000000040a1f9 : jne 0x40a1dc ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x000000000040a5f1 : jne 0x40a5e9 ; mov rax, rdx ; pop rbp ; ret
0x000000000040a702 : jne 0x40a6fa ; mov rax, rdx ; pop rbp ; ret
0x000000000040bc96 : jne 0x40bc81 ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000040bfad : jne 0x40bf91 ; call rax
0x0000000000411955 : jno 0x411958 ; call qword ptr [rax]
0x0000000000403955 : jo 0x4039b6 ; ret
0x0000000000405064 : jo 0x4050c5 ; ret
0x000000000040519e : jo 0x4051ff ; ret
0x00000000004085e0 : jo 0x408641 ; ret
0x000000000040959f : jo 0x40952b ; stc ; add eax, 0xf000000 ; xchg eax, esp ; ret 0x9588
0x000000000040e994 : jo 0x40e9f5 ; ret
0x0000000000404a00 : js 0x404a60 ; pop rbp ; ret
0x0000000000411c50 : lock and dword ptr [rax], eax ; add byte ptr [rax], dh ; fdivp st(7) ; call qword ptr [rax]
0x0000000000411610 : lock or byte ptr [rax], al ; add al, dh ; sbb edi, edi ; call qword ptr [rax]
0x0000000000411650 : lock or dword ptr [rax], eax ; add al, ah ; and bh, bh ; call qword ptr [rax]
0x000000000040f329 : loop 0x40f37b ; or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x000000000040f411 : loop 0x40f463 ; or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x0000000000411cd5 : loop 0x411cd8 ; call qword ptr [rax]
0x000000000040b664 : loope 0x40b66d ; movzx eax, cl ; pop rbp ; ret
0x0000000000411cc5 : loope 0x411cc8 ; call rax
0x000000000040672b : loopne 0x40677b ; add esp, 0x20 ; pop rbp ; ret
0x000000000040672a : loopne 0x40677c ; add esp, 0x20 ; pop rbp ; ret
0x00000000004089fd : loopne 0x408a04 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040bc97 : loopne 0x40bce9 ; mov esi, eax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000040ef90 : loopne 0x40ef98 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000411c95 : loopne 0x411c98 ; call qword ptr [rax]
0x0000000000413669 : mov ah, -1 ; jmp rax
0x000000000040bb9e : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004135a9 : mov al, -1 ; call rdi
0x0000000000411880 : mov al, 0x12 ; add byte ptr [rax], al ; add byte ptr [rsi - 1], cl ; call rax
0x0000000000411980 : mov al, 0x16 ; add byte ptr [rax], al ; push rax ; mov bh, bh ; call rax
0x0000000000411c40 : mov al, 0x21 ; add byte ptr [rax], al ; rcr ch, -1 ; call rax
0x0000000000411cc0 : mov al, 0x23 ; add byte ptr [rax], al ; and cl, 0xff ; call rax
0x0000000000404f3b : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000404dcb : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x000000000040b871 : mov al, 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004067d5 : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040a75b : mov al, byte ptr [rbp - 0x21] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040ba85 : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040f546 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040d9cc : mov al, byte ptr [rdi + 0x1c] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040f4cf : mov al, dh ; movzx eax, al ; pop rbp ; ret
0x000000000040f4ce : mov al, sil ; movzx eax, al ; pop rbp ; ret
0x000000000040f44f : mov ax, si ; movzx eax, ax ; pop rbp ; ret
0x000000000040594c : mov bh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040f453 : mov bh, -0x40 ; pop rbp ; ret
0x0000000000412fe9 : mov bh, bh ; call qword ptr [rdx]
0x0000000000411985 : mov bh, bh ; call rax
0x00000000004032a1 : mov byte ptr [0x614398], al ; pop rbp ; ret
0x000000000040da6d : mov byte ptr [rax + 0x1c], 0 ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000401c03 : mov byte ptr [rip + 0x21272e], 1 ; ret
0x000000000040d93f : mov dh, -0x39 ; pop rbp ; ret
0x000000000040b667 : mov dh, -0x3f ; pop rbp ; ret
0x0000000000407625 : mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040b638 : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402791 : mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000409ca3 : mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004067db : mov dh, -0x40 ; pop rbp ; ret
0x0000000000411b15 : mov dh, -1 ; call qword ptr [rax]
0x0000000000411b05 : mov dl, -1 ; call rax
0x000000000040327d : mov dword ptr [0x614390], edi ; pop rbp ; ret
0x0000000000403806 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000403714 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004037c8 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040a5bb : mov dword ptr [rbp - 0x14], eax ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000401f39 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040bb9c : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401e27 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401e55 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004054b8 : mov dword ptr [rbp - 4], edi ; call 0x401705
0x00000000004054e4 : mov dword ptr [rbp - 4], edi ; pop rbp ; ret
0x000000000040f919 : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040bf2b : mov dword ptr [rbp - 8], eax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000405489 : mov dword ptr [rbp - 8], edi ; call 0x401705
0x0000000000402685 : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004056a5 : mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x000000000040d9b2 : mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x000000000040a35f : mov dword ptr [rcx + 0x18], eax ; pop rbp ; ret
0x0000000000409ec6 : mov dword ptr [rcx + 0x2c], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040387e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000409ae8 : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040c0aa : mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x000000000040b528 : mov dword ptr [rdi + 0x18], 0x95f616 ; pop rbp ; ret
0x000000000040d7d0 : mov dword ptr [rdi + 0x48], esi ; pop rbp ; ret
0x000000000040e9ac : mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x00000000004049fc : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x00000000004036c8 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040634b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004034cc : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004036c5 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040344f : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040a5be : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x00000000004065e3 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040367d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040370e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040b98f : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000406729 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040bc9c : mov eax, dword ptr [rbp - 0x20] ; call rax
0x000000000040d38f : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040a1ff : mov eax, dword ptr [rbp - 0x28] ; call rax
0x00000000004037ca : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040394f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004049fa : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000404f39 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040db12 : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004099d4 : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040e4d0 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000409f50 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b35e : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000407999 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040e98e : mov eax, dword ptr [rbp - 4] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040d85b : mov eax, dword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040642d : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004053ff : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040a1a9 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000407554 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040d283 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004085da : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000402689 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040b88d : mov eax, dword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040b8ad : mov eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040b8cd : mov eax, dword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000040549c : mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040550f : mov eax, edi ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040f2ee : mov eax, edi ; pop rbp ; ret
0x000000000040591b : mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040a5f4 : mov eax, edx ; pop rbp ; ret
0x0000000000405733 : mov eax, esi ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040f450 : mov eax, esi ; movzx eax, ax ; pop rbp ; ret
0x000000000040f363 : mov eax, esi ; pop rbp ; ret
0x0000000000401c2b : mov ebp, esp ; call rax
0x0000000000401b91 : mov ebp, esp ; ja 0x401b9c ; pop rbp ; ret
0x00000000004054e2 : mov ebp, esp ; mov dword ptr [rbp - 4], edi ; pop rbp ; ret
0x00000000004056a2 : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000040ea73 : mov ecx, 0x48ffff2f ; add esp, 0x10 ; pop rbp ; ret
0x0000000000402140 : mov ecx, dword ptr [rax*8 + 0x40fa90] ; jmp rcx
0x0000000000402111 : mov ecx, dword ptr [rax*8 + 0x40fab0] ; jmp rcx
0x00000000004027f8 : mov ecx, dword ptr [rax*8 + 0x40fb38] ; jmp rcx
0x0000000000403a07 : mov ecx, dword ptr [rax*8 + 0x4109d0] ; jmp rcx
0x0000000000403ce7 : mov ecx, dword ptr [rax*8 + 0x410a18] ; jmp rcx
0x0000000000405a7e : mov ecx, dword ptr [rax*8 + 0x410ed8] ; jmp rcx
0x000000000040a2f4 : mov ecx, dword ptr [rax*8 + 0x4112c8] ; jmp rcx
0x0000000000403711 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040c5f2 : mov ecx, dword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040c58f : mov ecx, dword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040bc23 : mov ecx, dword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040d133 : mov ecx, dword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040d9af : mov ecx, dword ptr [rbp - 8] ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x000000000040a35c : mov ecx, dword ptr [rbp - 8] ; mov dword ptr [rcx + 0x18], eax ; pop rbp ; ret
0x000000000040d200 : mov ecx, dword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040f38d : mov ecx, eax ; shl edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000040f35d : mov ecx, eax ; shr edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000401c25 : mov edi, 0x613e20 ; mov rbp, rsp ; call rax
0x0000000000401ba2 : mov edi, 0x6142d0 ; jmp rax
0x0000000000401be2 : mov edi, 0x6142d0 ; jmp rdx
0x0000000000413109 : mov edi, dr1 ; call rbx
0x000000000040d7cc : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040b889 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040b8a9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040b8c9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000040c593 : mov edi, dword ptr [rcx] ; call rax
0x000000000040bfa9 : mov edi, dword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x000000000040f9c7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000411995 : mov edi, edi ; call qword ptr [rax]
0x000000000040f9c6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x00000000004079fa : mov esi, 0x48ffffff ; add esp, 0x10 ; pop rbp ; ret
0x000000000040c072 : mov esi, 0x48ffffff ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040bfac : mov esi, dword ptr [rbp - 0x20] ; call rax
0x000000000040bc27 : mov esi, dword ptr [rcx] ; call rax
0x0000000000401be0 : mov esi, eax ; mov edi, 0x6142d0 ; jmp rdx
0x000000000040bc99 : mov esi, eax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000040a1fc : mov esi, eax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x000000000040327c : mov qword ptr [0x614390], rdi ; pop rbp ; ret
0x000000000040bf2a : mov qword ptr [rbp - 8], rax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000405488 : mov qword ptr [rbp - 8], rdi ; call 0x401706
0x0000000000402684 : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004056a4 : mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000040387d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000409ae7 : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040d7cf : mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040bb9d : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000404f3a : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004049fb : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x000000000040634a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004034cb : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004036c4 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040344e : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004065e2 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040367c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040b98e : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000406728 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040bc9b : mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000040d38e : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040a1fe : mov rax, qword ptr [rbp - 0x28] ; call rax
0x000000000040394e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000404f38 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040d85a : mov rax, qword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040642c : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004053fe : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040a1a8 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000407553 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040d282 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004085d9 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000402688 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040b88c : mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040b8ac : mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040b8cc : mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x00000000004054d0 : mov rax, rcx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040f2ed : mov rax, rdi ; pop rbp ; ret
0x000000000040c290 : mov rax, rdx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040a5f3 : mov rax, rdx ; pop rbp ; ret
0x0000000000401c2a : mov rbp, rsp ; call rax
0x0000000000401b90 : mov rbp, rsp ; ja 0x401b9d ; pop rbp ; ret
0x00000000004054e1 : mov rbp, rsp ; mov dword ptr [rbp - 4], edi ; pop rbp ; ret
0x00000000004056a1 : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000040213f : mov rcx, qword ptr [rax*8 + 0x40fa90] ; jmp rcx
0x0000000000402110 : mov rcx, qword ptr [rax*8 + 0x40fab0] ; jmp rcx
0x00000000004027f7 : mov rcx, qword ptr [rax*8 + 0x40fb38] ; jmp rcx
0x0000000000403a06 : mov rcx, qword ptr [rax*8 + 0x4109d0] ; jmp rcx
0x0000000000403ce6 : mov rcx, qword ptr [rax*8 + 0x410a18] ; jmp rcx
0x0000000000405a7d : mov rcx, qword ptr [rax*8 + 0x410ed8] ; jmp rcx
0x000000000040a2f3 : mov rcx, qword ptr [rax*8 + 0x4112c8] ; jmp rcx
0x000000000040c5f1 : mov rcx, qword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040c58e : mov rcx, qword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040bc22 : mov rcx, qword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040d132 : mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040d9ae : mov rcx, qword ptr [rbp - 8] ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x000000000040a35b : mov rcx, qword ptr [rbp - 8] ; mov dword ptr [rcx + 0x18], eax ; pop rbp ; ret
0x000000000040d1ff : mov rcx, qword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040d7cb : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040b888 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040b8a8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040b8c8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000040c592 : mov rdi, qword ptr [rcx] ; call rax
0x000000000040bfa8 : mov rdi, qword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x000000000040bfab : mov rsi, qword ptr [rbp - 0x20] ; call rax
0x000000000040bc26 : mov rsi, qword ptr [rcx] ; call rax
0x0000000000401bdf : mov rsi, rax ; mov edi, 0x6142d0 ; jmp rdx
0x000000000040bc98 : mov rsi, rax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000040a1fb : mov rsi, rax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x000000000040e53b : movabs eax, dword ptr [0x5d10c48348000006] ; ret
0x000000000040b43b : movabs eax, dword ptr [0x5d10c48348000037] ; ret
0x0000000000407624 : movzx eax, al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040b637 : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402790 : movzx eax, al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000409ca2 : movzx eax, al ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004067da : movzx eax, al ; pop rbp ; ret
0x000000000040f452 : movzx eax, ax ; pop rbp ; ret
0x000000000040d93e : movzx eax, bh ; pop rbp ; ret
0x000000000040b666 : movzx eax, cl ; pop rbp ; ret
0x000000000040594b : movzx eax, cx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040d93d : movzx eax, dil ; pop rbp ; ret
0x0000000000407370 : movzx eax, word ptr [rbp - 2] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000411954 : nop ; jno 0x411959 ; call qword ptr [rax]
0x0000000000411cd4 : nop ; loop 0x411cd9 ; call qword ptr [rax]
0x000000000040f9e8 : nop dword ptr [rax + rax] ; ret
0x0000000000411701 : or al, 0 ; add al, dh ; cmp bh, bh ; call rax
0x000000000040a2f5 : or al, 0xffffffffffffffc5 ; enter 0x4112, 0 ; jmp rcx
0x0000000000411691 : or al, byte ptr [rax] ; add al, ah ; xor bh, bh ; call qword ptr [rax]
0x0000000000403ceb : or al, byte ptr [rcx] ; jmp rcx
0x00000000004115d5 : or bh, bh ; call qword ptr [rax]
0x00000000004020de : or byte ptr [r15], 0x84 ; ret 0
0x000000000040425e : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040425f : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000411601 : or byte ptr [rax], al ; add al, dh ; adc edi, edi ; call rax
0x0000000000411611 : or byte ptr [rax], al ; add al, dh ; sbb edi, edi ; call qword ptr [rax]
0x00000000004020df : or byte ptr [rdi], 0x84 ; ret 0
0x00000000004115d4 : or dil, dil ; call qword ptr [rax]
0x0000000000411651 : or dword ptr [rax], eax ; add al, ah ; and bh, bh ; call qword ptr [rax]
0x0000000000403a0b : or dword ptr [rcx], eax ; jmp rcx
0x00000000004116d1 : or eax, dword ptr [rax] ; add byte ptr [rax], ah ; cmp edi, edi ; call qword ptr [rax]
0x0000000000405121 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040f2eb : or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x000000000040f361 : or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000040f2ea : or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x000000000040d93b : out 1, eax ; movzx eax, dil ; pop rbp ; ret
0x00000000004067d7 : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040f360 : out dx, eax ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000040bb29 : outsb dx, byte ptr [rsi] ; ret 0x280f
0x000000000040548d : outsd dx, dword ptr [rsi] ; ret 0xffff
0x000000000040f9dc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040f9de : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405f3e : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040f9e0 : pop r14 ; pop r15 ; ret
0x0000000000405f40 : pop r15 ; pop rbp ; ret
0x000000000040f9e2 : pop r15 ; ret
0x0000000000411e08 : pop rax ; add bh, bh ; jmp rdx
0x0000000000412648 : pop rax ; xor edi, edi ; jmp qword ptr [rdi]
0x0000000000401c02 : pop rbp ; mov byte ptr [rip + 0x21272e], 1 ; ret
0x0000000000401ba1 : pop rbp ; mov edi, 0x6142d0 ; jmp rax
0x0000000000401bde : pop rbp ; mov rsi, rax ; mov edi, 0x6142d0 ; jmp rdx
0x000000000040f9db : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040f9df : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401b95 : pop rbp ; ret
0x0000000000405f3d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040484a : pop rbx ; pop rbp ; ret
0x0000000000405f41 : pop rdi ; pop rbp ; ret
0x000000000040f9e3 : pop rdi ; ret
0x0000000000405f3f : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040f9e1 : pop rsi ; pop r15 ; ret
0x000000000040f9dd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040bb40 : pop rsp ; ret 0xf66
0x0000000000411aff : push qword ptr [rax + 0x3000001c] ; mov dl, -1 ; call rax
0x000000000041197f : push qword ptr [rax + 0x50000016] ; mov bh, bh ; call rax
0x000000000041167f : push qword ptr [rax - 0x4ffffff6] ; and edi, edi ; call rax
0x00000000004116bf : push qword ptr [rax - 0x5ffffff5] ; cmp bh, bh ; call rax
0x0000000000411cbf : push qword ptr [rax - 0x7fffffdd] ; loope 0x411cce ; call rax
0x000000000041173f : push qword ptr [rax - 0xffffff3] ; cmp al, -1 ; call rax
0x00000000004116ff : push qword ptr [rax - 0xffffff4] ; cmp bh, bh ; call rax
0x00000000004115ff : push qword ptr [rax - 0xffffff8] ; adc edi, edi ; call rax
0x0000000000411c4f : push rax ; and dword ptr [rax], eax ; add byte ptr [rax], dh ; fdivp st(7) ; call qword ptr [rax]
0x00000000004002d5 : push rax ; jbe 0x40027e ; xchg al, dh ; xchg eax, esi ; jl 0x400327 ; ret
0x0000000000411c94 : push rax ; loopne 0x411c99 ; call qword ptr [rax]
0x0000000000411984 : push rax ; mov bh, bh ; call rax
0x0000000000411b14 : push rax ; mov dh, -1 ; call qword ptr [rax]
0x000000000041168f : push rax ; or al, byte ptr [rax] ; add al, ah ; xor bh, bh ; call qword ptr [rax]
0x000000000041160f : push rax ; or byte ptr [rax], al ; add al, dh ; sbb edi, edi ; call qword ptr [rax]
0x000000000041164f : push rax ; or dword ptr [rax], eax ; add al, ah ; and bh, bh ; call qword ptr [rax]
0x00000000004116cf : push rax ; or eax, dword ptr [rax] ; add byte ptr [rax], ah ; cmp edi, edi ; call qword ptr [rax]
0x0000000000404ebe : push rax ; pop rbp ; ret
0x00000000004117cf : push rax ; sldt word ptr [rax] ; xor byte ptr [rcx - 1], al ; call qword ptr [rax]
0x0000000000404262 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000401c24 : push rbp ; mov edi, 0x613e20 ; mov rbp, rsp ; call rax
0x00000000004054e0 : push rbp ; mov rbp, rsp ; mov dword ptr [rbp - 4], edi ; pop rbp ; ret
0x00000000004056a0 : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000040dd2d : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000040492e : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x00000000004028a9 : push rdx ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x000000000040f35e : rcl ebx, -0x11 ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000040f38e : rcl ebx, -0x19 ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000411c44 : rcr ch, -1 ; call rax
0x00000000004002dd : ret
0x00000000004020e2 : ret 0
0x0000000000406fba : ret 0x110
0x0000000000402eda : ret 0x20e8
0x00000000004019d2 : ret 0x2127
0x00000000004017d2 : ret 0x2128
0x000000000040bb2a : ret 0x280f
0x000000000040739a : ret 0x3948
0x000000000040b05a : ret 0x40
0x000000000040a757 : ret 0x5588
0x0000000000407696 : ret 0x5589
0x00000000004099c7 : ret 0x60
0x000000000040c433 : ret 0x8348
0x0000000000405a39 : ret 0x8844
0x00000000004064b2 : ret 0x8948
0x000000000040438d : ret 0x89a5
0x0000000000404266 : ret 0x8b48
0x0000000000406aa8 : ret 0x9588
0x0000000000402ea9 : ret 0xa1e8
0x00000000004022df : ret 0xb0
0x000000000040c4b6 : ret 0xb948
0x0000000000401bc5 : ret 0xc148
0x00000000004053f3 : ret 0xd284
0x000000000040487c : ret 0xee8
0x000000000040427b : ret 0xefe8
0x00000000004094a1 : ret 0xf280
0x000000000040bb41 : ret 0xf66
0x000000000040ce80 : ret 0xff3
0x000000000040548e : ret 0xffff
0x0000000000404b9e : ret 1
0x000000000040e6db : ret 3
0x0000000000404932 : ret 8
0x0000000000402ce8 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000411b54 : rol dl, -1 ; call qword ptr [rax]
0x000000000040b662 : rol dword ptr [rax - 0x49f0fe1f], -0x3f ; pop rbp ; ret
0x000000000040607b : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000403950 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x4039bb ; ret
0x0000000000401bcc : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401bdb ; pop rbp ; ret
0x000000000040607c : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000403951 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x4039ba ; ret
0x0000000000409ca4 : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x0000000000402ce4 : ror byte ptr [rax - 0x7f], -0x3c ; rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040dd2e : ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000040492f : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000040a5ba : ror dword ptr [rcx + 0x458bec45], -0x14 ; pop rbp ; ret
0x00000000004002d7 : sahf ; xchg al, dh ; xchg eax, esi ; jl 0x400325 ; ret
0x0000000000401bce : sar eax, 1 ; jne 0x401bd9 ; pop rbp ; ret
0x0000000000411bd5 : sar edi, cl ; call qword ptr [rax]
0x0000000000401bcd : sar rax, 1 ; jne 0x401bda ; pop rbp ; ret
0x0000000000411b01 : sbb al, 0 ; add byte ptr [rax], dh ; mov dl, -1 ; call rax
0x000000000040da6f : sbb al, 0 ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000040d9ce : sbb al, 0x24 ; add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004135a5 : sbb byte ptr [rax], al ; add byte ptr [rax], bl ; mov al, -1 ; call rdi
0x00000000004135a4 : sbb byte ptr [rax], r8b ; add byte ptr [rax], bl ; mov al, -1 ; call rdi
0x0000000000411615 : sbb edi, edi ; call qword ptr [rax]
0x000000000040a62a : sete al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040a62c : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000040bb5f : shl dword ptr [rsi + 0xf], 0x5c ; ret 0xf66
0x000000000040f38f : shl edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000040f328 : shl edx, cl ; or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x000000000040f35f : shr edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000040f2e8 : shr edx, cl ; or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x00000000004117d1 : sldt word ptr [rax] ; xor byte ptr [rcx - 1], al ; call qword ptr [rax]
0x00000000004095a1 : stc ; add eax, 0xf000000 ; xchg eax, esp ; ret 0x9588
0x000000000040f548 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000412169 : sub al, -1 ; jmp qword ptr [rdx]
0x0000000000409ec8 : sub al, 0x48 ; add esp, 0x20 ; pop rbp ; ret
0x00000000004120e9 : sub edi, edi ; call rdx
0x00000000004054b5 : sub esp, 0x10 ; mov dword ptr [rbp - 4], edi ; call 0x401708
0x0000000000405485 : sub esp, 0x10 ; mov qword ptr [rbp - 8], rdi ; call 0x401709
0x000000000040fa69 : sub esp, 8 ; add rsp, 8 ; ret
0x00000000004054b4 : sub rsp, 0x10 ; mov dword ptr [rbp - 4], edi ; call 0x401709
0x000000000040fa68 : sub rsp, 8 ; add rsp, 8 ; ret
0x00000000004020d9 : test al, -0x7d ; call 0xffffffff8085aa3b
0x00000000004070de : test al, 0 ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040f9ea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000412fe4 : test byte ptr [rdx], dl ; add byte ptr [rax], al ; cwde ; mov bh, bh ; call qword ptr [rdx]
0x0000000000412f69 : test edi, edi ; jmp qword ptr [rcx]
0x000000000040a2f6 : vmovlps xmm0, xmm6, qword ptr [rcx] ; jmp rcx
0x00000000004002d8 : xchg al, dh ; xchg eax, esi ; jl 0x400324 ; ret
0x0000000000406aa7 : xchg eax, ebp ; ret 0x9588
0x00000000004002da : xchg eax, esi ; jl 0x400322 ; ret
0x000000000040a756 : xchg eax, esp ; ret 0x5588
0x000000000040952b : xchg eax, esp ; ret 0x9588
0x00000000004053f2 : xchg eax, esp ; ret 0xd284
0x00000000004094a0 : xchg eax, esp ; ret 0xf280
0x000000000040b661 : xchg eax, esp ; rol dword ptr [rax - 0x49f0fe1f], -0x3f ; pop rbp ; ret
0x000000000040a62b : xchg eax, esp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000040f2ec : xlatb ; mov rax, rdi ; pop rbp ; ret
0x0000000000411695 : xor bh, bh ; call qword ptr [rax]
0x0000000000412469 : xor bh, bh ; jmp qword ptr [rdi]
0x00000000004117d4 : xor byte ptr [rcx - 1], al ; call qword ptr [rax]
0x000000000040e13e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000412649 : xor edi, edi ; jmp qword ptr [rdi]
0x00000000004037c6 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
