0x0000000000402fb9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040552f : add bl, dh ; ret
0x0000000000404dd1 : add byte ptr [rax - 0x75], cl ; jge 0x404dbd ; call 0x401057
0x0000000000404e32 : add byte ptr [rax - 0x75], cl ; jge 0x404e2e ; call 0x4010e7
0x0000000000404fe0 : add byte ptr [rax - 0x75], cl ; jge 0x404fdc ; call 0x401247
0x0000000000403f98 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x00000000004064ef : add byte ptr [rax], ah ; mov dl, -1 ; call qword ptr [rsi]
0x000000000040552d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000404dcf : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jge 0x404dbf ; call 0x401059
0x0000000000404e30 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jge 0x404e30 ; call 0x4010e9
0x0000000000404fde : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jge 0x404fde ; call 0x401249
0x00000000004064ed : add byte ptr [rax], al ; add byte ptr [rax], ah ; mov dl, -1 ; call qword ptr [rsi]
0x000000000040552b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040552c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040388e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000402f7a : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402d20 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040101b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000401059 : add byte ptr [rax], al ; jmp 0x401039
0x0000000000404e6e : add byte ptr [rax], al ; mov edi, eax ; call 0x401166
0x0000000000401b62 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000404e31 : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x10] ; call 0x4010e8
0x0000000000404fdf : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x10] ; call 0x401248
0x0000000000404dd0 : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x20] ; call 0x401058
0x00000000004064ea : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax], ah ; mov dl, -1 ; call qword ptr [rsi]
0x0000000000403271 : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000403e5b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000402ce8 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000406cae : add byte ptr [rax], al ; push rax ; loope 0x406cb7 ; jmp rax
0x000000000040552e : add byte ptr [rax], al ; ret
0x00000000004066ee : add byte ptr [rax], al ; rol bh, -1 ; call rdx
0x00000000004069ae : add byte ptr [rax], al ; ror ch, -1 ; jmp qword ptr [rdx]
0x0000000000403e5c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000402ce9 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000401408 : add byte ptr [rcx], al ; ret
0x0000000000403890 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000402f78 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404e6c : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov edi, eax ; call 0x401168
0x0000000000403e5a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000402ce7 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040508a : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401404 : add eax, 0x206e3e ; add ebx, esi ; ret
0x0000000000401019 : add eax, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004013cb : add eax, edx ; sar rax, 1 ; jne 0x4013dc ; pop rbp ; ret
0x0000000000401409 : add ebx, esi ; ret
0x000000000040183c : add esp, 0x10 ; pop rbp ; ret
0x0000000000404dec : add esp, 0x130 ; pop rbp ; ret
0x0000000000402ce4 : add esp, 0x138 ; pop rbx ; pop rbp ; ret
0x000000000040414c : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000401970 : add esp, 0x20 ; pop rbp ; ret
0x00000000004015ed : add esp, 0x30 ; pop rbp ; ret
0x000000000040335c : add esp, 0x50 ; pop rbp ; ret
0x0000000000401df3 : add esp, 0x70 ; pop rbp ; ret
0x0000000000402e9e : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040326d : add esp, 0x90 ; pop rbp ; ret
0x0000000000403fe4 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040101e : add esp, 8 ; ret
0x00000000004013ca : add rax, rdx ; sar rax, 1 ; jne 0x4013dd ; pop rbp ; ret
0x000000000040183b : add rsp, 0x10 ; pop rbp ; ret
0x0000000000404deb : add rsp, 0x130 ; pop rbp ; ret
0x0000000000402ce3 : add rsp, 0x138 ; pop rbx ; pop rbp ; ret
0x000000000040414b : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000040196f : add rsp, 0x20 ; pop rbp ; ret
0x00000000004015ec : add rsp, 0x30 ; pop rbp ; ret
0x000000000040335b : add rsp, 0x50 ; pop rbp ; ret
0x0000000000401df2 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000402e9d : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040326c : add rsp, 0x90 ; pop rbp ; ret
0x0000000000403fe3 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040101d : add rsp, 8 ; ret
0x0000000000405089 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401407 : and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000403037 : and dword ptr [rax], 0x81d8558b ; ret 1
0x00000000004032a7 : and eax, 0x48fffffd ; add esp, 0x20 ; pop rbp ; ret
0x000000000040171f : and eax, 0x608250 ; pop rbp ; ret
0x0000000000401743 : and eax, 0x608258 ; pop rbp ; ret
0x0000000000404dd6 : call 0x401052
0x0000000000404e37 : call 0x4010e2
0x0000000000404e72 : call 0x401162
0x0000000000404fe5 : call 0x401242
0x000000000040504a : call 0x4012f2
0x0000000000402d19 : call 0xffffffffe902b669
0x0000000000402d18 : call 0xffffffffe902b66a
0x0000000000405046 : call 0xffffffffe924a5dc
0x0000000000405509 : call qword ptr [r12 + rbx*8]
0x0000000000406407 : call qword ptr [rax]
0x00000000004064f3 : call qword ptr [rsi]
0x000000000040550a : call qword ptr [rsp + rbx*8]
0x000000000040142d : call rax
0x00000000004066f3 : call rdx
0x0000000000404dea : clc ; add rsp, 0x130 ; pop rbp ; ret
0x000000000040434f : clc ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004038a1 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004013cf : clc ; jne 0x4013d8 ; pop rbp ; ret
0x0000000000401ca5 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040545b : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040545e : clc ; pop rbp ; ret
0x0000000000404f36 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004047bb : cld ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404700 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000405458 : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000404f33 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404ed6 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004046fd : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402ce6 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040138d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4013a0 ; pop rbp ; ret
0x000000000040399c : cwde ; mov rcx, qword ptr [rax*8 + 0x405d88] ; jmp rcx
0x0000000000402185 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; enter 0x4058, 0 ; jmp rcx
0x0000000000401ea5 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; sbb byte ptr [rax + 0x40], 0 ; jmp rcx
0x0000000000404d4f : dec dword ptr [rax - 0x7f] ; ret 1
0x0000000000402dcb : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000040218a : enter 0x4058, 0 ; jmp rcx
0x0000000000402703 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040550c : fmul qword ptr [rax - 0x7d] ; ret
0x00000000004041d3 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004013a0 : hlt ; pop rbp ; mov edi, 0x608218 ; jmp rax
0x0000000000404ea0 : in al, dx ; mov rdi, qword ptr [rbp - 0x10] ; call 0x4010e7
0x0000000000404e9f : in al, dx ; mov rdi, qword ptr [rbp - 0x10] ; call 0x4010e8
0x0000000000403fa0 : int 0x80
0x0000000000401393 : ja 0x40139a ; pop rbp ; ret
0x000000000040139f : je 0x40139d ; pop rbp ; mov edi, 0x608218 ; jmp rax
0x0000000000404dd4 : jge 0x404dba ; call 0x401054
0x0000000000404e35 : jge 0x404e2b ; call 0x4010e4
0x0000000000404ea3 : jge 0x404e99 ; call 0x4010e4
0x0000000000404fe3 : jge 0x404fd9 ; call 0x401244
0x000000000040105b : jmp 0x401037
0x000000000040614f : jmp qword ptr [rax]
0x0000000000406773 : jmp qword ptr [rdx]
0x00000000004013a7 : jmp rax
0x0000000000401eae : jmp rcx
0x00000000004013e7 : jmp rdx
0x00000000004013d0 : jne 0x4013d7 ; pop rbp ; ret
0x0000000000405045 : jne 0x405036 ; mov edx, dword ptr [rbp - 0x1c] ; call 0x4012f7
0x0000000000401df5 : jo 0x401e56 ; ret
0x0000000000403504 : jo 0x403565 ; ret
0x000000000040363e : jo 0x40369f ; ret
0x0000000000402ea0 : js 0x402f00 ; pop rbp ; ret
0x0000000000406cb1 : loope 0x406cb4 ; jmp rax
0x00000000004064b1 : mov al, -1 ; jmp rdx
0x00000000004033db : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040326b : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000405086 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040028a : mov bh, -0x15 ; ret 0xcee6
0x0000000000401741 : mov byte ptr [0x608258], al ; pop rbp ; ret
0x0000000000401403 : mov byte ptr [rip + 0x206e3e], 1 ; ret
0x000000000040508c : mov dh, -0x40 ; pop rbp ; ret
0x00000000004064f1 : mov dl, -1 ; call qword ptr [rsi]
0x000000000040171d : mov dword ptr [0x608250], edi ; pop rbp ; ret
0x0000000000401ca6 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000401bb4 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401c68 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000404e9e : mov dword ptr [rbp - 0x14], ecx ; mov rdi, qword ptr [rbp - 0x10] ; call 0x4010e9
0x00000000004015e9 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004041d1 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405459 : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000401d1e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402e9c : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000401b68 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040426b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040196c : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401b65 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004018ef : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000404503 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401b1d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401bae : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401c6a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000401def : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000402e9a : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004033d9 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000404f34 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004047b9 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004046fe : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040434d : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040389f : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040545c : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040142b : mov ebp, esp ; call rax
0x0000000000401391 : mov ebp, esp ; ja 0x40139c ; pop rbp ; ret
0x0000000000401ea7 : mov ecx, dword ptr [rax*8 + 0x405880] ; jmp rcx
0x0000000000402187 : mov ecx, dword ptr [rax*8 + 0x4058c8] ; jmp rcx
0x000000000040399e : mov ecx, dword ptr [rax*8 + 0x405d88] ; jmp rcx
0x0000000000401bb1 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401425 : mov edi, 0x607e20 ; mov rbp, rsp ; call rax
0x00000000004013a2 : mov edi, 0x608218 ; jmp rax
0x00000000004013e2 : mov edi, 0x608218 ; jmp rdx
0x0000000000404e34 : mov edi, dword ptr [rbp - 0x10] ; call 0x4010e5
0x0000000000404fe2 : mov edi, dword ptr [rbp - 0x10] ; call 0x401245
0x0000000000404dd3 : mov edi, dword ptr [rbp - 0x20] ; call 0x401055
0x0000000000404e70 : mov edi, eax ; call 0x401164
0x0000000000405507 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000405506 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000404e6b : mov edx, 1 ; mov edi, eax ; call 0x401169
0x0000000000405047 : mov edx, dword ptr [rbp - 0x1c] ; call 0x4012f5
0x0000000000405044 : mov esi, dword ptr [rbp - 0x18] ; mov edx, dword ptr [rbp - 0x1c] ; call 0x4012f8
0x00000000004013e0 : mov esi, eax ; mov edi, 0x608218 ; jmp rdx
0x000000000040171c : mov qword ptr [0x608250], rdi ; pop rbp ; ret
0x0000000000401d1d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004033da : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000402e9b : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x000000000040426a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040196b : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401b64 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004018ee : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000404502 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401b1c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401dee : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004033d8 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040434c : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040389e : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040142a : mov rbp, rsp ; call rax
0x0000000000401390 : mov rbp, rsp ; ja 0x40139d ; pop rbp ; ret
0x0000000000401ea6 : mov rcx, qword ptr [rax*8 + 0x405880] ; jmp rcx
0x0000000000402186 : mov rcx, qword ptr [rax*8 + 0x4058c8] ; jmp rcx
0x000000000040399d : mov rcx, qword ptr [rax*8 + 0x405d88] ; jmp rcx
0x0000000000404e33 : mov rdi, qword ptr [rbp - 0x10] ; call 0x4010e6
0x0000000000404fe1 : mov rdi, qword ptr [rbp - 0x10] ; call 0x401246
0x0000000000404dd2 : mov rdi, qword ptr [rbp - 0x20] ; call 0x401056
0x0000000000405043 : mov rsi, qword ptr [rbp - 0x18] ; mov edx, dword ptr [rbp - 0x1c] ; call 0x4012f9
0x00000000004013df : mov rsi, rax ; mov edi, 0x608218 ; jmp rdx
0x00000000004064ec : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax], ah ; mov dl, -1 ; call qword ptr [rsi]
0x0000000000404e38 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xffff
0x000000000040508b : movzx eax, al ; pop rbp ; ret
0x0000000000405528 : nop dword ptr [rax + rax] ; ret
0x0000000000402188 : or al, 0xffffffffffffffc5 ; enter 0x4058, 0 ; jmp rcx
0x0000000000401ea8 : or al, 0xffffffffffffffc5 ; sbb byte ptr [rax + 0x40], 0 ; jmp rcx
0x00000000004026fe : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x00000000004026ff : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x00000000004035c1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401406 : outsb dx, byte ptr [rsi] ; and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000401405 : outsb dx, byte ptr ds:[rsi] ; and byte ptr [rax], al ; add ebx, esi ; ret
0x000000000040551c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040551e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000403e5e : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405520 : pop r14 ; pop r15 ; ret
0x0000000000403e60 : pop r15 ; pop rbp ; ret
0x0000000000405522 : pop r15 ; ret
0x0000000000401402 : pop rbp ; mov byte ptr [rip + 0x206e3e], 1 ; ret
0x00000000004013a1 : pop rbp ; mov edi, 0x608218 ; jmp rax
0x00000000004013de : pop rbp ; mov rsi, rax ; mov edi, 0x608218 ; jmp rdx
0x000000000040551b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040551f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401395 : pop rbp ; ret
0x0000000000403e5d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000402cea : pop rbx ; pop rbp ; ret
0x0000000000403e61 : pop rdi ; pop rbp ; ret
0x0000000000404d3d : pop rdi ; ret
0x0000000000403e5f : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000405521 : pop rsi ; pop r15 ; ret
0x000000000040551d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000406cb0 : push rax ; loope 0x406cb5 ; jmp rax
0x000000000040335e : push rax ; pop rbp ; ret
0x0000000000402702 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000401424 : push rbp ; mov edi, 0x607e20 ; mov rbp, rsp ; call rax
0x00000000004049dd : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x0000000000402dce : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000404fe6 : push rsi ; ret 0xffff
0x0000000000401021 : ret
0x0000000000401262 : ret 0x206e
0x0000000000401062 : ret 0x206f
0x0000000000403959 : ret 0x8844
0x00000000004043d2 : ret 0x8948
0x000000000040282d : ret 0x89a5
0x0000000000402706 : ret 0x8b48
0x000000000040271b : ret 0xafe8
0x00000000004013c5 : ret 0xc148
0x000000000040028c : ret 0xcee6
0x0000000000403893 : ret 0xd284
0x0000000000402d1c : ret 0xee8
0x0000000000404dd8 : ret 0xffff
0x000000000040303e : ret 1
0x0000000000402dd2 : ret 8
0x00000000004066f0 : rol bh, -1 ; call rdx
0x0000000000403f9b : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000401df0 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x401e5b ; ret
0x00000000004013cc : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4013db ; pop rbp ; ret
0x0000000000403f9c : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000401df1 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x401e5a ; ret
0x00000000004049de : ror byte ptr [rax - 0x7f], 1 ; ret 1
0x0000000000402dcf : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x00000000004069b0 : ror ch, -1 ; jmp qword ptr [rdx]
0x00000000004013ce : sar eax, 1 ; jne 0x4013d9 ; pop rbp ; ret
0x00000000004013cd : sar rax, 1 ; jne 0x4013da ; pop rbp ; ret
0x0000000000401eaa : sbb byte ptr [rax + 0x40], 0 ; jmp rcx
0x0000000000405088 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040555d : sub esp, 8 ; add rsp, 8 ; ret
0x000000000040555c : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040552a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000401ea9 : vaddps xmm0, xmm15, xmmword ptr [rax] ; jmp rcx
0x0000000000402189 : vaddps xmm0, xmm6, xmmword ptr [rax] ; jmp rcx
0x00000000004039a0 : vminps xmm0, xmm14, xmmword ptr [rax] ; jmp rcx
0x0000000000403892 : xchg eax, esp ; ret 0xd284
0x0000000000404dee : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401c66 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
