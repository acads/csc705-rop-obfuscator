0x0000000000403469 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040680b : add al, al ; sar bh, 1 ; jmp rax
0x0000000000403f0b : add al, ch ; call rbx
0x0000000000404248 : add al, ch ; ret 0xffd0
0x00000000004059df : add bl, dh ; ret
0x0000000000404fa3 : add byte ptr [rax - 0x75], cl ; jge 0x404f6f ; call 0x4011b7
0x0000000000404448 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x00000000004059dd : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000404fa1 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jge 0x404f71 ; call 0x4011b9
0x00000000004059db : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004006a8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400420 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000004006aa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400422 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000004006ac : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400424 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000404f72 : add byte ptr [rax], al ; add byte ptr [rbx + 0x23e8c87d], cl ; ret
0x0000000000403d3e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040342a : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004031d0 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401113 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000401169 : add byte ptr [rax], al ; jmp 0x401129
0x0000000000402012 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000404fa2 : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x40] ; call 0x4011b8
0x0000000000405111 : add byte ptr [rax], al ; mov rdi, rax ; call 0x401367
0x0000000000405155 : add byte ptr [rax], al ; mov rsi, rax ; call 0x4013c7
0x000000000040681a : add byte ptr [rax], al ; nop ; sar edi, 1 ; jmp qword ptr [rax]
0x0000000000403721 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040430b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403198 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040675a : add byte ptr [rax], al ; push rax ; mov bl, -1 ; jmp qword ptr [rax]
0x000000000040680a : add byte ptr [rax], al ; rcl al, -1 ; jmp rax
0x00000000004006ae : add byte ptr [rax], al ; ret
0x0000000000400426 : add byte ptr [rax], al ; ret 0
0x000000000040684b : add byte ptr [rax], al ; sar edi, cl ; jmp rax
0x000000000040699a : add byte ptr [rax], al ; sub bh, -1 ; jmp qword ptr [rax]
0x000000000040691b : add byte ptr [rax], dh ; jrcxz 0x406922 ; jmp qword ptr [rax]
0x000000000040674b : add byte ptr [rax], dl ; mov bl, -1 ; jmp rax
0x0000000000404f74 : add byte ptr [rbx + 0x23e8c87d], cl ; ret
0x000000000040430c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000403199 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000401528 : add byte ptr [rcx], al ; ret
0x0000000000406818 : add byte ptr [rdi], al ; add byte ptr [rax], al ; nop ; sar edi, 1 ; jmp qword ptr [rax]
0x0000000000403d40 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000403428 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040510f : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rax ; call 0x401369
0x0000000000405153 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rsi, rax ; call 0x4013c9
0x000000000040430a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000403197 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040553a : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401524 : add eax, 0x206d4e ; add ebx, esi ; ret
0x0000000000406749 : add eax, dword ptr [rax] ; add byte ptr [rax], dl ; mov bl, -1 ; jmp rax
0x00000000004014eb : add eax, edx ; sar rax, 1 ; jne 0x4014fc ; pop rbp ; ret
0x0000000000401529 : add ebx, esi ; ret
0x00000000004016ab : add esp, 0x10 ; pop rbp ; ret
0x000000000040529c : add esp, 0x130 ; pop rbp ; ret
0x0000000000403194 : add esp, 0x138 ; pop rbx ; pop rbp ; ret
0x00000000004045fc : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000401c26 : add esp, 0x20 ; pop rbp ; ret
0x000000000040178d : add esp, 0x30 ; pop rbp ; ret
0x000000000040380c : add esp, 0x50 ; pop rbp ; ret
0x00000000004022a3 : add esp, 0x70 ; pop rbp ; ret
0x000000000040334e : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040371d : add esp, 0x90 ; pop rbp ; ret
0x0000000000404494 : add esp, 0xa0 ; pop rbp ; ret
0x0000000000401116 : add esp, 8 ; ret
0x00000000004014ea : add rax, rdx ; sar rax, 1 ; jne 0x4014fd ; pop rbp ; ret
0x00000000004016aa : add rsp, 0x10 ; pop rbp ; ret
0x000000000040529b : add rsp, 0x130 ; pop rbp ; ret
0x0000000000403193 : add rsp, 0x138 ; pop rbx ; pop rbp ; ret
0x00000000004045fb : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000401c25 : add rsp, 0x20 ; pop rbp ; ret
0x000000000040178c : add rsp, 0x30 ; pop rbp ; ret
0x000000000040380b : add rsp, 0x50 ; pop rbp ; ret
0x00000000004022a2 : add rsp, 0x70 ; pop rbp ; ret
0x000000000040334d : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040371c : add rsp, 0x90 ; pop rbp ; ret
0x0000000000404493 : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000401115 : add rsp, 8 ; ret
0x0000000000405539 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401527 : and byte ptr [rax], al ; add ebx, esi ; ret
0x00000000004034e7 : and dword ptr [rax], 0x81d8558b ; ret 1
0x0000000000403757 : and eax, 0x48fffffd ; add esp, 0x20 ; pop rbp ; ret
0x0000000000401a2f : and eax, 0x608280 ; pop rbp ; ret
0x0000000000401a53 : and eax, 0x608288 ; pop rbp ; ret
0x0000000000404fa8 : call 0x4011b2
0x0000000000405086 : call 0x401292
0x0000000000405116 : call 0x401362
0x000000000040515a : call 0x4013c2
0x00000000004031c9 : call 0xffffffffe902bb19
0x00000000004031c8 : call 0xffffffffe902bb1a
0x00000000004059b9 : call qword ptr [r12 + rbx*8]
0x0000000000406afb : call qword ptr [rsi]
0x00000000004059ba : call qword ptr [rsp + rbx*8]
0x000000000040154d : call rax
0x0000000000403f0d : call rbx
0x0000000000406d3b : call rdx
0x000000000040529a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x00000000004047ff : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401cf9 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004014ef : clc ; jne 0x4014f8 ; pop rbp ; ret
0x0000000000402155 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040590b : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040590e : clc ; pop rbp ; ret
0x00000000004053e6 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404c6b : cld ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404bb0 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000405908 : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004053e3 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405386 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404bad : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403196 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004014ad : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4014c0 ; pop rbp ; ret
0x0000000000403e4c : cwde ; mov rcx, qword ptr [rax*8 + 0x406358] ; jmp rcx
0x00000000004051ff : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000040327b : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000402bb3 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x00000000004059bc : fmul qword ptr [rax - 0x7d] ; ret
0x00000000004016a9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004014c0 : hlt ; pop rbp ; mov edi, 0x608230 ; jmp rax
0x0000000000406917 : inc dword ptr [rax] ; or eax, dword ptr [rax] ; add byte ptr [rax], dh ; jrcxz 0x406926 ; jmp qword ptr [rax]
0x0000000000406747 : inc eax ; add eax, dword ptr [rax] ; add byte ptr [rax], dl ; mov bl, -1 ; jmp rax
0x0000000000401526 : insd dword ptr [rdi], dx ; and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000404450 : int 0x80
0x00000000004014b3 : ja 0x4014ba ; pop rbp ; ret
0x00000000004014bf : je 0x4014bd ; pop rbp ; mov edi, 0x608230 ; jmp rax
0x0000000000404fa6 : jge 0x404f6c ; call 0x4011b4
0x000000000040116b : jmp 0x401127
0x000000000040675f : jmp qword ptr [rax]
0x0000000000406dbb : jmp qword ptr [rdx]
0x00000000004014c7 : jmp rax
0x000000000040235e : jmp rcx
0x0000000000401507 : jmp rdx
0x00000000004014f0 : jne 0x4014f7 ; pop rbp ; ret
0x00000000004022a5 : jo 0x402306 ; ret
0x00000000004039b4 : jo 0x403a15 ; ret
0x0000000000403aee : jo 0x403b4f ; ret
0x000000000040691d : jrcxz 0x406920 ; jmp qword ptr [rax]
0x0000000000403350 : js 0x4033b0 ; pop rbp ; ret
0x000000000040690d : loop 0x406910 ; jmp rax
0x00000000004068dd : loopne 0x4068e0 ; jmp qword ptr [rax]
0x0000000000406b79 : mov al, -1 ; call rax
0x0000000000405084 : mov al, 0 ; call 0x401294
0x000000000040388b : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040371b : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000405536 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040675d : mov bl, -1 ; jmp qword ptr [rax]
0x000000000040674d : mov bl, -1 ; jmp rax
0x0000000000401a51 : mov byte ptr [0x608288], al ; pop rbp ; ret
0x0000000000401523 : mov byte ptr [rip + 0x206d4e], 1 ; ret
0x000000000040553c : mov dh, -0x40 ; pop rbp ; ret
0x0000000000401a2d : mov dword ptr [0x608280], edi ; pop rbp ; ret
0x0000000000402156 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000402064 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000402118 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000401789 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004016a7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405909 : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004021ce : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040334c : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000402018 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040471b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401e1c : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402015 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000401d9f : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000401c22 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401fcd : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040205e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040211a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040229f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040334a : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000403889 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004053e4 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404c69 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404bae : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004047fd : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401cf7 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040590c : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040154b : mov ebp, esp ; call rax
0x00000000004014b1 : mov ebp, esp ; ja 0x4014bc ; pop rbp ; ret
0x0000000000402357 : mov ecx, dword ptr [rax*8 + 0x405e50] ; jmp rcx
0x0000000000402637 : mov ecx, dword ptr [rax*8 + 0x405e98] ; jmp rcx
0x0000000000403e4e : mov ecx, dword ptr [rax*8 + 0x406358] ; jmp rcx
0x0000000000402061 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401545 : mov edi, 0x607e20 ; mov rbp, rsp ; call rax
0x00000000004014c2 : mov edi, 0x608230 ; jmp rax
0x0000000000401502 : mov edi, 0x608230 ; jmp rdx
0x0000000000404fa5 : mov edi, dword ptr [rbp - 0x40] ; call 0x4011b5
0x0000000000405114 : mov edi, eax ; call 0x401364
0x00000000004059b7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x00000000004059b6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000405158 : mov esi, eax ; call 0x4013c4
0x0000000000401500 : mov esi, eax ; mov edi, 0x608230 ; jmp rdx
0x0000000000401a2c : mov qword ptr [0x608280], rdi ; pop rbp ; ret
0x00000000004021cd : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040388a : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040334b : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x000000000040471a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401e1b : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402014 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000401d9e : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000401c21 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401fcc : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040229e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000403888 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004047fc : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401cf6 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040154a : mov rbp, rsp ; call rax
0x00000000004014b0 : mov rbp, rsp ; ja 0x4014bd ; pop rbp ; ret
0x0000000000402356 : mov rcx, qword ptr [rax*8 + 0x405e50] ; jmp rcx
0x0000000000402636 : mov rcx, qword ptr [rax*8 + 0x405e98] ; jmp rcx
0x0000000000403e4d : mov rcx, qword ptr [rax*8 + 0x406358] ; jmp rcx
0x0000000000404fa4 : mov rdi, qword ptr [rbp - 0x40] ; call 0x4011b6
0x0000000000405113 : mov rdi, rax ; call 0x401365
0x0000000000405157 : mov rsi, rax ; call 0x4013c5
0x00000000004014ff : mov rsi, rax ; mov edi, 0x608230 ; jmp rdx
0x000000000040553b : movzx eax, al ; pop rbp ; ret
0x000000000040681c : nop ; sar edi, 1 ; jmp qword ptr [rax]
0x00000000004059d8 : nop dword ptr [rax + rax] ; ret
0x0000000000402bae : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000402baf : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000403a71 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406919 : or eax, dword ptr [rax] ; add byte ptr [rax], dh ; jrcxz 0x406924 ; jmp qword ptr [rax]
0x0000000000401111 : or eax, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004059cc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004059ce : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040430e : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004059d0 : pop r14 ; pop r15 ; ret
0x0000000000404310 : pop r15 ; pop rbp ; ret
0x00000000004059d2 : pop r15 ; ret
0x0000000000401522 : pop rbp ; mov byte ptr [rip + 0x206d4e], 1 ; ret
0x00000000004014c1 : pop rbp ; mov edi, 0x608230 ; jmp rax
0x00000000004014fe : pop rbp ; mov rsi, rax ; mov edi, 0x608230 ; jmp rdx
0x00000000004059cb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004059cf : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004014b5 : pop rbp ; ret
0x000000000040430d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040319a : pop rbx ; pop rbp ; ret
0x0000000000404311 : pop rdi ; pop rbp ; ret
0x00000000004059d3 : pop rdi ; ret
0x000000000040430f : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004059d1 : pop rsi ; pop r15 ; ret
0x00000000004059cd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000401f51 : push 0x48006082 ; add esp, 0x30 ; pop rbp ; ret
0x000000000040675c : push rax ; mov bl, -1 ; jmp qword ptr [rax]
0x000000000040380e : push rax ; pop rbp ; ret
0x0000000000402bb2 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000401544 : push rbp ; mov edi, 0x607e20 ; mov rbp, rsp ; call rax
0x0000000000404e8d : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000040327e : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000404dda : push rdx ; ret
0x000000000040680c : rcl al, -1 ; jmp rax
0x00000000004006b0 : ret
0x0000000000400428 : ret 0
0x0000000000401372 : ret 0x206d
0x0000000000401172 : ret 0x206e
0x0000000000403e09 : ret 0x8844
0x0000000000404882 : ret 0x8948
0x0000000000402cdd : ret 0x89a5
0x0000000000402bb6 : ret 0x8b48
0x0000000000402bcb : ret 0xafe8
0x0000000000401946 : ret 0xb0
0x00000000004014e5 : ret 0xc148
0x0000000000403d43 : ret 0xd284
0x00000000004031cc : ret 0xee8
0x0000000000404e9a : ret 0xffc4
0x000000000040424a : ret 0xffd0
0x0000000000404faa : ret 0xffff
0x00000000004034ee : ret 1
0x0000000000403282 : ret 8
0x0000000000406748 : rol byte ptr [rbx], 0 ; add byte ptr [rax], dl ; mov bl, -1 ; jmp rax
0x0000000000406848 : rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; sar edi, cl ; jmp rax
0x00000000004067c8 : rol byte ptr [rip - 0x35700000], -1 ; jmp rax
0x0000000000406808 : rol byte ptr [rsi], 0 ; add al, al ; sar bh, 1 ; jmp rax
0x000000000040444b : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x00000000004022a0 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x40230b ; ret
0x00000000004014ec : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4014fb ; pop rbp ; ret
0x000000000040444c : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x00000000004022a1 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x40230a ; ret
0x0000000000404e8e : ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000040327f : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x00000000004069c8 : ror byte ptr [rip - 0xeb00000], -1 ; jmp rax
0x000000000040680d : sar bh, 1 ; jmp rax
0x00000000004014ee : sar eax, 1 ; jne 0x4014f9 ; pop rbp ; ret
0x000000000040681d : sar edi, 1 ; jmp qword ptr [rax]
0x000000000040685d : sar edi, cl ; jmp qword ptr [rax]
0x000000000040684d : sar edi, cl ; jmp rax
0x00000000004014ed : sar rax, 1 ; jne 0x4014fa ; pop rbp ; ret
0x000000000040505e : shr al, 0x2c ; ret
0x0000000000404fa7 : shr al, 3 ; ret 0xffff
0x0000000000405538 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040699c : sub bh, -1 ; jmp qword ptr [rax]
0x0000000000405a0d : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000405a0c : sub rsp, 8 ; add rsp, 8 ; ret
0x00000000004059da : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000402639 : vdivps xmm0, xmm12, xmmword ptr [rax] ; jmp rcx
0x0000000000402359 : vdivps xmm8, xmm5, xmmword ptr [rax] ; jmp rcx
0x0000000000403d42 : xchg eax, esp ; ret 0xd284
0x000000000040529e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401b47 : xor eax, 0x48fffff6 ; add esp, 0x10 ; pop rbp ; ret
0x0000000000402116 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
