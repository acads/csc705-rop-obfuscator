0x0000000000401ca7 : adc eax, 0x48fffff5 ; add esp, 0x10 ; pop rbp ; ret
0x0000000000403429 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401b78 : add al, 0x25 ; enter 0x6081, 0 ; pop rbp ; ret
0x00000000004015a7 : add al, ch ; ret
0x0000000000405045 : add al, ch ; xchg eax, ebp ; ret 0xffff
0x000000000040599f : add bl, dh ; ret
0x0000000000404f63 : add byte ptr [rax - 0x75], cl ; jge 0x404f2f ; call 0x4011f7
0x0000000000404fbf : add byte ptr [rax - 0x75], cl ; jge 0x404f8b ; call 0x4011f7
0x0000000000404408 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x00000000004015a5 : add byte ptr [rax], al ; add al, ch ; ret
0x000000000040599d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000404f61 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jge 0x404f31 ; call 0x4011f9
0x0000000000404fbd : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jge 0x404f8d ; call 0x4011f9
0x000000000040599b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040599c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000406374 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4040
0x0000000000404f32 : add byte ptr [rax], al ; add byte ptr [rbx - 0x4c173783], cl ; ret
0x0000000000403cfe : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004019b0 : add byte ptr [rax], al ; add dh, al ; ret
0x00000000004033ea : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403190 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040114b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000406aea : add byte ptr [rax], al ; in al, 0 ; add byte ptr [rax], al ; nop ; mov al, -1 ; call qword ptr [rsi]
0x0000000000401329 : add byte ptr [rax], al ; jmp 0x401169
0x0000000000401fd2 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000404f62 : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x40] ; call 0x4011f8
0x00000000004050d1 : add byte ptr [rax], al ; mov rdi, rax ; call 0x4013a7
0x0000000000405115 : add byte ptr [rax], al ; mov rsi, rax ; call 0x4013f7
0x0000000000406aee : add byte ptr [rax], al ; nop ; mov al, -1 ; call qword ptr [rsi]
0x0000000000406ace : add byte ptr [rax], al ; nop ; mov al, -1 ; jmp qword ptr [rax]
0x00000000004036e1 : add byte ptr [rax], al ; pop rbp ; ret
0x00000000004042cb : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403158 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004072ae : add byte ptr [rax], al ; rcr bh, -1 ; jmp rax
0x000000000040599e : add byte ptr [rax], al ; ret
0x0000000000406376 : add byte ptr [rax], al ; ret 0x4040
0x0000000000406d6e : add byte ptr [rax], al ; ror cl, -1 ; jmp qword ptr [rdx]
0x00000000004042cc : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000403159 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000404f34 : add byte ptr [rbx - 0x4c173783], cl ; ret
0x0000000000401558 : add byte ptr [rcx], al ; ret
0x00000000004015a1 : add byte ptr [rdi], cl ; test byte ptr [rdx], cl ; add byte ptr [rax], al ; add al, ch ; ret
0x0000000000403d00 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004019b2 : add dh, al ; ret
0x00000000004033e8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004050cf : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rax ; call 0x4013a9
0x0000000000405113 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rsi, rax ; call 0x4013f9
0x00000000004042ca : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000403157 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004054fa : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401554 : add eax, 0x206d3e ; add ebx, esi ; ret
0x000000000040151b : add eax, edx ; sar rax, 1 ; jne 0x40152c ; pop rbp ; ret
0x0000000000401559 : add ebx, esi ; ret
0x00000000004016ab : add esp, 0x10 ; pop rbp ; ret
0x000000000040525c : add esp, 0x130 ; pop rbp ; ret
0x0000000000403154 : add esp, 0x138 ; pop rbx ; pop rbp ; ret
0x00000000004045bc : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000401de0 : add esp, 0x20 ; pop rbp ; ret
0x000000000040178d : add esp, 0x30 ; pop rbp ; ret
0x00000000004037cc : add esp, 0x50 ; pop rbp ; ret
0x0000000000402263 : add esp, 0x70 ; pop rbp ; ret
0x000000000040330e : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004036dd : add esp, 0x90 ; pop rbp ; ret
0x0000000000404454 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040114e : add esp, 8 ; ret
0x000000000040151a : add rax, rdx ; sar rax, 1 ; jne 0x40152d ; pop rbp ; ret
0x00000000004016aa : add rsp, 0x10 ; pop rbp ; ret
0x000000000040525b : add rsp, 0x130 ; pop rbp ; ret
0x0000000000403153 : add rsp, 0x138 ; pop rbx ; pop rbp ; ret
0x00000000004045bb : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000401ddf : add rsp, 0x20 ; pop rbp ; ret
0x000000000040178c : add rsp, 0x30 ; pop rbp ; ret
0x00000000004037cb : add rsp, 0x50 ; pop rbp ; ret
0x0000000000402262 : add rsp, 0x70 ; pop rbp ; ret
0x000000000040330d : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004036dc : add rsp, 0x90 ; pop rbp ; ret
0x0000000000404453 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040114d : add rsp, 8 ; ret
0x00000000004054f9 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401557 : and byte ptr [rax], al ; add ebx, esi ; ret
0x00000000004034a7 : and dword ptr [rax], 0x81d8558b ; ret 1
0x0000000000403717 : and eax, 0x48fffffd ; add esp, 0x20 ; pop rbp ; ret
0x0000000000401b79 : and eax, 0x6081c8 ; pop rbp ; ret
0x0000000000401b8f : and eax, 0x6082a0 ; pop rbp ; ret
0x0000000000401bb3 : and eax, 0x6082a8 ; pop rbp ; ret
0x0000000000401149 : and eax, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000401b04 : call 0x3ef6fa
0x0000000000401b03 : call 0x3ef6fb
0x0000000000404f68 : call 0x4011f2
0x0000000000401ad9 : call 0x401297
0x0000000000405046 : call 0x4012e2
0x00000000004050d6 : call 0x4013a2
0x000000000040511a : call 0x4013f2
0x0000000000403189 : call 0xffffffffe902bad9
0x0000000000403188 : call 0xffffffffe902bada
0x0000000000405979 : call qword ptr [r12 + rbx*8]
0x0000000000406af3 : call qword ptr [rsi]
0x000000000040597a : call qword ptr [rsp + rbx*8]
0x000000000040157d : call rax
0x0000000000406a53 : call rbx
0x0000000000406cf3 : call rdx
0x000000000040525a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x00000000004047bf : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403d11 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040151f : clc ; jne 0x401528 ; pop rbp ; ret
0x0000000000402115 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004058cb : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004058ce : clc ; pop rbp ; ret
0x00000000004053a6 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404c2b : cld ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404b70 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401b76 : cld ; mov dword ptr [0x6081c8], eax ; pop rbp ; ret
0x00000000004058c8 : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004053a3 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405346 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404b6d : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403156 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004019af : cmp eax, 0xc6000000 ; ret
0x00000000004014dd : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4014f0 ; pop rbp ; ret
0x0000000000403e0c : cwde ; mov rcx, qword ptr [rax*8 + 0x406338] ; jmp rcx
0x00000000004051bf : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000040323b : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000401b7a : enter 0x6081, 0 ; pop rbp ; ret
0x0000000000402b73 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040597c : fmul qword ptr [rax - 0x7d] ; ret
0x00000000004016a9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004014f0 : hlt ; pop rbp ; mov edi, 0x608228 ; jmp rax
0x0000000000401adb : idiv edi ; inc esi ; ret
0x0000000000406aec : in al, 0 ; add byte ptr [rax], al ; nop ; mov al, -1 ; call qword ptr [rsi]
0x0000000000401add : inc esi ; ret
0x0000000000401556 : insd dword ptr [rdi], dx ; and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000404410 : int 0x80
0x00000000004014e3 : ja 0x4014ea ; pop rbp ; ret
0x00000000004014ef : je 0x4014ed ; pop rbp ; mov edi, 0x608228 ; jmp rax
0x0000000000404f66 : jge 0x404f2c ; call 0x4011f4
0x0000000000404fc2 : jge 0x404f88 ; call 0x4011f4
0x000000000040132b : jmp 0x401167
0x0000000000406ad3 : jmp qword ptr [rax]
0x0000000000406d73 : jmp qword ptr [rdx]
0x00000000004014f7 : jmp rax
0x000000000040231e : jmp rcx
0x0000000000401537 : jmp rdx
0x0000000000401520 : jne 0x401527 ; pop rbp ; ret
0x0000000000402265 : jo 0x4022c6 ; ret
0x0000000000403974 : jo 0x4039d5 ; ret
0x0000000000403aae : jo 0x403b0f ; ret
0x0000000000403310 : js 0x403370 ; pop rbp ; ret
0x0000000000405020 : lodsb al, byte ptr [rsi] ; ret
0x0000000000406af1 : mov al, -1 ; call qword ptr [rsi]
0x0000000000406ad1 : mov al, -1 ; jmp qword ptr [rax]
0x0000000000401ad7 : mov al, 0 ; call 0x401299
0x0000000000405044 : mov al, 0 ; call 0x4012e4
0x000000000040384b : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004036db : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x00000000004054f6 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401bb1 : mov byte ptr [0x6082a8], al ; pop rbp ; ret
0x0000000000401553 : mov byte ptr [rip + 0x206d3e], 1 ; ret
0x00000000004054fc : mov dh, -0x40 ; pop rbp ; ret
0x0000000000401b77 : mov dword ptr [0x6081c8], eax ; pop rbp ; ret
0x0000000000401b8d : mov dword ptr [0x6082a0], edi ; pop rbp ; ret
0x0000000000402116 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000402024 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004020d8 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000401789 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004016a7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004058c9 : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040218e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040330c : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000401fd8 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004046db : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401ddc : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401fd5 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000401d5f : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000404973 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401f8d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040201e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004020da : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040225f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040330a : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000403849 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004053a4 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404c29 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404b6e : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004047bd : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403d0f : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004058cc : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040157b : mov ebp, esp ; call rax
0x00000000004014e1 : mov ebp, esp ; ja 0x4014ec ; pop rbp ; ret
0x0000000000402317 : mov ecx, dword ptr [rax*8 + 0x405e30] ; jmp rcx
0x00000000004025f7 : mov ecx, dword ptr [rax*8 + 0x405e78] ; jmp rcx
0x0000000000403e0e : mov ecx, dword ptr [rax*8 + 0x406338] ; jmp rcx
0x0000000000402021 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401575 : mov edi, 0x607e20 ; mov rbp, rsp ; call rax
0x00000000004014f2 : mov edi, 0x608228 ; jmp rax
0x0000000000401532 : mov edi, 0x608228 ; jmp rdx
0x0000000000404f65 : mov edi, dword ptr [rbp - 0x40] ; call 0x4011f5
0x00000000004050d4 : mov edi, eax ; call 0x4013a4
0x0000000000405977 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000405976 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000405118 : mov esi, eax ; call 0x4013f4
0x0000000000401530 : mov esi, eax ; mov edi, 0x608228 ; jmp rdx
0x0000000000401b8c : mov qword ptr [0x6082a0], rdi ; pop rbp ; ret
0x000000000040218d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040384a : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040330b : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x00000000004046da : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401ddb : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401fd4 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000401d5e : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000404972 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401f8c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040225e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000403848 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004047bc : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403d0e : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040157a : mov rbp, rsp ; call rax
0x00000000004014e0 : mov rbp, rsp ; ja 0x4014ed ; pop rbp ; ret
0x0000000000402316 : mov rcx, qword ptr [rax*8 + 0x405e30] ; jmp rcx
0x00000000004025f6 : mov rcx, qword ptr [rax*8 + 0x405e78] ; jmp rcx
0x0000000000403e0d : mov rcx, qword ptr [rax*8 + 0x406338] ; jmp rcx
0x0000000000404f64 : mov rdi, qword ptr [rbp - 0x40] ; call 0x4011f6
0x00000000004050d3 : mov rdi, rax ; call 0x4013a5
0x0000000000405117 : mov rsi, rax ; call 0x4013f5
0x000000000040152f : mov rsi, rax ; mov edi, 0x608228 ; jmp rdx
0x00000000004054fb : movzx eax, al ; pop rbp ; ret
0x0000000000406af0 : nop ; mov al, -1 ; call qword ptr [rsi]
0x0000000000406ad0 : nop ; mov al, -1 ; jmp qword ptr [rax]
0x0000000000405998 : nop dword ptr [rax + rax] ; ret
0x0000000000402b6e : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000402b6f : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000403a31 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040598c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040598e : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004042ce : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405990 : pop r14 ; pop r15 ; ret
0x00000000004042d0 : pop r15 ; pop rbp ; ret
0x0000000000405992 : pop r15 ; ret
0x0000000000401552 : pop rbp ; mov byte ptr [rip + 0x206d3e], 1 ; ret
0x00000000004014f1 : pop rbp ; mov edi, 0x608228 ; jmp rax
0x000000000040152e : pop rbp ; mov rsi, rax ; mov edi, 0x608228 ; jmp rdx
0x000000000040598b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040598f : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004014e5 : pop rbp ; ret
0x00000000004042cd : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040315a : pop rbx ; pop rbp ; ret
0x00000000004042d1 : pop rdi ; pop rbp ; ret
0x0000000000405993 : pop rdi ; ret
0x00000000004042cf : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000405991 : pop rsi ; pop r15 ; ret
0x000000000040598d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004037ce : push rax ; pop rbp ; ret
0x0000000000402b72 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000401574 : push rbp ; mov edi, 0x607e20 ; mov rbp, rsp ; call rax
0x0000000000404e4d : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000040323e : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x00000000004072b0 : rcr bh, -1 ; jmp rax
0x0000000000401151 : ret
0x0000000000401332 : ret 0x206d
0x0000000000406378 : ret 0x4040
0x0000000000403dc9 : ret 0x8844
0x0000000000404842 : ret 0x8948
0x0000000000402c9d : ret 0x89a5
0x0000000000402b76 : ret 0x8b48
0x0000000000402b8b : ret 0xafe8
0x000000000040196a : ret 0xb0
0x0000000000401515 : ret 0xc148
0x0000000000403d03 : ret 0xd284
0x0000000000401b3b : ret 0xe280
0x000000000040318c : ret 0xee8
0x0000000000404f6a : ret 0xffff
0x0000000000401ac3 : ret 1
0x0000000000403242 : ret 8
0x000000000040440b : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000402260 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x4022cb ; ret
0x000000000040151c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40152b ; pop rbp ; ret
0x000000000040440c : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000402261 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x4022ca ; ret
0x0000000000404e4e : ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000040323f : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000406d70 : ror cl, -1 ; jmp qword ptr [rdx]
0x000000000040151e : sar eax, 1 ; jne 0x401529 ; pop rbp ; ret
0x000000000040151d : sar rax, 1 ; jne 0x40152a ; pop rbp ; ret
0x000000000040501e : shr al, -0x54 ; ret
0x0000000000404f67 : shr al, -0x7d ; ret 0xffff
0x0000000000404fc3 : shr al, 0x27 ; ret 0xffff
0x00000000004054f8 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004059cd : sub esp, 8 ; add rsp, 8 ; ret
0x00000000004059cc : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040599a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004015a3 : test byte ptr [rdx], cl ; add byte ptr [rax], al ; add al, ch ; ret
0x00000000004025f9 : vdivps xmm8, xmm0, xmmword ptr [rax] ; jmp rcx
0x0000000000402319 : vdivps xmm8, xmm9, xmmword ptr [rax] ; jmp rcx
0x0000000000405047 : xchg eax, ebp ; ret 0xffff
0x0000000000403d02 : xchg eax, esp ; ret 0xd284
0x0000000000401b3a : xchg eax, esp ; ret 0xe280
0x000000000040525e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004020d6 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
