0x0000000000427025 : adc al, 0 ; add byte ptr [rax], bl ; test al, -2 ; jmp qword ptr [rdi]
0x000000000042586d : adc bh, bh ; call qword ptr [rax]
0x000000000040bebf : adc byte ptr [r8 + 0x39], r9b ; ret 0x870f
0x000000000040c11d : adc byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000040bec0 : adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000041933a : adc byte ptr [rax - 0x75], cl ; jge 0x419304 ; call rax
0x0000000000419339 : adc byte ptr [rax - 0x75], cl ; jge 0x419305 ; call rax
0x00000000004194b3 : adc byte ptr [rax - 0x75], cl ; jge 0x41947d ; call rax
0x00000000004194b2 : adc byte ptr [rax - 0x75], cl ; jge 0x41947e ; call rax
0x00000000004252ec : adc byte ptr [rax - 2], ch ; call qword ptr [rax]
0x00000000004094d3 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040b3a2 : adc dword ptr [rax + 1], ecx ; ret 0x8948
0x0000000000421a63 : adc dword ptr [rax - 0x7f], ecx ; ret 1
0x0000000000425011 : adc eax, 0x42 ; add byte ptr [rax], al ; ret
0x0000000000412d79 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004278c3 : add ah, al ; sbb al, 0 ; add byte ptr [rax], ch ; sar dh, cl ; call qword ptr [rdx]
0x00000000004274c3 : add ah, al ; sbb byte ptr [rax], al ; add byte ptr [rax], ch ; ret
0x000000000040a5b8 : add al, 0 ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040e59a : add al, 0x48 ; add eax, ecx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000414778 : add al, 0xf ; pushfq ; ret 0x5588
0x0000000000409554 : add al, 2 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000042562b : add al, ah ; fdiv st(6), st(0) ; call qword ptr [rax]
0x000000000042569b : add al, ah ; loop 0x4256a1 ; call rax
0x00000000004251eb : add al, al ; cmp esi, edi ; call qword ptr [rax]
0x00000000004256db : add al, al ; in eax, -2 ; call rax
0x0000000000427a67 : add al, bh ; loop 0x427a6d ; call rsp
0x0000000000425ca7 : add al, bl ; sar ch, 1 ; jmp rdx
0x00000000004061d8 : add al, bpl ; int1 ; ret 0xffff
0x0000000000402c07 : add al, bpl ; ret 0xfff8
0x0000000000421504 : add al, byte ptr [rax] ; add byte ptr [rcx - 0xdf43], al ; call qword ptr [rax]
0x0000000000428387 : add al, ch ; and edi, edi ; jmp rax
0x00000000004061d9 : add al, ch ; int1 ; ret 0xffff
0x000000000040bb9b : add al, ch ; jg 0x40bbd9 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000426b67 : add al, ch ; jp 0x426b6d ; call rbx
0x0000000000409827 : add al, ch ; ret
0x0000000000407648 : add al, ch ; ret 0xffac
0x0000000000403748 : add al, ch ; ret 0xfff1
0x0000000000402c08 : add al, ch ; ret 0xfff8
0x000000000042519b : add al, dh ; add edi, esi ; call rax
0x00000000004253ab : add al, dh ; jg 0x4253b1 ; call qword ptr [rax]
0x000000000042555b : add al, dh ; mov cl, -2 ; call rax
0x000000000042536b : add al, dl ; jp 0x425371 ; call qword ptr [rax]
0x000000000042559b : add al, dl ; ret 0xfffe
0x000000000042500f : add bl, al ; adc eax, 0x42 ; add byte ptr [rax], al ; ret
0x0000000000421d9f : add bl, dh ; ret
0x0000000000407645 : add byte ptr [r8], al ; add al, ch ; ret 0xffac
0x00000000004186fb : add byte ptr [r8], r8b ; add byte ptr [rcx - 0x100f43], al ; jmp qword ptr [rsi]
0x000000000040c1b4 : add byte ptr [rax + 1], cl ; ret 0x4a8b
0x000000000040c16c : add byte ptr [rax + 1], cl ; ret 0x8b48
0x0000000000425ca3 : add byte ptr [rax + rax - 0x2f280000], ah ; std ; jmp rdx
0x0000000000419584 : add byte ptr [rax + rax], 0 ; pop rbp ; ret
0x0000000000425d67 : add byte ptr [rax - 0x1e], bh ; std ; call rax
0x000000000041ef2f : add byte ptr [rax - 0x75], cl ; clc ; mov rsp, rbp ; pop rbp ; ret
0x0000000000419531 : add byte ptr [rax - 0x75], cl ; jge 0x4194f3 ; call rax
0x000000000041f575 : add byte ptr [rax - 0x75], cl ; loopne 0x41f5de ; ret
0x00000000004193c5 : add byte ptr [rax - 0x75], cl ; mov ebp, 0xfffffba0 ; call rax
0x0000000000420299 : add byte ptr [rax - 0x75], cl ; push rbp ; call 0x210483f1
0x0000000000416b18 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000405201 : add byte ptr [rax - 0x77], cl ; call 0x10028b59
0x0000000000420bb6 : add byte ptr [rax - 0x77], cl ; fsubr st(1) ; ret 0xffff
0x0000000000414b1d : add byte ptr [rax - 0x77], cl ; jge 0x414b20 ; pop rbp ; ret
0x0000000000404204 : add byte ptr [rax - 0x77], cl ; push rbp ; fmul dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000041c915 : add byte ptr [rax - 0x77], cl ; ret 0x42e8
0x000000000040caf6 : add byte ptr [rax - 0x77], cl ; ret 0x61e8
0x0000000000403297 : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000041c89c : add byte ptr [rax - 0x77], cl ; ret 0xbbe8
0x000000000040c665 : add byte ptr [rax - 0x77], cl ; ret 0xf2e8
0x000000000042516b : add byte ptr [rax - 7], dh ; std ; call qword ptr [rax]
0x000000000042515b : add byte ptr [rax], ah ; idiv ebp ; call rax
0x00000000004252ea : add byte ptr [rax], al ; adc byte ptr [rax - 2], ch ; call qword ptr [rax]
0x00000000004274c1 : add byte ptr [rax], al ; add ah, al ; sbb byte ptr [rax], al ; add byte ptr [rax], ch ; ret
0x0000000000425ca5 : add byte ptr [rax], al ; add al, bl ; sar ch, 1 ; jmp rdx
0x000000000041d335 : add byte ptr [rax], al ; add al, ch ; ret
0x0000000000407646 : add byte ptr [rax], al ; add al, ch ; ret 0xffac
0x0000000000421d9d : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040c1b2 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x4a8b
0x000000000040c16a : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8b48
0x000000000041f573 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; loopne 0x41f5e0 ; ret
0x0000000000420297 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbp ; call 0x210483f3
0x00000000004051ff : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; call 0x10028b5b
0x0000000000420bb4 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fsubr st(1) ; ret 0xffff
0x0000000000414b1b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jge 0x414b22 ; pop rbp ; ret
0x000000000040caf4 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x61e8
0x0000000000403295 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000040c663 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xf2e8
0x0000000000421d9b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000400998 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x000000000040099a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x0000000000403d9a : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040ef0d : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000413f10 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000417849 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000414b1a : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000041f572 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x20] ; pop rbp ; ret
0x0000000000413ece : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000421d9c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040099c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x000000000040b4f7 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040a5fb : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7038b], cl ; ret 0xb0
0x0000000000404825 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b72b8b], cl ; ret 0xb0
0x00000000004048cd : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7378b], cl ; ret 0xb0
0x000000000042532a : add byte ptr [rax], al ; add byte ptr [rbx - 2], ch ; call qword ptr [rax]
0x00000000004186fc : add byte ptr [rax], al ; add byte ptr [rcx - 0x100f43], al ; jmp qword ptr [rsi]
0x0000000000421695 : add byte ptr [rax], al ; add byte ptr [rcx - 0xdf43], al ; call qword ptr [rax]
0x000000000042525a : add byte ptr [rax], al ; add byte ptr [rcx - 2], bl ; call rax
0x0000000000417925 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0xf40
0x000000000042599a : add byte ptr [rax], al ; add byte ptr [rdi + rdi*8], bh ; call rax
0x0000000000410c16 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0x5588
0x0000000000410fbb : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0x9588
0x0000000000414f2f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000040d94d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf280
0x0000000000409556 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000410cff : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x0000000000411255 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x000000000041364e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040c8f2 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000404c59 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf280
0x000000000042511a : add byte ptr [rax], al ; add cl, dh ; std ; call rax
0x000000000042512a : add byte ptr [rax], al ; add dl, dh ; std ; call qword ptr [rax]
0x0000000000425d62 : add byte ptr [rax], al ; add dword ptr fs:[rax], eax ; add byte ptr [rax - 0x1e], bh ; std ; call rax
0x0000000000403d9c : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040ef0f : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040473c : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402293 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000428722 : add byte ptr [rax], al ; and al, 0x2b ; add byte ptr [rax], al ; sub byte ptr [rbx - 1], bh ; call rbx
0x000000000042515a : add byte ptr [rax], al ; and bh, dh ; std ; call rax
0x00000000004258ea : add byte ptr [rax], al ; and dil, dil ; call qword ptr [rax]
0x00000000004265a6 : add byte ptr [rax], al ; call 0x14426407
0x0000000000427446 : add byte ptr [rax], al ; call 0x23427312
0x0000000000427186 : add byte ptr [rax], al ; call 0xffffffffd342704c
0x0000000000426b66 : add byte ptr [rax], al ; call 0xffffffffd44269ec
0x0000000000428386 : add byte ptr [rax], al ; call 0xffffffffe14282b5
0x0000000000427a66 : add byte ptr [rax], al ; clc ; loop 0x427a6e ; call rsp
0x000000000042599b : add byte ptr [rax], al ; cmp al, -1 ; call rax
0x0000000000426966 : add byte ptr [rax], al ; cwde ; jb 0x42696e ; call rdi
0x0000000000425ca6 : add byte ptr [rax], al ; fcom st(0) ; std ; jmp rdx
0x0000000000426786 : add byte ptr [rax], al ; fsubr dword ptr [rax - 2] ; call qword ptr [rsi]
0x000000000042511b : add byte ptr [rax], al ; int1 ; std ; call rax
0x00000000004023e9 : add byte ptr [rax], al ; jmp 0x4022a9
0x000000000042516a : add byte ptr [rax], al ; jo 0x42516c ; std ; call qword ptr [rax]
0x0000000000425d66 : add byte ptr [rax], al ; js 0x425d51 ; std ; call rax
0x000000000042565b : add byte ptr [rax], al ; loope 0x425661 ; call rax
0x000000000041914c : add byte ptr [rax], al ; mov al, sil ; movzx eax, al ; pop rbp ; ret
0x00000000004190cd : add byte ptr [rax], al ; mov ax, si ; movzx eax, ax ; pop rbp ; ret
0x000000000041f6bf : add byte ptr [rax], al ; mov dword ptr [rbp - 4], eax ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000041a861 : add byte ptr [rax], al ; mov dword ptr [rdi], eax ; pop rbp ; ret
0x0000000000413f12 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x000000000041784b : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004147aa : add byte ptr [rax], al ; mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004148dd : add byte ptr [rax], al ; mov eax, edi ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000414a39 : add byte ptr [rax], al ; mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b7cd : add byte ptr [rax], al ; mov eax, esi ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000414851 : add byte ptr [rax], al ; mov eax, esi ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000414b1c : add byte ptr [rax], al ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000411922 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000041f574 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x20] ; pop rbp ; ret
0x0000000000425ca2 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add al, bl ; sar ch, 1 ; jmp rdx
0x00000000004278a2 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; sbb al, 0 ; add byte ptr [rax], ch ; sar dh, cl ; call qword ptr [rdx]
0x00000000004255da : add byte ptr [rax], al ; or al, 0xfe ; call rax
0x0000000000426a46 : add byte ptr [rax], al ; or byte ptr [rdi - 2], dh ; call qword ptr [rdx]
0x00000000004255ea : add byte ptr [rax], al ; or cl, 0xfe ; call qword ptr [rax]
0x00000000004256ea : add byte ptr [rax], al ; out -2, eax ; call qword ptr [rax]
0x0000000000403f91 : add byte ptr [rax], al ; pop rbp ; ret
0x00000000004169db : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004094d5 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000410b50 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000042576a : add byte ptr [rax], al ; push rax ; idiv esi ; call qword ptr [rax]
0x000000000042558a : add byte ptr [rax], al ; push rax ; ret 0xfffe
0x000000000042561a : add byte ptr [rax], al ; rcr bl, -2 ; call rax
0x00000000004258da : add byte ptr [rax], al ; rcr byte ptr [rdi], -1 ; call rax
0x00000000004250ea : add byte ptr [rax], al ; rcr ch, -3 ; call qword ptr [rax]
0x0000000000421d9e : add byte ptr [rax], al ; ret
0x000000000040099e : add byte ptr [rax], al ; ret 3
0x00000000004251ea : add byte ptr [rax], al ; sar byte ptr [rcx], -2 ; call qword ptr [rax]
0x000000000042536a : add byte ptr [rax], al ; sar byte ptr [rdx - 2], 1 ; call qword ptr [rax]
0x00000000004256da : add byte ptr [rax], al ; shl ch, -2 ; call rax
0x0000000000426b62 : add byte ptr [rax], al ; sldt word ptr fs:[rax] ; call 0xffffffffd44269f0
0x000000000042512b : add byte ptr [rax], al ; std ; call qword ptr [rax]
0x0000000000428726 : add byte ptr [rax], al ; sub byte ptr [rbx - 1], bh ; call rbx
0x0000000000426266 : add byte ptr [rax], al ; sub byte ptr [rdi - 2], al ; call qword ptr [rcx]
0x0000000000425cc6 : add byte ptr [rax], al ; test al, -0x2f ; std ; jmp rcx
0x0000000000427882 : add byte ptr [rax], al ; test byte ptr [rax + rax], bl ; add byte ptr [rax], ch ; sar dh, cl ; call qword ptr [rdx]
0x0000000000426782 : add byte ptr [rax], al ; test byte ptr [rbx], cl ; add byte ptr [rax], al ; fsubr dword ptr [rax - 2] ; call qword ptr [rsi]
0x0000000000428382 : add byte ptr [rax], al ; test byte ptr [rdi], ah ; add byte ptr [rax], al ; call 0xffffffffe14282b9
0x0000000000426a82 : add byte ptr [rax], al ; test byte ptr [rsi], cl ; add byte ptr [rax], al ; or byte ptr [rdi - 2], dh ; call qword ptr [rdx]
0x00000000004259ea : add byte ptr [rax], al ; xor byte ptr [rax - 1], al ; call qword ptr [rax]
0x000000000042535a : add byte ptr [rax], al ; xor byte ptr [rbp - 2], dh ; call rax
0x00000000004251da : add byte ptr [rax], al ; xor byte ptr [rcx], 0xfe ; call rax
0x0000000000427027 : add byte ptr [rax], bl ; test al, -2 ; jmp qword ptr [rdi]
0x00000000004261c7 : add byte ptr [rax], bl ; xor edi, esi ; jmp rax
0x0000000000428727 : add byte ptr [rax], ch ; jnp 0x42872e ; call rbx
0x00000000004274c7 : add byte ptr [rax], ch ; ret
0x0000000000427887 : add byte ptr [rax], ch ; sar dh, cl ; call qword ptr [rdx]
0x0000000000426a47 : add byte ptr [rax], cl ; ja 0x426a4d ; call qword ptr [rdx]
0x0000000000426a67 : add byte ptr [rax], cl ; ja 0x426a6d ; call qword ptr [rdx]
0x0000000000426a87 : add byte ptr [rax], cl ; ja 0x426a8d ; call qword ptr [rdx]
0x000000000042586b : add byte ptr [rax], dh ; adc bh, bh ; call qword ptr [rax]
0x000000000042535b : add byte ptr [rax], dh ; jne 0x425361 ; call rax
0x000000000042556b : add byte ptr [rax], dh ; mov bl, -2 ; call qword ptr [rax]
0x000000000042541b : add byte ptr [rax], dh ; mov esi, dr1 ; call rax
0x00000000004255a3 : add byte ptr [rax], dh ; ret
0x00000000004253eb : add byte ptr [rax], dh ; test edi, esi ; call qword ptr [rax]
0x000000000042575b : add byte ptr [rax], dl ; idiv esi ; call rax
0x000000000042591b : add byte ptr [rax], dl ; sub bh, bh ; call rax
0x00000000004169dc : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004094d6 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000410b51 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000428723 : add byte ptr [rbx + rbp], ah ; add byte ptr [rax], al ; sub byte ptr [rbx - 1], bh ; call rbx
0x000000000040a5fd : add byte ptr [rbx - 0x76b7038b], cl ; ret 0xb0
0x0000000000404827 : add byte ptr [rbx - 0x76b72b8b], cl ; ret 0xb0
0x0000000000404885 : add byte ptr [rbx - 0x76b7338b], cl ; ret 0xb0
0x00000000004048cf : add byte ptr [rbx - 0x76b7378b], cl ; ret 0xb0
0x000000000042532c : add byte ptr [rbx - 2], ch ; call qword ptr [rax]
0x000000000041f6c0 : add byte ptr [rcx + 0x458bfc45], cl ; cld ; pop rbp ; ret
0x0000000000425d63 : add byte ptr [rcx + rax], ah ; add byte ptr [rax - 0x1e], bh ; std ; call rax
0x00000000004186fe : add byte ptr [rcx - 0x100f43], al ; jmp qword ptr [rsi]
0x0000000000421506 : add byte ptr [rcx - 0xdf43], al ; call qword ptr [rax]
0x000000000042525c : add byte ptr [rcx - 2], bl ; call rax
0x000000000041853d : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000402b48 : add byte ptr [rcx], al ; ret
0x0000000000417927 : add byte ptr [rcx], bh ; ret 0xf40
0x0000000000426b63 : add byte ptr [rdi + rcx], ah ; add al, ch ; jp 0x426b71 ; call rbx
0x000000000042599c : add byte ptr [rdi + rdi*8], bh ; call rax
0x0000000000414a6a : add byte ptr [rdi], cl ; mov bh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000410c18 : add byte ptr [rdi], cl ; pushfq ; ret 0x5588
0x0000000000410fbd : add byte ptr [rdi], cl ; pushfq ; ret 0x9588
0x0000000000414f31 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000040d94f : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf280
0x0000000000409558 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000410d01 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x0000000000411257 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x0000000000413650 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040c8f4 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000404c5b : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf280
0x000000000040e40d : add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x0000000000427a63 : add byte ptr [rsi + rbx], ah ; add al, bh ; loop 0x427a71 ; call rsp
0x0000000000426a63 : add byte ptr [rsi + rcx], ah ; add byte ptr [rax], cl ; ja 0x426a71 ; call qword ptr [rdx]
0x0000000000426a43 : add byte ptr [rsi + rcx], al ; add byte ptr [rax], cl ; ja 0x426a51 ; call qword ptr [rdx]
0x0000000000425999 : add byte ptr cs:[rax], al ; add byte ptr [rdi + rdi*8], bh ; call rax
0x0000000000407693 : add cl, ch ; ret
0x000000000042511c : add cl, dh ; std ; call rax
0x000000000042512c : add dl, dh ; std ; call qword ptr [rax]
0x000000000041020c : add dword ptr [rax + 0xf], eax ; mov dh, -0x39 ; pop rbp ; ret
0x0000000000425d65 : add dword ptr [rax], eax ; add byte ptr [rax - 0x1e], bh ; std ; call rax
0x0000000000412d38 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004169da : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004094d4 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000410b4f : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004215c0 : add dword ptr [rax], eax ; add byte ptr [rcx - 0xdf43], al ; call qword ptr [rax]
0x000000000040ccb4 : add dword ptr [rax], eax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040bc25 : add dword ptr [rcx + rax], esp ; movzx eax, al ; pop rbp ; ret
0x000000000040b83b : add dword ptr [rdi], ecx ; mov dh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403fcc : add dword ptr [rdi], ecx ; mov dh, -0x3f ; pop rbp ; ret
0x000000000040579b : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040429f : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004047c1 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004044ef : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000404684 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000404a15 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040821c : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000408288 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x9588
0x0000000000408743 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xe280
0x0000000000425d64 : add dword ptr fs:[rax], eax ; add byte ptr [rax - 0x1e], bh ; std ; call rax
0x0000000000402b44 : add eax, 0x2269ce ; add ebx, esi ; ret
0x00000000004145a1 : add eax, 0x48000000 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040a607 : add eax, 0x48ffff83 ; add esp, 0x10 ; pop rbp ; ret
0x000000000041b163 : add eax, 0x8301148b ; ret 0x89ee
0x000000000041d334 : add eax, 0xe8000000 ; ret
0x000000000041a6c6 : add eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040e59c : add eax, ecx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402b0b : add eax, edx ; sar rax, 1 ; jne 0x402b1c ; pop rbp ; ret
0x0000000000402b49 : add ebx, esi ; ret
0x000000000042519d : add edi, esi ; call rax
0x000000000040ac40 : add esi, eax ; mov rax, rsi ; pop rbp ; ret
0x0000000000402d4b : add esp, 0x10 ; pop rbp ; ret
0x000000000041853b : add esp, 0x100 ; pop rbp ; ret
0x00000000004188bc : add esp, 0x1030 ; pop rbp ; ret
0x000000000040c2ae : add esp, 0x1070 ; pop rbp ; ret
0x000000000041641a : add esp, 0x120 ; pop rbp ; ret
0x0000000000419d4c : add esp, 0x130 ; pop rbp ; ret
0x0000000000412aa4 : add esp, 0x138 ; pop rbx ; pop rbp ; ret
0x0000000000410b4c : add esp, 0x158 ; pop rbx ; pop rbp ; ret
0x000000000041398c : add esp, 0x170 ; pop rbp ; ret
0x0000000000421e3b : add esp, 0x18 ; ret
0x00000000004051c7 : add esp, 0x180 ; pop rbp ; ret
0x0000000000408892 : add esp, 0x190 ; pop rbp ; ret
0x000000000040543f : add esp, 0x1a0 ; pop rbp ; ret
0x000000000040d82f : add esp, 0x1b0 ; pop rbp ; ret
0x000000000042023e : add esp, 0x1b8 ; pop rbp ; ret
0x0000000000421d1b : add esp, 0x1c0 ; pop rbp ; ret
0x00000000004155d3 : add esp, 0x1d0 ; pop rbp ; ret
0x0000000000417cfe : add esp, 0x1e0 ; pop rbp ; ret
0x00000000004042a4 : add esp, 0x20 ; pop rbp ; ret
0x0000000000402e5d : add esp, 0x30 ; pop rbp ; ret
0x00000000004044f4 : add esp, 0x40 ; pop rbp ; ret
0x0000000000404246 : add esp, 0x48 ; pop rbx ; pop rbp ; ret
0x0000000000419582 : add esp, 0x480 ; pop rbp ; ret
0x0000000000404689 : add esp, 0x50 ; pop rbp ; ret
0x000000000040c735 : add esp, 0x60 ; pop rbp ; ret
0x00000000004055d4 : add esp, 0x68 ; pop rbx ; pop rbp ; ret
0x0000000000404a1a : add esp, 0x70 ; pop rbp ; ret
0x0000000000412c5e : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000408ca9 : add esp, 0x80 ; pop rbp ; ret
0x0000000000418a43 : add esp, 0x820 ; pop rbp ; ret
0x000000000040a963 : add esp, 0x90 ; pop rbp ; ret
0x00000000004113d0 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040cb73 : add esp, 0xb0 ; pop rbp ; ret
0x000000000040f97c : add esp, 0xc0 ; pop rbp ; ret
0x000000000040443f : add esp, 0xd0 ; pop rbp ; ret
0x0000000000403f8d : add esp, 0xe0 ; pop rbp ; ret
0x000000000041a059 : add esp, 0xf0 ; pop rbp ; ret
0x0000000000402296 : add esp, 8 ; ret
0x000000000041a6c5 : add rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040e59b : add rax, rcx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402b0a : add rax, rdx ; sar rax, 1 ; jne 0x402b1d ; pop rbp ; ret
0x000000000040ac3f : add rsi, rax ; mov rax, rsi ; pop rbp ; ret
0x0000000000402d4a : add rsp, 0x10 ; pop rbp ; ret
0x000000000041853a : add rsp, 0x100 ; pop rbp ; ret
0x00000000004188bb : add rsp, 0x1030 ; pop rbp ; ret
0x000000000040c2ad : add rsp, 0x1070 ; pop rbp ; ret
0x0000000000416419 : add rsp, 0x120 ; pop rbp ; ret
0x0000000000419d4b : add rsp, 0x130 ; pop rbp ; ret
0x0000000000412aa3 : add rsp, 0x138 ; pop rbx ; pop rbp ; ret
0x0000000000410b4b : add rsp, 0x158 ; pop rbx ; pop rbp ; ret
0x000000000041398b : add rsp, 0x170 ; pop rbp ; ret
0x0000000000421e3a : add rsp, 0x18 ; ret
0x00000000004051c6 : add rsp, 0x180 ; pop rbp ; ret
0x0000000000408891 : add rsp, 0x190 ; pop rbp ; ret
0x000000000040543e : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000040d82e : add rsp, 0x1b0 ; pop rbp ; ret
0x000000000042023d : add rsp, 0x1b8 ; pop rbp ; ret
0x0000000000421d1a : add rsp, 0x1c0 ; pop rbp ; ret
0x00000000004155d2 : add rsp, 0x1d0 ; pop rbp ; ret
0x0000000000417cfd : add rsp, 0x1e0 ; pop rbp ; ret
0x00000000004042a3 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000402e5c : add rsp, 0x30 ; pop rbp ; ret
0x00000000004044f3 : add rsp, 0x40 ; pop rbp ; ret
0x0000000000404245 : add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x0000000000419581 : add rsp, 0x480 ; pop rbp ; ret
0x0000000000404688 : add rsp, 0x50 ; pop rbp ; ret
0x000000000040c734 : add rsp, 0x60 ; pop rbp ; ret
0x00000000004055d3 : add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x0000000000404a19 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000412c5d : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000408ca8 : add rsp, 0x80 ; pop rbp ; ret
0x0000000000418a42 : add rsp, 0x820 ; pop rbp ; ret
0x000000000040a962 : add rsp, 0x90 ; pop rbp ; ret
0x00000000004113cf : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040cb72 : add rsp, 0xb0 ; pop rbp ; ret
0x000000000040f97b : add rsp, 0xc0 ; pop rbp ; ret
0x000000000040443e : add rsp, 0xd0 ; pop rbp ; ret
0x0000000000403f8c : add rsp, 0xe0 ; pop rbp ; ret
0x000000000041a058 : add rsp, 0xf0 ; pop rbp ; ret
0x0000000000402295 : add rsp, 8 ; ret
0x0000000000428724 : and al, 0x2b ; add byte ptr [rax], al ; sub byte ptr [rbx - 1], bh ; call rbx
0x00000000004283a9 : and al, 0xffffffffffffffff ; call qword ptr [rdi]
0x000000000040821b : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000425699 : and al, byte ptr [rax] ; add al, ah ; loop 0x4256a3 ; call rax
0x0000000000402b47 : and al, byte ptr [rax] ; add ebx, esi ; ret
0x000000000041020a : and bh, 1 ; movzx eax, dil ; pop rbp ; ret
0x00000000004258ed : and bh, bh ; call qword ptr [rax]
0x000000000042515c : and bh, dh ; std ; call rax
0x0000000000425629 : and byte ptr [rax], al ; add al, ah ; fdiv st(6), st(0) ; call qword ptr [rax]
0x000000000041a85f : and byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], eax ; pop rbp ; ret
0x0000000000418a45 : and byte ptr [rax], cl ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041641c : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000403fca : and cl, 1 ; movzx eax, cl ; pop rbp ; ret
0x0000000000410209 : and dil, 1 ; movzx eax, dil ; pop rbp ; ret
0x00000000004258ec : and dil, dil ; call qword ptr [rax]
0x0000000000425659 : and dword ptr [rax], eax ; add byte ptr [rax], al ; loope 0x425663 ; call rax
0x00000000004061d5 : and eax, 0x4234d4 ; call 0x4024d7
0x000000000040e975 : and eax, 0x424000 ; mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x0000000000413067 : and eax, 0x48fffffd ; add esp, 0x20 ; pop rbp ; ret
0x000000000040cf0f : and eax, 0x62b978 ; pop rbp ; ret
0x000000000040d06f : and eax, 0x62b980 ; pop rbp ; ret
0x000000000040d093 : and eax, 0x62b988 ; pop rbp ; ret
0x00000000004256d9 : and eax, dword ptr [rax] ; add al, al ; in eax, -2 ; call rax
0x0000000000428389 : and edi, edi ; jmp rax
0x0000000000405205 : call 0x10028b55
0x0000000000405204 : call 0x10028b56
0x00000000004265a8 : call 0x14426405
0x000000000042029d : call 0x210483ed
0x0000000000427448 : call 0x23427310
0x0000000000416527 : call 0x402309
0x00000000004061da : call 0x4024d2
0x0000000000416480 : call 0x402712
0x0000000000405b49 : call 0x421dd2
0x0000000000415bad : call 0x421de2
0x0000000000405b64 : call 0x421df2
0x0000000000421a60 : call 0x4853a5b3
0x0000000000421a5f : call 0x4853a5b4
0x0000000000413e50 : call 0xffffffff838a3e5b
0x0000000000408964 : call 0xffffffffd08612b7
0x0000000000427188 : call 0xffffffffd342704a
0x0000000000426b68 : call 0xffffffffd44269ea
0x0000000000428388 : call 0xffffffffe14282b3
0x0000000000412ad9 : call 0xffffffffe903b429
0x0000000000412ad8 : call 0xffffffffe903b42a
0x0000000000411828 : call 0xffffffffff51db17
0x000000000040ee61 : call 0xffffffffff7a79b2
0x000000000040ee60 : call 0xffffffffff7a79b3
0x000000000040ef9f : call 0xffffffffff7a7af0
0x000000000040ef9e : call 0xffffffffff7a7af1
0x00000000004043b6 : call 0xffffffffff7cf94f
0x0000000000421d79 : call qword ptr [r12 + rbx*8]
0x0000000000421450 : call qword ptr [rax]
0x000000000042172c : call qword ptr [rbx]
0x000000000042168e : call qword ptr [rcx]
0x00000000004283ab : call qword ptr [rdi]
0x000000000041b38e : call qword ptr [rdx]
0x00000000004216c3 : call qword ptr [rsi]
0x0000000000421d7a : call qword ptr [rsp + rbx*8]
0x0000000000410885 : call r8
0x000000000042559f : call rax
0x0000000000426b6b : call rbx
0x000000000042696b : call rdi
0x000000000042718b : call rdx
0x0000000000426b8b : call rsp
0x000000000041012d : clc ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000419d4a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x000000000040e63e : clc ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040ba83 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040e8dd : clc ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000419580 : clc ; add rsp, 0x480 ; pop rbp ; ret
0x0000000000418beb : clc ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040c733 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040c5d7 : clc ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040df6d : clc ; add rsp, 0x80 ; pop rbp ; ret
0x00000000004113ce : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x0000000000410066 : clc ; add rsp, 0xc0 ; pop rbp ; ret
0x00000000004112ee : clc ; add rsp, 0xe0 ; pop rbp ; ret
0x0000000000415bac : clc ; call 0x421de3
0x00000000004188f8 : clc ; idiv edi ; call rax
0x0000000000402b0f : clc ; jne 0x402b18 ; pop rbp ; ret
0x0000000000427a68 : clc ; loop 0x427a6c ; call rsp
0x0000000000411a65 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040a997 : clc ; mov dword ptr [rbp - 0xc], esi ; mov qword ptr [rbp - 0x18], rdx ; pop rbp ; ret
0x0000000000413ecb : clc ; mov dword ptr [rdi], 0 ; pop rbp ; ret
0x000000000041a61b : clc ; mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x000000000041f3eb : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000041009e : clc ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000403db7 : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040e15b : clc ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040e17b : clc ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040e19b : clc ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000414abb : clc ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000414afb : clc ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000414adb : clc ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000041ef33 : clc ; mov rsp, rbp ; pop rbp ; ret
0x0000000000403dbb : clc ; pop rbp ; ret
0x0000000000417848 : cld ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000402d77 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000418539 : cld ; add rsp, 0x100 ; pop rbp ; ret
0x00000000004188ba : cld ; add rsp, 0x1030 ; pop rbp ; ret
0x0000000000416418 : cld ; add rsp, 0x120 ; pop rbp ; ret
0x0000000000415d52 : cld ; add rsp, 0x1b0 ; pop rbp ; ret
0x000000000042023c : cld ; add rsp, 0x1b8 ; pop rbp ; ret
0x0000000000421d19 : cld ; add rsp, 0x1c0 ; pop rbp ; ret
0x00000000004155d1 : cld ; add rsp, 0x1d0 ; pop rbp ; ret
0x000000000040b544 : cld ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000417f24 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004144e9 : cld ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041a600 : cld ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000418a41 : cld ; add rsp, 0x820 ; pop rbp ; ret
0x000000000040a961 : cld ; add rsp, 0x90 ; pop rbp ; ret
0x000000000040cb71 : cld ; add rsp, 0xb0 ; pop rbp ; ret
0x000000000040f97a : cld ; add rsp, 0xc0 ; pop rbp ; ret
0x00000000004177dd : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000041f3e8 : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000417d63 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040b541 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000417f21 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000418253 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000411306 : cld ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000411309 : cld ; pop rbp ; ret
0x0000000000414667 : cmp al, -0x36 ; mov rdx, qword ptr [rbp - 0x20] ; call rax
0x000000000042599d : cmp al, -1 ; call rax
0x000000000041652e : cmp al, 0x25 ; ret 0x4248
0x0000000000412aa6 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000041a224 : cmp dh, -1 ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040e87a : cmp dword ptr [rax - 0x75], ecx ; jne 0x40e864 ; call rax
0x0000000000402acd : cmp eax, 0xe ; mov rbp, rsp ; ja 0x402ae0 ; pop rbp ; ret
0x000000000040a608 : cmp edi, -1 ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004251ed : cmp esi, edi ; call qword ptr [rax]
0x0000000000426968 : cwde ; jb 0x42696c ; call rdi
0x000000000041651c : cwde ; mov rcx, qword ptr [rax*8 + 0x424790] ; jmp rcx
0x0000000000415b55 : dec dword ptr [rax + 0x3b] ; or byte ptr [r15], cl ; sahf ; ret 0xe280
0x0000000000415b6c : dec dword ptr [rax + 0x3b] ; sbb byte ptr [r15], cl ; sahf ; ret 0xe280
0x000000000041652b : dec dword ptr [rax - 0x73] ; cmp al, 0x25 ; ret 0x4248
0x000000000040b779 : dec dword ptr [rax - 0x75] ; clc ; pop rbp ; ret
0x0000000000405b44 : dec dword ptr [rax - 0x75] ; jge 0x405b28 ; call 0x421dd7
0x0000000000405b5f : dec dword ptr [rax - 0x75] ; jge 0x405b43 ; call 0x421df7
0x000000000041b188 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; or byte ptr [rsi + 0x42], 0 ; jmp rcx
0x000000000040b2f6 : dec dword ptr [rax - 0x77] ; ret 0x41e8
0x000000000041be1c : dec dword ptr [rax - 0x77] ; ret 0x8148
0x00000000004067c4 : dec dword ptr [rax - 0x77] ; ret 0x83e8
0x0000000000406b3d : dec dword ptr [rax - 0x77] ; ret 0xae8
0x00000000004043bc : dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000419caf : dec dword ptr [rax - 0x7f] ; ret 1
0x0000000000415ba9 : dec dword ptr [rbx + 0x2ee8f87d] ; ret 0
0x0000000000407e1c : dec dword ptr [rbx - 0x19773] ; jmp qword ptr [rcx]
0x00000000004159fe : dec dword ptr [rbx - 0x26170783] ; ret
0x0000000000406e48 : dec dword ptr [rbx - 0x68773] ; jmp qword ptr [rcx]
0x00000000004039a7 : dec dword ptr [rcx - 0x76397639] ; ret 0x2de8
0x00000000004211c2 : dec dword ptr [rcx] ; ret 0x9589
0x000000000040bb10 : div dword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000040bb0f : div qword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x0000000000418059 : enter -0x3577, -0x7f ; ret 0xffff
0x0000000000412b8b : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000040e877 : enter -0x74b8, 0x39 ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x0000000000405513 : enter -0x74b8, 0x7d ; fsubr st(0) ; ret
0x0000000000408de4 : enter -0x7cb8, -0x3c ; pop rbp ; ret
0x0000000000419f57 : fadd qword ptr [rcx - 0xa] ; jmp qword ptr [rcx]
0x0000000000425ca8 : fcom st(0) ; std ; jmp rdx
0x00000000004250dd : fdiv st(5), st(0) ; call rax
0x000000000042562d : fdiv st(6), st(0) ; call qword ptr [rax]
0x0000000000418a82 : fiadd dword ptr [rdi] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408284 : fmul dword ptr [r8 + 0x3b] ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x9588
0x0000000000408285 : fmul dword ptr [rax + 0x3b] ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x9588
0x00000000004124c3 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000404208 : fmul dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000404733 : fmul dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004078f6 : fmul dword ptr [rbx - 0x74b4b] ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000421d7c : fmul qword ptr [rax - 0x7d] ; ret
0x000000000040a986 : fsub dword ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000040a987 : fsub dword ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x0000000000426788 : fsubr dword ptr [rax - 2] ; call qword ptr [rsi]
0x0000000000405517 : fsubr st(0) ; ret
0x0000000000420bba : fsubr st(1) ; ret 0xffff
0x0000000000402d49 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040a99a : hlt ; mov qword ptr [rbp - 0x18], rdx ; pop rbp ; ret
0x0000000000402ae0 : hlt ; pop rbp ; mov edi, 0x6294c0 ; jmp rax
0x0000000000413f16 : hlt ; pop rbp ; ret
0x000000000042515d : idiv ebp ; call rax
0x00000000004188f9 : idiv edi ; call rax
0x000000000042576d : idiv esi ; call qword ptr [rax]
0x000000000042575d : idiv esi ; call rax
0x000000000040d8e6 : imul byte ptr [rdx] ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004046d3 : in al, 0x48 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040a667 : in al, dx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041a193 : in al, dx ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041ef36 : in al, dx ; pop rbp ; ret
0x000000000040bc23 : in eax, -0x50 ; add dword ptr [rcx + rax], esp ; movzx eax, al ; pop rbp ; ret
0x0000000000411303 : in eax, -0x77 ; jge 0x41130b ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004256dd : in eax, -2 ; call rax
0x00000000004147c3 : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x0000000000419314 : inc dword ptr [rcx - 0x46343] ; jmp qword ptr [rdx]
0x0000000000406f76 : inc dword ptr [rcx - 0xf] ; jmp qword ptr [rcx]
0x0000000000416b20 : int 0x80
0x00000000004061db : int1 ; ret 0xffff
0x000000000042511d : int1 ; std ; call rax
0x0000000000402ad3 : ja 0x402ada ; pop rbp ; ret
0x00000000004100a1 : ja 0x4100ee ; pop rbp ; ret
0x000000000041523a : ja 0x41524e ; xchg eax, esp ; ret 0xe280
0x0000000000426a49 : ja 0x426a4b ; call qword ptr [rdx]
0x0000000000426a69 : ja 0x426a6b ; call qword ptr [rdx]
0x0000000000426a89 : ja 0x426a8b ; call qword ptr [rdx]
0x0000000000426969 : jb 0x42696b ; call rdi
0x0000000000402adf : je 0x402add ; pop rbp ; mov edi, 0x6294c0 ; jmp rax
0x000000000040bb9d : jg 0x40bbd7 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042539d : jg 0x42539f ; call rax
0x00000000004253ad : jg 0x4253af ; call qword ptr [rax]
0x0000000000403db6 : jge 0x403db7 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000405b47 : jge 0x405b25 ; call 0x421dd4
0x0000000000405b62 : jge 0x405b40 ; call 0x421df4
0x000000000040e15a : jge 0x40e15b ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040e17a : jge 0x40e17b ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040e19a : jge 0x40e19b ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000040e4f0 : jge 0x40e4e3 ; mov rcx, qword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040fa00 : jge 0x40f9f3 ; mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000041009d : jge 0x41009e ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000411305 : jge 0x411309 ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000413eca : jge 0x413ecd ; mov dword ptr [rdi], 0 ; pop rbp ; ret
0x00000000004147c6 : jge 0x4147c3 ; pop rbp ; ret
0x0000000000414aba : jge 0x414abb ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000414ada : jge 0x414adb ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000414afa : jge 0x414afb ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000414b20 : jge 0x414b1d ; pop rbp ; ret
0x0000000000415bab : jge 0x415ba9 ; call 0x421de4
0x000000000041933d : jge 0x419301 ; call rax
0x0000000000419459 : jge 0x419424 ; mov rsi, qword ptr [rbp - 0x460] ; call rax
0x00000000004194b6 : jge 0x41947a ; call rax
0x0000000000419534 : jge 0x4194f0 ; call rax
0x0000000000419566 : jge 0x419522 ; call rax
0x000000000041a61a : jge 0x41a61d ; mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x0000000000426ba9 : jl 0x426bab ; call rsp
0x000000000040bc14 : jle 0x40bc2d ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004023eb : jmp 0x4022a7
0x000000000040768f : jmp 0x407fb3
0x000000000040fbe1 : jmp 0x40fbe4
0x000000000041d333 : jmp 0x41d343
0x000000000040ed00 : jmp 0x49037650
0x000000000040f73e : jmp 0x4903808e
0x000000000040f7ab : jmp 0x490380fb
0x000000000040fee2 : jmp 0x49038832
0x000000000040ff4f : jmp 0x4903889f
0x00000000004141a1 : jmp 0xffffffff8a03caae
0x000000000041c93f : jmp 0xffffffff8a045257
0x0000000000425baf : jmp qword ptr [rax]
0x0000000000419f32 : jmp qword ptr [rbx]
0x0000000000403fb8 : jmp qword ptr [rcx]
0x000000000042644b : jmp qword ptr [rdi]
0x000000000041931a : jmp qword ptr [rdx]
0x0000000000418704 : jmp qword ptr [rsi]
0x0000000000402ae7 : jmp rax
0x000000000040313c : jmp rcx
0x0000000000402b27 : jmp rdx
0x00000000004267eb : jmp rsp
0x0000000000402b10 : jne 0x402b17 ; pop rbp ; ret
0x000000000040a999 : jne 0x40a996 ; mov qword ptr [rbp - 0x18], rdx ; pop rbp ; ret
0x000000000040bb11 : jne 0x40bb09 ; mov rax, rdx ; pop rbp ; ret
0x000000000040e566 : jne 0x40e551 ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000040e87d : jne 0x40e861 ; call rax
0x0000000000410292 : jne 0x41028a ; mov rax, rdx ; pop rbp ; ret
0x0000000000410553 : jne 0x410523 ; mov rdx, qword ptr [rbp - 0x28] ; call rax
0x0000000000413eb9 : jne 0x413e9d ; mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x0000000000415601 : jne 0x4155f9 ; mov rax, rdx ; pop rbp ; ret
0x0000000000419728 : jne 0x419720 ; mov rax, rdx ; pop rbp ; ret
0x000000000042535d : jne 0x42535f ; call rax
0x0000000000414bdb : jno 0x414c13 ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000426b89 : jnp 0x426b8b ; call rsp
0x0000000000428729 : jnp 0x42872c ; call rbx
0x0000000000404a1c : jo 0x404a7d ; ret
0x0000000000409161 : jo 0x4091c2 ; ret
0x000000000040c2b0 : jo 0x40c2c7 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040c5db : jo 0x40c63c ; ret
0x0000000000411bb5 : jo 0x411c16 ; ret
0x00000000004132c4 : jo 0x413325 ; ret
0x00000000004133fe : jo 0x41345f ; ret
0x000000000041398e : jo 0x413996 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000414adf : jo 0x414b40 ; ret
0x0000000000414ade : jo 0x414b41 ; ret
0x000000000041a604 : jo 0x41a665 ; ret
0x000000000042516c : jo 0x42516a ; std ; call qword ptr [rax]
0x0000000000425588 : jo 0x4255ad ; add byte ptr [rax], al ; push rax ; ret 0xfffe
0x000000000042536d : jp 0x42536f ; call qword ptr [rax]
0x0000000000426b69 : jp 0x426b6b ; call rbx
0x00000000004256ad : jrcxz 0x4256af ; call qword ptr [rax]
0x0000000000412c60 : js 0x412cc0 ; pop rbp ; ret
0x0000000000425d68 : js 0x425d4f ; std ; call rax
0x00000000004061d3 : lea edi, dword ptr [0x4234d4] ; call 0x4024d9
0x00000000004080d8 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004080d7 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000425628 : lock and byte ptr [rax], al ; add al, ah ; fdiv st(6), st(0) ; call qword ptr [rax]
0x0000000000425868 : lock sub dword ptr [rax], eax ; add byte ptr [rax], dh ; adc bh, bh ; call qword ptr [rax]
0x0000000000418fa9 : loop 0x418ffb ; or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x0000000000419091 : loop 0x4190e3 ; or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x000000000042569d : loop 0x42569f ; call rax
0x0000000000425d69 : loop 0x425d6a ; call rax
0x0000000000427a69 : loop 0x427a6b ; call rsp
0x0000000000403fcb : loope 0x403fd4 ; movzx eax, cl ; pop rbp ; ret
0x000000000040b5dc : loope 0x40b5e5 ; movzx eax, cl ; pop rbp ; ret
0x000000000042565d : loope 0x42565f ; call rax
0x000000000042566d : loope 0x42566f ; call qword ptr [rax]
0x0000000000403f8f : loopne 0x403f96 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000404df0 : loopne 0x404df7 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004062ad : loopne 0x40629a ; std ; ret
0x000000000040d5cb : loopne 0x40d61b ; add esp, 0x20 ; pop rbp ; ret
0x000000000040d5ca : loopne 0x40d61c ; add esp, 0x20 ; pop rbp ; ret
0x000000000040ddcf : loopne 0x40de1f ; add esp, 0x20 ; pop rbp ; ret
0x000000000040ddce : loopne 0x40de20 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040e07b : loopne 0x40e0cb ; add esp, 0x30 ; pop rbp ; ret
0x000000000040e07a : loopne 0x40e0cc ; add esp, 0x30 ; pop rbp ; ret
0x000000000040e13b : loopne 0x40e18b ; add esp, 0x30 ; pop rbp ; ret
0x000000000040e13a : loopne 0x40e18c ; add esp, 0x30 ; pop rbp ; ret
0x000000000040e567 : loopne 0x40e5b9 ; mov esi, eax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x00000000004112f2 : loopne 0x4112f9 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004177e1 : loopne 0x4177e8 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000417d00 : loopne 0x417d08 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041f579 : loopne 0x41f5da ; ret
0x000000000041f578 : loopne 0x41f5db ; ret
0x000000000040e46e : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040cb75 : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040b4f6 : mov al, 0 ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000041647e : mov al, 0 ; call 0x402714
0x0000000000425258 : mov al, 0x11 ; add byte ptr [rax], al ; add byte ptr [rcx - 2], bl ; call rax
0x0000000000425358 : mov al, 0x15 ; add byte ptr [rax], al ; xor byte ptr [rbp - 2], dh ; call rax
0x00000000004255d8 : mov al, 0x1f ; add byte ptr [rax], al ; or al, 0xfe ; call rax
0x0000000000425618 : mov al, 0x20 ; add byte ptr [rax], al ; rcr bl, -2 ; call rax
0x00000000004256d8 : mov al, 0x23 ; add byte ptr [rax], al ; shl ch, -2 ; call rax
0x00000000004258d8 : mov al, 0x2b ; add byte ptr [rax], al ; rcr byte ptr [rdi], -1 ; call rax
0x0000000000425998 : mov al, 0x2e ; add byte ptr [rax], al ; add byte ptr [rdi + rdi*8], bh ; call rax
0x000000000041319b : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000041302b : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000425118 : mov al, 0xc ; add byte ptr [rax], al ; add cl, dh ; std ; call rax
0x0000000000425158 : mov al, 0xd ; add byte ptr [rax], al ; and bh, dh ; std ; call rax
0x00000000004251d8 : mov al, 0xf ; add byte ptr [rax], al ; xor byte ptr [rcx], 0xfe ; call rax
0x000000000040d831 : mov al, 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040bc24 : mov al, 1 ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004164db : mov al, al ; call 0x402714
0x0000000000408218 : mov al, byte ptr [rbp - 0xa] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000408d38 : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040b7a6 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040abdb : mov al, byte ptr [rbp - 9] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041914f : mov al, dh ; movzx eax, al ; pop rbp ; ret
0x00000000004164da : mov al, r8b ; call 0x402715
0x000000000041914e : mov al, sil ; movzx eax, al ; pop rbp ; ret
0x00000000004190cf : mov ax, si ; movzx eax, ax ; pop rbp ; ret
0x0000000000414a6c : mov bh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004190d3 : mov bh, -0x40 ; pop rbp ; ret
0x000000000042556d : mov bl, -2 ; call qword ptr [rax]
0x000000000040d091 : mov byte ptr [0x62b988], al ; pop rbp ; ret
0x000000000040dccd : mov byte ptr [rbp - 1], 0x3f ; movsx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000408127 : mov byte ptr [rdx + 0x19], cl ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040dbe8 : mov byte ptr [rdx + 0xb], 0 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402b43 : mov byte ptr [rip + 0x2269ce], 1 ; ret
0x000000000042555d : mov cl, -2 ; call rax
0x000000000041020f : mov dh, -0x39 ; pop rbp ; ret
0x000000000040b83d : mov dh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403fce : mov dh, -0x3f ; pop rbp ; ret
0x000000000040579d : mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004042a1 : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004047c3 : mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004044f1 : mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000404686 : mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004055d1 : mov dh, -0x40 ; add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x0000000000404a17 : mov dh, -0x40 ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040821e : mov dh, -0x40 ; pop rbp ; ret
0x0000000000413eb6 : mov dh, -0xe ; mov dword ptr [rbp - 0x24], esi ; mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x000000000040cf0d : mov dword ptr [0x62b978], edi ; pop rbp ; ret
0x000000000040d06d : mov dword ptr [0x62b980], edi ; pop rbp ; ret
0x0000000000411a66 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000411974 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000411a28 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000041087f : mov dword ptr [rbp - 0x130], ecx ; call r8
0x000000000040ab6f : mov dword ptr [rbp - 0x18], eax ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040a99c : mov dword ptr [rbp - 0x18], edx ; pop rbp ; ret
0x00000000004196aa : mov dword ptr [rbp - 0x1c], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d5c9 : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000413eb8 : mov dword ptr [rbp - 0x24], esi ; mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x000000000040a985 : mov dword ptr [rbp - 0x28], eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000402e59 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000408de2 : mov dword ptr [rbp - 0x38], eax ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040e46c : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000418dfb : mov dword ptr [rbp - 0x50], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000402d47 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040a998 : mov dword ptr [rbp - 0xc], esi ; mov qword ptr [rbp - 0x18], rdx ; pop rbp ; ret
0x0000000000402d75 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041f6c1 : mov dword ptr [rbp - 4], eax ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000411304 : mov dword ptr [rbp - 4], edi ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000041f3e9 : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040cef1 : mov dword ptr [rbp - 8], eax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000417e55 : mov dword ptr [rbp - 8], ecx ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000403db5 : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004147c5 : mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x0000000000411ade : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405495 : mov dword ptr [rcx + 0x38], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004054e5 : mov dword ptr [rcx + 0x40], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000411680 : mov dword ptr [rcx], eax ; mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x000000000040e97a : mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x00000000004100a0 : mov dword ptr [rdi + 0x48], esi ; pop rbp ; ret
0x0000000000413ecc : mov dword ptr [rdi], 0 ; pop rbp ; ret
0x000000000041a61c : mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x000000000041a863 : mov dword ptr [rdi], eax ; pop rbp ; ret
0x000000000040bc13 : mov dword ptr [rsi + 0x10], edi ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000420240 : mov eax, 0x5d000001 ; ret
0x0000000000412c5c : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000408740 : mov eax, 0xf013b48 ; xchg eax, esp ; ret 0xe280
0x0000000000419338 : mov eax, dword ptr [rax + 0x10] ; mov rdi, qword ptr [rbp - 0x40] ; call rax
0x0000000000419561 : mov eax, dword ptr [rax + 0x18] ; mov rdi, qword ptr [rbp - 0x48] ; call rax
0x00000000004193c4 : mov eax, dword ptr [rax] ; mov rdi, qword ptr [rbp - 0x460] ; call rax
0x0000000000419530 : mov eax, dword ptr [rax] ; mov rdi, qword ptr [rbp - 0x48] ; call rax
0x0000000000411928 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040d2bd : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040d58c : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d27b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000411925 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000414b41 : mov eax, dword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040d50f : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040a665 : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d392 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004118dd : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041196e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040ab73 : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004046d1 : mov eax, dword ptr [rbp - 0x1c] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040ddcd : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040e079 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040e56c : mov eax, dword ptr [rbp - 0x20] ; call rax
0x000000000041f577 : mov eax, dword ptr [rbp - 0x20] ; pop rbp ; ret
0x000000000040c390 : mov eax, dword ptr [rbp - 0x24] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000411682 : mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x000000000040fc5f : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041417f : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000411a2a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000041473e : mov eax, dword ptr [rbp - 0x2c] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040b9bb : mov eax, dword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041647b : mov eax, dword ptr [rbp - 0x38] ; mov al, 0 ; call 0x402717
0x0000000000411baf : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000412c5a : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000413199 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000413f14 : mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000417d64 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040b542 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000417f22 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004144e7 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041a5fe : mov eax, dword ptr [rbp - 4] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000411307 : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000041012b : mov eax, dword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040e63c : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040ba81 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040e8db : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000418be9 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040c731 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040c5d5 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000041ef31 : mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000403db9 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040e15d : mov eax, dword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040e17d : mov eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040e19d : mov eax, dword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000414abd : mov eax, dword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000414afd : mov eax, dword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000414add : mov eax, dword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000404243 : mov eax, eax ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000004147ac : mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004148df : mov eax, edi ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000418f6e : mov eax, edi ; pop rbp ; ret
0x000000000040eb61 : mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040aa7d : mov eax, edx ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040bb14 : mov eax, edx ; pop rbp ; ret
0x000000000040b7cf : mov eax, esi ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000414853 : mov eax, esi ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004190d0 : mov eax, esi ; movzx eax, ax ; pop rbp ; ret
0x000000000040ac43 : mov eax, esi ; pop rbp ; ret
0x0000000000404242 : mov eax, r8d ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x0000000000416529 : mov ebp, 0x8d48fffe ; cmp al, 0x25 ; ret 0x4248
0x00000000004193c8 : mov ebp, 0xfffffba0 ; call rax
0x0000000000402b6b : mov ebp, esp ; call rax
0x0000000000402ad1 : mov ebp, esp ; ja 0x402adc ; pop rbp ; ret
0x0000000000411302 : mov ebp, esp ; mov dword ptr [rbp - 4], edi ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004147c2 : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000041a223 : mov ecx, 0x48fffe80 ; add esp, 0x10 ; pop rbp ; ret
0x0000000000403135 : mov ecx, dword ptr [rax*8 + 0x421e60] ; jmp rcx
0x00000000004110ee : mov ecx, dword ptr [rax*8 + 0x424030] ; jmp rcx
0x0000000000411c67 : mov ecx, dword ptr [rax*8 + 0x4240b0] ; jmp rcx
0x0000000000411f47 : mov ecx, dword ptr [rax*8 + 0x4240f8] ; jmp rcx
0x00000000004140b3 : mov ecx, dword ptr [rax*8 + 0x4245d8] ; jmp rcx
0x0000000000414351 : mov ecx, dword ptr [rax*8 + 0x424600] ; jmp rcx
0x000000000041451a : mov ecx, dword ptr [rax*8 + 0x424628] ; jmp rcx
0x000000000041651e : mov ecx, dword ptr [rax*8 + 0x424790] ; jmp rcx
0x000000000041761d : mov ecx, dword ptr [rax*8 + 0x424b00] ; jmp rcx
0x000000000041759d : mov ecx, dword ptr [rax*8 + 0x424b60] ; jmp rcx
0x000000000041cdb5 : mov ecx, dword ptr [rax*8 + 0x424df8] ; jmp rcx
0x000000000041b18a : mov ecx, dword ptr [rax*8 + 0x424e80] ; jmp rcx
0x000000000041f727 : mov ecx, dword ptr [rax*8 + 0x424ed0] ; jmp rcx
0x0000000000421442 : mov ecx, dword ptr [rax*8 + 0x424fa8] ; jmp rcx
0x0000000000411971 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040eec2 : mov ecx, dword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040ee5f : mov ecx, dword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000041167d : mov ecx, dword ptr [rbp - 0x20] ; mov dword ptr [rcx], eax ; mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x000000000040e4f3 : mov ecx, dword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040fa03 : mov ecx, dword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000041649e : mov ecx, dword ptr [rbp - 0x38] ; mov al, 0 ; call 0x402717
0x00000000004192eb : mov ecx, dword ptr [rbp - 0x48] ; call rax
0x000000000040fad0 : mov ecx, dword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000041900d : mov ecx, eax ; shl edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000418fdd : mov ecx, eax ; shr edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000402b65 : mov edi, 0x628e20 ; mov rbp, rsp ; call rax
0x0000000000402ae2 : mov edi, 0x6294c0 ; jmp rax
0x0000000000402b22 : mov edi, 0x6294c0 ; jmp rdx
0x0000000000405b46 : mov edi, dword ptr [rbp - 0x28] ; call 0x421dd5
0x0000000000405b61 : mov edi, dword ptr [rbp - 0x28] ; call 0x421df5
0x000000000041933c : mov edi, dword ptr [rbp - 0x40] ; call rax
0x00000000004193c7 : mov edi, dword ptr [rbp - 0x460] ; call rax
0x0000000000419533 : mov edi, dword ptr [rbp - 0x48] ; call rax
0x0000000000415baa : mov edi, dword ptr [rbp - 8] ; call 0x421de5
0x000000000041009c : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040e159 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040e179 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040e199 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000414ab9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000414af9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000414ad9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000040ee63 : mov edi, dword ptr [rcx] ; call rax
0x000000000040e879 : mov edi, dword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x0000000000414666 : mov edi, dword ptr [rdx + rcx*8] ; mov rdx, qword ptr [rbp - 0x20] ; call rax
0x0000000000421d77 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000421d76 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000425585 : mov edx, 0x1e70fffe ; add byte ptr [rax], al ; push rax ; ret 0xfffe
0x000000000041466a : mov edx, dword ptr [rbp - 0x20] ; call rax
0x0000000000410556 : mov edx, dword ptr [rbp - 0x28] ; call rax
0x00000000004192e7 : mov edx, dword ptr [rbp - 0x40] ; mov rcx, qword ptr [rbp - 0x48] ; call rax
0x0000000000414b45 : mov edx, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004164d8 : mov edx, eax ; mov al, r8b ; call 0x402717
0x000000000040e942 : mov esi, 0x48ffffff ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000042541d : mov esi, dr1 ; call rax
0x000000000040e87c : mov esi, dword ptr [rbp - 0x20] ; call rax
0x0000000000410552 : mov esi, dword ptr [rbp - 0x38] ; mov rdx, qword ptr [rbp - 0x28] ; call rax
0x000000000041945c : mov esi, dword ptr [rbp - 0x460] ; call rax
0x000000000040e4f7 : mov esi, dword ptr [rcx] ; call rax
0x0000000000402b20 : mov esi, eax ; mov edi, 0x6294c0 ; jmp rdx
0x000000000040e569 : mov esi, eax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000041ef35 : mov esp, ebp ; pop rbp ; ret
0x0000000000402b67 : mov fs, word ptr [rdx] ; mov rbp, rsp ; call rax
0x000000000040cf0c : mov qword ptr [0x62b978], rdi ; pop rbp ; ret
0x000000000040d06c : mov qword ptr [0x62b980], rdi ; pop rbp ; ret
0x000000000040ab6e : mov qword ptr [rbp - 0x18], rax ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040a99b : mov qword ptr [rbp - 0x18], rdx ; pop rbp ; ret
0x000000000040cef0 : mov qword ptr [rbp - 8], rax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000417e54 : mov qword ptr [rbp - 8], rcx ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000403db4 : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004147c4 : mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000411add : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405494 : mov qword ptr [rcx + 0x38], rax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004054e4 : mov qword ptr [rcx + 0x40], rax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041009f : mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040e46d : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000041647a : mov r8, qword ptr [rbp - 0x38] ; mov al, 0 ; call 0x402718
0x000000000041319a : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000412c5b : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000419337 : mov rax, qword ptr [rax + 0x10] ; mov rdi, qword ptr [rbp - 0x40] ; call rax
0x0000000000419560 : mov rax, qword ptr [rax + 0x18] ; mov rdi, qword ptr [rbp - 0x48] ; call rax
0x000000000041952f : mov rax, qword ptr [rax] ; mov rdi, qword ptr [rbp - 0x48] ; call rax
0x000000000040d2bc : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040d58b : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d27a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000411924 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000414b40 : mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040d50e : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040d391 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004118dc : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040ab72 : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040ddcc : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040e078 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040e56b : mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000041f576 : mov rax, qword ptr [rbp - 0x20] ; pop rbp ; ret
0x000000000040fc5e : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040b9ba : mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000411bae : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000413198 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041012a : mov rax, qword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040e63b : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040ba80 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040e8da : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000418be8 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040c730 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040c5d4 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000041ef30 : mov rax, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000403db8 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040e15c : mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040e17c : mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040e19c : mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000414abc : mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000414afc : mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000414adc : mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000418f6d : mov rax, rdi ; pop rbp ; ret
0x000000000040eb60 : mov rax, rdx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040aa7c : mov rax, rdx ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040bb13 : mov rax, rdx ; pop rbp ; ret
0x000000000040ac42 : mov rax, rsi ; pop rbp ; ret
0x0000000000402b6a : mov rbp, rsp ; call rax
0x0000000000402ad0 : mov rbp, rsp ; ja 0x402add ; pop rbp ; ret
0x00000000004147c1 : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000403134 : mov rcx, qword ptr [rax*8 + 0x421e60] ; jmp rcx
0x00000000004110ed : mov rcx, qword ptr [rax*8 + 0x424030] ; jmp rcx
0x0000000000411c66 : mov rcx, qword ptr [rax*8 + 0x4240b0] ; jmp rcx
0x0000000000411f46 : mov rcx, qword ptr [rax*8 + 0x4240f8] ; jmp rcx
0x00000000004140b2 : mov rcx, qword ptr [rax*8 + 0x4245d8] ; jmp rcx
0x0000000000414350 : mov rcx, qword ptr [rax*8 + 0x424600] ; jmp rcx
0x0000000000414519 : mov rcx, qword ptr [rax*8 + 0x424628] ; jmp rcx
0x000000000041651d : mov rcx, qword ptr [rax*8 + 0x424790] ; jmp rcx
0x000000000041761c : mov rcx, qword ptr [rax*8 + 0x424b00] ; jmp rcx
0x000000000041759c : mov rcx, qword ptr [rax*8 + 0x424b60] ; jmp rcx
0x000000000041cdb4 : mov rcx, qword ptr [rax*8 + 0x424df8] ; jmp rcx
0x000000000041b189 : mov rcx, qword ptr [rax*8 + 0x424e80] ; jmp rcx
0x000000000041f726 : mov rcx, qword ptr [rax*8 + 0x424ed0] ; jmp rcx
0x0000000000421441 : mov rcx, qword ptr [rax*8 + 0x424fa8] ; jmp rcx
0x000000000040eec1 : mov rcx, qword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040ee5e : mov rcx, qword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040e4f2 : mov rcx, qword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040fa02 : mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000041649d : mov rcx, qword ptr [rbp - 0x38] ; mov al, 0 ; call 0x402718
0x00000000004192ea : mov rcx, qword ptr [rbp - 0x48] ; call rax
0x000000000040facf : mov rcx, qword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000405b45 : mov rdi, qword ptr [rbp - 0x28] ; call 0x421dd6
0x0000000000405b60 : mov rdi, qword ptr [rbp - 0x28] ; call 0x421df6
0x000000000041933b : mov rdi, qword ptr [rbp - 0x40] ; call rax
0x00000000004193c6 : mov rdi, qword ptr [rbp - 0x460] ; call rax
0x0000000000419532 : mov rdi, qword ptr [rbp - 0x48] ; call rax
0x000000000041009b : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040e158 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040e178 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040e198 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000414ab8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000414af8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000414ad8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000040ee62 : mov rdi, qword ptr [rcx] ; call rax
0x000000000040e878 : mov rdi, qword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x0000000000414665 : mov rdi, qword ptr [rdx + rcx*8] ; mov rdx, qword ptr [rbp - 0x20] ; call rax
0x0000000000414669 : mov rdx, qword ptr [rbp - 0x20] ; call rax
0x0000000000410555 : mov rdx, qword ptr [rbp - 0x28] ; call rax
0x00000000004192e6 : mov rdx, qword ptr [rbp - 0x40] ; mov rcx, qword ptr [rbp - 0x48] ; call rax
0x0000000000414b44 : mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004164d7 : mov rdx, rax ; mov al, r8b ; call 0x402718
0x000000000040e87b : mov rsi, qword ptr [rbp - 0x20] ; call rax
0x0000000000410551 : mov rsi, qword ptr [rbp - 0x38] ; mov rdx, qword ptr [rbp - 0x28] ; call rax
0x000000000041945b : mov rsi, qword ptr [rbp - 0x460] ; call rax
0x000000000040e4f6 : mov rsi, qword ptr [rcx] ; call rax
0x0000000000402b1f : mov rsi, rax ; mov edi, 0x6294c0 ; jmp rdx
0x000000000040e568 : mov rsi, rax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000041ef34 : mov rsp, rbp ; pop rbp ; ret
0x0000000000419395 : movabs al, byte ptr [0x8148ca8948fffffb] ; ret 1
0x0000000000425ca4 : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add al, bl ; sar ch, 1 ; jmp rdx
0x00000000004278a4 : movsb byte ptr [rdi], byte ptr [rsi] ; sbb al, 0 ; add byte ptr [rax], ch ; sar dh, cl ; call qword ptr [rdx]
0x00000000004215bf : movsd dword ptr [rdi], dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xdf43], al ; call qword ptr [rax]
0x000000000040dcd1 : movsx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x000000000041efda : movsx eax, cl ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040579c : movzx eax, al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004042a0 : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004047c2 : movzx eax, al ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004044f0 : movzx eax, al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000404685 : movzx eax, al ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004055d0 : movzx eax, al ; add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x0000000000404a16 : movzx eax, al ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040821d : movzx eax, al ; pop rbp ; ret
0x00000000004190d2 : movzx eax, ax ; pop rbp ; ret
0x000000000041020e : movzx eax, bh ; pop rbp ; ret
0x000000000040b83c : movzx eax, cl ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403fcd : movzx eax, cl ; pop rbp ; ret
0x0000000000414a6b : movzx eax, cx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041020d : movzx eax, dil ; pop rbp ; ret
0x0000000000408219 : mul byte ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000040821a : mul byte ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000040abdc : mul dword ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000040abdd : mul dword ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x0000000000421d98 : nop dword ptr [rax + rax] ; ret
0x0000000000425119 : or al, 0 ; add byte ptr [rax], al ; int1 ; std ; call rax
0x0000000000425129 : or al, 0 ; add byte ptr [rax], al ; std ; call qword ptr [rax]
0x00000000004255dc : or al, 0xfe ; call rax
0x000000000041b18b : or al, 0xffffffffffffffc5 ; or byte ptr [rsi + 0x42], 0 ; jmp rcx
0x0000000000415b58 : or byte ptr [r15], cl ; sahf ; ret 0xe280
0x0000000000413ead : or byte ptr [r15], cl ; xchg eax, edi ; ret 0xe280
0x000000000040bb63 : or byte ptr [r15], cl ; xchg eax, esp ; ret 0x5588
0x00000000004124be : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x00000000004124bf : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000410cfb : or byte ptr [rcx + 0x2df9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x0000000000411251 : or byte ptr [rcx + 0x2df9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x0000000000404c55 : or byte ptr [rcx + 0x2ff9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf280
0x0000000000410c12 : or byte ptr [rcx + 0x38f9], al ; add byte ptr [rdi], cl ; pushfq ; ret 0x5588
0x0000000000410fb7 : or byte ptr [rcx + 0x38f9], al ; add byte ptr [rdi], cl ; pushfq ; ret 0x9588
0x000000000040c8ee : or byte ptr [rcx + 0x39f9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000426a48 : or byte ptr [rdi - 2], dh ; call qword ptr [rdx]
0x0000000000415b59 : or byte ptr [rdi], cl ; sahf ; ret 0xe280
0x0000000000413eae : or byte ptr [rdi], cl ; xchg eax, edi ; ret 0xe280
0x000000000040bb64 : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x000000000041b18d : or byte ptr [rsi + 0x42], 0 ; jmp rcx
0x00000000004255ec : or cl, 0xfe ; call qword ptr [rax]
0x0000000000407691 : or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000041a85e : or eax, 0x20 ; mov dword ptr [rdi], eax ; pop rbp ; ret
0x0000000000425159 : or eax, 0xf7200000 ; std ; call rax
0x0000000000425169 : or eax, 0xf9700000 ; std ; call qword ptr [rax]
0x0000000000413381 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040dbea : or eax, dword ptr [rax] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000427f29 : or edi, edi ; call qword ptr [rax]
0x0000000000418f6b : or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x0000000000418fe1 : or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000418f6a : or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x00000000004256ed : out -2, eax ; call qword ptr [rax]
0x000000000041020b : out 1, eax ; movzx eax, dil ; pop rbp ; ret
0x0000000000418fe0 : out dx, eax ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000040e3f9 : outsb dx, byte ptr [rsi] ; ret 0x280f
0x0000000000421d8c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000421d8e : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004169de : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000421d90 : pop r14 ; pop r15 ; ret
0x00000000004080dc : pop r14 ; pop rbp ; ret
0x00000000004169e0 : pop r15 ; pop rbp ; ret
0x0000000000421d92 : pop r15 ; ret
0x0000000000410b4e : pop rax ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000413e4f : pop rbp ; call 0xffffffff838a3e5c
0x0000000000402b42 : pop rbp ; mov byte ptr [rip + 0x2269ce], 1 ; ret
0x0000000000402ae1 : pop rbp ; mov edi, 0x6294c0 ; jmp rax
0x0000000000402b1e : pop rbp ; mov rsi, rax ; mov edi, 0x6294c0 ; jmp rdx
0x0000000000421d8b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000421d8f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000402ad5 : pop rbp ; ret
0x00000000004169dd : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004080db : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000404249 : pop rbx ; pop rbp ; ret
0x00000000004169e1 : pop rdi ; pop rbp ; ret
0x0000000000421d93 : pop rdi ; ret
0x00000000004169df : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000421d91 : pop rsi ; pop r15 ; ret
0x00000000004080dd : pop rsi ; pop rbp ; ret
0x0000000000421d8d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040e410 : pop rsp ; ret 0xf66
0x000000000042531d : push -2 ; call rax
0x0000000000415674 : push 0x4800002c ; add esp, 0x20 ; pop rbp ; ret
0x0000000000425757 : push qword ptr [rax + 0x10000025] ; idiv esi ; call rax
0x0000000000425917 : push qword ptr [rax + 0x1000002c] ; sub bh, bh ; call rax
0x0000000000425587 : push qword ptr [rax + 0x1e] ; add byte ptr [rax], al ; push rax ; ret 0xfffe
0x0000000000425157 : push qword ptr [rax + 0x2000000d] ; idiv ebp ; call rax
0x0000000000425657 : push qword ptr [rax + 0x21] ; loope 0x425665 ; call rax
0x0000000000425997 : push qword ptr [rax + 0x2e] ; cmp al, -1 ; call rax
0x0000000000425357 : push qword ptr [rax + 0x30000015] ; jne 0x425365 ; call rax
0x0000000000425417 : push qword ptr [rax + 0x30000018] ; mov esi, dr1 ; call rax
0x0000000000425317 : push qword ptr [rax + 0x70000014] ; push -2 ; call rax
0x00000000004253d7 : push qword ptr [rax + 0x70000017] ; test bh, dh ; call rax
0x0000000000425117 : push qword ptr [rax + 0xc] ; int1 ; std ; call rax
0x0000000000425697 : push qword ptr [rax - 0x1fffffde] ; loop 0x4256a5 ; call rax
0x0000000000425597 : push qword ptr [rax - 0x2fffffe2] ; ret 0xfffe
0x00000000004256d7 : push qword ptr [rax - 0x3fffffdd] ; in eax, -2 ; call rax
0x0000000000425957 : push qword ptr [rax - 0x4fffffd3] ; xor edi, edi ; call rax
0x0000000000425897 : push qword ptr [rax - 0x4fffffd6] ; sbb al, -1 ; call rax
0x0000000000425397 : push qword ptr [rax - 0x4fffffea] ; jg 0x4253a5 ; call rax
0x00000000004250d7 : push qword ptr [rax - 0x5ffffff5] ; fdiv st(5), st(0) ; call rax
0x00000000004251d7 : push qword ptr [rax - 0x7ffffff1] ; xor esi, edi ; call rax
0x0000000000425557 : push qword ptr [rax - 0xfffffe3] ; mov cl, -2 ; call rax
0x0000000000425197 : push qword ptr [rax - 0xffffff2] ; add edi, esi ; call rax
0x0000000000414abe : push r8 ; pop rbp ; ret
0x0000000000425627 : push rax ; and byte ptr [rax], al ; add al, ah ; fdiv st(6), st(0) ; call qword ptr [rax]
0x000000000042576c : push rax ; idiv esi ; call qword ptr [rax]
0x0000000000425127 : push rax ; or al, 0 ; add byte ptr [rax], al ; std ; call qword ptr [rax]
0x0000000000425167 : push rax ; or eax, 0xf9700000 ; std ; call qword ptr [rax]
0x000000000040468b : push rax ; pop rbp ; ret
0x000000000042558c : push rax ; ret 0xfffe
0x00000000004251e7 : push rax ; sldt word ptr [rax] ; sar byte ptr [rcx], -2 ; call qword ptr [rax]
0x0000000000425867 : push rax ; sub dword ptr [rax], eax ; add byte ptr [rax], dh ; adc bh, bh ; call qword ptr [rax]
0x000000000042029c : push rbp ; call 0x210483ee
0x0000000000414b46 : push rbp ; clc ; pop rbp ; ret
0x00000000004124c2 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000404207 : push rbp ; fmul dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000402b64 : push rbp ; mov edi, 0x628e20 ; mov rbp, rsp ; call rax
0x00000000004147c0 : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000418c65 : push rbp ; ror byte ptr [rax - 0x77], 1 ; ret 0x71e8
0x000000000041993d : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x0000000000412b8e : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000040c11c : push rsi ; adc byte ptr [rax + 0x29], cl ; ret 0x8948
0x0000000000410c1a : pushfq ; ret 0x5588
0x0000000000410fbf : pushfq ; ret 0x9588
0x0000000000418fde : rcl ebx, -0x11 ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000041900e : rcl ebx, -0x19 ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000042561c : rcr bl, -2 ; call rax
0x00000000004258dc : rcr byte ptr [rdi], -1 ; call rax
0x00000000004250ec : rcr ch, -3 ; call qword ptr [rax]
0x00000000004002da : ret
0x000000000040fa8c : ret 0
0x000000000041fc3b : ret 0x10
0x00000000004202a0 : ret 0x20
0x00000000004029f2 : ret 0x2269
0x00000000004027f2 : ret 0x226a
0x00000000004025f2 : ret 0x226b
0x00000000004023f2 : ret 0x226c
0x000000000040e3fa : ret 0x280f
0x00000000004039ad : ret 0x2de8
0x00000000004088fa : ret 0x30e8
0x000000000040b2f9 : ret 0x41e8
0x0000000000416530 : ret 0x4248
0x000000000041c918 : ret 0x42e8
0x00000000004141a4 : ret 0x4589
0x000000000041fca3 : ret 0x4810
0x000000000040c1b7 : ret 0x4a8b
0x00000000004089d6 : ret 0x54e8
0x000000000040bb67 : ret 0x5588
0x00000000004108ed : ret 0x5589
0x000000000041bffe : ret 0x58
0x000000000040caf9 : ret 0x61e8
0x0000000000418c69 : ret 0x71e8
0x000000000040d82a : ret 0x73
0x00000000004124db : ret 0x7fe8
0x000000000041be1f : ret 0x8148
0x0000000000405208 : ret 0x830f
0x000000000040ed03 : ret 0x8348
0x00000000004067c7 : ret 0x83e8
0x0000000000405237 : ret 0x840f
0x000000000041c942 : ret 0x8589
0x000000000040bec3 : ret 0x870f
0x00000000004164d9 : ret 0x8844
0x0000000000404241 : ret 0x8944
0x0000000000409fc7 : ret 0x8948
0x0000000000409fd5 : ret 0x894d
0x00000000004125ed : ret 0x89a5
0x000000000041b168 : ret 0x89ee
0x000000000040420b : ret 0x8b48
0x000000000040744f : ret 0x8d88
0x000000000041aa42 : ret 0x8e8
0x000000000040828b : ret 0x9588
0x00000000004211c4 : ret 0x9589
0x000000000040896a : ret 0xab
0x000000000040a3ee : ret 0xace8
0x0000000000406b40 : ret 0xae8
0x000000000040329a : ret 0xb0
0x0000000000407de4 : ret 0xb6e8
0x000000000040ed86 : ret 0xb948
0x000000000041c89f : ret 0xbbe8
0x0000000000411431 : ret 0xbe01
0x0000000000402b05 : ret 0xc148
0x0000000000404cce : ret 0xcce8
0x0000000000413653 : ret 0xd284
0x0000000000408746 : ret 0xe280
0x0000000000412adc : ret 0xee8
0x0000000000404c5e : ret 0xf280
0x000000000040c668 : ret 0xf2e8
0x0000000000417929 : ret 0xf40
0x000000000040e411 : ret 0xf66
0x000000000040a2fe : ret 0xfce8
0x000000000041a02a : ret 0xfe85
0x000000000041182a : ret 0xff10
0x000000000040f750 : ret 0xff3
0x0000000000408a0a : ret 0xff9a
0x000000000040764a : ret 0xffac
0x000000000040374a : ret 0xfff1
0x0000000000402c0a : ret 0xfff8
0x0000000000416482 : ret 0xfffe
0x00000000004061dc : ret 0xffff
0x0000000000405b4b : ret 1
0x000000000040c882 : ret 2
0x00000000004009a0 : ret 3
0x000000000040d7c8 : ret 8
0x0000000000404441 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040423d : rol byte ptr [rbp + 0xf], 0x44 ; ret 0x8944
0x00000000004155d5 : rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040b5da : rol dword ptr [rax - 0x49f0fe1f], -0x3f ; pop rbp ; ret
0x000000000041952d : ror byte ptr [r8 - 0x75], 1 ; add byte ptr [rax - 0x75], cl ; jge 0x4194f7 ; call rax
0x0000000000416b1b : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000411bb0 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x411c1b ; ret
0x0000000000402b0c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x402b1b ; pop rbp ; ret
0x0000000000419336 : ror byte ptr [rax - 0x75], 1 ; adc byte ptr [rax - 0x75], cl ; jge 0x419308 ; call rax
0x00000000004194af : ror byte ptr [rax - 0x75], 1 ; adc byte ptr [rax - 0x75], cl ; jge 0x419481 ; call rax
0x000000000041952e : ror byte ptr [rax - 0x75], 1 ; add byte ptr [rax - 0x75], cl ; jge 0x4194f6 ; call rax
0x000000000041955f : ror byte ptr [rax - 0x75], 1 ; sbb byte ptr [rax - 0x75], cl ; jge 0x419529 ; call rax
0x0000000000416b1c : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000418c66 : ror byte ptr [rax - 0x77], 1 ; ret 0x71e8
0x0000000000404a18 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x404a81 ; ret
0x000000000040915d : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x4091c6 ; ret
0x0000000000411bb1 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x411c1a ; ret
0x00000000004044f2 : ror byte ptr [rax - 0x7d], -0x3c ; pop rbp ; ret
0x0000000000404244 : ror byte ptr [rax - 0x7d], -0x3c ; pop rbx ; pop rbp ; ret
0x0000000000404687 : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x000000000040c2ac : ror byte ptr [rax - 0x7f], -0x3c ; jo 0x40c2cb ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041398a : ror byte ptr [rax - 0x7f], -0x3c ; jo 0x41399a ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000403f8b : ror byte ptr [rax - 0x7f], -0x3c ; loopne 0x403f9a ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040443d : ror byte ptr [rax - 0x7f], -0x3c ; rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041993e : ror byte ptr [rax - 0x7f], 1 ; ret 1
0x0000000000412b8f : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000415b5b : sahf ; ret 0xe280
0x00000000004251ec : sar byte ptr [rcx], -2 ; call qword ptr [rax]
0x000000000042536c : sar byte ptr [rdx - 2], 1 ; call qword ptr [rax]
0x0000000000425ca9 : sar ch, 1 ; jmp rdx
0x0000000000427889 : sar dh, cl ; call qword ptr [rdx]
0x0000000000402b0e : sar eax, 1 ; jne 0x402b19 ; pop rbp ; ret
0x0000000000425cc9 : sar ebp, 1 ; jmp rcx
0x0000000000427749 : sar esi, 1 ; jmp qword ptr [rdi]
0x0000000000402b0d : sar rax, 1 ; jne 0x402b1a ; pop rbp ; ret
0x000000000042589d : sbb al, -1 ; call rax
0x0000000000427885 : sbb al, 0 ; add byte ptr [rax], ch ; sar dh, cl ; call qword ptr [rdx]
0x0000000000415b6f : sbb byte ptr [r15], cl ; sahf ; ret 0xe280
0x0000000000419563 : sbb byte ptr [rax - 0x75], cl ; jge 0x419525 ; call rax
0x0000000000419562 : sbb byte ptr [rax - 0x75], cl ; jge 0x419526 ; call rax
0x00000000004274c5 : sbb byte ptr [rax], al ; add byte ptr [rax], ch ; ret
0x0000000000425419 : sbb byte ptr [rax], al ; add byte ptr [rax], dh ; mov esi, dr1 ; call rax
0x0000000000415b70 : sbb byte ptr [rdi], cl ; sahf ; ret 0xe280
0x000000000040eb84 : sete al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040bb83 : setne al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040bb85 : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004256dc : shl ch, -2 ; call rax
0x000000000040e42f : shl dword ptr [rsi + 0xf], 0x5c ; ret 0xf66
0x000000000041900f : shl edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000418fa8 : shl edx, cl ; or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x00000000004164dc : shr al, 0x2e ; ret 0xfffe
0x0000000000408968 : shr al, 1 ; ret 0xab
0x0000000000418fdf : shr edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000418f68 : shr edx, cl ; or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x0000000000408967 : shr r8b, 1 ; ret 0xab
0x0000000000426b65 : sldt word ptr [rax] ; call 0xffffffffd44269ed
0x00000000004251e9 : sldt word ptr [rax] ; sar byte ptr [rcx], -2 ; call qword ptr [rax]
0x00000000004251d9 : sldt word ptr [rax] ; xor byte ptr [rcx], 0xfe ; call rax
0x0000000000426b64 : sldt word ptr fs:[rax] ; call 0xffffffffd44269ee
0x000000000042516d : stc ; std ; call qword ptr [rax]
0x0000000000410cfd : stc ; sub eax, 0xf000000 ; xchg eax, esp ; ret 0x5588
0x0000000000411253 : stc ; sub eax, 0xf000000 ; xchg eax, esp ; ret 0x9588
0x00000000004250ee : std ; call qword ptr [rax]
0x00000000004250de : std ; call rax
0x0000000000425cca : std ; jmp rcx
0x0000000000425caa : std ; jmp rdx
0x0000000000425156 : std ; push qword ptr [rax + 0x2000000d] ; idiv ebp ; call rax
0x0000000000425116 : std ; push qword ptr [rax + 0xc] ; int1 ; std ; call rax
0x00000000004250d6 : std ; push qword ptr [rax - 0x5ffffff5] ; fdiv st(5), st(0) ; call rax
0x0000000000425126 : std ; push rax ; or al, 0 ; add byte ptr [rax], al ; std ; call qword ptr [rax]
0x0000000000425166 : std ; push rax ; or eax, 0xf9700000 ; std ; call qword ptr [rax]
0x00000000004062af : std ; ret
0x000000000040b7a8 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042592d : sub al, -1 ; call qword ptr [rax]
0x0000000000426149 : sub al, -2 ; call qword ptr [rcx]
0x0000000000425919 : sub al, 0 ; add byte ptr [rax], dl ; sub bh, bh ; call rax
0x000000000042591d : sub bh, bh ; call rax
0x0000000000428728 : sub byte ptr [rbx - 1], bh ; call rbx
0x0000000000426268 : sub byte ptr [rdi - 2], al ; call qword ptr [rcx]
0x0000000000425869 : sub dword ptr [rax], eax ; add byte ptr [rax], dh ; adc bh, bh ; call qword ptr [rax]
0x0000000000410cfe : sub eax, 0xf000000 ; xchg eax, esp ; ret 0x5588
0x0000000000411254 : sub eax, 0xf000000 ; xchg eax, esp ; ret 0x9588
0x0000000000428725 : sub eax, dword ptr [rax] ; add byte ptr [rax], ch ; jnp 0x428730 ; call rbx
0x000000000040ac3d : sub eax, edx ; add rsi, rax ; mov rax, rsi ; pop rbp ; ret
0x00000000004260c9 : sub esi, edi ; jmp rax
0x0000000000421e41 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000421e40 : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000425cc8 : test al, -0x2f ; std ; jmp rcx
0x0000000000427029 : test al, -2 ; jmp qword ptr [rdi]
0x00000000004164d6 : test al, 0x48 ; mov edx, eax ; mov al, r8b ; call 0x402719
0x00000000004253dd : test bh, dh ; call rax
0x0000000000427884 : test byte ptr [rax + rax], bl ; add byte ptr [rax], ch ; sar dh, cl ; call qword ptr [rdx]
0x0000000000421d9a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000426784 : test byte ptr [rbx], cl ; add byte ptr [rax], al ; fsubr dword ptr [rax - 2] ; call qword ptr [rsi]
0x0000000000428384 : test byte ptr [rdi], ah ; add byte ptr [rax], al ; call 0xffffffffe14282b7
0x0000000000426a84 : test byte ptr [rsi], cl ; add byte ptr [rax], al ; or byte ptr [rdi - 2], dh ; call qword ptr [rdx]
0x000000000040bebc : test dword ptr [rax + 0x2b], 0x39481047 ; ret 0x870f
0x00000000004188f7 : test edi, eax ; idiv edi ; call rax
0x00000000004253ed : test edi, esi ; call qword ptr [rax]
0x0000000000414f33 : xchg eax, ebp ; ret 0xe280
0x000000000040d951 : xchg eax, ebp ; ret 0xf280
0x000000000040bb84 : xchg eax, ebp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000413eb0 : xchg eax, edi ; ret 0xe280
0x000000000040b5d9 : xchg eax, edx ; rol dword ptr [rax - 0x49f0fe1f], -0x3f ; pop rbp ; ret
0x000000000040955a : xchg eax, esp ; ret
0x000000000040bb66 : xchg eax, esp ; ret 0x5588
0x000000000040828a : xchg eax, esp ; ret 0x9588
0x0000000000413652 : xchg eax, esp ; ret 0xd284
0x0000000000408745 : xchg eax, esp ; ret 0xe280
0x0000000000404c5d : xchg eax, esp ; ret 0xf280
0x000000000040eb85 : xchg eax, esp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000418f6c : xlatb ; mov rax, rdi ; pop rbp ; ret
0x00000000004061d7 : xor al, 0x42 ; add al, ch ; int1 ; ret 0xffff
0x000000000042596d : xor al, 0xffffffffffffffff ; call qword ptr [rax]
0x00000000004259ec : xor byte ptr [rax - 1], al ; call qword ptr [rax]
0x00000000004188be : xor byte ptr [rax], dl ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042535c : xor byte ptr [rbp - 2], dh ; call rax
0x00000000004251dc : xor byte ptr [rcx], 0xfe ; call rax
0x0000000000419d4e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042595d : xor edi, edi ; call rax
0x00000000004261c9 : xor edi, esi ; jmp rax
0x0000000000411a26 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004251dd : xor esi, edi ; call rax
