0x000000000041b421 : adc al, -0x75 ; hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040bd24 : adc al, 0x25 ; ret 0x41df
0x0000000000418753 : adc al, byte ptr [rcx + 0x4f9] ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x00000000004186c8 : adc al, byte ptr [rcx + 0x4f9] ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf280
0x000000000040b8af : adc byte ptr [r8 + 0x39], r9b ; ret 0x870f
0x000000000040bb0d : adc byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000040b8b0 : adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000041ac2a : adc byte ptr [rax - 0x75], cl ; jge 0x41abf4 ; call rax
0x000000000041ac29 : adc byte ptr [rax - 0x75], cl ; jge 0x41abf5 ; call rax
0x000000000041ada3 : adc byte ptr [rax - 0x75], cl ; jge 0x41ad6d ; call rax
0x000000000041ada2 : adc byte ptr [rax - 0x75], cl ; jge 0x41ad6e ; call rax
0x000000000041f7b1 : adc byte ptr [rax], al ; add byte ptr [rax], ch ; test edi, esi ; jmp qword ptr [rax]
0x0000000000418af7 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000408ec3 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040ad92 : adc dword ptr [rax + 1], ecx ; ret 0x8948
0x00000000004116f9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042295b : add ah, ah ; add byte ptr es:[rax], al ; push rax ; jg 0x42296a ; jmp qword ptr [rdi]
0x0000000000421a21 : add al, -1 ; jmp qword ptr [rdx]
0x0000000000409fa8 : add al, 0 ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000042247c : add al, 0x22 ; add byte ptr [rax], al ; xor byte ptr [rbp - 1], al ; jmp qword ptr [rdx]
0x000000000040e17a : add al, 0x48 ; add eax, ecx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000408f44 : add al, 2 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000420f9f : add al, al ; ret
0x000000000041fcf3 : add al, bh ; xor edi, edi ; jmp qword ptr [rax]
0x000000000041fc23 : add al, bl ; and al, 0xffffffffffffffff ; jmp rax
0x000000000041fd73 : add al, bl ; xor al, 0xffffffffffffffff ; jmp qword ptr [rax]
0x0000000000403ad5 : add al, byte ptr [rax] ; add byte ptr [rax - 0x73], cl ; or al, 0x25 ; ret 0x41d9
0x000000000040b4ce : add al, ch ; pop rsp ; popfq ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000405fb9 : add al, ch ; push rcx ; ret
0x000000000041c5c7 : add al, ch ; ret
0x0000000000415628 : add al, ch ; ret 0xfecb
0x00000000004053e8 : add al, ch ; ret 0xffd2
0x0000000000405e1d : add al, ch ; std ; ret 0xffff
0x000000000042011b : add al, cl ; ret
0x000000000041fca3 : add al, cl ; sub edi, edi ; jmp rax
0x000000000042121f : add al, dl ; sar esi, 1 ; call rsp
0x00000000004217e1 : add bh, bh ; jmp qword ptr [rdx]
0x000000000041cabf : add bl, dh ; ret
0x0000000000405e1a : add byte ptr [r8], r8b ; add al, ch ; std ; ret 0xffff
0x000000000041a16b : add byte ptr [r8], r8b ; add byte ptr [rcx - 0x100f43], al ; jmp qword ptr [rsi]
0x000000000040bba4 : add byte ptr [rax + 1], cl ; ret 0x4a8b
0x000000000040bb5c : add byte ptr [rax + 1], cl ; ret 0x8b48
0x000000000041ae74 : add byte ptr [rax + rax], 0 ; pop rbp ; ret
0x000000000041fcb0 : add byte ptr [rax + rax], ah ; add byte ptr [rax], bh ; sub al, -1 ; jmp qword ptr [rax]
0x0000000000421abb : add byte ptr [rax + rbx], al ; add byte ptr [rax], dl ; or bh, bh ; call rbx
0x000000000040bd21 : add byte ptr [rax - 0x73], cl ; adc al, 0x25 ; ret 0x41df
0x0000000000403ad7 : add byte ptr [rax - 0x73], cl ; or al, 0x25 ; ret 0x41d9
0x0000000000405f0a : add byte ptr [rax - 0x75], cl ; jge 0x405eee ; call 0x402137
0x000000000041ae21 : add byte ptr [rax - 0x75], cl ; jge 0x41ade3 ; call rax
0x000000000041acb5 : add byte ptr [rax - 0x75], cl ; mov ebp, 0xfffffba0 ; call rax
0x0000000000414bd8 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000412b7d : add byte ptr [rax - 0x77], cl ; jge 0x412b80 ; pop rbp ; ret
0x000000000040c4e6 : add byte ptr [rax - 0x77], cl ; ret 0x51e8
0x0000000000402f05 : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000040c055 : add byte ptr [rax - 0x77], cl ; ret 0xe2e8
0x00000000004217df : add byte ptr [rax], ah ; add bh, bh ; jmp qword ptr [rdx]
0x000000000042285f : add byte ptr [rax], ah ; jnp 0x422866 ; call qword ptr [rax]
0x0000000000422aff : add byte ptr [rax], ah ; test edi, edi ; jmp qword ptr [rcx]
0x000000000042247a : add byte ptr [rax], al ; add al, 0x22 ; add byte ptr [rax], al ; xor byte ptr [rbp - 1], al ; jmp qword ptr [rdx]
0x000000000040b4cc : add byte ptr [rax], al ; add al, ch ; pop rsp ; popfq ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000405e1b : add byte ptr [rax], al ; add al, ch ; std ; ret 0xffff
0x000000000041cabd : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040bba2 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x4a8b
0x000000000040bb5a : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8b48
0x000000000040bd1f : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; adc al, 0x25 ; ret 0x41df
0x0000000000405f08 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jge 0x405ef0 ; call 0x402139
0x0000000000412b7b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jge 0x412b82 ; pop rbp ; ret
0x000000000040c4e4 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x51e8
0x0000000000402f03 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000040c053 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xe2e8
0x000000000041cabb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004035dd : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040eaed : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041795f : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000412b7a : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000041cabc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040aee7 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000409feb : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7038b], cl ; ret 0xb0
0x0000000000403a67 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b72f8b], cl ; ret 0xb0
0x0000000000403b4e : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7338b], cl ; ret 0xb0
0x00000000004218fe : add byte ptr [rax], al ; add byte ptr [rbx], -1 ; jmp qword ptr [rax]
0x000000000041a16c : add byte ptr [rax], al ; add byte ptr [rcx - 0x100f43], al ; jmp qword ptr [rsi]
0x0000000000415405 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0xf40
0x0000000000415cd3 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x9588
0x0000000000404239 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000040d3bd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf280
0x0000000000408f46 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000403fcb : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x000000000040422c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040c2e2 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x00000000004186cc : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf280
0x00000000004035df : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040eaef : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b308 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000417961 : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004020c3 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000042149a : add byte ptr [rax], al ; and al, 0x12 ; add byte ptr [rax], al ; sub al, -2 ; call rbx
0x000000000042285e : add byte ptr [rax], al ; and byte ptr [rbx - 1], bh ; call qword ptr [rax]
0x000000000041f832 : add byte ptr [rax], al ; call 0x2141f6ea
0x000000000041fe32 : add byte ptr [rax], al ; call 0x2141fd95
0x0000000000405e1c : add byte ptr [rax], al ; call 0x402124
0x00000000004030a7 : add byte ptr [rax], al ; call 0x4028e8
0x000000000041fcf2 : add byte ptr [rax], al ; clc ; xor edi, edi ; jmp qword ptr [rax]
0x000000000041fcb2 : add byte ptr [rax], al ; cmp byte ptr [rdi + rdi*8], ch ; jmp qword ptr [rax]
0x000000000041f872 : add byte ptr [rax], al ; cwde ; mov ch, -2 ; jmp qword ptr [rax]
0x000000000041fa32 : add byte ptr [rax], al ; cwde ; out -2, al ; jmp qword ptr [rax]
0x000000000041fd62 : add byte ptr [rax], al ; cwde ; xor al, 0xffffffffffffffff ; jmp rax
0x000000000041fce2 : add byte ptr [rax], al ; cwde ; xor edi, edi ; jmp rax
0x000000000041fe72 : add byte ptr [rax], al ; fcomp dword ptr [rdx - 1] ; jmp qword ptr [rax]
0x000000000041fd72 : add byte ptr [rax], al ; fdiv dword ptr [rdi + rdi*8] ; jmp qword ptr [rax]
0x000000000041fdf2 : add byte ptr [rax], al ; fmul dword ptr [rdx - 1] ; jmp qword ptr [rax]
0x000000000041fc22 : add byte ptr [rax], al ; fsub dword ptr [rdi + rdi*8] ; jmp rax
0x000000000042285a : add byte ptr [rax], al ; in al, 0x25 ; add byte ptr [rax], al ; and byte ptr [rbx - 1], bh ; call qword ptr [rax]
0x000000000042295a : add byte ptr [rax], al ; in al, 0x26 ; add byte ptr [rax], al ; push rax ; jg 0x42296b ; jmp qword ptr [rdi]
0x000000000042071e : add byte ptr [rax], al ; jge 0x420726 ; jmp rax
0x00000000004021b9 : add byte ptr [rax], al ; jmp 0x4020d9
0x000000000041aa3c : add byte ptr [rax], al ; mov al, sil ; movzx eax, al ; pop rbp ; ret
0x000000000041a9bd : add byte ptr [rax], al ; mov ax, si ; movzx eax, ax ; pop rbp ; ret
0x000000000041fde2 : add byte ptr [rax], al ; mov byte ptr [rdi - 1], al ; jmp rax
0x0000000000420062 : add byte ptr [rax], al ; mov dl, -1 ; jmp rax
0x000000000041280a : add byte ptr [rax], al ; mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041293d : add byte ptr [rax], al ; mov eax, edi ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000412a99 : add byte ptr [rax], al ; mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b1bd : add byte ptr [rax], al ; mov eax, esi ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004128b1 : add byte ptr [rax], al ; mov eax, esi ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004002fa : add byte ptr [rax], al ; mov esp, 0x439e7650 ; ret
0x0000000000412b7c : add byte ptr [rax], al ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x00000000004102a2 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000405f09 : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x28] ; call 0x402138
0x0000000000421a1e : add byte ptr [rax], al ; nop ; add al, -1 ; jmp qword ptr [rdx]
0x000000000041fea2 : add byte ptr [rax], al ; or byte ptr [rbp - 1], bl ; jmp rax
0x000000000041f732 : add byte ptr [rax], al ; or byte ptr [rbp - 2], cl ; jmp qword ptr [rax]
0x000000000041fe22 : add byte ptr [rax], al ; or byte ptr [rdi - 1], dl ; jmp rax
0x000000000041fee2 : add byte ptr [rax], al ; pop rax ; push -1 ; jmp rax
0x00000000004036f4 : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000414a9b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000408ec5 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000411428 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000042295e : add byte ptr [rax], al ; push rax ; jg 0x422967 ; jmp qword ptr [rdi]
0x00000000004211de : add byte ptr [rax], al ; push rax ; sar dh, 1 ; call rbx
0x000000000041cabe : add byte ptr [rax], al ; ret
0x0000000000421aba : add byte ptr [rax], al ; sbb byte ptr [rax], r8b ; add byte ptr [rax], dl ; or bh, bh ; call rbx
0x000000000041ff22 : add byte ptr [rax], al ; sbb byte ptr [rbx - 1], dh ; jmp rax
0x00000000004215fe : add byte ptr [rax], al ; shr bl, -2 ; jmp qword ptr [rdi]
0x00000000004211da : add byte ptr [rax], al ; sldt word ptr fs:[rax] ; push rax ; sar dh, 1 ; call rbx
0x000000000042149e : add byte ptr [rax], al ; sub al, -2 ; call rbx
0x000000000041f6f2 : add byte ptr [rax], al ; sub byte ptr [rcx - 2], al ; jmp qword ptr [rax]
0x0000000000422bba : add byte ptr [rax], al ; sub dword ptr [rax], r8d ; add byte ptr [rax], dl ; xchg edi, edi ; call qword ptr [rsi]
0x00000000004215fa : add byte ptr [rax], al ; test byte ptr [rbx], dl ; add byte ptr [rax], al ; shr bl, -2 ; jmp qword ptr [rdi]
0x00000000004218fa : add byte ptr [rax], al ; test byte ptr [rsi], dl ; add byte ptr [rax], al ; add byte ptr [rbx], -1 ; jmp qword ptr [rax]
0x000000000042247e : add byte ptr [rax], al ; xor byte ptr [rbp - 1], al ; jmp qword ptr [rdx]
0x000000000041f6b2 : add byte ptr [rax], al ; xor dil, sil ; jmp qword ptr [rax]
0x000000000041fbe3 : add byte ptr [rax], bh ; and bh, bh ; jmp rax
0x00000000004201a3 : add byte ptr [rax], bh ; sar bh, 1 ; jmp rax
0x000000000041fcb3 : add byte ptr [rax], bh ; sub al, -1 ; jmp qword ptr [rax]
0x000000000041f9e3 : add byte ptr [rax], bl ; fdiv st(6), st(0) ; jmp rax
0x000000000041ff23 : add byte ptr [rax], bl ; jae 0x41ff2a ; jmp rax
0x00000000004201f3 : add byte ptr [rax], bl ; sar edi, cl ; jmp qword ptr [rax]
0x000000000041f963 : add byte ptr [rax], bl ; sar esi, 1 ; jmp rax
0x000000000041fd23 : add byte ptr [rax], bl ; xor edi, edi ; jmp rax
0x000000000041fbf3 : add byte ptr [rax], ch ; and edi, edi ; jmp qword ptr [rax]
0x000000000041f7b3 : add byte ptr [rax], ch ; test edi, esi ; jmp qword ptr [rax]
0x0000000000420f7f : add byte ptr [rax], dh ; ret
0x0000000000421abf : add byte ptr [rax], dl ; or bh, bh ; call rbx
0x00000000004211ff : add byte ptr [rax], dl ; sar esi, 1 ; call rsp
0x0000000000422bbf : add byte ptr [rax], dl ; xchg edi, edi ; call qword ptr [rsi]
0x00000000004217db : add byte ptr [rbp + rdx], ah ; add byte ptr [rax], ah ; add bh, bh ; jmp qword ptr [rdx]
0x0000000000414a9c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000408ec6 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000411429 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000409fed : add byte ptr [rbx - 0x76b7038b], cl ; ret 0xb0
0x0000000000403a69 : add byte ptr [rbx - 0x76b72f8b], cl ; ret 0xb0
0x0000000000403b50 : add byte ptr [rbx - 0x76b7338b], cl ; ret 0xb0
0x0000000000421900 : add byte ptr [rbx], -1 ; jmp qword ptr [rax]
0x000000000041fe70 : add byte ptr [rbx], ch ; add byte ptr [rax], al ; fcomp dword ptr [rdx - 1] ; jmp qword ptr [rax]
0x000000000041f870 : add byte ptr [rbx], dl ; add byte ptr [rax], al ; cwde ; mov ch, -2 ; jmp qword ptr [rax]
0x0000000000415ccf : add byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x9588
0x0000000000422bbb : add byte ptr [rcx + rbp], al ; add byte ptr [rax], dl ; xchg edi, edi ; call qword ptr [rsi]
0x000000000041a16e : add byte ptr [rcx - 0x100f43], al ; jmp qword ptr [rsi]
0x0000000000419fad : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004028a8 : add byte ptr [rcx], al ; ret
0x0000000000415407 : add byte ptr [rcx], bh ; ret 0xf40
0x000000000041fdf0 : add byte ptr [rcx], ch ; add byte ptr [rax], al ; fmul dword ptr [rdx - 1] ; jmp qword ptr [rax]
0x000000000041fd70 : add byte ptr [rdi], ah ; add byte ptr [rax], al ; fdiv dword ptr [rdi + rdi*8] ; jmp qword ptr [rax]
0x0000000000412aca : add byte ptr [rdi], cl ; mov bh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405e17 : add byte ptr [rdi], cl ; test byte ptr [rdi], cl ; add byte ptr [rax], al ; call 0x402129
0x0000000000415cd5 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x9588
0x000000000040423b : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000040d3bf : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf280
0x0000000000408f48 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000403fcd : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x000000000040422e : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040c2e4 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x00000000004186ce : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf280
0x000000000042149b : add byte ptr [rdx + rdx], ah ; add byte ptr [rax], al ; sub al, -2 ; call rbx
0x000000000042247b : add byte ptr [rdx], al ; add byte ptr [rax], al ; xor byte ptr [rbp - 1], al ; jmp qword ptr [rdx]
0x000000000041fa30 : add byte ptr [rdx], bl ; add byte ptr [rax], al ; cwde ; out -2, al ; jmp qword ptr [rax]
0x000000000041fe30 : add byte ptr [rdx], ch ; add byte ptr [rax], al ; call 0x2141fd97
0x000000000041f830 : add byte ptr [rdx], dl ; add byte ptr [rax], al ; call 0x2141f6ec
0x000000000040dfed : add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x000000000041f730 : add byte ptr [rsi], cl ; add byte ptr [rax], al ; or byte ptr [rbp - 2], cl ; jmp qword ptr [rax]
0x000000000041fd61 : add byte ptr es:[rax], al ; cwde ; xor al, 0xffffffffffffffff ; jmp rax
0x000000000042295d : add byte ptr es:[rax], al ; push rax ; jg 0x422968 ; jmp qword ptr [rdi]
0x0000000000407083 : add cl, ch ; ret
0x000000000040fdec : add dword ptr [rax + 0xf], eax ; mov dh, -0x39 ; pop rbp ; ret
0x00000000004116b8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004160e5 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000414a9a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000408ec4 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000411427 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040c6a4 : add dword ptr [rax], eax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040b615 : add dword ptr [rcx + rax], esp ; movzx eax, al ; pop rbp ; ret
0x000000000040cffc : add dword ptr [rdi], ecx ; mov dh, -0x3e ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040b22b : add dword ptr [rdi], ecx ; mov dh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040afcd : add dword ptr [rdi], ecx ; mov dh, -0x3f ; pop rbp ; ret
0x0000000000404bb0 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408536 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404249 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004037b1 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040844d : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004038f3 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000408b4a : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040438c : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000419984 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x5588
0x0000000000407c78 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x9588
0x0000000000408133 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xe280
0x00000000004028a4 : add eax, 0x221bee ; add ebx, esi ; ret
0x0000000000400335 : add eax, 0xd0a4f270 ; ret
0x00000000004187d2 : add eax, 0xf000000 ; xchg eax, esp ; ret 0x9588
0x000000000041c2c6 : add eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040e17c : add eax, ecx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040286b : add eax, edx ; sar rax, 1 ; jne 0x40287c ; pop rbp ; ret
0x00000000004028a9 : add ebx, esi ; ret
0x0000000000421901 : add edi, edi ; jmp qword ptr [rax]
0x000000000040a630 : add esi, eax ; mov rax, rsi ; pop rbp ; ret
0x0000000000402a8b : add esp, 0x10 ; pop rbp ; ret
0x0000000000419fab : add esp, 0x100 ; pop rbp ; ret
0x000000000041a32c : add esp, 0x1030 ; pop rbp ; ret
0x000000000040bc9e : add esp, 0x1070 ; pop rbp ; ret
0x0000000000418af5 : add esp, 0x110 ; pop rbp ; ret
0x00000000004144da : add esp, 0x120 ; pop rbp ; ret
0x000000000041ba4c : add esp, 0x130 ; pop rbp ; ret
0x0000000000411424 : add esp, 0x138 ; pop rbx ; pop rbp ; ret
0x00000000004048fa : add esp, 0x160 ; pop rbp ; ret
0x00000000004122bc : add esp, 0x170 ; pop rbp ; ret
0x000000000041cb5b : add esp, 0x18 ; ret
0x0000000000408282 : add esp, 0x190 ; pop rbp ; ret
0x0000000000414d8c : add esp, 0x1a0 ; pop rbp ; ret
0x000000000040d29f : add esp, 0x1b0 ; pop rbp ; ret
0x0000000000413693 : add esp, 0x1d0 ; pop rbp ; ret
0x00000000004157de : add esp, 0x1e0 ; pop rbp ; ret
0x00000000004039b7 : add esp, 0x20 ; pop rbp ; ret
0x0000000000402b9d : add esp, 0x30 ; pop rbp ; ret
0x00000000004037b6 : add esp, 0x40 ; pop rbp ; ret
0x000000000041ae72 : add esp, 0x480 ; pop rbp ; ret
0x0000000000408452 : add esp, 0x50 ; pop rbp ; ret
0x00000000004038f8 : add esp, 0x60 ; pop rbp ; ret
0x0000000000404fc4 : add esp, 0x68 ; pop rbx ; pop rbp ; ret
0x0000000000408b4f : add esp, 0x70 ; pop rbp ; ret
0x00000000004115de : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000408699 : add esp, 0x80 ; pop rbp ; ret
0x000000000040a353 : add esp, 0x90 ; pop rbp ; ret
0x0000000000412058 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040c563 : add esp, 0xb0 ; pop rbp ; ret
0x00000000004036f0 : add esp, 0xc0 ; pop rbp ; ret
0x0000000000404163 : add esp, 0xd0 ; pop rbp ; ret
0x0000000000417c2b : add esp, 0xe0 ; pop rbp ; ret
0x0000000000404b6b : add esp, 0xf0 ; pop rbp ; ret
0x00000000004020c6 : add esp, 8 ; ret
0x000000000041c2c5 : add rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040e17b : add rax, rcx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040286a : add rax, rdx ; sar rax, 1 ; jne 0x40287d ; pop rbp ; ret
0x000000000040a62f : add rsi, rax ; mov rax, rsi ; pop rbp ; ret
0x0000000000402a8a : add rsp, 0x10 ; pop rbp ; ret
0x0000000000419faa : add rsp, 0x100 ; pop rbp ; ret
0x000000000041a32b : add rsp, 0x1030 ; pop rbp ; ret
0x000000000040bc9d : add rsp, 0x1070 ; pop rbp ; ret
0x0000000000418af4 : add rsp, 0x110 ; pop rbp ; ret
0x00000000004144d9 : add rsp, 0x120 ; pop rbp ; ret
0x000000000041ba4b : add rsp, 0x130 ; pop rbp ; ret
0x0000000000411423 : add rsp, 0x138 ; pop rbx ; pop rbp ; ret
0x00000000004048f9 : add rsp, 0x160 ; pop rbp ; ret
0x00000000004122bb : add rsp, 0x170 ; pop rbp ; ret
0x000000000041cb5a : add rsp, 0x18 ; ret
0x0000000000408281 : add rsp, 0x190 ; pop rbp ; ret
0x0000000000414d8b : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000040d29e : add rsp, 0x1b0 ; pop rbp ; ret
0x0000000000413692 : add rsp, 0x1d0 ; pop rbp ; ret
0x00000000004157dd : add rsp, 0x1e0 ; pop rbp ; ret
0x00000000004039b6 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000402b9c : add rsp, 0x30 ; pop rbp ; ret
0x00000000004037b5 : add rsp, 0x40 ; pop rbp ; ret
0x000000000041ae71 : add rsp, 0x480 ; pop rbp ; ret
0x0000000000408451 : add rsp, 0x50 ; pop rbp ; ret
0x00000000004038f7 : add rsp, 0x60 ; pop rbp ; ret
0x0000000000404fc3 : add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x0000000000408b4e : add rsp, 0x70 ; pop rbp ; ret
0x00000000004115dd : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000408698 : add rsp, 0x80 ; pop rbp ; ret
0x000000000040a352 : add rsp, 0x90 ; pop rbp ; ret
0x0000000000412057 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040c562 : add rsp, 0xb0 ; pop rbp ; ret
0x00000000004036ef : add rsp, 0xc0 ; pop rbp ; ret
0x0000000000404162 : add rsp, 0xd0 ; pop rbp ; ret
0x0000000000417c2a : add rsp, 0xe0 ; pop rbp ; ret
0x0000000000404b6a : add rsp, 0xf0 ; pop rbp ; ret
0x00000000004020c5 : add rsp, 8 ; ret
0x000000000041fcb1 : and al, 0 ; add byte ptr [rax], bh ; sub al, -1 ; jmp qword ptr [rax]
0x000000000042149c : and al, 0x12 ; add byte ptr [rax], al ; sub al, -2 ; call rbx
0x000000000041fc25 : and al, 0xffffffffffffffff ; jmp rax
0x000000000040438b : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004028a7 : and al, byte ptr [rax] ; add ebx, esi ; ret
0x000000000040fdea : and bh, 1 ; movzx eax, dil ; pop rbp ; ret
0x000000000041fbe5 : and bh, bh ; jmp rax
0x000000000041fbe1 : and byte ptr [rax], al ; add byte ptr [rax], bh ; and bh, bh ; jmp rax
0x0000000000422860 : and byte ptr [rbx - 1], bh ; call qword ptr [rax]
0x00000000004144dc : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040afcb : and cl, 1 ; movzx eax, cl ; pop rbp ; ret
0x000000000040fde9 : and dil, 1 ; movzx eax, dil ; pop rbp ; ret
0x000000000041fc21 : and dword ptr [rax], eax ; add al, bl ; and al, 0xffffffffffffffff ; jmp rax
0x000000000041fbf1 : and dword ptr [rax], eax ; add byte ptr [rax], ch ; and edi, edi ; jmp qword ptr [rax]
0x00000000004060c5 : and eax, 0x41df0b ; call 0x402307
0x000000000040e555 : and eax, 0x41ea70 ; mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x00000000004119e7 : and eax, 0x48fffffd ; add esp, 0x20 ; pop rbp ; ret
0x000000000040c8ff : and eax, 0x6248e8 ; pop rbp ; ret
0x000000000040ca5f : and eax, 0x6248f0 ; pop rbp ; ret
0x000000000040ca83 : and eax, 0x6248f8 ; pop rbp ; ret
0x000000000041fca1 : and eax, dword ptr [rax] ; add al, cl ; sub edi, edi ; jmp rax
0x000000000041fbf5 : and edi, edi ; jmp qword ptr [rax]
0x000000000041f834 : call 0x2141f6e8
0x000000000041fe34 : call 0x2141fd93
0x0000000000405ded : call 0x4020f2
0x0000000000405e1e : call 0x402122
0x0000000000405f0f : call 0x402132
0x00000000004060ca : call 0x402302
0x0000000000406423 : call 0x4026b2
0x0000000000406499 : call 0x402712
0x00000000004030a9 : call 0x4028e6
0x0000000000405bdf : call 0x411e82
0x000000000040e72b : call 0x41a952
0x0000000000411459 : call 0xffffffffe9039da9
0x0000000000411458 : call 0xffffffffe9039daa
0x00000000004037ec : call 0xffffffffed28fa7c
0x00000000004037eb : call 0xffffffffed28fa7d
0x000000000040ea41 : call 0xffffffffff7a7592
0x000000000040ea40 : call 0xffffffffff7a7593
0x000000000040eb7f : call 0xffffffffff7a76d0
0x000000000040eb7e : call 0xffffffffff7a76d1
0x000000000041ca99 : call qword ptr [r12 + rbx*8]
0x0000000000422863 : call qword ptr [rax]
0x0000000000420c03 : call qword ptr [rbx]
0x00000000004207a3 : call qword ptr [rcx]
0x00000000004210c3 : call qword ptr [rdx]
0x0000000000420da3 : call qword ptr [rsi]
0x000000000041ca9a : call qword ptr [rsp + rbx*8]
0x00000000004028cd : call rax
0x00000000004211e3 : call rbx
0x0000000000421003 : call rdi
0x0000000000421763 : call rdx
0x0000000000414dfd : call rsp
0x000000000040fd0d : clc ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000418af3 : clc ; add rsp, 0x110 ; pop rbp ; ret
0x000000000041ba4a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x000000000040d607 : clc ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b473 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040e4bd : clc ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041ae70 : clc ; add rsp, 0x480 ; pop rbp ; ret
0x0000000000416786 : clc ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040c123 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040bfc7 : clc ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040dc0d : clc ; add rsp, 0x80 ; pop rbp ; ret
0x0000000000416069 : clc ; add rsp, 0x90 ; pop rbp ; ret
0x0000000000412056 : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x000000000040fc46 : clc ; add rsp, 0xc0 ; pop rbp ; ret
0x000000000040286f : clc ; jne 0x402878 ; pop rbp ; ret
0x000000000041b37c : clc ; mov byte ptr [rax + 0x1c], 0 ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x00000000004103e5 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040a387 : clc ; mov dword ptr [rbp - 0xc], esi ; mov qword ptr [rbp - 0x18], rdx ; pop rbp ; ret
0x000000000041b2c1 : clc ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x000000000041958e : clc ; mov dword ptr [rcx + 0x18], eax ; pop rbp ; ret
0x00000000004190f5 : clc ; mov dword ptr [rcx + 0x2c], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041b037 : clc ; mov dword ptr [rdi + 0x18], 0x95f616 ; pop rbp ; ret
0x000000000041c21b : clc ; mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x000000000041c9eb : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040e728 : clc ; mov esi, eax ; call 0x41a955
0x000000000040fc7e : clc ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040c8e3 : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040dd3b : clc ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040dd5b : clc ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040dd7b : clc ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000412b1b : clc ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000412b5b : clc ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000412b3b : clc ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000404c57 : clc ; pop rbp ; ret
0x000000000041fcf4 : clc ; xor edi, edi ; jmp qword ptr [rax]
0x0000000000402ab7 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000419fa9 : cld ; add rsp, 0x100 ; pop rbp ; ret
0x000000000041a32a : cld ; add rsp, 0x1030 ; pop rbp ; ret
0x00000000004144d8 : cld ; add rsp, 0x120 ; pop rbp ; ret
0x00000000004048f8 : cld ; add rsp, 0x160 ; pop rbp ; ret
0x0000000000413e12 : cld ; add rsp, 0x1b0 ; pop rbp ; ret
0x0000000000413691 : cld ; add rsp, 0x1d0 ; pop rbp ; ret
0x0000000000404d33 : cld ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000415a04 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000416bcb : cld ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000419cc6 : cld ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041c200 : cld ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040a351 : cld ; add rsp, 0x90 ; pop rbp ; ret
0x000000000040c561 : cld ; add rsp, 0xb0 ; pop rbp ; ret
0x000000000040f55a : cld ; add rsp, 0xc0 ; pop rbp ; ret
0x0000000000404161 : cld ; add rsp, 0xd0 ; pop rbp ; ret
0x0000000000417c29 : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x0000000000404b69 : cld ; add rsp, 0xf0 ; pop rbp ; ret
0x000000000041c9e8 : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000415843 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404d30 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000415a01 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000419cc3 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000402aca : cmp al, 0x25 ; ret
0x0000000000411426 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000041fcb4 : cmp byte ptr [rdi + rdi*8], ch ; jmp qword ptr [rax]
0x0000000000402843 : cmp byte ptr [rdx], al ; jmp rax
0x0000000000402883 : cmp byte ptr [rdx], al ; jmp rdx
0x000000000040e45a : cmp dword ptr [rax - 0x75], ecx ; jne 0x40e444 ; call rax
0x00000000004201f1 : cmp dword ptr [rax], eax ; add byte ptr [rax], bl ; sar edi, cl ; jmp qword ptr [rax]
0x000000000041277f : cmp eax, 0x48fffefd ; add esp, 0x20 ; pop rbp ; ret
0x000000000040282d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x402840 ; pop rbp ; ret
0x000000000041a58b : cmp esi, 0xc48348ff ; pop rbp ; ret
0x000000000041f874 : cwde ; mov ch, -2 ; jmp qword ptr [rax]
0x00000000004145dc : cwde ; mov rcx, qword ptr [rax*8 + 0x41f028] ; jmp rcx
0x000000000041fa34 : cwde ; out -2, al ; jmp qword ptr [rax]
0x000000000041fd64 : cwde ; xor al, 0xffffffffffffffff ; jmp rax
0x000000000041fce4 : cwde ; xor edi, edi ; jmp rax
0x0000000000413c15 : dec dword ptr [rax + 0x3b] ; or byte ptr [r15], cl ; sahf ; ret 0xe280
0x0000000000413c2c : dec dword ptr [rax + 0x3b] ; sbb byte ptr [r15], cl ; sahf ; ret 0xe280
0x0000000000404c53 : dec dword ptr [rax - 0x75] ; clc ; pop rbp ; ret
0x000000000040ace6 : dec dword ptr [rax - 0x77] ; ret 0x61e8
0x00000000004061b4 : dec dword ptr [rax - 0x77] ; ret 0x83e8
0x000000000040652d : dec dword ptr [rax - 0x77] ; ret 0xae8
0x000000000040470c : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000041b9af : dec dword ptr [rax - 0x7f] ; ret 1
0x0000000000404706 : dec dword ptr [rbx - 0x1174b] ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000404813 : dec dword ptr [rbx - 0x12f4b] ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040780c : dec dword ptr [rbx - 0x19773] ; jmp qword ptr [rcx]
0x0000000000406838 : dec dword ptr [rbx - 0x68773] ; jmp qword ptr [rcx]
0x000000000040b500 : div dword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000040b4ff : div qword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x0000000000419ac9 : enter -0x3577, -0x7f ; ret 0xffff
0x000000000041150b : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000040e457 : enter -0x74b8, 0x39 ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x0000000000404f03 : enter -0x74b8, 0x7d ; fsubr st(0) ; ret
0x00000000004087d4 : enter -0x7cb8, -0x3c ; pop rbp ; ret
0x000000000041f6b0 : enter 0xb, 0 ; xor dil, sil ; jmp qword ptr [rax]
0x000000000040422a : fadd qword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041998c : fbld dword ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000041998d : fbld dword ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000041fe74 : fcomp dword ptr [rdx - 1] ; jmp qword ptr [rax]
0x000000000041fd74 : fdiv dword ptr [rdi + rdi*8] ; jmp qword ptr [rax]
0x000000000041f9e5 : fdiv st(6), st(0) ; jmp rax
0x000000000041a372 : fiadd dword ptr [rdi] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004060c7 : fild word ptr [rcx] ; call 0x402305
0x0000000000403bbc : fld dword ptr [rcx] ; jmp rcx
0x0000000000407c74 : fmul dword ptr [r8 + 0x3b] ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x9588
0x0000000000407c75 : fmul dword ptr [rax + 0x3b] ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x9588
0x0000000000410e43 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x00000000004072e6 : fmul dword ptr [rbx - 0x74b4b] ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000041fdf4 : fmul dword ptr [rdx - 1] ; jmp qword ptr [rax]
0x000000000041ca9c : fmul qword ptr [rax - 0x7d] ; ret
0x000000000040a376 : fsub dword ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000040a377 : fsub dword ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000041fc24 : fsub dword ptr [rdi + rdi*8] ; jmp rax
0x0000000000404f07 : fsubr st(0) ; ret
0x0000000000402a89 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000418c06 : hlt ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040a38a : hlt ; mov qword ptr [rbp - 0x18], rdx ; pop rbp ; ret
0x000000000041b2bd : hlt ; mov rcx, qword ptr [rbp - 8] ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x0000000000402840 : hlt ; pop rbp ; mov edi, 0x624438 ; jmp rax
0x000000000042285c : in al, 0x25 ; add byte ptr [rax], al ; and byte ptr [rbx - 1], bh ; call qword ptr [rax]
0x000000000042295c : in al, 0x26 ; add byte ptr [rax], al ; push rax ; jg 0x422969 ; jmp qword ptr [rdi]
0x000000000041b1dc : in al, 0x48 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040a057 : in al, dx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403b6c : in al, dx ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004197ed : in al, dx ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000041bd93 : in al, dx ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004197f0 : in al, dx ; pop rbp ; ret
0x0000000000402ac6 : in al, dx ; xor byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x000000000040b613 : in eax, -0x50 ; add dword ptr [rcx + rax], esp ; movzx eax, al ; pop rbp ; ret
0x000000000041fa25 : in eax, -2 ; jmp rax
0x0000000000412823 : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x0000000000405a8f : in eax, dx ; ret
0x000000000041f7af : inc dword ptr [rax] ; adc byte ptr [rax], al ; add byte ptr [rax], ch ; test edi, esi ; jmp qword ptr [rax]
0x000000000041fcaf : inc dword ptr [rax] ; and al, 0 ; add byte ptr [rax], bh ; sub al, -1 ; jmp qword ptr [rax]
0x000000000041fbef : inc dword ptr [rax] ; and dword ptr [rax], eax ; add byte ptr [rax], ch ; and edi, edi ; jmp qword ptr [rax]
0x00000000004201ef : inc dword ptr [rax] ; cmp dword ptr [rax], eax ; add byte ptr [rax], bl ; sar edi, cl ; jmp qword ptr [rax]
0x000000000041ac04 : inc dword ptr [rcx - 0x46343] ; jmp qword ptr [rdx]
0x0000000000406966 : inc dword ptr [rcx - 0xf] ; jmp qword ptr [rcx]
0x000000000041fd5f : inc eax ; add byte ptr es:[rax], al ; cwde ; xor al, 0xffffffffffffffff ; jmp rax
0x000000000041fbdf : inc eax ; and byte ptr [rax], al ; add byte ptr [rax], bh ; and bh, bh ; jmp rax
0x000000000041fc1f : inc eax ; and dword ptr [rax], eax ; add al, bl ; and al, 0xffffffffffffffff ; jmp rax
0x000000000041fc9f : inc eax ; and eax, dword ptr [rax] ; add al, cl ; sub edi, edi ; jmp rax
0x000000000041f9df : inc eax ; sbb byte ptr [rax], al ; add byte ptr [rax], bl ; fdiv st(6), st(0) ; jmp rax
0x0000000000414be0 : int 0x80
0x0000000000402833 : ja 0x40283a ; pop rbp ; ret
0x000000000040fc81 : ja 0x40fcce ; pop rbp ; ret
0x00000000004132fa : ja 0x41330e ; xchg eax, esp ; ret 0xe280
0x000000000041ff25 : jae 0x41ff28 ; jmp rax
0x00000000004002fe : jbe 0x4002a1 ; ret
0x000000000040283f : je 0x40283d ; pop rbp ; mov edi, 0x624438 ; jmp rax
0x0000000000405e18 : je 0x405e75 ; call 0x402128
0x00000000004002f8 : jg 0x400303 ; add byte ptr [rax], al ; mov esp, 0x439e7650 ; ret
0x0000000000422961 : jg 0x422964 ; jmp qword ptr [rdi]
0x0000000000422981 : jg 0x422984 ; jmp qword ptr [rdi]
0x0000000000405f0d : jge 0x405eeb ; call 0x402134
0x0000000000406493 : jge 0x40647d ; mov rsi, qword ptr [rbp - 0x28] ; call 0x402718
0x000000000040dd3a : jge 0x40dd3b ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040dd5a : jge 0x40dd5b ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040dd7a : jge 0x40dd7b ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000040e0d0 : jge 0x40e0c3 ; mov rcx, qword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040e727 : jge 0x40e727 ; mov esi, eax ; call 0x41a956
0x000000000040f5e0 : jge 0x40f5d3 ; mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040fc7d : jge 0x40fc7e ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000412826 : jge 0x412823 ; pop rbp ; ret
0x0000000000412b1a : jge 0x412b1b ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000412b3a : jge 0x412b3b ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000412b5a : jge 0x412b5b ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000412b80 : jge 0x412b7d ; pop rbp ; ret
0x000000000041ac2d : jge 0x41abf1 ; call rax
0x000000000041ad49 : jge 0x41ad14 ; mov rsi, qword ptr [rbp - 0x460] ; call rax
0x000000000041ada6 : jge 0x41ad6a ; call rax
0x000000000041ae24 : jge 0x41ade0 ; call rax
0x000000000041ae56 : jge 0x41ae12 ; call rax
0x000000000041c21a : jge 0x41c21d ; mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x0000000000420721 : jge 0x420723 ; jmp rax
0x0000000000420720 : jge 0x420724 ; jmp rax
0x000000000040b604 : jle 0x40b61d ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004021bb : jmp 0x4020d7
0x000000000040707f : jmp 0x4079a3
0x000000000040f7c1 : jmp 0x40f7c4
0x000000000040e8e0 : jmp 0x49037230
0x000000000040f31e : jmp 0x49037c6e
0x000000000040f38b : jmp 0x49037cdb
0x000000000040fac2 : jmp 0x49038412
0x000000000040fb2f : jmp 0x4903847f
0x000000000041f6b7 : jmp qword ptr [rax]
0x000000000040683e : jmp qword ptr [rcx]
0x0000000000420aa3 : jmp qword ptr [rdi]
0x000000000041ac0a : jmp qword ptr [rdx]
0x000000000041a174 : jmp qword ptr [rsi]
0x0000000000402847 : jmp rax
0x0000000000420443 : jmp rbx
0x0000000000402e6b : jmp rcx
0x0000000000402887 : jmp rdx
0x0000000000420e43 : jmp rsp
0x0000000000402870 : jne 0x402877 ; pop rbp ; ret
0x0000000000406497 : jne 0x406475 ; call 0x402714
0x000000000040a389 : jne 0x40a386 ; mov qword ptr [rbp - 0x18], rdx ; pop rbp ; ret
0x000000000040b501 : jne 0x40b4f9 ; mov rax, rdx ; pop rbp ; ret
0x000000000040e146 : jne 0x40e131 ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000040e45d : jne 0x40e441 ; call rax
0x000000000040fe72 : jne 0x40fe6a ; mov rax, rdx ; pop rbp ; ret
0x00000000004127e9 : jne 0x4127cd ; mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x00000000004136c1 : jne 0x4136b9 ; mov rax, rdx ; pop rbp ; ret
0x0000000000419429 : jne 0x41940c ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x0000000000419821 : jne 0x419819 ; mov rax, rdx ; pop rbp ; ret
0x0000000000419932 : jne 0x41992a ; mov rax, rdx ; pop rbp ; ret
0x000000000041b258 : jne 0x41b250 ; mov rax, rdx ; pop rbp ; ret
0x000000000041ff35 : jne 0x41ff38 ; jmp qword ptr [rax]
0x0000000000422861 : jnp 0x422864 ; call qword ptr [rax]
0x0000000000408b51 : jo 0x408bb2 ; ret
0x000000000040bca0 : jo 0x40bcb7 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040bfcb : jo 0x40c02c ; ret
0x0000000000410535 : jo 0x410596 ; ret
0x0000000000411c44 : jo 0x411ca5 ; ret
0x0000000000411d7e : jo 0x411ddf ; ret
0x00000000004122be : jo 0x4122c6 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000412b3f : jo 0x412ba0 ; ret
0x0000000000412b3e : jo 0x412ba1 ; ret
0x0000000000417810 : jo 0x417871 ; ret
0x00000000004187cf : jo 0x41875b ; stc ; add eax, 0xf000000 ; xchg eax, esp ; ret 0x9588
0x000000000041c204 : jo 0x41c265 ; ret
0x00000000004115e0 : js 0x411640 ; pop rbp ; ret
0x00000000004060c3 : lea edi, dword ptr [0x41df0b] ; call 0x402309
0x0000000000407ac8 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000407ac7 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000041a899 : loop 0x41a8eb ; or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x000000000041a981 : loop 0x41a9d3 ; or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x000000000040afcc : loope 0x40afd5 ; movzx eax, cl ; pop rbp ; ret
0x000000000041b174 : loope 0x41b17d ; movzx eax, cl ; pop rbp ; ret
0x0000000000406494 : loopne 0x4064e5 ; mov esi, dword ptr [rbp - 0x28] ; call 0x402717
0x000000000040d03b : loopne 0x40d08b ; add esp, 0x20 ; pop rbp ; ret
0x000000000040d03a : loopne 0x40d08c ; add esp, 0x20 ; pop rbp ; ret
0x000000000040da6f : loopne 0x40dabf ; add esp, 0x20 ; pop rbp ; ret
0x000000000040da6e : loopne 0x40dac0 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040dd1b : loopne 0x40dd6b ; add esp, 0x30 ; pop rbp ; ret
0x000000000040dd1a : loopne 0x40dd6c ; add esp, 0x30 ; pop rbp ; ret
0x000000000040e147 : loopne 0x40e199 ; mov esi, eax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x00000000004152eb : loopne 0x41533b ; add esp, 0x20 ; pop rbp ; ret
0x00000000004152ea : loopne 0x41533c ; add esp, 0x20 ; pop rbp ; ret
0x00000000004157e0 : loopne 0x4157e8 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000417c2d : loopne 0x417c34 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041c5c5 : loopne 0x41c57b ; add al, ch ; ret
0x000000000041c5c4 : loopne 0x41c57c ; add al, ch ; ret
0x00000000004200a5 : mov ah, -1 ; jmp rax
0x000000000040e04e : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040c565 : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040aee6 : mov al, 0 ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000406421 : mov al, 0 ; call 0x4026b4
0x0000000000411b1b : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004119ab : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x000000000040d2a1 : mov al, 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040b614 : mov al, 1 ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000415395 : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041998b : mov al, byte ptr [rbp - 0x21] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000407c08 : mov al, byte ptr [rbp - 0xa] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000404388 : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040b196 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040a5cb : mov al, byte ptr [rbp - 9] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041b2dc : mov al, byte ptr [rdi + 0x1c] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041aa3f : mov al, dh ; movzx eax, al ; pop rbp ; ret
0x000000000041aa3e : mov al, sil ; movzx eax, al ; pop rbp ; ret
0x000000000041a9bf : mov ax, si ; movzx eax, ax ; pop rbp ; ret
0x0000000000412acc : mov bh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041a9c3 : mov bh, -0x40 ; pop rbp ; ret
0x000000000040ca81 : mov byte ptr [0x6248f8], al ; pop rbp ; ret
0x000000000041b37d : mov byte ptr [rax + 0x1c], 0 ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000040d96d : mov byte ptr [rbp - 1], 0x3f ; movsx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x000000000041fde4 : mov byte ptr [rdi - 1], al ; jmp rax
0x0000000000407b17 : mov byte ptr [rdx + 0x19], cl ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040d888 : mov byte ptr [rdx + 0xb], 0 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000410131 : mov byte ptr [rdx], al ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004028a3 : mov byte ptr [rip + 0x221bee], 1 ; ret
0x000000000041f875 : mov ch, -2 ; jmp qword ptr [rax]
0x000000000040fdef : mov dh, -0x39 ; pop rbp ; ret
0x000000000040cffe : mov dh, -0x3e ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040b22d : mov dh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040afcf : mov dh, -0x3f ; pop rbp ; ret
0x0000000000404bb2 : mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408538 : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040424b : mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004037b3 : mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040844f : mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004038f5 : mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000404fc1 : mov dh, -0x40 ; add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x0000000000408b4c : mov dh, -0x40 ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040438e : mov dh, -0x40 ; pop rbp ; ret
0x00000000004127e6 : mov dh, -0xe ; mov dword ptr [rbp - 0x24], esi ; mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x0000000000420075 : mov dl, -1 ; jmp qword ptr [rax]
0x0000000000420065 : mov dl, -1 ; jmp rax
0x000000000040c8fd : mov dword ptr [0x6248e8], edi ; pop rbp ; ret
0x000000000040ca5d : mov dword ptr [0x6248f0], edi ; pop rbp ; ret
0x00000000004103e6 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004102f4 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004103a8 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004197eb : mov dword ptr [rbp - 0x14], eax ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x00000000004042ff : mov dword ptr [rbp - 0x18], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040a55f : mov dword ptr [rbp - 0x18], eax ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040a38c : mov dword ptr [rbp - 0x18], edx ; pop rbp ; ret
0x000000000041b1da : mov dword ptr [rbp - 0x1c], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d039 : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004127e8 : mov dword ptr [rbp - 0x24], esi ; mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x000000000040a375 : mov dword ptr [rbp - 0x28], eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000402b99 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004087d2 : mov dword ptr [rbp - 0x38], eax ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040e04c : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041a6eb : mov dword ptr [rbp - 0x50], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000405bd9 : mov dword ptr [rbp - 0x558], eax ; call 0x411e88
0x0000000000405bee : mov dword ptr [rbp - 0x560], eax ; call 0x411e88
0x0000000000402a87 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040a388 : mov dword ptr [rbp - 0xc], esi ; mov qword ptr [rbp - 0x18], rdx ; pop rbp ; ret
0x0000000000402ab5 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041c9e9 : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040c8e1 : mov dword ptr [rbp - 8], eax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000415935 : mov dword ptr [rbp - 8], ecx ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000412825 : mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x000000000041b2c2 : mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x000000000041958f : mov dword ptr [rcx + 0x18], eax ; pop rbp ; ret
0x00000000004190f6 : mov dword ptr [rcx + 0x2c], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041045e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000418d18 : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404e85 : mov dword ptr [rcx + 0x38], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404ed5 : mov dword ptr [rcx + 0x40], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040e55a : mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x000000000041b038 : mov dword ptr [rdi + 0x18], 0x95f616 ; pop rbp ; ret
0x000000000040fc80 : mov dword ptr [rdi + 0x48], esi ; pop rbp ; ret
0x000000000041c21c : mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x000000000040b603 : mov dword ptr [rsi + 0x10], edi ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040a414 : mov eax, 0x48ffff7f ; add esp, 0x10 ; pop rbp ; ret
0x00000000004115dc : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000408130 : mov eax, 0xf013b48 ; xchg eax, esp ; ret 0xe280
0x000000000040fff4 : mov eax, 0xffffffff ; pop rbp ; ret
0x000000000041ac28 : mov eax, dword ptr [rax + 0x10] ; mov rdi, qword ptr [rbp - 0x40] ; call rax
0x000000000041ae51 : mov eax, dword ptr [rax + 0x18] ; mov rdi, qword ptr [rbp - 0x48] ; call rax
0x000000000041acb4 : mov eax, dword ptr [rax] ; mov rdi, qword ptr [rbp - 0x460] ; call rax
0x000000000041ae20 : mov eax, dword ptr [rax] ; mov rdi, qword ptr [rbp - 0x48] ; call rax
0x00000000004102a8 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000404e32 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040cf7c : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040cc6b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004102a5 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000412ba1 : mov eax, dword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040ceff : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040a055 : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403b6a : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004197ee : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000040cd82 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041025d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004102ee : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040a563 : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040da6d : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040dd19 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040e14c : mov eax, dword ptr [rbp - 0x20] ; call rax
0x000000000040bd80 : mov eax, dword ptr [rbp - 0x24] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004127eb : mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x000000000040f83f : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041942f : mov eax, dword ptr [rbp - 0x28] ; call rax
0x00000000004103aa : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040b3ab : mov eax, dword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041052f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004115da : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000411b19 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041b422 : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000418c04 : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000415844 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404d31 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000415a02 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000416bc9 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000419cc4 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041c1fe : mov eax, dword ptr [rbp - 4] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040fd0b : mov eax, dword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040d605 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b471 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040e4bb : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000416784 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040c121 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040bfc5 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000404c55 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040dd3d : mov eax, dword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040dd5d : mov eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040dd7d : mov eax, dword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000412b1d : mov eax, dword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000412b5d : mov eax, dword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000412b3d : mov eax, dword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000040641f : mov eax, eax ; mov al, 0 ; call 0x4026b6
0x000000000041280c : mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041293f : mov eax, edi ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041a85e : mov eax, edi ; pop rbp ; ret
0x000000000040e741 : mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040a46d : mov eax, edx ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040b504 : mov eax, edx ; pop rbp ; ret
0x000000000040b1bf : mov eax, esi ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004128b3 : mov eax, esi ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041a9c0 : mov eax, esi ; movzx eax, ax ; pop rbp ; ret
0x000000000040a633 : mov eax, esi ; pop rbp ; ret
0x000000000041acb8 : mov ebp, 0xfffffba0 ; call rax
0x0000000000405de8 : mov ebp, 0xfffffe38 ; call 0x4020f7
0x00000000004028cb : mov ebp, esp ; call rax
0x0000000000402831 : mov ebp, esp ; ja 0x40283c ; pop rbp ; ret
0x000000000040fff2 : mov ebp, esp ; mov eax, 0xffffffff ; pop rbp ; ret
0x0000000000412822 : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000402e64 : mov ecx, dword ptr [rax*8 + 0x41cb80] ; jmp rcx
0x0000000000403bb8 : mov ecx, dword ptr [rax*8 + 0x41d900] ; jmp rcx
0x00000000004105e7 : mov ecx, dword ptr [rax*8 + 0x41eac0] ; jmp rcx
0x00000000004108c7 : mov ecx, dword ptr [rax*8 + 0x41eb08] ; jmp rcx
0x00000000004145de : mov ecx, dword ptr [rax*8 + 0x41f028] ; jmp rcx
0x0000000000419524 : mov ecx, dword ptr [rax*8 + 0x41f3f8] ; jmp rcx
0x00000000004102f1 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040eaa2 : mov ecx, dword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040ea3f : mov ecx, dword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040e0d3 : mov ecx, dword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040f5e3 : mov ecx, dword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000041abdb : mov ecx, dword ptr [rbp - 0x48] ; call rax
0x000000000041b2bf : mov ecx, dword ptr [rbp - 8] ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x000000000041958c : mov ecx, dword ptr [rbp - 8] ; mov dword ptr [rcx + 0x18], eax ; pop rbp ; ret
0x000000000040f6b0 : mov ecx, dword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000041a8fd : mov ecx, eax ; shl edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000041a8cd : mov ecx, eax ; shr edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x00000000004028c5 : mov edi, 0x623e20 ; mov rbp, rsp ; call rax
0x0000000000402842 : mov edi, 0x624438 ; jmp rax
0x0000000000402882 : mov edi, 0x624438 ; jmp rdx
0x0000000000405de7 : mov edi, dword ptr [rbp - 0x1c8] ; call 0x4020f8
0x0000000000406492 : mov edi, dword ptr [rbp - 0x20] ; mov rsi, qword ptr [rbp - 0x28] ; call 0x402719
0x0000000000405f0c : mov edi, dword ptr [rbp - 0x28] ; call 0x402135
0x000000000041ac2c : mov edi, dword ptr [rbp - 0x40] ; call rax
0x000000000041acb7 : mov edi, dword ptr [rbp - 0x460] ; call rax
0x000000000041ae23 : mov edi, dword ptr [rbp - 0x48] ; call rax
0x000000000040e726 : mov edi, dword ptr [rbp - 8] ; mov esi, eax ; call 0x41a957
0x000000000040fc7c : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040dd39 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040dd59 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040dd79 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000412b19 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000412b59 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000412b39 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000040ea43 : mov edi, dword ptr [rcx] ; call rax
0x000000000040e459 : mov edi, dword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x000000000041ca97 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000041ca96 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000041abd7 : mov edx, dword ptr [rbp - 0x40] ; mov rcx, qword ptr [rbp - 0x48] ; call rax
0x0000000000412ba5 : mov edx, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000416c2a : mov esi, 0x48ffffff ; add esp, 0x10 ; pop rbp ; ret
0x000000000040e522 : mov esi, 0x48ffffff ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040e45c : mov esi, dword ptr [rbp - 0x20] ; call rax
0x0000000000406496 : mov esi, dword ptr [rbp - 0x28] ; call 0x402715
0x000000000041ad4c : mov esi, dword ptr [rbp - 0x460] ; call rax
0x000000000040e0d7 : mov esi, dword ptr [rcx] ; call rax
0x000000000040e729 : mov esi, eax ; call 0x41a954
0x0000000000402880 : mov esi, eax ; mov edi, 0x624438 ; jmp rdx
0x000000000040e149 : mov esi, eax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000041942c : mov esi, eax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x00000000004002fc : mov esp, 0x439e7650 ; ret
0x000000000040c8fc : mov qword ptr [0x6248e8], rdi ; pop rbp ; ret
0x000000000040ca5c : mov qword ptr [0x6248f0], rdi ; pop rbp ; ret
0x00000000004042fe : mov qword ptr [rbp - 0x18], rax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040a55e : mov qword ptr [rbp - 0x18], rax ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040a38b : mov qword ptr [rbp - 0x18], rdx ; pop rbp ; ret
0x0000000000405bd8 : mov qword ptr [rbp - 0x558], rax ; call 0x411e89
0x0000000000405bed : mov qword ptr [rbp - 0x560], rax ; call 0x411e89
0x000000000040c8e0 : mov qword ptr [rbp - 8], rax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000415934 : mov qword ptr [rbp - 8], rcx ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000412824 : mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000041045d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000418d17 : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404e84 : mov qword ptr [rcx + 0x38], rax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404ed4 : mov qword ptr [rcx + 0x40], rax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040fc7f : mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040e04d : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040641e : mov r8, rax ; mov al, 0 ; call 0x4026b7
0x0000000000411b1a : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004115db : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x000000000041ac27 : mov rax, qword ptr [rax + 0x10] ; mov rdi, qword ptr [rbp - 0x40] ; call rax
0x000000000041ae50 : mov rax, qword ptr [rax + 0x18] ; mov rdi, qword ptr [rbp - 0x48] ; call rax
0x000000000041ae1f : mov rax, qword ptr [rax] ; mov rdi, qword ptr [rbp - 0x48] ; call rax
0x0000000000404e31 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040cf7b : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040cc6a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004102a4 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000412ba0 : mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040cefe : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040cd81 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041025c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040a562 : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040da6c : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040dd18 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040e14b : mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000040f83e : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041942e : mov rax, qword ptr [rbp - 0x28] ; call rax
0x000000000040b3aa : mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041052e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000411b18 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040fd0a : mov rax, qword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040d604 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b470 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040e4ba : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000416783 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040c120 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040bfc4 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000404c54 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040dd3c : mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040dd5c : mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040dd7c : mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000412b1c : mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000412b5c : mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000412b3c : mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000041a85d : mov rax, rdi ; pop rbp ; ret
0x000000000040e740 : mov rax, rdx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040a46c : mov rax, rdx ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040b503 : mov rax, rdx ; pop rbp ; ret
0x000000000040a632 : mov rax, rsi ; pop rbp ; ret
0x00000000004028ca : mov rbp, rsp ; call rax
0x0000000000402830 : mov rbp, rsp ; ja 0x40283d ; pop rbp ; ret
0x000000000040fff1 : mov rbp, rsp ; mov eax, 0xffffffff ; pop rbp ; ret
0x0000000000412821 : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000402e63 : mov rcx, qword ptr [rax*8 + 0x41cb80] ; jmp rcx
0x0000000000403bb7 : mov rcx, qword ptr [rax*8 + 0x41d900] ; jmp rcx
0x00000000004105e6 : mov rcx, qword ptr [rax*8 + 0x41eac0] ; jmp rcx
0x00000000004108c6 : mov rcx, qword ptr [rax*8 + 0x41eb08] ; jmp rcx
0x00000000004145dd : mov rcx, qword ptr [rax*8 + 0x41f028] ; jmp rcx
0x0000000000419523 : mov rcx, qword ptr [rax*8 + 0x41f3f8] ; jmp rcx
0x000000000040eaa1 : mov rcx, qword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040ea3e : mov rcx, qword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040e0d2 : mov rcx, qword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040f5e2 : mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000041abda : mov rcx, qword ptr [rbp - 0x48] ; call rax
0x000000000041b2be : mov rcx, qword ptr [rbp - 8] ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x000000000041958b : mov rcx, qword ptr [rbp - 8] ; mov dword ptr [rcx + 0x18], eax ; pop rbp ; ret
0x000000000040f6af : mov rcx, qword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000405de6 : mov rdi, qword ptr [rbp - 0x1c8] ; call 0x4020f9
0x0000000000405f0b : mov rdi, qword ptr [rbp - 0x28] ; call 0x402136
0x000000000041ac2b : mov rdi, qword ptr [rbp - 0x40] ; call rax
0x000000000041acb6 : mov rdi, qword ptr [rbp - 0x460] ; call rax
0x000000000041ae22 : mov rdi, qword ptr [rbp - 0x48] ; call rax
0x000000000040e725 : mov rdi, qword ptr [rbp - 8] ; mov esi, eax ; call 0x41a958
0x000000000040fc7b : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040dd38 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040dd58 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040dd78 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000412b18 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000412b58 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000412b38 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000040ea42 : mov rdi, qword ptr [rcx] ; call rax
0x000000000040e458 : mov rdi, qword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x000000000041abd6 : mov rdx, qword ptr [rbp - 0x40] ; mov rcx, qword ptr [rbp - 0x48] ; call rax
0x0000000000412ba4 : mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040e45b : mov rsi, qword ptr [rbp - 0x20] ; call rax
0x0000000000406495 : mov rsi, qword ptr [rbp - 0x28] ; call 0x402716
0x000000000041ad4b : mov rsi, qword ptr [rbp - 0x460] ; call rax
0x000000000040e0d6 : mov rsi, qword ptr [rcx] ; call rax
0x000000000040287f : mov rsi, rax ; mov edi, 0x624438 ; jmp rdx
0x000000000040e148 : mov rsi, rax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000041942b : mov rsi, rax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x000000000041ac85 : movabs al, byte ptr [0x8148ca8948fffffb] ; ret 1
0x000000000040d971 : movsx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000404bb1 : movzx eax, al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408537 : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040424a : movzx eax, al ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004037b2 : movzx eax, al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040844e : movzx eax, al ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004038f4 : movzx eax, al ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000404fc0 : movzx eax, al ; add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x0000000000408b4b : movzx eax, al ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040438d : movzx eax, al ; pop rbp ; ret
0x000000000041a9c2 : movzx eax, ax ; pop rbp ; ret
0x000000000040fdee : movzx eax, bh ; pop rbp ; ret
0x000000000040b22c : movzx eax, cl ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040afce : movzx eax, cl ; pop rbp ; ret
0x0000000000412acb : movzx eax, cx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040fded : movzx eax, dil ; pop rbp ; ret
0x000000000040cffd : movzx eax, dl ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004165a0 : movzx eax, word ptr [rbp - 2] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000407c09 : mul byte ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x0000000000407c0a : mul byte ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000040a5cc : mul dword ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000040a5cd : mul dword ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x0000000000421a20 : nop ; add al, -1 ; jmp qword ptr [rdx]
0x000000000041cab8 : nop dword ptr [rax + rax] ; ret
0x0000000000403ada : or al, 0x25 ; ret 0x41d9
0x000000000041fba5 : or al, 0xffffffffffffffff ; jmp rax
0x0000000000421ac1 : or bh, bh ; call rbx
0x000000000041fb75 : or bh, bh ; jmp qword ptr [rax]
0x0000000000413c18 : or byte ptr [r15], cl ; sahf ; ret 0xe280
0x00000000004127dd : or byte ptr [r15], cl ; xchg eax, edi ; ret 0xe280
0x000000000040b553 : or byte ptr [r15], cl ; xchg eax, esp ; ret 0x5588
0x0000000000410e3e : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000410e3f : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000041fea4 : or byte ptr [rbp - 1], bl ; jmp rax
0x000000000041f734 : or byte ptr [rbp - 2], cl ; jmp qword ptr [rax]
0x000000000040c2de : or byte ptr [rcx + 0x39f9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000040cfe0 : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000041fe24 : or byte ptr [rdi - 1], dl ; jmp rax
0x0000000000413c19 : or byte ptr [rdi], cl ; sahf ; ret 0xe280
0x00000000004127de : or byte ptr [rdi], cl ; xchg eax, edi ; ret 0xe280
0x000000000040b554 : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x0000000000407081 : or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000040dfeb : or dword ptr [rcx], eax ; add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x0000000000411d01 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d88a : or eax, dword ptr [rax] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041fb65 : or edi, edi ; jmp rax
0x000000000041a85b : or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x000000000041a8d1 : or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000041a85a : or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x000000000041fa35 : out -2, al ; jmp qword ptr [rax]
0x000000000040fdeb : out 1, eax ; movzx eax, dil ; pop rbp ; ret
0x00000000004028a5 : out dx, al ; sbb esp, dword ptr [rdx] ; add byte ptr [rcx], al ; ret
0x0000000000415397 : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041a8d0 : out dx, eax ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000040dfd9 : outsb dx, byte ptr [rsi] ; ret 0x280f
0x000000000041caac : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041caae : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000414a9e : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041cab0 : pop r14 ; pop r15 ; ret
0x0000000000407acc : pop r14 ; pop rbp ; ret
0x0000000000414aa0 : pop r15 ; pop rbp ; ret
0x000000000041cab2 : pop r15 ; ret
0x000000000041fee4 : pop rax ; push -1 ; jmp rax
0x00000000004028a2 : pop rbp ; mov byte ptr [rip + 0x221bee], 1 ; ret
0x0000000000402841 : pop rbp ; mov edi, 0x624438 ; jmp rax
0x000000000040287e : pop rbp ; mov rsi, rax ; mov edi, 0x624438 ; jmp rdx
0x000000000041caab : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041caaf : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000402835 : pop rbp ; ret
0x0000000000414a9d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000407acb : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000404fc7 : pop rbx ; pop rbp ; ret
0x0000000000414aa1 : pop rdi ; pop rbp ; ret
0x000000000041cab3 : pop rdi ; ret
0x0000000000414a9f : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000041cab1 : pop rsi ; pop r15 ; ret
0x0000000000407acd : pop rsi ; pop rbp ; ret
0x000000000041caad : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040b4d0 : pop rsp ; popfq ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040dff0 : pop rsp ; ret 0xf66
0x000000000040b4d1 : popfq ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041fee5 : push -1 ; jmp rax
0x0000000000412b1e : push r8 ; pop rbp ; ret
0x00000000004002fd : push rax ; jbe 0x4002a2 ; ret
0x0000000000422960 : push rax ; jg 0x422965 ; jmp qword ptr [rdi]
0x0000000000408454 : push rax ; pop rbp ; ret
0x00000000004211e0 : push rax ; sar dh, 1 ; call rbx
0x0000000000412ba6 : push rbp ; clc ; pop rbp ; ret
0x0000000000410e42 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x00000000004028c4 : push rbp ; mov edi, 0x623e20 ; mov rbp, rsp ; call rax
0x0000000000412820 : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000041a555 : push rbp ; ror byte ptr [rax - 0x77], 1 ; ret 0x1e8
0x000000000041b63d : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000041150e : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000405fbb : push rcx ; ret
0x000000000040bb0c : push rsi ; adc byte ptr [rax + 0x29], cl ; ret 0x8948
0x0000000000405be0 : pushfq ; ret 0
0x000000000041f920 : rcl byte ptr [rip - 0x39e80000], -2 ; jmp rax
0x000000000041f960 : rcl byte ptr [rsi], 0 ; add byte ptr [rax], bl ; sar esi, 1 ; jmp rax
0x000000000041a8ce : rcl ebx, -0x11 ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000041a8fe : rcl ebx, -0x19 ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000041f9e0 : rcr byte ptr [rax], 0 ; add byte ptr [rax], bl ; fdiv st(6), st(0) ; jmp rax
0x000000000041fb20 : rcr byte ptr [rip + 0x5f80000], -1 ; jmp rax
0x0000000000400301 : ret
0x0000000000405be1 : ret 0
0x00000000004161ea : ret 0x110
0x000000000041a559 : ret 0x1e8
0x00000000004027c2 : ret 0x221b
0x00000000004025c2 : ret 0x221c
0x00000000004023c2 : ret 0x221d
0x00000000004021c2 : ret 0x221e
0x000000000040dfda : ret 0x280f
0x00000000004165ca : ret 0x3948
0x0000000000403adc : ret 0x41d9
0x000000000040bd26 : ret 0x41df
0x000000000040bba7 : ret 0x4a8b
0x000000000040c4e9 : ret 0x51e8
0x000000000040b557 : ret 0x5588
0x00000000004168c6 : ret 0x5589
0x0000000000418bf7 : ret 0x60
0x000000000040ace9 : ret 0x61e8
0x0000000000410e5b : ret 0x6fe8
0x000000000040abea : ret 0x72
0x000000000040cfff : ret 0x8348
0x00000000004061b7 : ret 0x83e8
0x000000000040b8b3 : ret 0x870f
0x0000000000414599 : ret 0x8844
0x00000000004099b7 : ret 0x8948
0x00000000004099c5 : ret 0x894d
0x0000000000410f6d : ret 0x89a5
0x000000000040a7f1 : ret 0x8b48
0x0000000000406e3f : ret 0x8d88
0x0000000000403fd0 : ret 0x9588
0x0000000000409dde : ret 0xace8
0x0000000000406530 : ret 0xae8
0x0000000000402f08 : ret 0xb0
0x00000000004082ea : ret 0xb0e8
0x00000000004077d4 : ret 0xb6e8
0x000000000040e966 : ret 0xb948
0x0000000000402865 : ret 0xc148
0x0000000000404231 : ret 0xd284
0x00000000004083c6 : ret 0xd4e8
0x000000000040423e : ret 0xe280
0x000000000040c058 : ret 0xe2e8
0x0000000000403ba2 : ret 0xe883
0x00000000004037ee : ret 0xece8
0x000000000041145c : ret 0xee8
0x000000000040d3c2 : ret 0xf280
0x0000000000415409 : ret 0xf40
0x000000000040dff1 : ret 0xf66
0x0000000000409cee : ret 0xfce8
0x000000000041562a : ret 0xfecb
0x000000000040f330 : ret 0xff3
0x000000000040cdea : ret 0xff57
0x00000000004053ea : ret 0xffd2
0x00000000004030af : ret 0xfffb
0x0000000000405def : ret 0xffff
0x0000000000404347 : ret 1
0x000000000040c272 : ret 2
0x000000000041bf4b : ret 3
0x000000000040d238 : ret 8
0x0000000000404165 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000413695 : rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040afca : rol dword ptr [rax - 0x49f0fe1f], -0x3f ; pop rbp ; ret
0x000000000041ae1d : ror byte ptr [r8 - 0x75], 1 ; add byte ptr [rax - 0x75], cl ; jge 0x41ade7 ; call rax
0x0000000000414bdb : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000410530 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x41059b ; ret
0x000000000040286c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40287b ; pop rbp ; ret
0x000000000041ac26 : ror byte ptr [rax - 0x75], 1 ; adc byte ptr [rax - 0x75], cl ; jge 0x41abf8 ; call rax
0x000000000041ad9f : ror byte ptr [rax - 0x75], 1 ; adc byte ptr [rax - 0x75], cl ; jge 0x41ad71 ; call rax
0x000000000041ae1e : ror byte ptr [rax - 0x75], 1 ; add byte ptr [rax - 0x75], cl ; jge 0x41ade6 ; call rax
0x000000000041ae4f : ror byte ptr [rax - 0x75], 1 ; sbb byte ptr [rax - 0x75], cl ; jge 0x41ae19 ; call rax
0x0000000000414bdc : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x000000000041a556 : ror byte ptr [rax - 0x77], 1 ; ret 0x1e8
0x0000000000403a6c : ror byte ptr [rax - 0x77], 1 ; ret 0xb0
0x0000000000408b4d : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x408bb6 ; ret
0x0000000000410531 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x41059a ; ret
0x00000000004037b4 : ror byte ptr [rax - 0x7d], -0x3c ; pop rbp ; ret
0x0000000000408450 : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x000000000040bc9c : ror byte ptr [rax - 0x7f], -0x3c ; jo 0x40bcbb ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004122ba : ror byte ptr [rax - 0x7f], -0x3c ; jo 0x4122ca ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041b63e : ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000041150f : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000041f720 : ror byte ptr [rip + 0x4c380000], -2 ; jmp rax
0x00000000004197ea : ror dword ptr [rcx + 0x458bec45], -0x14 ; pop rbp ; ret
0x0000000000412c45 : sahf ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004002ff : sahf ; ret
0x0000000000413c1b : sahf ; ret 0xe280
0x00000000004201a0 : sal byte ptr [rdi], 0 ; add byte ptr [rax], bh ; sar bh, 1 ; jmp rax
0x0000000000420120 : sal byte ptr [rip - 0x3bf80000], -1 ; jmp rax
0x000000000040283e : sal byte ptr [rsp + rsi*8 + 0x5d], -0x41 ; cmp byte ptr [rdx], al ; jmp rax
0x00000000004201b5 : sar bh, 1 ; jmp qword ptr [rax]
0x00000000004201a5 : sar bh, 1 ; jmp rax
0x00000000004201e5 : sar bh, cl ; jmp rax
0x00000000004211e1 : sar dh, 1 ; call rbx
0x000000000041f975 : sar dh, cl ; jmp qword ptr [rax]
0x0000000000404236 : sar dword ptr [rip], 0xf ; xchg eax, ebp ; ret 0xe280
0x000000000040286e : sar eax, 1 ; jne 0x402879 ; pop rbp ; ret
0x00000000004201f5 : sar edi, cl ; jmp qword ptr [rax]
0x0000000000421201 : sar esi, 1 ; call rsp
0x000000000041f965 : sar esi, 1 ; jmp rax
0x000000000040286d : sar rax, 1 ; jne 0x40287a ; pop rbp ; ret
0x000000000041b37f : sbb al, 0 ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000041b2de : sbb al, 0x24 ; add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000413c2f : sbb byte ptr [r15], cl ; sahf ; ret 0xe280
0x000000000041ae53 : sbb byte ptr [rax - 0x75], cl ; jge 0x41ae15 ; call rax
0x000000000041ae52 : sbb byte ptr [rax - 0x75], cl ; jge 0x41ae16 ; call rax
0x000000000041f9e1 : sbb byte ptr [rax], al ; add byte ptr [rax], bl ; fdiv st(6), st(0) ; jmp rax
0x0000000000421abd : sbb byte ptr [rax], al ; add byte ptr [rax], dl ; or bh, bh ; call rbx
0x0000000000421abc : sbb byte ptr [rax], r8b ; add byte ptr [rax], dl ; or bh, bh ; call rbx
0x000000000041ff24 : sbb byte ptr [rbx - 1], dh ; jmp rax
0x0000000000413c30 : sbb byte ptr [rdi], cl ; sahf ; ret 0xe280
0x00000000004028a6 : sbb esp, dword ptr [rdx] ; add byte ptr [rcx], al ; ret
0x000000000040e764 : sete al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040b573 : setne al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041fce0 : shl byte ptr [rax + rax], 0 ; cwde ; xor edi, edi ; jmp rax
0x000000000041fbe0 : shl byte ptr [rax], 0 ; add byte ptr [rax], bh ; and bh, bh ; jmp rax
0x000000000041fca0 : shl byte ptr [rbx], 0 ; add al, cl ; sub edi, edi ; jmp rax
0x000000000040b575 : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000041fc20 : shl byte ptr [rcx], 0 ; add al, bl ; and al, 0xffffffffffffffff ; jmp rax
0x000000000041fd20 : shl byte ptr [rip + 0x33180000], -1 ; jmp rax
0x000000000040e00f : shl dword ptr [rsi + 0xf], 0x5c ; ret 0xf66
0x000000000041a8ff : shl edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000041a898 : shl edx, cl ; or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x0000000000421600 : shr bl, -2 ; jmp qword ptr [rdi]
0x000000000041fee0 : shr byte ptr [rax + rax], 0 ; pop rax ; push -1 ; jmp rax
0x000000000041ff20 : shr byte ptr [rip + 0x73180000], -1 ; jmp rax
0x000000000041a8cf : shr edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000041a858 : shr edx, cl ; or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x00000000004211dd : sldt word ptr [rax] ; push rax ; sar dh, 1 ; call rbx
0x00000000004211dc : sldt word ptr fs:[rax] ; push rax ; sar dh, 1 ; call rbx
0x00000000004187d1 : stc ; add eax, 0xf000000 ; xchg eax, esp ; ret 0x9588
0x0000000000405e1f : std ; ret 0xffff
0x0000000000400334 : sti ; add eax, 0xd0a4f270 ; ret
0x000000000040b198 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041fcb5 : sub al, -1 ; jmp qword ptr [rax]
0x00000000004214a0 : sub al, -2 ; call rbx
0x00000000004190f8 : sub al, 0x48 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000422afd : sub byte ptr [rax], al ; add byte ptr [rax], ah ; test edi, edi ; jmp qword ptr [rcx]
0x000000000041f6f4 : sub byte ptr [rcx - 2], al ; jmp qword ptr [rax]
0x0000000000422bbd : sub dword ptr [rax], eax ; add byte ptr [rax], dl ; xchg edi, edi ; call qword ptr [rsi]
0x0000000000422bbc : sub dword ptr [rax], r8d ; add byte ptr [rax], dl ; xchg edi, edi ; call qword ptr [rsi]
0x000000000040a62d : sub eax, edx ; add rsi, rax ; mov rax, rsi ; pop rbp ; ret
0x000000000041fca5 : sub edi, edi ; jmp rax
0x000000000041cb61 : sub esp, 8 ; add rsp, 8 ; ret
0x000000000041cb60 : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000412c74 : test al, -0x62 ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041630e : test al, 0 ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041f7a5 : test bh, dh ; jmp rax
0x000000000041caba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004215fc : test byte ptr [rbx], dl ; add byte ptr [rax], al ; shr bl, -2 ; jmp qword ptr [rdi]
0x0000000000405e19 : test byte ptr [rdi], cl ; add byte ptr [rax], al ; call 0x402127
0x00000000004218fc : test byte ptr [rsi], dl ; add byte ptr [rax], al ; add byte ptr [rbx], -1 ; jmp qword ptr [rax]
0x000000000040b8ac : test dword ptr [rax + 0x2b], 0x39481047 ; ret 0x870f
0x0000000000405bda : test dword ptr [rax - 0x17000006], ebp ; pushfq ; ret 0
0x0000000000405b41 : test dword ptr [rax - 0x17000006], esi ; ret
0x0000000000422b01 : test edi, edi ; jmp qword ptr [rcx]
0x000000000041f7b5 : test edi, esi ; jmp qword ptr [rax]
0x0000000000420821 : xchg dh, bh ; jmp rax
0x0000000000415cd7 : xchg eax, ebp ; ret 0x9588
0x000000000040423d : xchg eax, ebp ; ret 0xe280
0x000000000040d3c1 : xchg eax, ebp ; ret 0xf280
0x000000000040b574 : xchg eax, ebp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000405d59 : xchg eax, ebx ; ret
0x00000000004127e0 : xchg eax, edi ; ret 0xe280
0x000000000040afc9 : xchg eax, edx ; rol dword ptr [rax - 0x49f0fe1f], -0x3f ; pop rbp ; ret
0x0000000000400333 : xchg eax, edx ; sti ; add eax, 0xd0a4f270 ; ret
0x0000000000408f4a : xchg eax, esp ; ret
0x000000000040b556 : xchg eax, esp ; ret 0x5588
0x0000000000403fcf : xchg eax, esp ; ret 0x9588
0x0000000000404230 : xchg eax, esp ; ret 0xd284
0x0000000000408135 : xchg eax, esp ; ret 0xe280
0x00000000004186d0 : xchg eax, esp ; ret 0xf280
0x000000000041b171 : xchg eax, esp ; rol dword ptr [rax - 0x49f0fe1f], -0x3f ; pop rbp ; ret
0x000000000040e765 : xchg eax, esp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000422bc1 : xchg edi, edi ; call qword ptr [rsi]
0x000000000041a85c : xlatb ; mov rax, rdi ; pop rbp ; ret
0x000000000041fd75 : xor al, 0xffffffffffffffff ; jmp qword ptr [rax]
0x000000000041fd65 : xor al, 0xffffffffffffffff ; jmp rax
0x000000000041f6b5 : xor bh, dh ; jmp qword ptr [rax]
0x0000000000402ac7 : xor byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x000000000041a32e : xor byte ptr [rax], dl ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000422480 : xor byte ptr [rbp - 1], al ; jmp qword ptr [rdx]
0x000000000041ba4e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041f6b4 : xor dil, sil ; jmp qword ptr [rax]
0x000000000041fcf5 : xor edi, edi ; jmp qword ptr [rax]
0x000000000041fce5 : xor edi, edi ; jmp rax
0x00000000004103a6 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
