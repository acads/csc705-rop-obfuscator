0x000000000040f626 : adc al, byte ptr [rcx] ; jmp rcx
0x000000000040fc43 : adc dword ptr [rax - 0x7f], ecx ; ret 1
0x000000000040905e : adc dword ptr [rcx], eax ; jmp rcx
0x00000000004052a9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004068bb : add al, 0 ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x410e
0x00000000004053f3 : add al, 0x48 ; mov edi, eax ; call 0x4016d6
0x0000000000406458 : add al, 0xf ; pushfq ; ret 0x5588
0x00000000004120dc : add al, 8 ; add byte ptr [rax], al ; cmp byte ptr [rcx], -1 ; jmp qword ptr [rdx]
0x000000000040f6e4 : add al, byte ptr [rax] ; add byte ptr [rcx - 0xdf43], al ; call qword ptr [rax]
0x0000000000402097 : add al, ch ; ret
0x0000000000408598 : add al, ch ; ret 0xff8f
0x0000000000405302 : add al, ch ; ret 0xffff
0x0000000000411a5f : add al, dh ; or bh, bh ; jmp qword ptr [rdi]
0x0000000000411981 : add bh, bh ; jmp rdx
0x000000000040ff7f : add bl, dh ; ret
0x00000000004120db : add byte ptr [rax + rcx], al ; add byte ptr [rax], al ; cmp byte ptr [rcx], -1 ; jmp qword ptr [rdx]
0x00000000004068bd : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x410e
0x000000000040cdff : add byte ptr [rax - 0x75], cl ; clc ; mov rsp, rbp ; pop rbp ; ret
0x000000000040d395 : add byte ptr [rax - 0x75], cl ; loopne 0x40d3fe ; ret
0x000000000040e479 : add byte ptr [rax - 0x75], cl ; push rbp ; call 0x210365d1
0x0000000000406e78 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000040ed96 : add byte ptr [rax - 0x77], cl ; fsubr st(1) ; ret 0xffff
0x000000000040a76c : add byte ptr [rax - 0x77], cl ; ret 0x2be8
0x000000000040a7e5 : add byte ptr [rax - 0x77], cl ; ret 0xb2e8
0x00000000004120da : add byte ptr [rax], al ; add al, 8 ; add byte ptr [rax], al ; cmp byte ptr [rcx], -1 ; jmp qword ptr [rdx]
0x0000000000408596 : add byte ptr [rax], al ; add al, ch ; ret 0xff8f
0x0000000000405300 : add byte ptr [rax], al ; add al, ch ; ret 0xffff
0x000000000040ff7d : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040d393 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; loopne 0x40d400 ; ret
0x000000000040e477 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbp ; call 0x210365d3
0x000000000040ed94 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fsubr st(1) ; ret 0xffff
0x000000000040ff7b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000405bf0 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x000000000040d392 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x20] ; pop rbp ; ret
0x0000000000405bae : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040ff7c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040f875 : add byte ptr [rax], al ; add byte ptr [rcx - 0xdf43], al ; call qword ptr [rax]
0x00000000004031f6 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0x5588
0x000000000040359b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0x9588
0x00000000004021f5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x00000000004032df : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x0000000000403835 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x0000000000405b7e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040526a : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405010 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040260e : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401503 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000405301 : add byte ptr [rax], al ; call 0x401554
0x0000000000412c12 : add byte ptr [rax], al ; cmp al, 0x13 ; add byte ptr [rax], al ; cwde ; sar edi, cl ; call qword ptr [rax]
0x00000000004120de : add byte ptr [rax], al ; cmp byte ptr [rcx], -1 ; jmp qword ptr [rdx]
0x0000000000412c16 : add byte ptr [rax], al ; cwde ; sar edi, cl ; call qword ptr [rax]
0x0000000000401579 : add byte ptr [rax], al ; jmp 0x401519
0x000000000040d89f : add byte ptr [rax], al ; mov dword ptr [rbp - 4], eax ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004088d1 : add byte ptr [rax], al ; mov dword ptr [rdi], eax ; pop rbp ; ret
0x0000000000405bf2 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x000000000040648a : add byte ptr [rax], al ; mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004065bd : add byte ptr [rax], al ; mov eax, edi ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406719 : add byte ptr [rax], al ; mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040256d : add byte ptr [rax], al ; mov eax, esi ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406531 : add byte ptr [rax], al ; mov eax, esi ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403e52 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040d394 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x20] ; pop rbp ; ret
0x0000000000402803 : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000406d3b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000402548 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000041197e : add byte ptr [rax], al ; push rax ; add bh, bh ; jmp rdx
0x000000000040ff7e : add byte ptr [rax], al ; ret
0x000000000041235e : add byte ptr [rax], al ; rol byte ptr [rdx - 1], 1 ; jmp qword ptr [rdi]
0x0000000000411b9e : add byte ptr [rax], al ; ror byte ptr [rsi], -1 ; call rax
0x0000000000411882 : add byte ptr [rax], al ; shr bl, -1 ; jmp qword ptr [rax]
0x000000000041235a : add byte ptr [rax], al ; test byte ptr [rdx], cl ; add byte ptr [rax], al ; rol byte ptr [rdx - 1], 1 ; jmp qword ptr [rdi]
0x0000000000411e1e : add byte ptr [rax], al ; xor byte ptr [rbx], 0xff ; call rdx
0x0000000000406d3c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000402549 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000412c13 : add byte ptr [rbx + rdx], bh ; add byte ptr [rax], al ; cwde ; sar edi, cl ; call qword ptr [rax]
0x000000000040d8a0 : add byte ptr [rcx + 0x458bfc45], cl ; cld ; pop rbp ; ret
0x0000000000402284 : add byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x00000000004022b5 : add byte ptr [rcx + rax], ah ; movzx eax, al ; pop rbp ; ret
0x000000000040f6e6 : add byte ptr [rcx - 0xdf43], al ; call qword ptr [rax]
0x0000000000401a28 : add byte ptr [rcx], al ; ret
0x00000000004052fc : add byte ptr [rdi], cl ; lea eax, dword ptr [rip - 0x18000000] ; ret 0xffff
0x000000000040674a : add byte ptr [rdi], cl ; mov bh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004031f8 : add byte ptr [rdi], cl ; pushfq ; ret 0x5588
0x000000000040359d : add byte ptr [rdi], cl ; pushfq ; ret 0x9588
0x00000000004021f7 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x00000000004032e1 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x0000000000403837 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x0000000000405b80 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000411a5d : add dword ptr [rax], eax ; add al, dh ; or bh, bh ; jmp qword ptr [rdi]
0x0000000000405268 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406d3a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000402547 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040f7a0 : add dword ptr [rax], eax ; add byte ptr [rcx - 0xdf43], al ; call qword ptr [rax]
0x000000000040264b : add dword ptr [rdi], ecx ; mov dh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405ff0 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004022b7 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401a24 : add eax, 0x2118ee ; add ebx, esi ; ret
0x0000000000406281 : add eax, 0x48000000 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000409033 : add eax, 0x8301148b ; ret 0x89ee
0x00000000004052ff : add eax, 0xe8000000 ; ret 0xffff
0x00000000004019eb : add eax, edx ; sar rax, 1 ; jne 0x4019fc ; pop rbp ; ret
0x0000000000401a29 : add ebx, esi ; ret
0x0000000000401b9b : add esp, 0x10 ; pop rbp ; ret
0x0000000000402544 : add esp, 0x108 ; pop rbx ; pop rbp ; ret
0x000000000040805c : add esp, 0x130 ; pop rbp ; ret
0x0000000000404fd4 : add esp, 0x138 ; pop rbx ; pop rbp ; ret
0x000000000040312c : add esp, 0x158 ; pop rbx ; pop rbp ; ret
0x00000000004027ff : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000407a2f : add esp, 0x1b0 ; pop rbp ; ret
0x000000000040e41e : add esp, 0x1b8 ; pop rbp ; ret
0x000000000040fefb : add esp, 0x1c0 ; pop rbp ; ret
0x000000000040d81e : add esp, 0x1e0 ; pop rbp ; ret
0x0000000000402a56 : add esp, 0x20 ; pop rbp ; ret
0x0000000000401cad : add esp, 0x30 ; pop rbp ; ret
0x00000000004022a8 : add esp, 0x50 ; pop rbp ; ret
0x00000000004061cb : add esp, 0x60 ; pop rbp ; ret
0x00000000004040e3 : add esp, 0x70 ; pop rbp ; ret
0x000000000040518e : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004076a3 : add esp, 0x820 ; pop rbp ; ret
0x000000000040555d : add esp, 0x90 ; pop rbp ; ret
0x00000000004039b0 : add esp, 0xa0 ; pop rbp ; ret
0x00000000004038d0 : add esp, 0xe0 ; pop rbp ; ret
0x00000000004085d9 : add esp, 0xf0 ; pop rbp ; ret
0x0000000000401506 : add esp, 8 ; ret
0x0000000000402096 : add r8b, bpl ; ret
0x00000000004019ea : add rax, rdx ; sar rax, 1 ; jne 0x4019fd ; pop rbp ; ret
0x0000000000401b9a : add rsp, 0x10 ; pop rbp ; ret
0x0000000000402543 : add rsp, 0x108 ; pop rbx ; pop rbp ; ret
0x000000000040805b : add rsp, 0x130 ; pop rbp ; ret
0x0000000000404fd3 : add rsp, 0x138 ; pop rbx ; pop rbp ; ret
0x000000000040312b : add rsp, 0x158 ; pop rbx ; pop rbp ; ret
0x00000000004027fe : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000407a2e : add rsp, 0x1b0 ; pop rbp ; ret
0x000000000040e41d : add rsp, 0x1b8 ; pop rbp ; ret
0x000000000040fefa : add rsp, 0x1c0 ; pop rbp ; ret
0x000000000040d81d : add rsp, 0x1e0 ; pop rbp ; ret
0x0000000000402a55 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000401cac : add rsp, 0x30 ; pop rbp ; ret
0x00000000004022a7 : add rsp, 0x50 ; pop rbp ; ret
0x00000000004061ca : add rsp, 0x60 ; pop rbp ; ret
0x00000000004040e2 : add rsp, 0x70 ; pop rbp ; ret
0x000000000040518d : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004076a2 : add rsp, 0x820 ; pop rbp ; ret
0x000000000040555c : add rsp, 0x90 ; pop rbp ; ret
0x00000000004039af : add rsp, 0xa0 ; pop rbp ; ret
0x00000000004038cf : add rsp, 0xe0 ; pop rbp ; ret
0x00000000004085d8 : add rsp, 0xf0 ; pop rbp ; ret
0x0000000000401505 : add rsp, 8 ; ret
0x00000000004022b6 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004088cf : and byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], eax ; pop rbp ; ret
0x00000000004076a5 : and byte ptr [rax], cl ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401a27 : and dword ptr [rax], eax ; add ebx, esi ; ret
0x0000000000405597 : and eax, 0x48fffffd ; add esp, 0x20 ; pop rbp ; ret
0x000000000040281f : and eax, 0x613320 ; pop rbp ; ret
0x0000000000402843 : and eax, 0x613328 ; pop rbp ; ret
0x000000000040e47d : call 0x210365cd
0x000000000040524c : call 0x401542
0x0000000000405303 : call 0x401552
0x00000000004052da : call 0x401562
0x00000000004053f7 : call 0x4016d2
0x000000000040fc40 : call 0x48528793
0x000000000040fc3f : call 0x48528794
0x0000000000402078 : call 0x50e367
0x0000000000405009 : call 0xffffffffe902d959
0x0000000000405008 : call 0xffffffffe902d95a
0x000000000040ff59 : call qword ptr [r12 + rbx*8]
0x000000000040f630 : call qword ptr [rax]
0x000000000040f90c : call qword ptr [rbx]
0x000000000040f86e : call qword ptr [rcx]
0x0000000000412823 : call qword ptr [rdi]
0x000000000040925e : call qword ptr [rdx]
0x000000000040f8a3 : call qword ptr [rsi]
0x000000000040ff5a : call qword ptr [rsp + rbx*8]
0x0000000000402e65 : call r8
0x0000000000401a4d : call rax
0x0000000000412b83 : call rbx
0x0000000000411e23 : call rdx
0x00000000004065c0 : clc ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040805a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x000000000040722f : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402b29 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004082cf : clc ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004039ae : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x00000000004038ce : clc ; add rsp, 0xe0 ; pop rbp ; ret
0x0000000000407558 : clc ; idiv edi ; call rax
0x00000000004019ef : clc ; jne 0x4019f8 ; pop rbp ; ret
0x0000000000403f95 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405bab : clc ; mov dword ptr [rdi], 0 ; pop rbp ; ret
0x000000000040d2bb : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004022d7 : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000405248 : clc ; mov rdi, rax ; call 0x401546
0x0000000000405247 : clc ; mov rdi, rax ; call 0x401547
0x000000000040ce03 : clc ; mov rsp, rbp ; pop rbp ; ret
0x00000000004022cc : clc ; pop rbp ; ret
0x0000000000401bc7 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040e41c : cld ; add rsp, 0x1b8 ; pop rbp ; ret
0x000000000040fef9 : cld ; add rsp, 0x1c0 ; pop rbp ; ret
0x000000000040781b : cld ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407760 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004061c9 : cld ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004076a1 : cld ; add rsp, 0x820 ; pop rbp ; ret
0x000000000040d2b8 : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000408793 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040864b : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040775d : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004038e6 : cld ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004038e9 : cld ; pop rbp ; ret
0x0000000000406347 : cmp al, -0x36 ; mov rdx, qword ptr [rbp - 0x20] ; call rax
0x0000000000412c14 : cmp al, 0x13 ; add byte ptr [rax], al ; cwde ; sar edi, cl ; call qword ptr [rax]
0x00000000004068c0 : cmp al, 0x25 ; ret 0x410e
0x0000000000411fc1 : cmp bh, bh ; jmp qword ptr [rax]
0x00000000004120e0 : cmp byte ptr [rcx], -1 ; jmp qword ptr [rdx]
0x0000000000404fd6 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004019ad : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4019c0 ; pop rbp ; ret
0x00000000004120e1 : cmp edi, edi ; jmp qword ptr [rdx]
0x000000000040687c : cwde ; mov rcx, qword ptr [rax*8 + 0x410d80] ; jmp rcx
0x0000000000412c18 : cwde ; sar edi, cl ; call qword ptr [rax]
0x00000000004022c8 : dec dword ptr [rax - 0x77] ; jge 0x4022cb ; pop rbp ; ret
0x0000000000409cec : dec dword ptr [rax - 0x77] ; ret 0x8148
0x0000000000407fbf : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000040f3a2 : dec dword ptr [rcx] ; ret 0x9589
0x00000000004050bb : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x00000000004021f1 : fadd qword ptr [rcx + 0xf9] ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x00000000004084d7 : fadd qword ptr [rcx - 0xa] ; jmp qword ptr [rcx]
0x0000000000402214 : fadd qword ptr [rcx - 0xe] ; jmp qword ptr [rcx]
0x0000000000411880 : fcom dword ptr [rdi] ; add byte ptr [rax], al ; shr bl, -1 ; jmp qword ptr [rax]
0x00000000004049f3 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000402605 : fmul dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040ff5c : fmul qword ptr [rax - 0x7d] ; ret
0x000000000040ed9a : fsubr st(1) ; ret 0xffff
0x0000000000401b99 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004019c0 : hlt ; pop rbp ; mov edi, 0x6132b8 ; jmp rax
0x0000000000405bf6 : hlt ; pop rbp ; ret
0x0000000000407559 : idiv edi ; call rax
0x000000000040ce06 : in al, dx ; pop rbp ; ret
0x00000000004022b3 : in eax, -0x50 ; add byte ptr [rcx + rax], ah ; movzx eax, al ; pop rbp ; ret
0x00000000004038e3 : in eax, -0x77 ; jge 0x4038eb ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004064a3 : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x0000000000406e80 : int 0x80
0x00000000004019b3 : ja 0x4019ba ; pop rbp ; ret
0x00000000004019bf : je 0x4019bd ; pop rbp ; mov edi, 0x6132b8 ; jmp rax
0x00000000004022cb : jge 0x4022c8 ; pop rbp ; ret
0x00000000004022d6 : jge 0x4022d7 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004038e5 : jge 0x4038e9 ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004052fd : jge 0x405310 ; call 0x401558
0x0000000000405baa : jge 0x405bad ; mov dword ptr [rdi], 0 ; pop rbp ; ret
0x00000000004064a6 : jge 0x4064a3 ; pop rbp ; ret
0x000000000040157b : jmp 0x401517
0x00000000004068b9 : jmp 0x406d3f
0x0000000000408594 : jmp 0x4085d3
0x0000000000405e81 : jmp 0xffffffff8a02e78e
0x000000000040a80f : jmp 0xffffffff8a033127
0x0000000000411887 : jmp qword ptr [rax]
0x00000000004084b2 : jmp qword ptr [rbx]
0x000000000040221a : jmp qword ptr [rcx]
0x0000000000411a63 : jmp qword ptr [rdi]
0x0000000000411ea3 : jmp qword ptr [rdx]
0x00000000004019c7 : jmp rax
0x00000000004036d5 : jmp rcx
0x0000000000401a07 : jmp rdx
0x00000000004019f0 : jne 0x4019f7 ; pop rbp ; ret
0x00000000004081b3 : jne 0x408183 ; mov rdx, qword ptr [rbp - 0x28] ; call rax
0x0000000000401501 : jnp 0x40150d ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004040e5 : jo 0x404146 ; ret
0x00000000004057f4 : jo 0x405855 ; ret
0x000000000040592e : jo 0x40598f ; ret
0x0000000000405190 : js 0x4051f0 ; pop rbp ; ret
0x00000000004052fe : lea eax, dword ptr [rip - 0x18000000] ; ret 0xffff
0x00000000004053f2 : loop 0x4053ff ; mov rdi, rax ; call 0x4016d7
0x00000000004038d2 : loopne 0x4038d9 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040d399 : loopne 0x40d3fa ; ret
0x000000000040d398 : loopne 0x40d3fb ; ret
0x000000000040d820 : loopne 0x40d828 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004022b4 : mov al, 0 ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004056cb : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040555b : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000407a31 : mov al, 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004025a6 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040645f : mov al, byte ptr [rbp - 9] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040674c : mov bh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402841 : mov byte ptr [0x613328], al ; pop rbp ; ret
0x0000000000401a23 : mov byte ptr [rip + 0x2118ee], 1 ; ret
0x000000000040264d : mov dh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405ff2 : mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004022b9 : mov dh, -0x40 ; pop rbp ; ret
0x000000000040281d : mov dword ptr [0x613320], edi ; pop rbp ; ret
0x0000000000403f96 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000403ea4 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000403f58 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000402e5f : mov dword ptr [rbp - 0x130], ecx ; call r8
0x000000000040d45c : mov dword ptr [rbp - 0x18], eax ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004052d3 : mov dword ptr [rbp - 0x18], edx ; mov qword ptr [rbp - 0x20], rcx ; call 0x401569
0x00000000004052d7 : mov dword ptr [rbp - 0x20], ecx ; call 0x401565
0x0000000000401ca9 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401b97 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401bc5 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040d8a1 : mov dword ptr [rbp - 4], eax ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004038e4 : mov dword ptr [rbp - 4], edi ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040d2b9 : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004022d5 : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004022ca : mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x000000000040400e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403c60 : mov dword ptr [rcx], eax ; mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x0000000000405bac : mov dword ptr [rdi], 0 ; pop rbp ; ret
0x00000000004088d3 : mov dword ptr [rdi], eax ; pop rbp ; ret
0x000000000040e420 : mov eax, 0x5d000001 ; ret
0x000000000040518c : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000403e58 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040297d : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402c4c : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403e55 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000402bcf : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000402a52 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403e0d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403e9e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040d460 : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040d397 : mov eax, dword ptr [rbp - 0x20] ; pop rbp ; ret
0x0000000000403c62 : mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x0000000000405e5f : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000403f5a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004022a4 : mov eax, dword ptr [rbp - 0x2c] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004040df : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040518a : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004056c9 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000405bf4 : mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000408794 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407819 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040775e : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004061c7 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004038e7 : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040722d : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402b27 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004082cd : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000405246 : mov eax, dword ptr [rbp - 8] ; mov rdi, rax ; call 0x401548
0x000000000040ce01 : mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004022d9 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040648c : mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004065bf : mov eax, edi ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040671b : mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040256f : mov eax, esi ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406533 : mov eax, esi ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401a4b : mov ebp, esp ; call rax
0x00000000004019b1 : mov ebp, esp ; ja 0x4019bc ; pop rbp ; ret
0x00000000004038e2 : mov ebp, esp ; mov dword ptr [rbp - 4], edi ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004064a2 : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x00000000004036ce : mov ecx, dword ptr [rax*8 + 0x410680] ; jmp rcx
0x0000000000404197 : mov ecx, dword ptr [rax*8 + 0x410700] ; jmp rcx
0x0000000000404477 : mov ecx, dword ptr [rax*8 + 0x410748] ; jmp rcx
0x0000000000405d93 : mov ecx, dword ptr [rax*8 + 0x410c08] ; jmp rcx
0x0000000000406031 : mov ecx, dword ptr [rax*8 + 0x410c30] ; jmp rcx
0x00000000004061fa : mov ecx, dword ptr [rax*8 + 0x410c58] ; jmp rcx
0x000000000040687e : mov ecx, dword ptr [rax*8 + 0x410d80] ; jmp rcx
0x000000000040ac85 : mov ecx, dword ptr [rax*8 + 0x411130] ; jmp rcx
0x000000000040905a : mov ecx, dword ptr [rax*8 + 0x4111b8] ; jmp rcx
0x000000000040d907 : mov ecx, dword ptr [rax*8 + 0x4111e0] ; jmp rcx
0x000000000040f622 : mov ecx, dword ptr [rax*8 + 0x4112b8] ; jmp rcx
0x0000000000403ea1 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000403c5d : mov ecx, dword ptr [rbp - 0x20] ; mov dword ptr [rcx], eax ; mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x0000000000401a45 : mov edi, 0x612e20 ; mov rbp, rsp ; call rax
0x00000000004019c2 : mov edi, 0x6132b8 ; jmp rax
0x0000000000401a02 : mov edi, 0x6132b8 ; jmp rdx
0x0000000000406346 : mov edi, dword ptr [rdx + rcx*8] ; mov rdx, qword ptr [rbp - 0x20] ; call rax
0x000000000040524a : mov edi, eax ; call 0x401544
0x00000000004053f5 : mov edi, eax ; call 0x4016d4
0x000000000040ff57 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000040ff56 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000040634a : mov edx, dword ptr [rbp - 0x20] ; call rax
0x00000000004081b6 : mov edx, dword ptr [rbp - 0x28] ; call rax
0x00000000004081b2 : mov esi, dword ptr [rbp - 0x38] ; mov rdx, qword ptr [rbp - 0x28] ; call rax
0x0000000000401a00 : mov esi, eax ; mov edi, 0x6132b8 ; jmp rdx
0x000000000040ce05 : mov esp, ebp ; pop rbp ; ret
0x000000000040281c : mov qword ptr [0x613320], rdi ; pop rbp ; ret
0x000000000040d45b : mov qword ptr [rbp - 0x18], rax ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004052d6 : mov qword ptr [rbp - 0x20], rcx ; call 0x401566
0x00000000004022d4 : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004022c9 : mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000040400d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004056ca : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040518b : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x000000000040297c : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402c4b : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403e54 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000402bce : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000402a51 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403e0c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040d45f : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040d396 : mov rax, qword ptr [rbp - 0x20] ; pop rbp ; ret
0x00000000004040de : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004056c8 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040722c : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402b26 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004082cc : mov rax, qword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000405245 : mov rax, qword ptr [rbp - 8] ; mov rdi, rax ; call 0x401549
0x000000000040ce00 : mov rax, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004022d8 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000401a4a : mov rbp, rsp ; call rax
0x00000000004019b0 : mov rbp, rsp ; ja 0x4019bd ; pop rbp ; ret
0x00000000004064a1 : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x00000000004036cd : mov rcx, qword ptr [rax*8 + 0x410680] ; jmp rcx
0x0000000000404196 : mov rcx, qword ptr [rax*8 + 0x410700] ; jmp rcx
0x0000000000404476 : mov rcx, qword ptr [rax*8 + 0x410748] ; jmp rcx
0x0000000000405d92 : mov rcx, qword ptr [rax*8 + 0x410c08] ; jmp rcx
0x0000000000406030 : mov rcx, qword ptr [rax*8 + 0x410c30] ; jmp rcx
0x00000000004061f9 : mov rcx, qword ptr [rax*8 + 0x410c58] ; jmp rcx
0x000000000040687d : mov rcx, qword ptr [rax*8 + 0x410d80] ; jmp rcx
0x000000000040ac84 : mov rcx, qword ptr [rax*8 + 0x411130] ; jmp rcx
0x0000000000409059 : mov rcx, qword ptr [rax*8 + 0x4111b8] ; jmp rcx
0x000000000040d906 : mov rcx, qword ptr [rax*8 + 0x4111e0] ; jmp rcx
0x000000000040f621 : mov rcx, qword ptr [rax*8 + 0x4112b8] ; jmp rcx
0x0000000000406345 : mov rdi, qword ptr [rdx + rcx*8] ; mov rdx, qword ptr [rbp - 0x20] ; call rax
0x0000000000405249 : mov rdi, rax ; call 0x401545
0x00000000004053f4 : mov rdi, rax ; call 0x4016d5
0x0000000000406349 : mov rdx, qword ptr [rbp - 0x20] ; call rax
0x00000000004081b5 : mov rdx, qword ptr [rbp - 0x28] ; call rax
0x00000000004081b1 : mov rsi, qword ptr [rbp - 0x38] ; mov rdx, qword ptr [rbp - 0x28] ; call rax
0x00000000004019ff : mov rsi, rax ; mov edi, 0x6132b8 ; jmp rdx
0x000000000040ce04 : mov rsp, rbp ; pop rbp ; ret
0x000000000040f79f : movsd dword ptr [rdi], dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xdf43], al ; call qword ptr [rax]
0x000000000040ceaa : movsx eax, cl ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405ff1 : movzx eax, al ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004022b8 : movzx eax, al ; pop rbp ; ret
0x000000000040264c : movzx eax, cl ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040674b : movzx eax, cx ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406460 : mul dword ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x0000000000406461 : mul dword ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000040ff78 : nop dword ptr [rax + rax] ; ret
0x00000000004051de : or al, ch ; pop rsp ; ret
0x0000000000411a61 : or bh, bh ; jmp qword ptr [rdi]
0x00000000004049ee : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x00000000004049ef : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x00000000004032db : or byte ptr [rcx + 0x2df9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x0000000000403831 : or byte ptr [rcx + 0x2df9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x00000000004031f2 : or byte ptr [rcx + 0x38f9], al ; add byte ptr [rdi], cl ; pushfq ; ret 0x5588
0x0000000000403597 : or byte ptr [rcx + 0x38f9], al ; add byte ptr [rdi], cl ; pushfq ; ret 0x9588
0x0000000000402546 : or byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004088ce : or eax, 0x20 ; mov dword ptr [rdi], eax ; pop rbp ; ret
0x00000000004058b1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401a25 : out dx, al ; sbb byte ptr [rcx], ah ; add byte ptr [rcx], al ; ret
0x000000000040524d : out dx, eax ; ret 0xffff
0x000000000040ff6c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040ff6e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000406d3e : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040ff70 : pop r14 ; pop r15 ; ret
0x0000000000406d40 : pop r15 ; pop rbp ; ret
0x000000000040ff72 : pop r15 ; ret
0x000000000040312e : pop rax ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000401a22 : pop rbp ; mov byte ptr [rip + 0x2118ee], 1 ; ret
0x00000000004019c1 : pop rbp ; mov edi, 0x6132b8 ; jmp rax
0x00000000004019fe : pop rbp ; mov rsi, rax ; mov edi, 0x6132b8 ; jmp rdx
0x000000000040ff6b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040ff6f : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004019b5 : pop rbp ; ret
0x0000000000406d3d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040254a : pop rbx ; pop rbp ; ret
0x0000000000406d41 : pop rdi ; pop rbp ; ret
0x000000000040ff73 : pop rdi ; ret
0x0000000000406d3f : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040ff71 : pop rsi ; pop r15 ; ret
0x000000000040ff6d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004051e0 : pop rsp ; ret
0x0000000000411980 : push rax ; add bh, bh ; jmp rdx
0x00000000004022aa : push rax ; pop rbp ; ret
0x000000000040e47c : push rbp ; call 0x210365ce
0x0000000000402213 : push rbp ; fadd qword ptr [rcx - 0xe] ; jmp qword ptr [rcx]
0x00000000004049f2 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000401a44 : push rbp ; mov edi, 0x612e20 ; mov rbp, rsp ; call rax
0x00000000004064a0 : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000407c4d : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x00000000004050be : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x00000000004031fa : pushfq ; ret 0x5588
0x000000000040359f : pushfq ; ret 0x9588
0x000000000040028f : ret
0x0000000000402e10 : ret 0
0x000000000040207a : ret 0x10
0x0000000000408912 : ret 0x18e8
0x000000000040e480 : ret 0x20
0x0000000000401782 : ret 0x2119
0x0000000000401582 : ret 0x211a
0x000000000040a76f : ret 0x2be8
0x00000000004111b1 : ret 0x40
0x00000000004068c2 : ret 0x410e
0x0000000000405e84 : ret 0x4589
0x000000000040de83 : ret 0x4810
0x00000000004031fb : ret 0x5588
0x0000000000402ecd : ret 0x5589
0x0000000000409ece : ret 0x58
0x0000000000409cef : ret 0x8148
0x000000000040a812 : ret 0x8589
0x0000000000406839 : ret 0x8844
0x00000000004072b2 : ret 0x8948
0x0000000000404b1d : ret 0x89a5
0x0000000000409038 : ret 0x89ee
0x00000000004049f6 : ret 0x8b48
0x00000000004035a0 : ret 0x9588
0x000000000040f3a4 : ret 0x9589
0x0000000000404a0b : ret 0x9fe8
0x0000000000407a2a : ret 0xb
0x0000000000401ede : ret 0xb0
0x000000000040a7e8 : ret 0xb2e8
0x0000000000403a11 : ret 0xbe01
0x00000000004019e5 : ret 0xc148
0x0000000000405b83 : ret 0xd284
0x00000000004021fa : ret 0xe280
0x000000000040500c : ret 0xee8
0x000000000040859a : ret 0xff8f
0x000000000040524e : ret 0xffff
0x000000000040532e : ret 1
0x00000000004050c2 : ret 8
0x0000000000402488 : rol byte ptr [rbp + 0xf], 0x44 ; ret
0x0000000000412360 : rol byte ptr [rdx - 1], 1 ; jmp qword ptr [rdi]
0x0000000000406e7b : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x00000000004040e0 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x40414b ; ret
0x00000000004019ec : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4019fb ; pop rbp ; ret
0x0000000000406e7c : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x00000000004040e1 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x40414a ; ret
0x0000000000407c4e : ror byte ptr [rax - 0x7f], 1 ; ret 1
0x00000000004050bf : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000411ba0 : ror byte ptr [rsi], -1 ; call rax
0x00000000004019ee : sar eax, 1 ; jne 0x4019f9 ; pop rbp ; ret
0x0000000000412c19 : sar edi, cl ; call qword ptr [rax]
0x00000000004019ed : sar rax, 1 ; jne 0x4019fa ; pop rbp ; ret
0x0000000000401a26 : sbb byte ptr [rcx], ah ; add byte ptr [rcx], al ; ret
0x00000000004053f1 : shl edx, 4 ; mov rdi, rax ; call 0x4016d8
0x00000000004053f0 : shl rdx, 4 ; mov rdi, rax ; call 0x4016d9
0x0000000000411884 : shr bl, -1 ; jmp qword ptr [rax]
0x00000000004032dd : stc ; sub eax, 0xf000000 ; xchg eax, esp ; ret 0x5588
0x0000000000403833 : stc ; sub eax, 0xf000000 ; xchg eax, esp ; ret 0x9588
0x000000000040515f : std ; ret
0x00000000004025a8 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004032de : sub eax, 0xf000000 ; xchg eax, esp ; ret 0x5588
0x0000000000403834 : sub eax, 0xf000000 ; xchg eax, esp ; ret 0x9588
0x000000000040ffd1 : sub esp, 8 ; add rsp, 8 ; ret
0x000000000040ffd0 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040ff7a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000041235c : test byte ptr [rdx], cl ; add byte ptr [rax], al ; rol byte ptr [rdx - 1], 1 ; jmp qword ptr [rdi]
0x0000000000407557 : test edi, eax ; idiv edi ; call rax
0x000000000040f624 : vmovlps xmm0, xmm8, qword ptr [rcx] ; jmp rcx
0x00000000004021f9 : xchg eax, ebp ; ret 0xe280
0x00000000004032e3 : xchg eax, esp ; ret 0x5588
0x0000000000403839 : xchg eax, esp ; ret 0x9588
0x0000000000405b82 : xchg eax, esp ; ret 0xd284
0x00000000004019c4 : xor ah, byte ptr [rcx] ; jmp rax
0x0000000000401a04 : xor ah, byte ptr [rcx] ; jmp rdx
0x0000000000411e20 : xor byte ptr [rbx], 0xff ; call rdx
0x000000000040805e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040d33b : xor dword ptr [rcx], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000411e21 : xor edi, edi ; call rdx
0x0000000000403f56 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000403d92 : xor esp, dword ptr [rcx] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402821 : xor esp, dword ptr [rcx] ; pop rbp ; ret
