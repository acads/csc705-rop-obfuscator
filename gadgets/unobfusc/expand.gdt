0x0000000000403ec9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004079e3 : add ah, ah ; add eax, dword ptr [rax] ; add al, bl ; ret
0x0000000000402584 : add al, -0x36 ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004074db : add al, al ; loope 0x4074e2 ; jmp qword ptr [rax]
0x00000000004079e7 : add al, bl ; ret
0x000000000040749b : add al, dh ; fdivp st(7) ; jmp qword ptr [rax]
0x000000000040734b : add al, dh ; mov ch, -1 ; jmp rax
0x000000000040647f : add bl, dh ; ret
0x00000000004074d8 : add byte ptr [rax + rax], cl ; add al, al ; loope 0x4074e5 ; jmp qword ptr [rax]
0x0000000000402128 : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x4066
0x0000000000404ea8 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000405ad4 : add byte ptr [rax - 0x77], cl ; call 0xfffffffffff81dcb
0x0000000000405ad3 : add byte ptr [rax - 0x77], cl ; call 0xfffffffffff81dcc
0x0000000000401f3a : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x00000000004079e1 : add byte ptr [rax], al ; add ah, ah ; add eax, dword ptr [rax] ; add al, bl ; ret
0x000000000040647d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000402126 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x4066
0x0000000000401f38 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000040647b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040647c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000402195 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7438b], cl ; ret 0xb0
0x00000000004022f8 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7538b], cl ; ret 0xb0
0x000000000040479e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000403e8a : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403c30 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401ed2 : add byte ptr [rax], al ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040127b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004077a6 : add byte ptr [rax], al ; call 0x1740775f
0x00000000004013f9 : add byte ptr [rax], al ; jmp 0x401299
0x00000000004074ca : add byte ptr [rax], al ; loope 0x4074d3 ; jmp rax
0x0000000000402a72 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004079a6 : add byte ptr [rax], al ; pop rax ; ret 0xffff
0x0000000000404181 : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000404d6b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403bf8 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040748a : add byte ptr [rax], al ; push rax ; fdivp st(7) ; jmp rax
0x000000000040647e : add byte ptr [rax], al ; ret
0x000000000040741b : add byte ptr [rax], al ; sar bh, cl ; jmp qword ptr [rax]
0x00000000004074da : add byte ptr [rax], al ; shl cl, -1 ; jmp qword ptr [rax]
0x000000000040750b : add byte ptr [rax], dl ; in al, -1 ; jmp rax
0x000000000040731b : add byte ptr [rax], dl ; mov bl, -1 ; jmp qword ptr [rax]
0x0000000000404d6c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000403bf9 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000402197 : add byte ptr [rbx - 0x76b7438b], cl ; ret 0xb0
0x00000000004022fa : add byte ptr [rbx - 0x76b7538b], cl ; ret 0xb0
0x000000000040509e : add byte ptr [rcx + 0x9e8fc45], cl ; ret
0x00000000004050c8 : add byte ptr [rcx - 0x201707bb], cl ; ret 0xffff
0x00000000004016d8 : add byte ptr [rcx], al ; ret
0x00000000004047a0 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000403e88 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404d6a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000403bf7 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000405fda : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004016d4 : add eax, 0x207bfe ; add ebx, esi ; ret
0x00000000004079e5 : add eax, dword ptr [rax] ; add al, bl ; ret
0x000000000040169b : add eax, edx ; sar rax, 1 ; jne 0x4016ac ; pop rbp ; ret
0x00000000004016d9 : add ebx, esi ; ret
0x000000000040184b : add esp, 0x10 ; pop rbp ; ret
0x0000000000405f9c : add esp, 0x130 ; pop rbp ; ret
0x0000000000403bf4 : add esp, 0x138 ; pop rbx ; pop rbp ; ret
0x000000000040505c : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000401fa0 : add esp, 0x20 ; pop rbp ; ret
0x000000000040195d : add esp, 0x30 ; pop rbp ; ret
0x000000000040426c : add esp, 0x50 ; pop rbp ; ret
0x0000000000401ed5 : add esp, 0x60 ; pop rbp ; ret
0x0000000000402d03 : add esp, 0x70 ; pop rbp ; ret
0x0000000000403dae : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040417d : add esp, 0x90 ; pop rbp ; ret
0x0000000000404ef4 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040127e : add esp, 8 ; ret
0x000000000040169a : add rax, rdx ; sar rax, 1 ; jne 0x4016ad ; pop rbp ; ret
0x000000000040184a : add rsp, 0x10 ; pop rbp ; ret
0x0000000000405f9b : add rsp, 0x130 ; pop rbp ; ret
0x0000000000403bf3 : add rsp, 0x138 ; pop rbx ; pop rbp ; ret
0x000000000040505b : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000401f9f : add rsp, 0x20 ; pop rbp ; ret
0x000000000040195c : add rsp, 0x30 ; pop rbp ; ret
0x000000000040426b : add rsp, 0x50 ; pop rbp ; ret
0x0000000000401ed4 : add rsp, 0x60 ; pop rbp ; ret
0x0000000000402d02 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000403dad : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040417c : add rsp, 0x90 ; pop rbp ; ret
0x0000000000404ef3 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040127d : add rsp, 8 ; ret
0x0000000000405fd9 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004016d7 : and byte ptr [rax], al ; add ebx, esi ; ret
0x00000000004041b7 : and eax, 0x48fffffd ; add esp, 0x20 ; pop rbp ; ret
0x000000000040259f : and eax, 0x609320 ; pop rbp ; ret
0x00000000004025c3 : and eax, 0x609328 ; pop rbp ; ret
0x00000000004077a8 : call 0x1740775d
0x00000000004050cc : call 0x4013b2
0x00000000004050bc : call 0x4013c2
0x0000000000403c29 : call 0xffffffffe902c579
0x0000000000403c28 : call 0xffffffffe902c57a
0x00000000004048b1 : call 0xffffffffff408928
0x0000000000405ad8 : call 0xfffffffffff81dc7
0x0000000000405ad7 : call 0xfffffffffff81dc8
0x0000000000406459 : call qword ptr [r12 + rbx*8]
0x00000000004046fd : call qword ptr [rax]
0x00000000004077ab : call qword ptr [rsi]
0x000000000040645a : call qword ptr [rsp + rbx*8]
0x00000000004016fd : call rax
0x00000000004079eb : call rdx
0x0000000000405f9a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x00000000004024ef : clc ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004047b1 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004050cb : clc ; call 0x4013b3
0x00000000004050ca : clc ; call 0x4013b4
0x000000000040169f : clc ; jne 0x4016a8 ; pop rbp ; ret
0x0000000000402506 : clc ; mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000402bb5 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004063ab : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004063ae : clc ; pop rbp ; ret
0x0000000000401877 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004055f9 : cld ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405774 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004063a8 : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000405653 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004055f6 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405771 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040212b : cmp al, 0x25 ; ret 0x4066
0x0000000000401ed0 : cmp al, 6 ; add byte ptr [rax], al ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000403bf6 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040165d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401670 ; pop rbp ; ret
0x00000000004048ac : cwde ; mov rcx, qword ptr [rax*8 + 0x406ee8] ; jmp rcx
0x0000000000405eff : dec dword ptr [rax - 0x7f] ; ret 1
0x0000000000403cdb : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x00000000004029b1 : enter 0x6092, 0 ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040749d : fdivp st(7) ; jmp qword ptr [rax]
0x000000000040748d : fdivp st(7) ; jmp rax
0x0000000000403613 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040645c : fmul qword ptr [rax - 0x7d] ; ret
0x00000000004046fb : fsubr st(0) ; call qword ptr [rax]
0x0000000000401849 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401670 : hlt ; pop rbp ; mov edi, 0x609268 ; jmp rax
0x000000000040750d : in al, -1 ; jmp rax
0x000000000040751d : in eax, -1 ; jmp qword ptr [rax]
0x00000000004074d7 : inc dword ptr [rax] ; or al, 0 ; add al, al ; loope 0x4074e6 ; jmp qword ptr [rax]
0x0000000000407417 : inc dword ptr [rax] ; or dword ptr [rax], eax ; add byte ptr [rax], al ; sar bh, cl ; jmp qword ptr [rax]
0x0000000000407497 : inc dword ptr [rax] ; or eax, dword ptr [rax] ; add al, dh ; fdivp st(7) ; jmp qword ptr [rax]
0x0000000000407507 : inc eax ; or al, 0 ; add byte ptr [rax], dl ; in al, -1 ; jmp rax
0x0000000000404eb0 : int 0x80
0x0000000000401663 : ja 0x40166a ; pop rbp ; ret
0x0000000000405ad2 : jb 0x405b1c ; add byte ptr [rax - 0x77], cl ; call 0xfffffffffff81dcd
0x0000000000405ad1 : jb 0x405b1d ; add byte ptr [rax - 0x77], cl ; call 0xfffffffffff81dce
0x000000000040166f : je 0x40166d ; pop rbp ; mov edi, 0x609268 ; jmp rax
0x00000000004013fb : jmp 0x401297
0x00000000004072df : jmp qword ptr [rax]
0x0000000000407a6b : jmp qword ptr [rdx]
0x0000000000401677 : jmp rax
0x0000000000402dbe : jmp rcx
0x00000000004016b7 : jmp rdx
0x00000000004016a0 : jne 0x4016a7 ; pop rbp ; ret
0x000000000040509c : jno 0x4050e6 ; add byte ptr [rcx + 0x9e8fc45], cl ; ret
0x00000000004050c6 : jno 0x405110 ; add byte ptr [rcx - 0x201707bb], cl ; ret 0xffff
0x00000000004016d6 : jnp 0x4016fd ; add byte ptr [rcx], al ; ret
0x0000000000402d05 : jo 0x402d66 ; ret
0x0000000000404414 : jo 0x404475 ; ret
0x000000000040454e : jo 0x4045af ; ret
0x0000000000403db0 : js 0x403e10 ; pop rbp ; ret
0x00000000004050dd : lahf ; ret
0x00000000004074cd : loope 0x4074d0 ; jmp rax
0x00000000004074cc : loope 0x4074d1 ; jmp rax
0x00000000004074dd : loope 0x4074e0 ; jmp qword ptr [rax]
0x000000000040282b : loopne 0x40287b ; add esp, 0x20 ; pop rbp ; ret
0x000000000040282a : loopne 0x40287c ; add esp, 0x20 ; pop rbp ; ret
0x00000000004050ba : mov al, 0 ; call 0x4013c4
0x00000000004042eb : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040417b : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000405fd6 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040735d : mov bh, -1 ; jmp qword ptr [rax]
0x000000000040731d : mov bl, -1 ; jmp qword ptr [rax]
0x00000000004025c1 : mov byte ptr [0x609328], al ; pop rbp ; ret
0x0000000000402507 : mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x00000000004016d3 : mov byte ptr [rip + 0x207bfe], 1 ; ret
0x000000000040734d : mov ch, -1 ; jmp rax
0x0000000000405fdc : mov dh, -0x40 ; pop rbp ; ret
0x000000000040730d : mov dl, -1 ; jmp rax
0x000000000040259d : mov dword ptr [0x609320], edi ; pop rbp ; ret
0x0000000000402bb6 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000402ac4 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000402b78 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000402829 : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401959 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401847 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401875 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004050c9 : mov dword ptr [rbp - 8], eax ; call 0x4013b5
0x00000000004063a9 : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402c2e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402583 : mov dword ptr [rdx + rcx*8], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403dac : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000402a78 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040517b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004027ec : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402a75 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040276f : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405413 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402a2d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402abe : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000402b7a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000402cff : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000403daa : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004042e9 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000405654 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004055f7 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405772 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004024ed : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004047af : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004063ac : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004016fb : mov ebp, esp ; call rax
0x0000000000401661 : mov ebp, esp ; ja 0x40166c ; pop rbp ; ret
0x0000000000402db7 : mov ecx, dword ptr [rax*8 + 0x4069e0] ; jmp rcx
0x0000000000403097 : mov ecx, dword ptr [rax*8 + 0x406a28] ; jmp rcx
0x00000000004048ae : mov ecx, dword ptr [rax*8 + 0x406ee8] ; jmp rcx
0x0000000000402ac1 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004016f5 : mov edi, 0x608e20 ; mov rbp, rsp ; call rax
0x0000000000401672 : mov edi, 0x609268 ; jmp rax
0x00000000004016b2 : mov edi, 0x609268 ; jmp rdx
0x00000000004050b8 : mov edi, eax ; mov al, 0 ; call 0x4013c6
0x0000000000406457 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000406456 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x00000000004016b0 : mov esi, eax ; mov edi, 0x609268 ; jmp rdx
0x00000000004016f7 : mov fs, word ptr [rax] ; mov rbp, rsp ; call rax
0x000000000040259c : mov qword ptr [0x609320], rdi ; pop rbp ; ret
0x0000000000402c2d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402582 : mov qword ptr [rdx + rcx*8], rax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004042ea : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000403dab : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x000000000040517a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004027eb : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402a74 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040276e : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405412 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402a2c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402cfe : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004042e8 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004024ec : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004047ae : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004016fa : mov rbp, rsp ; call rax
0x0000000000401660 : mov rbp, rsp ; ja 0x40166d ; pop rbp ; ret
0x0000000000402db6 : mov rcx, qword ptr [rax*8 + 0x4069e0] ; jmp rcx
0x0000000000403096 : mov rcx, qword ptr [rax*8 + 0x406a28] ; jmp rcx
0x00000000004048ad : mov rcx, qword ptr [rax*8 + 0x406ee8] ; jmp rcx
0x00000000004050b7 : mov rdi, rax ; mov al, 0 ; call 0x4013c7
0x00000000004016af : mov rsi, rax ; mov edi, 0x609268 ; jmp rdx
0x0000000000405fdb : movzx eax, al ; pop rbp ; ret
0x000000000040250a : movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000406478 : nop dword ptr [rax + rax] ; ret
0x00000000004074d9 : or al, 0 ; add al, al ; loope 0x4074e4 ; jmp qword ptr [rax]
0x0000000000407509 : or al, 0 ; add byte ptr [rax], dl ; in al, -1 ; jmp rax
0x00000000004048af : or al, 0xffffffffffffffc5 ; call 0xffffffffff40892a
0x000000000040360e : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040360f : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000407419 : or dword ptr [rax], eax ; add byte ptr [rax], al ; sar bh, cl ; jmp qword ptr [rax]
0x0000000000407499 : or eax, dword ptr [rax] ; add al, dh ; fdivp st(7) ; jmp qword ptr [rax]
0x00000000004044d1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040646c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040646e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000404d6e : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406470 : pop r14 ; pop r15 ; ret
0x0000000000404d70 : pop r15 ; pop rbp ; ret
0x0000000000406472 : pop r15 ; ret
0x00000000004079a8 : pop rax ; ret 0xffff
0x00000000004016d2 : pop rbp ; mov byte ptr [rip + 0x207bfe], 1 ; ret
0x0000000000401671 : pop rbp ; mov edi, 0x609268 ; jmp rax
0x00000000004016ae : pop rbp ; mov rsi, rax ; mov edi, 0x609268 ; jmp rdx
0x000000000040646b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040646f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401665 : pop rbp ; ret
0x0000000000404d6d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403bfa : pop rbx ; pop rbp ; ret
0x0000000000404d71 : pop rdi ; pop rbp ; ret
0x0000000000406473 : pop rdi ; ret
0x0000000000404d6f : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000406471 : pop rsi ; pop r15 ; ret
0x000000000040646d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040748c : push rax ; fdivp st(7) ; jmp rax
0x000000000040426e : push rax ; pop rbp ; ret
0x0000000000403612 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x00000000004016f4 : push rbp ; mov edi, 0x608e20 ; mov rbp, rsp ; call rax
0x0000000000405b8d : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x0000000000403cde : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000401281 : ret
0x0000000000401602 : ret 0x207b
0x0000000000401402 : ret 0x207c
0x000000000040212d : ret 0x4066
0x000000000040362b : ret 0x4fe8
0x0000000000404869 : ret 0x8844
0x00000000004052e2 : ret 0x8948
0x000000000040373d : ret 0x89a5
0x0000000000403616 : ret 0x8b48
0x0000000000401f3d : ret 0xb0
0x0000000000401695 : ret 0xc148
0x00000000004047a3 : ret 0xd284
0x0000000000403c2c : ret 0xee8
0x0000000000405ada : ret 0xffb7
0x00000000004050be : ret 0xffff
0x000000000040256d : ret 1
0x0000000000403ce2 : ret 8
0x0000000000407348 : rol byte ptr [rip - 0x4a100000], -1 ; jmp rax
0x0000000000404eab : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000402d00 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x402d6b ; ret
0x000000000040169c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4016ab ; pop rbp ; ret
0x0000000000404eac : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000402d01 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x402d6a ; ret
0x0000000000405b8e : ror byte ptr [rax - 0x7f], 1 ; ret 1
0x0000000000403cdf : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000407548 : ror byte ptr [rip - 0x12500000], -1 ; jmp rax
0x000000000040741d : sar bh, cl ; jmp qword ptr [rax]
0x000000000040169e : sar eax, 1 ; jne 0x4016a9 ; pop rbp ; ret
0x000000000040740d : sar edi, 1 ; jmp rax
0x000000000040744d : sar edi, cl ; jmp rax
0x000000000040169d : sar rax, 1 ; jne 0x4016aa ; pop rbp ; ret
0x00000000004074dc : shl cl, -1 ; jmp qword ptr [rax]
0x0000000000405fd8 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004064ad : sub esp, 8 ; add rsp, 8 ; ret
0x00000000004064ac : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040647a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000402223 : test dword ptr [rcx], esp ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x4066
0x00000000004047a2 : xchg eax, esp ; ret 0xd284
0x0000000000405f9e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004026b7 : xor eax, 0x48ffffec ; add esp, 0x10 ; pop rbp ; ret
0x0000000000402b76 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
