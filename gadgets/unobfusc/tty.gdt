0x0000000000403289 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004057ff : add bl, dh ; ret
0x00000000004050e9 : add byte ptr [rax - 0x75], cl ; jge 0x4050e5 ; call 0x401387
0x0000000000405113 : add byte ptr [rax - 0x75], cl ; jge 0x40510f ; call 0x4013d7
0x0000000000405127 : add byte ptr [rax - 0x75], cl ; jge 0x405123 ; call 0x401387
0x0000000000404268 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x00000000004057fd : add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004050e7 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jge 0x4050e7 ; call 0x401389
0x0000000000405111 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jge 0x405111 ; call 0x4013d9
0x0000000000405125 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jge 0x405125 ; call 0x401389
0x00000000004057fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004057fc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004019a5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000403b5e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040324a : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402ff0 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401133 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000401349 : add byte ptr [rax], al ; jmp 0x401149
0x0000000000401e32 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004050e8 : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x10] ; call 0x401388
0x0000000000405112 : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x10] ; call 0x4013d8
0x0000000000403541 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040412b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000402fb8 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004057fe : add byte ptr [rax], al ; ret
0x000000000040412c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000402fb9 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000401558 : add byte ptr [rcx], al ; ret
0x00000000004019a7 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000403b60 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000403248 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040412a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000402fb7 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040535a : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401554 : add eax, 0x206d1e ; add ebx, esi ; ret
0x000000000040151b : add eax, edx ; sar rax, 1 ; jne 0x40152c ; pop rbp ; ret
0x0000000000401559 : add ebx, esi ; ret
0x000000000040168b : add esp, 0x10 ; pop rbp ; ret
0x00000000004050bc : add esp, 0x130 ; pop rbp ; ret
0x0000000000402fb4 : add esp, 0x138 ; pop rbx ; pop rbp ; ret
0x000000000040441c : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000401c40 : add esp, 0x20 ; pop rbp ; ret
0x000000000040176d : add esp, 0x30 ; pop rbp ; ret
0x000000000040362c : add esp, 0x50 ; pop rbp ; ret
0x00000000004020c3 : add esp, 0x70 ; pop rbp ; ret
0x000000000040316e : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040353d : add esp, 0x90 ; pop rbp ; ret
0x00000000004042b4 : add esp, 0xa0 ; pop rbp ; ret
0x0000000000401136 : add esp, 8 ; ret
0x000000000040151a : add rax, rdx ; sar rax, 1 ; jne 0x40152d ; pop rbp ; ret
0x000000000040168a : add rsp, 0x10 ; pop rbp ; ret
0x00000000004050bb : add rsp, 0x130 ; pop rbp ; ret
0x0000000000402fb3 : add rsp, 0x138 ; pop rbx ; pop rbp ; ret
0x000000000040441b : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000401c3f : add rsp, 0x20 ; pop rbp ; ret
0x000000000040176c : add rsp, 0x30 ; pop rbp ; ret
0x000000000040362b : add rsp, 0x50 ; pop rbp ; ret
0x00000000004020c2 : add rsp, 0x70 ; pop rbp ; ret
0x000000000040316d : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040353c : add rsp, 0x90 ; pop rbp ; ret
0x00000000004042b3 : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000401135 : add rsp, 8 ; ret
0x0000000000405359 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401557 : and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000403307 : and dword ptr [rax], 0x81d8558b ; ret 1
0x0000000000403577 : and eax, 0x48fffffd ; add esp, 0x20 ; pop rbp ; ret
0x00000000004019d9 : and eax, 0x6081d8 ; pop rbp ; ret
0x00000000004019ef : and eax, 0x608280 ; pop rbp ; ret
0x0000000000401a13 : and eax, 0x608288 ; pop rbp ; ret
0x00000000004050ee : call 0x401382
0x0000000000405118 : call 0x4013d2
0x0000000000402fe9 : call 0xffffffffe902b939
0x0000000000402fe8 : call 0xffffffffe902b93a
0x000000000040245a : call 0xffffffffff4064be
0x00000000004057d9 : call qword ptr [r12 + rbx*8]
0x0000000000406863 : call qword ptr [rsi]
0x00000000004057da : call qword ptr [rsp + rbx*8]
0x000000000040157d : call rax
0x0000000000406a63 : call rdx
0x00000000004050ba : clc ; add rsp, 0x130 ; pop rbp ; ret
0x000000000040461f : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403b71 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040151f : clc ; jne 0x401528 ; pop rbp ; ret
0x0000000000401f75 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040572b : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040572e : clc ; pop rbp ; ret
0x0000000000405206 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404a8b : cld ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004049d0 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004019d6 : cld ; mov dword ptr [0x6081d8], eax ; pop rbp ; ret
0x0000000000405728 : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000405203 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004051a6 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004049cd : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402fb6 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004014dd : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4014f0 ; pop rbp ; ret
0x0000000000403c6c : cwde ; mov rcx, qword ptr [rax*8 + 0x4060a8] ; jmp rcx
0x0000000000402455 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; call 0xffffffffff4064c3
0x000000000040501f : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000040309b : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x00000000004029d3 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x00000000004057dc : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000401689 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004014f0 : hlt ; pop rbp ; mov edi, 0x608238 ; jmp rax
0x0000000000401556 : insd dword ptr [rdi], dx ; and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000404270 : int 0x80
0x00000000004014e3 : ja 0x4014ea ; pop rbp ; ret
0x00000000004014ef : je 0x4014ed ; pop rbp ; mov edi, 0x608238 ; jmp rax
0x00000000004050ec : jge 0x4050e2 ; call 0x401384
0x0000000000405116 : jge 0x40510c ; call 0x4013d4
0x000000000040512a : jge 0x405120 ; call 0x401384
0x000000000040134b : jmp 0x401147
0x0000000000406843 : jmp qword ptr [rax]
0x0000000000406ae3 : jmp qword ptr [rdx]
0x00000000004014f7 : jmp rax
0x000000000040217e : jmp rcx
0x0000000000401537 : jmp rdx
0x0000000000401520 : jne 0x401527 ; pop rbp ; ret
0x00000000004020c5 : jo 0x402126 ; ret
0x00000000004037d4 : jo 0x403835 ; ret
0x000000000040390e : jo 0x40396f ; ret
0x0000000000403170 : js 0x4031d0 ; pop rbp ; ret
0x0000000000403306 : lock and dword ptr [rax], 0x81d8558b ; ret 1
0x0000000000407021 : loopne 0x407024 ; jmp rax
0x00000000004036ab : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040353b : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000405356 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401a11 : mov byte ptr [0x608288], al ; pop rbp ; ret
0x0000000000401553 : mov byte ptr [rip + 0x206d1e], 1 ; ret
0x0000000000406861 : mov cl, -1 ; call qword ptr [rsi]
0x0000000000406841 : mov cl, -1 ; jmp qword ptr [rax]
0x000000000040535c : mov dh, -0x40 ; pop rbp ; ret
0x00000000004019d7 : mov dword ptr [0x6081d8], eax ; pop rbp ; ret
0x00000000004019ed : mov dword ptr [0x608280], edi ; pop rbp ; ret
0x0000000000401f76 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000401e84 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401f38 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000401769 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401687 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405729 : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000401fee : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040316c : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000401e38 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040453b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401c3c : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401e35 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000401bbf : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004047d3 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401ded : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401e7e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401f3a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004020bf : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040316a : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004036a9 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000405204 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404a89 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004049ce : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040461d : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403b6f : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040572c : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040157b : mov ebp, esp ; call rax
0x00000000004014e1 : mov ebp, esp ; ja 0x4014ec ; pop rbp ; ret
0x0000000000402177 : mov ecx, dword ptr [rax*8 + 0x405ba0] ; jmp rcx
0x0000000000402457 : mov ecx, dword ptr [rax*8 + 0x405be8] ; jmp rcx
0x0000000000403c6e : mov ecx, dword ptr [rax*8 + 0x4060a8] ; jmp rcx
0x0000000000401e81 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401575 : mov edi, 0x607e20 ; mov rbp, rsp ; call rax
0x00000000004014f2 : mov edi, 0x608238 ; jmp rax
0x0000000000401532 : mov edi, 0x608238 ; jmp rdx
0x00000000004050eb : mov edi, dword ptr [rbp - 0x10] ; call 0x401385
0x0000000000405115 : mov edi, dword ptr [rbp - 0x10] ; call 0x4013d5
0x00000000004057d7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x00000000004057d6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000401530 : mov esi, eax ; mov edi, 0x608238 ; jmp rdx
0x00000000004019ec : mov qword ptr [0x608280], rdi ; pop rbp ; ret
0x0000000000401fed : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004036aa : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040316b : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x000000000040453a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401c3b : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401e34 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000401bbe : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004047d2 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401dec : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004020be : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004036a8 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040461c : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403b6e : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040157a : mov rbp, rsp ; call rax
0x00000000004014e0 : mov rbp, rsp ; ja 0x4014ed ; pop rbp ; ret
0x0000000000402176 : mov rcx, qword ptr [rax*8 + 0x405ba0] ; jmp rcx
0x0000000000402456 : mov rcx, qword ptr [rax*8 + 0x405be8] ; jmp rcx
0x0000000000403c6d : mov rcx, qword ptr [rax*8 + 0x4060a8] ; jmp rcx
0x00000000004050ea : mov rdi, qword ptr [rbp - 0x10] ; call 0x401386
0x0000000000405114 : mov rdi, qword ptr [rbp - 0x10] ; call 0x4013d6
0x000000000040152f : mov rsi, rax ; mov edi, 0x608238 ; jmp rdx
0x000000000040535b : movzx eax, al ; pop rbp ; ret
0x00000000004057f8 : nop dword ptr [rax + rax] ; ret
0x0000000000402458 : or al, 0xffffffffffffffc5 ; call 0xffffffffff4064c0
0x00000000004029ce : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x00000000004029cf : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000403891 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004057ec : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004057ee : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040412e : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004057f0 : pop r14 ; pop r15 ; ret
0x0000000000404130 : pop r15 ; pop rbp ; ret
0x00000000004057f2 : pop r15 ; ret
0x0000000000401552 : pop rbp ; mov byte ptr [rip + 0x206d1e], 1 ; ret
0x00000000004014f1 : pop rbp ; mov edi, 0x608238 ; jmp rax
0x000000000040152e : pop rbp ; mov rsi, rax ; mov edi, 0x608238 ; jmp rdx
0x00000000004057eb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004057ef : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004014e5 : pop rbp ; ret
0x000000000040412d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000402fba : pop rbx ; pop rbp ; ret
0x0000000000404131 : pop rdi ; pop rbp ; ret
0x00000000004057f3 : pop rdi ; ret
0x000000000040412f : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004057f1 : pop rsi ; pop r15 ; ret
0x00000000004057ed : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000401d71 : push 0x48006082 ; add esp, 0x30 ; pop rbp ; ret
0x000000000040362e : push rax ; pop rbp ; ret
0x00000000004029d2 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000401574 : push rbp ; mov edi, 0x607e20 ; mov rbp, rsp ; call rax
0x0000000000404ee7 : push rbp ; ret
0x0000000000404cad : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000040309e : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000401139 : ret
0x0000000000401352 : ret 0x206d
0x0000000000401142 : ret 0x206e
0x0000000000403c29 : ret 0x8844
0x00000000004046a2 : ret 0x8948
0x0000000000402afd : ret 0x89a5
0x00000000004029d6 : ret 0x8b48
0x00000000004029eb : ret 0xafe8
0x0000000000401515 : ret 0xc148
0x00000000004019aa : ret 0xd284
0x0000000000402fec : ret 0xee8
0x0000000000402baa : ret 0xffe8
0x00000000004050f0 : ret 0xffff
0x000000000040330e : ret 1
0x00000000004030a2 : ret 8
0x000000000040426b : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x00000000004020c0 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x40212b ; ret
0x000000000040151c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40152b ; pop rbp ; ret
0x000000000040426c : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x00000000004020c1 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x40212a ; ret
0x0000000000404cae : ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000040309f : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000040151e : sar eax, 1 ; jne 0x401529 ; pop rbp ; ret
0x000000000040151d : sar rax, 1 ; jne 0x40152a ; pop rbp ; ret
0x0000000000404e23 : shr al, -0x49 ; ret
0x0000000000405358 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401131 : sub eax, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000040582d : sub esp, 8 ; add rsp, 8 ; ret
0x000000000040582c : sub rsp, 8 ; add rsp, 8 ; ret
0x00000000004057fa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004019a9 : xchg eax, ebp ; ret 0xd284
0x0000000000403b62 : xchg eax, esp ; ret 0xd284
0x00000000004050be : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401f36 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
