0x00000000004034d9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405a4f : add bl, dh ; ret
0x0000000000405013 : add byte ptr [rax - 0x75], cl ; jge 0x404fdf ; call 0x401237
0x00000000004044b8 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000405a4d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000405011 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jge 0x404fe1 ; call 0x401239
0x0000000000405a4b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000400862 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400864 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000404fe2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x53e8c87d], cl ; ret
0x0000000000403dae : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040349a : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403240 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040117b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004012f9 : add byte ptr [rax], al ; jmp 0x401199
0x000000000040721f : add byte ptr [rax], al ; loope 0x407226 ; jmp rax
0x0000000000402082 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000405012 : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x40] ; call 0x401238
0x0000000000405181 : add byte ptr [rax], al ; mov rdi, rax ; call 0x4013f7
0x00000000004051c5 : add byte ptr [rax], al ; mov rsi, rax ; call 0x401447
0x000000000040721a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; or byte ptr [rax], al ; add byte ptr [rax], al ; loope 0x40722b ; jmp rax
0x0000000000401e98 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040437b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403208 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000400866 : add byte ptr [rax], al ; ret
0x000000000040437c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000404fe4 : add byte ptr [rbx + 0x53e8c87d], cl ; ret
0x0000000000403209 : add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004015a8 : add byte ptr [rcx], al ; ret
0x0000000000403db0 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000403498 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040517f : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rax ; call 0x4013f9
0x00000000004051c3 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rsi, rax ; call 0x401449
0x000000000040437a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000403207 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004055aa : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004015a4 : add eax, 0x206cd6 ; add ebx, esi ; ret
0x000000000040156b : add eax, edx ; sar rax, 1 ; jne 0x40157c ; pop rbp ; ret
0x00000000004015a9 : add ebx, esi ; ret
0x00000000004016db : add esp, 0x10 ; pop rbp ; ret
0x000000000040530c : add esp, 0x130 ; pop rbp ; ret
0x0000000000403204 : add esp, 0x138 ; pop rbx ; pop rbp ; ret
0x000000000040466c : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000401e94 : add esp, 0x1c0 ; pop rbp ; ret
0x0000000000401c60 : add esp, 0x20 ; pop rbp ; ret
0x00000000004017bd : add esp, 0x30 ; pop rbp ; ret
0x000000000040387c : add esp, 0x50 ; pop rbp ; ret
0x0000000000402313 : add esp, 0x70 ; pop rbp ; ret
0x00000000004033be : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040378d : add esp, 0x90 ; pop rbp ; ret
0x0000000000404504 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040117e : add esp, 8 ; ret
0x000000000040156a : add rax, rdx ; sar rax, 1 ; jne 0x40157d ; pop rbp ; ret
0x00000000004016da : add rsp, 0x10 ; pop rbp ; ret
0x000000000040530b : add rsp, 0x130 ; pop rbp ; ret
0x0000000000403203 : add rsp, 0x138 ; pop rbx ; pop rbp ; ret
0x000000000040466b : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000401e93 : add rsp, 0x1c0 ; pop rbp ; ret
0x0000000000401c5f : add rsp, 0x20 ; pop rbp ; ret
0x00000000004017bc : add rsp, 0x30 ; pop rbp ; ret
0x000000000040387b : add rsp, 0x50 ; pop rbp ; ret
0x0000000000402312 : add rsp, 0x70 ; pop rbp ; ret
0x00000000004033bd : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040378c : add rsp, 0x90 ; pop rbp ; ret
0x0000000000404503 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040117d : add rsp, 8 ; ret
0x00000000004055a9 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004015a7 : and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000403557 : and dword ptr [rax], 0x81d8558b ; ret 1
0x00000000004037c7 : and eax, 0x48fffffd ; add esp, 0x20 ; pop rbp ; ret
0x0000000000401a0f : and eax, 0x608288 ; pop rbp ; ret
0x0000000000401a33 : and eax, 0x608290 ; pop rbp ; ret
0x0000000000405018 : call 0x401232
0x00000000004050f6 : call 0x401332
0x0000000000405186 : call 0x4013f2
0x00000000004051ca : call 0x401442
0x0000000000403239 : call 0xffffffffe902bb89
0x0000000000403238 : call 0xffffffffe902bb8a
0x00000000004026aa : call 0xffffffffff406710
0x0000000000405a29 : call qword ptr [r12 + rbx*8]
0x0000000000406a43 : call qword ptr [rsi]
0x0000000000405a2a : call qword ptr [rsp + rbx*8]
0x00000000004015cd : call rax
0x0000000000406c63 : call rdx
0x000000000040530a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x000000000040486f : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403dc1 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040156f : clc ; jne 0x401578 ; pop rbp ; ret
0x00000000004021c5 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040597b : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040597e : clc ; pop rbp ; ret
0x0000000000405456 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404cdb : cld ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404c20 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000405978 : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000405453 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004053f6 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404c1d : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403206 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040152d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401540 ; pop rbp ; ret
0x0000000000403ebc : cwde ; mov rcx, qword ptr [rax*8 + 0x4062a8] ; jmp rcx
0x00000000004026a5 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; call 0xffffffffff406715
0x000000000040526f : dec dword ptr [rax - 0x7f] ; ret 1
0x00000000004032eb : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000402c23 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000405a2c : fmul qword ptr [rax - 0x7d] ; ret
0x00000000004016d9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401540 : hlt ; pop rbp ; mov edi, 0x608238 ; jmp rax
0x00000000004015a6 : insb byte ptr [rdi], dx ; and byte ptr [rax], al ; add ebx, esi ; ret
0x00000000004044c0 : int 0x80
0x0000000000401533 : ja 0x40153a ; pop rbp ; ret
0x000000000040153f : je 0x40153d ; pop rbp ; mov edi, 0x608238 ; jmp rax
0x0000000000405016 : jge 0x404fdc ; call 0x401234
0x00000000004012fb : jmp 0x401197
0x0000000000406e03 : jmp qword ptr [rax]
0x0000000000406ce3 : jmp qword ptr [rdx]
0x0000000000401547 : jmp rax
0x00000000004023ce : jmp rcx
0x0000000000401587 : jmp rdx
0x0000000000401570 : jne 0x401577 ; pop rbp ; ret
0x0000000000402315 : jo 0x402376 ; ret
0x0000000000403a24 : jo 0x403a85 ; ret
0x0000000000403b5e : jo 0x403bbf ; ret
0x00000000004033c0 : js 0x403420 ; pop rbp ; ret
0x0000000000403556 : lock and dword ptr [rax], 0x81d8558b ; ret 1
0x0000000000407221 : loope 0x407224 ; jmp rax
0x00000000004050f4 : mov al, 0 ; call 0x401334
0x00000000004038fb : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040378b : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x00000000004055a6 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401a31 : mov byte ptr [0x608290], al ; pop rbp ; ret
0x00000000004015a3 : mov byte ptr [rip + 0x206cd6], 1 ; ret
0x00000000004055ac : mov dh, -0x40 ; pop rbp ; ret
0x0000000000401a0d : mov dword ptr [0x608288], edi ; pop rbp ; ret
0x00000000004021c6 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004020d4 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000402188 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004017b9 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004016d7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405979 : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040223e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004033bc : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000402088 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040478b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401c5c : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402085 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000401bdf : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000404a23 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040203d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004020ce : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040218a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040230f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004033ba : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004038f9 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000405454 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404cd9 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404c1e : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040486d : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403dbf : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040597c : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004015cb : mov ebp, esp ; call rax
0x0000000000401531 : mov ebp, esp ; ja 0x40153c ; pop rbp ; ret
0x00000000004023c7 : mov ecx, dword ptr [rax*8 + 0x405da0] ; jmp rcx
0x00000000004026a7 : mov ecx, dword ptr [rax*8 + 0x405de8] ; jmp rcx
0x0000000000403ebe : mov ecx, dword ptr [rax*8 + 0x4062a8] ; jmp rcx
0x00000000004020d1 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004015c5 : mov edi, 0x607e20 ; mov rbp, rsp ; call rax
0x0000000000401542 : mov edi, 0x608238 ; jmp rax
0x0000000000401582 : mov edi, 0x608238 ; jmp rdx
0x0000000000405015 : mov edi, dword ptr [rbp - 0x40] ; call 0x401235
0x0000000000405184 : mov edi, eax ; call 0x4013f4
0x0000000000405a27 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000405a26 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x00000000004051c8 : mov esi, eax ; call 0x401444
0x0000000000401580 : mov esi, eax ; mov edi, 0x608238 ; jmp rdx
0x0000000000401a0c : mov qword ptr [0x608288], rdi ; pop rbp ; ret
0x000000000040223d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004038fa : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004033bb : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x000000000040478a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401c5b : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402084 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000401bde : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000404a22 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040203c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040230e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004038f8 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040486c : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403dbe : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004015ca : mov rbp, rsp ; call rax
0x0000000000401530 : mov rbp, rsp ; ja 0x40153d ; pop rbp ; ret
0x00000000004023c6 : mov rcx, qword ptr [rax*8 + 0x405da0] ; jmp rcx
0x00000000004026a6 : mov rcx, qword ptr [rax*8 + 0x405de8] ; jmp rcx
0x0000000000403ebd : mov rcx, qword ptr [rax*8 + 0x4062a8] ; jmp rcx
0x0000000000405014 : mov rdi, qword ptr [rbp - 0x40] ; call 0x401236
0x0000000000405183 : mov rdi, rax ; call 0x4013f5
0x00000000004051c7 : mov rsi, rax ; call 0x401445
0x000000000040157f : mov rsi, rax ; mov edi, 0x608238 ; jmp rdx
0x000000000040721c : movsb byte ptr [rdi], byte ptr [rsi] ; or byte ptr [rax], al ; add byte ptr [rax], al ; loope 0x407229 ; jmp rax
0x00000000004055ab : movzx eax, al ; pop rbp ; ret
0x0000000000405a48 : nop dword ptr [rax + rax] ; ret
0x00000000004026a8 : or al, 0xffffffffffffffc5 ; call 0xffffffffff406712
0x0000000000402c1e : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000402c1f : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000400860 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040721d : or byte ptr [rax], al ; add byte ptr [rax], al ; loope 0x407228 ; jmp rax
0x0000000000403ae1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405a3c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405a3e : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040437e : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405a40 : pop r14 ; pop r15 ; ret
0x0000000000404380 : pop r15 ; pop rbp ; ret
0x0000000000405a42 : pop r15 ; ret
0x00000000004015a2 : pop rbp ; mov byte ptr [rip + 0x206cd6], 1 ; ret
0x0000000000401541 : pop rbp ; mov edi, 0x608238 ; jmp rax
0x000000000040157e : pop rbp ; mov rsi, rax ; mov edi, 0x608238 ; jmp rdx
0x0000000000405a3b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405a3f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401535 : pop rbp ; ret
0x000000000040437d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040320a : pop rbx ; pop rbp ; ret
0x0000000000404381 : pop rdi ; pop rbp ; ret
0x0000000000405a43 : pop rdi ; ret
0x000000000040437f : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000405a41 : pop rsi ; pop r15 ; ret
0x0000000000405a3d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000401fc1 : push 0x48006082 ; add esp, 0x30 ; pop rbp ; ret
0x000000000040387e : push rax ; pop rbp ; ret
0x0000000000402c22 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x00000000004015c4 : push rbp ; mov edi, 0x607e20 ; mov rbp, rsp ; call rax
0x0000000000404efd : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x00000000004032ee : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000404fe9 : push rbx ; ret
0x0000000000404e4a : push rdx ; ret
0x0000000000400868 : ret
0x0000000000401302 : ret 0x206d
0x0000000000403e79 : ret 0x8844
0x00000000004048f2 : ret 0x8948
0x0000000000402d4d : ret 0x89a5
0x0000000000402c26 : ret 0x8b48
0x0000000000402c3b : ret 0xafe8
0x0000000000401565 : ret 0xc148
0x0000000000403db3 : ret 0xd284
0x000000000040323c : ret 0xee8
0x0000000000402dfa : ret 0xffe6
0x000000000040501a : ret 0xffff
0x000000000040355e : ret 1
0x00000000004032f2 : ret 8
0x00000000004044bb : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000402310 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x40237b ; ret
0x000000000040156c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40157b ; pop rbp ; ret
0x00000000004044bc : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000402311 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x40237a ; ret
0x0000000000404efe : ror byte ptr [rax - 0x7f], 1 ; ret 1
0x00000000004032ef : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x00000000004015a5 : salc ; insb byte ptr [rdi], dx ; and byte ptr [rax], al ; add ebx, esi ; ret
0x000000000040156e : sar eax, 1 ; jne 0x401579 ; pop rbp ; ret
0x000000000040156d : sar rax, 1 ; jne 0x40157a ; pop rbp ; ret
0x0000000000405017 : shr al, 0x13 ; ret 0xffff
0x00000000004050ce : shr al, 0x4c ; ret
0x00000000004055a8 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000405a7d : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000405a7c : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000405a4a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004023c9 : vminps xmm0, xmm11, xmmword ptr [rax] ; jmp rcx
0x00000000004026a9 : vminps xmm0, xmm2, xmmword ptr [rax] ; jmp rcx
0x0000000000403db2 : xchg eax, esp ; ret 0xd284
0x000000000040530e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000402186 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
