0x00000000004031b9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403322 : add al, 0x25 ; mov eax, 0x5d0060a3 ; ret
0x0000000000402a77 : add al, 0x7c ; add byte ptr [rbx - 0x76b7138b], cl ; ret 0xb0
0x0000000000402cc7 : add al, ch ; ret
0x0000000000409147 : add al, ch ; ret 0xffff
0x0000000000409127 : add al, cl ; ret 0xffff
0x0000000000408913 : add al, dl ; loop 0x40891a ; jmp rax
0x000000000040758f : add bl, dh ; ret
0x0000000000402fa5 : add byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x0000000000405d38 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000402bc8 : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x0000000000408753 : add byte ptr [rax], ah ; mov bl, -1 ; jmp rax
0x000000000040758d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000402bc6 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000040758b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000403714 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040758c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004075f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x401f
0x0000000000409161 : add byte ptr [rax], al ; add byte ptr [rdi + rax], ah ; add byte ptr [rax], cl ; ret
0x0000000000409141 : add byte ptr [rax], al ; add byte ptr [rdi + rax], al ; add al, ch ; ret 0xffff
0x0000000000402f59 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5588
0x000000000040562e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040318b : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404ac0 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402107 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004015e3 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004090e2 : add byte ptr [rax], al ; in al, 6 ; add byte ptr [rax], al ; ret 0xffff
0x00000000004091e2 : add byte ptr [rax], al ; in al, 7 ; add byte ptr [rax], al ; pop rax ; ret
0x0000000000401699 : add byte ptr [rax], al ; jmp 0x4015f9
0x0000000000403902 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000403716 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000402fa4 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004091e6 : add byte ptr [rax], al ; pop rax ; ret
0x00000000004025e5 : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000405bfb : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000404a88 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000408922 : add byte ptr [rax], al ; push rax ; in al, -1 ; jmp qword ptr [rax]
0x00000000004088a2 : add byte ptr [rax], al ; rcr bl, -1 ; jmp qword ptr [rax]
0x00000000004097fe : add byte ptr [rax], al ; rcr ch, -1 ; call qword ptr [rax]
0x0000000000408892 : add byte ptr [rax], al ; rcr dl, -1 ; jmp rax
0x000000000040758e : add byte ptr [rax], al ; ret
0x00000000004075f6 : add byte ptr [rax], al ; ret 0x401f
0x00000000004090e6 : add byte ptr [rax], al ; ret 0xffff
0x00000000004091a7 : add byte ptr [rax], bh ; ret
0x00000000004090a7 : add byte ptr [rax], bh ; ret 0xffff
0x0000000000409187 : add byte ptr [rax], ch ; ret
0x0000000000409087 : add byte ptr [rax], ch ; ret 0xffff
0x0000000000409167 : add byte ptr [rax], cl ; ret
0x0000000000408763 : add byte ptr [rax], dl ; mov ah, -1 ; jmp qword ptr [rax]
0x0000000000405bfc : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000404a89 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000402a7a : add byte ptr [rbx - 0x76b7138b], cl ; ret 0xb0
0x0000000000401b48 : add byte ptr [rcx], al ; ret
0x00000000004025e3 : add byte ptr [rcx], cl ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000409163 : add byte ptr [rdi + rax], ah ; add byte ptr [rax], cl ; ret
0x0000000000409143 : add byte ptr [rdi + rax], al ; add al, ch ; ret 0xffff
0x0000000000408920 : add byte ptr [rdi], cl ; add byte ptr [rax], al ; push rax ; in al, -1 ; jmp qword ptr [rax]
0x0000000000402f5b : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5588
0x0000000000405630 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000404d18 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405bfa : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000404a87 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004035d6 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004068fd : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004070ea : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401b44 : add eax, 0x2087ce ; add ebx, esi ; ret
0x0000000000401b0b : add eax, edx ; sar rax, 1 ; jne 0x401b1c ; pop rbp ; ret
0x0000000000401b49 : add ebx, esi ; ret
0x0000000000401cbb : add esp, 0x10 ; pop rbp ; ret
0x00000000004070ac : add esp, 0x130 ; pop rbp ; ret
0x0000000000404a84 : add esp, 0x138 ; pop rbx ; pop rbp ; ret
0x0000000000405eec : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000402154 : add esp, 0x20 ; pop rbp ; ret
0x0000000000402f18 : add esp, 0x290 ; pop rbp ; ret
0x0000000000401d9d : add esp, 0x30 ; pop rbp ; ret
0x00000000004030d9 : add esp, 0x50 ; pop rbp ; ret
0x00000000004027bd : add esp, 0x60 ; pop rbp ; ret
0x0000000000403b93 : add esp, 0x70 ; pop rbp ; ret
0x0000000000404c3e : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040500d : add esp, 0x90 ; pop rbp ; ret
0x00000000004025e1 : add esp, 0x900 ; pop rbp ; ret
0x0000000000405d84 : add esp, 0xa0 ; pop rbp ; ret
0x00000000004015e6 : add esp, 8 ; ret
0x0000000000401b0a : add rax, rdx ; sar rax, 1 ; jne 0x401b1d ; pop rbp ; ret
0x0000000000401cba : add rsp, 0x10 ; pop rbp ; ret
0x00000000004070ab : add rsp, 0x130 ; pop rbp ; ret
0x0000000000404a83 : add rsp, 0x138 ; pop rbx ; pop rbp ; ret
0x0000000000405eeb : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000402153 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000402f17 : add rsp, 0x290 ; pop rbp ; ret
0x0000000000401d9c : add rsp, 0x30 ; pop rbp ; ret
0x00000000004030d8 : add rsp, 0x50 ; pop rbp ; ret
0x00000000004027bc : add rsp, 0x60 ; pop rbp ; ret
0x0000000000403b92 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000404c3d : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040500c : add rsp, 0x90 ; pop rbp ; ret
0x00000000004025e0 : add rsp, 0x900 ; pop rbp ; ret
0x0000000000405d83 : add rsp, 0xa0 ; pop rbp ; ret
0x00000000004015e5 : add rsp, 8 ; ret
0x00000000004070e9 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401b47 : and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000405047 : and eax, 0x48fffffd ; add esp, 0x20 ; pop rbp ; ret
0x00000000004032ff : and eax, 0x60a3b0 ; pop rbp ; ret
0x0000000000403323 : and eax, 0x60a3b8 ; pop rbp ; ret
0x0000000000405553 : call 0x401772
0x00000000004036d2 : call 0x4902c022
0x00000000004036d1 : call 0x4902c023
0x00000000004036d2 : call 0x4902c025
0x00000000004036d1 : call 0x4902c026
0x0000000000404ab9 : call 0xffffffffe902d409
0x0000000000404ab8 : call 0xffffffffe902d40a
0x0000000000407569 : call qword ptr [r12 + rbx*8]
0x0000000000408b6b : call qword ptr [rax]
0x0000000000408cab : call qword ptr [rdx]
0x0000000000408ccb : call qword ptr [rsi]
0x000000000040756a : call qword ptr [rsp + rbx*8]
0x0000000000401b6d : call rax
0x0000000000408b2b : call rdx
0x0000000000408aab : call rsp
0x00000000004070aa : clc ; add rsp, 0x130 ; pop rbp ; ret
0x00000000004060ef : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403169 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004030d7 : clc ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401b0f : clc ; jne 0x401b18 ; pop rbp ; ret
0x0000000000402fa2 : clc ; mov byte ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402836 : clc ; mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000403a45 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004074bb : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402fa9 : clc ; pop rbp ; ret
0x00000000004064a6 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406449 : cld ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004065c4 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004074b8 : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004064a3 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406446 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004065c1 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403c4a : cmp byte ptr [rbp + 0x40], 0 ; jmp rcx
0x0000000000404a86 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000401acd : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401ae0 ; pop rbp ; ret
0x000000000040573c : cwde ; mov rcx, qword ptr [rax*8 + 0x408288] ; jmp rcx
0x0000000000403c45 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; cmp byte ptr [rbp + 0x40], 0 ; jmp rcx
0x0000000000403f25 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; enter 0x407d, 0 ; jmp rcx
0x00000000004066ae : dec dword ptr [rax - 0x75] ; push rbp ; fmul dword ptr [rax + 1] ; ret 0x8948
0x000000000040700f : dec dword ptr [rax - 0x7f] ; ret 1
0x0000000000404b6b : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000403f2a : enter 0x407d, 0 ; jmp rcx
0x00000000004088e5 : fdivp st(7) ; jmp qword ptr [rax]
0x000000000040278c : fmul dword ptr [r8 - 0x77] ; ret 0x8148
0x00000000004066b2 : fmul dword ptr [rax + 1] ; ret 0x8948
0x00000000004044a3 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040278d : fmul dword ptr [rax - 0x77] ; ret 0x8148
0x000000000040756c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000401cb9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401ae0 : hlt ; pop rbp ; mov edi, 0x60a2e0 ; jmp rax
0x0000000000408925 : in al, -1 ; jmp qword ptr [rax]
0x00000000004090e4 : in al, 6 ; add byte ptr [rax], al ; ret 0xffff
0x00000000004091e4 : in al, 7 ; add byte ptr [rax], al ; pop rax ; ret
0x000000000040554e : in al, dx ; mov rdi, qword ptr [rbp - 0x10] ; call 0x401777
0x000000000040875f : inc dword ptr [rax] ; or byte ptr [rax], al ; add byte ptr [rax], dl ; mov ah, -1 ; jmp qword ptr [rax]
0x000000000040891f : inc dword ptr [rax] ; sldt word ptr [rax] ; push rax ; in al, -1 ; jmp qword ptr [rax]
0x0000000000405d40 : int 0x80
0x0000000000401ad3 : ja 0x401ada ; pop rbp ; ret
0x0000000000401adf : je 0x401add ; pop rbp ; mov edi, 0x60a2e0 ; jmp rax
0x0000000000405551 : jge 0x405547 ; call 0x401774
0x0000000000402a78 : jl 0x402ac2 ; add byte ptr [rbx - 0x76b7138b], cl ; ret 0xb0
0x000000000040169b : jmp 0x4015f7
0x0000000000408667 : jmp qword ptr [rax]
0x0000000000408c4b : jmp qword ptr [rbx]
0x0000000000408f8b : jmp qword ptr [rdx]
0x0000000000401ae7 : jmp rax
0x0000000000401ec2 : jmp rcx
0x0000000000401b27 : jmp rdx
0x0000000000401b10 : jne 0x401b17 ; pop rbp ; ret
0x000000000040554d : jne 0x405543 ; mov rdi, qword ptr [rbp - 0x10] ; call 0x401778
0x0000000000403b95 : jo 0x403bf6 ; ret
0x00000000004052a4 : jo 0x405305 ; ret
0x00000000004053de : jo 0x40543f ; ret
0x0000000000404c40 : js 0x404ca0 ; pop rbp ; ret
0x0000000000408915 : loop 0x408918 ; jmp rax
0x00000000004027bb : loopne 0x40280b ; add esp, 0x60 ; pop rbp ; ret
0x00000000004027ba : loopne 0x40280c ; add esp, 0x60 ; pop rbp ; ret
0x0000000000402ac7 : loopne 0x402b17 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000402ac6 : loopne 0x402b18 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000408765 : mov ah, -1 ; jmp qword ptr [rax]
0x00000000004066ac : mov al, -1 ; dec dword ptr [rax - 0x75] ; push rbp ; fmul dword ptr [rax + 1] ; ret 0x8948
0x000000000040517b : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040500b : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000401eb9 : mov al, 0x48 ; mov ecx, dword ptr [rax*8 + 0x4075f0] ; jmp rcx
0x00000000004070e6 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000408755 : mov bl, -1 ; jmp rax
0x0000000000403321 : mov byte ptr [0x60a3b8], al ; pop rbp ; ret
0x0000000000402fa3 : mov byte ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402837 : mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000401b43 : mov byte ptr [rip + 0x2087ce], 1 ; ret
0x00000000004035d8 : mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004068ff : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004070ec : mov dh, -0x40 ; pop rbp ; ret
0x00000000004032fd : mov dword ptr [0x60a3b0], edi ; pop rbp ; ret
0x0000000000403a46 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000403954 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000403a08 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040554c : mov dword ptr [rbp - 0x14], esi ; mov rdi, qword ptr [rbp - 0x10] ; call 0x401779
0x0000000000402ac5 : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401d99 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401cb7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004074b9 : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000403abe : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406806 : mov dword ptr [rdx], ecx ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000403324 : mov eax, 0x5d0060a3 ; ret
0x0000000000404c3c : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000403908 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040600b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040354c : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403905 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000402822 : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004062a3 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004032b9 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040394e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000403719 : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004027b9 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000403a0a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000403b8f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000404c3a : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000405179 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004064a4 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406447 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004065c2 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004060ed : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403167 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004030d5 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000402fa7 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000401b6b : mov ebp, esp ; call rax
0x0000000000401ad1 : mov ebp, esp ; ja 0x401adc ; pop rbp ; ret
0x00000000004015e1 : mov ebx, 0x48000002 ; add esp, 8 ; ret
0x0000000000401ebb : mov ecx, dword ptr [rax*8 + 0x4075f0] ; jmp rcx
0x0000000000403c47 : mov ecx, dword ptr [rax*8 + 0x407d80] ; jmp rcx
0x0000000000403f27 : mov ecx, dword ptr [rax*8 + 0x407dc8] ; jmp rcx
0x000000000040573e : mov ecx, dword ptr [rax*8 + 0x408288] ; jmp rcx
0x0000000000403951 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040281d : mov edi, 0x48ffffff ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000401b65 : mov edi, 0x609e20 ; mov rbp, rsp ; call rax
0x0000000000401ae2 : mov edi, 0x60a2e0 ; jmp rax
0x0000000000401b22 : mov edi, 0x60a2e0 ; jmp rdx
0x0000000000405550 : mov edi, dword ptr [rbp - 0x10] ; call 0x401775
0x0000000000407567 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000407566 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000401b20 : mov esi, eax ; mov edi, 0x60a2e0 ; jmp rdx
0x00000000004032fc : mov qword ptr [0x60a3b0], rdi ; pop rbp ; ret
0x0000000000403abd : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406805 : mov qword ptr [rdx], rcx ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040517a : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000404c3b : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x000000000040600a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040354b : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403904 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000402821 : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004062a2 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004032b8 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403718 : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004027b8 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000403b8e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000405178 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004060ec : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403166 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004030d4 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000402fa6 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000401b6a : mov rbp, rsp ; call rax
0x0000000000401ad0 : mov rbp, rsp ; ja 0x401add ; pop rbp ; ret
0x0000000000401eba : mov rcx, qword ptr [rax*8 + 0x4075f0] ; jmp rcx
0x0000000000403c46 : mov rcx, qword ptr [rax*8 + 0x407d80] ; jmp rcx
0x0000000000403f26 : mov rcx, qword ptr [rax*8 + 0x407dc8] ; jmp rcx
0x000000000040573d : mov rcx, qword ptr [rax*8 + 0x408288] ; jmp rcx
0x000000000040554f : mov rdi, qword ptr [rbp - 0x10] ; call 0x401776
0x0000000000401b1f : mov rsi, rax ; mov edi, 0x60a2e0 ; jmp rdx
0x00000000004032d8 : movabs dword ptr [0x5dffffe4c0e80060], eax ; ret
0x00000000004035d7 : movzx eax, al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004068fe : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004070eb : movzx eax, al ; pop rbp ; ret
0x000000000040283a : movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000407588 : nop dword ptr [rax + rax] ; ret
0x0000000000403c48 : or al, 0xffffffffffffffc5 ; cmp byte ptr [rbp + 0x40], 0 ; jmp rcx
0x0000000000403f28 : or al, 0xffffffffffffffc5 ; enter 0x407d, 0 ; jmp rcx
0x000000000040449e : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040449f : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000402789 : or byte ptr [rax - 0x75], cl ; fmul dword ptr [r8 - 0x77] ; ret 0x8148
0x0000000000408761 : or byte ptr [rax], al ; add byte ptr [rax], dl ; mov ah, -1 ; jmp qword ptr [rax]
0x0000000000402f55 : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5588
0x0000000000405361 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040757c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040757e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405bfe : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000407580 : pop r14 ; pop r15 ; ret
0x0000000000405c00 : pop r15 ; pop rbp ; ret
0x0000000000407582 : pop r15 ; ret
0x00000000004091e8 : pop rax ; ret
0x0000000000401b42 : pop rbp ; mov byte ptr [rip + 0x2087ce], 1 ; ret
0x0000000000401ae1 : pop rbp ; mov edi, 0x60a2e0 ; jmp rax
0x0000000000401b1e : pop rbp ; mov rsi, rax ; mov edi, 0x60a2e0 ; jmp rdx
0x000000000040757b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040757f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401ad5 : pop rbp ; ret
0x0000000000405bfd : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000404a8a : pop rbx ; pop rbp ; ret
0x0000000000405c01 : pop rdi ; pop rbp ; ret
0x0000000000407583 : pop rdi ; ret
0x0000000000405bff : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000407581 : pop rsi ; pop r15 ; ret
0x000000000040757d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000408924 : push rax ; in al, -1 ; jmp qword ptr [rax]
0x00000000004030db : push rax ; pop rbp ; ret
0x00000000004066b1 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8948
0x00000000004044a2 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000401b64 : push rbp ; mov edi, 0x609e20 ; mov rbp, rsp ; call rax
0x0000000000406c9d : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x0000000000404b6e : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x00000000004088a4 : rcr bl, -1 ; jmp qword ptr [rax]
0x0000000000409800 : rcr ch, -1 ; call qword ptr [rax]
0x0000000000408894 : rcr dl, -1 ; jmp rax
0x00000000004015e9 : ret
0x00000000004018a2 : ret 0x2088
0x00000000004016a2 : ret 0x2089
0x00000000004036c7 : ret 0x30
0x0000000000402051 : ret 0x39e8
0x00000000004075f8 : ret 0x401f
0x0000000000402f5e : ret 0x5588
0x0000000000402790 : ret 0x8148
0x00000000004056f9 : ret 0x8844
0x0000000000406172 : ret 0x8948
0x00000000004045cd : ret 0x89a5
0x000000000040272b : ret 0x8b48
0x0000000000402011 : ret 0xb0
0x0000000000401b05 : ret 0xc148
0x0000000000405633 : ret 0xd284
0x0000000000404abc : ret 0xee8
0x00000000004044bb : ret 0xfe8
0x00000000004036d8 : ret 0xffff
0x0000000000402793 : ret 1
0x0000000000404b72 : ret 8
0x0000000000408750 : rol byte ptr [rdi], 0 ; add byte ptr [rax], ah ; mov bl, -1 ; jmp rax
0x00000000004086d0 : rol byte ptr [rip - 0x55600000], -1 ; jmp rax
0x0000000000405d3b : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000403b90 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x403bfb ; ret
0x0000000000408890 : ror byte ptr [rax + rax], 0 ; rcr dl, -1 ; jmp rax
0x0000000000401b0c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401b1b ; pop rbp ; ret
0x0000000000405d3c : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000403b91 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x403bfa ; ret
0x0000000000406c9e : ror byte ptr [rax - 0x7f], 1 ; ret 1
0x0000000000404b6f : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x00000000004088d0 : ror byte ptr [rip - 0x22d00000], -1 ; jmp rax
0x0000000000408910 : ror byte ptr [rsi], 0 ; add al, dl ; loop 0x40891d ; jmp rax
0x0000000000401b0e : sar eax, 1 ; jne 0x401b19 ; pop rbp ; ret
0x0000000000401b0d : sar rax, 1 ; jne 0x401b1a ; pop rbp ; ret
0x00000000004090e0 : sbb al, 0 ; add byte ptr [rax], al ; in al, 6 ; add byte ptr [rax], al ; ret 0xffff
0x00000000004091e0 : sbb al, 0 ; add byte ptr [rax], al ; in al, 7 ; add byte ptr [rax], al ; pop rax ; ret
0x0000000000408921 : sldt word ptr [rax] ; push rax ; in al, -1 ; jmp qword ptr [rax]
0x00000000004070e8 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004075d1 : sub esp, 8 ; add rsp, 8 ; ret
0x00000000004075d0 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040758a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000401b46 : xchg dword ptr [rax], esp ; add byte ptr [rcx], al ; ret
0x0000000000402f5d : xchg eax, ebp ; ret 0x5588
0x0000000000405632 : xchg eax, esp ; ret 0xd284
0x00000000004070ae : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000403a06 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
