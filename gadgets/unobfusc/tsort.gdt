0x00000000004050ce : adc al, -8 ; pop rbp ; ret
0x0000000000404589 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040856b : add ah, ah ; add al, 0 ; add al, ah ; ret 0xffff
0x000000000040856d : add al, 0 ; add al, ah ; ret 0xffff
0x000000000040864f : add al, ah ; ret
0x000000000040856f : add al, ah ; ret 0xffff
0x000000000040866f : add al, dh ; ret
0x000000000040862f : add al, dl ; ret
0x0000000000406fbf : add bl, dh ; ret
0x00000000004024d9 : add byte ptr [rax + 0xf012400], dh ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000405a28 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x00000000004085cf : add byte ptr [rax], ah ; ret
0x0000000000408569 : add byte ptr [rax], al ; add ah, ah ; add al, 0 ; add al, ah ; ret 0xffff
0x0000000000406fbd : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000406fbb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000404e9b : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000406fbc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004085c9 : add byte ptr [rax], al ; add byte ptr [rbp + rax], al ; add byte ptr [rax], ah ; ret
0x0000000000404e5e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000401aa3 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000040454a : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004042f0 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040122b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000401449 : add byte ptr [rax], al ; jmp 0x401249
0x0000000000403132 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000401e05 : add byte ptr [rax], al ; pop rbp ; ret
0x00000000004058eb : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004042b8 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004085ee : add byte ptr [rax], al ; push rax ; ret
0x0000000000406fbe : add byte ptr [rax], al ; ret
0x00000000004085af : add byte ptr [rax], dl ; ret
0x00000000004085cb : add byte ptr [rbp + rax], al ; add byte ptr [rax], ah ; ret
0x00000000004058ec : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004042b9 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000402460 : add byte ptr [rcx + rax], ah ; movzx eax, al ; pop rbp ; ret
0x0000000000401678 : add byte ptr [rcx], al ; ret
0x0000000000404e60 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000401aa5 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000404548 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004058ea : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004042b7 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000405120 : add dword ptr [rdi], ecx ; mov dh, -0x3f ; pop rbp ; ret
0x0000000000402d16 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004027c1 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004026c1 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402462 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401674 : add eax, 0x208c26 ; add ebx, esi ; ret
0x000000000040163b : add eax, edx ; sar rax, 1 ; jne 0x40164c ; pop rbp ; ret
0x0000000000401679 : add ebx, esi ; ret
0x000000000040178b : add esp, 0x10 ; pop rbp ; ret
0x0000000000406adc : add esp, 0x130 ; pop rbp ; ret
0x00000000004042b4 : add esp, 0x138 ; pop rbx ; pop rbp ; ret
0x0000000000405bdc : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000402f44 : add esp, 0x1c0 ; pop rbp ; ret
0x0000000000401ebc : add esp, 0x20 ; pop rbp ; ret
0x000000000040186d : add esp, 0x30 ; pop rbp ; ret
0x0000000000402ca8 : add esp, 0x40 ; pop rbp ; ret
0x0000000000402362 : add esp, 0x50 ; pop rbp ; ret
0x00000000004033c3 : add esp, 0x70 ; pop rbp ; ret
0x000000000040446e : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000401e01 : add esp, 0x80 ; pop rbp ; ret
0x000000000040483d : add esp, 0x90 ; pop rbp ; ret
0x0000000000405a74 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040122e : add esp, 8 ; ret
0x000000000040163a : add rax, rdx ; sar rax, 1 ; jne 0x40164d ; pop rbp ; ret
0x000000000040178a : add rsp, 0x10 ; pop rbp ; ret
0x0000000000406adb : add rsp, 0x130 ; pop rbp ; ret
0x00000000004042b3 : add rsp, 0x138 ; pop rbx ; pop rbp ; ret
0x0000000000405bdb : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000402f43 : add rsp, 0x1c0 ; pop rbp ; ret
0x0000000000401ebb : add rsp, 0x20 ; pop rbp ; ret
0x000000000040186c : add rsp, 0x30 ; pop rbp ; ret
0x0000000000402ca7 : add rsp, 0x40 ; pop rbp ; ret
0x0000000000402361 : add rsp, 0x50 ; pop rbp ; ret
0x00000000004033c2 : add rsp, 0x70 ; pop rbp ; ret
0x000000000040446d : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000401e00 : add rsp, 0x80 ; pop rbp ; ret
0x000000000040483c : add rsp, 0x90 ; pop rbp ; ret
0x0000000000405a73 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040122d : add rsp, 8 ; ret
0x0000000000402461 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040347a : and byte ptr [rax + rax*2], dh ; jmp rcx
0x0000000000401677 : and byte ptr [rax], al ; add ebx, esi ; ret
0x000000000040511e : and cl, 1 ; movzx eax, cl ; pop rbp ; ret
0x0000000000404877 : and eax, 0x48fffffd ; add esp, 0x20 ; pop rbp ; ret
0x00000000004027df : and eax, 0x60a2c8 ; pop rbp ; ret
0x0000000000402803 : and eax, 0x60a2d0 ; pop rbp ; ret
0x0000000000405053 : call 0x4012e2
0x00000000004042e9 : call 0xffffffffe902cc39
0x00000000004042e8 : call 0xffffffffe902cc3a
0x0000000000406f99 : call qword ptr [r12 + rbx*8]
0x0000000000408273 : call qword ptr [rsi]
0x0000000000406f9a : call qword ptr [rsp + rbx*8]
0x000000000040169d : call rax
0x0000000000408513 : call rdx
0x0000000000406ada : clc ; add rsp, 0x130 ; pop rbp ; ret
0x0000000000405ddf : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404e71 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402360 : clc ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000405082 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x000000000040163f : clc ; jne 0x401648 ; pop rbp ; ret
0x0000000000403275 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000406eeb : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004050c8 : clc ; or rdx, rsi ; mov qword ptr [rax + rdi*8], rdx ; pop rbp ; ret
0x00000000004050cf : clc ; pop rbp ; ret
0x0000000000406196 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406139 : cld ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004062b4 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406ee8 : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000406193 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406136 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004062b1 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004027de : cmp al, 0x25 ; enter 0x60a2, 0 ; pop rbp ; ret
0x00000000004042b6 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004015fd : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401610 ; pop rbp ; ret
0x000000000040532a : cwde ; add rsp, 0x90 ; pop rbp ; ret
0x000000000040542c : cwde ; mov rcx, qword ptr [rax*8 + 0x407928] ; jmp rcx
0x0000000000403475 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; and byte ptr [rax + rax*2], dh ; jmp rcx
0x0000000000406a3f : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000040439b : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x00000000004027e0 : enter 0x60a2, 0 ; pop rbp ; ret
0x0000000000403cd3 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000406f9c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000401789 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401610 : hlt ; pop rbp ; mov edi, 0x60a248 ; jmp rax
0x0000000000405a30 : int 0x80
0x0000000000401603 : ja 0x40160a ; pop rbp ; ret
0x000000000040160f : je 0x40160d ; pop rbp ; mov edi, 0x60a248 ; jmp rax
0x000000000040270a : jge 0x4026fe ; call rax
0x000000000040275c : jge 0x402750 ; call rax
0x0000000000405051 : jge 0x405047 ; call 0x4012e4
0x000000000040144b : jmp 0x401247
0x00000000004028f8 : jmp 0xffffffff83892904
0x00000000004086b3 : jmp qword ptr [rax]
0x0000000000408813 : jmp qword ptr [rcx]
0x0000000000408593 : jmp qword ptr [rdx]
0x0000000000401617 : jmp rax
0x000000000040347e : jmp rcx
0x0000000000401657 : jmp rdx
0x0000000000401640 : jne 0x401647 ; pop rbp ; ret
0x00000000004033c5 : jo 0x403426 ; ret
0x0000000000404ad4 : jo 0x404b35 ; ret
0x0000000000404c0e : jo 0x404c6f ; ret
0x0000000000404470 : js 0x4044d0 ; pop rbp ; ret
0x000000000040511f : loope 0x405128 ; movzx eax, cl ; pop rbp ; ret
0x0000000000402a6b : loopne 0x402abb ; add esp, 0x20 ; pop rbp ; ret
0x0000000000402a6a : loopne 0x402abc ; add esp, 0x20 ; pop rbp ; ret
0x00000000004024da : mov al, 0 ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004049ab : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040483b : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000406b16 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000402801 : mov byte ptr [0x60a2d0], al ; pop rbp ; ret
0x0000000000402433 : mov byte ptr [rbp - 0x11], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401673 : mov byte ptr [rip + 0x208c26], 1 ; ret
0x000000000040504c : mov byte ptr [rsi + rdx], cl ; mov rdi, qword ptr [rbp - 0x10] ; call 0x4012e9
0x0000000000405122 : mov dh, -0x3f ; pop rbp ; ret
0x0000000000402d18 : mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004027c3 : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004026c3 : mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402464 : mov dh, -0x40 ; pop rbp ; ret
0x00000000004027dd : mov dword ptr [0x60a2c8], edi ; pop rbp ; ret
0x0000000000403276 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004050cd : mov dword ptr [rax + rdi*8], edx ; pop rbp ; ret
0x0000000000403184 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000403238 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000402a69 : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401869 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401787 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406ee9 : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004023e8 : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404e98 : mov dword ptr [rdi + 8], 0 ; pop rbp ; ret
0x000000000040446c : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000403138 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000405cfb : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401eb8 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403135 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004029af : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405f93 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004030ed : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402ca4 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040317e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000402705 : mov eax, dword ptr [rbp - 0x18] ; mov rdi, qword ptr [rbp - 0x10] ; call rax
0x000000000040323a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004033bf : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040446a : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004049a9 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000406194 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406137 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004062b2 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000405ddd : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404e6f : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040235e : mov eax, dword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000406eec : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040169b : mov ebp, esp ; call rax
0x0000000000401601 : mov ebp, esp ; ja 0x40160c ; pop rbp ; ret
0x0000000000403477 : mov ecx, dword ptr [rax*8 + 0x407420] ; jmp rcx
0x0000000000403757 : mov ecx, dword ptr [rax*8 + 0x407468] ; jmp rcx
0x000000000040542e : mov ecx, dword ptr [rax*8 + 0x407928] ; jmp rcx
0x0000000000403181 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401695 : mov edi, 0x609e20 ; mov rbp, rsp ; call rax
0x0000000000401612 : mov edi, 0x60a248 ; jmp rax
0x0000000000401652 : mov edi, 0x60a248 ; jmp rdx
0x0000000000405050 : mov edi, dword ptr [rbp - 0x10] ; call 0x4012e5
0x0000000000402709 : mov edi, dword ptr [rbp - 0x10] ; call rax
0x0000000000406f97 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000406f96 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000401650 : mov esi, eax ; mov edi, 0x60a248 ; jmp rdx
0x00000000004027dc : mov qword ptr [0x60a2c8], rdi ; pop rbp ; ret
0x00000000004050cc : mov qword ptr [rax + rdi*8], rdx ; pop rbp ; ret
0x00000000004023e7 : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404e97 : mov qword ptr [rdi + 8], 0 ; pop rbp ; ret
0x00000000004049aa : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040446b : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000405cfa : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401eb7 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403134 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004029ae : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405f92 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004030ec : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402ca3 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000402704 : mov rax, qword ptr [rbp - 0x18] ; mov rdi, qword ptr [rbp - 0x10] ; call rax
0x00000000004033be : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004049a8 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000405ddc : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404e6e : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040235d : mov rax, qword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040169a : mov rbp, rsp ; call rax
0x0000000000401600 : mov rbp, rsp ; ja 0x40160d ; pop rbp ; ret
0x0000000000403476 : mov rcx, qword ptr [rax*8 + 0x407420] ; jmp rcx
0x0000000000403756 : mov rcx, qword ptr [rax*8 + 0x407468] ; jmp rcx
0x000000000040542d : mov rcx, qword ptr [rax*8 + 0x407928] ; jmp rcx
0x000000000040504f : mov rdi, qword ptr [rbp - 0x10] ; call 0x4012e6
0x0000000000402708 : mov rdi, qword ptr [rbp - 0x10] ; call rax
0x000000000040164f : mov rsi, rax ; mov edi, 0x60a248 ; jmp rdx
0x0000000000401676 : mov word ptr [rax], fs ; add byte ptr [rcx], al ; ret
0x0000000000401675 : mov word ptr es:[rax], fs ; add byte ptr [rcx], al ; ret
0x000000000040245e : movabs byte ptr [0x5dc0b60f01240060], al ; ret
0x00000000004028f7 : movsd dword ptr [rdi], dword ptr [rsi] ; jmp 0xffffffff83892905
0x0000000000402d17 : movzx eax, al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004027c2 : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004026c2 : movzx eax, al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402463 : movzx eax, al ; pop rbp ; ret
0x0000000000405121 : movzx eax, cl ; pop rbp ; ret
0x0000000000406fb8 : nop dword ptr [rax + rax] ; ret
0x000000000040504d : or al, 0x16 ; mov rdi, qword ptr [rbp - 0x10] ; call 0x4012e8
0x0000000000403478 : or al, 0xffffffffffffffc5 ; and byte ptr [rax + rax*2], dh ; jmp rcx
0x0000000000403cce : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000403ccf : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000404b91 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004050ca : or edx, esi ; mov qword ptr [rax + rdi*8], rdx ; pop rbp ; ret
0x00000000004050c9 : or rdx, rsi ; mov qword ptr [rax + rdi*8], rdx ; pop rbp ; ret
0x0000000000402435 : out dx, eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406fac : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000406fae : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004058ee : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406fb0 : pop r14 ; pop r15 ; ret
0x00000000004058f0 : pop r15 ; pop rbp ; ret
0x0000000000406fb2 : pop r15 ; ret
0x0000000000401672 : pop rbp ; mov byte ptr [rip + 0x208c26], 1 ; ret
0x0000000000401611 : pop rbp ; mov edi, 0x60a248 ; jmp rax
0x000000000040164e : pop rbp ; mov rsi, rax ; mov edi, 0x60a248 ; jmp rdx
0x0000000000406fab : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000406faf : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401605 : pop rbp ; ret
0x00000000004058ed : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004042ba : pop rbx ; pop rbp ; ret
0x00000000004058f1 : pop rdi ; pop rbp ; ret
0x0000000000406fb3 : pop rdi ; ret
0x00000000004058ef : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000406fb1 : pop rsi ; pop r15 ; ret
0x0000000000406fad : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000402364 : push rax ; pop rbp ; ret
0x00000000004085f0 : push rax ; ret
0x0000000000403cd2 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000401694 : push rbp ; mov edi, 0x609e20 ; mov rbp, rsp ; call rax
0x00000000004066cd : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000040439e : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000040215d : push rcx ; sbb byte ptr [rcx], al ; ret 0x5189
0x0000000000401231 : ret
0x0000000000401452 : ret 0x208c
0x0000000000401242 : ret 0x208d
0x0000000000402160 : ret 0x5189
0x000000000040214e : ret 0x850f
0x00000000004053e9 : ret 0x8844
0x0000000000405e62 : ret 0x8948
0x0000000000403dfd : ret 0x89a5
0x0000000000401d4e : ret 0x8b48
0x0000000000401c00 : ret 0xb0
0x0000000000401635 : ret 0xc148
0x0000000000403ceb : ret 0xcfe8
0x0000000000404e63 : ret 0xd284
0x0000000000401aa8 : ret 0xe280
0x0000000000404ee5 : ret 0xe5e8
0x00000000004042ec : ret 0xee8
0x0000000000405055 : ret 0xffff
0x000000000040460e : ret 1
0x00000000004043a2 : ret 8
0x000000000040511d : rol dword ptr [rax - 0x49f0fe1f], -0x3f ; pop rbp ; ret
0x0000000000405a2b : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x00000000004033c0 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x40342b ; ret
0x000000000040163c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40164b ; pop rbp ; ret
0x0000000000405a2c : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x00000000004033c1 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x40342a ; ret
0x00000000004066ce : ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000040439f : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000040163e : sar eax, 1 ; jne 0x401649 ; pop rbp ; ret
0x000000000040163d : sar rax, 1 ; jne 0x40164a ; pop rbp ; ret
0x000000000040215e : sbb byte ptr [rcx], al ; ret 0x5189
0x0000000000406b18 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000406fed : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000406fec : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000406fba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040511c : xchg eax, ebp ; rol dword ptr [rax - 0x49f0fe1f], -0x3f ; pop rbp ; ret
0x0000000000404e62 : xchg eax, esp ; ret 0xd284
0x0000000000401aa7 : xchg eax, esp ; ret 0xe280
0x0000000000406ade : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000403236 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
