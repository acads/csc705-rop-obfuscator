0x000000000040c04d : adc byte ptr [rcx + 0x41], 0 ; jmp rcx
0x0000000000404324 : adc dword ptr [rax + 1], ecx ; ret 0x8948
0x0000000000412843 : adc dword ptr [rax - 0x7f], ecx ; ret 1
0x000000000040570f : adc eax, 0x48ffffff ; add esp, 0x60 ; pop rbp ; ret
0x00000000004089d9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000415d51 : add al, -1 ; jmp qword ptr [rdx]
0x0000000000415d4d : add al, 0 ; add al, dl ; add al, -1 ; jmp qword ptr [rdx]
0x0000000000406a12 : add al, 0x25 ; cmp byte ptr [rcx], dh ; pop rbp ; ret
0x0000000000406428 : add al, 0x25 ; ret
0x00000000004122e4 : add al, byte ptr [rax] ; add byte ptr [rcx - 0xdf43], al ; call qword ptr [rax]
0x000000000040542f : add al, ch ; pop rbx ; ret 0xffff
0x0000000000404628 : add al, ch ; ret 0xffd1
0x0000000000415d4f : add al, dl ; add al, -1 ; jmp qword ptr [rdx]
0x0000000000412b7f : add bl, dh ; ret
0x0000000000406425 : add byte ptr [rax - 0x73], cl ; add al, 0x25 ; ret
0x0000000000403d67 : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x000000000040fdef : add byte ptr [rax - 0x75], cl ; clc ; mov rsp, rbp ; pop rbp ; ret
0x00000000004041db : add byte ptr [rax - 0x75], cl ; jge 0x4041cd ; call rax
0x00000000004044db : add byte ptr [rax - 0x75], cl ; jge 0x4044dd ; call rax
0x0000000000410355 : add byte ptr [rax - 0x75], cl ; loopne 0x4103be ; ret
0x0000000000411079 : add byte ptr [rax - 0x75], cl ; push rbp ; call 0x210391d1
0x0000000000406199 : add byte ptr [rax - 0x75], cl ; push rbp ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4810
0x00000000004099b8 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000411996 : add byte ptr [rax - 0x77], cl ; fsubr st(1) ; ret 0xffff
0x0000000000403cdf : add byte ptr [rax - 0x77], cl ; iretd ; call rax
0x00000000004056b9 : add byte ptr [rax - 0x77], cl ; mov r8b, -0x17 ; ret 0xffff
0x000000000040d7d5 : add byte ptr [rax - 0x77], cl ; ret 0x2e8
0x000000000040d75c : add byte ptr [rax - 0x77], cl ; ret 0x7be8
0x0000000000402360 : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x0000000000405c6a : add byte ptr [rax - 0x77], cl ; test al, -0x17 ; ret 0xffff
0x00000000004160af : add byte ptr [rax], ah ; sub bh, bh ; call rdx
0x0000000000404626 : add byte ptr [rax], al ; add al, ch ; ret 0xffd1
0x0000000000412b7d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000406423 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add al, 0x25 ; ret
0x0000000000403d65 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x0000000000410353 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; loopne 0x4103c0 ; ret
0x0000000000411077 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbp ; call 0x210391d3
0x0000000000406197 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbp ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4810
0x0000000000411994 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fsubr st(1) ; ret 0xffff
0x0000000000403cdd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; iretd ; call rax
0x00000000004056b7 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; mov r8b, -0x17 ; ret 0xffff
0x000000000040285b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x0000000000405c68 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; test al, -0x17 ; ret 0xffff
0x0000000000412b7b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004005c0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004005c2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040abf9 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000410352 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x20] ; pop rbp ; ret
0x00000000004005c4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000415124 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x40e4
0x0000000000406d03 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x0000000000406e16 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000412475 : add byte ptr [rax], al ; add byte ptr [rcx - 0xdf43], al ; call qword ptr [rax]
0x000000000040f5e7 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x0000000000404dad : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004029e0 : add byte ptr [rax], al ; add cl, ch ; ret 0
0x000000000040899a : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408740 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040464f : add byte ptr [rax], al ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000401533 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000401749 : add byte ptr [rax], al ; jmp 0x401549
0x000000000041049f : add byte ptr [rax], al ; mov dword ptr [rbp - 4], eax ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040b8c1 : add byte ptr [rax], al ; mov dword ptr [rdi], eax ; pop rbp ; ret
0x000000000040abfb : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000407582 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000410354 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x20] ; pop rbp ; ret
0x0000000000403cde : add byte ptr [rax], al ; mov rdi, rcx ; call rax
0x0000000000415d4a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add al, 0 ; add al, dl ; add al, -1 ; jmp qword ptr [rdx]
0x0000000000415e4e : add byte ptr [rax], al ; nop ; or edi, edi ; call qword ptr [rsi]
0x00000000004039a7 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040987b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000408708 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004005c6 : add byte ptr [rax], al ; ret
0x0000000000415126 : add byte ptr [rax], al ; ret 0x40e4
0x0000000000415d4e : add byte ptr [rax], al ; rol byte ptr [rdi + rdi*8], 1 ; jmp qword ptr [rdx]
0x00000000004159af : add byte ptr [rax], dl ; fsin ; call qword ptr [rax]
0x0000000000400283 : add byte ptr [rbp + 0x22], ah ; jo 0x400257 ; nop ; push rbp ; ret 0x7fe3
0x000000000040987c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000408709 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040235d : add byte ptr [rbx + 0x61], dh ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x00000000004030af : add byte ptr [rbx - 0x11f4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004046b8 : add byte ptr [rbx - 0x76b70b8b], cl ; ret 0xb0
0x00000000004104a0 : add byte ptr [rcx + 0x458bfc45], cl ; cld ; pop rbp ; ret
0x0000000000405281 : add byte ptr [rcx + 0x76e8d44d], cl ; ret
0x0000000000406d05 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x0000000000406e18 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x00000000004122e6 : add byte ptr [rcx - 0xdf43], al ; call qword ptr [rax]
0x0000000000401a48 : add byte ptr [rcx], al ; ret
0x000000000040f5e9 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x0000000000404daf : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000406e41 : add byte ptr [rsi + 0xf], ah ; enter 0xf41, -0x69 ; ret 0x8445
0x00000000004029e2 : add cl, ch ; ret 0
0x0000000000408998 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403cdc : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rcx ; call rax
0x00000000004159ad : add dword ptr [rax], eax ; add byte ptr [rax], dl ; fsin ; call qword ptr [rax]
0x000000000040987a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000408707 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004123a0 : add dword ptr [rax], eax ; add byte ptr [rcx - 0xdf43], al ; call qword ptr [rax]
0x0000000000403724 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040340d : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040fe44 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040439a : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000404236 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004055e0 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004029dc : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0
0x0000000000401a44 : add eax, 0x2158ce ; add ebx, esi ; ret
0x000000000040c023 : add eax, 0x8301148b ; ret 0x89ee
0x00000000004029df : add eax, 0xe9000000 ; ret 0
0x0000000000401a0b : add eax, edx ; sar rax, 1 ; jne 0x401a1c ; pop rbp ; ret
0x0000000000401a49 : add ebx, esi ; ret
0x0000000000401ccb : add esp, 0x10 ; pop rbp ; ret
0x000000000040b89c : add esp, 0x130 ; pop rbp ; ret
0x0000000000408704 : add esp, 0x138 ; pop rbx ; pop rbp ; ret
0x0000000000405502 : add esp, 0x190 ; pop rbp ; ret
0x0000000000409b6c : add esp, 0x1a0 ; pop rbp ; ret
0x000000000041101e : add esp, 0x1b8 ; pop rbp ; ret
0x0000000000412afb : add esp, 0x1c0 ; pop rbp ; ret
0x0000000000403412 : add esp, 0x20 ; pop rbp ; ret
0x00000000004039a3 : add esp, 0x20c0 ; pop rbp ; ret
0x0000000000401ddd : add esp, 0x30 ; pop rbp ; ret
0x000000000040439f : add esp, 0x40 ; pop rbp ; ret
0x000000000040423b : add esp, 0x50 ; pop rbp ; ret
0x0000000000404652 : add esp, 0x60 ; pop rbp ; ret
0x00000000004032ba : add esp, 0x70 ; pop rbp ; ret
0x00000000004088be : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040651d : add esp, 0x80 ; pop rbp ; ret
0x000000000040b0c3 : add esp, 0x820 ; pop rbp ; ret
0x0000000000403e7d : add esp, 0x90 ; pop rbp ; ret
0x00000000004060a5 : add esp, 0xa0 ; pop rbp ; ret
0x0000000000406214 : add esp, 0xe0 ; pop rbp ; ret
0x0000000000401536 : add esp, 8 ; ret
0x000000000040542e : add r8b, bpl ; pop rbx ; ret 0xffff
0x0000000000401a0a : add rax, rdx ; sar rax, 1 ; jne 0x401a1d ; pop rbp ; ret
0x0000000000401cca : add rsp, 0x10 ; pop rbp ; ret
0x000000000040b89b : add rsp, 0x130 ; pop rbp ; ret
0x0000000000408703 : add rsp, 0x138 ; pop rbx ; pop rbp ; ret
0x0000000000405501 : add rsp, 0x190 ; pop rbp ; ret
0x0000000000409b6b : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000041101d : add rsp, 0x1b8 ; pop rbp ; ret
0x0000000000412afa : add rsp, 0x1c0 ; pop rbp ; ret
0x0000000000403411 : add rsp, 0x20 ; pop rbp ; ret
0x00000000004039a2 : add rsp, 0x20c0 ; pop rbp ; ret
0x0000000000401ddc : add rsp, 0x30 ; pop rbp ; ret
0x000000000040439e : add rsp, 0x40 ; pop rbp ; ret
0x000000000040423a : add rsp, 0x50 ; pop rbp ; ret
0x0000000000404651 : add rsp, 0x60 ; pop rbp ; ret
0x00000000004032b9 : add rsp, 0x70 ; pop rbp ; ret
0x00000000004088bd : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040651c : add rsp, 0x80 ; pop rbp ; ret
0x000000000040b0c2 : add rsp, 0x820 ; pop rbp ; ret
0x0000000000403e7c : add rsp, 0x90 ; pop rbp ; ret
0x00000000004060a4 : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000406213 : add rsp, 0xe0 ; pop rbp ; ret
0x0000000000401535 : add rsp, 8 ; ret
0x00000000004055df : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040457d : and byte ptr [r9 + rcx*4 - 0x3f], cl ; mov r8d, r10d ; call rax
0x000000000040b8bf : and byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], eax ; pop rbp ; ret
0x000000000040b0c5 : and byte ptr [rax], cl ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040457e : and byte ptr [rcx + rcx*4 - 0x3f], cl ; mov r8d, r10d ; call rax
0x0000000000400285 : and dh, byte ptr [rax - 0x38] ; nop ; push rbp ; ret 0x7fe3
0x0000000000400284 : and dh, byte ptr gs:[rax - 0x38] ; nop ; push rbp ; ret 0x7fe3
0x0000000000401a47 : and dword ptr [rax], eax ; add ebx, esi ; ret
0x000000000040542b : and eax, 0x4143b4 ; call 0x401697
0x0000000000408cc7 : and eax, 0x48fffffd ; add esp, 0x20 ; pop rbp ; ret
0x0000000000405b9f : and eax, 0x48ffffff ; add esp, 0x60 ; pop rbp ; ret
0x00000000004041d7 : and eax, 0x6173b0 ; mov rdi, qword ptr [rbp - 0x18] ; call rax
0x00000000004044d7 : and eax, 0x6173b0 ; mov rdi, qword ptr [rbp - 8] ; call rax
0x00000000004069ef : and eax, 0x617430 ; pop rbp ; ret
0x0000000000406a13 : and eax, 0x617438 ; pop rbp ; ret
0x000000000041107d : call 0x210391cd
0x0000000000405430 : call 0x401692
0x0000000000412840 : call 0x4852b393
0x000000000041283f : call 0x4852b394
0x0000000000404acf : call 0x4902d41f
0x0000000000404ace : call 0x4902d420
0x0000000000408739 : call 0xffffffffe9031089
0x0000000000408738 : call 0xffffffffe903108a
0x0000000000403d28 : call 0xffffffffff407e5e
0x0000000000412b59 : call qword ptr [r12 + rbx*8]
0x0000000000412230 : call qword ptr [rax]
0x000000000041250c : call qword ptr [rbx]
0x000000000041246e : call qword ptr [rcx]
0x0000000000416853 : call qword ptr [rdi]
0x000000000040c24e : call qword ptr [rdx]
0x00000000004124a3 : call qword ptr [rsi]
0x0000000000412b5a : call qword ptr [rsp + rbx*8]
0x0000000000401a6d : call rax
0x0000000000416b73 : call rbx
0x00000000004160b3 : call rdx
0x0000000000415bf3 : call rsi
0x000000000040b89a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x0000000000409d6f : clc ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004069d9 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406934 : clc ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040668b : clc ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004044df : clc ; call rax
0x000000000040af78 : clc ; idiv edi ; call rax
0x0000000000401a0f : clc ; jne 0x401a18 ; pop rbp ; ret
0x00000000004032ca : clc ; mov byte ptr [rbp - 9], al ; pop rbp ; ret
0x00000000004076c5 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004102ab : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040fdf3 : clc ; mov rsp, rbp ; pop rbp ; ret
0x00000000004049fd : clc ; pop rbp ; ret
0x000000000040abf8 : cld ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000401cf7 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041101c : cld ; add rsp, 0x1b8 ; pop rbp ; ret
0x0000000000412af9 : cld ; add rsp, 0x1c0 ; pop rbp ; ret
0x000000000040ad49 : cld ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040aec4 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040b0c1 : cld ; add rsp, 0x820 ; pop rbp ; ret
0x000000000040ab8d : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x00000000004102a8 : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040ada3 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040ad46 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040aec1 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004104a3 : cld ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040abff : cld ; pop rbp ; ret
0x000000000040542a : cmp al, 0x25 ; mov ah, 0x43 ; add r8b, bpl ; pop rbx ; ret 0xffff
0x0000000000403d6a : cmp al, 0x25 ; ret
0x00000000004069ee : cmp al, 0x25 ; xor byte ptr [rcx], dh ; pop rbp ; ret
0x0000000000408706 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000406a14 : cmp byte ptr [rcx], dh ; pop rbp ; ret
0x00000000004019cd : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4019e0 ; pop rbp ; ret
0x0000000000403d64 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x00000000004093bc : cwde ; mov rcx, qword ptr [rax*8 + 0x414b78] ; jmp rcx
0x00000000004049f9 : dec dword ptr [rax - 0x75] ; clc ; pop rbp ; ret
0x000000000040c048 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; adc byte ptr [rcx + 0x41], 0 ; jmp rcx
0x000000000040ccdc : dec dword ptr [rax - 0x77] ; ret 0x8148
0x00000000004030b5 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040b7ff : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000040a3b9 : dec dword ptr [rbx + 0x758be07d] ; fmul qword ptr [rax - 0x77] ; ret 0xb0
0x0000000000411fa2 : dec dword ptr [rcx] ; ret 0x9589
0x00000000004087eb : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000406e46 : enter 0xf41, -0x69 ; ret 0x8445
0x00000000004072ee : fadd dword ptr [rcx + 0xf] ; xchg eax, edi ; ret 0x8445
0x0000000000408123 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040a3bf : fmul qword ptr [rax - 0x77] ; ret 0xb0
0x0000000000412b5c : fmul qword ptr [rax - 0x7d] ; ret
0x00000000004159b1 : fsin ; call qword ptr [rax]
0x000000000041199a : fsubr st(1) ; ret 0xffff
0x0000000000401cc9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004019e0 : hlt ; pop rbp ; mov edi, 0x6172c0 ; jmp rax
0x000000000040af79 : idiv edi ; call rax
0x000000000040a3cc : in al, 0x48 ; add esp, 0x30 ; pop rbp ; ret
0x0000000000403574 : in al, dx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040fdf6 : in al, dx ; pop rbp ; ret
0x0000000000403053 : int 0x80
0x0000000000403ce2 : iretd ; call rax
0x00000000004019d3 : ja 0x4019da ; pop rbp ; ret
0x000000000040235e : jae 0x4023c6 ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000040279d : jae 0x402805 ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x00000000004041d9 : jae 0x404243 ; add byte ptr [rax - 0x75], cl ; jge 0x4041cf ; call rax
0x00000000004044d9 : jae 0x404543 ; add byte ptr [rax - 0x75], cl ; jge 0x4044df ; call rax
0x000000000040527f : jae 0x4052ea ; add byte ptr [rcx + 0x76e8d44d], cl ; ret
0x000000000040464d : jb 0x4046b9 ; add byte ptr [rax], al ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004019df : je 0x4019dd ; pop rbp ; mov edi, 0x6172c0 ; jmp rax
0x00000000004046b6 : je 0x404721 ; add byte ptr [rbx - 0x76b70b8b], cl ; ret 0xb0
0x00000000004032c9 : jge 0x4032c9 ; mov byte ptr [rbp - 9], al ; pop rbp ; ret
0x00000000004041de : jge 0x4041ca ; call rax
0x00000000004044de : jge 0x4044da ; call rax
0x000000000040174b : jmp 0x401547
0x0000000000403d63 : jmp 0x403e18
0x0000000000406421 : jmp 0x4064eb
0x000000000040d7ff : jmp 0xffffffff8a036117
0x0000000000416253 : jmp qword ptr [rax]
0x0000000000415d53 : jmp qword ptr [rdx]
0x00000000004019e7 : jmp rax
0x0000000000402065 : jmp rcx
0x0000000000401a27 : jmp rdx
0x0000000000401a10 : jne 0x401a17 ; pop rbp ; ret
0x0000000000400286 : jo 0x400254 ; nop ; push rbp ; ret 0x7fe3
0x00000000004032bc : jo 0x40331d ; ret
0x0000000000405ccb : jo 0x405d2c ; ret
0x0000000000405deb : jo 0x405e4c ; ret
0x0000000000407815 : jo 0x407876 ; ret
0x0000000000408f24 : jo 0x408f85 ; ret
0x000000000040905e : jo 0x4090bf ; ret
0x00000000004088c0 : js 0x408920 ; pop rbp ; ret
0x0000000000405429 : lea edi, dword ptr [0x4143b4] ; call 0x401699
0x0000000000406216 : loopne 0x40621d ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040ab91 : loopne 0x40ab98 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000410359 : loopne 0x4103ba ; ret
0x0000000000410358 : loopne 0x4103bb ; ret
0x000000000040542c : mov ah, 0x43 ; add r8b, bpl ; pop rbx ; ret 0xffff
0x0000000000406ec5 : mov ah, 0x48 ; add esp, 0x60 ; pop rbp ; ret
0x00000000004056bd : mov al, -0x17 ; ret 0xffff
0x000000000040605c : mov al, -0x77 ; ret 0xc189
0x000000000040689d : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000408c8b : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x00000000004055dc : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040fed6 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000406a11 : mov byte ptr [0x617438], al ; pop rbp ; ret
0x00000000004032cb : mov byte ptr [rbp - 9], al ; pop rbp ; ret
0x0000000000401a43 : mov byte ptr [rip + 0x2158ce], 1 ; ret
0x0000000000403726 : mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040340f : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040fe46 : mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040439c : mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000404238 : mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004055e2 : mov dh, -0x40 ; pop rbp ; ret
0x00000000004069ed : mov dword ptr [0x617430], edi ; pop rbp ; ret
0x00000000004076c6 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004075d4 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000407688 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000403572 : mov dword ptr [rbp - 0x14], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041041c : mov dword ptr [rbp - 0x18], eax ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000401dd9 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040488f : mov dword ptr [rbp - 0x34], eax ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040689b : mov dword ptr [rbp - 0x50], eax ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004032b6 : mov dword ptr [rbp - 0x64], eax ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000401cc7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401cf5 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004104a1 : mov dword ptr [rbp - 4], eax ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004102a9 : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004032c8 : mov dword ptr [rbp - 8], edi ; mov byte ptr [rbp - 9], al ; pop rbp ; ret
0x000000000040773e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b8c3 : mov dword ptr [rdi], eax ; pop rbp ; ret
0x0000000000411020 : mov eax, 0x5d000001 ; ret
0x00000000004088bc : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000407588 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000409c8b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406c3c : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407585 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000406bbf : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040a1d6 : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000409f23 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040753d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004075ce : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000410420 : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040a3ca : mov eax, dword ptr [rbp - 0x1c] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000410357 : mov eax, dword ptr [rbp - 0x20] ; pop rbp ; ret
0x000000000040768a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000407156 : mov eax, dword ptr [rbp - 0x3c] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040780f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004088ba : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000406ec3 : mov eax, dword ptr [rbp - 0x4c] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000408df9 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000403a1d : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040ada4 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040ad47 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040aec2 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040abfd : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000409d6d : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004069d7 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406932 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000406689 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040fdf1 : mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004049fb : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004049ad : mov eax, edx ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404583 : mov eax, edx ; call rax
0x0000000000401a6b : mov ebp, esp ; call rax
0x00000000004019d1 : mov ebp, esp ; ja 0x4019dc ; pop rbp ; ret
0x000000000040205e : mov ecx, dword ptr [rax*8 + 0x412be0] ; jmp rcx
0x0000000000403d25 : mov ecx, dword ptr [rax*8 + 0x412de8] ; jmp rcx
0x0000000000404a8a : mov ecx, dword ptr [rax*8 + 0x412e20] ; jmp rcx
0x000000000040503d : mov ecx, dword ptr [rax*8 + 0x412e50] ; jmp rcx
0x00000000004063ea : mov ecx, dword ptr [rax*8 + 0x412e78] ; jmp rcx
0x00000000004078c7 : mov ecx, dword ptr [rax*8 + 0x414670] ; jmp rcx
0x0000000000407ba7 : mov ecx, dword ptr [rax*8 + 0x4146b8] ; jmp rcx
0x00000000004093be : mov ecx, dword ptr [rax*8 + 0x414b78] ; jmp rcx
0x000000000040a9cd : mov ecx, dword ptr [rax*8 + 0x414f70] ; jmp rcx
0x000000000040a94d : mov ecx, dword ptr [rax*8 + 0x414fd0] ; jmp rcx
0x000000000040dc75 : mov ecx, dword ptr [rax*8 + 0x4150f8] ; jmp rcx
0x000000000040c04a : mov ecx, dword ptr [rax*8 + 0x415180] ; jmp rcx
0x0000000000410507 : mov ecx, dword ptr [rax*8 + 0x4151b0] ; jmp rcx
0x0000000000412222 : mov ecx, dword ptr [rax*8 + 0x415288] ; jmp rcx
0x00000000004075d1 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040457c : mov ecx, dword ptr [rcx + 0x20] ; mov rcx, r8 ; mov r8d, r10d ; call rax
0x0000000000404580 : mov ecx, eax ; mov r8d, r10d ; call rax
0x0000000000401a65 : mov edi, 0x616e20 ; mov rbp, rsp ; call rax
0x00000000004019e2 : mov edi, 0x6172c0 ; jmp rax
0x0000000000401a22 : mov edi, 0x6172c0 ; jmp rdx
0x00000000004041dd : mov edi, dword ptr [rbp - 0x18] ; call rax
0x00000000004044dd : mov edi, dword ptr [rbp - 8] ; call rax
0x0000000000403ce1 : mov edi, ecx ; call rax
0x0000000000412b57 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000412b56 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000401a20 : mov esi, eax ; mov edi, 0x6172c0 ; jmp rdx
0x000000000040fdf5 : mov esp, ebp ; pop rbp ; ret
0x00000000004069ec : mov qword ptr [0x617430], rdi ; pop rbp ; ret
0x000000000041041b : mov qword ptr [rbp - 0x18], rax ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004032c7 : mov qword ptr [rbp - 8], rdi ; mov byte ptr [rbp - 9], al ; pop rbp ; ret
0x000000000040773d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406ec4 : mov r12b, 0x48 ; add esp, 0x60 ; pop rbp ; ret
0x00000000004056bc : mov r8b, -0x17 ; ret 0xffff
0x000000000040605b : mov r8b, -0x77 ; ret 0xc189
0x000000000040689c : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004088bb : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000404582 : mov r8d, r10d ; call rax
0x0000000000409c8a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406c3b : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407584 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000406bbe : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000409f22 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040753c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041041f : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000410356 : mov rax, qword ptr [rbp - 0x20] ; pop rbp ; ret
0x000000000040780e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000408df8 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000409d6c : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004069d6 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406931 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000406688 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040fdf0 : mov rax, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004049fa : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004049ac : mov rax, rdx ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401a6a : mov rbp, rsp ; call rax
0x00000000004019d0 : mov rbp, rsp ; ja 0x4019dd ; pop rbp ; ret
0x000000000040205d : mov rcx, qword ptr [rax*8 + 0x412be0] ; jmp rcx
0x0000000000403d24 : mov rcx, qword ptr [rax*8 + 0x412de8] ; jmp rcx
0x0000000000404a89 : mov rcx, qword ptr [rax*8 + 0x412e20] ; jmp rcx
0x000000000040503c : mov rcx, qword ptr [rax*8 + 0x412e50] ; jmp rcx
0x00000000004063e9 : mov rcx, qword ptr [rax*8 + 0x412e78] ; jmp rcx
0x00000000004078c6 : mov rcx, qword ptr [rax*8 + 0x414670] ; jmp rcx
0x0000000000407ba6 : mov rcx, qword ptr [rax*8 + 0x4146b8] ; jmp rcx
0x00000000004093bd : mov rcx, qword ptr [rax*8 + 0x414b78] ; jmp rcx
0x000000000040a9cc : mov rcx, qword ptr [rax*8 + 0x414f70] ; jmp rcx
0x000000000040a94c : mov rcx, qword ptr [rax*8 + 0x414fd0] ; jmp rcx
0x000000000040dc74 : mov rcx, qword ptr [rax*8 + 0x4150f8] ; jmp rcx
0x000000000040c049 : mov rcx, qword ptr [rax*8 + 0x415180] ; jmp rcx
0x0000000000410506 : mov rcx, qword ptr [rax*8 + 0x4151b0] ; jmp rcx
0x0000000000412221 : mov rcx, qword ptr [rax*8 + 0x415288] ; jmp rcx
0x000000000040457f : mov rcx, r8 ; mov r8d, r10d ; call rax
0x00000000004041dc : mov rdi, qword ptr [rbp - 0x18] ; call rax
0x00000000004044dc : mov rdi, qword ptr [rbp - 8] ; call rax
0x0000000000403ce0 : mov rdi, rcx ; call rax
0x0000000000401a1f : mov rsi, rax ; mov edi, 0x6172c0 ; jmp rdx
0x000000000040fdf4 : mov rsp, rbp ; pop rbp ; ret
0x0000000000403d23 : movabs al, byte ptr [0x412de8c50c8b48] ; jmp rcx
0x00000000004063e8 : movabs al, byte ptr [0x412e78c50c8b48] ; jmp rcx
0x0000000000415d4c : movsb byte ptr [rdi], byte ptr [rsi] ; add al, 0 ; add al, dl ; add al, -1 ; jmp qword ptr [rdx]
0x000000000041239f : movsd dword ptr [rdi], dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xdf43], al ; call qword ptr [rax]
0x000000000040fe9a : movsx eax, cl ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403725 : movzx eax, al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040340e : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040fe45 : movzx eax, al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040439b : movzx eax, al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000404237 : movzx eax, al ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004055e1 : movzx eax, al ; pop rbp ; ret
0x0000000000415e50 : nop ; or edi, edi ; call qword ptr [rsi]
0x0000000000400288 : nop ; push rbp ; ret 0x7fe3
0x0000000000412b78 : nop dword ptr [rax + rax] ; ret
0x000000000040235b : or al, 0x25 ; add byte ptr [rbx + 0x61], dh ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000040c04b : or al, 0xffffffffffffffc5 ; adc byte ptr [rcx + 0x41], 0 ; jmp rcx
0x0000000000403d26 : or al, 0xffffffffffffffc5 ; call 0xffffffffff407e60
0x000000000040811e : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040811f : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x00000000004160ad : or byte ptr [rax], al ; add byte ptr [rax], ah ; sub bh, bh ; call rdx
0x00000000004021bb : or dword ptr [rax - 0x77], ecx ; ret 0xb0
0x000000000040b8be : or eax, 0x20 ; mov dword ptr [rdi], eax ; pop rbp ; ret
0x0000000000408fe1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000415e51 : or edi, edi ; call qword ptr [rsi]
0x0000000000404021 : out -0x17, eax ; ret
0x0000000000412b6c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000412b6e : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040987e : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000412b70 : pop r14 ; pop r15 ; ret
0x0000000000409880 : pop r15 ; pop rbp ; ret
0x0000000000412b72 : pop r15 ; ret
0x0000000000401a46 : pop rax ; and dword ptr [rax], eax ; add ebx, esi ; ret
0x0000000000401a42 : pop rbp ; mov byte ptr [rip + 0x2158ce], 1 ; ret
0x00000000004019e1 : pop rbp ; mov edi, 0x6172c0 ; jmp rax
0x0000000000401a1e : pop rbp ; mov rsi, rax ; mov edi, 0x6172c0 ; jmp rdx
0x0000000000412b6b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000412b6f : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004019d5 : pop rbp ; ret
0x000000000040987d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040870a : pop rbx ; pop rbp ; ret
0x0000000000405431 : pop rbx ; ret 0xffff
0x0000000000409881 : pop rdi ; pop rbp ; ret
0x0000000000412b73 : pop rdi ; ret
0x000000000040987f : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000412b71 : pop rsi ; pop r15 ; ret
0x0000000000412b6d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040527e : push rax ; jae 0x4052eb ; add byte ptr [rcx + 0x76e8d44d], cl ; ret
0x000000000040423d : push rax ; pop rbp ; ret
0x0000000000400282 : push rbp ; add byte ptr [rbp + 0x22], ah ; jo 0x400258 ; nop ; push rbp ; ret 0x7fe3
0x0000000000400281 : push rbp ; add byte ptr [rbp + 0x22], ah ; jo 0x400259 ; nop ; push rbp ; ret 0x7fe3
0x000000000041107c : push rbp ; call 0x210391ce
0x0000000000408122 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000401a64 : push rbp ; mov edi, 0x616e20 ; mov rbp, rsp ; call rax
0x0000000000400289 : push rbp ; ret 0x7fe3
0x0000000000406705 : push rbp ; ror byte ptr [rax - 0x77], 1 ; ret 0x31e8
0x000000000040619c : push rbp ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4810
0x000000000040b48d : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x00000000004087ee : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x00000000004032b8 : pushfq ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040737a : pushfq ; add rsp, 0x90 ; pop rbp ; ret
0x00000000004005c8 : ret
0x00000000004029e4 : ret 0
0x0000000000410a1b : ret 0x10
0x0000000000411080 : ret 0x20
0x0000000000401952 : ret 0x2158
0x0000000000401752 : ret 0x2159
0x0000000000401542 : ret 0x215a
0x000000000040b902 : ret 0x28e8
0x000000000040d7d8 : ret 0x2e8
0x00000000004031de : ret 0x30
0x0000000000406709 : ret 0x31e8
0x0000000000415128 : ret 0x40e4
0x00000000004061a0 : ret 0x4810
0x00000000004023f0 : ret 0x48b8
0x0000000000403a06 : ret 0x5589
0x000000000040cebe : ret 0x58
0x000000000040d75f : ret 0x7be8
0x000000000040028a : ret 0x7fe3
0x0000000000406d09 : ret 0x8041
0x000000000040318d : ret 0x8148
0x0000000000406e1c : ret 0x8445
0x000000000040d802 : ret 0x8589
0x000000000040559a : ret 0x860f
0x0000000000409379 : ret 0x8844
0x0000000000404327 : ret 0x8948
0x000000000040824d : ret 0x89a5
0x000000000040c028 : ret 0x89ee
0x0000000000402e5d : ret 0x8b48
0x00000000004061bf : ret 0x8d89
0x000000000040813b : ret 0x8fe8
0x000000000040f5ec : ret 0x9588
0x0000000000411fa4 : ret 0x9589
0x00000000004021be : ret 0xb0
0x0000000000401a05 : ret 0xc148
0x0000000000405efb : ret 0xc189
0x0000000000402a7e : ret 0xc8b
0x0000000000404db2 : ret 0xd284
0x000000000040873c : ret 0xee8
0x0000000000404150 : ret 0xf748
0x000000000040305b : ret 0xfa81
0x0000000000404ad2 : ret 0xff48
0x000000000040462a : ret 0xffd1
0x0000000000403190 : ret 0xffff
0x0000000000408a5e : ret 1
0x0000000000402b4b : ret 2
0x00000000004087f2 : ret 8
0x0000000000415d50 : rol byte ptr [rdi + rdi*8], 1 ; jmp qword ptr [rdx]
0x0000000000404581 : rol dword ptr [rbp - 0x77], -0x30 ; call rax
0x00000000004099bb : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000407810 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x40787b ; ret
0x0000000000401a0c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401a1b ; pop rbp ; ret
0x00000000004099bc : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000406706 : ror byte ptr [rax - 0x77], 1 ; ret 0x31e8
0x0000000000407811 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x40787a ; ret
0x000000000040439d : ror byte ptr [rax - 0x7d], -0x3c ; pop rbp ; ret
0x0000000000404239 : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x000000000040619d : ror byte ptr [rax - 0x7d], 1 ; ret 0x4810
0x000000000040b48e : ror byte ptr [rax - 0x7f], 1 ; ret 1
0x00000000004087ef : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x00000000004019e3 : sal byte ptr [rdx + 0x61], 0 ; jmp rax
0x0000000000401a23 : sal byte ptr [rdx + 0x61], 0 ; jmp rdx
0x00000000004019de : sal byte ptr [rsp + rsi*8 + 0x5d], -0x41 ; sal byte ptr [rdx + 0x61], 0 ; jmp rax
0x0000000000401a0e : sar eax, 1 ; jne 0x401a19 ; pop rbp ; ret
0x0000000000401a0d : sar rax, 1 ; jne 0x401a1a ; pop rbp ; ret
0x0000000000403059 : shl dword ptr [rcx], 1 ; ret 0xfa81
0x000000000040fed8 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004160b1 : sub bh, bh ; call rdx
0x0000000000402062 : sub eax, dword ptr [rcx] ; jmp rcx
0x0000000000403cda : sub ecx, 1 ; mov rdi, rcx ; call rax
0x0000000000416131 : sub edi, edi ; jmp qword ptr [rdx]
0x0000000000412bc1 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000412bc0 : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000405c6e : test al, -0x17 ; ret 0xffff
0x0000000000412b7a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004029de : test dword ptr [rip - 0x17000000], eax ; ret 0
0x000000000040af77 : test edi, eax ; idiv edi ; call rax
0x00000000004063ec : vucomiss xmm8, dword ptr [rcx] ; jmp rcx
0x0000000000406d08 : xchg eax, ebp ; ret 0x8041
0x0000000000406e1b : xchg eax, ebp ; ret 0x8445
0x0000000000406e49 : xchg eax, edi ; ret 0x8445
0x000000000040f5eb : xchg eax, esp ; ret 0x9588
0x0000000000404db1 : xchg eax, esp ; ret 0xd284
0x000000000040b89e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004069f0 : xor byte ptr [rcx], dh ; pop rbp ; ret
0x0000000000407686 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
