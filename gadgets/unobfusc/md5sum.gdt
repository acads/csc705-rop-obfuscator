0x000000000040792b : adc dword ptr [rsi], ecx ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407019 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401d82 : add al, 0x25 ; ret
0x0000000000401d2f : add al, 0x25 ; ret 0x60d2
0x0000000000401ed6 : add al, bpl ; ret
0x0000000000401ed7 : add al, ch ; ret
0x0000000000401f78 : add al, ch ; ret 0xfff8
0x000000000040b73f : add al, dl ; mov bh, -1 ; call rdx
0x000000000040997f : add bl, dh ; ret
0x000000000040281f : add byte ptr [r8], r8b ; add dh, dh ; add al, 0x25 ; ret 0x60d2
0x0000000000402b0b : add byte ptr [rax + 0x2504f601], dh ; ret
0x00000000004038c6 : add byte ptr [rax + 1], cl ; ret 0x8b48
0x00000000004052cb : add byte ptr [rax - 0x75], cl ; jge 0x4052c7 ; call 0x401577
0x0000000000405663 : add byte ptr [rax - 0x75], cl ; push rbp ; call 0x1d02d7bb
0x0000000000408028 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000402a92 : add byte ptr [rax - 0x77], cl ; ret 0x65e8
0x0000000000402a3e : add byte ptr [rax - 0x77], cl ; ret 0xb9e8
0x00000000004029ea : add byte ptr [rax - 0x77], cl ; ret 0xde8
0x000000000040566e : add byte ptr [rax - 0x7f], cl ; ret 0x40
0x000000000040af83 : add byte ptr [rax], ah ; ret 0xffff
0x0000000000401f76 : add byte ptr [rax], al ; add al, ch ; ret 0xfff8
0x000000000040997d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000402b09 : add byte ptr [rax], al ; add byte ptr [rax + 0x2504f601], dh ; ret
0x00000000004038c4 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8b48
0x00000000004052c9 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jge 0x4052c9 ; call 0x401579
0x0000000000405661 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbp ; call 0x1d02d7bd
0x000000000040566c : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x40
0x000000000040997b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000403750 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040997c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040224a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004030fd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x00000000004078ee : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004023f3 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000401d7e : add byte ptr [rax], al ; add dh, al ; add al, 0x25 ; ret
0x0000000000402820 : add byte ptr [rax], al ; add dh, dh ; add al, 0x25 ; ret 0x60d2
0x0000000000406fda : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406d80 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040135b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000401519 : add byte ptr [rax], al ; jmp 0x401379
0x0000000000405bc2 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004052ca : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x10] ; call 0x401578
0x0000000000402b57 : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000407eeb : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406d48 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040997e : add byte ptr [rax], al ; ret
0x000000000040b73b : add byte ptr [rbp + rax], ah ; add al, dl ; mov bh, -1 ; call rdx
0x0000000000407eec : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000406d49 : add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004022ee : add byte ptr [rbx - 0xf34b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000401808 : add byte ptr [rcx], al ; ret
0x000000000040224c : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004030ff : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x00000000004078f0 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004023f5 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000401d80 : add dh, al ; add al, 0x25 ; ret
0x0000000000401d2d : add dh, al ; add al, 0x25 ; ret 0x60d2
0x0000000000402822 : add dh, dh ; add al, 0x25 ; ret 0x60d2
0x0000000000406fd8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407eea : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000406d47 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004031b7 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402cc4 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000403116 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004094da : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401804 : add eax, 0x20baae ; add ebx, esi ; ret
0x00000000004017cb : add eax, edx ; sar rax, 1 ; jne 0x4017dc ; pop rbp ; ret
0x0000000000401809 : add ebx, esi ; ret
0x0000000000401d7b : add ecx, ebp ; wait ; add byte ptr [rax], al ; add dh, al ; add al, 0x25 ; ret
0x0000000000401d56 : add esi, eax ; add al, 0x25 ; ret 0x60d2
0x0000000000402370 : add esi, eax ; mov rax, rsi ; pop rbp ; ret
0x0000000000402b0d : add esi, esi ; add al, 0x25 ; ret
0x00000000004019eb : add esp, 0x10 ; pop rbp ; ret
0x0000000000402b53 : add esp, 0x120 ; pop rbp ; ret
0x000000000040949c : add esp, 0x130 ; pop rbp ; ret
0x0000000000406d44 : add esp, 0x138 ; pop rbx ; pop rbp ; ret
0x00000000004081dc : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000408aee : add esp, 0x1e0 ; pop rbp ; ret
0x00000000004031bc : add esp, 0x20 ; pop rbp ; ret
0x0000000000401acd : add esp, 0x30 ; pop rbp ; ret
0x0000000000402cc9 : add esp, 0x40 ; pop rbp ; ret
0x000000000040569b : add esp, 0x50 ; pop rbp ; ret
0x000000000040311b : add esp, 0x60 ; pop rbp ; ret
0x0000000000405e53 : add esp, 0x70 ; pop rbp ; ret
0x0000000000406efe : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004072cd : add esp, 0x90 ; pop rbp ; ret
0x0000000000408074 : add esp, 0xa0 ; pop rbp ; ret
0x00000000004056eb : add esp, 0xc0 ; pop rbp ; ret
0x0000000000405396 : add esp, 0xe0 ; pop rbp ; ret
0x000000000040135e : add esp, 8 ; ret
0x00000000004017ca : add rax, rdx ; sar rax, 1 ; jne 0x4017dd ; pop rbp ; ret
0x000000000040236f : add rsi, rax ; mov rax, rsi ; pop rbp ; ret
0x00000000004019ea : add rsp, 0x10 ; pop rbp ; ret
0x0000000000402b52 : add rsp, 0x120 ; pop rbp ; ret
0x000000000040949b : add rsp, 0x130 ; pop rbp ; ret
0x0000000000406d43 : add rsp, 0x138 ; pop rbx ; pop rbp ; ret
0x00000000004081db : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000408aed : add rsp, 0x1e0 ; pop rbp ; ret
0x00000000004031bb : add rsp, 0x20 ; pop rbp ; ret
0x0000000000401acc : add rsp, 0x30 ; pop rbp ; ret
0x0000000000402cc8 : add rsp, 0x40 ; pop rbp ; ret
0x000000000040569a : add rsp, 0x50 ; pop rbp ; ret
0x000000000040311a : add rsp, 0x60 ; pop rbp ; ret
0x0000000000405e52 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000406efd : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004072cc : add rsp, 0x90 ; pop rbp ; ret
0x0000000000408073 : add rsp, 0xa0 ; pop rbp ; ret
0x00000000004056ea : add rsp, 0xc0 ; pop rbp ; ret
0x0000000000405395 : add rsp, 0xe0 ; pop rbp ; ret
0x000000000040135d : add rsp, 8 ; ret
0x00000000004094d9 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401807 : and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000402b55 : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000407307 : and eax, 0x48fffffd ; add esp, 0x20 ; pop rbp ; ret
0x0000000000401d28 : and eax, 0x60d2c1 ; add dh, al ; add al, 0x25 ; ret 0x60d2
0x0000000000401d51 : and eax, 0x60d2c1 ; add esi, eax ; add al, 0x25 ; ret 0x60d2
0x00000000004035cf : and eax, 0x60d2e0 ; pop rbp ; ret
0x00000000004035f3 : and eax, 0x60d2e8 ; pop rbp ; ret
0x00000000004054b3 : call 0x1d02d603
0x00000000004055f1 : call 0x1d02d741
0x0000000000405667 : call 0x1d02d7b7
0x00000000004052d0 : call 0x401572
0x0000000000401fbb : call 0x401848
0x000000000040320d : call 0x49322960
0x000000000040320c : call 0x49322961
0x0000000000406d79 : call 0xffffffffe902f6c9
0x0000000000406d78 : call 0xffffffffe902f6ca
0x0000000000409959 : call qword ptr [r12 + rbx*8]
0x000000000040b3e3 : call qword ptr [rsi]
0x000000000040995a : call qword ptr [rsp + rbx*8]
0x000000000040182d : call rax
0x000000000040b743 : call rdx
0x000000000040949a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x00000000004083df : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407901 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004059d8 : clc ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004017cf : clc ; jne 0x4017d8 ; pop rbp ; ret
0x0000000000405d05 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040374c : clc ; mov dword ptr [rdi + 0x18], 0 ; pop rbp ; ret
0x00000000004098ab : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004037ee : clc ; mov esi, dword ptr [rbp - 0xc] ; mov dword ptr [rdi], esi ; pop rbp ; ret
0x0000000000402387 : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040238b : clc ; pop rbp ; ret
0x0000000000408b56 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408739 : cld ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000408c74 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000405394 : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x00000000004098a8 : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000408b53 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408736 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000408c71 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406d46 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040178d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4017a0 ; pop rbp ; ret
0x0000000000407a2c : cwde ; mov rcx, qword ptr [rax*8 + 0x40aa58] ; jmp rcx
0x00000000004054af : dec dword ptr [rax - 0x75] ; push rbp ; call 0x1d02d607
0x0000000000402a06 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x00000000004022f4 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004093ff : dec dword ptr [rax - 0x7f] ; ret 1
0x0000000000406e2b : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000406763 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040995c : fmul qword ptr [rax - 0x7d] ; ret
0x00000000004019e9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004037f1 : hlt ; mov dword ptr [rdi], esi ; pop rbp ; ret
0x00000000004017a0 : hlt ; pop rbp ; mov edi, 0x60d280 ; jmp rax
0x0000000000408030 : int 0x80
0x0000000000401793 : ja 0x40179a ; pop rbp ; ret
0x000000000040179f : je 0x40179d ; pop rbp ; mov edi, 0x60d280 ; jmp rax
0x0000000000402386 : jge 0x402387 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004037ed : jge 0x4037ef ; mov esi, dword ptr [rbp - 0xc] ; mov dword ptr [rdi], esi ; pop rbp ; ret
0x00000000004052ce : jge 0x4052c4 ; call 0x401574
0x000000000040151b : jmp 0x401377
0x0000000000401d7c : jmp 0x401e24
0x000000000040281e : jmp 0x402878
0x000000000040b8e3 : jmp qword ptr [rax]
0x0000000000403a49 : jmp qword ptr [rcx]
0x000000000040b7c3 : jmp qword ptr [rdx]
0x00000000004017a7 : jmp rax
0x0000000000401d07 : jmp rcx
0x00000000004017e7 : jmp rdx
0x00000000004017d0 : jne 0x4017d7 ; pop rbp ; ret
0x00000000004037f0 : jne 0x4037eb ; mov dword ptr [rdi], esi ; pop rbp ; ret
0x0000000000405e55 : jo 0x405eb6 ; ret
0x0000000000407564 : jo 0x4075c5 ; ret
0x000000000040769e : jo 0x4076ff ; ret
0x0000000000406f00 : js 0x406f60 ; pop rbp ; ret
0x0000000000405398 : loopne 0x40539f ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040585b : loopne 0x4058ab ; add esp, 0x20 ; pop rbp ; ret
0x000000000040585a : loopne 0x4058ac ; add esp, 0x20 ; pop rbp ; ret
0x0000000000408af0 : loopne 0x408af8 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040743b : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004072cb : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x00000000004094d6 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040b741 : mov bh, -1 ; call rdx
0x00000000004035f1 : mov byte ptr [0x60d2e8], al ; pop rbp ; ret
0x0000000000401803 : mov byte ptr [rip + 0x20baae], 1 ; ret
0x00000000004031b9 : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402cc6 : mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000403118 : mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004094dc : mov dh, -0x40 ; pop rbp ; ret
0x00000000004035cd : mov dword ptr [0x60d2e0], edi ; pop rbp ; ret
0x0000000000405697 : mov dword ptr [rax + 0x18], ecx ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000405d06 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405c14 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000405cc8 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000403219 : mov dword ptr [rbp - 0x10], edx ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405859 : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401ac9 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004019e7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004098a9 : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004035ab : mov dword ptr [rbp - 8], eax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402385 : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000405d7e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004051d3 : mov dword ptr [rcx + 0xc], eax ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040374d : mov dword ptr [rdi + 0x18], 0 ; pop rbp ; ret
0x00000000004037f2 : mov dword ptr [rdi], esi ; pop rbp ; ret
0x0000000000406efc : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000405bc8 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004082fb : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004037d1 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405bc5 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040321d : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000408593 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405b7d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000405c0e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000405cca : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000405e4f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000406efa : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000407439 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000408b54 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408737 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000408c72 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004083dd : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004078ff : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004059d6 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000402389 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402373 : mov eax, esi ; pop rbp ; ret
0x000000000040182b : mov ebp, esp ; call rax
0x0000000000401791 : mov ebp, esp ; ja 0x40179c ; pop rbp ; ret
0x0000000000401d00 : mov ecx, dword ptr [rax*8 + 0x4099d0] ; jmp rcx
0x0000000000405f07 : mov ecx, dword ptr [rax*8 + 0x40a550] ; jmp rcx
0x00000000004061e7 : mov ecx, dword ptr [rax*8 + 0x40a598] ; jmp rcx
0x0000000000407a2e : mov ecx, dword ptr [rax*8 + 0x40aa58] ; jmp rcx
0x0000000000405c11 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401825 : mov edi, 0x60ce20 ; mov rbp, rsp ; call rax
0x00000000004017a2 : mov edi, 0x60d280 ; jmp rax
0x00000000004017e2 : mov edi, 0x60d280 ; jmp rdx
0x00000000004052cd : mov edi, dword ptr [rbp - 0x10] ; call 0x401575
0x00000000004037ec : mov edi, dword ptr [rbp - 8] ; mov esi, dword ptr [rbp - 0xc] ; mov dword ptr [rdi], esi ; pop rbp ; ret
0x0000000000409957 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000409956 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000401806 : mov edx, 0xf3010020 ; ret
0x00000000004037ef : mov esi, dword ptr [rbp - 0xc] ; mov dword ptr [rdi], esi ; pop rbp ; ret
0x00000000004017e0 : mov esi, eax ; mov edi, 0x60d280 ; jmp rdx
0x00000000004035cc : mov qword ptr [0x60d2e0], rdi ; pop rbp ; ret
0x0000000000403218 : mov qword ptr [rbp - 0x10], rdx ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004035aa : mov qword ptr [rbp - 8], rax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402384 : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000405d7d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040743a : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000406efb : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x00000000004082fa : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004037d0 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405bc4 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040321c : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000408592 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405b7c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000405e4e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000407438 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004083dc : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004078fe : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004059d5 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000402388 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402372 : mov rax, rsi ; pop rbp ; ret
0x000000000040182a : mov rbp, rsp ; call rax
0x0000000000401790 : mov rbp, rsp ; ja 0x40179d ; pop rbp ; ret
0x0000000000401cff : mov rcx, qword ptr [rax*8 + 0x4099d0] ; jmp rcx
0x0000000000405f06 : mov rcx, qword ptr [rax*8 + 0x40a550] ; jmp rcx
0x00000000004061e6 : mov rcx, qword ptr [rax*8 + 0x40a598] ; jmp rcx
0x0000000000407a2d : mov rcx, qword ptr [rax*8 + 0x40aa58] ; jmp rcx
0x00000000004052cc : mov rdi, qword ptr [rbp - 0x10] ; call 0x401576
0x00000000004017df : mov rsi, rax ; mov edi, 0x60d280 ; jmp rdx
0x00000000004031b8 : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402cc5 : movzx eax, al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000403117 : movzx eax, al ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004094db : movzx eax, al ; pop rbp ; ret
0x0000000000409978 : nop dword ptr [rax + rax] ; ret
0x00000000004051d5 : or al, 0x48 ; add esp, 0x30 ; pop rbp ; ret
0x000000000040675e : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040675f : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x00000000004031a3 : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000040af81 : or dword ptr [rax], eax ; add byte ptr [rax], ah ; ret 0xffff
0x0000000000407621 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040af80 : or qword ptr [rax], rax ; add byte ptr [rax], ah ; ret 0xffff
0x000000000040996c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040996e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000407eee : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000409970 : pop r14 ; pop r15 ; ret
0x0000000000407ef0 : pop r15 ; pop rbp ; ret
0x0000000000409972 : pop r15 ; ret
0x0000000000401802 : pop rbp ; mov byte ptr [rip + 0x20baae], 1 ; ret
0x00000000004017a1 : pop rbp ; mov edi, 0x60d280 ; jmp rax
0x00000000004017de : pop rbp ; mov rsi, rax ; mov edi, 0x60d280 ; jmp rdx
0x000000000040996b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040996f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401795 : pop rbp ; ret
0x0000000000407eed : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406d4a : pop rbx ; pop rbp ; ret
0x0000000000407ef1 : pop rdi ; pop rbp ; ret
0x0000000000409973 : pop rdi ; ret
0x0000000000407eef : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000409971 : pop rsi ; pop r15 ; ret
0x000000000040996d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040569d : push rax ; pop rbp ; ret
0x00000000004054b2 : push rbp ; call 0x1d02d604
0x00000000004055f0 : push rbp ; call 0x1d02d742
0x0000000000405666 : push rbp ; call 0x1d02d7b8
0x0000000000406762 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000401824 : push rbp ; mov edi, 0x60ce20 ; mov rbp, rsp ; call rax
0x0000000000405615 : push rbp ; ror byte ptr [rax + 1], 1 ; ret 0x8948
0x000000000040908d : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x0000000000406e2e : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000401f7d : push rsi ; add al, 0x25 ; ret 0x60d2
0x0000000000401361 : ret
0x0000000000405441 : ret 0x148
0x00000000004038c2 : ret 0x1c
0x0000000000401722 : ret 0x20ba
0x0000000000401522 : ret 0x20bb
0x0000000000405671 : ret 0x40
0x0000000000403213 : ret 0x4240
0x0000000000401d31 : ret 0x60d2
0x0000000000402a95 : ret 0x65e8
0x00000000004079e9 : ret 0x8844
0x0000000000405444 : ret 0x8941
0x0000000000405547 : ret 0x8948
0x000000000040688d : ret 0x89a5
0x0000000000402626 : ret 0x8b48
0x0000000000401e68 : ret 0xb0
0x0000000000405609 : ret 0xb1e8
0x0000000000402a41 : ret 0xb9e8
0x00000000004017c5 : ret 0xc148
0x000000000040224f : ret 0xd284
0x00000000004038e6 : ret 0xd4e8
0x00000000004029ed : ret 0xde8
0x00000000004023f8 : ret 0xe280
0x0000000000406d7c : ret 0xee8
0x000000000040677b : ret 0xffe8
0x0000000000401f7a : ret 0xfff8
0x00000000004052d2 : ret 0xffff
0x0000000000402045 : ret 1
0x0000000000406e32 : ret 8
0x00000000004055ec : ror byte ptr [r8 - 0x75], 1 ; push rbp ; call 0x1d02d746
0x000000000040802b : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000405e50 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x405ebb ; ret
0x0000000000405616 : ror byte ptr [rax + 1], 1 ; ret 0x8948
0x00000000004017cc : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4017db ; pop rbp ; ret
0x00000000004055ed : ror byte ptr [rax - 0x75], 1 ; push rbp ; call 0x1d02d745
0x000000000040802c : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000405e51 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x405eba ; ret
0x0000000000402cc7 : ror byte ptr [rax - 0x7d], -0x3c ; pop rbp ; ret
0x0000000000402b51 : ror byte ptr [rax - 0x7f], -0x3c ; and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040908e : ror byte ptr [rax - 0x7f], 1 ; ret 1
0x0000000000406e2f : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x00000000004017ce : sar eax, 1 ; jne 0x4017d9 ; pop rbp ; ret
0x000000000040af7d : sar edi, -1 ; or qword ptr [rax], rax ; add byte ptr [rax], ah ; ret 0xffff
0x00000000004017cd : sar rax, 1 ; jne 0x4017da ; pop rbp ; ret
0x0000000000401805 : scasb al, byte ptr [rdi] ; mov edx, 0xf3010020 ; ret
0x0000000000401d2a : shl byte ptr [rax], cl ; add dh, al ; add al, 0x25 ; ret 0x60d2
0x0000000000401d53 : shl byte ptr [rax], cl ; add esi, eax ; add al, 0x25 ; ret 0x60d2
0x0000000000405b02 : shl byte ptr [rax], cl ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004017a4 : shl byte ptr [rax], cl ; jmp rax
0x00000000004017e4 : shl byte ptr [rax], cl ; jmp rdx
0x00000000004035d1 : shl byte ptr [rax], cl ; pop rbp ; ret
0x00000000004094d8 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000405201 : sti ; ret
0x000000000040236d : sub eax, edx ; add rsi, rax ; mov rax, rsi ; pop rbp ; ret
0x00000000004099ad : sub esp, 8 ; add rsp, 8 ; ret
0x00000000004099ac : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040997a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000401d7d : wait ; add byte ptr [rax], al ; add dh, al ; add al, 0x25 ; ret
0x00000000004052d1 : wait ; ret 0xffff
0x000000000040224e : xchg eax, ebp ; ret 0xd284
0x0000000000403101 : xchg eax, ebp ; ret 0xe280
0x00000000004078f2 : xchg eax, esp ; ret 0xd284
0x00000000004023f7 : xchg eax, esp ; ret 0xe280
0x000000000040949e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000405cc6 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
