0x0000000000403719 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004070a3 : add ah, ah ; add al, byte ptr [rax] ; add al, ch ; ret
0x0000000000407083 : add ah, al ; add al, byte ptr [rax] ; add al, cl ; ret
0x0000000000407683 : add ah, al ; or byte ptr [rax], al ; add al, bl ; fdivp st(7) ; jmp rax
0x0000000000406ae9 : add al, 0 ; add al, dl ; mov bl, -1 ; jmp qword ptr [rax]
0x0000000000402659 : add al, 0x25 ; ret 0x4066
0x0000000000407687 : add al, bl ; fdivp st(7) ; jmp rax
0x00000000004070a5 : add al, byte ptr [rax] ; add al, ch ; ret
0x0000000000407085 : add al, byte ptr [rax] ; add al, cl ; ret
0x00000000004051dc : add al, ch ; ret
0x0000000000404edf : add al, ch ; wait ; ret
0x0000000000407087 : add al, cl ; ret
0x0000000000406c5b : add al, dh ; fdivp st(7) ; jmp rax
0x0000000000406c9b : add al, dl ; loope 0x406ca2 ; jmp rax
0x0000000000406aeb : add al, dl ; mov bl, -1 ; jmp qword ptr [rax]
0x0000000000405c8f : add bl, dh ; ret
0x0000000000406ae8 : add byte ptr [rax + rax], al ; add al, dl ; mov bl, -1 ; jmp qword ptr [rax]
0x0000000000402656 : add byte ptr [rax - 0x73], cl ; add al, 0x25 ; ret 0x4066
0x00000000004046f8 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000405084 : add byte ptr [rax - 0x77], cl ; call 0x2137b
0x0000000000405083 : add byte ptr [rax - 0x77], cl ; call 0x2137c
0x0000000000406bdb : add byte ptr [rax], ah ; sar bh, cl ; jmp rax
0x00000000004070a1 : add byte ptr [rax], al ; add ah, ah ; add al, byte ptr [rax] ; add al, ch ; ret
0x0000000000407081 : add byte ptr [rax], al ; add ah, al ; add al, byte ptr [rax] ; add al, cl ; ret
0x0000000000404edd : add byte ptr [rax], al ; add al, ch ; wait ; ret
0x0000000000405c8d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000402654 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add al, 0x25 ; ret 0x4066
0x0000000000405c8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000400730 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400732 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400734 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000401c4d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x9588
0x0000000000403fee : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004036da : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403480 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401233 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000401449 : add byte ptr [rax], al ; jmp 0x401249
0x00000000004022c2 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000406bea : add byte ptr [rax], al ; nop ; sar bh, cl ; jmp qword ptr [rax]
0x00000000004039d1 : add byte ptr [rax], al ; pop rbp ; ret
0x00000000004045bb : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403448 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000406caa : add byte ptr [rax], al ; push rax ; loop 0x406cb3 ; jmp qword ptr [rax]
0x0000000000400736 : add byte ptr [rax], al ; ret
0x0000000000406cda : add byte ptr [rax], al ; shr dl, -1 ; jmp rax
0x0000000000406be8 : add byte ptr [rax], cl ; add byte ptr [rax], al ; nop ; sar bh, cl ; jmp qword ptr [rax]
0x00000000004045bc : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000403449 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040520a : add byte ptr [rbx - 0x22173783], cl ; ret 0xffff
0x0000000000401da1 : add byte ptr [rbx - 0x974b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000406ca8 : add byte ptr [rbx], cl ; add byte ptr [rax], al ; push rax ; loop 0x406cb5 ; jmp qword ptr [rax]
0x0000000000401668 : add byte ptr [rcx], al ; ret
0x0000000000401c4f : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x9588
0x0000000000403ff0 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004036d8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004045ba : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000403447 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004057ea : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000404ed9 : add dword ptr [rdi], ecx ; test dword ptr [rcx], edx ; add byte ptr [rax], al ; add al, ch ; wait ; ret
0x0000000000401664 : add eax, 0x206c4e ; add ebx, esi ; ret
0x0000000000401f97 : add eax, 0x48fffff3 ; add esp, 0x10 ; pop rbp ; ret
0x000000000040162b : add eax, edx ; sar rax, 1 ; jne 0x40163c ; pop rbp ; ret
0x0000000000401669 : add ebx, esi ; ret
0x00000000004017db : add esp, 0x10 ; pop rbp ; ret
0x000000000040554c : add esp, 0x130 ; pop rbp ; ret
0x0000000000403444 : add esp, 0x138 ; pop rbx ; pop rbp ; ret
0x00000000004048ac : add esp, 0x1a0 ; pop rbp ; ret
0x00000000004020d0 : add esp, 0x20 ; pop rbp ; ret
0x00000000004018ed : add esp, 0x30 ; pop rbp ; ret
0x0000000000403abc : add esp, 0x50 ; pop rbp ; ret
0x0000000000402553 : add esp, 0x70 ; pop rbp ; ret
0x00000000004035fe : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004039cd : add esp, 0x90 ; pop rbp ; ret
0x0000000000404744 : add esp, 0xa0 ; pop rbp ; ret
0x0000000000401236 : add esp, 8 ; ret
0x000000000040162a : add rax, rdx ; sar rax, 1 ; jne 0x40163d ; pop rbp ; ret
0x00000000004017da : add rsp, 0x10 ; pop rbp ; ret
0x000000000040554b : add rsp, 0x130 ; pop rbp ; ret
0x0000000000403443 : add rsp, 0x138 ; pop rbx ; pop rbp ; ret
0x00000000004048ab : add rsp, 0x1a0 ; pop rbp ; ret
0x00000000004020cf : add rsp, 0x20 ; pop rbp ; ret
0x00000000004018ec : add rsp, 0x30 ; pop rbp ; ret
0x0000000000403abb : add rsp, 0x50 ; pop rbp ; ret
0x0000000000402552 : add rsp, 0x70 ; pop rbp ; ret
0x00000000004035fd : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004039cc : add rsp, 0x90 ; pop rbp ; ret
0x0000000000404743 : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000401235 : add rsp, 8 ; ret
0x00000000004057e9 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401667 : and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000403797 : and dword ptr [rax], 0x81d8558b ; ret 1
0x0000000000403a07 : and eax, 0x48fffffd ; add esp, 0x20 ; pop rbp ; ret
0x0000000000401e69 : and eax, 0x6081e0 ; pop rbp ; ret
0x0000000000401e7f : and eax, 0x6082c8 ; pop rbp ; ret
0x0000000000401ea3 : and eax, 0x6082d0 ; pop rbp ; ret
0x0000000000405088 : call 0x21377
0x0000000000405087 : call 0x21378
0x00000000004050d7 : call 0x294c7
0x00000000004050cb : call 0x401322
0x000000000040516c : call 0x401472
0x000000000040520e : call 0x4014f2
0x0000000000403479 : call 0xffffffffe902bdc9
0x0000000000403478 : call 0xffffffffe902bdca
0x0000000000404101 : call 0xffffffffff408170
0x0000000000405c69 : call qword ptr [r12 + rbx*8]
0x0000000000406ecb : call qword ptr [rsi]
0x0000000000405c6a : call qword ptr [rsp + rbx*8]
0x000000000040168d : call rax
0x00000000004070cb : call rdx
0x000000000040554a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x0000000000404aaf : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404001 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403796 : clc ; and dword ptr [rax], 0x81d8558b ; ret 1
0x000000000040162f : clc ; jne 0x401638 ; pop rbp ; ret
0x0000000000402405 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405bbb : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000405bbe : clc ; pop rbp ; ret
0x0000000000401807 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404f1b : cld ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404e60 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401e66 : cld ; mov dword ptr [0x6081e0], eax ; pop rbp ; ret
0x0000000000405bb8 : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000405693 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405636 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404e5d : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401e7e : cmp al, 0x25 ; enter 0x6082, 0 ; pop rbp ; ret
0x0000000000403446 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004015ed : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401600 ; pop rbp ; ret
0x00000000004040fc : cwde ; mov rcx, qword ptr [rax*8 + 0x4066e8] ; jmp rcx
0x0000000000401da7 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004054af : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000040352b : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000401e80 : enter 0x6082, 0 ; pop rbp ; ret
0x0000000000406c5d : fdivp st(7) ; jmp rax
0x00000000004050d2 : fmul dword ptr [r8 - 0x75] ; jge 0x4050c8 ; call 0x401328
0x0000000000402e63 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x00000000004050d3 : fmul dword ptr [rax - 0x75] ; jge 0x4050c7 ; call 0x401327
0x0000000000405c6c : fmul qword ptr [rax - 0x7d] ; ret
0x00000000004017d9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401600 : hlt ; pop rbp ; mov edi, 0x608240 ; jmp rax
0x0000000000406ae7 : inc dword ptr [rax] ; add al, 0 ; add al, dl ; mov bl, -1 ; jmp qword ptr [rax]
0x0000000000406c97 : inc eax ; or al, byte ptr [rax] ; add al, dl ; loope 0x406ca6 ; jmp rax
0x0000000000406c57 : inc eax ; or dword ptr [rax], eax ; add al, dh ; fdivp st(7) ; jmp rax
0x0000000000401666 : insb byte ptr [rdi], dx ; and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000404700 : int 0x80
0x00000000004015f3 : ja 0x4015fa ; pop rbp ; ret
0x00000000004015ff : je 0x4015fd ; pop rbp ; mov edi, 0x608240 ; jmp rax
0x00000000004050d6 : jge 0x4050c4 ; call 0x401324
0x000000000040520c : jge 0x4051da ; call 0x4014f4
0x000000000040144b : jmp 0x401247
0x0000000000402652 : jmp 0x402660
0x0000000000403fd5 : jmp 0x404007
0x0000000000406aef : jmp qword ptr [rax]
0x000000000040714b : jmp qword ptr [rdx]
0x0000000000401607 : jmp rax
0x000000000040260e : jmp rcx
0x0000000000401647 : jmp rdx
0x0000000000401630 : jne 0x401637 ; pop rbp ; ret
0x0000000000405166 : jne 0x405160 ; mov rdx, qword ptr [rbp - 0x28] ; call 0x401478
0x0000000000402555 : jo 0x4025b6 ; ret
0x0000000000403c64 : jo 0x403cc5 ; ret
0x0000000000403d9e : jo 0x403dff ; ret
0x0000000000403600 : js 0x403660 ; pop rbp ; ret
0x0000000000406cad : loop 0x406cb0 ; jmp qword ptr [rax]
0x0000000000406c9d : loope 0x406ca0 ; jmp rax
0x00000000004051da : loopne 0x405191 ; add al, ch ; ret
0x0000000000403b3b : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004039cb : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x00000000004057e6 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000406b1d : mov bh, -1 ; jmp rax
0x0000000000406aed : mov bl, -1 ; jmp qword ptr [rax]
0x0000000000401ea1 : mov byte ptr [0x6082d0], al ; pop rbp ; ret
0x00000000004050c5 : mov byte ptr [rbp - 0xe9], al ; call 0x401328
0x0000000000401663 : mov byte ptr [rip + 0x206c4e], 1 ; ret
0x00000000004057ec : mov dh, -0x40 ; pop rbp ; ret
0x0000000000401e67 : mov dword ptr [0x6081e0], eax ; pop rbp ; ret
0x0000000000401e7d : mov dword ptr [0x6082c8], edi ; pop rbp ; ret
0x0000000000402406 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000402314 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004023c8 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004050d1 : mov dword ptr [rbp - 0x28], eax ; mov rdi, qword ptr [rbp - 0x18] ; call 0x401329
0x00000000004018e9 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004017d7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401805 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405bb9 : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040247e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004035fc : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x00000000004022c8 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004049cb : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004020cc : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004022c5 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040204f : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000404c63 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040227d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040230e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004023ca : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040254f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004035fa : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000403b39 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000405694 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404f19 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404e5e : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404aad : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403fff : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000405bbc : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040168b : mov ebp, esp ; call rax
0x00000000004015f1 : mov ebp, esp ; ja 0x4015fc ; pop rbp ; ret
0x0000000000402607 : mov ecx, dword ptr [rax*8 + 0x4061e0] ; jmp rcx
0x00000000004028e7 : mov ecx, dword ptr [rax*8 + 0x406228] ; jmp rcx
0x00000000004040fe : mov ecx, dword ptr [rax*8 + 0x4066e8] ; jmp rcx
0x0000000000402311 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401685 : mov edi, 0x607e20 ; mov rbp, rsp ; call rax
0x0000000000401602 : mov edi, 0x608240 ; jmp rax
0x0000000000401642 : mov edi, 0x608240 ; jmp rdx
0x00000000004050d5 : mov edi, dword ptr [rbp - 0x18] ; call 0x401325
0x000000000040520b : mov edi, dword ptr [rbp - 0x38] ; call 0x4014f5
0x00000000004051a9 : mov edi, eax ; mov rdx, rcx ; call 0x401477
0x0000000000405c67 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000405c66 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000405169 : mov edx, dword ptr [rbp - 0x28] ; call 0x401475
0x00000000004051ac : mov edx, ecx ; call 0x401474
0x0000000000405165 : mov esi, dword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 0x28] ; call 0x401479
0x0000000000401640 : mov esi, eax ; mov edi, 0x608240 ; jmp rdx
0x0000000000401e7c : mov qword ptr [0x6082c8], rdi ; pop rbp ; ret
0x000000000040247d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403b3a : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004035fb : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x00000000004049ca : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004020cb : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004022c4 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040204e : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000404c62 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040227c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040254e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000403b38 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000404aac : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403ffe : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040168a : mov rbp, rsp ; call rax
0x00000000004015f0 : mov rbp, rsp ; ja 0x4015fd ; pop rbp ; ret
0x0000000000402606 : mov rcx, qword ptr [rax*8 + 0x4061e0] ; jmp rcx
0x00000000004028e6 : mov rcx, qword ptr [rax*8 + 0x406228] ; jmp rcx
0x00000000004040fd : mov rcx, qword ptr [rax*8 + 0x4066e8] ; jmp rcx
0x00000000004050d4 : mov rdi, qword ptr [rbp - 0x18] ; call 0x401326
0x00000000004051a8 : mov rdi, rax ; mov rdx, rcx ; call 0x401478
0x0000000000405168 : mov rdx, qword ptr [rbp - 0x28] ; call 0x401476
0x00000000004051ab : mov rdx, rcx ; call 0x401475
0x000000000040163f : mov rsi, rax ; mov edi, 0x608240 ; jmp rdx
0x00000000004057eb : movzx eax, al ; pop rbp ; ret
0x0000000000406bec : nop ; sar bh, cl ; jmp qword ptr [rax]
0x0000000000405c88 : nop dword ptr [rax + rax] ; ret
0x00000000004040ff : or al, 0xffffffffffffffc5 ; call 0xffffffffff408172
0x0000000000406c99 : or al, byte ptr [rax] ; add al, dl ; loope 0x406ca4 ; jmp rax
0x0000000000402e5e : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000402e5f : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000407685 : or byte ptr [rax], al ; add al, bl ; fdivp st(7) ; jmp rax
0x0000000000406c59 : or dword ptr [rax], eax ; add al, dh ; fdivp st(7) ; jmp rax
0x0000000000403d21 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405c7c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405c7e : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004045be : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405c80 : pop r14 ; pop r15 ; ret
0x00000000004045c0 : pop r15 ; pop rbp ; ret
0x0000000000405c82 : pop r15 ; ret
0x0000000000401662 : pop rbp ; mov byte ptr [rip + 0x206c4e], 1 ; ret
0x0000000000401601 : pop rbp ; mov edi, 0x608240 ; jmp rax
0x000000000040163e : pop rbp ; mov rsi, rax ; mov edi, 0x608240 ; jmp rdx
0x0000000000405c7b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405c7f : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004015f5 : pop rbp ; ret
0x00000000004045bd : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040344a : pop rbx ; pop rbp ; ret
0x00000000004045c1 : pop rdi ; pop rbp ; ret
0x0000000000405c83 : pop rdi ; ret
0x00000000004045bf : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000405c81 : pop rsi ; pop r15 ; ret
0x0000000000405c7d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405082 : push 0x40 ; add byte ptr [rax - 0x77], cl ; call 0x2137d
0x0000000000405081 : push 0x40 ; add byte ptr [rax - 0x77], cl ; call 0x2137e
0x0000000000406cac : push rax ; loop 0x406cb1 ; jmp qword ptr [rax]
0x0000000000403abe : push rax ; pop rbp ; ret
0x00000000004050cc : push rax ; ret 0xffff
0x0000000000402e62 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000401684 : push rbp ; mov edi, 0x607e20 ; mov rbp, rsp ; call rax
0x000000000040513d : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000040352e : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000404fc8 : push rsp ; ret
0x0000000000400738 : ret
0x0000000000401452 : ret 0x206c
0x0000000000401242 : ret 0x206d
0x000000000040265b : ret 0x4066
0x00000000004040b9 : ret 0x8844
0x0000000000404b32 : ret 0x8948
0x0000000000402f8d : ret 0x89a5
0x0000000000402e66 : ret 0x8b48
0x0000000000401c52 : ret 0x9588
0x0000000000402e7b : ret 0xafe8
0x0000000000401d5c : ret 0xb0
0x0000000000401625 : ret 0xc148
0x0000000000403ff3 : ret 0xd284
0x000000000040347c : ret 0xee8
0x000000000040508a : ret 0xffc1
0x00000000004050cd : ret 0xffff
0x000000000040379e : ret 1
0x0000000000403532 : ret 8
0x0000000000406bd8 : rol byte ptr [rdi], 0 ; add byte ptr [rax], ah ; sar bh, cl ; jmp rax
0x0000000000406b58 : rol byte ptr [rip - 0x36500000], -1 ; jmp rax
0x00000000004046fb : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000402550 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x4025bb ; ret
0x000000000040162c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40163b ; pop rbp ; ret
0x00000000004046fc : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000402551 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x4025ba ; ret
0x000000000040513e : ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000040352f : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000406c58 : ror byte ptr [rcx], 0 ; add al, dh ; fdivp st(7) ; jmp rax
0x0000000000406c98 : ror byte ptr [rdx], 0 ; add al, dl ; loope 0x406ca5 ; jmp rax
0x0000000000406d58 : ror byte ptr [rip - 0xf900000], -1 ; jmp rax
0x0000000000406bad : sar bh, 1 ; jmp qword ptr [rax]
0x0000000000406bed : sar bh, cl ; jmp qword ptr [rax]
0x0000000000406bdd : sar bh, cl ; jmp rax
0x000000000040162e : sar eax, 1 ; jne 0x401639 ; pop rbp ; ret
0x000000000040162d : sar rax, 1 ; jne 0x40163a ; pop rbp ; ret
0x0000000000406cdc : shr dl, -1 ; jmp rax
0x00000000004057e8 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401231 : sub eax, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000405cbd : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000405cbc : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000405c8a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000404edb : test dword ptr [rcx], edx ; add byte ptr [rax], al ; add al, ch ; wait ; ret
0x0000000000404ee1 : wait ; ret
0x0000000000401c51 : xchg eax, ebp ; ret 0x9588
0x0000000000403ff2 : xchg eax, esp ; ret 0xd284
0x000000000040554e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004023c6 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
