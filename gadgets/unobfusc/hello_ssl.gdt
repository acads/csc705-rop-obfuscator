0x00000000006170b0 : adc ah, ah ; hlt ; call qword ptr [rsi]
0x000000000042df5c : adc ah, ah ; or dword ptr [rax], eax ; xor eax, eax ; pop rdx ; ret
0x00000000005e6964 : adc ah, ah ; out dx, al ; call qword ptr [rax]
0x00000000004e49a0 : adc ah, al ; out 0x2c, al ; inc byte ptr [rcx + 9] ; ret
0x00000000005271f0 : adc ah, al ; ret
0x00000000005271ea : adc ah, al ; sar dword ptr [rcx + 0x6e], 0x41 ; adc ah, al ; ret
0x00000000005293c8 : adc ah, al ; sar dword ptr [rcx + 0x6e], 0x51 ; adc ah, al ; ret
0x00000000004ce2b9 : adc ah, bh ; dec dword ptr [rax - 0x77] ; ret
0x000000000059775a : adc ah, bh ; sti ; movsb byte ptr [rdi], byte ptr [rsi] ; cmp dword ptr [rbp - 0x31], esp ; jg 0x5977a8 ; ret
0x00000000005ab945 : adc ah, byte ptr [rbx + rcx*8 + 6] ; push rcx ; shl byte ptr [rdx + 0x56], 1 ; ret 0x3451
0x00000000005aae4c : adc ah, byte ptr [rbx + rcx*8] ; movsb byte ptr [rdi], byte ptr [rsi] ; call qword ptr [rdi]
0x00000000005e250d : adc ah, ch ; call qword ptr [rax]
0x00000000005f28f9 : adc ah, ch ; call rdx
0x00000000005d6893 : adc ah, cl ; ror ah, 0xc ; ret 0xd832
0x00000000005e12ed : adc ah, dl ; call qword ptr [rax]
0x0000000000606c91 : adc al, -0x12 ; jmp qword ptr [rdi]
0x000000000060ad1c : adc al, -0x15 ; add dword ptr [rax], eax ; add bl, bh ; out dx, al ; call qword ptr [rax]
0x00000000004b650e : adc al, -0x18 ; cmp al, -0x27 ; cli ; dec dword ptr [rax - 0x77] ; ret
0x00000000004dec5e : adc al, -0x18 ; in al, dx ; mov esi, 0x8948fff8 ; ret
0x000000000049afe6 : adc al, -0x18 ; mov dr1, esp ; dec dword ptr [rax - 0x77] ; ret
0x00000000004c3cf1 : adc al, -0x18 ; pop rcx ; add edx, edi ; dec dword ptr [rax - 0x77] ; ret
0x000000000054ae38 : adc al, -0x19 ; stc ; dec dword ptr [rax - 0x77] ; ret 0xed31
0x00000000005ed479 : adc al, -0x1e ; call rdi
0x000000000059c355 : adc al, -0x23 ; ret 0x8c0e
0x000000000059c8c5 : adc al, -0x29 ; sahf ; cmp al, 0x26 ; ret 0x6f8
0x000000000059f683 : adc al, -0x2a ; int1 ; stosb byte ptr [rdi], al ; ret
0x00000000005a54ff : adc al, -0x2f ; mov al, -0xa ; jle 0x5a552c ; ret
0x00000000005272c1 : adc al, -0x3c ; ret
0x00000000005272bb : adc al, -0x3c ; sar dword ptr [rcx + 0x6e], 0x41 ; adc al, -0x3c ; ret
0x00000000005294bd : adc al, -0x3c ; sar dword ptr [rcx + 0x6e], 0x51 ; adc al, -0x3c ; ret
0x0000000000539c2a : adc al, -0x3f ; mov rax, rdx ; ret
0x00000000004e5828 : adc al, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000431ddb : adc al, -0x48 ; call 0xffffffffc3437524
0x000000000043613e : adc al, -0x48 ; sbb al, 0 ; add byte ptr [rax], al ; ret
0x000000000061701c : adc al, -0x52 ; add al, byte ptr [rax] ; loopne 0x61700c ; hlt ; call qword ptr [rsi]
0x00000000005b13cf : adc al, -0x56 ; fst dword ptr [rcx - 0x79a63c10] ; ret
0x000000000050df40 : adc al, -0x60 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4820
0x0000000000596aae : adc al, -0x61 ; ret 0x61c0
0x000000000061521c : adc al, -0x70 ; add al, byte ptr [rax] ; mov al, 0x49 ; hlt ; jmp qword ptr [rax]
0x000000000059daba : adc al, -0x70 ; ret
0x00000000004eaa63 : adc al, -0x75 ; adc al, 0x39 ; ret 0xd75
0x000000000045dc52 : adc al, -0x77 ; ret
0x00000000004c1a23 : adc al, -0x79 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x3908
0x00000000005b4b4d : adc al, -0x79 ; ror esp, cl ; ret 0xcac1
0x00000000005b072c : adc al, -0x7d ; ret
0x000000000060fa41 : adc al, -0xd ; call qword ptr [rax]
0x0000000000489cf3 : adc al, -1 ; ret
0x00000000005eaee5 : adc al, -9 ; call qword ptr [rax]
0x00000000005eaed5 : adc al, -9 ; jmp rax
0x00000000004b70b3 : adc al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000618500 : adc al, 0 ; add byte ptr [rax], al ; cld ; ret 2
0x000000000060c840 : adc al, 0 ; add byte ptr [rax], al ; cmp al, 6 ; add al, byte ptr [rax] ; pop rax ; ret
0x0000000000609ef0 : adc al, 0 ; add byte ptr [rax], al ; in al, dx ; fadd qword ptr [rcx] ; add byte ptr [rax], ch ; ret
0x00000000005f40f0 : adc al, 0 ; add byte ptr [rax], al ; in al, dx ; jle 0x5f4100 ; add al, ch ; ret 0xffe6
0x00000000006084f0 : adc al, 0 ; add byte ptr [rax], al ; in al, dx ; ret 1
0x00000000005fdb78 : adc al, 0 ; add byte ptr [rax], al ; je 0x5fdba0 ; add dword ptr [rax], eax ; push rax ; ret
0x0000000000609e78 : adc al, 0 ; add byte ptr [rax], al ; je 0x609e63 ; add dword ptr [rax], eax ; nop ; ret 0xffee
0x00000000005fdab8 : adc al, 0 ; add byte ptr [rax], al ; mov ah, 0x18 ; add dword ptr [rax], eax ; nop ; ret
0x000000000041957c : adc al, 0 ; add byte ptr [rax], al ; mov eax, edi ; ret
0x00000000005f67c0 : adc al, 0 ; add byte ptr [rax], al ; mov esp, 0xc80000a5 ; jmp rdi
0x0000000000609ec0 : adc al, 0 ; add byte ptr [rax], al ; mov esp, 0xe80001dc ; ret 0xffee
0x0000000000410b43 : adc al, 0 ; add byte ptr [rax], al ; mov r9, rbx ; call r10
0x0000000000609ea8 : adc al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; fadd qword ptr [rcx] ; add al, ah ; ret 0xffee
0x0000000000618560 : adc al, 0 ; add byte ptr [rax], al ; pop rsp ; ret
0x0000000000618460 : adc al, 0 ; add byte ptr [rax], al ; pop rsp ; ret 2
0x0000000000436169 : adc al, 0 ; add byte ptr [rax], al ; ret
0x00000000005f8450 : adc al, 0 ; add byte ptr [rax], al ; ret 0
0x0000000000608448 : adc al, 0 ; add byte ptr [rax], al ; ret 1
0x0000000000618448 : adc al, 0 ; add byte ptr [rax], al ; ret 2
0x00000000005f4120 : adc al, 0 ; add byte ptr [rax], al ; sbb al, 0x7f ; add byte ptr [rax], al ; pop rax ; ret
0x0000000000505e1b : adc al, 0 ; ror dword ptr [rbx - 0x7ebee7ba], cl ; ret
0x000000000047a758 : adc al, 0x1c ; add eax, 0x5bc03100 ; ret
0x0000000000597764 : adc al, 0x1c ; ret
0x00000000004c3a9b : adc al, 0x24 ; mov rcx, r13 ; call rax
0x0000000000540b26 : adc al, 0x24 ; xor esi, esi ; xor ecx, ecx ; mov rdi, rbx ; call rax
0x00000000004465cf : adc al, 0x26 ; adc edx, dword ptr [rbx] ; xor eax, 0x35131326 ; ret
0x0000000000597791 : adc al, 0x32 ; ret
0x000000000057960e : adc al, 0x37 ; loope 0x579650 ; insd dword ptr [rdi], dx ; insd dword ptr [rdi], dx ; push rcx ; ret 0xe445
0x000000000057966e : adc al, 0x37 ; loope 0x5796b0 ; insd dword ptr [rdi], dx ; insd dword ptr [rdi], dx ; push rcx ; ret 0xe445
0x00000000005796ee : adc al, 0x37 ; loope 0x579730 ; insd dword ptr [rdi], dx ; insd dword ptr [rdi], dx ; push rcx ; ret 0xe445
0x00000000005797ae : adc al, 0x37 ; loope 0x5797f0 ; insd dword ptr [rdi], dx ; insd dword ptr [rdi], dx ; push rcx ; ret 0xe445
0x00000000005798ae : adc al, 0x37 ; loope 0x5798f0 ; insd dword ptr [rdi], dx ; insd dword ptr [rdi], dx ; push rcx ; ret 0xe445
0x0000000000579a2e : adc al, 0x37 ; loope 0x579a70 ; insd dword ptr [rdi], dx ; insd dword ptr [rdi], dx ; push rcx ; ret 0xe445
0x0000000000579c2e : adc al, 0x37 ; loope 0x579c70 ; insd dword ptr [rdi], dx ; insd dword ptr [rdi], dx ; push rcx ; ret 0xe445
0x0000000000579f2e : adc al, 0x37 ; loope 0x579f70 ; insd dword ptr [rdi], dx ; insd dword ptr [rdi], dx ; push rcx ; ret 0xe445
0x00000000004eaa66 : adc al, 0x39 ; ret 0xd75
0x000000000053956d : adc al, 0x41 ; call rdi
0x000000000061061c : adc al, 0x44 ; add al, byte ptr [rax] ; add byte ptr [rcx], bl ; call qword ptr [rax]
0x000000000046ab33 : adc al, 0x48 ; mov dword ptr [rbx], 0 ; pop rbx ; ret
0x000000000042d742 : adc al, 0x48 ; mov edx, eax ; jmp 0x42d74e
0x0000000000411ce7 : adc al, 0x50 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4820
0x000000000061141c : adc al, 0x52 ; add al, byte ptr [rax] ; jo 0x61146b ; call qword ptr [rbx]
0x000000000049c9dc : adc al, 0x5a ; ret
0x000000000046afb6 : adc al, 0x5b ; ret
0x000000000059adff : adc al, 0x62 ; ret
0x000000000059a46f : adc al, 0x72 ; ret 0xec77
0x0000000000432d8f : adc al, 1 ; add byte ptr [rax], al ; mov eax, 0x573f69 ; ret
0x00000000004baf26 : adc al, 1 ; add byte ptr [rcx], dh ; rcr byte ptr [rdx - 0x3d], 0x58 ; jmp r11
0x00000000004baea6 : adc al, 1 ; add byte ptr [rcx], dh ; rcr byte ptr [rdx - 0x3d], 0x58 ; jmp r9
0x00000000005a53fe : adc al, 5 ; ret
0x00000000005ba4f7 : adc al, al ; xchg ah, bl ; ret 0x4cef
0x00000000005aeea9 : adc al, byte ptr [rax + rbx*8 - 0x65] ; call qword ptr [r14]
0x00000000004ddfd4 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000436163 : adc al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000059bda8 : adc al, byte ptr [rax] ; mov esp, dr0 ; ret
0x00000000005e67e1 : adc al, byte ptr [rdx] ; add al, dh ; ret
0x00000000005e67d1 : adc al, byte ptr [rdx] ; add byte ptr [rax], ah ; ret
0x00000000005e67c1 : adc al, byte ptr [rdx] ; add byte ptr [rax], dl ; ret 0xffee
0x0000000000442105 : adc al, ch ; and eax, 0x89000000 ; ret
0x0000000000540d0d : adc al, ch ; fld qword ptr [rdx - 0xf] ; dec dword ptr [rax - 1] ; ret
0x00000000005418cd : adc al, ch ; in eax, dx ; out -5, eax ; dec dword ptr [rax - 1] ; ret
0x00000000004b164b : adc al, ch ; jmp qword ptr [rdi]
0x0000000000485dcd : adc al, ch ; or eax, 0x39000b3e ; ret
0x0000000000433837 : adc al, ch ; ret
0x0000000000420af8 : adc al, ch ; ret 0x598
0x00000000004f9f5f : adc al, ch ; stosd dword ptr [rdi], eax ; ret
0x0000000000537f1e : adc al, ch ; sub al, 0x2c ; dec dword ptr [rax - 0x77] ; ret
0x0000000000508cb7 : adc al, dh ; loope 0x508c91 ; ret
0x0000000000523ce7 : adc al, dh ; loope 0x523cc1 ; ret
0x0000000000537687 : adc al, dh ; loope 0x537661 ; ret
0x0000000000617780 : adc bh, ah ; hlt ; call qword ptr [rax]
0x0000000000617890 : adc bh, ah ; hlt ; call qword ptr [rcx]
0x000000000054b071 : adc bh, al ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0x00000000004731bb : adc bh, bh ; dec dword ptr [rax - 0x77] ; ret
0x00000000005e51d4 : adc bh, bh ; jmp 0x5e51da
0x00000000004f50fe : adc bh, bh ; lcall ptr [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0x0000000000441af6 : adc bh, bh ; ret
0x000000000051762c : adc bh, bh ; ret 0x8348
0x00000000004bc6d3 : adc bh, bh ; ror byte ptr [rax - 0x7b], 1 ; ror byte ptr [rdi], -0x7c ; ret 0
0x00000000005b6a5b : adc bh, byte ptr [rdi + 0x7c44912e] ; ret 0x2496
0x00000000005b2408 : adc bh, byte ptr [rdi] ; mov bh, 0x58 ; rcr byte ptr [rsi - 0x52] ; mov cl, 0x4d ; ret
0x0000000000558268 : adc bh, cl ; dec dword ptr [rax - 0x77] ; ret
0x00000000005eae95 : adc bh, dh ; call rax
0x00000000005e713c : adc bl, -0x11 ; jmp rax
0x00000000005eaa4c : adc bl, al ; idiv bh ; push 0x2000031b ; ret
0x00000000004ea860 : adc bl, al ; sub eax, edx ; ret
0x00000000004f221c : adc bl, bh ; lock dec dword ptr [rax - 0x77] ; ret 0xed31
0x00000000005b1308 : adc bl, bh ; xchg rax, r12 ; sahf ; ret 0x667b
0x00000000005a8bbb : adc bl, byte ptr [rbx] ; sbb al, 0x1e ; ret
0x00000000004f9bfa : adc bl, byte ptr [rdx - 0x76b70001] ; ret
0x00000000005938d4 : adc bl, cl ; in al, 0xa ; ret
0x000000000044d393 : adc bl, dh ; ret
0x0000000000532406 : adc bpl, r8b ; cli ; outsd dx, dword ptr [rsi] ; push rsi ; and ah, al ; ret 0x79
0x00000000005b0548 : adc byte ptr [r10], dil ; ret
0x00000000004ea85c : adc byte ptr [r11], r13b ; adc r11b, al ; sub eax, edx ; ret
0x00000000005466ae : adc byte ptr [r15], cl ; adc dword ptr [rbx], eax ; pop rbx ; ret
0x00000000004972b9 : adc byte ptr [r15], r9b ; adc dword ptr [rdi], eax ; ret
0x00000000004e5e25 : adc byte ptr [r8 + r8], r14b ; mov qword ptr [rsi], rax ; ret
0x0000000000548372 : adc byte ptr [r8 - 0x77], r9b ; ja 0x54838e ; ret
0x0000000000500ad4 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0x500ad7 ; ret
0x00000000004cc0a8 : adc byte ptr [r8 - 0x7d], cl ; ret
0x00000000004e8e8d : adc byte ptr [r9 + 0x63490c5f], r9b ; ret
0x00000000004be225 : adc byte ptr [r9 + r9*4 + 0x4f], r9b ; sbb bl, dh ; ret
0x000000000045312d : adc byte ptr [r9 - 0x77], cl ; ret 0x8d4c
0x000000000048241a : adc byte ptr [r9 - 0x77], r9b ; pop rbp ; sbb byte ptr [rbp - 0x77], cl ; ret
0x00000000004826db : adc byte ptr [r9 - 0x77], r9b ; push rbp ; sbb byte ptr [rbp - 0x77], cl ; ret
0x000000000040adff : adc byte ptr [rax + 0x16e8816], cl ; mov byte ptr [rsi + 2], cl ; ret
0x00000000004e14d5 : adc byte ptr [rax + 0x29], cl ; ret
0x00000000004c34ba : adc byte ptr [rax + 0x39], cl ; ret
0x00000000004066a5 : adc byte ptr [rax + 0x39], cl ; ret 0x5e7c
0x000000000059bdc1 : adc byte ptr [rax + 0x47], dh ; pop rdi ; sub ch, byte ptr [rax - 0x71] ; ret 0x88d0
0x00000000004cd82d : adc byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 1], 1 ; ret 0x894c
0x000000000043074c : adc byte ptr [rax + 0xb], bl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004231e0 : adc byte ptr [rax + 0xf], cl ; ret
0x000000000042a884 : adc byte ptr [rax + 1], bh ; pop rbx ; ret
0x0000000000541b03 : adc byte ptr [rax + 1], bh ; ret
0x00000000004e0102 : adc byte ptr [rax + 1], cl ; ret
0x00000000004e0eba : adc byte ptr [rax + 9], cl ; ret 0xb60f
0x00000000004e5db4 : adc byte ptr [rax + rax], dh ; mov qword ptr [rdx], rax ; ret
0x00000000004e5dea : adc byte ptr [rax + rax], dh ; mov qword ptr [rsi], rax ; ret
0x0000000000541dd1 : adc byte ptr [rax - 0x2916ffa3], bl ; ret
0x0000000000556a9e : adc byte ptr [rax - 0x3d], cl ; ret
0x00000000004d245c : adc byte ptr [rax - 0x49f0403d], al ; ret
0x00000000004d4cfd : adc byte ptr [rax - 0x73], cl ; and al, 0x18 ; ret
0x0000000000438a41 : adc byte ptr [rax - 0x73], cl ; push rsp ; and al, 0xc ; mov rdi, rbx ; call rax
0x00000000004e8a44 : adc byte ptr [rax - 0x75], cl ; cmp al, -0x18 ; mov rsi, r14 ; call rbx
0x00000000004ee75d : adc byte ptr [rax - 0x76d9dbac], cl ; ret 0xeac1
0x0000000000540a4c : adc byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000050af2a : adc byte ptr [rax - 0x77], cl ; fimul word ptr [rax - 0x77] ; ret 0xae8
0x00000000004f35cf : adc byte ptr [rax - 0x77], cl ; fisttp word ptr [rcx + rcx*4 - 0xa] ; call rax
0x00000000004b8624 : adc byte ptr [rax - 0x77], cl ; iretd ; mov rsi, rbx ; call rdx
0x0000000000548373 : adc byte ptr [rax - 0x77], cl ; ja 0x54838d ; ret
0x00000000004cdb68 : adc byte ptr [rax - 0x77], cl ; ret
0x00000000004901cf : adc byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000004cf271 : adc byte ptr [rax - 0x77], cl ; ret 0xc6e8
0x0000000000511c76 : adc byte ptr [rax - 0x77], cl ; ret 0xf48
0x0000000000535e60 : adc byte ptr [rax - 0x77fa3cac], cl ; insb byte ptr [rdi], dx ; ret
0x000000000049c71c : adc byte ptr [rax - 0x7b], cl ; leave ; je 0x49c737 ; mov rdi, rbx ; call rcx
0x0000000000500ad5 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0x500ad6 ; ret
0x00000000004cbd20 : adc byte ptr [rax - 0x7b], cl ; push qword ptr [rdi + rax + 0x31] ; imul al ; ret
0x00000000004417e9 : adc byte ptr [rax - 0x7cb700bf], cl ; ret 0x3b04
0x00000000004088c2 : adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000434988 : adc byte ptr [rax - 0x7d], cl ; ret 0x4414
0x000000000043a539 : adc byte ptr [rax - 0x7d], cl ; ret 0x4802
0x000000000047e1a7 : adc byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000000004817a1 : adc byte ptr [rax - 0x7d], cl ; ret 0x4820
0x0000000000447cdb : adc byte ptr [rax - 0x7d], cl ; ret 0x48f0
0x000000000047e215 : adc byte ptr [rax - 0x7d], cl ; ret 0x4920
0x00000000004add3d : adc byte ptr [rax - 0x7d], cl ; ret 0xb908
0x00000000004ef357 : adc byte ptr [rax - 0x7d], cl ; ret 0xbe20
0x00000000004a9f14 : adc byte ptr [rax - 0x7f], cl ; ret
0x0000000000611c10 : adc byte ptr [rax - 0xd], ch ; call qword ptr [rdi]
0x0000000000447c82 : adc byte ptr [rax - 1], cl ; ret
0x00000000004d1baf : adc byte ptr [rax - 1], cl ; ret 0xea39
0x00000000005ec054 : adc byte ptr [rax - 8], dh ; call rax
0x0000000000562394 : adc byte ptr [rax - 9], cl ; or byte ptr [rax + 1], cl ; ret
0x00000000005eb0e4 : adc byte ptr [rax - 9], dh ; call rax
0x0000000000562393 : adc byte ptr [rax - 9], r9b ; or byte ptr [rax + 1], cl ; ret
0x0000000000426645 : adc byte ptr [rax], 1 ; add byte ptr [rax], al ; ret
0x00000000005d6891 : adc byte ptr [rax], al ; adc ah, cl ; ror ah, 0xc ; ret 0xd832
0x00000000004c97e1 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005392bb : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x5392e5 ; ret
0x000000000053ed3c : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rax ; ret
0x0000000000436157 : adc byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000458fed : adc byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004a4b0f : adc byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; ret
0x000000000040cf8f : adc byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x19], cl ; mov edx, ebp ; call r14
0x0000000000462ade : adc byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8b49
0x000000000053e088 : adc byte ptr [rax], al ; add byte ptr [rcx], dh ; in eax, dx ; jmp 0x53e0c3
0x00000000004971d9 : adc byte ptr [rax], al ; je 0x4971ea ; mov rax, rbx ; pop rbx ; ret
0x0000000000497239 : adc byte ptr [rax], al ; je 0x49724a ; mov rax, rbx ; pop rbx ; ret
0x0000000000497299 : adc byte ptr [rax], al ; je 0x4972aa ; mov rax, rbx ; pop rbx ; ret
0x0000000000506d9e : adc byte ptr [rax], al ; ret 0x8a44
0x000000000050658d : adc byte ptr [rax], al ; ror dword ptr [rbx - 0x7ebee7ba], cl ; ret
0x00000000004948fe : adc byte ptr [rax], al ; sete al ; movzx eax, al ; ret
0x0000000000558659 : adc byte ptr [rax], al ; setne al ; movzx eax, al ; ret
0x00000000004ff2da : adc byte ptr [rbp + 0x2a], dh ; pop r9 ; jmp rax
0x000000000059f43a : adc byte ptr [rbp + 0x482e474c], 0x4b ; ret 0xb611
0x000000000047167e : adc byte ptr [rbp + 1], bh ; jmp 0x47164f
0x00000000004e451a : adc byte ptr [rbp + 9], al ; fadd qword ptr [rcx - 0x77] ; ret
0x00000000004b94f6 : adc byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 8 ; call rax
0x00000000005e7a14 : adc byte ptr [rbp - 0x10], dh ; jmp qword ptr [rax]
0x00000000005e5dec : adc byte ptr [rbp - 0x13], dh ; jmp rax
0x00000000004cc295 : adc byte ptr [rbp - 0x18], dh ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000005e2e04 : adc byte ptr [rbp - 0x19], ah ; call rax
0x00000000005e148c : adc byte ptr [rbp - 0x1e], dl ; call qword ptr [rax]
0x0000000000579b73 : adc byte ptr [rbp - 0x66d9a446], bh ; ret
0x000000000055eedc : adc byte ptr [rbp - 0x76b70003], ch ; ret
0x000000000042fa8c : adc byte ptr [rbp - 0x76b7fff3], ch ; ret
0x0000000000452596 : adc byte ptr [rbp - 0x79], dh ; movups xmmword ptr [r9], xmm3 ; ret
0x0000000000406280 : adc byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; ret
0x0000000000504631 : adc byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; jmp rax
0x00000000004049c6 : adc byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040b3bd : adc byte ptr [rbx + 0x41], bl ; pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000047db3c : adc byte ptr [rbx + 0x4c891fe1], al ; ret 0x4804
0x00000000004ddbb4 : adc byte ptr [rbx + 0x4d], dh ; add al, ch ; ret
0x000000000048fdcc : adc byte ptr [rbx + rcx*4 + 0x44], cl ; and al, 0x18 ; call r12
0x00000000005e5334 : adc byte ptr [rbx - 0x14], al ; jmp qword ptr [rax]
0x0000000000555611 : adc byte ptr [rbx - 0x24], dh ; movdqu xmmword ptr [r8], xmm6 ; ret
0x000000000045cf0c : adc byte ptr [rbx - 0x3d], bl ; nop ; mov eax, 0x81fb70 ; ret
0x000000000045c4ed : adc byte ptr [rbx - 0x3d], bl ; ret
0x0000000000595965 : adc byte ptr [rbx - 0x74], al ; ret 0xc095
0x000000000054b4a4 : adc byte ptr [rbx - 0x76b7ff7e], ah ; ja 0x54b4e4 ; ret
0x00000000004a41ef : adc byte ptr [rbx - 0x87dba4], cl ; ret
0x00000000005a9c74 : adc byte ptr [rbx], bl ; cmc ; ret 0x1d0d
0x00000000004ea85d : adc byte ptr [rbx], ch ; adc r11b, al ; sub eax, edx ; ret
0x00000000005e5b44 : adc byte ptr [rbx], ch ; in eax, dx ; call qword ptr [rax]
0x00000000005d6834 : adc byte ptr [rbx], dl ; add edx, dword ptr [rbx] ; rcl dl ; ret 0xec12
0x00000000005d7036 : adc byte ptr [rbx], dl ; ret 0xd012
0x0000000000512604 : adc byte ptr [rcx + 0x21], cl ; ret 0x894c
0x00000000004e1566 : adc byte ptr [rcx + 0x29], cl ; ret
0x00000000004e1370 : adc byte ptr [rcx + 0x29], cl ; ret 0xceb
0x000000000046f803 : adc byte ptr [rcx + 0x48d689f7], cl ; mov edx, ecx ; pop rcx ; jmp rax
0x00000000004e8e8e : adc byte ptr [rcx + 0x63490c5f], cl ; ret
0x00000000004d5b18 : adc byte ptr [rcx + 0xf], al ; push rdi ; in al, 0xf ; push rdi ; ret
0x0000000000561d28 : adc byte ptr [rcx + 1], cl ; ret
0x0000000000561e7e : adc byte ptr [rcx + 1], cl ; ret 0x1148
0x000000000044d417 : adc byte ptr [rcx + 9], al ; ret 0x8141
0x00000000004be226 : adc byte ptr [rcx + rcx*4 + 0x4f], cl ; sbb bl, dh ; ret
0x00000000004be45a : adc byte ptr [rcx + rcx*4 + 0x7f], cl ; sbb bl, dh ; ret
0x000000000049b0ff : adc byte ptr [rcx + rcx*4 - 0x17], cl ; mov r9, rbx ; call rax
0x000000000054827c : adc byte ptr [rcx + rcx*4 - 2], cl ; mov rdx, r14 ; call rax
0x00000000005e4a9c : adc byte ptr [rcx - 0x15], dl ; call qword ptr [rax]
0x00000000005e408c : adc byte ptr [rcx - 0x16], al ; call rax
0x00000000005a0fea : adc byte ptr [rcx - 0x18bf7c53], dl ; ret
0x00000000005f10d0 : adc byte ptr [rcx - 0x1c], dl ; jmp qword ptr [rcx]
0x00000000004e3d6f : adc byte ptr [rcx - 0x3ea57d87], bl ; ret 0x4105
0x0000000000462a89 : adc byte ptr [rcx - 0x75], cl ; sbb byte ptr [r8 + 0x29], r9b ; ret 0x1d75
0x000000000045945c : adc byte ptr [rcx - 0x76b70006], cl ; ret
0x000000000048241b : adc byte ptr [rcx - 0x77], cl ; pop rbp ; sbb byte ptr [rbp - 0x77], cl ; ret
0x00000000004826dc : adc byte ptr [rcx - 0x77], cl ; push rbp ; sbb byte ptr [rbp - 0x77], cl ; ret
0x000000000045312e : adc byte ptr [rcx - 0x77], cl ; ret 0x8d4c
0x00000000005052e4 : adc byte ptr [rcx - 0x7d], al ; stc ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x00000000004df57a : adc byte ptr [rcx - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000614bc0 : adc byte ptr [rcx - 0xc], al ; call qword ptr [rdx]
0x0000000000615d50 : adc byte ptr [rcx - 0xc], bh ; jmp qword ptr [rdi]
0x0000000000445db5 : adc byte ptr [rcx - 9], cl ; ret 0xfff0
0x00000000005e12dc : adc byte ptr [rcx], -0x1e ; call rax
0x00000000006070d0 : adc byte ptr [rcx], ah ; out dx, al ; call qword ptr [rax]
0x00000000005e2a59 : adc byte ptr [rcx], al ; add al, al ; add al, -0x1a ; jmp rax
0x0000000000432417 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; mov eax, 0x57386b ; ret
0x00000000004265f3 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x0000000000483c52 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x00000000005515bc : adc byte ptr [rcx], bh ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004a41fd : adc byte ptr [rcx], bh ; ret
0x0000000000468f7b : adc byte ptr [rcx], bh ; ret 0x8c0f
0x0000000000610680 : adc byte ptr [rcx], bl ; call qword ptr [rsi]
0x00000000004bd822 : adc byte ptr [rcx], bl ; ret
0x0000000000454ec4 : adc byte ptr [rcx], cl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004bbd89 : adc byte ptr [rcx], cl ; ret
0x000000000045e3b0 : adc byte ptr [rcx], cl ; ret 0xb60f
0x00000000004d9054 : adc byte ptr [rcx], cl ; ret 0xf40
0x0000000000480267 : adc byte ptr [rcx], cl ; ret 0xf41
0x00000000004684df : adc byte ptr [rcx], dh ; imul cl ; ret
0x00000000004138b8 : adc byte ptr [rcx], dh ; leave ; mov rdi, rbx ; call rax
0x0000000000599cb0 : adc byte ptr [rdi + 0x69942721], al ; ret
0x0000000000452581 : adc byte ptr [rdi + rcx + 0x57], al ; ret 0xf66
0x000000000049090a : adc byte ptr [rdi + rcx - 0x49], al ; rol dword ptr [rbp + 0x31], 1 ; ret 0x3144
0x00000000005e781c : adc byte ptr [rdi - 0x10], cl ; call rax
0x00000000005e5e4c : adc byte ptr [rdi - 0x13], dh ; call qword ptr [rax]
0x00000000005e54a4 : adc byte ptr [rdi - 0x14], bl ; call rax
0x00000000005e3aac : adc byte ptr [rdi - 0x17], dh ; jmp rax
0x0000000000599806 : adc byte ptr [rdi], ah ; xor al, 0xffffffffffffffb0 ; ret 0xa613
0x0000000000463e78 : adc byte ptr [rdi], cl ; adc dword ptr [rax], eax ; pop rdx ; ret
0x00000000005466af : adc byte ptr [rdi], cl ; adc dword ptr [rbx], eax ; pop rbx ; ret
0x00000000004972ba : adc byte ptr [rdi], cl ; adc dword ptr [rdi], eax ; ret
0x0000000000565200 : adc byte ptr [rdi], cl ; pop rsi ; add byte ptr [rax - 0x77], cl ; ret 0x94e8
0x000000000040a0fc : adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8948
0x000000000045598b : adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc284
0x00000000005e49f4 : adc byte ptr [rdi], dh ; jmp 0x5e49fa
0x00000000004330ca : adc byte ptr [rdi], dl ; ret
0x00000000005e63cc : adc byte ptr [rdx - 0x12], dh ; jmp rax
0x00000000005f79e0 : adc byte ptr [rdx - 0x18], bh ; call rax
0x00000000005e85b4 : adc byte ptr [rdx - 0xf], cl ; call qword ptr [rax]
0x0000000000543e8c : adc byte ptr [rdx - 6], ch ; dec dword ptr [rax - 0x77] ; ret
0x000000000060d22d : adc byte ptr [rdx], al ; add al, ah ; add al, -0x10 ; jmp qword ptr [rdi]
0x000000000060d245 : adc byte ptr [rdx], al ; add al, bh ; add al, -0x10 ; jmp qword ptr [rdi]
0x000000000042eab3 : adc byte ptr [rdx], al ; add byte ptr [rax], al ; ret
0x0000000000618610 : adc byte ptr [rdx], al ; cmc ; jmp qword ptr [rdi]
0x0000000000549bd0 : adc byte ptr [rdx], bh ; add byte ptr [rax - 1], cl ; ret
0x00000000005b0549 : adc byte ptr [rdx], bh ; ret
0x00000000005e61cc : adc byte ptr [rdx], ch ; out dx, al ; call rax
0x00000000004d44d6 : adc byte ptr [rdx], dh ; adc ecx, dword ptr [rax - 1] ; ret
0x00000000004b915c : adc byte ptr [rdx], dh ; add dword ptr [rax], eax ; xor eax, eax ; pop rdx ; ret
0x0000000000607360 : adc byte ptr [rdx], dh ; out dx, al ; jmp rsi
0x00000000005a8185 : adc byte ptr [rsi + 0x55], dh ; stc ; ret
0x00000000005553e2 : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rax], al ; shl dword ptr [rsi + 0xf], -0x11 ; ret 0xc3f3
0x00000000005055fe : adc byte ptr [rsi + 0xf], ah ; jmp 0x5055c9
0x0000000000505b39 : adc byte ptr [rsi + 0xf], ah ; jmp 0x505b04
0x00000000004d5c43 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; ret
0x0000000000554ec9 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; ret 0x8d4c
0x0000000000554f2d : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; ret 0xf66
0x00000000005af0fe : adc byte ptr [rsi + rcx*2 - 3], ch ; jbe 0x5af115 ; pop qword ptr [rbx - 0x72] ; ret
0x000000000048f381 : adc byte ptr [rsi], al ; movups xmmword ptr [rdi], xmm0 ; ret
0x00000000005b1a2d : adc byte ptr [rsi], cl ; mov edx, 0x4631a3c4 ; mov ebx, dword ptr [rcx] ; ret 0xa260
0x00000000005a0fe9 : adc byte ptr ds:[rcx - 0x18bf7c53], dl ; ret
0x0000000000532407 : adc ch, al ; cli ; outsd dx, dword ptr [rsi] ; push rsi ; and ah, al ; ret 0x79
0x00000000004492ae : adc ch, al ; cmp edi, ebp ; ret 0xc3c4
0x0000000000487c27 : adc ch, al ; ret
0x00000000004d61b9 : adc ch, al ; stc ; out dx, eax ; ret
0x000000000060b2e9 : adc ch, bh ; call rdx
0x0000000000482867 : adc ch, bh ; shl esi, -0x4d ; ret 0x5688
0x0000000000603999 : adc ch, ch ; jmp qword ptr [rcx]
0x000000000057d2af : adc ch, dh ; cld ; jmp qword ptr [rcx]
0x0000000000598e40 : adc ch, dh ; ret
0x000000000044adab : adc cl, al ; ret 0x105
0x00000000005485a1 : adc cl, byte ptr [rax - 0x73] ; xor al, 0x24 ; mov rdi, rdx ; call rax
0x0000000000540c4b : adc cl, byte ptr [rax - 0x73] ; xor al, 0x24 ; xor edx, edx ; call rax
0x000000000044082a : adc cl, byte ptr [rax - 0x75] ; cmp al, 0x24 ; mov rsi, r14 ; call r15
0x0000000000470d47 : adc cl, byte ptr [rax - 0x7d] ; ret
0x000000000047e491 : adc cl, byte ptr [rax - 0x7d] ; ret 0x4820
0x00000000004b6735 : adc cl, byte ptr [rax - 1] ; ret
0x0000000000548452 : adc cl, byte ptr [rcx + rcx*4 - 9] ; call rax
0x00000000005a99e2 : adc cl, byte ptr [rcx - 0x78] ; scasd eax, dword ptr [rdi] ; ret
0x0000000000560a40 : adc cl, ch ; stosb byte ptr [rdi], al ; add byte ptr gs:[rax], al ; xor eax, eax ; ret
0x000000000054d709 : adc dh, 0x54 ; add byte ptr [rax - 0x77], cl ; ret 0xdbe9
0x00000000005e73b5 : adc dh, al ; call rax
0x00000000005eaea5 : adc dh, bh ; call qword ptr [rax]
0x000000000060f899 : adc dh, bl ; call qword ptr [rax]
0x00000000004e5ba4 : adc dh, byte ptr [rax + rax] ; jmp rax
0x00000000004e5c1c : adc dh, byte ptr [rax + rax] ; mov eax, 1 ; ret
0x00000000005b473c : adc dh, byte ptr [rax + rbp*4 - 0xc] ; ret 0x82f4
0x00000000005a2925 : adc dh, byte ptr [rbp - 0x63] ; jb 0x5a2930 ; ret 0x4a9d
0x000000000059595f : adc dh, byte ptr [rdi + rcx + 0x6e] ; jno 0x59598e ; adc byte ptr [rbx - 0x74], al ; ret 0xc095
0x00000000004cb1c9 : adc dh, byte ptr [rsi] ; add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp - 0x11] ; pop rax ; ret
0x00000000005552fb : adc dh, cl ; ret
0x000000000047000d : adc dh, dh ; ret 0x7401
0x000000000053f643 : adc dh, dh ; ret 0x7406
0x0000000000593d61 : adc dh, dl ; out -0x2e, eax ; jo 0x593cfc ; ret 0x65aa
0x0000000000560f2b : adc dil, dil ; ret
0x00000000005eabf4 : adc dl, -0xa ; call qword ptr [rax]
0x00000000004d6bcc : adc dl, -8 ; dec dword ptr [rax - 0x77] ; ret
0x00000000005eaa44 : adc dl, al ; idiv bh ; sbb eax, dword ptr [rbx] ; add byte ptr [rax], dl ; ret
0x00000000005e67c4 : adc dl, al ; out dx, al ; dec dword ptr [rax - 0x5ffffdee] ; ret 0xffee
0x00000000005d762c : adc dl, byte ptr [rax - 0xfcc7d6e] ; ret
0x000000000059a996 : adc dl, byte ptr [rbp + 0x6b0cc9ec] ; ret 0x1320
0x000000000059482e : adc dl, byte ptr [rbx - 0x7b] ; jmp 0xffffffffc2c24a4f
0x00000000005783b1 : adc dl, byte ptr [rbx] ; imul dword ptr [rsi - 2] ; lodsd eax, dword ptr [rsi] ; jmp 0x578428
0x0000000000594ee8 : adc dl, byte ptr [rdx + 0x3d394030] ; xchg eax, esp ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xd0e1
0x00000000005a2ffc : adc dl, byte ptr [rsp - 0x5b] ; pop rdx ; loop 0x5a306a ; ret
0x00000000005a2ffb : adc dl, byte ptr [rsp - 0x5b] ; pop rdx ; loop 0x5a306b ; ret
0x000000000057e0f3 : adc dword ptr [r10 - 0x38], -0x4a ; sti ; lodsb al, byte ptr [rsi] ; ret 0x763c
0x00000000005aecf6 : adc dword ptr [r14], 0x6824f43f ; xchg eax, edi ; ret
0x0000000000463e76 : adc dword ptr [rax + 0x10], eax ; movups xmmword ptr [rax], xmm0 ; pop rdx ; ret
0x0000000000429f2c : adc dword ptr [rax + 0x18], eax ; movups xmmword ptr [rax + 8], xmm0 ; pop rdx ; ret
0x000000000042dfb3 : adc dword ptr [rax + 0x56ef41], edi ; ret
0x00000000004330f2 : adc dword ptr [rax + 0x574105], edi ; ret
0x00000000005a6421 : adc dword ptr [rax + 0x58e98f71], ebx ; mov ecx, esp ; ret
0x0000000000432fb2 : adc dword ptr [rax + 0x5cc907], edi ; ret
0x000000000057cef9 : adc dword ptr [rax + 0x5d], ebp ; pop rcx ; ret
0x00000000004cd958 : adc dword ptr [rax + 2], 0 ; add byte ptr [rax - 0x39], cl ; ret
0x00000000004cc3fc : adc dword ptr [rax + 2], 0 ; add byte ptr [rcx + rcx*4 + 0x64], cl ; ret
0x00000000004cc408 : adc dword ptr [rax + 2], 0 ; add byte ptr [rcx + rcx*4 - 0x44], cl ; ret
0x00000000004569c9 : adc dword ptr [rax + 8], eax ; pop rbx ; ret
0x0000000000429f30 : adc dword ptr [rax + 8], eax ; pop rdx ; ret
0x00000000004d8f89 : adc dword ptr [rax + 9], esi ; ret 0x9489
0x000000000048c0da : adc dword ptr [rax + rax], eax ; test rax, rax ; je 0x48c0ed ; pop rax ; ret
0x00000000004e5c9c : adc dword ptr [rax + rax], esi ; mov eax, 1 ; ret
0x00000000004e5d5b : adc dword ptr [rax + rax], esi ; mov qword ptr [rdx], rax ; ret
0x000000000041f795 : adc dword ptr [rax - 0x77], ecx ; fucompi st(0) ; ret 0xff94
0x0000000000440a4e : adc dword ptr [rax - 0x77], ecx ; ret 0xc148
0x000000000050dadd : adc dword ptr [rax - 0x7d], ecx ; ret 0x4820
0x0000000000442d2b : adc dword ptr [rax - 1], ecx ; ret
0x0000000000483c51 : adc dword ptr [rax], 1 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x00000000004b953d : adc dword ptr [rax], eax ; add byte ptr [rax + 1], bh ; ret
0x000000000043615d : adc dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000412bbb : adc dword ptr [rax], eax ; add byte ptr [rcx], dh ; fucomi st(1) ; ret
0x0000000000425feb : adc dword ptr [rax], eax ; mov eax, ebp ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000049bde0 : adc dword ptr [rax], eax ; mov rcx, rax ; mov rax, rcx ; pop rdx ; ret
0x0000000000463e7a : adc dword ptr [rax], eax ; pop rdx ; ret
0x00000000005af3dd : adc dword ptr [rax], ebp ; xchg eax, ebx ; call qword ptr [rcx]
0x0000000000480f66 : adc dword ptr [rax], ecx ; mov eax, 1 ; pop rbx ; ret
0x00000000005466ad : adc dword ptr [rbx + 0x10], eax ; movups xmmword ptr [rbx], xmm0 ; pop rbx ; ret
0x000000000047c7e8 : adc dword ptr [rbx + 0x5d], ebx ; ret
0x00000000004bd37d : adc dword ptr [rbx + 0xd0], eax ; pop rbx ; ret
0x000000000055e68a : adc dword ptr [rbx + 0xe8], eax ; pop rbx ; ret
0x00000000004088be : adc dword ptr [rbx + rcx*4 + 0x73], ecx ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000055ffb2 : adc dword ptr [rbx], eax ; add rsp, 8 ; pop rbx ; pop r14 ; ret
0x00000000004976a4 : adc dword ptr [rbx], eax ; mov eax, 1 ; pop rbx ; ret
0x00000000005466b1 : adc dword ptr [rbx], eax ; pop rbx ; ret
0x000000000049ccd8 : adc dword ptr [rcx + rcx*4 - 0xa], ecx ; call rax
0x0000000000547069 : adc dword ptr [rcx + rcx*4 - 9], ecx ; call rax
0x00000000005998ce : adc dword ptr [rcx - 0x11], eax ; ret 0x3a29
0x00000000005b44ba : adc dword ptr [rcx - 0x4820b9a4], edi ; int 0x80
0x00000000005b6f9f : adc dword ptr [rcx - 0x63], 0xdbf37a85 ; ret
0x00000000004e4274 : adc dword ptr [rcx - 0x77], eax ; ret
0x00000000005b6197 : adc dword ptr [rcx], 0x5e ; xor dword ptr [rbx], ebp ; jrcxz 0x5b616f ; push rdi ; ret
0x00000000005d6a55 : adc dword ptr [rcx], eax ; adc esp, eax ; ret
0x000000000048ee03 : adc dword ptr [rcx], eax ; add byte ptr [rax], al ; call rax
0x000000000045259b : adc dword ptr [rcx], ebx ; ret
0x0000000000454d8e : adc dword ptr [rcx], ecx ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004972b8 : adc dword ptr [rdi + 0x10], eax ; movups xmmword ptr [rdi], xmm0 ; ret
0x000000000042a040 : adc dword ptr [rdi + 0x28], eax ; ret
0x00000000004ca67b : adc dword ptr [rdi + 0x68], eax ; ret
0x00000000004ca677 : adc dword ptr [rdi + 0x78], eax ; movups xmmword ptr [rdi + 0x68], xmm0 ; ret
0x000000000048c4bb : adc dword ptr [rdi + 5], esp ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005b2e19 : adc dword ptr [rdi - 0x60], ebp ; xor dword ptr [rbp - 0x1ab24fd0], edx ; ret 0xf505
0x00000000004090d3 : adc dword ptr [rdi], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000454717 : adc dword ptr [rdi], eax ; add rsp, 8 ; ret
0x000000000048f384 : adc dword ptr [rdi], eax ; ret
0x00000000004d599d : adc dword ptr [rdi], ecx ; push rdi ; ret
0x00000000005ae352 : adc dword ptr [rdx + 0x46056b6d], eax ; ret
0x000000000057e0f4 : adc dword ptr [rdx - 0x38], -0x4a ; sti ; lodsb al, byte ptr [rsi] ; ret 0x763c
0x000000000060d345 : adc dword ptr [rdx], eax ; add al, cl ; or eax, esi ; jmp qword ptr [rdi]
0x00000000005b6198 : adc dword ptr [rsi + 0x31], ebx ; sub esp, ebx ; leave ; push rdi ; ret
0x00000000004524d5 : adc dword ptr [rsi + 0x40], esi ; movups xmmword ptr [rsi + 0x50], xmm7 ; ret
0x00000000004524d9 : adc dword ptr [rsi + 0x50], edi ; ret
0x0000000000448e4b : adc dword ptr [rsi + 0x50], esi ; lea rsi, qword ptr [rsi + 0x60] ; ret
0x00000000004536dc : adc dword ptr [rsi - 0x10], edx ; lea rsp, qword ptr [rbp] ; pop rbp ; ret
0x00000000005a06ed : adc dword ptr [rsi - 0x78], eax ; ret
0x00000000005aecf7 : adc dword ptr [rsi], 0x6824f43f ; xchg eax, edi ; ret
0x0000000000453e86 : adc dword ptr [rsi], edx ; lea rsp, qword ptr [rbp] ; pop rbp ; ret
0x00000000004518ed : adc dword ptr [rsi], edx ; ret
0x00000000004bd37e : adc eax, 0 ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000448096 : adc eax, 0x154c8800 ; add byte ptr [rax - 1], cl ; ret 0x8348
0x000000000057dd51 : adc eax, 0x1b2c1c5c ; jb 0x57dd56 ; call rdx
0x0000000000599ac5 : adc eax, 0x1d2136be ; sub eax, edi ; ret 0x6dc0
0x0000000000599803 : adc eax, 0x2710841a ; xor al, 0xffffffffffffffb0 ; ret 0xa613
0x000000000043307b : adc eax, 0x42b84575 ; xorps xmm0, xmmword ptr [rax] ; ret
0x0000000000441687 : adc eax, 0x48000a92 ; add esp, 0x28 ; ret
0x000000000049e628 : adc eax, 0x4800585c ; mov edi, ebx ; call 0x4ca8a9
0x00000000004b8206 : adc eax, 0x48ff894c ; mov ebp, edx ; call rcx
0x00000000004f3a47 : adc eax, 0x48fffa2d ; mov eax, dword ptr [rbx + 0x20] ; pop rbx ; ret
0x0000000000577dfa : adc eax, 0x54a41d82 ; jnp 0x577dbf ; pop rcx ; pop rdx ; ret 0xd539
0x00000000004cbf57 : adc eax, 0x5a003605 ; ret
0x000000000046aaf7 : adc eax, 0x5b0007b8 ; pop r14 ; pop rbp ; ret
0x000000000057e51f : adc eax, 0x66626c1c ; ret 0x7154
0x00000000005a449a : adc eax, 0x699a1c2d ; and ebp, edi ; cmpsd dword ptr [rsi], dword ptr [rdi] ; xlatb ; ret 0x779c
0x000000000048e6b2 : adc eax, 0x88e8 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004f0b62 : adc eax, 0x89483e75 ; fucompi st(0) ; ret
0x00000000005585f2 : adc eax, 0x8948fffe ; ret
0x00000000005b57f7 : adc eax, 0x95fb1887 ; mov cl, ah ; int 0xc3
0x000000000059da3e : adc eax, 0xa72d001e ; ret
0x00000000005b111a : adc eax, 0xad49bdbd ; ret
0x0000000000596afe : adc eax, 0xadf8c391 ; pop rdi ; ret 0xd710
0x00000000004bae26 : adc eax, 0xc0310001 ; pop rdx ; ret
0x00000000004fad9c : adc eax, 0xc031fffd ; pop rbx ; ret
0x0000000000426e65 : adc eax, 0xc3830014 ; add ecx, dword ptr [rax + 0x63] ; ret
0x00000000005b05b7 : adc eax, 0xd707d642 ; sub bl, bh ; ret
0x00000000004596ed : adc eax, 0xffd1ede8 ; dec dword ptr [rax - 0x77] ; ret
0x00000000004eb3e6 : adc eax, 0xfff964e8 ; dec dword ptr [rax - 0x77] ; ret
0x00000000005b41ad : adc eax, dword ptr [rax - 2] ; ret
0x0000000000460227 : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000055fef9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x00000000004360f9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000005176a9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; xor eax, eax ; pop rdx ; ret
0x00000000004e3c52 : adc eax, dword ptr [rcx + 0x31] ; ret 0x2145
0x00000000004d4b8c : adc eax, dword ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004bafa6 : adc eax, dword ptr [rcx] ; add byte ptr [rcx], dh ; rcr byte ptr [rdx - 0x3d], 0x58 ; jmp r9
0x0000000000460226 : adc eax, dword ptr ss:[rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000493c74 : adc eax, ebp ; div byte ptr [rax - 3] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000493c00 : adc eax, ebp ; push 0x71 ; std ; dec dword ptr [rax - 0x77] ; ret
0x00000000004b732e : adc eax, ebp ; sbb al, 0x38 ; sti ; dec dword ptr [rax - 0x77] ; ret
0x0000000000441bce : adc eax, ebp ; sbb al, 0x7a ; str word ptr [rax - 0x77] ; ret
0x0000000000493c36 : adc eax, ebp ; xor al, 0x71 ; std ; dec dword ptr [rax - 0x77] ; ret
0x00000000005e7375 : adc eax, esi ; call qword ptr [rax]
0x00000000005e7325 : adc eax, esi ; jmp qword ptr [rax]
0x00000000005e7365 : adc eax, esi ; jmp rax
0x00000000005b7ea2 : adc ebp, dword ptr [rsi] ; adc ecx, ecx ; ret 0x15a3
0x00000000005f6b01 : adc ebp, eax ; jmp qword ptr [rsi]
0x00000000005095e9 : adc ebp, ebx ; std ; dec dword ptr [rax - 0x77] ; ret
0x00000000005a294d : adc ebx, dword ptr [rdx] ; std ; cmp byte ptr [rax - 0x2b], bh ; push rdi ; ret 0xb9d9
0x0000000000488e56 : adc ebx, eax ; ret
0x00000000005b080e : adc ebx, ecx ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cli ; ret 0x3c61
0x000000000060f861 : adc ebx, esi ; call qword ptr [rcx]
0x0000000000507ebd : adc ebx, esp ; mov esp, 0xc1418f1b ; ret 0x4505
0x0000000000507d72 : adc ebx, esp ; mov esp, 0xc1418f1b ; ret 0x450e
0x000000000046d01c : adc ecx, dword ptr [rax - 0x75] ; add cl, byte ptr [rax - 0x77] ; add dword ptr [rax - 0x7d], ecx ; ret 0x4820
0x000000000050d598 : adc ecx, dword ptr [rax - 0x77] ; fucompi st(0) ; call rsp
0x0000000000428f4d : adc ecx, dword ptr [rax - 0x77] ; ret 0xc031
0x000000000048fbbe : adc ecx, dword ptr [rax - 0x7d] ; ret 0x4810
0x00000000004628d2 : adc ecx, dword ptr [rax - 0x7d] ; ret 0x48fc
0x000000000047fc82 : adc ecx, dword ptr [rax - 1] ; ret
0x000000000048fbe7 : adc ecx, dword ptr [rax - 1] ; ret 0x3948
0x00000000005aaa3b : adc ecx, dword ptr [rbp - 0x66aec903] ; ret
0x00000000005b2b14 : adc ecx, dword ptr [rbx - 0x5c] ; cmp dword ptr [rbp - 0x59], edi ; ret
0x00000000004782df : adc ecx, dword ptr [rbx - 0x7cb7d7bd] ; ret
0x00000000004b3b9b : adc ecx, dword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005a2305 : adc ecx, dword ptr [rbx] ; call qword ptr [rsi]
0x00000000005d74ee : adc ecx, dword ptr [rdi] ; or cl, al ; ret 0x2cca
0x00000000005a173b : adc ecx, dword ptr [rdi] ; ret 0x3453
0x00000000005843dc : adc ecx, ebx ; ret
0x00000000005b7ea4 : adc ecx, ecx ; ret 0x15a3
0x00000000005962ed : adc edi, 0x2c208dfd ; pop rbp ; ret
0x00000000004aaf5c : adc edi, dword ptr [r8] ; add byte ptr [rax], al ; pop rax ; ret
0x00000000004aaf5d : adc edi, dword ptr [rax] ; add byte ptr [rax], al ; pop rax ; ret
0x00000000005d4fa1 : adc edi, eax ; not byte ptr [rax + 0x6e73eef] ; ret
0x000000000055818b : adc edi, ecx ; dec dword ptr [rax - 0x77] ; ret
0x0000000000552a4d : adc edi, edi ; ret
0x0000000000598f84 : adc edi, edi ; ret 0xa4e6
0x00000000004c2e4c : adc edi, edx ; dec dword ptr [rax - 0x77] ; ret
0x00000000005ac01b : adc edx, dword ptr [rbp + 7] ; ret 0xa3cf
0x00000000004465d5 : adc edx, dword ptr [rbx] ; xor eax, 0x2fececc3 ; ret
0x00000000004465d1 : adc edx, dword ptr [rbx] ; xor eax, 0x35131326 ; ret
0x00000000004465d4 : adc edx, dword ptr es:[rbx] ; xor eax, 0x2fececc3 ; ret
0x00000000004465d0 : adc edx, dword ptr es:[rbx] ; xor eax, 0x35131326 ; ret
0x00000000005b7061 : adc edx, edx ; out dx, eax ; ret 0xd875
0x00000000005e12dd : adc edx, esp ; call rax
0x0000000000541359 : adc esi, dword ptr [rax - 0x3fce0008] ; pop rdx ; ret
0x000000000057da33 : adc esi, dword ptr [rdx - 0x4d] ; call rbx
0x00000000004465d6 : adc esi, dword ptr [rip + 0x2fececc3] ; ret
0x00000000004465d2 : adc esi, dword ptr [rip + 0x35131326] ; ret
0x00000000005e7425 : adc esi, eax ; jmp qword ptr [rax]
0x00000000005e7465 : adc esi, eax ; jmp rax
0x00000000005a0d88 : adc esi, ebp ; ret 0xb687
0x00000000005ea0f5 : adc esi, esi ; jmp rax
0x000000000048ca3b : adc esi, esi ; ret
0x000000000053f3a0 : adc esi, esi ; ret 0x7501
0x000000000053ee46 : adc esi, esi ; ret 0x7506
0x000000000041d168 : adc esi, esi ; ret 0xf80
0x0000000000598d38 : adc esp, dword ptr [rax + rsi*8 - 0x73] ; sub dword ptr [rsi], esi ; ret 0xfa3e
0x000000000045260d : adc esp, dword ptr [rax] ; mov r10, rax ; jmp 0x452624
0x0000000000507af1 : adc esp, dword ptr [rcx - 0x76912615] ; ret
0x00000000004d5f18 : adc esp, eax ; jrcxz 0x4d5f9a ; ret 0xc400
0x00000000004d5f98 : adc esp, eax ; jrcxz 0x4d601a ; ret 0xc400
0x000000000044901c : adc esp, eax ; ret
0x000000000048df5b : adc esp, esp ; add eax, dword ptr [rax] ; xor eax, eax ; pop rdx ; ret
0x000000000057cb18 : adc esp, esp ; mov dr0, word ptr [rbp + rbx*2 + 0x404bff34] ; ret 0xfd45
0x00000000004ea85f : adc r11b, al ; sub eax, edx ; ret
0x0000000000520411 : adc r11b, r14b ; ret
0x000000000044d392 : adc r11b, sil ; ret
0x000000000045260c : adc r12, qword ptr [rax] ; mov r10, rax ; jmp 0x452625
0x00000000005271ef : adc r12b, al ; ret
0x00000000005293c7 : adc r12b, r8b ; sar dword ptr [rcx + 0x6e], 0x51 ; adc ah, al ; ret
0x0000000000508cb6 : adc r8b, r14b ; loope 0x508c92 ; ret
0x0000000000523ce6 : adc r8b, r14b ; loope 0x523cc2 ; ret
0x0000000000537686 : adc r8b, r14b ; loope 0x537662 ; ret
0x0000000000426e64 : adc rax, -0x3c7cffec ; add ecx, dword ptr [rax + 0x63] ; ret
0x0000000000448095 : adc rax, 0x154c8800 ; add byte ptr [rax - 1], cl ; ret 0x8348
0x00000000005e73b4 : adc sil, al ; call rax
0x00000000005ef4d0 : add ah, -0x1d ; call qword ptr [rbx]
0x0000000000600deb : add ah, ah ; add qword ptr [r8], rax ; xor esp, ebp ; jmp qword ptr [rbx]
0x0000000000617080 : add ah, ah ; hlt ; call qword ptr [rsi]
0x0000000000616feb : add ah, ah ; lodsd eax, dword ptr [rsi] ; add al, byte ptr [rax] ; shl bl, 1 ; hlt ; call qword ptr [rsi]
0x0000000000611eeb : add ah, ah ; pop rsp ; add al, byte ptr [rax] ; loopne 0x611f63 ; call qword ptr [rdi]
0x00000000006013eb : add ah, ah ; push rcx ; add dword ptr [rax], eax ; add byte ptr [rbx - 0x14], bl ; jmp rcx
0x00000000005f84eb : add ah, ah ; ret 0
0x00000000006184eb : add ah, ah ; ret 2
0x000000000060bbeb : add ah, ah ; stc ; add dword ptr [rax], eax ; nop ; out dx, eax ; call qword ptr [rbx]
0x00000000006047eb : add ah, ah ; test dword ptr [rcx], eax ; add byte ptr [rax], ah ; test ch, ch ; call rbx
0x00000000005ef3eb : add ah, ah ; xor dword ptr [rax], eax ; add byte ptr [rax], dh ; ret
0x00000000006104cb : add ah, al ; add al, byte ptr [rax] ; xor byte ptr [rcx], bl ; call qword ptr [rax]
0x00000000005f10cb : add ah, al ; add byte ptr [rax], r8b ; adc byte ptr [rcx - 0x1c], dl ; jmp qword ptr [rcx]
0x00000000006010cb : add ah, al ; add qword ptr [rax], r8 ; xor byte ptr [rsi - 0x14], cl ; call qword ptr [rdx]
0x00000000005fbecb : add ah, al ; cld ; add byte ptr [rax], al ; or ebp, edx ; call rax
0x0000000000616ecb : add ah, al ; lodsb al, byte ptr [rsi] ; add al, byte ptr [rax] ; jrcxz 0x616ecf ; jmp qword ptr [rdi]
0x00000000006173cb : add ah, al ; mov cl, 2 ; add byte ptr [rax], dh ; in eax, -0xc ; call qword ptr [rsi]
0x0000000000601dcb : add ah, al ; pop rbx ; add dword ptr [rax], eax ; loopne 0x601d6d ; in al, dx ; jmp qword ptr [rbx]
0x0000000000534576 : add ah, al ; ret
0x0000000000572a07 : add ah, al ; ret 0x42
0x00000000004be7f9 : add ah, al ; ret 0xf7cb
0x00000000006184cb : add ah, al ; ret 2
0x00000000006070cb : add ah, al ; scasb al, byte ptr [rdi] ; add dword ptr [rax], eax ; adc byte ptr [rcx], ah ; out dx, al ; call qword ptr [rax]
0x00000000006171cb : add ah, al ; scasd eax, dword ptr [rdi] ; add al, byte ptr [rax] ; jo 0x6171be ; hlt ; call qword ptr [rsi]
0x0000000000610303 : add ah, bh ; add al, byte ptr [rax] ; js 0x61032b ; call qword ptr [rsi]
0x0000000000600a03 : add ah, bh ; add dword ptr [r8], r8d ; sub dh, cl ; jmp 0x600a13
0x0000000000617003 : add ah, bh ; lodsd eax, dword ptr [rsi] ; add al, byte ptr [rax] ; fsub st(3) ; hlt ; call qword ptr [rsi]
0x0000000000617303 : add ah, bh ; mov al, 2 ; add al, bl ; in al, -0xc ; call qword ptr [rsi]
0x0000000000618503 : add ah, bh ; ret 2
0x0000000000608d03 : add ah, bh ; retf 1 ; or byte ptr [rbp - 0x12], dh ; jmp qword ptr [rdi]
0x0000000000608303 : add ah, bh ; rol byte ptr [rcx], 0 ; test al, 0x47 ; out dx, al ; call rdi
0x00000000005fee03 : add ah, bh ; sub eax, dword ptr [rcx] ; add byte ptr [rax + 0x30], cl ; jmp 0x5fee13
0x000000000060ee03 : add ah, bh ; sub eax, dword ptr [rdx] ; add byte ptr [rax], bh ; or ebx, esi ; call rbx
0x00000000006107e3 : add ah, bl ; add r8b, byte ptr [r8] ; test al, 0x18 ; call qword ptr [rax]
0x000000000060b2e3 : add ah, bl ; lock add dword ptr [rax], eax ; clc ; adc ch, bh ; call rdx
0x00000000006173e3 : add ah, bl ; mov cl, 2 ; add byte ptr [rax], bh ; in eax, -0xc ; call qword ptr [rsi]
0x00000000005f89e3 : add ah, bl ; mov dword ptr [rax], 0xe8e84800 ; call qword ptr [rax]
0x0000000000617be3 : add ah, bl ; mov ecx, 0xeef80002 ; hlt ; call qword ptr [rax]
0x00000000006116e3 : add ah, bl ; push rsp ; add al, byte ptr [rax] ; sub byte ptr [rsi - 0xd], cl ; call qword ptr [rax]
0x00000000006085e3 : add ah, bl ; ret
0x00000000006099e3 : add ah, bl ; xlatb ; add dword ptr [rax], eax ; call 0xffffffffd76088a5
0x00000000005ff2e3 : add ah, bl ; xor byte ptr [rcx], al ; add al, bl ; jmp 0x5ff2f3
0x00000000005ac801 : add ah, byte ptr [rcx + rbp*8 - 0x74] ; lodsd eax, dword ptr [rsi] ; ret 0x82b3
0x00000000004f65ea : add ah, byte ptr [rcx] ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000005223a6 : add ah, byte ptr [rcx] ; ret 0x144
0x00000000005222b9 : add ah, byte ptr [rcx] ; ret 0x7ec5
0x00000000004f5fea : add ah, byte ptr [rdi] ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000047431c : add ah, byte ptr [rsi + 0xf] ; out dx, eax ; ret
0x00000000004733d3 : add ah, byte ptr [rsi + 0xf] ; out dx, eax ; ret 0x4466
0x000000000043f70a : add ah, byte ptr [rsi - 0x3f] ; ret
0x00000000004227a5 : add ah, byte ptr [rsi - 0x3f] ; ret 0x6608
0x00000000006100f3 : add ah, ch ; add al, byte ptr ds:[rax] ; or byte ptr [rcx], bl ; call qword ptr [rax]
0x00000000005f28f3 : add ah, ch ; add byte ptr [rax], al ; cwde ; adc ah, ch ; call rdx
0x00000000006106f3 : add ah, ch ; add r8b, byte ptr [rax] ; clc ; sbb bl, dh ; call qword ptr [rax]
0x00000000005e241d : add ah, ch ; call qword ptr [rax]
0x00000000005efdf3 : add ah, ch ; cmp eax, dword ptr [rax] ; add byte ptr [rax], bh ; out -0x1d, al ; call qword ptr [rdx]
0x0000000000608af3 : add ah, ch ; enter 1, 0x68 ; push -0x12 ; jmp qword ptr [rdi]
0x0000000000609ef3 : add ah, ch ; fadd qword ptr [rcx] ; add byte ptr [rax], ch ; ret
0x00000000006141f3 : add ah, ch ; jg 0x614201 ; add al, cl ; in al, dx ; jmp qword ptr [rsi]
0x00000000005f40f3 : add ah, ch ; jle 0x5f40fd ; add al, ch ; ret 0xffe6
0x00000000005e240d : add ah, ch ; jmp rax
0x00000000005f85f3 : add ah, ch ; ret
0x000000000057d7d7 : add ah, ch ; ret 0xce5
0x00000000006084f3 : add ah, ch ; ret 1
0x00000000006170f3 : add ah, ch ; scasb al, byte ptr [rdi] ; add al, byte ptr [rax] ; sub ah, ah ; hlt ; call qword ptr [rsi]
0x00000000006149f3 : add ah, ch ; xchg dword ptr [rdx], eax ; add byte ptr [rax + 0x3a], ch ; hlt ; jmp rdi
0x00000000005ab968 : add ah, cl ; jbe 0x5ab94e ; rcr eax ; ret
0x00000000006172d3 : add ah, cl ; mov al, 2 ; add al, cl ; in al, -0xc ; call qword ptr [rsi]
0x00000000006175d3 : add ah, cl ; mov bl, 2 ; add byte ptr [rax], cl ; out -0xc, al ; call qword ptr [rsi]
0x00000000005f74d3 : add ah, cl ; mov dl, 0 ; add byte ptr [rax], bh ; cmp al, ch ; call qword ptr [rdi]
0x0000000000611ed3 : add ah, cl ; pop rsp ; add al, byte ptr [rax] ; fsubr dword ptr [rcx - 0xd] ; call qword ptr [rdi]
0x00000000006114d3 : add ah, cl ; push rdx ; add al, byte ptr [rax] ; fadd dword ptr [rdx - 0xd] ; jmp qword ptr [rcx]
0x00000000005d6a93 : add ah, cl ; ret
0x00000000005df2b7 : add ah, cl ; ret 0x55
0x00000000005c35df : add ah, cl ; ret 0x5c
0x000000000060bbd3 : add ah, cl ; stc ; add dword ptr [rax], eax ; mov byte ptr [rcx - 0x11], al ; call qword ptr [rbx]
0x00000000006104fb : add ah, dh ; add al, byte ptr [rax] ; xor byte ptr [rcx], bl ; call qword ptr [rsi]
0x00000000005fe8fb : add ah, dh ; add dword ptr es:[rax], eax ; push rax ; add ch, bl ; call rbx
0x00000000005fe4fb : add ah, dh ; and al, byte ptr [rcx] ; add al, dl ; in al, -0x16 ; call qword ptr [rdi]
0x000000000058e36c : add ah, dh ; int1 ; in al, dx ; ret 0xe63
0x00000000006173fb : add ah, dh ; mov cl, 2 ; add byte ptr [rax - 0x1b], al ; hlt ; call qword ptr [rsi]
0x0000000000572a2f : add ah, dh ; ret 0x42
0x00000000005df2d7 : add ah, dh ; ret 0x55
0x00000000005f70fb : add ah, dh ; scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; sub byte ptr [rcx], -0x18 ; call qword ptr [rdx]
0x00000000006171fb : add ah, dh ; scasd eax, dword ptr [rdi] ; add al, byte ptr [rax] ; and ah, 0xf4 ; call qword ptr [rsi]
0x00000000005f6afb : add ah, dh ; test al, 0 ; add byte ptr [rax], dh ; adc ebp, eax ; jmp qword ptr [rsi]
0x00000000005f49fb : add ah, dh ; xchg dword ptr [rax], eax ; add byte ptr [rax], ah ; out -0x1a, al ; call qword ptr [rcx]
0x00000000006103db : add ah, dl ; add al, byte ptr [r8] ; jo 0x610403 ; call qword ptr [rsi]
0x00000000005efddb : add ah, dl ; cmp eax, dword ptr [rax] ; add byte ptr [rax], dh ; out -0x1d, al ; call qword ptr [rdx]
0x0000000000608adb : add ah, dl ; enter 1, 0x50 ; push -0x12 ; jmp qword ptr [rdi]
0x0000000000609edb : add ah, dl ; fadd qword ptr [rcx] ; add al, dh ; ret 0xffee
0x00000000005f2bdb : add ah, dl ; imul eax, dword ptr [rax], 0xe55a5000 ; call qword ptr [rax]
0x00000000005f79db : add ah, dl ; mov bh, 0 ; add byte ptr [rax], dl ; jp 0x5f79d3 ; call rax
0x0000000000607bdb : add ah, dl ; mov ecx, 0x39700001 ; out dx, al ; call qword ptr [rsi]
0x00000000006181db : add ah, dl ; mov edi, 0x500002 ; cmc ; jmp qword ptr [rbx]
0x00000000006185db : add ah, dl ; ret
0x00000000006170db : add ah, dl ; scasb al, byte ptr [rdi] ; add al, byte ptr [rax] ; and ah, ah ; hlt ; call qword ptr [rsi]
0x00000000006046db : add ah, dl ; test byte ptr [rcx], al ; add al, ah ; jge 0x6046d8 ; jmp qword ptr [rax]
0x000000000060d231 : add al, -0x10 ; jmp qword ptr [rdi]
0x0000000000606971 : add al, -0x12 ; jmp qword ptr [rdi]
0x00000000005614fe : add al, -0x15 ; xor ecx, dword ptr [rax - 0x75] ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x00000000005b5a1b : add al, -0x16 ; cdq ; rcr byte ptr [rdi], -3 ; sub ch, cl ; in al, dx ; ret
0x000000000060aa0c : add al, -0x18 ; add dword ptr [rax], eax ; nop ; hlt ; out dx, al ; call rax
0x0000000000593c0d : add al, -0x19 ; jmp qword ptr [rdi]
0x00000000005e2a5d : add al, -0x1a ; jmp rax
0x00000000005f2581 : add al, -0x1b ; call qword ptr [rbx]
0x0000000000539b4a : add al, -0x38 ; mov dword ptr [rdi], ecx ; ret
0x000000000061870c : add al, -0x3b ; add al, byte ptr [rax] ; and byte ptr [rbx], al ; cmc ; call qword ptr [rdi]
0x0000000000479abc : add al, -0x3b ; jo 0x479a90 ; push rdi ; add bl, al ; xor eax, eax ; ret
0x00000000005a279d : add al, -0x3b ; loopne 0x5a2799 ; ret 0x77fc
0x000000000053c16c : add al, -0x3b ; push rax ; mov byte ptr [rbp], bl ; ret
0x000000000061860c : add al, -0x3c ; add al, byte ptr [rax] ; adc byte ptr [rdx], al ; cmc ; jmp qword ptr [rdi]
0x0000000000526f7d : add al, -0x3c ; ret
0x0000000000526f77 : add al, -0x3c ; sar dword ptr [rcx + 0x6e], 0x41 ; add al, -0x3c ; ret
0x00000000005290e6 : add al, -0x3c ; sar dword ptr [rcx + 0x6e], 0x51 ; add al, -0x3c ; ret
0x0000000000539c0a : add al, -0x3f ; ret
0x00000000004d5029 : add al, -0x3f ; ret 0x4c08
0x00000000004418b9 : add al, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000440a62 : add al, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000577f7b : add al, -0x4a ; test rax, -0x609f3b3f ; ret 0x5c9e
0x000000000059ee85 : add al, -0x4c ; pop rax ; xchg eax, ebx ; xor al, 0xffffffffffffffcc ; ret
0x000000000061710c : add al, -0x51 ; add al, byte ptr [rax] ; xor ah, ah ; hlt ; call qword ptr [rsi]
0x000000000060680c : add al, -0x5a ; add dword ptr [rax], eax ; and ah, bh ; in eax, dx ; call qword ptr [rcx]
0x00000000004d75cb : add al, -0x60 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000058c3d4 : add al, -0x65 ; push rax ; ret
0x00000000005a314f : add al, -0x6c ; cli ; ret 0xeca0
0x000000000047c775 : add al, -0x76 ; or al, 0xffffffd3 ; ret 0xb60f
0x000000000050429a : add al, -0x77 ; ret
0x00000000004745a4 : add al, -0x77 ; ret 0xc148
0x000000000055b63e : add al, -0x7b ; sal byte ptr [rbp - 0x13], cl ; xor eax, eax ; ret
0x000000000047c0be : add al, -0x7b ; salc ; push rdi ; add byte ptr [rax + 0x29], cl ; ret 0x314c
0x0000000000551563 : add al, -0x7d ; loope 0x55156f ; mov eax, ecx ; pop rbx ; ret
0x0000000000551b43 : add al, -0x7d ; loope 0x551b4e ; mov eax, ecx ; ret
0x0000000000551be5 : add al, -0x7d ; loope 0x551bf0 ; mov eax, ecx ; ret
0x000000000040ad33 : add al, -0x7d ; ret
0x00000000004ffdb8 : add al, -0x7f ; ret
0x00000000005fb70c : add al, -0xb ; add byte ptr [rax], al ; shl al, -0x17 ; jmp rdx
0x0000000000549767 : add al, -1 ; dec dword ptr [rax - 0x77] ; ret
0x000000000049c25d : add al, -1 ; ret
0x00000000004a2bb9 : add al, -1 ; ret 0xcb29
0x000000000049a716 : add al, -3 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000534574 : add al, 0 ; add ah, al ; ret
0x00000000004140a6 : add al, 0 ; add al, ch ; ret 0xb82
0x00000000004424ea : add al, 0 ; add bh, bh ; ret
0x00000000004e7512 : add al, 0 ; add byte ptr [rax + 0x29], cl ; ret 0x894c
0x0000000000431da8 : add al, 0 ; add byte ptr [rax + 0x5730cf], bh ; ret
0x0000000000432a06 : add al, 0 ; add byte ptr [rax + 0x573def], bh ; ret
0x0000000000432a7e : add al, 0 ; add byte ptr [rax + 0x573e89], bh ; ret
0x00000000004329f4 : add al, 0 ; add byte ptr [rax + 0x573edd], bh ; ret
0x000000000043cdad : add al, 0 ; add byte ptr [rax + 1], bh ; ret
0x00000000004b6932 : add al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000463c9a : add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0xebe9
0x00000000004782f0 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000470046 : add al, 0 ; add byte ptr [rax - 1], cl ; ret
0x0000000000407b85 : add al, 0 ; add byte ptr [rax], al ; mov r9, r12 ; call rax
0x000000000041ce89 : add al, 0 ; add byte ptr [rax], al ; mov r9, r15 ; call rax
0x0000000000436193 : add al, 0 ; add byte ptr [rax], al ; ret
0x0000000000546cda : add al, 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000045cea5 : add al, 0 ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004f8780 : add al, 0 ; add byte ptr [rcx + rcx*4 - 9], cl ; call r12
0x000000000043c756 : add al, 0 ; add byte ptr [rcx], al ; ret
0x000000000045fc8a : add al, 0 ; add byte ptr [rcx], ch ; ret 0x4ce8
0x000000000053a64d : add al, 0 ; add dh, dh ; ret
0x00000000004f4c2f : add al, 0 ; add ebx, eax ; mov eax, ebx ; pop rbx ; ret
0x0000000000447b39 : add al, 0 ; add rsp, 0x18 ; ret
0x0000000000559c04 : add al, 0 ; je 0x559c11 ; xor eax, eax ; ret
0x0000000000484f33 : add al, 0 ; mov eax, 0xfffffffe ; pop rdx ; ret
0x00000000004879bb : add al, 0 ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000004eb53f : add al, 0 ; mov eax, 0xffffffff ; ret
0x00000000004a1364 : add al, 0 ; mov eax, 1 ; pop rdx ; ret
0x00000000004fabda : add al, 0 ; mov rcx, rax ; mov rax, rcx ; pop rdx ; ret
0x00000000004e329d : add al, 0 ; nop ; mov eax, 0x5bd490 ; ret
0x00000000004e32dd : add al, 0 ; nop ; mov eax, 0x5bd508 ; ret
0x00000000004e331d : add al, 0 ; nop ; mov eax, 0x5bd580 ; ret
0x00000000004ed7ba : add al, 0 ; nop dword ptr [rax] ; mov rax, qword ptr [rdi] ; ret
0x000000000049699d : add al, 0 ; pop rbx ; ret
0x00000000004eb562 : add al, 0 ; pop rdx ; ret
0x000000000049b6cc : add al, 0 ; ret
0x0000000000505d34 : add al, 0 ; ror dword ptr [rbx - 0x7ebef7ba], cl ; ret
0x0000000000485e6b : add al, 0 ; test rax, rax ; je 0x485e7c ; pop rax ; ret
0x000000000048c0db : add al, 0 ; test rax, rax ; je 0x48c0ec ; pop rax ; ret
0x000000000048a6b4 : add al, 0 ; xor eax, eax ; pop rbx ; pop r14 ; pop r15 ; ret
0x000000000048aaba : add al, 0 ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004848c4 : add al, 0 ; xor eax, eax ; pop rbx ; ret
0x0000000000484e93 : add al, 0 ; xor eax, eax ; pop rdx ; ret
0x0000000000481949 : add al, 0 ; xor eax, eax ; ret
0x00000000004874fd : add al, 0 ; xor ebx, ebx ; mov rax, rbx ; pop rbx ; ret
0x0000000000404cd5 : add al, 0x10 ; dec dword ptr [rax - 1] ; ret 0x8b48
0x0000000000540818 : add al, 0x11 ; mov dword ptr [rcx + rdx], esi ; ret
0x00000000005d74ff : add al, 0x12 ; rcl dl ; ret 0x80b
0x000000000059482c : add al, 0x18 ; adc dl, byte ptr [rbx - 0x7b] ; jmp 0xffffffffc2c24a51
0x00000000005d4fcc : add al, 0x18 ; movsb byte ptr [rdi], byte ptr [rsi] ; in al, dx ; ret 0x41e0
0x00000000005b100a : add al, 0x1b ; xor eax, dword ptr [rip + 0x3398db0f] ; ret
0x00000000005ad989 : add al, 0x1c ; push rbp ; salc ; mov esp, 0xffe87f6a ; ret
0x000000000043f508 : add al, 0x21 ; ret
0x000000000044f938 : add al, 0x24 ; add esp, eax ; ret
0x0000000000549386 : add al, 0x24 ; add rsp, 8 ; pop rbx ; pop r14 ; ret
0x00000000005d6f89 : add al, 0x24 ; and al, 0xffffffffffffffa0 ; test byte ptr [rsp], ah ; ret
0x000000000042d73d : add al, 0x24 ; or rax, 0x14 ; mov rdx, rax ; jmp 0x42d753
0x0000000000540c5a : add al, 0x24 ; pop rdx ; ret
0x000000000045f74d : add al, 0x29 ; ret
0x000000000045fb96 : add al, 0x29 ; ret 0x3944
0x0000000000565fec : add al, 0x31 ; leave ; jmp rax
0x0000000000515e1d : add al, 0x31 ; ret
0x0000000000492d27 : add al, 0x31 ; ret 0xe281
0x00000000005d6cfd : add al, 0x34 ; xor al, 0xffffffffffffffd2 ; ret 0xd012
0x000000000043f50d : add al, 0x39 ; ret
0x000000000045fb77 : add al, 0x39 ; ret 0x1b7d
0x000000000046c24d : add al, 0x39 ; ret 0xae7c
0x00000000005efe0c : add al, 0x3c ; add byte ptr [rax], al ; out -0x1d, al ; call rbx
0x0000000000404231 : add al, 0x3f ; sub eax, esi ; ret
0x000000000040ac03 : add al, 0x40 ; add byte ptr [rax], al ; mov rdi, r14 ; call rcx
0x000000000041d0bf : add al, 0x40 ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x000000000048d1aa : add al, 0x41 ; and eax, 1 ; ret
0x000000000047c7e5 : add al, 0x41 ; mov dword ptr [rcx], edx ; pop rbx ; pop rbp ; ret
0x000000000049c9ef : add al, 0x41 ; pop rax ; jmp rax
0x00000000004b88cc : add al, 0x41 ; pop rcx ; jmp rax
0x00000000005f080c : add al, 0x46 ; add byte ptr [rax], al ; nop ; or ah, ah ; call qword ptr [rbx]
0x0000000000551068 : add al, 0x48 ; lea eax, dword ptr [rax + 0x82a590] ; pop rdx ; ret
0x000000000041ad57 : add al, 0x48 ; mov dword ptr [rdi + 0x248], edx ; jmp 0x41ad2c
0x000000000048c2e3 : add al, 0x48 ; mov eax, dword ptr [rcx + 0x10] ; add rsp, 0x18 ; ret
0x00000000004849ab : add al, 0x48 ; mov eax, dword ptr [rcx + 0x10] ; pop rbx ; ret
0x0000000000489a0b : add al, 0x48 ; mov eax, dword ptr [rcx + 0x28] ; pop rbx ; ret
0x00000000004fcc84 : add al, 0x48 ; mov eax, dword ptr [rcx + 8] ; pop rdx ; ret
0x00000000004ed04f : add al, 0x48 ; mov eax, dword ptr [rcx + 8] ; ret
0x00000000004b6d22 : add al, 0x48 ; mov eax, dword ptr [rcx - 8] ; ret
0x00000000005487f6 : add al, 0x48 ; mov eax, dword ptr [rdi + 0x10] ; ret
0x00000000004f4be6 : add al, 0x48 ; mov eax, dword ptr [rdi + 0x18] ; ret
0x0000000000548816 : add al, 0x48 ; mov eax, dword ptr [rdi + 0x20] ; ret
0x0000000000548826 : add al, 0x48 ; mov eax, dword ptr [rdi + 0x28] ; ret
0x0000000000548836 : add al, 0x48 ; mov eax, dword ptr [rdi + 0x30] ; ret
0x0000000000461c16 : add al, 0x48 ; mov eax, dword ptr [rdi + 0x38] ; ret
0x00000000004315e6 : add al, 0x48 ; mov eax, dword ptr [rdi + 0x48] ; ret
0x0000000000461f96 : add al, 0x48 ; mov eax, dword ptr [rdi + 0x50] ; ret
0x0000000000461fa6 : add al, 0x48 ; mov eax, dword ptr [rdi + 0x58] ; ret
0x0000000000429849 : add al, 0x48 ; mov eax, dword ptr [rdi + 8] ; ret
0x00000000004e8a7f : add al, 0x48 ; mov ecx, dword ptr [rsi + 8] ; mov qword ptr [rcx + rax*8], rdi ; ret
0x000000000054d505 : add al, 0x48 ; mov edi, dword ptr [rbx + 8] ; xor esi, esi ; call 0x4e97d9
0x0000000000610f0c : add al, 0x4d ; add al, byte ptr [rax] ; shr byte ptr [rbx], 1 ; call rdi
0x0000000000551408 : add al, 0x4f ; stc ; dec dword ptr [rax - 0x7d] ; ret
0x000000000055639d : add al, 0x51 ; call rdx
0x00000000005a4fe4 : add al, 0x55 ; scasd eax, dword ptr [rdi] ; ret
0x0000000000611c0c : add al, 0x5a ; add al, byte ptr [rax] ; adc byte ptr [rax - 0xd], ch ; call qword ptr [rdi]
0x00000000004620f6 : add al, 0x5a ; ret
0x0000000000491b74 : add al, 0x5b ; pop r14 ; pop r15 ; ret
0x0000000000492cfe : add al, 0x5b ; pop r14 ; pop rbp ; ret
0x000000000049e614 : add al, 0x5d ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 2
0x0000000000552102 : add al, 0x69 ; ret 0x3e8
0x0000000000594381 : add al, 0x74 ; pop rdi ; ret
0x000000000048798b : add al, 0x75 ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000004873eb : add al, 0x75 ; sub byte ptr [rax - 0x7d], cl ; ret
0x000000000042beae : add al, 0xa ; add byte ptr [rax - 1], bh ; pop rdx ; ret
0x000000000047fbed : add al, 0xf ; mov dh, 0x56 ; add eax, 0x908e2c1 ; ret 0xb60f
0x00000000005176e3 : add al, 0xf ; mov dh, 0x57 ; add eax, 0x908e2c1 ; ret 0xb60f
0x000000000048d34c : add al, 0xf ; test dword ptr [rbp - 0xa000000], ebp ; ret 0xf20
0x000000000048767a : add al, 0xf ; test ecx, edi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000040773a : add al, 0xf ; xchg dword ptr [rbp + rax + 0x24ff0000], esi ; int 0x80
0x000000000040974c : add al, 0xf ; xchg eax, esp ; ret
0x000000000040a126 : add al, 0xf ; xchg eax, esp ; ret 0x8948
0x00000000005e2779 : add al, 1 ; add al, dl ; mov dl, -0x1b ; jmp qword ptr [rax]
0x000000000046c98a : add al, 1 ; ret
0x00000000004c5ab0 : add al, 2 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000060c645 : add al, 2 ; add byte ptr [rax], bh ; xchg edi, ebp ; jmp qword ptr [rsi]
0x00000000004d94fc : add al, 2 ; pop rbx ; ret
0x00000000005b7572 : add al, 3 ; mov ebp, 0xb93ee2be ; nop ; leave ; ret 0x9a60
0x00000000004d94f8 : add al, 7 ; mov byte ptr [rdx + rax], r8b ; pop rbx ; ret
0x00000000004d1ce3 : add al, 8 ; ret
0x00000000004397d6 : add al, 9 ; ret 0x1be
0x000000000060fa3f : add al, ah ; adc al, -0xd ; call qword ptr [rax]
0x000000000060f85f : add al, ah ; adc ebx, esi ; call qword ptr [rcx]
0x000000000060d22f : add al, ah ; add al, -0x10 ; jmp qword ptr [rdi]
0x00000000005e6be3 : add al, ah ; add edi, ebp ; jmp qword ptr [rax]
0x00000000005e9d63 : add al, ah ; add esi, esi ; call rax
0x00000000005e9dd3 : add al, ah ; add esi, esi ; jmp qword ptr [rax]
0x00000000005e5213 : add al, ah ; add esp, ebp ; jmp qword ptr [rax]
0x00000000005e8e9b : add al, ah ; cmc ; int1 ; call qword ptr [rax]
0x00000000005e669b : add al, ah ; cmpsb byte ptr [rsi], byte ptr [rdi] ; out dx, al ; call rax
0x0000000000617e3f : add al, ah ; div ah ; call rdi
0x00000000005e9883 : add al, ah ; fcompi st(5) ; call rax
0x00000000005fe32f : add al, ah ; fsub st(2), st(0) ; call qword ptr [rsi]
0x00000000005e22bb : add al, ah ; fsub st(4) ; call rax
0x00000000005e718b : add al, ah ; fsubr st(7) ; jmp qword ptr [rax]
0x00000000005ea603 : add al, ah ; jae 0x5ea601 ; jmp qword ptr [rax]
0x00000000005ec14b : add al, ah ; jae 0x5ec14b ; jmp rax
0x00000000006046df : add al, ah ; jge 0x6046d4 ; jmp qword ptr [rax]
0x00000000005e81b3 : add al, ah ; jrcxz 0x5e81ab ; call rax
0x000000000061701f : add al, ah ; jrcxz 0x61701b ; call qword ptr [rsi]
0x00000000005e30f3 : add al, ah ; loopne 0x5e30e2 ; call rax
0x0000000000609c2f : add al, ah ; mov ah, -0x12 ; call qword ptr [rbx]
0x00000000005ea9b3 : add al, ah ; mov bh, -0xa ; call rax
0x00000000006025ff : add al, ah ; mov dl, -0x14 ; jmp qword ptr [rdi]
0x000000000061258f : add al, ah ; mov ebx, dr0 ; call qword ptr [rsi]
0x00000000005f006f : add al, ah ; out -0x1d, eax ; call qword ptr [rdi]
0x00000000005e7273 : add al, ah ; out dx, eax ; jmp qword ptr [rax]
0x00000000005e7263 : add al, ah ; out dx, eax ; jmp rax
0x00000000005e4263 : add al, ah ; push -0x16 ; jmp qword ptr [rax]
0x00000000005e4aeb : add al, ah ; push rsp ; jmp 0x5e4af3
0x000000000052f747 : add al, ah ; ret
0x00000000005df2c7 : add al, ah ; ret 0x55
0x00000000005e281b : add al, ah ; ret 0xffe5
0x0000000000609eaf : add al, ah ; ret 0xffee
0x00000000005e3353 : add al, ah ; sbb ch, al ; jmp rax
0x00000000005e217b : add al, ah ; shl ah, cl ; jmp rax
0x00000000005e3f23 : add al, ah ; sub ebp, edx ; call rax
0x00000000005e6e43 : add al, ah ; wait ; out dx, eax ; call rax
0x00000000005e89f3 : add al, ah ; xchg eax, ebp ; int1 ; call qword ptr [rax]
0x0000000000601dcf : add al, ah ; xchg eax, ebx ; in al, dx ; jmp qword ptr [rbx]
0x000000000060016f : add al, ah ; xchg eax, ebx ; jmp 0x600177
0x00000000005e64db : add al, ah ; xchg eax, esp ; out dx, al ; call qword ptr [rax]
0x00000000005e526b : add al, ah ; xor ebp, esp ; jmp rax
0x00000000005e7373 : add al, al ; adc eax, esi ; call qword ptr [rax]
0x00000000005e2a5b : add al, al ; add al, -0x1a ; jmp rax
0x00000000005e3223 : add al, al ; add al, ch ; call rax
0x00000000005ebd13 : add al, al ; clc ; jmp qword ptr [rax]
0x00000000005e6133 : add al, al ; cld ; in eax, dx ; call qword ptr [rax]
0x00000000005e8e8b : add al, al ; cmc ; int1 ; jmp rax
0x00000000005efa3f : add al, al ; fsub st(3) ; jmp qword ptr [rcx]
0x00000000005e46c3 : add al, al ; fucompi st(2) ; call rax
0x000000000061524f : add al, al ; hlt ; call qword ptr [rdi]
0x00000000005e3ab3 : add al, al ; ja 0x5e3aa4 ; call qword ptr [rax]
0x00000000005e5db3 : add al, al ; jb 0x5e5da8 ; jmp qword ptr [rax]
0x00000000005e883b : add al, al ; jg 0x5e8834 ; call qword ptr [rax]
0x00000000005ffa1f : add al, al ; jg 0x5ffa12 ; call qword ptr [rdx]
0x00000000005eb1a3 : add al, al ; jl 0x5eb1a2 ; jmp qword ptr [rax]
0x00000000005f67df : add al, al ; jmp rdi
0x0000000000616fbf : add al, al ; jrcxz 0x616fbb ; call qword ptr [rsi]
0x00000000005e4e53 : add al, al ; lodsb al, byte ptr [rsi] ; jmp 0x5e4e5b
0x00000000005fb70f : add al, al ; loopne 0x5fb700 ; jmp rdx
0x00000000005eee8f : add al, al ; mov al, -0x1d ; jmp qword ptr [rdx]
0x00000000005e1fa3 : add al, al ; mov cl, -0x1c ; jmp qword ptr [rax]
0x00000000005eb5b3 : add al, al ; mov dl, -9 ; jmp qword ptr [rax]
0x00000000005eb35b : add al, al ; mov edi, esi ; jmp rax
0x00000000005e29eb : add al, al ; mul ebp ; jmp qword ptr [rax]
0x00000000005ee32f : add al, al ; or bl, ah ; call qword ptr [rdx]
0x00000000005f216f : add al, al ; out -0x1c, eax ; call rcx
0x0000000000617c3f : add al, al ; out dx, eax ; hlt ; call rbx
0x000000000061564f : add al, al ; pop rbp ; hlt ; jmp rcx
0x00000000005e546b : add al, al ; pop rbx ; in al, dx ; inc dword ptr [rax] ; ret 1
0x00000000005ebdeb : add al, al ; push rax ; clc ; call qword ptr [rax]
0x00000000005e2863 : add al, al ; ret
0x00000000005d72cd : add al, al ; ret 0x2f4f
0x00000000005c35bf : add al, al ; ret 0x5c
0x00000000005d7460 : add al, al ; ret 0x5c2
0x00000000005e2813 : add al, al ; ret 0xffe5
0x000000000061092f : add al, al ; sbb al, -0xd ; call rsp
0x00000000005e6173 : add al, al ; sbb ch, dh ; jmp qword ptr [rax]
0x00000000005e51c3 : add al, al ; std ; jmp 0x5e51cb
0x00000000005f508f : add al, al ; sub esp, edi ; jmp qword ptr [rcx]
0x00000000005e573b : add al, al ; test al, -0x14 ; call qword ptr [rax]
0x00000000005e89e3 : add al, al ; xchg eax, ebp ; int1 ; jmp rax
0x00000000005e8ae3 : add al, al ; xchg eax, edi ; int1 ; jmp rax
0x00000000005e6213 : add al, al ; xor dh, ch ; call qword ptr [rax]
0x000000000060b2e7 : add al, bh ; adc ch, bh ; call rdx
0x000000000060d247 : add al, bh ; add al, -0x10 ; jmp qword ptr [rdi]
0x0000000000617367 : add al, bh ; in al, -0xc ; call qword ptr [rsi]
0x0000000000617667 : add al, bh ; in eax, -0xc ; call qword ptr [rax]
0x00000000006175a7 : add al, bh ; in eax, -0xc ; call qword ptr [rsi]
0x0000000000617067 : add al, bh ; jrcxz 0x617063 ; call qword ptr [rsi]
0x0000000000600317 : add al, bh ; lodsb al, byte ptr [rsi] ; jmp 0x60031f
0x00000000005ecfe7 : add al, bh ; loopne 0x5ecfd0 ; jmp rdi
0x00000000005f6307 : add al, bh ; mov ah, -0x19 ; jmp rax
0x00000000005ede97 : add al, bh ; mov bh, -0x1e ; jmp qword ptr [rdx]
0x00000000005eddb7 : add al, bh ; mov ch, -0x1e ; jmp qword ptr [rax]
0x0000000000605297 : add al, bh ; mov dl, -0x13 ; jmp rax
0x0000000000617be7 : add al, bh ; out dx, al ; hlt ; call qword ptr [rax]
0x0000000000615537 : add al, bh ; pop rax ; hlt ; call qword ptr [rcx]
0x00000000005c365f : add al, bh ; ret 0x5c
0x00000000006106f7 : add al, bh ; sbb bl, dh ; call qword ptr [rax]
0x0000000000602117 : add al, bh ; wait ; in al, dx ; jmp qword ptr [rsi]
0x0000000000611157 : add al, bh ; xor bl, dh ; call qword ptr [rax]
0x0000000000610d37 : add al, bl ; call qword ptr es:[rbx]
0x00000000005ee247 : add al, bl ; in al, -0x1e ; jmp qword ptr [rsi]
0x0000000000617307 : add al, bl ; in al, -0xc ; call qword ptr [rsi]
0x00000000005ff2e7 : add al, bl ; jmp 0x5ff2ef
0x00000000006114d7 : add al, bl ; jmp qword ptr [rcx]
0x00000000005f8897 : add al, bl ; jrcxz 0x5f8887 ; call qword ptr [rax]
0x0000000000617007 : add al, bl ; jrcxz 0x617003 ; call qword ptr [rsi]
0x00000000005fad57 : add al, bl ; mov dl, -0x17 ; jmp rdi
0x00000000006127e7 : add al, bl ; mov dr0, ebx ; call qword ptr [rbx]
0x0000000000565058 : add al, bl ; mov dword ptr [rsi], 0xffffffff ; ret
0x000000000060bb17 : add al, bl ; out dx, eax ; jmp rsi
0x00000000005c36a8 : add al, bl ; pop rsp ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; ret
0x000000000060b097 : add al, bl ; stc ; out dx, al ; call qword ptr [rax]
0x000000000060e987 : add al, bl ; xlatb ; call qword ptr [rbx]
0x0000000000610d35 : add al, byte ptr [r8] ; fsub dword ptr [rsi] ; call qword ptr [rbx]
0x00000000006103dd : add al, byte ptr [r8] ; jo 0x610401 ; call qword ptr [rsi]
0x00000000005e7371 : add al, byte ptr [r8] ; rcl byte ptr [rcx], -0x10 ; call qword ptr [rax]
0x000000000061052d : add al, byte ptr [r8] ; sbb ebx, esi ; call qword ptr [rsi]
0x0000000000610d7d : add al, byte ptr [r8] ; shl byte ptr [rsi], 1 ; jmp qword ptr [rcx]
0x00000000006105a5 : add al, byte ptr [r8] ; sub byte ptr [rcx], bl ; call qword ptr [rax]
0x000000000048c08d : add al, byte ptr [rax + rax] ; xor eax, eax ; pop rdx ; ret
0x000000000055299a : add al, byte ptr [rax - 0x10] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000409748 : add al, byte ptr [rax - 0xa] ; mov byte ptr [rdi + rcx], -0x6c ; ret
0x00000000006170ae : add al, byte ptr [rax] ; adc ah, ah ; hlt ; call qword ptr [rsi]
0x00000000005e6962 : add al, byte ptr [rax] ; adc ah, ah ; out dx, al ; call qword ptr [rax]
0x000000000061777e : add al, byte ptr [rax] ; adc bh, ah ; hlt ; call qword ptr [rax]
0x000000000061788e : add al, byte ptr [rax] ; adc bh, ah ; hlt ; call qword ptr [rcx]
0x00000000005e713a : add al, byte ptr [rax] ; adc bl, -0x11 ; jmp rax
0x0000000000611c0e : add al, byte ptr [rax] ; adc byte ptr [rax - 0xd], ch ; call qword ptr [rdi]
0x00000000005e7a12 : add al, byte ptr [rax] ; adc byte ptr [rbp - 0x10], dh ; jmp qword ptr [rax]
0x000000000044d415 : add al, byte ptr [rax] ; adc byte ptr [rcx + 9], al ; ret 0x8141
0x0000000000614bbe : add al, byte ptr [rax] ; adc byte ptr [rcx - 0xc], al ; call qword ptr [rdx]
0x0000000000615d4e : add al, byte ptr [rax] ; adc byte ptr [rcx - 0xc], bh ; jmp qword ptr [rdi]
0x000000000061067e : add al, byte ptr [rax] ; adc byte ptr [rcx], bl ; call qword ptr [rsi]
0x00000000005e781a : add al, byte ptr [rax] ; adc byte ptr [rdi - 0x10], cl ; call rax
0x00000000005e63ca : add al, byte ptr [rax] ; adc byte ptr [rdx - 0x12], dh ; jmp rax
0x00000000005e85b2 : add al, byte ptr [rax] ; adc byte ptr [rdx - 0xf], cl ; call qword ptr [rax]
0x000000000061860e : add al, byte ptr [rax] ; adc byte ptr [rdx], al ; cmc ; jmp qword ptr [rdi]
0x00000000005e73b2 : add al, byte ptr [rax] ; adc sil, al ; call rax
0x000000000061707e : add al, byte ptr [rax] ; add ah, ah ; hlt ; call qword ptr [rsi]
0x0000000000487fb5 : add al, byte ptr [rax] ; add al, ch ; je 0x487fc5 ; add bh, bh ; ret
0x0000000000405d75 : add al, byte ptr [rax] ; add al, ch ; ret
0x0000000000411176 : add al, byte ptr [rax] ; add al, ch ; ret 0x7dd
0x00000000005461a6 : add al, byte ptr [rax] ; add al, ch ; ret 0xf861
0x0000000000405c46 : add al, byte ptr [rax] ; add al, ch ; ret 0xfac
0x000000000041ff66 : add al, byte ptr [rax] ; add al, ch ; ret 0xfe1d
0x00000000004b9d22 : add al, byte ptr [rax] ; add al, ch ; ret 2
0x00000000004880c5 : add al, byte ptr [rax] ; add al, ch ; xor esi, dword ptr [rbx] ; add bh, bh ; ret
0x000000000049a27f : add al, byte ptr [rax] ; add bh, bh ; ret
0x00000000005e67da : add al, byte ptr [rax] ; add bl, -0x12 ; call rax
0x00000000005e92d2 : add al, byte ptr [rax] ; add bl, -0xe ; jmp qword ptr [rax]
0x000000000041ad5c : add al, byte ptr [rax] ; add bl, ch ; ret 0x8f80
0x0000000000432238 : add al, byte ptr [rax] ; add byte ptr [rax + 0x573149], bh ; ret
0x0000000000432226 : add al, byte ptr [rax] ; add byte ptr [rax + 0x5731dd], bh ; ret
0x0000000000432214 : add al, byte ptr [rax] ; add byte ptr [rax + 0x573213], bh ; ret
0x0000000000432202 : add al, byte ptr [rax] ; add byte ptr [rax + 0x573247], bh ; ret
0x00000000004321f0 : add al, byte ptr [rax] ; add byte ptr [rax + 0x573287], bh ; ret
0x00000000004321c2 : add al, byte ptr [rax] ; add byte ptr [rax + 0x573347], bh ; ret
0x00000000004321b0 : add al, byte ptr [rax] ; add byte ptr [rax + 0x57337d], bh ; ret
0x0000000000432322 : add al, byte ptr [rax] ; add byte ptr [rax + 0x5734b1], bh ; ret
0x000000000043230a : add al, byte ptr [rax] ; add byte ptr [rax + 0x5734ea], bh ; ret
0x00000000004322f8 : add al, byte ptr [rax] ; add byte ptr [rax + 0x573525], bh ; ret
0x00000000004322bc : add al, byte ptr [rax] ; add byte ptr [rax + 0x573a42], bh ; ret
0x00000000004322a4 : add al, byte ptr [rax] ; add byte ptr [rax + 0x573a79], bh ; ret
0x0000000000432292 : add al, byte ptr [rax] ; add byte ptr [rax + 0x573aae], bh ; ret
0x0000000000432280 : add al, byte ptr [rax] ; add byte ptr [rax + 0x573ae3], bh ; ret
0x000000000043226e : add al, byte ptr [rax] ; add byte ptr [rax + 0x573b20], bh ; ret
0x000000000043225c : add al, byte ptr [rax] ; add byte ptr [rax + 0x573b96], bh ; ret
0x000000000043224a : add al, byte ptr [rax] ; add byte ptr [rax + 0x573bd0], bh ; ret
0x0000000000432671 : add al, byte ptr [rax] ; add byte ptr [rax + 0x573e20], bh ; ret
0x0000000000432bda : add al, byte ptr [rax] ; add byte ptr [rax + 0x573e4a], bh ; ret
0x0000000000432aae : add al, byte ptr [rax] ; add byte ptr [rax + 0x573e6d], bh ; ret
0x0000000000432a90 : add al, byte ptr [rax] ; add byte ptr [rax + 0x573e7b], bh ; ret
0x0000000000432a64 : add al, byte ptr [rax] ; add byte ptr [rax + 0x573e97], bh ; ret
0x0000000000432a46 : add al, byte ptr [rax] ; add byte ptr [rax + 0x573ea5], bh ; ret
0x0000000000432a34 : add al, byte ptr [rax] ; add byte ptr [rax + 0x573eb3], bh ; ret
0x0000000000432bbc : add al, byte ptr [rax] ; add byte ptr [rax + 0x573f0e], bh ; ret
0x0000000000432baa : add al, byte ptr [rax] ; add byte ptr [rax + 0x573f1c], bh ; ret
0x0000000000432b98 : add al, byte ptr [rax] ; add byte ptr [rax + 0x573f2a], bh ; ret
0x0000000000432b86 : add al, byte ptr [rax] ; add byte ptr [rax + 0x573f38], bh ; ret
0x0000000000432b58 : add al, byte ptr [rax] ; add byte ptr [rax + 0x573f62], bh ; ret
0x0000000000432b46 : add al, byte ptr [rax] ; add byte ptr [rax + 0x573f70], bh ; ret
0x0000000000432b34 : add al, byte ptr [rax] ; add byte ptr [rax + 0x573f7e], bh ; ret
0x0000000000432b22 : add al, byte ptr [rax] ; add byte ptr [rax + 0x573f8c], bh ; ret
0x0000000000432b10 : add al, byte ptr [rax] ; add byte ptr [rax + 0x573f9a], bh ; ret
0x0000000000432afe : add al, byte ptr [rax] ; add byte ptr [rax + 0x573fa8], bh ; ret
0x00000000004329b5 : add al, byte ptr [rax] ; add byte ptr [rax + 0x573fbd], bh ; ret
0x0000000000432c82 : add al, byte ptr [rax] ; add byte ptr [rax + 0x573fc4], bh ; ret
0x0000000000432997 : add al, byte ptr [rax] ; add byte ptr [rax + 0x573fe0], bh ; ret
0x0000000000432c6a : add al, byte ptr [rax] ; add byte ptr [rax + 0x573fe7], bh ; ret
0x0000000000432985 : add al, byte ptr [rax] ; add byte ptr [rax + 0x573fee], bh ; ret
0x0000000000432c58 : add al, byte ptr [rax] ; add byte ptr [rax + 0x573ff5], bh ; ret
0x0000000000432973 : add al, byte ptr [rax] ; add byte ptr [rax + 0x573ffc], bh ; ret
0x0000000000432c46 : add al, byte ptr [rax] ; add byte ptr [rax + 0x574003], bh ; ret
0x0000000000432961 : add al, byte ptr [rax] ; add byte ptr [rax + 0x57400a], bh ; ret
0x0000000000432c34 : add al, byte ptr [rax] ; add byte ptr [rax + 0x574011], bh ; ret
0x000000000043294f : add al, byte ptr [rax] ; add byte ptr [rax + 0x574018], bh ; ret
0x0000000000432c22 : add al, byte ptr [rax] ; add byte ptr [rax + 0x57401f], bh ; ret
0x000000000043293d : add al, byte ptr [rax] ; add byte ptr [rax + 0x574026], bh ; ret
0x0000000000432c10 : add al, byte ptr [rax] ; add byte ptr [rax + 0x57402d], bh ; ret
0x0000000000432919 : add al, byte ptr [rax] ; add byte ptr [rax + 0x574034], bh ; ret
0x0000000000432bfe : add al, byte ptr [rax] ; add byte ptr [rax + 0x57403b], bh ; ret
0x0000000000432aec : add al, byte ptr [rax] ; add byte ptr [rax + 0x574050], bh ; ret
0x0000000000431602 : add al, byte ptr [rax] ; add byte ptr [rax + 1], bh ; ret
0x00000000004a1a1b : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x00000000005f84ad : add al, byte ptr [rax] ; add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x0000000000618545 : add al, byte ptr [rax] ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; ret
0x00000000004cd95a : add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret
0x000000000043cde5 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; out dx, al ; call rax
0x000000000040cbc8 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000463c5a : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x2be9
0x000000000047e703 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000043cfa1 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7b], cl ; push qword ptr [rbx - 0x18] ; ret 0x2de
0x00000000004133a5 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000043c0eb : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x3108
0x000000000043bb69 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4508
0x0000000000411ce9 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4820
0x000000000043590d : add al, byte ptr [rax] ; add byte ptr [rax - 0x7f], cl ; ret
0x000000000045740b : add al, byte ptr [rax] ; add byte ptr [rax - 1], cl ; ret
0x0000000000457285 : add al, byte ptr [rax] ; add byte ptr [rax - 1], cl ; ret 0xc239
0x0000000000445c4e : add al, byte ptr [rax] ; add byte ptr [rax - 9], cl ; ret 0xf
0x00000000005e8232 : add al, byte ptr [rax] ; add byte ptr [rax], -0xf ; jmp rax
0x000000000058aed1 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; ret 0x58
0x00000000004c6375 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov dword ptr [rax + 0x20], ecx ; pop rbx ; ret
0x000000000040789b : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov r9, r12 ; call rax
0x000000000041d075 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov r9, r15 ; call rax
0x00000000004086a9 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov r9, rbx ; call rax
0x0000000000443317 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rbx ; call r14
0x000000000046fe45 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rsi, qword ptr [rsp + 0x28] ; call rax
0x00000000004e9180 : add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rax ; ret
0x0000000000498b80 : add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000054de0a : add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rdx ; ret
0x000000000041ade7 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000538ec5 : add al, byte ptr [rax] ; add byte ptr [rax], al ; xor ebx, ebx ; mov rdx, rax ; jmp 0x538eeb
0x000000000040a5c1 : add al, byte ptr [rax] ; add byte ptr [rax], al ; xor edx, edx ; mov r9, r14 ; call rax
0x000000000040b74e : add al, byte ptr [rax] ; add byte ptr [rax], al ; xor edx, edx ; mov r9, r15 ; call rax
0x00000000005ec425 : add al, byte ptr [rax] ; add byte ptr [rax], bl ; push -0x1f ; jmp qword ptr [rsi]
0x00000000005ec4ad : add al, byte ptr [rax] ; add byte ptr [rax], dh ; jo 0x5ec49a ; jmp qword ptr [rdx]
0x00000000004cc78a : add al, byte ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; ret
0x00000000004b430c : add al, byte ptr [rax] ; add byte ptr [rbx - 0x3d], bl ; xor eax, eax ; pop rbx ; ret
0x00000000004adb9f : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7af0fe03], al ; ret 0
0x00000000004cc3fe : add al, byte ptr [rax] ; add byte ptr [rcx + rcx*4 + 0x64], cl ; ret
0x000000000041fc31 : add al, byte ptr [rax] ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x00000000004cc40a : add al, byte ptr [rax] ; add byte ptr [rcx + rcx*4 - 0x44], cl ; ret
0x000000000046973a : add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], cl ; add byte ptr [r9 - 0x77], r9b ; ret
0x00000000005e8692 : add al, byte ptr [rax] ; add byte ptr [rcx - 0xf], dl ; jmp rax
0x00000000005e6cb2 : add al, byte ptr [rax] ; add byte ptr [rcx], bh ; out dx, eax ; jmp rax
0x00000000004673a7 : add al, byte ptr [rax] ; add byte ptr [rcx], bh ; ret
0x000000000061061e : add al, byte ptr [rax] ; add byte ptr [rcx], bl ; call qword ptr [rax]
0x000000000061064e : add al, byte ptr [rax] ; add byte ptr [rcx], bl ; call qword ptr [rsi]
0x00000000005e8652 : add al, byte ptr [rax] ; add byte ptr [rdi - 0xf], cl ; call qword ptr [rax]
0x000000000060fd9e : add al, byte ptr [rax] ; add byte ptr [rdi], dl ; call qword ptr [rax]
0x00000000005e6d02 : add al, byte ptr [rax] ; add byte ptr [rdx - 0x11], ch ; call rax
0x00000000005e9462 : add al, byte ptr [rax] ; add byte ptr [rdx - 0xd], ah ; call qword ptr [rax]
0x0000000000611d9e : add al, byte ptr [rax] ; add byte ptr [rdx - 0xd], ch ; call qword ptr [rcx]
0x00000000005e830a : add al, byte ptr [rax] ; add byte ptr [rdx], bl ; int1 ; jmp rax
0x0000000000403a67 : add al, byte ptr [rax] ; add byte ptr [rsi + 0x39], ah ; ret
0x00000000005e8d9a : add al, byte ptr [rax] ; add ch, ch ; int1 ; jmp rax
0x00000000005e98ca : add al, byte ptr [rax] ; add dh, ah ; cmc ; call rax
0x0000000000421355 : add al, byte ptr [rax] ; add dh, dh ; ret
0x0000000000437511 : add al, byte ptr [rax] ; add dh, dh ; ret 0xf01
0x0000000000420027 : add al, byte ptr [rax] ; add dh, dh ; ret 0xf08
0x00000000005e9c3a : add al, byte ptr [rax] ; add dl, bh ; cmc ; call rax
0x000000000040dc3a : add al, byte ptr [rax] ; add rsp, 0x58 ; ret
0x00000000006171fe : add al, byte ptr [rax] ; and ah, 0xf4 ; call qword ptr [rsi]
0x00000000006170de : add al, byte ptr [rax] ; and ah, ah ; hlt ; call qword ptr [rsi]
0x00000000005e8caa : add al, byte ptr [rax] ; and al, bl ; int1 ; jmp qword ptr [rax]
0x00000000005e6a22 : add al, byte ptr [rax] ; and al, dh ; out dx, al ; call rax
0x00000000005e9cda : add al, byte ptr [rax] ; and bh, bh ; cmc ; jmp qword ptr [rax]
0x00000000005ea1f2 : add al, byte ptr [rax] ; and byte ptr [rax], 0xf6 ; call qword ptr [rax]
0x00000000005e9452 : add al, byte ptr [rax] ; and byte ptr [rbx - 0xd], cl ; call rax
0x000000000061870e : add al, byte ptr [rax] ; and byte ptr [rbx], al ; cmc ; call qword ptr [rdi]
0x00000000005e8fba : add al, byte ptr [rax] ; and byte ptr [rcx], dh ; jmp rax
0x000000000061102e : add al, byte ptr [rax] ; and byte ptr [rdi], ch ; call qword ptr [rax]
0x000000000061592e : add al, byte ptr [rax] ; and byte ptr [rdx - 0xc], ah ; call rcx
0x00000000005e9092 : add al, byte ptr [rax] ; and byte ptr [rdx - 0xe], bh ; jmp rax
0x0000000000610a8e : add al, byte ptr [rax] ; and byte ptr [rdx], 0xf3 ; call qword ptr [rdx]
0x00000000005e831a : add al, byte ptr [rax] ; and byte ptr [rdx], bl ; int1 ; call qword ptr [rax]
0x00000000006174be : add al, byte ptr [rax] ; and ch, 0xf4 ; call qword ptr [rsi]
0x00000000005e691a : add al, byte ptr [rax] ; and ch, bl ; out dx, al ; call rax
0x00000000006176be : add al, byte ptr [rax] ; and dh, 0xf4 ; jmp qword ptr [rdi]
0x0000000000611d56 : add al, byte ptr [rax] ; call 0x126110cb
0x00000000006125a6 : add al, byte ptr [rax] ; call 0x1761193e
0x0000000000617036 : add al, byte ptr [rax] ; call 0x17616525
0x0000000000617336 : add al, byte ptr [rax] ; call 0x17616826
0x0000000000616d16 : add al, byte ptr [rax] ; call 0x226161db
0x0000000000616cc6 : add al, byte ptr [rax] ; call 0xffffffffe4616181
0x00000000004c9c53 : add al, byte ptr [rax] ; call rax
0x000000000060d246 : add al, byte ptr [rax] ; clc ; add al, -0x10 ; jmp qword ptr [rdi]
0x0000000000617366 : add al, byte ptr [rax] ; clc ; in al, -0xc ; call qword ptr [rsi]
0x0000000000617666 : add al, byte ptr [rax] ; clc ; in eax, -0xc ; call qword ptr [rax]
0x00000000006175a6 : add al, byte ptr [rax] ; clc ; in eax, -0xc ; call qword ptr [rsi]
0x0000000000617066 : add al, byte ptr [rax] ; clc ; jrcxz 0x617064 ; call qword ptr [rsi]
0x0000000000617be6 : add al, byte ptr [rax] ; clc ; out dx, al ; hlt ; call qword ptr [rax]
0x0000000000615536 : add al, byte ptr [rax] ; clc ; pop rax ; hlt ; call qword ptr [rcx]
0x00000000006106f6 : add al, byte ptr [rax] ; clc ; sbb bl, dh ; call qword ptr [rax]
0x0000000000611156 : add al, byte ptr [rax] ; clc ; xor bl, dh ; call qword ptr [rax]
0x00000000005e8e4a : add al, byte ptr [rax] ; cmc ; int1 ; jmp qword ptr [rax]
0x000000000041b642 : add al, byte ptr [rax] ; cmove rax, rcx ; ret
0x0000000000617126 : add al, byte ptr [rax] ; cmp ah, ah ; hlt ; call qword ptr [rsi]
0x000000000060eab6 : add al, byte ptr [rax] ; cmp ah, ch ; jmp rdx
0x000000000060ee06 : add al, byte ptr [rax] ; cmp byte ptr [rcx], cl ; call rbx
0x00000000006173e6 : add al, byte ptr [rax] ; cmp ch, ah ; hlt ; call qword ptr [rsi]
0x0000000000617246 : add al, byte ptr [rax] ; cwde ; in al, -0xc ; call qword ptr [rsi]
0x00000000006114d6 : add al, byte ptr [rax] ; fadd dword ptr [rdx - 0xd] ; jmp qword ptr [rcx]
0x000000000060e986 : add al, byte ptr [rax] ; fcom st(7) ; call qword ptr [rbx]
0x0000000000610d36 : add al, byte ptr [rax] ; fsub dword ptr [rsi] ; call qword ptr [rbx]
0x0000000000617006 : add al, byte ptr [rax] ; fsub st(3) ; hlt ; call qword ptr [rsi]
0x0000000000617306 : add al, byte ptr [rax] ; fsub st(4) ; hlt ; call qword ptr [rsi]
0x0000000000611ed6 : add al, byte ptr [rax] ; fsubr dword ptr [rcx - 0xd] ; call qword ptr [rdi]
0x000000000061713e : add al, byte ptr [rax] ; in al, -0xc ; call qword ptr [rsi]
0x00000000006173fe : add al, byte ptr [rax] ; in eax, -0xc ; call qword ptr [rsi]
0x00000000005e93ca : add al, byte ptr [rax] ; in eax, -0xe ; jmp rax
0x00000000005e9032 : add al, byte ptr [rax] ; jmp qword ptr [rax]
0x00000000005e6b6a : add al, byte ptr [rax] ; jo 0x5e6b6c ; out dx, al ; jmp qword ptr [rax]
0x00000000005e6c8a : add al, byte ptr [rax] ; jo 0x5e6cc4 ; out dx, eax ; jmp rax
0x00000000005e7232 : add al, byte ptr [rax] ; jo 0x5e722b ; out dx, eax ; jmp qword ptr [rax]
0x00000000005e72aa : add al, byte ptr [rax] ; jo 0x5e72ab ; out dx, eax ; call qword ptr [rax]
0x00000000005e72a9 : add al, byte ptr [rax] ; jo 0x5e72ac ; out dx, eax ; call qword ptr [rax]
0x00000000005e82a2 : add al, byte ptr [rax] ; jo 0x5e82b6 ; int1 ; call rax
0x00000000005e8782 : add al, byte ptr [rax] ; jo 0x5e87e3 ; int1 ; jmp rax
0x00000000005e8932 : add al, byte ptr [rax] ; jo 0x5e88cd ; int1 ; call rax
0x00000000005e8b32 : add al, byte ptr [rax] ; jo 0x5e8ad6 ; int1 ; call qword ptr [rax]
0x00000000005e8d0a : add al, byte ptr [rax] ; jo 0x5e8cf6 ; int1 ; jmp rax
0x00000000005e914a : add al, byte ptr [rax] ; jo 0x5e90e7 ; call qword ptr [rax]
0x00000000005e9632 : add al, byte ptr [rax] ; jo 0x5e96b3 ; cmc ; jmp qword ptr [rax]
0x00000000005e9892 : add al, byte ptr [rax] ; jo 0x5e987e ; cmc ; jmp qword ptr [rax]
0x00000000006103de : add al, byte ptr [rax] ; jo 0x610400 ; call qword ptr [rsi]
0x000000000061141e : add al, byte ptr [rax] ; jo 0x611469 ; call qword ptr [rbx]
0x00000000006116ae : add al, byte ptr [rax] ; jo 0x611704 ; jmp rdx
0x000000000061338e : add al, byte ptr [rax] ; jo 0x613347 ; jmp qword ptr [rdx]
0x00000000006171ce : add al, byte ptr [rax] ; jo 0x6171bb ; hlt ; call qword ptr [rsi]
0x000000000061748e : add al, byte ptr [rax] ; jo 0x61747c ; hlt ; call qword ptr [rsi]
0x0000000000616ece : add al, byte ptr [rax] ; jrcxz 0x616ecc ; jmp qword ptr [rdi]
0x000000000060ecb6 : add al, byte ptr [rax] ; js 0x60ecbf ; call qword ptr [rdx]
0x0000000000610306 : add al, byte ptr [rax] ; js 0x610328 ; call qword ptr [rsi]
0x0000000000610305 : add al, byte ptr [rax] ; js 0x610329 ; call qword ptr [rsi]
0x0000000000615976 : add al, byte ptr [rax] ; js 0x6159e2 ; hlt ; jmp qword ptr [rcx]
0x00000000006176a6 : add al, byte ptr [rax] ; js 0x617695 ; hlt ; call qword ptr [rdi]
0x00000000005e64da : add al, byte ptr [rax] ; loopne 0x5e6477 ; out dx, al ; call qword ptr [rax]
0x00000000005e669a : add al, byte ptr [rax] ; loopne 0x5e6649 ; out dx, al ; call rax
0x00000000005e69b2 : add al, byte ptr [rax] ; loopne 0x5e69a3 ; out dx, al ; call qword ptr [rax]
0x00000000005e6be2 : add al, byte ptr [rax] ; loopne 0x5e6bec ; out dx, eax ; jmp qword ptr [rax]
0x00000000005e6c02 : add al, byte ptr [rax] ; loopne 0x5e6c11 ; out dx, eax ; call rax
0x00000000005e6e42 : add al, byte ptr [rax] ; loopne 0x5e6de6 ; out dx, eax ; call rax
0x00000000005e718a : add al, byte ptr [rax] ; loopne 0x5e716b ; out dx, eax ; jmp qword ptr [rax]
0x00000000005e7262 : add al, byte ptr [rax] ; loopne 0x5e725d ; out dx, eax ; jmp rax
0x00000000005e7272 : add al, byte ptr [rax] ; loopne 0x5e726e ; out dx, eax ; jmp qword ptr [rax]
0x00000000005e7271 : add al, byte ptr [rax] ; loopne 0x5e726f ; out dx, eax ; jmp qword ptr [rax]
0x00000000005e80d2 : add al, byte ptr [rax] ; loopne 0x5e80cc ; call qword ptr [rax]
0x00000000005e89f2 : add al, byte ptr [rax] ; loopne 0x5e8990 ; int1 ; call qword ptr [rax]
0x00000000005e8e9a : add al, byte ptr [rax] ; loopne 0x5e8e98 ; int1 ; call qword ptr [rax]
0x00000000005e905a : add al, byte ptr [rax] ; loopne 0x5e90c4 ; jmp rax
0x00000000005e9882 : add al, byte ptr [rax] ; loopne 0x5e986a ; cmc ; call rax
0x000000000060f85e : add al, byte ptr [rax] ; loopne 0x60f878 ; call qword ptr [rcx]
0x000000000060fa3e : add al, byte ptr [rax] ; loopne 0x60fa5b ; call qword ptr [rax]
0x0000000000611d3e : add al, byte ptr [rax] ; loopne 0x611db0 ; call qword ptr [rcx]
0x0000000000611eee : add al, byte ptr [rax] ; loopne 0x611f60 ; call qword ptr [rdi]
0x000000000061258e : add al, byte ptr [rax] ; loopne 0x612523 ; call qword ptr [rsi]
0x000000000061701e : add al, byte ptr [rax] ; loopne 0x61700a ; hlt ; call qword ptr [rsi]
0x0000000000617e3e : add al, byte ptr [rax] ; loopne 0x617e3d ; hlt ; call rdi
0x0000000000617216 : add al, byte ptr [rax] ; mov ah, ah ; hlt ; call qword ptr [rsi]
0x00000000005e995a : add al, byte ptr [rax] ; mov al, -0x10 ; cmc ; jmp rax
0x00000000005e8d62 : add al, byte ptr [rax] ; mov al, -0x16 ; int1 ; jmp qword ptr [rax]
0x0000000000616f8e : add al, byte ptr [rax] ; mov al, -0x1d ; hlt ; call qword ptr [rsi]
0x00000000005e93aa : add al, byte ptr [rax] ; mov al, -0x24 ; push qword ptr [rax] ; ret
0x00000000005e6752 : add al, byte ptr [rax] ; mov al, -0x48 ; out dx, al ; call rax
0x000000000061336e : add al, byte ptr [rax] ; mov al, -0x51 ; call rdi
0x0000000000616c7e : add al, byte ptr [rax] ; mov al, -0x51 ; hlt ; call qword ptr [rcx]
0x00000000005e9242 : add al, byte ptr [rax] ; mov al, -0x51 ; jmp rax
0x00000000005e97c2 : add al, byte ptr [rax] ; mov al, -0x52 ; cmc ; call rax
0x00000000005e6ec2 : add al, byte ptr [rax] ; mov al, -0x58 ; out dx, eax ; jmp qword ptr [rax]
0x00000000005e91da : add al, byte ptr [rax] ; mov al, -0x66 ; jmp rax
0x000000000060dece : add al, byte ptr [rax] ; mov al, -0x67 ; call qword ptr [rbx]
0x00000000005e9b5a : add al, byte ptr [rax] ; mov al, -0xc ; cmc ; jmp rax
0x00000000005e9a5a : add al, byte ptr [rax] ; mov al, -0xe ; cmc ; jmp rax
0x00000000005e9522 : add al, byte ptr [rax] ; mov al, -8 ; hlt ; call rax
0x000000000060fcde : add al, byte ptr [rax] ; mov al, 0x16 ; call qword ptr [rax]
0x000000000061521e : add al, byte ptr [rax] ; mov al, 0x49 ; hlt ; jmp qword ptr [rax]
0x000000000060c37e : add al, byte ptr [rax] ; mov al, 0x6a ; out dx, eax ; jmp qword ptr [rdi]
0x0000000000616f46 : add al, byte ptr [rax] ; mov bl, ah ; hlt ; jmp qword ptr [rdi]
0x0000000000612496 : add al, byte ptr [rax] ; mov bl, sil ; call qword ptr [rdx]
0x0000000000402e53 : add al, byte ptr [rax] ; mov eax, 1 ; pop rdx ; ret
0x00000000005e8522 : add al, byte ptr [rax] ; nop ; cmp ecx, esi ; call rax
0x00000000005e909a : add al, byte ptr [rax] ; nop ; jp 0x5e9096 ; call qword ptr [rax]
0x00000000005e812a : add al, byte ptr [rax] ; nop ; loope 0x5e8124 ; jmp qword ptr [rax]
0x00000000005e8b5a : add al, byte ptr [rax] ; nop ; mov dl, -0xf ; call qword ptr [rax]
0x00000000004e345d : add al, byte ptr [rax] ; nop ; mov eax, 0x5bd7d8 ; ret
0x00000000005e9f1a : add al, byte ptr [rax] ; nop ; or esi, esi ; jmp qword ptr [rax]
0x00000000005ea2ba : add al, byte ptr [rax] ; nop ; sub dh, dh ; call rax
0x00000000005e6d7a : add al, byte ptr [rax] ; nop ; test ch, bh ; jmp qword ptr [rax]
0x0000000000617096 : add al, byte ptr [rax] ; or ah, ah ; hlt ; call qword ptr [rsi]
0x00000000005ea01a : add al, byte ptr [rax] ; or al, 0xfffffff6 ; jmp qword ptr [rax]
0x00000000006100f6 : add al, byte ptr [rax] ; or byte ptr [rcx], bl ; call qword ptr [rax]
0x0000000000611db6 : add al, byte ptr [rax] ; or byte ptr [rdx - 0xd], ch ; call qword ptr [rcx]
0x00000000005e9f6a : add al, byte ptr [rax] ; or byte ptr [rdx], 0xf6 ; call qword ptr [rax]
0x0000000000617396 : add al, byte ptr [rax] ; or ch, ah ; hlt ; call qword ptr [rsi]
0x00000000006175d6 : add al, byte ptr [rax] ; or dh, ah ; hlt ; call qword ptr [rsi]
0x00000000005e9eaa : add al, byte ptr [rax] ; or sil, sil ; call rax
0x00000000005e9f5a : add al, byte ptr [rax] ; or sil, sil ; jmp rax
0x00000000006181c6 : add al, byte ptr [rax] ; pop rax ; add ch, dh ; call qword ptr [rax]
0x0000000000617186 : add al, byte ptr [rax] ; pop rax ; in al, -0xc ; call qword ptr [rsi]
0x0000000000612526 : add al, byte ptr [rax] ; pop rax ; mov esi, ebx ; jmp rdi
0x000000000060c846 : add al, byte ptr [rax] ; pop rax ; ret
0x00000000006101b6 : add al, byte ptr [rax] ; pop rax ; sbb ebx, esi ; call qword ptr [rax]
0x00000000004b7d27 : add al, byte ptr [rax] ; pop rbx ; pop r14 ; pop r15 ; ret
0x000000000049cffc : add al, byte ptr [rax] ; pop rbx ; ret
0x00000000006181de : add al, byte ptr [rax] ; push rax ; add ch, dh ; jmp qword ptr [rbx]
0x00000000005e7532 : add al, byte ptr [rax] ; push rax ; and al, dh ; jmp qword ptr [rax]
0x00000000005e7632 : add al, byte ptr [rax] ; push rax ; and dh, al ; jmp qword ptr [rax]
0x000000000060d6ae : add al, byte ptr [rax] ; push rax ; and eax, esi ; jmp qword ptr [rdx]
0x00000000005e9bf2 : add al, byte ptr [rax] ; push rax ; clc ; cmc ; jmp rax
0x00000000005e9432 : add al, byte ptr [rax] ; push rax ; cli ; call qword ptr [rax]
0x00000000005e9aaa : add al, byte ptr [rax] ; push rax ; cmc ; call rax
0x00000000005e9baa : add al, byte ptr [rax] ; push rax ; cmc ; cmc ; call rax
0x000000000061716e : add al, byte ptr [rax] ; push rax ; in al, -0xc ; call qword ptr [rsi]
0x000000000061742e : add al, byte ptr [rax] ; push rax ; in eax, -0xc ; call qword ptr [rsi]
0x00000000005e99aa : add al, byte ptr [rax] ; push rax ; int1 ; cmc ; call rax
0x00000000005e6f02 : add al, byte ptr [rax] ; push rax ; lodsb al, byte ptr [rsi] ; out dx, eax ; call qword ptr [rax]
0x00000000005e817a : add al, byte ptr [rax] ; push rax ; loop 0x5e8174 ; call qword ptr [rax]
0x000000000060e4be : add al, byte ptr [rax] ; push rax ; mov bh, -0xe ; jmp qword ptr [rax]
0x00000000005e86e2 : add al, byte ptr [rax] ; push rax ; push rbx ; int1 ; jmp rax
0x000000000060c85e : add al, byte ptr [rax] ; push rax ; ret
0x000000000060e88e : add al, byte ptr [rax] ; push rax ; sal edx, 1 ; call rsp
0x00000000005ea16a : add al, byte ptr [rax] ; push rax ; sbb esi, esi ; jmp qword ptr [rax]
0x00000000005e8742 : add al, byte ptr [rax] ; push rsi ; int1 ; call qword ptr [rax]
0x00000000005e7372 : add al, byte ptr [rax] ; rcl byte ptr [rcx], -0x10 ; call qword ptr [rax]
0x000000000061076e : add al, byte ptr [rax] ; rcr byte ptr [rax] ; call qword ptr [rax]
0x000000000040262e : add al, byte ptr [rax] ; ret
0x00000000005e92c2 : add al, byte ptr [rax] ; rol al, 1 ; call rax
0x000000000061527e : add al, byte ptr [rax] ; ror byte ptr [rcx - 0xc], 1 ; call qword ptr [rdi]
0x00000000005e685a : add al, byte ptr [rax] ; ror dh, 1 ; out dx, al ; call rax
0x00000000005e9b6a : add al, byte ptr [rax] ; sal ah, 1 ; cmc ; call qword ptr [rax]
0x00000000005e996a : add al, byte ptr [rax] ; sal al, 1 ; cmc ; call qword ptr [rax]
0x00000000005e8e8a : add al, byte ptr [rax] ; sal ch, -0xf ; jmp rax
0x00000000005e9a6a : add al, byte ptr [rax] ; sal dl, 1 ; cmc ; call qword ptr [rax]
0x00000000005ea34a : add al, byte ptr [rax] ; sar byte ptr [rdi], -0xa ; call qword ptr [rax]
0x00000000006170c6 : add al, byte ptr [rax] ; sbb ah, ah ; hlt ; call qword ptr [rsi]
0x00000000006178a6 : add al, byte ptr [rax] ; sbb bh, ah ; hlt ; call qword ptr [rdx]
0x000000000061052e : add al, byte ptr [rax] ; sbb ebx, esi ; call qword ptr [rsi]
0x0000000000616fbe : add al, byte ptr [rax] ; shl bl, -0xc ; call qword ptr [rsi]
0x0000000000616fee : add al, byte ptr [rax] ; shl bl, 1 ; hlt ; call qword ptr [rsi]
0x0000000000610d7e : add al, byte ptr [rax] ; shl byte ptr [rsi], 1 ; jmp qword ptr [rcx]
0x000000000061756e : add al, byte ptr [rax] ; shl ch, 1 ; hlt ; call qword ptr [rsi]
0x0000000000616dbe : add al, byte ptr [rax] ; shl cl, 1 ; hlt ; call qword ptr [rax]
0x0000000000617c3e : add al, byte ptr [rax] ; shr bh, -0xc ; call rbx
0x0000000000610f0e : add al, byte ptr [rax] ; shr byte ptr [rbx], 1 ; call rdi
0x0000000000611ebe : add al, byte ptr [rax] ; shr byte ptr [rcx - 0xd], 1 ; call qword ptr [rbx]
0x00000000005e8482 : add al, byte ptr [rax] ; shr byte ptr [rcx], 1 ; int1 ; call qword ptr [rax]
0x00000000005e8d4a : add al, byte ptr [rax] ; shr cl, 1 ; int1 ; call rax
0x00000000006144fe : add al, byte ptr [rax] ; std ; call rax
0x00000000006170f6 : add al, byte ptr [rax] ; sub ah, ah ; hlt ; call qword ptr [rsi]
0x00000000005e69a2 : add al, byte ptr [rax] ; sub al, -0x12 ; jmp rax
0x0000000000615756 : add al, byte ptr [rax] ; sub byte ptr [rax - 0xc], ah ; call qword ptr [rax]
0x00000000006105a6 : add al, byte ptr [rax] ; sub byte ptr [rcx], bl ; call qword ptr [rax]
0x0000000000618626 : add al, byte ptr [rax] ; sub byte ptr [rdx], al ; cmc ; jmp qword ptr [rdi]
0x00000000006116e6 : add al, byte ptr [rax] ; sub byte ptr [rsi - 0xd], cl ; call qword ptr [rax]
0x00000000005e76ea : add al, byte ptr [rax] ; sub byte ptr [rsi], -0x10 ; jmp rax
0x00000000005e991a : add al, byte ptr [rax] ; sub ch, -0xb ; jmp rax
0x00000000005ea2ca : add al, byte ptr [rax] ; sub esi, esi ; call qword ptr [rax]
0x00000000006174f6 : add al, byte ptr [rax] ; test al, -0x1b ; hlt ; call qword ptr [rsi]
0x0000000000617276 : add al, byte ptr [rax] ; test al, -0x1c ; hlt ; call qword ptr [rsi]
0x000000000060e2d6 : add al, byte ptr [rax] ; test al, -0x4f ; jmp qword ptr [rdx]
0x0000000000618436 : add al, byte ptr [rax] ; test al, -1 ; hlt ; call qword ptr [rax]
0x00000000006107e6 : add al, byte ptr [rax] ; test al, 0x18 ; call qword ptr [rax]
0x00000000005e976a : add al, byte ptr [rax] ; wait ; cmc ; call rax
0x00000000005e89a2 : add al, byte ptr [rax] ; xchg eax, ebp ; int1 ; jmp qword ptr [rax]
0x00000000005e8aa2 : add al, byte ptr [rax] ; xchg eax, edi ; int1 ; jmp qword ptr [rax]
0x000000000061710e : add al, byte ptr [rax] ; xor ah, ah ; hlt ; call qword ptr [rsi]
0x00000000005e9b1a : add al, byte ptr [rax] ; xor ah, dh ; cmc ; jmp qword ptr [rax]
0x00000000005e6b12 : add al, byte ptr [rax] ; xor bh, 0xee ; call qword ptr [rax]
0x00000000005e8eea : add al, byte ptr [rax] ; xor bh, 0xf1 ; jmp qword ptr [rax]
0x00000000005e79c2 : add al, byte ptr [rax] ; xor byte ptr [rax - 0x10], dh ; jmp rax
0x00000000006104ce : add al, byte ptr [rax] ; xor byte ptr [rcx], bl ; call qword ptr [rax]
0x00000000006104fe : add al, byte ptr [rax] ; xor byte ptr [rcx], bl ; call qword ptr [rsi]
0x00000000005e84da : add al, byte ptr [rax] ; xor byte ptr [rdi], 0xf1 ; jmp rax
0x00000000006173ce : add al, byte ptr [rax] ; xor ch, ah ; hlt ; call qword ptr [rsi]
0x00000000005e7062 : add al, byte ptr [rax] ; xor ch, al ; out dx, eax ; jmp qword ptr [rax]
0x00000000005e9382 : add al, byte ptr [rax] ; xor ch, dl ; lcall ptr [rax] ; ret 2
0x00000000005e6a92 : add al, byte ptr [rax] ; xor cl, dh ; out dx, al ; jmp qword ptr [rax]
0x00000000005e8daa : add al, byte ptr [rax] ; xor dh, ch ; int1 ; call qword ptr [rax]
0x00000000005e9a1a : add al, byte ptr [rax] ; xor dl, dh ; cmc ; jmp qword ptr [rax]
0x000000000049cad6 : add al, byte ptr [rax] ; xor eax, eax ; pop rbx ; pop r14 ; pop r15 ; ret
0x000000000049ce61 : add al, byte ptr [rax] ; xor eax, eax ; pop rbx ; ret
0x000000000049cb08 : add al, byte ptr [rax] ; xor eax, eax ; pop rdx ; ret
0x000000000049c838 : add al, byte ptr [rax] ; xor ebx, ebx ; mov eax, ebx ; pop rbx ; ret
0x0000000000505e42 : add al, byte ptr [rbp + 1] ; ret
0x000000000040b807 : add al, byte ptr [rbx - 0x7cb7fd3f] ; ret 0x4403
0x000000000048cb94 : add al, byte ptr [rcx + rcx*8 - 0xdbaf0b8] ; jmp 0x48cb68
0x000000000040b714 : add al, byte ptr [rcx - 0x75] ; push rdi ; jo 0x40b6a3 ; ret 0x4cfe
0x000000000048ed9e : add al, byte ptr [rcx] ; add byte ptr [rax], al ; call rax
0x00000000004c2193 : add al, byte ptr [rcx] ; ret 0xead1
0x0000000000409f99 : add al, byte ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005e63a1 : add al, byte ptr [rdx] ; add byte ptr [rax + 0x6d], ah ; out dx, al ; call qword ptr [rax]
0x00000000005e6e41 : add al, byte ptr cs:[rax] ; loopne 0x5e6de7 ; out dx, eax ; call rax
0x00000000006100f5 : add al, byte ptr ds:[rax] ; or byte ptr [rcx], bl ; call qword ptr [rax]
0x00000000004b9d21 : add al, byte ptr es:[rax] ; add al, ch ; ret 2
0x00000000005e6cb1 : add al, byte ptr es:[rax] ; add byte ptr [rcx], bh ; out dx, eax ; jmp rax
0x000000000060e88d : add al, byte ptr es:[rax] ; push rax ; sal edx, 1 ; call rsp
0x0000000000411175 : add al, byte ptr gs:[rax] ; add al, ch ; ret 0x7dd
0x000000000060f85d : add al, byte ptr ss:[rax] ; loopne 0x60f879 ; call qword ptr [rcx]
0x000000000042df5a : add al, ch ; adc ah, ah ; or dword ptr [rax], eax ; xor eax, eax ; pop rdx ; ret
0x000000000047a756 : add al, ch ; adc al, 0x1c ; add eax, 0x5bc03100 ; ret
0x000000000043074a : add al, ch ; adc byte ptr [rax + 0xb], bl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004b915a : add al, ch ; adc byte ptr [rdx], dh ; add dword ptr [rax], eax ; xor eax, eax ; pop rdx ; ret
0x00000000004bae23 : add al, ch ; adc eax, 0xc0310001 ; pop rdx ; ret
0x0000000000541357 : add al, ch ; adc esi, dword ptr [rax - 0x3fce0008] ; pop rdx ; ret
0x000000000048df59 : add al, ch ; adc esp, esp ; add eax, dword ptr [rax] ; xor eax, eax ; pop rdx ; ret
0x0000000000551406 : add al, ch ; add al, 0x4f ; stc ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000552998 : add al, ch ; add al, byte ptr [rax - 0x10] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000405eda : add al, ch ; add byte ptr [rbx - 0x76b7fff1], ch ; ret
0x00000000004f3a6a : add al, ch ; add byte ptr [rcx - 0x3fce0003], cl ; pop rbx ; ret
0x00000000004b896a : add al, ch ; add byte ptr [rdx], bh ; add dword ptr [rax], eax ; xor eax, eax ; pop rdx ; ret
0x0000000000544ae9 : add al, ch ; add dword ptr [rbp - 5], ebx ; dec dword ptr [rax - 0x77] ; ret
0x00000000004e2a59 : add al, ch ; add dword ptr [rip - 0x76b80000], esi ; ret
0x00000000004c934a : add al, ch ; and byte ptr [rax], dh ; add byte ptr [rax], al ; xor eax, eax ; pop rdx ; ret
0x00000000004b934a : add al, ch ; and byte ptr [rax], dh ; add dword ptr [rax], eax ; xor eax, eax ; pop rdx ; ret
0x000000000049ed48 : add al, ch ; and dl, dh ; add al, byte ptr [rax] ; xor eax, eax ; pop rbx ; ret
0x000000000048dfe9 : add al, ch ; and ebx, 0xc0310003 ; pop rdx ; ret
0x000000000055a537 : add al, ch ; and edi, dword ptr [rdx - 0x76b70008] ; ret
0x00000000004cde3b : add al, ch ; call qword ptr [rax]
0x000000000043f26b : add al, ch ; call rax
0x00000000004ef16b : add al, ch ; call rcx
0x0000000000454ec1 : add al, ch ; cdq ; adc byte ptr [rcx], cl ; add byte ptr [rax - 0x77], cl ; ret
0x000000000049cb04 : add al, ch ; clc ; add al, byte ptr [rax] ; xor eax, eax ; pop rdx ; ret
0x00000000004e6742 : add al, ch ; clc ; ret 0xffff
0x0000000000487255 : add al, ch ; cmc ; jg 0x48726d ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000547e20 : add al, ch ; cmp ah, cl ; stc ; dec dword ptr [rax - 0x77] ; ret
0x00000000004b89e9 : add al, ch ; cmp dword ptr [rcx], 0xc0310001 ; pop rdx ; ret
0x00000000004200c4 : add al, ch ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xa
0x00000000004cffe3 : add al, ch ; div ebx ; sti ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000559c7f : add al, ch ; fcmovnb st(0), st(2) ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000485f6e : add al, ch ; fcom qword ptr [rdx - 0x76b7fff5] ; ret
0x000000000042c592 : add al, ch ; fdivr st(5) ; or dword ptr [rax], eax ; xor eax, eax ; pop rdx ; ret
0x000000000042ce7b : add al, ch ; fist word ptr [rax - 0x76b7fff5] ; ret
0x000000000046c47f : add al, ch ; fistp dword ptr [rdx - 0x76b7fff9] ; ret
0x00000000004fa47b : add al, ch ; fistp qword ptr [rdx - 0x76b70002] ; ret
0x00000000004aba8d : add al, ch ; fisttp qword ptr [rax] ; add al, byte ptr [rax] ; xor eax, eax ; pop rdx ; ret
0x000000000049befc : add al, ch ; fisub word ptr [rdx - 0xa] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000479b1d : add al, ch ; fnsave dword ptr [rdx - 2] ; dec dword ptr [rax - 0x77] ; ret
0x000000000054de8f : add al, ch ; fsetpm ; idiv edi ; xor eax, eax ; pop rbx ; ret
0x00000000004261ef : add al, ch ; imul edi, ebp, 0xb ; add byte ptr [rax - 0x77], cl ; ret
0x000000000041fb86 : add al, ch ; in al, -0x39 ; or al, byte ptr [rax] ; xor eax, eax ; pop rbx ; ret
0x0000000000617337 : add al, ch ; in al, -0xc ; call qword ptr [rsi]
0x0000000000486986 : add al, ch ; in al, 0x59 ; add al, 0 ; xor eax, eax ; pop rdx ; ret
0x00000000004bd728 : add al, ch ; in al, dx ; add byte ptr [rax], al ; xor eax, eax ; pop rdx ; ret
0x000000000049d37e : add al, ch ; in al, dx ; out dx, eax ; add al, byte ptr [rax] ; xor eax, eax ; pop rdx ; ret
0x0000000000423d2d : add al, ch ; in eax, dx ; ret 1
0x000000000043806e : add al, ch ; insb byte ptr [rdi], dx ; sbb edx, dword ptr [rax] ; add byte ptr [rcx], bh ; ret
0x000000000042ff79 : add al, ch ; int1 ; ret
0x00000000004c3923 : add al, ch ; ja 0x4c39a0 ; cli ; dec dword ptr [rax - 0x7f] ; ret
0x0000000000539db7 : add al, ch ; jae 0x539e42 ; in al, dx ; dec dword ptr [rax - 0x77] ; ret
0x0000000000567d04 : add al, ch ; jbe 0x567d54 ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000487fb7 : add al, ch ; je 0x487fc3 ; add bh, bh ; ret
0x000000000043eca7 : add al, ch ; jl 0x43ecb5 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005f5ca7 : add al, ch ; jle 0x5f5c96 ; jmp rsi
0x000000000047b50b : add al, ch ; jmp rcx
0x00000000005385e9 : add al, ch ; jno 0x5385ce ; cli ; dec dword ptr [rax - 0x77] ; ret
0x0000000000484eef : add al, ch ; jnp 0x484f70 ; add al, 0 ; xor eax, eax ; pop rdx ; ret
0x00000000005472df : add al, ch ; jnp 0x5472d7 ; stc ; dec dword ptr [rax - 0x77] ; ret
0x00000000005426e1 : add al, ch ; jns 0x5426a1 ; hlt ; dec dword ptr [rax - 0x77] ; ret 0xdb31
0x000000000042a6fa : add al, ch ; jo 0x42a723 ; or al, byte ptr [rax] ; xor eax, eax ; pop rdx ; ret
0x00000000004b90fa : add al, ch ; jo 0x4b9139 ; add dword ptr [rax], eax ; xor eax, eax ; pop rdx ; ret
0x00000000004ef14a : add al, ch ; jo 0x4ef0fc ; idiv bh ; pop rbx ; ret
0x00000000005392ea : add al, ch ; jo 0x5392c2 ; cli ; dec dword ptr [rax - 0x77] ; ret
0x000000000054b9b7 : add al, ch ; jrcxz 0x54b972 ; lock dec dword ptr [rax - 0x77] ; ret
0x0000000000617037 : add al, ch ; jrcxz 0x617033 ; call qword ptr [rsi]
0x000000000042daf2 : add al, ch ; js 0x42dae7 ; or dword ptr [rax], eax ; xor eax, eax ; pop rdx ; ret
0x00000000005686d2 : add al, ch ; js 0x568749 ; std ; dec dword ptr [rax - 0x77] ; ret
0x00000000004c5aad : add al, ch ; lodsd eax, dword ptr [rsi] ; add al, 2 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000402dbd : add al, ch ; lodsd eax, dword ptr [rsi] ; xchg eax, ebp ; or al, 0 ; xor eax, eax ; pop rbx ; ret
0x000000000049e914 : add al, ch ; loop 0x49e920 ; dec dword ptr [rax - 0x77] ; ret
0x00000000004a4c88 : add al, ch ; loop 0x4a4d0b ; add al, byte ptr [rax] ; xor eax, eax ; pop rbx ; ret
0x00000000004ca889 : add al, ch ; loope 0x4ca8b0 ; add byte ptr [rax], al ; xor eax, eax ; pop rdx ; ret
0x000000000042df8a : add al, ch ; loopne 0x42df7a ; or dword ptr [rax], eax ; xor eax, eax ; pop rdx ; ret
0x000000000048c08a : add al, ch ; loopne 0x48c099 ; add al, 0 ; xor eax, eax ; pop rdx ; ret
0x00000000004b948a : add al, ch ; loopne 0x4b94c5 ; add dword ptr [rax], eax ; xor eax, eax ; pop rdx ; ret
0x00000000006099e7 : add al, ch ; mov al, -0x12 ; call rsi
0x0000000000405e2a : add al, ch ; mov al, -0x55 ; str word ptr [rax - 0x77] ; ret
0x000000000055c05a : add al, ch ; mov al, -0x5e ; clc ; dec dword ptr [rax - 0x7d] ; ret
0x00000000004b91ba : add al, ch ; mov al, 0x31 ; add dword ptr [rax], eax ; xor eax, eax ; pop rdx ; ret
0x000000000048c0ba : add al, ch ; mov al, 2 ; add al, 0 ; xor eax, eax ; pop rdx ; ret
0x00000000004b1943 : add al, ch ; mov bh, -0x6f ; sti ; dec dword ptr [rax - 0x7f] ; ret
0x00000000005f3f37 : add al, ch ; mov bl, -0x1a ; call qword ptr [rcx]
0x000000000055a2a7 : add al, ch ; mov bl, -0x44 ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000049cdb5 : add al, ch ; mov ch, -0xb ; add al, byte ptr [rax] ; xor eax, eax ; pop rdx ; ret
0x00000000005474d0 : add al, ch ; mov ch, dl ; stc ; dec dword ptr [rax - 0x77] ; ret
0x000000000054a0e9 : add al, ch ; mov cl, -0x38 ; lock dec dword ptr [rax - 0x77] ; ret
0x00000000004869b9 : add al, ch ; mov cl, 0x59 ; add al, 0 ; xor eax, eax ; pop rdx ; ret
0x0000000000448638 : add al, ch ; mov dl, 0x5e ; or al, byte ptr [rax] ; pop rax ; ret
0x00000000004948b8 : add al, ch ; mov dl, 0x7a ; add eax, dword ptr [rax] ; xor eax, eax ; pop rbx ; ret
0x00000000004ab7b8 : add al, ch ; mov dl, 0xb ; add al, byte ptr [rax] ; xor eax, eax ; pop rdx ; ret
0x00000000004a77ec : add al, ch ; mov ds, word ptr [rbx + 6] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006125a7 : add al, ch ; mov ebx, dr0 ; call qword ptr [rsi]
0x00000000004bc1b5 : add al, ch ; mov r8d, 0x8948ffff ; ret
0x0000000000436cba : add al, ch ; or al, 8 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000548050 : add al, ch ; or bl, bh ; stc ; dec dword ptr [rax - 0x77] ; ret
0x00000000004abae9 : add al, ch ; or dword ptr [rax], 0xc0310002 ; pop rdx ; ret
0x0000000000543a61 : add al, ch ; or dword ptr [rcx - 0x3fce0008], ecx ; pop rdx ; ret
0x000000000049cb84 : add al, ch ; out -9, al ; add al, byte ptr [rax] ; xor eax, eax ; pop rdx ; ret
0x000000000056780f : add al, ch ; out -9, eax ; dec dword ptr [rax - 0x77] ; ret
0x000000000042791c : add al, ch ; out 0xb, al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000060b7a7 : add al, ch ; out dx, eax ; call qword ptr [rcx]
0x00000000004bb74b : add al, ch ; out dx, eax ; ret
0x00000000004e7dd2 : add al, ch ; pop rax ; lahf ; int1 ; dec dword ptr [rax - 0x77] ; ret
0x00000000004fc042 : add al, ch ; pop rax ; test eax, 0x8948fff5 ; ret
0x000000000054d902 : add al, ch ; pop rax ; xchg cl, bh ; dec dword ptr [rax - 0x77] ; ret
0x0000000000478e9d : add al, ch ; pop rbp ; jg 0x478ea8 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000551dfd : add al, ch ; pop rbp ; stc ; dec dword ptr [rax - 0x77] ; ret
0x00000000004c60ff : add al, ch ; pop rbx ; inc byte ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005395ff : add al, ch ; pop rbx ; leave ; cli ; dec dword ptr [rax - 0x77] ; ret
0x000000000054dff1 : add al, ch ; pop rcx ; ret 0xfff9
0x0000000000464201 : add al, ch ; pop rcx ; sbb eax, 0x89480008 ; ret
0x00000000004de800 : add al, ch ; pop rdx ; ja 0x4de80d ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000405e7e : add al, ch ; pop rsp ; stosd dword ptr [rdi], eax ; str word ptr [rax - 0x77] ; ret
0x000000000047885d : add al, ch ; popfq ; test edi, esi ; dec dword ptr [rax - 0x77] ; ret
0x00000000004400a7 : add al, ch ; push -0x76b7ffff ; ret
0x00000000004ab700 : add al, ch ; push 0xc ; add al, byte ptr [rax] ; xor eax, eax ; pop rdx ; ret
0x00000000004ce445 : add al, ch ; push rbp ; test edi, eax ; dec dword ptr [rax - 0x77] ; ret
0x00000000004eac07 : add al, ch ; push rbx ; mov bl, -1 ; dec dword ptr [rax - 0x77] ; ret
0x00000000004a7d19 : add al, ch ; push rcx ; add r8b, byte ptr [rax] ; xor eax, eax ; pop rdx ; ret
0x00000000004f4f03 : add al, ch ; push rdi ; adc bh, bh ; dec dword ptr [rax - 0x77] ; ret
0x00000000004ad613 : add al, ch ; push rdi ; in eax, dx ; add dword ptr [rax], eax ; xor eax, eax ; pop rbx ; ret
0x00000000004f8ac3 : add al, ch ; push rdi ; ret
0x00000000004f0118 : add al, ch ; push rdx ; ret 0xfffd
0x0000000000405c04 : add al, ch ; push rsi ; add ecx, dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000567c24 : add al, ch ; push rsi ; std ; dec dword ptr [rax - 0x77] ; ret
0x000000000049cc16 : add al, ch ; push rsp ; test dword ptr [rdx], 0x5ac03100 ; ret
0x00000000004fad99 : add al, ch ; rcl dword ptr [rip - 0x3fce0003] ; pop rbx ; ret
0x000000000042a797 : add al, ch ; rcr dword ptr [rbx], cl ; or al, byte ptr [rax] ; xor eax, eax ; pop rbx ; ret
0x0000000000405d77 : add al, ch ; ret
0x00000000004bb1a8 : add al, ch ; ret 0x111
0x00000000004a6aa8 : add al, ch ; ret 0x258
0x000000000047b5f8 : add al, ch ; ret 0x2e8
0x00000000004944a8 : add al, ch ; ret 0x37e
0x0000000000572a27 : add al, ch ; ret 0x42
0x00000000004f4ab8 : add al, ch ; ret 0x450
0x00000000004866a8 : add al, ch ; ret 0x45c
0x0000000000411178 : add al, ch ; ret 0x7dd
0x000000000043f9a8 : add al, ch ; ret 0x8c9
0x00000000004256a8 : add al, ch ; ret 0xa6c
0x00000000004140a8 : add al, ch ; ret 0xb82
0x000000000055c938 : add al, ch ; ret 0xf32a
0x0000000000552ca8 : add al, ch ; ret 0xf796
0x00000000005461a8 : add al, ch ; ret 0xf861
0x0000000000546798 : add al, ch ; ret 0xf9f7
0x0000000000405c48 : add al, ch ; ret 0xfac
0x00000000004c9878 : add al, ch ; ret 0xfc56
0x00000000004ff2a8 : add al, ch ; ret 0xfcd0
0x000000000041ff68 : add al, ch ; ret 0xfe1d
0x000000000049f278 : add al, ch ; ret 0xfefc
0x0000000000420eb8 : add al, ch ; ret 0xff01
0x00000000005f40f7 : add al, ch ; ret 0xffe6
0x0000000000609ec7 : add al, ch ; ret 0xffee
0x00000000004b9d24 : add al, ch ; ret 2
0x0000000000460998 : add al, ch ; ret 6
0x0000000000463e97 : add al, ch ; rol dword ptr [rsi + rax + 0x5ac03100], cl ; ret
0x00000000004b909a : add al, ch ; sal byte ptr [rdx], 1 ; add dword ptr [rax], eax ; xor eax, eax ; pop rdx ; ret
0x0000000000541097 : add al, ch ; sal dword ptr [rdx - 0x3fce0008], cl ; pop rdx ; ret
0x0000000000567fa4 : add al, ch ; salc ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000497e78 : add al, ch ; sar byte ptr [rdi - 0x76b70004], cl ; ret
0x00000000004ece4f : add al, ch ; sar r8, 1 ; dec dword ptr [rax - 0x77] ; ret
0x00000000004af04e : add al, ch ; sbb al, -0x2d ; add dword ptr [rax], eax ; xor eax, eax ; pop rdx ; ret
0x000000000048784e : add al, ch ; sbb al, 0x4b ; add al, 0 ; xor eax, eax ; pop rbx ; ret
0x00000000004fc082 : add al, ch ; sbb byte ptr [rcx - 0x76b7000b], ch ; ret
0x00000000004569e7 : add al, ch ; sbb dword ptr [rcx + 7], 0 ; xor eax, eax ; pop rbx ; ret
0x000000000048f0bd : add al, ch ; sbb eax, 0x39000aab ; ret
0x00000000005f9187 : add al, ch ; sbb ebp, ecx ; call qword ptr [rdi]
0x000000000048e9ac : add al, ch ; scasb al, byte ptr [rdi] ; jne 0x48e9be ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000616cc7 : add al, ch ; scasd eax, dword ptr [rdi] ; hlt ; jmp rbx
0x000000000048d999 : add al, ch ; shr ecx, 1 ; add eax, dword ptr [rax] ; xor eax, eax ; pop rdx ; ret
0x00000000005fb5a7 : add al, ch ; shr ecx, cl ; call qword ptr [rax]
0x0000000000567e54 : add al, ch ; std ; dec dword ptr [rax - 0x77] ; ret
0x00000000005477b0 : add al, ch ; stosb byte ptr [rdi], al ; out -7, eax ; dec dword ptr [rax - 0x77] ; ret
0x0000000000405eae : add al, ch ; sub al, -0x55 ; str word ptr [rax - 0x77] ; ret
0x00000000004f7b1e : add al, ch ; sub al, 0x27 ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000542432 : add al, ch ; sub byte ptr [rdi - 0x76b7000c], dh ; ret
0x000000000054d970 : add al, ch ; sub dl, byte ptr [rax - 0x76b70010] ; ret
0x00000000004abb41 : add al, ch ; sub dword ptr [rax], ecx ; add al, byte ptr [rax] ; xor eax, eax ; pop rdx ; ret
0x0000000000444c41 : add al, ch ; sub dword ptr [rdi + 8], esi ; add byte ptr [rcx], dh ; fucomi st(3) ; ret 0x2e66
0x00000000004f3941 : add al, ch ; sub dword ptr [rdx - 0x3fce0003], ecx ; pop rbx ; ret
0x0000000000500ddd : add al, ch ; sub eax, 0x89000008 ; ret
0x000000000043062f : add al, ch ; sub ebx, dword ptr [rcx + 0xb] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000054662f : add al, ch ; sub edi, ecx ; stc ; dec dword ptr [rax - 0x77] ; ret
0x00000000004415e6 : add al, ch ; test byte ptr [rbp - 0x3fcefff8], ch ; pop rdx ; ret
0x000000000042a9d5 : add al, ch ; test dword ptr [rbp - 0x76b7fff5], esi ; ret
0x000000000050cfd5 : add al, ch ; test dword ptr [rdi - 0x76b70003], ecx ; ret
0x000000000054e1d3 : add al, ch ; xchg dword ptr [rbp - 7], edi ; dec dword ptr [rax - 0x77] ; ret
0x00000000005486c5 : add al, ch ; xchg eax, ebp ; fdivr st(1) ; dec dword ptr [rax - 0x77] ; ret
0x00000000005100d7 : add al, ch ; xchg eax, ebx ; ret 0xfffb
0x00000000004a7dd8 : add al, ch ; xchg eax, edx ; add r8b, byte ptr [r8] ; xor eax, eax ; pop rbx ; ret
0x00000000004bd6d8 : add al, ch ; xchg eax, edx ; in al, dx ; add byte ptr [rax], al ; xor eax, eax ; pop rdx ; ret
0x00000000004d0048 : add al, ch ; xchg eax, edx ; sti ; dec dword ptr [rax - 0x7d] ; ret
0x000000000047a293 : add al, ch ; xlatb ; and byte ptr [rip + 0x5ac03100], al ; ret
0x000000000043dd2a : add al, ch ; xor byte ptr [rdx - 0x76b7fff6], al ; ret
0x000000000049d438 : add al, ch ; xor ch, bh ; add al, byte ptr [rax] ; xor eax, eax ; pop rbx ; ret
0x0000000000485935 : add al, ch ; xor eax, 0xe900046a ; ret
0x0000000000541837 : add al, ch ; xor ebp, dword ptr [rbx - 0x3fce0008] ; pop rdx ; ret
0x00000000004f3437 : add al, ch ; xor ecx, dword ptr [rdi - 0x3fce0003] ; pop rdx ; ret
0x00000000004880c7 : add al, ch ; xor esi, dword ptr [rbx] ; add bh, bh ; ret
0x00000000004b9037 : add al, ch ; xor esi, dword ptr [rbx] ; add dword ptr [rax], eax ; xor eax, eax ; pop rdx ; ret
0x0000000000615267 : add al, cl ; hlt ; call qword ptr [rdi]
0x00000000006172d7 : add al, cl ; in al, -0xc ; call qword ptr [rsi]
0x00000000006141f7 : add al, cl ; in al, dx ; jmp qword ptr [rsi]
0x00000000005f0737 : add al, cl ; jmp rbx
0x00000000005f67c7 : add al, cl ; jmp rdi
0x0000000000616fd7 : add al, cl ; jrcxz 0x616fd3 ; call qword ptr [rsi]
0x000000000060d347 : add al, cl ; or eax, esi ; jmp qword ptr [rdi]
0x0000000000617857 : add al, cl ; out -0xc, al ; call qword ptr [rax]
0x000000000060cb17 : add al, cl ; shr edi, cl ; jmp rax
0x0000000000600157 : add al, cl ; xchg eax, ebx ; jmp 0x60015f
0x00000000005f257f : add al, dh ; add al, -0x1b ; call qword ptr [rbx]
0x00000000005eadcb : add al, dh ; add bh, dh ; jmp qword ptr [rax]
0x00000000005e179b : add al, dh ; add bl, ah ; jmp qword ptr [rax]
0x00000000005e3ea3 : add al, dh ; add ebp, edx ; jmp qword ptr [rax]
0x00000000006145cf : add al, dh ; add esp, esi ; call rbx
0x00000000005e7583 : add al, dh ; and al, dh ; call qword ptr [rax]
0x00000000005e7683 : add al, dh ; and dh, al ; call qword ptr [rax]
0x00000000005ea243 : add al, dh ; and esi, esi ; call qword ptr [rax]
0x00000000005eba5b : add al, dh ; clc ; call rax
0x00000000005ebacb : add al, dh ; clc ; jmp qword ptr [rax]
0x00000000005ebb0b : add al, dh ; clc ; jmp rax
0x00000000005eba33 : add al, dh ; cmp al, -8 ; jmp qword ptr [rax]
0x00000000005e7733 : add al, dh ; cmp dh, al ; call qword ptr [rax]
0x00000000005eb8bb : add al, dh ; div edi ; jmp rax
0x00000000005e843b : add al, dh ; int1 ; call qword ptr [rax]
0x00000000005e84bb : add al, dh ; int1 ; jmp qword ptr [rax]
0x00000000005e4c63 : add al, dh ; jae 0x5e4c56 ; jmp rax
0x00000000005e9033 : add al, dh ; jmp qword ptr [rax]
0x00000000005e321b : add al, dh ; jmp rdi
0x00000000005ec0c3 : add al, dh ; jo 0x5ec0c3 ; jmp qword ptr [rax]
0x000000000061704f : add al, dh ; jrcxz 0x61704b ; call qword ptr [rsi]
0x00000000005e4733 : add al, dh ; loopne 0x5e4725 ; jmp qword ptr [rax]
0x00000000005e672b : add al, dh ; mov ah, -0x12 ; call qword ptr [rax]
0x00000000005e2ee3 : add al, dh ; mov ah, bh ; jmp qword ptr [rax]
0x00000000005ede7f : add al, dh ; mov bh, -0x1e ; jmp qword ptr [rax]
0x00000000005f3f4f : add al, dh ; mov bl, -0x1a ; jmp qword ptr [rsi]
0x00000000005e3bfb : add al, dh ; mov cl, ch ; call qword ptr [rax]
0x00000000005e1ce3 : add al, dh ; mov esp, fs ; jmp qword ptr [rax]
0x00000000005f009f : add al, dh ; out -0x1d, eax ; call qword ptr [rdi]
0x00000000005e8793 : add al, dh ; pop rax ; int1 ; call qword ptr [rax]
0x00000000005ebec3 : add al, dh ; pop rsp ; clc ; call qword ptr [rax]
0x00000000005e630b : add al, dh ; push rax ; out dx, al ; jmp qword ptr [rax]
0x00000000005ebe73 : add al, dh ; push rdi ; clc ; call rax
0x00000000005e60e3 : add al, dh ; ret
0x000000000058aed7 : add al, dh ; ret 0x58
0x0000000000609edf : add al, dh ; ret 0xffee
0x00000000005eaf43 : add al, dh ; sbb dh, bh ; call rax
0x00000000005e5243 : add al, dh ; sbb esp, ebp ; call qword ptr [rax]
0x00000000005e378b : add al, dh ; shr al, cl ; call qword ptr [rax]
0x00000000005e8473 : add al, dh ; sub cl, dh ; call rax
0x000000000060720f : add al, dh ; sub dh, ch ; jmp rbx
0x000000000060df3f : add al, dh ; wait ; call qword ptr [rcx]
0x00000000005e65c3 : add al, dh ; wait ; out dx, al ; jmp rax
0x00000000005e8af3 : add al, dh ; xchg eax, edi ; int1 ; call qword ptr [rax]
0x00000000005e918b : add al, dh ; xchg eax, esp ; call rax
0x00000000005e5b6b : add al, dh ; xor ch, ch ; call rax
0x00000000005f96bf : add al, dh ; xor cl, ch ; jmp qword ptr [rdx]
0x0000000000606c8f : add al, dl ; adc al, -0x12 ; jmp qword ptr [rdi]
0x000000000060696f : add al, dl ; add al, -0x12 ; jmp qword ptr [rdi]
0x00000000005e9d23 : add al, dl ; add dh, dh ; call qword ptr [rax]
0x00000000005eb95b : add al, dl ; add eax, edi ; jmp qword ptr [rax]
0x00000000005e7573 : add al, dl ; and al, dh ; jmp rax
0x00000000005e7673 : add al, dl ; and dh, al ; jmp rax
0x00000000005ea233 : add al, dl ; and esi, esi ; jmp rax
0x00000000005e9a6b : add al, dl ; cmc ; call qword ptr [rax]
0x00000000005e349b : add al, dl ; cmp al, ch ; call qword ptr [rax]
0x00000000005e7723 : add al, dl ; cmp dh, al ; jmp rax
0x00000000005ece8f : add al, dl ; fsubrp st(1) ; call qword ptr [rcx]
0x000000000061527f : add al, dl ; hlt ; call qword ptr [rdi]
0x00000000005e9b6b : add al, dl ; hlt ; cmc ; call qword ptr [rax]
0x00000000005fe4ff : add al, dl ; in al, -0x16 ; call qword ptr [rdi]
0x00000000005e53bb : add al, dl ; in al, dx ; jmp rax
0x000000000061756f : add al, dl ; in eax, -0xc ; call qword ptr [rsi]
0x00000000005e34eb : add al, dl ; jae 0x5e34db ; call qword ptr [rax]
0x00000000005ea63b : add al, dl ; je 0x5ea639 ; call rax
0x0000000000610d7f : add al, dl ; jmp qword ptr es:[rcx]
0x00000000005f074f : add al, dl ; jmp rbx
0x00000000005f67af : add al, dl ; jmp rdi
0x00000000005ea5b3 : add al, dl ; jo 0x5ea5b1 ; jmp qword ptr [rax]
0x0000000000616fef : add al, dl ; jrcxz 0x616feb ; call qword ptr [rsi]
0x00000000005e6f43 : add al, dl ; lodsb al, byte ptr [rsi] ; out dx, eax ; call rax
0x0000000000616dbf : add al, dl ; loope 0x616dbb ; call qword ptr [rax]
0x00000000005e277b : add al, dl ; mov dl, -0x1b ; jmp qword ptr [rax]
0x00000000005ebf93 : add al, dl ; push -8 ; call qword ptr [rax]
0x00000000005e4adb : add al, dl ; push rbx ; jmp 0x5e4ae3
0x00000000005e286b : add al, dl ; ret
0x000000000056e567 : add al, dl ; ret 0x5c
0x000000000061076f : add al, dl ; sbb bl, dh ; call qword ptr [rax]
0x00000000005e377b : add al, dl ; shr al, cl ; jmp rax
0x000000000061322f : add al, dl ; stosd dword ptr [rdi], eax ; call qword ptr [rax]
0x00000000005e8483 : add al, dl ; sub ecx, esi ; call qword ptr [rax]
0x0000000000610f0f : add al, dl ; sub esi, ebx ; call rdi
0x00000000005eb203 : add al, dl ; test esi, edi ; call rax
0x00000000005eb273 : add al, dl ; xchg bh, dh ; jmp qword ptr [rax]
0x00000000004e6741 : add al, r13b ; clc ; ret 0xffff
0x0000000000448637 : add al, r13b ; mov dl, 0x5e ; or al, byte ptr [rax] ; pop rax ; ret
0x00000000004f4ab7 : add al, r13b ; ret 0x450
0x000000000048c57c : add ax, 0x5b00 ; ret
0x00000000005ebdb1 : add ax, word ptr [rax] ; push rax ; clc ; jmp qword ptr [rax]
0x00000000004a241c : add bh, al ; add byte ptr [rax - 0x1000000], al ; ret 0x8348
0x00000000005408a8 : add bh, al ; or byte ptr [rax], r10b ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000512797 : add bh, bh ; enter -0x1b8b, -0x3b ; clc ; ja 0x51279c ; ret
0x000000000042c1dc : add bh, bh ; loopne 0x42c178 ; mov rax, qword ptr [rdi + 0x20] ; ret
0x00000000004cdf5a : add bh, bh ; push rax ; sub byte ptr [rax - 0x77], cl ; ret
0x000000000041afbf : add bh, bh ; ret
0x00000000004a2422 : add bh, bh ; ret 0x8348
0x00000000004ca2d8 : add bh, bh ; ret 0x9389
0x0000000000572a1f : add bh, bl ; ret 0x42
0x00000000004279c6 : add bh, byte ptr [rax + 1] ; ret
0x000000000040dc86 : add bh, byte ptr [rax + 3] ; ret
0x000000000046dc9f : add bh, byte ptr [rax + rdi*2 - 0x7d] ; ret
0x000000000055d6db : add bh, byte ptr [rcx] ; ret
0x00000000005eadcd : add bh, dh ; jmp qword ptr [rax]
0x00000000004b7b4f : add bh, dh ; salc ; and dword ptr [rdi + 0x2c], esi ; ret
0x0000000000429f8f : add bh, dh ; salc ; and esi, dword ptr [rdi] ; mov dword ptr [rdi], esi ; mov eax, esi ; ret
0x0000000000452519 : add bh, dh ; sub r10, rax ; jmp 0x452524
0x0000000000599898 : add bh, dl ; mov bl, -0x20 ; test dword ptr [rax], ecx ; ret
0x000000000057dc4e : add bh, dl ; ret
0x00000000005e703c : add bl, -0x11 ; ljmp ptr [rax - 0x2ffffdca] ; ret
0x00000000005e67dc : add bl, -0x12 ; call rax
0x00000000005eaa84 : add bl, -0xa ; call qword ptr [rax]
0x00000000005e92d4 : add bl, -0xe ; jmp qword ptr [rax]
0x00000000005e179d : add bl, ah ; jmp qword ptr [rax]
0x000000000057dc91 : add bl, ah ; ret
0x00000000005ac58c : add bl, ah ; ret 0xcd52
0x0000000000572a68 : add bl, al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], cl ; ret
0x000000000046b630 : add bl, al ; mov dword ptr [rdi + 0x10], 0 ; ret
0x000000000043615a : add bl, al ; mov eax, 0x11 ; ret
0x0000000000436160 : add bl, al ; mov eax, 0x12 ; ret
0x0000000000436166 : add bl, al ; mov eax, 0x14 ; ret
0x000000000043616c : add bl, al ; mov eax, 0x15 ; ret
0x0000000000436172 : add bl, al ; mov eax, 0x16 ; ret
0x0000000000436178 : add bl, al ; mov eax, 0x18 ; ret
0x000000000043617e : add bl, al ; mov eax, 0x19 ; ret
0x000000000043612f : add bl, al ; mov eax, 0x1a ; ret
0x0000000000411090 : add bl, al ; mov eax, 0x2e ; ret
0x0000000000510d28 : add bl, al ; mov eax, 0x35 ; ret
0x0000000000433016 : add bl, al ; mov eax, 0x56f078 ; ret
0x000000000042dfdc : add bl, al ; mov eax, 0x56f46e ; ret
0x00000000004330bb : add bl, al ; mov eax, 0x56fe33 ; ret
0x0000000000433126 : add bl, al ; mov eax, 0x570854 ; ret
0x000000000043312c : add bl, al ; mov eax, 0x570cd7 ; ret
0x000000000043313e : add bl, al ; mov eax, 0x570d0e ; ret
0x0000000000433138 : add bl, al ; mov eax, 0x570d2e ; ret
0x0000000000433144 : add bl, al ; mov eax, 0x570d4e ; ret
0x0000000000429835 : add bl, al ; mov eax, 0x570d5a ; ret
0x000000000043314a : add bl, al ; mov eax, 0x570dae ; ret
0x0000000000433132 : add bl, al ; mov eax, 0x570e06 ; ret
0x0000000000433156 : add bl, al ; mov eax, 0x570f0f ; ret
0x0000000000433162 : add bl, al ; mov eax, 0x570f60 ; ret
0x0000000000433168 : add bl, al ; mov eax, 0x570f7a ; ret
0x0000000000433174 : add bl, al ; mov eax, 0x570fbc ; ret
0x000000000043316e : add bl, al ; mov eax, 0x571016 ; ret
0x000000000043311a : add bl, al ; mov eax, 0x57107b ; ret
0x0000000000433114 : add bl, al ; mov eax, 0x57109c ; ret
0x0000000000433108 : add bl, al ; mov eax, 0x5710c2 ; ret
0x000000000043310e : add bl, al ; mov eax, 0x5710e1 ; ret
0x0000000000432529 : add bl, al ; mov eax, 0x57144e ; ret
0x00000000004324bd : add bl, al ; mov eax, 0x5732e4 ; ret
0x00000000004324c3 : add bl, al ; mov eax, 0x573305 ; ret
0x00000000004324c9 : add bl, al ; mov eax, 0x573326 ; ret
0x0000000000432515 : add bl, al ; mov eax, 0x5733b7 ; ret
0x0000000000432311 : add bl, al ; mov eax, 0x573479 ; ret
0x00000000004322db : add bl, al ; mov eax, 0x573565 ; ret
0x00000000004322e1 : add bl, al ; mov eax, 0x573587 ; ret
0x00000000004322e7 : add bl, al ; mov eax, 0x5735a9 ; ret
0x0000000000432479 : add bl, al ; mov eax, 0x573661 ; ret
0x000000000043241f : add bl, al ; mov eax, 0x5737e6 ; ret
0x0000000000432425 : add bl, al ; mov eax, 0x573807 ; ret
0x000000000043242b : add bl, al ; mov eax, 0x573828 ; ret
0x00000000004322c3 : add bl, al ; mov eax, 0x5739d6 ; ret
0x00000000004322c9 : add bl, al ; mov eax, 0x5739f0 ; ret
0x00000000004322ab : add bl, al ; mov eax, 0x573a0a ; ret
0x000000000043247f : add bl, al ; mov eax, 0x573d22 ; ret
0x0000000000432485 : add bl, al ; mov eax, 0x573d44 ; ret
0x00000000004322cf : add bl, al ; mov eax, 0x573d66 ; ret
0x00000000004322d5 : add bl, al ; mov eax, 0x573d89 ; ret
0x0000000000432fe6 : add bl, al ; mov eax, 0x573dec ; ret
0x0000000000432be1 : add bl, al ; mov eax, 0x573e35 ; ret
0x0000000000432be7 : add bl, al ; mov eax, 0x573e3c ; ret
0x0000000000432bed : add bl, al ; mov eax, 0x573e43 ; ret
0x0000000000432d01 : add bl, al ; mov eax, 0x573e66 ; ret
0x0000000000432cd7 : add bl, al ; mov eax, 0x573e90 ; ret
0x0000000000432ca1 : add bl, al ; mov eax, 0x573ec8 ; ret
0x0000000000432ca7 : add bl, al ; mov eax, 0x573ecf ; ret
0x0000000000432cad : add bl, al ; mov eax, 0x573ed6 ; ret
0x0000000000432eab : add bl, al ; mov eax, 0x573f07 ; ret
0x0000000000432d97 : add bl, al ; mov eax, 0x573f4d ; ret
0x0000000000432d9d : add bl, al ; mov eax, 0x573f54 ; ret
0x0000000000432da3 : add bl, al ; mov eax, 0x573f5b ; ret
0x0000000000432c71 : add bl, al ; mov eax, 0x573fb6 ; ret
0x0000000000432c89 : add bl, al ; mov eax, 0x573fd2 ; ret
0x0000000000432c8f : add bl, al ; mov eax, 0x573fd9 ; ret
0x0000000000432eb1 : add bl, al ; mov eax, 0x574073 ; ret
0x0000000000432eb7 : add bl, al ; mov eax, 0x57407a ; ret
0x0000000000432c95 : add bl, al ; mov eax, 0x574081 ; ret
0x0000000000432c9b : add bl, al ; mov eax, 0x574088 ; ret
0x0000000000432ea5 : add bl, al ; mov eax, 0x57408f ; ret
0x0000000000432f7b : add bl, al ; mov eax, 0x5740a7 ; ret
0x0000000000432ff2 : add bl, al ; mov eax, 0x5740b0 ; ret
0x0000000000432ff8 : add bl, al ; mov eax, 0x5740b3 ; ret
0x0000000000433004 : add bl, al ; mov eax, 0x5740b6 ; ret
0x0000000000432ef6 : add bl, al ; mov eax, 0x5740b7 ; ret
0x000000000043300a : add bl, al ; mov eax, 0x5740b9 ; ret
0x000000000043302e : add bl, al ; mov eax, 0x5740c2 ; ret
0x0000000000433034 : add bl, al ; mov eax, 0x5740c5 ; ret
0x0000000000432fc8 : add bl, al ; mov eax, 0x5740ce ; ret
0x0000000000432fd4 : add bl, al ; mov eax, 0x5740d1 ; ret
0x0000000000432fda : add bl, al ; mov eax, 0x5740d4 ; ret
0x0000000000432fc2 : add bl, al ; mov eax, 0x5740d7 ; ret
0x0000000000433150 : add bl, al ; mov eax, 0x5740fa ; ret
0x0000000000433120 : add bl, al ; mov eax, 0x574113 ; ret
0x000000000042dfd6 : add bl, al ; mov eax, 0x574169 ; ret
0x0000000000433028 : add bl, al ; mov eax, 0x5769c9 ; ret
0x0000000000432fce : add bl, al ; mov eax, 0x5824c3 ; ret
0x0000000000432ffe : add bl, al ; mov eax, 0x587ffa ; ret
0x0000000000432fe0 : add bl, al ; mov eax, 0x5909e4 ; ret
0x000000000043301c : add bl, al ; mov eax, 0x5cbbe5 ; ret
0x0000000000432fec : add bl, al ; mov eax, 0x5cc1db ; ret
0x0000000000433022 : add bl, al ; mov eax, 0x5d9b7f ; ret
0x00000000004904cf : add bl, al ; mov eax, 0x5da58c ; ret
0x0000000000433010 : add bl, al ; mov eax, 0x5db541 ; ret
0x000000000043315c : add bl, al ; mov eax, 0x5deb33 ; ret
0x00000000004361b4 : add bl, al ; mov eax, 0xa ; ret
0x00000000004361ba : add bl, al ; mov eax, 0xb ; ret
0x00000000004361c0 : add bl, al ; mov eax, 0xc ; ret
0x00000000004361c6 : add bl, al ; mov eax, 0xd ; ret
0x00000000004361cc : add bl, al ; mov eax, 0xe ; ret
0x0000000000510d3c : add bl, al ; mov eax, 0xffffffff ; ret
0x0000000000436184 : add bl, al ; mov eax, 2 ; ret
0x000000000043618a : add bl, al ; mov eax, 3 ; ret
0x0000000000436190 : add bl, al ; mov eax, 4 ; ret
0x0000000000436196 : add bl, al ; mov eax, 5 ; ret
0x000000000043619c : add bl, al ; mov eax, 6 ; ret
0x00000000004361a2 : add bl, al ; mov eax, 7 ; ret
0x00000000004361a8 : add bl, al ; mov eax, 8 ; ret
0x00000000004361ae : add bl, al ; mov eax, 9 ; ret
0x000000000046a9a3 : add bl, al ; mov eax, dword ptr [rip + 0x3c0e71] ; ret
0x000000000046a99c : add bl, al ; mov eax, dword ptr [rip + 0x3c0e74] ; ret
0x000000000046a995 : add bl, al ; mov eax, dword ptr [rip + 0x3c0e77] ; ret
0x0000000000408814 : add bl, al ; movzx ecx, r8b ; or eax, ecx ; ret
0x000000000040dbcc : add bl, al ; nop ; xor eax, eax ; ret
0x000000000056059b : add bl, al ; nop dword ptr [rax] ; mov rax, qword ptr [rdi + 0x18] ; ret
0x00000000004ca93b : add bl, al ; nop dword ptr [rax] ; mov rax, qword ptr [rdi] ; ret
0x0000000000405b45 : add bl, al ; ret
0x0000000000436151 : add bl, al ; xor eax, eax ; ret
0x000000000060ad20 : add bl, bh ; out dx, al ; call qword ptr [rax]
0x00000000004e3cf9 : add bl, byte ptr [rcx - 0x3ea57d87] ; ret 0x4105
0x00000000004b7b1a : add bl, byte ptr [rdx] ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000053f641 : add bl, ch ; adc dh, dh ; ret 0x7406
0x00000000004dd13b : add bl, ch ; mov ch, 0x5a ; ret
0x000000000054aaff : add bl, ch ; or cl, byte ptr [rax - 0x7d] ; ret
0x00000000004363f0 : add bl, ch ; outsd dx, dword ptr [rsi] ; xor eax, eax ; pop rbx ; ret
0x00000000004ca290 : add bl, ch ; popfq ; mov eax, 1 ; pop rbx ; ret
0x0000000000460326 : add bl, ch ; ret
0x0000000000554a8a : add bl, ch ; ret 0x1f0f
0x0000000000471683 : add bl, ch ; ret 0x3bf
0x000000000054e09c : add bl, ch ; ret 0x5590
0x000000000041ad5e : add bl, ch ; ret 0x8f80
0x0000000000404662 : add bl, ch ; wait ; pop rbx ; pop r14 ; pop r15 ; ret
0x000000000060ecb9 : add bl, dh ; call qword ptr [rdx]
0x0000000000512749 : add bl, dh ; ret
0x00000000005a3ee3 : add bl, dh ; ret 0xeccc
0x0000000000485dc2 : add byte ptr [r10], r8b ; add byte ptr [rax], al ; add bh, bh ; ret
0x0000000000483202 : add byte ptr [r11 + 0x53], r10b ; add byte ptr [rbx - 0x3d], dl ; ret
0x0000000000485cdb : add byte ptr [r11], r8b ; add byte ptr [rax], al ; add bh, bh ; ret
0x000000000058e14d : add byte ptr [r13 + 0x45e1daf2], r8b ; ret 0x5325
0x00000000004e2e23 : add byte ptr [r8 + 0x39], r9b ; ret 0xc73
0x000000000049e693 : add byte ptr [r8 - 0x77], cl ; fucompi st(0) ; ret 2
0x00000000004dd444 : add byte ptr [r8 - 0x77], r9b ; fucompi st(0) ; ret 0xfed4
0x0000000000471992 : add byte ptr [r8 - 0x77], r9b ; ret 0x8844
0x0000000000539580 : add byte ptr [r8 - 1], r9b ; ret
0x0000000000546795 : add byte ptr [r8], al ; add al, ch ; ret 0xf9f7
0x000000000043d654 : add byte ptr [r8], al ; add byte ptr [rax - 0x77], cl ; ret 0x70e9
0x000000000043d664 : add byte ptr [r8], r8b ; add byte ptr [rax - 0x77], cl ; ret 0x60e9
0x0000000000542360 : add byte ptr [r8], r8b ; add byte ptr [rax], al ; add bh, bh ; ret
0x00000000005f1185 : add byte ptr [r8], r8b ; pop rcx ; in al, -1 ; ret
0x00000000004bc1da : add byte ptr [r9 - 0x48], al ; push rax ; ret 0x4b
0x00000000004823f6 : add byte ptr [r9 - 0x77], r9b ; pop rbp ; or byte ptr [rcx - 0x77], cl ; ret
0x000000000046973f : add byte ptr [r9 - 0x77], r9b ; ret
0x0000000000457412 : add byte ptr [r9], r15b ; ret
0x00000000004904df : add byte ptr [rax + 0x1000201f], bh ; ret
0x00000000004046cf : add byte ptr [rax + 0x100], bh ; ret
0x000000000060f897 : add byte ptr [rax + 0x12], ch ; call qword ptr [rax]
0x000000000040ad4f : add byte ptr [rax + 0x12c], bh ; ret
0x00000000005d74e9 : add byte ptr [rax + 0x131c1f80], 0xf ; or cl, al ; ret 0x2cca
0x0000000000606d07 : add byte ptr [rax + 0x15], cl ; out dx, al ; jmp qword ptr [rdi]
0x0000000000606e0f : add byte ptr [rax + 0x16], dl ; out dx, al ; call qword ptr [rdx]
0x000000000060fe5f : add byte ptr [rax + 0x17], dl ; call qword ptr [rax]
0x000000000061037f : add byte ptr [rax + 0x19], ah ; call qword ptr [rax]
0x00000000006103af : add byte ptr [rax + 0x19], ah ; call qword ptr [rsi]
0x000000000061052f : add byte ptr [rax + 0x19], al ; call qword ptr [rsi]
0x00000000005e523b : add byte ptr [rax + 0x19], al ; in al, dx ; jmp rax
0x0000000000610307 : add byte ptr [rax + 0x19], bh ; call qword ptr [rsi]
0x00000000006101b7 : add byte ptr [rax + 0x19], bl ; call qword ptr [rax]
0x00000000006102a7 : add byte ptr [rax + 0x19], ch ; call qword ptr [rax]
0x00000000006102d7 : add byte ptr [rax + 0x19], ch ; call qword ptr [rsi]
0x00000000006103df : add byte ptr [rax + 0x19], dh ; call qword ptr [rsi]
0x0000000000606f37 : add byte ptr [rax + 0x1a], cl ; out dx, al ; call qword ptr [rcx]
0x000000000060b4c7 : add byte ptr [rax + 0x1b], bh ; out dx, eax ; call qword ptr [rax]
0x00000000005d6cea : add byte ptr [rax + 0x1c1f0f13], al ; ret 0xaca
0x0000000000405bcf : add byte ptr [rax + 0x1c20], bh ; ret
0x00000000005e5af3 : add byte ptr [rax + 0x1e], ah ; in eax, dx ; jmp rax
0x00000000004371f6 : add byte ptr [rax + 0x1e], bh ; ret
0x00000000005e835b : add byte ptr [rax + 0x1f], ah ; int1 ; call qword ptr [rax]
0x0000000000600b8f : add byte ptr [rax + 0x20], al ; in al, dx ; jmp qword ptr [rax]
0x00000000005e4833 : add byte ptr [rax + 0x21], ah ; jmp 0x5e483b
0x0000000000600ba7 : add byte ptr [rax + 0x21], cl ; in al, dx ; jmp qword ptr [rdi]
0x00000000005e4913 : add byte ptr [rax + 0x28], al ; jmp 0x5e491b
0x00000000005e1763 : add byte ptr [rax + 0x28ffe2f8], dh ; ret
0x000000000048ed1f : add byte ptr [rax + 0x29], bh ; ret
0x0000000000465f8d : add byte ptr [rax + 0x29], cl ; ret
0x000000000047c0c3 : add byte ptr [rax + 0x29], cl ; ret 0x314c
0x0000000000423c9b : add byte ptr [rax + 0x29], cl ; ret 0x348
0x000000000047c03c : add byte ptr [rax + 0x29], cl ; ret 0x48b
0x00000000004e7514 : add byte ptr [rax + 0x29], cl ; ret 0x894c
0x00000000004e4098 : add byte ptr [rax + 0x29], cl ; ret 0xf631
0x00000000005556b0 : add byte ptr [rax + 0x2a], dh ; pop rdx ; cwde ; call 0x785e1973
0x00000000005e61db : add byte ptr [rax + 0x2c], dl ; out dx, al ; jmp qword ptr [rax]
0x0000000000436364 : add byte ptr [rax + 0x2cb], bh ; pop rbx ; ret
0x00000000005e8f8b : add byte ptr [rax + 0x2d], dl ; jmp qword ptr [rax]
0x00000000005fee07 : add byte ptr [rax + 0x30], cl ; jmp 0x5fee0f
0x00000000005e93ab : add byte ptr [rax + 0x30fff2dc], dh ; ret
0x0000000000600def : add byte ptr [rax + 0x31], al ; in al, dx ; jmp qword ptr [rbx]
0x00000000005fee97 : add byte ptr [rax + 0x31], bl ; jmp 0x5fee9f
0x0000000000506cb9 : add byte ptr [rax + 0x31], cl ; fild dword ptr [rcx - 2] ; ret 0x294c
0x000000000047c39e : add byte ptr [rax + 0x31], cl ; ret
0x00000000005e6c8b : add byte ptr [rax + 0x31], dh ; out dx, eax ; jmp rax
0x00000000005e5bd3 : add byte ptr [rax + 0x32], dh ; in eax, dx ; jmp qword ptr [rax]
0x0000000000607bc7 : add byte ptr [rax + 0x39], ch ; out dx, al ; call qword ptr [rdi]
0x00000000004b84f5 : add byte ptr [rax + 0x39], cl ; div dword ptr [rbx + rax + 0x58] ; jmp rcx
0x0000000000430ff2 : add byte ptr [rax + 0x39], cl ; ret
0x00000000004e2e24 : add byte ptr [rax + 0x39], cl ; ret 0xc73
0x0000000000607bdf : add byte ptr [rax + 0x39], dh ; out dx, al ; call qword ptr [rsi]
0x00000000006149f7 : add byte ptr [rax + 0x3a], ch ; hlt ; jmp rdi
0x00000000005f5127 : add byte ptr [rax + 0x3b], bh ; out -1, eax ; ret
0x00000000004dac7f : add byte ptr [rax + 0x40], bh ; ret
0x000000000042c182 : add byte ptr [rax + 0x41000000], 0x58 ; jmp rax
0x000000000061141f : add byte ptr [rax + 0x42], dh ; call qword ptr [rbx]
0x00000000005e53cb : add byte ptr [rax + 0x46], al ; in al, dx ; call qword ptr [rax]
0x00000000006116af : add byte ptr [rax + 0x4d], dh ; jmp rdx
0x00000000005ebdb3 : add byte ptr [rax + 0x4d], dl ; clc ; jmp qword ptr [rax]
0x0000000000601277 : add byte ptr [rax + 0x50], ch ; in al, dx ; jmp qword ptr [rax]
0x00000000005e547b : add byte ptr [rax + 0x50ffec5d], ah ; ret 1
0x00000000005e86e3 : add byte ptr [rax + 0x53], dl ; int1 ; jmp rax
0x00000000005e5c3b : add byte ptr [rax + 0x54], dl ; in eax, dx ; jmp qword ptr [rax]
0x00000000005e8743 : add byte ptr [rax + 0x56], al ; int1 ; call qword ptr [rax]
0x0000000000404f7f : add byte ptr [rax + 0x56a3a0], bh ; ret
0x0000000000405b4f : add byte ptr [rax + 0x56a488], bh ; ret
0x0000000000405b5f : add byte ptr [rax + 0x56a570], bh ; ret
0x00000000004068cf : add byte ptr [rax + 0x56a6c8], bh ; ret
0x00000000004068ce : add byte ptr [rax + 0x56a6c8], dil ; ret
0x000000000040690f : add byte ptr [rax + 0x56a898], bh ; ret
0x0000000000408eff : add byte ptr [rax + 0x56aad0], bh ; ret
0x0000000000409e2f : add byte ptr [rax + 0x56aca0], bh ; ret
0x0000000000409e3f : add byte ptr [rax + 0x56add8], bh ; ret
0x000000000040bc1f : add byte ptr [rax + 0x56b158], bh ; ret
0x000000000040dfbf : add byte ptr [rax + 0x56b638], bh ; ret
0x000000000040ebbf : add byte ptr [rax + 0x56b768], bh ; ret
0x00000000004125df : add byte ptr [rax + 0x56ba10], bh ; ret
0x000000000041b64f : add byte ptr [rax + 0x56cc38], bh ; ret
0x000000000042dfd1 : add byte ptr [rax + 0x56f0ae], bh ; ret
0x0000000000432f28 : add byte ptr [rax + 0x56f1f7], bh ; ret
0x00000000004330b6 : add byte ptr [rax + 0x570e45], bh ; ret
0x00000000004330dc : add byte ptr [rax + 0x5710f9], bh ; ret
0x0000000000432036 : add byte ptr [rax + 0x5730b2], bh ; ret
0x0000000000431daa : add byte ptr [rax + 0x5730cf], bh ; ret
0x0000000000431af8 : add byte ptr [rax + 0x5730ed], bh ; ret
0x0000000000431dcd : add byte ptr [rax + 0x573113], bh ; ret
0x0000000000431b1c : add byte ptr [rax + 0x57312b], bh ; ret
0x000000000043223a : add byte ptr [rax + 0x573149], bh ; ret
0x0000000000431b0a : add byte ptr [rax + 0x573167], bh ; ret
0x0000000000432378 : add byte ptr [rax + 0x573184], bh ; ret
0x00000000004321a0 : add byte ptr [rax + 0x5731a1], bh ; ret
0x0000000000431f9c : add byte ptr [rax + 0x5731bf], bh ; ret
0x0000000000432228 : add byte ptr [rax + 0x5731dd], bh ; ret
0x0000000000432216 : add byte ptr [rax + 0x573213], bh ; ret
0x0000000000432204 : add byte ptr [rax + 0x573247], bh ; ret
0x00000000004321f2 : add byte ptr [rax + 0x573287], bh ; ret
0x00000000004321e0 : add byte ptr [rax + 0x5732c3], bh ; ret
0x00000000004321c4 : add byte ptr [rax + 0x573347], bh ; ret
0x00000000004321b2 : add byte ptr [rax + 0x57337d], bh ; ret
0x00000000004324aa : add byte ptr [rax + 0x57339a], bh ; ret
0x0000000000432366 : add byte ptr [rax + 0x5733d1], bh ; ret
0x0000000000432348 : add byte ptr [rax + 0x573405], bh ; ret
0x000000000043200c : add byte ptr [rax + 0x57343b], bh ; ret
0x0000000000432336 : add byte ptr [rax + 0x57345a], bh ; ret
0x0000000000431ffa : add byte ptr [rax + 0x573495], bh ; ret
0x0000000000432324 : add byte ptr [rax + 0x5734b1], bh ; ret
0x0000000000431fdc : add byte ptr [rax + 0x5734cd], bh ; ret
0x000000000043230c : add byte ptr [rax + 0x5734ea], bh ; ret
0x0000000000431fca : add byte ptr [rax + 0x573507], bh ; ret
0x00000000004322fa : add byte ptr [rax + 0x573525], bh ; ret
0x0000000000431fb8 : add byte ptr [rax + 0x573543], bh ; ret
0x0000000000431f8a : add byte ptr [rax + 0x5735cb], bh ; ret
0x000000000043218e : add byte ptr [rax + 0x5735ee], bh ; ret
0x000000000043216a : add byte ptr [rax + 0x573611], bh ; ret
0x0000000000432498 : add byte ptr [rax + 0x57362c], bh ; ret
0x0000000000432158 : add byte ptr [rax + 0x573647], bh ; ret
0x000000000043213c : add byte ptr [rax + 0x57367b], bh ; ret
0x0000000000432474 : add byte ptr [rax + 0x57369b], bh ; ret
0x000000000043212a : add byte ptr [rax + 0x5736bb], bh ; ret
0x0000000000432462 : add byte ptr [rax + 0x5736dc], bh ; ret
0x0000000000432118 : add byte ptr [rax + 0x5736fd], bh ; ret
0x0000000000432450 : add byte ptr [rax + 0x573725], bh ; ret
0x000000000043206c : add byte ptr [rax + 0x57374d], bh ; ret
0x00000000004323ae : add byte ptr [rax + 0x573770], bh ; ret
0x0000000000432106 : add byte ptr [rax + 0x573793], bh ; ret
0x000000000043243e : add byte ptr [rax + 0x5737ac], bh ; ret
0x00000000004320f4 : add byte ptr [rax + 0x5737c5], bh ; ret
0x00000000004320d8 : add byte ptr [rax + 0x573849], bh ; ret
0x000000000043241a : add byte ptr [rax + 0x57386b], bh ; ret
0x00000000004320c6 : add byte ptr [rax + 0x57388d], bh ; ret
0x0000000000432408 : add byte ptr [rax + 0x5738ae], bh ; ret
0x00000000004320b4 : add byte ptr [rax + 0x5738cf], bh ; ret
0x00000000004323f6 : add byte ptr [rax + 0x5738f0], bh ; ret
0x00000000004320a2 : add byte ptr [rax + 0x573911], bh ; ret
0x00000000004323e4 : add byte ptr [rax + 0x573928], bh ; ret
0x0000000000432090 : add byte ptr [rax + 0x57393f], bh ; ret
0x00000000004323d2 : add byte ptr [rax + 0x57395f], bh ; ret
0x000000000043207e : add byte ptr [rax + 0x57397f], bh ; ret
0x00000000004323c0 : add byte ptr [rax + 0x573995], bh ; ret
0x000000000043217c : add byte ptr [rax + 0x5739ab], bh ; ret
0x0000000000431f67 : add byte ptr [rax + 0x5739bc], bh ; ret
0x0000000000431f4b : add byte ptr [rax + 0x573a26], bh ; ret
0x00000000004322be : add byte ptr [rax + 0x573a42], bh ; ret
0x0000000000431f2d : add byte ptr [rax + 0x573a5e], bh ; ret
0x00000000004322a6 : add byte ptr [rax + 0x573a79], bh ; ret
0x0000000000431f1b : add byte ptr [rax + 0x573a94], bh ; ret
0x0000000000432294 : add byte ptr [rax + 0x573aae], bh ; ret
0x0000000000431f09 : add byte ptr [rax + 0x573ac8], bh ; ret
0x0000000000432282 : add byte ptr [rax + 0x573ae3], bh ; ret
0x0000000000431ef7 : add byte ptr [rax + 0x573afe], bh ; ret
0x0000000000432270 : add byte ptr [rax + 0x573b20], bh ; ret
0x0000000000431e2a : add byte ptr [rax + 0x573b5f], bh ; ret
0x0000000000431ee5 : add byte ptr [rax + 0x573b7c], bh ; ret
0x000000000043225e : add byte ptr [rax + 0x573b96], bh ; ret
0x0000000000431ec1 : add byte ptr [rax + 0x573bb0], bh ; ret
0x000000000043224c : add byte ptr [rax + 0x573bd0], bh ; ret
0x0000000000431ed3 : add byte ptr [rax + 0x573c11], bh ; ret
0x0000000000431eaf : add byte ptr [rax + 0x573c52], bh ; ret
0x000000000043205a : add byte ptr [rax + 0x573c72], bh ; ret
0x000000000043239c : add byte ptr [rax + 0x573c90], bh ; ret
0x0000000000432048 : add byte ptr [rax + 0x573cae], bh ; ret
0x000000000043238a : add byte ptr [rax + 0x573ccb], bh ; ret
0x0000000000431dfb : add byte ptr [rax + 0x573d05], bh ; ret
0x0000000000432ac2 : add byte ptr [rax + 0x573dd3], bh ; ret
0x00000000004325d3 : add byte ptr [rax + 0x573dda], bh ; ret
0x00000000004325a0 : add byte ptr [rax + 0x573de1], bh ; ret
0x0000000000432a08 : add byte ptr [rax + 0x573def], bh ; ret
0x0000000000432631 : add byte ptr [rax + 0x573dfd], bh ; ret
0x0000000000432659 : add byte ptr [rax + 0x573e0b], bh ; ret
0x0000000000432685 : add byte ptr [rax + 0x573e19], bh ; ret
0x0000000000432673 : add byte ptr [rax + 0x573e20], bh ; ret
0x0000000000432887 : add byte ptr [rax + 0x573e27], bh ; ret
0x0000000000432875 : add byte ptr [rax + 0x573e2e], bh ; ret
0x0000000000432bdc : add byte ptr [rax + 0x573e4a], bh ; ret
0x0000000000432e14 : add byte ptr [rax + 0x573e51], bh ; ret
0x0000000000432ab0 : add byte ptr [rax + 0x573e6d], bh ; ret
0x0000000000432d14 : add byte ptr [rax + 0x573e74], bh ; ret
0x0000000000432a92 : add byte ptr [rax + 0x573e7b], bh ; ret
0x0000000000432cfc : add byte ptr [rax + 0x573e82], bh ; ret
0x0000000000432a80 : add byte ptr [rax + 0x573e89], bh ; ret
0x0000000000432a66 : add byte ptr [rax + 0x573e97], bh ; ret
0x0000000000432cea : add byte ptr [rax + 0x573e9e], bh ; ret
0x0000000000432a48 : add byte ptr [rax + 0x573ea5], bh ; ret
0x0000000000432cd2 : add byte ptr [rax + 0x573eac], bh ; ret
0x0000000000432a36 : add byte ptr [rax + 0x573eb3], bh ; ret
0x0000000000432cc0 : add byte ptr [rax + 0x573eba], bh ; ret
0x0000000000432a24 : add byte ptr [rax + 0x573ec1], bh ; ret
0x00000000004329f6 : add byte ptr [rax + 0x573edd], bh ; ret
0x0000000000432e92 : add byte ptr [rax + 0x573f00], bh ; ret
0x0000000000432bbe : add byte ptr [rax + 0x573f0e], bh ; ret
0x0000000000432dec : add byte ptr [rax + 0x573f15], bh ; ret
0x0000000000432bac : add byte ptr [rax + 0x573f1c], bh ; ret
0x0000000000432dda : add byte ptr [rax + 0x573f23], bh ; ret
0x0000000000432b9a : add byte ptr [rax + 0x573f2a], bh ; ret
0x0000000000432dc8 : add byte ptr [rax + 0x573f31], bh ; ret
0x0000000000432b88 : add byte ptr [rax + 0x573f38], bh ; ret
0x0000000000432db6 : add byte ptr [rax + 0x573f3f], bh ; ret
0x0000000000432b76 : add byte ptr [rax + 0x573f46], bh ; ret
0x0000000000432b5a : add byte ptr [rax + 0x573f62], bh ; ret
0x0000000000432d92 : add byte ptr [rax + 0x573f69], bh ; ret
0x0000000000432b48 : add byte ptr [rax + 0x573f70], bh ; ret
0x0000000000432d80 : add byte ptr [rax + 0x573f77], bh ; ret
0x0000000000432b36 : add byte ptr [rax + 0x573f7e], bh ; ret
0x0000000000432d6e : add byte ptr [rax + 0x573f85], bh ; ret
0x0000000000432b24 : add byte ptr [rax + 0x573f8c], bh ; ret
0x0000000000432d5c : add byte ptr [rax + 0x573f93], bh ; ret
0x0000000000432b12 : add byte ptr [rax + 0x573f9a], bh ; ret
0x0000000000432d4a : add byte ptr [rax + 0x573fa1], bh ; ret
0x0000000000432b00 : add byte ptr [rax + 0x573fa8], bh ; ret
0x0000000000432d38 : add byte ptr [rax + 0x573faf], bh ; ret
0x00000000004329b7 : add byte ptr [rax + 0x573fbd], bh ; ret
0x0000000000432c84 : add byte ptr [rax + 0x573fc4], bh ; ret
0x00000000004329d3 : add byte ptr [rax + 0x573fcb], bh ; ret
0x0000000000432999 : add byte ptr [rax + 0x573fe0], bh ; ret
0x0000000000432c6c : add byte ptr [rax + 0x573fe7], bh ; ret
0x0000000000432987 : add byte ptr [rax + 0x573fee], bh ; ret
0x0000000000432c5a : add byte ptr [rax + 0x573ff5], bh ; ret
0x0000000000432975 : add byte ptr [rax + 0x573ffc], bh ; ret
0x0000000000432c48 : add byte ptr [rax + 0x574003], bh ; ret
0x0000000000432963 : add byte ptr [rax + 0x57400a], bh ; ret
0x0000000000432c36 : add byte ptr [rax + 0x574011], bh ; ret
0x0000000000432951 : add byte ptr [rax + 0x574018], bh ; ret
0x0000000000432c24 : add byte ptr [rax + 0x57401f], bh ; ret
0x000000000043293f : add byte ptr [rax + 0x574026], bh ; ret
0x0000000000432c12 : add byte ptr [rax + 0x57402d], bh ; ret
0x000000000043291b : add byte ptr [rax + 0x574034], bh ; ret
0x0000000000432c00 : add byte ptr [rax + 0x57403b], bh ; ret
0x000000000043292d : add byte ptr [rax + 0x574049], bh ; ret
0x0000000000432aee : add byte ptr [rax + 0x574050], bh ; ret
0x0000000000432d26 : add byte ptr [rax + 0x574057], bh ; ret
0x0000000000432adc : add byte ptr [rax + 0x57405e], bh ; ret
0x0000000000432609 : add byte ptr [rax + 0x57406c], bh ; ret
0x0000000000432f76 : add byte ptr [rax + 0x5740ad], bh ; ret
0x0000000000433068 : add byte ptr [rax + 0x5740e7], bh ; ret
0x000000000043371f : add byte ptr [rax + 0x574508], bh ; ret
0x000000000043c48f : add byte ptr [rax + 0x574e58], bh ; ret
0x000000000043c4df : add byte ptr [rax + 0x575028], bh ; ret
0x000000000043c8bf : add byte ptr [rax + 0x575188], bh ; ret
0x000000000043c90f : add byte ptr [rax + 0x575358], bh ; ret
0x000000000046a9af : add byte ptr [rax + 0x57a7e8], bh ; ret
0x000000000046a9ae : add byte ptr [rax + 0x57a7e8], dil ; ret
0x000000000046e56f : add byte ptr [rax + 0x57aa00], bh ; ret
0x000000000046e57f : add byte ptr [rax + 0x57aa18], bh ; ret
0x000000000046e58f : add byte ptr [rax + 0x57aa30], bh ; ret
0x000000000046e59f : add byte ptr [rax + 0x57aa48], bh ; ret
0x000000000046e5af : add byte ptr [rax + 0x57aa60], bh ; ret
0x000000000049f9df : add byte ptr [rax + 0x5870f8], bh ; ret
0x000000000049f9ef : add byte ptr [rax + 0x587150], bh ; ret
0x000000000049f9ff : add byte ptr [rax + 0x5871a8], bh ; ret
0x00000000004a51ff : add byte ptr [rax + 0x587478], bh ; ret
0x00000000004a520f : add byte ptr [rax + 0x5874d0], bh ; ret
0x00000000004a521f : add byte ptr [rax + 0x587528], bh ; ret
0x00000000004a557f : add byte ptr [rax + 0x587580], bh ; ret
0x00000000004a557e : add byte ptr [rax + 0x587580], dil ; ret
0x00000000004a558f : add byte ptr [rax + 0x5875d8], bh ; ret
0x00000000004a559f : add byte ptr [rax + 0x587630], bh ; ret
0x00000000004a55af : add byte ptr [rax + 0x587688], bh ; ret
0x00000000004a55bf : add byte ptr [rax + 0x5876e0], bh ; ret
0x00000000004a55cf : add byte ptr [rax + 0x587738], bh ; ret
0x00000000004a55df : add byte ptr [rax + 0x587790], bh ; ret
0x00000000004a55ef : add byte ptr [rax + 0x5877e8], bh ; ret
0x00000000004a55ff : add byte ptr [rax + 0x587840], bh ; ret
0x00000000004a560f : add byte ptr [rax + 0x587898], bh ; ret
0x00000000004a561f : add byte ptr [rax + 0x5878f0], bh ; ret
0x00000000004a562f : add byte ptr [rax + 0x587948], bh ; ret
0x00000000004a563f : add byte ptr [rax + 0x5879a0], bh ; ret
0x00000000004a564f : add byte ptr [rax + 0x5879f8], bh ; ret
0x00000000004a565f : add byte ptr [rax + 0x587a50], bh ; ret
0x00000000004a566f : add byte ptr [rax + 0x587aa8], bh ; ret
0x00000000004a567f : add byte ptr [rax + 0x587b00], bh ; ret
0x00000000004a568f : add byte ptr [rax + 0x587b58], bh ; ret
0x00000000004a59bf : add byte ptr [rax + 0x587bc0], bh ; ret
0x00000000004a59cf : add byte ptr [rax + 0x587c18], bh ; ret
0x00000000004a59df : add byte ptr [rax + 0x587c70], bh ; ret
0x00000000004a59ef : add byte ptr [rax + 0x587cc8], bh ; ret
0x00000000004a96ef : add byte ptr [rax + 0x588410], bh ; ret
0x00000000004a96ee : add byte ptr [rax + 0x588410], dil ; ret
0x00000000004a96ff : add byte ptr [rax + 0x588468], bh ; ret
0x00000000004a970f : add byte ptr [rax + 0x5884c0], bh ; ret
0x00000000004a971f : add byte ptr [rax + 0x588518], bh ; ret
0x00000000004a972f : add byte ptr [rax + 0x588570], bh ; ret
0x00000000004a973f : add byte ptr [rax + 0x5885c8], bh ; ret
0x00000000004a9e0f : add byte ptr [rax + 0x588620], bh ; ret
0x00000000004a9e1f : add byte ptr [rax + 0x588678], bh ; ret
0x00000000004a9e2f : add byte ptr [rax + 0x5886d0], bh ; ret
0x00000000004a9e3f : add byte ptr [rax + 0x588728], bh ; ret
0x00000000004a9e4f : add byte ptr [rax + 0x588780], bh ; ret
0x00000000004a9e5f : add byte ptr [rax + 0x5887d8], bh ; ret
0x00000000004a9e6f : add byte ptr [rax + 0x588830], bh ; ret
0x00000000004a9e7f : add byte ptr [rax + 0x588888], bh ; ret
0x00000000004a9e8f : add byte ptr [rax + 0x5888e0], bh ; ret
0x00000000004a9e9f : add byte ptr [rax + 0x588938], bh ; ret
0x00000000004a9ecf : add byte ptr [rax + 0x588990], bh ; ret
0x00000000004aafbf : add byte ptr [rax + 0x589010], bh ; ret
0x00000000004aafcf : add byte ptr [rax + 0x589068], bh ; ret
0x00000000004aafdf : add byte ptr [rax + 0x5890c0], bh ; ret
0x00000000004aafef : add byte ptr [rax + 0x589118], bh ; ret
0x00000000004ab3af : add byte ptr [rax + 0x589170], bh ; ret
0x00000000004ab3ae : add byte ptr [rax + 0x589170], dil ; ret
0x00000000004abbff : add byte ptr [rax + 0x589320], bh ; ret
0x00000000004abc0f : add byte ptr [rax + 0x589378], bh ; ret
0x00000000004abc1f : add byte ptr [rax + 0x5893d0], bh ; ret
0x00000000004abc2f : add byte ptr [rax + 0x589428], bh ; ret
0x00000000004abc3f : add byte ptr [rax + 0x589480], bh ; ret
0x00000000004abc4f : add byte ptr [rax + 0x5894d8], bh ; ret
0x00000000004ac1df : add byte ptr [rax + 0x589548], bh ; ret
0x00000000004ac1ef : add byte ptr [rax + 0x5895a0], bh ; ret
0x00000000004ac98f : add byte ptr [rax + 0x5895f8], bh ; ret
0x00000000004ac99f : add byte ptr [rax + 0x589650], bh ; ret
0x00000000004ac9af : add byte ptr [rax + 0x5896a8], bh ; ret
0x00000000004ac9bf : add byte ptr [rax + 0x589700], bh ; ret
0x00000000005e8783 : add byte ptr [rax + 0x58], dh ; int1 ; jmp rax
0x00000000004b01cf : add byte ptr [rax + 0x58a010], bh ; ret
0x00000000004bd35f : add byte ptr [rax + 0x590f68], bh ; ret
0x00000000004bd81f : add byte ptr [rax + 0x5910a8], bh ; ret
0x00000000004c0f6f : add byte ptr [rax + 0x592000], bh ; ret
0x00000000005f1187 : add byte ptr [rax + 0x59], cl ; in al, -1 ; ret
0x00000000004c388f : add byte ptr [rax + 0x5b8020], bh ; ret
0x00000000004e1e3f : add byte ptr [rax + 0x5bc8e8], bh ; ret
0x00000000004e325f : add byte ptr [rax + 0x5bd418], bh ; ret
0x00000000004e325e : add byte ptr [rax + 0x5bd418], dil ; ret
0x00000000004e341f : add byte ptr [rax + 0x5bd760], bh ; ret
0x00000000004e34af : add byte ptr [rax + 0x5bd8c8], bh ; ret
0x00000000004e34bf : add byte ptr [rax + 0x5bd940], bh ; ret
0x00000000004e34cf : add byte ptr [rax + 0x5bd9b8], bh ; ret
0x00000000004e34df : add byte ptr [rax + 0x5bda30], bh ; ret
0x00000000004e397f : add byte ptr [rax + 0x5bdab8], bh ; ret
0x00000000005e5473 : add byte ptr [rax + 0x5d], al ; in al, dx ; push qword ptr [rax] ; ret 1
0x0000000000432f9c : add byte ptr [rax + 0x5de743], bh ; ret
0x000000000055988f : add byte ptr [rax + 0x5deab5], bh ; ret
0x000000000055989f : add byte ptr [rax + 0x5deac4], bh ; ret
0x00000000005598af : add byte ptr [rax + 0x5dead9], bh ; ret
0x00000000005598bf : add byte ptr [rax + 0x5deaf1], bh ; ret
0x00000000005598cf : add byte ptr [rax + 0x5deafe], bh ; ret
0x00000000005e4b5b : add byte ptr [rax + 0x5f], al ; jmp 0x5e4b63
0x00000000005e93b3 : add byte ptr [rax + 0x60fff2e0], ah ; ret
0x0000000000615977 : add byte ptr [rax + 0x63], bh ; hlt ; jmp qword ptr [rcx]
0x00000000004eaa5f : add byte ptr [rax + 0x63], cl ; push rdi ; adc al, -0x75 ; adc al, 0x39 ; ret 0xd75
0x0000000000428cc4 : add byte ptr [rax + 0x63], cl ; ret
0x000000000053ba4f : add byte ptr [rax + 0x63], cl ; ret 0x4c6
0x00000000005e95a3 : add byte ptr [rax + 0x64], ah ; cmc ; jmp rax
0x00000000005e5d1b : add byte ptr [rax + 0x68], dl ; in eax, dx ; jmp rax
0x0000000000608af7 : add byte ptr [rax + 0x6a], ch ; out dx, al ; jmp qword ptr [rdi]
0x00000000006015c7 : add byte ptr [rax + 0x6a], cl ; in al, dx ; jmp rdx
0x0000000000608adf : add byte ptr [rax + 0x6a], dl ; out dx, al ; jmp qword ptr [rdi]
0x00000000005e54fb : add byte ptr [rax + 0x6b], dh ; in al, dx ; jmp qword ptr [rax]
0x00000000005e5d73 : add byte ptr [rax + 0x6c], dl ; in eax, dx ; call qword ptr [rax]
0x00000000005e63a3 : add byte ptr [rax + 0x6d], ah ; out dx, al ; call qword ptr [rax]
0x00000000005ebfb3 : add byte ptr [rax + 0x6d], dh ; clc ; call rax
0x00000000005ec013 : add byte ptr [rax + 0x6f], dh ; clc ; call qword ptr [rax]
0x00000000005ec003 : add byte ptr [rax + 0x6f], dl ; clc ; jmp rax
0x00000000005e5d9b : add byte ptr [rax + 0x72], dl ; in eax, dx ; call rax
0x000000000043a2ff : add byte ptr [rax + 0x7400103c], al ; xor dword ptr [rax - 1], ecx ; ret 0x3948
0x00000000005e5dfb : add byte ptr [rax + 0x75], al ; in eax, dx ; call qword ptr [rax]
0x00000000005ec19b : add byte ptr [rax + 0x77], dl ; clc ; call qword ptr [rax]
0x00000000005e9633 : add byte ptr [rax + 0x78], dh ; cmc ; jmp qword ptr [rax]
0x00000000004b87ef : add byte ptr [rax + 0x7fffffff], bh ; and eax, dword ptr [rdi + 0x44] ; ret
0x000000000045ea5f : add byte ptr [rax + 0x81fc10], bh ; ret
0x000000000045ef6f : add byte ptr [rax + 0x81fc60], bh ; ret
0x000000000045f67f : add byte ptr [rax + 0x81fcb0], bh ; ret
0x0000000000461faf : add byte ptr [rax + 0x820160], bh ; ret
0x0000000000461fae : add byte ptr [rax + 0x820160], dil ; ret
0x000000000046266f : add byte ptr [rax + 0x8201b0], bh ; ret
0x0000000000475fbf : add byte ptr [rax + 0x8205b0], bh ; ret
0x000000000047667f : add byte ptr [rax + 0x820600], bh ; ret
0x000000000047883f : add byte ptr [rax + 0x8206f0], bh ; ret
0x0000000000478e7f : add byte ptr [rax + 0x820740], bh ; ret
0x000000000047935f : add byte ptr [rax + 0x820790], bh ; ret
0x0000000000479a4f : add byte ptr [rax + 0x820830], bh ; ret
0x0000000000479aff : add byte ptr [rax + 0x820880], bh ; ret
0x000000000047acbf : add byte ptr [rax + 0x820940], bh ; ret
0x000000000047afff : add byte ptr [rax + 0x820990], bh ; ret
0x000000000048c71f : add byte ptr [rax + 0x821590], bh ; ret
0x000000000049accf : add byte ptr [rax + 0x822280], bh ; ret
0x000000000049be4f : add byte ptr [rax + 0x8222e0], bh ; ret
0x000000000049ce6f : add byte ptr [rax + 0x822780], bh ; ret
0x00000000004ac24f : add byte ptr [rax + 0x823d00], bh ; ret
0x000000000050b19f : add byte ptr [rax + 0x828130], bh ; ret
0x000000000050b19e : add byte ptr [rax + 0x828130], dil ; ret
0x000000000050d6ff : add byte ptr [rax + 0x8289e0], bh ; ret
0x00000000004ca9bf : add byte ptr [rax + 0x82c450], bh ; ret
0x000000000048f4c9 : add byte ptr [rax + 0x82fc68], bh ; ret
0x000000000041965f : add byte ptr [rax + 0x8c], bh ; ret
0x00000000005fe9d7 : add byte ptr [rax + 0xb], cl ; jmp 0x5fe9df
0x00000000005e82a3 : add byte ptr [rax + 0xb], dh ; int1 ; call rax
0x00000000005e5a4b : add byte ptr [rax + 0xd], al ; in eax, dx ; jmp rax
0x000000000045d48f : add byte ptr [rax + 0xf0a2e3c], al ; xchg eax, esp ; ret 0xb60f
0x000000000043612a : add byte ptr [rax + 0xf], bh ; ret
0x00000000004a2cd3 : add byte ptr [rax + 0xf], cl ; ret
0x00000000004e8c6b : add byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0xc148
0x0000000000402d9c : add byte ptr [rax + 1], bh ; pop rbx ; ret
0x0000000000402e54 : add byte ptr [rax + 1], bh ; pop rdx ; ret
0x000000000040dfb6 : add byte ptr [rax + 1], bh ; ret
0x000000000040a4c9 : add byte ptr [rax + 1], cl ; ret
0x0000000000480f67 : add byte ptr [rax + 1], dil ; pop rbx ; ret
0x000000000042e7fe : add byte ptr [rax + 1], dil ; ret
0x00000000004e048f : add byte ptr [rax + 1], r15b ; pop rbx ; ret
0x0000000000437185 : add byte ptr [rax + 2], bh ; ret
0x00000000005fe8ff : add byte ptr [rax + 2], dl ; jmp 0x5fe907
0x00000000005eb993 : add byte ptr [rax + 3], al ; clc ; jmp rax
0x00000000004dd6f4 : add byte ptr [rax + 3], bh ; ret
0x00000000005eb958 : add byte ptr [rax + 3], bl ; add al, dl ; add eax, edi ; jmp qword ptr [rax]
0x00000000004371a7 : add byte ptr [rax + 4], bh ; ret
0x00000000005e59db : add byte ptr [rax + 6], dl ; in eax, dx ; jmp qword ptr [rax]
0x000000000040d9af : add byte ptr [rax + 7], bh ; ret
0x0000000000506c7f : add byte ptr [rax + 9], cl ; div byte ptr [rbp + 2] ; ret
0x00000000005c3b3f : add byte ptr [rax + rax + 0xa0000], dl ; add byte ptr [rax], al ; ret 0x5c0e
0x00000000006102a3 : add byte ptr [rax + rax*2 + 0x19680002], bl ; call qword ptr [rax]
0x00000000004aea86 : add byte ptr [rax + rax*8 + 0x5c64475], al ; ret 0x37d8
0x00000000004f877f : add byte ptr [rax + rax], 0 ; mov rdi, r14 ; call r12
0x00000000004e7511 : add byte ptr [rax + rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x894c
0x000000000043cdac : add byte ptr [rax + rax], al ; add byte ptr [rax + 1], bh ; ret
0x0000000000463c99 : add byte ptr [rax + rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xebe9
0x00000000005c6073 : add byte ptr [rax + rax], al ; add byte ptr [rax], al ; ret
0x000000000045fc89 : add byte ptr [rax + rax], al ; add byte ptr [rcx], ch ; ret 0x4ce8
0x00000000005f85ef : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; in al, dx ; ret
0x0000000000608567 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; ret
0x00000000005f8597 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; xchg eax, esp ; ret
0x0000000000608497 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; xchg eax, esp ; ret 1
0x00000000006185a7 : add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004d45ee : add byte ptr [rax + rax], cl ; add byte ptr [rax - 0x7f], cl ; ret
0x00000000005f84af : add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x000000000060845f : add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; pop rsp ; ret 1
0x00000000006184ff : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; cld ; ret 2
0x00000000006084ef : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, dx ; ret 1
0x000000000061855f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pop rsp ; ret
0x000000000061845f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pop rsp ; ret 2
0x00000000005f854f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; ret
0x00000000005f844f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; ret 0
0x0000000000608447 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; ret 1
0x0000000000618447 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; ret 2
0x000000000060eab3 : add byte ptr [rax + rbp - 0x13c7fffe], ch ; jmp rdx
0x0000000000574877 : add byte ptr [rax + rbp*2 + 0x43], bh ; add byte ptr [rax], al ; ret
0x0000000000612a8b : add byte ptr [rax + rbp*2 - 0x629ffffe], al ; call qword ptr [rbx]
0x0000000000606a5b : add byte ptr [rax + rbp*4 + 1], dl ; add byte ptr [rax], dh ; or ebp, esi ; call rdi
0x000000000060aa0b : add byte ptr [rax + rbp*8], al ; add dword ptr [rax], eax ; nop ; hlt ; out dx, al ; call rax
0x00000000005e3454 : add byte ptr [rax + rbp*8], ch ; call rax
0x0000000000460f1e : add byte ptr [rax + rbx + 0x48], dh ; mov edi, ebx ; call rcx
0x0000000000610a8b : add byte ptr [rax + rcx*2 + 0x22800002], al ; call qword ptr [rdx]
0x0000000000608aab : add byte ptr [rax + rcx*8 + 0x6a200001], ah ; out dx, al ; jmp qword ptr [rdi]
0x00000000005ffaab : add byte ptr [rax + rdi - 0x7f9fffff], ah ; jmp 0x5ffabb
0x0000000000617abb : add byte ptr [rax + rdi*4 - 0x129ffffe], dh ; hlt ; call qword ptr [rax]
0x00000000004df40c : add byte ptr [rax + rdi*8 - 0x2776b701], bh ; pop rbx ; ret
0x000000000060fa3b : add byte ptr [rax + rdi], dh ; add al, byte ptr [rax] ; loopne 0x60fa5e ; call qword ptr [rax]
0x00000000005efa3b : add byte ptr [rax + rdi], dh ; add byte ptr [rax], al ; rcr al, -0x1d ; jmp qword ptr [rcx]
0x00000000004ff10a : add byte ptr [rax + rdx + 0x48], dh ; mov edi, ebx ; call rcx
0x0000000000601273 : add byte ptr [rax + rdx*2 + 1], ch ; add byte ptr [rax + 0x50], ch ; in al, dx ; jmp qword ptr [rax]
0x000000000061524b : add byte ptr [rax + rdx*4 + 2], al ; add al, al ; hlt ; call qword ptr [rdi]
0x0000000000615263 : add byte ptr [rax + rdx*4 + 2], bl ; add al, cl ; hlt ; call qword ptr [rdi]
0x000000000061527b : add byte ptr [rax + rdx*4 + 2], dh ; add al, dl ; hlt ; call qword ptr [rdi]
0x0000000000605293 : add byte ptr [rax + rdx*4 - 0x4d07ffff], cl ; in eax, dx ; jmp rax
0x000000000061521b : add byte ptr [rax + rdx*4], dl ; add al, byte ptr [rax] ; mov al, 0x49 ; hlt ; jmp qword ptr [rax]
0x000000000060d243 : add byte ptr [rax + rdx], bh ; add al, byte ptr [rax] ; clc ; add al, -0x10 ; jmp qword ptr [rdi]
0x00000000006172a3 : add byte ptr [rax + rsi*4 - 0x1b47fffe], bl ; hlt ; call qword ptr [rsi]
0x0000000000617243 : add byte ptr [rax + rsi*4], bh ; add al, byte ptr [rax] ; cwde ; in al, -0xc ; call qword ptr [rsi]
0x0000000000617213 : add byte ptr [rax + rsi*4], cl ; add al, byte ptr [rax] ; mov ah, ah ; hlt ; call qword ptr [rsi]
0x00000000004a241e : add byte ptr [rax - 0x1000000], al ; ret 0x8348
0x00000000005e7233 : add byte ptr [rax - 0x10], dh ; out dx, eax ; jmp qword ptr [rax]
0x0000000000617abf : add byte ptr [rax - 0x13], ah ; hlt ; call qword ptr [rax]
0x00000000005e69db : add byte ptr [rax - 0x13], ah ; out dx, al ; call rax
0x00000000005e4b6c : add byte ptr [rax - 0x15], ah ; call qword ptr [rax]
0x00000000005e5163 : add byte ptr [rax - 0x15], al ; jmp 0x5e516b
0x00000000004cfb56 : add byte ptr [rax - 0x17], bl ; ret
0x00000000006176a7 : add byte ptr [rax - 0x1a], bh ; hlt ; call qword ptr [rdi]
0x000000000061745f : add byte ptr [rax - 0x1b], ah ; hlt ; call qword ptr [rsi]
0x00000000006173ff : add byte ptr [rax - 0x1b], al ; hlt ; call qword ptr [rsi]
0x00000000005e93cb : add byte ptr [rax - 0x1b], al ; jmp rax
0x0000000000617417 : add byte ptr [rax - 0x1b], cl ; hlt ; call qword ptr [rsi]
0x000000000061748f : add byte ptr [rax - 0x1b], dh ; hlt ; call qword ptr [rsi]
0x000000000061742f : add byte ptr [rax - 0x1b], dl ; hlt ; call qword ptr [rsi]
0x00000000005e50b3 : add byte ptr [rax - 0x1b], dl ; jmp 0x5e50bb
0x000000000061719f : add byte ptr [rax - 0x1c], ah ; hlt ; call qword ptr [rsi]
0x0000000000613e6f : add byte ptr [rax - 0x1c], ah ; jmp qword ptr [rcx]
0x000000000061713f : add byte ptr [rax - 0x1c], al ; hlt ; call qword ptr [rsi]
0x0000000000617187 : add byte ptr [rax - 0x1c], bl ; hlt ; call qword ptr [rsi]
0x00000000006171b7 : add byte ptr [rax - 0x1c], ch ; hlt ; call qword ptr [rsi]
0x00000000006171cf : add byte ptr [rax - 0x1c], dh ; hlt ; call qword ptr [rsi]
0x000000000061716f : add byte ptr [rax - 0x1c], dl ; hlt ; call qword ptr [rsi]
0x00000000005e5073 : add byte ptr [rax - 0x1c], dl ; jmp 0x5e507b
0x0000000000616ecf : add byte ptr [rax - 0x1d], al ; hlt ; jmp qword ptr [rdi]
0x00000000005e9893 : add byte ptr [rax - 0x1d], dh ; cmc ; jmp qword ptr [rax]
0x00000000005e8d0b : add byte ptr [rax - 0x1d], dh ; int1 ; jmp rax
0x000000000060ea0f : add byte ptr [rax - 0x1e], ah ; call rsi
0x00000000005e5953 : add byte ptr [rax - 0x1e], dh ; in al, dx ; jmp qword ptr [rax]
0x0000000000613d37 : add byte ptr [rax - 0x25], ch ; call rsp
0x0000000000605b3f : add byte ptr [rax - 0x2b], ah ; in eax, dx ; call rcx
0x00000000005e68db : add byte ptr [rax - 0x2b], ah ; out dx, al ; call rax
0x00000000005e9373 : add byte ptr [rax - 0x2c], al ; call rax
0x000000000060e88f : add byte ptr [rax - 0x2f], dl ; call rsp
0x0000000000602d2f : add byte ptr [rax - 0x31], dl ; in al, dx ; jmp rdx
0x00000000005e54e3 : add byte ptr [rax - 0x37001399], ah ; ret
0x00000000005e4fab : add byte ptr [rax - 0x37], ah ; jmp 0x5e4fb3
0x00000000004cd95c : add byte ptr [rax - 0x39], cl ; ret
0x00000000005e708b : add byte ptr [rax - 0x39], dl ; out dx, eax ; jmp rax
0x00000000005e9323 : add byte ptr [rax - 0x3b], ah ; jmp qword ptr [rax]
0x00000000005e939b : add byte ptr [rax - 0x3f000d26], ah ; ret 2
0x00000000005e60ab : add byte ptr [rax - 0x40], dl ; in eax, dx ; jmp rax
0x0000000000602877 : add byte ptr [rax - 0x45], bh ; in al, dx ; call qword ptr [rax]
0x0000000000602837 : add byte ptr [rax - 0x45], cl ; in al, dx ; call qword ptr [rax]
0x000000000060288f : add byte ptr [rax - 0x45], dh ; in al, dx ; call qword ptr [rbx]
0x000000000060e60f : add byte ptr [rax - 0x45], dl ; jmp rsi
0x00000000005e8b93 : add byte ptr [rax - 0x46], dl ; int1 ; call qword ptr [rax]
0x0000000000605457 : add byte ptr [rax - 0x47], ch ; in eax, dx ; jmp qword ptr [rsi]
0x000000000060e4bf : add byte ptr [rax - 0x49], dl ; jmp qword ptr [rax]
0x000000000060538f : add byte ptr [rax - 0x4a], dh ; in eax, dx ; jmp rdx
0x0000000000605137 : add byte ptr [rax - 0x50], ch ; in eax, dx ; jmp qword ptr [rsi]
0x000000000061338f : add byte ptr [rax - 0x50], dh ; jmp qword ptr [rdx]
0x00000000005e4e63 : add byte ptr [rax - 0x52], dh ; jmp 0x5e4e6b
0x00000000005e6f03 : add byte ptr [rax - 0x54], dl ; out dx, eax ; call qword ptr [rax]
0x00000000005e577b : add byte ptr [rax - 0x57], al ; in al, dx ; call rax
0x000000000060229b : add byte ptr [rax - 0x5e1fffff], dl ; in al, dx ; call qword ptr [rbx]
0x00000000005e56db : add byte ptr [rax - 0x5f], al ; in al, dx ; call rax
0x00000000006001bf : add byte ptr [rax - 0x5f], dl ; jmp 0x6001c7
0x00000000005e6613 : add byte ptr [rax - 0x5f], dl ; out dx, al ; jmp rax
0x000000000061649f : add byte ptr [rax - 0x60], dl ; hlt ; jmp qword ptr [rdi]
0x00000000005e56ab : add byte ptr [rax - 0x62], al ; in al, dx ; jmp rax
0x0000000000612a8f : add byte ptr [rax - 0x63], ah ; call qword ptr [rbx]
0x00000000005e976b : add byte ptr [rax - 0x65], al ; cmc ; call rax
0x00000000005e8b33 : add byte ptr [rax - 0x65], dh ; int1 ; call qword ptr [rax]
0x00000000005e54d3 : add byte ptr [rax - 0x6700139b], al ; ret
0x000000000042c108 : add byte ptr [rax - 0x68], cl ; pop rdx ; ret
0x00000000005e8aa3 : add byte ptr [rax - 0x69], al ; int1 ; jmp qword ptr [rax]
0x00000000005e8a33 : add byte ptr [rax - 0x6a], ah ; int1 ; call rax
0x00000000005e89a3 : add byte ptr [rax - 0x6b], al ; int1 ; jmp qword ptr [rax]
0x00000000005e914b : add byte ptr [rax - 0x6c], dh ; call qword ptr [rax]
0x0000000000600127 : add byte ptr [rax - 0x6d], bh ; jmp 0x60012f
0x00000000005e8933 : add byte ptr [rax - 0x6e], dh ; int1 ; call rax
0x00000000005e93a3 : add byte ptr [rax - 0x7000d25], ah ; ret 2
0x00000000005e8903 : add byte ptr [rax - 0x71], al ; int1 ; jmp rax
0x000000000060900f : add byte ptr [rax - 0x73], al ; out dx, al ; call qword ptr [rsi]
0x0000000000452fbf : add byte ptr [rax - 0x73], cl ; add byte ptr gs:[rbp - 0xd], bl ; ret
0x0000000000415d01 : add byte ptr [rax - 0x73], cl ; add dword ptr [rcx], edi ; ret
0x00000000004264bf : add byte ptr [rax - 0x73], cl ; cmp al, 0x24 ; call rax
0x00000000004396cb : add byte ptr [rax - 0x73], cl ; je 0x4396fd ; push rax ; mov rdi, r14 ; call rax
0x000000000043a370 : add byte ptr [rax - 0x73], cl ; je 0x43a3a2 ; or al, 0x48 ; mov edi, ebx ; call rax
0x0000000000609027 : add byte ptr [rax - 0x73], cl ; out dx, al ; call qword ptr [rsi]
0x000000000048d32f : add byte ptr [rax - 0x73], cl ; pop rsi ; add dword ptr [rax], edi ; ret 0xf48
0x00000000004899df : add byte ptr [rax - 0x73], cl ; ret
0x00000000004a4a3f : add byte ptr [rax - 0x73], cl ; xor al, 0x24 ; xor edi, edi ; call rbx
0x0000000000612527 : add byte ptr [rax - 0x75], bl ; jmp rdi
0x000000000054836f : add byte ptr [rax - 0x75], cl ; adc byte ptr [r8 - 0x77], r9b ; ja 0x548391 ; ret
0x00000000004add3a : add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7d], cl ; ret 0xb908
0x0000000000426642 : add byte ptr [rax - 0x75], cl ; adc byte ptr [rax], 1 ; add byte ptr [rax], al ; ret
0x000000000053ee43 : add byte ptr [rax - 0x75], cl ; adc esi, esi ; ret 0x7506
0x000000000041d165 : add byte ptr [rax - 0x75], cl ; adc esi, esi ; ret 0xf80
0x000000000047198f : add byte ptr [rax - 0x75], cl ; add byte ptr [r8 - 0x77], r9b ; ret 0x8844
0x00000000004cad8f : add byte ptr [rax - 0x75], cl ; add dword ptr [rax - 0x7b], ecx ; ror byte ptr [rdi], -0x6b ; ret 0x3948
0x000000000055b64f : add byte ptr [rax - 0x75], cl ; add eax, 0x2cfe89 ; ret
0x00000000004e5b9f : add byte ptr [rax - 0x75], cl ; add eax, 0x3412a9 ; jmp rax
0x00000000004e665f : add byte ptr [rax - 0x75], cl ; add eax, 0x347f61 ; ret
0x000000000049c6af : add byte ptr [rax - 0x75], cl ; add eax, 0x38f241 ; ret
0x000000000048f6bf : add byte ptr [rax - 0x75], cl ; add eax, 0x39c041 ; ret
0x000000000048f39f : add byte ptr [rax - 0x75], cl ; add eax, 0x39c531 ; ret
0x000000000048f31f : add byte ptr [rax - 0x75], cl ; add eax, 0x39c5a9 ; ret
0x000000000048f29f : add byte ptr [rax - 0x75], cl ; add eax, 0x39c621 ; ret
0x000000000048f28f : add byte ptr [rax - 0x75], cl ; add eax, 0x39c629 ; ret
0x000000000048f24f : add byte ptr [rax - 0x75], cl ; add eax, 0x39c659 ; ret
0x000000000048f22f : add byte ptr [rax - 0x75], cl ; add eax, 0x39c669 ; ret
0x000000000048f23f : add byte ptr [rax - 0x75], cl ; add eax, 0x39c671 ; ret
0x000000000044334f : add byte ptr [rax - 0x75], cl ; add eax, 0x3db881 ; ret
0x00000000004b695b : add byte ptr [rax - 0x75], cl ; je 0x4b698c ; and byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000004e84f6 : add byte ptr [rax - 0x75], cl ; jnp 0x4e8508 ; call qword ptr [rax]
0x000000000049bd9f : add byte ptr [rax - 0x75], cl ; js 0x49bdf6 ; mov eax, dword ptr [rax + 8] ; jmp rax
0x000000000049bdaf : add byte ptr [rax - 0x75], cl ; js 0x49be06 ; mov eax, dword ptr [rax + 0x10] ; jmp rax
0x00000000004318cf : add byte ptr [rax - 0x75], cl ; pop r8 ; ret
0x0000000000436ba5 : add byte ptr [rax - 0x75], cl ; pop rbp ; add dh, dh ; ret
0x0000000000421272 : add byte ptr [rax - 0x75], cl ; pop rdx ; sbb dh, dh ; ret
0x00000000004318af : add byte ptr [rax - 0x75], cl ; push r8 ; ret
0x0000000000413cf9 : add byte ptr [rax - 0x75], cl ; push rdx ; and dh, dh ; ret 0x7420
0x0000000000463b8f : add byte ptr [rax - 0x75], cl ; ret
0x000000000042b90f : add byte ptr [rax - 0x75], cl ; xchg dword ptr [rax + 1], ecx ; add byte ptr [rax], al ; ret
0x000000000042b93f : add byte ptr [rax - 0x75], cl ; xchg dword ptr [rax + 1], edi ; add byte ptr [rax], al ; ret
0x000000000042e35f : add byte ptr [rax - 0x75], cl ; xchg dword ptr [rax + 1], edx ; add byte ptr [rax], al ; ret
0x000000000042e33f : add byte ptr [rax - 0x75], cl ; xchg dword ptr [rax + 1], esi ; add byte ptr [rax], al ; ret
0x00000000004d47bf : add byte ptr [rax - 0x76], al ; xor ecx, dword ptr [rax - 1] ; ret
0x0000000000564cf9 : add byte ptr [rax - 0x76beac8e], al ; ret 0x1b8
0x00000000004279c3 : add byte ptr [rax - 0x77], cl ; add bh, byte ptr [rax + 1] ; ret
0x000000000056816d : add byte ptr [rax - 0x77], cl ; add dword ptr [rax + 1], edi ; ret
0x0000000000547401 : add byte ptr [rax - 0x77], cl ; add eax, 0x2e7397 ; pop rdx ; ret
0x00000000004c5fb1 : add byte ptr [rax - 0x77], cl ; add eax, 0x36644f ; pop rdx ; ret
0x00000000004bc151 : add byte ptr [rax - 0x77], cl ; add eax, 0x3702a7 ; pop rdx ; ret
0x000000000049a841 : add byte ptr [rax - 0x77], cl ; add eax, 0x3910a7 ; pop rdx ; ret
0x0000000000405c41 : add byte ptr [rax - 0x77], cl ; and dword ptr [rax + 2], 0 ; add al, ch ; ret 0xfac
0x000000000048121f : add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000055bb46 : add byte ptr [rax - 0x77], cl ; cmp eax, 0x2cf9b2 ; ret
0x000000000055b65f : add byte ptr [rax - 0x77], cl ; cmp eax, 0x2cfe79 ; ret
0x000000000054867f : add byte ptr [rax - 0x77], cl ; cmp eax, 0x2e6119 ; ret
0x000000000050d16f : add byte ptr [rax - 0x77], cl ; cmp eax, 0x3214d1 ; ret
0x00000000004e664f : add byte ptr [rax - 0x77], cl ; cmp eax, 0x347f71 ; ret
0x00000000004c5f8f : add byte ptr [rax - 0x77], cl ; cmp eax, 0x366471 ; ret
0x00000000004bc12f : add byte ptr [rax - 0x77], cl ; cmp eax, 0x3702c9 ; ret
0x000000000049a81f : add byte ptr [rax - 0x77], cl ; cmp eax, 0x3910c9 ; ret
0x000000000049643f : add byte ptr [rax - 0x77], cl ; cmp eax, 0x3954a1 ; ret
0x000000000048f3af : add byte ptr [rax - 0x77], cl ; cmp eax, 0x39c521 ; ret
0x000000000048f2cf : add byte ptr [rax - 0x77], cl ; cmp eax, 0x39c5f1 ; ret
0x000000000048f27f : add byte ptr [rax - 0x77], cl ; cmp eax, 0x39c629 ; ret
0x000000000048f25f : add byte ptr [rax - 0x77], cl ; cmp eax, 0x39c639 ; ret
0x000000000048f26f : add byte ptr [rax - 0x77], cl ; cmp eax, 0x39c641 ; ret
0x0000000000429906 : add byte ptr [rax - 0x77], cl ; cmp eax, 0x401eca ; ret
0x00000000004e1a0c : add byte ptr [rax - 0x77], cl ; enter 0xf48, -0x51 ; ret 0x8548
0x00000000004cb125 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x41] ; pop rsi ; pop r15 ; ret
0x0000000000477344 : add byte ptr [rax - 0x77], cl ; fistp word ptr [rbx - 0x17] ; ret 0x6ef
0x0000000000443208 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; out dx, al ; call r14
0x000000000043cde7 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; out dx, al ; call rax
0x0000000000496a93 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0x41e8
0x000000000041fa5e : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0x51ff
0x00000000004e0445 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0x8fe8
0x0000000000461844 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rbp - 0x77] ; salc ; call r14
0x0000000000423960 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rbx - 0x17c7dbac] ; ret
0x0000000000429ba7 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rcx + rcx*4 - 0xa] ; call qword ptr [rax]
0x00000000004d095c : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rcx + rcx*4 - 0xa] ; call rax
0x00000000004612d7 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rcx + rcx*4 - 0xe] ; call r15
0x000000000048ecb5 : add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xaac
0x000000000049e62b : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; insb byte ptr [rdi], dx ; ret 2
0x000000000049e7e8 : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; lahf ; ret
0x000000000055295e : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; leave ; ret
0x000000000049e6d3 : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; push rsp ; ret 2
0x000000000040c824 : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret
0x000000000041ee65 : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 0x118
0x0000000000495445 : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 0x50e
0x00000000004cb2b5 : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 0x760
0x00000000004e0b15 : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 0xf212
0x00000000004dd445 : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 0xfed4
0x000000000042f365 : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 0xff6a
0x000000000049e616 : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 2
0x00000000004f3f11 : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; xchg eax, esi ; ret 0xfffd
0x000000000043189f : add byte ptr [rax - 0x77], cl ; ja 0x4318f9 ; ret
0x00000000004318bf : add byte ptr [rax - 0x77], cl ; ja 0x431921 ; ret
0x00000000004318df : add byte ptr [rax - 0x77], cl ; ja 0x431949 ; ret
0x000000000046108f : add byte ptr [rax - 0x77], cl ; ja 0x4610a1 ; ret
0x000000000046109f : add byte ptr [rax - 0x77], cl ; ja 0x4610b9 ; ret
0x0000000000463b6f : add byte ptr [rax - 0x77], cl ; ja 0x463b99 ; ret
0x0000000000463b9f : add byte ptr [rax - 0x77], cl ; ja 0x463be9 ; ret
0x000000000048ea6f : add byte ptr [rax - 0x77], cl ; ja 0x48ea99 ; ret
0x000000000048ea9f : add byte ptr [rax - 0x77], cl ; ja 0x48eac1 ; ret
0x000000000048eabf : add byte ptr [rax - 0x77], cl ; ja 0x48eaf1 ; ret
0x000000000048f2e6 : add byte ptr [rax - 0x77], cl ; ja 0x48f2f8 ; ret
0x00000000004c638f : add byte ptr [rax - 0x77], cl ; ja 0x4c63a9 ; ret
0x00000000004c639f : add byte ptr [rax - 0x77], cl ; ja 0x4c63c1 ; ret
0x00000000004c63df : add byte ptr [rax - 0x77], cl ; ja 0x4c6411 ; ret
0x00000000004c63de : add byte ptr [rax - 0x77], cl ; ja 0x4c6412 ; ret
0x00000000004d030f : add byte ptr [rax - 0x77], cl ; ja 0x4d0379 ; ret
0x00000000004ffd3f : add byte ptr [rax - 0x77], cl ; ja 0x4ffd81 ; ret
0x000000000050075f : add byte ptr [rax - 0x77], cl ; ja 0x500791 ; ret
0x000000000050074f : add byte ptr [rax - 0x77], cl ; ja 0x50079c ; mov dword ptr [rdi + 0x48], edx ; ret
0x00000000005007bf : add byte ptr [rax - 0x77], cl ; ja 0x5007d1 ; ret
0x000000000050079f : add byte ptr [rax - 0x77], cl ; ja 0x5007d9 ; ret
0x00000000005007cf : add byte ptr [rax - 0x77], cl ; ja 0x5007e9 ; ret
0x00000000005007df : add byte ptr [rax - 0x77], cl ; ja 0x500801 ; ret
0x00000000005007ef : add byte ptr [rax - 0x77], cl ; ja 0x50081d ; mov qword ptr [rdi + 0x28], rdx ; ret
0x00000000005007ff : add byte ptr [rax - 0x77], cl ; ja 0x50083d ; mov qword ptr [rdi + 0x38], rdx ; ret
0x000000000050080f : add byte ptr [rax - 0x77], cl ; ja 0x50085d ; mov qword ptr [rdi + 0x48], rdx ; ret
0x000000000050081f : add byte ptr [rax - 0x77], cl ; ja 0x50087d ; mov qword ptr [rdi + 0x58], rdx ; ret
0x000000000050082f : add byte ptr [rax - 0x77], cl ; ja 0x50089d ; mov qword ptr [rdi + 0x68], rdx ; ret
0x000000000050083f : add byte ptr [rax - 0x77], cl ; ja 0x5008bd ; mov qword ptr [rdi + 0x78], rdx ; ret
0x00000000005392bf : add byte ptr [rax - 0x77], cl ; ja 0x5392e1 ; ret
0x000000000053f8bf : add byte ptr [rax - 0x77], cl ; ja 0x53f8d1 ; ret
0x000000000053f8df : add byte ptr [rax - 0x77], cl ; ja 0x53f8f9 ; ret
0x000000000053f8ff : add byte ptr [rax - 0x77], cl ; ja 0x53f921 ; ret
0x000000000053f91f : add byte ptr [rax - 0x77], cl ; ja 0x53f949 ; ret
0x000000000054406f : add byte ptr [rax - 0x77], cl ; ja 0x5440cd ; mov qword ptr [rdi + 0x58], rdx ; ret
0x000000000054407f : add byte ptr [rax - 0x77], cl ; ja 0x5440ed ; mov qword ptr [rdi + 0x68], rdx ; ret
0x000000000054408f : add byte ptr [rax - 0x77], cl ; ja 0x54410d ; mov qword ptr [rdi + 0x78], rdx ; ret
0x000000000054b3e7 : add byte ptr [rax - 0x77], cl ; ja 0x54b421 ; ret
0x000000000054b4a7 : add byte ptr [rax - 0x77], cl ; ja 0x54b4e1 ; ret
0x000000000055ae7f : add byte ptr [rax - 0x77], cl ; ja 0x55aeb1 ; ret
0x000000000055ae8f : add byte ptr [rax - 0x77], cl ; ja 0x55af01 ; ret
0x000000000055e36f : add byte ptr [rax - 0x77], cl ; ja 0x55e389 ; ret
0x000000000055e37f : add byte ptr [rax - 0x77], cl ; ja 0x55e3a1 ; ret
0x000000000055e38f : add byte ptr [rax - 0x77], cl ; ja 0x55e3b9 ; ret
0x000000000055f41f : add byte ptr [rax - 0x77], cl ; ja 0x55f469 ; ret
0x000000000055f41e : add byte ptr [rax - 0x77], cl ; ja 0x55f46a ; ret
0x00000000005605df : add byte ptr [rax - 0x77], cl ; ja 0x5605f5 ; or byte ptr [rdi + 0x18], 2 ; ret
0x00000000005660ef : add byte ptr [rax - 0x77], cl ; ja 0x566169 ; ret
0x0000000000406c26 : add byte ptr [rax - 0x77], cl ; jmp 0x19f57e
0x0000000000410ce2 : add byte ptr [rax - 0x77], cl ; jmp 0x1a963a
0x0000000000408564 : add byte ptr [rax - 0x77], cl ; jmp 0x2a0ec0
0x000000000040f1ca : add byte ptr [rax - 0x77], cl ; jmp 0x2a7b26
0x000000000041c9c7 : add byte ptr [rax - 0x77], cl ; jmp 0x3b5323
0x00000000005124f4 : add byte ptr [rax - 0x77], cl ; js 0x51254f ; mov eax, ebx ; ret
0x000000000041c60e : add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rax]
0x0000000000487ec7 : add byte ptr [rax - 0x77], cl ; pop rax ; or byte ptr [rax - 0x7d], cl ; ret
0x0000000000543cde : add byte ptr [rax - 0x77], cl ; pop rbp ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000402443 : add byte ptr [rax - 0x77], cl ; ret
0x0000000000541674 : add byte ptr [rax - 0x77], cl ; ret 0x13e9
0x0000000000541564 : add byte ptr [rax - 0x77], cl ; ret 0x23e9
0x000000000053d264 : add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000463c5c : add byte ptr [rax - 0x77], cl ; ret 0x2be9
0x0000000000541454 : add byte ptr [rax - 0x77], cl ; ret 0x33e9
0x000000000048d18c : add byte ptr [rax - 0x77], cl ; ret 0x4be8
0x0000000000463c3c : add byte ptr [rax - 0x77], cl ; ret 0x4be9
0x000000000042afe7 : add byte ptr [rax - 0x77], cl ; ret 0x50e8
0x000000000043d667 : add byte ptr [rax - 0x77], cl ; ret 0x60e9
0x0000000000513ccf : add byte ptr [rax - 0x77], cl ; ret 0x62c4
0x0000000000463c1c : add byte ptr [rax - 0x77], cl ; ret 0x6be9
0x000000000043d657 : add byte ptr [rax - 0x77], cl ; ret 0x70e9
0x0000000000551c96 : add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000047e705 : add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000471993 : add byte ptr [rax - 0x77], cl ; ret 0x8844
0x00000000004d15e6 : add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000463bfc : add byte ptr [rax - 0x77], cl ; ret 0x8be9
0x0000000000565203 : add byte ptr [rax - 0x77], cl ; ret 0x94e8
0x000000000043d627 : add byte ptr [rax - 0x77], cl ; ret 0xa0e9
0x0000000000463bdc : add byte ptr [rax - 0x77], cl ; ret 0xabe9
0x0000000000463c7c : add byte ptr [rax - 0x77], cl ; ret 0xbe9
0x00000000004e682c : add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000541ac4 : add byte ptr [rax - 0x77], cl ; ret 0xc3e9
0x0000000000463bbc : add byte ptr [rax - 0x77], cl ; ret 0xcbe9
0x00000000005419b4 : add byte ptr [rax - 0x77], cl ; ret 0xd3e9
0x00000000005652c3 : add byte ptr [rax - 0x77], cl ; ret 0xd4e8
0x000000000054d70c : add byte ptr [rax - 0x77], cl ; ret 0xdbe9
0x000000000042e861 : add byte ptr [rax - 0x77], cl ; ret 0xe1ff
0x0000000000440a7e : add byte ptr [rax - 0x77], cl ; ret 0xe9e8
0x0000000000463c9c : add byte ptr [rax - 0x77], cl ; ret 0xebe9
0x00000000004e9784 : add byte ptr [rax - 0x77], cl ; ret 0xf3e8
0x0000000000541194 : add byte ptr [rax - 0x77], cl ; ret 0xf3e9
0x000000000045c0dd : add byte ptr [rax - 0x77], cl ; ret 0xff48
0x00000000004e1b63 : add byte ptr [rax - 0x77], cl ; ror byte ptr [rax + 0xf], 1 ; scasd eax, dword ptr [rdi] ; ret
0x000000000042831a : add byte ptr [rax - 0x77], cl ; ror dword ptr [rax + 0x39], 1 ; ret 0x874
0x000000000049bde1 : add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], -0x38 ; pop rdx ; ret
0x000000000048f2b8 : add byte ptr [rax - 0x77], cl ; sbb eax, 0x39c600 ; pop rbx ; ret
0x000000000042cde6 : add byte ptr [rax - 0x77], cl ; xchg eax, edi ; call 0xffffffffc342cdf9
0x0000000000500896 : add byte ptr [rax - 0x77], cl ; xchg eax, edi ; enter 0, 0 ; ret
0x000000000042d365 : add byte ptr [rax - 0x77], cl ; xchg eax, edi ; js 0x42d374 ; add byte ptr [rax], al ; ret
0x0000000000500856 : add byte ptr [rax - 0x77], cl ; xchg eax, edi ; mov byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004261d6 : add byte ptr [rax - 0x77], cl ; xchg eax, edi ; mov byte ptr [rdx], al ; add byte ptr [rax], al ; ret
0x000000000042c11d : add byte ptr [rax - 0x77], cl ; xchg eax, edi ; mov eax, 0x5a000001 ; ret
0x000000000042cd16 : add byte ptr [rax - 0x77], cl ; xchg eax, edi ; rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; ret
0x000000000042c346 : add byte ptr [rax - 0x77], cl ; xchg eax, edi ; sub byte ptr [rcx], al ; add byte ptr [rax], al ; pop rdx ; ret
0x0000000000500876 : add byte ptr [rax - 0x77], cl ; xchg eax, edi ; test al, 0 ; add byte ptr [rax], al ; ret
0x00000000004cb2b4 : add byte ptr [rax - 0x77], r9b ; fucompi st(0) ; ret 0x760
0x0000000000612497 : add byte ptr [rax - 0x78], cl ; call qword ptr [rdx]
0x00000000004f358f : add byte ptr [rax - 0x7b], cl ; leave ; je 0x4f359d ; jmp rcx
0x00000000004cb1cb : add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp - 0x11] ; pop rax ; ret
0x000000000043cfa3 : add byte ptr [rax - 0x7b], cl ; push qword ptr [rbx - 0x18] ; ret 0x2de
0x000000000042a8c2 : add byte ptr [rax - 0x7b], cl ; push qword ptr [rsp + rbx - 0x18] ; ret
0x00000000004e2343 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], cl ; ret 0x8941
0x000000000050455a : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rax - 0x77], 5 ; ret
0x0000000000423da6 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], -0x7c ; ret 0
0x0000000000551574 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8148
0x0000000000418121 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf039
0x0000000000479ff4 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rax + rdi + 0x48], -1 ; ret
0x00000000004e6426 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rdx + rax - 1], -0x20 ; ret
0x00000000004ade06 : add byte ptr [rax - 0x7bf0ffc5], al ; ret
0x00000000005e5553 : add byte ptr [rax - 0x7c], dh ; in al, dx ; jmp rax
0x000000000040a099 : add byte ptr [rax - 0x7d], cl ; js 0x40a0df ; add dword ptr [rdi + rdx - 1], esi ; ret
0x0000000000406ea2 : add byte ptr [rax - 0x7d], cl ; ret
0x000000000043c0ed : add byte ptr [rax - 0x7d], cl ; ret 0x3108
0x0000000000439ff7 : add byte ptr [rax - 0x7d], cl ; ret 0x310d
0x00000000004c1a27 : add byte ptr [rax - 0x7d], cl ; ret 0x3908
0x000000000043bb6b : add byte ptr [rax - 0x7d], cl ; ret 0x4508
0x0000000000411ceb : add byte ptr [rax - 0x7d], cl ; ret 0x4820
0x0000000000462ee1 : add byte ptr [rax - 0x7d], cl ; ret 0x48fc
0x00000000005390d9 : add byte ptr [rax - 0x7d], cl ; ret 0x48fd
0x00000000004241d4 : add byte ptr [rax - 0x7d], cl ; ret 0x48fe
0x000000000041fcdc : add byte ptr [rax - 0x7d], cl ; stc ; add cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x4489
0x00000000005e8863 : add byte ptr [rax - 0x7e], ah ; int1 ; jmp rax
0x000000000041aa5d : add byte ptr [rax - 0x7f], cl ; ret
0x000000000041db36 : add byte ptr [rax - 0x7f], cl ; ret 0x1d8
0x0000000000452149 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000504851 : add byte ptr [rax - 0x7f], cl ; ret 0x90
0x000000000041f278 : add byte ptr [rax - 0x7f], cl ; ret 0xa4
0x00000000005ffaaf : add byte ptr [rax - 0x80], ah ; jmp 0x5ffab7
0x0000000000608e07 : add byte ptr [rax - 0x80], bl ; out dx, al ; jmp qword ptr [rdx]
0x00000000005e5ee3 : add byte ptr [rax - 0x80], dl ; in eax, dx ; call qword ptr [rax]
0x000000000047e4a8 : add byte ptr [rax - 0xb7e0fc], cl ; ret
0x00000000005e8e4b : add byte ptr [rax - 0xb], al ; int1 ; jmp qword ptr [rax]
0x00000000005e9bab : add byte ptr [rax - 0xb], dl ; cmc ; call rax
0x00000000005057a0 : add byte ptr [rax - 0xbecfec], cl ; ret
0x00000000005e9aab : add byte ptr [rax - 0xd], dl ; cmc ; call rax
0x00000000005e54eb : add byte ptr [rax - 0xf001397], ah ; ret
0x000000000060374f : add byte ptr [rax - 0xf], ah ; in al, dx ; call rdi
0x00000000005e99ab : add byte ptr [rax - 0xf], dl ; cmc ; call rax
0x000000000046b35c : add byte ptr [rax - 1], bh ; cmova eax, ecx ; ret
0x000000000042c3d3 : add byte ptr [rax - 1], bh ; cmovg eax, ecx ; ret
0x00000000004068c4 : add byte ptr [rax - 1], bh ; pop rbx ; ret
0x000000000042be67 : add byte ptr [rax - 1], bh ; pop rdx ; ret
0x0000000000486bf2 : add byte ptr [rax - 1], bh ; ret
0x000000000041483f : add byte ptr [rax - 1], cl ; ret
0x000000000055b0cf : add byte ptr [rax - 1], cl ; ret 0x3941
0x000000000055459f : add byte ptr [rax - 1], cl ; ret 0x5a8a
0x00000000004358e4 : add byte ptr [rax - 1], cl ; ret 0x8348
0x0000000000407533 : add byte ptr [rax - 1], cl ; ret 0x903b
0x0000000000457287 : add byte ptr [rax - 1], cl ; ret 0xc239
0x000000000043effc : add byte ptr [rax - 1], cl ; ret 0xc583
0x00000000004077f5 : add byte ptr [rax - 1], cl ; ret 0xca39
0x00000000004814ab : add byte ptr [rax - 1], cl ; ret 0xd139
0x000000000047686b : add byte ptr [rax - 2], bh ; pop rbx ; ret
0x0000000000476809 : add byte ptr [rax - 2], bh ; pop rdx ; ret
0x000000000042a484 : add byte ptr [rax - 2], bh ; ret
0x00000000006144ff : add byte ptr [rax - 3], al ; call rax
0x00000000005e9433 : add byte ptr [rax - 6], dl ; call qword ptr [rax]
0x00000000005e176b : add byte ptr [rax - 7], ah ; loop 0x5e1775 ; ret
0x00000000005e6b6b : add byte ptr [rax - 7], dh ; out dx, al ; jmp qword ptr [rax]
0x00000000005e72ab : add byte ptr [rax - 8], dh ; out dx, eax ; call qword ptr [rax]
0x00000000005e9bf3 : add byte ptr [rax - 8], dl ; cmc ; jmp rax
0x000000000046e7d2 : add byte ptr [rax - 9], cl ; fmul dword ptr [rax - 9] ; fisttp dword ptr [rax + 0x21] ; ret
0x0000000000445c50 : add byte ptr [rax - 9], cl ; ret 0xf
0x000000000061470b : add byte ptr [rax*4 + 0x30a00002], al ; hlt ; jmp qword ptr [rbx]
0x000000000061870b : add byte ptr [rax*8 + 0x3200002], al ; cmc ; call qword ptr [rdi]
0x00000000005e8234 : add byte ptr [rax], -0xf ; jmp rax
0x00000000004a241f : add byte ptr [rax], 0 ; add bh, bh ; ret 0x8348
0x000000000051415f : add byte ptr [rax], 0 ; add bl, dh ; ret
0x00000000004324a7 : add byte ptr [rax], 0 ; add byte ptr [rax + 0x57339a], bh ; ret
0x00000000004ca913 : add byte ptr [rax], 0 ; add byte ptr [rax + 1], bh ; ret
0x0000000000463bd9 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xabe9
0x0000000000406e9f : add byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000452146 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000041f275 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x7f], cl ; ret 0xa4
0x000000000043a09d : add byte ptr [rax], 0 ; add byte ptr [rax - 1], cl ; ret
0x000000000041c87f : add byte ptr [rax], 0 ; add byte ptr [rax - 1], cl ; ret 0x903b
0x00000000005605cb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov dword ptr [rdi + 0x28], esi ; ret
0x00000000004b87ab : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov dword ptr [rdi + 0x40], esi ; ret
0x000000000042e74b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov dword ptr [rdi + 0x48], esi ; ret
0x000000000055ae7b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov qword ptr [rdi + 0x28], rsi ; ret
0x000000000054837b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x10] ; ret
0x00000000004ec16b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x20] ; ret
0x00000000004b78fb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 8] ; ret
0x00000000005009cb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, qword ptr [rdi] ; ret
0x000000000048121b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x00000000004cbedb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; movsxd rax, dword ptr [rdi] ; ret
0x000000000048f6ab : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004e182c : add byte ptr [rax], 0 ; add byte ptr [rbp + 1], cl ; ret 0x149
0x000000000042c183 : add byte ptr [rax], 0 ; add byte ptr [rcx + 0x58], al ; jmp rax
0x00000000004a33d2 : add byte ptr [rax], 0 ; add byte ptr [rcx], cl ; ret 0x8944
0x00000000004a1aef : add byte ptr [rax], 0 ; add byte ptr [rcx], cl ; ret 0xd889
0x00000000005eaed3 : add byte ptr [rax], ah ; adc al, -9 ; jmp rax
0x00000000005e7323 : add byte ptr [rax], ah ; adc eax, esi ; jmp qword ptr [rax]
0x00000000005e7423 : add byte ptr [rax], ah ; adc esi, eax ; jmp qword ptr [rax]
0x000000000061870f : add byte ptr [rax], ah ; add esi, ebp ; call qword ptr [rdi]
0x00000000005f501f : add byte ptr [rax], ah ; and esp, edi ; jmp qword ptr [rsi]
0x00000000005e9453 : add byte ptr [rax], ah ; call rax
0x000000000060680f : add byte ptr [rax], ah ; cld ; in eax, dx ; call qword ptr [rcx]
0x00000000005f750f : add byte ptr [rax], ah ; cmp ch, al ; call qword ptr [rsi]
0x000000000060233f : add byte ptr [rax], ah ; cmpsd dword ptr [rsi], dword ptr [rdi] ; in al, dx ; call rcx
0x00000000005ead8b : add byte ptr [rax], ah ; div esi ; call qword ptr [rax]
0x00000000005e8cab : add byte ptr [rax], ah ; fdiv st(1) ; jmp qword ptr [rax]
0x00000000005e691b : add byte ptr [rax], ah ; fucomp st(6) ; call rax
0x00000000006170df : add byte ptr [rax], ah ; in al, -0xc ; call qword ptr [rsi]
0x00000000005e54c3 : add byte ptr [rax], ah ; in al, dx ; jmp qword ptr [rax - 0x3d]
0x00000000005e2e2b : add byte ptr [rax], ah ; je 0x5e2e1a ; jmp rax
0x00000000005e6d43 : add byte ptr [rax], ah ; jl 0x5e6d3a ; jmp qword ptr [rax]
0x00000000005f675f : add byte ptr [rax], ah ; jmp rdi
0x00000000005e9093 : add byte ptr [rax], ah ; jp 0x5e908d ; jmp rax
0x00000000005e5f9b : add byte ptr [rax], ah ; lahf ; in eax, dx ; call rax
0x00000000005e476b : add byte ptr [rax], ah ; loop 0x5e475d ; jmp rax
0x00000000005eb303 : add byte ptr [rax], ah ; mov bh, dh ; call rax
0x00000000005e36f3 : add byte ptr [rax], ah ; mov dl, -0x18 ; jmp rax
0x00000000005e2763 : add byte ptr [rax], ah ; mov dl, -0x1b ; call rax
0x00000000005e329b : add byte ptr [rax], ah ; or ch, al ; jmp rax
0x00000000005e5a03 : add byte ptr [rax], ah ; or ch, ch ; call rax
0x00000000005e9fab : add byte ptr [rax], ah ; or esi, esi ; call rax
0x00000000005f49ff : add byte ptr [rax], ah ; out -0x1a, al ; call qword ptr [rcx]
0x00000000005efdaf : add byte ptr [rax], ah ; out -0x1d, al ; call qword ptr [rsi]
0x00000000005e5c73 : add byte ptr [rax], ah ; pop rsp ; in eax, dx ; jmp qword ptr [rax]
0x0000000000608aaf : add byte ptr [rax], ah ; push -0x12 ; jmp qword ptr [rdi]
0x00000000005e9cdb : add byte ptr [rax], ah ; push rbp ; jmp qword ptr [rax]
0x00000000005e282b : add byte ptr [rax], ah ; ret
0x00000000005f1bbf : add byte ptr [rax], ah ; ret 0xffe4
0x00000000005e2803 : add byte ptr [rax], ah ; ret 0xffe5
0x0000000000609e2f : add byte ptr [rax], ah ; ret 0xffee
0x00000000005e831b : add byte ptr [rax], ah ; sbb dh, cl ; call qword ptr [rax]
0x00000000005e74a3 : add byte ptr [rax], ah ; sbb eax, esi ; jmp rax
0x00000000005eafb3 : add byte ptr [rax], ah ; sub bh, dh ; jmp rax
0x00000000005fc31f : add byte ptr [rax], ah ; sub ebp, edx ; call qword ptr [rcx]
0x00000000006047ef : add byte ptr [rax], ah ; test ch, ch ; call rbx
0x00000000005ec73f : add byte ptr [rax], ah ; xchg ecx, esp ; call qword ptr [rbx]
0x00000000005e8fbb : add byte ptr [rax], ah ; xor edx, esi ; jmp rax
0x000000000060ad1a : add byte ptr [rax], al ; adc al, -0x15 ; add dword ptr [rax], eax ; add bl, bh ; out dx, al ; call qword ptr [rax]
0x000000000061701a : add byte ptr [rax], al ; adc al, -0x52 ; add al, byte ptr [rax] ; loopne 0x61700e ; hlt ; call qword ptr [rsi]
0x000000000061521a : add byte ptr [rax], al ; adc al, -0x70 ; add al, byte ptr [rax] ; mov al, 0x49 ; hlt ; jmp qword ptr [rax]
0x00000000006184fe : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; cld ; ret 2
0x00000000006084ee : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, dx ; ret 1
0x000000000061855e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; pop rsp ; ret
0x000000000061845e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; pop rsp ; ret 2
0x00000000005f854e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; ret
0x00000000005f844e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; ret 0
0x0000000000608446 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; ret 1
0x0000000000618446 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; ret 2
0x000000000061061a : add byte ptr [rax], al ; adc al, 0x44 ; add al, byte ptr [rax] ; add byte ptr [rcx], bl ; call qword ptr [rax]
0x000000000061141a : add byte ptr [rax], al ; adc al, 0x52 ; add al, byte ptr [rax] ; jo 0x61146d ; call qword ptr [rbx]
0x00000000005e148a : add byte ptr [rax], al ; adc byte ptr [rbp - 0x1e], dl ; call qword ptr [rax]
0x00000000005f10ce : add byte ptr [rax], al ; adc byte ptr [rcx - 0x1c], dl ; jmp qword ptr [rcx]
0x00000000005e12da : add byte ptr [rax], al ; adc byte ptr [rcx], -0x1e ; call rax
0x000000000040a0fa : add byte ptr [rax], al ; adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8948
0x00000000005f79de : add byte ptr [rax], al ; adc byte ptr [rdx - 0x18], bh ; call rax
0x00000000005eaea3 : add byte ptr [rax], al ; adc dh, bh ; call qword ptr [rax]
0x00000000005ef4ce : add byte ptr [rax], al ; add ah, -0x1d ; call qword ptr [rbx]
0x00000000005f84e9 : add byte ptr [rax], al ; add ah, ah ; ret 0
0x00000000006184e9 : add byte ptr [rax], al ; add ah, ah ; ret 2
0x00000000005ef3e9 : add byte ptr [rax], al ; add ah, ah ; xor dword ptr [rax], eax ; add byte ptr [rax], dh ; ret
0x0000000000572a05 : add byte ptr [rax], al ; add ah, al ; ret 0x42
0x00000000006184c9 : add byte ptr [rax], al ; add ah, al ; ret 2
0x0000000000618501 : add byte ptr [rax], al ; add ah, bh ; ret 2
0x00000000006085e1 : add byte ptr [rax], al ; add ah, bl ; ret
0x0000000000609ef1 : add byte ptr [rax], al ; add ah, ch ; fadd qword ptr [rcx] ; add byte ptr [rax], ch ; ret
0x00000000005f40f1 : add byte ptr [rax], al ; add ah, ch ; jle 0x5f40ff ; add al, ch ; ret 0xffe6
0x00000000005f85f1 : add byte ptr [rax], al ; add ah, ch ; ret
0x00000000006084f1 : add byte ptr [rax], al ; add ah, ch ; ret 1
0x00000000005df2b5 : add byte ptr [rax], al ; add ah, cl ; ret 0x55
0x00000000005c35dd : add byte ptr [rax], al ; add ah, cl ; ret 0x5c
0x0000000000572a2d : add byte ptr [rax], al ; add ah, dh ; ret 0x42
0x00000000005df2d5 : add byte ptr [rax], al ; add ah, dh ; ret 0x55
0x0000000000609ed9 : add byte ptr [rax], al ; add ah, dl ; fadd qword ptr [rcx] ; add al, dh ; ret 0xffee
0x00000000006185d9 : add byte ptr [rax], al ; add ah, dl ; ret
0x000000000060aa0a : add byte ptr [rax], al ; add al, -0x18 ; add dword ptr [rax], eax ; nop ; hlt ; out dx, al ; call rax
0x000000000061870a : add byte ptr [rax], al ; add al, -0x3b ; add al, byte ptr [rax] ; and byte ptr [rbx], al ; cmc ; call qword ptr [rdi]
0x000000000061860a : add byte ptr [rax], al ; add al, -0x3c ; add al, byte ptr [rax] ; adc byte ptr [rdx], al ; cmc ; jmp qword ptr [rdi]
0x000000000061710a : add byte ptr [rax], al ; add al, -0x51 ; add al, byte ptr [rax] ; xor ah, ah ; hlt ; call qword ptr [rsi]
0x000000000060680a : add byte ptr [rax], al ; add al, -0x5a ; add dword ptr [rax], eax ; and ah, bh ; in eax, dx ; call qword ptr [rcx]
0x00000000005fb70a : add byte ptr [rax], al ; add al, -0xb ; add byte ptr [rax], al ; shl al, -0x17 ; jmp rdx
0x00000000005c6072 : add byte ptr [rax], al ; add al, 0 ; add byte ptr [rax], al ; ret
0x00000000005efe0a : add byte ptr [rax], al ; add al, 0x3c ; add byte ptr [rax], al ; out -0x1d, al ; call rbx
0x00000000005f080a : add byte ptr [rax], al ; add al, 0x46 ; add byte ptr [rax], al ; nop ; or ah, ah ; call qword ptr [rbx]
0x0000000000610f0a : add byte ptr [rax], al ; add al, 0x4d ; add al, byte ptr [rax] ; shr byte ptr [rbx], 1 ; call rdi
0x0000000000611c0a : add byte ptr [rax], al ; add al, 0x5a ; add al, byte ptr [rax] ; adc byte ptr [rax - 0xd], ch ; call qword ptr [rdi]
0x000000000040a124 : add byte ptr [rax], al ; add al, 0xf ; xchg eax, esp ; ret 0x8948
0x00000000005df2c5 : add byte ptr [rax], al ; add al, ah ; ret 0x55
0x00000000005c35bd : add byte ptr [rax], al ; add al, al ; ret 0x5c
0x00000000005c365d : add byte ptr [rax], al ; add al, bh ; ret 0x5c
0x00000000004c9c51 : add byte ptr [rax], al ; add al, byte ptr [rax] ; call rax
0x0000000000610452 : add byte ptr [rax], al ; add al, byte ptr [rax] ; pop rax ; sbb ebx, esi ; call qword ptr [rax]
0x00000000004ef169 : add byte ptr [rax], al ; add al, ch ; call rcx
0x00000000004bb749 : add byte ptr [rax], al ; add al, ch ; out dx, eax ; ret
0x00000000004f8ac1 : add byte ptr [rax], al ; add al, ch ; push rdi ; ret
0x00000000004f0116 : add byte ptr [rax], al ; add al, ch ; push rdx ; ret 0xfffd
0x000000000043fdd5 : add byte ptr [rax], al ; add al, ch ; ret
0x00000000004944a6 : add byte ptr [rax], al ; add al, ch ; ret 0x37e
0x0000000000572a25 : add byte ptr [rax], al ; add al, ch ; ret 0x42
0x00000000004256a6 : add byte ptr [rax], al ; add al, ch ; ret 0xa6c
0x000000000055c936 : add byte ptr [rax], al ; add al, ch ; ret 0xf32a
0x0000000000552ca6 : add byte ptr [rax], al ; add al, ch ; ret 0xf796
0x0000000000546796 : add byte ptr [rax], al ; add al, ch ; ret 0xf9f7
0x00000000004c9876 : add byte ptr [rax], al ; add al, ch ; ret 0xfc56
0x00000000004ff2a6 : add byte ptr [rax], al ; add al, ch ; ret 0xfcd0
0x0000000000460996 : add byte ptr [rax], al ; add al, ch ; ret 6
0x000000000048f0bb : add byte ptr [rax], al ; add al, ch ; sbb eax, 0x39000aab ; ret
0x0000000000500ddb : add byte ptr [rax], al ; add al, ch ; sub eax, 0x89000008 ; ret
0x00000000005100d5 : add byte ptr [rax], al ; add al, ch ; xchg eax, ebx ; ret 0xfffb
0x0000000000485933 : add byte ptr [rax], al ; add al, ch ; xor eax, 0xe900046a ; ret
0x000000000058aed5 : add byte ptr [rax], al ; add al, dh ; ret 0x58
0x000000000056e565 : add byte ptr [rax], al ; add al, dl ; ret 0x5c
0x00000000004cdf58 : add byte ptr [rax], al ; add bh, bh ; push rax ; sub byte ptr [rax - 0x77], cl ; ret
0x000000000041afbd : add byte ptr [rax], al ; add bh, bh ; ret
0x00000000004a2420 : add byte ptr [rax], al ; add bh, bh ; ret 0x8348
0x00000000004ca2d6 : add byte ptr [rax], al ; add bh, bh ; ret 0x9389
0x0000000000572a1d : add byte ptr [rax], al ; add bh, bl ; ret 0x42
0x00000000004b7b4d : add byte ptr [rax], al ; add bh, dh ; salc ; and dword ptr [rdi + 0x2c], esi ; ret
0x00000000005d1c5d : add byte ptr [rax], al ; add bh, dl ; ret
0x0000000000436158 : add byte ptr [rax], al ; add bl, al ; mov eax, 0x11 ; ret
0x000000000043615e : add byte ptr [rax], al ; add bl, al ; mov eax, 0x12 ; ret
0x0000000000436164 : add byte ptr [rax], al ; add bl, al ; mov eax, 0x14 ; ret
0x000000000043616a : add byte ptr [rax], al ; add bl, al ; mov eax, 0x15 ; ret
0x0000000000436170 : add byte ptr [rax], al ; add bl, al ; mov eax, 0x16 ; ret
0x0000000000436176 : add byte ptr [rax], al ; add bl, al ; mov eax, 0x18 ; ret
0x000000000043617c : add byte ptr [rax], al ; add bl, al ; mov eax, 0x19 ; ret
0x000000000043612d : add byte ptr [rax], al ; add bl, al ; mov eax, 0x1a ; ret
0x0000000000510d26 : add byte ptr [rax], al ; add bl, al ; mov eax, 0x35 ; ret
0x00000000004361b2 : add byte ptr [rax], al ; add bl, al ; mov eax, 0xa ; ret
0x00000000004361b8 : add byte ptr [rax], al ; add bl, al ; mov eax, 0xb ; ret
0x00000000004361be : add byte ptr [rax], al ; add bl, al ; mov eax, 0xc ; ret
0x00000000004361c4 : add byte ptr [rax], al ; add bl, al ; mov eax, 0xd ; ret
0x00000000004361ca : add byte ptr [rax], al ; add bl, al ; mov eax, 0xe ; ret
0x0000000000510d3a : add byte ptr [rax], al ; add bl, al ; mov eax, 0xffffffff ; ret
0x0000000000436182 : add byte ptr [rax], al ; add bl, al ; mov eax, 2 ; ret
0x0000000000436188 : add byte ptr [rax], al ; add bl, al ; mov eax, 3 ; ret
0x000000000043618e : add byte ptr [rax], al ; add bl, al ; mov eax, 4 ; ret
0x0000000000436194 : add byte ptr [rax], al ; add bl, al ; mov eax, 5 ; ret
0x000000000043619a : add byte ptr [rax], al ; add bl, al ; mov eax, 6 ; ret
0x00000000004361a0 : add byte ptr [rax], al ; add bl, al ; mov eax, 7 ; ret
0x00000000004361a6 : add byte ptr [rax], al ; add bl, al ; mov eax, 8 ; ret
0x00000000004361ac : add byte ptr [rax], al ; add bl, al ; mov eax, 9 ; ret
0x000000000040dbca : add byte ptr [rax], al ; add bl, al ; nop ; xor eax, eax ; ret
0x0000000000486bc4 : add byte ptr [rax], al ; add bl, al ; ret
0x000000000043614f : add byte ptr [rax], al ; add bl, al ; xor eax, eax ; ret
0x000000000053f63f : add byte ptr [rax], al ; add bl, ch ; adc dh, dh ; ret 0x7406
0x00000000004dd139 : add byte ptr [rax], al ; add bl, ch ; mov ch, 0x5a ; ret
0x000000000054aafd : add byte ptr [rax], al ; add bl, ch ; or cl, byte ptr [rax - 0x7d] ; ret
0x00000000004363ee : add byte ptr [rax], al ; add bl, ch ; outsd dx, dword ptr [rsi] ; xor eax, eax ; pop rbx ; ret
0x000000000054eef8 : add byte ptr [rax], al ; add bl, ch ; ret
0x0000000000554a88 : add byte ptr [rax], al ; add bl, ch ; ret 0x1f0f
0x0000000000471681 : add byte ptr [rax], al ; add bl, ch ; ret 0x3bf
0x000000000054e09a : add byte ptr [rax], al ; add bl, ch ; ret 0x5590
0x0000000000512747 : add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004904dd : add byte ptr [rax], al ; add byte ptr [rax + 0x1000201f], bh ; ret
0x00000000004dac8d : add byte ptr [rax], al ; add byte ptr [rax + 0x100], bh ; ret
0x000000000040ad4d : add byte ptr [rax], al ; add byte ptr [rax + 0x12c], bh ; ret
0x000000000048ed1d : add byte ptr [rax], al ; add byte ptr [rax + 0x29], bh ; ret
0x0000000000465f8b : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000423c99 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x348
0x00000000004e4096 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0xf631
0x0000000000436362 : add byte ptr [rax], al ; add byte ptr [rax + 0x2cb], bh ; pop rbx ; ret
0x00000000004b84f3 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; div dword ptr [rbx + rax + 0x58] ; jmp rcx
0x0000000000430ff0 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000405b4d : add byte ptr [rax], al ; add byte ptr [rax + 0x56a488], bh ; ret
0x0000000000405b5d : add byte ptr [rax], al ; add byte ptr [rax + 0x56a570], bh ; ret
0x000000000040690d : add byte ptr [rax], al ; add byte ptr [rax + 0x56a898], bh ; ret
0x0000000000409e2d : add byte ptr [rax], al ; add byte ptr [rax + 0x56aca0], bh ; ret
0x0000000000409e3d : add byte ptr [rax], al ; add byte ptr [rax + 0x56add8], bh ; ret
0x000000000040bc1d : add byte ptr [rax], al ; add byte ptr [rax + 0x56b158], bh ; ret
0x00000000004125dd : add byte ptr [rax], al ; add byte ptr [rax + 0x56ba10], bh ; ret
0x000000000041b64d : add byte ptr [rax], al ; add byte ptr [rax + 0x56cc38], bh ; ret
0x0000000000432f26 : add byte ptr [rax], al ; add byte ptr [rax + 0x56f1f7], bh ; ret
0x00000000004324a8 : add byte ptr [rax], al ; add byte ptr [rax + 0x57339a], bh ; ret
0x0000000000432496 : add byte ptr [rax], al ; add byte ptr [rax + 0x57362c], bh ; ret
0x0000000000432472 : add byte ptr [rax], al ; add byte ptr [rax + 0x57369b], bh ; ret
0x0000000000432460 : add byte ptr [rax], al ; add byte ptr [rax + 0x5736dc], bh ; ret
0x000000000043244e : add byte ptr [rax], al ; add byte ptr [rax + 0x573725], bh ; ret
0x000000000043243c : add byte ptr [rax], al ; add byte ptr [rax + 0x5737ac], bh ; ret
0x0000000000432e12 : add byte ptr [rax], al ; add byte ptr [rax + 0x573e51], bh ; ret
0x0000000000432dea : add byte ptr [rax], al ; add byte ptr [rax + 0x573f15], bh ; ret
0x0000000000432dd8 : add byte ptr [rax], al ; add byte ptr [rax + 0x573f23], bh ; ret
0x0000000000432dc6 : add byte ptr [rax], al ; add byte ptr [rax + 0x573f31], bh ; ret
0x0000000000432db4 : add byte ptr [rax], al ; add byte ptr [rax + 0x573f3f], bh ; ret
0x0000000000433066 : add byte ptr [rax], al ; add byte ptr [rax + 0x5740e7], bh ; ret
0x000000000043371d : add byte ptr [rax], al ; add byte ptr [rax + 0x574508], bh ; ret
0x000000000043c4dd : add byte ptr [rax], al ; add byte ptr [rax + 0x575028], bh ; ret
0x000000000043c90d : add byte ptr [rax], al ; add byte ptr [rax + 0x575358], bh ; ret
0x000000000046e57d : add byte ptr [rax], al ; add byte ptr [rax + 0x57aa18], bh ; ret
0x000000000046e58d : add byte ptr [rax], al ; add byte ptr [rax + 0x57aa30], bh ; ret
0x000000000046e59d : add byte ptr [rax], al ; add byte ptr [rax + 0x57aa48], bh ; ret
0x000000000046e5ad : add byte ptr [rax], al ; add byte ptr [rax + 0x57aa60], bh ; ret
0x000000000049f9dd : add byte ptr [rax], al ; add byte ptr [rax + 0x5870f8], bh ; ret
0x000000000049f9ed : add byte ptr [rax], al ; add byte ptr [rax + 0x587150], bh ; ret
0x000000000049f9fd : add byte ptr [rax], al ; add byte ptr [rax + 0x5871a8], bh ; ret
0x00000000004a51fd : add byte ptr [rax], al ; add byte ptr [rax + 0x587478], bh ; ret
0x00000000004a520d : add byte ptr [rax], al ; add byte ptr [rax + 0x5874d0], bh ; ret
0x00000000004a521d : add byte ptr [rax], al ; add byte ptr [rax + 0x587528], bh ; ret
0x00000000004a558d : add byte ptr [rax], al ; add byte ptr [rax + 0x5875d8], bh ; ret
0x00000000004a559d : add byte ptr [rax], al ; add byte ptr [rax + 0x587630], bh ; ret
0x00000000004a55ad : add byte ptr [rax], al ; add byte ptr [rax + 0x587688], bh ; ret
0x00000000004a55bd : add byte ptr [rax], al ; add byte ptr [rax + 0x5876e0], bh ; ret
0x00000000004a55cd : add byte ptr [rax], al ; add byte ptr [rax + 0x587738], bh ; ret
0x00000000004a55dd : add byte ptr [rax], al ; add byte ptr [rax + 0x587790], bh ; ret
0x00000000004a55ed : add byte ptr [rax], al ; add byte ptr [rax + 0x5877e8], bh ; ret
0x00000000004a55fd : add byte ptr [rax], al ; add byte ptr [rax + 0x587840], bh ; ret
0x00000000004a560d : add byte ptr [rax], al ; add byte ptr [rax + 0x587898], bh ; ret
0x00000000004a561d : add byte ptr [rax], al ; add byte ptr [rax + 0x5878f0], bh ; ret
0x00000000004a562d : add byte ptr [rax], al ; add byte ptr [rax + 0x587948], bh ; ret
0x00000000004a563d : add byte ptr [rax], al ; add byte ptr [rax + 0x5879a0], bh ; ret
0x00000000004a564d : add byte ptr [rax], al ; add byte ptr [rax + 0x5879f8], bh ; ret
0x00000000004a565d : add byte ptr [rax], al ; add byte ptr [rax + 0x587a50], bh ; ret
0x00000000004a566d : add byte ptr [rax], al ; add byte ptr [rax + 0x587aa8], bh ; ret
0x00000000004a567d : add byte ptr [rax], al ; add byte ptr [rax + 0x587b00], bh ; ret
0x00000000004a568d : add byte ptr [rax], al ; add byte ptr [rax + 0x587b58], bh ; ret
0x00000000004a59cd : add byte ptr [rax], al ; add byte ptr [rax + 0x587c18], bh ; ret
0x00000000004a59dd : add byte ptr [rax], al ; add byte ptr [rax + 0x587c70], bh ; ret
0x00000000004a59ed : add byte ptr [rax], al ; add byte ptr [rax + 0x587cc8], bh ; ret
0x00000000004a96fd : add byte ptr [rax], al ; add byte ptr [rax + 0x588468], bh ; ret
0x00000000004a970d : add byte ptr [rax], al ; add byte ptr [rax + 0x5884c0], bh ; ret
0x00000000004a971d : add byte ptr [rax], al ; add byte ptr [rax + 0x588518], bh ; ret
0x00000000004a972d : add byte ptr [rax], al ; add byte ptr [rax + 0x588570], bh ; ret
0x00000000004a973d : add byte ptr [rax], al ; add byte ptr [rax + 0x5885c8], bh ; ret
0x00000000004a9e1d : add byte ptr [rax], al ; add byte ptr [rax + 0x588678], bh ; ret
0x00000000004a9e2d : add byte ptr [rax], al ; add byte ptr [rax + 0x5886d0], bh ; ret
0x00000000004a9e3d : add byte ptr [rax], al ; add byte ptr [rax + 0x588728], bh ; ret
0x00000000004a9e4d : add byte ptr [rax], al ; add byte ptr [rax + 0x588780], bh ; ret
0x00000000004a9e5d : add byte ptr [rax], al ; add byte ptr [rax + 0x5887d8], bh ; ret
0x00000000004a9e6d : add byte ptr [rax], al ; add byte ptr [rax + 0x588830], bh ; ret
0x00000000004a9e7d : add byte ptr [rax], al ; add byte ptr [rax + 0x588888], bh ; ret
0x00000000004a9e8d : add byte ptr [rax], al ; add byte ptr [rax + 0x5888e0], bh ; ret
0x00000000004a9e9d : add byte ptr [rax], al ; add byte ptr [rax + 0x588938], bh ; ret
0x00000000004a9ecd : add byte ptr [rax], al ; add byte ptr [rax + 0x588990], bh ; ret
0x00000000004aafcd : add byte ptr [rax], al ; add byte ptr [rax + 0x589068], bh ; ret
0x00000000004aafdd : add byte ptr [rax], al ; add byte ptr [rax + 0x5890c0], bh ; ret
0x00000000004aafed : add byte ptr [rax], al ; add byte ptr [rax + 0x589118], bh ; ret
0x00000000004abc0d : add byte ptr [rax], al ; add byte ptr [rax + 0x589378], bh ; ret
0x00000000004abc1d : add byte ptr [rax], al ; add byte ptr [rax + 0x5893d0], bh ; ret
0x00000000004abc2d : add byte ptr [rax], al ; add byte ptr [rax + 0x589428], bh ; ret
0x00000000004abc3d : add byte ptr [rax], al ; add byte ptr [rax + 0x589480], bh ; ret
0x00000000004abc4d : add byte ptr [rax], al ; add byte ptr [rax + 0x5894d8], bh ; ret
0x00000000004ac1dd : add byte ptr [rax], al ; add byte ptr [rax + 0x589548], bh ; ret
0x00000000004ac1ed : add byte ptr [rax], al ; add byte ptr [rax + 0x5895a0], bh ; ret
0x00000000004ac98d : add byte ptr [rax], al ; add byte ptr [rax + 0x5895f8], bh ; ret
0x00000000004ac99d : add byte ptr [rax], al ; add byte ptr [rax + 0x589650], bh ; ret
0x00000000004ac9ad : add byte ptr [rax], al ; add byte ptr [rax + 0x5896a8], bh ; ret
0x00000000004ac9bd : add byte ptr [rax], al ; add byte ptr [rax + 0x589700], bh ; ret
0x00000000004bd35d : add byte ptr [rax], al ; add byte ptr [rax + 0x590f68], bh ; ret
0x00000000004bd81d : add byte ptr [rax], al ; add byte ptr [rax + 0x5910a8], bh ; ret
0x00000000004c0f6d : add byte ptr [rax], al ; add byte ptr [rax + 0x592000], bh ; ret
0x00000000004c388d : add byte ptr [rax], al ; add byte ptr [rax + 0x5b8020], bh ; ret
0x00000000004e341d : add byte ptr [rax], al ; add byte ptr [rax + 0x5bd760], bh ; ret
0x00000000004e34ad : add byte ptr [rax], al ; add byte ptr [rax + 0x5bd8c8], bh ; ret
0x00000000004e34bd : add byte ptr [rax], al ; add byte ptr [rax + 0x5bd940], bh ; ret
0x00000000004e34cd : add byte ptr [rax], al ; add byte ptr [rax + 0x5bd9b8], bh ; ret
0x00000000004e34dd : add byte ptr [rax], al ; add byte ptr [rax + 0x5bda30], bh ; ret
0x000000000055988d : add byte ptr [rax], al ; add byte ptr [rax + 0x5deab5], bh ; ret
0x000000000055989d : add byte ptr [rax], al ; add byte ptr [rax + 0x5deac4], bh ; ret
0x00000000005598ad : add byte ptr [rax], al ; add byte ptr [rax + 0x5dead9], bh ; ret
0x00000000005598bd : add byte ptr [rax], al ; add byte ptr [rax + 0x5deaf1], bh ; ret
0x00000000005598cd : add byte ptr [rax], al ; add byte ptr [rax + 0x5deafe], bh ; ret
0x0000000000428cc2 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x000000000053ba4d : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x4c6
0x000000000047883d : add byte ptr [rax], al ; add byte ptr [rax + 0x8206f0], bh ; ret
0x0000000000478e7d : add byte ptr [rax], al ; add byte ptr [rax + 0x820740], bh ; ret
0x000000000047acbd : add byte ptr [rax], al ; add byte ptr [rax + 0x820940], bh ; ret
0x000000000047affd : add byte ptr [rax], al ; add byte ptr [rax + 0x820990], bh ; ret
0x000000000048c71d : add byte ptr [rax], al ; add byte ptr [rax + 0x821590], bh ; ret
0x000000000049ce6d : add byte ptr [rax], al ; add byte ptr [rax + 0x822780], bh ; ret
0x00000000004ca9bd : add byte ptr [rax], al ; add byte ptr [rax + 0x82c450], bh ; ret
0x000000000048f4c7 : add byte ptr [rax], al ; add byte ptr [rax + 0x82fc68], bh ; ret
0x000000000041965d : add byte ptr [rax], al ; add byte ptr [rax + 0x8c], bh ; ret
0x000000000045d48d : add byte ptr [rax], al ; add byte ptr [rax + 0xf0a2e3c], al ; xchg eax, esp ; ret 0xb60f
0x0000000000402d9a : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; pop rbx ; ret
0x000000000042c023 : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; pop rdx ; ret
0x000000000040dfb4 : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x000000000040a4c7 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x000000000040d9ad : add byte ptr [rax], al ; add byte ptr [rax + 7], bh ; ret
0x00000000005f85ed : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; in al, dx ; ret
0x0000000000608565 : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; ret
0x00000000005f8595 : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; xchg eax, esp ; ret
0x0000000000608495 : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; xchg eax, esp ; ret 1
0x00000000006185a5 : add byte ptr [rax], al ; add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000060845d : add byte ptr [rax], al ; add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; pop rsp ; ret 1
0x00000000006184fd : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; cld ; ret 2
0x00000000006084ed : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, dx ; ret 1
0x000000000061855d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pop rsp ; ret
0x000000000061845d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pop rsp ; ret 2
0x00000000005f854d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; ret
0x00000000005f844d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; ret 0
0x0000000000608445 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; ret 1
0x0000000000618445 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; ret 2
0x0000000000460f1c : add byte ptr [rax], al ; add byte ptr [rax + rbx + 0x48], dh ; mov edi, ebx ; call rcx
0x00000000004ff108 : add byte ptr [rax], al ; add byte ptr [rax + rdx + 0x48], dh ; mov edi, ebx ; call rcx
0x000000000042c106 : add byte ptr [rax], al ; add byte ptr [rax - 0x68], cl ; pop rdx ; ret
0x00000000004264bd : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cmp al, 0x24 ; call rax
0x000000000048d32d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; pop rsi ; add dword ptr [rax], edi ; ret 0xf48
0x00000000004899dd : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; ret
0x00000000004add38 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7d], cl ; ret 0xb908
0x000000000047198d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add byte ptr [r8 - 0x77], r9b ; ret 0x8844
0x00000000004318cd : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; pop r8 ; ret
0x00000000004318ad : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push r8 ; ret
0x0000000000463b8d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000000004d47bd : add byte ptr [rax], al ; add byte ptr [rax - 0x76], al ; xor ecx, dword ptr [rax - 1] ; ret
0x000000000048121d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000004e1a0a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; enter 0xf48, -0x51 ; ret 0x8548
0x000000000041fa5c : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0x51ff
0x00000000004d095a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rcx + rcx*4 - 0xa] ; call rax
0x000000000040c822 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret
0x000000000041ee63 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 0x118
0x0000000000495443 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 0x50e
0x00000000004f3f0f : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; xchg eax, esi ; ret 0xfffd
0x000000000043189d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x4318fb ; ret
0x00000000004318bd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x431923 ; ret
0x00000000004318dd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x43194b ; ret
0x000000000046108d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x4610a3 ; ret
0x000000000046109d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x4610bb ; ret
0x0000000000463b6d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x463b9b ; ret
0x0000000000463b9d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x463beb ; ret
0x000000000048ea6d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x48ea9b ; ret
0x000000000048ea9d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x48eac3 ; ret
0x000000000048eabd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x48eaf3 ; ret
0x000000000048f2e4 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x48f2fa ; ret
0x00000000004c638d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x4c63ab ; ret
0x00000000004c639d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x4c63c3 ; ret
0x00000000004d030d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x4d037b ; ret
0x00000000004ffd3d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x4ffd83 ; ret
0x000000000050075d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x500793 ; ret
0x00000000005007bd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x5007d3 ; ret
0x000000000050079d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x5007db ; ret
0x00000000005007cd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x5007eb ; ret
0x00000000005007dd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x500803 ; ret
0x00000000005392bd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x5392e3 ; ret
0x000000000053f8bd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x53f8d3 ; ret
0x000000000053f8dd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x53f8fb ; ret
0x000000000053f8fd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x53f923 ; ret
0x000000000053f91d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x53f94b ; ret
0x000000000055ae7d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x55aeb3 ; ret
0x000000000055ae8d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x55af03 ; ret
0x000000000055e36d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x55e38b ; ret
0x000000000055e37d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x55e3a3 ; ret
0x000000000055e38d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x55e3bb ; ret
0x0000000000406c24 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jmp 0x19f580
0x0000000000410ce0 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jmp 0x1a963c
0x0000000000408562 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jmp 0x2a0ec2
0x000000000040f1c8 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jmp 0x2a7b28
0x000000000041c9c5 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jmp 0x3b5325
0x000000000041c60c : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rax]
0x0000000000487ec5 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; pop rax ; or byte ptr [rax - 0x7d], cl ; ret
0x00000000004619bd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000541672 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x13e9
0x0000000000541562 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x23e9
0x000000000053d262 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000541452 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x33e9
0x000000000043d665 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x60e9
0x0000000000513ccd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x62c4
0x000000000043d655 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x70e9
0x0000000000551c94 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x0000000000463bfa : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8be9
0x000000000043d625 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xa0e9
0x0000000000463bda : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xabe9
0x0000000000541ac2 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc3e9
0x0000000000463bba : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xcbe9
0x00000000005419b2 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xd3e9
0x000000000042e85f : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xe1ff
0x0000000000440a7c : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xe9e8
0x0000000000541192 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xf3e9
0x00000000004e1b61 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ror byte ptr [rax + 0xf], 1 ; scasd eax, dword ptr [rdi] ; ret
0x0000000000428318 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ror dword ptr [rax + 0x39], 1 ; ret 0x874
0x00000000004f358d : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; leave ; je 0x4f359f ; jmp rcx
0x000000000042a8c0 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; push qword ptr [rsp + rbx - 0x18] ; ret
0x000000000041811f : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf039
0x0000000000406ea0 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000050df42 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4820
0x00000000004241d2 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x48fe
0x000000000041fcda : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; stc ; add cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x4489
0x00000000004a7ecd : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret
0x000000000041db34 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x1d8
0x0000000000452147 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000050484f : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x90
0x000000000041f276 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0xa4
0x0000000000418d93 : add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret
0x000000000055b0cd : add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0x3941
0x000000000055459d : add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0x5a8a
0x000000000047dcf1 : add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0x8348
0x0000000000407531 : add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0x903b
0x0000000000539549 : add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0xca39
0x00000000004814a9 : add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0xd139
0x00000000006184fc : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; cld ; ret 2
0x00000000006084ec : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, dx ; ret 1
0x000000000061855c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; pop rsp ; ret
0x000000000061845c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; pop rsp ; ret 2
0x00000000005f854c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; ret
0x00000000005f844c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; ret 0
0x0000000000608444 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; ret 1
0x0000000000618444 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; ret 2
0x0000000000572a03 : add byte ptr [rax], al ; add byte ptr [rax], al ; add ah, al ; ret 0x42
0x00000000005df2b3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add ah, cl ; ret 0x55
0x00000000005c35db : add byte ptr [rax], al ; add byte ptr [rax], al ; add ah, cl ; ret 0x5c
0x0000000000572a2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add ah, dh ; ret 0x42
0x00000000005df2d3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add ah, dh ; ret 0x55
0x00000000005df2c3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ah ; ret 0x55
0x00000000005c35bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, al ; ret 0x5c
0x00000000005c365b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bh ; ret 0x5c
0x0000000000572a23 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret 0x42
0x000000000058aed3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; ret 0x58
0x000000000056e563 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dl ; ret 0x5c
0x000000000041afbb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bh ; ret
0x0000000000572a1b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bl ; ret 0x42
0x00000000005d1c5b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, dl ; ret
0x000000000056934b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004647af : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x000000000053ba4b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x4c6
0x00000000004899db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; ret
0x00000000004318cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; pop r8 ; ret
0x00000000004318ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push r8 ; ret
0x0000000000463b8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x000000000043189b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x4318fd ; ret
0x00000000004318bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x431925 ; ret
0x00000000004318db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x43194d ; ret
0x000000000046108b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x4610a5 ; ret
0x000000000046109b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x4610bd ; ret
0x0000000000463b6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x463b9d ; ret
0x0000000000463b9b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x463bed ; ret
0x000000000048ea6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x48ea9d ; ret
0x000000000048ea9b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x48eac5 ; ret
0x000000000048eabb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x48eaf5 ; ret
0x00000000004c638b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x4c63ad ; ret
0x00000000004c639b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x4c63c5 ; ret
0x00000000004d030b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x4d037d ; ret
0x00000000004ffd3b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x4ffd85 ; ret
0x000000000050075b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x500795 ; ret
0x00000000005007bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x5007d5 ; ret
0x000000000050079b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x5007dd ; ret
0x00000000005007cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x5007ed ; ret
0x00000000005007db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x500805 ; ret
0x000000000053f8bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x53f8d5 ; ret
0x000000000053f8db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x53f8fd ; ret
0x000000000053f8fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x53f925 ; ret
0x000000000053f91b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x53f94d ; ret
0x000000000055ae8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x55af05 ; ret
0x000000000055e36b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x55e38d ; ret
0x000000000055e37b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x55e3a5 ; ret
0x000000000055e38b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x55e3bd ; ret
0x00000000004619bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004498bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000041db32 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x1d8
0x000000000049eb0b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret
0x000000000055b0cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0x3941
0x000000000055459b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0x5a8a
0x00000000005c35d9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add ah, cl ; ret 0x5c
0x000000000056e561 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dl ; ret 0x5c
0x00000000004647ad : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x00000000005c5b80 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rsi
0x00000000005c5770 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x00000000005c37e0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x00000000005c7700 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; jmp rdx
0x00000000005c3510 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; outsb dx, byte ptr [rsi] ; ret 0x5c
0x00000000005c34c0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rax ; ret 0x5c
0x00000000005d1c48 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rcx ; ret
0x00000000005c3740 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; push rcx ; ret
0x00000000005c3498 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; push rdx ; ret 0x5c
0x000000000056e4b0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000449317 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000589559 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4a
0x00000000005c66c0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x56ed
0x00000000005c4488 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x5cca
0x00000000005c5108 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x5cd1
0x00000000005c8100 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x5ce7
0x00000000005c9708 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x5cf1
0x00000000005cb558 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x5d04
0x00000000005dc4f0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x5dc8
0x0000000000400528 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x00000000004d6717 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 7
0x00000000005c3588 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; stosb byte ptr [rdi], al ; ret 0x5c
0x00000000005c3808 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; stosd dword ptr [rdi], eax ; ret
0x00000000005c3560 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xchg eax, esi ; ret 0x5c
0x00000000005c36c9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], ah ; ret
0x00000000005c36f1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], dh ; ret
0x00000000005c3421 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], al ; ret 0x5c
0x00000000005c36a1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdx], al ; ret
0x00000000005dbce1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdx], al ; ret 0x5d
0x00000000005dbc29 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdx], bl ; ret 0x5d
0x00000000005c3651 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi], al ; ret
0x00000000005d87b9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add ch, ah ; ret 0x53
0x00000000005c3859 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dl, bl ; ret
0x00000000005c5b82 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rsi
0x00000000005c5772 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x00000000005c37e2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x0000000000414320 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x41437d
0x00000000005c7702 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; jmp rdx
0x00000000005c3512 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; outsb dx, byte ptr [rsi] ; ret 0x5c
0x00000000005c34c2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rax ; ret 0x5c
0x0000000000405da1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000005d1c4a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rcx ; ret
0x00000000004ce9ef : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rdx ; ret
0x00000000005c3742 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; push rcx ; ret
0x00000000005c349a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; push rdx ; ret 0x5c
0x00000000004ce995 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000449319 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000058955b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4a
0x00000000005df20b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x55
0x00000000005c66c2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x56ed
0x0000000000580452 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x5810
0x00000000005c448a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x5cca
0x00000000005c510a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x5cd1
0x00000000005c8102 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x5ce7
0x00000000005c970a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x5cf1
0x00000000005cb55a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x5d04
0x00000000005d43ba : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x5d45
0x00000000005dc4f2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x5dc8
0x00000000004d6732 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x000000000040052a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x00000000004d6719 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 7
0x00000000005c358a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; stosb byte ptr [rdi], al ; ret 0x5c
0x00000000005c380a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; stosd dword ptr [rdi], eax ; ret
0x00000000005c3562 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xchg eax, esi ; ret 0x5c
0x0000000000572a73 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bl ; ret
0x00000000005df223 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bl ; ret 0x55
0x0000000000572a83 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ch ; ret
0x00000000005df2e3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], cl ; ret
0x00000000005df303 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; ret
0x0000000000589563 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; ret 0x4a
0x00000000005c36ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; ret
0x000000000041b4f0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000043a26b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0x3d], bl ; pop rbx ; ret
0x0000000000468a1b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0x2941
0x00000000005c36cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], ah ; ret
0x000000000058c902 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], al ; add byte ptr [rcx], ah ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xeec8
0x00000000005c36fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0x00000000005c36d3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret
0x000000000046106b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], cl ; ja 0x46109b ; ret
0x00000000004b7b3b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], cl ; ja 0x4b7b77 ; ret
0x0000000000572a6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], cl ; ret
0x0000000000572a8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], dh ; ret
0x000000000045261b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x57], al ; ret 0xf66
0x00000000005df213 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], al ; ret 0x55
0x00000000005c3423 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], al ; ret 0x5c
0x000000000058d04c : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; jmp rcx
0x0000000000572ab3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], dh ; ret
0x0000000000572a7b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdx], ah ; ret
0x00000000005df22b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdx], ah ; ret 0x55
0x00000000005c36a3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdx], al ; ret
0x00000000005dbce3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdx], al ; ret 0x5d
0x00000000005df30b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdx], bh ; ret
0x00000000005dbc2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdx], bl ; ret 0x5d
0x00000000005729a3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdx], cl ; ret 0x42
0x00000000005df2eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdx], dl ; ret
0x00000000004f1e69 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; ret
0x00000000005df2fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi], ah ; ret
0x00000000005c3653 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi], al ; ret
0x00000000005df21b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi], cl ; ret 0x55
0x00000000005df23b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi], dh ; ret 0x55
0x00000000005c3863 : add byte ptr [rax], al ; add byte ptr [rax], al ; add ch, ah ; ret
0x00000000005d87bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add ch, ah ; ret 0x53
0x0000000000572a0b : add byte ptr [rax], al ; add byte ptr [rax], al ; add ch, cl ; ret 0x42
0x00000000005c35e3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add ch, dl ; ret 0x5c
0x00000000005df383 : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, al ; ret
0x00000000005df2db : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, bh ; ret 0x55
0x00000000005c360b : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, bl ; ret 0x5c
0x000000000048c9fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret
0x0000000000572a13 : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dl ; ret 0x42
0x00000000005df2bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dl ; ret 0x55
0x00000000005c385b : add byte ptr [rax], al ; add byte ptr [rax], al ; add dl, bl ; ret
0x00000000005df2cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add dl, ch ; ret 0x55
0x00000000005c3633 : add byte ptr [rax], al ; add byte ptr [rax], al ; add dl, ch ; ret 0x5c
0x0000000000425cf6 : add byte ptr [rax], al ; add byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000046105c : add byte ptr [rax], al ; add byte ptr [rax], al ; and esi, dword ptr [rdi + 0x20] ; mov eax, esi ; ret
0x00000000005c5b84 : add byte ptr [rax], al ; add byte ptr [rax], al ; call rsi
0x00000000005c5774 : add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x00000000005c365c : add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; ret 0x5c
0x00000000005c37e4 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x0000000000572a2c : add byte ptr [rax], al ; add byte ptr [rax], al ; hlt ; ret 0x42
0x00000000005df2d4 : add byte ptr [rax], al ; add byte ptr [rax], al ; hlt ; ret 0x55
0x00000000005df334 : add byte ptr [rax], al ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret
0x0000000000572a0c : add byte ptr [rax], al ; add byte ptr [rax], al ; int 0xc2
0x0000000000414322 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x41437b
0x00000000005c7704 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp rdx
0x0000000000463b7c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0x28] ; ret
0x00000000004899dc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0x48] ; ret
0x00000000004d67ba : add byte ptr [rax], al ; add byte ptr [rax], al ; loopne 0x4d677d ; add byte ptr [rax], al ; ret 0x8401
0x0000000000404772 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov al, byte ptr [rdi] ; mov byte ptr [rsi], al ; ret
0x00000000004b79bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi + 0x20], esi ; ret
0x00000000005605cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi + 0x28], esi ; ret
0x000000000042e57c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi + 0x40], esi ; ret
0x000000000042e59c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi + 0x44], esi ; ret
0x000000000042e74c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi + 0x48], esi ; ret
0x0000000000456afc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], esi ; ret
0x00000000004dac8c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x100 ; ret
0x00000000004904dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x1000201f ; ret
0x000000000040ad4c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x12c ; ret
0x000000000048ed1c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x29 ; ret
0x0000000000405b4c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x56a488 ; ret
0x0000000000405b5c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x56a570 ; ret
0x000000000040690c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x56a898 ; ret
0x0000000000409e2c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x56aca0 ; ret
0x0000000000409e3c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x56add8 ; ret
0x000000000040bc1c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x56b158 ; ret
0x00000000004125dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x56ba10 ; ret
0x000000000041b64c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x56cc38 ; ret
0x000000000043371c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x574508 ; ret
0x000000000043c4dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x575028 ; ret
0x000000000043c90c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x575358 ; ret
0x000000000046e57c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x57aa18 ; ret
0x000000000046e58c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x57aa30 ; ret
0x000000000046e59c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x57aa48 ; ret
0x000000000046e5ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x57aa60 ; ret
0x000000000049f9dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x5870f8 ; ret
0x000000000049f9ec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x587150 ; ret
0x000000000049f9fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x5871a8 ; ret
0x00000000004a51fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x587478 ; ret
0x00000000004a520c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x5874d0 ; ret
0x00000000004a521c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x587528 ; ret
0x00000000004a558c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x5875d8 ; ret
0x00000000004a559c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x587630 ; ret
0x00000000004a55ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x587688 ; ret
0x00000000004a55bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x5876e0 ; ret
0x00000000004a55cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x587738 ; ret
0x00000000004a55dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x587790 ; ret
0x00000000004a55ec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x5877e8 ; ret
0x00000000004a55fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x587840 ; ret
0x00000000004a560c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x587898 ; ret
0x00000000004a561c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x5878f0 ; ret
0x00000000004a562c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x587948 ; ret
0x00000000004a563c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x5879a0 ; ret
0x00000000004a564c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x5879f8 ; ret
0x00000000004a565c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x587a50 ; ret
0x00000000004a566c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x587aa8 ; ret
0x00000000004a567c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x587b00 ; ret
0x00000000004a568c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x587b58 ; ret
0x00000000004a59cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x587c18 ; ret
0x00000000004a59dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x587c70 ; ret
0x00000000004a59ec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x587cc8 ; ret
0x00000000004a96fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x588468 ; ret
0x00000000004a970c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x5884c0 ; ret
0x00000000004a971c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x588518 ; ret
0x00000000004a972c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x588570 ; ret
0x00000000004a973c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x5885c8 ; ret
0x00000000004a9e1c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x588678 ; ret
0x00000000004a9e2c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x5886d0 ; ret
0x00000000004a9e3c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x588728 ; ret
0x00000000004a9e4c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x588780 ; ret
0x00000000004a9e5c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x5887d8 ; ret
0x00000000004a9e6c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x588830 ; ret
0x00000000004a9e7c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x588888 ; ret
0x00000000004a9e8c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x5888e0 ; ret
0x00000000004a9e9c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x588938 ; ret
0x00000000004a9ecc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x588990 ; ret
0x00000000004aafcc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x589068 ; ret
0x00000000004aafdc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x5890c0 ; ret
0x00000000004aafec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x589118 ; ret
0x00000000004abc0c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x589378 ; ret
0x00000000004abc1c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x5893d0 ; ret
0x00000000004abc2c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x589428 ; ret
0x00000000004abc3c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x589480 ; ret
0x00000000004abc4c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x5894d8 ; ret
0x00000000004ac1dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x589548 ; ret
0x00000000004ac1ec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x5895a0 ; ret
0x00000000004ac98c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x5895f8 ; ret
0x00000000004ac99c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x589650 ; ret
0x00000000004ac9ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x5896a8 ; ret
0x00000000004ac9bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x589700 ; ret
0x00000000004bd35c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x590f68 ; ret
0x00000000004bd81c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x5910a8 ; ret
0x00000000004c0f6c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x592000 ; ret
0x00000000004c388c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x5b8020 ; ret
0x00000000004e341c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x5bd760 ; ret
0x00000000004e34ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x5bd8c8 ; ret
0x00000000004e34bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x5bd940 ; ret
0x00000000004e34cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x5bd9b8 ; ret
0x00000000004e34dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x5bda30 ; ret
0x000000000055988c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x5deab5 ; ret
0x000000000055989c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x5deac4 ; ret
0x00000000005598ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x5dead9 ; ret
0x00000000005598bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x5deaf1 ; ret
0x00000000005598cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x5deafe ; ret
0x000000000047883c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x8206f0 ; ret
0x0000000000478e7c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x820740 ; ret
0x000000000047acbc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x820940 ; ret
0x000000000047affc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x820990 ; ret
0x000000000048c71c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x821590 ; ret
0x000000000049ce6c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x822780 ; ret
0x00000000004ca9bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x82c450 ; ret
0x000000000048f4c6 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x82fc68 ; ret
0x000000000041965c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x8c ; ret
0x0000000000429f3c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000040d9ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 7 ; ret
0x00000000004b79ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x20] ; ret
0x0000000000461bac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x24] ; ret
0x000000000056080c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x00000000004b7b2c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x2c] ; ret
0x000000000042eb6c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x38] ; ret
0x000000000042e58c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x40] ; ret
0x000000000042e5ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x44] ; ret
0x000000000042bf8c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x48] ; ret
0x00000000004d035c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x64] ; ret
0x00000000004d033c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x68] ; ret
0x00000000004d031c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0xc] ; ret
0x0000000000456b0c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 4] ; ret
0x00000000004d032c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 8] ; ret
0x000000000042e5bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; ret
0x00000000004cbeec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; sub eax, dword ptr [rsi] ; ret
0x00000000004a6455 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; ret
0x000000000055e97c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, edi ; ret
0x0000000000479a5c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, edx ; ret
0x000000000046109c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi + 0x10], rsi ; ret
0x000000000048ea9c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi + 0x18], rsi ; ret
0x0000000000463b6c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi + 0x20], rsi ; ret
0x000000000048eabc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi + 0x28], rsi ; ret
0x000000000050079c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi + 0x30], rsi ; ret
0x00000000004ffd3c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi + 0x38], rsi ; ret
0x0000000000463b9c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi + 0x40], rsi ; ret
0x000000000043189c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi + 0x50], rsi ; ret
0x00000000004318bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi + 0x58], rsi ; ret
0x00000000004318dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi + 0x60], rsi ; ret
0x000000000055ae8c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi + 0x68], rsi ; ret
0x000000000046108c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi + 8], rsi ; ret
0x00000000004c63bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x000000000042986c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x10] ; ret
0x000000000042b48c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x18] ; ret
0x0000000000463b5c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x20] ; ret
0x00000000004974ec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x28] ; jmp rax
0x0000000000489eec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x28] ; ret
0x00000000005007ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x30] ; ret
0x00000000004ffd4c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x38] ; ret
0x0000000000463b8c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x40] ; ret
0x00000000005410ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x48] ; ret
0x00000000004318ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x50] ; ret
0x00000000004318cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x58] ; ret
0x00000000004318ec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x60] ; ret
0x00000000004ca95c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x00000000004ca96c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x70] ; ret
0x00000000004ca97c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x78] ; ret
0x000000000042dccc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 8] ; ret
0x00000000004610cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi] ; mov eax, dword ptr [rax] ; ret
0x000000000042dcbc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi] ; ret
0x000000000053966f : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x000000000048121c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x00000000005df294 : add byte ptr [rax], al ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x55
0x00000000004cbedc : add byte ptr [rax], al ; add byte ptr [rax], al ; movsxd rax, dword ptr [rdi] ; ret
0x00000000004abbeb : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x00000000005df284 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret 0x55
0x000000000049ce8b : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; xor eax, eax ; ret
0x00000000004c8f48 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax] ; ret
0x000000000049be39 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000004b7b4c : add byte ptr [rax], al ; add byte ptr [rax], al ; not esi ; and dword ptr [rdi + 0x2c], esi ; ret
0x00000000004e91e7 : add byte ptr [rax], al ; add byte ptr [rax], al ; or byte ptr [rax + 0x20], 0xd ; ret
0x000000000046106c : add byte ptr [rax], al ; add byte ptr [rax], al ; or dword ptr [rdi + 0x20], esi ; ret
0x00000000004b7b3c : add byte ptr [rax], al ; add byte ptr [rax], al ; or dword ptr [rdi + 0x2c], esi ; ret
0x00000000005c3514 : add byte ptr [rax], al ; add byte ptr [rax], al ; outsb dx, byte ptr [rsi] ; ret 0x5c
0x00000000004c8f3c : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rax ; ret
0x00000000005c34c4 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rax ; ret 0x5c
0x00000000004b7d6d : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; ret
0x000000000041b3a3 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000405da3 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000005c374c : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rcx ; ret
0x000000000046ab7a : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rdx ; ret
0x00000000005df25c : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rsi ; ret 0x55
0x00000000005729d4 : add byte ptr [rax], al ; add byte ptr [rax], al ; popfq ; ret 0x42
0x0000000000572ac4 : add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; ret
0x00000000005c3744 : add byte ptr [rax], al ; add byte ptr [rax], al ; push rcx ; ret
0x00000000005c349c : add byte ptr [rax], al ; add byte ptr [rax], al ; push rdx ; ret 0x5c
0x00000000005df254 : add byte ptr [rax], al ; add byte ptr [rax], al ; push rsp ; ret 0x55
0x0000000000408131 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000044931b : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000057476c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4361
0x000000000057a79c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x46b9
0x000000000058955d : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4a
0x00000000005d87c4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x53
0x00000000005df20d : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x55
0x00000000005df2ac : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x55c2
0x00000000005c66c4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x56ed
0x0000000000580454 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x5810
0x00000000005c3454 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x5c
0x00000000005c448c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x5cca
0x00000000005c510c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x5cd1
0x00000000005c8104 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x5ce7
0x00000000005c970c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x5cf1
0x00000000005cb55c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x5d04
0x00000000005d43bc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x5d45
0x00000000005d86fc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x5d86
0x00000000005dc4f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x5dc8
0x00000000004d6734 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x000000000040052c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x00000000004d671b : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 7
0x00000000005df364 : add byte ptr [rax], al ; add byte ptr [rax], al ; sahf ; ret
0x0000000000572a14 : add byte ptr [rax], al ; add byte ptr [rax], al ; salc ; ret 0x42
0x00000000005df2bc : add byte ptr [rax], al ; add byte ptr [rax], al ; salc ; ret 0x55
0x00000000005f85ec : add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; in al, dx ; ret
0x0000000000608564 : add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; ret
0x00000000005f8594 : add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; ret
0x0000000000608494 : add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; ret 1
0x00000000005df29c : add byte ptr [rax], al ; add byte ptr [rax], al ; scasb al, byte ptr [rdi] ; ret 0x55
0x00000000005729ec : add byte ptr [rax], al ; add byte ptr [rax], al ; scasd eax, dword ptr [rdi] ; ret 0x42
0x00000000005c358c : add byte ptr [rax], al ; add byte ptr [rax], al ; stosb byte ptr [rdi], al ; ret 0x5c
0x00000000005c380c : add byte ptr [rax], al ; add byte ptr [rax], al ; stosd dword ptr [rdi], eax ; ret
0x00000000006185a4 : add byte ptr [rax], al ; add byte ptr [rax], al ; sub al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000005729cc : add byte ptr [rax], al ; add byte ptr [rax], al ; xchg eax, edi ; ret 0x42
0x00000000005c3564 : add byte ptr [rax], al ; add byte ptr [rax], al ; xchg eax, esi ; ret 0x5c
0x00000000005df35c : add byte ptr [rax], al ; add byte ptr [rax], al ; xchg eax, esp ; ret
0x00000000005d1c5c : add byte ptr [rax], al ; add byte ptr [rax], al ; xlatb ; ret
0x000000000060845c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor al, 0 ; add byte ptr [rax], al ; pop rsp ; ret 1
0x000000000049d284 : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rdx ; ret
0x000000000040dbdc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000572a75 : add byte ptr [rax], al ; add byte ptr [rax], bl ; ret
0x00000000005df225 : add byte ptr [rax], al ; add byte ptr [rax], bl ; ret 0x55
0x0000000000572a85 : add byte ptr [rax], al ; add byte ptr [rax], ch ; ret
0x00000000005df2e5 : add byte ptr [rax], al ; add byte ptr [rax], cl ; ret
0x00000000005df305 : add byte ptr [rax], al ; add byte ptr [rax], dh ; ret
0x0000000000589565 : add byte ptr [rax], al ; add byte ptr [rax], dh ; ret 0x4a
0x00000000005c36ad : add byte ptr [rax], al ; add byte ptr [rax], dl ; ret
0x000000000043f48d : add byte ptr [rax], al ; add byte ptr [rbp + 0x11f7ec0], al ; ret
0x0000000000502f27 : add byte ptr [rax], al ; add byte ptr [rbp + 0x21], cl ; ret
0x0000000000502566 : add byte ptr [rax], al ; add byte ptr [rbp + 0x21], cl ; ret 0x840f
0x000000000051271c : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], cl ; lodsb al, byte ptr [rsi] ; ret
0x00000000004e182d : add byte ptr [rax], al ; add byte ptr [rbp + 1], cl ; ret 0x149
0x0000000000443b30 : add byte ptr [rax], al ; add byte ptr [rbp + 2], dh ; mov eax, ecx ; ret
0x00000000005f0749 : add byte ptr [rax], al ; add byte ptr [rbp + rax*2], al ; add al, dl ; jmp rbx
0x00000000005f0761 : add byte ptr [rax], al ; add byte ptr [rbp + rax*2], bl ; add al, cl ; jmp rbx
0x0000000000609f69 : add byte ptr [rax], al ; add byte ptr [rbp + rbx*8 + 1], ah ; add al, ah ; ret
0x000000000050dfae : add byte ptr [rax], al ; add byte ptr [rbp - 0x76b601a8], cl ; ret 0x2944
0x000000000040396c : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; stc ; call rax
0x0000000000553a98 : add byte ptr [rax], al ; add byte ptr [rbp - 0xec8b40], al ; ret
0x0000000000553b40 : add byte ptr [rax], al ; add byte ptr [rbp - 0xf18b40], al ; ret
0x00000000005f6771 : add byte ptr [rax], al ; add byte ptr [rbp], ch ; add byte ptr [rax], bl ; jmp rdi
0x00000000005f6759 : add byte ptr [rax], al ; add byte ptr [rbp], dl ; add byte ptr [rax], ah ; jmp rdi
0x0000000000426514 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000404ef9 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; ret
0x000000000041b3a4 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x00000000004e2399 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; ret
0x00000000004e64e2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x58902c8], al ; ret 0x3480
0x000000000043b6bd : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000559be7 : add byte ptr [rax], al ; add byte ptr [rbx + rax + 0x41], dh ; jmp rcx
0x000000000043a26d : add byte ptr [rax], al ; add byte ptr [rbx - 0x3d], bl ; pop rbx ; ret
0x00000000004670e8 : add byte ptr [rax], al ; add byte ptr [rbx - 0x73f0e705], al ; ret
0x000000000044083a : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb7013b], al ; ret
0x0000000000434983 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb7ef8e], cl ; ret 0x4414
0x0000000000464600 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cdfdbac], cl ; ret 0x8940
0x00000000004e5f50 : add byte ptr [rax], al ; add byte ptr [rbx - 1], bl ; loopne 0x4e5fb9 ; ret
0x00000000004e6340 : add byte ptr [rax], al ; add byte ptr [rbx - 1], bl ; loopne 0x4e63a9 ; ret
0x00000000005e245a : add byte ptr [rax], al ; add byte ptr [rbx], -0x1b ; call rax
0x000000000046105d : add byte ptr [rax], al ; add byte ptr [rbx], ah ; ja 0x46108b ; mov eax, esi ; ret
0x00000000004e156f : add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; ret
0x00000000004e1379 : add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; ret 0x2941
0x000000000042c184 : add byte ptr [rax], al ; add byte ptr [rcx + 0x58], al ; jmp rax
0x00000000004034d6 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5e415bd8], cl ; pop rbp ; ret
0x000000000045c49a : add byte ptr [rax], al ; add byte ptr [rcx + 0x5e415be8], cl ; pop rbp ; ret
0x000000000051004b : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x34], cl ; and al, 0xffffffffffffffff ; ret
0x000000000043419d : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call 0x4d03f8
0x00000000004084dc : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call qword ptr [rax]
0x000000000040ee34 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call r14
0x00000000004101ad : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x000000000046efad : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; mov rsi, r14 ; call rbx
0x000000000041c65c : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x17], cl ; mov r9, rbp ; call rax
0x00000000004047d0 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x17], cl ; mov r9, rbx ; call rax
0x000000000040bcdc : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call r14
0x000000000040b24c : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call r15
0x000000000048a88e : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x1f], cl ; call rax
0x00000000004e8efa : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; ret
0x0000000000403347 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0xe], al ; mov r9, r15 ; call rax
0x0000000000410787 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0xe], al ; mov r9, rbx ; call rax
0x00000000004048ff : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0xf], cl ; mov r9, rbx ; call rax
0x0000000000461e5c : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x0000000000442be3 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x00000000004aa068 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; mov r8, r14 ; call rax
0x000000000040504b : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call r12
0x0000000000461edc : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call rax
0x000000000055050b : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; mov rsi, r12 ; call rax
0x0000000000567add : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; mov rsi, rbx ; call rax
0x000000000045fb71 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; add al, 0x39 ; ret 0x1b7d
0x000000000050034d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7600ce08], cl ; ret 0x95e9
0x0000000000468a1d : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0x2941
0x000000000047d517 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0x8949
0x000000000040f6ab : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; call qword ptr [rcx]
0x000000000040bda8 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7f], al ; call qword ptr [rax]
0x000000000048503e : add byte ptr [rax], al ; add byte ptr [rcx - 0x7f], al ; call qword ptr [rbx]
0x000000000041df5d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7f], al ; std ; jmp qword ptr [rcx]
0x0000000000514194 : add byte ptr [rax], al ; add byte ptr [rcx - 1], al ; leave ; jne 0x514189 ; ret
0x0000000000445fa9 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 0xfff0
0x00000000005c36cd : add byte ptr [rax], al ; add byte ptr [rcx], ah ; ret
0x000000000040a4c3 : add byte ptr [rax], al ; add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x00000000004cf2d0 : add byte ptr [rax], al ; add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret
0x000000000058c904 : add byte ptr [rax], al ; add byte ptr [rcx], al ; add byte ptr [rcx], ah ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xeec8
0x000000000049a289 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0x000000000048148f : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x167d
0x000000000045f8cf : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret
0x00000000004645d9 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x5489
0x00000000004c1a4e : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8348
0x0000000000471965 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8941
0x000000000040c032 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x894c
0x00000000004e5ad4 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xf631
0x00000000004c1f40 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xff48
0x000000000046106d : add byte ptr [rax], al ; add byte ptr [rcx], cl ; ja 0x461099 ; ret
0x00000000004b7b3d : add byte ptr [rax], al ; add byte ptr [rcx], cl ; ja 0x4b7b75 ; ret
0x0000000000572a6d : add byte ptr [rax], al ; add byte ptr [rcx], cl ; ret
0x00000000004a33d3 : add byte ptr [rax], al ; add byte ptr [rcx], cl ; ret 0x8944
0x00000000004a1af0 : add byte ptr [rax], al ; add byte ptr [rcx], cl ; ret 0xd889
0x000000000055cdc8 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; dec dword ptr [rcx + rcx*4 - 0xa] ; call r15
0x0000000000538ec6 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x77] ; ret 0x13eb
0x00000000004b1b13 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; imul al ; ret
0x00000000004cf81f : add byte ptr [rax], al ; add byte ptr [rcx], dh ; leave ; call rax
0x000000000054cf87 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0x0000000000572a8d : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ret
0x000000000040a5c2 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rbp - 0x77], cl ; int1 ; call rax
0x000000000040b74f : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rbp - 0x77], cl ; stc ; call rax
0x0000000000484ba8 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rcx + rcx*4 - 9], cl ; call rax
0x000000000040526a : add byte ptr [rax], al ; add byte ptr [rcx], dh ; sal byte ptr [rcx], cl ; leave ; call 0x461569
0x000000000047af3e : add byte ptr [rax], al ; add byte ptr [rdi + 2], dh ; sbb eax, eax ; ret
0x000000000045840a : add byte ptr [rax], al ; add byte ptr [rdi + rax - 0x77], dh ; ret
0x000000000045261d : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x57], al ; ret 0xf66
0x000000000040a123 : add byte ptr [rax], al ; add byte ptr [rdi + rcx], al ; xchg eax, esp ; ret 0x8948
0x00000000005f4121 : add byte ptr [rax], al ; add byte ptr [rdi + rdi*2], bl ; add byte ptr [rax], al ; pop rax ; ret
0x00000000005df215 : add byte ptr [rax], al ; add byte ptr [rdi], al ; ret 0x55
0x00000000005c3425 : add byte ptr [rax], al ; add byte ptr [rdi], al ; ret 0x5c
0x000000000058d04e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; jmp rcx
0x000000000054ab1d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x4b ; add dword ptr [rax - 1], ecx ; ret
0x000000000055751c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x6b ; call rbx
0x000000000053ae2f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret
0x000000000046a953 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x589
0x00000000004e4fd1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8941
0x000000000053a5ec : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xaba
0x0000000000572ab5 : add byte ptr [rax], al ; add byte ptr [rdi], dh ; ret
0x0000000000572a7d : add byte ptr [rax], al ; add byte ptr [rdx], ah ; ret
0x00000000005df22d : add byte ptr [rax], al ; add byte ptr [rdx], ah ; ret 0x55
0x00000000005c36a5 : add byte ptr [rax], al ; add byte ptr [rdx], al ; ret
0x00000000005dbce5 : add byte ptr [rax], al ; add byte ptr [rdx], al ; ret 0x5d
0x00000000005df30d : add byte ptr [rax], al ; add byte ptr [rdx], bh ; ret
0x00000000005dbc2d : add byte ptr [rax], al ; add byte ptr [rdx], bl ; ret 0x5d
0x00000000005729a5 : add byte ptr [rax], al ; add byte ptr [rdx], cl ; ret 0x42
0x00000000005df2ed : add byte ptr [rax], al ; add byte ptr [rdx], dl ; ret
0x000000000060c841 : add byte ptr [rax], al ; add byte ptr [rsi + rax], bh ; add al, byte ptr [rax] ; pop rax ; ret
0x00000000004f1e6b : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; ret
0x00000000004700cc : add byte ptr [rax], al ; add byte ptr [rsi - 1], bh ; call rax
0x00000000005df2fd : add byte ptr [rax], al ; add byte ptr [rsi], ah ; ret
0x00000000005c3655 : add byte ptr [rax], al ; add byte ptr [rsi], al ; ret
0x00000000005df21d : add byte ptr [rax], al ; add byte ptr [rsi], cl ; ret 0x55
0x00000000005df23d : add byte ptr [rax], al ; add byte ptr [rsi], dh ; ret 0x55
0x00000000005c3865 : add byte ptr [rax], al ; add ch, ah ; ret
0x00000000005d87bd : add byte ptr [rax], al ; add ch, ah ; ret 0x53
0x0000000000572a0d : add byte ptr [rax], al ; add ch, cl ; ret 0x42
0x00000000005c35e5 : add byte ptr [rax], al ; add ch, dl ; ret 0x5c
0x00000000005f8e16 : add byte ptr [rax], al ; add cl, bpl ; jmp qword ptr [rbx]
0x000000000043994e : add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000494576 : add byte ptr [rax], al ; add cl, ch ; ret 0xfff7
0x00000000004ba27a : add byte ptr [rax], al ; add cl, ch ; ret 0xfff8
0x000000000040c45f : add byte ptr [rax], al ; add cl, ch ; ret 0xfffa
0x000000000041a57c : add byte ptr [rax], al ; add cl, ch ; ret 0xfffe
0x00000000004c4870 : add byte ptr [rax], al ; add cl, ch ; ret 4
0x00000000005df385 : add byte ptr [rax], al ; add dh, al ; ret
0x00000000005df2dd : add byte ptr [rax], al ; add dh, bh ; ret 0x55
0x00000000005c360d : add byte ptr [rax], al ; add dh, bl ; ret 0x5c
0x000000000048c9fd : add byte ptr [rax], al ; add dh, dh ; ret
0x000000000048d350 : add byte ptr [rax], al ; add dh, dh ; ret 0xf20
0x0000000000572a15 : add byte ptr [rax], al ; add dh, dl ; ret 0x42
0x00000000005df2bd : add byte ptr [rax], al ; add dh, dl ; ret 0x55
0x00000000005c385d : add byte ptr [rax], al ; add dl, bl ; ret
0x00000000005df2cd : add byte ptr [rax], al ; add dl, ch ; ret 0x55
0x00000000005c3635 : add byte ptr [rax], al ; add dl, ch ; ret 0x5c
0x0000000000425cf8 : add byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000043a259 : add byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000058d65e : add byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000005caafa : add byte ptr [rax], al ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; jmp qword ptr [rcx]
0x000000000040ad6b : add byte ptr [rax], al ; add eax, ebx ; pop rbx ; ret
0x0000000000604352 : add byte ptr [rax], al ; add qword ptr [rcx], -0x128c5800 ; call qword ptr [rsi]
0x0000000000611152 : add byte ptr [rax], al ; add r8b, byte ptr [r8] ; clc ; xor bl, dh ; call qword ptr [rax]
0x000000000061064a : add byte ptr [rax], al ; add r8b, byte ptr [rax] ; add byte ptr [rcx], bl ; call qword ptr [rsi]
0x000000000061076a : add byte ptr [rax], al ; add r8b, byte ptr fs:[r8] ; rcr byte ptr [rax] ; call qword ptr [rax]
0x00000000004e6844 : add byte ptr [rax], al ; add rax, rdx ; pop rdx ; ret
0x00000000004e6e61 : add byte ptr [rax], al ; add rax, rdx ; ret
0x00000000004046c3 : add byte ptr [rax], al ; add rsi, 0xc ; mov rax, rsi ; ret
0x000000000040db37 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop r14 ; ret
0x000000000040def7 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000456b52 : add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000004a10e2 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x000000000055be1f : add byte ptr [rax], al ; add rsp, 0x28 ; pop rbx ; pop r14 ; ret
0x000000000053cc64 : add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x000000000045524b : add byte ptr [rax], al ; add rsp, 0x38 ; pop rbx ; pop r14 ; ret
0x0000000000459f7d : add byte ptr [rax], al ; add rsp, 0xc8 ; ret
0x00000000004025f0 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop r14 ; ret
0x00000000004cb950 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000005ee32a : add byte ptr [rax], al ; and al, 0x21 ; add byte ptr [rax], al ; ror byte ptr [rax], -0x1d ; call qword ptr [rdx]
0x000000000061052a : add byte ptr [rax], al ; and al, 0x43 ; add al, byte ptr [rax] ; sbb ebx, esi ; call qword ptr [rsi]
0x000000000061102a : add byte ptr [rax], al ; and al, 0x4e ; add al, byte ptr [rax] ; and byte ptr [rdi], ch ; call qword ptr [rax]
0x0000000000602d2a : add byte ptr [rax], al ; and al, 0x6b ; add dword ptr [rax], eax ; push rax ; iretd ; in al, dx ; jmp rdx
0x000000000061592a : add byte ptr [rax], al ; and al, 0xffffffffffffff97 ; add al, byte ptr [rax] ; and byte ptr [rdx - 0xc], ah ; call rcx
0x000000000060642a : add byte ptr [rax], al ; and al, 0xffffffffffffffa2 ; add dword ptr [rax], eax ; mov al, -0x13 ; in eax, dx ; jmp qword ptr [rax]
0x00000000005f712a : add byte ptr [rax], al ; and al, 0xffffffffffffffaf ; add byte ptr [rax], al ; sub byte ptr [rcx], -0x18 ; call qword ptr [rsi]
0x000000000061742a : add byte ptr [rax], al ; and al, 0xffffffffffffffb2 ; add al, byte ptr [rax] ; push rax ; in eax, -0xc ; call qword ptr [rsi]
0x0000000000609c2a : add byte ptr [rax], al ; and al, 0xffffffffffffffda ; add dword ptr [rax], eax ; loopne 0x609bef ; out dx, al ; call qword ptr [rbx]
0x00000000005e265a : add byte ptr [rax], al ; and byte ptr [rax - 0x1b], bl ; call rax
0x00000000005f998e : add byte ptr [rax], al ; and byte ptr [rbx - 0x17], al ; jmp qword ptr [rax]
0x00000000005f9bfe : add byte ptr [rax], al ; and byte ptr [rsi - 0x17], cl ; call qword ptr [rcx]
0x00000000004d040e : add byte ptr [rax], al ; and esi, dword ptr [rdi + 0x10] ; mov eax, esi ; ret
0x000000000046105e : add byte ptr [rax], al ; and esi, dword ptr [rdi + 0x20] ; mov eax, esi ; ret
0x00000000004d043e : add byte ptr [rax], al ; and esi, dword ptr [rdi + 0x70] ; mov eax, esi ; ret
0x00000000005fb5a6 : add byte ptr [rax], al ; call 0x115f9f85
0x00000000005fb5a5 : add byte ptr [rax], al ; call 0x115f9f86
0x00000000005f3f36 : add byte ptr [rax], al ; call 0x125f25f5
0x00000000005f9186 : add byte ptr [rax], al ; call 0x185f7aad
0x00000000005ef6b6 : add byte ptr [rax], al ; call 0x225eda8a
0x00000000005ec396 : add byte ptr [rax], al ; call 0x275ea506
0x0000000000423d2c : add byte ptr [rax], al ; call 0x440024
0x00000000004c3922 : add byte ptr [rax], al ; call 0x46aaa9
0x00000000004b1942 : add byte ptr [rax], al ; call 0x46ab09
0x00000000004b1912 : add byte ptr [rax], al ; call 0x46ab49
0x00000000004701e8 : add byte ptr [rax], al ; call 0x46c474
0x00000000004200c3 : add byte ptr [rax], al ; call 0x4cc374
0x000000000042597b : add byte ptr [rax], al ; call 0x4cc378
0x00000000004636f8 : add byte ptr [rax], al ; call 0x4cc379
0x00000000004b9d23 : add byte ptr [rax], al ; call 0x4e5f64
0x00000000005f35f6 : add byte ptr [rax], al ; call 0xffffffffd35f1c63
0x00000000005f5ca6 : add byte ptr [rax], al ; call 0xffffffffe75f4430
0x00000000004cdc25 : add byte ptr [rax], al ; call qword ptr [rax]
0x00000000005c51ee : add byte ptr [rax], al ; call qword ptr [rbx]
0x0000000000411d25 : add byte ptr [rax], al ; call r14
0x00000000004e7978 : add byte ptr [rax], al ; call r8
0x000000000048ed5f : add byte ptr [rax], al ; call rax
0x000000000048f221 : add byte ptr [rax], al ; call rbx
0x000000000040c176 : add byte ptr [rax], al ; call rcx
0x00000000005c5b86 : add byte ptr [rax], al ; call rsi
0x00000000005c5776 : add byte ptr [rax], al ; call rsp
0x000000000042c107 : add byte ptr [rax], al ; cdqe ; pop rdx ; ret
0x00000000005ebf43 : add byte ptr [rax], al ; clc ; call rax
0x00000000005ecfe6 : add byte ptr [rax], al ; clc ; loopne 0x5ecfd1 ; jmp rdi
0x00000000005f6306 : add byte ptr [rax], al ; clc ; mov ah, -0x19 ; jmp rax
0x00000000005ede96 : add byte ptr [rax], al ; clc ; mov bh, -0x1e ; jmp qword ptr [rdx]
0x00000000005eddb6 : add byte ptr [rax], al ; clc ; mov ch, -0x1e ; jmp qword ptr [rax]
0x00000000005c365e : add byte ptr [rax], al ; clc ; ret 0x5c
0x0000000000610302 : add byte ptr [rax], al ; cld ; add al, byte ptr [rax] ; js 0x61032c ; call qword ptr [rsi]
0x0000000000600a02 : add byte ptr [rax], al ; cld ; add dword ptr [r8], r8d ; sub dh, cl ; jmp 0x600a14
0x0000000000617002 : add byte ptr [rax], al ; cld ; lodsd eax, dword ptr [rsi] ; add al, byte ptr [rax] ; fsub st(3) ; hlt ; call qword ptr [rsi]
0x0000000000617302 : add byte ptr [rax], al ; cld ; mov al, 2 ; add al, bl ; in al, -0xc ; call qword ptr [rsi]
0x0000000000618502 : add byte ptr [rax], al ; cld ; ret 2
0x0000000000608d02 : add byte ptr [rax], al ; cld ; retf 1 ; or byte ptr [rbp - 0x12], dh ; jmp qword ptr [rdi]
0x0000000000608302 : add byte ptr [rax], al ; cld ; rol byte ptr [rcx], 0 ; test al, 0x47 ; out dx, al ; call rdi
0x00000000005fee02 : add byte ptr [rax], al ; cld ; sub eax, dword ptr [rcx] ; add byte ptr [rax + 0x30], cl ; jmp 0x5fee14
0x000000000060ee02 : add byte ptr [rax], al ; cld ; sub eax, dword ptr [rdx] ; add byte ptr [rax], bh ; or ebx, esi ; call rbx
0x00000000005e9c3b : add byte ptr [rax], al ; cli ; cmc ; call rax
0x00000000005f7642 : add byte ptr [rax], al ; cmp al, -0x4c ; add byte ptr [rax], al ; cmp byte ptr [rdi - 0x18], al ; call rsp
0x0000000000617242 : add byte ptr [rax], al ; cmp al, -0x50 ; add al, byte ptr [rax] ; cwde ; in al, -0xc ; call qword ptr [rsi]
0x0000000000616f42 : add byte ptr [rax], al ; cmp al, -0x53 ; add al, byte ptr [rax] ; mov bl, ah ; hlt ; jmp qword ptr [rdi]
0x000000000060d242 : add byte ptr [rax], al ; cmp al, 0x10 ; add al, byte ptr [rax] ; clc ; add al, -0x10 ; jmp qword ptr [rdi]
0x00000000005fcd42 : add byte ptr [rax], al ; cmp al, 0xb ; add dword ptr [rax], eax ; mov byte ptr [rdi - 0x16], bh ; call qword ptr [rcx]
0x000000000060c842 : add byte ptr [rax], al ; cmp al, 6 ; add al, byte ptr [rax] ; pop rax ; ret
0x00000000005f7646 : add byte ptr [rax], al ; cmp byte ptr [rdi - 0x18], al ; call rsp
0x00000000005f9af6 : add byte ptr [rax], al ; cmp byte ptr [rsi - 0x17], al ; call qword ptr [rcx]
0x00000000005e6cb3 : add byte ptr [rax], al ; cmp edi, ebp ; jmp rax
0x00000000005ffd4a : add byte ptr [rax], al ; cmp r8d, dword ptr [rcx] ; add byte ptr [rax], al ; mov ch, bl ; jmp qword ptr [rsi]
0x00000000004b84f4 : add byte ptr [rax], al ; cmp rdi, rsi ; je 0x4b8506 ; pop rax ; jmp rcx
0x00000000005c37e6 : add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x000000000060696a : add byte ptr [rax], al ; cmpsd dword ptr fs:[rsi], dword ptr [rdi] ; add dword ptr [rax], eax ; rol byte ptr [rsi + rbp*8], 1 ; jmp qword ptr [rdi]
0x00000000005f28f6 : add byte ptr [rax], al ; cwde ; adc ah, ch ; call rdx
0x00000000005ed476 : add byte ptr [rax], al ; cwde ; adc al, -0x1e ; call rdi
0x00000000005f4a56 : add byte ptr [rax], al ; cwde ; out -0x1a, al ; jmp rbx
0x0000000000558b26 : add byte ptr [rax], al ; dec dword ptr [rax + 9] ; ret
0x0000000000500f07 : add byte ptr [rax], al ; dec dword ptr [rcx] ; ret
0x0000000000514195 : add byte ptr [rax], al ; dec r9d ; jne 0x514188 ; ret
0x00000000006116e2 : add byte ptr [rax], al ; fcom qword ptr [rdx + rax] ; sub byte ptr [rsi - 0xd], cl ; call qword ptr [rax]
0x00000000006099e2 : add byte ptr [rax], al ; fcom st(0), st(7) ; add dword ptr [rax], eax ; call 0xffffffffd76088a6
0x00000000005f56b6 : add byte ptr [rax], al ; fcomp dword ptr [rcx - 0x19] ; call rsp
0x00000000005f20e2 : add byte ptr [rax], al ; fcomp qword ptr [rsi] ; add byte ptr [rax], bl ; loope 0x5f20d8 ; call qword ptr [rbx]
0x00000000005ff2e2 : add byte ptr [rax], al ; fdiv qword ptr [rax] ; add dword ptr [rax], eax ; fmul dword ptr [rbx - 0x15] ; call qword ptr [rdx]
0x00000000006173e2 : add byte ptr [rax], al ; fdiv qword ptr [rcx - 0x1ac7fffe] ; hlt ; call qword ptr [rsi]
0x00000000005f7ee2 : add byte ptr [rax], al ; fdivr qword ptr [rax + rax - 0x17424800] ; call qword ptr [rax]
0x0000000000617be2 : add byte ptr [rax], al ; fdivr qword ptr [rcx - 0x1107fffe] ; hlt ; call qword ptr [rax]
0x000000000060b2e2 : add byte ptr [rax], al ; fdivr st(0), st(0) ; add dword ptr [rax], eax ; clc ; adc ch, bh ; call rdx
0x0000000000609f6a : add byte ptr [rax], al ; fld qword ptr fs:[rcx] ; add al, ah ; ret
0x00000000005f3656 : add byte ptr [rax], al ; fsub dword ptr [rdx - 0x1a] ; call qword ptr [rbx]
0x00000000005f3706 : add byte ptr [rax], al ; fsub dword ptr [rsi - 0x1a] ; call qword ptr [rdi]
0x00000000006127e2 : add byte ptr [rax], al ; fsub qword ptr [rbp + 2] ; add al, bl ; mov dr0, ebx ; call qword ptr [rbx]
0x00000000005f6ee2 : add byte ptr [rax], al ; fsubr qword ptr [rax + rax - 0x17dad800] ; jmp qword ptr [rsi]
0x00000000006104fa : add byte ptr [rax], al ; hlt ; add al, byte ptr [rax] ; xor byte ptr [rcx], bl ; call qword ptr [rsi]
0x00000000005fe8fa : add byte ptr [rax], al ; hlt ; add dword ptr es:[rax], eax ; push rax ; add ch, bl ; call rbx
0x00000000005fe4fa : add byte ptr [rax], al ; hlt ; and al, byte ptr [rcx] ; add al, dl ; in al, -0x16 ; call qword ptr [rdi]
0x00000000006173fa : add byte ptr [rax], al ; hlt ; mov cl, 2 ; add byte ptr [rax - 0x1b], al ; hlt ; call qword ptr [rsi]
0x0000000000572a2e : add byte ptr [rax], al ; hlt ; ret 0x42
0x00000000005df2d6 : add byte ptr [rax], al ; hlt ; ret 0x55
0x00000000005f70fa : add byte ptr [rax], al ; hlt ; scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; sub byte ptr [rcx], -0x18 ; call qword ptr [rdx]
0x00000000006171fa : add byte ptr [rax], al ; hlt ; scasd eax, dword ptr [rdi] ; add al, byte ptr [rax] ; and ah, 0xf4 ; call qword ptr [rsi]
0x00000000005f6afa : add byte ptr [rax], al ; hlt ; test al, 0 ; add byte ptr [rax], dh ; adc ebp, eax ; jmp qword ptr [rsi]
0x00000000005f49fa : add byte ptr [rax], al ; hlt ; xchg dword ptr [rax], eax ; add byte ptr [rax], ah ; out -0x1a, al ; call qword ptr [rcx]
0x00000000005e477b : add byte ptr [rax], al ; in al, -0x16 ; jmp qword ptr [rax]
0x0000000000616fea : add byte ptr [rax], al ; in al, -0x53 ; add al, byte ptr [rax] ; shl bl, 1 ; hlt ; call qword ptr [rsi]
0x00000000005f50ea : add byte ptr [rax], al ; in al, -0x72 ; add byte ptr [rax], al ; xor byte ptr [rdi], 0xe7 ; jmp qword ptr [rsi]
0x000000000061707f : add byte ptr [rax], al ; in al, -0xc ; call qword ptr [rsi]
0x000000000060bbea : add byte ptr [rax], al ; in al, -7 ; add dword ptr [rax], eax ; nop ; out dx, eax ; call qword ptr [rbx]
0x0000000000600dea : add byte ptr [rax], al ; in al, 0x4b ; add dword ptr [rax], eax ; xor esp, ebp ; jmp qword ptr [rbx]
0x00000000006013ea : add byte ptr [rax], al ; in al, 0x51 ; add dword ptr [rax], eax ; add byte ptr [rbx - 0x14], bl ; jmp rcx
0x0000000000611eea : add byte ptr [rax], al ; in al, 0x5c ; add al, byte ptr [rax] ; loopne 0x611f64 ; call qword ptr [rdi]
0x00000000005f36ea : add byte ptr [rax], al ; in al, 0x74 ; add byte ptr [rax], al ; shl byte ptr [rsi - 0x1a], 1 ; call qword ptr [rbx]
0x00000000006100f2 : add byte ptr [rax], al ; in al, dx ; add al, byte ptr ds:[rax] ; or byte ptr [rcx], bl ; call qword ptr [rax]
0x00000000005f28f2 : add byte ptr [rax], al ; in al, dx ; add byte ptr [rax], al ; cwde ; adc ah, ch ; call rdx
0x00000000006106f2 : add byte ptr [rax], al ; in al, dx ; add r8b, byte ptr [rax] ; clc ; sbb bl, dh ; call qword ptr [rax]
0x00000000005efdf2 : add byte ptr [rax], al ; in al, dx ; cmp eax, dword ptr [rax] ; add byte ptr [rax], bh ; out -0x1d, al ; call qword ptr [rdx]
0x0000000000608af2 : add byte ptr [rax], al ; in al, dx ; enter 1, 0x68 ; push -0x12 ; jmp qword ptr [rdi]
0x0000000000609ef2 : add byte ptr [rax], al ; in al, dx ; fadd qword ptr [rcx] ; add byte ptr [rax], ch ; ret
0x00000000006141f2 : add byte ptr [rax], al ; in al, dx ; jg 0x614202 ; add al, cl ; in al, dx ; jmp qword ptr [rsi]
0x00000000005f40f2 : add byte ptr [rax], al ; in al, dx ; jle 0x5f40fe ; add al, ch ; ret 0xffe6
0x00000000005f85f2 : add byte ptr [rax], al ; in al, dx ; ret
0x00000000006084f2 : add byte ptr [rax], al ; in al, dx ; ret 1
0x00000000006170f2 : add byte ptr [rax], al ; in al, dx ; scasb al, byte ptr [rdi] ; add al, byte ptr [rax] ; sub ah, ah ; hlt ; call qword ptr [rsi]
0x00000000006149f2 : add byte ptr [rax], al ; in al, dx ; xchg dword ptr [rdx], eax ; add byte ptr [rax + 0x3a], ch ; hlt ; jmp rdi
0x00000000005e8d9b : add byte ptr [rax], al ; in eax, dx ; int1 ; jmp rax
0x00000000005e5ceb : add byte ptr [rax], al ; in eax, dx ; jmp qword ptr [rax]
0x0000000000602872 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; add word ptr [rax], ax ; js 0x60283e ; in al, dx ; call qword ptr [rax]
0x00000000005df336 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret
0x0000000000615972 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; xchg eax, edi ; add al, byte ptr [rax] ; js 0x6159e6 ; hlt ; jmp qword ptr [rcx]
0x0000000000572a0e : add byte ptr [rax], al ; int 0xc2
0x00000000005e8653 : add byte ptr [rax], al ; int1 ; call qword ptr [rax]
0x00000000005e85f3 : add byte ptr [rax], al ; int1 ; call rax
0x000000000047af3f : add byte ptr [rax], al ; ja 0x47af4b ; sbb eax, eax ; ret
0x00000000005ec18b : add byte ptr [rax], al ; ja 0x5ec18b ; jmp rax
0x0000000000538260 : add byte ptr [rax], al ; jbe 0x538249 ; pop rbx ; pop r14 ; pop r15 ; ret
0x00000000005ea6ab : add byte ptr [rax], al ; jbe 0x5ea6a9 ; jmp qword ptr [rax]
0x000000000041b267 : add byte ptr [rax], al ; je 0x41b274 ; xor eax, eax ; pop rbx ; ret
0x000000000043602c : add byte ptr [rax], al ; je 0x436038 ; xor eax, eax ; ret
0x0000000000460f1d : add byte ptr [rax], al ; je 0x460f40 ; mov rdi, rbx ; call rcx
0x00000000004cfb97 : add byte ptr [rax], al ; je 0x4cfba9 ; mov eax, 0x82dfe0 ; ret
0x00000000004ff109 : add byte ptr [rax], al ; je 0x4ff124 ; mov rdi, rbx ; call rcx
0x00000000004ff279 : add byte ptr [rax], al ; je 0x4ff294 ; mov rdi, rbx ; call rcx
0x00000000004ff359 : add byte ptr [rax], al ; je 0x4ff374 ; mov rdi, rbx ; call rcx
0x00000000004ff4cf : add byte ptr [rax], al ; je 0x4ff4ea ; mov rdi, rbx ; call rcx
0x00000000004ff64f : add byte ptr [rax], al ; je 0x4ff66a ; mov rdi, rbx ; call rcx
0x00000000004ff7cf : add byte ptr [rax], al ; je 0x4ff7ea ; mov rdi, rbx ; call rcx
0x00000000004ffb09 : add byte ptr [rax], al ; je 0x4ffb24 ; mov rdi, rbx ; call rcx
0x00000000004ffc39 : add byte ptr [rax], al ; je 0x4ffc54 ; mov rdi, rbx ; call rcx
0x0000000000539c66 : add byte ptr [rax], al ; je 0x539c74 ; mov eax, dword ptr [rdi + 0x10] ; ret
0x00000000005517c4 : add byte ptr [rax], al ; je 0x5517e1 ; mov eax, edx ; ret
0x0000000000551882 : add byte ptr [rax], al ; je 0x55189f ; mov eax, edx ; ret
0x0000000000559ba5 : add byte ptr [rax], al ; je 0x559baf ; jmp rcx
0x0000000000559bc5 : add byte ptr [rax], al ; je 0x559bcf ; jmp rcx
0x0000000000559be8 : add byte ptr [rax], al ; je 0x559bf4 ; jmp r9
0x0000000000564945 : add byte ptr [rax], al ; je 0x564967 ; xor eax, eax ; ret
0x00000000005f727a : add byte ptr [rax], al ; je 0x5f7237 ; add byte ptr [rax], al ; sub al, -0x18 ; jmp qword ptr [rbx]
0x00000000005fdb7a : add byte ptr [rax], al ; je 0x5fdb9e ; add dword ptr [rax], eax ; push rax ; ret
0x0000000000609e7a : add byte ptr [rax], al ; je 0x609e61 ; add dword ptr [rax], eax ; nop ; ret 0xffee
0x000000000060c37a : add byte ptr [rax], al ; je 0x60c388 ; add al, byte ptr [rax] ; mov al, 0x6a ; out dx, eax ; jmp qword ptr [rdi]
0x000000000061067a : add byte ptr [rax], al ; je 0x6106cb ; add al, byte ptr [rax] ; adc byte ptr [rcx], bl ; call qword ptr [rsi]
0x0000000000610d7a : add byte ptr [rax], al ; je 0x610dd2 ; add al, byte ptr [rax] ; shl byte ptr [rsi], 1 ; jmp qword ptr [rcx]
0x000000000061527a : add byte ptr [rax], al ; je 0x615217 ; add al, byte ptr [rax] ; ror byte ptr [rcx - 0xc], 1 ; call qword ptr [rdi]
0x0000000000616c7a : add byte ptr [rax], al ; je 0x616c31 ; add al, byte ptr [rax] ; mov al, -0x51 ; hlt ; call qword ptr [rcx]
0x000000000061707a : add byte ptr [rax], al ; je 0x617035 ; add al, byte ptr [rax] ; add ah, ah ; hlt ; call qword ptr [rsi]
0x000000000061777a : add byte ptr [rax], al ; je 0x61773c ; add al, byte ptr [rax] ; adc bh, ah ; hlt ; call qword ptr [rax]
0x00000000005eb1cb : add byte ptr [rax], al ; jg 0x5eb1ca ; call rax
0x000000000042ce34 : add byte ptr [rax], al ; jge 0x42ce47 ; mov eax, 0xffffffff ; ret
0x00000000005f3f4a : add byte ptr [rax], al ; jge 0x5f3f58 ; add al, dh ; mov bl, -0x1a ; jmp qword ptr [rsi]
0x00000000005f3f6a : add byte ptr [rax], al ; jge 0x5f3f78 ; add byte ptr [rax], al ; mov ah, -0x1a ; call qword ptr [rcx]
0x00000000005f1082 : add byte ptr [rax], al ; jl 0x5f10dd ; add byte ptr [rax], al ; sbb byte ptr [rax - 0x1c], dl ; call qword ptr [rbx]
0x00000000005f9182 : add byte ptr [rax], al ; jl 0x5f915e ; add byte ptr [rax], al ; call 0x185f7ab1
0x000000000060e982 : add byte ptr [rax], al ; jl 0x60e9b6 ; add al, byte ptr [rax] ; fcom st(7) ; call qword ptr [rbx]
0x0000000000613e6a : add byte ptr [rax], al ; jl 0x613e7a ; add byte ptr [rax - 0x1c], ah ; jmp qword ptr [rcx]
0x0000000000617182 : add byte ptr [rax], al ; jl 0x61713e ; add al, byte ptr [rax] ; pop rax ; in al, -0xc ; call qword ptr [rsi]
0x00000000005f7a66 : add byte ptr [rax], al ; jle 0x5f7a58 ; call rcx
0x0000000000401cc9 : add byte ptr [rax], al ; jmp 0x401bc9
0x00000000004133a1 : add byte ptr [rax], al ; jmp 0x4135d5
0x0000000000414324 : add byte ptr [rax], al ; jmp 0x414379
0x00000000004148ba : add byte ptr [rax], al ; jmp 0x4149ed
0x00000000004144cd : add byte ptr [rax], al ; jmp 0x415233
0x00000000004146e7 : add byte ptr [rax], al ; jmp 0x4152fc
0x0000000000419ac9 : add byte ptr [rax], al ; jmp 0x41a44b
0x0000000000419b20 : add byte ptr [rax], al ; jmp 0x41a5bd
0x000000000041ad5d : add byte ptr [rax], al ; jmp 0x41ad26
0x00000000004212b2 : add byte ptr [rax], al ; jmp 0x421618
0x0000000000471682 : add byte ptr [rax], al ; jmp 0x47164b
0x00000000004850bb : add byte ptr [rax], al ; jmp 0x4850d3
0x00000000004bb811 : add byte ptr [rax], al ; jmp 0x4bb7b7
0x000000000054aafe : add byte ptr [rax], al ; jmp 0x54ab12
0x000000000054afca : add byte ptr [rax], al ; jmp 0x54afde
0x000000000054eef9 : add byte ptr [rax], al ; jmp 0x54eec3
0x0000000000554a89 : add byte ptr [rax], al ; jmp 0x554a52
0x00000000005caafe : add byte ptr [rax], al ; jmp qword ptr [rcx]
0x000000000041a698 : add byte ptr [rax], al ; jmp qword ptr [rsi*8 + 0x56c2b0]
0x000000000042c1db : add byte ptr [rax], al ; jmp rax
0x00000000005f071f : add byte ptr [rax], al ; jmp rbx
0x00000000005c7706 : add byte ptr [rax], al ; jmp rdx
0x0000000000405b3d : add byte ptr [rax], al ; jne 0x405b50 ; mov eax, 0x56a3a0 ; ret
0x00000000004068f5 : add byte ptr [rax], al ; jne 0x406908 ; mov eax, 0x56a6c8 ; ret
0x0000000000409e15 : add byte ptr [rax], al ; jne 0x409e28 ; mov eax, 0x56aad0 ; ret
0x000000000042cbbe : add byte ptr [rax], al ; jne 0x42cbd0 ; mov eax, 0xffffffff ; ret
0x0000000000431dd8 : add byte ptr [rax], al ; jne 0x431df9 ; mov eax, 0x573ce8 ; ret
0x0000000000431de6 : add byte ptr [rax], al ; jne 0x431e28 ; mov eax, 0x573b42 ; ret
0x0000000000431e8c : add byte ptr [rax], al ; jne 0x431ead ; mov eax, 0x573c32 ; ret
0x0000000000431e9a : add byte ptr [rax], al ; jne 0x431ed1 ; mov eax, 0x573bf0 ; ret
0x00000000004324ff : add byte ptr [rax], al ; jne 0x432534 ; mov eax, 0x5731f8 ; ret
0x00000000004324f1 : add byte ptr [rax], al ; jne 0x432534 ; mov eax, 0x57322d ; ret
0x00000000004324e3 : add byte ptr [rax], al ; jne 0x432534 ; mov eax, 0x573267 ; ret
0x00000000004324d5 : add byte ptr [rax], al ; jne 0x432534 ; mov eax, 0x5732a5 ; ret
0x00000000004324b5 : add byte ptr [rax], al ; jne 0x432534 ; mov eax, 0x573362 ; ret
0x0000000000432521 : add byte ptr [rax], al ; jne 0x432534 ; mov eax, 0x5733eb ; ret
0x000000000043250d : add byte ptr [rax], al ; jne 0x432534 ; mov eax, 0x573420 ; ret
0x0000000000432554 : add byte ptr [rax], al ; jne 0x432567 ; mov eax, 0x573dc2 ; ret
0x0000000000432562 : add byte ptr [rax], al ; jne 0x432575 ; mov eax, 0x573db8 ; ret
0x00000000004325de : add byte ptr [rax], al ; jne 0x432607 ; mov eax, 0x574065 ; ret
0x00000000004325f4 : add byte ptr [rax], al ; jne 0x43262f ; mov eax, 0x573df6 ; ret
0x000000000043261c : add byte ptr [rax], al ; jne 0x432657 ; mov eax, 0x573e04 ; ret
0x0000000000432644 : add byte ptr [rax], al ; jne 0x432683 ; mov eax, 0x573e12 ; ret
0x0000000000432906 : add byte ptr [rax], al ; jne 0x43292b ; mov eax, 0x574042 ; ret
0x0000000000432dff : add byte ptr [rax], al ; jne 0x432e3a ; mov eax, 0x573e58 ; ret
0x0000000000432e77 : add byte ptr [rax], al ; jne 0x432ea2 ; mov eax, 0x573ef2 ; ret
0x0000000000432e27 : add byte ptr [rax], al ; jne 0x432eb0 ; mov eax, 0x573de8 ; ret
0x0000000000432e35 : add byte ptr [rax], al ; jne 0x432eb0 ; mov eax, 0x573e5f ; ret
0x0000000000432e4b : add byte ptr [rax], al ; jne 0x432eb0 ; mov eax, 0x573ee4 ; ret
0x0000000000432e61 : add byte ptr [rax], al ; jne 0x432eb0 ; mov eax, 0x573eeb ; ret
0x0000000000432e9d : add byte ptr [rax], al ; jne 0x432eb0 ; mov eax, 0x573ef9 ; ret
0x0000000000433194 : add byte ptr [rax], al ; jne 0x4331a7 ; mov eax, 0x587ed8 ; ret
0x00000000004331a2 : add byte ptr [rax], al ; jne 0x4331b5 ; mov eax, 0x57412b ; ret
0x00000000004336ee : add byte ptr [rax], al ; jne 0x433708 ; mov eax, 0x574420 ; ret
0x0000000000433703 : add byte ptr [rax], al ; jne 0x433716 ; mov eax, 0x574338 ; ret
0x000000000043610a : add byte ptr [rax], al ; jne 0x436140 ; mov eax, 0x1b ; ret
0x00000000004360f4 : add byte ptr [rax], al ; jne 0x43614e ; mov eax, 0x13 ; ret
0x0000000000436149 : add byte ptr [rax], al ; jne 0x43615c ; mov eax, 0x17 ; ret
0x000000000043613b : add byte ptr [rax], al ; jne 0x43615c ; mov eax, 0x1c ; ret
0x000000000043c4ae : add byte ptr [rax], al ; jne 0x43c4c8 ; mov eax, 0x574f40 ; ret
0x000000000043c4c3 : add byte ptr [rax], al ; jne 0x43c4d6 ; mov eax, 0x574e58 ; ret
0x000000000043c8de : add byte ptr [rax], al ; jne 0x43c8f8 ; mov eax, 0x575270 ; ret
0x000000000043c8f3 : add byte ptr [rax], al ; jne 0x43c906 ; mov eax, 0x575188 ; ret
0x0000000000443b31 : add byte ptr [rax], al ; jne 0x443b3d ; mov eax, ecx ; ret
0x00000000004d8f9c : add byte ptr [rax], al ; jne 0x4d8f24 ; ret
0x0000000000510d20 : add byte ptr [rax], al ; jne 0x510d39 ; mov eax, 0x36 ; ret
0x0000000000510d34 : add byte ptr [rax], al ; jne 0x510d47 ; mov eax, 0x34 ; ret
0x000000000060374a : add byte ptr [rax], al ; jne 0x603759 ; add byte ptr [rax - 0xf], ah ; in al, dx ; call rdi
0x00000000005ec4c6 : add byte ptr [rax], al ; jo 0x5ec4b1 ; call rdi
0x00000000005f5126 : add byte ptr [rax], al ; js 0x5f516b ; out -1, eax ; ret
0x0000000000463b7e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0x28] ; ret
0x00000000004899de : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0x48] ; ret
0x00000000004264be : add byte ptr [rax], al ; lea rdi, qword ptr [rsp] ; call rax
0x0000000000452fbe : add byte ptr [rax], al ; lea rsp, qword ptr [rbp] ; pop rbp ; ret
0x0000000000611db2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; pop rbx ; add al, byte ptr [rax] ; or byte ptr [rdx - 0xd], ch ; call qword ptr [rcx]
0x00000000005f84b2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x00000000005eddb2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; sbb eax, dword ptr [rax] ; add al, bh ; mov ch, -0x1e ; jmp qword ptr [rax]
0x000000000060ecb2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; sub al, byte ptr [rdx] ; add byte ptr [rax], bh ; call qword ptr [rdx]
0x000000000060eab2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; sub byte ptr [rdx], al ; add byte ptr [rax], bh ; in al, dx ; jmp rdx
0x00000000005fb9b2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; test dword ptr [rax], 0xe9fbf800 ; call qword ptr [rsi]
0x00000000005f56b2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; xchg eax, esp ; add byte ptr [rax], al ; fcomp dword ptr [rcx - 0x19] ; call rsp
0x00000000004d67bc : add byte ptr [rax], al ; loopne 0x4d677b ; add byte ptr [rax], al ; ret 0x8401
0x00000000005f3f6f : add byte ptr [rax], al ; mov ah, -0x1a ; call qword ptr [rcx]
0x00000000006095ba : add byte ptr [rax], al ; mov ah, -0x2d ; add dword ptr [rax], eax ; loopne 0x60956b ; out dx, al ; call qword ptr [rcx]
0x00000000005f85ba : add byte ptr [rax], al ; mov ah, -0x3d ; add byte ptr [rax], al ; nop ; fld1 ; jmp rsi
0x00000000006081ba : add byte ptr [rax], al ; mov ah, -0x41 ; add dword ptr [rax], eax ; sar byte ptr [rdi], -0x12 ; call qword ptr [rcx]
0x00000000006176ba : add byte ptr [rax], al ; mov ah, -0x4c ; add al, byte ptr [rax] ; and dh, 0xf4 ; jmp qword ptr [rdi]
0x00000000006174ba : add byte ptr [rax], al ; mov ah, -0x4e ; add al, byte ptr [rax] ; and ch, 0xf4 ; call qword ptr [rsi]
0x0000000000616fba : add byte ptr [rax], al ; mov ah, -0x53 ; add al, byte ptr [rax] ; shl bl, -0xc ; call qword ptr [rsi]
0x0000000000616dba : add byte ptr [rax], al ; mov ah, -0x55 ; add al, byte ptr [rax] ; shl cl, 1 ; hlt ; call qword ptr [rax]
0x0000000000614bba : add byte ptr [rax], al ; mov ah, -0x77 ; add al, byte ptr [rax] ; adc byte ptr [rcx - 0xc], al ; call qword ptr [rdx]
0x00000000005fdaba : add byte ptr [rax], al ; mov ah, 0x18 ; add dword ptr [rax], eax ; nop ; ret
0x000000000060e4ba : add byte ptr [rax], al ; mov ah, 0x22 ; add al, byte ptr [rax] ; push rax ; mov bh, -0xe ; jmp qword ptr [rax]
0x0000000000611eba : add byte ptr [rax], al ; mov ah, 0x5c ; add al, byte ptr [rax] ; shr byte ptr [rcx - 0xd], 1 ; call qword ptr [rbx]
0x0000000000404774 : add byte ptr [rax], al ; mov al, byte ptr [rdi] ; mov byte ptr [rsi], al ; ret
0x000000000061756a : add byte ptr [rax], al ; mov bl, 2 ; add al, dl ; in eax, -0xc ; call qword ptr [rsi]
0x00000000005bebfe : add byte ptr [rax], al ; mov byte ptr [rcx], al ; add byte ptr [rax], al ; ret 1
0x000000000044459b : add byte ptr [rax], al ; mov byte ptr [rdi], dl ; ret
0x00000000005f55c6 : add byte ptr [rax], al ; mov byte ptr [rsi - 0x19], dl ; call qword ptr [rdx]
0x00000000005e1fcb : add byte ptr [rax], al ; mov ch, -0x1c ; jmp rax
0x00000000005ffd4f : add byte ptr [rax], al ; mov ch, bl ; jmp qword ptr [rsi]
0x00000000004c6377 : add byte ptr [rax], al ; mov dword ptr [rax + 0x20], ecx ; pop rbx ; ret
0x000000000050adcb : add byte ptr [rax], al ; mov dword ptr [rbx + 0x74], eax ; pop rbx ; ret
0x000000000042c30e : add byte ptr [rax], al ; mov dword ptr [rdi + 0x138], edx ; pop rdx ; ret
0x000000000042eb4e : add byte ptr [rax], al ; mov dword ptr [rdi + 0x178], esi ; ret
0x00000000004b79be : add byte ptr [rax], al ; mov dword ptr [rdi + 0x20], esi ; ret
0x00000000005605ce : add byte ptr [rax], al ; mov dword ptr [rdi + 0x28], esi ; ret
0x000000000042e57e : add byte ptr [rax], al ; mov dword ptr [rdi + 0x40], esi ; ret
0x000000000042e59e : add byte ptr [rax], al ; mov dword ptr [rdi + 0x44], esi ; ret
0x000000000042e74e : add byte ptr [rax], al ; mov dword ptr [rdi + 0x48], esi ; ret
0x000000000042c1ac : add byte ptr [rax], al ; mov dword ptr [rdi + 0x90], edx ; pop rdx ; ret
0x000000000055e2de : add byte ptr [rax], al ; mov dword ptr [rdi + 0xb8], esi ; ret
0x0000000000456afe : add byte ptr [rax], al ; mov dword ptr [rdi], esi ; ret
0x000000000042ccf6 : add byte ptr [rax], al ; mov dword ptr [rdx], eax ; ret
0x000000000054912e : add byte ptr [rax], al ; mov dword ptr [rip + 0x2e568e], edi ; ret
0x00000000004cb97e : add byte ptr [rax], al ; mov dword ptr [rip + 0x360ae2], edi ; ret
0x00000000004dac8e : add byte ptr [rax], al ; mov eax, 0x100 ; ret
0x00000000004904de : add byte ptr [rax], al ; mov eax, 0x1000201f ; ret
0x000000000040ad4e : add byte ptr [rax], al ; mov eax, 0x12c ; ret
0x0000000000405bce : add byte ptr [rax], al ; mov eax, 0x1c20 ; ret
0x000000000048ed1e : add byte ptr [rax], al ; mov eax, 0x29 ; ret
0x0000000000436363 : add byte ptr [rax], al ; mov eax, 0x2cb ; pop rbx ; ret
0x00000000004dac7e : add byte ptr [rax], al ; mov eax, 0x40 ; ret
0x0000000000405b4e : add byte ptr [rax], al ; mov eax, 0x56a488 ; ret
0x0000000000405b5e : add byte ptr [rax], al ; mov eax, 0x56a570 ; ret
0x000000000040690e : add byte ptr [rax], al ; mov eax, 0x56a898 ; ret
0x0000000000408efe : add byte ptr [rax], al ; mov eax, 0x56aad0 ; ret
0x0000000000409e2e : add byte ptr [rax], al ; mov eax, 0x56aca0 ; ret
0x0000000000409e3e : add byte ptr [rax], al ; mov eax, 0x56add8 ; ret
0x000000000040bc1e : add byte ptr [rax], al ; mov eax, 0x56b158 ; ret
0x000000000040ebbe : add byte ptr [rax], al ; mov eax, 0x56b768 ; ret
0x00000000004125de : add byte ptr [rax], al ; mov eax, 0x56ba10 ; ret
0x000000000041b64e : add byte ptr [rax], al ; mov eax, 0x56cc38 ; ret
0x0000000000432f27 : add byte ptr [rax], al ; mov eax, 0x56f1f7 ; ret
0x0000000000432035 : add byte ptr [rax], al ; mov eax, 0x5730b2 ; ret
0x0000000000431da9 : add byte ptr [rax], al ; mov eax, 0x5730cf ; ret
0x0000000000431af7 : add byte ptr [rax], al ; mov eax, 0x5730ed ; ret
0x0000000000431dcc : add byte ptr [rax], al ; mov eax, 0x573113 ; ret
0x0000000000431b1b : add byte ptr [rax], al ; mov eax, 0x57312b ; ret
0x0000000000432239 : add byte ptr [rax], al ; mov eax, 0x573149 ; ret
0x0000000000431b09 : add byte ptr [rax], al ; mov eax, 0x573167 ; ret
0x0000000000432377 : add byte ptr [rax], al ; mov eax, 0x573184 ; ret
0x000000000043219f : add byte ptr [rax], al ; mov eax, 0x5731a1 ; ret
0x0000000000431f9b : add byte ptr [rax], al ; mov eax, 0x5731bf ; ret
0x0000000000432227 : add byte ptr [rax], al ; mov eax, 0x5731dd ; ret
0x0000000000432215 : add byte ptr [rax], al ; mov eax, 0x573213 ; ret
0x0000000000432203 : add byte ptr [rax], al ; mov eax, 0x573247 ; ret
0x00000000004321f1 : add byte ptr [rax], al ; mov eax, 0x573287 ; ret
0x00000000004321c3 : add byte ptr [rax], al ; mov eax, 0x573347 ; ret
0x00000000004321b1 : add byte ptr [rax], al ; mov eax, 0x57337d ; ret
0x00000000004324a9 : add byte ptr [rax], al ; mov eax, 0x57339a ; ret
0x0000000000432365 : add byte ptr [rax], al ; mov eax, 0x5733d1 ; ret
0x0000000000432347 : add byte ptr [rax], al ; mov eax, 0x573405 ; ret
0x000000000043200b : add byte ptr [rax], al ; mov eax, 0x57343b ; ret
0x0000000000432335 : add byte ptr [rax], al ; mov eax, 0x57345a ; ret
0x0000000000431ff9 : add byte ptr [rax], al ; mov eax, 0x573495 ; ret
0x0000000000432323 : add byte ptr [rax], al ; mov eax, 0x5734b1 ; ret
0x0000000000431fdb : add byte ptr [rax], al ; mov eax, 0x5734cd ; ret
0x000000000043230b : add byte ptr [rax], al ; mov eax, 0x5734ea ; ret
0x0000000000431fc9 : add byte ptr [rax], al ; mov eax, 0x573507 ; ret
0x00000000004322f9 : add byte ptr [rax], al ; mov eax, 0x573525 ; ret
0x0000000000431f89 : add byte ptr [rax], al ; mov eax, 0x5735cb ; ret
0x000000000043218d : add byte ptr [rax], al ; mov eax, 0x5735ee ; ret
0x0000000000432169 : add byte ptr [rax], al ; mov eax, 0x573611 ; ret
0x0000000000432497 : add byte ptr [rax], al ; mov eax, 0x57362c ; ret
0x000000000043213b : add byte ptr [rax], al ; mov eax, 0x57367b ; ret
0x0000000000432473 : add byte ptr [rax], al ; mov eax, 0x57369b ; ret
0x0000000000432129 : add byte ptr [rax], al ; mov eax, 0x5736bb ; ret
0x0000000000432461 : add byte ptr [rax], al ; mov eax, 0x5736dc ; ret
0x0000000000432117 : add byte ptr [rax], al ; mov eax, 0x5736fd ; ret
0x000000000043244f : add byte ptr [rax], al ; mov eax, 0x573725 ; ret
0x000000000043206b : add byte ptr [rax], al ; mov eax, 0x57374d ; ret
0x00000000004323ad : add byte ptr [rax], al ; mov eax, 0x573770 ; ret
0x0000000000432105 : add byte ptr [rax], al ; mov eax, 0x573793 ; ret
0x000000000043243d : add byte ptr [rax], al ; mov eax, 0x5737ac ; ret
0x00000000004320d7 : add byte ptr [rax], al ; mov eax, 0x573849 ; ret
0x0000000000432419 : add byte ptr [rax], al ; mov eax, 0x57386b ; ret
0x00000000004320c5 : add byte ptr [rax], al ; mov eax, 0x57388d ; ret
0x0000000000432407 : add byte ptr [rax], al ; mov eax, 0x5738ae ; ret
0x00000000004320b3 : add byte ptr [rax], al ; mov eax, 0x5738cf ; ret
0x00000000004323f5 : add byte ptr [rax], al ; mov eax, 0x5738f0 ; ret
0x00000000004320a1 : add byte ptr [rax], al ; mov eax, 0x573911 ; ret
0x00000000004323e3 : add byte ptr [rax], al ; mov eax, 0x573928 ; ret
0x000000000043208f : add byte ptr [rax], al ; mov eax, 0x57393f ; ret
0x00000000004323d1 : add byte ptr [rax], al ; mov eax, 0x57395f ; ret
0x000000000043207d : add byte ptr [rax], al ; mov eax, 0x57397f ; ret
0x00000000004323bf : add byte ptr [rax], al ; mov eax, 0x573995 ; ret
0x000000000043217b : add byte ptr [rax], al ; mov eax, 0x5739ab ; ret
0x0000000000431f4a : add byte ptr [rax], al ; mov eax, 0x573a26 ; ret
0x00000000004322bd : add byte ptr [rax], al ; mov eax, 0x573a42 ; ret
0x0000000000431f2c : add byte ptr [rax], al ; mov eax, 0x573a5e ; ret
0x00000000004322a5 : add byte ptr [rax], al ; mov eax, 0x573a79 ; ret
0x0000000000431f1a : add byte ptr [rax], al ; mov eax, 0x573a94 ; ret
0x0000000000432293 : add byte ptr [rax], al ; mov eax, 0x573aae ; ret
0x0000000000431f08 : add byte ptr [rax], al ; mov eax, 0x573ac8 ; ret
0x0000000000432281 : add byte ptr [rax], al ; mov eax, 0x573ae3 ; ret
0x0000000000431ef6 : add byte ptr [rax], al ; mov eax, 0x573afe ; ret
0x000000000043226f : add byte ptr [rax], al ; mov eax, 0x573b20 ; ret
0x0000000000431e29 : add byte ptr [rax], al ; mov eax, 0x573b5f ; ret
0x0000000000431ee4 : add byte ptr [rax], al ; mov eax, 0x573b7c ; ret
0x000000000043225d : add byte ptr [rax], al ; mov eax, 0x573b96 ; ret
0x0000000000431ec0 : add byte ptr [rax], al ; mov eax, 0x573bb0 ; ret
0x000000000043224b : add byte ptr [rax], al ; mov eax, 0x573bd0 ; ret
0x0000000000431ed2 : add byte ptr [rax], al ; mov eax, 0x573c11 ; ret
0x0000000000431eae : add byte ptr [rax], al ; mov eax, 0x573c52 ; ret
0x0000000000432059 : add byte ptr [rax], al ; mov eax, 0x573c72 ; ret
0x000000000043239b : add byte ptr [rax], al ; mov eax, 0x573c90 ; ret
0x0000000000432047 : add byte ptr [rax], al ; mov eax, 0x573cae ; ret
0x0000000000432389 : add byte ptr [rax], al ; mov eax, 0x573ccb ; ret
0x0000000000431dfa : add byte ptr [rax], al ; mov eax, 0x573d05 ; ret
0x0000000000432ac1 : add byte ptr [rax], al ; mov eax, 0x573dd3 ; ret
0x00000000004325d2 : add byte ptr [rax], al ; mov eax, 0x573dda ; ret
0x000000000043259f : add byte ptr [rax], al ; mov eax, 0x573de1 ; ret
0x0000000000432a07 : add byte ptr [rax], al ; mov eax, 0x573def ; ret
0x0000000000432630 : add byte ptr [rax], al ; mov eax, 0x573dfd ; ret
0x0000000000432658 : add byte ptr [rax], al ; mov eax, 0x573e0b ; ret
0x0000000000432684 : add byte ptr [rax], al ; mov eax, 0x573e19 ; ret
0x0000000000432672 : add byte ptr [rax], al ; mov eax, 0x573e20 ; ret
0x0000000000432886 : add byte ptr [rax], al ; mov eax, 0x573e27 ; ret
0x0000000000432bdb : add byte ptr [rax], al ; mov eax, 0x573e4a ; ret
0x0000000000432e13 : add byte ptr [rax], al ; mov eax, 0x573e51 ; ret
0x0000000000432aaf : add byte ptr [rax], al ; mov eax, 0x573e6d ; ret
0x0000000000432d13 : add byte ptr [rax], al ; mov eax, 0x573e74 ; ret
0x0000000000432a91 : add byte ptr [rax], al ; mov eax, 0x573e7b ; ret
0x0000000000432cfb : add byte ptr [rax], al ; mov eax, 0x573e82 ; ret
0x0000000000432a7f : add byte ptr [rax], al ; mov eax, 0x573e89 ; ret
0x0000000000432a65 : add byte ptr [rax], al ; mov eax, 0x573e97 ; ret
0x0000000000432ce9 : add byte ptr [rax], al ; mov eax, 0x573e9e ; ret
0x0000000000432a47 : add byte ptr [rax], al ; mov eax, 0x573ea5 ; ret
0x0000000000432cd1 : add byte ptr [rax], al ; mov eax, 0x573eac ; ret
0x0000000000432a35 : add byte ptr [rax], al ; mov eax, 0x573eb3 ; ret
0x0000000000432cbf : add byte ptr [rax], al ; mov eax, 0x573eba ; ret
0x00000000004329f5 : add byte ptr [rax], al ; mov eax, 0x573edd ; ret
0x0000000000432bbd : add byte ptr [rax], al ; mov eax, 0x573f0e ; ret
0x0000000000432deb : add byte ptr [rax], al ; mov eax, 0x573f15 ; ret
0x0000000000432bab : add byte ptr [rax], al ; mov eax, 0x573f1c ; ret
0x0000000000432dd9 : add byte ptr [rax], al ; mov eax, 0x573f23 ; ret
0x0000000000432b99 : add byte ptr [rax], al ; mov eax, 0x573f2a ; ret
0x0000000000432dc7 : add byte ptr [rax], al ; mov eax, 0x573f31 ; ret
0x0000000000432b87 : add byte ptr [rax], al ; mov eax, 0x573f38 ; ret
0x0000000000432db5 : add byte ptr [rax], al ; mov eax, 0x573f3f ; ret
0x0000000000432b59 : add byte ptr [rax], al ; mov eax, 0x573f62 ; ret
0x0000000000432d91 : add byte ptr [rax], al ; mov eax, 0x573f69 ; ret
0x0000000000432b47 : add byte ptr [rax], al ; mov eax, 0x573f70 ; ret
0x0000000000432d7f : add byte ptr [rax], al ; mov eax, 0x573f77 ; ret
0x0000000000432b35 : add byte ptr [rax], al ; mov eax, 0x573f7e ; ret
0x0000000000432d6d : add byte ptr [rax], al ; mov eax, 0x573f85 ; ret
0x0000000000432b23 : add byte ptr [rax], al ; mov eax, 0x573f8c ; ret
0x0000000000432d5b : add byte ptr [rax], al ; mov eax, 0x573f93 ; ret
0x0000000000432b11 : add byte ptr [rax], al ; mov eax, 0x573f9a ; ret
0x0000000000432d49 : add byte ptr [rax], al ; mov eax, 0x573fa1 ; ret
0x0000000000432aff : add byte ptr [rax], al ; mov eax, 0x573fa8 ; ret
0x0000000000432d37 : add byte ptr [rax], al ; mov eax, 0x573faf ; ret
0x00000000004329b6 : add byte ptr [rax], al ; mov eax, 0x573fbd ; ret
0x0000000000432c83 : add byte ptr [rax], al ; mov eax, 0x573fc4 ; ret
0x0000000000432998 : add byte ptr [rax], al ; mov eax, 0x573fe0 ; ret
0x0000000000432c6b : add byte ptr [rax], al ; mov eax, 0x573fe7 ; ret
0x0000000000432986 : add byte ptr [rax], al ; mov eax, 0x573fee ; ret
0x0000000000432c59 : add byte ptr [rax], al ; mov eax, 0x573ff5 ; ret
0x0000000000432974 : add byte ptr [rax], al ; mov eax, 0x573ffc ; ret
0x0000000000432c47 : add byte ptr [rax], al ; mov eax, 0x574003 ; ret
0x0000000000432962 : add byte ptr [rax], al ; mov eax, 0x57400a ; ret
0x0000000000432c35 : add byte ptr [rax], al ; mov eax, 0x574011 ; ret
0x0000000000432950 : add byte ptr [rax], al ; mov eax, 0x574018 ; ret
0x0000000000432c23 : add byte ptr [rax], al ; mov eax, 0x57401f ; ret
0x000000000043293e : add byte ptr [rax], al ; mov eax, 0x574026 ; ret
0x0000000000432c11 : add byte ptr [rax], al ; mov eax, 0x57402d ; ret
0x000000000043291a : add byte ptr [rax], al ; mov eax, 0x574034 ; ret
0x0000000000432bff : add byte ptr [rax], al ; mov eax, 0x57403b ; ret
0x000000000043292c : add byte ptr [rax], al ; mov eax, 0x574049 ; ret
0x0000000000432aed : add byte ptr [rax], al ; mov eax, 0x574050 ; ret
0x0000000000432d25 : add byte ptr [rax], al ; mov eax, 0x574057 ; ret
0x0000000000432adb : add byte ptr [rax], al ; mov eax, 0x57405e ; ret
0x0000000000432608 : add byte ptr [rax], al ; mov eax, 0x57406c ; ret
0x0000000000433067 : add byte ptr [rax], al ; mov eax, 0x5740e7 ; ret
0x000000000043371e : add byte ptr [rax], al ; mov eax, 0x574508 ; ret
0x000000000043c48e : add byte ptr [rax], al ; mov eax, 0x574e58 ; ret
0x000000000043c4de : add byte ptr [rax], al ; mov eax, 0x575028 ; ret
0x000000000043c8be : add byte ptr [rax], al ; mov eax, 0x575188 ; ret
0x000000000043c90e : add byte ptr [rax], al ; mov eax, 0x575358 ; ret
0x000000000046e56e : add byte ptr [rax], al ; mov eax, 0x57aa00 ; ret
0x000000000046e57e : add byte ptr [rax], al ; mov eax, 0x57aa18 ; ret
0x000000000046e58e : add byte ptr [rax], al ; mov eax, 0x57aa30 ; ret
0x000000000046e59e : add byte ptr [rax], al ; mov eax, 0x57aa48 ; ret
0x000000000046e5ae : add byte ptr [rax], al ; mov eax, 0x57aa60 ; ret
0x000000000049f9de : add byte ptr [rax], al ; mov eax, 0x5870f8 ; ret
0x000000000049f9ee : add byte ptr [rax], al ; mov eax, 0x587150 ; ret
0x000000000049f9fe : add byte ptr [rax], al ; mov eax, 0x5871a8 ; ret
0x00000000004a51fe : add byte ptr [rax], al ; mov eax, 0x587478 ; ret
0x00000000004a520e : add byte ptr [rax], al ; mov eax, 0x5874d0 ; ret
0x00000000004a521e : add byte ptr [rax], al ; mov eax, 0x587528 ; ret
0x00000000004a558e : add byte ptr [rax], al ; mov eax, 0x5875d8 ; ret
0x00000000004a559e : add byte ptr [rax], al ; mov eax, 0x587630 ; ret
0x00000000004a55ae : add byte ptr [rax], al ; mov eax, 0x587688 ; ret
0x00000000004a55be : add byte ptr [rax], al ; mov eax, 0x5876e0 ; ret
0x00000000004a55ce : add byte ptr [rax], al ; mov eax, 0x587738 ; ret
0x00000000004a55de : add byte ptr [rax], al ; mov eax, 0x587790 ; ret
0x00000000004a55ee : add byte ptr [rax], al ; mov eax, 0x5877e8 ; ret
0x00000000004a55fe : add byte ptr [rax], al ; mov eax, 0x587840 ; ret
0x00000000004a560e : add byte ptr [rax], al ; mov eax, 0x587898 ; ret
0x00000000004a561e : add byte ptr [rax], al ; mov eax, 0x5878f0 ; ret
0x00000000004a562e : add byte ptr [rax], al ; mov eax, 0x587948 ; ret
0x00000000004a563e : add byte ptr [rax], al ; mov eax, 0x5879a0 ; ret
0x00000000004a564e : add byte ptr [rax], al ; mov eax, 0x5879f8 ; ret
0x00000000004a565e : add byte ptr [rax], al ; mov eax, 0x587a50 ; ret
0x00000000004a566e : add byte ptr [rax], al ; mov eax, 0x587aa8 ; ret
0x00000000004a567e : add byte ptr [rax], al ; mov eax, 0x587b00 ; ret
0x00000000004a568e : add byte ptr [rax], al ; mov eax, 0x587b58 ; ret
0x00000000004a59be : add byte ptr [rax], al ; mov eax, 0x587bc0 ; ret
0x00000000004a59ce : add byte ptr [rax], al ; mov eax, 0x587c18 ; ret
0x00000000004a59de : add byte ptr [rax], al ; mov eax, 0x587c70 ; ret
0x00000000004a59ee : add byte ptr [rax], al ; mov eax, 0x587cc8 ; ret
0x00000000004a96fe : add byte ptr [rax], al ; mov eax, 0x588468 ; ret
0x00000000004a970e : add byte ptr [rax], al ; mov eax, 0x5884c0 ; ret
0x00000000004a971e : add byte ptr [rax], al ; mov eax, 0x588518 ; ret
0x00000000004a972e : add byte ptr [rax], al ; mov eax, 0x588570 ; ret
0x00000000004a973e : add byte ptr [rax], al ; mov eax, 0x5885c8 ; ret
0x00000000004a9e1e : add byte ptr [rax], al ; mov eax, 0x588678 ; ret
0x00000000004a9e2e : add byte ptr [rax], al ; mov eax, 0x5886d0 ; ret
0x00000000004a9e3e : add byte ptr [rax], al ; mov eax, 0x588728 ; ret
0x00000000004a9e4e : add byte ptr [rax], al ; mov eax, 0x588780 ; ret
0x00000000004a9e5e : add byte ptr [rax], al ; mov eax, 0x5887d8 ; ret
0x00000000004a9e6e : add byte ptr [rax], al ; mov eax, 0x588830 ; ret
0x00000000004a9e7e : add byte ptr [rax], al ; mov eax, 0x588888 ; ret
0x00000000004a9e8e : add byte ptr [rax], al ; mov eax, 0x5888e0 ; ret
0x00000000004a9e9e : add byte ptr [rax], al ; mov eax, 0x588938 ; ret
0x00000000004a9ece : add byte ptr [rax], al ; mov eax, 0x588990 ; ret
0x00000000004aafbe : add byte ptr [rax], al ; mov eax, 0x589010 ; ret
0x00000000004aafce : add byte ptr [rax], al ; mov eax, 0x589068 ; ret
0x00000000004aafde : add byte ptr [rax], al ; mov eax, 0x5890c0 ; ret
0x00000000004aafee : add byte ptr [rax], al ; mov eax, 0x589118 ; ret
0x00000000004abbfe : add byte ptr [rax], al ; mov eax, 0x589320 ; ret
0x00000000004abc0e : add byte ptr [rax], al ; mov eax, 0x589378 ; ret
0x00000000004abc1e : add byte ptr [rax], al ; mov eax, 0x5893d0 ; ret
0x00000000004abc2e : add byte ptr [rax], al ; mov eax, 0x589428 ; ret
0x00000000004abc3e : add byte ptr [rax], al ; mov eax, 0x589480 ; ret
0x00000000004abc4e : add byte ptr [rax], al ; mov eax, 0x5894d8 ; ret
0x00000000004ac1de : add byte ptr [rax], al ; mov eax, 0x589548 ; ret
0x00000000004ac1ee : add byte ptr [rax], al ; mov eax, 0x5895a0 ; ret
0x00000000004ac98e : add byte ptr [rax], al ; mov eax, 0x5895f8 ; ret
0x00000000004ac99e : add byte ptr [rax], al ; mov eax, 0x589650 ; ret
0x00000000004ac9ae : add byte ptr [rax], al ; mov eax, 0x5896a8 ; ret
0x00000000004ac9be : add byte ptr [rax], al ; mov eax, 0x589700 ; ret
0x00000000004b01ce : add byte ptr [rax], al ; mov eax, 0x58a010 ; ret
0x00000000004bd35e : add byte ptr [rax], al ; mov eax, 0x590f68 ; ret
0x00000000004bd81e : add byte ptr [rax], al ; mov eax, 0x5910a8 ; ret
0x00000000004c0f6e : add byte ptr [rax], al ; mov eax, 0x592000 ; ret
0x00000000004c388e : add byte ptr [rax], al ; mov eax, 0x5b8020 ; ret
0x00000000004e341e : add byte ptr [rax], al ; mov eax, 0x5bd760 ; ret
0x00000000004e34ae : add byte ptr [rax], al ; mov eax, 0x5bd8c8 ; ret
0x00000000004e34be : add byte ptr [rax], al ; mov eax, 0x5bd940 ; ret
0x00000000004e34ce : add byte ptr [rax], al ; mov eax, 0x5bd9b8 ; ret
0x00000000004e34de : add byte ptr [rax], al ; mov eax, 0x5bda30 ; ret
0x00000000004e397e : add byte ptr [rax], al ; mov eax, 0x5bdab8 ; ret
0x000000000055988e : add byte ptr [rax], al ; mov eax, 0x5deab5 ; ret
0x000000000055989e : add byte ptr [rax], al ; mov eax, 0x5deac4 ; ret
0x00000000005598ae : add byte ptr [rax], al ; mov eax, 0x5dead9 ; ret
0x00000000005598be : add byte ptr [rax], al ; mov eax, 0x5deaf1 ; ret
0x00000000005598ce : add byte ptr [rax], al ; mov eax, 0x5deafe ; ret
0x000000000045ea5e : add byte ptr [rax], al ; mov eax, 0x81fc10 ; ret
0x000000000045f67e : add byte ptr [rax], al ; mov eax, 0x81fcb0 ; ret
0x000000000046266e : add byte ptr [rax], al ; mov eax, 0x8201b0 ; ret
0x000000000047883e : add byte ptr [rax], al ; mov eax, 0x8206f0 ; ret
0x0000000000478e7e : add byte ptr [rax], al ; mov eax, 0x820740 ; ret
0x000000000047935e : add byte ptr [rax], al ; mov eax, 0x820790 ; ret
0x0000000000479a4e : add byte ptr [rax], al ; mov eax, 0x820830 ; ret
0x0000000000479afe : add byte ptr [rax], al ; mov eax, 0x820880 ; ret
0x000000000047acbe : add byte ptr [rax], al ; mov eax, 0x820940 ; ret
0x000000000047affe : add byte ptr [rax], al ; mov eax, 0x820990 ; ret
0x000000000048c71e : add byte ptr [rax], al ; mov eax, 0x821590 ; ret
0x000000000049ce6e : add byte ptr [rax], al ; mov eax, 0x822780 ; ret
0x00000000004ac24e : add byte ptr [rax], al ; mov eax, 0x823d00 ; ret
0x000000000050d6fe : add byte ptr [rax], al ; mov eax, 0x8289e0 ; ret
0x00000000004ca9be : add byte ptr [rax], al ; mov eax, 0x82c450 ; ret
0x000000000048f4c8 : add byte ptr [rax], al ; mov eax, 0x82fc68 ; ret
0x000000000041965e : add byte ptr [rax], al ; mov eax, 0x8c ; ret
0x0000000000486bf1 : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000402d9b : add byte ptr [rax], al ; mov eax, 1 ; pop rbx ; ret
0x0000000000423114 : add byte ptr [rax], al ; mov eax, 1 ; pop rdx ; ret
0x000000000040dfb5 : add byte ptr [rax], al ; mov eax, 1 ; ret
0x00000000004db70e : add byte ptr [rax], al ; mov eax, 2 ; ret
0x000000000040d9ae : add byte ptr [rax], al ; mov eax, 7 ; ret
0x000000000043b368 : add byte ptr [rax], al ; mov eax, dword ptr [rax + 0x278] ; ret
0x000000000042b8ee : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x140] ; ret
0x000000000042b91e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x150] ; ret
0x000000000042e56e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x190] ; ret
0x00000000004b79ae : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x20] ; ret
0x0000000000461bae : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x24] ; ret
0x000000000056080e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x00000000004b7b2e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x2c] ; ret
0x000000000042eb6e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x38] ; ret
0x000000000042e58e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x40] ; ret
0x000000000042e5ae : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x44] ; ret
0x000000000042bf8e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x48] ; ret
0x00000000004d035e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x64] ; ret
0x00000000004d033e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x68] ; ret
0x000000000042b98e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x90] ; ret
0x000000000042eb5e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0xa8] ; ret
0x000000000055f43e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0xb0] ; ret
0x000000000055e2ee : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0xb4] ; ret
0x00000000004d031e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0xc] ; ret
0x000000000043071e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0xd8] ; ret
0x0000000000456b0e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 4] ; ret
0x00000000004d032e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 8] ; ret
0x000000000042e5be : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; ret
0x00000000004cbeee : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; sub eax, dword ptr [rsi] ; ret
0x00000000004cb96e : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x360af2] ; ret
0x000000000045c49b : add byte ptr [rax], al ; mov eax, ebp ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000487921 : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop r14 ; pop r15 ; ret
0x00000000004034d7 : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004a6457 : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; ret
0x00000000004de7cb : add byte ptr [rax], al ; mov eax, ecx ; pop rbx ; pop r14 ; pop r15 ; ret
0x000000000045e9f1 : add byte ptr [rax], al ; mov eax, ecx ; pop rbx ; ret
0x00000000004cd901 : add byte ptr [rax], al ; mov eax, ecx ; pop rdx ; ret
0x000000000041957e : add byte ptr [rax], al ; mov eax, edi ; ret
0x0000000000479a5e : add byte ptr [rax], al ; mov eax, edx ; ret
0x000000000055e39e : add byte ptr [rax], al ; mov eax, esi ; xor esi, esi ; xor ecx, ecx ; mov edx, eax ; jmp 0x55e3b9
0x0000000000456717 : add byte ptr [rax], al ; mov eax, r14d ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004e8efb : add byte ptr [rax], al ; mov eax, r8d ; pop rbx ; ret
0x00000000004031cc : add byte ptr [rax], al ; mov edx, 0x56a214 ; call 0x48f3e9
0x0000000000541eee : add byte ptr [rax], al ; mov edx, 0x5d9950 ; jmp 0x53e1b9
0x00000000005e4353 : add byte ptr [rax], al ; mov edx, gs ; call qword ptr [rax]
0x0000000000403348 : add byte ptr [rax], al ; mov edx, r14d ; mov r9, r15 ; call rax
0x0000000000410788 : add byte ptr [rax], al ; mov edx, r14d ; mov r9, rbx ; call rax
0x00000000004f2a9e : add byte ptr [rax], al ; mov esi, 0x5d29e0 ; jmp 0x53ed39
0x00000000004700cd : add byte ptr [rax], al ; mov esi, 0xffffffff ; call rax
0x000000000042e85b : add byte ptr [rax], al ; mov esi, 5 ; mov rdx, rax ; jmp rcx
0x000000000042e89b : add byte ptr [rax], al ; mov esi, 6 ; mov rdx, rax ; jmp rcx
0x000000000042e8db : add byte ptr [rax], al ; mov esi, 7 ; mov rdx, rax ; jmp rcx
0x0000000000470359 : add byte ptr [rax], al ; mov esi, dword ptr [rsp + 0xc] ; call rax
0x00000000005e88e3 : add byte ptr [rax], al ; mov esi, ecx ; jmp qword ptr [rax]
0x000000000060b092 : add byte ptr [rax], al ; mov esi, gs ; add dword ptr [rax], eax ; fdivr st(1) ; out dx, al ; call qword ptr [rax]
0x00000000006170c2 : add byte ptr [rax], al ; mov esp, 0x180002ae ; in al, -0xc ; call qword ptr [rsi]
0x00000000005ec4c2 : add byte ptr [rax], al ; mov esp, 0x48000002 ; jo 0x5ec4b5 ; call rdi
0x00000000006015c2 : add byte ptr [rax], al ; mov esp, 0x48000153 ; push -0x14 ; jmp rdx
0x00000000006181c2 : add byte ptr [rax], al ; mov esp, 0x580002bf ; add ch, dh ; call qword ptr [rax]
0x0000000000607bc2 : add byte ptr [rax], al ; mov esp, 0x680001b9 ; cmp esi, ebp ; call qword ptr [rdi]
0x000000000060b4c2 : add byte ptr [rax], al ; mov esp, 0x780001f2 ; sbb ebp, edi ; call qword ptr [rax]
0x00000000005f86c2 : add byte ptr [rax], al ; mov esp, 0x880000c4 ; loopne 0x5f86bc ; call qword ptr [rsi]
0x00000000005f67c2 : add byte ptr [rax], al ; mov esp, 0xc80000a5 ; jmp rdi
0x0000000000609ec2 : add byte ptr [rax], al ; mov esp, 0xe80001dc ; ret 0xffee
0x0000000000616cc2 : add byte ptr [rax], al ; mov esp, 0xe80002aa ; scasd eax, dword ptr [rdi] ; hlt ; jmp rbx
0x000000000040812c : add byte ptr [rax], al ; mov qword ptr [rax], 0 ; ret
0x00000000004318fe : add byte ptr [rax], al ; mov qword ptr [rdi + 0x108], rsi ; ret
0x000000000046109e : add byte ptr [rax], al ; mov qword ptr [rdi + 0x10], rsi ; ret
0x000000000042eade : add byte ptr [rax], al ; mov qword ptr [rdi + 0x140], rsi ; ret
0x000000000042e34e : add byte ptr [rax], al ; mov qword ptr [rdi + 0x150], rsi ; ret
0x000000000042eabe : add byte ptr [rax], al ; mov qword ptr [rdi + 0x168], rsi ; ret
0x000000000042d364 : add byte ptr [rax], al ; mov qword ptr [rdi + 0x178], rdx ; ret
0x000000000042e75e : add byte ptr [rax], al ; mov qword ptr [rdi + 0x180], rsi ; ret
0x000000000048ea9e : add byte ptr [rax], al ; mov qword ptr [rdi + 0x18], rsi ; ret
0x0000000000463b6e : add byte ptr [rax], al ; mov qword ptr [rdi + 0x20], rsi ; ret
0x000000000042eaae : add byte ptr [rax], al ; mov qword ptr [rdi + 0x210], rsi ; ret
0x000000000042eace : add byte ptr [rax], al ; mov qword ptr [rdi + 0x218], rsi ; ret
0x00000000004261d5 : add byte ptr [rax], al ; mov qword ptr [rdi + 0x288], rdx ; ret
0x000000000048eabe : add byte ptr [rax], al ; mov qword ptr [rdi + 0x28], rsi ; ret
0x000000000042cd05 : add byte ptr [rax], al ; mov qword ptr [rdi + 0x2c0], rdx ; ret
0x000000000042cd15 : add byte ptr [rax], al ; mov qword ptr [rdi + 0x2d0], rdx ; ret
0x000000000042cde5 : add byte ptr [rax], al ; mov qword ptr [rdi + 0x2e8], rdx ; ret
0x000000000050079e : add byte ptr [rax], al ; mov qword ptr [rdi + 0x30], rsi ; ret
0x00000000004ffd3e : add byte ptr [rax], al ; mov qword ptr [rdi + 0x38], rsi ; ret
0x000000000050074e : add byte ptr [rax], al ; mov qword ptr [rdi + 0x40], rsi ; mov dword ptr [rdi + 0x48], edx ; ret
0x0000000000463b9e : add byte ptr [rax], al ; mov qword ptr [rdi + 0x40], rsi ; ret
0x000000000043189e : add byte ptr [rax], al ; mov qword ptr [rdi + 0x50], rsi ; ret
0x00000000004318be : add byte ptr [rax], al ; mov qword ptr [rdi + 0x58], rsi ; ret
0x00000000004318de : add byte ptr [rax], al ; mov qword ptr [rdi + 0x60], rsi ; ret
0x000000000055ae8e : add byte ptr [rax], al ; mov qword ptr [rdi + 0x68], rsi ; ret
0x00000000005660ee : add byte ptr [rax], al ; mov qword ptr [rdi + 0x70], rsi ; ret
0x0000000000500855 : add byte ptr [rax], al ; mov qword ptr [rdi + 0x88], rdx ; ret
0x00000000004551ad : add byte ptr [rax], al ; mov qword ptr [rdi + 0x90], rax ; ret
0x0000000000500865 : add byte ptr [rax], al ; mov qword ptr [rdi + 0x98], rdx ; ret
0x000000000042eaee : add byte ptr [rax], al ; mov qword ptr [rdi + 0x98], rsi ; ret
0x000000000042d355 : add byte ptr [rax], al ; mov qword ptr [rdi + 0xa0], rdx ; ret
0x00000000004551be : add byte ptr [rax], al ; mov qword ptr [rdi + 0xa0], rsi ; ret
0x0000000000500875 : add byte ptr [rax], al ; mov qword ptr [rdi + 0xa8], rdx ; ret
0x000000000042d32e : add byte ptr [rax], al ; mov qword ptr [rdi + 0xa8], rsi ; ret
0x000000000042d33e : add byte ptr [rax], al ; mov qword ptr [rdi + 0xb0], rsi ; ret
0x0000000000500885 : add byte ptr [rax], al ; mov qword ptr [rdi + 0xb8], rdx ; ret
0x000000000043191e : add byte ptr [rax], al ; mov qword ptr [rdi + 0xb8], rsi ; ret
0x000000000045514f : add byte ptr [rax], al ; mov qword ptr [rdi + 0xc0], rax ; ret
0x00000000004319ce : add byte ptr [rax], al ; mov qword ptr [rdi + 0xc0], rsi ; ret
0x00000000005000ab : add byte ptr [rax], al ; mov qword ptr [rdi + 0xc8], rax ; ret
0x0000000000500895 : add byte ptr [rax], al ; mov qword ptr [rdi + 0xc8], rdx ; ret
0x00000000004319de : add byte ptr [rax], al ; mov qword ptr [rdi + 0xc8], rsi ; ret
0x000000000046108e : add byte ptr [rax], al ; mov qword ptr [rdi + 8], rsi ; ret
0x000000000054869e : add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; mov rax, rsi ; ret
0x00000000004c63be : add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x000000000055b65e : add byte ptr [rax], al ; mov qword ptr [rip + 0x2cfe79], rdi ; ret
0x000000000054867e : add byte ptr [rax], al ; mov qword ptr [rip + 0x2e6119], rdi ; ret
0x000000000050d16e : add byte ptr [rax], al ; mov qword ptr [rip + 0x3214d1], rdi ; ret
0x00000000004e664e : add byte ptr [rax], al ; mov qword ptr [rip + 0x347f71], rdi ; ret
0x000000000049a81e : add byte ptr [rax], al ; mov qword ptr [rip + 0x3910c9], rdi ; ret
0x000000000049643e : add byte ptr [rax], al ; mov qword ptr [rip + 0x3954a1], rdi ; ret
0x000000000048f3ae : add byte ptr [rax], al ; mov qword ptr [rip + 0x39c521], rdi ; ret
0x000000000048f2ce : add byte ptr [rax], al ; mov qword ptr [rip + 0x39c5f1], rdi ; ret
0x000000000048f27e : add byte ptr [rax], al ; mov qword ptr [rip + 0x39c629], rdi ; ret
0x000000000048f25e : add byte ptr [rax], al ; mov qword ptr [rip + 0x39c639], rdi ; ret
0x000000000048f26e : add byte ptr [rax], al ; mov qword ptr [rip + 0x39c641], rdi ; ret
0x0000000000411f5d : add byte ptr [rax], al ; mov r14, rcx ; call r14
0x00000000004aa4d4 : add byte ptr [rax], al ; mov r8, r14 ; call rax
0x000000000040789d : add byte ptr [rax], al ; mov r9, r12 ; call rax
0x000000000040396d : add byte ptr [rax], al ; mov r9, r15 ; call rax
0x0000000000410b45 : add byte ptr [rax], al ; mov r9, rbx ; call r10
0x00000000004086ab : add byte ptr [rax], al ; mov r9, rbx ; call rax
0x0000000000495fa5 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x10] ; jmp rax
0x0000000000426641 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x110] ; ret
0x00000000004371e6 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x258] ; ret
0x000000000043d581 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x260] ; ret
0x00000000004371c8 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x268] ; ret
0x000000000043d5c1 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x2a0] ; ret
0x000000000042ce47 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x68] ; jmp rax
0x000000000043190e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x108] ; ret
0x000000000042986e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x10] ; ret
0x000000000042e35e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x150] ; ret
0x000000000042e33e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x170] ; ret
0x000000000042e76e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x180] ; ret
0x000000000042b48e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x18] ; ret
0x0000000000463b5e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x20] ; ret
0x00000000004974ee : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x28] ; jmp rax
0x0000000000489eee : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x28] ; ret
0x00000000005007ae : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x30] ; ret
0x000000000056076e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x38] ; mov dword ptr [rax + 8], esi ; ret
0x00000000004ffd4e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x38] ; ret
0x0000000000463b8e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x40] ; ret
0x00000000005410ae : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x48] ; ret
0x00000000004318ae : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x50] ; ret
0x00000000004318ce : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x58] ; ret
0x00000000004318ee : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x60] ; ret
0x00000000004ca95e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x00000000004ca96e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x70] ; ret
0x00000000004ca97e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x78] ; ret
0x00000000004ca98e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x80] ; ret
0x00000000004cb4de : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x90] ; ret
0x00000000004cb4ee : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x98] ; ret
0x00000000004ca9ae : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xa0] ; ret
0x000000000055f42e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xa8] ; ret
0x000000000042b21e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xb0] ; ret
0x000000000043192e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xb8] ; ret
0x000000000055e2fe : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xc0] ; ret
0x000000000055e33e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xc8] ; ret
0x000000000055e34e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xd0] ; ret
0x000000000055e35e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xe0] ; ret
0x000000000042dcce : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 8] ; ret
0x00000000004d01ae : add byte ptr [rax], al ; mov rax, qword ptr [rdi] ; mov eax, dword ptr [rax + 0xc] ; ret
0x00000000004d02be : add byte ptr [rax], al ; mov rax, qword ptr [rdi] ; mov eax, dword ptr [rax + 4] ; ret
0x00000000004610ce : add byte ptr [rax], al ; mov rax, qword ptr [rdi] ; mov eax, dword ptr [rax] ; ret
0x000000000049c6ce : add byte ptr [rax], al ; mov rax, qword ptr [rdi] ; mov qword ptr [rdi], rsi ; ret
0x00000000004d000e : add byte ptr [rax], al ; mov rax, qword ptr [rdi] ; mov rax, qword ptr [rax + 0x10] ; ret
0x0000000000558cee : add byte ptr [rax], al ; mov rax, qword ptr [rdi] ; mov rax, qword ptr [rax + 0x18] ; ret
0x0000000000558ece : add byte ptr [rax], al ; mov rax, qword ptr [rdi] ; mov rax, qword ptr [rax + 0x28] ; ret
0x00000000004610be : add byte ptr [rax], al ; mov rax, qword ptr [rdi] ; mov rax, qword ptr [rax + 8] ; ret
0x000000000042dcbe : add byte ptr [rax], al ; mov rax, qword ptr [rdi] ; ret
0x000000000055b64e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x2cfe89] ; ret
0x00000000004e5b9e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3412a9] ; jmp rax
0x00000000004e665e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x347f61] ; ret
0x000000000049c6ae : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x38f241] ; ret
0x000000000048f6be : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x39c041] ; ret
0x000000000048f39e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x39c531] ; ret
0x000000000048f31e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x39c5a9] ; ret
0x000000000048f29e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x39c621] ; ret
0x000000000048f28e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x39c629] ; ret
0x000000000048f24e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x39c659] ; ret
0x000000000048f22e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x39c669] ; ret
0x000000000048f23e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x39c671] ; ret
0x000000000044334e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3db881] ; ret
0x000000000046c4bc : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x000000000048121e : add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000042c0d1 : add byte ptr [rax], al ; mov rax, rdx ; pop rdx ; ret
0x000000000043156c : add byte ptr [rax], al ; mov rax, rsi ; ret
0x000000000048a88f : add byte ptr [rax], al ; mov rcx, r12 ; call rax
0x000000000041c65d : add byte ptr [rax], al ; mov rcx, r13 ; mov r9, rbp ; call rax
0x00000000004047d1 : add byte ptr [rax], al ; mov rcx, r13 ; mov r9, rbx ; call rax
0x0000000000404900 : add byte ptr [rax], al ; mov rcx, r14 ; mov r9, rbx ; call rax
0x0000000000408563 : add byte ptr [rax], al ; mov rcx, rbp ; mov r9, r13 ; call rax
0x000000000041c9c6 : add byte ptr [rax], al ; mov rcx, rbp ; mov r9, r15 ; call rax
0x0000000000406c25 : add byte ptr [rax], al ; mov rcx, rbp ; mov r9, rbx ; call rax
0x000000000048a39a : add byte ptr [rax], al ; mov rcx, rbx ; call rax
0x00000000004ed3f7 : add byte ptr [rax], al ; mov rdi, qword ptr [r15] ; call 0x4e96d7
0x000000000040bcdd : add byte ptr [rax], al ; mov rdi, r12 ; call r14
0x000000000040b24d : add byte ptr [rax], al ; mov rdi, r12 ; call r15
0x000000000041fc32 : add byte ptr [rax], al ; mov rdi, r12 ; call rax
0x000000000040cf90 : add byte ptr [rax], al ; mov rdi, r12 ; mov edx, ebp ; call r14
0x000000000040b3ac : add byte ptr [rax], al ; mov rdi, r12 ; mov edx, r14d ; call r15
0x00000000004b8c1b : add byte ptr [rax], al ; mov rdi, r12 ; mov rcx, rbx ; call r8
0x000000000043419e : add byte ptr [rax], al ; mov rdi, r13 ; call 0x4d03f7
0x00000000004084dd : add byte ptr [rax], al ; mov rdi, r13 ; call qword ptr [rax]
0x000000000040ee35 : add byte ptr [rax], al ; mov rdi, r13 ; call r14
0x00000000004101ae : add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x00000000004101f6 : add byte ptr [rax], al ; mov rdi, r13 ; mov edx, r14d ; call rbx
0x000000000046efae : add byte ptr [rax], al ; mov rdi, r13 ; mov rsi, r14 ; call rbx
0x0000000000434150 : add byte ptr [rax], al ; mov rdi, r14 ; call 0x4d0397
0x000000000040504c : add byte ptr [rax], al ; mov rdi, r14 ; call r12
0x0000000000461edd : add byte ptr [rax], al ; mov rdi, r14 ; call rax
0x000000000040ac05 : add byte ptr [rax], al ; mov rdi, r14 ; call rcx
0x0000000000405a8c : add byte ptr [rax], al ; mov rdi, r14 ; mov edx, r15d ; call r12
0x0000000000461a04 : add byte ptr [rax], al ; mov rdi, r14 ; mov rdx, rbx ; call r15
0x0000000000442db5 : add byte ptr [rax], al ; mov rdi, r14 ; mov rsi, r12 ; call r15
0x000000000055050c : add byte ptr [rax], al ; mov rdi, r14 ; mov rsi, r12 ; call rax
0x0000000000567ade : add byte ptr [rax], al ; mov rdi, r14 ; mov rsi, rbx ; call rax
0x0000000000461e5d : add byte ptr [rax], al ; mov rdi, r15 ; call rax
0x000000000041d0c1 : add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x00000000004aa069 : add byte ptr [rax], al ; mov rdi, r15 ; mov r8, r14 ; call rax
0x000000000042cb93 : add byte ptr [rax], al ; mov rdi, rax ; mov rax, qword ptr [rdi] ; ret
0x000000000048492c : add byte ptr [rax], al ; mov rdi, rax ; mov rcx, rbx ; call r8
0x000000000041c60d : add byte ptr [rax], al ; mov rdi, rbp ; call qword ptr [rax]
0x00000000004f3f10 : add byte ptr [rax], al ; mov rdi, rbx ; call 0x4d01b7
0x00000000004432d4 : add byte ptr [rax], al ; mov rdi, rbx ; call r14
0x00000000004086ee : add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x000000000043a3e1 : add byte ptr [rax], al ; mov rdi, rbx ; call rcx
0x0000000000461788 : add byte ptr [rax], al ; mov rdi, rbx ; mov ecx, ebp ; call r14
0x00000000004e6405 : add byte ptr [rax], al ; mov rdi, rbx ; mov esi, ebp ; call rax
0x0000000000461843 : add byte ptr [rax], al ; mov rdi, rbx ; mov r14, r10 ; call r14
0x00000000004612d6 : add byte ptr [rax], al ; mov rdi, rbx ; mov rdx, r14 ; call r15
0x0000000000461aca : add byte ptr [rax], al ; mov rdi, rbx ; mov rdx, rbx ; call r12
0x0000000000429ba6 : add byte ptr [rax], al ; mov rdi, rbx ; mov rsi, r14 ; call qword ptr [rax]
0x00000000004d095b : add byte ptr [rax], al ; mov rdi, rbx ; mov rsi, r14 ; call rax
0x0000000000443207 : add byte ptr [rax], al ; mov rdi, rbx ; mov rsi, rbp ; call r14
0x000000000043cde6 : add byte ptr [rax], al ; mov rdi, rbx ; mov rsi, rbp ; call rax
0x000000000042e860 : add byte ptr [rax], al ; mov rdx, rax ; jmp rcx
0x000000000047e2c8 : add byte ptr [rax], al ; mov rdx, rcx ; call r9
0x000000000046fe47 : add byte ptr [rax], al ; mov rsi, qword ptr [rsp + 0x28] ; call rax
0x00000000004aa68d : add byte ptr [rax], al ; mov rsi, rdi ; mov r8, r14 ; call rax
0x0000000000617852 : add byte ptr [rax], al ; mov sil, 2 ; add al, cl ; out -0xc, al ; call qword ptr [rax]
0x00000000005ede92 : add byte ptr [rax], al ; mov word ptr [rax + rax], ds ; add al, bh ; mov bh, -0x1e ; jmp qword ptr [rdx]
0x0000000000605292 : add byte ptr [rax], al ; mov word ptr [rax - 0x4d07ffff], ss ; in eax, dx ; jmp rax
0x00000000005fee92 : add byte ptr [rax], al ; mov word ptr [rcx + rax], gs ; add byte ptr [rax + 0x31], bl ; jmp 0x5feea4
0x0000000000601692 : add byte ptr [rax], al ; mov word ptr [rcx + rax], ss ; sub byte ptr [rsi - 0x14], ch ; call qword ptr [rsi]
0x0000000000617392 : add byte ptr [rax], al ; mov word ptr [rcx - 0x1af7fffe], dr0 ; hlt ; call qword ptr [rsi]
0x00000000005fdb92 : add byte ptr [rax], al ; mov word ptr [rcx], ds ; add dword ptr [rax], eax ; ret
0x00000000005ec392 : add byte ptr [rax], al ; mov word ptr [rcx], es ; add byte ptr [rax], al ; call 0x275ea50a
0x0000000000603992 : add byte ptr [rax], al ; mov word ptr [rdi + 1], dr0 ; add byte ptr [rax], bl ; adc ch, ch ; jmp qword ptr [rcx]
0x0000000000612492 : add byte ptr [rax], al ; mov word ptr [rdx + 2], fs ; add byte ptr [rax - 0x78], cl ; call qword ptr [rdx]
0x0000000000617092 : add byte ptr [rax], al ; mov word ptr [rsi - 0x1bf7fffe], gs ; hlt ; call qword ptr [rsi]
0x00000000005ec4aa : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax], dh ; jo 0x5ec49d ; jmp qword ptr [rdx]
0x00000000005ffaaa : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; cmp byte ptr [rcx], al ; add byte ptr [rax - 0x80], ah ; jmp 0x5ffabc
0x00000000005efdaa : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; cmp eax, dword ptr [rax] ; add byte ptr [rax], ah ; out -0x1d, al ; call qword ptr [rsi]
0x0000000000608aaa : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; enter 1, 0x20 ; push -0x12 ; jmp qword ptr [rdi]
0x0000000000609eaa : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; fadd qword ptr [rcx] ; add al, ah ; ret 0xffee
0x00000000006116aa : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; push rsp ; add al, byte ptr [rax] ; jo 0x611708 ; jmp rdx
0x00000000006185aa : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000005df296 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x55
0x00000000006170aa : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; scasb al, byte ptr [rdi] ; add al, byte ptr [rax] ; adc ah, ah ; hlt ; call qword ptr [rsi]
0x00000000004cbede : add byte ptr [rax], al ; movsxd rax, dword ptr [rdi] ; ret
0x00000000004d03ee : add byte ptr [rax], al ; movsxd rax, esi ; or qword ptr [rdi + 0x10], rax ; ret
0x00000000004d041e : add byte ptr [rax], al ; movsxd rax, esi ; or qword ptr [rdi + 0x70], rax ; ret
0x000000000048f37e : add byte ptr [rax], al ; movups xmm0, xmmword ptr [rsi] ; movups xmmword ptr [rdi], xmm0 ; ret
0x00000000005e250a : add byte ptr [rax], al ; nop ; adc ah, ch ; call qword ptr [rax]
0x00000000005f85be : add byte ptr [rax], al ; nop ; fld1 ; jmp rsi
0x00000000005f86de : add byte ptr [rax], al ; nop ; loopne 0x5f86d0 ; call qword ptr [rsi]
0x00000000004336cc : add byte ptr [rax], al ; nop ; mov eax, 0x574338 ; ret
0x00000000004485fc : add byte ptr [rax], al ; nop ; mov eax, 0x575b97 ; ret
0x000000000045da9c : add byte ptr [rax], al ; nop ; mov eax, 0x577c9c ; ret
0x00000000004a51ed : add byte ptr [rax], al ; nop ; mov eax, 0x587420 ; ret
0x00000000004e335d : add byte ptr [rax], al ; nop ; mov eax, 0x5bd5f8 ; ret
0x00000000004e339d : add byte ptr [rax], al ; nop ; mov eax, 0x5bd670 ; ret
0x00000000004e33dd : add byte ptr [rax], al ; nop ; mov eax, 0x5bd6e8 ; ret
0x000000000045e78d : add byte ptr [rax], al ; nop ; mov eax, 0x81fbc0 ; ret
0x000000000046065d : add byte ptr [rax], al ; nop ; mov eax, 0x81fd00 ; ret
0x00000000004794cc : add byte ptr [rax], al ; nop ; mov eax, 0x8207e0 ; ret
0x000000000047ce3c : add byte ptr [rax], al ; nop ; mov eax, 0x8209e0 ; ret
0x00000000004c63fd : add byte ptr [rax], al ; nop ; mov eax, 0x825110 ; ret
0x0000000000548add : add byte ptr [rax], al ; nop ; mov eax, 0x82a0e0 ; ret
0x00000000005f080e : add byte ptr [rax], al ; nop ; or ah, ah ; call qword ptr [rbx]
0x00000000004abbed : add byte ptr [rax], al ; nop ; ret
0x00000000005df286 : add byte ptr [rax], al ; nop ; ret 0x55
0x00000000005f2f9e : add byte ptr [rax], al ; nop ; xor al, 0xffffffffffffffe6 ; jmp rdi
0x000000000049ce8d : add byte ptr [rax], al ; nop ; xor eax, eax ; ret
0x00000000004c8f4a : add byte ptr [rax], al ; nop dword ptr [rax] ; ret
0x000000000049be3b : add byte ptr [rax], al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000004b7b4e : add byte ptr [rax], al ; not esi ; and dword ptr [rdi + 0x2c], esi ; ret
0x0000000000600312 : add byte ptr [rax], al ; or al, 0x41 ; add dword ptr [rax], eax ; clc ; lodsb al, byte ptr [rsi] ; jmp 0x600324
0x0000000000600d12 : add byte ptr [rax], al ; or al, 0x4b ; add dword ptr [rax], eax ; cwde ; sub al, -0x14 ; call rcx
0x0000000000602112 : add byte ptr [rax], al ; or al, 0x5f ; add dword ptr [rax], eax ; clc ; wait ; in al, dx ; jmp qword ptr [rsi]
0x0000000000604b12 : add byte ptr [rax], al ; or al, 0xffffffffffffff89 ; add dword ptr [rax], eax ; test al, -0x71 ; in eax, dx ; call rsp
0x0000000000616d12 : add byte ptr [rax], al ; or al, 0xffffffffffffffab ; add al, byte ptr [rax] ; call 0x226161df
0x0000000000617212 : add byte ptr [rax], al ; or al, 0xffffffffffffffb0 ; add al, byte ptr [rax] ; mov ah, ah ; hlt ; call qword ptr [rsi]
0x0000000000617412 : add byte ptr [rax], al ; or al, 0xffffffffffffffb2 ; add al, byte ptr [rax] ; in eax, -0xc ; call qword ptr [rsi]
0x00000000005f8e12 : add byte ptr [rax], al ; or al, 0xffffffffffffffcc ; add byte ptr [rax], al ; add cl, bpl ; jmp qword ptr [rbx]
0x000000000060bb12 : add byte ptr [rax], al ; or al, 0xfffffffffffffff9 ; add dword ptr [rax], eax ; fdivr dword ptr [rsi] ; out dx, eax ; jmp rsi
0x00000000005c3b42 : add byte ptr [rax], al ; or al, byte ptr [rax] ; add byte ptr [rax], al ; ret 0x5c0e
0x00000000005eb9db : add byte ptr [rax], al ; or bh, al ; call qword ptr [rax]
0x00000000004e91e9 : add byte ptr [rax], al ; or byte ptr [rax + 0x20], 0xd ; ret
0x00000000005c51ea : add byte ptr [rax], al ; or byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x00000000005fbdbf : add byte ptr [rax], al ; or dl, ch ; jmp rax
0x000000000046106e : add byte ptr [rax], al ; or dword ptr [rdi + 0x20], esi ; ret
0x00000000004b7b3e : add byte ptr [rax], al ; or dword ptr [rdi + 0x2c], esi ; ret
0x00000000005fbece : add byte ptr [rax], al ; or ebp, edx ; call rax
0x00000000005eae5b : add byte ptr [rax], al ; or edi, esi ; jmp rax
0x00000000004c63ae : add byte ptr [rax], al ; or esi, 2 ; mov dword ptr [rdi + 0x20], esi ; ret
0x0000000000429f7e : add byte ptr [rax], al ; or esi, dword ptr [rdi] ; mov dword ptr [rdi], esi ; mov eax, esi ; ret
0x00000000005efe0e : add byte ptr [rax], al ; out -0x1d, al ; call rbx
0x00000000005e98cb : add byte ptr [rax], al ; out -0xb, al ; call rax
0x00000000005c3516 : add byte ptr [rax], al ; outsb dx, byte ptr [rsi] ; ret 0x5c
0x000000000042c185 : add byte ptr [rax], al ; pop r8 ; jmp rax
0x00000000005f8f76 : add byte ptr [rax], al ; pop rax ; or al, 0xffffffffffffffe9 ; jmp qword ptr [rdi]
0x00000000004aaf5f : add byte ptr [rax], al ; pop rax ; ret
0x00000000005c34c6 : add byte ptr [rax], al ; pop rax ; ret 0x5c
0x00000000005ecda6 : add byte ptr [rax], al ; pop rax ; shl cl, 1 ; jmp qword ptr [rax]
0x0000000000611d52 : add byte ptr [rax], al ; pop rbx ; add al, byte ptr [rax] ; call 0x126110cf
0x00000000006013ef : add byte ptr [rax], al ; pop rbx ; in al, dx ; jmp rcx
0x00000000004e5f51 : add byte ptr [rax], al ; pop rbx ; jmp rax
0x00000000004a738e : add byte ptr [rax], al ; pop rbx ; pop r12 ; pop r14 ; pop r15 ; ret
0x000000000048f16e : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; jmp rax
0x0000000000426515 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000404efa : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; ret
0x000000000041b3a5 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004a4b10 : add byte ptr [rax], al ; pop rbx ; pop r14 ; ret
0x000000000043b6be : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000402da0 : add byte ptr [rax], al ; pop rbx ; ret
0x00000000005f1186 : add byte ptr [rax], al ; pop rcx ; in al, -1 ; ret
0x00000000005c374e : add byte ptr [rax], al ; pop rcx ; ret
0x00000000005f216a : add byte ptr [rax], al ; pop rdi ; add byte ptr [rax], al ; shl bh, -0x1c ; call rcx
0x0000000000402e58 : add byte ptr [rax], al ; pop rdx ; ret
0x00000000005df25e : add byte ptr [rax], al ; pop rsi ; ret 0x55
0x0000000000602b62 : add byte ptr [rax], al ; pop rsp ; imul eax, dword ptr [rcx], 0xeccac800 ; call qword ptr [rax]
0x00000000005f3862 : add byte ptr [rax], al ; pop rsp ; jbe 0x5f3870 ; add byte ptr [rax], cl ; mov dh, ah ; call rsp
0x0000000000617662 : add byte ptr [rax], al ; pop rsp ; mov ah, 2 ; add al, bh ; in eax, -0xc ; call qword ptr [rax]
0x0000000000617362 : add byte ptr [rax], al ; pop rsp ; mov cl, 2 ; add al, bh ; in al, -0xc ; call qword ptr [rsi]
0x0000000000604b62 : add byte ptr [rax], al ; pop rsp ; mov dword ptr [rcx], eax ; add byte ptr [rax], bl ; xchg eax, edx ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000618562 : add byte ptr [rax], al ; pop rsp ; ret
0x0000000000608462 : add byte ptr [rax], al ; pop rsp ; ret 1
0x0000000000618462 : add byte ptr [rax], al ; pop rsp ; ret 2
0x0000000000617062 : add byte ptr [rax], al ; pop rsp ; scasb al, byte ptr [rdi] ; add al, byte ptr [rax] ; clc ; jrcxz 0x617068 ; call qword ptr [rsi]
0x00000000005729d6 : add byte ptr [rax], al ; popfq ; ret 0x42
0x00000000005e6d03 : add byte ptr [rax], al ; push -0x11 ; call rax
0x0000000000611d9f : add byte ptr [rax], al ; push -0xd ; call qword ptr [rcx]
0x00000000005e178a : add byte ptr [rax], al ; push rax ; jmp rdx
0x00000000005f25ce : add byte ptr [rax], al ; push rax ; or ch, ah ; call qword ptr [rsi]
0x00000000005e1a5a : add byte ptr [rax], al ; push rax ; out -0x1d, al ; jmp rax
0x0000000000572ac6 : add byte ptr [rax], al ; push rax ; ret
0x00000000004ca80e : add byte ptr [rax], al ; push rbx ; mov rbx, rdi ; call qword ptr [rbx]
0x00000000005e8693 : add byte ptr [rax], al ; push rcx ; int1 ; jmp rax
0x00000000005c3746 : add byte ptr [rax], al ; push rcx ; ret
0x00000000005c349e : add byte ptr [rax], al ; push rdx ; ret 0x5c
0x000000000060f85a : add byte ptr [rax], al ; push rsp ; add al, byte ptr ss:[rax] ; loopne 0x60f87c ; call qword ptr [rcx]
0x000000000060fe5a : add byte ptr [rax], al ; push rsp ; cmp al, 2 ; add byte ptr [rax + 0x17], dl ; call qword ptr [rax]
0x00000000005f2b5a : add byte ptr [rax], al ; push rsp ; imul eax, dword ptr [rax], 0xe553c000 ; call rsp
0x00000000005e86f3 : add byte ptr [rax], al ; push rsp ; int1 ; jmp qword ptr [rax]
0x000000000060735a : add byte ptr [rax], al ; push rsp ; mov cl, 1 ; add byte ptr [rax], dl ; xor ch, dh ; jmp rsi
0x000000000061745a : add byte ptr [rax], al ; push rsp ; mov dl, 2 ; add byte ptr [rax - 0x1b], ah ; hlt ; call qword ptr [rsi]
0x00000000005df256 : add byte ptr [rax], al ; push rsp ; ret 0x55
0x0000000000606a5a : add byte ptr [rax], al ; push rsp ; test al, 1 ; add byte ptr [rax], dh ; or ebp, esi ; call rdi
0x00000000006105a2 : add byte ptr [rax], al ; pushfq ; add al, byte ptr [r8] ; sub byte ptr [rcx], bl ; call qword ptr [rax]
0x00000000005fb5a2 : add byte ptr [rax], al ; pushfq ; add byte ptr [rax], al ; call 0x115f9f89
0x0000000000600ba2 : add byte ptr [rax], al ; pushfq ; add qword ptr [r8], rax ; and rsp, rbp ; jmp qword ptr [rdi]
0x000000000060b7a2 : add byte ptr [rax], al ; pushfq ; cmc ; add dword ptr [rax], eax ; call 0x1260a6dc
0x0000000000609ba2 : add byte ptr [rax], al ; pushfq ; fld dword ptr [rcx] ; add byte ptr [rax], bh ; mov bl, -0x12 ; jmp rsp
0x000000000060c0a2 : add byte ptr [rax], al ; pushfq ; inc byte ptr [rcx] ; add byte ptr [rax], bh ; out dx, eax ; call qword ptr [rax]
0x00000000006176a2 : add byte ptr [rax], al ; pushfq ; mov ah, 2 ; add byte ptr [rax - 0x1a], bh ; hlt ; call qword ptr [rdi]
0x00000000006175a2 : add byte ptr [rax], al ; pushfq ; mov bl, 2 ; add al, bh ; in eax, -0xc ; call qword ptr [rsi]
0x00000000006178a2 : add byte ptr [rax], al ; pushfq ; mov dh, 2 ; add byte ptr [rax], bl ; out -0xc, eax ; call qword ptr [rdx]
0x000000000060bda2 : add byte ptr [rax], al ; pushfq ; sti ; add dword ptr [rax], eax ; test al, 0x48 ; out dx, eax ; jmp rcx
0x00000000005e221a : add byte ptr [rax], al ; rcl ch, -0x1c ; call rax
0x00000000005efa3e : add byte ptr [rax], al ; rcr al, -0x1d ; jmp qword ptr [rcx]
0x00000000005ed8ae : add byte ptr [rax], al ; rcr byte ptr [rax - 0x1e] ; call qword ptr [rdx]
0x00000000004046d3 : add byte ptr [rax], al ; ret
0x000000000044931d : add byte ptr [rax], al ; ret 0
0x000000000057476e : add byte ptr [rax], al ; ret 0x4361
0x000000000057a79e : add byte ptr [rax], al ; ret 0x46b9
0x000000000058955f : add byte ptr [rax], al ; ret 0x4a
0x00000000005d87c6 : add byte ptr [rax], al ; ret 0x53
0x00000000005df20f : add byte ptr [rax], al ; ret 0x55
0x00000000005df2ae : add byte ptr [rax], al ; ret 0x55c2
0x00000000005c66c6 : add byte ptr [rax], al ; ret 0x56ed
0x0000000000580456 : add byte ptr [rax], al ; ret 0x5810
0x00000000005c3456 : add byte ptr [rax], al ; ret 0x5c
0x00000000005c3466 : add byte ptr [rax], al ; ret 0x5c0d
0x00000000005c3b46 : add byte ptr [rax], al ; ret 0x5c0e
0x00000000005c448e : add byte ptr [rax], al ; ret 0x5cca
0x00000000005c510e : add byte ptr [rax], al ; ret 0x5cd1
0x00000000005c8106 : add byte ptr [rax], al ; ret 0x5ce7
0x00000000005c970e : add byte ptr [rax], al ; ret 0x5cf1
0x00000000005cb55e : add byte ptr [rax], al ; ret 0x5d04
0x00000000005d43be : add byte ptr [rax], al ; ret 0x5d45
0x00000000005d86fe : add byte ptr [rax], al ; ret 0x5d86
0x00000000005dc4f6 : add byte ptr [rax], al ; ret 0x5dc8
0x00000000004d67c0 : add byte ptr [rax], al ; ret 0x8401
0x00000000005ef3ce : add byte ptr [rax], al ; ret 0xffe3
0x00000000005fb10f : add byte ptr [rax], al ; ret 0xffe9
0x00000000004d6736 : add byte ptr [rax], al ; ret 1
0x000000000040052e : add byte ptr [rax], al ; ret 2
0x00000000004d671d : add byte ptr [rax], al ; ret 7
0x00000000005e20ea : add byte ptr [rax], al ; ror ah, -0x1c ; call qword ptr [rax]
0x00000000005ee32e : add byte ptr [rax], al ; ror byte ptr [rax], -0x1d ; call qword ptr [rdx]
0x00000000005f533e : add byte ptr [rax], al ; ror byte ptr [rcx - 0x19], 1 ; call qword ptr [rdi]
0x00000000005df366 : add byte ptr [rax], al ; sahf ; ret
0x0000000000572a16 : add byte ptr [rax], al ; salc ; ret 0x42
0x00000000005df2be : add byte ptr [rax], al ; salc ; ret 0x55
0x0000000000618622 : add byte ptr [rax], al ; sbb al, -0x3c ; add al, byte ptr [rax] ; sub byte ptr [rdx], al ; cmc ; jmp qword ptr [rdi]
0x0000000000617122 : add byte ptr [rax], al ; sbb al, -0x51 ; add al, byte ptr [rax] ; cmp ah, ah ; hlt ; call qword ptr [rsi]
0x00000000005f85ee : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; in al, dx ; ret
0x0000000000608566 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; ret
0x00000000005f8596 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; ret
0x0000000000608496 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; ret 1
0x0000000000600122 : add byte ptr [rax], al ; sbb al, 0x3f ; add dword ptr [rax], eax ; js 0x6000c6 ; jmp 0x600134
0x0000000000612522 : add byte ptr [rax], al ; sbb al, 0x63 ; add al, byte ptr [rax] ; pop rax ; mov esi, ebx ; jmp rdi
0x00000000005f3322 : add byte ptr [rax], al ; sbb al, 0x71 ; add byte ptr [rax], al ; sub byte ptr [rdi - 0x1a], al ; jmp rax
0x00000000005f4122 : add byte ptr [rax], al ; sbb al, 0x7f ; add byte ptr [rax], al ; pop rax ; ret
0x00000000005ec322 : add byte ptr [rax], al ; sbb al, 1 ; add byte ptr [rax], al ; sbb byte ptr [rbx - 0x1f], ah ; call qword ptr [rax]
0x00000000005ec422 : add byte ptr [rax], al ; sbb al, 2 ; add byte ptr [rax], al ; sbb byte ptr [rdx - 0x1f], ch ; jmp qword ptr [rsi]
0x00000000005f1086 : add byte ptr [rax], al ; sbb byte ptr [rax - 0x1c], dl ; call qword ptr [rbx]
0x00000000005ec326 : add byte ptr [rax], al ; sbb byte ptr [rbx - 0x1f], ah ; call qword ptr [rax]
0x00000000005ec426 : add byte ptr [rax], al ; sbb byte ptr [rdx - 0x1f], ch ; jmp qword ptr [rsi]
0x00000000005e830b : add byte ptr [rax], al ; sbb dh, cl ; jmp rax
0x0000000000606f8f : add byte ptr [rax], al ; sbb ebp, esi ; call qword ptr [rbx]
0x000000000061061f : add byte ptr [rax], al ; sbb ebx, esi ; call qword ptr [rax]
0x000000000061064f : add byte ptr [rax], al ; sbb ebx, esi ; call qword ptr [rsi]
0x00000000005f7052 : add byte ptr [rax], al ; scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; sub al, bpl ; call qword ptr [rdi]
0x00000000005df29e : add byte ptr [rax], al ; scasb al, byte ptr [rdi] ; ret 0x55
0x000000000061716a : add byte ptr [rax], al ; scasd eax, dword ptr [rdi] ; add al, byte ptr [rax] ; push rax ; in al, -0xc ; call qword ptr [rsi]
0x00000000005729ee : add byte ptr [rax], al ; scasd eax, dword ptr [rdi] ; ret 0x42
0x00000000004e84c0 : add byte ptr [rax], al ; setne al ; movzx eax, al ; pop rdx ; ret
0x000000000042c005 : add byte ptr [rax], al ; setne al ; movzx eax, al ; ret
0x00000000005fb70e : add byte ptr [rax], al ; shl al, -0x17 ; jmp rdx
0x00000000005f216e : add byte ptr [rax], al ; shl bh, -0x1c ; call rcx
0x00000000005f36ee : add byte ptr [rax], al ; shl byte ptr [rsi - 0x1a], 1 ; call qword ptr [rbx]
0x00000000005e213a : add byte ptr [rax], al ; shl esp, 1 ; call qword ptr [rax]
0x00000000005e212b : add byte ptr [rax], al ; shl esp, 1 ; jmp rax
0x00000000005e218b : add byte ptr [rax], al ; shl esp, cl ; call qword ptr [rax]
0x00000000005f508e : add byte ptr [rax], al ; shr byte ptr [rbx], -0x19 ; jmp qword ptr [rcx]
0x00000000005e2362 : add byte ptr [rax], al ; shr dl, -0x1c ; jmp qword ptr [rax]
0x000000000060ad1f : add byte ptr [rax], al ; sti ; out dx, al ; call qword ptr [rax]
0x00000000005c358e : add byte ptr [rax], al ; stosb byte ptr [rdi], al ; ret 0x5c
0x00000000005e57c3 : add byte ptr [rax], al ; stosd dword ptr [rdi], eax ; in al, dx ; call rax
0x00000000005c380e : add byte ptr [rax], al ; stosd dword ptr [rdi], eax ; ret
0x00000000005e3453 : add byte ptr [rax], al ; sub al, -0x18 ; call rax
0x00000000005f727e : add byte ptr [rax], al ; sub al, -0x18 ; jmp qword ptr [rbx]
0x0000000000618432 : add byte ptr [rax], al ; sub al, -0x3e ; add al, byte ptr [rax] ; test al, -1 ; hlt ; call qword ptr [rax]
0x0000000000617332 : add byte ptr [rax], al ; sub al, -0x4f ; add al, byte ptr [rax] ; call 0x1761682a
0x0000000000617032 : add byte ptr [rax], al ; sub al, -0x52 ; add al, byte ptr [rax] ; call 0x17616529
0x0000000000606f32 : add byte ptr [rax], al ; sub al, -0x53 ; add dword ptr [rax], eax ; sbb bpl, sil ; call qword ptr [rcx]
0x0000000000615532 : add byte ptr [rax], al ; sub al, -0x6d ; add al, byte ptr [rax] ; clc ; pop rax ; hlt ; call qword ptr [rcx]
0x00000000006185a6 : add byte ptr [rax], al ; sub al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000610d32 : add byte ptr [rax], al ; sub al, 0x4b ; add al, byte ptr [rax] ; fsub dword ptr [rsi] ; call qword ptr [rbx]
0x00000000005f3f32 : add byte ptr [rax], al ; sub al, 0x7d ; add byte ptr [rax], al ; call 0x125f25f9
0x00000000005f7056 : add byte ptr [rax], al ; sub al, bpl ; call qword ptr [rdi]
0x00000000005f2af6 : add byte ptr [rax], al ; sub byte ptr [rax - 0x1b], dl ; jmp qword ptr [rax]
0x00000000005f725e : add byte ptr [rax], al ; sub byte ptr [rbx], -0x18 ; call rdx
0x00000000005f70fe : add byte ptr [rax], al ; sub byte ptr [rcx], -0x18 ; call qword ptr [rdx]
0x00000000005f712e : add byte ptr [rax], al ; sub byte ptr [rcx], -0x18 ; call qword ptr [rsi]
0x00000000005f3326 : add byte ptr [rax], al ; sub byte ptr [rdi - 0x1a], al ; jmp rax
0x00000000004034fa : add byte ptr [rax], al ; sub ecx, eax ; mov eax, ecx ; pop rdx ; ret
0x0000000000564ae8 : add byte ptr [rax], al ; sub esi, 1 ; jne 0x564ae1 ; ret
0x0000000000612a8a : add byte ptr [rax], al ; test byte ptr [rax + 2], ch ; add byte ptr [rax - 0x63], ah ; call qword ptr [rbx]
0x00000000005eee8a : add byte ptr [rax], al ; test byte ptr [rax + rax], ch ; add al, al ; mov al, -0x1d ; jmp qword ptr [rdx]
0x00000000005ece8a : add byte ptr [rax], al ; test byte ptr [rax + rax], cl ; add al, dl ; fsubrp st(1) ; call qword ptr [rcx]
0x0000000000606f8a : add byte ptr [rax], al ; test byte ptr [rbp + 0x1b000001], ch ; out dx, al ; call qword ptr [rbx]
0x0000000000616f8a : add byte ptr [rax], al ; test byte ptr [rbp - 0x1c4ffffe], ch ; hlt ; call qword ptr [rsi]
0x000000000061258a : add byte ptr [rax], al ; test byte ptr [rbx + 2], ah ; add al, ah ; mov ebx, dr0 ; call qword ptr [rsi]
0x0000000000600b8a : add byte ptr [rax], al ; test byte ptr [rcx + 1], cl ; add byte ptr [rax + 0x20], al ; in al, dx ; jmp qword ptr [rax]
0x000000000061338a : add byte ptr [rax], al ; test byte ptr [rcx + 2], dh ; add byte ptr [rax - 0x50], dh ; jmp qword ptr [rdx]
0x000000000060538a : add byte ptr [rax], al ; test byte ptr [rcx - 0x498fffff], dl ; in eax, dx ; jmp rdx
0x000000000042bf4b : add byte ptr [rax], al ; test byte ptr [rdi + 0x49], 0x30 ; je 0x42bf84 ; pop rdx ; ret
0x0000000000606c8a : add byte ptr [rax], al ; test byte ptr [rdx + 0x14d00001], ch ; out dx, al ; jmp qword ptr [rdi]
0x000000000061748a : add byte ptr [rax], al ; test byte ptr [rdx - 0x1a8ffffe], dh ; hlt ; call qword ptr [rsi]
0x0000000000551b95 : add byte ptr [rax], al ; test byte ptr [rsi + 0x60], 7 ; je 0x551ba6 ; ret
0x000000000060288a : add byte ptr [rax], al ; test byte ptr [rsi + 1], ah ; add byte ptr [rax - 0x45], dh ; in al, dx ; call qword ptr [rbx]
0x000000000061788a : add byte ptr [rax], al ; test byte ptr [rsi - 0x18effffe], dh ; hlt ; call qword ptr [rcx]
0x000000000060e88a : add byte ptr [rax], al ; test byte ptr [rsi], ah ; add al, byte ptr [rax] ; push rax ; sal edx, 1 ; call rsp
0x00000000005f998a : add byte ptr [rax], al ; test dl, bh ; add byte ptr [rax], al ; and byte ptr [rbx - 0x17], al ; jmp qword ptr [rax]
0x000000000040ada7 : add byte ptr [rax], al ; test rax, rax ; je 0x40adb8 ; pop rbx ; ret
0x00000000004b94a8 : add byte ptr [rax], al ; test rax, rax ; je 0x4b94b8 ; jmp rax
0x00000000004b9532 : add byte ptr [rax], al ; test rax, rax ; je 0x4b9547 ; jmp rax
0x00000000004b9562 : add byte ptr [rax], al ; test rax, rax ; je 0x4b9577 ; jmp rax
0x00000000004c5f6b : add byte ptr [rax], al ; test rax, rax ; je 0x4c5f7c ; pop rax ; ret
0x00000000004c9e8b : add byte ptr [rax], al ; test rax, rax ; je 0x4c9e9c ; pop rax ; ret
0x00000000004f888a : add byte ptr [rax], al ; test rax, rax ; je 0x4f889c ; call rax
0x00000000004f90df : add byte ptr [rax], al ; test rax, rax ; je 0x4f9109 ; call rax
0x00000000004089d2 : add byte ptr [rax], al ; test rax, rax ; jne 0x4089e4 ; xor eax, eax ; ret
0x000000000042e401 : add byte ptr [rax], al ; test rax, rax ; jne 0x42e413 ; xor eax, eax ; ret
0x00000000004f358e : add byte ptr [rax], al ; test rcx, rcx ; je 0x4f359e ; jmp rcx
0x0000000000615d4a : add byte ptr [rax], al ; wait ; add al, byte ptr [rax] ; adc byte ptr [rcx - 0xc], bh ; jmp qword ptr [rdi]
0x00000000005729ce : add byte ptr [rax], al ; xchg eax, edi ; ret 0x42
0x00000000005e6e0b : add byte ptr [rax], al ; xchg eax, esi ; out dx, eax ; jmp rax
0x00000000005c3566 : add byte ptr [rax], al ; xchg eax, esi ; ret 0x5c
0x00000000005f2f9a : add byte ptr [rax], al ; xchg eax, esp ; insd dword ptr [rdi], dx ; add byte ptr [rax], al ; nop ; xor al, 0xffffffffffffffe6 ; jmp rdi
0x0000000000614d9a : add byte ptr [rax], al ; xchg eax, esp ; mov eax, dword ptr [rdx] ; add byte ptr [rax], dh ; hlt ; call rax
0x0000000000611d9a : add byte ptr [rax], al ; xchg eax, esp ; pop rbx ; add al, byte ptr [rax] ; add byte ptr [rdx - 0xd], ch ; call qword ptr [rcx]
0x00000000005df35e : add byte ptr [rax], al ; xchg eax, esp ; ret
0x000000000060849a : add byte ptr [rax], al ; xchg eax, esp ; ret 1
0x0000000000615752 : add byte ptr [rax], al ; xchg rax, rbp ; add al, byte ptr [rax] ; sub byte ptr [rax - 0xc], ah ; call qword ptr [rax]
0x00000000005d1c5e : add byte ptr [rax], al ; xlatb ; ret
0x00000000005f84ae : add byte ptr [rax], al ; xor al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x000000000060845e : add byte ptr [rax], al ; xor al, 0 ; add byte ptr [rax], al ; pop rsp ; ret 1
0x000000000060fa3a : add byte ptr [rax], al ; xor al, 0x38 ; add al, byte ptr [rax] ; loopne 0x60fa5f ; call qword ptr [rax]
0x00000000005efa3a : add byte ptr [rax], al ; xor al, 0x38 ; add byte ptr [rax], al ; rcr al, -0x1d ; jmp qword ptr [rcx]
0x0000000000611d3a : add byte ptr [rax], al ; xor al, 0x5b ; add al, byte ptr [rax] ; loopne 0x611db4 ; call qword ptr [rcx]
0x00000000005f533a : add byte ptr [rax], al ; xor al, 0xffffffffffffff91 ; add byte ptr [rax], al ; ror byte ptr [rcx - 0x19], 1 ; call qword ptr [rdi]
0x000000000061713a : add byte ptr [rax], al ; xor al, 0xffffffffffffffaf ; add al, byte ptr [rax] ; in al, -0xc ; call qword ptr [rsi]
0x0000000000617c3a : add byte ptr [rax], al ; xor al, 0xffffffffffffffba ; add al, byte ptr [rax] ; shr bh, -0xc ; call rbx
0x0000000000617e3a : add byte ptr [rax], al ; xor al, 0xffffffffffffffbc ; add al, byte ptr [rax] ; loopne 0x617e41 ; hlt ; call rdi
0x00000000005ec4ae : add byte ptr [rax], al ; xor byte ptr [rax - 0x1f], dh ; jmp qword ptr [rdx]
0x0000000000548e51 : add byte ptr [rax], al ; xor byte ptr [rcx - 0x38b7ffac], dl ; ret
0x00000000005e152a : add byte ptr [rax], al ; xor byte ptr [rdi - 0x1e], dh ; call rax
0x00000000005f50ee : add byte ptr [rax], al ; xor byte ptr [rdi], 0xe7 ; jmp qword ptr [rsi]
0x00000000004a0207 : add byte ptr [rax], al ; xor eax, eax ; cmp rsi, rdx ; je 0x4a021a ; ret
0x0000000000484119 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop r14 ; pop r15 ; ret
0x000000000054cf88 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000483c54 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000408d58 : add byte ptr [rax], al ; xor eax, eax ; pop rdx ; ret
0x000000000040dbde : add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000053e089 : add byte ptr [rax], al ; xor ebp, ebp ; jmp 0x53e0c2
0x000000000040718a : add byte ptr [rax], al ; xor ebp, ebp ; xor esi, esi ; mov rdi, r12 ; call qword ptr [rax]
0x00000000004cb19b : add byte ptr [rax], al ; xor ebx, ebx ; mov eax, ebx ; pop rbx ; ret
0x00000000004ca62a : add byte ptr [rax], al ; xor ebx, ebx ; mov rax, rbx ; pop rbx ; ret
0x0000000000538ec7 : add byte ptr [rax], al ; xor ebx, ebx ; mov rdx, rax ; jmp 0x538ee9
0x00000000004cf820 : add byte ptr [rax], al ; xor ecx, ecx ; call rax
0x000000000055cdc9 : add byte ptr [rax], al ; xor edi, edi ; mov rsi, r14 ; call r15
0x0000000000484e54 : add byte ptr [rax], al ; xor edx, edx ; call rax
0x00000000004f3d0b : add byte ptr [rax], al ; xor edx, edx ; jmp rax
0x0000000000457bed : add byte ptr [rax], al ; xor edx, edx ; lea rcx, qword ptr [rsp + 0x50] ; call rax
0x000000000040a5c3 : add byte ptr [rax], al ; xor edx, edx ; mov r9, r14 ; call rax
0x000000000040b750 : add byte ptr [rax], al ; xor edx, edx ; mov r9, r15 ; call rax
0x000000000040e8e7 : add byte ptr [rax], al ; xor edx, edx ; mov r9, rbx ; call r10
0x000000000048911d : add byte ptr [rax], al ; xor edx, edx ; mov rcx, qword ptr [rsp + 0x30] ; call rax
0x00000000004cf90e : add byte ptr [rax], al ; xor edx, edx ; mov rcx, rax ; call r8
0x000000000048a0b0 : add byte ptr [rax], al ; xor edx, edx ; mov rcx, rbp ; call rax
0x000000000048590a : add byte ptr [rax], al ; xor edx, edx ; mov rcx, rbx ; call rax
0x0000000000484ba9 : add byte ptr [rax], al ; xor edx, edx ; mov rdi, r14 ; call rax
0x000000000040526b : add byte ptr [rax], al ; xor edx, edx ; xor ecx, ecx ; call 0x461568
0x000000000041caab : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call qword ptr [rax]
0x00000000004e63cc : add byte ptr [rax], al ; xor r8d, r8d ; mov esi, ebp ; call rax
0x000000000060ecb7 : add byte ptr [rax], bh ; call qword ptr [rdx]
0x00000000005f74d7 : add byte ptr [rax], bh ; cmp al, ch ; call qword ptr [rdi]
0x0000000000617127 : add byte ptr [rax], bh ; in al, -0xc ; call qword ptr [rsi]
0x000000000060eab7 : add byte ptr [rax], bh ; in al, dx ; jmp rdx
0x00000000006173e7 : add byte ptr [rax], bh ; in eax, -0xc ; call qword ptr [rsi]
0x0000000000609ba7 : add byte ptr [rax], bh ; mov bl, -0x12 ; jmp rsp
0x000000000060ee07 : add byte ptr [rax], bh ; or ebx, esi ; call rbx
0x00000000005efdf7 : add byte ptr [rax], bh ; out -0x1d, al ; call qword ptr [rdx]
0x000000000060c0a7 : add byte ptr [rax], bh ; out dx, eax ; call qword ptr [rax]
0x0000000000602157 : add byte ptr [rax], bh ; popfq ; in al, dx ; jmp qword ptr [rdi]
0x000000000060c647 : add byte ptr [rax], bh ; xchg edi, ebp ; jmp qword ptr [rsi]
0x0000000000603997 : add byte ptr [rax], bl ; adc ch, ch ; jmp qword ptr [rcx]
0x00000000006181c7 : add byte ptr [rax], bl ; cmc ; call qword ptr [rax]
0x00000000006170c7 : add byte ptr [rax], bl ; in al, -0xc ; call qword ptr [rsi]
0x00000000005f6777 : add byte ptr [rax], bl ; jmp rdi
0x00000000005f20e7 : add byte ptr [rax], bl ; loope 0x5f20d3 ; call qword ptr [rbx]
0x00000000006168d7 : add byte ptr [rax], bl ; movsd dword ptr [rdi], dword ptr [rsi] ; hlt ; call qword ptr [rax]
0x00000000005ec327 : add byte ptr [rax], bl ; movsxd rsp, ecx ; call qword ptr [rax]
0x00000000006178a7 : add byte ptr [rax], bl ; out -0xc, eax ; call qword ptr [rdx]
0x0000000000608407 : add byte ptr [rax], bl ; out dx, al ; call qword ptr [rax]
0x00000000005ec427 : add byte ptr [rax], bl ; push -0x1f ; jmp qword ptr [rsi]
0x0000000000572a77 : add byte ptr [rax], bl ; ret
0x00000000005df227 : add byte ptr [rax], bl ; ret 0x55
0x00000000005f4537 : add byte ptr [rax], bl ; shl esi, 1 ; jmp rdx
0x0000000000604b67 : add byte ptr [rax], bl ; xchg eax, edx ; in eax, dx ; jmp qword ptr [rcx]
0x00000000005f9627 : add byte ptr [rax], bl ; xor cl, ch ; call rax
0x0000000000618627 : add byte ptr [rax], ch ; add dh, ch ; jmp qword ptr [rdi]
0x00000000006116e7 : add byte ptr [rax], ch ; call qword ptr [rax]
0x0000000000609837 : add byte ptr [rax], ch ; cmpsb byte ptr [rsi], byte ptr [rdi] ; out dx, al ; jmp qword ptr [rbx]
0x0000000000609887 : add byte ptr [rax], ch ; cmpsd dword ptr [rsi], dword ptr [rdi] ; out dx, al ; jmp qword ptr [rbx]
0x0000000000614d87 : add byte ptr [rax], ch ; hlt ; call qword ptr [rbx]
0x00000000006170f7 : add byte ptr [rax], ch ; in al, -0xc ; call qword ptr [rsi]
0x00000000005f5e27 : add byte ptr [rax], ch ; mov ah, bh ; jmp qword ptr [rdx]
0x0000000000601a27 : add byte ptr [rax], ch ; mov ch, ah ; jmp qword ptr [rcx]
0x00000000005fadf7 : add byte ptr [rax], ch ; mov dh, -0x17 ; call qword ptr [rsi]
0x0000000000601697 : add byte ptr [rax], ch ; outsb dx, byte ptr [rsi] ; in al, dx ; call qword ptr [rsi]
0x0000000000572a87 : add byte ptr [rax], ch ; ret
0x00000000006105a7 : add byte ptr [rax], ch ; sbb ebx, esi ; call qword ptr [rax]
0x00000000005fe017 : add byte ptr [rax], cl ; fldl2e ; call qword ptr [rdi]
0x0000000000617097 : add byte ptr [rax], cl ; in al, -0xc ; call qword ptr [rsi]
0x0000000000617397 : add byte ptr [rax], cl ; in eax, -0xc ; call qword ptr [rsi]
0x00000000005f06d7 : add byte ptr [rax], cl ; jmp rbx
0x0000000000608d07 : add byte ptr [rax], cl ; jne 0x608cfd ; jmp qword ptr [rdi]
0x00000000005f8787 : add byte ptr [rax], cl ; loope 0x5f8777 ; call qword ptr [rcx]
0x00000000005f3f87 : add byte ptr [rax], cl ; mov ah, -0x1a ; jmp rdx
0x00000000005ffd37 : add byte ptr [rax], cl ; mov ch, bl ; call qword ptr [rax]
0x0000000000605337 : add byte ptr [rax], cl ; mov dh, -0x13 ; jmp qword ptr [rbx]
0x00000000005f3867 : add byte ptr [rax], cl ; mov dh, ah ; call rsp
0x00000000006097e7 : add byte ptr [rax], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; out dx, al ; jmp qword ptr [rdi]
0x00000000006175d7 : add byte ptr [rax], cl ; out -0xc, al ; call qword ptr [rsi]
0x0000000000611db7 : add byte ptr [rax], cl ; push -0xd ; call qword ptr [rcx]
0x00000000005549cf : add byte ptr [rax], cl ; ret
0x00000000006100f7 : add byte ptr [rax], cl ; sbb ebx, esi ; call qword ptr [rax]
0x00000000005f6aff : add byte ptr [rax], dh ; adc ebp, eax ; jmp qword ptr [rsi]
0x00000000005e255b : add byte ptr [rax], dh ; and al, 0xffffffffffffffe5 ; jmp qword ptr [rax]
0x00000000005ebb1b : add byte ptr [rax], dh ; clc ; call qword ptr [rax]
0x00000000005ebb5b : add byte ptr [rax], dh ; clc ; call rax
0x00000000005ebcc3 : add byte ptr [rax], dh ; clc ; jmp qword ptr [rax]
0x00000000005e9a1b : add byte ptr [rax], dh ; cmc ; jmp qword ptr [rax]
0x00000000005e2283 : add byte ptr [rax], dh ; fsub st(4) ; jmp qword ptr [rax]
0x0000000000614d9f : add byte ptr [rax], dh ; hlt ; call rax
0x00000000005e9b1b : add byte ptr [rax], dh ; hlt ; cmc ; jmp qword ptr [rax]
0x000000000061710f : add byte ptr [rax], dh ; in al, -0xc ; call qword ptr [rsi]
0x00000000006010cf : add byte ptr [rax], dh ; in al, dx ; call qword ptr [rdx]
0x00000000006173cf : add byte ptr [rax], dh ; in eax, -0xc ; call qword ptr [rsi]
0x00000000005e6a93 : add byte ptr [rax], dh ; int1 ; out dx, al ; jmp qword ptr [rax]
0x00000000005e152b : add byte ptr [rax], dh ; ja 0x5e1515 ; call rax
0x00000000005eb123 : add byte ptr [rax], dh ; jbe 0x5eb122 ; jmp qword ptr [rax]
0x00000000005e3af3 : add byte ptr [rax], dh ; jl 0x5e3ae4 ; jmp qword ptr [rax]
0x00000000005eb193 : add byte ptr [rax], dh ; jl 0x5eb192 ; jmp rax
0x00000000005e79c3 : add byte ptr [rax], dh ; jo 0x5e79bb ; jmp rax
0x00000000005ec4af : add byte ptr [rax], dh ; jo 0x5ec498 ; jmp qword ptr [rdx]
0x00000000005e66db : add byte ptr [rax], dh ; lodsb al, byte ptr [rsi] ; out dx, al ; call rax
0x00000000005e6ef3 : add byte ptr [rax], dh ; lodsb al, byte ptr [rsi] ; out dx, eax ; jmp rax
0x00000000005e44cb : add byte ptr [rax], dh ; mov ch, -0x16 ; jmp qword ptr [rax]
0x00000000006124cf : add byte ptr [rax], dh ; mov dh, bl ; jmp qword ptr [rdi]
0x00000000005e5613 : add byte ptr [rax], dh ; mov esp, gs ; jmp rax
0x0000000000606a5f : add byte ptr [rax], dh ; or ebp, esi ; call rdi
0x00000000005efddf : add byte ptr [rax], dh ; out -0x1d, al ; call qword ptr [rdx]
0x00000000005e61a3 : add byte ptr [rax], dh ; out dx, al ; call qword ptr [rax]
0x00000000005e8dab : add byte ptr [rax], dh ; out dx, al ; int1 ; call qword ptr [rax]
0x00000000005e54b3 : add byte ptr [rax], dh ; pop rdi ; in al, dx ; inc dword ptr [rax] ; ret
0x00000000005df307 : add byte ptr [rax], dh ; ret
0x000000000045d9cb : add byte ptr [rax], dh ; ret 0x4488
0x0000000000589567 : add byte ptr [rax], dh ; ret 0x4a
0x00000000006104cf : add byte ptr [rax], dh ; sbb ebx, esi ; call qword ptr [rax]
0x00000000006104ff : add byte ptr [rax], dh ; sbb ebx, esi ; call qword ptr [rsi]
0x00000000005e28cb : add byte ptr [rax], dh ; shl ebp, 1 ; call rax
0x0000000000548e52 : add byte ptr [rax], dh ; xchg eax, ecx ; push rsp ; add byte ptr [rax - 0x39], cl ; ret
0x00000000005e651b : add byte ptr [rax], dh ; xchg eax, esi ; out dx, al ; call rax
0x00000000005ea0f3 : add byte ptr [rax], dl ; adc esi, esi ; jmp rax
0x000000000061860f : add byte ptr [rax], dl ; add dh, ch ; jmp qword ptr [rdi]
0x00000000006070cf : add byte ptr [rax], dl ; and esi, ebp ; call qword ptr [rax]
0x00000000005ebd5b : add byte ptr [rax], dl ; clc ; call qword ptr [rax]
0x00000000006181df : add byte ptr [rax], dl ; cmc ; jmp qword ptr [rbx]
0x00000000005e464b : add byte ptr [rax], dl ; fsubr st(2) ; jmp qword ptr [rax]
0x0000000000614bbf : add byte ptr [rax], dl ; hlt ; call qword ptr [rdx]
0x00000000005e6963 : add byte ptr [rax], dl ; in al, -0x12 ; call qword ptr [rax]
0x00000000006170af : add byte ptr [rax], dl ; in al, -0xc ; call qword ptr [rsi]
0x00000000005e5333 : add byte ptr [rax], dl ; in al, dx ; jmp qword ptr [rax]
0x00000000005e85b3 : add byte ptr [rax], dl ; int1 ; call qword ptr [rax]
0x00000000005e3aab : add byte ptr [rax], dl ; ja 0x5e3a9c ; jmp rax
0x00000000005e5e4b : add byte ptr [rax], dl ; ja 0x5e5e40 ; call qword ptr [rax]
0x00000000005e63cb : add byte ptr [rax], dl ; jb 0x5e63c1 ; jmp rax
0x00000000005f06ef : add byte ptr [rax], dl ; jmp rbx
0x00000000005e3213 : add byte ptr [rax], dl ; jmp rdi
0x00000000005e5deb : add byte ptr [rax], dl ; jne 0x5e5de0 ; jmp rax
0x00000000005e7a13 : add byte ptr [rax], dl ; jne 0x5e7a0b ; jmp qword ptr [rax]
0x0000000000615d4f : add byte ptr [rax], dl ; jns 0x615d4b ; jmp qword ptr [rdi]
0x00000000005eb0e3 : add byte ptr [rax], dl ; jo 0x5eb0e2 ; call rax
0x00000000005ec053 : add byte ptr [rax], dl ; jo 0x5ec053 ; call rax
0x00000000005f79df : add byte ptr [rax], dl ; jp 0x5f79cf ; call rax
0x00000000005e816b : add byte ptr [rax], dl ; loop 0x5e8163 ; jmp rax
0x00000000006026ff : add byte ptr [rax], dl ; mov bh, -0x14 ; call rdi
0x00000000005efd7f : add byte ptr [rax], dl ; out -0x1d, al ; call qword ptr [rsi]
0x000000000061777f : add byte ptr [rax], dl ; out -0xc, eax ; call qword ptr [rax]
0x000000000061788f : add byte ptr [rax], dl ; out -0xc, eax ; call qword ptr [rcx]
0x000000000060bcaf : add byte ptr [rax], dl ; out dx, eax ; call qword ptr [rcx]
0x00000000005e54a3 : add byte ptr [rax], dl ; pop rdi ; in al, dx ; call rax
0x00000000005e567b : add byte ptr [rax], dl ; popfq ; in al, dx ; jmp qword ptr [rax]
0x00000000005e4a9b : add byte ptr [rax], dl ; push rcx ; jmp 0x5e4aa3
0x00000000004904e3 : add byte ptr [rax], dl ; ret
0x00000000005e67c3 : add byte ptr [rax], dl ; ret 0xffee
0x00000000005eaa43 : add byte ptr [rax], dl ; ret 0xfff6
0x00000000005eb6e3 : add byte ptr [rax], dl ; sal bh, cl ; jmp rax
0x000000000061067f : add byte ptr [rax], dl ; sbb ebx, esi ; call qword ptr [rsi]
0x00000000005e61cb : add byte ptr [rax], dl ; sub ch, dh ; call rax
0x00000000005e5b43 : add byte ptr [rax], dl ; sub ebp, ebp ; call qword ptr [rax]
0x00000000005e7e93 : add byte ptr [rax], dl ; test al, -0x10 ; call qword ptr [rax]
0x00000000005e368b : add byte ptr [rax], dl ; test al, -0x18 ; call rax
0x00000000005e658b : add byte ptr [rax], dl ; xchg eax, edi ; out dx, al ; jmp qword ptr [rax]
0x000000000060735f : add byte ptr [rax], dl ; xor ch, dh ; jmp rsi
0x00000000005f10cd : add byte ptr [rax], r8b ; adc byte ptr [rcx - 0x1c], dl ; jmp qword ptr [rcx]
0x000000000043d624 : add byte ptr [rax], r8b ; add byte ptr [rax - 0x77], cl ; ret 0xa0e9
0x00000000005d1c5a : add byte ptr [rax], r8b ; add byte ptr [rax], al ; add bh, dl ; ret
0x00000000004d040d : add byte ptr [rax], r8b ; and esi, dword ptr [rdi + 0x10] ; mov eax, esi ; ret
0x00000000004d043d : add byte ptr [rax], r8b ; and esi, dword ptr [rdi + 0x70] ; mov eax, esi ; ret
0x0000000000452fbd : add byte ptr [rax], r8b ; lea rsp, qword ptr [rbp] ; pop rbp ; ret
0x0000000000405bcd : add byte ptr [rax], r8b ; mov eax, 0x1c20 ; ret
0x00000000004dac7d : add byte ptr [rax], r8b ; mov eax, 0x40 ; ret
0x0000000000408efd : add byte ptr [rax], r8b ; mov eax, 0x56aad0 ; ret
0x000000000040ebbd : add byte ptr [rax], r8b ; mov eax, 0x56b768 ; ret
0x000000000043c48d : add byte ptr [rax], r8b ; mov eax, 0x574e58 ; ret
0x000000000043c8bd : add byte ptr [rax], r8b ; mov eax, 0x575188 ; ret
0x000000000046e56d : add byte ptr [rax], r8b ; mov eax, 0x57aa00 ; ret
0x00000000004a59bd : add byte ptr [rax], r8b ; mov eax, 0x587bc0 ; ret
0x00000000004aafbd : add byte ptr [rax], r8b ; mov eax, 0x589010 ; ret
0x00000000004abbfd : add byte ptr [rax], r8b ; mov eax, 0x589320 ; ret
0x00000000004b01cd : add byte ptr [rax], r8b ; mov eax, 0x58a010 ; ret
0x00000000004e397d : add byte ptr [rax], r8b ; mov eax, 0x5bdab8 ; ret
0x000000000045ea5d : add byte ptr [rax], r8b ; mov eax, 0x81fc10 ; ret
0x000000000045f67d : add byte ptr [rax], r8b ; mov eax, 0x81fcb0 ; ret
0x000000000046266d : add byte ptr [rax], r8b ; mov eax, 0x8201b0 ; ret
0x000000000047935d : add byte ptr [rax], r8b ; mov eax, 0x820790 ; ret
0x0000000000479a4d : add byte ptr [rax], r8b ; mov eax, 0x820830 ; ret
0x0000000000479afd : add byte ptr [rax], r8b ; mov eax, 0x820880 ; ret
0x00000000004ac24d : add byte ptr [rax], r8b ; mov eax, 0x823d00 ; ret
0x000000000050d6fd : add byte ptr [rax], r8b ; mov eax, 0x8289e0 ; ret
0x0000000000439a1d : add byte ptr [rax], r8b ; mov eax, 1 ; ret
0x00000000004d029d : add byte ptr [rax], r8b ; mov eax, dword ptr [rdi] ; ret
0x000000000055170d : add byte ptr [rax], r8b ; mov eax, dword ptr [rdi] ; sub eax, dword ptr [rsi] ; ret
0x00000000005660ed : add byte ptr [rax], r8b ; mov qword ptr [rdi + 0x70], rsi ; ret
0x000000000050d19d : add byte ptr [rax], r8b ; mov rax, qword ptr [rdi + 0x10] ; ret
0x000000000054343d : add byte ptr [rax], r8b ; mov rax, qword ptr [rdi + 0x28] ; ret
0x0000000000541bad : add byte ptr [rax], r8b ; mov rax, qword ptr [rdi + 0x40] ; ret
0x00000000004b889d : add byte ptr [rax], r8b ; mov rax, qword ptr [rdi + 0x50] ; ret
0x00000000004d02dd : add byte ptr [rax], r8b ; mov rax, qword ptr [rdi] ; ret
0x000000000048f37d : add byte ptr [rax], r8b ; movups xmm0, xmmword ptr [rsi] ; movups xmmword ptr [rdi], xmm0 ; ret
0x00000000005f080d : add byte ptr [rax], r8b ; nop ; or ah, ah ; call qword ptr [rbx]
0x00000000004ca80d : add byte ptr [rax], r8b ; push rbx ; mov rbx, rdi ; call qword ptr [rbx]
0x00000000004a59ad : add byte ptr [rax], r8b ; ret
0x00000000005f1085 : add byte ptr [rax], r8b ; sbb byte ptr [rax - 0x1c], dl ; call qword ptr [rbx]
0x000000000049be2d : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x000000000043f48f : add byte ptr [rbp + 0x11f7ec0], al ; ret
0x000000000043613c : add byte ptr [rbp + 0x14], dh ; mov eax, 0x1c ; ret
0x0000000000431e8d : add byte ptr [rbp + 0x14], dh ; mov eax, 0x573c32 ; ret
0x0000000000431dd9 : add byte ptr [rbp + 0x14], dh ; mov eax, 0x573ce8 ; ret
0x0000000000432907 : add byte ptr [rbp + 0x18], dh ; mov eax, 0x574042 ; ret
0x000000000043250e : add byte ptr [rbp + 0x1a], dh ; mov eax, 0x573420 ; ret
0x00000000004325df : add byte ptr [rbp + 0x1c], dh ; mov eax, 0x574065 ; ret
0x0000000000432e78 : add byte ptr [rbp + 0x1e], dh ; mov eax, 0x573ef2 ; ret
0x0000000000447fef : add byte ptr [rbp + 0x20], al ; ret 0xba
0x0000000000502f29 : add byte ptr [rbp + 0x21], cl ; ret
0x0000000000502568 : add byte ptr [rbp + 0x21], cl ; ret 0x840f
0x0000000000432500 : add byte ptr [rbp + 0x28], dh ; mov eax, 0x5731f8 ; ret
0x000000000043610b : add byte ptr [rbp + 0x29], dh ; mov eax, 0x1b ; ret
0x0000000000431e9b : add byte ptr [rbp + 0x2a], dh ; mov eax, 0x573bf0 ; ret
0x00000000004325f5 : add byte ptr [rbp + 0x2e], dh ; mov eax, 0x573df6 ; ret
0x000000000043261d : add byte ptr [rbp + 0x2e], dh ; mov eax, 0x573e04 ; ret
0x0000000000432e00 : add byte ptr [rbp + 0x2e], dh ; mov eax, 0x573e58 ; ret
0x0000000000432645 : add byte ptr [rbp + 0x32], dh ; mov eax, 0x573e12 ; ret
0x0000000000431de7 : add byte ptr [rbp + 0x35], dh ; mov eax, 0x573b42 ; ret
0x00000000004324f2 : add byte ptr [rbp + 0x36], dh ; mov eax, 0x57322d ; ret
0x0000000000432e62 : add byte ptr [rbp + 0x42], dh ; mov eax, 0x573eeb ; ret
0x00000000004324e4 : add byte ptr [rbp + 0x44], dh ; mov eax, 0x573267 ; ret
0x000000000058e14e : add byte ptr [rbp + 0x45e1daf2], al ; ret 0x5325
0x00000000004360f5 : add byte ptr [rbp + 0x4d], dh ; mov eax, 0x13 ; ret
0x00000000004324d6 : add byte ptr [rbp + 0x52], dh ; mov eax, 0x5732a5 ; ret
0x0000000000432e4c : add byte ptr [rbp + 0x58], dh ; mov eax, 0x573ee4 ; ret
0x00000000005e4b30 : add byte ptr [rbp + 0x59a00001], bl ; jmp 0x5e4b3e
0x0000000000425d49 : add byte ptr [rbp + 0x5b027ec0], al ; ret
0x0000000000432e36 : add byte ptr [rbp + 0x6e], dh ; mov eax, 0x573e5f ; ret
0x00000000004324b6 : add byte ptr [rbp + 0x72], dh ; mov eax, 0x573362 ; ret
0x0000000000432e28 : add byte ptr [rbp + 0x7c], dh ; mov eax, 0x573de8 ; ret
0x0000000000510d21 : add byte ptr [rbp + 0xc], dh ; mov eax, 0x36 ; ret
0x00000000004336ef : add byte ptr [rbp + 0xd], dh ; mov eax, 0x574420 ; ret
0x000000000043c4af : add byte ptr [rbp + 0xd], dh ; mov eax, 0x574f40 ; ret
0x000000000043c8df : add byte ptr [rbp + 0xd], dh ; mov eax, 0x575270 ; ret
0x00000000004d0259 : add byte ptr [rbp + 0xe], dh ; mov eax, 0x1a9 ; pop rbx ; ret
0x000000000051271e : add byte ptr [rbp + 0xf], cl ; lodsb al, byte ptr [rsi] ; ret
0x00000000004e182f : add byte ptr [rbp + 1], cl ; ret 0x149
0x0000000000443b32 : add byte ptr [rbp + 2], dh ; mov eax, ecx ; ret
0x0000000000551701 : add byte ptr [rbp + 2], dh ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000042cbbf : add byte ptr [rbp + 5], dh ; mov eax, 0xffffffff ; ret
0x000000000042ce35 : add byte ptr [rbp + 6], bh ; mov eax, 0xffffffff ; ret
0x000000000043614a : add byte ptr [rbp + 6], dh ; mov eax, 0x17 ; ret
0x0000000000510d35 : add byte ptr [rbp + 6], dh ; mov eax, 0x34 ; ret
0x0000000000405b3e : add byte ptr [rbp + 6], dh ; mov eax, 0x56a3a0 ; ret
0x00000000004068f6 : add byte ptr [rbp + 6], dh ; mov eax, 0x56a6c8 ; ret
0x0000000000409e16 : add byte ptr [rbp + 6], dh ; mov eax, 0x56aad0 ; ret
0x0000000000432522 : add byte ptr [rbp + 6], dh ; mov eax, 0x5733eb ; ret
0x0000000000432563 : add byte ptr [rbp + 6], dh ; mov eax, 0x573db8 ; ret
0x0000000000432555 : add byte ptr [rbp + 6], dh ; mov eax, 0x573dc2 ; ret
0x0000000000432e9e : add byte ptr [rbp + 6], dh ; mov eax, 0x573ef9 ; ret
0x00000000004331a3 : add byte ptr [rbp + 6], dh ; mov eax, 0x57412b ; ret
0x0000000000433704 : add byte ptr [rbp + 6], dh ; mov eax, 0x574338 ; ret
0x000000000043c4c4 : add byte ptr [rbp + 6], dh ; mov eax, 0x574e58 ; ret
0x000000000043c8f4 : add byte ptr [rbp + 6], dh ; mov eax, 0x575188 ; ret
0x0000000000433195 : add byte ptr [rbp + 6], dh ; mov eax, 0x587ed8 ; ret
0x00000000004d026f : add byte ptr [rbp + 7], dh ; mov eax, 0x1ad ; pop rbx ; ret
0x00000000004971da : add byte ptr [rbp + rax + 0x48], dh ; mov eax, ebx ; pop rbx ; ret
0x000000000048e590 : add byte ptr [rbp + rax + 0x4c], dh ; mov edi, esp ; call rax
0x000000000061076b : add byte ptr [rbp + rax*2 + 2], ah ; add al, dl ; sbb bl, dh ; call qword ptr [rax]
0x00000000005f074b : add byte ptr [rbp + rax*2], al ; add al, dl ; jmp rbx
0x00000000005f0763 : add byte ptr [rbp + rax*2], bl ; add al, cl ; jmp rbx
0x00000000005f8783 : add byte ptr [rbp + rax*8], bh ; add byte ptr [rax], cl ; loope 0x5f877b ; call qword ptr [rcx]
0x0000000000606f8b : add byte ptr [rbp + rbp*4 + 0x1b000001], al ; out dx, al ; call qword ptr [rbx]
0x0000000000616fbb : add byte ptr [rbp + rbp*4 - 0x1c3ffffe], dh ; hlt ; call qword ptr [rsi]
0x0000000000616fa3 : add byte ptr [rbp + rbp*4 - 0x1c47fffe], bl ; hlt ; call qword ptr [rsi]
0x0000000000616f8b : add byte ptr [rbp + rbp*4 - 0x1c4ffffe], al ; hlt ; call qword ptr [rsi]
0x0000000000609f6b : add byte ptr [rbp + rbx*8 + 1], ah ; add al, ah ; ret
0x000000000041f2f2 : add byte ptr [rbp + rcx*4 + 0x44], cl ; and al, 0x18 ; mov rdi, rbx ; call rax
0x00000000005f3f6b : add byte ptr [rbp + rdi*2], ah ; add byte ptr [rax], al ; mov ah, -0x1a ; call qword ptr [rcx]
0x00000000005f3f4b : add byte ptr [rbp + rdi*2], al ; add al, dh ; mov bl, -0x1a ; jmp qword ptr [rsi]
0x00000000005f3f83 : add byte ptr [rbp + rdi*2], bh ; add byte ptr [rax], cl ; mov ah, -0x1a ; jmp rdx
0x000000000060374b : add byte ptr [rbp + rsi*2 + 1], al ; add byte ptr [rax - 0xf], ah ; in al, dx ; call rdi
0x000000000061777b : add byte ptr [rbp + rsi*4 + 2], dh ; add byte ptr [rax], dl ; out -0xc, eax ; call qword ptr [rax]
0x000000000060b7a3 : add byte ptr [rbp + rsi*8 + 0x26e80001], bl ; out dx, eax ; call qword ptr [rcx]
0x0000000000564e6c : add byte ptr [rbp - 0x40], dh ; ret
0x0000000000469af7 : add byte ptr [rbp - 0x74e18b40], al ; xor ecx, dword ptr [rax - 0x7d] ; ret
0x000000000050dfb0 : add byte ptr [rbp - 0x76b601a8], cl ; ret 0x2944
0x000000000040c860 : add byte ptr [rbp - 0x76f28140], al ; ret 0x8948
0x000000000040396e : add byte ptr [rbp - 0x77], cl ; stc ; call rax
0x0000000000403853 : add byte ptr [rbp - 0x7b], cl ; in al, 0xf ; xchg eax, ebp ; ret
0x0000000000467934 : add byte ptr [rbp - 0x7c118b40], al ; ret
0x0000000000500b1d : add byte ptr [rbp - 0x7cdc8140], al ; ret
0x000000000048ecbd : add byte ptr [rbp - 0x7cde8b40], al ; shr byte ptr [rcx], 0x5b ; ret
0x00000000004d8f9d : add byte ptr [rbp - 0x80], dh ; ret
0x000000000043bd19 : add byte ptr [rbp - 0x9ea8a13], al ; ret 0x7401
0x00000000005ea434 : add byte ptr [rbp - 0xa], al ; jmp qword ptr [rax]
0x0000000000470a3c : add byte ptr [rbp - 0xb7f68b], bh ; ret
0x0000000000452fc3 : add byte ptr [rbp - 0xd], bl ; ret
0x0000000000464cb2 : add byte ptr [rbp - 0xdc8b40], al ; ret
0x0000000000553a9a : add byte ptr [rbp - 0xec8b40], al ; ret
0x0000000000489adb : add byte ptr [rbp - 0xef8b40], al ; ret
0x0000000000553b42 : add byte ptr [rbp - 0xf18b40], al ; ret
0x0000000000606f33 : add byte ptr [rbp*4 + 0x1a480001], ch ; out dx, al ; call qword ptr [rcx]
0x0000000000616f43 : add byte ptr [rbp*4 - 0x1c77fffe], bh ; hlt ; jmp qword ptr [rdi]
0x00000000005f6773 : add byte ptr [rbp], ch ; add byte ptr [rax], bl ; jmp rdi
0x00000000005f675b : add byte ptr [rbp], dl ; add byte ptr [rax], ah ; jmp rdi
0x000000000045dc4b : add byte ptr [rbx + 0x33488e4c], cl ; push rsi ; adc al, -0x77 ; ret
0x000000000045dda5 : add byte ptr [rbx + 0x33488e4c], cl ; push rsi ; sub al, -0x77 ; ret
0x000000000045e1a0 : add byte ptr [rbx + 0x33489654], cl ; adc al, -0x77 ; ret
0x000000000045e046 : add byte ptr [rbx + 0x33489654], cl ; sub al, -0x77 ; ret
0x000000000040e9dd : add byte ptr [rbx + 0x415b2843], cl ; pop rsi ; pop r15 ; ret
0x000000000048f16f : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; jmp rax
0x0000000000426516 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000404efb : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; ret
0x000000000041b3a6 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x00000000004a4b11 : add byte ptr [rbx + 0x41], bl ; pop rsi ; ret
0x0000000000408e31 : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004a738f : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r14 ; pop r15 ; ret
0x00000000004ca80f : add byte ptr [rbx + 0x48], dl ; mov ebx, edi ; call qword ptr [rbx]
0x000000000051682e : add byte ptr [rbx + 0x528b784a], cl ; jl 0x51683f ; ret
0x0000000000483203 : add byte ptr [rbx + 0x53], dl ; add byte ptr [rbx - 0x3d], dl ; ret
0x00000000004e64e4 : add byte ptr [rbx + 0x58902c8], al ; ret 0x3480
0x000000000043b6bf : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000426e67 : add byte ptr [rbx + 0x634803c3], al ; ret
0x0000000000555860 : add byte ptr [rbx + 0x77f4b536], al ; ret 0x1e41
0x000000000047db2f : add byte ptr [rbx + 0xc89840c], cl ; ret 0x4c8b
0x0000000000548ba7 : add byte ptr [rbx + 1], bh ; mov eax, ebx ; pop rbx ; ret
0x00000000005e3af0 : add byte ptr [rbx + 1], bl ; add byte ptr [rax], dh ; jl 0x5e3ae7 ; jmp qword ptr [rax]
0x0000000000559be9 : add byte ptr [rbx + rax + 0x41], dh ; jmp rcx
0x00000000006105a3 : add byte ptr [rbx + rax*2 + 0x19280002], bl ; call qword ptr [rax]
0x000000000061052b : add byte ptr [rbx + rax*2], ah ; add al, byte ptr [rax] ; sbb ebx, esi ; call qword ptr [rsi]
0x0000000000602d2b : add byte ptr [rbx + rbp*2], ah ; add dword ptr [rax], eax ; push rax ; iretd ; in al, dx ; jmp rdx
0x0000000000616dbb : add byte ptr [rbx + rbp*4 - 0x1e2ffffe], dh ; hlt ; call qword ptr [rax]
0x0000000000616d13 : add byte ptr [rbx + rbp*4], cl ; add al, byte ptr [rax] ; call 0x226161de
0x00000000005fad53 : add byte ptr [rbx + rbp*8], cl ; add al, bl ; mov dl, -0x17 ; jmp rdi
0x000000000060ad1b : add byte ptr [rbx + rbp*8], dl ; add dword ptr [rax], eax ; add bl, bh ; out dx, al ; call qword ptr [rax]
0x0000000000611d9b : add byte ptr [rbx + rbx*2 + 0x6a000002], dl ; call qword ptr [rcx]
0x0000000000611db3 : add byte ptr [rbx + rbx*2 + 0x6a080002], ch ; call qword ptr [rcx]
0x0000000000611d3b : add byte ptr [rbx + rbx*2], dh ; add al, byte ptr [rax] ; loopne 0x611db3 ; call qword ptr [rcx]
0x0000000000615d4b : add byte ptr [rbx + rbx*4 + 2], al ; add byte ptr [rax], dl ; jns 0x615d4f ; jmp qword ptr [rdi]
0x0000000000610d7b : add byte ptr [rbx + rcx*2 + 2], dh ; add al, dl ; jmp qword ptr es:[rcx]
0x0000000000610d33 : add byte ptr [rbx + rcx*2], ch ; add al, byte ptr [rax] ; fsub dword ptr [rsi] ; call qword ptr [rbx]
0x0000000000600d13 : add byte ptr [rbx + rcx*2], cl ; add dword ptr [rax], eax ; cwde ; sub al, -0x14 ; call rcx
0x0000000000614d9b : add byte ptr [rbx + rcx*4 + 0x44300002], dl ; hlt ; call rax
0x0000000000478251 : add byte ptr [rbx + rcx*4 + 0x73], cl ; xor bh, bh ; and al, 0xfffffffffffffff5 ; pop rax ; ret 0x57
0x0000000000614d83 : add byte ptr [rbx + rcx*4 + 2], bh ; add byte ptr [rax], ch ; hlt ; call qword ptr [rbx]
0x00000000005fcd43 : add byte ptr [rbx + rcx], bh ; add dword ptr [rax], eax ; mov byte ptr [rdi - 0x16], bh ; call qword ptr [rcx]
0x000000000060fd9b : add byte ptr [rbx + rdi + 0x17000002], dl ; call qword ptr [rax]
0x00000000005ffd4b : add byte ptr [rbx + rdi + 1], al ; add byte ptr [rax], al ; mov ch, bl ; jmp qword ptr [rsi]
0x000000000060bda3 : add byte ptr [rbx + rdi*8 + 0x48a80001], bl ; out dx, eax ; jmp rcx
0x00000000005efd7b : add byte ptr [rbx + rdi], dh ; add byte ptr [rax], dl ; out -0x1d, al ; call qword ptr [rsi]
0x00000000006015c3 : add byte ptr [rbx + rdx*2 + 0x6a480001], bh ; in al, dx ; jmp rdx
0x0000000000615533 : add byte ptr [rbx + rdx*4], ch ; add al, byte ptr [rax] ; clc ; pop rax ; hlt ; call qword ptr [rcx]
0x00000000006095bb : add byte ptr [rbx + rdx*8 - 0x5f1fffff], dh ; out dx, al ; call qword ptr [rcx]
0x000000000061756b : add byte ptr [rbx + rsi*4 + 2], ah ; add al, dl ; in eax, -0xc ; call qword ptr [rsi]
0x00000000006175a3 : add byte ptr [rbx + rsi*4 - 0x1a07fffe], bl ; hlt ; call qword ptr [rsi]
0x00000000005e5d64 : add byte ptr [rbx - 0x13], ch ; call rax
0x00000000006013f0 : add byte ptr [rbx - 0x14], bl ; jmp rcx
0x0000000000564ae9 : add byte ptr [rbx - 0x158afe12], al ; ret
0x000000000040ad5f : add byte ptr [rbx - 0x18], dl ; cli ; call 0xffffffffc3c9ad70
0x00000000004a5d4f : add byte ptr [rbx - 0x18], dl ; sub cl, byte ptr [rax + 2] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004a782f : add byte ptr [rbx - 0x18], dl ; sub rax, -0x76b7fffe ; ret
0x000000000057d689 : add byte ptr [rbx - 0x37], al ; and byte ptr [rdx], ah ; ret
0x00000000004d0260 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x1a5 ; pop rbx ; ret
0x000000000047734d : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x820650 ; ret
0x000000000043a26f : add byte ptr [rbx - 0x3d], bl ; pop rbx ; ret
0x00000000004b430e : add byte ptr [rbx - 0x3d], bl ; xor eax, eax ; pop rbx ; ret
0x0000000000483206 : add byte ptr [rbx - 0x3d], dl ; ret
0x000000000060df3b : add byte ptr [rbx - 0x640ffffe], dh ; call qword ptr [rcx]
0x00000000006125a3 : add byte ptr [rbx - 0x7317fffe], bl ; call qword ptr [rsi]
0x000000000061258b : add byte ptr [rbx - 0x731ffffe], al ; call qword ptr [rsi]
0x00000000004670ea : add byte ptr [rbx - 0x73f0e705], al ; ret
0x0000000000405edc : add byte ptr [rbx - 0x76b7fff1], ch ; ret
0x00000000004adba1 : add byte ptr [rbx - 0x7af0fe03], al ; ret 0
0x000000000044083c : add byte ptr [rbx - 0x7cb7013b], al ; ret
0x0000000000434985 : add byte ptr [rbx - 0x7cb7ef8e], cl ; ret 0x4414
0x0000000000464602 : add byte ptr [rbx - 0x7cdfdbac], cl ; ret 0x8940
0x00000000004e5f52 : add byte ptr [rbx - 1], bl ; loopne 0x4e5fb7 ; ret
0x00000000004e6342 : add byte ptr [rbx - 1], bl ; loopne 0x4e63a7 ; ret
0x00000000005eb094 : add byte ptr [rbx - 9], ch ; jmp qword ptr [rax]
0x00000000005e245c : add byte ptr [rbx], -0x1b ; call rax
0x000000000046105f : add byte ptr [rbx], ah ; ja 0x461089 ; mov eax, esi ; ret
0x00000000004d040f : add byte ptr [rbx], ah ; ja 0x4d0429 ; mov eax, esi ; ret
0x00000000004d043f : add byte ptr [rbx], ah ; ja 0x4d04b9 ; mov eax, esi ; ret
0x0000000000485cdc : add byte ptr [rbx], al ; add byte ptr [rax], al ; add bh, bh ; ret
0x0000000000612523 : add byte ptr [rbx], bl ; add al, byte ptr [rax] ; pop rax ; mov esi, ebx ; jmp rdi
0x0000000000606f90 : add byte ptr [rbx], bl ; out dx, al ; call qword ptr [rbx]
0x0000000000489ae7 : add byte ptr [rbx], cl ; add byte ptr [rcx], bh ; ret
0x00000000004d7e19 : add byte ptr [rbx], cl ; pushfq ; xchg dword ptr [rax], esp ; or al, 0 ; add cl, al ; ret
0x00000000004d8290 : add byte ptr [rbx], cl ; xchg eax, esp ; lahf ; and byte ptr [rax + rax], cl ; add cl, al ; ret 0x310b
0x00000000004d937c : add byte ptr [rbx], cl ; xchg eax, esp ; scasd eax, dword ptr [rdi] ; and byte ptr [rax + rax], cl ; add cl, al ; ret 0x310b
0x00000000004d7de0 : add byte ptr [rbx], cl ; xchg eax, esp ; xchg dword ptr [rax], esp ; or al, 0 ; add cl, al ; ret 0x310b
0x00000000005f257b : add byte ptr [rbx], dh ; add al, dh ; add al, -0x1b ; call qword ptr [rbx]
0x000000000048ed9c : add byte ptr [rcx + 0x102], bh ; call rax
0x000000000042baf4 : add byte ptr [rcx + 0x10893], cl ; add byte ptr [rax - 0x7f], cl ; ret
0x000000000048ee01 : add byte ptr [rcx + 0x111], bh ; call rax
0x000000000048eeff : add byte ptr [rcx + 0x121], bh ; call rax
0x000000000048f0a6 : add byte ptr [rcx + 0x133], bh ; call rax
0x00000000004b0046 : add byte ptr [rcx + 0x13d89c7], cl ; ret
0x000000000048f122 : add byte ptr [rcx + 0x148], bh ; call rax
0x000000000048efad : add byte ptr [rcx + 0x156], bh ; call rax
0x000000000048effc : add byte ptr [rcx + 0x15d], bh ; call rax
0x000000000048f21d : add byte ptr [rcx + 0x15d], bh ; call rbx
0x0000000000512516 : add byte ptr [rcx + 0x21], cl ; ret
0x00000000004e1571 : add byte ptr [rcx + 0x29], al ; ret
0x00000000004e137b : add byte ptr [rcx + 0x29], al ; ret 0x2941
0x00000000005e8f88 : add byte ptr [rcx + 0x2d500002], dh ; jmp qword ptr [rax]
0x000000000055e39f : add byte ptr [rcx + 0x31f631f0], cl ; leave ; mov edx, eax ; jmp 0x55e3b8
0x0000000000574767 : add byte ptr [rcx + 0x43], bh ; add byte ptr [rax], al ; ret 0x4361
0x000000000046cbd3 : add byte ptr [rcx + 0x548d49d9], cl ; jmp qword ptr [rax]
0x000000000042c186 : add byte ptr [rcx + 0x58], al ; jmp rax
0x0000000000539abf : add byte ptr [rcx + 0x5be889c5], cl ; pop r14 ; pop rbp ; ret
0x00000000004de7cc : add byte ptr [rcx + 0x5e415bc8], cl ; pop r15 ; ret
0x0000000000487922 : add byte ptr [rcx + 0x5e415bd8], cl ; pop r15 ; ret
0x00000000004034d8 : add byte ptr [rcx + 0x5e415bd8], cl ; pop rbp ; ret
0x0000000000425fec : add byte ptr [rcx + 0x5e415be8], cl ; pop rbp ; ret
0x000000000048ed5b : add byte ptr [rcx + 0xfb], bh ; call rax
0x000000000048eeae : add byte ptr [rcx + 0xfe], bh ; call rax
0x000000000041bb63 : add byte ptr [rcx + 1], al ; fadd qword ptr [rcx - 0x7d] ; call qword ptr [rdi]
0x00000000004e7974 : add byte ptr [rcx + 1], bh ; call r8
0x000000000045e9ed : add byte ptr [rcx + 1], bh ; mov eax, ecx ; pop rbx ; ret
0x00000000004be0aa : add byte ptr [rcx + 1], cl ; ret
0x0000000000562365 : add byte ptr [rcx + 1], cl ; ret 0x1148
0x00000000004be092 : add byte ptr [rcx + 1], cl ; ret 0x8948
0x00000000005eb5b0 : add byte ptr [rcx + 3], cl ; add al, al ; mov dl, -9 ; jmp qword ptr [rax]
0x00000000006103ab : add byte ptr [rcx + rax*2 + 0x19600002], ah ; call qword ptr [rsi]
0x000000000061037b : add byte ptr [rcx + rax*2 + 2], dh ; add byte ptr [rax + 0x19], ah ; call qword ptr [rax]
0x0000000000600313 : add byte ptr [rcx + rax*2], cl ; add dword ptr [rax], eax ; clc ; lodsb al, byte ptr [rsi] ; jmp 0x600323
0x00000000005e2778 : add byte ptr [rcx + rax], al ; add al, dl ; mov dl, -0x1b ; jmp qword ptr [rax]
0x00000000005ec323 : add byte ptr [rcx + rax], bl ; add byte ptr [rax], al ; sbb byte ptr [rbx - 0x1f], ah ; call qword ptr [rax]
0x0000000000609ba3 : add byte ptr [rcx + rbx*8 - 0x4cc7ffff], bl ; out dx, al ; jmp rsp
0x0000000000600b8b : add byte ptr [rcx + rcx*2 + 0x20400001], al ; in al, dx ; jmp qword ptr [rax]
0x0000000000600ba3 : add byte ptr [rcx + rcx*2 + 0x21480001], bl ; in al, dx ; jmp qword ptr [rdi]
0x0000000000421b39 : add byte ptr [rcx + rcx*4 + 0x2c], cl ; and al, 0xfffffffffffffff6 ; ret
0x000000000051004d : add byte ptr [rcx + rcx*4 + 0x34], cl ; and al, 0xffffffffffffffff ; ret
0x0000000000614bbb : add byte ptr [rcx + rcx*4 + 0x41100002], dh ; hlt ; call qword ptr [rdx]
0x00000000004cc400 : add byte ptr [rcx + rcx*4 + 0x64], cl ; ret
0x0000000000604b63 : add byte ptr [rcx + rcx*4 + 1], bl ; add byte ptr [rax], bl ; xchg eax, edx ; in eax, dx ; jmp qword ptr [rcx]
0x00000000004ec8e5 : add byte ptr [rcx + rcx*4 - 0x10], al ; pop rbx ; pop r14 ; pop r15 ; ret
0x000000000041db13 : add byte ptr [rcx + rcx*4 - 0x10], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000042e720 : add byte ptr [rcx + rcx*4 - 0x10], cl ; pop rbx ; pop r14 ; pop r15 ; ret
0x000000000043419f : add byte ptr [rcx + rcx*4 - 0x11], cl ; call 0x4d03f6
0x000000000046a0eb : add byte ptr [rcx + rcx*4 - 0x11], cl ; call 0x4e6316
0x00000000004084de : add byte ptr [rcx + rcx*4 - 0x11], cl ; call qword ptr [rax]
0x000000000040ee36 : add byte ptr [rcx + rcx*4 - 0x11], cl ; call r14
0x00000000004101af : add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x00000000004101f7 : add byte ptr [rcx + rcx*4 - 0x11], cl ; mov edx, r14d ; call rbx
0x000000000046efaf : add byte ptr [rcx + rcx*4 - 0x11], cl ; mov rsi, r14 ; call rbx
0x000000000042c766 : add byte ptr [rcx + rcx*4 - 0x12], cl ; call r15
0x000000000041c65e : add byte ptr [rcx + rcx*4 - 0x17], cl ; mov r9, rbp ; call rax
0x00000000004047d2 : add byte ptr [rcx + rcx*4 - 0x17], cl ; mov r9, rbx ; call rax
0x000000000040bcde : add byte ptr [rcx + rcx*4 - 0x19], cl ; call r14
0x000000000040b24e : add byte ptr [rcx + rcx*4 - 0x19], cl ; call r15
0x000000000041fc33 : add byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x000000000040cf91 : add byte ptr [rcx + rcx*4 - 0x19], cl ; mov edx, ebp ; call r14
0x000000000040b3ad : add byte ptr [rcx + rcx*4 - 0x19], cl ; mov edx, r14d ; call r15
0x00000000004b8c1c : add byte ptr [rcx + rcx*4 - 0x19], cl ; mov rcx, rbx ; call r8
0x000000000048a890 : add byte ptr [rcx + rcx*4 - 0x1f], cl ; call rax
0x00000000004e8efc : add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; ret
0x00000000004cc40c : add byte ptr [rcx + rcx*4 - 0x44], cl ; ret
0x0000000000512742 : add byte ptr [rcx + rcx*4 - 0x79], cl ; mov eax, 0xf3000000 ; ret
0x0000000000403349 : add byte ptr [rcx + rcx*4 - 0xe], al ; mov r9, r15 ; call rax
0x0000000000410789 : add byte ptr [rcx + rcx*4 - 0xe], al ; mov r9, rbx ; call rax
0x0000000000404901 : add byte ptr [rcx + rcx*4 - 0xf], cl ; mov r9, rbx ; call rax
0x0000000000404607 : add byte ptr [rcx + rcx*4 - 1], cl ; call 0x500906
0x0000000000461e5e : add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x000000000041d0c2 : add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x00000000004aa06a : add byte ptr [rcx + rcx*4 - 1], cl ; mov r8, r14 ; call rax
0x0000000000429ff7 : add byte ptr [rcx + rcx*4 - 8], al ; pop rbx ; pop r14 ; pop r15 ; ret
0x0000000000545ed4 : add byte ptr [rcx + rcx*4 - 9], cl ; call 0x402176
0x0000000000434151 : add byte ptr [rcx + rcx*4 - 9], cl ; call 0x4d0396
0x000000000040504d : add byte ptr [rcx + rcx*4 - 9], cl ; call r12
0x0000000000461ede : add byte ptr [rcx + rcx*4 - 9], cl ; call rax
0x000000000040ac06 : add byte ptr [rcx + rcx*4 - 9], cl ; call rcx
0x0000000000405a8d : add byte ptr [rcx + rcx*4 - 9], cl ; mov edx, r15d ; call r12
0x000000000041e784 : add byte ptr [rcx + rcx*4 - 9], cl ; mov esi, eax ; mov rdx, rcx ; call rbx
0x0000000000461a05 : add byte ptr [rcx + rcx*4 - 9], cl ; mov rdx, rbx ; call r15
0x000000000043a763 : add byte ptr [rcx + rcx*4 - 9], cl ; mov rsi, r10 ; mov edx, r8d ; call rax
0x0000000000442db6 : add byte ptr [rcx + rcx*4 - 9], cl ; mov rsi, r12 ; call r15
0x000000000055050d : add byte ptr [rcx + rcx*4 - 9], cl ; mov rsi, r12 ; call rax
0x0000000000567adf : add byte ptr [rcx + rcx*4 - 9], cl ; mov rsi, rbx ; call rax
0x0000000000604b13 : add byte ptr [rcx + rcx*4], cl ; add dword ptr [rax], eax ; test al, -0x71 ; in eax, dx ; call rsp
0x00000000004c806a : add byte ptr [rcx + rcx*8 + 0x5c60775], al ; ret 0x3643
0x0000000000607bc3 : add byte ptr [rcx + rdi*4 + 0x39680001], bh ; out dx, al ; call qword ptr [rdi]
0x000000000060bb13 : add byte ptr [rcx + rdi*8], cl ; add dword ptr [rax], eax ; fdivr dword ptr [rsi] ; out dx, eax ; jmp rsi
0x000000000060538b : add byte ptr [rcx + rdx*4 - 0x498fffff], al ; in eax, dx ; jmp rdx
0x00000000005f533b : add byte ptr [rcx + rdx*4], dh ; add byte ptr [rax], al ; ror byte ptr [rcx - 0x19], 1 ; call qword ptr [rdi]
0x000000000061338b : add byte ptr [rcx + rsi*2 - 0x4f8ffffe], al ; jmp qword ptr [rdx]
0x00000000005f3323 : add byte ptr [rcx + rsi*2], bl ; add byte ptr [rax], al ; sub byte ptr [rdi - 0x1a], al ; jmp rax
0x000000000060735b : add byte ptr [rcx + rsi*4 + 1], dl ; add byte ptr [rax], dl ; xor ch, dh ; jmp rsi
0x0000000000617363 : add byte ptr [rcx + rsi*4 + 2], bl ; add al, bh ; in al, -0xc ; call qword ptr [rsi]
0x0000000000617393 : add byte ptr [rcx + rsi*4 - 0x1af7fffe], cl ; hlt ; call qword ptr [rsi]
0x0000000000617333 : add byte ptr [rcx + rsi*4], ch ; add al, byte ptr [rax] ; call 0x17616829
0x000000000040ac32 : add byte ptr [rcx - 0x2676b732], cl ; mov r9, r14 ; call rax
0x00000000004b0082 : add byte ptr [rcx - 0x3ac27639], cl ; ret 0x37
0x0000000000402e29 : add byte ptr [rcx - 0x3b7cb718], cl ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000408700 : add byte ptr [rcx - 0x3b7cb718], cl ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000004ddc8a : add byte ptr [rcx - 0x3b7cb738], cl ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000004f3a6c : add byte ptr [rcx - 0x3fce0003], cl ; pop rbx ; ret
0x0000000000552ca2 : add byte ptr [rcx - 0x48], al ; add byte ptr [rax], al ; add al, ch ; ret 0xf796
0x00000000004f0112 : add byte ptr [rcx - 0x48], al ; insb byte ptr [rdi], dx ; add byte ptr [rax], al ; add al, ch ; push rdx ; ret 0xfffd
0x00000000004bb1a2 : add byte ptr [rcx - 0x48], al ; leave ; add dword ptr [rax], eax ; add al, ch ; ret 0x111
0x00000000005461a2 : add byte ptr [rcx - 0x48], al ; outsb dx, byte ptr [rsi] ; add al, byte ptr [rax] ; add al, ch ; ret 0xf861
0x00000000005100d1 : add byte ptr [rcx - 0x48], al ; pop rax ; add byte ptr [rax], al ; add al, ch ; xchg eax, ebx ; ret 0xfffb
0x00000000005676d9 : add byte ptr [rcx - 0x48], al ; pop rsi ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000000004bc1db : add byte ptr [rcx - 0x48], al ; push rax ; ret 0x4b
0x000000000040891e : add byte ptr [rcx - 0x48], al ; ret
0x000000000042a791 : add byte ptr [rcx - 0x48], al ; ret 0
0x0000000000458265 : add byte ptr [rcx - 0x48], al ; ret 1
0x00000000004fc52e : add byte ptr [rcx - 0x48], al ; ret 2
0x0000000000430426 : add byte ptr [rcx - 0x48], al ; ret 3
0x0000000000414ac8 : add byte ptr [rcx - 0x48], al ; ret 6
0x000000000055c932 : add byte ptr [rcx - 0x48], al ; salc ; add byte ptr [rax], al ; add al, ch ; ret 0xf32a
0x00000000004200be : add byte ptr [rcx - 0x48], al ; sub eax, dword ptr [rdi] ; add byte ptr [rax], al ; call 0x4cc379
0x00000000004c9bf4 : add byte ptr [rcx - 0x48], al ; xchg eax, esi ; add dword ptr [rax], eax ; add cl, ch ; ret
0x00000000004b00b3 : add byte ptr [rcx - 0x6bc27639], cl ; ret 0x37
0x000000000045fb73 : add byte ptr [rcx - 0x75], al ; add al, 0x39 ; ret 0x1b7d
0x000000000046973c : add byte ptr [rcx - 0x75], cl ; add byte ptr [r9 - 0x77], r9b ; ret
0x000000000046b83f : add byte ptr [rcx - 0x75], cl ; add byte ptr [rcx - 0x75], cl ; sbb dword ptr [rax + 0x31], ecx ; ret
0x000000000046b842 : add byte ptr [rcx - 0x75], cl ; sbb dword ptr [rax + 0x31], ecx ; ret
0x000000000050034f : add byte ptr [rcx - 0x7600ce08], cl ; ret 0x95e9
0x00000000005b5c11 : add byte ptr [rcx - 0x76], dh ; ret 0xe440
0x0000000000427126 : add byte ptr [rcx - 0x77], al ; fimul word ptr [rax - 0x77] ; ret
0x0000000000468a1f : add byte ptr [rcx - 0x77], al ; ret 0x2941
0x000000000047d519 : add byte ptr [rcx - 0x77], al ; ret 0x8949
0x00000000005156ae : add byte ptr [rcx - 0x77], al ; ret 0xc141
0x0000000000456789 : add byte ptr [rcx - 0x77], cl ; fisttp qword ptr [rax - 0x77] ; ret
0x00000000004823f7 : add byte ptr [rcx - 0x77], cl ; pop rbp ; or byte ptr [rcx - 0x77], cl ; ret
0x0000000000402a51 : add byte ptr [rcx - 0x77], cl ; pop rdi ; cmp byte ptr [rax - 0x7d], cl ; ret
0x000000000044603f : add byte ptr [rcx - 0x77], cl ; ret
0x0000000000447fb9 : add byte ptr [rcx - 0x7d], cl ; call qword ptr [rax]
0x000000000040f6ad : add byte ptr [rcx - 0x7d], cl ; call qword ptr [rcx]
0x000000000040bdaa : add byte ptr [rcx - 0x7f], al ; call qword ptr [rax]
0x0000000000485040 : add byte ptr [rcx - 0x7f], al ; call qword ptr [rbx]
0x000000000041df5f : add byte ptr [rcx - 0x7f], al ; std ; jmp qword ptr [rcx]
0x00000000005e8694 : add byte ptr [rcx - 0xf], dl ; jmp rax
0x0000000000514196 : add byte ptr [rcx - 1], al ; leave ; jne 0x514187 ; ret
0x000000000052bcd0 : add byte ptr [rcx - 9], al ; ret 0x200
0x0000000000445fab : add byte ptr [rcx - 9], cl ; ret 0xfff0
0x0000000000610f0b : add byte ptr [rcx*2 + 0x2bd00002], al ; call rdi
0x0000000000420eb5 : add byte ptr [rcx], 0 ; add al, ch ; ret 0xff01
0x0000000000432d23 : add byte ptr [rcx], 0 ; add byte ptr [rax + 0x574057], bh ; ret
0x0000000000463c39 : add byte ptr [rcx], 0 ; add byte ptr [rax - 0x77], cl ; ret 0x4be9
0x00000000005ee32b : add byte ptr [rcx], ah ; add byte ptr [rax], al ; ror byte ptr [rax], -0x1d ; call qword ptr [rdx]
0x000000000058c908 : add byte ptr [rcx], ah ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xeec8
0x00000000005c36cf : add byte ptr [rcx], ah ; ret
0x00000000004e2341 : add byte ptr [rcx], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], cl ; ret 0x8941
0x000000000048a617 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add bh, bh ; ret
0x000000000040a4c5 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x00000000004cf2d2 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret
0x00000000004d8f9a : add byte ptr [rcx], al ; add byte ptr [rax], al ; jne 0x4d8f26 ; ret
0x00000000004046d1 : add byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000000004034f8 : add byte ptr [rcx], al ; add byte ptr [rax], al ; sub ecx, eax ; mov eax, ecx ; pop rdx ; ret
0x000000000058c906 : add byte ptr [rcx], al ; add byte ptr [rcx], ah ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xeec8
0x00000000004bbe2f : add byte ptr [rcx], al ; mov eax, 0x82c3e0 ; pop rdx ; ret
0x00000000004023b8 : add byte ptr [rcx], al ; ret
0x00000000005684f9 : add byte ptr [rcx], al ; vpsubsb xmm3, xmm14, xmmword ptr [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0x00000000005e6cb4 : add byte ptr [rcx], bh ; out dx, eax ; jmp rax
0x000000000040a0aa : add byte ptr [rcx], bh ; ret
0x0000000000481491 : add byte ptr [rcx], bh ; ret 0x167d
0x0000000000610620 : add byte ptr [rcx], bl ; call qword ptr [rax]
0x0000000000610650 : add byte ptr [rcx], bl ; call qword ptr [rsi]
0x000000000040ad93 : add byte ptr [rcx], ch ; ret
0x000000000045fc8c : add byte ptr [rcx], ch ; ret 0x4ce8
0x00000000004645db : add byte ptr [rcx], ch ; ret 0x5489
0x00000000004c1a50 : add byte ptr [rcx], ch ; ret 0x8348
0x0000000000471967 : add byte ptr [rcx], ch ; ret 0x8941
0x000000000040c034 : add byte ptr [rcx], ch ; ret 0x894c
0x0000000000462ae0 : add byte ptr [rcx], ch ; ret 0x8b49
0x000000000043847a : add byte ptr [rcx], ch ; ret 0xc031
0x00000000004e5ad6 : add byte ptr [rcx], ch ; ret 0xf631
0x00000000004c1f42 : add byte ptr [rcx], ch ; ret 0xff48
0x0000000000438473 : add byte ptr [rcx], ch ; sar dword ptr [rdx + 0x1fc], 0x29 ; ret 0xc031
0x000000000046106f : add byte ptr [rcx], cl ; ja 0x461097 ; ret
0x00000000004b7b3f : add byte ptr [rcx], cl ; ja 0x4b7b73 ; ret
0x0000000000572a6f : add byte ptr [rcx], cl ; ret
0x00000000004a33d5 : add byte ptr [rcx], cl ; ret 0x8944
0x00000000004a1af2 : add byte ptr [rcx], cl ; ret 0xd889
0x000000000055cdca : add byte ptr [rcx], dh ; dec dword ptr [rcx + rcx*4 - 0xa] ; call r15
0x0000000000538ec8 : add byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x77] ; ret 0x13eb
0x0000000000412bbd : add byte ptr [rcx], dh ; fucomi st(1) ; ret
0x0000000000444c46 : add byte ptr [rcx], dh ; fucomi st(3) ; ret 0x2e66
0x00000000004b1b15 : add byte ptr [rcx], dh ; imul al ; ret
0x000000000053e08a : add byte ptr [rcx], dh ; in eax, dx ; jmp 0x53e0c1
0x0000000000405cfc : add byte ptr [rcx], dh ; in eax, dx ; mov eax, ebp ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040718b : add byte ptr [rcx], dh ; in eax, dx ; xor esi, esi ; mov rdi, r12 ; call qword ptr [rax]
0x00000000004e7d1f : add byte ptr [rcx], dh ; leave ; call r12
0x00000000004cf821 : add byte ptr [rcx], dh ; leave ; call rax
0x000000000042cd71 : add byte ptr [rcx], dh ; leave ; mov eax, ecx ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000053eeeb : add byte ptr [rcx], dh ; leave ; mov rsi, r12 ; mov rdx, r15 ; call rax
0x000000000040250f : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x41], 0x5e ; pop r15 ; ret
0x000000000042b607 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0x00000000004b8fdc : add byte ptr [rcx], dh ; rcr byte ptr [rdx - 0x3d], 0x58 ; jmp r11
0x00000000004b9294 : add byte ptr [rcx], dh ; rcr byte ptr [rdx - 0x3d], 0x58 ; jmp r8
0x00000000004b909f : add byte ptr [rcx], dh ; rcr byte ptr [rdx - 0x3d], 0x58 ; jmp r9
0x00000000004b92ef : add byte ptr [rcx], dh ; rcr byte ptr [rdx - 0x3d], 0x59 ; jmp rax
0x00000000004b8f7c : add byte ptr [rcx], dh ; rcr byte ptr [rdx - 0x3d], 0x5a ; jmp rax
0x0000000000572a8f : add byte ptr [rcx], dh ; ret
0x000000000047d87d : add byte ptr [rcx], dh ; ret 0x8b48
0x00000000004a0208 : add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], -0x2a ; je 0x4a0219 ; ret
0x0000000000457bee : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x73], cl ; and al, 0x50 ; call rax
0x000000000048911e : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x75], cl ; and al, 0x30 ; call rax
0x00000000004ff884 : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], cl ; fisttp word ptr [rcx + rcx*4 - 0xf] ; call rax
0x00000000004bc3b8 : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], -0x3c ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000040a5c4 : add byte ptr [rcx], dh ; ror byte ptr [rbp - 0x77], cl ; int1 ; call rax
0x000000000040b751 : add byte ptr [rcx], dh ; ror byte ptr [rbp - 0x77], cl ; stc ; call rax
0x00000000005613f8 : add byte ptr [rcx], dh ; ror byte ptr [rcx + rcx*4 - 0x16], -0x18 ; popfq ; ret 0xfff6
0x00000000004fdbbc : add byte ptr [rcx], dh ; ror byte ptr [rcx + rcx*4 - 0x19], cl ; mov rcx, r13 ; call rbx
0x0000000000542412 : add byte ptr [rcx], dh ; ror byte ptr [rcx + rcx*4 - 0xe], -0x18 ; ret
0x000000000049c1d3 : add byte ptr [rcx], dh ; ror byte ptr [rcx + rcx*4 - 0xe], -0x18 ; ret 0x314
0x0000000000484baa : add byte ptr [rcx], dh ; ror byte ptr [rcx + rcx*4 - 9], cl ; call rax
0x00000000004fd823 : add byte ptr [rcx], dh ; ror byte ptr [rcx + rcx*4 - 9], cl ; mov rcx, r13 ; call rax
0x000000000040526c : add byte ptr [rcx], dh ; sal byte ptr [rcx], cl ; leave ; call 0x461567
0x000000000044191d : add byte ptr [rcx], dh ; test byte ptr [rax - 0x77], -0x39 ; call rbx
0x000000000060ff1b : add byte ptr [rdi + 0x17a00002], dl ; call qword ptr [rax]
0x00000000004195c3 : add byte ptr [rdi + 0x28], bh ; mov eax, edi ; ret
0x00000000004195ac : add byte ptr [rdi + 0x2a], bh ; mov eax, edi ; ret
0x0000000000596aa0 : add byte ptr [rdi + 0x3834d824], bl ; ret 0xa070
0x000000000059df2f : add byte ptr [rdi + 0x45], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; jne 0x59df6e ; ret 0xc109
0x00000000004aedbd : add byte ptr [rdi + 0x589e71], bh ; call r14
0x0000000000482dc8 : add byte ptr [rdi + 0x67], ah ; ret 0xc200
0x0000000000482dc7 : add byte ptr [rdi + 0x67], r12b ; ret 0xc200
0x00000000005b367d : add byte ptr [rdi + 0x7253c90c], cl ; ret 0xe981
0x000000000060696b : add byte ptr [rdi + 1], ah ; add al, dl ; add al, -0x12 ; jmp qword ptr [rdi]
0x00000000004cdc21 : add byte ptr [rdi + 1], bh ; call qword ptr [rax]
0x000000000060e983 : add byte ptr [rdi + 2], bh ; add al, bl ; xlatb ; call qword ptr [rbx]
0x000000000047af40 : add byte ptr [rdi + 2], dh ; sbb eax, eax ; ret
0x00000000005caaf7 : add byte ptr [rdi + 3], bl ; add byte ptr [rax], al ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; jmp qword ptr [rcx]
0x000000000045840c : add byte ptr [rdi + rax - 0x77], dh ; ret
0x000000000061716b : add byte ptr [rdi + rbp*4 + 2], ah ; add byte ptr [rax - 0x1c], dl ; hlt ; call qword ptr [rsi]
0x0000000000617183 : add byte ptr [rdi + rbp*4 + 2], bh ; add byte ptr [rax - 0x1c], bl ; hlt ; call qword ptr [rsi]
0x00000000006171b3 : add byte ptr [rdi + rbp*4 - 0x1b97fffe], ch ; hlt ; call qword ptr [rsi]
0x000000000061719b : add byte ptr [rdi + rbp*4 - 0x1b9ffffe], dl ; hlt ; call qword ptr [rsi]
0x00000000005f712b : add byte ptr [rdi + rbp*4], ah ; add byte ptr [rax], al ; sub byte ptr [rcx], -0x18 ; call qword ptr [rsi]
0x000000000061710b : add byte ptr [rdi + rbp*4], al ; add al, byte ptr [rax] ; xor ah, ah ; hlt ; call qword ptr [rsi]
0x0000000000617123 : add byte ptr [rdi + rbp*4], bl ; add al, byte ptr [rax] ; cmp ah, ah ; hlt ; call qword ptr [rsi]
0x000000000061713b : add byte ptr [rdi + rbp*4], dh ; add al, byte ptr [rax] ; in al, -0xc ; call qword ptr [rsi]
0x0000000000602153 : add byte ptr [rdi + rbx*2 + 1], cl ; add byte ptr [rax], bh ; popfq ; in al, dx ; jmp qword ptr [rdi]
0x00000000005f216b : add byte ptr [rdi + rbx*2], ah ; add al, al ; out -0x1c, eax ; call rcx
0x0000000000602113 : add byte ptr [rdi + rbx*2], cl ; add dword ptr [rax], eax ; clc ; wait ; in al, dx ; jmp qword ptr [rsi]
0x00000000004e795e : add byte ptr [rdi + rcx + 0x45], cl ; ret
0x00000000004e795d : add byte ptr [rdi + rcx + 0x45], r9b ; ret
0x000000000045261f : add byte ptr [rdi + rcx + 0x57], al ; ret 0xf66
0x000000000047c11f : add byte ptr [rdi + rcx - 0x4a], al ; ret
0x000000000047c1e2 : add byte ptr [rdi + rcx - 0x4a], al ; ret 0xd389
0x0000000000611153 : add byte ptr [rdi + rcx*2 + 2], cl ; add al, bh ; xor bl, dh ; call qword ptr [rax]
0x00000000005f1183 : add byte ptr [rdi + rcx*2], bh ; add byte ptr [rax + 0x59], cl ; in al, -1 ; ret
0x00000000005f5123 : add byte ptr [rdi + rcx*4], bl ; add byte ptr [rax], al ; js 0x5f516e ; out -1, eax ; ret
0x00000000005f9183 : add byte ptr [rdi + rcx*8], bh ; add al, ch ; sbb ebp, ecx ; call qword ptr [rdi]
0x000000000040a125 : add byte ptr [rdi + rcx], al ; xchg eax, esp ; ret 0x8948
0x00000000006101b3 : add byte ptr [rdi + rdi + 0x19580002], ch ; call qword ptr [rax]
0x000000000060016b : add byte ptr [rdi + rdi + 1], ah ; add al, ah ; xchg eax, ebx ; jmp 0x60017b
0x0000000000600153 : add byte ptr [rdi + rdi + 1], cl ; add al, cl ; xchg eax, ebx ; jmp 0x600163
0x00000000006001bb : add byte ptr [rdi + rdi - 0x5eafffff], dh ; jmp 0x6001cb
0x00000000005f4123 : add byte ptr [rdi + rdi*2], bl ; add byte ptr [rax], al ; pop rax ; ret
0x00000000006081bb : add byte ptr [rdi + rdi*4 + 0x3fc00001], dh ; out dx, al ; call qword ptr [rcx]
0x00000000006181c3 : add byte ptr [rdi + rdi*4 + 0x580002], bh ; cmc ; call qword ptr [rax]
0x0000000000600123 : add byte ptr [rdi + rdi], bl ; add dword ptr [rax], eax ; js 0x6000c5 ; jmp 0x600133
0x0000000000615973 : add byte ptr [rdi + rdx*4 + 2], ch ; add byte ptr [rax + 0x63], bh ; hlt ; jmp qword ptr [rcx]
0x000000000061592b : add byte ptr [rdi + rdx*4], ah ; add al, byte ptr [rax] ; and byte ptr [rdx - 0xc], ah ; call rcx
0x00000000006099b3 : add byte ptr [rdi + rdx*8 - 0x4f47ffff], ch ; out dx, al ; call qword ptr [rbx]
0x0000000000603993 : add byte ptr [rdi + rsi*2 + 0x12180001], cl ; in eax, dx ; jmp qword ptr [rcx]
0x00000000005e5cec : add byte ptr [rdi - 0x13], ah ; jmp qword ptr [rax]
0x00000000005e51d0 : add byte ptr [rdi - 0xefffff], dh ; jmp 0x5e51de
0x00000000005e8654 : add byte ptr [rdi - 0xf], cl ; call qword ptr [rax]
0x00000000005ec18c : add byte ptr [rdi - 8], dh ; jmp rax
0x00000000005eb1cc : add byte ptr [rdi - 9], bh ; call rax
0x00000000004551fa : add byte ptr [rdi], 0 ; test rax, rax ; je 0x45520d ; pop rax ; ret
0x0000000000431e27 : add byte ptr [rdi], al ; add byte ptr [rax], al ; mov eax, 0x573b5f ; ret
0x0000000000460f36 : add byte ptr [rdi], al ; add byte ptr [rcx + 0x5e415be8], cl ; pop rbp ; ret
0x00000000005df217 : add byte ptr [rdi], al ; ret 0x55
0x00000000005c3427 : add byte ptr [rdi], al ; ret 0x5c
0x00000000005e7230 : add byte ptr [rdi], bh ; add al, byte ptr [rax] ; jo 0x5e722d ; out dx, eax ; jmp qword ptr [rax]
0x0000000000602933 : add byte ptr [rdi], ch ; add dword ptr [rax], eax ; call 0xffffffffc4601602
0x00000000005b50f1 : add byte ptr [rdi], ch ; push rbp ; cdq ; ret
0x000000000048f37f : add byte ptr [rdi], cl ; adc byte ptr [rsi], al ; movups xmmword ptr [rdi], xmm0 ; ret
0x00000000004ca675 : add byte ptr [rdi], cl ; adc dword ptr [rdi + 0x78], eax ; movups xmmword ptr [rdi + 0x68], xmm0 ; ret
0x000000000041a746 : add byte ptr [rdi], cl ; add byte ptr [rax - 0x77], cl ; ret
0x000000000058d050 : add byte ptr [rdi], cl ; jmp rcx
0x000000000040a3c9 : add byte ptr [rdi], cl ; lahf ; ret 0x8440
0x000000000054ab1f : add byte ptr [rdi], cl ; mov dh, 0x4b ; add dword ptr [rax - 1], ecx ; ret
0x000000000055751e : add byte ptr [rdi], cl ; mov dh, 0x6b ; call rbx
0x000000000053ae31 : add byte ptr [rdi], cl ; ret
0x000000000046a955 : add byte ptr [rdi], cl ; ret 0x589
0x00000000004e4fd3 : add byte ptr [rdi], cl ; ret 0x8941
0x000000000053a5ee : add byte ptr [rdi], cl ; ret 0xaba
0x00000000005128d7 : add byte ptr [rdi], cl ; ret 0xe083
0x000000000049f0da : add byte ptr [rdi], cl ; test al, bl ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret
0x0000000000441eb9 : add byte ptr [rdi], cl ; test byte ptr [rax - 0x1000000], ch ; ret
0x000000000045885e : add byte ptr [rdi], cl ; test byte ptr [rax], dl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000458c3a : add byte ptr [rdi], cl ; test byte ptr [rdi], bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000458c92 : add byte ptr [rdi], cl ; test byte ptr [rdi], cl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004588c2 : add byte ptr [rdi], cl ; test ch, ah ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000445fa5 : add byte ptr [rdi], cl ; test dl, ah ; add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 0xfff0
0x000000000050a881 : add byte ptr [rdi], cl ; test dl, dl ; add byte ptr [rax], al ; add al, ch ; ret
0x000000000043fa47 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000551796 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x00000000004409d5 : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0x8948
0x000000000044293f : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc085
0x00000000004cfbf0 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc208
0x000000000041b639 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc284
0x0000000000554aca : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc985
0x0000000000572ab7 : add byte ptr [rdi], dh ; ret
0x000000000060fda0 : add byte ptr [rdi], dl ; call qword ptr [rax]
0x00000000004b9d1f : add byte ptr [rdx + 0x226], bh ; call 0x4e5f68
0x00000000004031cd : add byte ptr [rdx + 0x56a214], bh ; call 0x48f3e8
0x0000000000482a50 : add byte ptr [rdx + 0x5a], bl ; pop rdx ; ret
0x00000000004e7d1a : add byte ptr [rdx + 0x5bde93], bh ; xor ecx, ecx ; call r12
0x0000000000541eef : add byte ptr [rdx + 0x5d9950], bh ; jmp 0x53e1b8
0x0000000000559c7a : add byte ptr [rdx + 0xba], bh ; call 0x4e5f68
0x000000000048a88b : add byte ptr [rdx + 1], bh ; mov rcx, r12 ; call rax
0x000000000048a396 : add byte ptr [rdx + 1], bh ; mov rcx, rbx ; call rax
0x00000000004101aa : add byte ptr [rdx + 1], bh ; mov rdi, r13 ; call rbx
0x0000000000442be0 : add byte ptr [rdx + 1], bh ; mov rdi, r15 ; call rbx
0x000000000044d42f : add byte ptr [rdx + rax + 0xf], dh ; or esi, ebx ; ret
0x0000000000610453 : add byte ptr [rdx + rax*2 + 2], cl ; add byte ptr [rax + 0x19], bl ; call qword ptr [rax]
0x0000000000618433 : add byte ptr [rdx + rax*8], ch ; add al, byte ptr [rax] ; test al, -1 ; hlt ; call qword ptr [rax]
0x00000000005ec423 : add byte ptr [rdx + rax], bl ; add byte ptr [rax], al ; sbb byte ptr [rdx - 0x1f], ch ; jmp qword ptr [rsi]
0x000000000060ecb3 : add byte ptr [rdx + rbp + 0x780002], ch ; call qword ptr [rdx]
0x0000000000602cc3 : add byte ptr [rdx + rbp*2 - 0x3137ffff], bh ; in al, dx ; call qword ptr [rcx]
0x0000000000606c8b : add byte ptr [rdx + rbp*4 + 0x14d00001], al ; out dx, al ; jmp qword ptr [rdi]
0x0000000000606cbb : add byte ptr [rdx + rbp*4 + 0x15000001], dh ; out dx, al ; jmp qword ptr [rdi]
0x0000000000616cc3 : add byte ptr [rdx + rbp*4 - 0x5017fffe], bh ; hlt ; jmp rbx
0x0000000000611c0b : add byte ptr [rdx + rbx*2], al ; add al, byte ptr [rax] ; adc byte ptr [rax - 0xd], ch ; call qword ptr [rdi]
0x0000000000609c2b : add byte ptr [rdx + rbx*8], ah ; add dword ptr [rax], eax ; loopne 0x609bee ; out dx, al ; call qword ptr [rbx]
0x0000000000617c3b : add byte ptr [rdx + rdi*4], dh ; add al, byte ptr [rax] ; shr bh, -0xc ; call rbx
0x000000000060bcab : add byte ptr [rdx + rdi*8 + 0x44100001], ah ; out dx, eax ; call qword ptr [rcx]
0x000000000061141b : add byte ptr [rdx + rdx*2], dl ; add al, byte ptr [rax] ; jo 0x61146c ; call qword ptr [rbx]
0x0000000000605453 : add byte ptr [rdx + rdx*4 + 1], cl ; add byte ptr [rax - 0x47], ch ; in eax, dx ; jmp qword ptr [rsi]
0x000000000061745b : add byte ptr [rdx + rsi*4 + 2], dl ; add byte ptr [rax - 0x1b], ah ; hlt ; call qword ptr [rsi]
0x00000000006174bb : add byte ptr [rdx + rsi*4 - 0x1a7ffffe], dh ; hlt ; call qword ptr [rsi]
0x000000000061748b : add byte ptr [rdx + rsi*4 - 0x1a8ffffe], al ; hlt ; call qword ptr [rsi]
0x000000000061742b : add byte ptr [rdx + rsi*4], ah ; add al, byte ptr [rax] ; push rax ; in eax, -0xc ; call qword ptr [rsi]
0x0000000000617413 : add byte ptr [rdx + rsi*4], cl ; add al, byte ptr [rax] ; in eax, -0xc ; call qword ptr [rsi]
0x000000000060b4c3 : add byte ptr [rdx + rsi*8 + 0x1b780001], bh ; out dx, eax ; call qword ptr [rax]
0x00000000005e6d04 : add byte ptr [rdx - 0x11], ch ; call rax
0x00000000004dd7dc : add byte ptr [rdx - 0x3d], bl ; nop ; mov eax, 1 ; ret
0x00000000004a59a7 : add byte ptr [rdx - 0x3d], bl ; nop word ptr [rax + rax] ; ret
0x000000000060e4bb : add byte ptr [rdx - 0x48affffe], dh ; jmp qword ptr [rax]
0x00000000005e4e60 : add byte ptr [rdx - 0x518fffff], ch ; jmp 0x5e4e6e
0x000000000061649b : add byte ptr [rdx - 0x5faffffe], dl ; hlt ; jmp qword ptr [rdi]
0x000000000048832c : add byte ptr [rdx - 0x76b70009], bl ; ret 0x8948
0x0000000000612493 : add byte ptr [rdx - 0x77b7fffe], cl ; call qword ptr [rdx]
0x00000000005e9464 : add byte ptr [rdx - 0xd], ah ; call qword ptr [rax]
0x0000000000611da0 : add byte ptr [rdx - 0xd], ch ; call qword ptr [rcx]
0x00000000005ebefc : add byte ptr [rdx - 8], ah ; jmp rax
0x000000000057dc90 : add byte ptr [rdx], -0x24 ; ret
0x000000000060642b : add byte ptr [rdx], ah ; add dword ptr [rax], eax ; mov al, -0x13 ; in eax, dx ; jmp qword ptr [rax]
0x0000000000572a7f : add byte ptr [rdx], ah ; ret
0x00000000005df22f : add byte ptr [rdx], ah ; ret 0x55
0x00000000005e6309 : add byte ptr [rdx], al ; add al, dh ; push rax ; out dx, al ; jmp qword ptr [rax]
0x0000000000485dc3 : add byte ptr [rdx], al ; add byte ptr [rax], al ; add bh, bh ; ret
0x000000000041fc30 : add byte ptr [rdx], al ; add byte ptr [rax], al ; mov rdi, r12 ; call rax
0x000000000055a211 : add byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000005c36a7 : add byte ptr [rdx], al ; ret
0x00000000005dbce7 : add byte ptr [rdx], al ; ret 0x5d
0x00000000004b896c : add byte ptr [rdx], bh ; add dword ptr [rax], eax ; xor eax, eax ; pop rdx ; ret
0x00000000005df30f : add byte ptr [rdx], bh ; ret
0x00000000005e830c : add byte ptr [rdx], bl ; int1 ; jmp rax
0x00000000005dbc2f : add byte ptr [rdx], bl ; ret 0x5d
0x00000000005eb9dc : add byte ptr [rdx], cl ; clc ; call qword ptr [rax]
0x00000000005729a7 : add byte ptr [rdx], cl ; ret 0x42
0x000000000045d906 : add byte ptr [rdx], dh ; or ecx, dword ptr [rax - 1] ; ret
0x00000000005a2924 : add byte ptr [rdx], dl ; jne 0x5a28cb ; jb 0x5a2931 ; ret 0x4a9d
0x00000000005df2ef : add byte ptr [rdx], dl ; ret
0x00000000004c8f38 : add byte ptr [rip + 0x36], dh ; add byte ptr [rax], al ; pop rax ; ret
0x0000000000403a69 : add byte ptr [rsi + 0x39], ah ; ret
0x00000000004e673d : add byte ptr [rsi + 0x4e6850], bh ; call 0x4e2a48
0x00000000004e673c : add byte ptr [rsi + 0x4e6850], r15b ; call 0x4e2a49
0x00000000004f2a9f : add byte ptr [rsi + 0x5d29e0], bh ; jmp 0x53ed38
0x00000000005636b3 : add byte ptr [rsi + 0xf], ah ; jmp 0x56367f
0x0000000000563717 : add byte ptr [rsi + 0xf], ah ; jmp 0x5636e3
0x0000000000563819 : add byte ptr [rsi + 0xf], ah ; jmp 0x5637e5
0x0000000000563cfe : add byte ptr [rsi + 0xf], ah ; jmp 0x563cca
0x0000000000564b73 : add byte ptr [rsi + 0xf], ah ; jmp 0x564b3f
0x000000000055503c : add byte ptr [rsi + 0xf], ah ; out dx, eax ; ret 0x8349
0x00000000004084d9 : add byte ptr [rsi + 1], bh ; mov rdi, r13 ; call qword ptr [rax]
0x000000000041c609 : add byte ptr [rsi + 1], bh ; mov rdi, rbp ; call qword ptr [rax]
0x0000000000602873 : add byte ptr [rsi + 1], ch ; add byte ptr [rax - 0x45], bh ; in al, dx ; call qword ptr [rax]
0x000000000048f4a3 : add byte ptr [rsi + 2], bh ; pop rbx ; ret
0x000000000042e85c : add byte ptr [rsi + 5], bh ; mov rdx, rax ; jmp rcx
0x000000000042e89c : add byte ptr [rsi + 6], bh ; mov rdx, rax ; jmp rcx
0x000000000042e8dc : add byte ptr [rsi + 7], bh ; mov rdx, rax ; jmp rcx
0x00000000005f080b : add byte ptr [rsi + rax*2], al ; add byte ptr [rax], al ; nop ; or ah, ah ; call qword ptr [rbx]
0x000000000060c843 : add byte ptr [rsi + rax], bh ; add al, byte ptr [rax] ; pop rax ; ret
0x000000000061704b : add byte ptr [rsi + rbp*4 + 2], al ; add al, dh ; jrcxz 0x61704f ; call qword ptr [rsi]
0x0000000000617063 : add byte ptr [rsi + rbp*4 + 2], bl ; add al, bh ; jrcxz 0x617067 ; call qword ptr [rsi]
0x000000000061707b : add byte ptr [rsi + rbp*4 + 2], dh ; add byte ptr [rax], al ; in al, -0xc ; call qword ptr [rsi]
0x00000000006170c3 : add byte ptr [rsi + rbp*4 - 0x1be7fffe], bh ; hlt ; call qword ptr [rsi]
0x00000000006170ab : add byte ptr [rsi + rbp*4 - 0x1beffffe], ah ; hlt ; call qword ptr [rsi]
0x0000000000617093 : add byte ptr [rsi + rbp*4 - 0x1bf7fffe], cl ; hlt ; call qword ptr [rsi]
0x0000000000617033 : add byte ptr [rsi + rbp*4], ch ; add al, byte ptr [rax] ; call 0x17616528
0x000000000061701b : add byte ptr [rsi + rbp*4], dl ; add al, byte ptr [rax] ; loopne 0x61700d ; hlt ; call qword ptr [rsi]
0x000000000060b093 : add byte ptr [rsi + rbp*8 - 0x627ffff], cl ; out dx, al ; call qword ptr [rax]
0x00000000005a8bbd : add byte ptr [rsi + rbx], bl ; ret
0x000000000061102b : add byte ptr [rsi + rcx*2], ah ; add al, byte ptr [rax] ; and byte ptr [rdi], ch ; call qword ptr [rax]
0x000000000060c0a3 : add byte ptr [rsi + rdi*8 + 0x49380001], bl ; out dx, eax ; call qword ptr [rax]
0x00000000005f006b : add byte ptr [rsi + rdi], ah ; add al, ah ; out -0x1d, eax ; call qword ptr [rdi]
0x0000000000609883 : add byte ptr [rsi + rdx*8 + 1], bh ; add byte ptr [rax], ch ; cmpsd dword ptr [rsi], dword ptr [rdi] ; out dx, al ; jmp qword ptr [rbx]
0x000000000060f893 : add byte ptr [rsi + rsi + 0x12680002], cl ; call qword ptr [rax]
0x000000000060f85b : add byte ptr [rsi + rsi + 2], dl ; add al, ah ; adc ebx, esi ; call qword ptr [rcx]
0x0000000000603893 : add byte ptr [rsi + rsi*2 + 0xb880001], cl ; in eax, dx ; call rsi
0x00000000005f3863 : add byte ptr [rsi + rsi*2], bl ; add byte ptr [rax], cl ; mov dh, ah ; call rsp
0x0000000000617853 : add byte ptr [rsi + rsi*4 + 2], cl ; add al, cl ; out -0xc, al ; call qword ptr [rax]
0x00000000006178a3 : add byte ptr [rsi + rsi*4 - 0x18e7fffe], bl ; hlt ; call qword ptr [rdx]
0x000000000061788b : add byte ptr [rsi + rsi*4 - 0x18effffe], al ; hlt ; call qword ptr [rcx]
0x0000000000538261 : add byte ptr [rsi - 0x24], dh ; pop rbx ; pop r14 ; pop r15 ; ret
0x0000000000598e3a : add byte ptr [rsi - 0x26], bl ; or edi, edx ; int1 ; adc ch, dh ; ret
0x000000000060e88b : add byte ptr [rsi - 0x2eaffffe], al ; call rsp
0x00000000004358df : add byte ptr [rsi - 0x39], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 1], cl ; ret 0x8348
0x000000000060288b : add byte ptr [rsi - 0x448fffff], al ; in al, dx ; call qword ptr [rbx]
0x00000000004336cd : add byte ptr [rsi - 0x70], ah ; mov eax, 0x574338 ; ret
0x00000000004485fd : add byte ptr [rsi - 0x70], ah ; mov eax, 0x575b97 ; ret
0x000000000045da9d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x577c9c ; ret
0x00000000004794cd : add byte ptr [rsi - 0x70], ah ; mov eax, 0x8207e0 ; ret
0x000000000047ce3d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x8209e0 ; ret
0x00000000004f1e6d : add byte ptr [rsi - 0x70], ah ; ret
0x00000000005ea6ac : add byte ptr [rsi - 0xa], dh ; jmp qword ptr [rax]
0x00000000004700ce : add byte ptr [rsi - 1], bh ; call rax
0x00000000004e8783 : add byte ptr [rsi - 1], dh ; ret
0x00000000005ebf44 : add byte ptr [rsi - 8], ah ; call rax
0x00000000005df2ff : add byte ptr [rsi], ah ; ret
0x000000000060680b : add byte ptr [rsi], al ; add dword ptr [rax], eax ; and ah, bh ; in eax, dx ; call qword ptr [rcx]
0x00000000005c3657 : add byte ptr [rsi], al ; ret
0x00000000005df21f : add byte ptr [rsi], cl ; ret 0x55
0x00000000005df23f : add byte ptr [rsi], dh ; ret 0x55
0x0000000000429847 : add byte ptr [rsp + rax + 0x48], dh ; mov eax, dword ptr [rdi + 8] ; ret
0x000000000061064b : add byte ptr [rsp + rax*2 + 2], al ; add byte ptr [rax], al ; sbb ebx, esi ; call qword ptr [rsi]
0x000000000061067b : add byte ptr [rsp + rax*2 + 2], dh ; add byte ptr [rax], dl ; sbb ebx, esi ; call qword ptr [rsi]
0x000000000061061b : add byte ptr [rsp + rax*2], dl ; add al, byte ptr [rax] ; add byte ptr [rcx], bl ; call qword ptr [rax]
0x000000000061860b : add byte ptr [rsp + rax*8], al ; add al, byte ptr [rax] ; adc byte ptr [rdx], al ; cmc ; jmp qword ptr [rdi]
0x0000000000618623 : add byte ptr [rsp + rax*8], bl ; add al, byte ptr [rax] ; sub byte ptr [rdx], al ; cmc ; jmp qword ptr [rdi]
0x00000000005fee93 : add byte ptr [rsp + rbp + 0x31580001], cl ; jmp 0x5feea3
0x0000000000611ebb : add byte ptr [rsp + rbx*2 + 0x69d00002], dh ; call qword ptr [rbx]
0x00000000005ede7b : add byte ptr [rsp + rbx], dh ; add al, dh ; mov bh, -0x1e ; jmp qword ptr [rax]
0x0000000000482dc5 : add byte ptr [rsp + rcx*2], cl ; ret 0xc200
0x0000000000482dc4 : add byte ptr [rsp + rcx*2], r9b ; ret 0xc200
0x00000000005f8e13 : add byte ptr [rsp + rcx*8], cl ; add byte ptr [rax], al ; add cl, bpl ; jmp qword ptr [rbx]
0x000000000060fe5b : add byte ptr [rsp + rdi + 2], dl ; add byte ptr [rax + 0x17], dl ; call qword ptr [rax]
0x0000000000613e6b : add byte ptr [rsp + rdi*2 + 2], ah ; add byte ptr [rax - 0x1c], ah ; jmp qword ptr [rcx]
0x0000000000617e3b : add byte ptr [rsp + rdi*4], dh ; add al, byte ptr [rax] ; loopne 0x617e40 ; hlt ; call rdi
0x00000000005efe0b : add byte ptr [rsp + rdi], al ; add byte ptr [rax], al ; out -0x1d, al ; call rbx
0x00000000006116ab : add byte ptr [rsp + rdx*2 + 0x4d700002], ah ; jmp rdx
0x0000000000601693 : add byte ptr [rsp + rdx*2 + 0x6e280001], cl ; in al, dx ; call qword ptr [rsi]
0x000000000061564b : add byte ptr [rsp + rdx*4 + 2], al ; add al, al ; pop rbp ; hlt ; jmp rcx
0x0000000000617663 : add byte ptr [rsp + rsi*4 + 2], bl ; add al, bh ; in eax, -0xc ; call qword ptr [rax]
0x00000000006176bb : add byte ptr [rsp + rsi*4 - 0x197ffffe], dh ; hlt ; jmp qword ptr [rdi]
0x00000000006176a3 : add byte ptr [rsp + rsi*4 - 0x1987fffe], bl ; hlt ; call qword ptr [rdi]
0x00000000005f7643 : add byte ptr [rsp + rsi*4], bh ; add byte ptr [rax], al ; cmp byte ptr [rdi - 0x18], al ; call rsp
0x00000000006166ab : add byte ptr [rsp - 0x5ddffffe], ah ; hlt ; call qword ptr [rcx]
0x000000000045d8ab : add byte ptr ds:[rax], al ; xor eax, eax ; ret
0x00000000004f5f5b : add byte ptr es:[rax], al ; add rsp, 0x18 ; ret
0x00000000004e33dc : add byte ptr es:[rax], al ; nop ; mov eax, 0x5bd6e8 ; ret
0x00000000004ef676 : add byte ptr es:[rax], al ; xor eax, eax ; pop rdx ; ret
0x0000000000419633 : add byte ptr fs:[rax], al ; add byte ptr [rax], al ; ret
0x00000000005615e2 : add byte ptr fs:[rax], al ; xor eax, eax ; ret
0x0000000000560a43 : add byte ptr gs:[rax], al ; xor eax, eax ; ret
0x0000000000452fc2 : add byte ptr gs:[rbp - 0xd], bl ; ret
0x00000000004cddad : add byte ptr ss:[rax - 0x77], cl ; ret
0x00000000004cb1ca : add byte ptr ss:[rax - 0x7b], cl ; push qword ptr [rbp - 0x11] ; pop rax ; ret
0x00000000004e2cac : add byte ptr ss:[rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004c8069 : add byte ptr ss:[rcx + rcx*8 + 0x5c60775], al ; ret 0x3643
0x00000000005c3867 : add ch, ah ; ret
0x00000000005d87bf : add ch, ah ; ret 0x53
0x00000000005f68c1 : add ch, al ; jmp qword ptr [rsi]
0x00000000004d5822 : add ch, al ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000005fe901 : add ch, bl ; call rbx
0x00000000005b3bf4 : add ch, bl ; ret 0x2dbe
0x00000000004bc244 : add ch, bl ; xor r8, rax ; ret
0x000000000055915a : add ch, byte ptr [rcx] ; enter -0x3f7b, 0x74 ; sbb bh, bh ; ret
0x00000000005e59cd : add ch, ch ; call rax
0x00000000005e8d9c : add ch, ch ; int1 ; jmp rax
0x0000000000572a0f : add ch, cl ; ret 0x42
0x00000000006181c9 : add ch, dh ; call qword ptr [rax]
0x00000000006181e1 : add ch, dh ; jmp qword ptr [rbx]
0x00000000005c35e7 : add ch, dl ; ret 0x5c
0x00000000005e60d4 : add cl, -0x13 ; ljmp ptr [rax - 0xa] ; add dword ptr [rax], eax ; push rax ; ret 0xffed
0x00000000004d68c0 : add cl, ah ; ret 0x84e0
0x00000000005553e6 : add cl, al ; pxor xmm0, xmm2 ; ret
0x00000000004d7d72 : add cl, al ; ret
0x00000000004d7de7 : add cl, al ; ret 0x310b
0x00000000004d5065 : add cl, al ; ret 0x4c08
0x00000000005948b3 : add cl, al ; xchg eax, edi ; sti ; sub al, -0xf ; ret 0x7130
0x00000000005f8e18 : add cl, bpl ; jmp qword ptr [rbx]
0x00000000004e8da9 : add cl, byte ptr [rax + 0x29] ; ret
0x000000000041b0c8 : add cl, byte ptr [rax + 0x39] ; ret 0x8948
0x000000000043bded : add cl, byte ptr [rax + 0x39] ; ret 0xe772
0x0000000000510c87 : add cl, byte ptr [rax + 0x63] ; ret
0x000000000045ac03 : add cl, byte ptr [rax + 1] ; ret 0x8d48
0x000000000041b0c4 : add cl, byte ptr [rax - 0x73] ; push rdx ; add cl, byte ptr [rax + 0x39] ; ret 0x8948
0x0000000000420af3 : add cl, byte ptr [rax - 0x75] ; jl 0x420b23 ; adc al, ch ; ret 0x598
0x0000000000404cb8 : add cl, byte ptr [rax - 0x75] ; sbb byte ptr [r8 - 0x77], r9b ; ret 0xc148
0x000000000046d01f : add cl, byte ptr [rax - 0x77] ; add dword ptr [rax - 0x7d], ecx ; ret 0x4820
0x0000000000439da3 : add cl, byte ptr [rax - 0x7d] ; ret
0x000000000040b80a : add cl, byte ptr [rax - 0x7d] ; ret 0x4403
0x00000000004ed86a : add cl, byte ptr [rax - 0x7d] ; ret 0xbe08
0x00000000004d1a8f : add cl, byte ptr [rax - 1] ; ret
0x000000000046560e : add cl, byte ptr [rbp + 0x39] ; ret 0x2374
0x00000000004b6d60 : add cl, byte ptr [rbx + 0x5e415b03] ; pop r15 ; ret
0x0000000000429ea8 : add cl, byte ptr [rcx + 0x5be889c5] ; pop r14 ; pop rbp ; ret
0x000000000040b0c7 : add cl, byte ptr [rcx + 0x5e415bc8] ; pop rbp ; ret
0x000000000054855d : add cl, byte ptr [rcx + 0x5e415bd8] ; pop rbp ; ret
0x000000000050550f : add cl, byte ptr [rcx] ; ret 0xd889
0x000000000044d431 : add cl, byte ptr [rdi] ; or esi, ebx ; ret
0x000000000041fce0 : add cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x4489
0x0000000000435951 : add cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x00000000005f8e19 : add cl, ch ; jmp qword ptr [rbx]
0x0000000000421352 : add cl, ch ; mov eax, 0xf6000002 ; ret
0x00000000004212b3 : add cl, ch ; push rdi ; add eax, dword ptr [rax] ; add dh, dh ; ret
0x000000000041a4ec : add cl, ch ; ret
0x0000000000494578 : add cl, ch ; ret 0xfff7
0x00000000004ba27c : add cl, ch ; ret 0xfff8
0x000000000040c461 : add cl, ch ; ret 0xfffa
0x00000000004303f1 : add cl, ch ; ret 0xfffd
0x000000000041a57e : add cl, ch ; ret 0xfffe
0x000000000041a8d9 : add cl, ch ; ret 3
0x00000000004c4872 : add cl, ch ; ret 4
0x0000000000541dd4 : add cl, ch ; salc ; ret
0x00000000005e8235 : add cl, dh ; jmp rax
0x00000000005e98cc : add dh, ah ; cmc ; call rax
0x000000000048f2bc : add dh, al ; cmp dword ptr [rax], eax ; pop rbx ; ret
0x00000000005df387 : add dh, al ; ret
0x00000000005eae0d : add dh, bh ; jmp rax
0x00000000005df2df : add dh, bh ; ret 0x55
0x0000000000506c84 : add dh, bl ; ret
0x00000000005c360f : add dh, bl ; ret 0x5c
0x000000000042be8d : add dh, byte ptr [rax + rbp + 0x5a] ; ret
0x000000000042dfb1 : add dh, byte ptr [rbp + 0x11] ; mov eax, 0x56ef41 ; ret
0x000000000045655b : add dh, byte ptr [rbp + 4] ; add eax, 3 ; ret
0x000000000054889b : add dh, byte ptr [rbp + 4] ; mov rax, qword ptr [rdi + 0x28] ; ret
0x000000000042982e : add dh, byte ptr [rbp + 6] ; mov eax, 0x56ef41 ; ret
0x0000000000432ecf : add dh, byte ptr [rbp + 6] ; mov eax, 0x57409e ; ret
0x0000000000432eef : add dh, byte ptr [rbp + 6] ; mov eax, 0x5bc384 ; ret
0x00000000004d07d9 : add dh, byte ptr [rbp + 6] ; mov eax, dword ptr [rcx + 4] ; sub eax, dword ptr [rdx + 4] ; ret
0x00000000004b4307 : add dh, byte ptr [rbp + 7] ; mov eax, 0x2aa ; pop rbx ; ret
0x00000000004f4bfa : add dh, byte ptr [rbp + rax + 0x48] ; mov eax, dword ptr [rdi + 0x18] ; ret
0x0000000000411934 : add dh, byte ptr [rcx] ; leave ; movzx eax, cl ; pop rdx ; ret
0x0000000000551636 : add dh, byte ptr [rcx] ; rcr byte ptr [rbx + 0x41], 0x5e ; pop r15 ; ret
0x000000000046be31 : add dh, byte ptr [rcx] ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0x0000000000522654 : add dh, byte ptr [rcx] ; ret 0x144
0x0000000000522b0a : add dh, byte ptr [rcx] ; ret 0x41c4
0x0000000000522a0b : add dh, byte ptr [rcx] ; ret 0xbdc5
0x0000000000522579 : add dh, byte ptr [rcx] ; ret 0xc1c4
0x00000000004d3443 : add dh, byte ptr [rcx] ; ret 0xe281
0x000000000045eaa7 : add dh, byte ptr [rcx] ; ror byte ptr [rax - 0x7d], -0x3c ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000005485b3 : add dh, byte ptr [rcx] ; ror byte ptr [rax - 0x7d], -0x3c ; ret
0x0000000000477e50 : add dh, byte ptr [rdx + 2] ; xor eax, eax ; ret
0x00000000004cddac : add dh, byte ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005b5997 : add dh, byte ptr [rsp + rbx*2] ; ret
0x00000000005a0ec2 : add dh, ch ; and eax, 0xd937d55a ; ret 0x69e4
0x0000000000618611 : add dh, ch ; jmp qword ptr [rdi]
0x00000000005e9d25 : add dh, dh ; call qword ptr [rax]
0x000000000050a892 : add dh, dh ; dec dword ptr [rax - 0x77] ; ret
0x00000000005e9d15 : add dh, dh ; jmp rax
0x00000000004144d3 : add dh, dh ; ret
0x000000000041fbe8 : add dh, dh ; ret 0xf01
0x0000000000420029 : add dh, dh ; ret 0xf08
0x000000000048d352 : add dh, dh ; ret 0xf20
0x00000000004200d5 : add dh, dh ; ret 0xf80
0x000000000042bf4c : add dh, dh ; xor byte ptr [r8 + rbp + 0x5a], sil ; ret
0x0000000000572a17 : add dh, dl ; ret 0x42
0x00000000005df2bf : add dh, dl ; ret 0x55
0x00000000005465ee : add dil, dil ; ret
0x0000000000589560 : add dl, al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; ret 0x4a
0x00000000005e5470 : add dl, al ; add dword ptr [rax], eax ; pop rbp ; in al, dx ; push qword ptr [rax] ; ret 1
0x00000000004d5e7e : add dl, al ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000005df210 : add dl, al ; push rbp ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], al ; ret 0x55
0x0000000000555172 : add dl, al ; ret
0x0000000000482dcd : add dl, al ; ret 0xf600
0x00000000005e9c3c : add dl, bh ; cmc ; call rax
0x00000000005c385f : add dl, bl ; ret
0x000000000055818a : add dl, byte ptr [rbx] ; stc ; dec dword ptr [rax - 0x77] ; ret
0x00000000004e5d5a : add dl, byte ptr [rcx] ; xor al, 0 ; mov qword ptr [rdx], rax ; ret
0x000000000050f6fa : add dl, byte ptr [rdi] ; cmc ; dec dword ptr [rax - 0x77] ; ret
0x000000000048aeaa : add dl, byte ptr [rdx - 0x76b70001] ; ret
0x00000000005b7169 : add dl, byte ptr [rsi + 0x47583183] ; ret
0x000000000059cb91 : add dl, byte ptr [rsi + rdi*4 - 0x6a73c358] ; ret 0x45da
0x000000000057e263 : add dl, byte ptr [rsi] ; sub dword ptr [rbp + rcx*2], esp ; ret
0x000000000059cb90 : add dl, byte ptr cs:[rsi + rdi*4 - 0x6a73c358] ; ret 0x45da
0x00000000005df2cf : add dl, ch ; ret 0x55
0x00000000005c3637 : add dl, ch ; ret 0x5c
0x0000000000596225 : add dl, dl ; ret 0xe9a9
0x0000000000602935 : add dword ptr [eax], eax ; call 0xffffffffc4601600
0x000000000045a2bb : add dword ptr [r8 - 0x6bf093c5], eax ; ret 0xb60f
0x0000000000497794 : add dword ptr [r8], eax ; add al, ch ; ret
0x0000000000600315 : add dword ptr [r8], eax ; clc ; lodsb al, byte ptr [rsi] ; jmp 0x600321
0x000000000045c0da : add dword ptr [r8], r8d ; add byte ptr [rax - 0x77], cl ; ret 0xff48
0x0000000000600a05 : add dword ptr [r8], r8d ; sub dh, cl ; jmp 0x600a11
0x000000000045ccba : add dword ptr [rax + 0x19], ecx ; fisttp dword ptr [rax + 9] ; ret
0x00000000004564c2 : add dword ptr [rax + 0x4cc1ff49], eax ; mov dword ptr [rdi], ecx ; ret
0x000000000042dad5 : add dword ptr [rax + 0x5a], edi ; ret
0x000000000042dad4 : add dword ptr [rax + 0x5a], r15d ; ret
0x000000000047bd18 : add dword ptr [rax + 0x6ba0000], eax ; ret
0x00000000005b3d71 : add dword ptr [rax + 0x79725764], 0 ; ret
0x00000000004bbe30 : add dword ptr [rax + 0x82c3e0], edi ; pop rdx ; ret
0x00000000004abf8f : add dword ptr [rax + 1], edi ; pop rbx ; ret
0x0000000000496413 : add dword ptr [rax + 1], edi ; ret
0x000000000041ade5 : add dword ptr [rax + 2], edi ; ret
0x00000000004147d4 : add dword ptr [rax + 9], ecx ; ret
0x000000000044070b : add dword ptr [rax + 9], ecx ; ret 0x8948
0x00000000005acbd9 : add dword ptr [rax + rcx*8 + 0x23], edx ; ret 0x52a2
0x0000000000423060 : add dword ptr [rax - 0x2f460000], eax ; ret 0x5c
0x000000000045a2bc : add dword ptr [rax - 0x6bf093c5], eax ; ret 0xb60f
0x0000000000564e34 : add dword ptr [rax - 0x73], ecx ; jg 0x564e42 ; jne 0x564e37 ; ret
0x00000000004ad1e6 : add dword ptr [rax - 0x73], ecx ; jl 0x4ad216 ; call r14
0x000000000046ceaa : add dword ptr [rax - 0x77], ecx ; je 0x46cedf ; sbb bh, bh ; ret
0x0000000000505c1c : add dword ptr [rax - 0x77], ecx ; ret 0xc148
0x00000000004cad92 : add dword ptr [rax - 0x7b], ecx ; ror byte ptr [rdi], -0x6b ; ret 0x3948
0x0000000000440bce : add dword ptr [rax - 0x7d], ecx ; ret
0x00000000004f1c52 : add dword ptr [rax - 0x7d], ecx ; ret 0x3902
0x000000000046d022 : add dword ptr [rax - 0x7d], ecx ; ret 0x4820
0x00000000004a233f : add dword ptr [rax - 0x7d], ecx ; ret 0x4833
0x000000000054aa33 : add dword ptr [rax - 1], ecx ; ret
0x00000000004db218 : add dword ptr [rax - 1], ecx ; ret 0x38b
0x000000000043664c : add dword ptr [rax - 1], ecx ; ret 0x394c
0x000000000048ce53 : add dword ptr [rax - 1], ecx ; ret 0xb70f
0x00000000004c9f19 : add dword ptr [rax], 0 ; add dh, dh ; ret
0x000000000042c765 : add dword ptr [rax], 0x41ee894c ; call rdi
0x0000000000402530 : add dword ptr [rax], 0x5e8c9e8 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004024b2 : add dword ptr [rax], 0x5e947e8 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000043b245 : add dword ptr [rax], 0xff480b74 ; ret
0x000000000043b0b5 : add dword ptr [rax], 0xff480d74 ; ret 0xc031
0x0000000000437225 : add dword ptr [rax], 0xff480e74 ; ret 0x8348
0x00000000005e51d2 : add dword ptr [rax], eax ; adc bh, bh ; jmp 0x5e51dc
0x00000000005e5dea : add dword ptr [rax], eax ; adc byte ptr [rbp - 0x13], dh ; jmp rax
0x00000000005e2e02 : add dword ptr [rax], eax ; adc byte ptr [rbp - 0x19], ah ; call rax
0x00000000005e5332 : add dword ptr [rax], eax ; adc byte ptr [rbx - 0x14], al ; jmp qword ptr [rax]
0x00000000005e5b42 : add dword ptr [rax], eax ; adc byte ptr [rbx], ch ; in eax, dx ; call qword ptr [rax]
0x00000000005e4a9a : add dword ptr [rax], eax ; adc byte ptr [rcx - 0x15], dl ; call qword ptr [rax]
0x00000000005e408a : add dword ptr [rax], eax ; adc byte ptr [rcx - 0x16], al ; call rax
0x00000000006070ce : add dword ptr [rax], eax ; adc byte ptr [rcx], ah ; out dx, al ; call qword ptr [rax]
0x00000000005e5e4a : add dword ptr [rax], eax ; adc byte ptr [rdi - 0x13], dh ; call qword ptr [rax]
0x00000000005e54a2 : add dword ptr [rax], eax ; adc byte ptr [rdi - 0x14], bl ; call rax
0x00000000005e3aaa : add dword ptr [rax], eax ; adc byte ptr [rdi - 0x17], dh ; jmp rax
0x00000000005e49f2 : add dword ptr [rax], eax ; adc byte ptr [rdi], dh ; jmp 0x5e49fc
0x00000000005e61ca : add dword ptr [rax], eax ; adc byte ptr [rdx], ch ; out dx, al ; call rax
0x000000000060735e : add dword ptr [rax], eax ; adc byte ptr [rdx], dh ; out dx, al ; jmp rsi
0x00000000004cde39 : add dword ptr [rax], eax ; add al, ch ; call qword ptr [rax]
0x000000000043f269 : add dword ptr [rax], eax ; add al, ch ; call rax
0x0000000000423d2b : add dword ptr [rax], eax ; add al, ch ; in eax, dx ; ret 1
0x000000000043806c : add dword ptr [rax], eax ; add al, ch ; insb byte ptr [rdi], dx ; sbb edx, dword ptr [rax] ; add byte ptr [rcx], bh ; ret
0x0000000000489b35 : add dword ptr [rax], eax ; add al, ch ; ret
0x00000000004bb1a6 : add dword ptr [rax], eax ; add al, ch ; ret 0x111
0x00000000004866a6 : add dword ptr [rax], eax ; add al, ch ; ret 0x45c
0x000000000043f9a6 : add dword ptr [rax], eax ; add al, ch ; ret 0x8c9
0x0000000000420eb6 : add dword ptr [rax], eax ; add al, ch ; ret 0xff01
0x000000000045536e : add dword ptr [rax], eax ; add bh, bh ; ret
0x000000000060ad1e : add dword ptr [rax], eax ; add bl, bh ; out dx, al ; call qword ptr [rax]
0x0000000000432376 : add dword ptr [rax], eax ; add byte ptr [rax + 0x573184], bh ; ret
0x0000000000432364 : add dword ptr [rax], eax ; add byte ptr [rax + 0x5733d1], bh ; ret
0x0000000000432346 : add dword ptr [rax], eax ; add byte ptr [rax + 0x573405], bh ; ret
0x0000000000432334 : add dword ptr [rax], eax ; add byte ptr [rax + 0x57345a], bh ; ret
0x00000000004323ac : add dword ptr [rax], eax ; add byte ptr [rax + 0x573770], bh ; ret
0x0000000000432418 : add dword ptr [rax], eax ; add byte ptr [rax + 0x57386b], bh ; ret
0x0000000000432406 : add dword ptr [rax], eax ; add byte ptr [rax + 0x5738ae], bh ; ret
0x00000000004323f4 : add dword ptr [rax], eax ; add byte ptr [rax + 0x5738f0], bh ; ret
0x00000000004323e2 : add dword ptr [rax], eax ; add byte ptr [rax + 0x573928], bh ; ret
0x00000000004323d0 : add dword ptr [rax], eax ; add byte ptr [rax + 0x57395f], bh ; ret
0x00000000004323be : add dword ptr [rax], eax ; add byte ptr [rax + 0x573995], bh ; ret
0x000000000043239a : add dword ptr [rax], eax ; add byte ptr [rax + 0x573c90], bh ; ret
0x0000000000432388 : add dword ptr [rax], eax ; add byte ptr [rax + 0x573ccb], bh ; ret
0x0000000000432d12 : add dword ptr [rax], eax ; add byte ptr [rax + 0x573e74], bh ; ret
0x0000000000432cfa : add dword ptr [rax], eax ; add byte ptr [rax + 0x573e82], bh ; ret
0x0000000000432ce8 : add dword ptr [rax], eax ; add byte ptr [rax + 0x573e9e], bh ; ret
0x0000000000432cd0 : add dword ptr [rax], eax ; add byte ptr [rax + 0x573eac], bh ; ret
0x0000000000432cbe : add dword ptr [rax], eax ; add byte ptr [rax + 0x573eba], bh ; ret
0x0000000000432d90 : add dword ptr [rax], eax ; add byte ptr [rax + 0x573f69], bh ; ret
0x0000000000432d7e : add dword ptr [rax], eax ; add byte ptr [rax + 0x573f77], bh ; ret
0x0000000000432d6c : add dword ptr [rax], eax ; add byte ptr [rax + 0x573f85], bh ; ret
0x0000000000432d5a : add dword ptr [rax], eax ; add byte ptr [rax + 0x573f93], bh ; ret
0x0000000000432d48 : add dword ptr [rax], eax ; add byte ptr [rax + 0x573fa1], bh ; ret
0x0000000000432d36 : add dword ptr [rax], eax ; add byte ptr [rax + 0x573faf], bh ; ret
0x0000000000432d24 : add dword ptr [rax], eax ; add byte ptr [rax + 0x574057], bh ; ret
0x00000000004e9f55 : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret
0x000000000041b9f7 : add dword ptr [rax], eax ; add byte ptr [rax + 1], bh ; pop rbx ; ret
0x000000000042c172 : add dword ptr [rax], eax ; add byte ptr [rax + 1], bh ; pop rdx ; ret
0x000000000042c3a9 : add dword ptr [rax], eax ; add byte ptr [rax + 1], bh ; ret
0x0000000000434475 : add dword ptr [rax], eax ; add byte ptr [rax + 1], cl ; ret
0x00000000005c6071 : add dword ptr [rax], eax ; add byte ptr [rax + rax], al ; add byte ptr [rax], al ; ret
0x00000000005e3452 : add dword ptr [rax], eax ; add byte ptr [rax + rbp*8], ch ; call rax
0x00000000005e4b6a : add dword ptr [rax], eax ; add byte ptr [rax - 0x15], ah ; call qword ptr [rax]
0x0000000000436ba3 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; pop rbp ; add dh, dh ; ret
0x0000000000564cf7 : add dword ptr [rax], eax ; add byte ptr [rax - 0x76beac8e], al ; ret 0x1b8
0x0000000000429ba5 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rcx + rcx*4 - 0xa] ; call qword ptr [rax]
0x00000000004e0b13 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 0xf212
0x000000000042f363 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 0xff6a
0x00000000004379f9 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000463c3a : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x4be9
0x000000000042afe5 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x50e8
0x0000000000463c1a : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x6be9
0x000000000045c0db : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xff48
0x00000000004190e4 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000439ff5 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x310d
0x00000000004c1a25 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x3908
0x000000000053cacd : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x48fe
0x000000000042baf8 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x00000000004574eb : add dword ptr [rax], eax ; add byte ptr [rax - 1], cl ; ret
0x00000000004358e2 : add dword ptr [rax], eax ; add byte ptr [rax - 1], cl ; ret 0x8348
0x00000000004077f3 : add dword ptr [rax], eax ; add byte ptr [rax - 1], cl ; ret 0xca39
0x0000000000486bc2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add bl, al ; ret
0x00000000004cc76e : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000041db30 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x1d8
0x00000000004a11f3 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000004a10e0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000000004cdc23 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call qword ptr [rax]
0x00000000004e7976 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call r8
0x00000000004e6388 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x000000000047af3d : add dword ptr [rax], eax ; add byte ptr [rax], al ; ja 0x47af4d ; sbb eax, eax ; ret
0x000000000041b265 : add dword ptr [rax], eax ; add byte ptr [rax], al ; je 0x41b276 ; xor eax, eax ; pop rbx ; ret
0x0000000000460f1b : add dword ptr [rax], eax ; add byte ptr [rax], al ; je 0x460f42 ; mov rdi, rbx ; call rcx
0x00000000004ff107 : add dword ptr [rax], eax ; add byte ptr [rax], al ; je 0x4ff126 ; mov rdi, rbx ; call rcx
0x00000000004ff277 : add dword ptr [rax], eax ; add byte ptr [rax], al ; je 0x4ff296 ; mov rdi, rbx ; call rcx
0x00000000004ff357 : add dword ptr [rax], eax ; add byte ptr [rax], al ; je 0x4ff376 ; mov rdi, rbx ; call rcx
0x00000000004ff4cd : add dword ptr [rax], eax ; add byte ptr [rax], al ; je 0x4ff4ec ; mov rdi, rbx ; call rcx
0x00000000004ff64d : add dword ptr [rax], eax ; add byte ptr [rax], al ; je 0x4ff66c ; mov rdi, rbx ; call rcx
0x00000000004ff7cd : add dword ptr [rax], eax ; add byte ptr [rax], al ; je 0x4ff7ec ; mov rdi, rbx ; call rcx
0x00000000004ffb07 : add dword ptr [rax], eax ; add byte ptr [rax], al ; je 0x4ffb26 ; mov rdi, rbx ; call rcx
0x00000000004ffc37 : add dword ptr [rax], eax ; add byte ptr [rax], al ; je 0x4ffc56 ; mov rdi, rbx ; call rcx
0x0000000000539c64 : add dword ptr [rax], eax ; add byte ptr [rax], al ; je 0x539c76 ; mov eax, dword ptr [rdi + 0x10] ; ret
0x0000000000559ba3 : add dword ptr [rax], eax ; add byte ptr [rax], al ; je 0x559bb1 ; jmp rcx
0x0000000000559bc3 : add dword ptr [rax], eax ; add byte ptr [rax], al ; je 0x559bd1 ; jmp rcx
0x0000000000559be6 : add dword ptr [rax], eax ; add byte ptr [rax], al ; je 0x559bf6 ; jmp r9
0x0000000000471680 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x47164d
0x000000000054aafc : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x54ab14
0x000000000054afc8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x54afe0
0x0000000000554a87 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x554a54
0x000000000041b600 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x0000000000548ba9 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; ret
0x000000000045e9ef : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, ecx ; pop rbx ; ret
0x00000000004cd8ff : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, ecx ; pop rdx ; ret
0x00000000004e8ef9 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, r8d ; pop rbx ; ret
0x00000000004700cb : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov esi, 0xffffffff ; call rax
0x0000000000470357 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov esi, dword ptr [rsp + 0xc] ; call rax
0x00000000004079c9 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov r9, r12 ; call rax
0x000000000046c4ba : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x000000000048a88d : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rcx, r12 ; call rax
0x000000000048a398 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rcx, rbx ; call rax
0x000000000040bcdb : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r12 ; call r14
0x000000000040b24b : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r12 ; call r15
0x00000000004084db : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r13 ; call qword ptr [rax]
0x000000000040ee33 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r13 ; call r14
0x00000000004101ac : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x000000000040504a : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r14 ; call r12
0x0000000000461edb : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r14 ; call rax
0x0000000000461e5b : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r15 ; call rax
0x0000000000442be2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x000000000041c60b : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbp ; call qword ptr [rax]
0x00000000004432d2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call r14
0x0000000000422b6e : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x00000000004e6403 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; mov esi, ebp ; call rax
0x00000000004e5f4f : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; jmp rax
0x00000000004111cd : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; ret
0x00000000004271f2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000402d9e : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000402e56 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rdx ; ret
0x000000000040dfb8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000004f8888 : add dword ptr [rax], eax ; add byte ptr [rax], al ; test rax, rax ; je 0x4f889e ; call rax
0x00000000004f90dd : add dword ptr [rax], eax ; add byte ptr [rax], al ; test rax, rax ; je 0x4f910b ; call rax
0x000000000042be41 : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor eax, eax ; pop rdx ; ret
0x00000000004cf81e : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor ecx, ecx ; call rax
0x00000000005ec325 : add dword ptr [rax], eax ; add byte ptr [rax], bl ; movsxd rsp, ecx ; call qword ptr [rax]
0x0000000000403851 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x7b], cl ; in al, 0xf ; xchg eax, ebp ; ret
0x00000000004d8f9b : add dword ptr [rax], eax ; add byte ptr [rbp - 0x80], dh ; ret
0x000000000043bd17 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x9ea8a13], al ; ret 0x7401
0x0000000000470a3a : add dword ptr [rax], eax ; add byte ptr [rbp - 0xb7f68b], bh ; ret
0x000000000048f16d : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; jmp rax
0x000000000042b1a4 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000005e5d62 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x13], ch ; call rax
0x00000000006013ee : add dword ptr [rax], eax ; add byte ptr [rbx - 0x14], bl ; jmp rcx
0x0000000000564ae7 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x158afe12], al ; ret
0x0000000000606f8e : add dword ptr [rax], eax ; add byte ptr [rbx], bl ; out dx, al ; call qword ptr [rbx]
0x000000000046cbd1 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x548d49d9], cl ; jmp qword ptr [rax]
0x0000000000421b37 : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 + 0x2c], cl ; and al, 0xfffffffffffffff6 ; ret
0x0000000000500217 : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x0000000000417bcf : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 9], cl ; call rcx
0x00000000005156ac : add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], al ; ret 0xc141
0x0000000000438478 : add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret 0xc031
0x00000000005e5cea : add dword ptr [rax], eax ; add byte ptr [rdi - 0x13], ah ; jmp qword ptr [rax]
0x00000000005636b1 : add dword ptr [rax], eax ; add byte ptr [rsi + 0xf], ah ; jmp 0x563681
0x0000000000563715 : add dword ptr [rax], eax ; add byte ptr [rsi + 0xf], ah ; jmp 0x5636e5
0x0000000000563817 : add dword ptr [rax], eax ; add byte ptr [rsi + 0xf], ah ; jmp 0x5637e7
0x0000000000563cfc : add dword ptr [rax], eax ; add byte ptr [rsi + 0xf], ah ; jmp 0x563ccc
0x0000000000564b71 : add dword ptr [rax], eax ; add byte ptr [rsi + 0xf], ah ; jmp 0x564b41
0x00000000004c9bf8 : add dword ptr [rax], eax ; add cl, ch ; ret
0x00000000004148be : add dword ptr [rax], eax ; add dh, dh ; ret
0x000000000041fbe6 : add dword ptr [rax], eax ; add dh, dh ; ret 0xf01
0x000000000048d359 : add dword ptr [rax], eax ; add dh, dh ; ret 0xf08
0x00000000004cbeb0 : add dword ptr [rax], eax ; add rsp, 0x18 ; ret
0x00000000004adfc5 : add dword ptr [rax], eax ; add rsp, 0x48 ; pop rbx ; pop r14 ; ret
0x000000000041adaf : add dword ptr [rax], eax ; add rsp, 0x58 ; ret
0x00000000004ce11c : add dword ptr [rax], eax ; add rsp, 8 ; pop rbx ; pop r14 ; ret
0x000000000060680e : add dword ptr [rax], eax ; and ah, bh ; in eax, dx ; call qword ptr [rcx]
0x00000000005e5972 : add dword ptr [rax], eax ; and bl, ch ; in al, dx ; jmp rax
0x00000000005e54d2 : add dword ptr [rax], eax ; and byte ptr [rbp - 0x14], 0xff ; cwde ; ret
0x00000000005e54c2 : add dword ptr [rax], eax ; and byte ptr [rbp - 0x14], ah ; jmp qword ptr [rax - 0x3d]
0x00000000005e40fa : add dword ptr [rax], eax ; and byte ptr [rbx - 0x16], dl ; call rax
0x00000000005e4882 : add dword ptr [rax], eax ; and byte ptr [rdi], ah ; jmp 0x5e488c
0x0000000000608aae : add dword ptr [rax], eax ; and byte ptr [rdx - 0x12], ch ; jmp qword ptr [rdi]
0x00000000005e5a02 : add dword ptr [rax], eax ; and byte ptr [rdx], cl ; in eax, dx ; call rax
0x00000000005e6102 : add dword ptr [rax], eax ; and ch, al ; in eax, dx ; jmp qword ptr [rax]
0x0000000000600ba6 : add dword ptr [rax], eax ; and rsp, rbp ; jmp qword ptr [rdi]
0x0000000000600b8e : add dword ptr [rax], eax ; and spl, bpl ; jmp qword ptr [rax]
0x000000000060b7a6 : add dword ptr [rax], eax ; call 0x1260a6d8
0x0000000000602936 : add dword ptr [rax], eax ; call 0xffffffffc46015ff
0x0000000000603906 : add dword ptr [rax], eax ; call 0xffffffffc4602623
0x00000000006099e6 : add dword ptr [rax], eax ; call 0xffffffffd76088a2
0x000000000060b2e6 : add dword ptr [rax], eax ; clc ; adc ch, bh ; call rdx
0x0000000000600316 : add dword ptr [rax], eax ; clc ; lodsb al, byte ptr [rsi] ; jmp 0x600320
0x0000000000605296 : add dword ptr [rax], eax ; clc ; mov dl, -0x13 ; jmp rax
0x0000000000602116 : add dword ptr [rax], eax ; clc ; wait ; in al, dx ; jmp qword ptr [rsi]
0x00000000005e4042 : add dword ptr [rax], eax ; cmp byte ptr [rbx], -0x16 ; call rax
0x000000000060c0a6 : add dword ptr [rax], eax ; cmp byte ptr [rcx - 0x11], cl ; call qword ptr [rax]
0x0000000000609a56 : add dword ptr [rax], eax ; cwde ; mov cl, -0x12 ; call qword ptr [rdi]
0x00000000005fdaa6 : add dword ptr [rax], eax ; cwde ; ret
0x000000000060a456 : add dword ptr [rax], eax ; cwde ; salc ; out dx, al ; jmp rsi
0x0000000000600d16 : add dword ptr [rax], eax ; cwde ; sub al, -0x14 ; call rcx
0x000000000060bb16 : add dword ptr [rax], eax ; fdivr dword ptr [rsi] ; out dx, eax ; jmp rsi
0x000000000060b096 : add dword ptr [rax], eax ; fdivr st(1) ; out dx, al ; call qword ptr [rax]
0x00000000005ff2e6 : add dword ptr [rax], eax ; fmul dword ptr [rbx - 0x15] ; call qword ptr [rdx]
0x00000000005e30c2 : add dword ptr [rax], eax ; fucom st(7) ; call qword ptr [rax]
0x00000000005e53ca : add dword ptr [rax], eax ; in al, dx ; call qword ptr [rax]
0x00000000005e5dfa : add dword ptr [rax], eax ; jne 0x5e5df1 ; call qword ptr [rax]
0x00000000005e4e62 : add dword ptr [rax], eax ; jo 0x5e4e19 ; jmp 0x5e4e6c
0x00000000005e5552 : add dword ptr [rax], eax ; jo 0x5e54df ; in al, dx ; jmp rax
0x00000000005e54fa : add dword ptr [rax], eax ; jo 0x5e556e ; in al, dx ; jmp qword ptr [rax]
0x00000000005e5952 : add dword ptr [rax], eax ; jo 0x5e593d ; in al, dx ; jmp qword ptr [rax]
0x00000000005e5bd2 : add dword ptr [rax], eax ; jo 0x5e5c0d ; in eax, dx ; jmp qword ptr [rax]
0x000000000060288e : add dword ptr [rax], eax ; jo 0x602852 ; in al, dx ; call qword ptr [rbx]
0x000000000060538e : add dword ptr [rax], eax ; jo 0x60534d ; in eax, dx ; jmp rdx
0x0000000000607bde : add dword ptr [rax], eax ; jo 0x607c20 ; out dx, al ; call qword ptr [rsi]
0x00000000005e42d2 : add dword ptr [rax], eax ; jp 0x5e42c6 ; call qword ptr [rax]
0x0000000000600126 : add dword ptr [rax], eax ; js 0x6000c2 ; jmp 0x600130
0x0000000000602876 : add dword ptr [rax], eax ; js 0x60283a ; in al, dx ; call qword ptr [rax]
0x000000000060b4c6 : add dword ptr [rax], eax ; js 0x60b4ea ; out dx, eax ; call qword ptr [rax]
0x000000000060b4c5 : add dword ptr [rax], eax ; js 0x60b4eb ; out dx, eax ; call qword ptr [rax]
0x00000000005e4aea : add dword ptr [rax], eax ; loopne 0x5e4b47 ; jmp 0x5e4af4
0x00000000005e4f22 : add dword ptr [rax], eax ; loopne 0x5e4ee5 ; jmp 0x5e4f2c
0x00000000005e4f7a : add dword ptr [rax], eax ; loopne 0x5e4f43 ; jmp 0x5e4f84
0x00000000005e5212 : add dword ptr [rax], eax ; loopne 0x5e521c ; in al, dx ; jmp qword ptr [rax]
0x00000000005e526a : add dword ptr [rax], eax ; loopne 0x5e52a6 ; in al, dx ; jmp rax
0x00000000005e5f52 : add dword ptr [rax], eax ; loopne 0x5e5ef5 ; in eax, dx ; call rax
0x00000000005e6192 : add dword ptr [rax], eax ; loopne 0x5e61c0 ; out dx, al ; jmp rax
0x000000000060016e : add dword ptr [rax], eax ; loopne 0x60010a ; jmp 0x600178
0x0000000000601dce : add dword ptr [rax], eax ; loopne 0x601d6a ; in al, dx ; jmp qword ptr [rbx]
0x000000000060229e : add dword ptr [rax], eax ; loopne 0x602248 ; in al, dx ; call qword ptr [rbx]
0x00000000006025fe : add dword ptr [rax], eax ; loopne 0x6025b9 ; in al, dx ; jmp qword ptr [rdi]
0x00000000006046de : add dword ptr [rax], eax ; loopne 0x604764 ; in eax, dx ; jmp qword ptr [rax]
0x00000000006095be : add dword ptr [rax], eax ; loopne 0x609567 ; out dx, al ; call qword ptr [rcx]
0x0000000000609c2e : add dword ptr [rax], eax ; loopne 0x609beb ; out dx, al ; call qword ptr [rbx]
0x000000000060642e : add dword ptr [rax], eax ; mov al, -0x13 ; in eax, dx ; jmp qword ptr [rax]
0x00000000005e586a : add dword ptr [rax], eax ; mov al, -0x48 ; in al, dx ; call rax
0x00000000005e55d2 : add dword ptr [rax], eax ; mov al, -0x75 ; in al, dx ; jmp qword ptr [rax]
0x00000000005e5ab2 : add dword ptr [rax], eax ; mov al, 0x18 ; in eax, dx ; call rax
0x00000000005e52f2 : add dword ptr [rax], eax ; mov al, 0x3f ; in al, dx ; jmp rax
0x00000000005e5382 : add dword ptr [rax], eax ; mov al, 0x43 ; in al, dx ; call qword ptr [rax]
0x00000000005e5caa : add dword ptr [rax], eax ; mov al, 0x61 ; in eax, dx ; call qword ptr [rax]
0x0000000000603896 : add dword ptr [rax], eax ; mov byte ptr [rbx], cl ; in eax, dx ; call rsi
0x000000000060bbd6 : add dword ptr [rax], eax ; mov byte ptr [rcx - 0x11], al ; call qword ptr [rbx]
0x00000000005fcd46 : add dword ptr [rax], eax ; mov byte ptr [rdi - 0x16], bh ; call qword ptr [rcx]
0x00000000004b8d63 : add dword ptr [rax], eax ; mov eax, 0xffffffff ; pop rdx ; ret
0x0000000000483ee6 : add dword ptr [rax], eax ; mov eax, 1 ; pop rbx ; ret
0x00000000004b4381 : add dword ptr [rax], eax ; mov eax, ebp ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000005e3c2a : add dword ptr [rax], eax ; mov ecx, gs ; jmp rax
0x00000000004f3890 : add dword ptr [rax], eax ; mov rax, qword ptr [rbx + 0x20] ; pop rbx ; ret
0x00000000004bc365 : add dword ptr [rax], eax ; mov rax, rbx ; pop rbx ; ret
0x000000000054a529 : add dword ptr [rax], eax ; mov rdi, rax ; call 0x456827
0x00000000005e59ca : add dword ptr [rax], eax ; nop ; add ch, ch ; call rax
0x00000000005e3392 : add dword ptr [rax], eax ; nop ; and eax, ebp ; call qword ptr [rax]
0x000000000060aa0e : add dword ptr [rax], eax ; nop ; hlt ; out dx, al ; call rax
0x00000000005e5372 : add dword ptr [rax], eax ; nop ; in al, dx ; jmp rax
0x00000000005e50c2 : add dword ptr [rax], eax ; nop ; in eax, -0x15 ; call qword ptr [rax]
0x00000000005e5e3a : add dword ptr [rax], eax ; nop ; jbe 0x5e5e31 ; jmp rax
0x00000000005e5ed2 : add dword ptr [rax], eax ; nop ; jg 0x5e5ec9 ; jmp rax
0x00000000005e4ce2 : add dword ptr [rax], eax ; nop ; jns 0x5e4cd7 ; call rax
0x00000000005e2962 : add dword ptr [rax], eax ; nop ; loope 0x5e2951 ; call rax
0x00000000005e5f32 : add dword ptr [rax], eax ; nop ; nop ; in eax, dx ; jmp qword ptr [rax]
0x00000000005e5102 : add dword ptr [rax], eax ; nop ; out -0x15, al ; call rax
0x000000000060bbee : add dword ptr [rax], eax ; nop ; out dx, eax ; call qword ptr [rbx]
0x00000000005fdabe : add dword ptr [rax], eax ; nop ; ret
0x00000000005e589a : add dword ptr [rax], eax ; nop ; ret 0xffec
0x0000000000609e7e : add dword ptr [rax], eax ; nop ; ret 0xffee
0x00000000005e4fba : add dword ptr [rax], eax ; nop ; retf ; jmp 0x5e4fc4
0x00000000005e4972 : add dword ptr [rax], eax ; nop ; sub ch, bl ; call qword ptr [rax]
0x00000000005e2b92 : add dword ptr [rax], eax ; nop ; sub dh, ah ; jmp qword ptr [rax]
0x00000000005e5562 : add dword ptr [rax], eax ; nop ; test ch, ah ; call qword ptr [rax]
0x00000000005e4fda : add dword ptr [rax], eax ; nop ; xlatb ; jmp 0x5e4fe4
0x00000000005e5272 : add dword ptr [rax], eax ; nop ; xor al, 0xffffffffffffffec ; call qword ptr [rax]
0x0000000000608d06 : add dword ptr [rax], eax ; or byte ptr [rbp - 0x12], dh ; jmp qword ptr [rdi]
0x00000000005fe9d6 : add dword ptr [rax], eax ; or rbp, rbx ; call qword ptr [rcx]
0x00000000005fdb66 : add dword ptr [rax], eax ; pop rax ; ret
0x0000000000609e56 : add dword ptr [rax], eax ; pop rax ; ret 0xffee
0x00000000005fee96 : add dword ptr [rax], eax ; pop rax ; xor ebx, ebp ; call rsp
0x00000000005e5472 : add dword ptr [rax], eax ; pop rbp ; in al, dx ; push qword ptr [rax] ; ret 1
0x00000000004ab5b2 : add dword ptr [rax], eax ; pop rbx ; ret
0x00000000005e4b5a : add dword ptr [rax], eax ; pop rdi ; jmp 0x5e4b64
0x00000000006015c6 : add dword ptr [rax], eax ; push -0x14 ; jmp rdx
0x00000000005fe8fe : add dword ptr [rax], eax ; push rax ; add ch, bl ; call rbx
0x00000000005e2c7a : add dword ptr [rax], eax ; push rax ; cmp edi, esp ; call rax
0x00000000005e3d9a : add dword ptr [rax], eax ; push rax ; fsubr st(1) ; jmp qword ptr [rax]
0x00000000005e5072 : add dword ptr [rax], eax ; push rax ; in al, -0x15 ; jmp qword ptr [rax]
0x00000000005e50b2 : add dword ptr [rax], eax ; push rax ; in eax, -0x15 ; jmp rax
0x00000000005e5d72 : add dword ptr [rax], eax ; push rax ; insb byte ptr [rdi], dx ; in eax, dx ; call qword ptr [rax]
0x0000000000602d2e : add dword ptr [rax], eax ; push rax ; iretd ; in al, dx ; jmp rdx
0x00000000005e2c32 : add dword ptr [rax], eax ; push rax ; jae 0x5e2c22 ; jmp rax
0x00000000005e5d9a : add dword ptr [rax], eax ; push rax ; jb 0x5e5d91 ; call rax
0x00000000005e3512 : add dword ptr [rax], eax ; push rax ; jge 0x5e3504 ; jmp rax
0x00000000005e2972 : add dword ptr [rax], eax ; push rax ; loop 0x5e2961 ; call qword ptr [rax]
0x0000000000608ade : add dword ptr [rax], eax ; push rax ; push -0x12 ; jmp qword ptr [rdi]
0x00000000005e5c3a : add dword ptr [rax], eax ; push rax ; push rsp ; in eax, dx ; jmp qword ptr [rax]
0x00000000005fdb7e : add dword ptr [rax], eax ; push rax ; ret
0x00000000005e3742 : add dword ptr [rax], eax ; push rax ; ret 0xffe8
0x00000000005e60da : add dword ptr [rax], eax ; push rax ; ret 0xffed
0x00000000005e61da : add dword ptr [rax], eax ; push rax ; sub al, -0x12 ; jmp qword ptr [rax]
0x00000000005e3ed2 : add dword ptr [rax], eax ; push rax ; sub edx, ebp ; call rax
0x00000000005e3b9a : add dword ptr [rax], eax ; push rax ; xchg ecx, ebp ; jmp rax
0x00000000005e4ada : add dword ptr [rax], eax ; rcl byte ptr [rbx - 0x15] ; jmp rax
0x0000000000606c8e : add dword ptr [rax], eax ; rcl byte ptr [rsi + rbp*8] ; jmp qword ptr [rdi]
0x00000000005e45fa : add dword ptr [rax], eax ; rcl dh, -0x16 ; jmp qword ptr [rax]
0x00000000005e46c2 : add dword ptr [rax], eax ; rcr bh, -0x16 ; call rax
0x00000000005e6172 : add dword ptr [rax], eax ; rcr byte ptr [rdx], -0x12 ; jmp qword ptr [rax]
0x00000000004c63d9 : add dword ptr [rax], eax ; ret
0x00000000005e60ba : add dword ptr [rax], eax ; rol al, -0x13 ; jmp qword ptr [rax]
0x00000000005e3222 : add dword ptr [rax], eax ; rol byte ptr [rax], -0x18 ; call rax
0x00000000005e53ba : add dword ptr [rax], eax ; rol byte ptr [rbp - 0x14], 1 ; jmp rax
0x000000000060696e : add dword ptr [rax], eax ; rol byte ptr [rsi + rbp*8], 1 ; jmp qword ptr [rdi]
0x00000000005e4542 : add dword ptr [rax], eax ; rol dh, -0x16 ; call qword ptr [rax]
0x00000000005e56aa : add dword ptr [rax], eax ; sahf ; in al, dx ; jmp rax
0x00000000005e29ea : add dword ptr [rax], eax ; sal bh, -0x1b ; jmp qword ptr [rax]
0x00000000005e6212 : add dword ptr [rax], eax ; sal byte ptr [rax], -0x12 ; call qword ptr [rax]
0x00000000005e34ea : add dword ptr [rax], eax ; sal byte ptr [rbx - 0x18], 1 ; call qword ptr [rax]
0x00000000005e6132 : add dword ptr [rax], eax ; sar ah, -0x13 ; call qword ptr [rax]
0x00000000006081be : add dword ptr [rax], eax ; sar byte ptr [rdi], -0x12 ; call qword ptr [rcx]
0x00000000005e51c2 : add dword ptr [rax], eax ; sar ch, -0x15 ; jmp rax
0x00000000005e381a : add dword ptr [rax], eax ; sar dl, -0x18 ; jmp qword ptr [rax]
0x00000000005fe2ae : add dword ptr [rax], eax ; sbb bl, -0x16 ; call qword ptr [rbx]
0x0000000000606f36 : add dword ptr [rax], eax ; sbb bpl, sil ; call qword ptr [rcx]
0x0000000000603996 : add dword ptr [rax], eax ; sbb byte ptr [rdx], dl ; in eax, dx ; jmp qword ptr [rcx]
0x00000000005e523a : add dword ptr [rax], eax ; sbb esp, ebp ; jmp rax
0x00000000005e48d2 : add dword ptr [rax], eax ; shl byte ptr [rdi], -0x15 ; call qword ptr [rax]
0x00000000005e4912 : add dword ptr [rax], eax ; sub bl, bpl ; call rax
0x0000000000601696 : add dword ptr [rax], eax ; sub byte ptr [rsi - 0x14], ch ; call qword ptr [rsi]
0x00000000005e47aa : add dword ptr [rax], eax ; sub cl, -0x16 ; call qword ptr [rax]
0x0000000000600a06 : add dword ptr [rax], eax ; sub dh, cl ; jmp 0x600a10
0x0000000000604b16 : add dword ptr [rax], eax ; test al, -0x71 ; in eax, dx ; call rsp
0x0000000000608306 : add dword ptr [rax], eax ; test al, 0x47 ; out dx, al ; call rdi
0x000000000060bda6 : add dword ptr [rax], eax ; test al, 0x48 ; out dx, eax ; jmp rcx
0x0000000000604356 : add dword ptr [rax], eax ; test al, 0x73 ; in eax, dx ; call qword ptr [rsi]
0x00000000004b6eab : add dword ptr [rax], eax ; test rax, rax ; je 0x4b6ebc ; pop rax ; ret
0x00000000004bbeeb : add dword ptr [rax], eax ; test rax, rax ; je 0x4bbefc ; pop rax ; ret
0x00000000005fee06 : add dword ptr [rax], eax ; xor bl, bpl ; jmp qword ptr [rbx]
0x00000000005e2c02 : add dword ptr [rax], eax ; xor byte ptr [rax - 0x1a], ch ; call qword ptr [rax]
0x00000000005e3a3a : add dword ptr [rax], eax ; xor byte ptr [rbx - 0x17], ch ; call qword ptr [rax]
0x0000000000606a5e : add dword ptr [rax], eax ; xor byte ptr [rbx], cl ; out dx, al ; call rdi
0x00000000005e54b2 : add dword ptr [rax], eax ; xor byte ptr [rdi - 0x14], bl ; inc dword ptr [rax] ; ret
0x00000000006010ce : add dword ptr [rax], eax ; xor byte ptr [rsi - 0x14], cl ; call qword ptr [rdx]
0x00000000005e61a2 : add dword ptr [rax], eax ; xor byte ptr [rsi], ah ; out dx, al ; call qword ptr [rax]
0x00000000006038ce : add dword ptr [rax], eax ; xor byte ptr [rsi], cl ; in eax, dx ; jmp rsi
0x0000000000440183 : add dword ptr [rax], eax ; xor eax, eax ; pop rbx ; pop r14 ; pop r15 ; ret
0x00000000004b3107 : add dword ptr [rax], eax ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004ad617 : add dword ptr [rax], eax ; xor eax, eax ; pop rbx ; ret
0x00000000004af052 : add dword ptr [rax], eax ; xor eax, eax ; pop rdx ; ret
0x0000000000600dee : add dword ptr [rax], eax ; xor esp, ebp ; jmp qword ptr [rbx]
0x00000000005128d5 : add dword ptr [rax], ecx ; add byte ptr [rdi], cl ; ret 0xe083
0x000000000048d333 : add dword ptr [rax], edi ; ret 0xf48
0x0000000000452514 : add dword ptr [rax], esp ; pshufb xmm6, xmm7 ; sub r10, rax ; jmp 0x452529
0x000000000045282f : add dword ptr [rax], esp ; sub r10, rax ; jmp 0x452844
0x00000000004323e1 : add dword ptr [rax], r8d ; add byte ptr [rax + 0x573928], bh ; ret
0x000000000053f724 : add dword ptr [rbp + 6], esi ; mov eax, dword ptr [rsi + 0x28] ; mov dword ptr [rdi], eax ; ret
0x000000000046b003 : add dword ptr [rbp + 6], esi ; mov rax, qword ptr [rdi] ; mov rax, qword ptr [rax] ; ret
0x000000000049c9d6 : add dword ptr [rbp + 6], esi ; movsxd rax, dword ptr [rdi + 0x14] ; pop rdx ; ret
0x0000000000564aec : add dword ptr [rbp - 0x16], esi ; ret
0x0000000000564b82 : add dword ptr [rbp - 0x45], esi ; ret
0x0000000000564e38 : add dword ptr [rbp - 0xc], esi ; ret
0x0000000000544aeb : add dword ptr [rbp - 5], ebx ; dec dword ptr [rax - 0x77] ; ret
0x00000000005a9195 : add dword ptr [rbx + 6], esp ; jno 0x5a919c ; xchg eax, edi ; ret
0x0000000000440a8a : add dword ptr [rbx], eax ; mov eax, 1 ; pop rbx ; ret
0x0000000000490667 : add dword ptr [rbx], ecx ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005b7ea1 : add dword ptr [rbx], edx ; adc ecx, ecx ; ret 0x15a3
0x000000000046147c : add dword ptr [rcx + 0x48], esi ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000059a794 : add dword ptr [rcx + 0x54], ebp ; mov word ptr [rsi + 0x44], ss ; ret 0x7461
0x00000000004cd8fd : add dword ptr [rcx + 1], edi ; mov eax, ecx ; pop rdx ; ret
0x0000000000456512 : add dword ptr [rcx + rcx*4 + 0xf], ecx ; ret
0x00000000004a15bc : add dword ptr [rcx - 0x3b7cb718], ecx ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000005a76de : add dword ptr [rcx - 0x5432cd69], eax ; leave ; rcl byte ptr [rcx - 0x3e] ; jmp 0x5a76fb
0x00000000004397d2 : add dword ptr [rcx - 0x73], ecx ; add al, 9 ; ret 0x1be
0x000000000046b437 : add dword ptr [rcx - 0x75], eax ; or al, 0x39 ; ret
0x0000000000503f0e : add dword ptr [rcx - 0x7d], ecx ; ret
0x00000000005e4441 : add dword ptr [rcx], 0xeaaf6000 ; call qword ptr [rax]
0x0000000000604355 : add dword ptr [rcx], 0xed73a800 ; call qword ptr [rsi]
0x00000000005fc31d : add dword ptr [rcx], eax ; add byte ptr [rax], ah ; sub ebp, edx ; call qword ptr [rcx]
0x0000000000456511 : add dword ptr [rcx], eax ; mov qword ptr [rdi], r9 ; ret
0x000000000040878e : add dword ptr [rcx], ebp ; ret 0xca01
0x000000000049fb05 : add dword ptr [rcx], ebx ; ror byte ptr [rcx], -0x38 ; pop rdx ; ret
0x0000000000419de7 : add dword ptr [rcx], ecx ; ret
0x0000000000549d47 : add dword ptr [rcx], ecx ; ret 0xbfbe
0x000000000054eecd : add dword ptr [rcx], ecx ; ret 0xc0be
0x0000000000415d05 : add dword ptr [rcx], edi ; ret
0x0000000000468ed4 : add dword ptr [rcx], edi ; ret 0xbc41
0x000000000057dd44 : add dword ptr [rcx], esi ; ret 0x5ca9
0x000000000040878d : add dword ptr [rcx], r13d ; ret 0xca01
0x00000000005488c0 : add dword ptr [rdi + 3], esi ; mov eax, dword ptr [rdi + 0x20] ; ret
0x00000000005488e0 : add dword ptr [rdi + 3], esi ; mov eax, dword ptr [rdi + 0x24] ; ret
0x000000000054842f : add dword ptr [rdi + 4], esi ; mov rax, qword ptr [rdi + 0x18] ; ret
0x000000000040a09e : add dword ptr [rdi + rdx - 1], esi ; ret
0x000000000045acdf : add dword ptr [rdi], ecx ; fld dword ptr [rcx - 0xa] ; ret 0x7410
0x000000000040878a : add dword ptr [rdi], ecx ; mov dh, 0x46 ; add dword ptr [rcx], ebp ; ret 0xca01
0x000000000045aa3b : add dword ptr [rdi], ecx ; ret 0xc085
0x0000000000485d5d : add dword ptr [rdi], ecx ; test byte ptr [rdx - 0x1000000], bl ; ret
0x000000000042930a : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xf44
0x0000000000442b45 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xf883
0x000000000048ed99 : add dword ptr [rdi], esp ; pop rax ; add byte ptr [rcx + 0x102], bh ; call rax
0x000000000048edfe : add dword ptr [rdi], esp ; pop rax ; add byte ptr [rcx + 0x111], bh ; call rax
0x000000000048eefc : add dword ptr [rdi], esp ; pop rax ; add byte ptr [rcx + 0x121], bh ; call rax
0x000000000048f0a3 : add dword ptr [rdi], esp ; pop rax ; add byte ptr [rcx + 0x133], bh ; call rax
0x000000000048f11f : add dword ptr [rdi], esp ; pop rax ; add byte ptr [rcx + 0x148], bh ; call rax
0x000000000048efaa : add dword ptr [rdi], esp ; pop rax ; add byte ptr [rcx + 0x156], bh ; call rax
0x000000000048eff9 : add dword ptr [rdi], esp ; pop rax ; add byte ptr [rcx + 0x15d], bh ; call rax
0x000000000048f21a : add dword ptr [rdi], esp ; pop rax ; add byte ptr [rcx + 0x15d], bh ; call rbx
0x000000000048ed58 : add dword ptr [rdi], esp ; pop rax ; add byte ptr [rcx + 0xfb], bh ; call rax
0x000000000048eeab : add dword ptr [rdi], esp ; pop rax ; add byte ptr [rcx + 0xfe], bh ; call rax
0x000000000057d316 : add dword ptr [rdx + 0x28], ecx ; mov bpl, al ; jno 0x57d395 ; ret
0x000000000053e9db : add dword ptr [rdx - 0x7cb70001], esi ; ret
0x00000000005b08b5 : add dword ptr [rdx - 0xd], 0x16 ; ret
0x0000000000618544 : add dword ptr [rdx], 0 ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; ret
0x00000000004f484b : add dword ptr [rdx], 0x89480000 ; ret
0x00000000004e2a5b : add dword ptr [rip - 0x76b80000], esi ; ret
0x000000000044d38d : add dword ptr [rsi + 0x45], esp ; movd dword ptr [rcx + 0x10], mm1 ; ret
0x00000000004d55a8 : add dword ptr [rsi + 0xf], esp ; out dx, eax ; ret
0x000000000055dc58 : add dword ptr [rsi + rdi*8 - 1], edx ; dec dword ptr [rdi] ; ret 0xc8b
0x000000000043f718 : add dword ptr [rsi - 0x3f], esp ; ret
0x00000000004227b3 : add dword ptr [rsi - 0x3f], esp ; ret 0x6608
0x000000000059fbc3 : add dword ptr [rsi], 0xe ; jge 0x59fc1b ; in al, dx ; call rsp
0x0000000000440a2c : add dword ptr [rsi], 2 ; mov eax, 1 ; ret
0x0000000000440a60 : add dword ptr [rsi], 4 ; mov eax, 1 ; ret
0x00000000004e0203 : add dword ptr [rsi], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004b948d : add dword ptr cs:[rax], eax ; xor eax, eax ; pop rdx ; ret
0x00000000005e3511 : add dword ptr ds:[rax], eax ; push rax ; jge 0x5e3505 ; jmp rax
0x00000000004b84ea : add dword ptr ds:[rax], eax ; xor eax, eax ; pop rdx ; ret
0x0000000000432d7d : add dword ptr es:[rax], eax ; add byte ptr [rax + 0x573f77], bh ; ret
0x00000000005fe8fd : add dword ptr es:[rax], eax ; push rax ; add ch, bl ; call rbx
0x00000000004574ea : add dword ptr gs:[rax], eax ; add byte ptr [rax - 1], cl ; ret
0x00000000005e3d99 : add dword ptr gs:[rax], eax ; push rax ; fsubr st(1) ; jmp qword ptr [rax]
0x000000000048f16c : add dword ptr ss:[rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; jmp rax
0x00000000004b8d62 : add dword ptr ss:[rax], eax ; mov eax, 0xffffffff ; pop rdx ; ret
0x00000000005b7ea0 : add dword ptr ss:[rbx], edx ; adc ecx, ecx ; ret 0x15a3
0x000000000049fb0d : add eax, -8 ; mov eax, r8d ; pop rdx ; ret
0x000000000046aa51 : add eax, 0x10 ; ret
0x00000000004c2190 : add eax, 0x102e283 ; ret 0xead1
0x00000000005b7e9e : add eax, 0x13013695 ; adc ecx, ecx ; ret 0x15a3
0x000000000041bb61 : add eax, 0x1410000 ; fadd qword ptr [rcx - 0x7d] ; call qword ptr [rdi]
0x00000000004f853b : add eax, 0x1480000 ; ret
0x000000000046ace0 : add eax, 0x14c8d4c ; and byte ptr [rax - 0x77], cl ; ret
0x00000000005d67c7 : add eax, 0x16c6d2d4 ; rcl bl ; ret
0x000000000046aa01 : add eax, 0x18 ; ret
0x00000000004f4bfc : add eax, 0x18478b48 ; ret
0x00000000005073ba : add eax, 0x19 ; ret
0x000000000057d394 : add eax, 0x1ae83ec3 ; jne 0x57d334 ; ret 0x5669
0x000000000048c7c9 : add eax, 0x1b800 ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000048d193 : add eax, 0x1b800 ; add byte ptr [rax], al ; pop rdx ; ret
0x0000000000470ef3 : add eax, 0x1d44c6 ; dec dword ptr [rax - 1] ; ret
0x0000000000421386 : add eax, 0x20 ; jmp 0x4216c6
0x000000000046aa60 : add eax, 0x20 ; ret
0x00000000005a4284 : add eax, 0x23f2b8c4 ; stosb byte ptr [rdi], al ; ret 0x426d
0x00000000004df575 : add eax, 0x246c8948 ; adc byte ptr [rcx - 0x7d], cl ; jmp qword ptr [rax]
0x000000000040773e : add eax, 0x24ff0000 ; int 0x80
0x000000000046aa1f : add eax, 0x28 ; ret
0x000000000048ecc2 : add eax, 0x29 ; pop rbx ; ret
0x000000000056606e : add eax, 0x2c5645 ; ret
0x000000000055b652 : add eax, 0x2cfe89 ; ret
0x0000000000547404 : add eax, 0x2e7397 ; pop rdx ; ret
0x000000000046aa40 : add eax, 0x30 ; ret
0x000000000050d194 : add eax, 0x3214af ; pop rdx ; ret
0x0000000000504416 : add eax, 0x32a20d ; pop rbx ; ret
0x00000000005b100d : add eax, 0x3398db0f ; ret
0x00000000004e5e24 : add eax, 0x34104f ; mov qword ptr [rsi], rax ; ret
0x00000000004e5de8 : add eax, 0x34108b ; mov qword ptr [rsi], rax ; ret
0x00000000004e5db2 : add eax, 0x3410a9 ; mov qword ptr [rdx], rax ; ret
0x00000000004e5d59 : add eax, 0x341102 ; mov qword ptr [rdx], rax ; ret
0x00000000004e5ba2 : add eax, 0x3412a9 ; jmp rax
0x00000000004e9162 : add eax, 0x34549d ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000004e6662 : add eax, 0x347f61 ; ret
0x00000000004e5e73 : add eax, 0x348730 ; mov qword ptr [r8], rax ; ret
0x00000000004dd371 : add eax, 0x350ce2 ; pop rdx ; ret
0x00000000004d0d56 : add eax, 0x35d2dd ; pop rdx ; jmp qword ptr [rax]
0x00000000004d0c96 : add eax, 0x35d39d ; pop rdx ; ret
0x00000000004cd3d6 : add eax, 0x35f095 ; xor edi, edi ; pop rdx ; jmp qword ptr [rax]
0x00000000004cbf56 : add eax, 0x360515 ; pop rdx ; ret
0x00000000004cb971 : add eax, 0x360af2 ; ret
0x00000000004c5fb4 : add eax, 0x36644f ; pop rdx ; ret
0x000000000059adfa : add eax, 0x36d53d32 ; adc al, 0x62 ; ret
0x00000000004bc154 : add eax, 0x3702a7 ; pop rdx ; ret
0x000000000046a9e2 : add eax, 0x38 ; ret
0x00000000004abb0d : add eax, 0x3807ae ; pop r8 ; jmp rax
0x00000000004abab5 : add eax, 0x380806 ; pop r8 ; jmp rax
0x000000000049c6b2 : add eax, 0x38f241 ; ret
0x000000000049a844 : add eax, 0x3910a7 ; pop rdx ; ret
0x0000000000496464 : add eax, 0x39547f ; pop rdx ; ret
0x000000000048f6c2 : add eax, 0x39c041 ; ret
0x000000000048f3a2 : add eax, 0x39c531 ; ret
0x000000000048f322 : add eax, 0x39c5a9 ; ret
0x000000000048f2a2 : add eax, 0x39c621 ; ret
0x000000000048f292 : add eax, 0x39c629 ; ret
0x000000000048f252 : add eax, 0x39c659 ; ret
0x000000000048f232 : add eax, 0x39c669 ; ret
0x000000000048f242 : add eax, 0x39c671 ; ret
0x000000000046a9a6 : add eax, 0x3c0e71 ; ret
0x000000000046a99f : add eax, 0x3c0e74 ; ret
0x000000000046a998 : add eax, 0x3c0e77 ; ret
0x000000000046a991 : add eax, 0x3c0e7a ; ret
0x000000000046a96f : add eax, 0x3c0ea8 ; ret
0x0000000000443352 : add eax, 0x3db881 ; ret
0x00000000005aecf5 : add eax, 0x3f168143 ; hlt ; and al, 0x68 ; xchg eax, edi ; ret
0x00000000004298f8 : add eax, 0x401edb ; pop rdx ; ret
0x000000000042743c : add eax, 0x404393 ; add rsp, 0x18 ; ret
0x00000000004023b4 : add eax, 0x429356 ; add ebx, esi ; ret
0x000000000053f967 : add eax, 0x48000000 ; add esp, 0x18 ; ret
0x000000000042e85e : add eax, 0x48000000 ; mov edx, eax ; jmp rcx
0x000000000049982e : add eax, 0x49c8ce8 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004e349d : add eax, 0x50b89000 ; fcomp dword ptr [rbx] ; ret
0x00000000004d0395 : add eax, 0x5a08478b ; ret
0x000000000047a297 : add eax, 0x5ac03100 ; ret
0x000000000042dea7 : add eax, 0x5b000000 ; pop r14 ; pop rbp ; ret
0x00000000004d022d : add eax, 0x5b000000 ; ret
0x000000000040250e : add eax, 0x5bc03100 ; pop r14 ; pop r15 ; ret
0x000000000047a75a : add eax, 0x5bc03100 ; ret
0x00000000004971dc : add eax, 0x5bd88948 ; ret
0x0000000000402a50 : add eax, 0x5f894900 ; cmp byte ptr [rax - 0x7d], cl ; ret
0x00000000005a481d : add eax, 0x64b0408d ; ret
0x000000000042a034 : add eax, 0x6c ; mov qword ptr [rdi + 0x30], rax ; ret
0x0000000000520eef : add eax, 0x6f0f4466 ; ret
0x000000000052097c : add eax, 0x6f0f4466 ; ret 0xfd01
0x0000000000483e44 : add eax, 0x7c676e8 ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000055529b : add eax, 0x83480000 ; ret 0x4820
0x00000000005e6439 : add eax, 0x84800002 ; out dx, al ; call rax
0x00000000005b24c4 : add eax, 0x857d2e5c ; ret
0x00000000004c7017 : add eax, 0x85fffa43 ; ror byte ptr [rdi], -0x78 ; ret 0
0x00000000004d4e32 : add eax, 0x88d3094c ; ret 0xc148
0x00000000004cf40f : add eax, 0x893e8945 ; ret
0x00000000004eee85 : add eax, 0x89480000 ; ret
0x00000000004e8ddc : add eax, 0x89480000 ; ret 0xc148
0x00000000004a6d8d : add eax, 0x8948000a ; ret
0x00000000005371f0 : add eax, 0x89c00141 ; ret
0x000000000055e217 : add eax, 0x89ffffb7 ; ret
0x000000000047e76a : add eax, 0x908e2c1 ; ret 0xb60f
0x0000000000568bc0 : add eax, 0x908e2c1 ; ret 0xf41
0x000000000045e3ad : add eax, 0x910e2c1 ; ret 0xb60f
0x00000000005983b8 : add eax, 0x9f51d50e ; ret 0xe1a9
0x0000000000431f9a : add eax, 0xbfb80000 ; xor dword ptr [rdi], edx ; ret
0x0000000000454ad7 : add eax, 0xc ; pop rdx ; ret
0x00000000005073c0 : add eax, 0xc ; ret
0x0000000000437684 : add eax, 0xc0310376 ; ret
0x0000000000479f4b : add eax, 0xc0854800 ; je 0x479f5c ; pop rax ; ret
0x0000000000431764 : add eax, 0xc4834800 ; sbb byte ptr [rbx + 0x41], bl ; pop rsi ; ret
0x00000000005d7240 : add eax, 0xcb313435 ; or ecx, eax ; ret
0x00000000005d6a42 : add eax, 0xcbc3c835 ; or ecx, esp ; ret 0xece
0x00000000005a30a4 : add eax, 0xd04ee144 ; ret
0x00000000004227ae : add eax, 0xd0c50f66 ; add dword ptr [rsi - 0x3f], esp ; ret 0x6608
0x000000000051fad2 : add eax, 0xd1c30141 ; ret 0x2144
0x000000000051f97d : add eax, 0xd1c40141 ; ret 0xf321
0x000000000051fb7e : add eax, 0xd1c50141 ; ret 0xfb21
0x00000000004305d6 : add eax, 0xd8894800 ; pop rbx ; ret
0x0000000000503b0d : add eax, 0xd8c50f66 ; add dword ptr [rsi - 0x3f], esp ; ret
0x000000000043f786 : add eax, 0xd9c50f66 ; add dword ptr [rsi - 0x3f], esp ; ret
0x000000000043f713 : add eax, 0xdac50f66 ; add dword ptr [rsi - 0x3f], esp ; ret
0x000000000043f801 : add eax, 0xdbc50f66 ; add dword ptr [rsi - 0x3f], esp ; ret
0x0000000000524183 : add eax, 0xdf0f4166 ; ret
0x0000000000524284 : add eax, 0xdf0f4166 ; ret 0x4166
0x0000000000428fc7 : add eax, 0xebd9894c ; and byte ptr [rcx - 0xa], al ; ret
0x00000000004312a9 : add eax, 0xf0894400 ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000057d238 : add eax, 0xf1838776 ; in al, dx ; and eax, dword ptr [rbp + 0x40] ; ret 0x8def
0x00000000005a4283 : add eax, 0xf2b8c405 ; and ecx, dword ptr [rax - 0x56] ; ret 0x426d
0x000000000042136a : add eax, 0xf6000003 ; ret
0x00000000004f9f24 : add eax, 0xf9b466e8 ; dec dword ptr [rax - 0x77] ; ret
0x000000000044cb0c : add eax, 0xfe6941c4 ; ret 0xf201
0x000000000044ca8e : add eax, 0xfe7141c4 ; ret 0xf101
0x000000000044ca1c : add eax, 0xfe7941c4 ; ret 0xf301
0x000000000048a589 : add eax, 0xff000000 ; ret
0x00000000004711cc : add eax, 0xffffffff ; ret
0x000000000045655e : add eax, 3 ; ret
0x0000000000560907 : add eax, 5 ; pop rdx ; ret
0x000000000049faec : add eax, 8 ; mov eax, r8d ; pop rdx ; ret
0x000000000055bdb7 : add eax, 8 ; pop rdx ; ret
0x000000000046aa35 : add eax, 8 ; ret
0x0000000000551117 : add eax, 9 ; pop rdx ; ret
0x0000000000431f48 : add eax, dword ptr [eax] ; add byte ptr [rax + 0x573a26], bh ; ret
0x000000000058d344 : add eax, dword ptr [rax + 0x34] ; add eax, dword ptr [rax + 0x34] ; add esp, dword ptr [rbx] ; ret
0x000000000058d347 : add eax, dword ptr [rax + 0x34] ; add esp, dword ptr [rbx] ; ret
0x00000000005d6faa : add eax, dword ptr [rax - 0x73f0707d] ; ret 0xece
0x00000000005eaee2 : add eax, dword ptr [rax] ; adc al, -9 ; call qword ptr [rax]
0x00000000005ec052 : add eax, dword ptr [rax] ; adc byte ptr [rax - 8], dh ; call rax
0x00000000005eb0e2 : add eax, dword ptr [rax] ; adc byte ptr [rax - 9], dh ; call rax
0x00000000005eabf2 : add eax, dword ptr [rax] ; adc dl, -0xa ; call qword ptr [rax]
0x000000000042ff77 : add eax, dword ptr [rax] ; add al, ch ; int1 ; ret
0x00000000004a6aa6 : add eax, dword ptr [rax] ; add al, ch ; ret 0x258
0x000000000049f276 : add eax, dword ptr [rax] ; add al, ch ; ret 0xfefc
0x00000000005eaa82 : add eax, dword ptr [rax] ; add bl, -0xa ; call qword ptr [rax]
0x0000000000432034 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x5730b2], bh ; ret
0x000000000043219e : add eax, dword ptr [rax] ; add byte ptr [rax + 0x5731a1], bh ; ret
0x000000000043200a : add eax, dword ptr [rax] ; add byte ptr [rax + 0x57343b], bh ; ret
0x0000000000431ff8 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x573495], bh ; ret
0x0000000000431fda : add eax, dword ptr [rax] ; add byte ptr [rax + 0x5734cd], bh ; ret
0x0000000000431fc8 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x573507], bh ; ret
0x000000000043218c : add eax, dword ptr [rax] ; add byte ptr [rax + 0x5735ee], bh ; ret
0x0000000000432168 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x573611], bh ; ret
0x000000000043213a : add eax, dword ptr [rax] ; add byte ptr [rax + 0x57367b], bh ; ret
0x0000000000432128 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x5736bb], bh ; ret
0x0000000000432116 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x5736fd], bh ; ret
0x000000000043206a : add eax, dword ptr [rax] ; add byte ptr [rax + 0x57374d], bh ; ret
0x0000000000432104 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x573793], bh ; ret
0x00000000004320d6 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x573849], bh ; ret
0x00000000004320c4 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x57388d], bh ; ret
0x00000000004320b2 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x5738cf], bh ; ret
0x00000000004320a0 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x573911], bh ; ret
0x000000000043208e : add eax, dword ptr [rax] ; add byte ptr [rax + 0x57393f], bh ; ret
0x000000000043207c : add eax, dword ptr [rax] ; add byte ptr [rax + 0x57397f], bh ; ret
0x000000000043217a : add eax, dword ptr [rax] ; add byte ptr [rax + 0x5739ab], bh ; ret
0x0000000000431f49 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x573a26], bh ; ret
0x0000000000431f2b : add eax, dword ptr [rax] ; add byte ptr [rax + 0x573a5e], bh ; ret
0x0000000000431f19 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x573a94], bh ; ret
0x0000000000431f07 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x573ac8], bh ; ret
0x0000000000431ef5 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x573afe], bh ; ret
0x0000000000431ee3 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x573b7c], bh ; ret
0x0000000000431ebf : add eax, dword ptr [rax] ; add byte ptr [rax + 0x573bb0], bh ; ret
0x0000000000432058 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x573c72], bh ; ret
0x0000000000432046 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x573cae], bh ; ret
0x0000000000432ac0 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x573dd3], bh ; ret
0x0000000000432ada : add eax, dword ptr [rax] ; add byte ptr [rax + 0x57405e], bh ; ret
0x000000000046faaf : add eax, dword ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x00000000004dc780 : add eax, dword ptr [rax] ; add byte ptr [rax + 1], bh ; pop rdx ; ret
0x00000000004db70d : add eax, dword ptr [rax] ; add byte ptr [rax + 2], bh ; ret
0x0000000000415cff : add eax, dword ptr [rax] ; add byte ptr [rax - 0x73], cl ; add dword ptr [rcx], edi ; ret
0x0000000000421270 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; pop rdx ; sbb dh, dh ; ret
0x0000000000413cf7 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; push rdx ; and dh, dh ; ret 0x7420
0x0000000000496a91 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0x41e8
0x00000000004e0443 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0x8fe8
0x0000000000416b7f : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000463c7a : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xbe9
0x0000000000415360 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000041aa5b : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7f], cl ; ret
0x000000000053f63d : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add bl, ch ; adc dh, dh ; ret 0x7406
0x00000000005caafc : add eax, dword ptr [rax] ; add byte ptr [rax], al ; jmp qword ptr [rcx]
0x000000000040dfb3 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000040dee4 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov r9, rbx ; call rax
0x000000000055bce0 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040dc88 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000546cce : add eax, dword ptr [rax] ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x00000000004f3d09 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; xor edx, edx ; jmp rax
0x00000000005ea432 : add eax, dword ptr [rax] ; add byte ptr [rbp - 0xa], al ; jmp qword ptr [rax]
0x00000000005eb092 : add eax, dword ptr [rax] ; add byte ptr [rbx - 9], ch ; jmp qword ptr [rax]
0x0000000000447fb7 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; call qword ptr [rax]
0x00000000005ec18a : add eax, dword ptr [rax] ; add byte ptr [rdi - 8], dh ; jmp rax
0x00000000005eb1ca : add eax, dword ptr [rax] ; add byte ptr [rdi - 9], bh ; call rax
0x000000000040a3c7 : add eax, dword ptr [rax] ; add byte ptr [rdi], cl ; lahf ; ret 0x8440
0x00000000005ebefa : add eax, dword ptr [rax] ; add byte ptr [rdx - 8], ah ; jmp rax
0x00000000005eb9da : add eax, dword ptr [rax] ; add byte ptr [rdx], cl ; clc ; call qword ptr [rax]
0x00000000005ea6aa : add eax, dword ptr [rax] ; add byte ptr [rsi - 0xa], dh ; jmp qword ptr [rax]
0x00000000005ebf42 : add eax, dword ptr [rax] ; add byte ptr [rsi - 8], ah ; call rax
0x000000000050e383 : add eax, dword ptr [rax] ; add cl, byte ptr [rax - 0x7d] ; ret
0x00000000004212b6 : add eax, dword ptr [rax] ; add dh, dh ; ret
0x00000000005eb992 : add eax, dword ptr [rax] ; add edi, eax ; jmp rax
0x0000000000447ad7 : add eax, dword ptr [rax] ; add rsp, 0x18 ; ret
0x00000000004ffeba : add eax, dword ptr [rax] ; add rsp, 0xd8 ; ret
0x00000000004aded1 : add eax, dword ptr [rax] ; add rsp, 8 ; pop rbx ; pop r14 ; ret
0x00000000005eaed2 : add eax, dword ptr [rax] ; and byte ptr [rdi + rsi*8], dl ; jmp rax
0x00000000005ebf0a : add eax, dword ptr [rax] ; and byte ptr [rdx - 8], ah ; call qword ptr [rax]
0x00000000005eb87a : add eax, dword ptr [rax] ; div dil ; call qword ptr [rax]
0x00000000005ebfb2 : add eax, dword ptr [rax] ; jo 0x5ec028 ; clc ; call rax
0x00000000005ec012 : add eax, dword ptr [rax] ; jo 0x5ec08a ; clc ; call qword ptr [rax]
0x00000000005eb162 : add eax, dword ptr [rax] ; jp 0x5eb163 ; jmp qword ptr [rax]
0x00000000005ec14a : add eax, dword ptr [rax] ; loopne 0x5ec1c6 ; clc ; jmp rax
0x00000000005ebc72 : add eax, dword ptr [rax] ; mov al, 0x47 ; clc ; jmp qword ptr [rax]
0x00000000005ebcaa : add eax, dword ptr [rax] ; mov al, 0x48 ; clc ; call rax
0x0000000000500565 : add eax, dword ptr [rax] ; mov eax, 1 ; pop rbx ; ret
0x00000000004cb495 : add eax, dword ptr [rax] ; mov eax, 1 ; pop rdx ; ret
0x000000000042b4d3 : add eax, dword ptr [rax] ; mov ecx, dword ptr [rsp + 4] ; mov eax, ecx ; pop rdx ; ret
0x00000000005ea552 : add eax, dword ptr [rax] ; movsxd rsi, esi ; call qword ptr [rax]
0x00000000005ebfc2 : add eax, dword ptr [rax] ; nop ; outsb dx, byte ptr [rsi] ; clc ; jmp qword ptr [rax]
0x00000000005eaa8a : add eax, dword ptr [rax] ; nop ; ret
0x00000000005eb2c2 : add eax, dword ptr [rax] ; nop ; xchg edi, esi ; call qword ptr [rax]
0x00000000005eae6a : add eax, dword ptr [rax] ; or byte ptr [rcx], 0xf7 ; call qword ptr [rax]
0x00000000005eae92 : add eax, dword ptr [rax] ; push rax ; adc bh, dh ; call rax
0x00000000005eae0a : add eax, dword ptr [rax] ; push rax ; add dh, bh ; jmp rax
0x00000000005eaf82 : add eax, dword ptr [rax] ; push rax ; and bh, dh ; jmp rax
0x00000000005ebdb2 : add eax, dword ptr [rax] ; push rax ; clc ; jmp qword ptr [rax]
0x00000000005ec19a : add eax, dword ptr [rax] ; push rax ; ja 0x5ec19c ; call qword ptr [rax]
0x00000000005ea6da : add eax, dword ptr [rax] ; push rax ; jns 0x5ea6da ; call rax
0x00000000005ec002 : add eax, dword ptr [rax] ; push rax ; outsd dx, dword ptr [rsi] ; clc ; jmp rax
0x00000000005eaa6a : add eax, dword ptr [rax] ; push rax ; ret
0x00000000005eb6f2 : add eax, dword ptr [rax] ; push rax ; sal edi, cl ; call qword ptr [rax]
0x00000000005eaf1a : add eax, dword ptr [rax] ; rcl byte ptr [rdi], -9 ; call qword ptr [rax]
0x00000000005ea50a : add eax, dword ptr [rax] ; rcr byte ptr [rdi - 0xa] ; call qword ptr [rax]
0x00000000005eaa62 : add eax, dword ptr [rax] ; ret
0x00000000005eb95a : add eax, dword ptr [rax] ; rol byte ptr [rcx], 1 ; clc ; jmp qword ptr [rax]
0x00000000005ea3d2 : add eax, dword ptr [rax] ; rol byte ptr [rdx - 0xa], 1 ; jmp rax
0x00000000005eab12 : add eax, dword ptr [rax] ; rol ch, -0xa ; call rax
0x00000000005ea5b2 : add eax, dword ptr [rax] ; sal byte ptr [rax - 0xa], 1 ; jmp qword ptr [rax]
0x00000000005ebf92 : add eax, dword ptr [rax] ; shr byte ptr [rdx - 8], 1 ; call qword ptr [rax]
0x000000000048d72b : add eax, dword ptr [rax] ; test rax, rax ; je 0x48d73c ; pop rax ; ret
0x000000000048ec5b : add eax, dword ptr [rax] ; test rax, rax ; je 0x48ec6c ; pop rax ; ret
0x00000000004958bb : add eax, dword ptr [rax] ; test rax, rax ; je 0x4958cc ; pop rax ; ret
0x0000000000498c4b : add eax, dword ptr [rax] ; test rax, rax ; je 0x498c5c ; pop rax ; ret
0x000000000049c58b : add eax, dword ptr [rax] ; test rax, rax ; je 0x49c59c ; pop rax ; ret
0x00000000005ebb5a : add eax, dword ptr [rax] ; xor byte ptr [rbx - 8], al ; call rax
0x00000000005ebcc2 : add eax, dword ptr [rax] ; xor byte ptr [rcx - 8], cl ; jmp qword ptr [rax]
0x00000000005ebb1a : add eax, dword ptr [rax] ; xor byte ptr [rdx - 8], al ; call qword ptr [rax]
0x00000000005eb122 : add eax, dword ptr [rax] ; xor byte ptr [rsi - 9], dh ; jmp qword ptr [rax]
0x0000000000497768 : add eax, dword ptr [rax] ; xor eax, eax ; pop rbx ; pop r14 ; pop r15 ; ret
0x000000000048ed0c : add eax, dword ptr [rax] ; xor eax, eax ; pop rbx ; ret
0x000000000048d99d : add eax, dword ptr [rax] ; xor eax, eax ; pop rdx ; ret
0x00000000005e2761 : add eax, dword ptr [rcx] ; add byte ptr [rax], ah ; mov dl, -0x1b ; call rax
0x00000000004f4bda : add eax, dword ptr [rdi] ; ret
0x00000000005e63c9 : add eax, dword ptr [rdx] ; add byte ptr [rax], dl ; jb 0x5e63c3 ; jmp rax
0x00000000006184e5 : add eax, dword ptr [rsi + 0x1402] ; add ah, ah ; ret 2
0x00000000006085dd : add eax, dword ptr [rsi + 0x3402] ; add ah, bl ; ret
0x0000000000410c00 : add eax, dword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; ret
0x00000000005eb0e1 : add eax, dword ptr ss:[rax] ; adc byte ptr [rax - 9], dh ; call rax
0x0000000000432033 : add eax, dword ptr ss:[rax] ; add byte ptr [rax + 0x5730b2], bh ; ret
0x0000000000432069 : add eax, dword ptr ss:[rax] ; add byte ptr [rax + 0x57374d], bh ; ret
0x00000000004320d5 : add eax, dword ptr ss:[rax] ; add byte ptr [rax + 0x573849], bh ; ret
0x00000000004320c3 : add eax, dword ptr ss:[rax] ; add byte ptr [rax + 0x57388d], bh ; ret
0x00000000004320b1 : add eax, dword ptr ss:[rax] ; add byte ptr [rax + 0x5738cf], bh ; ret
0x000000000043209f : add eax, dword ptr ss:[rax] ; add byte ptr [rax + 0x573911], bh ; ret
0x000000000043208d : add eax, dword ptr ss:[rax] ; add byte ptr [rax + 0x57393f], bh ; ret
0x000000000043207b : add eax, dword ptr ss:[rax] ; add byte ptr [rax + 0x57397f], bh ; ret
0x0000000000432057 : add eax, dword ptr ss:[rax] ; add byte ptr [rax + 0x573c72], bh ; ret
0x0000000000432045 : add eax, dword ptr ss:[rax] ; add byte ptr [rax + 0x573cae], bh ; ret
0x0000000000495539 : add eax, eax ; pop rbx ; ret
0x0000000000566f95 : add eax, eax ; pop rdx ; ret
0x00000000005d7105 : add eax, eax ; ret
0x00000000005a6576 : add eax, ebp ; loopne 0x5a65c9 ; ret 0xe976
0x0000000000565e3a : add eax, ebp ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000005ab33b : add eax, ebx ; lodsd eax, dword ptr [rsi] ; ret 0x8362
0x000000000040ad6d : add eax, ebx ; pop rbx ; ret
0x00000000004d8416 : add eax, ecx ; ret 0x310b
0x00000000005eb95d : add eax, edi ; jmp qword ptr [rax]
0x0000000000596ccf : add eax, edi ; out dx, eax ; ret
0x00000000004e6847 : add eax, edx ; pop rdx ; ret
0x00000000004e6e64 : add eax, edx ; ret
0x000000000040237b : add eax, edx ; sar rax, 1 ; jne 0x40238c ; pop rbp ; ret
0x00000000005a03e7 : add eax, esp ; ret
0x00000000005a39d1 : add ebp, dword ptr [rcx - 0x21] ; jmp 0x5a3a4b
0x000000000058d2fc : add ebp, dword ptr [rcx - 0x5da07291] ; ret 0x7455
0x00000000005684fa : add ebp, eax ; mov eax, ebp ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000005e3ea5 : add ebp, edx ; jmp qword ptr [rax]
0x00000000004b84fa : add ebx, dword ptr [rax - 1] ; loope 0x4b855e ; ret
0x0000000000479eab : add ebx, dword ptr [rbx + 0x41] ; pop rsi ; pop r15 ; ret
0x00000000005b6c2b : add ebx, dword ptr [rbx + 0xaa02382] ; mov edi, dword ptr [rbx] ; push rax ; ret
0x0000000000408ae1 : add ebx, dword ptr [rsp] ; jmp 0x408af1
0x000000000048d1ae : add ebx, eax ; lea eax, dword ptr [rsi - 0x30] ; ret
0x000000000046c98b : add ebx, eax ; mov eax, ebx ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004f4c31 : add ebx, eax ; mov eax, ebx ; pop rbx ; ret
0x0000000000551b9c : add ebx, eax ; xor eax, eax ; ret
0x00000000004023b9 : add ebx, esi ; ret
0x0000000000505843 : add ecx, -2 ; test ecx, ecx ; jns 0x505838 ; pop rbx ; ret
0x00000000004358e9 : add ecx, 0x30 ; cmp rdx, rax ; jb 0x4358e8 ; ret
0x000000000055b63c : add ecx, 4 ; test edx, edx ; jne 0x55b639 ; xor eax, eax ; ret
0x0000000000426e6a : add ecx, dword ptr [rax + 0x63] ; ret
0x000000000043050e : add ecx, dword ptr [rax + 9] ; dec byte ptr [rax - 0x7d] ; ret 0x48fc
0x00000000004e8da5 : add ecx, dword ptr [rax - 0x3f] ; clc ; add cl, byte ptr [rax + 0x29] ; ret
0x00000000004f2f4d : add ecx, dword ptr [rax - 0x75] ; push rbx ; or byte ptr [rax - 0x7d], cl ; ret 0xbe08
0x00000000004ed890 : add ecx, dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0x0000000000507116 : add ecx, dword ptr [rax - 0x77] ; ret
0x00000000004065d3 : add ecx, dword ptr [rax - 0x77] ; ror dword ptr [rax - 0x77], -0x38 ; pop rdx ; ret
0x00000000004408c5 : add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000045d9c1 : add ecx, dword ptr [rax - 1] ; ret
0x0000000000404cc3 : add ecx, dword ptr [rax - 1] ; ret 0x16eb
0x0000000000492cfb : add ecx, dword ptr [rcx + 0x415b046f] ; pop rsi ; pop rbp ; ret
0x00000000004eca30 : add ecx, dword ptr [rcx + rcx*4 - 8] ; pop rbx ; pop r14 ; pop r15 ; ret
0x00000000004c88b7 : add ecx, dword ptr [rcx - 0x77] ; ret
0x000000000043a9e3 : add ecx, dword ptr [rcx] ; ret
0x000000000045e690 : add ecx, dword ptr [rcx] ; ret 0x5489
0x0000000000549d63 : add ecx, dword ptr [rcx] ; ret 0xbfbe
0x000000000045e306 : add ecx, dword ptr [rcx] ; ret 0xf41
0x00000000005add55 : add ecx, dword ptr [rdi] ; mov eax, 0x7a2186b ; ret 0x55d0
0x000000000042bf71 : add ecx, dword ptr [rdx] ; add byte ptr [rax - 1], bh ; pop rdx ; ret
0x0000000000405c07 : add ecx, dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000566a78 : add ecx, eax ; mov eax, ecx ; pop rbx ; pop r14 ; pop r15 ; ret
0x00000000005b6dab : add ecx, ebx ; push rdx ; ror bl, cl ; ror dword ptr [rbx], cl ; ret 0xd5b3
0x000000000058d77a : add ecx, ecx ; ret
0x0000000000539d04 : add ecx, edx ; jmp 0x9a97e97
0x0000000000539e44 : add ecx, edx ; jmp 0x9a97fd7
0x00000000004f1c0d : add ecx, esi ; dec dword ptr [rax - 0x77] ; ret
0x000000000043070b : add edi, 0x48 ; mov rax, rdi ; ret
0x0000000000440a8b : add edi, dword ptr [rax + 1] ; pop rbx ; ret
0x0000000000498b7e : add edi, dword ptr [rax + 2] ; pop rbx ; ret
0x00000000004446b9 : add edi, dword ptr [rax + 4] ; ret
0x0000000000578ae7 : add edi, dword ptr [rbp + 0x150564f0] ; sahf ; jmp 0x578abb
0x00000000005b7573 : add edi, dword ptr [rbp - 0x46c11d42] ; nop ; leave ; ret 0x9a60
0x00000000004df389 : add edi, dword ptr [rbp - 0x76b70008] ; ret
0x0000000000540a4a : add edi, dword ptr [rsi + 0x10] ; mov rax, rdi ; ret
0x00000000005eb995 : add edi, eax ; jmp rax
0x00000000004e9226 : add edi, eax ; mov dword ptr [rip + 0x33dc56], edi ; ret
0x00000000005ad745 : add edi, eax ; push -0x7067e997 ; js 0x5ad7cd ; ret
0x00000000005783cb : add edi, ebp ; fnsave dword ptr [rdx] ; ret
0x00000000005e6be5 : add edi, ebp ; jmp qword ptr [rax]
0x0000000000470c47 : add edi, edi ; dec dword ptr [rax - 0x77] ; ret
0x00000000005a8cbf : add edi, edi ; insd dword ptr [rdi], dx ; xchg eax, edx ; mov edi, 0xba1700f6 ; ret 0xbf6b
0x000000000053e638 : add edi, edi ; ret
0x000000000053e3d0 : add edi, edi ; ret 0x5489
0x000000000053e666 : add edi, edi ; ret 0x8948
0x00000000005ae6a4 : add edi, edx ; and eax, 0xe3f9eec3 ; ret
0x000000000041fc2e : add edx, 0x200 ; mov rdi, r12 ; call rax
0x00000000005d7034 : add edx, dword ptr [rbx] ; adc byte ptr [rbx], dl ; ret 0xd012
0x00000000005d6836 : add edx, dword ptr [rbx] ; rcl dl ; ret 0xec12
0x00000000005a5b46 : add edx, dword ptr [rsi] ; ret 0x1437
0x0000000000443f0d : add edx, eax ; jmp 0x443f1d
0x00000000004c3cf4 : add edx, edi ; dec dword ptr [rax - 0x77] ; ret
0x00000000004046c6 : add esi, 0xc ; mov rax, rsi ; ret
0x0000000000548880 : add esi, dword ptr [rbp + 4] ; mov rax, qword ptr [rdi + 0x20] ; ret
0x00000000005b3656 : add esi, dword ptr [rbx + 0x56] ; and byte ptr [rbp + 9], dh ; ret
0x0000000000598347 : add esi, dword ptr [rdi] ; sbb ebx, edx ; ret 0x254
0x000000000040acba : add esi, dword ptr [rsi + 3] ; xor eax, eax ; ret
0x000000000042dfc2 : add esi, dword ptr [rsi + 6] ; mov eax, 0x570d5a ; ret
0x0000000000597d2b : add esi, dword ptr [rsi - 0xe] ; ret
0x0000000000618711 : add esi, ebp ; call qword ptr [rdi]
0x000000000058eb90 : add esi, ecx ; xchg eax, esp ; xor edx, dword ptr [rsi + 7] ; ret
0x00000000004d77cf : add esi, edi ; dec dword ptr [rax - 0x77] ; ret
0x00000000005e9d65 : add esi, esi ; call rax
0x00000000005e9dd5 : add esi, esi ; jmp qword ptr [rax]
0x00000000005add49 : add esi, esp ; cli ; ret
0x000000000059b4a5 : add esi, esp ; ret 0xc6d7
0x0000000000402419 : add esp, 0x10 ; pop rbp ; ret
0x000000000040627e : add esp, 0x10 ; pop rbx ; pop r14 ; pop r15 ; ret
0x000000000050462f : add esp, 0x10 ; pop rbx ; pop r14 ; pop rbp ; jmp rax
0x00000000004049c4 : add esp, 0x10 ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004064cb : add esp, 0x10 ; pop rbx ; ret
0x00000000004a4b0c : add esp, 0x1008 ; pop rbx ; pop r14 ; ret
0x000000000051092f : add esp, 0x18 ; jmp rax
0x00000000004042f4 : add esp, 0x18 ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406357 : add esp, 0x18 ; pop rbx ; pop r14 ; ret
0x0000000000408704 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000427442 : add esp, 0x18 ; ret
0x000000000055a6e0 : add esp, 0x1f8 ; ret
0x000000000048df19 : add esp, 0x20 ; pop rbx ; pop r14 ; pop r15 ; ret
0x000000000044332c : add esp, 0x20 ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000406725 : add esp, 0x20 ; pop rbx ; ret
0x000000000055a20f : add esp, 0x200 ; pop rbx ; ret
0x00000000004cd544 : add esp, 0x258 ; ret
0x00000000004cbe7e : add esp, 0x28 ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004866c1 : add esp, 0x28 ; pop rbx ; pop r14 ; ret
0x00000000004163f9 : add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000044168c : add esp, 0x28 ; ret
0x0000000000456adf : add esp, 0x30 ; pop rbx ; pop r14 ; pop r15 ; ret
0x000000000043ceab : add esp, 0x30 ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004434fa : add esp, 0x38 ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000043d53e : add esp, 0x38 ; pop rbx ; pop r14 ; ret
0x000000000044574e : add esp, 0x38 ; ret
0x0000000000558ebc : add esp, 0x40 ; pop rbx ; pop r14 ; pop r15 ; ret
0x00000000004437ce : add esp, 0x40 ; pop rbx ; ret
0x00000000005074f4 : add esp, 0x4008 ; pop rbx ; pop r14 ; ret
0x00000000004a71ae : add esp, 0x410 ; pop rbx ; ret
0x0000000000443874 : add esp, 0x48 ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004adfc8 : add esp, 0x48 ; pop rbx ; pop r14 ; ret
0x00000000004ae074 : add esp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000005485b7 : add esp, 0x48 ; ret
0x00000000004e69eb : add esp, 0x50 ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004f1320 : add esp, 0x50 ; pop rbx ; ret
0x000000000043f274 : add esp, 0x58 ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004861cf : add esp, 0x58 ; pop rbx ; pop r14 ; ret
0x00000000004e6fcc : add esp, 0x58 ; pop rbx ; pop rbp ; ret
0x000000000040dc3d : add esp, 0x58 ; ret
0x00000000005524a4 : add esp, 0x60 ; pop rbx ; pop r14 ; pop r15 ; ret
0x0000000000434ab3 : add esp, 0x68 ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004ce3d8 : add esp, 0x70 ; pop rbx ; pop r14 ; pop r15 ; ret
0x00000000004355d7 : add esp, 0x70 ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000054e069 : add esp, 0x70 ; pop rbx ; ret
0x00000000005307df : add esp, 0x78 ; pop rbx ; pop r14 ; ret
0x000000000054def0 : add esp, 0x78 ; ret
0x000000000044426f : add esp, 0x80 ; pop rbx ; ret
0x0000000000542f4b : add esp, 0x88 ; pop rbx ; pop r14 ; ret
0x0000000000508d9f : add esp, 0x88 ; pop rbx ; pop rbp ; ret
0x0000000000562aef : add esp, 0x88 ; ret
0x0000000000459f80 : add esp, 0xc8 ; ret
0x000000000053624f : add esp, 0xd8 ; pop rbx ; pop r14 ; ret
0x00000000004ffebd : add esp, 0xd8 ; ret
0x000000000043b6ba : add esp, 0xe8 ; pop rbx ; pop rbp ; ret
0x000000000045bc56 : add esp, 0xf8 ; ret
0x000000000046187e : add esp, 8 ; pop rbx ; pop r14 ; jmp rax
0x00000000004e0d00 : add esp, 8 ; pop rbx ; pop r14 ; jmp rcx
0x00000000004c7605 : add esp, 8 ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; jmp rax
0x000000000040258a : add esp, 8 ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000402486 : add esp, 8 ; pop rbx ; pop r14 ; ret
0x0000000000402e2d : add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000401bb3 : add esp, 8 ; ret
0x00000000005a41ce : add esp, dword ptr [rbp - 0x47] ; pushfq ; outsd dx, dword ptr [rsi] ; ret 0x53a0
0x000000000058d34a : add esp, dword ptr [rbx] ; ret
0x0000000000593b56 : add esp, dword ptr [rcx - 0x5bd6ce24] ; ret
0x00000000004de369 : add esp, dword ptr [rdx + rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000043f6fc : add esp, dword ptr [rsi - 0x3f] ; ret
0x0000000000422797 : add esp, dword ptr [rsi - 0x3f] ; ret 0x6608
0x000000000051d4ec : add esp, eax ; cmp dword ptr [r10], esp ; clc ; add esp, eax ; ret
0x000000000051d579 : add esp, eax ; cmp dword ptr [r10], esp ; cld ; add esp, eax ; ret
0x000000000051d465 : add esp, eax ; cmp dword ptr [r10], esp ; hlt ; add esp, eax ; ret
0x000000000051d355 : add esp, eax ; cmp dword ptr [r10], esp ; in al, dx ; add esp, eax ; ret
0x000000000044f93a : add esp, eax ; ret
0x00000000005345c6 : add esp, eax ; ret 0x55
0x00000000005345b9 : add esp, eax ; ret 0x5d
0x00000000005345ac : add esp, eax ; ret 0x65
0x000000000053459f : add esp, eax ; ret 0x6d
0x0000000000534592 : add esp, eax ; ret 0x75
0x0000000000534585 : add esp, eax ; ret 0x7d
0x00000000005e245d : add esp, ebp ; call rax
0x00000000005e5215 : add esp, ebp ; jmp qword ptr [rax]
0x00000000006145d1 : add esp, esi ; call rbx
0x00000000005acbd8 : add qword ptr [r8 + rcx*8 + 0x23], rdx ; ret 0x52a2
0x000000000054aa32 : add qword ptr [r8 - 1], rcx ; ret
0x00000000005e3819 : add qword ptr [r8], r8 ; sar dl, -0x18 ; jmp qword ptr [rax]
0x0000000000600ba5 : add qword ptr [r8], rax ; and rsp, rbp ; jmp qword ptr [rdi]
0x0000000000600b8d : add qword ptr [r8], rax ; and spl, bpl ; jmp qword ptr [rax]
0x0000000000600d15 : add qword ptr [r8], rax ; cwde ; sub al, -0x14 ; call rcx
0x00000000005e3741 : add qword ptr [r8], rax ; push rax ; ret 0xffe8
0x0000000000600ded : add qword ptr [r8], rax ; xor esp, ebp ; jmp qword ptr [rbx]
0x000000000041ade4 : add qword ptr [rax + 2], r15 ; ret
0x000000000045282e : add qword ptr [rax], r12 ; sub r10, rax ; jmp 0x452845
0x00000000006010cd : add qword ptr [rax], r8 ; xor byte ptr [rsi - 0x14], cl ; call qword ptr [rdx]
0x00000000004bc3e9 : add qword ptr [rax], r8 ; xor eax, eax ; pop rbx ; ret
0x0000000000432d59 : add qword ptr [rax], rax ; add byte ptr [rax + 0x573f93], bh ; ret
0x00000000004bc364 : add qword ptr [rax], rax ; mov rax, rbx ; pop rbx ; ret
0x0000000000440a89 : add qword ptr [rbx], rax ; mov eax, 1 ; pop rbx ; ret
0x0000000000604354 : add qword ptr [rcx], -0x128c5800 ; call qword ptr [rsi]
0x0000000000456510 : add qword ptr [rcx], r8 ; mov qword ptr [rdi], r9 ; ret
0x0000000000440a2b : add qword ptr [rsi], 2 ; mov eax, 1 ; ret
0x0000000000440a5f : add qword ptr [rsi], 4 ; mov eax, 1 ; ret
0x000000000042be8c : add r14b, byte ptr [rax + rbp + 0x5a] ; ret
0x000000000040dc85 : add r15b, byte ptr [rax + 3] ; ret
0x000000000059727a : add r15b, r10b ; ret
0x00000000005eb6f1 : add r8, qword ptr [r8] ; push rax ; sal edi, cl ; call qword ptr [rax]
0x00000000004d8415 : add r8, r9 ; ret 0x310b
0x00000000004bc1b4 : add r8b, bpl ; mov r8d, 0x8948ffff ; ret
0x000000000045740a : add r8b, byte ptr [r8] ; add byte ptr [rax - 1], cl ; ret
0x0000000000611155 : add r8b, byte ptr [r8] ; clc ; xor bl, dh ; call qword ptr [rax]
0x00000000005e7631 : add r8b, byte ptr [r8] ; push rax ; and dh, al ; jmp qword ptr [rax]
0x000000000061076d : add r8b, byte ptr [r8] ; rcr byte ptr [rax] ; call qword ptr [rax]
0x0000000000610f0d : add r8b, byte ptr [r8] ; shr byte ptr [rbx], 1 ; call rdi
0x00000000005e76e9 : add r8b, byte ptr [r8] ; sub byte ptr [rsi], -0x10 ; jmp rax
0x00000000006107e5 : add r8b, byte ptr [r8] ; test al, 0x18 ; call qword ptr [rax]
0x00000000004a7ddb : add r8b, byte ptr [r8] ; xor eax, eax ; pop rbx ; ret
0x000000000061067d : add r8b, byte ptr [rax] ; adc byte ptr [rcx], bl ; call qword ptr [rsi]
0x00000000005e73b1 : add r8b, byte ptr [rax] ; adc sil, al ; call rax
0x0000000000432c57 : add r8b, byte ptr [rax] ; add byte ptr [rax + 0x573ff5], bh ; ret
0x000000000061061d : add r8b, byte ptr [rax] ; add byte ptr [rcx], bl ; call qword ptr [rax]
0x000000000061064d : add r8b, byte ptr [rax] ; add byte ptr [rcx], bl ; call qword ptr [rsi]
0x000000000061102d : add r8b, byte ptr [rax] ; and byte ptr [rdi], ch ; call qword ptr [rax]
0x00000000006106f5 : add r8b, byte ptr [rax] ; clc ; sbb bl, dh ; call qword ptr [rax]
0x00000000004a7d1c : add r8b, byte ptr [rax] ; xor eax, eax ; pop rdx ; ret
0x000000000061076c : add r8b, byte ptr fs:[r8] ; rcr byte ptr [rax] ; call qword ptr [rax]
0x00000000004ddbb6 : add r8b, r13b ; ret
0x000000000049fb0c : add r8d, -8 ; mov eax, r8d ; pop rdx ; ret
0x000000000049faeb : add r8d, 8 ; mov eax, r8d ; pop rdx ; ret
0x0000000000498c4a : add r8d, dword ptr [r8] ; test rax, rax ; je 0x498c5d ; pop rax ; ret
0x00000000005b24c3 : add rax, -0x7a82d1a4 ; ret
0x00000000005073b9 : add rax, 0x19 ; ret
0x0000000000486c7b : add rax, 0x30 ; ret
0x000000000042a033 : add rax, 0x6c ; mov qword ptr [rdi + 0x30], rax ; ret
0x00000000005073bf : add rax, 0xc ; ret
0x00000000004f4bd9 : add rax, qword ptr [rdi] ; ret
0x00000000005d73ff : add rax, r8 ; ret
0x000000000047a14c : add rax, rbx ; pop rbx ; ret
0x00000000004e6846 : add rax, rdx ; pop rdx ; ret
0x00000000004e6e63 : add rax, rdx ; ret
0x000000000040237a : add rax, rdx ; sar rax, 1 ; jne 0x40238d ; pop rbp ; ret
0x0000000000408ae0 : add rbx, qword ptr [rsp] ; jmp 0x408af2
0x0000000000505842 : add rcx, -2 ; test ecx, ecx ; jns 0x505839 ; pop rbx ; ret
0x00000000004358e8 : add rcx, 0x30 ; cmp rdx, rax ; jb 0x4358e9 ; ret
0x00000000004408c4 : add rcx, qword ptr [r8 - 0x7d] ; ret
0x000000000043070a : add rdi, 0x48 ; mov rax, rdi ; ret
0x0000000000540a49 : add rdi, qword ptr [rsi + 0x10] ; mov rax, rdi ; ret
0x00000000004046c5 : add rsi, 0xc ; mov rax, rsi ; ret
0x0000000000402418 : add rsp, 0x10 ; pop rbp ; ret
0x000000000040627d : add rsp, 0x10 ; pop rbx ; pop r14 ; pop r15 ; ret
0x000000000050462e : add rsp, 0x10 ; pop rbx ; pop r14 ; pop rbp ; jmp rax
0x00000000004049c3 : add rsp, 0x10 ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004064ca : add rsp, 0x10 ; pop rbx ; ret
0x000000000051092e : add rsp, 0x18 ; jmp rax
0x0000000000406356 : add rsp, 0x18 ; pop rbx ; pop r14 ; ret
0x0000000000408703 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000427441 : add rsp, 0x18 ; ret
0x000000000055a6df : add rsp, 0x1f8 ; ret
0x000000000048df18 : add rsp, 0x20 ; pop rbx ; pop r14 ; pop r15 ; ret
0x000000000044332b : add rsp, 0x20 ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000406724 : add rsp, 0x20 ; pop rbx ; ret
0x000000000055a20e : add rsp, 0x200 ; pop rbx ; ret
0x00000000004cd543 : add rsp, 0x258 ; ret
0x00000000004866c0 : add rsp, 0x28 ; pop rbx ; pop r14 ; ret
0x00000000004163f8 : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000044168b : add rsp, 0x28 ; ret
0x0000000000456ade : add rsp, 0x30 ; pop rbx ; pop r14 ; pop r15 ; ret
0x000000000043ceaa : add rsp, 0x30 ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000043d53d : add rsp, 0x38 ; pop rbx ; pop r14 ; ret
0x000000000044574d : add rsp, 0x38 ; ret
0x0000000000558ebb : add rsp, 0x40 ; pop rbx ; pop r14 ; pop r15 ; ret
0x00000000004437cd : add rsp, 0x40 ; pop rbx ; ret
0x00000000004a71ad : add rsp, 0x410 ; pop rbx ; ret
0x00000000004adfc7 : add rsp, 0x48 ; pop rbx ; pop r14 ; ret
0x00000000004ae073 : add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000005485b6 : add rsp, 0x48 ; ret
0x00000000004e69ea : add rsp, 0x50 ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004f131f : add rsp, 0x50 ; pop rbx ; ret
0x00000000004861ce : add rsp, 0x58 ; pop rbx ; pop r14 ; ret
0x00000000004e6fcb : add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x000000000040dc3c : add rsp, 0x58 ; ret
0x00000000005524a3 : add rsp, 0x60 ; pop rbx ; pop r14 ; pop r15 ; ret
0x00000000004ce3d7 : add rsp, 0x70 ; pop rbx ; pop r14 ; pop r15 ; ret
0x00000000004355d6 : add rsp, 0x70 ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000054e068 : add rsp, 0x70 ; pop rbx ; ret
0x00000000005307de : add rsp, 0x78 ; pop rbx ; pop r14 ; ret
0x000000000054deef : add rsp, 0x78 ; ret
0x000000000044426e : add rsp, 0x80 ; pop rbx ; ret
0x0000000000508d9e : add rsp, 0x88 ; pop rbx ; pop rbp ; ret
0x0000000000562aee : add rsp, 0x88 ; ret
0x0000000000459f7f : add rsp, 0xc8 ; ret
0x00000000004ffebc : add rsp, 0xd8 ; ret
0x000000000043b6b9 : add rsp, 0xe8 ; pop rbx ; pop rbp ; ret
0x000000000045bc55 : add rsp, 0xf8 ; ret
0x000000000046187d : add rsp, 8 ; pop rbx ; pop r14 ; jmp rax
0x00000000004e0cff : add rsp, 8 ; pop rbx ; pop r14 ; jmp rcx
0x0000000000402485 : add rsp, 8 ; pop rbx ; pop r14 ; ret
0x0000000000402e2c : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000401bb2 : add rsp, 8 ; ret
0x00000000005a0ec1 : add sil, bpl ; and eax, 0xd937d55a ; ret 0x69e4
0x0000000000505c1b : add word ptr [rax - 0x77], cx ; ret 0xc148
0x000000000060288d : add word ptr [rax], ax ; jo 0x602853 ; in al, dx ; call qword ptr [rbx]
0x0000000000602875 : add word ptr [rax], ax ; js 0x60283b ; in al, dx ; call qword ptr [rax]
0x0000000000451927 : aesdeclast xmm2, xmm1 ; movups xmmword ptr [rsi], xmm2 ; ret
0x00000000004519f2 : aesdeclast xmm3, xmm0 ; ret
0x0000000000451ad9 : aesdeclast xmm4, xmm0 ; ret
0x0000000000451bf3 : aesdeclast xmm5, xmm0 ; ret
0x0000000000451dd2 : aesdeclast xmm7, xmm0 ; ret
0x0000000000452031 : aesdeclast xmm9, xmm0 ; ret
0x00000000004518e7 : aesenclast xmm2, xmm1 ; movups xmmword ptr [rsi], xmm2 ; ret
0x0000000000451992 : aesenclast xmm3, xmm0 ; ret
0x0000000000451a69 : aesenclast xmm4, xmm0 ; ret
0x0000000000451b63 : aesenclast xmm5, xmm0 ; ret
0x0000000000451ce2 : aesenclast xmm7, xmm0 ; ret
0x0000000000451f01 : aesenclast xmm9, xmm0 ; ret
0x0000000000617200 : and ah, 0xf4 ; call qword ptr [rsi]
0x00000000006170e0 : and ah, ah ; hlt ; call qword ptr [rsi]
0x000000000059b2a2 : and ah, al ; pushfq ; call 0x7f1c5cd5
0x000000000052753b : and ah, al ; ret
0x000000000053240c : and ah, al ; ret 0x79
0x0000000000527535 : and ah, al ; sar dword ptr [rcx + 0x6e], 0x41 ; and ah, al ; ret
0x00000000005297a6 : and ah, al ; sar dword ptr [rcx + 0x6e], 0x51 ; and ah, al ; ret
0x000000000044c9fc : and ah, al ; sar dword ptr [rdx + 0x6f], 0x5a ; xor ah, al ; ret 0x79
0x0000000000606810 : and ah, bh ; in eax, dx ; call qword ptr [rcx]
0x000000000057d823 : and ah, bh ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000596c14 : and ah, bh ; ret 0xa5d9
0x0000000000594ada : and ah, byte ptr [rsi + rdi*4 - 0x15] ; ret
0x0000000000600b91 : and ah, ch ; jmp qword ptr [rax]
0x00000000005e135d : and ah, dl ; call qword ptr [rax]
0x0000000000609f68 : and al, 0 ; add byte ptr [rax], al ; fld qword ptr fs:[rcx] ; add al, ah ; ret
0x000000000042c3b7 : and al, 0 ; add byte ptr [rax], al ; jmp rax
0x00000000005636af : and al, 0 ; add dword ptr [rax], eax ; add byte ptr [rsi + 0xf], ah ; jmp 0x563683
0x0000000000563713 : and al, 0 ; add dword ptr [rax], eax ; add byte ptr [rsi + 0xf], ah ; jmp 0x5636e7
0x0000000000563815 : and al, 0 ; add dword ptr [rax], eax ; add byte ptr [rsi + 0xf], ah ; jmp 0x5637e9
0x0000000000563cfa : and al, 0 ; add dword ptr [rax], eax ; add byte ptr [rsi + 0xf], ah ; jmp 0x563cce
0x000000000041fbe4 : and al, 0 ; add dword ptr [rax], eax ; add dh, dh ; ret 0xf01
0x0000000000505f03 : and al, 0 ; ror dword ptr [rbx - 0x7ebed7ba], cl ; ret
0x000000000043432d : and al, 0x10 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000534583 : and al, 0x10 ; add esp, eax ; ret 0x7d
0x00000000005072d7 : and al, 0x10 ; add rsp, 0x18 ; ret
0x000000000045f129 : and al, 0x10 ; call rax
0x00000000004b94f5 : and al, 0x10 ; lea r9, qword ptr [rsp + 8] ; call rax
0x00000000004d4cfc : and al, 0x10 ; lea rsp, qword ptr [rsp + 0x18] ; ret
0x000000000047167d : and al, 0x10 ; mov ebp, 1 ; jmp 0x471650
0x000000000047167c : and al, 0x10 ; mov ebp, 1 ; jmp 0x471651
0x0000000000488412 : and al, 0x10 ; mov esi, eax ; call 0x5046d6
0x000000000048fdcb : and al, 0x10 ; mov r8, qword ptr [rsp + 0x18] ; call r12
0x000000000049b0fe : and al, 0x10 ; mov rcx, r13 ; mov r9, rbx ; call rax
0x00000000004e8a43 : and al, 0x10 ; mov rdi, qword ptr [rax + rbp*8] ; mov rsi, r14 ; call rbx
0x00000000004978f2 : and al, 0x10 ; mov rdi, rbx ; call rcx
0x00000000004138b7 : and al, 0x10 ; xor ecx, ecx ; mov rdi, rbx ; call rax
0x00000000004f8539 : and al, 0x14 ; add eax, 0x1480000 ; ret
0x00000000004f302e : and al, 0x14 ; mov edi, 0x5d2b60 ; call 0x53f259
0x0000000000509dd1 : and al, 0x18 ; call 0x4d0398
0x000000000045a01b : and al, 0x18 ; call 0x4e6314
0x000000000048fdd0 : and al, 0x18 ; call r12
0x0000000000435a7d : and al, 0x18 ; call rax
0x000000000055a0ab : and al, 0x18 ; lea rcx, qword ptr [rsp + 0x20] ; call rbx
0x000000000048fd73 : and al, 0x18 ; mov r12, r10 ; call r12
0x00000000004d0583 : and al, 0x18 ; mov r8, rbx ; call r12
0x00000000004f8f8d : and al, 0x18 ; mov rdi, r15 ; call r14
0x000000000041f2f6 : and al, 0x18 ; mov rdi, rbx ; call rax
0x0000000000416270 : and al, 0x18 ; mov rdi, rbx ; call rcx
0x00000000004c5e25 : and al, 0x18 ; mov rdx, r12 ; call rax
0x00000000004d4d01 : and al, 0x18 ; ret
0x0000000000448bf4 : and al, 0x18 ; vpxor xmm8, xmm8, xmm4 ; ret
0x0000000000554ac8 : and al, 0x1c ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc985
0x000000000059ac70 : and al, 0x1e ; sbb dword ptr [rdx + 9], edi ; int1 ; lodsd eax, dword ptr [rsi] ; xlatb ; ret 0x8a8d
0x000000000048e58e : and al, 0x20 ; add byte ptr [rbp + rax + 0x4c], dh ; mov edi, esp ; call rax
0x0000000000534590 : and al, 0x20 ; add esp, eax ; ret 0x75
0x00000000004e4acc : and al, 0x20 ; add rsp, 0x28 ; ret
0x0000000000435b46 : and al, 0x20 ; call rax
0x000000000055a0b0 : and al, 0x20 ; call rbx
0x0000000000481a0e : and al, 0x20 ; lea rsp, qword ptr [rsp + 0x28] ; ret
0x000000000043a5d0 : and al, 0x20 ; mov r13, r8 ; mov r14, r10 ; call rax
0x0000000000554a83 : and al, 0x20 ; mov r13d, 1 ; jmp 0x554a58
0x000000000047f2cf : and al, 0x20 ; mov r8, rbx ; call r10
0x00000000004f9c2d : and al, 0x20 ; mov rdi, rbx ; call rax
0x000000000047f591 : and al, 0x20 ; mov rdi, rbx ; mov rdx, r14 ; call r15
0x000000000055eb96 : and al, 0x20 ; mov rdx, r12 ; call rax
0x000000000053fc58 : and al, 0x20 ; mov rdx, r13 ; call r14
0x00000000005ee32c : and al, 0x21 ; add byte ptr [rax], al ; ror byte ptr [rax], -0x1d ; call qword ptr [rdx]
0x000000000048f4a0 : and al, 0x27 ; pop rax ; add byte ptr [rsi + 2], bh ; pop rbx ; ret
0x0000000000423d29 : and al, 0x28 ; add dword ptr [rax], eax ; add al, ch ; in eax, dx ; ret 1
0x000000000047efdc : and al, 0x28 ; call r14
0x000000000046fd7a : and al, 0x28 ; call rax
0x0000000000435a78 : and al, 0x28 ; mov r8, qword ptr [rsp + 0x18] ; call rax
0x00000000004aa371 : and al, 0x28 ; mov r8, r14 ; call rax
0x00000000004c535d : and al, 0x28 ; mov rcx, rbx ; call r14
0x0000000000481a13 : and al, 0x28 ; ret
0x000000000053459d : and al, 0x30 ; add esp, eax ; ret 0x6d
0x000000000044574b : and al, 0x30 ; add rsp, 0x38 ; ret
0x0000000000420b4d : and al, 0x30 ; call 0x566fb8
0x0000000000489124 : and al, 0x30 ; call rax
0x000000000040cba9 : and al, 0x30 ; mov r8, rbx ; mov r9, r12 ; call rax
0x0000000000467f6d : and al, 0x30 ; mov rdi, rbp ; call 0x4641c7
0x0000000000467f6c : and al, 0x30 ; mov rdi, rbp ; call 0x4641c8
0x0000000000472581 : and al, 0x30 ; mov rsi, rdi ; mov rdx, r15 ; call rcx
0x0000000000540b27 : and al, 0x31 ; div byte ptr [rcx] ; leave ; mov rdi, rbx ; call rax
0x000000000053ed38 : and al, 0x31 ; shr al, cl ; adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rax ; ret
0x000000000048e504 : and al, 0x38 ; call rcx
0x00000000004c53ef : and al, 0x38 ; mov rsi, r13 ; mov rcx, rbx ; call r14
0x00000000004c4f1e : and al, 0x38 ; mov rsi, r15 ; mov rcx, r13 ; call rax
0x000000000047ee62 : and al, 0x38 ; mov rsi, rdi ; mov rdx, rbp ; call r14
0x000000000047f0e2 : and al, 0x38 ; mov rsi, rdi ; mov rdx, rbp ; call r15
0x00000000005345aa : and al, 0x40 ; add esp, eax ; ret 0x65
0x00000000004ad1ea : and al, 0x40 ; call r14
0x00000000004c54df : and al, 0x40 ; call rax
0x00000000004c5015 : and al, 0x40 ; call rbx
0x0000000000467f7a : and al, 0x40 ; mov rdi, rbp ; call 0x4641c7
0x0000000000467f79 : and al, 0x40 ; mov rdi, rbp ; call 0x4641c8
0x000000000047f133 : and al, 0x40 ; mov rdi, rbx ; mov rdx, r15 ; call r14
0x000000000047f096 : and al, 0x40 ; mov rdx, rbp ; call r15
0x000000000061052c : and al, 0x43 ; add al, byte ptr [rax] ; sbb ebx, esi ; call qword ptr [rsi]
0x000000000059a03b : and al, 0x43 ; inc ebp ; jmp rsi
0x000000000040a566 : and al, 0x44 ; mov esi, ebx ; mov r9, r14 ; call rax
0x0000000000442d1d : and al, 0x46 ; call r15
0x00000000004ad6e0 : and al, 0x47 ; mov rsi, rbx ; call rax
0x0000000000549387 : and al, 0x48 ; add esp, 8 ; pop rbx ; pop r14 ; ret
0x000000000043f33c : and al, 0x48 ; lea esi, dword ptr [rsp] ; mov rdi, r12 ; call rbx
0x00000000004ae019 : and al, 0x48 ; mov edi, ebx ; mov rsi, rcx ; mov edx, eax ; call rbp
0x00000000005485a5 : and al, 0x48 ; mov edi, edx ; call rax
0x000000000053c33b : and al, 0x48 ; mov rdx, r13 ; call rbx
0x000000000053c663 : and al, 0x48 ; mov rdx, r13 ; mov rbx, r8 ; call rbx
0x000000000042d73e : and al, 0x48 ; or eax, 0x14 ; mov rdx, rax ; jmp 0x42d752
0x0000000000478740 : and al, 0x49 ; mov edi, ecx ; jmp 0x47875f
0x000000000047873f : and al, 0x49 ; mov edi, ecx ; jmp 0x478760
0x00000000004c3a9c : and al, 0x4c ; mov ecx, ebp ; call rax
0x00000000004adf7a : and al, 0x4c ; mov edi, esi ; mov rsi, rcx ; mov edx, eax ; call rbx
0x000000000043e30d : and al, 0x4c ; mov edi, esp ; call r14
0x0000000000459732 : and al, 0x4c ; mov edi, esp ; call r15
0x000000000043f340 : and al, 0x4c ; mov edi, esp ; call rbx
0x000000000044082e : and al, 0x4c ; mov esi, esi ; call r15
0x00000000004421b5 : and al, 0x4c ; mov esp, dword ptr [rsp + 8] ; mov r9, r12 ; call rax
0x000000000061102c : and al, 0x4e ; add al, byte ptr [rax] ; and byte ptr [rdi], ch ; call qword ptr [rax]
0x00000000004ad7f2 : and al, 0x4f ; mov rsi, rbx ; call rax
0x000000000059c716 : and al, 0x4f ; ret
0x00000000005345b7 : and al, 0x50 ; add esp, eax ; ret 0x5d
0x00000000004d477a : and al, 0x50 ; call r15
0x0000000000457bf4 : and al, 0x50 ; call rax
0x0000000000506c73 : and al, 0x50 ; lea rsp, qword ptr [rsp + 0x58] ; ret
0x00000000004d4659 : and al, 0x50 ; mov r8, r13 ; call r9
0x00000000004d45be : and al, 0x50 ; mov r8, r13 ; mov r14, r9 ; call r14
0x00000000004396cf : and al, 0x50 ; mov rdi, r14 ; call rax
0x0000000000467f60 : and al, 0x50 ; mov rdi, rbp ; call 0x4641c7
0x0000000000467f5f : and al, 0x50 ; mov rdi, rbp ; call 0x4641c8
0x000000000047ee73 : and al, 0x50 ; mov rdx, rbp ; call r14
0x00000000005b18e2 : and al, 0x52 ; xchg eax, edi ; sahf ; or eax, 0xeb00e968 ; ret
0x00000000005aaddf : and al, 0x56 ; ret
0x0000000000432fd2 : and al, 0x58 ; add bl, al ; mov eax, 0x5740d1 ; ret
0x0000000000506c78 : and al, 0x58 ; ret
0x0000000000540c5b : and al, 0x5a ; ret
0x00000000004e9782 : and al, 0x5c ; add byte ptr [rax - 0x77], cl ; ret 0xf3e8
0x0000000000446a66 : and al, 0x5c ; ret 0xacd3
0x00000000004ef148 : and al, 0x5d ; add al, ch ; jo 0x4ef0fe ; idiv bh ; pop rbx ; ret
0x00000000004395a7 : and al, 0x5f ; mov r8d, r12d ; call rax
0x00000000005345c4 : and al, 0x60 ; add esp, eax ; ret 0x55
0x000000000059b3c2 : and al, 0x64 ; jns 0x59b364 ; outsd dx, dword ptr [rsi] ; leave ; ret 0xe867
0x000000000044293d : and al, 0x68 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc085
0x00000000005aecfb : and al, 0x68 ; xchg eax, edi ; ret
0x0000000000602d2c : and al, 0x6b ; add dword ptr [rax], eax ; push rax ; iretd ; in al, dx ; jmp rdx
0x000000000059fbd7 : and al, 0x6d ; ret 0xb37c
0x000000000047df49 : and al, 0x70 ; call r12
0x0000000000411e31 : and al, 0x70 ; mov rsi, rbx ; call r14
0x0000000000596573 : and al, 0x75 ; rol dword ptr [rax + rax*4], -0x49 ; ret
0x0000000000474a05 : and al, 0x78 ; mov rbp, rax ; ret
0x000000000047035d : and al, 0xc ; call rax
0x000000000045c4e6 : and al, 0xc ; mov eax, ebx ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000484e4f : and al, 0xc ; mov esi, 8 ; xor edx, edx ; call rax
0x0000000000438a45 : and al, 0xc ; mov rdi, rbx ; call rax
0x00000000004408c1 : and al, 0xf ; mov dh, 0x4b ; add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000052760a : and al, 0xffffffc4 ; ret
0x000000000052989b : and al, 0xffffffc4 ; sar dword ptr [rcx + 0x6e], 0x51 ; and al, 0xffffffffffffffc4 ; ret
0x000000000047c112 : and al, 0xffffffd3 ; ret
0x00000000004f877e : and al, 0xffffffffffffff80 ; add al, 0 ; add byte ptr [rcx + rcx*4 - 9], cl ; call r12
0x000000000051415e : and al, 0xffffffffffffff80 ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000044392d : and al, 0xffffffffffffff83 ; ret 0x3102
0x0000000000562c50 : and al, 0xffffffffffffff88 ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000513ccb : and al, 0xffffffffffffff88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x62c4
0x000000000047dcef : and al, 0xffffffffffffff88 ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0x8348
0x000000000040752f : and al, 0xffffffffffffff88 ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0x903b
0x000000000053d260 : and al, 0xffffffffffffff90 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x00000000004ba278 : and al, 0xffffffffffffff90 ; add byte ptr [rax], al ; add cl, ch ; ret 0xfff8
0x000000000040396a : and al, 0xffffffffffffff94 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; stc ; call rax
0x000000000061592c : and al, 0xffffffffffffff97 ; add al, byte ptr [rax] ; and byte ptr [rdx - 0xc], ah ; call rcx
0x000000000057e007 : and al, 0xffffffffffffff99 ; pop rbp ; rol dword ptr [rdx - 0x60], 1 ; jg 0x57e025 ; int 0xff
0x00000000005a9534 : and al, 0xffffffffffffff9c ; ret 0xba5c
0x0000000000434473 : and al, 0xffffffffffffffa0 ; add dword ptr [rax], eax ; add byte ptr [rax + 1], cl ; ret
0x00000000005d6f8b : and al, 0xffffffffffffffa0 ; test byte ptr [rsp], ah ; ret
0x000000000060642c : and al, 0xffffffffffffffa2 ; add dword ptr [rax], eax ; mov al, -0x13 ; in eax, dx ; jmp qword ptr [rax]
0x000000000047d515 : and al, 0xffffffffffffffa4 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0x8949
0x00000000005d6f8e : and al, 0xffffffffffffffa4 ; ret
0x00000000005a3fe5 : and al, 0xffffffffffffffa5 ; ret 0x33c5
0x00000000005f712c : and al, 0xffffffffffffffaf ; add byte ptr [rax], al ; sub byte ptr [rcx], -0x18 ; call qword ptr [rsi]
0x00000000004673a5 : and al, 0xffffffffffffffb0 ; add al, byte ptr [rax] ; add byte ptr [rcx], bh ; ret
0x000000000061742c : and al, 0xffffffffffffffb2 ; add al, byte ptr [rax] ; push rax ; in eax, -0xc ; call qword ptr [rsi]
0x00000000005a7e59 : and al, 0xffffffffffffffb2 ; in al, dx ; ret
0x000000000052b45b : and al, 0xffffffffffffffbe ; test dword ptr [rcx], esi ; and al, 0xffffffffffffffc3 ; jge 0x52b478 ; push rbp ; ret
0x00000000005651fe : and al, 0xffffffffffffffbf ; adc byte ptr [rdi], cl ; pop rsi ; add byte ptr [rax - 0x77], cl ; ret 0x94e8
0x000000000044b939 : and al, 0xffffffffffffffc1 ; ret
0x000000000052b45f : and al, 0xffffffffffffffc3 ; jge 0x52b474 ; push rbp ; ret
0x000000000052760b : and al, 0xffffffffffffffc4 ; ret
0x0000000000527605 : and al, 0xffffffffffffffc4 ; sar dword ptr [rcx + 0x6e], 0x41 ; and al, 0xffffffffffffffc4 ; ret
0x000000000052989c : and al, 0xffffffffffffffc4 ; sar dword ptr [rcx + 0x6e], 0x51 ; and al, 0xffffffffffffffc4 ; ret
0x00000000005aae4d : and al, 0xffffffffffffffcb ; movsb byte ptr [rdi], byte ptr [rsi] ; call qword ptr [rdi]
0x000000000049a287 : and al, 0xffffffffffffffd0 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0x000000000047c113 : and al, 0xffffffffffffffd3 ; ret
0x00000000005156aa : and al, 0xffffffffffffffd8 ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], al ; ret 0xc141
0x0000000000596aa2 : and al, 0xffffffffffffffd8 ; xor al, 0x38 ; ret 0xa070
0x0000000000609c2c : and al, 0xffffffffffffffda ; add dword ptr [rax], eax ; loopne 0x609bed ; out dx, al ; call qword ptr [rbx]
0x0000000000499cb6 : and al, 0xffffffffffffffe0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004241d0 : and al, 0xffffffffffffffe0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x48fe
0x00000000005e255d : and al, 0xffffffffffffffe5 ; jmp qword ptr [rax]
0x00000000005e2b3d : and al, 0xffffffffffffffe6 ; call rax
0x00000000004882a4 : and al, 0xffffffffffffffe8 ; jbe 0x488295 ; cld ; dec dword ptr [rax - 0x77] ; ret
0x00000000005f6e71 : and al, 0xffffffffffffffe8 ; jmp qword ptr [rbx]
0x00000000004bbaed : and al, 0xffffffffffffffe8 ; popfq ; cmc ; cli ; dec dword ptr [rax - 0x77] ; ret
0x00000000004c3b27 : and al, 0xffffffffffffffe8 ; ret
0x0000000000487fc2 : and al, 0xffffffffffffffe8 ; sbb byte ptr [rbx + rcx], bl ; add byte ptr [rcx], bh ; ret
0x0000000000423c97 : and al, 0xfffffffffffffff0 ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x348
0x0000000000538c06 : and al, 0xfffffffffffffff3 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000478257 : and al, 0xfffffffffffffff5 ; pop rax ; ret 0x57
0x0000000000421b3d : and al, 0xfffffffffffffff6 ; ret
0x0000000000561c3e : and al, 0xfffffffffffffff8 ; ret
0x00000000005a8183 : and al, 0xfffffffffffffff9 ; adc byte ptr [rsi + 0x55], dh ; stc ; ret
0x000000000047ff29 : and al, 0xfffffffffffffffd ; jmp 0x47ff8c
0x0000000000510051 : and al, 0xffffffffffffffff ; ret
0x00000000005e2ee1 : and al, 1 ; add al, dh ; mov ah, bh ; jmp qword ptr [rax]
0x00000000004196ad : and al, 1 ; add byte ptr [rax], al ; ret
0x000000000060e60d : and al, 2 ; add byte ptr [rax - 0x45], dl ; jmp rsi
0x00000000004de2ea : and al, 2 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000431fd9 : and al, 3 ; add byte ptr [rax], al ; mov eax, 0x5734cd ; ret
0x0000000000431fc7 : and al, 3 ; add byte ptr [rax], al ; mov eax, 0x573507 ; ret
0x000000000042b4d7 : and al, 4 ; mov eax, ecx ; pop rdx ; ret
0x00000000004620f5 : and al, 4 ; pop rdx ; ret
0x0000000000410c02 : and al, 8 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000442eb3 : and al, 8 ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000422d02 : and al, 8 ; call 0x4cefd4
0x0000000000422d01 : and al, 8 ; call 0x4cefd5
0x000000000048fe3e : and al, 8 ; call r10
0x000000000048ff5f : and al, 8 ; call r14
0x00000000004b94fa : and al, 8 ; call rax
0x00000000004a7b46 : and al, 8 ; call rbx
0x00000000005506aa : and al, 8 ; mov ecx, r15d ; call rax
0x000000000048ff2d : and al, 8 ; mov r14, r9 ; call r14
0x000000000053fae1 : and al, 8 ; mov r8, rbp ; call rax
0x00000000004421b9 : and al, 8 ; mov r9, r12 ; call rax
0x000000000043ea37 : and al, 8 ; mov rdi, r13 ; call r15
0x000000000043e3b2 : and al, 8 ; mov rdi, r15 ; call r14
0x000000000045f530 : and al, 8 ; mov rdx, r12 ; call rax
0x0000000000564ee3 : and al, 8 ; ret
0x0000000000459697 : and al, 8 ; xor edi, edi ; call rax
0x0000000000540ccb : and al, 8 ; xor esi, esi ; xor ecx, ecx ; mov rdi, r12 ; call rax
0x0000000000572a80 : and al, bl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ch ; ret
0x00000000005e8cac : and al, bl ; int1 ; jmp qword ptr [rax]
0x000000000059437c : and al, byte ptr [rax - 0x3e] ; int1 ; or al, byte ptr [rsp + rsi*2] ; pop rdi ; ret
0x00000000004b4b4e : and al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004fbdba : and al, byte ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000432167 : and al, byte ptr [rbx] ; add byte ptr [rax], al ; mov eax, 0x573611 ; ret
0x00000000005fe4fd : and al, byte ptr [rcx] ; add al, dl ; in al, -0x16 ; call qword ptr [rdi]
0x0000000000432405 : and al, byte ptr [rcx] ; add byte ptr [rax], al ; mov eax, 0x5738ae ; ret
0x00000000004d94f7 : and al, byte ptr [rdi + rax] ; mov byte ptr [rdx + rax], r8b ; pop rbx ; ret
0x00000000004f2c55 : and al, byte ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005293d9 : and al, byte ptr [rdx + 0x10] ; add esp, eax ; ret
0x00000000005294ce : and al, byte ptr [rdx + 0x14] ; add esp, eax ; ret
0x00000000005295c4 : and al, byte ptr [rdx + 0x18] ; add esp, eax ; ret
0x00000000005296ba : and al, byte ptr [rdx + 0x1c] ; add esp, eax ; ret
0x00000000005297b7 : and al, byte ptr [rdx + 0x20] ; add esp, eax ; ret
0x00000000005298ad : and al, byte ptr [rdx + 0x24] ; add esp, eax ; ret
0x00000000005299a3 : and al, byte ptr [rdx + 0x28] ; add esp, eax ; ret
0x0000000000529a99 : and al, byte ptr [rdx + 0x2c] ; add esp, eax ; ret
0x0000000000529b8f : and al, byte ptr [rdx + 0x30] ; add esp, eax ; ret
0x0000000000529c84 : and al, byte ptr [rdx + 0x34] ; add esp, eax ; ret
0x0000000000529d7a : and al, byte ptr [rdx + 0x38] ; add esp, eax ; ret
0x00000000005292e3 : and al, byte ptr [rdx + 0xc] ; add esp, eax ; ret
0x00000000005290f7 : and al, byte ptr [rdx + 4] ; add esp, eax ; ret
0x00000000005291ed : and al, byte ptr [rdx + 8] ; add esp, eax ; ret
0x000000000051d3e1 : and al, byte ptr [rdx - 0x10] ; add esp, eax ; ret
0x000000000051d359 : and al, byte ptr [rdx - 0x14] ; add esp, eax ; ret
0x000000000051d2d1 : and al, byte ptr [rdx - 0x18] ; add esp, eax ; ret
0x000000000051d249 : and al, byte ptr [rdx - 0x1c] ; add esp, eax ; ret
0x000000000051d1c1 : and al, byte ptr [rdx - 0x20] ; add esp, eax ; ret
0x000000000051d139 : and al, byte ptr [rdx - 0x24] ; add esp, eax ; ret
0x000000000051d0b1 : and al, byte ptr [rdx - 0x28] ; add esp, eax ; ret
0x000000000051d02a : and al, byte ptr [rdx - 0x2c] ; add esp, eax ; ret
0x000000000051cfa2 : and al, byte ptr [rdx - 0x30] ; add esp, eax ; ret
0x000000000051cf1a : and al, byte ptr [rdx - 0x34] ; add esp, eax ; ret
0x000000000051ce92 : and al, byte ptr [rdx - 0x38] ; add esp, eax ; ret
0x000000000051ce0a : and al, byte ptr [rdx - 0x3c] ; add esp, eax ; ret
0x000000000051d469 : and al, byte ptr [rdx - 0xc] ; add esp, eax ; ret
0x000000000051d57d : and al, byte ptr [rdx - 4] ; add esp, eax ; ret
0x000000000051d4f0 : and al, byte ptr [rdx - 8] ; add esp, eax ; ret
0x000000000060e4bd : and al, byte ptr [rdx] ; add byte ptr [rax - 0x49], dl ; jmp qword ptr [rax]
0x0000000000432bbb : and al, byte ptr [rdx] ; add byte ptr [rax], al ; mov eax, 0x573f0e ; ret
0x0000000000432ba9 : and al, byte ptr [rdx] ; add byte ptr [rax], al ; mov eax, 0x573f1c ; ret
0x0000000000432b97 : and al, byte ptr [rdx] ; add byte ptr [rax], al ; mov eax, 0x573f2a ; ret
0x0000000000432b85 : and al, byte ptr [rdx] ; add byte ptr [rax], al ; mov eax, 0x573f38 ; ret
0x0000000000432c81 : and al, byte ptr [rdx] ; add byte ptr [rax], al ; mov eax, 0x573fc4 ; ret
0x0000000000529004 : and al, byte ptr [rdx] ; add esp, eax ; ret
0x00000000005af8d2 : and al, byte ptr [rsi + 0x65] ; jle 0x5af8d8 ; ret
0x000000000046a0e9 : and al, byte ptr [rsi] ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call 0x4e6318
0x0000000000498276 : and al, ch ; hlt ; sub bh, ch ; dec dword ptr [rax - 0x77] ; ret
0x00000000004c769a : and al, ch ; nop ; call 0xffffffffc3d676a8
0x00000000004b1e30 : and al, ch ; or cl, byte ptr [rbp - 0x7cb70005] ; ret
0x000000000054dc0c : and al, ch ; ret
0x000000000049daf2 : and al, ch ; sbb byte ptr [rbx + 5], bl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005e7585 : and al, dh ; call qword ptr [rax]
0x00000000005e7535 : and al, dh ; jmp qword ptr [rax]
0x00000000005e7575 : and al, dh ; jmp rax
0x00000000005e6a24 : and al, dh ; out dx, al ; call rax
0x00000000005e9cdc : and bh, bh ; cmc ; jmp qword ptr [rax]
0x0000000000495e55 : and bh, bh ; ret
0x00000000005eaf85 : and bh, dh ; jmp rax
0x00000000005af0e3 : and bh, dh ; ret
0x00000000004d4c2f : and bl, 0xf0 ; mov rdx, r8 ; jmp 0x4d4c45
0x00000000005eaa54 : and bl, al ; idiv bh ; sbb byte ptr [rbx], 3 ; add byte ptr [rax], dh ; ret
0x00000000004b1d7f : and bl, bh ; dec dword ptr [rax - 0x77] ; ret
0x00000000005e5974 : and bl, ch ; in al, dx ; jmp rax
0x00000000004beb4a : and bl, dh ; movq qword ptr [rdi + 0x30], mm5 ; ret
0x0000000000449782 : and bl, dh ; ret
0x00000000005a0a44 : and bl, dl ; mov esi, 0x525d329b ; ret
0x000000000058c3d0 : and byte ptr [r10 + 0x509b04db], spl ; ret
0x000000000048243e : and byte ptr [r13 - 0x77], r9b ; push rbp ; sub byte ptr [rcx - 0x77], cl ; ret
0x000000000052d19b : and byte ptr [r14 + 0xf], 0xfe ; ret
0x00000000004972b5 : and byte ptr [r15], r9b ; adc dword ptr [rdi + 0x10], eax ; movups xmmword ptr [rdi], xmm0 ; ret
0x000000000054341b : and byte ptr [r8 + 1], r15b ; ret
0x0000000000546cd8 : and byte ptr [r8 + r8], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000054088e : and byte ptr [r8 - 0x77], cl ; ret 0x148
0x0000000000561c1f : and byte ptr [r8 - 0x77], r9b ; push rdi ; sub byte ptr [rbx + 0x41], bl ; pop rsi ; ret
0x000000000054b3fa : and byte ptr [r8 - 0x77], r9b ; sbb byte ptr [r9 + r9*4 + 0xf], r8b ; ret
0x000000000044819b : and byte ptr [rax + 0x29], cl ; ret
0x000000000045fe0d : and byte ptr [rax + 0x39], cl ; ret
0x00000000005411d3 : and byte ptr [rax + 1], bh ; ret
0x000000000046f28a : and byte ptr [rax + 1], cl ; fimul dword ptr [rax + 1] ; ret 0x14c
0x000000000045fa96 : and byte ptr [rax + 1], cl ; ret
0x00000000005133ec : and byte ptr [rax + 9], cl ; ret
0x0000000000513626 : and byte ptr [rax + 9], cl ; ret 0x62c4
0x0000000000564c85 : and byte ptr [rax + 9], cl ; sal bl, 1 ; ret
0x0000000000546cd9 : and byte ptr [rax + rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x00000000004d7d6f : and byte ptr [rax + rax], cl ; add cl, al ; ret
0x00000000004d7de4 : and byte ptr [rax + rax], cl ; add cl, al ; ret 0x310b
0x00000000004a51f1 : and byte ptr [rax + rbx*2], dh ; ret
0x00000000005e265c : and byte ptr [rax - 0x1b], bl ; call rax
0x0000000000594800 : and byte ptr [rax - 0x20d39572], ch ; rcl dword ptr [rdi] ; push rsp ; ret 0xf22c
0x0000000000481a0f : and byte ptr [rax - 0x73], cl ; and al, 0x28 ; ret
0x000000000041626c : and byte ptr [rax - 0x73], cl ; push rsp ; and al, 0x18 ; mov rdi, rbx ; call rcx
0x00000000004cc2d2 : and byte ptr [rax - 0x75], cl ; adc byte ptr [r8 - 0x7d], cl ; ret
0x000000000047f592 : and byte ptr [rax - 0x77], cl ; fisttp word ptr [rcx + rcx*4 - 0xe] ; call r15
0x0000000000470e48 : and byte ptr [rax - 0x77], cl ; fucompi st(0) ; call qword ptr [rax]
0x0000000000561c20 : and byte ptr [rax - 0x77], cl ; push rdi ; sub byte ptr [rbx + 0x41], bl ; pop rsi ; ret
0x000000000046ace5 : and byte ptr [rax - 0x77], cl ; ret
0x000000000054088f : and byte ptr [rax - 0x77], cl ; ret 0x148
0x00000000004b6924 : and byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000054b3fb : and byte ptr [rax - 0x77], cl ; sbb byte ptr [r9 + r9*4 + 0xf], r8b ; ret
0x0000000000480e63 : and byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0x17] ; ret 3
0x000000000049aad2 : and byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0x18] ; ret
0x0000000000437936 : and byte ptr [rax - 0x7d], cl ; ret
0x000000000046614d : and byte ptr [rax - 0x7d], cl ; ret 0x4820
0x00000000005552a1 : and byte ptr [rax - 0x7d], cl ; ret 0x66f0
0x000000000046cd46 : and byte ptr [rax - 0x7d], cl ; ret 0x8320
0x000000000046cd04 : and byte ptr [rax - 0x7d], cl ; ret 0xf20
0x0000000000562470 : and byte ptr [rax - 9], cl ; adc byte ptr [rcx + 1], cl ; ret 0x1148
0x000000000056251c : and byte ptr [rax - 9], cl ; sbb byte ptr [rax + 1], cl ; ret
0x000000000056246f : and byte ptr [rax - 9], r9b ; adc byte ptr [rcx + 1], cl ; ret 0x1148
0x000000000056251b : and byte ptr [rax - 9], r9b ; sbb byte ptr [rax + 1], cl ; ret
0x0000000000597278 : and byte ptr [rax], 0x45 ; add bh, dl ; ret
0x00000000005ea1f4 : and byte ptr [rax], 0xf6 ; call qword ptr [rax]
0x00000000005ee245 : and byte ptr [rax], al ; add al, bl ; in al, -0x1e ; jmp qword ptr [rsi]
0x0000000000551572 : and byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8148
0x0000000000495441 : and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 0x50e
0x00000000005d43b8 : and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x5d45
0x0000000000530718 : and byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000045ccee : and byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000480e51 : and byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000548e50 : and byte ptr [rax], al ; add byte ptr [rax], dh ; xchg eax, ecx ; push rsp ; add byte ptr [rax - 0x39], cl ; ret
0x00000000004101f5 : and byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; mov edx, r14d ; call rbx
0x0000000000551794 : and byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x000000000048e58f : and byte ptr [rax], al ; je 0x48e59f ; mov rdi, r12 ; call rax
0x00000000005064b2 : and byte ptr [rax], al ; ror dword ptr [rbx - 0x7ebef7ba], cl ; ret
0x0000000000543432 : and byte ptr [rax], al ; setne al ; movzx eax, al ; ret
0x00000000004b956c : and byte ptr [rax], bl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000556a9a : and byte ptr [rax], cl ; sub byte ptr [rax], dl ; ret
0x00000000004c934c : and byte ptr [rax], dh ; add byte ptr [rax], al ; xor eax, eax ; pop rdx ; ret
0x00000000004b934c : and byte ptr [rax], dh ; add dword ptr [rax], eax ; xor eax, eax ; pop rdx ; ret
0x00000000004ff2d9 : and byte ptr [rax], dl ; jne 0x4ff30d ; pop r9 ; jmp rax
0x00000000004455aa : and byte ptr [rbp + 0x31], cl ; ret 0xc0c1
0x00000000004e45b2 : and byte ptr [rbp + 9], al ; fadd qword ptr [rcx - 0x77] ; ret
0x00000000005b3659 : and byte ptr [rbp + 9], dh ; ret
0x00000000005e54d4 : and byte ptr [rbp - 0x14], 0xff ; cwde ; ret
0x00000000005e54c4 : and byte ptr [rbp - 0x14], ah ; jmp qword ptr [rax - 0x3d]
0x00000000005b544c : and byte ptr [rbp - 0x46], ch ; xchg eax, edx ; ret 0x9784
0x000000000048243f : and byte ptr [rbp - 0x77], cl ; push rbp ; sub byte ptr [rcx - 0x77], cl ; ret
0x00000000004f8f38 : and byte ptr [rbp - 0x77], cl ; ret 0x8949
0x0000000000597279 : and byte ptr [rbp], al ; xlatb ; ret
0x000000000048df1b : and byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; ret
0x000000000044332e : and byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000043dce8 : and byte ptr [rbx + 0x41], bl ; pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000005e40fc : and byte ptr [rbx - 0x16], dl ; call rax
0x00000000005f9990 : and byte ptr [rbx - 0x17], al ; jmp qword ptr [rax]
0x00000000004c637b : and byte ptr [rbx - 0x3d], bl ; nop ; mov qword ptr [rdi + 8], rsi ; ret
0x00000000005b3d1f : and byte ptr [rbx - 0x5f], bl ; ret
0x000000000054283c : and byte ptr [rbx - 0x76b7000c], dh ; ret 0x8548
0x00000000004fe742 : and byte ptr [rbx - 0x76ebdbbc], cl ; ret
0x00000000005e9454 : and byte ptr [rbx - 0xd], cl ; call rax
0x00000000004bbf9e : and byte ptr [rbx - 0xf3dba4], cl ; ret
0x0000000000618710 : and byte ptr [rbx], al ; cmc ; call qword ptr [rdi]
0x0000000000513fae : and byte ptr [rcx + 0x11], cl ; ret 0x62c4
0x0000000000452830 : and byte ptr [rcx + 0x29], cl ; ret 0xaeb
0x0000000000505715 : and byte ptr [rcx + 0x39], cl ; ret 0xe575
0x000000000049f710 : and byte ptr [rcx + 0x58], 0 ; cmovne rax, rcx ; ret
0x00000000005a8bf2 : and byte ptr [rcx + 0x7a], ah ; xchg byte ptr [rdi], dh ; lahf ; ret
0x0000000000561ea2 : and byte ptr [rcx + 1], cl ; ret 0x1148
0x000000000053fc59 : and byte ptr [rcx + rcx*4 - 0x16], cl ; call r14
0x000000000055eb97 : and byte ptr [rcx + rcx*4 - 0x1e], cl ; call rax
0x0000000000448d2b : and byte ptr [rcx + rcx*4 - 0x30], cl ; ret
0x00000000005b1bbd : and byte ptr [rcx - 0x3d], al ; hlt ; ret 0x64d9
0x0000000000554a84 : and byte ptr [rcx - 0x43], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x554a57
0x000000000057d736 : and byte ptr [rcx - 0x67], ch ; mov ebx, 0x4a5081d ; ret
0x000000000045260e : and byte ptr [rcx - 0x77], cl ; ret 0xceb
0x0000000000428fcc : and byte ptr [rcx - 0xa], al ; ret
0x000000000044d3ea : and byte ptr [rcx - 9], al ; ret 0x800
0x00000000004eed1d : and byte ptr [rcx], ah ; ret
0x00000000005e2e29 : and byte ptr [rcx], al ; add byte ptr [rax], ah ; je 0x5e2e1c ; jmp rax
0x000000000042c396 : and byte ptr [rcx], al ; add byte ptr [rax], al ; mov rax, rdx ; pop rdx ; ret
0x00000000004f1c0c : and byte ptr [rcx], al ; int1 ; dec dword ptr [rax - 0x77] ; ret
0x00000000004c0f72 : and byte ptr [rcx], bl ; ret
0x00000000004a34c0 : and byte ptr [rcx], cl ; ret 0x5389
0x00000000004a363c : and byte ptr [rcx], cl ; ret 0x8b48
0x0000000000540d71 : and byte ptr [rcx], dh ; div byte ptr [rcx] ; leave ; mov rdi, rbx ; call r14
0x00000000005e8fbc : and byte ptr [rcx], dh ; jmp rax
0x000000000041f63a : and byte ptr [rdi + rcx + 0x45], cl ; loopne 0x41f63c ; ret 0x4c02
0x00000000004336f3 : and byte ptr [rdi + rdx*2], al ; ret
0x00000000005eaed4 : and byte ptr [rdi + rsi*8], dl ; jmp rax
0x00000000005e4884 : and byte ptr [rdi], ah ; jmp 0x5e488a
0x00000000004f2f21 : and byte ptr [rdi], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000611030 : and byte ptr [rdi], ch ; call qword ptr [rax]
0x0000000000463e74 : and byte ptr [rdi], cl ; adc dword ptr [rax + 0x10], eax ; movups xmmword ptr [rax], xmm0 ; pop rdx ; ret
0x00000000005466ab : and byte ptr [rdi], cl ; adc dword ptr [rbx + 0x10], eax ; movups xmmword ptr [rbx], xmm0 ; pop rbx ; ret
0x00000000004972b6 : and byte ptr [rdi], cl ; adc dword ptr [rdi + 0x10], eax ; movups xmmword ptr [rdi], xmm0 ; ret
0x000000000048d355 : and byte ptr [rdi], cl ; test dword ptr [rsi], eax ; add dword ptr [rax], eax ; add dh, dh ; ret 0xf08
0x00000000005b0a22 : and byte ptr [rdx + 0x44], dl ; outsb dx, byte ptr [rsi] ; xchg eax, ebp ; ret
0x000000000058c3d1 : and byte ptr [rdx + 0x509b04db], ah ; ret
0x0000000000594e0c : and byte ptr [rdx + 0x5f], 0x83 ; or eax, 0x471cc98e ; ret
0x000000000055195b : and byte ptr [rdx + rax - 0x77], dh ; clc ; ret
0x0000000000608ab0 : and byte ptr [rdx - 0x12], ch ; jmp qword ptr [rdi]
0x0000000000615930 : and byte ptr [rdx - 0xc], ah ; call rcx
0x00000000005e9094 : and byte ptr [rdx - 0xe], bh ; jmp rax
0x00000000005ebf0c : and byte ptr [rdx - 8], ah ; call qword ptr [rax]
0x0000000000610a90 : and byte ptr [rdx], 0xf3 ; call qword ptr [rdx]
0x000000000057d68c : and byte ptr [rdx], ah ; ret
0x00000000004de689 : and byte ptr [rdx], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005e6b69 : and byte ptr [rdx], al ; add byte ptr [rax - 7], dh ; out dx, al ; jmp qword ptr [rax]
0x00000000005661cc : and byte ptr [rdx], bh ; std ; dec dword ptr [rax - 0x77] ; ret
0x00000000005e831c : and byte ptr [rdx], bl ; int1 ; call qword ptr [rax]
0x0000000000431b07 : and byte ptr [rdx], cl ; add byte ptr [rax], al ; mov eax, 0x573167 ; ret
0x00000000005e5a04 : and byte ptr [rdx], cl ; in eax, dx ; call rax
0x000000000045ed19 : and byte ptr [rdx], dh ; add ecx, dword ptr [rax - 1] ; ret
0x000000000047a296 : and byte ptr [rip + 0x5ac03100], al ; ret
0x0000000000518a67 : and byte ptr [rsi + 0x45], 0xf ; outsd dx, dword ptr [rsi] ; ret
0x0000000000519265 : and byte ptr [rsi + 0x45], 0xf ; outsd dx, dword ptr [rsi] ; ret 0x4166
0x000000000052d19c : and byte ptr [rsi + 0xf], 0xfe ; ret
0x000000000051949b : and byte ptr [rsi + 0xf], ah ; out dx, eax ; ret 0x4566
0x000000000051949a : and byte ptr [rsi + 0xf], spl ; out dx, eax ; ret 0x4566
0x00000000005f9c00 : and byte ptr [rsi - 0x17], cl ; call qword ptr [rcx]
0x00000000005d6f88 : and byte ptr [rsp], al ; and al, 0xffffffffffffffa0 ; test byte ptr [rsp], ah ; ret
0x00000000006174c0 : and ch, 0xf4 ; call qword ptr [rsi]
0x00000000004bed1f : and ch, al ; clc ; ja 0x4bed1c ; ret
0x00000000005e6104 : and ch, al ; in eax, dx ; jmp qword ptr [rax]
0x00000000005e691c : and ch, bl ; out dx, al ; call rax
0x00000000005a9905 : and ch, byte ptr [rax - 0x7f] ; push rbx ; ret 0x1e72
0x000000000059997f : and ch, byte ptr [rbp - 0x43] ; ret
0x00000000005b5430 : and ch, byte ptr [rbx] ; ret 0xc604
0x00000000005271f4 : and ch, byte ptr [rdx + 0x10] ; add esp, eax ; ret
0x00000000005272c5 : and ch, byte ptr [rdx + 0x14] ; add esp, eax ; ret
0x0000000000527396 : and ch, byte ptr [rdx + 0x18] ; add esp, eax ; ret
0x0000000000527467 : and ch, byte ptr [rdx + 0x1c] ; add esp, eax ; ret
0x000000000052753f : and ch, byte ptr [rdx + 0x20] ; add esp, eax ; ret
0x000000000052760f : and ch, byte ptr [rdx + 0x24] ; add esp, eax ; ret
0x00000000005276e0 : and ch, byte ptr [rdx + 0x28] ; add esp, eax ; ret
0x00000000005277b1 : and ch, byte ptr [rdx + 0x2c] ; add esp, eax ; ret
0x0000000000527882 : and ch, byte ptr [rdx + 0x30] ; add esp, eax ; ret
0x0000000000527953 : and ch, byte ptr [rdx + 0x34] ; add esp, eax ; ret
0x0000000000527a24 : and ch, byte ptr [rdx + 0x38] ; add esp, eax ; ret
0x0000000000527123 : and ch, byte ptr [rdx + 0xc] ; add esp, eax ; ret
0x0000000000526f81 : and ch, byte ptr [rdx + 4] ; add esp, eax ; ret
0x0000000000527052 : and ch, byte ptr [rdx + 8] ; add esp, eax ; ret
0x0000000000526eb2 : and ch, byte ptr [rdx] ; add esp, eax ; ret
0x00000000005293d2 : and ch, byte ptr [rsi + 0x10] ; add esp, eax ; ret
0x00000000005294c7 : and ch, byte ptr [rsi + 0x14] ; add esp, eax ; ret
0x00000000005295bd : and ch, byte ptr [rsi + 0x18] ; add esp, eax ; ret
0x00000000005296b3 : and ch, byte ptr [rsi + 0x1c] ; add esp, eax ; ret
0x00000000005297b0 : and ch, byte ptr [rsi + 0x20] ; add esp, eax ; ret
0x00000000005298a6 : and ch, byte ptr [rsi + 0x24] ; add esp, eax ; ret
0x000000000052999c : and ch, byte ptr [rsi + 0x28] ; add esp, eax ; ret
0x0000000000529a92 : and ch, byte ptr [rsi + 0x2c] ; add esp, eax ; ret
0x0000000000529b88 : and ch, byte ptr [rsi + 0x30] ; add esp, eax ; ret
0x0000000000529c7d : and ch, byte ptr [rsi + 0x34] ; add esp, eax ; ret
0x0000000000529d73 : and ch, byte ptr [rsi + 0x38] ; add esp, eax ; ret
0x00000000005292dc : and ch, byte ptr [rsi + 0xc] ; add esp, eax ; ret
0x00000000005290f0 : and ch, byte ptr [rsi + 4] ; add esp, eax ; ret
0x00000000005291e6 : and ch, byte ptr [rsi + 8] ; add esp, eax ; ret
0x0000000000593ceb : and ch, byte ptr [rsi - 0x61dc46d2] ; ret
0x0000000000528ffe : and ch, byte ptr [rsi] ; add esp, eax ; ret
0x000000000044ba21 : and cl, al ; ret 0x105
0x000000000058dd78 : and cl, bh ; ret 0x5ca4
0x00000000004b14d4 : and cl, byte ptr [rax - 0x77] ; ret
0x000000000042ebbe : and cl, byte ptr [rax - 0x7f] ; ret
0x00000000005125aa : and cl, byte ptr [rcx + 0x21] ; ret 0x894c
0x00000000004137e1 : and cl, byte ptr [rcx - 0x7d] ; jmp qword ptr [rcx]
0x000000000042c763 : and cl, ch ; add dword ptr [rax], 0x41ee894c ; call rdi
0x0000000000561580 : and cl, ch ; push 0x5a ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000006176c0 : and dh, 0xf4 ; jmp qword ptr [rdi]
0x00000000005e2afd : and dh, ah ; jmp rax
0x00000000005e7685 : and dh, al ; call qword ptr [rax]
0x00000000005e7635 : and dh, al ; jmp qword ptr [rax]
0x00000000005e7675 : and dh, al ; jmp rax
0x0000000000610a91 : and dh, bl ; call qword ptr [rdx]
0x0000000000547cdb : and dh, bl ; dec dword ptr [rax - 0x77] ; ret
0x00000000005ea1f5 : and dh, dh ; call qword ptr [rax]
0x00000000005ea1e5 : and dh, dh ; jmp rax
0x0000000000414642 : and dh, dh ; ret
0x0000000000413cfd : and dh, dh ; ret 0x7420
0x0000000000597a74 : and dl, ch ; push r12 ; sti ; ret 0x4e7d
0x000000000049ed4a : and dl, dh ; add al, byte ptr [rax] ; xor eax, eax ; pop rbx ; ret
0x00000000005d7100 : and dword ptr [r8 + 0x61], esp ; ret
0x00000000005d7101 : and dword ptr [rax + 0x61], esp ; ret
0x0000000000561e43 : and dword ptr [rax + 1], ecx ; ret
0x0000000000405c44 : and dword ptr [rax + 2], 0 ; add al, ch ; ret 0xfac
0x000000000057e289 : and dword ptr [rax - 0x1f], edx ; mov ebp, 0x81e24ef1 ; ret
0x00000000004db6aa : and dword ptr [rax - 0x77], ecx ; fucompi st(0) ; ret 0xfffd
0x0000000000487da0 : and dword ptr [rax - 0x7d], ecx ; ret
0x00000000005ee32d : and dword ptr [rax], eax ; add al, al ; or bl, ah ; call qword ptr [rdx]
0x0000000000432682 : and dword ptr [rax], ecx ; add byte ptr [rax], al ; mov eax, 0x573e19 ; ret
0x00000000005b7122 : and dword ptr [rbp + rbx*2 + 0x23], eax ; je 0x5b718f ; cmp eax, dword ptr [rdi + 0x63] ; ret
0x00000000005980d8 : and dword ptr [rbx + 0x68], 0xc3a8e9a7 ; ret
0x00000000005b2a0f : and dword ptr [rbx], edi ; jns 0x5b2a47 ; ret 0x958e
0x000000000051264d : and dword ptr [rcx + 0x21], ecx ; ret
0x0000000000561cee : and dword ptr [rcx + 1], ecx ; ret 0x1149
0x000000000049476b : and dword ptr [rcx - 0x76b70006], edi ; ret
0x000000000049faea : and dword ptr [rcx - 0x7d], eax ; ror byte ptr [rax], 0x44 ; mov eax, eax ; pop rdx ; ret
0x00000000005fe32d : and dword ptr [rcx], eax ; add al, ah ; fsub st(2), st(0) ; call qword ptr [rsi]
0x000000000048ef01 : and dword ptr [rcx], eax ; add byte ptr [rax], al ; call rax
0x00000000004e8d13 : and dword ptr [rcx], eax ; ret
0x0000000000593c07 : and dword ptr [rcx], ecx ; imul ebx, esp, 0xe7048453 ; jmp qword ptr [rdi]
0x0000000000561e58 : and dword ptr [rcx], esi ; fisttp dword ptr [rcx + 1] ; ret 0x1148
0x00000000004d0406 : and dword ptr [rdi + 0x10], eax ; ret
0x0000000000560594 : and dword ptr [rdi + 0x18], esi ; mov eax, 1 ; ret
0x0000000000461052 : and dword ptr [rdi + 0x20], esi ; ret
0x00000000004b7b52 : and dword ptr [rdi + 0x2c], esi ; ret
0x00000000004d0436 : and dword ptr [rdi + 0x70], eax ; ret
0x0000000000454ccb : and dword ptr [rdi + 0xe], ecx ; add byte ptr [rax - 0x77], cl ; ret
0x000000000048f1cb : and dword ptr [rdx - 0x76b7fff6], ebp ; ret
0x00000000005e6be1 : and dword ptr [rdx], eax ; add al, ah ; add edi, ebp ; jmp qword ptr [rax]
0x0000000000444599 : and dword ptr [rdx], eax ; add byte ptr [rax], al ; mov byte ptr [rdi], dl ; ret
0x00000000005ae0c0 : and dword ptr [rdx], ebx ; ret
0x00000000005d73ca : and dword ptr [rip - 0x795d5bda], ecx ; bswap esp ; ret
0x00000000005d6bc8 : and dword ptr [rip - 0x795dd3d3], ecx ; movsb byte ptr [rdi], byte ptr es:[rsi] ; ret
0x00000000005a9a55 : and dword ptr [rsi + 0x2d], 0x6d38f5e ; ret
0x0000000000457283 : and dword ptr [rsi + 0x48000002], 0xffffffff ; ret 0xc239
0x00000000005991a8 : and dword ptr [rsi + 0x51], edx ; test eax, 0x8965bf ; jmp qword ptr [rax]
0x00000000005a61f2 : and dword ptr [rsi + 0x7d], 0xffffffce ; ret
0x000000000045957b : and dword ptr [rsi - 0x76b70002], eax ; ret
0x000000000057d89b : and dword ptr [rsi], esp ; jl 0x57d8c2 ; sub al, 0xf ; cmc ; ret 0xf961
0x0000000000595876 : and dword ptr [rsi], esp ; not dword ptr [rdi] ; jmp 0xffffffff9dce1b2e
0x0000000000596aaa : and eax, 0x14b58fab ; lahf ; ret 0x61c0
0x0000000000564ac2 : and eax, 0x1f ; ret
0x00000000005128db : and eax, 0x20 ; shr eax, 5 ; ret
0x000000000053a944 : and eax, 0x24448b48 ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000059d901 : and eax, 0x2a73ddc9 ; ret
0x00000000005554e0 : and eax, 0x30 ; movdqu xmmword ptr [rdx], xmm3 ; ret
0x00000000005e6c89 : and eax, 0x31700002 ; out dx, eax ; jmp rax
0x00000000005d7339 : and eax, 0x3aca6164 ; clc ; ret
0x00000000005d6b3b : and eax, 0x3acaf2f8 ; loopne 0x5d6b2c ; ret
0x00000000005d6b3a : and eax, 0x3acaf2f8 ; loopne 0x5d6b2d ; ret
0x00000000005ab55d : and eax, 0x3bcb0a9e ; popfq ; ret
0x00000000005a50c0 : and eax, 0x44bfe209 ; ret 0x62a8
0x0000000000435b41 : and eax, 0x7c8b4800 ; and al, 0x20 ; call rax
0x00000000004e94f9 : and eax, 0x8408b48 ; add rsp, 0x38 ; ret
0x0000000000442107 : and eax, 0x89000000 ; ret
0x000000000053e493 : and eax, 0x89480000 ; ret
0x000000000043e810 : and eax, 0x89480002 ; ret
0x00000000004eb15f : and eax, 0x89480006 ; ret
0x00000000004338ef : and eax, 0x9b0abe8 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000057cda4 : and eax, 0x9d5648f7 ; push rsi ; pop rsi ; call rax
0x00000000005b6a8f : and eax, 0xa88e31fc ; ret 0x8326
0x0000000000599688 : and eax, 0xa9ff5259 ; sbb al, 0x34 ; ret
0x00000000005a60e5 : and eax, 0xb0a61ee3 ; ret 0xb9c9
0x00000000004caa07 : and eax, 0xb9005b8e ; ret 0
0x00000000005b1ce1 : and eax, 0xc9590a5f ; std ; ret
0x00000000005a53f9 : and eax, 0xd89c9c97 ; adc al, 5 ; ret
0x00000000005a0ec5 : and eax, 0xd937d55a ; ret 0x69e4
0x00000000005ae6a6 : and eax, 0xe3f9eec3 ; ret
0x000000000059dae9 : and eax, 0xe862bc33 ; int1 ; ret
0x0000000000411579 : and eax, 1 ; or eax, ecx ; ret
0x00000000005485ce : and eax, 1 ; pop rdx ; ret
0x000000000046b592 : and eax, 1 ; ret
0x000000000046afaf : and eax, 2 ; or eax, ebx ; mov dword ptr [rsi + 0x14], eax ; pop rbx ; ret
0x000000000055bd09 : and eax, 2 ; xor eax, 3 ; pop rbx ; ret
0x00000000004b3e39 : and eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000057d23e : and eax, dword ptr [rbp + 0x40] ; ret 0x8def
0x0000000000464319 : and eax, dword ptr [rbp - 0x76f08b40] ; ret 0xe283
0x00000000004b87f5 : and eax, dword ptr [rdi + 0x44] ; ret
0x0000000000555709 : and eax, dword ptr [rdx - 0x5e9c3755] ; ret 0xc700
0x00000000005d6903 : and eax, eax ; ret
0x00000000005e3395 : and eax, ebp ; call qword ptr [rax]
0x000000000050e74d : and eax, ebp ; std ; ret
0x000000000050d234 : and eax, edi ; inc dword ptr [rbp + 0x5b027ec0] ; ret
0x000000000042c0f4 : and eax, edx ; mov dword ptr [rcx + 0x6c], eax ; pop rdx ; ret
0x00000000005e75c5 : and eax, esi ; call rax
0x000000000057e614 : and eax, esi ; cmp eax, 0xc3c0bdae ; ret 0x4958
0x000000000060d6b1 : and eax, esi ; jmp qword ptr [rdx]
0x00000000005a840e : and eax, esi ; xchg eax, edi ; ret 0x27ba
0x000000000059ef53 : and eax, esp ; ret 0xbd61
0x000000000057827c : and ebp, 0xdadc3ae5 ; ret 0x3437
0x00000000005a03d1 : and ebp, 0xffffffb9 ; ret 0xae59
0x00000000005b483c : and ebp, dword ptr [rbx + 0x18] ; ret
0x000000000048f3b3 : and ebp, eax ; cmp dword ptr [rax], eax ; ret
0x000000000043cfa8 : and ebp, eax ; ret 0x2de
0x00000000005a449f : and ebp, edi ; cmpsd dword ptr [rsi], dword ptr [rdi] ; xlatb ; ret 0x779c
0x00000000004f10f9 : and ebp, edi ; hlt ; dec dword ptr [rax - 0x77] ; ret
0x00000000005a510f : and ebp, edi ; pop rdi ; xchg eax, ecx ; loop 0x5a5126 ; jbe 0x5a50e2 ; ret
0x00000000005a510f : and ebp, edi ; pop rdi ; xchg eax, ecx ; loop 0x5a5127 ; jbe 0x5a50e3 ; ret
0x000000000048dfeb : and ebx, 0xc0310003 ; pop rdx ; ret
0x000000000046e299 : and ebx, dword ptr [rdi - 1] ; dec dword ptr [rax - 0x77] ; ret 0x3145
0x00000000005c36d0 : and ebx, eax ; pop rsp ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret
0x00000000005e4835 : and ebx, ebp ; call qword ptr [rax]
0x000000000045035c : and ebx, ebx ; faddp st(4) ; cmp r11d, ebp ; ret
0x0000000000551564 : and ecx, 1 ; mov eax, ecx ; pop rbx ; ret
0x0000000000551b44 : and ecx, 1 ; mov eax, ecx ; ret
0x0000000000564abd : and ecx, 7 ; shr eax, cl ; and eax, 0x1f ; ret
0x0000000000429aec : and ecx, 8 ; dec ecx ; mov eax, ecx ; ret
0x00000000005a4288 : and ecx, dword ptr [rax - 0x56] ; ret 0x426d
0x000000000053fd66 : and ecx, dword ptr [rax - 0x75] ; push rbx ; or byte ptr [rax - 0x7d], cl ; ret
0x000000000042ef0a : and ecx, dword ptr [rax - 0x7f] ; ret
0x00000000005b26d6 : and ecx, dword ptr [rcx + 0xd61a436] ; cmc ; mov bl, -0x32 ; ret
0x00000000005a22fb : and ecx, dword ptr [rdi + rdi*8 + 0x1a265aa7] ; jns 0x5a22c6 ; ret
0x00000000004e6221 : and ecx, dword ptr [rsp + rsi] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005e83ad : and ecx, esi ; jmp qword ptr [rax]
0x00000000005ab533 : and edi, dword ptr [rax + 0x502b7c77] ; jmp qword ptr [rdi]
0x000000000059f8c3 : and edi, dword ptr [rbx - 0x5f9755c0] ; scasd eax, dword ptr [rdi] ; ret
0x000000000055a539 : and edi, dword ptr [rdx - 0x76b70008] ; ret
0x0000000000447626 : and edi, dword ptr [rip + 0xb954cee] ; cli ; ret
0x0000000000449211 : and edi, ebp ; fadd st(4), st(0) ; ret
0x0000000000533714 : and edi, ebp ; ret 0x3149
0x0000000000533497 : and edi, ebp ; ret 0x314d
0x000000000057ca8a : and edi, edi ; loop 0x57cae6 ; pop rdi ; ja 0x57ca6c ; ret
0x0000000000464cb6 : and edi, edi ; ret
0x00000000004c1e6d : and edi, edx ; dec dword ptr [rax - 0x77] ; ret
0x00000000005a7a86 : and edi, edx ; wait ; call rsp
0x00000000005b2493 : and edx, dword ptr [rax] ; mov cl, -0x37 ; jp 0x5b2516 ; ret 0x12c9
0x0000000000578933 : and edx, dword ptr [rbp + rbx*8 + 0x163453c2] ; ret 0x56c2
0x000000000057d7ed : and edx, dword ptr [rdi + 6] ; mov al, -0x38 ; scasd eax, dword ptr [rdi] ; cdq ; xchg eax, ecx ; ret
0x00000000004d0410 : and esi, dword ptr [rdi + 0x10] ; mov eax, esi ; ret
0x0000000000461060 : and esi, dword ptr [rdi + 0x20] ; mov eax, esi ; ret
0x00000000004d0440 : and esi, dword ptr [rdi + 0x70] ; mov eax, esi ; ret
0x0000000000429f92 : and esi, dword ptr [rdi] ; mov dword ptr [rdi], esi ; mov eax, esi ; ret
0x000000000048f2a3 : and esi, eax ; cmp dword ptr [rax], eax ; ret
0x00000000006070d1 : and esi, ebp ; call qword ptr [rax]
0x00000000005ea245 : and esi, esi ; call qword ptr [rax]
0x00000000005ea235 : and esi, esi ; jmp rax
0x00000000005b6c2e : and esp, dword ptr [rax + 0x503b8b0a] ; ret
0x0000000000541569 : and esp, dword ptr [rax + rdi*8 + 0x1b8ff] ; add byte ptr [rax], al ; ret
0x0000000000446352 : and esp, dword ptr [rbp + 0x46] ; and esp, dword ptr [rbx] ; popfq ; ret
0x0000000000446356 : and esp, dword ptr [rbp - 0x63] ; ret
0x0000000000446351 : and esp, dword ptr [rbx] ; and r12d, dword ptr gs:[rbx] ; popfq ; ret
0x0000000000446355 : and esp, dword ptr [rbx] ; popfq ; ret
0x0000000000600ba9 : and esp, ebp ; jmp qword ptr [rdi]
0x000000000057d9a6 : and esp, ebp ; sub dword ptr [rbp + 0x15], eax ; ret 0xefdf
0x00000000005f5021 : and esp, edi ; jmp qword ptr [rsi]
0x00000000005f2de1 : and esp, esi ; jmp qword ptr [rdi]
0x00000000004d0405 : and qword ptr [rdi + 0x10], rax ; ret
0x0000000000560593 : and qword ptr [rdi + 0x18], rsi ; mov eax, 1 ; ret
0x00000000004d0435 : and qword ptr [rdi + 0x70], rax ; ret
0x000000000045035b : and r11d, ebx ; faddp st(4) ; cmp r11d, ebp ; ret
0x000000000052753a : and r12b, al ; ret
0x00000000005297a5 : and r12b, r8b ; sar dword ptr [rcx + 0x6e], 0x51 ; and ah, al ; ret
0x0000000000446350 : and r12d, dword ptr [rbx] ; and r12d, dword ptr gs:[rbx] ; popfq ; ret
0x0000000000446354 : and r12d, dword ptr [rbx] ; popfq ; ret
0x0000000000446353 : and r12d, dword ptr gs:[rbx] ; popfq ; ret
0x0000000000449210 : and r15d, ebp ; fadd st(4), st(0) ; ret
0x0000000000533713 : and r15d, ebp ; ret 0x3149
0x0000000000533496 : and r15d, ebp ; ret 0x314d
0x00000000005554df : and r8, 0x30 ; movdqu xmmword ptr [rdx], xmm3 ; ret
0x00000000004d94f6 : and r8b, byte ptr [rdi + rax] ; mov byte ptr [rdx + rax], r8b ; pop rbx ; ret
0x000000000048d1ab : and r8d, 1 ; ret
0x00000000005d6902 : and r8d, eax ; ret
0x0000000000435b40 : and rax, 0x7c8b4800 ; and al, 0x20 ; call rax
0x0000000000561c75 : and rax, 1 ; ret
0x0000000000555708 : and rax, qword ptr [rdx - 0x5e9c3755] ; ret 0xc700
0x000000000042c0f3 : and rax, rdx ; mov dword ptr [rcx + 0x6c], eax ; pop rdx ; ret
0x0000000000600ba8 : and rsp, rbp ; jmp qword ptr [rdi]
0x0000000000600b90 : and spl, bpl ; jmp qword ptr [rax]
0x000000000045282a : bswap ebx ; lea rcx, qword ptr [rcx + rax + 0x20] ; sub r10, rax ; jmp 0x452849
0x000000000059eaf3 : bswap edi ; xor eax, 0x85c16712 ; ret 0x349e
0x00000000005d7295 : bswap esp ; ret
0x0000000000596dce : bt dword ptr [rax - 9], -0x75 ; ret
0x0000000000478910 : bt ecx, edi ; jb 0x47891e ; xor eax, eax ; ret
0x0000000000479bd0 : bt ecx, edi ; jb 0x479bde ; xor eax, eax ; ret
0x00000000004788d1 : bt edx, ecx ; jb 0x4788e0 ; xor eax, eax ; pop rdx ; ret
0x0000000000479b91 : bt edx, ecx ; jb 0x479ba0 ; xor eax, eax ; pop rdx ; ret
0x000000000047890f : bt rcx, rdi ; jb 0x47891f ; xor eax, eax ; ret
0x0000000000479bcf : bt rcx, rdi ; jb 0x479bdf ; xor eax, eax ; ret
0x00000000004788d0 : bt rdx, rcx ; jb 0x4788e1 ; xor eax, eax ; pop rdx ; ret
0x0000000000479b90 : bt rdx, rcx ; jb 0x479ba1 ; xor eax, eax ; pop rdx ; ret
0x00000000004d27d2 : call 0x100fbbe9
0x00000000004d280e : call 0x100fbc25
0x00000000005adb2e : call 0x1159ed6c
0x00000000005fb5a8 : call 0x115f9f83
0x00000000005f3f38 : call 0x125f25f3
0x000000000060b7a8 : call 0x1260a6d6
0x0000000000611d58 : call 0x126110c9
0x00000000004e2362 : call 0x1491acaf
0x00000000006125a8 : call 0x1761193c
0x0000000000617038 : call 0x17616523
0x0000000000617338 : call 0x17616824
0x00000000005f9188 : call 0x185f7aab
0x0000000000523639 : call 0x196f871
0x00000000005e3746 : call 0x1a7b851
0x00000000005e6fd0 : call 0x205e7210
0x00000000005ef6b8 : call 0x225eda88
0x0000000000616d18 : call 0x226161d9
0x00000000005ec398 : call 0x275ea504
0x00000000005d6bc7 : call 0x2c8a78f6
0x000000000059fde6 : call 0x2f44c6f9
0x0000000000435242 : call 0x303b36
0x00000000005e9380 : call 0x305e964f
0x00000000005ea288 : call 0x305ea58f
0x000000000044d8d6 : call 0x3349b55
0x000000000044d945 : call 0x3349bc4
0x000000000044dac9 : call 0x3349d48
0x000000000044db3c : call 0x3349dbb
0x000000000044dcbb : call 0x3349f3a
0x000000000044dd2f : call 0x3349fae
0x000000000044debe : call 0x334a13d
0x000000000044df36 : call 0x334a1b5
0x0000000000403e7e : call 0x39c7d4
0x00000000004aa8d9 : call 0x3f336a2d
0x00000000004793cd : call 0x401c67
0x00000000005490f3 : call 0x401cb7
0x00000000005537bd : call 0x401d34
0x0000000000415c65 : call 0x401f42
0x00000000004258a8 : call 0x401f47
0x0000000000545ed8 : call 0x402172
0x0000000000405b92 : call 0x404676
0x000000000047c5b4 : call 0x40f4f24d
0x000000000047c70a : call 0x40f4f3a3
0x0000000000405167 : call 0x411372
0x000000000042feed : call 0x42c1f2
0x0000000000419dec : call 0x4360c2
0x0000000000423d2e : call 0x440022
0x0000000000545317 : call 0x4415f2
0x00000000004e8a48 : call 0x45139d
0x000000000054a52e : call 0x456822
0x000000000055078e : call 0x459ef6
0x00000000004fe8bc : call 0x460f46
0x0000000000405271 : call 0x461562
0x000000000054598d : call 0x461c22
0x0000000000467f42 : call 0x4641c2
0x00000000004c3924 : call 0x46aaa7
0x00000000004b1944 : call 0x46ab07
0x00000000004b1914 : call 0x46ab47
0x000000000046ed0f : call 0x46b012
0x000000000047279c : call 0x46b016
0x000000000043ed93 : call 0x46b092
0x000000000046f06b : call 0x46b322
0x00000000004df0b4 : call 0x46b372
0x00000000004701ea : call 0x46c472
0x00000000004cd3a1 : call 0x48ef48
0x00000000004031d3 : call 0x48f3e2
0x0000000000447bb4 : call 0x48f3e6
0x00000000004cffe4 : call 0x48f3e7
0x00000000004a9dba : call 0x490d1300
0x0000000000561a6d : call 0x49181bbe
0x00000000005641c3 : call 0x49184314
0x000000000041a3d9 : call 0x496682
0x00000000004e0951 : call 0x4972b7
0x00000000004fa3f5 : call 0x497617
0x000000000051159f : call 0x4a139eef
0x00000000004db6ae : call 0x4b7902
0x00000000004bc4c3 : call 0x4b8782
0x000000000049e61a : call 0x4ca862
0x000000000049e62f : call 0x4ca8a2
0x000000000049e698 : call 0x4ca8e2
0x000000000049e683 : call 0x4ca8f2
0x000000000049e6ad : call 0x4ca902
0x000000000049e6c2 : call 0x4ca912
0x000000000049e6d7 : call 0x4ca932
0x00000000004200c5 : call 0x4cc372
0x000000000042597d : call 0x4cc376
0x00000000004636fa : call 0x4cc377
0x00000000005613fe : call 0x4cd6a2
0x0000000000422d04 : call 0x4cefd2
0x00000000004f3f15 : call 0x4d01b2
0x00000000004abe0b : call 0x4d01b7
0x0000000000434155 : call 0x4d0392
0x0000000000509dd3 : call 0x4d0396
0x00000000004341a3 : call 0x4d03f2
0x00000000004e0cba : call 0x4d03f7
0x00000000004d8c49 : call 0x4d8447
0x00000000004dc6fe : call 0x4d8f17
0x00000000004e6743 : call 0x4e2a42
0x00000000004e542d : call 0x4e4e06
0x00000000004b9d25 : call 0x4e5f62
0x000000000045a01d : call 0x4e6312
0x0000000000551407 : call 0x4e6317
0x000000000049d44e : call 0x4e6318
0x000000000047bbc3 : call 0x4e7ff6
0x000000000047bd42 : call 0x4e8042
0x00000000004272a2 : call 0x4e80f8
0x00000000004fd21b : call 0x4e9492
0x00000000004fd21b : call 0x4e9496
0x00000000004ed3fc : call 0x4e96d2
0x000000000054d50c : call 0x4e97d2
0x000000000054df72 : call 0x4ea252
0x00000000004d78f8 : call 0x4f3b12
0x0000000000483e45 : call 0x5004c7
0x000000000040460b : call 0x500902
0x0000000000488416 : call 0x5046d2
0x00000000005e7768 : call 0x505e79c5
0x000000000050eaa6 : call 0x50ad82
0x000000000043cf62 : call 0x539182
0x00000000004fd6e1 : call 0x539982
0x000000000054bd75 : call 0x539b86
0x000000000055d6d4 : call 0x539be6
0x0000000000489f5d : call 0x539be7
0x00000000004f3035 : call 0x53f252
0x00000000004ecbce : call 0x558ed2
0x000000000046dd05 : call 0x5618b6
0x00000000004669d4 : call 0x562ca2
0x0000000000466ce5 : call 0x564ad7
0x0000000000420b4f : call 0x566fb6
0x0000000000426e63 : call 0x5683b6
0x00000000005969f7 : call 0x64ef692d
0x00000000005b356e : call 0x661db8d1
0x0000000000578715 : call 0x6c736719
0x0000000000507867 : call 0x71339b0
0x00000000005a6577 : call 0x771cb15f
0x00000000005556b5 : call 0x785e196e
0x000000000047eaa3 : call 0x78b72c7
0x0000000000568c43 : call 0x79c1467
0x000000000059b2a5 : call 0x7f1c5cd2
0x0000000000478546 : call 0x90a215d
0x000000000044d88d : call 0xc3a9b0c
0x000000000044da80 : call 0xc3a9cff
0x000000000044dc72 : call 0xc3a9ef1
0x000000000044de75 : call 0xc3aa0f4
0x000000000044d92e : call 0xe3d9bad
0x000000000044da9e : call 0xe3d9d1d
0x000000000044db25 : call 0xe3e9da4
0x000000000044dc90 : call 0xe3e9f0f
0x000000000044dd18 : call 0xe3f9f97
0x000000000044de93 : call 0xe3fa112
0x000000000044d8ab : call 0xe409b2a
0x000000000044df1f : call 0xe40a19e
0x000000000044d859 : call 0xf319ad8
0x000000000044da4c : call 0xf319ccb
0x000000000044dc3e : call 0xf319ebd
0x000000000044de3c : call 0xf31a0bb
0x00000000005e27f0 : call 0xffffffff805e2901
0x00000000005954ba : call 0xffffffff848116e3
0x00000000004f5260 : call 0xffffffff8511ee77
0x0000000000440bbd : call 0xffffffff8a14ce47
0x00000000005e3df0 : call 0xffffffffb05e3f63
0x00000000005eb068 : call 0xffffffffb05eb3a7
0x00000000005053a6 : call 0xffffffffb7602bb3
0x00000000005e4540 : call 0xffffffffc05e46d1
0x000000000045347e : call 0xffffffffc2ce758b
0x0000000000453bbe : call 0xffffffffc2ce7ccb
0x00000000004d4d41 : call 0xffffffffc2d69a4e
0x00000000004d4d8e : call 0xffffffffc2d69a9b
0x00000000004d4de4 : call 0xffffffffc2d69af1
0x00000000004d4e3a : call 0xffffffffc2d69b47
0x00000000004d4e8f : call 0xffffffffc2d69b9c
0x00000000004d4ee5 : call 0xffffffffc2d69bf2
0x00000000004d4f3b : call 0xffffffffc2d69c48
0x00000000004d4f91 : call 0xffffffffc2d69c9e
0x00000000005aa46b : call 0xffffffffc2ea9029
0x000000000042cdea : call 0xffffffffc342cdf5
0x0000000000431ddd : call 0xffffffffc3437522
0x0000000000432e2c : call 0xffffffffc3438572
0x000000000046a9b1 : call 0xffffffffc3470161
0x000000000046b591 : call 0xffffffffc348961d
0x00000000004a55f1 : call 0xffffffffc34aae71
0x00000000004b874b : call 0xffffffffc34b8754
0x00000000004e1e41 : call 0xffffffffc34e7a12
0x00000000004e33e1 : call 0xffffffffc34e8fc0
0x0000000000539817 : call 0xffffffffc35b2164
0x000000000040ad91 : call 0xffffffffc369ad9a
0x00000000004e14d4 : call 0xffffffffc3775ced
0x00000000004e14de : call 0xffffffffc3775cf7
0x00000000004e15cf : call 0xffffffffc3775de8
0x00000000004e15d9 : call 0xffffffffc3775df2
0x00000000004e1565 : call 0xffffffffc3775e7e
0x00000000004e16ca : call 0xffffffffc3775ee3
0x00000000004e16d4 : call 0xffffffffc3775eed
0x00000000004e1660 : call 0xffffffffc3775f79
0x00000000004e17c5 : call 0xffffffffc3775fde
0x00000000004e17cf : call 0xffffffffc3775fe8
0x00000000004e175b : call 0xffffffffc3776074
0x00000000004e19a6 : call 0xffffffffc37761bf
0x00000000004e1ab3 : call 0xffffffffc37762cc
0x00000000004e1a1f : call 0xffffffffc3776338
0x00000000004e1a29 : call 0xffffffffc3776342
0x000000000040ad63 : call 0xffffffffc3c9ad6c
0x00000000004aa8dc : call 0xffffffffc3ceb823
0x00000000004c769d : call 0xffffffffc3d676a5
0x00000000004df7ce : call 0xffffffffc3d73bdf
0x00000000005aa145 : call 0xffffffffc3da3024
0x0000000000556aa5 : call 0xffffffffc4190049
0x00000000005b770e : call 0xffffffffc42300de
0x00000000005b0a05 : call 0xffffffffc4570890
0x0000000000602938 : call 0xffffffffc46015fd
0x0000000000603908 : call 0xffffffffc4602621
0x00000000005eac58 : call 0xffffffffd05eaf86
0x00000000005f35f8 : call 0xffffffffd35f1c61
0x00000000005afeb1 : call 0xffffffffd501a4f4
0x00000000006099e8 : call 0xffffffffd76088a0
0x00000000005a5f39 : call 0xffffffffda4429e1
0x0000000000579b8f : call 0xffffffffdc1a5772
0x0000000000579b8e : call 0xffffffffdc1a5773
0x0000000000579d8f : call 0xffffffffdc1a5972
0x0000000000579d8e : call 0xffffffffdc1a5973
0x000000000057a08f : call 0xffffffffdc1a5c72
0x000000000057a08e : call 0xffffffffdc1a5c73
0x00000000005acc9a : call 0xffffffffdcf3ad37
0x0000000000616cc8 : call 0xffffffffe461617f
0x000000000057d7d1 : call 0xffffffffe4ff2d59
0x00000000005f5ca8 : call 0xffffffffe75f442e
0x00000000004668d8 : call 0xffffffffe927f228
0x00000000004669d0 : call 0xffffffffe927f320
0x000000000055078d : call 0xfffffffff0ec6581
0x0000000000569329 : call qword ptr [r12 + rbx*8]
0x00000000005aeead : call qword ptr [r14]
0x00000000005e2837 : call qword ptr [rax]
0x00000000005969f9 : call qword ptr [rbp - 0x46eeb69c]
0x0000000000417d8d : call qword ptr [rbx]
0x000000000040f6b0 : call qword ptr [rcx]
0x000000000041bb69 : call qword ptr [rdi]
0x000000000057e2f5 : call qword ptr [rdx]
0x00000000004b0104 : call qword ptr [rip + 0x37c276]
0x0000000000419572 : call qword ptr [rip - 0x7cfa8c]
0x00000000005975ea : call qword ptr [rsi - 0x1f1a046d]
0x0000000000419577 : call qword ptr [rsi]
0x000000000056932a : call qword ptr [rsp + rbx*8]
0x0000000000610d39 : call qword ptr es:[rbx]
0x000000000040e8ee : call r10
0x00000000004a1428 : call r11
0x0000000000405051 : call r12
0x000000000040bce2 : call r14
0x000000000040b252 : call r15
0x0000000000461d86 : call r8
0x000000000047e2cd : call r9
0x00000000004023dd : call rax
0x00000000004101b3 : call rbx
0x000000000040ac0a : call rcx
0x000000000040b253 : call rdi
0x000000000040e8ef : call rdx
0x000000000040bce3 : call rsi
0x0000000000405052 : call rsp
0x000000000059c354 : cdq ; adc al, -0x23 ; ret 0x8c0e
0x0000000000454ec3 : cdq ; adc byte ptr [rcx], cl ; add byte ptr [rax - 0x77], cl ; ret
0x000000000040262d : cdq ; add al, byte ptr [rax] ; ret
0x00000000004ad703 : cdq ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000060ded1 : cdq ; call qword ptr [rbx]
0x0000000000541135 : cdq ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000005a04c7 : cdq ; cld ; stosb byte ptr [rdi], al ; sub esp, ebx ; or ebx, dword ptr [rbx] ; ret
0x0000000000458845 : cdq ; cli ; dec dword ptr [rax - 0x75] ; add byte ptr [rax - 1], cl ; ret
0x00000000005b70aa : cdq ; fnstsw dword ptr [rsi - 0x35] ; ret 0x5f2d
0x00000000004e82ef : cdq ; int1 ; dec dword ptr [rax - 0x77] ; ret
0x00000000005a7c8d : cdq ; jmp 0x5a7c55
0x00000000004c61c3 : cdq ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x0000000000593363 : cdq ; mov bh, 0x2d ; mov ch, 0x27 ; ret 0x2237
0x00000000005a9cd7 : cdq ; mov cl, 0x67 ; ret
0x000000000057d738 : cdq ; mov ebx, 0x4a5081d ; ret
0x00000000005a81c7 : cdq ; mov ebx, 0x88335561 ; ret
0x00000000005a5729 : cdq ; out dx, al ; jbe 0x5a573f ; ret 0x6dd1
0x00000000005a5728 : cdq ; out dx, al ; jbe 0x5a5740 ; ret 0x6dd1
0x000000000057e008 : cdq ; pop rbp ; rol dword ptr [rdx - 0x60], 1 ; jg 0x57e024 ; int 0xff
0x000000000058b692 : cdq ; pop rdx ; pop rsi ; out 0x6b, eax ; push rbp ; stc ; ret 0x98f0
0x00000000005564b6 : cdq ; pushfq ; ret 0x2fc2
0x00000000005b5a1d : cdq ; rcr byte ptr [rdi], -3 ; sub ch, cl ; in al, dx ; ret
0x0000000000579b78 : cdq ; ret
0x00000000004f53df : cdq ; ret 0x6348
0x0000000000597c27 : cdq ; ret 0x66eb
0x000000000059713d : cdq ; ret 0xef10
0x000000000055c6ff : cdq ; sti ; pop rbp ; add byte ptr [rcx - 0x48], al ; ret 0
0x00000000005a87e8 : cdq ; sub esi, dword ptr [rbx - 0x50] ; mov ah, -0x54 ; ret
0x000000000057d7f3 : cdq ; xchg eax, ecx ; ret
0x000000000046aa64 : cdqe ; movzx eax, byte ptr [rax + 0x57a800] ; ret
0x000000000042c109 : cdqe ; pop rdx ; ret
0x0000000000564c70 : cdqe ; ret
0x000000000060b2e8 : clc ; adc ch, bh ; call rdx
0x00000000004f0b61 : clc ; adc eax, 0x89483e75 ; fucompi st(0) ; ret
0x00000000005d4fa0 : clc ; adc edi, eax ; not byte ptr [rax + 0x6e73eef] ; ret
0x000000000060d248 : clc ; add al, -0x10 ; jmp qword ptr [rdi]
0x00000000005e7370 : clc ; add al, byte ptr [r8] ; rcl byte ptr [rcx], -0x10 ; call qword ptr [rax]
0x00000000005e72a8 : clc ; add al, byte ptr [rax] ; jo 0x5e72ad ; out dx, eax ; call qword ptr [rax]
0x000000000049cb07 : clc ; add al, byte ptr [rax] ; xor eax, eax ; pop rdx ; ret
0x00000000005e2509 : clc ; add byte ptr [rax], al ; nop ; adc ah, ch ; call qword ptr [rax]
0x00000000005e2360 : clc ; add byte ptr [rax], al ; shr dl, -0x1c ; jmp qword ptr [rax]
0x00000000004e8da8 : clc ; add cl, byte ptr [rax + 0x29] ; ret
0x000000000045ccb9 : clc ; add dword ptr [rax + 0x19], ecx ; fisttp dword ptr [rax + 9] ; ret
0x000000000051d4f2 : clc ; add esp, eax ; ret
0x00000000005eb6f0 : clc ; add r8, qword ptr [r8] ; push rax ; sal edi, cl ; call qword ptr [rax]
0x00000000004f2c54 : clc ; and al, byte ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005eb9de : clc ; call qword ptr [rax]
0x00000000004638a6 : clc ; call rax
0x00000000005e2508 : clc ; clc ; add byte ptr [rax], al ; nop ; adc ah, ch ; call qword ptr [rax]
0x00000000005e9bf5 : clc ; cmc ; jmp rax
0x00000000005eb1a0 : clc ; cmp dword ptr [rbx], eax ; add al, al ; jl 0x5eb1a5 ; jmp qword ptr [rax]
0x00000000005e3498 : clc ; cmp eax, dword ptr [rcx] ; add al, dl ; cmp al, ch ; call qword ptr [rax]
0x0000000000539812 : clc ; cmp esi, r8d ; jl 0x539809 ; mov dword ptr [rdi], r8d ; ret
0x000000000046b3f0 : clc ; cmp rax, rdx ; jae 0x46b3d9 ; mov eax, r8d ; ret
0x00000000005412a3 : clc ; dec dword ptr [rax - 0x77] ; fucompi st(0) ; ret
0x000000000054a9cf : clc ; dec dword ptr [rax - 0x77] ; fucompi st(3) ; ret
0x00000000004773ee : clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000004793d0 : clc ; dec dword ptr [rax - 0x7d] ; ret
0x00000000005ebdae : clc ; dec dword ptr [rax] ; add ax, word ptr [rax] ; push rax ; clc ; jmp qword ptr [rax]
0x00000000005ec0be : clc ; dec dword ptr [rax] ; jno 0x5ec0cf ; add al, dh ; jo 0x5ec0c8 ; jmp qword ptr [rax]
0x00000000005ebe36 : clc ; dec dword ptr [rax] ; push 0x55800003 ; clc ; jmp qword ptr [rax]
0x00000000005425dc : clc ; dec dword ptr [rcx + 0x5e415be8] ; pop rbp ; ret
0x00000000004f5256 : clc ; dec dword ptr [rdi] ; xchg eax, ebp ; ret
0x00000000005ec186 : clc ; dec eax ; jae 0x5ec197 ; add byte ptr [rax], al ; ja 0x5ec190 ; jmp rax
0x00000000005ec146 : clc ; dec eax ; jb 0x5ec157 ; add al, ah ; jae 0x5ec150 ; jmp rax
0x00000000005ebffe : clc ; dec eax ; outsb dx, byte ptr [rsi] ; add eax, dword ptr [rax] ; push rax ; outsd dx, dword ptr [rsi] ; clc ; jmp rax
0x00000000005eb98e : clc ; dec eax ; pop rax ; add eax, dword ptr [rax] ; add edi, eax ; jmp rax
0x00000000005e5b40 : clc ; fild word ptr [rcx] ; add byte ptr [rax], dl ; sub ebp, ebp ; call qword ptr [rax]
0x00000000005e9525 : clc ; hlt ; call rax
0x00000000005ebec0 : clc ; imul eax, dword ptr [rbx], 0xf85cf000 ; call qword ptr [rax]
0x00000000005e3e60 : clc ; imul eax, dword ptr [rcx], 0xe9feb000 ; jmp qword ptr [rax]
0x0000000000617368 : clc ; in al, -0xc ; call qword ptr [rsi]
0x0000000000617668 : clc ; in eax, -0xc ; call qword ptr [rax]
0x00000000006175a8 : clc ; in eax, -0xc ; call qword ptr [rsi]
0x00000000005eb956 : clc ; inc dword ptr [rax] ; pop rax ; add eax, dword ptr [rax] ; rol byte ptr [rcx], 1 ; clc ; jmp qword ptr [rax]
0x000000000050d235 : clc ; inc dword ptr [rbp + 0x5b027ec0] ; ret
0x0000000000543d29 : clc ; inc dword ptr [rcx + rcx*4 - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000005ebfc0 : clc ; insd dword ptr [rdi], dx ; add eax, dword ptr [rax] ; nop ; outsb dx, byte ptr [rsi] ; clc ; jmp qword ptr [rax]
0x00000000004bec1f : clc ; ja 0x4bec18 ; ret
0x00000000004bed21 : clc ; ja 0x4bed1a ; ret
0x00000000004d603c : clc ; ja 0x4d6035 ; ret
0x00000000004d66f6 : clc ; ja 0x4d66ef ; ret
0x000000000051279d : clc ; ja 0x512796 ; ret
0x00000000005128a9 : clc ; ja 0x5128a2 ; ret
0x00000000005ec198 : clc ; jae 0x5ec1a5 ; add byte ptr [rax + 0x77], dl ; clc ; call qword ptr [rax]
0x00000000005e8318 : clc ; jg 0x5e8324 ; add byte ptr [rax], ah ; sbb dh, cl ; call qword ptr [rax]
0x00000000005eb95e : clc ; jmp qword ptr [rax]
0x00000000005eb996 : clc ; jmp rax
0x000000000040237f : clc ; jne 0x402388 ; pop rbp ; ret
0x00000000005a30e1 : clc ; jnp 0x5a3100 ; ret
0x0000000000595760 : clc ; jrcxz 0x595734 ; mov byte ptr [rdi - 0x22], ch ; outsd dx, dword ptr [rsi] ; ret
0x00000000005e9b68 : clc ; jrcxz 0x5e9b74 ; add al, dl ; hlt ; cmc ; call qword ptr [rax]
0x0000000000617068 : clc ; jrcxz 0x617062 ; call qword ptr [rsi]
0x00000000005b748d : clc ; js 0x5b7481 ; push rbx ; in al, dx ; jp 0x5b749d ; ret 0x2076
0x00000000005b748c : clc ; js 0x5b7482 ; push rbx ; in al, dx ; jp 0x5b749e ; ret 0x2076
0x00000000005e4260 : clc ; js 0x5e426b ; add al, ah ; push -0x16 ; jmp qword ptr [rax]
0x00000000005ebfae : clc ; lcall ptr [rax + 0x7000036d] ; insd dword ptr [rdi], dx ; clc ; call rax
0x00000000005e86f0 : clc ; lea eax, dword ptr [rdx] ; add byte ptr [rax], al ; push rsp ; int1 ; jmp qword ptr [rax]
0x0000000000448d28 : clc ; lea rsp, qword ptr [rax] ; mov rax, r10 ; ret
0x000000000044977f : clc ; lea rsp, qword ptr [rax] ; ret
0x0000000000520185 : clc ; lea rsp, qword ptr [rsi] ; ret
0x00000000005e8e98 : clc ; lodsb al, byte ptr [rsi] ; add al, byte ptr [rax] ; loopne 0x5e8e9a ; int1 ; call qword ptr [rax]
0x0000000000600318 : clc ; lodsb al, byte ptr [rsi] ; jmp 0x60031e
0x0000000000596b01 : clc ; lodsd eax, dword ptr [rsi] ; pop rdi ; ret 0xd710
0x00000000005e9a68 : clc ; loopne 0x5e9a74 ; add al, dl ; cmc ; call qword ptr [rax]
0x00000000005ecfe8 : clc ; loopne 0x5ecfcf ; jmp rdi
0x00000000005f6308 : clc ; mov ah, -0x19 ; jmp rax
0x00000000005ede98 : clc ; mov bh, -0x1e ; jmp qword ptr [rdx]
0x00000000005eddb8 : clc ; mov ch, -0x1e ; jmp qword ptr [rax]
0x0000000000605298 : clc ; mov dl, -0x13 ; jmp rax
0x0000000000541b74 : clc ; mov dr1, eax ; dec dword ptr [rax - 0x77] ; ret
0x0000000000507394 : clc ; mov dword ptr [rdi - 4], eax ; ret
0x00000000005e85b0 : clc ; mov dword ptr [rdx], eax ; add byte ptr [rax], dl ; int1 ; call qword ptr [rax]
0x000000000055d894 : clc ; mov eax, 0x8948ffff ; ret
0x00000000005e8650 : clc ; mov eax, dword ptr [rdx] ; add byte ptr [rax], al ; int1 ; call qword ptr [rax]
0x0000000000402415 : clc ; mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004f380b : clc ; mov eax, r15d ; pop rbx ; pop r14 ; pop r15 ; ret
0x000000000049fb0f : clc ; mov eax, r8d ; pop rdx ; ret
0x00000000005e5380 : clc ; mov ebp, 0x43b00001 ; in al, dx ; call qword ptr [rax]
0x00000000005e91e8 : clc ; mov edx, 0x9ad00002 ; call qword ptr [rax]
0x00000000004171e3 : clc ; mov edx, 0xb8410056 ; ret
0x0000000000414ac5 : clc ; mov edx, 0xb8410056 ; ret 6
0x00000000005e8740 : clc ; mov es, word ptr [rdx] ; add byte ptr [rax + 0x56], al ; int1 ; call qword ptr [rax]
0x00000000005e53c8 : clc ; mov esi, 0x46400001 ; in al, dx ; call qword ptr [rax]
0x000000000048fe3a : clc ; mov qword ptr [rsp + 8], r10 ; call r10
0x000000000040f461 : clc ; mov r9, r13 ; call rax
0x0000000000456a3a : clc ; or byte ptr [rax], al ; pop rbx ; ret
0x00000000004d8f03 : clc ; or byte ptr [rbp - 0x27], dh ; ret
0x00000000004d8eca : clc ; or byte ptr [rbp - 0x2e], dh ; ret
0x00000000004125d3 : clc ; or byte ptr [rbp - 0x47], dh ; ret
0x0000000000617be8 : clc ; out dx, al ; hlt ; call qword ptr [rax]
0x00000000005e72ad : clc ; out dx, eax ; call qword ptr [rax]
0x0000000000596cd0 : clc ; out dx, eax ; ret
0x00000000005ec010 : clc ; outsb dx, byte ptr [rsi] ; add eax, dword ptr [rax] ; jo 0x5ec08c ; clc ; call qword ptr [rax]
0x00000000005e8790 : clc ; pop qword ptr [rdx] ; add al, dh ; pop rax ; int1 ; call qword ptr [rax]
0x0000000000615538 : clc ; pop rax ; hlt ; call qword ptr [rcx]
0x00000000005ebb18 : clc ; pop rbp ; add eax, dword ptr [rax] ; xor byte ptr [rdx - 8], al ; call qword ptr [rax]
0x00000000005e7a10 : clc ; pop rbx ; add al, byte ptr [rax] ; adc byte ptr [rbp - 0x10], dh ; jmp qword ptr [rax]
0x0000000000425c4f : clc ; pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000429ffa : clc ; pop rbx ; pop r14 ; pop r15 ; ret
0x00000000004442e6 : clc ; pop rbx ; ret
0x00000000005eb9d8 : clc ; pop rcx ; add eax, dword ptr [rax] ; add byte ptr [rdx], cl ; clc ; call qword ptr [rax]
0x00000000004d0b67 : clc ; pop rdx ; ret
0x00000000005e4b68 : clc ; popfq ; add dword ptr [rax], eax ; add byte ptr [rax - 0x15], ah ; call qword ptr [rax]
0x00000000005eba56 : clc ; push qword ptr [rax - 0xffffca5] ; clc ; call rax
0x000000000054b072 : clc ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0x00000000005eb878 : clc ; push rbx ; add eax, dword ptr [rax] ; div dil ; call qword ptr [rax]
0x000000000059d700 : clc ; push rcx ; ret 0x2a40
0x0000000000419581 : clc ; ret
0x00000000005c3660 : clc ; ret 0x5c
0x0000000000556e75 : clc ; ret 0x614e
0x0000000000599acb : clc ; ret 0x6dc0
0x00000000005b48f5 : clc ; ret 0x9f2e
0x000000000059affa : clc ; ret 0xa3b3
0x0000000000556e7d : clc ; ret 0xb34e
0x00000000005aa829 : clc ; ret 0xc375
0x00000000005b7ed5 : clc ; ret 0xe28e
0x00000000004e6744 : clc ; ret 0xffff
0x000000000043ed94 : clc ; ret 2
0x00000000005320a2 : clc ; sal byte ptr [rax - 0x75], 1 ; ret 0xbe30
0x00000000006106f8 : clc ; sbb bl, dh ; call qword ptr [rax]
0x00000000005e6960 : clc ; sbb byte ptr [rdx], al ; add byte ptr [rax], dl ; in al, -0x12 ; call qword ptr [rax]
0x00000000004780f9 : clc ; sbb eax, 0xb8bf1972 ; ret
0x000000000059dab8 : clc ; sbb edx, dword ptr [rax + rdx*4] ; ret
0x00000000005e4fb8 : clc ; scasb al, byte ptr [rdi] ; add dword ptr [rax], eax ; nop ; retf ; jmp 0x5e4fc6
0x00000000005ea1f0 : clc ; stc ; add al, byte ptr [rax] ; and byte ptr [rax], 0xf6 ; call qword ptr [rax]
0x00000000005e61a0 : clc ; stc ; add dword ptr [rax], eax ; xor byte ptr [rsi], ah ; out dx, al ; call qword ptr [rax]
0x00000000005e8da8 : clc ; test eax, 0xee300002 ; int1 ; call qword ptr [rax]
0x00000000005e4ae8 : clc ; wait ; add dword ptr [rax], eax ; loopne 0x5e4b49 ; jmp 0x5e4af6
0x0000000000602118 : clc ; wait ; in al, dx ; jmp qword ptr [rsi]
0x00000000005e4970 : clc ; xchg eax, ebp ; add dword ptr [rax], eax ; nop ; sub ch, bl ; call qword ptr [rax]
0x00000000005e48d0 : clc ; xchg eax, ebx ; add dword ptr [rax], eax ; shl byte ptr [rdi], -0x15 ; call qword ptr [rax]
0x000000000057d9d0 : clc ; xchg eax, ecx ; test eax, 0x296b299e ; xchg eax, ebp ; ret 0x492f
0x00000000005e49f0 : clc ; xchg eax, edi ; add dword ptr [rax], eax ; adc byte ptr [rdi], dh ; jmp 0x5e49fe
0x0000000000611158 : clc ; xor bl, dh ; call qword ptr [rax]
0x0000000000432504 : clc ; xor dword ptr [rdi], edx ; ret
0x00000000005e6f00 : clc ; xor dword ptr [rdx], eax ; add byte ptr [rax - 0x54], dl ; out dx, eax ; call qword ptr [rax]
0x0000000000610304 : cld ; add al, byte ptr [rax] ; js 0x61032a ; call qword ptr [rsi]
0x00000000005ea2b9 : cld ; add al, byte ptr [rax] ; nop ; sub dh, dh ; call rax
0x00000000005ea2c9 : cld ; add al, byte ptr [rax] ; sub esi, esi ; call qword ptr [rax]
0x00000000005fbecd : cld ; add byte ptr [rax], al ; or ebp, edx ; call rax
0x0000000000600a04 : cld ; add dword ptr [r8], r8d ; sub dh, cl ; jmp 0x600a12
0x0000000000438477 : cld ; add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret 0xc031
0x000000000051d57f : cld ; add esp, eax ; ret
0x000000000059d900 : cld ; and eax, 0x2a73ddc9 ; ret
0x00000000004882a8 : cld ; dec dword ptr [rax - 0x77] ; ret
0x000000000044024f : cld ; dec dword ptr [rax - 0x77] ; ret 0x894c
0x00000000004cad4f : cld ; dec dword ptr [rcx + 0x5e415bd8] ; pop r15 ; ret
0x0000000000448ba2 : cld ; fimul dword ptr [rcx - 0x7d] ; ret 0x4860
0x00000000005e6135 : cld ; in eax, dx ; call qword ptr [rax]
0x0000000000606811 : cld ; in eax, dx ; call qword ptr [rcx]
0x00000000004c2d45 : cld ; inc dword ptr [rbp + 0x5b027ec0] ; ret
0x0000000000427aa1 : cld ; jmp qword ptr [rbx]
0x000000000057d2b1 : cld ; jmp qword ptr [rcx]
0x0000000000617004 : cld ; lodsd eax, dword ptr [rsi] ; add al, byte ptr [rax] ; fsub st(3) ; hlt ; call qword ptr [rsi]
0x0000000000617304 : cld ; mov al, 2 ; add al, bl ; in al, -0xc ; call qword ptr [rsi]
0x000000000059bcbc : cld ; mov bl, byte ptr [rip - 0x4ba54db4] ; sahf ; std ; ret
0x000000000059778d : cld ; mov eax, 0x32142f94 ; ret
0x000000000057d824 : cld ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000599ffa : cld ; out 0x65, al ; push -0x58 ; outsb dx, byte ptr [rsi] ; int1 ; ret
0x00000000004df226 : cld ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x41], 0x5e ; pop r15 ; ret
0x0000000000484260 : cld ; ret
0x00000000005b5608 : cld ; ret 0x8421
0x0000000000448b64 : cld ; ret 0x894c
0x000000000059ff5f : cld ; ret 0xeb49
0x000000000046ed10 : cld ; ret 0xffff
0x0000000000618504 : cld ; ret 2
0x0000000000608d04 : cld ; retf 1 ; or byte ptr [rbp - 0x12], dh ; jmp qword ptr [rdi]
0x0000000000608304 : cld ; rol byte ptr [rcx], 0 ; test al, 0x47 ; out dx, al ; call rdi
0x000000000053ee40 : cld ; sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; adc esi, esi ; ret 0x7506
0x00000000005b0107 : cld ; shr edx, cl ; ret
0x00000000005a04c8 : cld ; stosb byte ptr [rdi], al ; sub esp, ebx ; or ebx, dword ptr [rbx] ; ret
0x00000000005fee04 : cld ; sub eax, dword ptr [rcx] ; add byte ptr [rax + 0x30], cl ; jmp 0x5fee12
0x000000000060ee04 : cld ; sub eax, dword ptr [rdx] ; add byte ptr [rax], bh ; or ebx, esi ; call rbx
0x000000000045598a : cli ; adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc284
0x000000000045ac02 : cli ; add cl, byte ptr [rax + 1] ; ret 0x8d48
0x00000000005e61c9 : cli ; add dword ptr [rax], eax ; adc byte ptr [rdx], ch ; out dx, al ; call rax
0x00000000005e61d9 : cli ; add dword ptr [rax], eax ; push rax ; sub al, -0x12 ; jmp qword ptr [rax]
0x000000000057d393 : cli ; add eax, 0x1ae83ec3 ; jne 0x57d335 ; ret 0x5669
0x000000000048d72a : cli ; add eax, dword ptr [rax] ; test rax, rax ; je 0x48d73d ; pop rax ; ret
0x0000000000404cc2 : cli ; add ecx, dword ptr [rax - 1] ; ret 0x16eb
0x0000000000562aed : cli ; add rsp, 0x88 ; ret
0x00000000005ae6a5 : cli ; and eax, 0xe3f9eec3 ; ret
0x000000000040ad62 : cli ; call 0xffffffffc3c9ad6d
0x00000000005e9435 : cli ; call qword ptr [rax]
0x0000000000405a93 : cli ; call r12
0x000000000047f13a : cli ; call r14
0x000000000049055c : cli ; call rax
0x0000000000472588 : cli ; call rcx
0x00000000005e9c3d : cli ; cmc ; call rax
0x000000000050b0f5 : cli ; cmc ; dec dword ptr [rax - 0x77] ; ret
0x00000000005a453a : cli ; cmpsb byte ptr [rsi], byte ptr [rdi] ; int 0xc2
0x00000000004599bd : cli ; dec dword ptr [rax + 0x63] ; ret
0x00000000004587bd : cli ; dec dword ptr [rax - 0x75] ; add byte ptr [rax - 1], cl ; ret
0x0000000000455b96 : cli ; dec dword ptr [rax - 0x77] ; ret
0x000000000053ac17 : cli ; dec dword ptr [rax - 0x77] ; ret 0x7be
0x000000000053ab8c : cli ; dec dword ptr [rax - 0x77] ; ret 0xaebe
0x000000000054306a : cli ; dec dword ptr [rax - 0x77] ; ret 0xf6be
0x00000000004c3f44 : cli ; dec dword ptr [rax - 0x7d] ; ret
0x00000000004c38f7 : cli ; dec dword ptr [rax - 0x7f] ; ret
0x00000000004b8719 : cli ; dec dword ptr [rcx + 0x5e415be8] ; pop rbp ; ret
0x0000000000543d56 : cli ; dec dword ptr [rcx - 0x77] ; pop rsi ; or byte ptr [rax - 0x7d], cl ; ret
0x0000000000561c3a : cli ; div qword ptr [rsp - 8] ; ret
0x000000000059335f : cli ; imul ebx, dword ptr [rax + 0x5d], -0x67 ; mov bh, 0x2d ; mov ch, 0x27 ; ret 0x2237
0x0000000000598e3e : cli ; int1 ; adc ch, dh ; ret
0x00000000005b2515 : cli ; jbe 0x5b2577 ; mov eax, dword ptr [rdx - 0x2d] ; jge 0x5b255e ; ret 0xf356
0x000000000059d2ca : cli ; jge 0x59d2e0 ; or dword ptr [rax], eax ; pushfq ; ret 0x51d8
0x00000000005a3fe0 : cli ; jne 0x5a3f8e ; movsb byte ptr [rdi], byte ptr [rsi] ; xchg eax, ebx ; and al, 0xffffffffffffffa5 ; ret 0x33c5
0x0000000000539bd3 : cli ; lcall ptr [rbx + 0x41] ; pop rsi ; pop r15 ; ret
0x00000000005b5718 : cli ; lodsb al, byte ptr [rsi] ; ret 0x1c5b
0x0000000000599899 : cli ; mov bl, -0x20 ; test dword ptr [rax], ecx ; ret
0x00000000004e5ecc : cli ; mov ecx, r14d ; call rax
0x000000000047efd8 : cli ; mov qword ptr [rsp + 0x28], r8 ; call r14
0x000000000045f125 : cli ; mov rcx, qword ptr [rsp + 0x10] ; call rax
0x00000000004c5c47 : cli ; mov rcx, r12 ; call rax
0x00000000004c3b15 : cli ; mov rcx, r13 ; call rax
0x00000000004c5029 : cli ; mov rcx, r13 ; call rbx
0x00000000004cb56c : cli ; mov rcx, r14 ; call rax
0x00000000004c40a3 : cli ; mov rcx, r9 ; mov r14, r9 ; call rax
0x00000000004c4108 : cli ; mov rcx, r9 ; mov rbp, r9 ; call rax
0x00000000005175d6 : cli ; movd esi, mm4 ; ret
0x00000000005a2d26 : cli ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000000004e8e30 : cli ; or ecx, dword ptr [rax + 1] ; ret 0xc16b
0x00000000004e8e59 : cli ; or ecx, dword ptr [rcx + 1] ; ret 0x6949
0x000000000048db72 : cli ; out -1, eax ; dec dword ptr [rax - 0x77] ; ret
0x0000000000532413 : cli ; outsd dx, dword ptr [rsi] ; pop rsi ; xor ah, al ; ret 0x71
0x0000000000532409 : cli ; outsd dx, dword ptr [rsi] ; push rsi ; and ah, al ; ret 0x79
0x000000000059da3a : cli ; pop rdi ; xchg eax, esi ; pop rbp ; adc eax, 0xa72d001e ; ret
0x00000000005393d3 : cli ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x41], 0x5e ; pop r15 ; ret
0x000000000044762d : cli ; ret
0x00000000005b0811 : cli ; ret 0x3c61
0x00000000005ae878 : cli ; ret 0x4c6b
0x00000000005a74ce : cli ; ret 0x9cc7
0x000000000059d56a : cli ; ret 0xb1a8
0x000000000057d115 : cli ; ret 0xebb0
0x00000000005a3151 : cli ; ret 0xeca0
0x00000000005afccc : cli ; sbb byte ptr [rcx + 0x7f62a6fd], dh ; ret 0x8b90
0x00000000005a91ea : cli ; sbb cl, dh ; clc ; ret
0x0000000000578300 : cli ; sbb eax, 0x4366db85 ; or dword ptr [rbx - 0x2e], esp ; ret
0x00000000005a4d87 : cli ; test al, -0x26 ; jg 0x5a4da0 ; sbb bh, al ; ret
0x00000000005a919a : cli ; xchg eax, edi ; ret
0x000000000049ce60 : cmc ; add al, byte ptr [rax] ; xor eax, eax ; pop rbx ; ret
0x000000000049cdb8 : cmc ; add al, byte ptr [rax] ; xor eax, eax ; pop rdx ; ret
0x00000000005fb70d : cmc ; add byte ptr [rax], al ; shl al, -0x17 ; jmp rdx
0x000000000060b7a5 : cmc ; add dword ptr [rax], eax ; call 0x1260a6d9
0x0000000000596572 : cmc ; and al, 0x75 ; rol dword ptr [rax + rax*4], -0x49 ; ret
0x00000000005a0ec3 : cmc ; and eax, 0xd937d55a ; ret 0x69e4
0x00000000005e971e : cmc ; call qword ptr [rax]
0x0000000000618712 : cmc ; call qword ptr [rdi]
0x00000000005e976e : cmc ; call rax
0x00000000004bbaf0 : cmc ; cli ; dec dword ptr [rax - 0x77] ; ret
0x00000000005e9bad : cmc ; cmc ; call rax
0x00000000004e9a48 : cmc ; dec dword ptr [rax - 0x77] ; ret
0x00000000005e9b16 : cmc ; dec dword ptr [rax] ; jrcxz 0x5e9b26 ; add byte ptr [rax], dh ; hlt ; cmc ; jmp qword ptr [rax]
0x00000000005e9a16 : cmc ; dec dword ptr [rax] ; loopne 0x5e9a26 ; add byte ptr [rax], dh ; cmc ; jmp qword ptr [rax]
0x000000000057e2f1 : cmc ; imul edx, dword ptr [rsi], -0x7e ; call qword ptr [rdx]
0x00000000005e9bee : cmc ; inc eax ; in eax, 2 ; add byte ptr [rax - 8], dl ; cmc ; jmp rax
0x00000000005e8e9d : cmc ; int1 ; call qword ptr [rax]
0x00000000005e8e4d : cmc ; int1 ; jmp qword ptr [rax]
0x00000000005e8e8d : cmc ; int1 ; jmp rax
0x0000000000487257 : cmc ; jg 0x48726b ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005e95d6 : cmc ; jmp qword ptr [rax]
0x00000000006181e2 : cmc ; jmp qword ptr [rbx]
0x0000000000618612 : cmc ; jmp qword ptr [rdi]
0x00000000005e95a6 : cmc ; jmp rax
0x0000000000593bf5 : cmc ; jne 0x593ba3 ; ret 0x325c
0x00000000004ea137 : cmc ; jnp 0x4ea131 ; dec dword ptr [rax - 0x77] ; ret
0x00000000005e9766 : cmc ; lcall ptr [rax + 0x400002d4] ; wait ; cmc ; call rax
0x00000000005e9916 : cmc ; ljmp ptr [rax - 0x7ffffd24] ; in eax, dx ; cmc ; jmp rax
0x00000000005b26dc : cmc ; mov bl, -0x32 ; ret
0x0000000000564c6c : cmc ; mov eax, r8d ; cdqe ; ret
0x000000000060aa61 : cmc ; out dx, al ; jmp rsp
0x0000000000478258 : cmc ; pop rax ; ret 0x57
0x00000000005ad64b : cmc ; push 0x41 ; std ; ret
0x00000000005e959e : cmc ; push qword ptr [rax + 0x600002cb] ; cmc ; jmp rax
0x00000000005e987e : cmc ; push qword ptr [rax - 0x1ffffd26] ; fcompi st(5) ; call rax
0x0000000000597e49 : cmc ; push rcx ; ret 0xfe1a
0x0000000000500ada : cmc ; ret
0x00000000005a9c76 : cmc ; ret 0x1d0d
0x00000000005aed6a : cmc ; ret 0x2d31
0x000000000059cd6f : cmc ; ret 0x75dd
0x00000000005a5db0 : cmc ; ret 0xe329
0x000000000057d8a1 : cmc ; ret 0xf961
0x000000000046b362 : cmova eax, ecx ; ret
0x00000000004bff7e : cmovb eax, ecx ; cmovb r9, r10 ; ret
0x00000000004bff82 : cmovb ecx, edx ; ret
0x00000000004bff7d : cmovb r8, rcx ; cmovb r9, r10 ; ret
0x00000000004bff81 : cmovb r9, r10 ; ret
0x00000000004a2cd5 : cmove eax, ebx ; add rsp, 0x10 ; pop rbx ; ret
0x000000000055bd51 : cmove eax, ecx ; add rsp, 0x28 ; ret
0x0000000000551043 : cmove eax, ecx ; add rsp, 0x38 ; ret
0x000000000040d43b : cmove eax, ecx ; ret
0x000000000043658d : cmove eax, edi ; pop rbx ; ret
0x000000000043ec8c : cmove eax, edi ; ret
0x0000000000478f05 : cmove ebx, eax ; mov eax, ebx ; pop rbx ; ret
0x000000000043f51d : cmove ecx, eax ; mov eax, ecx ; pop rbx ; ret
0x0000000000548610 : cmove ecx, esi ; mov dword ptr [rdi + 0x28], ecx ; pop rdx ; ret
0x00000000004a2cd4 : cmove rax, rbx ; add rsp, 0x10 ; pop rbx ; ret
0x000000000040d43a : cmove rax, rcx ; ret
0x000000000043ec8b : cmove rax, rdi ; ret
0x00000000004620f2 : cmovg eax, dword ptr [rsp + 4] ; pop rdx ; ret
0x000000000042c3d9 : cmovg eax, ecx ; ret
0x000000000046a96b : cmovle eax, ecx ; mov dword ptr [rip + 0x3c0ea8], eax ; ret
0x00000000004767e4 : cmovle ecx, eax ; mov eax, ecx ; pop rdx ; ret
0x0000000000507734 : cmovne eax, dword ptr [rcx] ; ret 0xc3c1
0x00000000004bee35 : cmovne eax, ecx ; cmovne r9, r10 ; ret
0x000000000049f655 : cmovne eax, ecx ; ret
0x000000000043b7b5 : cmovne eax, edx ; jmp 0x43b7d2
0x00000000004b8f08 : cmovne eax, esi ; jne 0x4b8ef2 ; jmp 0x4b8ed7
0x00000000004ec189 : cmovne eax, esi ; mov qword ptr [rdi + 0x30], rax ; ret
0x000000000043b7b4 : cmovne eax, r10d ; jmp 0x43b7d3
0x0000000000441b94 : cmovne ebx, eax ; mov eax, ebx ; pop rbx ; ret
0x00000000004bee39 : cmovne ecx, edx ; ret
0x000000000048cb98 : cmovne esi, edx ; jmp 0x48cb64
0x00000000004bee34 : cmovne r8, rcx ; cmovne r9, r10 ; ret
0x00000000004bee38 : cmovne r9, r10 ; ret
0x00000000004b8f07 : cmovne rax, r14 ; jne 0x4b8ef3 ; jmp 0x4b8ed8
0x000000000049f654 : cmovne rax, rcx ; ret
0x00000000004ec188 : cmovne rax, rsi ; mov qword ptr [rdi + 0x30], rax ; ret
0x000000000048cb97 : cmovne rsi, rdx ; jmp 0x48cb65
0x00000000005081e0 : cmovno eax, ecx ; ret 0x440a
0x000000000044805b : cmovno ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0x3949
0x00000000004e48c5 : cmovno esi, dword ptr [rcx] ; ret
0x0000000000429306 : cmovns eax, dword ptr [rbx - 0x6bf0fe05] ; ret 0xf44
0x00000000005126a7 : cmovns esp, dword ptr [rcx] ; ret
0x0000000000440ffe : cmovs eax, dword ptr [rbx - 0x7cb7ef39] ; ret
0x0000000000545312 : cmovs ecx, dword ptr [rbx - 0x2b17f785] ; ret 0xffef
0x000000000050fa4d : cmovs ecx, dword ptr [rbx - 0x7cd7dbac] ; ret 0x31fe
0x0000000000442dc8 : cmovs edi, edi ; ret
0x00000000004b6d13 : cmovs edi, edi ; ret 0x8348
0x0000000000617128 : cmp ah, ah ; hlt ; call qword ptr [rsi]
0x0000000000527a20 : cmp ah, al ; ret
0x0000000000527a1a : cmp ah, al ; sar dword ptr [rcx + 0x6e], 0x41 ; cmp ah, al ; ret
0x0000000000529d69 : cmp ah, al ; sar dword ptr [rcx + 0x6e], 0x51 ; cmp ah, al ; ret
0x00000000005e2c8d : cmp ah, bh ; jmp qword ptr [rax]
0x000000000044cf57 : cmp ah, bl ; rol byte ptr [rbp + 0xf], 1 ; cmp cl, ah ; ret 0x4400
0x00000000005a70c4 : cmp ah, byte ptr [rbp + 0x22] ; ret 0xb805
0x00000000005a2922 : cmp ah, byte ptr [rdi - 0x628aee00] ; jb 0x5a2933 ; ret 0x4a9d
0x000000000060eab8 : cmp ah, ch ; jmp rdx
0x0000000000526730 : cmp ah, cl ; shl dword ptr [rsi + 0xf], 0x6f ; ret 0xf66
0x0000000000547e22 : cmp ah, cl ; stc ; dec dword ptr [rax - 0x77] ; ret
0x00000000005ab55a : cmp ah, dl ; and eax, 0x3bcb0a9e ; popfq ; ret
0x00000000005e405d : cmp al, -0x16 ; jmp qword ptr [rax]
0x00000000004e8a47 : cmp al, -0x18 ; mov rsi, r14 ; call rbx
0x00000000005ed6c1 : cmp al, -0x1e ; jmp qword ptr [rbx]
0x00000000005395a9 : cmp al, -0x20 ; test rdi, rdi ; je 0x5395bb ; call r14
0x00000000005aee2c : cmp al, -0x24 ; pop r14 ; mov ds, word ptr [rbp + 3] ; ret 0x37ca
0x00000000004b6510 : cmp al, -0x27 ; cli ; dec dword ptr [rax - 0x77] ; ret
0x0000000000539567 : cmp al, -0x27 ; test rdi, rdi ; je 0x53958a ; call r15
0x0000000000539ba6 : cmp al, -0x27 ; test rdi, rdi ; je 0x539bbb ; call r14
0x000000000047c1d6 : cmp al, -0x2d ; ret 0xb60f
0x00000000004d7480 : cmp al, -0x33 ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000059fcf2 : cmp al, -0x38 ; push rcx ; scasb al, byte ptr [rdi] ; jl 0x59fcfb ; sbb dl, byte ptr [rdi] ; ret 0xaaca
0x00000000005d67f7 : cmp al, -0x38 ; ret 0xaca
0x0000000000597762 : cmp al, -0x3d ; adc al, 0x1c ; ret
0x00000000005b605d : cmp al, -0x3f ; imul dh ; ret
0x00000000004e8a86 : cmp al, -0x3f ; ret
0x00000000005f7644 : cmp al, -0x4c ; add byte ptr [rax], al ; cmp byte ptr [rdi - 0x18], al ; call rsp
0x0000000000617244 : cmp al, -0x50 ; add al, byte ptr [rax] ; cwde ; in al, -0xc ; call qword ptr [rsi]
0x00000000005b5c0e : cmp al, -0x52 ; leave ; add byte ptr [rcx - 0x76], dh ; ret 0xe440
0x0000000000616f44 : cmp al, -0x53 ; add al, byte ptr [rax] ; mov bl, ah ; hlt ; jmp qword ptr [rdi]
0x000000000059e20c : cmp al, -0x62 ; ret 0x64d4
0x000000000059cb95 : cmp al, -0x74 ; xchg eax, ebp ; ret 0x45da
0x00000000005b7b1c : cmp al, -0x75 ; ret
0x000000000040507d : cmp al, -0x7f ; std ; call qword ptr [rax]
0x00000000004bd15b : cmp al, -6 ; dec dword ptr [rax - 0x77] ; ret
0x00000000005eba35 : cmp al, -8 ; jmp qword ptr [rax]
0x00000000005586f7 : cmp al, -9 ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0x00000000004f60c2 : cmp al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000467932 : cmp al, 0 ; add byte ptr [rbp - 0x7c118b40], al ; ret
0x00000000005ac017 : cmp al, 0 ; push rbp ; adc edx, dword ptr [rbp + 7] ; ret 0xa3cf
0x000000000046a972 : cmp al, 0 ; ret
0x000000000050620d : cmp al, 0 ; ror byte ptr [rbx - 0x7ebea3a2], 1 ; ret 0xe681
0x000000000050677b : cmp al, 0 ; ror byte ptr [rbx - 0x7ebec3a2], 1 ; ret 0x7cf8
0x0000000000506a29 : cmp al, 0 ; ror dword ptr [rbx - 0x7ebe97ba], cl ; ret
0x000000000060d244 : cmp al, 0x10 ; add al, byte ptr [rax] ; clc ; add al, -0x10 ; jmp qword ptr [rdi]
0x00000000004264c2 : cmp al, 0x24 ; call rax
0x000000000044082d : cmp al, 0x24 ; mov rsi, r14 ; call r15
0x000000000059c8c9 : cmp al, 0x26 ; ret 0x6f8
0x000000000045d491 : cmp al, 0x2e ; or cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb60f
0x00000000004d2dd9 : cmp al, 0x31 ; ret
0x00000000005a5727 : cmp al, 0x36 ; cdq ; out dx, al ; jbe 0x5a5741 ; ret 0x6dd1
0x00000000005991d3 : cmp al, 0x3f ; mov ebx, 0xfa39ef18 ; ret
0x000000000059c8e7 : cmp al, 0x52 ; insd dword ptr [rdi], dx ; stosb byte ptr [rdi], al ; ret 0xa39d
0x00000000005abcf8 : cmp al, 0x64 ; xor cl, byte ptr [rbx - 0x2ed41f02] ; ret
0x00000000005fcd44 : cmp al, 0xb ; add dword ptr [rax], eax ; mov byte ptr [rdi - 0x16], bh ; call qword ptr [rcx]
0x000000000046dfa1 : cmp al, 0xf ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000443f0c : cmp al, 1 ; ret 0xbeb
0x000000000060fe5d : cmp al, 2 ; add byte ptr [rax + 0x17], dl ; call qword ptr [rax]
0x000000000060c844 : cmp al, 6 ; add al, byte ptr [rax] ; pop rax ; ret
0x0000000000517823 : cmp al, 9 ; ret
0x00000000005eb1c9 : cmp al, byte ptr [rbx] ; add byte ptr [rax], al ; jg 0x5eb1cc ; call rax
0x00000000005e3451 : cmp al, byte ptr [rcx] ; add byte ptr [rax], al ; sub al, -0x18 ; call rax
0x0000000000432c69 : cmp al, byte ptr [rdx] ; add byte ptr [rax], al ; mov eax, 0x573fe7 ; ret
0x00000000005b5996 : cmp al, byte ptr [rdx] ; xor al, 0x5c ; ret
0x000000000055b512 : cmp al, ch ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000005e349d : cmp al, ch ; call qword ptr [rax]
0x00000000005f74d9 : cmp al, ch ; call qword ptr [rdi]
0x0000000000423967 : cmp al, ch ; ret
0x00000000004322d2 : cmp ax, 0x57 ; ret
0x0000000000546a10 : cmp bh, 1 ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x00000000005d733d : cmp bh, al ; ret
0x000000000042c64a : cmp bh, bh ; ret
0x0000000000451dd4 : cmp bh, bl ; clc ; ret
0x00000000004519f4 : cmp bh, bl ; fdiv st(3) ; ret
0x0000000000451ad6 : cmp bh, bl ; fsub dword ptr [rsi + 0xf] ; cmp bh, bl ; loopne 0x451adb ; ret
0x0000000000451adb : cmp bh, bl ; loopne 0x451ad6 ; ret
0x0000000000451929 : cmp bh, bl ; ror dword ptr [rdi], 1 ; adc dword ptr [rsi], edx ; ret
0x00000000005a9900 : cmp bh, bl ; scasb al, byte ptr [rdi] ; ja 0x5a997b ; and ch, byte ptr [rax - 0x7f] ; push rbx ; ret 0x1e72
0x00000000004519ef : cmp bh, bl ; shl byte ptr [rsi + 0xf], 1 ; cmp bh, bl ; fdiv st(3) ; ret
0x00000000005b19d4 : cmp bh, byte ptr [rdi + 0x494e787a] ; push 0x6f ; ret 0x2167
0x000000000055bb32 : cmp bh, byte ptr [rsi - 0x3fcf0000] ; ret
0x00000000005661cd : cmp bh, ch ; dec dword ptr [rax - 0x77] ; ret
0x0000000000578874 : cmp bh, ch ; je 0x578870 ; ret 0x89bd
0x0000000000578873 : cmp bh, ch ; je 0x578871 ; ret 0x89bd
0x00000000004b7331 : cmp bl, bh ; dec dword ptr [rax - 0x77] ; ret
0x00000000005b33c1 : cmp bl, byte ptr [rip + 0x7e2c2e42] ; ret
0x00000000004a4742 : cmp bl, byte ptr [rsi + 2] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000428f4b : cmp bl, ch ; adc ecx, dword ptr [rax - 0x77] ; ret 0xc031
0x00000000005267a8 : cmp bl, cl ; inc byte ptr [rbp + 0xf] ; cmp ch, cl ; ret
0x0000000000445750 : cmp bl, dh ; ret
0x0000000000595146 : cmp bl, dl ; sbb byte ptr [rbp + rcx*8 - 0x45], ch ; ret
0x0000000000486385 : cmp byte ptr [ebx], cl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004da11c : cmp byte ptr [r11 - 0x3d], bl ; pop rbx ; ret
0x00000000005345c1 : cmp byte ptr [r12 + 0x60], r14b ; add esp, eax ; ret 0x55
0x00000000004320da : cmp byte ptr [r15], dl ; ret
0x00000000004a7b40 : cmp byte ptr [r8], r8b ; lea rdi, qword ptr [rsp + 8] ; call rbx
0x000000000059ddc7 : cmp byte ptr [r9 + rdi*8 - 0x19], dl ; mov ah, 0x2d ; ret
0x0000000000567647 : cmp byte ptr [rax + 0x29], cl ; ret 0x348
0x000000000043dff1 : cmp byte ptr [rax + 0x29], cl ; ret 0x8b44
0x000000000059ea47 : cmp byte ptr [rax + 0x41], bh ; lodsd eax, dword ptr [rsi] ; pop rax ; ret 0x2910
0x0000000000440bd7 : cmp byte ptr [rax + 0x63], cl ; ret 0x8d48
0x000000000045a2cd : cmp byte ptr [rax + 0xf], cl ; ret
0x000000000047788e : cmp byte ptr [rax + 1], bh ; ret
0x0000000000561fde : cmp byte ptr [rax + 1], cl ; ret
0x00000000005a2950 : cmp byte ptr [rax - 0x2b], bh ; push rdi ; ret 0xb9d9
0x0000000000417d86 : cmp byte ptr [rax - 0x75], cl ; jl 0x417d97 ; sbb al, ch ; call qword ptr [rbx]
0x000000000042ce1c : cmp byte ptr [rax - 0x76fffffc], 2 ; ret
0x000000000049754a : cmp byte ptr [rax - 0x7b], cl ; leave ; je 0x49756e ; mov rdi, rbx ; call rcx
0x00000000004975da : cmp byte ptr [rax - 0x7b], cl ; leave ; je 0x4975fe ; mov rdi, rbx ; call rcx
0x0000000000461bff : cmp byte ptr [rax - 0x7b], cl ; push qword ptr [rbp - 0x15] ; ret
0x0000000000402a55 : cmp byte ptr [rax - 0x7d], cl ; ret
0x0000000000459bee : cmp byte ptr [rax - 1], cl ; ret
0x0000000000562631 : cmp byte ptr [rax - 9], cl ; sbb byte ptr [rax + 1], cl ; ret
0x0000000000562630 : cmp byte ptr [rax - 9], r9b ; sbb byte ptr [rax + 1], cl ; ret
0x00000000005efa3d : cmp byte ptr [rax], al ; add al, al ; fsub st(3) ; jmp qword ptr [rcx]
0x000000000049ea8a : cmp byte ptr [rax], al ; add byte ptr [rax + 1], bh ; pop rdx ; ret
0x00000000004f6062 : cmp byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004a6453 : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; ret
0x000000000049d282 : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rdx ; ret
0x0000000000506790 : cmp byte ptr [rax], al ; fld dword ptr [rcx - 0x3f] ; ret 0x4510
0x00000000005554c5 : cmp byte ptr [rax], al ; fldenv dword ptr [rsi + 0xf] ; out dx, eax ; fimul dword ptr [rax - 0x7d] ; ret 0x66f0
0x0000000000554f34 : cmp byte ptr [rax], al ; fmul qword ptr [rcx - 0x7d] ; ret
0x00000000004a7b41 : cmp byte ptr [rax], al ; lea rdi, qword ptr [rsp + 8] ; call rbx
0x00000000004a4a3e : cmp byte ptr [rax], al ; lea rsi, qword ptr [rsp] ; xor edi, edi ; call rbx
0x000000000049d1b7 : cmp byte ptr [rax], al ; mov eax, 1 ; pop rdx ; ret
0x00000000004abab8 : cmp byte ptr [rax], al ; pop r8 ; jmp rax
0x000000000049c6a5 : cmp byte ptr [rax], al ; ret
0x00000000004d5a90 : cmp byte ptr [rax], al ; ret 0x4166
0x00000000004d5924 : cmp byte ptr [rax], al ; ret 0x4566
0x00000000004d5859 : cmp byte ptr [rax], al ; ret 0x8348
0x0000000000555171 : cmp byte ptr [rax], al ; ret 0xc3f3
0x00000000004d5e7d : cmp byte ptr [rax], al ; ret 0xff3
0x000000000050687e : cmp byte ptr [rax], al ; ror byte ptr [rbx - 0x7ebeb3a2], 1 ; ret 0x23a7
0x0000000000506025 : cmp byte ptr [rax], al ; ror byte ptr [rbx - 0x7ebec3a2], 1 ; ret 0x438e
0x00000000005062bb : cmp byte ptr [rax], al ; ror dword ptr [rbx - 0x7ebe97ba], cl ; ret
0x000000000049d46e : cmp byte ptr [rax], al ; setne al ; movzx eax, al ; pop rbx ; ret
0x00000000005553e5 : cmp byte ptr [rax], al ; shl dword ptr [rsi + 0xf], -0x11 ; ret 0xc3f3
0x00000000004aaefc : cmp byte ptr [rax], al ; test al, al ; je 0x4aaf0b ; pop rax ; ret
0x00000000004dff48 : cmp byte ptr [rax], dh ; ret 0xf41
0x0000000000522dfc : cmp byte ptr [rbp + 0x10], cl ; add esp, eax ; ret
0x0000000000522e03 : cmp byte ptr [rbp + 0x20], dl ; add esp, eax ; ret
0x000000000050603a : cmp byte ptr [rbp + 1], al ; loop 0x506047 ; fld dword ptr [rcx - 0x3f] ; ret 0x4511
0x00000000005b24ee : cmp byte ptr [rbp + rbp + 0x57e9c835], ah ; ret
0x00000000005a29a5 : cmp byte ptr [rbp - 0x74e6c8d7], bh ; outsd dx, dword ptr fs:[rsi] ; ret 0xf479
0x0000000000482467 : cmp byte ptr [rbp - 0x77], cl ; ret
0x000000000047f3fd : cmp byte ptr [rbp - 0x77], cl ; ret 0x8949
0x0000000000522066 : cmp byte ptr [rbp], al ; add esp, eax ; ret
0x00000000004434fc : cmp byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000043d540 : cmp byte ptr [rbx + 0x41], bl ; pop rsi ; ret
0x00000000004dd9ef : cmp byte ptr [rbx + 0x41], bl ; pop rsp ; pop r14 ; pop r15 ; ret
0x0000000000433708 : cmp byte ptr [rbx + 0x57], al ; add bl, al ; ret
0x00000000004da11d : cmp byte ptr [rbx - 0x3d], bl ; pop rbx ; ret
0x00000000005422a4 : cmp byte ptr [rbx - 0x76b70005], al ; ret
0x00000000005b2d10 : cmp byte ptr [rbx - 0x78c73efc], dh ; in eax, dx ; ret
0x00000000004d1f02 : cmp byte ptr [rbx - 0xb7fd3b], al ; ret
0x00000000005e4044 : cmp byte ptr [rbx], -0x16 ; call rax
0x0000000000578932 : cmp byte ptr [rbx], ah ; xchg eax, esp ; ffree st(2) ; push rbx ; xor al, 0x16 ; ret 0x56c2
0x00000000005eb121 : cmp byte ptr [rbx], al ; add byte ptr [rax], dh ; jbe 0x5eb124 ; jmp qword ptr [rax]
0x0000000000486386 : cmp byte ptr [rbx], cl ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000512677 : cmp byte ptr [rcx + 0x21], cl ; ret 0x894c
0x00000000004d2dc9 : cmp byte ptr [rcx + 0x31], al ; ret
0x000000000056217c : cmp byte ptr [rcx + 1], cl ; ret
0x000000000056213c : cmp byte ptr [rcx + 1], cl ; ret 0x1148
0x0000000000455174 : cmp byte ptr [rcx + rcx*4 + 0x4f], cl ; pop rax ; mov qword ptr [rdi + 0x60], rax ; ret
0x00000000004c53f0 : cmp byte ptr [rcx + rcx*4 - 0x12], cl ; mov rcx, rbx ; call r14
0x00000000004c4f1f : cmp byte ptr [rcx + rcx*4 - 2], cl ; mov rcx, r13 ; call rax
0x000000000055d53c : cmp byte ptr [rcx + rcx*4 - 9], cl ; test rax, rax ; je 0x55d58c ; call rax
0x000000000059ddc8 : cmp byte ptr [rcx + rdi*8 - 0x19], dl ; mov ah, 0x2d ; ret
0x000000000060c0a8 : cmp byte ptr [rcx - 0x11], cl ; call qword ptr [rax]
0x00000000004cf3e4 : cmp byte ptr [rcx - 0x73], al ; push rdi ; ljmp ptr [rcx] ; ret 0xff48
0x0000000000541134 : cmp byte ptr [rcx - 0x76b70008], bl ; ret
0x0000000000505ff0 : cmp byte ptr [rcx - 0x7f], al ; ret
0x0000000000505fef : cmp byte ptr [rcx - 0x7f], r8b ; ret
0x00000000005ffa1d : cmp byte ptr [rcx], al ; add al, al ; jg 0x5ffa14 ; call qword ptr [rdx]
0x00000000005ffaad : cmp byte ptr [rcx], al ; add byte ptr [rax - 0x80], ah ; jmp 0x5ffab9
0x0000000000432d6b : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; mov eax, 0x573f85 ; ret
0x000000000042c303 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rdx ; ret
0x00000000005a082b : cmp byte ptr [rcx], bh ; pop rbx ; ret 0x958e
0x000000000060ee08 : cmp byte ptr [rcx], cl ; call rbx
0x0000000000561ff4 : cmp byte ptr [rcx], dh ; fisttp dword ptr [rcx + 1] ; ret 0x1148
0x00000000005991d2 : cmp byte ptr [rdi + rdi], -0x45 ; sbb bh, ch ; cmp edx, edi ; ret
0x0000000000430423 : cmp byte ptr [rdi + rdx*2], ch ; add byte ptr [rcx - 0x48], al ; ret 3
0x00000000005f7648 : cmp byte ptr [rdi - 0x18], al ; call rsp
0x00000000005a4538 : cmp byte ptr [rdi], bl ; cli ; cmpsb byte ptr [rsi], byte ptr [rdi] ; int 0xc2
0x00000000005b3f0c : cmp byte ptr [rdi], dh ; ret
0x00000000004320b7 : cmp byte ptr [rdi], dl ; ret
0x00000000004435a4 : cmp byte ptr [rdx - 0x7bf0ffc2], al ; ret
0x000000000060fa3d : cmp byte ptr [rdx], al ; add al, ah ; adc al, -0xd ; call qword ptr [rax]
0x00000000005f9af8 : cmp byte ptr [rsi - 0x17], al ; call qword ptr [rcx]
0x0000000000432f99 : cmp byte ptr [rsi], ch ; push rdi ; add byte ptr [rax + 0x5de743], bh ; ret
0x0000000000534581 : cmp byte ptr [rsp + 0x10], cl ; add esp, eax ; ret 0x7d
0x000000000053458e : cmp byte ptr [rsp + 0x20], dl ; add esp, eax ; ret 0x75
0x000000000053459b : cmp byte ptr [rsp + 0x30], bl ; add esp, eax ; ret 0x6d
0x00000000005345a8 : cmp byte ptr [rsp + 0x40], ah ; add esp, eax ; ret 0x65
0x00000000005345b5 : cmp byte ptr [rsp + 0x50], ch ; add esp, eax ; ret 0x5d
0x00000000005345c2 : cmp byte ptr [rsp + 0x60], dh ; add esp, eax ; ret 0x55
0x000000000044f937 : cmp byte ptr [rsp], al ; add esp, eax ; ret
0x000000000053459a : cmp byte ptr gs:[rsp + 0x30], bl ; add esp, eax ; ret 0x6d
0x00000000006173e8 : cmp ch, ah ; hlt ; call qword ptr [rsi]
0x0000000000593d1e : cmp ch, ah ; mov dl, 0x1c ; ret
0x00000000005f7511 : cmp ch, al ; call qword ptr [rsi]
0x0000000000451ce4 : cmp ch, bl ; clc ; ret
0x0000000000451994 : cmp ch, bl ; fdiv st(3) ; ret
0x00000000004526df : cmp ch, bl ; fld dword ptr [rcx + 0xf] ; adc dword ptr [rcx], ebx ; ret
0x0000000000451a66 : cmp ch, bl ; fsub dword ptr [rsi + 0xf] ; cmp ch, bl ; loopne 0x451a6b ; ret
0x0000000000451a6b : cmp ch, bl ; loopne 0x451a66 ; ret
0x00000000004518e9 : cmp ch, bl ; ror dword ptr [rdi], 1 ; adc dword ptr [rsi], edx ; ret
0x000000000045198f : cmp ch, bl ; shl byte ptr [rsi + 0xf], 1 ; cmp ch, bl ; fdiv st(3) ; ret
0x000000000059d8f7 : cmp ch, byte ptr [rdi + rsi - 0x2001a244] ; ret
0x00000000005f9741 : cmp ch, cl ; call qword ptr [rax]
0x00000000005267ad : cmp ch, cl ; ret
0x000000000054e308 : cmp cl, -1 ; ret
0x00000000005203e2 : cmp cl, ah ; ret 0x4103
0x000000000044cf5c : cmp cl, ah ; ret 0x4400
0x000000000044d043 : cmp cl, ah ; ret 0x4401
0x000000000044d194 : cmp cl, ah ; ret 0x4402
0x000000000044d289 : cmp cl, ah ; ret 0x4403
0x000000000051a649 : cmp cl, ah ; ret 0x4500
0x000000000051a720 : cmp cl, ah ; ret 0x4501
0x000000000051a870 : cmp cl, ah ; ret 0x4502
0x000000000051a950 : cmp cl, ah ; ret 0x4503
0x000000000051a63f : cmp cl, ah ; ret 0xf00
0x000000000051a716 : cmp cl, ah ; ret 0xf01
0x000000000051a866 : cmp cl, ah ; ret 0xf02
0x000000000051a946 : cmp cl, ah ; ret 0xf03
0x00000000004d7282 : cmp cl, bh ; dec dword ptr [rax - 0x77] ; ret
0x00000000005a2b31 : cmp cl, bl ; ret 0xa99c
0x0000000000553752 : cmp cl, byte ptr [rax - 1] ; ret
0x00000000005b48ef : cmp cl, byte ptr [rbx - 0x6d94d81b] ; clc ; ret 0x9f2e
0x00000000005aeb8d : cmp cl, byte ptr [rcx] ; cmp eax, 0x206348b8 ; push rbx ; ret 0x6202
0x00000000005b4e64 : cmp cl, dh ; ret 0x898
0x000000000043b7b2 : cmp dh, 0x41 ; cmovne eax, edx ; jmp 0x43b7d5
0x00000000005f30e9 : cmp dh, ah ; jmp qword ptr [rdi]
0x00000000006149f9 : cmp dh, ah ; jmp rdi
0x00000000005e7735 : cmp dh, al ; call qword ptr [rax]
0x00000000005e7725 : cmp dh, al ; jmp rax
0x0000000000599100 : cmp dh, al ; or al, 0xffffffffffffffc0 ; pop rbx ; in eax, dx ; jl 0x5990ed ; ret 0x278f
0x000000000048e262 : cmp dh, bh ; dec dword ptr [rax - 0x77] ; ret
0x0000000000454036 : cmp dh, bl ; rol dword ptr [rcx + 0xf], -0x6d ; ret
0x00000000005b689b : cmp dh, cl ; ret
0x00000000004be70f : cmp dh, dh ; in eax, -0x3c ; ret 0xf6f3
0x0000000000512ecf : cmp dh, dh ; jmp 0x512e9c
0x00000000004be5b6 : cmp dh, dh ; jmp 0xfffffffff7d5a885
0x0000000000513009 : cmp dh, dh ; jmp qword ptr [rsi + 0x4d]
0x00000000004be529 : cmp dh, dh ; loope 0x4be4f5 ; ret 0xf789
0x0000000000513c6c : cmp dh, dh ; ret
0x0000000000512e83 : cmp dh, dh ; ret 0x8b48
0x000000000051300f : cmp dh, dh ; ret 0xe2c4
0x0000000000512f96 : cmp dh, dh ; rol esp, 0x62 ; ret
0x000000000057e198 : cmp dl, bl ; pop rdx ; ret 0xa084
0x0000000000431efa : cmp dl, byte ptr [rdi] ; ret
0x00000000005abe54 : cmp dl, byte ptr [rdx + rcx*2 + 0x26] ; ret 0x5ec7
0x0000000000431f4d : cmp dl, byte ptr es:[rdi] ; ret
0x00000000005b2f7f : cmp dword ptr [edx + 0x42], esi ; ret
0x000000000051d4ee : cmp dword ptr [r10], esp ; clc ; add esp, eax ; ret
0x000000000051d57b : cmp dword ptr [r10], esp ; cld ; add esp, eax ; ret
0x000000000051d467 : cmp dword ptr [r10], esp ; hlt ; add esp, eax ; ret
0x000000000051d357 : cmp dword ptr [r10], esp ; in al, dx ; add esp, eax ; ret
0x00000000004620d8 : cmp dword ptr [rax + 8], edx ; jle 0x4620e9 ; xor eax, eax ; pop rdx ; ret
0x000000000059ff5a : cmp dword ptr [rax - 0x3c0d3a6], ecx ; ret 0xeb49
0x000000000048e95c : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000596a9f : cmp dword ptr [rax], eax ; lahf ; and al, 0xffffffffffffffd8 ; xor al, 0x38 ; ret 0xa070
0x000000000048d795 : cmp dword ptr [rax], eax ; mov eax, 1 ; ret
0x000000000048f2be : cmp dword ptr [rax], eax ; pop rbx ; ret
0x0000000000496467 : cmp dword ptr [rax], eax ; pop rdx ; ret
0x000000000048f235 : cmp dword ptr [rax], eax ; ret
0x000000000048ec18 : cmp dword ptr [rax], eax ; test al, al ; je 0x48ec27 ; pop rbx ; ret
0x000000000048f34b : cmp dword ptr [rax], eax ; test rax, rax ; je 0x48f364 ; call rax
0x000000000048f3c6 : cmp dword ptr [rax], eax ; test rax, rax ; je 0x48f3d8 ; pop rdx ; jmp rax
0x000000000058c2aa : cmp dword ptr [rbp - 0x28], eax ; cwde ; ret 0x4f96
0x00000000005b0b12 : cmp dword ptr [rbp - 0x2c312c3a], esi ; ret 0x1203
0x000000000059775e : cmp dword ptr [rbp - 0x31], esp ; jg 0x5977a4 ; ret
0x00000000005b2b18 : cmp dword ptr [rbp - 0x59], edi ; ret
0x00000000005b072b : cmp dword ptr [rbx + rax*4], edx ; ret
0x00000000005668c3 : cmp dword ptr [rbx - 0x3f7a000e], ecx ; jle 0x5668d6 ; pop rbx ; ret
0x000000000059d224 : cmp dword ptr [rbx], 0xd0e58bdc ; ret
0x00000000005eb1a1 : cmp dword ptr [rbx], eax ; add al, al ; jl 0x5eb1a4 ; jmp qword ptr [rax]
0x00000000005eb191 : cmp dword ptr [rbx], eax ; add byte ptr [rax], dh ; jl 0x5eb194 ; jmp rax
0x00000000004862b6 : cmp dword ptr [rbx], ecx ; add byte ptr [rcx], bh ; ret
0x00000000005aac3c : cmp dword ptr [rcx + 0x27199025], eax ; ret 0xcac0
0x000000000058b691 : cmp dword ptr [rcx + 0x6be75e5a], ebx ; push rbp ; stc ; ret 0x98f0
0x00000000004437c9 : cmp dword ptr [rcx - 0x7cb70001], -0x3c ; pop rbx ; ret
0x00000000004b89eb : cmp dword ptr [rcx], 0xc0310001 ; pop rdx ; ret
0x00000000005a9779 : cmp dword ptr [rcx], edi ; ret
0x00000000004ff2d7 : cmp dword ptr [rdi + 0x20], 0x10 ; jne 0x4ff30f ; pop r9 ; jmp rax
0x0000000000559c02 : cmp dword ptr [rdi + 4], 0 ; je 0x559c13 ; xor eax, eax ; ret
0x0000000000548899 : cmp dword ptr [rdi], 2 ; jne 0x5488ab ; mov rax, qword ptr [rdi + 0x28] ; ret
0x0000000000431f6a : cmp dword ptr [rdi], edx ; ret
0x000000000059dab4 : cmp dword ptr [rdx + 0x1bf8d7e5], edi ; adc al, -0x70 ; ret
0x000000000057da11 : cmp dword ptr [rdx + 0x2bcdf641], eax ; xchg eax, ebx ; ret
0x00000000005b2f80 : cmp dword ptr [rdx + 0x42], esi ; ret
0x0000000000478aa3 : cmp dword ptr [rdx - 0x76b70008], edx ; ret
0x000000000051d4ef : cmp dword ptr [rdx], esp ; clc ; add esp, eax ; ret
0x000000000051d57c : cmp dword ptr [rdx], esp ; cld ; add esp, eax ; ret
0x000000000051d468 : cmp dword ptr [rdx], esp ; hlt ; add esp, eax ; ret
0x000000000051d358 : cmp dword ptr [rdx], esp ; in al, dx ; add esp, eax ; ret
0x0000000000594eec : cmp dword ptr [rip - 0x1e3d596c], edi ; rcr byte ptr [rdi] ; ret 0x2a90
0x000000000058d620 : cmp dword ptr [rsi + 0x64], edi ; mov edx, 0xc2ac05eb ; jmp qword ptr gs:[rbx]
0x00000000005abdc0 : cmp dword ptr [rsi - 0x76], 0x61f28b63 ; xchg eax, ebp ; ret
0x00000000004ee0c3 : cmp dword ptr [rsi*2 + 0x618b4c25], eax ; or dh, dh ; ret 0x4902
0x00000000005b072a : cmp dword ptr ds:[rbx + rax*4], edx ; ret
0x0000000000564efe : cmp eax, 0 ; cmove rax, rcx ; ret
0x00000000004b70b0 : cmp eax, 0x149ae8 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000060ff1d : cmp eax, 0x17a00002 ; call qword ptr [rax]
0x000000000057d89a : cmp eax, 0x1c7c2621 ; sub al, 0xf ; cmc ; ret 0xf961
0x00000000005aeb8f : cmp eax, 0x206348b8 ; push rbx ; ret 0x6202
0x00000000005b4c92 : cmp eax, 0x25c65510 ; ret 0xf7ea
0x000000000055bb49 : cmp eax, 0x2cf9b2 ; ret
0x000000000055b662 : cmp eax, 0x2cfe79 ; ret
0x0000000000549131 : cmp eax, 0x2e568e ; ret
0x0000000000548682 : cmp eax, 0x2e6119 ; ret
0x000000000050d172 : cmp eax, 0x3214d1 ; ret
0x00000000004e9229 : cmp eax, 0x33dc56 ; ret
0x00000000004e6652 : cmp eax, 0x347f71 ; ret
0x00000000004cfbeb : cmp eax, 0x35e3ef ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc208
0x00000000004cb981 : cmp eax, 0x360ae2 ; ret
0x00000000004c5f92 : cmp eax, 0x366471 ; ret
0x00000000004bc132 : cmp eax, 0x3702c9 ; ret
0x000000000049c6a2 : cmp eax, 0x38f251 ; ret
0x000000000049a822 : cmp eax, 0x3910c9 ; ret
0x0000000000496442 : cmp eax, 0x3954a1 ; ret
0x000000000048f3b2 : cmp eax, 0x39c521 ; ret
0x000000000048f2d2 : cmp eax, 0x39c5f1 ; ret
0x000000000048f282 : cmp eax, 0x39c629 ; ret
0x000000000048f262 : cmp eax, 0x39c639 ; ret
0x000000000048f272 : cmp eax, 0x39c641 ; ret
0x000000000055fb9f : cmp eax, 0x39fffda0 ; ret
0x0000000000443342 : cmp eax, 0x3db891 ; ret
0x0000000000429909 : cmp eax, 0x401eca ; ret
0x00000000004a7b3f : cmp eax, 0x48003847 ; lea edi, dword ptr [rsp + 8] ; call rbx
0x000000000054dfaf : cmp eax, 0x48fffebc ; add esp, 0x78 ; ret
0x00000000005425db : cmp eax, 0x5be889ff ; pop r14 ; pop rbp ; ret
0x00000000005569ae : cmp eax, 0x615f5f64 ; pop rdi ; ret 0xbe3e
0x000000000059adfc : cmp eax, 0x621436d5 ; ret
0x00000000005b2f7d : cmp eax, 0x72396781 ; ret
0x0000000000511b29 : cmp eax, 0x8948c4d4 ; ret 0xf48
0x00000000004700e0 : cmp eax, 0x8948ffff ; ret
0x00000000005a3e92 : cmp eax, 0xa3f23e83 ; ret 0x3017
0x0000000000447627 : cmp eax, 0xb954cee ; cli ; ret
0x0000000000439ba4 : cmp eax, 0xc031fffe ; pop rbx ; ret
0x000000000057e617 : cmp eax, 0xc3c0bdae ; ret 0x4958
0x00000000005aae44 : cmp eax, 0xdd6d2a48 ; ret 0xea0d
0x000000000040233d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x402350 ; pop rbp ; ret
0x0000000000594eed : cmp eax, 0xe1c2a694 ; rcr byte ptr [rdi] ; ret 0x2a90
0x0000000000509285 : cmp eax, 0xe8ff894c ; ret 0x14
0x000000000046dc9a : cmp eax, 0xfb83000f ; add bh, byte ptr [rax + rdi*2 - 0x7d] ; ret
0x00000000005962eb : cmp eax, 0xfdd781d8 ; lea esp, dword ptr [rax] ; sub al, 0x5d ; ret
0x00000000004e2235 : cmp eax, 6 ; jl 0x4e2199 ; ret
0x00000000004125d2 : cmp eax, 8 ; jne 0x412595 ; ret
0x00000000004d8ec9 : cmp eax, 8 ; jne 0x4d8ea5 ; ret
0x00000000004d8f02 : cmp eax, 8 ; jne 0x4d8ee5 ; ret
0x00000000004b6931 : cmp eax, dword ptr [rax + rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005efdad : cmp eax, dword ptr [rax] ; add byte ptr [rax], ah ; out -0x1d, al ; call qword ptr [rsi]
0x00000000005efdf5 : cmp eax, dword ptr [rax] ; add byte ptr [rax], bh ; out -0x1d, al ; call qword ptr [rdx]
0x00000000005efddd : cmp eax, dword ptr [rax] ; add byte ptr [rax], dh ; out -0x1d, al ; call qword ptr [rdx]
0x00000000005efd7d : cmp eax, dword ptr [rax] ; add byte ptr [rax], dl ; out -0x1d, al ; call qword ptr [rsi]
0x0000000000487994 : cmp eax, dword ptr [rax] ; sete al ; movzx eax, al ; pop rbx ; ret
0x00000000005eb201 : cmp eax, dword ptr [rbx] ; add al, dl ; test esi, edi ; call rax
0x00000000005e3499 : cmp eax, dword ptr [rcx] ; add al, dl ; cmp al, ch ; call qword ptr [rax]
0x00000000005ffd4d : cmp eax, dword ptr [rcx] ; add byte ptr [rax], al ; mov ch, bl ; jmp qword ptr [rsi]
0x00000000005ffd35 : cmp eax, dword ptr [rcx] ; add byte ptr [rax], cl ; mov ch, bl ; call qword ptr [rax]
0x00000000005b7128 : cmp eax, dword ptr [rdi + 0x63] ; ret
0x00000000005e7189 : cmp eax, dword ptr [rdx] ; add al, ah ; fsubr st(7) ; jmp qword ptr [rax]
0x00000000005b7168 : cmp eax, dword ptr [rdx] ; xchg eax, esi ; xor dword ptr [rcx], 0x58 ; ret
0x00000000004429b4 : cmp eax, ebx ; sete al ; movzx eax, al ; pop rbx ; ret
0x000000000059c4e9 : cmp eax, ebx ; xor eax, 0xfd90d0ad ; ret 0x9661
0x0000000000442a57 : cmp eax, ecx ; sete al ; movzx eax, al ; pop rbx ; ret
0x0000000000539bd1 : cmp eax, edi ; cli ; lcall ptr [rbx + 0x41] ; pop rsi ; pop r15 ; ret
0x000000000046b3f2 : cmp eax, edx ; jae 0x46b3d7 ; mov eax, r8d ; ret
0x000000000047a666 : cmp eax, edx ; jb 0x47a654 ; ret
0x00000000004b7004 : cmp ebp, -1 ; test eax, eax ; jle 0x4b7015 ; pop rbx ; ret
0x00000000004e28ee : cmp ebp, dword ptr [rbx + 0x18] ; jb 0x4e28b9 ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000045a2be : cmp ebp, dword ptr [rdi + rcx - 0x6c] ; ret 0xb60f
0x0000000000594d23 : cmp ebp, dword ptr [rdx - 0x1f383af5] ; pop rbp ; nop ; ret 0x40fb
0x0000000000542a7a : cmp ebp, eax ; jl 0x542a43 ; jmp 0x542ad3
0x00000000004b8e48 : cmp ebp, eax ; ret 0x2d4
0x0000000000558728 : cmp ebp, eax ; ret 0xee8e
0x00000000004782ed : cmp ebp, ecx ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000059407f : cmp ebp, ecx ; xchg eax, ebx ; ret 0x6d6e
0x000000000056629e : cmp ebp, edi ; dec dword ptr [rax - 0x77] ; ret
0x00000000005e4045 : cmp ebp, edx ; call rax
0x00000000004f28c1 : cmp ebx, dword ptr [rax - 1] ; dec dword ptr [rax - 0x77] ; ret
0x00000000005492f2 : cmp ebx, eax ; setne al ; movzx eax, al ; pop rbx ; ret
0x000000000044dfe0 : cmp ebx, ebp ; ret
0x00000000004d8f98 : cmp ecx, 0x100 ; jne 0x4d8f28 ; ret
0x000000000054842d : cmp ecx, 1 ; ja 0x54843f ; mov rax, qword ptr [rdi + 0x18] ; ret
0x00000000005488be : cmp ecx, 1 ; ja 0x5488ce ; mov eax, dword ptr [rdi + 0x20] ; ret
0x00000000005488de : cmp ecx, 1 ; ja 0x5488ee ; mov eax, dword ptr [rdi + 0x24] ; ret
0x000000000049fb03 : cmp ecx, 1 ; sbb eax, eax ; or eax, ecx ; pop rdx ; ret
0x000000000054887e : cmp ecx, 3 ; jne 0x548890 ; mov rax, qword ptr [rdi + 0x20] ; ret
0x0000000000443f05 : cmp ecx, 7 ; jne 0x443f1a ; imul eax, eax, 0x3c ; add edx, eax ; jmp 0x443f25
0x00000000004261b3 : cmp ecx, 8 ; jl 0x4261a5 ; ret
0x00000000004ba397 : cmp ecx, dword ptr [rax - 0x7d] ; ret
0x00000000004fd6dd : cmp ecx, dword ptr [rcx + rcx*4 - 0xa] ; call 0x539986
0x0000000000538fe6 : cmp ecx, dword ptr [rcx - 0x7d] ; jmp qword ptr [rax]
0x000000000046e11b : cmp ecx, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000046e13f : cmp ecx, dword ptr [rdi] ; add byte ptr [rcx], ch ; ret
0x000000000046e13e : cmp ecx, dword ptr ds:[rdi] ; add byte ptr [rcx], ch ; ret
0x00000000005aba5c : cmp ecx, edi ; in eax, 0x4e ; ret
0x0000000000530a74 : cmp ecx, edx ; jb 0x530a69 ; pop rbx ; pop r14 ; pop r15 ; ret
0x00000000005e8525 : cmp ecx, esi ; call rax
0x0000000000539b21 : cmp ecx, esi ; jne 0x539b17 ; mov dword ptr [rdi], r8d ; ret
0x000000000044d42d : cmp edi, 0 ; je 0x44d43c ; ud2 ; ret
0x0000000000477e4e : cmp edi, 2 ; jb 0x477e5c ; xor eax, eax ; ret
0x0000000000456559 : cmp edi, 2 ; jne 0x45656a ; add eax, 3 ; ret
0x000000000040acb8 : cmp edi, 3 ; jbe 0x40acc7 ; xor eax, eax ; ret
0x000000000040afb8 : cmp edi, 3 ; jbe 0x40afc7 ; xor eax, eax ; ret
0x000000000040b3e8 : cmp edi, 3 ; jbe 0x40b3f7 ; xor eax, eax ; ret
0x0000000000437682 : cmp edi, 5 ; jbe 0x437691 ; xor eax, eax ; ret
0x00000000005b2a10 : cmp edi, dword ptr [rcx + 0x30] ; ret 0x958e
0x00000000005b28ee : cmp edi, dword ptr [rdx] ; ret
0x00000000004362f9 : cmp edi, eax ; jb 0x4362e7 ; mov eax, ebx ; pop rbx ; ret
0x00000000005e6cb5 : cmp edi, ebp ; jmp rax
0x000000000044be71 : cmp edi, ebp ; ret
0x0000000000532539 : cmp edi, ebp ; ret 0x3148
0x0000000000532641 : cmp edi, ebp ; ret 0x314c
0x00000000004492c4 : cmp edi, ebp ; ret 0x42c4
0x000000000044bda8 : cmp edi, ebp ; ret 0xac0f
0x00000000004492b0 : cmp edi, ebp ; ret 0xc3c4
0x0000000000527249 : cmp edi, ebx ; ret 0xc1c4
0x000000000054b856 : cmp edi, edi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000594021 : cmp edi, edi ; ret 0x8087
0x00000000004bd268 : cmp edi, edx ; dec dword ptr [rax - 0x77] ; ret
0x000000000048e2ad : cmp edi, esi ; inc dword ptr [rbp - 0xe78b40] ; ret
0x00000000004b84f7 : cmp edi, esi ; je 0x4b8503 ; pop rax ; jmp rcx
0x00000000005e2c7d : cmp edi, esp ; call rax
0x00000000004e056f : cmp edx, -1 ; jge 0x4e0580 ; mov eax, ebx ; pop rbx ; ret
0x00000000005175d5 : cmp edx, 0xf ; jle 0x5175c5 ; ret
0x0000000000543a43 : cmp edx, dword ptr [rax + rax + 0x5a] ; ret
0x000000000059f6cb : cmp edx, dword ptr [rax] ; ret
0x000000000059a58f : cmp edx, dword ptr [rbp - 0x59e6c243] ; ret
0x00000000005aa731 : cmp edx, dword ptr [rbx] ; mov bh, 4 ; ret
0x0000000000425fea : cmp edx, dword ptr [rcx] ; add byte ptr [rcx + 0x5e415be8], cl ; pop rbp ; ret
0x0000000000431dec : cmp edx, dword ptr [rdi] ; ret
0x000000000046b3b2 : cmp edx, dword ptr [rsi + 8] ; jle 0x46b3c7 ; mov eax, r9d ; ret
0x0000000000500a1b : cmp edx, dword ptr [rsi] ; cmove rax, rcx ; ret
0x00000000004358ed : cmp edx, eax ; jb 0x4358e4 ; ret
0x00000000005991d8 : cmp edx, edi ; ret
0x00000000004b944d : cmp edx, esi ; jb 0x4b9446 ; pop rax ; jmp r8
0x000000000043658a : cmp esi, -1 ; cmove eax, edi ; pop rbx ; ret
0x0000000000564e6a : cmp esi, 0 ; jne 0x564e35 ; ret
0x00000000005a458e : cmp esi, dword ptr [rsi] ; or byte ptr [rsi + 0x48], ch ; ret
0x00000000005a60e1 : cmp esi, dword ptr [rsi] ; test al, -0x7d ; and eax, 0xb0a61ee3 ; ret 0xb9c9
0x000000000048f263 : cmp esi, eax ; cmp dword ptr [rax], eax ; ret
0x0000000000539814 : cmp esi, eax ; jl 0x539807 ; mov dword ptr [rdi], r8d ; ret
0x0000000000607bc9 : cmp esi, ebp ; call qword ptr [rdi]
0x0000000000607be1 : cmp esi, ebp ; call qword ptr [rsi]
0x000000000048e252 : cmp esi, edi ; dec dword ptr [rax - 0x77] ; ret
0x00000000004a020c : cmp esi, edx ; je 0x4a0215 ; ret
0x0000000000429ab9 : cmp esi, esi ; ret 0xb804
0x0000000000539813 : cmp esi, r8d ; jl 0x539808 ; mov dword ptr [rdi], r8d ; ret
0x00000000005b4992 : cmp esp, dword ptr [rsi] ; sub dword ptr [rbx], edx ; call qword ptr [rsi]
0x00000000005aff10 : cmp esp, ebx ; push rax ; mov dh, -0x6e ; ret 0x54c
0x00000000004b944c : cmp r10, rsi ; jb 0x4b9447 ; pop rax ; jmp r8
0x000000000046b3b1 : cmp r10d, dword ptr [rsi + 8] ; jle 0x46b3c8 ; mov eax, r9d ; ret
0x000000000044dfdf : cmp r11d, ebp ; ret
0x0000000000527a1f : cmp r12b, al ; ret
0x00000000005a70c3 : cmp r12b, byte ptr [r13 + 0x22] ; ret 0xb805
0x0000000000529d68 : cmp r12b, r8b ; sar dword ptr [rcx + 0x6e], 0x51 ; cmp ah, al ; ret
0x000000000056629d : cmp r13, r15 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000532538 : cmp r15d, ebp ; ret 0x3148
0x0000000000532640 : cmp r15d, ebp ; ret 0x314c
0x00000000005ffd4c : cmp r8d, dword ptr [rcx] ; add byte ptr [rax], al ; mov ch, bl ; jmp qword ptr [rsi]
0x0000000000539b20 : cmp r9d, esi ; jne 0x539b18 ; mov dword ptr [rdi], r8d ; ret
0x0000000000564efd : cmp rax, 0 ; cmove rax, rcx ; ret
0x00000000004125d1 : cmp rax, 8 ; jne 0x412596 ; ret
0x00000000004d8ec8 : cmp rax, 8 ; jne 0x4d8ea6 ; ret
0x00000000004d8f01 : cmp rax, 8 ; jne 0x4d8ee6 ; ret
0x000000000046b3f1 : cmp rax, rdx ; jae 0x46b3d8 ; mov eax, r8d ; ret
0x000000000047a665 : cmp rax, rdx ; jb 0x47a655 ; ret
0x00000000004d8f97 : cmp rcx, 0x100 ; jne 0x4d8f29 ; ret
0x000000000049fb02 : cmp rcx, 1 ; sbb eax, eax ; or eax, ecx ; pop rdx ; ret
0x000000000044d42c : cmp rdi, 0 ; je 0x44d43d ; ud2 ; ret
0x00000000004362f8 : cmp rdi, rax ; jb 0x4362e8 ; mov eax, ebx ; pop rbx ; ret
0x00000000004b84f6 : cmp rdi, rsi ; je 0x4b8504 ; pop rax ; jmp rcx
0x0000000000500a1a : cmp rdx, qword ptr [rsi] ; cmove rax, rcx ; ret
0x00000000004358ec : cmp rdx, rax ; jb 0x4358e5 ; ret
0x0000000000564e69 : cmp rsi, 0 ; jne 0x564e36 ; ret
0x00000000004a020b : cmp rsi, rdx ; je 0x4a0216 ; ret
0x000000000043b7b1 : cmp sil, 0x41 ; cmovne eax, edx ; jmp 0x43b7d6
0x0000000000432bfd : cmpsb byte ptr [rsi], byte ptr [rdi] ; add al, byte ptr [rax] ; add byte ptr [rax + 0x57403b], bh ; ret
0x0000000000457284 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add al, byte ptr [rax] ; add byte ptr [rax - 1], cl ; ret 0xc239
0x00000000005575db : cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], 0 ; add byte ptr [rax - 1], cl ; ret
0x000000000060680d : cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rax], eax ; and ah, bh ; in eax, dx ; call qword ptr [rcx]
0x00000000005b0a04 : cmpsb byte ptr [rsi], byte ptr [rdi] ; call 0xffffffffc4570891
0x00000000005412a2 : cmpsb byte ptr [rsi], byte ptr [rdi] ; clc ; dec dword ptr [rax - 0x77] ; fucompi st(0) ; ret
0x00000000005b0810 : cmpsb byte ptr [rsi], byte ptr [rdi] ; cli ; ret 0x3c61
0x00000000005a5daf : cmpsb byte ptr [rsi], byte ptr [rdi] ; cmc ; ret 0xe329
0x000000000054b646 : cmpsb byte ptr [rsi], byte ptr [rdi] ; in eax, -2 ; dec dword ptr [rax - 0x77] ; ret
0x00000000005a453b : cmpsb byte ptr [rsi], byte ptr [rdi] ; int 0xc2
0x0000000000497966 : cmpsb byte ptr [rsi], byte ptr [rdi] ; jmp 0xffffffffc3a47975
0x000000000054ab91 : cmpsb byte ptr [rsi], byte ptr [rdi] ; lock dec dword ptr [rax - 0x77] ; ret
0x00000000005e669d : cmpsb byte ptr [rsi], byte ptr [rdi] ; out dx, al ; call rax
0x0000000000609839 : cmpsb byte ptr [rsi], byte ptr [rdi] ; out dx, al ; jmp qword ptr [rbx]
0x000000000058cc79 : cmpsb byte ptr [rsi], byte ptr [rdi] ; outsb dx, byte ptr [rsi] ; sub dword ptr [rdx - 3], ecx ; sbb byte ptr [rdx + 0x78], bl ; call qword ptr [rdx]
0x000000000055639b : cmpsb byte ptr [rsi], byte ptr [rdi] ; pop rcx ; add al, 0x51 ; call rdx
0x0000000000599007 : cmpsb byte ptr [rsi], byte ptr [rdi] ; push rax ; jrcxz 0x599053 ; push 0x42 ; sub eax, dword ptr [rdi] ; ret 0xecf9
0x00000000004068fb : cmpsb byte ptr [rsi], byte ptr [rdi] ; push rsi ; add bl, al ; ret
0x000000000059a594 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x0000000000447624 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0x3d23
0x00000000004200c6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xa
0x0000000000594eef : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xd0e1
0x000000000059f438 : cmpsb byte ptr [rsi], byte ptr [rdi] ; sbb eax, 0x474c9580 ; ret 0xb611
0x00000000005a314a : cmpsb byte ptr [rsi], byte ptr [rdi] ; sub eax, 0x4d286d4 ; xchg eax, esp ; cli ; ret 0xeca0
0x0000000000578d93 : cmpsb byte ptr [rsi], byte ptr [rdi] ; sub eax, 0x9f3f0925 ; out 8, al ; ret 0x6132
0x00000000005af3dc : cmpsd dword ptr [rsi], dword ptr [rdi] ; adc dword ptr [rax], ebp ; xchg eax, ebx ; call qword ptr [rcx]
0x00000000005e8d09 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add al, byte ptr [rax] ; jo 0x5e8cf7 ; int1 ; jmp rax
0x00000000004a7ecc : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret
0x000000000041a745 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rdi], cl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005a2923 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rdx], dl ; jne 0x5a28cc ; jb 0x5a2932 ; ret 0x4a9d
0x00000000005948b2 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add cl, al ; xchg eax, edi ; sti ; sub al, -0xf ; ret 0x7130
0x000000000060696d : cmpsd dword ptr [rsi], dword ptr [rdi] ; add dword ptr [rax], eax ; rol byte ptr [rsi + rbp*8], 1 ; jmp qword ptr [rdi]
0x000000000059fbc2 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add dword ptr [rsi], 0xe ; jge 0x59fc1c ; in al, dx ; call rsp
0x00000000004ef14d : cmpsd dword ptr [rsi], dword ptr [rdi] ; idiv bh ; pop rbx ; ret
0x000000000057d7d4 : cmpsd dword ptr [rsi], dword ptr [rdi] ; in al, -0x16 ; add ah, ch ; ret 0xce5
0x0000000000602341 : cmpsd dword ptr [rsi], dword ptr [rdi] ; in al, dx ; call rcx
0x00000000005b1dc5 : cmpsd dword ptr [rsi], dword ptr [rdi] ; jbe 0x5b1d5b ; ret 0x62b7
0x00000000005b5ae8 : cmpsd dword ptr [rsi], dword ptr [rdi] ; jne 0x5b5aac ; or al, 0x43 ; ret 0x1595
0x00000000005a9684 : cmpsd dword ptr [rsi], dword ptr [rdi] ; mov bh, ch ; push rbp ; xchg eax, edi ; jrcxz 0x5a963c ; pop rdx ; ret 0xd69
0x0000000000531fc9 : cmpsd dword ptr [rsi], dword ptr [rdi] ; or dl, byte ptr [rbx - 0x2a586eb9] ; ret 0xa88f
0x00000000005ad3e0 : cmpsd dword ptr [rsi], dword ptr [rdi] ; out -0x24, al ; test byte ptr [rbx - 0x18], 0x27 ; fcmovbe st(0), st(1) ; ret 0x13e6
0x0000000000609889 : cmpsd dword ptr [rsi], dword ptr [rdi] ; out dx, al ; jmp qword ptr [rbx]
0x00000000005a22fe : cmpsd dword ptr [rsi], dword ptr [rdi] ; pop rdx ; sbb bh, byte ptr es:[rcx - 0x47] ; ret
0x000000000059da42 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x00000000005a5d7f : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xaed4
0x00000000005729a0 : cmpsd dword ptr [rsi], dword ptr [rdi] ; rol dword ptr [rdx], 0 ; add byte ptr [rax], al ; add byte ptr [rdx], cl ; ret 0x42
0x00000000005a44a1 : cmpsd dword ptr [rsi], dword ptr [rdi] ; xlatb ; ret 0x779c
0x000000000060696c : cmpsd dword ptr fs:[rsi], dword ptr [rdi] ; add dword ptr [rax], eax ; rol byte ptr [rsi + rbp*8], 1 ; jmp qword ptr [rdi]
0x000000000059dac9 : comiss xmm7, xmmword ptr [rax + 0x760883fd] ; out dx, eax ; ret
0x00000000005a04c6 : cqo ; cld ; stosb byte ptr [rdi], al ; sub esp, ebx ; or ebx, dword ptr [rbx] ; ret
0x00000000004e82ee : cqo ; int1 ; dec dword ptr [rax - 0x77] ; ret
0x00000000005a81c6 : cqo ; mov ebx, 0x88335561 ; ret
0x0000000000516934 : cvtdq2ps xmm0, xmmword ptr [rcx + 0x5e] ; pop rbp ; ret
0x0000000000516933 : cvtdq2ps xmm8, xmmword ptr [rcx + 0x5e] ; pop rbp ; ret
0x00000000005f28f8 : cwde ; adc ah, ch ; call rdx
0x00000000005ed478 : cwde ; adc al, -0x1e ; call rdi
0x00000000005e8931 : cwde ; add al, byte ptr [rax] ; jo 0x5e88ce ; int1 ; call rax
0x000000000042c1c8 : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x000000000042c105 : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x68], cl ; pop rdx ; ret
0x0000000000548e9e : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret
0x0000000000496a90 : cwde ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0x41e8
0x000000000057cda3 : cwde ; and eax, 0x9d5648f7 ; push rsi ; pop rsi ; call rax
0x00000000005556b4 : cwde ; call 0x785e196f
0x0000000000612a21 : cwde ; call qword ptr [rbx]
0x00000000005e61c8 : cwde ; cli ; add dword ptr [rax], eax ; adc byte ptr [rdx], ch ; out dx, al ; call rax
0x000000000045892a : cwde ; cli ; dec dword ptr [rax - 0x75] ; add byte ptr [rax - 1], cl ; ret
0x00000000005e5a00 : cwde ; fiadd dword ptr [rcx] ; add byte ptr [rax], ah ; or ch, ch ; call rax
0x00000000005e7dd8 : cwde ; imul eax, dword ptr [rdx], 0xf0a4f000 ; call rax
0x0000000000617248 : cwde ; in al, -0xc ; call qword ptr [rsi]
0x00000000005ebfb0 : cwde ; insd dword ptr [rdi], dx ; add eax, dword ptr [rax] ; jo 0x5ec02a ; clc ; call rax
0x0000000000599a04 : cwde ; ja 0x599a53 ; popfq ; out -9, eax ; xchg eax, esi ; ret
0x0000000000594aa2 : cwde ; jmp qword ptr [rbx]
0x00000000005a6422 : cwde ; jno 0x5a63bb ; jmp 0xffffffffc426ef89
0x00000000005b4621 : cwde ; lodsb al, byte ptr [rsi] ; ret 0x5624
0x00000000005a82e4 : cwde ; loope 0x5a8322 ; je 0x5a832e ; ret
0x000000000057da2f : cwde ; mov al, -0x10 ; in al, dx ; adc esi, dword ptr [rdx - 0x4d] ; call rbx
0x00000000005e9450 : cwde ; mov byte ptr [rdx], 0 ; and byte ptr [rbx - 0xd], cl ; call rax
0x0000000000609a58 : cwde ; mov cl, -0x12 ; call qword ptr [rdi]
0x00000000005e9270 : cwde ; mov ebp, 0xbd000002 ; call rax
0x00000000004d7af4 : cwde ; mov word ptr [rdx], es ; add byte ptr [rax - 0x77], cl ; ret
0x000000000046aa65 : cwde ; movzx eax, byte ptr [rax + 0x57a800] ; ret
0x00000000005f4a58 : cwde ; out -0x1a, al ; jmp rbx
0x00000000005e5f50 : cwde ; out dx, eax ; add dword ptr [rax], eax ; loopne 0x5e5ef7 ; in eax, dx ; call rax
0x0000000000541dd2 : cwde ; pop rbp ; add cl, ch ; salc ; ret
0x000000000042c10a : cwde ; pop rdx ; ret
0x0000000000564c71 : cwde ; ret
0x00000000005b19c2 : cwde ; ret 0x1955
0x000000000058c2ad : cwde ; ret 0x4f96
0x0000000000595f6d : cwde ; ret 0x978
0x00000000005a1a41 : cwde ; ret 0x98e5
0x00000000005e5498 : cwde ; ret 1
0x000000000060a458 : cwde ; salc ; out dx, al ; jmp rsi
0x0000000000600d18 : cwde ; sub al, -0x14 ; call rcx
0x00000000005e6d00 : cwde ; sub byte ptr [rdx], al ; add byte ptr [rax], al ; push -0x11 ; call rax
0x00000000004a2d10 : cwde ; sub eax, 0xf480082 ; ret
0x00000000004f06b8 : dec byte ptr [rax + 0x63] ; ret 0x8a41
0x00000000004b6e5e : dec byte ptr [rax + rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004bc6ce : dec byte ptr [rax - 0x75] ; push rsp ; and al, 0x10 ; call rax
0x00000000004fe67b : dec byte ptr [rax - 0x77] ; ret 0x1ce8
0x0000000000558ab9 : dec byte ptr [rax - 0x77] ; ret 0x2ee8
0x00000000004fe651 : dec byte ptr [rax - 0x77] ; ret 0x46e8
0x00000000004de222 : dec byte ptr [rax - 0x77] ; ret 0x85e8
0x0000000000537f74 : dec byte ptr [rax - 0x77] ; ret 0x8948
0x00000000004ddf62 : dec byte ptr [rax - 0x77] ; ret 0xa5e8
0x0000000000499c6f : dec byte ptr [rax - 0x77] ; ret 0xd8e8
0x0000000000537d0b : dec byte ptr [rax - 0x77] ; ret 0xdce8
0x0000000000499452 : dec byte ptr [rax - 0x77] ; ret 0xe5e8
0x0000000000463b2b : dec byte ptr [rax - 0x77] ; ret 0xe958
0x000000000044083f : dec byte ptr [rax - 0x7d] ; ret
0x0000000000538dba : dec byte ptr [rax - 0x7d] ; ret 0x4103
0x0000000000430511 : dec byte ptr [rax - 0x7d] ; ret 0x48fc
0x0000000000456571 : dec byte ptr [rax] ; inc eax ; test esi, esi ; jg 0x456578 ; ret
0x00000000004638a3 : dec byte ptr [rbp - 0x77] ; clc ; call rax
0x000000000048aae8 : dec byte ptr [rbp - 0x7b] ; div byte ptr [rbx + rbp - 0xa] ; ret
0x000000000057cbf6 : dec byte ptr [rcx + 0x3fab0950] ; ret 0x5ff6
0x00000000005abe50 : dec byte ptr [rcx + 0x543a2a6f] ; ret 0x5ec7
0x00000000004c4f22 : dec byte ptr [rcx + rcx*4 - 0x17] ; call rax
0x00000000004c500e : dec byte ptr [rcx + rcx*4 - 0x17] ; mov rbx, qword ptr [rsp + 0x40] ; call rbx
0x00000000004c557b : dec byte ptr [rcx + rcx*4 - 0x1e] ; mov rcx, rbx ; call r14
0x000000000053b638 : dec byte ptr [rcx + rcx*4 - 0xe] ; call rax
0x00000000004ffacb : dec byte ptr [rcx + rcx*4 - 0xe] ; pop rbx ; pop r14 ; pop r15 ; jmp rax
0x000000000047f16b : dec byte ptr [rcx + rcx*4 - 6] ; call r14
0x0000000000472585 : dec byte ptr [rcx + rcx*4 - 6] ; call rcx
0x00000000004c5c44 : dec byte ptr [rcx + rcx*4 - 6] ; mov rcx, r12 ; call rax
0x00000000004c3b12 : dec byte ptr [rcx + rcx*4 - 6] ; mov rcx, r13 ; call rax
0x00000000004c5026 : dec byte ptr [rcx + rcx*4 - 6] ; mov rcx, r13 ; call rbx
0x000000000050dfb3 : dec byte ptr [rcx - 0x77] ; ret 0x2944
0x0000000000489ad9 : dec byte ptr [rdx] ; add byte ptr [rbp - 0xef8b40], al ; ret
0x0000000000489cfb : dec byte ptr [rdx] ; add byte ptr [rcx], bh ; ret
0x000000000046314e : dec dword ptr [r15 - 0x73] ; push rsp ; ret
0x00000000004417eb : dec dword ptr [r8 - 0x7d] ; ret 0x3b04
0x00000000004a310c : dec dword ptr [rax + 0x29] ; ret
0x000000000042c0e5 : dec dword ptr [rax + 0x31] ; ret 0x8b48
0x000000000045ba64 : dec dword ptr [rax + 0x39] ; ror dword ptr [rdi], 1 ; xchg eax, edi ; ret
0x00000000005e373f : dec dword ptr [rax + 0x49] ; add dword ptr [rax], eax ; push rax ; ret 0xffe8
0x000000000042a36f : dec dword ptr [rax + 0x63] ; ret
0x000000000050f91e : dec dword ptr [rax + 0x63] ; ret 0x8041
0x0000000000478b30 : dec dword ptr [rax + 0x63] ; ret 0x8d48
0x00000000004ada43 : dec dword ptr [rax + 1] ; ret 0xc148
0x0000000000558b28 : dec dword ptr [rax + 9] ; ret
0x00000000005eaaaf : dec dword ptr [rax - 0x1ffffce4] ; ret
0x00000000005e285f : dec dword ptr [rax - 0x3ffffef9] ; ret
0x000000000058ed93 : dec dword ptr [rax - 0x56] ; mov dh, -0x77 ; ret 0xa79c
0x00000000005e67c7 : dec dword ptr [rax - 0x5ffffdee] ; ret 0xffee
0x000000000048f3d4 : dec dword ptr [rax - 0x68] ; pop rdx ; ret
0x000000000054aa21 : dec dword ptr [rax - 0x75] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004587be : dec dword ptr [rax - 0x75] ; add byte ptr [rax - 1], cl ; ret
0x00000000004d0d53 : dec dword ptr [rax - 0x75] ; add eax, 0x35d2dd ; pop rdx ; jmp qword ptr [rax]
0x00000000004d0c93 : dec dword ptr [rax - 0x75] ; add eax, 0x35d39d ; pop rdx ; ret
0x00000000004cbf53 : dec dword ptr [rax - 0x75] ; add eax, 0x360515 ; pop rdx ; ret
0x00000000004298f5 : dec dword ptr [rax - 0x75] ; add eax, 0x401edb ; pop rdx ; ret
0x00000000004ba394 : dec dword ptr [rax - 0x75] ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x00000000004fd6da : dec dword ptr [rax - 0x75] ; cmp ecx, dword ptr [rcx + rcx*4 - 0xa] ; call 0x539989
0x00000000004c5e21 : dec dword ptr [rax - 0x75] ; je 0x4c5e53 ; sbb byte ptr [rcx + rcx*4 - 0x1e], cl ; call rax
0x00000000004684da : dec dword ptr [rax - 0x75] ; jl 0x46850c ; adc byte ptr [rcx], dh ; imul cl ; ret
0x00000000004f9f5a : dec dword ptr [rax - 0x75] ; jl 0x4f9f8b ; adc al, ch ; stosd dword ptr [rdi], eax ; ret
0x000000000050d191 : dec dword ptr [rax - 0x77] ; add eax, 0x3214af ; pop rdx ; ret
0x0000000000504413 : dec dword ptr [rax - 0x77] ; add eax, 0x32a20d ; pop rbx ; ret
0x00000000004dd36e : dec dword ptr [rax - 0x77] ; add eax, 0x350ce2 ; pop rdx ; ret
0x0000000000496461 : dec dword ptr [rax - 0x77] ; add eax, 0x39547f ; pop rdx ; ret
0x00000000004d0b64 : dec dword ptr [rax - 0x77] ; clc ; pop rdx ; ret
0x00000000004cdc72 : dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x41] ; pop rsi ; pop r15 ; ret
0x0000000000477e1f : dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0x000000000055e964 : dec dword ptr [rax - 0x77] ; ficomp word ptr [rbx + 0x41] ; pop rsi ; pop r15 ; jmp rax
0x000000000050abd2 : dec dword ptr [rax - 0x77] ; fimul word ptr [rax - 0x77] ; ret 0x8948
0x00000000004d77ef : dec dword ptr [rax - 0x77] ; fimul word ptr [rax - 0x77] ; ret 0x894c
0x000000000049d55f : dec dword ptr [rax - 0x77] ; fimul word ptr [rax - 0x77] ; ret 0xd5e8
0x000000000046bdc1 : dec dword ptr [rax - 0x77] ; fimul word ptr [rax - 0x77] ; ret 0xf3e8
0x00000000005412a4 : dec dword ptr [rax - 0x77] ; fucompi st(0) ; ret
0x000000000054a9d0 : dec dword ptr [rax - 0x77] ; fucompi st(3) ; ret
0x0000000000467f3e : dec dword ptr [rax - 0x77] ; out dx, eax ; call 0x4641c6
0x0000000000411e67 : dec dword ptr [rax - 0x77] ; out dx, eax ; mov rsi, rbx ; call r14
0x0000000000420222 : dec dword ptr [rax - 0x77] ; ret
0x000000000046e29c : dec dword ptr [rax - 0x77] ; ret 0x3145
0x000000000055f64a : dec dword ptr [rax - 0x77] ; ret 0x758b
0x000000000053ac18 : dec dword ptr [rax - 0x77] ; ret 0x7be
0x0000000000436554 : dec dword ptr [rax - 0x77] ; ret 0x8348
0x000000000050ea83 : dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000403ced : dec dword ptr [rax - 0x77] ; ret 0x8944
0x000000000048832f : dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000565d8e : dec dword ptr [rax - 0x77] ; ret 0x8949
0x0000000000440250 : dec dword ptr [rax - 0x77] ; ret 0x894c
0x000000000053ab8d : dec dword ptr [rax - 0x77] ; ret 0xaebe
0x00000000005426e6 : dec dword ptr [rax - 0x77] ; ret 0xdb31
0x00000000004652c0 : dec dword ptr [rax - 0x77] ; ret 0xed31
0x000000000054306b : dec dword ptr [rax - 0x77] ; ret 0xf6be
0x00000000004e696c : dec dword ptr [rax - 0x7b] ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x00000000004ed87b : dec dword ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], 0x45 ; ret
0x000000000049d173 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rax - 0x77], 5 ; ret 0x38e7
0x000000000046a306 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], -0x7c ; ret
0x000000000049fd8f : dec dword ptr [rax - 0x7b] ; sal byte ptr [rcx + 0x48], -0x7d ; ret
0x00000000004b2944 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rdx + rbx + 0x48], -0x7d ; ret
0x00000000004258ac : dec dword ptr [rax - 0x7d] ; ret
0x00000000004417ec : dec dword ptr [rax - 0x7d] ; ret 0x3b04
0x000000000045297f : dec dword ptr [rax - 0x7d] ; ret 0xf06
0x0000000000452dab : dec dword ptr [rax - 0x7d] ; ret 0xf08
0x00000000004b1918 : dec dword ptr [rax - 0x7f] ; ret
0x00000000005e60df : dec dword ptr [rax - 0xffffe0a] ; ret
0x00000000005e3217 : dec dword ptr [rax - 0xffffecf] ; jmp rdi
0x0000000000470ef8 : dec dword ptr [rax - 1] ; ret
0x00000000004f063f : dec dword ptr [rax - 1] ; ret 0x448b
0x0000000000404cd7 : dec dword ptr [rax - 1] ; ret 0x8b48
0x00000000004d95e3 : dec dword ptr [rax - 1] ; ret 0x8d48
0x0000000000443e35 : dec dword ptr [rax - 1] ; ret 0xfa83
0x00000000005e726f : dec dword ptr [rax] ; add al, byte ptr [rax] ; loopne 0x5e7271 ; out dx, eax ; jmp qword ptr [rax]
0x00000000005ea017 : dec dword ptr [rax] ; add al, byte ptr [rax] ; or al, 0xfffffff6 ; jmp qword ptr [rax]
0x00000000005e752f : dec dword ptr [rax] ; add al, byte ptr [rax] ; push rax ; and al, dh ; jmp qword ptr [rax]
0x00000000005ebdaf : dec dword ptr [rax] ; add ax, word ptr [rax] ; push rax ; clc ; jmp qword ptr [rax]
0x00000000005e6307 : dec dword ptr [rax] ; add byte ptr [rdx], al ; add al, dh ; push rax ; out dx, al ; jmp qword ptr [rax]
0x00000000005e762f : dec dword ptr [rax] ; add r8b, byte ptr [r8] ; push rax ; and dh, al ; jmp qword ptr [rax]
0x00000000005e2edf : dec dword ptr [rax] ; and al, 1 ; add al, dh ; mov ah, bh ; jmp qword ptr [rax]
0x00000000005e6b67 : dec dword ptr [rax] ; and byte ptr [rdx], al ; add byte ptr [rax - 7], dh ; out dx, al ; jmp qword ptr [rax]
0x00000000005eb11f : dec dword ptr [rax] ; cmp byte ptr [rbx], al ; add byte ptr [rax], dh ; jbe 0x5eb126 ; jmp qword ptr [rax]
0x00000000005e55cf : dec dword ptr [rax] ; enter 1, -0x50 ; mov ebp, esp ; jmp qword ptr [rax]
0x00000000005e1cdf : dec dword ptr [rax] ; fadd qword ptr [rax] ; add al, dh ; mov esp, fs ; jmp qword ptr [rax]
0x00000000005e59d7 : dec dword ptr [rax] ; fiadd dword ptr [rcx] ; add byte ptr [rax + 6], dl ; in eax, dx ; jmp qword ptr [rax]
0x00000000005e1f9f : dec dword ptr [rax] ; in eax, 0 ; add al, al ; mov cl, -0x1c ; jmp qword ptr [rax]
0x00000000005e5c6f : dec dword ptr [rax] ; in eax, 1 ; add byte ptr [rax], ah ; pop rsp ; in eax, dx ; jmp qword ptr [rax]
0x00000000005ec0bf : dec dword ptr [rax] ; jno 0x5ec0ce ; add al, dh ; jo 0x5ec0c7 ; jmp qword ptr [rax]
0x00000000005e9b17 : dec dword ptr [rax] ; jrcxz 0x5e9b25 ; add byte ptr [rax], dh ; hlt ; cmc ; jmp qword ptr [rax]
0x00000000005e472f : dec dword ptr [rax] ; lea eax, dword ptr [rcx] ; add al, dh ; loopne 0x5e4729 ; jmp qword ptr [rax]
0x00000000005e8e47 : dec dword ptr [rax] ; lodsb al, byte ptr [rsi] ; add al, byte ptr [rax] ; cmc ; int1 ; jmp qword ptr [rax]
0x00000000005e5bcf : dec dword ptr [rax] ; loop 0x5e5bdc ; add byte ptr [rax + 0x32], dh ; in eax, dx ; jmp qword ptr [rax]
0x00000000005e9a17 : dec dword ptr [rax] ; loopne 0x5e9a25 ; add byte ptr [rax], dh ; cmc ; jmp qword ptr [rax]
0x00000000005e4647 : dec dword ptr [rax] ; mov al, byte ptr [rcx] ; add byte ptr [rax], dl ; fsubr st(2) ; jmp qword ptr [rax]
0x00000000005e506f : dec dword ptr [rax] ; mov dl, 1 ; add byte ptr [rax - 0x1c], dl ; jmp 0x5e507f
0x00000000005e520f : dec dword ptr [rax] ; mov eax, 0x1e00001 ; in al, dx ; jmp qword ptr [rax]
0x00000000005e532f : dec dword ptr [rax] ; mov ebp, 0x43100001 ; in al, dx ; jmp qword ptr [rax]
0x00000000005e4777 : dec dword ptr [rax] ; mov es, word ptr [rcx] ; add byte ptr [rax], al ; in al, -0x16 ; jmp qword ptr [rax]
0x00000000005e9287 : dec dword ptr [rax] ; mov esi, 0xbed00002 ; jmp qword ptr [rax]
0x00000000005ea6a7 : dec dword ptr [rax] ; or al, 3 ; add byte ptr [rax], al ; jbe 0x5ea6ad ; jmp qword ptr [rax]
0x00000000005ea5ff : dec dword ptr [rax] ; or al, byte ptr [rbx] ; add al, ah ; jae 0x5ea605 ; jmp qword ptr [rax]
0x00000000005e6587 : dec dword ptr [rax] ; or al, byte ptr [rdx] ; add byte ptr [rax], dl ; xchg eax, edi ; out dx, al ; jmp qword ptr [rax]
0x00000000005ea5af : dec dword ptr [rax] ; or dword ptr [rbx], eax ; add al, dl ; jo 0x5ea5b5 ; jmp qword ptr [rax]
0x00000000005e5ce7 : dec dword ptr [rax] ; out 1, eax ; add byte ptr [rax], al ; in eax, dx ; jmp qword ptr [rax]
0x00000000005e5f2f : dec dword ptr [rax] ; out dx, eax ; add dword ptr [rax], eax ; nop ; nop ; in eax, dx ; jmp qword ptr [rax]
0x00000000005e8a9f : dec dword ptr [rax] ; popfq ; add al, byte ptr [rax] ; xchg eax, edi ; int1 ; jmp qword ptr [rax]
0x00000000005ebe37 : dec dword ptr [rax] ; push 0x55800003 ; clc ; jmp qword ptr [rax]
0x00000000005e175f : dec dword ptr [rax] ; ret
0x00000000005e6a8f : dec dword ptr [rax] ; sbb eax, 0xf1300002 ; out dx, al ; jmp qword ptr [rax]
0x00000000005e8ee7 : dec dword ptr [rax] ; scasb al, byte ptr [rdi] ; add al, byte ptr [rax] ; xor bh, 0xf1 ; jmp qword ptr [rax]
0x00000000005e29e7 : dec dword ptr [rax] ; sgdt ptr [rax] ; sal bh, -0x1b ; jmp qword ptr [rax]
0x00000000005e616f : dec dword ptr [rax] ; stc ; add dword ptr [rax], eax ; rcr byte ptr [rdx], -0x12 ; jmp qword ptr [rax]
0x00000000005e6d3f : dec dword ptr [rax] ; sub al, byte ptr [rdx] ; add byte ptr [rax], ah ; jl 0x5e6d3e ; jmp qword ptr [rax]
0x00000000005e60b7 : dec dword ptr [rax] ; test byte ptr [rcx], 0 ; rol al, -0x13 ; jmp qword ptr [rax]
0x00000000005e44c7 : dec dword ptr [rax] ; test byte ptr [rcx], al ; add byte ptr [rax], dh ; mov ch, -0x16 ; jmp qword ptr [rax]
0x00000000005e60ff : dec dword ptr [rax] ; test dword ptr [rcx], 0xedc52000 ; jmp qword ptr [rax]
0x00000000005e8d5f : dec dword ptr [rax] ; test eax, 0xeab00002 ; int1 ; jmp qword ptr [rax]
0x00000000005e487f : dec dword ptr [rax] ; xchg eax, ebx ; add dword ptr [rax], eax ; and byte ptr [rdi], ah ; jmp 0x5e488f
0x00000000004daf02 : dec dword ptr [rbp - 0x7b] ; in al, 0x75 ; sbb al, -0x18 ; ret
0x000000000057cb1e : dec dword ptr [rbx + 0x40] ; ret 0xfd45
0x000000000040e883 : dec dword ptr [rcx + 0x5e415bd8] ; pop r15 ; ret
0x000000000049f27d : dec dword ptr [rcx + 0x5e415be8] ; pop rbp ; ret
0x0000000000466d07 : dec dword ptr [rcx + 0x63] ; fisttp word ptr [rax + 0x69] ; ret
0x0000000000487d9a : dec dword ptr [rcx + 0x7eed85c5] ; and dword ptr [rax - 0x7d], ecx ; ret
0x000000000053f566 : dec dword ptr [rcx + rcx*4 - 0x1a] ; call rax
0x00000000004d160a : dec dword ptr [rcx + rcx*4 - 0x1a] ; mov rdx, r13 ; mov ecx, ebp ; call rax
0x00000000004219b0 : dec dword ptr [rcx + rcx*4 - 0x1a] ; mov rdx, r14 ; call rbx
0x00000000004e81a6 : dec dword ptr [rcx + rcx*4 - 0x3a] ; jmp rax
0x000000000055cdcc : dec dword ptr [rcx + rcx*4 - 0xa] ; call r15
0x00000000004313e0 : dec dword ptr [rcx + rcx*4 - 0xa] ; call rax
0x000000000055f26a : dec dword ptr [rcx + rcx*4 - 0xa] ; pop rbx ; pop r14 ; pop rbp ; jmp rax
0x000000000053f563 : dec dword ptr [rcx + rcx*4 - 1] ; mov rsi, r12 ; call rax
0x000000000046bc60 : dec dword ptr [rcx + rcx*4 - 2] ; mov rdx, rbx ; call rcx
0x00000000004cdbb0 : dec dword ptr [rcx + rcx*4 - 8] ; pop rbx ; pop r14 ; pop r15 ; ret
0x00000000005484a3 : dec dword ptr [rcx + rcx*4 - 9] ; mov rsi, rax ; call rbx
0x000000000043188e : dec dword ptr [rcx - 0x3b7cb718] ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000004e52f6 : dec dword ptr [rcx - 0x3b7cb728] ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000543d57 : dec dword ptr [rcx - 0x77] ; pop rsi ; or byte ptr [rax - 0x7d], cl ; ret
0x0000000000500f09 : dec dword ptr [rcx] ; ret
0x000000000050583b : dec dword ptr [rcx] ; ret 0x5489
0x000000000046314f : dec dword ptr [rdi - 0x73] ; push rsp ; ret
0x00000000004620f1 : dec dword ptr [rdi] ; and al, 4 ; pop rdx ; ret
0x0000000000500dac : dec dword ptr [rdi] ; ret
0x000000000055dc5c : dec dword ptr [rdi] ; ret 0xc8b
0x000000000048425b : dec dword ptr [rdi] ; xchg eax, ebp ; ret
0x00000000005e2a57 : dec eax ; adc byte ptr [rcx], al ; add al, al ; add al, -0x1a ; jmp rax
0x00000000005eb18f : dec eax ; cmp dword ptr [rbx], eax ; add byte ptr [rax], dh ; jl 0x5eb196 ; jmp rax
0x000000000047a663 : dec eax ; cmp rax, rdx ; jb 0x47a657 ; ret
0x00000000005e560f : dec eax ; enter 1, 0x30 ; mov esp, gs ; jmp rax
0x00000000005e5ecf : dec eax ; in eax, dx ; add dword ptr [rax], eax ; nop ; jg 0x5e5ecc ; jmp rax
0x00000000005e8167 : dec eax ; ja 0x5e8175 ; add byte ptr [rax], dl ; loop 0x5e8167 ; jmp rax
0x00000000005ec187 : dec eax ; jae 0x5ec196 ; add byte ptr [rax], al ; ja 0x5ec18f ; jmp rax
0x00000000005ec147 : dec eax ; jb 0x5ec156 ; add al, ah ; jae 0x5ec14f ; jmp rax
0x00000000004b6cec : dec eax ; jne 0x4b6cd9 ; mov eax, 0x51 ; ret
0x0000000000512798 : dec eax ; jne 0x512788 ; vzeroupper ; ret
0x00000000005e4767 : dec eax ; lea eax, dword ptr [rcx] ; add byte ptr [rax], ah ; loop 0x5e4761 ; jmp rax
0x00000000005e86df : dec eax ; lea eax, dword ptr [rdx] ; add byte ptr [rax + 0x53], dl ; int1 ; jmp rax
0x00000000004193c6 : dec eax ; lea ecx, dword ptr [rax + 1] ; test ecx, ecx ; jg 0x4193c9 ; ret
0x00000000005e8e87 : dec eax ; lodsb al, byte ptr [rsi] ; add al, byte ptr [rax] ; sal ch, -0xf ; jmp rax
0x00000000005e4f77 : dec eax ; lodsd eax, dword ptr [rsi] ; add dword ptr [rax], eax ; loopne 0x5e4f46 ; jmp 0x5e4f87
0x00000000005e908f : dec eax ; mov ch, 2 ; add byte ptr [rax], ah ; jp 0x5e9091 ; jmp rax
0x00000000005e908e : dec eax ; mov ch, 2 ; add byte ptr [rax], ah ; jp 0x5e9092 ; jmp rax
0x00000000005e8fb7 : dec eax ; mov cl, 2 ; add byte ptr [rax], ah ; xor edx, esi ; jmp rax
0x00000000005e50af : dec eax ; mov dl, 1 ; add byte ptr [rax - 0x1b], dl ; jmp 0x5e50bf
0x0000000000464137 : dec eax ; mov dword ptr [rdi + 0x34], eax ; ret
0x00000000005e536f : dec eax ; mov ebp, 0x43900001 ; in al, dx ; jmp rax
0x00000000005e91d7 : dec eax ; mov edx, 0x9ab00002 ; jmp rax
0x00000000005e65bf : dec eax ; or al, byte ptr [rdx] ; add al, dh ; wait ; out dx, al ; jmp rax
0x00000000005e660f : dec eax ; or eax, dword ptr [rdx] ; add byte ptr [rax - 0x5f], dl ; out dx, al ; jmp rax
0x00000000005ebfff : dec eax ; outsb dx, byte ptr [rsi] ; add eax, dword ptr [rax] ; push rax ; outsd dx, dword ptr [rsi] ; clc ; jmp rax
0x00000000005e877f : dec eax ; pop qword ptr [rdx] ; add byte ptr [rax + 0x58], dh ; int1 ; jmp rax
0x00000000005eb98f : dec eax ; pop rax ; add eax, dword ptr [rax] ; add edi, eax ; jmp rax
0x00000000005e3b97 : dec eax ; pop rbp ; add dword ptr [rax], eax ; push rax ; xchg ecx, ebp ; jmp rax
0x00000000005e3c27 : dec eax ; pop rdi ; add dword ptr [rax], eax ; mov ecx, gs ; jmp rax
0x00000000005e79bf : dec eax ; pop rdx ; add al, byte ptr [rax] ; xor byte ptr [rax - 0x10], dh ; jmp rax
0x00000000004b1d5a : dec eax ; pop rdx ; ret
0x00000000005e4b57 : dec eax ; popfq ; add dword ptr [rax], eax ; pop rdi ; jmp 0x5e4b67
0x00000000005e54e7 : dec eax ; ret
0x00000000005eaecf : dec eax ; sub al, 3 ; add byte ptr [rax], ah ; adc al, -9 ; jmp rax
0x00000000005eae57 : dec eax ; sub al, byte ptr [rbx] ; add byte ptr [rax], al ; or edi, esi ; jmp rax
0x00000000005e6e07 : dec eax ; sub eax, 0x96000002 ; out dx, eax ; jmp rax
0x00000000005e8d97 : dec eax ; test eax, 0xed000002 ; int1 ; jmp rax
0x00000000005e6eef : dec eax ; xor dword ptr [rdx], eax ; add byte ptr [rax], dh ; lodsb al, byte ptr [rsi] ; out dx, eax ; jmp rax
0x00000000005390fa : dec ebx ; jmp 0x539108
0x000000000043f52a : dec ebx ; mov eax, ebx ; pop rbx ; ret
0x000000000048f7d0 : dec ecx ; jne 0x48f7c5 ; pop rbx ; ret
0x0000000000513c28 : dec ecx ; jne 0x513b69 ; ret
0x0000000000513d15 : dec ecx ; jne 0x513c69 ; ret
0x0000000000514198 : dec ecx ; jne 0x514185 ; ret
0x00000000005141cc : dec ecx ; jne 0x5141b5 ; ret
0x0000000000429aef : dec ecx ; mov eax, ecx ; ret
0x000000000046b60a : dec ecx ; test ecx, ecx ; jg 0x46b609 ; mov dword ptr [rdi + 8], ecx ; ret
0x0000000000472a00 : dec ecx ; test ecx, ecx ; mov rax, rdx ; jg 0x4729e9 ; ret
0x0000000000437680 : dec edi ; cmp edi, 5 ; jbe 0x437693 ; xor eax, eax ; ret
0x00000000004e8c28 : dec edx ; jne 0x4e8c14 ; ret
0x000000000046b54a : dec edx ; test edx, edx ; jg 0x46b549 ; mov dword ptr [rdi + 8], edx ; ret
0x00000000005390f9 : dec r11d ; jmp 0x539109
0x000000000047a662 : dec r8 ; cmp rax, rdx ; jb 0x47a658 ; ret
0x000000000048f7cf : dec r9 ; jne 0x48f7c6 ; pop rbx ; ret
0x0000000000514197 : dec r9d ; jne 0x514186 ; ret
0x00000000005141cb : dec r9d ; jne 0x5141b6 ; ret
0x00000000004e8c27 : dec rdx ; jne 0x4e8c15 ; ret
0x0000000000617e41 : div ah ; call rdi
0x00000000005eb87d : div bh ; call qword ptr [rax]
0x000000000057dd57 : div bl ; call rdx
0x000000000057dc4a : div bl ; test bl, 2 ; cli ; ret
0x0000000000493c76 : div byte ptr [rax - 3] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000506c82 : div byte ptr [rbp + 2] ; ret
0x0000000000479f8d : div byte ptr [rbp - 0x10] ; sub rax, rdi ; ret
0x000000000048aaeb : div byte ptr [rbx + rbp - 0xa] ; ret
0x0000000000545987 : div byte ptr [rcx] ; in eax, dx ; mov rdi, rbp ; call 0x461c28
0x000000000055e3a3 : div byte ptr [rcx] ; leave ; mov edx, eax ; jmp 0x55e3b4
0x0000000000540cce : div byte ptr [rcx] ; leave ; mov rdi, r12 ; call rax
0x0000000000540d73 : div byte ptr [rcx] ; leave ; mov rdi, rbx ; call r14
0x0000000000540b29 : div byte ptr [rcx] ; leave ; mov rdi, rbx ; call rax
0x0000000000540b9a : div byte ptr [rcx] ; leave ; mov rdi, rbx ; mov rdx, r14 ; call rax
0x0000000000477671 : div byte ptr [rdx + rcx*2 - 0x75] ; sub byte ptr [r8 - 0x7d], cl ; ret
0x00000000005a109f : div byte ptr [rsi - 0x65] ; leave ; ret 0xbe97
0x00000000005ad0f3 : div byte ptr [rsp + rax*2 + 0x17] ; in al, 0x34 ; add al, ah ; ret
0x00000000005eb87c : div dil ; call qword ptr [rax]
0x00000000004b8204 : div dword ptr [rbp + rdx + 0x4c] ; mov edi, edi ; mov rbp, rdx ; call rcx
0x00000000004b84f8 : div dword ptr [rbx + rax + 0x58] ; jmp rcx
0x000000000048e935 : div dword ptr [rcx - 0x76b7fff6] ; ret
0x0000000000561c3c : div dword ptr [rsp - 8] ; ret
0x00000000005b0a1f : div eax ; push rbp ; and byte ptr [rdx + 0x44], dl ; outsb dx, byte ptr [rsi] ; xchg eax, ebp ; ret
0x00000000004cffe5 : div ebx ; sti ; dec dword ptr [rax - 0x7d] ; ret
0x00000000005e8eed : div ecx ; jmp qword ptr [rax]
0x0000000000594566 : div ecx ; ret 0xa995
0x00000000005eb8bd : div edi ; jmp rax
0x00000000005ead8d : div esi ; call qword ptr [rax]
0x0000000000561c3b : div qword ptr [rsp - 8] ; ret
0x00000000004490ed : enter -0x163b, -0x11 ; rol esp, 1 ; ret
0x0000000000512799 : enter -0x1b8b, -0x3b ; clc ; ja 0x51279a ; ret
0x0000000000558b22 : enter -0x1c7f, 0 ; add byte ptr [rax], al ; dec dword ptr [rax + 9] ; ret
0x0000000000500f03 : enter -0x1c7f, 0 ; add byte ptr [rax], al ; dec dword ptr [rcx] ; ret
0x00000000005469fc : enter -0x1e8b, -0x7d ; ret
0x000000000051683c : enter -0x26cf, 0x31 ; ret 0x8941
0x00000000005235e0 : enter -0x2a3b, -0x11 ; jmp 0xffffffffc44173b6
0x000000000045acd7 : enter -0x3477, -9 ; fild dword ptr [rcx - 0xa] ; ret 0xf01
0x00000000004767e6 : enter -0x3777, 0x5a ; ret
0x000000000043f51f : enter -0x3777, 0x5b ; ret
0x000000000052085e : enter -0x3acf, -0x3f ; ret 0x6605
0x00000000004dff44 : enter -0x3eb8, -0x16 ; cmp byte ptr [rax], dh ; ret 0xf41
0x000000000055915c : enter -0x3f7b, 0x74 ; sbb bh, bh ; ret
0x000000000057e0f6 : enter -0x44a, -0x54 ; ret 0x763c
0x000000000045e68c : enter -0x49f1, 0x55 ; add ecx, dword ptr [rcx] ; ret 0x5489
0x000000000059fcf3 : enter -0x51af, 0x7c ; sti ; sbb dl, byte ptr [rdi] ; ret 0xaaca
0x00000000005b5720 : enter -0x5811, -0x15 ; fcomp qword ptr [rbx - 0x61] ; ret 0xbf2e
0x000000000057d7f1 : enter -0x6651, -0x6f ; ret
0x00000000004c2cca : enter -0x66f1, -0x40 ; movzx eax, al ; ret
0x000000000059b435 : enter -0x6afb, -0x7c ; ret 0x1b6e
0x0000000000442a58 : enter -0x6bf1, -0x40 ; movzx eax, al ; pop rbx ; ret
0x00000000005a60f1 : enter -0x6f25, -0x2e ; ret
0x000000000043599a : enter -0x76b7, -0x3f ; pop rbx ; pop rbp ; jmp r11
0x00000000004e64e6 : enter -0x76fe, 5 ; ret 0x3480
0x00000000004ca2d2 : enter -0x7c01, -0x54 ; add byte ptr [rax], al ; add bh, bh ; ret 0x9389
0x0000000000456a72 : enter -0x7cb8, -0x3c ; or byte ptr [rbx + 0x41], bl ; pop rsi ; ret
0x00000000004ddc8c : enter -0x7cb8, -0x3c ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000004f4e57 : enter -0x7cb8, -0x3c ; pop rbx ; ret
0x000000000055a20d : enter -0x7eb8, -0x3c ; add byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000408744 : enter -0x9bf, -0x40 ; xor byte ptr [rax + 0x41], 0x21 ; ret 0xf8c1
0x00000000005a109d : enter -0x9f9, 0x76 ; wait ; leave ; ret 0xbe97
0x000000000046b1e6 : enter -0xbf, -0x3b ; jne 0x46b1d7 ; jmp 0x46b1b7
0x000000000055d326 : enter -3, -0x77 ; ret
0x000000000043245f : enter 0, 0 ; mov eax, 0x5736dc ; ret
0x000000000043152a : enter 0, 0 ; mov eax, 1 ; ret
0x000000000042ce45 : enter 0, 0 ; mov rax, qword ptr [rax + 0x68] ; jmp rax
0x00000000004e2398 : enter 0, 0 ; pop rbx ; pop r14 ; ret
0x000000000043154a : enter 0, 0 ; ret
0x000000000041caa9 : enter 0, 0 ; xor esi, esi ; mov rdi, r15 ; call qword ptr [rax]
0x000000000048fbba : enter 0x110f, 0xc ; adc ecx, dword ptr [rax - 0x7d] ; ret 0x4810
0x00000000005e3b98 : enter 0x15d, 0 ; push rax ; xchg ecx, ebp ; jmp rax
0x00000000005e3c28 : enter 0x15f, 0 ; mov ecx, gs ; jmp rax
0x00000000005a2350 : enter 0x19a2, -0x7c ; ret
0x00000000005e4b58 : enter 0x19d, 0 ; pop rdi ; jmp 0x5e4b66
0x00000000005e4f78 : enter 0x1ad, 0 ; loopne 0x5e4f45 ; jmp 0x5e4f86
0x00000000005e50b0 : enter 0x1b2, 0 ; push rax ; in eax, -0x15 ; jmp rax
0x00000000005e5370 : enter 0x1bd, 0 ; nop ; in al, dx ; jmp rax
0x00000000005e5550 : enter 0x1c5, 0 ; jo 0x5e54e1 ; in al, dx ; jmp rax
0x00000000005e5de8 : enter 0x1ea, 0 ; adc byte ptr [rbp - 0x13], dh ; jmp rax
0x00000000005e5e38 : enter 0x1eb, 0 ; nop ; jbe 0x5e5e33 ; jmp rax
0x00000000005e5ed0 : enter 0x1ed, 0 ; nop ; jg 0x5e5ecb ; jmp rax
0x00000000005e7260 : enter 0x23f, 0 ; loopne 0x5e725f ; out dx, eax ; jmp rax
0x00000000005e79c0 : enter 0x25a, 0 ; xor byte ptr [rax - 0x10], dh ; jmp rax
0x00000000005e86e0 : enter 0x28d, 0 ; push rax ; push rbx ; int1 ; jmp rax
0x00000000005e8780 : enter 0x28f, 0 ; jo 0x5e87e5 ; int1 ; jmp rax
0x00000000005e8d98 : enter 0x2a9, 0 ; add ch, ch ; int1 ; jmp rax
0x00000000005e8e88 : enter 0x2ac, 0 ; sal ch, -0xf ; jmp rax
0x00000000005e8fb8 : enter 0x2b1, 0 ; and byte ptr [rcx], dh ; jmp rax
0x00000000005e9058 : enter 0x2b4, 0 ; loopne 0x5e90c6 ; jmp rax
0x00000000005e9090 : enter 0x2b5, 0 ; and byte ptr [rdx - 0xe], bh ; jmp rax
0x00000000005e91d8 : enter 0x2ba, 0 ; mov al, -0x66 ; jmp rax
0x000000000059f1de : enter 0x2d87, -0xf ; out dx, al ; ret 0x89e3
0x00000000005e9958 : enter 0x2dd, 0 ; mov al, -0x10 ; cmc ; jmp rax
0x00000000005e9a58 : enter 0x2e0, 0 ; mov al, -0xe ; cmc ; jmp rax
0x00000000005e9b58 : enter 0x2e3, 0 ; mov al, -0xc ; cmc ; jmp rax
0x00000000005e9f58 : enter 0x2f0, 0 ; or sil, sil ; jmp rax
0x00000000005eae08 : enter 0x329, 0 ; push rax ; add dh, bh ; jmp rax
0x00000000005eaed0 : enter 0x32c, 0 ; and byte ptr [rdi + rsi*8], dl ; jmp rax
0x00000000005eb990 : enter 0x358, 0 ; add edi, eax ; jmp rax
0x00000000005ec000 : enter 0x36e, 0 ; push rax ; outsd dx, dword ptr [rsi] ; clc ; jmp rax
0x00000000005ec148 : enter 0x372, 0 ; loopne 0x5ec1c8 ; clc ; jmp rax
0x00000000005ec188 : enter 0x373, 0 ; add byte ptr [rdi - 8], dh ; jmp rax
0x000000000047a664 : enter 0x3948, -0x30 ; jb 0x47a656 ; ret
0x00000000005203e0 : enter 0x3a0f, -0x34 ; ret 0x4103
0x000000000051a63d : enter 0x3a0f, -0x34 ; ret 0xf00
0x000000000051a714 : enter 0x3a0f, -0x34 ; ret 0xf01
0x000000000051a864 : enter 0x3a0f, -0x34 ; ret 0xf02
0x000000000051a944 : enter 0x3a0f, -0x34 ; ret 0xf03
0x000000000059d23e : enter 0x405a, -0xc ; insb byte ptr [rdi], dx ; ret
0x00000000004ea7c8 : enter 0x415b, 0x5c ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004de7ce : enter 0x415b, 0x5e ; pop r15 ; ret
0x000000000040b0c9 : enter 0x415b, 0x5e ; pop rbp ; ret
0x00000000004f06b4 : enter 0x4199, -9 ; dec byte ptr [rax + 0x63] ; ret 0x8a41
0x0000000000449254 : enter 0x41c4, 0x29 ; out dx, eax ; rol esp, cl ; ret
0x0000000000506d98 : enter 0x4208, -0x77 ; push rsp ; xchg eax, edi ; adc byte ptr [rax], al ; ret 0x8a44
0x0000000000506d62 : enter 0x4208, -0x77 ; push rsp ; xchg eax, edi ; or byte ptr [rax], al ; ret 0x8a44
0x0000000000506dce : enter 0x4208, -0x77 ; push rsp ; xchg eax, edi ; sbb byte ptr [rax], al ; ret 0x8a44
0x000000000051a69f : enter 0x4566, 0xf ; outsd dx, dword ptr [rsi] ; enter 0x3a0f, -0x34 ; ret 0xf00
0x000000000051a70f : enter 0x4566, 0xf ; outsd dx, dword ptr [rsi] ; enter 0x3a0f, -0x34 ; ret 0xf01
0x000000000051a85f : enter 0x4566, 0xf ; outsd dx, dword ptr [rsi] ; enter 0x3a0f, -0x34 ; ret 0xf02
0x000000000051a93f : enter 0x4566, 0xf ; outsd dx, dword ptr [rsi] ; enter 0x3a0f, -0x34 ; ret 0xf03
0x0000000000517b31 : enter 0x4566, 0xf ; outsd dx, dword ptr [rsi] ; ret 0x4566
0x00000000004e6828 : enter 0x45bb, 0 ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000051aa2a : enter 0x45cc, 0xf ; cmp cl, ah ; ret 0x4403
0x000000000051a6ac : enter 0x45cc, 0xf ; cmp cl, ah ; ret 0x4500
0x000000000051a78c : enter 0x45cc, 0xf ; cmp cl, ah ; ret 0x4501
0x000000000051a86c : enter 0x45cc, 0xf ; cmp cl, ah ; ret 0x4502
0x000000000051a94c : enter 0x45cc, 0xf ; cmp cl, ah ; ret 0x4503
0x000000000051a645 : enter 0x45ce, 0xf ; cmp cl, ah ; ret 0x4500
0x000000000051a71c : enter 0x45ce, 0xf ; cmp cl, ah ; ret 0x4501
0x000000000051a8dc : enter 0x45ce, 0xf ; cmp cl, ah ; ret 0x4502
0x000000000051a9c2 : enter 0x45ce, 0xf ; cmp cl, ah ; ret 0x4503
0x0000000000464138 : enter 0x4789, 0x34 ; ret
0x000000000042d741 : enter 0x4814, -0x77 ; ret 0x3eb
0x00000000004193c7 : enter 0x488d, 1 ; test ecx, ecx ; jg 0x4193c8 ; ret
0x00000000004068d1 : enter 0x56a6, 0 ; ret
0x0000000000431f0b : enter 0x573a, 0 ; ret
0x0000000000432ca4 : enter 0x573e, 0 ; ret
0x0000000000432fbf : enter 0x5740, 0 ; ret
0x00000000005b24f2 : enter 0x57e9, 0x4c ; ret
0x00000000004a59f1 : enter 0x587c, 0 ; ret
0x00000000004a9741 : enter 0x5885, 0 ; ret
0x00000000004e34b1 : enter 0x5bd8, 0 ; ret
0x00000000005b7ed2 : enter 0x5ece, -8 ; ret 0xe28e
0x0000000000595763 : enter 0x6f88, -0x22 ; outsd dx, dword ptr [rsi] ; ret
0x0000000000446efe : enter 0x7544, -0x3e ; mov dword ptr [rdx + 0x75], ebp ; ret 0x6a89
0x00000000004e1737 : enter 0xf41, -0x49 ; ret
0x00000000004e1541 : enter 0xf41, -0x49 ; ret 0x4e8b
0x000000000045e301 : enter 0xf41, -0x4a ; push rax ; add ecx, dword ptr [rcx] ; ret 0xf41
0x00000000004e1a0f : enter 0xf48, -0x51 ; ret 0x8548
0x00000000005e55d1 : enter 1, -0x50 ; mov ebp, esp ; jmp qword ptr [rax]
0x0000000000608aad : enter 1, 0x20 ; push -0x12 ; jmp qword ptr [rdi]
0x00000000005e5611 : enter 1, 0x30 ; mov esp, gs ; jmp rax
0x0000000000608add : enter 1, 0x50 ; push -0x12 ; jmp qword ptr [rdi]
0x0000000000608af5 : enter 1, 0x68 ; push -0x12 ; jmp qword ptr [rdi]
0x00000000005e8358 : fadd dword ptr [rax + 0x1f600002] ; int1 ; call qword ptr [rax]
0x000000000043b7b0 : fadd dword ptr [rax - 0x80] ; inc byte ptr [rcx + 0xf] ; ret 0x16eb
0x0000000000418d91 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret
0x000000000042c1d9 : fadd dword ptr [rax] ; add byte ptr [rax], al ; jmp rax
0x0000000000536251 : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop r14 ; ret
0x0000000000430722 : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000005962ec : fadd dword ptr [rcx + 0x208dfdd7] ; sub al, 0x5d ; ret
0x00000000004acd13 : fadd dword ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006114d8 : fadd dword ptr [rdx - 0xd] ; jmp qword ptr [rcx]
0x00000000005ea550 : fadd dword ptr [rsi] ; add eax, dword ptr [rax] ; movsxd rsi, esi ; call qword ptr [rax]
0x00000000005b4e62 : fadd dword ptr [rsi] ; cmp cl, dh ; ret 0x898
0x00000000005b6de4 : fadd qword ptr [rax + rbp - 0x3677a4a0] ; ret 0x90cf
0x00000000005e1ce1 : fadd qword ptr [rax] ; add al, dh ; mov esp, fs ; jmp qword ptr [rax]
0x000000000055800c : fadd qword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004e4485 : fadd qword ptr [rcx - 0x77] ; ret
0x000000000041bb66 : fadd qword ptr [rcx - 0x7d] ; call qword ptr [rdi]
0x0000000000609ead : fadd qword ptr [rcx] ; add al, ah ; ret 0xffee
0x0000000000609ec5 : fadd qword ptr [rcx] ; add al, ch ; ret 0xffee
0x0000000000609edd : fadd qword ptr [rcx] ; add al, dh ; ret 0xffee
0x0000000000609e2d : fadd qword ptr [rcx] ; add byte ptr [rax], ah ; ret 0xffee
0x0000000000609ef5 : fadd qword ptr [rcx] ; add byte ptr [rax], ch ; ret
0x00000000004331d7 : fadd qword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004a98b8 : fadd qword ptr [rsi] ; add byte ptr [rax + 1], bh ; pop rbx ; ret
0x00000000004331d6 : fadd qword ptr es:[rdx] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000568c41 : fadd st(1) ; call 0x79c1469
0x000000000044b4bf : fadd st(1), st(0) ; ret
0x00000000004e4469 : fadd st(1), st(0) ; ret 0x109
0x00000000004505ae : fadd st(4), st(0) ; jnp 0x4505ab ; jmp 0x4505d6
0x000000000045091a : fadd st(4), st(0) ; jnp 0x450917 ; jmp 0x450942
0x0000000000450d19 : fadd st(4), st(0) ; jnp 0x450d16 ; jmp 0x450d41
0x0000000000451082 : fadd st(4), st(0) ; jnp 0x45107f ; jmp 0x4510aa
0x000000000052fe0f : fadd st(4), st(0) ; jnp 0x52fe0c ; jmp 0x52fe37
0x0000000000530122 : fadd st(4), st(0) ; jnp 0x53011f ; jmp 0x53014a
0x0000000000530490 : fadd st(4), st(0) ; jnp 0x53048d ; jmp 0x5304b8
0x0000000000449213 : fadd st(4), st(0) ; ret
0x00000000005111c9 : fadd st(4), st(0) ; sub eax, 0xc44071f4 ; ret 0x597d
0x000000000044be6f : fadd st(5) ; cmp edi, ebp ; ret
0x000000000044b076 : faddp st(1) ; ret
0x0000000000536b09 : faddp st(1) ; ret 0x8b1e
0x000000000045035e : faddp st(4) ; cmp r11d, ebp ; ret
0x000000000044cb01 : faddp st(4) ; ret 0x61
0x00000000004bc91d : fbld dword ptr [rbx - 0x76b70001] ; ret
0x00000000005636a7 : fbld dword ptr [rsi + 0xf] ; jmp 0x563672
0x0000000000563cee : fbld dword ptr [rsi + 0xf] ; jmp 0x563cb9
0x00000000005b4e20 : fbld dword ptr [rsi] ; ret 0x4d11
0x000000000048d793 : fchs ; cmp dword ptr [rax], eax ; mov eax, 1 ; ret
0x00000000004e46b9 : fcmovb st(0), st(1) ; ret 0x410b
0x00000000004e4251 : fcmovb st(0), st(1) ; ret 0x410c
0x00000000005365c7 : fcmovb st(0), st(1) ; ret 0x8905
0x00000000005c3860 : fcmovb st(0), st(3) ; pop rsp ; add byte ptr [rax], al ; add byte ptr [rax], al ; add ch, ah ; ret
0x00000000005345b1 : fcmovb st(0), st(4) ; ret
0x00000000005a2b66 : fcmovb st(0), st(7) ; mov dr0, word ptr [rcx - 0x13] ; stc ; ret
0x00000000005ad3e7 : fcmovbe st(0), st(1) ; ret 0x13e6
0x00000000005aef2a : fcmovbe st(0), st(3) ; std ; ret 0x488a
0x00000000004e4291 : fcmovnb st(0), st(1) ; ret
0x0000000000559c81 : fcmovnb st(0), st(2) ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000005a54fd : fcmovu st(0), st(2) ; adc al, -0x2f ; mov al, -0xa ; jle 0x5a552e ; ret
0x00000000005e4830 : fcom dword ptr [rcx + 0x21600001] ; jmp 0x5e483e
0x00000000005aff11 : fcom qword ptr [rax - 0x4a] ; xchg eax, edx ; ret 0x54c
0x0000000000597b21 : fcom qword ptr [rbp - 0x47] ; ret
0x0000000000593c0a : fcom qword ptr [rbx - 0x7c] ; add al, -0x19 ; jmp qword ptr [rdi]
0x00000000006116e4 : fcom qword ptr [rdx + rax] ; sub byte ptr [rsi - 0xd], cl ; call qword ptr [rax]
0x0000000000485f70 : fcom qword ptr [rdx - 0x76b7fff5] ; ret
0x00000000006099e4 : fcom st(0), st(7) ; add dword ptr [rax], eax ; call 0xffffffffd76088a4
0x000000000060e988 : fcom st(7) ; call qword ptr [rbx]
0x0000000000613d39 : fcomi st(3) ; call rsp
0x0000000000482057 : fcomi st(3) ; ret
0x00000000005b585d : fcomp dword ptr [r9] ; lahf ; xor al, 0x4d ; sbb al, -0x3b ; ret
0x000000000040e885 : fcomp dword ptr [rbx + 0x41] ; pop rsi ; pop r15 ; ret
0x00000000004c740e : fcomp dword ptr [rbx + 0x41] ; pop rsi ; pop rbp ; jmp rax
0x00000000004034da : fcomp dword ptr [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0x00000000004c745a : fcomp dword ptr [rbx + 0x41] ; pop rsp ; pop r14 ; pop r15 ; pop rbp ; jmp rax
0x0000000000417dc9 : fcomp dword ptr [rbx + 0x41] ; pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000478f09 : fcomp dword ptr [rbx - 0x3d] ; xor eax, eax ; pop rbx ; ret
0x00000000004e34a2 : fcomp dword ptr [rbx] ; ret
0x00000000005982fb : fcomp dword ptr [rcx + 0x3b079b54] ; ret 0x2c1
0x00000000005f56b8 : fcomp dword ptr [rcx - 0x19] ; call rsp
0x00000000005b585e : fcomp dword ptr [rcx] ; lahf ; xor al, 0x4d ; sbb al, -0x3b ; ret
0x00000000005e8b58 : fcomp dword ptr [rdi - 0x4d6ffffe] ; int1 ; call qword ptr [rax]
0x00000000005e4a98 : fcomp dword ptr [rdx + 0x51100001] ; jmp 0x5e4aa6
0x00000000005b19bb : fcomp dword ptr [rdx] ; xchg r8b, sil ; je 0x5b1983 ; cwde ; ret 0x1955
0x00000000005b585c : fcomp dword ptr cs:[r9] ; lahf ; xor al, 0x4d ; sbb al, -0x3b ; ret
0x0000000000538263 : fcomp qword ptr [rbx + 0x41] ; pop rsi ; pop r15 ; ret
0x00000000005b5724 : fcomp qword ptr [rbx - 0x61] ; ret 0xbf2e
0x00000000005f20e4 : fcomp qword ptr [rsi] ; add byte ptr [rax], bl ; loope 0x5f20d6 ; call qword ptr [rbx]
0x00000000005b50fc : fcomp st(0), st(1) ; ret
0x0000000000578280 : fcomp st(0), st(2) ; ret 0x3437
0x00000000005b4a5a : fcomp st(0), st(4) ; sub byte ptr [rcx + 0x64], 0x4c ; ret
0x000000000059dad5 : fcomp st(0), st(7) ; mov dword ptr [rax - 0x55], eax ; ret 0x435d
0x0000000000451dd0 : fcompi st(0) ; aesdeclast xmm7, xmm0 ; ret
0x00000000005e8cdd : fcompi st(1) ; jmp qword ptr [rax]
0x00000000005e9885 : fcompi st(5) ; call rax
0x00000000005b092b : fcompp ; salc ; movsb byte ptr [rdi], byte ptr [rsi] ; in eax, dx ; ret
0x00000000004ba392 : fcos ; dec dword ptr [rax - 0x75] ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x000000000047b391 : fcos ; dec dword ptr [rax - 0x77] ; ret
0x00000000004d143a : fcos ; push rax ; adc byte ptr [rax - 1], cl ; ret
0x00000000004d179a : fcos ; push rax ; sbb byte ptr [rax - 1], cl ; ret
0x0000000000554b12 : fdecstp ; ret 0x7410
0x0000000000596aa3 : fdiv dword ptr [rax + rdi] ; ret 0xa070
0x0000000000556b74 : fdiv dword ptr [rdi + 0x36] ; ret
0x000000000057d9a3 : fdiv dword ptr [rdi - 0x42] ; and esp, ebp ; sub dword ptr [rbp + 0x15], eax ; ret 0xefdf
0x00000000004aea84 : fdiv dword ptr [rdi] ; add byte ptr [rax + rax*8 + 0x5c64475], al ; ret 0x37d8
0x00000000005e3390 : fdiv dword ptr [rdi] ; add dword ptr [rax], eax ; nop ; and eax, ebp ; call qword ptr [rax]
0x000000000059a036 : fdiv dword ptr [rsi + 0x2d] ; test dword ptr [rsi + 0x24], eax ; inc r13d ; jmp rsi
0x000000000048c147 : fdiv dword ptr [rsi + rdx + 0x48] ; mov edi, ebx ; call rcx
0x00000000005ff2e4 : fdiv qword ptr [rax] ; add dword ptr [rax], eax ; fmul dword ptr [rbx - 0x15] ; call qword ptr [rdx]
0x0000000000555844 : fdiv qword ptr [rbp + 0x1e775f36] ; popfq ; hlt ; stosd dword ptr [rdi], eax ; ret 0x2841
0x0000000000596182 : fdiv qword ptr [rbx + rax*2 - 0x6e] ; ret
0x00000000006173e4 : fdiv qword ptr [rcx - 0x1ac7fffe] ; hlt ; call qword ptr [rsi]
0x000000000057d183 : fdiv qword ptr [rcx - 0x48e9582d] ; xchg eax, ebx ; ret
0x00000000005e8cad : fdiv st(1) ; jmp qword ptr [rax]
0x00000000005482f9 : fdiv st(1), st(0) ; dec dword ptr [rax - 0x77] ; ret
0x0000000000538288 : fdiv st(2), st(0) ; dec dword ptr [rax - 0x77] ; ret
0x0000000000451996 : fdiv st(3) ; ret
0x000000000045aa38 : fdiv st(6) ; rol dword ptr [rcx], 0xf ; ret 0xc085
0x00000000005e6130 : fdiv st(7) ; add dword ptr [rax], eax ; sar ah, -0x13 ; call qword ptr [rax]
0x00000000004863a8 : fdiv st(7), st(0) ; dec dword ptr [rax - 0x77] ; ret
0x00000000005a1a3f : fdivp st(7) ; cwde ; ret 0x98e5
0x000000000041e2d7 : fdivp st(7) ; inc dword ptr [rbx - 0x7cf0fd08] ; ret 7
0x00000000005e9148 : fdivr dword ptr [rax - 0x6b8ffffe] ; call qword ptr [rax]
0x00000000005a2b98 : fdivr dword ptr [rcx] ; ret 0xafd3
0x00000000004fa084 : fdivr dword ptr [rsi - 0x76b70002] ; ret
0x000000000060bb18 : fdivr dword ptr [rsi] ; out dx, eax ; jmp rsi
0x00000000005f7ee4 : fdivr qword ptr [rax + rax - 0x17424800] ; call qword ptr [rax]
0x000000000047a180 : fdivr qword ptr [rbp - 0x76b7fffa] ; ret
0x0000000000617be4 : fdivr qword ptr [rcx - 0x1107fffe] ; hlt ; call qword ptr [rax]
0x000000000060b2e4 : fdivr st(0), st(0) ; add dword ptr [rax], eax ; clc ; adc ch, bh ; call rdx
0x00000000005486c8 : fdivr st(1) ; dec dword ptr [rax - 0x77] ; ret
0x000000000060b098 : fdivr st(1) ; out dx, al ; call qword ptr [rax]
0x00000000005e93ad : fdivr st(2), st(0) ; push qword ptr [rax] ; ret
0x00000000005e6210 : fdivr st(3) ; add dword ptr [rax], eax ; sal byte ptr [rax], -0x12 ; call qword ptr [rax]
0x0000000000555613 : fdivr st(3), st(0) ; movq qword ptr [r8], mm6 ; ret
0x000000000042c594 : fdivr st(5) ; or dword ptr [rax], eax ; xor eax, eax ; pop rdx ; ret
0x000000000054c308 : fdivr st(6) ; dec dword ptr [rax - 0x77] ; ret
0x00000000005abe4f : fdivr st(6) ; mov dword ptr [rdi + 0x2a], ebp ; cmp dl, byte ptr [rdx + rcx*2 + 0x26] ; ret 0x5ec7
0x00000000005af5e1 : fdivr st(6) ; ret
0x00000000004e865f : fdivr st(7) ; dec dword ptr [rax - 0x77] ; ret
0x0000000000454981 : fdivr st(7) ; pxor xmm2, xmm3 ; ret
0x000000000059ffcf : fdivrp st(2) ; ret 0xa5e5
0x00000000004b79ed : femms ; add byte ptr [rax], al ; ret
0x0000000000451eff : ffree st(0) ; aesenclast xmm9, xmm0 ; ret
0x00000000005aae48 : ffree st(2) ; or eax, 0xcb2412ea ; movsb byte ptr [rdi], byte ptr [rsi] ; call qword ptr [rdi]
0x0000000000578935 : ffree st(2) ; push rbx ; xor al, 0x16 ; ret 0x56c2
0x0000000000599644 : ffree st(7) ; ret 0x4823
0x000000000043244d : fiadd dword ptr [rax] ; add byte ptr [rax], al ; mov eax, 0x573725 ; ret
0x000000000043db32 : fiadd dword ptr [rbp - 0x3f6bf040] ; movzx eax, al ; ret
0x000000000050813b : fiadd dword ptr [rcx + 0x31] ; ret 0x144
0x000000000046b3f5 : fiadd dword ptr [rcx + rcx*4 - 0x40] ; ret
0x0000000000461121 : fiadd dword ptr [rcx + rcx*4 - 0xf] ; call r15
0x0000000000609c2d : fiadd dword ptr [rcx] ; add al, ah ; mov ah, -0x12 ; call qword ptr [rbx]
0x00000000005e59d9 : fiadd dword ptr [rcx] ; add byte ptr [rax + 6], dl ; in eax, dx ; jmp qword ptr [rax]
0x00000000005494e9 : fiadd dword ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005e5a01 : fiadd dword ptr [rcx] ; add byte ptr [rax], ah ; or ch, ch ; call rax
0x00000000005e9881 : fiadd dword ptr [rdx] ; add al, ah ; fcompi st(5) ; call rax
0x00000000005e9891 : fiadd dword ptr [rdx] ; add byte ptr [rax - 0x1d], dh ; cmc ; jmp qword ptr [rax]
0x000000000049e7e6 : fiadd dword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; lahf ; ret
0x0000000000432201 : fiadd dword ptr [rdx] ; add byte ptr [rax], al ; mov eax, 0x573247 ; ret
0x0000000000432dc5 : fiadd word ptr [rax] ; add byte ptr [rax], al ; mov eax, 0x573f31 ; ret
0x00000000005ad85f : fiadd word ptr [rbx - 0x74125028] ; ret 0x5f1
0x0000000000468710 : fiadd word ptr [rcx + 0xf] ; xchg eax, esi ; ret
0x000000000049cdec : fiadd word ptr [rcx + rcx*4 - 0xe] ; pop rbx ; pop r14 ; pop rbp ; jmp rax
0x00000000005e5af1 : fiadd word ptr [rcx] ; add byte ptr [rax + 0x1e], ah ; in eax, dx ; jmp rax
0x00000000005e99a9 : fiadd word ptr [rdx] ; add byte ptr [rax - 0xf], dl ; cmc ; call rax
0x00000000004321ef : fiadd word ptr [rdx] ; add byte ptr [rax], al ; mov eax, 0x573287 ; ret
0x0000000000432249 : fiadd word ptr [rdx] ; add byte ptr [rax], al ; mov eax, 0x573bd0 ; ret
0x00000000005b4685 : ficom dword ptr [rbp + 0x7ad03ee0] ; ret
0x00000000005a54fe : ficom dword ptr [rcx + rdx*8] ; mov al, -0xa ; jle 0x5a552d ; ret
0x000000000041a3a2 : ficom dword ptr [rdi - 0x76b7fff9] ; ret
0x00000000005b05b6 : ficom dword ptr [rip - 0x28f829be] ; sub bl, bh ; ret
0x00000000005a7be4 : ficomp dword ptr [rbp - 0x72c48314] ; in al, dx ; ret
0x00000000004e34e2 : ficomp dword ptr [rbx] ; ret
0x00000000005099c2 : ficomp dword ptr [rdx - 0x76b70003] ; ret
0x000000000055e967 : ficomp word ptr [rbx + 0x41] ; pop rsi ; pop r15 ; jmp rax
0x00000000004977f7 : ficomp word ptr [rbx + 0x41] ; pop rsi ; pop r15 ; jmp rcx
0x000000000053f76c : ficomp word ptr [rbx + 0x41] ; pop rsi ; pop rbp ; jmp rax
0x00000000004e7972 : ficomp word ptr [rbx] ; mov ecx, 1 ; call r8
0x00000000004e7d1d : ficomp word ptr [rbx] ; xor ecx, ecx ; call r12
0x0000000000411893 : fidiv dword ptr [rcx] ; fimul dword ptr [rcx] ; ret 0x3144
0x000000000050e502 : fidiv dword ptr [rcx] ; fimul dword ptr [rcx] ; ret 0xf231
0x00000000004df9c9 : fidiv dword ptr [rcx] ; ret 0xd2f6
0x00000000005b4e1c : fidiv word ptr [rbx + 0x26df5e2a] ; ret 0x4d11
0x000000000052bde9 : fidiv word ptr [rcx] ; mov dword ptr [rcx - 0x3f], 0x894106cd ; ret 0x2141
0x00000000004c2f7c : fidiv word ptr [rdi + rbp + 0x4c] ; mov ecx, esp ; call rax
0x000000000054aa1e : fidiv word ptr [rdi - 0x15] ; dec dword ptr [rax - 0x75] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004b8ef6 : fidiv word ptr [rsi + rdx + 0x4c] ; mov edi, esi ; mov rsi, rbx ; call rcx
0x00000000005a3fdb : fidiv word ptr [rsp + rsi*8] ; ret 0xfa73
0x00000000005a4d8a : fidivr dword ptr [rdi + 0xb] ; sbb bh, al ; ret
0x00000000005b6301 : fidivr dword ptr [rdi] ; jmp 0xffffffff9b7a259e
0x00000000005a0a45 : fidivr dword ptr [rsi + 0x525d329b] ; ret
0x00000000005a03e0 : fidivr dword ptr [rsp + rcx*8 - 0x1ea1953e] ; add eax, esp ; ret
0x00000000005b4c91 : fidivr word ptr [rip + 0x25c65510] ; ret 0xf7ea
0x000000000058d777 : fidivr word ptr [rsp + rcx*8 + 1] ; leave ; ret
0x000000000041d8a1 : fild dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000058c3d3 : fild dword ptr [rbx + rbx*4] ; push rax ; ret
0x0000000000444e5a : fild dword ptr [rcx + rsi - 0x1f] ; xor edx, r8d ; ret
0x00000000005052ef : fild dword ptr [rcx - 0x7d] ; ret
0x000000000045acdb : fild dword ptr [rcx - 0xa] ; ret 0xf01
0x0000000000506cbc : fild dword ptr [rcx - 2] ; ret 0x294c
0x00000000005e5a49 : fild dword ptr [rcx] ; add byte ptr [rax + 0xd], al ; in eax, dx ; jmp rax
0x00000000004e4257 : fild dword ptr [rcx] ; ret 0x3141
0x00000000004e48a5 : fild dword ptr [rcx] ; ret 0x8d42
0x000000000059adf8 : fild dword ptr [rdi - 0x2ac2cdfb] ; adc al, 0x62 ; ret
0x00000000005e98c9 : fild dword ptr [rdx] ; add byte ptr [rax], al ; out -0xb, al ; call rax
0x000000000043f712 : fild dword ptr [rip - 0x253af09a] ; add dword ptr [rsi - 0x3f], esp ; ret
0x00000000004caa61 : fild dword ptr [rsp + rdi*8 - 1] ; mov rax, rbx ; pop rbx ; ret
0x000000000059df2e : fild word ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; jne 0x59df6f ; ret 0xc109
0x000000000048ffaa : fild word ptr [rcx + 0xf] ; xchg eax, ebx ; ret
0x000000000047e35e : fild word ptr [rcx + 0xf] ; xchg eax, ebx ; ret 0x3949
0x0000000000504593 : fild word ptr [rcx + rcx*4 - 0xa] ; pop rbx ; pop r14 ; pop rbp ; jmp rax
0x000000000053b267 : fild word ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005e5b41 : fild word ptr [rcx] ; add byte ptr [rax], dl ; sub ebp, ebp ; call qword ptr [rax]
0x0000000000596cce : fild word ptr [rcx] ; clc ; out dx, eax ; ret
0x00000000004a976c : fild word ptr [rsi] ; add byte ptr [rax + 1], bh ; pop rdx ; ret
0x000000000053b266 : fild word ptr es:[rcx] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000056067a : fimul dword ptr [rax + 0x29] ; ret 0xed31
0x000000000047dee0 : fimul dword ptr [rax + 0x39] ; ret 0x3d76
0x000000000046f28d : fimul dword ptr [rax + 1] ; ret 0x14c
0x0000000000578823 : fimul dword ptr [rax - 0x1414017] ; ret
0x00000000005554cb : fimul dword ptr [rax - 0x7d] ; ret 0x66f0
0x00000000004baa67 : fimul dword ptr [rax - 1] ; ret
0x00000000005985c7 : fimul dword ptr [rbx - 0x64917cf1] ; call qword ptr [rdi]
0x0000000000598e3c : fimul dword ptr [rbx] ; cli ; int1 ; adc ch, dh ; ret
0x000000000043cf5e : fimul dword ptr [rcx + rcx*4 - 0x17] ; call 0x539186
0x000000000058d871 : fimul dword ptr [rcx - 0x3f37810b] ; call rdi
0x0000000000448ba3 : fimul dword ptr [rcx - 0x7d] ; ret 0x4860
0x0000000000411895 : fimul dword ptr [rcx] ; ret 0x3144
0x000000000050e504 : fimul dword ptr [rcx] ; ret 0xf231
0x00000000004e606a : fimul dword ptr [rip - 0x76b7ffcc] ; ret
0x000000000053c8b5 : fimul word ptr [rax + 0x39] ; ret
0x000000000045d01e : fimul word ptr [rax + 0x63] ; ret
0x000000000047df45 : fimul word ptr [rax - 0x75] ; push rsp ; and al, 0x70 ; call r12
0x0000000000427129 : fimul word ptr [rax - 0x77] ; ret
0x000000000049a211 : fimul word ptr [rax - 0x77] ; ret 0x26e8
0x000000000049d906 : fimul word ptr [rax - 0x77] ; ret 0x31e8
0x0000000000537ce3 : fimul word ptr [rax - 0x77] ; ret 0x4e8
0x00000000004d7759 : fimul word ptr [rax - 0x77] ; ret 0x7ee8
0x00000000004b3c6c : fimul word ptr [rax - 0x77] ; ret 0x8944
0x000000000050abd5 : fimul word ptr [rax - 0x77] ; ret 0x8948
0x00000000004c507c : fimul word ptr [rax - 0x77] ; ret 0x8949
0x00000000004d77f2 : fimul word ptr [rax - 0x77] ; ret 0x894c
0x00000000004fb9cf : fimul word ptr [rax - 0x77] ; ret 0x8b48
0x0000000000538a5a : fimul word ptr [rax - 0x77] ; ret 0x8de8
0x000000000050af2d : fimul word ptr [rax - 0x77] ; ret 0xae8
0x000000000049d562 : fimul word ptr [rax - 0x77] ; ret 0xd5e8
0x00000000004d9aeb : fimul word ptr [rax - 0x77] ; ret 0xece8
0x00000000004813c8 : fimul word ptr [rax - 0x77] ; ret 0xefe8
0x0000000000416246 : fimul word ptr [rax - 0x77] ; ret 0xf1e8
0x000000000046bdc4 : fimul word ptr [rax - 0x77] ; ret 0xf3e8
0x000000000046877b : fimul word ptr [rax - 1] ; ret
0x00000000005b291a : fimul word ptr [rbp + 0x2b] ; jrcxz 0x5b2902 ; shr dword ptr [rcx + 0x41], 1 ; ret
0x000000000040a569 : fimul word ptr [rbp - 0x77] ; int1 ; call rax
0x00000000005a3ee4 : fimul word ptr [rcx + 0x2e] ; ret 0xeccc
0x00000000004bc4bf : fimul word ptr [rcx + rcx*4 - 0x1e] ; call 0x4b8786
0x000000000050eaa2 : fimul word ptr [rcx + rcx*4 - 0x1f] ; call 0x50ad86
0x00000000004c2ffd : fimul word ptr [rcx + rcx*4 - 0x1f] ; call rax
0x00000000004a0170 : fimul word ptr [rcx + rcx*4 - 0x2e] ; mov r9, rax ; call r14
0x000000000046ba1d : fimul word ptr [rcx + rcx*4 - 0xe] ; pop rbx ; pop r14 ; pop r15 ; jmp rax
0x00000000004d0ece : fimul word ptr [rcx + rcx*4 - 0xe] ; pop rbx ; pop r14 ; pop rbp ; jmp rax
0x000000000050ca4a : fimul word ptr [rcx + rcx*4 - 6] ; mov rcx, r12 ; call rax
0x000000000049956b : fimul word ptr [rcx - 0x77] ; fisttp word ptr [rax - 0x77] ; ret 0xc9e8
0x0000000000458c21 : fist dword ptr [rbp - 0x74b70006] ; add byte ptr [rax - 1], cl ; ret
0x000000000042ce7d : fist word ptr [rax - 0x76b7fff5] ; ret
0x000000000059b43d : fistp dword ptr [rax + 0x47d44d99] ; ret 0x89e5
0x000000000046c481 : fistp dword ptr [rdx - 0x76b7fff9] ; ret
0x00000000004fa47d : fistp qword ptr [rdx - 0x76b70002] ; ret
0x000000000057e991 : fistp word ptr [rbx + 0x60] ; ret
0x0000000000497963 : fistp word ptr [rbx - 0x17] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; jmp 0xffffffffc3a47978
0x000000000046c53c : fistp word ptr [rbx - 0x17] ; int 0x9d
0x00000000004ab5ad : fistp word ptr [rbx - 0x17] ; jl 0x4ab5ab ; add dword ptr [rax], eax ; pop rbx ; ret
0x0000000000496998 : fistp word ptr [rbx - 0x17] ; jno 0x49699e ; add al, 0 ; pop rbx ; ret
0x000000000044164e : fistp word ptr [rbx - 0x17] ; mov ebx, 0x5b000a4c ; ret
0x00000000004c9721 : fistp word ptr [rbx - 0x17] ; or byte ptr [rax], dl ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000049be16 : fistp word ptr [rbx - 0x17] ; rep movsb byte ptr [rdi], byte ptr [rsi] ; add al, 0 ; pop rbx ; ret
0x0000000000477347 : fistp word ptr [rbx - 0x17] ; ret 0x6ef
0x000000000047a2c7 : fistp word ptr [rbx - 0x17] ; rol byte ptr [rsi], 0 ; pop rbx ; ret
0x0000000000456a36 : fistp word ptr [rbx - 0x17] ; sar eax, cl ; or byte ptr [rax], al ; pop rbx ; ret
0x000000000045695f : fistp word ptr [rbx - 0x17] ; stosb byte ptr [rdi], al ; stc ; or byte ptr [rax], al ; pop rbx ; ret
0x00000000004a48fd : fistp word ptr [rbx - 0x17] ; sub al, 0x5e ; add al, byte ptr [rax] ; pop rbx ; ret
0x000000000049cff7 : fistp word ptr [rbx - 0x17] ; xor dl, bh ; add al, byte ptr [rax] ; pop rbx ; ret
0x000000000044024d : fistp word ptr [rdx] ; cld ; dec dword ptr [rax - 0x77] ; ret 0x894c
0x00000000005a17a2 : fistp word ptr [rsi] ; out dx, al ; push rax ; ret
0x000000000046e7d8 : fisttp dword ptr [rax + 0x21] ; ret
0x00000000004ded30 : fisttp dword ptr [rax + 0x29] ; ret
0x00000000004ea705 : fisttp dword ptr [rax + 0x69] ; ret
0x0000000000434cb7 : fisttp dword ptr [rax + 0xf] ; ret 0x8b48
0x000000000045ccbd : fisttp dword ptr [rax + 9] ; ret
0x0000000000564edf : fisttp dword ptr [rax - 0x73] ; and al, 8 ; ret
0x000000000042ad53 : fisttp dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x41] ; pop rsi ; pop r15 ; ret
0x00000000004d0b12 : fisttp dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0x0000000000538eca : fisttp dword ptr [rax - 0x77] ; ret 0x13eb
0x00000000005440db : fisttp dword ptr [rax - 0x7b] ; sal byte ptr [rsp + rbx*2 + 0x48], -0x77 ; ret
0x0000000000554874 : fisttp dword ptr [rbp + 0xf] ; ret
0x0000000000554813 : fisttp dword ptr [rbp - 0x77] ; ret
0x00000000004a918a : fisttp dword ptr [rbp - 0xb7e6ec] ; ret
0x000000000047a3b5 : fisttp dword ptr [rcx + 0x5e415bd8] ; pop r15 ; ret
0x0000000000562328 : fisttp dword ptr [rcx + 1] ; ret
0x0000000000561e5a : fisttp dword ptr [rcx + 1] ; ret 0x1148
0x00000000005621ca : fisttp dword ptr [rcx + 1] ; ret 0x1149
0x000000000043f51c : fisttp dword ptr [rdi] ; enter -0x3777, 0x5b ; ret
0x00000000004719be : fisttp dword ptr [rdi] ; mov cs, esp ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x00000000004e696f : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x00000000004f0c51 : fisttp dword ptr [rsi - 0x76b7fffc] ; ret
0x000000000045678c : fisttp qword ptr [rax - 0x77] ; ret
0x00000000004aba8f : fisttp qword ptr [rax] ; add al, byte ptr [rax] ; xor eax, eax ; pop rdx ; ret
0x0000000000480179 : fisttp qword ptr [rbp - 0x77] ; out -0x77, eax ; ret 0x830f
0x0000000000480176 : fisttp qword ptr [rcx + 0x39] ; fisttp qword ptr [rbp - 0x77] ; out -0x77, eax ; ret 0x830f
0x000000000048ef32 : fisttp qword ptr [rcx - 0x3b7cb718] ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000504313 : fisttp qword ptr [rcx - 0x3b7cb728] ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000466ce7 : fisttp qword ptr [rdi] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000048be87 : fisttp qword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000564585 : fisttp word ptr [rax + 0x11] ; ret
0x0000000000466d0a : fisttp word ptr [rax + 0x69] ; ret
0x000000000055eb92 : fisttp word ptr [rax - 0x73] ; je 0x55ebc4 ; and byte ptr [rcx + rcx*4 - 0x1e], cl ; call rax
0x000000000045f52c : fisttp word ptr [rax - 0x75] ; je 0x45f55e ; or byte ptr [rcx + rcx*4 - 0x1e], cl ; call rax
0x000000000050aab6 : fisttp word ptr [rax - 0x75] ; je 0x50aae7 ; or byte ptr [rax - 0x77], cl ; ret 0x7ce8
0x00000000004987a3 : fisttp word ptr [rax - 0x77] ; jl 0x4987d3 ; or al, ch ; ret 0xfd22
0x000000000042fee9 : fisttp word ptr [rax - 0x77] ; jmp 0x5fddf
0x000000000044320b : fisttp word ptr [rax - 0x77] ; out dx, al ; call r14
0x000000000043cdea : fisttp word ptr [rax - 0x77] ; out dx, al ; call rax
0x000000000053611e : fisttp word ptr [rax - 0x77] ; ret
0x0000000000496a96 : fisttp word ptr [rax - 0x77] ; ret 0x41e8
0x000000000049488f : fisttp word ptr [rax - 0x77] ; ret 0x48e8
0x000000000041fa61 : fisttp word ptr [rax - 0x77] ; ret 0x51ff
0x00000000004e0448 : fisttp word ptr [rax - 0x77] ; ret 0x8fe8
0x000000000049956e : fisttp word ptr [rax - 0x77] ; ret 0xc9e8
0x0000000000554810 : fisttp word ptr [rax - 0x7b] ; fisttp dword ptr [rbp - 0x77] ; ret
0x00000000004e3f6b : fisttp word ptr [rbp - 0x145ee86c] ; fldcw word ptr [rsi - 0x3f] ; ret 0x309
0x00000000005b1309 : fisttp word ptr [rbp - 0x6c] ; sahf ; ret 0x667b
0x0000000000461847 : fisttp word ptr [rbp - 0x77] ; salc ; call r14
0x0000000000564498 : fisttp word ptr [rbx + rcx*4 + 0x5f] ; or byte ptr [rax + 0x11], cl ; ret
0x0000000000564404 : fisttp word ptr [rbx + rcx*4 + 0x5f] ; sub byte ptr [rax + 0x11], cl ; ret
0x0000000000423963 : fisttp word ptr [rbx - 0x17c7dbac] ; ret
0x000000000059e8dc : fisttp word ptr [rbx] ; ret 0x1bbc
0x000000000054ad91 : fisttp word ptr [rcx + rcx*4 - 0x12] ; mov rdx, r15 ; call rax
0x000000000054ae80 : fisttp word ptr [rcx + rcx*4 - 0x12] ; mov rdx, r15 ; call rcx
0x00000000004aa78d : fisttp word ptr [rcx + rcx*4 - 0x16] ; mov r8, rbp ; call rax
0x00000000004a9d0e : fisttp word ptr [rcx + rcx*4 - 0x3e] ; mov r8, r12 ; call rax
0x0000000000429baa : fisttp word ptr [rcx + rcx*4 - 0xa] ; call qword ptr [rax]
0x00000000004d095f : fisttp word ptr [rcx + rcx*4 - 0xa] ; call rax
0x00000000004cff88 : fisttp word ptr [rcx + rcx*4 - 0xa] ; pop rbx ; pop r14 ; pop rbp ; jmp rax
0x00000000004612da : fisttp word ptr [rcx + rcx*4 - 0xe] ; call r15
0x00000000004606a7 : fisttp word ptr [rcx + rcx*4 - 0xe] ; call rax
0x00000000004ff889 : fisttp word ptr [rcx + rcx*4 - 0xf] ; call rax
0x000000000053b635 : fisttp word ptr [rcx + rcx*4 - 2] ; mov rdx, r14 ; call rax
0x000000000047f137 : fisttp word ptr [rcx + rcx*4 - 6] ; call r14
0x0000000000461d82 : fisttp word ptr [rcx + rcx*4 - 7] ; call r8
0x00000000004617b6 : fisttp word ptr [rcx - 0x3e76b617] ; call r14
0x00000000004e5ef8 : fisttp word ptr [rcx - 0x576b312] ; mov ecx, r14d ; call rax
0x000000000046b81f : fisttp word ptr [rcx - 0x7d] ; ret 0x4d0b
0x000000000046154a : fisttp word ptr [rcx - 0xd76b312] ; call rax
0x00000000004614df : fisttp word ptr [rcx - 0xf76b217] ; call r12
0x00000000005b50f9 : fisttp word ptr [rcx] ; sub esi, ebx ; sar dword ptr [rsi], 1 ; ret
0x00000000004dc3f6 : fisttp word ptr [rdi] ; xchg eax, esi ; ret
0x00000000005a331e : fisub word ptr [rax + 0x4c] ; ret
0x000000000059e560 : fisub word ptr [rbp + 0x402093b8] ; ret 0xa6f2
0x000000000049befe : fisub word ptr [rdx - 0xa] ; dec dword ptr [rax - 0x77] ; ret
0x000000000044b934 : fisub word ptr [rsi + 0xf] ; jg 0x44b964 ; and al, 0xffffffffffffffc1 ; ret
0x0000000000520ff2 : fisub word ptr [rsi + 0xf] ; jg 0x521002 ; and al, 0xffffffffffffffc1 ; ret
0x000000000059fa93 : fisubr dword ptr [r9 - 0x39] ; test al, -0x21 ; insb byte ptr [rdi], dx ; ret
0x00000000005a03cf : fisubr dword ptr [rbp - 0x7d] ; in eax, -0x47 ; ret 0xae59
0x000000000059ea45 : fisubr dword ptr [rbx + 0x38] ; js 0x59ea92 ; lodsd eax, dword ptr [rsi] ; pop rax ; ret 0x2910
0x000000000059fa94 : fisubr dword ptr [rcx - 0x39] ; test al, -0x21 ; insb byte ptr [rdi], dx ; ret
0x00000000005b0755 : fisubr dword ptr [rdi - 0x5f] ; pop rax ; sbb edi, ecx ; jmp qword ptr [rsi]
0x00000000005b35c0 : fisubr dword ptr [rdx + rbp*8 + 0x40b6de34] ; ret 0xf1de
0x000000000059e207 : fisubr dword ptr [rsi - 0x39] ; rcl eax, cl ; cmp al, -0x62 ; ret 0x64d4
0x00000000005b1bb9 : fisubr dword ptr [rsi - 0x3d] ; push rdi ; and byte ptr [rcx - 0x3d], al ; hlt ; ret 0x64d9
0x00000000004f744e : fisubr word ptr [rax - 0x76b70010] ; ret
0x000000000059ac1f : fisubr word ptr [rsi - 0x4d] ; ret 0xaed3
0x00000000005582ed : fld dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000050790e : fld dword ptr [rbp + 1] ; ret 0xc131
0x000000000043f51a : fld dword ptr [rbp - 0x37bbf025] ; mov eax, ecx ; pop rbx ; ret
0x000000000059c684 : fld dword ptr [rbp - 0x40] ; mov ds, word ptr [rax - 0x2e6d2bf2] ; ret
0x00000000005b092c : fld dword ptr [rbx - 0x2a] ; movsb byte ptr [rdi], byte ptr [rsi] ; in eax, dx ; ret
0x00000000004fc2b3 : fld dword ptr [rbx] ; add byte ptr [rcx], bh ; ret
0x00000000004526e1 : fld dword ptr [rcx + 0xf] ; adc dword ptr [rcx], ebx ; ret
0x0000000000506898 : fld dword ptr [rcx - 0x3f] ; ret 0x410f
0x0000000000506140 : fld dword ptr [rcx - 0x3f] ; ret 0x450e
0x00000000005064ff : fld dword ptr [rcx - 0x3f] ; ret 0x4510
0x0000000000505d87 : fld dword ptr [rcx - 0x3f] ; ret 0x4511
0x00000000004455f2 : fld dword ptr [rcx - 0x3f] ; ret 0x4d18
0x0000000000507777 : fld dword ptr [rcx - 0x3f] ; ret 0x8b0a
0x000000000045ace2 : fld dword ptr [rcx - 0xa] ; ret 0x7410
0x0000000000609ba5 : fld dword ptr [rcx] ; add byte ptr [rax], bh ; mov bl, -0x12 ; jmp rsp
0x0000000000432918 : fld dword ptr [rdx] ; add byte ptr [rax], al ; mov eax, 0x574034 ; ret
0x000000000055687b : fld dword ptr [rsi - 0xda05066] ; out dx, eax ; ret
0x00000000004faa8f : fld dword ptr [rsi] ; add byte ptr [rax + 1], bh ; pop rdx ; ret
0x00000000005991d1 : fld qword ptr [rax + 0x18bb3f3c] ; out dx, eax ; cmp edx, edi ; ret
0x0000000000481948 : fld qword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000004455e0 : fld qword ptr [rcx - 0x3f] ; ret
0x0000000000609f6d : fld qword ptr [rcx] ; add al, ah ; ret
0x0000000000540d0f : fld qword ptr [rdx - 0xf] ; dec dword ptr [rax - 1] ; ret
0x0000000000609f6c : fld qword ptr fs:[rcx] ; add al, ah ; ret
0x000000000045347c : fld st(1) ; call 0xffffffffc2ce758d
0x0000000000453bbc : fld st(1) ; call 0xffffffffc2ce7ccd
0x00000000005b4cba : fld xword ptr [rax - 0x536b70ed] ; ret
0x000000000042a78e : fld xword ptr [rbx] ; push rdi ; add byte ptr [rcx - 0x48], al ; ret 0
0x00000000004e8ffa : fld xword ptr [rcx] ; ret
0x000000000058bff5 : fld xword ptr [rdi] ; mov dl, 0x7d ; sbb eax, 0x85617937 ; ret 0x2c94
0x00000000005f85c1 : fld1 ; jmp rsi
0x0000000000466ce4 : fld1 ; out -0x23, al ; str word ptr [rax - 0x7d] ; ret
0x00000000005423e6 : fld1 ; xchg eax, esp ; je 0x5423ee ; dec dword ptr [rax - 0x77] ; ret
0x000000000048e0b3 : fldcw word ptr [rbp - 0x76b70002] ; ret
0x000000000059d6fa : fldcw word ptr [rcx - 0x2d704751] ; clc ; push rcx ; ret 0x2a40
0x000000000057e130 : fldcw word ptr [rdi] ; jle 0x57e17b ; ret 0xc5e
0x00000000005aa052 : fldcw word ptr [rdx] ; pop rbp ; sbb rax, 0x7a233fff ; ret
0x00000000004e3f5d : fldcw word ptr [rsi - 0x3f] ; ret
0x00000000004e3f71 : fldcw word ptr [rsi - 0x3f] ; ret 0x309
0x00000000004e3f23 : fldcw word ptr [rsi - 0x3f] ; ret 0x4409
0x0000000000507af4 : fldcw word ptr [rsi - 0x77] ; ret
0x00000000005b0929 : fldenv dword ptr [rbp - 0x22] ; fld dword ptr [rbx - 0x2a] ; movsb byte ptr [rdi], byte ptr [rsi] ; in eax, dx ; ret
0x00000000005554c7 : fldenv dword ptr [rsi + 0xf] ; out dx, eax ; fimul dword ptr [rax - 0x7d] ; ret 0x66f0
0x00000000005fe019 : fldl2e ; call qword ptr [rdi]
0x0000000000428fca : fldpi ; and byte ptr [rcx - 0xa], al ; ret
0x0000000000511bcd : fmul dword ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; mov byte ptr [rcx + 1], r9b ; ret
0x00000000004e14d1 : fmul dword ptr [rax - 0x3f] ; call 0xffffffffc3775cf0
0x00000000004e14db : fmul dword ptr [rax - 0x3f] ; call 0xffffffffc3775cfa
0x00000000004e15cc : fmul dword ptr [rax - 0x3f] ; call 0xffffffffc3775deb
0x00000000004e15d6 : fmul dword ptr [rax - 0x3f] ; call 0xffffffffc3775df5
0x00000000004e1562 : fmul dword ptr [rax - 0x3f] ; call 0xffffffffc3775e81
0x00000000004e16c7 : fmul dword ptr [rax - 0x3f] ; call 0xffffffffc3775ee6
0x00000000004e16d1 : fmul dword ptr [rax - 0x3f] ; call 0xffffffffc3775ef0
0x00000000004e165d : fmul dword ptr [rax - 0x3f] ; call 0xffffffffc3775f7c
0x00000000004e17c2 : fmul dword ptr [rax - 0x3f] ; call 0xffffffffc3775fe1
0x00000000004e17cc : fmul dword ptr [rax - 0x3f] ; call 0xffffffffc3775feb
0x00000000004e1758 : fmul dword ptr [rax - 0x3f] ; call 0xffffffffc3776077
0x00000000004e19a3 : fmul dword ptr [rax - 0x3f] ; call 0xffffffffc37761c2
0x00000000004e1ab0 : fmul dword ptr [rax - 0x3f] ; call 0xffffffffc37762cf
0x00000000004e1a1c : fmul dword ptr [rax - 0x3f] ; call 0xffffffffc377633b
0x00000000004e1a26 : fmul dword ptr [rax - 0x3f] ; call 0xffffffffc3776345
0x00000000004c54db : fmul dword ptr [rax - 0x75] ; and al, 0x40 ; call rax
0x000000000051140d : fmul dword ptr [rax - 0x77] ; ret 0xf49
0x0000000000453bcc : fmul dword ptr [rax - 0x7d] ; ret 0xf60
0x000000000046e7d5 : fmul dword ptr [rax - 9] ; fisttp dword ptr [rax + 0x21] ; ret
0x000000000059676e : fmul dword ptr [rbp + 0x58] ; ret 0x2297
0x0000000000482373 : fmul dword ptr [rbp - 0x77] ; ret
0x000000000047c211 : fmul dword ptr [rbx + 0x2944405e] ; ret
0x00000000005ff2e8 : fmul dword ptr [rbx - 0x15] ; call qword ptr [rdx]
0x00000000004dc9dc : fmul dword ptr [rcx + 0x39] ; ret 0xf49
0x0000000000561ad1 : fmul dword ptr [rcx + 1] ; ret 0x8348
0x0000000000482650 : fmul dword ptr [rcx - 0x77] ; ret
0x000000000046560a : fmul dword ptr [rcx - 0x7d] ; ret 0x4d02
0x00000000005a1737 : fmul qword ptr [rax + 0xf138c19] ; ret 0x3453
0x000000000056932c : fmul qword ptr [rax - 0x7d] ; ret
0x00000000005a04cb : fmul qword ptr [rbx] ; sbb eax, ebx ; ret
0x0000000000554f36 : fmul qword ptr [rcx - 0x7d] ; ret
0x00000000005aee2d : fmul qword ptr [rdi + 0x5e] ; mov ds, word ptr [rbp + 3] ; ret 0x37ca
0x000000000043bfda : fmul qword ptr [rdi] ; add byte ptr [rcx], bh ; ret
0x00000000005b0acf : fmul qword ptr [rdx - 0x10] ; jo 0x5b0b0d ; jnp 0x5b0b49 ; ret
0x00000000005a162b : fmul st(4), st(0) ; ret
0x00000000005ac542 : fmul st(7), st(0) ; ret
0x000000000059d903 : fnsave dword ptr [rbx + 0x2a] ; ret
0x0000000000479b1f : fnsave dword ptr [rdx - 2] ; dec dword ptr [rax - 0x77] ; ret
0x00000000005783cd : fnsave dword ptr [rdx] ; ret
0x00000000004b8622 : fnstenv dword ptr [rax + rdx + 0x48] ; mov edi, ecx ; mov rsi, rbx ; call rdx
0x00000000004d5f5c : fnstenv dword ptr [rbx - 0x24] ; or ch, al ; stc ; out dx, eax ; ret
0x000000000051683e : fnstenv dword ptr [rcx] ; ret 0x8941
0x00000000005a1cc5 : fnstenv dword ptr [rdx] ; ret 0x12a4
0x0000000000451bf1 : fnstsw ax ; aesdeclast xmm5, xmm0 ; ret
0x0000000000451adc : fnstsw ax ; ret
0x000000000059eb23 : fnstsw dword ptr [rcx] ; mov byte ptr [rdx + 0x31], -0x57 ; ret
0x00000000005b5992 : fnstsw dword ptr [rsi + 0x23a4270] ; xor al, 0x5c ; ret
0x00000000005b70ab : fnstsw dword ptr [rsi - 0x35] ; ret 0x5f2d
0x0000000000564925 : fpatan ; ret
0x000000000047b21f : frstor dword ptr [rcx - 0x76b7fff2] ; ret
0x00000000005b6567 : frstor dword ptr [rdi + 0x7e55ea46] ; ret 0xc2c2
0x000000000054de91 : fsetpm ; idiv edi ; xor eax, eax ; pop rbx ; ret
0x00000000004b6511 : fsqrt ; dec dword ptr [rax - 0x77] ; ret
0x00000000005b13d1 : fst dword ptr [rcx - 0x79a63c10] ; ret
0x0000000000451990 : fst st(0) ; aesenclast xmm3, xmm0 ; ret
0x00000000004518ea : fst st(1) ; movups xmmword ptr [rsi], xmm2 ; ret
0x00000000005ae21b : fstp dword ptr [r10 - 0x785bbf3b] ; ret
0x00000000004cfae4 : fstp dword ptr [rbx + 0x41] ; pop rsi ; pop r15 ; jmp rax
0x00000000005a4f7f : fstp dword ptr [rbx - 0x5e] ; ret 0xb5f8
0x00000000004e34c2 : fstp dword ptr [rbx] ; ret
0x00000000005aba58 : fstp dword ptr [rdi - 0x30c43414] ; in eax, 0x4e ; ret
0x00000000004c2753 : fstp dword ptr [rdi - 1] ; dec dword ptr [rax - 0x77] ; ret
0x00000000005ae21c : fstp dword ptr [rdx - 0x785bbf3b] ; ret
0x00000000005a74e2 : fstp dword ptr [rip - 0x25b0384b] ; push rbp ; ret 0xcea5
0x00000000004cc212 : fstp qword ptr [rbx + 0x41] ; pop rsi ; pop r15 ; ret
0x0000000000451a67 : fstp st(0) ; aesenclast xmm4, xmm0 ; ret
0x0000000000451995 : fstp st(0) ; ret
0x00000000004519f0 : fstp st(0), st(0) ; aesdeclast xmm3, xmm0 ; ret
0x0000000000451ad7 : fstp st(0), st(0) ; aesdeclast xmm4, xmm0 ; ret
0x00000000004519f5 : fstp st(0), st(0) ; ret
0x00000000004526e0 : fstp st(1) ; movups xmmword ptr [r9], xmm3 ; ret
0x000000000045192a : fstp st(1), st(0) ; movups xmmword ptr [rsi], xmm2 ; ret
0x00000000005adde8 : fstp st(3), st(0) ; xchg eax, esi ; ret
0x0000000000595fe7 : fstp st(4), st(0) ; ret 0x4b5
0x00000000005ab966 : fstp st(7), st(0) ; add ah, cl ; jbe 0x5ab950 ; rcr eax ; ret
0x00000000005b2583 : fstp xword ptr [rdx] ; ret
0x00000000005a0a42 : fsub dword ptr [r10] ; fidivr dword ptr [rsi + 0x525d329b] ; ret
0x00000000005eabf0 : fsub dword ptr [rax] ; add eax, dword ptr [rax] ; adc dl, -0xa ; call qword ptr [rax]
0x00000000005a7a85 : fsub dword ptr [rcx] ; xlatb ; wait ; call rsp
0x00000000005f3658 : fsub dword ptr [rdx - 0x1a] ; call qword ptr [rbx]
0x00000000005a0a43 : fsub dword ptr [rdx] ; fidivr dword ptr [rsi + 0x525d329b] ; ret
0x0000000000451ad8 : fsub dword ptr [rsi + 0xf] ; cmp bh, bl ; loopne 0x451ad9 ; ret
0x0000000000451a68 : fsub dword ptr [rsi + 0xf] ; cmp ch, bl ; loopne 0x451a69 ; ret
0x00000000004d55a3 : fsub dword ptr [rsi + 0xf] ; jae 0x4d55a1 ; add dword ptr [rsi + 0xf], esp ; out dx, eax ; ret
0x00000000004d565e : fsub dword ptr [rsi + 0xf] ; jae 0x4d565c ; add dword ptr [rsi + 0xf], esp ; out dx, eax ; ret
0x00000000004d56f7 : fsub dword ptr [rsi + 0xf] ; jae 0x4d56f5 ; add dword ptr [rsi + 0xf], esp ; out dx, eax ; ret
0x00000000004d57d7 : fsub dword ptr [rsi + 0xf] ; jae 0x4d57d5 ; add dword ptr [rsi + 0xf], esp ; out dx, eax ; ret
0x00000000004d5b60 : fsub dword ptr [rsi + 0xf] ; jae 0x4d5b5e ; add dword ptr [rsi + 0xf], esp ; out dx, eax ; ret
0x00000000004d5d84 : fsub dword ptr [rsi + 0xf] ; jae 0x4d5d82 ; add dword ptr [rsi + 0xf], esp ; out dx, eax ; ret
0x00000000004d5e32 : fsub dword ptr [rsi + 0xf] ; jae 0x4d5e30 ; add dword ptr [rsi + 0xf], esp ; out dx, eax ; ret
0x00000000005ebde8 : fsub dword ptr [rsi + 3] ; add al, al ; push rax ; clc ; call qword ptr [rax]
0x00000000005f3708 : fsub dword ptr [rsi - 0x1a] ; call qword ptr [rdi]
0x0000000000610d38 : fsub dword ptr [rsi] ; call qword ptr [rbx]
0x00000000006127e4 : fsub qword ptr [rbp + 2] ; add al, bl ; mov dr0, ebx ; call qword ptr [rbx]
0x000000000045d465 : fsub qword ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret
0x00000000005fe331 : fsub st(2), st(0) ; call qword ptr [rsi]
0x0000000000617008 : fsub st(3) ; hlt ; call qword ptr [rsi]
0x00000000005efa41 : fsub st(3) ; jmp qword ptr [rcx]
0x00000000005efa29 : fsub st(3) ; jmp qword ptr [rsi]
0x00000000005e22bd : fsub st(4) ; call rax
0x0000000000617308 : fsub st(4) ; hlt ; call qword ptr [rsi]
0x00000000005e2285 : fsub st(4) ; jmp qword ptr [rax]
0x00000000005957ef : fsub st(4), st(0) ; je 0x5957b8 ; or byte ptr [rdx], dl ; pop rdx ; ret
0x00000000005957ee : fsub st(4), st(0) ; je 0x5957b9 ; or byte ptr [rdx], dl ; pop rdx ; ret
0x00000000005e5ca8 : fsub st(5) ; add dword ptr [rax], eax ; mov al, 0x61 ; in eax, dx ; call qword ptr [rax]
0x00000000005e2905 : fsub st(5) ; call qword ptr [rax]
0x00000000005e3075 : fsub st(7) ; jmp rax
0x0000000000504220 : fsub st(7), st(0) ; dec dword ptr [rax - 0x77] ; ret
0x000000000048f1c9 : fsubp st(0) ; and dword ptr [rdx - 0x76b7fff6], ebp ; ret
0x00000000004ad701 : fsubp st(0) ; cdq ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000478aa1 : fsubp st(0) ; cmp dword ptr [rdx - 0x76b70008], edx ; ret
0x00000000005606e4 : fsubp st(0) ; jbe 0x560689 ; int1 ; dec dword ptr [rax - 0x77] ; ret
0x000000000057d7d0 : fsubp st(0) ; jnp 0x57d832 ; cmpsd dword ptr [rsi], dword ptr [rdi] ; in al, -0x16 ; add ah, ch ; ret 0xce5
0x0000000000479d61 : fsubp st(0) ; jns 0x479dec ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000005424e2 : fsubp st(0) ; js 0x5424a4 ; hlt ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000048ecb8 : fsubp st(0) ; ret 0xaac
0x000000000055f828 : fsubp st(0) ; ret 0xfda3
0x00000000004c5938 : fsubp st(0) ; ret 0xff39
0x00000000005959b1 : fsubr dword ptr [r8] ; out 0x10, eax ; ret
0x00000000005959b2 : fsubr dword ptr [rax] ; out 0x10, eax ; ret
0x00000000005ebf90 : fsubr dword ptr [rbx + rax] ; shr byte ptr [rdx - 8], 1 ; call qword ptr [rax]
0x0000000000611ed8 : fsubr dword ptr [rcx - 0xd] ; call qword ptr [rdi]
0x00000000004dd662 : fsubr dword ptr [rdx - 0x7e] ; add byte ptr [rax + 1], bh ; ret
0x00000000005f6ee4 : fsubr qword ptr [rax + rax - 0x17dad800] ; jmp qword ptr [rsi]
0x00000000005b4e1a : fsubr qword ptr [rsi + rbx*8 - 0x4d] ; sub bl, byte ptr [rsi - 0x21] ; ret 0x4d11
0x00000000004d6ff8 : fsubr st(0) ; ret 0xf8d4
0x00000000005e3d9d : fsubr st(1) ; jmp qword ptr [rax]
0x00000000005e464d : fsubr st(2) ; jmp qword ptr [rax]
0x000000000046be2f : fsubr st(3) ; add dh, byte ptr [rcx] ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0x00000000005f48c1 : fsubr st(6), st(0) ; call rbx
0x00000000005e718d : fsubr st(7) ; jmp qword ptr [rax]
0x00000000005ece91 : fsubrp st(1) ; call qword ptr [rcx]
0x00000000005a62b1 : fsubrp st(3) ; ret 0x3593
0x0000000000451b61 : fucom st(0) ; aesenclast xmm5, xmm0 ; ret
0x0000000000451a6c : fucom st(0) ; ret
0x00000000005e30c5 : fucom st(7) ; call qword ptr [rax]
0x0000000000412bbf : fucomi st(1) ; ret
0x00000000005fe2b1 : fucomi st(2) ; call qword ptr [rbx]
0x0000000000444c48 : fucomi st(3) ; ret 0x2e66
0x00000000005a9532 : fucomi st(7) ; and al, 0xffffffffffffff9c ; ret 0xba5c
0x0000000000451b66 : fucomp st(0) ; ret
0x00000000005e691d : fucomp st(6) ; call rax
0x000000000044fcd6 : fucomp st(7) ; in eax, -0x3c ; ret
0x000000000055eeda : fucompi st(0) ; adc byte ptr [rbp - 0x76b70003], ch ; ret
0x0000000000470e4b : fucompi st(0) ; call qword ptr [rax]
0x000000000050d59b : fucompi st(0) ; call rsp
0x0000000000541b72 : fucompi st(0) ; clc ; mov dr1, eax ; dec dword ptr [rax - 0x77] ; ret
0x00000000004ea135 : fucompi st(0) ; cmc ; jnp 0x4ea133 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000541132 : fucompi st(0) ; cmp byte ptr [rcx - 0x76b70008], bl ; ret
0x00000000004fa082 : fucompi st(0) ; fdivr dword ptr [rsi - 0x76b70002] ; ret
0x000000000049e62e : fucompi st(0) ; insb byte ptr [rdi], dx ; ret 2
0x0000000000487b3c : fucompi st(0) ; jle 0x487ae8 ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000541787 : fucompi st(0) ; jrcxz 0x541725 ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000005413f2 : fucompi st(0) ; js 0x541394 ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000049e7eb : fucompi st(0) ; lahf ; ret
0x0000000000552961 : fucompi st(0) ; leave ; ret
0x0000000000541a62 : fucompi st(0) ; or byte ptr [rax - 0x76b70008], dl ; ret
0x00000000004cb394 : fucompi st(0) ; out -0x27, al ; cli ; dec dword ptr [rax - 0x77] ; ret
0x00000000004dde2b : fucompi st(0) ; out dx, eax ; ret
0x00000000005537bc : fucompi st(0) ; outsb dx, byte ptr [rsi] ; in eax, -0x16 ; call rcx
0x0000000000541612 : fucompi st(0) ; pop rax ; xchg eax, esp ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000049e6d6 : fucompi st(0) ; push rsp ; ret 2
0x000000000040c827 : fucompi st(0) ; ret
0x000000000041ee68 : fucompi st(0) ; ret 0x118
0x00000000004c5b48 : fucompi st(0) ; ret 0x207
0x0000000000495448 : fucompi st(0) ; ret 0x50e
0x00000000004cb2b8 : fucompi st(0) ; ret 0x760
0x00000000004e0b18 : fucompi st(0) ; ret 0xf212
0x000000000050b5f8 : fucompi st(0) ; ret 0xf58b
0x00000000004e3848 : fucompi st(0) ; ret 0xfb3d
0x00000000004dd448 : fucompi st(0) ; ret 0xfed4
0x000000000042f368 : fucompi st(0) ; ret 0xff6a
0x000000000041f798 : fucompi st(0) ; ret 0xff94
0x00000000004db6ad : fucompi st(0) ; ret 0xfffd
0x00000000004c9fe8 : fucompi st(0) ; ret 0xfffe
0x000000000049e619 : fucompi st(0) ; ret 2
0x0000000000541952 : fucompi st(0) ; sbb byte ptr [rcx - 0x76b70008], dl ; ret
0x000000000048eca1 : fucompi st(0) ; stc ; mov dl, -2 ; dec dword ptr [rax - 0x77] ; ret
0x00000000004e0608 : fucompi st(0) ; xchg eax, edx ; xor dword ptr [rdi], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004f3f14 : fucompi st(0) ; xchg eax, esi ; ret 0xfffd
0x00000000005e46c5 : fucompi st(2) ; call rax
0x0000000000553de2 : fucompi st(2) ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000054a9d3 : fucompi st(3) ; ret
0x00000000004b8f0c : fucompi st(3) ; ret 0x8948
0x00000000006034d9 : fucompi st(4) ; jmp rax
0x0000000000451f05 : fxch st(0), st(0) ; ret
0x00000000006104fc : hlt ; add al, byte ptr [rax] ; xor byte ptr [rcx], bl ; call qword ptr [rsi]
0x00000000004ed8eb : hlt ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000432333 : hlt ; add dword ptr [rax], eax ; add byte ptr [rax + 0x57345a], bh ; ret
0x00000000005fe8fc : hlt ; add dword ptr es:[rax], eax ; push rax ; add ch, bl ; call rbx
0x00000000005ae6a3 : hlt ; add edi, edx ; and eax, 0xe3f9eec3 ; ret
0x000000000051d46b : hlt ; add esp, eax ; ret
0x00000000005aecfa : hlt ; and al, 0x68 ; xchg eax, edi ; ret
0x00000000005fe4fc : hlt ; and al, byte ptr [rcx] ; add al, dl ; in al, -0x16 ; call qword ptr [rdi]
0x00000000004b3e38 : hlt ; and eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000061575a : hlt ; call qword ptr [rax]
0x0000000000614d8a : hlt ; call qword ptr [rbx]
0x000000000061553a : hlt ; call qword ptr [rcx]
0x0000000000615252 : hlt ; call qword ptr [rdi]
0x0000000000614bc2 : hlt ; call qword ptr [rdx]
0x0000000000616f92 : hlt ; call qword ptr [rsi]
0x00000000005e9526 : hlt ; call rax
0x00000000006145d2 : hlt ; call rbx
0x0000000000615932 : hlt ; call rcx
0x0000000000617e42 : hlt ; call rdi
0x00000000005e9b6d : hlt ; cmc ; call qword ptr [rax]
0x00000000005e9b1d : hlt ; cmc ; jmp qword ptr [rax]
0x00000000005e9b5d : hlt ; cmc ; jmp rax
0x00000000005a9742 : hlt ; cmp al, -0x3f ; ret
0x00000000004f10fb : hlt ; dec dword ptr [rax - 0x77] ; ret
0x00000000005424e6 : hlt ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000005426e5 : hlt ; dec dword ptr [rax - 0x77] ; ret 0xdb31
0x00000000005494e8 : hlt ; fiadd dword ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005afeae : hlt ; imul esp ; call 0xffffffffd501a4f7
0x000000000059d241 : hlt ; insb byte ptr [rdi], dx ; ret
0x000000000058e36d : hlt ; int1 ; in al, dx ; ret 0xe63
0x00000000005e94be : hlt ; jmp qword ptr [rax]
0x0000000000614712 : hlt ; jmp qword ptr [rbx]
0x000000000061597a : hlt ; jmp qword ptr [rcx]
0x00000000005b0a5e : hlt ; jmp qword ptr [rdi]
0x00000000006162d2 : hlt ; jmp qword ptr [rdx]
0x0000000000616cca : hlt ; jmp rbx
0x0000000000615652 : hlt ; jmp rcx
0x00000000006149fa : hlt ; jmp rdi
0x00000000006173fc : hlt ; mov cl, 2 ; add byte ptr [rax - 0x1b], al ; hlt ; call qword ptr [rsi]
0x000000000059f1dc : hlt ; mov ebp, 0xf12d87c8 ; out dx, al ; ret 0x89e3
0x00000000005a74cc : hlt ; out -6, al ; ret 0x9cc7
0x000000000060aa11 : hlt ; out dx, al ; call rax
0x00000000004e4939 : hlt ; out dx, eax ; inc dword ptr [rcx + 9] ; rol dword ptr [rcx + 0x31], cl ; ret
0x000000000055c1ca : hlt ; pop rbp ; add bl, ch ; ret
0x0000000000402350 : hlt ; pop rbp ; mov edi, 0x82b700 ; jmp rax
0x00000000005a1735 : hlt ; popfq ; fmul qword ptr [rax + 0xf138c19] ; ret 0x3453
0x0000000000438978 : hlt ; ret
0x00000000005d6c5f : hlt ; ret 0x2c2
0x0000000000572a30 : hlt ; ret 0x42
0x00000000005df2d8 : hlt ; ret 0x55
0x0000000000510f71 : hlt ; ret 0x62c4
0x00000000005b1bc0 : hlt ; ret 0x64d9
0x00000000005a27a0 : hlt ; ret 0x77fc
0x0000000000511d54 : hlt ; ret 0x79c5
0x0000000000511c19 : hlt ; ret 0x7ec5
0x00000000005b473f : hlt ; ret 0x82f4
0x0000000000578877 : hlt ; ret 0x89bd
0x00000000005b0047 : hlt ; ret 0xd057
0x00000000005a3fdd : hlt ; ret 0xfa73
0x00000000005ad649 : hlt ; sbb ch, dh ; push 0x41 ; std ; ret
0x0000000000594561 : hlt ; sbb dword ptr [rcx + rax*4 + 0x5d], esi ; div ecx ; ret 0xa995
0x00000000005f70fc : hlt ; scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; sub byte ptr [rcx], -0x18 ; call qword ptr [rdx]
0x00000000006171fc : hlt ; scasd eax, dword ptr [rdi] ; add al, byte ptr [rax] ; and ah, 0xf4 ; call qword ptr [rsi]
0x000000000044287b : hlt ; sti ; dec dword ptr [rax - 0x77] ; ret
0x000000000059c2fc : hlt ; stosb byte ptr [rdi], al ; mov esi, 0x76a27f2 ; ret
0x000000000055584b : hlt ; stosd dword ptr [rdi], eax ; ret 0x2841
0x0000000000498278 : hlt ; sub bh, ch ; dec dword ptr [rax - 0x77] ; ret
0x00000000005f6afc : hlt ; test al, 0 ; add byte ptr [rax], dh ; adc ebp, eax ; jmp qword ptr [rsi]
0x00000000005f49fc : hlt ; xchg dword ptr [rax], eax ; add byte ptr [rax], ah ; out -0x1a, al ; call qword ptr [rcx]
0x0000000000556d7d : hlt ; xor dword ptr [rdx - 7], edx ; stc ; ret
0x0000000000579de1 : hlt ; xor eax, 0x840234c9 ; xchg eax, edx ; ret
0x00000000005b0045 : hlt ; xor esp, esi ; ret 0xd057
0x00000000005174e7 : idiv bh ; add rsp, 0x18 ; ret
0x00000000005ea286 : idiv bh ; call 0x305ea591
0x00000000005eac56 : idiv bh ; call 0xffffffffd05eaf88
0x00000000005ea1ee : idiv bh ; clc ; stc ; add al, byte ptr [rax] ; and byte ptr [rax], 0xf6 ; call qword ptr [rax]
0x0000000000545cb7 : idiv bh ; dec dword ptr [rax - 0x77] ; ret
0x00000000005e9f56 : idiv bh ; enter 0x2f0, 0 ; or sil, sil ; jmp rax
0x00000000005ea54e : idiv bh ; fadd dword ptr [rsi] ; add eax, dword ptr [rax] ; movsxd rsi, esi ; call qword ptr [rax]
0x00000000005eabee : idiv bh ; fsub dword ptr [rax] ; add eax, dword ptr [rax] ; adc dl, -0xa ; call qword ptr [rax]
0x00000000005ea506 : idiv bh ; loopne 0x5ea518 ; add eax, dword ptr [rax] ; rcr byte ptr [rdi - 0xa] ; call qword ptr [rax]
0x00000000005ea2b6 : idiv bh ; mov al, -4 ; add al, byte ptr [rax] ; nop ; sub dh, dh ; call rax
0x00000000005eaa66 : idiv bh ; mov al, 0x1b ; add eax, dword ptr [rax] ; push rax ; ret
0x00000000005eaaae : idiv bh ; mov byte ptr [rbx + rax], bl ; add al, ah ; ret
0x00000000005e9fa6 : idiv bh ; mov eax, 0x200002f1 ; or esi, esi ; call rax
0x00000000005e9ea6 : idiv bh ; mov eax, 0x400002ee ; or dh, dh ; call rax
0x00000000005ea6d6 : idiv bh ; mov eax, 0x5000030c ; jns 0x5ea6de ; call rax
0x00000000005ea636 : idiv bh ; mov eax, 0xd000030a ; je 0x5ea63e ; call rax
0x00000000005e9d5e : idiv bh ; mov eax, 0xe00002ea ; add esi, esi ; call rax
0x00000000005ea9ae : idiv bh ; mov eax, 0xe0000318 ; mov bh, -0xa ; call rax
0x0000000000568652 : idiv bh ; mov eax, 1 ; pop rbx ; ret
0x0000000000497602 : idiv bh ; mov eax, r14d ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000005e9f16 : idiv bh ; or al, dh ; add al, byte ptr [rax] ; nop ; or esi, esi ; jmp qword ptr [rax]
0x00000000005ea016 : idiv bh ; or bl, dh ; add al, byte ptr [rax] ; or al, 0xfffffff6 ; jmp qword ptr [rax]
0x00000000005ea6a6 : idiv bh ; or byte ptr [rbx + rax], cl ; add byte ptr [rax], al ; jbe 0x5ea6ae ; jmp qword ptr [rax]
0x00000000005ea5ae : idiv bh ; or byte ptr [rcx], cl ; add eax, dword ptr [rax] ; sal byte ptr [rax - 0xa], 1 ; jmp qword ptr [rax]
0x00000000005ea42e : idiv bh ; or byte ptr [rdx], al ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0xa], al ; jmp qword ptr [rax]
0x00000000005eaa9e : idiv bh ; pop rax ; sbb al, 3 ; add al, al ; ret
0x00000000004eb4e5 : idiv bh ; pop rbx ; ret
0x00000000005eaa4e : idiv bh ; push 0x2000031b ; ret
0x000000000049ccdb : idiv bh ; ror byte ptr [rax - 0x77], 1 ; ret
0x00000000005eaa56 : idiv bh ; sbb byte ptr [rbx], 3 ; add byte ptr [rax], dh ; ret
0x00000000005eaa46 : idiv bh ; sbb eax, dword ptr [rbx] ; add byte ptr [rax], dl ; ret
0x000000000049f34e : idiv bh ; xor eax, eax ; pop rbx ; pop r14 ; pop r15 ; ret
0x00000000005678a4 : idiv bh ; xor eax, eax ; pop rbx ; ret
0x000000000049f2e2 : idiv bh ; xor eax, eax ; pop rdx ; ret
0x00000000004f34a5 : idiv byte ptr [rax + 3] ; mov dword ptr [rdi + 0x28], esi ; ret
0x0000000000456576 : idiv byte ptr [rdi - 9] ; ret
0x0000000000552a46 : idiv byte ptr [rdi] ; lock inc dword ptr [rbp - 0xee8b40] ; ret
0x00000000005a5502 : idiv byte ptr [rsi + 0x21] ; ret
0x00000000005678a3 : idiv dil ; xor eax, eax ; pop rbx ; ret
0x00000000005ac6f7 : idiv dword ptr [rbp - 0xc2895ab] ; cmc ; ret
0x000000000042d695 : idiv dword ptr [rdx - 0x76b7ffee] ; ret
0x0000000000595083 : idiv dword ptr [rdx] ; ret
0x0000000000595082 : idiv dword ptr cs:[rdx] ; ret
0x000000000055a437 : idiv ebp ; dec dword ptr [rax - 0x77] ; ret
0x000000000054679b : idiv ecx ; dec dword ptr [rax - 0x77] ; ret
0x00000000005eb5ae : idiv edi ; add byte ptr [rcx + 3], cl ; add al, al ; mov dl, -9 ; jmp qword ptr [rax]
0x000000000048f69f : idiv edi ; add rsp, 0xc8 ; ret
0x00000000004e765d : idiv edi ; add rsp, 8 ; pop rbx ; pop r14 ; ret
0x00000000005eb066 : idiv edi ; call 0xffffffffb05eb3a9
0x000000000048f3d3 : idiv edi ; cdqe ; pop rdx ; ret
0x00000000005eb6ee : idiv edi ; clc ; add r8, qword ptr [r8] ; push rax ; sal edi, cl ; call qword ptr [rax]
0x00000000005eb19e : idiv edi ; clc ; cmp dword ptr [rbx], eax ; add al, al ; jl 0x5eb1a7 ; jmp qword ptr [rax]
0x00000000005eb876 : idiv edi ; clc ; push rbx ; add eax, dword ptr [rax] ; div dil ; call qword ptr [rax]
0x0000000000458ef5 : idiv edi ; dec dword ptr [rax - 0x77] ; ret
0x00000000004d8c4b : idiv edi ; dec dword ptr [rax - 0x7d] ; ret
0x00000000005eae06 : idiv edi ; enter 0x329, 0 ; push rax ; add dh, bh ; jmp rax
0x00000000005eaece : idiv edi ; enter 0x32c, 0 ; and byte ptr [rdi + rsi*8], dl ; jmp rax
0x0000000000540184 : idiv edi ; inc dword ptr [rbp - 0x9d8b40] ; ret
0x00000000005eaf16 : idiv edi ; loopne 0x5eaf50 ; add eax, dword ptr [rax] ; rcl byte ptr [rdi], -9 ; call qword ptr [rax]
0x00000000005eb2fe : idiv edi ; mov eax, 0x2000033e ; mov bh, dh ; call rax
0x00000000005eb1c6 : idiv edi ; mov eax, 0x33a ; jg 0x5eb1cf ; call rax
0x00000000005eae8e : idiv edi ; mov eax, 0x5000032b ; adc bh, dh ; call rax
0x00000000005eb756 : idiv edi ; mov eax, 0x7000034f ; loope 0x5eb75f ; call rax
0x00000000005eaf3e : idiv edi ; mov eax, 0xf000032e ; sbb dh, bh ; call rax
0x00000000004d0294 : idiv edi ; mov eax, ebx ; pop rbx ; ret
0x00000000005eb11e : idiv edi ; or byte ptr [rax], bh ; add eax, dword ptr [rax] ; xor byte ptr [rsi - 9], dh ; jmp qword ptr [rax]
0x00000000005eb15e : idiv edi ; or byte ptr [rcx], bh ; add eax, dword ptr [rax] ; jp 0x5eb167 ; jmp qword ptr [rax]
0x00000000004e26a8 : idiv edi ; pop rbx ; pop r14 ; pop r15 ; ret
0x00000000004e287d : idiv edi ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000005eb8b6 : idiv edi ; rcl byte ptr [rbx + rax], -0x10 ; div edi ; jmp rax
0x0000000000554e2b : idiv edi ; test rax, rax ; je 0x554e3c ; pop rax ; ret
0x00000000005598eb : idiv edi ; test rax, rax ; je 0x5598fc ; pop rax ; ret
0x000000000054e064 : idiv edi ; xor eax, eax ; add rsp, 0x70 ; pop rbx ; ret
0x0000000000552768 : idiv edi ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000054de93 : idiv edi ; xor eax, eax ; pop rbx ; ret
0x00000000004e0cbc : idiv esi ; dec dword ptr [rax - 0x7d] ; ret
0x00000000004de367 : imul al ; add esp, dword ptr [rdx + rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000054283a : imul al ; and byte ptr [rbx - 0x76b7000c], dh ; ret 0x8548
0x0000000000494769 : imul al ; and dword ptr [rcx - 0x76b70006], edi ; ret
0x000000000042a42b : imul al ; jmp qword ptr [rax]
0x000000000049440f : imul al ; jnp 0x4943d7 ; cli ; dec dword ptr [rax - 0x77] ; ret
0x0000000000552fa7 : imul al ; jrcxz 0x552f83 ; out dx, al ; dec dword ptr [rax - 0x77] ; ret
0x00000000004da58b : imul al ; lcall ptr [rdx - 0xa] ; dec dword ptr [rax - 0x77] ; ret
0x00000000004f60bf : imul al ; pop rbx ; cmp al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004fd620 : imul al ; pop rdx ; ret
0x0000000000429a1c : imul al ; pop rsi ; call qword ptr [rax]
0x0000000000418917 : imul al ; ret
0x00000000004ac6b8 : imul al ; ret 0xf557
0x00000000004ad968 : imul al ; ret 0xfbd4
0x00000000004639b8 : imul al ; ret 0xfffc
0x00000000004f68ff : imul al ; sbb esi, dword ptr [rax + rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004f635f : imul al ; sbb esi, dword ptr [rip - 0x76b80000] ; ret
0x00000000005585ef : imul al ; sti ; adc eax, 0x8948fffe ; ret
0x0000000000542938 : imul al ; xchg eax, edx ; outsb dx, byte ptr [rsi] ; cli ; dec dword ptr [rax - 0x77] ; ret
0x000000000059fee3 : imul byte ptr [rbp + 0x37] ; stosb byte ptr [rdi], al ; xor byte ptr [rsi - 0x17], bl ; mov bl, -0x15 ; ret 0xfe88
0x0000000000567476 : imul byte ptr [rbp - 3] ; inc dword ptr [rbp - 0xf18740] ; ret
0x00000000005564ac : imul byte ptr [rbx + rsi*4 + 0x2fc2c221] ; ret 0xed5e
0x00000000005a39ef : imul byte ptr [rcx + 0x1d] ; xchg eax, esi ; pop rcx ; or al, bl ; ret 0x1878
0x00000000004684e1 : imul cl ; ret
0x00000000005b605f : imul dh ; ret
0x00000000005b188c : imul dword ptr [rdx - 0x6c] ; ret 0x983e
0x000000000047b2b5 : imul dword ptr [rdx - 0x76b7fff9] ; ret
0x00000000005783b3 : imul dword ptr [rsi - 2] ; lodsd eax, dword ptr [rsi] ; jmp 0x578426
0x000000000048832a : imul eax ; add byte ptr [rdx - 0x76b70009], bl ; ret 0x8948
0x0000000000558188 : imul eax ; add dl, byte ptr [rbx] ; stc ; dec dword ptr [rax - 0x77] ; ret
0x000000000048aea8 : imul eax ; add dl, byte ptr [rdx - 0x76b70001] ; ret
0x00000000004f89cb : imul eax ; call qword ptr [rdi]
0x000000000047a17e : imul eax ; fdivr qword ptr [rbp - 0x76b7fffa] ; ret
0x000000000047b21d : imul eax ; frstor dword ptr [rcx - 0x76b7fff2] ; ret
0x000000000047b2b3 : imul eax ; imul dword ptr [rdx - 0x76b7fff9] ; ret
0x00000000004c97de : imul eax ; insb byte ptr [rdi], dx ; adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000552e72 : imul eax ; js 0x552e55 ; int1 ; dec dword ptr [rax - 0x77] ; ret
0x000000000054d09d : imul eax ; lodsd eax, dword ptr [rsi] ; loop 0x54d0a9 ; dec dword ptr [rax - 0x77] ; ret
0x000000000045d634 : imul eax ; mov dword ptr es:[rax], ecx ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000402a33 : imul eax ; mov r8b, byte ptr [r10] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000050fd4e : imul eax ; or al, 0x62 ; std ; dec dword ptr [rax - 0x77] ; ret
0x00000000004c1e6a : imul eax ; push rax ; and edi, edx ; dec dword ptr [rax - 0x77] ; ret
0x00000000004b455e : imul eax ; pushfq ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004776d7 : imul eax ; ret
0x0000000000495128 : imul eax ; ret 0x3b1
0x00000000004a4d68 : imul eax ; ret 0xfc60
0x000000000053a818 : imul eax ; ret 0xfff3
0x0000000000434154 : imul eax ; ret 9
0x00000000005611ba : imul eax ; rol byte ptr [rdx - 0x76b70008], 1 ; ret
0x00000000004c643a : imul eax ; sar bl, -1 ; dec dword ptr [rax - 0x77] ; ret
0x00000000004bb54c : imul eax ; scasb al, byte ptr [rdi] ; mov cl, -1 ; dec dword ptr [rax - 0x77] ; ret
0x00000000004efe7b : imul eax ; scasd eax, dword ptr [rdi] ; or edi, esi ; dec dword ptr [rax - 0x77] ; ret
0x00000000004ecbcd : imul eax ; std ; ret 6
0x000000000045851f : imul eax ; stosd dword ptr [rdi], eax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004856e2 : imul eax ; sub byte ptr [rsi + rax], cl ; add bl, ch ; ret
0x0000000000489ae4 : imul eax ; test byte ptr [rax], 0xb ; add byte ptr [rcx], bh ; ret
0x000000000045d4c7 : imul eax ; xchg eax, ebx ; mov cl, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000545ed7 : imul eax ; xchg eax, ebx ; ret 0xffeb
0x00000000004866d9 : imul eax ; xchg eax, ecx ; or eax, 0x89480000 ; ret
0x000000000047b27a : imul eax ; xor byte ptr [rbx - 0x76b7fff9], ch ; ret
0x0000000000596768 : imul eax, dword ptr [rax + 0x63], 0xd8f0d5ac ; pop r8 ; ret 0x2297
0x000000000046ca21 : imul eax, dword ptr [rax + rcx*2], -0x7d ; ret
0x00000000005f2b5d : imul eax, dword ptr [rax], 0xe553c000 ; call rsp
0x00000000005f2bdd : imul eax, dword ptr [rax], 0xe55a5000 ; call qword ptr [rax]
0x00000000005ebf41 : imul eax, dword ptr [rbx], 0 ; add byte ptr [rsi - 8], ah ; call rax
0x00000000005ebec1 : imul eax, dword ptr [rbx], 0xf85cf000 ; call qword ptr [rax]
0x000000000047c7e4 : imul eax, dword ptr [rcx + rax*2], 0x5d5b1189 ; ret
0x0000000000602d2d : imul eax, dword ptr [rcx], 0 ; push rax ; iretd ; in al, dx ; jmp rdx
0x00000000005e3ed1 : imul eax, dword ptr [rcx], 0 ; push rax ; sub edx, ebp ; call rax
0x00000000005e3e61 : imul eax, dword ptr [rcx], 0xe9feb000 ; jmp qword ptr [rax]
0x0000000000602b65 : imul eax, dword ptr [rcx], 0xeccac800 ; call qword ptr [rax]
0x0000000000458c55 : imul eax, dword ptr [rcx], 0xff480000 ; ret
0x00000000005b4c8f : imul eax, dword ptr [rdi], -0x22 ; cmp eax, 0x25c65510 ; ret 0xf7ea
0x00000000005e7dd9 : imul eax, dword ptr [rdx], 0xf0a4f000 ; call rax
0x0000000000443f0a : imul eax, eax, 0x3c ; add edx, eax ; jmp 0x443f20
0x00000000004ce187 : imul eax, eax, 0xd ; pop rdx ; ret
0x00000000004e6e5d : imul eax, eax, 0xfb ; add rax, rdx ; ret
0x000000000059fa95 : imul eax, edi, 0x6cdfa82e ; ret
0x00000000004ce1dd : imul eax, edx, 0xd ; xor rax, rcx ; ret
0x00000000004c2d93 : imul eax, esi, 0xc085fffc ; jle 0x4c2da6 ; pop rbx ; ret
0x000000000057d9d6 : imul ebp, dword ptr [rcx], -0x6b ; ret 0x492f
0x00000000005a3fd6 : imul ebp, dword ptr [rdi], 0xde6af11b ; xor al, 0xfffffffffffffff4 ; ret 0xfa73
0x00000000005781d3 : imul ebp, dword ptr [rdx + rdx*2 + 0x64], 0xb19ee156 ; ret 0x2a5
0x0000000000593360 : imul ebx, dword ptr [rax + 0x5d], -0x67 ; mov bh, 0x2d ; mov ch, 0x27 ; ret 0x2237
0x00000000005a8197 : imul ebx, dword ptr [rax], -0x47 ; out dx, al ; pop rcx ; ret
0x000000000059437a : imul ebx, dword ptr [rax], 0x22 ; ret 0xaf1
0x000000000049f8d1 : imul ebx, dword ptr [rax], 0x48 ; cmovne eax, ecx ; ret
0x00000000004e28ef : imul ebx, dword ptr [rax], 0x72 ; mov ebp, 0x5d5e415b ; ret
0x000000000049f871 : imul ebx, dword ptr [rax], 0xc1450f48 ; ret
0x00000000005b23e4 : imul ebx, dword ptr [rbx], 0x38 ; ret 0x78f3
0x00000000005a354b : imul ebx, ecx, 0x446915c7 ; ret 0x5815
0x00000000004ba7c1 : imul ebx, edi, -1 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000593c09 : imul ebx, esp, 0xe7048453 ; jmp qword ptr [rdi]
0x000000000053ac15 : imul ecx ; cli ; dec dword ptr [rax - 0x77] ; ret 0x7be
0x000000000049db17 : imul ecx ; xchg dword ptr [rax + rax], eax ; ret
0x0000000000431abb : imul ecx, dword ptr [rax + rax], 0x48 ; add esp, 0x18 ; ret
0x000000000046ae63 : imul ecx, dword ptr [rax + rcx*2], -0x77 ; fcomp dword ptr [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0x000000000045698d : imul ecx, dword ptr [rax], 0x44 ; mov dword ptr [rbx], esi ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000564cda : imul ecx, dword ptr [rdi], 0x941c095 ; ret 0xf981
0x000000000053bb86 : imul ecx, dword ptr [rdx], 0x80ea8840 ; ret 0x80d0
0x0000000000597135 : imul ecx, edx, -0x79 ; pop rax ; xchg eax, ecx ; mov dword ptr [rax + rbp*2 - 0x67], eax ; ret 0xef10
0x000000000059ea46 : imul edi, dword ptr [rax], 0x78 ; lodsd eax, dword ptr [rsi] ; pop rax ; ret 0x2910
0x00000000005b39d2 : imul edi, dword ptr [rbx + 0x1f7a4afe], 0x18 ; ret
0x000000000050f7a1 : imul edi, dword ptr [rsi], -2 ; dec dword ptr [rax - 0x77] ; ret
0x000000000048e2f1 : imul edi, eax, -1 ; dec dword ptr [rax - 0x77] ; ret
0x00000000004261f1 : imul edi, ebp, 0xb ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005a99ca : imul edi, esi, 0x35d2f706 ; jle 0x5a9a20 ; push rdi ; ret 0xefcf
0x00000000005b0d8a : imul edx, dword ptr [rbp - 0x7a], -0x31 ; ret
0x000000000059c8c3 : imul edx, dword ptr [rdi + 0x14], -0x29 ; sahf ; cmp al, 0x26 ; ret 0x6f8
0x00000000005a4a39 : imul edx, dword ptr [rsi + 0x59], 0x6eef4c32 ; ret
0x000000000057e2f2 : imul edx, dword ptr [rsi], -0x7e ; call qword ptr [rdx]
0x00000000005ad748 : imul edx, dword ptr [rsi], 0x76788f98 ; ret
0x00000000005e6b15 : imul esi ; call qword ptr [rax]
0x0000000000510c15 : imul esi, dword ptr [rbp + 0x56], -0x7d ; ret
0x0000000000486553 : imul esi, dword ptr [rbx], 0x8948fffd ; ret
0x000000000059bf00 : imul esi, dword ptr [rcx], 0x42 ; ret 0xdc5a
0x000000000052750d : imul esi, dword ptr [rdx - 0xf], 0xef29c50a ; ret
0x000000000059ab76 : imul esi, dword ptr [rsi - 0x48], -0x2d ; push rbp ; std ; std ; ret 0x3148
0x00000000004ab3e1 : imul esi, ebp, -1 ; mov eax, 1 ; pop rdx ; ret
0x00000000005afeaf : imul esp ; call 0xffffffffd501a4f6
0x00000000004d4a3a : imul esp, dword ptr [rax + 0x4c], -0x77 ; out dx, al ; call r15
0x00000000005ad94b : imul esp, dword ptr [rax], 0xa8cc8a79 ; jne 0x5ad90e ; ret
0x00000000005ada8a : imul esp, dword ptr [rcx + 9], 0x18 ; mov edx, 0x31be70df ; ret
0x000000000058d02f : imul esp, dword ptr [rsi], -0x73 ; in al, 0x69 ; ret
0x00000000005974ee : imul esp, eax, 0x6c ; ret 0xda27
0x00000000005a1de2 : imul esp, esp, 0xeb911ecf ; ret 0x2d3e
0x00000000004ce186 : imul rax, rax, 0xd ; pop rdx ; ret
0x00000000004ce1dc : imul rax, rdx, 0xd ; xor rax, rcx ; ret
0x00000000005e6965 : in al, -0x12 ; call qword ptr [rax]
0x000000000057cccd : in al, -0x14 ; out 0x32, al ; ret
0x00000000005e5075 : in al, -0x15 ; jmp qword ptr [rax]
0x000000000046b1eb : in al, -0x15 ; ret 0x8b49
0x000000000057d7d5 : in al, -0x16 ; add ah, ch ; ret 0xce5
0x00000000005fe501 : in al, -0x16 ; call qword ptr [rdi]
0x00000000005e477d : in al, -0x16 ; jmp qword ptr [rax]
0x00000000005ee249 : in al, -0x1e ; jmp qword ptr [rsi]
0x00000000005a2b85 : in al, -0x2f ; mov bl, -0x21 ; pop rsp ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x000000000041fb88 : in al, -0x39 ; or al, byte ptr [rax] ; xor eax, eax ; pop rbx ; ret
0x000000000051279b : in al, -0x3b ; clc ; ja 0x512798 ; ret
0x0000000000523529 : in al, -0x3c ; jrcxz 0x5235b0 ; add dh, byte ptr [rcx] ; ret 0xc1c4
0x00000000004466fb : in al, -0x48 ; pop rsp ; pop rsp ; in al, -0x61 ; ret 0x5dc2
0x00000000005b5bba : in al, -0x4b ; ret 0xf99f
0x0000000000616fec : in al, -0x53 ; add al, byte ptr [rax] ; shl bl, 1 ; hlt ; call qword ptr [rsi]
0x00000000004466ff : in al, -0x61 ; ret 0x5dc2
0x00000000005f50ec : in al, -0x72 ; add byte ptr [rax], al ; xor byte ptr [rdi], 0xe7 ; jmp qword ptr [rsi]
0x000000000057cb19 : in al, -0x72 ; mov ah, 0x5d ; xor al, 0xffffffffffffffff ; ret 0xfd45
0x00000000005a17d2 : in al, -0x77 ; ret
0x00000000005a7e51 : in al, -0x7e ; je 0x5a7eaa ; je 0x5a7e93 ; lahf ; ret 0xb224
0x0000000000617081 : in al, -0xc ; call qword ptr [rsi]
0x00000000005aef27 : in al, -0xd ; fcmovbe st(0), st(3) ; std ; ret 0x488a
0x0000000000613e71 : in al, -0xd ; jmp qword ptr [rcx]
0x000000000051419b : in al, -0xd ; ret
0x000000000059d1ab : in al, -0xf ; sbb al, -0x24 ; push rbp ; mov dl, -0x1f ; ret
0x00000000005e235e : in al, -1 ; clc ; add byte ptr [rax], al ; shr dl, -0x1c ; jmp qword ptr [rax]
0x000000000050c986 : in al, -1 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000489ced : in al, -1 ; inc dword ptr [rbp - 0xeb8b40] ; ret
0x00000000004cfffb : in al, -1 ; lcall ptr [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0x00000000005e22b6 : in al, -1 ; mov eax, 0xe00000ef ; fsub st(4) ; call rax
0x00000000005f118a : in al, -1 ; ret
0x00000000005f07da : in al, -1 ; ret 3
0x000000000059b524 : in al, -5 ; xchg eax, ecx ; lodsb al, byte ptr [rsi] ; neg byte ptr [rdx] ; sahf ; push rsi ; ret 0x38c2
0x000000000060bbec : in al, -7 ; add dword ptr [rax], eax ; nop ; out dx, eax ; call qword ptr [rbx]
0x00000000004e2915 : in al, -9 ; dec dword ptr [rax - 0x77] ; ret
0x00000000005383df : in al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005d6f87 : in al, 0x20 ; add al, 0x24 ; and al, 0xffffffffffffffa0 ; test byte ptr [rsp], ah ; ret
0x00000000005b2a0e : in al, 0x21 ; cmp edi, dword ptr [rcx + 0x30] ; ret 0x958e
0x000000000045aa2e : in al, 0x29 ; ret 0xf41
0x000000000052291d : in al, 0x31 ; ret 0xf5c5
0x000000000052338e : in al, 0x31 ; ret 0xf789
0x00000000005ad0f7 : in al, 0x34 ; add al, ah ; ret
0x00000000004cfb7e : in al, 0x35 ; add byte ptr [rax], al ; pop rax ; ret
0x0000000000600dec : in al, 0x4b ; add dword ptr [rax], eax ; xor esp, ebp ; jmp qword ptr [rbx]
0x00000000006013ec : in al, 0x51 ; add dword ptr [rax], eax ; add byte ptr [rbx - 0x14], bl ; jmp rcx
0x0000000000486988 : in al, 0x59 ; add al, 0 ; xor eax, eax ; pop rdx ; ret
0x0000000000611eec : in al, 0x5c ; add al, byte ptr [rax] ; loopne 0x611f62 ; call qword ptr [rdi]
0x000000000058d032 : in al, 0x69 ; ret
0x0000000000578d84 : in al, 0x6a ; ret
0x00000000004782dd : in al, 0x74 ; adc ecx, dword ptr [rbx - 0x7cb7d7bd] ; ret
0x000000000049c25b : in al, 0x74 ; add al, -1 ; ret
0x00000000005f36ec : in al, 0x74 ; add byte ptr [rax], al ; shl byte ptr [rsi - 0x1a], 1 ; call qword ptr [rbx]
0x00000000004bbbc7 : in al, 0x75 ; or byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret
0x00000000004daf05 : in al, 0x75 ; sbb al, -0x18 ; ret
0x000000000045f244 : in al, 0x7f ; shr ecx, cl ; ret 0
0x00000000005938d6 : in al, 0xa ; ret
0x000000000059c713 : in al, 0xa ; shl dword ptr [rdi + rcx*2], cl ; ret
0x0000000000531fb8 : in al, 0xe ; out dx, eax ; mov esi, 0xbf597fc7 ; ret 0xa88f
0x00000000004d5b1c : in al, 0xf ; push rdi ; ret
0x0000000000403856 : in al, 0xf ; xchg eax, ebp ; ret
0x00000000005e9ba9 : in al, 2 ; add byte ptr [rax - 0xb], dl ; cmc ; call rax
0x00000000004b7ea6 : in al, 2 ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; ret
0x0000000000432abf : in al, 3 ; add byte ptr [rax], al ; mov eax, 0x573dd3 ; ret
0x00000000004eb704 : in al, 4 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000042df00 : in al, 9 ; add byte ptr [rax - 1], bh ; pop rbx ; ret
0x000000000057da32 : in al, dx ; adc esi, dword ptr [rdx - 0x4d] ; call rbx
0x000000000059ee84 : in al, dx ; add al, -0x4c ; pop rax ; xchg eax, ebx ; xor al, 0xffffffffffffffcc ; ret
0x00000000004321c1 : in al, dx ; add al, byte ptr [rax] ; add byte ptr [rax + 0x573347], bh ; ret
0x00000000004321af : in al, dx ; add al, byte ptr [rax] ; add byte ptr [rax + 0x57337d], bh ; ret
0x00000000004588c5 : in al, dx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000006100f4 : in al, dx ; add al, byte ptr ds:[rax] ; or byte ptr [rcx], bl ; call qword ptr [rax]
0x000000000049e6bc : in al, dx ; add byte ptr [r8 - 0x77], cl ; fucompi st(0) ; ret 2
0x000000000043243b : in al, dx ; add byte ptr [rax], al ; add byte ptr [rax + 0x5737ac], bh ; ret
0x00000000005f28f4 : in al, dx ; add byte ptr [rax], al ; cwde ; adc ah, ch ; call rdx
0x00000000004bd6db : in al, dx ; add byte ptr [rax], al ; xor eax, eax ; pop rdx ; ret
0x000000000051d35b : in al, dx ; add esp, eax ; ret
0x00000000006106f4 : in al, dx ; add r8b, byte ptr [rax] ; clc ; sbb bl, dh ; call qword ptr [rax]
0x00000000004f8f37 : in al, dx ; and byte ptr [rbp - 0x77], cl ; ret 0x8949
0x000000000057d23d : in al, dx ; and eax, dword ptr [rbp + 0x40] ; ret 0x8def
0x00000000005afeb0 : in al, dx ; call 0xffffffffd501a4f5
0x00000000005e5246 : in al, dx ; call qword ptr [rax]
0x00000000006022a2 : in al, dx ; call qword ptr [rbx]
0x0000000000602972 : in al, dx ; call qword ptr [rcx]
0x00000000005781cf : in al, dx ; call qword ptr [rdi]
0x00000000006010d2 : in al, dx ; call qword ptr [rdx]
0x000000000060169a : in al, dx ; call qword ptr [rsi]
0x00000000005e54a6 : in al, dx ; call rax
0x0000000000600d1a : in al, dx ; call rcx
0x0000000000602702 : in al, dx ; call rdi
0x000000000059fbca : in al, dx ; call rsp
0x000000000047f3fc : in al, dx ; cmp byte ptr [rbp - 0x77], cl ; ret 0x8949
0x00000000005efdf4 : in al, dx ; cmp eax, dword ptr [rax] ; add byte ptr [rax], bh ; out -0x1d, al ; call qword ptr [rdx]
0x0000000000564e68 : in al, dx ; cmp rsi, 0 ; jne 0x564e37 ; ret
0x0000000000539dbb : in al, dx ; dec dword ptr [rax - 0x77] ; ret
0x00000000005e55ce : in al, dx ; dec dword ptr [rax] ; enter 1, -0x50 ; mov ebp, esp ; jmp qword ptr [rax]
0x00000000005e520e : in al, dx ; dec dword ptr [rax] ; mov eax, 0x1e00001 ; in al, dx ; jmp qword ptr [rax]
0x00000000005e532e : in al, dx ; dec dword ptr [rax] ; mov ebp, 0x43100001 ; in al, dx ; jmp qword ptr [rax]
0x00000000005e560e : in al, dx ; dec eax ; enter 1, 0x30 ; mov esp, gs ; jmp rax
0x00000000005e536e : in al, dx ; dec eax ; mov ebp, 0x43900001 ; in al, dx ; jmp rax
0x00000000005e54e6 : in al, dx ; dec eax ; ret
0x0000000000608af4 : in al, dx ; enter 1, 0x68 ; push -0x12 ; jmp qword ptr [rdi]
0x0000000000609ef4 : in al, dx ; fadd qword ptr [rcx] ; add byte ptr [rax], ch ; ret
0x000000000047b390 : in al, dx ; fcos ; dec dword ptr [rax - 0x77] ; ret
0x0000000000596181 : in al, dx ; fdiv qword ptr [rbx + rax*2 - 0x6e] ; ret
0x00000000005e54b6 : in al, dx ; inc dword ptr [rax] ; ret
0x00000000005e546e : in al, dx ; inc dword ptr [rax] ; ret 1
0x00000000005e52ee : in al, dx ; inc eax ; mov ebx, 0x3fb00001 ; in al, dx ; jmp rax
0x00000000005e589e : in al, dx ; inc eax ; rol dword ptr [rcx], cl ; add al, al ; ret
0x00000000005a1265 : in al, dx ; jae 0x5a11f8 ; ret
0x00000000005a1265 : in al, dx ; jae 0x5a11fa ; ret
0x00000000005957f0 : in al, dx ; je 0x5957b7 ; or byte ptr [rdx], dl ; pop rdx ; ret
0x00000000006141f4 : in al, dx ; jg 0x614200 ; add al, cl ; in al, dx ; jmp qword ptr [rsi]
0x00000000005a7be6 : in al, dx ; jl 0x5a7c2a ; lea edi, dword ptr [rsi] ; in al, dx ; ret
0x00000000005f40f4 : in al, dx ; jle 0x5f40fc ; add al, ch ; ret 0xffe6
0x0000000000477d73 : in al, dx ; jmp 0x477c05
0x00000000005e54c6 : in al, dx ; jmp qword ptr [rax - 0x3d]
0x00000000005e5216 : in al, dx ; jmp qword ptr [rax]
0x0000000000600df2 : in al, dx ; jmp qword ptr [rbx]
0x0000000000601a2a : in al, dx ; jmp qword ptr [rcx]
0x0000000000600baa : in al, dx ; jmp qword ptr [rdi]
0x000000000060211a : in al, dx ; jmp qword ptr [rsi]
0x00000000005e523e : in al, dx ; jmp rax
0x0000000000600e5a : in al, dx ; jmp rcx
0x00000000006015ca : in al, dx ; jmp rdx
0x00000000005b7491 : in al, dx ; jp 0x5b7499 ; ret 0x2076
0x00000000005e57be : in al, dx ; lcall ptr [rax + 0x1cf] ; stosd dword ptr [rdi], eax ; in al, dx ; call rax
0x00000000005e59c6 : in al, dx ; lcall ptr [rax - 0x6ffffe27] ; add ch, ch ; call rax
0x000000000059a998 : in al, dx ; leave ; or al, 0x6b ; ret 0x1320
0x00000000005e5236 : in al, dx ; ljmp ptr [rax + 0x400001b8] ; sbb esp, ebp ; jmp rax
0x00000000005e56a6 : in al, dx ; ljmp ptr [rax + 0x400001cb] ; sahf ; in al, dx ; jmp rax
0x00000000005e5266 : in al, dx ; ljmp ptr [rax - 0x1ffffe47] ; xor ebp, esp ; jmp rax
0x00000000005e53b6 : in al, dx ; ljmp ptr [rax - 0x2ffffe42] ; in al, dx ; jmp rax
0x00000000005e5896 : in al, dx ; ljmp ptr [rax - 0x6ffffe2d] ; ret 0xffec
0x00000000005948b0 : in al, dx ; mov bl, -0x59 ; add cl, al ; xchg eax, edi ; sti ; sub al, -0xf ; ret 0x7130
0x00000000005b17f7 : in al, dx ; mov cl, -0x7d ; ret 0x467e
0x0000000000593d1f : in al, dx ; mov dl, 0x1c ; ret
0x00000000005b6bf4 : in al, dx ; mov dl, byte ptr [rbp - 1] ; sahf ; ret
0x00000000004dec60 : in al, dx ; mov esi, 0x8948fff8 ; ret
0x000000000057ccce : in al, dx ; out 0x32, al ; ret
0x000000000049d380 : in al, dx ; out dx, eax ; add al, byte ptr [rax] ; xor eax, eax ; pop rdx ; ret
0x000000000048f7d3 : in al, dx ; pop rbx ; ret
0x00000000005e549e : in al, dx ; push qword ptr [rax + 0x100001c2] ; pop rdi ; in al, dx ; call rax
0x00000000005e54be : in al, dx ; push qword ptr [rax] ; ret
0x00000000005e5476 : in al, dx ; push qword ptr [rax] ; ret 1
0x00000000005e54ee : in al, dx ; push rax ; ret
0x00000000005a7beb : in al, dx ; ret
0x00000000005af114 : in al, dx ; ret 0x203c
0x00000000005d4fcf : in al, dx ; ret 0x41e0
0x000000000057d7d8 : in al, dx ; ret 0xce5
0x000000000058e371 : in al, dx ; ret 0xe63
0x00000000005a3ee9 : in al, dx ; ret 0xfffc
0x00000000006084f4 : in al, dx ; ret 1
0x000000000047bd50 : in al, dx ; ret 6
0x00000000006170f4 : in al, dx ; scasb al, byte ptr [rdi] ; add al, byte ptr [rax] ; sub ah, ah ; hlt ; call qword ptr [rsi]
0x00000000005472e2 : in al, dx ; stc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000566d00 : in al, dx ; std ; dec dword ptr [rax - 0x77] ; ret
0x00000000006149f4 : in al, dx ; xchg dword ptr [rdx], eax ; add byte ptr [rax + 0x3a], ch ; hlt ; jmp rdi
0x00000000005b27d2 : in al, dx ; xchg eax, ecx ; push -0x19 ; jo 0x5b27bd ; ret 0x7553
0x00000000005e5cd5 : in ax, dx ; call rax
0x00000000005e50c5 : in eax, -0x15 ; call qword ptr [rax]
0x00000000005e50b5 : in eax, -0x15 ; jmp rax
0x00000000005537bf : in eax, -0x16 ; call rcx
0x00000000005b721e : in eax, -0x20 ; push rbp ; int1 ; leave ; leave ; ret
0x000000000059dab6 : in eax, -0x29 ; clc ; sbb edx, dword ptr [rax + rdx*4] ; ret
0x000000000058e365 : in eax, -0x2b ; ret 0x7870
0x000000000059d228 : in eax, -0x30 ; ret
0x000000000044fcd8 : in eax, -0x3c ; ret
0x00000000004be711 : in eax, -0x3c ; ret 0xf6f3
0x00000000004455bf : in eax, -0x3f ; ret 0x4408
0x00000000005ad738 : in eax, -0x42 ; ret
0x0000000000483bf7 : in eax, -0x45 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000005a03d2 : in eax, -0x47 ; ret 0xae59
0x000000000058d775 : in eax, -0x4d ; fidivr word ptr [rsp + rcx*8 + 1] ; leave ; ret
0x00000000005aaa39 : in eax, -0x52 ; adc ecx, dword ptr [rbp - 0x66aec903] ; ret
0x00000000004a7ce2 : in eax, -0x7e ; pop rax ; add byte ptr [rcx - 0x48], al ; ret 1
0x0000000000617669 : in eax, -0xc ; call qword ptr [rax]
0x0000000000617399 : in eax, -0xc ; call qword ptr [rsi]
0x00000000005e93cd : in eax, -0xe ; jmp rax
0x00000000005e2776 : in eax, -1 ; add byte ptr [rcx + rax], al ; add al, dl ; mov dl, -0x1b ; jmp qword ptr [rax]
0x00000000005e27ee : in eax, -1 ; call 0xffffffff805e2903
0x00000000005e2506 : in eax, -1 ; clc ; clc ; add byte ptr [rax], al ; nop ; adc ah, ch ; call qword ptr [rax]
0x000000000050c8dd : in eax, -1 ; dec dword ptr [rax - 0x77] ; ret
0x00000000005e275e : in eax, -1 ; mov eax, 0x20000103 ; mov dl, -0x1b ; call rax
0x00000000005e2456 : in eax, -1 ; mov eax, 0x800000f6 ; add esp, ebp ; call rax
0x00000000005e29e6 : in eax, -1 ; or byte ptr [rdi], cl ; add dword ptr [rax], eax ; sal bh, -0x1b ; jmp qword ptr [rax]
0x00000000005e2656 : in eax, -1 ; test al, -2 ; add byte ptr [rax], al ; and byte ptr [rax - 0x1b], bl ; call rax
0x000000000054b647 : in eax, -2 ; dec dword ptr [rax - 0x77] ; ret
0x00000000004882a7 : in eax, -4 ; dec dword ptr [rax - 0x77] ; ret
0x000000000055af6d : in eax, -8 ; dec dword ptr [rax - 0x77] ; ret
0x00000000004e2947 : in eax, -9 ; lcall ptr [rbx + 0x41] ; pop rsi ; pop r15 ; ret
0x00000000005e1fa1 : in eax, 0 ; add al, al ; mov cl, -0x1c ; jmp qword ptr [rax]
0x00000000005e1fc9 : in eax, 0 ; add byte ptr [rax], al ; mov ch, -0x1c ; jmp rax
0x0000000000482866 : in eax, 0x10 ; std ; shl esi, -0x4d ; ret 0x5688
0x000000000059b510 : in eax, 0x28 ; ret 0x8a49
0x00000000005b1718 : in eax, 0x29 ; ret
0x000000000057827e : in eax, 0x3a ; fcomp st(0), st(2) ; ret 0x3437
0x000000000059bd1f : in eax, 0x40 ; ret
0x00000000005aba5e : in eax, 0x4e ; ret
0x00000000005ab7db : in eax, 0x58 ; jb 0x5ab816 ; mov al, -0x3c ; ret 0xc5cc
0x00000000005a6bb7 : in eax, 0x5c ; jmp rsp
0x000000000059c8c2 : in eax, 0x6b ; push rdi ; adc al, -0x29 ; sahf ; cmp al, 0x26 ; ret 0x6f8
0x00000000005b7185 : in eax, 0x70 ; ret
0x000000000050ec77 : in eax, 0x72 ; std ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000595144 : in eax, 0x77 ; cmp bl, dl ; sbb byte ptr [rbp + rcx*8 - 0x45], ch ; ret
0x00000000004ade04 : in eax, 1 ; add byte ptr [rax - 0x7bf0ffc5], al ; ret
0x00000000005e5c71 : in eax, 1 ; add byte ptr [rax], ah ; pop rsp ; in eax, dx ; jmp qword ptr [rax]
0x00000000005e9bf1 : in eax, 2 ; add byte ptr [rax - 8], dl ; cmc ; jmp rax
0x00000000004b7d26 : in eax, 2 ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; ret
0x00000000005e2219 : in eax, dx ; add byte ptr [rax], al ; rcl ch, -0x1c ; call rax
0x00000000005e5ed1 : in eax, dx ; add dword ptr [rax], eax ; nop ; jg 0x5e5eca ; jmp rax
0x00000000004ad616 : in eax, dx ; add dword ptr [rax], eax ; xor eax, eax ; pop rbx ; ret
0x000000000044cb0b : in eax, dx ; add eax, 0xfe6941c4 ; ret 0xf201
0x000000000043e80f : in eax, dx ; and eax, 0x89480002 ; ret
0x00000000005e5b46 : in eax, dx ; call qword ptr [rax]
0x0000000000606812 : in eax, dx ; call qword ptr [rcx]
0x000000000060435a : in eax, dx ; call qword ptr [rsi]
0x00000000005e59ce : in eax, dx ; call rax
0x00000000006047f2 : in eax, dx ; call rbx
0x0000000000605b42 : in eax, dx ; call rcx
0x000000000060389a : in eax, dx ; call rsi
0x0000000000604b1a : in eax, dx ; call rsp
0x00000000005564b5 : in eax, dx ; cdq ; pushfq ; ret 0x2fc2
0x00000000005e991d : in eax, dx ; cmc ; jmp rax
0x00000000005e60de : in eax, dx ; dec dword ptr [rax - 0xffffe0a] ; ret
0x00000000005e59d6 : in eax, dx ; dec dword ptr [rax] ; fiadd dword ptr [rcx] ; add byte ptr [rax + 6], dl ; in eax, dx ; jmp qword ptr [rax]
0x00000000005e5c6e : in eax, dx ; dec dword ptr [rax] ; in eax, 1 ; add byte ptr [rax], ah ; pop rsp ; in eax, dx ; jmp qword ptr [rax]
0x00000000005e5bce : in eax, dx ; dec dword ptr [rax] ; loop 0x5e5bdd ; add byte ptr [rax + 0x32], dh ; in eax, dx ; jmp qword ptr [rax]
0x00000000005e5ce6 : in eax, dx ; dec dword ptr [rax] ; out 1, eax ; add byte ptr [rax], al ; in eax, dx ; jmp qword ptr [rax]
0x00000000005e5f2e : in eax, dx ; dec dword ptr [rax] ; out dx, eax ; add dword ptr [rax], eax ; nop ; nop ; in eax, dx ; jmp qword ptr [rax]
0x00000000005e60b6 : in eax, dx ; dec dword ptr [rax] ; test byte ptr [rcx], 0 ; rol al, -0x13 ; jmp qword ptr [rax]
0x00000000005e60fe : in eax, dx ; dec dword ptr [rax] ; test dword ptr [rcx], 0xedc52000 ; jmp qword ptr [rax]
0x00000000005e5ece : in eax, dx ; dec eax ; in eax, dx ; add dword ptr [rax], eax ; nop ; jg 0x5e5ecd ; jmp rax
0x0000000000617ac1 : in eax, dx ; hlt ; call qword ptr [rax]
0x0000000000606431 : in eax, dx ; in eax, dx ; jmp qword ptr [rax]
0x00000000005e5aee : in eax, dx ; inc eax ; fiadd word ptr [rcx] ; add byte ptr [rax + 0x1e], ah ; in eax, dx ; jmp rax
0x00000000005e8d9d : in eax, dx ; int1 ; jmp rax
0x000000000043ea0a : in eax, dx ; je 0x43ea86 ; xor esi, esi ; mov rdi, r13 ; call r15
0x00000000004d78f2 : in eax, dx ; je 0x4d7905 ; mov rdi, r13 ; call 0x4f3b18
0x0000000000545310 : in eax, dx ; je 0x54532b ; mov rdi, qword ptr [rbx + 8] ; call 0x4415f9
0x000000000058b6fe : in eax, dx ; je 0x58b700 ; ret
0x00000000005aa339 : in eax, dx ; jge 0x5aa35a ; in eax, dx ; push rbp ; ret 0x89e7
0x0000000000599105 : in eax, dx ; jl 0x5990e8 ; ret 0x278f
0x000000000053e08c : in eax, dx ; jmp 0x53e0bf
0x00000000005b7868 : in eax, dx ; jmp 0xfffffffffa5e3a73
0x00000000005e59de : in eax, dx ; jmp qword ptr [rax]
0x000000000060533a : in eax, dx ; jmp qword ptr [rbx]
0x000000000060399a : in eax, dx ; jmp qword ptr [rcx]
0x000000000060513a : in eax, dx ; jmp qword ptr [rsi]
0x00000000005e5a4e : in eax, dx ; jmp rax
0x0000000000605392 : in eax, dx ; jmp rdx
0x00000000006038d2 : in eax, dx ; jmp rsi
0x00000000005e59fe : in eax, dx ; lcall ptr [rax + 0x200001da] ; or ch, ch ; call rax
0x0000000000532062 : in eax, dx ; leave ; ret 0x3b81
0x00000000005e5fee : in eax, dx ; ljmp ptr [rax - 0x5ffffe0e] ; stosb byte ptr [rdi], al ; in eax, dx ; call rax
0x00000000005e60d6 : in eax, dx ; ljmp ptr [rax - 0xa] ; add dword ptr [rax], eax ; push rax ; ret 0xffed
0x00000000004163f5 : in eax, dx ; mov eax, ebp ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000040e905 : in eax, dx ; mov eax, ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000405cfe : in eax, dx ; mov eax, ebp ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004fc5bb : in eax, dx ; mov rax, rbp ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000545989 : in eax, dx ; mov rdi, rbp ; call 0x461c26
0x00000000004a41f8 : in eax, dx ; or byte ptr [rcx - 0x7d], 0xc4 ; adc byte ptr [rcx], bh ; ret
0x000000000059ddfe : in eax, dx ; or eax, 0x6d4caed ; sbb cl, byte ptr [rdi] ; ret 0x22b3
0x00000000005418cf : in eax, dx ; out -5, eax ; dec dword ptr [rax - 1] ; ret
0x00000000005e69dd : in eax, dx ; out dx, al ; call rax
0x00000000005e5aae : in eax, dx ; push qword ptr [rax - 0x4ffffe23] ; sbb ch, ch ; call rax
0x00000000005e5cce : in eax, dx ; push qword ptr [rax - 0x5ffffe1a] ; in ax, dx ; call rax
0x00000000005e5b66 : in eax, dx ; push qword ptr [rax - 0xffffe20] ; xor ch, ch ; call rax
0x00000000005aa33c : in eax, dx ; push rbp ; ret 0x89e7
0x000000000055cb8f : in eax, dx ; ret
0x00000000005ac78f : in eax, dx ; ret 0xa9bd
0x000000000054a52f : in eax, dx ; ret 0xfff0
0x0000000000423d2f : in eax, dx ; ret 1
0x00000000004596ef : in eax, dx ; sar edi, 1 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000594ad7 : in eax, dx ; sbb al, 0x70 ; and ah, byte ptr [rsi + rdi*4 - 0x15] ; ret
0x00000000005a2b6a : in eax, dx ; stc ; ret
0x000000000059ca9e : in eax, dx ; sub ebx, ebp ; ret 0x4683
0x00000000005a854a : in eax, dx ; xchg eax, ecx ; ret
0x0000000000431afa : in eax, dx ; xor byte ptr [rdi], dl ; ret
0x000000000055b642 : in eax, dx ; xor eax, eax ; ret
0x000000000040718d : in eax, dx ; xor esi, esi ; mov rdi, r12 ; call qword ptr [rax]
0x00000000004492a2 : inc ah ; ret
0x000000000048eeb0 : inc byte ptr [rax] ; add byte ptr [rax], al ; call rax
0x0000000000564e6b : inc byte ptr [rax] ; jne 0x564e34 ; ret
0x000000000059b361 : inc byte ptr [rbp + 0x2b62a352] ; ret
0x0000000000505845 : inc byte ptr [rbp + 0x5be679c9] ; ret
0x00000000005267aa : inc byte ptr [rbp + 0xf] ; cmp ch, cl ; ret
0x0000000000440bb9 : inc byte ptr [rbp - 0x7c178137] ; ret 0x89d0
0x00000000005b3d70 : inc byte ptr [rbx + 0x72576480] ; jns 0x5b3d81 ; ret
0x000000000057e541 : inc byte ptr [rbx - 0x3bfa7e68] ; ret
0x0000000000455988 : inc byte ptr [rbx - 0x6bf0ef06] ; ret 0xc284
0x000000000043b7b3 : inc byte ptr [rcx + 0xf] ; ret 0x16eb
0x00000000004e49a4 : inc byte ptr [rcx + 9] ; ret
0x00000000005390d1 : inc byte ptr [rcx - 0x7d] ; ret
0x00000000004c6102 : inc byte ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000060c0a5 : inc byte ptr [rcx] ; add byte ptr [rax], bh ; out dx, eax ; call qword ptr [rax]
0x000000000049c9d5 : inc byte ptr [rcx] ; jne 0x49c9e8 ; movsxd rax, dword ptr [rdi + 0x14] ; pop rdx ; ret
0x000000000058dec3 : inc byte ptr [rsi - 0x6c] ; or byte ptr [rax + 0x4d], bl ; ret 0x91b2
0x0000000000537209 : inc cl ; ret 0x441e
0x00000000005df2e0 : inc dl ; push rbp ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], cl ; ret
0x00000000004e91f4 : inc dword ptr [rax + 0x10] ; ret
0x00000000005eaa57 : inc dword ptr [rax + 0x3000031b] ; ret
0x00000000005e3747 : inc dword ptr [rax - 0x4ffffeb7] ; ret
0x00000000005e2777 : inc dword ptr [rax] ; add al, 1 ; add al, dl ; mov dl, -0x1b ; jmp qword ptr [rax]
0x00000000004409d3 : inc dword ptr [rax] ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0x8948
0x000000000044d42e : inc dword ptr [rax] ; je 0x44d43b ; ud2 ; ret
0x00000000005e8f87 : inc dword ptr [rax] ; mov cl, 2 ; add byte ptr [rax + 0x2d], dl ; jmp qword ptr [rax]
0x00000000005eb957 : inc dword ptr [rax] ; pop rax ; add eax, dword ptr [rax] ; rol byte ptr [rcx], 1 ; clc ; jmp qword ptr [rax]
0x00000000005e54b7 : inc dword ptr [rax] ; ret
0x00000000005e546f : inc dword ptr [rax] ; ret 1
0x00000000005e4e5f : inc dword ptr [rax] ; stosb byte ptr [rdi], al ; add dword ptr [rax], eax ; jo 0x5e4e1c ; jmp 0x5e4e6f
0x00000000005673d8 : inc dword ptr [rbp + 0x12678c0] ; ret
0x00000000004966a6 : inc dword ptr [rbp + 0x5b027ec0] ; ret
0x0000000000441b91 : inc dword ptr [rbp - 0x27baf040] ; mov eax, ebx ; pop rbx ; ret
0x0000000000478f02 : inc dword ptr [rbp - 0x27bbf040] ; mov eax, ebx ; pop rbx ; ret
0x0000000000443385 : inc dword ptr [rbp - 0x3f38b740] ; call rdi
0x000000000055f8d8 : inc dword ptr [rbp - 0x998b40] ; ret
0x0000000000540186 : inc dword ptr [rbp - 0x9d8b40] ; ret
0x000000000055aafd : inc dword ptr [rbp - 0xb68b40] ; ret
0x000000000053aace : inc dword ptr [rbp - 0xba8140] ; ret
0x0000000000552b8a : inc dword ptr [rbp - 0xc18b40] ; ret
0x0000000000560365 : inc dword ptr [rbp - 0xd08b40] ; ret
0x000000000055a93e : inc dword ptr [rbp - 0xdc8b40] ; ret
0x000000000055fa6b : inc dword ptr [rbp - 0xdf8b40] ; ret
0x000000000048e2af : inc dword ptr [rbp - 0xe78b40] ; ret
0x0000000000489cef : inc dword ptr [rbp - 0xeb8b40] ; ret
0x00000000004f4eb4 : inc dword ptr [rbp - 0xed8b40] ; ret
0x0000000000552a49 : inc dword ptr [rbp - 0xee8b40] ; ret
0x00000000004fcd58 : inc dword ptr [rbp - 0xef8b40] ; ret
0x0000000000567479 : inc dword ptr [rbp - 0xf18740] ; ret
0x00000000004862aa : inc dword ptr [rbp - 0xf18b40] ; ret
0x0000000000430b5e : inc dword ptr [rbp - 0xf88b40] ; ret
0x000000000040acb7 : inc dword ptr [rbx + 0x37603ff] ; xor eax, eax ; ret
0x000000000041e2d9 : inc dword ptr [rbx - 0x7cf0fd08] ; ret 7
0x000000000040acb9 : inc dword ptr [rbx] ; jbe 0x40acc6 ; xor eax, eax ; ret
0x000000000040afb9 : inc dword ptr [rbx] ; jbe 0x40afc6 ; xor eax, eax ; ret
0x000000000040b3e9 : inc dword ptr [rbx] ; jbe 0x40b3f6 ; xor eax, eax ; ret
0x0000000000443df0 : inc dword ptr [rcx + 0xf] ; mov esi, 0x88013244 ; ret
0x00000000004698bd : inc dword ptr [rcx + 0xf] ; xchg eax, esi ; ret 0x3949
0x00000000004e493b : inc dword ptr [rcx + 9] ; rol dword ptr [rcx + 0x31], cl ; ret
0x000000000050448b : inc dword ptr [rcx + rcx*4 - 0x10] ; pop rbx ; pop r14 ; pop r15 ; ret
0x000000000048e120 : inc dword ptr [rcx + rcx*4 - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000053d722 : inc dword ptr [rcx + rcx*4 - 0x16] ; mov ecx, ebx ; mov r8, r12 ; call rax
0x00000000004b0100 : inc dword ptr [rcx + rcx*4 - 0x19] ; call qword ptr [rip + 0x37c276]
0x000000000049bf5f : inc dword ptr [rcx + rcx*4 - 8] ; pop rbx ; pop r14 ; pop r15 ; ret
0x0000000000596024 : inc dword ptr [rcx - 0x3a57b3eb] ; ret
0x000000000050b4f6 : inc dword ptr [rcx - 0x73] ; push rsi ; ljmp ptr [rcx] ; ret 0xff48
0x000000000040923c : inc dword ptr [rcx - 0x7f] ; std ; jmp qword ptr [rcx]
0x0000000000546a11 : inc dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000502f25 : inc dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rbp + 0x21], cl ; ret
0x0000000000502564 : inc dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rbp + 0x21], cl ; ret 0x840f
0x000000000048b1d1 : inc dword ptr [rcx] ; ret
0x0000000000505739 : inc dword ptr [rdi + rcx + 0x4f] ; ret
0x0000000000477e4f : inc dword ptr [rdx] ; jb 0x477e5b ; xor eax, eax ; ret
0x0000000000432ece : inc dword ptr [rdx] ; jne 0x432ee1 ; mov eax, 0x57409e ; ret
0x0000000000432eee : inc dword ptr [rdx] ; jne 0x432f01 ; mov eax, 0x5bc384 ; ret
0x000000000045655a : inc dword ptr [rdx] ; jne 0x456569 ; add eax, 3 ; ret
0x0000000000437683 : inc dword ptr [rip - 0x3fcefc8a] ; ret
0x0000000000440a17 : inc dword ptr [rsi] ; mov eax, 1 ; ret
0x00000000005e6caf : inc eax ; add al, byte ptr es:[rax] ; add byte ptr [rcx], bh ; out dx, eax ; jmp rax
0x00000000005e63c7 : inc eax ; add eax, dword ptr [rdx] ; add byte ptr [rax], dl ; jb 0x5e63c5 ; jmp rax
0x00000000005e76e7 : inc eax ; add r8b, byte ptr [r8] ; sub byte ptr [rsi], -0x10 ; jmp rax
0x00000000004125cf : inc eax ; cmp rax, 8 ; jne 0x412598 ; ret
0x00000000004d8ec6 : inc eax ; cmp rax, 8 ; jne 0x4d8ea8 ; ret
0x00000000004d8eff : inc eax ; cmp rax, 8 ; jne 0x4d8ee8 ; ret
0x00000000005e5aef : inc eax ; fiadd word ptr [rcx] ; add byte ptr [rax + 0x1e], ah ; in eax, dx ; jmp rax
0x00000000005e9bef : inc eax ; in eax, 2 ; add byte ptr [rax - 8], dl ; cmc ; jmp rax
0x00000000005e51bf : inc eax ; mov dh, 1 ; add al, al ; std ; jmp 0x5e51cf
0x00000000005e52ef : inc eax ; mov ebx, 0x3fb00001 ; in al, dx ; jmp rax
0x0000000000468dee : inc eax ; pop rbx ; ret
0x00000000005acb32 : inc eax ; pop rdi ; cmc ; ret
0x00000000005dc2c7 : inc eax ; ret
0x00000000005e939f : inc eax ; ret 2
0x00000000005e589f : inc eax ; rol dword ptr [rcx], cl ; add al, al ; ret
0x00000000005e4e4f : inc eax ; test eax, 0xacc00001 ; jmp 0x5e4e5f
0x0000000000456573 : inc eax ; test esi, esi ; jg 0x456576 ; ret
0x00000000005e4ad7 : inc eax ; wait ; add dword ptr [rax], eax ; rcl byte ptr [rbx - 0x15] ; jmp rax
0x00000000005e3297 : inc eax ; xor eax, dword ptr [rcx] ; add byte ptr [rax], ah ; or ch, al ; jmp rax
0x000000000059a03d : inc ebp ; jmp rsi
0x000000000046b1e8 : inc ebp ; jne 0x46b1d5 ; jmp 0x46b1b5
0x000000000047ce77 : inc ebx ; mov eax, ebx ; pop rbx ; ret
0x00000000004261b1 : inc ecx ; cmp ecx, 8 ; jl 0x4261a7 ; ret
0x00000000004564c5 : inc ecx ; mov qword ptr [rdi], r9 ; ret
0x00000000004e48e5 : inc ecx ; ret
0x00000000004e489f : inc ecx ; ret 0x410a
0x00000000004b1e9e : inc edi ; push r8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004b944a : inc edx ; cmp r10, rsi ; jb 0x4b9449 ; pop rax ; jmp r8
0x0000000000404cc5 : inc edx ; jmp 0x404ce0
0x000000000050e288 : inc edx ; jmp 0x50e29a
0x0000000000594c5d : inc edx ; jmp 0x594c07
0x00000000004ca2d9 : inc edx ; mov dword ptr [rbx + 0xb0], edx ; pop rbx ; ret
0x00000000005175d1 : inc edx ; xor eax, eax ; cmp edx, 0xf ; jle 0x5175c9 ; ret
0x000000000048f7cd : inc esi ; dec r9 ; jne 0x48f7c8 ; pop rbx ; ret
0x00000000004e8c25 : inc esi ; dec rdx ; jne 0x4e8c17 ; ret
0x00000000005ae041 : inc esi ; ret 0x728d
0x0000000000440a16 : inc qword ptr [rsi] ; mov eax, 1 ; ret
0x000000000059a03c : inc r13d ; jmp rsi
0x000000000046b1e7 : inc r13d ; jne 0x46b1d6 ; jmp 0x46b1b6
0x00000000005acb31 : inc r8 ; pop rdi ; cmc ; ret
0x00000000004564c4 : inc r9 ; mov qword ptr [rdi], r9 ; ret
0x00000000004125ce : inc rax ; cmp rax, 8 ; jne 0x412599 ; ret
0x00000000004d8ec5 : inc rax ; cmp rax, 8 ; jne 0x4d8ea9 ; ret
0x00000000004d8efe : inc rax ; cmp rax, 8 ; jne 0x4d8ee9 ; ret
0x0000000000404cc4 : inc rdx ; jmp 0x404ce1
0x000000000050e287 : inc rdx ; jmp 0x50e29b
0x000000000048f7cc : inc rsi ; dec r9 ; jne 0x48f7c9 ; pop rbx ; ret
0x00000000004e8c24 : inc rsi ; dec rdx ; jne 0x4e8c18 ; ret
0x000000000053aacc : inc word ptr [rbp - 0xba8140] ; ret
0x00000000005aa825 : insb byte ptr [edi], dx ; xor al, 0xffffffffffffffa8 ; clc ; ret 0xc375
0x00000000004c97e0 : insb byte ptr [rdi], dx ; adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004322bb : insb byte ptr [rdi], dx ; add al, byte ptr [rax] ; add byte ptr [rax + 0x573a42], bh ; ret
0x00000000004f0115 : insb byte ptr [rdi], dx ; add byte ptr [rax], al ; add al, ch ; push rdx ; ret 0xfffd
0x000000000059a793 : insb byte ptr [rdi], dx ; add dword ptr [rcx + 0x54], ebp ; mov word ptr [rsi + 0x44], ss ; ret 0x7461
0x0000000000419de6 : insb byte ptr [rdi], dx ; add dword ptr [rcx], ecx ; ret
0x00000000005ebf91 : insb byte ptr [rdi], dx ; add eax, dword ptr [rax] ; shr byte ptr [rdx - 8], 1 ; call qword ptr [rax]
0x0000000000602874 : insb byte ptr [rdi], dx ; add word ptr [rax], ax ; js 0x60283c ; in al, dx ; call qword ptr [rax]
0x00000000004e4acb : insb byte ptr [rdi], dx ; and al, 0x20 ; add rsp, 0x28 ; ret
0x000000000043a5cf : insb byte ptr [rdi], dx ; and al, 0x20 ; mov r13, r8 ; mov r14, r10 ; call rax
0x00000000004c535c : insb byte ptr [rdi], dx ; and al, 0x28 ; mov rcx, rbx ; call r14
0x00000000005345b6 : insb byte ptr [rdi], dx ; and al, 0x50 ; add esp, eax ; ret 0x5d
0x000000000042c0f2 : insb byte ptr [rdi], dx ; and rax, rdx ; mov dword ptr [rcx + 0x6c], eax ; pop rdx ; ret
0x00000000005b4e1b : insb byte ptr [rdi], dx ; fidiv word ptr [rbx + 0x26df5e2a] ; ret 0x4d11
0x00000000005b50f8 : insb byte ptr [rdi], dx ; fisttp word ptr [rcx] ; sub esi, ebx ; sar dword ptr [rsi], 1 ; ret
0x00000000005e5d75 : insb byte ptr [rdi], dx ; in eax, dx ; call qword ptr [rax]
0x000000000059fdd9 : insb byte ptr [rdi], dx ; mov ah, -0xe ; xlatb ; xor byte ptr [rbp - 0x30], ah ; ret 0x3ef2
0x000000000042c0b3 : insb byte ptr [rdi], dx ; mov eax, ecx ; pop rdx ; ret
0x000000000042a036 : insb byte ptr [rdi], dx ; mov qword ptr [rdi + 0x30], rax ; ret
0x0000000000431a6b : insb byte ptr [rdi], dx ; or al, 0 ; add rsp, 0x18 ; ret
0x00000000004256ab : insb byte ptr [rdi], dx ; or al, byte ptr [rax] ; xor ebx, ebx ; mov rax, rbx ; pop rbx ; ret
0x00000000005af68a : insb byte ptr [rdi], dx ; or ch, byte ptr [rbp - 0xab5d86d] ; ret
0x00000000005a60ed : insb byte ptr [rdi], dx ; or ebx, dword ptr [rdx] ; pop rsp ; enter -0x6f25, -0x2e ; ret
0x00000000005b7b19 : insb byte ptr [rdi], dx ; out -0x12, al ; cmp al, -0x75 ; ret
0x00000000005b50a4 : insb byte ptr [rdi], dx ; pop rdi ; jmp 0x5b506d
0x000000000042c0f8 : insb byte ptr [rdi], dx ; pop rdx ; ret
0x0000000000535e66 : insb byte ptr [rdi], dx ; ret
0x00000000005b25b7 : insb byte ptr [rdi], dx ; ret 0x3118
0x00000000005d6e67 : insb byte ptr [rdi], dx ; ret 0x6c6
0x00000000005aa086 : insb byte ptr [rdi], dx ; ret 0x8371
0x0000000000520ec2 : insb byte ptr [rdi], dx ; ret 0xc789
0x00000000005974f0 : insb byte ptr [rdi], dx ; ret 0xda27
0x00000000005b6328 : insb byte ptr [rdi], dx ; ret 0xeeb6
0x000000000049e630 : insb byte ptr [rdi], dx ; ret 2
0x00000000005a6187 : insb byte ptr [rdi], dx ; salc ; jle 0x5a612f ; ret 0x54c5
0x00000000005ac7fe : insb byte ptr [rdi], dx ; sbb al, 0x1e ; add ah, byte ptr [rcx + rbp*8 - 0x74] ; lodsd eax, dword ptr [rsi] ; ret 0x82b3
0x000000000059ebe6 : insb byte ptr [rdi], dx ; sbb byte ptr [rdi - 0x5130111d], dl ; pop rdi ; ret
0x0000000000556b72 : insb byte ptr [rdi], dx ; sbb ebx, eax ; ja 0x556bb2 ; ret
0x0000000000556b7a : insb byte ptr [rdi], dx ; sbb ebx, eax ; ja 0x556bba ; ret
0x0000000000438070 : insb byte ptr [rdi], dx ; sbb edx, dword ptr [rax] ; add byte ptr [rcx], bh ; ret
0x000000000048ae15 : insb byte ptr [rdi], dx ; std ; dec dword ptr [rax - 0x77] ; ret
0x00000000005af0ff : insb byte ptr [rdi], dx ; std ; jbe 0x5af114 ; pop qword ptr [rbx - 0x72] ; ret
0x00000000005a6ce2 : insb byte ptr [rdi], dx ; sub cl, dh ; ret 0x861c
0x0000000000615974 : insb byte ptr [rdi], dx ; xchg eax, edi ; add al, byte ptr [rax] ; js 0x6159e4 ; hlt ; jmp qword ptr [rcx]
0x00000000005aa826 : insb byte ptr [rdi], dx ; xor al, 0xffffffffffffffa8 ; clc ; ret 0xc375
0x00000000005f2f9d : insd dword ptr [rdi], dx ; add byte ptr [rax], al ; nop ; xor al, 0xffffffffffffffe6 ; jmp rdi
0x0000000000431f2a : insd dword ptr [rdi], dx ; add eax, dword ptr [rax] ; add byte ptr [rax + 0x573a5e], bh ; ret
0x0000000000431f18 : insd dword ptr [rdi], dx ; add eax, dword ptr [rax] ; add byte ptr [rax + 0x573a94], bh ; ret
0x0000000000431f06 : insd dword ptr [rdi], dx ; add eax, dword ptr [rax] ; add byte ptr [rax + 0x573ac8], bh ; ret
0x0000000000431ef4 : insd dword ptr [rdi], dx ; add eax, dword ptr [rax] ; add byte ptr [rax + 0x573afe], bh ; ret
0x0000000000431ee2 : insd dword ptr [rdi], dx ; add eax, dword ptr [rax] ; add byte ptr [rax + 0x573b7c], bh ; ret
0x00000000005ebfb1 : insd dword ptr [rdi], dx ; add eax, dword ptr [rax] ; jo 0x5ec029 ; clc ; call rax
0x00000000005ebfc1 : insd dword ptr [rdi], dx ; add eax, dword ptr [rax] ; nop ; outsb dx, byte ptr [rsi] ; clc ; jmp qword ptr [rax]
0x00000000005a9904 : insd dword ptr [rdi], dx ; and ch, byte ptr [rax - 0x7f] ; push rbx ; ret 0x1e72
0x00000000005a03d0 : insd dword ptr [rdi], dx ; and ebp, 0xffffffb9 ; ret 0xae59
0x00000000005ebfb5 : insd dword ptr [rdi], dx ; clc ; call rax
0x0000000000522e02 : insd dword ptr [rdi], dx ; cmp byte ptr [rbp + 0x20], dl ; add esp, eax ; ret
0x000000000053458d : insd dword ptr [rdi], dx ; cmp byte ptr [rsp + 0x20], dl ; add esp, eax ; ret 0x75
0x00000000004700df : insd dword ptr [rdi], dx ; cmp eax, 0x8948ffff ; ret
0x0000000000594020 : insd dword ptr [rdi], dx ; cmp edi, edi ; ret 0x8087
0x00000000005a82e3 : insd dword ptr [rdi], dx ; cwde ; loope 0x5a8323 ; je 0x5a832f ; ret
0x000000000053a0f5 : insd dword ptr [rdi], dx ; dec dword ptr [rax - 0x77] ; ret
0x000000000059d23d : insd dword ptr [rdi], dx ; enter 0x405a, -0xc ; insb byte ptr [rdi], dx ; ret
0x00000000005aae47 : insd dword ptr [rdi], dx ; ffree st(2) ; or eax, 0xcb2412ea ; movsb byte ptr [rdi], byte ptr [rsi] ; call qword ptr [rdi]
0x00000000005a4f7e : insd dword ptr [rdi], dx ; fstp dword ptr [rbx - 0x5e] ; ret 0xb5f8
0x0000000000579613 : insd dword ptr [rdi], dx ; insd dword ptr [rdi], dx ; push rcx ; ret 0xe445
0x00000000005b0a3e : insd dword ptr [rdi], dx ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xcec9
0x0000000000443ca0 : insd dword ptr [rdi], dx ; or al, byte ptr [rax] ; mov eax, dword ptr [rdi + 8] ; sub eax, dword ptr [rsi + 8] ; ret
0x00000000004e2f83 : insd dword ptr [rdi], dx ; or byte ptr [rax - 0x7d], cl ; ret
0x000000000045f601 : insd dword ptr [rdi], dx ; or byte ptr [rax], al ; mov eax, ebp ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000507264 : insd dword ptr [rdi], dx ; or byte ptr [rcx - 9], cl ; ret
0x00000000005aeb57 : insd dword ptr [rdi], dx ; or byte ptr [rdi], cl ; ret
0x00000000005e63a5 : insd dword ptr [rdi], dx ; out dx, al ; call qword ptr [rax]
0x0000000000579614 : insd dword ptr [rdi], dx ; push rcx ; ret 0xe445
0x00000000005964cb : insd dword ptr [rdi], dx ; ret
0x000000000059fbd8 : insd dword ptr [rdi], dx ; ret 0xb37c
0x00000000005975e0 : insd dword ptr [rdi], dx ; ret 0xfa3d
0x00000000005a6bb4 : insd dword ptr [rdi], dx ; retfq 0x5ce5 ; jmp rsp
0x000000000059c1ed : insd dword ptr [rdi], dx ; sbb dh, cl ; ret 0x4c24
0x000000000045d46c : insd dword ptr [rdi], dx ; shl byte ptr [rsi + 0xf], -0x2c ; ret
0x0000000000567477 : insd dword ptr [rdi], dx ; std ; inc dword ptr [rbp - 0xf18740] ; ret
0x000000000059c8e9 : insd dword ptr [rdi], dx ; stosb byte ptr [rdi], al ; ret 0xa39d
0x00000000005a8cc1 : insd dword ptr [rdi], dx ; xchg eax, edx ; mov edi, 0xba1700f6 ; ret 0xbf6b
0x0000000000554080 : int 0
0x00000000005a3c3d : int 0x22
0x00000000005a660f : int 0x4a
0x0000000000407743 : int 0x80
0x000000000054d865 : int 0x90
0x000000000046c53f : int 0x9d
0x00000000005b6b77 : int 0xb8
0x000000000054df1f : int 0xbc
0x000000000059a6b0 : int 0xc
0x000000000051f567 : int 0xc1
0x0000000000572a10 : int 0xc2
0x00000000005267ae : int 0xc3
0x0000000000511ddc : int 0xc5
0x00000000005944a9 : int 0xc7
0x000000000044fdfc : int 0xef
0x00000000005a39ee : int 0xf6
0x000000000055cdff : int 0xfd
0x000000000057e00f : int 0xff
0x00000000005a7371 : int 7
0x0000000000598e3f : int1 ; adc ch, dh ; ret
0x00000000005b080d : int1 ; adc ebx, ecx ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cli ; ret 0x3c61
0x0000000000524ecf : int1 ; add ah, byte ptr [rsi + 0xf] ; out dx, eax ; ret
0x00000000004ab5b1 : int1 ; add dword ptr [rax], eax ; pop rbx ; ret
0x00000000005e831e : int1 ; call qword ptr [rax]
0x0000000000461124 : int1 ; call r15
0x000000000040a56c : int1 ; call rax
0x0000000000448b63 : int1 ; cld ; ret 0x894c
0x00000000005e99ad : int1 ; cmc ; call rax
0x00000000004e7dd6 : int1 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000540d11 : int1 ; dec dword ptr [rax - 1] ; ret
0x00000000005e8e46 : int1 ; dec dword ptr [rax] ; lodsb al, byte ptr [rsi] ; add al, byte ptr [rax] ; cmc ; int1 ; jmp qword ptr [rax]
0x00000000005e8a9e : int1 ; dec dword ptr [rax] ; popfq ; add al, byte ptr [rax] ; xchg eax, edi ; int1 ; jmp qword ptr [rax]
0x00000000005e8ee6 : int1 ; dec dword ptr [rax] ; scasb al, byte ptr [rdi] ; add al, byte ptr [rax] ; xor bh, 0xf1 ; jmp qword ptr [rax]
0x00000000005e8d5e : int1 ; dec dword ptr [rax] ; test eax, 0xeab00002 ; int1 ; jmp qword ptr [rax]
0x00000000005e86de : int1 ; dec eax ; lea eax, dword ptr [rdx] ; add byte ptr [rax + 0x53], dl ; int1 ; jmp rax
0x00000000005e8e86 : int1 ; dec eax ; lodsb al, byte ptr [rsi] ; add al, byte ptr [rax] ; sal ch, -0xf ; jmp rax
0x00000000005e877e : int1 ; dec eax ; pop qword ptr [rdx] ; add byte ptr [rax + 0x58], dh ; int1 ; jmp rax
0x00000000005e8d96 : int1 ; dec eax ; test eax, 0xed000002 ; int1 ; jmp rax
0x000000000057d23c : int1 ; in al, dx ; and eax, dword ptr [rbp + 0x40] ; ret 0x8def
0x0000000000603751 : int1 ; in al, dx ; call rdi
0x000000000058e370 : int1 ; in al, dx ; ret 0xe63
0x000000000053aacb : int1 ; inc word ptr [rbp - 0xba8140] ; ret
0x00000000005b50a3 : int1 ; insb byte ptr [rdi], dx ; pop rdi ; jmp 0x5b506e
0x00000000005a78b1 : int1 ; insb byte ptr [rdi], dx ; ret
0x00000000005ae799 : int1 ; jl 0x5ae774 ; stosb byte ptr [rdi], al ; mov word ptr [rdi - 0x69], fs ; ret
0x00000000005e83ae : int1 ; jmp qword ptr [rax]
0x00000000005e8236 : int1 ; jmp rax
0x0000000000539b22 : int1 ; jne 0x539b16 ; mov dword ptr [rdi], r8d ; ret
0x00000000005b7221 : int1 ; leave ; leave ; ret
0x00000000004eaa76 : int1 ; ljmp ptr [rcx] ; ret 0xd089
0x000000000059ac75 : int1 ; lodsd eax, dword ptr [rsi] ; xlatb ; ret 0x8a8d
0x000000000057e28d : int1 ; loop 0x57e216 ; ret
0x00000000004fc60b : int1 ; mov edx, 0x8948fffe ; ret
0x0000000000422cfe : int1 ; mov r8, qword ptr [rsp + 8] ; call 0x4cefd8
0x000000000040f712 : int1 ; mov r8, r15 ; mov r9, r13 ; call rax
0x0000000000404904 : int1 ; mov r9, rbx ; call rax
0x000000000059437f : int1 ; or al, byte ptr [rsp + rsi*2] ; pop rdi ; ret
0x000000000052750f : int1 ; or al, ch ; sub edi, ebp ; ret
0x00000000005d72c7 : int1 ; or byte ptr [rax + 0x40], cl ; ret 0xc002
0x00000000005e6a95 : int1 ; out dx, al ; jmp qword ptr [rax]
0x000000000059f1e1 : int1 ; out dx, al ; ret 0x89e3
0x000000000055bfb2 : int1 ; pop rbp ; add byte ptr [rcx - 0x48], al ; ret 0
0x000000000048ef71 : int1 ; pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; jmp rax
0x000000000041b338 : int1 ; pop rbx ; pop r14 ; pop rbp ; jmp rax
0x00000000005a3fd9 : int1 ; push -0x22 ; xor al, 0xfffffffffffffff4 ; ret 0xfa73
0x00000000005e8306 : int1 ; push qword ptr [rax + 0x27f] ; sbb dh, cl ; jmp rax
0x00000000005e8d06 : int1 ; push qword ptr [rax + 0x700002a7] ; jrcxz 0x5e8d09 ; jmp rax
0x00000000005e847e : int1 ; push rax ; test byte ptr [rdx], al ; add al, dl ; sub ecx, esi ; call qword ptr [rax]
0x00000000004193ce : int1 ; ret
0x00000000005b74ca : int1 ; ret 0x250d
0x000000000059c1ef : int1 ; ret 0x4c24
0x00000000005948b8 : int1 ; ret 0x7130
0x000000000057d5bb : int1 ; ret 0x8239
0x0000000000594567 : int1 ; ret 0xa995
0x00000000005d6ac5 : int1 ; sal dword ptr [rcx], 0x48 ; or al, al ; ret 0x2c2
0x000000000059d1ac : int1 ; sbb al, -0x24 ; push rbp ; mov dl, -0x1f ; ret
0x000000000046b58e : int1 ; shr rax, cl ; and eax, 1 ; ret
0x000000000059f685 : int1 ; stosb byte ptr [rdi], al ; ret
0x0000000000598f25 : int1 ; sub al, -0x78 ; movsd dword ptr [rdi], dword ptr [rsi] ; sti ; outsb dx, byte ptr [rsi] ; mov ah, 0x19 ; jmp rcx
0x00000000005b473a : int1 ; xchg eax, esi ; adc dh, byte ptr [rax + rbp*4 - 0xc] ; ret 0x82f4
0x00000000005f9185 : iretd ; add byte ptr [rax], al ; call 0x185f7aae
0x0000000000602d31 : iretd ; in al, dx ; jmp rdx
0x0000000000478743 : iretd ; jmp 0x47875c
0x00000000005b075b : iretd ; jmp qword ptr [rsi]
0x0000000000594aa0 : iretd ; jne 0x594a3e ; jmp qword ptr [rbx]
0x00000000004d4776 : iretd ; mov qword ptr [rsp + 0x50], rax ; call r15
0x000000000047e00e : iretd ; mov rbx, rcx ; call r15
0x00000000004b8627 : iretd ; mov rsi, rbx ; call rdx
0x0000000000402343 : ja 0x40234a ; pop rbp ; ret
0x0000000000411088 : ja 0x41109b ; mov eax, dword ptr [rdi*4 + 0x56b878] ; ret
0x0000000000426351 : ja 0x426362 ; mov eax, 1 ; ret
0x000000000042e581 : ja 0x42e5c5 ; ret
0x000000000042e5a1 : ja 0x42e5e9 ; ret
0x000000000042e751 : ja 0x42e79d ; ret
0x00000000004315dd : ja 0x431629 ; ret
0x00000000004318a2 : ja 0x4318f6 ; ret
0x00000000004318c2 : ja 0x43191e ; ret
0x00000000004318e2 : ja 0x431946 ; ret
0x0000000000444c44 : ja 0x444c54 ; add byte ptr [rcx], dh ; fucomi st(3) ; ret 0x2e66
0x0000000000447b15 : ja 0x447b9e ; add eax, dword ptr [rax] ; add rsp, 0x18 ; ret
0x0000000000461053 : ja 0x461077 ; ret
0x0000000000461061 : ja 0x461087 ; mov eax, esi ; ret
0x0000000000461071 : ja 0x461095 ; ret
0x0000000000461092 : ja 0x46109e ; ret
0x00000000004610a2 : ja 0x4610b6 ; ret
0x0000000000463b72 : ja 0x463b96 ; ret
0x0000000000463ba2 : ja 0x463be6 ; ret
0x000000000046a999 : ja 0x46a9ad ; cmp al, 0 ; ret
0x000000000047af41 : ja 0x47af49 ; sbb eax, eax ; ret
0x000000000048ea72 : ja 0x48ea96 ; ret
0x000000000048eaa2 : ja 0x48eabe ; ret
0x000000000048eac2 : ja 0x48eaee ; ret
0x000000000048f2e9 : ja 0x48f2f5 ; ret
0x000000000048f2f5 : ja 0x48f301 ; ret
0x000000000049cbf4 : ja 0x49cc26 ; mov eax, 1 ; pop rdx ; ret
0x00000000004a4a3d : ja 0x4a4a80 ; add byte ptr [rax - 0x73], cl ; xor al, 0x24 ; xor edi, edi ; call rbx
0x00000000004b79c1 : ja 0x4b79e5 ; ret
0x00000000004b7b41 : ja 0x4b7b71 ; ret
0x00000000004b7b53 : ja 0x4b7b83 ; ret
0x00000000004b87b1 : ja 0x4b87f5 ; ret
0x00000000004b87e1 : ja 0x4b8829 ; ret
0x00000000004b8801 : ja 0x4b884d ; ret
0x00000000004be459 : ja 0x4be472 ; mov qword ptr [rdi + 0x18], r15 ; ret
0x00000000004be8a2 : ja 0x4be8bb ; mov qword ptr [rdi + 0x18], r15 ; ret
0x00000000004bea93 : ja 0x4beadd ; movdqu xmmword ptr [rdi + 0x50], xmm7 ; ret
0x00000000004bec20 : ja 0x4bec17 ; ret
0x00000000004bed22 : ja 0x4bed19 ; ret
0x00000000004c3925 : ja 0x4c399e ; cli ; dec dword ptr [rax - 0x7f] ; ret
0x00000000004c6382 : ja 0x4c638e ; ret
0x00000000004c6392 : ja 0x4c63a6 ; ret
0x00000000004c63a2 : ja 0x4c63be ; ret
0x00000000004c63b4 : ja 0x4c63d8 ; ret
0x00000000004c63e2 : ja 0x4c640e ; ret
0x00000000004ca8a8 : ja 0x4ca8ba ; mov eax, 1 ; pop rdx ; ret
0x00000000004ca8e2 : ja 0x4ca953 ; mov eax, 1 ; ret
0x00000000004ca8f2 : ja 0x4ca96b ; mov eax, 1 ; ret
0x00000000004ca902 : ja 0x4ca983 ; mov eax, 1 ; ret
0x00000000004d0312 : ja 0x4d0376 ; ret
0x00000000004d0411 : ja 0x4d0427 ; mov eax, esi ; ret
0x00000000004d0441 : ja 0x4d04b7 ; mov eax, esi ; ret
0x00000000004d603d : ja 0x4d6034 ; ret
0x00000000004d66f7 : ja 0x4d66ee ; ret
0x00000000004de803 : ja 0x4de80a ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004f34a9 : ja 0x4f34d5 ; ret
0x00000000004ffd42 : ja 0x4ffd7e ; ret
0x0000000000500762 : ja 0x50078e ; ret
0x0000000000500752 : ja 0x500799 ; mov dword ptr [rdi + 0x48], edx ; ret
0x00000000005007c2 : ja 0x5007ce ; ret
0x00000000005007a2 : ja 0x5007d6 ; ret
0x00000000005007d2 : ja 0x5007e6 ; ret
0x00000000005007e2 : ja 0x5007fe ; ret
0x00000000005007f2 : ja 0x50081a ; mov qword ptr [rdi + 0x28], rdx ; ret
0x0000000000500802 : ja 0x50083a ; mov qword ptr [rdi + 0x38], rdx ; ret
0x0000000000500812 : ja 0x50085a ; mov qword ptr [rdi + 0x48], rdx ; ret
0x0000000000500822 : ja 0x50087a ; mov qword ptr [rdi + 0x58], rdx ; ret
0x0000000000500832 : ja 0x50089a ; mov qword ptr [rdi + 0x68], rdx ; ret
0x0000000000500842 : ja 0x5008ba ; mov qword ptr [rdi + 0x78], rdx ; ret
0x0000000000500bb5 : ja 0x500be2 ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x000000000051279e : ja 0x512795 ; ret
0x00000000005128aa : ja 0x5128a1 ; ret
0x0000000000513dc7 : ja 0x513e00 ; mov qword ptr [rdi + 0x38], r15 ; ret
0x0000000000513f68 : ja 0x513fa1 ; mov qword ptr [rdi + 0x38], r15 ; ret
0x00000000005392c2 : ja 0x5392de ; ret
0x000000000053f8c2 : ja 0x53f8ce ; ret
0x000000000053f8e2 : ja 0x53f8f6 ; ret
0x000000000053f902 : ja 0x53f91e ; ret
0x000000000053f922 : ja 0x53f946 ; ret
0x0000000000540ca2 : ja 0x540d0b ; mov eax, 1 ; ret
0x00000000005410c2 : ja 0x541113 ; mov eax, 1 ; ret
0x0000000000541255 : ja 0x5411f4 ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000005411d2 : ja 0x5411fb ; mov eax, 1 ; ret
0x0000000000541382 : ja 0x5413db ; mov eax, 1 ; ret
0x0000000000541492 : ja 0x5414b3 ; mov eax, 1 ; ret
0x00000000005415a2 : ja 0x5415d3 ; mov eax, 1 ; ret
0x00000000005416b2 : ja 0x5416eb ; mov eax, 1 ; ret
0x0000000000541862 : ja 0x5418c3 ; mov eax, 1 ; ret
0x00000000005419f2 : ja 0x541a33 ; mov eax, 1 ; ret
0x0000000000541b02 : ja 0x541b1b ; mov eax, 1 ; ret
0x0000000000541bc2 : ja 0x541c0b ; mov eax, 1 ; ret
0x0000000000544061 : ja 0x5440b1 ; ret
0x0000000000544072 : ja 0x5440ca ; mov qword ptr [rdi + 0x58], rdx ; ret
0x0000000000544082 : ja 0x5440ea ; mov qword ptr [rdi + 0x68], rdx ; ret
0x0000000000544092 : ja 0x54410a ; mov qword ptr [rdi + 0x78], rdx ; ret
0x0000000000544258 : ja 0x5442a9 ; mov eax, 1 ; ret
0x0000000000548376 : ja 0x54838a ; ret
0x0000000000548430 : ja 0x54843c ; mov rax, qword ptr [rdi + 0x18] ; ret
0x000000000054872c : ja 0x54873a ; xor eax, eax ; ret
0x000000000054874c : ja 0x548762 ; xor eax, eax ; ret
0x000000000054876c : ja 0x54878a ; xor eax, eax ; ret
0x000000000054878c : ja 0x5487b2 ; xor eax, eax ; ret
0x00000000005487ac : ja 0x5487da ; xor eax, eax ; ret
0x00000000005487cc : ja 0x548802 ; xor eax, eax ; ret
0x00000000005488c1 : ja 0x5488cb ; mov eax, dword ptr [rdi + 0x20] ; ret
0x00000000005488e1 : ja 0x5488eb ; mov eax, dword ptr [rdi + 0x24] ; ret
0x000000000054aa1f : ja 0x54aa14 ; dec dword ptr [rax - 0x75] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000054b3ea : ja 0x54b41e ; ret
0x000000000054b4aa : ja 0x54b4de ; ret
0x0000000000555848 : ja 0x55586d ; popfq ; hlt ; stosd dword ptr [rdi], eax ; ret 0x2841
0x0000000000556b75 : ja 0x556baf ; ret
0x0000000000556b7d : ja 0x556bb7 ; ret
0x000000000055ae82 : ja 0x55aeae ; ret
0x000000000055ae92 : ja 0x55aefe ; ret
0x000000000055e372 : ja 0x55e386 ; ret
0x000000000055e382 : ja 0x55e39e ; ret
0x000000000055e392 : ja 0x55e3b6 ; ret
0x000000000055f422 : ja 0x55f466 ; ret
0x0000000000560595 : ja 0x5605b6 ; mov eax, 1 ; ret
0x00000000005605e2 : ja 0x5605f2 ; or byte ptr [rdi + 0x18], 2 ; ret
0x00000000005605d1 : ja 0x5605fd ; ret
0x00000000005660f2 : ja 0x566166 ; ret
0x000000000057ca8f : ja 0x57ca67 ; ret
0x000000000057d9a4 : ja 0x57d96b ; and esp, ebp ; sub dword ptr [rbp + 0x15], eax ; ret 0xefdf
0x000000000057dc48 : ja 0x57dca9 ; div bl ; test bl, 2 ; cli ; ret
0x0000000000594ae3 : ja 0x594b3b ; pop rbp ; jg 0x594b21 ; ret
0x00000000005971ea : ja 0x597251 ; xor dword ptr [rdi], edi ; xchg eax, ebp ; ret 0x5413
0x00000000005974ea : ja 0x5974b3 ; jns 0x597561 ; loopne 0x597564 ; ret 0xda27
0x0000000000599a05 : ja 0x599a52 ; popfq ; out -9, eax ; xchg eax, esi ; ret
0x000000000059b35f : ja 0x59b2fa ; inc byte ptr [rbp + 0x2b62a352] ; ret
0x00000000005a1c1a : ja 0x5a1c4e ; ret
0x00000000005a3d69 : ja 0x5a3d10 ; ret 0xe3df
0x00000000005a8bba : ja 0x5a8bd4 ; pop rbx ; add byte ptr [rsi + rbx], bl ; ret
0x00000000005a9903 : ja 0x5a9978 ; and ch, byte ptr [rax - 0x7f] ; push rbx ; ret 0x1e72
0x00000000005add48 : ja 0x5add50 ; out -6, al ; ret
0x00000000005ade64 : ja 0x5ade34 ; jno 0x5adeda ; call qword ptr [rax]
0x00000000005b2a0c : ja 0x5b2a4b ; in al, 0x21 ; cmp edi, dword ptr [rcx + 0x30] ; ret 0x958e
0x00000000005d1c58 : ja 0x5d1c26 ; add byte ptr [rax], r8b ; add byte ptr [rax], al ; add bh, dl ; ret
0x00000000005e152d : ja 0x5e1513 ; call rax
0x00000000005e3aad : ja 0x5e3a9a ; jmp rax
0x00000000005e3ab5 : ja 0x5e3aa2 ; call qword ptr [rax]
0x00000000005e5e4d : ja 0x5e5e3e ; call qword ptr [rax]
0x00000000005e8169 : ja 0x5e8173 ; add byte ptr [rax], dl ; loop 0x5e8165 ; jmp rax
0x00000000005ec18d : ja 0x5ec189 ; jmp rax
0x00000000005ec19d : ja 0x5ec199 ; call qword ptr [rax]
0x0000000000603995 : ja 0x60399e ; add byte ptr [rax], bl ; adc ch, ch ; jmp qword ptr [rcx]
0x000000000042b46f : jae 0x42b490 ; pop rbx ; pop r14 ; pop r15 ; ret
0x000000000042e83a : jae 0x42e85d ; add rsp, 8 ; pop rbx ; pop r14 ; ret
0x0000000000449156 : jae 0x44915a ; or ah, al ; ret
0x000000000044d561 : jae 0x44d576 ; mov ebx, 0x2e766a0a ; leave ; ret 0x8581
0x000000000044d571 : jae 0x44d586 ; mov ebx, 0x2e766a0a ; leave ; ret 0x8581
0x000000000044f0af : jae 0x44f0b6 ; or ah, al ; cmp r11d, ebp ; ret
0x000000000046b3f4 : jae 0x46b3d5 ; mov eax, r8d ; ret
0x00000000004733d1 : jae 0x4733b0 ; add ah, byte ptr [rsi + 0xf] ; out dx, eax ; ret 0x4466
0x0000000000473c51 : jae 0x473c30 ; add ah, byte ptr [rsi + 0xf] ; out dx, eax ; ret 0x4466
0x000000000047431a : jae 0x4742f9 ; add ah, byte ptr [rsi + 0xf] ; out dx, eax ; ret
0x0000000000478254 : jae 0x47828c ; jmp qword ptr [rsi*8 + 0x57c258]
0x0000000000482dc3 : jae 0x482e1a ; add byte ptr [rsp + rcx*2], cl ; ret 0xc200
0x00000000004880ca : jae 0x4880d0 ; add bh, bh ; ret
0x0000000000489b67 : jae 0x489baa ; add rsp, 8 ; pop rbx ; pop r14 ; ret
0x000000000048d77d : jae 0x48d798 ; add rsp, 8 ; pop rbx ; pop r14 ; ret
0x00000000004b0f49 : jae 0x4b0f83 ; sti ; dec dword ptr [rax - 0x77] ; ret
0x00000000004b12a1 : jae 0x4b1249 ; pop rax ; add byte ptr [rcx - 0x48], al ; ret 0
0x00000000004d3ce8 : jae 0x4d3d4d ; call r12
0x00000000004d4132 : jae 0x4d4197 ; call r8
0x00000000004d4a52 : jae 0x4d4aa5 ; mov rdi, r12 ; mov rsi, r13 ; call r15
0x00000000004d4b22 : jae 0x4d4b75 ; mov rdi, r13 ; mov rsi, r12 ; call r15
0x00000000004d55a6 : jae 0x4d559e ; add dword ptr [rsi + 0xf], esp ; out dx, eax ; ret
0x00000000004d5661 : jae 0x4d5659 ; add dword ptr [rsi + 0xf], esp ; out dx, eax ; ret
0x00000000004d56fa : jae 0x4d56f2 ; add dword ptr [rsi + 0xf], esp ; out dx, eax ; ret
0x00000000004d57da : jae 0x4d57d2 ; add dword ptr [rsi + 0xf], esp ; out dx, eax ; ret
0x00000000004d5b63 : jae 0x4d5b5b ; add dword ptr [rsi + 0xf], esp ; out dx, eax ; ret
0x00000000004d5d87 : jae 0x4d5d7f ; add dword ptr [rsi + 0xf], esp ; out dx, eax ; ret
0x00000000004d5e35 : jae 0x4d5e2d ; add dword ptr [rsi + 0xf], esp ; out dx, eax ; ret
0x00000000004d5f5d : jae 0x4d5f41 ; or ch, al ; stc ; out dx, eax ; ret
0x00000000004d5fdd : jae 0x4d5fc1 ; or ch, al ; stc ; out dx, eax ; ret
0x00000000004ddbb5 : jae 0x4ddc08 ; add al, ch ; ret
0x00000000004e1eb1 : jae 0x4e1ea9 ; or byte ptr [rsi + 0xf], ah ; jmp 0x4e1e80
0x00000000004e1fbc : jae 0x4e1fb4 ; or byte ptr [rsi + 0xf], ah ; jmp 0x4e1f8b
0x00000000004f4b27 : jae 0x4f4b13 ; ret
0x00000000005055fc : jae 0x5055f4 ; adc byte ptr [rsi + 0xf], ah ; jmp 0x5055cb
0x0000000000505b37 : jae 0x505b2f ; adc byte ptr [rsi + 0xf], ah ; jmp 0x505b06
0x00000000005073b7 : jae 0x5073ca ; add rax, 0x19 ; ret
0x000000000052bbb1 : jae 0x52bbc6 ; mov ebx, 0x2e766a0a ; leave ; ret 0x8581
0x000000000052cfa1 : jae 0x52cfb6 ; mov ebx, 0x2e766a0a ; leave ; ret 0x8581
0x000000000052cfb1 : jae 0x52cfc6 ; mov ebx, 0x2e766a0a ; leave ; ret 0x8581
0x000000000052f745 : jae 0x52f722 ; add al, ah ; ret
0x000000000052fb99 : jae 0x52fb76 ; add al, ah ; ret
0x0000000000539db9 : jae 0x539e40 ; in al, dx ; dec dword ptr [rax - 0x77] ; ret
0x00000000005452a6 : jae 0x5452bf ; pop rbx ; pop r14 ; pop r15 ; ret
0x0000000000555612 : jae 0x5555f8 ; movdqu xmmword ptr [r8], xmm6 ; ret
0x000000000055f4aa : jae 0x55f4dd ; add rsp, 8 ; pop rbx ; pop r14 ; ret
0x000000000056050d : jae 0x560528 ; add rsp, 8 ; pop rbx ; pop r14 ; ret
0x0000000000596940 : jae 0x596967 ; ret
0x0000000000597e48 : jae 0x597e42 ; push rcx ; ret 0xfe1a
0x000000000059867d : jae 0x598642 ; pop rdi ; ret
0x000000000059aaba : jae 0x59ab39 ; ret
0x000000000059b275 : jae 0x59b2f7 ; cld ; ret
0x000000000059d904 : jae 0x59d932 ; ret
0x000000000059ea44 : jae 0x59ea28 ; imul edi, dword ptr [rax], 0x78 ; lodsd eax, dword ptr [rsi] ; pop rax ; ret 0x2910
0x00000000005a1266 : jae 0x5a11f7 ; ret
0x00000000005a1266 : jae 0x5a11f9 ; ret
0x00000000005a3e9f : jae 0x5a3e64 ; ret
0x00000000005a3fdf : jae 0x5a3fe4 ; jne 0x5a3f8f ; movsb byte ptr [rdi], byte ptr [rsi] ; xchg eax, ebx ; and al, 0xffffffffffffffa5 ; ret 0x33c5
0x00000000005a52e8 : jae 0x5a52ec ; ret 0xd029
0x00000000005a6cdd : jae 0x5a6d25 ; jge 0x5a6cd4 ; mov al, 0x6c ; sub cl, dh ; ret 0x861c
0x00000000005a87ea : jae 0x5a87a0 ; mov ah, -0x54 ; ret
0x00000000005a8ff9 : jae 0x5a9027 ; jnp 0x5a9004 ; nop ; jo 0x5a8f9a ; ret 0xd298
0x00000000005aae42 : jae 0x5aaeba ; cmp eax, 0xdd6d2a48 ; ret 0xea0d
0x00000000005b1396 : jae 0x5b1399 ; ret 0x1c87
0x00000000005b3657 : jae 0x5b36b4 ; and byte ptr [rbp + 9], dh ; ret
0x00000000005b41f0 : jae 0x5b41c9 ; out dx, al ; je 0x5b4253 ; ret
0x00000000005b4b4a : jae 0x5b4b76 ; push rcx ; adc al, -0x79 ; ror esp, cl ; ret 0xcac1
0x00000000005b6327 : jae 0x5b6397 ; ret 0xeeb6
0x00000000005e2c35 : jae 0x5e2c1f ; jmp rax
0x00000000005e2c45 : jae 0x5e2c2f ; call qword ptr [rax]
0x00000000005e34ed : jae 0x5e34d9 ; call qword ptr [rax]
0x00000000005e4c65 : jae 0x5e4c54 ; jmp rax
0x00000000005ea605 : jae 0x5ea5ff ; jmp qword ptr [rax]
0x00000000005ec14d : jae 0x5ec149 ; jmp rax
0x00000000005ec189 : jae 0x5ec194 ; add byte ptr [rax], al ; ja 0x5ec18d ; jmp rax
0x00000000005ec199 : jae 0x5ec1a4 ; add byte ptr [rax + 0x77], dl ; clc ; call qword ptr [rax]
0x0000000000604359 : jae 0x60434a ; call qword ptr [rsi]
0x0000000000464168 : jae 0xffffffff898a5155 ; ret 0xf229
0x0000000000431aba : jb 0x431b2f ; or al, 0 ; add rsp, 0x18 ; ret
0x00000000004358ab : jb 0x4358bb ; mov edi, 0xffffffff ; mov eax, edi ; ret
0x00000000004358ef : jb 0x4358e2 ; ret
0x00000000004362fb : jb 0x4362e5 ; mov eax, ebx ; pop rbx ; ret
0x0000000000477e51 : jb 0x477e59 ; xor eax, eax ; ret
0x00000000004788d4 : jb 0x4788dd ; xor eax, eax ; pop rdx ; ret
0x0000000000478913 : jb 0x47891b ; xor eax, eax ; ret
0x0000000000479b20 : jb 0x479b25 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000479b94 : jb 0x479b9d ; xor eax, eax ; pop rdx ; ret
0x0000000000479bd3 : jb 0x479bdb ; xor eax, eax ; ret
0x000000000047a668 : jb 0x47a652 ; ret
0x000000000047f167 : jb 0x47f159 ; mov rsi, rdi ; mov rdx, r15 ; call r14
0x000000000048908c : jb 0x489096 ; add byte ptr [rcx], bh ; ret
0x00000000004b944f : jb 0x4b9444 ; pop rax ; jmp r8
0x00000000004b944e : jb 0x4b9445 ; pop rax ; jmp r8
0x00000000004c38f6 : jb 0x4c38f7 ; dec dword ptr [rax - 0x7f] ; ret
0x00000000004e28f1 : jb 0x4e28b6 ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000509caa : jb 0x509c7d ; hlt ; dec dword ptr [rax - 0x77] ; ret
0x000000000050e380 : jb 0x50e3f0 ; mov dword ptr [rbx], 0x83480200 ; ret
0x000000000050ec78 : jb 0x50ec7c ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000524181 : jb 0x52417c ; add eax, 0xdf0f4166 ; ret
0x0000000000524282 : jb 0x52427d ; add eax, 0xdf0f4166 ; ret 0x4166
0x000000000052498f : jb 0x52498a ; add eax, 0xdf0f4166 ; ret
0x0000000000524a90 : jb 0x524a8b ; add eax, 0xdf0f4166 ; ret 0x4166
0x0000000000524ece : jb 0x524ec7 ; add ah, byte ptr [rsi + 0xf] ; out dx, eax ; ret
0x0000000000525178 : jb 0x525171 ; add ah, byte ptr [rsi + 0xf] ; out dx, eax ; ret
0x000000000052532b : jb 0x525326 ; add eax, 0xdf0f4166 ; ret
0x0000000000525422 : jb 0x52541b ; add ah, byte ptr [rsi + 0xf] ; out dx, eax ; ret
0x0000000000525480 : jb 0x52547b ; add eax, 0xdf0f4166 ; ret 0x4166
0x00000000005256cc : jb 0x5256c5 ; add ah, byte ptr [rsi + 0xf] ; out dx, eax ; ret
0x000000000052597c : jb 0x525975 ; add ah, byte ptr [rsi + 0xf] ; out dx, eax ; ret
0x0000000000525c24 : jb 0x525c1d ; add ah, byte ptr [rsi + 0xf] ; out dx, eax ; ret
0x0000000000525dd7 : jb 0x525dd2 ; add eax, 0xdf0f4166 ; ret
0x0000000000525ece : jb 0x525ec7 ; add ah, byte ptr [rsi + 0xf] ; out dx, eax ; ret
0x0000000000525f2c : jb 0x525f27 ; add eax, 0xdf0f4166 ; ret 0x4166
0x0000000000526178 : jb 0x526171 ; add ah, byte ptr [rsi + 0xf] ; out dx, eax ; ret
0x000000000052750e : jb 0x527507 ; or al, ch ; sub edi, ebp ; ret
0x0000000000527bc0 : jb 0x527bb9 ; or al, ch ; sub edi, ebp ; ret
0x000000000052849c : jb 0x528495 ; or al, ch ; sub edi, ebp ; ret
0x0000000000528d58 : jb 0x528d51 ; or al, ch ; sub edi, ebp ; ret
0x0000000000530a76 : jb 0x530a67 ; pop rbx ; pop r14 ; pop r15 ; ret
0x000000000053206e : jb 0x53200a ; out -0x52, al ; in eax, dx ; leave ; ret 0x3b81
0x0000000000542e9a : jb 0x542e78 ; dec dword ptr [rax - 0x77] ; ret
0x000000000054af3f : jb 0x54af34 ; dec dword ptr [rax - 0x75] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000055564e : jb 0x5556b3 ; ret
0x000000000055c1c9 : jb 0x55c1c4 ; pop rbp ; add bl, ch ; ret
0x000000000055f46a : jb 0x55f47e ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000578481 : jb 0x5784a9 ; sbb edi, edi ; ret
0x000000000057da34 : jb 0x57d9eb ; call rbx
0x000000000057dd56 : jb 0x57dd51 ; call rdx
0x000000000057dd50 : jb 0x57dd70 ; pop rsp ; sbb al, 0x2c ; sbb esi, dword ptr [rdx - 0xa] ; call rdx
0x000000000058b690 : jb 0x58b6d4 ; cdq ; pop rdx ; pop rsi ; out 0x6b, eax ; push rbp ; stc ; ret 0x98f0
0x000000000059eef3 : jb 0x59ee83 ; ret
0x00000000005a2928 : jb 0x5a292d ; ret 0x4a9d
0x00000000005a3ec4 : jb 0x5a3f38 ; or dword ptr [rdi], 0x294f3319 ; ret 0x35cc
0x00000000005aa6b6 : jb 0x5aa723 ; wait ; ret 0x2128
0x00000000005ab7dd : jb 0x5ab814 ; mov al, -0x3c ; ret 0xc5cc
0x00000000005b035c : jb 0x5b0321 ; call rax
0x00000000005b24c2 : jb 0x5b251a ; add eax, 0x857d2e5c ; ret
0x00000000005b2f81 : jb 0x5b2fc7 ; ret
0x00000000005b474e : jb 0x5b46e4 ; pop rsi ; ret
0x00000000005b5bd3 : jb 0x5b5bed ; ret 0xd779
0x00000000005b6ffe : jb 0x5b7007 ; sahf ; ret
0x00000000005b6ffd : jb 0x5b7008 ; sahf ; ret
0x00000000005e5d9d : jb 0x5e5d8e ; call rax
0x00000000005e5db5 : jb 0x5e5da6 ; jmp qword ptr [rax]
0x00000000005e63cd : jb 0x5e63bf ; jmp rax
0x00000000005ec149 : jb 0x5ec154 ; add al, ah ; jae 0x5ec14d ; jmp rax
0x000000000040acbb : jbe 0x40acc4 ; xor eax, eax ; ret
0x000000000040afbb : jbe 0x40afc4 ; xor eax, eax ; ret
0x000000000040b3eb : jbe 0x40b3f4 ; xor eax, eax ; ret
0x0000000000419558 : jbe 0x419549 ; jns 0x4194e3 ; call qword ptr [rbx]
0x000000000042dfc3 : jbe 0x42dfd2 ; mov eax, 0x570d5a ; ret
0x0000000000437685 : jbe 0x43768e ; xor eax, eax ; ret
0x000000000043e8fc : jbe 0x43e90d ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000448e4c : jbe 0x448ea5 ; lea rsi, qword ptr [rsi + 0x60] ; ret
0x0000000000448e50 : jbe 0x448eb5 ; ret
0x000000000044d567 : jbe 0x44d59a ; leave ; ret 0x8581
0x000000000044d577 : jbe 0x44d5aa ; leave ; ret 0x8581
0x00000000004524d6 : jbe 0x45251f ; movups xmmword ptr [rsi + 0x50], xmm7 ; ret
0x0000000000452595 : jbe 0x4525b0 ; jne 0x452529 ; movups xmmword ptr [r9], xmm3 ; ret
0x00000000004882a6 : jbe 0x488293 ; cld ; dec dword ptr [rax - 0x77] ; ret
0x00000000004d3b0e : jbe 0x4d3b73 ; call r8
0x00000000004dea46 : jbe 0x4deaa5 ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000004e855e : jbe 0x4e8571 ; add rsp, 8 ; pop rbx ; pop r14 ; jmp rax
0x00000000004e898c : jbe 0x4e89a0 ; jmp rax
0x000000000052b7bb : jbe 0x52b77f ; or ch, byte ptr [rdx + 0x76] ; leave ; ret 0x2e81
0x000000000052b7bf : jbe 0x52b7f2 ; leave ; ret 0x2e81
0x000000000052bbb7 : jbe 0x52bbea ; leave ; ret 0x8581
0x000000000052cfa7 : jbe 0x52cfda ; leave ; ret 0x8581
0x000000000052cfb7 : jbe 0x52cfea ; leave ; ret 0x8581
0x000000000053205f : jbe 0x53204e ; scasb al, byte ptr [rdi] ; in eax, dx ; leave ; ret 0x3b81
0x0000000000538262 : jbe 0x538247 ; pop rbx ; pop r14 ; pop r15 ; ret
0x0000000000553016 : jbe 0x552fef ; out dx, al ; dec dword ptr [rax - 0x77] ; ret
0x000000000055f376 : jbe 0x55f326 ; std ; dec dword ptr [rax - 0x77] ; ret
0x00000000005606e6 : jbe 0x560687 ; int1 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000567d06 : jbe 0x567d52 ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000567d96 : jbe 0x567d56 ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000057d239 : jbe 0x57d1ca ; xor ecx, 0xffffffec ; and eax, dword ptr [rbp + 0x40] ; ret 0x8def
0x000000000059693e : jbe 0x59692d ; jae 0x596969 ; ret
0x0000000000597d2c : jbe 0x597d22 ; ret
0x0000000000599415 : jbe 0x5993ea ; scasb al, byte ptr [rdi] ; shl byte ptr [rdi + 0x31], -0x77 ; ret 0xc308
0x000000000059a037 : jbe 0x59a06e ; test dword ptr [rsi + 0x24], eax ; inc r13d ; jmp rsi
0x000000000059ab77 : jbe 0x59ab37 ; rcl dword ptr [rbp - 3], cl ; std ; ret 0x3148
0x000000000059b50b : jbe 0x59b4cf ; stosb byte ptr [rdi], al ; sahf ; stc ; in eax, 0x28 ; ret 0x8a49
0x000000000059dacf : jbe 0x59dac7 ; out dx, eax ; ret
0x00000000005a10a0 : jbe 0x5a1040 ; leave ; ret 0xbe97
0x00000000005a5116 : jbe 0x5a50db ; ret
0x00000000005a5116 : jbe 0x5a50dc ; ret
0x00000000005a52e5 : jbe 0x5a5303 ; xlatb ; jae 0x5a52ef ; ret 0xd029
0x00000000005a572b : jbe 0x5a573d ; ret 0x6dd1
0x00000000005a8186 : jbe 0x5a81e0 ; stc ; ret
0x00000000005ab96a : jbe 0x5ab94c ; rcr eax ; ret
0x00000000005ac78b : jbe 0x5ac7b1 ; pop rdi ; xor ch, ch ; ret 0xa9bd
0x00000000005acc98 : jbe 0x5acc5f ; call 0xffffffffdcf3ad39
0x00000000005af102 : jbe 0x5af111 ; pop qword ptr [rbx - 0x72] ; ret
0x00000000005aff0c : jbe 0x5aff27 ; ror ah, cl ; cmp esp, ebx ; push rax ; mov dh, -0x6e ; ret 0x54c
0x00000000005b1dc6 : jbe 0x5b1d5a ; ret 0x62b7
0x00000000005b2516 : jbe 0x5b2576 ; mov eax, dword ptr [rdx - 0x2d] ; jge 0x5b255d ; ret 0xf356
0x00000000005b35be : jbe 0x5b35d6 ; fisubr dword ptr [rdx + rbp*8 + 0x40b6de34] ; ret 0xf1de
0x00000000005b68d1 : jbe 0x5b6863 ; pop qword ptr [rax - 0x1289af4a] ; ret
0x00000000005b68d7 : jbe 0x5b68c9 ; ret
0x00000000005e5e3d : jbe 0x5e5e2e ; jmp rax
0x00000000005ea6ad : jbe 0x5ea6a7 ; jmp qword ptr [rax]
0x00000000005eb125 : jbe 0x5eb120 ; jmp qword ptr [rax]
0x00000000005f3865 : jbe 0x5f386d ; add byte ptr [rax], cl ; mov dh, ah ; call rsp
0x000000000040234f : je 0x40234d ; pop rbp ; mov edi, 0x82b700 ; jmp rax
0x00000000004065d2 : je 0x4065e0 ; mov rcx, rax ; mov rax, rcx ; pop rdx ; ret
0x000000000040880e : je 0x40881d ; or eax, 0x80 ; ret
0x000000000040adac : je 0x40adb3 ; pop rbx ; ret
0x000000000040fce6 : je 0x40fd10 ; xor al, ch ; ret 0x1586
0x0000000000411933 : je 0x41193f ; xor ecx, ecx ; movzx eax, cl ; pop rdx ; ret
0x0000000000411932 : je 0x411940 ; xor ecx, ecx ; movzx eax, cl ; pop rdx ; ret
0x000000000041483d : je 0x414861 ; add byte ptr [rax - 1], cl ; ret
0x000000000041a3d7 : je 0x41a3e6 ; call 0x496684
0x000000000041b269 : je 0x41b272 ; xor eax, eax ; pop rbx ; ret
0x0000000000420af1 : je 0x420b04 ; add cl, byte ptr [rax - 0x75] ; jl 0x420b25 ; adc al, ch ; ret 0x598
0x0000000000426626 : je 0x426653 ; mov rax, qword ptr [rcx + 0x3e0] ; ret
0x0000000000429848 : je 0x429854 ; mov rax, qword ptr [rdi + 8] ; ret
0x0000000000429a85 : je 0x429a91 ; mov rax, qword ptr [rdi + 8] ; ret
0x0000000000429b18 : je 0x429b26 ; mov rcx, rax ; mov rax, rcx ; pop rdx ; ret
0x000000000042a6b0 : je 0x42a6b7 ; pop rax ; ret
0x000000000042b959 : je 0x42b96b ; mov qword ptr [rdi + 0x148], rdx ; ret
0x000000000042ba21 : je 0x42ba2b ; mov rax, qword ptr [rcx] ; ret
0x000000000042be8e : je 0x42bebb ; pop rdx ; ret
0x000000000042bf51 : je 0x42bf7e ; pop rdx ; ret
0x000000000042c2ac : je 0x42c30a ; ret
0x000000000042c2ab : je 0x42c30b ; ret
0x000000000042e37c : je 0x42e38c ; mov rax, qword ptr [rcx] ; mov rax, qword ptr [rax] ; ret
0x000000000042e39c : je 0x42e3ae ; mov rax, qword ptr [rcx] ; mov rax, qword ptr [rax + 8] ; ret
0x000000000042e3bc : je 0x42e3cc ; mov rax, qword ptr [rcx] ; mov rax, qword ptr [rax] ; ret
0x000000000042e3dc : je 0x42e3ee ; mov rax, qword ptr [rcx] ; mov rax, qword ptr [rax + 8] ; ret
0x000000000042e41c : je 0x42e426 ; mov rax, qword ptr [rcx] ; ret
0x000000000042e43c : je 0x42e446 ; mov rax, qword ptr [rcx] ; ret
0x000000000042ea73 : je 0x42ea85 ; mov rax, qword ptr [rcx + 0x90] ; ret
0x000000000042ea93 : je 0x42eaa5 ; mov rax, qword ptr [rcx + 0x98] ; ret
0x00000000004313dc : je 0x4313ee ; mov rdi, r15 ; mov rsi, r14 ; call rax
0x0000000000431545 : je 0x431557 ; mov rax, qword ptr [rdi + 0xc8] ; ret
0x0000000000431555 : je 0x431567 ; mov rax, qword ptr [rdi + 0xd0] ; ret
0x00000000004315e5 : je 0x4315f1 ; mov rax, qword ptr [rdi + 0x48] ; ret
0x0000000000431827 : je 0x431833 ; mov rsi, rbx ; call rax
0x000000000043602e : je 0x436036 ; xor eax, eax ; ret
0x000000000043602a : je 0x436067 ; add byte ptr [rax], al ; je 0x43603a ; xor eax, eax ; ret
0x00000000004396ce : je 0x4396fa ; push rax ; mov rdi, r14 ; call rax
0x000000000043a373 : je 0x43a39f ; or al, 0x48 ; mov edi, ebx ; call rax
0x000000000043e3b1 : je 0x43e3de ; or byte ptr [rcx + rcx*4 - 1], cl ; call r14
0x000000000043ea36 : je 0x43ea63 ; or byte ptr [rcx + rcx*4 - 0x11], cl ; call r15
0x000000000043ea0b : je 0x43ea85 ; xor esi, esi ; mov rdi, r13 ; call r15
0x0000000000442d1c : je 0x442d46 ; call r15
0x0000000000444597 : je 0x4447c6 ; mov byte ptr [rdi], dl ; ret
0x000000000044ba1f : je 0x44ba49 ; and cl, al ; ret 0x105
0x000000000044d430 : je 0x44d439 ; ud2 ; ret
0x000000000045506b : je 0x45507d ; mov rcx, qword ptr [r9 + 0x10] ; mov qword ptr [r8], rcx ; ret
0x0000000000455200 : je 0x455207 ; pop rax ; ret
0x000000000045f52f : je 0x45f55b ; or byte ptr [rcx + rcx*4 - 0x1e], cl ; call rax
0x0000000000460de0 : je 0x460de7 ; pop rax ; ret
0x0000000000460e74 : je 0x460ebc ; mov rdi, rbx ; call rax
0x0000000000460f1f : je 0x460f3e ; mov rdi, rbx ; call rcx
0x0000000000460fb3 : je 0x460fbf ; mov rdi, rbx ; call rax
0x000000000046103c : je 0x461048 ; mov rdi, rbx ; call rax
0x000000000046147d : je 0x461468 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000461b9b : je 0x461ba9 ; mov ecx, dword ptr [rax + 0x24] ; mov dword ptr [rsi], ecx ; ret
0x0000000000461c15 : je 0x461c21 ; mov rax, qword ptr [rdi + 0x38] ; ret
0x0000000000461c9f : je 0x461cab ; mov rdi, rbx ; call rax
0x0000000000461e85 : je 0x461e91 ; mov rdi, r15 ; call rax
0x0000000000461f05 : je 0x461f11 ; mov rdi, r14 ; call rax
0x0000000000461f95 : je 0x461fa1 ; mov rax, qword ptr [rdi + 0x50] ; ret
0x0000000000461fa5 : je 0x461fb1 ; mov rax, qword ptr [rdi + 0x58] ; ret
0x0000000000464135 : je 0x464144 ; dec eax ; mov dword ptr [rdi + 0x34], eax ; ret
0x0000000000464b60 : je 0x464b67 ; pop rax ; ret
0x000000000046a9a0 : je 0x46a9b4 ; cmp al, 0 ; ret
0x000000000046b628 : je 0x46b63b ; mov dword ptr [rdi + 0x10], 1 ; ret
0x000000000046cead : je 0x46cedc ; sbb bh, bh ; ret
0x00000000004701e4 : je 0x470390 ; call 0x46c478
0x0000000000479e30 : je 0x479dc3 ; sub byte ptr [r8 - 0x7d], cl ; ret
0x0000000000479f50 : je 0x479f57 ; pop rax ; ret
0x000000000047ee72 : je 0x47ee9f ; push rax ; mov rdx, rbp ; call r14
0x000000000047f095 : je 0x47f0c2 ; mov rdx, rbp ; call r15
0x0000000000483e43 : je 0x483e53 ; call 0x5004c9
0x00000000004849aa : je 0x4849b7 ; mov rax, qword ptr [rcx + 0x10] ; pop rbx ; ret
0x0000000000484f32 : je 0x484f41 ; add byte ptr [rax - 2], bh ; pop rdx ; ret
0x0000000000485e70 : je 0x485e77 ; pop rax ; ret
0x0000000000486116 : je 0x486128 ; mov rax, qword ptr [rdi + 0x10] ; mov qword ptr [r8], rax ; ret
0x0000000000486bbe : je 0x486bd1 ; mov qword ptr [rcx], 0 ; ret
0x0000000000487865 : je 0x487870 ; mov rax, qword ptr [rcx] ; pop rbx ; ret
0x0000000000487fba : je 0x487fc0 ; add bh, bh ; ret
0x0000000000487fb9 : je 0x487fc1 ; add bh, bh ; ret
0x0000000000488153 : je 0x488162 ; pop rbx ; pop r14 ; pop r15 ; ret
0x0000000000489a0a : je 0x489a17 ; mov rax, qword ptr [rcx + 0x28] ; pop rbx ; ret
0x0000000000489ed7 : je 0x489ee9 ; mov rax, qword ptr [rdi + 0x20] ; mov qword ptr [r8], rax ; ret
0x000000000048c0e0 : je 0x48c0e7 ; pop rax ; ret
0x000000000048c148 : je 0x48c165 ; mov rdi, rbx ; call rcx
0x000000000048c183 : je 0x48c18f ; mov rdi, rbx ; call rax
0x000000000048d730 : je 0x48d737 ; pop rax ; ret
0x000000000048e591 : je 0x48e59d ; mov rdi, r12 ; call rax
0x000000000048e946 : je 0x48e905 ; mov rdi, rbx ; call rcx
0x000000000048ec1c : je 0x48ec23 ; pop rbx ; ret
0x000000000048ec60 : je 0x48ec67 ; pop rax ; ret
0x000000000048ecc0 : je 0x48ece9 ; add eax, 0x29 ; pop rbx ; ret
0x000000000048f33e : je 0x48f34c ; mov rdi, rbx ; pop rbx ; jmp rax
0x000000000048f350 : je 0x48f35f ; call rax
0x000000000048f3cb : je 0x48f3d3 ; pop rdx ; jmp rax
0x00000000004958c0 : je 0x4958c7 ; pop rax ; ret
0x0000000000496488 : je 0x496494 ; mov rdi, rbx ; call rax
0x00000000004964b9 : je 0x4964c5 ; mov rdi, rbx ; call rax
0x0000000000496633 : je 0x49666e ; mov rdi, rbx ; call rax
0x00000000004966bb : je 0x4966c7 ; mov rdi, rbx ; call rax
0x00000000004971db : je 0x4971e8 ; mov rax, rbx ; pop rbx ; ret
0x000000000049723b : je 0x497248 ; mov rax, rbx ; pop rbx ; ret
0x000000000049729b : je 0x4972a8 ; mov rax, rbx ; pop rbx ; ret
0x000000000049754e : je 0x49756a ; mov rdi, rbx ; call rcx
0x00000000004975de : je 0x4975fa ; mov rdi, rbx ; call rcx
0x0000000000498c50 : je 0x498c57 ; pop rax ; ret
0x000000000049a6ea : je 0x49a6fd ; mov rdi, r15 ; call rax
0x000000000049a9b6 : je 0x49a9f1 ; mov rdi, rbx ; call rax
0x000000000049aa15 : je 0x49aa21 ; mov rdi, rbx ; call rax
0x000000000049aa43 : je 0x49aa4f ; mov rdi, rbx ; call rax
0x000000000049aa98 : je 0x49aaa4 ; mov rdi, rbx ; call rax
0x000000000049b0fd : je 0x49b12c ; adc byte ptr [rcx + rcx*4 - 0x17], cl ; mov r9, rbx ; call rax
0x000000000049c590 : je 0x49c597 ; pop rax ; ret
0x000000000049c63e : je 0x49c69a ; mov rdi, rbx ; call rax
0x000000000049c720 : je 0x49c733 ; mov rdi, rbx ; call rcx
0x000000000049c735 : je 0x49c745 ; mov rdi, rbx ; call rax
0x000000000049c7e5 : je 0x49c7ef ; mov eax, dword ptr [rdi + 0x14] ; ret
0x000000000049c8bf : je 0x49c930 ; mov rdi, rbx ; call rcx
0x000000000049c9ee : je 0x49c9f8 ; pop r8 ; jmp rax
0x000000000049cb18 : je 0x49cb3f ; call rax
0x000000000049cb98 : je 0x49cbbf ; call rax
0x000000000049cc24 : je 0x49cc33 ; mov rax, qword ptr [rdi + 0x38] ; pop rdx ; ret
0x000000000049cc95 : je 0x49cc9d ; pop rcx ; jmp rax
0x000000000049ccd7 : je 0x49ccef ; mov rsi, r14 ; call rax
0x000000000049cd94 : je 0x49cda3 ; mov rax, qword ptr [rdi + 0x40] ; pop rdx ; ret
0x000000000049ce3c : je 0x49ce4a ; mov rdi, rbx ; pop rbx ; jmp rax
0x00000000004a020e : je 0x4a0213 ; ret
0x00000000004aaf00 : je 0x4aaf07 ; pop rax ; ret
0x00000000004adeee : je 0x4adf00 ; xor esi, esi ; mov rdi, rax ; pop rax ; jmp rcx
0x00000000004b6922 : je 0x4b694d ; and byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000004b695e : je 0x4b6989 ; and byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000004b6eb0 : je 0x4b6eb7 ; pop rax ; ret
0x00000000004b7c8b : je 0x4b7c97 ; mov rdi, r15 ; call rax
0x00000000004b7ced : je 0x4b7cf9 ; mov rdi, r14 ; call rax
0x00000000004b7d93 : je 0x4b7d9f ; mov rdi, rbx ; call rax
0x00000000004b7dd4 : je 0x4b7de0 ; mov rdi, r15 ; call rax
0x00000000004b7e46 : je 0x4b7e52 ; mov rdi, r14 ; call rax
0x00000000004b7f1c : je 0x4b7f28 ; mov rdi, rbx ; call rax
0x00000000004b81ba : je 0x4b81c6 ; mov rdi, r15 ; call rax
0x00000000004b8205 : je 0x4b8224 ; mov rdi, r15 ; mov rbp, rdx ; call rcx
0x00000000004b84f9 : je 0x4b8501 ; pop rax ; jmp rcx
0x00000000004b8623 : je 0x4b863d ; mov rdi, rcx ; mov rsi, rbx ; call rdx
0x00000000004b88cb : je 0x4b88d5 ; pop r9 ; jmp rax
0x00000000004b890b : je 0x4b8915 ; pop r9 ; jmp rax
0x00000000004b894b : je 0x4b8955 ; pop r9 ; jmp rax
0x00000000004b898b : je 0x4b8995 ; pop r9 ; jmp rax
0x00000000004b89cb : je 0x4b89d3 ; pop rdx ; jmp rax
0x00000000004b8a0b : je 0x4b8a13 ; pop rdx ; jmp rax
0x00000000004b8edb : je 0x4b8ee7 ; mov rdi, r14 ; call rax
0x00000000004b8ef7 : je 0x4b8f17 ; mov rdi, r14 ; mov rsi, rbx ; call rcx
0x00000000004b94ad : je 0x4b94b3 ; jmp rax
0x00000000004b9537 : je 0x4b9542 ; jmp rax
0x00000000004b9567 : je 0x4b9572 ; jmp rax
0x00000000004bbef0 : je 0x4bbef7 ; pop rax ; ret
0x00000000004c2f7d : je 0x4c2fb3 ; mov rcx, r12 ; call rax
0x00000000004c4c2e : je 0x4c4c59 ; xor byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000004c5e24 : je 0x4c5e50 ; sbb byte ptr [rcx + rcx*4 - 0x1e], cl ; call rax
0x00000000004c5f70 : je 0x4c5f77 ; pop rax ; ret
0x00000000004c7698 : je 0x4c76c7 ; and al, ch ; nop ; call 0xffffffffc3d676aa
0x00000000004c9c4e : je 0x4c9c66 ; mov edi, 0x20000 ; call rax
0x00000000004c9e90 : je 0x4c9e97 ; pop rax ; ret
0x00000000004ca216 : je 0x4ca228 ; add byte ptr [rax + 1], bh ; pop rbx ; ret
0x00000000004ca2bc : je 0x4ca2d8 ; mov rdi, rbx ; call rcx
0x00000000004ca3dc : je 0x4ca3f6 ; mov rdi, rbx ; call rax
0x00000000004ca6fb : je 0x4ca707 ; mov rdi, rbx ; call rax
0x00000000004cead7 : je 0x4ceae7 ; mov rdi, rbx ; call rax
0x00000000004ceea6 : je 0x4ceeba ; mov rdi, rbx ; call rax
0x00000000004cef50 : je 0x4cef93 ; call rax
0x00000000004cf75b : je 0x4cf76b ; mov rdi, rbx ; call rax
0x00000000004cf81b : je 0x4cf8a0 ; mov esi, 1 ; xor ecx, ecx ; call rax
0x00000000004cf9cb : je 0x4cf9df ; mov rdi, rbx ; call rax
0x00000000004cfb40 : je 0x4cfb47 ; pop rax ; ret
0x00000000004cfb99 : je 0x4cfba7 ; mov eax, 0x82dfe0 ; ret
0x00000000004d0394 : je 0x4d03a1 ; mov eax, dword ptr [rdi + 8] ; pop rdx ; ret
0x00000000004d03e5 : je 0x4d03ef ; mov rax, qword ptr [rdi] ; ret
0x00000000004d0a68 : je 0x4d0ad6 ; mov rdi, rbx ; mov rsi, r14 ; call rax
0x00000000004d78f3 : je 0x4d7904 ; mov rdi, r13 ; call 0x4f3b17
0x00000000004da118 : je 0x4da127 ; mov rax, qword ptr [rcx + 0x38] ; pop rbx ; ret
0x00000000004db6a9 : je 0x4db6d3 ; mov rdi, rbx ; call 0x4b7907
0x00000000004def48 : je 0x4defa2 ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000004e3255 : je 0x4e3261 ; mov rax, qword ptr [rdi + 0x38] ; ret
0x00000000004e364a : je 0x4e3692 ; mov rsi, rbx ; call rax
0x00000000004e366f : je 0x4e36bc ; mov rsi, rbx ; call rax
0x00000000004e5f2e : je 0x4e5f3e ; xor esi, esi ; mov rdi, rbx ; call rax
0x00000000004e631e : je 0x4e632e ; xor esi, esi ; mov rdi, rbx ; call rax
0x00000000004e6367 : je 0x4e6377 ; xor esi, esi ; mov rdi, rbx ; call rax
0x00000000004e6383 : je 0x4e6397 ; xor edi, edi ; mov esi, 1 ; call rax
0x00000000004e642a : je 0x4e6430 ; jmp rax
0x00000000004e643a : je 0x4e6440 ; jmp rax
0x00000000004ea880 : je 0x4ea887 ; pop rax ; ret
0x00000000004eaa75 : je 0x4eaa6c ; ljmp ptr [rcx] ; ret 0xd089
0x00000000004eb930 : je 0x4eb937 ; pop rax ; ret
0x00000000004ecd9e : je 0x4ecdb1 ; add rsp, 8 ; pop rbx ; pop r14 ; ret
0x00000000004ecdff : je 0x4ece12 ; add rsp, 8 ; pop rbx ; pop r14 ; ret
0x00000000004ed805 : je 0x4ed817 ; mov rdx, qword ptr [r8 + 0x18] ; mov qword ptr [rcx], rdx ; ret
0x00000000004edaaa : je 0x4edad4 ; sbb dh, dh ; ret
0x00000000004f3366 : je 0x4f3378 ; mov rdx, qword ptr [r8 + 0x10] ; mov qword ptr [rcx], rdx ; ret
0x00000000004f3465 : je 0x4f346b ; jmp rax
0x00000000004f3485 : je 0x4f348b ; jmp rax
0x00000000004f34d1 : je 0x4f3534 ; mov rdi, rbx ; call rcx
0x00000000004f3560 : je 0x4f3566 ; jmp rax
0x00000000004f3593 : je 0x4f3599 ; jmp rcx
0x00000000004f35ce : je 0x4f35e8 ; mov rdi, rbx ; mov rsi, r14 ; call rax
0x00000000004f36da : je 0x4f36ee ; mov rdi, rbx ; call rax
0x00000000004f3b50 : je 0x4f3b64 ; mov rdi, rbx ; call rax
0x00000000004f3d06 : je 0x4f3d1a ; mov esi, 3 ; xor edx, edx ; jmp rax
0x00000000004f3f20 : je 0x4f3f3b ; mov rdi, rbx ; call 0x4d01b7
0x00000000004f4bb5 : je 0x4f4bbf ; mov eax, dword ptr [rdi + 8] ; ret
0x00000000004f4be5 : je 0x4f4bf1 ; mov rax, qword ptr [rdi + 0x18] ; ret
0x00000000004f4bfb : je 0x4f4c08 ; mov rax, qword ptr [rdi + 0x18] ; ret
0x00000000004f4c75 : je 0x4f4c87 ; mov rax, qword ptr [rdi] ; mov rax, qword ptr [rax + 8] ; ret
0x00000000004f4c85 : je 0x4f4c97 ; mov rax, qword ptr [rdi] ; mov rax, qword ptr [rax + 0x10] ; ret
0x00000000004f4c95 : je 0x4f4ca1 ; mov rax, qword ptr [rdi + 8] ; ret
0x00000000004f6b80 : je 0x4f6b87 ; pop rax ; ret
0x00000000004f888f : je 0x4f8897 ; call rax
0x00000000004f8f8c : je 0x4f8fb9 ; sbb byte ptr [rcx + rcx*4 - 1], cl ; call r14
0x00000000004f90e4 : je 0x4f9104 ; call rax
0x00000000004f99da : je 0x4f99e4 ; call r12
0x00000000004fa7b0 : je 0x4fa7b7 ; pop rax ; ret
0x00000000004fcc83 : je 0x4fcc90 ; mov rax, qword ptr [rcx + 8] ; pop rdx ; ret
0x00000000004fda5b : je 0x4fda6d ; mov rax, qword ptr [rdi + 0x20] ; mov qword ptr [rcx], rax ; ret
0x00000000004fda73 : je 0x4fda85 ; mov rax, qword ptr [rdi + 0x10] ; mov qword ptr [rsi], rax ; ret
0x00000000004ff0c0 : je 0x4ff0c7 ; pop rax ; ret
0x00000000004ff10b : je 0x4ff122 ; mov rdi, rbx ; call rcx
0x00000000004ff27b : je 0x4ff292 ; mov rdi, rbx ; call rcx
0x00000000004ff35b : je 0x4ff372 ; mov rdi, rbx ; call rcx
0x00000000004ff4d1 : je 0x4ff4e8 ; mov rdi, rbx ; call rcx
0x00000000004ff651 : je 0x4ff668 ; mov rdi, rbx ; call rcx
0x00000000004ff7d1 : je 0x4ff7e8 ; mov rdi, rbx ; call rcx
0x00000000004ffb0b : je 0x4ffb22 ; mov rdi, rbx ; call rcx
0x00000000004ffc3b : je 0x4ffc52 ; mov rdi, rbx ; call rcx
0x00000000004ffe06 : je 0x4ffe16 ; mov rdi, rbx ; call rax
0x00000000004fff9c : je 0x4fffaa ; mov eax, dword ptr [rdx + 4] ; mov dword ptr [rsi], eax ; ret
0x0000000000500236 : je 0x500242 ; mov rdi, r15 ; call rax
0x0000000000500214 : je 0x50033b ; mov rdi, r15 ; call rax
0x000000000050045b : je 0x500467 ; mov rdi, r14 ; call rax
0x00000000005004d8 : je 0x5004e4 ; mov rdi, rbx ; call rax
0x00000000005009e6 : je 0x5009f8 ; mov rcx, qword ptr [rax + 0x10] ; mov qword ptr [rdi], rcx ; ret
0x0000000000500f78 : je 0x500fe6 ; xor edx, edx ; mov rcx, rbp ; call r12
0x0000000000501466 : je 0x501485 ; call rax
0x0000000000504330 : je 0x504337 ; pop rax ; ret
0x00000000005044f7 : je 0x5044fd ; call rax
0x00000000005047a7 : je 0x5047af ; pop rbx ; jmp rax
0x000000000050aa93 : je 0x50aabe ; or byte ptr [rax - 0x77], cl ; ret 0xa2e8
0x000000000050aab9 : je 0x50aae4 ; or byte ptr [rax - 0x77], cl ; ret 0x7ce8
0x000000000050abba : je 0x50abe5 ; or byte ptr [rax - 0x77], cl ; ret 0x7be8
0x000000000050ac3b : je 0x50ac66 ; or byte ptr [rax - 0x77], cl ; ret 0xfae8
0x000000000050ad95 : je 0x50ada7 ; mov rax, qword ptr [rdi + 0x10] ; mov eax, dword ptr [rax + 0x48] ; ret
0x000000000050adcf : je 0x50ae2e ; ret
0x000000000050adce : je 0x50ae2f ; ret
0x000000000050c7ba : je 0x50c7e5 ; sbb byte ptr [rax - 0x77], cl ; ret 0x894d
0x000000000050c802 : je 0x50c811 ; mov eax, 1 ; ret
0x000000000050c801 : je 0x50c812 ; mov eax, 1 ; ret
0x000000000050ca00 : je 0x50ca07 ; pop rax ; ret
0x000000000050d113 : je 0x50d15b ; mov rdi, rbx ; call rax
0x000000000050d1c5 : je 0x50d1d1 ; mov rdi, rbx ; call rax
0x000000000050d1ed : je 0x50d1f9 ; mov rdi, rbx ; call rax
0x000000000050d248 : je 0x50d254 ; mov rdi, rbx ; call rax
0x000000000050ea81 : je 0x50ea85 ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000050eb01 : je 0x50eb05 ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000510929 : je 0x51093d ; mov rcx, r10 ; add rsp, 0x18 ; jmp rax
0x000000000053956c : je 0x539585 ; call r15
0x00000000005395ae : je 0x5395b6 ; call r14
0x0000000000539bab : je 0x539bb6 ; call r14
0x0000000000539be8 : je 0x539bf0 ; mov eax, dword ptr [rdi] ; ret
0x0000000000539c68 : je 0x539c72 ; mov eax, dword ptr [rdi + 0x10] ; ret
0x000000000053c33a : je 0x53c366 ; mov rdx, r13 ; call rbx
0x000000000053c662 : je 0x53c691 ; mov rdx, r13 ; mov rbx, r8 ; call rbx
0x000000000053ebaa : je 0x53ebb7 ; call rax
0x000000000053f063 : je 0x53f0e3 ; mov rdi, qword ptr [r12] ; call rax
0x000000000053f079 : je 0x53f0e5 ; mov rdi, r12 ; mov rsi, r15 ; call rax
0x000000000053f1a9 : je 0x53f1b7 ; mov rdi, rbx ; pop rbx ; jmp rax
0x000000000053f217 : je 0x53f228 ; mov eax, dword ptr [rsi + 0x28] ; mov dword ptr [rbx], eax ; pop rbx ; ret
0x000000000053f528 : je 0x53f2ec ; call rcx
0x000000000053f6eb : je 0x53f72f ; jmp rax
0x000000000053fc57 : je 0x53fc84 ; and byte ptr [rcx + rcx*4 - 0x16], cl ; call r14
0x000000000053fd3f : je 0x53fd6c ; and byte ptr [rcx + rcx*4 - 0x16], cl ; call r14
0x0000000000540c56 : je 0x540c65 ; mov rax, qword ptr [rsp] ; pop rdx ; ret
0x0000000000540c4a : je 0x540c66 ; lea rsi, qword ptr [rsp] ; xor edx, edx ; call rax
0x0000000000541076 : je 0x541085 ; mov rax, qword ptr [rsp] ; pop rdx ; ret
0x000000000054106a : je 0x541086 ; lea rsi, qword ptr [rsp] ; xor edx, edx ; call rax
0x0000000000541336 : je 0x541345 ; mov rax, qword ptr [rsp] ; pop rdx ; ret
0x000000000054132a : je 0x541346 ; lea rsi, qword ptr [rsp] ; xor edx, edx ; call rax
0x0000000000541816 : je 0x541825 ; mov rax, qword ptr [rsp] ; pop rdx ; ret
0x000000000054180a : je 0x541826 ; lea rsi, qword ptr [rsp] ; xor edx, edx ; call rax
0x00000000005423e9 : je 0x5423eb ; dec dword ptr [rax - 0x77] ; ret
0x000000000054243e : je 0x54244b ; mov rax, rbx ; pop rbx ; ret
0x0000000000542e50 : je 0x542e57 ; pop rax ; ret
0x0000000000545311 : je 0x54532a ; mov rdi, qword ptr [rbx + 8] ; call 0x4415f8
0x0000000000547068 : je 0x547080 ; mov rdi, r14 ; call rax
0x00000000005470c8 : je 0x5470e0 ; mov rdi, r14 ; call rax
0x00000000005472b0 : je 0x5472b7 ; pop rax ; ret
0x000000000054827b : je 0x548295 ; mov rsi, r15 ; mov rdx, r14 ; call rax
0x0000000000548451 : je 0x54846a ; mov rdi, r14 ; call rax
0x00000000005484d2 : je 0x5484f3 ; mov rdi, r14 ; call rax
0x000000000054854e : je 0x548563 ; mov rdi, r14 ; call rax
0x000000000054855c : je 0x548568 ; mov eax, ebx ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000005485a0 : je 0x5485bd ; lea rsi, qword ptr [rsp] ; mov rdi, rdx ; call rax
0x00000000005485b2 : je 0x5485be ; xor eax, eax ; add rsp, 0x48 ; ret
0x0000000000548728 : je 0x548738 ; mov qword ptr [rdi + 8], rsi ; xor eax, eax ; ret
0x0000000000548748 : je 0x548758 ; mov qword ptr [rdi + 0x10], rsi ; xor eax, eax ; ret
0x0000000000548768 : je 0x548778 ; mov qword ptr [rdi + 0x18], rsi ; xor eax, eax ; ret
0x0000000000548788 : je 0x548798 ; mov qword ptr [rdi + 0x20], rsi ; xor eax, eax ; ret
0x00000000005487a8 : je 0x5487b8 ; mov qword ptr [rdi + 0x28], rsi ; xor eax, eax ; ret
0x00000000005487c8 : je 0x5487d8 ; mov qword ptr [rdi + 0x30], rsi ; xor eax, eax ; ret
0x00000000005487e5 : je 0x5487f1 ; mov rax, qword ptr [rdi + 8] ; ret
0x00000000005487f5 : je 0x548801 ; mov rax, qword ptr [rdi + 0x10] ; ret
0x0000000000548805 : je 0x548811 ; mov rax, qword ptr [rdi + 0x18] ; ret
0x0000000000548815 : je 0x548821 ; mov rax, qword ptr [rdi + 0x20] ; ret
0x0000000000548825 : je 0x548831 ; mov rax, qword ptr [rdi + 0x28] ; ret
0x0000000000548835 : je 0x548841 ; mov rax, qword ptr [rdi + 0x30] ; ret
0x0000000000548845 : je 0x54884d ; mov eax, dword ptr [rdi] ; ret
0x0000000000548855 : je 0x54885f ; mov eax, dword ptr [rdi + 0x10] ; ret
0x0000000000548865 : je 0x548871 ; mov rax, qword ptr [rdi + 8] ; ret
0x000000000054b31c : je 0x54b324 ; pop rcx ; jmp rax
0x000000000054b36d : je 0x54b375 ; pop rdx ; jmp rax
0x000000000054b3b0 : je 0x54b3be ; mov rdi, qword ptr [rdi + 0x30] ; jmp rax
0x000000000054b3d0 : je 0x54b3de ; mov rdi, qword ptr [rdi + 0x30] ; jmp rax
0x000000000054d78e : je 0x54d7dd ; add rsp, 8 ; pop rbx ; pop r14 ; ret
0x000000000054d806 : je 0x54d819 ; add rsp, 8 ; pop rbx ; pop r14 ; ret
0x000000000054deea : je 0x54defd ; mov rax, qword ptr [rax] ; add rsp, 0x78 ; ret
0x000000000054df7a : je 0x54df8d ; mov rax, qword ptr [rax] ; add rsp, 0x78 ; ret
0x000000000054e075 : je 0x54e088 ; mov rdi, rbx ; call rax
0x0000000000551635 : je 0x551642 ; xor eax, eax ; pop rbx ; pop r14 ; pop r15 ; ret
0x00000000005517c6 : je 0x5517df ; mov eax, edx ; ret
0x0000000000551884 : je 0x55189d ; mov eax, edx ; ret
0x000000000055195c : je 0x551964 ; mov eax, edi ; ret
0x0000000000551a37 : je 0x551a3f ; mov eax, edi ; ret
0x0000000000551b07 : je 0x551b0f ; mov eax, edi ; ret
0x0000000000551b9b : je 0x551ba0 ; ret
0x00000000005537b8 : je 0x5537ef ; mov rdi, rbx ; call 0x401d39
0x0000000000553f26 : je 0x553f51 ; xor byte ptr [rax - 0x77], cl ; ret 0x4fe8
0x0000000000554e30 : je 0x554e37 ; pop rax ; ret
0x00000000005588d5 : je 0x5588df ; mov rax, qword ptr [rdi] ; ret
0x0000000000558fe7 : je 0x558ffa ; add rsp, 8 ; pop rbx ; pop r14 ; ret
0x00000000005598f0 : je 0x5598f7 ; pop rax ; ret
0x0000000000559b37 : je 0x559b54 ; mov rdi, rbx ; call rcx
0x0000000000559b79 : je 0x559b85 ; mov rdi, rbx ; call rax
0x0000000000559ba7 : je 0x559bad ; jmp rcx
0x0000000000559bc7 : je 0x559bcd ; jmp rcx
0x0000000000559bea : je 0x559bf2 ; jmp r9
0x0000000000559c06 : je 0x559c0f ; xor eax, eax ; ret
0x0000000000559c20 : je 0x559c26 ; jmp rax
0x0000000000559c40 : je 0x559c46 ; jmp rax
0x0000000000559c60 : je 0x559c66 ; jmp rax
0x0000000000559ddd : je 0x559de9 ; mov rdi, rbx ; call rax
0x0000000000559df9 : je 0x559e05 ; mov rdi, rbx ; call rax
0x0000000000559f13 : je 0x559f23 ; mov rdi, r15 ; call rax
0x0000000000559f45 : je 0x559f51 ; mov rdi, r15 ; call rax
0x000000000055c3c7 : je 0x55c3c9 ; pop rbp ; add cl, ch ; ret 0xfffd
0x000000000055c885 : je 0x55c88f ; mov rax, qword ptr [rdi] ; ret
0x000000000055c895 : je 0x55c8a1 ; mov rax, qword ptr [rdi + 0x10] ; ret
0x000000000055d543 : je 0x55d585 ; call rax
0x000000000055e56e : je 0x55e57a ; mov rdi, rbx ; call rax
0x000000000055e60e : je 0x55e61a ; mov rdi, rbx ; call rax
0x000000000055eb95 : je 0x55ebc1 ; and byte ptr [rcx + rcx*4 - 0x1e], cl ; call rax
0x000000000055ef14 : je 0x55ef24 ; lea rdi, qword ptr [rsp + 0x10] ; call rax
0x0000000000560da5 : je 0x560db1 ; mov rax, qword ptr [rdi + 8] ; ret
0x0000000000561545 : je 0x56154f ; mov rax, qword ptr [rdi] ; ret
0x0000000000561c3d : je 0x561c66 ; clc ; ret
0x0000000000564947 : je 0x564965 ; xor eax, eax ; ret
0x0000000000565050 : je 0x565062 ; mov rax, qword ptr [rax + 8] ; mov qword ptr [rdx], rax ; ret
0x0000000000565fcb : je 0x565fd1 ; jmp rax
0x0000000000565feb : je 0x565ff5 ; xor ecx, ecx ; jmp rax
0x00000000005663b7 : je 0x5663cf ; mov rdi, r14 ; call rax
0x0000000000566765 : je 0x566779 ; mov rdi, r14 ; call rax
0x0000000000567900 : je 0x56790b ; call 0x4f3b14
0x00000000005679af : je 0x5679fe ; mov rdi, r14 ; mov rsi, rbp ; call rax
0x000000000056824a : je 0x568259 ; mov eax, 1 ; pop rbx ; ret
0x000000000056853f : je 0x568551 ; mov rax, qword ptr [rdx + 8] ; mov qword ptr [rsi], rax ; ret
0x0000000000578876 : je 0x57886e ; ret 0x89bd
0x000000000058b6ff : je 0x58b6ff ; ret
0x0000000000594382 : je 0x5943e5 ; ret
0x0000000000594563 : je 0x5944ec ; pop rbp ; div ecx ; ret 0xa995
0x00000000005957f1 : je 0x5957b6 ; or byte ptr [rdx], dl ; pop rdx ; ret
0x0000000000595960 : je 0x595979 ; outsb dx, byte ptr [rsi] ; jno 0x59598d ; adc byte ptr [rbx - 0x74], al ; ret 0xc095
0x0000000000596183 : je 0x5961cb ; xchg eax, edx ; ret
0x0000000000596dcb : je 0x596d56 ; push rax ; bt dword ptr [rax - 9], -0x75 ; ret
0x0000000000597277 : je 0x5971ff ; and byte ptr [rbp], al ; xlatb ; ret
0x0000000000599a71 : je 0x599a8a ; or edi, eax ; xchg eax, edx ; sahf ; pop rcx ; jne 0x599ae1 ; ret
0x000000000059bda5 : je 0x59bd7f ; mov esi, 0xf48c0012 ; ret
0x000000000059befe : je 0x59bec9 ; imul esi, dword ptr [rcx], 0x42 ; ret 0xdc5a
0x00000000005a7e55 : je 0x5a7e8f ; lahf ; ret 0xb224
0x00000000005a7e54 : je 0x5a7e90 ; lahf ; ret 0xb224
0x00000000005a7e53 : je 0x5a7ea8 ; je 0x5a7e91 ; lahf ; ret 0xb224
0x00000000005a82e7 : je 0x5a832b ; ret
0x00000000005a8bb7 : je 0x5a8bf6 ; jno 0x5a8c3b ; adc bl, byte ptr [rbx] ; sbb al, 0x1e ; ret
0x00000000005ae4f7 : je 0x5ae520 ; ret 0x6948
0x00000000005b19c0 : je 0x5b197e ; cwde ; ret 0x1955
0x00000000005b28ec : je 0x5b28c4 ; cmp edi, dword ptr [rdx] ; ret
0x00000000005b418d : je 0x5b4174 ; int1 ; ret
0x00000000005b41f3 : je 0x5b4250 ; ret
0x00000000005b473d : je 0x5b46ea ; hlt ; ret 0x82f4
0x00000000005b4ec2 : je 0x5b4eaf ; ret 0x89f6
0x00000000005b7126 : je 0x5b718b ; cmp eax, dword ptr [rdi + 0x63] ; ret
0x00000000005e2e2d : je 0x5e2e18 ; jmp rax
0x00000000005ea63d : je 0x5ea637 ; call rax
0x00000000005eb115 : je 0x5eb110 ; call rax
0x00000000005f727c : je 0x5f7235 ; add byte ptr [rax], al ; sub al, -0x18 ; jmp qword ptr [rbx]
0x00000000005fdb7c : je 0x5fdb9c ; add dword ptr [rax], eax ; push rax ; ret
0x0000000000609e7c : je 0x609e5f ; add dword ptr [rax], eax ; nop ; ret 0xffee
0x000000000060c37c : je 0x60c386 ; add al, byte ptr [rax] ; mov al, 0x6a ; out dx, eax ; jmp qword ptr [rdi]
0x000000000061067c : je 0x6106c9 ; add al, byte ptr [rax] ; adc byte ptr [rcx], bl ; call qword ptr [rsi]
0x0000000000610d7c : je 0x610dd0 ; add al, byte ptr [rax] ; shl byte ptr [rsi], 1 ; jmp qword ptr [rcx]
0x000000000061527c : je 0x615215 ; add al, byte ptr [rax] ; ror byte ptr [rcx - 0xc], 1 ; call qword ptr [rdi]
0x0000000000616c7c : je 0x616c2f ; add al, byte ptr [rax] ; mov al, -0x51 ; hlt ; call qword ptr [rcx]
0x000000000061707c : je 0x617033 ; add al, byte ptr [rax] ; add ah, ah ; hlt ; call qword ptr [rsi]
0x000000000061777c : je 0x61773a ; add al, byte ptr [rax] ; adc bh, ah ; hlt ; call qword ptr [rax]
0x0000000000411ce5 : jg 0x411c84 ; adc al, 0x50 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4820
0x00000000004193cd : jg 0x4193c2 ; ret
0x000000000042b178 : jg 0x42b18a ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000431ebe : jg 0x431ecc ; add byte ptr [rax], al ; mov eax, 0x573bb0 ; ret
0x0000000000433002 : jg 0x433065 ; add bl, al ; mov eax, 0x5740b6 ; ret
0x000000000044b937 : jg 0x44b961 ; and al, 0xffffffffffffffc1 ; ret
0x000000000044d38c : jg 0x44d398 ; movd dword ptr [r9 + 0x10], xmm9 ; ret
0x00000000004518a1 : jg 0x4518b5 ; movdqu xmmword ptr [r9 + 0x10], xmm2 ; ret
0x00000000004518a6 : jg 0x4518fd ; adc bl, dh ; ret
0x0000000000456577 : jg 0x456572 ; ret
0x0000000000458e45 : jg 0x458e4c ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000461bfe : jg 0x461c3f ; test rdi, rdi ; jne 0x461bf7 ; ret
0x000000000046b54e : jg 0x46b545 ; mov dword ptr [rdi + 8], edx ; ret
0x000000000046b60e : jg 0x46b605 ; mov dword ptr [rdi + 8], ecx ; ret
0x0000000000472a07 : jg 0x4729e2 ; ret
0x00000000004767e3 : jg 0x4767fb ; enter -0x3777, 0x5a ; ret
0x00000000004768a3 : jg 0x4768bb ; enter -0x3777, 0x5a ; ret
0x0000000000478ea0 : jg 0x478ea5 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000479d64 : jg 0x479d63 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000487258 : jg 0x48726a ; add byte ptr [rax - 0x77], cl ; ret
0x000000000048c206 : jg 0x48c252 ; or byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000048c276 : jg 0x48c2c2 ; sbb byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000496465 : jg 0x4964c0 ; cmp dword ptr [rax], eax ; pop rdx ; ret
0x00000000004b043c : jg 0x4b0443 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004b4380 : jg 0x4b438c ; add byte ptr [rcx + 0x5e415be8], cl ; pop rbp ; ret
0x00000000004b87f4 : jg 0x4b881d ; ret
0x00000000004be45d : jg 0x4be47a ; ret
0x00000000004be8a6 : jg 0x4be8c3 ; ret
0x00000000004bea98 : jg 0x4beaed ; ret
0x00000000004bea92 : jg 0x4beb14 ; movdqu xmmword ptr [rdi + 0x50], xmm7 ; ret
0x00000000004bea97 : jg 0x4beb1c ; push rax ; ret
0x00000000004beb48 : jg 0x4bebba ; and bl, dh ; movq qword ptr [rdi + 0x30], mm5 ; ret
0x00000000004beb4d : jg 0x4bebc2 ; xor bl, dh ; ret
0x00000000004bed1d : jg 0x4bed85 ; and ch, al ; clc ; ja 0x4bed1e ; ret
0x00000000004d5763 : jg 0x4d57d0 ; push rax ; ret
0x00000000004d5826 : jg 0x4d5832 ; ret
0x00000000004d5e82 : jg 0x4d5e8e ; ret
0x00000000004d66f3 : jg 0x4d6712 ; vzeroupper ; ret
0x00000000004d75c9 : jg 0x4d7560 ; add al, -0x60 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004dab89 : jg 0x4dab9c ; sbb byte ptr [rax - 0x7d], cl ; ret
0x00000000004e1bc6 : jg 0x4e1be6 ; pop rbx ; pop r14 ; pop r15 ; ret
0x00000000004ed3f5 : jg 0x4ed403 ; add byte ptr [rax], al ; mov rdi, qword ptr [r15] ; call 0x4e96d9
0x00000000004f8e54 : jg 0x4f8e51 ; dec dword ptr [rax - 0x77] ; ret
0x00000000004ff2d8 : jg 0x4ff301 ; adc byte ptr [rbp + 0x2a], dh ; pop r9 ; jmp rax
0x00000000005128a6 : jg 0x5128b5 ; vzeroupper ; ret
0x0000000000513dcb : jg 0x513e08 ; ret
0x0000000000513f6c : jg 0x513fa9 ; ret
0x00000000005141c9 : jg 0x5141db ; dec r9d ; jne 0x5141b8 ; ret
0x000000000052040c : jg 0x52041d ; movd dword ptr [rdi + 0x10], xmm1 ; ret
0x0000000000520ff5 : jg 0x520fff ; and al, 0xffffffffffffffc1 ; ret
0x000000000052d475 : jg 0x52d48e ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000052d479 : jg 0x52d4d6 ; adc bl, dh ; ret
0x0000000000539dba : jg 0x539dad ; dec dword ptr [rax - 0x77] ; ret
0x000000000054263f : jg 0x542641 ; dec dword ptr [rax - 0x77] ; ret
0x000000000054b3b4 : jg 0x54b3e8 ; jmp rax
0x000000000054b3d4 : jg 0x54b408 ; jmp rax
0x00000000005554e5 : jg 0x555504 ; ret
0x0000000000555570 : jg 0x55557b ; ret
0x0000000000555590 : jg 0x55559b ; ret
0x0000000000555617 : jg 0x55564c ; ret
0x0000000000562b62 : jg 0x562b83 ; movdqu xmmword ptr [rdi + 0x10], xmm0 ; ret
0x0000000000562b66 : jg 0x562bb3 ; adc bl, dh ; ret
0x0000000000564b7e : jg 0x564b90 ; sub esi, 1 ; jne 0x564b48 ; ret
0x0000000000564e37 : jg 0x564e3f ; jne 0x564e34 ; ret
0x00000000005783c6 : jg 0x578382 ; sub bh, bh ; mov word ptr [rcx], es ; out dx, eax ; fnsave dword ptr [rdx] ; ret
0x000000000057e00d : jg 0x57e01f ; int 0xff
0x0000000000594ae6 : jg 0x594b1e ; ret
0x0000000000597761 : jg 0x5977a1 ; ret
0x00000000005a125f : jg 0x5a125a ; test dword ptr [rbx + rsi*8 - 0x728c136b], ecx ; ret
0x00000000005a481a : jg 0x5a47d6 ; xchg eax, esi ; add eax, 0x64b0408d ; ret
0x00000000005a4d8b : jg 0x5a4d9c ; sbb bh, al ; ret
0x00000000005a6b4a : jg 0x5a6ae6 ; xchg eax, ebp ; ret
0x00000000005a76c8 : jg 0x5a773f ; ret 0x2642
0x00000000005abaca : jg 0x5aba8c ; pushfq ; sbb edx, dword ptr [rsi + 0x290570e1] ; ret 0x2f5c
0x00000000005add46 : jg 0x5add68 ; ja 0x5add52 ; out -6, al ; ret
0x00000000005add45 : jg 0x5add69 ; ja 0x5add53 ; out -6, al ; ret
0x00000000005af606 : jg 0x5af5e7 ; sub byte ptr [rsi + 0x4d352818], 0x65 ; ret
0x00000000005b48ed : jg 0x5b4934 ; cmp cl, byte ptr [rbx - 0x6d94d81b] ; clc ; ret 0x9f2e
0x00000000005e5ed5 : jg 0x5e5ec6 ; jmp rax
0x00000000005e8309 : jg 0x5e8313 ; add byte ptr [rax], al ; sbb dh, cl ; jmp rax
0x00000000005e8319 : jg 0x5e8323 ; add byte ptr [rax], ah ; sbb dh, cl ; call qword ptr [rax]
0x00000000005e883d : jg 0x5e8832 ; call qword ptr [rax]
0x00000000005eb1cd : jg 0x5eb1c8 ; call rax
0x00000000005f410d : jg 0x5f4113 ; add byte ptr [rax], dh ; ret
0x00000000005fcd49 : jg 0x5fcd37 ; call qword ptr [rcx]
0x00000000005ffa21 : jg 0x5ffa10 ; call qword ptr [rdx]
0x00000000006141f5 : jg 0x6141ff ; add al, cl ; in al, dx ; jmp qword ptr [rsi]
0x000000000042ce36 : jge 0x42ce45 ; mov eax, 0xffffffff ; ret
0x000000000044f936 : jge 0x44f976 ; add al, 0x24 ; add esp, eax ; ret
0x0000000000483d2f : jge 0x483cdd ; or eax, dword ptr [rax] ; add rsp, 0x38 ; ret
0x00000000004bc478 : jge 0x4bc479 ; dec dword ptr [rax - 0x77] ; ret
0x00000000004bc477 : jge 0x4bc47a ; dec dword ptr [rax - 0x77] ; ret
0x00000000004d3c70 : jge 0x4d3cb9 ; lea rsi, qword ptr [rbp + 0x60] ; call r12
0x00000000004d4514 : jge 0x4d455d ; lea rsi, qword ptr [r13 + 0x60] ; call r8
0x00000000004d4808 : jge 0x4d4851 ; lea rsi, qword ptr [r13 + 0x60] ; call r8
0x00000000004e0572 : jge 0x4e057d ; mov eax, ebx ; pop rbx ; ret
0x00000000004e4938 : jge 0x4e4937 ; out dx, eax ; inc dword ptr [rcx + 9] ; rol dword ptr [rcx + 0x31], cl ; ret
0x00000000005116fb : jge 0x5116d3 ; ret 0x43c4
0x0000000000511772 : jge 0x51174a ; ret 0x43c4
0x0000000000511c18 : jge 0x511c10 ; ret 0x7ec5
0x0000000000511c44 : jge 0x511c3c ; ret 0x7ec5
0x0000000000511ca8 : jge 0x511ca0 ; ret
0x0000000000511cd9 : jge 0x511cd1 ; ret
0x0000000000511c73 : jge 0x511cd4 ; push rbp ; adc byte ptr [rax - 0x77], cl ; ret 0xf48
0x0000000000511c72 : jge 0x511cd5 ; push rbp ; adc byte ptr [rax - 0x77], cl ; ret 0xf48
0x0000000000511d05 : jge 0x511cfd ; ret
0x0000000000511d53 : jge 0x511d4b ; ret 0x79c5
0x0000000000511d88 : jge 0x511d80 ; ret 0x7ec5
0x0000000000511db4 : jge 0x511dac ; ret 0x7ec5
0x0000000000511e00 : jge 0x511df8 ; ret
0x0000000000511e31 : jge 0x511e29 ; ret
0x0000000000511e5d : jge 0x511e55 ; ret
0x0000000000511ea3 : jge 0x511e9b ; ret 0x79c5
0x0000000000511ed8 : jge 0x511ed0 ; ret 0x7ec5
0x0000000000511f04 : jge 0x511efc ; ret 0x7ec5
0x0000000000511f49 : jge 0x511f41 ; ret
0x0000000000511f7f : jge 0x511f77 ; ret
0x0000000000511fab : jge 0x511fa3 ; ret
0x00000000005231a5 : jge 0x5231a7 ; ret
0x00000000005231a4 : jge 0x5231a8 ; ret
0x000000000052b461 : jge 0x52b472 ; push rbp ; ret
0x000000000052b465 : jge 0x52b476 ; push rbp ; ret
0x000000000052b469 : jge 0x52b47a ; push rbp ; ret
0x000000000052b46d : jge 0x52b47e ; push rbp ; ret
0x000000000052b471 : jge 0x52b482 ; push rbp ; ret
0x000000000052b475 : jge 0x52b486 ; push rbp ; ret
0x000000000052b479 : jge 0x52b48a ; push rbp ; ret
0x000000000052f2de : jge 0x52f31e ; add al, 0x24 ; add esp, eax ; ret
0x0000000000534588 : jge 0x53458c ; ret 0xc3c4
0x0000000000534588 : jge 0x53458e ; ret 0xc3c4
0x0000000000534579 : jge 0x5345b9 ; add al, 0x24 ; add esp, eax ; ret
0x0000000000534696 : jge 0x53466e ; ret
0x0000000000534779 : jge 0x534751 ; ret
0x000000000054e1d6 : jge 0x54e1d6 ; dec dword ptr [rax - 0x77] ; ret
0x00000000005842b6 : jge 0x584281 ; push rdx ; lahf ; ret 0x7700
0x0000000000594101 : jge 0x5940df ; ret 0xfb5b
0x00000000005940ff : jge 0x5940ee ; jge 0x5940e1 ; ret 0xfb5b
0x0000000000596733 : jge 0x5966db ; ret 0xaeee
0x0000000000596d5a : jge 0x596ce6 ; test cl, dh ; ret 0x370f
0x000000000059b4a3 : jge 0x59b4ce ; add esi, esp ; ret 0xc6d7
0x000000000059d2cb : jge 0x59d2df ; or dword ptr [rax], eax ; pushfq ; ret 0x51d8
0x000000000059df2d : jge 0x59df17 ; add byte ptr [rdi + 0x45], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; jne 0x59df70 ; ret 0xc109
0x000000000059ef4c : jge 0x59ef29 ; mov cl, -0x4c ; jp 0x59ef39 ; scasd eax, dword ptr [rdi] ; and eax, esp ; ret 0xbd61
0x000000000059fbc6 : jge 0x59fc18 ; in al, dx ; call rsp
0x00000000005a2045 : jge 0x5a20c5 ; ret
0x00000000005a5225 : jge 0x5a51cd ; jmp 0x2dc2b68e
0x00000000005a61f4 : jge 0x5a61c6 ; ret
0x00000000005a61f3 : jge 0x5a61c7 ; ret
0x00000000005a6cdf : jge 0x5a6cd2 ; mov al, 0x6c ; sub cl, dh ; ret 0x861c
0x00000000005a6cde : jge 0x5a6cd3 ; mov al, 0x6c ; sub cl, dh ; ret 0x861c
0x00000000005a991c : jge 0x5a9924 ; pop rdi ; pop r12 ; jmp 0xffffffffc30bd173
0x00000000005aa33a : jge 0x5aa359 ; in eax, dx ; push rbp ; ret 0x89e7
0x00000000005aaf1a : jge 0x5aaf79 ; ret
0x00000000005b24c7 : jge 0x5b2450 ; ret
0x00000000005b24c6 : jge 0x5b2451 ; ret
0x00000000005b251b : jge 0x5b2558 ; ret 0xf356
0x00000000005b2b19 : jge 0x5b2ac4 ; ret
0x00000000005b5292 : jge 0x5b523d ; jns 0x5b5228 ; ret
0x00000000005e3515 : jge 0x5e3501 ; jmp rax
0x00000000005e82a1 : jge 0x5e82ab ; add byte ptr [rax + 0xb], dh ; int1 ; call rax
0x00000000005f3f35 : jge 0x5f3f3d ; add al, ch ; mov bl, -0x1a ; call qword ptr [rcx]
0x00000000005f3f4d : jge 0x5f3f55 ; add al, dh ; mov bl, -0x1a ; jmp qword ptr [rsi]
0x00000000005f3f4c : jge 0x5f3f56 ; add al, dh ; mov bl, -0x1a ; jmp qword ptr [rsi]
0x00000000005f3f6d : jge 0x5f3f75 ; add byte ptr [rax], al ; mov ah, -0x1a ; call qword ptr [rcx]
0x00000000005f3f6c : jge 0x5f3f76 ; add byte ptr [rax], al ; mov ah, -0x1a ; call qword ptr [rcx]
0x00000000005f3f85 : jge 0x5f3f8d ; add byte ptr [rax], cl ; mov ah, -0x1a ; jmp rdx
0x00000000006046e1 : jge 0x6046d2 ; jmp qword ptr [rax]
0x0000000000417d89 : jl 0x417d94 ; sbb al, ch ; call qword ptr [rbx]
0x0000000000420af6 : jl 0x420b20 ; adc al, ch ; ret 0x598
0x00000000004261b6 : jl 0x4261a2 ; ret
0x000000000042c2b2 : jl 0x42c310 ; ret
0x000000000042c2b1 : jl 0x42c311 ; ret
0x00000000004323ab : jl 0x4323b7 ; add byte ptr [rax], al ; mov eax, 0x573770 ; ret
0x0000000000432e2a : jl 0x432dea ; call 0xffffffffc3438574
0x0000000000433835 : jl 0x43385f ; adc al, ch ; ret
0x000000000043a537 : jl 0x43a562 ; adc byte ptr [rax - 0x7d], cl ; ret 0x4802
0x000000000043e022 : jl 0x43e04d ; jo 0x43e013 ; xchg eax, esi ; ret
0x000000000043ecaa : jl 0x43ecb2 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000043eca9 : jl 0x43ecb3 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000044e034 : jl 0x44e061 ; les rax, ptr [rcx + 0x39] ; jmp 0x44e006
0x000000000044f114 : jl 0x44f141 ; les rax, ptr [rcx + 0x39] ; jmp 0x44f0e6
0x000000000045a01a : jl 0x45a045 ; sbb al, ch ; out dx, al ; ret 8
0x0000000000464480 : jl 0x46444a ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000004684dd : jl 0x468509 ; adc byte ptr [rcx], dh ; imul cl ; ret
0x0000000000472580 : jl 0x4725af ; xor byte ptr [rax - 0x77], cl ; dec byte ptr [rcx + rcx*4 - 6] ; call rcx
0x000000000047c450 : jl 0x47c427 ; ret
0x000000000047c44f : jl 0x47c428 ; ret
0x000000000048e58d : jl 0x48e5bc ; and byte ptr [rax], al ; je 0x48e5a1 ; mov rdi, r12 ; call rax
0x00000000004987a6 : jl 0x4987d0 ; or al, ch ; ret 0xfd22
0x00000000004ab5b0 : jl 0x4ab5a8 ; add dword ptr [rax], eax ; pop rbx ; ret
0x00000000004ad1e9 : jl 0x4ad213 ; call r14
0x00000000004c46e0 : jl 0x4c470f ; xor byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0x18] ; ret
0x00000000004c4f1d : jl 0x4c4f4c ; cmp byte ptr [rcx + rcx*4 - 2], cl ; mov rcx, r13 ; call rax
0x00000000004cd82b : jl 0x4cd859 ; adc byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 1], 1 ; ret 0x894c
0x00000000004cf3e2 : jl 0x4cf414 ; cmp byte ptr [rcx - 0x73], al ; push rdi ; ljmp ptr [rcx] ; ret 0xff48
0x00000000004dbc07 : jl 0x4dbc0f ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004e2238 : jl 0x4e2196 ; ret
0x00000000004f4ebd : jl 0x4f4eec ; or al, ch ; sbb ecx, dword ptr [rbp + 4] ; add byte ptr [rcx], bh ; ret
0x00000000004f59a6 : jl 0x4f59d5 ; sub al, ch ; xor al, byte ptr [rdx + 4] ; add byte ptr [rcx], bh ; ret
0x00000000004f8f11 : jl 0x4f8f50 ; jmp qword ptr [rax]
0x00000000004f9f5d : jl 0x4f9f88 ; adc al, ch ; stosd dword ptr [rdi], eax ; ret
0x0000000000509dd0 : jl 0x509dff ; sbb al, ch ; mov eax, 0x83fffc65 ; ret
0x000000000050af28 : jl 0x50af56 ; adc byte ptr [rax - 0x77], cl ; fimul word ptr [rax - 0x77] ; ret 0xae8
0x0000000000516834 : jl 0x516839 ; ret
0x000000000051698e : jl 0x5169c3 ; ret
0x0000000000539816 : jl 0x539805 ; mov dword ptr [rdi], r8d ; ret
0x000000000053ad80 : jl 0x53ade8 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000542a7c : jl 0x542a41 ; jmp 0x542ad1
0x000000000055fb9b : jl 0x55fbca ; or al, ch ; cmp eax, 0x39fffda0 ; ret
0x000000000057d89d : jl 0x57d8c0 ; sub al, 0xf ; cmc ; ret 0xf961
0x000000000057d89c : jl 0x57d8c1 ; sub al, 0xf ; cmc ; ret 0xf961
0x00000000005842b4 : jl 0x58426d ; jge 0x584283 ; push rdx ; lahf ; ret 0x7700
0x000000000058d778 : jl 0x58d74a ; add ecx, ecx ; ret
0x000000000058ec2a : jl 0x58ebef ; ret 0xd8e5
0x000000000059617e : jl 0x596169 ; in al, dx ; fdiv qword ptr [rbx + rax*2 - 0x6e] ; ret
0x0000000000598295 : jl 0x598224 ; mov ecx, dword ptr [rip + 0x569ad4d1] ; scasb al, byte ptr [rdi] ; ret 0x2687
0x000000000059895f : jl 0x59893f ; ret
0x0000000000599106 : jl 0x5990e7 ; ret 0x278f
0x000000000059918f : jl 0x599193 ; ret
0x0000000000599642 : jl 0x599646 ; ffree st(7) ; ret 0x4823
0x000000000059b276 : jl 0x59b277 ; ret
0x000000000059cb67 : jl 0x59cb8e ; mov eax, esi ; xchg eax, edi ; or bl, byte ptr ss:[rcx] ; ret
0x000000000059fa92 : jl 0x59faea ; fisubr dword ptr [rcx - 0x39] ; test al, -0x21 ; insb byte ptr [rdi], dx ; ret
0x000000000059fcf6 : jl 0x59fcf7 ; sbb dl, byte ptr [rdi] ; ret 0xaaca
0x00000000005a17ba : jl 0x5a17c8 ; ret
0x00000000005a605f : jl 0x5a5ff1 ; ret
0x00000000005a6e50 : jl 0x5a6e40 ; out dx, al ; test eax, 0x3c37951e ; ret
0x00000000005a7be7 : jl 0x5a7c29 ; lea edi, dword ptr [rsi] ; in al, dx ; ret
0x00000000005ab536 : jl 0x5ab566 ; push rax ; jmp qword ptr [rdi]
0x00000000005ab7d9 : jl 0x5ab7b6 ; in eax, 0x58 ; jb 0x5ab818 ; mov al, -0x3c ; ret 0xc5cc
0x00000000005ae79a : jl 0x5ae773 ; stosb byte ptr [rdi], al ; mov word ptr [rdi - 0x69], fs ; ret
0x00000000005b16e3 : jl 0x5b1711 ; jl 0x5b1718 ; lahf ; ret 0x8012
0x00000000005b16e2 : jl 0x5b1712 ; jl 0x5b1719 ; lahf ; ret 0x8012
0x00000000005b16e5 : jl 0x5b1716 ; lahf ; ret 0x8012
0x00000000005b382c : jl 0x5b387d ; ret 0x5767
0x00000000005b382b : jl 0x5b387e ; ret 0x5767
0x00000000005e3af5 : jl 0x5e3ae2 ; jmp qword ptr [rax]
0x00000000005e4351 : jl 0x5e435a ; add byte ptr [rax], al ; mov edx, gs ; call qword ptr [rax]
0x00000000005e5e95 : jl 0x5e5e86 ; jmp qword ptr [rax]
0x00000000005e6d45 : jl 0x5e6d38 ; jmp qword ptr [rax]
0x00000000005eb195 : jl 0x5eb190 ; jmp rax
0x00000000005eb1a5 : jl 0x5eb1a0 ; jmp qword ptr [rax]
0x00000000005f1084 : jl 0x5f10db ; add byte ptr [rax], al ; sbb byte ptr [rax - 0x1c], dl ; call qword ptr [rbx]
0x00000000005f1184 : jl 0x5f11dd ; add byte ptr [rax], al ; pop rcx ; in al, -1 ; ret
0x00000000005f9184 : jl 0x5f915c ; add byte ptr [rax], al ; call 0x185f7aaf
0x000000000060e984 : jl 0x60e9b4 ; add al, byte ptr [rax] ; fcom st(7) ; call qword ptr [rbx]
0x0000000000613e6d : jl 0x613e77 ; add byte ptr [rax - 0x1c], ah ; jmp qword ptr [rcx]
0x0000000000613e6c : jl 0x613e78 ; add byte ptr [rax - 0x1c], ah ; jmp qword ptr [rcx]
0x0000000000617184 : jl 0x61713c ; add al, byte ptr [rax] ; pop rax ; in al, -0xc ; call qword ptr [rsi]
0x00000000005d77ac : jl 0xffffffffcc6c073b ; ret 0x3bce
0x0000000000406720 : jle 0x40671b ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000425d4c : jle 0x425d53 ; pop rbx ; ret
0x000000000042627c : jle 0x426283 ; pop rbx ; ret
0x000000000042ad8c : jle 0x42ad93 ; pop rbx ; ret
0x000000000042b270 : jle 0x42b27f ; pop rbx ; pop r14 ; pop r15 ; ret
0x0000000000430bac : jle 0x430bb3 ; pop rbx ; ret
0x0000000000432a33 : jle 0x432a40 ; add byte ptr [rax], al ; mov eax, 0x573eb3 ; ret
0x0000000000432a45 : jle 0x432a52 ; add byte ptr [rax], al ; mov eax, 0x573ea5 ; ret
0x0000000000446e0c : jle 0x446e56 ; push rbx ; sbb dl, byte ptr [rdi] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004473eb : jle 0x447399 ; jmp rsi
0x000000000044d391 : jle 0x44d3e0 ; adc bl, dh ; ret
0x00000000004524da : jle 0x45252f ; ret
0x00000000004620db : jle 0x4620e6 ; xor eax, eax ; pop rdx ; ret
0x000000000046b3b5 : jle 0x46b3c4 ; mov eax, r9d ; ret
0x0000000000486a30 : jle 0x486a84 ; mov edx, dword ptr [rdx + 8] ; mov qword ptr [rcx], rdx ; pop rdx ; ret
0x0000000000487b3e : jle 0x487ae6 ; std ; dec dword ptr [rax - 0x77] ; ret
0x000000000048f4a4 : jle 0x48f4ab ; pop rbx ; ret
0x000000000048f4a4 : jle 0x48f4b0 ; pop rbx ; ret
0x00000000004966a9 : jle 0x4966b0 ; pop rbx ; ret
0x000000000049aa89 : jle 0x49aa90 ; pop rbx ; ret
0x000000000049b9a9 : jle 0x49ba03 ; pop rax ; add byte ptr [rcx - 0x48], al ; ret 0
0x00000000004af7ce : jle 0x4af789 ; sti ; dec dword ptr [rax - 0x77] ; ret
0x00000000004b7009 : jle 0x4b7010 ; pop rbx ; ret
0x00000000004ba36c : jle 0x4ba37f ; add rsp, 8 ; pop rbx ; pop r14 ; ret
0x00000000004ba3ec : jle 0x4ba3ff ; add rsp, 8 ; pop rbx ; pop r14 ; ret
0x00000000004c2d49 : jle 0x4c2d50 ; pop rbx ; ret
0x00000000004c2d99 : jle 0x4c2da0 ; pop rbx ; ret
0x00000000004d3b0a : jle 0x4d3b53 ; lea rsi, qword ptr [r14 + 0x60] ; call r8
0x00000000004f3b39 : jle 0x4f3b40 ; pop rbx ; ret
0x000000000050d239 : jle 0x50d240 ; pop rbx ; ret
0x000000000051159c : jle 0x511613 ; push rbp ; call 0x4a139ef2
0x000000000051159b : jle 0x511614 ; push rbp ; call 0x4a139ef3
0x00000000005115dc : jle 0x511653 ; pop rbp ; sub byte ptr [rcx + 1], cl ; ret 0x8948
0x00000000005115db : jle 0x511654 ; pop rbp ; sub byte ptr [rcx + 1], cl ; ret 0x8948
0x00000000005175d8 : jle 0x5175c2 ; ret
0x0000000000520410 : jle 0x520465 ; adc bl, dh ; ret
0x0000000000540a4b : jle 0x540a62 ; mov rax, rdi ; ret
0x00000000005668c9 : jle 0x5668d0 ; pop rbx ; ret
0x00000000005678d9 : jle 0x5678e0 ; pop rbx ; ret
0x0000000000567d94 : jle 0x567d86 ; jbe 0x567d58 ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000567ee4 : jle 0x567ed6 ; mov bh, -8 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000568034 : jle 0x568026 ; salc ; mov ch, -8 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000578d78 : jle 0x578d29 ; stc ; pop rsp ; ret 0x1948
0x000000000057e146 : jle 0x57e0e6 ; mov ebp, 0x6fb7fbff ; jmp 0xffffffffacf0a3c1
0x000000000057e133 : jle 0x57e178 ; ret 0xc5e
0x000000000057e132 : jle 0x57e179 ; ret 0xc5e
0x000000000058bcde : jle 0x58bd13 ; ret 0xbde5
0x000000000058d621 : jle 0x58d68f ; mov edx, 0xc2ac05eb ; jmp qword ptr gs:[rbx]
0x000000000058d765 : jle 0x58d797 ; push rsi ; ret 0x3a22
0x000000000058eb8e : jle 0x58eb27 ; add esi, ecx ; xchg eax, esp ; xor edx, dword ptr [rsi + 7] ; ret
0x0000000000593d60 : jle 0x593d79 ; salc ; out -0x2e, eax ; jo 0x593cfd ; ret 0x65aa
0x0000000000594d8a : jle 0x594dcd ; insb byte ptr [rdi], dx ; ret
0x000000000059cb8f : jle 0x59cbc8 ; add dl, byte ptr [rsi + rdi*4 - 0x6a73c358] ; ret 0x45da
0x000000000059d8bc : jle 0x59d8c0 ; ret 0x25f3
0x000000000059d8bb : jle 0x59d8c1 ; ret 0x25f3
0x00000000005a0e23 : jle 0x5a0e34 ; pop rbx ; jno 0x5a0dce ; ret
0x00000000005a0fe7 : jle 0x5a0f76 ; adc byte ptr ds:[rcx - 0x18bf7c53], dl ; ret
0x00000000005a5503 : jle 0x5a5528 ; ret
0x00000000005a618a : jle 0x5a612c ; ret 0x54c5
0x00000000005a6189 : jle 0x5a612d ; ret 0x54c5
0x00000000005a99d0 : jle 0x5a9a1a ; push rdi ; ret 0xefcf
0x00000000005a9ad1 : jle 0x5a9af2 ; xchg eax, esp ; or byte ptr [rdx + 0x69], bh ; ret
0x00000000005af7ed : jle 0x5af795 ; ret
0x00000000005af8d5 : jle 0x5af8d5 ; ret
0x00000000005af8d4 : jle 0x5af8d6 ; ret
0x00000000005af8d3 : jle 0x5af8d7 ; ret
0x00000000005b70ac : jle 0x5b707b ; ret 0x5f2d
0x00000000005f40f5 : jle 0x5f40fb ; add al, ch ; ret 0xffe6
0x00000000005f5ca9 : jle 0x5f5c94 ; jmp rsi
0x00000000005f7a69 : jle 0x5f7a55 ; call rcx
0x00000000005f7a68 : jle 0x5f7a56 ; call rcx
0x000000000043cf61 : jmp 0x1005e951
0x00000000005a6228 : jmp 0x1040f57b
0x000000000059c166 : jmp 0x126e323
0x00000000005a7d72 : jmp 0x1643404c
0x00000000004047d5 : jmp 0x19d127
0x0000000000406c29 : jmp 0x19f57b
0x0000000000410ce5 : jmp 0x1a9637
0x000000000043b3c5 : jmp 0x1d3d17
0x00000000005b2aef : jmp 0x20064ed0
0x00000000004e8e9e : jmp 0x21117c6
0x00000000004e8eba : jmp 0x21117e2
0x000000000053a485 : jmp 0x2162dad
0x000000000040c0dc : jmp 0x224a32
0x000000000040c372 : jmp 0x224cc8
0x000000000049b102 : jmp 0x233a54
0x0000000000438e22 : jmp 0x241770
0x0000000000408567 : jmp 0x2a0ebd
0x000000000040f1cd : jmp 0x2a7b23
0x000000000041c661 : jmp 0x2b4fb3
0x00000000005a5227 : jmp 0x2dc2b68c
0x000000000044d45f : jmp 0x399b96c1
0x000000000052b37f : jmp 0x39a975e1
0x000000000052bb2f : jmp 0x39a97d91
0x000000000052ce9f : jmp 0x39a99101
0x000000000041c9ca : jmp 0x3b5320
0x00000000005a5f3c : jmp 0x3d3e120
0x0000000000401ccb : jmp 0x401bc7
0x0000000000408ae4 : jmp 0x408aee
0x0000000000409238 : jmp 0x409197
0x0000000000409237 : jmp 0x409198
0x000000000040b340 : jmp 0x40b39c
0x0000000000412b23 : jmp 0x413155
0x00000000004133a3 : jmp 0x4135d3
0x0000000000414326 : jmp 0x414377
0x00000000004148bc : jmp 0x4149eb
0x00000000004144cf : jmp 0x415231
0x00000000004146e9 : jmp 0x4152fa
0x0000000000419acb : jmp 0x41a449
0x0000000000419b22 : jmp 0x41a5bb
0x000000000041ad5f : jmp 0x41ad24
0x00000000004212b4 : jmp 0x421616
0x0000000000421389 : jmp 0x4216c3
0x000000000042242f : jmp 0x42247c
0x0000000000428fcb : jmp 0x428ff1
0x0000000000429a0c : jmp 0x429a6b
0x0000000000444c49 : jmp 0x444c0e
0x0000000000446fc5 : jmp 0x446ff4
0x0000000000446fc5 : jmp 0x446ff8
0x000000000044b2d4 : jmp 0x44b29a
0x000000000044d3e9 : jmp 0x44d40f
0x000000000044dfe1 : jmp 0x44dfa7
0x000000000044e03a : jmp 0x44e000
0x000000000044e618 : jmp 0x44e5de
0x000000000044e678 : jmp 0x44e63e
0x000000000044f0b5 : jmp 0x44f07b
0x000000000044f11a : jmp 0x44f0e0
0x000000000044f755 : jmp 0x44f71b
0x000000000044f7b8 : jmp 0x44f77e
0x0000000000450328 : jmp 0x4502ee
0x0000000000450362 : jmp 0x450328
0x00000000004505b3 : jmp 0x4505d1
0x000000000045091f : jmp 0x45093d
0x0000000000450a49 : jmp 0x450a0f
0x0000000000450a8b : jmp 0x450a51
0x0000000000450d1e : jmp 0x450d3c
0x0000000000451087 : jmp 0x4510a5
0x00000000004511af : jmp 0x451175
0x00000000004511de : jmp 0x4511a4
0x0000000000460327 : jmp 0x4602ed
0x0000000000461c04 : jmp 0x461bca
0x000000000046b1ec : jmp 0x46b1b1
0x000000000046be1e : jmp 0x46eb12
0x0000000000471684 : jmp 0x471649
0x00000000004735bc : jmp 0x473582
0x0000000000473e35 : jmp 0x473dfb
0x0000000000477d74 : jmp 0x477c04
0x0000000000477ffd : jmp 0x4780d3
0x00000000004781d3 : jmp 0x4781bc
0x0000000000478744 : jmp 0x47875b
0x00000000004782ee : jmp 0x47875e
0x0000000000479ea3 : jmp 0x479eb0
0x000000000047ff2c : jmp 0x47ff89
0x000000000047ff2b : jmp 0x47ff8a
0x000000000042880a : jmp 0x4818fe
0x00000000004850bd : jmp 0x4850d1
0x00000000004856e8 : jmp 0x4856ae
0x000000000048cb9b : jmp 0x48cb61
0x000000000048cb9a : jmp 0x48cb62
0x000000000048cb99 : jmp 0x48cb63
0x000000000048e782 : jmp 0x48e7a7
0x000000000048f78a : jmp 0x48f74f
0x000000000049fd01 : jmp 0x49fde3
0x00000000004a2bcd : jmp 0x4a2bd5
0x00000000004a4667 : jmp 0x4a466f
0x00000000004aa073 : jmp 0x4aa33d
0x00000000004aa2f8 : jmp 0x4aa750
0x00000000004ab085 : jmp 0x4ab04b
0x00000000004ac954 : jmp 0x4ac9a1
0x00000000004b8f0d : jmp 0x4b8ed2
0x00000000004ba391 : jmp 0x4ba375
0x00000000004bb813 : jmp 0x4bb7b5
0x00000000004bb391 : jmp 0x4c7622
0x00000000004d4037 : jmp 0x4d3ff9
0x00000000004dcfcf : jmp 0x4dcff4
0x00000000004e1eb6 : jmp 0x4e1e7b
0x00000000004e1fc1 : jmp 0x4e1f86
0x000000000047bd77 : jmp 0x4e8042
0x00000000004f8298 : jmp 0x4f83dc
0x00000000004fcb71 : jmp 0x4fcb37
0x0000000000505601 : jmp 0x5055c6
0x0000000000505637 : jmp 0x505641
0x0000000000505b3c : jmp 0x505b01
0x000000000050930e : jmp 0x509320
0x000000000050d78d : jmp 0x50d793
0x000000000050d7bd : jmp 0x50d7c3
0x0000000000512ed1 : jmp 0x512e9a
0x00000000005136a1 : jmp 0x513712
0x000000000051ac88 : jmp 0x51ac6c
0x000000000051acf2 : jmp 0x51acce
0x000000000051ad5c : jmp 0x51ad58
0x000000000051adc6 : jmp 0x51adba
0x000000000051ae30 : jmp 0x51ae1c
0x000000000051ae9a : jmp 0x51ae7e
0x000000000051af04 : jmp 0x51aee0
0x000000000051af6e : jmp 0x51af6a
0x000000000051afd7 : jmp 0x51afcb
0x000000000051b041 : jmp 0x51b02d
0x000000000051b0ab : jmp 0x51b08f
0x000000000051b115 : jmp 0x51b0f1
0x000000000051b17f : jmp 0x51b17b
0x00000000004f0b86 : jmp 0x51e07a
0x000000000052fe14 : jmp 0x52fe32
0x0000000000530127 : jmp 0x530145
0x0000000000530495 : jmp 0x5304b3
0x0000000000535323 : jmp 0x535351
0x0000000000535648 : jmp 0x535676
0x00000000005359da : jmp 0x535a08
0x000000000053748b : jmp 0x537454
0x00000000005390fc : jmp 0x539106
0x000000000053e08d : jmp 0x53e0be
0x0000000000541ef5 : jmp 0x53e1b2
0x00000000004f2aa5 : jmp 0x53ed32
0x0000000000542c3c : jmp 0x542c61
0x00000000005490f6 : jmp 0x5490fb
0x0000000000549e6e : jmp 0x549e82
0x000000000054a9d4 : jmp 0x54a99a
0x000000000054ab00 : jmp 0x54ab10
0x000000000054afbd : jmp 0x54ace7
0x000000000054afcc : jmp 0x54afdc
0x000000000054eefb : jmp 0x54eec1
0x000000000054ef28 : jmp 0x54ef43
0x000000000054eebb : jmp 0x54ef47
0x000000000054ffd4 : jmp 0x54ffde
0x000000000055392f : jmp 0x5538f4
0x0000000000554a8b : jmp 0x554a50
0x000000000055ad02 : jmp 0x55ad05
0x000000000055c1cd : jmp 0x55c193
0x00000000005636aa : jmp 0x56366f
0x00000000005636b6 : jmp 0x56367c
0x000000000056370e : jmp 0x5636d3
0x000000000056371a : jmp 0x5636e0
0x0000000000563810 : jmp 0x5637d5
0x000000000056381c : jmp 0x5637e2
0x0000000000563a98 : jmp 0x563a5d
0x0000000000563aa8 : jmp 0x563a6e
0x0000000000563cf1 : jmp 0x563cb6
0x0000000000563d01 : jmp 0x563cc7
0x0000000000564b6b : jmp 0x564b30
0x0000000000564b76 : jmp 0x564b3c
0x00000000005a63c0 : jmp 0x56979a5
0x00000000005783b7 : jmp 0x578422
0x0000000000578aee : jmp 0x578ab4
0x000000000058d59d : jmp 0x58d5ff
0x000000000059caa0 : jmp 0x59ca65
0x00000000005a1a3e : jmp 0x5a1a22
0x00000000005a1de7 : jmp 0x5a1dac
0x00000000005a351b : jmp 0x5a3511
0x00000000005a39d4 : jmp 0x5a3a48
0x00000000005a54bc : jmp 0x5a5481
0x00000000005a7c8e : jmp 0x5a7c54
0x00000000005a886c : jmp 0x5a885c
0x00000000005aa761 : jmp 0x5aa722
0x00000000005afd02 : jmp 0x5afcf5
0x00000000005b18ea : jmp 0x5b18b0
0x00000000005b50a6 : jmp 0x5b506b
0x00000000005e4836 : jmp 0x5e4838
0x00000000005e4886 : jmp 0x5e4888
0x00000000005e48c6 : jmp 0x5e48c8
0x00000000005e48d6 : jmp 0x5e48d8
0x00000000005e4916 : jmp 0x5e4918
0x00000000005e4976 : jmp 0x5e4978
0x00000000005e49f6 : jmp 0x5e49f8
0x00000000005e4a9e : jmp 0x5e4aa0
0x00000000005e4ade : jmp 0x5e4ae0
0x00000000005e4aee : jmp 0x5e4af0
0x00000000005e4b36 : jmp 0x5e4b38
0x00000000005e4b5e : jmp 0x5e4b60
0x00000000005e4b6e : jmp 0x5e4b70
0x00000000005e4be6 : jmp 0x5e4be8
0x00000000005e4c66 : jmp 0x5e4c68
0x00000000005e4ce6 : jmp 0x5e4ce8
0x00000000005e4cf6 : jmp 0x5e4cf8
0x00000000005e4d26 : jmp 0x5e4d28
0x00000000005e4e56 : jmp 0x5e4e58
0x00000000005e4e66 : jmp 0x5e4e68
0x00000000005e4f26 : jmp 0x5e4f28
0x00000000005e4f3e : jmp 0x5e4f40
0x00000000005e4f7e : jmp 0x5e4f80
0x00000000005e4fae : jmp 0x5e4fb0
0x00000000005e4fbe : jmp 0x5e4fc0
0x00000000005e4fde : jmp 0x5e4fe0
0x00000000005e5076 : jmp 0x5e5078
0x00000000005e50b6 : jmp 0x5e50b8
0x00000000005e50c6 : jmp 0x5e50c8
0x00000000005e5106 : jmp 0x5e5108
0x00000000005e5166 : jmp 0x5e5168
0x00000000005e51c6 : jmp 0x5e51c8
0x00000000005e51d6 : jmp 0x5e51d8
0x000000000042feec : jmp 0x5fddc
0x00000000005fe902 : jmp 0x5fe904
0x00000000005fe9da : jmp 0x5fe9dc
0x00000000005fee0a : jmp 0x5fee0c
0x00000000005fee9a : jmp 0x5fee9c
0x00000000005ff2ea : jmp 0x5ff2ec
0x00000000005ff2e9 : jmp 0x5ff2ed
0x00000000005ffa22 : jmp 0x5ffa24
0x00000000005ffab2 : jmp 0x5ffab4
0x00000000005ffd3a : jmp 0x5ffd3c
0x00000000005ffd52 : jmp 0x5ffd54
0x000000000060012a : jmp 0x60012c
0x000000000060015a : jmp 0x60015c
0x0000000000600172 : jmp 0x600174
0x00000000006001c2 : jmp 0x6001c4
0x000000000060031a : jmp 0x60031c
0x0000000000600752 : jmp 0x600754
0x0000000000600a0a : jmp 0x600a0c
0x00000000005a60ca : jmp 0x7a7c6681
0x000000000059d2c9 : jmp 0x96750cf
0x0000000000539d06 : jmp 0x9a97e95
0x0000000000539e46 : jmp 0x9a97fd5
0x00000000004b0405 : jmp 0xdc79f9
0x0000000000421486 : jmp 0xedaf97a
0x0000000000493da6 : jmp 0xffffffff840bc6cb
0x00000000004bbb47 : jmp 0xffffffff840e446c
0x000000000059fee9 : jmp 0xffffffff891ceaa4
0x00000000005a71cf : jmp 0xffffffff8a0375de
0x00000000005b770c : jmp 0xffffffff8a235ff2
0x000000000044761e : jmp 0xffffffff94bfcaf5
0x000000000044773e : jmp 0xffffffff94bfcc15
0x000000000044785e : jmp 0xffffffff94bfcd35
0x000000000044797e : jmp 0xffffffff94bfce55
0x00000000005b6303 : jmp 0xffffffff9b7a259c
0x000000000059587a : jmp 0xffffffff9dce1b2a
0x000000000057e14d : jmp 0xffffffffacf0a3ba
0x0000000000594a9a : jmp 0xffffffffb552edfd
0x000000000045e286 : jmp 0xffffffffc2086ba6
0x0000000000511320 : jmp 0xffffffffc2525c46
0x0000000000523e21 : jmp 0xffffffffc2b44d90
0x0000000000523f22 : jmp 0xffffffffc2b44e91
0x0000000000524023 : jmp 0xffffffffc2b44f92
0x0000000000524124 : jmp 0xffffffffc2b45093
0x0000000000524225 : jmp 0xffffffffc2b45194
0x0000000000524326 : jmp 0xffffffffc2b45295
0x0000000000524427 : jmp 0xffffffffc2b45396
0x0000000000524528 : jmp 0xffffffffc2b45497
0x0000000000524630 : jmp 0xffffffffc2b4559f
0x0000000000524730 : jmp 0xffffffffc2b4569f
0x0000000000524831 : jmp 0xffffffffc2b457a0
0x0000000000524932 : jmp 0xffffffffc2b458a1
0x0000000000524a33 : jmp 0xffffffffc2b459a2
0x0000000000524b34 : jmp 0xffffffffc2b45aa3
0x0000000000524c35 : jmp 0xffffffffc2b45ba4
0x0000000000524d46 : jmp 0xffffffffc2b45cb5
0x0000000000594831 : jmp 0xffffffffc2c24a4c
0x000000000046c94e : jmp 0xffffffffc2d0116f
0x00000000005a5d7c : jmp 0xffffffffc30258ed
0x00000000005a9921 : jmp 0xffffffffc30bd16e
0x0000000000497967 : jmp 0xffffffffc3a47974
0x00000000005b2775 : jmp 0xffffffffc3c3451c
0x0000000000444afd : jmp 0xffffffffc3ce2105
0x0000000000503f61 : jmp 0xffffffffc3d9838a
0x0000000000535dc2 : jmp 0xffffffffc3dde5eb
0x000000000053ecc6 : jmp 0xffffffffc3ddecbe
0x00000000004490ef : jmp 0xffffffffc40962e7
0x00000000005b4bec : jmp 0xffffffffc40f63f1
0x00000000005a6425 : jmp 0xffffffffc426ef86
0x0000000000522121 : jmp 0xffffffffc4415eef
0x00000000005235e4 : jmp 0xffffffffc44173b2
0x0000000000578825 : jmp 0xffffffffc45646ed
0x0000000000491a8d : jmp 0xffffffffe1cc5b9c
0x0000000000491baa : jmp 0xffffffffe1cc5cb9
0x0000000000492c86 : jmp 0xffffffffe1cc6d9d
0x0000000000541ba3 : jmp 0xffffffffec54144c
0x000000000044fdf9 : jmp 0xfffffffff012c31e
0x00000000004502c4 : jmp 0xfffffffff012c7e9
0x000000000053ad98 : jmp 0xfffffffff2bb7087
0x000000000057b54a : jmp 0xfffffffff56fa86c
0x00000000004be5b8 : jmp 0xfffffffff7d5a883
0x0000000000449048 : jmp 0xfffffffff8345a18
0x00000000005b7869 : jmp 0xfffffffffa5e3a72
0x00000000004fcc00 : jmp 0xffffffffffc566f4
0x00000000005e7817 : jmp qword ptr [rax + 0x10000254]
0x00000000005e54c7 : jmp qword ptr [rax - 0x3d]
0x00000000005e43a7 : jmp qword ptr [rax - 0x3ffffe82]
0x0000000000409026 : jmp qword ptr [rax]
0x000000000043eea4 : jmp qword ptr [rbp*8 + 0x575490]
0x000000000042660d : jmp qword ptr [rbx]
0x00000000004321da : jmp qword ptr [rcx*8 + 0x572d50]
0x0000000000409240 : jmp qword ptr [rcx]
0x00000000005a22fd : jmp qword ptr [rdi + 0x791a265a]
0x00000000004195cd : jmp qword ptr [rdi + rdi*4 - 1]
0x0000000000419584 : jmp qword ptr [rdi]
0x000000000059fdef : jmp qword ptr [rdx]
0x000000000051300b : jmp qword ptr [rsi + 0x4d]
0x0000000000506959 : jmp qword ptr [rsi + 0xf]
0x000000000059d8bd : jmp qword ptr [rsi - 0x3e]
0x000000000041a69a : jmp qword ptr [rsi*8 + 0x56c2b0]
0x0000000000478256 : jmp qword ptr [rsi*8 + 0x57c258]
0x000000000057cd95 : jmp qword ptr [rsi]
0x0000000000610d81 : jmp qword ptr es:[rcx]
0x000000000058d628 : jmp qword ptr gs:[rbx]
0x00000000004359a0 : jmp r11
0x00000000004b8d6d : jmp r8
0x00000000004b90a5 : jmp r9
0x00000000005e2827 : jmp rax
0x00000000004359a1 : jmp rbx
0x0000000000417e66 : jmp rcx
0x0000000000564dfd : jmp rdi
0x0000000000402397 : jmp rdx
0x00000000004473e9 : jmp rsi
0x00000000004db10d : jmp rsp
0x0000000000402380 : jne 0x402387 ; pop rbp ; ret
0x0000000000405b3f : jne 0x405b4e ; mov eax, 0x56a3a0 ; ret
0x00000000004068f7 : jne 0x406906 ; mov eax, 0x56a6c8 ; ret
0x00000000004089d7 : jne 0x4089df ; xor eax, eax ; ret
0x0000000000409e17 : jne 0x409e26 ; mov eax, 0x56aad0 ; ret
0x000000000040dbc4 : jne 0x40dbd6 ; movsxd rax, dword ptr [rdi + 0xa8] ; ret
0x00000000004125d5 : jne 0x412592 ; ret
0x0000000000419579 : jne 0x4195d8 ; mov edi, 0x14 ; mov eax, edi ; ret
0x00000000004196a9 : jne 0x4196b9 ; mov eax, dword ptr [rcx + 0x124] ; ret
0x0000000000420e48 : jne 0x420e63 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000428fc6 : jne 0x428fd6 ; mov rcx, r11 ; jmp 0x428ff6
0x000000000042982f : jne 0x42983e ; mov eax, 0x56ef41 ; ret
0x000000000042c434 : jne 0x42c43c ; xor eax, eax ; ret
0x000000000042c464 : jne 0x42c46c ; xor eax, eax ; ret
0x000000000042c726 : jne 0x42c749 ; mov rdi, rax ; mov rsi, r13 ; call r15
0x000000000042cbc0 : jne 0x42cbce ; mov eax, 0xffffffff ; ret
0x000000000042dfb2 : jne 0x42dfcc ; mov eax, 0x56ef41 ; ret
0x000000000042e406 : jne 0x42e40e ; xor eax, eax ; ret
0x0000000000431dda : jne 0x431df7 ; mov eax, 0x573ce8 ; ret
0x0000000000431de8 : jne 0x431e26 ; mov eax, 0x573b42 ; ret
0x0000000000431e8e : jne 0x431eab ; mov eax, 0x573c32 ; ret
0x0000000000431e9c : jne 0x431ecf ; mov eax, 0x573bf0 ; ret
0x0000000000432501 : jne 0x432532 ; mov eax, 0x5731f8 ; ret
0x00000000004324f3 : jne 0x432532 ; mov eax, 0x57322d ; ret
0x00000000004324e5 : jne 0x432532 ; mov eax, 0x573267 ; ret
0x00000000004324d7 : jne 0x432532 ; mov eax, 0x5732a5 ; ret
0x00000000004324b7 : jne 0x432532 ; mov eax, 0x573362 ; ret
0x0000000000432523 : jne 0x432532 ; mov eax, 0x5733eb ; ret
0x000000000043250f : jne 0x432532 ; mov eax, 0x573420 ; ret
0x0000000000432556 : jne 0x432565 ; mov eax, 0x573dc2 ; ret
0x0000000000432564 : jne 0x432573 ; mov eax, 0x573db8 ; ret
0x00000000004325e0 : jne 0x432605 ; mov eax, 0x574065 ; ret
0x00000000004325f6 : jne 0x43262d ; mov eax, 0x573df6 ; ret
0x000000000043262e : jne 0x432641 ; add byte ptr [rax], al ; mov eax, 0x573dfd ; ret
0x000000000043261e : jne 0x432655 ; mov eax, 0x573e04 ; ret
0x0000000000432646 : jne 0x432681 ; mov eax, 0x573e12 ; ret
0x0000000000432908 : jne 0x432929 ; mov eax, 0x574042 ; ret
0x0000000000432e01 : jne 0x432e38 ; mov eax, 0x573e58 ; ret
0x0000000000432e79 : jne 0x432ea0 ; mov eax, 0x573ef2 ; ret
0x0000000000432e29 : jne 0x432eae ; mov eax, 0x573de8 ; ret
0x0000000000432e37 : jne 0x432eae ; mov eax, 0x573e5f ; ret
0x0000000000432e4d : jne 0x432eae ; mov eax, 0x573ee4 ; ret
0x0000000000432e63 : jne 0x432eae ; mov eax, 0x573eeb ; ret
0x0000000000432e9f : jne 0x432eae ; mov eax, 0x573ef9 ; ret
0x0000000000432ed0 : jne 0x432edf ; mov eax, 0x57409e ; ret
0x0000000000432ef0 : jne 0x432eff ; mov eax, 0x5bc384 ; ret
0x0000000000432f3c : jne 0x432f8a ; mov eax, 0x5740bc ; ret
0x0000000000432f4c : jne 0x432fcb ; mov eax, 0x5740aa ; ret
0x0000000000432f86 : jne 0x432fcb ; mov eax, 0x5740bf ; ret
0x0000000000432fbc : jne 0x432fcb ; mov eax, 0x5740c8 ; ret
0x0000000000432fa6 : jne 0x432fcb ; mov eax, 0x5740cb ; ret
0x0000000000432fb1 : jne 0x432fcb ; mov eax, 0x5cc907 ; ret
0x0000000000432fa5 : jne 0x432fcc ; mov eax, 0x5740cb ; ret
0x000000000043307c : jne 0x4330ca ; mov eax, 0x570f42 ; ret
0x000000000043308c : jne 0x43310b ; mov eax, 0x570d6e ; ret
0x00000000004330fc : jne 0x43310b ; mov eax, 0x570fde ; ret
0x00000000004330e6 : jne 0x43310b ; mov eax, 0x570ff9 ; ret
0x00000000004330c6 : jne 0x43310b ; mov eax, 0x571033 ; ret
0x00000000004330f1 : jne 0x43310b ; mov eax, 0x574105 ; ret
0x00000000004330e5 : jne 0x43310c ; mov eax, 0x570ff9 ; ret
0x0000000000433196 : jne 0x4331a5 ; mov eax, 0x587ed8 ; ret
0x00000000004331a4 : jne 0x4331b3 ; mov eax, 0x57412b ; ret
0x00000000004336f0 : jne 0x433706 ; mov eax, 0x574420 ; ret
0x0000000000433705 : jne 0x433714 ; mov eax, 0x574338 ; ret
0x000000000043610c : jne 0x43613e ; mov eax, 0x1b ; ret
0x00000000004360f6 : jne 0x43614c ; mov eax, 0x13 ; ret
0x000000000043614b : jne 0x43615a ; mov eax, 0x17 ; ret
0x000000000043613d : jne 0x43615a ; mov eax, 0x1c ; ret
0x000000000043c4b0 : jne 0x43c4c6 ; mov eax, 0x574f40 ; ret
0x000000000043c4c5 : jne 0x43c4d4 ; mov eax, 0x574e58 ; ret
0x000000000043c8e0 : jne 0x43c8f6 ; mov eax, 0x575270 ; ret
0x000000000043c8f5 : jne 0x43c904 ; mov eax, 0x575188 ; ret
0x0000000000443b33 : jne 0x443b3b ; mov eax, ecx ; ret
0x0000000000443f08 : jne 0x443f17 ; imul eax, eax, 0x3c ; add edx, eax ; jmp 0x443f22
0x0000000000446ea2 : jne 0x446ea8 ; ret
0x0000000000446f00 : jne 0x446ec9 ; mov dword ptr [rdx + 0x75], ebp ; ret 0x6a89
0x0000000000446eff : jne 0x446eca ; mov dword ptr [rdx + 0x75], ebp ; ret 0x6a89
0x0000000000452597 : jne 0x452527 ; movups xmmword ptr [r9], xmm3 ; ret
0x000000000045655c : jne 0x456567 ; add eax, 3 ; ret
0x0000000000458263 : jne 0x4582c1 ; add byte ptr [rcx - 0x48], al ; ret 1
0x0000000000461c03 : jne 0x461bf2 ; ret
0x000000000046b004 : jne 0x46b014 ; mov rax, qword ptr [rdi] ; mov rax, qword ptr [rax] ; ret
0x000000000046b1ea : jne 0x46b1d3 ; jmp 0x46b1b3
0x0000000000477ffb : jne 0x47802e ; jmp 0x4780d5
0x0000000000479f8e : jne 0x479f85 ; sub rax, rdi ; ret
0x0000000000481947 : jne 0x48192c ; add al, 0 ; xor eax, eax ; ret
0x000000000048489f : jne 0x4848ae ; mov rax, qword ptr [rbx + 8] ; pop rbx ; ret
0x000000000048e9af : jne 0x48e9bb ; add byte ptr [rax - 0x77], cl ; ret
0x000000000048f7d2 : jne 0x48f7c3 ; pop rbx ; ret
0x000000000048fcec : jne 0x48fce9 ; mov rdi, r14 ; mov rsi, r14 ; call r12
0x000000000049c9d7 : jne 0x49c9e6 ; movsxd rax, dword ptr [rdi + 0x14] ; pop rdx ; ret
0x00000000004b4308 : jne 0x4b4319 ; mov eax, 0x2aa ; pop rbx ; ret
0x00000000004b6cee : jne 0x4b6cd7 ; mov eax, 0x51 ; ret
0x00000000004b8d98 : jne 0x4b8d82 ; ret
0x00000000004b8ddb : jne 0x4b8dc9 ; mov r14, qword ptr [rax] ; mov rdi, qword ptr [rax + 8] ; call rdx
0x00000000004b8e3b : jne 0x4b8e29 ; mov r14, qword ptr [rax] ; mov rdi, qword ptr [rax + 8] ; call rcx
0x00000000004b8f0b : jne 0x4b8eef ; jmp 0x4b8ed4
0x00000000004cb1cf : jne 0x4cb1c3 ; pop rax ; ret
0x00000000004cc211 : jne 0x4cc1f7 ; pop rbx ; pop r14 ; pop r15 ; ret
0x00000000004cc296 : jne 0x4cc286 ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004cc306 : jne 0x4cc2f9 ; add rsp, 8 ; pop rbx ; pop r14 ; ret
0x00000000004d022a : jne 0x4d024d ; mov eax, 5 ; pop rbx ; ret
0x00000000004d025a : jne 0x4d0272 ; mov eax, 0x1a9 ; pop rbx ; ret
0x00000000004d0270 : jne 0x4d0281 ; mov eax, 0x1ad ; pop rbx ; ret
0x00000000004d0216 : jne 0x4d0281 ; mov eax, 0x1e ; pop rbx ; ret
0x00000000004d07da : jne 0x4d07ea ; mov eax, dword ptr [rcx + 4] ; sub eax, dword ptr [rdx + 4] ; ret
0x00000000004d08f4 : jne 0x4d0904 ; mov eax, dword ptr [rdi + 4] ; sub eax, dword ptr [rsi + 4] ; ret
0x00000000004d3c74 : jne 0x4d3cd9 ; call r12
0x00000000004d4090 : jne 0x4d40f8 ; mov r12, rdx ; call r12
0x00000000004d4494 : jne 0x4d44fc ; mov r14, rcx ; call r14
0x00000000004d4518 : jne 0x4d457d ; call r8
0x00000000004d480c : jne 0x4d4871 ; call r8
0x00000000004d8ecc : jne 0x4d8ea2 ; ret
0x00000000004d8f05 : jne 0x4d8ee2 ; ret
0x00000000004d8f9e : jne 0x4d8f22 ; ret
0x00000000004e8468 : jne 0x4e847a ; mov byte ptr [rip + 0x346177], 1 ; ret
0x00000000004e8c2a : jne 0x4e8c12 ; ret
0x00000000004eac9c : jne 0x4eacac ; mov eax, dword ptr [rcx + 8] ; sub eax, dword ptr [rdx + 8] ; ret
0x00000000004ead0c : jne 0x4ead1c ; mov eax, dword ptr [rcx + 8] ; sub eax, dword ptr [rdx + 8] ; ret
0x00000000004ff2db : jne 0x4ff30b ; pop r9 ; jmp rax
0x0000000000500a81 : jne 0x500a47 ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000500ad9 : jne 0x500ad2 ; ret
0x0000000000503fec : jne 0x503fd6 ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000506c83 : jne 0x506c8a ; ret
0x000000000051099d : jne 0x510a0d ; mov dword ptr [rbx], 0x83480200 ; ret
0x0000000000510d22 : jne 0x510d37 ; mov eax, 0x36 ; ret
0x0000000000510d36 : jne 0x510d45 ; mov eax, 0x34 ; ret
0x000000000051279a : jne 0x512786 ; vzeroupper ; ret
0x0000000000513c2a : jne 0x513b67 ; ret
0x0000000000513d17 : jne 0x513c67 ; ret
0x000000000051419a : jne 0x514183 ; ret
0x00000000005141ce : jne 0x5141b3 ; ret
0x00000000005178eb : jne 0x5177c8 ; pop rbx ; pop rbp ; ret
0x0000000000534580 : jne 0x5345c1 ; and al, 0x10 ; add esp, eax ; ret 0x7d
0x00000000005397b3 : jne 0x5397a8 ; mov dword ptr [rdi], r11d ; mov rax, rsi ; ret
0x0000000000539b23 : jne 0x539b15 ; mov dword ptr [rdi], r8d ; ret
0x000000000053f725 : jne 0x53f734 ; mov eax, dword ptr [rsi + 0x28] ; mov dword ptr [rdi], eax ; ret
0x0000000000540bd3 : jne 0x540b99 ; add rsp, 8 ; pop rbx ; pop r14 ; ret
0x0000000000540ff3 : jne 0x540fb9 ; add rsp, 8 ; pop rbx ; pop r14 ; ret
0x00000000005412b3 : jne 0x541279 ; add rsp, 8 ; pop rbx ; pop r14 ; ret
0x0000000000541793 : jne 0x541759 ; add rsp, 8 ; pop rbx ; pop r14 ; ret
0x00000000005485c9 : jne 0x5485f8 ; mov eax, dword ptr [rdi + 0x28] ; and eax, 1 ; pop rdx ; ret
0x0000000000548881 : jne 0x54888d ; mov rax, qword ptr [rdi + 0x20] ; ret
0x000000000054889c : jne 0x5488a8 ; mov rax, qword ptr [rdi + 0x28] ; ret
0x000000000054a527 : jne 0x54a59a ; add dword ptr [rax], eax ; mov rdi, rax ; call 0x456829
0x00000000005515a6 : jne 0x5515af ; xor eax, eax ; pop rbx ; ret
0x0000000000551702 : jne 0x55170e ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000005517d9 : jne 0x5517be ; ret
0x0000000000551897 : jne 0x55187c ; ret
0x0000000000551c27 : jne 0x551c2f ; xor eax, eax ; ret
0x000000000055494a : jne 0x554918 ; mov eax, 1 ; pop rbx ; ret
0x000000000055b641 : jne 0x55b634 ; xor eax, eax ; ret
0x000000000056491e : jne 0x5648e9 ; mov r10, r9 ; neg r9 ; ret
0x0000000000564aed : jne 0x564adc ; ret
0x0000000000564b83 : jne 0x564b43 ; ret
0x0000000000564c6b : jne 0x564c6a ; mov eax, r8d ; cdqe ; ret
0x0000000000564e39 : jne 0x564e32 ; ret
0x0000000000564e67 : jne 0x564e5e ; cmp rsi, 0 ; jne 0x564e38 ; ret
0x0000000000565139 : jne 0x56514c ; add rsp, 8 ; pop rbx ; pop r14 ; ret
0x000000000057d399 : jne 0x57d32f ; ret 0x5669
0x000000000058dd77 : jne 0x58dd9c ; stc ; ret 0x5ca4
0x0000000000593bf6 : jne 0x593ba2 ; ret 0x325c
0x0000000000594aa1 : jne 0x594a3d ; jmp qword ptr [rbx]
0x0000000000599a78 : jne 0x599ada ; ret
0x000000000059d8ff : jne 0x59d904 ; and eax, 0x2a73ddc9 ; ret
0x000000000059dad4 : jne 0x59daba ; xlatb ; mov dword ptr [rax - 0x55], eax ; ret 0x435d
0x000000000059dad3 : jne 0x59dabb ; xlatb ; mov dword ptr [rax - 0x55], eax ; ret 0x435d
0x000000000059df34 : jne 0x59df69 ; ret 0xc109
0x000000000059df33 : jne 0x59df6a ; ret 0xc109
0x000000000059e55e : jne 0x59e588 ; fisub word ptr [rbp + 0x402093b8] ; ret 0xa6f2
0x00000000005a2926 : jne 0x5a28c9 ; jb 0x5a292f ; ret 0x4a9d
0x00000000005a385d : jne 0x5a380e ; loop 0x5a37fc ; jmp qword ptr [rbx]
0x00000000005a3fe1 : jne 0x5a3f8d ; movsb byte ptr [rdi], byte ptr [rsi] ; xchg eax, ebx ; and al, 0xffffffffffffffa5 ; ret 0x33c5
0x00000000005a6720 : jne 0x5a676d ; xchg eax, esi ; test eax, 0x68206634 ; call rax
0x00000000005a8520 : jne 0x5a8563 ; ret
0x00000000005ad951 : jne 0x5ad908 ; ret
0x00000000005b18f6 : jne 0x5b1932 ; ret 0xd554
0x00000000005b365a : jne 0x5b3667 ; ret
0x00000000005b5aea : jne 0x5b5aaa ; or al, 0x43 ; ret 0x1595
0x00000000005b5ae9 : jne 0x5b5aab ; or al, 0x43 ; ret 0x1595
0x00000000005b6320 : jne 0x5b6339 ; push 0x180b280f ; jae 0x5b639e ; ret 0xeeb6
0x00000000005e5ded : jne 0x5e5dde ; jmp rax
0x00000000005e5dfd : jne 0x5e5dee ; call qword ptr [rax]
0x00000000005e5dfc : jne 0x5e5def ; call qword ptr [rax]
0x00000000005e7a15 : jne 0x5e7a09 ; jmp qword ptr [rax]
0x000000000060374d : jne 0x603756 ; add byte ptr [rax - 0xf], ah ; in al, dx ; call rdi
0x000000000060374c : jne 0x603757 ; add byte ptr [rax - 0xf], ah ; in al, dx ; call rdi
0x0000000000608d09 : jne 0x608cfb ; jmp qword ptr [rdi]
0x000000000044ca91 : jno 0x44ca93 ; ret 0xf101
0x000000000044ca90 : jno 0x44ca94 ; ret 0xf101
0x000000000046a9a7 : jno 0x46a9bb ; cmp al, 0 ; ret
0x000000000048edb5 : jno 0x48edc1 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000048f243 : jno 0x48f20f ; cmp dword ptr [rax], eax ; ret
0x0000000000493c03 : jno 0x493c07 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000493c39 : jno 0x493c3d ; dec dword ptr [rax - 0x77] ; ret
0x000000000049699b : jno 0x49699b ; add al, 0 ; pop rbx ; ret
0x00000000004c2e4b : jno 0x4c2e66 ; cli ; dec dword ptr [rax - 0x77] ; ret
0x00000000004c3926 : jno 0x4c3927 ; dec dword ptr [rax - 0x7f] ; ret
0x00000000004e6433 : jno 0x4e63bf ; xor al, 0 ; test rax, rax ; je 0x4e6447 ; jmp rax
0x00000000004e6653 : jno 0x4e66d8 ; xor al, 0 ; ret
0x00000000005385eb : jno 0x5385cc ; cli ; dec dword ptr [rax - 0x77] ; ret
0x0000000000552ab9 : jno 0x552abe ; dec dword ptr [rax - 0x77] ; ret
0x00000000005781cc : jno 0x57815e ; stosb byte ptr [rdi], al ; in al, dx ; call qword ptr [rdi]
0x0000000000579b71 : jno 0x579b15 ; adc byte ptr [rbp - 0x66d9a446], bh ; ret
0x0000000000579d71 : jno 0x579d15 ; adc byte ptr [rbp - 0x66d9a446], bh ; ret
0x000000000057a071 : jno 0x57a015 ; adc byte ptr [rbp - 0x66d9a446], bh ; ret
0x000000000057d31c : jno 0x57d38f ; ret
0x000000000057d5b8 : jno 0x57d5e3 ; lodsb al, byte ptr [rsi] ; int1 ; ret 0x8239
0x0000000000595963 : jno 0x59598a ; adc byte ptr [rbx - 0x74], al ; ret 0xc095
0x0000000000596a9d : jno 0x596b18 ; cmp dword ptr [rax], eax ; lahf ; and al, 0xffffffffffffffd8 ; xor al, 0x38 ; ret 0xa070
0x00000000005983b4 : jno 0x598368 ; push rsp ; mov word ptr [rip - 0x60ae2af2], es ; ret 0xe1a9
0x000000000059db79 : jno 0x59dbc5 ; jno 0x59dbd8 ; xlatb ; ret 0x32ec
0x000000000059db7c : jno 0x59dbd5 ; xlatb ; ret 0x32ec
0x000000000059db7b : jno 0x59dbd6 ; xlatb ; ret 0x32ec
0x000000000059db7a : jno 0x59dbd7 ; xlatb ; ret 0x32ec
0x00000000005a0e26 : jno 0x5a0dcb ; ret
0x00000000005a2b69 : jno 0x5a2b5c ; stc ; ret
0x00000000005a6423 : jno 0x5a63ba ; jmp 0xffffffffc426ef88
0x00000000005a7a84 : jno 0x5a7a63 ; and edi, edx ; wait ; call rsp
0x00000000005a8bb9 : jno 0x5a8c39 ; adc bl, byte ptr [rbx] ; sbb al, 0x1e ; ret
0x00000000005a9199 : jno 0x5a9198 ; xchg eax, edi ; ret
0x00000000005a9198 : jno 0x5a9199 ; xchg eax, edi ; ret
0x00000000005ade66 : jno 0x5aded8 ; call qword ptr [rax]
0x00000000005b5c12 : jno 0x5b5ba0 ; ret 0xe440
0x00000000005d6a51 : jno 0x5d6a9c ; xor dword ptr [rax], edx ; adc dword ptr [rcx], eax ; adc esp, eax ; ret
0x00000000005ec0c1 : jno 0x5ec0cc ; add al, dh ; jo 0x5ec0c5 ; jmp qword ptr [rax]
0x00000000005ec105 : jno 0x5ec101 ; jmp rax
0x000000000061338d : jno 0x613397 ; add byte ptr [rax - 0x50], dh ; jmp qword ptr [rdx]
0x0000000000431eac : jnp 0x431ebd ; add byte ptr [rax], al ; mov eax, 0x573c52 ; ret
0x000000000043ed8c : jnp 0x43ed9f ; mov esi, dword ptr [rbx] ; mov rdx, rax ; call 0x46b099
0x000000000044fdf7 : jnp 0x44fdf2 ; jmp 0xfffffffff012c320
0x00000000004502c2 : jnp 0x4502bd ; jmp 0xfffffffff012c7eb
0x00000000004505b1 : jnp 0x4505a8 ; jmp 0x4505d3
0x00000000004505b0 : jnp 0x4505a9 ; jmp 0x4505d4
0x000000000045091d : jnp 0x450914 ; jmp 0x45093f
0x000000000045091c : jnp 0x450915 ; jmp 0x450940
0x0000000000450d1c : jnp 0x450d13 ; jmp 0x450d3e
0x0000000000450d1b : jnp 0x450d14 ; jmp 0x450d3f
0x0000000000451085 : jnp 0x45107c ; jmp 0x4510a7
0x0000000000451084 : jnp 0x45107d ; jmp 0x4510a8
0x0000000000474554 : jnp 0x4745a9 ; ret
0x0000000000484ef1 : jnp 0x484f6e ; add al, 0 ; xor eax, eax ; pop rdx ; ret
0x0000000000494411 : jnp 0x4943d5 ; cli ; dec dword ptr [rax - 0x77] ; ret
0x00000000004971d8 : jnp 0x4971f3 ; add byte ptr [rbp + rax + 0x48], dh ; mov eax, ebx ; pop rbx ; ret
0x0000000000497238 : jnp 0x497253 ; add byte ptr [rbp + rax + 0x48], dh ; mov eax, ebx ; pop rbx ; ret
0x0000000000497298 : jnp 0x4972b3 ; add byte ptr [rbp + rax + 0x48], dh ; mov eax, ebx ; pop rbx ; ret
0x00000000004b1e2f : jnp 0x4b1e5a ; call 0x46ab49
0x00000000004b1e5f : jnp 0x4b1e8a ; call 0x46ab09
0x00000000004c3f3f : jnp 0x4c3f6a ; call 0x46ab09
0x00000000004d0538 : jnp 0x4d0540 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004d3ce4 : jnp 0x4d3d2d ; lea rsi, qword ptr [rbx + 0x60] ; call r12
0x00000000004d412e : jnp 0x4d4177 ; lea rsi, qword ptr [rbx + 0x60] ; call r8
0x00000000004dbc87 : jnp 0x4dbc8f ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004e094f : jnp 0x4e09c2 ; call 0x4972b9
0x00000000004e84f9 : jnp 0x4e8505 ; call qword ptr [rax]
0x00000000004ea138 : jnp 0x4ea130 ; dec dword ptr [rax - 0x77] ; ret
0x00000000004fa3f3 : jnp 0x4fa45e ; call 0x497619
0x00000000004fd3cc : jnp 0x4fd3ea ; call 0x4e96d4
0x00000000004fd493 : jnp 0x4fd4b1 ; call 0x4e96d4
0x00000000005222b6 : jnp 0x5222ad ; add ah, byte ptr [rcx] ; ret 0x7ec5
0x00000000005223a3 : jnp 0x52239a ; add ah, byte ptr [rcx] ; ret 0x144
0x000000000052248c : jnp 0x522483 ; add ah, byte ptr [rcx] ; ret 0x144
0x0000000000522576 : jnp 0x52256d ; add dh, byte ptr [rcx] ; ret 0xc1c4
0x0000000000522651 : jnp 0x522648 ; add dh, byte ptr [rcx] ; ret 0x144
0x0000000000522809 : jnp 0x522800 ; add dh, byte ptr [rcx] ; ret 0x144
0x0000000000522905 : jnp 0x5228fc ; add dh, byte ptr [rcx] ; ret 0x144
0x0000000000522a08 : jnp 0x5229ff ; add dh, byte ptr [rcx] ; ret 0xbdc5
0x0000000000522b07 : jnp 0x522afe ; add dh, byte ptr [rcx] ; ret 0x41c4
0x0000000000522bbf : jnp 0x522bb6 ; add dh, byte ptr [rcx] ; ret 0x144
0x0000000000522c62 : jnp 0x522c59 ; add dh, byte ptr [rcx] ; ret 0x144
0x0000000000522cfe : jnp 0x522cf5 ; add dh, byte ptr [rcx] ; ret 0x144
0x0000000000522e8a : jnp 0x522e81 ; add ah, byte ptr [rcx] ; ret 0x144
0x0000000000522f3e : jnp 0x522f35 ; add ah, byte ptr [rcx] ; ret 0x144
0x0000000000522ff2 : jnp 0x522fe9 ; add ah, byte ptr [rcx] ; ret 0x144
0x000000000052309e : jnp 0x523095 ; add dh, byte ptr [rcx] ; ret 0x144
0x0000000000523145 : jnp 0x52313c ; add dh, byte ptr [rcx] ; ret 0x144
0x00000000005231f2 : jnp 0x5231e9 ; add dh, byte ptr [rcx] ; ret 0x144
0x000000000052329d : jnp 0x523294 ; add dh, byte ptr [rcx] ; ret 0x144
0x000000000052336b : jnp 0x523362 ; add dh, byte ptr [rcx] ; ret 0x144
0x0000000000523446 : jnp 0x52343d ; add dh, byte ptr [rcx] ; ret 0x144
0x000000000052352c : jnp 0x523523 ; add dh, byte ptr [rcx] ; ret 0xc1c4
0x0000000000523831 : jnp 0x523828 ; add dh, byte ptr [rcx] ; ret 0x144
0x000000000052fe12 : jnp 0x52fe09 ; jmp 0x52fe34
0x000000000052fe11 : jnp 0x52fe0a ; jmp 0x52fe35
0x0000000000530125 : jnp 0x53011c ; jmp 0x530147
0x0000000000530124 : jnp 0x53011d ; jmp 0x530148
0x0000000000530493 : jnp 0x53048a ; jmp 0x5304b5
0x0000000000530492 : jnp 0x53048b ; jmp 0x5304b6
0x0000000000542851 : jnp 0x5428c8 ; cli ; dec dword ptr [rax - 0x77] ; ret
0x0000000000545315 : jnp 0x545323 ; call 0x4415f4
0x00000000005472e1 : jnp 0x5472d5 ; stc ; dec dword ptr [rax - 0x77] ; ret
0x000000000054a1bf : jnp 0x54a1b1 ; dec dword ptr [rax - 0x77] ; ret
0x000000000054d508 : jnp 0x54d518 ; xor esi, esi ; call 0x4e97d6
0x00000000005564aa : jnp 0x55648c ; imul byte ptr [rbx + rsi*4 + 0x2fc2c221] ; ret 0xed5e
0x00000000005678d4 : jnp 0x5678d0 ; inc dword ptr [rbp + 0x5b027ec0] ; ret
0x00000000005678fb : jnp 0x56791e ; test rdi, rdi ; je 0x567910 ; call 0x4f3b19
0x0000000000577dff : jnp 0x577dba ; pop rcx ; pop rdx ; ret 0xd539
0x0000000000578d29 : jnp 0x578d1f ; ret
0x000000000057d7d2 : jnp 0x57d830 ; cmpsd dword ptr [rsi], dword ptr [rdi] ; in al, -0x16 ; add ah, ch ; ret 0xce5
0x000000000057dc8e : jnp 0x57dc34 ; add byte ptr [rdx], -0x24 ; ret
0x00000000005937f7 : jnp 0x59379f ; ret 0x9591
0x0000000000596b3b : jnp 0x596af5 ; jmp rdi
0x0000000000597d2a : jnp 0x597d33 ; jbe 0x597d24 ; ret
0x000000000059fffb : jnp 0x5a0029 ; mov es, word ptr [rbp - 0x5f] ; push rsi ; ret 0xe039
0x00000000005a30e2 : jnp 0x5a30ff ; ret
0x00000000005a8f59 : jnp 0x5a8f29 ; push rcx ; pop rdx ; ret 0xd378
0x00000000005a8ffb : jnp 0x5a9002 ; nop ; jo 0x5a8f98 ; ret 0xd298
0x00000000005aa1ca : jnp 0x5aa1fa ; ret
0x00000000005ab531 : jnp 0x5ab4bb ; and edi, dword ptr [rax + 0x502b7c77] ; jmp qword ptr [rdi]
0x00000000005abc43 : jnp 0x5abc22 ; ret 0x9f85
0x00000000005af7e8 : jnp 0x5af839 ; mov esi, 0xa47ecd67 ; ret
0x00000000005b0768 : jnp 0x5b0775 ; ret
0x00000000005b0ad4 : jnp 0x5b0b44 ; ret
0x00000000005e880d : jnp 0x5e8802 ; jmp qword ptr [rax]
0x0000000000613d35 : jnp 0x613d3f ; add byte ptr [rax - 0x25], ch ; call rsp
0x000000000041955a : jns 0x4194e1 ; call qword ptr [rbx]
0x000000000043292a : jns 0x43293a ; add byte ptr [rax], al ; mov eax, 0x574049 ; ret
0x0000000000433c24 : jns 0x433c29 ; dec dword ptr [rax - 0x77] ; ret
0x000000000044ca1f : jns 0x44ca21 ; ret 0xf301
0x000000000044ca1e : jns 0x44ca22 ; ret 0xf301
0x0000000000479d63 : jns 0x479dea ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000486663 : jns 0x48669c ; std ; dec dword ptr [rax - 0x77] ; ret
0x000000000049bc42 : jns 0x49bc4e ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004ae8fe : jns 0x4ae8a1 ; pop rax ; add byte ptr [rcx - 0x48], al ; ret
0x00000000004b8746 : jns 0x4b8758 ; mov rax, qword ptr [rdi + 0xe8] ; ret
0x00000000004d5f1b : jns 0x4d5f63 ; ret 0xc400
0x00000000004d5f9b : jns 0x4d5fe3 ; ret 0xc400
0x00000000004e6423 : jns 0x4e63af ; xor al, 0 ; test rax, rax ; je 0x4e6437 ; jmp rax
0x0000000000505848 : jns 0x505833 ; pop rbx ; ret
0x000000000050e61e : jns 0x50e622 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000526eac : jns 0x526f20 ; add esp, eax ; ret
0x0000000000526f7a : jns 0x526fef ; add al, -0x3c ; ret
0x000000000052704b : jns 0x5270c0 ; or r12b, al ; ret
0x000000000052711c : jns 0x527191 ; or al, 0xffffffc4 ; ret
0x00000000005271ed : jns 0x527262 ; adc r12b, al ; ret
0x00000000005272be : jns 0x527333 ; adc al, -0x3c ; ret
0x000000000052738f : jns 0x527404 ; sbb r12b, al ; ret
0x0000000000527460 : jns 0x5274d5 ; sbb al, -0x3c ; ret
0x0000000000527538 : jns 0x5275ad ; and r12b, al ; ret
0x0000000000527608 : jns 0x52767d ; and al, 0xffffffc4 ; ret
0x00000000005276d9 : jns 0x52774e ; sub r12b, al ; ret
0x00000000005277aa : jns 0x52781f ; sub al, -0x3c ; ret
0x000000000052787b : jns 0x5278f0 ; xor r12b, al ; ret
0x000000000052794c : jns 0x5279c1 ; xor al, 0xffffffc4 ; ret
0x0000000000527a1d : jns 0x527a92 ; cmp r12b, al ; ret
0x0000000000528ff8 : jns 0x52906c ; adc esp, eax ; ret
0x00000000005290e9 : jns 0x52915e ; push rcx ; add al, -0x3c ; ret
0x00000000005291df : jns 0x529254 ; push rcx ; or ah, al ; ret
0x00000000005292d5 : jns 0x52934a ; push rcx ; or al, 0xffffffffffffffc4 ; ret
0x00000000005293cb : jns 0x529440 ; push rcx ; adc ah, al ; ret
0x00000000005294c0 : jns 0x529535 ; push rcx ; adc al, -0x3c ; ret
0x00000000005295b6 : jns 0x52962b ; push rcx ; sbb ah, al ; ret
0x00000000005296ac : jns 0x529721 ; push rcx ; sbb al, -0x3c ; ret
0x00000000005297a9 : jns 0x52981e ; push rcx ; and ah, al ; ret
0x000000000052989f : jns 0x529914 ; push rcx ; and al, 0xffffffffffffffc4 ; ret
0x0000000000529995 : jns 0x529a0a ; push rcx ; sub ah, al ; ret
0x0000000000529a8b : jns 0x529b00 ; push rcx ; sub al, -0x3c ; ret
0x0000000000529b81 : jns 0x529bf6 ; push rcx ; xor ah, al ; ret
0x0000000000529c76 : jns 0x529ceb ; push rcx ; xor al, 0xffffffffffffffc4 ; ret
0x0000000000529d6c : jns 0x529de1 ; push rcx ; cmp ah, al ; ret
0x000000000053240f : jns 0x532413 ; ret
0x00000000005324fc : jns 0x5324d4 ; ret
0x000000000053258c : jns 0x532564 ; ret
0x000000000053338f : jns 0x533393 ; ret
0x0000000000533471 : jns 0x533449 ; ret
0x000000000053355d : jns 0x533535 ; ret
0x00000000005426e3 : jns 0x54269f ; hlt ; dec dword ptr [rax - 0x77] ; ret 0xdb31
0x00000000005515bd : jns 0x5515c4 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005530fd : jns 0x55308a ; ret 0x675
0x000000000055b663 : jns 0x55b667 ; sub al, 0 ; ret
0x000000000057ca89 : jns 0x57cab0 ; jmp rdx
0x000000000059507c : jns 0x595024 ; mov eax, 0x2e34d45f ; idiv dword ptr [rdx] ; ret
0x00000000005974ed : jns 0x59755e ; loopne 0x597561 ; ret 0xda27
0x00000000005974ec : jns 0x59755f ; loopne 0x597562 ; ret 0xda27
0x000000000059867b : jns 0x598611 ; jae 0x598644 ; pop rdi ; ret
0x000000000059b3c4 : jns 0x59b362 ; outsd dx, dword ptr [rsi] ; leave ; ret 0xe867
0x000000000059b3c3 : jns 0x59b363 ; outsd dx, dword ptr [rsi] ; leave ; ret 0xe867
0x000000000059c2fa : jns 0x59c295 ; hlt ; stosb byte ptr [rdi], al ; mov esi, 0x76a27f2 ; ret
0x00000000005a2302 : jns 0x5a22bf ; ret
0x00000000005b08b1 : jns 0x5b0847 ; mov al, -0x22 ; add dword ptr [rdx - 0xd], 0x16 ; ret
0x00000000005b08b0 : jns 0x5b0848 ; mov al, -0x22 ; add dword ptr [rdx - 0xd], 0x16 ; ret
0x00000000005b2a11 : jns 0x5b2a45 ; ret 0x958e
0x00000000005b3d76 : jns 0x5b3d7b ; ret
0x00000000005b5294 : jns 0x5b5226 ; ret
0x00000000005e18cd : jns 0x5e18b4 ; call qword ptr [rax]
0x00000000005e4ce5 : jns 0x5e4cd4 ; call rax
0x00000000005ea6dd : jns 0x5ea6d7 ; call rax
0x0000000000615d51 : jns 0x615d49 ; jmp qword ptr [rdi]
0x000000000040b718 : jo 0x40b69f ; ret 0x4cfe
0x0000000000411e32 : jo 0x411e81 ; mov esi, ebx ; call r14
0x000000000041a65b : jo 0x41a6c6 ; xor eax, eax ; pop rbx ; pop r14 ; pop r15 ; ret
0x000000000042a6fc : jo 0x42a721 ; or al, byte ptr [rax] ; xor eax, eax ; pop rdx ; ret
0x000000000042c2a0 : jo 0x42c2fe ; ret
0x000000000042c29f : jo 0x42c2ff ; ret
0x000000000042da4c : jo 0x42da9e ; add esp, 8 ; pop rbx ; pop r14 ; ret
0x000000000042e343 : jo 0x42e34a ; add byte ptr [rax], al ; ret
0x00000000004329d0 : jo 0x432a08 ; push rdi ; add byte ptr [rax + 0x573fcb], bh ; ret
0x0000000000432c33 : jo 0x432c40 ; add byte ptr [rax], al ; mov eax, 0x574011 ; ret
0x00000000004355d9 : jo 0x43563b ; pop r14 ; pop rbp ; ret
0x000000000043e024 : jo 0x43e011 ; xchg eax, esi ; ret
0x000000000043ea0c : jo 0x43ea46 ; test byte ptr [rcx + rcx*4 - 0x11], 0x41 ; call rdi
0x0000000000440707 : jo 0x44071f ; mov dh, 0x55 ; add dword ptr [rax + 9], ecx ; ret 0x8948
0x000000000044d588 : jo 0x44d518 ; ret 0x51a3
0x000000000044d598 : jo 0x44d528 ; ret 0x51a3
0x0000000000479abe : jo 0x479a8e ; push rdi ; add bl, al ; xor eax, eax ; ret
0x000000000047df4a : jo 0x47df8f ; call rsp
0x0000000000484f7f : jo 0x484fb1 ; mov eax, 1 ; pop rdx ; ret
0x00000000004881e5 : jo 0x4881f7 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000493c77 : jo 0x493c7b ; dec dword ptr [rax - 0x77] ; ret
0x0000000000493cad : jo 0x493cb1 ; dec dword ptr [rax - 0x77] ; ret
0x00000000004b90fc : jo 0x4b9137 ; add dword ptr [rax], eax ; xor eax, eax ; pop rdx ; ret
0x00000000004ca8f3 : jo 0x4ca8b3 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000004cc789 : jo 0x4cc796 ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; ret
0x00000000004ce3da : jo 0x4ce43d ; pop r14 ; pop r15 ; ret
0x00000000004cf8dd : jo 0x4cf89d ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000004cf8dc : jo 0x4cf89e ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000004d8f8a : jo 0x4d8f97 ; ret 0x9489
0x00000000004e366b : jo 0x4e36be ; test eax, eax ; je 0x4e36c0 ; mov rsi, rbx ; call rax
0x00000000004ea5f5 : jo 0x4ea5f1 ; dec dword ptr [rax - 0x77] ; ret
0x00000000004ef14c : jo 0x4ef0fa ; idiv bh ; pop rbx ; ret
0x00000000004f9d3f : jo 0x4f9d3c ; dec dword ptr [rax - 0x77] ; ret
0x00000000004f9d16 : jo 0x4f9d79 ; pop r14 ; pop r15 ; ret
0x0000000000500843 : jo 0x500892 ; mov dword ptr [rdi + 0x78], edx ; ret
0x000000000050ee9f : jo 0x50eea3 ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000052b840 : jo 0x52b7d0 ; ret 0x8b70
0x000000000052b844 : jo 0x52b7d4 ; ret 0x8b70
0x000000000052b848 : jo 0x52b7d8 ; ret 0x8b70
0x000000000052b84c : jo 0x52b7dc ; ret 0x8b70
0x000000000052b850 : jo 0x52b7e0 ; ret 0x8b70
0x000000000052b854 : jo 0x52b7e4 ; ret 0x8b70
0x000000000052b858 : jo 0x52b7e8 ; ret 0x8b70
0x000000000052b85c : jo 0x52b7ec ; ret 0x51a3
0x000000000052bbc8 : jo 0x52bb58 ; ret 0x51a3
0x000000000052cfc8 : jo 0x52cf58 ; ret 0x51a3
0x000000000052cfd8 : jo 0x52cf68 ; ret 0x51a3
0x00000000005320a4 : jo 0x532034 ; ret 0xbe30
0x00000000005320b4 : jo 0x532044 ; ret 0xbe30
0x000000000053243e : jo 0x532406 ; ret 0x51
0x00000000005333be : jo 0x533386 ; ret 0x51
0x00000000005378fb : jo 0x5378ed ; xor r14b, r11b ; dec dword ptr [rax - 0x77] ; ret
0x00000000005392ec : jo 0x5392c0 ; cli ; dec dword ptr [rax - 0x77] ; ret
0x0000000000542794 : jo 0x542796 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000543a41 : jo 0x543a09 ; cmp edx, dword ptr [rax + rax + 0x5a] ; ret
0x0000000000543a40 : jo 0x543a0a ; cmp edx, dword ptr [rax + rax + 0x5a] ; ret
0x0000000000544093 : jo 0x5440e2 ; mov dword ptr [rdi + 0x78], edx ; ret
0x000000000054e06b : jo 0x54e0ca ; ret
0x000000000054e299 : jo 0x54e2fb ; pop r14 ; pop rbp ; ret
0x00000000005556b1 : jo 0x5556e3 ; pop rdx ; cwde ; call 0x785e1972
0x0000000000560775 : jo 0x560781 ; ret
0x000000000056218a : jo 0x5621dc ; mov dword ptr [rdi + 0x78], ebx ; pop rbx ; pop r14 ; ret
0x00000000005626f6 : jo 0x562746 ; mov dword ptr [rdi + 0x78], ecx ; pop rbx ; ret
0x00000000005626f5 : jo 0x562747 ; mov dword ptr [rdi + 0x78], ecx ; pop rbx ; ret
0x0000000000593d65 : jo 0x593cf8 ; ret 0x65aa
0x0000000000596a9e : jo 0x596ae1 ; add byte ptr [rdi + 0x3834d824], bl ; ret 0xa070
0x0000000000598e39 : jo 0x598e44 ; pop rsi ; fimul dword ptr [rbx] ; cli ; int1 ; adc ch, dh ; ret
0x0000000000599d99 : jo 0x599d36 ; xlatb ; stosb byte ptr [rdi], al ; ret
0x000000000059bdc2 : jo 0x59be11 ; pop rdi ; sub ch, byte ptr [rax - 0x71] ; ret 0x88d0
0x000000000059c0eb : jo 0x59c11c ; ret
0x000000000059d8c2 : jo 0x59d8c7 ; ret
0x00000000005a8ffe : jo 0x5a8f95 ; ret 0xd298
0x00000000005b0729 : jo 0x5b076e ; cmp dword ptr [rbx + rax*4], edx ; ret
0x00000000005b0726 : jo 0x5b0795 ; push rbx ; jo 0x5b0771 ; cmp dword ptr [rbx + rax*4], edx ; ret
0x00000000005b0725 : jo 0x5b0796 ; push rbx ; jo 0x5b0772 ; cmp dword ptr [rbx + rax*4], edx ; ret
0x00000000005b0ad2 : jo 0x5b0b0a ; jnp 0x5b0b46 ; ret
0x00000000005b1479 : jo 0x5b148c ; ret 0xfd78
0x00000000005b27d6 : jo 0x5b27b9 ; ret 0x7553
0x00000000005b5994 : jo 0x5b59de ; cmp al, byte ptr [rdx] ; xor al, 0x5c ; ret
0x00000000005b5ba3 : jo 0x5b5b5c ; mov dl, -7 ; ret 0xbf6e
0x00000000005b66a5 : jo 0x5b66c7 ; outsd dx, dword ptr [rsi] ; ret 0x7a53
0x00000000005d6a50 : jo 0x5d6acc ; xor dword ptr [r8], edx ; adc dword ptr [rcx], eax ; adc esp, eax ; ret
0x00000000005e4e64 : jo 0x5e4e17 ; jmp 0x5e4e6a
0x00000000005e5554 : jo 0x5e54dd ; in al, dx ; jmp rax
0x00000000005e54fc : jo 0x5e556c ; in al, dx ; jmp qword ptr [rax]
0x00000000005e5954 : jo 0x5e593b ; in al, dx ; jmp qword ptr [rax]
0x00000000005e5bd4 : jo 0x5e5c0b ; in eax, dx ; jmp qword ptr [rax]
0x00000000005e6b6c : jo 0x5e6b6a ; out dx, al ; jmp qword ptr [rax]
0x00000000005e6c8c : jo 0x5e6cc2 ; out dx, eax ; jmp rax
0x00000000005e7234 : jo 0x5e7229 ; out dx, eax ; jmp qword ptr [rax]
0x00000000005e72ac : jo 0x5e72a9 ; out dx, eax ; call qword ptr [rax]
0x00000000005e79c5 : jo 0x5e79b9 ; jmp rax
0x00000000005e82a4 : jo 0x5e82b4 ; int1 ; call rax
0x00000000005e8784 : jo 0x5e87e1 ; int1 ; jmp rax
0x00000000005e8934 : jo 0x5e88cb ; int1 ; call rax
0x00000000005e8b34 : jo 0x5e8ad4 ; int1 ; call qword ptr [rax]
0x00000000005e8d0c : jo 0x5e8cf4 ; int1 ; jmp rax
0x00000000005e914c : jo 0x5e90e5 ; call qword ptr [rax]
0x00000000005e9634 : jo 0x5e96b1 ; cmc ; jmp qword ptr [rax]
0x00000000005e9894 : jo 0x5e987c ; cmc ; jmp qword ptr [rax]
0x00000000005ea5b5 : jo 0x5ea5af ; jmp qword ptr [rax]
0x00000000005eb0e5 : jo 0x5eb0e0 ; call rax
0x00000000005ebfb4 : jo 0x5ec026 ; clc ; call rax
0x00000000005ec055 : jo 0x5ec051 ; call rax
0x00000000005ec014 : jo 0x5ec088 ; clc ; call qword ptr [rax]
0x00000000005ec0c5 : jo 0x5ec0c1 ; jmp qword ptr [rax]
0x00000000005ec4b1 : jo 0x5ec496 ; jmp qword ptr [rdx]
0x00000000005ec4c9 : jo 0x5ec4ae ; call rdi
0x00000000005ec4c8 : jo 0x5ec4af ; call rdi
0x0000000000602890 : jo 0x602850 ; in al, dx ; call qword ptr [rbx]
0x0000000000605390 : jo 0x60534b ; in eax, dx ; jmp rdx
0x0000000000607be0 : jo 0x607c1e ; out dx, al ; call qword ptr [rsi]
0x0000000000608bf9 : jo 0x608beb ; jmp rax
0x00000000006103e0 : jo 0x6103fe ; call qword ptr [rsi]
0x0000000000611420 : jo 0x611467 ; call qword ptr [rbx]
0x00000000006116b0 : jo 0x611702 ; jmp rdx
0x000000000061322d : jo 0x613237 ; add al, dl ; stosd dword ptr [rdi], eax ; call qword ptr [rax]
0x0000000000613390 : jo 0x613345 ; jmp qword ptr [rdx]
0x00000000006171d0 : jo 0x6171b9 ; hlt ; call qword ptr [rsi]
0x0000000000617490 : jo 0x61747a ; hlt ; call qword ptr [rsi]
0x00000000004c3117 : jo 0xffffffffb88d317e ; ret 0
0x000000000041279e : jp 0x4127ab ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000441bd1 : jp 0x441be7 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000044c9ff : jp 0x44ca75 ; pop rdx ; xor ah, al ; ret 0x79
0x000000000046a992 : jp 0x46a9a6 ; cmp al, 0 ; ret
0x00000000004b30c9 : jp 0x4b30cb ; dec dword ptr [rax - 0x77] ; ret
0x00000000004cf81c : jp 0x4cf7e4 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; xor ecx, ecx ; call rax
0x00000000004f2814 : jp 0x4f2844 ; pop rbp ; add al, ch ; ret
0x0000000000555648 : jp 0x5556a3 ; movdqa xmm14, xmmword ptr [r10 + 0x60] ; ret
0x0000000000578d77 : jp 0x578dfd ; stosb byte ptr [rdi], al ; stc ; pop rsp ; ret 0x1948
0x00000000005971d9 : jp 0x5971b1 ; sahf ; or bh, byte ptr [rax + 0x46] ; ret 0x9fc2
0x0000000000599135 : jp 0x599112 ; nop ; ret
0x0000000000599134 : jp 0x599113 ; nop ; ret
0x000000000059ac73 : jp 0x59ac83 ; int1 ; lodsd eax, dword ptr [rsi] ; xlatb ; ret 0x8a8d
0x000000000059ef50 : jp 0x59ef35 ; scasd eax, dword ptr [rdi] ; and eax, esp ; ret 0xbd61
0x00000000005a0062 : jp 0x5a0085 ; xchg eax, esi ; push rsp ; int 0x80
0x00000000005a0061 : jp 0x5a0086 ; xchg eax, esi ; push rsp ; int 0x80
0x00000000005a05b3 : jp 0x5a05d0 ; ret
0x00000000005a0bf7 : jp 0x5a0b96 ; lahf ; salc ; sub byte ptr [rdx], -0x1e ; ret 0x60a
0x00000000005a1de0 : jp 0x5a1d9b ; imul esp, esp, 0xeb911ecf ; ret 0x2d3e
0x00000000005a341b : jp 0x5a3476 ; outsb dx, byte ptr [rsi] ; wait ; ret 0x8463
0x00000000005a825b : jp 0x5a821d ; ret 0x50e7
0x00000000005a869b : jp 0x5a8709 ; push rsi ; ret 0x15e
0x00000000005a9ad5 : jp 0x5a9b42 ; ret
0x00000000005abcf7 : jp 0x5abd3e ; xor cl, byte ptr fs:[rbx - 0x2ed41f02] ; ret
0x00000000005b19d6 : jp 0x5b1a56 ; push 0x6f ; ret 0x2167
0x00000000005b2497 : jp 0x5b2512 ; ret 0x12c9
0x00000000005b52fc : jp 0x5b5305 ; ret 0x9ade
0x00000000005b74c4 : jp 0x5b745a ; push -0xe6dfcd7 ; ret 0x250d
0x00000000005b7492 : jp 0x5b7498 ; ret 0x2076
0x00000000005b7e9d : jp 0x5b7ead ; xchg eax, ebp ; add dword ptr ss:[rbx], edx ; adc ecx, ecx ; ret 0x15a3
0x00000000005e42d5 : jp 0x5e42c3 ; call qword ptr [rax]
0x00000000005e42d4 : jp 0x5e42c4 ; call qword ptr [rax]
0x00000000005e4cf5 : jp 0x5e4ce4 ; jmp qword ptr [rax]
0x00000000005e9095 : jp 0x5e908b ; jmp rax
0x00000000005e909d : jp 0x5e9093 ; call qword ptr [rax]
0x00000000005eb165 : jp 0x5eb160 ; jmp qword ptr [rax]
0x00000000005eb164 : jp 0x5eb161 ; jmp qword ptr [rax]
0x00000000005f79e1 : jp 0x5f79cd ; call rax
0x000000000040bed5 : jrcxz 0x40bee2 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004359a2 : jrcxz 0x435a02 ; pop rbp ; ret
0x0000000000435d29 : jrcxz 0x435d34 ; or eax, dword ptr [rax] ; ret
0x0000000000449018 : jrcxz 0x449061 ; sti ; adc esp, eax ; ret
0x00000000004b7b8c : jrcxz 0x4b7b95 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004b8ddc : jrcxz 0x4b8e32 ; mov esi, dword ptr [rax] ; mov rdi, qword ptr [rax + 8] ; call rdx
0x00000000004b8e3c : jrcxz 0x4b8e92 ; mov esi, dword ptr [rax] ; mov rdi, qword ptr [rax + 8] ; call rcx
0x00000000004d0060 : jrcxz 0x4d006a ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0x00000000004d4c30 : jrcxz 0x4d4c26 ; mov rdx, r8 ; jmp 0x4d4c44
0x00000000004d575f : jrcxz 0x4d5771 ; movdqu xmmword ptr [rdi + 0x50], xmm4 ; ret
0x00000000004d5f1a : jrcxz 0x4d5f98 ; ret 0xc400
0x00000000004d5f9a : jrcxz 0x4d6018 ; ret 0xc400
0x00000000004fb83c : jrcxz 0x4fb846 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000500f05 : jrcxz 0x500f0d ; add byte ptr [rax], al ; dec dword ptr [rcx] ; ret
0x0000000000513fab : jrcxz 0x513fa9 ; and byte ptr [rcx + 0x11], cl ; ret 0x62c4
0x00000000005222b5 : jrcxz 0x522338 ; add ah, byte ptr [rcx] ; ret 0x7ec5
0x00000000005223a2 : jrcxz 0x522425 ; add ah, byte ptr [rcx] ; ret 0x144
0x000000000052248b : jrcxz 0x52250e ; add ah, byte ptr [rcx] ; ret 0x144
0x0000000000522575 : jrcxz 0x5225f8 ; add dh, byte ptr [rcx] ; ret 0xc1c4
0x0000000000522650 : jrcxz 0x5226d3 ; add dh, byte ptr [rcx] ; ret 0x144
0x0000000000522808 : jrcxz 0x52288b ; add dh, byte ptr [rcx] ; ret 0x144
0x0000000000522904 : jrcxz 0x522987 ; add dh, byte ptr [rcx] ; ret 0x144
0x0000000000522a07 : jrcxz 0x522a8a ; add dh, byte ptr [rcx] ; ret 0xbdc5
0x0000000000522b06 : jrcxz 0x522b89 ; add dh, byte ptr [rcx] ; ret 0x41c4
0x0000000000522bbe : jrcxz 0x522c41 ; add dh, byte ptr [rcx] ; ret 0x144
0x0000000000522c61 : jrcxz 0x522ce4 ; add dh, byte ptr [rcx] ; ret 0x144
0x0000000000522cfd : jrcxz 0x522d80 ; add dh, byte ptr [rcx] ; ret 0x144
0x0000000000522e89 : jrcxz 0x522f0c ; add ah, byte ptr [rcx] ; ret 0x144
0x0000000000522f3d : jrcxz 0x522fc0 ; add ah, byte ptr [rcx] ; ret 0x144
0x0000000000522ff1 : jrcxz 0x523074 ; add ah, byte ptr [rcx] ; ret 0x144
0x000000000052309d : jrcxz 0x523120 ; add dh, byte ptr [rcx] ; ret 0x144
0x0000000000523144 : jrcxz 0x5231c7 ; add dh, byte ptr [rcx] ; ret 0x144
0x00000000005231f1 : jrcxz 0x523274 ; add dh, byte ptr [rcx] ; ret 0x144
0x000000000052329c : jrcxz 0x52331f ; add dh, byte ptr [rcx] ; ret 0x144
0x000000000052336a : jrcxz 0x5233ed ; add dh, byte ptr [rcx] ; ret 0x144
0x0000000000523445 : jrcxz 0x5234c8 ; add dh, byte ptr [rcx] ; ret 0x144
0x000000000052352b : jrcxz 0x5235ae ; add dh, byte ptr [rcx] ; ret 0xc1c4
0x0000000000523830 : jrcxz 0x5238b3 ; add dh, byte ptr [rcx] ; ret 0x144
0x0000000000541789 : jrcxz 0x541723 ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000054b9b9 : jrcxz 0x54b970 ; lock dec dword ptr [rax - 0x77] ; ret
0x0000000000552fa9 : jrcxz 0x552f81 ; out dx, al ; dec dword ptr [rax - 0x77] ; ret
0x0000000000558b24 : jrcxz 0x558b2d ; add byte ptr [rax], al ; dec dword ptr [rax + 9] ; ret
0x0000000000558ea6 : jrcxz 0x558eaf ; add byte ptr [rax], al ; dec dword ptr [rax + 9] ; ret
0x000000000057dc8b : jrcxz 0x57dcf6 ; push rbp ; jnp 0x57dc37 ; add byte ptr [rdx], -0x24 ; ret
0x000000000057e39e : jrcxz 0x57e3bc ; mov ecx, dword ptr [rdx + 0x54] ; xchg eax, edx ; ret
0x000000000057e86e : jrcxz 0x57e893 ; sahf ; ret 0x24d8
0x0000000000594c5a : jrcxz 0x594c34 ; scasd eax, dword ptr [rdi] ; inc edx ; jmp 0x594c0a
0x0000000000595762 : jrcxz 0x595732 ; mov byte ptr [rdi - 0x22], ch ; outsd dx, dword ptr [rsi] ; ret
0x0000000000595761 : jrcxz 0x595733 ; mov byte ptr [rdi - 0x22], ch ; outsd dx, dword ptr [rsi] ; ret
0x0000000000599009 : jrcxz 0x599051 ; push 0x42 ; sub eax, dword ptr [rdi] ; ret 0xecf9
0x0000000000599896 : jrcxz 0x599871 ; add bh, dl ; mov bl, -0x20 ; test dword ptr [rax], ecx ; ret
0x000000000059a6b4 : jrcxz 0x59a71b ; mov dl, -3 ; ret
0x00000000005a3519 : jrcxz 0x5a34ac ; jmp 0x5a3513
0x00000000005a9689 : jrcxz 0x5a9637 ; pop rdx ; ret 0xd69
0x00000000005b291d : jrcxz 0x5b28ff ; shr dword ptr [rcx + 0x41], 1 ; ret
0x00000000005b4e19 : jrcxz 0x5b4e00 ; insb byte ptr [rdi], dx ; fidiv word ptr [rbx + 0x26df5e2a] ; ret 0x4d11
0x00000000005b619c : jrcxz 0x5b616a ; push rdi ; ret
0x00000000005e1a56 : jrcxz 0x5e1a60 ; test al, -0x30 ; add byte ptr [rax], al ; push rax ; out -0x1d, al ; jmp rax
0x00000000005e5c39 : jrcxz 0x5e5c42 ; add byte ptr [rax + 0x54], dl ; in eax, dx ; jmp qword ptr [rax]
0x00000000005e6955 : jrcxz 0x5e6947 ; jmp rax
0x00000000005e81b5 : jrcxz 0x5e81a9 ; call rax
0x00000000005e8d0d : jrcxz 0x5e8d02 ; jmp rax
0x00000000005e9895 : jrcxz 0x5e988e ; jmp qword ptr [rax]
0x00000000005e9b19 : jrcxz 0x5e9b23 ; add byte ptr [rax], dh ; hlt ; cmc ; jmp qword ptr [rax]
0x00000000005e9b69 : jrcxz 0x5e9b73 ; add al, dl ; hlt ; cmc ; call qword ptr [rax]
0x00000000005eedf2 : jrcxz 0x5eedf5 ; ret
0x00000000005f8899 : jrcxz 0x5f8885 ; call qword ptr [rax]
0x0000000000616ed1 : jrcxz 0x616ec9 ; jmp qword ptr [rdi]
0x0000000000616ed0 : jrcxz 0x616eca ; jmp qword ptr [rdi]
0x0000000000616f49 : jrcxz 0x616f41 ; jmp qword ptr [rdi]
0x0000000000616f91 : jrcxz 0x616f89 ; call qword ptr [rsi]
0x0000000000616fa9 : jrcxz 0x616fa1 ; call qword ptr [rsi]
0x0000000000616fc1 : jrcxz 0x616fb9 ; call qword ptr [rsi]
0x0000000000616fd9 : jrcxz 0x616fd1 ; call qword ptr [rsi]
0x0000000000616ff1 : jrcxz 0x616fe9 ; call qword ptr [rsi]
0x0000000000617009 : jrcxz 0x617001 ; call qword ptr [rsi]
0x0000000000617021 : jrcxz 0x617019 ; call qword ptr [rsi]
0x0000000000617039 : jrcxz 0x617031 ; call qword ptr [rsi]
0x0000000000617051 : jrcxz 0x617049 ; call qword ptr [rsi]
0x0000000000617069 : jrcxz 0x617061 ; call qword ptr [rsi]
0x000000000040a09c : js 0x40a0dc ; add dword ptr [rdi + rdx - 1], esi ; ret
0x000000000040d9f5 : js 0x40d987 ; pop rax ; pop rbx ; ret
0x000000000040d9f4 : js 0x40d988 ; pop rax ; pop rbx ; ret
0x000000000041a3d2 : js 0x41a425 ; test rdi, rdi ; je 0x41a3eb ; call 0x496689
0x000000000041be7f : js 0x41be0c ; ret
0x000000000042b943 : js 0x42b94a ; add byte ptr [rax], al ; ret
0x000000000042c2b8 : js 0x42c316 ; ret
0x000000000042c2b7 : js 0x42c317 ; ret
0x000000000042c77e : js 0x42c771 ; add dword ptr [rax], 0x41ee894c ; call rdi
0x000000000042d369 : js 0x42d370 ; add byte ptr [rax], al ; ret
0x000000000042daf4 : js 0x42dae5 ; or dword ptr [rax], eax ; xor eax, eax ; pop rdx ; ret
0x000000000042dad6 : js 0x42db34 ; ret
0x000000000042eb52 : js 0x42eb59 ; add byte ptr [rax], al ; ret
0x0000000000432a63 : js 0x432a70 ; add byte ptr [rax], al ; mov eax, 0x573e97 ; ret
0x000000000043b36c : js 0x43b374 ; add byte ptr [rax], al ; ret
0x0000000000447bb6 : js 0x447bc0 ; add dh, dh ; ret
0x0000000000448e4a : js 0x448e66 ; jbe 0x448ea7 ; lea rsi, qword ptr [rsi + 0x60] ; ret
0x000000000046dca1 : js 0x46dc28 ; ret
0x0000000000474a06 : js 0x474a55 ; mov ebp, eax ; ret
0x0000000000474d5c : js 0x474dab ; mov ebp, eax ; ret
0x0000000000475545 : js 0x475594 ; mov ebp, eax ; ret
0x0000000000475da0 : js 0x475def ; mov ebp, eax ; ret
0x000000000047c44d : js 0x47c3de ; jl 0x47c42a ; ret
0x000000000048b604 : js 0x48b670 ; std ; dec dword ptr [rax - 0x77] ; ret
0x000000000049bd4f : js 0x49bd5b ; add byte ptr [rax - 0x77], cl ; ret
0x000000000049bda3 : js 0x49bdf2 ; mov eax, dword ptr [rax + 8] ; jmp rax
0x000000000049bda2 : js 0x49bdf3 ; mov eax, dword ptr [rax + 8] ; jmp rax
0x000000000049bdb3 : js 0x49be02 ; mov eax, dword ptr [rax + 0x10] ; jmp rax
0x000000000049bdb2 : js 0x49be03 ; mov eax, dword ptr [rax + 0x10] ; jmp rax
0x000000000049be23 : js 0x49be72 ; mov eax, dword ptr [rax + 0x18] ; jmp rax
0x000000000049be22 : js 0x49be73 ; mov eax, dword ptr [rax + 0x18] ; jmp rax
0x00000000004a41f3 : js 0x4a41f6 ; ret
0x00000000004aa4d0 : js 0x4aa495 ; or byte ptr [rax], al ; add byte ptr [rax], al ; mov r8, r14 ; call rax
0x00000000004abf8d : js 0x4abf21 ; add dword ptr [rax + 1], edi ; pop rbx ; ret
0x00000000004b8de2 : js 0x4b8dee ; call rdx
0x00000000004b8e42 : js 0x4b8e4e ; call rcx
0x00000000004ca679 : js 0x4ca68f ; adc dword ptr [rdi + 0x68], eax ; ret
0x00000000004ca678 : js 0x4ca690 ; adc dword ptr [rdi + 0x68], eax ; ret
0x00000000004ca903 : js 0x4ca8c3 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000004e8781 : js 0x4e878d ; add byte ptr [rsi - 1], dh ; ret
0x00000000004e9a47 : js 0x4e9a43 ; dec dword ptr [rax - 0x77] ; ret
0x00000000004e9a46 : js 0x4e9a44 ; dec dword ptr [rax - 0x77] ; ret
0x00000000004f34a6 : js 0x4f34b0 ; mov dword ptr [rdi + 0x28], esi ; ret
0x00000000004f34cd : js 0x4f3520 ; test ecx, ecx ; je 0x4f3538 ; mov rdi, rbx ; call rcx
0x00000000004f355c : js 0x4f35ac ; test eax, eax ; je 0x4f356a ; jmp rax
0x00000000004f355b : js 0x4f35ad ; test eax, eax ; je 0x4f356b ; jmp rax
0x00000000005124f8 : js 0x51254b ; mov eax, ebx ; ret
0x00000000005124f7 : js 0x51254c ; mov eax, ebx ; ret
0x0000000000516831 : js 0x5167c3 ; push rdx ; jl 0x51683c ; ret
0x0000000000516830 : js 0x5167c4 ; push rdx ; jl 0x51683d ; ret
0x00000000005307e1 : js 0x530842 ; pop r14 ; ret
0x0000000000530b31 : js 0x530b92 ; pop r14 ; ret
0x000000000053f064 : js 0x53f0b4 ; mov edi, dword ptr [rsp] ; call rax
0x00000000005413f4 : js 0x541392 ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000005424e4 : js 0x5424a2 ; hlt ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000552e74 : js 0x552e53 ; int1 ; dec dword ptr [rax - 0x77] ; ret
0x000000000056218e : js 0x5621ef ; pop r14 ; ret
0x00000000005626fa : js 0x562759 ; ret
0x00000000005626f9 : js 0x56275a ; ret
0x00000000005686d4 : js 0x568747 ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000595f69 : js 0x595fa9 ; mov ebx, dword ptr [rcx - 0x68] ; ret 0x978
0x00000000005971dd : js 0x597227 ; ret 0x9fc2
0x000000000059b8c7 : js 0x59b881 ; rcr dword ptr [rbx], cl ; ret
0x000000000059b8c6 : js 0x59b882 ; rcr dword ptr [rbx], cl ; ret
0x000000000059b8c5 : js 0x59b883 ; rcr dword ptr [rbx], cl ; ret
0x000000000059ea48 : js 0x59ea8f ; lodsd eax, dword ptr [rsi] ; pop rax ; ret 0x2910
0x000000000059ec05 : js 0x59ec2b ; ret
0x00000000005a0554 : js 0x5a0523 ; movsd dword ptr [rdi], dword ptr [rsi] ; pop rax ; std ; pop rax ; push rsp ; std ; ret
0x00000000005a2951 : js 0x5a292c ; push rdi ; ret 0xb9d9
0x00000000005a2951 : js 0x5a2930 ; push rdi ; ret 0xb9d9
0x00000000005ad74c : js 0x5ad7c6 ; ret
0x00000000005b19d7 : js 0x5b1a2c ; push 0x6f ; ret 0x2167
0x00000000005b2f7b : js 0x5b2f6c ; cmp eax, 0x72396781 ; ret
0x00000000005b46a1 : js 0x5b465c ; hlt ; ret
0x00000000005b5b6b : js 0x5b5b7f ; ret
0x00000000005b748e : js 0x5b7480 ; push rbx ; in al, dx ; jp 0x5b749c ; ret 0x2076
0x00000000005e153d : js 0x5e1523 ; jmp qword ptr [rax]
0x00000000005e4261 : js 0x5e426a ; add al, ah ; push -0x16 ; jmp qword ptr [rax]
0x00000000005e54d0 : js 0x5e549e ; add dword ptr [rax], eax ; and byte ptr [rbp - 0x14], 0xff ; cwde ; ret
0x00000000005e7a55 : js 0x5e7a49 ; call qword ptr [rax]
0x00000000005e81b1 : js 0x5e81bb ; add al, ah ; jrcxz 0x5e81ad ; call rax
0x00000000005e9635 : js 0x5e962e ; jmp qword ptr [rax]
0x00000000005f5128 : js 0x5f5169 ; out -1, eax ; ret
0x0000000000600128 : js 0x6000c0 ; jmp 0x60012e
0x0000000000602878 : js 0x602838 ; in al, dx ; call qword ptr [rax]
0x000000000060b4c8 : js 0x60b4e8 ; out dx, eax ; call qword ptr [rax]
0x000000000060ecb8 : js 0x60ecbd ; call qword ptr [rdx]
0x0000000000610308 : js 0x610326 ; call qword ptr [rsi]
0x0000000000615978 : js 0x6159e0 ; hlt ; jmp qword ptr [rcx]
0x00000000006176a8 : js 0x617693 ; hlt ; call qword ptr [rdi]
0x000000000047a126 : js 0xffffffffff8fc036 ; ret
0x00000000005b41ac : lahf ; adc eax, dword ptr [rax - 2] ; ret
0x00000000005e8b59 : lahf ; add al, byte ptr [rax] ; nop ; mov dl, -0xf ; call qword ptr [rax]
0x0000000000505e41 : lahf ; add al, byte ptr [rbp + 1] ; ret
0x0000000000428cc1 : lahf ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x000000000057dc8f : lahf ; add byte ptr [rdx], -0x24 ; ret
0x000000000045536d : lahf ; add dword ptr [rax], eax ; add bh, bh ; ret
0x00000000005acbd6 : lahf ; add qword ptr [r8 + rcx*8 + 0x23], rdx ; ret 0x52a2
0x0000000000596aa1 : lahf ; and al, 0xffffffffffffffd8 ; xor al, 0x38 ; ret 0xa070
0x00000000004d8293 : lahf ; and byte ptr [rax + rax], cl ; add cl, al ; ret 0x310b
0x0000000000477ec2 : lahf ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000005b4cb9 : lahf ; fld xword ptr [rax - 0x536b70ed] ; ret
0x00000000005e5f9d : lahf ; in eax, dx ; call rax
0x00000000004e7dd5 : lahf ; int1 ; dec dword ptr [rax - 0x77] ; ret
0x00000000005b4b49 : lahf ; jae 0x5b4b77 ; push rcx ; adc al, -0x79 ; ror esp, cl ; ret 0xcac1
0x000000000057b896 : lahf ; lodsd eax, dword ptr es:[rsi] ; mov bl, 0x26 ; ret
0x00000000004eb53d : lahf ; out 4, al ; add byte ptr [rax - 1], bh ; ret
0x0000000000578d98 : lahf ; out 8, al ; ret 0x6132
0x0000000000577f21 : lahf ; outsd dx, dword ptr [rsi] ; ret
0x00000000005b7b16 : lahf ; pop rdi ; popfq ; insb byte ptr [rdi], dx ; out -0x12, al ; cmp al, -0x75 ; ret
0x00000000005971b5 : lahf ; pop rsp ; ret
0x00000000005b7c72 : lahf ; popfq ; xchg eax, ebp ; push rax ; in eax, dx ; ret
0x000000000049e7ed : lahf ; ret
0x0000000000577f82 : lahf ; ret 0x5c9e
0x0000000000446700 : lahf ; ret 0x5dc2
0x0000000000596aaf : lahf ; ret 0x61c0
0x00000000005842b9 : lahf ; ret 0x7700
0x0000000000594a03 : lahf ; ret 0x7a96
0x00000000005b16e7 : lahf ; ret 0x8012
0x000000000040a3cb : lahf ; ret 0x8440
0x00000000005a7e57 : lahf ; ret 0xb224
0x00000000004e4f61 : lahf ; ret 0xb60f
0x00000000005b5726 : lahf ; ret 0xbf2e
0x00000000005983bc : lahf ; ret 0xe1a9
0x0000000000566f90 : lahf ; ror byte ptr [rdi], -0x4a ; rol byte ptr [rcx], -0x40 ; pop rdx ; ret
0x00000000005a0bf9 : lahf ; salc ; sub byte ptr [rdx], -0x1e ; ret 0x60a
0x000000000054a9cd : lahf ; sbb eax, edi ; dec dword ptr [rax - 0x77] ; fucompi st(3) ; ret
0x00000000005b5860 : lahf ; xor al, 0x4d ; sbb al, -0x3b ; ret
0x00000000005b2ea9 : lahf ; xor byte ptr [rcx], 0xe9 ; ret 0xa287
0x000000000040dc39 : lar eax, word ptr [rax] ; add rsp, 0x58 ; ret
0x000000000040dc38 : lar r8d, word ptr [rax] ; add rsp, 0x58 ; ret
0x00000000005e61c7 : lcall ptr [rax + 0x100001fa] ; sub ch, dh ; call rax
0x00000000005e57bf : lcall ptr [rax + 0x1cf] ; stosd dword ptr [rdi], eax ; in al, dx ; call rax
0x00000000005e59ff : lcall ptr [rax + 0x200001da] ; or ch, ch ; call rax
0x00000000005e944f : lcall ptr [rax + 0x200002c6] ; call rax
0x00000000005e6cff : lcall ptr [rax + 0x228] ; push -0x11 ; call rax
0x00000000005e9767 : lcall ptr [rax + 0x400002d4] ; wait ; cmc ; call rax
0x00000000005eaa5f : lcall ptr [rax + 0x4000031b] ; ret
0x00000000005ebfaf : lcall ptr [rax + 0x7000036d] ; insd dword ptr [rdi], dx ; clc ; call rax
0x00000000005e280f : lcall ptr [rax - 0x3ffffefa] ; ret 0xffe5
0x00000000005e59c7 : lcall ptr [rax - 0x6ffffe27] ; add ch, ch ; call rax
0x00000000005e4cdf : lcall ptr [rax - 0x6ffffe5d] ; jns 0x5e4cda ; call rax
0x00000000005e403f : lcall ptr [rax - 0x7ffffe90] ; cmp ebp, edx ; call rax
0x00000000005e172f : lcall ptr [rax] ; ret 0
0x00000000005e9387 : lcall ptr [rax] ; ret 2
0x000000000041c201 : lcall ptr [rbx + 0x41] ; pop rsi ; pop r15 ; ret
0x000000000040ae47 : lcall ptr [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0x0000000000476b63 : lcall ptr [rbx + 0x41] ; pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000005178f0 : lcall ptr [rbx + 0x5d] ; ret
0x000000000042df07 : lcall ptr [rbx - 0x3d] ; pop rbx ; ret
0x000000000049c9ca : lcall ptr [rdx - 0x3d] ; or dword ptr [rdi + 0x14], edx ; xor eax, eax ; pop rdx ; ret
0x00000000004b8d69 : lcall ptr [rdx - 0x3d] ; pop rax ; jmp r8
0x00000000004da58d : lcall ptr [rdx - 0xa] ; dec dword ptr [rax - 0x77] ; ret
0x000000000040d9d6 : lea eax, dword ptr [rax + 0x56b2f0] ; ret
0x000000000056091f : lea eax, dword ptr [rax + 0x5dfc10] ; pop rdx ; ret
0x0000000000419689 : lea eax, dword ptr [rax + 0x819540] ; ret
0x000000000055106a : lea eax, dword ptr [rax + 0x82a590] ; pop rdx ; ret
0x0000000000441763 : lea eax, dword ptr [rax + rax*2 + 0x13] ; ret
0x00000000004967e3 : lea eax, dword ptr [rax + rcx + 7] ; sar eax, 3 ; pop rdx ; ret
0x000000000047c11b : lea eax, dword ptr [rax - 0x36] ; push rdi ; add byte ptr [rdi + rcx - 0x4a], al ; ret
0x000000000047c1de : lea eax, dword ptr [rax - 0x36] ; push rdi ; add byte ptr [rdi + rcx - 0x4a], al ; ret 0xd389
0x00000000005a481e : lea eax, dword ptr [rax - 0x50] ; ret
0x000000000055bd76 : lea eax, dword ptr [rax*8 + 0x82b510] ; pop rdx ; ret
0x0000000000550c3d : lea eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005e4731 : lea eax, dword ptr [rcx] ; add al, dh ; loopne 0x5e4727 ; jmp qword ptr [rax]
0x00000000005e4769 : lea eax, dword ptr [rcx] ; add byte ptr [rax], ah ; loop 0x5e475f ; jmp rax
0x0000000000463b81 : lea eax, dword ptr [rdi + 0x28] ; ret
0x00000000004899e1 : lea eax, dword ptr [rdi + 0x48] ; ret
0x0000000000404230 : lea eax, dword ptr [rdi + rdi] ; sub eax, esi ; ret
0x00000000005e86e1 : lea eax, dword ptr [rdx] ; add byte ptr [rax + 0x53], dl ; int1 ; jmp rax
0x00000000005e86f1 : lea eax, dword ptr [rdx] ; add byte ptr [rax], al ; push rsp ; int1 ; jmp qword ptr [rax]
0x000000000048d1b0 : lea eax, dword ptr [rsi - 0x30] ; ret
0x00000000004b94f3 : lea eax, dword ptr [rsp + 0x10] ; lea r9, qword ptr [rsp + 8] ; call rax
0x00000000004138b5 : lea eax, dword ptr [rsp + 0x10] ; xor ecx, ecx ; mov rdi, rbx ; call rax
0x000000000041f2f4 : lea eax, dword ptr [rsp + 0x18] ; mov rdi, rbx ; call rax
0x00000000004ad6de : lea eax, dword ptr [rsp + 0x47] ; mov rsi, rbx ; call rax
0x0000000000564ee1 : lea eax, dword ptr [rsp + 8] ; ret
0x00000000004d4a39 : lea ebp, dword ptr [rbx + 0x60] ; mov rsi, r13 ; call r15
0x00000000005a6de6 : lea ebp, dword ptr [rbx - 0x2e] ; mov bl, 0x3c ; ret
0x0000000000598d3b : lea ebp, dword ptr [rcx] ; ret 0xfa3e
0x00000000004cc293 : lea ebx, dword ptr [rbx + 0x10] ; jne 0x4cc289 ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000058d2ff : lea ebx, dword ptr [rdi - 0x5e] ; ret 0x7455
0x00000000005d700c : lea ebx, dword ptr [rip + 0x20c0919c] ; loopne 0x5d6ffc ; ret 0xe022
0x00000000005d680e : lea ebx, dword ptr [rip + 0x20c0e0e0] ; loopne 0x5d6800 ; ret 0xc822
0x00000000004978f0 : lea ebx, dword ptr [rsp + 0x10] ; mov rdi, rbx ; call rcx
0x00000000004193c8 : lea ecx, dword ptr [rax + 1] ; test ecx, ecx ; jg 0x4193c7 ; ret
0x000000000045f3f3 : lea ecx, dword ptr [rbp + 0x58] ; mov rdi, rbx ; call rax
0x000000000045260b : lea ecx, dword ptr [rbx + rdx + 0x20] ; mov r10, rax ; jmp 0x452626
0x000000000045282d : lea ecx, dword ptr [rcx + rax + 0x20] ; sub r10, rax ; jmp 0x452846
0x000000000045650f : lea ecx, dword ptr [rcx + rax + 1] ; mov qword ptr [rdi], r9 ; ret
0x0000000000514d39 : lea ecx, dword ptr [rcx + rdx*4] ; ret
0x000000000055a0ae : lea ecx, dword ptr [rsp + 0x20] ; call rbx
0x0000000000435a76 : lea ecx, dword ptr [rsp + 0x28] ; mov r8, qword ptr [rsp + 0x18] ; call rax
0x00000000004ad7f0 : lea ecx, dword ptr [rsp + 0x4f] ; mov rsi, rbx ; call rax
0x0000000000457bf2 : lea ecx, dword ptr [rsp + 0x50] ; call rax
0x00000000004b94f8 : lea ecx, dword ptr [rsp + 8] ; call rax
0x00000000004d4513 : lea edi, dword ptr [rbp + 0x40] ; lea rsi, qword ptr [r13 + 0x60] ; call r8
0x00000000004d3c6f : lea edi, dword ptr [rbp + 0x40] ; lea rsi, qword ptr [rbp + 0x60] ; call r12
0x00000000004d3ce3 : lea edi, dword ptr [rbx + 0x40] ; lea rsi, qword ptr [rbx + 0x60] ; call r12
0x00000000004d412d : lea edi, dword ptr [rbx + 0x40] ; lea rsi, qword ptr [rbx + 0x60] ; call r8
0x0000000000564e36 : lea edi, dword ptr [rdi + 1] ; jne 0x564e35 ; ret
0x00000000005141c8 : lea edi, dword ptr [rdi + 8] ; dec r9d ; jne 0x5141b9 ; ret
0x0000000000564b7d : lea edi, dword ptr [rdi + 8] ; sub esi, 1 ; jne 0x564b49 ; ret
0x00000000005a404c : lea edi, dword ptr [rdi] ; ret
0x00000000004d3b09 : lea edi, dword ptr [rsi + 0x40] ; lea rsi, qword ptr [r14 + 0x60] ; call r8
0x00000000005a7be9 : lea edi, dword ptr [rsi] ; in al, dx ; ret
0x000000000055ef17 : lea edi, dword ptr [rsp + 0x10] ; call rax
0x0000000000488410 : lea edi, dword ptr [rsp + 0x10] ; mov esi, eax ; call 0x5046d8
0x00000000004ad1e8 : lea edi, dword ptr [rsp + 0x40] ; call r14
0x00000000004a7b44 : lea edi, dword ptr [rsp + 8] ; call rbx
0x00000000004264c1 : lea edi, dword ptr [rsp] ; call rax
0x0000000000447361 : lea edx, dword ptr [rbx] ; ret 0x8df6
0x0000000000447365 : lea edx, dword ptr [rbx] ; ret 0xd890
0x00000000004c461c : lea edx, dword ptr [rdi + 8] ; mov rdi, r13 ; mov rcx, r14 ; call rax
0x000000000058e8d6 : lea edx, dword ptr [rsi] ; ret 0x6786
0x000000000041626e : lea edx, dword ptr [rsp + 0x18] ; mov rdi, rbx ; call rcx
0x00000000004395a5 : lea edx, dword ptr [rsp + 0x5f] ; mov r8d, r12d ; call rax
0x000000000040c171 : lea edx, dword ptr [rsp + 0x80] ; call rcx
0x0000000000438a43 : lea edx, dword ptr [rsp + 0xc] ; mov rdi, rbx ; call rax
0x00000000004d3c73 : lea esi, dword ptr [rbp + 0x60] ; call r12
0x00000000004d4517 : lea esi, dword ptr [rbp + 0x60] ; call r8
0x00000000004d408f : lea esi, dword ptr [rbp + 0x60] ; mov r12, rdx ; call r12
0x00000000004d4493 : lea esi, dword ptr [rbp + 0x60] ; mov r14, rcx ; call r14
0x00000000005a9829 : lea esi, dword ptr [rbp - 0x1972dfd7] ; ret 0x5a93
0x00000000004d3ce7 : lea esi, dword ptr [rbx + 0x60] ; call r12
0x00000000004d4131 : lea esi, dword ptr [rbx + 0x60] ; call r8
0x0000000000593d1c : lea esi, dword ptr [rcx] ; cmp ch, ah ; mov dl, 0x1c ; ret
0x00000000004d3b0d : lea esi, dword ptr [rsi + 0x60] ; call r8
0x0000000000448e4f : lea esi, dword ptr [rsi + 0x60] ; ret
0x00000000004f8f8b : lea esi, dword ptr [rsp + 0x18] ; mov rdi, r15 ; call r14
0x0000000000411f1a : lea esi, dword ptr [rsp + 0x1c0] ; call r14
0x00000000004f9c2b : lea esi, dword ptr [rsp + 0x20] ; mov rdi, rbx ; call rax
0x000000000055eb94 : lea esi, dword ptr [rsp + 0x20] ; mov rdx, r12 ; call rax
0x0000000000411d20 : lea esi, dword ptr [rsp + 0x240] ; call r14
0x000000000047f094 : lea esi, dword ptr [rsp + 0x40] ; mov rdx, rbp ; call r15
0x0000000000442d1b : lea esi, dword ptr [rsp + 0x46] ; call r15
0x00000000004396cd : lea esi, dword ptr [rsp + 0x50] ; mov rdi, r14 ; call rax
0x000000000047ee71 : lea esi, dword ptr [rsp + 0x50] ; mov rdx, rbp ; call r14
0x000000000043a372 : lea esi, dword ptr [rsp + 0xc] ; mov rdi, rbx ; call rax
0x000000000043ea35 : lea esi, dword ptr [rsp + 8] ; mov rdi, r13 ; call r15
0x000000000043e3b0 : lea esi, dword ptr [rsp + 8] ; mov rdi, r15 ; call r14
0x0000000000459695 : lea esi, dword ptr [rsp + 8] ; xor edi, edi ; call rax
0x000000000043e30b : lea esi, dword ptr [rsp] ; mov rdi, r12 ; call r14
0x0000000000459730 : lea esi, dword ptr [rsp] ; mov rdi, r12 ; call r15
0x000000000043f33e : lea esi, dword ptr [rsp] ; mov rdi, r12 ; call rbx
0x00000000005485a3 : lea esi, dword ptr [rsp] ; mov rdi, rdx ; call rax
0x000000000043ea47 : lea esi, dword ptr [rsp] ; xor edi, edi ; call r14
0x00000000004a4a41 : lea esi, dword ptr [rsp] ; xor edi, edi ; call rbx
0x0000000000540c4d : lea esi, dword ptr [rsp] ; xor edx, edx ; call rax
0x0000000000448d2a : lea esp, dword ptr [rax] ; mov rax, r10 ; ret
0x0000000000449781 : lea esp, dword ptr [rax] ; ret
0x00000000005962f0 : lea esp, dword ptr [rax] ; sub al, 0x5d ; ret
0x0000000000452fc1 : lea esp, dword ptr [rbp] ; pop rbp ; ret
0x00000000004d4b09 : lea esp, dword ptr [rbx + 0x60] ; mov rsi, r12 ; call r15
0x0000000000483b4d : lea esp, dword ptr [rcx + 0x30] ; ret
0x000000000044618d : lea esp, dword ptr [rsi + 0x30] ; popfq ; ret
0x000000000044518c : lea esp, dword ptr [rsi + 0x30] ; ret
0x0000000000520187 : lea esp, dword ptr [rsi] ; ret
0x00000000004d4cff : lea esp, dword ptr [rsp + 0x18] ; ret
0x0000000000481a11 : lea esp, dword ptr [rsp + 0x28] ; ret
0x0000000000506c76 : lea esp, dword ptr [rsp + 0x58] ; ret
0x0000000000474a03 : lea esp, dword ptr [rsp + 0x78] ; mov rbp, rax ; ret
0x0000000000562c4e : lea esp, dword ptr [rsp + 0x88] ; ret
0x00000000004d4b08 : lea r12, qword ptr [rbx + 0x60] ; mov rsi, r12 ; call r15
0x00000000004d4a38 : lea r13, qword ptr [rbx + 0x60] ; mov rsi, r13 ; call r15
0x000000000041f2f3 : lea r8, qword ptr [rsp + 0x18] ; mov rdi, rbx ; call rax
0x00000000004ad6dd : lea r8, qword ptr [rsp + 0x47] ; mov rsi, rbx ; call rax
0x000000000045650e : lea r9, qword ptr [r9 + rax + 1] ; mov qword ptr [rdi], r9 ; ret
0x00000000004b94f7 : lea r9, qword ptr [rsp + 8] ; call rax
0x000000000040d9d5 : lea rax, qword ptr [rax + 0x56b2f0] ; ret
0x000000000056091e : lea rax, qword ptr [rax + 0x5dfc10] ; pop rdx ; ret
0x0000000000419688 : lea rax, qword ptr [rax + 0x819540] ; ret
0x0000000000551069 : lea rax, qword ptr [rax + 0x82a590] ; pop rdx ; ret
0x000000000055bd75 : lea rax, qword ptr [rax*8 + 0x82b510] ; pop rdx ; ret
0x0000000000463b80 : lea rax, qword ptr [rdi + 0x28] ; ret
0x00000000004899e0 : lea rax, qword ptr [rdi + 0x48] ; ret
0x0000000000564ee0 : lea rax, qword ptr [rsp + 8] ; ret
0x00000000004978ef : lea rbx, qword ptr [rsp + 0x10] ; mov rdi, rbx ; call rcx
0x000000000045260a : lea rcx, qword ptr [r11 + r10 + 0x20] ; mov r10, rax ; jmp 0x452627
0x000000000045f3f2 : lea rcx, qword ptr [r13 + 0x58] ; mov rdi, rbx ; call rax
0x000000000045282c : lea rcx, qword ptr [rcx + rax + 0x20] ; sub r10, rax ; jmp 0x452847
0x000000000055a0ad : lea rcx, qword ptr [rsp + 0x20] ; call rbx
0x00000000004ad7ef : lea rcx, qword ptr [rsp + 0x4f] ; mov rsi, rbx ; call rax
0x0000000000457bf1 : lea rcx, qword ptr [rsp + 0x50] ; call rax
0x00000000004d4512 : lea rdi, qword ptr [r13 + 0x40] ; lea rsi, qword ptr [r13 + 0x60] ; call r8
0x00000000004d3b08 : lea rdi, qword ptr [r14 + 0x40] ; lea rsi, qword ptr [r14 + 0x60] ; call r8
0x00000000004d3c6e : lea rdi, qword ptr [rbp + 0x40] ; lea rsi, qword ptr [rbp + 0x60] ; call r12
0x00000000004d3ce2 : lea rdi, qword ptr [rbx + 0x40] ; lea rsi, qword ptr [rbx + 0x60] ; call r12
0x00000000004d412c : lea rdi, qword ptr [rbx + 0x40] ; lea rsi, qword ptr [rbx + 0x60] ; call r8
0x0000000000564e35 : lea rdi, qword ptr [rdi + 1] ; jne 0x564e36 ; ret
0x000000000055ef16 : lea rdi, qword ptr [rsp + 0x10] ; call rax
0x000000000048840f : lea rdi, qword ptr [rsp + 0x10] ; mov esi, eax ; call 0x5046d9
0x00000000004ad1e7 : lea rdi, qword ptr [rsp + 0x40] ; call r14
0x00000000004a7b43 : lea rdi, qword ptr [rsp + 8] ; call rbx
0x00000000004264c0 : lea rdi, qword ptr [rsp] ; call rax
0x000000000041626d : lea rdx, qword ptr [rsp + 0x18] ; mov rdi, rbx ; call rcx
0x00000000004395a4 : lea rdx, qword ptr [rsp + 0x5f] ; mov r8d, r12d ; call rax
0x000000000040c170 : lea rdx, qword ptr [rsp + 0x80] ; call rcx
0x0000000000438a42 : lea rdx, qword ptr [rsp + 0xc] ; mov rdi, rbx ; call rax
0x00000000004d4516 : lea rsi, qword ptr [r13 + 0x60] ; call r8
0x00000000004d408e : lea rsi, qword ptr [r13 + 0x60] ; mov r12, rdx ; call r12
0x00000000004d4492 : lea rsi, qword ptr [r13 + 0x60] ; mov r14, rcx ; call r14
0x00000000004d3b0c : lea rsi, qword ptr [r14 + 0x60] ; call r8
0x00000000004d3c72 : lea rsi, qword ptr [rbp + 0x60] ; call r12
0x00000000004d3ce6 : lea rsi, qword ptr [rbx + 0x60] ; call r12
0x00000000004d4130 : lea rsi, qword ptr [rbx + 0x60] ; call r8
0x0000000000448e4e : lea rsi, qword ptr [rsi + 0x60] ; ret
0x00000000004f8f8a : lea rsi, qword ptr [rsp + 0x18] ; mov rdi, r15 ; call r14
0x0000000000411f19 : lea rsi, qword ptr [rsp + 0x1c0] ; call r14
0x00000000004f9c2a : lea rsi, qword ptr [rsp + 0x20] ; mov rdi, rbx ; call rax
0x000000000055eb93 : lea rsi, qword ptr [rsp + 0x20] ; mov rdx, r12 ; call rax
0x0000000000411d1f : lea rsi, qword ptr [rsp + 0x240] ; call r14
0x000000000047f093 : lea rsi, qword ptr [rsp + 0x40] ; mov rdx, rbp ; call r15
0x0000000000442d1a : lea rsi, qword ptr [rsp + 0x46] ; call r15
0x00000000004396cc : lea rsi, qword ptr [rsp + 0x50] ; mov rdi, r14 ; call rax
0x000000000047ee70 : lea rsi, qword ptr [rsp + 0x50] ; mov rdx, rbp ; call r14
0x000000000043a371 : lea rsi, qword ptr [rsp + 0xc] ; mov rdi, rbx ; call rax
0x000000000043ea34 : lea rsi, qword ptr [rsp + 8] ; mov rdi, r13 ; call r15
0x000000000043e3af : lea rsi, qword ptr [rsp + 8] ; mov rdi, r15 ; call r14
0x0000000000459694 : lea rsi, qword ptr [rsp + 8] ; xor edi, edi ; call rax
0x000000000043e30a : lea rsi, qword ptr [rsp] ; mov rdi, r12 ; call r14
0x000000000045972f : lea rsi, qword ptr [rsp] ; mov rdi, r12 ; call r15
0x000000000043f33d : lea rsi, qword ptr [rsp] ; mov rdi, r12 ; call rbx
0x00000000005485a2 : lea rsi, qword ptr [rsp] ; mov rdi, rdx ; call rax
0x000000000043ea46 : lea rsi, qword ptr [rsp] ; xor edi, edi ; call r14
0x00000000004a4a40 : lea rsi, qword ptr [rsp] ; xor edi, edi ; call rbx
0x0000000000540c4c : lea rsi, qword ptr [rsp] ; xor edx, edx ; call rax
0x0000000000448d29 : lea rsp, qword ptr [rax] ; mov rax, r10 ; ret
0x0000000000449780 : lea rsp, qword ptr [rax] ; ret
0x0000000000452fc0 : lea rsp, qword ptr [rbp] ; pop rbp ; ret
0x0000000000483b4c : lea rsp, qword ptr [rcx + 0x30] ; ret
0x000000000044618c : lea rsp, qword ptr [rsi + 0x30] ; popfq ; ret
0x000000000044518b : lea rsp, qword ptr [rsi + 0x30] ; ret
0x0000000000520186 : lea rsp, qword ptr [rsi] ; ret
0x00000000004d4cfe : lea rsp, qword ptr [rsp + 0x18] ; ret
0x0000000000481a10 : lea rsp, qword ptr [rsp + 0x28] ; ret
0x0000000000506c75 : lea rsp, qword ptr [rsp + 0x58] ; ret
0x0000000000474a02 : lea rsp, qword ptr [rsp + 0x78] ; mov rbp, rax ; ret
0x0000000000562c4d : lea rsp, qword ptr [rsp + 0x88] ; ret
0x00000000005e9521 : leave ; add al, byte ptr [rax] ; mov al, -8 ; hlt ; call rax
0x00000000004bb748 : leave ; add byte ptr [rax], al ; add al, ch ; out dx, eax ; ret
0x00000000005b5c10 : leave ; add byte ptr [rcx - 0x76], dh ; ret 0xe440
0x00000000004bb1a5 : leave ; add dword ptr [rax], eax ; add al, ch ; ret 0x111
0x000000000044ca1b : leave ; add eax, 0xfe7941c4 ; ret 0xf301
0x000000000057d68b : leave ; and byte ptr [rdx], ah ; ret
0x000000000050d233 : leave ; and eax, edi ; inc dword ptr [rbp + 0x5b027ec0] ; ret
0x0000000000405270 : leave ; call 0x461563
0x00000000005954b9 : leave ; call 0xffffffff848116e4
0x00000000005954b8 : leave ; call 0xffffffff848116e5
0x0000000000500601 : leave ; call r10
0x00000000004e7d21 : leave ; call r12
0x00000000004cf823 : leave ; call rax
0x0000000000539602 : leave ; cli ; dec dword ptr [rax - 0x77] ; ret
0x00000000004b8f06 : leave ; cmovne rax, r14 ; jne 0x4b8ef4 ; jmp 0x4b8ed9
0x000000000048cb96 : leave ; cmovne rsi, rdx ; jmp 0x48cb66
0x00000000005b0b11 : leave ; cmp dword ptr [rbp - 0x2c312c3a], esi ; ret 0x1203
0x00000000005488bd : leave ; cmp ecx, 1 ; ja 0x5488cf ; mov eax, dword ptr [rdi + 0x20] ; ret
0x00000000005488dd : leave ; cmp ecx, 1 ; ja 0x5488ef ; mov eax, dword ptr [rdi + 0x24] ; ret
0x0000000000446efd : leave ; enter 0x7544, -0x3e ; mov dword ptr [rdx + 0x75], ebp ; ret 0x6a89
0x000000000059d902 : leave ; fnsave dword ptr [rbx + 0x2a] ; ret
0x000000000044f0ae : leave ; jae 0x44f0b7 ; or ah, al ; cmp r11d, ebp ; ret
0x000000000042ba20 : leave ; je 0x42ba2c ; mov rax, qword ptr [rcx] ; ret
0x000000000042e37b : leave ; je 0x42e38d ; mov rax, qword ptr [rcx] ; mov rax, qword ptr [rax] ; ret
0x000000000042e3bb : leave ; je 0x42e3cd ; mov rax, qword ptr [rcx] ; mov rax, qword ptr [rax] ; ret
0x000000000042e41b : leave ; je 0x42e427 ; mov rax, qword ptr [rcx] ; ret
0x000000000042e43b : leave ; je 0x42e447 ; mov rax, qword ptr [rcx] ; ret
0x00000000004849a9 : leave ; je 0x4849b8 ; mov rax, qword ptr [rcx + 0x10] ; pop rbx ; ret
0x0000000000487864 : leave ; je 0x487871 ; mov rax, qword ptr [rcx] ; pop rbx ; ret
0x0000000000489a09 : leave ; je 0x489a18 ; mov rax, qword ptr [rcx + 0x28] ; pop rbx ; ret
0x000000000048e945 : leave ; je 0x48e906 ; mov rdi, rbx ; call rcx
0x000000000049754d : leave ; je 0x49756b ; mov rdi, rbx ; call rcx
0x00000000004975dd : leave ; je 0x4975fb ; mov rdi, rbx ; call rcx
0x000000000049c71f : leave ; je 0x49c734 ; mov rdi, rbx ; call rcx
0x000000000049c8be : leave ; je 0x49c931 ; mov rdi, rbx ; call rcx
0x00000000004adeed : leave ; je 0x4adf01 ; xor esi, esi ; mov rdi, rax ; pop rax ; jmp rcx
0x00000000004ca2bb : leave ; je 0x4ca2d9 ; mov rdi, rbx ; call rcx
0x00000000004da117 : leave ; je 0x4da128 ; mov rax, qword ptr [rcx + 0x38] ; pop rbx ; ret
0x00000000004f34d0 : leave ; je 0x4f3535 ; mov rdi, rbx ; call rcx
0x00000000004f3592 : leave ; je 0x4f359a ; jmp rcx
0x00000000004fcc82 : leave ; je 0x4fcc91 ; mov rax, qword ptr [rcx + 8] ; pop rdx ; ret
0x000000000053f527 : leave ; je 0x53f2ed ; call rcx
0x00000000004193cc : leave ; jg 0x4193c3 ; ret
0x000000000046b60d : leave ; jg 0x46b606 ; mov dword ptr [rdi + 8], ecx ; ret
0x00000000005e4fad : leave ; jmp 0x5e4fb1
0x00000000004d02d8 : leave ; jmp rax
0x000000000048f7d1 : leave ; jne 0x48f7c4 ; pop rbx ; ret
0x0000000000500ad8 : leave ; jne 0x500ad3 ; ret
0x0000000000513c29 : leave ; jne 0x513b68 ; ret
0x0000000000513d16 : leave ; jne 0x513c68 ; ret
0x0000000000514199 : leave ; jne 0x514184 ; ret
0x00000000005141cd : leave ; jne 0x5141b4 ; ret
0x0000000000505847 : leave ; jns 0x505834 ; pop rbx ; ret
0x00000000005b2496 : leave ; jp 0x5b2513 ; ret 0x12c9
0x00000000005b7222 : leave ; leave ; ret
0x00000000005b79b6 : leave ; mov byte ptr [rbp + rcx*2 + 0xb], bh ; ret
0x00000000004f3b33 : leave ; mov eax, 0xc085fff9 ; jle 0x4f3b46 ; pop rbx ; ret
0x0000000000559ba1 : leave ; mov eax, 1 ; je 0x559bb3 ; jmp rcx
0x0000000000559bc1 : leave ; mov eax, 1 ; je 0x559bd3 ; jmp rcx
0x0000000000559be4 : leave ; mov eax, 1 ; je 0x559bf8 ; jmp r9
0x000000000042cd73 : leave ; mov eax, ecx ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000429af0 : leave ; mov eax, ecx ; ret
0x000000000059b63b : leave ; mov ebx, 0x1ec0a630 ; ret
0x000000000055e3a5 : leave ; mov edx, eax ; jmp 0x55e3b2
0x00000000004c40a6 : leave ; mov r14, r9 ; call rax
0x000000000048c144 : leave ; mov rax, rbx ; je 0x48c169 ; mov rdi, rbx ; call rcx
0x0000000000559b33 : leave ; mov rax, rbx ; je 0x559b58 ; mov rdi, rbx ; call rcx
0x00000000004ec12d : leave ; mov rax, rcx ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000472a03 : leave ; mov rax, rdx ; jg 0x4729e6 ; ret
0x00000000004c410b : leave ; mov rbp, r9 ; call rax
0x0000000000540cd0 : leave ; mov rdi, r12 ; call rax
0x00000000004903eb : leave ; mov rdi, rbp ; mov rdx, rbx ; call r10
0x0000000000540d75 : leave ; mov rdi, rbx ; call r14
0x00000000004138ba : leave ; mov rdi, rbx ; call rax
0x00000000004606a4 : leave ; mov rdi, rbx ; mov rdx, r14 ; call rax
0x000000000043ad65 : leave ; mov rdi, rbx ; mov rsi, qword ptr [rsp + 0x20] ; call rax
0x000000000053c337 : leave ; mov rsi, qword ptr [rsp + 0x48] ; mov rdx, r13 ; call rbx
0x000000000053eeed : leave ; mov rsi, r12 ; mov rdx, r15 ; call rax
0x0000000000411936 : leave ; movzx eax, cl ; pop rdx ; ret
0x000000000059a999 : leave ; or al, 0x6b ; ret 0x1320
0x00000000005aa1dd : leave ; outsd dx, dword ptr [rsi] ; ret 0xcea3
0x00000000005b619d : leave ; push rdi ; ret
0x00000000005a76e4 : leave ; rcl byte ptr [rcx - 0x3e] ; jmp 0x5a76f5
0x0000000000552963 : leave ; ret
0x00000000005a2ef8 : leave ; ret 0x1278
0x00000000005b7ea5 : leave ; ret 0x15a3
0x000000000052b7c1 : leave ; ret 0x2e81
0x00000000005a68a8 : leave ; ret 0x347f
0x0000000000532065 : leave ; ret 0x3b81
0x000000000058d9a3 : leave ; ret 0x4577
0x000000000044d569 : leave ; ret 0x8581
0x00000000005b6dea : leave ; ret 0x90cf
0x00000000005b757a : leave ; ret 0x9a60
0x00000000005a10a2 : leave ; ret 0xbe97
0x000000000059b3c8 : leave ; ret 0xe867
0x00000000005aa543 : leave ; ret 0xead1
0x0000000000594e12 : leave ; sbb al, 0x47 ; ret
0x0000000000596833 : leave ; sbb dh, byte ptr [rdi + rdi*8 - 0x939d122] ; ret 0xf6c2
0x00000000005a1d18 : leave ; scasb al, byte ptr [rdi] ; ret 0x953d
0x00000000005b50a1 : leave ; std ; int1 ; insb byte ptr [rdi], dx ; pop rdi ; jmp 0x5b5070
0x00000000005b1ce5 : leave ; std ; ret
0x00000000004549e7 : leave ; stosb byte ptr [rdi], al ; xorps xmm2, xmm1 ; ret
0x0000000000427123 : leave ; sub dl, byte ptr [rcx] ; add byte ptr [rcx - 0x77], al ; fimul word ptr [rax - 0x77] ; ret
0x00000000004590b0 : leave ; sub eax, ecx ; ret
0x000000000046b60b : leave ; test ecx, ecx ; jg 0x46b608 ; mov dword ptr [rdi + 8], ecx ; ret
0x0000000000472a01 : leave ; test ecx, ecx ; mov rax, rdx ; jg 0x4729e8 ; ret
0x00000000004ca3d8 : leave ; test rax, rax ; je 0x4ca3fa ; mov rdi, rbx ; call rax
0x00000000005a6a37 : leave ; xor al, 0x35 ; or eax, 0xed2a2bf9 ; ret
0x0000000000510f6d : les eax, ptr [rcx + 0x3d] ; hlt ; ret 0x62c4
0x000000000044e036 : les rax, ptr [rcx + 0x39] ; jmp 0x44e004
0x000000000044f116 : les rax, ptr [rcx + 0x39] ; jmp 0x44f0e4
0x00000000005e3687 : ljmp ptr [rax + 0x10000145] ; test al, -0x18 ; call rax
0x00000000005ea0ef : ljmp ptr [rax + 0x100002f5] ; adc esi, esi ; jmp rax
0x00000000005e2e27 : ljmp ptr [rax + 0x20000120] ; je 0x5e2e1e ; jmp rax
0x00000000005e28c7 : ljmp ptr [rax + 0x30000109] ; shl ebp, 1 ; call rax
0x00000000005e5237 : ljmp ptr [rax + 0x400001b8] ; sbb esp, ebp ; jmp rax
0x00000000005e56a7 : ljmp ptr [rax + 0x400001cb] ; sahf ; in al, dx ; jmp rax
0x00000000005e1a57 : ljmp ptr [rax + 0x500000d0] ; out -0x1d, al ; jmp rax
0x00000000005e2c2f : ljmp ptr [rax + 0x50000118] ; jae 0x5e2c25 ; jmp rax
0x00000000005e350f : ljmp ptr [rax + 0x5000013e] ; jge 0x5e3507 ; jmp rax
0x00000000005e174f : ljmp ptr [rax + 0x600000c2] ; mul dl ; jmp rax
0x00000000005e6c87 : ljmp ptr [rax + 0x70000225] ; xor edi, ebp ; jmp rax
0x00000000005e1fc7 : ljmp ptr [rax + 0xe5] ; mov ch, -0x1c ; jmp rax
0x00000000005e6e3f : ljmp ptr [rax - 0x1ffffdd2] ; wait ; out dx, eax ; call rax
0x00000000005e5267 : ljmp ptr [rax - 0x1ffffe47] ; xor ebp, esp ; jmp rax
0x00000000005e334f : ljmp ptr [rax - 0x1ffffeca] ; sbb ch, al ; jmp rax
0x00000000005eb1ff : ljmp ptr [rax - 0x2ffffcc5] ; test esi, edi ; call rax
0x00000000005e703f : ljmp ptr [rax - 0x2ffffdca] ; ret
0x00000000005e53b7 : ljmp ptr [rax - 0x2ffffe42] ; in al, dx ; jmp rax
0x00000000005e923f : ljmp ptr [rax - 0x4ffffd44] ; scasd eax, dword ptr [rdi] ; jmp rax
0x00000000005e5fef : ljmp ptr [rax - 0x5ffffe0e] ; stosb byte ptr [rdi], al ; in eax, dx ; call rax
0x00000000005e5897 : ljmp ptr [rax - 0x6ffffe2d] ; ret 0xffec
0x00000000005e4fd7 : ljmp ptr [rax - 0x6ffffe51] ; xlatb ; jmp 0x5e4fe7
0x00000000005e9917 : ljmp ptr [rax - 0x7ffffd24] ; in eax, dx ; cmc ; jmp rax
0x00000000005e60d7 : ljmp ptr [rax - 0xa] ; add dword ptr [rax], eax ; push rax ; ret 0xffed
0x00000000005e1767 : ljmp ptr [rax] ; ret
0x00000000005a8cc0 : ljmp ptr [rbp - 0x6e] ; mov edi, 0xba1700f6 ; ret 0xbf6b
0x000000000059ab75 : ljmp ptr [rbx + 0x76] ; mov eax, 0xfdfd55d3 ; ret 0x3148
0x000000000040891b : ljmp ptr [rcx - 0x47beffaa] ; ret
0x00000000004eaa77 : ljmp ptr [rcx] ; ret 0xd089
0x00000000004cf3e8 : ljmp ptr [rcx] ; ret 0xff48
0x00000000005055fd : lock adc byte ptr [rsi + 0xf], ah ; jmp 0x5055ca
0x0000000000505b38 : lock adc byte ptr [rsi + 0xf], ah ; jmp 0x505b05
0x00000000004b953c : lock adc dword ptr [rax], eax ; add byte ptr [rax + 1], bh ; ret
0x0000000000412bba : lock adc dword ptr [rax], eax ; add byte ptr [rcx], dh ; fucomi st(1) ; ret
0x0000000000423c98 : lock add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x348
0x0000000000432db3 : lock add byte ptr [rax], al ; add byte ptr [rax + 0x573f3f], bh ; ret
0x0000000000417bce : lock add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 9], cl ; call rcx
0x000000000060b2e5 : lock add dword ptr [rax], eax ; clc ; adc ch, bh ; call rdx
0x00000000005e4440 : lock add dword ptr [rcx], 0xeaaf6000 ; call qword ptr [rax]
0x00000000004d55a7 : lock add dword ptr [rsi + 0xf], esp ; out dx, eax ; ret
0x00000000004f73e2 : lock dec dword ptr [rax - 0x77] ; ret
0x0000000000565d8d : lock dec dword ptr [rax - 0x77] ; ret 0x8949
0x00000000004f221e : lock dec dword ptr [rax - 0x77] ; ret 0xed31
0x00000000005e752e : lock dec dword ptr [rax] ; add al, byte ptr [rax] ; push rax ; and al, dh ; jmp qword ptr [rax]
0x00000000005e762e : lock dec dword ptr [rax] ; add r8b, byte ptr [r8] ; push rax ; and dh, al ; jmp qword ptr [rax]
0x0000000000552b89 : lock inc dword ptr [rbp - 0xc18b40] ; ret
0x0000000000552a48 : lock inc dword ptr [rbp - 0xee8b40] ; ret
0x0000000000552b88 : lock inc dword ptr ds:[rbp - 0xc18b40] ; ret
0x00000000004e1eb2 : lock or byte ptr [rsi + 0xf], ah ; jmp 0x4e1e7f
0x00000000004e1fbd : lock or byte ptr [rsi + 0xf], ah ; jmp 0x4e1f8a
0x000000000049b6cb : lodsb al, byte ptr [rsi] ; add al, 0 ; ret
0x00000000005e8e49 : lodsb al, byte ptr [rsi] ; add al, byte ptr [rax] ; cmc ; int1 ; jmp qword ptr [rax]
0x0000000000616ecd : lodsb al, byte ptr [rsi] ; add al, byte ptr [rax] ; jrcxz 0x616ecd ; jmp qword ptr [rdi]
0x00000000005e8e99 : lodsb al, byte ptr [rsi] ; add al, byte ptr [rax] ; loopne 0x5e8e99 ; int1 ; call qword ptr [rax]
0x00000000005e8e89 : lodsb al, byte ptr [rsi] ; add al, byte ptr [rax] ; sal ch, -0xf ; jmp rax
0x0000000000482c1f : lodsb al, byte ptr [rsi] ; add bl, al ; ret
0x00000000004ca2d5 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add bh, bh ; ret 0x9389
0x00000000004c61c4 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x00000000004db6fb : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; ret
0x00000000005e4f21 : lodsb al, byte ptr [rsi] ; add dword ptr [rax], eax ; loopne 0x5e4ee6 ; jmp 0x5e4f2d
0x000000000041fbe3 : lodsb al, byte ptr [rsi] ; and al, 0 ; add dword ptr [rax], eax ; add dh, dh ; ret 0xf01
0x000000000047d514 : lodsb al, byte ptr [rsi] ; and al, 0xffffffffffffffa4 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0x8949
0x00000000004673a4 : lodsb al, byte ptr [rsi] ; and al, 0xffffffffffffffb0 ; add al, byte ptr [rax] ; add byte ptr [rcx], bh ; ret
0x000000000046dfa0 : lodsb al, byte ptr [rsi] ; cmp al, 0xf ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005391a8 : lodsb al, byte ptr [rsi] ; dec dword ptr [rax - 0x77] ; ret
0x000000000057d5ba : lodsb al, byte ptr [rsi] ; int1 ; ret 0x8239
0x00000000005e4e55 : lodsb al, byte ptr [rsi] ; jmp 0x5e4e59
0x0000000000600319 : lodsb al, byte ptr [rsi] ; jmp 0x60031d
0x0000000000482c1e : lodsb al, byte ptr [rsi] ; lodsb al, byte ptr [rsi] ; add bl, al ; ret
0x0000000000598342 : lodsb al, byte ptr [rsi] ; loopne 0x598368 ; sal byte ptr [rbp - 0x2ce6c8fd], cl ; ret 0x254
0x00000000005564ad : lodsb al, byte ptr [rsi] ; mov bl, 0x21 ; ret 0x2fc2
0x000000000059b527 : lodsb al, byte ptr [rsi] ; neg byte ptr [rdx] ; sahf ; push rsi ; ret 0x38c2
0x00000000005aa822 : lodsb al, byte ptr [rsi] ; or al, byte ptr [rsi - 0x57cb9399] ; clc ; ret 0xc375
0x00000000005e66dd : lodsb al, byte ptr [rsi] ; out dx, al ; call rax
0x00000000005e6f05 : lodsb al, byte ptr [rsi] ; out dx, eax ; call qword ptr [rax]
0x00000000005e6f45 : lodsb al, byte ptr [rsi] ; out dx, eax ; call rax
0x00000000005e6ef5 : lodsb al, byte ptr [rsi] ; out dx, eax ; jmp rax
0x0000000000611db4 : lodsb al, byte ptr [rsi] ; pop rbx ; add al, byte ptr [rax] ; or byte ptr [rdx - 0xd], ch ; call qword ptr [rcx]
0x00000000005b41ee : lodsb al, byte ptr [rsi] ; push rbp ; jae 0x5b41cb ; out dx, al ; je 0x5b4255 ; ret
0x00000000005a75db : lodsb al, byte ptr [rsi] ; pushfq ; ret 0x9c69
0x0000000000512588 : lodsb al, byte ptr [rsi] ; ret
0x00000000005f84b4 : lodsb al, byte ptr [rsi] ; ret 0
0x00000000005b5719 : lodsb al, byte ptr [rsi] ; ret 0x1c5b
0x00000000005b4622 : lodsb al, byte ptr [rsi] ; ret 0x5624
0x000000000057e0f9 : lodsb al, byte ptr [rsi] ; ret 0x763c
0x0000000000597640 : lodsb al, byte ptr [rsi] ; ret 0xd6fb
0x000000000058d626 : lodsb al, byte ptr [rsi] ; ret 0xff65
0x00000000005eddb4 : lodsb al, byte ptr [rsi] ; sbb eax, dword ptr [rax] ; add al, bh ; mov ch, -0x1e ; jmp qword ptr [rax]
0x0000000000405ddd : lodsb al, byte ptr [rsi] ; str word ptr [rax - 0x77] ; ret
0x000000000060ecb4 : lodsb al, byte ptr [rsi] ; sub al, byte ptr [rdx] ; add byte ptr [rax], bh ; call qword ptr [rdx]
0x000000000060eab4 : lodsb al, byte ptr [rsi] ; sub byte ptr [rdx], al ; add byte ptr [rax], bh ; in al, dx ; jmp rdx
0x00000000005fb9b4 : lodsb al, byte ptr [rsi] ; test dword ptr [rax], 0xe9fbf800 ; call qword ptr [rsi]
0x0000000000593df0 : lodsb al, byte ptr [rsi] ; xchg eax, esi ; mov ch, -0x5c ; ret 0x9a5b
0x00000000005f56b4 : lodsb al, byte ptr [rsi] ; xchg eax, esp ; add byte ptr [rax], al ; fcomp dword ptr [rcx - 0x19] ; call rsp
0x00000000005b6ab8 : lodsb al, byte ptr [rsi] ; xor al, 1 ; ret 0x5253
0x000000000057e51e : lodsd eax, dword ptr [rsi] ; adc eax, 0x66626c1c ; ret 0x7154
0x00000000004c5aaf : lodsd eax, dword ptr [rsi] ; add al, 2 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000617005 : lodsd eax, dword ptr [rsi] ; add al, byte ptr [rax] ; fsub st(3) ; hlt ; call qword ptr [rsi]
0x0000000000616f8d : lodsd eax, dword ptr [rsi] ; add al, byte ptr [rax] ; mov al, -0x1d ; hlt ; call qword ptr [rsi]
0x0000000000616f45 : lodsd eax, dword ptr [rsi] ; add al, byte ptr [rax] ; mov bl, ah ; hlt ; jmp qword ptr [rdi]
0x0000000000616fbd : lodsd eax, dword ptr [rsi] ; add al, byte ptr [rax] ; shl bl, -0xc ; call qword ptr [rsi]
0x0000000000616fed : lodsd eax, dword ptr [rsi] ; add al, byte ptr [rax] ; shl bl, 1 ; hlt ; call qword ptr [rsi]
0x000000000048d34f : lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret 0xf20
0x00000000004c62f9 : lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000606f8d : lodsd eax, dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rbx], bl ; out dx, al ; call qword ptr [rbx]
0x00000000005e4f79 : lodsd eax, dword ptr [rsi] ; add dword ptr [rax], eax ; loopne 0x5e4f44 ; jmp 0x5e4f85
0x0000000000606f35 : lodsd eax, dword ptr [rsi] ; add dword ptr [rax], eax ; sbb bpl, sil ; call qword ptr [rcx]
0x00000000005abdbf : lodsd eax, dword ptr [rsi] ; cmp dword ptr [rsi - 0x76], 0x61f28b63 ; xchg eax, ebp ; ret
0x00000000004cfb7d : lodsd eax, dword ptr [rsi] ; in al, 0x35 ; add byte ptr [rax], al ; pop rax ; ret
0x000000000059401f : lodsd eax, dword ptr [rsi] ; insd dword ptr [rdi], dx ; cmp edi, edi ; ret 0x8087
0x00000000005783b6 : lodsd eax, dword ptr [rsi] ; jmp 0x578423
0x000000000059fffa : lodsd eax, dword ptr [rsi] ; jnp 0x5a002a ; mov es, word ptr [rbp - 0x5f] ; push rsi ; ret 0xe039
0x000000000054d09f : lodsd eax, dword ptr [rsi] ; loop 0x54d0a7 ; dec dword ptr [rax - 0x77] ; ret
0x000000000057b898 : lodsd eax, dword ptr [rsi] ; mov bl, 0x26 ; ret
0x00000000005ad912 : lodsd eax, dword ptr [rsi] ; mov cs, word ptr [rax + 0x63] ; ret
0x00000000005a279b : lodsd eax, dword ptr [rsi] ; mov esi, 0xf4e0c504 ; ret 0x77fc
0x00000000004415e9 : lodsd eax, dword ptr [rsi] ; or byte ptr [rax], al ; xor eax, eax ; pop rdx ; ret
0x00000000004315b2 : lodsd eax, dword ptr [rsi] ; or dword ptr [rax], eax ; xor eax, eax ; pop rdx ; ret
0x000000000059ea4a : lodsd eax, dword ptr [rsi] ; pop rax ; ret 0x2910
0x0000000000596b02 : lodsd eax, dword ptr [rsi] ; pop rdi ; ret 0xd710
0x00000000005a54b8 : lodsd eax, dword ptr [rsi] ; push rdx ; push rsp ; out -0x15, al ; ret 0x6449
0x00000000005b111e : lodsd eax, dword ptr [rsi] ; ret
0x00000000005ac805 : lodsd eax, dword ptr [rsi] ; ret 0x82b3
0x00000000005ab33d : lodsd eax, dword ptr [rsi] ; ret 0x8362
0x000000000055eedd : lodsd eax, dword ptr [rsi] ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000402dbf : lodsd eax, dword ptr [rsi] ; xchg eax, ebp ; or al, 0 ; xor eax, eax ; pop rbx ; ret
0x000000000059ac76 : lodsd eax, dword ptr [rsi] ; xlatb ; ret 0x8a8d
0x000000000057b897 : lodsd eax, dword ptr es:[rsi] ; mov bl, 0x26 ; ret
0x00000000005b111d : lodsq rax, qword ptr [rsi] ; ret
0x000000000041ab6a : loop 0x41ab57 ; ret
0x000000000041b8d5 : loop 0x41b902 ; ret 0x3e8
0x000000000041d0bd : loop 0x41d086 ; add al, 0x40 ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000437c78 : loop 0x437c64 ; ret 0xfca2
0x000000000044d413 : loop 0x44d41c ; add al, byte ptr [rax] ; adc byte ptr [rcx + 9], al ; ret 0x8141
0x0000000000454c33 : loop 0x454c25 ; mov ecx, 0x8948000e ; ret
0x00000000004793cc : loop 0x4793be ; mov cs, word ptr [rax - 0x7cb70008] ; ret
0x000000000049e917 : loop 0x49e91d ; dec dword ptr [rax - 0x77] ; ret
0x000000000049e916 : loop 0x49e91e ; dec dword ptr [rax - 0x77] ; ret
0x00000000004a1aee : loop 0x4a1a76 ; add byte ptr [rax], al ; add byte ptr [rcx], cl ; ret 0xd889
0x00000000004a33d1 : loop 0x4a3359 ; add byte ptr [rax], al ; add byte ptr [rcx], cl ; ret 0x8944
0x00000000004a4c8a : loop 0x4a4d09 ; add al, byte ptr [rax] ; xor eax, eax ; pop rbx ; ret
0x00000000004c557e : loop 0x4c55cd ; mov ecx, ebx ; call r14
0x00000000004c5894 : loop 0x4c58e6 ; mov ecx, ebp ; mov r8, r14 ; call r15
0x00000000004d34cd : loop 0x4d3512 ; call rdi
0x00000000004da418 : loop 0x4da404 ; ret 0x193
0x00000000004e60ea : loop 0x4e613f ; mov ecx, edi ; mov r8d, r14d ; call rax
0x00000000004e6126 : loop 0x4e617b ; mov ecx, edi ; mov r8d, r14d ; call rax
0x00000000004e620d : loop 0x4e6262 ; mov ecx, edi ; mov r8d, r14d ; call rax
0x00000000004e6270 : loop 0x4e62c5 ; mov ecx, edi ; mov r8d, r14d ; call rax
0x00000000004f4849 : loop 0x4f483b ; add dword ptr [rdx], 0x89480000 ; ret
0x00000000004f5f0a : loop 0x4f5f3b ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000004f620a : loop 0x4f6238 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000004f6b0a : loop 0x4f6b2f ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000004fb927 : loop 0x4fb931 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004fdfed : loop 0x4fdfe7 ; ret 0x7440
0x0000000000503fed : loop 0x50404f ; pop r14 ; pop rbp ; ret
0x0000000000505d85 : loop 0x505d8c ; fld dword ptr [rcx - 0x3f] ; ret 0x4511
0x0000000000505e6d : loop 0x505e74 ; fld dword ptr [rcx - 0x3f] ; ret 0x4511
0x0000000000505f55 : loop 0x505f5c ; fld dword ptr [rcx - 0x3f] ; ret 0x4511
0x000000000050603d : loop 0x506044 ; fld dword ptr [rcx - 0x3f] ; ret 0x4511
0x000000000050613e : loop 0x506145 ; fld dword ptr [rcx - 0x3f] ; ret 0x450e
0x0000000000506225 : loop 0x50622c ; fld dword ptr [rcx - 0x3f] ; ret 0x450e
0x000000000050630d : loop 0x506314 ; fld dword ptr [rcx - 0x3f] ; ret 0x450e
0x00000000005063f5 : loop 0x5063fc ; fld dword ptr [rcx - 0x3f] ; ret 0x450e
0x00000000005064fa : loop 0x50648d ; push rsi ; or byte ptr [rax], al ; fld dword ptr [rcx - 0x3f] ; ret 0x4510
0x00000000005065d6 : loop 0x506569 ; push rsi ; sbb byte ptr [rax], al ; fld dword ptr [rcx - 0x3f] ; ret 0x4510
0x00000000005066b1 : loop 0x506644 ; push rsi ; sub byte ptr [rax], al ; fld dword ptr [rcx - 0x3f] ; ret 0x4510
0x000000000050678d : loop 0x506720 ; push rsi ; cmp byte ptr [rax], al ; fld dword ptr [rcx - 0x3f] ; ret 0x4510
0x0000000000506896 : loop 0x50689d ; fld dword ptr [rcx - 0x3f] ; ret 0x410f
0x000000000050698a : loop 0x506991 ; fld dword ptr [rcx - 0x3f] ; ret 0x410f
0x0000000000506a7e : loop 0x506a85 ; fld dword ptr [rcx - 0x3f] ; ret 0x410f
0x0000000000506b72 : loop 0x506b79 ; fld dword ptr [rcx - 0x3f] ; ret 0x410f
0x00000000005073b5 : loop 0x5073de ; jae 0x5073cc ; add rax, 0x19 ; ret
0x000000000050f8c0 : loop 0x50f849 ; ret 0x1f74
0x00000000005345be : loop 0x534586 ; ret
0x000000000054d0a0 : loop 0x54d0a6 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000561c70 : loop 0x561c69 ; sbb rax, rax ; and rax, 1 ; ret
0x0000000000561ca0 : loop 0x561c99 ; sbb rax, rax ; and rax, 1 ; ret
0x0000000000564c84 : loop 0x564cac ; or rax, rdx ; ret
0x000000000057ca8c : loop 0x57cae4 ; pop rdi ; ja 0x57ca6a ; ret
0x000000000057e28f : loop 0x57e214 ; ret
0x000000000057e28e : loop 0x57e215 ; ret
0x0000000000594a02 : loop 0x5949a5 ; ret 0x7a96
0x0000000000599a11 : loop 0x599a68 ; ret 0x74a2
0x000000000059fff8 : loop 0x5a0000 ; lodsd eax, dword ptr [rsi] ; jnp 0x5a002c ; mov es, word ptr [rbp - 0x5f] ; push rsi ; ret 0xe039
0x00000000005a0d86 : loop 0x5a0d56 ; adc esi, ebp ; ret 0xb687
0x00000000005a2798 : loop 0x5a27f1 ; shr byte ptr [rbp - 0x1f3afb42], cl ; hlt ; ret 0x77fc
0x00000000005a3001 : loop 0x5a3065 ; ret
0x00000000005a385f : loop 0x5a37fa ; jmp qword ptr [rbx]
0x00000000005a50c2 : loop 0x5a5086 ; ret 0x62a8
0x00000000005a5114 : loop 0x5a5121 ; jbe 0x5a50dd ; ret
0x00000000005a5114 : loop 0x5a5122 ; jbe 0x5a50de ; ret
0x00000000005b418e : loop 0x5b4183 ; ret
0x00000000005b5bb8 : loop 0x5b5b44 ; in al, -0x4b ; ret 0xf99f
0x00000000005e12d6 : loop 0x5e12e0 ; mov eax, 0x800000af ; adc edx, esp ; call rax
0x00000000005e1526 : loop 0x5e1530 ; mov eax, 0x300000b9 ; ja 0x5e151a ; call rax
0x00000000005e15b6 : loop 0x5e15c0 ; or byte ptr [rax + rax - 0x1d64f000], bh ; jmp qword ptr [rax]
0x00000000005e176e : loop 0x5e1772 ; ret
0x00000000005e2975 : loop 0x5e295e ; call qword ptr [rax]
0x00000000005e476d : loop 0x5e475b ; jmp rax
0x00000000005e5955 : loop 0x5e5945 ; jmp qword ptr [rax]
0x00000000005e5bd1 : loop 0x5e5bda ; add byte ptr [rax + 0x32], dh ; in eax, dx ; jmp qword ptr [rax]
0x00000000005e816d : loop 0x5e8161 ; jmp rax
0x00000000005e817d : loop 0x5e8171 ; call qword ptr [rax]
0x00000000005ed2da : loop 0x5ed2dd ; ret
0x000000000060ea11 : loop 0x60ea07 ; call rsi
0x000000000040344c : loope 0x403458 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000040ca1f : loope 0x40ca25 ; ror byte ptr [rax - 1], 1 ; ret
0x0000000000429aed : loope 0x429afd ; dec ecx ; mov eax, ecx ; ret
0x0000000000444e5d : loope 0x444ea6 ; xor edx, eax ; ret
0x0000000000444e5d : loope 0x444ea8 ; xor edx, eax ; ret
0x000000000044536b : loope 0x4453b4 ; xor edx, eax ; ret
0x000000000044536b : loope 0x4453b6 ; xor edx, eax ; ret
0x000000000046147e : loope 0x4614cf ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000466907 : loope 0x4668f4 ; xchg eax, ebx ; ret
0x0000000000466933 : loope 0x466920 ; ret
0x0000000000466a53 : loope 0x466a40 ; ret 0xf
0x00000000004b84fd : loope 0x4b855b ; ret
0x00000000004bca28 : loope 0x4bca29 ; dec dword ptr [rax - 0x77] ; ret
0x00000000004be52b : loope 0x4be4f3 ; ret 0xf789
0x00000000004c297b : loope 0x4c2967 ; jmp qword ptr [rbx]
0x00000000004ca88b : loope 0x4ca8ae ; add byte ptr [rax], al ; xor eax, eax ; pop rdx ; ret
0x00000000004ecc1c : loope 0x4ecc22 ; dec dword ptr [rax - 0x77] ; ret
0x00000000004f35fc : loope 0x4f364e ; add esp, 8 ; pop rbx ; pop r14 ; ret
0x0000000000508cb9 : loope 0x508c8f ; ret
0x000000000050eb1e : loope 0x50eb0b ; pop rsp ; ret 0xffff
0x0000000000523ce9 : loope 0x523cbf ; ret
0x0000000000537689 : loope 0x53765f ; ret
0x00000000005469fe : loope 0x546985 ; ret
0x0000000000547e23 : loope 0x547e23 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000551565 : loope 0x55156d ; mov eax, ecx ; pop rbx ; ret
0x0000000000551b45 : loope 0x551b4c ; mov eax, ecx ; ret
0x0000000000551be7 : loope 0x551bee ; mov eax, ecx ; ret
0x0000000000564abe : loope 0x564acf ; shr eax, cl ; and eax, 0x1f ; ret
0x0000000000579611 : loope 0x57964d ; insd dword ptr [rdi], dx ; insd dword ptr [rdi], dx ; push rcx ; ret 0xe445
0x0000000000579610 : loope 0x57964e ; insd dword ptr [rdi], dx ; insd dword ptr [rdi], dx ; push rcx ; ret 0xe445
0x0000000000579671 : loope 0x5796ad ; insd dword ptr [rdi], dx ; insd dword ptr [rdi], dx ; push rcx ; ret 0xe445
0x0000000000579670 : loope 0x5796ae ; insd dword ptr [rdi], dx ; insd dword ptr [rdi], dx ; push rcx ; ret 0xe445
0x00000000005796f1 : loope 0x57972d ; insd dword ptr [rdi], dx ; insd dword ptr [rdi], dx ; push rcx ; ret 0xe445
0x00000000005796f0 : loope 0x57972e ; insd dword ptr [rdi], dx ; insd dword ptr [rdi], dx ; push rcx ; ret 0xe445
0x00000000005797b1 : loope 0x5797ed ; insd dword ptr [rdi], dx ; insd dword ptr [rdi], dx ; push rcx ; ret 0xe445
0x00000000005797b0 : loope 0x5797ee ; insd dword ptr [rdi], dx ; insd dword ptr [rdi], dx ; push rcx ; ret 0xe445
0x00000000005798b1 : loope 0x5798ed ; insd dword ptr [rdi], dx ; insd dword ptr [rdi], dx ; push rcx ; ret 0xe445
0x00000000005798b0 : loope 0x5798ee ; insd dword ptr [rdi], dx ; insd dword ptr [rdi], dx ; push rcx ; ret 0xe445
0x0000000000579a31 : loope 0x579a6d ; insd dword ptr [rdi], dx ; insd dword ptr [rdi], dx ; push rcx ; ret 0xe445
0x0000000000579a30 : loope 0x579a6e ; insd dword ptr [rdi], dx ; insd dword ptr [rdi], dx ; push rcx ; ret 0xe445
0x0000000000579c31 : loope 0x579c6d ; insd dword ptr [rdi], dx ; insd dword ptr [rdi], dx ; push rcx ; ret 0xe445
0x0000000000579c30 : loope 0x579c6e ; insd dword ptr [rdi], dx ; insd dword ptr [rdi], dx ; push rcx ; ret 0xe445
0x0000000000579f31 : loope 0x579f6d ; insd dword ptr [rdi], dx ; insd dword ptr [rdi], dx ; push rcx ; ret 0xe445
0x0000000000579f30 : loope 0x579f6e ; insd dword ptr [rdi], dx ; insd dword ptr [rdi], dx ; push rcx ; ret 0xe445
0x000000000057b548 : loope 0x57b569 ; jmp 0xfffffffff56fa86e
0x000000000057cf90 : loope 0x57cfa5 ; sub dh, cl ; movsd dword ptr [rdi], dword ptr [rsi] ; wait ; loope 0x57cfc8 ; push rdx ; ret 0xd5a6
0x000000000057cf96 : loope 0x57cfc2 ; push rdx ; ret 0xd5a6
0x000000000057e28b : loope 0x57e250 ; int1 ; loop 0x57e218 ; ret
0x000000000057e579 : loope 0x57e572 ; ret
0x000000000058e152 : loope 0x58e19b ; ret 0x5325
0x000000000059617f : loope 0x5961ce ; in al, dx ; fdiv qword ptr [rbx + rax*2 - 0x6e] ; ret
0x000000000059c352 : loope 0x59c397 ; cdq ; adc al, -0x23 ; ret 0x8c0e
0x00000000005a82e5 : loope 0x5a8321 ; je 0x5a832d ; ret
0x00000000005b2ea6 : loope 0x5b2edf ; mov word ptr [rdi - 0x16ce7fba], ds ; ret 0xa287
0x00000000005b57fd : loope 0x5b57ce ; ret
0x00000000005e2965 : loope 0x5e294e ; call rax
0x00000000005e812d : loope 0x5e8121 ; jmp qword ptr [rax]
0x00000000005e9aa9 : loope 0x5e9ab3 ; add byte ptr [rax - 0xd], dl ; cmc ; call rax
0x00000000005eb75d : loope 0x5eb758 ; call rax
0x00000000005f20e9 : loope 0x5f20d1 ; call qword ptr [rbx]
0x00000000005f8789 : loope 0x5f8775 ; call qword ptr [rcx]
0x00000000005f8819 : loope 0x5f8805 ; jmp rcx
0x0000000000616dc1 : loope 0x616db9 ; call qword ptr [rax]
0x0000000000408adf : loopne 0x408b32 ; add ebx, dword ptr [rsp] ; jmp 0x408af3
0x000000000040b062 : loopne 0x40b0c8 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041157a : loopne 0x411581 ; or eax, ecx ; ret
0x000000000041f63e : loopne 0x41f638 ; ret 0x4c02
0x000000000041f63d : loopne 0x41f639 ; ret 0x4c02
0x000000000042662b : loopne 0x426634 ; add byte ptr [rax], al ; ret
0x000000000042c1de : loopne 0x42c176 ; mov rax, qword ptr [rdi + 0x20] ; ret
0x000000000042c3b8 : loopne 0x42c3be ; add byte ptr [rax], al ; jmp rax
0x000000000042d2f0 : loopne 0x42d30f ; or rax, rdx ; ret
0x000000000042df8c : loopne 0x42df78 ; or dword ptr [rax], eax ; xor eax, eax ; pop rdx ; ret
0x00000000004313f0 : loopne 0x431456 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000443ce1 : loopne 0x443d47 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000451a6d : loopne 0x451a64 ; ret
0x0000000000451add : loopne 0x451ad4 ; ret
0x0000000000458262 : loopne 0x4582df ; push rdi ; add byte ptr [rcx - 0x48], al ; ret 1
0x00000000004606ff : loopne 0x460765 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000462f54 : loopne 0x462fba ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000046afb0 : loopne 0x46afbc ; or eax, ebx ; mov dword ptr [rsi + 0x14], eax ; pop rbx ; ret
0x000000000046b593 : loopne 0x46b598 ; ret
0x000000000046ba27 : loopne 0x46ba76 ; mov eax, edi ; pop rbx ; pop r14 ; pop r15 ; ret
0x0000000000478a57 : loopne 0x478abd ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000479d17 : loopne 0x479d7d ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000048c08c : loopne 0x48c097 ; add al, 0 ; xor eax, eax ; pop rdx ; ret
0x000000000048d1ad : loopne 0x48d1b2 ; ret
0x000000000048d794 : loopne 0x48d7d7 ; add byte ptr [rax + 1], bh ; ret
0x000000000048f176 : loopne 0x48f1d9 ; pop r14 ; pop r15 ; ret
0x000000000048f3cf : loopne 0x48f3c2 ; sbb ebp, dword ptr [rcx] ; idiv edi ; cdqe ; pop rdx ; ret
0x000000000049bc20 : loopne 0x49bc86 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000049be29 : loopne 0x49be9a ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000049f2c4 : loopne 0x49f2cf ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000004ab052 : loopne 0x4ab05d ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; ret
0x00000000004b1b1f : loopne 0x4b1b85 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004b948c : loopne 0x4b94c3 ; add dword ptr [rax], eax ; xor eax, eax ; pop rdx ; ret
0x00000000004b956a : loopne 0x4b955d ; and byte ptr [rax], bl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004bb1bd : loopne 0x4bb223 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004bd1e0 : loopne 0x4bd246 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004c7414 : loopne 0x4c744e ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0x00000000004cb34d : loopne 0x4cb2e6 ; pop rbx ; add byte ptr [rax + 1], bh ; ret
0x00000000004d67be : loopne 0x4d6779 ; add byte ptr [rax], al ; ret 0x8401
0x00000000004db6ce : loopne 0x4db734 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004e5f55 : loopne 0x4e5fb4 ; ret
0x00000000004e6345 : loopne 0x4e63a4 ; ret
0x00000000004e8568 : loopne 0x4e85ba ; add esp, 8 ; pop rbx ; pop r14 ; ret
0x00000000004f4bd7 : loopne 0x4f4be3 ; add rax, qword ptr [rdi] ; ret
0x000000000050459c : loopne 0x5045fe ; pop r14 ; pop rbp ; ret
0x0000000000504637 : loopne 0x50468a ; add esp, 0x10 ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000050f780 : loopne 0x50f7e6 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000005128dc : loopne 0x512904 ; shr eax, 5 ; ret
0x00000000005141cf : loopne 0x5141c6 ; ret
0x0000000000520669 : loopne 0x52062e ; ret 0x105
0x0000000000520668 : loopne 0x52062f ; ret 0x105
0x000000000053811b : loopne 0x538181 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000053819b : loopne 0x538201 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000005395aa : loopne 0x5395fb ; test edi, edi ; je 0x5395ba ; call r14
0x0000000000547f38 : loopne 0x547f38 ; dec dword ptr [rax - 0x77] ; ret
0x00000000005485cf : loopne 0x5485d5 ; pop rdx ; ret
0x00000000005554e1 : loopne 0x55551a ; movdqu xmmword ptr [rdx], xmm3 ; ret
0x0000000000557319 : loopne 0x5572f4 ; ret 0x4b2e
0x000000000055af6c : loopne 0x55af59 ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000055bd0a : loopne 0x55bd14 ; xor eax, 3 ; pop rbx ; ret
0x000000000055c12f : loopne 0x55c139 ; xor eax, 3 ; pop rbx ; ret
0x000000000055d3d7 : loopne 0x55d3c3 ; ret
0x000000000055e363 : loopne 0x55e369 ; add byte ptr [rax], al ; ret
0x000000000055e96e : loopne 0x55e901 ; enter 0x415b, 0x5e ; pop r15 ; ret
0x000000000056038f : loopne 0x5603f5 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000561c77 : loopne 0x561c7c ; ret
0x0000000000561ca7 : loopne 0x561cac ; ret
0x0000000000564ac3 : loopne 0x564ae7 ; ret
0x0000000000593dee : loopne 0x593df7 ; lodsb al, byte ptr [rsi] ; xchg eax, esi ; mov ch, -0x5c ; ret 0x9a5b
0x0000000000594d28 : loopne 0x594d8a ; nop ; ret 0x40fb
0x0000000000595b3e : loopne 0x595b2c ; ret 0xb54d
0x00000000005974ef : loopne 0x59755f ; ret 0xda27
0x00000000005975ef : loopne 0x5975c2 ; xchg eax, esp ; ret
0x0000000000598343 : loopne 0x598367 ; sal byte ptr [rbp - 0x2ce6c8fd], cl ; ret 0x254
0x00000000005a0bf6 : loopne 0x5a0c7b ; xchg eax, ebp ; lahf ; salc ; sub byte ptr [rdx], -0x1e ; ret 0x60a
0x00000000005a1415 : loopne 0x5a139d ; ret 0x8f8d
0x00000000005a17a1 : loopne 0x5a1788 ; sbb al, 0x66 ; out dx, al ; push rax ; ret
0x00000000005a17a0 : loopne 0x5a1789 ; sbb al, 0x66 ; out dx, al ; push rax ; ret
0x00000000005a279f : loopne 0x5a2797 ; ret 0x77fc
0x00000000005a6578 : loopne 0x5a65c7 ; ret 0xe976
0x00000000005b721f : loopne 0x5b727b ; int1 ; leave ; leave ; ret
0x00000000005b75b0 : loopne 0x5b75d8 ; ret
0x00000000005d6814 : loopne 0x5d67fa ; ret 0xc822
0x00000000005d6b40 : loopne 0x5d6b27 ; ret
0x00000000005d7012 : loopne 0x5d6ff6 ; ret 0xe022
0x00000000005d7419 : loopne 0x5d73ff ; ret 0xa427
0x00000000005d75d1 : loopne 0x5d75b8 ; ret
0x00000000005df2c8 : loopne 0x5df295 ; push rbp ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dl, ch ; ret 0x55
0x00000000005e30f5 : loopne 0x5e30e0 ; call rax
0x00000000005e4735 : loopne 0x5e4723 ; jmp qword ptr [rax]
0x00000000005e4aec : loopne 0x5e4b45 ; jmp 0x5e4af2
0x00000000005e4f24 : loopne 0x5e4ee3 ; jmp 0x5e4f2a
0x00000000005e4f7c : loopne 0x5e4f41 ; jmp 0x5e4f82
0x00000000005e5214 : loopne 0x5e521a ; in al, dx ; jmp qword ptr [rax]
0x00000000005e5270 : loopne 0x5e5232 ; add dword ptr [rax], eax ; nop ; xor al, 0xffffffffffffffec ; call qword ptr [rax]
0x00000000005e526c : loopne 0x5e52a4 ; in al, dx ; jmp rax
0x00000000005e5b69 : loopne 0x5e5b72 ; add al, dh ; xor ch, ch ; call rax
0x00000000005e5f54 : loopne 0x5e5ef3 ; in eax, dx ; call rax
0x00000000005e6194 : loopne 0x5e61be ; out dx, al ; jmp rax
0x00000000005e64dc : loopne 0x5e6475 ; out dx, al ; call qword ptr [rax]
0x00000000005e669c : loopne 0x5e6647 ; out dx, al ; call rax
0x00000000005e69b4 : loopne 0x5e69a1 ; out dx, al ; call qword ptr [rax]
0x00000000005e6be4 : loopne 0x5e6bea ; out dx, eax ; jmp qword ptr [rax]
0x00000000005e6c04 : loopne 0x5e6c0f ; out dx, eax ; call rax
0x00000000005e6e44 : loopne 0x5e6de4 ; out dx, eax ; call rax
0x00000000005e718c : loopne 0x5e7169 ; out dx, eax ; jmp qword ptr [rax]
0x00000000005e7264 : loopne 0x5e725b ; out dx, eax ; jmp rax
0x00000000005e7274 : loopne 0x5e726c ; out dx, eax ; jmp qword ptr [rax]
0x00000000005e80d5 : loopne 0x5e80c9 ; call qword ptr [rax]
0x00000000005e80d4 : loopne 0x5e80ca ; call qword ptr [rax]
0x00000000005e89f4 : loopne 0x5e898e ; int1 ; call qword ptr [rax]
0x00000000005e8e9c : loopne 0x5e8e96 ; int1 ; call qword ptr [rax]
0x00000000005e9098 : loopne 0x5e9056 ; add al, byte ptr [rax] ; nop ; jp 0x5e9098 ; call qword ptr [rax]
0x00000000005e905c : loopne 0x5e90c2 ; jmp rax
0x00000000005e93b5 : loopne 0x5e93ad ; jmp qword ptr [rax - 0x3d]
0x00000000005e9884 : loopne 0x5e9868 ; cmc ; call rax
0x00000000005e9a19 : loopne 0x5e9a23 ; add byte ptr [rax], dh ; cmc ; jmp qword ptr [rax]
0x00000000005e9a69 : loopne 0x5e9a73 ; add al, dl ; cmc ; call qword ptr [rax]
0x00000000005ea508 : loopne 0x5ea516 ; add eax, dword ptr [rax] ; rcr byte ptr [rdi - 0xa] ; call qword ptr [rax]
0x00000000005eaf18 : loopne 0x5eaf4e ; add eax, dword ptr [rax] ; rcl byte ptr [rdi], -9 ; call qword ptr [rax]
0x00000000005ec14c : loopne 0x5ec1c4 ; clc ; jmp rax
0x00000000005ecfe9 : loopne 0x5ecfce ; jmp rdi
0x00000000005f86c9 : loopne 0x5f86b5 ; call qword ptr [rsi]
0x00000000005f86e1 : loopne 0x5f86cd ; call qword ptr [rsi]
0x00000000005fb711 : loopne 0x5fb6fe ; jmp rdx
0x0000000000600170 : loopne 0x600108 ; jmp 0x600176
0x0000000000601dd0 : loopne 0x601d68 ; in al, dx ; jmp qword ptr [rbx]
0x00000000006022a0 : loopne 0x602246 ; in al, dx ; call qword ptr [rbx]
0x0000000000602600 : loopne 0x6025b7 ; in al, dx ; jmp qword ptr [rdi]
0x00000000006046e0 : loopne 0x604762 ; in eax, dx ; jmp qword ptr [rax]
0x00000000006095c0 : loopne 0x609565 ; out dx, al ; call qword ptr [rcx]
0x0000000000609c30 : loopne 0x609be9 ; out dx, al ; call qword ptr [rbx]
0x000000000060f860 : loopne 0x60f876 ; call qword ptr [rcx]
0x000000000060fa40 : loopne 0x60fa59 ; call qword ptr [rax]
0x0000000000611d40 : loopne 0x611dae ; call qword ptr [rcx]
0x0000000000611ef0 : loopne 0x611f5e ; call qword ptr [rdi]
0x0000000000612590 : loopne 0x612521 ; call qword ptr [rsi]
0x0000000000617020 : loopne 0x617008 ; hlt ; call qword ptr [rsi]
0x0000000000617e40 : loopne 0x617e3b ; hlt ; call rdi
0x00000000005e672d : mov ah, -0x12 ; call qword ptr [rax]
0x0000000000609c31 : mov ah, -0x12 ; call qword ptr [rbx]
0x00000000005e44b5 : mov ah, -0x16 ; call rax
0x00000000005f6309 : mov ah, -0x19 ; jmp rax
0x00000000005f3f71 : mov ah, -0x1a ; call qword ptr [rcx]
0x00000000005f3f89 : mov ah, -0x1a ; jmp rdx
0x00000000006095bc : mov ah, -0x2d ; add dword ptr [rax], eax ; loopne 0x609569 ; out dx, al ; call qword ptr [rcx]
0x000000000059963f : mov ah, -0x31 ; jl 0x599649 ; ffree st(7) ; ret 0x4823
0x00000000005f85bc : mov ah, -0x3d ; add byte ptr [rax], al ; nop ; fld1 ; jmp rsi
0x00000000005324f9 : mov ah, -0x3f ; jns 0x5324d7 ; ret
0x0000000000536cdc : mov ah, -0x3f ; ret 0x105
0x00000000006081bc : mov ah, -0x41 ; add dword ptr [rax], eax ; sar byte ptr [rdi], -0x12 ; call qword ptr [rcx]
0x00000000006176bc : mov ah, -0x4c ; add al, byte ptr [rax] ; and dh, 0xf4 ; jmp qword ptr [rdi]
0x00000000005d70e2 : mov ah, -0x4d ; sbb bl, byte ptr [rax + 0x52] ; mov byte ptr [rsi], -0x3c ; ret 0x3848
0x00000000005d68e0 : mov ah, -0x4d ; xchg dword ptr [rdi], esi ; pop rax ; push rdx ; sbb al, spl ; ret 0x6c6
0x00000000006174bc : mov ah, -0x4e ; add al, byte ptr [rax] ; and ch, 0xf4 ; call qword ptr [rsi]
0x00000000005a9c70 : mov ah, -0x4f ; mov dl, 0xd ; adc byte ptr [rbx], bl ; cmc ; ret 0x1d0d
0x0000000000616fbc : mov ah, -0x53 ; add al, byte ptr [rax] ; shl bl, -0xc ; call qword ptr [rsi]
0x00000000005a87ec : mov ah, -0x54 ; ret
0x0000000000616dbc : mov ah, -0x55 ; add al, byte ptr [rax] ; shl cl, 1 ; hlt ; call qword ptr [rax]
0x0000000000577f20 : mov ah, -0x61 ; outsd dx, dword ptr [rsi] ; ret
0x000000000059bcc2 : mov ah, -0x62 ; std ; ret
0x0000000000594a9e : mov ah, -0x71 ; iretd ; jne 0x594a40 ; jmp qword ptr [rbx]
0x0000000000614bbc : mov ah, -0x77 ; add al, byte ptr [rax] ; adc byte ptr [rcx - 0xc], al ; call qword ptr [rdx]
0x00000000005426e4 : mov ah, -0xc ; dec dword ptr [rax - 0x77] ; ret 0xdb31
0x00000000005b46a2 : mov ah, -0xc ; ret
0x000000000059fdda : mov ah, -0xe ; xlatb ; xor byte ptr [rbp - 0x30], ah ; ret 0x3ef2
0x00000000004f9f27 : mov ah, -7 ; dec dword ptr [rax - 0x77] ; ret
0x000000000055e2f2 : mov ah, 0 ; add byte ptr [rax], al ; ret
0x00000000005fdabc : mov ah, 0x18 ; add dword ptr [rax], eax ; nop ; ret
0x00000000005b331c : mov ah, 0x18 ; ret
0x0000000000598f2c : mov ah, 0x19 ; jmp rcx
0x000000000060e4bc : mov ah, 0x22 ; add al, byte ptr [rax] ; push rax ; mov bh, -0xe ; jmp qword ptr [rax]
0x000000000059ddcc : mov ah, 0x2d ; ret
0x000000000059e124 : mov ah, 0x4c ; ret
0x000000000059ee86 : mov ah, 0x58 ; xchg eax, ebx ; xor al, 0xffffffffffffffcc ; ret
0x0000000000611ebc : mov ah, 0x5c ; add al, byte ptr [rax] ; shr byte ptr [rcx - 0xd], 1 ; call qword ptr [rbx]
0x000000000057cb1b : mov ah, 0x5d ; xor al, 0xffffffffffffffff ; ret 0xfd45
0x000000000042f2fd : mov ah, 0xd ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005e5161 : mov ah, 1 ; add byte ptr [rax - 0x15], al ; jmp 0x5e516d
0x0000000000617665 : mov ah, 2 ; add al, bh ; in eax, -0xc ; call qword ptr [rax]
0x0000000000402e52 : mov ah, 2 ; add byte ptr [rax + 1], bh ; pop rdx ; ret
0x00000000006176a5 : mov ah, 2 ; add byte ptr [rax - 0x1a], bh ; hlt ; call qword ptr [rdi]
0x0000000000617218 : mov ah, ah ; hlt ; call qword ptr [rsi]
0x00000000005e2ee5 : mov ah, bh ; jmp qword ptr [rax]
0x00000000005f5e29 : mov ah, bh ; jmp qword ptr [rdx]
0x00000000005b6592 : mov ah, byte ptr [rax] ; mov ebx, edi ; ret
0x0000000000596d57 : mov ah, byte ptr [rdx + rsi*2 - 0x317b7a83] ; ret 0x370f
0x0000000000417bcd : mov al, -0x10 ; add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 9], cl ; call rcx
0x00000000005e995c : mov al, -0x10 ; cmc ; jmp rax
0x000000000057da30 : mov al, -0x10 ; in al, dx ; adc esi, dword ptr [rdx - 0x4d] ; call rbx
0x00000000006099b9 : mov al, -0x12 ; call qword ptr [rbx]
0x00000000006099e9 : mov al, -0x12 ; call rsi
0x0000000000605151 : mov al, -0x13 ; call qword ptr [rsi]
0x0000000000606430 : mov al, -0x13 ; in eax, dx ; jmp qword ptr [rax]
0x0000000000605139 : mov al, -0x13 ; jmp qword ptr [rsi]
0x00000000005a6183 : mov al, -0x15 ; sub qword ptr [r14 + rdx*8 + 0x2e], 0x7e ; sahf ; ret 0x54c5
0x00000000005e8d64 : mov al, -0x16 ; int1 ; jmp qword ptr [rax]
0x00000000005f61c1 : mov al, -0x19 ; call qword ptr [rsi]
0x00000000005f61d9 : mov al, -0x19 ; jmp qword ptr [rdx]
0x0000000000616f90 : mov al, -0x1d ; hlt ; call qword ptr [rsi]
0x00000000005eee91 : mov al, -0x1d ; jmp qword ptr [rdx]
0x00000000005b08b3 : mov al, -0x22 ; add dword ptr [rdx - 0xd], 0x16 ; ret
0x00000000005e5ab0 : mov al, -0x23 ; add dword ptr [rax], eax ; mov al, 0x18 ; in eax, dx ; call rax
0x00000000005e93ac : mov al, -0x24 ; push qword ptr [rax] ; ret
0x00000000005e9880 : mov al, -0x26 ; add al, byte ptr [rax] ; loopne 0x5e986c ; cmc ; call rax
0x000000000058dc79 : mov al, -0x2e ; ret
0x000000000057d7f0 : mov al, -0x38 ; scasd eax, dword ptr [rdi] ; cdq ; xchg eax, ecx ; ret
0x00000000005ab7df : mov al, -0x3c ; ret 0xc5cc
0x00000000005eaa9c : mov al, -0x3d ; idiv bh ; pop rax ; sbb al, 3 ; add al, al ; ret
0x00000000005e54a0 : mov al, -0x3e ; add dword ptr [rax], eax ; adc byte ptr [rdi - 0x14], bl ; call rax
0x00000000005ac007 : mov al, -0x3e ; ret
0x00000000005e586c : mov al, -0x48 ; in al, dx ; call rax
0x00000000005e6754 : mov al, -0x48 ; out dx, al ; call rax
0x00000000005a87eb : mov al, -0x4c ; lodsb al, byte ptr [rsi] ; ret
0x0000000000613370 : mov al, -0x51 ; call rdi
0x0000000000616c80 : mov al, -0x51 ; hlt ; call qword ptr [rcx]
0x00000000005e9244 : mov al, -0x51 ; jmp rax
0x00000000005e97c4 : mov al, -0x52 ; cmc ; call rax
0x00000000005e4f20 : mov al, -0x54 ; add dword ptr [rax], eax ; loopne 0x5e4ee7 ; jmp 0x5e4f2e
0x0000000000405e2c : mov al, -0x55 ; str word ptr [rax - 0x77] ; ret
0x00000000005e6ec4 : mov al, -0x58 ; out dx, eax ; jmp qword ptr [rax]
0x00000000005e8d08 : mov al, -0x59 ; add al, byte ptr [rax] ; jo 0x5e8cf8 ; int1 ; jmp rax
0x000000000055c05c : mov al, -0x5e ; clc ; dec dword ptr [rax - 0x7d] ; ret
0x00000000005e91dc : mov al, -0x66 ; jmp rax
0x000000000060ded0 : mov al, -0x67 ; call qword ptr [rbx]
0x00000000005e55d4 : mov al, -0x75 ; in al, dx ; jmp qword ptr [rax]
0x000000000050be0c : mov al, -0x7d ; cmc ; dec dword ptr [rax - 0x77] ; ret
0x00000000005a5501 : mov al, -0xa ; jle 0x5a552a ; ret
0x00000000005e9b5c : mov al, -0xc ; cmc ; jmp rax
0x0000000000613391 : mov al, -0xd ; jmp qword ptr [rdx]
0x00000000005e9a5c : mov al, -0xe ; cmc ; jmp rax
0x000000000048de47 : mov al, -2 ; dec dword ptr [rax - 0x77] ; ret
0x00000000005ea2b8 : mov al, -4 ; add al, byte ptr [rax] ; nop ; sub dh, dh ; call rax
0x00000000004e795b : mov al, -5 ; add byte ptr [rdi + rcx + 0x45], r9b ; ret
0x0000000000578d74 : mov al, -7 ; stosb byte ptr [rdi], al ; jp 0x578e00 ; stosb byte ptr [rdi], al ; stc ; pop rsp ; ret 0x1948
0x00000000005e9524 : mov al, -8 ; hlt ; call rax
0x00000000004ca2dd : mov al, 0 ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000042b223 : mov al, 0 ; add byte ptr [rax], al ; ret
0x000000000060fce0 : mov al, 0x16 ; call qword ptr [rax]
0x00000000005af3da : mov al, 0x18 ; cmpsd dword ptr [rsi], dword ptr [rdi] ; adc dword ptr [rax], ebp ; xchg eax, ebx ; call qword ptr [rcx]
0x00000000005e5ab4 : mov al, 0x18 ; in eax, dx ; call rax
0x00000000005eaa68 : mov al, 0x1b ; add eax, dword ptr [rax] ; push rax ; ret
0x00000000005971d7 : mov al, 0x1f ; jp 0x5971b3 ; sahf ; or bh, byte ptr [rax + 0x46] ; ret 0x9fc2
0x00000000005e3220 : mov al, 0x31 ; add dword ptr [rax], eax ; rol byte ptr [rax], -0x18 ; call rax
0x00000000004b91bc : mov al, 0x31 ; add dword ptr [rax], eax ; xor eax, eax ; pop rdx ; ret
0x000000000059746b : mov al, 0x34 ; stc ; ret 0x1ede
0x00000000005b0d75 : mov al, 0x3d ; ret 0x40
0x00000000005e52f4 : mov al, 0x3f ; in al, dx ; jmp rax
0x00000000005e5384 : mov al, 0x43 ; in al, dx ; call qword ptr [rax]
0x0000000000599809 : mov al, 0x43 ; ret 0xa613
0x0000000000436127 : mov al, 0x46 ; push rdi ; add byte ptr [rax + 0xf], bh ; ret
0x00000000005ebc74 : mov al, 0x47 ; clc ; jmp qword ptr [rax]
0x00000000005ebcac : mov al, 0x48 ; clc ; call rax
0x0000000000615220 : mov al, 0x49 ; hlt ; jmp qword ptr [rax]
0x00000000005e5cac : mov al, 0x61 ; in eax, dx ; call qword ptr [rax]
0x00000000005a4820 : mov al, 0x64 ; ret
0x000000000060c380 : mov al, 0x6a ; out dx, eax ; jmp qword ptr [rdi]
0x00000000005a6ce1 : mov al, 0x6c ; sub cl, dh ; ret 0x861c
0x00000000005a0748 : mov al, 0x78 ; ret 0xfb3b
0x00000000005e8308 : mov al, 0x7f ; add al, byte ptr [rax] ; add byte ptr [rdx], bl ; int1 ; jmp rax
0x000000000059aff6 : mov al, 0xc ; mov al, bh ; ret 0xa3b3
0x000000000060720d : mov al, 1 ; add al, dh ; sub dh, ch ; jmp rbx
0x000000000042c195 : mov al, 1 ; add byte ptr [rax], al ; mov rax, rdx ; pop rdx ; ret
0x000000000048c0bc : mov al, 2 ; add al, 0 ; xor eax, eax ; pop rdx ; ret
0x0000000000617305 : mov al, 2 ; add al, bl ; in al, -0xc ; call qword ptr [rsi]
0x00000000006172d5 : mov al, 2 ; add al, cl ; in al, -0xc ; call qword ptr [rsi]
0x00000000004329f3 : mov al, 4 ; add byte ptr [rax], al ; mov eax, 0x573edd ; ret
0x00000000005ae4f2 : mov al, 5 ; pushfq ; mov dh, 0x37 ; je 0x5ae525 ; ret 0x6948
0x00000000005a20ad : mov al, 5 ; ret
0x00000000004338f2 : mov al, 9 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000435565 : mov al, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0xa4
0x00000000004793cf : mov al, bh ; dec dword ptr [rax - 0x7d] ; ret
0x000000000059aff9 : mov al, bh ; ret 0xa3b3
0x000000000051756d : mov al, byte ptr [rax + 0x5d77c0] ; mov byte ptr [rdi + 7], al ; ret
0x00000000004f3f0e : mov al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rbx ; call 0x4d01b9
0x000000000043219d : mov al, byte ptr [rbx] ; add byte ptr [rax], al ; mov eax, 0x5731a1 ; ret
0x00000000005e4649 : mov al, byte ptr [rcx] ; add byte ptr [rax], dl ; fsubr st(2) ; jmp qword ptr [rax]
0x00000000004124b0 : mov al, byte ptr [rdi + 0x10] ; mov byte ptr [rsi + 0x13], al ; ret
0x0000000000412578 : mov al, byte ptr [rdi + 0x1c] ; mov byte ptr [rsi + 0x1f], al ; ret
0x0000000000412438 : mov al, byte ptr [rdi + 0xf] ; mov byte ptr [rsi + 0xf], al ; ret
0x0000000000404776 : mov al, byte ptr [rdi] ; mov byte ptr [rsi], al ; ret
0x0000000000402a36 : mov al, byte ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005e85f1 : mov al, byte ptr [rdx] ; add byte ptr [rax], al ; int1 ; call rax
0x0000000000602701 : mov bh, -0x14 ; call rdi
0x000000000058d774 : mov bh, -0x1b ; mov bl, -0x22 ; jl 0x58d74e ; add ecx, ecx ; ret
0x00000000005ede81 : mov bh, -0x1e ; jmp qword ptr [rax]
0x00000000005ede99 : mov bh, -0x1e ; jmp qword ptr [rdx]
0x00000000004462c1 : mov bh, -0x49 ; ret 0xb775
0x00000000004462c5 : mov bh, -0x49 ; ret 0xfde1
0x00000000005b705f : mov bh, -0x63 ; adc edx, edx ; out dx, eax ; ret 0xd875
0x00000000005abacb : mov bh, -0x64 ; sbb edx, dword ptr [rsi + 0x290570e1] ; ret 0x2f5c
0x000000000057d188 : mov bh, -0x6d ; ret
0x00000000004b1945 : mov bh, -0x6f ; sti ; dec dword ptr [rax - 0x7f] ; ret
0x00000000005ea975 : mov bh, -0xa ; call qword ptr [rax]
0x00000000005ea9b5 : mov bh, -0xa ; call rax
0x0000000000542435 : mov bh, -0xc ; dec dword ptr [rax - 0x77] ; ret
0x000000000060e4c1 : mov bh, -0xe ; jmp qword ptr [rax]
0x000000000054e457 : mov bh, -2 ; dec dword ptr [rax - 0x77] ; ret
0x00000000004b8718 : mov bh, -6 ; dec dword ptr [rcx + 0x5e415be8] ; pop rbp ; ret
0x00000000004df394 : mov bh, -8 ; dec dword ptr [rax - 0x77] ; ret
0x00000000004ef089 : mov bh, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005f79dd : mov bh, 0 ; add byte ptr [rax], dl ; jp 0x5f79d1 ; call rax
0x0000000000597275 : mov bh, 0x17 ; je 0x597201 ; and byte ptr [rbp], al ; xlatb ; ret
0x0000000000597274 : mov bh, 0x17 ; je 0x597202 ; and byte ptr [rbp], al ; xlatb ; ret
0x0000000000593364 : mov bh, 0x2d ; mov ch, 0x27 ; ret 0x2237
0x00000000005b240a : mov bh, 0x58 ; rcr byte ptr [rsi - 0x52] ; mov cl, 0x4d ; ret
0x000000000057e14b : mov bh, 0x6f ; jmp 0xffffffffacf0a3bc
0x000000000043594f : mov bh, 0x72 ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x00000000005a385c : mov bh, 0x75 ; stosd dword ptr [rdi], eax ; loop 0x5a37fd ; jmp qword ptr [rbx]
0x0000000000447af5 : mov bh, 0x7d ; add eax, dword ptr [rax] ; add rsp, 0x18 ; ret
0x00000000004cb494 : mov bh, 3 ; add byte ptr [rax + 1], bh ; pop rdx ; ret
0x00000000004ee488 : mov bh, 4 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000048d1a9 : mov bh, 4 ; and r8d, 1 ; ret
0x00000000005aa733 : mov bh, 4 ; ret
0x0000000000593d5e : mov bh, byte ptr [rbx - 0x1829ef82] ; sal byte ptr [rax - 0x71], cl ; ret 0x65aa
0x000000000058dd74 : mov bh, byte ptr [rsi - 0x6df8ae3] ; ret 0x5ca4
0x00000000005a9685 : mov bh, ch ; push rbp ; xchg eax, edi ; jrcxz 0x5a963b ; pop rdx ; ret 0xd69
0x00000000005eb305 : mov bh, dh ; call rax
0x00000000005eb31d : mov bh, dh ; jmp qword ptr [rax]
0x000000000057d99b : mov bl, -0x11 ; ret
0x0000000000609ba9 : mov bl, -0x12 ; jmp rsp
0x000000000059feea : mov bl, -0x15 ; ret 0xfe88
0x00000000005f3f39 : mov bl, -0x1a ; call qword ptr [rcx]
0x00000000005f3f51 : mov bl, -0x1a ; jmp qword ptr [rsi]
0x000000000059989a : mov bl, -0x20 ; test dword ptr [rax], ecx ; ret
0x00000000005a2b87 : mov bl, -0x21 ; pop rsp ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x000000000058d776 : mov bl, -0x22 ; jl 0x58d74c ; add ecx, ecx ; ret
0x00000000005aa1c6 : mov bl, -0x2d ; movsxd rcx, eax ; jnp 0x5aa1fe ; ret
0x00000000005b26dd : mov bl, -0x32 ; ret
0x000000000055a2a9 : mov bl, -0x44 ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000005948b1 : mov bl, -0x59 ; add cl, al ; xchg eax, edi ; sti ; sub al, -0xf ; ret 0x7130
0x000000000054283d : mov bl, -0xc ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000004eac0a : mov bl, -1 ; dec dword ptr [rax - 0x77] ; ret
0x00000000004af7cf : mov bl, -5 ; dec dword ptr [rax - 0x77] ; ret
0x00000000005f750d : mov bl, 0 ; add byte ptr [rax], ah ; cmp ch, al ; call qword ptr [rsi]
0x0000000000599ac4 : mov bl, 0x15 ; mov esi, 0x291d2136 ; clc ; ret 0x6dc0
0x00000000005564ae : mov bl, 0x21 ; ret 0x2fc2
0x000000000057b89a : mov bl, 0x26 ; ret
0x00000000005b4e1d : mov bl, 0x2a ; pop rsi ; fbld dword ptr [rsi] ; ret 0x4d11
0x000000000057ba76 : mov bl, 0x2f ; ret
0x00000000005a6de9 : mov bl, 0x3c ; ret
0x00000000005d70e3 : mov bl, 0x4a ; sbb bl, byte ptr [rax + 0x52] ; mov byte ptr [rsi], -0x3c ; ret 0x3848
0x00000000004cb2b3 : mov bl, 0x4c ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 0x760
0x000000000059393e : mov bl, 0x58 ; out dx, al ; shl byte ptr [rbx + 0x4d], -0x36 ; ret
0x000000000059617d : mov bl, 0x7c ; loope 0x5961d0 ; in al, dx ; fdiv qword ptr [rbx + rax*2 - 0x6e] ; ret
0x000000000048e826 : mov bl, 0xa ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005a3158 : mov bl, 0xf ; jmp qword ptr [rbx]
0x00000000006175a5 : mov bl, 2 ; add al, bh ; in eax, -0xc ; call qword ptr [rsi]
0x00000000005e9031 : mov bl, 2 ; add al, dh ; jmp qword ptr [rax]
0x000000000061756d : mov bl, 2 ; add al, dl ; in eax, -0xc ; call qword ptr [rsi]
0x00000000006175d5 : mov bl, 2 ; add byte ptr [rax], cl ; out -0xc, al ; call qword ptr [rsi]
0x00000000005b2d11 : mov bl, 4 ; sar dword ptr [rax], -0x79 ; in eax, dx ; ret
0x00000000004ce867 : mov bl, 6 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000616f48 : mov bl, ah ; hlt ; jmp qword ptr [rdi]
0x000000000042b572 : mov bl, byte ptr [rax + 3] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005af8cf : mov bl, byte ptr [rax] ; push rdi ; and al, byte ptr [rsi + 0x65] ; jle 0x5af8db ; ret
0x000000000059bcbd : mov bl, byte ptr [rip - 0x4ba54db4] ; sahf ; std ; ret
0x0000000000612499 : mov bl, dh ; call qword ptr [rdx]
0x00000000005b26b2 : mov bl, dh ; ret 0xde91
0x0000000000612498 : mov bl, sil ; call qword ptr [rdx]
0x000000000057d319 : mov bpl, al ; jno 0x57d392 ; ret
0x0000000000511c8d : mov byte ptr [r9 + 1], cl ; ret
0x0000000000511b3d : mov byte ptr [r9 + 1], cl ; ret 0x8948
0x000000000051131c : mov byte ptr [r9 - 0x3f], r9b ; jmp 0xffffffffc2525c4a
0x00000000004564d2 : mov byte ptr [r9], dl ; inc r9 ; mov qword ptr [rdi], r9 ; ret
0x00000000004e8eb7 : mov byte ptr [rax - 0x3f], cl ; jmp 0x21117e5
0x000000000053a482 : mov byte ptr [rax - 0x3f], cl ; jmp 0x2162db0
0x0000000000405d9f : mov byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004cb4a3 : mov byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000042c270 : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop r8 ; jmp rax
0x0000000000542f4d : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop r14 ; ret
0x0000000000508da1 : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000042c2e2 : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rdx ; ret
0x00000000004cb4d3 : mov byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004f358c : mov byte ptr [rax], al ; add byte ptr [rax], al ; test rcx, rcx ; je 0x4f35a0 ; jmp rcx
0x00000000004a9e72 : mov byte ptr [rax], bl ; ret
0x0000000000598f28 : mov byte ptr [rbp + 0x19b46efb], ah ; jmp rcx
0x00000000004bbde6 : mov byte ptr [rbp + 7], cl ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000005b79b7 : mov byte ptr [rbp + rcx*2 + 0xb], bh ; ret
0x00000000005b5291 : mov byte ptr [rbp - 0x5b], bh ; jns 0x5b5229 ; ret
0x000000000053c16f : mov byte ptr [rbp], bl ; ret
0x00000000005b717f : mov byte ptr [rbx + 0x22cc1b5e], al ; in eax, 0x70 ; ret
0x000000000045db45 : mov byte ptr [rbx + 7], al ; add rsp, 0x10 ; pop rbx ; ret
0x00000000005eaab0 : mov byte ptr [rbx + rax], bl ; add al, ah ; ret
0x0000000000603898 : mov byte ptr [rbx], cl ; in eax, dx ; call rsi
0x0000000000539b1f : mov byte ptr [rcx + 0x39], -0xf ; jne 0x539b19 ; mov dword ptr [rdi], r8d ; ret
0x000000000043c8f8 : mov byte ptr [rcx + 0x57], dl ; add bl, al ; ret
0x0000000000511bd2 : mov byte ptr [rcx + 1], cl ; ret
0x0000000000511b3e : mov byte ptr [rcx + 1], cl ; ret 0x8948
0x0000000000511bd1 : mov byte ptr [rcx + 1], r9b ; ret
0x000000000060bbd8 : mov byte ptr [rcx - 0x11], al ; call qword ptr [rbx]
0x000000000051131d : mov byte ptr [rcx - 0x3f], cl ; jmp 0xffffffffc2525c49
0x0000000000579b70 : mov byte ptr [rcx - 0x66], dh ; adc byte ptr [rbp - 0x66d9a446], bh ; ret
0x000000000042d804 : mov byte ptr [rcx - 0x76b7ffee], bh ; ret
0x00000000004564c1 : mov byte ptr [rcx], -0x80 ; inc r9 ; mov qword ptr [rdi], r9 ; ret
0x000000000042b213 : mov byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000000005bec00 : mov byte ptr [rcx], al ; add byte ptr [rax], al ; ret 1
0x00000000004564d3 : mov byte ptr [rcx], dl ; inc r9 ; mov qword ptr [rdi], r9 ; ret
0x00000000004445e7 : mov byte ptr [rdi + 1], dl ; mov eax, 2 ; ret
0x0000000000444647 : mov byte ptr [rdi + 2], dl ; mov eax, 3 ; ret
0x00000000004446b7 : mov byte ptr [rdi + 3], dl ; mov eax, 4 ; ret
0x0000000000444737 : mov byte ptr [rdi + 4], dl ; mov eax, 5 ; ret
0x00000000004447b6 : mov byte ptr [rdi + 5], dl ; mov eax, 6 ; ret
0x0000000000517573 : mov byte ptr [rdi + 7], al ; ret
0x000000000040974b : mov byte ptr [rdi + rcx], -0x6c ; ret
0x000000000048d34b : mov byte ptr [rdi + rcx], -0x7b ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret 0xf20
0x00000000005fcd48 : mov byte ptr [rdi - 0x16], bh ; call qword ptr [rcx]
0x0000000000595764 : mov byte ptr [rdi - 0x22], ch ; outsd dx, dword ptr [rsi] ; ret
0x0000000000483e25 : mov byte ptr [rdi], 0 ; mov eax, 1 ; pop rbx ; ret
0x000000000059906d : mov byte ptr [rdi], ah ; ret
0x00000000004e8034 : mov byte ptr [rdi], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000044459d : mov byte ptr [rdi], dl ; ret
0x000000000059eb25 : mov byte ptr [rdx + 0x31], -0x57 ; ret
0x00000000004d94fb : mov byte ptr [rdx + rax], al ; pop rbx ; ret
0x00000000004d94fa : mov byte ptr [rdx + rax], r8b ; pop rbx ; ret
0x000000000048bff4 : mov byte ptr [rdx - 3], bl ; dec dword ptr [rax - 0x77] ; ret
0x000000000048cb93 : mov byte ptr [rdx], -0x7c ; leave ; cmovne rsi, rdx ; jmp 0x48cb69
0x00000000005e9461 : mov byte ptr [rdx], 0 ; add byte ptr [rdx - 0xd], ah ; call qword ptr [rax]
0x00000000005e9451 : mov byte ptr [rdx], 0 ; and byte ptr [rbx - 0xd], cl ; call rax
0x00000000004161d1 : mov byte ptr [rdx], al ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x00000000004261da : mov byte ptr [rdx], al ; add byte ptr [rax], al ; ret
0x0000000000497a37 : mov byte ptr [rdx], cl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004e846a : mov byte ptr [rip + 0x346177], 1 ; ret
0x00000000004e4df4 : mov byte ptr [rip + 0x34930e], 0 ; pop rax ; ret
0x00000000004cfb84 : mov byte ptr [rip + 0x35e455], 0 ; pop rax ; ret
0x00000000004cfb7b : mov byte ptr [rip + 0x35e4ad], 0 ; pop rax ; ret
0x00000000004aaf5a : mov byte ptr [rip + 0x381343], 0 ; pop rax ; ret
0x000000000048ec40 : mov byte ptr [rip + 0x39cc41], 1 ; ret
0x00000000004023b3 : mov byte ptr [rip + 0x429356], 1 ; ret
0x00000000004124ad : mov byte ptr [rsi + 0x12], al ; mov al, byte ptr [rdi + 0x10] ; mov byte ptr [rsi + 0x13], al ; ret
0x00000000004124b3 : mov byte ptr [rsi + 0x13], al ; ret
0x0000000000412575 : mov byte ptr [rsi + 0x1e], al ; mov al, byte ptr [rdi + 0x1c] ; mov byte ptr [rsi + 0x1f], al ; ret
0x000000000041257b : mov byte ptr [rsi + 0x1f], al ; ret
0x000000000059af61 : mov byte ptr [rsi + 0xd], bl ; ret 0x2316
0x0000000000412435 : mov byte ptr [rsi + 0xe], al ; mov al, byte ptr [rdi + 0xf] ; mov byte ptr [rsi + 0xf], al ; ret
0x000000000041243b : mov byte ptr [rsi + 0xf], al ; ret
0x0000000000516932 : mov byte ptr [rsi + 0xf], cl ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040ae02 : mov byte ptr [rsi + 1], ch ; mov byte ptr [rsi + 2], cl ; ret
0x000000000041ade3 : mov byte ptr [rsi + 1], cl ; mov eax, 2 ; ret
0x000000000040dc84 : mov byte ptr [rsi + 2], cl ; mov eax, 3 ; ret
0x000000000040ae05 : mov byte ptr [rsi + 2], cl ; ret
0x00000000005a8051 : mov byte ptr [rsi + rdx*4 - 0x4a2bd922], bh ; ret
0x00000000005f55c8 : mov byte ptr [rsi - 0x19], dl ; call qword ptr [rdx]
0x00000000005d70e8 : mov byte ptr [rsi], -0x3c ; ret 0x3848
0x0000000000404778 : mov byte ptr [rsi], al ; ret
0x000000000040ae00 : mov byte ptr [rsi], dl ; mov byte ptr [rsi + 1], ch ; mov byte ptr [rsi + 2], cl ; ret
0x000000000041ade2 : mov byte ptr cs:[rsi + 1], cl ; mov eax, 2 ; ret
0x00000000005b498d : mov ch, -0x12 ; scasd eax, dword ptr [rdi] ; test al, 0x54 ; cmp esp, dword ptr [rsi] ; sub dword ptr [rbx], edx ; call qword ptr [rsi]
0x000000000058b6fd : mov ch, -0x13 ; je 0x58b701 ; ret
0x00000000005e44cd : mov ch, -0x16 ; jmp qword ptr [rax]
0x000000000044d45e : mov ch, -0x17 ; pop rbx ; ret 0x3956
0x00000000005f6341 : mov ch, -0x19 ; call qword ptr [rbx]
0x00000000005e1fcd : mov ch, -0x1c ; jmp rax
0x00000000005eddb9 : mov ch, -0x1e ; jmp qword ptr [rax]
0x00000000004379f7 : mov ch, -0x20 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000057defa : mov ch, -0x26 ; ret
0x0000000000593df2 : mov ch, -0x5c ; ret 0x9a5b
0x00000000005b0102 : mov ch, -0x71 ; pop rdi ; xchg eax, edi ; xchg esp, edi ; shr edx, cl ; ret
0x000000000049cdb7 : mov ch, -0xb ; add al, byte ptr [rax] ; xor eax, eax ; pop rdx ; ret
0x0000000000568037 : mov ch, -8 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000596aad : mov ch, 0x14 ; lahf ; ret 0x61c0
0x0000000000593366 : mov ch, 0x27 ; ret 0x2237
0x0000000000555845 : mov ch, 0x36 ; pop rdi ; ja 0x555870 ; popfq ; hlt ; stosd dword ptr [rdi], eax ; ret 0x2841
0x0000000000552b87 : mov ch, 0x3e ; lock inc dword ptr [rbp - 0xc18b40] ; ret
0x0000000000531e41 : mov ch, 0x48 ; pop rbx ; ret 0x3956
0x0000000000577e00 : mov ch, 0x59 ; pop rdx ; ret 0xd539
0x00000000005b5b9f : mov ch, 0x5a ; or byte ptr [rsi], al ; jo 0x5b5b60 ; mov dl, -7 ; ret 0xbf6e
0x00000000004dd13d : mov ch, 0x5a ; ret
0x0000000000433014 : mov ch, 0x5d ; add bl, al ; mov eax, 0x56f078 ; ret
0x000000000040af8d : mov ch, 0x66 ; nop ; mov eax, 0x56af18 ; ret
0x00000000005a4d7b : mov ch, 0x7b ; xor eax, 0x67059841 ; ret
0x000000000042a9d8 : mov ch, 0xb ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005e9091 : mov ch, 2 ; add byte ptr [rax], ah ; jp 0x5e908f ; jmp rax
0x000000000061777d : mov ch, 2 ; add byte ptr [rax], dl ; out -0xc, eax ; call qword ptr [rax]
0x0000000000601a29 : mov ch, ah ; jmp qword ptr [rcx]
0x000000000057d31a : mov ch, al ; jno 0x57d391 ; ret
0x00000000005ffd39 : mov ch, bl ; call qword ptr [rax]
0x00000000005ffd51 : mov ch, bl ; jmp qword ptr [rsi]
0x0000000000597d25 : mov ch, byte ptr [rbx + 0x7b0d9a8b] ; add esi, dword ptr [rsi - 0xe] ; ret
0x00000000005d6cf9 : mov ch, byte ptr [rdx] ; test al, 0x30 ; add al, 0x34 ; xor al, 0xffffffffffffffd2 ; ret 0xd012
0x000000000050b905 : mov ch, dh ; dec dword ptr [rax - 0x77] ; ret
0x000000000059c1eb : mov ch, dl ; insd dword ptr [rdi], dx ; sbb dh, cl ; ret 0x4c24
0x00000000005474d2 : mov ch, dl ; stc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000609a59 : mov cl, -0x12 ; call qword ptr [rdi]
0x0000000000609a71 : mov cl, -0x12 ; jmp qword ptr [rdi]
0x0000000000609a89 : mov cl, -0x12 ; jmp qword ptr [rdx]
0x00000000005af113 : mov cl, -0x14 ; ret 0x203c
0x00000000005e1fa5 : mov cl, -0x1c ; jmp qword ptr [rax]
0x00000000005a7ebc : mov cl, -0x22 ; call rbx
0x00000000005b2495 : mov cl, -0x37 ; jp 0x5b2514 ; ret 0x12c9
0x000000000054a0eb : mov cl, -0x38 ; lock dec dword ptr [rax - 0x77] ; ret
0x0000000000520979 : mov cl, -0x40 ; add eax, 0x6f0f4466 ; ret 0xfd01
0x00000000005a4cc7 : mov cl, -0x4b ; ret 0x35a0
0x000000000059ef4e : mov cl, -0x4c ; jp 0x59ef37 ; scasd eax, dword ptr [rdi] ; and eax, esp ; ret 0xbd61
0x00000000004264bb : mov cl, -0x60 ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cmp al, 0x24 ; call rax
0x00000000005b17f8 : mov cl, -0x7d ; ret 0x467e
0x000000000060e2d9 : mov cl, -0xe ; jmp qword ptr [rdx]
0x00000000004bb54f : mov cl, -1 ; dec dword ptr [rax - 0x77] ; ret
0x000000000053ea1c : mov cl, -1 ; dec dword ptr [rax - 0x7d] ; ret
0x00000000005b0d86 : mov cl, 0x1e ; movsb byte ptr [rdi], byte ptr [rsi] ; or ebp, dword ptr [rbx + 0x55] ; xchg bh, cl ; ret
0x000000000059c167 : mov cl, 0x21 ; int 0
0x00000000005b1ce0 : mov cl, 0x25 ; pop rdi ; or bl, byte ptr [rcx - 0x37] ; std ; ret
0x0000000000556b6e : mov cl, 0x28 ; sbb ebx, dword ptr [rbx] ; insb byte ptr [rdi], dx ; sbb ebx, eax ; ja 0x556bb6 ; ret
0x000000000057baec : mov cl, 0x31 ; ret
0x00000000005b240f : mov cl, 0x4d ; ret
0x00000000004869bb : mov cl, 0x59 ; add al, 0 ; xor eax, eax ; pop rdx ; ret
0x00000000005a9cd8 : mov cl, 0x67 ; ret
0x00000000005b24c0 : mov cl, 0x69 ; jb 0x5b251c ; add eax, 0x857d2e5c ; ret
0x00000000005a341a : mov cl, 0x7a ; push rbp ; outsb dx, byte ptr [rsi] ; wait ; ret 0x8463
0x000000000048e936 : mov cl, 0xa ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004840ce : mov cl, 0xb ; add byte ptr [rax - 0x77], cl ; ret
0x000000000060735d : mov cl, 1 ; add byte ptr [rax], dl ; xor ch, dh ; jmp rsi
0x0000000000617365 : mov cl, 2 ; add al, bh ; in al, -0xc ; call qword ptr [rsi]
0x0000000000617335 : mov cl, 2 ; add al, ch ; in al, -0xc ; call qword ptr [rsi]
0x00000000005e8f89 : mov cl, 2 ; add byte ptr [rax + 0x2d], dl ; jmp qword ptr [rax]
0x00000000006173fd : mov cl, 2 ; add byte ptr [rax - 0x1b], al ; hlt ; call qword ptr [rsi]
0x00000000005e8fb9 : mov cl, 2 ; add byte ptr [rax], ah ; xor edx, esi ; jmp rax
0x00000000006173e5 : mov cl, 2 ; add byte ptr [rax], bh ; in eax, -0xc ; call qword ptr [rsi]
0x0000000000617395 : mov cl, 2 ; add byte ptr [rax], cl ; in eax, -0xc ; call qword ptr [rsi]
0x00000000006173cd : mov cl, 2 ; add byte ptr [rax], dh ; in eax, -0xc ; call qword ptr [rsi]
0x00000000005b5bb4 : mov cl, 3 ; xchg byte ptr [rdi - 0x4a1b791e], dl ; ret 0xf99f
0x000000000047ae1e : mov cl, 6 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000046ad93 : mov cl, 7 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005b57fc : mov cl, ah ; int 0xc3
0x000000000045d4ca : mov cl, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000045d835 : mov cl, byte ptr [rax] ; add byte ptr [rcx + 0x5e415be8], cl ; pop rbp ; ret
0x00000000005a03cd : mov cl, byte ptr [rdx + rbx*8 - 0x461a7c93] ; ret 0xae59
0x00000000005e3bfd : mov cl, ch ; call qword ptr [rax]
0x00000000005a2ef7 : mov cl, cl ; ret 0x1278
0x00000000005b6de9 : mov cl, cl ; ret 0x90cf
0x000000000046b58d : mov cl, dh ; shr rax, cl ; and eax, 1 ; ret
0x000000000046b58c : mov cl, sil ; shr rax, cl ; and eax, 1 ; ret
0x000000000053a64b : mov cs, eax ; add al, 0 ; add dh, dh ; ret
0x0000000000446efc : mov cs, ecx ; enter 0x7544, -0x3e ; mov dword ptr [rdx + 0x75], ebp ; ret 0x6a89
0x0000000000594e11 : mov cs, ecx ; sbb al, 0x47 ; ret
0x000000000057e0f1 : mov cs, edi ; adc dword ptr [r10 - 0x38], -0x4a ; sti ; lodsb al, byte ptr [rsi] ; ret 0x763c
0x00000000004719c0 : mov cs, esp ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x000000000045dc4e : mov cs, word ptr [rax + 0x33] ; push rsi ; adc al, -0x77 ; ret
0x000000000045dda8 : mov cs, word ptr [rax + 0x33] ; push rsi ; sub al, -0x77 ; ret
0x00000000005ad913 : mov cs, word ptr [rax + 0x63] ; ret
0x00000000004793ce : mov cs, word ptr [rax - 0x7cb70008] ; ret
0x00000000005b5c0c : mov cs, word ptr [rbx] ; cmp al, -0x52 ; leave ; add byte ptr [rcx - 0x76], dh ; ret 0xe440
0x0000000000605339 : mov dh, -0x13 ; jmp qword ptr [rbx]
0x0000000000605391 : mov dh, -0x13 ; jmp rdx
0x00000000005fadf9 : mov dh, -0x17 ; call qword ptr [rsi]
0x000000000049455d : mov dh, -0x18 ; mov eax, ebp ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000005f4001 : mov dh, -0x1a ; call qword ptr [rcx]
0x0000000000542c3a : mov dh, -0x28 ; jmp 0x542c63
0x00000000004590af : mov dh, -0x37 ; sub eax, ecx ; ret
0x00000000004da749 : mov dh, -0x38 ; mov eax, ecx ; pop rdx ; ret
0x0000000000408818 : mov dh, -0x38 ; or eax, ecx ; ret
0x0000000000411938 : mov dh, -0x3f ; pop rdx ; ret
0x0000000000495537 : mov dh, -0x40 ; add eax, eax ; pop rbx ; ret
0x0000000000566f93 : mov dh, -0x40 ; add eax, eax ; pop rdx ; ret
0x000000000045cf07 : mov dh, -0x40 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000004ae071 : mov dh, -0x40 ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x000000000042a437 : mov dh, -0x40 ; add rsp, 8 ; pop rbx ; pop r14 ; ret
0x00000000004db0bb : mov dh, -0x40 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000441761 : mov dh, -0x40 ; lea eax, dword ptr [rax + rax*2 + 0x13] ; ret
0x00000000004590ac : mov dh, -0x40 ; movzx ecx, cl ; sub eax, ecx ; ret
0x0000000000463a0d : mov dh, -0x40 ; pop rbx ; pop r14 ; pop r15 ; ret
0x00000000004f5054 : mov dh, -0x40 ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000041138f : mov dh, -0x40 ; pop rbx ; ret
0x000000000040d8a5 : mov dh, -0x40 ; pop rdx ; ret
0x000000000042c00b : mov dh, -0x40 ; ret
0x000000000048970c : mov dh, -0x40 ; xor eax, 1 ; pop rbx ; ret
0x00000000005b1cdf : mov dh, -0x4f ; and eax, 0xc9590a5f ; std ; ret
0x00000000005ac0ef : mov dh, -0x65 ; ret 0x431e
0x00000000005aff13 : mov dh, -0x6e ; ret 0x54c
0x000000000058ed96 : mov dh, -0x77 ; ret 0xa79c
0x00000000005aa762 : mov dh, -0x7e ; out dx, al ; pop rcx ; xchg eax, esp ; sub al, -0x23 ; stosb byte ptr [rdi], al ; ret 0x6595
0x0000000000452145 : mov dh, -0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000005424e5 : mov dh, -0xc ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000058e686 : mov dh, -2 ; ret
0x000000000057e0f7 : mov dh, -5 ; lodsb al, byte ptr [rsi] ; ret 0x763c
0x00000000005a30e0 : mov dh, -8 ; jnp 0x5a3101 ; ret
0x000000000055a436 : mov dh, -9 ; std ; dec dword ptr [rax - 0x77] ; ret
0x00000000004ef1a0 : mov dh, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000432471 : mov dh, 0 ; add byte ptr [rax], al ; mov eax, 0x57369b ; ret
0x000000000057e2bf : mov dh, 0 ; ret 0x2660
0x000000000059f1da : mov dh, 0x15 ; hlt ; mov ebp, 0xf12d87c8 ; out dx, al ; ret 0x89e3
0x00000000005ae4f5 : mov dh, 0x37 ; je 0x5ae522 ; ret 0x6948
0x0000000000464b55 : mov dh, 0x3b ; add al, ch ; ret
0x00000000005b35c5 : mov dh, 0x40 ; ret 0xf1de
0x0000000000538db8 : mov dh, 0x42 ; dec byte ptr [rax - 0x7d] ; ret 0x4103
0x000000000040878c : mov dh, 0x46 ; add dword ptr [rcx], ebp ; ret 0xca01
0x000000000054aa31 : mov dh, 0x4b ; add dword ptr [rax - 1], ecx ; ret
0x00000000004408c3 : mov dh, 0x4b ; add ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000577f7c : mov dh, 0x4f ; test eax, 0x9f60c4c1 ; ret 0x5c9e
0x000000000045e304 : mov dh, 0x50 ; add ecx, dword ptr [rcx] ; ret 0xf41
0x00000000005b68d5 : mov dh, 0x50 ; jbe 0x5b68cb ; ret
0x000000000048d3b3 : mov dh, 0x53 ; add cl, byte ptr [rax - 0x7d] ; ret
0x0000000000549d45 : mov dh, 0x53 ; add dword ptr [rcx], ecx ; ret 0xbfbe
0x000000000054eecb : mov dh, 0x53 ; add dword ptr [rcx], ecx ; ret 0xc0be
0x0000000000568bbe : mov dh, 0x53 ; add eax, 0x908e2c1 ; ret 0xf41
0x0000000000549d61 : mov dh, 0x53 ; add ecx, dword ptr [rcx] ; ret 0xbfbe
0x0000000000549db5 : mov dh, 0x53 ; or dword ptr [rcx], ecx ; ret 0xbfbe
0x0000000000549dd1 : mov dh, 0x53 ; or ecx, dword ptr [rcx] ; ret 0xbfbe
0x0000000000549e09 : mov dh, 0x53 ; wbinvd ; ret 0xbfbe
0x00000000004d8f87 : mov dh, 0x54 ; adc dword ptr [rax + 9], esi ; ret 0x9489
0x0000000000440709 : mov dh, 0x55 ; add dword ptr [rax + 9], ecx ; ret 0x8948
0x00000000004397d0 : mov dh, 0x55 ; add dword ptr [rcx - 0x73], ecx ; add al, 9 ; ret 0x1be
0x000000000047e768 : mov dh, 0x55 ; add eax, 0x908e2c1 ; ret 0xb60f
0x000000000045e3ab : mov dh, 0x55 ; add eax, 0x910e2c1 ; ret 0xb60f
0x000000000045e68e : mov dh, 0x55 ; add ecx, dword ptr [rcx] ; ret 0x5489
0x000000000047fbef : mov dh, 0x56 ; add eax, 0x908e2c1 ; ret 0xb60f
0x0000000000408788 : mov dh, 0x57 ; add dword ptr [rdi], ecx ; mov dh, 0x46 ; add dword ptr [rcx], ebp ; ret 0xca01
0x00000000005176e5 : mov dh, 0x57 ; add eax, 0x908e2c1 ; ret 0xb60f
0x00000000005a17b5 : mov dh, 0x57 ; mov esp, 0xa7c1baa ; ret
0x0000000000419de4 : mov dh, 0x5c ; insb byte ptr [rdi], dx ; add dword ptr [rcx], ecx ; ret
0x00000000004147d2 : mov dh, 0x5d ; add dword ptr [rax + 9], ecx ; ret
0x0000000000438df8 : mov dh, 0x5d ; add dword ptr [rcx], ecx ; ret
0x0000000000415dc1 : mov dh, 0x5e ; add dword ptr [rax + 9], ecx ; ret
0x000000000053a546 : mov dh, 0x68 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000503f0c : mov dh, 0x6b ; add dword ptr [rcx - 0x7d], ecx ; ret
0x0000000000557520 : mov dh, 0x6b ; call rbx
0x000000000043050c : mov dh, 0x71 ; add ecx, dword ptr [rax + 9] ; dec byte ptr [rax - 0x7d] ; ret 0x48fc
0x00000000004137df : mov dh, 0x78 ; and cl, byte ptr [rcx - 0x7d] ; jmp qword ptr [rcx]
0x000000000048ce51 : mov dh, 0x7a ; add dword ptr [rax - 1], ecx ; ret 0xb70f
0x00000000005e51c1 : mov dh, 1 ; add al, al ; std ; jmp 0x5e51cd
0x0000000000432363 : mov dh, 1 ; add byte ptr [rax], al ; mov eax, 0x5733d1 ; ret
0x0000000000617855 : mov dh, 2 ; add al, cl ; out -0xc, al ; call qword ptr [rax]
0x00000000006178a5 : mov dh, 2 ; add byte ptr [rax], bl ; out -0xc, eax ; call qword ptr [rdx]
0x000000000061788d : mov dh, 2 ; add byte ptr [rax], dl ; out -0xc, eax ; call qword ptr [rcx]
0x000000000049a878 : mov dh, 4 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000046ac43 : mov dh, 7 ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0x00000000005f3869 : mov dh, ah ; call rsp
0x00000000005eb36d : mov dh, bh ; call qword ptr [rax]
0x00000000006124d1 : mov dh, bl ; jmp qword ptr [rdi]
0x00000000005a6cdc : mov dh, byte ptr [rbx + 0x3e] ; jge 0x5a6cd5 ; mov al, 0x6c ; sub cl, dh ; ret 0x861c
0x00000000005d74fb : mov dh, byte ptr [rsp + rsi] ; xor byte ptr [rdx + rdx], al ; rcl dl ; ret 0x80b
0x00000000005953de : mov dh, dl ; ret 0x9004
0x0000000000605299 : mov dl, -0x13 ; jmp rax
0x0000000000602601 : mov dl, -0x14 ; jmp qword ptr [rdi]
0x00000000005fad59 : mov dl, -0x17 ; jmp rdi
0x00000000005e3705 : mov dl, -0x18 ; call qword ptr [rax]
0x00000000005e36f5 : mov dl, -0x18 ; jmp rax
0x00000000005e2765 : mov dl, -0x1b ; call rax
0x00000000005e277d : mov dl, -0x1b ; jmp qword ptr [rax]
0x000000000059d1b0 : mov dl, -0x1f ; ret
0x00000000005a99e0 : mov dl, -0x42 ; adc cl, byte ptr [rcx - 0x78] ; scasd eax, dword ptr [rdi] ; ret
0x00000000005b5ba4 : mov dl, -0x4e ; stc ; ret 0xbf6e
0x00000000005a481b : mov dl, -0x6a ; add eax, 0x64b0408d ; ret
0x00000000005a41cb : mov dl, -0xa ; pop rsi ; add esp, dword ptr [rbp - 0x47] ; pushfq ; outsd dx, dword ptr [rsi] ; ret 0x53a0
0x000000000044287a : mov dl, -0xc ; sti ; dec dword ptr [rax - 0x77] ; ret
0x00000000005a7e5a : mov dl, -0xd ; in al, dx ; ret
0x00000000005e8b5d : mov dl, -0xf ; call qword ptr [rax]
0x000000000053e9dc : mov dl, -1 ; dec dword ptr [rax - 0x7d] ; ret
0x000000000048eca4 : mov dl, -2 ; dec dword ptr [rax - 0x77] ; ret
0x00000000004dbc14 : mov dl, -3 ; dec dword ptr [rax - 0x77] ; ret
0x000000000059a6b6 : mov dl, -3 ; ret
0x00000000005b5ba5 : mov dl, -7 ; ret 0xbf6e
0x000000000055bb4a : mov dl, -7 ; sub al, 0 ; ret
0x00000000005eb5b5 : mov dl, -9 ; jmp qword ptr [rax]
0x00000000005f74d5 : mov dl, 0 ; add byte ptr [rax], bh ; cmp al, ch ; call qword ptr [rdi]
0x000000000046048a : mov dl, 0x12 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004f6a7a : mov dl, 0x1b ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x0000000000593d21 : mov dl, 0x1c ; ret
0x000000000045f32a : mov dl, 0x1d ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004f677a : mov dl, 0x1e ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000004f5e7a : mov dl, 0x27 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000005a6c99 : mov dl, 0x58 ; ret
0x000000000059bcc0 : mov dl, 0x5a ; mov ah, -0x62 ; std ; ret
0x000000000044863a : mov dl, 0x5e ; or al, byte ptr [rax] ; pop rax ; ret
0x00000000004948ba : mov dl, 0x7a ; add eax, dword ptr [rax] ; xor eax, eax ; pop rbx ; ret
0x00000000005ab7d8 : mov dl, 0x7c ; shl ebp, cl ; pop rax ; jb 0x5ab819 ; mov al, -0x3c ; ret 0xc5cc
0x000000000058bff7 : mov dl, 0x7d ; sbb eax, 0x85617937 ; ret 0x2c94
0x00000000004ab7ba : mov dl, 0xb ; add al, byte ptr [rax] ; xor eax, eax ; pop rdx ; ret
0x00000000005a9c72 : mov dl, 0xd ; adc byte ptr [rbx], bl ; cmc ; ret 0x1d0d
0x00000000005e50b1 : mov dl, 1 ; add byte ptr [rax - 0x1b], dl ; jmp 0x5e50bd
0x00000000005e5071 : mov dl, 1 ; add byte ptr [rax - 0x1c], dl ; jmp 0x5e507d
0x0000000000432375 : mov dl, 1 ; add byte ptr [rax], al ; mov eax, 0x573184 ; ret
0x000000000061745d : mov dl, 2 ; add byte ptr [rax - 0x1b], ah ; hlt ; call qword ptr [rsi]
0x0000000000617415 : mov dl, 2 ; add byte ptr [rax - 0x1b], cl ; hlt ; call qword ptr [rsi]
0x000000000061748d : mov dl, 2 ; add byte ptr [rax - 0x1b], dh ; hlt ; call qword ptr [rsi]
0x000000000061742d : mov dl, 2 ; add byte ptr [rax - 0x1b], dl ; hlt ; call qword ptr [rsi]
0x00000000005b6bf5 : mov dl, byte ptr [rbp - 1] ; sahf ; ret
0x00000000004f8edf : mov dr0, eax ; dec dword ptr [rax - 0x77] ; ret
0x00000000006127e9 : mov dr0, ebx ; call qword ptr [rbx]
0x00000000004f8ede : mov dr0, rax ; dec dword ptr [rax - 0x77] ; ret
0x00000000005af7cb : mov dr0, word ptr [rbp + 0x289cb633] ; ret
0x000000000057cb1a : mov dr0, word ptr [rbp + rbx*2 + 0x404bff34] ; ret 0xfd45
0x00000000005a2b68 : mov dr0, word ptr [rcx - 0x13] ; stc ; ret
0x00000000005ac789 : mov dr0, word ptr [rsi + rsi*2 + 0x1f] ; pop rdi ; xor ch, ch ; ret 0xa9bd
0x00000000004790a7 : mov dr1, eax ; dec dword ptr [rax - 0x77] ; ret
0x000000000049afe9 : mov dr1, esp ; dec dword ptr [rax - 0x77] ; ret
0x000000000048d3a1 : mov dr1, word ptr [rax] ; ret 0x8a74
0x000000000054a1be : mov dr1, word ptr [rbx - 0x15] ; dec dword ptr [rax - 0x77] ; ret
0x000000000059d6f9 : mov ds, ecx ; test eax, 0xd28fb8af ; clc ; push rcx ; ret 0x2a40
0x000000000059c687 : mov ds, word ptr [rax - 0x2e6d2bf2] ; ret
0x00000000005aee30 : mov ds, word ptr [rbp + 3] ; ret 0x37ca
0x00000000004a77ee : mov ds, word ptr [rbx + 6] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004cb34e : mov ds, word ptr [rbx] ; mov eax, 1 ; ret
0x00000000004c84b6 : mov dword ptr [r14], eax ; pop rbx ; pop r14 ; pop r15 ; ret
0x0000000000437868 : mov dword ptr [r8 + 8], 1 ; ret
0x000000000043056a : mov dword ptr [r8], 0x32 ; xor eax, eax ; ret
0x000000000047c7e2 : mov dword ptr [r9 + 4], ebp ; mov dword ptr [r9], edx ; pop rbx ; pop rbp ; ret
0x000000000047c7e6 : mov dword ptr [r9], edx ; pop rbx ; pop rbp ; ret
0x000000000046ab77 : mov dword ptr [rax + 0x10], 0 ; pop rdx ; ret
0x000000000053f845 : mov dword ptr [rax + 0x20], 0 ; pop rdx ; ret
0x00000000004415c4 : mov dword ptr [rax + 0x20], 1 ; pop rdx ; ret
0x00000000004c6379 : mov dword ptr [rax + 0x20], ecx ; pop rbx ; ret
0x00000000004f3655 : mov dword ptr [rax + 0x28], 1 ; pop rdx ; ret
0x000000000048538f : mov dword ptr [rax + 0x28], edx ; mov eax, 1 ; pop rdx ; ret
0x0000000000484f7e : mov dword ptr [rax + 0x28], esi ; mov eax, 1 ; pop rdx ; ret
0x00000000004b6f11 : mov dword ptr [rax + 0x30], 0 ; pop rdx ; ret
0x000000000047788c : mov dword ptr [rax + 0x38], edx ; mov eax, 1 ; ret
0x000000000042c0b1 : mov dword ptr [rax + 0x6c], ecx ; mov eax, ecx ; pop rdx ; ret
0x0000000000543a3f : mov dword ptr [rax + 0x70], 0x543bc0 ; pop rdx ; ret
0x00000000005689db : mov dword ptr [rax + 8], 0 ; pop rbx ; ret
0x0000000000437869 : mov dword ptr [rax + 8], 1 ; ret
0x0000000000560774 : mov dword ptr [rax + 8], esi ; ret
0x000000000059713a : mov dword ptr [rax + rbp*2 - 0x67], eax ; ret 0xef10
0x00000000005408a9 : mov dword ptr [rax + rcx + 0x10], 1 ; ret
0x00000000004e8eb4 : mov dword ptr [rax - 0x3eb77778], ecx ; jmp 0x21117e8
0x000000000053a47f : mov dword ptr [rax - 0x3eb77778], ecx ; jmp 0x2162db3
0x000000000059dad7 : mov dword ptr [rax - 0x55], eax ; ret 0x435d
0x000000000056899a : mov dword ptr [rax], 0 ; pop rbx ; ret
0x000000000040812f : mov dword ptr [rax], 0 ; ret
0x000000000043056b : mov dword ptr [rax], 0x32 ; xor eax, eax ; ret
0x00000000005bf6e4 : mov dword ptr [rax], 0xc60000 ; add byte ptr [rax], al ; ret 0
0x00000000005e1861 : mov dword ptr [rax], 0xe365b000 ; call qword ptr [rax]
0x00000000005f89e5 : mov dword ptr [rax], 0xe8e84800 ; call qword ptr [rax]
0x000000000040a122 : mov dword ptr [rax], 0xf040000 ; xchg eax, esp ; ret 0x8948
0x000000000040a0f8 : mov dword ptr [rax], 0xf100000 ; xchg eax, esp ; ret 0x8948
0x00000000005991ae : mov dword ptr [rax], eax ; jmp qword ptr [rax]
0x000000000048611d : mov dword ptr [rax], eax ; ret
0x00000000004a9ea2 : mov dword ptr [rax], ebx ; ret
0x000000000045d637 : mov dword ptr [rax], ecx ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000455072 : mov dword ptr [rax], ecx ; ret
0x000000000046afe2 : mov dword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x0000000000539c54 : mov dword ptr [rbx + 0x10], 1 ; pop rbx ; ret
0x00000000005452a5 : mov dword ptr [rbx + 0x10], esi ; pop rbx ; pop r14 ; pop r15 ; ret
0x0000000000483c50 : mov dword ptr [rbx + 0x110], eax ; xor eax, eax ; pop rbx ; ret
0x000000000042b46e : mov dword ptr [rbx + 0x18], esi ; pop rbx ; pop r14 ; pop r15 ; ret
0x000000000042560e : mov dword ptr [rbx + 0x198], eax ; pop rbx ; ret
0x000000000042e556 : mov dword ptr [rbx + 0x20], 0 ; pop rbx ; ret
0x0000000000543468 : mov dword ptr [rbx + 0x28], 0 ; pop rbx ; ret
0x0000000000488334 : mov dword ptr [rbx + 0x28], edx ; mov eax, 1 ; pop rbx ; ret
0x000000000042dd47 : mov dword ptr [rbx + 0x30], ecx ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000471259 : mov dword ptr [rbx + 0x38], 0 ; pop rbx ; ret
0x00000000005457c8 : mov dword ptr [rbx + 0x48], 0 ; pop rbx ; ret
0x00000000004b1e9f : mov dword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x000000000046c4fc : mov dword ptr [rbx + 0x60], 0 ; pop rbx ; ret
0x000000000050adcd : mov dword ptr [rbx + 0x74], eax ; pop rbx ; ret
0x00000000004ca2db : mov dword ptr [rbx + 0xb0], edx ; pop rbx ; ret
0x0000000000492e15 : mov dword ptr [rbx + 4], ecx ; pop rbx ; pop r14 ; pop r15 ; ret
0x00000000004dda95 : mov dword ptr [rbx + 8], eax ; mov eax, 1 ; pop rbx ; ret
0x000000000048f366 : mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x0000000000472c88 : mov dword ptr [rbx + 8], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000005b29ae : mov dword ptr [rbx - 0x3f90d47a], ecx ; ret
0x000000000042a932 : mov dword ptr [rbx], 0 ; pop rbx ; ret
0x000000000050e382 : mov dword ptr [rbx], 0x83480200 ; ret
0x000000000053f220 : mov dword ptr [rbx], 0xffffffff ; pop rbx ; ret
0x00000000004e82d4 : mov dword ptr [rbx], eax ; mov eax, 1 ; pop rbx ; ret
0x0000000000498b7d : mov dword ptr [rbx], eax ; mov eax, 2 ; pop rbx ; ret
0x000000000048f363 : mov dword ptr [rbx], eax ; mov qword ptr [rbx + 8], rax ; pop rbx ; ret
0x0000000000488d75 : mov dword ptr [rbx], eax ; mov rax, qword ptr [rbx + 8] ; pop rbx ; ret
0x00000000004360af : mov dword ptr [rbx], eax ; pop rbx ; ret
0x00000000004a705b : mov dword ptr [rbx], eax ; sete al ; movzx eax, al ; pop rbx ; ret
0x0000000000565d2d : mov dword ptr [rbx], eax ; setne al ; movzx eax, al ; pop rbx ; ret
0x000000000058d2fb : mov dword ptr [rbx], eax ; test eax, 0xa25f8d6f ; ret 0x7455
0x00000000004eab96 : mov dword ptr [rbx], ecx ; add rsp, 0x20 ; pop rbx ; ret
0x00000000004de66f : mov dword ptr [rbx], edx ; add rsp, 0x10 ; pop rbx ; ret
0x00000000004b8def : mov dword ptr [rbx], esi ; add rsp, 8 ; pop rbx ; pop r14 ; ret
0x0000000000456990 : mov dword ptr [rbx], esi ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000045698f : mov dword ptr [rbx], r14d ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000041ad20 : mov dword ptr [rcx + 0x60], edx ; mov eax, 1 ; ret
0x000000000042c0f6 : mov dword ptr [rcx + 0x6c], eax ; pop rdx ; ret
0x000000000044db37 : mov dword ptr [rcx + 1], 0x78e88fca ; ret 0x2ef
0x000000000047c7e3 : mov dword ptr [rcx + 4], ebp ; mov dword ptr [r9], edx ; pop rbx ; pop rbp ; ret
0x00000000004e8a85 : mov dword ptr [rcx + rax*8], edi ; ret
0x0000000000539c29 : mov dword ptr [rcx + rax*8], edx ; mov rax, rdx ; ret
0x000000000054081a : mov dword ptr [rcx + rdx], esi ; ret
0x000000000052bdeb : mov dword ptr [rcx - 0x3f], 0x894106cd ; ret 0x2141
0x000000000048536e : mov dword ptr [rcx], 0 ; pop rdx ; ret
0x0000000000486bc1 : mov dword ptr [rcx], 0 ; ret
0x00000000004358e1 : mov dword ptr [rcx], 0xff480000 ; ret 0x8348
0x0000000000604b65 : mov dword ptr [rcx], eax ; add byte ptr [rax], bl ; xchg eax, edx ; in eax, dx ; jmp qword ptr [rcx]
0x00000000005a6575 : mov dword ptr [rcx], eax ; call 0x771cb161
0x00000000004abf8e : mov dword ptr [rcx], eax ; mov eax, 1 ; pop rbx ; ret
0x000000000056816f : mov dword ptr [rcx], eax ; mov eax, 1 ; ret
0x00000000004fda62 : mov dword ptr [rcx], eax ; ret
0x000000000046ad5e : mov dword ptr [rcx], ecx ; pop rbx ; ret
0x0000000000485369 : mov dword ptr [rcx], ecx ; pop rdx ; ret
0x000000000047c7e7 : mov dword ptr [rcx], edx ; pop rbx ; pop rbp ; ret
0x0000000000484ec4 : mov dword ptr [rcx], edx ; pop rdx ; ret
0x0000000000488e55 : mov dword ptr [rcx], edx ; ret
0x00000000005979e1 : mov dword ptr [rcx], esp ; jmp rcx
0x0000000000431901 : mov dword ptr [rdi + 0x108], esi ; ret
0x000000000046ab47 : mov dword ptr [rdi + 0x10], 0 ; ret
0x00000000004ffd6b : mov dword ptr [rdi + 0x10], 0x4ffd80 ; ret
0x000000000046b62a : mov dword ptr [rdi + 0x10], 1 ; ret
0x00000000004be224 : mov dword ptr [rdi + 0x10], eax ; mov qword ptr [rdi + 0x18], r9 ; ret
0x0000000000541b01 : mov dword ptr [rdi + 0x10], esi ; mov eax, 1 ; ret
0x00000000004be458 : mov dword ptr [rdi + 0x10], esi ; mov qword ptr [rdi + 0x18], r15 ; ret
0x00000000004610a1 : mov dword ptr [rdi + 0x10], esi ; ret
0x000000000054874b : mov dword ptr [rdi + 0x10], esi ; xor eax, eax ; ret
0x000000000042c348 : mov dword ptr [rdi + 0x128], edx ; pop rdx ; ret
0x000000000042c310 : mov dword ptr [rdi + 0x138], edx ; pop rdx ; ret
0x000000000042eae1 : mov dword ptr [rdi + 0x140], esi ; ret
0x000000000042b95c : mov dword ptr [rdi + 0x148], edx ; ret
0x00000000004e5826 : mov dword ptr [rdi + 0x14], eax ; mov eax, 1 ; ret
0x000000000042e351 : mov dword ptr [rdi + 0x150], esi ; ret
0x000000000042eaa1 : mov dword ptr [rdi + 0x160], esi ; ret
0x000000000042eac1 : mov dword ptr [rdi + 0x168], esi ; ret
0x000000000042d367 : mov dword ptr [rdi + 0x178], edx ; ret
0x000000000042eb50 : mov dword ptr [rdi + 0x178], esi ; ret
0x000000000042e761 : mov dword ptr [rdi + 0x180], esi ; ret
0x00000000004bdc63 : mov dword ptr [rdi + 0x18], ebx ; pop r13 ; pop r12 ; ret
0x000000000054b3fd : mov dword ptr [rdi + 0x18], ecx ; mov dword ptr [rdi], r9d ; ret
0x000000000056057b : mov dword ptr [rdi + 0x18], ecx ; mov eax, 1 ; ret
0x00000000004be228 : mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000004be45c : mov dword ptr [rdi + 0x18], edi ; ret
0x0000000000541491 : mov dword ptr [rdi + 0x18], esi ; mov eax, 1 ; ret
0x000000000048eaa1 : mov dword ptr [rdi + 0x18], esi ; ret
0x000000000054876b : mov dword ptr [rdi + 0x18], esi ; xor eax, eax ; ret
0x000000000042e560 : mov dword ptr [rdi + 0x190], esi ; ret
0x000000000042c11f : mov dword ptr [rdi + 0x1b8], edx ; pop rdx ; ret
0x000000000054341a : mov dword ptr [rdi + 0x20], eax ; mov eax, 1 ; ret
0x00000000005411d1 : mov dword ptr [rdi + 0x20], esi ; mov eax, 1 ; ret
0x00000000005007f1 : mov dword ptr [rdi + 0x20], esi ; mov qword ptr [rdi + 0x28], rdx ; ret
0x0000000000463b71 : mov dword ptr [rdi + 0x20], esi ; ret
0x000000000054878b : mov dword ptr [rdi + 0x20], esi ; xor eax, eax ; ret
0x000000000042eab1 : mov dword ptr [rdi + 0x210], esi ; ret
0x000000000042ead1 : mov dword ptr [rdi + 0x218], esi ; ret
0x000000000041ad59 : mov dword ptr [rdi + 0x248], edx ; jmp 0x41ad2a
0x0000000000461f40 : mov dword ptr [rdi + 0x24], eax ; ret
0x00000000004261d8 : mov dword ptr [rdi + 0x288], edx ; ret
0x000000000047eb23 : mov dword ptr [rdi + 0x28], eax ; mov qword ptr [rdi + 0x30], rcx ; ret
0x0000000000548613 : mov dword ptr [rdi + 0x28], ecx ; pop rdx ; ret
0x0000000000561c22 : mov dword ptr [rdi + 0x28], edx ; pop rbx ; pop r14 ; ret
0x000000000042c31d : mov dword ptr [rdi + 0x28], edx ; pop rdx ; ret
0x00000000005007f5 : mov dword ptr [rdi + 0x28], edx ; ret
0x000000000049cbf3 : mov dword ptr [rdi + 0x28], esi ; mov eax, 1 ; pop rdx ; ret
0x00000000005415a1 : mov dword ptr [rdi + 0x28], esi ; mov eax, 1 ; ret
0x000000000048eac1 : mov dword ptr [rdi + 0x28], esi ; ret
0x00000000005487ab : mov dword ptr [rdi + 0x28], esi ; xor eax, eax ; ret
0x00000000005abe51 : mov dword ptr [rdi + 0x2a], ebp ; cmp dl, byte ptr [rdx + rcx*2 + 0x26] ; ret 0x5ec7
0x000000000042cd08 : mov dword ptr [rdi + 0x2c0], edx ; ret
0x000000000042cd18 : mov dword ptr [rdi + 0x2d0], edx ; ret
0x000000000042cde8 : mov dword ptr [rdi + 0x2e8], edx ; ret
0x000000000054569a : mov dword ptr [rdi + 0x30], eax ; mov eax, 1 ; ret
0x000000000042a038 : mov dword ptr [rdi + 0x30], eax ; ret
0x00000000005622ea : mov dword ptr [rdi + 0x30], ebx ; mov qword ptr [rdi + 0x38], rcx ; pop rbx ; ret
0x0000000000562819 : mov dword ptr [rdi + 0x30], ecx ; mov qword ptr [rdi + 0x38], r9 ; ret
0x000000000047eb27 : mov dword ptr [rdi + 0x30], ecx ; ret
0x00000000005416b1 : mov dword ptr [rdi + 0x30], esi ; mov eax, 1 ; ret
0x0000000000513dc6 : mov dword ptr [rdi + 0x30], esi ; mov qword ptr [rdi + 0x38], r15 ; ret
0x0000000000500801 : mov dword ptr [rdi + 0x30], esi ; mov qword ptr [rdi + 0x38], rdx ; ret
0x00000000005007a1 : mov dword ptr [rdi + 0x30], esi ; ret
0x00000000005487cb : mov dword ptr [rdi + 0x30], esi ; xor eax, eax ; ret
0x0000000000464139 : mov dword ptr [rdi + 0x34], eax ; ret
0x00000000004641aa : mov dword ptr [rdi + 0x38], 0 ; ret
0x00000000005622ee : mov dword ptr [rdi + 0x38], ecx ; pop rbx ; ret
0x000000000056281d : mov dword ptr [rdi + 0x38], ecx ; ret
0x0000000000513dca : mov dword ptr [rdi + 0x38], edi ; ret
0x0000000000500805 : mov dword ptr [rdi + 0x38], edx ; ret
0x00000000005419f1 : mov dword ptr [rdi + 0x38], esi ; mov eax, 1 ; ret
0x00000000004ffd41 : mov dword ptr [rdi + 0x38], esi ; ret
0x000000000042c32c : mov dword ptr [rdi + 0x40], edx ; pop rdx ; ret
0x0000000000500751 : mov dword ptr [rdi + 0x40], esi ; mov dword ptr [rdi + 0x48], edx ; ret
0x0000000000541bc1 : mov dword ptr [rdi + 0x40], esi ; mov eax, 1 ; ret
0x0000000000500811 : mov dword ptr [rdi + 0x40], esi ; mov qword ptr [rdi + 0x48], rdx ; ret
0x000000000042e580 : mov dword ptr [rdi + 0x40], esi ; ret
0x000000000042e5a0 : mov dword ptr [rdi + 0x44], esi ; ret
0x000000000055f335 : mov dword ptr [rdi + 0x48], 0x55f340 ; ret
0x0000000000455185 : mov dword ptr [rdi + 0x48], edx ; mov qword ptr [rdi + 0x50], rcx ; ret
0x0000000000500754 : mov dword ptr [rdi + 0x48], edx ; ret
0x00000000005410c1 : mov dword ptr [rdi + 0x48], esi ; mov eax, 1 ; ret
0x000000000042e750 : mov dword ptr [rdi + 0x48], esi ; ret
0x0000000000455189 : mov dword ptr [rdi + 0x50], ecx ; ret
0x0000000000541381 : mov dword ptr [rdi + 0x50], esi ; mov eax, 1 ; ret
0x0000000000500821 : mov dword ptr [rdi + 0x50], esi ; mov qword ptr [rdi + 0x58], rdx ; ret
0x00000000004318a1 : mov dword ptr [rdi + 0x50], esi ; ret
0x00000000004c820d : mov dword ptr [rdi + 0x58], 0 ; ret
0x0000000000455176 : mov dword ptr [rdi + 0x58], ecx ; mov qword ptr [rdi + 0x60], rax ; ret
0x0000000000500825 : mov dword ptr [rdi + 0x58], edx ; ret
0x0000000000541861 : mov dword ptr [rdi + 0x58], esi ; mov eax, 1 ; ret
0x00000000004318c1 : mov dword ptr [rdi + 0x58], esi ; ret
0x000000000045517a : mov dword ptr [rdi + 0x60], eax ; ret
0x0000000000540ca1 : mov dword ptr [rdi + 0x60], esi ; mov eax, 1 ; ret
0x0000000000500831 : mov dword ptr [rdi + 0x60], esi ; mov qword ptr [rdi + 0x68], rdx ; ret
0x00000000004318e1 : mov dword ptr [rdi + 0x60], esi ; ret
0x0000000000419631 : mov dword ptr [rdi + 0x64], 0 ; ret
0x00000000004cf8ba : mov dword ptr [rdi + 0x68], edx ; pop rdx ; ret
0x0000000000500835 : mov dword ptr [rdi + 0x68], edx ; ret
0x00000000004ca8e1 : mov dword ptr [rdi + 0x68], esi ; mov eax, 1 ; ret
0x000000000055ae91 : mov dword ptr [rdi + 0x68], esi ; ret
0x00000000004cf8db : mov dword ptr [rdi + 0x70], eax ; mov eax, 1 ; ret
0x00000000005626f4 : mov dword ptr [rdi + 0x70], ecx ; mov qword ptr [rdi + 0x78], rcx ; pop rbx ; ret
0x00000000004ca8f1 : mov dword ptr [rdi + 0x70], esi ; mov eax, 1 ; ret
0x0000000000500841 : mov dword ptr [rdi + 0x70], esi ; mov qword ptr [rdi + 0x78], rdx ; ret
0x00000000005660f1 : mov dword ptr [rdi + 0x70], esi ; ret
0x00000000005124f6 : mov dword ptr [rdi + 0x78], eax ; mov rax, r11 ; ret
0x000000000056218c : mov dword ptr [rdi + 0x78], ebx ; pop rbx ; pop r14 ; ret
0x00000000005626f8 : mov dword ptr [rdi + 0x78], ecx ; pop rbx ; ret
0x0000000000500845 : mov dword ptr [rdi + 0x78], edx ; ret
0x00000000004ca901 : mov dword ptr [rdi + 0x78], esi ; mov eax, 1 ; ret
0x0000000000500858 : mov dword ptr [rdi + 0x88], edx ; ret
0x00000000004551b0 : mov dword ptr [rdi + 0x90], eax ; ret
0x000000000042c1ae : mov dword ptr [rdi + 0x90], edx ; pop rdx ; ret
0x000000000042b980 : mov dword ptr [rdi + 0x90], esi ; ret
0x0000000000500868 : mov dword ptr [rdi + 0x98], edx ; ret
0x000000000042eaf1 : mov dword ptr [rdi + 0x98], esi ; ret
0x000000000042d358 : mov dword ptr [rdi + 0xa0], edx ; ret
0x00000000004551c1 : mov dword ptr [rdi + 0xa0], esi ; ret
0x0000000000500878 : mov dword ptr [rdi + 0xa8], edx ; ret
0x000000000042d331 : mov dword ptr [rdi + 0xa8], esi ; ret
0x000000000042d341 : mov dword ptr [rdi + 0xb0], esi ; ret
0x0000000000512744 : mov dword ptr [rdi + 0xb8], eax ; ret
0x0000000000500888 : mov dword ptr [rdi + 0xb8], edx ; ret
0x0000000000431921 : mov dword ptr [rdi + 0xb8], esi ; ret
0x0000000000455152 : mov dword ptr [rdi + 0xc0], eax ; ret
0x00000000004319d1 : mov dword ptr [rdi + 0xc0], esi ; ret
0x00000000005000ae : mov dword ptr [rdi + 0xc8], eax ; ret
0x0000000000500898 : mov dword ptr [rdi + 0xc8], edx ; ret
0x00000000004319e1 : mov dword ptr [rdi + 0xc8], esi ; ret
0x00000000004565d3 : mov dword ptr [rdi + 0xc], 0x3e ; xor eax, eax ; ret
0x0000000000431568 : mov dword ptr [rdi + 0xd0], esi ; mov rax, rsi ; ret
0x0000000000491b72 : mov dword ptr [rdi + 4], eax ; pop rbx ; pop r14 ; pop r15 ; ret
0x0000000000492cfc : mov dword ptr [rdi + 4], ebp ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000047c427 : mov dword ptr [rdi + 4], ecx ; mov dword ptr [rdi], eax ; pop rbx ; pop rbp ; ret
0x000000000045defb : mov dword ptr [rdi + 4], edx ; mov dword ptr [rdi], eax ; pop rbx ; ret
0x00000000004418b7 : mov dword ptr [rdi + 4], edx ; mov eax, 1 ; pop rbx ; ret
0x000000000045defa : mov dword ptr [rdi + 4], r10d ; mov dword ptr [rdi], eax ; pop rbx ; ret
0x000000000047c426 : mov dword ptr [rdi + 4], r9d ; mov dword ptr [rdi], eax ; pop rbx ; pop rbp ; ret
0x00000000004e4162 : mov dword ptr [rdi + 8], eax ; mov eax, 1 ; ret
0x00000000005053eb : mov dword ptr [rdi + 8], eax ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000443b7c : mov dword ptr [rdi + 8], ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000046b610 : mov dword ptr [rdi + 8], ecx ; ret
0x000000000054d83f : mov dword ptr [rdi + 8], edx ; mov dword ptr [rdi], esi ; ret
0x000000000046b550 : mov dword ptr [rdi + 8], edx ; ret
0x00000000004ca8a7 : mov dword ptr [rdi + 8], esi ; mov eax, 1 ; pop rdx ; ret
0x0000000000426350 : mov dword ptr [rdi + 8], esi ; mov eax, 1 ; ret
0x00000000005605e1 : mov dword ptr [rdi + 8], esi ; or byte ptr [rdi + 0x18], 2 ; ret
0x0000000000461091 : mov dword ptr [rdi + 8], esi ; ret
0x000000000054872b : mov dword ptr [rdi + 8], esi ; xor eax, eax ; ret
0x0000000000507395 : mov dword ptr [rdi - 4], eax ; ret
0x0000000000507392 : mov dword ptr [rdi - 8], eax ; mov dword ptr [rdi - 4], eax ; ret
0x000000000053f72e : mov dword ptr [rdi], 0 ; ret
0x000000000059c70f : mov dword ptr [rdi], 0xae48daa ; shl dword ptr [rdi + rcx*2], cl ; ret
0x00000000004c820b : mov dword ptr [rdi], eax ; mov dword ptr [rdi + 0x58], 0 ; ret
0x00000000005669e9 : mov dword ptr [rdi], eax ; mov eax, 1 ; pop rdx ; ret
0x0000000000566915 : mov dword ptr [rdi], eax ; mov eax, 1 ; ret
0x000000000045652f : mov dword ptr [rdi], eax ; mov eax, 2 ; ret
0x0000000000500ab6 : mov dword ptr [rdi], eax ; mov rax, rcx ; ret
0x000000000047c42a : mov dword ptr [rdi], eax ; pop rbx ; pop rbp ; ret
0x000000000045defe : mov dword ptr [rdi], eax ; pop rbx ; ret
0x0000000000539819 : mov dword ptr [rdi], eax ; ret
0x00000000005397b6 : mov dword ptr [rdi], ebx ; mov rax, rsi ; ret
0x0000000000456265 : mov dword ptr [rdi], ecx ; mov eax, 1 ; ret
0x00000000004564c8 : mov dword ptr [rdi], ecx ; ret
0x00000000004261ba : mov dword ptr [rdi], edx ; mov eax, 1 ; ret
0x00000000004ca867 : mov dword ptr [rdi], esi ; mov eax, 1 ; pop rdx ; ret
0x0000000000429f82 : mov dword ptr [rdi], esi ; mov eax, esi ; ret
0x000000000048f2f1 : mov dword ptr [rdi], esi ; mov qword ptr [rdi + 8], rsi ; ret
0x00000000005486a1 : mov dword ptr [rdi], esi ; mov rax, rsi ; ret
0x0000000000456b00 : mov dword ptr [rdi], esi ; ret
0x00000000005397b5 : mov dword ptr [rdi], r11d ; mov rax, rsi ; ret
0x0000000000539818 : mov dword ptr [rdi], r8d ; ret
0x000000000054b400 : mov dword ptr [rdi], r9d ; ret
0x0000000000446f02 : mov dword ptr [rdx + 0x75], ebp ; ret 0x6a89
0x00000000005e94a1 : mov dword ptr [rdx], 0xf363a000 ; call rax
0x0000000000408d54 : mov dword ptr [rdx], 5 ; xor eax, eax ; pop rdx ; ret
0x0000000000614bbd : mov dword ptr [rdx], eax ; add byte ptr [rax], dl ; hlt ; call qword ptr [rdx]
0x00000000005e85b1 : mov dword ptr [rdx], eax ; add byte ptr [rax], dl ; int1 ; call qword ptr [rax]
0x00000000004279c5 : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000042ccf8 : mov dword ptr [rdx], eax ; ret
0x0000000000486969 : mov dword ptr [rdx], ecx ; pop rdx ; ret
0x000000000054d8d9 : mov dword ptr [rdx], ecx ; ret
0x00000000004442e3 : mov dword ptr [rdx], esi ; mov eax, edi ; pop rbx ; ret
0x000000000042dad0 : mov dword ptr [rdx], esi ; mov rax, qword ptr [rcx + rax + 0x78] ; pop rdx ; ret
0x000000000056606d : mov dword ptr [rip + 0x2c5645], eax ; ret
0x000000000055bb48 : mov dword ptr [rip + 0x2cf9b2], edi ; ret
0x000000000055b661 : mov dword ptr [rip + 0x2cfe79], edi ; ret
0x0000000000549130 : mov dword ptr [rip + 0x2e568e], edi ; ret
0x0000000000548681 : mov dword ptr [rip + 0x2e6119], edi ; ret
0x0000000000547403 : mov dword ptr [rip + 0x2e7397], eax ; pop rdx ; ret
0x000000000050d193 : mov dword ptr [rip + 0x3214af], eax ; pop rdx ; ret
0x000000000050d171 : mov dword ptr [rip + 0x3214d1], edi ; ret
0x0000000000504415 : mov dword ptr [rip + 0x32a20d], eax ; pop rbx ; ret
0x00000000005043ff : mov dword ptr [rip + 0x32a21b], ebx ; pop rbx ; ret
0x00000000004e9228 : mov dword ptr [rip + 0x33dc56], edi ; ret
0x00000000004e6651 : mov dword ptr [rip + 0x347f71], edi ; ret
0x00000000004dd370 : mov dword ptr [rip + 0x350ce2], eax ; pop rdx ; ret
0x00000000004cb980 : mov dword ptr [rip + 0x360ae2], edi ; ret
0x00000000004c5fb3 : mov dword ptr [rip + 0x36644f], eax ; pop rdx ; ret
0x00000000004c5f91 : mov dword ptr [rip + 0x366471], edi ; ret
0x00000000004bc153 : mov dword ptr [rip + 0x3702a7], eax ; pop rdx ; ret
0x00000000004bc131 : mov dword ptr [rip + 0x3702c9], edi ; ret
0x000000000049c6a1 : mov dword ptr [rip + 0x38f251], edi ; ret
0x000000000049a843 : mov dword ptr [rip + 0x3910a7], eax ; pop rdx ; ret
0x000000000049a821 : mov dword ptr [rip + 0x3910c9], edi ; ret
0x0000000000496463 : mov dword ptr [rip + 0x39547f], eax ; pop rdx ; ret
0x0000000000496441 : mov dword ptr [rip + 0x3954a1], edi ; ret
0x000000000048f3b1 : mov dword ptr [rip + 0x39c521], edi ; ret
0x000000000048f2d1 : mov dword ptr [rip + 0x39c5f1], edi ; ret
0x000000000048f2ba : mov dword ptr [rip + 0x39c600], ebx ; pop rbx ; ret
0x000000000048f281 : mov dword ptr [rip + 0x39c629], edi ; ret
0x000000000048f261 : mov dword ptr [rip + 0x39c639], edi ; ret
0x000000000048f271 : mov dword ptr [rip + 0x39c641], edi ; ret
0x000000000046a96e : mov dword ptr [rip + 0x3c0ea8], eax ; ret
0x0000000000443341 : mov dword ptr [rip + 0x3db891], edi ; ret
0x0000000000429908 : mov dword ptr [rip + 0x401eca], edi ; ret
0x000000000046afb4 : mov dword ptr [rsi + 0x14], eax ; pop rbx ; ret
0x000000000040476a : mov dword ptr [rsi + 0x20], eax ; ret
0x0000000000405161 : mov dword ptr [rsi + 0x50], ebx ; mov rdi, r14 ; call 0x411378
0x00000000004e2396 : mov dword ptr [rsi + 0xc8], eax ; pop rbx ; pop r14 ; ret
0x00000000004cb330 : mov dword ptr [rsi], 0 ; xor eax, eax ; ret
0x000000000056505a : mov dword ptr [rsi], 0xffffffff ; ret
0x0000000000430708 : mov dword ptr [rsi], eax ; add rdi, 0x48 ; mov rax, rdi ; ret
0x00000000004d97e5 : mov dword ptr [rsi], eax ; add rsp, 0x38 ; pop rbx ; pop r14 ; ret
0x00000000004cb31a : mov dword ptr [rsi], eax ; mov eax, 1 ; ret
0x000000000042985f : mov dword ptr [rsi], eax ; mov eax, dword ptr [rdi + 0x50] ; ret
0x0000000000568840 : mov dword ptr [rsi], eax ; mov rax, qword ptr [rcx + 8] ; ret
0x00000000004c84b7 : mov dword ptr [rsi], eax ; pop rbx ; pop r14 ; pop r15 ; ret
0x00000000004e5dee : mov dword ptr [rsi], eax ; ret
0x000000000049f2c6 : mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x0000000000459701 : mov dword ptr [rsi], ebx ; xor esi, esi ; mov rdi, r12 ; call r15
0x000000000045efe0 : mov dword ptr [rsi], ecx ; add rsp, 0x18 ; pop rbx ; pop r14 ; ret
0x0000000000461ba0 : mov dword ptr [rsi], ecx ; ret
0x00000000004e9146 : mov dword ptr [rsi], edi ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004e9145 : mov dword ptr [rsi], r15d ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000048fd71 : mov dword ptr [rsp + 0x18], eax ; mov r12, r10 ; call r12
0x000000000047f2cd : mov dword ptr [rsp + 0x20], eax ; mov r8, rbx ; call r10
0x000000000047efda : mov dword ptr [rsp + 0x28], eax ; call r14
0x00000000004c535b : mov dword ptr [rsp + 0x28], ebp ; mov rcx, rbx ; call r14
0x00000000004aa36f : mov dword ptr [rsp + 0x28], edx ; mov r8, r14 ; call rax
0x0000000000467f6b : mov dword ptr [rsp + 0x30], eax ; mov rdi, rbp ; call 0x4641c9
0x0000000000467f78 : mov dword ptr [rsp + 0x40], eax ; mov rdi, rbp ; call 0x4641c9
0x00000000004d4778 : mov dword ptr [rsp + 0x50], eax ; call r15
0x0000000000467f5e : mov dword ptr [rsp + 0x50], eax ; mov rdi, rbp ; call 0x4641c9
0x000000000051415c : mov dword ptr [rsp + 0x80], edi ; ret
0x000000000048fe3c : mov dword ptr [rsp + 8], edx ; call r10
0x000000000048ff2b : mov dword ptr [rsp + 8], esi ; mov r14, r9 ; call r14
0x0000000000549bcd : mov dword ptr [rsp + rax + 0x10], 0xff48003a ; ret
0x000000000045d636 : mov dword ptr es:[rax], ecx ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005991ad : mov dword ptr gs:[rax], eax ; jmp qword ptr [rax]
0x0000000000436156 : mov eax, 0x10 ; ret
0x00000000004046d0 : mov eax, 0x100 ; ret
0x00000000005e3aa8 : mov eax, 0x10000159 ; ja 0x5e3a9f ; jmp rax
0x00000000005ec050 : mov eax, 0x1000036f ; jo 0x5ec056 ; call rax
0x00000000004904e0 : mov eax, 0x1000201f ; ret
0x000000000043615c : mov eax, 0x11 ; ret
0x0000000000436162 : mov eax, 0x12 ; ret
0x000000000040ad50 : mov eax, 0x12c ; ret
0x00000000004360f8 : mov eax, 0x13 ; ret
0x00000000005e3450 : mov eax, 0x13a ; sub al, -0x18 ; call rax
0x0000000000436168 : mov eax, 0x14 ; ret
0x000000000043616e : mov eax, 0x15 ; ret
0x0000000000436174 : mov eax, 0x16 ; ret
0x000000000043614d : mov eax, 0x17 ; ret
0x00000000004850b8 : mov eax, 0x18 ; jmp 0x4850d6
0x000000000043617a : mov eax, 0x18 ; ret
0x00000000004bb80e : mov eax, 0x184 ; jmp 0x4bb7ba
0x0000000000436180 : mov eax, 0x19 ; ret
0x00000000005e5239 : mov eax, 0x19400001 ; in al, dx ; jmp rax
0x00000000005e5241 : mov eax, 0x19f00001 ; in al, dx ; call qword ptr [rax]
0x0000000000436131 : mov eax, 0x1a ; ret
0x00000000004d0263 : mov eax, 0x1a5 ; pop rbx ; ret
0x00000000005acb65 : mov eax, 0x1a5456b3 ; ret 0x6df0
0x00000000004d025c : mov eax, 0x1a9 ; pop rbx ; ret
0x00000000004d0272 : mov eax, 0x1ad ; pop rbx ; ret
0x0000000000440149 : mov eax, 0x1af ; call 0x4cc377
0x000000000043610e : mov eax, 0x1b ; ret
0x000000000043613f : mov eax, 0x1c ; ret
0x0000000000405bd0 : mov eax, 0x1c20 ; ret
0x00000000004d0218 : mov eax, 0x1e ; pop rbx ; ret
0x00000000004371f7 : mov eax, 0x1e ; ret
0x00000000005e5211 : mov eax, 0x1e00001 ; in al, dx ; jmp qword ptr [rax]
0x0000000000480e50 : mov eax, 0x20 ; ret
0x00000000005e2760 : mov eax, 0x20000103 ; mov dl, -0x1b ; call rax
0x00000000005e6918 : mov eax, 0x20000217 ; fucomp st(6) ; call rax
0x00000000005e9fa8 : mov eax, 0x200002f1 ; or esi, esi ; call rax
0x00000000005eb300 : mov eax, 0x2000033e ; mov bh, dh ; call rax
0x000000000041b63f : mov eax, 0x20080 ; cmove rax, rcx ; ret
0x00000000005e85f0 : mov eax, 0x28a ; int1 ; call rax
0x00000000005e8690 : mov eax, 0x28c ; push rcx ; int1 ; jmp rax
0x000000000048ed20 : mov eax, 0x29 ; ret
0x00000000004b00cc : mov eax, 0x292 ; call 0x4cc377
0x00000000004b430a : mov eax, 0x2aa ; pop rbx ; ret
0x0000000000436365 : mov eax, 0x2cb ; pop rbx ; ret
0x00000000005e98c8 : mov eax, 0x2db ; out -0xb, al ; call rax
0x0000000000411092 : mov eax, 0x2e ; ret
0x000000000059507e : mov eax, 0x2e34d45f ; idiv dword ptr [rdx] ; ret
0x00000000005e9c38 : mov eax, 0x2e6 ; cli ; cmc ; call rax
0x00000000005e1528 : mov eax, 0x300000b9 ; ja 0x5e1518 ; call rax
0x00000000005e6518 : mov eax, 0x30000208 ; xchg eax, esi ; out dx, al ; call rax
0x00000000005e66d8 : mov eax, 0x3000020e ; lodsb al, byte ptr [rsi] ; out dx, al ; call rax
0x00000000005ebb58 : mov eax, 0x3000035e ; clc ; call rax
0x000000000059778e : mov eax, 0x32142f94 ; ret
0x00000000005eb1c8 : mov eax, 0x33a ; jg 0x5eb1cd ; call rax
0x0000000000510d38 : mov eax, 0x34 ; ret
0x0000000000510d2a : mov eax, 0x35 ; ret
0x0000000000510d24 : mov eax, 0x36 ; ret
0x00000000005ebf40 : mov eax, 0x36b ; clc ; call rax
0x00000000004dac80 : mov eax, 0x40 ; ret
0x00000000005e4910 : mov eax, 0x40000194 ; sub bl, ch ; call rax
0x00000000005e73b0 : mov eax, 0x40000244 ; adc dh, al ; call rax
0x00000000005e93c8 : mov eax, 0x400002c3 ; in eax, -0xe ; jmp rax
0x00000000005e9ea8 : mov eax, 0x400002ee ; or dh, dh ; call rax
0x000000000057d685 : mov eax, 0x404fa2 ; leave ; and byte ptr [rdx], ah ; ret
0x000000000046aaf8 : mov eax, 0x415b0007 ; pop rsi ; pop rbp ; ret
0x00000000004899cc : mov eax, 0x48001f0f ; mov eax, dword ptr [rdi + 0x78] ; ret
0x00000000005e3ed0 : mov eax, 0x5000016b ; sub edx, ebp ; call rax
0x00000000005e5d98 : mov eax, 0x500001e9 ; jb 0x5e5d93 ; call rax
0x00000000005e99a8 : mov eax, 0x500002de ; int1 ; cmc ; call rax
0x00000000005e9aa8 : mov eax, 0x500002e1 ; cmc ; call rax
0x00000000005e9ba8 : mov eax, 0x500002e4 ; cmc ; cmc ; call rax
0x00000000005ea6d8 : mov eax, 0x5000030c ; jns 0x5ea6dc ; call rax
0x00000000005eae90 : mov eax, 0x5000032b ; adc bh, dh ; call rax
0x00000000005ab534 : mov eax, 0x502b7c77 ; jmp qword ptr [rdi]
0x00000000004b6cf0 : mov eax, 0x51 ; ret
0x000000000059d6fd : mov eax, 0x51f8d28f ; ret 0x2a40
0x00000000005aeb90 : mov eax, 0x53206348 ; ret 0x6202
0x000000000054df6d : mov eax, 0x54e6a0 ; call 0x4ea257
0x0000000000404f80 : mov eax, 0x56a3a0 ; ret
0x0000000000405b50 : mov eax, 0x56a488 ; ret
0x0000000000405b60 : mov eax, 0x56a570 ; ret
0x00000000004068d0 : mov eax, 0x56a6c8 ; ret
0x0000000000406900 : mov eax, 0x56a7b0 ; ret
0x0000000000406910 : mov eax, 0x56a898 ; ret
0x0000000000408f00 : mov eax, 0x56aad0 ; ret
0x0000000000409e20 : mov eax, 0x56abb8 ; ret
0x0000000000409e30 : mov eax, 0x56aca0 ; ret
0x0000000000409e40 : mov eax, 0x56add8 ; ret
0x000000000040af90 : mov eax, 0x56af18 ; ret
0x000000000040b0d0 : mov eax, 0x56b040 ; ret
0x000000000040bc20 : mov eax, 0x56b158 ; ret
0x000000000040dfc0 : mov eax, 0x56b638 ; ret
0x000000000040ebc0 : mov eax, 0x56b768 ; ret
0x00000000004125e0 : mov eax, 0x56ba10 ; ret
0x000000000041b650 : mov eax, 0x56cc38 ; ret
0x000000000041dc10 : mov eax, 0x56cd40 ; ret
0x00000000005c3630 : mov eax, 0x56ef ; add byte ptr [rax], al ; add dl, ch ; ret 0x5c
0x0000000000429831 : mov eax, 0x56ef41 ; ret
0x0000000000433018 : mov eax, 0x56f078 ; ret
0x000000000042dfd2 : mov eax, 0x56f0ae ; ret
0x0000000000432f29 : mov eax, 0x56f1f7 ; ret
0x000000000042dfde : mov eax, 0x56f46e ; ret
0x00000000004330bd : mov eax, 0x56fe33 ; ret
0x00000000004f00a9 : mov eax, 0x57 ; call 0x4cc377
0x0000000000433128 : mov eax, 0x570854 ; ret
0x000000000043312e : mov eax, 0x570cd7 ; ret
0x0000000000433140 : mov eax, 0x570d0e ; ret
0x000000000043313a : mov eax, 0x570d2e ; ret
0x0000000000433146 : mov eax, 0x570d4e ; ret
0x0000000000429837 : mov eax, 0x570d5a ; ret
0x000000000043308e : mov eax, 0x570d6e ; ret
0x000000000043314c : mov eax, 0x570dae ; ret
0x0000000000433134 : mov eax, 0x570e06 ; ret
0x00000000004330b7 : mov eax, 0x570e45 ; ret
0x0000000000433158 : mov eax, 0x570f0f ; ret
0x000000000043307e : mov eax, 0x570f42 ; ret
0x0000000000433164 : mov eax, 0x570f60 ; ret
0x000000000043316a : mov eax, 0x570f7a ; ret
0x0000000000433176 : mov eax, 0x570fbc ; ret
0x00000000004330fe : mov eax, 0x570fde ; ret
0x00000000004330e8 : mov eax, 0x570ff9 ; ret
0x0000000000433170 : mov eax, 0x571016 ; ret
0x00000000004330c8 : mov eax, 0x571033 ; ret
0x000000000043311c : mov eax, 0x57107b ; ret
0x0000000000433116 : mov eax, 0x57109c ; ret
0x000000000043310a : mov eax, 0x5710c2 ; ret
0x0000000000433110 : mov eax, 0x5710e1 ; ret
0x00000000004330dd : mov eax, 0x5710f9 ; ret
0x000000000043252b : mov eax, 0x57144e ; ret
0x0000000000432037 : mov eax, 0x5730b2 ; ret
0x0000000000431dab : mov eax, 0x5730cf ; ret
0x0000000000431af9 : mov eax, 0x5730ed ; ret
0x0000000000431dce : mov eax, 0x573113 ; ret
0x0000000000431b1d : mov eax, 0x57312b ; ret
0x000000000043223b : mov eax, 0x573149 ; ret
0x0000000000431b0b : mov eax, 0x573167 ; ret
0x0000000000432379 : mov eax, 0x573184 ; ret
0x00000000004321a1 : mov eax, 0x5731a1 ; ret
0x0000000000431f9d : mov eax, 0x5731bf ; ret
0x0000000000432229 : mov eax, 0x5731dd ; ret
0x0000000000432503 : mov eax, 0x5731f8 ; ret
0x0000000000432217 : mov eax, 0x573213 ; ret
0x00000000004324f5 : mov eax, 0x57322d ; ret
0x0000000000432205 : mov eax, 0x573247 ; ret
0x00000000004324e7 : mov eax, 0x573267 ; ret
0x00000000004321f3 : mov eax, 0x573287 ; ret
0x00000000004324d9 : mov eax, 0x5732a5 ; ret
0x00000000004321e1 : mov eax, 0x5732c3 ; ret
0x00000000004324bf : mov eax, 0x5732e4 ; ret
0x00000000004324c5 : mov eax, 0x573305 ; ret
0x00000000004324cb : mov eax, 0x573326 ; ret
0x00000000004321c5 : mov eax, 0x573347 ; ret
0x00000000004324b9 : mov eax, 0x573362 ; ret
0x00000000004321b3 : mov eax, 0x57337d ; ret
0x00000000004324ab : mov eax, 0x57339a ; ret
0x0000000000432517 : mov eax, 0x5733b7 ; ret
0x0000000000432367 : mov eax, 0x5733d1 ; ret
0x0000000000432525 : mov eax, 0x5733eb ; ret
0x0000000000432349 : mov eax, 0x573405 ; ret
0x0000000000432511 : mov eax, 0x573420 ; ret
0x000000000043200d : mov eax, 0x57343b ; ret
0x0000000000432337 : mov eax, 0x57345a ; ret
0x0000000000432313 : mov eax, 0x573479 ; ret
0x0000000000431ffb : mov eax, 0x573495 ; ret
0x0000000000432325 : mov eax, 0x5734b1 ; ret
0x0000000000431fdd : mov eax, 0x5734cd ; ret
0x000000000043230d : mov eax, 0x5734ea ; ret
0x0000000000431fcb : mov eax, 0x573507 ; ret
0x00000000004322fb : mov eax, 0x573525 ; ret
0x0000000000431fb9 : mov eax, 0x573543 ; ret
0x00000000004322dd : mov eax, 0x573565 ; ret
0x00000000004322e3 : mov eax, 0x573587 ; ret
0x00000000004322e9 : mov eax, 0x5735a9 ; ret
0x0000000000431f8b : mov eax, 0x5735cb ; ret
0x000000000043218f : mov eax, 0x5735ee ; ret
0x000000000043216b : mov eax, 0x573611 ; ret
0x0000000000432499 : mov eax, 0x57362c ; ret
0x0000000000432159 : mov eax, 0x573647 ; ret
0x000000000043247b : mov eax, 0x573661 ; ret
0x000000000043213d : mov eax, 0x57367b ; ret
0x0000000000432475 : mov eax, 0x57369b ; ret
0x000000000043212b : mov eax, 0x5736bb ; ret
0x0000000000432463 : mov eax, 0x5736dc ; ret
0x0000000000432119 : mov eax, 0x5736fd ; ret
0x0000000000432451 : mov eax, 0x573725 ; ret
0x000000000043206d : mov eax, 0x57374d ; ret
0x00000000004323af : mov eax, 0x573770 ; ret
0x0000000000432107 : mov eax, 0x573793 ; ret
0x000000000043243f : mov eax, 0x5737ac ; ret
0x00000000004320f5 : mov eax, 0x5737c5 ; ret
0x0000000000432421 : mov eax, 0x5737e6 ; ret
0x0000000000432427 : mov eax, 0x573807 ; ret
0x000000000043242d : mov eax, 0x573828 ; ret
0x00000000004320d9 : mov eax, 0x573849 ; ret
0x000000000043241b : mov eax, 0x57386b ; ret
0x00000000004320c7 : mov eax, 0x57388d ; ret
0x0000000000432409 : mov eax, 0x5738ae ; ret
0x00000000004320b5 : mov eax, 0x5738cf ; ret
0x00000000004323f7 : mov eax, 0x5738f0 ; ret
0x00000000004320a3 : mov eax, 0x573911 ; ret
0x00000000004323e5 : mov eax, 0x573928 ; ret
0x0000000000432091 : mov eax, 0x57393f ; ret
0x00000000004323d3 : mov eax, 0x57395f ; ret
0x000000000043207f : mov eax, 0x57397f ; ret
0x00000000004323c1 : mov eax, 0x573995 ; ret
0x000000000043217d : mov eax, 0x5739ab ; ret
0x0000000000431f68 : mov eax, 0x5739bc ; ret
0x00000000004322c5 : mov eax, 0x5739d6 ; ret
0x00000000004322cb : mov eax, 0x5739f0 ; ret
0x00000000004322ad : mov eax, 0x573a0a ; ret
0x0000000000431f4c : mov eax, 0x573a26 ; ret
0x00000000004322bf : mov eax, 0x573a42 ; ret
0x0000000000431f2e : mov eax, 0x573a5e ; ret
0x00000000004322a7 : mov eax, 0x573a79 ; ret
0x0000000000431f1c : mov eax, 0x573a94 ; ret
0x0000000000432295 : mov eax, 0x573aae ; ret
0x0000000000431f0a : mov eax, 0x573ac8 ; ret
0x0000000000432283 : mov eax, 0x573ae3 ; ret
0x0000000000431ef8 : mov eax, 0x573afe ; ret
0x0000000000432271 : mov eax, 0x573b20 ; ret
0x0000000000431dea : mov eax, 0x573b42 ; ret
0x0000000000431e2b : mov eax, 0x573b5f ; ret
0x0000000000431ee6 : mov eax, 0x573b7c ; ret
0x000000000043225f : mov eax, 0x573b96 ; ret
0x0000000000431ec2 : mov eax, 0x573bb0 ; ret
0x000000000043224d : mov eax, 0x573bd0 ; ret
0x0000000000431e9e : mov eax, 0x573bf0 ; ret
0x0000000000431ed4 : mov eax, 0x573c11 ; ret
0x0000000000431e90 : mov eax, 0x573c32 ; ret
0x0000000000431eb0 : mov eax, 0x573c52 ; ret
0x000000000043205b : mov eax, 0x573c72 ; ret
0x000000000043239d : mov eax, 0x573c90 ; ret
0x0000000000432049 : mov eax, 0x573cae ; ret
0x000000000043238b : mov eax, 0x573ccb ; ret
0x0000000000431ddc : mov eax, 0x573ce8 ; ret
0x0000000000431dfc : mov eax, 0x573d05 ; ret
0x0000000000432481 : mov eax, 0x573d22 ; ret
0x0000000000432487 : mov eax, 0x573d44 ; ret
0x00000000004322d1 : mov eax, 0x573d66 ; ret
0x00000000004322d7 : mov eax, 0x573d89 ; ret
0x0000000000432566 : mov eax, 0x573db8 ; ret
0x0000000000432558 : mov eax, 0x573dc2 ; ret
0x0000000000432ac3 : mov eax, 0x573dd3 ; ret
0x00000000004325d4 : mov eax, 0x573dda ; ret
0x00000000004325a1 : mov eax, 0x573de1 ; ret
0x0000000000432e2b : mov eax, 0x573de8 ; ret
0x0000000000432fe8 : mov eax, 0x573dec ; ret
0x0000000000432a09 : mov eax, 0x573def ; ret
0x00000000004325f8 : mov eax, 0x573df6 ; ret
0x0000000000432632 : mov eax, 0x573dfd ; ret
0x0000000000432620 : mov eax, 0x573e04 ; ret
0x000000000043265a : mov eax, 0x573e0b ; ret
0x0000000000432648 : mov eax, 0x573e12 ; ret
0x0000000000432686 : mov eax, 0x573e19 ; ret
0x0000000000432674 : mov eax, 0x573e20 ; ret
0x0000000000432888 : mov eax, 0x573e27 ; ret
0x0000000000432876 : mov eax, 0x573e2e ; ret
0x0000000000432be3 : mov eax, 0x573e35 ; ret
0x0000000000432be9 : mov eax, 0x573e3c ; ret
0x0000000000432bef : mov eax, 0x573e43 ; ret
0x0000000000432bdd : mov eax, 0x573e4a ; ret
0x0000000000432e15 : mov eax, 0x573e51 ; ret
0x0000000000432e03 : mov eax, 0x573e58 ; ret
0x0000000000432e39 : mov eax, 0x573e5f ; ret
0x0000000000432d03 : mov eax, 0x573e66 ; ret
0x0000000000432ab1 : mov eax, 0x573e6d ; ret
0x0000000000432d15 : mov eax, 0x573e74 ; ret
0x0000000000432a93 : mov eax, 0x573e7b ; ret
0x0000000000432cfd : mov eax, 0x573e82 ; ret
0x0000000000432a81 : mov eax, 0x573e89 ; ret
0x0000000000432cd9 : mov eax, 0x573e90 ; ret
0x0000000000432a67 : mov eax, 0x573e97 ; ret
0x0000000000432ceb : mov eax, 0x573e9e ; ret
0x0000000000432a49 : mov eax, 0x573ea5 ; ret
0x0000000000432cd3 : mov eax, 0x573eac ; ret
0x0000000000432a37 : mov eax, 0x573eb3 ; ret
0x0000000000432cc1 : mov eax, 0x573eba ; ret
0x0000000000432a25 : mov eax, 0x573ec1 ; ret
0x0000000000432ca3 : mov eax, 0x573ec8 ; ret
0x0000000000432ca9 : mov eax, 0x573ecf ; ret
0x0000000000432caf : mov eax, 0x573ed6 ; ret
0x00000000004329f7 : mov eax, 0x573edd ; ret
0x0000000000432e4f : mov eax, 0x573ee4 ; ret
0x0000000000432e65 : mov eax, 0x573eeb ; ret
0x0000000000432e7b : mov eax, 0x573ef2 ; ret
0x0000000000432ea1 : mov eax, 0x573ef9 ; ret
0x0000000000432e93 : mov eax, 0x573f00 ; ret
0x0000000000432ead : mov eax, 0x573f07 ; ret
0x0000000000432bbf : mov eax, 0x573f0e ; ret
0x0000000000432ded : mov eax, 0x573f15 ; ret
0x0000000000432bad : mov eax, 0x573f1c ; ret
0x0000000000432ddb : mov eax, 0x573f23 ; ret
0x0000000000432b9b : mov eax, 0x573f2a ; ret
0x0000000000432dc9 : mov eax, 0x573f31 ; ret
0x0000000000432b89 : mov eax, 0x573f38 ; ret
0x0000000000432db7 : mov eax, 0x573f3f ; ret
0x0000000000432b77 : mov eax, 0x573f46 ; ret
0x0000000000432d99 : mov eax, 0x573f4d ; ret
0x0000000000432d9f : mov eax, 0x573f54 ; ret
0x0000000000432da5 : mov eax, 0x573f5b ; ret
0x0000000000432b5b : mov eax, 0x573f62 ; ret
0x0000000000432d93 : mov eax, 0x573f69 ; ret
0x0000000000432b49 : mov eax, 0x573f70 ; ret
0x0000000000432d81 : mov eax, 0x573f77 ; ret
0x0000000000432b37 : mov eax, 0x573f7e ; ret
0x0000000000432d6f : mov eax, 0x573f85 ; ret
0x0000000000432b25 : mov eax, 0x573f8c ; ret
0x0000000000432d5d : mov eax, 0x573f93 ; ret
0x0000000000432b13 : mov eax, 0x573f9a ; ret
0x0000000000432d4b : mov eax, 0x573fa1 ; ret
0x0000000000432b01 : mov eax, 0x573fa8 ; ret
0x0000000000432d39 : mov eax, 0x573faf ; ret
0x0000000000432c73 : mov eax, 0x573fb6 ; ret
0x00000000004329b8 : mov eax, 0x573fbd ; ret
0x0000000000432c85 : mov eax, 0x573fc4 ; ret
0x00000000004329d4 : mov eax, 0x573fcb ; ret
0x0000000000432c8b : mov eax, 0x573fd2 ; ret
0x0000000000432c91 : mov eax, 0x573fd9 ; ret
0x000000000043299a : mov eax, 0x573fe0 ; ret
0x0000000000432c6d : mov eax, 0x573fe7 ; ret
0x0000000000432988 : mov eax, 0x573fee ; ret
0x0000000000432c5b : mov eax, 0x573ff5 ; ret
0x0000000000432976 : mov eax, 0x573ffc ; ret
0x0000000000432c49 : mov eax, 0x574003 ; ret
0x0000000000432964 : mov eax, 0x57400a ; ret
0x0000000000432c37 : mov eax, 0x574011 ; ret
0x0000000000432952 : mov eax, 0x574018 ; ret
0x0000000000432c25 : mov eax, 0x57401f ; ret
0x0000000000432940 : mov eax, 0x574026 ; ret
0x0000000000432c13 : mov eax, 0x57402d ; ret
0x000000000043291c : mov eax, 0x574034 ; ret
0x0000000000432c01 : mov eax, 0x57403b ; ret
0x000000000043290a : mov eax, 0x574042 ; ret
0x000000000043292e : mov eax, 0x574049 ; ret
0x0000000000432aef : mov eax, 0x574050 ; ret
0x0000000000432d27 : mov eax, 0x574057 ; ret
0x0000000000432add : mov eax, 0x57405e ; ret
0x00000000004325e2 : mov eax, 0x574065 ; ret
0x000000000043260a : mov eax, 0x57406c ; ret
0x0000000000432eb3 : mov eax, 0x574073 ; ret
0x0000000000432eb9 : mov eax, 0x57407a ; ret
0x0000000000432c97 : mov eax, 0x574081 ; ret
0x0000000000432c9d : mov eax, 0x574088 ; ret
0x0000000000432ea7 : mov eax, 0x57408f ; ret
0x0000000000432ed2 : mov eax, 0x57409e ; ret
0x0000000000432f7d : mov eax, 0x5740a7 ; ret
0x0000000000432f4e : mov eax, 0x5740aa ; ret
0x0000000000432f77 : mov eax, 0x5740ad ; ret
0x0000000000432ff4 : mov eax, 0x5740b0 ; ret
0x0000000000432ffa : mov eax, 0x5740b3 ; ret
0x0000000000433006 : mov eax, 0x5740b6 ; ret
0x0000000000432ef8 : mov eax, 0x5740b7 ; ret
0x000000000043300c : mov eax, 0x5740b9 ; ret
0x0000000000432f3e : mov eax, 0x5740bc ; ret
0x0000000000432f88 : mov eax, 0x5740bf ; ret
0x0000000000433030 : mov eax, 0x5740c2 ; ret
0x0000000000433036 : mov eax, 0x5740c5 ; ret
0x0000000000432fbe : mov eax, 0x5740c8 ; ret
0x0000000000432fa8 : mov eax, 0x5740cb ; ret
0x0000000000432fca : mov eax, 0x5740ce ; ret
0x0000000000432fd6 : mov eax, 0x5740d1 ; ret
0x0000000000432fdc : mov eax, 0x5740d4 ; ret
0x0000000000432fc4 : mov eax, 0x5740d7 ; ret
0x0000000000433069 : mov eax, 0x5740e7 ; ret
0x0000000000433152 : mov eax, 0x5740fa ; ret
0x00000000004330f3 : mov eax, 0x574105 ; ret
0x0000000000433122 : mov eax, 0x574113 ; ret
0x00000000004331a6 : mov eax, 0x57412b ; ret
0x000000000042dfd8 : mov eax, 0x574169 ; ret
0x00000000004336d0 : mov eax, 0x574338 ; ret
0x00000000004336f2 : mov eax, 0x574420 ; ret
0x0000000000433720 : mov eax, 0x574508 ; ret
0x000000000043c490 : mov eax, 0x574e58 ; ret
0x000000000043c4b2 : mov eax, 0x574f40 ; ret
0x000000000043c4e0 : mov eax, 0x575028 ; ret
0x000000000043c8c0 : mov eax, 0x575188 ; ret
0x000000000043c8e2 : mov eax, 0x575270 ; ret
0x000000000043c910 : mov eax, 0x575358 ; ret
0x0000000000448600 : mov eax, 0x575b97 ; ret
0x000000000043302a : mov eax, 0x5769c9 ; ret
0x000000000045daa0 : mov eax, 0x577c9c ; ret
0x000000000046a9b0 : mov eax, 0x57a7e8 ; ret
0x000000000046e570 : mov eax, 0x57aa00 ; ret
0x000000000046e580 : mov eax, 0x57aa18 ; ret
0x000000000046e590 : mov eax, 0x57aa30 ; ret
0x000000000046e5a0 : mov eax, 0x57aa48 ; ret
0x000000000046e5b0 : mov eax, 0x57aa60 ; ret
0x00000000005100d3 : mov eax, 0x58 ; call 0x4cc377
0x0000000000432fd0 : mov eax, 0x5824c3 ; ret
0x000000000048f49f : mov eax, 0x582724 ; jle 0x48f4b0 ; pop rbx ; ret
0x000000000049f64f : mov eax, 0x585d60 ; cmovne rax, rcx ; ret
0x000000000049f66f : mov eax, 0x585e10 ; cmovne rax, rcx ; ret
0x000000000049f68f : mov eax, 0x585ec0 ; cmovne rax, rcx ; ret
0x000000000049f6af : mov eax, 0x585f70 ; cmovne rax, rcx ; ret
0x000000000049f6cf : mov eax, 0x586020 ; cmovne rax, rcx ; ret
0x000000000049f6ef : mov eax, 0x5860d0 ; cmovne rax, rcx ; ret
0x000000000049f70f : mov eax, 0x586180 ; cmovne rax, rcx ; ret
0x000000000049f72f : mov eax, 0x586230 ; cmovne rax, rcx ; ret
0x000000000049f74f : mov eax, 0x5862e0 ; cmovne rax, rcx ; ret
0x000000000049f76f : mov eax, 0x586390 ; cmovne rax, rcx ; ret
0x000000000049f78f : mov eax, 0x586440 ; cmovne rax, rcx ; ret
0x000000000049f7af : mov eax, 0x5864f0 ; cmovne rax, rcx ; ret
0x000000000049f7cf : mov eax, 0x5865a0 ; cmovne rax, rcx ; ret
0x000000000049f7ef : mov eax, 0x586650 ; cmovne rax, rcx ; ret
0x000000000049f80f : mov eax, 0x586700 ; cmovne rax, rcx ; ret
0x000000000049f82f : mov eax, 0x5867b0 ; cmovne rax, rcx ; ret
0x000000000049f84f : mov eax, 0x586860 ; cmovne rax, rcx ; ret
0x000000000049f86f : mov eax, 0x586910 ; cmovne rax, rcx ; ret
0x000000000049f88f : mov eax, 0x5869c0 ; cmovne rax, rcx ; ret
0x000000000049f8af : mov eax, 0x586a70 ; cmovne rax, rcx ; ret
0x000000000049f8cf : mov eax, 0x586b20 ; cmovne rax, rcx ; ret
0x000000000049f8ef : mov eax, 0x586bd0 ; cmovne rax, rcx ; ret
0x000000000049f90f : mov eax, 0x586c80 ; cmovne rax, rcx ; ret
0x000000000049f92f : mov eax, 0x586d30 ; cmovne rax, rcx ; ret
0x000000000049f94f : mov eax, 0x586de0 ; cmovne rax, rcx ; ret
0x000000000049f96f : mov eax, 0x586e90 ; cmovne rax, rcx ; ret
0x000000000049f98f : mov eax, 0x586f40 ; cmovne rax, rcx ; ret
0x000000000049f9af : mov eax, 0x586ff0 ; cmovne rax, rcx ; ret
0x000000000049f9cf : mov eax, 0x5870a0 ; cmovne rax, rcx ; ret
0x000000000049f9e0 : mov eax, 0x5870f8 ; ret
0x000000000049f9f0 : mov eax, 0x587150 ; ret
0x000000000049fa00 : mov eax, 0x5871a8 ; ret
0x00000000004a51f0 : mov eax, 0x587420 ; ret
0x00000000004a5200 : mov eax, 0x587478 ; ret
0x00000000004a5210 : mov eax, 0x5874d0 ; ret
0x00000000004a5220 : mov eax, 0x587528 ; ret
0x00000000004a5580 : mov eax, 0x587580 ; ret
0x00000000004a5590 : mov eax, 0x5875d8 ; ret
0x00000000004a55a0 : mov eax, 0x587630 ; ret
0x00000000004a55b0 : mov eax, 0x587688 ; ret
0x00000000004a55c0 : mov eax, 0x5876e0 ; ret
0x00000000004a55d0 : mov eax, 0x587738 ; ret
0x00000000004a55e0 : mov eax, 0x587790 ; ret
0x00000000004a55f0 : mov eax, 0x5877e8 ; ret
0x00000000004a5600 : mov eax, 0x587840 ; ret
0x00000000004a5610 : mov eax, 0x587898 ; ret
0x00000000004a5620 : mov eax, 0x5878f0 ; ret
0x00000000004a5630 : mov eax, 0x587948 ; ret
0x00000000004a5640 : mov eax, 0x5879a0 ; ret
0x00000000004a5650 : mov eax, 0x5879f8 ; ret
0x00000000004a5660 : mov eax, 0x587a50 ; ret
0x00000000004a5670 : mov eax, 0x587aa8 ; ret
0x00000000004a5680 : mov eax, 0x587b00 ; ret
0x00000000004a5690 : mov eax, 0x587b58 ; ret
0x00000000004a59c0 : mov eax, 0x587bc0 ; ret
0x00000000004a59d0 : mov eax, 0x587c18 ; ret
0x00000000004a59e0 : mov eax, 0x587c70 ; ret
0x00000000004a59f0 : mov eax, 0x587cc8 ; ret
0x0000000000433198 : mov eax, 0x587ed8 ; ret
0x0000000000433000 : mov eax, 0x587ffa ; ret
0x00000000004a96f0 : mov eax, 0x588410 ; ret
0x00000000004a9700 : mov eax, 0x588468 ; ret
0x00000000004a9710 : mov eax, 0x5884c0 ; ret
0x00000000004a9720 : mov eax, 0x588518 ; ret
0x00000000004a9730 : mov eax, 0x588570 ; ret
0x00000000004a9740 : mov eax, 0x5885c8 ; ret
0x00000000004a9e10 : mov eax, 0x588620 ; ret
0x00000000004a9e20 : mov eax, 0x588678 ; ret
0x00000000004a9e30 : mov eax, 0x5886d0 ; ret
0x00000000004a9e40 : mov eax, 0x588728 ; ret
0x00000000004a9e50 : mov eax, 0x588780 ; ret
0x00000000004a9e60 : mov eax, 0x5887d8 ; ret
0x00000000004a9e70 : mov eax, 0x588830 ; ret
0x00000000004a9e80 : mov eax, 0x588888 ; ret
0x00000000004a9e90 : mov eax, 0x5888e0 ; ret
0x00000000004a9ea0 : mov eax, 0x588938 ; ret
0x00000000004a9ed0 : mov eax, 0x588990 ; ret
0x00000000004aafc0 : mov eax, 0x589010 ; ret
0x00000000004aafd0 : mov eax, 0x589068 ; ret
0x00000000004aafe0 : mov eax, 0x5890c0 ; ret
0x00000000004aaff0 : mov eax, 0x589118 ; ret
0x00000000004ab3b0 : mov eax, 0x589170 ; ret
0x00000000004abc00 : mov eax, 0x589320 ; ret
0x00000000004abc10 : mov eax, 0x589378 ; ret
0x00000000004abc20 : mov eax, 0x5893d0 ; ret
0x00000000004abc30 : mov eax, 0x589428 ; ret
0x00000000004abc40 : mov eax, 0x589480 ; ret
0x00000000004abc50 : mov eax, 0x5894d8 ; ret
0x00000000004ac1e0 : mov eax, 0x589548 ; ret
0x00000000004ac1f0 : mov eax, 0x5895a0 ; ret
0x00000000004ac990 : mov eax, 0x5895f8 ; ret
0x00000000004ac9a0 : mov eax, 0x589650 ; ret
0x00000000004ac9b0 : mov eax, 0x5896a8 ; ret
0x00000000004ac9c0 : mov eax, 0x589700 ; ret
0x00000000004b01d0 : mov eax, 0x58a010 ; ret
0x00000000004b18f0 : mov eax, 0x58a080 ; ret
0x0000000000432fe2 : mov eax, 0x5909e4 ; ret
0x00000000004bd360 : mov eax, 0x590f68 ; ret
0x00000000004bd820 : mov eax, 0x5910a8 ; ret
0x00000000004c0f70 : mov eax, 0x592000 ; ret
0x000000000042c121 : mov eax, 0x5a000001 ; ret
0x0000000000560934 : mov eax, 0x5afffd92 ; ret
0x00000000004c3890 : mov eax, 0x5b8020 ; ret
0x0000000000432ef2 : mov eax, 0x5bc384 ; ret
0x00000000004e1e40 : mov eax, 0x5bc8e8 ; ret
0x00000000004e3260 : mov eax, 0x5bd418 ; ret
0x00000000004e32a0 : mov eax, 0x5bd490 ; ret
0x00000000004e32e0 : mov eax, 0x5bd508 ; ret
0x00000000004e3320 : mov eax, 0x5bd580 ; ret
0x00000000004e3360 : mov eax, 0x5bd5f8 ; ret
0x00000000004e33a0 : mov eax, 0x5bd670 ; ret
0x00000000004e33e0 : mov eax, 0x5bd6e8 ; ret
0x00000000004e3420 : mov eax, 0x5bd760 ; ret
0x00000000004e3460 : mov eax, 0x5bd7d8 ; ret
0x00000000004e34a0 : mov eax, 0x5bd850 ; ret
0x00000000004e34b0 : mov eax, 0x5bd8c8 ; ret
0x00000000004e34c0 : mov eax, 0x5bd940 ; ret
0x00000000004e34d0 : mov eax, 0x5bd9b8 ; ret
0x00000000004e34e0 : mov eax, 0x5bda30 ; ret
0x00000000004e3980 : mov eax, 0x5bdab8 ; ret
0x000000000043301e : mov eax, 0x5cbbe5 ; ret
0x0000000000432fee : mov eax, 0x5cc1db ; ret
0x0000000000432fb3 : mov eax, 0x5cc907 ; ret
0x0000000000433024 : mov eax, 0x5d9b7f ; ret
0x00000000004904d1 : mov eax, 0x5da58c ; ret
0x0000000000433012 : mov eax, 0x5db541 ; ret
0x0000000000432f9d : mov eax, 0x5de743 ; ret
0x0000000000559880 : mov eax, 0x5dea9e ; ret
0x0000000000559890 : mov eax, 0x5deab5 ; ret
0x00000000005598a0 : mov eax, 0x5deac4 ; ret
0x00000000005598b0 : mov eax, 0x5dead9 ; ret
0x00000000005598c0 : mov eax, 0x5deaf1 ; ret
0x00000000005598d0 : mov eax, 0x5deafe ; ret
0x000000000043315e : mov eax, 0x5deb33 ; ret
0x00000000005e4fa8 : mov eax, 0x600001ae ; leave ; jmp 0x5e4fb6
0x00000000005e8a30 : mov eax, 0x6000029b ; xchg eax, esi ; int1 ; call rax
0x0000000000411171 : mov eax, 0x65b90056 ; add al, byte ptr [rax] ; add al, ch ; ret 0x7dd
0x00000000004f0114 : mov eax, 0x6c ; call 0x4cc377
0x00000000005e2b38 : mov eax, 0x70000114 ; and al, 0xffffffffffffffe6 ; call rax
0x00000000005e75c0 : mov eax, 0x7000024b ; and eax, esi ; call rax
0x00000000005e82a0 : mov eax, 0x7000027d ; or esi, ecx ; call rax
0x00000000005e8930 : mov eax, 0x70000298 ; xchg eax, edx ; int1 ; call rax
0x00000000005eb758 : mov eax, 0x7000034f ; loope 0x5eb75d ; call rax
0x00000000004200c0 : mov eax, 0x72b ; call 0x4cc377
0x000000000059dacb : mov eax, 0x760883fd ; out dx, eax ; ret
0x00000000005974e9 : mov eax, 0x7966c077 ; imul esp, eax, 0x6c ; ret 0xda27
0x00000000005add57 : mov eax, 0x7a2186b ; ret 0x55d0
0x000000000059ff32 : mov eax, 0x7bca023c ; ret
0x00000000004b87f0 : mov eax, 0x7fffffff ; and eax, dword ptr [rdi + 0x44] ; ret
0x00000000005e12d8 : mov eax, 0x800000af ; adc edx, esp ; call rax
0x00000000005e2458 : mov eax, 0x800000f6 ; add esp, ebp ; call rax
0x00000000005e44b0 : mov eax, 0x80000183 ; mov ah, -0x16 ; call rax
0x00000000005e6438 : mov eax, 0x80000205 ; test ch, dh ; call rax
0x00000000005e67d8 : mov eax, 0x80000212 ; ret
0x0000000000402420 : mov eax, 0x819350 ; ret
0x000000000045cf10 : mov eax, 0x81fb70 ; ret
0x000000000045e790 : mov eax, 0x81fbc0 ; ret
0x000000000045ea60 : mov eax, 0x81fc10 ; ret
0x000000000045ef70 : mov eax, 0x81fc60 ; ret
0x000000000045f680 : mov eax, 0x81fcb0 ; ret
0x0000000000460660 : mov eax, 0x81fd00 ; ret
0x0000000000461fb0 : mov eax, 0x820160 ; ret
0x0000000000462670 : mov eax, 0x8201b0 ; ret
0x0000000000475fc0 : mov eax, 0x8205b0 ; ret
0x0000000000476680 : mov eax, 0x820600 ; ret
0x0000000000477350 : mov eax, 0x820650 ; ret
0x0000000000477de0 : mov eax, 0x8206a0 ; ret
0x0000000000478840 : mov eax, 0x8206f0 ; ret
0x0000000000478e80 : mov eax, 0x820740 ; ret
0x0000000000479360 : mov eax, 0x820790 ; ret
0x00000000004794d0 : mov eax, 0x8207e0 ; ret
0x0000000000479a50 : mov eax, 0x820830 ; ret
0x0000000000479b00 : mov eax, 0x820880 ; ret
0x000000000047acc0 : mov eax, 0x820940 ; ret
0x000000000047b000 : mov eax, 0x820990 ; ret
0x000000000047ce40 : mov eax, 0x8209e0 ; ret
0x000000000047db60 : mov eax, 0x820a20 ; ret
0x000000000048c710 : mov eax, 0x821540 ; ret
0x000000000048c720 : mov eax, 0x821590 ; ret
0x0000000000496020 : mov eax, 0x821f98 ; ret
0x000000000049acd0 : mov eax, 0x822280 ; ret
0x000000000049be50 : mov eax, 0x8222e0 ; ret
0x000000000049ce70 : mov eax, 0x822780 ; ret
0x00000000004ac250 : mov eax, 0x823d00 ; ret
0x00000000004bc3f0 : mov eax, 0x824ff0 ; ret
0x00000000004c6400 : mov eax, 0x825110 ; ret
0x00000000004e5300 : mov eax, 0x826e10 ; ret
0x000000000050b1a0 : mov eax, 0x828130 ; ret
0x000000000050d700 : mov eax, 0x8289e0 ; ret
0x0000000000548ae0 : mov eax, 0x82a0e0 ; ret
0x0000000000470da5 : mov eax, 0x82b830 ; pop rdx ; ret
0x00000000004bbe31 : mov eax, 0x82c3e0 ; pop rdx ; ret
0x00000000004ca9c0 : mov eax, 0x82c450 ; ret
0x00000000004cfb9b : mov eax, 0x82dfe0 ; ret
0x000000000048f4ca : mov eax, 0x82fc68 ; ret
0x0000000000509dd4 : mov eax, 0x83fffc65 ; ret
0x0000000000596a83 : mov eax, 0x8530c45f ; ret 0x8a41
0x00000000004bc4c4 : mov eax, 0x85ffffc2 ; ror byte ptr [rdi], -0x7c ; ret 0
0x000000000051583c : mov eax, 0x89000001 ; ret 0xeac1
0x00000000004fe357 : mov eax, 0x89480003 ; ret
0x000000000047a688 : mov eax, 0x89480006 ; ret
0x000000000054b0fd : mov eax, 0x8948fff0 ; ret
0x0000000000567d97 : mov eax, 0x8948fff8 ; ret
0x00000000004bc1b8 : mov eax, 0x8948ffff ; ret
0x00000000004c1674 : mov eax, 0x89ffff78 ; ret
0x0000000000419660 : mov eax, 0x8c ; ret
0x00000000005e5100 : mov eax, 0x900001b3 ; out -0x15, al ; call rax
0x00000000005e8520 : mov eax, 0x90000287 ; cmp ecx, esi ; call rax
0x0000000000500160 : mov eax, 0x92 ; call 0x4cc377
0x00000000005e9149 : mov eax, 0x94700002 ; call qword ptr [rax]
0x00000000004466fc : mov eax, 0x9fe45c5c ; ret 0x5dc2
0x00000000004361b6 : mov eax, 0xa ; ret
0x00000000005e7ed0 : mov eax, 0xa000026c ; test al, -0x10 ; call rax
0x00000000005e94a0 : mov eax, 0xa00002c7 ; movsxd rsi, ebx ; call rax
0x00000000005a4286 : mov eax, 0xaa4823f2 ; ret 0x426d
0x00000000004361bc : mov eax, 0xb ; ret
0x00000000005e9520 : mov eax, 0xb00002c9 ; clc ; hlt ; call rax
0x00000000005ebca8 : mov eax, 0xb0000362 ; clc ; call rax
0x00000000004466f8 : mov eax, 0xb8e45c5c ; pop rsp ; pop rsp ; in al, -0x61 ; ret 0x5dc2
0x00000000004361c2 : mov eax, 0xc ; ret
0x00000000005e46c0 : mov eax, 0xc000018b ; fucompi st(2) ; call rax
0x00000000004f3e7c : mov eax, 0xc031fffd ; pop rbx ; ret
0x0000000000443894 : mov eax, 0xc031ffff ; ret
0x00000000004f3b34 : mov eax, 0xc085fff9 ; jle 0x4f3b45 ; pop rbx ; ret
0x0000000000512585 : mov eax, 0xc3ac0f4d ; sub byte ptr [rcx + 0x21], cl ; ret
0x00000000004361c8 : mov eax, 0xd ; ret
0x00000000005e6f40 : mov eax, 0xd0000232 ; lodsb al, byte ptr [rsi] ; out dx, eax ; call rax
0x00000000005ea638 : mov eax, 0xd000030a ; je 0x5ea63c ; call rax
0x00000000004361ce : mov eax, 0xe ; ret
0x00000000005e22b8 : mov eax, 0xe00000ef ; fsub st(4) ; call rax
0x00000000005e30f0 : mov eax, 0xe000012c ; loopne 0x5e30e5 ; call rax
0x00000000005e6698 : mov eax, 0xe000020d ; cmpsb byte ptr [rsi], byte ptr [rdi] ; out dx, al ; call rax
0x00000000005e81b0 : mov eax, 0xe0000278 ; jrcxz 0x5e81ae ; call rax
0x00000000005e9d60 : mov eax, 0xe00002ea ; add esi, esi ; call rax
0x00000000005ea9b0 : mov eax, 0xe0000318 ; mov bh, -0xa ; call rax
0x0000000000617abd : mov eax, 0xed600002 ; hlt ; call qword ptr [rax]
0x000000000043612b : mov eax, 0xf ; ret
0x00000000005e8470 : mov eax, 0xf0000284 ; sub cl, dh ; call rax
0x00000000005e9188 : mov eax, 0xf00002b9 ; xchg eax, esp ; call rax
0x00000000005eaf40 : mov eax, 0xf000032e ; sbb dh, bh ; call rax
0x00000000005ebe70 : mov eax, 0xf0000368 ; push rdi ; clc ; call rax
0x0000000000512746 : mov eax, 0xf3000000 ; ret
0x0000000000421354 : mov eax, 0xf6000002 ; ret
0x000000000059ab78 : mov eax, 0xfdfd55d3 ; ret 0x3148
0x00000000004d0b60 : mov eax, 0xff31ffff ; mov rax, rdi ; pop rdx ; ret
0x0000000000484fea : mov eax, 0xfffffffe ; add rsp, 0x18 ; ret
0x000000000047686c : mov eax, 0xfffffffe ; pop rbx ; ret
0x000000000047680a : mov eax, 0xfffffffe ; pop rdx ; ret
0x000000000042a485 : mov eax, 0xfffffffe ; ret
0x000000000046b35d : mov eax, 0xffffffff ; cmova eax, ecx ; ret
0x000000000042c3d4 : mov eax, 0xffffffff ; cmovg eax, ecx ; ret
0x0000000000539be3 : mov eax, 0xffffffff ; je 0x539bf5 ; mov eax, dword ptr [rdi] ; ret
0x000000000040ae43 : mov eax, 0xffffffff ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004068c5 : mov eax, 0xffffffff ; pop rbx ; ret
0x000000000042be68 : mov eax, 0xffffffff ; pop rdx ; ret
0x000000000042cbc2 : mov eax, 0xffffffff ; ret
0x00000000004a11f2 : mov eax, 1 ; add rsp, 0x18 ; ret
0x000000000047af3c : mov eax, 1 ; ja 0x47af4e ; sbb eax, eax ; ret
0x0000000000559ba2 : mov eax, 1 ; je 0x559bb2 ; jmp rcx
0x0000000000559bc2 : mov eax, 1 ; je 0x559bd2 ; jmp rcx
0x0000000000559be5 : mov eax, 1 ; je 0x559bf7 ; jmp r9
0x00000000004e8ef8 : mov eax, 1 ; mov eax, r8d ; pop rbx ; ret
0x00000000004079c8 : mov eax, 1 ; mov r9, r12 ; call rax
0x00000000004271f1 : mov eax, 1 ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000402d9d : mov eax, 1 ; pop rbx ; ret
0x0000000000402e55 : mov eax, 1 ; pop rdx ; ret
0x000000000040dfb7 : mov eax, 1 ; ret
0x000000000040789a : mov eax, 2 ; mov r9, r12 ; call rax
0x000000000041d074 : mov eax, 2 ; mov r9, r15 ; call rax
0x00000000004086a8 : mov eax, 2 ; mov r9, rbx ; call rax
0x0000000000498b7f : mov eax, 2 ; pop rbx ; ret
0x000000000054de09 : mov eax, 2 ; pop rdx ; ret
0x000000000041ade6 : mov eax, 2 ; ret
0x000000000040dee3 : mov eax, 3 ; mov r9, rbx ; call rax
0x000000000055bcdf : mov eax, 3 ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040dc87 : mov eax, 3 ; ret
0x0000000000407b84 : mov eax, 4 ; mov r9, r12 ; call rax
0x000000000041ce88 : mov eax, 4 ; mov r9, r15 ; call rax
0x0000000000436192 : mov eax, 4 ; ret
0x000000000042dea6 : mov eax, 5 ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004d022c : mov eax, 5 ; pop rbx ; ret
0x0000000000436198 : mov eax, 5 ; ret
0x000000000043619e : mov eax, 6 ; ret
0x000000000040d9b0 : mov eax, 7 ; ret
0x00000000004361aa : mov eax, 8 ; ret
0x00000000004361b0 : mov eax, 9 ; ret
0x0000000000495fa8 : mov eax, dword ptr [rax + 0x10] ; jmp rax
0x00000000004d0014 : mov eax, dword ptr [rax + 0x10] ; ret
0x00000000005044f1 : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; je 0x504503 ; call rax
0x0000000000426644 : mov eax, dword ptr [rax + 0x110] ; ret
0x000000000049be25 : mov eax, dword ptr [rax + 0x18] ; jmp rax
0x0000000000558cf4 : mov eax, dword ptr [rax + 0x18] ; ret
0x000000000049cb12 : mov eax, dword ptr [rax + 0x18] ; test rax, rax ; je 0x49cb45 ; call rax
0x000000000053f6f9 : mov eax, dword ptr [rax + 0x18] ; test rax, rax ; je 0x53f735 ; jmp rax
0x000000000050ad75 : mov eax, dword ptr [rax + 0x20] ; jmp rax
0x00000000004d02d4 : mov eax, dword ptr [rax + 0x20] ; mov ecx, ecx ; jmp rax
0x00000000004fda39 : mov eax, dword ptr [rax + 0x20] ; pop rbx ; ret
0x000000000048699b : mov eax, dword ptr [rax + 0x20] ; pop rdx ; ret
0x000000000049cb92 : mov eax, dword ptr [rax + 0x20] ; test rax, rax ; je 0x49cbc5 ; call rax
0x000000000053f6e5 : mov eax, dword ptr [rax + 0x20] ; test rax, rax ; je 0x53f735 ; jmp rax
0x0000000000565fc5 : mov eax, dword ptr [rax + 0x20] ; test rax, rax ; je 0x565fd7 ; jmp rax
0x0000000000461f3d : mov eax, dword ptr [rax + 0x24] ; mov dword ptr [rdi + 0x24], eax ; ret
0x00000000004371e9 : mov eax, dword ptr [rax + 0x258] ; ret
0x000000000043d584 : mov eax, dword ptr [rax + 0x260] ; ret
0x00000000004371cb : mov eax, dword ptr [rax + 0x268] ; ret
0x000000000043b36a : mov eax, dword ptr [rax + 0x278] ; ret
0x000000000048d97a : mov eax, dword ptr [rax + 0x28] ; pop rcx ; jmp rax
0x0000000000558ed4 : mov eax, dword ptr [rax + 0x28] ; ret
0x00000000005047a1 : mov eax, dword ptr [rax + 0x28] ; test rax, rax ; je 0x5047b5 ; pop rbx ; jmp rax
0x000000000043d5c4 : mov eax, dword ptr [rax + 0x2a0] ; ret
0x00000000005591bb : mov eax, dword ptr [rax + 0x30] ; mov rax, qword ptr [rax + 8] ; ret
0x000000000042be74 : mov eax, dword ptr [rax + 0x30] ; pop rcx ; jmp rax
0x000000000048df3a : mov eax, dword ptr [rax + 0x30] ; pop rdx ; jmp rax
0x0000000000484a0c : mov eax, dword ptr [rax + 0x30] ; ret
0x000000000053eba4 : mov eax, dword ptr [rax + 0x30] ; test rax, rax ; je 0x53ebbd ; call rax
0x000000000042bebd : mov eax, dword ptr [rax + 0x38] ; pop rcx ; jmp rax
0x000000000049cc8f : mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x49cca3 ; pop rcx ; jmp rax
0x00000000004b89c5 : mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x4b89d9 ; pop rdx ; jmp rax
0x0000000000559c1a : mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x559c2c ; jmp rax
0x000000000042bf2c : mov eax, dword ptr [rax + 0x40] ; pop rcx ; jmp rax
0x00000000004b8a05 : mov eax, dword ptr [rax + 0x40] ; test rax, rax ; je 0x4b8a19 ; pop rdx ; jmp rax
0x0000000000559c3a : mov eax, dword ptr [rax + 0x40] ; test rax, rax ; je 0x559c4c ; jmp rax
0x000000000048dfca : mov eax, dword ptr [rax + 0x48] ; pop rcx ; jmp rax
0x000000000050ad9b : mov eax, dword ptr [rax + 0x48] ; ret
0x00000000004cef4a : mov eax, dword ptr [rax + 0x48] ; test rax, rax ; je 0x4cef99 ; call rax
0x0000000000559c5a : mov eax, dword ptr [rax + 0x48] ; test rax, rax ; je 0x559c6c ; jmp rax
0x000000000042ce1b : mov eax, dword ptr [rax + 0x4b8] ; mov dword ptr [rdx], eax ; ret
0x000000000040d9f6 : mov eax, dword ptr [rax + 0x58] ; pop rbx ; ret
0x00000000004f347f : mov eax, dword ptr [rax + 0x58] ; test rax, rax ; je 0x4f3491 ; jmp rax
0x00000000004f345f : mov eax, dword ptr [rax + 0x60] ; test rax, rax ; je 0x4f3471 ; jmp rax
0x000000000042ce4a : mov eax, dword ptr [rax + 0x68] ; jmp rax
0x00000000004f355a : mov eax, dword ptr [rax + 0x78] ; test rax, rax ; je 0x4f356c ; jmp rax
0x000000000042c181 : mov eax, dword ptr [rax + 0x80] ; pop r8 ; jmp rax
0x000000000042c26e : mov eax, dword ptr [rax + 0x88] ; pop r8 ; jmp rax
0x00000000004d01b3 : mov eax, dword ptr [rax + 0xc] ; ret
0x000000000042c1d7 : mov eax, dword ptr [rax + 0xd8] ; jmp rax
0x000000000042c3b6 : mov eax, dword ptr [rax + 0xe0] ; jmp rax
0x00000000004d02c3 : mov eax, dword ptr [rax + 4] ; ret
0x00000000004e94fb : mov eax, dword ptr [rax + 8] ; add rsp, 0x38 ; ret
0x000000000049bda5 : mov eax, dword ptr [rax + 8] ; jmp rax
0x0000000000565053 : mov eax, dword ptr [rax + 8] ; mov qword ptr [rdx], rax ; ret
0x000000000042e3a2 : mov eax, dword ptr [rax + 8] ; ret
0x000000000054b367 : mov eax, dword ptr [rax + 8] ; test rax, rax ; je 0x54b37b ; pop rdx ; jmp rax
0x0000000000539b49 : mov eax, dword ptr [rax + rcx*8] ; mov dword ptr [rdi], ecx ; ret
0x0000000000540807 : mov eax, dword ptr [rax + rcx] ; ret
0x000000000043653d : mov eax, dword ptr [rax*4 + 0x574cf0] ; pop rbx ; ret
0x00000000004360d0 : mov eax, dword ptr [rax*4 + 0x574cf0] ; ret
0x00000000004576f3 : mov eax, dword ptr [rax*8 + 0x5772f0] ; ret
0x0000000000479abb : mov eax, dword ptr [rax*8 + 0x57c770] ; ret
0x000000000048f485 : mov eax, dword ptr [rax*8 + 0x582860] ; pop rbx ; ret
0x00000000004904c9 : mov eax, dword ptr [rax*8 + 0x582b80] ; ret
0x000000000053c16b : mov eax, dword ptr [rax*8 + 0x5d8850] ; ret
0x0000000000454af2 : mov eax, dword ptr [rax*8 + 0x81ebe0] ; pop rdx ; ret
0x00000000004e95bf : mov eax, dword ptr [rax] ; add rsp, 0x38 ; ret
0x000000000054deed : mov eax, dword ptr [rax] ; add rsp, 0x78 ; ret
0x00000000004360ad : mov eax, dword ptr [rax] ; mov dword ptr [rbx], eax ; pop rbx ; ret
0x0000000000429b43 : mov eax, dword ptr [rax] ; mov rcx, qword ptr [rsi] ; sub eax, dword ptr [rcx] ; ret
0x000000000042e382 : mov eax, dword ptr [rax] ; ret
0x000000000054b317 : mov eax, dword ptr [rax] ; test rax, rax ; je 0x54b329 ; pop rcx ; jmp rax
0x00000000004fda35 : mov eax, dword ptr [rbx + 0x20] ; mov rax, qword ptr [rax + 0x20] ; pop rbx ; ret
0x00000000004f3893 : mov eax, dword ptr [rbx + 0x20] ; pop rbx ; ret
0x000000000040e9de : mov eax, dword ptr [rbx + 0x28] ; pop rbx ; pop r14 ; pop r15 ; ret
0x000000000040d9f3 : mov eax, dword ptr [rbx + 0x78] ; mov eax, dword ptr [rax + 0x58] ; pop rbx ; ret
0x00000000004360aa : mov eax, dword ptr [rbx + 8] ; mov eax, dword ptr [rax] ; mov dword ptr [rbx], eax ; pop rbx ; ret
0x00000000004848a2 : mov eax, dword ptr [rbx + 8] ; pop rbx ; ret
0x000000000042eb39 : mov eax, dword ptr [rbx] ; add rsp, 8 ; pop rbx ; pop r14 ; ret
0x00000000004ffb94 : mov eax, dword ptr [rbx] ; mov rcx, qword ptr [rax + 0x28] ; mov rdi, rbx ; call rcx
0x00000000004ffcc4 : mov eax, dword ptr [rbx] ; mov rcx, qword ptr [rax + 0x38] ; mov rdi, rbx ; call rcx
0x00000000004b6d61 : mov eax, dword ptr [rbx] ; pop rbx ; pop r14 ; pop r15 ; ret
0x000000000048c2e5 : mov eax, dword ptr [rcx + 0x10] ; add rsp, 0x18 ; ret
0x0000000000500ab2 : mov eax, dword ptr [rcx + 0x10] ; mov qword ptr [rdi], rax ; mov rax, rcx ; ret
0x000000000050ad81 : mov eax, dword ptr [rcx + 0x10] ; mov rax, qword ptr [rax + 0x10] ; jmp rax
0x000000000050ad61 : mov eax, dword ptr [rcx + 0x10] ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x000000000050ad71 : mov eax, dword ptr [rcx + 0x10] ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000050ad51 : mov eax, dword ptr [rcx + 0x10] ; mov rax, qword ptr [rax + 8] ; jmp rax
0x00000000004849ad : mov eax, dword ptr [rcx + 0x10] ; pop rbx ; ret
0x00000000004196ab : mov eax, dword ptr [rcx + 0x124] ; ret
0x00000000004e4344 : mov eax, dword ptr [rcx + 0x21] ; ret
0x0000000000489a0d : mov eax, dword ptr [rcx + 0x28] ; pop rbx ; ret
0x00000000004da11b : mov eax, dword ptr [rcx + 0x38] ; pop rbx ; ret
0x0000000000426629 : mov eax, dword ptr [rcx + 0x3e0] ; ret
0x000000000049be21 : mov eax, dword ptr [rcx + 0x78] ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x000000000042ea76 : mov eax, dword ptr [rcx + 0x90] ; ret
0x000000000042ea96 : mov eax, dword ptr [rcx + 0x98] ; ret
0x00000000004d07dc : mov eax, dword ptr [rcx + 4] ; sub eax, dword ptr [rdx + 4] ; ret
0x00000000004cd20e : mov eax, dword ptr [rcx + 8] ; add rsp, 0x10 ; pop rbx ; ret
0x000000000042c4c6 : mov eax, dword ptr [rcx + 8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004fcc86 : mov eax, dword ptr [rcx + 8] ; pop rdx ; ret
0x00000000004ed051 : mov eax, dword ptr [rcx + 8] ; ret
0x00000000004eac9e : mov eax, dword ptr [rcx + 8] ; sub eax, dword ptr [rdx + 8] ; ret
0x000000000042dad3 : mov eax, dword ptr [rcx + rax + 0x78] ; pop rdx ; ret
0x00000000004ffdb7 : mov eax, dword ptr [rcx + rax*4] ; ret
0x0000000000539c09 : mov eax, dword ptr [rcx + rax*8] ; ret
0x0000000000540817 : mov eax, dword ptr [rcx + rdx] ; mov dword ptr [rcx + rdx], esi ; ret
0x00000000004b6d24 : mov eax, dword ptr [rcx - 8] ; ret
0x0000000000437669 : mov eax, dword ptr [rcx*8 + 0x81ebc4] ; ret
0x00000000005e46c1 : mov eax, dword ptr [rcx] ; add al, al ; fucompi st(2) ; call rax
0x00000000004ffeed : mov eax, dword ptr [rcx] ; add rsp, 0xd8 ; ret
0x000000000056883e : mov eax, dword ptr [rcx] ; mov dword ptr [rsi], eax ; mov rax, qword ptr [rcx + 8] ; ret
0x000000000042e39f : mov eax, dword ptr [rcx] ; mov rax, qword ptr [rax + 8] ; ret
0x000000000042e37f : mov eax, dword ptr [rcx] ; mov rax, qword ptr [rax] ; ret
0x0000000000487868 : mov eax, dword ptr [rcx] ; pop rbx ; ret
0x000000000042ba24 : mov eax, dword ptr [rcx] ; ret
0x0000000000431911 : mov eax, dword ptr [rdi + 0x108] ; ret
0x000000000050ad98 : mov eax, dword ptr [rdi + 0x10] ; mov eax, dword ptr [rax + 0x48] ; ret
0x0000000000486119 : mov eax, dword ptr [rdi + 0x10] ; mov qword ptr [r8], rax ; ret
0x0000000000548371 : mov eax, dword ptr [rdi + 0x10] ; mov qword ptr [rdi + 0x10], rsi ; ret
0x00000000004fda76 : mov eax, dword ptr [rdi + 0x10] ; mov qword ptr [rsi], rax ; ret
0x00000000004fd4bb : mov eax, dword ptr [rdi + 0x10] ; mov rdi, qword ptr [rax] ; call 0x4e96d8
0x0000000000429871 : mov eax, dword ptr [rdi + 0x10] ; ret
0x00000000004ea85b : mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rcx + 0x10] ; ret
0x00000000004265f1 : mov eax, dword ptr [rdi + 0x110] ; ret
0x000000000042c338 : mov eax, dword ptr [rdi + 0x128] ; pop rdx ; ret
0x0000000000430581 : mov eax, dword ptr [rdi + 0x130] ; ret
0x000000000042b8f0 : mov eax, dword ptr [rdi + 0x140] ; ret
0x000000000042b911 : mov eax, dword ptr [rdi + 0x148] ; ret
0x000000000049c7e7 : mov eax, dword ptr [rdi + 0x14] ; ret
0x000000000042b920 : mov eax, dword ptr [rdi + 0x150] ; ret
0x000000000042e341 : mov eax, dword ptr [rdi + 0x170] ; ret
0x000000000042b941 : mov eax, dword ptr [rdi + 0x178] ; ret
0x000000000042e771 : mov eax, dword ptr [rdi + 0x180] ; ret
0x000000000042b211 : mov eax, dword ptr [rdi + 0x188] ; ret
0x000000000042b491 : mov eax, dword ptr [rdi + 0x18] ; ret
0x000000000042e570 : mov eax, dword ptr [rdi + 0x190] ; ret
0x000000000042c150 : mov eax, dword ptr [rdi + 0x1b8] ; pop rdx ; ret
0x0000000000489eda : mov eax, dword ptr [rdi + 0x20] ; mov qword ptr [r8], rax ; ret
0x00000000004fda5e : mov eax, dword ptr [rdi + 0x20] ; mov qword ptr [rcx], rax ; ret
0x000000000042c1e1 : mov eax, dword ptr [rdi + 0x20] ; ret
0x0000000000461bb0 : mov eax, dword ptr [rdi + 0x24] ; ret
0x00000000005485cb : mov eax, dword ptr [rdi + 0x28] ; and eax, 1 ; pop rdx ; ret
0x00000000004974f1 : mov eax, dword ptr [rdi + 0x28] ; jmp rax
0x000000000042c319 : mov eax, dword ptr [rdi + 0x28] ; mov qword ptr [rdi + 0x28], rdx ; pop rdx ; ret
0x000000000042c323 : mov eax, dword ptr [rdi + 0x28] ; pop rdx ; ret
0x000000000042deb0 : mov eax, dword ptr [rdi + 0x28] ; ret
0x00000000004089e1 : mov eax, dword ptr [rdi + 0x290] ; ret
0x00000000004b7b30 : mov eax, dword ptr [rdi + 0x2c] ; ret
0x00000000005007b1 : mov eax, dword ptr [rdi + 0x30] ; ret
0x0000000000560771 : mov eax, dword ptr [rdi + 0x38] ; mov dword ptr [rax + 8], esi ; ret
0x0000000000560781 : mov eax, dword ptr [rdi + 0x38] ; mov rax, qword ptr [rax + 0x10] ; ret
0x000000000049cc27 : mov eax, dword ptr [rdi + 0x38] ; pop rdx ; ret
0x000000000042eb70 : mov eax, dword ptr [rdi + 0x38] ; ret
0x000000000049cd97 : mov eax, dword ptr [rdi + 0x40] ; pop rdx ; ret
0x000000000042e590 : mov eax, dword ptr [rdi + 0x40] ; ret
0x000000000042e5b0 : mov eax, dword ptr [rdi + 0x44] ; ret
0x00000000004315d8 : mov eax, dword ptr [rdi + 0x48] ; mov qword ptr [rdi + 0x48], rsi ; ret
0x000000000042bf90 : mov eax, dword ptr [rdi + 0x48] ; ret
0x0000000000429861 : mov eax, dword ptr [rdi + 0x50] ; ret
0x000000000042985c : mov eax, dword ptr [rdi + 0x54] ; mov dword ptr [rsi], eax ; mov eax, dword ptr [rdi + 0x50] ; ret
0x00000000004318d1 : mov eax, dword ptr [rdi + 0x58] ; ret
0x00000000004318f1 : mov eax, dword ptr [rdi + 0x60] ; ret
0x00000000004d0360 : mov eax, dword ptr [rdi + 0x64] ; ret
0x00000000004ca961 : mov eax, dword ptr [rdi + 0x68] ; ret
0x00000000004ca971 : mov eax, dword ptr [rdi + 0x70] ; ret
0x000000000049bdb1 : mov eax, dword ptr [rdi + 0x78] ; mov rax, qword ptr [rax + 0x10] ; jmp rax
0x00000000004899d1 : mov eax, dword ptr [rdi + 0x78] ; ret
0x00000000004ca991 : mov eax, dword ptr [rdi + 0x80] ; ret
0x00000000004cb4d1 : mov eax, dword ptr [rdi + 0x88] ; ret
0x000000000042b990 : mov eax, dword ptr [rdi + 0x90] ; ret
0x00000000004cb4f1 : mov eax, dword ptr [rdi + 0x98] ; ret
0x00000000004ca9b1 : mov eax, dword ptr [rdi + 0xa0] ; ret
0x000000000042eb60 : mov eax, dword ptr [rdi + 0xa8] ; ret
0x000000000042b221 : mov eax, dword ptr [rdi + 0xb0] ; ret
0x000000000055e2f0 : mov eax, dword ptr [rdi + 0xb4] ; ret
0x0000000000431931 : mov eax, dword ptr [rdi + 0xb8] ; ret
0x000000000055e301 : mov eax, dword ptr [rdi + 0xc0] ; ret
0x0000000000431548 : mov eax, dword ptr [rdi + 0xc8] ; ret
0x00000000004d0320 : mov eax, dword ptr [rdi + 0xc] ; ret
0x0000000000431558 : mov eax, dword ptr [rdi + 0xd0] ; ret
0x0000000000430720 : mov eax, dword ptr [rdi + 0xd8] ; ret
0x000000000055e361 : mov eax, dword ptr [rdi + 0xe0] ; ret
0x00000000004b8749 : mov eax, dword ptr [rdi + 0xe8] ; ret
0x0000000000456b10 : mov eax, dword ptr [rdi + 4] ; ret
0x00000000004d08f6 : mov eax, dword ptr [rdi + 4] ; sub eax, dword ptr [rsi + 4] ; ret
0x0000000000486c78 : mov eax, dword ptr [rdi + 8] ; add rax, 0x30 ; ret
0x00000000004e91f1 : mov eax, dword ptr [rdi + 8] ; inc dword ptr [rax + 0x10] ; ret
0x0000000000486997 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x20] ; pop rdx ; ret
0x000000000042be70 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x30] ; pop rcx ; jmp rax
0x0000000000484a08 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x30] ; ret
0x000000000042beb9 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x38] ; pop rcx ; jmp rax
0x000000000042bf28 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x40] ; pop rcx ; jmp rax
0x0000000000539b45 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax + rcx*8] ; mov dword ptr [rdi], ecx ; ret
0x00000000004d0396 : mov eax, dword ptr [rdi + 8] ; pop rdx ; ret
0x000000000042984b : mov eax, dword ptr [rdi + 8] ; ret
0x0000000000443ca3 : mov eax, dword ptr [rdi + 8] ; sub eax, dword ptr [rsi + 8] ; ret
0x000000000041108a : mov eax, dword ptr [rdi*4 + 0x56b878] ; ret
0x00000000004d01b1 : mov eax, dword ptr [rdi] ; mov eax, dword ptr [rax + 0xc] ; ret
0x00000000004d02c1 : mov eax, dword ptr [rdi] ; mov eax, dword ptr [rax + 4] ; ret
0x0000000000429b41 : mov eax, dword ptr [rdi] ; mov eax, dword ptr [rax] ; mov rcx, qword ptr [rsi] ; sub eax, dword ptr [rcx] ; ret
0x00000000004610d1 : mov eax, dword ptr [rdi] ; mov eax, dword ptr [rax] ; ret
0x000000000049c6d1 : mov eax, dword ptr [rdi] ; mov qword ptr [rdi], rsi ; ret
0x00000000004d0011 : mov eax, dword ptr [rdi] ; mov rax, qword ptr [rax + 0x10] ; ret
0x0000000000558cf1 : mov eax, dword ptr [rdi] ; mov rax, qword ptr [rax + 0x18] ; ret
0x00000000004d02d1 : mov eax, dword ptr [rdi] ; mov rax, qword ptr [rax + 0x20] ; mov ecx, ecx ; jmp rax
0x000000000048d977 : mov eax, dword ptr [rdi] ; mov rax, qword ptr [rax + 0x28] ; pop rcx ; jmp rax
0x0000000000558ed1 : mov eax, dword ptr [rdi] ; mov rax, qword ptr [rax + 0x28] ; ret
0x000000000048df37 : mov eax, dword ptr [rdi] ; mov rax, qword ptr [rax + 0x30] ; pop rdx ; jmp rax
0x000000000048dfc7 : mov eax, dword ptr [rdi] ; mov rax, qword ptr [rax + 0x48] ; pop rcx ; jmp rax
0x000000000042c3b3 : mov eax, dword ptr [rdi] ; mov rax, qword ptr [rax + 0xe0] ; jmp rax
0x00000000004610c1 : mov eax, dword ptr [rdi] ; mov rax, qword ptr [rax + 8] ; ret
0x000000000046b007 : mov eax, dword ptr [rdi] ; mov rax, qword ptr [rax] ; ret
0x0000000000540801 : mov eax, dword ptr [rdi] ; mov rcx, qword ptr [rsi + 8] ; mov eax, dword ptr [rax + rcx] ; ret
0x00000000004e76e2 : mov eax, dword ptr [rdi] ; mov rdi, rax ; jmp r9
0x000000000042cb99 : mov eax, dword ptr [rdi] ; ret
0x0000000000443710 : mov eax, dword ptr [rdi] ; sub eax, dword ptr [rsi] ; ret
0x000000000049bda1 : mov eax, dword ptr [rdx + 0x78] ; mov rax, qword ptr [rax + 8] ; jmp rax
0x00000000004fff9e : mov eax, dword ptr [rdx + 4] ; mov dword ptr [rsi], eax ; ret
0x0000000000568542 : mov eax, dword ptr [rdx + 8] ; mov qword ptr [rsi], rax ; ret
0x00000000005b2518 : mov eax, dword ptr [rdx - 0x2d] ; jge 0x5b255b ; ret 0xf356
0x00000000005e8651 : mov eax, dword ptr [rdx] ; add byte ptr [rax], al ; int1 ; call qword ptr [rax]
0x0000000000614d85 : mov eax, dword ptr [rdx] ; add byte ptr [rax], ch ; hlt ; call qword ptr [rbx]
0x0000000000614d9d : mov eax, dword ptr [rdx] ; add byte ptr [rax], dh ; hlt ; call rax
0x000000000055b651 : mov eax, dword ptr [rip + 0x2cfe89] ; ret
0x00000000004e5e23 : mov eax, dword ptr [rip + 0x34104f] ; mov qword ptr [rsi], rax ; ret
0x00000000004e5de7 : mov eax, dword ptr [rip + 0x34108b] ; mov qword ptr [rsi], rax ; ret
0x00000000004e5db1 : mov eax, dword ptr [rip + 0x3410a9] ; mov qword ptr [rdx], rax ; ret
0x00000000004e5d58 : mov eax, dword ptr [rip + 0x341102] ; mov qword ptr [rdx], rax ; ret
0x00000000004e5ba1 : mov eax, dword ptr [rip + 0x3412a9] ; jmp rax
0x00000000004e6661 : mov eax, dword ptr [rip + 0x347f61] ; ret
0x00000000004e5e72 : mov eax, dword ptr [rip + 0x348730] ; mov qword ptr [r8], rax ; ret
0x00000000004d0d55 : mov eax, dword ptr [rip + 0x35d2dd] ; pop rdx ; jmp qword ptr [rax]
0x00000000004d0c95 : mov eax, dword ptr [rip + 0x35d39d] ; pop rdx ; ret
0x00000000004cd3d5 : mov eax, dword ptr [rip + 0x35f095] ; xor edi, edi ; pop rdx ; jmp qword ptr [rax]
0x00000000004cbf55 : mov eax, dword ptr [rip + 0x360515] ; pop rdx ; ret
0x00000000004cb970 : mov eax, dword ptr [rip + 0x360af2] ; ret
0x00000000004abb0c : mov eax, dword ptr [rip + 0x3807ae] ; pop r8 ; jmp rax
0x00000000004abab4 : mov eax, dword ptr [rip + 0x380806] ; pop r8 ; jmp rax
0x000000000049c6b1 : mov eax, dword ptr [rip + 0x38f241] ; ret
0x000000000048f6c1 : mov eax, dword ptr [rip + 0x39c041] ; ret
0x000000000048f3a1 : mov eax, dword ptr [rip + 0x39c531] ; ret
0x000000000048f321 : mov eax, dword ptr [rip + 0x39c5a9] ; ret
0x000000000048f2a1 : mov eax, dword ptr [rip + 0x39c621] ; ret
0x000000000048f291 : mov eax, dword ptr [rip + 0x39c629] ; ret
0x000000000048f251 : mov eax, dword ptr [rip + 0x39c659] ; ret
0x000000000048f231 : mov eax, dword ptr [rip + 0x39c669] ; ret
0x000000000048f241 : mov eax, dword ptr [rip + 0x39c671] ; ret
0x000000000046a9a5 : mov eax, dword ptr [rip + 0x3c0e71] ; ret
0x000000000046a99e : mov eax, dword ptr [rip + 0x3c0e74] ; ret
0x000000000046a997 : mov eax, dword ptr [rip + 0x3c0e77] ; ret
0x000000000046a990 : mov eax, dword ptr [rip + 0x3c0e7a] ; ret
0x0000000000443351 : mov eax, dword ptr [rip + 0x3db881] ; ret
0x00000000004298f7 : mov eax, dword ptr [rip + 0x401edb] ; pop rdx ; ret
0x000000000053f219 : mov eax, dword ptr [rsi + 0x28] ; mov dword ptr [rbx], eax ; pop rbx ; ret
0x000000000053f727 : mov eax, dword ptr [rsi + 0x28] ; mov dword ptr [rdi], eax ; ret
0x0000000000566921 : mov eax, dword ptr [rsi + 0x28] ; mov qword ptr [rdi], rax ; ret
0x00000000004e8987 : mov eax, dword ptr [rsi + 8] ; mov rsi, qword ptr [rsi + 0x10] ; jmp rax
0x00000000004e02a1 : mov eax, dword ptr [rsi] ; add rsp, 8 ; pop rbx ; pop r14 ; ret
0x000000000048fdce : mov eax, dword ptr [rsp + 0x18] ; call r12
0x0000000000435a7b : mov eax, dword ptr [rsp + 0x18] ; call rax
0x00000000004902fe : mov eax, dword ptr [rsp + 0x18] ; mov r12, r10 ; call r12
0x00000000004c54dd : mov eax, dword ptr [rsp + 0x40] ; call rax
0x0000000000442eb1 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000422d00 : mov eax, dword ptr [rsp + 8] ; call 0x4cefd6
0x000000000042d73c : mov eax, dword ptr [rsp] ; or rax, 0x14 ; mov rdx, rax ; jmp 0x42d754
0x0000000000540c59 : mov eax, dword ptr [rsp] ; pop rdx ; ret
0x00000000004a1426 : mov eax, eax ; call r11
0x0000000000564c6e : mov eax, eax ; cdqe ; ret
0x00000000004e8efe : mov eax, eax ; pop rbx ; ret
0x000000000049faf0 : mov eax, eax ; pop rdx ; ret
0x000000000046b3f7 : mov eax, eax ; ret
0x0000000000408701 : mov eax, ebp ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004163f6 : mov eax, ebp ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000402e2a : mov eax, ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000055078c : mov eax, ebp ; call 0x459ef8
0x000000000049b4c7 : mov eax, ebp ; call r10
0x00000000004d465c : mov eax, ebp ; call r9
0x00000000004aa792 : mov eax, ebp ; call rax
0x000000000048f349 : mov eax, ebp ; cmp dword ptr [rax], eax ; test rax, rax ; je 0x48f366 ; call rax
0x00000000004d45c1 : mov eax, ebp ; mov r14, r9 ; call r14
0x0000000000403e7d : mov eax, ebp ; mov r9, r15 ; call rax
0x00000000004669cf : mov eax, ebp ; mov r9d, r12d ; call 0x562ca7
0x0000000000405cff : mov eax, ebp ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004595a7 : mov eax, ebx ; add rsp, 0x10 ; pop rbx ; ret
0x000000000043eb0f : mov eax, ebx ; add rsp, 0x18 ; pop rbx ; pop r14 ; ret
0x00000000004e52f7 : mov eax, ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004dec85 : mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x00000000004866be : mov eax, ebx ; add rsp, 0x28 ; pop rbx ; pop r14 ; ret
0x00000000004f0201 : mov eax, ebx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000004ad785 : mov eax, ebx ; add rsp, 0x58 ; pop rbx ; pop r14 ; ret
0x00000000005307dc : mov eax, ebx ; add rsp, 0x78 ; pop rbx ; pop r14 ; ret
0x00000000004568c9 : mov eax, ebx ; add rsp, 8 ; pop rbx ; pop r14 ; ret
0x00000000004b6fcb : mov eax, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000047f2d2 : mov eax, ebx ; call r10
0x00000000004d0586 : mov eax, ebx ; call r12
0x000000000048c146 : mov eax, ebx ; je 0x48c167 ; mov rdi, rbx ; call rcx
0x0000000000559b35 : mov eax, ebx ; je 0x559b56 ; mov rdi, rbx ; call rcx
0x000000000040cbac : mov eax, ebx ; mov r9, r12 ; call rax
0x00000000004c54da : mov eax, ebx ; mov rax, qword ptr [rsp + 0x40] ; call rax
0x000000000040e884 : mov eax, ebx ; pop rbx ; pop r14 ; pop r15 ; ret
0x00000000004c740d : mov eax, ebx ; pop rbx ; pop r14 ; pop rbp ; jmp rax
0x00000000004034d9 : mov eax, ebx ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004255d2 : mov eax, ebx ; pop rbx ; ret
0x00000000005124fa : mov eax, ebx ; ret
0x0000000000402416 : mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000416175 : mov eax, ecx ; add rsp, 0x10 ; pop rbx ; ret
0x00000000004f4a60 : mov eax, ecx ; add rsp, 0x20 ; pop rbx ; ret
0x00000000004f4e56 : mov eax, ecx ; add rsp, 0x40 ; pop rbx ; ret
0x0000000000479552 : mov eax, ecx ; add rsp, 8 ; pop rbx ; pop r14 ; ret
0x00000000004ddc8b : mov eax, ecx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000435999 : mov eax, ecx ; mov r9, rax ; pop rbx ; pop rbp ; jmp r11
0x00000000004de7cd : mov eax, ecx ; pop rbx ; pop r14 ; pop r15 ; ret
0x000000000040b0c8 : mov eax, ecx ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000043f520 : mov eax, ecx ; pop rbx ; ret
0x00000000004034fe : mov eax, ecx ; pop rdx ; ret
0x0000000000429af1 : mov eax, ecx ; ret
0x00000000004638a5 : mov eax, edi ; call rax
0x00000000004db803 : mov eax, edi ; dec dword ptr [rax - 0x77] ; ret
0x000000000048fe39 : mov eax, edi ; mov qword ptr [rsp + 8], r10 ; call r10
0x000000000040f460 : mov eax, edi ; mov r9, r13 ; call rax
0x0000000000429ff9 : mov eax, edi ; pop rbx ; pop r14 ; pop r15 ; ret
0x00000000004442e5 : mov eax, edi ; pop rbx ; ret
0x00000000004d0b66 : mov eax, edi ; pop rdx ; ret
0x0000000000419580 : mov eax, edi ; ret
0x0000000000472a05 : mov eax, edx ; jg 0x4729e4 ; ret
0x0000000000564e0d : mov eax, edx ; mov rbx, r8 ; or rax, r9 ; ret
0x0000000000561b2a : mov eax, edx ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042c0d4 : mov eax, edx ; pop rdx ; ret
0x0000000000448d2d : mov eax, edx ; ret
0x00000000004e136b : mov eax, edx ; shr rax, 0x10 ; sub r10, rax ; jmp 0x4e138a
0x00000000004e1466 : mov eax, edx ; shr rax, 0x10 ; sub r10, rax ; jmp 0x4e1485
0x00000000004e2c38 : mov eax, edx ; shr rax, 0x10 ; xor rax, rdx ; ret
0x0000000000406354 : mov eax, esi ; add rsp, 0x18 ; pop rbx ; pop r14 ; ret
0x000000000053c1ce : mov eax, esi ; add rsp, 0x38 ; pop rbx ; pop r14 ; ret
0x000000000046187b : mov eax, esi ; add rsp, 8 ; pop rbx ; pop r14 ; jmp rax
0x000000000043edd8 : mov eax, esi ; add rsp, 8 ; pop rbx ; pop r14 ; ret
0x0000000000540af3 : mov eax, esi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004614e3 : mov eax, esi ; call r12
0x00000000004c587d : mov eax, esi ; call r15
0x00000000004aa014 : mov eax, esi ; call rax
0x0000000000461511 : mov eax, esi ; mov r9, rax ; call r12
0x000000000051026e : mov eax, esi ; mov r9, rbx ; call rax
0x000000000042e722 : mov eax, esi ; pop rbx ; pop r14 ; pop r15 ; ret
0x000000000041db15 : mov eax, esi ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004046ca : mov eax, esi ; ret
0x000000000059cb69 : mov eax, esi ; xchg eax, edi ; or bl, byte ptr ss:[rcx] ; ret
0x000000000055e3a0 : mov eax, esi ; xor esi, esi ; xor ecx, ecx ; mov edx, eax ; jmp 0x55e3b7
0x0000000000438e24 : mov eax, esp ; call rax
0x0000000000478fdf : mov eax, r14d ; pop rbx ; pop r14 ; pop r15 ; ret
0x000000000041db14 : mov eax, r14d ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000429ff8 : mov eax, r15d ; pop rbx ; pop r14 ; pop r15 ; ret
0x0000000000564c6d : mov eax, r8d ; cdqe ; ret
0x00000000004e8efd : mov eax, r8d ; pop rbx ; ret
0x000000000049faef : mov eax, r8d ; pop rdx ; ret
0x000000000046b3f6 : mov eax, r8d ; ret
0x000000000046b3b7 : mov eax, r9d ; ret
0x0000000000578ae8 : mov ebp, 0x150564f0 ; sahf ; jmp 0x578aba
0x0000000000596022 : mov ebp, 0x1581ffc3 ; test al, -0x3b ; ret
0x0000000000500a82 : mov ebp, 0x20c48348 ; pop rbx ; ret
0x00000000005acaf5 : mov ebp, 0x213febb9 ; ret 0x8246
0x00000000005ac68a : mov ebp, 0x250c8422 ; ret 0xe942
0x00000000005e5331 : mov ebp, 0x43100001 ; in al, dx ; jmp qword ptr [rax]
0x00000000005e5371 : mov ebp, 0x43900001 ; in al, dx ; jmp rax
0x00000000005e5381 : mov ebp, 0x43b00001 ; in al, dx ; call qword ptr [rax]
0x00000000005e373d : mov ebp, 0x4948ffe8 ; add dword ptr [rax], eax ; push rax ; ret 0xffe8
0x000000000041108c : mov ebp, 0x56b878 ; ret
0x00000000004e28f2 : mov ebp, 0x5d5e415b ; ret
0x000000000057e148 : mov ebp, 0x6fb7fbff ; jmp 0xffffffffacf0a3bf
0x000000000057e28c : mov ebp, 0x81e24ef1 ; ret
0x000000000059b4d2 : mov ebp, 0x860fc460 ; sbb al, byte ptr [rcx] ; int 0x80
0x000000000047a181 : mov ebp, 0x89480006 ; ret
0x00000000004fab3d : mov ebp, 0x8948fff5 ; ret
0x00000000004df38a : mov ebp, 0x8948fff8 ; ret
0x00000000004bb158 : mov ebp, 0x8948ffff ; ret
0x00000000005a29a6 : mov ebp, 0x8b193729 ; outsd dx, dword ptr fs:[rsi] ; ret 0xf479
0x0000000000405f02 : mov ebp, 0x8c48348 ; pop rbx ; pop r14 ; ret
0x0000000000579b74 : mov ebp, 0x99265bba ; ret
0x00000000005a3e9a : mov ebp, 0xb681d2bb ; jae 0x5a3e69 ; ret
0x000000000048f30f : mov ebp, 0xb80039c5 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000005b7574 : mov ebp, 0xb93ee2be ; nop ; leave ; ret 0x9a60
0x00000000005e9271 : mov ebp, 0xbd000002 ; call rax
0x000000000059f1dd : mov ebp, 0xf12d87c8 ; out dx, al ; ret 0x89e3
0x00000000005ac6f8 : mov ebp, 0xf3d76a55 ; cmc ; ret
0x0000000000596ccc : mov ebp, 0xf801df2b ; out dx, eax ; ret
0x000000000047167f : mov ebp, 1 ; jmp 0x47164e
0x0000000000554a86 : mov ebp, 1 ; jmp 0x554a55
0x000000000054eef6 : mov ebp, 8 ; jmp 0x54eec6
0x00000000004e4aca : mov ebp, dword ptr [rsp + 0x20] ; add rsp, 0x28 ; ret
0x0000000000429ea9 : mov ebp, eax ; mov eax, ebp ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000043a5d3 : mov ebp, eax ; mov r14, r10 ; call rax
0x0000000000411eb7 : mov ebp, eax ; mov r14, rcx ; call r14
0x000000000047f4ca : mov ebp, eax ; mov r8, rbx ; call r10
0x0000000000474a08 : mov ebp, eax ; ret
0x00000000005490f5 : mov ebp, ebx ; dec dword ptr [rax - 0x7f] ; ret
0x00000000004c410d : mov ebp, ecx ; call rax
0x00000000004b820b : mov ebp, edx ; call rcx
0x00000000005e96ed : mov ebp, esi ; jmp qword ptr [rax]
0x00000000004023db : mov ebp, esp ; call rax
0x0000000000402341 : mov ebp, esp ; ja 0x40234c ; pop rbp ; ret
0x00000000005e55d5 : mov ebp, esp ; jmp qword ptr [rax]
0x0000000000594ad6 : mov ebp, gs ; sbb al, 0x70 ; and ah, byte ptr [rsi + rdi*4 - 0x15] ; ret
0x000000000059b63c : mov ebx, 0x1ec0a630 ; ret
0x000000000052b7bc : mov ebx, 0x2e766a0a ; leave ; ret 0x2e81
0x000000000044d564 : mov ebx, 0x2e766a0a ; leave ; ret 0x8581
0x00000000005e52f1 : mov ebx, 0x3fb00001 ; in al, dx ; jmp rax
0x0000000000572a00 : mov ebx, 0x42c2 ; add byte ptr [rax], al ; add ah, al ; ret 0x42
0x000000000057d739 : mov ebx, 0x4a5081d ; ret
0x00000000005a4a37 : mov ebx, 0x595669f3 ; xor cl, byte ptr [rdi + rbp*8 + 0x6e] ; ret
0x0000000000441651 : mov ebx, 0x5b000a4c ; ret
0x000000000055c1c8 : mov ebx, 0x5df472 ; jmp 0x55c198
0x00000000005a81c9 : mov ebx, 0x88335561 ; ret
0x000000000048d1da : mov ebx, 0x8948fffe ; ret
0x0000000000540bd4 : mov ebx, 0x8c48348 ; pop rbx ; pop r14 ; ret
0x000000000059f8c4 : mov ebx, 0xa068aa40 ; scasd eax, dword ptr [rdi] ; ret
0x00000000005a0e20 : mov ebx, 0xa7e37a9 ; pop rbx ; jno 0x5a0dd1 ; ret
0x00000000005a7dda : mov ebx, 0xc59842a ; ret 0xf245
0x00000000005a7a83 : mov ebx, 0xd721d871 ; wait ; call rsp
0x00000000005b70a5 : mov ebx, 0xde434a8e ; cdq ; fnstsw dword ptr [rsi - 0x35] ; ret 0x5f2d
0x0000000000593d5f : mov ebx, 0xe7d6107e ; sal byte ptr [rax - 0x71], cl ; ret 0x65aa
0x00000000005af289 : mov ebx, 0xeaba3bbf ; adc byte ptr [rcx], bl ; ret
0x00000000005aeb55 : mov ebx, 0xf086d1c ; ret
0x0000000000617d25 : mov ebx, 0xf2b80002 ; hlt ; call qword ptr [rax]
0x00000000005991d5 : mov ebx, 0xfa39ef18 ; ret
0x00000000004ce4e9 : mov ebx, 0xffffffff ; mov eax, ebx ; pop rbx ; ret
0x0000000000548ba8 : mov ebx, 1 ; mov eax, ebx ; pop rbx ; ret
0x0000000000612591 : mov ebx, dr0 ; call qword ptr [rsi]
0x00000000005a1262 : mov ebx, dr0 ; xchg eax, ebp ; in al, dx ; jae 0x5a11fb ; ret
0x00000000005a1262 : mov ebx, dr0 ; xchg eax, ebp ; in al, dx ; jae 0x5a11fd ; ret
0x00000000004b1e63 : mov ebx, dr1 ; dec dword ptr [rax - 0x7d] ; ret
0x000000000044977d : mov ebx, dword ptr [rax - 8] ; lea rsp, qword ptr [rax] ; ret
0x00000000004e31b4 : mov ebx, dword ptr [rbx + 8] ; call r12
0x0000000000483b49 : mov ebx, dword ptr [rcx + 0x28] ; lea rsp, qword ptr [rcx + 0x30] ; ret
0x0000000000595f6b : mov ebx, dword ptr [rcx - 0x68] ; ret 0x978
0x00000000005b1a34 : mov ebx, dword ptr [rcx] ; ret 0xa260
0x0000000000597d27 : mov ebx, dword ptr [rdx + 0x76037b0d] ; ret
0x0000000000446189 : mov ebx, dword ptr [rsi + 0x28] ; lea rsp, qword ptr [rsi + 0x30] ; popfq ; ret
0x0000000000445188 : mov ebx, dword ptr [rsi + 0x28] ; lea rsp, qword ptr [rsi + 0x30] ; ret
0x0000000000520183 : mov ebx, dword ptr [rsi - 8] ; lea rsp, qword ptr [rsi] ; ret
0x00000000005072d5 : mov ebx, dword ptr [rsp + 0x10] ; add rsp, 0x18 ; ret
0x0000000000445749 : mov ebx, dword ptr [rsp + 0x30] ; add rsp, 0x38 ; ret
0x00000000004c5013 : mov ebx, dword ptr [rsp + 0x40] ; call rbx
0x000000000040a564 : mov ebx, dword ptr [rsp + 0x44] ; mov esi, ebx ; mov r9, r14 ; call rax
0x0000000000411e2f : mov ebx, dword ptr [rsp + 0x70] ; mov rsi, rbx ; call r14
0x000000000053c669 : mov ebx, eax ; call rbx
0x000000000053ecc9 : mov ebx, eax ; mov eax, ebx ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000549711 : mov ebx, eax ; mov rax, rbx ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000045a016 : mov ebx, eax ; mov rdi, qword ptr [rsp + 0x18] ; call 0x4e6319
0x0000000000467f85 : mov ebx, eax ; mov rdi, rbp ; call 0x4641c7
0x0000000000564e10 : mov ebx, eax ; or rax, r9 ; ret
0x0000000000482056 : mov ebx, ebx ; ret
0x000000000047e010 : mov ebx, ecx ; call r15
0x00000000004ca812 : mov ebx, edi ; call qword ptr [rbx]
0x00000000004fd3c8 : mov ebx, edi ; mov rdi, qword ptr [rbx + 0x18] ; call 0x4e96d8
0x00000000005b6594 : mov ebx, edi ; ret
0x0000000000481ce6 : mov ebx, edx ; ret
0x00000000004fd214 : mov ebx, esi ; mov r14, rdi ; mov edi, ebx ; call 0x4e9499
0x000000000048ed9d : mov ecx, 0x102 ; call rax
0x000000000048ee02 : mov ecx, 0x111 ; call rax
0x000000000048ef00 : mov ecx, 0x121 ; call rax
0x000000000048f0a7 : mov ecx, 0x133 ; call rax
0x000000000048f123 : mov ecx, 0x148 ; call rax
0x000000000048efae : mov ecx, 0x156 ; call rax
0x000000000048effd : mov ecx, 0x15d ; call rax
0x000000000048f21e : mov ecx, 0x15d ; call rbx
0x00000000005af3d7 : mov ecx, 0x18b06350 ; cmpsd dword ptr [rsi], dword ptr [rdi] ; adc dword ptr [rax], ebp ; xchg eax, ebx ; call qword ptr [rcx]
0x000000000045cced : mov ecx, 0x20 ; mov rdi, r15 ; call rbx
0x00000000005e5269 : mov ecx, 0x33e00001 ; in al, dx ; jmp rax
0x00000000005e5271 : mov ecx, 0x34900001 ; in al, dx ; call qword ptr [rax]
0x000000000048a623 : mov ecx, 0x39000af5 ; ret
0x0000000000607bc5 : mov ecx, 0x39680001 ; out dx, al ; call qword ptr [rdi]
0x0000000000607bdd : mov ecx, 0x39700001 ; out dx, al ; call qword ptr [rsi]
0x000000000057a799 : mov ecx, 0x46 ; add byte ptr [rax], al ; ret 0x46b9
0x00000000005b1391 : mov ecx, 0x4f75051 ; jae 0x5b139e ; ret 0x1c87
0x000000000040d435 : mov ecx, 0x56b158 ; cmove rax, rcx ; ret
0x000000000040dfd5 : mov ecx, 0x56b638 ; cmove rax, rcx ; ret
0x00000000004106f5 : mov ecx, 0x56b768 ; cmove rax, rcx ; ret
0x0000000000413188 : mov ecx, 0x56ba10 ; cmove rax, rcx ; ret
0x000000000041b668 : mov ecx, 0x56cc38 ; cmove rax, rcx ; ret
0x000000000041ebf8 : mov ecx, 0x56cd40 ; cmove rax, rcx ; ret
0x00000000005a60ec : mov ecx, 0x5c1a0b6c ; enter -0x6f25, -0x2e ; ret
0x00000000005b25b3 : mov ecx, 0x6cfb4715 ; ret 0x3118
0x00000000005a800a : mov ecx, 0x7df9efdc ; ret 0x666d
0x00000000004a149d : mov ecx, 0x822c90 ; cmovne rax, rcx ; ret
0x00000000004a14bd : mov ecx, 0x822ce8 ; cmovne rax, rcx ; ret
0x00000000004c2d43 : mov ecx, 0x85fffcc6 ; sar byte ptr [rsi + 2], 0x5b ; ret
0x00000000004ca592 : mov ecx, 0x89480001 ; ret
0x0000000000454c35 : mov ecx, 0x8948000e ; ret
0x000000000042e2d7 : mov ecx, 0x89480010 ; ret
0x000000000042d805 : mov ecx, 0x89480012 ; ret
0x000000000049476c : mov ecx, 0x8948fffa ; ret
0x00000000004af17e : mov ecx, 0x8948fffb ; ret
0x00000000005e9189 : mov ecx, 0x94f00002 ; call rax
0x00000000005b7a6f : mov ecx, 0xb1a8908e ; ret 0xf0ad
0x00000000005b44bb : mov ecx, 0xb7df465c ; int 0x80
0x000000000057bda2 : mov ecx, 0xbf3ebd3e ; ret
0x00000000005affcc : mov ecx, 0xc505891d ; ret 0x96c1
0x000000000058e16c : mov ecx, 0xcb06bac1 ; ret 0xfea6
0x000000000058b95b : mov ecx, 0xd3c1034a ; push rsi ; ret 0x2211
0x0000000000617be5 : mov ecx, 0xeef80002 ; hlt ; call qword ptr [rax]
0x000000000048ed5c : mov ecx, 0xfb ; call rax
0x00000000005b1b4e : mov ecx, 0xfd2dd0b5 ; ret 0x6c5d
0x000000000048eeaf : mov ecx, 0xfe ; call rax
0x00000000004e7975 : mov ecx, 1 ; call r8
0x000000000045e9ee : mov ecx, 1 ; mov eax, ecx ; pop rbx ; ret
0x00000000004cd8fe : mov ecx, 1 ; mov eax, ecx ; pop rdx ; ret
0x0000000000461eda : mov ecx, 1 ; mov rdi, r14 ; call rax
0x0000000000461e5a : mov ecx, 1 ; mov rdi, r15 ; call rax
0x0000000000422b6d : mov ecx, 1 ; mov rdi, rbx ; call rax
0x00000000004c6374 : mov ecx, 2 ; mov dword ptr [rax + 0x20], ecx ; pop rbx ; ret
0x0000000000538ec4 : mov ecx, 2 ; xor ebx, ebx ; mov rdx, rax ; jmp 0x538eec
0x0000000000443b2e : mov ecx, 5 ; jne 0x443b40 ; mov eax, ecx ; ret
0x00000000005009e9 : mov ecx, dword ptr [rax + 0x10] ; mov qword ptr [rdi], rcx ; ret
0x0000000000461b9d : mov ecx, dword ptr [rax + 0x24] ; mov dword ptr [rsi], ecx ; ret
0x00000000004ffb97 : mov ecx, dword ptr [rax + 0x28] ; mov rdi, rbx ; call rcx
0x00000000004ffcc7 : mov ecx, dword ptr [rax + 0x38] ; mov rdi, rbx ; call rcx
0x00000000004ccb8e : mov ecx, dword ptr [rax + rcx*8 + 0x50] ; mov rax, rcx ; pop rdx ; ret
0x00000000004ccd0a : mov ecx, dword ptr [rax + rdx*8 + 0x50] ; mov rax, rcx ; pop rdx ; ret
0x0000000000435c88 : mov ecx, dword ptr [rbp + rsi + 0x18] ; mov rdi, qword ptr [rsp + 0x20] ; call rax
0x0000000000435b3f : mov ecx, dword ptr [rbp] ; mov rdi, qword ptr [rsp + 0x20] ; call rax
0x000000000046389e : mov ecx, dword ptr [rbx + 0x18] ; mov rsi, rdi ; mov r8, r15 ; call rax
0x000000000052b841 : mov ecx, dword ptr [rbx - 0x3e] ; jo 0x52b7d7 ; ret 0x8b70
0x000000000052b845 : mov ecx, dword ptr [rbx - 0x3e] ; jo 0x52b7db ; ret 0x8b70
0x000000000052b849 : mov ecx, dword ptr [rbx - 0x3e] ; jo 0x52b7df ; ret 0x8b70
0x000000000052b84d : mov ecx, dword ptr [rbx - 0x3e] ; jo 0x52b7e3 ; ret 0x8b70
0x000000000052b851 : mov ecx, dword ptr [rbx - 0x3e] ; jo 0x52b7e7 ; ret 0x8b70
0x000000000052b855 : mov ecx, dword ptr [rbx - 0x3e] ; jo 0x52b7eb ; ret 0x8b70
0x000000000052b859 : mov ecx, dword ptr [rbx - 0x3e] ; jo 0x52b7ef ; ret 0x51a3
0x000000000045506e : mov ecx, dword ptr [rcx + 0x10] ; mov qword ptr [r8], rcx ; ret
0x0000000000486965 : mov ecx, dword ptr [rcx + 0x10] ; mov qword ptr [rdx], rcx ; pop rdx ; ret
0x0000000000500ad3 : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0x500ad8 ; ret
0x0000000000485365 : mov ecx, dword ptr [rcx + 8] ; mov qword ptr [r9], rcx ; pop rdx ; ret
0x000000000054d8d5 : mov ecx, dword ptr [rcx + 8] ; mov qword ptr [rdx], rcx ; ret
0x00000000004eab94 : mov ecx, dword ptr [rcx] ; mov dword ptr [rbx], ecx ; add rsp, 0x20 ; pop rbx ; ret
0x00000000004ffdb4 : mov ecx, dword ptr [rdi + 0x40] ; mov eax, dword ptr [rcx + rax*4] ; ret
0x0000000000539c05 : mov ecx, dword ptr [rdi + 8] ; mov rax, qword ptr [rcx + rax*8] ; ret
0x000000000057e3a0 : mov ecx, dword ptr [rdx + 0x54] ; xchg eax, edx ; ret
0x0000000000598297 : mov ecx, dword ptr [rip + 0x569ad4d1] ; scasb al, byte ptr [rdi] ; ret 0x2687
0x00000000005517d3 : mov ecx, dword ptr [rsi + 0x60] ; test cl, 7 ; jne 0x5517c4 ; ret
0x0000000000551891 : mov ecx, dword ptr [rsi + 0x60] ; test cl, 7 ; jne 0x551882 ; ret
0x0000000000540804 : mov ecx, dword ptr [rsi + 8] ; mov eax, dword ptr [rax + rcx] ; ret
0x00000000004cbece : mov ecx, dword ptr [rsi + 8] ; mov edi, eax ; mov rsi, r8 ; jmp r9
0x00000000004e8a81 : mov ecx, dword ptr [rsi + 8] ; mov qword ptr [rcx + rax*8], rdi ; ret
0x00000000004d4c2c : mov ecx, dword ptr [rsi + rax] ; and bl, 0xf0 ; mov rdx, r8 ; jmp 0x4d4c48
0x000000000046ad5b : mov ecx, dword ptr [rsi] ; mov qword ptr [r9], rcx ; pop rbx ; ret
0x0000000000429b46 : mov ecx, dword ptr [rsi] ; sub eax, dword ptr [rcx] ; ret
0x00000000004e81a3 : mov ecx, dword ptr [rsi] ; xor edi, edi ; mov rsi, r8 ; jmp rax
0x00000000004e81b5 : mov ecx, dword ptr [rsi] ; xor edx, edx ; mov rsi, r8 ; jmp rax
0x000000000045f127 : mov ecx, dword ptr [rsp + 0x10] ; call rax
0x00000000004d0581 : mov ecx, dword ptr [rsp + 0x18] ; mov r8, rbx ; call r12
0x0000000000489122 : mov ecx, dword ptr [rsp + 0x30] ; call rax
0x00000000004d4657 : mov ecx, dword ptr [rsp + 0x50] ; mov r8, r13 ; call r9
0x000000000042b4d5 : mov ecx, dword ptr [rsp + 4] ; mov eax, ecx ; pop rdx ; ret
0x000000000053fadf : mov ecx, dword ptr [rsp + 8] ; mov r8, rbp ; call rax
0x0000000000461514 : mov ecx, eax ; call r12
0x00000000004617ba : mov ecx, eax ; call r14
0x0000000000461a3b : mov ecx, eax ; call r15
0x00000000004cf913 : mov ecx, eax ; call r8
0x000000000049b4c4 : mov ecx, eax ; mov r8, rbp ; call r10
0x00000000004f1d01 : mov ecx, eax ; mov rax, rcx ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004065d5 : mov ecx, eax ; mov rax, rcx ; pop rdx ; ret
0x000000000047f4c7 : mov ecx, eax ; mov rbp, r8 ; mov r8, rbx ; call r10
0x00000000004ab8dc : mov ecx, eax ; pop r8 ; jmp rax
0x000000000043599c : mov ecx, eax ; pop rbx ; pop rbp ; jmp r11
0x000000000042feeb : mov ecx, ebp ; call 0x42c1f4
0x000000000043cf60 : mov ecx, ebp ; call 0x539184
0x0000000000500f7d : mov ecx, ebp ; call r12
0x000000000046178d : mov ecx, ebp ; call r14
0x0000000000408569 : mov ecx, ebp ; call rax
0x00000000004c502b : mov ecx, ebp ; call rbx
0x0000000000599d97 : mov ecx, ebp ; jo 0x599d38 ; xlatb ; stosb byte ptr [rdi], al ; ret
0x00000000004614e0 : mov ecx, ebp ; mov r8, r14 ; call r12
0x00000000004c587a : mov ecx, ebp ; mov r8, r14 ; call r15
0x000000000046150e : mov ecx, ebp ; mov r8, r14 ; mov r9, rax ; call r12
0x0000000000438e21 : mov ecx, ebp ; mov r8d, r12d ; call rax
0x000000000040c0db : mov ecx, ebp ; mov r9, r12 ; call rax
0x0000000000408566 : mov ecx, ebp ; mov r9, r13 ; call rax
0x000000000041c9c9 : mov ecx, ebp ; mov r9, r15 ; call rax
0x00000000004617b7 : mov ecx, ebp ; mov r9, rax ; call r14
0x000000000041c660 : mov ecx, ebp ; mov r9, rbp ; call rax
0x00000000004047d4 : mov ecx, ebp ; mov r9, rbx ; call rax
0x00000000004c5010 : mov ecx, ebp ; mov rbx, qword ptr [rsp + 0x40] ; call rbx
0x0000000000405b90 : mov ecx, ebx ; call 0x404678
0x0000000000466ce3 : mov ecx, ebx ; call 0x564ad9
0x000000000040e8ec : mov ecx, ebx ; call r10
0x00000000004c5360 : mov ecx, ebx ; call r14
0x0000000000484932 : mov ecx, ebx ; call r8
0x00000000004047d7 : mov ecx, ebx ; call rax
0x0000000000428fc9 : mov ecx, ebx ; jmp 0x428ff3
0x0000000000481ce0 : mov ecx, ebx ; mov r10d, ecx ; mov r11d, edx ; ret
0x000000000053d726 : mov ecx, ebx ; mov r8, r12 ; call rax
0x000000000040f45d : mov ecx, ebx ; mov r8, r15 ; mov r9, r13 ; call rax
0x0000000000403e7a : mov ecx, ebx ; mov r8, rbp ; mov r9, r15 ; call rax
0x000000000040ca1b : mov ecx, ebx ; mov r9, r12 ; call rax
0x000000000040ac36 : mov ecx, ebx ; mov r9, r14 ; call rax
0x00000000004cfae3 : mov ecx, ebx ; pop rbx ; pop r14 ; pop r15 ; jmp rax
0x00000000005a9498 : mov ecx, ebx ; ret 0x6d1e
0x0000000000501461 : mov ecx, ebx ; test rax, rax ; je 0x50148a ; call rax
0x0000000000500600 : mov ecx, ecx ; call r10
0x00000000004d02d7 : mov ecx, ecx ; jmp rax
0x00000000004c40a5 : mov ecx, ecx ; mov r14, r9 ; call rax
0x00000000004c410a : mov ecx, ecx ; mov rbp, r9 ; call rax
0x0000000000461d84 : mov ecx, edi ; call r8
0x000000000040334e : mov ecx, edi ; call rax
0x000000000051026b : mov ecx, edi ; mov r8, r14 ; mov r9, rbx ; call rax
0x00000000004e60ec : mov ecx, edi ; mov r8d, r14d ; call rax
0x00000000004f99d5 : mov ecx, edi ; test r12, r12 ; je 0x4f99e9 ; call r12
0x0000000000471054 : mov ecx, edi ; xor edi, edi ; mov rsi, rcx ; mov rdx, rax ; jmp 0x471069
0x000000000051092c : mov ecx, edx ; add rsp, 0x18 ; jmp rax
0x0000000000482050 : mov ecx, edx ; mov r10d, eax ; mov r11d, ebx ; ret
0x00000000004a1423 : mov ecx, edx ; mov r8, rax ; call r11
0x0000000000461123 : mov ecx, esi ; call r15
0x000000000040a56b : mov ecx, esi ; call rax
0x0000000000422cfd : mov ecx, esi ; mov r8, qword ptr [rsp + 8] ; call 0x4cefd9
0x000000000040f711 : mov ecx, esi ; mov r8, r15 ; mov r9, r13 ; call rax
0x0000000000404903 : mov ecx, esi ; mov r9, rbx ; call rax
0x000000000041b337 : mov ecx, esi ; pop rbx ; pop r14 ; pop rbp ; jmp rax
0x00000000005c35b8 : mov ecx, esi ; push rsi ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, al ; ret 0x5c
0x000000000050eaa4 : mov ecx, esp ; call 0x50ad84
0x00000000004669d2 : mov ecx, esp ; call 0x562ca4
0x00000000004078a0 : mov ecx, esp ; call rax
0x00000000005a6427 : mov ecx, esp ; ret
0x00000000005e3c2d : mov ecx, gs ; jmp rax
0x0000000000461122 : mov ecx, r14d ; call r15
0x00000000004e5ecd : mov ecx, r14d ; call rax
0x000000000041b336 : mov ecx, r14d ; pop rbx ; pop r14 ; pop rbp ; jmp rax
0x00000000005506ac : mov ecx, r15d ; call rax
0x000000000057d349 : mov edi, 0x1380af70 ; ret
0x000000000041957b : mov edi, 0x14 ; mov eax, edi ; ret
0x00000000004c9c50 : mov edi, 0x20000 ; call rax
0x00000000004195c4 : mov edi, 0x28 ; mov eax, edi ; ret
0x00000000004195ad : mov edi, 0x2a ; mov eax, edi ; ret
0x00000000006081bd : mov edi, 0x3fc00001 ; out dx, al ; call qword ptr [rcx]
0x00000000005991ac : mov edi, 0x46008965 ; jmp qword ptr [rax]
0x00000000005b19d5 : mov edi, 0x494e787a ; push 0x6f ; ret 0x2167
0x00000000006181dd : mov edi, 0x500002 ; cmc ; jmp qword ptr [rbx]
0x00000000006181c5 : mov edi, 0x580002 ; cmc ; call qword ptr [rax]
0x00000000004aedbe : mov edi, 0x589e71 ; call r14
0x00000000004f3030 : mov edi, 0x5d2b60 ; call 0x53f257
0x00000000005b41ec : mov edi, 0x7355ac9a ; shr dh, cl ; je 0x5b4257 ; ret
0x00000000005b6a5c : mov edi, 0x7c44912e ; ret 0x2496
0x00000000004023d5 : mov edi, 0x818e10 ; mov rbp, rsp ; call rax
0x000000000042c762 : mov edi, 0x81e920 ; mov rsi, r13 ; call r15
0x000000000042c77d : mov edi, 0x81e978 ; mov rsi, r13 ; call r15
0x0000000000402352 : mov edi, 0x82b700 ; jmp rax
0x0000000000402392 : mov edi, 0x82b700 ; jmp rdx
0x00000000004ed879 : mov edi, 0x8548fff6 ; ror byte ptr [rax + 0xf], 0x45 ; ret
0x000000000049e603 : mov edi, 0x89480002 ; ret
0x00000000004f0196 : mov edi, 0x89480004 ; ret
0x0000000000497e7b : mov edi, 0x8948fffc ; ret
0x00000000004e6f38 : mov edi, 0x8948ffff ; ret
0x000000000043037d : mov edi, 0x89fffffb ; ret
0x00000000005adb29 : mov edi, 0xa997af10 ; call 0x1159ed71
0x00000000005adb28 : mov edi, 0xa997af10 ; call 0x1159ed72
0x00000000005a8cc3 : mov edi, 0xba1700f6 ; ret 0xbf6b
0x00000000005b6235 : mov edi, 0xe980d936 ; ret
0x00000000005b0809 : mov edi, 0xf1cec7bf ; adc ebx, ecx ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cli ; ret 0x3c61
0x00000000005099c0 : mov edi, 0xfd9adae8 ; dec dword ptr [rax - 0x77] ; ret
0x00000000004195cf : mov edi, 0xffffffff ; mov eax, edi ; ret
0x00000000004cdc22 : mov edi, 1 ; call qword ptr [rax]
0x0000000000470356 : mov edi, 1 ; mov esi, dword ptr [rsp + 0xc] ; call rax
0x00000000005a22fc : mov edi, dr1 ; cmpsd dword ptr [rsi], dword ptr [rdi] ; pop rdx ; sbb bh, byte ptr es:[rcx - 0x47] ; ret
0x00000000004b8e41 : mov edi, dword ptr [rax + 8] ; call rcx
0x00000000004b8de1 : mov edi, dword ptr [rax + 8] ; call rdx
0x00000000004e8a46 : mov edi, dword ptr [rax + rbp*8] ; mov rsi, r14 ; call rbx
0x00000000004fd4bf : mov edi, dword ptr [rax] ; call 0x4e96d4
0x00000000005395a8 : mov edi, dword ptr [rax] ; test rdi, rdi ; je 0x5395bc ; call r14
0x00000000004fd3cb : mov edi, dword ptr [rbx + 0x18] ; call 0x4e96d5
0x0000000000545314 : mov edi, dword ptr [rbx + 8] ; call 0x4415f5
0x00000000004e84f8 : mov edi, dword ptr [rbx + 8] ; call qword ptr [rax]
0x000000000054d507 : mov edi, dword ptr [rbx + 8] ; xor esi, esi ; call 0x4e97d7
0x00000000005d6832 : mov edi, dword ptr [rbx] ; adc byte ptr [rbx], dl ; add edx, dword ptr [rbx] ; rcl dl ; ret 0xec12
0x00000000004e31b1 : mov edi, dword ptr [rbx] ; mov rbx, qword ptr [rbx + 8] ; call r12
0x00000000004fd6dc : mov edi, dword ptr [rbx] ; mov rsi, r14 ; call 0x539987
0x00000000005b6c31 : mov edi, dword ptr [rbx] ; push rax ; ret
0x0000000000539566 : mov edi, dword ptr [rcx + rbx*8] ; test rdi, rdi ; je 0x53958b ; call r15
0x0000000000539ba5 : mov edi, dword ptr [rcx + rbx*8] ; test rdi, rdi ; je 0x539bbc ; call r14
0x000000000054b3b3 : mov edi, dword ptr [rdi + 0x30] ; jmp rax
0x0000000000461bfd : mov edi, dword ptr [rdi + 0x38] ; test rdi, rdi ; jne 0x461bf8 ; ret
0x0000000000540a47 : mov edi, dword ptr [rdi] ; add rdi, qword ptr [rsi + 0x10] ; mov rax, rdi ; ret
0x00000000004ed3fa : mov edi, dword ptr [rdi] ; call 0x4e96d4
0x00000000004b8d93 : mov edi, dword ptr [rdi] ; test rdi, rdi ; jne 0x4b8d87 ; ret
0x0000000000423d27 : mov edi, dword ptr [rsp + 0x128] ; call 0x440029
0x000000000045a019 : mov edi, dword ptr [rsp + 0x18] ; call 0x4e6316
0x0000000000435b44 : mov edi, dword ptr [rsp + 0x20] ; call rax
0x000000000053f066 : mov edi, dword ptr [rsp] ; call rax
0x000000000044082c : mov edi, dword ptr [rsp] ; mov rsi, r14 ; call r15
0x00000000004258a6 : mov edi, eax ; call 0x401f49
0x000000000054a52c : mov edi, eax ; call 0x456824
0x000000000047bbc1 : mov edi, eax ; call 0x4e7ff8
0x000000000047bd40 : mov edi, eax ; call 0x4e8044
0x0000000000441921 : mov edi, eax ; call rbx
0x00000000004e76e5 : mov edi, eax ; jmp r9
0x000000000042cb96 : mov edi, eax ; mov rax, qword ptr [rdi] ; ret
0x000000000048492f : mov edi, eax ; mov rcx, rbx ; call r8
0x000000000042c729 : mov edi, eax ; mov rsi, r13 ; call r15
0x00000000004419ab : mov edi, eax ; mov rsi, r14 ; call rbx
0x0000000000441a3f : mov edi, eax ; mov rsi, r15 ; call rbx
0x00000000004cbed1 : mov edi, eax ; mov rsi, r8 ; jmp r9
0x000000000047bd74 : mov edi, eax ; pop rax ; jmp 0x4e8045
0x00000000004adef3 : mov edi, eax ; pop rax ; jmp rcx
0x00000000005b7710 : mov edi, eax ; ret
0x00000000005a24e4 : mov edi, eax ; ret 0xfd89
0x000000000054598b : mov edi, ebp ; call 0x461c24
0x0000000000467f40 : mov edi, ebp ; call 0x4641c4
0x00000000004df0b2 : mov edi, ebp ; call 0x46b374
0x00000000004341a1 : mov edi, ebp ; call 0x4d03f4
0x000000000046a0ed : mov edi, ebp ; call 0x4e6314
0x00000000004d78f6 : mov edi, ebp ; call 0x4f3b14
0x000000000053e9d8 : mov edi, ebp ; call 0x539be9
0x00000000004084e0 : mov edi, ebp ; call qword ptr [rax]
0x000000000040ee38 : mov edi, ebp ; call r14
0x000000000043ea10 : mov edi, ebp ; call r15
0x00000000004101b1 : mov edi, ebp ; call rbx
0x00000000004101f9 : mov edi, ebp ; mov edx, r14d ; call rbx
0x0000000000411eb4 : mov edi, ebp ; mov r13d, eax ; mov r14, rcx ; call r14
0x00000000004c4620 : mov edi, ebp ; mov rcx, r14 ; call rax
0x00000000004903ed : mov edi, ebp ; mov rdx, rbx ; call r10
0x000000000046111d : mov edi, ebp ; mov rdx, rbx ; mov ecx, r14d ; call r15
0x00000000004d4b25 : mov edi, ebp ; mov rsi, r12 ; call r15
0x0000000000490555 : mov edi, ebp ; mov rsi, r12 ; mov edx, r15d ; call rax
0x00000000004c3d6f : mov edi, ebp ; mov rsi, r12 ; mov rcx, rbx ; call rax
0x000000000046efb1 : mov edi, ebp ; mov rsi, r14 ; call rbx
0x00000000004ce354 : mov edi, ebp ; mov rsi, rax ; mov rdx, r14 ; call r15
0x0000000000411e69 : mov edi, ebp ; mov rsi, rbx ; call r14
0x00000000004c2ff9 : mov edi, ebp ; mov rsi, rbx ; mov rcx, r12 ; call rax
0x00000000004618be : mov edi, ebx ; add rsp, 8 ; pop rbx ; pop r14 ; jmp rax
0x00000000005537bb : mov edi, ebx ; call 0x401d36
0x0000000000419dea : mov edi, ebx ; call 0x4360c4
0x000000000047279a : mov edi, ebx ; call 0x46b018
0x000000000046f069 : mov edi, ebx ; call 0x46b324
0x00000000004db6ac : mov edi, ebx ; call 0x4b7904
0x000000000049e618 : mov edi, ebx ; call 0x4ca864
0x000000000049e62d : mov edi, ebx ; call 0x4ca8a4
0x000000000049e696 : mov edi, ebx ; call 0x4ca8e4
0x000000000049e681 : mov edi, ebx ; call 0x4ca8f4
0x000000000049e6ab : mov edi, ebx ; call 0x4ca904
0x000000000049e6c0 : mov edi, ebx ; call 0x4ca914
0x000000000049e6d5 : mov edi, ebx ; call 0x4ca934
0x00000000004f3f13 : mov edi, ebx ; call 0x4d01b4
0x00000000004abe09 : mov edi, ebx ; call 0x4d01b9
0x00000000004fd219 : mov edi, ebx ; call 0x4e9494
0x00000000004fd219 : mov edi, ebx ; call 0x4e9498
0x00000000004432d7 : mov edi, ebx ; call r14
0x00000000004086f1 : mov edi, ebx ; call rax
0x0000000000416273 : mov edi, ebx ; call rcx
0x000000000054a9d2 : mov edi, ebx ; jmp 0x54a99c
0x000000000046178b : mov edi, ebx ; mov ecx, ebp ; call r14
0x00000000004614de : mov edi, ebx ; mov ecx, ebp ; mov r8, r14 ; call r12
0x00000000004617b5 : mov edi, ebx ; mov ecx, ebp ; mov r9, rax ; call r14
0x00000000004617ea : mov edi, ebx ; mov esi, ebp ; call rax
0x0000000000461549 : mov edi, ebx ; mov esi, ebp ; mov rdx, r14 ; call rax
0x0000000000504592 : mov edi, ebx ; mov esi, r14d ; pop rbx ; pop r14 ; pop rbp ; jmp rax
0x0000000000461846 : mov edi, ebx ; mov r14, r10 ; call r14
0x00000000004ff888 : mov edi, ebx ; mov rcx, r14 ; call rax
0x0000000000461d81 : mov edi, ebx ; mov rcx, r15 ; call r8
0x000000000042fee8 : mov edi, ebx ; mov rcx, rbp ; call 0x42c1f7
0x0000000000461b31 : mov edi, ebx ; mov rcx, rbx ; call rax
0x00000000004aa78c : mov edi, ebx ; mov rdx, r13 ; mov r8, rbp ; call rax
0x00000000004612d9 : mov edi, ebx ; mov rdx, r14 ; call r15
0x00000000004606a6 : mov edi, ebx ; mov rdx, r14 ; call rax
0x000000000047f136 : mov edi, ebx ; mov rdx, r15 ; call r14
0x00000000004a9d0d : mov edi, ebx ; mov rdx, r8 ; mov r8, r12 ; call rax
0x0000000000461acd : mov edi, ebx ; mov rdx, rbx ; call r12
0x0000000000461afb : mov edi, ebx ; mov rdx, rbx ; mov r9, rax ; call r12
0x000000000043ad67 : mov edi, ebx ; mov rsi, qword ptr [rsp + 0x20] ; call rax
0x000000000054ad90 : mov edi, ebx ; mov rsi, r13 ; mov rdx, r15 ; call rax
0x000000000054ae7f : mov edi, ebx ; mov rsi, r13 ; mov rdx, r15 ; call rcx
0x0000000000429ba9 : mov edi, ebx ; mov rsi, r14 ; call qword ptr [rax]
0x00000000004d095e : mov edi, ebx ; mov rsi, r14 ; call rax
0x00000000004cff87 : mov edi, ebx ; mov rsi, r14 ; pop rbx ; pop r14 ; pop rbp ; jmp rax
0x000000000053b634 : mov edi, ebx ; mov rsi, r15 ; mov rdx, r14 ; call rax
0x000000000041ef1b : mov edi, ebx ; mov rsi, rax ; mov edx, r13d ; call rcx
0x000000000044320a : mov edi, ebx ; mov rsi, rbp ; call r14
0x000000000043cde9 : mov edi, ebx ; mov rsi, rbp ; call rax
0x000000000046bde8 : mov edi, ebx ; mov rsi, rbx ; mov rdx, rbp ; call rcx
0x00000000004ae01b : mov edi, ebx ; mov rsi, rcx ; mov edx, eax ; call rbp
0x000000000048f341 : mov edi, ebx ; pop rbx ; jmp rax
0x0000000000478742 : mov edi, ecx ; jmp 0x47875d
0x00000000004d4775 : mov edi, ecx ; mov qword ptr [rsp + 0x50], rax ; call r15
0x000000000047e00d : mov edi, ecx ; mov rbx, rcx ; call r15
0x00000000004b8626 : mov edi, ecx ; mov rsi, rbx ; call rdx
0x000000000046ed0d : mov edi, edi ; call 0x46b014
0x00000000004dc6fc : mov edi, edi ; call 0x4d8f19
0x0000000000404609 : mov edi, edi ; call 0x500904
0x000000000055d6d2 : mov edi, edi ; call 0x539be8
0x0000000000569327 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000041cab0 : mov edi, edi ; call qword ptr [rax]
0x000000000043e3b5 : mov edi, edi ; call r14
0x0000000000461e60 : mov edi, edi ; call rax
0x000000000041d0c4 : mov edi, edi ; call rbx
0x00000000004aa06c : mov edi, edi ; mov r8, r14 ; call rax
0x00000000004b8208 : mov edi, edi ; mov rbp, rdx ; call rcx
0x000000000053f565 : mov edi, edi ; mov rsi, r12 ; call rax
0x00000000004219af : mov edi, edi ; mov rsi, r12 ; mov rdx, r14 ; call rbx
0x00000000004313df : mov edi, edi ; mov rsi, r14 ; call rax
0x000000000046bc5f : mov edi, edi ; mov rsi, r15 ; mov rdx, rbx ; call rcx
0x00000000004c5b78 : mov edi, edi ; mov rsi, rax ; mov rdx, r12 ; call rcx
0x00000000005485a7 : mov edi, edx ; call rax
0x0000000000545ed6 : mov edi, esi ; call 0x402174
0x0000000000405165 : mov edi, esi ; call 0x411374
0x00000000004fe8ba : mov edi, esi ; call 0x460f48
0x0000000000434153 : mov edi, esi ; call 0x4d0394
0x000000000054bd73 : mov edi, esi ; call 0x539b88
0x00000000004ecbcc : mov edi, esi ; call 0x558ed4
0x0000000000426e61 : mov edi, esi ; call 0x5683b8
0x000000000040504f : mov edi, esi ; call r12
0x00000000004396d2 : mov edi, esi ; call rax
0x000000000040ac08 : mov edi, esi ; call rcx
0x00000000005eb35d : mov edi, esi ; jmp rax
0x0000000000405a8f : mov edi, esi ; mov edx, r15d ; call r12
0x000000000041e786 : mov edi, esi ; mov esi, eax ; mov rdx, rcx ; call rbx
0x000000000046f822 : mov edi, esi ; mov esi, edx ; mov rdx, rcx ; call rax
0x000000000046f804 : mov edi, esi ; mov esi, edx ; mov rdx, rcx ; pop rcx ; jmp rax
0x00000000004a6e4d : mov edi, esi ; mov rcx, r13 ; call rax
0x0000000000438e1e : mov edi, esi ; mov rcx, r13 ; mov r8d, r12d ; call rax
0x0000000000461a6b : mov edi, esi ; mov rcx, rbx ; call rax
0x00000000004c3a97 : mov edi, esi ; mov rdx, qword ptr [rsp] ; mov rcx, r13 ; call rax
0x0000000000461a07 : mov edi, esi ; mov rdx, rbx ; call r15
0x0000000000461a35 : mov edi, esi ; mov rdx, rbx ; mov r9, rax ; call r15
0x000000000043a765 : mov edi, esi ; mov rsi, r10 ; mov edx, r8d ; call rax
0x0000000000442db8 : mov edi, esi ; mov rsi, r12 ; call r15
0x000000000055050f : mov edi, esi ; mov rsi, r12 ; call rax
0x000000000048fcef : mov edi, esi ; mov rsi, r14 ; call r12
0x00000000004d34c6 : mov edi, esi ; mov rsi, r14 ; mov rdx, r12 ; call r15
0x000000000047dc16 : mov edi, esi ; mov rsi, r14 ; mov rdx, r15 ; call r12
0x0000000000430e74 : mov edi, esi ; mov rsi, r15 ; mov edx, ebp ; call rax
0x00000000005484a5 : mov edi, esi ; mov rsi, rax ; call rbx
0x00000000005679b2 : mov edi, esi ; mov rsi, rbp ; call rax
0x0000000000567ae1 : mov edi, esi ; mov rsi, rbx ; call rax
0x00000000004b8efa : mov edi, esi ; mov rsi, rbx ; call rcx
0x000000000053f768 : mov edi, esi ; mov rsi, rbx ; pop rbx ; pop r14 ; pop rbp ; jmp rax
0x00000000004adf7c : mov edi, esi ; mov rsi, rcx ; mov edx, eax ; call rbx
0x00000000004098e9 : mov edi, esi ; mov rsi, rdx ; mov rdx, rcx ; call rax
0x000000000055d53e : mov edi, esi ; test rax, rax ; je 0x55d58a ; call rax
0x0000000000489f5b : mov edi, esp ; call 0x539be9
0x0000000000407191 : mov edi, esp ; call qword ptr [rax]
0x00000000004b0102 : mov edi, esp ; call qword ptr [rip + 0x37c276]
0x000000000040bce0 : mov edi, esp ; call r14
0x000000000040b250 : mov edi, esp ; call r15
0x000000000041fc35 : mov edi, esp ; call rax
0x000000000043f31a : mov edi, esp ; call rbx
0x0000000000442d18 : mov edi, esp ; lea rsi, qword ptr [rsp + 0x46] ; call r15
0x000000000040cf93 : mov edi, esp ; mov edx, ebp ; call r14
0x000000000040b3af : mov edi, esp ; mov edx, r14d ; call r15
0x00000000004fdbc0 : mov edi, esp ; mov rcx, r13 ; call rbx
0x00000000004b8c1e : mov edi, esp ; mov rcx, rbx ; call r8
0x000000000048e4ff : mov edi, esp ; mov rsi, qword ptr [rsp + 0x38] ; call rcx
0x00000000004d4a55 : mov edi, esp ; mov rsi, r13 ; call r15
0x000000000053f07c : mov edi, esp ; mov rsi, r15 ; call rax
0x00000000004c4fba : mov edi, esp ; mov rsi, rbp ; mov rcx, r13 ; call rax
0x00000000004b0101 : mov edi, r12d ; call qword ptr [rip + 0x37c276]
0x0000000000569326 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000410b42 : mov edx, 0x14 ; mov r9, rbx ; call r10
0x0000000000410f5e : mov edx, 0x16 ; mov r9, rbx ; call rax
0x000000000059dab5 : mov edx, 0x1bf8d7e5 ; adc al, -0x70 ; ret
0x0000000000593ddf : mov edx, 0x1f9af32a ; pop rbx ; ret 0xdfca
0x00000000004b9d20 : mov edx, 0x226 ; call 0x4e5f67
0x00000000005ada8e : mov edx, 0x31be70df ; ret
0x00000000005979dc : mov edx, 0x33a03907 ; mov dword ptr [rcx], esp ; jmp rcx
0x00000000005e52a9 : mov edx, 0x3dd00001 ; in al, dx ; jmp rax
0x00000000005b1a2f : mov edx, 0x4631a3c4 ; mov ebx, dword ptr [rcx] ; ret 0xa260
0x00000000004954f2 : mov edx, 0x48000a8c ; add esp, 0x58 ; ret
0x0000000000560992 : mov edx, 0x48fff898 ; add esp, 0x48 ; ret
0x00000000004031ce : mov edx, 0x56a214 ; call 0x48f3e7
0x00000000004e7d1b : mov edx, 0x5bde93 ; xor ecx, ecx ; call r12
0x0000000000541ef0 : mov edx, 0x5d9950 ; jmp 0x53e1b7
0x000000000042d696 : mov edx, 0x89480012 ; ret
0x000000000055a53a : mov edx, 0x8948fff8 ; ret
0x00000000004a841c : mov edx, 0x8948fffb ; ret
0x00000000004fa47e : mov edx, 0x8948fffe ; ret
0x00000000005b1474 : mov edx, 0x8ba3091f ; jo 0x5b1491 ; ret 0xfd78
0x00000000005e91d9 : mov edx, 0x9ab00002 ; jmp rax
0x00000000005e91e9 : mov edx, 0x9ad00002 ; call qword ptr [rax]
0x00000000004171e4 : mov edx, 0xb8410056 ; ret
0x0000000000414ac6 : mov edx, 0xb8410056 ; ret 6
0x0000000000559c7b : mov edx, 0xba ; call 0x4e5f67
0x000000000042aa3b : mov edx, 0xba000000 ; ret
0x000000000055693d : mov edx, 0xbebef41d ; ret 0x99be
0x000000000058d623 : mov edx, 0xc2ac05eb ; jmp qword ptr gs:[rbx]
0x00000000005b6bf0 : mov edx, 0xecf3612c ; mov dl, byte ptr [rbp - 1] ; sahf ; ret
0x0000000000617c3d : mov edx, 0xefc00002 ; hlt ; call rbx
0x0000000000596dcf : mov edx, 0xf38bf760 ; ret
0x000000000048a88c : mov edx, 1 ; mov rcx, r12 ; call rax
0x000000000048a397 : mov edx, 1 ; mov rcx, rbx ; call rax
0x000000000040bcda : mov edx, 1 ; mov rdi, r12 ; call r14
0x000000000040b24a : mov edx, 1 ; mov rdi, r12 ; call r15
0x000000000040ee32 : mov edx, 1 ; mov rdi, r13 ; call r14
0x00000000004101ab : mov edx, 1 ; mov rdi, r13 ; call rbx
0x0000000000405049 : mov edx, 1 ; mov rdi, r14 ; call r12
0x0000000000442be1 : mov edx, 1 ; mov rdi, r15 ; call rbx
0x00000000004432d1 : mov edx, 1 ; mov rdi, rbx ; call r14
0x0000000000443316 : mov edx, 2 ; mov rdi, rbx ; call r14
0x00000000005517c1 : mov edx, 5 ; je 0x5517e4 ; mov eax, edx ; ret
0x000000000055187f : mov edx, 5 ; je 0x5518a2 ; mov eax, edx ; ret
0x00000000004aa4d1 : mov edx, 8 ; mov r8, r14 ; call rax
0x00000000005a03ce : mov edx, ds ; insd dword ptr [rdi], dx ; and ebp, 0xffffffb9 ; ret 0xae59
0x00000000004f3369 : mov edx, dword ptr [rax + 0x10] ; mov qword ptr [rcx], rdx ; ret
0x00000000004ed808 : mov edx, dword ptr [rax + 0x18] ; mov qword ptr [rcx], rdx ; ret
0x00000000004e5de9 : mov edx, dword ptr [rax] ; xor al, 0 ; mov qword ptr [rsi], rax ; ret
0x0000000000500a18 : mov edx, dword ptr [rcx] ; cmp rdx, qword ptr [rsi] ; cmove rax, rcx ; ret
0x0000000000484ec0 : mov edx, dword ptr [rdi + 0x10] ; mov qword ptr [rcx], rdx ; pop rdx ; ret
0x0000000000540814 : mov edx, dword ptr [rdx + 8] ; mov eax, dword ptr [rcx + rdx] ; mov dword ptr [rcx + rdx], esi ; ret
0x0000000000486a32 : mov edx, dword ptr [rdx + 8] ; mov qword ptr [rcx], rdx ; pop rdx ; ret
0x0000000000488e51 : mov edx, dword ptr [rdx + 8] ; mov qword ptr [rcx], rdx ; ret
0x00000000004bc6d0 : mov edx, dword ptr [rsp + 0x10] ; call rax
0x000000000055a0a9 : mov edx, dword ptr [rsp + 0x18] ; lea rcx, qword ptr [rsp + 0x20] ; call rbx
0x000000000047df47 : mov edx, dword ptr [rsp + 0x70] ; call r12
0x000000000048ff5d : mov edx, dword ptr [rsp + 8] ; call r14
0x00000000005506a8 : mov edx, dword ptr [rsp + 8] ; mov ecx, r15d ; call rax
0x00000000004c3a9a : mov edx, dword ptr [rsp] ; mov rcx, r13 ; call rax
0x00000000004f3bc6 : mov edx, eax ; add rsp, 8 ; pop rbx ; pop r14 ; jmp rax
0x000000000043ed91 : mov edx, eax ; call 0x46b094
0x000000000043a76b : mov edx, eax ; call rax
0x00000000004ae020 : mov edx, eax ; call rbp
0x00000000004adf81 : mov edx, eax ; call rbx
0x000000000042d744 : mov edx, eax ; jmp 0x42d74c
0x0000000000452610 : mov edx, eax ; jmp 0x452621
0x000000000047105c : mov edx, eax ; jmp 0x471061
0x00000000004d4c33 : mov edx, eax ; jmp 0x4d4c41
0x0000000000538ecc : mov edx, eax ; jmp 0x538ee4
0x000000000055e3a6 : mov edx, eax ; jmp 0x55e3b1
0x000000000042e863 : mov edx, eax ; jmp rcx
0x0000000000482053 : mov edx, eax ; mov r11d, ebx ; ret
0x00000000004a9d10 : mov edx, eax ; mov r8, r12 ; call rax
0x00000000005005fd : mov edx, eax ; mov rcx, r9 ; call r10
0x0000000000404cbe : mov edx, eax ; sar rdx, 3 ; inc rdx ; jmp 0x404ce7
0x00000000005613fc : mov edx, ebp ; call 0x4cd6a4
0x000000000046dd03 : mov edx, ebp ; call 0x5618b8
0x000000000040cf95 : mov edx, ebp ; call r14
0x000000000047f099 : mov edx, ebp ; call r15
0x0000000000430e79 : mov edx, ebp ; call rax
0x000000000053c33e : mov edx, ebp ; call rbx
0x000000000041ef21 : mov edx, ebp ; call rcx
0x00000000004d160f : mov edx, ebp ; mov ecx, ebp ; call rax
0x000000000053d724 : mov edx, ebp ; mov ecx, ebx ; mov r8, r12 ; call rax
0x000000000041b334 : mov edx, ebp ; mov ecx, r14d ; pop rbx ; pop r14 ; pop rbp ; jmp rax
0x00000000004aa1cc : mov edx, ebp ; mov r8, r14 ; call rax
0x00000000004ae78b : mov edx, ebp ; mov r8, r15 ; call rax
0x00000000004aa78f : mov edx, ebp ; mov r8, rbp ; call rax
0x000000000053c666 : mov edx, ebp ; mov rbx, r8 ; call rbx
0x00000000004c5877 : mov edx, ebp ; mov rcx, r13 ; mov r8, r14 ; call r15
0x00000000004c540e : mov edx, ebp ; mov rcx, rbx ; call r14
0x0000000000415c63 : mov edx, ebx ; call 0x401f44
0x00000000004d8c47 : mov edx, ebx ; call 0x4d8449
0x00000000004903f0 : mov edx, ebx ; call r10
0x0000000000461ad0 : mov edx, ebx ; call r12
0x0000000000461a0a : mov edx, ebx ; call r15
0x000000000046bc65 : mov edx, ebx ; call rcx
0x0000000000461120 : mov edx, ebx ; mov ecx, r14d ; call r15
0x00000000004aa011 : mov edx, ebx ; mov r8, r14 ; call rax
0x0000000000461afe : mov edx, ebx ; mov r9, rax ; call r12
0x0000000000461a38 : mov edx, ebx ; mov r9, rax ; call r15
0x000000000043cf5d : mov edx, ebx ; mov rcx, r13 ; call 0x539187
0x000000000047e2cb : mov edx, ecx ; call r9
0x00000000004098ef : mov edx, ecx ; call rax
0x000000000041e78b : mov edx, ecx ; call rbx
0x0000000000481ce3 : mov edx, ecx ; mov r11d, edx ; ret
0x000000000047e00a : mov edx, ecx ; mov r15, r9 ; mov rbx, rcx ; call r15
0x00000000004a1420 : mov edx, ecx ; mov rcx, r10 ; mov r8, rax ; call r11
0x000000000049b4c1 : mov edx, ecx ; mov rcx, r8 ; mov r8, rbp ; call r10
0x00000000004ab8d9 : mov edx, ecx ; mov rcx, r8 ; pop r8 ; jmp rax
0x0000000000564921 : mov edx, ecx ; neg r9 ; ret
0x000000000046f809 : mov edx, ecx ; pop rcx ; jmp rax
0x0000000000405a92 : mov edx, edi ; call r12
0x000000000047f139 : mov edx, edi ; call r14
0x000000000049055b : mov edx, edi ; call rax
0x0000000000472587 : mov edx, edi ; call rcx
0x000000000045945d : mov edx, edi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000561c39 : mov edx, edi ; div qword ptr [rsp - 8] ; ret
0x00000000004e5ecb : mov edx, edi ; mov ecx, r14d ; call rax
0x000000000047efd7 : mov edx, edi ; mov qword ptr [rsp + 0x28], r8 ; call r14
0x000000000045f124 : mov edx, edi ; mov rcx, qword ptr [rsp + 0x10] ; call rax
0x00000000004c5c46 : mov edx, edi ; mov rcx, r12 ; call rax
0x00000000004c3b14 : mov edx, edi ; mov rcx, r13 ; call rax
0x00000000004c5028 : mov edx, edi ; mov rcx, r13 ; call rbx
0x00000000004cb56b : mov edx, edi ; mov rcx, r14 ; call rax
0x00000000004c40a2 : mov edx, edi ; mov rcx, r9 ; mov r14, r9 ; call rax
0x00000000004c4107 : mov edx, edi ; mov rcx, r9 ; mov rbp, r9 ; call rax
0x00000000004a0172 : mov edx, edx ; mov r9, rax ; call r14
0x00000000005e911d : mov edx, esi ; call qword ptr [rax]
0x000000000040b3b2 : mov edx, esi ; call r15
0x00000000004606a9 : mov edx, esi ; call rax
0x00000000004101fc : mov edx, esi ; call rbx
0x000000000040334b : mov edx, esi ; mov r9, r15 ; call rax
0x000000000041078b : mov edx, esi ; mov r9, rbx ; call rax
0x000000000046ba1f : mov edx, esi ; pop rbx ; pop r14 ; pop r15 ; jmp rax
0x000000000049cdee : mov edx, esi ; pop rbx ; pop r14 ; pop rbp ; jmp rax
0x00000000004793cb : mov edx, esp ; call 0x401c69
0x00000000004bc4c1 : mov edx, esp ; call 0x4b8784
0x00000000004d34cc : mov edx, esp ; call r15
0x000000000045f533 : mov edx, esp ; call rax
0x00000000004c5b7e : mov edx, esp ; call rcx
0x00000000004e60e9 : mov edx, esp ; mov rcx, r15 ; mov r8d, r14d ; call rax
0x00000000004c5893 : mov edx, esp ; mov rcx, rbp ; mov r8, r14 ; call r15
0x00000000004c557d : mov edx, esp ; mov rcx, rbx ; call r14
0x00000000005e4355 : mov edx, gs ; call qword ptr [rax]
0x00000000004e60e8 : mov edx, r12d ; mov rcx, r15 ; mov r8d, r14d ; call rax
0x000000000041ef20 : mov edx, r13d ; call rcx
0x000000000053d723 : mov edx, r13d ; mov ecx, ebx ; mov r8, r12 ; call rax
0x000000000040b3b1 : mov edx, r14d ; call r15
0x00000000004101fb : mov edx, r14d ; call rbx
0x000000000040334a : mov edx, r14d ; mov r9, r15 ; call rax
0x000000000041078a : mov edx, r14d ; mov r9, rbx ; call rax
0x000000000049cded : mov edx, r14d ; pop rbx ; pop r14 ; pop rbp ; jmp rax
0x0000000000405a91 : mov edx, r15d ; call r12
0x000000000049055a : mov edx, r15d ; call rax
0x000000000043a76a : mov edx, r8d ; call rax
0x00000000005005fc : mov edx, r8d ; mov rcx, r9 ; call r10
0x00000000005a9a6a : mov edx, ss ; sub al, ch ; test dword ptr [rsi], edi ; wait ; ret
0x000000000045758d : mov es, ecx ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret
0x0000000000470045 : mov es, word ptr [rax + rax] ; add byte ptr [rax - 1], cl ; ret
0x00000000005f508d : mov es, word ptr [rax] ; add al, al ; sub esp, edi ; jmp qword ptr [rcx]
0x0000000000550b6a : mov es, word ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005f501d : mov es, word ptr [rax] ; add byte ptr [rax], ah ; and esp, edi ; jmp qword ptr [rsi]
0x000000000059fffd : mov es, word ptr [rbp - 0x5f] ; push rsi ; ret 0xe039
0x0000000000477e4d : mov es, word ptr [rbx + 0x27202ff] ; xor eax, eax ; ret
0x00000000004023d7 : mov es, word ptr [rcx - 0x1a76b800] ; call rax
0x00000000004daa04 : mov es, word ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005e4779 : mov es, word ptr [rcx] ; add byte ptr [rax], al ; in al, -0x16 ; jmp qword ptr [rax]
0x0000000000432399 : mov es, word ptr [rcx] ; add byte ptr [rax], al ; mov eax, 0x573c90 ; ret
0x00000000005e8741 : mov es, word ptr [rdx] ; add byte ptr [rax + 0x56], al ; int1 ; call qword ptr [rax]
0x0000000000431f99 : mov es, word ptr [rip - 0x40480000] ; xor dword ptr [rdi], edx ; ret
0x000000000059fffc : mov es, word ptr es:[rbp - 0x5f] ; push rsi ; ret 0xe039
0x00000000005b484f : mov esi, 0x18d3b1d4 ; ret 0x32c0
0x00000000005b5993 : mov esi, 0x23a4270 ; xor al, 0x5c ; ret
0x0000000000599ac6 : mov esi, 0x291d2136 ; clc ; ret 0x6dc0
0x000000000040ac02 : mov esi, 0x4004 ; mov rdi, r14 ; call rcx
0x000000000041d0be : mov esi, 0x4004 ; mov rdi, r15 ; call rbx
0x00000000004086eb : mov esi, 0x4008 ; mov rdi, rbx ; call rax
0x00000000005e53b9 : mov esi, 0x45d00001 ; in al, dx ; jmp rax
0x00000000005e53c9 : mov esi, 0x46400001 ; in al, dx ; call qword ptr [rax]
0x00000000004e81de : mov esi, 0x48000007 ; add esp, 0x18 ; ret
0x00000000004e673e : mov esi, 0x4e6850 ; call 0x4e2a47
0x00000000005a0a46 : mov esi, 0x525d329b ; ret
0x00000000004f2aa0 : mov esi, 0x5d29e0 ; jmp 0x53ed37
0x00000000005569b6 : mov esi, 0x615f5f9d ; pop rdi ; ret 0xbe3e
0x000000000053bb57 : mov esi, 0x6b440459 ; ret
0x0000000000578cb6 : mov esi, 0x7632d8c5 ; ret
0x000000000059c2fe : mov esi, 0x76a27f2 ; ret
0x0000000000563881 : mov esi, 0x7e0f4866 ; ret
0x0000000000440bcc : mov esi, 0x83480173 ; ret
0x0000000000443d30 : mov esi, 0x88013244 ; ret
0x00000000004db60e : mov esi, 0x8900064d ; ret
0x00000000004f4222 : mov esi, 0x89480000 ; ret
0x00000000004890b3 : mov esi, 0x8948000d ; ret
0x00000000004dec61 : mov esi, 0x8948fff8 ; ret
0x00000000004fa085 : mov esi, 0x8948fffe ; ret
0x00000000005b7575 : mov esi, 0x90b93ee2 ; leave ; ret 0x9a60
0x00000000005a10a5 : mov esi, 0x9302bb07 ; ret 0x6718
0x000000000059cb93 : mov esi, 0x958c3ca8 ; ret 0x45da
0x00000000005af7ea : mov esi, 0xa47ecd67 ; ret
0x00000000005b0a3b : mov esi, 0xa56d9dcf ; ret 0xcec9
0x00000000005a99e1 : mov esi, 0xaf884912 ; ret
0x00000000005b6b76 : mov esi, 0xb93ab8cd ; ret
0x00000000005e9289 : mov esi, 0xbed00002 ; jmp qword ptr [rax]
0x0000000000531fbb : mov esi, 0xbf597fc7 ; ret 0xa88f
0x000000000055bb33 : mov esi, 0xc0310000 ; ret
0x00000000005e92c1 : mov esi, 0xc0d00002 ; call rax
0x000000000052b45c : mov esi, 0xc3243185 ; jge 0x52b477 ; push rbp ; ret
0x00000000005e92d1 : mov esi, 0xc3800002 ; jmp qword ptr [rax]
0x00000000005a913b : mov esi, 0xe82aa265 ; ret 0x3128
0x000000000059bda7 : mov esi, 0xf48c0012 ; ret
0x00000000005a279c : mov esi, 0xf4e0c504 ; ret 0x77fc
0x000000000058dd75 : mov esi, 0xf920751d ; ret 0x5ca4
0x00000000004700cf : mov esi, 0xffffffff ; call rax
0x00000000004e6387 : mov esi, 1 ; call rax
0x00000000004084da : mov esi, 1 ; mov rdi, r13 ; call qword ptr [rax]
0x000000000041c60a : mov esi, 1 ; mov rdi, rbp ; call qword ptr [rax]
0x00000000004e5f4e : mov esi, 1 ; pop rbx ; jmp rax
0x00000000004cf81d : mov esi, 1 ; xor ecx, ecx ; call rax
0x00000000004f3d08 : mov esi, 3 ; xor edx, edx ; jmp rax
0x000000000042e85d : mov esi, 5 ; mov rdx, rax ; jmp rcx
0x000000000042e89d : mov esi, 6 ; mov rdx, rax ; jmp rcx
0x000000000042e8dd : mov esi, 7 ; mov rdx, rax ; jmp rcx
0x0000000000484e51 : mov esi, 8 ; xor edx, edx ; call rax
0x0000000000417bcc : mov esi, dword ptr [rax + 0x1f0] ; mov rdi, r14 ; call rcx
0x000000000043a3dd : mov esi, dword ptr [rax + 0x1f0] ; mov rdi, rbx ; call rcx
0x00000000005b1478 : mov esi, dword ptr [rax + 0xf] ; ret 0xfd78
0x00000000004b8e3e : mov esi, dword ptr [rax] ; mov rdi, qword ptr [rax + 8] ; call rcx
0x00000000004b8dde : mov esi, dword ptr [rax] ; mov rdi, qword ptr [rax + 8] ; call rdx
0x00000000004df0af : mov esi, dword ptr [rax] ; mov rdi, rbp ; call 0x46b377
0x000000000043d476 : mov esi, dword ptr [rbx + 0x2a8] ; mov rdi, rbx ; call rax
0x000000000043d2a4 : mov esi, dword ptr [rbx + 0x2a8] ; mov rdi, rbx ; call rcx
0x0000000000478253 : mov esi, dword ptr [rbx + 0x30] ; jmp qword ptr [rsi*8 + 0x57c258]
0x000000000043ed8e : mov esi, dword ptr [rbx] ; mov rdx, rax ; call 0x46b097
0x00000000004161cf : mov esi, dword ptr [rcx + 0x288] ; mov rdi, rbx ; call rax
0x00000000004e898b : mov esi, dword ptr [rsi + 0x10] ; jmp rax
0x00000000004c5e23 : mov esi, dword ptr [rsp + 0x18] ; mov rdx, r12 ; call rax
0x000000000043ad6a : mov esi, dword ptr [rsp + 0x20] ; call rax
0x000000000053fc56 : mov esi, dword ptr [rsp + 0x20] ; mov rdx, r13 ; call r14
0x000000000046fd78 : mov esi, dword ptr [rsp + 0x28] ; call rax
0x000000000048e502 : mov esi, dword ptr [rsp + 0x38] ; call rcx
0x000000000053c339 : mov esi, dword ptr [rsp + 0x48] ; mov rdx, r13 ; call rbx
0x000000000047035b : mov esi, dword ptr [rsp + 0xc] ; call rax
0x000000000045f52e : mov esi, dword ptr [rsp + 8] ; mov rdx, r12 ; call rax
0x0000000000488414 : mov esi, eax ; call 0x5046d4
0x00000000005484a8 : mov esi, eax ; call rbx
0x00000000004cbed4 : mov esi, eax ; jmp r9
0x00000000004e81a8 : mov esi, eax ; jmp rax
0x0000000000402390 : mov esi, eax ; mov edi, 0x82b700 ; jmp rdx
0x000000000041ef1e : mov esi, eax ; mov edx, r13d ; call rcx
0x0000000000467f48 : mov esi, eax ; mov rdi, rbp ; call 0x4641c7
0x00000000004c5b7b : mov esi, eax ; mov rdx, r12 ; call rcx
0x00000000004ce357 : mov esi, eax ; mov rdx, r14 ; call r15
0x000000000041e788 : mov esi, eax ; mov rdx, rcx ; call rbx
0x000000000044320d : mov esi, ebp ; call r14
0x000000000042c72c : mov esi, ebp ; call r15
0x000000000043cdec : mov esi, ebp ; call rax
0x00000000004c4fbd : mov esi, ebp ; mov rcx, r13 ; call rax
0x00000000004c53f2 : mov esi, ebp ; mov rcx, rbx ; call r14
0x000000000048ff5a : mov esi, ebp ; mov rdx, qword ptr [rsp + 8] ; call r14
0x00000000004c540b : mov esi, ebp ; mov rdx, r13 ; mov rcx, rbx ; call r14
0x000000000046154b : mov esi, ebp ; mov rdx, r14 ; call rax
0x000000000054ad93 : mov esi, ebp ; mov rdx, r15 ; call rax
0x000000000054ae82 : mov esi, ebp ; mov rdx, r15 ; call rcx
0x00000000004e5ec8 : mov esi, ebp ; mov rdx, r15 ; mov ecx, r14d ; call rax
0x00000000004aa1c9 : mov esi, ebp ; mov rdx, rbp ; mov r8, r14 ; call rax
0x00000000004aa00e : mov esi, ebp ; mov rdx, rbx ; mov r8, r14 ; call rax
0x00000000004f353f : mov esi, ebx ; add rsp, 8 ; pop rbx ; pop r14 ; jmp rax
0x00000000004e0cfd : mov esi, ebx ; add rsp, 8 ; pop rbx ; pop r14 ; jmp rcx
0x00000000005490f1 : mov esi, ebx ; call 0x401cb9
0x000000000046f09b : mov esi, ebx ; call 0x46b324
0x0000000000411e34 : mov esi, ebx ; call r14
0x000000000043182a : mov esi, ebx ; call rax
0x00000000004b8efd : mov esi, ebx ; call rcx
0x00000000004b8629 : mov esi, ebx ; call rdx
0x00000000004c2f7b : mov esi, ebx ; je 0x4c2fb5 ; mov rcx, r12 ; call rax
0x0000000000612529 : mov esi, ebx ; jmp rdi
0x000000000049cdeb : mov esi, ebx ; mov edx, r14d ; pop rbx ; pop r14 ; pop rbp ; jmp rax
0x00000000004442e0 : mov esi, ebx ; mov qword ptr [rdx], rsi ; mov eax, edi ; pop rbx ; ret
0x000000000040a568 : mov esi, ebx ; mov r9, r14 ; call rax
0x000000000050eaa1 : mov esi, ebx ; mov rcx, r12 ; call 0x50ad87
0x00000000004c2ffc : mov esi, ebx ; mov rcx, r12 ; call rax
0x000000000047df44 : mov esi, ebx ; mov rdx, qword ptr [rsp + 0x70] ; call r12
0x00000000004a016f : mov esi, ebx ; mov rdx, r10 ; mov r9, rax ; call r14
0x00000000004bc4be : mov esi, ebx ; mov rdx, r12 ; call 0x4b8787
0x00000000004d0ecd : mov esi, ebx ; mov rdx, r14 ; pop rbx ; pop r14 ; pop rbp ; jmp rax
0x000000000050ca49 : mov esi, ebx ; mov rdx, r15 ; mov rcx, r12 ; call rax
0x000000000046bdeb : mov esi, ebx ; mov rdx, rbp ; call rcx
0x000000000055e966 : mov esi, ebx ; pop rbx ; pop r14 ; pop r15 ; jmp rax
0x00000000004977f6 : mov esi, ebx ; pop rbx ; pop r14 ; pop r15 ; jmp rcx
0x000000000053f76b : mov esi, ebx ; pop rbx ; pop r14 ; pop rbp ; jmp rax
0x0000000000596dd2 : mov esi, ebx ; ret
0x0000000000411eba : mov esi, ecx ; call r14
0x00000000004c40a8 : mov esi, ecx ; call rax
0x00000000005e88e5 : mov esi, ecx ; jmp qword ptr [rax]
0x0000000000503fea : mov esi, ecx ; jne 0x503fd8 ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004ae01e : mov esi, ecx ; mov edx, eax ; call rbp
0x00000000004adf7f : mov esi, ecx ; mov edx, eax ; call rbx
0x00000000005005fa : mov esi, ecx ; mov edx, r8d ; mov rcx, r9 ; call r10
0x000000000040ac33 : mov esi, ecx ; mov rcx, rbx ; mov r9, r14 ; call rax
0x0000000000471059 : mov esi, ecx ; mov rdx, rax ; jmp 0x471064
0x000000000053f07f : mov esi, edi ; call rax
0x0000000000441a42 : mov esi, edi ; call rbx
0x00000000004fd217 : mov esi, edi ; mov edi, ebx ; call 0x4e9496
0x0000000000430e77 : mov esi, edi ; mov edx, ebp ; call rax
0x00000000004aa690 : mov esi, edi ; mov r8, r14 ; call rax
0x00000000004638a2 : mov esi, edi ; mov r8, r15 ; call rax
0x00000000004c4f21 : mov esi, edi ; mov rcx, r13 ; call rax
0x00000000004bc6cd : mov esi, edi ; mov rdx, qword ptr [rsp + 0x10] ; call rax
0x00000000004c557a : mov esi, edi ; mov rdx, r12 ; mov rcx, rbx ; call r14
0x000000000053b637 : mov esi, edi ; mov rdx, r14 ; call rax
0x000000000047f16a : mov esi, edi ; mov rdx, r15 ; call r14
0x0000000000472584 : mov esi, edi ; mov rdx, r15 ; call rcx
0x00000000004c5c43 : mov esi, edi ; mov rdx, r15 ; mov rcx, r12 ; call rax
0x00000000004c3b11 : mov esi, edi ; mov rdx, r15 ; mov rcx, r13 ; call rax
0x00000000004c5025 : mov esi, edi ; mov rdx, r15 ; mov rcx, r13 ; call rbx
0x000000000047ee65 : mov esi, edi ; mov rdx, rbp ; call r14
0x000000000047f0e5 : mov esi, edi ; mov rdx, rbp ; call r15
0x000000000046bc62 : mov esi, edi ; mov rdx, rbx ; call rcx
0x000000000055b653 : mov esi, edi ; sub al, 0 ; ret
0x0000000000461849 : mov esi, edx ; call r14
0x000000000043a5d6 : mov esi, edx ; call rax
0x00000000005668c4 : mov esi, edx ; inc dword ptr [rbp + 0x5b027ec0] ; ret
0x000000000043a768 : mov esi, edx ; mov edx, r8d ; call rax
0x00000000004098ec : mov esi, edx ; mov rdx, rcx ; call rax
0x000000000046f806 : mov esi, edx ; mov rdx, rcx ; pop rcx ; jmp rax
0x00000000004f35f2 : mov esi, esi ; add rsp, 8 ; pop rbx ; pop r14 ; jmp rcx
0x00000000004e0cb8 : mov esi, esi ; call 0x4d03f9
0x00000000004fd6df : mov esi, esi ; call 0x539984
0x0000000000429bac : mov esi, esi ; call qword ptr [rax]
0x000000000048fcf2 : mov esi, esi ; call r12
0x0000000000440830 : mov esi, esi ; call r15
0x00000000004313e2 : mov esi, esi ; call rax
0x00000000004419ae : mov esi, esi ; call rbx
0x00000000004c740a : mov esi, esi ; mov r8, rbx ; pop rbx ; pop r14 ; pop rbp ; jmp rax
0x00000000004d34c9 : mov esi, esi ; mov rdx, r12 ; call r15
0x00000000004c41b3 : mov esi, esi ; mov rdx, r14 ; call rax
0x000000000047dc19 : mov esi, esi ; mov rdx, r15 ; call r12
0x00000000004cff8a : mov esi, esi ; pop rbx ; pop r14 ; pop rbp ; jmp rax
0x0000000000442dbb : mov esi, esp ; call r15
0x000000000053f568 : mov esi, esp ; call rax
0x0000000000490558 : mov esi, esp ; mov edx, r15d ; call rax
0x00000000004c3d72 : mov esi, esp ; mov rcx, rbx ; call rax
0x00000000004d160c : mov esi, esp ; mov rdx, r13 ; mov ecx, ebp ; call rax
0x00000000004219b2 : mov esi, esp ; mov rdx, r14 ; call rbx
0x000000000053eeef : mov esi, esp ; mov rdx, r15 ; call rax
0x00000000004e616a : mov esi, esp ; mov rdx, r15 ; mov ecx, r14d ; call rax
0x00000000004cb568 : mov esi, esp ; mov rdx, r15 ; mov rcx, r14 ; call rax
0x00000000004ae788 : mov esi, esp ; mov rdx, rbp ; mov r8, r15 ; call rax
0x0000000000415c60 : mov esi, esp ; mov rdx, rbx ; call 0x401f47
0x00000000004eb560 : mov esi, fs ; add al, 0 ; pop rdx ; ret
0x000000000060b094 : mov esi, gs ; add dword ptr [rax], eax ; fdivr st(1) ; out dx, al ; call qword ptr [rax]
0x000000000040a567 : mov esi, r11d ; mov r9, r14 ; call rax
0x00000000004e6169 : mov esi, r12d ; mov rdx, r15 ; mov ecx, r14d ; call rax
0x00000000004ae787 : mov esi, r12d ; mov rdx, rbp ; mov r8, r15 ; call rax
0x0000000000504594 : mov esi, r14d ; pop rbx ; pop r14 ; pop rbp ; jmp rax
0x0000000000423d28 : mov esp, 0x12824 ; add al, ch ; in eax, dx ; ret 1
0x00000000006170c4 : mov esp, 0x180002ae ; in al, -0xc ; call qword ptr [rsi]
0x000000000059fe97 : mov esp, 0x19c4d016 ; ret 0x5d95
0x00000000005b6223 : mov esp, 0x1baf6060 ; ret 0x7888
0x00000000005ec4c4 : mov esp, 0x48000002 ; jo 0x5ec4b3 ; call rdi
0x00000000006015c4 : mov esp, 0x48000153 ; push -0x14 ; jmp rdx
0x00000000005df380 : mov esp, 0x55c3 ; add byte ptr [rax], al ; add dh, al ; ret
0x00000000006181c4 : mov esp, 0x580002bf ; add ch, dh ; call qword ptr [rax]
0x0000000000607bc4 : mov esp, 0x680001b9 ; cmp esi, ebp ; call qword ptr [rdi]
0x000000000060b4c4 : mov esp, 0x780001f2 ; sbb ebp, edi ; call qword ptr [rax]
0x000000000051415d : mov esp, 0x8024 ; add bl, dh ; ret
0x00000000005f86c4 : mov esp, 0x880000c4 ; loopne 0x5f86ba ; call qword ptr [rsi]
0x00000000004ae953 : mov esp, 0x89480001 ; ret
0x00000000004341bb : mov esp, 0x8948000c ; ret
0x000000000055a2aa : mov esp, 0x8948fff8 ; ret
0x0000000000494412 : mov esp, 0x8948fffa ; ret
0x00000000005a840c : mov esp, 0x97c6237f ; ret 0x27ba
0x00000000005a17b7 : mov esp, 0xa7c1baa ; ret
0x00000000005e9241 : mov esp, 0xafb00002 ; jmp rax
0x0000000000507ebf : mov esp, 0xc1418f1b ; ret 0x4505
0x0000000000507d74 : mov esp, 0xc1418f1b ; ret 0x450e
0x00000000005d787d : mov esp, 0xc1c1bfbf ; ret 0xc4c2
0x00000000005f67c4 : mov esp, 0xc80000a5 ; jmp rdi
0x000000000057e193 : mov esp, 0xda41e7f9 ; cmp dl, bl ; pop rdx ; ret 0xa084
0x00000000004306f2 : mov esp, 0xdb310009 ; mov rax, rbx ; pop rbx ; ret
0x0000000000609ec4 : mov esp, 0xe80001dc ; ret 0xffee
0x0000000000616cc4 : mov esp, 0xe80002aa ; scasd eax, dword ptr [rdi] ; hlt ; jmp rbx
0x000000000047a6ba : mov esp, 0xe8890006 ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000057d2ac : mov esp, 0xee125e3f ; cld ; jmp qword ptr [rcx]
0x000000000059daeb : mov esp, 0xf2f1e862 ; ret
0x0000000000617e3d : mov esp, 0xf6e00002 ; hlt ; call rdi
0x00000000005ad98d : mov esp, 0xffe87f6a ; ret
0x000000000054aafb : mov esp, 1 ; jmp 0x54ab15
0x000000000054afc7 : mov esp, 1 ; jmp 0x54afe1
0x000000000059bdaa : mov esp, dr0 ; ret
0x000000000058b6e9 : mov esp, dword ptr [rcx + 0x27] ; ret 0x54c
0x00000000005a29aa : mov esp, dword ptr [rdx + rax*2 + 0x6f] ; ret 0xf479
0x00000000005081da : mov esp, dword ptr [rdx - 0x3b3ebeb0] ; cmovno eax, ecx ; ret 0x440a
0x0000000000508280 : mov esp, dword ptr [rdx - 0x3b3ebeb0] ; or byte ptr [rcx - 0x3f], al ; ret 0x440a
0x00000000004421b7 : mov esp, dword ptr [rsp + 8] ; mov r9, r12 ; call rax
0x0000000000546d4c : mov esp, eax ; mov rdi, r12 ; call r15
0x0000000000467f53 : mov esp, eax ; mov rdi, rbp ; call 0x4641c7
0x0000000000477d72 : mov esp, ebp ; jmp 0x477c06
0x000000000048fd76 : mov esp, edx ; call r12
0x00000000005e1575 : mov esp, edx ; jmp qword ptr [rax]
0x00000000005e1ce5 : mov esp, fs ; jmp qword ptr [rax]
0x00000000005e5615 : mov esp, gs ; jmp rax
0x00000000004cdcde : mov fs, edi ; xor eax, 0xff314500 ; xor edi, edi ; call qword ptr [rax]
0x0000000000557313 : mov fs, word ptr [rbx + 0x1d357b0c] ; loopne 0x5572fa ; ret 0x4b2e
0x00000000005aa1ac : mov fs, word ptr [rdx] ; xchg eax, esi ; ret
0x00000000005ade5f : mov gs, esi ; pop rdx ; pop rbx ; ja 0x5ade39 ; jno 0x5adedf ; call qword ptr [rax]
0x0000000000426f4e : mov gs, word ptr [rcx + rdx] ; add byte ptr [rcx], bh ; ret
0x00000000005ae481 : mov gs, word ptr [rdx - 0x52] ; ret 0xe408
0x0000000000405160 : mov qword ptr [r14 + 0x50], rbx ; mov rdi, r14 ; call 0x411379
0x0000000000459700 : mov qword ptr [r14], rbx ; xor esi, esi ; mov rdi, r12 ; call r15
0x000000000048611c : mov qword ptr [r8], rax ; ret
0x0000000000455071 : mov qword ptr [r8], rcx ; ret
0x000000000048536d : mov qword ptr [r9], 0 ; pop rdx ; ret
0x000000000046ad5d : mov qword ptr [r9], rcx ; pop rbx ; ret
0x0000000000485368 : mov qword ptr [r9], rcx ; pop rdx ; ret
0x000000000047a270 : mov qword ptr [rax + 0x10], 0 ; pop rdx ; ret
0x000000000053f844 : mov qword ptr [rax + 0x20], 0 ; pop rdx ; ret
0x00000000004b6f10 : mov qword ptr [rax + 0x30], 0 ; pop rdx ; ret
0x000000000047788b : mov qword ptr [rax + 0x38], rdx ; mov eax, 1 ; ret
0x0000000000543a3e : mov qword ptr [rax + 0x70], 0x543bc0 ; pop rdx ; ret
0x00000000005689da : mov qword ptr [rax + 8], 0 ; pop rbx ; ret
0x0000000000568999 : mov qword ptr [rax], 0 ; pop rbx ; ret
0x000000000040812e : mov qword ptr [rax], 0 ; ret
0x00000000005452a4 : mov qword ptr [rbx + 0x10], r14 ; pop rbx ; pop r14 ; pop r15 ; ret
0x000000000042b46d : mov qword ptr [rbx + 0x18], r14 ; pop rbx ; pop r14 ; pop r15 ; ret
0x000000000042560d : mov qword ptr [rbx + 0x198], rax ; pop rbx ; ret
0x000000000042e555 : mov qword ptr [rbx + 0x20], 0 ; pop rbx ; ret
0x0000000000543467 : mov qword ptr [rbx + 0x28], 0 ; pop rbx ; ret
0x000000000042dd46 : mov qword ptr [rbx + 0x30], rcx ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000005457c7 : mov qword ptr [rbx + 0x48], 0 ; pop rbx ; ret
0x000000000048f365 : mov qword ptr [rbx + 8], rax ; pop rbx ; ret
0x000000000042a931 : mov qword ptr [rbx], 0 ; pop rbx ; ret
0x00000000004e82d3 : mov qword ptr [rbx], rax ; mov eax, 1 ; pop rbx ; ret
0x0000000000498b7c : mov qword ptr [rbx], rax ; mov eax, 2 ; pop rbx ; ret
0x000000000048f362 : mov qword ptr [rbx], rax ; mov qword ptr [rbx + 8], rax ; pop rbx ; ret
0x0000000000488d74 : mov qword ptr [rbx], rax ; mov rax, qword ptr [rbx + 8] ; pop rbx ; ret
0x00000000004de66e : mov qword ptr [rbx], rdx ; add rsp, 0x10 ; pop rbx ; ret
0x000000000041ad1f : mov qword ptr [rcx + 0x60], rdx ; mov eax, 1 ; ret
0x00000000004e8a84 : mov qword ptr [rcx + rax*8], rdi ; ret
0x0000000000539c28 : mov qword ptr [rcx + rax*8], rdx ; mov rax, rdx ; ret
0x0000000000486bc0 : mov qword ptr [rcx], 0 ; ret
0x000000000056816e : mov qword ptr [rcx], rax ; mov eax, 1 ; ret
0x00000000004fda61 : mov qword ptr [rcx], rax ; ret
0x0000000000484ec3 : mov qword ptr [rcx], rdx ; pop rdx ; ret
0x0000000000488e54 : mov qword ptr [rcx], rdx ; ret
0x0000000000431900 : mov qword ptr [rdi + 0x108], rsi ; ret
0x000000000046ab46 : mov qword ptr [rdi + 0x10], 0 ; ret
0x00000000004ffd6a : mov qword ptr [rdi + 0x10], 0x4ffd80 ; ret
0x00000000004be457 : mov qword ptr [rdi + 0x10], r14 ; mov qword ptr [rdi + 0x18], r15 ; ret
0x00000000004be223 : mov qword ptr [rdi + 0x10], r8 ; mov qword ptr [rdi + 0x18], r9 ; ret
0x0000000000541b00 : mov qword ptr [rdi + 0x10], rsi ; mov eax, 1 ; ret
0x00000000004610a0 : mov qword ptr [rdi + 0x10], rsi ; ret
0x000000000054874a : mov qword ptr [rdi + 0x10], rsi ; xor eax, eax ; ret
0x000000000042c347 : mov qword ptr [rdi + 0x128], rdx ; pop rdx ; ret
0x000000000042eae0 : mov qword ptr [rdi + 0x140], rsi ; ret
0x000000000042b95b : mov qword ptr [rdi + 0x148], rdx ; ret
0x00000000004e5825 : mov qword ptr [rdi + 0x14], rax ; mov eax, 1 ; ret
0x000000000042e350 : mov qword ptr [rdi + 0x150], rsi ; ret
0x000000000042eaa0 : mov qword ptr [rdi + 0x160], rsi ; ret
0x000000000042eac0 : mov qword ptr [rdi + 0x168], rsi ; ret
0x000000000042d366 : mov qword ptr [rdi + 0x178], rdx ; ret
0x000000000042e760 : mov qword ptr [rdi + 0x180], rsi ; ret
0x00000000004bdc62 : mov qword ptr [rdi + 0x18], r11 ; pop r13 ; pop r12 ; ret
0x00000000004be45b : mov qword ptr [rdi + 0x18], r15 ; ret
0x00000000004be227 : mov qword ptr [rdi + 0x18], r9 ; ret
0x000000000054b3fc : mov qword ptr [rdi + 0x18], rcx ; mov dword ptr [rdi], r9d ; ret
0x000000000056057a : mov qword ptr [rdi + 0x18], rcx ; mov eax, 1 ; ret
0x0000000000541490 : mov qword ptr [rdi + 0x18], rsi ; mov eax, 1 ; ret
0x000000000048eaa0 : mov qword ptr [rdi + 0x18], rsi ; ret
0x000000000054876a : mov qword ptr [rdi + 0x18], rsi ; xor eax, eax ; ret
0x000000000042c11e : mov qword ptr [rdi + 0x1b8], rdx ; pop rdx ; ret
0x00000000005411d0 : mov qword ptr [rdi + 0x20], rsi ; mov eax, 1 ; ret
0x00000000005007f0 : mov qword ptr [rdi + 0x20], rsi ; mov qword ptr [rdi + 0x28], rdx ; ret
0x0000000000463b70 : mov qword ptr [rdi + 0x20], rsi ; ret
0x000000000054878a : mov qword ptr [rdi + 0x20], rsi ; xor eax, eax ; ret
0x000000000042eab0 : mov qword ptr [rdi + 0x210], rsi ; ret
0x000000000042ead0 : mov qword ptr [rdi + 0x218], rsi ; ret
0x000000000041ad58 : mov qword ptr [rdi + 0x248], rdx ; jmp 0x41ad2b
0x00000000004261d7 : mov qword ptr [rdi + 0x288], rdx ; ret
0x000000000047eb22 : mov qword ptr [rdi + 0x28], r8 ; mov qword ptr [rdi + 0x30], rcx ; ret
0x0000000000561c21 : mov qword ptr [rdi + 0x28], rdx ; pop rbx ; pop r14 ; ret
0x000000000042c31c : mov qword ptr [rdi + 0x28], rdx ; pop rdx ; ret
0x00000000005007f4 : mov qword ptr [rdi + 0x28], rdx ; ret
0x00000000005415a0 : mov qword ptr [rdi + 0x28], rsi ; mov eax, 1 ; ret
0x000000000048eac0 : mov qword ptr [rdi + 0x28], rsi ; ret
0x00000000005487aa : mov qword ptr [rdi + 0x28], rsi ; xor eax, eax ; ret
0x000000000042cd07 : mov qword ptr [rdi + 0x2c0], rdx ; ret
0x000000000042cd17 : mov qword ptr [rdi + 0x2d0], rdx ; ret
0x000000000042cde7 : mov qword ptr [rdi + 0x2e8], rdx ; ret
0x0000000000513dc5 : mov qword ptr [rdi + 0x30], r14 ; mov qword ptr [rdi + 0x38], r15 ; ret
0x000000000042a037 : mov qword ptr [rdi + 0x30], rax ; ret
0x00000000005622e9 : mov qword ptr [rdi + 0x30], rbx ; mov qword ptr [rdi + 0x38], rcx ; pop rbx ; ret
0x0000000000562818 : mov qword ptr [rdi + 0x30], rcx ; mov qword ptr [rdi + 0x38], r9 ; ret
0x000000000047eb26 : mov qword ptr [rdi + 0x30], rcx ; ret
0x00000000005416b0 : mov qword ptr [rdi + 0x30], rsi ; mov eax, 1 ; ret
0x0000000000500800 : mov qword ptr [rdi + 0x30], rsi ; mov qword ptr [rdi + 0x38], rdx ; ret
0x00000000005007a0 : mov qword ptr [rdi + 0x30], rsi ; ret
0x00000000005487ca : mov qword ptr [rdi + 0x30], rsi ; xor eax, eax ; ret
0x0000000000513dc9 : mov qword ptr [rdi + 0x38], r15 ; ret
0x000000000056281c : mov qword ptr [rdi + 0x38], r9 ; ret
0x00000000005622ed : mov qword ptr [rdi + 0x38], rcx ; pop rbx ; ret
0x0000000000500804 : mov qword ptr [rdi + 0x38], rdx ; ret
0x00000000005419f0 : mov qword ptr [rdi + 0x38], rsi ; mov eax, 1 ; ret
0x00000000004ffd40 : mov qword ptr [rdi + 0x38], rsi ; ret
0x0000000000500750 : mov qword ptr [rdi + 0x40], rsi ; mov dword ptr [rdi + 0x48], edx ; ret
0x0000000000541bc0 : mov qword ptr [rdi + 0x40], rsi ; mov eax, 1 ; ret
0x0000000000500810 : mov qword ptr [rdi + 0x40], rsi ; mov qword ptr [rdi + 0x48], rdx ; ret
0x0000000000463ba0 : mov qword ptr [rdi + 0x40], rsi ; ret
0x000000000055f334 : mov qword ptr [rdi + 0x48], 0x55f340 ; ret
0x0000000000455184 : mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 0x50], rcx ; ret
0x0000000000500814 : mov qword ptr [rdi + 0x48], rdx ; ret
0x00000000005410c0 : mov qword ptr [rdi + 0x48], rsi ; mov eax, 1 ; ret
0x00000000004315db : mov qword ptr [rdi + 0x48], rsi ; ret
0x0000000000455188 : mov qword ptr [rdi + 0x50], rcx ; ret
0x0000000000541380 : mov qword ptr [rdi + 0x50], rsi ; mov eax, 1 ; ret
0x0000000000500820 : mov qword ptr [rdi + 0x50], rsi ; mov qword ptr [rdi + 0x58], rdx ; ret
0x00000000004318a0 : mov qword ptr [rdi + 0x50], rsi ; ret
0x00000000004c84cd : mov qword ptr [rdi + 0x58], 0 ; ret
0x0000000000455175 : mov qword ptr [rdi + 0x58], r9 ; mov qword ptr [rdi + 0x60], rax ; ret
0x0000000000500824 : mov qword ptr [rdi + 0x58], rdx ; ret
0x0000000000541860 : mov qword ptr [rdi + 0x58], rsi ; mov eax, 1 ; ret
0x00000000004318c0 : mov qword ptr [rdi + 0x58], rsi ; ret
0x0000000000455179 : mov qword ptr [rdi + 0x60], rax ; ret
0x0000000000540ca0 : mov qword ptr [rdi + 0x60], rsi ; mov eax, 1 ; ret
0x0000000000500830 : mov qword ptr [rdi + 0x60], rsi ; mov qword ptr [rdi + 0x68], rdx ; ret
0x00000000004318e0 : mov qword ptr [rdi + 0x60], rsi ; ret
0x0000000000500834 : mov qword ptr [rdi + 0x68], rdx ; ret
0x00000000004ca8e0 : mov qword ptr [rdi + 0x68], rsi ; mov eax, 1 ; ret
0x000000000055ae90 : mov qword ptr [rdi + 0x68], rsi ; ret
0x00000000005626f3 : mov qword ptr [rdi + 0x70], r9 ; mov qword ptr [rdi + 0x78], rcx ; pop rbx ; ret
0x00000000004cf8da : mov qword ptr [rdi + 0x70], rax ; mov eax, 1 ; ret
0x00000000004ca8f0 : mov qword ptr [rdi + 0x70], rsi ; mov eax, 1 ; ret
0x0000000000500840 : mov qword ptr [rdi + 0x70], rsi ; mov qword ptr [rdi + 0x78], rdx ; ret
0x00000000005660f0 : mov qword ptr [rdi + 0x70], rsi ; ret
0x00000000005124f5 : mov qword ptr [rdi + 0x78], rax ; mov rax, r11 ; ret
0x000000000056218b : mov qword ptr [rdi + 0x78], rbx ; pop rbx ; pop r14 ; ret
0x00000000005626f7 : mov qword ptr [rdi + 0x78], rcx ; pop rbx ; ret
0x0000000000500844 : mov qword ptr [rdi + 0x78], rdx ; ret
0x00000000004ca900 : mov qword ptr [rdi + 0x78], rsi ; mov eax, 1 ; ret
0x0000000000500857 : mov qword ptr [rdi + 0x88], rdx ; ret
0x00000000004551af : mov qword ptr [rdi + 0x90], rax ; ret
0x0000000000500867 : mov qword ptr [rdi + 0x98], rdx ; ret
0x000000000042eaf0 : mov qword ptr [rdi + 0x98], rsi ; ret
0x000000000042d357 : mov qword ptr [rdi + 0xa0], rdx ; ret
0x00000000004551c0 : mov qword ptr [rdi + 0xa0], rsi ; ret
0x0000000000500877 : mov qword ptr [rdi + 0xa8], rdx ; ret
0x000000000042d330 : mov qword ptr [rdi + 0xa8], rsi ; ret
0x000000000042d340 : mov qword ptr [rdi + 0xb0], rsi ; ret
0x0000000000512743 : mov qword ptr [rdi + 0xb8], r8 ; ret
0x0000000000500887 : mov qword ptr [rdi + 0xb8], rdx ; ret
0x0000000000431920 : mov qword ptr [rdi + 0xb8], rsi ; ret
0x0000000000455151 : mov qword ptr [rdi + 0xc0], rax ; ret
0x00000000004319d0 : mov qword ptr [rdi + 0xc0], rsi ; ret
0x00000000005000ad : mov qword ptr [rdi + 0xc8], rax ; ret
0x0000000000500897 : mov qword ptr [rdi + 0xc8], rdx ; ret
0x00000000004319e0 : mov qword ptr [rdi + 0xc8], rsi ; ret
0x00000000004e4161 : mov qword ptr [rdi + 8], rax ; mov eax, 1 ; ret
0x000000000054d83e : mov qword ptr [rdi + 8], rdx ; mov dword ptr [rdi], esi ; ret
0x00000000005605e0 : mov qword ptr [rdi + 8], rsi ; or byte ptr [rdi + 0x18], 2 ; ret
0x0000000000461090 : mov qword ptr [rdi + 8], rsi ; ret
0x000000000054872a : mov qword ptr [rdi + 8], rsi ; xor eax, eax ; ret
0x000000000053f72d : mov qword ptr [rdi], 0 ; ret
0x00000000004564c7 : mov qword ptr [rdi], r9 ; ret
0x00000000005669e8 : mov qword ptr [rdi], rax ; mov eax, 1 ; pop rdx ; ret
0x0000000000566914 : mov qword ptr [rdi], rax ; mov eax, 1 ; ret
0x000000000045652e : mov qword ptr [rdi], rax ; mov eax, 2 ; ret
0x0000000000500ab5 : mov qword ptr [rdi], rax ; mov rax, rcx ; ret
0x0000000000566924 : mov qword ptr [rdi], rax ; ret
0x0000000000456264 : mov qword ptr [rdi], rcx ; mov eax, 1 ; ret
0x00000000005009ec : mov qword ptr [rdi], rcx ; ret
0x00000000004261b9 : mov qword ptr [rdi], rdx ; mov eax, 1 ; ret
0x00000000004ca866 : mov qword ptr [rdi], rsi ; mov eax, 1 ; pop rdx ; ret
0x000000000048f2f0 : mov qword ptr [rdi], rsi ; mov qword ptr [rdi + 8], rsi ; ret
0x00000000005486a0 : mov qword ptr [rdi], rsi ; mov rax, rsi ; ret
0x000000000049c6d3 : mov qword ptr [rdi], rsi ; ret
0x00000000004279c4 : mov qword ptr [rdx], rax ; mov eax, 1 ; ret
0x00000000004e5d5e : mov qword ptr [rdx], rax ; ret
0x0000000000486968 : mov qword ptr [rdx], rcx ; pop rdx ; ret
0x000000000054d8d8 : mov qword ptr [rdx], rcx ; ret
0x00000000004442e2 : mov qword ptr [rdx], rsi ; mov eax, edi ; pop rbx ; ret
0x000000000042dacf : mov qword ptr [rdx], rsi ; mov rax, qword ptr [rcx + rax + 0x78] ; pop rdx ; ret
0x000000000056606c : mov qword ptr [rip + 0x2c5645], rax ; ret
0x000000000055bb47 : mov qword ptr [rip + 0x2cf9b2], rdi ; ret
0x000000000055b660 : mov qword ptr [rip + 0x2cfe79], rdi ; ret
0x0000000000548680 : mov qword ptr [rip + 0x2e6119], rdi ; ret
0x0000000000547402 : mov qword ptr [rip + 0x2e7397], rax ; pop rdx ; ret
0x000000000050d192 : mov qword ptr [rip + 0x3214af], rax ; pop rdx ; ret
0x000000000050d170 : mov qword ptr [rip + 0x3214d1], rdi ; ret
0x0000000000504414 : mov qword ptr [rip + 0x32a20d], rax ; pop rbx ; ret
0x00000000005043fe : mov qword ptr [rip + 0x32a21b], rbx ; pop rbx ; ret
0x00000000004e6650 : mov qword ptr [rip + 0x347f71], rdi ; ret
0x00000000004dd36f : mov qword ptr [rip + 0x350ce2], rax ; pop rdx ; ret
0x00000000004c5fb2 : mov qword ptr [rip + 0x36644f], rax ; pop rdx ; ret
0x00000000004c5f90 : mov qword ptr [rip + 0x366471], rdi ; ret
0x00000000004bc152 : mov qword ptr [rip + 0x3702a7], rax ; pop rdx ; ret
0x00000000004bc130 : mov qword ptr [rip + 0x3702c9], rdi ; ret
0x000000000049c6a0 : mov qword ptr [rip + 0x38f251], rdi ; ret
0x000000000049a842 : mov qword ptr [rip + 0x3910a7], rax ; pop rdx ; ret
0x000000000049a820 : mov qword ptr [rip + 0x3910c9], rdi ; ret
0x0000000000496462 : mov qword ptr [rip + 0x39547f], rax ; pop rdx ; ret
0x0000000000496440 : mov qword ptr [rip + 0x3954a1], rdi ; ret
0x000000000048f3b0 : mov qword ptr [rip + 0x39c521], rdi ; ret
0x000000000048f2d0 : mov qword ptr [rip + 0x39c5f1], rdi ; ret
0x000000000048f2b9 : mov qword ptr [rip + 0x39c600], rbx ; pop rbx ; ret
0x000000000048f280 : mov qword ptr [rip + 0x39c629], rdi ; ret
0x000000000048f260 : mov qword ptr [rip + 0x39c639], rdi ; ret
0x000000000048f270 : mov qword ptr [rip + 0x39c641], rdi ; ret
0x0000000000443340 : mov qword ptr [rip + 0x3db891], rdi ; ret
0x0000000000429907 : mov qword ptr [rip + 0x401eca], rdi ; ret
0x0000000000404769 : mov qword ptr [rsi + 0x20], rax ; ret
0x00000000004cb32f : mov qword ptr [rsi], 0 ; xor eax, eax ; ret
0x00000000004cb319 : mov qword ptr [rsi], rax ; mov eax, 1 ; ret
0x00000000004e5ded : mov qword ptr [rsi], rax ; ret
0x000000000048fd70 : mov qword ptr [rsp + 0x18], r8 ; mov r12, r10 ; call r12
0x000000000047f2cc : mov qword ptr [rsp + 0x20], r8 ; mov r8, rbx ; call r10
0x00000000004c535a : mov qword ptr [rsp + 0x28], r13 ; mov rcx, rbx ; call r14
0x000000000047efd9 : mov qword ptr [rsp + 0x28], r8 ; call r14
0x00000000004aa36e : mov qword ptr [rsp + 0x28], rdx ; mov r8, r14 ; call rax
0x00000000004d4777 : mov qword ptr [rsp + 0x50], rax ; call r15
0x000000000051415b : mov qword ptr [rsp + 0x80], r15 ; ret
0x000000000048fe3b : mov qword ptr [rsp + 8], r10 ; call r10
0x000000000048ff2a : mov qword ptr [rsp + 8], r14 ; mov r14, r9 ; call r14
0x0000000000564920 : mov r10, r9 ; neg r9 ; ret
0x000000000045260f : mov r10, rax ; jmp 0x452622
0x0000000000482052 : mov r10d, eax ; mov r11d, ebx ; ret
0x0000000000481ce2 : mov r10d, ecx ; mov r11d, edx ; ret
0x00000000005b1a33 : mov r11d, dword ptr [rcx] ; ret 0xa260
0x0000000000482055 : mov r11d, ebx ; ret
0x0000000000481ce5 : mov r11d, edx ; ret
0x00000000004421b6 : mov r12, qword ptr [rsp + 8] ; mov r9, r12 ; call rax
0x000000000048fd75 : mov r12, r10 ; call r12
0x0000000000546d4b : mov r12, rax ; mov rdi, r12 ; call r15
0x0000000000467f52 : mov r12, rax ; mov rdi, rbp ; call 0x4641c8
0x00000000004d4092 : mov r12, rdx ; call r12
0x0000000000477d71 : mov r12d, ebp ; jmp 0x477c07
0x000000000043a5d2 : mov r13, r8 ; mov r14, r10 ; call rax
0x00000000005b0101 : mov r13b, -0x71 ; pop rdi ; xchg eax, edi ; xchg esp, edi ; shr edx, cl ; ret
0x0000000000554a85 : mov r13d, 1 ; jmp 0x554a56
0x0000000000411eb6 : mov r13d, eax ; mov r14, rcx ; call r14
0x00000000004b8e3d : mov r14, qword ptr [rax] ; mov rdi, qword ptr [rax + 8] ; call rcx
0x00000000004b8ddd : mov r14, qword ptr [rax] ; mov rdi, qword ptr [rax + 8] ; call rdx
0x0000000000478252 : mov r14, qword ptr [rbx + 0x30] ; jmp qword ptr [rsi*8 + 0x57c258]
0x0000000000461848 : mov r14, r10 ; call r14
0x000000000043a5d5 : mov r14, r10 ; call rax
0x000000000048ff2f : mov r14, r9 ; call r14
0x00000000004c40a7 : mov r14, r9 ; call rax
0x0000000000467f47 : mov r14, rax ; mov rdi, rbp ; call 0x4641c8
0x0000000000411eb9 : mov r14, rcx ; call r14
0x00000000004fd216 : mov r14, rdi ; mov edi, ebx ; call 0x4e9497
0x00000000004fd215 : mov r14, rdi ; mov edi, ebx ; call 0x4e9498
0x000000000053fb93 : mov r14, rdi ; mov edx, ebp ; call rax
0x00000000004ef19f : mov r14b, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000047e00c : mov r15, r9 ; mov rbx, rcx ; call r15
0x0000000000478741 : mov r15, rcx ; jmp 0x47875e
0x00000000004d4774 : mov r15, rcx ; mov qword ptr [rsp + 0x50], rax ; call r15
0x00000000004c5b77 : mov r15, rdi ; mov rsi, rax ; mov rdx, r12 ; call rcx
0x00000000004df3ff : mov r15b, -8 ; dec dword ptr [rax - 0x77] ; ret
0x00000000004e76e1 : mov r8, qword ptr [rdi] ; mov rdi, rax ; jmp r9
0x000000000048fdcd : mov r8, qword ptr [rsp + 0x18] ; call r12
0x0000000000435a7a : mov r8, qword ptr [rsp + 0x18] ; call rax
0x00000000004902fd : mov r8, qword ptr [rsp + 0x18] ; mov r12, r10 ; call r12
0x0000000000422cff : mov r8, qword ptr [rsp + 8] ; call 0x4cefd7
0x00000000004a9d12 : mov r8, r12 ; call rax
0x00000000004d465b : mov r8, r13 ; call r9
0x00000000004d45c0 : mov r8, r13 ; mov r14, r9 ; call r14
0x00000000004669ce : mov r8, r13 ; mov r9d, r12d ; call 0x562ca8
0x00000000004614e2 : mov r8, r14 ; call r12
0x00000000004c587c : mov r8, r14 ; call r15
0x00000000004aa013 : mov r8, r14 ; call rax
0x0000000000461510 : mov r8, r14 ; mov r9, rax ; call r12
0x000000000051026d : mov r8, r14 ; mov r9, rbx ; call rax
0x00000000004638a4 : mov r8, r15 ; call rax
0x000000000048fe38 : mov r8, r15 ; mov qword ptr [rsp + 8], r10 ; call r10
0x000000000040f45f : mov r8, r15 ; mov r9, r13 ; call rax
0x0000000000435998 : mov r8, r9 ; mov r9, rax ; pop rbx ; pop rbp ; jmp r11
0x00000000004a1425 : mov r8, rax ; call r11
0x000000000055078b : mov r8, rbp ; call 0x459ef9
0x000000000049b4c6 : mov r8, rbp ; call r10
0x00000000004aa791 : mov r8, rbp ; call rax
0x0000000000403e7c : mov r8, rbp ; mov r9, r15 ; call rax
0x000000000047f2d1 : mov r8, rbx ; call r10
0x00000000004d0585 : mov r8, rbx ; call r12
0x000000000040cbab : mov r8, rbx ; mov r9, r12 ; call rax
0x00000000004c54d9 : mov r8, rbx ; mov rax, qword ptr [rsp + 0x40] ; call rax
0x00000000004c740c : mov r8, rbx ; pop rbx ; pop r14 ; pop rbp ; jmp rax
0x000000000059746a : mov r8b, 0x34 ; stc ; ret 0x1ede
0x0000000000402a35 : mov r8b, byte ptr [r10] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000440148 : mov r8d, 0x1af ; call 0x4cc378
0x00000000004b00cb : mov r8d, 0x292 ; call 0x4cc378
0x000000000054df6c : mov r8d, 0x54e6a0 ; call 0x4ea258
0x00000000004f00a8 : mov r8d, 0x57 ; call 0x4cc378
0x000000000043307d : mov r8d, 0x570f42 ; ret
0x0000000000432f3d : mov r8d, 0x5740bc ; ret
0x00000000005100d2 : mov r8d, 0x58 ; call 0x4cc378
0x00000000004f0113 : mov r8d, 0x6c ; call 0x4cc378
0x00000000004200bf : mov r8d, 0x72b ; call 0x4cc378
0x00000000004bc1b7 : mov r8d, 0x8948ffff ; ret
0x000000000050015f : mov r8d, 0x92 ; call 0x4cc378
0x00000000004079c7 : mov r8d, 1 ; mov r9, r12 ; call rax
0x0000000000407899 : mov r8d, 2 ; mov r9, r12 ; call rax
0x000000000041d073 : mov r8d, 2 ; mov r9, r15 ; call rax
0x00000000004086a7 : mov r8d, 2 ; mov r9, rbx ; call rax
0x000000000040dee2 : mov r8d, 3 ; mov r9, rbx ; call rax
0x0000000000407b83 : mov r8d, 4 ; mov r9, r12 ; call rax
0x000000000041ce87 : mov r8d, 4 ; mov r9, r15 ; call rax
0x00000000004e4343 : mov r8d, dword ptr [rcx + 0x21] ; ret
0x0000000000438e23 : mov r8d, r12d ; call rax
0x00000000004e60ee : mov r8d, r14d ; call rax
0x00000000004d4c2b : mov r9, qword ptr [rsi + rax] ; and bl, 0xf0 ; mov rdx, r8 ; jmp 0x4d4c49
0x000000000040789f : mov r9, r12 ; call rax
0x0000000000408568 : mov r9, r13 ; call rax
0x000000000040a56a : mov r9, r14 ; call rax
0x000000000040334d : mov r9, r15 ; call rax
0x0000000000461513 : mov r9, rax ; call r12
0x00000000004617b9 : mov r9, rax ; call r14
0x0000000000461a3a : mov r9, rax ; call r15
0x000000000043599b : mov r9, rax ; pop rbx ; pop rbp ; jmp r11
0x000000000041c662 : mov r9, rbp ; call rax
0x0000000000405b8f : mov r9, rbx ; call 0x404679
0x000000000040e8eb : mov r9, rbx ; call r10
0x00000000004047d6 : mov r9, rbx ; call rax
0x000000000045ccec : mov r9d, 0x20 ; mov rdi, r15 ; call rbx
0x0000000000461ed9 : mov r9d, 1 ; mov rdi, r14 ; call rax
0x0000000000461e59 : mov r9d, 1 ; mov rdi, r15 ; call rax
0x0000000000422b6c : mov r9d, 1 ; mov rdi, rbx ; call rax
0x00000000004669d1 : mov r9d, r12d ; call 0x562ca5
0x000000000049c9c4 : mov rax, -1 ; pop rdx ; ret
0x00000000004459e0 : mov rax, -1 ; ret
0x00000000004fd4ba : mov rax, qword ptr [r15 + 0x10] ; mov rdi, qword ptr [rax] ; call 0x4e96d9
0x0000000000495fa7 : mov rax, qword ptr [rax + 0x10] ; jmp rax
0x00000000004d0013 : mov rax, qword ptr [rax + 0x10] ; ret
0x00000000005044f0 : mov rax, qword ptr [rax + 0x10] ; test rax, rax ; je 0x504504 ; call rax
0x0000000000426643 : mov rax, qword ptr [rax + 0x110] ; ret
0x000000000049be24 : mov rax, qword ptr [rax + 0x18] ; jmp rax
0x0000000000558cf3 : mov rax, qword ptr [rax + 0x18] ; ret
0x000000000049cb11 : mov rax, qword ptr [rax + 0x18] ; test rax, rax ; je 0x49cb46 ; call rax
0x000000000053f6f8 : mov rax, qword ptr [rax + 0x18] ; test rax, rax ; je 0x53f736 ; jmp rax
0x000000000050ad74 : mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00000000004d02d3 : mov rax, qword ptr [rax + 0x20] ; mov ecx, ecx ; jmp rax
0x00000000004fda38 : mov rax, qword ptr [rax + 0x20] ; pop rbx ; ret
0x000000000048699a : mov rax, qword ptr [rax + 0x20] ; pop rdx ; ret
0x000000000049cb91 : mov rax, qword ptr [rax + 0x20] ; test rax, rax ; je 0x49cbc6 ; call rax
0x000000000053f6e4 : mov rax, qword ptr [rax + 0x20] ; test rax, rax ; je 0x53f736 ; jmp rax
0x0000000000565fc4 : mov rax, qword ptr [rax + 0x20] ; test rax, rax ; je 0x565fd8 ; jmp rax
0x00000000004371e8 : mov rax, qword ptr [rax + 0x258] ; ret
0x000000000043d583 : mov rax, qword ptr [rax + 0x260] ; ret
0x00000000004371ca : mov rax, qword ptr [rax + 0x268] ; ret
0x000000000048d979 : mov rax, qword ptr [rax + 0x28] ; pop rcx ; jmp rax
0x0000000000558ed3 : mov rax, qword ptr [rax + 0x28] ; ret
0x000000000043d5c3 : mov rax, qword ptr [rax + 0x2a0] ; ret
0x00000000005591ba : mov rax, qword ptr [rax + 0x30] ; mov rax, qword ptr [rax + 8] ; ret
0x000000000042be73 : mov rax, qword ptr [rax + 0x30] ; pop rcx ; jmp rax
0x000000000048df39 : mov rax, qword ptr [rax + 0x30] ; pop rdx ; jmp rax
0x0000000000484a0b : mov rax, qword ptr [rax + 0x30] ; ret
0x000000000053eba3 : mov rax, qword ptr [rax + 0x30] ; test rax, rax ; je 0x53ebbe ; call rax
0x000000000042bebc : mov rax, qword ptr [rax + 0x38] ; pop rcx ; jmp rax
0x0000000000559c19 : mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x559c2d ; jmp rax
0x000000000042bf2b : mov rax, qword ptr [rax + 0x40] ; pop rcx ; jmp rax
0x0000000000559c39 : mov rax, qword ptr [rax + 0x40] ; test rax, rax ; je 0x559c4d ; jmp rax
0x000000000048dfc9 : mov rax, qword ptr [rax + 0x48] ; pop rcx ; jmp rax
0x00000000004cef49 : mov rax, qword ptr [rax + 0x48] ; test rax, rax ; je 0x4cef9a ; call rax
0x0000000000559c59 : mov rax, qword ptr [rax + 0x48] ; test rax, rax ; je 0x559c6d ; jmp rax
0x00000000004f347e : mov rax, qword ptr [rax + 0x58] ; test rax, rax ; je 0x4f3492 ; jmp rax
0x00000000004f345e : mov rax, qword ptr [rax + 0x60] ; test rax, rax ; je 0x4f3472 ; jmp rax
0x000000000042ce49 : mov rax, qword ptr [rax + 0x68] ; jmp rax
0x00000000004f3559 : mov rax, qword ptr [rax + 0x78] ; test rax, rax ; je 0x4f356d ; jmp rax
0x000000000042c180 : mov rax, qword ptr [rax + 0x80] ; pop r8 ; jmp rax
0x000000000042c26d : mov rax, qword ptr [rax + 0x88] ; pop r8 ; jmp rax
0x000000000042c1d6 : mov rax, qword ptr [rax + 0xd8] ; jmp rax
0x000000000042c3b5 : mov rax, qword ptr [rax + 0xe0] ; jmp rax
0x00000000004e94fa : mov rax, qword ptr [rax + 8] ; add rsp, 0x38 ; ret
0x000000000049bda4 : mov rax, qword ptr [rax + 8] ; jmp rax
0x0000000000565052 : mov rax, qword ptr [rax + 8] ; mov qword ptr [rdx], rax ; ret
0x000000000042e3a1 : mov rax, qword ptr [rax + 8] ; ret
0x0000000000539b48 : mov rax, qword ptr [rax + rcx*8] ; mov dword ptr [rdi], ecx ; ret
0x00000000004576f2 : mov rax, qword ptr [rax*8 + 0x5772f0] ; ret
0x0000000000479aba : mov rax, qword ptr [rax*8 + 0x57c770] ; ret
0x000000000048f484 : mov rax, qword ptr [rax*8 + 0x582860] ; pop rbx ; ret
0x00000000004904c8 : mov rax, qword ptr [rax*8 + 0x582b80] ; ret
0x000000000053c16a : mov rax, qword ptr [rax*8 + 0x5d8850] ; ret
0x0000000000454af1 : mov rax, qword ptr [rax*8 + 0x81ebe0] ; pop rdx ; ret
0x00000000004e95be : mov rax, qword ptr [rax] ; add rsp, 0x38 ; ret
0x000000000054deec : mov rax, qword ptr [rax] ; add rsp, 0x78 ; ret
0x000000000042e381 : mov rax, qword ptr [rax] ; ret
0x000000000054b316 : mov rax, qword ptr [rax] ; test rax, rax ; je 0x54b32a ; pop rcx ; jmp rax
0x00000000004fda34 : mov rax, qword ptr [rbx + 0x20] ; mov rax, qword ptr [rax + 0x20] ; pop rbx ; ret
0x00000000004f3892 : mov rax, qword ptr [rbx + 0x20] ; pop rbx ; ret
0x000000000040d9f2 : mov rax, qword ptr [rbx + 0x78] ; mov eax, dword ptr [rax + 0x58] ; pop rbx ; ret
0x00000000004360a9 : mov rax, qword ptr [rbx + 8] ; mov eax, dword ptr [rax] ; mov dword ptr [rbx], eax ; pop rbx ; ret
0x00000000004848a1 : mov rax, qword ptr [rbx + 8] ; pop rbx ; ret
0x000000000048c2e4 : mov rax, qword ptr [rcx + 0x10] ; add rsp, 0x18 ; ret
0x000000000050ad80 : mov rax, qword ptr [rcx + 0x10] ; mov rax, qword ptr [rax + 0x10] ; jmp rax
0x000000000050ad60 : mov rax, qword ptr [rcx + 0x10] ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x000000000050ad70 : mov rax, qword ptr [rcx + 0x10] ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000050ad50 : mov rax, qword ptr [rcx + 0x10] ; mov rax, qword ptr [rax + 8] ; jmp rax
0x00000000004849ac : mov rax, qword ptr [rcx + 0x10] ; pop rbx ; ret
0x0000000000489a0c : mov rax, qword ptr [rcx + 0x28] ; pop rbx ; ret
0x00000000004da11a : mov rax, qword ptr [rcx + 0x38] ; pop rbx ; ret
0x0000000000426628 : mov rax, qword ptr [rcx + 0x3e0] ; ret
0x000000000049be20 : mov rax, qword ptr [rcx + 0x78] ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x000000000042ea75 : mov rax, qword ptr [rcx + 0x90] ; ret
0x000000000042ea95 : mov rax, qword ptr [rcx + 0x98] ; ret
0x00000000004cd20d : mov rax, qword ptr [rcx + 8] ; add rsp, 0x10 ; pop rbx ; ret
0x00000000004fcc85 : mov rax, qword ptr [rcx + 8] ; pop rdx ; ret
0x00000000004ed050 : mov rax, qword ptr [rcx + 8] ; ret
0x000000000042dad2 : mov rax, qword ptr [rcx + rax + 0x78] ; pop rdx ; ret
0x0000000000539c08 : mov rax, qword ptr [rcx + rax*8] ; ret
0x00000000004b6d23 : mov rax, qword ptr [rcx - 8] ; ret
0x000000000042e39e : mov rax, qword ptr [rcx] ; mov rax, qword ptr [rax + 8] ; ret
0x000000000042e37e : mov rax, qword ptr [rcx] ; mov rax, qword ptr [rax] ; ret
0x0000000000487867 : mov rax, qword ptr [rcx] ; pop rbx ; ret
0x000000000042ba23 : mov rax, qword ptr [rcx] ; ret
0x0000000000431910 : mov rax, qword ptr [rdi + 0x108] ; ret
0x000000000050ad97 : mov rax, qword ptr [rdi + 0x10] ; mov eax, dword ptr [rax + 0x48] ; ret
0x0000000000486118 : mov rax, qword ptr [rdi + 0x10] ; mov qword ptr [r8], rax ; ret
0x0000000000548370 : mov rax, qword ptr [rdi + 0x10] ; mov qword ptr [rdi + 0x10], rsi ; ret
0x00000000004fda75 : mov rax, qword ptr [rdi + 0x10] ; mov qword ptr [rsi], rax ; ret
0x0000000000429870 : mov rax, qword ptr [rdi + 0x10] ; ret
0x00000000004265f0 : mov rax, qword ptr [rdi + 0x110] ; ret
0x000000000042c337 : mov rax, qword ptr [rdi + 0x128] ; pop rdx ; ret
0x0000000000430580 : mov rax, qword ptr [rdi + 0x130] ; ret
0x000000000042b910 : mov rax, qword ptr [rdi + 0x148] ; ret
0x000000000042e360 : mov rax, qword ptr [rdi + 0x150] ; ret
0x000000000042e340 : mov rax, qword ptr [rdi + 0x170] ; ret
0x000000000042b940 : mov rax, qword ptr [rdi + 0x178] ; ret
0x000000000042e770 : mov rax, qword ptr [rdi + 0x180] ; ret
0x000000000042b210 : mov rax, qword ptr [rdi + 0x188] ; ret
0x000000000042b490 : mov rax, qword ptr [rdi + 0x18] ; ret
0x000000000042c14f : mov rax, qword ptr [rdi + 0x1b8] ; pop rdx ; ret
0x0000000000489ed9 : mov rax, qword ptr [rdi + 0x20] ; mov qword ptr [r8], rax ; ret
0x00000000004fda5d : mov rax, qword ptr [rdi + 0x20] ; mov qword ptr [rcx], rax ; ret
0x000000000042c1e0 : mov rax, qword ptr [rdi + 0x20] ; ret
0x00000000004974f0 : mov rax, qword ptr [rdi + 0x28] ; jmp rax
0x000000000042c318 : mov rax, qword ptr [rdi + 0x28] ; mov qword ptr [rdi + 0x28], rdx ; pop rdx ; ret
0x000000000042c322 : mov rax, qword ptr [rdi + 0x28] ; pop rdx ; ret
0x0000000000489ef0 : mov rax, qword ptr [rdi + 0x28] ; ret
0x00000000004089e0 : mov rax, qword ptr [rdi + 0x290] ; ret
0x00000000005007b0 : mov rax, qword ptr [rdi + 0x30] ; ret
0x0000000000560770 : mov rax, qword ptr [rdi + 0x38] ; mov dword ptr [rax + 8], esi ; ret
0x0000000000560780 : mov rax, qword ptr [rdi + 0x38] ; mov rax, qword ptr [rax + 0x10] ; ret
0x000000000049cc26 : mov rax, qword ptr [rdi + 0x38] ; pop rdx ; ret
0x0000000000461c17 : mov rax, qword ptr [rdi + 0x38] ; ret
0x000000000049cd96 : mov rax, qword ptr [rdi + 0x40] ; pop rdx ; ret
0x0000000000463b90 : mov rax, qword ptr [rdi + 0x40] ; ret
0x00000000004315d7 : mov rax, qword ptr [rdi + 0x48] ; mov qword ptr [rdi + 0x48], rsi ; ret
0x00000000004315e7 : mov rax, qword ptr [rdi + 0x48] ; ret
0x00000000004318b0 : mov rax, qword ptr [rdi + 0x50] ; ret
0x00000000004318d0 : mov rax, qword ptr [rdi + 0x58] ; ret
0x00000000004318f0 : mov rax, qword ptr [rdi + 0x60] ; ret
0x00000000004ca960 : mov rax, qword ptr [rdi + 0x68] ; ret
0x00000000004ca970 : mov rax, qword ptr [rdi + 0x70] ; ret
0x000000000049bdb0 : mov rax, qword ptr [rdi + 0x78] ; mov rax, qword ptr [rax + 0x10] ; jmp rax
0x00000000004899d0 : mov rax, qword ptr [rdi + 0x78] ; ret
0x00000000004ca990 : mov rax, qword ptr [rdi + 0x80] ; ret
0x00000000004cb4d0 : mov rax, qword ptr [rdi + 0x88] ; ret
0x00000000004cb4e0 : mov rax, qword ptr [rdi + 0x90] ; ret
0x00000000004cb4f0 : mov rax, qword ptr [rdi + 0x98] ; ret
0x00000000004ca9b0 : mov rax, qword ptr [rdi + 0xa0] ; ret
0x000000000055f430 : mov rax, qword ptr [rdi + 0xa8] ; ret
0x000000000042b220 : mov rax, qword ptr [rdi + 0xb0] ; ret
0x0000000000431930 : mov rax, qword ptr [rdi + 0xb8] ; ret
0x000000000055e300 : mov rax, qword ptr [rdi + 0xc0] ; ret
0x0000000000431547 : mov rax, qword ptr [rdi + 0xc8] ; ret
0x0000000000431557 : mov rax, qword ptr [rdi + 0xd0] ; ret
0x000000000055e360 : mov rax, qword ptr [rdi + 0xe0] ; ret
0x00000000004b8748 : mov rax, qword ptr [rdi + 0xe8] ; ret
0x0000000000486c77 : mov rax, qword ptr [rdi + 8] ; add rax, 0x30 ; ret
0x00000000004e91f0 : mov rax, qword ptr [rdi + 8] ; inc dword ptr [rax + 0x10] ; ret
0x0000000000486996 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x20] ; pop rdx ; ret
0x000000000042be6f : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x30] ; pop rcx ; jmp rax
0x0000000000484a07 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x30] ; ret
0x000000000042beb8 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x38] ; pop rcx ; jmp rax
0x000000000042bf27 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x40] ; pop rcx ; jmp rax
0x000000000042984a : mov rax, qword ptr [rdi + 8] ; ret
0x00000000004d01b0 : mov rax, qword ptr [rdi] ; mov eax, dword ptr [rax + 0xc] ; ret
0x00000000004d02c0 : mov rax, qword ptr [rdi] ; mov eax, dword ptr [rax + 4] ; ret
0x00000000004610d0 : mov rax, qword ptr [rdi] ; mov eax, dword ptr [rax] ; ret
0x000000000049c6d0 : mov rax, qword ptr [rdi] ; mov qword ptr [rdi], rsi ; ret
0x00000000004d0010 : mov rax, qword ptr [rdi] ; mov rax, qword ptr [rax + 0x10] ; ret
0x0000000000558cf0 : mov rax, qword ptr [rdi] ; mov rax, qword ptr [rax + 0x18] ; ret
0x00000000004d02d0 : mov rax, qword ptr [rdi] ; mov rax, qword ptr [rax + 0x20] ; mov ecx, ecx ; jmp rax
0x000000000048d976 : mov rax, qword ptr [rdi] ; mov rax, qword ptr [rax + 0x28] ; pop rcx ; jmp rax
0x0000000000558ed0 : mov rax, qword ptr [rdi] ; mov rax, qword ptr [rax + 0x28] ; ret
0x000000000048df36 : mov rax, qword ptr [rdi] ; mov rax, qword ptr [rax + 0x30] ; pop rdx ; jmp rax
0x000000000048dfc6 : mov rax, qword ptr [rdi] ; mov rax, qword ptr [rax + 0x48] ; pop rcx ; jmp rax
0x00000000004610c0 : mov rax, qword ptr [rdi] ; mov rax, qword ptr [rax + 8] ; ret
0x000000000046b006 : mov rax, qword ptr [rdi] ; mov rax, qword ptr [rax] ; ret
0x000000000042cb98 : mov rax, qword ptr [rdi] ; ret
0x000000000049bda0 : mov rax, qword ptr [rdx + 0x78] ; mov rax, qword ptr [rax + 8] ; jmp rax
0x0000000000568541 : mov rax, qword ptr [rdx + 8] ; mov qword ptr [rsi], rax ; ret
0x000000000055b650 : mov rax, qword ptr [rip + 0x2cfe89] ; ret
0x00000000004e5ba0 : mov rax, qword ptr [rip + 0x3412a9] ; jmp rax
0x00000000004e6660 : mov rax, qword ptr [rip + 0x347f61] ; ret
0x00000000004d0d54 : mov rax, qword ptr [rip + 0x35d2dd] ; pop rdx ; jmp qword ptr [rax]
0x00000000004d0c94 : mov rax, qword ptr [rip + 0x35d39d] ; pop rdx ; ret
0x00000000004cbf54 : mov rax, qword ptr [rip + 0x360515] ; pop rdx ; ret
0x00000000004abb0b : mov rax, qword ptr [rip + 0x3807ae] ; pop r8 ; jmp rax
0x00000000004abab3 : mov rax, qword ptr [rip + 0x380806] ; pop r8 ; jmp rax
0x000000000049c6b0 : mov rax, qword ptr [rip + 0x38f241] ; ret
0x000000000048f6c0 : mov rax, qword ptr [rip + 0x39c041] ; ret
0x000000000048f3a0 : mov rax, qword ptr [rip + 0x39c531] ; ret
0x000000000048f320 : mov rax, qword ptr [rip + 0x39c5a9] ; ret
0x000000000048f2a0 : mov rax, qword ptr [rip + 0x39c621] ; ret
0x000000000048f290 : mov rax, qword ptr [rip + 0x39c629] ; ret
0x000000000048f250 : mov rax, qword ptr [rip + 0x39c659] ; ret
0x000000000048f230 : mov rax, qword ptr [rip + 0x39c669] ; ret
0x000000000048f240 : mov rax, qword ptr [rip + 0x39c671] ; ret
0x0000000000443350 : mov rax, qword ptr [rip + 0x3db881] ; ret
0x00000000004298f6 : mov rax, qword ptr [rip + 0x401edb] ; pop rdx ; ret
0x0000000000566920 : mov rax, qword ptr [rsi + 0x28] ; mov qword ptr [rdi], rax ; ret
0x00000000004e8986 : mov rax, qword ptr [rsi + 8] ; mov rsi, qword ptr [rsi + 0x10] ; jmp rax
0x00000000004c54dc : mov rax, qword ptr [rsp + 0x40] ; call rax
0x0000000000540c58 : mov rax, qword ptr [rsp] ; pop rdx ; ret
0x0000000000561b29 : mov rax, r10 ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000448d2c : mov rax, r10 ; ret
0x00000000004e136a : mov rax, r10 ; shr rax, 0x10 ; sub r10, rax ; jmp 0x4e138b
0x00000000004e1465 : mov rax, r10 ; shr rax, 0x10 ; sub r10, rax ; jmp 0x4e1486
0x00000000005124f9 : mov rax, r11 ; ret
0x000000000042e721 : mov rax, r14 ; pop rbx ; pop r14 ; pop r15 ; ret
0x0000000000426586 : mov rax, r14 ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004cdbb1 : mov rax, r15 ; pop rbx ; pop r14 ; pop r15 ; ret
0x00000000004fc5bc : mov rax, rbp ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004595a6 : mov rax, rbx ; add rsp, 0x10 ; pop rbx ; ret
0x00000000004dec84 : mov rax, rbx ; add rsp, 0x20 ; pop rbx ; ret
0x00000000004f0200 : mov rax, rbx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000004b6fca : mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000048c145 : mov rax, rbx ; je 0x48c168 ; mov rdi, rbx ; call rcx
0x0000000000559b34 : mov rax, rbx ; je 0x559b57 ; mov rdi, rbx ; call rcx
0x000000000042ad54 : mov rax, rbx ; pop rbx ; pop r14 ; pop r15 ; ret
0x000000000046ae65 : mov rax, rbx ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004256b0 : mov rax, rbx ; pop rbx ; ret
0x00000000004cd34e : mov rax, rcx ; add rsp, 0x10 ; pop rbx ; ret
0x00000000004f4a5f : mov rax, rcx ; add rsp, 0x20 ; pop rbx ; ret
0x00000000004f4e55 : mov rax, rcx ; add rsp, 0x40 ; pop rbx ; ret
0x00000000004fff7e : mov rax, rcx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000005619b1 : mov rax, rcx ; pop rbx ; pop r14 ; pop r15 ; ret
0x00000000004ec12e : mov rax, rcx ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004e850e : mov rax, rcx ; pop rbx ; ret
0x00000000004065d7 : mov rax, rcx ; pop rdx ; ret
0x0000000000500ab8 : mov rax, rcx ; ret
0x00000000004d0b65 : mov rax, rdi ; pop rdx ; ret
0x000000000043070e : mov rax, rdi ; ret
0x0000000000472a04 : mov rax, rdx ; jg 0x4729e5 ; ret
0x000000000042c0d3 : mov rax, rdx ; pop rdx ; ret
0x0000000000539c2c : mov rax, rdx ; ret
0x0000000000540af2 : mov rax, rsi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004046c9 : mov rax, rsi ; ret
0x000000000047f4c9 : mov rbp, r8 ; mov r8, rbx ; call r10
0x00000000004c410c : mov rbp, r9 ; call rax
0x0000000000474a07 : mov rbp, rax ; ret
0x00000000004b820a : mov rbp, rdx ; call rcx
0x00000000004023da : mov rbp, rsp ; call rax
0x0000000000402340 : mov rbp, rsp ; ja 0x40234d ; pop rbp ; ret
0x000000000044977c : mov rbx, qword ptr [rax - 8] ; lea rsp, qword ptr [rax] ; ret
0x00000000004e31b3 : mov rbx, qword ptr [rbx + 8] ; call r12
0x0000000000483b48 : mov rbx, qword ptr [rcx + 0x28] ; lea rsp, qword ptr [rcx + 0x30] ; ret
0x0000000000445187 : mov rbx, qword ptr [rsi + 0x28] ; lea rsp, qword ptr [rsi + 0x30] ; ret
0x0000000000520182 : mov rbx, qword ptr [rsi - 8] ; lea rsp, qword ptr [rsi] ; ret
0x00000000004c5012 : mov rbx, qword ptr [rsp + 0x40] ; call rbx
0x0000000000411e2e : mov rbx, qword ptr [rsp + 0x70] ; mov rsi, rbx ; call r14
0x000000000053c668 : mov rbx, r8 ; call rbx
0x0000000000564e0f : mov rbx, r8 ; or rax, r9 ; ret
0x0000000000467f84 : mov rbx, rax ; mov rdi, rbp ; call 0x4641c8
0x000000000047e00f : mov rbx, rcx ; call r15
0x00000000004ca811 : mov rbx, rdi ; call qword ptr [rbx]
0x00000000004fd3c7 : mov rbx, rdi ; mov rdi, qword ptr [rbx + 0x18] ; call 0x4e96d9
0x000000000045506d : mov rcx, qword ptr [r9 + 0x10] ; mov qword ptr [r8], rcx ; ret
0x00000000005009e8 : mov rcx, qword ptr [rax + 0x10] ; mov qword ptr [rdi], rcx ; ret
0x00000000004ffb96 : mov rcx, qword ptr [rax + 0x28] ; mov rdi, rbx ; call rcx
0x00000000004ffcc6 : mov rcx, qword ptr [rax + 0x38] ; mov rdi, rbx ; call rcx
0x00000000004ccb8d : mov rcx, qword ptr [rax + rcx*8 + 0x50] ; mov rax, rcx ; pop rdx ; ret
0x00000000004ccd09 : mov rcx, qword ptr [rax + rdx*8 + 0x50] ; mov rax, rcx ; pop rdx ; ret
0x0000000000486964 : mov rcx, qword ptr [rcx + 0x10] ; mov qword ptr [rdx], rcx ; pop rdx ; ret
0x0000000000500ad2 : mov rcx, qword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0x500ad9 ; ret
0x0000000000485364 : mov rcx, qword ptr [rcx + 8] ; mov qword ptr [r9], rcx ; pop rdx ; ret
0x000000000054d8d4 : mov rcx, qword ptr [rcx + 8] ; mov qword ptr [rdx], rcx ; ret
0x00000000004ffdb3 : mov rcx, qword ptr [rdi + 0x40] ; mov eax, dword ptr [rcx + rax*4] ; ret
0x0000000000539c04 : mov rcx, qword ptr [rdi + 8] ; mov rax, qword ptr [rcx + rax*8] ; ret
0x00000000005517d2 : mov rcx, qword ptr [rsi + 0x60] ; test cl, 7 ; jne 0x5517c5 ; ret
0x0000000000551890 : mov rcx, qword ptr [rsi + 0x60] ; test cl, 7 ; jne 0x551883 ; ret
0x0000000000540803 : mov rcx, qword ptr [rsi + 8] ; mov eax, dword ptr [rax + rcx] ; ret
0x00000000004e8a80 : mov rcx, qword ptr [rsi + 8] ; mov qword ptr [rcx + rax*8], rdi ; ret
0x000000000046ad5a : mov rcx, qword ptr [rsi] ; mov qword ptr [r9], rcx ; pop rbx ; ret
0x0000000000429b45 : mov rcx, qword ptr [rsi] ; sub eax, dword ptr [rcx] ; ret
0x00000000004e81a2 : mov rcx, qword ptr [rsi] ; xor edi, edi ; mov rsi, r8 ; jmp rax
0x00000000004e81b4 : mov rcx, qword ptr [rsi] ; xor edx, edx ; mov rsi, r8 ; jmp rax
0x000000000045f126 : mov rcx, qword ptr [rsp + 0x10] ; call rax
0x00000000004d0580 : mov rcx, qword ptr [rsp + 0x18] ; mov r8, rbx ; call r12
0x0000000000489121 : mov rcx, qword ptr [rsp + 0x30] ; call rax
0x00000000004d4656 : mov rcx, qword ptr [rsp + 0x50] ; mov r8, r13 ; call r9
0x000000000053fade : mov rcx, qword ptr [rsp + 8] ; mov r8, rbp ; call rax
0x000000000051092b : mov rcx, r10 ; add rsp, 0x18 ; jmp rax
0x00000000004a1422 : mov rcx, r10 ; mov r8, rax ; call r11
0x0000000000428fc8 : mov rcx, r11 ; jmp 0x428ff4
0x000000000050eaa3 : mov rcx, r12 ; call 0x50ad85
0x000000000048a891 : mov rcx, r12 ; call rax
0x000000000043cf5f : mov rcx, r13 ; call 0x539185
0x00000000004a6e4f : mov rcx, r13 ; call rax
0x00000000004c502a : mov rcx, r13 ; call rbx
0x00000000004c5879 : mov rcx, r13 ; mov r8, r14 ; call r15
0x0000000000438e20 : mov rcx, r13 ; mov r8d, r12d ; call rax
0x000000000041c65f : mov rcx, r13 ; mov r9, rbp ; call rax
0x00000000004047d3 : mov rcx, r13 ; mov r9, rbx ; call rax
0x00000000004c500f : mov rcx, r13 ; mov rbx, qword ptr [rsp + 0x40] ; call rbx
0x00000000004c4622 : mov rcx, r14 ; call rax
0x000000000040f710 : mov rcx, r14 ; mov r8, r15 ; mov r9, r13 ; call rax
0x0000000000404902 : mov rcx, r14 ; mov r9, rbx ; call rax
0x0000000000461d83 : mov rcx, r15 ; call r8
0x000000000051026a : mov rcx, r15 ; mov r8, r14 ; mov r9, rbx ; call rax
0x00000000004e60eb : mov rcx, r15 ; mov r8d, r14d ; call rax
0x00000000004f99d4 : mov rcx, r15 ; test r12, r12 ; je 0x4f99ea ; call r12
0x000000000049b4c3 : mov rcx, r8 ; mov r8, rbp ; call r10
0x00000000004ab8db : mov rcx, r8 ; pop r8 ; jmp rax
0x00000000005005ff : mov rcx, r9 ; call r10
0x00000000004c40a4 : mov rcx, r9 ; mov r14, r9 ; call rax
0x00000000004c4109 : mov rcx, r9 ; mov rbp, r9 ; call rax
0x00000000004cf912 : mov rcx, rax ; call r8
0x00000000004065d4 : mov rcx, rax ; mov rax, rcx ; pop rdx ; ret
0x000000000042feea : mov rcx, rbp ; call 0x42c1f5
0x0000000000500f7c : mov rcx, rbp ; call r12
0x000000000048a0b4 : mov rcx, rbp ; call rax
0x00000000004c5895 : mov rcx, rbp ; mov r8, r14 ; call r15
0x000000000040c0da : mov rcx, rbp ; mov r9, r12 ; call rax
0x0000000000408565 : mov rcx, rbp ; mov r9, r13 ; call rax
0x000000000041c9c8 : mov rcx, rbp ; mov r9, r15 ; call rax
0x0000000000406c27 : mov rcx, rbp ; mov r9, rbx ; call rax
0x00000000004c535f : mov rcx, rbx ; call r14
0x0000000000484931 : mov rcx, rbx ; call r8
0x0000000000461a6d : mov rcx, rbx ; call rax
0x000000000040f45c : mov rcx, rbx ; mov r8, r15 ; mov r9, r13 ; call rax
0x0000000000403e79 : mov rcx, rbx ; mov r8, rbp ; mov r9, r15 ; call rax
0x000000000040ca1a : mov rcx, rbx ; mov r9, r12 ; call rax
0x000000000040ac35 : mov rcx, rbx ; mov r9, r14 ; call rax
0x00000000004cfae2 : mov rcx, rbx ; pop rbx ; pop r14 ; pop r15 ; jmp rax
0x0000000000501460 : mov rcx, rbx ; test rax, rax ; je 0x50148b ; call rax
0x000000000053f065 : mov rdi, qword ptr [r12] ; call rax
0x00000000004ed3f9 : mov rdi, qword ptr [r15] ; call 0x4e96d5
0x00000000004b8e40 : mov rdi, qword ptr [rax + 8] ; call rcx
0x00000000004b8de0 : mov rdi, qword ptr [rax + 8] ; call rdx
0x00000000004e8a45 : mov rdi, qword ptr [rax + rbp*8] ; mov rsi, r14 ; call rbx
0x00000000004fd4be : mov rdi, qword ptr [rax] ; call 0x4e96d5
0x00000000004fd3ca : mov rdi, qword ptr [rbx + 0x18] ; call 0x4e96d6
0x0000000000545313 : mov rdi, qword ptr [rbx + 8] ; call 0x4415f6
0x00000000004e84f7 : mov rdi, qword ptr [rbx + 8] ; call qword ptr [rax]
0x000000000054d506 : mov rdi, qword ptr [rbx + 8] ; xor esi, esi ; call 0x4e97d8
0x00000000004e31b0 : mov rdi, qword ptr [rbx] ; mov rbx, qword ptr [rbx + 8] ; call r12
0x00000000004fd6db : mov rdi, qword ptr [rbx] ; mov rsi, r14 ; call 0x539988
0x000000000054b3b2 : mov rdi, qword ptr [rdi + 0x30] ; jmp rax
0x0000000000461bfc : mov rdi, qword ptr [rdi + 0x38] ; test rdi, rdi ; jne 0x461bf9 ; ret
0x00000000004b8d92 : mov rdi, qword ptr [rdi] ; test rdi, rdi ; jne 0x4b8d88 ; ret
0x000000000045a018 : mov rdi, qword ptr [rsp + 0x18] ; call 0x4e6317
0x0000000000435b43 : mov rdi, qword ptr [rsp + 0x20] ; call rax
0x000000000044082b : mov rdi, qword ptr [rsp] ; mov rsi, r14 ; call r15
0x0000000000407190 : mov rdi, r12 ; call qword ptr [rax]
0x000000000040bcdf : mov rdi, r12 ; call r14
0x000000000040b24f : mov rdi, r12 ; call r15
0x000000000041fc34 : mov rdi, r12 ; call rax
0x000000000043f319 : mov rdi, r12 ; call rbx
0x0000000000442d17 : mov rdi, r12 ; lea rsi, qword ptr [rsp + 0x46] ; call r15
0x000000000040cf92 : mov rdi, r12 ; mov edx, ebp ; call r14
0x000000000040b3ae : mov rdi, r12 ; mov edx, r14d ; call r15
0x00000000004fdbbf : mov rdi, r12 ; mov rcx, r13 ; call rbx
0x00000000004b8c1d : mov rdi, r12 ; mov rcx, rbx ; call r8
0x000000000048e4fe : mov rdi, r12 ; mov rsi, qword ptr [rsp + 0x38] ; call rcx
0x00000000004d4a54 : mov rdi, r12 ; mov rsi, r13 ; call r15
0x000000000053f07b : mov rdi, r12 ; mov rsi, r15 ; call rax
0x00000000004c4fb9 : mov rdi, r12 ; mov rsi, rbp ; mov rcx, r13 ; call rax
0x00000000004341a0 : mov rdi, r13 ; call 0x4d03f5
0x000000000046a0ec : mov rdi, r13 ; call 0x4e6315
0x00000000004d78f5 : mov rdi, r13 ; call 0x4f3b15
0x00000000004084df : mov rdi, r13 ; call qword ptr [rax]
0x000000000040ee37 : mov rdi, r13 ; call r14
0x000000000043ea0f : mov rdi, r13 ; call r15
0x00000000004101b0 : mov rdi, r13 ; call rbx
0x00000000004101f8 : mov rdi, r13 ; mov edx, r14d ; call rbx
0x00000000004c461f : mov rdi, r13 ; mov rcx, r14 ; call rax
0x00000000004d4b24 : mov rdi, r13 ; mov rsi, r12 ; call r15
0x0000000000490554 : mov rdi, r13 ; mov rsi, r12 ; mov edx, r15d ; call rax
0x00000000004c3d6e : mov rdi, r13 ; mov rsi, r12 ; mov rcx, rbx ; call rax
0x000000000046efb0 : mov rdi, r13 ; mov rsi, r14 ; call rbx
0x00000000004c2ff8 : mov rdi, r13 ; mov rsi, rbx ; mov rcx, r12 ; call rax
0x0000000000545ed5 : mov rdi, r14 ; call 0x402175
0x0000000000405164 : mov rdi, r14 ; call 0x411375
0x00000000004fe8b9 : mov rdi, r14 ; call 0x460f49
0x0000000000434152 : mov rdi, r14 ; call 0x4d0395
0x000000000054bd72 : mov rdi, r14 ; call 0x539b89
0x00000000004ecbcb : mov rdi, r14 ; call 0x558ed5
0x0000000000426e60 : mov rdi, r14 ; call 0x5683b9
0x000000000040504e : mov rdi, r14 ; call r12
0x00000000004396d1 : mov rdi, r14 ; call rax
0x000000000040ac07 : mov rdi, r14 ; call rcx
0x0000000000405a8e : mov rdi, r14 ; mov edx, r15d ; call r12
0x000000000041e785 : mov rdi, r14 ; mov esi, eax ; mov rdx, rcx ; call rbx
0x00000000004a6e4c : mov rdi, r14 ; mov rcx, r13 ; call rax
0x0000000000438e1d : mov rdi, r14 ; mov rcx, r13 ; mov r8d, r12d ; call rax
0x0000000000461a6a : mov rdi, r14 ; mov rcx, rbx ; call rax
0x0000000000461a06 : mov rdi, r14 ; mov rdx, rbx ; call r15
0x000000000043a764 : mov rdi, r14 ; mov rsi, r10 ; mov edx, r8d ; call rax
0x0000000000442db7 : mov rdi, r14 ; mov rsi, r12 ; call r15
0x000000000055050e : mov rdi, r14 ; mov rsi, r12 ; call rax
0x000000000048fcee : mov rdi, r14 ; mov rsi, r14 ; call r12
0x0000000000430e73 : mov rdi, r14 ; mov rsi, r15 ; mov edx, ebp ; call rax
0x00000000005484a4 : mov rdi, r14 ; mov rsi, rax ; call rbx
0x00000000005679b1 : mov rdi, r14 ; mov rsi, rbp ; call rax
0x0000000000567ae0 : mov rdi, r14 ; mov rsi, rbx ; call rax
0x00000000004b8ef9 : mov rdi, r14 ; mov rsi, rbx ; call rcx
0x00000000004adf7b : mov rdi, r14 ; mov rsi, rcx ; mov edx, eax ; call rbx
0x00000000004098e8 : mov rdi, r14 ; mov rsi, rdx ; mov rdx, rcx ; call rax
0x000000000055d53d : mov rdi, r14 ; test rax, rax ; je 0x55d58b ; call rax
0x000000000046ed0c : mov rdi, r15 ; call 0x46b015
0x0000000000404608 : mov rdi, r15 ; call 0x500905
0x000000000055d6d1 : mov rdi, r15 ; call 0x539be9
0x000000000041caaf : mov rdi, r15 ; call qword ptr [rax]
0x000000000043e3b4 : mov rdi, r15 ; call r14
0x0000000000461e5f : mov rdi, r15 ; call rax
0x000000000041d0c3 : mov rdi, r15 ; call rbx
0x00000000004aa06b : mov rdi, r15 ; mov r8, r14 ; call rax
0x00000000004b8207 : mov rdi, r15 ; mov rbp, rdx ; call rcx
0x000000000053f564 : mov rdi, r15 ; mov rsi, r12 ; call rax
0x00000000004219ae : mov rdi, r15 ; mov rsi, r12 ; mov rdx, r14 ; call rbx
0x00000000004313de : mov rdi, r15 ; mov rsi, r14 ; call rax
0x000000000046bc5e : mov rdi, r15 ; mov rsi, r15 ; mov rdx, rbx ; call rcx
0x000000000054a52b : mov rdi, rax ; call 0x456825
0x000000000047bbc0 : mov rdi, rax ; call 0x4e7ff9
0x000000000047bd3f : mov rdi, rax ; call 0x4e8045
0x0000000000441920 : mov rdi, rax ; call rbx
0x00000000004e76e4 : mov rdi, rax ; jmp r9
0x000000000042cb95 : mov rdi, rax ; mov rax, qword ptr [rdi] ; ret
0x000000000048492e : mov rdi, rax ; mov rcx, rbx ; call r8
0x000000000042c728 : mov rdi, rax ; mov rsi, r13 ; call r15
0x00000000004419aa : mov rdi, rax ; mov rsi, r14 ; call rbx
0x0000000000441a3e : mov rdi, rax ; mov rsi, r15 ; call rbx
0x000000000047bd73 : mov rdi, rax ; pop rax ; jmp 0x4e8046
0x00000000004adef2 : mov rdi, rax ; pop rax ; jmp rcx
0x000000000054598a : mov rdi, rbp ; call 0x461c25
0x0000000000467f3f : mov rdi, rbp ; call 0x4641c5
0x0000000000467f7b : mov rdi, rbp ; call 0x4641c6
0x00000000004df0b1 : mov rdi, rbp ; call 0x46b375
0x000000000041c60f : mov rdi, rbp ; call qword ptr [rax]
0x00000000004903ec : mov rdi, rbp ; mov rdx, rbx ; call r10
0x0000000000411e68 : mov rdi, rbp ; mov rsi, rbx ; call r14
0x00000000005537ba : mov rdi, rbx ; call 0x401d37
0x0000000000472799 : mov rdi, rbx ; call 0x46b019
0x000000000046f068 : mov rdi, rbx ; call 0x46b325
0x00000000004db6ab : mov rdi, rbx ; call 0x4b7905
0x000000000049e617 : mov rdi, rbx ; call 0x4ca865
0x000000000049e62c : mov rdi, rbx ; call 0x4ca8a5
0x000000000049e695 : mov rdi, rbx ; call 0x4ca8e5
0x000000000049e680 : mov rdi, rbx ; call 0x4ca8f5
0x000000000049e6aa : mov rdi, rbx ; call 0x4ca905
0x000000000049e6bf : mov rdi, rbx ; call 0x4ca915
0x000000000049e6d4 : mov rdi, rbx ; call 0x4ca935
0x00000000004f3f12 : mov rdi, rbx ; call 0x4d01b5
0x00000000004432d6 : mov rdi, rbx ; call r14
0x00000000004086f0 : mov rdi, rbx ; call rax
0x0000000000416272 : mov rdi, rbx ; call rcx
0x000000000054a9d1 : mov rdi, rbx ; jmp 0x54a99d
0x000000000046178a : mov rdi, rbx ; mov ecx, ebp ; call r14
0x00000000004614dd : mov rdi, rbx ; mov ecx, ebp ; mov r8, r14 ; call r12
0x00000000004617b4 : mov rdi, rbx ; mov ecx, ebp ; mov r9, rax ; call r14
0x00000000004617e9 : mov rdi, rbx ; mov esi, ebp ; call rax
0x0000000000461548 : mov rdi, rbx ; mov esi, ebp ; mov rdx, r14 ; call rax
0x0000000000461845 : mov rdi, rbx ; mov r14, r10 ; call r14
0x00000000004ff887 : mov rdi, rbx ; mov rcx, r14 ; call rax
0x0000000000461d80 : mov rdi, rbx ; mov rcx, r15 ; call r8
0x000000000042fee7 : mov rdi, rbx ; mov rcx, rbp ; call 0x42c1f8
0x0000000000461b30 : mov rdi, rbx ; mov rcx, rbx ; call rax
0x00000000004aa78b : mov rdi, rbx ; mov rdx, r13 ; mov r8, rbp ; call rax
0x00000000004612d8 : mov rdi, rbx ; mov rdx, r14 ; call r15
0x00000000004606a5 : mov rdi, rbx ; mov rdx, r14 ; call rax
0x000000000047f135 : mov rdi, rbx ; mov rdx, r15 ; call r14
0x00000000004a9d0c : mov rdi, rbx ; mov rdx, r8 ; mov r8, r12 ; call rax
0x0000000000461acc : mov rdi, rbx ; mov rdx, rbx ; call r12
0x000000000043ad66 : mov rdi, rbx ; mov rsi, qword ptr [rsp + 0x20] ; call rax
0x000000000054ad8f : mov rdi, rbx ; mov rsi, r13 ; mov rdx, r15 ; call rax
0x000000000054ae7e : mov rdi, rbx ; mov rsi, r13 ; mov rdx, r15 ; call rcx
0x0000000000429ba8 : mov rdi, rbx ; mov rsi, r14 ; call qword ptr [rax]
0x00000000004d095d : mov rdi, rbx ; mov rsi, r14 ; call rax
0x000000000053b633 : mov rdi, rbx ; mov rsi, r15 ; mov rdx, r14 ; call rax
0x000000000041ef1a : mov rdi, rbx ; mov rsi, rax ; mov edx, r13d ; call rcx
0x0000000000443209 : mov rdi, rbx ; mov rsi, rbp ; call r14
0x000000000043cde8 : mov rdi, rbx ; mov rsi, rbp ; call rax
0x000000000046bde7 : mov rdi, rbx ; mov rsi, rbx ; mov rdx, rbp ; call rcx
0x00000000004ae01a : mov rdi, rbx ; mov rsi, rcx ; mov edx, eax ; call rbp
0x000000000048f340 : mov rdi, rbx ; pop rbx ; jmp rax
0x00000000004b8625 : mov rdi, rcx ; mov rsi, rbx ; call rdx
0x00000000005485a6 : mov rdi, rdx ; call rax
0x0000000000486a31 : mov rdx, qword ptr [r10 + 8] ; mov qword ptr [rcx], rdx ; pop rdx ; ret
0x00000000004f3368 : mov rdx, qword ptr [r8 + 0x10] ; mov qword ptr [rcx], rdx ; ret
0x00000000004ed807 : mov rdx, qword ptr [r8 + 0x18] ; mov qword ptr [rcx], rdx ; ret
0x0000000000484ebf : mov rdx, qword ptr [rdi + 0x10] ; mov qword ptr [rcx], rdx ; pop rdx ; ret
0x0000000000488e50 : mov rdx, qword ptr [rdx + 8] ; mov qword ptr [rcx], rdx ; ret
0x00000000004bc6cf : mov rdx, qword ptr [rsp + 0x10] ; call rax
0x000000000047df46 : mov rdx, qword ptr [rsp + 0x70] ; call r12
0x000000000048ff5c : mov rdx, qword ptr [rsp + 8] ; call r14
0x00000000005506a7 : mov rdx, qword ptr [rsp + 8] ; mov ecx, r15d ; call rax
0x00000000004c3a99 : mov rdx, qword ptr [rsp] ; mov rcx, r13 ; call rax
0x00000000004a0171 : mov rdx, r10 ; mov r9, rax ; call r14
0x00000000004bc4c0 : mov rdx, r12 ; call 0x4b8785
0x00000000004d34cb : mov rdx, r12 ; call r15
0x000000000045f532 : mov rdx, r12 ; call rax
0x00000000004c5b7d : mov rdx, r12 ; call rcx
0x00000000004c557c : mov rdx, r12 ; mov rcx, rbx ; call r14
0x00000000005613fb : mov rdx, r13 ; call 0x4cd6a5
0x000000000053fc5a : mov rdx, r13 ; call r14
0x000000000053c33d : mov rdx, r13 ; call rbx
0x00000000004d160e : mov rdx, r13 ; mov ecx, ebp ; call rax
0x00000000004aa78e : mov rdx, r13 ; mov r8, rbp ; call rax
0x000000000053c665 : mov rdx, r13 ; mov rbx, r8 ; call rbx
0x00000000004c540d : mov rdx, r13 ; mov rcx, rbx ; call r14
0x00000000004612db : mov rdx, r14 ; call r15
0x00000000004606a8 : mov rdx, r14 ; call rax
0x00000000004219b4 : mov rdx, r14 ; call rbx
0x000000000046ba1e : mov rdx, r14 ; pop rbx ; pop r14 ; pop r15 ; jmp rax
0x00000000004d0ecf : mov rdx, r14 ; pop rbx ; pop r14 ; pop rbp ; jmp rax
0x000000000047dc1b : mov rdx, r15 ; call r12
0x000000000047f138 : mov rdx, r15 ; call r14
0x000000000053eef1 : mov rdx, r15 ; call rax
0x0000000000472586 : mov rdx, r15 ; call rcx
0x00000000004e5eca : mov rdx, r15 ; mov ecx, r14d ; call rax
0x000000000047efd6 : mov rdx, r15 ; mov qword ptr [rsp + 0x28], r8 ; call r14
0x000000000045f123 : mov rdx, r15 ; mov rcx, qword ptr [rsp + 0x10] ; call rax
0x00000000004c5c45 : mov rdx, r15 ; mov rcx, r12 ; call rax
0x00000000004c3b13 : mov rdx, r15 ; mov rcx, r13 ; call rax
0x00000000004c5027 : mov rdx, r15 ; mov rcx, r13 ; call rbx
0x00000000004cb56a : mov rdx, r15 ; mov rcx, r14 ; call rax
0x00000000004c40a1 : mov rdx, r15 ; mov rcx, r9 ; mov r14, r9 ; call rax
0x00000000004c4106 : mov rdx, r15 ; mov rcx, r9 ; mov rbp, r9 ; call rax
0x00000000004d4c32 : mov rdx, r8 ; jmp 0x4d4c42
0x00000000004a9d0f : mov rdx, r8 ; mov r8, r12 ; call rax
0x000000000043ed90 : mov rdx, rax ; call 0x46b095
0x000000000042d743 : mov rdx, rax ; jmp 0x42d74d
0x000000000047105b : mov rdx, rax ; jmp 0x471062
0x0000000000538ecb : mov rdx, rax ; jmp 0x538ee5
0x000000000042e862 : mov rdx, rax ; jmp rcx
0x0000000000404cbd : mov rdx, rax ; sar rdx, 3 ; inc rdx ; jmp 0x404ce8
0x000000000047ee67 : mov rdx, rbp ; call r14
0x000000000047f098 : mov rdx, rbp ; call r15
0x000000000046bded : mov rdx, rbp ; call rcx
0x00000000004aa1cb : mov rdx, rbp ; mov r8, r14 ; call rax
0x00000000004ae78a : mov rdx, rbp ; mov r8, r15 ; call rax
0x0000000000415c62 : mov rdx, rbx ; call 0x401f45
0x00000000004903ef : mov rdx, rbx ; call r10
0x0000000000461acf : mov rdx, rbx ; call r12
0x0000000000461a09 : mov rdx, rbx ; call r15
0x000000000046bc64 : mov rdx, rbx ; call rcx
0x000000000046111f : mov rdx, rbx ; mov ecx, r14d ; call r15
0x00000000004aa010 : mov rdx, rbx ; mov r8, r14 ; call rax
0x0000000000461afd : mov rdx, rbx ; mov r9, rax ; call r12
0x0000000000461a37 : mov rdx, rbx ; mov r9, rax ; call r15
0x000000000043cf5c : mov rdx, rbx ; mov rcx, r13 ; call 0x539188
0x000000000047e2ca : mov rdx, rcx ; call r9
0x00000000004098ee : mov rdx, rcx ; call rax
0x000000000041e78a : mov rdx, rcx ; call rbx
0x00000000004ab8d8 : mov rdx, rcx ; mov rcx, r8 ; pop r8 ; jmp rax
0x000000000046f808 : mov rdx, rcx ; pop rcx ; jmp rax
0x0000000000561c38 : mov rdx, rdi ; div qword ptr [rsp - 8] ; ret
0x00000000004df0ae : mov rsi, qword ptr [rax] ; mov rdi, rbp ; call 0x46b378
0x00000000004e898a : mov rsi, qword ptr [rsi + 0x10] ; jmp rax
0x00000000004c5e22 : mov rsi, qword ptr [rsp + 0x18] ; mov rdx, r12 ; call rax
0x000000000043ad69 : mov rsi, qword ptr [rsp + 0x20] ; call rax
0x000000000053fc55 : mov rsi, qword ptr [rsp + 0x20] ; mov rdx, r13 ; call r14
0x000000000046fd77 : mov rsi, qword ptr [rsp + 0x28] ; call rax
0x000000000048e501 : mov rsi, qword ptr [rsp + 0x38] ; call rcx
0x000000000053c338 : mov rsi, qword ptr [rsp + 0x48] ; mov rdx, r13 ; call rbx
0x000000000045f52d : mov rsi, qword ptr [rsp + 8] ; mov rdx, r12 ; call rax
0x000000000043a767 : mov rsi, r10 ; mov edx, r8d ; call rax
0x0000000000442dba : mov rsi, r12 ; call r15
0x000000000053f567 : mov rsi, r12 ; call rax
0x0000000000490557 : mov rsi, r12 ; mov edx, r15d ; call rax
0x00000000004c3d71 : mov rsi, r12 ; mov rcx, rbx ; call rax
0x00000000004d160b : mov rsi, r12 ; mov rdx, r13 ; mov ecx, ebp ; call rax
0x00000000004219b1 : mov rsi, r12 ; mov rdx, r14 ; call rbx
0x000000000053eeee : mov rsi, r12 ; mov rdx, r15 ; call rax
0x00000000004cb567 : mov rsi, r12 ; mov rdx, r15 ; mov rcx, r14 ; call rax
0x0000000000415c5f : mov rsi, r12 ; mov rdx, rbx ; call 0x401f48
0x000000000042c72b : mov rsi, r13 ; call r15
0x00000000004c53f1 : mov rsi, r13 ; mov rcx, rbx ; call r14
0x000000000048ff59 : mov rsi, r13 ; mov rdx, qword ptr [rsp + 8] ; call r14
0x000000000054ad92 : mov rsi, r13 ; mov rdx, r15 ; call rax
0x000000000054ae81 : mov rsi, r13 ; mov rdx, r15 ; call rcx
0x00000000004aa1c8 : mov rsi, r13 ; mov rdx, rbp ; mov r8, r14 ; call rax
0x00000000004fd6de : mov rsi, r14 ; call 0x539985
0x0000000000429bab : mov rsi, r14 ; call qword ptr [rax]
0x000000000048fcf1 : mov rsi, r14 ; call r12
0x000000000044082f : mov rsi, r14 ; call r15
0x00000000004313e1 : mov rsi, r14 ; call rax
0x00000000004419ad : mov rsi, r14 ; call rbx
0x00000000004d34c8 : mov rsi, r14 ; mov rdx, r12 ; call r15
0x00000000004c41b2 : mov rsi, r14 ; mov rdx, r14 ; call rax
0x000000000047dc18 : mov rsi, r14 ; mov rdx, r15 ; call r12
0x00000000004cff89 : mov rsi, r14 ; pop rbx ; pop r14 ; pop rbp ; jmp rax
0x000000000053f07e : mov rsi, r15 ; call rax
0x0000000000441a41 : mov rsi, r15 ; call rbx
0x0000000000430e76 : mov rsi, r15 ; mov edx, ebp ; call rax
0x00000000004c4f20 : mov rsi, r15 ; mov rcx, r13 ; call rax
0x00000000004bc6cc : mov rsi, r15 ; mov rdx, qword ptr [rsp + 0x10] ; call rax
0x000000000053b636 : mov rsi, r15 ; mov rdx, r14 ; call rax
0x00000000004c5c42 : mov rsi, r15 ; mov rdx, r15 ; mov rcx, r12 ; call rax
0x00000000004c3b10 : mov rsi, r15 ; mov rdx, r15 ; mov rcx, r13 ; call rax
0x00000000004c5024 : mov rsi, r15 ; mov rdx, r15 ; mov rcx, r13 ; call rbx
0x000000000046bc61 : mov rsi, r15 ; mov rdx, rbx ; call rcx
0x00000000004cbed3 : mov rsi, r8 ; jmp r9
0x00000000004e81a7 : mov rsi, r8 ; jmp rax
0x00000000005484a7 : mov rsi, rax ; call rbx
0x000000000040238f : mov rsi, rax ; mov edi, 0x82b700 ; jmp rdx
0x000000000041ef1d : mov rsi, rax ; mov edx, r13d ; call rcx
0x00000000004c5b7a : mov rsi, rax ; mov rdx, r12 ; call rcx
0x00000000004ce356 : mov rsi, rax ; mov rdx, r14 ; call r15
0x000000000044320c : mov rsi, rbp ; call r14
0x000000000043cdeb : mov rsi, rbp ; call rax
0x00000000004c4fbc : mov rsi, rbp ; mov rcx, r13 ; call rax
0x00000000004aa00d : mov rsi, rbp ; mov rdx, rbx ; mov r8, r14 ; call rax
0x000000000046f09a : mov rsi, rbx ; call 0x46b325
0x0000000000411e33 : mov rsi, rbx ; call r14
0x0000000000431829 : mov rsi, rbx ; call rax
0x00000000004b8efc : mov rsi, rbx ; call rcx
0x00000000004b8628 : mov rsi, rbx ; call rdx
0x00000000004c2f7a : mov rsi, rbx ; je 0x4c2fb6 ; mov rcx, r12 ; call rax
0x00000000004442df : mov rsi, rbx ; mov qword ptr [rdx], rsi ; mov eax, edi ; pop rbx ; ret
0x000000000050eaa0 : mov rsi, rbx ; mov rcx, r12 ; call 0x50ad88
0x00000000004c2ffb : mov rsi, rbx ; mov rcx, r12 ; call rax
0x000000000047df43 : mov rsi, rbx ; mov rdx, qword ptr [rsp + 0x70] ; call r12
0x00000000004bc4bd : mov rsi, rbx ; mov rdx, r12 ; call 0x4b8788
0x000000000046bdea : mov rsi, rbx ; mov rdx, rbp ; call rcx
0x000000000055e965 : mov rsi, rbx ; pop rbx ; pop r14 ; pop r15 ; jmp rax
0x00000000004977f5 : mov rsi, rbx ; pop rbx ; pop r14 ; pop r15 ; jmp rcx
0x000000000053f76a : mov rsi, rbx ; pop rbx ; pop r14 ; pop rbp ; jmp rax
0x0000000000503fe9 : mov rsi, rcx ; jne 0x503fd9 ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004ae01d : mov rsi, rcx ; mov edx, eax ; call rbp
0x00000000004adf7e : mov rsi, rcx ; mov edx, eax ; call rbx
0x0000000000471058 : mov rsi, rcx ; mov rdx, rax ; jmp 0x471065
0x00000000004aa68f : mov rsi, rdi ; mov r8, r14 ; call rax
0x00000000004638a1 : mov rsi, rdi ; mov r8, r15 ; call rax
0x000000000047f169 : mov rsi, rdi ; mov rdx, r15 ; call r14
0x0000000000472583 : mov rsi, rdi ; mov rdx, r15 ; call rcx
0x000000000047ee64 : mov rsi, rdi ; mov rdx, rbp ; call r14
0x000000000047f0e4 : mov rsi, rdi ; mov rdx, rbp ; call r15
0x00000000004098eb : mov rsi, rdx ; mov rdx, rcx ; call rax
0x0000000000617854 : mov sil, 2 ; add al, cl ; out -0xc, al ; call qword ptr [rax]
0x00000000005ede94 : mov word ptr [rax + rax], ds ; add al, bh ; mov bh, -0x1e ; jmp qword ptr [rdx]
0x00000000004a58e3 : mov word ptr [rax + rax], es ; mov eax, 1 ; pop rdx ; ret
0x0000000000593c42 : mov word ptr [rax - 0x30], cs ; ret 0xfb9
0x0000000000605294 : mov word ptr [rax - 0x4d07ffff], ss ; in eax, dx ; jmp rax
0x00000000004d75ca : mov word ptr [rax], es ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000042c2be : mov word ptr [rax], es ; add byte ptr [rax], al ; pop rdx ; ret
0x0000000000419661 : mov word ptr [rax], es ; add byte ptr [rax], al ; ret
0x00000000005b3d7a : mov word ptr [rax], fs ; rol dword ptr [rsi*8 - 0x5f11bcdb], cl ; ret
0x000000000050df3f : mov word ptr [rax], ss ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4820
0x0000000000514d37 : mov word ptr [rax], ss ; lea ecx, dword ptr [rcx + rdx*4] ; ret
0x00000000005fee94 : mov word ptr [rcx + rax], gs ; add byte ptr [rax + 0x31], bl ; jmp 0x5feea2
0x0000000000601694 : mov word ptr [rcx + rax], ss ; sub byte ptr [rsi - 0x14], ch ; call qword ptr [rsi]
0x0000000000617394 : mov word ptr [rcx - 0x1af7fffe], dr0 ; hlt ; call qword ptr [rsi]
0x00000000005a6c93 : mov word ptr [rcx - 0x30], ds ; rol bh, -0x57 ; mov dl, 0x58 ; ret
0x00000000005fdb94 : mov word ptr [rcx], ds ; add dword ptr [rax], eax ; ret
0x000000000040d560 : mov word ptr [rcx], es ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005ec394 : mov word ptr [rcx], es ; add byte ptr [rax], al ; call 0x275ea508
0x00000000005783ca : mov word ptr [rcx], es ; out dx, eax ; fnsave dword ptr [rdx] ; ret
0x0000000000603994 : mov word ptr [rdi + 1], dr0 ; add byte ptr [rax], bl ; adc ch, ch ; jmp qword ptr [rcx]
0x00000000005b2ea8 : mov word ptr [rdi - 0x16ce7fba], ds ; ret 0xa287
0x00000000005a74e0 : mov word ptr [rdi - 0x27], ds ; sbb eax, 0xda4fc7b5 ; push rbp ; ret 0xcea5
0x000000000057e51c : mov word ptr [rdi - 0x53], gs ; adc eax, 0x66626c1c ; ret 0x7154
0x00000000005ae79d : mov word ptr [rdi - 0x69], fs ; ret
0x0000000000578d80 : mov word ptr [rdx + 0x6ae402fb], cs ; ret
0x0000000000612494 : mov word ptr [rdx + 2], fs ; add byte ptr [rax - 0x78], cl ; call qword ptr [rdx]
0x00000000005b6895 : mov word ptr [rdx - 0x41d0a4f7], cs ; cmp dh, cl ; ret
0x00000000005a75d5 : mov word ptr [rdx - 0x58], fs ; push rsi ; push rsi ; lodsb al, byte ptr [rsi] ; pushfq ; ret 0x9c69
0x00000000004d7af5 : mov word ptr [rdx], es ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005e8691 : mov word ptr [rdx], es ; add byte ptr [rax], al ; push rcx ; int1 ; jmp rax
0x00000000005a1026 : mov word ptr [rip + 0x5de91ef7], dr0 ; ret
0x00000000005983b7 : mov word ptr [rip - 0x60ae2af2], es ; ret 0xe1a9
0x000000000058d59a : mov word ptr [rsi + 0x31], es ; jmp 0x58d602
0x000000000059a797 : mov word ptr [rsi + 0x44], ss ; ret 0x7461
0x0000000000617094 : mov word ptr [rsi - 0x1bf7fffe], gs ; hlt ; call qword ptr [rsi]
0x00000000005b6b75 : mov word ptr [rsi - 0x46c54733], dr1 ; ret
0x00000000004636fc : mov word ptr [rsi], es ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000403969 : mov word ptr [rsp + rdx*4], fs ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; stc ; call rax
0x00000000005a1025 : mov word ptr ds:[rip + 0x5de91ef7], dr0 ; ret
0x00000000005e67bc : movabs al, byte ptr [0x1000021270ffeec1] ; ret 0xffee
0x00000000004ca933 : movabs al, byte ptr [0x1b8000000] ; ret
0x00000000004e01dc : movabs al, byte ptr [0x1b8000002] ; ret
0x00000000005e67cc : movabs al, byte ptr [0x20000212a0ffeec2] ; ret
0x00000000005b50ed : movabs al, byte ptr [0x4299552f00cbaddd] ; ret
0x000000000049e6bb : movabs al, byte ptr [0x49e8df89480049ec] ; ret 2
0x00000000005a5c29 : movabs al, byte ptr [0x4bfbc89442014d89] ; ret 0x5ef0
0x000000000049e6a6 : movabs al, byte ptr [0x4ee8df89480049ea] ; ret 2
0x000000000042dfce : movabs al, byte ptr [0x56f0aeb800572b] ; ret
0x0000000000431f87 : movabs al, byte ptr [0x5735cbb8000005] ; ret
0x0000000000432387 : movabs al, byte ptr [0x573ccbb8000001] ; ret
0x00000000004ce9ed : movabs al, byte ptr [0x5a00000000000000] ; ret
0x000000000049dd22 : movabs al, byte ptr [0x5f415e415b000000] ; ret
0x000000000057e5ca : movabs al, byte ptr [0x63519bfd1606f238] ; ret
0x00000000005e2854 : movabs al, byte ptr [0xb000010770ffe5c3] ; ret
0x00000000005eaa94 : movabs al, byte ptr [0xb000031c40fff6c3] ; ret
0x000000000046f064 : movabs al, byte ptr [0xb0e8df89480057ac] ; ret 0xffff
0x0000000000578c1b : movabs al, byte ptr [0xbcc7d1f6e01cc87e] ; ret
0x00000000005e280c : movabs al, byte ptr [0xc000010698ffe5c2] ; ret 0xffe5
0x0000000000518cf6 : movabs al, byte ptr [0xef0f66d4fe0f4466] ; ret 0x4166
0x000000000058dec0 : movabs byte ptr [0x4d58089446fecc08], al ; ret 0x91b2
0x00000000005043c4 : movabs byte ptr [0x5b00000001b80032], al ; ret
0x00000000005a9cd1 : movabs byte ptr [0x67b199c56aee9032], al ; ret
0x00000000005a0aab : movabs byte ptr [0x6b8fe4c7a0f45f17], al ; ret 0xf0d2
0x00000000005b13ce : movabs byte ptr [0x8659c3f091d9aa14], al ; ret
0x00000000005a5e34 : movabs byte ptr [0x956af259cb47d402], al ; ret 0x4551
0x00000000004d6922 : movabs byte ptr [0xaac268c726c6e4c4], al ; ret
0x00000000005d6cf8 : movabs byte ptr [0xd234340430a82a8a], al ; ret 0xd012
0x00000000005d74fa : movabs byte ptr [0xd2d012043034348a], al ; ret 0x80b
0x00000000005a2c66 : movabs byte ptr [0xde68ddecd5c1da1d], al ; ret
0x00000000005a1ddf : movabs byte ptr [0xeb911ecfe469b17a], al ; ret 0x2d3e
0x00000000005acb61 : movabs dword ptr [0x1a5456b3b871effe], eax ; ret 0x6df0
0x0000000000447599 : movabs dword ptr [0x1d165f40a3c25f40], eax ; ret
0x000000000044759d : movabs dword ptr [0x1d1672c31d165f40], eax ; ret
0x000000000047bcf9 : movabs dword ptr [0x3be8c78948000676], eax ; ret
0x00000000005b1bb6 : movabs dword ptr [0x412057c36eda1f9d], eax ; ret
0x00000000005b6232 : movabs dword ptr [0x4ae980d936bf1986], eax ; ret
0x00000000005b3825 : movabs dword ptr [0x4d7c641fcb56c65e], eax ; ret 0x5767
0x0000000000542e4a : movabs dword ptr [0x580274c08548fff8], eax ; ret
0x00000000005d70fb : movabs dword ptr [0x61602141d1d415c5], eax ; ret
0x0000000000578cb2 : movabs dword ptr [0x7632d8c5be71204b], eax ; ret
0x00000000004e6969 : movabs dword ptr [0x950fdb8548fffff9], eax ; ret
0x0000000000403850 : movabs dword ptr [0x950fe4854d000001], eax ; ret
0x00000000005729e0 : movabs dword ptr [0xa9000000000042c2], eax ; ret 0x42
0x00000000005980d6 : movabs dword ptr [0xc3a8e9a768638151], eax ; ret
0x000000000054169b : movabs eax, dword ptr [0x30478b4890fff8a6] ; ret
0x00000000005a6571 : movabs eax, dword ptr [0x4be0e8018980f889] ; ret 0xe976
0x0000000000536b38 : movabs eax, dword ptr [0xc141c689446ed9eb] ; ret 0x8b1e
0x0000000000536b6c : movabs eax, dword ptr [0xc141ce89446ed9eb] ; ret
0x00000000005d6fc3 : movabs eax, dword ptr [0xd2d416c681840585] ; ret
0x0000000000578ae6 : movabs eax, dword ptr [0xeb9e150564f0bd03] ; ret
0x00000000005b6323 : movaps xmm1, xmmword ptr [rbx] ; sbb byte ptr [rbx + 0x6c], dh ; ret 0xeeb6
0x000000000044d38f : movd dword ptr [r9 + 0x10], mm1 ; ret
0x000000000044d38e : movd dword ptr [r9 + 0x10], xmm9 ; ret
0x000000000044d390 : movd dword ptr [rcx + 0x10], mm1 ; ret
0x000000000052040f : movd dword ptr [rdi + 0x10], mm1 ; ret
0x000000000052040e : movd dword ptr [rdi + 0x10], xmm1 ; ret
0x00000000005175d7 : movd esi, mm4 ; ret
0x0000000000595961 : movd mm6, dword ptr [rcx + 0x20] ; adc byte ptr [rbx - 0x74], al ; ret 0xc095
0x00000000005552f6 : movdqa xmm0, xmm6 ; movhlps xmm6, xmm1 ; ret
0x000000000055564a : movdqa xmm14, xmmword ptr [r10 + 0x60] ; ret
0x00000000005553b8 : movdqa xmm7, xmm0 ; ret
0x0000000000474550 : movdqa xmm7, xmmword ptr [r11 + 0x50] ; ret
0x0000000000555614 : movdqu xmmword ptr [r8], xmm6 ; ret
0x00000000004518a3 : movdqu xmmword ptr [r9 + 0x10], xmm2 ; ret
0x000000000048c274 : movdqu xmmword ptr [rbx + 0x18], xmm0 ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000048c204 : movdqu xmmword ptr [rbx + 8], xmm0 ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000562b64 : movdqu xmmword ptr [rdi + 0x10], xmm0 ; ret
0x000000000052d477 : movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000004beb4b : movdqu xmmword ptr [rdi + 0x30], xmm5 ; ret
0x00000000004d5761 : movdqu xmmword ptr [rdi + 0x50], xmm4 ; ret
0x00000000004bea95 : movdqu xmmword ptr [rdi + 0x50], xmm7 ; ret
0x00000000004d5824 : movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000004e1bc4 : movdqu xmmword ptr [rdi], xmm2 ; pop rbx ; pop r14 ; pop r15 ; ret
0x00000000005554e3 : movdqu xmmword ptr [rdx], xmm3 ; ret
0x000000000055556e : movdqu xmmword ptr [rsi], xmm0 ; ret
0x00000000005552fa : movhlps xmm6, xmm1 ; ret
0x00000000004f50fd : movhlps xmm7, xmm7 ; lcall ptr [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0x00000000005552f7 : movq mm0, mm6 ; movhlps xmm6, xmm1 ; ret
0x000000000055564b : movq mm6, qword ptr [r10 + 0x60] ; ret
0x000000000055564c : movq mm6, qword ptr [rdx + 0x60] ; ret
0x00000000005553b9 : movq mm7, mm0 ; ret
0x0000000000474551 : movq mm7, qword ptr [r11 + 0x50] ; ret
0x0000000000474552 : movq mm7, qword ptr [rbx + 0x50] ; ret
0x0000000000555615 : movq qword ptr [r8], mm6 ; ret
0x00000000004518a4 : movq qword ptr [r9 + 0x10], mm2 ; ret
0x0000000000555616 : movq qword ptr [rax], mm6 ; ret
0x000000000048c275 : movq qword ptr [rbx + 0x18], mm0 ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000048c205 : movq qword ptr [rbx + 8], mm0 ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004518a5 : movq qword ptr [rcx + 0x10], mm2 ; ret
0x0000000000562b65 : movq qword ptr [rdi + 0x10], mm0 ; ret
0x000000000052d478 : movq qword ptr [rdi + 0x10], mm2 ; ret
0x00000000004beb4c : movq qword ptr [rdi + 0x30], mm5 ; ret
0x00000000004d5762 : movq qword ptr [rdi + 0x50], mm4 ; ret
0x00000000004bea96 : movq qword ptr [rdi + 0x50], mm7 ; ret
0x000000000052040b : movq qword ptr [rdi], mm0 ; movd dword ptr [rdi + 0x10], xmm1 ; ret
0x00000000004d5825 : movq qword ptr [rdi], mm0 ; ret
0x000000000052d474 : movq qword ptr [rdi], mm1 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x0000000000562b61 : movq qword ptr [rdi], mm2 ; movdqu xmmword ptr [rdi + 0x10], xmm0 ; ret
0x00000000004e1bc5 : movq qword ptr [rdi], mm2 ; pop rbx ; pop r14 ; pop r15 ; ret
0x00000000005554e4 : movq qword ptr [rdx], mm3 ; ret
0x000000000055556f : movq qword ptr [rsi], mm0 ; ret
0x000000000049be1a : movsb byte ptr [rdi], byte ptr [rsi] ; add al, 0 ; pop rbx ; ret
0x00000000005ec4ac : movsb byte ptr [rdi], byte ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax], dh ; jo 0x5ec49b ; jmp qword ptr [rdx]
0x000000000047d516 : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0x8949
0x00000000004bc3e8 : movsb byte ptr [rdi], byte ptr [rsi] ; add qword ptr [rax], r8 ; xor eax, eax ; pop rbx ; ret
0x00000000005636ae : movsb byte ptr [rdi], byte ptr [rsi] ; and al, 0 ; add dword ptr [rax], eax ; add byte ptr [rsi + 0xf], ah ; jmp 0x563684
0x0000000000563712 : movsb byte ptr [rdi], byte ptr [rsi] ; and al, 0 ; add dword ptr [rax], eax ; add byte ptr [rsi + 0xf], ah ; jmp 0x5636e8
0x0000000000563814 : movsb byte ptr [rdi], byte ptr [rsi] ; and al, 0 ; add dword ptr [rax], eax ; add byte ptr [rsi + 0xf], ah ; jmp 0x5637ea
0x0000000000563cf9 : movsb byte ptr [rdi], byte ptr [rsi] ; and al, 0 ; add dword ptr [rax], eax ; add byte ptr [rsi + 0xf], ah ; jmp 0x563ccf
0x0000000000562c4f : movsb byte ptr [rdi], byte ptr [rsi] ; and al, 0xffffffffffffff88 ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000005aae4f : movsb byte ptr [rdi], byte ptr [rsi] ; call qword ptr [rdi]
0x0000000000543068 : movsb byte ptr [rdi], byte ptr [rsi] ; cli ; dec dword ptr [rax - 0x77] ; ret 0xf6be
0x00000000005b33c0 : movsb byte ptr [rdi], byte ptr [rsi] ; cmp bl, byte ptr [rip + 0x7e2c2e42] ; ret
0x00000000005ffaac : movsb byte ptr [rdi], byte ptr [rsi] ; cmp byte ptr [rcx], al ; add byte ptr [rax - 0x80], ah ; jmp 0x5ffaba
0x000000000059775d : movsb byte ptr [rdi], byte ptr [rsi] ; cmp dword ptr [rbp - 0x31], esp ; jg 0x5977a5 ; ret
0x00000000005b2b16 : movsb byte ptr [rdi], byte ptr [rsi] ; cmp dword ptr [rbp - 0x59], edi ; ret
0x00000000005efdac : movsb byte ptr [rdi], byte ptr [rsi] ; cmp eax, dword ptr [rax] ; add byte ptr [rax], ah ; out -0x1d, al ; call qword ptr [rsi]
0x000000000059c4e8 : movsb byte ptr [rdi], byte ptr [rsi] ; cmp eax, ebx ; xor eax, 0xfd90d0ad ; ret 0x9661
0x0000000000489ad8 : movsb byte ptr [rdi], byte ptr [rsi] ; dec byte ptr [rdx] ; add byte ptr [rbp - 0xef8b40], al ; ret
0x0000000000608aac : movsb byte ptr [rdi], byte ptr [rsi] ; enter 1, 0x20 ; push -0x12 ; jmp qword ptr [rdi]
0x0000000000609eac : movsb byte ptr [rdi], byte ptr [rsi] ; fadd qword ptr [rcx] ; add al, ah ; ret 0xffee
0x00000000005d4fce : movsb byte ptr [rdi], byte ptr [rsi] ; in al, dx ; ret 0x41e0
0x000000000044cb0a : movsb byte ptr [rdi], byte ptr [rsi] ; in eax, dx ; add eax, 0xfe6941c4 ; ret 0xf201
0x00000000005b092f : movsb byte ptr [rdi], byte ptr [rsi] ; in eax, dx ; ret
0x0000000000596732 : movsb byte ptr [rdi], byte ptr [rsi] ; jge 0x5966dc ; ret 0xaeee
0x000000000059df32 : movsb byte ptr [rdi], byte ptr [rsi] ; jne 0x59df6b ; ret 0xc109
0x000000000059df31 : movsb byte ptr [rdi], byte ptr [rsi] ; jne 0x59df6c ; ret 0xc109
0x000000000059df30 : movsb byte ptr [rdi], byte ptr [rsi] ; jne 0x59df6d ; ret 0xc109
0x000000000044ca1a : movsb byte ptr [rdi], byte ptr [rsi] ; leave ; add eax, 0xfe7941c4 ; ret 0xf301
0x00000000005a2ffe : movsb byte ptr [rdi], byte ptr [rsi] ; movsd dword ptr [rdi], dword ptr [rsi] ; pop rdx ; loop 0x5a3068 ; ret
0x0000000000596bee : movsb byte ptr [rdi], byte ptr [rsi] ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x4e1c
0x00000000004546b6 : movsb byte ptr [rdi], byte ptr [rsi] ; nop ; lea rsp, qword ptr [rbp] ; pop rbp ; ret
0x00000000005a6290 : movsb byte ptr [rdi], byte ptr [rsi] ; or eax, 0xe5ca1881 ; ret 0x995d
0x0000000000483d30 : movsb byte ptr [rdi], byte ptr [rsi] ; or eax, dword ptr [rax] ; add rsp, 0x38 ; ret
0x00000000005b0d88 : movsb byte ptr [rdi], byte ptr [rsi] ; or ebp, dword ptr [rbx + 0x55] ; xchg bh, cl ; ret
0x00000000006116ac : movsb byte ptr [rdi], byte ptr [rsi] ; push rsp ; add al, byte ptr [rax] ; jo 0x611706 ; jmp rdx
0x0000000000577dfd : movsb byte ptr [rdi], byte ptr [rsi] ; push rsp ; jnp 0x577dbc ; pop rcx ; pop rdx ; ret 0xd539
0x0000000000446e12 : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000005df298 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x55
0x00000000005937f8 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x9591
0x0000000000593df3 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x9a5b
0x0000000000596734 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xaeee
0x000000000044ca8c : movsb byte ptr [rdi], byte ptr [rsi] ; rol byte ptr [rip - 0x18ebe3c], cl ; ret 0xf101
0x00000000006170ac : movsb byte ptr [rdi], byte ptr [rsi] ; scasb al, byte ptr [rdi] ; add al, byte ptr [rax] ; adc ah, ah ; hlt ; call qword ptr [rsi]
0x0000000000598431 : movsb byte ptr [rdi], byte ptr [rsi] ; std ; xlatb ; push rcx ; push rax ; ret
0x00000000005b24ef : movsb byte ptr [rdi], byte ptr [rsi] ; sub eax, 0x57e9c835 ; ret
0x00000000005a3fe3 : movsb byte ptr [rdi], byte ptr [rsi] ; xchg eax, ebx ; and al, 0xffffffffffffffa5 ; ret 0x33c5
0x000000000058e363 : movsb byte ptr [rdi], byte ptr [rsi] ; xchg eax, edi ; in eax, -0x2b ; ret 0x7870
0x00000000005a9e79 : movsb byte ptr [rdi], byte ptr [rsi] ; xchg rax, r12 ; ret
0x00000000005d6bce : movsb byte ptr [rdi], byte ptr es:[rsi] ; ret
0x00000000005a9e78 : movsb byte ptr [rdi], byte ptr ss:[rsi] ; xchg rax, r12 ; ret
0x00000000005e8ca9 : movsd dword ptr [rdi], dword ptr [rsi] ; add al, byte ptr [rax] ; and al, bl ; int1 ; jmp qword ptr [rax]
0x000000000042c286 : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; cdqe ; pop rdx ; ret
0x000000000057cda2 : movsd dword ptr [rdi], dword ptr [rsi] ; cwde ; and eax, 0x9d5648f7 ; push rsi ; pop rsi ; call rax
0x00000000006168d9 : movsd dword ptr [rdi], dword ptr [rsi] ; hlt ; call qword ptr [rax]
0x00000000004ef3a5 : movsd dword ptr [rdi], dword ptr [rsi] ; idiv bh ; pop rbx ; ret
0x0000000000594d89 : movsd dword ptr [rdi], dword ptr [rsi] ; jle 0x594dce ; insb byte ptr [rdi], dx ; ret
0x00000000005b5293 : movsd dword ptr [rdi], dword ptr [rsi] ; jns 0x5b5227 ; ret
0x00000000005391a7 : movsd dword ptr [rdi], dword ptr [rsi] ; lodsb al, byte ptr [rsi] ; dec dword ptr [rax - 0x77] ; ret
0x00000000005b29ad : movsd dword ptr [rdi], dword ptr [rsi] ; mov dword ptr [rbx - 0x3f90d47a], ecx ; ret
0x000000000055f647 : movsd dword ptr [rdi], dword ptr [rsi] ; movsd dword ptr [rdi], dword ptr [rsi] ; std ; dec dword ptr [rax - 0x77] ; ret 0x758b
0x00000000006097e9 : movsd dword ptr [rdi], dword ptr [rsi] ; out dx, al ; jmp qword ptr [rdi]
0x00000000005a0556 : movsd dword ptr [rdi], dword ptr [rsi] ; pop rax ; std ; pop rax ; push rsp ; std ; ret
0x00000000005a2fff : movsd dword ptr [rdi], dword ptr [rsi] ; pop rdx ; loop 0x5a3067 ; ret
0x00000000005a8f56 : movsd dword ptr [rdi], dword ptr [rsi] ; push -0x2d ; jnp 0x5a8f2c ; push rcx ; pop rdx ; ret 0xd378
0x000000000057d825 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000000005a3fe6 : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x33c5
0x00000000004b00a7 : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x37
0x0000000000596bef : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x4e1c
0x00000000005990f2 : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x903
0x00000000005b0a3f : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xcec9
0x000000000058c90a : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xeec8
0x000000000055f648 : movsd dword ptr [rdi], dword ptr [rsi] ; std ; dec dword ptr [rax - 0x77] ; ret 0x758b
0x0000000000598f29 : movsd dword ptr [rdi], dword ptr [rsi] ; sti ; outsb dx, byte ptr [rsi] ; mov ah, 0x19 ; jmp rcx
0x00000000005a17b3 : movsd dword ptr [rdi], dword ptr [rsi] ; stosd dword ptr [rdi], eax ; mov dh, 0x57 ; mov esp, 0xa7c1baa ; ret
0x000000000057cf94 : movsd dword ptr [rdi], dword ptr [rsi] ; wait ; loope 0x57cfc4 ; push rdx ; ret 0xd5a6
0x00000000004324da : movsd dword ptr [rdi], dword ptr [rsi] ; xor dl, byte ptr [rdi] ; ret
0x000000000042c096 : movsxd rax, dword ptr [rax + 0x2a8] ; pop rdx ; ret
0x0000000000479ea9 : movsxd rax, dword ptr [rbx] ; pop rbx ; pop r14 ; pop r15 ; ret
0x000000000042c135 : movsxd rax, dword ptr [rcx + 0x4a4] ; pop rdx ; ret
0x000000000042c300 : movsxd rax, dword ptr [rdi + 0x138] ; pop rdx ; ret
0x000000000049c9d9 : movsxd rax, dword ptr [rdi + 0x14] ; pop rdx ; ret
0x000000000042c328 : movsxd rax, dword ptr [rdi + 0x40] ; mov dword ptr [rdi + 0x40], edx ; pop rdx ; ret
0x000000000042c331 : movsxd rax, dword ptr [rdi + 0x40] ; pop rdx ; ret
0x000000000042c297 : movsxd rax, dword ptr [rdi + 0x68] ; pop rdx ; ret
0x000000000042c2a3 : movsxd rax, dword ptr [rdi + 0x6c] ; pop rdx ; ret
0x000000000042c29d : movsxd rax, dword ptr [rdi + 0x70] ; pop rdx ; ret
0x000000000042c2a9 : movsxd rax, dword ptr [rdi + 0x74] ; pop rdx ; ret
0x000000000042c2b5 : movsxd rax, dword ptr [rdi + 0x78] ; pop rdx ; ret
0x000000000042c2af : movsxd rax, dword ptr [rdi + 0x7c] ; pop rdx ; ret
0x000000000042c2cd : movsxd rax, dword ptr [rdi + 0x80] ; pop rdx ; ret
0x000000000042c2d6 : movsxd rax, dword ptr [rdi + 0x84] ; pop rdx ; ret
0x000000000042c2df : movsxd rax, dword ptr [rdi + 0x88] ; pop rdx ; ret
0x000000000042c2bb : movsxd rax, dword ptr [rdi + 0x8c] ; pop rdx ; ret
0x000000000042c19e : movsxd rax, dword ptr [rdi + 0x90] ; pop rdx ; ret
0x000000000040dbc6 : movsxd rax, dword ptr [rdi + 0xa8] ; ret
0x00000000004cbee0 : movsxd rax, dword ptr [rdi] ; ret
0x000000000057d821 : movsxd rax, edi ; and ah, bh ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000000004360ce : movsxd rax, edi ; mov eax, dword ptr [rax*4 + 0x574cf0] ; ret
0x00000000004d0403 : movsxd rax, esi ; and qword ptr [rdi + 0x10], rax ; ret
0x00000000004d0433 : movsxd rax, esi ; and qword ptr [rdi + 0x70], rax ; ret
0x00000000004ffdb1 : movsxd rax, esi ; mov rcx, qword ptr [rdi + 0x40] ; mov eax, dword ptr [rcx + rax*4] ; ret
0x00000000004d03f1 : movsxd rax, esi ; or qword ptr [rdi + 0x10], rax ; ret
0x00000000004d0421 : movsxd rax, esi ; or qword ptr [rdi + 0x70], rax ; ret
0x00000000004f4bd3 : movsxd rax, esi ; shl rax, 5 ; add rax, qword ptr [rdi] ; ret
0x00000000005aa1c8 : movsxd rcx, eax ; jnp 0x5aa1fc ; ret
0x000000000043ea44 : movsxd rdx, eax ; lea rsi, qword ptr [rsp] ; xor edi, edi ; call r14
0x0000000000578307 : movsxd rdx, edx ; ret
0x000000000059ddc5 : movsxd rdx, esi ; cmp byte ptr [r9 + rdi*8 - 0x19], dl ; mov ah, 0x2d ; ret
0x00000000005e94a5 : movsxd rsi, ebx ; call rax
0x00000000005ea555 : movsxd rsi, esi ; call qword ptr [rax]
0x0000000000615979 : movsxd rsi, esp ; jmp qword ptr [rcx]
0x00000000005aeb91 : movsxd rsp, dword ptr [rax] ; push rbx ; ret 0x6202
0x00000000005a6ed4 : movsxd rsp, dword ptr [rdx + 0x439a43a9] ; ret
0x00000000005ec329 : movsxd rsp, ecx ; call qword ptr [rax]
0x000000000048f380 : movups xmm0, xmmword ptr [rsi] ; movups xmmword ptr [rdi], xmm0 ; ret
0x0000000000452599 : movups xmmword ptr [r9], xmm3 ; ret
0x0000000000463e75 : movups xmmword ptr [rax + 0x10], xmm0 ; movups xmmword ptr [rax], xmm0 ; pop rdx ; ret
0x0000000000429f2b : movups xmmword ptr [rax + 0x18], xmm0 ; movups xmmword ptr [rax + 8], xmm0 ; pop rdx ; ret
0x00000000004569c8 : movups xmmword ptr [rax + 8], xmm0 ; pop rbx ; ret
0x0000000000429f2f : movups xmmword ptr [rax + 8], xmm0 ; pop rdx ; ret
0x0000000000463e79 : movups xmmword ptr [rax], xmm0 ; pop rdx ; ret
0x00000000005466ac : movups xmmword ptr [rbx + 0x10], xmm0 ; movups xmmword ptr [rbx], xmm0 ; pop rbx ; ret
0x00000000004bd37c : movups xmmword ptr [rbx + 0xd0], xmm0 ; pop rbx ; ret
0x000000000055e689 : movups xmmword ptr [rbx + 0xe8], xmm0 ; pop rbx ; ret
0x00000000004976a3 : movups xmmword ptr [rbx], xmm0 ; mov eax, 1 ; pop rbx ; ret
0x00000000005466b0 : movups xmmword ptr [rbx], xmm0 ; pop rbx ; ret
0x000000000045259a : movups xmmword ptr [rcx], xmm3 ; ret
0x00000000004972b7 : movups xmmword ptr [rdi + 0x10], xmm0 ; movups xmmword ptr [rdi], xmm0 ; ret
0x000000000042a03f : movups xmmword ptr [rdi + 0x28], xmm0 ; ret
0x00000000004ca67a : movups xmmword ptr [rdi + 0x68], xmm0 ; ret
0x00000000004ca676 : movups xmmword ptr [rdi + 0x78], xmm0 ; movups xmmword ptr [rdi + 0x68], xmm0 ; ret
0x0000000000454716 : movups xmmword ptr [rdi], xmm0 ; add rsp, 8 ; ret
0x000000000048f383 : movups xmmword ptr [rdi], xmm0 ; ret
0x00000000004524d4 : movups xmmword ptr [rsi + 0x40], xmm6 ; movups xmmword ptr [rsi + 0x50], xmm7 ; ret
0x00000000004524d8 : movups xmmword ptr [rsi + 0x50], xmm7 ; ret
0x0000000000453e85 : movups xmmword ptr [rsi], xmm2 ; lea rsp, qword ptr [rbp] ; pop rbp ; ret
0x00000000004518ec : movups xmmword ptr [rsi], xmm2 ; ret
0x0000000000495536 : movzx eax, al ; add eax, eax ; pop rbx ; ret
0x0000000000566f92 : movzx eax, al ; add eax, eax ; pop rdx ; ret
0x000000000045cf06 : movzx eax, al ; add rsp, 0x10 ; pop rbx ; ret
0x00000000004ae070 : movzx eax, al ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000004db0ba : movzx eax, al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000441760 : movzx eax, al ; lea eax, dword ptr [rax + rax*2 + 0x13] ; ret
0x00000000004590ab : movzx eax, al ; movzx ecx, cl ; sub eax, ecx ; ret
0x0000000000463a0c : movzx eax, al ; pop rbx ; pop r14 ; pop r15 ; ret
0x00000000004f5053 : movzx eax, al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000041138e : movzx eax, al ; pop rbx ; ret
0x000000000040d8a4 : movzx eax, al ; pop rdx ; ret
0x000000000042c00a : movzx eax, al ; ret
0x000000000048970b : movzx eax, al ; xor eax, 1 ; pop rbx ; ret
0x000000000046aa66 : movzx eax, byte ptr [rax + 0x57a800] ; ret
0x000000000042ccf1 : movzx eax, byte ptr [rdi + 0x280] ; mov dword ptr [rdx], eax ; ret
0x0000000000411937 : movzx eax, cl ; pop rdx ; ret
0x000000000048d1a8 : movzx eax, word ptr [rcx + rax*2] ; and eax, 1 ; ret
0x000000000049455c : movzx ebp, al ; mov eax, ebp ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000542c39 : movzx ebx, al ; jmp 0x542c64
0x00000000004da748 : movzx ecx, al ; mov eax, ecx ; pop rdx ; ret
0x0000000000408817 : movzx ecx, al ; or eax, ecx ; ret
0x00000000004590ae : movzx ecx, cl ; sub eax, ecx ; ret
0x0000000000408816 : movzx ecx, r8b ; or eax, ecx ; ret
0x00000000004ef5f6 : mul byte ptr [rbp - 0x76b7fffc] ; ret
0x000000000059cd01 : mul byte ptr [rbx + 0x114806f6] ; sub bl, ch ; push rcx ; ret 0x2f85
0x00000000005552d2 : mul byte ptr [rsi + 0xf] ; out dx, eax ; push rbx ; ret
0x00000000004e2946 : mul ch ; idiv edi ; pop rbx ; pop r14 ; pop r15 ; ret
0x00000000005e1755 : mul dl ; jmp rax
0x00000000005a90eb : mul dword ptr [rdi + 0x6439d75e] ; ret
0x00000000005e29ed : mul ebp ; jmp qword ptr [rax]
0x00000000004bd362 : mulps xmm0, xmmword ptr [rax] ; ret
0x00000000004cff8b : neg byte ptr [rbx + 0x41] ; pop rsi ; pop rbp ; jmp rax
0x000000000059b528 : neg byte ptr [rdx] ; sahf ; push rsi ; ret 0x38c2
0x0000000000447376 : neg dword ptr [rsi - 0x7e] ; ret
0x000000000043b7af : neg eax ; cmp sil, 0x41 ; cmovne eax, edx ; jmp 0x43b7d8
0x000000000043ec86 : neg eax ; test r8d, r8d ; cmove rax, rdi ; ret
0x0000000000564924 : neg ecx ; ret
0x0000000000564923 : neg r9 ; ret
0x00000000005e250c : nop ; adc ah, ch ; call qword ptr [rax]
0x00000000004424e9 : nop ; add al, 0 ; add bh, bh ; ret
0x00000000004f4c5c : nop ; add al, 0 ; pop rdx ; ret
0x000000000061521d : nop ; add al, byte ptr [rax] ; mov al, 0x49 ; hlt ; jmp qword ptr [rax]
0x000000000061527d : nop ; add al, byte ptr [rax] ; ror byte ptr [rcx - 0xc], 1 ; call qword ptr [rdi]
0x00000000004cb4b3 : nop ; add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x000000000053d261 : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x000000000051271b : nop ; add byte ptr [rax], al ; add byte ptr [rbp + 0xf], cl ; lodsb al, byte ptr [rsi] ; ret
0x00000000004ba279 : nop ; add byte ptr [rax], al ; add cl, ch ; ret 0xfff8
0x00000000005e59cc : nop ; add ch, ch ; call rax
0x0000000000605295 : nop ; add dword ptr [rax], eax ; clc ; mov dl, -0x13 ; jmp rax
0x00000000005e3394 : nop ; and eax, ebp ; call qword ptr [rax]
0x00000000004c769c : nop ; call 0xffffffffc3d676a6
0x0000000000541a65 : nop ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000005e8524 : nop ; cmp ecx, esi ; call rax
0x000000000042c104 : nop ; cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x68], cl ; pop rdx ; ret
0x00000000005f85c0 : nop ; fld1 ; jmp rsi
0x000000000060aa10 : nop ; hlt ; out dx, al ; call rax
0x000000000059c2fb : nop ; hlt ; stosb byte ptr [rdi], al ; mov esi, 0x76a27f2 ; ret
0x00000000005a17d1 : nop ; in al, -0x77 ; ret
0x00000000005e5374 : nop ; in al, dx ; jmp rax
0x00000000005e50c4 : nop ; in eax, -0x15 ; call qword ptr [rax]
0x00000000005e5f35 : nop ; in eax, dx ; jmp qword ptr [rax]
0x00000000005e5e3c : nop ; jbe 0x5e5e2f ; jmp rax
0x00000000005e5ed4 : nop ; jg 0x5e5ec7 ; jmp rax
0x00000000005e4ce4 : nop ; jns 0x5e4cd5 ; call rax
0x00000000005a8ffd : nop ; jo 0x5a8f96 ; ret 0xd298
0x00000000005e909c : nop ; jp 0x5e9094 ; call qword ptr [rax]
0x000000000040422f : nop ; lea eax, dword ptr [rdi + rdi] ; sub eax, esi ; ret
0x00000000004546b8 : nop ; lea rsp, qword ptr [rbp] ; pop rbp ; ret
0x00000000005b7579 : nop ; leave ; ret 0x9a60
0x000000000054d973 : nop ; lock dec dword ptr [rax - 0x77] ; ret
0x00000000005e2964 : nop ; loope 0x5e294f ; call rax
0x00000000005e812c : nop ; loope 0x5e8122 ; jmp qword ptr [rax]
0x00000000005f86e0 : nop ; loopne 0x5f86ce ; call qword ptr [rsi]
0x000000000048ec3f : nop ; mov byte ptr [rip + 0x39cc41], 1 ; ret
0x00000000005e8b5c : nop ; mov dl, -0xf ; call qword ptr [rax]
0x00000000004a9ed1 : nop ; mov dword ptr [rax], ebx ; ret
0x000000000042e55f : nop ; mov dword ptr [rdi + 0x190], esi ; ret
0x000000000040d99f : nop ; mov eax, 0x12c ; ret
0x0000000000480e4f : nop ; mov eax, 0x20 ; ret
0x000000000040af8f : nop ; mov eax, 0x56af18 ; ret
0x000000000040b0cf : nop ; mov eax, 0x56b040 ; ret
0x000000000041dc0f : nop ; mov eax, 0x56cd40 ; ret
0x00000000004336cf : nop ; mov eax, 0x574338 ; ret
0x000000000043370f : nop ; mov eax, 0x574420 ; ret
0x000000000043c4cf : nop ; mov eax, 0x574f40 ; ret
0x000000000043c8ff : nop ; mov eax, 0x575270 ; ret
0x00000000004485ff : nop ; mov eax, 0x575b97 ; ret
0x000000000045da9f : nop ; mov eax, 0x577c9c ; ret
0x00000000004a51ef : nop ; mov eax, 0x587420 ; ret
0x00000000004b18ef : nop ; mov eax, 0x58a080 ; ret
0x00000000004e329f : nop ; mov eax, 0x5bd490 ; ret
0x00000000004e32df : nop ; mov eax, 0x5bd508 ; ret
0x00000000004e331f : nop ; mov eax, 0x5bd580 ; ret
0x00000000004e335f : nop ; mov eax, 0x5bd5f8 ; ret
0x00000000004e339f : nop ; mov eax, 0x5bd670 ; ret
0x00000000004e33df : nop ; mov eax, 0x5bd6e8 ; ret
0x00000000004e345f : nop ; mov eax, 0x5bd7d8 ; ret
0x00000000004e349f : nop ; mov eax, 0x5bd850 ; ret
0x000000000055987f : nop ; mov eax, 0x5dea9e ; ret
0x000000000040241f : nop ; mov eax, 0x819350 ; ret
0x000000000045cf0f : nop ; mov eax, 0x81fb70 ; ret
0x000000000045e78f : nop ; mov eax, 0x81fbc0 ; ret
0x000000000046065f : nop ; mov eax, 0x81fd00 ; ret
0x0000000000477ddf : nop ; mov eax, 0x8206a0 ; ret
0x00000000004794cf : nop ; mov eax, 0x8207e0 ; ret
0x000000000047ce3f : nop ; mov eax, 0x8209e0 ; ret
0x000000000047db5f : nop ; mov eax, 0x820a20 ; ret
0x000000000049601f : nop ; mov eax, 0x821f98 ; ret
0x00000000004c63ff : nop ; mov eax, 0x825110 ; ret
0x0000000000548adf : nop ; mov eax, 0x82a0e0 ; ret
0x000000000045ceaf : nop ; mov eax, 1 ; ret
0x00000000005e373c : nop ; mov ebp, 0x4948ffe8 ; add dword ptr [rax], eax ; push rax ; ret 0xffe8
0x000000000058b95a : nop ; mov ecx, 0xd3c1034a ; push rsi ; ret 0x2211
0x00000000004c637f : nop ; mov qword ptr [rdi + 8], rsi ; ret
0x000000000044333f : nop ; mov qword ptr [rip + 0x3db891], rdi ; ret
0x00000000004669cd : nop ; mov r8, r13 ; mov r9d, r12d ; call 0x562ca9
0x000000000049be1f : nop ; mov rax, qword ptr [rcx + 0x78] ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x0000000000541aef : nop ; mov rax, qword ptr [rdi + 0x10] ; ret
0x00000000004265ef : nop ; mov rax, qword ptr [rdi + 0x110] ; ret
0x000000000043057f : nop ; mov rax, qword ptr [rdi + 0x130] ; ret
0x000000000054147f : nop ; mov rax, qword ptr [rdi + 0x18] ; ret
0x000000000042c1df : nop ; mov rax, qword ptr [rdi + 0x20] ; ret
0x000000000054158f : nop ; mov rax, qword ptr [rdi + 0x28] ; ret
0x000000000054169f : nop ; mov rax, qword ptr [rdi + 0x30] ; ret
0x00000000005419df : nop ; mov rax, qword ptr [rdi + 0x38] ; ret
0x00000000005452af : nop ; mov rax, qword ptr [rdi + 8] ; ret
0x00000000005e5f34 : nop ; nop ; in eax, dx ; jmp qword ptr [rax]
0x000000000046104f : nop ; not esi ; and dword ptr [rdi + 0x20], esi ; ret
0x00000000005f0810 : nop ; or ah, ah ; call qword ptr [rbx]
0x00000000005e9f1c : nop ; or esi, esi ; jmp qword ptr [rax]
0x00000000005e5104 : nop ; out -0x15, al ; call rax
0x00000000005a9cd3 : nop ; out dx, al ; push -0x3b ; cdq ; mov cl, 0x67 ; ret
0x000000000060bbf0 : nop ; out dx, eax ; call qword ptr [rbx]
0x00000000005d4fa4 : nop ; out dx, eax ; out 6, eax ; ret
0x00000000005ebfc4 : nop ; outsb dx, byte ptr [rsi] ; clc ; jmp qword ptr [rax]
0x00000000005b474f : nop ; pop rsi ; ret
0x00000000004abbef : nop ; ret
0x00000000005a4d0c : nop ; ret 0x18b4
0x0000000000594d2a : nop ; ret 0x40fb
0x00000000005df288 : nop ; ret 0x55
0x00000000005b1dc7 : nop ; ret 0x62b7
0x00000000005ab5f7 : nop ; ret 0xc26a
0x00000000005e589c : nop ; ret 0xffec
0x0000000000609e80 : nop ; ret 0xffee
0x00000000005e4fbc : nop ; retf ; jmp 0x5e4fc2
0x00000000005aac3f : nop ; sbb dword ptr [rdi], esp ; ret 0xcac0
0x000000000059c4ee : nop ; std ; ret 0x9661
0x00000000005e4974 : nop ; sub ch, bl ; call qword ptr [rax]
0x00000000005e2b94 : nop ; sub dh, ah ; jmp qword ptr [rax]
0x00000000005ea2bc : nop ; sub dh, dh ; call rax
0x00000000005b7a71 : nop ; test al, -0x4f ; ret 0xf0ad
0x00000000005e5564 : nop ; test ch, ah ; call qword ptr [rax]
0x00000000005e6d7c : nop ; test ch, bh ; jmp qword ptr [rax]
0x000000000056085c : nop ; xchg eax, ebx ; std ; dec dword ptr [rax - 0x77] ; ret
0x00000000005eb2c4 : nop ; xchg edi, esi ; call qword ptr [rax]
0x00000000005e4fdc : nop ; xlatb ; jmp 0x5e4fe2
0x00000000005f2fa0 : nop ; xor al, 0xffffffffffffffe6 ; jmp rdi
0x00000000005e5274 : nop ; xor al, 0xffffffffffffffec ; call qword ptr [rax]
0x000000000040dbcf : nop ; xor eax, eax ; ret
0x00000000004d029b : nop dword ptr [rax + rax] ; mov eax, dword ptr [rdi] ; ret
0x000000000055170b : nop dword ptr [rax + rax] ; mov eax, dword ptr [rdi] ; sub eax, dword ptr [rsi] ; ret
0x00000000005660eb : nop dword ptr [rax + rax] ; mov qword ptr [rdi + 0x70], rsi ; ret
0x000000000050d19b : nop dword ptr [rax + rax] ; mov rax, qword ptr [rdi + 0x10] ; ret
0x000000000054343b : nop dword ptr [rax + rax] ; mov rax, qword ptr [rdi + 0x28] ; ret
0x0000000000541bab : nop dword ptr [rax + rax] ; mov rax, qword ptr [rdi + 0x40] ; ret
0x00000000004b889b : nop dword ptr [rax + rax] ; mov rax, qword ptr [rdi + 0x50] ; ret
0x00000000004d02db : nop dword ptr [rax + rax] ; mov rax, qword ptr [rdi] ; ret
0x00000000004abbe7 : nop dword ptr [rax + rax] ; nop ; ret
0x00000000004ca80b : nop dword ptr [rax + rax] ; push rbx ; mov rbx, rdi ; call qword ptr [rbx]
0x000000000047db68 : nop dword ptr [rax + rax] ; ret
0x000000000049be2b : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000004046cd : nop dword ptr [rax] ; mov eax, 0x100 ; ret
0x000000000043603d : nop dword ptr [rax] ; mov eax, 0x1c20 ; ret
0x0000000000404f7d : nop dword ptr [rax] ; mov eax, 0x56a3a0 ; ret
0x00000000004068cc : nop dword ptr [rax] ; mov eax, 0x56a6c8 ; ret
0x000000000040dfbd : nop dword ptr [rax] ; mov eax, 0x56b638 ; ret
0x000000000046a9ac : nop dword ptr [rax] ; mov eax, 0x57a7e8 ; ret
0x00000000004a557c : nop dword ptr [rax] ; mov eax, 0x587580 ; ret
0x00000000004a96ec : nop dword ptr [rax] ; mov eax, 0x588410 ; ret
0x00000000004a9e0d : nop dword ptr [rax] ; mov eax, 0x588620 ; ret
0x00000000004ab3ac : nop dword ptr [rax] ; mov eax, 0x589170 ; ret
0x00000000004e1e3d : nop dword ptr [rax] ; mov eax, 0x5bc8e8 ; ret
0x00000000004e325c : nop dword ptr [rax] ; mov eax, 0x5bd418 ; ret
0x000000000045ef6d : nop dword ptr [rax] ; mov eax, 0x81fc60 ; ret
0x0000000000461fac : nop dword ptr [rax] ; mov eax, 0x820160 ; ret
0x0000000000475fbd : nop dword ptr [rax] ; mov eax, 0x8205b0 ; ret
0x000000000047667d : nop dword ptr [rax] ; mov eax, 0x820600 ; ret
0x000000000049accd : nop dword ptr [rax] ; mov eax, 0x822280 ; ret
0x000000000049be4d : nop dword ptr [rax] ; mov eax, 0x8222e0 ; ret
0x000000000050b19c : nop dword ptr [rax] ; mov eax, 0x828130 ; ret
0x000000000042e7fc : nop dword ptr [rax] ; mov eax, 1 ; ret
0x000000000044370c : nop dword ptr [rax] ; mov eax, dword ptr [rdi] ; sub eax, dword ptr [rsi] ; ret
0x00000000004c63dc : nop dword ptr [rax] ; mov qword ptr [rdi + 0x28], rsi ; ret
0x000000000055f41c : nop dword ptr [rax] ; mov qword ptr [rdi + 0x40], rsi ; ret
0x000000000054338c : nop dword ptr [rax] ; mov rax, qword ptr [rdi + 0x10] ; ret
0x00000000005433fc : nop dword ptr [rax] ; mov rax, qword ptr [rdi + 0x18] ; ret
0x000000000054549c : nop dword ptr [rax] ; mov rax, qword ptr [rdi + 0x20] ; ret
0x000000000054550c : nop dword ptr [rax] ; mov rax, qword ptr [rdi + 0x28] ; ret
0x000000000054571c : nop dword ptr [rax] ; mov rax, qword ptr [rdi + 0x38] ; ret
0x000000000054578c : nop dword ptr [rax] ; mov rax, qword ptr [rdi + 0x40] ; ret
0x00000000004899cd : nop dword ptr [rax] ; mov rax, qword ptr [rdi + 0x78] ; ret
0x000000000054328c : nop dword ptr [rax] ; mov rax, qword ptr [rdi + 8] ; ret
0x00000000004ca93d : nop dword ptr [rax] ; mov rax, qword ptr [rdi] ; ret
0x00000000004c8f4c : nop dword ptr [rax] ; ret
0x000000000048f6a9 : nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000047db67 : nop dword ptr cs:[rax + rax] ; ret
0x00000000004d029a : nop word ptr [rax + rax] ; mov eax, dword ptr [rdi] ; ret
0x00000000004a59aa : nop word ptr [rax + rax] ; ret
0x000000000049be2a : nop word ptr [rax + rax] ; xor eax, eax ; ret
0x00000000005d4fa3 : not byte ptr [rax + 0x6e73eef] ; ret
0x0000000000595878 : not dword ptr [rdi] ; jmp 0xffffffff9dce1b2c
0x0000000000595877 : not dword ptr es:[rdi] ; jmp 0xffffffff9dce1b2d
0x00000000004d280c : not eax ; call 0x100fbc27
0x000000000045bcb4 : not eax ; or eax, ecx ; add rsp, 0x28 ; ret
0x0000000000461050 : not esi ; and dword ptr [rdi + 0x20], esi ; ret
0x00000000004b7b50 : not esi ; and dword ptr [rdi + 0x2c], esi ; ret
0x0000000000429f90 : not esi ; and esi, dword ptr [rdi] ; mov dword ptr [rdi], esi ; mov eax, esi ; ret
0x00000000004d0400 : not esi ; movsxd rax, esi ; and qword ptr [rdi + 0x10], rax ; ret
0x00000000004d0430 : not esi ; movsxd rax, esi ; and qword ptr [rdi + 0x70], rax ; ret
0x00000000005f0811 : or ah, ah ; call qword ptr [rbx]
0x0000000000617098 : or ah, ah ; hlt ; call qword ptr [rsi]
0x00000000005e54f8 : or ah, al ; add dword ptr [rax], eax ; jo 0x5e5570 ; in al, dx ; jmp qword ptr [rax]
0x000000000044920e : or ah, al ; and r15d, ebp ; fadd st(4), st(0) ; ret
0x0000000000511b26 : or ah, al ; cmp eax, 0x8948c4d4 ; ret 0xf48
0x000000000044f0b1 : or ah, al ; cmp r11d, ebp ; ret
0x0000000000449158 : or ah, al ; ret
0x0000000000527048 : or ah, al ; sar dword ptr [rcx + 0x6e], 0x41 ; or ah, al ; ret
0x00000000005291dc : or ah, al ; sar dword ptr [rcx + 0x6e], 0x51 ; or ah, al ; ret
0x000000000044d562 : or ah, byte ptr [rbp - 0x45] ; or ch, byte ptr [rdx + 0x76] ; leave ; ret 0x8581
0x00000000005d75cf : or ah, byte ptr [rbx] ; loopne 0x5d75ba ; ret
0x000000000058dec1 : or ah, cl ; inc byte ptr [rsi - 0x6c] ; or byte ptr [rax + 0x4d], bl ; ret 0x91b2
0x00000000005ece8d : or al, 0 ; add al, dl ; fsubrp st(1) ; call qword ptr [rcx]
0x000000000049585a : or al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004d45ef : or al, 0 ; add byte ptr [rax - 0x7f], cl ; ret
0x0000000000456b50 : or al, 0 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000042ce44 : or al, 0 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x68] ; jmp rax
0x00000000004361c3 : or al, 0 ; add byte ptr [rax], al ; ret
0x00000000004d7d70 : or al, 0 ; add cl, al ; ret
0x00000000004d7de5 : or al, 0 ; add cl, al ; ret 0x310b
0x000000000041a4ea : or al, 0 ; add cl, ch ; ret
0x00000000004146eb : or al, 0 ; add dh, dh ; ret
0x0000000000431a6c : or al, 0 ; add rsp, 0x18 ; ret
0x00000000004068c3 : or al, 0 ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000408d7b : or al, 0 ; mov eax, 1 ; pop rdx ; ret
0x00000000005062f5 : or al, 0 ; ror byte ptr [rbx - 0x7ebe93a2], 1 ; ret 0xd87
0x000000000050669f : or al, 0 ; ror byte ptr [rbx - 0x7ebed3a2], 1 ; ret 0x3085
0x0000000000506935 : or al, 0 ; ror dword ptr [rbx - 0x7ebea7ba], cl ; ret
0x0000000000402dc1 : or al, 0 ; xor eax, eax ; pop rbx ; ret
0x000000000057e288 : or al, 0x21 ; push rax ; loope 0x57e253 ; int1 ; loop 0x57e21b ; ret
0x00000000005ac68d : or al, 0x25 ; ret 0xe942
0x00000000004d29aa : or al, 0x31 ; ret
0x0000000000522a20 : or al, 0x31 ; ret 0xf789
0x00000000004e6180 : or al, 0x34 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000046b43b : or al, 0x39 ; ret
0x0000000000459a7a : or al, 0x39 ; ret 0x8941
0x0000000000593ddd : or al, 0x3f ; mov edx, 0x1f9af32a ; pop rbx ; ret 0xdfca
0x0000000000600314 : or al, 0x41 ; add dword ptr [rax], eax ; clc ; lodsb al, byte ptr [rsi] ; jmp 0x600322
0x00000000005b5aec : or al, 0x43 ; ret 0x1595
0x00000000004cf780 : or al, 0x48 ; add esp, 8 ; pop rbx ; pop r14 ; ret
0x00000000004de66d : or al, 0x48 ; mov dword ptr [rbx], edx ; add rsp, 0x10 ; pop rbx ; ret
0x000000000046ae64 : or al, 0x48 ; mov eax, ebx ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004046c8 : or al, 0x48 ; mov eax, esi ; ret
0x0000000000438a46 : or al, 0x48 ; mov edi, ebx ; call rax
0x000000000049c721 : or al, 0x48 ; mov edi, ebx ; call rcx
0x0000000000461547 : or al, 0x48 ; mov edi, ebx ; mov esi, ebp ; mov rdx, r14 ; call rax
0x0000000000600d14 : or al, 0x4b ; add dword ptr [rax], eax ; cwde ; sub al, -0x14 ; call rcx
0x000000000049a6eb : or al, 0x4c ; mov edi, edi ; call rax
0x0000000000430e72 : or al, 0x4c ; mov edi, esi ; mov rsi, r15 ; mov edx, ebp ; call rax
0x00000000005aef25 : or al, 0x53 ; in al, -0xd ; fcmovbe st(0), st(3) ; std ; ret 0x488a
0x000000000052b462 : or al, 0x55 ; ret
0x0000000000433130 : or al, 0x57 ; add bl, al ; mov eax, 0x570e06 ; ret
0x0000000000454ad9 : or al, 0x5a ; ret
0x00000000005a3b7e : or al, 0x5c ; sbb eax, 0xf5606b8 ; ret 0x5232
0x0000000000602114 : or al, 0x5f ; add dword ptr [rax], eax ; clc ; wait ; in al, dx ; jmp qword ptr [rsi]
0x000000000050fd50 : or al, 0x62 ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000597c24 : or al, 0x64 ; cdq ; ret 0x66eb
0x000000000059a99a : or al, 0x6b ; ret 0x1320
0x00000000005b1472 : or al, 0x79 ; mov edx, 0x8ba3091f ; jo 0x5b1493 ; ret 0xfd78
0x000000000042b70f : or al, 0xa ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0x000000000052711e : or al, 0xffffffc4 ; ret
0x00000000005292d1 : or al, 0xffffffc4 ; sar dword ptr [rcx + 0x6e], 0x51 ; or al, 0xffffffffffffffc4 ; ret
0x000000000047c013 : or al, 0xffffffd3 ; ret
0x000000000047c777 : or al, 0xffffffd3 ; ret 0xb60f
0x00000000005a6bb1 : or al, 0xffffffe9 ; insd dword ptr [rdi], dx ; retfq 0x5ce5 ; jmp rsp
0x00000000005ea01c : or al, 0xfffffff6 ; jmp qword ptr [rax]
0x000000000055bd08 : or al, 0xffffffffffffff83 ; loopne 0x55bd16 ; xor eax, 3 ; pop rbx ; ret
0x000000000055c12d : or al, 0xffffffffffffff83 ; loopne 0x55c13b ; xor eax, 3 ; pop rbx ; ret
0x0000000000434cb5 : or al, 0xffffffffffffff85 ; fisttp dword ptr [rax + 0xf] ; ret 0x8b48
0x0000000000604b14 : or al, 0xffffffffffffff89 ; add dword ptr [rax], eax ; test al, -0x71 ; in eax, dx ; call rsp
0x0000000000514d3a : or al, 0xffffffffffffff91 ; ret
0x0000000000505e40 : or al, 0xffffffffffffff9f ; add al, byte ptr [rbp + 1] ; ret
0x00000000005b1dc4 : or al, 0xffffffffffffffa7 ; jbe 0x5b1d5c ; ret 0x62b7
0x0000000000616d14 : or al, 0xffffffffffffffab ; add al, byte ptr [rax] ; call 0x226161dd
0x00000000005b7c70 : or al, 0xffffffffffffffaf ; lahf ; popfq ; xchg eax, ebp ; push rax ; in eax, dx ; ret
0x0000000000617214 : or al, 0xffffffffffffffb0 ; add al, byte ptr [rax] ; mov ah, ah ; hlt ; call qword ptr [rsi]
0x0000000000617414 : or al, 0xffffffffffffffb2 ; add al, byte ptr [rax] ; in eax, -0xc ; call qword ptr [rsi]
0x0000000000564dfb : or al, 0xffffffffffffffb8 ; jmp rdi
0x000000000043627e : or al, 0xffffffffffffffb9 ; ret
0x00000000004644b0 : or al, 0xffffffffffffffba ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x0000000000484e50 : or al, 0xffffffffffffffbe ; or byte ptr [rax], al ; add byte ptr [rax], al ; xor edx, edx ; call rax
0x0000000000437cc4 : or al, 0xffffffffffffffbe ; ret
0x0000000000599102 : or al, 0xffffffffffffffc0 ; pop rbx ; in eax, dx ; jl 0x5990eb ; ret 0x278f
0x0000000000507ee7 : or al, 0xffffffffffffffc1 ; ror byte ptr [rdx], -0x77 ; ret
0x000000000052711f : or al, 0xffffffffffffffc4 ; ret
0x0000000000527119 : or al, 0xffffffffffffffc4 ; sar dword ptr [rcx + 0x6e], 0x41 ; or al, 0xffffffffffffffc4 ; ret
0x00000000005292d2 : or al, 0xffffffffffffffc4 ; sar dword ptr [rcx + 0x6e], 0x51 ; or al, 0xffffffffffffffc4 ; ret
0x00000000005f8e14 : or al, 0xffffffffffffffcc ; add byte ptr [rax], al ; add cl, bpl ; jmp qword ptr [rbx]
0x000000000047c014 : or al, 0xffffffffffffffd3 ; ret
0x000000000047c778 : or al, 0xffffffffffffffd3 ; ret 0xb60f
0x00000000005f0929 : or al, 0xffffffffffffffe4 ; call qword ptr [rax]
0x00000000005f08e1 : or al, 0xffffffffffffffe4 ; call qword ptr [rdx]
0x00000000004f10f7 : or al, 0xffffffffffffffe8 ; and ebp, edi ; hlt ; dec dword ptr [rax - 0x77] ; ret
0x00000000005e32a5 : or al, 0xffffffffffffffe8 ; call qword ptr [rax]
0x00000000005a6bb2 : or al, 0xffffffffffffffe9 ; insd dword ptr [rdi], dx ; retfq 0x5ce5 ; jmp rsp
0x00000000005f8f79 : or al, 0xffffffffffffffe9 ; jmp qword ptr [rdi]
0x00000000005d6897 : or al, 0xfffffffffffffff0 ; ret 0xd832
0x000000000059aff7 : or al, 0xfffffffffffffff2 ; mov al, bh ; ret 0xa3b3
0x00000000004450ce : or al, 0xfffffffffffffff3 ; ret
0x00000000005ea01d : or al, 0xfffffffffffffff6 ; jmp qword ptr [rax]
0x000000000060bb14 : or al, 0xfffffffffffffff9 ; add dword ptr [rax], eax ; fdivr dword ptr [rsi] ; out dx, eax ; jmp rsi
0x00000000004f528f : or al, 0xffffffffffffffff ; dec dword ptr [rax - 0x77] ; ret
0x00000000004bbfa2 : or al, 0xffffffffffffffff ; ret
0x00000000005053a4 : or al, 1 ; call 0xffffffffb7602bb5
0x00000000005ea6a9 : or al, 3 ; add byte ptr [rax], al ; jbe 0x5ea6ab ; jmp qword ptr [rax]
0x00000000004856e5 : or al, 6 ; add bl, ch ; ret
0x00000000004d4c2d : or al, 6 ; and bl, 0xf0 ; mov rdx, r8 ; jmp 0x4d4c47
0x0000000000436cbd : or al, 8 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005e9a18 : or al, ah ; add al, byte ptr [rax] ; xor dl, dh ; cmc ; jmp qword ptr [rax]
0x00000000005aa1db : or al, ah ; leave ; outsd dx, dword ptr [rsi] ; ret 0xcea3
0x00000000005d6acb : or al, al ; ret 0x2c2
0x00000000005a39f5 : or al, bl ; ret 0x1878
0x0000000000566f86 : or al, bpl ; ret
0x0000000000431af6 : or al, byte ptr [rax] ; add byte ptr [rax + 0x5730ed], bh ; ret
0x0000000000431b1a : or al, byte ptr [rax] ; add byte ptr [rax + 0x57312b], bh ; ret
0x0000000000431b08 : or al, byte ptr [rax] ; add byte ptr [rax + 0x573167], bh ; ret
0x0000000000416d1b : or al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000053cc62 : or al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x00000000004361b7 : or al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000005c3b44 : or al, byte ptr [rax] ; add byte ptr [rax], al ; ret 0x5c0e
0x0000000000441689 : or al, byte ptr [rax] ; add rsp, 0x28 ; ret
0x00000000004954f4 : or al, byte ptr [rax] ; add rsp, 0x58 ; ret
0x0000000000429a0a : or al, byte ptr [rax] ; jmp 0x429a6d
0x000000000042be66 : or al, byte ptr [rax] ; mov eax, 0xffffffff ; pop rdx ; ret
0x0000000000443ca1 : or al, byte ptr [rax] ; mov eax, dword ptr [rdi + 8] ; sub eax, dword ptr [rsi + 8] ; ret
0x000000000041db12 : or al, byte ptr [rax] ; mov eax, r14d ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000044863c : or al, byte ptr [rax] ; pop rax ; ret
0x0000000000441653 : or al, byte ptr [rax] ; pop rbx ; ret
0x0000000000443709 : or al, byte ptr [rax] ; ret
0x000000000042a6ab : or al, byte ptr [rax] ; test rax, rax ; je 0x42a6bc ; pop rax ; ret
0x000000000042b606 : or al, byte ptr [rax] ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000041fb8a : or al, byte ptr [rax] ; xor eax, eax ; pop rbx ; ret
0x000000000042a6fe : or al, byte ptr [rax] ; xor eax, eax ; pop rdx ; ret
0x00000000004256ac : or al, byte ptr [rax] ; xor ebx, ebx ; mov rax, rbx ; pop rbx ; ret
0x00000000004ff2d6 : or al, byte ptr [rbx + 0x7510207f] ; sub al, byte ptr [rcx + 0x59] ; jmp rax
0x00000000005ea601 : or al, byte ptr [rbx] ; add al, ah ; jae 0x5ea603 ; jmp qword ptr [rax]
0x00000000005ea639 : or al, byte ptr [rbx] ; add al, dl ; je 0x5ea63b ; call rax
0x00000000004e48a2 : or al, byte ptr [rcx + 0x31] ; fild dword ptr [rcx] ; ret 0x8d42
0x0000000000508178 : or al, byte ptr [rcx - 0x77] ; ret 0x145
0x00000000005e65c1 : or al, byte ptr [rdx] ; add al, dh ; wait ; out dx, al ; jmp rax
0x00000000005e6589 : or al, byte ptr [rdx] ; add byte ptr [rax], dl ; xchg eax, edi ; out dx, al ; jmp qword ptr [rax]
0x00000000005aa823 : or al, byte ptr [rsi - 0x57cb9399] ; clc ; ret 0xc375
0x0000000000594380 : or al, byte ptr [rsp + rsi*2] ; pop rdi ; ret
0x000000000055fb9d : or al, ch ; cmp eax, 0x39fffda0 ; ret
0x00000000004f4c5a : or al, ch ; nop ; add al, 0 ; pop rdx ; ret
0x00000000004c3f37 : or al, ch ; ret
0x0000000000538418 : or al, ch ; ret 0x17
0x00000000004987a8 : or al, ch ; ret 0xfd22
0x00000000004f4ebf : or al, ch ; sbb ecx, dword ptr [rbp + 4] ; add byte ptr [rcx], bh ; ret
0x0000000000527510 : or al, ch ; sub edi, ebp ; ret
0x00000000005e55d0 : or al, cl ; add dword ptr [rax], eax ; mov al, -0x75 ; in al, dx ; jmp qword ptr [rax]
0x00000000005e9f18 : or al, dh ; add al, byte ptr [rax] ; nop ; or esi, esi ; jmp qword ptr [rax]
0x00000000005e5ce8 : or bh, ah ; add dword ptr [rax], eax ; add byte ptr [rdi - 0x13], ah ; jmp qword ptr [rax]
0x00000000005a30a2 : or bh, ah ; add eax, 0xd04ee144 ; ret
0x0000000000508cb4 : or bh, al ; adc r8b, r14b ; loope 0x508c94 ; ret
0x0000000000523ce4 : or bh, al ; adc r8b, r14b ; loope 0x523cc4 ; ret
0x0000000000537684 : or bh, al ; adc r8b, r14b ; loope 0x537664 ; ret
0x00000000005eb9dd : or bh, al ; call qword ptr [rax]
0x0000000000429aee : or bh, bh ; leave ; mov eax, ecx ; ret
0x000000000055fb92 : or bh, bh ; ret
0x00000000005175d0 : or bh, bh ; ret 0xc031
0x0000000000510af4 : or bh, bh ; ret 0xff48
0x00000000004b8e43 : or bh, bh ; ror dword ptr [rax - 0x75], 1 ; cmp ebp, eax ; ret 0x2d4
0x00000000005971dc : or bh, byte ptr [rax + 0x46] ; ret 0x9fc2
0x00000000005e5f30 : or bh, ch ; add dword ptr [rax], eax ; nop ; nop ; in eax, dx ; jmp qword ptr [rax]
0x00000000005e6100 : or bh, dh ; add dword ptr [rax], eax ; and ch, al ; in eax, dx ; jmp qword ptr [rax]
0x00000000005b2514 : or bh, dl ; jbe 0x5b2578 ; mov eax, dword ptr [rdx - 0x2d] ; jge 0x5b255f ; ret 0xf356
0x00000000005e9b18 : or bl, ah ; add al, byte ptr [rax] ; xor ah, dh ; cmc ; jmp qword ptr [rax]
0x00000000005ee331 : or bl, ah ; call qword ptr [rdx]
0x00000000005df2e8 : or bl, al ; push rbp ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdx], dl ; ret
0x0000000000548052 : or bl, bh ; stc ; dec dword ptr [rax - 0x77] ; ret
0x00000000005b1ce3 : or bl, byte ptr [rcx - 0x37] ; std ; ret
0x000000000059cb6d : or bl, byte ptr [rcx] ; ret
0x00000000005a43ac : or bl, byte ptr [rdx - 0x78725df1] ; sbb al, 0x36 ; ret
0x00000000005d6dcd : or bl, byte ptr [rdx] ; sbb bl, ah ; ret
0x000000000059cb6c : or bl, byte ptr ss:[rcx] ; ret
0x0000000000464317 : or bl, ch ; and eax, dword ptr [rbp - 0x76f08b40] ; ret 0xe283
0x00000000005ea018 : or bl, dh ; add al, byte ptr [rax] ; or al, 0xfffffff6 ; jmp qword ptr [rax]
0x00000000004d5760 : or bl, dh ; movq qword ptr [rdi + 0x50], mm4 ; ret
0x00000000005a70bf : or bl, dh ; push rsi ; or eax, 0x22653a4f ; ret 0xb805
0x000000000045471c : or bl, dh ; ret
0x000000000048c207 : or byte ptr [r11 + 0x41], bl ; pop rsi ; pop rbp ; ret
0x00000000005053ec : or byte ptr [r11 + 0x41], r11b ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004360ab : or byte ptr [r11 + 0x5b038900], cl ; ret
0x00000000004e76df : or byte ptr [r11 + r9*4 + 7], r9b ; mov rdi, rax ; jmp r9
0x00000000004c9c4c : or byte ptr [r15 + r9 - 0x41], sil ; add byte ptr [rax], al ; add al, byte ptr [rax] ; call rax
0x000000000048d1a6 : or byte ptr [r15], r9b ; mov bh, 4 ; and r8d, 1 ; ret
0x00000000004dda96 : or byte ptr [r8 + 1], dil ; pop rbx ; ret
0x00000000004e4163 : or byte ptr [r8 + 1], r15b ; ret
0x000000000048749b : or byte ptr [r8 - 0x75], cl ; pop rax ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000048737e : or byte ptr [r8 - 0x75], cl ; pop rax ; or byte ptr [rax - 0x7d], cl ; ret
0x000000000048736d : or byte ptr [r8 - 0x75], cl ; pop rax ; sbb byte ptr [rax - 0x7d], cl ; ret
0x00000000004874c5 : or byte ptr [r8 - 0x75], cl ; pop rax ; sub byte ptr [rax - 0x7d], cl ; ret
0x0000000000539b46 : or byte ptr [r8 - 0x75], r9b ; add al, -0x38 ; mov dword ptr [rdi], ecx ; ret
0x0000000000539c06 : or byte ptr [r8 - 0x75], r9b ; add al, -0x3f ; ret
0x00000000004877c6 : or byte ptr [r8 - 0x75], r9b ; pop rax ; or byte ptr [rax - 0x7d], cl ; ret
0x00000000004877b5 : or byte ptr [r8 - 0x75], r9b ; pop rax ; sbb byte ptr [rax - 0x7d], cl ; ret
0x000000000042bf29 : or byte ptr [r8 - 0x75], r9b ; pop rcx ; jmp rax
0x000000000042c1d4 : or byte ptr [r8 - 0x75], r9b ; sbb al, 0 ; add byte ptr [rax], al ; jmp rax
0x0000000000484a09 : or byte ptr [r8 - 0x75], r9b ; xor bl, al ; ret
0x0000000000539c26 : or byte ptr [r8 - 0x77], r9b ; adc al, -0x3f ; mov rax, rdx ; ret
0x0000000000432656 : or byte ptr [r8], r8b ; add byte ptr [rax + 0x573e0b], bh ; ret
0x00000000004450c9 : or byte ptr [r9 + 0x33], r8b ; push rdi ; or al, 0xfffffffffffffff3 ; ret
0x000000000046f820 : or byte ptr [r9 + 0x48d689f7], cl ; mov edx, ecx ; call rax
0x0000000000486aa8 : or byte ptr [r9 - 0x77], cl ; or dword ptr [rdx - 0x3d], ebx ; pop rdx ; ret
0x000000000056449c : or byte ptr [rax + 0x11], cl ; ret
0x00000000005e5210 : or byte ptr [rax + 0x1e00001], bh ; in al, dx ; jmp qword ptr [rax]
0x00000000004e91eb : or byte ptr [rax + 0x20], 0xd ; ret
0x000000000055d929 : or byte ptr [rax + 0x21], cl ; ret
0x0000000000556a9b : or byte ptr [rax + 0x28], al ; adc byte ptr [rax - 0x3d], cl ; ret
0x00000000005a4ee2 : or byte ptr [rax + 0x39], al ; ret
0x000000000048ffa7 : or byte ptr [rax + 0x39], cl ; fild word ptr [rcx + 0xf] ; xchg eax, ebx ; ret
0x00000000005d72c9 : or byte ptr [rax + 0x40], cl ; ret 0xc002
0x000000000042c26f : or byte ptr [rax + 0x41000000], 0x58 ; jmp rax
0x000000000058dec6 : or byte ptr [rax + 0x4d], bl ; ret 0x91b2
0x00000000004f2ae8 : or byte ptr [rax + 0x63], cl ; ret
0x00000000004dda97 : or byte ptr [rax + 1], bh ; pop rbx ; ret
0x00000000004ca8a9 : or byte ptr [rax + 1], bh ; pop rdx ; ret
0x0000000000426352 : or byte ptr [rax + 1], bh ; ret
0x0000000000561e32 : or byte ptr [rax + 1], cl ; ret
0x00000000005e7270 : or byte ptr [rax + 2], al ; add al, ah ; out dx, eax ; jmp qword ptr [rax]
0x00000000005ebbc8 : or byte ptr [rax + 3], ah ; add al, dh ; clc ; jmp qword ptr [rax]
0x0000000000504e76 : or byte ptr [rax + 9], cl ; ret 0xb60f
0x00000000005e15b8 : or byte ptr [rax + rax - 0x1d64f000], bh ; jmp qword ptr [rax]
0x0000000000538474 : or byte ptr [rax + rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004e331c : or byte ptr [rax + rax], al ; nop ; mov eax, 0x5bd580 ; ret
0x0000000000486b11 : or byte ptr [rax - 0x17], bl ; sbb byte ptr [rsi], dl ; add byte ptr [rax], al ; pop rdx ; ret
0x0000000000486bbf : or byte ptr [rax - 0x39], cl ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add bl, al ; ret
0x000000000045972e : or byte ptr [rax - 0x73], cl ; xor al, 0x24 ; mov rdi, r12 ; call r15
0x0000000000539b47 : or byte ptr [rax - 0x75], cl ; add al, -0x38 ; mov dword ptr [rdi], ecx ; ret
0x0000000000539c07 : or byte ptr [rax - 0x75], cl ; add al, -0x3f ; ret
0x00000000004e8989 : or byte ptr [rax - 0x75], cl ; jbe 0x4e89a3 ; jmp rax
0x00000000004315d6 : or byte ptr [rax - 0x75], cl ; mov qword ptr [rdi + 0x48], rsi ; ret
0x000000000048749c : or byte ptr [rax - 0x75], cl ; pop rax ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000048737f : or byte ptr [rax - 0x75], cl ; pop rax ; or byte ptr [rax - 0x7d], cl ; ret
0x000000000048736e : or byte ptr [rax - 0x75], cl ; pop rax ; sbb byte ptr [rax - 0x7d], cl ; ret
0x00000000004874c6 : or byte ptr [rax - 0x75], cl ; pop rax ; sub byte ptr [rax - 0x7d], cl ; ret
0x000000000042bf2a : or byte ptr [rax - 0x75], cl ; pop rcx ; jmp rax
0x0000000000488e4f : or byte ptr [rax - 0x75], cl ; push rdx ; or byte ptr [rax - 0x77], cl ; adc ebx, eax ; ret
0x000000000042c1d5 : or byte ptr [rax - 0x75], cl ; sbb al, 0 ; add byte ptr [rax], al ; jmp rax
0x0000000000484a0a : or byte ptr [rax - 0x75], cl ; xor bl, al ; ret
0x00000000004e8988 : or byte ptr [rax - 0x75], r9b ; jbe 0x4e89a4 ; jmp rax
0x0000000000541a64 : or byte ptr [rax - 0x76b70008], dl ; ret
0x0000000000539c27 : or byte ptr [rax - 0x77], cl ; adc al, -0x3f ; mov rax, rdx ; ret
0x0000000000488e53 : or byte ptr [rax - 0x77], cl ; adc ebx, eax ; ret
0x00000000004ed867 : or byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0xbe08
0x00000000004e8a83 : or byte ptr [rax - 0x77], cl ; cmp al, -0x3f ; ret
0x00000000004fcce7 : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0x000000000046170c : or byte ptr [rax - 0x77], cl ; fisttp word ptr [rcx - 0xd76b312] ; call rax
0x00000000004bbbc9 : or byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret
0x000000000049db14 : or byte ptr [rax - 0x77], cl ; imul ecx ; xchg dword ptr [rax + rax], eax ; ret
0x00000000004c74af : or byte ptr [rax - 0x77], cl ; ret
0x0000000000456a5b : or byte ptr [rax - 0x77], cl ; ret 0x1ce8
0x00000000004f32c5 : or byte ptr [rax - 0x77], cl ; ret 0x72e8
0x000000000050abbc : or byte ptr [rax - 0x77], cl ; ret 0x7be8
0x000000000050aabb : or byte ptr [rax - 0x77], cl ; ret 0x7ce8
0x00000000004e1086 : or byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000050aa95 : or byte ptr [rax - 0x77], cl ; ret 0xa2e8
0x00000000004dd185 : or byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000050ac3d : or byte ptr [rax - 0x77], cl ; ret 0xfae8
0x0000000000477308 : or byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], -0x38 ; pop rdx ; ret
0x00000000004e8a82 : or byte ptr [rax - 0x77], r9b ; cmp al, -0x3f ; ret
0x000000000049c8bb : or byte ptr [rax - 0x7b], cl ; leave ; je 0x49c934 ; mov rdi, rbx ; call rcx
0x00000000004b7b03 : or byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0x17] ; ret 0xc
0x000000000050e6fd : or byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0x18] ; clc ; ret
0x00000000004ad15a : or byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], -0x7c ; ret 0
0x000000000045e40f : or byte ptr [rax - 0x7d], cl ; ret
0x00000000004417b3 : or byte ptr [rax - 0x7d], cl ; ret 0x3904
0x000000000046c374 : or byte ptr [rax - 0x7d], cl ; ret 0x4108
0x0000000000410bd1 : or byte ptr [rax - 0x7d], cl ; ret 0x4803
0x0000000000469798 : or byte ptr [rax - 0x7d], cl ; ret 0x4808
0x0000000000447c0e : or byte ptr [rax - 0x7d], cl ; ret 0x48f0
0x00000000004f2f51 : or byte ptr [rax - 0x7d], cl ; ret 0xbe08
0x000000000046562e : or byte ptr [rax - 0x7d], cl ; ret 0xff08
0x000000000059601c : or byte ptr [rax - 0xdb17a39], 0xbd ; ret
0x0000000000470831 : or byte ptr [rax - 1], cl ; ret
0x000000000043735a : or byte ptr [rax - 1], cl ; ret 0x3948
0x00000000005e6b68 : or byte ptr [rax], ah ; add al, byte ptr [rax] ; jo 0x5e6b6e ; out dx, al ; jmp qword ptr [rax]
0x0000000000556a99 : or byte ptr [rax], ah ; or byte ptr [rax + 0x28], al ; adc byte ptr [rax - 0x3d], cl ; ret
0x00000000004325d1 : or byte ptr [rax], al ; add byte ptr [rax + 0x573dda], bh ; ret
0x000000000043262f : or byte ptr [rax], al ; add byte ptr [rax + 0x573dfd], bh ; ret
0x0000000000432657 : or byte ptr [rax], al ; add byte ptr [rax + 0x573e0b], bh ; ret
0x0000000000432683 : or byte ptr [rax], al ; add byte ptr [rax + 0x573e19], bh ; ret
0x0000000000432607 : or byte ptr [rax], al ; add byte ptr [rax + 0x57406c], bh ; ret
0x00000000004ca235 : or byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005e0c28 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000041b3a2 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x00000000005c51ec : or byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x000000000054eef7 : or byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x54eec5
0x00000000004aa4d2 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov r8, r14 ; call rax
0x000000000043419c : or byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, r13 ; call 0x4d03f9
0x00000000004361ab : or byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000484e52 : or byte ptr [rax], al ; add byte ptr [rax], al ; xor edx, edx ; call rax
0x0000000000484ba7 : or byte ptr [rax], al ; add byte ptr [rax], al ; xor edx, edx ; mov rdi, r14 ; call rax
0x000000000045a03e : or byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; ret
0x00000000005074f6 : or byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; ret
0x0000000000421350 : or byte ptr [rax], al ; add cl, ch ; mov eax, 0xf6000002 ; ret
0x00000000004212b1 : or byte ptr [rax], al ; add cl, ch ; push rdi ; add eax, dword ptr [rax] ; add dh, dh ; ret
0x000000000046404d : or byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop r14 ; ret
0x0000000000401bb0 : or byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000005064fd : or byte ptr [rax], al ; fld dword ptr [rcx - 0x3f] ; ret 0x4510
0x0000000000460fc0 : or byte ptr [rax], al ; mov eax, 1 ; pop rbx ; ret
0x000000000045d836 : or byte ptr [rax], al ; mov eax, ebp ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000456964 : or byte ptr [rax], al ; pop rbx ; ret
0x0000000000506d68 : or byte ptr [rax], al ; ret 0x8a44
0x0000000000506b5a : or byte ptr [rax], al ; ror byte ptr [rbx - 0x7ebe83a2], 1 ; ret 0xd2bb
0x0000000000505d6d : or byte ptr [rax], al ; ror byte ptr [rbx - 0x7ebef3a2], 1 ; ret 0x70db
0x00000000005063a3 : or byte ptr [rax], al ; ror dword ptr [rbx - 0x7ebe87ba], cl ; ret
0x000000000055c8a9 : or byte ptr [rax], al ; setg al ; movzx eax, al ; ret
0x00000000004b876c : or byte ptr [rax], al ; setne al ; movzx eax, al ; pop rbx ; ret
0x00000000004ed813 : or byte ptr [rax], al ; setne al ; movzx eax, al ; ret
0x000000000043c724 : or byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop r14 ; pop r15 ; ret
0x00000000004415ea : or byte ptr [rax], al ; xor eax, eax ; pop rdx ; ret
0x0000000000444c45 : or byte ptr [rax], al ; xor ebx, ebx ; jmp 0x444c12
0x00000000004abab7 : or byte ptr [rax], bh ; add byte ptr [rcx + 0x58], al ; jmp rax
0x00000000005eb120 : or byte ptr [rax], bh ; add eax, dword ptr [rax] ; xor byte ptr [rsi - 9], dh ; jmp qword ptr [rax]
0x0000000000556a98 : or byte ptr [rax], cl ; and byte ptr [rax], cl ; sub byte ptr [rax], dl ; ret
0x00000000004dff42 : or byte ptr [rax], dh ; enter -0x3eb8, -0x16 ; cmp byte ptr [rax], dh ; ret 0xf41
0x00000000004df7d5 : or byte ptr [rax], dh ; ret
0x00000000004a4b0e : or byte ptr [rax], dl ; add byte ptr [rax], al ; pop rbx ; pop r14 ; ret
0x00000000004c9724 : or byte ptr [rax], dl ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000005408ab : or byte ptr [rax], dl ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000005408aa : or byte ptr [rax], r10b ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000004455bc : or byte ptr [rbp + 0x31], cl ; in eax, -0x3f ; ret 0x4408
0x00000000005e5330 : or byte ptr [rbp + 0x43100001], bh ; in al, dx ; jmp qword ptr [rax]
0x0000000000505d82 : or byte ptr [rbp + 1], al ; loop 0x505d8f ; fld dword ptr [rcx - 0x3f] ; ret 0x4511
0x00000000005ebac8 : or byte ptr [rbp + 3], bl ; add al, dh ; clc ; jmp qword ptr [rax]
0x0000000000514e04 : or byte ptr [rbp + 9], al ; ret 0x8d43
0x0000000000608d08 : or byte ptr [rbp - 0x12], dh ; jmp qword ptr [rdi]
0x00000000004d8f04 : or byte ptr [rbp - 0x27], dh ; ret
0x00000000004d8ecb : or byte ptr [rbp - 0x2e], dh ; ret
0x00000000005e4f38 : or byte ptr [rbp - 0x443fffff], ch ; jmp 0x5e4f46
0x00000000004125d4 : or byte ptr [rbp - 0x47], dh ; ret
0x00000000005e8aa0 : or byte ptr [rbp - 0x68bffffe], bl ; int1 ; jmp qword ptr [rax]
0x00000000005e4d20 : or byte ptr [rbp - 0x6a5fffff], ah ; jmp 0x5e4d2e
0x000000000051250f : or byte ptr [rbp - 0x77], cl ; ret
0x000000000051250e : or byte ptr [rbp - 0x77], r9b ; ret
0x000000000059b4d1 : or byte ptr [rbp - 0x79f03ba0], bh ; sbb al, byte ptr [rcx] ; int 0x80
0x000000000053a0f4 : or byte ptr [rbp - 0xe], ch ; dec dword ptr [rax - 0x77] ; ret
0x00000000005e4880 : or byte ptr [rbx + 0x27200001], dl ; jmp 0x5e488e
0x00000000005b6196 : or byte ptr [rbx + 0x2b315e11], al ; jrcxz 0x5b6170 ; push rdi ; ret
0x0000000000461880 : or byte ptr [rbx + 0x41], bl ; pop rsi ; jmp rax
0x00000000004e0d02 : or byte ptr [rbx + 0x41], bl ; pop rsi ; jmp rcx
0x00000000004c7607 : or byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; jmp rax
0x000000000040258c : or byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000048c208 : or byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000402488 : or byte ptr [rbx + 0x41], bl ; pop rsi ; ret
0x000000000046baa0 : or byte ptr [rbx + 0x41], bl ; pop rsp ; pop r14 ; pop r15 ; jmp rax
0x000000000045bd94 : or byte ptr [rbx + 0x41], bl ; pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000417aa8 : or byte ptr [rbx + 0x41], bl ; pop rsp ; pop r14 ; pop r15 ; ret
0x00000000004360ac : or byte ptr [rbx + 0x5b038900], cl ; ret
0x0000000000402e2f : or byte ptr [rbx + 0x5d], bl ; ret
0x00000000005e7320 : or byte ptr [rbx + 2], al ; add byte ptr [rax], ah ; adc eax, esi ; jmp qword ptr [rax]
0x00000000005ebcc0 : or byte ptr [rbx + 3], ah ; add byte ptr [rax], dh ; clc ; jmp qword ptr [rax]
0x00000000005eba30 : or byte ptr [rbx + 3], bl ; add al, dh ; cmp al, -8 ; jmp qword ptr [rax]
0x00000000005ea6a8 : or byte ptr [rbx + rax], cl ; add byte ptr [rax], al ; jbe 0x5ea6ac ; jmp qword ptr [rax]
0x00000000004e76e0 : or byte ptr [rbx + rcx*4 + 7], cl ; mov rdi, rax ; jmp r9
0x00000000004d50a2 : or byte ptr [rbx + rsi + 0x44], cl ; int 0x80
0x0000000000599d96 : or byte ptr [rbx - 0x28698f33], 0x4f ; stosb byte ptr [rdi], al ; ret
0x000000000043ed8d : or byte ptr [rbx - 0x3d76b7cd], cl ; call 0x46b098
0x0000000000564b7f : or byte ptr [rbx - 0x448afe12], al ; ret
0x00000000004f63e4 : or byte ptr [rbx], ah ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000004a37f9 : or byte ptr [rcx + 0x29], cl ; ret 0xb941
0x00000000004d299a : or byte ptr [rcx + 0x31], al ; ret
0x00000000004450ca : or byte ptr [rcx + 0x33], al ; push rdi ; or al, 0xfffffffffffffff3 ; ret
0x000000000046f821 : or byte ptr [rcx + 0x48d689f7], cl ; mov edx, ecx ; call rax
0x0000000000551193 : or byte ptr [rcx + 0x5e415bd8], cl ; pop r15 ; ret
0x0000000000419de1 : or byte ptr [rcx + 0xf], al ; mov dh, 0x5c ; insb byte ptr [rdi], dx ; add dword ptr [rcx], ecx ; ret
0x00000000004147cf : or byte ptr [rcx + 0xf], al ; mov dh, 0x5d ; add dword ptr [rax + 9], ecx ; ret
0x0000000000415dbe : or byte ptr [rcx + 0xf], al ; mov dh, 0x5e ; add dword ptr [rax + 9], ecx ; ret
0x0000000000487e99 : or byte ptr [rcx + 1], bh ; mov eax, ecx ; pop rbx ; ret
0x0000000000561d17 : or byte ptr [rcx + 1], cl ; ret
0x0000000000561e6c : or byte ptr [rcx + 1], cl ; ret 0x1148
0x00000000005ec0c0 : or byte ptr [rcx + 3], dh ; add al, dh ; jo 0x5ec0c6 ; jmp qword ptr [rax]
0x00000000005e44c8 : or byte ptr [rcx + rax - 0x154ad000], al ; jmp qword ptr [rax]
0x00000000005e2ee0 : or byte ptr [rcx + rax], ah ; add al, dh ; mov ah, bh ; jmp qword ptr [rax]
0x000000000045698e : or byte ptr [rcx + rcx*4 + 0x33], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004d78f4 : or byte ptr [rcx + rcx*4 - 0x11], cl ; call 0x4f3b16
0x000000000043ea38 : or byte ptr [rcx + rcx*4 - 0x11], cl ; call r15
0x00000000004c461e : or byte ptr [rcx + rcx*4 - 0x11], cl ; mov rcx, r14 ; call rax
0x000000000045f531 : or byte ptr [rcx + rcx*4 - 0x1e], cl ; call rax
0x000000000046b3b6 : or byte ptr [rcx + rcx*4 - 0x38], al ; ret
0x000000000049faee : or byte ptr [rcx + rcx*4 - 0x40], al ; pop rdx ; ret
0x00000000004c41b1 : or byte ptr [rcx + rcx*4 - 0xa], cl ; mov rdx, r14 ; call rax
0x000000000043e3b3 : or byte ptr [rcx + rcx*4 - 1], cl ; call r14
0x00000000004313dd : or byte ptr [rcx + rcx*4 - 1], cl ; mov rsi, r14 ; call rax
0x00000000005506ab : or byte ptr [rcx + rcx*4 - 7], al ; call rax
0x00000000004eaa74 : or byte ptr [rcx + rsi*8 - 1], dh ; sub edx, eax ; mov eax, edx ; ret
0x00000000005e8d60 : or byte ptr [rcx - 0x154ffffe], ch ; int1 ; jmp qword ptr [rax]
0x00000000004cbed0 : or byte ptr [rcx - 0x3976b339], cl ; jmp r9
0x00000000004cbecf : or byte ptr [rcx - 0x3976b339], r9b ; jmp r9
0x0000000000536634 : or byte ptr [rcx - 0x3ea57d87], bl ; ret 0x481e
0x0000000000507fa2 : or byte ptr [rcx - 0x3f], al ; ret 0x440a
0x00000000005a8617 : or byte ptr [rcx - 0x3f], ch ; call rdi
0x00000000004631b3 : or byte ptr [rcx - 0x73], cl ; push rsp ; ret
0x0000000000486aa9 : or byte ptr [rcx - 0x77], cl ; or dword ptr [rdx - 0x3d], ebx ; pop rdx ; ret
0x00000000004823fb : or byte ptr [rcx - 0x77], cl ; ret
0x00000000004931c2 : or byte ptr [rcx - 0x77], cl ; ret 0x8b48
0x0000000000471ce6 : or byte ptr [rcx - 0x77], cl ; xor ecx, dword ptr [rcx - 0x7d] ; ret
0x00000000004a41f9 : or byte ptr [rcx - 0x7d], 0xc4 ; adc byte ptr [rcx], bh ; ret
0x0000000000563a3e : or byte ptr [rcx - 0x7d], cl ; ret
0x000000000040ca64 : or byte ptr [rcx - 0x7f], al ; jmp qword ptr [rax]
0x0000000000505d39 : or byte ptr [rcx - 0x7f], al ; ret
0x0000000000505d38 : or byte ptr [rcx - 0x7f], r8b ; ret
0x00000000004564c3 : or byte ptr [rcx - 1], 0xc1 ; mov qword ptr [rdi], r9 ; ret
0x00000000005141ca : or byte ptr [rcx - 1], al ; leave ; jne 0x5141b7 ; ret
0x000000000052bc91 : or byte ptr [rcx - 9], al ; ret
0x0000000000530b91 : or byte ptr [rcx - 9], al ; ret 0x800
0x0000000000561ceb : or byte ptr [rcx - 9], cl ; and dword ptr [rcx + 1], ecx ; ret 0x1149
0x0000000000506e12 : or byte ptr [rcx - 9], cl ; ret
0x0000000000561cea : or byte ptr [rcx - 9], r9b ; and dword ptr [rcx + 1], ecx ; ret 0x1149
0x00000000005eae6c : or byte ptr [rcx], 0xf7 ; call qword ptr [rax]
0x0000000000542a06 : or byte ptr [rcx], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000431903 : or byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000053f723 : or byte ptr [rcx], al ; jne 0x53f736 ; mov eax, dword ptr [rsi + 0x28] ; mov dword ptr [rdi], eax ; ret
0x00000000005eb160 : or byte ptr [rcx], bh ; add eax, dword ptr [rax] ; jp 0x5eb165 ; jmp qword ptr [rax]
0x00000000004c1a2b : or byte ptr [rcx], bh ; ret 0x807c
0x00000000006100f8 : or byte ptr [rcx], bl ; call qword ptr [rax]
0x00000000005ea5b0 : or byte ptr [rcx], cl ; add eax, dword ptr [rax] ; sal byte ptr [rax - 0xa], 1 ; jmp qword ptr [rax]
0x0000000000411576 : or byte ptr [rcx], cl ; and eax, 1 ; or eax, ecx ; ret
0x000000000045e68a : or byte ptr [rcx], cl ; enter -0x49f1, 0x55 ; add ecx, dword ptr [rcx] ; ret 0x5489
0x000000000045e2ff : or byte ptr [rcx], cl ; enter 0xf41, -0x4a ; push rax ; add ecx, dword ptr [rcx] ; ret 0xf41
0x0000000000503e6f : or byte ptr [rcx], cl ; ret
0x00000000004802ac : or byte ptr [rcx], cl ; ret 0x8941
0x00000000004c2272 : or byte ptr [rcx], cl ; ret 0x8c8b
0x000000000047e76d : or byte ptr [rcx], cl ; ret 0xb60f
0x0000000000480275 : or byte ptr [rcx], cl ; ret 0xf41
0x00000000004ee818 : or byte ptr [rcx], cl ; ret 0xf45
0x0000000000540ccc : or byte ptr [rcx], dh ; div byte ptr [rcx] ; leave ; mov rdi, r12 ; call rax
0x00000000005621c8 : or byte ptr [rcx], dh ; fisttp dword ptr [rcx + 1] ; ret 0x1149
0x0000000000491b28 : or byte ptr [rcx], dh ; ret 0xe281
0x00000000004adeef : or byte ptr [rcx], dh ; test byte ptr [rax - 0x77], -0x39 ; pop rax ; jmp rcx
0x00000000005605e4 : or byte ptr [rdi + 0x18], 2 ; ret
0x00000000005b2a2f : or byte ptr [rdi + 0x1fcfe49e], dh ; ret 0xd955
0x0000000000496410 : or byte ptr [rdi + 0x30], 1 ; mov eax, 1 ; ret
0x000000000049b5a0 : or byte ptr [rdi + 0x50], 1 ; mov eax, 1 ; ret
0x000000000050c800 : or byte ptr [rdi + 0x74], 6 ; mov eax, 1 ; ret
0x00000000004c9c4d : or byte ptr [rdi + rcx - 0x41], dh ; add byte ptr [rax], al ; add al, byte ptr [rax] ; call rax
0x00000000004967e5 : or byte ptr [rdi], al ; sar eax, 3 ; pop rdx ; ret
0x00000000005e29e8 : or byte ptr [rdi], cl ; add dword ptr [rax], eax ; sal bh, -0x1b ; jmp qword ptr [rax]
0x000000000048d1a7 : or byte ptr [rdi], cl ; mov bh, 4 ; and r8d, 1 ; ret
0x0000000000549d43 : or byte ptr [rdi], cl ; mov dh, 0x53 ; add dword ptr [rcx], ecx ; ret 0xbfbe
0x000000000054eec9 : or byte ptr [rdi], cl ; mov dh, 0x53 ; add dword ptr [rcx], ecx ; ret 0xc0be
0x0000000000549d5f : or byte ptr [rdi], cl ; mov dh, 0x53 ; add ecx, dword ptr [rcx] ; ret 0xbfbe
0x0000000000549db3 : or byte ptr [rdi], cl ; mov dh, 0x53 ; or dword ptr [rcx], ecx ; ret 0xbfbe
0x0000000000549dcf : or byte ptr [rdi], cl ; mov dh, 0x53 ; or ecx, dword ptr [rcx] ; ret 0xbfbe
0x0000000000549e07 : or byte ptr [rdi], cl ; mov dh, 0x53 ; wbinvd ; ret 0xbfbe
0x0000000000438df6 : or byte ptr [rdi], cl ; mov dh, 0x5d ; add dword ptr [rcx], ecx ; ret
0x00000000005aeb58 : or byte ptr [rdi], cl ; ret
0x000000000048d469 : or byte ptr [rdi], cl ; test ecx, edx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000046c162 : or byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x00000000005e7060 : or byte ptr [rdi], dh ; add al, byte ptr [rax] ; xor ch, al ; out dx, eax ; jmp qword ptr [rax]
0x000000000043312a : or byte ptr [rdi], dl ; ret
0x00000000004967e4 : or byte ptr [rdi], r8b ; sar eax, 3 ; pop rdx ; ret
0x00000000005e83a8 : or byte ptr [rdx + 0x21a00002], al ; int1 ; jmp qword ptr [rax]
0x00000000005a9ad4 : or byte ptr [rdx + 0x69], bh ; ret
0x000000000043f55c : or byte ptr [rdx + 0xfc9851f], cl ; xchg eax, esp ; ret 0xdb84
0x00000000005e8e48 : or byte ptr [rdx + rax - 0xe0ac000], ch ; jmp qword ptr [rax]
0x00000000005e5070 : or byte ptr [rdx - 0x1bafffff], dh ; jmp 0x5e507e
0x00000000005e89a0 : or byte ptr [rdx - 0x6abffffe], bl ; int1 ; jmp qword ptr [rax]
0x0000000000506d99 : or byte ptr [rdx - 0x77], al ; push rsp ; xchg eax, edi ; adc byte ptr [rax], al ; ret 0x8a44
0x0000000000506d63 : or byte ptr [rdx - 0x77], al ; push rsp ; xchg eax, edi ; or byte ptr [rax], al ; ret 0x8a44
0x0000000000506dcf : or byte ptr [rdx - 0x77], al ; push rsp ; xchg eax, edi ; sbb byte ptr [rax], al ; ret 0x8a44
0x0000000000611db8 : or byte ptr [rdx - 0xd], ch ; call qword ptr [rcx]
0x00000000005e9f6c : or byte ptr [rdx], 0xf6 ; call qword ptr [rax]
0x00000000004f6424 : or byte ptr [rdx], ah ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x0000000000432670 : or byte ptr [rdx], al ; add byte ptr [rax], al ; mov eax, 0x573e20 ; ret
0x00000000005e6519 : or byte ptr [rdx], al ; add byte ptr [rax], dh ; xchg eax, esi ; out dx, al ; call rax
0x00000000005ea430 : or byte ptr [rdx], al ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0xa], al ; jmp qword ptr [rax]
0x00000000005b41a9 : or byte ptr [rdx], al ; lahf ; adc eax, dword ptr [rax - 2] ; ret
0x00000000005957f3 : or byte ptr [rdx], dl ; pop rdx ; ret
0x00000000005e6a90 : or byte ptr [rip - 0xecffffe], bl ; out dx, al ; jmp qword ptr [rax]
0x00000000005a4590 : or byte ptr [rsi + 0x48], ch ; ret
0x000000000059da5b : or byte ptr [rsi + 0x4d], ch ; ret
0x00000000005954b6 : or byte ptr [rsi + 0x4e], ch ; leave ; call 0xffffffff848116e7
0x00000000004e1eb3 : or byte ptr [rsi + 0xf], ah ; jmp 0x4e1e7e
0x00000000004e1fbe : or byte ptr [rsi + 0xf], ah ; jmp 0x4e1f89
0x00000000005e7420 : or byte ptr [rsi + 2], al ; add byte ptr [rax], ah ; adc esi, eax ; jmp qword ptr [rax]
0x00000000005ebdb0 : or byte ptr [rsi + 3], ah ; add byte ptr [rax + 0x4d], dl ; clc ; jmp qword ptr [rax]
0x00000000004620da : or byte ptr [rsi + 4], bh ; xor eax, eax ; pop rdx ; ret
0x000000000046b3b4 : or byte ptr [rsi + 8], bh ; mov eax, r9d ; ret
0x00000000005a5115 : or byte ptr [rsi - 0x3e], dh ; ret
0x00000000005e9288 : or byte ptr [rsi - 0x412ffffe], bh ; jmp qword ptr [rax]
0x00000000005e88b0 : or byte ptr [rsi - 0x7a7ffffe], dl ; int1 ; jmp qword ptr [rax]
0x00000000005e8ee8 : or byte ptr [rsi - 0x87ffffe], ch ; int1 ; jmp qword ptr [rax]
0x000000000059dace : or byte ptr [rsi - 0xd], dh ; out dx, eax ; ret
0x000000000050805b : or byte ptr [rsi - 3], cl ; push rbx ; test eax, 0xc10ec7c1 ; ret
0x00000000005b5ba1 : or byte ptr [rsi], al ; jo 0x5b5b5e ; mov dl, -7 ; ret 0xbf6e
0x00000000005e2b90 : or byte ptr [rsi], dl ; add dword ptr [rax], eax ; nop ; sub dh, ah ; jmp qword ptr [rax]
0x00000000005a458f : or byte ptr ss:[rsi + 0x48], ch ; ret
0x00000000005f25d1 : or ch, ah ; call qword ptr [rsi]
0x0000000000617398 : or ch, ah ; hlt ; call qword ptr [rsi]
0x00000000004d5f5a : or ch, al ; fnstenv dword ptr [rbx - 0x24] ; or ch, al ; stc ; out dx, eax ; ret
0x00000000005f69f9 : or ch, al ; jmp qword ptr [rsi]
0x00000000005e329d : or ch, al ; jmp rax
0x00000000004d5f5f : or ch, al ; stc ; out dx, eax ; ret
0x00000000005af68b : or ch, byte ptr [rbp - 0xab5d86d] ; ret
0x000000000052b7bd : or ch, byte ptr [rdx + 0x76] ; leave ; ret 0x2e81
0x000000000044d565 : or ch, byte ptr [rdx + 0x76] ; leave ; ret 0x8581
0x000000000052b7b9 : or ch, byte ptr [rdx + 0x76] ; mov ebx, 0x2e766a0a ; leave ; ret 0x2e81
0x000000000053205d : or ch, byte ptr [rdx + 0x76] ; out -0x52, al ; in eax, dx ; leave ; ret 0x3b81
0x00000000005e5a05 : or ch, ch ; call rax
0x000000000049f2c2 : or cl, al ; loopne 0x49f2d1 ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000005d6ff9 : or cl, al ; ret 0x2343
0x00000000005d74f0 : or cl, al ; ret 0x2cca
0x00000000005e6170 : or cl, bh ; add dword ptr [rax], eax ; rcr byte ptr [rdx], -0x12 ; jmp qword ptr [rax]
0x0000000000436539 : or cl, byte ptr [rax + 0x63] ; ret
0x00000000004e8985 : or cl, byte ptr [rax - 0x75] ; or byte ptr [rax - 0x75], r9b ; jbe 0x4e89a7 ; jmp rax
0x0000000000559b44 : or cl, byte ptr [rax - 0x77] ; fucompi st(0) ; ret
0x00000000005073b8 : or cl, byte ptr [rax - 0x7d] ; rcr byte ptr [rcx], -0xd ; ret
0x000000000054ab01 : or cl, byte ptr [rax - 0x7d] ; ret
0x000000000047df11 : or cl, byte ptr [rax - 0x7d] ; ret 0x4820
0x00000000004c919e : or cl, byte ptr [rax - 0x7d] ; ret 0x8520
0x00000000004667a4 : or cl, byte ptr [rax - 0x7d] ; ret 0xfff8
0x000000000045ac27 : or cl, byte ptr [rax - 1] ; ret
0x0000000000421734 : or cl, byte ptr [rax - 1] ; ret 0x8948
0x00000000004b1e32 : or cl, byte ptr [rbp - 0x7cb70005] ; ret
0x0000000000512621 : or cl, byte ptr [rcx + 0x21] ; ret
0x0000000000446a63 : or cl, byte ptr [rcx + 6] ; and al, 0x5c ; ret 0xacd3
0x000000000045d493 : or cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb60f
0x0000000000459292 : or cl, byte ptr [rip - 0x76b7fffe] ; ret
0x000000000045d492 : or cl, byte ptr cs:[rdi] ; xchg eax, esp ; ret 0xb60f
0x00000000005e9cd8 : or cl, ch ; add al, byte ptr [rax] ; and bh, bh ; cmc ; jmp qword ptr [rax]
0x000000000055a508 : or cl, ch ; ret 0xde
0x00000000006175d8 : or dh, ah ; hlt ; call qword ptr [rsi]
0x0000000000507ae3 : or dh, bh ; ror dword ptr [rcx], cl ; ret
0x0000000000507ce5 : or dh, byte ptr [rcx] ; ret
0x0000000000461a67 : or dh, byte ptr [rcx] ; ror byte ptr [rcx + rcx*4 - 9], cl ; mov rcx, rbx ; call rax
0x00000000005e60b8 : or dh, dh ; add dword ptr [rax], eax ; rol al, -0x13 ; jmp qword ptr [rax]
0x00000000005e9f6d : or dh, dh ; call qword ptr [rax]
0x00000000005e9ead : or dh, dh ; call rax
0x00000000005e9f5d : or dh, dh ; jmp rax
0x00000000004ee0ca : or dh, dh ; ret 0x4902
0x000000000059763e : or dh, dl ; lodsb al, byte ptr [rsi] ; ret 0xd6fb
0x00000000005e5bd0 : or dl, ah ; add dword ptr [rax], eax ; jo 0x5e5c0f ; in eax, dx ; jmp qword ptr [rax]
0x000000000059c714 : or dl, bl ; and al, 0x4f ; ret
0x0000000000531fca : or dl, byte ptr [rbx - 0x2a586eb9] ; ret 0xa88f
0x000000000042887c : or dl, byte ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005fbdc1 : or dl, ch ; jmp rax
0x00000000005aa432 : or dl, cl ; ret 0x4a54
0x0000000000578305 : or dword ptr [r11 - 0x2e], esp ; ret
0x000000000059b273 : or dword ptr [rax + 0x26fc7c73], eax ; ret
0x00000000004e329c : or dword ptr [rax + rax], eax ; nop ; mov eax, 0x5bd490 ; ret
0x00000000004e32dc : or dword ptr [rax + rax], eax ; nop ; mov eax, 0x5bd508 ; ret
0x0000000000541983 : or dword ptr [rax - 0x38140008], esp ; pop rbx ; ret
0x00000000005784f5 : or dword ptr [rax - 0x38495c04], 0xffffffc1 ; ret
0x00000000005619b0 : or dword ptr [rax - 0x77], ecx ; enter 0x415b, 0x5e ; pop r15 ; ret
0x00000000005043fd : or dword ptr [rax - 0x77], ecx ; sbb eax, 0x32a21b ; pop rbx ; ret
0x0000000000504976 : or dword ptr [rax - 0x7d], ecx ; ret
0x000000000043bde9 : or dword ptr [rax - 0x7d], ecx ; ret 0x4802
0x0000000000470a40 : or dword ptr [rax - 1], ecx ; ret
0x000000000059dacd : or dword ptr [rax], 0x76 ; out dx, eax ; ret
0x00000000004abaeb : or dword ptr [rax], 0xc0310002 ; pop rdx ; ret
0x000000000043259e : or dword ptr [rax], eax ; add byte ptr [rax + 0x573de1], bh ; ret
0x0000000000509e0b : or dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004361b1 : or dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000042df01 : or dword ptr [rax], eax ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000455022 : or dword ptr [rax], eax ; pop rbx ; ret
0x000000000059d2cd : or dword ptr [rax], eax ; pushfq ; ret 0x51d8
0x000000000042f046 : or dword ptr [rax], eax ; xor eax, eax ; pop rbx ; pop r14 ; pop r15 ; ret
0x000000000043649d : or dword ptr [rax], eax ; xor eax, eax ; pop rbx ; ret
0x000000000042c529 : or dword ptr [rax], eax ; xor eax, eax ; pop rdx ; ret
0x00000000004306f3 : or dword ptr [rax], eax ; xor ebx, ebx ; mov rax, rbx ; pop rbx ; ret
0x00000000005ada8c : or dword ptr [rax], ebx ; mov edx, 0x31be70df ; ret
0x000000000057cd98 : or dword ptr [rbp + 0x7b], ecx ; ret
0x0000000000507b96 : or dword ptr [rbp + 1], eax ; ret 0xc1c1
0x00000000005077d0 : or dword ptr [rbp + 1], eax ; ret 0xc3c1
0x0000000000578306 : or dword ptr [rbx - 0x2e], esp ; ret
0x00000000005ea5b1 : or dword ptr [rbx], eax ; add al, dl ; jo 0x5ea5b3 ; jmp qword ptr [rax]
0x00000000004892eb : or dword ptr [rbx], ecx ; add byte ptr [rax - 0x77], cl ; ret
0x000000000051092a : or dword ptr [rcx + rcx*4 - 0x2f], ecx ; add rsp, 0x18 ; jmp rax
0x0000000000559f14 : or dword ptr [rcx + rcx*4 - 1], ecx ; call rax
0x0000000000593c08 : or dword ptr [rcx - 0x24], ebp ; push rbx ; test byte ptr [rdi], al ; jmp qword ptr [rdi]
0x0000000000542505 : or dword ptr [rcx - 0x3b7cb718], ecx ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000507f06 : or dword ptr [rcx - 0x3f], eax ; ret 0x440a
0x0000000000543a63 : or dword ptr [rcx - 0x3fce0008], ecx ; pop rdx ; ret
0x00000000005390f8 : or dword ptr [rcx - 1], eax ; retf ; jmp 0x53910a
0x00000000005e28c9 : or dword ptr [rcx], eax ; add byte ptr [rax], dh ; shl ebp, 1 ; call rax
0x00000000004e446c : or dword ptr [rcx], eax ; ret 0xf741
0x00000000005b50fa : or dword ptr [rcx], ebp ; fcomp st(0), st(1) ; ret
0x00000000005d6c11 : or dword ptr [rcx], ebp ; sub byte ptr [rax - 0x1d5fdf80], ah ; ret 0xe022
0x0000000000432fe4 : or dword ptr [rcx], ebx ; ret
0x0000000000549db7 : or dword ptr [rcx], ecx ; ret 0xbfbe
0x000000000040acec : or dword ptr [rcx], esi ; ror byte ptr [rax - 0x7d], -0x3c ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000004d03f4 : or dword ptr [rdi + 0x10], eax ; ret
0x000000000049c9cd : or dword ptr [rdi + 0x14], edx ; xor eax, eax ; pop rdx ; ret
0x0000000000461f3a : or dword ptr [rdi + 0x20], ecx ; mov eax, dword ptr [rax + 0x24] ; mov dword ptr [rdi + 0x24], eax ; ret
0x0000000000461070 : or dword ptr [rdi + 0x20], esi ; ret
0x00000000004b7b40 : or dword ptr [rdi + 0x2c], esi ; ret
0x0000000000544060 : or dword ptr [rdi + 0x4c], esi ; ret
0x00000000004d0424 : or dword ptr [rdi + 0x70], eax ; ret
0x00000000005a3ec6 : or dword ptr [rdi], 0x294f3319 ; ret 0x35cc
0x0000000000441a3b : or dword ptr [rdi], 0xc7894800 ; mov rsi, r15 ; call rbx
0x0000000000578d96 : or dword ptr [rdi], edi ; lahf ; out 8, al ; ret 0x6132
0x0000000000486aac : or dword ptr [rdx - 0x3d], ebx ; pop rdx ; ret
0x000000000060cb15 : or dword ptr [rdx], eax ; add al, cl ; shr edi, cl ; jmp rax
0x00000000005aeb8e : or dword ptr [rip + 0x206348b8], edi ; push rbx ; ret 0x6202
0x000000000058d764 : or dword ptr [rsi + 0x2c], edi ; push rsi ; ret 0x3a22
0x00000000005ac788 : or dword ptr [rsi + 0x5f1f7674], ecx ; xor ch, ch ; ret 0xa9bd
0x00000000004f3d07 : or dword ptr [rsi + 3], edi ; xor edx, edx ; jmp rax
0x00000000004d15e3 : or dword ptr [rsi - 0x76b7fffa], eax ; ret 0x8948
0x0000000000411577 : or dword ptr [rsi], edi ; and eax, 1 ; or eax, ecx ; ret
0x00000000005add44 : or dword ptr [rsi], esp ; jg 0x5add6a ; ja 0x5add54 ; out -6, al ; ret
0x000000000042d740 : or eax, 0x14 ; mov rdx, rax ; jmp 0x42d750
0x000000000059c164 : or eax, 0x21b1e95d ; int 0
0x00000000005a70c2 : or eax, 0x22653a4f ; ret 0xb805
0x00000000004dd296 : or eax, 0x35 ; add byte ptr [rax], al ; pop rax ; ret
0x0000000000485dcf : or eax, 0x39000b3e ; ret
0x00000000004f8f0e : or eax, 0x3b7c8042 ; jmp qword ptr [rax]
0x00000000004f6c76 : or eax, 0x42974e8 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000594e10 : or eax, 0x471cc98e ; ret
0x0000000000598298 : or eax, 0x569ad4d1 ; scasb al, byte ptr [rdi] ; ret 0x2687
0x0000000000504417 : or eax, 0x5b0032a2 ; ret
0x000000000057cef7 : or eax, 0x5d681121 ; pop rcx ; ret
0x000000000059de00 : or eax, 0x6d4caed ; sbb cl, byte ptr [rdi] ; ret 0x22b3
0x000000000050adc8 : or eax, 0x80 ; mov dword ptr [rbx + 0x74], eax ; pop rbx ; ret
0x0000000000408810 : or eax, 0x80 ; ret
0x00000000005d6bc9 : or eax, 0x86a22c2d ; movsb byte ptr [rdi], byte ptr es:[rsi] ; ret
0x00000000005d73cb : or eax, 0x86a2a426 ; bswap esp ; ret
0x0000000000597638 : or eax, 0x884f6857 ; xchg eax, edi ; or dh, dl ; lodsb al, byte ptr [rsi] ; ret 0xd6fb
0x00000000004d4f89 : or eax, 0x88d3094c ; ret 0xc148
0x0000000000424e8f : or eax, 0x89000314 ; ret
0x00000000004866dc : or eax, 0x89480000 ; ret
0x0000000000459293 : or eax, 0x89480002 ; ret
0x0000000000419a9f : or eax, 0x8948000f ; ret
0x00000000004e606b : or eax, 0x89480034 ; ret
0x00000000004d7db6 : or eax, 0x89c18900 ; ret 0xb60f
0x000000000055c740 : or eax, 0xa09ae8 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005e6699 : or eax, 0xa6e00002 ; out dx, al ; call rax
0x0000000000433106 : or eax, 0xb8c30057 ; ret 0x5710
0x000000000043f990 : or eax, 0xbe000000 ; ret 0
0x000000000042b605 : or eax, 0xc031000a ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000508afb : or eax, 0xc141c801 ; ret 0x30a
0x000000000059575f : or eax, 0xc8e347f8 ; mov byte ptr [rdi - 0x22], ch ; outsd dx, dword ptr [rsi] ; ret
0x00000000005aae4a : or eax, 0xcb2412ea ; movsb byte ptr [rdi], byte ptr [rsi] ; call qword ptr [rdi]
0x00000000005a968e : or eax, 0xd855591f ; ret
0x00000000004ce16f : or eax, 0xd889fffc ; pop rbx ; ret
0x00000000005580c6 : or eax, 0xdb74e8 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005a6291 : or eax, 0xe5ca1881 ; ret 0x995d
0x00000000004ecbca : or eax, 0xe8f7894c ; std ; ret 6
0x00000000005b18e6 : or eax, 0xeb00e968 ; ret
0x00000000005a6a3b : or eax, 0xed2a2bf9 ; ret
0x0000000000597d29 : or eax, 0xf276037b ; ret
0x00000000004790a4 : or eax, 0xf88e46e8 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000493caa : or eax, 0xfd70c0e8 ; dec dword ptr [rax - 0x77] ; ret
0x00000000004361bd : or eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000483d31 : or eax, dword ptr [rax] ; add rsp, 0x38 ; ret
0x00000000004ab083 : or eax, dword ptr [rax] ; jmp 0x4ab04d
0x000000000048723e : or eax, dword ptr [rax] ; mov rax, qword ptr [rdi] ; ret
0x000000000042c295 : or eax, dword ptr [rax] ; movsxd rax, dword ptr [rdi + 0x68] ; pop rdx ; ret
0x0000000000429f6e : or eax, dword ptr [rax] ; pop rbx ; ret
0x0000000000435d2b : or eax, dword ptr [rax] ; ret
0x00000000004830ca : or eax, dword ptr [rax] ; ret 0xc2
0x0000000000507afb : or eax, dword ptr [rbp + 1] ; ret 0xc1c1
0x00000000004e46bc : or eax, dword ptr [rcx - 0x77] ; ret
0x000000000044762b : or eax, dword ptr [rdx - 6] ; ret
0x00000000005e6611 : or eax, dword ptr [rdx] ; add byte ptr [rax - 0x5f], dl ; out dx, al ; jmp rax
0x00000000005a1219 : or eax, dword ptr [rdx] ; ret
0x00000000005a4282 : or eax, dword ptr [rip - 0xd473bfb] ; and ecx, dword ptr [rax - 0x56] ; ret 0x426d
0x000000000053068c : or eax, eax ; call qword ptr [rcx]
0x000000000046e13c : or eax, ebp ; cmp ecx, dword ptr ds:[rdi] ; add byte ptr [rcx], ch ; ret
0x000000000046afb2 : or eax, ebx ; mov dword ptr [rsi + 0x14], eax ; pop rbx ; ret
0x000000000045bcb6 : or eax, ecx ; add rsp, 0x28 ; ret
0x000000000045bc53 : or eax, ecx ; add rsp, 0xf8 ; ret
0x000000000046b1e5 : or eax, ecx ; inc r13d ; jne 0x46b1d8 ; jmp 0x46b1b8
0x0000000000404767 : or eax, ecx ; mov qword ptr [rsi + 0x20], rax ; ret
0x000000000049fb08 : or eax, ecx ; pop rdx ; ret
0x000000000040881a : or eax, ecx ; ret
0x0000000000507a79 : or eax, ecx ; ror byte ptr [rdx], -0x77 ; ret
0x00000000004c2cc9 : or eax, ecx ; setns al ; movzx eax, al ; ret
0x00000000005eb9cd : or eax, edi ; jmp rax
0x000000000042d2f3 : or eax, edx ; ret
0x000000000060d349 : or eax, esi ; jmp qword ptr [rdi]
0x00000000005b0d89 : or ebp, dword ptr [rbx + 0x55] ; xchg bh, cl ; ret
0x000000000057e2ef : or ebp, dword ptr [rdx] ; cmc ; imul edx, dword ptr [rsi], -0x7e ; call qword ptr [rdx]
0x000000000059d23a : or ebp, dword ptr [rsi + 0x5b] ; insd dword ptr [rdi], dx ; enter 0x405a, -0xc ; insb byte ptr [rdi], dx ; ret
0x0000000000603899 : or ebp, ebp ; call rsi
0x00000000005fe9d9 : or ebp, ebx ; call qword ptr [rcx]
0x00000000005fbed1 : or ebp, edx ; call rax
0x0000000000606a61 : or ebp, esi ; call rdi
0x00000000005b6325 : or ebx, dword ptr [rax] ; jae 0x5b6399 ; ret 0xeeb6
0x00000000005a04cc : or ebx, dword ptr [rbx] ; ret
0x00000000005a60ee : or ebx, dword ptr [rdx] ; pop rsp ; enter -0x6f25, -0x2e ; ret
0x0000000000572a70 : or ebx, eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bl ; ret
0x0000000000419de8 : or ebx, eax ; mov edi, ebx ; call 0x4360c6
0x000000000060ee09 : or ebx, esi ; call rbx
0x00000000004518a2 : or ebx, esi ; movq qword ptr [r9 + 0x10], mm2 ; ret
0x00000000004e850a : or ecx, dword ptr [rax + 0x31] ; ror dword ptr [rax - 0x77], -0x38 ; pop rbx ; ret
0x000000000047809b : or ecx, dword ptr [rax + 0x39] ; ret 0x2b75
0x00000000004e8e31 : or ecx, dword ptr [rax + 1] ; ret 0xc16b
0x00000000004cb915 : or ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000439d8c : or ecx, dword ptr [rax - 0x7d] ; ret 0x4c02
0x000000000043b248 : or ecx, dword ptr [rax - 1] ; ret
0x00000000005933ea : or ecx, dword ptr [rbx + 0x19] ; ret
0x00000000004830c8 : or ecx, dword ptr [rbx] ; or eax, dword ptr [rax] ; ret 0xc2
0x000000000051257e : or ecx, dword ptr [rcx + 0x21] ; ret 0x894c
0x00000000004e8e5a : or ecx, dword ptr [rcx + 1] ; ret 0x6949
0x000000000053bd77 : or ecx, dword ptr [rcx - 1] ; ret
0x0000000000549dd3 : or ecx, dword ptr [rcx] ; ret 0xbfbe
0x000000000042b860 : or ecx, dword ptr [rdx] ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0x00000000004ef331 : or ecx, dword ptr [rsi] ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000005933e9 : or ecx, dword ptr gs:[rbx + 0x19] ; ret
0x00000000005d7245 : or ecx, eax ; ret
0x000000000042c0af : or ecx, edx ; mov dword ptr [rax + 0x6c], ecx ; mov eax, ecx ; pop rdx ; ret
0x000000000059ac74 : or ecx, esi ; lodsd eax, dword ptr [rsi] ; xlatb ; ret 0x8a8d
0x00000000005d6a47 : or ecx, esp ; ret 0xece
0x00000000005974e8 : or edi, dword ptr [rax + 0x7966c077] ; imul esp, eax, 0x6c ; ret 0xda27
0x00000000005b5c0d : or edi, dword ptr [rsi + rbp*4] ; leave ; add byte ptr [rcx - 0x76], dh ; ret 0xe440
0x0000000000599a73 : or edi, eax ; xchg eax, edx ; sahf ; pop rcx ; jne 0x599adf ; ret
0x0000000000566467 : or edi, edi ; ret
0x0000000000598e3d : or edi, edx ; int1 ; adc ch, dh ; ret
0x00000000005eae6d : or edi, esi ; call qword ptr [rax]
0x00000000004efe7e : or edi, esi ; dec dword ptr [rax - 0x77] ; ret
0x00000000005eae5d : or edi, esi ; jmp rax
0x00000000004c63b0 : or esi, 2 ; mov dword ptr [rdi + 0x20], esi ; ret
0x0000000000429f80 : or esi, dword ptr [rdi] ; mov dword ptr [rdi], esi ; mov eax, esi ; ret
0x00000000005a9e77 : or esi, dword ptr [rsi] ; movsb byte ptr [rdi], byte ptr [rsi] ; xchg rax, r12 ; ret
0x00000000004b87de : or esi, eax ; mov dword ptr [rdi + 0x44], esi ; ret
0x000000000044d433 : or esi, ebx ; ret
0x00000000005e82a5 : or esi, ecx ; call rax
0x00000000005592da : or esi, edi ; dec dword ptr [rax - 0x77] ; ret
0x00000000005e9fad : or esi, esi ; call rax
0x00000000005e9f1d : or esi, esi ; jmp qword ptr [rax]
0x0000000000506c81 : or esi, esi ; jne 0x506c8c ; ret
0x0000000000594a8b : or esp, 0x69 ; ret 0x898e
0x00000000005971ae : or esp, dword ptr [rax - 0x60] ; outsb dx, byte ptr [rsi] ; push r10 ; lahf ; pop rsp ; ret
0x000000000046a1b1 : or esp, dword ptr [rax - 0x76b70001] ; ret
0x00000000005ac971 : or esp, dword ptr [rbx] ; jmp rcx
0x00000000005ac687 : or esp, dword ptr [rdi] ; sar dword ptr [rbp + 0x250c8422], 1 ; ret 0xe942
0x00000000004e3fdd : or esp, dword ptr [rsi + 0xf] ; outsb dx, byte ptr [rsi] ; ret 0xea31
0x00000000005f0879 : or esp, esp ; call qword ptr [rbx]
0x00000000004d03f3 : or qword ptr [rdi + 0x10], rax ; ret
0x00000000004d0423 : or qword ptr [rdi + 0x70], rax ; ret
0x000000000052704d : or r12b, al ; ret
0x00000000005291db : or r12b, r8b ; sar dword ptr [rcx + 0x6e], 0x51 ; or ah, al ; ret
0x0000000000508cb3 : or r15b, r8b ; adc r8b, r14b ; loope 0x508c95 ; ret
0x0000000000523ce3 : or r15b, r8b ; adc r8b, r14b ; loope 0x523cc5 ; ret
0x0000000000537683 : or r15b, r8b ; adc r8b, r14b ; loope 0x537665 ; ret
0x0000000000441652 : or r8b, byte ptr [rax] ; pop rbx ; ret
0x000000000049f2c1 : or r9b, r8b ; loopne 0x49f2d2 ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x000000000042d73f : or rax, 0x14 ; mov rdx, rax ; jmp 0x42d751
0x0000000000419a9e : or rax, 0x8948000f ; ret
0x0000000000564e12 : or rax, r9 ; ret
0x000000000046b1e4 : or rax, rcx ; inc r13d ; jne 0x46b1d9 ; jmp 0x46b1b9
0x0000000000404766 : or rax, rcx ; mov qword ptr [rsi + 0x20], rax ; ret
0x00000000004c2cc8 : or rax, rcx ; setns al ; movzx eax, al ; ret
0x000000000042d2f2 : or rax, rdx ; ret
0x00000000005fe9d8 : or rbp, rbx ; call qword ptr [rcx]
0x000000000042c0ae : or rcx, rdx ; mov dword ptr [rax + 0x6c], ecx ; mov eax, ecx ; pop rdx ; ret
0x0000000000506c80 : or rsi, rsi ; jne 0x506c8d ; ret
0x00000000005e9eac : or sil, sil ; call rax
0x00000000005e9f5c : or sil, sil ; jmp rax
0x0000000000578304 : or word ptr [r11 - 0x2e], sp ; ret
0x00000000005b7b1a : out -0x12, al ; cmp al, -0x75 ; ret
0x00000000005a6e51 : out -0x12, al ; test eax, 0x3c37951e ; ret
0x00000000005e5105 : out -0x15, al ; call rax
0x00000000005a54bb : out -0x15, al ; ret 0x6449
0x00000000005a1a3d : out -0x15, eax ; fdivp st(7) ; cwde ; ret 0x98e5
0x0000000000566cfe : out -0x18, al ; in al, dx ; std ; dec dword ptr [rax - 0x77] ; ret
0x00000000004d704b : out -0x18, al ; out dx, eax ; ret
0x0000000000472077 : out -0x18, al ; ret
0x000000000042f0e8 : out -0x18, al ; ret 0xc43
0x0000000000479c08 : out -0x18, al ; rol byte ptr [rax - 0x76b70008], cl ; ret
0x00000000004ef9ad : out -0x18, al ; std ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000478948 : out -0x18, al ; xchg eax, edx ; xchg eax, ebx ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000466828 : out -0x18, al ; xor cl, byte ptr [rbp] ; add bh, bh ; ret
0x000000000054ae36 : out -0x18, eax ; adc al, -0x19 ; stc ; dec dword ptr [rax - 0x77] ; ret 0xed31
0x00000000004f221a : out -0x18, eax ; adc bl, bh ; lock dec dword ptr [rax - 0x77] ; ret 0xed31
0x000000000046e297 : out -0x18, eax ; and ebx, dword ptr [rdi - 1] ; dec dword ptr [rax - 0x77] ; ret 0x3145
0x00000000004d7af2 : out -0x18, eax ; cwde ; mov word ptr [rdx], es ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005482f6 : out -0x18, eax ; fdiv st(1), st(0) ; dec dword ptr [rax - 0x77] ; ret
0x00000000004f744c : out -0x18, eax ; fisubr word ptr [rax - 0x76b70010] ; ret
0x00000000004ba7bf : out -0x18, eax ; imul ebx, edi, -1 ; dec dword ptr [rax - 0x77] ; ret
0x00000000004b0f47 : out -0x18, eax ; jae 0x4b0f85 ; sti ; dec dword ptr [rax - 0x77] ; ret
0x00000000004bc475 : out -0x18, eax ; jge 0x4bc47c ; dec dword ptr [rax - 0x77] ; ret
0x00000000004c2e49 : out -0x18, eax ; jno 0x4c2e68 ; cli ; dec dword ptr [rax - 0x77] ; ret
0x0000000000407eb7 : out -0x18, eax ; ret
0x00000000004b2e18 : out -0x18, eax ; ret 0x409
0x0000000000440e48 : out -0x18, eax ; ret 0xa54
0x0000000000547cd8 : out -0x18, eax ; ret 0xf322
0x000000000054263c : out -0x18, eax ; sahf ; jg 0x542644 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000457752 : out -0x18, eax ; sub byte ptr [rbx - 0x76b80000], ah ; ret
0x00000000005f4a01 : out -0x1a, al ; call qword ptr [rcx]
0x00000000005f4a59 : out -0x1a, al ; jmp rbx
0x00000000004b7d25 : out -0x1b, eax ; add al, byte ptr [rax] ; pop rbx ; pop r14 ; pop r15 ; ret
0x00000000005b160f : out -0x1c, al ; ret
0x00000000005f2171 : out -0x1c, eax ; call rcx
0x00000000005efde1 : out -0x1d, al ; call qword ptr [rdx]
0x00000000005efd81 : out -0x1d, al ; call qword ptr [rsi]
0x00000000005efe11 : out -0x1d, al ; call rbx
0x00000000005e1a5d : out -0x1d, al ; jmp rax
0x00000000005f0071 : out -0x1d, eax ; call qword ptr [rdi]
0x0000000000466ce6 : out -0x23, al ; str word ptr [rax - 0x7d] ; ret
0x00000000005ad3e1 : out -0x24, al ; test byte ptr [rbx - 0x18], 0x27 ; fcmovbe st(0), st(1) ; ret 0x13e6
0x00000000004cb396 : out -0x27, al ; cli ; dec dword ptr [rax - 0x77] ; ret
0x00000000005b4eba : out -0x27, eax ; ret
0x0000000000593d63 : out -0x2e, eax ; jo 0x593cfa ; ret 0x65aa
0x000000000051ae31 : out -0x3c, eax ; ret
0x00000000004b8d99 : out -0x3d, al ; mov rax, qword ptr [rdi + 8] ; ret
0x00000000004a2bcb : out -0x47, al ; jmp 0x4a2bd7
0x00000000004a4665 : out -0x47, al ; jmp 0x4a4671
0x000000000048286a : out -0x4d, al ; ret 0x5688
0x0000000000532060 : out -0x52, al ; in eax, dx ; leave ; ret 0x3b81
0x00000000004473e0 : out -0x6b, al ; outsb dx, byte ptr [rsi] ; out -0x6b, al ; outsb dx, byte ptr [rsi] ; stosb byte ptr [rdi], al ; jmp rsi
0x00000000004473e4 : out -0x6b, al ; outsb dx, byte ptr [rsi] ; stosb byte ptr [rdi], al ; jmp rsi
0x00000000005b0753 : out -0x72, al ; fisubr dword ptr [rdi - 0x5f] ; pop rax ; sbb edi, ecx ; jmp qword ptr [rsi]
0x00000000005440f1 : out -0x77, al ; ret 0x37e8
0x00000000004d1afa : out -0x77, al ; ret 0x6ee8
0x00000000004d1f7a : out -0x77, al ; ret 0xeee8
0x00000000004d9ae9 : out -0x77, eax ; fimul word ptr [rax - 0x77] ; ret 0xece8
0x00000000004f9345 : out -0x77, eax ; ret 0x13e8
0x000000000040c9c8 : out -0x77, eax ; ret 0x30e8
0x00000000004ae376 : out -0x77, eax ; ret 0x42e8
0x000000000040cda1 : out -0x77, eax ; ret 0x57e8
0x000000000040c098 : out -0x77, eax ; ret 0x60e8
0x000000000048017c : out -0x77, eax ; ret 0x830f
0x00000000005b5290 : out -0x78, eax ; jge 0x5b523f ; jns 0x5b522a ; ret
0x00000000005b528f : out -0x78, eax ; jge 0x5b5240 ; jns 0x5b522b ; ret
0x00000000005b528e : out -0x78, eax ; jge 0x5b5241 ; jns 0x5b522c ; ret
0x00000000004215b6 : out -0xa, al ; ret
0x0000000000442b70 : out -0xa, eax ; ret
0x00000000005e98cd : out -0xb, al ; call rax
0x0000000000617859 : out -0xc, al ; call qword ptr [rax]
0x00000000006176a9 : out -0xc, al ; call qword ptr [rdi]
0x00000000006175d9 : out -0xc, al ; call qword ptr [rsi]
0x00000000006176c1 : out -0xc, al ; jmp qword ptr [rdi]
0x0000000000617781 : out -0xc, eax ; call qword ptr [rax]
0x0000000000617891 : out -0xc, eax ; call qword ptr [rcx]
0x00000000006178a9 : out -0xc, eax ; call qword ptr [rdx]
0x00000000005e2b36 : out -1, al ; mov eax, 0x70000114 ; and al, 0xffffffffffffffe6 ; call rax
0x00000000005e2b8e : out -1, al ; or byte ptr [rsi], dl ; add dword ptr [rax], eax ; nop ; sub dh, ah ; jmp qword ptr [rax]
0x00000000005e2c2e : out -1, al ; test al, 0x18 ; add dword ptr [rax], eax ; push rax ; jae 0x5e2c26 ; jmp rax
0x000000000048db73 : out -1, eax ; dec dword ptr [rax - 0x77] ; ret
0x00000000005e321e : out -1, eax ; mov al, 0x31 ; add dword ptr [rax], eax ; rol byte ptr [rax], -0x18 ; call rax
0x00000000005e30ee : out -1, eax ; mov eax, 0xe000012c ; loopne 0x5e30e7 ; call rax
0x00000000005e2ede : out -1, eax ; or byte ptr [rcx + rax], ah ; add al, dh ; mov ah, bh ; jmp qword ptr [rax]
0x00000000005f512a : out -1, eax ; ret
0x000000000041fc36 : out -1, eax ; ror byte ptr [rax - 0x77], 1 ; ret
0x00000000005e2dfe : out -1, eax ; test al, 0x1f ; add dword ptr [rax], eax ; adc byte ptr [rbp - 0x19], ah ; call rax
0x00000000005418d0 : out -5, eax ; dec dword ptr [rax - 1] ; ret
0x000000000059775b : out -5, eax ; movsb byte ptr [rdi], byte ptr [rsi] ; cmp dword ptr [rbp - 0x31], esp ; jg 0x5977a7 ; ret
0x00000000005add4a : out -6, al ; ret
0x00000000005a74cd : out -6, al ; ret 0x9cc7
0x00000000005477b3 : out -7, eax ; dec dword ptr [rax - 0x77] ; ret
0x000000000054ae39 : out -7, eax ; dec dword ptr [rax - 0x77] ; ret 0xed31
0x000000000049cb86 : out -9, al ; add al, byte ptr [rax] ; xor eax, eax ; pop rdx ; ret
0x00000000004e287c : out -9, al ; lcall ptr [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0x00000000004e2675 : out -9, eax ; dec dword ptr [rax - 0x77] ; ret
0x0000000000599a08 : out -9, eax ; xchg eax, esi ; ret
0x00000000005959b4 : out 0x10, eax ; ret
0x0000000000444fe5 : out 0x1b, eax ; sbb ebx, dword ptr [rbx] ; sbb eax, dword ptr [rcx - 0x77] ; ret 0x8941
0x00000000005a607e : out 0x27, al ; ret 0xd2db
0x00000000004e49a2 : out 0x2c, al ; inc byte ptr [rcx + 9] ; ret
0x000000000057ccd0 : out 0x32, al ; ret
0x0000000000442dbc : out 0x41, al ; call rdi
0x000000000040b251 : out 0x41, eax ; call rdi
0x000000000040bce1 : out 0x41, eax ; call rsi
0x0000000000490559 : out 0x44, al ; mov edx, edi ; call rax
0x000000000040b3b0 : out 0x44, eax ; mov edx, esi ; call r15
0x00000000004c3d73 : out 0x48, al ; mov ecx, ebx ; call rax
0x00000000005506a6 : out 0x48, al ; mov edx, dword ptr [rsp + 8] ; mov ecx, r15d ; call rax
0x00000000004ae789 : out 0x48, al ; mov edx, ebp ; mov r8, r15 ; call rax
0x0000000000415c61 : out 0x48, al ; mov edx, ebx ; call 0x401f46
0x0000000000442d19 : out 0x48, eax ; lea esi, dword ptr [rsp + 0x46] ; call r15
0x00000000004b8c1f : out 0x48, eax ; mov ecx, ebx ; call r8
0x000000000048e500 : out 0x48, eax ; mov esi, dword ptr [rsp + 0x38] ; call rcx
0x00000000004c4fbb : out 0x48, eax ; mov esi, ebp ; mov rcx, r13 ; call rax
0x000000000047f168 : out 0x48, eax ; mov esi, edi ; mov rdx, r15 ; call r14
0x00000000005a6de3 : out 0x48, eax ; push rax ; lea ebp, dword ptr [rbx - 0x2e] ; mov bl, 0x3c ; ret
0x00000000004d160d : out 0x4c, al ; mov edx, ebp ; mov ecx, ebp ; call rax
0x000000000053eef0 : out 0x4c, al ; mov edx, edi ; call rax
0x00000000004e616b : out 0x4c, al ; mov edx, edi ; mov ecx, r14d ; call rax
0x00000000004cb569 : out 0x4c, al ; mov edx, edi ; mov rcx, r14 ; call rax
0x00000000004219b3 : out 0x4c, al ; mov edx, esi ; call rbx
0x00000000004fdbc1 : out 0x4c, eax ; mov ecx, ebp ; call rbx
0x00000000004d4a56 : out 0x4c, eax ; mov esi, ebp ; call r15
0x000000000053f07d : out 0x4c, eax ; mov esi, edi ; call rax
0x000000000054dfef : out 0x54, al ; add al, ch ; pop rcx ; ret 0xfff9
0x0000000000505849 : out 0x5b, al ; ret
0x0000000000599ffb : out 0x65, al ; push -0x58 ; outsb dx, byte ptr [rsi] ; int1 ; ret
0x000000000058b695 : out 0x6b, eax ; push rbp ; stc ; ret 0x98f0
0x0000000000578da8 : out 0x72, al ; ret
0x000000000057cbf4 : out 0x78, al ; dec byte ptr [rcx + 0x3fab0950] ; ret 0x5ff6
0x00000000004473ea : out 0x7e, al ; stosb byte ptr [rdi], al ; jmp rsi
0x000000000042791f : out 0xb, al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000054722d : out 0xf, eax ; xchg eax, esi ; ret 0xd184
0x0000000000432cbd : out 1, al ; add byte ptr [rax], al ; mov eax, 0x573eba ; ret
0x00000000005e5d19 : out 1, eax ; add byte ptr [rax + 0x68], dl ; in eax, dx ; jmp rax
0x00000000005e5ce9 : out 1, eax ; add byte ptr [rax], al ; in eax, dx ; jmp qword ptr [rax]
0x00000000005e9c39 : out 2, al ; add byte ptr [rax], al ; cli ; cmc ; call rax
0x00000000004eb53e : out 4, al ; add byte ptr [rax - 1], bh ; ret
0x00000000005d4fa7 : out 6, eax ; ret
0x0000000000578d99 : out 8, al ; ret 0x6132
0x0000000000411575 : out 8, eax ; or dword ptr [rsi], edi ; and eax, 1 ; or eax, ecx ; ret
0x00000000004745a3 : out dx, al ; add al, -0x77 ; ret 0xc148
0x00000000005e9ea9 : out dx, al ; add al, byte ptr [rax] ; or sil, sil ; call rax
0x0000000000564e33 : out dx, al ; add dword ptr [rax - 0x73], ecx ; jg 0x564e43 ; jne 0x564e38 ; ret
0x000000000060b095 : out dx, al ; add dword ptr [rax], eax ; fdivr st(1) ; out dx, al ; call qword ptr [rax]
0x0000000000564aeb : out dx, al ; add dword ptr [rbp - 0x16], esi ; ret
0x0000000000564b81 : out dx, al ; add dword ptr [rbp - 0x45], esi ; ret
0x00000000005e61a6 : out dx, al ; call qword ptr [rax]
0x0000000000606f92 : out dx, al ; call qword ptr [rbx]
0x0000000000606f3a : out dx, al ; call qword ptr [rcx]
0x0000000000607bca : out dx, al ; call qword ptr [rdi]
0x0000000000606e12 : out dx, al ; call qword ptr [rdx]
0x0000000000607be2 : out dx, al ; call qword ptr [rsi]
0x000000000044320e : out dx, al ; call r14
0x000000000042c72d : out dx, al ; call r15
0x000000000043cded : out dx, al ; call rax
0x0000000000608822 : out dx, al ; call rbx
0x0000000000606a62 : out dx, al ; call rdi
0x00000000006099ea : out dx, al ; call rsi
0x000000000057d2b0 : out dx, al ; cld ; jmp qword ptr [rcx]
0x00000000004bd583 : out dx, al ; cli ; dec dword ptr [rax - 0x77] ; ret
0x00000000005b7b1b : out dx, al ; cmp al, -0x75 ; ret
0x00000000005e67c6 : out dx, al ; dec dword ptr [rax - 0x5ffffdee] ; ret 0xffee
0x0000000000552fab : out dx, al ; dec dword ptr [rax - 0x77] ; ret
0x00000000005e6306 : out dx, al ; dec dword ptr [rax] ; add byte ptr [rdx], al ; add al, dh ; push rax ; out dx, al ; jmp qword ptr [rax]
0x00000000005e6b66 : out dx, al ; dec dword ptr [rax] ; and byte ptr [rdx], al ; add byte ptr [rax - 7], dh ; out dx, al ; jmp qword ptr [rax]
0x00000000005e6586 : out dx, al ; dec dword ptr [rax] ; or al, byte ptr [rdx] ; add byte ptr [rax], dl ; xchg eax, edi ; out dx, al ; jmp qword ptr [rax]
0x00000000005e6a8e : out dx, al ; dec dword ptr [rax] ; sbb eax, 0xf1300002 ; out dx, al ; jmp qword ptr [rax]
0x00000000005e616e : out dx, al ; dec dword ptr [rax] ; stc ; add dword ptr [rax], eax ; rcr byte ptr [rdx], -0x12 ; jmp qword ptr [rax]
0x00000000005e65be : out dx, al ; dec eax ; or al, byte ptr [rdx] ; add al, dh ; wait ; out dx, al ; jmp rax
0x00000000005e660e : out dx, al ; dec eax ; or eax, dword ptr [rdx] ; add byte ptr [rax - 0x5f], dl ; out dx, al ; jmp rax
0x000000000057d9a2 : out dx, al ; fdiv dword ptr [rdi - 0x42] ; and esp, ebp ; sub dword ptr [rbp + 0x15], eax ; ret 0xefdf
0x0000000000617be9 : out dx, al ; hlt ; call qword ptr [rax]
0x00000000005e63c6 : out dx, al ; inc eax ; add eax, dword ptr [rdx] ; add byte ptr [rax], dl ; jb 0x5e63c6 ; jmp rax
0x00000000005e8dad : out dx, al ; int1 ; call qword ptr [rax]
0x00000000005a572a : out dx, al ; jbe 0x5a573e ; ret 0x6dd1
0x00000000005b41f2 : out dx, al ; je 0x5b4251 ; ret
0x00000000005e6176 : out dx, al ; jmp qword ptr [rax]
0x000000000060983a : out dx, al ; jmp qword ptr [rbx]
0x0000000000606972 : out dx, al ; jmp qword ptr [rdi]
0x00000000006071e2 : out dx, al ; jmp qword ptr [rdx]
0x00000000005e6196 : out dx, al ; jmp rax
0x0000000000607212 : out dx, al ; jmp rbx
0x0000000000607362 : out dx, al ; jmp rsi
0x0000000000609baa : out dx, al ; jmp rsp
0x00000000005a825a : out dx, al ; jp 0x5a821e ; ret 0x50e7
0x00000000005e61c6 : out dx, al ; lcall ptr [rax + 0x100001fa] ; sub ch, dh ; call rax
0x00000000004aa36d : out dx, al ; mov qword ptr [rsp + 0x28], rdx ; mov r8, r14 ; call rax
0x00000000004c4fbe : out dx, al ; mov rcx, r13 ; call rax
0x00000000004c53f3 : out dx, al ; mov rcx, rbx ; call r14
0x000000000048ff5b : out dx, al ; mov rdx, qword ptr [rsp + 8] ; call r14
0x00000000004c540c : out dx, al ; mov rdx, r13 ; mov rcx, rbx ; call r14
0x000000000046154c : out dx, al ; mov rdx, r14 ; call rax
0x000000000054ad94 : out dx, al ; mov rdx, r15 ; call rax
0x000000000054ae83 : out dx, al ; mov rdx, r15 ; call rcx
0x00000000004e5ec9 : out dx, al ; mov rdx, r15 ; mov ecx, r14d ; call rax
0x00000000004aa1ca : out dx, al ; mov rdx, rbp ; mov r8, r14 ; call rax
0x00000000004aa00f : out dx, al ; mov rdx, rbx ; mov r8, r14 ; call rax
0x00000000004dd184 : out dx, al ; or byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000005a8616 : out dx, al ; or byte ptr [rcx - 0x3f], ch ; call rdi
0x00000000005a819a : out dx, al ; pop rcx ; ret
0x00000000005aa764 : out dx, al ; pop rcx ; xchg eax, esp ; sub al, -0x23 ; stosb byte ptr [rdi], al ; ret 0x6595
0x00000000005ade60 : out dx, al ; pop rdx ; pop rbx ; ja 0x5ade38 ; jno 0x5adede ; call qword ptr [rax]
0x00000000005a9cd4 : out dx, al ; push -0x3b ; cdq ; mov cl, 0x67 ; ret
0x00000000005e69d6 : out dx, al ; push qword ptr [rax + 0x6000021a] ; in eax, dx ; out dx, al ; call rax
0x00000000005a17a5 : out dx, al ; push rax ; ret
0x00000000004c7f4e : out dx, al ; ret
0x00000000005945dd : out dx, al ; ret 0x21f7
0x00000000005a1329 : out dx, al ; ret 0x708c
0x000000000059f1e2 : out dx, al ; ret 0x89e3
0x00000000005a0d89 : out dx, al ; ret 0xb687
0x000000000045a01e : out dx, al ; ret 8
0x0000000000561c71 : out dx, al ; sbb rax, rax ; and rax, 1 ; ret
0x00000000005b498e : out dx, al ; scasd eax, dword ptr [rdi] ; test al, 0x54 ; cmp esp, dword ptr [rsi] ; sub dword ptr [rbx], edx ; call qword ptr [rsi]
0x0000000000593940 : out dx, al ; shl byte ptr [rbx + 0x4d], -0x36 ; ret
0x000000000055aafb : out dx, al ; std ; inc dword ptr [rbp - 0xb68b40] ; ret
0x00000000005a6058 : out dx, al ; sti ; scasd eax, dword ptr [rdi] ; stosd dword ptr [rdi], eax ; xor eax, 0x8e7c1367 ; ret
0x00000000005a6e52 : out dx, al ; test eax, 0x3c37951e ; ret
0x0000000000447628 : out dx, al ; xchg rax, rbp ; or eax, dword ptr [rdx - 6] ; ret
0x000000000049d43b : out dx, eax ; add al, byte ptr [rax] ; xor eax, eax ; pop rbx ; ret
0x000000000049d381 : out dx, eax ; add al, byte ptr [rax] ; xor eax, eax ; pop rdx ; ret
0x000000000041df5c : out dx, eax ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7f], al ; std ; jmp qword ptr [rcx]
0x00000000005e5f51 : out dx, eax ; add dword ptr [rax], eax ; loopne 0x5e5ef6 ; in eax, dx ; call rax
0x00000000005e5f31 : out dx, eax ; add dword ptr [rax], eax ; nop ; nop ; in eax, dx ; jmp qword ptr [rax]
0x0000000000494895 : out dx, eax ; add eax, 0x1b800 ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000402a4f : out dx, eax ; add eax, 0x5f894900 ; cmp byte ptr [rax - 0x7d], cl ; ret
0x0000000000448bf2 : out dx, eax ; and al, 0x18 ; vpxor xmm8, xmm8, xmm4 ; ret
0x00000000005a9533 : out dx, eax ; and al, 0xffffffffffffff9c ; ret 0xba5c
0x00000000004b4b4d : out dx, eax ; and al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000519499 : out dx, eax ; and byte ptr [rsi + 0xf], spl ; out dx, eax ; ret 0x4566
0x000000000054598c : out dx, eax ; call 0x461c23
0x0000000000467f41 : out dx, eax ; call 0x4641c3
0x00000000004df0b3 : out dx, eax ; call 0x46b373
0x00000000004341a2 : out dx, eax ; call 0x4d03f3
0x000000000046a0ee : out dx, eax ; call 0x4e6313
0x00000000004d78f7 : out dx, eax ; call 0x4f3b13
0x000000000053e9d9 : out dx, eax ; call 0x539be8
0x00000000004084e1 : out dx, eax ; call qword ptr [rax]
0x000000000060bbda : out dx, eax ; call qword ptr [rbx]
0x000000000060b7aa : out dx, eax ; call qword ptr [rcx]
0x000000000040ee39 : out dx, eax ; call r14
0x000000000043ea11 : out dx, eax ; call r15
0x00000000005e6c06 : out dx, eax ; call rax
0x00000000004101b2 : out dx, eax ; call rbx
0x000000000060b2ea : out dx, eax ; call rdx
0x00000000005991d7 : out dx, eax ; cmp edx, edi ; ret
0x0000000000504221 : out dx, eax ; dec dword ptr [rax - 0x77] ; ret
0x00000000005e726e : out dx, eax ; dec dword ptr [rax] ; add al, byte ptr [rax] ; loopne 0x5e7272 ; out dx, eax ; jmp qword ptr [rax]
0x00000000005e6d3e : out dx, eax ; dec dword ptr [rax] ; sub al, byte ptr [rdx] ; add byte ptr [rax], ah ; jl 0x5e6d3f ; jmp qword ptr [rax]
0x00000000005e6e06 : out dx, eax ; dec eax ; sub eax, 0x96000002 ; out dx, eax ; jmp rax
0x00000000005e6eee : out dx, eax ; dec eax ; xor dword ptr [rdx], eax ; add byte ptr [rax], dh ; lodsb al, byte ptr [rsi] ; out dx, eax ; jmp rax
0x00000000004490ec : out dx, eax ; enter -0x163b, -0x11 ; rol esp, 1 ; ret
0x0000000000449253 : out dx, eax ; enter 0x41c4, 0x29 ; out dx, eax ; rol esp, cl ; ret
0x000000000044b4be : out dx, eax ; fadd st(1), st(0) ; ret
0x0000000000449212 : out dx, eax ; fadd st(4), st(0) ; ret
0x00000000005349d0 : out dx, eax ; fcmovb st(0), st(4) ; ret
0x00000000005554ca : out dx, eax ; fimul dword ptr [rax - 0x7d] ; ret 0x66f0
0x0000000000453bcb : out dx, eax ; fmul dword ptr [rax - 0x7d] ; ret 0xf60
0x00000000005783cc : out dx, eax ; fnsave dword ptr [rdx] ; ret
0x0000000000617c41 : out dx, eax ; hlt ; call rbx
0x00000000004f10fa : out dx, eax ; hlt ; dec dword ptr [rax - 0x77] ; ret
0x000000000044fcd7 : out dx, eax ; in eax, -0x3c ; ret
0x00000000004492a1 : out dx, eax ; inc ah ; ret
0x00000000004e493a : out dx, eax ; inc dword ptr [rcx + 9] ; rol dword ptr [rcx + 0x31], cl ; ret
0x00000000005e6cae : out dx, eax ; inc eax ; add al, byte ptr es:[rax] ; add byte ptr [rcx], bh ; out dx, eax ; jmp rax
0x000000000059693d : out dx, eax ; jbe 0x59692e ; jae 0x59696a ; ret
0x0000000000578875 : out dx, eax ; je 0x57886f ; ret 0x89bd
0x0000000000522120 : out dx, eax ; jmp 0xffffffffc4415ef0
0x00000000005235e3 : out dx, eax ; jmp 0xffffffffc44173b3
0x0000000000449047 : out dx, eax ; jmp 0xfffffffff8345a19
0x00000000005e6be6 : out dx, eax ; jmp qword ptr [rax]
0x000000000060c382 : out dx, eax ; jmp qword ptr [rdi]
0x000000000060b55a : out dx, eax ; jmp qword ptr [rsi]
0x00000000005e6c8e : out dx, eax ; jmp rax
0x000000000060bdaa : out dx, eax ; jmp rcx
0x000000000060bb1a : out dx, eax ; jmp rsi
0x00000000005e6cfe : out dx, eax ; lcall ptr [rax + 0x228] ; push -0x11 ; call rax
0x00000000005e6c86 : out dx, eax ; ljmp ptr [rax + 0x70000225] ; xor edi, ebp ; jmp rax
0x00000000005e6e3e : out dx, eax ; ljmp ptr [rax - 0x1ffffdd2] ; wait ; out dx, eax ; call rax
0x00000000005e703e : out dx, eax ; ljmp ptr [rax - 0x2ffffdca] ; ret
0x00000000004101fa : out dx, eax ; mov edx, r14d ; call rbx
0x0000000000531fba : out dx, eax ; mov esi, 0xbf597fc7 ; ret 0xa88f
0x000000000050ca48 : out dx, eax ; mov esi, ebx ; mov rdx, r15 ; mov rcx, r12 ; call rax
0x0000000000411eb5 : out dx, eax ; mov r13d, eax ; mov r14, rcx ; call r14
0x00000000004c4621 : out dx, eax ; mov rcx, r14 ; call rax
0x00000000004903ee : out dx, eax ; mov rdx, rbx ; call r10
0x000000000046111e : out dx, eax ; mov rdx, rbx ; mov ecx, r14d ; call r15
0x00000000004d4b26 : out dx, eax ; mov rsi, r12 ; call r15
0x0000000000490556 : out dx, eax ; mov rsi, r12 ; mov edx, r15d ; call rax
0x00000000004c3d70 : out dx, eax ; mov rsi, r12 ; mov rcx, rbx ; call rax
0x000000000046efb2 : out dx, eax ; mov rsi, r14 ; call rbx
0x00000000004ce355 : out dx, eax ; mov rsi, rax ; mov rdx, r14 ; call r15
0x0000000000411e6a : out dx, eax ; mov rsi, rbx ; call r14
0x00000000004c2f79 : out dx, eax ; mov rsi, rbx ; je 0x4c2fb7 ; mov rcx, r12 ; call rax
0x000000000050ea9f : out dx, eax ; mov rsi, rbx ; mov rcx, r12 ; call 0x50ad89
0x00000000004c2ffa : out dx, eax ; mov rsi, rbx ; mov rcx, r12 ; call rax
0x00000000004bc4bc : out dx, eax ; mov rsi, rbx ; mov rdx, r12 ; call 0x4b8789
0x000000000057d820 : out dx, eax ; movsxd rax, edi ; and ah, bh ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000000005552d1 : out dx, eax ; mul byte ptr [rsi + 0xf] ; out dx, eax ; push rbx ; ret
0x00000000005a1a3c : out dx, eax ; out -0x15, eax ; fdivp st(7) ; cwde ; ret 0x98e5
0x00000000005d4fa5 : out dx, eax ; out 6, eax ; ret
0x00000000005e7225 : out dx, eax ; out dx, eax ; jmp rax
0x00000000005a4a3e : out dx, eax ; outsb dx, byte ptr [rsi] ; ret
0x00000000004b9450 : out dx, eax ; pop rax ; jmp r8
0x00000000004cb1d0 : out dx, eax ; pop rax ; ret
0x00000000005a5110 : out dx, eax ; pop rdi ; xchg eax, ecx ; loop 0x5a5125 ; jbe 0x5a50e1 ; ret
0x00000000005a5110 : out dx, eax ; pop rdi ; xchg eax, ecx ; loop 0x5a5126 ; jbe 0x5a50e2 ; ret
0x00000000005b4be9 : out dx, eax ; push -5 ; jmp 0xffffffffc40f63f4
0x00000000005e721e : out dx, eax ; push qword ptr [rax - 0x5ffffdc2] ; out dx, eax ; out dx, eax ; jmp rax
0x00000000005e6e7e : out dx, eax ; push qword ptr [rax - 0x7ffffdd1] ; sahf ; out dx, eax ; call rax
0x00000000005a9686 : out dx, eax ; push rbp ; xchg eax, edi ; jrcxz 0x5a963a ; pop rdx ; ret 0xd69
0x00000000005552d5 : out dx, eax ; push rbx ; ret
0x0000000000429833 : out dx, eax ; push rsi ; add bl, al ; mov eax, 0x570d5a ; ret
0x00000000005c3631 : out dx, eax ; push rsi ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dl, ch ; ret 0x5c
0x00000000004358f0 : out dx, eax ; ret
0x00000000005a99d5 : out dx, eax ; ret 0x1b5a
0x00000000005346e5 : out dx, eax ; ret 0x214c
0x0000000000452917 : out dx, eax ; ret 0x280f
0x000000000053253a : out dx, eax ; ret 0x3148
0x0000000000533715 : out dx, eax ; ret 0x3149
0x0000000000532642 : out dx, eax ; ret 0x314c
0x0000000000533498 : out dx, eax ; ret 0x314d
0x00000000005998d0 : out dx, eax ; ret 0x3a29
0x00000000004737b3 : out dx, eax ; ret 0x4166
0x00000000004492c5 : out dx, eax ; ret 0x42c4
0x0000000000534806 : out dx, eax ; ret 0x43c4
0x00000000004733d6 : out dx, eax ; ret 0x4466
0x0000000000473544 : out dx, eax ; ret 0x4566
0x00000000005346b2 : out dx, eax ; ret 0x63c4
0x000000000055503f : out dx, eax ; ret 0x8349
0x0000000000554ecc : out dx, eax ; ret 0x8d4c
0x000000000057db63 : out dx, eax ; ret 0x9ca2
0x000000000044bda9 : out dx, eax ; ret 0xac0f
0x000000000051b432 : out dx, eax ; ret 0xc1c4
0x00000000004492b1 : out dx, eax ; ret 0xc3c4
0x00000000005553ea : out dx, eax ; ret 0xc3f3
0x000000000052051a : out dx, eax ; ret 0xcf31
0x00000000005b7063 : out dx, eax ; ret 0xd875
0x00000000005234fb : out dx, eax ; ret 0xee31
0x0000000000518586 : out dx, eax ; ret 0xf66
0x000000000051b3fc : out dx, eax ; ret 0xf9c5
0x000000000051bdcf : out dx, eax ; ret 0xfac5
0x000000000044929d : out dx, eax ; rol ebp, -0x3f ; out dx, eax ; inc ah ; ret
0x00000000004490f0 : out dx, eax ; rol esp, 1 ; ret
0x0000000000449258 : out dx, eax ; rol esp, cl ; ret
0x0000000000453486 : out dx, eax ; ror byte ptr [rax - 0x7d], 1 ; ret 0xf60
0x000000000044ae0f : out dx, eax ; sal dword ptr [rcx], cl ; rol ecx, 1 ; ret
0x0000000000454985 : out dx, eax ; sal ebx, cl ; ret
0x00000000005199fb : out dx, eax ; shl byte ptr [rsi + 0xf], -0x11 ; ret 0x4566
0x00000000005191e8 : out dx, eax ; shl byte ptr [rsi + 0xf], 1 ; out dx, eax ; ret 0x4566
0x00000000004d5e78 : out dx, eax ; shl dword ptr [rsi + 0x41], 0xf ; cmp byte ptr [rax], al ; ret 0xff3
0x00000000005272bf : outsb dx, byte ptr [rsi] ; adc al, -0x3c ; ret
0x0000000000528ff9 : outsb dx, byte ptr [rsi] ; adc esp, eax ; ret
0x00000000005271ee : outsb dx, byte ptr [rsi] ; adc r12b, al ; ret
0x0000000000526f7b : outsb dx, byte ptr [rsi] ; add al, -0x3c ; ret
0x00000000005461a5 : outsb dx, byte ptr [rsi] ; add al, byte ptr [rax] ; add al, ch ; ret 0xf861
0x0000000000432d35 : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rax + 0x573faf], bh ; ret
0x00000000005ec011 : outsb dx, byte ptr [rsi] ; add eax, dword ptr [rax] ; jo 0x5ec08b ; clc ; call qword ptr [rax]
0x00000000005ec001 : outsb dx, byte ptr [rsi] ; add eax, dword ptr [rax] ; push rax ; outsd dx, dword ptr [rsi] ; clc ; jmp rax
0x0000000000526ead : outsb dx, byte ptr [rsi] ; add esp, eax ; ret
0x0000000000527609 : outsb dx, byte ptr [rsi] ; and al, 0xffffffc4 ; ret
0x0000000000527539 : outsb dx, byte ptr [rsi] ; and r12b, al ; ret
0x00000000005ade67 : outsb dx, byte ptr [rsi] ; call qword ptr [rax]
0x00000000005ebfc5 : outsb dx, byte ptr [rsi] ; clc ; jmp qword ptr [rax]
0x000000000054293b : outsb dx, byte ptr [rsi] ; cli ; dec dword ptr [rax - 0x77] ; ret
0x0000000000527a1e : outsb dx, byte ptr [rsi] ; cmp r12b, al ; ret
0x0000000000601699 : outsb dx, byte ptr [rsi] ; in al, dx ; call qword ptr [rsi]
0x00000000005537be : outsb dx, byte ptr [rsi] ; in eax, -0x16 ; call rcx
0x000000000059a001 : outsb dx, byte ptr [rsi] ; int1 ; ret
0x0000000000595962 : outsb dx, byte ptr [rsi] ; jno 0x59598b ; adc byte ptr [rbx - 0x74], al ; ret 0xc095
0x00000000005954b7 : outsb dx, byte ptr [rsi] ; leave ; call 0xffffffff848116e6
0x0000000000598f2b : outsb dx, byte ptr [rsi] ; mov ah, 0x19 ; jmp rcx
0x0000000000432e38 : outsb dx, byte ptr [rsi] ; mov eax, 0x573e5f ; ret
0x00000000005b7a6e : outsb dx, byte ptr [rsi] ; mov ecx, 0xb1a8908e ; ret 0xf0ad
0x0000000000597469 : outsb dx, byte ptr [rsi] ; mov r8b, 0x34 ; stc ; ret 0x1ede
0x00000000005a3b7d : outsb dx, byte ptr [rsi] ; or al, 0x5c ; sbb eax, 0xf5606b8 ; ret 0x5232
0x000000000052711d : outsb dx, byte ptr [rsi] ; or al, 0xffffffc4 ; ret
0x000000000052704c : outsb dx, byte ptr [rsi] ; or r12b, al ; ret
0x00000000004473e2 : outsb dx, byte ptr [rsi] ; out -0x6b, al ; outsb dx, byte ptr [rsi] ; stosb byte ptr [rdi], al ; jmp rsi
0x000000000059d23b : outsb dx, byte ptr [rsi] ; pop rbx ; insd dword ptr [rdi], dx ; enter 0x405a, -0xc ; insb byte ptr [rdi], dx ; ret
0x00000000005971b1 : outsb dx, byte ptr [rsi] ; push r10 ; lahf ; pop rsp ; ret
0x00000000005293cc : outsb dx, byte ptr [rsi] ; push rcx ; adc ah, al ; ret
0x00000000005294c1 : outsb dx, byte ptr [rsi] ; push rcx ; adc al, -0x3c ; ret
0x00000000005290ea : outsb dx, byte ptr [rsi] ; push rcx ; add al, -0x3c ; ret
0x00000000005297aa : outsb dx, byte ptr [rsi] ; push rcx ; and ah, al ; ret
0x00000000005298a0 : outsb dx, byte ptr [rsi] ; push rcx ; and al, 0xffffffffffffffc4 ; ret
0x0000000000529d6d : outsb dx, byte ptr [rsi] ; push rcx ; cmp ah, al ; ret
0x00000000005291e0 : outsb dx, byte ptr [rsi] ; push rcx ; or ah, al ; ret
0x00000000005292d6 : outsb dx, byte ptr [rsi] ; push rcx ; or al, 0xffffffffffffffc4 ; ret
0x00000000005295b7 : outsb dx, byte ptr [rsi] ; push rcx ; sbb ah, al ; ret
0x00000000005296ad : outsb dx, byte ptr [rsi] ; push rcx ; sbb al, -0x3c ; ret
0x0000000000529996 : outsb dx, byte ptr [rsi] ; push rcx ; sub ah, al ; ret
0x0000000000529a8c : outsb dx, byte ptr [rsi] ; push rcx ; sub al, -0x3c ; ret
0x0000000000529b82 : outsb dx, byte ptr [rsi] ; push rcx ; xor ah, al ; ret
0x0000000000529c77 : outsb dx, byte ptr [rsi] ; push rcx ; xor al, 0xffffffffffffffc4 ; ret
0x000000000048f724 : outsb dx, byte ptr [rsi] ; ret
0x00000000005c3518 : outsb dx, byte ptr [rsi] ; ret 0x5c
0x00000000004e3fe0 : outsb dx, byte ptr [rsi] ; ret 0xea31
0x0000000000467f4e : outsb dx, byte ptr [rsi] ; ret 0xffff
0x000000000050475e : outsb dx, byte ptr [rsi] ; rol byte ptr [rbx], cl ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000527461 : outsb dx, byte ptr [rsi] ; sbb al, -0x3c ; ret
0x0000000000527390 : outsb dx, byte ptr [rsi] ; sbb r12b, al ; ret
0x00000000004f9a12 : outsb dx, byte ptr [rsi] ; std ; dec dword ptr [rax - 0x77] ; ret
0x00000000005673d6 : outsb dx, byte ptr [rsi] ; std ; inc dword ptr [rbp + 0x12678c0] ; ret
0x00000000004473e6 : outsb dx, byte ptr [rsi] ; stosb byte ptr [rdi], al ; jmp rsi
0x00000000005277ab : outsb dx, byte ptr [rsi] ; sub al, -0x3c ; ret
0x000000000058cc7a : outsb dx, byte ptr [rsi] ; sub dword ptr [rdx - 3], ecx ; sbb byte ptr [rdx + 0x78], bl ; call qword ptr [rdx]
0x00000000005276da : outsb dx, byte ptr [rsi] ; sub r12b, al ; ret
0x00000000005985cb : outsb dx, byte ptr [rsi] ; wait ; call qword ptr [rdi]
0x00000000005a341d : outsb dx, byte ptr [rsi] ; wait ; ret 0x8463
0x00000000005b0a25 : outsb dx, byte ptr [rsi] ; xchg eax, ebp ; ret
0x000000000057dffd : outsb dx, byte ptr [rsi] ; xchg eax, ecx ; rcl byte ptr [rbp - 0x3fb138a5], cl ; ret
0x000000000052794d : outsb dx, byte ptr [rsi] ; xor al, 0xffffffc4 ; ret
0x000000000052787c : outsb dx, byte ptr [rsi] ; xor r12b, al ; ret
0x0000000000532405 : outsd dx, dword ptr [rsi] ; adc bpl, r8b ; cli ; outsd dx, dword ptr [rsi] ; push rsi ; and ah, al ; ret 0x79
0x00000000004853b5 : outsd dx, dword ptr [rsi] ; add al, 0 ; xor eax, eax ; pop rdx ; ret
0x0000000000492cfd : outsd dx, dword ptr [rsi] ; add al, 0x5b ; pop r14 ; pop rbp ; ret
0x00000000005ec051 : outsd dx, dword ptr [rsi] ; add eax, dword ptr [rax] ; adc byte ptr [rax - 8], dh ; call rax
0x000000000052d19a : outsd dx, dword ptr [rsi] ; and byte ptr [r14 + 0xf], 0xfe ; ret
0x00000000005ec015 : outsd dx, dword ptr [rsi] ; clc ; call qword ptr [rax]
0x00000000005ec005 : outsd dx, dword ptr [rsi] ; clc ; jmp rax
0x00000000005553ba : outsd dx, dword ptr [rsi] ; clc ; ret
0x0000000000542852 : outsd dx, dword ptr [rsi] ; cli ; dec dword ptr [rax - 0x77] ; ret
0x00000000005aae43 : outsd dx, dword ptr [rsi] ; cmp eax, 0xdd6d2a48 ; ret 0xea0d
0x000000000052085d : outsd dx, dword ptr [rsi] ; enter -0x3acf, -0x3f ; ret 0x6605
0x00000000005203df : outsd dx, dword ptr [rsi] ; enter 0x3a0f, -0x34 ; ret 0x4103
0x000000000051a63c : outsd dx, dword ptr [rsi] ; enter 0x3a0f, -0x34 ; ret 0xf00
0x000000000051a713 : outsd dx, dword ptr [rsi] ; enter 0x3a0f, -0x34 ; ret 0xf01
0x000000000051a863 : outsd dx, dword ptr [rsi] ; enter 0x3a0f, -0x34 ; ret 0xf02
0x000000000051a943 : outsd dx, dword ptr [rsi] ; enter 0x3a0f, -0x34 ; ret 0xf03
0x00000000005b7867 : outsd dx, dword ptr [rsi] ; in eax, dx ; jmp 0xfffffffffa5e3a74
0x000000000055564d : outsd dx, dword ptr [rsi] ; jb 0x5556b4 ; ret
0x000000000057e14c : outsd dx, dword ptr [rsi] ; jmp 0xffffffffacf0a3bb
0x0000000000474553 : outsd dx, dword ptr [rsi] ; jnp 0x4745aa ; ret
0x000000000058d2fe : outsd dx, dword ptr [rsi] ; lea ebx, dword ptr [rdi - 0x5e] ; ret 0x7455
0x000000000059b3c6 : outsd dx, dword ptr [rsi] ; leave ; ret 0xe867
0x000000000057e51d : outsd dx, dword ptr [rsi] ; lodsd eax, dword ptr [rsi] ; adc eax, 0x66626c1c ; ret 0x7154
0x0000000000520667 : outsd dx, dword ptr [rsi] ; loopne 0x520630 ; ret 0x105
0x000000000042c294 : outsd dx, dword ptr [rsi] ; or eax, dword ptr [rax] ; movsxd rax, dword ptr [rdi + 0x68] ; pop rdx ; ret
0x0000000000519263 : outsd dx, dword ptr [rsi] ; pop rax ; and byte ptr [rsi + 0x45], 0xf ; outsd dx, dword ptr [rsi] ; ret 0x4166
0x0000000000519ce2 : outsd dx, dword ptr [rsi] ; pop rax ; shl byte ptr [rsi + 0x45], 0xf ; outsd dx, dword ptr [rsi] ; ret 0x4166
0x00000000005115dd : outsd dx, dword ptr [rsi] ; pop rbp ; sub byte ptr [rcx + 1], cl ; ret 0x8948
0x000000000044ca00 : outsd dx, dword ptr [rsi] ; pop rdx ; xor ah, al ; ret 0x79
0x0000000000532414 : outsd dx, dword ptr [rsi] ; pop rsi ; xor ah, al ; ret 0x71
0x0000000000518a65 : outsd dx, dword ptr [rsi] ; push rax ; and byte ptr [rsi + 0x45], 0xf ; outsd dx, dword ptr [rsi] ; ret
0x000000000051948a : outsd dx, dword ptr [rsi] ; push rax ; shl byte ptr [rsi + 0x45], 0xf ; outsd dx, dword ptr [rsi] ; ret
0x000000000051159d : outsd dx, dword ptr [rsi] ; push rbp ; call 0x4a139ef1
0x000000000053240a : outsd dx, dword ptr [rsi] ; push rsi ; and ah, al ; ret 0x79
0x000000000045d468 : outsd dx, dword ptr [rsi] ; ret
0x0000000000526c21 : outsd dx, dword ptr [rsi] ; ret 0x1b9
0x00000000005b19db : outsd dx, dword ptr [rsi] ; ret 0x2167
0x00000000005a25b3 : outsd dx, dword ptr [rsi] ; ret 0x2eae
0x000000000051861a : outsd dx, dword ptr [rsi] ; ret 0x4166
0x000000000052667b : outsd dx, dword ptr [rsi] ; ret 0x4466
0x0000000000517b35 : outsd dx, dword ptr [rsi] ; ret 0x4566
0x00000000005a41d3 : outsd dx, dword ptr [rsi] ; ret 0x53a0
0x00000000005b66a7 : outsd dx, dword ptr [rsi] ; ret 0x7a53
0x00000000004d5ede : outsd dx, dword ptr [rsi] ; ret 0xc9c5
0x00000000005209ef : outsd dx, dword ptr [rsi] ; ret 0xcac1
0x00000000005aa1de : outsd dx, dword ptr [rsi] ; ret 0xcea3
0x000000000052083f : outsd dx, dword ptr [rsi] ; ret 0xd831
0x0000000000520b9e : outsd dx, dword ptr [rsi] ; ret 0xdf31
0x0000000000520d90 : outsd dx, dword ptr [rsi] ; ret 0xef31
0x00000000005266d8 : outsd dx, dword ptr [rsi] ; ret 0xf41
0x00000000005a29ad : outsd dx, dword ptr [rsi] ; ret 0xf479
0x00000000004d5550 : outsd dx, dword ptr [rsi] ; ret 0xf66
0x0000000000520980 : outsd dx, dword ptr [rsi] ; ret 0xfd01
0x00000000005abe52 : outsd dx, dword ptr [rsi] ; sub bh, byte ptr [rdx] ; push rsp ; ret 0x5ec7
0x0000000000594e4a : outsd dx, dword ptr [rsi] ; sub dword ptr [rbx - 0x5cfe06a6], esp ; ret
0x00000000005a47e2 : outsd dx, dword ptr [rsi] ; xor al, 0x44 ; outsd dx, dword ptr [rsi] ; xor al, 4 ; ret 0x14db
0x00000000005a47e6 : outsd dx, dword ptr [rsi] ; xor al, 4 ; ret 0x14db
0x00000000004beb4e : outsd dx, dword ptr [rsi] ; xor bl, dh ; ret
0x000000000059befc : outsd dx, dword ptr [rsi] ; xor eax, 0x316bc474 ; ret 0xdc5a
0x00000000004363f2 : outsd dx, dword ptr [rsi] ; xor eax, eax ; pop rbx ; ret
0x00000000005a29ab : outsd dx, dword ptr fs:[rsi] ; ret 0xf479
0x000000000059703d : packsswb mm1, qword ptr [rbx + rdi + 0x70] ; ret 0x7a1a
0x000000000049b5bc : paddw mm7, mm7 ; mov eax, 1 ; pop rdx ; ret
0x00000000004d575e : pavgw mm1, qword ptr [rax] ; movdqu xmmword ptr [rdi + 0x50], xmm4 ; ret
0x00000000005b68d3 : pop qword ptr [rax - 0x1289af4a] ; ret
0x00000000005f5125 : pop qword ptr [rax] ; add byte ptr [rax + 0x3b], bh ; out -1, eax ; ret
0x0000000000550b01 : pop qword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005af104 : pop qword ptr [rbx - 0x72] ; ret
0x00000000004e4918 : pop qword ptr [rcx + 9] ; ret
0x0000000000507ec1 : pop qword ptr [rcx - 0x3f] ; ret 0x4505
0x0000000000507d76 : pop qword ptr [rcx - 0x3f] ; ret 0x450e
0x0000000000605135 : pop qword ptr [rcx] ; add byte ptr [rax - 0x50], ch ; in eax, dx ; jmp qword ptr [rsi]
0x00000000004da869 : pop qword ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005e8791 : pop qword ptr [rdx] ; add al, dh ; pop rax ; int1 ; call qword ptr [rax]
0x00000000005e8781 : pop qword ptr [rdx] ; add byte ptr [rax + 0x58], dh ; int1 ; jmp rax
0x00000000005f84ac : pop qword ptr [rdx] ; add byte ptr [rax], al ; xor al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x00000000005a991f : pop r12 ; jmp 0xffffffffc30bd170
0x00000000004bc10d : pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000004615f2 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; jmp rax
0x0000000000402746 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004070ec : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000046baa2 : pop r12 ; pop r14 ; pop r15 ; jmp rax
0x0000000000417e60 : pop r12 ; pop r14 ; pop r15 ; jmp rcx
0x00000000004606f7 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; jmp rax
0x00000000004045e7 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000417aaa : pop r12 ; pop r14 ; pop r15 ; ret
0x00000000004bdfe4 : pop r12 ; pop rbx ; pop rbp ; ret
0x00000000004bdc68 : pop r12 ; ret
0x000000000050579e : pop r13 ; add byte ptr [rax - 0xbecfec], cl ; ret
0x0000000000502463 : pop r13 ; add byte ptr [rcx - 0x48], al ; ret 0
0x00000000004bdfe2 : pop r13 ; pop r12 ; pop rbx ; pop rbp ; ret
0x00000000004bdc66 : pop r13 ; pop r12 ; ret
0x00000000004bb38b : pop r13 ; pop r14 ; pop r15 ; jmp 0x4c7628
0x00000000004bc10f : pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000004615f4 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; jmp rax
0x0000000000402748 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004070ee : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000461882 : pop r14 ; jmp rax
0x00000000004e0d04 : pop r14 ; jmp rcx
0x00000000005aee2e : pop r14 ; mov ds, word ptr [rbp + 3] ; ret 0x37ca
0x00000000004bdfe0 : pop r14 ; pop r13 ; pop r12 ; pop rbx ; pop rbp ; ret
0x00000000004bb38d : pop r14 ; pop r15 ; jmp 0x4c7626
0x000000000046ba22 : pop r14 ; pop r15 ; jmp rax
0x0000000000417e62 : pop r14 ; pop r15 ; jmp rcx
0x00000000004606f9 : pop r14 ; pop r15 ; pop rbp ; jmp rax
0x000000000040258e : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000402513 : pop r14 ; pop r15 ; ret
0x000000000041b33a : pop r14 ; pop rbp ; jmp rax
0x00000000004034dc : pop r14 ; pop rbp ; ret
0x000000000040248a : pop r14 ; ret
0x00000000004bb38f : pop r15 ; jmp 0x4c7624
0x000000000046ba24 : pop r15 ; jmp rax
0x0000000000417e64 : pop r15 ; jmp rcx
0x000000000058dc77 : pop r15 ; mov al, -0x2e ; ret
0x00000000004606fb : pop r15 ; pop rbp ; jmp rax
0x0000000000402590 : pop r15 ; pop rbp ; ret
0x0000000000402515 : pop r15 ; ret
0x000000000059bdc3 : pop r15 ; sub ch, byte ptr [rax - 0x71] ; ret 0x88d0
0x00000000004c820e : pop r8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000042c187 : pop r8 ; jmp rax
0x0000000000455177 : pop r8 ; mov qword ptr [rdi + 0x60], rax ; ret
0x000000000045f3f4 : pop r8 ; mov rdi, rbx ; call rax
0x00000000004318d2 : pop r8 ; ret
0x000000000059676f : pop r8 ; ret 0x2297
0x00000000004b88cd : pop r9 ; jmp rax
0x000000000048749f : pop rax ; adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000501892 : pop rax ; add al, -0x7d ; ret
0x0000000000432aad : pop rax ; add al, byte ptr [rax] ; add byte ptr [rax + 0x573e6d], bh ; ret
0x0000000000431621 : pop rax ; add al, byte ptr [rax] ; add byte ptr [rax + 1], bh ; ret
0x0000000000487254 : pop rax ; add al, ch ; cmc ; jg 0x48726e ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000485f6d : pop rax ; add al, ch ; fcom qword ptr [rdx - 0x76b7fff5] ; ret
0x000000000049e913 : pop rax ; add al, ch ; loop 0x49e921 ; dec dword ptr [rax - 0x77] ; ret
0x000000000055e776 : pop rax ; add al, ch ; ret
0x0000000000433003 : pop rax ; add bl, al ; mov eax, 0x5740b6 ; ret
0x0000000000432fd3 : pop rax ; add bl, al ; mov eax, 0x5740d1 ; ret
0x00000000004904ce : pop rax ; add bl, al ; mov eax, 0x5da58c ; ret
0x000000000049e62a : pop rax ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; insb byte ptr [rdi], dx ; ret 2
0x000000000049e6d2 : pop rax ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; push rsp ; ret 2
0x00000000005100d4 : pop rax ; add byte ptr [rax], al ; add al, ch ; xchg eax, ebx ; ret 0xfffb
0x00000000004c820f : pop rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000048ed9b : pop rax ; add byte ptr [rcx + 0x102], bh ; call rax
0x000000000048ee00 : pop rax ; add byte ptr [rcx + 0x111], bh ; call rax
0x000000000048eefe : pop rax ; add byte ptr [rcx + 0x121], bh ; call rax
0x000000000048f0a5 : pop rax ; add byte ptr [rcx + 0x133], bh ; call rax
0x000000000048f121 : pop rax ; add byte ptr [rcx + 0x148], bh ; call rax
0x000000000048efac : pop rax ; add byte ptr [rcx + 0x156], bh ; call rax
0x000000000048effb : pop rax ; add byte ptr [rcx + 0x15d], bh ; call rax
0x000000000048f21c : pop rax ; add byte ptr [rcx + 0x15d], bh ; call rbx
0x000000000048ed5a : pop rax ; add byte ptr [rcx + 0xfb], bh ; call rax
0x000000000048eead : pop rax ; add byte ptr [rcx + 0xfe], bh ; call rax
0x0000000000485b3c : pop rax ; add byte ptr [rcx - 0x48], al ; ret
0x000000000049b9ab : pop rax ; add byte ptr [rcx - 0x48], al ; ret 0
0x00000000004a7ce4 : pop rax ; add byte ptr [rcx - 0x48], al ; ret 1
0x000000000049c1d2 : pop rax ; add byte ptr [rcx], dh ; ror byte ptr [rcx + rcx*4 - 0xe], -0x18 ; ret 0x314
0x000000000048f4a2 : pop rax ; add byte ptr [rsi + 2], bh ; pop rbx ; ret
0x00000000006181c8 : pop rax ; add ch, dh ; call qword ptr [rax]
0x00000000004323cf : pop rax ; add dword ptr [rax], eax ; add byte ptr [rax + 0x57395f], bh ; ret
0x000000000042afe4 : pop rax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x50e8
0x00000000005eb991 : pop rax ; add eax, dword ptr [rax] ; add edi, eax ; jmp rax
0x00000000005eb959 : pop rax ; add eax, dword ptr [rax] ; rol byte ptr [rcx], 1 ; clc ; jmp qword ptr [rax]
0x0000000000519264 : pop rax ; and byte ptr [rsi + 0x45], 0xf ; outsd dx, dword ptr [rsi] ; ret 0x4166
0x0000000000448d27 : pop rax ; clc ; lea rsp, qword ptr [rax] ; mov rax, r10 ; ret
0x000000000044977e : pop rax ; clc ; lea rsp, qword ptr [rax] ; ret
0x000000000050b0f4 : pop rax ; cli ; cmc ; dec dword ptr [rax - 0x77] ; ret
0x000000000050dfb2 : pop rax ; dec byte ptr [rcx - 0x77] ; ret 0x2944
0x0000000000615539 : pop rax ; hlt ; call qword ptr [rcx]
0x0000000000617188 : pop rax ; in al, -0xc ; call qword ptr [rsi]
0x00000000005e8795 : pop rax ; int1 ; call qword ptr [rax]
0x00000000005e8785 : pop rax ; int1 ; jmp rax
0x00000000005ab7dc : pop rax ; jb 0x5ab815 ; mov al, -0x3c ; ret 0xc5cc
0x000000000047bd76 : pop rax ; jmp 0x4e8043
0x000000000059d2c8 : pop rax ; jmp 0x96750d0
0x00000000004b8fe1 : pop rax ; jmp r11
0x00000000004b8d6c : pop rax ; jmp r8
0x00000000004b90a4 : pop rax ; jmp r9
0x000000000042c188 : pop rax ; jmp rax
0x00000000004adef5 : pop rax ; jmp rcx
0x00000000004e7dd4 : pop rax ; lahf ; int1 ; dec dword ptr [rax - 0x77] ; ret
0x000000000040d9d4 : pop rax ; lea rax, qword ptr [rax + 0x56b2f0] ; ret
0x0000000000419687 : pop rax ; lea rax, qword ptr [rax + 0x819540] ; ret
0x0000000000432e4e : pop rax ; mov eax, 0x573ee4 ; ret
0x0000000000541863 : pop rax ; mov eax, 1 ; ret
0x00000000005a6426 : pop rax ; mov ecx, esp ; ret
0x0000000000612528 : pop rax ; mov esi, ebx ; jmp rdi
0x0000000000455178 : pop rax ; mov qword ptr [rdi + 0x60], rax ; ret
0x000000000045f3f5 : pop rax ; mov rdi, rbx ; call rax
0x00000000005f8f78 : pop rax ; or al, 0xffffffffffffffe9 ; jmp qword ptr [rdi]
0x00000000004fcce6 : pop rax ; or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0x0000000000487382 : pop rax ; or byte ptr [rax - 0x7d], cl ; ret
0x000000000059393f : pop rax ; out dx, al ; shl byte ptr [rbx + 0x4d], -0x36 ; ret
0x0000000000593361 : pop rax ; pop rbp ; cdq ; mov bh, 0x2d ; mov ch, 0x27 ; ret 0x2237
0x000000000055dcb2 : pop rax ; pop rbx ; pop r12 ; pop r14 ; pop r15 ; ret
0x000000000043f276 : pop rax ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004861d1 : pop rax ; pop rbx ; pop r14 ; ret
0x00000000004e6fce : pop rax ; pop rbx ; pop rbp ; ret
0x000000000040d9f8 : pop rax ; pop rbx ; ret
0x00000000005d73fd : pop rax ; push rbx ; add rax, r8 ; ret
0x000000000043c4c8 : pop rax ; push rdi ; add bl, al ; ret
0x00000000005d70e6 : pop rax ; push rdx ; mov byte ptr [rsi], -0x3c ; ret 0x3848
0x00000000005d68e4 : pop rax ; push rdx ; sbb al, spl ; ret 0x6c6
0x00000000005d7625 : pop rax ; push rdx ; xor sil, al ; ret 0x9012
0x00000000005a0559 : pop rax ; push rsp ; std ; ret
0x00000000005b240b : pop rax ; rcr byte ptr [rsi - 0x52] ; mov cl, 0x4d ; ret
0x000000000040dc3f : pop rax ; ret
0x00000000005a4576 : pop rax ; ret 0x1953
0x0000000000596770 : pop rax ; ret 0x2297
0x000000000059ea4b : pop rax ; ret 0x2910
0x0000000000478259 : pop rax ; ret 0x57
0x00000000005c34c8 : pop rax ; ret 0x5c
0x000000000058dec7 : pop rax ; ret 0x91b2
0x0000000000595574 : pop rax ; ret 0xe466
0x00000000005d6e27 : pop rax ; ret 0xf032
0x0000000000609e58 : pop rax ; ret 0xffee
0x00000000005eaaa0 : pop rax ; sbb al, 3 ; add al, al ; ret
0x0000000000487371 : pop rax ; sbb byte ptr [rax - 0x7d], cl ; ret
0x00000000006101b8 : pop rax ; sbb ebx, esi ; call qword ptr [rax]
0x00000000005b0758 : pop rax ; sbb edi, ecx ; jmp qword ptr [rsi]
0x0000000000519ce3 : pop rax ; shl byte ptr [rsi + 0x45], 0xf ; outsd dx, dword ptr [rsi] ; ret 0x4166
0x00000000005ecda8 : pop rax ; shl cl, 1 ; jmp qword ptr [rax]
0x00000000005a0557 : pop rax ; std ; pop rax ; push rsp ; std ; ret
0x00000000005a47e0 : pop rax ; sti ; outsd dx, dword ptr [rsi] ; xor al, 0x44 ; outsd dx, dword ptr [rsi] ; xor al, 4 ; ret 0x14db
0x00000000004874c9 : pop rax ; sub byte ptr [rax - 0x7d], cl ; ret
0x000000000059af4b : pop rax ; sub eax, dword ptr [rdx - 0x497ce1e5] ; ret
0x00000000005a7a80 : pop rax ; test dword ptr [rax - 0x45], esp ; jno 0x5a7a67 ; and edi, edx ; wait ; call rsp
0x00000000004fc044 : pop rax ; test eax, 0x8948fff5 ; ret
0x0000000000431823 : pop rax ; test rax, rax ; je 0x431837 ; mov rsi, rbx ; call rax
0x000000000049a6e6 : pop rax ; test rax, rax ; je 0x49a701 ; mov rdi, r15 ; call rax
0x00000000004f3481 : pop rax ; test rax, rax ; je 0x4f348f ; jmp rax
0x00000000004f3480 : pop rax ; test rax, rax ; je 0x4f3490 ; jmp rax
0x000000000054d904 : pop rax ; xchg cl, bh ; dec dword ptr [rax - 0x77] ; ret
0x000000000059ee87 : pop rax ; xchg eax, ebx ; xor al, 0xffffffffffffffcc ; ret
0x0000000000597138 : pop rax ; xchg eax, ecx ; mov dword ptr [rax + rbp*2 - 0x67], eax ; ret 0xef10
0x000000000059469b : pop rax ; xchg eax, edi ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000541614 : pop rax ; xchg eax, esp ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000005fee98 : pop rax ; xor ebx, ebp ; call rsp
0x000000000059da3d : pop rbp ; adc eax, 0xa72d001e ; ret
0x00000000004ef149 : pop rbp ; add al, ch ; jo 0x4ef0fd ; idiv bh ; pop rbx ; ret
0x00000000004f2816 : pop rbp ; add al, ch ; ret
0x0000000000542431 : pop rbp ; add al, ch ; sub byte ptr [rdi - 0x76b7000c], dh ; ret
0x0000000000433015 : pop rbp ; add bl, al ; mov eax, 0x56f078 ; ret
0x0000000000433161 : pop rbp ; add bl, al ; mov eax, 0x570f60 ; ret
0x0000000000433027 : pop rbp ; add bl, al ; mov eax, 0x5769c9 ; ret
0x000000000055c1cb : pop rbp ; add bl, ch ; ret
0x000000000055295d : pop rbp ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; leave ; ret
0x000000000049e615 : pop rbp ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 2
0x0000000000543ce1 : pop rbp ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000050579f : pop rbp ; add byte ptr [rax - 0xbecfec], cl ; ret
0x000000000051682d : pop rbp ; add byte ptr [rbx + 0x528b784a], cl ; jl 0x516840 ; ret
0x0000000000545ed3 : pop rbp ; add byte ptr [rcx + rcx*4 - 9], cl ; call 0x402177
0x0000000000552ca1 : pop rbp ; add byte ptr [rcx - 0x48], al ; add byte ptr [rax], al ; add al, ch ; ret 0xf796
0x00000000005461a1 : pop rbp ; add byte ptr [rcx - 0x48], al ; outsb dx, byte ptr [rsi] ; add al, byte ptr [rax] ; add al, ch ; ret 0xf861
0x00000000004ef2c7 : pop rbp ; add byte ptr [rcx - 0x48], al ; ret
0x0000000000502464 : pop rbp ; add byte ptr [rcx - 0x48], al ; ret 0
0x00000000004fc52d : pop rbp ; add byte ptr [rcx - 0x48], al ; ret 2
0x000000000055c931 : pop rbp ; add byte ptr [rcx - 0x48], al ; salc ; add byte ptr [rax], al ; add al, ch ; ret 0xf32a
0x0000000000542411 : pop rbp ; add byte ptr [rcx], dh ; ror byte ptr [rcx + rcx*4 - 0xe], -0x18 ; ret
0x0000000000559c79 : pop rbp ; add byte ptr [rdx + 0xba], bh ; call 0x4e5f69
0x000000000055c3c9 : pop rbp ; add cl, ch ; ret 0xfffd
0x0000000000541dd3 : pop rbp ; add cl, ch ; salc ; ret
0x0000000000436ba8 : pop rbp ; add dh, dh ; ret
0x00000000004147d3 : pop rbp ; add dword ptr [rax + 9], ecx ; ret
0x000000000053cacc : pop rbp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x48fe
0x00000000005e3b99 : pop rbp ; add dword ptr [rax], eax ; push rax ; xchg ecx, ebp ; jmp rax
0x0000000000438df9 : pop rbp ; add dword ptr [rcx], ecx ; ret
0x00000000005ebb19 : pop rbp ; add eax, dword ptr [rax] ; xor byte ptr [rdx - 8], al ; call qword ptr [rax]
0x00000000004fd5df : pop rbp ; and byte ptr [rax - 0x7d], cl ; ret
0x0000000000593362 : pop rbp ; cdq ; mov bh, 0x2d ; mov ch, 0x27 ; ret 0x2237
0x0000000000482466 : pop rbp ; cmp byte ptr [rbp - 0x77], cl ; ret
0x00000000005345a7 : pop rbp ; cmp byte ptr [rsp + 0x40], ah ; add esp, eax ; ret 0x65
0x0000000000594565 : pop rbp ; div ecx ; ret 0xa995
0x0000000000482372 : pop rbp ; fmul dword ptr [rbp - 0x77] ; ret
0x0000000000615651 : pop rbp ; hlt ; jmp rcx
0x000000000052291c : pop rbp ; in al, 0x31 ; ret 0xf5c5
0x000000000052338d : pop rbp ; in al, 0x31 ; ret 0xf789
0x00000000005e5475 : pop rbp ; in al, dx ; push qword ptr [rax] ; ret 1
0x0000000000478e9f : pop rbp ; jg 0x478ea6 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000594ae5 : pop rbp ; jg 0x594b1f ; ret
0x000000000059c165 : pop rbp ; jmp 0x126e324
0x000000000054afbc : pop rbp ; jmp 0x54ace8
0x000000000043599f : pop rbp ; jmp r11
0x000000000041b33c : pop rbp ; jmp rax
0x00000000005a671f : pop rbp ; jne 0x5a676e ; xchg eax, esi ; test eax, 0x68206634 ; call rax
0x0000000000446703 : pop rbp ; lahf ; ret 0x5dc2
0x00000000004023b2 : pop rbp ; mov byte ptr [rip + 0x429356], 1 ; ret
0x000000000058b6fc : pop rbp ; mov ch, -0x13 ; je 0x58b702 ; ret
0x00000000005b0d85 : pop rbp ; mov cl, 0x1e ; movsb byte ptr [rdi], byte ptr [rsi] ; or ebp, dword ptr [rbx + 0x55] ; xchg bh, cl ; ret
0x0000000000402351 : pop rbp ; mov edi, 0x82b700 ; jmp rax
0x000000000040238e : pop rbp ; mov rsi, rax ; mov edi, 0x82b700 ; jmp rdx
0x0000000000594d29 : pop rbp ; nop ; ret 0x40fb
0x0000000000522a1f : pop rbp ; or al, 0x31 ; ret 0xf789
0x00000000004823fa : pop rbp ; or byte ptr [rcx - 0x77], cl ; ret
0x000000000056933b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004bdfe3 : pop rbp ; pop r12 ; pop rbx ; pop rbp ; ret
0x00000000004bdc67 : pop rbp ; pop r12 ; ret
0x00000000004bb38c : pop rbp ; pop r14 ; pop r15 ; jmp 0x4c7627
0x00000000004bc110 : pop rbp ; pop r14 ; pop r15 ; jmp rax
0x00000000004615f5 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; jmp rax
0x0000000000402749 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004070ef : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000057cefb : pop rbp ; pop rcx ; ret
0x00000000005a0a49 : pop rbp ; push rdx ; ret
0x00000000005a4f5b : pop rbp ; push rsp ; pop rsp ; ret
0x0000000000402345 : pop rbp ; ret
0x00000000005af8aa : pop rbp ; ret 0xe4b6
0x000000000057e009 : pop rbp ; rol dword ptr [rdx - 0x60], 1 ; jg 0x57e023 ; int 0xff
0x000000000048241e : pop rbp ; sbb byte ptr [rbp - 0x77], cl ; ret
0x00000000005aa054 : pop rbp ; sbb rax, 0x7a233fff ; ret
0x0000000000551dff : pop rbp ; stc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000544aec : pop rbp ; sti ; dec dword ptr [rax - 0x77] ; ret
0x000000000059a58d : pop rbp ; stosd dword ptr [rdi], eax ; cmp edx, dword ptr [rbp - 0x59e6c243] ; ret
0x00000000005115de : pop rbp ; sub byte ptr [rcx + 1], cl ; ret 0x8948
0x000000000057cb1c : pop rbp ; xor al, 0xffffffffffffffff ; ret 0xfd45
0x00000000005ab944 : pop rbx ; adc ah, byte ptr [rbx + rcx*8 + 6] ; push rcx ; shl byte ptr [rdx + 0x56], 1 ; ret 0x3451
0x00000000004cc294 : pop rbx ; adc byte ptr [rbp - 0x18], dh ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000005e7a11 : pop rbx ; add al, byte ptr [rax] ; adc byte ptr [rbp - 0x10], dh ; jmp qword ptr [rax]
0x0000000000611d9d : pop rbx ; add al, byte ptr [rax] ; add byte ptr [rdx - 0xd], ch ; call qword ptr [rcx]
0x0000000000611d55 : pop rbx ; add al, byte ptr [rax] ; call 0x126110cc
0x0000000000611d54 : pop rbx ; add al, byte ptr [rax] ; call 0x126110cd
0x0000000000611d3d : pop rbx ; add al, byte ptr [rax] ; loopne 0x611db1 ; call qword ptr [rcx]
0x0000000000611db5 : pop rbx ; add al, byte ptr [rax] ; or byte ptr [rdx - 0xd], ch ; call qword ptr [rcx]
0x00000000004cffe2 : pop rbx ; add al, ch ; div ebx ; sti ; dec dword ptr [rax - 0x7d] ; ret
0x00000000004d0047 : pop rbx ; add al, ch ; xchg eax, edx ; sti ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000432ef5 : pop rbx ; add bl, al ; mov eax, 0x5740b7 ; ret
0x00000000004cb34f : pop rbx ; add byte ptr [rax + 1], bh ; ret
0x00000000004e7973 : pop rbx ; add byte ptr [rcx + 1], bh ; call r8
0x00000000004c3119 : pop rbx ; add byte ptr [rcx - 0x48], al ; ret 0
0x00000000004c9bf3 : pop rbx ; add byte ptr [rcx - 0x48], al ; xchg eax, esi ; add dword ptr [rax], eax ; add cl, ch ; ret
0x00000000004e7d1e : pop rbx ; add byte ptr [rcx], dh ; leave ; call r12
0x00000000005613f7 : pop rbx ; add byte ptr [rcx], dh ; ror byte ptr [rcx + rcx*4 - 0x16], -0x18 ; popfq ; ret 0xfff6
0x00000000005a8bbc : pop rbx ; add byte ptr [rsi + rbx], bl ; ret
0x0000000000601dcd : pop rbx ; add dword ptr [rax], eax ; loopne 0x601d6b ; in al, dx ; jmp qword ptr [rbx]
0x0000000000579b76 : pop rbx ; cdq ; ret
0x00000000004f60c1 : pop rbx ; cmp al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005aeb8c : pop rbx ; cmp cl, byte ptr [rcx] ; cmp eax, 0x206348b8 ; push rbx ; ret 0x6202
0x000000000059ac1e : pop rbx ; fisubr word ptr [rsi - 0x4d] ; ret 0xaed3
0x00000000005e546d : pop rbx ; in al, dx ; inc dword ptr [rax] ; ret 1
0x00000000006013f1 : pop rbx ; in al, dx ; jmp rcx
0x0000000000599104 : pop rbx ; in eax, dx ; jl 0x5990e9 ; ret 0x278f
0x00000000004c6101 : pop rbx ; inc byte ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000059d23c : pop rbx ; insd dword ptr [rdi], dx ; enter 0x405a, -0xc ; insb byte ptr [rdi], dx ; ret
0x00000000005ade63 : pop rbx ; ja 0x5ade35 ; jno 0x5adedb ; call qword ptr [rax]
0x00000000005ade62 : pop rbx ; ja 0x5ade36 ; jno 0x5adedc ; call qword ptr [rax]
0x000000000048f343 : pop rbx ; jmp rax
0x00000000005a0e25 : pop rbx ; jno 0x5a0dcc ; ret
0x00000000005b5725 : pop rbx ; lahf ; ret 0xbf2e
0x0000000000539601 : pop rbx ; leave ; cli ; dec dword ptr [rax - 0x77] ; ret
0x00000000005b6de8 : pop rbx ; mov cl, cl ; ret 0x90cf
0x00000000005a9a69 : pop rbx ; mov edx, ss ; sub al, ch ; test dword ptr [rsi], edi ; wait ; ret
0x0000000000487c1c : pop rbx ; or byte ptr [rax - 0x7d], cl ; ret
0x000000000052bc90 : pop rbx ; or byte ptr [rcx - 9], al ; ret
0x0000000000530b90 : pop rbx ; or byte ptr [rcx - 9], al ; ret 0x800
0x00000000004bc10c : pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000004070eb : pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000046baa1 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; jmp rax
0x0000000000417e5f : pop rbx ; pop r12 ; pop r14 ; pop r15 ; jmp rcx
0x00000000004606f6 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; jmp rax
0x00000000004045e6 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000417aa9 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; ret
0x0000000000461881 : pop rbx ; pop r14 ; jmp rax
0x00000000004e0d03 : pop rbx ; pop r14 ; jmp rcx
0x000000000046ba21 : pop rbx ; pop r14 ; pop r15 ; jmp rax
0x00000000004977f8 : pop rbx ; pop r14 ; pop r15 ; jmp rcx
0x00000000004c7608 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; jmp rax
0x000000000040258d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000402512 : pop rbx ; pop r14 ; pop r15 ; ret
0x000000000041b339 : pop rbx ; pop r14 ; pop rbp ; jmp rax
0x00000000004034db : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000402489 : pop rbx ; pop r14 ; ret
0x000000000043599e : pop rbx ; pop rbp ; jmp r11
0x0000000000402e30 : pop rbx ; pop rbp ; ret
0x0000000000402da2 : pop rbx ; ret
0x000000000044d460 : pop rbx ; ret 0x3956
0x00000000005b28e9 : pop rbx ; ret 0x748b
0x00000000005a082d : pop rbx ; ret 0x958e
0x0000000000593de4 : pop rbx ; ret 0xdfca
0x00000000004bad21 : pop rbx ; sar bh, 1 ; dec dword ptr [rax - 0x75] ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x00000000005954b4 : pop rbx ; stc ; or byte ptr [rsi + 0x4e], ch ; leave ; call 0xffffffff848116e9
0x00000000005954b3 : pop rbx ; stc ; or byte ptr [rsi + 0x4e], ch ; leave ; call 0xffffffff848116ea
0x0000000000597591 : pop rbx ; sub dword ptr [rdi - 0xe], 0xf ; ret
0x00000000004e5c1b : pop rcx ; adc dh, byte ptr [rax + rax] ; mov eax, 1 ; ret
0x0000000000486989 : pop rcx ; add al, 0 ; xor eax, eax ; pop rdx ; ret
0x000000000055639c : pop rcx ; add al, 0x51 ; call rdx
0x0000000000432fe5 : pop rcx ; add bl, al ; mov eax, 0x573dec ; ret
0x00000000004bb1a1 : pop rcx ; add byte ptr [rcx - 0x48], al ; leave ; add dword ptr [rax], eax ; add al, ch ; ret 0x111
0x00000000004b843e : pop rcx ; add byte ptr [rcx - 0x48], al ; ret
0x00000000004b9d1e : pop rcx ; add byte ptr [rdx + 0x226], bh ; call 0x4e5f69
0x00000000005e3aa9 : pop rcx ; add dword ptr [rax], eax ; adc byte ptr [rdi - 0x17], dh ; jmp rax
0x000000000053f794 : pop rcx ; add dword ptr [rax], eax ; add al, ch ; ret
0x00000000005eb9d9 : pop rcx ; add eax, dword ptr [rax] ; add byte ptr [rdx], cl ; clc ; call qword ptr [rax]
0x00000000004c3cf3 : pop rcx ; add edx, edi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000595f6c : pop rcx ; cwde ; ret 0x978
0x00000000005669e1 : pop rcx ; idiv bh ; xor eax, eax ; pop rdx ; ret
0x00000000005f1189 : pop rcx ; in al, -1 ; ret
0x00000000005e4b35 : pop rcx ; jmp 0x5e4b39
0x000000000042be77 : pop rcx ; jmp rax
0x0000000000599a77 : pop rcx ; jne 0x599adb ; ret
0x00000000005b1ce4 : pop rcx ; leave ; std ; ret
0x00000000005a39f4 : pop rcx ; or al, bl ; ret 0x1878
0x0000000000577e01 : pop rcx ; pop rdx ; ret 0xd539
0x00000000005a5e39 : pop rcx ; push -0x6b ; ret 0x4551
0x0000000000511c74 : pop rcx ; push rbp ; adc byte ptr [rax - 0x77], cl ; ret 0xf48
0x00000000005aa796 : pop rcx ; push rbx ; ret 0xf9bc
0x000000000041ac83 : pop rcx ; ret
0x00000000005ac891 : pop rcx ; ret 0x49bd
0x00000000005a31d2 : pop rcx ; ret 0xbbd7
0x000000000054dff3 : pop rcx ; ret 0xfff9
0x0000000000464203 : pop rcx ; sbb eax, 0x89480008 ; ret
0x00000000005aa765 : pop rcx ; xchg eax, esp ; sub al, -0x23 ; stosb byte ptr [rdi], al ; ret 0x6595
0x00000000005a4a3b : pop rcx ; xor cl, byte ptr [rdi + rbp*8 + 0x6e] ; ret
0x0000000000505e1a : pop rdi ; adc al, 0 ; ror dword ptr [rbx - 0x7ebee7ba], cl ; ret
0x000000000057960d : pop rdi ; adc al, 0x37 ; loope 0x579651 ; insd dword ptr [rdi], dx ; insd dword ptr [rdi], dx ; push rcx ; ret 0xe445
0x000000000057966d : pop rdi ; adc al, 0x37 ; loope 0x5796b1 ; insd dword ptr [rdi], dx ; insd dword ptr [rdi], dx ; push rcx ; ret 0xe445
0x00000000005796ed : pop rdi ; adc al, 0x37 ; loope 0x579731 ; insd dword ptr [rdi], dx ; insd dword ptr [rdi], dx ; push rcx ; ret 0xe445
0x00000000005797ad : pop rdi ; adc al, 0x37 ; loope 0x5797f1 ; insd dword ptr [rdi], dx ; insd dword ptr [rdi], dx ; push rcx ; ret 0xe445
0x00000000005798ad : pop rdi ; adc al, 0x37 ; loope 0x5798f1 ; insd dword ptr [rdi], dx ; insd dword ptr [rdi], dx ; push rcx ; ret 0xe445
0x0000000000579a2d : pop rdi ; adc al, 0x37 ; loope 0x579a71 ; insd dword ptr [rdi], dx ; insd dword ptr [rdi], dx ; push rcx ; ret 0xe445
0x0000000000579c2d : pop rdi ; adc al, 0x37 ; loope 0x579c71 ; insd dword ptr [rdi], dx ; insd dword ptr [rdi], dx ; push rcx ; ret 0xe445
0x0000000000579f2d : pop rdi ; adc al, 0x37 ; loope 0x579f71 ; insd dword ptr [rdi], dx ; insd dword ptr [rdi], dx ; push rcx ; ret 0xe445
0x000000000050658c : pop rdi ; adc byte ptr [rax], al ; ror dword ptr [rbx - 0x7ebee7ba], cl ; ret
0x0000000000505d33 : pop rdi ; add al, 0 ; ror dword ptr [rbx - 0x7ebef7ba], cl ; ret
0x000000000043f507 : pop rdi ; add al, 0x21 ; ret
0x00000000005f216d : pop rdi ; add byte ptr [rax], al ; shl bh, -0x1c ; call rcx
0x00000000004d68bf : pop rdi ; add cl, ah ; ret 0x84e0
0x0000000000602115 : pop rdi ; add dword ptr [rax], eax ; clc ; wait ; in al, dx ; jmp qword ptr [rsi]
0x00000000005e3c29 : pop rdi ; add dword ptr [rax], eax ; mov ecx, gs ; jmp rax
0x0000000000505f02 : pop rdi ; and al, 0 ; ror dword ptr [rbx - 0x7ebed7ba], cl ; ret
0x00000000005064b1 : pop rdi ; and byte ptr [rax], al ; ror dword ptr [rbx - 0x7ebef7ba], cl ; ret
0x00000000004bed1e : pop rdi ; and ch, al ; clc ; ja 0x4bed1d ; ret
0x00000000005acb34 : pop rdi ; cmc ; ret
0x0000000000506a28 : pop rdi ; cmp al, 0 ; ror dword ptr [rbx - 0x7ebe97ba], cl ; ret
0x0000000000402a54 : pop rdi ; cmp byte ptr [rax - 0x7d], cl ; ret
0x00000000005062ba : pop rdi ; cmp byte ptr [rax], al ; ror dword ptr [rbx - 0x7ebe97ba], cl ; ret
0x00000000004323d4 : pop rdi ; cmp dword ptr [rdi], edx ; ret
0x0000000000431e2c : pop rdi ; cmp edx, dword ptr [rdi] ; ret
0x00000000005b6566 : pop rdi ; frstor dword ptr [rdi + 0x7e55ea46] ; ret 0xc2c2
0x00000000005a74e1 : pop rdi ; fstp dword ptr [rip - 0x25b0384b] ; push rbp ; ret 0xcea5
0x00000000005e54a5 : pop rdi ; in al, dx ; call rax
0x00000000005e54b5 : pop rdi ; in al, dx ; inc dword ptr [rax] ; ret
0x0000000000555847 : pop rdi ; ja 0x55586e ; popfq ; hlt ; stosd dword ptr [rdi], eax ; ret 0x2841
0x0000000000555846 : pop rdi ; ja 0x55586f ; popfq ; hlt ; stosd dword ptr [rdi], eax ; ret 0x2841
0x000000000057ca8e : pop rdi ; ja 0x57ca68 ; ret
0x00000000004bb390 : pop rdi ; jmp 0x4c7623
0x00000000005b50a5 : pop rdi ; jmp 0x5b506c
0x00000000005e4b5d : pop rdi ; jmp 0x5e4b61
0x00000000005e4b5c : pop rdi ; jmp 0x5e4b62
0x000000000046ba25 : pop rdi ; jmp rax
0x0000000000417e65 : pop rdi ; jmp rcx
0x0000000000562189 : pop rdi ; jo 0x5621dd ; mov dword ptr [rdi + 0x78], ebx ; pop rbx ; pop r14 ; ret
0x000000000056218d : pop rdi ; js 0x5621f0 ; pop r14 ; ret
0x000000000058dc78 : pop rdi ; mov al, -0x2e ; ret
0x00000000004395a8 : pop rdi ; mov r8d, r12d ; call rax
0x0000000000506934 : pop rdi ; or al, 0 ; ror dword ptr [rbx - 0x7ebea7ba], cl ; ret
0x00000000005b1ce2 : pop rdi ; or bl, byte ptr [rcx - 0x37] ; std ; ret
0x000000000056449b : pop rdi ; or byte ptr [rax + 0x11], cl ; ret
0x00000000005063a2 : pop rdi ; or byte ptr [rax], al ; ror dword ptr [rbx - 0x7ebe87ba], cl ; ret
0x000000000055687f : pop rdi ; out dx, eax ; ret
0x00000000005a991e : pop rdi ; pop r12 ; jmp 0xffffffffc30bd171
0x000000000054afbb : pop rdi ; pop rbp ; jmp 0x54ace9
0x00000000004606fc : pop rdi ; pop rbp ; jmp rax
0x0000000000402591 : pop rdi ; pop rbp ; ret
0x00000000005b7b17 : pop rdi ; popfq ; insb byte ptr [rdi], dx ; out -0x12, al ; cmp al, -0x75 ; ret
0x0000000000402516 : pop rdi ; ret
0x000000000044759b : pop rdi ; ret 0x40a3
0x00000000005569b3 : pop rdi ; ret 0xbe3e
0x0000000000596b03 : pop rdi ; ret 0xd710
0x0000000000506841 : pop rdi ; sbb al, 0 ; ror dword ptr [rbx - 0x7ebeb7ba], cl ; ret
0x00000000005060ec : pop rdi ; sbb byte ptr [rax], al ; ror dword ptr [rbx - 0x7ebeb7ba], cl ; ret
0x00000000004bdc64 : pop rdi ; sbb byte ptr [rcx + 0x5d], al ; pop r12 ; ret
0x00000000005b4a44 : pop rdi ; scasb al, byte ptr [rdi] ; sbb eax, 0xbff8fc48 ; ret 0x4fd8
0x0000000000506b1c : pop rdi ; sub al, 0 ; ror dword ptr [rbx - 0x7ebe87ba], cl ; ret
0x0000000000564407 : pop rdi ; sub byte ptr [rax + 0x11], cl ; ret
0x00000000005061d2 : pop rdi ; sub byte ptr [rax], al ; ror dword ptr [rbx - 0x7ebea7ba], cl ; ret
0x000000000059bdc4 : pop rdi ; sub ch, byte ptr [rax - 0x71] ; ret 0x88d0
0x00000000005b071b : pop rdi ; sub dword ptr [rax - 0x1354ddd], eax ; ret
0x0000000000578820 : pop rdi ; test al, -0x7a ; fimul dword ptr [rax - 0x1414017] ; ret
0x00000000005a5112 : pop rdi ; xchg eax, ecx ; loop 0x5a5123 ; jbe 0x5a50df ; ret
0x00000000005a5112 : pop rdi ; xchg eax, ecx ; loop 0x5a5124 ; jbe 0x5a50e0 ; ret
0x00000000005a5111 : pop rdi ; xchg eax, ecx ; loop 0x5a5125 ; jbe 0x5a50e1 ; ret
0x00000000005b0104 : pop rdi ; xchg eax, edi ; xchg esp, edi ; shr edx, cl ; ret
0x000000000059da3b : pop rdi ; xchg eax, esi ; pop rbp ; adc eax, 0xa72d001e ; ret
0x0000000000505fea : pop rdi ; xor al, 0 ; ror dword ptr [rbx - 0x7ebec7ba], cl ; ret
0x0000000000506743 : pop rdi ; xor byte ptr [rax], al ; ror dword ptr [rbx - 0x7ebec7ba], cl ; ret
0x00000000005ac78d : pop rdi ; xor ch, ch ; ret 0xa9bd
0x00000000005b6062 : pop rdi ; xor cl, byte ptr [rsi - 0x4dea093b] ; ret
0x0000000000515e1c : pop rdx ; add al, 0x31 ; ret
0x0000000000611c0d : pop rdx ; add al, byte ptr [rax] ; adc byte ptr [rax - 0xd], ch ; call qword ptr [rdi]
0x00000000005e79c1 : pop rdx ; add al, byte ptr [rax] ; xor byte ptr [rax - 0x10], dh ; jmp rax
0x0000000000561583 : pop rdx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000005556b3 : pop rdx ; cwde ; call 0x785e1970
0x000000000059d23f : pop rdx ; hlt ; insb byte ptr [rdi], dx ; ret
0x0000000000566894 : pop rdx ; idiv bh ; xor eax, eax ; pop rdx ; ret
0x00000000004de802 : pop rdx ; ja 0x4de80b ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005b474d : pop rdx ; jb 0x5b46e5 ; pop rsi ; ret
0x000000000051698d : pop rdx ; jl 0x5169c4 ; ret
0x00000000004cd3dd : pop rdx ; jmp qword ptr [rax]
0x000000000048df3d : pop rdx ; jmp rax
0x0000000000432fb0 : pop rdx ; jne 0x432fcc ; mov eax, 0x5cc907 ; ret
0x00000000004330f0 : pop rdx ; jne 0x43310c ; mov eax, 0x574105 ; ret
0x00000000005a3000 : pop rdx ; loop 0x5a3066 ; ret
0x000000000059bcc1 : pop rdx ; mov ah, -0x62 ; std ; ret
0x00000000004068c2 : pop rdx ; or al, 0 ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000005b5ba0 : pop rdx ; or byte ptr [rsi], al ; jo 0x5b5b5f ; mov dl, -7 ; ret 0xbf6e
0x0000000000433105 : pop rdx ; or eax, 0xb8c30057 ; ret 0x5710
0x00000000005ade61 : pop rdx ; pop rbx ; ja 0x5ade37 ; jno 0x5adedd ; call qword ptr [rax]
0x0000000000482a51 : pop rdx ; pop rdx ; pop rdx ; ret
0x0000000000482a52 : pop rdx ; pop rdx ; ret
0x000000000058b693 : pop rdx ; pop rsi ; out 0x6b, eax ; push rbp ; stc ; ret 0x98f0
0x0000000000402e5a : pop rdx ; ret
0x000000000057e19a : pop rdx ; ret 0xa084
0x00000000005a8f5c : pop rdx ; ret 0xd378
0x0000000000577e02 : pop rdx ; ret 0xd539
0x00000000005a968b : pop rdx ; ret 0xd69
0x00000000005a22ff : pop rdx ; sbb bh, byte ptr es:[rcx - 0x47] ; ret
0x0000000000421275 : pop rdx ; sbb dh, dh ; ret
0x000000000048bff5 : pop rdx ; std ; dec dword ptr [rax - 0x77] ; ret
0x000000000059ff5c : pop rdx ; sub al, 0x3f ; cld ; ret 0xeb49
0x000000000044ca01 : pop rdx ; xor ah, al ; ret 0x79
0x000000000057d2ae : pop rsi ; adc ch, dh ; cld ; jmp qword ptr [rcx]
0x00000000005d4fcb : pop rsi ; add al, 0x18 ; movsb byte ptr [rdi], byte ptr [rsi] ; in al, dx ; ret 0x41e0
0x0000000000432a8f : pop rsi ; add al, byte ptr [rax] ; add byte ptr [rax + 0x573e7b], bh ; ret
0x0000000000432c45 : pop rsi ; add al, byte ptr [rax] ; add byte ptr [rax + 0x574003], bh ; ret
0x00000000004a4901 : pop rsi ; add al, byte ptr [rax] ; pop rbx ; ret
0x0000000000567d03 : pop rsi ; add al, ch ; jbe 0x567d55 ; std ; dec dword ptr [rax - 0x77] ; ret
0x00000000005686d1 : pop rsi ; add al, ch ; js 0x56874a ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000567c23 : pop rsi ; add al, ch ; push rsi ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000567fa3 : pop rsi ; add al, ch ; salc ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000567e53 : pop rsi ; add al, ch ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000565202 : pop rsi ; add byte ptr [rax - 0x77], cl ; ret 0x94e8
0x00000000005652c2 : pop rsi ; add byte ptr [rax - 0x77], cl ; ret 0xd4e8
0x00000000005676dc : pop rsi ; add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000415dc2 : pop rsi ; add dword ptr [rax + 9], ecx ; ret
0x000000000048d332 : pop rsi ; add dword ptr [rax], edi ; ret 0xf48
0x00000000005ebb59 : pop rsi ; add eax, dword ptr [rax] ; xor byte ptr [rbx - 8], al ; call rax
0x00000000005a41cd : pop rsi ; add esp, dword ptr [rbp - 0x47] ; pushfq ; outsd dx, dword ptr [rsi] ; ret 0x53a0
0x0000000000429a1e : pop rsi ; call qword ptr [rax]
0x000000000057cdaa : pop rsi ; call rax
0x0000000000520184 : pop rsi ; clc ; lea rsp, qword ptr [rsi] ; ret
0x00000000005b7ed4 : pop rsi ; clc ; ret 0xe28e
0x00000000004d2dd8 : pop rsi ; cmp al, 0x31 ; ret
0x00000000004d2dc8 : pop rsi ; cmp byte ptr [rcx + 0x31], al ; ret
0x0000000000431f2f : pop rsi ; cmp dl, byte ptr [rdi] ; ret
0x00000000005b7127 : pop rsi ; cmp eax, dword ptr [rdi + 0x63] ; ret
0x00000000005aa730 : pop rsi ; cmp edx, dword ptr [rbx] ; mov bh, 4 ; ret
0x00000000005b4e1f : pop rsi ; fbld dword ptr [rsi] ; ret 0x4d11
0x0000000000598e3b : pop rsi ; fimul dword ptr [rbx] ; cli ; int1 ; adc ch, dh ; ret
0x00000000005564b4 : pop rsi ; in eax, dx ; cdq ; pushfq ; ret 0x2fc2
0x000000000059fee8 : pop rsi ; jmp 0xffffffff891ceaa5
0x0000000000461883 : pop rsi ; jmp rax
0x00000000004e0d05 : pop rsi ; jmp rcx
0x000000000047c44c : pop rsi ; js 0x47c3df ; jl 0x47c42b ; ret
0x00000000005aee2f : pop rsi ; mov ds, word ptr [rbp + 3] ; ret 0x37ca
0x00000000004d29a9 : pop rsi ; or al, 0x31 ; ret
0x000000000044863b : pop rsi ; or al, byte ptr [rax] ; pop rax ; ret
0x0000000000464316 : pop rsi ; or bl, ch ; and eax, dword ptr [rbp - 0x76f08b40] ; ret 0xe283
0x0000000000487cd5 : pop rsi ; or byte ptr [rax - 0x7d], cl ; ret
0x00000000004d2999 : pop rsi ; or byte ptr [rcx + 0x31], al ; ret
0x000000000043649c : pop rsi ; or dword ptr [rax], eax ; xor eax, eax ; pop rbx ; ret
0x000000000058b694 : pop rsi ; out 0x6b, eax ; push rbp ; stc ; ret 0x98f0
0x00000000004bdfe1 : pop rsi ; pop r13 ; pop r12 ; pop rbx ; pop rbp ; ret
0x00000000004bb38e : pop rsi ; pop r15 ; jmp 0x4c7625
0x000000000046ba23 : pop rsi ; pop r15 ; jmp rax
0x0000000000417e63 : pop rsi ; pop r15 ; jmp rcx
0x00000000004606fa : pop rsi ; pop r15 ; pop rbp ; jmp rax
0x000000000040258f : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000402514 : pop rsi ; pop r15 ; ret
0x000000000041b33b : pop rsi ; pop rbp ; jmp rax
0x00000000005a4f5a : pop rsi ; pop rbp ; push rsp ; pop rsp ; ret
0x00000000004034dd : pop rsi ; pop rbp ; ret
0x000000000044635b : pop rsi ; popfq ; ret
0x0000000000405162 : pop rsi ; push rax ; mov rdi, r14 ; call 0x411377
0x000000000040248b : pop rsi ; ret
0x00000000005df260 : pop rsi ; ret 0x55
0x000000000044d46d : pop rsi ; sbb al, -0x55 ; pop rbx ; ret 0x3956
0x00000000004d2b0e : pop rsi ; sbb al, 0x31 ; ret
0x00000000004d2afe : pop rsi ; sbb byte ptr [rcx + 0x31], al ; ret
0x00000000005b240d : pop rsi ; scasb al, byte ptr [rdi] ; mov cl, 0x4d ; ret
0x00000000004d2c73 : pop rsi ; sub al, 0x31 ; ret
0x0000000000445189 : pop rsi ; sub byte ptr [rax - 0x73], cl ; xor bl, dh ; ret
0x00000000004d2c63 : pop rsi ; sub byte ptr [rcx + 0x31], al ; ret
0x0000000000532415 : pop rsi ; xor ah, al ; ret 0x71
0x00000000004e1503 : pop rsi ; xor byte ptr [rax - 0x77], cl ; ror byte ptr [rax + 0xf], 1 ; scasd eax, dword ptr [rdi] ; ret
0x0000000000460c69 : pop rsi ; xor byte ptr [rax - 0x7d], cl ; ret
0x00000000005b6199 : pop rsi ; xor dword ptr [rbx], ebp ; jrcxz 0x5b616d ; push rdi ; ret
0x0000000000611ed5 : pop rsp ; add al, byte ptr [rax] ; fsubr dword ptr [rcx - 0xd] ; call qword ptr [rdi]
0x0000000000611eed : pop rsp ; add al, byte ptr [rax] ; loopne 0x611f61 ; call qword ptr [rdi]
0x0000000000611ebd : pop rsp ; add al, byte ptr [rax] ; shr byte ptr [rcx - 0xd], 1 ; call qword ptr [rbx]
0x0000000000432ff1 : pop rsp ; add bl, al ; mov eax, 0x5740b0 ; ret
0x0000000000433021 : pop rsp ; add bl, al ; mov eax, 0x5d9b7f ; ret
0x00000000004e9783 : pop rsp ; add byte ptr [rax - 0x77], cl ; ret 0xf3e8
0x00000000005c365a : pop rsp ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bh ; ret 0x5c
0x00000000005c36aa : pop rsp ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; ret
0x00000000005c36fa : pop rsp ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0x00000000005c36d2 : pop rsp ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret
0x00000000005c3862 : pop rsp ; add byte ptr [rax], al ; add byte ptr [rax], al ; add ch, ah ; ret
0x00000000005c35e2 : pop rsp ; add byte ptr [rax], al ; add byte ptr [rax], al ; add ch, dl ; ret 0x5c
0x0000000000432d47 : pop rsp ; add dword ptr [rax], eax ; add byte ptr [rax + 0x573fa1], bh ; ret
0x00000000005072d6 : pop rsp ; and al, 0x10 ; add rsp, 0x18 ; ret
0x00000000004d4cfb : pop rsp ; and al, 0x10 ; lea rsp, qword ptr [rsp + 0x18] ; ret
0x00000000004978f1 : pop rsp ; and al, 0x10 ; mov rdi, rbx ; call rcx
0x0000000000481a0d : pop rsp ; and al, 0x20 ; lea rsp, qword ptr [rsp + 0x28] ; ret
0x000000000053459c : pop rsp ; and al, 0x30 ; add esp, eax ; ret 0x6d
0x000000000044574a : pop rsp ; and al, 0x30 ; add rsp, 0x38 ; ret
0x00000000004c5014 : pop rsp ; and al, 0x40 ; call rbx
0x000000000040a565 : pop rsp ; and al, 0x44 ; mov esi, ebx ; mov r9, r14 ; call rax
0x0000000000506c72 : pop rsp ; and al, 0x50 ; lea rsp, qword ptr [rsp + 0x58] ; ret
0x0000000000411e30 : pop rsp ; and al, 0x70 ; mov rsi, rbx ; call r14
0x0000000000595454 : pop rsp ; call qword ptr [rcx]
0x00000000005ebec5 : pop rsp ; clc ; call qword ptr [rax]
0x0000000000578d92 : pop rsp ; cmpsb byte ptr [rsi], byte ptr [rdi] ; sub eax, 0x9f3f0925 ; out 8, al ; ret 0x6132
0x00000000005a60f0 : pop rsp ; enter -0x6f25, -0x2e ; ret
0x00000000005b0928 : pop rsp ; fldenv dword ptr [rbp - 0x22] ; fld dword ptr [rbx - 0x2a] ; movsb byte ptr [rdi], byte ptr [rsi] ; in eax, dx ; ret
0x0000000000602b64 : pop rsp ; imul eax, dword ptr [rcx], 0xeccac800 ; call qword ptr [rax]
0x00000000004466fa : pop rsp ; in al, -0x48 ; pop rsp ; pop rsp ; in al, -0x61 ; ret 0x5dc2
0x00000000004466fe : pop rsp ; in al, -0x61 ; ret 0x5dc2
0x00000000005e5c75 : pop rsp ; in eax, dx ; jmp qword ptr [rax]
0x0000000000419de5 : pop rsp ; insb byte ptr [rdi], dx ; add dword ptr [rcx], ecx ; ret
0x00000000005f3864 : pop rsp ; jbe 0x5f386e ; add byte ptr [rax], cl ; mov dh, ah ; call rsp
0x000000000050eb00 : pop rsp ; je 0x50eb06 ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000005b24c5 : pop rsp ; jge 0x5b2452 ; ret
0x000000000059d8ba : pop rsp ; jle 0x59d8c2 ; ret 0x25f3
0x00000000005a9920 : pop rsp ; jmp 0xffffffffc30bd16f
0x00000000005a6bb8 : pop rsp ; jmp rsp
0x0000000000617664 : pop rsp ; mov ah, 2 ; add al, bh ; in eax, -0xc ; call qword ptr [rax]
0x0000000000617364 : pop rsp ; mov cl, 2 ; add al, bh ; in al, -0xc ; call qword ptr [rsi]
0x0000000000604b64 : pop rsp ; mov dword ptr [rcx], eax ; add byte ptr [rax], bl ; xchg eax, edx ; in eax, dx ; jmp qword ptr [rcx]
0x00000000004f34d2 : pop rsp ; mov rdi, rbx ; call rcx
0x00000000005a2b89 : pop rsp ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000000005aa431 : pop rsp ; or dl, cl ; ret 0x4a54
0x00000000004bb38a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; jmp 0x4c7629
0x00000000004bc10e : pop rsp ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000004615f3 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; jmp rax
0x0000000000402747 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004070ed : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000046baa3 : pop rsp ; pop r14 ; pop r15 ; jmp rax
0x0000000000417e61 : pop rsp ; pop r14 ; pop r15 ; jmp rcx
0x00000000004606f8 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; jmp rax
0x00000000004045e8 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000417aab : pop rsp ; pop r14 ; pop r15 ; ret
0x0000000000501891 : pop rsp ; pop rax ; add al, -0x7d ; ret
0x000000000049e629 : pop rsp ; pop rax ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; insb byte ptr [rdi], dx ; ret 2
0x000000000049e6d1 : pop rsp ; pop rax ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; push rsp ; ret 2
0x00000000004bdfe5 : pop rsp ; pop rbx ; pop rbp ; ret
0x00000000004466f9 : pop rsp ; pop rsp ; in al, -0x48 ; pop rsp ; pop rsp ; in al, -0x61 ; ret 0x5dc2
0x00000000004466fd : pop rsp ; pop rsp ; in al, -0x61 ; ret 0x5dc2
0x00000000004bdc69 : pop rsp ; ret
0x0000000000578d7c : pop rsp ; ret 0x1948
0x0000000000446a67 : pop rsp ; ret 0xacd3
0x000000000045aba1 : pop rsp ; ret 0xff2
0x000000000050eb20 : pop rsp ; ret 0xffff
0x0000000000608464 : pop rsp ; ret 1
0x0000000000618464 : pop rsp ; ret 2
0x000000000057dd52 : pop rsp ; sbb al, 0x2c ; sbb esi, dword ptr [rdx - 0xa] ; call rdx
0x00000000005a3b7f : pop rsp ; sbb eax, 0xf5606b8 ; ret 0x5232
0x0000000000617064 : pop rsp ; scasb al, byte ptr [rdi] ; add al, byte ptr [rax] ; clc ; jrcxz 0x617066 ; call qword ptr [rsi]
0x0000000000405e80 : pop rsp ; stosd dword ptr [rdi], eax ; str word ptr [rax - 0x77] ; ret
0x00000000005aee2a : pop rsp ; test eax, 0x5e4fdc3c ; mov ds, word ptr [rbp + 3] ; ret 0x37ca
0x00000000004f1c4c : pop rsp ; xor eax, 0x105c8800 ; add dword ptr [rax - 0x7d], ecx ; ret 0x3902
0x00000000005b7060 : popfq ; adc edx, edx ; out dx, eax ; ret 0xd875
0x00000000005e8aa1 : popfq ; add al, byte ptr [rax] ; xchg eax, edi ; int1 ; jmp qword ptr [rax]
0x00000000005e4b69 : popfq ; add dword ptr [rax], eax ; add byte ptr [rax - 0x15], ah ; call qword ptr [rax]
0x00000000005e4b59 : popfq ; add dword ptr [rax], eax ; pop rdi ; jmp 0x5e4b65
0x0000000000612a91 : popfq ; call qword ptr [rbx]
0x00000000005afccb : popfq ; cli ; sbb byte ptr [rcx + 0x7f62a6fd], dh ; ret 0x8b90
0x00000000004bbaef : popfq ; cmc ; cli ; dec dword ptr [rax - 0x77] ; ret
0x000000000059407e : popfq ; cmp ebp, ecx ; xchg eax, ebx ; ret 0x6d6e
0x00000000005a1736 : popfq ; fmul qword ptr [rax + 0xf138c19] ; ret 0x3453
0x000000000055584a : popfq ; hlt ; stosd dword ptr [rdi], eax ; ret 0x2841
0x00000000005a7be5 : popfq ; in al, dx ; jl 0x5a7c2b ; lea edi, dword ptr [rsi] ; in al, dx ; ret
0x00000000005e567d : popfq ; in al, dx ; jmp qword ptr [rax]
0x0000000000602159 : popfq ; in al, dx ; jmp qword ptr [rdi]
0x00000000005b7b18 : popfq ; insb byte ptr [rdi], dx ; out -0x12, al ; cmp al, -0x75 ; ret
0x00000000005b0a3d : popfq ; insd dword ptr [rdi], dx ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xcec9
0x000000000059a6af : popfq ; int 0xc
0x00000000005a2927 : popfq ; jb 0x5a292e ; ret 0x4a9d
0x00000000005a5226 : popfq ; jmp 0x2dc2b68d
0x000000000059507d : popfq ; mov eax, 0x2e34d45f ; idiv dword ptr [rdx] ; ret
0x00000000004ca292 : popfq ; mov eax, 1 ; pop rbx ; ret
0x0000000000432606 : popfq ; or byte ptr [rax], al ; add byte ptr [rax + 0x57406c], bh ; ret
0x00000000004ab082 : popfq ; or eax, dword ptr [rax] ; jmp 0x4ab04e
0x0000000000599a07 : popfq ; out -9, eax ; xchg eax, esi ; ret
0x000000000057cda8 : popfq ; push rsi ; pop rsi ; call rax
0x00000000004e9163 : popfq ; push rsp ; xor al, 0 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000005a30f5 : popfq ; pushfq ; ret
0x0000000000446190 : popfq ; ret
0x0000000000594794 : popfq ; ret 0x22da
0x00000000005729d8 : popfq ; ret 0x42
0x00000000005b4909 : popfq ; ret 0xabbd
0x00000000005613ff : popfq ; ret 0xfff6
0x000000000047c39a : popfq ; salc ; push rdi ; add byte ptr [rax + 0x31], cl ; ret
0x00000000004598df : popfq ; sub byte ptr [rsi], cl ; add byte ptr [rax - 0x77], cl ; ret
0x000000000047885f : popfq ; test edi, esi ; dec dword ptr [rax - 0x77] ; ret
0x00000000005b7c73 : popfq ; xchg eax, ebp ; push rax ; in eax, dx ; ret
0x00000000005a4d0a : popfq ; xchg eax, r8d ; ret 0x18b4
0x00000000005553e4 : pshufb mm0, mm1 ; pxor xmm0, xmm2 ; ret
0x0000000000554fda : pshufb mm0, mm1 ; ret
0x00000000004d5e7c : pshufb mm0, mm2 ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000555170 : pshufb mm0, mm2 ; ret
0x00000000004d5820 : pshufb mm0, mm5 ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000452517 : pshufb mm6, mm7 ; sub r10, rax ; jmp 0x452526
0x00000000005553e3 : pshufb xmm0, xmm1 ; pxor xmm0, xmm2 ; ret
0x0000000000554fd9 : pshufb xmm0, xmm1 ; ret
0x000000000055516f : pshufb xmm0, xmm2 ; ret
0x0000000000452516 : pshufb xmm6, xmm7 ; sub r10, rax ; jmp 0x452527
0x000000000045497f : pshufw mm3, mm0, -1 ; pxor xmm2, xmm3 ; ret
0x000000000052d476 : psllq mm1, qword ptr [rdi] ; jg 0x52d4d9 ; adc bl, dh ; ret
0x000000000054b38e : psubb mm7, mm7 ; xor eax, eax ; pop rdx ; ret
0x00000000005e6d05 : push -0x11 ; call rax
0x000000000060c381 : push -0x11 ; jmp qword ptr [rdi]
0x0000000000608ab1 : push -0x12 ; jmp qword ptr [rdi]
0x00000000006015c9 : push -0x14 ; jmp rdx
0x00000000005e4265 : push -0x16 ; jmp qword ptr [rax]
0x0000000000405d74 : push -0x17fffffe ; ret
0x00000000005b27d4 : push -0x19 ; jo 0x5b27bb ; ret 0x7553
0x00000000005ec459 : push -0x1f ; call rcx
0x00000000005ec429 : push -0x1f ; jmp qword ptr [rsi]
0x00000000005abc3e : push -0x1f1152a8 ; jnp 0x5abc27 ; ret 0x9f85
0x00000000005a3fda : push -0x22 ; xor al, 0xfffffffffffffff4 ; ret 0xfa73
0x00000000005ac6fa : push -0x29 ; cmc ; ret
0x00000000005a4ac5 : push -0x2c6d761c ; xchg eax, ebx ; ret
0x00000000005a8f57 : push -0x2d ; jnp 0x5a8f2b ; push rcx ; pop rdx ; ret 0xd378
0x0000000000593db5 : push -0x31 ; ret 0xf3f4
0x00000000005c3608 : push -0x32 ; push rsi ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, bl ; ret 0x5c
0x00000000005a9cd5 : push -0x3b ; cdq ; mov cl, 0x67 ; ret
0x00000000005980da : push -0x3c571659 ; ret
0x0000000000572a60 : push -0x3e ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000572ab0 : push -0x3e ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], dh ; ret
0x00000000004371a4 : push -0x47ff7e15 ; add al, 0 ; add byte ptr [rax], al ; ret
0x000000000043718f : push -0x47ff7e15 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000004330d9 : push -0x47ffa8d1 ; stc ; adc byte ptr [rdi], dl ; ret
0x0000000000431601 : push -0x47fffffe ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000004e0950 : push -0x496a518 ; dec dword ptr [rax - 0x7d] ; ret
0x00000000005ae482 : push -0x52 ; ret 0xe408
0x0000000000599fff : push -0x58 ; outsb dx, byte ptr [rsi] ; int1 ; ret
0x00000000005ab0ee : push -0x5cb70ed8 ; call rax
0x0000000000612a8d : push -0x629ffffe ; call qword ptr [rbx]
0x0000000000612a1d : push -0x675ffffe ; call qword ptr [rbx]
0x00000000005a5e3b : push -0x6b ; ret 0x4551
0x00000000005b474b : push -0x6f8da5a0 ; pop rsi ; ret
0x00000000005ad747 : push -0x7067e997 ; js 0x5ad7cb ; ret
0x00000000005b7a6c : push -0x7146916a ; nop ; test al, -0x4f ; ret 0xf0ad
0x00000000004e6740 : push -0x717ffb2 ; ret 0xffff
0x000000000053a547 : push -0x76b7000e ; ret
0x00000000004d9eaa : push -0x76b7fffe ; ret
0x00000000004400aa : push -0x76b7ffff ; ret
0x00000000005a87e6 : push -0x7c ; cdq ; sub esi, dword ptr [rbx - 0x50] ; mov ah, -0x54 ; ret
0x00000000004dd663 : push -0x7e ; add byte ptr [rax + 1], bh ; ret
0x00000000004dd64e : push -0x7e ; add byte ptr [rax + 2], bh ; ret
0x00000000004dd6f2 : push -0x7e ; add byte ptr [rax + 3], bh ; ret
0x00000000005b676f : push -0x7fbeb07a ; ret 0xdcb0
0x00000000005ae6a2 : push -0xc ; add edi, edx ; and eax, 0xe3f9eec3 ; ret
0x0000000000611da1 : push -0xd ; call qword ptr [rcx]
0x00000000005b74c6 : push -0xe6dfcd7 ; ret 0x250d
0x000000000048afb5 : push -3 ; dec dword ptr [rax - 0x77] ; ret
0x00000000005b4bea : push -5 ; jmp 0xffffffffc40f63f3
0x0000000000543e8d : push -6 ; dec dword ptr [rax - 0x77] ; ret
0x00000000005ebf95 : push -8 ; call qword ptr [rax]
0x00000000004b9512 : push 0 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000005271f5 : push 0x10 ; add esp, eax ; ret
0x00000000005272c6 : push 0x14 ; add esp, eax ; ret
0x00000000005aa9f1 : push 0x14277525 ; sub ah, byte ptr [rdx] ; ret
0x0000000000527397 : push 0x18 ; add esp, eax ; ret
0x00000000005b6322 : push 0x180b280f ; jae 0x5b639c ; ret 0xeeb6
0x0000000000527468 : push 0x1c ; add esp, eax ; ret
0x0000000000527540 : push 0x20 ; add esp, eax ; ret
0x00000000005eaa50 : push 0x2000031b ; ret
0x00000000004c1f3d : push 0x20ba ; add byte ptr [rcx], ch ; ret 0xff48
0x00000000005af8ce : push 0x2257188a ; jle 0x5af8dc ; ret
0x0000000000527610 : push 0x24 ; add esp, eax ; ret
0x00000000005276e1 : push 0x28 ; add esp, eax ; ret
0x00000000005277b2 : push 0x2c ; add esp, eax ; ret
0x0000000000527883 : push 0x30 ; add esp, eax ; ret
0x0000000000599a02 : push 0x32 ; cwde ; ja 0x599a55 ; popfq ; out -9, eax ; xchg eax, esi ; ret
0x0000000000527954 : push 0x34 ; add esp, eax ; ret
0x00000000005a2b93 : push 0x35846b95 ; fdivr dword ptr [rcx] ; ret 0xafd3
0x0000000000527a25 : push 0x38 ; add esp, eax ; ret
0x00000000005ad64c : push 0x41 ; std ; ret
0x000000000044697e : push 0x414182b8 ; ret
0x00000000004e0181 : push 0x415c415b ; pop rsi ; pop r15 ; ret
0x0000000000434ab5 : push 0x415e415b ; pop rdi ; pop rbp ; ret
0x000000000044697d : push 0x4182b868 ; ret
0x000000000059900b : push 0x42 ; sub eax, dword ptr [rdi] ; ret 0xecf9
0x0000000000574879 : push 0x43 ; add byte ptr [rax], al ; ret
0x000000000049c8c0 : push 0x48 ; mov edi, ebx ; call rcx
0x00000000004305d4 : push 0x480005e9 ; mov eax, ebx ; pop rbx ; ret
0x00000000004106f6 : push 0x480056b7 ; cmove eax, ecx ; ret
0x0000000000545ed1 : push 0x4c005daa ; mov edi, esi ; call 0x402179
0x00000000004eace6 : push 0x4f ; xor al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rax ; ret
0x00000000005e60d8 : push 0x500001f6 ; ret 0xffed
0x00000000005ebe39 : push 0x55800003 ; clc ; jmp qword ptr [rax]
0x00000000005a75d4 : push 0x56a8628c ; push rsi ; lodsb al, byte ptr [rsi] ; pushfq ; ret 0x9c69
0x00000000005ebe71 : push 0x57f00003 ; clc ; call rax
0x00000000005d6bfb : push 0x581b4b53 ; ret
0x00000000005d73f9 : push 0x581b4b63 ; push rbx ; add rax, r8 ; ret
0x0000000000561582 : push 0x5a ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000005aa72f : push 0x5e ; cmp edx, dword ptr [rbx] ; mov bh, 4 ; ret
0x00000000005a4f56 : push 0x5eca2bc0 ; pop rbp ; push rsp ; pop rsp ; ret
0x000000000042c29a : push 0x6348c35a ; jo 0x42c304 ; ret
0x000000000042c299 : push 0x6348c35a ; jo 0x42c305 ; ret
0x00000000005b19da : push 0x6f ; ret 0x2167
0x0000000000599d95 : push 0x70cd8b80 ; xchg eax, esi ; xlatb ; stosb byte ptr [rdi], al ; ret
0x0000000000493c02 : push 0x71 ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000446f03 : push 0x75 ; ret 0x6a89
0x000000000052b7be : push 0x76 ; leave ; ret 0x2e81
0x000000000044d566 : push 0x76 ; leave ; ret 0x8581
0x000000000052b7ba : push 0x76 ; mov ebx, 0x2e766a0a ; leave ; ret 0x2e81
0x000000000053205e : push 0x76 ; out -0x52, al ; in eax, dx ; leave ; ret 0x3b81
0x0000000000526f76 : push 0x79c1c404 ; outsb dx, byte ptr [rsi] ; add al, -0x3c ; ret
0x0000000000527047 : push 0x79c1c408 ; outsb dx, byte ptr [rsi] ; or r12b, al ; ret
0x0000000000527118 : push 0x79c1c40c ; outsb dx, byte ptr [rsi] ; or al, 0xffffffc4 ; ret
0x00000000005271e9 : push 0x79c1c410 ; outsb dx, byte ptr [rsi] ; adc r12b, al ; ret
0x00000000005272ba : push 0x79c1c414 ; outsb dx, byte ptr [rsi] ; adc al, -0x3c ; ret
0x000000000052738b : push 0x79c1c418 ; outsb dx, byte ptr [rsi] ; sbb r12b, al ; ret
0x000000000052745c : push 0x79c1c41c ; outsb dx, byte ptr [rsi] ; sbb al, -0x3c ; ret
0x0000000000527534 : push 0x79c1c420 ; outsb dx, byte ptr [rsi] ; and r12b, al ; ret
0x0000000000527604 : push 0x79c1c424 ; outsb dx, byte ptr [rsi] ; and al, 0xffffffc4 ; ret
0x00000000005276d5 : push 0x79c1c428 ; outsb dx, byte ptr [rsi] ; sub r12b, al ; ret
0x00000000005277a6 : push 0x79c1c42c ; outsb dx, byte ptr [rsi] ; sub al, -0x3c ; ret
0x0000000000527877 : push 0x79c1c430 ; outsb dx, byte ptr [rsi] ; xor r12b, al ; ret
0x0000000000527948 : push 0x79c1c434 ; outsb dx, byte ptr [rsi] ; xor al, 0xffffffc4 ; ret
0x0000000000527a19 : push 0x79c1c438 ; outsb dx, byte ptr [rsi] ; cmp r12b, al ; ret
0x000000000059763a : push 0x897884f ; salc ; lodsb al, byte ptr [rsi] ; ret 0xd6fb
0x00000000004ab702 : push 0xc ; add al, byte ptr [rax] ; xor eax, eax ; pop rdx ; ret
0x0000000000527124 : push 0xc ; add esp, eax ; ret
0x0000000000506a7b : push 0xe20145 ; fld dword ptr [rcx - 0x3f] ; ret 0x410f
0x000000000050630a : push 0xe20145 ; fld dword ptr [rcx - 0x3f] ; ret 0x450e
0x00000000005e3ea1 : push 1 ; add al, dh ; add ebp, edx ; jmp qword ptr [rax]
0x00000000004323bd : push 1 ; add byte ptr [rax], al ; mov eax, 0x573995 ; ret
0x0000000000485938 : push 4 ; add cl, ch ; ret
0x0000000000526f82 : push 4 ; add esp, eax ; ret
0x000000000059c301 : push 7 ; ret
0x0000000000527053 : push 8 ; add esp, eax ; ret
0x00000000005e549f : push qword ptr [rax + 0x100001c2] ; pop rdi ; in al, dx ; call rax
0x00000000005eafaf : push qword ptr [rax + 0x20000330] ; sub bh, dh ; jmp rax
0x00000000005e8307 : push qword ptr [rax + 0x27f] ; sbb dh, cl ; jmp rax
0x00000000005eaa67 : push qword ptr [rax + 0x5000031b] ; ret
0x00000000005e1a87 : push qword ptr [rax + 0x600000d1] ; jmp rbx
0x00000000005e69d7 : push qword ptr [rax + 0x6000021a] ; in eax, dx ; out dx, al ; call rax
0x00000000005e959f : push qword ptr [rax + 0x600002cb] ; cmc ; jmp rax
0x00000000005e8d07 : push qword ptr [rax + 0x700002a7] ; jrcxz 0x5e8d08 ; jmp rax
0x0000000000478cb6 : push qword ptr [rax + rax*2 - 0x75] ; sub byte ptr [r8 - 0x7d], cl ; ret
0x00000000005e987f : push qword ptr [rax - 0x1ffffd26] ; fcompi st(5) ; call rax
0x00000000005e3f1f : push qword ptr [rax - 0x1ffffe94] ; sub ebp, edx ; call rax
0x00000000005e2817 : push qword ptr [rax - 0x1ffffefa] ; ret 0xffe5
0x00000000005e771f : push qword ptr [rax - 0x2ffffdb0] ; cmp dh, al ; jmp rax
0x00000000005e321f : push qword ptr [rax - 0x3ffffecf] ; add al, ch ; call rax
0x00000000005e5aaf : push qword ptr [rax - 0x4ffffe23] ; sbb ch, ch ; call rax
0x00000000005eb10f : push qword ptr [rax - 0x5ffffcc9] ; je 0x5eb116 ; call rax
0x00000000005e721f : push qword ptr [rax - 0x5ffffdc2] ; out dx, eax ; out dx, eax ; jmp rax
0x00000000005e5ccf : push qword ptr [rax - 0x5ffffe1a] ; in ax, dx ; call rax
0x00000000005ea2b7 : push qword ptr [rax - 0x6ffffd04] ; sub dh, dh ; call rax
0x00000000005e6e7f : push qword ptr [rax - 0x7ffffdd1] ; sahf ; out dx, eax ; call rax
0x00000000005eba57 : push qword ptr [rax - 0xffffca5] ; clc ; call rax
0x00000000005e5b67 : push qword ptr [rax - 0xffffe20] ; xor ch, ch ; call rax
0x00000000005e54bf : push qword ptr [rax] ; ret
0x00000000005e1737 : push qword ptr [rax] ; ret 0
0x00000000005e5477 : push qword ptr [rax] ; ret 1
0x00000000004b79e9 : push qword ptr [rbp + rax - 0x17] ; femms ; add byte ptr [rax], al ; ret
0x0000000000435d25 : push qword ptr [rbp + rax - 0x17] ; jrcxz 0x435d38 ; or eax, dword ptr [rax] ; ret
0x000000000049b6c6 : push qword ptr [rbp + rax - 0x17] ; lodsb al, byte ptr [rsi] ; add al, 0 ; ret
0x00000000004b7b06 : push qword ptr [rbp + rax - 0x17] ; ret 0xc
0x0000000000480e66 : push qword ptr [rbp + rax - 0x17] ; ret 3
0x00000000004dae96 : push qword ptr [rbp + rax - 0x17] ; sar ebp, -1 ; ret
0x000000000050e700 : push qword ptr [rbp + rax - 0x18] ; clc ; ret
0x000000000049aad5 : push qword ptr [rbp + rax - 0x18] ; ret
0x00000000004c9a46 : push qword ptr [rbp + rax - 0x18] ; ret 0x1c8
0x000000000050d2d6 : push qword ptr [rbp + rax - 0x18] ; ret 0xf5d7
0x00000000004cb1ce : push qword ptr [rbp - 0x11] ; pop rax ; ret
0x0000000000461c02 : push qword ptr [rbp - 0x15] ; ret
0x00000000004b8d97 : push qword ptr [rbp - 0x1a] ; ret
0x00000000005395ad : push qword ptr [rbx + rax + 0x41] ; call rsi
0x00000000004d03e4 : push qword ptr [rbx + rax + 0x48] ; mov eax, dword ptr [rdi] ; ret
0x000000000043cfa6 : push qword ptr [rbx - 0x18] ; ret 0x2de
0x00000000004db6a8 : push qword ptr [rcx + 0x48] ; mov edi, ebx ; call 0x4b7908
0x00000000004d0b62 : push qword ptr [rcx] ; dec dword ptr [rax - 0x77] ; clc ; pop rdx ; ret
0x00000000004fd673 : push qword ptr [rcx] ; in eax, dx ; mov eax, ebp ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000046bcd1 : push qword ptr [rcx] ; rcr byte ptr [rbx + 0x41], 0x5e ; pop r15 ; ret
0x000000000048ac81 : push qword ptr [rcx] ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0x000000000040c0d7 : push qword ptr [rcx] ; ror byte ptr [rax - 0x77], cl ; jmp 0x224a37
0x000000000040c36d : push qword ptr [rcx] ; ror byte ptr [rax - 0x77], cl ; jmp 0x224ccd
0x000000000054e065 : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], -0x3c ; jo 0x54e0d0 ; ret
0x0000000000508e97 : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], -0x3c ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000004f131c : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbx ; ret
0x0000000000509030 : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], -0x3c ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000004f8743 : push qword ptr [rcx] ; test byte ptr [rcx + rcx*4 - 9], 0x41 ; call rsp
0x00000000004cbd23 : push qword ptr [rdi + rax + 0x31] ; imul al ; ret
0x00000000005485b1 : push qword ptr [rdx + rax + 0x31] ; ror byte ptr [rax - 0x7d], -0x3c ; ret
0x00000000004bc242 : push qword ptr [rdx + rax - 0x15] ; xor r8, rax ; ret
0x000000000054855b : push qword ptr [rdx + rax - 0x77] ; fcomp dword ptr [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0x000000000053f1c9 : push qword ptr [rdx + rbx*2 - 0x75] ; add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000051762a : push qword ptr [rdx + rdx - 1] ; ret 0x8348
0x0000000000539baa : push qword ptr [rsi + rax + 0x41] ; call rsi
0x0000000000548747 : push qword ptr [rsi + rax + 0x48] ; mov dword ptr [rdi + 0x10], esi ; xor eax, eax ; ret
0x0000000000548767 : push qword ptr [rsi + rax + 0x48] ; mov dword ptr [rdi + 0x18], esi ; xor eax, eax ; ret
0x0000000000548787 : push qword ptr [rsi + rax + 0x48] ; mov dword ptr [rdi + 0x20], esi ; xor eax, eax ; ret
0x00000000005487a7 : push qword ptr [rsi + rax + 0x48] ; mov dword ptr [rdi + 0x28], esi ; xor eax, eax ; ret
0x00000000005487c7 : push qword ptr [rsi + rax + 0x48] ; mov dword ptr [rdi + 0x30], esi ; xor eax, eax ; ret
0x0000000000548727 : push qword ptr [rsi + rax + 0x48] ; mov dword ptr [rdi + 8], esi ; xor eax, eax ; ret
0x000000000049cc23 : push qword ptr [rsi + rax + 0x48] ; mov eax, dword ptr [rdi + 0x38] ; pop rdx ; ret
0x000000000049cd93 : push qword ptr [rsi + rax + 0x48] ; mov eax, dword ptr [rdi + 0x40] ; pop rdx ; ret
0x00000000005487f4 : push qword ptr [rsp + rax + 0x48] ; mov eax, dword ptr [rdi + 0x10] ; ret
0x00000000004f4be4 : push qword ptr [rsp + rax + 0x48] ; mov eax, dword ptr [rdi + 0x18] ; ret
0x0000000000548814 : push qword ptr [rsp + rax + 0x48] ; mov eax, dword ptr [rdi + 0x20] ; ret
0x0000000000548824 : push qword ptr [rsp + rax + 0x48] ; mov eax, dword ptr [rdi + 0x28] ; ret
0x0000000000548834 : push qword ptr [rsp + rax + 0x48] ; mov eax, dword ptr [rdi + 0x30] ; ret
0x0000000000461c14 : push qword ptr [rsp + rax + 0x48] ; mov eax, dword ptr [rdi + 0x38] ; ret
0x00000000004315e4 : push qword ptr [rsp + rax + 0x48] ; mov eax, dword ptr [rdi + 0x48] ; ret
0x0000000000461f94 : push qword ptr [rsp + rax + 0x48] ; mov eax, dword ptr [rdi + 0x50] ; ret
0x0000000000461fa4 : push qword ptr [rsp + rax + 0x48] ; mov eax, dword ptr [rdi + 0x58] ; ret
0x0000000000429a84 : push qword ptr [rsp + rax + 0x48] ; mov eax, dword ptr [rdi + 8] ; ret
0x000000000042a8c5 : push qword ptr [rsp + rbx - 0x18] ; ret
0x000000000053956b : push qword ptr [rsp + rdx + 0x41] ; call rdi
0x0000000000479e2e : push qword ptr [rsp + rsi*2 - 0x75] ; sub byte ptr [r8 - 0x7d], cl ; ret
0x00000000005971b2 : push r10 ; lahf ; pop rsp ; ret
0x00000000005a19c6 : push r11 ; ret
0x000000000042985d : push r12 ; mov dword ptr [rsi], eax ; mov eax, dword ptr [rdi + 0x50] ; ret
0x0000000000597a76 : push r12 ; sti ; ret 0x4e7d
0x000000000057cef5 : push r13 ; or eax, 0x5d681121 ; pop rcx ; ret
0x000000000056606f : push r14 ; sub al, 0 ; ret
0x000000000042dfda : push r15 ; add bl, al ; mov eax, 0x56f46e ; ret
0x0000000000433124 : push r15 ; add bl, al ; mov eax, 0x570854 ; ret
0x00000000004331a8 : push r15 ; add bl, al ; mov eax, 0x570d5a ; ret
0x0000000000433709 : push r15 ; add bl, al ; ret
0x00000000005ac015 : push r15 ; cmp al, 0 ; push rbp ; adc edx, dword ptr [rbp + 7] ; ret 0xa3cf
0x00000000005a99d1 : push r15 ; ret 0xefcf
0x00000000004b1ea0 : push r8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000049b5a1 : push r8 ; add dword ptr [rax + 1], edi ; ret
0x0000000000429862 : push r8 ; ret
0x00000000005a1a3a : push r9 ; out dx, eax ; out -0x15, eax ; fdivp st(7) ; cwde ; ret 0x98e5
0x00000000005eae94 : push rax ; adc bh, dh ; call rax
0x000000000042a883 : push rax ; adc byte ptr [rax + 1], bh ; pop rbx ; ret
0x00000000004d143c : push rax ; adc byte ptr [rax - 1], cl ; ret
0x00000000004cd959 : push rax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000411ce8 : push rax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4820
0x00000000004cc3fd : push rax ; add al, byte ptr [rax] ; add byte ptr [rcx + rcx*4 + 0x64], cl ; ret
0x00000000004cc409 : push rax ; add al, byte ptr [rax] ; add byte ptr [rcx + rcx*4 - 0x44], cl ; ret
0x0000000000448636 : push rax ; add al, r13b ; mov dl, 0x5e ; or al, byte ptr [rax] ; pop rax ; ret
0x00000000004b1ea1 : push rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000005fe900 : push rax ; add ch, bl ; call rbx
0x00000000006181e0 : push rax ; add ch, dh ; jmp qword ptr [rbx]
0x00000000005eae0c : push rax ; add dh, bh ; jmp rax
0x000000000049b5a2 : push rax ; add dword ptr [rax + 1], edi ; ret
0x000000000056787d : push rax ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x00000000005e443f : push rax ; add dword ptr [rcx], 0xeaaf6000 ; call qword ptr [rax]
0x000000000045e305 : push rax ; add ecx, dword ptr [rcx] ; ret 0xf41
0x00000000005345b8 : push rax ; add esp, eax ; ret 0x5d
0x00000000004cd541 : push rax ; add rsp, 0x258 ; ret
0x00000000005e7534 : push rax ; and al, dh ; jmp qword ptr [rax]
0x00000000005eaf84 : push rax ; and bh, dh ; jmp rax
0x00000000004cc2d1 : push rax ; and byte ptr [rax - 0x75], cl ; adc byte ptr [r8 - 0x7d], cl ; ret
0x000000000055195a : push rax ; and byte ptr [rdx + rax - 0x77], dh ; clc ; ret
0x0000000000518a66 : push rax ; and byte ptr [rsi + 0x45], 0xf ; outsd dx, dword ptr [rsi] ; ret
0x00000000005e7634 : push rax ; and dh, al ; jmp qword ptr [rax]
0x000000000060d6b0 : push rax ; and eax, esi ; jmp qword ptr [rdx]
0x00000000004c1e6c : push rax ; and edi, edx ; dec dword ptr [rax - 0x77] ; ret
0x0000000000596dcd : push rax ; bt dword ptr [rax - 9], -0x75 ; ret
0x00000000004d477b : push rax ; call r15
0x0000000000457bf5 : push rax ; call rax
0x00000000005ebded : push rax ; clc ; call qword ptr [rax]
0x00000000005e9bf4 : push rax ; clc ; cmc ; jmp rax
0x00000000005ebdb4 : push rax ; clc ; jmp qword ptr [rax]
0x00000000005ea2c7 : push rax ; cld ; add al, byte ptr [rax] ; sub esi, esi ; call qword ptr [rax]
0x00000000005e9434 : push rax ; cli ; call qword ptr [rax]
0x00000000005e9aac : push rax ; cmc ; call rax
0x00000000005e9bac : push rax ; cmc ; cmc ; call rax
0x000000000047788d : push rax ; cmp byte ptr [rax + 1], bh ; ret
0x00000000005a3e91 : push rax ; cmp eax, 0xa3f23e83 ; ret 0x3017
0x00000000005e2c7c : push rax ; cmp edi, esp ; call rax
0x000000000045ba63 : push rax ; dec dword ptr [rax + 0x39] ; ror dword ptr [rdi], 1 ; xchg eax, edi ; ret
0x00000000004e34a1 : push rax ; fcomp dword ptr [rbx] ; ret
0x00000000005582ec : push rax ; fld dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005e3d9c : push rax ; fsubr st(1) ; jmp qword ptr [rax]
0x00000000005e5074 : push rax ; in al, -0x15 ; jmp qword ptr [rax]
0x0000000000617170 : push rax ; in al, -0xc ; call qword ptr [rsi]
0x000000000059b523 : push rax ; in al, -5 ; xchg eax, ecx ; lodsb al, byte ptr [rsi] ; neg byte ptr [rdx] ; sahf ; push rsi ; ret 0x38c2
0x0000000000601279 : push rax ; in al, dx ; jmp qword ptr [rax]
0x00000000005e50b4 : push rax ; in eax, -0x15 ; jmp rax
0x0000000000617430 : push rax ; in eax, -0xc ; call qword ptr [rsi]
0x00000000005b7c75 : push rax ; in eax, dx ; ret
0x00000000005e5d74 : push rax ; insb byte ptr [rdi], dx ; in eax, dx ; call qword ptr [rax]
0x00000000005e99ac : push rax ; int1 ; cmc ; call rax
0x0000000000602d30 : push rax ; iretd ; in al, dx ; jmp rdx
0x00000000005a1c19 : push rax ; ja 0x5a1c4f ; ret
0x00000000005ec19c : push rax ; ja 0x5ec19a ; call qword ptr [rax]
0x00000000005e2c34 : push rax ; jae 0x5e2c20 ; jmp rax
0x00000000005e5d9c : push rax ; jb 0x5e5d8f ; call rax
0x00000000005b68d6 : push rax ; jbe 0x5b68ca ; ret
0x00000000005e3514 : push rax ; jge 0x5e3502 ; jmp rax
0x00000000005ab538 : push rax ; jmp qword ptr [rdi]
0x00000000005e178c : push rax ; jmp rdx
0x0000000000432fbb : push rax ; jne 0x432fcc ; mov eax, 0x5740c8 ; ret
0x00000000004330fb : push rax ; jne 0x43310c ; mov eax, 0x570fde ; ret
0x00000000005ea6dc : push rax ; jns 0x5ea6d8 ; call rax
0x0000000000599008 : push rax ; jrcxz 0x599052 ; push 0x42 ; sub eax, dword ptr [rdi] ; ret 0xecf9
0x000000000041be7e : push rax ; js 0x41be0d ; ret
0x00000000005a6de5 : push rax ; lea ebp, dword ptr [rbx - 0x2e] ; mov bl, 0x3c ; ret
0x00000000004ad6dc : push rax ; lea r8, qword ptr [rsp + 0x47] ; mov rsi, rbx ; call rax
0x000000000045f3f1 : push rax ; lea rcx, qword ptr [r13 + 0x58] ; mov rdi, rbx ; call rax
0x00000000004ad7ee : push rax ; lea rcx, qword ptr [rsp + 0x4f] ; mov rsi, rbx ; call rax
0x0000000000448e4d : push rax ; lea rsi, qword ptr [rsi + 0x60] ; ret
0x0000000000506c74 : push rax ; lea rsp, qword ptr [rsp + 0x58] ; ret
0x00000000005e6f04 : push rax ; lodsb al, byte ptr [rsi] ; out dx, eax ; call qword ptr [rax]
0x00000000005e2974 : push rax ; loop 0x5e295f ; call qword ptr [rax]
0x00000000005e817c : push rax ; loop 0x5e8172 ; call qword ptr [rax]
0x000000000057e28a : push rax ; loope 0x57e251 ; int1 ; loop 0x57e219 ; ret
0x000000000059963e : push rax ; mov ah, -0x31 ; jl 0x59964a ; ffree st(7) ; ret 0x4823
0x000000000060e4c0 : push rax ; mov bh, -0xe ; jmp qword ptr [rax]
0x00000000005e902f : push rax ; mov bl, 2 ; add al, dh ; jmp qword ptr [rax]
0x000000000053c16e : push rax ; mov byte ptr [rbp], bl ; ret
0x00000000005e945f : push rax ; mov byte ptr [rdx], 0 ; add byte ptr [rdx - 0xd], ah ; call qword ptr [rax]
0x00000000005aff12 : push rax ; mov dh, -0x6e ; ret 0x54c
0x000000000046c4fb : push rax ; mov dword ptr [rbx + 0x60], 0 ; pop rbx ; ret
0x0000000000541383 : push rax ; mov eax, 1 ; ret
0x0000000000500823 : push rax ; mov qword ptr [rdi + 0x58], rdx ; ret
0x00000000004d465a : push rax ; mov r8, r13 ; call r9
0x00000000004d45bf : push rax ; mov r8, r13 ; mov r14, r9 ; call r14
0x00000000004ccb91 : push rax ; mov rax, rcx ; pop rdx ; ret
0x0000000000405163 : push rax ; mov rdi, r14 ; call 0x411376
0x00000000004396d0 : push rax ; mov rdi, r14 ; call rax
0x0000000000467f61 : push rax ; mov rdi, rbp ; call 0x4641c6
0x000000000047ee74 : push rax ; mov rdx, rbp ; call r14
0x0000000000555649 : push rax ; movdqa xmm14, xmmword ptr [r10 + 0x60] ; ret
0x00000000005a90ea : push rax ; mul dword ptr [rdi + 0x6439d75e] ; ret
0x00000000004c74ae : push rax ; or byte ptr [rax - 0x77], cl ; ret
0x00000000004620d9 : push rax ; or byte ptr [rsi + 4], bh ; xor eax, eax ; pop rdx ; ret
0x00000000005f25d0 : push rax ; or ch, ah ; call qword ptr [rsi]
0x00000000005e1a5c : push rax ; out -0x1d, al ; jmp rax
0x00000000005e630d : push rax ; out dx, al ; jmp qword ptr [rax]
0x00000000005ec004 : push rax ; outsd dx, dword ptr [rsi] ; clc ; jmp rax
0x00000000004fba10 : push rax ; pop rbp ; add byte ptr [rcx - 0x48], al ; ret
0x00000000004fc52b : push rax ; pop rbp ; add byte ptr [rcx - 0x48], al ; ret 2
0x0000000000441270 : push rax ; pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004e69ed : push rax ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004f1322 : push rax ; pop rbx ; ret
0x000000000057ca8d : push rax ; pop rdi ; ja 0x57ca69 ; ret
0x0000000000608ae0 : push rax ; push -0x12 ; jmp qword ptr [rdi]
0x00000000004e673f : push rax ; push -0x717ffb2 ; ret 0xffff
0x00000000005e86e4 : push rax ; push rbx ; int1 ; jmp rax
0x00000000005e5c3c : push rax ; push rsp ; in eax, dx ; jmp qword ptr [rax]
0x0000000000429863 : push rax ; ret
0x00000000004bc1ad : push rax ; ret 0x4b
0x00000000005e3744 : push rax ; ret 0xffe8
0x00000000005e60dc : push rax ; ret 0xffed
0x00000000005e5480 : push rax ; ret 1
0x00000000005e9390 : push rax ; ret 2
0x0000000000551a35 : push rax ; sal byte ptr [rdx + rax - 0x77], -8 ; ret
0x00000000005eb6f4 : push rax ; sal edi, cl ; call qword ptr [rax]
0x000000000060e890 : push rax ; sal edx, 1 ; call rsp
0x00000000004cc0a4 : push rax ; sbb byte ptr [rax - 0x75], cl ; adc byte ptr [r8 - 0x7d], cl ; ret
0x00000000004d179c : push rax ; sbb byte ptr [rax - 1], cl ; ret
0x00000000005ea16c : push rax ; sbb esi, esi ; jmp qword ptr [rax]
0x000000000051948b : push rax ; shl byte ptr [rsi + 0x45], 0xf ; outsd dx, dword ptr [rsi] ; ret
0x00000000005e5894 : push rax ; shr esp, -1 ; test al, -0x2d ; add dword ptr [rax], eax ; nop ; ret 0xffec
0x00000000005e61dc : push rax ; sub al, -0x12 ; jmp qword ptr [rax]
0x0000000000485390 : push rax ; sub byte ptr [rax + 1], bh ; pop rdx ; ret
0x00000000004cde7c : push rax ; sub byte ptr [rax - 0x77], cl ; ret
0x00000000004321dd : push rax ; sub eax, 0xc3b80057 ; xor dl, byte ptr [rdi] ; ret
0x00000000005e3ed4 : push rax ; sub edx, ebp ; call rax
0x00000000005e847f : push rax ; test byte ptr [rdx], al ; add al, dl ; sub ecx, esi ; call qword ptr [rax]
0x00000000005ea167 : push rax ; test dword ptr [rdx], 0xf61b5000 ; jmp qword ptr [rax]
0x00000000004b7ce9 : push rax ; test rax, rax ; je 0x4b7cfd ; mov rdi, r14 ; call rax
0x00000000004b7d8f : push rax ; test rax, rax ; je 0x4b7da3 ; mov rdi, rbx ; call rax
0x00000000004b7e42 : push rax ; test rax, rax ; je 0x4b7e56 ; mov rdi, r14 ; call rax
0x00000000004b7f18 : push rax ; test rax, rax ; je 0x4b7f2c ; mov rdi, rbx ; call rax
0x00000000004b81b6 : push rax ; test rax, rax ; je 0x4b81ca ; mov rdi, r15 ; call rax
0x00000000004b8ed7 : push rax ; test rax, rax ; je 0x4b8eeb ; mov rdi, r14 ; call rax
0x00000000005e3b9c : push rax ; xchg ecx, ebp ; jmp rax
0x0000000000511c75 : push rbp ; adc byte ptr [rax - 0x77], cl ; ret 0xf48
0x00000000005ac01a : push rbp ; adc edx, dword ptr [rbp + 7] ; ret 0xa3cf
0x0000000000462ee0 : push rbp ; add byte ptr [rax - 0x7d], cl ; ret 0x48fc
0x00000000005df2b2 : push rbp ; add byte ptr [rax], al ; add byte ptr [rax], al ; add ah, cl ; ret 0x55
0x00000000005df2d2 : push rbp ; add byte ptr [rax], al ; add byte ptr [rax], al ; add ah, dh ; ret 0x55
0x00000000005df2c2 : push rbp ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ah ; ret 0x55
0x00000000005df20a : push rbp ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x55
0x00000000005df222 : push rbp ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bl ; ret 0x55
0x00000000005df2e2 : push rbp ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], cl ; ret
0x00000000005df302 : push rbp ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; ret
0x00000000005df212 : push rbp ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], al ; ret 0x55
0x00000000005df22a : push rbp ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdx], ah ; ret 0x55
0x00000000005df30a : push rbp ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdx], bh ; ret
0x00000000005df2ea : push rbp ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdx], dl ; ret
0x00000000005df2fa : push rbp ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi], ah ; ret
0x00000000005df21a : push rbp ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi], cl ; ret 0x55
0x00000000005df23a : push rbp ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi], dh ; ret 0x55
0x00000000005df382 : push rbp ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, al ; ret
0x00000000005df2da : push rbp ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, bh ; ret 0x55
0x00000000005df2ba : push rbp ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dl ; ret 0x55
0x00000000005df2ca : push rbp ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dl, ch ; ret 0x55
0x000000000044070a : push rbp ; add dword ptr [rax + 9], ecx ; ret 0x8948
0x00000000004397d1 : push rbp ; add dword ptr [rcx - 0x73], ecx ; add al, 9 ; ret 0x1be
0x000000000047e769 : push rbp ; add eax, 0x908e2c1 ; ret 0xb60f
0x000000000045e3ac : push rbp ; add eax, 0x910e2c1 ; ret 0xb60f
0x000000000045e68f : push rbp ; add ecx, dword ptr [rcx] ; ret 0x5489
0x00000000005b0a21 : push rbp ; and byte ptr [rdx + 0x44], dl ; outsb dx, byte ptr [rsi] ; xchg eax, ebp ; ret
0x000000000051159e : push rbp ; call 0x4a139ef0
0x00000000005b50f3 : push rbp ; cdq ; ret
0x00000000005ebe3d : push rbp ; clc ; jmp qword ptr [rax]
0x00000000005345b4 : push rbp ; cmp byte ptr [rsp + 0x50], ch ; add esp, eax ; ret 0x5d
0x000000000057d7d3 : push rbp ; cmpsd dword ptr [rsi], dword ptr [rdi] ; in al, -0x16 ; add ah, ch ; ret 0xce5
0x00000000004d95e2 : push rbp ; dec dword ptr [rax - 1] ; ret 0x8d48
0x000000000048264f : push rbp ; fmul dword ptr [rcx - 0x77] ; ret
0x00000000004cfb86 : push rbp ; in al, 0x35 ; add byte ptr [rax], al ; pop rax ; ret
0x00000000005e8735 : push rbp ; int1 ; jmp rax
0x00000000005b7220 : push rbp ; int1 ; leave ; leave ; ret
0x00000000005b41ef : push rbp ; jae 0x5b41ca ; out dx, al ; je 0x5b4254 ; ret
0x00000000005e9cdd : push rbp ; jmp qword ptr [rax]
0x0000000000420e47 : push rbp ; jne 0x420e64 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000057dc8d : push rbp ; jnp 0x57dc35 ; add byte ptr [rdx], -0x24 ; ret
0x00000000005b4cb8 : push rbp ; lahf ; fld xword ptr [rax - 0x536b70ed] ; ret
0x000000000050bd64 : push rbp ; ljmp ptr [rcx] ; ret 0xff48
0x000000000059d1af : push rbp ; mov dl, -0x1f ; ret
0x00000000004023d4 : push rbp ; mov edi, 0x818e10 ; mov rbp, rsp ; call rax
0x000000000049c63f : push rbp ; mov rdi, rbx ; call rax
0x0000000000511b25 : push rbp ; or ah, al ; cmp eax, 0x8948c4d4 ; ret 0xf48
0x000000000057cef6 : push rbp ; or eax, 0x5d681121 ; pop rcx ; ret
0x000000000057db62 : push rbp ; out dx, eax ; ret 0x9ca2
0x00000000005a341c : push rbp ; outsb dx, byte ptr [rsi] ; wait ; ret 0x8463
0x00000000005ac6f9 : push rbp ; push -0x29 ; cmc ; ret
0x000000000045f3f0 : push rbp ; push rax ; lea rcx, qword ptr [r13 + 0x58] ; mov rdi, rbx ; call rax
0x000000000049bca7 : push rbp ; push rcx ; cld ; dec dword ptr [rax - 0x77] ; ret
0x000000000052b463 : push rbp ; ret
0x00000000005aa33d : push rbp ; ret 0x89e7
0x00000000005a74e8 : push rbp ; ret 0xcea5
0x00000000005ac56d : push rbp ; rol dword ptr [rdi], cl ; ret
0x00000000005ad98b : push rbp ; salc ; mov esp, 0xffe87f6a ; ret
0x00000000004826df : push rbp ; sbb byte ptr [rbp - 0x77], cl ; ret
0x00000000005a4fe5 : push rbp ; scasd eax, dword ptr [rdi] ; ret
0x00000000005a8187 : push rbp ; stc ; ret
0x000000000058b697 : push rbp ; stc ; ret 0x98f0
0x000000000059ab7a : push rbp ; std ; std ; ret 0x3148
0x0000000000482442 : push rbp ; sub byte ptr [rcx - 0x77], cl ; ret
0x00000000004ce447 : push rbp ; test edi, eax ; dec dword ptr [rax - 0x77] ; ret
0x00000000005b0d8b : push rbp ; xchg bh, cl ; ret
0x00000000005a9687 : push rbp ; xchg eax, edi ; jrcxz 0x5a9639 ; pop rdx ; ret 0xd69
0x000000000057da2d : push rbp ; xor ebx, dword ptr [rax + 0x13ecf0b0] ; jb 0x57d9f2 ; call rbx
0x00000000005d87ca : push rbx ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret
0x0000000000483205 : push rbx ; add byte ptr [rbx - 0x3d], dl ; ret
0x000000000048d3b4 : push rbx ; add cl, byte ptr [rax - 0x7d] ; ret
0x000000000043664b : push rbx ; add dword ptr [rax - 1], ecx ; ret 0x394c
0x00000000006015c5 : push rbx ; add dword ptr [rax], eax ; push -0x14 ; jmp rdx
0x0000000000549d46 : push rbx ; add dword ptr [rcx], ecx ; ret 0xbfbe
0x000000000054eecc : push rbx ; add dword ptr [rcx], ecx ; ret 0xc0be
0x0000000000568bbf : push rbx ; add eax, 0x908e2c1 ; ret 0xf41
0x00000000005eb879 : push rbx ; add eax, dword ptr [rax] ; div dil ; call qword ptr [rax]
0x0000000000549d62 : push rbx ; add ecx, dword ptr [rcx] ; ret 0xbfbe
0x00000000005d73fe : push rbx ; add rax, r8 ; ret
0x00000000004588a9 : push rbx ; cdq ; cli ; dec dword ptr [rax - 0x75] ; add byte ptr [rax - 1], cl ; ret
0x00000000004f063e : push rbx ; dec dword ptr [rax - 1] ; ret 0x448b
0x00000000005aef26 : push rbx ; in al, -0xd ; fcmovbe st(0), st(3) ; std ; ret 0x488a
0x00000000005b7490 : push rbx ; in al, dx ; jp 0x5b749a ; ret 0x2076
0x00000000005e86e5 : push rbx ; int1 ; jmp rax
0x0000000000446e0b : push rbx ; jle 0x446e57 ; push rbx ; sbb dl, byte ptr [rdi] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000446e0a : push rbx ; jle 0x446e58 ; push rbx ; sbb dl, byte ptr [rdi] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000005e4add : push rbx ; jmp 0x5e4ae1
0x00000000005b0728 : push rbx ; jo 0x5b076f ; cmp dword ptr [rbx + rax*4], edx ; ret
0x00000000005b0727 : push rbx ; jo 0x5b0770 ; cmp dword ptr [rbx + rax*4], edx ; ret
0x00000000004eac09 : push rbx ; mov bl, -1 ; dec dword ptr [rax - 0x77] ; ret
0x00000000004ca810 : push rbx ; mov rbx, rdi ; call qword ptr [rbx]
0x000000000055556d : push rbx ; movq qword ptr [rsi], mm0 ; ret
0x00000000004ed866 : push rbx ; or byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0xbe08
0x000000000053fd69 : push rbx ; or byte ptr [rax - 0x7d], cl ; ret
0x00000000004f2f50 : push rbx ; or byte ptr [rax - 0x7d], cl ; ret 0xbe08
0x0000000000460fbf : push rbx ; or byte ptr [rax], al ; mov eax, 1 ; pop rbx ; ret
0x0000000000549db6 : push rbx ; or dword ptr [rcx], ecx ; ret 0xbfbe
0x00000000004e6101 : push rbx ; or eax, 0x89480034 ; ret
0x0000000000549dd2 : push rbx ; or ecx, dword ptr [rcx] ; ret 0xbfbe
0x0000000000483204 : push rbx ; push rbx ; add byte ptr [rbx - 0x3d], dl ; ret
0x00000000004459e6 : push rbx ; ret
0x00000000005a9908 : push rbx ; ret 0x1e72
0x0000000000598323 : push rbx ; ret 0x451f
0x00000000005aeb94 : push rbx ; ret 0x6202
0x0000000000599a12 : push rbx ; ret 0x74a2
0x00000000005aa797 : push rbx ; ret 0xf9bc
0x0000000000446e0f : push rbx ; sbb dl, byte ptr [rdi] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000005b6a59 : push rbx ; sbb edx, dword ptr [rdx] ; mov edi, 0x7c44912e ; ret 0x2496
0x00000000005d6bfc : push rbx ; sbb rbx, qword ptr [r8 - 0x3d] ; ret
0x00000000004957ca : push rbx ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000488335 : push rbx ; sub byte ptr [rax + 1], bh ; pop rbx ; ret
0x0000000000593c0b : push rbx ; test byte ptr [rdi], al ; jmp qword ptr [rdi]
0x000000000050805e : push rbx ; test eax, 0xc10ec7c1 ; ret
0x0000000000549e0a : push rbx ; wbinvd ; ret 0xbfbe
0x0000000000578937 : push rbx ; xor al, 0x16 ; ret 0x56c2
0x00000000005293cd : push rcx ; adc ah, al ; ret
0x00000000005294c2 : push rcx ; adc al, -0x3c ; ret
0x00000000005b4b4c : push rcx ; adc al, -0x79 ; ror esp, cl ; ret 0xcac1
0x00000000004518a7 : push rcx ; adc bl, dh ; ret
0x00000000005290eb : push rcx ; add al, -0x3c ; ret
0x00000000006013ed : push rcx ; add dword ptr [rax], eax ; add byte ptr [rbx - 0x14], bl ; jmp rcx
0x00000000004a7d1b : push rcx ; add r8b, byte ptr [rax] ; xor eax, eax ; pop rdx ; ret
0x00000000005297ab : push rcx ; and ah, al ; ret
0x00000000005298a1 : push rcx ; and al, 0xffffffffffffffc4 ; ret
0x00000000005271f3 : push rcx ; and ch, byte ptr [rdx + 0x10] ; add esp, eax ; ret
0x00000000005272c4 : push rcx ; and ch, byte ptr [rdx + 0x14] ; add esp, eax ; ret
0x0000000000527395 : push rcx ; and ch, byte ptr [rdx + 0x18] ; add esp, eax ; ret
0x0000000000527466 : push rcx ; and ch, byte ptr [rdx + 0x1c] ; add esp, eax ; ret
0x000000000052753e : push rcx ; and ch, byte ptr [rdx + 0x20] ; add esp, eax ; ret
0x000000000052760e : push rcx ; and ch, byte ptr [rdx + 0x24] ; add esp, eax ; ret
0x00000000005276df : push rcx ; and ch, byte ptr [rdx + 0x28] ; add esp, eax ; ret
0x00000000005277b0 : push rcx ; and ch, byte ptr [rdx + 0x2c] ; add esp, eax ; ret
0x0000000000527881 : push rcx ; and ch, byte ptr [rdx + 0x30] ; add esp, eax ; ret
0x0000000000527952 : push rcx ; and ch, byte ptr [rdx + 0x34] ; add esp, eax ; ret
0x0000000000527a23 : push rcx ; and ch, byte ptr [rdx + 0x38] ; add esp, eax ; ret
0x0000000000527122 : push rcx ; and ch, byte ptr [rdx + 0xc] ; add esp, eax ; ret
0x0000000000526f80 : push rcx ; and ch, byte ptr [rdx + 4] ; add esp, eax ; ret
0x0000000000527051 : push rcx ; and ch, byte ptr [rdx + 8] ; add esp, eax ; ret
0x0000000000526eb1 : push rcx ; and ch, byte ptr [rdx] ; add esp, eax ; ret
0x00000000005293d1 : push rcx ; and ch, byte ptr [rsi + 0x10] ; add esp, eax ; ret
0x00000000005294c6 : push rcx ; and ch, byte ptr [rsi + 0x14] ; add esp, eax ; ret
0x00000000005295bc : push rcx ; and ch, byte ptr [rsi + 0x18] ; add esp, eax ; ret
0x00000000005296b2 : push rcx ; and ch, byte ptr [rsi + 0x1c] ; add esp, eax ; ret
0x00000000005297af : push rcx ; and ch, byte ptr [rsi + 0x20] ; add esp, eax ; ret
0x00000000005298a5 : push rcx ; and ch, byte ptr [rsi + 0x24] ; add esp, eax ; ret
0x000000000052999b : push rcx ; and ch, byte ptr [rsi + 0x28] ; add esp, eax ; ret
0x0000000000529a91 : push rcx ; and ch, byte ptr [rsi + 0x2c] ; add esp, eax ; ret
0x0000000000529b87 : push rcx ; and ch, byte ptr [rsi + 0x30] ; add esp, eax ; ret
0x0000000000529c7c : push rcx ; and ch, byte ptr [rsi + 0x34] ; add esp, eax ; ret
0x0000000000529d72 : push rcx ; and ch, byte ptr [rsi + 0x38] ; add esp, eax ; ret
0x00000000005292db : push rcx ; and ch, byte ptr [rsi + 0xc] ; add esp, eax ; ret
0x00000000005290ef : push rcx ; and ch, byte ptr [rsi + 4] ; add esp, eax ; ret
0x00000000005291e5 : push rcx ; and ch, byte ptr [rsi + 8] ; add esp, eax ; ret
0x0000000000528ffd : push rcx ; and ch, byte ptr [rsi] ; add esp, eax ; ret
0x00000000005980d7 : push rcx ; and dword ptr [rbx + 0x68], 0xc3a8e9a7 ; ret
0x000000000055639e : push rcx ; call rdx
0x00000000005aaa3f : push rcx ; cdq ; ret
0x000000000049bca8 : push rcx ; cld ; dec dword ptr [rax - 0x77] ; ret
0x0000000000529d6e : push rcx ; cmp ah, al ; ret
0x000000000049c6a3 : push rcx ; cmp byte ptr [rax], al ; ret
0x00000000005e86a5 : push rcx ; int1 ; call qword ptr [rax]
0x00000000005e8695 : push rcx ; int1 ; jmp rax
0x00000000005e4a9d : push rcx ; jmp 0x5e4aa1
0x00000000005b7b15 : push rcx ; lahf ; pop rdi ; popfq ; insb byte ptr [rdi], dx ; out -0x12, al ; cmp al, -0x75 ; ret
0x00000000005983bb : push rcx ; lahf ; ret 0xe1a9
0x00000000005291e1 : push rcx ; or ah, al ; ret
0x00000000005292d7 : push rcx ; or al, 0xffffffffffffffc4 ; ret
0x000000000042887b : push rcx ; or dl, byte ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000449046 : push rcx ; out dx, eax ; jmp 0xfffffffff8345a1a
0x00000000005a1a3b : push rcx ; out dx, eax ; out -0x15, eax ; fdivp st(7) ; cwde ; ret 0x98e5
0x000000000044929c : push rcx ; out dx, eax ; rol ebp, -0x3f ; out dx, eax ; inc ah ; ret
0x0000000000594ae4 : push rcx ; pop rbp ; jg 0x594b20 ; ret
0x00000000005a8f5b : push rcx ; pop rdx ; ret 0xd378
0x0000000000598434 : push rcx ; push rax ; ret
0x000000000043c8f9 : push rcx ; push rdi ; add bl, al ; ret
0x00000000005b0a14 : push rcx ; ret
0x000000000059d701 : push rcx ; ret 0x2a40
0x000000000059cd09 : push rcx ; ret 0x2f85
0x00000000005969e8 : push rcx ; ret 0x4d55
0x00000000005a76e6 : push rcx ; ret 0x8eb
0x0000000000579615 : push rcx ; ret 0xe445
0x0000000000597e4a : push rcx ; ret 0xfe1a
0x00000000005295b8 : push rcx ; sbb ah, al ; ret
0x00000000005296ae : push rcx ; sbb al, -0x3c ; ret
0x000000000059fcf4 : push rcx ; scasb al, byte ptr [rdi] ; jl 0x59fcf9 ; sbb dl, byte ptr [rdi] ; ret 0xaaca
0x00000000005ab949 : push rcx ; shl byte ptr [rdx + 0x56], 1 ; ret 0x3451
0x0000000000529997 : push rcx ; sub ah, al ; ret
0x0000000000529a8d : push rcx ; sub al, -0x3c ; ret
0x00000000005991aa : push rcx ; test eax, 0x8965bf ; jmp qword ptr [rax]
0x0000000000529b83 : push rcx ; xor ah, al ; ret
0x0000000000529c78 : push rcx ; xor al, 0xffffffffffffffc4 ; ret
0x000000000059c8c4 : push rdi ; adc al, -0x29 ; sahf ; cmp al, 0x26 ; ret 0x6f8
0x00000000004eaa62 : push rdi ; adc al, -0x75 ; adc al, 0x39 ; ret 0xd75
0x00000000004f4f05 : push rdi ; adc bh, bh ; dec dword ptr [rax - 0x77] ; ret
0x000000000052d47a : push rdi ; adc bl, dh ; ret
0x00000000004ef356 : push rdi ; adc byte ptr [rax - 0x7d], cl ; ret 0xbe20
0x0000000000462a88 : push rdi ; adc byte ptr [rcx - 0x75], cl ; sbb byte ptr [r8 + 0x29], r9b ; ret 0x1d75
0x00000000004418b8 : push rdi ; add al, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004e345c : push rdi ; add al, byte ptr [rax] ; nop ; mov eax, 0x5bd7d8 ; ret
0x00000000005426e0 : push rdi ; add al, ch ; jns 0x5426a2 ; hlt ; dec dword ptr [rax - 0x77] ; ret 0xdb31
0x0000000000444648 : push rdi ; add bh, byte ptr [rax + 3] ; ret
0x000000000042dfdb : push rdi ; add bl, al ; mov eax, 0x56f46e ; ret
0x00000000004330ba : push rdi ; add bl, al ; mov eax, 0x56fe33 ; ret
0x0000000000433125 : push rdi ; add bl, al ; mov eax, 0x570854 ; ret
0x000000000043312b : push rdi ; add bl, al ; mov eax, 0x570cd7 ; ret
0x000000000043313d : push rdi ; add bl, al ; mov eax, 0x570d0e ; ret
0x0000000000433137 : push rdi ; add bl, al ; mov eax, 0x570d2e ; ret
0x0000000000433143 : push rdi ; add bl, al ; mov eax, 0x570d4e ; ret
0x0000000000432569 : push rdi ; add bl, al ; mov eax, 0x570d5a ; ret
0x0000000000433149 : push rdi ; add bl, al ; mov eax, 0x570dae ; ret
0x0000000000433131 : push rdi ; add bl, al ; mov eax, 0x570e06 ; ret
0x0000000000433155 : push rdi ; add bl, al ; mov eax, 0x570f0f ; ret
0x0000000000433167 : push rdi ; add bl, al ; mov eax, 0x570f7a ; ret
0x0000000000433173 : push rdi ; add bl, al ; mov eax, 0x570fbc ; ret
0x000000000043316d : push rdi ; add bl, al ; mov eax, 0x571016 ; ret
0x0000000000433119 : push rdi ; add bl, al ; mov eax, 0x57107b ; ret
0x0000000000433113 : push rdi ; add bl, al ; mov eax, 0x57109c ; ret
0x0000000000433107 : push rdi ; add bl, al ; mov eax, 0x5710c2 ; ret
0x000000000043310d : push rdi ; add bl, al ; mov eax, 0x5710e1 ; ret
0x0000000000432528 : push rdi ; add bl, al ; mov eax, 0x57144e ; ret
0x00000000004324bc : push rdi ; add bl, al ; mov eax, 0x5732e4 ; ret
0x00000000004324c2 : push rdi ; add bl, al ; mov eax, 0x573305 ; ret
0x00000000004324c8 : push rdi ; add bl, al ; mov eax, 0x573326 ; ret
0x0000000000432514 : push rdi ; add bl, al ; mov eax, 0x5733b7 ; ret
0x0000000000432310 : push rdi ; add bl, al ; mov eax, 0x573479 ; ret
0x00000000004322da : push rdi ; add bl, al ; mov eax, 0x573565 ; ret
0x00000000004322e0 : push rdi ; add bl, al ; mov eax, 0x573587 ; ret
0x00000000004322e6 : push rdi ; add bl, al ; mov eax, 0x5735a9 ; ret
0x0000000000432478 : push rdi ; add bl, al ; mov eax, 0x573661 ; ret
0x000000000043241e : push rdi ; add bl, al ; mov eax, 0x5737e6 ; ret
0x0000000000432424 : push rdi ; add bl, al ; mov eax, 0x573807 ; ret
0x000000000043242a : push rdi ; add bl, al ; mov eax, 0x573828 ; ret
0x00000000004322c2 : push rdi ; add bl, al ; mov eax, 0x5739d6 ; ret
0x00000000004322c8 : push rdi ; add bl, al ; mov eax, 0x5739f0 ; ret
0x00000000004322aa : push rdi ; add bl, al ; mov eax, 0x573a0a ; ret
0x000000000043247e : push rdi ; add bl, al ; mov eax, 0x573d22 ; ret
0x0000000000432484 : push rdi ; add bl, al ; mov eax, 0x573d44 ; ret
0x00000000004322ce : push rdi ; add bl, al ; mov eax, 0x573d66 ; ret
0x00000000004322d4 : push rdi ; add bl, al ; mov eax, 0x573d89 ; ret
0x0000000000432be0 : push rdi ; add bl, al ; mov eax, 0x573e35 ; ret
0x0000000000432be6 : push rdi ; add bl, al ; mov eax, 0x573e3c ; ret
0x0000000000432bec : push rdi ; add bl, al ; mov eax, 0x573e43 ; ret
0x0000000000432d00 : push rdi ; add bl, al ; mov eax, 0x573e66 ; ret
0x0000000000432cd6 : push rdi ; add bl, al ; mov eax, 0x573e90 ; ret
0x0000000000432ca0 : push rdi ; add bl, al ; mov eax, 0x573ec8 ; ret
0x0000000000432ca6 : push rdi ; add bl, al ; mov eax, 0x573ecf ; ret
0x0000000000432cac : push rdi ; add bl, al ; mov eax, 0x573ed6 ; ret
0x0000000000432eaa : push rdi ; add bl, al ; mov eax, 0x573f07 ; ret
0x0000000000432d96 : push rdi ; add bl, al ; mov eax, 0x573f4d ; ret
0x0000000000432d9c : push rdi ; add bl, al ; mov eax, 0x573f54 ; ret
0x0000000000432da2 : push rdi ; add bl, al ; mov eax, 0x573f5b ; ret
0x0000000000432c70 : push rdi ; add bl, al ; mov eax, 0x573fb6 ; ret
0x0000000000432c88 : push rdi ; add bl, al ; mov eax, 0x573fd2 ; ret
0x0000000000432c8e : push rdi ; add bl, al ; mov eax, 0x573fd9 ; ret
0x0000000000432eb0 : push rdi ; add bl, al ; mov eax, 0x574073 ; ret
0x0000000000432eb6 : push rdi ; add bl, al ; mov eax, 0x57407a ; ret
0x0000000000432c94 : push rdi ; add bl, al ; mov eax, 0x574081 ; ret
0x0000000000432c9a : push rdi ; add bl, al ; mov eax, 0x574088 ; ret
0x0000000000432ea4 : push rdi ; add bl, al ; mov eax, 0x57408f ; ret
0x0000000000432f7a : push rdi ; add bl, al ; mov eax, 0x5740a7 ; ret
0x0000000000432ff7 : push rdi ; add bl, al ; mov eax, 0x5740b3 ; ret
0x0000000000433009 : push rdi ; add bl, al ; mov eax, 0x5740b9 ; ret
0x000000000043302d : push rdi ; add bl, al ; mov eax, 0x5740c2 ; ret
0x0000000000433033 : push rdi ; add bl, al ; mov eax, 0x5740c5 ; ret
0x0000000000432fc7 : push rdi ; add bl, al ; mov eax, 0x5740ce ; ret
0x0000000000432fd9 : push rdi ; add bl, al ; mov eax, 0x5740d4 ; ret
0x0000000000432fc1 : push rdi ; add bl, al ; mov eax, 0x5740d7 ; ret
0x000000000043314f : push rdi ; add bl, al ; mov eax, 0x5740fa ; ret
0x000000000043311f : push rdi ; add bl, al ; mov eax, 0x574113 ; ret
0x0000000000432fcd : push rdi ; add bl, al ; mov eax, 0x5824c3 ; ret
0x0000000000432ffd : push rdi ; add bl, al ; mov eax, 0x587ffa ; ret
0x0000000000432fdf : push rdi ; add bl, al ; mov eax, 0x5909e4 ; ret
0x0000000000432feb : push rdi ; add bl, al ; mov eax, 0x5cc1db ; ret
0x000000000043300f : push rdi ; add bl, al ; mov eax, 0x5db541 ; ret
0x000000000043315b : push rdi ; add bl, al ; mov eax, 0x5deb33 ; ret
0x000000000043370a : push rdi ; add bl, al ; ret
0x0000000000479ac0 : push rdi ; add bl, al ; xor eax, eax ; ret
0x000000000047c0c2 : push rdi ; add byte ptr [rax + 0x29], cl ; ret 0x314c
0x000000000047c03b : push rdi ; add byte ptr [rax + 0x29], cl ; ret 0x48b
0x000000000047c39d : push rdi ; add byte ptr [rax + 0x31], cl ; ret
0x000000000042dfd0 : push rdi ; add byte ptr [rax + 0x56f0ae], bh ; ret
0x00000000004330b5 : push rdi ; add byte ptr [rax + 0x570e45], bh ; ret
0x00000000004330db : push rdi ; add byte ptr [rax + 0x5710f9], bh ; ret
0x00000000004321df : push rdi ; add byte ptr [rax + 0x5732c3], bh ; ret
0x0000000000431fb7 : push rdi ; add byte ptr [rax + 0x573543], bh ; ret
0x0000000000432157 : push rdi ; add byte ptr [rax + 0x573647], bh ; ret
0x00000000004320f3 : push rdi ; add byte ptr [rax + 0x5737c5], bh ; ret
0x0000000000431f66 : push rdi ; add byte ptr [rax + 0x5739bc], bh ; ret
0x0000000000432874 : push rdi ; add byte ptr [rax + 0x573e2e], bh ; ret
0x0000000000432a23 : push rdi ; add byte ptr [rax + 0x573ec1], bh ; ret
0x0000000000432e91 : push rdi ; add byte ptr [rax + 0x573f00], bh ; ret
0x0000000000432b75 : push rdi ; add byte ptr [rax + 0x573f46], bh ; ret
0x00000000004329d2 : push rdi ; add byte ptr [rax + 0x573fcb], bh ; ret
0x0000000000432f75 : push rdi ; add byte ptr [rax + 0x5740ad], bh ; ret
0x0000000000432f9b : push rdi ; add byte ptr [rax + 0x5de743], bh ; ret
0x0000000000436129 : push rdi ; add byte ptr [rax + 0xf], bh ; ret
0x000000000055ae37 : push rdi ; add byte ptr [rax], al ; mov eax, 1 ; pop rdx ; ret
0x000000000042a790 : push rdi ; add byte ptr [rcx - 0x48], al ; ret 0
0x0000000000458264 : push rdi ; add byte ptr [rcx - 0x48], al ; ret 1
0x0000000000430425 : push rdi ; add byte ptr [rcx - 0x48], al ; ret 3
0x000000000047d87c : push rdi ; add byte ptr [rcx], dh ; ret 0x8b48
0x000000000047c11e : push rdi ; add byte ptr [rdi + rcx - 0x4a], al ; ret
0x000000000047c1e1 : push rdi ; add byte ptr [rdi + rcx - 0x4a], al ; ret 0xd389
0x00000000004445e8 : push rdi ; add dword ptr [rax + 2], edi ; ret
0x00000000005e3a39 : push rdi ; add dword ptr [rax], eax ; xor byte ptr [rbx - 0x17], ch ; call qword ptr [rax]
0x0000000000408789 : push rdi ; add dword ptr [rdi], ecx ; mov dh, 0x46 ; add dword ptr [rcx], ebp ; ret 0xca01
0x00000000005176e6 : push rdi ; add eax, 0x908e2c1 ; ret 0xb60f
0x00000000004e0442 : push rdi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0x8fe8
0x00000000004212b5 : push rdi ; add eax, dword ptr [rax] ; add dh, dh ; ret
0x00000000004446b8 : push rdi ; add edi, dword ptr [rax + 4] ; ret
0x00000000005af8d1 : push rdi ; and al, byte ptr [rsi + 0x65] ; jle 0x5af8d9 ; ret
0x00000000005b1bbc : push rdi ; and byte ptr [rcx - 0x3d], al ; hlt ; ret 0x64d9
0x00000000005ebe75 : push rdi ; clc ; call rax
0x00000000004dea47 : push rdi ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000005ac016 : push rdi ; cmp al, 0 ; push rbp ; adc edx, dword ptr [rbp + 7] ; ret 0xa3cf
0x000000000050620c : push rdi ; cmp al, 0 ; ror byte ptr [rbx - 0x7ebea3a2], 1 ; ret 0xe681
0x000000000050677a : push rdi ; cmp al, 0 ; ror byte ptr [rbx - 0x7ebec3a2], 1 ; ret 0x7cf8
0x000000000049d1b6 : push rdi ; cmp byte ptr [rax], al ; mov eax, 1 ; pop rdx ; ret
0x000000000050687d : push rdi ; cmp byte ptr [rax], al ; ror byte ptr [rbx - 0x7ebeb3a2], 1 ; ret 0x23a7
0x0000000000506024 : push rdi ; cmp byte ptr [rax], al ; ror byte ptr [rbx - 0x7ebec3a2], 1 ; ret 0x438e
0x000000000057dc49 : push rdi ; div bl ; test bl, 2 ; cli ; ret
0x000000000048fbb9 : push rdi ; enter 0x110f, 0xc ; adc ecx, dword ptr [rax - 0x7d] ; ret 0x4810
0x00000000004d5b1b : push rdi ; in al, 0xf ; push rdi ; ret
0x00000000004ad615 : push rdi ; in eax, dx ; add dword ptr [rax], eax ; xor eax, eax ; pop rbx ; ret
0x000000000040b717 : push rdi ; jo 0x40b6a0 ; ret 0x4cfe
0x00000000004cf3e7 : push rdi ; ljmp ptr [rcx] ; ret 0xff48
0x0000000000512584 : push rdi ; mov eax, 0xc3ac0f4d ; sub byte ptr [rcx + 0x21], cl ; ret
0x00000000005b2517 : push rdi ; mov eax, dword ptr [rdx - 0x2d] ; jge 0x5b255c ; ret 0xf356
0x00000000005a17b6 : push rdi ; mov esp, 0xa7c1baa ; ret
0x0000000000455186 : push rdi ; mov qword ptr [rdi + 0x50], rcx ; ret
0x00000000005062f4 : push rdi ; or al, 0 ; ror byte ptr [rbx - 0x7ebe93a2], 1 ; ret 0xd87
0x000000000050669e : push rdi ; or al, 0 ; ror byte ptr [rbx - 0x7ebed3a2], 1 ; ret 0x3085
0x00000000004450cd : push rdi ; or al, 0xfffffffffffffff3 ; ret
0x0000000000506b59 : push rdi ; or byte ptr [rax], al ; ror byte ptr [rbx - 0x7ebe83a2], 1 ; ret 0xd2bb
0x0000000000505d6c : push rdi ; or byte ptr [rax], al ; ror byte ptr [rbx - 0x7ebef3a2], 1 ; ret 0x70db
0x00000000004c461d : push rdi ; or byte ptr [rcx + rcx*4 - 0x11], cl ; mov rcx, r14 ; call rax
0x0000000000578da7 : push rdi ; out 0x72, al ; ret
0x0000000000500826 : push rdi ; pop rax ; ret
0x000000000042c32d : push rdi ; pop rdx ; ret
0x0000000000597639 : push rdi ; push 0x897884f ; salc ; lodsb al, byte ptr [rsi] ; ret 0xd6fb
0x00000000004d599f : push rdi ; ret
0x00000000005a2953 : push rdi ; ret 0xb9d9
0x00000000005a99d2 : push rdi ; ret 0xefcf
0x0000000000452584 : push rdi ; ret 0xf66
0x00000000004d8fb1 : push rdi ; ror byte ptr [rdi], 0x11 ; adc byte ptr [r15], r9b ; adc dword ptr [rdi], eax ; ret
0x0000000000540b75 : push rdi ; sahf ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000004549ea : push rdi ; sal ebx, 1 ; ret
0x0000000000599470 : push rdi ; salc ; stosb byte ptr [rdi], al ; xor dword ptr [rdi + 0x69af1543], esi ; ret
0x00000000005063dc : push rdi ; sbb al, 0 ; ror byte ptr [rbx - 0x7ebe83a2], 1 ; ret 0x2d9
0x00000000005065c3 : push rdi ; sbb al, 0 ; ror byte ptr [rbx - 0x7ebee3a2], 1 ; ret 0x4b60
0x0000000000506a65 : push rdi ; sbb byte ptr [rax], al ; ror byte ptr [rbx - 0x7ebe93a2], 1 ; ret 0x4314
0x0000000000505e54 : push rdi ; sbb byte ptr [rax], al ; ror byte ptr [rbx - 0x7ebee3a2], 1 ; ret 0x4613
0x0000000000504b65 : push rdi ; shr edi, 1 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000506125 : push rdi ; sub al, 0 ; ror byte ptr [rbx - 0x7ebeb3a2], 1 ; ret 0x5a51
0x00000000005064e7 : push rdi ; sub al, 0 ; ror byte ptr [rbx - 0x7ebef3a2], 1 ; ret 0x6122
0x0000000000506971 : push rdi ; sub byte ptr [rax], al ; ror byte ptr [rbx - 0x7ebea3a2], 1 ; ret 0xf47d
0x0000000000505f3c : push rdi ; sub byte ptr [rax], al ; ror byte ptr [rbx - 0x7ebed3a2], 1 ; ret 0x5bb1
0x0000000000561c23 : push rdi ; sub byte ptr [rbx + 0x41], bl ; pop rsi ; ret
0x000000000042c31e : push rdi ; sub byte ptr [rdx - 0x3d], bl ; mov rax, qword ptr [rdi + 0x28] ; pop rdx ; ret
0x000000000058d86f : push rdi ; xchg eax, edi ; fimul dword ptr [rcx - 0x3f37810b] ; call rdi
0x00000000004b680a : push rdx ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005173a3 : push rdx ; add al, 1 ; ret
0x00000000006114d5 : push rdx ; add al, byte ptr [rax] ; fadd dword ptr [rdx - 0xd] ; jmp qword ptr [rcx]
0x000000000061141d : push rdx ; add al, byte ptr [rax] ; jo 0x61146a ; call qword ptr [rbx]
0x000000000041b0c7 : push rdx ; add cl, byte ptr [rax + 0x39] ; ret 0x8948
0x000000000044c9fb : push rdx ; and ah, al ; sar dword ptr [rdx + 0x6f], 0x5a ; xor ah, al ; ret 0x79
0x0000000000413cfc : push rdx ; and dh, dh ; ret 0x7420
0x00000000005b6a8e : push rdx ; and eax, 0xa88e31fc ; ret 0x8326
0x00000000004def49 : push rdx ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000049bb9b : push rdx ; cld ; dec dword ptr [rax - 0x77] ; ret
0x00000000005a81c5 : push rdx ; cqo ; mov ebx, 0x88335561 ; ret
0x000000000057e0f5 : push rdx ; enter -0x44a, -0x54 ; ret 0x763c
0x0000000000595143 : push rdx ; in eax, 0x77 ; cmp bl, dl ; sbb byte ptr [rbp + rcx*8 - 0x45], ch ; ret
0x000000000057e53f : push rdx ; inc byte ptr [rbx - 0x3bfa7e68] ; ret
0x00000000005acb30 : push rdx ; inc r8 ; pop rdi ; cmc ; ret
0x000000000059c8e8 : push rdx ; insd dword ptr [rdi], dx ; stosb byte ptr [rdi], al ; ret 0xa39d
0x0000000000516833 : push rdx ; jl 0x51683a ; ret
0x00000000005b74c3 : push rdx ; jp 0x5b745b ; push -0xe6dfcd7 ; ret 0x250d
0x00000000005971b3 : push rdx ; lahf ; pop rsp ; ret
0x00000000005842b8 : push rdx ; lahf ; ret 0x7700
0x00000000005d70e7 : push rdx ; mov byte ptr [rsi], -0x3c ; ret 0x3848
0x00000000004324d8 : push rdx ; mov eax, 0x5732a5 ; ret
0x0000000000488e52 : push rdx ; or byte ptr [rax - 0x77], cl ; adc ebx, eax ; ret
0x0000000000461049 : push rdx ; or byte ptr [rax], al ; pop rbx ; ret
0x00000000005b0a23 : push rdx ; outsb dx, byte ptr [rsi] ; xchg eax, ebp ; ret
0x000000000049b9aa : push rdx ; pop rax ; add byte ptr [rcx - 0x48], al ; ret 0
0x000000000049c1d1 : push rdx ; pop rax ; add byte ptr [rcx], dh ; ror byte ptr [rcx + rcx*4 - 0xe], -0x18 ; ret 0x314
0x000000000059d2c7 : push rdx ; pop rax ; jmp 0x96750d1
0x00000000005a54b9 : push rdx ; push rsp ; out -0x15, al ; ret 0x6449
0x00000000005a0a4a : push rdx ; ret
0x00000000005a6e09 : push rdx ; ret 0x153c
0x00000000005c34a0 : push rdx ; ret 0x5c
0x000000000057cf98 : push rdx ; ret 0xd5a6
0x00000000004f011a : push rdx ; ret 0xfffd
0x00000000005b6dad : push rdx ; ror bl, cl ; ror dword ptr [rbx], cl ; ret 0xd5b3
0x00000000005d68e5 : push rdx ; sbb al, spl ; ret 0x6c6
0x00000000005d6e24 : push rdx ; sbb bl, byte ptr [rax - 0xe] ; ret 0xf032
0x0000000000556d7f : push rdx ; stc ; stc ; ret
0x00000000005b18e3 : push rdx ; xchg eax, edi ; sahf ; or eax, 0xeb00e968 ; ret
0x00000000005d7626 : push rdx ; xor sil, al ; ret 0x9012
0x000000000045dc51 : push rsi ; adc al, -0x77 ; ret
0x00000000004e4519 : push rsi ; adc byte ptr [rbp + 9], al ; fadd qword ptr [rcx - 0x77] ; ret
0x0000000000599802 : push rsi ; adc eax, 0x2710841a ; xor al, 0xffffffffffffffb0 ; ret 0xa613
0x000000000041108f : push rsi ; add bl, al ; mov eax, 0x2e ; ret
0x0000000000429834 : push rsi ; add bl, al ; mov eax, 0x570d5a ; ret
0x000000000042dfd5 : push rsi ; add bl, al ; mov eax, 0x574169 ; ret
0x000000000043301b : push rsi ; add bl, al ; mov eax, 0x5cbbe5 ; ret
0x0000000000405b44 : push rsi ; add bl, al ; ret
0x00000000005c35ba : push rsi ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, al ; ret 0x5c
0x00000000005c360a : push rsi ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, bl ; ret 0x5c
0x00000000005c3632 : push rsi ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dl, ch ; ret 0x5c
0x000000000040891d : push rsi ; add byte ptr [rcx - 0x48], al ; ret
0x0000000000414ac7 : push rsi ; add byte ptr [rcx - 0x48], al ; ret 6
0x00000000004195c2 : push rsi ; add byte ptr [rdi + 0x28], bh ; mov eax, edi ; ret
0x00000000004195ab : push rsi ; add byte ptr [rdi + 0x2a], bh ; mov eax, edi ; ret
0x0000000000429846 : push rsi ; add byte ptr [rsp + rax + 0x48], dh ; mov eax, dword ptr [rdi + 8] ; ret
0x0000000000490666 : push rsi ; add dword ptr [rbx], ecx ; add byte ptr [rax - 0x77], cl ; ret
0x000000000047fbf0 : push rsi ; add eax, 0x908e2c1 ; ret 0xb60f
0x0000000000405c06 : push rsi ; add ecx, dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000053240b : push rsi ; and ah, al ; ret 0x79
0x00000000004e45b1 : push rsi ; and byte ptr [rbp + 9], al ; fadd qword ptr [rcx - 0x77] ; ret
0x00000000005b3658 : push rsi ; and byte ptr [rbp + 9], dh ; ret
0x0000000000556aa4 : push rsi ; call 0xffffffffc419004a
0x000000000050678f : push rsi ; cmp byte ptr [rax], al ; fld dword ptr [rcx - 0x3f] ; ret 0x4510
0x0000000000506039 : push rsi ; cmp byte ptr [rbp + 1], al ; loop 0x506048 ; fld dword ptr [rcx - 0x3f] ; ret 0x4511
0x000000000058cc78 : push rsi ; cmpsb byte ptr [rsi], byte ptr [rdi] ; outsb dx, byte ptr [rsi] ; sub dword ptr [rdx - 3], ecx ; sbb byte ptr [rdx + 0x78], bl ; call qword ptr [rdx]
0x00000000005e8745 : push rsi ; int1 ; call qword ptr [rax]
0x000000000059b35e : push rsi ; ja 0x59b2fb ; inc byte ptr [rbp + 0x2b62a352] ; ret
0x00000000005b52fb : push rsi ; jp 0x5b5306 ; ret 0x9ade
0x000000000050b4f9 : push rsi ; ljmp ptr [rcx] ; ret 0xff48
0x00000000005a75da : push rsi ; lodsb al, byte ptr [rsi] ; pushfq ; ret 0x9c69
0x00000000005064fc : push rsi ; or byte ptr [rax], al ; fld dword ptr [rcx - 0x3f] ; ret 0x4510
0x0000000000505d81 : push rsi ; or byte ptr [rbp + 1], al ; loop 0x505d90 ; fld dword ptr [rcx - 0x3f] ; ret 0x4511
0x000000000046b3b3 : push rsi ; or byte ptr [rsi + 8], bh ; mov eax, r9d ; ret
0x00000000005a70c1 : push rsi ; or eax, 0x22653a4f ; ret 0xb805
0x000000000059693c : push rsi ; out dx, eax ; jbe 0x59692f ; jae 0x59696b ; ret
0x0000000000548d69 : push rsi ; pop rbx ; pop r14 ; pop r15 ; ret
0x00000000005a4a3a : push rsi ; pop rcx ; xor cl, byte ptr [rdi + rbp*8 + 0x6e] ; ret
0x000000000057cda9 : push rsi ; pop rsi ; call rax
0x000000000057cda7 : push rsi ; popfq ; push rsi ; pop rsi ; call rax
0x0000000000506a7a : push rsi ; push 0xe20145 ; fld dword ptr [rcx - 0x3f] ; ret 0x410f
0x0000000000506309 : push rsi ; push 0xe20145 ; fld dword ptr [rcx - 0x3f] ; ret 0x450e
0x00000000005991a9 : push rsi ; push rcx ; test eax, 0x8965bf ; jmp qword ptr [rax]
0x00000000005a75d8 : push rsi ; push rsi ; lodsb al, byte ptr [rsi] ; pushfq ; ret 0x9c69
0x00000000004fe8c0 : push rsi ; ret
0x00000000005a869d : push rsi ; ret 0x15e
0x000000000058b960 : push rsi ; ret 0x2211
0x00000000005ab94c : push rsi ; ret 0x3451
0x000000000059b52b : push rsi ; ret 0x38c2
0x000000000058d767 : push rsi ; ret 0x3a22
0x000000000053f59b : push rsi ; ret 0x7406
0x000000000059a798 : push rsi ; ret 0x7461
0x00000000005a0000 : push rsi ; ret 0xe039
0x0000000000467f66 : push rsi ; ret 0xffff
0x00000000005065d8 : push rsi ; sbb byte ptr [rax], al ; fld dword ptr [rcx - 0x3f] ; ret 0x4510
0x0000000000505e69 : push rsi ; sbb byte ptr [rbp + 1], al ; loop 0x505e78 ; fld dword ptr [rcx - 0x3f] ; ret 0x4511
0x000000000059829c : push rsi ; scasb al, byte ptr [rdi] ; ret 0x2687
0x0000000000567c26 : push rsi ; std ; dec dword ptr [rax - 0x77] ; ret
0x000000000059fcd8 : push rsi ; sti ; ret
0x000000000045ddab : push rsi ; sub al, -0x77 ; ret
0x00000000005609ba : push rsi ; sub al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rax ; ret
0x0000000000566070 : push rsi ; sub al, 0 ; ret
0x00000000005066b3 : push rsi ; sub byte ptr [rax], al ; fld dword ptr [rcx - 0x3f] ; ret 0x4510
0x0000000000505f51 : push rsi ; sub byte ptr [rbp + 1], al ; loop 0x505f60 ; fld dword ptr [rcx - 0x3f] ; ret 0x4511
0x00000000005b0d6f : push rsi ; sub dh, byte ptr [rbx + rdi*8 + 0x3db0f735] ; ret 0x40
0x00000000004023b5 : push rsi ; xchg eax, ebx ; add byte ptr [rcx], al ; ret
0x000000000059bdbf : push rsi ; xchg eax, edi ; adc byte ptr [rax + 0x47], dh ; pop rdi ; sub ch, byte ptr [rax - 0x71] ; ret 0x88d0
0x00000000004e4649 : push rsi ; xor byte ptr [rbp + 9], al ; fadd qword ptr [rcx - 0x77] ; ret
0x00000000004d8f88 : push rsp ; adc dword ptr [rax + 9], esi ; ret 0x9489
0x00000000005e7819 : push rsp ; add al, byte ptr [rax] ; adc byte ptr [rdi - 0x10], cl ; call rax
0x00000000006116ad : push rsp ; add al, byte ptr [rax] ; jo 0x611705 ; jmp rdx
0x00000000006116e5 : push rsp ; add al, byte ptr [rax] ; sub byte ptr [rsi - 0xd], cl ; call qword ptr [rax]
0x000000000060f85c : push rsp ; add al, byte ptr ss:[rax] ; loopne 0x60f87a ; call qword ptr [rcx]
0x000000000054dff0 : push rsp ; add al, ch ; pop rcx ; ret 0xfff9
0x0000000000548e55 : push rsp ; add byte ptr [rax - 0x39], cl ; ret
0x000000000054d70b : push rsp ; add byte ptr [rax - 0x77], cl ; ret 0xdbe9
0x0000000000601695 : push rsp ; add dword ptr [rax], eax ; sub byte ptr [rsi - 0x14], ch ; call qword ptr [rsi]
0x00000000004b6f36 : push rsp ; add dword ptr [rax], eax ; xor eax, eax ; pop rdx ; ret
0x00000000005b6daa : push rsp ; add ecx, ebx ; push rdx ; ror bl, cl ; ror dword ptr [rbx], cl ; ret 0xd5b3
0x00000000004bc6d1 : push rsp ; and al, 0x10 ; call rax
0x000000000055a0aa : push rsp ; and al, 0x18 ; lea rcx, qword ptr [rsp + 0x20] ; call rbx
0x000000000041626f : push rsp ; and al, 0x18 ; mov rdi, rbx ; call rcx
0x000000000053458f : push rsp ; and al, 0x20 ; add esp, eax ; ret 0x75
0x00000000004aa370 : push rsp ; and al, 0x28 ; mov r8, r14 ; call rax
0x00000000004395a6 : push rsp ; and al, 0x5f ; mov r8d, r12d ; call rax
0x000000000047df48 : push rsp ; and al, 0x70 ; call r12
0x0000000000438a44 : push rsp ; and al, 0xc ; mov rdi, rbx ; call rax
0x000000000048fe3d : push rsp ; and al, 8 ; call r10
0x000000000048ff5e : push rsp ; and al, 8 ; call r14
0x00000000005506a9 : push rsp ; and al, 8 ; mov ecx, r15d ; call rax
0x0000000000618439 : push rsp ; call qword ptr [rax]
0x000000000060fe5c : push rsp ; cmp al, 2 ; add byte ptr [rax + 0x17], dl ; call qword ptr [rax]
0x00000000005a2b30 : push rsp ; cmp cl, bl ; ret 0xa99c
0x0000000000496466 : push rsp ; cmp dword ptr [rax], eax ; pop rdx ; ret
0x0000000000496444 : push rsp ; cmp dword ptr [rax], eax ; ret
0x00000000005b4991 : push rsp ; cmp esp, dword ptr [rsi] ; sub dword ptr [rbx], edx ; call qword ptr [rsi]
0x00000000005f2b5c : push rsp ; imul eax, dword ptr [rax], 0xe553c000 ; call rsp
0x00000000005e5c3d : push rsp ; in eax, dx ; jmp qword ptr [rax]
0x00000000005a0065 : push rsp ; int 0x80
0x00000000005e86f5 : push rsp ; int1 ; jmp qword ptr [rax]
0x00000000005a9ad0 : push rsp ; jle 0x5a9af3 ; xchg eax, esp ; or byte ptr [rdx + 0x69], bh ; ret
0x00000000005e4aed : push rsp ; jmp 0x5e4af1
0x000000000046cbd8 : push rsp ; jmp qword ptr [rax]
0x0000000000577dfe : push rsp ; jnp 0x577dbb ; pop rcx ; pop rdx ; ret 0xd539
0x000000000060735c : push rsp ; mov cl, 1 ; add byte ptr [rax], dl ; xor ch, dh ; jmp rsi
0x000000000061745c : push rsp ; mov dl, 2 ; add byte ptr [rax - 0x1b], ah ; hlt ; call qword ptr [rsi]
0x000000000042985e : push rsp ; mov dword ptr [rsi], eax ; mov eax, dword ptr [rdi + 0x50] ; ret
0x000000000041957a : push rsp ; mov edi, 0x14 ; mov eax, edi ; ret
0x00000000005983b6 : push rsp ; mov word ptr [rip - 0x60ae2af2], es ; ret 0xe1a9
0x000000000059a796 : push rsp ; mov word ptr [rsi + 0x44], ss ; ret 0x7461
0x00000000005a2ffd : push rsp ; movsb byte ptr [rdi], byte ptr [rsi] ; movsd dword ptr [rdi], dword ptr [rsi] ; pop rdx ; loop 0x5a3069 ; ret
0x0000000000433129 : push rsp ; or byte ptr [rdi], dl ; ret
0x00000000005a54ba : push rsp ; out -0x15, al ; ret 0x6449
0x00000000006085e9 : push rsp ; out dx, al ; call qword ptr [rax]
0x00000000005a4f5c : push rsp ; pop rsp ; ret
0x0000000000463152 : push rsp ; ret
0x0000000000596680 : push rsp ; ret 0x29df
0x00000000005b4caf : push rsp ; ret 0x40e7
0x000000000046930b : push rsp ; ret 0x48f8
0x00000000005b3bae : push rsp ; ret 0x5018
0x00000000005df258 : push rsp ; ret 0x55
0x00000000005abe55 : push rsp ; ret 0x5ec7
0x0000000000594808 : push rsp ; ret 0xf22c
0x000000000049e6d8 : push rsp ; ret 2
0x00000000005a055b : push rsp ; std ; ret
0x0000000000597a77 : push rsp ; sti ; ret 0x4e7d
0x0000000000606a5c : push rsp ; test al, 1 ; add byte ptr [rax], dh ; or ebp, esi ; call rdi
0x000000000049cc18 : push rsp ; test dword ptr [rdx], 0x5ac03100 ; ret
0x0000000000506d9c : push rsp ; xchg eax, edi ; adc byte ptr [rax], al ; ret 0x8a44
0x0000000000506d66 : push rsp ; xchg eax, edi ; or byte ptr [rax], al ; ret 0x8a44
0x0000000000506dd2 : push rsp ; xchg eax, edi ; sbb byte ptr [rax], al ; ret 0x8a44
0x000000000057e3a2 : push rsp ; xchg eax, edx ; ret
0x000000000059db7d : push rsp ; xlatb ; ret 0x32ec
0x00000000004e917d : push rsp ; xor al, 0 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rax ; ret
0x00000000004e91d6 : push rsp ; xor al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rax ; ret
0x00000000004e9164 : push rsp ; xor al, 0 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000004c1a22 : pushfq ; adc al, -0x79 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x3908
0x0000000000433117 : pushfq ; adc byte ptr [rdi], dl ; ret
0x00000000006105a4 : pushfq ; add al, byte ptr [r8] ; sub byte ptr [rcx], bl ; call qword ptr [rax]
0x00000000004b4560 : pushfq ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004c9f00 : pushfq ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000000005fb5a4 : pushfq ; add byte ptr [rax], al ; call 0x115f9f87
0x000000000043218b : pushfq ; add eax, dword ptr [rax] ; add byte ptr [rax + 0x5735ee], bh ; ret
0x0000000000600ba4 : pushfq ; add qword ptr [r8], rax ; and rsp, rbp ; jmp qword ptr [rdi]
0x000000000059b2a4 : pushfq ; call 0x7f1c5cd3
0x0000000000497127 : pushfq ; cld ; dec dword ptr [rax - 0x77] ; ret
0x00000000005ae877 : pushfq ; cli ; ret 0x4c6b
0x000000000060b7a4 : pushfq ; cmc ; add dword ptr [rax], eax ; call 0x1260a6da
0x00000000005990ff : pushfq ; cmp dh, al ; or al, 0xffffffffffffffc0 ; pop rbx ; in eax, dx ; jl 0x5990ee ; ret 0x278f
0x0000000000609ba4 : pushfq ; fld dword ptr [rcx] ; add byte ptr [rax], bh ; mov bl, -0x12 ; jmp rsp
0x0000000000552767 : pushfq ; idiv edi ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000005e566d : pushfq ; in al, dx ; jmp rax
0x000000000060c0a4 : pushfq ; inc byte ptr [rcx] ; add byte ptr [rax], bh ; out dx, eax ; call qword ptr [rax]
0x00000000006176a4 : pushfq ; mov ah, 2 ; add byte ptr [rax - 0x1a], bh ; hlt ; call qword ptr [rdi]
0x00000000006175a4 : pushfq ; mov bl, 2 ; add al, bh ; in eax, -0xc ; call qword ptr [rsi]
0x00000000005ae4f4 : pushfq ; mov dh, 0x37 ; je 0x5ae523 ; ret 0x6948
0x00000000006178a4 : pushfq ; mov dh, 2 ; add byte ptr [rax], bl ; out -0xc, eax ; call qword ptr [rdx]
0x00000000005a41d1 : pushfq ; outsd dx, dword ptr [rsi] ; ret 0x53a0
0x0000000000542410 : pushfq ; pop rbp ; add byte ptr [rcx], dh ; ror byte ptr [rcx + rcx*4 - 0xe], -0x18 ; ret
0x00000000005d6e23 : pushfq ; push rdx ; sbb bl, byte ptr [rax - 0xe] ; ret 0xf032
0x00000000004f53e8 : pushfq ; ret
0x00000000005564b7 : pushfq ; ret 0x2fc2
0x000000000059d2cf : pushfq ; ret 0x51d8
0x00000000005a75dc : pushfq ; ret 0x9c69
0x00000000005a9535 : pushfq ; ret 0xba5c
0x0000000000478548 : pushfq ; ret 0xca08
0x00000000004f5262 : pushfq ; ret 0xda84
0x00000000004e3d50 : pushfq ; sbb byte ptr [rcx - 0x3ea57d87], bl ; ret
0x00000000005abacc : pushfq ; sbb edx, dword ptr [rsi + 0x290570e1] ; ret 0x2f5c
0x000000000060bda4 : pushfq ; sti ; add dword ptr [rax], eax ; test al, 0x48 ; out dx, eax ; jmp rcx
0x00000000005a3859 : pushfq ; sub eax, 0xe2ab75b7 ; xchg eax, edi ; jmp qword ptr [rbx]
0x00000000004d7e1b : pushfq ; xchg dword ptr [rax], esp ; or al, 0 ; add cl, al ; ret
0x0000000000487a60 : pushfq ; xchg eax, ebx ; std ; dec dword ptr [rax - 0x77] ; ret
0x00000000005937f5 : pushfq ; xchg eax, esi ; jnp 0x5937a1 ; ret 0x9591
0x00000000005553e9 : pxor mm0, mm2 ; ret
0x0000000000554fd6 : pxor mm0, mm4 ; pshufb xmm0, xmm1 ; ret
0x000000000055516c : pxor mm0, mm4 ; pshufb xmm0, xmm2 ; ret
0x00000000005553b5 : pxor mm0, mm7 ; movdqa xmm7, xmm0 ; ret
0x0000000000473ac5 : pxor mm0, mm7 ; ret
0x0000000000454984 : pxor mm2, mm3 ; ret
0x00000000005552d0 : pxor mm6, mm6 ; pxor xmm7, xmm7 ; ret
0x0000000000473ac1 : pxor mm7, mm7 ; pxor xmm0, xmm7 ; ret
0x00000000005552d4 : pxor mm7, mm7 ; ret
0x00000000005553e8 : pxor xmm0, xmm2 ; ret
0x000000000055516b : pxor xmm0, xmm4 ; pshufb xmm0, xmm2 ; ret
0x00000000005553b4 : pxor xmm0, xmm7 ; movdqa xmm7, xmm0 ; ret
0x0000000000473ac4 : pxor xmm0, xmm7 ; ret
0x0000000000454983 : pxor xmm2, xmm3 ; ret
0x00000000005552cf : pxor xmm6, xmm6 ; pxor xmm7, xmm7 ; ret
0x00000000005552d3 : pxor xmm7, xmm7 ; ret
0x00000000004e4a51 : rcl bh, cl ; sub al, byte ptr [rcx + 9] ; rol dword ptr [rcx + 0x31], cl ; ret
0x00000000005d67cc : rcl bl ; ret
0x00000000005e58a0 : rcl bl, 1 ; add al, al ; ret
0x00000000004ccd0c : rcl byte ptr [rax + 0x48] ; mov eax, ecx ; pop rdx ; ret
0x000000000057dfff : rcl byte ptr [rbp - 0x3fb138a5], cl ; ret
0x00000000005eb8b8 : rcl byte ptr [rbx + rax], -0x10 ; div edi ; jmp rax
0x00000000005e4adc : rcl byte ptr [rbx - 0x15] ; jmp rax
0x00000000005a76e5 : rcl byte ptr [rcx - 0x3e] ; jmp 0x5a76f4
0x000000000043c176 : rcl byte ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005e7374 : rcl byte ptr [rcx], -0x10 ; call qword ptr [rax]
0x00000000005eaf1c : rcl byte ptr [rdi], -9 ; call qword ptr [rax]
0x000000000059a995 : rcl byte ptr [rdx] ; xchg eax, ebp ; in al, dx ; leave ; or al, 0x6b ; ret 0x1320
0x0000000000606c90 : rcl byte ptr [rsi + rbp*8] ; jmp qword ptr [rdi]
0x00000000005e221c : rcl ch, -0x1c ; call rax
0x00000000005ad265 : rcl ch, 5 ; lodsb al, byte ptr [rsi] ; ret
0x0000000000504afc : rcl cl, -0x11 ; dec dword ptr [rax - 0x77] ; ret
0x00000000005e45fc : rcl dh, -0x16 ; jmp qword ptr [rax]
0x00000000005d7501 : rcl dl ; ret 0x80b
0x00000000005d6838 : rcl dl ; ret 0xec12
0x000000000054a28b : rcl dword ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000059ab79 : rcl dword ptr [rbp - 3], cl ; std ; ret 0x3148
0x00000000005df209 : rcl dword ptr [rbp], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x55
0x00000000004e5c9b : rcl dword ptr [rcx], 0x34 ; add byte ptr [rax + 1], bh ; ret
0x00000000005998cd : rcl dword ptr [rcx], 0x41 ; out dx, eax ; ret 0x3a29
0x00000000004cb199 : rcl dword ptr [rcx], cl ; add byte ptr [rax], al ; xor ebx, ebx ; mov eax, ebx ; pop rbx ; ret
0x00000000005a0d83 : rcl dword ptr [rdi + 0x77], cl ; loop 0x5a0d59 ; adc esi, ebp ; ret 0xb687
0x0000000000594806 : rcl dword ptr [rdi] ; push rsp ; ret 0xf22c
0x00000000004fad9b : rcl dword ptr [rip - 0x3fce0003] ; pop rbx ; ret
0x00000000005998cc : rcl dword ptr cs:[rcx], 0x41 ; out dx, eax ; ret 0x3a29
0x000000000059e20a : rcl eax, cl ; cmp al, -0x62 ; ret 0x64d4
0x000000000058b95e : rcl ebx, 0x56 ; ret 0x2211
0x00000000005efa40 : rcr al, -0x1d ; jmp qword ptr [rcx]
0x00000000005e46c4 : rcr bh, -0x16 ; call rax
0x00000000005ed8b0 : rcr byte ptr [rax - 0x1e] ; call qword ptr [rdx]
0x0000000000610770 : rcr byte ptr [rax] ; call qword ptr [rax]
0x0000000000561b2b : rcr byte ptr [rbx + 0x41] ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004045e5 : rcr byte ptr [rbx + 0x41], 0x5c ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000402511 : rcr byte ptr [rbx + 0x41], 0x5e ; pop r15 ; ret
0x000000000042b609 : rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0x00000000005e4ad8 : rcr byte ptr [rbx + 0x53d00001], -0x15 ; jmp rax
0x000000000049553a : rcr byte ptr [rbx - 0x3d], 0x5b ; ret
0x00000000004ec85c : rcr byte ptr [rbx*2 + 0x4cc03100], -0x77 ; ret 0x86e8
0x00000000005b1777 : rcr byte ptr [rcx - 0x3c], cl ; ret
0x00000000005073bb : rcr byte ptr [rcx], -0xd ; ret
0x00000000005ea50c : rcr byte ptr [rdi - 0xa] ; call qword ptr [rax]
0x0000000000594ef2 : rcr byte ptr [rdi] ; ret 0x2a90
0x00000000005b5a1e : rcr byte ptr [rdi], -3 ; sub ch, cl ; in al, dx ; ret
0x000000000059a4e6 : rcr byte ptr [rdx + 0x42] ; ret
0x00000000004b8fde : rcr byte ptr [rdx - 0x3d], 0x58 ; jmp r11
0x00000000004b9296 : rcr byte ptr [rdx - 0x3d], 0x58 ; jmp r8
0x00000000004b90a1 : rcr byte ptr [rdx - 0x3d], 0x58 ; jmp r9
0x00000000004b92f1 : rcr byte ptr [rdx - 0x3d], 0x59 ; jmp rax
0x00000000004b8f7e : rcr byte ptr [rdx - 0x3d], 0x5a ; jmp rax
0x00000000005e6174 : rcr byte ptr [rdx], -0x12 ; jmp qword ptr [rax]
0x00000000004f6b5a : rcr byte ptr [rdx], cl ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000049f690 : rcr byte ptr [rsi + 0x58], 0 ; cmovne rax, rcx ; ret
0x00000000005b240c : rcr byte ptr [rsi - 0x52] ; mov cl, 0x4d ; ret
0x00000000005a3e8f : rcr dh, 0x50 ; cmp eax, 0xa3f23e83 ; ret 0x3017
0x000000000055295b : rcr dh, 0x5d ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; leave ; ret
0x00000000005e5af0 : rcr dh, 1 ; add byte ptr [rax + 0x1e], ah ; in eax, dx ; jmp rax
0x00000000005adfe6 : rcr dh, cl ; ret
0x000000000059469a : rcr dword ptr [rax - 0x69] ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000458929 : rcr dword ptr [rax - 0x74b70006], cl ; add byte ptr [rax - 1], cl ; ret
0x00000000005b4852 : rcr dword ptr [rax], cl ; ret 0x32c0
0x000000000043599d : rcr dword ptr [rbx + 0x5d], 0x41 ; jmp rbx
0x000000000042a799 : rcr dword ptr [rbx], cl ; or al, byte ptr [rax] ; xor eax, eax ; pop rbx ; ret
0x000000000059b8c9 : rcr dword ptr [rbx], cl ; ret
0x00000000005959af : rcr dword ptr [rcx], cl ; fsubr dword ptr [r8] ; out 0x10, eax ; ret
0x000000000059412f : rcr dword ptr [rdx - 0x16] ; ret
0x00000000005ab96c : rcr eax ; ret
0x000000000049be19 : rep movsb byte ptr [rdi], byte ptr [rsi] ; add al, 0 ; pop rbx ; ret
0x0000000000599006 : repe cmpsb byte ptr [rsi], byte ptr [rdi] ; push rax ; jrcxz 0x599054 ; push 0x42 ; sub eax, dword ptr [rdi] ; ret 0xecf9
0x0000000000401bb6 : ret
0x0000000000405169 : ret 0
0x0000000000446069 : ret 0x10
0x000000000045374b : ret 0x100f
0x0000000000598d16 : ret 0x1026
0x00000000004dcce6 : ret 0x1027
0x000000000044ac89 : ret 0x105
0x0000000000440f4a : ret 0x1077
0x00000000004e446b : ret 0x109
0x00000000005b5702 : ret 0x10f8
0x00000000004bb1aa : ret 0x111
0x000000000059faa7 : ret 0x1123
0x0000000000561e5d : ret 0x1148
0x00000000004be4aa : ret 0x1149
0x00000000005972c3 : ret 0x1163
0x000000000041ee6a : ret 0x118
0x00000000005b0b18 : ret 0x1203
0x0000000000413d2a : ret 0x1258
0x00000000005a2ef9 : ret 0x1278
0x00000000005a1cc7 : ret 0x12a4
0x000000000057871c : ret 0x12b4
0x00000000005b2499 : ret 0x12c9
0x000000000059a99d : ret 0x1320
0x0000000000426cda : ret 0x1379
0x00000000005ad3e9 : ret 0x13e6
0x00000000004f9347 : ret 0x13e8
0x0000000000541677 : ret 0x13e9
0x0000000000538ecd : ret 0x13eb
0x000000000050928a : ret 0x14
0x000000000051422d : ret 0x140
0x000000000051f4d4 : ret 0x141
0x00000000005a5b48 : ret 0x1437
0x0000000000471aa9 : ret 0x144
0x00000000005a616e : ret 0x1441
0x000000000050817b : ret 0x145
0x0000000000540892 : ret 0x148
0x0000000000506cff : ret 0x148b
0x00000000004be81d : ret 0x149
0x000000000046640b : ret 0x14c
0x0000000000480dea : ret 0x14d
0x00000000005a47e9 : ret 0x14db
0x0000000000485a56 : ret 0x14e8
0x00000000005a6e0a : ret 0x153c
0x000000000040328a : ret 0x158
0x000000000040fcea : ret 0x1586
0x00000000005b5aee : ret 0x1595
0x00000000005b7ea6 : ret 0x15a3
0x00000000005a869e : ret 0x15e
0x000000000040fae5 : ret 0x15e8
0x0000000000481493 : ret 0x167d
0x0000000000430ac4 : ret 0x16e8
0x0000000000404cc6 : ret 0x16eb
0x000000000053841a : ret 0x17
0x000000000046e292 : ret 0x1775
0x00000000005a39f7 : ret 0x1878
0x00000000005a4d0d : ret 0x18b4
0x00000000004da41a : ret 0x193
0x0000000000578d7d : ret 0x1948
0x00000000005a4578 : ret 0x1953
0x00000000005b19c3 : ret 0x1955
0x0000000000546f22 : ret 0x1988
0x00000000004de6c1 : ret 0x19e8
0x00000000005b68f6 : ret 0x1a3b
0x00000000004b39f0 : ret 0x1ae8
0x00000000004f1d20 : ret 0x1ae9
0x0000000000538efc : ret 0x1b3
0x00000000005a99d6 : ret 0x1b5a
0x000000000059b439 : ret 0x1b6e
0x000000000045fb79 : ret 0x1b7d
0x00000000004a545d : ret 0x1b8
0x0000000000526c22 : ret 0x1b9
0x00000000005789b6 : ret 0x1bab
0x000000000059e8de : ret 0x1bbc
0x000000000059f56a : ret 0x1bd7
0x00000000004397d8 : ret 0x1be
0x000000000045abe2 : ret 0x1bf
0x00000000004f6a2a : ret 0x1c
0x0000000000596d21 : ret 0x1c33
0x00000000005b571a : ret 0x1c5b
0x00000000004c9a4a : ret 0x1c8
0x00000000005b1398 : ret 0x1c87
0x000000000043c27b : ret 0x1cbe
0x000000000040f6de : ret 0x1ce8
0x00000000005a9c77 : ret 0x1d0d
0x00000000005a0d24 : ret 0x1d5f
0x0000000000462a90 : ret 0x1d75
0x000000000041db39 : ret 0x1d8
0x000000000059981f : ret 0x1d82
0x00000000005afb08 : ret 0x1daf
0x000000000053622d : ret 0x1de8
0x0000000000555866 : ret 0x1e41
0x00000000005a9909 : ret 0x1e72
0x000000000059746e : ret 0x1ede
0x000000000042e2ec : ret 0x1ee8
0x00000000004f672a : ret 0x1f
0x00000000004c885c : ret 0x1f0f
0x000000000050f8c2 : ret 0x1f74
0x000000000041fc2f : ret 0x200
0x00000000005af115 : ret 0x203c
0x00000000004c5b4a : ret 0x207
0x00000000005b7494 : ret 0x2076
0x000000000043f61a : ret 0x20e8
0x0000000000536d6f : ret 0x211e
0x00000000005aa6b9 : ret 0x2128
0x0000000000444fb0 : ret 0x2141
0x000000000051fa2d : ret 0x2144
0x00000000004e3c55 : ret 0x2145
0x0000000000530d06 : ret 0x2149
0x000000000040a0d7 : ret 0x214c
0x0000000000445513 : ret 0x214d
0x00000000005a79db : ret 0x2157
0x00000000005b19dc : ret 0x2167
0x0000000000532209 : ret 0x21c0
0x00000000004b5989 : ret 0x21e8
0x00000000005945de : ret 0x21f7
0x000000000058b961 : ret 0x2211
0x0000000000593368 : ret 0x2237
0x00000000005a453d : ret 0x2244
0x0000000000441020 : ret 0x2274
0x00000000005abfee : ret 0x2280
0x0000000000596771 : ret 0x2297
0x000000000059de07 : ret 0x22b3
0x0000000000594795 : ret 0x22da
0x000000000059af64 : ret 0x2316
0x00000000005572ff : ret 0x2318
0x00000000005d6ffb : ret 0x2343
0x0000000000465611 : ret 0x2374
0x0000000000506886 : ret 0x23a7
0x00000000005acd97 : ret 0x23ac
0x00000000005a4b04 : ret 0x23b4
0x0000000000541567 : ret 0x23e9
0x000000000040614a : ret 0x245
0x00000000005b6a61 : ret 0x2496
0x000000000058c5e9 : ret 0x24ac
0x000000000057e871 : ret 0x24d8
0x0000000000408805 : ret 0x25
0x00000000005b74cb : ret 0x250d
0x000000000059834b : ret 0x254
0x00000000004a6aaa : ret 0x258
0x000000000049b7b5 : ret 0x25e8
0x000000000059d8bf : ret 0x25f3
0x00000000005a76ca : ret 0x2642
0x00000000005a29b9 : ret 0x265
0x000000000057e2c1 : ret 0x2660
0x000000000059829e : ret 0x2687
0x000000000049a214 : ret 0x26e8
0x00000000005a5931 : ret 0x272
0x000000000043a54f : ret 0x2776
0x0000000000599108 : ret 0x278f
0x00000000005a8411 : ret 0x27ba
0x000000000050af13 : ret 0x27e8
0x00000000004f5e2a : ret 0x28
0x0000000000452918 : ret 0x280f
0x000000000055584d : ret 0x2841
0x00000000005947a1 : ret 0x2899
0x00000000004981b2 : ret 0x28e8
0x000000000058452b : ret 0x28f8
0x000000000059ea4c : ret 0x2910
0x0000000000468a22 : ret 0x2941
0x000000000050dfb6 : ret 0x2944
0x000000000045fe42 : ret 0x2948
0x00000000004dcc70 : ret 0x2949
0x0000000000506cbf : ret 0x294c
0x00000000005a3eed : ret 0x299b
0x0000000000596681 : ret 0x29df
0x00000000004b32e1 : ret 0x29e8
0x000000000059d702 : ret 0x2a40
0x00000000005781db : ret 0x2a5
0x0000000000594ef4 : ret 0x2a90
0x0000000000595d63 : ret 0x2ac8
0x0000000000471230 : ret 0x2ae9
0x000000000059b5f3 : ret 0x2afe
0x000000000047809e : ret 0x2b75
0x0000000000463c5f : ret 0x2be9
0x0000000000598302 : ret 0x2c1
0x00000000005d6acd : ret 0x2c2
0x00000000005572a5 : ret 0x2c2d
0x000000000051fe26 : ret 0x2c33
0x000000000059c5e8 : ret 0x2c46
0x00000000005152e7 : ret 0x2c8b
0x000000000058bffe : ret 0x2c94
0x000000000059a6dc : ret 0x2cc2
0x00000000005d74f2 : ret 0x2cca
0x000000000040fe7e : ret 0x2ce8
0x000000000058e41b : ret 0x2d11
0x00000000005aed6b : ret 0x2d31
0x000000000055bdda : ret 0x2d3d
0x00000000005a1de8 : ret 0x2d3e
0x00000000004b8e4a : ret 0x2d4
0x000000000059618a : ret 0x2d54
0x00000000005063e5 : ret 0x2d9
0x00000000005b3bf6 : ret 0x2dbe
0x000000000043cfaa : ret 0x2de
0x00000000004fcedd : ret 0x2de8
0x0000000000444c4a : ret 0x2e66
0x000000000047b5fa : ret 0x2e8
0x000000000052b7c2 : ret 0x2e81
0x00000000005a25b4 : ret 0x2eae
0x00000000005957cf : ret 0x2ec4
0x0000000000558abc : ret 0x2ee8
0x000000000044d8d8 : ret 0x2ef
0x0000000000446fca : ret 0x2f03
0x00000000005d72cf : ret 0x2f4f
0x00000000005abad3 : ret 0x2f5c
0x000000000059cd0a : ret 0x2f85
0x00000000005b5df1 : ret 0x2fac
0x000000000054eba6 : ret 0x2fbb
0x00000000005564b0 : ret 0x2fc2
0x00000000005a3e97 : ret 0x3017
0x00000000005a2e2d : ret 0x306d
0x000000000048ce3d : ret 0x307
0x00000000005066a7 : ret 0x3085
0x00000000004e3f74 : ret 0x309
0x0000000000508b00 : ret 0x30a
0x000000000059632d : ret 0x30e2
0x000000000040c9ca : ret 0x30e8
0x0000000000513a54 : ret 0x31
0x000000000044392f : ret 0x3102
0x000000000043c0f0 : ret 0x3108
0x00000000004e3ede : ret 0x3109
0x00000000004d7de9 : ret 0x310b
0x0000000000439ffa : ret 0x310d
0x00000000005b25b8 : ret 0x3118
0x000000000053682f : ret 0x311e
0x00000000005a9140 : ret 0x3128
0x000000000049c1da : ret 0x314
0x00000000004e3c58 : ret 0x3141
0x0000000000411897 : ret 0x3144
0x0000000000437a48 : ret 0x3145
0x00000000004dfaec : ret 0x3148
0x0000000000533716 : ret 0x3149
0x000000000047c0c6 : ret 0x314c
0x00000000004d4c98 : ret 0x314d
0x00000000004e29eb : ret 0x3164
0x000000000049d909 : ret 0x31e8
0x000000000050fa54 : ret 0x31fe
0x000000000050711b : ret 0x3244
0x0000000000593bf8 : ret 0x325c
0x00000000005b1aa9 : ret 0x3271
0x00000000005b4854 : ret 0x32c0
0x000000000059db7f : ret 0x32ec
0x00000000004a092a : ret 0x332
0x000000000059b2a8 : ret 0x337e
0x00000000005a3fe8 : ret 0x33c5
0x000000000053bfa7 : ret 0x33e8
0x0000000000541457 : ret 0x33e9
0x00000000004b509a : ret 0x34
0x000000000044b90d : ret 0x340
0x0000000000578282 : ret 0x3437
0x00000000005a12a4 : ret 0x3449
0x00000000005ab94d : ret 0x3451
0x0000000000578936 : ret 0x3453
0x000000000045936a : ret 0x346
0x00000000005b7a00 : ret 0x3472
0x00000000005a68a9 : ret 0x347f
0x0000000000423c9e : ret 0x348
0x00000000004e64ea : ret 0x3480
0x000000000059eafa : ret 0x349e
0x00000000005d766a : ret 0x34c6
0x0000000000593892 : ret 0x34ef
0x000000000059457c : ret 0x3520
0x00000000005a62b3 : ret 0x3593
0x00000000005a4cc9 : ret 0x35a0
0x00000000005a3ecc : ret 0x35cc
0x000000000040cf05 : ret 0x35e8
0x00000000004cd4aa : ret 0x35ef
0x00000000004cd3a9 : ret 0x35f0
0x00000000004c8071 : ret 0x3643
0x00000000004b0077 : ret 0x37
0x0000000000596d5f : ret 0x370f
0x00000000005b0cd9 : ret 0x375b
0x00000000005aee33 : ret 0x37ca
0x00000000004aea8d : ret 0x37d8
0x00000000004944aa : ret 0x37e
0x000000000040b0a3 : ret 0x37e8
0x00000000004a7cc2 : ret 0x3845
0x00000000004a7bc2 : ret 0x3846
0x00000000005d70eb : ret 0x3848
0x00000000004db21b : ret 0x38b
0x00000000005aa46f : ret 0x38c1
0x000000000059b52c : ret 0x38c2
0x000000000049d456 : ret 0x38e4
0x000000000049d23e : ret 0x38e6
0x000000000049d17a : ret 0x38e7
0x00000000004f1c55 : ret 0x3902
0x00000000004417b6 : ret 0x3904
0x00000000004c1a2a : ret 0x3908
0x00000000005aba04 : ret 0x3916
0x00000000005397af : ret 0x3941
0x0000000000411d0a : ret 0x3944
0x0000000000503f96 : ret 0x3945
0x0000000000406d3c : ret 0x3948
0x000000000044805f : ret 0x3949
0x000000000043664f : ret 0x394c
0x000000000046c2c0 : ret 0x394d
0x000000000044d461 : ret 0x3956
0x00000000005b0a8a : ret 0x39c7
0x00000000004e50f8 : ret 0x39ec
0x0000000000464a88 : ret 0x39f8
0x000000000058d769 : ret 0x3a22
0x00000000005998d1 : ret 0x3a29
0x0000000000599cd3 : ret 0x3ab9
0x00000000004417ef : ret 0x3b04
0x000000000049512a : ret 0x3b1
0x000000000050e0fc : ret 0x3b44
0x0000000000444f96 : ret 0x3b4c
0x00000000005b2b64 : ret 0x3b5a
0x00000000004dcb44 : ret 0x3b75
0x0000000000532066 : ret 0x3b81
0x00000000005d77b2 : ret 0x3bce
0x0000000000471685 : ret 0x3bf
0x00000000005b502b : ret 0x3c01
0x00000000005d724b : ret 0x3c0c
0x00000000005b0812 : ret 0x3c61
0x0000000000447625 : ret 0x3d23
0x000000000059bf60 : ret 0x3d2e
0x000000000047dee3 : ret 0x3d76
0x00000000005b451f : ret 0x3d96
0x000000000050421d : ret 0x3de8
0x000000000041b8d7 : ret 0x3e8
0x000000000042d745 : ret 0x3eb
0x000000000058eb4b : ret 0x3ece
0x00000000005a81db : ret 0x3ee1
0x00000000004f319c : ret 0x3ee8
0x000000000059fde2 : ret 0x3ef2
0x00000000005b2a4e : ret 0x3fc0
0x00000000005b0d77 : ret 0x40
0x0000000000554854 : ret 0x4020
0x00000000004272aa : ret 0x4044
0x00000000005b4c3c : ret 0x4052
0x0000000000597d3b : ret 0x4089
0x00000000004b2e1a : ret 0x409
0x0000000000447598 : ret 0x40a3
0x00000000005a60c2 : ret 0x40e2
0x00000000005b4cb0 : ret 0x40e7
0x0000000000594d2b : ret 0x40fb
0x0000000000532454 : ret 0x41
0x00000000005203e4 : ret 0x4103
0x00000000004e3cff : ret 0x4105
0x000000000046c377 : ret 0x4108
0x00000000004e48a1 : ret 0x410a
0x00000000004e46bb : ret 0x410b
0x00000000004e4253 : ret 0x410c
0x000000000050689b : ret 0x410f
0x00000000005aa009 : ret 0x4113
0x0000000000548d62 : ret 0x415b
0x000000000059c446 : ret 0x4165
0x00000000004737b4 : ret 0x4166
0x00000000004020d2 : ret 0x4171
0x0000000000401ed2 : ret 0x4172
0x0000000000401cd2 : ret 0x4173
0x000000000051137e : ret 0x41c4
0x00000000005d4fd0 : ret 0x41e0
0x0000000000496a99 : ret 0x41e8
0x0000000000563a99 : ret 0x41f3
0x00000000004030d9 : ret 0x41f4
0x00000000005729a9 : ret 0x42
0x00000000005070d2 : ret 0x4201
0x00000000005a428b : ret 0x426d
0x00000000005161a5 : ret 0x428b
0x00000000004492c6 : ret 0x42c4
0x00000000004ae378 : ret 0x42e8
0x0000000000506a6e : ret 0x4314
0x00000000005ac0f1 : ret 0x431e
0x000000000057831a : ret 0x4324
0x00000000005b7d66 : ret 0x434e
0x000000000059dada : ret 0x435d
0x0000000000574770 : ret 0x4361
0x0000000000554aff : ret 0x4374
0x000000000050602d : ret 0x438e
0x00000000005a457c : ret 0x43bd
0x00000000005112a3 : ret 0x43c4
0x00000000004fe877 : ret 0x43e8
0x000000000044cf5e : ret 0x4400
0x000000000044d045 : ret 0x4401
0x000000000044d196 : ret 0x4402
0x000000000040b80d : ret 0x4403
0x0000000000505457 : ret 0x4405
0x00000000004455c1 : ret 0x4408
0x00000000004e3f26 : ret 0x4409
0x0000000000507816 : ret 0x440a
0x00000000005a53c2 : ret 0x441
0x000000000043498b : ret 0x4414
0x0000000000445086 : ret 0x4418
0x00000000005368f4 : ret 0x441e
0x000000000058d98b : ret 0x443a
0x0000000000451326 : ret 0x4466
0x00000000005b1e99 : ret 0x4486
0x000000000045d9cd : ret 0x4488
0x000000000041fce3 : ret 0x4489
0x00000000004f0642 : ret 0x448b
0x00000000004cfe49 : ret 0x44c7
0x00000000005345e4 : ret 0x45
0x00000000004f4aba : ret 0x450
0x000000000051a64b : ret 0x4500
0x000000000051a722 : ret 0x4501
0x000000000051a872 : ret 0x4502
0x000000000051a952 : ret 0x4503
0x0000000000507cdb : ret 0x4505
0x0000000000438293 : ret 0x4506
0x00000000005085a1 : ret 0x4507
0x000000000043bb6e : ret 0x4508
0x00000000005077cf : ret 0x4509
0x0000000000508043 : ret 0x450a
0x0000000000507afa : ret 0x450b
0x0000000000507c37 : ret 0x450d
0x0000000000506143 : ret 0x450e
0x0000000000507733 : ret 0x450f
0x0000000000506502 : ret 0x4510
0x0000000000505d8a : ret 0x4511
0x0000000000598324 : ret 0x451f
0x00000000005a5e3d : ret 0x4551
0x0000000000473545 : ret 0x4566
0x000000000058d9a4 : ret 0x4577
0x00000000004866aa : ret 0x45c
0x000000000059cb98 : ret 0x45da
0x0000000000505e5d : ret 0x4613
0x00000000005b17fa : ret 0x467e
0x000000000059caa1 : ret 0x4683
0x000000000047c28f : ret 0x468b
0x000000000057a7a0 : ret 0x46b9
0x00000000005a6d25 : ret 0x46e5
0x00000000004fe654 : ret 0x46e8
0x0000000000541b44 : ret 0x46e9
0x000000000045aa62 : ret 0x470f
0x000000000044597e : ret 0x478b
0x0000000000425273 : ret 0x47e8
0x000000000043a53c : ret 0x4802
0x0000000000410bd4 : ret 0x4803
0x0000000000410f29 : ret 0x4804
0x00000000004c7b4b : ret 0x4807
0x000000000046979b : ret 0x4808
0x00000000004ce1de : ret 0x480d
0x0000000000483a15 : ret 0x480f
0x000000000043bb84 : ret 0x4810
0x00000000004ce1d4 : ret 0x4813
0x000000000053663a : ret 0x481e
0x0000000000411cee : ret 0x4820
0x0000000000599646 : ret 0x4823
0x00000000004a2a67 : ret 0x4828
0x0000000000435ddc : ret 0x4830
0x00000000004a2342 : ret 0x4833
0x0000000000448ba6 : ret 0x4860
0x000000000047fc7d : ret 0x488
0x00000000005aef2e : ret 0x488a
0x000000000053c458 : ret 0x489
0x00000000004f0692 : ret 0x48a
0x000000000047c03f : ret 0x48b
0x00000000005aa196 : ret 0x48ba
0x00000000004e8d31 : ret 0x48d
0x000000000043f89e : ret 0x48e0
0x0000000000494892 : ret 0x48e8
0x0000000000447c11 : ret 0x48f0
0x000000000046930c : ret 0x48f8
0x0000000000430514 : ret 0x48fc
0x00000000005390dc : ret 0x48fd
0x00000000004241d7 : ret 0x48fe
0x000000000052e546 : ret 0x49
0x00000000004ee0cc : ret 0x4902
0x0000000000553758 : ret 0x4903
0x0000000000506dfc : ret 0x4908
0x000000000043a0a6 : ret 0x4910
0x000000000047e218 : ret 0x4920
0x00000000005a304e : ret 0x4928
0x000000000057d9d9 : ret 0x492f
0x000000000057e61d : ret 0x4958
0x00000000005ac892 : ret 0x49bd
0x00000000004c845b : ret 0x49fd
0x0000000000589561 : ret 0x4a
0x000000000057dbcd : ret 0x4a5
0x00000000005aa434 : ret 0x4a54
0x0000000000539769 : ret 0x4a8d
0x00000000005a292a : ret 0x4a9d
0x000000000054f0a0 : ret 0x4ae8
0x0000000000565370 : ret 0x4ae9
0x00000000004bc1a9 : ret 0x4b
0x00000000005a7f42 : ret 0x4b28
0x000000000055731b : ret 0x4b2e
0x0000000000595fea : ret 0x4b5
0x00000000005065cc : ret 0x4b60
0x000000000059406c : ret 0x4b7
0x000000000040ac01 : ret 0x4be
0x000000000048d18f : ret 0x4be8
0x0000000000463c3f : ret 0x4be9
0x000000000041f640 : ret 0x4c02
0x00000000004d502b : ret 0x4c08
0x000000000053723c : ret 0x4c1e
0x000000000059c1f0 : ret 0x4c24
0x000000000043593d : ret 0x4c30
0x000000000053ba52 : ret 0x4c6
0x0000000000513cb9 : ret 0x4c66
0x00000000005ae879 : ret 0x4c6b
0x0000000000599baf : ret 0x4c6f
0x000000000047fc08 : ret 0x4c89
0x00000000004d40e8 : ret 0x4c8a
0x000000000047db35 : ret 0x4c8b
0x000000000043f45e : ret 0x4ce8
0x00000000005ba4fb : ret 0x4cef
0x00000000004be7c2 : ret 0x4cf3
0x000000000040b71a : ret 0x4cfe
0x000000000052f4b8 : ret 0x4d
0x0000000000436523 : ret 0x4d02
0x00000000005336c7 : ret 0x4d08
0x000000000046b822 : ret 0x4d0b
0x00000000005b4e22 : ret 0x4d11
0x00000000004455f5 : ret 0x4d18
0x00000000005969e9 : ret 0x4d55
0x0000000000579b92 : ret 0x4db
0x0000000000596bf0 : ret 0x4e1c
0x000000000059bdad : ret 0x4e3
0x000000000059a200 : ret 0x4e35
0x00000000005ac64a : ret 0x4e56
0x0000000000597a79 : ret 0x4e7d
0x0000000000537ce6 : ret 0x4e8
0x000000000047c154 : ret 0x4e8a
0x00000000004e144a : ret 0x4e8b
0x0000000000464154 : ret 0x4f76
0x000000000058c2ae : ret 0x4f96
0x00000000005b4a4b : ret 0x4fd8
0x0000000000553f2b : ret 0x4fe8
0x00000000005b5014 : ret 0x5007
0x00000000005b3baf : ret 0x5018
0x00000000004b1ac8 : ret 0x508d
0x000000000049544a : ret 0x50e
0x0000000000597e60 : ret 0x50e2
0x00000000005a825d : ret 0x50e7
0x000000000042afea : ret 0x50e8
0x0000000000542a7d : ret 0x50eb
0x0000000000532440 : ret 0x51
0x00000000005aa4c9 : ret 0x513a
0x0000000000578b23 : ret 0x5167
0x000000000044d58b : ret 0x51a3
0x000000000059d2d0 : ret 0x51d8
0x000000000040ffe9 : ret 0x51e8
0x0000000000413547 : ret 0x51ff
0x00000000005a3b85 : ret 0x5232
0x00000000005b6a7d : ret 0x524c
0x00000000005b6abb : ret 0x5253
0x00000000005acbdd : ret 0x52a2
0x00000000005d87c1 : ret 0x53
0x00000000005b7303 : ret 0x5312
0x000000000058e154 : ret 0x5325
0x0000000000410e75 : ret 0x5389
0x00000000005a8a1c : ret 0x539d
0x00000000005a41d4 : ret 0x53a0
0x00000000005971ef : ret 0x5413
0x000000000046b4fc : ret 0x547e
0x000000000047fa2c : ret 0x5488
0x000000000045e692 : ret 0x5489
0x000000000058b6ec : ret 0x54c
0x00000000005a618c : ret 0x54c5
0x00000000004240e6 : ret 0x54e8
0x00000000005345c8 : ret 0x55
0x000000000054e09e : ret 0x5590
0x00000000005df2b0 : ret 0x55c2
0x00000000005add5c : ret 0x55d0
0x000000000043b2b5 : ret 0x55e8
0x00000000004cf002 : ret 0x55ff
0x000000000041a69e : ret 0x56
0x00000000005ad891 : ret 0x5601
0x00000000005b4623 : ret 0x5624
0x000000000057d39c : ret 0x5669
0x000000000058e43b : ret 0x5682
0x000000000048286c : ret 0x5688
0x00000000004e134f : ret 0x568b
0x000000000057893a : ret 0x56c2
0x0000000000541a34 : ret 0x56e9
0x000000000042726b : ret 0x56ed
0x00000000004772d8 : ret 0x57
0x000000000043310b : ret 0x5710
0x0000000000432559 : ret 0x573d
0x0000000000433031 : ret 0x5740
0x00000000005b382e : ret 0x5767
0x000000000057d2e5 : ret 0x579f
0x000000000040cda3 : ret 0x57e8
0x000000000058ad99 : ret 0x58
0x0000000000580458 : ret 0x5810
0x00000000005a3551 : ret 0x5815
0x00000000004f34ec : ret 0x5822
0x00000000005b5aa7 : ret 0x5825
0x0000000000499b9c : ret 0x5850
0x000000000046a958 : ret 0x589
0x0000000000494fa2 : ret 0x58e8
0x00000000005abffe : ret 0x58fd
0x0000000000532436 : ret 0x59
0x00000000005111d1 : ret 0x597d
0x0000000000420afa : ret 0x598
0x0000000000419e51 : ret 0x59e8
0x00000000004c966e : ret 0x59e9
0x000000000058bf27 : ret 0x5a39
0x000000000059682f : ret 0x5a4
0x000000000050612e : ret 0x5a51
0x00000000005545a2 : ret 0x5a8a
0x00000000005a982f : ret 0x5a93
0x00000000004aa4b0 : ret 0x5ae8
0x0000000000565410 : ret 0x5ae9
0x00000000004e8e1c : ret 0x5afa
0x00000000004dd612 : ret 0x5baa
0x0000000000505f45 : ret 0x5bb1
0x00000000004e5421 : ret 0x5bdb
0x00000000004e74b9 : ret 0x5bdc
0x0000000000423066 : ret 0x5c
0x00000000005c3468 : ret 0x5c0d
0x00000000005c3b48 : ret 0x5c0e
0x00000000005d7462 : ret 0x5c2
0x000000000059fae5 : ret 0x5c2a
0x00000000005b0588 : ret 0x5c73
0x0000000000577f84 : ret 0x5c9e
0x000000000058dd7a : ret 0x5ca4
0x000000000057dd46 : ret 0x5ca9
0x00000000005c4490 : ret 0x5cca
0x00000000005c5110 : ret 0x5cd1
0x00000000005c8108 : ret 0x5ce7
0x000000000054ff8e : ret 0x5ce8
0x00000000005c9710 : ret 0x5cf1
0x00000000005345bb : ret 0x5d
0x00000000005cb560 : ret 0x5d04
0x00000000005b74a3 : ret 0x5d15
0x00000000005d43c0 : ret 0x5d45
0x00000000005adbee : ret 0x5d61
0x00000000005d8700 : ret 0x5d86
0x00000000005401a8 : ret 0x5d8b
0x000000000059fe9c : ret 0x5d95
0x0000000000446701 : ret 0x5dc2
0x00000000005dc4f8 : ret 0x5dc8
0x000000000055203a : ret 0x5ddd
0x0000000000596287 : ret 0x5e5e
0x00000000005a03e3 : ret 0x5e6a
0x00000000004066a8 : ret 0x5e7c
0x000000000043e9a5 : ret 0x5e8
0x00000000005abe58 : ret 0x5ec7
0x00000000004ade5c : ret 0x5ee8
0x00000000005a5c32 : ret 0x5ef0
0x00000000005ad865 : ret 0x5f1
0x00000000005b70ae : ret 0x5f2d
0x000000000059dc7c : ret 0x5f33
0x00000000005af4b8 : ret 0x5fae
0x0000000000598665 : ret 0x5fca
0x000000000057cbfc : ret 0x5ff6
0x00000000005a0bff : ret 0x60a
0x000000000058c7ff : ret 0x60c4
0x000000000040c09a : ret 0x60e8
0x000000000043d66a : ret 0x60e9
0x000000000044cb03 : ret 0x61
0x000000000059f67e : ret 0x6102
0x00000000005064f0 : ret 0x6122
0x0000000000578d9b : ret 0x6132
0x0000000000556e76 : ret 0x614e
0x0000000000446880 : ret 0x6161
0x0000000000564cec : ret 0x6175
0x0000000000596ab0 : ret 0x61c0
0x00000000005a5e55 : ret 0x6201
0x00000000005aeb95 : ret 0x6202
0x00000000005a50c5 : ret 0x62a8
0x00000000005b1dc8 : ret 0x62b7
0x00000000004be7e5 : ret 0x62c4
0x000000000045e2ba : ret 0x633
0x00000000004697a7 : ret 0x6348
0x000000000050dfcc : ret 0x6349
0x000000000040e8d0 : ret 0x634c
0x0000000000522285 : ret 0x63c4
0x00000000004f99f7 : ret 0x63e8
0x000000000058c2eb : ret 0x63fc
0x00000000005a54bd : ret 0x6449
0x000000000059e20e : ret 0x64d4
0x00000000005b1bc1 : ret 0x64d9
0x00000000004b2ca6 : ret 0x64e8
0x00000000005345ae : ret 0x65
0x000000000058ee71 : ret 0x6517
0x00000000005789f9 : ret 0x6549
0x00000000005b089c : ret 0x6557
0x00000000005aa76a : ret 0x6595
0x0000000000593d67 : ret 0x65aa
0x00000000005a6101 : ret 0x65c7
0x00000000004ea815 : ret 0x65e9
0x00000000005a321b : ret 0x65f
0x00000000004d5567 : ret 0x6600
0x0000000000537547 : ret 0x6601
0x000000000044b027 : ret 0x6605
0x000000000042275e : ret 0x6608
0x00000000005266a2 : ret 0x660e
0x0000000000555403 : ret 0x6610
0x000000000044ab91 : ret 0x6640
0x000000000047de71 : ret 0x6666
0x00000000005a800f : ret 0x666d
0x00000000005b130e : ret 0x667b
0x0000000000541924 : ret 0x66e9
0x0000000000597c28 : ret 0x66eb
0x00000000005552a4 : ret 0x66f0
0x00000000005a10aa : ret 0x6718
0x00000000005530ff : ret 0x675
0x000000000058e8d8 : ret 0x6786
0x00000000005a8d12 : ret 0x6819
0x0000000000595c0b : ret 0x687e
0x00000000005ab2c8 : ret 0x68bc
0x000000000041f382 : ret 0x68e8
0x000000000058d743 : ret 0x68fb
0x000000000044ca85 : ret 0x69
0x00000000005ae4f9 : ret 0x6948
0x00000000004e8e5d : ret 0x6949
0x000000000057d8aa : ret 0x69d2
0x00000000005a0eca : ret 0x69e4
0x00000000004ac611 : ret 0x69e8
0x0000000000446f01 : ret 0x6a89
0x00000000004f1d80 : ret 0x6ae9
0x00000000004ce1db : ret 0x6b48
0x00000000005aa713 : ret 0x6b80
0x00000000005ab0fd : ret 0x6bd4
0x0000000000463c1f : ret 0x6be9
0x000000000051f56f : ret 0x6c33
0x00000000005b1b54 : ret 0x6c5d
0x00000000005d68e9 : ret 0x6c6
0x00000000005345a1 : ret 0x6d
0x00000000005a949a : ret 0x6d1e
0x0000000000594082 : ret 0x6d6e
0x00000000005ab2f0 : ret 0x6da9
0x0000000000599acc : ret 0x6dc0
0x00000000005a572d : ret 0x6dd1
0x00000000005acb6a : ret 0x6df0
0x00000000005a18b8 : ret 0x6e8e
0x000000000055e3a7 : ret 0x6eb
0x00000000004d1afc : ret 0x6ee8
0x000000000047734a : ret 0x6ef
0x000000000059c8cb : ret 0x6f8
0x00000000005a9f16 : ret 0x7041
0x00000000005a132a : ret 0x708c
0x00000000005a5fc4 : ret 0x7091
0x0000000000578bb6 : ret 0x70ae
0x00000000005940db : ret 0x70d2
0x0000000000505d75 : ret 0x70db
0x000000000043d65a : ret 0x70e9
0x000000000044ca13 : ret 0x71
0x00000000005948b9 : ret 0x7130
0x000000000057e525 : ret 0x7154
0x0000000000597d65 : ret 0x71ba
0x0000000000463cfa : ret 0x72
0x000000000057e717 : ret 0x726e
0x00000000005ae043 : ret 0x728d
0x00000000004f32c8 : ret 0x72e8
0x0000000000594337 : ret 0x72fd
0x00000000005a2c0a : ret 0x7335
0x00000000005a60d3 : ret 0x73d0
0x000000000043bd1f : ret 0x7401
0x000000000053f116 : ret 0x7406
0x000000000045ace5 : ret 0x7410
0x0000000000413cff : ret 0x7420
0x00000000004fdfef : ret 0x7440
0x000000000058d302 : ret 0x7455
0x000000000059a79a : ret 0x7461
0x00000000005b28ea : ret 0x748b
0x0000000000599a13 : ret 0x74a2
0x0000000000534594 : ret 0x75
0x00000000004585da : ret 0x750
0x000000000053f3a2 : ret 0x7501
0x000000000053ee48 : ret 0x7506
0x0000000000453f02 : ret 0x7510
0x00000000004a8f8b : ret 0x751f
0x000000000048ce37 : ret 0x7520
0x00000000005a49f1 : ret 0x7538
0x000000000048d346 : ret 0x7540
0x0000000000599035 : ret 0x754c
0x00000000005b27d8 : ret 0x7553
0x000000000055f64d : ret 0x758b
0x00000000005b332a : ret 0x75a2
0x000000000059cd70 : ret 0x75dd
0x000000000047e1b9 : ret 0x75f0
0x00000000004cb2ba : ret 0x760
0x000000000057e0fa : ret 0x763c
0x0000000000456ada : ret 0x76b
0x00000000005842ba : ret 0x7700
0x00000000005a44a3 : ret 0x779c
0x00000000005a3dd6 : ret 0x77c0
0x0000000000538a73 : ret 0x77e8
0x00000000005a27a1 : ret 0x77fc
0x00000000005556b7 : ret 0x7808
0x000000000058e367 : ret 0x7870
0x00000000005b6228 : ret 0x7888
0x00000000005b0f61 : ret 0x78b4
0x00000000005a4ada : ret 0x78c2
0x0000000000498662 : ret 0x78e8
0x00000000005b23e8 : ret 0x78f3
0x000000000046b653 : ret 0x78fe
0x000000000044ca04 : ret 0x79
0x00000000005b048d : ret 0x7992
0x0000000000511d55 : ret 0x79c5
0x00000000005a9b08 : ret 0x79e6
0x000000000059e862 : ret 0x7a11
0x0000000000597042 : ret 0x7a1a
0x00000000005b66a8 : ret 0x7a53
0x000000000057e18c : ret 0x7a54
0x0000000000578b3c : ret 0x7a90
0x0000000000594a04 : ret 0x7a96
0x00000000004f1d40 : ret 0x7ae9
0x000000000058c50a : ret 0x7bcc
0x000000000053ac1b : ret 0x7be
0x000000000050abbf : ret 0x7be8
0x0000000000579728 : ret 0x7c00
0x000000000059d462 : ret 0x7c4b
0x000000000059ca8a : ret 0x7ca5
0x00000000005a57f9 : ret 0x7ce1
0x000000000050aabe : ret 0x7ce8
0x0000000000506783 : ret 0x7cf8
0x0000000000534587 : ret 0x7d
0x00000000004a1b3a : ret 0x7d5
0x000000000041117a : ret 0x7dd
0x000000000059a0c6 : ret 0x7e56
0x0000000000511bc5 : ret 0x7ec5
0x00000000004d775c : ret 0x7ee8
0x00000000005a0609 : ret 0x7f22
0x00000000005b48eb : ret 0x7f23
0x000000000057e36a : ret 0x7f45
0x000000000042000b : ret 0x7fe8
0x000000000045214c : ret 0x80
0x000000000044d3ed : ret 0x800
0x00000000005b16e8 : ret 0x8012
0x0000000000455cb1 : ret 0x8041
0x00000000004c1a2d : ret 0x807c
0x0000000000594023 : ret 0x8087
0x0000000000441857 : ret 0x809f
0x00000000005d7503 : ret 0x80b
0x0000000000441861 : ret 0x80bf
0x0000000000441870 : ret 0x80d0
0x000000000044d41a : ret 0x8141
0x00000000004dcce3 : ret 0x8148
0x000000000059d6b6 : ret 0x8152
0x00000000005783aa : ret 0x819
0x00000000005a5293 : ret 0x81cc
0x00000000004f3f79 : ret 0x81e8
0x00000000004a61ba : ret 0x82
0x000000000045a440 : ret 0x820f
0x000000000057d5bc : ret 0x8239
0x00000000005acafa : ret 0x8246
0x000000000059a88e : ret 0x825b
0x00000000005ac807 : ret 0x82b3
0x00000000004e90f9 : ret 0x82b5
0x000000000053c058 : ret 0x82e8
0x00000000005b4740 : ret 0x82f4
0x00000000004addc8 : ret 0x8305
0x000000000047eb07 : ret 0x8307
0x000000000045a4f6 : ret 0x830f
0x000000000046cd49 : ret 0x8320
0x00000000004a2bbf : ret 0x8324
0x00000000005b6a94 : ret 0x8326
0x00000000004a4659 : ret 0x8330
0x0000000000444d46 : ret 0x8341
0x0000000000402899 : ret 0x8348
0x00000000004d8e71 : ret 0x8349
0x00000000005ab33e : ret 0x8362
0x00000000005aa087 : ret 0x8371
0x0000000000457837 : ret 0x83e8
0x00000000004d67c2 : ret 0x8401
0x000000000050256b : ret 0x840f
0x00000000005b5609 : ret 0x8421
0x00000000005954bc : ret 0x8427
0x000000000040a3cc : ret 0x8440
0x000000000046c2d5 : ret 0x8444
0x00000000005a341f : ret 0x8463
0x00000000004d68c2 : ret 0x84e0
0x00000000004179d1 : ret 0x850f
0x00000000004c91a1 : ret 0x8520
0x000000000043babb : ret 0x8545
0x00000000004e14c9 : ret 0x8548
0x000000000044d56a : ret 0x8581
0x000000000059bc9e : ret 0x85c8
0x00000000004de225 : ret 0x85e8
0x000000000040ac91 : ret 0x85e9
0x00000000004718ac : ret 0x85f8
0x0000000000446fce : ret 0x8603
0x000000000043f692 : ret 0x860f
0x00000000005a6ce5 : ret 0x861c
0x000000000059f2e4 : ret 0x8623
0x000000000058f2be : ret 0x8682
0x00000000005572f7 : ret 0x8686
0x00000000005b6263 : ret 0x8691
0x00000000005afeb7 : ret 0x8699
0x00000000005b09fc : ret 0x86b3
0x00000000004ec864 : ret 0x86e8
0x0000000000541104 : ret 0x86e9
0x000000000042807b : ret 0x874
0x00000000005a49ae : ret 0x8743
0x00000000004d501d : ret 0x8808
0x000000000058bd1c : ret 0x8840
0x0000000000462768 : ret 0x8841
0x0000000000471996 : ret 0x8844
0x000000000059bdc8 : ret 0x88d0
0x00000000004b5e6a : ret 0x88e
0x0000000000479002 : ret 0x88e8
0x000000000041962c : ret 0x8904
0x00000000005365c9 : ret 0x8905
0x0000000000464608 : ret 0x8940
0x0000000000443fa8 : ret 0x8941
0x0000000000403cf0 : ret 0x8944
0x0000000000408730 : ret 0x8945
0x000000000040a0ff : ret 0x8948
0x00000000004525c5 : ret 0x8949
0x0000000000561c67 : ret 0x894a
0x0000000000512607 : ret 0x894c
0x0000000000480df3 : ret 0x894d
0x0000000000595dba : ret 0x8959
0x00000000004e8dbd : ret 0x896e
0x00000000005b4e66 : ret 0x898
0x0000000000594a8e : ret 0x898e
0x00000000004f83a2 : ret 0x89a9
0x0000000000578878 : ret 0x89bd
0x0000000000440bbf : ret 0x89d0
0x000000000059f1e3 : ret 0x89e3
0x000000000059b443 : ret 0x89e5
0x00000000005aa33f : ret 0x89e7
0x000000000050cdb1 : ret 0x89e8
0x00000000005b4ec4 : ret 0x89f6
0x00000000004d47c7 : ret 0x8a41
0x0000000000506d34 : ret 0x8a44
0x000000000059b512 : ret 0x8a49
0x000000000048d3a3 : ret 0x8a74
0x000000000059ac78 : ret 0x8a8d
0x000000000059774f : ret 0x8acc
0x000000000041f760 : ret 0x8ae8
0x00000000005653b0 : ret 0x8ae9
0x00000000004abfd6 : ret 0x8b04
0x000000000050777a : ret 0x8b0a
0x00000000004a41ee : ret 0x8b10
0x00000000005364cb : ret 0x8b1e
0x000000000043bcf2 : ret 0x8b41
0x000000000043dff4 : ret 0x8b44
0x0000000000404cda : ret 0x8b48
0x000000000040a5af : ret 0x8b49
0x0000000000562fa5 : ret 0x8b4a
0x000000000052b843 : ret 0x8b70
0x00000000005afcd3 : ret 0x8b90
0x000000000050ccaf : ret 0x8be8
0x0000000000463bff : ret 0x8be9
0x000000000059c357 : ret 0x8c0e
0x0000000000468f7d : ret 0x8c0f
0x0000000000595c46 : ret 0x8c24
0x00000000004c2274 : ret 0x8c8b
0x000000000043f9aa : ret 0x8c9
0x000000000041945e : ret 0x8ce8
0x00000000004e46c1 : ret 0x8d42
0x0000000000514e07 : ret 0x8d43
0x0000000000412294 : ret 0x8d48
0x00000000004c8296 : ret 0x8d49
0x000000000046b659 : ret 0x8d4a
0x0000000000453131 : ret 0x8d4c
0x00000000005636ab : ret 0x8d4d
0x0000000000563cf2 : ret 0x8d4f
0x000000000059d734 : ret 0x8dd3
0x0000000000538a5d : ret 0x8de8
0x000000000057d241 : ret 0x8def
0x0000000000447363 : ret 0x8df6
0x00000000005a2912 : ret 0x8e97
0x00000000005a0888 : ret 0x8eaa
0x00000000005a76e7 : ret 0x8eb
0x00000000004c5f0c : ret 0x8ee9
0x000000000041ad60 : ret 0x8f80
0x00000000005a1417 : ret 0x8f8d
0x00000000005a159e : ret 0x8fa0
0x00000000004e044b : ret 0x8fe8
0x0000000000504854 : ret 0x90
0x00000000005953e0 : ret 0x9004
0x00000000005d762b : ret 0x9012
0x00000000005990f3 : ret 0x903
0x0000000000407536 : ret 0x903b
0x000000000053979d : ret 0x9066
0x00000000005b6deb : ret 0x90cf
0x00000000005a6e3d : ret 0x910d
0x000000000058dec9 : ret 0x91b2
0x00000000005a66d2 : ret 0x9317
0x00000000005aebcb : ret 0x9360
0x000000000059af33 : ret 0x938
0x00000000004ca2da : ret 0x9389
0x000000000040f667 : ret 0x93e8
0x00000000005b7629 : ret 0x93ec
0x000000000040a0dd : ret 0x940f
0x00000000005a3b40 : ret 0x943
0x00000000004d8f8c : ret 0x9489
0x00000000005abe41 : ret 0x94a2
0x0000000000565206 : ret 0x94e8
0x00000000005a4ff6 : ret 0x94fa
0x000000000043dada : ret 0x950f
0x00000000005b1e27 : ret 0x9513
0x00000000005a1d1a : ret 0x953d
0x00000000005a082e : ret 0x958e
0x00000000005937f9 : ret 0x9591
0x0000000000498575 : ret 0x95e8
0x0000000000500355 : ret 0x95e9
0x000000000059c4f0 : ret 0x9661
0x00000000005affd1 : ret 0x96c1
0x0000000000595f6e : ret 0x978
0x00000000005b5450 : ret 0x9784
0x00000000005b2211 : ret 0x97a3
0x00000000004b3373 : ret 0x97e8
0x00000000005b1890 : ret 0x983e
0x00000000005a1a42 : ret 0x98e5
0x00000000004e8e60 : ret 0x98f
0x000000000058b699 : ret 0x98f0
0x00000000005a6296 : ret 0x995d
0x0000000000556942 : ret 0x99be
0x0000000000593df4 : ret 0x9a5b
0x00000000005b757b : ret 0x9a60
0x0000000000598879 : ret 0x9a9f
0x00000000005aeb30 : ret 0x9aa2
0x00000000005991cb : ret 0x9aaa
0x00000000005b52fe : ret 0x9ade
0x0000000000541f60 : ret 0x9ae9
0x00000000005b5ea5 : ret 0x9b1a
0x00000000005b6305 : ret 0x9b1e
0x0000000000598f0e : ret 0x9bca
0x000000000054c69f : ret 0x9be8
0x00000000005a75dd : ret 0x9c69
0x000000000057db64 : ret 0x9ca2
0x00000000005a74cf : ret 0x9cc7
0x000000000059587c : ret 0x9d74
0x00000000004f0ffd : ret 0x9de8
0x00000000004d4c34 : ret 0x9eb
0x00000000005b48f6 : ret 0x9f2e
0x00000000005abc45 : ret 0x9f85
0x00000000005971df : ret 0x9fc2
0x000000000041ca12 : ret 0xa
0x0000000000596aa6 : ret 0xa070
0x000000000057e19b : ret 0xa084
0x000000000043d62a : ret 0xa0e9
0x000000000057e469 : ret 0xa0ea
0x0000000000597611 : ret 0xa169
0x00000000005acf99 : ret 0xa1d3
0x00000000005b1a36 : ret 0xa260
0x00000000005b2eae : ret 0xa287
0x000000000059a62e : ret 0xa29c
0x00000000005a4a80 : ret 0xa29e
0x000000000058dcf4 : ret 0xa2be
0x000000000050aa98 : ret 0xa2e8
0x00000000005b530a : ret 0xa2f7
0x00000000005abae3 : ret 0xa36
0x000000000059c8eb : ret 0xa39d
0x00000000005a16fe : ret 0xa3a6
0x000000000059affb : ret 0xa3b3
0x00000000005ac01e : ret 0xa3cf
0x0000000000499a97 : ret 0xa3e8
0x000000000041f27b : ret 0xa4
0x00000000005d741b : ret 0xa427
0x00000000005b1450 : ret 0xa42e
0x00000000005ae109 : ret 0xa4c7
0x0000000000598f86 : ret 0xa4e6
0x0000000000440e4a : ret 0xa54
0x00000000005a0f50 : ret 0xa565
0x000000000059bb32 : ret 0xa566
0x0000000000596c16 : ret 0xa5d9
0x0000000000594835 : ret 0xa5df
0x000000000059ffd1 : ret 0xa5e5
0x00000000004ddf65 : ret 0xa5e8
0x0000000000594c5e : ret 0xa5eb
0x000000000059980b : ret 0xa613
0x00000000004256aa : ret 0xa6c
0x00000000005415e4 : ret 0xa6e9
0x000000000059e566 : ret 0xa6f2
0x000000000058ed98 : ret 0xa79c
0x0000000000531fc0 : ret 0xa88f
0x0000000000578c77 : ret 0xa8d1
0x00000000004b3132 : ret 0xa8e8
0x00000000005ab0e6 : ret 0xa945
0x0000000000594569 : ret 0xa995
0x00000000005a2b33 : ret 0xa99c
0x00000000005ac790 : ret 0xa9bd
0x00000000005ac008 : ret 0xa9c3
0x000000000057e4a7 : ret 0xa9cf
0x00000000005976ca : ret 0xaab7
0x000000000048ecba : ret 0xaac
0x000000000059fcfa : ret 0xaaca
0x00000000004fc190 : ret 0xaae8
0x000000000053afdd : ret 0xaae9
0x000000000053a5f1 : ret 0xaba
0x000000000059b84e : ret 0xabb7
0x00000000005b490a : ret 0xabbd
0x0000000000463bdf : ret 0xabe9
0x000000000044bdaa : ret 0xac0f
0x00000000005b5fe6 : ret 0xac46
0x000000000057e14f : ret 0xac98
0x00000000005d67f9 : ret 0xaca
0x0000000000446a68 : ret 0xacd3
0x00000000005b73d4 : ret 0xacd4
0x00000000004f994e : ret 0xace8
0x000000000059c16d : ret 0xacf4
0x0000000000584149 : ret 0xad6a
0x00000000004ce40d : ret 0xade9
0x000000000057d92c : ret 0xadff
0x00000000005a03d4 : ret 0xae59
0x000000000046c24f : ret 0xae7c
0x000000000050af30 : ret 0xae8
0x0000000000486760 : ret 0xae9
0x00000000004830cf : ret 0xaeae
0x0000000000452833 : ret 0xaeb
0x000000000053ab90 : ret 0xaebe
0x000000000059ac22 : ret 0xaed3
0x00000000005a5d80 : ret 0xaed4
0x0000000000596735 : ret 0xaeee
0x0000000000511617 : ret 0xaf0f
0x000000000059437e : ret 0xaf1
0x00000000005b38f2 : ret 0xaf7c
0x00000000005a2b9a : ret 0xafd3
0x00000000005a0d9f : ret 0xb013
0x000000000058d2f0 : ret 0xb047
0x000000000059d56b : ret 0xb1a8
0x00000000004b5909 : ret 0xb1e8
0x000000000059912a : ret 0xb224
0x00000000005a9138 : ret 0xb252
0x000000000059440c : ret 0xb259
0x000000000059d972 : ret 0xb287
0x000000000059da34 : ret 0xb2b9
0x0000000000599065 : ret 0xb2e8
0x0000000000556e7e : ret 0xb34e
0x000000000059fbd9 : ret 0xb37c
0x0000000000426d27 : ret 0xb3e8
0x000000000059cca0 : ret 0xb3eb
0x00000000005a1eab : ret 0xb468
0x00000000005b1599 : ret 0xb47d
0x0000000000538f22 : ret 0xb540
0x0000000000595b40 : ret 0xb54d
0x00000000005a9925 : ret 0xb5a2
0x00000000005a4f82 : ret 0xb5f8
0x0000000000444ec2 : ret 0xb60f
0x000000000059f441 : ret 0xb611
0x00000000005a0d8a : ret 0xb687
0x000000000041ff94 : ret 0xb6e8
0x00000000005414d4 : ret 0xb6e9
0x000000000048ce56 : ret 0xb70f
0x00000000004462c3 : ret 0xb775
0x0000000000429ab1 : ret 0xb802
0x0000000000429abb : ret 0xb804
0x00000000005a70c7 : ret 0xb805
0x00000000004140aa : ret 0xb82
0x0000000000593fd3 : ret 0xb83
0x000000000057d321 : ret 0xb843
0x00000000004e8c61 : ret 0xb848
0x0000000000492d80 : ret 0xb89
0x000000000043afc2 : ret 0xb8e8
0x0000000000599ea0 : ret 0xb8fa
0x0000000000437449 : ret 0xb9
0x00000000004add40 : ret 0xb908
0x00000000004a1e50 : ret 0xb941
0x00000000005a60ea : ret 0xb9c9
0x00000000005a2955 : ret 0xb9d9
0x0000000000447ff2 : ret 0xba
0x0000000000597f8a : ret 0xba4c
0x00000000005a9536 : ret 0xba5c
0x0000000000457720 : ret 0xbae8
0x0000000000486780 : ret 0xbae9
0x000000000059854c : ret 0xbb21
0x000000000059f48d : ret 0xbbaa
0x00000000005a31d3 : ret 0xbbd7
0x0000000000468ed6 : ret 0xbc41
0x00000000005b3571 : ret 0xbc65
0x000000000059c249 : ret 0xbd00
0x000000000059ef55 : ret 0xbd61
0x0000000000522a0d : ret 0xbdc5
0x00000000005b6fdd : ret 0xbde
0x000000000058bce0 : ret 0xbde5
0x00000000004a297d : ret 0xbde8
0x000000000045ff64 : ret 0xbe
0x00000000004ed86d : ret 0xbe08
0x000000000043f071 : ret 0xbe0f
0x00000000004ef35a : ret 0xbe20
0x00000000005320a7 : ret 0xbe30
0x00000000005569b4 : ret 0xbe3e
0x0000000000463c7f : ret 0xbe9
0x00000000005a10a3 : ret 0xbe97
0x00000000005a7efd : ret 0xbea3
0x0000000000443f0e : ret 0xbeb
0x0000000000598644 : ret 0xbef1
0x00000000005b5727 : ret 0xbf2e
0x000000000044d88f : ret 0xbf5
0x00000000005a8cc8 : ret 0xbf6b
0x00000000005b5ba8 : ret 0xbf6e
0x0000000000549d49 : ret 0xbfbe
0x00000000005a4653 : ret 0xbfc9
0x00000000004b7b0a : ret 0xc
0x0000000000448f8e : ret 0xc0
0x00000000005d72cc : ret 0xc002
0x00000000005b5106 : ret 0xc022
0x0000000000428f50 : ret 0xc031
0x0000000000578560 : ret 0xc06
0x0000000000442942 : ret 0xc085
0x0000000000578a2d : ret 0xc089
0x0000000000595968 : ret 0xc095
0x000000000054eecf : ret 0xc0be
0x00000000004455ad : ret 0xc0c1
0x000000000045777a : ret 0xc0e8
0x000000000058e438 : ret 0xc0f0
0x00000000005a7376 : ret 0xc103
0x0000000000507fff : ret 0xc105
0x0000000000507908 : ret 0xc106
0x00000000005079a9 : ret 0xc107
0x0000000000507a56 : ret 0xc109
0x0000000000507f62 : ret 0xc10b
0x00000000005082ef : ret 0xc10e
0x000000000050879f : ret 0xc10f
0x0000000000537466 : ret 0xc11e
0x0000000000507911 : ret 0xc131
0x00000000004455d9 : ret 0xc141
0x0000000000402375 : ret 0xc148
0x00000000004d4d45 : ret 0xc149
0x00000000004227c0 : ret 0xc166
0x00000000004e8e34 : ret 0xc16b
0x00000000005a1d84 : ret 0xc1bb
0x00000000004e3cb0 : ret 0xc1c1
0x000000000051b433 : ret 0xc1c4
0x00000000004a3d57 : ret 0xc1cd
0x00000000005ab4e3 : ret 0xc1e4
0x0000000000482dce : ret 0xc2
0x0000000000482dcc : ret 0xc200
0x00000000004cfbf3 : ret 0xc208
0x00000000004e3c96 : ret 0xc221
0x000000000049feb7 : ret 0xc230
0x000000000045728a : ret 0xc239
0x00000000005ab5f8 : ret 0xc26a
0x0000000000554d3b : ret 0xc280
0x0000000000493da9 : ret 0xc283
0x000000000041b63c : ret 0xc284
0x0000000000482b19 : ret 0xc2c2
0x0000000000546b2d : ret 0xc2f6
0x000000000059941d : ret 0xc308
0x00000000005079b2 : ret 0xc331
0x00000000005aa82a : ret 0xc375
0x000000000059bd03 : ret 0xc379
0x0000000000510c70 : ret 0xc383
0x000000000045e241 : ret 0xc389
0x00000000004d6929 : ret 0xc3aa
0x0000000000507737 : ret 0xc3c1
0x00000000004492b2 : ret 0xc3c4
0x000000000041eb87 : ret 0xc3e8
0x0000000000541ac7 : ret 0xc3e9
0x0000000000444e60 : ret 0xc3f3
0x00000000004132e5 : ret 0xc4
0x00000000004d5f1d : ret 0xc400
0x000000000042f0ea : ret 0xc43
0x00000000005795de : ret 0xc434
0x000000000044bd0a : ret 0xc440
0x000000000059e74e : ret 0xc4a0
0x00000000005d7882 : ret 0xc4c2
0x0000000000422f2a : ret 0xc50
0x000000000044c36e : ret 0xc508
0x00000000004d249f : ret 0xc529
0x000000000059cf81 : ret 0xc52f
0x000000000045f2c1 : ret 0xc539
0x000000000043efff : ret 0xc583
0x00000000004d90a1 : ret 0xc589
0x0000000000595a7b : ret 0xc5a0
0x00000000005ab7e1 : ret 0xc5cc
0x000000000057e135 : ret 0xc5e
0x00000000005ad121 : ret 0xc5f0
0x00000000005b5432 : ret 0xc604
0x00000000004d7e69 : ret 0xc689
0x000000000059b4a7 : ret 0xc6d7
0x0000000000488514 : ret 0xc6e8
0x00000000005413c4 : ret 0xc6e9
0x000000000055570f : ret 0xc700
0x000000000045aaf3 : ret 0xc702
0x00000000004e2e27 : ret 0xc73
0x000000000049dd0b : ret 0xc74
0x0000000000464980 : ret 0xc748
0x0000000000520ec3 : ret 0xc789
0x00000000005d6816 : ret 0xc822
0x0000000000598a4d : ret 0xc85a
0x000000000055dc5f : ret 0xc8b
0x000000000044806c : ret 0xc931
0x00000000005b51ea : ret 0xc964
0x0000000000554acd : ret 0xc985
0x00000000004d5edf : ret 0xc9c5
0x0000000000499571 : ret 0xc9e8
0x0000000000493203 : ret 0xc9e9
0x00000000004d997e : ret 0xc9ff
0x0000000000408790 : ret 0xca01
0x000000000040a0e0 : ret 0xca08
0x00000000004e3cee : ret 0xca21
0x0000000000539cae : ret 0xca29
0x00000000004077f8 : ret 0xca39
0x0000000000467e71 : ret 0xca83
0x000000000041cfc7 : ret 0xca84
0x00000000005aac42 : ret 0xcac0
0x000000000049097a : ret 0xcac1
0x000000000054f220 : ret 0xcae8
0x00000000005653f0 : ret 0xcae9
0x00000000004a2bbb : ret 0xcb29
0x00000000005b3db3 : ret 0xcb81
0x0000000000412101 : ret 0xcb88
0x0000000000536564 : ret 0xcb89
0x0000000000463bbf : ret 0xcbe9
0x00000000005af267 : ret 0xcc74
0x00000000005ac58e : ret 0xcd52
0x0000000000554c7c : ret 0xcd75
0x000000000045fecd : ret 0xcdff
0x000000000057d7d9 : ret 0xce5
0x00000000005a7fc1 : ret 0xce53
0x00000000005aa1df : ret 0xcea3
0x00000000005a74e9 : ret 0xcea5
0x0000000000452611 : ret 0xceb
0x00000000005b0a40 : ret 0xcec9
0x00000000005aefb0 : ret 0xcecc
0x000000000052051b : ret 0xcf31
0x00000000005b602c : ret 0xcfd8
0x0000000000411bed : ret 0xd009
0x00000000005d6d01 : ret 0xd012
0x00000000005a52ea : ret 0xd029
0x00000000005b0048 : ret 0xd057
0x00000000005a7fbe : ret 0xd06b
0x0000000000593111 : ret 0xd076
0x000000000045dc04 : ret 0xd089
0x0000000000594ef0 : ret 0xd0e1
0x00000000004253ea : ret 0xd0e8
0x000000000043a76c : ret 0xd0ff
0x00000000004814ae : ret 0xd139
0x0000000000471879 : ret 0xd148
0x0000000000547230 : ret 0xd184
0x0000000000593242 : ret 0xd19d
0x00000000005a8567 : ret 0xd1a7
0x00000000004c9b79 : ret 0xd1e8
0x00000000004425ff : ret 0xd285
0x00000000005a9001 : ret 0xd298
0x0000000000506b62 : ret 0xd2bb
0x00000000005a6080 : ret 0xd2db
0x00000000004df9cb : ret 0xd2f6
0x00000000004e3c5b : ret 0xd301
0x00000000004e8e81 : ret 0xd329
0x00000000005a8f5d : ret 0xd378
0x000000000047c1e6 : ret 0xd389
0x00000000005419b7 : ret 0xd3e9
0x0000000000507f6b : ret 0xd3f7
0x00000000004adf82 : ret 0xd3ff
0x000000000059f94e : ret 0xd48c
0x0000000000595fad : ret 0xd4d9
0x00000000005652c6 : ret 0xd4e8
0x0000000000577e03 : ret 0xd539
0x00000000005b18f8 : ret 0xd554
0x000000000057cf99 : ret 0xd5a6
0x00000000005b6db2 : ret 0xd5b3
0x00000000005a5117 : ret 0xd5c3
0x000000000049d565 : ret 0xd5e8
0x00000000004ae021 : ret 0xd5ff
0x00000000005a968c : ret 0xd69
0x00000000005ab366 : ret 0xd69e
0x0000000000597641 : ret 0xd6fb
0x0000000000596b04 : ret 0xd710
0x00000000004eaa68 : ret 0xd75
0x00000000005b5bd5 : ret 0xd779
0x00000000005b2f49 : ret 0xd79a
0x0000000000520840 : ret 0xd831
0x00000000005d689a : ret 0xd832
0x00000000005062fd : ret 0xd87
0x00000000005b7064 : ret 0xd875
0x00000000004a1af4 : ret 0xd889
0x0000000000447367 : ret 0xd890
0x000000000058ec2c : ret 0xd8e5
0x0000000000499c72 : ret 0xd8e8
0x00000000005b2a35 : ret 0xd955
0x000000000059397d : ret 0xd9a4
0x00000000005a3319 : ret 0xd9ba
0x00000000005a7722 : ret 0xda02
0x00000000005a65dd : ret 0xda22
0x00000000005974f1 : ret 0xda27
0x00000000004e3bd0 : ret 0xda31
0x00000000004641a3 : ret 0xda75
0x00000000004f5263 : ret 0xda84
0x0000000000541d20 : ret 0xdae9
0x00000000005426e9 : ret 0xdb31
0x000000000043f563 : ret 0xdb84
0x00000000005b7c54 : ret 0xdbe6
0x00000000004b2ddf : ret 0xdbe8
0x000000000054d70f : ret 0xdbe9
0x00000000005a7066 : ret 0xdc57
0x000000000059bf03 : ret 0xdc5a
0x00000000005b6774 : ret 0xdcb0
0x00000000004ae0de : ret 0xdce8
0x000000000040f61d : ret 0xdde8
0x000000000055a50a : ret 0xde
0x000000000059acc5 : ret 0xde86
0x00000000005b26b4 : ret 0xde91
0x000000000050e289 : ret 0xdeb
0x000000000048e17c : ret 0xdee8
0x0000000000520b9f : ret 0xdf31
0x000000000044d930 : ret 0xdf8
0x000000000044db27 : ret 0xdf9
0x000000000044dd1a : ret 0xdfa
0x000000000044d8ad : ret 0xdfb
0x0000000000593de5 : ret 0xdfca
0x0000000000508dfb : ret 0xdfe8
0x0000000000597104 : ret 0xdff8
0x0000000000422aba : ret 0xe0
0x00000000005d6c19 : ret 0xe022
0x00000000005a0001 : ret 0xe039
0x00000000005128da : ret 0xe083
0x0000000000458f2a : ret 0xe0c
0x00000000004d4c67 : ret 0xe0c0
0x000000000049092b : ret 0xe0c1
0x00000000005983bd : ret 0xe1a9
0x000000000059d7a8 : ret 0xe1ac
0x000000000042e864 : ret 0xe1ff
0x0000000000491b2a : ret 0xe281
0x000000000046431f : ret 0xe283
0x00000000005b7ed6 : ret 0xe28e
0x00000000005b4469 : ret 0xe2c1
0x0000000000513011 : ret 0xe2c4
0x00000000005a5db1 : ret 0xe329
0x000000000052901a : ret 0xe3c4
0x00000000005a3d6b : ret 0xe3df
0x00000000005ae485 : ret 0xe408
0x00000000005b5c14 : ret 0xe440
0x0000000000579616 : ret 0xe445
0x0000000000595575 : ret 0xe466
0x00000000005af8ab : ret 0xe4b6
0x00000000004250d6 : ret 0xe4e8
0x0000000000505718 : ret 0xe575
0x0000000000496bf5 : ret 0xe5e8
0x000000000058e372 : ret 0xe63
0x000000000047eda7 : ret 0xe672
0x0000000000506215 : ret 0xe681
0x00000000005b50a7 : ret 0xe682
0x0000000000538f4a : ret 0xe683
0x00000000005aba07 : ret 0xe6e2
0x00000000005ac039 : ret 0xe762
0x000000000043bdf0 : ret 0xe772
0x00000000004563a0 : ret 0xe775
0x00000000005969ad : ret 0xe820
0x000000000059b3ca : ret 0xe867
0x00000000004ed24d : ret 0xe889
0x00000000005aca42 : ret 0xe8b9
0x00000000004401a2 : ret 0xe8e8
0x00000000005a4691 : ret 0xe90d
0x00000000005ac690 : ret 0xe942
0x0000000000463b2e : ret 0xe958
0x00000000005a657a : ret 0xe976
0x00000000005b3683 : ret 0xe981
0x000000000054aa94 : ret 0xe989
0x0000000000596227 : ret 0xe9a9
0x0000000000440a81 : ret 0xe9e8
0x00000000005aae49 : ret 0xea0d
0x00000000004e3fe1 : ret 0xea31
0x00000000004d1bb2 : ret 0xea39
0x0000000000408a9a : ret 0xeac1
0x0000000000492d70 : ret 0xead1
0x0000000000541c90 : ret 0xeae9
0x000000000045251d : ret 0xeb
0x000000000057848a : ret 0xeb1a
0x00000000004ea0b5 : ret 0xeb30
0x000000000059ff60 : ret 0xeb49
0x00000000004db222 : ret 0xeb7c
0x000000000057d117 : ret 0xebb0
0x00000000004f8393 : ret 0xebc9
0x00000000004f8384 : ret 0xebd0
0x000000000040feff : ret 0xebe8
0x0000000000463c9f : ret 0xebe9
0x00000000005d683a : ret 0xec12
0x000000000057d456 : ret 0xec3d
0x0000000000466411 : ret 0xec72
0x000000000059a471 : ret 0xec77
0x00000000005a3152 : ret 0xeca0
0x00000000005a3ee7 : ret 0xeccc
0x00000000005d6a49 : ret 0xece
0x00000000004d9aee : ret 0xece8
0x000000000059900f : ret 0xecf9
0x000000000043861b : ret 0xed31
0x00000000005564b3 : ret 0xed5e
0x00000000005436cd : ret 0xed85
0x00000000005a60db : ret 0xed8f
0x0000000000542ecd : ret 0xede8
0x0000000000459dcd : ret 0xede9
0x00000000005b6a29 : ret 0xee1c
0x00000000005234fc : ret 0xee31
0x000000000054ba1c : ret 0xee8
0x000000000055872a : ret 0xee8e
0x00000000005b6329 : ret 0xeeb6
0x000000000044d85b : ret 0xeec
0x000000000058c90b : ret 0xeec8
0x00000000004d1f7c : ret 0xeee8
0x00000000005507fa : ret 0xef09
0x000000000059713e : ret 0xef10
0x0000000000520d91 : ret 0xef31
0x000000000050e47a : ret 0xef3a
0x00000000004358ee : ret 0xef72
0x000000000057d5b4 : ret 0xefc8
0x00000000005a99d3 : ret 0xefcf
0x000000000057d9ab : ret 0xefdf
0x00000000004813cb : ret 0xefe8
0x000000000040460d : ret 0xf
0x000000000051a641 : ret 0xf00
0x000000000041fbea : ret 0xf01
0x000000000051a868 : ret 0xf02
0x000000000051a948 : ret 0xf03
0x00000000005d6e29 : ret 0xf032
0x0000000000418127 : ret 0xf039
0x0000000000452982 : ret 0xf06
0x000000000055202a : ret 0xf07e
0x000000000042002b : ret 0xf08
0x00000000005b7a74 : ret 0xf0ad
0x00000000005a0ab4 : ret 0xf0d2
0x00000000004fc34a : ret 0xf0e8
0x000000000044ca93 : ret 0xf101
0x000000000045e3c1 : ret 0xf131
0x000000000053ea5a : ret 0xf17a
0x000000000048056a : ret 0xf189
0x00000000004e834a : ret 0xf199
0x00000000005601da : ret 0xf19d
0x0000000000599f4b : ret 0xf1d1
0x00000000005b35c7 : ret 0xf1de
0x0000000000416249 : ret 0xf1e8
0x000000000053b02a : ret 0xf1ee
0x000000000046cd07 : ret 0xf20
0x000000000044cb11 : ret 0xf201
0x00000000004e0b1a : ret 0xf212
0x00000000005b17c0 : ret 0xf222
0x000000000046416e : ret 0xf229
0x0000000000594809 : ret 0xf22c
0x000000000050e506 : ret 0xf231
0x00000000005019f1 : ret 0xf239
0x00000000005a7ddf : ret 0xf245
0x000000000053ad9a : ret 0xf267
0x000000000044ca21 : ret 0xf301
0x000000000050703a : ret 0xf310
0x000000000051f982 : ret 0xf321
0x0000000000547cda : ret 0xf322
0x000000000055c93a : ret 0xf32a
0x00000000005b251d : ret 0xf356
0x000000000046bdc7 : ret 0xf3e8
0x0000000000541197 : ret 0xf3e9
0x0000000000593db7 : ret 0xf3f4
0x00000000004d9056 : ret 0xf40
0x000000000045aa30 : ret 0xf41
0x00000000004d8f27 : ret 0xf43
0x000000000042930d : ret 0xf44
0x0000000000451425 : ret 0xf45
0x00000000005a1ba1 : ret 0xf462
0x00000000005a29ae : ret 0xf479
0x000000000050697a : ret 0xf47d
0x00000000004409e4 : ret 0xf48
0x00000000004dc9df : ret 0xf49
0x000000000057d80b : ret 0xf4ec
0x0000000000454500 : ret 0xf50
0x00000000005b2e22 : ret 0xf505
0x00000000004ac6ba : ret 0xf557
0x000000000058c36d : ret 0xf56b
0x000000000050b5fa : ret 0xf58b
0x000000000052291f : ret 0xf5c5
0x000000000050d2da : ret 0xf5d7
0x000000000045348a : ret 0xf60
0x0000000000482dcf : ret 0xf600
0x00000000004e5ad8 : ret 0xf631
0x0000000000452585 : ret 0xf66
0x00000000004d94f1 : ret 0xf685
0x000000000057d0ab : ret 0xf6ab
0x000000000054306e : ret 0xf6be
0x000000000059683b : ret 0xf6c2
0x00000000004be4c6 : ret 0xf6f3
0x0000000000454378 : ret 0xf70
0x0000000000507b3f : ret 0xf70a
0x00000000004087a5 : ret 0xf741
0x00000000004be4af : ret 0xf789
0x00000000004be4b7 : ret 0xf78b
0x0000000000552caa : ret 0xf796
0x0000000000595927 : ret 0xf7c5
0x00000000004be7ca : ret 0xf7c9
0x00000000004be7d5 : ret 0xf7cb
0x00000000005b4c97 : ret 0xf7ea
0x00000000004a0204 : ret 0xf8
0x000000000041d16a : ret 0xf80
0x00000000005b084d : ret 0xf848
0x00000000005461aa : ret 0xf861
0x0000000000442b48 : ret 0xf883
0x0000000000477d7a : ret 0xf89e
0x00000000004e2c2d : ret 0xf8a
0x000000000040874d : ret 0xf8c1
0x00000000004dedaa : ret 0xf8c4
0x00000000004d6ffa : ret 0xf8d4
0x000000000043ed92 : ret 0xf8e8
0x00000000005afe51 : ret 0xf8f9
0x00000000004d2856 : ret 0xf901
0x0000000000493021 : ret 0xf931
0x000000000057d8a2 : ret 0xf961
0x0000000000564ce0 : ret 0xf981
0x0000000000517604 : ret 0xf983
0x00000000005b5bbc : ret 0xf99f
0x00000000005aa798 : ret 0xf9bc
0x000000000051b3fd : ret 0xf9c5
0x000000000054679a : ret 0xf9f7
0x00000000005b786b : ret 0xfa02
0x00000000005975e1 : ret 0xfa3d
0x0000000000598d3e : ret 0xfa3e
0x00000000005a3fde : ret 0xfa73
0x00000000004c809b : ret 0xfa81
0x0000000000443db1 : ret 0xfa83
0x0000000000405c4a : ret 0xfac
0x00000000004c1ec1 : ret 0xfac1
0x000000000051bdd0 : ret 0xfac5
0x000000000050ac40 : ret 0xfae8
0x0000000000541e80 : ret 0xfae9
0x000000000051fb83 : ret 0xfb21
0x00000000005a074a : ret 0xfb3b
0x00000000004e384a : ret 0xfb3d
0x0000000000594103 : ret 0xfb5b
0x00000000004e0c2a : ret 0xfb68
0x0000000000593c45 : ret 0xfb9
0x00000000004ad96a : ret 0xfbd4
0x000000000040a3f4 : ret 0xfbe9
0x00000000004c987a : ret 0xfc56
0x00000000004a4d6a : ret 0xfc60
0x0000000000437c7a : ret 0xfca2
0x00000000005ab1a4 : ret 0xfcbb
0x00000000004ff2aa : ret 0xfcd0
0x000000000048821a : ret 0xfce4
0x000000000055487e : ret 0xfce8
0x0000000000520981 : ret 0xfd01
0x00000000004987aa : ret 0xfd22
0x000000000057cb21 : ret 0xfd45
0x000000000055dab5 : ret 0xfd5
0x00000000005b147b : ret 0xfd78
0x00000000005364fd : ret 0xfd89
0x000000000055f82a : ret 0xfda3
0x00000000004f2eca : ret 0xfdbf
0x00000000004db78a : ret 0xfdc1
0x0000000000466c0a : ret 0xfde
0x00000000004462c7 : ret 0xfde1
0x0000000000597e4b : ret 0xfe1a
0x000000000041ff6a : ret 0xfe1d
0x00000000005a005a : ret 0xfe29
0x000000000050374a : ret 0xfe2b
0x000000000059c656 : ret 0xfe3e
0x0000000000593a57 : ret 0xfe43
0x000000000059feec : ret 0xfe88
0x000000000058e171 : ret 0xfea6
0x000000000047679a : ret 0xfead
0x00000000004f237e : ret 0xfeb9
0x000000000054dbba : ret 0xfebd
0x0000000000511c81 : ret 0xfec5
0x00000000004dd44a : ret 0xfed4
0x000000000049f27a : ret 0xfefc
0x0000000000411804 : ret 0xff00
0x0000000000420eba : ret 0xff01
0x0000000000465631 : ret 0xff08
0x000000000045aba2 : ret 0xff2
0x00000000004d5e7f : ret 0xff3
0x00000000004261af : ret 0xff38
0x00000000004c593a : ret 0xff39
0x000000000045997d : ret 0xff48
0x000000000058d627 : ret 0xff65
0x000000000042f36a : ret 0xff6a
0x000000000057ca7b : ret 0xff8e
0x000000000041f79a : ret 0xff94
0x0000000000437d1f : ret 0xffa
0x000000000047eb49 : ret 0xffb8
0x000000000047302a : ret 0xffc7
0x00000000005467ca : ret 0xffcb
0x000000000046dd7a : ret 0xffd8
0x000000000051cc1a : ret 0xffdf
0x00000000005ef3d1 : ret 0xffe3
0x00000000005f1bc1 : ret 0xffe4
0x00000000005e2805 : ret 0xffe5
0x00000000005f40f9 : ret 0xffe6
0x00000000005e3745 : ret 0xffe8
0x00000000005fb111 : ret 0xffe9
0x00000000005fda29 : ret 0xffea
0x0000000000545eda : ret 0xffeb
0x00000000005e589d : ret 0xffec
0x00000000004f986a : ret 0xffed
0x00000000005e67cd : ret 0xffee
0x0000000000545319 : ret 0xffef
0x0000000000445db8 : ret 0xfff0
0x000000000054598f : ret 0xfff1
0x0000000000466f9f : ret 0xfff3
0x0000000000561400 : ret 0xfff6
0x000000000049457a : ret 0xfff7
0x00000000004667a7 : ret 0xfff8
0x000000000054d50e : ret 0xfff9
0x000000000040c463 : ret 0xfffa
0x00000000004d77fa : ret 0xfffb
0x00000000004639ba : ret 0xfffc
0x00000000004303f3 : ret 0xfffd
0x00000000004c9fea : ret 0xfffe
0x000000000042feef : ret 0xffff
0x0000000000419dee : ret 1
0x0000000000400530 : ret 2
0x000000000041a8db : ret 3
0x00000000004c4874 : ret 4
0x0000000000405273 : ret 5
0x0000000000414acb : ret 6
0x000000000041a3db : ret 7
0x00000000004031d5 : ret 8
0x0000000000434157 : ret 9
0x000000000043b7ae : retf -0x2709 ; cmp sil, 0x41 ; cmovne eax, edx ; jmp 0x43b7d9
0x0000000000579b8b : retf -0x2bd6 ; call 0xffffffffdc1a5776
0x0000000000579d8b : retf -0x2bd6 ; call 0xffffffffdc1a5976
0x000000000057a08b : retf -0x2bd6 ; call 0xffffffffdc1a5c76
0x000000000049b4c2 : retf -0x76b4 ; ror dword ptr [rcx - 0x77], -0x18 ; call r10
0x00000000005a6bb6 : retf 0x5ce5 ; jmp rsp
0x00000000005ade65 : retf 0x6e71 ; call qword ptr [rax]
0x0000000000608d05 : retf 1 ; or byte ptr [rbp - 0x12], dh ; jmp qword ptr [rdi]
0x00000000005e56a9 : retf ; add dword ptr [rax], eax ; sahf ; in al, dx ; jmp rax
0x000000000047e011 : retf ; call r15
0x00000000005390fb : retf ; jmp 0x539107
0x00000000005e4fbd : retf ; jmp 0x5e4fc1
0x000000000045282b : retf ; lea rcx, qword ptr [rcx + rax + 0x20] ; sub r10, rax ; jmp 0x452848
0x00000000005aae4e : retf ; movsb byte ptr [rdi], byte ptr [rsi] ; call qword ptr [rdi]
0x00000000005a6bb5 : retfq 0x5ce5 ; jmp rsp
0x00000000005115d9 : rol ah, 1 ; jle 0x511656 ; pop rbp ; sub byte ptr [rcx + 1], cl ; ret 0x8948
0x00000000005345a4 : rol ah, cl ; ret
0x00000000005e60bc : rol al, -0x13 ; jmp qword ptr [rax]
0x00000000005d7292 : rol al, -0x31 ; bswap esp ; ret
0x00000000005d6a90 : rol al, -0x40 ; add ah, cl ; ret
0x00000000005e92c4 : rol al, 1 ; call rax
0x00000000005a6c96 : rol bh, -0x57 ; mov dl, 0x58 ; ret
0x0000000000436154 : rol bl, -0x48 ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000494905 : rol bl, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000046b3f8 : rol bl, 0x44 ; mov eax, ecx ; ret
0x000000000057e61a : rol bl, 0x4c ; ret 0x4958
0x00000000005eaaac : rol bl, 1 ; idiv bh ; mov byte ptr [rbx + rax], bl ; add al, ah ; ret
0x0000000000508cba : rol bl, cl ; mov eax, 1 ; ret
0x0000000000479c0a : rol byte ptr [rax - 0x76b70008], cl ; ret
0x00000000005e3224 : rol byte ptr [rax], -0x18 ; call rax
0x00000000005d6a92 : rol byte ptr [rax], -0x34 ; ret
0x0000000000463bf9 : rol byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0x8be9
0x0000000000464481 : rol byte ptr [rax], 0 ; add rsp, 0x18 ; ret
0x000000000055b2e6 : rol byte ptr [rax], 1 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000539547 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0xca39
0x000000000043156a : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; mov rax, rsi ; ret
0x00000000004bd37f : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000043155a : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; ret
0x00000000004b29d7 : rol byte ptr [rbp + 0x481474c9], -1 ; ret
0x00000000005acaf2 : rol byte ptr [rbp + 0x73], 1 ; mov ebp, 0x213febb9 ; ret 0x8246
0x000000000044cf59 : rol byte ptr [rbp + 0xf], 1 ; cmp cl, ah ; ret 0x4400
0x00000000005e53bc : rol byte ptr [rbp - 0x14], 1 ; jmp rax
0x0000000000436589 : rol byte ptr [rbx + 0x440ffffe], -0x39 ; pop rbx ; ret
0x00000000005e63c8 : rol byte ptr [rbx], 2 ; add byte ptr [rax], dl ; jb 0x5e63c4 ; jmp rax
0x000000000050475f : rol byte ptr [rbx], cl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004087a2 : rol byte ptr [rcx + 0x21], 1 ; ret 0xf741
0x00000000005a3e9c : rol byte ptr [rcx + 0x43c073b6], cl ; ret
0x00000000004e134b : rol byte ptr [rcx + 0xf], -0x49 ; ret 0x568b
0x0000000000408802 : rol byte ptr [rcx + 9], 1 ; ret 0x25
0x0000000000508138 : rol byte ptr [rcx + 9], cl ; fiadd dword ptr [rcx + 0x31] ; ret 0x144
0x000000000050815c : rol byte ptr [rcx + 9], cl ; ret 0x3141
0x0000000000444e57 : rol byte ptr [rcx + rsi - 0x25], 1 ; xor ecx, r12d ; xor edx, r8d ; ret
0x00000000005b72fc : rol byte ptr [rcx - 0x368aaa5c], 0x3f ; ret 0x5312
0x0000000000507adf : rol byte ptr [rcx - 0x3f], 1 ; ror dword ptr [rdx], -9 ; ror dword ptr [rcx], cl ; ret
0x00000000004dcb41 : rol byte ptr [rcx - 0x7c], cl ; ret 0x3b75
0x0000000000505454 : rol byte ptr [rcx - 0x7d], 1 ; ret 0x4405
0x0000000000506cfc : rol byte ptr [rcx - 2], 1 ; ret 0x148b
0x0000000000495538 : rol byte ptr [rcx], -0x40 ; pop rbx ; ret
0x0000000000566f94 : rol byte ptr [rcx], -0x40 ; pop rdx ; ret
0x0000000000432345 : rol byte ptr [rcx], 0 ; add byte ptr [rax + 0x573405], bh ; ret
0x0000000000608305 : rol byte ptr [rcx], 0 ; test al, 0x47 ; out dx, al ; call rdi
0x00000000005eb95c : rol byte ptr [rcx], 1 ; clc ; jmp qword ptr [rax]
0x00000000005a7bef : rol byte ptr [rdi - 0x79], 1 ; test al, 0x4c ; xchg eax, ebp ; ret
0x00000000005611bc : rol byte ptr [rdx - 0x76b70008], 1 ; ret
0x000000000044191a : rol byte ptr [rdx - 0x9cefff1], cl ; mov rdi, rax ; call rbx
0x00000000005ea3d4 : rol byte ptr [rdx - 0xa], 1 ; jmp rax
0x000000000043590c : rol byte ptr [rdx], 0 ; add byte ptr [rax - 0x7f], cl ; ret
0x0000000000411f5b : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; mov r14, rcx ; call r14
0x000000000042cd1a : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; ret
0x0000000000432225 : rol byte ptr [rdx], cl ; add byte ptr [rax], al ; mov eax, 0x5731dd ; ret
0x0000000000507e3e : rol byte ptr [rip + 0x44c80145], -0x77 ; ret
0x0000000000520b97 : rol byte ptr [rip + 0x4566f501], 0xf ; outsd dx, dword ptr [rsi] ; ret 0xdf31
0x000000000044ca8d : rol byte ptr [rip - 0x18ebe3c], cl ; ret 0xf101
0x0000000000606970 : rol byte ptr [rsi + rbp*8], 1 ; jmp qword ptr [rdi]
0x0000000000507f80 : rol byte ptr [rsi], -0x3f ; ror byte ptr [rdx], -0x77 ; ret
0x000000000047a2cb : rol byte ptr [rsi], 0 ; pop rbx ; ret
0x00000000005a314e : rol byte ptr [rsp + rdx*4], cl ; cli ; ret 0xeca0
0x00000000005eab14 : rol ch, -0xa ; call rax
0x00000000005128a3 : rol ch, -2 ; jg 0x5128b8 ; vzeroupper ; ret
0x0000000000448b61 : rol ch, 1 ; int1 ; cld ; ret 0x894c
0x00000000004e3fda : rol cl, -0x3f ; or esp, dword ptr [rsi + 0xf] ; outsb dx, byte ptr [rsi] ; ret 0xea31
0x000000000047eaa1 : rol cl, 1 ; call 0x78b72c9
0x0000000000507871 : rol cl, 1 ; ret
0x00000000005e4544 : rol dh, -0x16 ; call qword ptr [rax]
0x00000000005e2814 : rol dl, -0x1b ; push qword ptr [rax - 0x1ffffefa] ; ret 0xffe5
0x00000000005e93a0 : rol dl, 2 ; add byte ptr [rax - 0x7000d25], ah ; ret 2
0x0000000000596575 : rol dword ptr [rax + rax*4], -0x49 ; ret
0x00000000004a1363 : rol dword ptr [rax + rax], 1 ; mov eax, 1 ; pop rdx ; ret
0x000000000055b63d : rol dword ptr [rax*4 + 0x31ed75d2], -0x40 ; ret
0x000000000045758e : rol dword ptr [rax], 0 ; add byte ptr [rax - 1], cl ; ret
0x00000000004e64e1 : rol dword ptr [rax], 0 ; add byte ptr [rbx + 0x58902c8], al ; ret 0x3480
0x00000000004ed23b : rol dword ptr [rax], cl ; add bh, bh ; ret
0x000000000049090e : rol dword ptr [rbp + 0x31], 1 ; ret 0x3144
0x000000000042d56c : rol dword ptr [rbp - 0x3f6af013], 0x20 ; ret
0x000000000058bcd7 : rol dword ptr [rbp - 0x664bd96], 0x7e ; jle 0x58bd1a ; ret 0xbde5
0x0000000000566461 : rol dword ptr [rbx + 0x7e000c78], 1 ; or edi, edi ; ret
0x000000000047c44a : rol dword ptr [rbx], cl ; pop rsi ; js 0x47c3e1 ; jl 0x47c42d ; ret
0x00000000004e48b2 : rol dword ptr [rcx + 0x31], cl ; ret
0x0000000000454038 : rol dword ptr [rcx + 0xf], -0x6d ; ret
0x000000000047e343 : rol dword ptr [rcx + 0xf], 1 ; xchg eax, esi ; ret
0x0000000000482051 : rol dword ptr [rcx - 0x77], 1 ; ret 0x8941
0x000000000044597b : rol dword ptr [rcx], -0x77 ; ret 0x478b
0x000000000045aa3a : rol dword ptr [rcx], 0xf ; ret 0xc085
0x000000000044be6d : rol dword ptr [rcx], 1 ; fadd st(5) ; cmp edi, ebp ; ret
0x0000000000492d7c : rol dword ptr [rcx], 1 ; sal byte ptr [rcx], cl ; ret 0xb89
0x00000000005e58a1 : rol dword ptr [rcx], cl ; add al, al ; ret
0x00000000005076ef : rol dword ptr [rcx], cl ; ret
0x00000000005a50be : rol dword ptr [rdi], cl ; and eax, 0x44bfe209 ; ret 0x62a8
0x00000000005ac56e : rol dword ptr [rdi], cl ; ret
0x00000000005a52e1 : rol dword ptr [rdx + 0x17768140], -0x29 ; jae 0x5a52f3 ; ret 0xd029
0x000000000057e00a : rol dword ptr [rdx - 0x60], 1 ; jg 0x57e022 ; int 0xff
0x00000000004329b4 : rol dword ptr [rdx], 0 ; add byte ptr [rax + 0x573fbd], bh ; ret
0x00000000005729a1 : rol dword ptr [rdx], 0 ; add byte ptr [rax], al ; add byte ptr [rdx], cl ; ret 0x42
0x00000000005e9381 : rol dword ptr [rdx], 0 ; xor ch, dl ; lcall ptr [rax] ; ret 2
0x0000000000599897 : rol dword ptr [rdx], 1 ; cli ; mov bl, -0x20 ; test dword ptr [rax], ecx ; ret
0x0000000000507c7c : rol dword ptr [rip + 0x41c90141], -0x3f ; ret 0xf70a
0x0000000000507773 : rol dword ptr [rip + 0x41d90141], -0x3f ; ret 0x8b0a
0x000000000043f785 : rol dword ptr [rip - 0x263af09a], cl ; add dword ptr [rsi - 0x3f], esp ; ret
0x0000000000463e99 : rol dword ptr [rsi + rax + 0x5ac03100], cl ; ret
0x00000000005b3d7c : rol dword ptr [rsi*8 - 0x5f11bcdb], cl ; ret
0x000000000043414e : rol dword ptr [rsi], cl ; add byte ptr [rax], al ; mov rdi, r14 ; call 0x4d0399
0x00000000005a9a5a : rol dword ptr [rsi], cl ; ret
0x000000000044929e : rol ebp, -0x3f ; out dx, eax ; inc ah ; ret
0x000000000044acfa : rol ecx, 1 ; ret
0x00000000005076f3 : rol ecx, cl ; ret
0x0000000000507ce2 : rol ecx, cl ; ror dword ptr [rdx], 0x31 ; ret
0x0000000000577f7f : rol esp, 0x60 ; lahf ; ret 0x5c9e
0x0000000000512f98 : rol esp, 0x62 ; ret
0x00000000004490f1 : rol esp, 1 ; ret
0x0000000000449259 : rol esp, cl ; ret
0x00000000005e20ec : ror ah, -0x1c ; call qword ptr [rax]
0x00000000005d6895 : ror ah, 0xc ; ret 0xd832
0x00000000005aff0e : ror ah, cl ; cmp esp, ebx ; push rax ; mov dh, -0x6e ; ret 0x54c
0x00000000005b6dae : ror bl, cl ; ror dword ptr [rbx], cl ; ret 0xd5b3
0x000000000048264b : ror byte ptr [r13 - 0x77], 1 ; push rbp ; fmul dword ptr [rcx - 0x77] ; ret
0x000000000059c685 : ror byte ptr [r14 - 0x6d2bf168], -0x2f ; ret
0x000000000048236e : ror byte ptr [r9 - 0x77], 1 ; pop rbp ; fmul dword ptr [rbp - 0x77] ; ret
0x00000000004a020a : ror byte ptr [rax + 0x39], -0x2a ; je 0x4a0217 ; ret
0x00000000004e14c5 : ror byte ptr [rax + 0xf], -0x51 ; ret 0x8548
0x00000000004ed87e : ror byte ptr [rax + 0xf], 0x45 ; ret
0x0000000000511c89 : ror byte ptr [rax + 0xf], 1 ; scasd eax, dword ptr [rdi] ; mov byte ptr [r9 + 1], cl ; ret
0x0000000000511b39 : ror byte ptr [rax + 0xf], 1 ; scasd eax, dword ptr [rdi] ; mov byte ptr [r9 + 1], cl ; ret 0x8948
0x00000000004e1507 : ror byte ptr [rax + 0xf], 1 ; scasd eax, dword ptr [rdi] ; ret
0x00000000004e15c0 : ror byte ptr [rax + 0xf], 1 ; scasd eax, dword ptr [rdi] ; ret 0x8548
0x00000000004e2346 : ror byte ptr [rax + 0xf], cl ; ret 0x8941
0x000000000056222d : ror byte ptr [rax + 1], cl ; ret
0x0000000000420bc5 : ror byte ptr [rax + 1], cl ; ret 0x8d48
0x000000000040237c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40238b ; pop rbp ; ret
0x0000000000443387 : ror byte ptr [rax - 0x39], -0x40 ; call rdi
0x0000000000564c6f : ror byte ptr [rax - 0x68], -0xd ; ret
0x00000000004231dc : ror byte ptr [rax - 0x73], 0x40 ; adc byte ptr [rax + 0xf], cl ; ret
0x000000000043e309 : ror byte ptr [rax - 0x73], 1 ; xor al, 0x24 ; mov rdi, r12 ; call r14
0x000000000043ea45 : ror byte ptr [rax - 0x73], 1 ; xor al, 0x24 ; xor edi, edi ; call r14
0x000000000046c15e : ror byte ptr [rax - 0x73], 4 ; or byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x0000000000457bf0 : ror byte ptr [rax - 0x73], cl ; and al, 0x50 ; call rax
0x0000000000489120 : ror byte ptr [rax - 0x75], cl ; and al, 0x30 ; call rax
0x0000000000461313 : ror byte ptr [rax - 0x77], -0x21 ; mov rdx, r14 ; call r15
0x00000000004eccfd : ror byte ptr [rax - 0x77], 0x43 ; sbb byte ptr [rax + 0xf], cl ; ret
0x000000000041fc38 : ror byte ptr [rax - 0x77], 1 ; ret
0x00000000004aa638 : ror byte ptr [rax - 0x77], 1 ; ret 0x894d
0x000000000050455d : ror byte ptr [rax - 0x77], 5 ; ret
0x000000000049d176 : ror byte ptr [rax - 0x77], 5 ; ret 0x38e7
0x000000000042fee6 : ror byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; jmp 0x5fde2
0x00000000004ff886 : ror byte ptr [rax - 0x77], cl ; fisttp word ptr [rcx + rcx*4 - 0xf] ; call rax
0x0000000000461d7f : ror byte ptr [rax - 0x77], cl ; fisttp word ptr [rcx + rcx*4 - 7] ; call r8
0x000000000040c0d9 : ror byte ptr [rax - 0x77], cl ; jmp 0x224a35
0x000000000040c36f : ror byte ptr [rax - 0x77], cl ; jmp 0x224ccb
0x000000000042ba1d : ror byte ptr [rax - 0x7b], -0x37 ; je 0x42ba2f ; mov rax, qword ptr [rcx] ; ret
0x000000000042e418 : ror byte ptr [rax - 0x7b], -0x37 ; je 0x42e42a ; mov rax, qword ptr [rcx] ; ret
0x000000000042e438 : ror byte ptr [rax - 0x7b], -0x37 ; je 0x42e44a ; mov rax, qword ptr [rcx] ; ret
0x0000000000479f8a : ror byte ptr [rax - 0x7b], -0xa ; jne 0x479f89 ; sub rax, rdi ; ret
0x000000000049c7e1 : ror byte ptr [rax - 0x7b], -1 ; je 0x49c7f3 ; mov eax, dword ptr [rdi + 0x14] ; ret
0x00000000004d03e1 : ror byte ptr [rax - 0x7b], -1 ; je 0x4d03f3 ; mov rax, qword ptr [rdi] ; ret
0x00000000004f4bb1 : ror byte ptr [rax - 0x7b], -1 ; je 0x4f4bc3 ; mov eax, dword ptr [rdi + 8] ; ret
0x0000000000548841 : ror byte ptr [rax - 0x7b], -1 ; je 0x548851 ; mov eax, dword ptr [rdi] ; ret
0x0000000000548851 : ror byte ptr [rax - 0x7b], -1 ; je 0x548863 ; mov eax, dword ptr [rdi + 0x10] ; ret
0x00000000005588d1 : ror byte ptr [rax - 0x7b], -1 ; je 0x5588e3 ; mov rax, qword ptr [rdi] ; ret
0x000000000055c881 : ror byte ptr [rax - 0x7b], -1 ; je 0x55c893 ; mov rax, qword ptr [rdi] ; ret
0x0000000000561541 : ror byte ptr [rax - 0x7b], -1 ; je 0x561553 ; mov rax, qword ptr [rdi] ; ret
0x00000000004bc6d5 : ror byte ptr [rax - 0x7b], 1 ; ror byte ptr [rdi], -0x7c ; ret 0
0x00000000004ca2b8 : ror byte ptr [rax - 0x7b], cl ; leave ; je 0x4ca2dc ; mov rdi, rbx ; call rcx
0x00000000004a2511 : ror byte ptr [rax - 0x7d], -0x3a ; sub byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000000004336ba : ror byte ptr [rax - 0x7d], -0x3c ; adc byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000054e067 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x54e0ce ; ret
0x000000000054e295 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x54e2ff ; pop r14 ; pop rbp ; ret
0x0000000000402484 : ror byte ptr [rax - 0x7d], -0x3c ; or byte ptr [rbx + 0x41], bl ; pop rsi ; ret
0x000000000040acee : ror byte ptr [rax - 0x7d], -0x3c ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000004861cd : ror byte ptr [rax - 0x7d], -0x3c ; pop rax ; pop rbx ; pop r14 ; ret
0x00000000004ae072 : ror byte ptr [rax - 0x7d], -0x3c ; pop rbx ; pop rbp ; ret
0x00000000004f131e : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbx ; ret
0x00000000005485b5 : ror byte ptr [rax - 0x7d], -0x3c ; ret
0x000000000040dae0 : ror byte ptr [rax - 0x7d], -0x3c ; sbb byte ptr [rbx + 0x41], bl ; pop rsi ; ret
0x0000000000509032 : ror byte ptr [rax - 0x7d], -0x3c ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000004d8f00 : ror byte ptr [rax - 0x7d], -8 ; or byte ptr [rbp - 0x27], dh ; ret
0x00000000004d8ec7 : ror byte ptr [rax - 0x7d], -8 ; or byte ptr [rbp - 0x2e], dh ; ret
0x00000000004125d0 : ror byte ptr [rax - 0x7d], -8 ; or byte ptr [rbp - 0x47], dh ; ret
0x0000000000453487 : ror byte ptr [rax - 0x7d], 1 ; ret 0xf60
0x000000000040ca21 : ror byte ptr [rax - 1], 1 ; ret
0x000000000047098c : ror byte ptr [rax - 1], 1 ; ret 0x8341
0x00000000005ee330 : ror byte ptr [rax], -0x1d ; call qword ptr [rdx]
0x000000000049faed : ror byte ptr [rax], 0x44 ; mov eax, eax ; pop rdx ; ret
0x000000000055bdb8 : ror byte ptr [rax], 0x5a ; ret
0x000000000056491f : ror byte ptr [rbp - 0x77], -0x36 ; neg r9 ; ret
0x000000000048264c : ror byte ptr [rbp - 0x77], 1 ; push rbp ; fmul dword ptr [rcx - 0x77] ; ret
0x000000000040a5c6 : ror byte ptr [rbp - 0x77], cl ; int1 ; call rax
0x000000000040b753 : ror byte ptr [rbp - 0x77], cl ; stc ; call rax
0x0000000000452609 : ror byte ptr [rbx - 0x73], 1 ; adc r12, qword ptr [rax] ; mov r10, rax ; jmp 0x452628
0x00000000005063df : ror byte ptr [rbx - 0x7ebe83a2], 1 ; ret 0x2d9
0x0000000000506b5c : ror byte ptr [rbx - 0x7ebe83a2], 1 ; ret 0xd2bb
0x0000000000506a68 : ror byte ptr [rbx - 0x7ebe93a2], 1 ; ret 0x4314
0x00000000005062f7 : ror byte ptr [rbx - 0x7ebe93a2], 1 ; ret 0xd87
0x000000000050620f : ror byte ptr [rbx - 0x7ebea3a2], 1 ; ret 0xe681
0x0000000000506974 : ror byte ptr [rbx - 0x7ebea3a2], 1 ; ret 0xf47d
0x0000000000506880 : ror byte ptr [rbx - 0x7ebeb3a2], 1 ; ret 0x23a7
0x0000000000506128 : ror byte ptr [rbx - 0x7ebeb3a2], 1 ; ret 0x5a51
0x0000000000506027 : ror byte ptr [rbx - 0x7ebec3a2], 1 ; ret 0x438e
0x000000000050677d : ror byte ptr [rbx - 0x7ebec3a2], 1 ; ret 0x7cf8
0x00000000005066a1 : ror byte ptr [rbx - 0x7ebed3a2], 1 ; ret 0x3085
0x0000000000505f3f : ror byte ptr [rbx - 0x7ebed3a2], 1 ; ret 0x5bb1
0x0000000000505e57 : ror byte ptr [rbx - 0x7ebee3a2], 1 ; ret 0x4613
0x00000000005065c6 : ror byte ptr [rbx - 0x7ebee3a2], 1 ; ret 0x4b60
0x00000000005064ea : ror byte ptr [rbx - 0x7ebef3a2], 1 ; ret 0x6122
0x0000000000505d6f : ror byte ptr [rbx - 0x7ebef3a2], 1 ; ret 0x70db
0x0000000000507a78 : ror byte ptr [rbx], -0x3f ; ror byte ptr [rdx], -0x77 ; ret
0x000000000057e2ee : ror byte ptr [rbx], 0x2a ; cmc ; imul edx, dword ptr [rsi], -0x7e ; call qword ptr [rdx]
0x0000000000507391 : ror byte ptr [rcx + 0x4789f847], -4 ; ret
0x00000000005574f9 : ror byte ptr [rcx + 0x480c2444], -1 ; ret
0x0000000000491b23 : ror byte ptr [rcx + 0x8eac1ca], 0x31 ; ret 0xe281
0x00000000004dc90d : ror byte ptr [rcx + 0xf], 1 ; ret 0xf631
0x0000000000561af5 : ror byte ptr [rcx + 1], 1 ; ret 0x8348
0x0000000000461a71 : ror byte ptr [rcx + rcx*4 - 0x10], 1 ; pop rbx ; pop r14 ; pop r15 ; ret
0x00000000005613fa : ror byte ptr [rcx + rcx*4 - 0x16], -0x18 ; popfq ; ret 0xfff6
0x00000000004fdbbe : ror byte ptr [rcx + rcx*4 - 0x19], cl ; mov rcx, r13 ; call rbx
0x00000000004e81b8 : ror byte ptr [rcx + rcx*4 - 0x3a], cl ; jmp rax
0x0000000000564e0e : ror byte ptr [rcx + rcx*4 - 0x3d], 1 ; or rax, r9 ; ret
0x0000000000542414 : ror byte ptr [rcx + rcx*4 - 0xe], -0x18 ; ret
0x000000000049c1d5 : ror byte ptr [rcx + rcx*4 - 0xe], -0x18 ; ret 0x314
0x0000000000484bac : ror byte ptr [rcx + rcx*4 - 9], cl ; call rax
0x00000000004a6e4b : ror byte ptr [rcx + rcx*4 - 9], cl ; mov rcx, r13 ; call rax
0x0000000000461a69 : ror byte ptr [rcx + rcx*4 - 9], cl ; mov rcx, rbx ; call rax
0x00000000005505d5 : ror byte ptr [rcx + rcx*4 - 9], cl ; mov rsi, r12 ; call rax
0x0000000000481751 : ror byte ptr [rcx + rdi - 0x12], 0xf ; xchg eax, ebx ; ret
0x00000000005f5340 : ror byte ptr [rcx - 0x19], 1 ; call qword ptr [rdi]
0x00000000004e5ec7 : ror byte ptr [rcx - 0x576b312], 0x44 ; mov ecx, esi ; call rax
0x000000000048236f : ror byte ptr [rcx - 0x77], 1 ; pop rbp ; fmul dword ptr [rbp - 0x77] ; ret
0x0000000000615280 : ror byte ptr [rcx - 0xc], 1 ; call qword ptr [rdi]
0x000000000047a661 : ror byte ptr [rcx - 1], -0x38 ; cmp rax, rdx ; jb 0x47a659 ; ret
0x000000000049fb07 : ror byte ptr [rcx], -0x38 ; pop rdx ; ret
0x0000000000551118 : ror byte ptr [rcx], 0x5a ; ret
0x00000000005e76e8 : ror byte ptr [rdi + 2], 0 ; sub byte ptr [rsi], -0x10 ; jmp rax
0x00000000005079cc : ror byte ptr [rdi], -0x3f ; ror byte ptr [rdx], -0x77 ; ret
0x00000000004da747 : ror byte ptr [rdi], -0x4a ; enter -0x3777, 0x5a ; ret
0x00000000004590ad : ror byte ptr [rdi], -0x4a ; leave ; sub eax, ecx ; ret
0x0000000000463a0b : ror byte ptr [rdi], -0x4a ; rcr byte ptr [rbx + 0x41], 0x5e ; pop r15 ; ret
0x00000000004f5052 : ror byte ptr [rdi], -0x4a ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0x0000000000495535 : ror byte ptr [rdi], -0x4a ; rol byte ptr [rcx], -0x40 ; pop rbx ; ret
0x0000000000566f91 : ror byte ptr [rdi], -0x4a ; rol byte ptr [rcx], -0x40 ; pop rdx ; ret
0x00000000004590aa : ror byte ptr [rdi], -0x4a ; ror byte ptr [rdi], -0x4a ; leave ; sub eax, ecx ; ret
0x000000000047de4c : ror byte ptr [rdi], -0x6a ; ret 0x8440
0x00000000004cad95 : ror byte ptr [rdi], -0x6b ; ret 0x3948
0x000000000043bab8 : ror byte ptr [rdi], -0x6c ; ret 0x8545
0x00000000004896ff : ror byte ptr [rdi], -0x6c ; shr bl, 6 ; xor eax, eax ; pop rbx ; ret
0x00000000004fe60b : ror byte ptr [rdi], -0x72 ; ret
0x00000000004686c4 : ror byte ptr [rdi], -0x72 ; ret 0
0x000000000045758b : ror byte ptr [rdi], -0x72 ; rol dword ptr [rax], 0 ; add byte ptr [rax - 1], cl ; ret
0x00000000004c701c : ror byte ptr [rdi], -0x78 ; ret 0
0x000000000049eaf3 : ror byte ptr [rdi], -0x7b ; ret
0x00000000004a090e : ror byte ptr [rdi], -0x7b ; ret 0
0x0000000000439ff1 : ror byte ptr [rdi], -0x7c ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x310d
0x00000000004711c9 : ror byte ptr [rdi], -0x7c ; add eax, 0xffffffff ; ret
0x00000000004ed8e8 : ror byte ptr [rdi], -0x7c ; hlt ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000045536a : ror byte ptr [rdi], -0x7c ; lahf ; add dword ptr [rax], eax ; add bh, bh ; ret
0x0000000000470042 : ror byte ptr [rdi], -0x7c ; mov es, word ptr [rax + rax] ; add byte ptr [rax - 1], cl ; ret
0x00000000004424e6 : ror byte ptr [rdi], -0x7c ; nop ; add al, 0 ; add bh, bh ; ret
0x000000000046a255 : ror byte ptr [rdi], -0x7c ; ret
0x0000000000423da9 : ror byte ptr [rdi], -0x7c ; ret 0
0x00000000004b0aa0 : ror byte ptr [rdi], -0x7c ; ret 3
0x0000000000413de2 : ror byte ptr [rdi], -0x7c ; salc ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004ed1ac : ror byte ptr [rdi], -0x7c ; wait ; add byte ptr [rax], al ; add bh, bh ; ret
0x0000000000426d2e : ror byte ptr [rdi], -0x7c ; xchg eax, esi ; add byte ptr [rax], al ; add bh, bh ; ret
0x00000000004d8fb2 : ror byte ptr [rdi], 0x11 ; adc byte ptr [r15], r9b ; adc dword ptr [rdi], eax ; ret
0x00000000004bd37b : ror byte ptr [rdi], 0x11 ; adc eax, 0 ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000055e688 : ror byte ptr [rdi], 0x11 ; sub eax, 0 ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004d27ca : ror byte ptr [rdi], 1 ; xchg eax, ebp ; ret 0xb60f
0x000000000048174e : ror byte ptr [rdi], 1 ; xchg eax, esi ; ror byte ptr [rcx + rdi - 0x12], 0xf ; xchg eax, ebx ; ret
0x0000000000551577 : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8148
0x0000000000418124 : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf039
0x000000000046c2bd : ror byte ptr [rdi], cl ; xchg eax, esi ; ret 0x394d
0x00000000005079cf : ror byte ptr [rdx], -0x77 ; ret
0x000000000059c686 : ror byte ptr [rsi - 0x6d2bf168], -0x2f ; ret
0x000000000059af2d : ror byte ptr [rsi - 0x7eacf9d2], 1 ; ret 0x938
0x00000000005e685c : ror dh, 1 ; out dx, al ; call rax
0x000000000042831d : ror dword ptr [rax + 0x39], 1 ; ret 0x874
0x000000000046c94b : ror dword ptr [rax - 0x3f], -0x17 ; sbb byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000004b8e45 : ror dword ptr [rax - 0x75], 1 ; cmp ebp, eax ; ret 0x2d4
0x0000000000539c2b : ror dword ptr [rax - 0x77], -0x30 ; ret
0x00000000004f4a5e : ror dword ptr [rax - 0x77], -0x38 ; add rsp, 0x20 ; pop rbx ; ret
0x00000000004f4e54 : ror dword ptr [rax - 0x77], -0x38 ; add rsp, 0x40 ; pop rbx ; ret
0x00000000004f1d02 : ror dword ptr [rax - 0x77], -0x38 ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004e850d : ror dword ptr [rax - 0x77], -0x38 ; pop rbx ; ret
0x00000000004065d6 : ror dword ptr [rax - 0x77], -0x38 ; pop rdx ; ret
0x000000000055ce3a : ror dword ptr [rax - 0x77], cl ; ret
0x00000000004cd830 : ror dword ptr [rax - 1], 1 ; ret 0x894c
0x00000000005175cf : ror dword ptr [rax], -1 ; ret 0xc031
0x00000000004325d0 : ror dword ptr [rax], cl ; add byte ptr [rax], al ; mov eax, 0x573dda ; ret
0x000000000046b81c : ror dword ptr [rbp - 0x77], cl ; fisttp word ptr [rcx - 0x7d] ; ret 0x4d0b
0x00000000005063a5 : ror dword ptr [rbx - 0x7ebe87ba], cl ; ret
0x00000000005062bd : ror dword ptr [rbx - 0x7ebe97ba], cl ; ret
0x00000000005061d5 : ror dword ptr [rbx - 0x7ebea7ba], cl ; ret
0x00000000005060ef : ror dword ptr [rbx - 0x7ebeb7ba], cl ; ret
0x0000000000505fed : ror dword ptr [rbx - 0x7ebec7ba], cl ; ret
0x0000000000505f05 : ror dword ptr [rbx - 0x7ebed7ba], cl ; ret
0x0000000000505e1d : ror dword ptr [rbx - 0x7ebee7ba], cl ; ret
0x0000000000505d36 : ror dword ptr [rbx - 0x7ebef7ba], cl ; ret
0x000000000055fb8e : ror dword ptr [rbx - 0xf7dba4], 1 ; ret
0x00000000005b6db0 : ror dword ptr [rbx], cl ; ret 0xd5b3
0x000000000046a96d : ror dword ptr [rcx + 0x3c0ea805], 0 ; ret
0x0000000000566a79 : ror dword ptr [rcx + 0x5e415bc8], 0x41 ; pop rdi ; ret
0x00000000004e1734 : ror dword ptr [rcx + 1], 1 ; enter 0xf41, -0x49 ; ret
0x000000000046279a : ror dword ptr [rcx + 1], cl ; ret
0x000000000047f4c8 : ror dword ptr [rcx + rcx*4 - 0x3b], 0x49 ; mov eax, ebx ; call r10
0x0000000000478543 : ror dword ptr [rcx + rdi - 0x18], 0xf ; pushfq ; ret 0xca08
0x000000000054722a : ror dword ptr [rcx + rdi - 0x19], 0xf ; xchg eax, esi ; ret 0xd184
0x000000000042c0b0 : ror dword ptr [rcx - 0x377693b8], 1 ; pop rdx ; ret
0x0000000000554e82 : ror dword ptr [rcx - 0x39], 1 ; ret
0x000000000056346f : ror dword ptr [rcx - 0x39], cl ; ret 0
0x000000000044d3e6 : ror dword ptr [rcx - 0x3f], cl ; jmp 0x44d412
0x000000000049b4c5 : ror dword ptr [rcx - 0x77], -0x18 ; call r10
0x0000000000554f29 : ror dword ptr [rcx - 0x7d], -0x3f ; adc byte ptr [rsi + 0xf], ah ; out dx, eax ; ret 0xf66
0x0000000000564d24 : ror dword ptr [rcx - 1], 1 ; ret 0x1b8
0x00000000005a4fe2 : ror dword ptr [rcx], 4 ; push rbp ; scasd eax, dword ptr [rdi] ; ret
0x0000000000507ae5 : ror dword ptr [rcx], cl ; ret
0x000000000045cd63 : ror dword ptr [rdi], -0x4a ; ret
0x0000000000442f41 : ror dword ptr [rdi], -0x6c ; ret
0x00000000004518eb : ror dword ptr [rdi], 1 ; adc dword ptr [rsi], edx ; ret
0x000000000045ba67 : ror dword ptr [rdi], 1 ; xchg eax, edi ; ret
0x000000000047e365 : ror dword ptr [rdi], 1 ; xchg eax, esi ; ret 0x3948
0x000000000047c00d : ror dword ptr [rdx - 0x75bbfbb2], cl ; or al, 0xffffffd3 ; ret
0x0000000000507ae2 : ror dword ptr [rdx], -9 ; ror dword ptr [rcx], cl ; ret
0x0000000000507ce4 : ror dword ptr [rdx], 0x31 ; ret
0x00000000005a91e8 : ror ebp, 1 ; cli ; sbb cl, dh ; clc ; ret
0x00000000005b4b4f : ror esp, cl ; ret 0xcac1
0x000000000046a96c : ror qword ptr [rcx + 0x3c0ea805], 0 ; ret
0x00000000005b1307 : sahf ; adc bl, bh ; xchg rax, r12 ; sahf ; ret 0x667b
0x0000000000432a05 : sahf ; add al, 0 ; add byte ptr [rax + 0x573def], bh ; ret
0x00000000005e8b31 : sahf ; add al, byte ptr [rax] ; jo 0x5e8ad7 ; int1 ; call qword ptr [rax]
0x000000000055b6b0 : sahf ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000540b76 : sahf ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000059c8c8 : sahf ; cmp al, 0x26 ; ret 0x6f8
0x00000000005e56ad : sahf ; in al, dx ; jmp rax
0x000000000054263e : sahf ; jg 0x542642 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000578aed : sahf ; jmp 0x578ab5
0x00000000005a6bb0 : sahf ; or al, 0xffffffe9 ; insd dword ptr [rdi], dx ; retfq 0x5ce5 ; jmp rsp
0x00000000005971db : sahf ; or bh, byte ptr [rax + 0x46] ; ret 0x9fc2
0x00000000005b18e5 : sahf ; or eax, 0xeb00e968 ; ret
0x00000000005e6e85 : sahf ; out dx, eax ; call rax
0x00000000004aee32 : sahf ; pop rax ; add byte ptr [rcx - 0x48], al ; ret 1
0x0000000000599a76 : sahf ; pop rcx ; jne 0x599adc ; ret
0x000000000059b52a : sahf ; push rsi ; ret 0x38c2
0x0000000000593cf0 : sahf ; ret
0x000000000057e870 : sahf ; ret 0x24d8
0x00000000005a12a3 : sahf ; ret 0x3449
0x00000000005a618b : sahf ; ret 0x54c5
0x000000000059e20d : sahf ; ret 0x64d4
0x00000000005b130d : sahf ; ret 0x667b
0x000000000059b50e : sahf ; stc ; in eax, 0x28 ; ret 0x8a49
0x000000000059bcc3 : sahf ; std ; ret
0x000000000057d9d4 : sahf ; sub dword ptr [rbx + 0x29], ebp ; xchg eax, ebp ; ret 0x492f
0x00000000005e9b6c : sal ah, 1 ; cmc ; call qword ptr [rax]
0x00000000005e996c : sal al, 1 ; cmc ; call qword ptr [rax]
0x00000000005e29ec : sal bh, -0x1b ; jmp qword ptr [rax]
0x000000000045bcb3 : sal bh, -0x30 ; or eax, ecx ; add rsp, 0x28 ; ret
0x00000000005eb6a5 : sal bh, 1 ; call qword ptr [rax]
0x000000000045aa36 : sal bh, 1 ; fdiv st(6) ; rol dword ptr [rcx], 0xf ; ret 0xc085
0x00000000005eb695 : sal bh, 1 ; jmp rax
0x00000000005eb6e5 : sal bh, cl ; jmp rax
0x0000000000448d2e : sal bl, 1 ; ret
0x00000000004e08ad : sal byte ptr [rax + rbx + 0x48], -0x7d ; ret
0x00000000004a5211 : sal byte ptr [rax + rbx*2], 1 ; ret
0x00000000004313db : sal byte ptr [rax + rcx + 0x4c], -0x77 ; dec dword ptr [rcx + rcx*4 - 0xa] ; call rax
0x0000000000479ff7 : sal byte ptr [rax + rdi + 0x48], -1 ; ret
0x000000000053f062 : sal byte ptr [rax + rdi*2 + 0x49], -0x75 ; cmp al, 0x24 ; call rax
0x00000000004f35cd : sal byte ptr [rax + rdx + 0x48], -0x77 ; fisttp word ptr [rcx + rcx*4 - 0xa] ; call rax
0x000000000054827a : sal byte ptr [rax + rdx + 0x4c], -0x77 ; dec byte ptr [rcx + rcx*4 - 0xe] ; call rax
0x00000000005465e9 : sal byte ptr [rax + rsi + 0xf], 0x1f ; add dil, dil ; ret
0x0000000000593d64 : sal byte ptr [rax - 0x71], cl ; ret 0x65aa
0x00000000005320a3 : sal byte ptr [rax - 0x75], 1 ; ret 0xbe30
0x00000000005ea5b4 : sal byte ptr [rax - 0xa], 1 ; jmp qword ptr [rax]
0x00000000005e6214 : sal byte ptr [rax], -0x12 ; call qword ptr [rax]
0x000000000055ca3b : sal byte ptr [rbp + 0x13], -1 ; ret
0x000000000055b640 : sal byte ptr [rbp - 0x13], cl ; xor eax, eax ; ret
0x00000000005397b2 : sal byte ptr [rbp - 0x15], 1 ; mov dword ptr [rdi], r11d ; mov rax, rsi ; ret
0x000000000044d45a : sal byte ptr [rbp - 0x164a245b], 0x5b ; ret 0x3956
0x00000000004cc210 : sal byte ptr [rbp - 0x23], 0x5b ; pop r14 ; pop r15 ; ret
0x0000000000598345 : sal byte ptr [rbp - 0x2ce6c8fd], cl ; ret 0x254
0x000000000055118e : sal byte ptr [rbp - 0x51], -0x7d ; ret
0x00000000005e34ec : sal byte ptr [rbx - 0x18], 1 ; call qword ptr [rax]
0x000000000046b3f3 : sal byte ptr [rbx - 0x26], 1 ; mov eax, r8d ; ret
0x00000000004d27d8 : sal byte ptr [rbx - 0x77fd8b80], cl ; ret
0x00000000005e3298 : sal byte ptr [rbx], 1 ; add byte ptr [rax], ah ; or ch, al ; jmp rax
0x000000000049fd92 : sal byte ptr [rcx + 0x48], -0x7d ; ret
0x0000000000426118 : sal byte ptr [rcx + rbx + 0x48], -0x7d ; ret
0x000000000059ef4d : sal byte ptr [rcx - 0x5021854c], cl ; and eax, esp ; ret 0xbd61
0x000000000040526e : sal byte ptr [rcx], cl ; leave ; call 0x461565
0x0000000000492d7e : sal byte ptr [rcx], cl ; ret 0xb89
0x0000000000426085 : sal byte ptr [rdi + 0x48], -0x7d ; ret
0x000000000051756f : sal byte ptr [rdi + 0x5d], 0 ; mov byte ptr [rdi + 7], al ; ret
0x00000000004e5f2d : sal byte ptr [rdi + rax + 0x31], -0xa ; mov rdi, rbx ; call rax
0x000000000053f078 : sal byte ptr [rdx + 0x4c], -0x77 ; out 0x4c, eax ; mov esi, edi ; call rax
0x000000000059895d : sal byte ptr [rdx + 0x7c], -0x24 ; ret
0x0000000000551a36 : sal byte ptr [rdx + rax - 0x77], -8 ; ret
0x00000000004e6429 : sal byte ptr [rdx + rax - 1], -0x20 ; ret
0x00000000004e6439 : sal byte ptr [rdx + rax - 1], -0x20 ; xor eax, eax ; ret
0x00000000004b2947 : sal byte ptr [rdx + rbx + 0x48], -0x7d ; ret
0x00000000004b263e : sal byte ptr [rdx + rdi*2 + 0x48], -0x7d ; ret
0x0000000000540c49 : sal byte ptr [rdx + rdx + 0x48], -0x73 ; xor al, 0x24 ; xor edx, edx ; call rax
0x000000000047a667 : sal byte ptr [rdx - 0x1a], 1 ; ret
0x00000000004b909c : sal byte ptr [rdx], 1 ; add dword ptr [rax], eax ; xor eax, eax ; pop rdx ; ret
0x0000000000540c55 : sal byte ptr [rsi + rax + 0x48], -0x75 ; add al, 0x24 ; pop rdx ; ret
0x000000000054b3af : sal byte ptr [rsi + rax + 0x48], -0x75 ; jg 0x54b3ed ; jmp rax
0x000000000054b3cf : sal byte ptr [rsi + rax + 0x48], -0x75 ; jg 0x54b40d ; jmp rax
0x0000000000488152 : sal byte ptr [rsi + rax + 0x5b], 0x41 ; pop rsi ; pop r15 ; ret
0x0000000000464134 : sal byte ptr [rsi + rax - 1], -0x38 ; mov dword ptr [rdi + 0x34], eax ; ret
0x000000000053a0bc : sal byte ptr [rsi + rcx + 0x48], -0x75 ; sub ecx, dword ptr [rax - 0x7d] ; ret
0x000000000042d769 : sal byte ptr [rsi + rcx + 0x49], -0x7f ; int 0x80
0x00000000004e09aa : sal byte ptr [rsi + rdi + 0x48], -0x7d ; ret
0x00000000005e51c0 : sal byte ptr [rsi - 0x23fffff], -0x15 ; jmp rax
0x0000000000599414 : sal byte ptr [rsi - 0x35], 0x40 ; scasb al, byte ptr [rdi] ; shl byte ptr [rdi + 0x31], -0x77 ; ret 0xc308
0x00000000005af7c8 : sal byte ptr [rsi], cl ; mov dr0, word ptr [rbp + 0x289cb633] ; ret
0x00000000004d0a67 : sal byte ptr [rsp + 0x48], -0x77 ; fisttp word ptr [rcx + rcx*4 - 0xa] ; call rax
0x0000000000565fea : sal byte ptr [rsp + rax + 0x31], -0x37 ; jmp rax
0x000000000049c9ed : sal byte ptr [rsp + rax + 0x41], 0x58 ; jmp rax
0x00000000004b88ca : sal byte ptr [rsp + rax + 0x41], 0x59 ; jmp rax
0x00000000005440de : sal byte ptr [rsp + rbx*2 + 0x48], -0x77 ; ret
0x00000000005e8e8c : sal ch, -0xf ; jmp rax
0x0000000000551957 : sal dh, 0x46 ; push rax ; and byte ptr [rdx + rax - 0x77], dh ; clc ; ret
0x0000000000551a32 : sal dh, 0x46 ; push rax ; sal byte ptr [rdx + rax - 0x77], -8 ; ret
0x000000000042be89 : sal dh, 0x47 ; add r14b, byte ptr [rax + rbp + 0x5a] ; ret
0x00000000005eabf5 : sal dh, cl ; call qword ptr [rax]
0x00000000005e9a6c : sal dl, 1 ; cmc ; call qword ptr [rax]
0x00000000004358ea : sal dword ptr [rax], 0x48 ; cmp edx, eax ; jb 0x4358e7 ; ret
0x00000000005acbd4 : sal dword ptr [rax], cl ; lahf ; add qword ptr [r8 + rcx*8 + 0x23], rdx ; ret 0x52a2
0x000000000046346a : sal dword ptr [rbx + rbx*2 + 0x48], -0x77 ; ret
0x00000000005d72c4 : sal dword ptr [rcx], -0x10 ; int1 ; or byte ptr [rax + 0x40], cl ; ret 0xc002
0x0000000000527177 : sal dword ptr [rcx], -0x21 ; ret
0x00000000005d6ac6 : sal dword ptr [rcx], 0x48 ; or al, al ; ret 0x2c2
0x0000000000515fb2 : sal dword ptr [rcx], cl ; ret
0x000000000044ae10 : sal dword ptr [rcx], cl ; rol ecx, 1 ; ret
0x000000000057dc47 : sal dword ptr [rdi + 0x57], 1 ; div bl ; test bl, 2 ; cli ; ret
0x0000000000530a75 : sal dword ptr [rdx - 0x18], 1 ; pop rbx ; pop r14 ; pop r15 ; ret
0x0000000000541099 : sal dword ptr [rdx - 0x3fce0008], cl ; pop rdx ; ret
0x00000000005b469f : sal eax, 0x78 ; mov ah, -0xc ; ret
0x00000000004549eb : sal ebx, 1 ; ret
0x0000000000454986 : sal ebx, cl ; ret
0x00000000005eb6f5 : sal edi, cl ; call qword ptr [rax]
0x000000000060e891 : sal edx, 1 ; call rsp
0x00000000005b605e : sal esi, -0x12 ; ret
0x0000000000432213 : salc ; add al, byte ptr [rax] ; add byte ptr [rax + 0x573213], bh ; ret
0x0000000000413de5 : salc ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000058aed0 : salc ; add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; ret 0x58
0x00000000005e97c1 : salc ; add al, byte ptr [rax] ; mov al, -0x52 ; cmc ; call rax
0x000000000049ed4b : salc ; add al, byte ptr [rax] ; xor eax, eax ; pop rbx ; ret
0x000000000055c935 : salc ; add byte ptr [rax], al ; add al, ch ; ret 0xf32a
0x000000000049fd02 : salc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000055751b : salc ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x6b ; call rbx
0x00000000005e5951 : salc ; add dword ptr [rax], eax ; jo 0x5e593e ; in al, dx ; jmp qword ptr [rax]
0x000000000048ed0b : salc ; add eax, dword ptr [rax] ; xor eax, eax ; pop rbx ; ret
0x0000000000461051 : salc ; and dword ptr [rdi + 0x20], esi ; ret
0x00000000004b7b51 : salc ; and dword ptr [rdi + 0x2c], esi ; ret
0x0000000000429f91 : salc ; and esi, dword ptr [rdi] ; mov dword ptr [rdi], esi ; mov eax, esi ; ret
0x000000000046184a : salc ; call r14
0x000000000043a5d7 : salc ; call rax
0x000000000059ddc6 : salc ; cmp byte ptr [r9 + rdi*8 - 0x19], dl ; mov ah, 0x2d ; ret
0x00000000004322c6 : salc ; cmp dword ptr [rdi], edx ; ret
0x0000000000542e9b : salc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000603119 : salc ; in al, dx ; call qword ptr [rbx]
0x000000000059f684 : salc ; int1 ; stosb byte ptr [rdi], al ; ret
0x00000000004a020d : salc ; je 0x4a0214 ; ret
0x000000000059cb66 : salc ; jl 0x59cb8f ; mov eax, esi ; xchg eax, edi ; or bl, byte ptr ss:[rcx] ; ret
0x00000000005a6188 : salc ; jle 0x5a612e ; ret 0x54c5
0x00000000005aa821 : salc ; lodsb al, byte ptr [rsi] ; or al, byte ptr [rsi - 0x57cb9399] ; clc ; ret 0xc375
0x000000000059763f : salc ; lodsb al, byte ptr [rsi] ; ret 0xd6fb
0x0000000000568036 : salc ; mov ch, -8 ; dec dword ptr [rax - 0x77] ; ret
0x000000000043a769 : salc ; mov edx, r8d ; call rax
0x00000000005ad98c : salc ; mov esp, 0xffe87f6a ; ret
0x00000000004098ed : salc ; mov rdx, rcx ; call rax
0x00000000004ab8d7 : salc ; mov rdx, rcx ; mov rcx, r8 ; pop r8 ; jmp rax
0x000000000046f807 : salc ; mov rdx, rcx ; pop rcx ; jmp rax
0x00000000005b092e : salc ; movsb byte ptr [rdi], byte ptr [rsi] ; in eax, dx ; ret
0x00000000004d0401 : salc ; movsxd rax, esi ; and qword ptr [rdi + 0x10], rax ; ret
0x00000000004d0431 : salc ; movsxd rax, esi ; and qword ptr [rdi + 0x70], rax ; ret
0x00000000005b7c6f : salc ; or al, 0xffffffffffffffaf ; lahf ; popfq ; xchg eax, ebp ; push rax ; in eax, dx ; ret
0x0000000000593d62 : salc ; out -0x2e, eax ; jo 0x593cfb ; ret 0x65aa
0x00000000005b528d : salc ; out -0x78, eax ; jge 0x5b5242 ; jns 0x5b522d ; ret
0x000000000060a459 : salc ; out dx, al ; jmp rsi
0x000000000047c0c1 : salc ; push rdi ; add byte ptr [rax + 0x29], cl ; ret 0x314c
0x000000000047c39c : salc ; push rdi ; add byte ptr [rax + 0x31], cl ; ret
0x000000000054d70a : salc ; push rsp ; add byte ptr [rax - 0x77], cl ; ret 0xdbe9
0x0000000000497126 : salc ; pushfq ; cld ; dec dword ptr [rax - 0x77] ; ret
0x0000000000541dd6 : salc ; ret
0x00000000004b0076 : salc ; ret 0x37
0x0000000000572a18 : salc ; ret 0x42
0x00000000005df2c0 : salc ; ret 0x55
0x00000000005953df : salc ; ret 0x9004
0x0000000000415c66 : salc ; ret 0xfffe
0x0000000000537204 : salc ; shl dword ptr [rdx - 0x36], -0x77 ; inc cl ; ret 0x441e
0x0000000000567fa6 : salc ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000599471 : salc ; stosb byte ptr [rdi], al ; xor dword ptr [rdi + 0x69af1543], esi ; ret
0x000000000043eadb : salc ; str word ptr [rax - 0x77] ; ret
0x00000000005a0bfb : salc ; sub byte ptr [rdx], -0x1e ; ret 0x60a
0x00000000005af607 : salc ; sub byte ptr [rsi + 0x4d352818], 0x65 ; ret
0x0000000000595571 : salc ; test dword ptr [rbx + 0x58], ebp ; ret 0xe466
0x0000000000594ae1 : salc ; xor esi, dword ptr [rdi + 0x51] ; pop rbp ; jg 0x594b23 ; ret
0x00000000005e6134 : sar ah, -0x13 ; call qword ptr [rax]
0x000000000049fb0e : sar al, 0x44 ; mov eax, eax ; pop rdx ; ret
0x00000000004d6bcd : sar al, cl ; dec dword ptr [rax - 0x77] ; ret
0x000000000059d6ff : sar al, cl ; push rcx ; ret 0x2a40
0x000000000055ce30 : sar bh, -1 ; mov rdi, r14 ; mov rsi, rax ; call rbx
0x00000000004bad22 : sar bh, 1 ; dec dword ptr [rax - 0x75] ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000459801 : sar bh, 1 ; dec dword ptr [rax - 0x77] ; ret
0x00000000004c643c : sar bl, -1 ; dec dword ptr [rax - 0x77] ; ret
0x00000000004e6841 : sar bl, 0 ; add byte ptr [rax], al ; add rax, rdx ; pop rdx ; ret
0x00000000004e6e5e : sar bl, 0 ; add byte ptr [rax], al ; add rax, rdx ; ret
0x000000000048f6c3 : sar byte ptr [r9], 0 ; ret
0x00000000005673da : sar byte ptr [rax + 0x26], 1 ; ret
0x000000000056747b : sar byte ptr [rax + 0xe], -1 ; ret
0x000000000046f82a : sar byte ptr [rax + 1], 1 ; pop rdx ; ret
0x00000000005a2044 : sar byte ptr [rbp + 0x7c], 1 ; ret
0x00000000005e52f0 : sar byte ptr [rbx + 0x3fb00001], -0x14 ; jmp rax
0x00000000004a59c1 : sar byte ptr [rbx + 0x58], 0 ; ret
0x00000000005e8230 : sar byte ptr [rbx + 2], 0 ; add byte ptr [rax], -0xf ; jmp rax
0x00000000005b605c : sar byte ptr [rcx + rax*8], -0xa ; out dx, al ; ret
0x0000000000443f0b : sar byte ptr [rcx + rax], -0x3e ; jmp 0x443f1f
0x000000000048f6c4 : sar byte ptr [rcx], 0 ; ret
0x000000000046b54d : sar byte ptr [rdi - 0x10], cl ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000472a06 : sar byte ptr [rdi - 0x29], 1 ; ret
0x0000000000497e7a : sar byte ptr [rdi - 0x76b70004], cl ; ret
0x00000000006081c0 : sar byte ptr [rdi], -0x12 ; call qword ptr [rcx]
0x00000000005ea34c : sar byte ptr [rdi], -0xa ; call qword ptr [rax]
0x000000000043f491 : sar byte ptr [rsi + 0x1f], 1 ; ret
0x0000000000500b1f : sar byte ptr [rsi + 0x23], -0x7d ; ret
0x000000000053aad0 : sar byte ptr [rsi + 0x45], -1 ; ret
0x000000000040c862 : sar byte ptr [rsi + 0xd], -0x77 ; ret 0x8948
0x0000000000425d4b : sar byte ptr [rsi + 2], 0x5b ; ret
0x000000000042b26f : sar byte ptr [rsi + 6], 0x5b ; pop r14 ; pop r15 ; ret
0x000000000059e20b : sar byte ptr [rsi + rbx*4], 1 ; ret 0x64d4
0x00000000005e51c4 : sar ch, -0x15 ; jmp rax
0x000000000055c5d0 : sar ch, 1 ; dec dword ptr [rax - 0x77] ; ret
0x00000000004fa3f7 : sar cl, cl ; dec dword ptr [rax - 0x7f] ; ret
0x000000000045297c : sar dh, -1 ; dec dword ptr [rax - 0x7d] ; ret 0xf06
0x00000000005e381c : sar dl, -0x18 ; jmp qword ptr [rax]
0x00000000005b2d13 : sar dword ptr [rax], -0x79 ; in eax, dx ; ret
0x00000000005ac689 : sar dword ptr [rbp + 0x250c8422], 1 ; ret 0xe942
0x00000000005b251a : sar dword ptr [rbp + 0x39], cl ; ret 0xf356
0x00000000005a8f58 : sar dword ptr [rbx - 0x36], cl ; push rcx ; pop rdx ; ret 0xd378
0x00000000005271ec : sar dword ptr [rcx + 0x6e], 0x41 ; adc ah, al ; ret
0x00000000005272bd : sar dword ptr [rcx + 0x6e], 0x41 ; adc al, -0x3c ; ret
0x0000000000526f79 : sar dword ptr [rcx + 0x6e], 0x41 ; add al, -0x3c ; ret
0x0000000000527537 : sar dword ptr [rcx + 0x6e], 0x41 ; and ah, al ; ret
0x0000000000527607 : sar dword ptr [rcx + 0x6e], 0x41 ; and al, 0xffffffffffffffc4 ; ret
0x0000000000527a1c : sar dword ptr [rcx + 0x6e], 0x41 ; cmp ah, al ; ret
0x000000000052704a : sar dword ptr [rcx + 0x6e], 0x41 ; or ah, al ; ret
0x000000000052711b : sar dword ptr [rcx + 0x6e], 0x41 ; or al, 0xffffffffffffffc4 ; ret
0x000000000052738e : sar dword ptr [rcx + 0x6e], 0x41 ; sbb ah, al ; ret
0x000000000052745f : sar dword ptr [rcx + 0x6e], 0x41 ; sbb al, -0x3c ; ret
0x00000000005276d8 : sar dword ptr [rcx + 0x6e], 0x41 ; sub ah, al ; ret
0x00000000005277a9 : sar dword ptr [rcx + 0x6e], 0x41 ; sub al, -0x3c ; ret
0x000000000052787a : sar dword ptr [rcx + 0x6e], 0x41 ; xor ah, al ; ret
0x000000000052794b : sar dword ptr [rcx + 0x6e], 0x41 ; xor al, 0xffffffffffffffc4 ; ret
0x00000000005293ca : sar dword ptr [rcx + 0x6e], 0x51 ; adc ah, al ; ret
0x00000000005294bf : sar dword ptr [rcx + 0x6e], 0x51 ; adc al, -0x3c ; ret
0x00000000005290e8 : sar dword ptr [rcx + 0x6e], 0x51 ; add al, -0x3c ; ret
0x00000000005297a8 : sar dword ptr [rcx + 0x6e], 0x51 ; and ah, al ; ret
0x000000000052989e : sar dword ptr [rcx + 0x6e], 0x51 ; and al, 0xffffffffffffffc4 ; ret
0x0000000000529d6b : sar dword ptr [rcx + 0x6e], 0x51 ; cmp ah, al ; ret
0x00000000005291de : sar dword ptr [rcx + 0x6e], 0x51 ; or ah, al ; ret
0x00000000005292d4 : sar dword ptr [rcx + 0x6e], 0x51 ; or al, 0xffffffffffffffc4 ; ret
0x00000000005295b5 : sar dword ptr [rcx + 0x6e], 0x51 ; sbb ah, al ; ret
0x00000000005296ab : sar dword ptr [rcx + 0x6e], 0x51 ; sbb al, -0x3c ; ret
0x0000000000529994 : sar dword ptr [rcx + 0x6e], 0x51 ; sub ah, al ; ret
0x0000000000529a8a : sar dword ptr [rcx + 0x6e], 0x51 ; sub al, -0x3c ; ret
0x0000000000529b80 : sar dword ptr [rcx + 0x6e], 0x51 ; xor ah, al ; ret
0x0000000000529c75 : sar dword ptr [rcx + 0x6e], 0x51 ; xor al, 0xffffffffffffffc4 ; ret
0x0000000000527248 : sar dword ptr [rcx], -0x21 ; ret 0xc1c4
0x0000000000438475 : sar dword ptr [rdx + 0x1fc], 0x29 ; ret 0xc031
0x000000000044c9fe : sar dword ptr [rdx + 0x6f], 0x5a ; xor ah, al ; ret 0x79
0x000000000059bda6 : sar dword ptr [rsi - 0xb73ffee], 1 ; ret
0x00000000005b50fd : sar dword ptr [rsi], 1 ; ret
0x00000000004ece52 : sar eax, 1 ; dec dword ptr [rax - 0x77] ; ret
0x000000000040237e : sar eax, 1 ; jne 0x402389 ; pop rbp ; ret
0x0000000000565e37 : sar eax, 3 ; add eax, ebp ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004967e7 : sar eax, 3 ; pop rdx ; ret
0x0000000000456a39 : sar eax, cl ; or byte ptr [rax], al ; pop rbx ; ret
0x00000000004dae9b : sar ebp, -1 ; ret
0x00000000005aef2b : sar ebp, cl ; ret 0x488a
0x0000000000467f3c : sar edi, -1 ; mov rdi, rbp ; call 0x4641c8
0x00000000004596f0 : sar edi, 1 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000404cc1 : sar edx, 3 ; inc rdx ; jmp 0x404ce4
0x0000000000505844 : sar esi, -0x7b ; leave ; jns 0x505837 ; pop rbx ; ret
0x00000000004dd38d : sar esi, 1 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000456570 : sar esi, 8 ; inc eax ; test esi, esi ; jg 0x456579 ; ret
0x000000000054c845 : sar esi, cl ; dec dword ptr [rax - 0x77] ; ret
0x00000000004ece51 : sar r8, 1 ; dec dword ptr [rax - 0x77] ; ret
0x000000000040237d : sar rax, 1 ; jne 0x40238a ; pop rbp ; ret
0x0000000000404cc0 : sar rdx, 3 ; inc rdx ; jmp 0x404ce5
0x00000000006170c8 : sbb ah, ah ; hlt ; call qword ptr [rsi]
0x0000000000527392 : sbb ah, al ; ret
0x000000000052738c : sbb ah, al ; sar dword ptr [rcx + 0x6e], 0x41 ; sbb ah, al ; ret
0x00000000005295b3 : sbb ah, al ; sar dword ptr [rcx + 0x6e], 0x51 ; sbb ah, al ; ret
0x0000000000597d39 : sbb ah, bh ; ret 0x4089
0x00000000005e335d : sbb al, -0x18 ; call qword ptr [rax]
0x000000000042a8c7 : sbb al, -0x18 ; ret
0x000000000059d1ad : sbb al, -0x24 ; push rbp ; mov dl, -0x1f ; ret
0x0000000000594ae0 : sbb al, -0x2a ; xor esi, dword ptr [rdi + 0x51] ; pop rbp ; jg 0x594b24 ; ret
0x00000000004af050 : sbb al, -0x2d ; add dword ptr [rax], eax ; xor eax, eax ; pop rdx ; ret
0x00000000005b5863 : sbb al, -0x3b ; ret
0x0000000000618624 : sbb al, -0x3c ; add al, byte ptr [rax] ; sub byte ptr [rdx], al ; cmc ; jmp qword ptr [rdi]
0x0000000000527463 : sbb al, -0x3c ; ret
0x000000000052745d : sbb al, -0x3c ; sar dword ptr [rcx + 0x6e], 0x41 ; sbb al, -0x3c ; ret
0x00000000005296a9 : sbb al, -0x3c ; sar dword ptr [rcx + 0x6e], 0x51 ; sbb al, -0x3c ; ret
0x00000000005df2f8 : sbb al, -0x3d ; push rbp ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi], ah ; ret
0x00000000004330e7 : sbb al, -0x48 ; stc ; xorps xmm0, xmmword ptr [rax] ; ret
0x0000000000617124 : sbb al, -0x51 ; add al, byte ptr [rax] ; cmp ah, ah ; hlt ; call qword ptr [rsi]
0x000000000044d46e : sbb al, -0x55 ; pop rbx ; ret 0x3956
0x000000000047c399 : sbb al, -0x63 ; salc ; push rdi ; add byte ptr [rax + 0x31], cl ; ret
0x00000000005f5124 : sbb al, -0x71 ; add byte ptr [rax], al ; js 0x5f516d ; out -1, eax ; ret
0x000000000045ed3d : sbb al, -0x77 ; ret 0xeac1
0x0000000000610931 : sbb al, -0xd ; call rsp
0x00000000004a8f38 : sbb al, -4 ; dec dword ptr [rax - 0x77] ; ret
0x00000000005ede95 : sbb al, 0 ; add al, bh ; mov bh, -0x1e ; jmp qword ptr [rdx]
0x00000000005ede7d : sbb al, 0 ; add al, dh ; mov bh, -0x1e ; jmp qword ptr [rax]
0x0000000000498bd3 : sbb al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005f85f0 : sbb al, 0 ; add byte ptr [rax], al ; in al, dx ; ret
0x000000000042c1d8 : sbb al, 0 ; add byte ptr [rax], al ; jmp rax
0x00000000005306a8 : sbb al, 0 ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x00000000005fdb90 : sbb al, 0 ; add byte ptr [rax], al ; mov word ptr [rcx], ds ; add dword ptr [rax], eax ; ret
0x0000000000436140 : sbb al, 0 ; add byte ptr [rax], al ; ret
0x00000000005f8598 : sbb al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; ret
0x0000000000608498 : sbb al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; ret 1
0x00000000005063dd : sbb al, 0 ; ror byte ptr [rbx - 0x7ebe83a2], 1 ; ret 0x2d9
0x00000000005065c4 : sbb al, 0 ; ror byte ptr [rbx - 0x7ebee3a2], 1 ; ret 0x4b60
0x0000000000506842 : sbb al, 0 ; ror dword ptr [rbx - 0x7ebeb7ba], cl ; ret
0x00000000005ac7ff : sbb al, 0x1e ; add ah, byte ptr [rcx + rbp*8 - 0x74] ; lodsd eax, dword ptr [rsi] ; ret 0x82b3
0x00000000005a8bbe : sbb al, 0x1e ; ret
0x0000000000408ae2 : sbb al, 0x24 ; jmp 0x408af0
0x00000000004ae018 : sbb al, 0x24 ; mov rdi, rbx ; mov rsi, rcx ; mov edx, eax ; call rbp
0x000000000057dd53 : sbb al, 0x2c ; sbb esi, dword ptr [rdx - 0xa] ; call rdx
0x00000000004d2b0f : sbb al, 0x31 ; ret
0x000000000059968d : sbb al, 0x34 ; ret
0x00000000005a43b3 : sbb al, 0x36 ; ret
0x00000000004b7330 : sbb al, 0x38 ; sti ; dec dword ptr [rax - 0x77] ; ret
0x0000000000600124 : sbb al, 0x3f ; add dword ptr [rax], eax ; js 0x6000c4 ; jmp 0x600132
0x0000000000594e13 : sbb al, 0x47 ; ret
0x00000000004978ee : sbb al, 0x48 ; lea ebx, dword ptr [rsp + 0x10] ; mov rdi, rbx ; call rcx
0x0000000000487850 : sbb al, 0x4b ; add al, 0 ; xor eax, eax ; pop rbx ; ret
0x00000000005ad98a : sbb al, 0x55 ; salc ; mov esp, 0xffe87f6a ; ret
0x0000000000612524 : sbb al, 0x63 ; add al, byte ptr [rax] ; pop rax ; mov esi, ebx ; jmp rdi
0x00000000005a17a3 : sbb al, 0x66 ; out dx, al ; push rax ; ret
0x00000000005aeb56 : sbb al, 0x6d ; or byte ptr [rdi], cl ; ret
0x0000000000594ad8 : sbb al, 0x70 ; and ah, byte ptr [rsi + rdi*4 - 0x15] ; ret
0x00000000005f3324 : sbb al, 0x71 ; add byte ptr [rax], al ; sub byte ptr [rdi - 0x1a], al ; jmp rax
0x0000000000441bd0 : sbb al, 0x7a ; str word ptr [rax - 0x77] ; ret
0x00000000005f4124 : sbb al, 0x7f ; add byte ptr [rax], al ; pop rax ; ret
0x0000000000487fc5 : sbb al, 0xb ; add byte ptr [rcx], bh ; ret
0x00000000005ec324 : sbb al, 1 ; add byte ptr [rax], al ; sbb byte ptr [rbx - 0x1f], ah ; call qword ptr [rax]
0x00000000005ec424 : sbb al, 2 ; add byte ptr [rax], al ; sbb byte ptr [rdx - 0x1f], ch ; jmp qword ptr [rsi]
0x00000000005eaab1 : sbb al, 3 ; add al, ah ; ret
0x00000000005eaaa1 : sbb al, 3 ; add al, al ; ret
0x00000000005eaab9 : sbb al, 3 ; add al, dh ; ret
0x00000000005eaaa9 : sbb al, 3 ; add al, dl ; ret
0x00000000005d68e7 : sbb al, ah ; ret 0x6c6
0x0000000000599804 : sbb al, byte ptr [rax + rdx + 0x43b03427] ; ret 0xa613
0x0000000000436132 : sbb al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000059778b : sbb al, byte ptr [rbx - 4] ; mov eax, 0x32142f94 ; ret
0x000000000054ac44 : sbb al, byte ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000059b4d7 : sbb al, byte ptr [rcx] ; int 0x80
0x00000000004f3399 : sbb al, byte ptr [rdi] ; add byte ptr [rax + 1], bh ; pop rdx ; ret
0x00000000005e69d9 : sbb al, byte ptr [rdx] ; add byte ptr [rax - 0x13], ah ; out dx, al ; call rax
0x000000000043f3db : sbb al, byte ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000417d8b : sbb al, ch ; call qword ptr [rbx]
0x000000000053b264 : sbb al, ch ; fild word ptr es:[rcx] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000509dd2 : sbb al, ch ; mov eax, 0x83fffc65 ; ret
0x00000000004eb55e : sbb al, ch ; mov esi, fs ; add al, 0 ; pop rdx ; ret
0x0000000000426f4c : sbb al, ch ; mov gs, word ptr [rcx + rdx] ; add byte ptr [rcx], bh ; ret
0x00000000004c7f4c : sbb al, ch ; out dx, al ; ret
0x000000000045a01c : sbb al, ch ; out dx, al ; ret 8
0x0000000000551447 : sbb al, ch ; ret
0x00000000004fd494 : sbb al, ch ; ret 0xfffe
0x00000000004fd3cd : sbb al, ch ; std ; ret 0xfffe
0x0000000000498244 : sbb al, ch ; sub edi, ebp ; dec dword ptr [rax - 0x77] ; ret
0x00000000005d68e6 : sbb al, spl ; ret 0x6c6
0x000000000044024e : sbb bh, ah ; dec dword ptr [rax - 0x77] ; ret 0x894c
0x00000000006178a8 : sbb bh, ah ; hlt ; call qword ptr [rdx]
0x00000000005a4d8d : sbb bh, al ; ret
0x0000000000426d7f : sbb bh, bh ; ret
0x0000000000432510 : sbb bh, byte ptr [rax + 0x573420] ; ret
0x00000000005a2301 : sbb bh, byte ptr [rcx - 0x47] ; ret
0x00000000005a2300 : sbb bh, byte ptr es:[rcx - 0x47] ; ret
0x00000000005a294e : sbb bh, ch ; cmp byte ptr [rax - 0x2b], bh ; push rdi ; ret 0xb9d9
0x00000000005991d6 : sbb bh, ch ; cmp edx, edi ; ret
0x00000000005fe2b0 : sbb bl, -0x16 ; call qword ptr [rbx]
0x00000000005d6dcf : sbb bl, ah ; ret
0x0000000000572a78 : sbb bl, al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdx], ah ; ret
0x00000000004f4c00 : sbb bl, al ; mov rax, qword ptr [rdi + 0x20] ; ret
0x00000000005b57f9 : sbb bl, bh ; xchg eax, ebp ; mov cl, ah ; int 0xc3
0x00000000005d70e5 : sbb bl, byte ptr [rax + 0x52] ; mov byte ptr [rsi], -0x3c ; ret 0x3848
0x00000000005d7624 : sbb bl, byte ptr [rax + 0x52] ; xor sil, al ; ret 0x9012
0x00000000005d6e26 : sbb bl, byte ptr [rax - 0xe] ; ret 0xf032
0x00000000005b7166 : sbb bl, byte ptr [rcx] ; cmp eax, dword ptr [rdx] ; xchg eax, esi ; xor dword ptr [rcx], 0x58 ; ret
0x00000000005b0766 : sbb bl, byte ptr [rdi] ; jnp 0x5b0777 ; ret
0x00000000004f82a0 : sbb bl, ch ; add ecx, dword ptr [rax - 1] ; ret
0x0000000000610039 : sbb bl, dh ; call qword ptr [rax]
0x00000000004be22a : sbb bl, dh ; ret
0x0000000000606f38 : sbb bpl, sil ; call qword ptr [rcx]
0x00000000005605e5 : sbb byte ptr [r10], r8b ; ret
0x000000000048c277 : sbb byte ptr [r11 + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000462a8c : sbb byte ptr [r8 + 0x29], r9b ; ret 0x1d75
0x000000000053c84a : sbb byte ptr [r8 + 0x39], r9b ; ret
0x00000000004ecd00 : sbb byte ptr [r8 + 0xf], cl ; ret
0x000000000056057c : sbb byte ptr [r8 + 1], r15b ; ret
0x000000000046389f : sbb byte ptr [r8 - 0x77], cl ; dec byte ptr [rbp - 0x77] ; clc ; call rax
0x0000000000404cbb : sbb byte ptr [r8 - 0x77], r9b ; ret 0xc148
0x00000000004cbb7b : sbb byte ptr [r8], r8b ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000054b3fe : sbb byte ptr [r9 + r9*4 + 0xf], r8b ; ret
0x00000000004cbace : sbb byte ptr [r9], r8b ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000462a8d : sbb byte ptr [rax + 0x29], cl ; ret 0x1d75
0x000000000053c84b : sbb byte ptr [rax + 0x39], cl ; ret
0x0000000000432909 : sbb byte ptr [rax + 0x574042], bh ; ret
0x000000000055480d : sbb byte ptr [rax + 0x75], al ; fisttp word ptr [rax - 0x7b] ; fisttp dword ptr [rbp - 0x77] ; ret
0x00000000004ecd01 : sbb byte ptr [rax + 0xf], cl ; ret
0x0000000000541493 : sbb byte ptr [rax + 1], bh ; ret
0x0000000000561e0e : sbb byte ptr [rax + 1], cl ; ret
0x0000000000504e8c : sbb byte ptr [rax + 9], cl ; ret 0x3148
0x000000000048aab9 : sbb byte ptr [rax + rax], al ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004a59d1 : sbb byte ptr [rax + rbx*2], bh ; ret
0x00000000005f1088 : sbb byte ptr [rax - 0x1c], dl ; call qword ptr [rbx]
0x00000000005b7a6b : sbb byte ptr [rax - 0x6a], ch ; outsb dx, byte ptr [rsi] ; mov ecx, 0xb1a8908e ; ret 0xf0ad
0x000000000055a0ac : sbb byte ptr [rax - 0x73], cl ; and al, 0x20 ; call rbx
0x00000000004cc0a5 : sbb byte ptr [rax - 0x75], cl ; adc byte ptr [r8 - 0x7d], cl ; ret
0x0000000000558725 : sbb byte ptr [rax - 0x75], cl ; cmp ebp, eax ; ret 0xee8e
0x0000000000463b28 : sbb byte ptr [rax - 0x77], cl ; dec byte ptr [rax - 0x77] ; ret 0xe958
0x00000000004638a0 : sbb byte ptr [rax - 0x77], cl ; dec byte ptr [rbp - 0x77] ; clc ; call rax
0x000000000050b5da : sbb byte ptr [rax - 0x77], cl ; ret
0x0000000000559150 : sbb byte ptr [rax - 0x77], cl ; ret 0x27e8
0x00000000004ea812 : sbb byte ptr [rax - 0x77], cl ; ret 0x65e9
0x00000000005589b7 : sbb byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000050c7bc : sbb byte ptr [rax - 0x77], cl ; ret 0x894d
0x0000000000404cbc : sbb byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000004c9b76 : sbb byte ptr [rax - 0x77], cl ; ret 0xd1e8
0x000000000048e942 : sbb byte ptr [rax - 0x7b], cl ; leave ; je 0x48e909 ; mov rdi, rbx ; call rcx
0x0000000000565fe7 : sbb byte ptr [rax - 0x7b], cl ; sal byte ptr [rsp + rax + 0x31], -0x37 ; jmp rax
0x0000000000568c44 : sbb byte ptr [rax - 0x7cb6f8bb], cl ; ret
0x00000000004c7bcb : sbb byte ptr [rax - 0x7cb7f8a6], cl ; ret 0x4808
0x00000000004c7b45 : sbb byte ptr [rax - 0x7cb7f8b6], cl ; ret 0x4807
0x000000000047eaa4 : sbb byte ptr [rax - 0x7cb7f8bd], cl ; ret
0x00000000004f5253 : sbb byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, ebp ; ret
0x00000000004780f6 : sbb byte ptr [rax - 0x7d], cl ; clc ; sbb eax, 0xb8bf1972 ; ret
0x0000000000487372 : sbb byte ptr [rax - 0x7d], cl ; ret
0x000000000046c249 : sbb byte ptr [rax - 0x7d], cl ; ret 0x3904
0x00000000004d179d : sbb byte ptr [rax - 1], cl ; ret
0x000000000045abdf : sbb byte ptr [rax - 1], cl ; ret 0x1bf
0x0000000000505753 : sbb byte ptr [rax - 1], cl ; ret 0xff48
0x00000000004cbb7c : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000058d65c : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000004850b9 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x4850d5
0x000000000043617b : sbb byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000005065d9 : sbb byte ptr [rax], al ; fld dword ptr [rcx - 0x3f] ; ret 0x4510
0x0000000000506dd4 : sbb byte ptr [rax], al ; ret 0x8a44
0x0000000000506a66 : sbb byte ptr [rax], al ; ror byte ptr [rbx - 0x7ebe93a2], 1 ; ret 0x4314
0x0000000000505e55 : sbb byte ptr [rax], al ; ror byte ptr [rbx - 0x7ebee3a2], 1 ; ret 0x4613
0x00000000005060ed : sbb byte ptr [rax], al ; ror dword ptr [rbx - 0x7ebeb7ba], cl ; ret
0x0000000000442fb2 : sbb byte ptr [rax], cl ; ret
0x000000000056222a : sbb byte ptr [rbp + 0x31], al ; ror byte ptr [rax + 1], cl ; ret
0x00000000005aa080 : sbb byte ptr [rbp + 0x49a1cfe8], 0x6c ; ret 0x8371
0x0000000000505e6a : sbb byte ptr [rbp + 1], al ; loop 0x505e77 ; fld dword ptr [rcx - 0x3f] ; ret 0x4511
0x00000000004f32c1 : sbb byte ptr [rbp + rcx*4 + 0x68], cl ; or byte ptr [rax - 0x77], cl ; ret 0x72e8
0x0000000000595148 : sbb byte ptr [rbp + rcx*8 - 0x45], ch ; ret
0x00000000005aed64 : sbb byte ptr [rbp - 0x6cf590b4], dh ; cmc ; ret 0x2d31
0x00000000004455dd : sbb byte ptr [rbp - 0x77], cl ; fld qword ptr [rcx - 0x3f] ; ret
0x000000000048241f : sbb byte ptr [rbp - 0x77], cl ; ret
0x0000000000484258 : sbb byte ptr [rbp - 0x7b], cl ; dec dword ptr [rdi] ; xchg eax, ebp ; ret
0x00000000004042f6 : sbb byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000042b470 : sbb byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; ret
0x000000000048c278 : sbb byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000406359 : sbb byte ptr [rbx + 0x41], bl ; pop rsi ; ret
0x0000000000417e5e : sbb byte ptr [rbx + 0x41], bl ; pop rsp ; pop r14 ; pop r15 ; jmp rcx
0x0000000000417e6b : sbb byte ptr [rbx + 0x41], bl ; pop rsp ; pop r14 ; pop r15 ; ret
0x0000000000408706 : sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000057dd3d : sbb byte ptr [rbx + 0x60e2db45], -0x42 ; add dword ptr [rcx], esi ; ret 0x5ca9
0x00000000005b6326 : sbb byte ptr [rbx + 0x6c], dh ; ret 0xeeb6
0x000000000049daf4 : sbb byte ptr [rbx + 5], bl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005b4c8e : sbb byte ptr [rbx + 7], ch ; fidivr word ptr [rip + 0x25c65510] ; ret 0xf7ea
0x00000000005af262 : sbb byte ptr [rbx + rcx*8 + 9], bl ; ret 0xcc74
0x0000000000487fc4 : sbb byte ptr [rbx + rcx], bl ; add byte ptr [rcx], bh ; ret
0x00000000005ec328 : sbb byte ptr [rbx - 0x1f], ah ; call qword ptr [rax]
0x000000000045ed39 : sbb byte ptr [rbx - 0x76e3dbb4], cl ; ret 0xeac1
0x00000000005eaa58 : sbb byte ptr [rbx], 3 ; add byte ptr [rax], dh ; ret
0x00000000005ea9b1 : sbb byte ptr [rbx], al ; add al, ah ; mov bh, -0xa ; call rax
0x00000000004d2aff : sbb byte ptr [rcx + 0x31], al ; ret
0x00000000004bdc65 : sbb byte ptr [rcx + 0x5d], al ; pop r12 ; ret
0x00000000005afccd : sbb byte ptr [rcx + 0x7f62a6fd], dh ; ret 0x8b90
0x0000000000561e90 : sbb byte ptr [rcx + 1], cl ; ret 0x1148
0x000000000047e505 : sbb byte ptr [rcx + 9], al ; ret 0xf41
0x000000000054b3ff : sbb byte ptr [rcx + rcx*4 + 0xf], al ; ret
0x00000000004c5e26 : sbb byte ptr [rcx + rcx*4 - 0x1e], cl ; call rax
0x00000000004f8f8e : sbb byte ptr [rcx + rcx*4 - 1], cl ; call r14
0x000000000045f122 : sbb byte ptr [rcx + rcx*4 - 6], cl ; mov rcx, qword ptr [rsp + 0x10] ; call rax
0x0000000000429eec : sbb byte ptr [rcx - 0x3b7cb718], cl ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000004e3d51 : sbb byte ptr [rcx - 0x3ea57d87], bl ; ret
0x0000000000541954 : sbb byte ptr [rcx - 0x76b70008], dl ; ret
0x00000000004fc084 : sbb byte ptr [rcx - 0x76b7000b], ch ; ret
0x0000000000505e20 : sbb byte ptr [rcx - 0x7f], al ; ret
0x0000000000505e1f : sbb byte ptr [rcx - 0x7f], r8b ; ret
0x0000000000436390 : sbb byte ptr [rcx - 0xa], al ; ret
0x00000000004e236a : sbb byte ptr [rcx - 1], al ; ret 0x8341
0x000000000056225f : sbb byte ptr [rcx - 9], cl ; and dword ptr [rax + 1], ecx ; ret
0x000000000056225e : sbb byte ptr [rcx - 9], r9b ; and dword ptr [rax + 1], ecx ; ret
0x00000000004d1175 : sbb byte ptr [rcx], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004cbacf : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000042c380 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; mov rax, rdx ; pop rdx ; ret
0x0000000000500216 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; mov rdi, r15 ; call rax
0x00000000004c77ce : sbb byte ptr [rcx], cl ; ret
0x0000000000568bd7 : sbb byte ptr [rcx], cl ; ret 0x3144
0x000000000047fc06 : sbb byte ptr [rcx], cl ; ret 0x4c89
0x000000000049383f : sbb byte ptr [rcx], cl ; ret 0x5489
0x00000000005176fc : sbb byte ptr [rcx], cl ; ret 0xd089
0x000000000047e77f : sbb byte ptr [rcx], cl ; ret 0xf131
0x0000000000492f66 : sbb byte ptr [rcx], cl ; ret 0xf41
0x000000000049301f : sbb byte ptr [rcx], cl ; ret 0xf931
0x0000000000418915 : sbb byte ptr [rcx], dh ; imul al ; ret
0x00000000005af8d0 : sbb byte ptr [rdi + 0x22], dl ; jle 0x5af8da ; ret
0x00000000005b5ae7 : sbb byte ptr [rdi + 0xcba7548], ah ; ret 0x1595
0x000000000059ebe7 : sbb byte ptr [rdi - 0x5130111d], dl ; pop rdi ; ret
0x00000000005d74eb : sbb byte ptr [rdi], 0x1c ; adc ecx, dword ptr [rdi] ; or cl, al ; ret 0x2cca
0x0000000000429f2e : sbb byte ptr [rdi], cl ; adc dword ptr [rax + 8], eax ; pop rdx ; ret
0x00000000005ada8d : sbb byte ptr [rdx + 0x31be70df], bh ; ret
0x000000000058cc7e : sbb byte ptr [rdx + 0x78], bl ; call qword ptr [rdx]
0x00000000005ec428 : sbb byte ptr [rdx - 0x1f], ch ; jmp qword ptr [rsi]
0x00000000004e28f0 : sbb byte ptr [rdx - 0x43], dh ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000514d34 : sbb byte ptr [rdx - 0x73], al ; mov word ptr [rax], ss ; lea ecx, dword ptr [rcx + rdx*4] ; ret
0x000000000059437b : sbb byte ptr [rdx], ah ; ret 0xaf1
0x000000000042ead3 : sbb byte ptr [rdx], al ; add byte ptr [rax], al ; ret
0x00000000005e6961 : sbb byte ptr [rdx], al ; add byte ptr [rax], dl ; in al, -0x12 ; call qword ptr [rax]
0x00000000005605e6 : sbb byte ptr [rdx], al ; ret
0x0000000000603998 : sbb byte ptr [rdx], dl ; in eax, dx ; jmp qword ptr [rcx]
0x00000000005d75cd : sbb byte ptr [rdx], dl ; or ah, byte ptr [rbx] ; loopne 0x5d75bc ; ret
0x0000000000432872 : sbb byte ptr [rsi], ch ; push rdi ; add byte ptr [rax + 0x573e2e], bh ; ret
0x0000000000486b14 : sbb byte ptr [rsi], dl ; add byte ptr [rax], al ; pop rdx ; ret
0x00000000005aa07f : sbb byte ptr ss:[rbp + 0x49a1cfe8], 0x6c ; ret 0x8371
0x0000000000593db1 : sbb ch, ah ; sub byte ptr [rax + 0x6a], -0x31 ; ret 0xf3f4
0x00000000005e3355 : sbb ch, al ; jmp rax
0x000000000053209e : sbb ch, byte ptr [rax - 0x2f07686f] ; jo 0x53203a ; ret 0xbe30
0x000000000052b83e : sbb ch, byte ptr [rax - 0x3db47490] ; jo 0x52b7da ; ret 0x8b70
0x000000000052b83a : sbb ch, byte ptr [rax - 0x57e599b5] ; jo 0x52b7d6 ; ret 0x8b70
0x00000000005e5ab5 : sbb ch, ch ; call rax
0x00000000005aa33b : sbb ch, ch ; push rbp ; ret 0x89e7
0x0000000000457f32 : sbb ch, cl ; ret 0
0x0000000000606f39 : sbb ch, dh ; call qword ptr [rcx]
0x00000000005e6175 : sbb ch, dh ; jmp qword ptr [rax]
0x00000000005ad64a : sbb ch, dh ; push 0x41 ; std ; ret
0x0000000000560299 : sbb ch, dl ; dec dword ptr [rax - 0x77] ; ret
0x00000000005b3f3e : sbb cl, al ; call qword ptr [rdx]
0x00000000004b2949 : sbb cl, byte ptr [rax - 0x7d] ; ret
0x0000000000538ef9 : sbb cl, byte ptr [rax - 1] ; ret 0x1b3
0x000000000053979a : sbb cl, byte ptr [rax - 1] ; ret 0x9066
0x0000000000538f1f : sbb cl, byte ptr [rax - 1] ; ret 0xb540
0x00000000004d997b : sbb cl, byte ptr [rax - 1] ; ret 0xc9ff
0x0000000000538f47 : sbb cl, byte ptr [rax - 1] ; ret 0xe683
0x0000000000512714 : sbb cl, byte ptr [rcx + 0x21] ; ret 0x894c
0x00000000005484d3 : sbb cl, byte ptr [rcx + rcx*4 - 9] ; call rax
0x000000000059de05 : sbb cl, byte ptr [rdi] ; ret 0x22b3
0x00000000005a91eb : sbb cl, dh ; clc ; ret
0x00000000005eaf45 : sbb dh, bh ; call rax
0x00000000005554e6 : sbb dh, bl ; ret
0x000000000057d398 : sbb dh, byte ptr [rbp - 0x6f] ; ret 0x5669
0x0000000000596834 : sbb dh, byte ptr [rdi + rdi*8 - 0x939d122] ; ret 0xf6c2
0x00000000005e831d : sbb dh, cl ; call qword ptr [rax]
0x00000000005e830d : sbb dh, cl ; jmp rax
0x000000000059c1ee : sbb dh, cl ; ret 0x4c24
0x0000000000421276 : sbb dh, dh ; ret
0x00000000005df228 : sbb dl, al ; push rbp ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdx], ah ; ret 0x55
0x0000000000593c40 : sbb dl, byte ptr [rdi] ; mov word ptr [rax - 0x30], cs ; ret 0xfb9
0x0000000000446e10 : sbb dl, byte ptr [rdi] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000059fcf8 : sbb dl, byte ptr [rdi] ; ret 0xaaca
0x00000000005604a9 : sbb dl, ch ; dec dword ptr [rax - 0x77] ; ret
0x000000000046b845 : sbb dword ptr [rax + 0x31], ecx ; ret
0x00000000005783a7 : sbb dword ptr [rax + 0x79], esp ; ret 0x819
0x00000000004d022b : sbb dword ptr [rax + 5], edi ; pop rbx ; ret
0x0000000000443893 : sbb dword ptr [rax - 0x3fce0001], edi ; ret
0x000000000042611a : sbb dword ptr [rax - 0x7d], ecx ; ret
0x000000000040a64e : sbb dword ptr [rax - 1], ecx ; ret
0x0000000000466408 : sbb dword ptr [rax - 1], ecx ; ret 0x14c
0x00000000004da378 : sbb dword ptr [rax - 1], ecx ; ret 0xff48
0x0000000000436181 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000005b2d0f : sbb dword ptr [rax], edi ; mov bl, 4 ; sar dword ptr [rax], -0x79 ; in eax, dx ; ret
0x000000000055045c : sbb dword ptr [rbx + 0x41], 0x5c ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000005b3654 : sbb dword ptr [rbx], ebp ; add esi, dword ptr [rbx + 0x56] ; and byte ptr [rbp + 9], dh ; ret
0x00000000005b7167 : sbb dword ptr [rbx], edi ; add dl, byte ptr [rsi + 0x47583183] ; ret
0x000000000057d345 : sbb dword ptr [rcx + 0x16], edx ; mov edi, 0x1380af70 ; ret
0x00000000004569e9 : sbb dword ptr [rcx + 7], 0 ; xor eax, eax ; pop rbx ; ret
0x0000000000594562 : sbb dword ptr [rcx + rax*4 + 0x5d], esi ; div ecx ; ret 0xa995
0x00000000004814b8 : sbb dword ptr [rcx - 0x7d], eax ; call qword ptr [rax]
0x00000000005b044e : sbb dword ptr [rcx], esp ; ret
0x00000000005a4984 : sbb dword ptr [rdi + 0x20], ecx ; ret
0x00000000005add47 : sbb dword ptr [rdi + 1], esi ; out -6, al ; ret
0x00000000005b6234 : sbb dword ptr [rdi - 0x167f26ca], edi ; ret
0x00000000005b585f : sbb dword ptr [rdi - 0x3ae3b2cc], ebx ; ret
0x00000000004b4779 : sbb dword ptr [rdi], 0 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005aac40 : sbb dword ptr [rdi], esp ; ret 0xcac0
0x000000000059ac72 : sbb dword ptr [rdx + 9], edi ; int1 ; lodsd eax, dword ptr [rsi] ; xlatb ; ret 0x8a8d
0x0000000000578d7f : sbb dword ptr [rdx + rcx*4 + 0x6ae402fb], ecx ; ret
0x00000000004e5c5b : sbb dword ptr [rdx], edx ; xor al, 0 ; mov eax, 1 ; ret
0x00000000005a2ffa : sbb dword ptr [rsi + 0x12], esp ; push rsp ; movsb byte ptr [rdi], byte ptr [rsi] ; movsd dword ptr [rdi], dword ptr [rsi] ; pop rdx ; loop 0x5a306c ; ret
0x0000000000577f1c : sbb dword ptr [rsi - 0x604b7312], eax ; outsd dx, dword ptr [rsi] ; ret
0x00000000004daa03 : sbb dword ptr [rsi - 0x76b7ffff], ecx ; ret
0x00000000005b2d0e : sbb dword ptr cs:[rax], edi ; mov bl, 4 ; sar dword ptr [rax], -0x79 ; in eax, dx ; ret
0x00000000004475a1 : sbb eax, 0x1d1672c3 ; ret
0x00000000005d700d : sbb eax, 0x20c0919c ; loopne 0x5d6ffb ; ret 0xe022
0x00000000005d680f : sbb eax, 0x20c0e0e0 ; loopne 0x5d67ff ; ret 0xc822
0x0000000000504400 : sbb eax, 0x32a21b ; pop rbx ; ret
0x000000000059cb68 : sbb eax, 0x3697f089 ; or bl, byte ptr [rcx] ; ret
0x000000000048f0bf : sbb eax, 0x39000aab ; ret
0x00000000005783a2 : sbb eax, 0x39260f36 ; sbb dword ptr [rax + 0x79], esp ; ret 0x819
0x000000000048f2bb : sbb eax, 0x39c600 ; pop rbx ; ret
0x0000000000578301 : sbb eax, 0x4366db85 ; or dword ptr [rbx - 0x2e], esp ; ret
0x000000000059f439 : sbb eax, 0x474c9580 ; ret 0xb611
0x00000000005a7e50 : sbb eax, 0x4e7482e4 ; je 0x5a7e94 ; lahf ; ret 0xb224
0x00000000004967e2 : sbb eax, 0x708448d ; sar eax, 3 ; pop rdx ; ret
0x00000000005aa056 : sbb eax, 0x7a233fff ; ret
0x00000000005b33c2 : sbb eax, 0x7e2c2e42 ; ret
0x0000000000551b40 : sbb eax, 0x8304e9c1 ; loope 0x551b51 ; mov eax, ecx ; ret
0x000000000058bff9 : sbb eax, 0x85617937 ; ret 0x2c94
0x00000000004f3166 : sbb eax, 0x89480007 ; ret
0x0000000000464204 : sbb eax, 0x89480008 ; ret
0x00000000004d90da : sbb eax, 0x89c28900 ; ret
0x000000000040b44f : sbb eax, 0x89fffffc ; ret
0x000000000057ca78 : sbb eax, 0x8ec2e766 ; call rsp
0x00000000005a6420 : sbb eax, 0x8f719811 ; jmp 0xffffffffc426ef8b
0x000000000060df3d : sbb eax, 0x9bf00002 ; call qword ptr [rcx]
0x00000000005a39f1 : sbb eax, 0xa599640 ; ret
0x00000000005b0f5b : sbb eax, 0xa9bb9dc9 ; ret 0x78b4
0x000000000059bcbe : sbb eax, 0xb45ab24c ; sahf ; std ; ret
0x0000000000577dfc : sbb eax, 0xb57b54a4 ; pop rcx ; pop rdx ; ret 0xd539
0x00000000004780fa : sbb eax, 0xb8bf1972 ; ret
0x00000000005b4a46 : sbb eax, 0xbff8fc48 ; ret 0x4fd8
0x000000000045f32b : sbb eax, 0xc0310000 ; ret
0x00000000005a74e3 : sbb eax, 0xda4fc7b5 ; push rbp ; ret 0xcea5
0x00000000004ca629 : sbb eax, 0xdb310000 ; mov rax, rbx ; pop rbx ; ret
0x00000000005e6a91 : sbb eax, 0xf1300002 ; out dx, al ; jmp qword ptr [rax]
0x0000000000556885 : sbb eax, 0xf2f231f9 ; out dx, eax ; ret
0x0000000000511dfd : sbb eax, 0xf47dc1c4 ; ret
0x00000000005a3b80 : sbb eax, 0xf5606b8 ; ret 0x5232
0x0000000000470ef6 : sbb eax, 0xff48ff00 ; ret
0x00000000005eddb5 : sbb eax, dword ptr [rax] ; add al, bh ; mov ch, -0x1e ; jmp qword ptr [rax]
0x000000000053ee41 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; adc esi, esi ; ret 0x7506
0x000000000043610f : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000005eaa51 : sbb eax, dword ptr [rbx] ; add byte ptr [rax], ah ; ret
0x00000000005eaa59 : sbb eax, dword ptr [rbx] ; add byte ptr [rax], dh ; ret
0x00000000005eaa49 : sbb eax, dword ptr [rbx] ; add byte ptr [rax], dl ; ret
0x00000000005eaa41 : sbb eax, dword ptr [rbx] ; add byte ptr [rax], dl ; ret 0xfff6
0x0000000000444fe3 : sbb eax, dword ptr [rcx + 0x1b1b1be7] ; sbb eax, dword ptr [rcx - 0x77] ; ret 0x8941
0x0000000000444fe9 : sbb eax, dword ptr [rcx - 0x77] ; ret 0x8941
0x0000000000539ddc : sbb eax, dword ptr [rcx] ; ret 0xe283
0x000000000043f29b : sbb eax, dword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000561c73 : sbb eax, eax ; and rax, 1 ; ret
0x000000000049fb06 : sbb eax, eax ; or eax, ecx ; pop rdx ; ret
0x000000000047af43 : sbb eax, eax ; ret
0x00000000005a04cd : sbb eax, ebx ; ret
0x000000000054a9ce : sbb eax, edi ; dec dword ptr [rax - 0x77] ; fucompi st(3) ; ret
0x00000000005e74a5 : sbb eax, esi ; jmp rax
0x00000000005222b3 : sbb eax, esp ; jrcxz 0x52233a ; add ah, byte ptr [rcx] ; ret 0x7ec5
0x00000000005223a0 : sbb eax, esp ; jrcxz 0x522427 ; add ah, byte ptr [rcx] ; ret 0x144
0x0000000000522489 : sbb eax, esp ; jrcxz 0x522510 ; add ah, byte ptr [rcx] ; ret 0x144
0x0000000000522573 : sbb eax, esp ; jrcxz 0x5225fa ; add dh, byte ptr [rcx] ; ret 0xc1c4
0x000000000052264e : sbb eax, esp ; jrcxz 0x5226d5 ; add dh, byte ptr [rcx] ; ret 0x144
0x0000000000522806 : sbb eax, esp ; jrcxz 0x52288d ; add dh, byte ptr [rcx] ; ret 0x144
0x0000000000522902 : sbb eax, esp ; jrcxz 0x522989 ; add dh, byte ptr [rcx] ; ret 0x144
0x0000000000522a05 : sbb eax, esp ; jrcxz 0x522a8c ; add dh, byte ptr [rcx] ; ret 0xbdc5
0x0000000000522b04 : sbb eax, esp ; jrcxz 0x522b8b ; add dh, byte ptr [rcx] ; ret 0x41c4
0x0000000000522bbc : sbb eax, esp ; jrcxz 0x522c43 ; add dh, byte ptr [rcx] ; ret 0x144
0x0000000000522c5f : sbb eax, esp ; jrcxz 0x522ce6 ; add dh, byte ptr [rcx] ; ret 0x144
0x0000000000522cfb : sbb eax, esp ; jrcxz 0x522d82 ; add dh, byte ptr [rcx] ; ret 0x144
0x0000000000522e87 : sbb eax, esp ; jrcxz 0x522f0e ; add ah, byte ptr [rcx] ; ret 0x144
0x0000000000522f3b : sbb eax, esp ; jrcxz 0x522fc2 ; add ah, byte ptr [rcx] ; ret 0x144
0x0000000000522fef : sbb eax, esp ; jrcxz 0x523076 ; add ah, byte ptr [rcx] ; ret 0x144
0x000000000052309b : sbb eax, esp ; jrcxz 0x523122 ; add dh, byte ptr [rcx] ; ret 0x144
0x0000000000523142 : sbb eax, esp ; jrcxz 0x5231c9 ; add dh, byte ptr [rcx] ; ret 0x144
0x00000000005231ef : sbb eax, esp ; jrcxz 0x523276 ; add dh, byte ptr [rcx] ; ret 0x144
0x000000000052329a : sbb eax, esp ; jrcxz 0x523321 ; add dh, byte ptr [rcx] ; ret 0x144
0x0000000000523368 : sbb eax, esp ; jrcxz 0x5233ef ; add dh, byte ptr [rcx] ; ret 0x144
0x0000000000523443 : sbb eax, esp ; jrcxz 0x5234ca ; add dh, byte ptr [rcx] ; ret 0x144
0x000000000052382e : sbb eax, esp ; jrcxz 0x5238b5 ; add dh, byte ptr [rcx] ; ret 0x144
0x0000000000578718 : sbb ebp, dword ptr [rbx + 0x1f] ; ret 0x12b4
0x0000000000556b71 : sbb ebp, dword ptr [rbx + rbx - 0x28] ; ja 0x556bb3 ; ret
0x0000000000556b79 : sbb ebp, dword ptr [rbx + rbx - 0x28] ; ja 0x556bbb ; ret
0x000000000048f3d1 : sbb ebp, dword ptr [rcx] ; idiv edi ; cdqe ; pop rdx ; ret
0x000000000044fcd4 : sbb ebp, eax ; fucomp st(7) ; in eax, -0x3c ; ret
0x000000000044fdfa : sbb ebp, eax ; int 0xef
0x00000000005f9189 : sbb ebp, ecx ; call qword ptr [rdi]
0x000000000060b4c9 : sbb ebp, edi ; call qword ptr [rax]
0x0000000000606f91 : sbb ebp, esi ; call qword ptr [rbx]
0x00000000005d73fc : sbb ebx, dword ptr [rax + 0x53] ; add rax, r8 ; ret
0x00000000005d6bfe : sbb ebx, dword ptr [rax - 0x3d] ; ret
0x000000000049c441 : sbb ebx, dword ptr [rbx - 0x76b7fffc] ; ret
0x0000000000556b70 : sbb ebx, dword ptr [rbx] ; insb byte ptr [rdi], dx ; sbb ebx, eax ; ja 0x556bb4 ; ret
0x0000000000556b78 : sbb ebx, dword ptr [rbx] ; insb byte ptr [rdi], dx ; sbb ebx, eax ; ja 0x556bbc ; ret
0x0000000000444fe7 : sbb ebx, dword ptr [rbx] ; sbb eax, dword ptr [rcx - 0x77] ; ret 0x8941
0x0000000000556b73 : sbb ebx, eax ; ja 0x556bb1 ; ret
0x0000000000556b7b : sbb ebx, eax ; ja 0x556bb9 ; ret
0x000000000051ae2f : sbb ebx, ebp ; out -0x3c, eax ; ret
0x0000000000598349 : sbb ebx, edx ; ret 0x254
0x00000000006100f9 : sbb ebx, esi ; call qword ptr [rax]
0x00000000006102d9 : sbb ebx, esi ; call qword ptr [rsi]
0x000000000045259c : sbb ebx, esi ; ret
0x00000000005988df : sbb ecx, dword ptr [rax + rdx*8 - 0x2e429204] ; ret
0x00000000004dcce0 : sbb ecx, dword ptr [rax - 0x77] ; ret 0x8148
0x00000000004f4ec1 : sbb ecx, dword ptr [rbp + 4] ; add byte ptr [rcx], bh ; ret
0x00000000004880d5 : sbb ecx, dword ptr [rbx] ; add byte ptr [rcx], bh ; ret
0x000000000059fcf1 : sbb edi, dword ptr [rax + rcx*8] ; push rcx ; scasb al, byte ptr [rdi] ; jl 0x59fcfc ; sbb dl, byte ptr [rdi] ; ret 0xaaca
0x00000000005b23e5 : sbb edi, dword ptr [rax] ; ret 0x78f3
0x00000000005b075a : sbb edi, ecx ; jmp qword ptr [rsi]
0x00000000004950f1 : sbb edi, edi ; dec dword ptr [rax - 0x77] ; ret
0x000000000050e9d7 : sbb edi, edi ; ret
0x0000000000420220 : sbb edi, esi ; dec dword ptr [rax - 0x77] ; ret
0x00000000005a65d7 : sbb edx, 0x12c7155a ; ret 0xda22
0x000000000059dab9 : sbb edx, dword ptr [rax + rdx*4] ; ret
0x0000000000438071 : sbb edx, dword ptr [rax] ; add byte ptr [rcx], bh ; ret
0x00000000005b188a : sbb edx, dword ptr [rdx] ; imul dword ptr [rdx - 0x6c] ; ret 0x983e
0x00000000005b6a5a : sbb edx, dword ptr [rdx] ; mov edi, 0x7c44912e ; ret 0x2496
0x00000000005abacd : sbb edx, dword ptr [rsi + 0x290570e1] ; ret 0x2f5c
0x00000000004fadc1 : sbb edx, dword ptr [rsi + 4] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004eda57 : sbb edx, edi ; dec dword ptr [rcx + 0x5e415be8] ; pop rbp ; ret
0x00000000004f6901 : sbb esi, dword ptr [rax + rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005b100b : sbb esi, dword ptr [rbx] ; add eax, 0x3398db0f ; ret
0x000000000057dd55 : sbb esi, dword ptr [rdx - 0xa] ; call rdx
0x00000000004f6361 : sbb esi, dword ptr [rip - 0x76b80000] ; ret
0x00000000005a9c75 : sbb esi, ebp ; ret 0x1d0d
0x00000000005a3fd8 : sbb esi, ecx ; push -0x22 ; xor al, 0xfffffffffffffff4 ; ret 0xfa73
0x00000000005eaf5d : sbb esi, edi ; jmp qword ptr [rax]
0x00000000005ea16d : sbb esi, esi ; jmp qword ptr [rax]
0x00000000005a6d97 : sbb esp, dword ptr [rdi - 0x6d737d8d] ; ret
0x000000000059c1e8 : sbb esp, dword ptr [rsp + 0x1a6dea8a] ; int1 ; ret 0x4c24
0x00000000004505b4 : sbb esp, eax ; ret
0x00000000005e5245 : sbb esp, ebp ; call qword ptr [rax]
0x00000000005e523d : sbb esp, ebp ; jmp rax
0x0000000000578d7e : sbb qword ptr [rdx + rcx*4 + 0x6ae402fb], rcx ; ret
0x00000000004be229 : sbb r11b, r14b ; ret
0x00000000004f4bff : sbb r11b, r8b ; mov rax, qword ptr [rdi + 0x20] ; ret
0x0000000000527391 : sbb r12b, al ; ret
0x00000000005295b2 : sbb r12b, r8b ; sar dword ptr [rcx + 0x6e], 0x51 ; sbb ah, al ; ret
0x00000000005aa055 : sbb rax, 0x7a233fff ; ret
0x0000000000561c72 : sbb rax, rax ; and rax, 1 ; ret
0x00000000005d73fb : sbb rbx, qword ptr [r8 + 0x53] ; add rax, r8 ; ret
0x00000000005d6bfd : sbb rbx, qword ptr [r8 - 0x3d] ; ret
0x00000000005aaa3a : scasb al, byte ptr [rdi] ; adc ecx, dword ptr [rbp - 0x66aec903] ; ret
0x00000000006170ad : scasb al, byte ptr [rdi] ; add al, byte ptr [rax] ; adc ah, ah ; hlt ; call qword ptr [rsi]
0x000000000061707d : scasb al, byte ptr [rdi] ; add al, byte ptr [rax] ; add ah, ah ; hlt ; call qword ptr [rsi]
0x00000000006170dd : scasb al, byte ptr [rdi] ; add al, byte ptr [rax] ; and ah, ah ; hlt ; call qword ptr [rsi]
0x0000000000617035 : scasb al, byte ptr [rdi] ; add al, byte ptr [rax] ; call 0x17616526
0x0000000000617065 : scasb al, byte ptr [rdi] ; add al, byte ptr [rax] ; clc ; jrcxz 0x617065 ; call qword ptr [rsi]
0x000000000061701d : scasb al, byte ptr [rdi] ; add al, byte ptr [rax] ; loopne 0x61700b ; hlt ; call qword ptr [rsi]
0x0000000000617095 : scasb al, byte ptr [rdi] ; add al, byte ptr [rax] ; or ah, ah ; hlt ; call qword ptr [rsi]
0x00000000006170c5 : scasb al, byte ptr [rdi] ; add al, byte ptr [rax] ; sbb ah, ah ; hlt ; call qword ptr [rsi]
0x00000000006170f5 : scasb al, byte ptr [rdi] ; add al, byte ptr [rax] ; sub ah, ah ; hlt ; call qword ptr [rsi]
0x00000000005e8ee9 : scasb al, byte ptr [rdi] ; add al, byte ptr [rax] ; xor bh, 0xf1 ; jmp qword ptr [rax]
0x00000000005f7055 : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; sub al, bpl ; call qword ptr [rdi]
0x00000000005f70fd : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; sub byte ptr [rcx], -0x18 ; call qword ptr [rdx]
0x00000000006070cd : scasb al, byte ptr [rdi] ; add dword ptr [rax], eax ; adc byte ptr [rcx], ah ; out dx, al ; call qword ptr [rax]
0x00000000005e4fb9 : scasb al, byte ptr [rdi] ; add dword ptr [rax], eax ; nop ; retf ; jmp 0x5e4fc5
0x0000000000432179 : scasb al, byte ptr [rdi] ; add eax, dword ptr [rax] ; add byte ptr [rax + 0x5739ab], bh ; ret
0x00000000005e97c5 : scasb al, byte ptr [rdi] ; cmc ; call rax
0x000000000043240a : scasb al, byte ptr [rdi] ; cmp byte ptr [rdi], dl ; ret
0x0000000000432296 : scasb al, byte ptr [rdi] ; cmp dl, byte ptr [rdi] ; ret
0x0000000000532061 : scasb al, byte ptr [rdi] ; in eax, dx ; leave ; ret 0x3b81
0x00000000005a9902 : scasb al, byte ptr [rdi] ; ja 0x5a9979 ; and ch, byte ptr [rax - 0x7f] ; push rbx ; ret 0x1e72
0x000000000059fcf5 : scasb al, byte ptr [rdi] ; jl 0x59fcf8 ; sbb dl, byte ptr [rdi] ; ret 0xaaca
0x00000000005e4e65 : scasb al, byte ptr [rdi] ; jmp 0x5e4e69
0x000000000048e9ae : scasb al, byte ptr [rdi] ; jne 0x48e9bc ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005b5c0f : scasb al, byte ptr [rdi] ; leave ; add byte ptr [rcx - 0x76], dh ; ret 0xe440
0x00000000005a20ac : scasb al, byte ptr [rdi] ; mov al, 5 ; ret
0x00000000004bb54e : scasb al, byte ptr [rdi] ; mov cl, -1 ; dec dword ptr [rax - 0x77] ; ret
0x00000000005b240e : scasb al, byte ptr [rdi] ; mov cl, 0x4d ; ret
0x00000000005a6c92 : scasb al, byte ptr [rdi] ; mov word ptr [rcx - 0x30], ds ; rol bh, -0x57 ; mov dl, 0x58 ; ret
0x000000000059ebec : scasb al, byte ptr [rdi] ; pop rdi ; ret
0x00000000005b1776 : scasb al, byte ptr [rdi] ; rcr byte ptr [rcx - 0x3c], cl ; ret
0x00000000005a12a9 : scasb al, byte ptr [rdi] ; ret
0x000000000059829d : scasb al, byte ptr [rdi] ; ret 0x2687
0x00000000005df2a0 : scasb al, byte ptr [rdi] ; ret 0x55
0x00000000005a1d19 : scasb al, byte ptr [rdi] ; ret 0x953d
0x00000000005ae483 : scasb al, byte ptr [rdi] ; ret 0xe408
0x00000000005b4a45 : scasb al, byte ptr [rdi] ; sbb eax, 0xbff8fc48 ; ret 0x4fd8
0x0000000000599418 : scasb al, byte ptr [rdi] ; shl byte ptr [rdi + 0x31], -0x77 ; ret 0xc308
0x00000000004f4c2d : scasd eax, dword ptr [rdi] ; add al, 0 ; add ebx, eax ; mov eax, ebx ; pop rbx ; ret
0x00000000006171fd : scasd eax, dword ptr [rdi] ; add al, byte ptr [rax] ; and ah, 0xf4 ; call qword ptr [rsi]
0x0000000000617125 : scasd eax, dword ptr [rdi] ; add al, byte ptr [rax] ; cmp ah, ah ; hlt ; call qword ptr [rsi]
0x000000000061713d : scasd eax, dword ptr [rdi] ; add al, byte ptr [rax] ; in al, -0xc ; call qword ptr [rsi]
0x00000000006171cd : scasd eax, dword ptr [rdi] ; add al, byte ptr [rax] ; jo 0x6171bc ; hlt ; call qword ptr [rsi]
0x0000000000617185 : scasd eax, dword ptr [rdi] ; add al, byte ptr [rax] ; pop rax ; in al, -0xc ; call qword ptr [rsi]
0x000000000061716d : scasd eax, dword ptr [rdi] ; add al, byte ptr [rax] ; push rax ; in al, -0xc ; call qword ptr [rsi]
0x000000000061710d : scasd eax, dword ptr [rdi] ; add al, byte ptr [rax] ; xor ah, ah ; hlt ; call qword ptr [rsi]
0x00000000005ac58b : scasd eax, dword ptr [rdi] ; add bl, ah ; ret 0xcd52
0x00000000005e12d9 : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; adc byte ptr [rcx], -0x1e ; call rax
0x000000000054e74d : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000005f712d : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; sub byte ptr [rcx], -0x18 ; call qword ptr [rsi]
0x00000000005e4fd9 : scasd eax, dword ptr [rdi] ; add dword ptr [rax], eax ; nop ; xlatb ; jmp 0x5e4fe5
0x00000000004d937f : scasd eax, dword ptr [rdi] ; and byte ptr [rax + rax], cl ; add cl, al ; ret 0x310b
0x000000000059ef52 : scasd eax, dword ptr [rdi] ; and eax, esp ; ret 0xbd61
0x0000000000596b4b : scasd eax, dword ptr [rdi] ; call qword ptr [rsi]
0x0000000000613371 : scasd eax, dword ptr [rdi] ; call rdi
0x000000000057d7f2 : scasd eax, dword ptr [rdi] ; cdq ; xchg eax, ecx ; ret
0x00000000005b5607 : scasd eax, dword ptr [rdi] ; cld ; ret 0x8421
0x0000000000616c81 : scasd eax, dword ptr [rdi] ; hlt ; call qword ptr [rcx]
0x0000000000616cc9 : scasd eax, dword ptr [rdi] ; hlt ; jmp rbx
0x0000000000594c5c : scasd eax, dword ptr [rdi] ; inc edx ; jmp 0x594c08
0x00000000005e9245 : scasd eax, dword ptr [rdi] ; jmp rax
0x000000000041279d : scasd eax, dword ptr [rdi] ; jp 0x4127ac ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005eedf1 : scasd eax, dword ptr [rdi] ; jrcxz 0x5eedf6 ; ret
0x00000000005b7c71 : scasd eax, dword ptr [rdi] ; lahf ; popfq ; xchg eax, ebp ; push rax ; in eax, dx ; ret
0x000000000054b9ba : scasd eax, dword ptr [rdi] ; lock dec dword ptr [rax - 0x77] ; ret
0x0000000000511c8c : scasd eax, dword ptr [rdi] ; mov byte ptr [r9 + 1], cl ; ret
0x0000000000511b3c : scasd eax, dword ptr [rdi] ; mov byte ptr [r9 + 1], cl ; ret 0x8948
0x000000000051131b : scasd eax, dword ptr [rdi] ; mov byte ptr [r9 - 0x3f], r9b ; jmp 0xffffffffc2525c4b
0x0000000000511bd0 : scasd eax, dword ptr [rdi] ; mov byte ptr [rcx + 1], r9b ; ret
0x000000000058d2fa : scasd eax, dword ptr [rdi] ; mov dword ptr [rbx], eax ; test eax, 0xa25f8d6f ; ret 0x7455
0x000000000059d6fc : scasd eax, dword ptr [rdi] ; mov eax, 0x51f8d28f ; ret 0x2a40
0x00000000004efe7d : scasd eax, dword ptr [rdi] ; or edi, esi ; dec dword ptr [rax - 0x77] ; ret
0x00000000005b28e8 : scasd eax, dword ptr [rdi] ; pop rbx ; ret 0x748b
0x000000000055687e : scasd eax, dword ptr [rdi] ; pop rdi ; out dx, eax ; ret
0x00000000004e150a : scasd eax, dword ptr [rdi] ; ret
0x00000000005729f0 : scasd eax, dword ptr [rdi] ; ret 0x42
0x00000000004e14c8 : scasd eax, dword ptr [rdi] ; ret 0x8548
0x00000000005abae2 : scasd eax, dword ptr [rdi] ; ret 0xa36
0x0000000000599e9f : scasd eax, dword ptr [rdi] ; ret 0xb8fa
0x00000000004e8c6e : scasd eax, dword ptr [rdi] ; ret 0xc148
0x00000000005a605a : scasd eax, dword ptr [rdi] ; stosd dword ptr [rdi], eax ; xor eax, 0x8e7c1367 ; ret
0x00000000005b498f : scasd eax, dword ptr [rdi] ; test al, 0x54 ; cmp esp, dword ptr [rsi] ; sub dword ptr [rbx], edx ; call qword ptr [rsi]
0x00000000005b1888 : scasd eax, dword ptr [rdi] ; xchg eax, esi ; sbb edx, dword ptr [rdx] ; imul dword ptr [rdx - 0x6c] ; ret 0x983e
0x00000000004429b6 : sete al ; movzx eax, al ; pop rbx ; ret
0x0000000000497c8b : sete al ; movzx eax, al ; pop rdx ; ret
0x000000000043db35 : sete al ; movzx eax, al ; ret
0x00000000004da745 : sete al ; movzx ecx, al ; mov eax, ecx ; pop rdx ; ret
0x0000000000566f8f : setg al ; movzx eax, al ; add eax, eax ; pop rdx ; ret
0x000000000040d8a1 : setg al ; movzx eax, al ; pop rdx ; ret
0x000000000055c8ab : setg al ; movzx eax, al ; ret
0x0000000000495533 : setne al ; movzx eax, al ; add eax, eax ; pop rbx ; ret
0x000000000041138b : setne al ; movzx eax, al ; pop rbx ; ret
0x00000000004767b2 : setne al ; movzx eax, al ; pop rdx ; ret
0x000000000042c007 : setne al ; movzx eax, al ; ret
0x00000000004c2ccb : setns al ; movzx eax, al ; ret
0x0000000000458c95 : sgdt ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000005e29e9 : sgdt ptr [rax] ; sal bh, -0x1b ; jmp qword ptr [rax]
0x00000000005e217d : shl ah, cl ; jmp rax
0x00000000005fb710 : shl al, -0x17 ; jmp rdx
0x00000000005f2170 : shl bh, -0x1c ; call rcx
0x0000000000616fc0 : shl bl, -0xc ; call qword ptr [rsi]
0x0000000000616ff0 : shl bl, 1 ; hlt ; call qword ptr [rsi]
0x000000000045f66a : shl byte ptr [rax], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000005a5c78 : shl byte ptr [rbp + rcx + 0x699a5f1b], -0x7e ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x00000000004bd87a : shl byte ptr [rbp - 6], cl ; dec dword ptr [rax - 0x77] ; ret
0x0000000000593941 : shl byte ptr [rbx + 0x4d], -0x36 ; ret
0x00000000004f625a : shl byte ptr [rbx], cl ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x0000000000596ab1 : shl byte ptr [rcx + 0x5f], 0x65 ; ret
0x00000000005e4c60 : shl byte ptr [rcx + 0x73f00001], -0x15 ; jmp rax
0x00000000004a99dc : shl byte ptr [rcx], cl ; ret 0xb60f
0x00000000004120ff : shl byte ptr [rcx], cl ; ret 0xcb88
0x0000000000599419 : shl byte ptr [rdi + 0x31], -0x77 ; ret 0xc308
0x00000000005e48d4 : shl byte ptr [rdi], -0x15 ; call qword ptr [rax]
0x00000000005ab2c2 : shl byte ptr [rdi], 1 ; ret
0x00000000005ab94a : shl byte ptr [rdx + 0x56], 1 ; ret 0x3451
0x0000000000429018 : shl byte ptr [rsi + 0x41], -9 ; ret
0x0000000000452913 : shl byte ptr [rsi + 0x44], 0xf ; out dx, eax ; ret 0x280f
0x0000000000517d65 : shl byte ptr [rsi + 0x45], 0xf ; outsd dx, dword ptr [rsi] ; ret
0x0000000000519ce4 : shl byte ptr [rsi + 0x45], 0xf ; outsd dx, dword ptr [rsi] ; ret 0x4166
0x00000000005974eb : shl byte ptr [rsi + 0x79], 0x6b ; loopne 0x597563 ; ret 0xda27
0x00000000005199fd : shl byte ptr [rsi + 0xf], -0x11 ; ret 0x4566
0x000000000045d46d : shl byte ptr [rsi + 0xf], -0x2c ; ret
0x00000000004e4033 : shl byte ptr [rsi + 0xf], 0x70 ; ret
0x00000000004519f1 : shl byte ptr [rsi + 0xf], 1 ; cmp bh, bl ; fdiv st(3) ; ret
0x0000000000451991 : shl byte ptr [rsi + 0xf], 1 ; cmp ch, bl ; fdiv st(3) ; ret
0x00000000005191ea : shl byte ptr [rsi + 0xf], 1 ; out dx, eax ; ret 0x4566
0x00000000005f36f0 : shl byte ptr [rsi - 0x1a], 1 ; call qword ptr [rbx]
0x000000000059c0e4 : shl byte ptr [rsi - 0xbd9aa24], 0x1e ; jo 0x59c123 ; ret
0x0000000000610d80 : shl byte ptr [rsi], 1 ; jmp qword ptr [rcx]
0x00000000005e6cb0 : shl byte ptr [rsi], 2 ; add byte ptr [rax], al ; cmp edi, ebp ; jmp rax
0x00000000004f5f5a : shl byte ptr [rsi], cl ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x0000000000617570 : shl ch, 1 ; hlt ; call qword ptr [rsi]
0x00000000005e9bf0 : shl ch, 2 ; add byte ptr [rax - 8], dl ; cmc ; jmp rax
0x0000000000616dc0 : shl cl, 1 ; hlt ; call qword ptr [rax]
0x00000000005ecda9 : shl cl, 1 ; jmp qword ptr [rax]
0x0000000000598d14 : shl dh, 1 ; ret 0x1026
0x00000000005b4682 : shl dword ptr [rbp + 0x13], 1 ; ficom dword ptr [rbp + 0x7ad03ee0] ; ret
0x00000000005aa1c7 : shl dword ptr [rbx - 0x38], cl ; jnp 0x5aa1fd ; ret
0x0000000000505377 : shl dword ptr [rcx], cl ; ret
0x000000000059c715 : shl dword ptr [rdi + rcx*2], cl ; ret
0x0000000000537205 : shl dword ptr [rdx - 0x36], -0x77 ; inc cl ; ret 0x441e
0x00000000004d5e79 : shl dword ptr [rsi + 0x41], 0xf ; cmp byte ptr [rax], al ; ret 0xff3
0x00000000005553e7 : shl dword ptr [rsi + 0xf], -0x11 ; ret 0xc3f3
0x000000000048f787 : shl dword ptr [rsi + 0xf], -0x15 ; ret 0xf66
0x00000000005636a3 : shl dword ptr [rsi + 0xf], -0x25 ; fbld dword ptr [rsi + 0xf] ; jmp 0x563676
0x0000000000563cea : shl dword ptr [rsi + 0xf], -0x25 ; fbld dword ptr [rsi + 0xf] ; jmp 0x563cbd
0x0000000000526732 : shl dword ptr [rsi + 0xf], 0x6f ; ret 0xf66
0x000000000053754d : shl dword ptr [rsi + 0xf], 0x70 ; ret 0xf03
0x0000000000524ecb : shl dword ptr [rsi + 0xf], 0x72 ; int1 ; add ah, byte ptr [rsi + 0xf] ; out dx, eax ; ret
0x00000000005055f9 : shl dword ptr [rsi + 0xf], 0x73 ; lock adc byte ptr [rsi + 0xf], ah ; jmp 0x5055ce
0x0000000000505b34 : shl dword ptr [rsi + 0xf], 0x73 ; lock adc byte ptr [rsi + 0xf], ah ; jmp 0x505b09
0x00000000004e1eae : shl dword ptr [rsi + 0xf], 0x73 ; lock or byte ptr [rsi + 0xf], ah ; jmp 0x4e1e83
0x00000000004e1fb9 : shl dword ptr [rsi + 0xf], 0x73 ; lock or byte ptr [rsi + 0xf], ah ; jmp 0x4e1f8e
0x000000000056370b : shl dword ptr [rsi + 0xf], cl ; jmp 0x5636d6
0x000000000056380d : shl dword ptr [rsi + 0xf], cl ; jmp 0x5637d8
0x000000000043f725 : shl dword ptr [rsi - 0x3f], cl ; ret
0x000000000042d2ef : shl eax, 0x18 ; or rax, rdx ; ret
0x000000000049f2c3 : shl eax, 3 ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000004f4bd6 : shl eax, 5 ; add rax, qword ptr [rdi] ; ret
0x00000000005e28cd : shl ebp, 1 ; call rax
0x00000000005ab7da : shl ebp, cl ; pop rax ; jb 0x5ab817 ; mov al, -0x3c ; ret 0xc5cc
0x0000000000564c83 : shl edx, 0x20 ; or rax, rdx ; ret
0x0000000000482869 : shl esi, -0x4d ; ret 0x5688
0x00000000004e287b : shl esi, -9 ; lcall ptr [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0x00000000005f4539 : shl esi, 1 ; jmp rdx
0x00000000005e213d : shl esp, 1 ; call qword ptr [rax]
0x00000000005e212d : shl esp, 1 ; jmp rax
0x00000000005e218d : shl esp, cl ; call qword ptr [rax]
0x000000000042d2ee : shl rax, 0x18 ; or rax, rdx ; ret
0x00000000004f4bd5 : shl rax, 5 ; add rax, qword ptr [rdi] ; ret
0x0000000000564c82 : shl rdx, 0x20 ; or rax, rdx ; ret
0x0000000000459579 : shr al, 0x21 ; xchg dh, bh ; dec dword ptr [rax - 0x77] ; ret
0x000000000053ed3a : shr al, cl ; adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rax ; ret
0x00000000004df387 : shr al, cl ; add edi, dword ptr [rbp - 0x76b70008] ; ret
0x00000000005e378d : shr al, cl ; call qword ptr [rax]
0x00000000005e377d : shr al, cl ; jmp rax
0x0000000000486661 : shr al, cl ; jns 0x48669e ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000617c40 : shr bh, -0xc ; call rbx
0x00000000005b7062 : shr bh, cl ; ret 0xd875
0x0000000000489702 : shr bl, 6 ; xor eax, eax ; pop rbx ; ret
0x00000000004dd6b2 : shr byte ptr [rax - 0x7e], 1 ; add byte ptr [rax + 1], bh ; ret
0x0000000000599436 : shr byte ptr [rbp + rbp*8 + 0x7e], 1 ; ret
0x00000000005a279a : shr byte ptr [rbp - 0x1f3afb42], cl ; hlt ; ret 0x77fc
0x00000000004e8f6a : shr byte ptr [rbx + 0x482aaaaa], -0x77 ; ret
0x00000000005f5090 : shr byte ptr [rbx], -0x19 ; jmp qword ptr [rcx]
0x00000000005a4f57 : shr byte ptr [rbx], -0x36 ; pop rsi ; pop rbp ; push rsp ; pop rsp ; ret
0x0000000000610f10 : shr byte ptr [rbx], 1 ; call rdi
0x000000000049f890 : shr byte ptr [rcx + 0x58], 0 ; cmovne rax, rcx ; ret
0x00000000005e4e50 : shr byte ptr [rcx - 0x533fffff], -0x15 ; jmp rax
0x0000000000611ec0 : shr byte ptr [rcx - 0xd], 1 ; call qword ptr [rbx]
0x000000000048ecc3 : shr byte ptr [rcx], 0x5b ; ret
0x00000000005e8484 : shr byte ptr [rcx], 1 ; int1 ; call qword ptr [rax]
0x000000000058d2f9 : shr byte ptr [rdi + 0x6fa90389], 1 ; lea ebx, dword ptr [rdi - 0x5e] ; ret 0x7455
0x0000000000431fb5 : shr byte ptr [rdi + rdx*2], 1 ; add byte ptr [rax + 0x573543], bh ; ret
0x00000000004b93ac : shr byte ptr [rdi], 1 ; add byte ptr [rcx], dh ; rcr byte ptr [rdx - 0x3d], 0x59 ; jmp rax
0x00000000004dd69d : shr byte ptr [rdx - 0x7e], 0 ; mov eax, 2 ; ret
0x00000000005ebf94 : shr byte ptr [rdx - 8], 1 ; call qword ptr [rax]
0x0000000000503f52 : shr byte ptr [rip + 0x4404fc73], 0xf ; scasd eax, dword ptr [rdi] ; ret
0x00000000005e8d4c : shr cl, 1 ; int1 ; call rax
0x00000000005b6ffb : shr cl, cl ; jb 0x5b700a ; sahf ; ret
0x0000000000552faa : shr dh, 1 ; dec dword ptr [rax - 0x77] ; ret
0x00000000005b41f1 : shr dh, cl ; je 0x5b4252 ; ret
0x00000000005e2364 : shr dl, -0x1c ; jmp qword ptr [rax]
0x00000000005a78ad : shr dword ptr [rbx + rcx*8 - 0x42], 1 ; int1 ; insb byte ptr [rdi], dx ; ret
0x00000000005a91e5 : shr dword ptr [rbx - 0x5322e23], cl ; sbb cl, dh ; clc ; ret
0x00000000005a3fd5 : shr dword ptr [rcx + 0x2f], cl ; sbb esi, ecx ; push -0x22 ; xor al, 0xfffffffffffffff4 ; ret 0xfa73
0x00000000005b291f : shr dword ptr [rcx + 0x41], 1 ; ret
0x000000000052750c : shr dword ptr [rcx + 0x72], -0xf ; or al, ch ; sub edi, ebp ; ret
0x0000000000594dfc : shr dword ptr [rsi + 1], 0x2d ; stc ; ret
0x00000000005957ed : shr dword ptr [rsi], cl ; fsub st(4), st(0) ; je 0x5957ba ; or byte ptr [rdx], dl ; pop rdx ; ret
0x00000000004598dd : shr eax, -0x63 ; sub byte ptr [rsi], cl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004e136e : shr eax, 0x10 ; sub r10, rax ; jmp 0x4e1387
0x00000000004e1469 : shr eax, 0x10 ; sub r10, rax ; jmp 0x4e1482
0x00000000004e2c3b : shr eax, 0x10 ; xor rax, rdx ; ret
0x000000000043b2d3 : shr eax, 1 ; add rsp, 8 ; pop rbx ; pop r14 ; ret
0x00000000005128de : shr eax, 5 ; ret
0x0000000000564ac0 : shr eax, cl ; and eax, 0x1f ; ret
0x000000000046b590 : shr eax, cl ; and eax, 1 ; ret
0x00000000005e60d5 : shr ebp, -1 ; push 0x500001f6 ; ret 0xffed
0x0000000000541f85 : shr ecx, 0x15 ; ret
0x000000000048d99b : shr ecx, 1 ; add eax, dword ptr [rax] ; xor eax, eax ; pop rdx ; ret
0x0000000000551561 : shr ecx, 4 ; and ecx, 1 ; mov eax, ecx ; pop rbx ; ret
0x0000000000551b41 : shr ecx, 4 ; and ecx, 1 ; mov eax, ecx ; ret
0x00000000005fb5a9 : shr ecx, cl ; call qword ptr [rax]
0x000000000045f246 : shr ecx, cl ; ret 0
0x0000000000504afd : shr edi, 1 ; dec dword ptr [rax - 0x77] ; ret
0x00000000005e713d : shr edi, cl ; jmp rax
0x00000000005b0108 : shr edx, cl ; ret
0x0000000000553017 : shr esi, 1 ; dec dword ptr [rax - 0x77] ; ret
0x00000000005e5895 : shr esp, -1 ; test al, -0x2d ; add dword ptr [rax], eax ; nop ; ret 0xffec
0x00000000004e136d : shr rax, 0x10 ; sub r10, rax ; jmp 0x4e1388
0x00000000004e1468 : shr rax, 0x10 ; sub r10, rax ; jmp 0x4e1483
0x00000000004e2c3a : shr rax, 0x10 ; xor rax, rdx ; ret
0x000000000046b58f : shr rax, cl ; and eax, 1 ; ret
0x00000000004549e5 : shufps xmm1, xmm1, -0x56 ; xorps xmm2, xmm1 ; ret
0x0000000000454945 : shufps xmm1, xmm1, -1 ; xorps xmm0, xmm1 ; ret
0x0000000000483582 : sldt ebx ; ret
0x00000000004330de : stc ; adc byte ptr [rdi], dl ; ret
0x00000000005a8184 : stc ; adc byte ptr [rsi + 0x55], dh ; stc ; ret
0x000000000043307a : stc ; adc eax, 0x42b84575 ; xorps xmm0, xmmword ptr [rax] ; ret
0x000000000049699c : stc ; add al, 0 ; pop rbx ; ret
0x00000000005ea1f1 : stc ; add al, byte ptr [rax] ; and byte ptr [rax], 0xf6 ; call qword ptr [rax]
0x00000000004d8f99 : stc ; add byte ptr [rcx], al ; add byte ptr [rax], al ; jne 0x4d8f27 ; ret
0x000000000041fcdf : stc ; add cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x4489
0x00000000005052e7 : stc ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x000000000042dfb0 : stc ; add dh, byte ptr [rbp + 0x11] ; mov eax, 0x56ef41 ; ret
0x000000000042982d : stc ; add dh, byte ptr [rbp + 6] ; mov eax, 0x56ef41 ; ret
0x000000000060bb15 : stc ; add dword ptr [rax], eax ; fdivr dword ptr [rsi] ; out dx, eax ; jmp rsi
0x00000000005e6191 : stc ; add dword ptr [rax], eax ; loopne 0x5e61c1 ; out dx, al ; jmp rax
0x000000000060bbd5 : stc ; add dword ptr [rax], eax ; mov byte ptr [rcx - 0x11], al ; call qword ptr [rbx]
0x000000000060bbed : stc ; add dword ptr [rax], eax ; nop ; out dx, eax ; call qword ptr [rbx]
0x00000000005e6171 : stc ; add dword ptr [rax], eax ; rcr byte ptr [rdx], -0x12 ; jmp qword ptr [rax]
0x00000000005e61a1 : stc ; add dword ptr [rax], eax ; xor byte ptr [rsi], ah ; out dx, al ; call qword ptr [rax]
0x000000000049fb04 : stc ; add dword ptr [rcx], ebx ; ror byte ptr [rcx], -0x38 ; pop rdx ; ret
0x00000000005488bf : stc ; add dword ptr [rdi + 3], esi ; mov eax, dword ptr [rdi + 0x20] ; ret
0x00000000005488df : stc ; add dword ptr [rdi + 3], esi ; mov eax, dword ptr [rdi + 0x24] ; ret
0x000000000054842e : stc ; add dword ptr [rdi + 4], esi ; mov rax, qword ptr [rdi + 0x18] ; ret
0x000000000054887f : stc ; add esi, dword ptr [rbp + 4] ; mov rax, qword ptr [rdi + 0x20] ; ret
0x000000000042dfc1 : stc ; add esi, dword ptr [rsi + 6] ; mov eax, 0x570d5a ; ret
0x00000000004bc363 : stc ; add qword ptr [rax], rax ; mov rax, rbx ; pop rbx ; ret
0x0000000000431d28 : stc ; call qword ptr [rax]
0x0000000000461d85 : stc ; call r8
0x000000000040334f : stc ; call rax
0x00000000004b7003 : stc ; cmp ebp, -1 ; test eax, eax ; jle 0x4b7016 ; pop rbx ; ret
0x00000000005a458d : stc ; cmp esi, dword ptr [rsi] ; or byte ptr [rsi + 0x48], ch ; ret
0x00000000004c4e23 : stc ; dec dword ptr [rax - 0x77] ; ret
0x000000000054ae3a : stc ; dec dword ptr [rax - 0x77] ; ret 0xed31
0x000000000055140a : stc ; dec dword ptr [rax - 0x7d] ; ret
0x00000000004fa3f8 : stc ; dec dword ptr [rax - 0x7f] ; ret
0x000000000059b50f : stc ; in eax, 0x28 ; ret 0x8a49
0x00000000004f3b35 : stc ; inc dword ptr [rbp + 0x5b027ec0] ; ret
0x0000000000478912 : stc ; jb 0x47891c ; xor eax, eax ; ret
0x0000000000479bd2 : stc ; jb 0x479bdc ; xor eax, eax ; ret
0x0000000000431bfc : stc ; jmp qword ptr [rax]
0x0000000000432fa4 : stc ; jne 0x432fcd ; mov eax, 0x5740cb ; ret
0x00000000004330e4 : stc ; jne 0x43310d ; mov eax, 0x570ff9 ; ret
0x00000000005e176d : stc ; loop 0x5e1773 ; ret
0x0000000000594a9d : stc ; mov ah, -0x71 ; iretd ; jne 0x594a41 ; jmp qword ptr [rbx]
0x000000000048eca3 : stc ; mov dl, -2 ; dec dword ptr [rax - 0x77] ; ret
0x000000000051026c : stc ; mov r8, r14 ; mov r9, rbx ; call rax
0x00000000004e60ed : stc ; mov r8d, r14d ; call rax
0x0000000000456963 : stc ; or byte ptr [rax], al ; pop rbx ; ret
0x00000000005954b5 : stc ; or byte ptr [rsi + 0x4e], ch ; leave ; call 0xffffffff848116e8
0x000000000060b099 : stc ; out dx, al ; call qword ptr [rax]
0x00000000005e6b6d : stc ; out dx, al ; jmp qword ptr [rax]
0x00000000004d5f61 : stc ; out dx, eax ; ret
0x000000000051b431 : stc ; out dx, eax ; ret 0xc1c4
0x000000000051b3fb : stc ; out dx, eax ; ret 0xf9c5
0x000000000051bdce : stc ; out dx, eax ; ret 0xfac5
0x00000000004d5edd : stc ; outsd dx, dword ptr [rsi] ; ret 0xc9c5
0x0000000000432faf : stc ; pop rdx ; jne 0x432fcd ; mov eax, 0x5cc907 ; ret
0x00000000004330ef : stc ; pop rdx ; jne 0x43310d ; mov eax, 0x574105 ; ret
0x0000000000578d7a : stc ; pop rsp ; ret 0x1948
0x00000000004d7304 : stc ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x41], 0x5e ; pop r15 ; ret
0x0000000000432fba : stc ; push rax ; jne 0x432fcd ; mov eax, 0x5740c8 ; ret
0x00000000004330fa : stc ; push rax ; jne 0x43310d ; mov eax, 0x570fde ; ret
0x00000000005df208 : stc ; rcl dword ptr [rbp], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x55
0x0000000000436cfa : stc ; ret
0x000000000059746d : stc ; ret 0x1ede
0x000000000058dd79 : stc ; ret 0x5ca4
0x000000000058b698 : stc ; ret 0x98f0
0x00000000005b5ba6 : stc ; ret 0xbf6e
0x000000000047bd43 : stc ; ret 6
0x0000000000546632 : stc ; stc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000556d80 : stc ; stc ; ret
0x0000000000578d75 : stc ; stosb byte ptr [rdi], al ; jp 0x578dff ; stosb byte ptr [rdi], al ; stc ; pop rsp ; ret 0x1948
0x000000000055bb4b : stc ; sub al, 0 ; ret
0x00000000005a6a3c : stc ; sub ebp, dword ptr [rdx] ; in eax, dx ; ret
0x00000000005a05b0 : stc ; sub ebx, ebp ; jp 0x5a05d3 ; ret
0x00000000004f99d6 : stc ; test r12, r12 ; je 0x4f99e8 ; call r12
0x0000000000471055 : stc ; xor edi, edi ; mov rsi, rcx ; mov rdx, rax ; jmp 0x471068
0x0000000000556886 : stc ; xor edx, esi ; out dx, eax ; ret
0x00000000004330e9 : stc ; xorps xmm0, xmmword ptr [rax] ; ret
0x00000000004ef9af : std ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005390d8 : std ; add byte ptr [rax - 0x7d], cl ; ret 0x48fd
0x000000000040507f : std ; call qword ptr [rax]
0x0000000000614501 : std ; call rax
0x0000000000543d55 : std ; cli ; dec dword ptr [rcx - 0x77] ; pop rsi ; or byte ptr [rax - 0x7d], cl ; ret
0x00000000005a294f : std ; cmp byte ptr [rax - 0x2b], bh ; push rdi ; ret 0xb9d9
0x00000000005a44a0 : std ; cmpsd dword ptr [rsi], dword ptr [rdi] ; xlatb ; ret 0x779c
0x0000000000486555 : std ; dec dword ptr [rax - 0x77] ; ret
0x000000000055f649 : std ; dec dword ptr [rax - 0x77] ; ret 0x758b
0x000000000050ea82 : std ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000049fd8e : std ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rcx + 0x48], -0x7d ; ret
0x00000000004258ab : std ; dec dword ptr [rax - 0x7d] ; ret
0x00000000005673d7 : std ; inc dword ptr [rbp + 0x12678c0] ; ret
0x00000000004b7005 : std ; inc dword ptr [rbp + 0x5b027ec0] ; ret
0x000000000055aafc : std ; inc dword ptr [rbp - 0xb68b40] ; ret
0x0000000000560364 : std ; inc dword ptr [rbp - 0xd08b40] ; ret
0x000000000055a93d : std ; inc dword ptr [rbp - 0xdc8b40] ; ret
0x0000000000567478 : std ; inc dword ptr [rbp - 0xf18740] ; ret
0x00000000004862a9 : std ; inc dword ptr [rbp - 0xf18b40] ; ret
0x000000000048e11f : std ; inc dword ptr [rcx + rcx*4 - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000005b50a2 : std ; int1 ; insb byte ptr [rdi], dx ; pop rdi ; jmp 0x5b506f
0x00000000005af101 : std ; jbe 0x5af112 ; pop qword ptr [rbx - 0x72] ; ret
0x00000000005af100 : std ; jbe 0x5af113 ; pop qword ptr [rbx - 0x72] ; ret
0x000000000047ff2a : std ; jmp 0x47ff8b
0x00000000005e51c5 : std ; jmp 0x5e51c9
0x0000000000409025 : std ; jmp qword ptr [rax]
0x000000000040923f : std ; jmp qword ptr [rcx]
0x00000000005530fc : std ; jns 0x55308b ; ret 0x675
0x000000000042bb0b : std ; lcall ptr [rbx + 0x41] ; pop rsi ; pop r15 ; ret
0x00000000005962ef : std ; lea esp, dword ptr [rax] ; sub al, 0x5d ; ret
0x000000000059fff9 : std ; lodsd eax, dword ptr [rsi] ; jnp 0x5a002b ; mov es, word ptr [rbp - 0x5f] ; push rsi ; ret 0xe039
0x00000000005b6894 : std ; mov word ptr [rdx - 0x41d0a4f7], cs ; cmp dh, cl ; ret
0x000000000059dacc : std ; or dword ptr [rax], 0x76 ; out dx, eax ; ret
0x000000000042c595 : std ; or dword ptr [rax], eax ; xor eax, eax ; pop rdx ; ret
0x0000000000529084 : std ; out dx, eax ; ret
0x00000000005a0558 : std ; pop rax ; push rsp ; std ; ret
0x00000000005a991d : std ; pop rdi ; pop r12 ; jmp 0xffffffffc30bd172
0x0000000000578765 : std ; popfq ; ret
0x00000000004875f9 : std ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x41], 0x5e ; pop r15 ; ret
0x00000000004f131b : std ; push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbx ; ret
0x000000000050805d : std ; push rbx ; test eax, 0xc10ec7c1 ; ret
0x00000000005aaa3d : std ; push rcx ; cdq ; ret
0x000000000050e74f : std ; ret
0x000000000059ab7c : std ; ret 0x3148
0x00000000005aef2c : std ; ret 0x488a
0x00000000005b1b52 : std ; ret 0x6c5d
0x000000000059c4ef : std ; ret 0x9661
0x00000000004fd3cf : std ; ret 0xfffe
0x00000000004ecbcf : std ; ret 6
0x00000000005b1305 : std ; sahf ; adc bl, bh ; xchg rax, r12 ; sahf ; ret 0x667b
0x000000000058cc7d : std ; sbb byte ptr [rdx + 0x78], bl ; call qword ptr [rdx]
0x0000000000482868 : std ; shl esi, -0x4d ; ret 0x5688
0x00000000004d7be2 : std ; std ; dec dword ptr [rax - 0x77] ; ret
0x000000000059ab7b : std ; std ; ret 0x3148
0x00000000005b5a20 : std ; sub ch, cl ; in al, dx ; ret
0x0000000000598432 : std ; xlatb ; push rcx ; push rax ; ret
0x00000000005585f1 : sti ; adc eax, 0x8948fffe ; ret
0x0000000000596afd : sti ; adc eax, 0xadf8c391 ; pop rdi ; ret 0xd710
0x000000000044901b : sti ; adc esp, eax ; ret
0x000000000049c837 : sti ; add al, byte ptr [rax] ; xor ebx, ebx ; mov eax, ebx ; pop rbx ; ret
0x000000000046dc9e : sti ; add bh, byte ptr [rax + rdi*2 - 0x7d] ; ret
0x00000000004e795c : sti ; add byte ptr [rdi + rcx + 0x45], r9b ; ret
0x00000000005e6211 : sti ; add dword ptr [rax], eax ; sal byte ptr [rax], -0x12 ; call qword ptr [rax]
0x000000000060bda5 : sti ; add dword ptr [rax], eax ; test al, 0x48 ; out dx, eax ; jmp rcx
0x0000000000429309 : sti ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xf44
0x00000000004e8d12 : sti ; and dword ptr [rcx], eax ; ret
0x00000000004ca813 : sti ; call qword ptr [rbx]
0x00000000005b0a03 : sti ; cmpsb byte ptr [rsi], byte ptr [rdi] ; call 0xffffffffc4570892
0x00000000005a5d7e : sti ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xaed4
0x000000000042a36e : sti ; dec dword ptr [rax + 0x63] ; ret
0x000000000044287c : sti ; dec dword ptr [rax - 0x77] ; ret
0x00000000004b2943 : sti ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rdx + rbx + 0x48], -0x7d ; ret
0x00000000004b1e34 : sti ; dec dword ptr [rax - 0x7d] ; ret
0x00000000004b1917 : sti ; dec dword ptr [rax - 0x7f] ; ret
0x00000000005418d1 : sti ; dec dword ptr [rax - 1] ; ret
0x0000000000443384 : sti ; inc dword ptr [rbp - 0x3f38b740] ; call rdi
0x00000000005b25b6 : sti ; insb byte ptr [rdi], dx ; ret 0x3118
0x000000000057ce9c : sti ; int 0xc3
0x00000000005b4beb : sti ; jmp 0xffffffffc40f63f2
0x00000000004b253e : sti ; lcall ptr [rbx + 0x41] ; pop rsi ; pop r15 ; ret
0x00000000004f221d : sti ; lock dec dword ptr [rax - 0x77] ; ret 0xed31
0x000000000057e0f8 : sti ; lodsb al, byte ptr [rsi] ; ret 0x763c
0x000000000057e14a : sti ; mov bh, 0x6f ; jmp 0xffffffffacf0a3bd
0x00000000004fd3c9 : sti ; mov rdi, qword ptr [rbx + 0x18] ; call 0x4e96d7
0x000000000059775c : sti ; movsb byte ptr [rdi], byte ptr [rsi] ; cmp dword ptr [rbp - 0x31], esp ; jg 0x5977a6 ; ret
0x00000000005b29ac : sti ; movsd dword ptr [rdi], dword ptr [rsi] ; mov dword ptr [rbx - 0x3f90d47a], ecx ; ret
0x000000000060ad21 : sti ; out dx, al ; call qword ptr [rax]
0x0000000000598f2a : sti ; outsb dx, byte ptr [rsi] ; mov ah, 0x19 ; jmp rcx
0x00000000005a47e1 : sti ; outsd dx, dword ptr [rsi] ; xor al, 0x44 ; outsd dx, dword ptr [rsi] ; xor al, 4 ; ret 0x14db
0x000000000055c700 : sti ; pop rbp ; add byte ptr [rcx - 0x48], al ; ret 0
0x000000000055c3c8 : sti ; pop rbp ; add cl, ch ; ret 0xfffd
0x00000000004ddf25 : sti ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x41], 0x5e ; pop r15 ; ret
0x000000000059fcd9 : sti ; ret
0x0000000000597a78 : sti ; ret 0x4e7d
0x00000000005a5c30 : sti ; ret 0x5ef0
0x00000000005ab2c7 : sti ; ret 0x68bc
0x00000000005a60d2 : sti ; ret 0x73d0
0x000000000044d459 : sti ; sal byte ptr [rbp - 0x164a245b], 0x5b ; ret 0x3956
0x000000000059fcf7 : sti ; sbb dl, byte ptr [rdi] ; ret 0xaaca
0x00000000005a9901 : sti ; scasb al, byte ptr [rdi] ; ja 0x5a997a ; and ch, byte ptr [rax - 0x7f] ; push rbx ; ret 0x1e72
0x00000000005a6059 : sti ; scasd eax, dword ptr [rdi] ; stosd dword ptr [rdi], eax ; xor eax, 0x8e7c1367 ; ret
0x0000000000559705 : sti ; std ; dec dword ptr [rax - 0x77] ; ret
0x00000000005948b6 : sti ; sub al, -0xf ; ret 0x7130
0x00000000005b57fa : sti ; xchg eax, ebp ; mov cl, ah ; int 0xc3
0x000000000059b525 : sti ; xchg eax, ecx ; lodsb al, byte ptr [rsi] ; neg byte ptr [rdx] ; sahf ; push rsi ; ret 0x38c2
0x000000000043f313 : sti ; xor r15d, r15d ; xor esi, esi ; mov rdi, r12 ; call rbx
0x00000000004b430b : stosb byte ptr [rdi], al ; add al, byte ptr [rax] ; add byte ptr [rbx - 0x3d], bl ; xor eax, eax ; pop rbx ; ret
0x0000000000616cc5 : stosb byte ptr [rdi], al ; add al, byte ptr [rax] ; call 0xffffffffe4616182
0x0000000000616c7d : stosb byte ptr [rdi], al ; add al, byte ptr [rax] ; mov al, -0x51 ; hlt ; call qword ptr [rcx]
0x0000000000560a42 : stosb byte ptr [rdi], al ; add byte ptr gs:[rax], al ; xor eax, eax ; ret
0x0000000000432cf9 : stosb byte ptr [rdi], al ; add dword ptr [rax], eax ; add byte ptr [rax + 0x573e82], bh ; ret
0x00000000005e4e61 : stosb byte ptr [rdi], al ; add dword ptr [rax], eax ; jo 0x5e4e1a ; jmp 0x5e4e6d
0x0000000000606c8d : stosb byte ptr [rdi], al ; add dword ptr [rax], eax ; rcl byte ptr [rsi + rbp*8] ; jmp qword ptr [rdi]
0x00000000004ac240 : stosb byte ptr [rdi], al ; add eax, 0x1b800 ; add byte ptr [rax], al ; pop rdx ; ret
0x00000000005a3149 : stosb byte ptr [rdi], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; sub eax, 0x4d286d4 ; xchg eax, esp ; cli ; ret 0xeca0
0x00000000005b13d0 : stosb byte ptr [rdi], al ; fst dword ptr [rcx - 0x79a63c10] ; ret
0x00000000005ab965 : stosb byte ptr [rdi], al ; fstp st(7), st(0) ; add ah, cl ; jbe 0x5ab951 ; rcr eax ; ret
0x00000000005781ce : stosb byte ptr [rdi], al ; in al, dx ; call qword ptr [rdi]
0x00000000005e5ff5 : stosb byte ptr [rdi], al ; in eax, dx ; call rax
0x00000000004473e8 : stosb byte ptr [rdi], al ; jmp rsi
0x0000000000578d76 : stosb byte ptr [rdi], al ; jp 0x578dfe ; stosb byte ptr [rdi], al ; stc ; pop rsp ; ret 0x1948
0x000000000059ec04 : stosb byte ptr [rdi], al ; js 0x59ec2c ; ret
0x000000000058ed95 : stosb byte ptr [rdi], al ; mov dh, -0x77 ; ret 0xa79c
0x000000000059c2fd : stosb byte ptr [rdi], al ; mov esi, 0x76a27f2 ; ret
0x00000000005ae79c : stosb byte ptr [rdi], al ; mov word ptr [rdi - 0x69], fs ; ret
0x00000000005477b2 : stosb byte ptr [rdi], al ; out -7, eax ; dec dword ptr [rax - 0x77] ; ret
0x0000000000545ed2 : stosb byte ptr [rdi], al ; pop rbp ; add byte ptr [rcx + rcx*4 - 9], cl ; call 0x402178
0x0000000000409e1b : stosb byte ptr [rdi], al ; push rsi ; add bl, al ; ret
0x00000000004bc612 : stosb byte ptr [rdi], al ; ret
0x000000000059b2a7 : stosb byte ptr [rdi], al ; ret 0x337e
0x00000000005a428a : stosb byte ptr [rdi], al ; ret 0x426d
0x00000000005c3590 : stosb byte ptr [rdi], al ; ret 0x5c
0x00000000005aa769 : stosb byte ptr [rdi], al ; ret 0x6595
0x000000000059c8ea : stosb byte ptr [rdi], al ; ret 0xa39d
0x000000000059b50d : stosb byte ptr [rdi], al ; sahf ; stc ; in eax, 0x28 ; ret 0x8a49
0x0000000000456962 : stosb byte ptr [rdi], al ; stc ; or byte ptr [rax], al ; pop rbx ; ret
0x0000000000578d79 : stosb byte ptr [rdi], al ; stc ; pop rsp ; ret 0x1948
0x00000000004e8f6c : stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; sub cl, byte ptr [rax - 0x77] ; ret
0x00000000005aaaf9 : stosb byte ptr [rdi], al ; sub byte ptr [rcx], bl ; ret
0x00000000004e8f6d : stosb byte ptr [rdi], al ; sub cl, byte ptr [rax - 0x77] ; ret
0x00000000005a04c9 : stosb byte ptr [rdi], al ; sub esp, ebx ; or ebx, dword ptr [rbx] ; ret
0x000000000059fee6 : stosb byte ptr [rdi], al ; xor byte ptr [rsi - 0x17], bl ; mov bl, -0x15 ; ret 0xfe88
0x0000000000599472 : stosb byte ptr [rdi], al ; xor dword ptr [rdi + 0x69af1543], esi ; ret
0x00000000004549e8 : stosb byte ptr [rdi], al ; xorps xmm2, xmm1 ; ret
0x0000000000616d15 : stosd dword ptr [rdi], eax ; add al, byte ptr [rax] ; call 0x226161dc
0x0000000000616dbd : stosd dword ptr [rdi], eax ; add al, byte ptr [rax] ; shl cl, 1 ; hlt ; call qword ptr [rax]
0x0000000000458521 : stosd dword ptr [rdi], eax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000613231 : stosd dword ptr [rdi], eax ; call qword ptr [rax]
0x000000000043217e : stosd dword ptr [rdi], eax ; cmp dword ptr [rdi], edx ; ret
0x000000000059a58e : stosd dword ptr [rdi], eax ; cmp edx, dword ptr [rbp - 0x59e6c243] ; ret
0x00000000005e57c5 : stosd dword ptr [rdi], eax ; in al, dx ; call rax
0x00000000005ae798 : stosd dword ptr [rdi], eax ; int1 ; jl 0x5ae775 ; stosb byte ptr [rdi], al ; mov word ptr [rdi - 0x69], fs ; ret
0x00000000005a76e3 : stosd dword ptr [rdi], eax ; leave ; rcl byte ptr [rcx - 0x3e] ; jmp 0x5a76f6
0x00000000005a385e : stosd dword ptr [rdi], eax ; loop 0x5a37fb ; jmp qword ptr [rbx]
0x00000000004338f1 : stosd dword ptr [rdi], eax ; mov al, 9 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005a17b4 : stosd dword ptr [rdi], eax ; mov dh, 0x57 ; mov esp, 0xa7c1baa ; ret
0x0000000000597d26 : stosd dword ptr [rdi], eax ; mov ebx, dword ptr [rdx + 0x76037b0d] ; ret
0x000000000044d46f : stosd dword ptr [rdi], eax ; pop rbx ; ret 0x3956
0x00000000005b4cb7 : stosd dword ptr [rdi], eax ; push rbp ; lahf ; fld xword ptr [rax - 0x536b70ed] ; ret
0x00000000004f9f61 : stosd dword ptr [rdi], eax ; ret
0x000000000055584c : stosd dword ptr [rdi], eax ; ret 0x2841
0x000000000059dad9 : stosd dword ptr [rdi], eax ; ret 0x435d
0x00000000005a6100 : stosd dword ptr [rdi], eax ; ret 0x65c7
0x00000000004e8f6b : stosd dword ptr [rdi], eax ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; sub cl, byte ptr [rax - 0x77] ; ret
0x0000000000405e2d : stosd dword ptr [rdi], eax ; str word ptr [rax - 0x77] ; ret
0x00000000005a605b : stosd dword ptr [rdi], eax ; xor eax, 0x8e7c1367 ; ret
0x0000000000405dde : str word ptr [rax - 0x77] ; ret
0x0000000000466ce8 : str word ptr [rax - 0x7d] ; ret
0x00000000006170f8 : sub ah, ah ; hlt ; call qword ptr [rsi]
0x00000000005276dc : sub ah, al ; ret
0x00000000005276d6 : sub ah, al ; sar dword ptr [rcx + 0x6e], 0x41 ; sub ah, al ; ret
0x0000000000529992 : sub ah, al ; sar dword ptr [rcx + 0x6e], 0x51 ; sub ah, al ; ret
0x00000000005944a7 : sub ah, bl ; int 0xc7
0x00000000005b257f : sub ah, byte ptr [rcx + 0x37] ; fstp xword ptr [rdx] ; ret
0x00000000005aa9f6 : sub ah, byte ptr [rdx] ; ret
0x00000000005b17f6 : sub ah, ch ; mov cl, -0x7d ; ret 0x467e
0x00000000005a0bfd : sub ah, dl ; ret 0x60a
0x00000000005e61dd : sub al, -0x12 ; jmp qword ptr [rax]
0x00000000005e69a4 : sub al, -0x12 ; jmp rax
0x0000000000600d19 : sub al, -0x14 ; call rcx
0x00000000005e3455 : sub al, -0x18 ; call rax
0x00000000005f7281 : sub al, -0x18 ; jmp qword ptr [rbx]
0x0000000000594804 : sub al, -0x21 ; rcl dword ptr [rdi] ; push rsp ; ret 0xf22c
0x00000000005aa767 : sub al, -0x23 ; stosb byte ptr [rdi], al ; ret 0x6595
0x000000000059556f : sub al, -0x27 ; salc ; test dword ptr [rbx + 0x58], ebp ; ret 0xe466
0x000000000047c157 : sub al, -0x2d ; ret 0xb60f
0x00000000005277ad : sub al, -0x3c ; ret
0x00000000005277a7 : sub al, -0x3c ; sar dword ptr [rcx + 0x6e], 0x41 ; sub al, -0x3c ; ret
0x0000000000529a88 : sub al, -0x3c ; sar dword ptr [rcx + 0x6e], 0x51 ; sub al, -0x3c ; ret
0x0000000000618434 : sub al, -0x3e ; add al, byte ptr [rax] ; test al, -1 ; hlt ; call qword ptr [rax]
0x00000000005df238 : sub al, -0x3e ; push rbp ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi], dh ; ret 0x55
0x0000000000617334 : sub al, -0x4f ; add al, byte ptr [rax] ; call 0x17616828
0x00000000005b1887 : sub al, -0x51 ; xchg eax, esi ; sbb edx, dword ptr [rdx] ; imul dword ptr [rdx - 0x6c] ; ret 0x983e
0x0000000000617034 : sub al, -0x52 ; add al, byte ptr [rax] ; call 0x17616527
0x0000000000606f34 : sub al, -0x53 ; add dword ptr [rax], eax ; sbb bpl, sil ; call qword ptr [rcx]
0x0000000000405eb0 : sub al, -0x55 ; str word ptr [rax - 0x77] ; ret
0x00000000005d6bcb : sub al, -0x5e ; xchg byte ptr [rsi], ah ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000005b16e6 : sub al, -0x61 ; ret 0x8012
0x0000000000615534 : sub al, -0x6d ; add al, byte ptr [rax] ; clc ; pop rax ; hlt ; call qword ptr [rcx]
0x0000000000599033 : sub al, -0x71 ; ret 0x754c
0x000000000045ddac : sub al, -0x77 ; ret
0x0000000000598f27 : sub al, -0x78 ; movsd dword ptr [rdi], dword ptr [rsi] ; sti ; outsb dx, byte ptr [rsi] ; mov ah, 0x19 ; jmp rcx
0x0000000000537f21 : sub al, -0xd ; dec dword ptr [rax - 0x77] ; ret
0x00000000005948b7 : sub al, -0xf ; ret 0x7130
0x00000000005ac6f6 : sub al, -9 ; mov ebp, 0xf3d76a55 ; cmc ; ret
0x00000000005eee8d : sub al, 0 ; add al, al ; mov al, -0x1d ; jmp qword ptr [rdx]
0x00000000005609bc : sub al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rax ; ret
0x00000000006185a8 : sub al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000055bb45 : sub al, 0 ; mov qword ptr [rip + 0x2cf9b2], rdi ; ret
0x000000000055b655 : sub al, 0 ; ret
0x0000000000506126 : sub al, 0 ; ror byte ptr [rbx - 0x7ebeb3a2], 1 ; ret 0x5a51
0x00000000005064e8 : sub al, 0 ; ror byte ptr [rbx - 0x7ebef3a2], 1 ; ret 0x6122
0x0000000000506b1d : sub al, 0 ; ror dword ptr [rbx - 0x7ebe87ba], cl ; ret
0x0000000000426f4f : sub al, 0x11 ; add byte ptr [rcx], bh ; ret
0x000000000057dd54 : sub al, 0x1b ; jb 0x57dd53 ; call rdx
0x00000000005d73c9 : sub al, 0x21 ; or eax, 0x86a2a426 ; bswap esp ; ret
0x00000000004f3f1e : sub al, 0x24 ; je 0x4f3f3d ; mov rdi, rbx ; call 0x4d01b9
0x000000000043f33b : sub al, 0x24 ; lea rsi, qword ptr [rsp] ; mov rdi, r12 ; call rbx
0x00000000004f7b20 : sub al, 0x27 ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000537f20 : sub al, 0x2c ; dec dword ptr [rax - 0x77] ; ret
0x000000000047d8a6 : sub al, 0x31 ; ret
0x00000000005af7e6 : sub al, 0x33 ; jnp 0x5af83b ; mov esi, 0xa47ecd67 ; ret
0x000000000059ff5d : sub al, 0x3f ; cld ; ret 0xeb49
0x00000000005537b9 : sub al, 0x48 ; mov edi, ebx ; call 0x401d38
0x0000000000610d34 : sub al, 0x4b ; add al, byte ptr [rax] ; fsub dword ptr [rsi] ; call qword ptr [rbx]
0x000000000058d766 : sub al, 0x56 ; ret 0x3a22
0x0000000000431fb6 : sub al, 0x57 ; add byte ptr [rax + 0x573543], bh ; ret
0x00000000004320f2 : sub al, 0x57 ; add byte ptr [rax + 0x5737c5], bh ; ret
0x0000000000431f65 : sub al, 0x57 ; add byte ptr [rax + 0x5739bc], bh ; ret
0x0000000000430424 : sub al, 0x57 ; add byte ptr [rcx - 0x48], al ; ret 3
0x00000000005962f2 : sub al, 0x5d ; ret
0x00000000004a4900 : sub al, 0x5e ; add al, byte ptr [rax] ; pop rbx ; ret
0x00000000005b6bf1 : sub al, 0x61 ; in al, dx ; mov dl, byte ptr [rbp - 1] ; sahf ; ret
0x0000000000602934 : sub al, 0x67 ; add dword ptr [rax], eax ; call 0xffffffffc4601601
0x000000000053206d : sub al, 0x72 ; xchg eax, edx ; out -0x52, al ; in eax, dx ; leave ; ret 0x3b81
0x00000000005f3f34 : sub al, 0x7d ; add byte ptr [rax], al ; call 0x125f25f7
0x00000000005b33c5 : sub al, 0x7e ; ret
0x000000000057d89f : sub al, 0xf ; cmc ; ret 0xf961
0x00000000005e30f1 : sub al, 1 ; add al, ah ; loopne 0x5e30e4 ; call rax
0x00000000005fee95 : sub al, 1 ; add byte ptr [rax + 0x31], bl ; jmp 0x5feea1
0x000000000040ad51 : sub al, 1 ; add byte ptr [rax], al ; ret
0x00000000004d0929 : sub al, 2 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000432bd9 : sub al, 2 ; add byte ptr [rax], al ; mov eax, 0x573e4a ; ret
0x0000000000432b57 : sub al, 2 ; add byte ptr [rax], al ; mov eax, 0x573f62 ; ret
0x0000000000432b45 : sub al, 2 ; add byte ptr [rax], al ; mov eax, 0x573f70 ; ret
0x0000000000432b33 : sub al, 2 ; add byte ptr [rax], al ; mov eax, 0x573f7e ; ret
0x0000000000432b21 : sub al, 2 ; add byte ptr [rax], al ; mov eax, 0x573f8c ; ret
0x0000000000432b0f : sub al, 2 ; add byte ptr [rax], al ; mov eax, 0x573f9a ; ret
0x0000000000432afd : sub al, 2 ; add byte ptr [rax], al ; mov eax, 0x573fa8 ; ret
0x0000000000432aeb : sub al, 2 ; add byte ptr [rax], al ; mov eax, 0x574050 ; ret
0x00000000005eaed1 : sub al, 3 ; add byte ptr [rax], ah ; adc al, -9 ; jmp rax
0x0000000000432139 : sub al, 3 ; add byte ptr [rax], al ; mov eax, 0x57367b ; ret
0x0000000000432127 : sub al, 3 ; add byte ptr [rax], al ; mov eax, 0x5736bb ; ret
0x0000000000432115 : sub al, 3 ; add byte ptr [rax], al ; mov eax, 0x5736fd ; ret
0x0000000000432103 : sub al, 3 ; add byte ptr [rax], al ; mov eax, 0x573793 ; ret
0x000000000059b4d0 : sub al, 8 ; mov ebp, 0x860fc460 ; sbb al, byte ptr [rcx] ; int 0x80
0x00000000005945db : sub al, al ; out dx, al ; ret 0x21f7
0x00000000005f7058 : sub al, bpl ; call qword ptr [rdi]
0x00000000004195ae : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov eax, edi ; ret
0x00000000005eae59 : sub al, byte ptr [rbx] ; add byte ptr [rax], al ; or edi, esi ; jmp rax
0x00000000004ff2dc : sub al, byte ptr [rcx + 0x59] ; jmp rax
0x00000000004e4a53 : sub al, byte ptr [rcx + 9] ; rol dword ptr [rcx + 0x31], cl ; ret
0x00000000005e6d41 : sub al, byte ptr [rdx] ; add byte ptr [rax], ah ; jl 0x5e6d3c ; jmp qword ptr [rax]
0x000000000060ecb5 : sub al, byte ptr [rdx] ; add byte ptr [rax], bh ; call qword ptr [rdx]
0x00000000005f7059 : sub al, ch ; call qword ptr [rdi]
0x000000000048a621 : sub al, ch ; mov ecx, 0x39000af5 ; ret
0x0000000000424e8d : sub al, ch ; or eax, 0x89000314 ; ret
0x00000000005a9a6c : sub al, ch ; test dword ptr [rsi], edi ; wait ; ret
0x00000000004f59a8 : sub al, ch ; xor al, byte ptr [rdx + 4] ; add byte ptr [rcx], bh ; ret
0x000000000060d739 : sub al, dh ; call qword ptr [rdx]
0x00000000005a9a56 : sub ax, 0x8f5e ; rol dword ptr [rsi], cl ; ret
0x00000000004716d4 : sub bh, bh ; dec dword ptr [rax - 0x77] ; ret
0x00000000005783c8 : sub bh, bh ; mov word ptr [rcx], es ; out dx, eax ; fnsave dword ptr [rdx] ; ret
0x0000000000431e9d : sub bh, byte ptr [rax + 0x573bf0] ; ret
0x00000000005abe53 : sub bh, byte ptr [rdx] ; push rsp ; ret 0x5ec7
0x0000000000498279 : sub bh, ch ; dec dword ptr [rax - 0x77] ; ret
0x00000000005eafb5 : sub bh, dh ; jmp rax
0x0000000000572a88 : sub bl, al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], dh ; ret
0x00000000005b0a02 : sub bl, bh ; cmpsb byte ptr [rsi], byte ptr [rdi] ; call 0xffffffffc4570893
0x00000000005b05bc : sub bl, bh ; ret
0x00000000005e4914 : sub bl, bpl ; call rax
0x00000000005aa053 : sub bl, byte ptr [rbp + 0x4f] ; sbb eax, 0x7a233fff ; ret
0x00000000005556b2 : sub bl, byte ptr [rdx - 0x68] ; call 0x785e1971
0x00000000005b66a2 : sub bl, byte ptr [rsi + 0x6f1d7078] ; ret 0x7a53
0x00000000005b4e1e : sub bl, byte ptr [rsi - 0x21] ; ret 0x4d11
0x00000000005e4915 : sub bl, ch ; call rax
0x000000000059cd07 : sub bl, ch ; push rcx ; ret 0x2f85
0x0000000000481a14 : sub bl, dh ; ret
0x00000000005aae45 : sub bpl, byte ptr [rbp - 0x23] ; ret 0xea0d
0x00000000004f4bf8 : sub byte ptr [r10], r8b ; je 0x4f4c0b ; mov rax, qword ptr [rdi + 0x18] ; ret
0x000000000040e9df : sub byte ptr [r11 + 0x41], bl ; pop rsi ; pop r15 ; ret
0x00000000004f34a2 : sub byte ptr [r13 - 0x76fc870a], r8b ; ja 0x4f34dc ; ret
0x0000000000477675 : sub byte ptr [r8 - 0x7d], cl ; ret
0x0000000000564408 : sub byte ptr [rax + 0x11], cl ; ret
0x000000000043a54c : sub byte ptr [rax + 0x39], cl ; ret 0x2776
0x0000000000432502 : sub byte ptr [rax + 0x5731f8], bh ; ret
0x00000000005b6de6 : sub byte ptr [rax + 0x5b], ah ; mov cl, cl ; ret 0x90cf
0x0000000000479ea8 : sub byte ptr [rax + 0x63], cl ; add ebx, dword ptr [rbx + 0x41] ; pop rsi ; pop r15 ; ret
0x0000000000593db3 : sub byte ptr [rax + 0x6a], -0x31 ; ret 0xf3f4
0x0000000000488336 : sub byte ptr [rax + 1], bh ; pop rbx ; ret
0x0000000000484f80 : sub byte ptr [rax + 1], bh ; pop rdx ; ret
0x00000000005415a3 : sub byte ptr [rax + 1], bh ; ret
0x000000000048d5ca : sub byte ptr [rax + 1], cl ; ret
0x000000000049f910 : sub byte ptr [rax + rbx*2], 0x48 ; cmovne eax, ecx ; ret
0x00000000005f2af8 : sub byte ptr [rax - 0x1b], dl ; jmp qword ptr [rax]
0x00000000005d6c13 : sub byte ptr [rax - 0x1d5fdf80], ah ; ret 0xe022
0x000000000044518a : sub byte ptr [rax - 0x73], cl ; xor bl, dh ; ret
0x00000000004628cf : sub byte ptr [rax - 0x75], cl ; adc ecx, dword ptr [rax - 0x7d] ; ret 0x48fc
0x0000000000462edd : sub byte ptr [rax - 0x75], cl ; push rbp ; add byte ptr [rax - 0x7d], cl ; ret 0x48fc
0x0000000000484664 : sub byte ptr [rax - 0x77], cl ; ret
0x00000000004a224d : sub byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000042dd45 : sub byte ptr [rax - 0x77], cl ; xor byte ptr [r11 + 0x41], bl ; pop rsi ; pop rbp ; ret
0x00000000004c9a43 : sub byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0x18] ; ret 0x1c8
0x000000000049c9ea : sub byte ptr [rax - 0x7b], cl ; sal byte ptr [rsp + rax + 0x41], 0x58 ; jmp rax
0x00000000004b88c7 : sub byte ptr [rax - 0x7b], cl ; sal byte ptr [rsp + rax + 0x41], 0x59 ; jmp rax
0x0000000000477676 : sub byte ptr [rax - 0x7d], cl ; ret
0x0000000000468f6e : sub byte ptr [rax - 0x7d], cl ; ret 0x4802
0x00000000004a17ee : sub byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000040a64b : sub byte ptr [rax - 0xb7e6fc], cl ; ret
0x0000000000615758 : sub byte ptr [rax - 0xc], ah ; call qword ptr [rax]
0x000000000053cb39 : sub byte ptr [rax - 1], cl ; ret
0x0000000000562500 : sub byte ptr [rax - 9], cl ; adc byte ptr [rax + 1], cl ; ret
0x000000000056248c : sub byte ptr [rax - 9], cl ; or byte ptr [rcx + 1], cl ; ret 0x1148
0x00000000005624ff : sub byte ptr [rax - 9], r9b ; adc byte ptr [rax + 1], cl ; ret
0x000000000056248b : sub byte ptr [rax - 9], r9b ; or byte ptr [rcx + 1], cl ; ret 0x1148
0x00000000004195c5 : sub byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, edi ; ret
0x00000000005066b4 : sub byte ptr [rax], al ; fld dword ptr [rcx - 0x3f] ; ret 0x4510
0x0000000000506972 : sub byte ptr [rax], al ; ror byte ptr [rbx - 0x7ebea3a2], 1 ; ret 0xf47d
0x0000000000505f3d : sub byte ptr [rax], al ; ror byte ptr [rbx - 0x7ebed3a2], 1 ; ret 0x5bb1
0x00000000005061d3 : sub byte ptr [rax], al ; ror dword ptr [rbx - 0x7ebea7ba], cl ; ret
0x0000000000498215 : sub byte ptr [rax], al ; sete al ; movzx eax, al ; ret
0x000000000048f489 : sub byte ptr [rax], bl ; pop rbx ; ret
0x00000000004dffea : sub byte ptr [rax], dh ; ret 0xc148
0x0000000000556a9d : sub byte ptr [rax], dl ; ret
0x0000000000562115 : sub byte ptr [rbp + 0x31], al ; fisttp dword ptr [rcx + 1] ; ret 0x1148
0x0000000000505f52 : sub byte ptr [rbp + 1], al ; loop 0x505f5f ; fld dword ptr [rcx - 0x3f] ; ret 0x4511
0x00000000004f34a3 : sub byte ptr [rbp - 0x76fc870a], al ; ja 0x4f34db ; ret
0x0000000000512595 : sub byte ptr [rbp - 0x77], cl ; ret
0x0000000000512594 : sub byte ptr [rbp - 0x77], r9b ; ret
0x00000000005a8ff8 : sub byte ptr [rbx + 0x24], dh ; jnp 0x5a9005 ; nop ; jo 0x5a8f9b ; ret 0xd298
0x00000000004cbe80 : sub byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040e9e0 : sub byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; ret
0x00000000004866c3 : sub byte ptr [rbx + 0x41], bl ; pop rsi ; ret
0x00000000004625ea : sub byte ptr [rbx + 0x41], bl ; pop rsp ; pop r14 ; pop r15 ; ret
0x00000000004163fb : sub byte ptr [rbx + 0x5d], bl ; ret
0x0000000000435a79 : sub byte ptr [rbx + rcx*4 + 0x44], cl ; and al, 0x18 ; call rax
0x0000000000558b03 : sub byte ptr [rbx - 0x49f0dbe4], cl ; ret
0x0000000000457754 : sub byte ptr [rbx - 0x76b80000], ah ; ret
0x00000000005f7260 : sub byte ptr [rbx], -0x18 ; call rdx
0x00000000005eadc9 : sub byte ptr [rbx], al ; add al, dh ; add bh, dh ; jmp qword ptr [rax]
0x0000000000556b6f : sub byte ptr [rbx], bl ; sbb ebp, dword ptr [rbx + rbx - 0x28] ; ja 0x556bb5 ; ret
0x00000000005b6324 : sub byte ptr [rbx], cl ; sbb byte ptr [rbx + 0x6c], dh ; ret 0xeeb6
0x000000000051258a : sub byte ptr [rcx + 0x21], cl ; ret
0x00000000004d2c64 : sub byte ptr [rcx + 0x31], al ; ret
0x00000000005b4a5c : sub byte ptr [rcx + 0x64], 0x4c ; ret
0x00000000004bb000 : sub byte ptr [rcx + 1], bh ; mov eax, ecx ; pop rbx ; ret
0x00000000004a1e71 : sub byte ptr [rcx + 1], cl ; ret
0x0000000000561eb4 : sub byte ptr [rcx + 1], cl ; ret 0x1148
0x00000000005115df : sub byte ptr [rcx + 1], cl ; ret 0x8948
0x000000000053c847 : sub byte ptr [rcx - 0x75], cl ; sbb byte ptr [r8 + 0x39], r9b ; ret
0x0000000000482443 : sub byte ptr [rcx - 0x77], cl ; ret
0x00000000004dd640 : sub byte ptr [rcx - 0x7e], 0 ; mov eax, 1 ; ret
0x00000000004dd690 : sub byte ptr [rcx - 0x7e], ch ; add byte ptr [rax + 1], bh ; ret
0x0000000000505f08 : sub byte ptr [rcx - 0x7f], al ; ret
0x0000000000505f07 : sub byte ptr [rcx - 0x7f], r8b ; ret
0x00000000004b9448 : sub byte ptr [rcx - 1], cl ; ret 0x3949
0x0000000000561e40 : sub byte ptr [rcx - 9], cl ; and dword ptr [rax + 1], ecx ; ret
0x0000000000561e3f : sub byte ptr [rcx - 9], r9b ; and dword ptr [rax + 1], ecx ; ret
0x00000000005f7100 : sub byte ptr [rcx], -0x18 ; call qword ptr [rdx]
0x00000000005f7130 : sub byte ptr [rcx], -0x18 ; call qword ptr [rsi]
0x0000000000423d2a : sub byte ptr [rcx], al ; add byte ptr [rax], al ; call 0x440026
0x000000000042c33a : sub byte ptr [rcx], al ; add byte ptr [rax], al ; pop rdx ; ret
0x00000000006105a8 : sub byte ptr [rcx], bl ; call qword ptr [rax]
0x00000000005aaafa : sub byte ptr [rcx], bl ; ret
0x00000000005f3328 : sub byte ptr [rdi - 0x1a], al ; jmp rax
0x00000000005b17f3 : sub byte ptr [rdi - 0x38], bl ; sub ah, ch ; mov cl, -0x7d ; ret 0x467e
0x0000000000542434 : sub byte ptr [rdi - 0x76b7000c], dh ; ret
0x00000000004f67c4 : sub byte ptr [rdi], bl ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x0000000000447fb3 : sub byte ptr [rdi], cl ; test dword ptr [rdx], esp ; add eax, dword ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; call qword ptr [rax]
0x000000000042c31f : sub byte ptr [rdx - 0x3d], bl ; mov rax, qword ptr [rdi + 0x28] ; pop rdx ; ret
0x00000000005a0bfc : sub byte ptr [rdx], -0x1e ; ret 0x60a
0x000000000060ea0d : sub byte ptr [rdx], al ; add byte ptr [rax - 0x1e], ah ; call rsi
0x00000000004ddeba : sub byte ptr [rdx], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005e6d01 : sub byte ptr [rdx], al ; add byte ptr [rax], al ; push -0x11 ; call rax
0x000000000060eab5 : sub byte ptr [rdx], al ; add byte ptr [rax], bh ; in al, dx ; jmp rdx
0x0000000000618628 : sub byte ptr [rdx], al ; cmc ; jmp qword ptr [rdi]
0x00000000004f4bf9 : sub byte ptr [rdx], al ; je 0x4f4c0a ; mov rax, qword ptr [rdi + 0x18] ; ret
0x00000000005af608 : sub byte ptr [rsi + 0x4d352818], 0x65 ; ret
0x00000000005b1cde : sub byte ptr [rsi + 0xa5f25b1], dh ; pop rcx ; leave ; std ; ret
0x00000000004856e4 : sub byte ptr [rsi + rax], cl ; add bl, ch ; ret
0x0000000000601698 : sub byte ptr [rsi - 0x14], ch ; call qword ptr [rsi]
0x00000000006116e8 : sub byte ptr [rsi - 0xd], cl ; call qword ptr [rax]
0x00000000005e76ec : sub byte ptr [rsi], -0x10 ; jmp rax
0x00000000004f6804 : sub byte ptr [rsi], bl ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000004598e0 : sub byte ptr [rsi], cl ; add byte ptr [rax - 0x77], cl ; ret
0x000000000059c6e9 : sub byte ptr [rsp + rax - 0x176c8ad5], bl ; ret
0x00000000004e9781 : sub byte ptr [rsp + rbx*2], ah ; add byte ptr [rax - 0x77], cl ; ret 0xf3e8
0x00000000005e991c : sub ch, -0xb ; jmp rax
0x00000000005a913e : sub ch, al ; ret 0x3128
0x0000000000567318 : sub ch, bh ; dec dword ptr [rax - 0x77] ; ret
0x00000000005e4975 : sub ch, bl ; call qword ptr [rax]
0x0000000000443382 : sub ch, bl ; sti ; inc dword ptr [rbp - 0x3f38b740] ; call rdi
0x000000000059bdc5 : sub ch, byte ptr [rax - 0x71] ; ret 0x88d0
0x00000000005aae46 : sub ch, byte ptr [rbp - 0x23] ; ret 0xea0d
0x00000000005a6a3e : sub ch, ch ; ret
0x00000000005b5a21 : sub ch, cl ; in al, dx ; ret
0x00000000005e61cd : sub ch, dh ; call rax
0x00000000005e47ac : sub cl, -0x16 ; call qword ptr [rax]
0x00000000005b6238 : sub cl, 0x4a ; ret
0x00000000005b5713 : sub cl, byte ptr [r14 - 0x53052858] ; ret 0x1c5b
0x00000000004a5d52 : sub cl, byte ptr [rax + 2] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004e8f6e : sub cl, byte ptr [rax - 0x77] ; ret
0x0000000000463532 : sub cl, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000487178 : sub cl, byte ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000538db6 : sub cl, byte ptr [rdi] ; mov dh, 0x42 ; dec byte ptr [rax - 0x7d] ; ret 0x4103
0x00000000005b5714 : sub cl, byte ptr [rsi - 0x53052858] ; ret 0x1c5b
0x00000000005b5712 : sub cl, byte ptr ss:[r14 - 0x53052858] ; ret 0x1c5b
0x000000000055b510 : sub cl, ch ; cmp al, ch ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000005e8475 : sub cl, dh ; call rax
0x00000000005a6ce3 : sub cl, dh ; ret 0x861c
0x00000000005e2b95 : sub dh, ah ; jmp qword ptr [rax]
0x000000000060d7a9 : sub dh, al ; jmp qword ptr [rcx]
0x00000000005b0d70 : sub dh, byte ptr [rbx + rdi*8 + 0x3db0f735] ; ret 0x40
0x00000000005a6614 : sub dh, byte ptr [rcx] ; ret
0x000000000057e2f0 : sub dh, ch ; imul edx, dword ptr [rsi], -0x7e ; call qword ptr [rdx]
0x0000000000607211 : sub dh, ch ; jmp rbx
0x0000000000600a08 : sub dh, cl ; jmp 0x600a0e
0x000000000057cf92 : sub dh, cl ; movsd dword ptr [rdi], dword ptr [rsi] ; wait ; loope 0x57cfc6 ; push rdx ; ret 0xd5a6
0x00000000004226c1 : sub dh, cl ; push rsi ; add byte ptr [rcx - 0x48], al ; ret
0x00000000005ea2bd : sub dh, dh ; call rax
0x0000000000579b8c : sub dl, ah ; call 0xffffffffdc1a5775
0x0000000000579d8c : sub dl, ah ; call 0xffffffffdc1a5975
0x000000000057a08c : sub dl, ah ; call 0xffffffffdc1a5c75
0x000000000054d972 : sub dl, byte ptr [rax - 0x76b70010] ; ret
0x0000000000427124 : sub dl, byte ptr [rcx] ; add byte ptr [rcx - 0x77], al ; fimul word ptr [rax - 0x77] ; ret
0x000000000059ca81 : sub dl, cl ; ret
0x000000000043610d : sub dword ptr [rax + 0x1b], edi ; ret
0x0000000000489a2e : sub dword ptr [rax + rax], eax ; xor eax, eax ; pop rbx ; ret
0x00000000005b071c : sub dword ptr [rax - 0x1354ddd], eax ; ret
0x0000000000541163 : sub dword ptr [rax - 0x38140008], ebp ; pop rbx ; ret
0x00000000004433e0 : sub dword ptr [rax - 0x7d], ecx ; ret
0x0000000000493b89 : sub dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000048ed21 : sub dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000004abb43 : sub dword ptr [rax], ecx ; add al, byte ptr [rax] ; xor eax, eax ; pop rdx ; ret
0x0000000000493b88 : sub dword ptr [rax], r8d ; add byte ptr [rax - 0x77], cl ; ret
0x000000000057d9a8 : sub dword ptr [rbp + 0x15], eax ; ret 0xefdf
0x000000000057e265 : sub dword ptr [rbp + rcx*2], esp ; ret
0x000000000059a58c : sub dword ptr [rbp - 0x55], ebx ; cmp edx, dword ptr [rbp - 0x59e6c243] ; ret
0x00000000004f2aa2 : sub dword ptr [rbp], ebx ; jmp 0x53ed35
0x000000000057d9d5 : sub dword ptr [rbx + 0x29], ebp ; xchg eax, ebp ; ret 0x492f
0x0000000000594e4b : sub dword ptr [rbx - 0x5cfe06a6], esp ; ret
0x00000000005678d3 : sub dword ptr [rbx - 0xe], edi ; inc dword ptr [rbp + 0x5b027ec0] ; ret
0x000000000042e483 : sub dword ptr [rbx], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005b74c7 : sub dword ptr [rbx], eax ; xchg eax, edx ; int1 ; ret 0x250d
0x00000000005b4994 : sub dword ptr [rbx], edx ; call qword ptr [rsi]
0x000000000058d762 : sub dword ptr [rcx], 0x562c7e09 ; ret 0x3a22
0x000000000058d763 : sub dword ptr [rcx], ecx ; jle 0x58d799 ; push rsi ; ret 0x3a22
0x000000000059befb : sub dword ptr [rdi + 0x35], 0x316bc474 ; ret 0xdc5a
0x0000000000444c43 : sub dword ptr [rdi + 8], esi ; add byte ptr [rcx], dh ; fucomi st(3) ; ret 0x2e66
0x00000000005aa336 : sub dword ptr [rdi + rcx*8 - 0x13], 0x7d ; sbb ch, ch ; push rbp ; ret 0x89e7
0x0000000000597592 : sub dword ptr [rdi - 0xe], 0xf ; ret
0x00000000004f3943 : sub dword ptr [rdx - 0x3fce0003], ecx ; pop rbx ; ret
0x000000000058cc7b : sub dword ptr [rdx - 3], ecx ; sbb byte ptr [rdx + 0x78], bl ; call qword ptr [rdx]
0x00000000005a2921 : sub dword ptr [rdx], edi ; cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rdx], dl ; jne 0x5a28ce ; jb 0x5a2934 ; ret 0x4a9d
0x00000000005a6186 : sub dword ptr [rsi + rdx*8 + 0x2e], 0x7e ; sahf ; ret 0x54c5
0x000000000052b7c3 : sub dword ptr [rsi], 0x2e81c2c9 ; leave ; ret 0x2e81
0x000000000052b7d7 : sub dword ptr [rsi], 0x2e81c2c9 ; leave ; ret 0x8581
0x0000000000598d3c : sub dword ptr [rsi], esi ; ret 0xfa3e
0x00000000005b4993 : sub dword ptr es:[rbx], edx ; call qword ptr [rsi]
0x000000000055e68b : sub eax, 0 ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000005a449b : sub eax, 0x21699a1c ; std ; cmpsd dword ptr [rsi], dword ptr [rdi] ; xlatb ; ret 0x779c
0x00000000005d6bca : sub eax, 0x2686a22c ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000059a038 : sub eax, 0x43244685 ; inc ebp ; jmp rsi
0x000000000057d315 : sub eax, 0x4a284a01 ; mov ch, al ; jno 0x57d396 ; ret
0x00000000005a314b : sub eax, 0x4d286d4 ; xchg eax, esp ; cli ; ret 0xeca0
0x00000000005a8699 : sub eax, 0x56697a2b ; ret 0x15e
0x00000000005b24f0 : sub eax, 0x57e9c835 ; ret
0x00000000005a9a57 : sub eax, 0x6d38f5e ; ret
0x00000000004f84ff : sub eax, 0x85fffd72 ; ror byte ptr [rdi], -0x7c ; ret 0
0x0000000000500ddf : sub eax, 0x89000008 ; ret
0x00000000004a7833 : sub eax, 0x89480002 ; ret
0x0000000000414b84 : sub eax, 0x8948000a ; ret
0x00000000005e6e09 : sub eax, 0x96000002 ; out dx, eax ; jmp rax
0x00000000005ae873 : sub eax, 0x9c233d7d ; cli ; ret 0x4c6b
0x0000000000578d94 : sub eax, 0x9f3f0925 ; out 8, al ; ret 0x6132
0x00000000005b1772 : sub eax, 0xae8ac887 ; rcr byte ptr [rcx - 0x3c], cl ; ret
0x00000000004e95fe : sub eax, 0xc031fffe ; add rsp, 0x38 ; ret
0x00000000004321de : sub eax, 0xc3b80057 ; xor dl, byte ptr [rdi] ; ret
0x00000000005111cc : sub eax, 0xc44071f4 ; ret 0x597d
0x000000000059d1aa : sub eax, 0xdc1cf1e4 ; push rbp ; mov dl, -0x1f ; ret
0x00000000005a385b : sub eax, 0xe2ab75b7 ; xchg eax, edi ; jmp qword ptr [rbx]
0x00000000004a2cd1 : sub eax, 0xf480082 ; ret
0x000000000047082f : sub eax, 0xff480875 ; ret
0x0000000000470a3e : sub eax, 0xff480975 ; ret
0x00000000005eaea1 : sub eax, dword ptr [rbx] ; add byte ptr [rax], al ; adc dh, bh ; call qword ptr [rax]
0x00000000005b3655 : sub eax, dword ptr [rbx] ; jae 0x5b36b6 ; and byte ptr [rbp + 9], dh ; ret
0x00000000004ea85e : sub eax, dword ptr [rcx + 0x10] ; ret
0x00000000005fee05 : sub eax, dword ptr [rcx] ; add byte ptr [rax + 0x30], cl ; jmp 0x5fee11
0x0000000000429b48 : sub eax, dword ptr [rcx] ; ret
0x00000000004200c1 : sub eax, dword ptr [rdi] ; add byte ptr [rax], al ; call 0x4cc376
0x000000000059900d : sub eax, dword ptr [rdi] ; ret 0xecf9
0x00000000004d07df : sub eax, dword ptr [rdx + 4] ; ret
0x00000000004eaca1 : sub eax, dword ptr [rdx + 8] ; ret
0x000000000059af4c : sub eax, dword ptr [rdx - 0x497ce1e5] ; ret
0x000000000043e2c0 : sub eax, dword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000060ee05 : sub eax, dword ptr [rdx] ; add byte ptr [rax], bh ; or ebx, esi ; call rbx
0x00000000004d08f9 : sub eax, dword ptr [rsi + 4] ; ret
0x0000000000443ca6 : sub eax, dword ptr [rsi + 8] ; ret
0x0000000000443712 : sub eax, dword ptr [rsi] ; ret
0x00000000005f7101 : sub eax, ebp ; call qword ptr [rdx]
0x00000000005f7131 : sub eax, ebp ; call qword ptr [rsi]
0x00000000005e341d : sub eax, ebp ; jmp qword ptr [rax]
0x0000000000556aa2 : sub eax, ebx ; push rsi ; call 0xffffffffc419004c
0x0000000000456a71 : sub eax, ecx ; add rsp, 8 ; pop rbx ; pop r14 ; ret
0x00000000004590b1 : sub eax, ecx ; ret
0x0000000000479f91 : sub eax, edi ; ret
0x0000000000599aca : sub eax, edi ; ret 0x6dc0
0x0000000000452608 : sub eax, edx ; lea rcx, qword ptr [r11 + r10 + 0x20] ; mov r10, rax ; jmp 0x452629
0x00000000004ea862 : sub eax, edx ; ret
0x0000000000404233 : sub eax, esi ; ret
0x00000000005d6bfa : sub ebp, dword ptr [rax + 0x53] ; sbb rbx, qword ptr [r8 - 0x3d] ; ret
0x00000000005b29b1 : sub ebp, dword ptr [rdi - 0x40] ; ret
0x00000000005a6a3d : sub ebp, dword ptr [rdx] ; in eax, dx ; ret
0x00000000005f7261 : sub ebp, eax ; call rdx
0x00000000005e5b45 : sub ebp, ebp ; call qword ptr [rax]
0x0000000000448b5f : sub ebp, ebx ; rol ch, 1 ; int1 ; cld ; ret 0x894c
0x00000000005ac589 : sub ebp, ebx ; scasd eax, dword ptr [rdi] ; add bl, ah ; ret 0xcd52
0x00000000005fc321 : sub ebp, edx ; call qword ptr [rcx]
0x00000000005e3f25 : sub ebp, edx ; call rax
0x00000000005a886a : sub ebp, edx ; jmp 0x5a885e
0x00000000004904cd : sub ebx, dword ptr [rax] ; ret
0x00000000004f3032 : sub ebx, dword ptr [rbp] ; call 0x53f255
0x0000000000430631 : sub ebx, dword ptr [rcx + 0xb] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005783a1 : sub ebx, dword ptr [rip + 0x39260f36] ; sbb dword ptr [rax + 0x79], esp ; ret 0x819
0x00000000005a05b1 : sub ebx, ebp ; jp 0x5a05d2 ; ret
0x000000000059ca9f : sub ebx, ebp ; ret 0x4683
0x000000000059cdfc : sub ebx, ebx ; ret
0x0000000000596ccd : sub ebx, edi ; add eax, edi ; out dx, eax ; ret
0x0000000000579b89 : sub ecx, -0x36 ; sub dl, ah ; call 0xffffffffdc1a5778
0x0000000000579d89 : sub ecx, -0x36 ; sub dl, ah ; call 0xffffffffdc1a5978
0x000000000057a089 : sub ecx, -0x36 ; sub dl, ah ; call 0xffffffffdc1a5c78
0x000000000053a0c1 : sub ecx, dword ptr [rax - 0x7d] ; ret
0x000000000045a0cc : sub ecx, dword ptr [rax - 1] ; ret
0x00000000004034fc : sub ecx, eax ; mov eax, ecx ; pop rdx ; ret
0x00000000005f9381 : sub ecx, ebp ; call qword ptr [rbx]
0x00000000005b0b10 : sub ecx, ecx ; cmp dword ptr [rbp - 0x2c312c3a], esi ; ret 0x1203
0x00000000005a4f58 : sub ecx, edx ; pop rsi ; pop rbp ; push rsp ; pop rsp ; ret
0x00000000005e8485 : sub ecx, esi ; call qword ptr [rax]
0x0000000000467931 : sub edi, dword ptr [rax + rax] ; add byte ptr [rbp - 0x7c118b40], al ; ret
0x00000000005a869a : sub edi, dword ptr [rdx + 0x69] ; push rsi ; ret 0x15e
0x0000000000498247 : sub edi, ebp ; dec dword ptr [rax - 0x77] ; ret
0x0000000000527512 : sub edi, ebp ; ret
0x0000000000449257 : sub edi, ebp ; rol esp, cl ; ret
0x0000000000546631 : sub edi, ecx ; stc ; dec dword ptr [rax - 0x77] ; ret
0x000000000048f3d2 : sub edi, esi ; dec dword ptr [rax - 0x68] ; pop rdx ; ret
0x00000000005b1666 : sub edi, esi ; ret
0x000000000059842d : sub edx, dword ptr [rax - 0x25bdead] ; xlatb ; push rcx ; push rax ; ret
0x00000000005b6da9 : sub edx, dword ptr [rbx + rax - 0x35] ; push rdx ; ror bl, cl ; ror dword ptr [rbx], cl ; ret 0xd5b3
0x000000000057e8f4 : sub edx, dword ptr [rbx - 0x7d76c821] ; and al, 0xffffffffffffffc4 ; ret
0x000000000042dfcf : sub edx, dword ptr [rdi] ; mov eax, 0x56f0ae ; ret
0x00000000004ce1da : sub edx, eax ; imul rax, rdx, 0xd ; xor rax, rcx ; ret
0x000000000045251c : sub edx, eax ; jmp 0x452521
0x0000000000452832 : sub edx, eax ; jmp 0x452841
0x00000000004e1372 : sub edx, eax ; jmp 0x4e1383
0x00000000004e146d : sub edx, eax ; jmp 0x4e147e
0x00000000004eaa78 : sub edx, eax ; mov eax, edx ; ret
0x00000000005e3ed5 : sub edx, ebp ; call rax
0x00000000005abcfe : sub edx, ecx ; ret
0x0000000000564aea : sub esi, 1 ; jne 0x564adf ; ret
0x0000000000564b80 : sub esi, 1 ; jne 0x564b46 ; ret
0x00000000005964c5 : sub esi, dword ptr [rax - 0x5cdf15b3] ; insd dword ptr [rdi], dx ; ret
0x00000000005a87e9 : sub esi, dword ptr [rbx - 0x50] ; mov ah, -0x54 ; ret
0x000000000048f283 : sub esi, eax ; cmp dword ptr [rax], eax ; ret
0x0000000000607239 : sub esi, ebp ; jmp rbx
0x0000000000610f11 : sub esi, ebx ; call rdi
0x00000000005b50fb : sub esi, ebx ; sar dword ptr [rsi], 1 ; ret
0x000000000055bfb1 : sub esi, ecx ; pop rbp ; add byte ptr [rcx - 0x48], al ; ret 0
0x00000000005ea2cd : sub esi, esi ; call qword ptr [rax]
0x000000000048aaed : sub esi, esi ; ret
0x00000000005b0a5d : sub esi, esp ; jmp qword ptr [rdi]
0x0000000000569355 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000535324 : sub esp, eax ; ret
0x00000000005b619b : sub esp, ebx ; leave ; push rdi ; ret
0x00000000005a04ca : sub esp, ebx ; or ebx, dword ptr [rbx] ; ret
0x00000000005f5091 : sub esp, edi ; jmp qword ptr [rcx]
0x00000000005b5012 : sub esp, edi ; ret 0x5007
0x00000000005a6185 : sub qword ptr [r14 + rdx*8 + 0x2e], 0x7e ; sahf ; ret 0x54c5
0x000000000045251b : sub r10, rax ; jmp 0x452522
0x0000000000452831 : sub r10, rax ; jmp 0x452842
0x00000000004e1371 : sub r10, rax ; jmp 0x4e1384
0x00000000004e146c : sub r10, rax ; jmp 0x4e147f
0x00000000005276db : sub r12b, al ; ret
0x0000000000529991 : sub r12b, r8b ; sar dword ptr [rcx + 0x6e], 0x51 ; sub ah, al ; ret
0x0000000000449256 : sub r15d, ebp ; rol esp, cl ; ret
0x00000000004a7832 : sub rax, -0x76b7fffe ; ret
0x0000000000479f90 : sub rax, rdi ; ret
0x00000000005d6bf9 : sub rbp, qword ptr [r8 + 0x53] ; sbb rbx, qword ptr [r8 - 0x3d] ; ret
0x0000000000569354 : sub rsp, 8 ; add rsp, 8 ; ret
0x00000000005b257e : sub spl, byte ptr [r9 + 0x37] ; fstp xword ptr [rdx] ; ret
0x00000000004e5ede : sysenter
0x000000000059f52a : test ah, ah ; ret
0x00000000004bd8a3 : test ah, cl ; add byte ptr [rax], al ; add al, ch ; ret
0x00000000005e7e95 : test al, -0x10 ; call qword ptr [rax]
0x00000000005e7ed5 : test al, -0x10 ; call rax
0x00000000004f744f : test al, -0x10 ; dec dword ptr [rax - 0x77] ; ret
0x00000000005e6ec5 : test al, -0x11 ; jmp qword ptr [rax]
0x00000000005e573d : test al, -0x14 ; call qword ptr [rax]
0x00000000005e572d : test al, -0x14 ; jmp rax
0x00000000005e368d : test al, -0x18 ; call rax
0x00000000005ac96f : test al, -0x19 ; or esp, dword ptr [rbx] ; jmp rcx
0x00000000006174f8 : test al, -0x1b ; hlt ; call qword ptr [rsi]
0x0000000000617278 : test al, -0x1c ; hlt ; call qword ptr [rsi]
0x00000000005e1ee5 : test al, -0x1c ; jmp rax
0x000000000059fa98 : test al, -0x21 ; insb byte ptr [rdi], dx ; ret
0x00000000005e9918 : test al, -0x24 ; add al, byte ptr [rax] ; sub ch, -0xb ; jmp rax
0x00000000005a4d89 : test al, -0x26 ; jg 0x5a4d9e ; sbb bh, al ; ret
0x00000000005a4d88 : test al, -0x26 ; jg 0x5a4d9f ; sbb bh, al ; ret
0x00000000005e5970 : test al, -0x29 ; add dword ptr [rax], eax ; and bl, ch ; in al, dx ; jmp rax
0x00000000005b5716 : test al, -0x29 ; cli ; lodsb al, byte ptr [rsi] ; ret 0x1c5b
0x00000000005e5898 : test al, -0x2d ; add dword ptr [rax], eax ; nop ; ret 0xffec
0x00000000005e1a58 : test al, -0x30 ; add byte ptr [rax], al ; push rax ; out -0x1d, al ; jmp rax
0x00000000005e56a8 : test al, -0x35 ; add dword ptr [rax], eax ; sahf ; in al, dx ; jmp rax
0x0000000000596028 : test al, -0x3b ; ret
0x0000000000511599 : test al, -0x3c ; jle 0x511616 ; push rbp ; call 0x4a139ef5
0x00000000005980dd : test al, -0x3d ; ret
0x00000000005368d7 : test al, -0x3f ; ret
0x00000000005e53b8 : test al, -0x42 ; add dword ptr [rax], eax ; rol byte ptr [rbp - 0x14], 1 ; jmp rax
0x00000000005e9240 : test al, -0x44 ; add al, byte ptr [rax] ; mov al, -0x51 ; jmp rax
0x00000000005a0e1f : test al, -0x45 ; test eax, 0x5b0a7e37 ; jno 0x5a0dd2 ; ret
0x00000000005e5268 : test al, -0x47 ; add dword ptr [rax], eax ; loopne 0x5e52a8 ; in al, dx ; jmp rax
0x00000000005e5238 : test al, -0x48 ; add dword ptr [rax], eax ; sbb esp, ebp ; jmp rax
0x000000000060e2d8 : test al, -0x4f ; jmp qword ptr [rdx]
0x00000000005b7a72 : test al, -0x4f ; ret 0xf0ad
0x00000000005e4fd8 : test al, -0x51 ; add dword ptr [rax], eax ; nop ; xlatb ; jmp 0x5e4fe6
0x00000000005a20ab : test al, -0x52 ; mov al, 5 ; ret
0x00000000005a60ff : test al, -0x55 ; ret 0x65c7
0x000000000053209f : test al, -0x6f ; xchg eax, edi ; clc ; sal byte ptr [rax - 0x75], 1 ; ret 0xbe30
0x0000000000604b18 : test al, -0x71 ; in eax, dx ; call rsp
0x00000000005e84d8 : test al, -0x7a ; add al, byte ptr [rax] ; xor byte ptr [rdi], 0xf1 ; jmp rax
0x0000000000578821 : test al, -0x7a ; fimul dword ptr [rax - 0x1414017] ; ret
0x00000000005a60e3 : test al, -0x7d ; and eax, 0xb0a61ee3 ; ret 0xb9c9
0x00000000005ae884 : test al, -0x7d ; ret
0x00000000005b473e : test al, -0xc ; ret 0x82f4
0x0000000000618438 : test al, -1 ; hlt ; call qword ptr [rax]
0x00000000005e2658 : test al, -2 ; add byte ptr [rax], al ; and byte ptr [rax - 0x1b], bl ; call rax
0x00000000004fd8d1 : test al, -2 ; dec dword ptr [rax - 0x77] ; ret
0x000000000055f377 : test al, -3 ; dec dword ptr [rax - 0x77] ; ret
0x00000000005e6190 : test al, -7 ; add dword ptr [rax], eax ; loopne 0x5e61c2 ; out dx, al ; jmp rax
0x00000000005a458c : test al, -7 ; cmp esi, dword ptr [rsi] ; or byte ptr [rsi + 0x48], ch ; ret
0x00000000004773ed : test al, -8 ; dec dword ptr [rax - 0x77] ; ret
0x00000000005aa828 : test al, -8 ; ret 0xc375
0x00000000004ca922 : test al, 0 ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000047e2c6 : test al, 0 ; add byte ptr [rax], al ; mov rdx, rcx ; call r9
0x000000000040dbc9 : test al, 0 ; add byte ptr [rax], al ; ret
0x00000000005f6afd : test al, 0 ; add byte ptr [rax], dh ; adc ebp, eax ; jmp qword ptr [rsi]
0x00000000005e2c30 : test al, 0x18 ; add dword ptr [rax], eax ; push rax ; jae 0x5e2c24 ; jmp rax
0x00000000006107e8 : test al, 0x18 ; call qword ptr [rax]
0x00000000005e2e00 : test al, 0x1f ; add dword ptr [rax], eax ; adc byte ptr [rbp - 0x19], ah ; call rax
0x00000000004ef2c5 : test al, 0x21 ; pop rbp ; add byte ptr [rcx - 0x48], al ; ret
0x00000000004f6184 : test al, 0x24 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000005e6c88 : test al, 0x25 ; add al, byte ptr [rax] ; jo 0x5e6cc6 ; out dx, eax ; jmp rax
0x00000000004f6144 : test al, 0x25 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x0000000000431f64 : test al, 0x2c ; push rdi ; add byte ptr [rax + 0x5739bc], bh ; ret
0x00000000005e6e40 : test al, 0x2e ; add al, byte ptr [rax] ; loopne 0x5e6de8 ; out dx, eax ; call rax
0x00000000005d6cfb : test al, 0x30 ; add al, 0x34 ; xor al, 0xffffffffffffffd2 ; ret 0xd012
0x00000000005e3510 : test al, 0x3e ; add dword ptr [rax], eax ; push rax ; jge 0x5e3506 ; jmp rax
0x0000000000608308 : test al, 0x47 ; out dx, al ; call rdi
0x000000000060bda8 : test al, 0x48 ; out dx, eax ; jmp rcx
0x00000000005a7bf2 : test al, 0x4c ; xchg eax, ebp ; ret
0x00000000005b4990 : test al, 0x54 ; cmp esp, dword ptr [rsi] ; sub dword ptr [rbx], edx ; call qword ptr [rsi]
0x00000000005a75d7 : test al, 0x56 ; push rsi ; lodsb al, byte ptr [rsi] ; pushfq ; ret 0x9c69
0x000000000058d719 : test al, 0x62 ; xchg eax, edi ; ret
0x000000000057d2e3 : test al, 0x64 ; ret 0x579f
0x00000000005a4f55 : test al, 0x68 ; shr byte ptr [rbx], -0x36 ; pop rsi ; pop rbp ; push rsp ; pop rsp ; ret
0x00000000005ebef8 : test al, 0x6a ; add eax, dword ptr [rax] ; add byte ptr [rdx - 8], ah ; jmp rax
0x000000000059a000 : test al, 0x6e ; int1 ; ret
0x000000000052b83f : test al, 0x70 ; mov ecx, dword ptr [rbx - 0x3e] ; jo 0x52b7d9 ; ret 0x8b70
0x0000000000604358 : test al, 0x73 ; in eax, dx ; call qword ptr [rsi]
0x000000000046a970 : test al, 0xe ; cmp al, 0 ; ret
0x00000000005b75ae : test al, 0xe ; loopne 0x5b75da ; ret
0x000000000042c0cf : test al, 1 ; add byte ptr [rax], al ; mov rax, rdx ; pop rdx ; ret
0x0000000000606a5d : test al, 1 ; add byte ptr [rax], dh ; or ebp, esi ; call rdi
0x000000000043227f : test al, 2 ; add byte ptr [rax], al ; mov eax, 0x573ae3 ; ret
0x000000000043d478 : test al, 2 ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x000000000043d2a6 : test al, 2 ; add byte ptr [rax], al ; mov rdi, rbx ; call rcx
0x000000000042c099 : test al, 2 ; add byte ptr [rax], al ; pop rdx ; ret
0x00000000004c9327 : test al, 7 ; setne al ; movzx eax, al ; pop rdx ; ret
0x000000000048ec1a : test al, al ; je 0x48ec25 ; pop rbx ; ret
0x00000000004aaefe : test al, al ; je 0x4aaf09 ; pop rax ; ret
0x000000000049f0dc : test al, bl ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret
0x00000000004599bc : test bh, dl ; dec dword ptr [rax + 0x63] ; ret
0x000000000057dc4c : test bl, 2 ; cli ; ret
0x0000000000612a8c : test byte ptr [rax + 2], ch ; add byte ptr [rax - 0x63], ah ; call qword ptr [rbx]
0x0000000000431da7 : test byte ptr [rax + rax], al ; add byte ptr [rax + 0x5730cf], bh ; ret
0x00000000005eee8c : test byte ptr [rax + rax], ch ; add al, al ; mov al, -0x1d ; jmp qword ptr [rdx]
0x00000000005ece8c : test byte ptr [rax + rax], cl ; add al, dl ; fsubrp st(1) ; call qword ptr [rcx]
0x00000000005156a9 : test byte ptr [rax + rbx*8], ah ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], al ; ret 0xc141
0x000000000040752e : test byte ptr [rax + rcx*4], ah ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0x903b
0x000000000053d25f : test byte ptr [rax + rdx*4], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x00000000004ba277 : test byte ptr [rax + rdx*4], ah ; add byte ptr [rax], al ; add cl, ch ; ret 0xfff8
0x000000000049a286 : test byte ptr [rax + rdx*8], ah ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0x000000000043432c : test byte ptr [rax + rdx], ah ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000441ebb : test byte ptr [rax - 0x1000000], ch ; ret
0x0000000000467986 : test byte ptr [rax - 0x77000000], dl ; ret
0x00000000004e5f31 : test byte ptr [rax - 0x77], -0x21 ; call rax
0x000000000043cf5b : test byte ptr [rax - 0x77], -0x26 ; mov rcx, r13 ; call 0x539189
0x000000000044191f : test byte ptr [rax - 0x77], -0x39 ; call rbx
0x00000000004adef1 : test byte ptr [rax - 0x77], -0x39 ; pop rax ; jmp rcx
0x000000000050462d : test byte ptr [rax - 0x7d], -0x3c ; adc byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; jmp rax
0x00000000004f35f3 : test byte ptr [rax - 0x7d], -0x3c ; or byte ptr [rbx + 0x41], bl ; pop rsi ; jmp rcx
0x00000000004424e8 : test byte ptr [rax - 0xfffffc], dl ; ret
0x0000000000499660 : test byte ptr [rax - 2], dl ; ret
0x00000000005e2459 : test byte ptr [rax], 0 ; add byte ptr [rbx], -0x1b ; call rax
0x0000000000489ae6 : test byte ptr [rax], 0xb ; add byte ptr [rcx], bh ; ret
0x0000000000499cb5 : test byte ptr [rax], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000434472 : test byte ptr [rax], ah ; add dword ptr [rax], eax ; add byte ptr [rax + 1], cl ; ret
0x00000000004b79ba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi + 0x20], esi ; ret
0x000000000042e57a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi + 0x40], esi ; ret
0x000000000042e59a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi + 0x44], esi ; ret
0x0000000000456afa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], esi ; ret
0x00000000004b79aa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x20] ; ret
0x0000000000461baa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x24] ; ret
0x000000000056080a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x00000000004b7b2a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x2c] ; ret
0x000000000042eb6a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x38] ; ret
0x000000000042e58a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x40] ; ret
0x000000000042e5aa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x44] ; ret
0x000000000042bf8a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x48] ; ret
0x00000000004d035a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x64] ; ret
0x00000000004d033a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x68] ; ret
0x00000000004d031a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0xc] ; ret
0x0000000000456b0a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 4] ; ret
0x00000000004d032a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 8] ; ret
0x000000000042e5ba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; ret
0x000000000055e97a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, edi ; ret
0x0000000000479a5a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, edx ; ret
0x00000000004c63ba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x000000000042dcba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi] ; ret
0x00000000004d197a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; movsxd rax, dword ptr [rdi] ; ret
0x00000000004abbe9 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x000000000049ce89 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; xor eax, eax ; ret
0x000000000046106a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; or dword ptr [rdi + 0x20], esi ; ret
0x00000000004b7b3a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; or dword ptr [rdi + 0x2c], esi ; ret
0x000000000047db6a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040dbda : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042c2d9 : test byte ptr [rax], al ; add byte ptr [rax], al ; pop rdx ; ret
0x0000000000500215 : test byte ptr [rax], bl ; add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x00000000004a96f2 : test byte ptr [rax], bl ; ret
0x0000000000458860 : test byte ptr [rax], dl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004e48f0 : test byte ptr [rax], dl ; ret
0x0000000000606f8c : test byte ptr [rbp + 0x1b000001], ch ; out dx, al ; call qword ptr [rbx]
0x0000000000616f8c : test byte ptr [rbp - 0x1c4ffffe], ch ; hlt ; call qword ptr [rsi]
0x00000000004415e8 : test byte ptr [rbp - 0x3fcefff8], ch ; pop rdx ; ret
0x0000000000447360 : test byte ptr [rbp - 0x72093ded], 0x13 ; ret 0xd890
0x000000000046cae9 : test byte ptr [rbp - 0x7cffffff], bl ; ret
0x00000000004c9ee6 : test byte ptr [rbp - 0xa000000], dh ; ret
0x00000000005515a2 : test byte ptr [rbx + 0x60], 7 ; jne 0x5515b3 ; xor eax, eax ; pop rbx ; ret
0x000000000061258c : test byte ptr [rbx + 2], ah ; add al, ah ; mov ebx, dr0 ; call qword ptr [rsi]
0x000000000055f85f : test byte ptr [rbx - 0x1000000], ah ; ret
0x00000000004ed1ae : test byte ptr [rbx - 0x1000000], bl ; ret
0x00000000005ad3e3 : test byte ptr [rbx - 0x18], 0x27 ; fcmovbe st(0), st(1) ; ret 0x13e6
0x0000000000598296 : test byte ptr [rbx - 0x652b2ef3], cl ; push rsi ; scasb al, byte ptr [rdi] ; ret 0x2687
0x00000000004c9f18 : test byte ptr [rbx - 0xa000000], al ; ret
0x0000000000599918 : test byte ptr [rbx], dh ; push rsp ; ret
0x00000000005a7ddc : test byte ptr [rcx + 0xc], bl ; ret 0xf245
0x0000000000600b8c : test byte ptr [rcx + 1], cl ; add byte ptr [rax + 0x20], al ; in al, dx ; jmp qword ptr [rax]
0x000000000061338c : test byte ptr [rcx + 2], dh ; add byte ptr [rax - 0x50], dh ; jmp qword ptr [rdx]
0x0000000000458ed6 : test byte ptr [rcx + rcx*4 - 0x10], 0x5b ; pop r14 ; pop r15 ; ret
0x0000000000425f25 : test byte ptr [rcx + rcx*4 - 0x10], 0x5b ; pop r14 ; pop rbp ; ret
0x000000000043ea0e : test byte ptr [rcx + rcx*4 - 0x11], 0x41 ; call rdi
0x0000000000459704 : test byte ptr [rcx + rcx*4 - 0x19], 0x41 ; call rdi
0x00000000004d34ca : test byte ptr [rcx + rcx*4 - 0x1e], 0x41 ; call rdi
0x000000000046ed0b : test byte ptr [rcx + rcx*4 - 1], -0x18 ; cld ; ret 0xffff
0x000000000047dc1a : test byte ptr [rcx + rcx*4 - 6], 0x41 ; call rsp
0x00000000004f8745 : test byte ptr [rcx + rcx*4 - 9], 0x41 ; call rsp
0x00000000004707d9 : test byte ptr [rcx + rdi - 3], 0x75 ; ret
0x00000000005d6fc6 : test byte ptr [rcx - 0x2d2be93a], al ; ret
0x000000000060538c : test byte ptr [rcx - 0x498fffff], dl ; in eax, dx ; jmp rdx
0x00000000005a87e7 : test byte ptr [rcx - 0x4b4f8cd5], bl ; lodsb al, byte ptr [rsi] ; ret
0x00000000004c740b : test byte ptr [rcx - 0x77], -0x28 ; pop rbx ; pop r14 ; pop rbp ; jmp rax
0x0000000000551dda : test byte ptr [rcx - 0x7cffffff], dl ; ret
0x00000000005e60d9 : test byte ptr [rcx], 0 ; push rax ; ret 0xffed
0x00000000005e60b9 : test byte ptr [rcx], 0 ; rol al, -0x13 ; jmp qword ptr [rax]
0x00000000004ad1e5 : test byte ptr [rcx], 0x48 ; lea edi, dword ptr [rsp + 0x40] ; call r14
0x00000000006046dd : test byte ptr [rcx], al ; add al, ah ; jge 0x6046d6 ; jmp qword ptr [rax]
0x00000000004bb80f : test byte ptr [rcx], al ; add byte ptr [rax], al ; jmp 0x4bb7b9
0x00000000005e44c9 : test byte ptr [rcx], al ; add byte ptr [rax], dh ; mov ch, -0x16 ; jmp qword ptr [rax]
0x000000000046a7e3 : test byte ptr [rcx], cl ; add dword ptr [rax], eax ; add dh, dh ; ret
0x000000000042be8a : test byte ptr [rdi + 0x44], 2 ; je 0x42bebf ; pop rdx ; ret
0x000000000042bf4d : test byte ptr [rdi + 0x49], 0x30 ; je 0x42bf82 ; pop rdx ; ret
0x0000000000566e7b : test byte ptr [rdi - 0x1000000], dh ; ret
0x000000000045536c : test byte ptr [rdi - 0xffffff], bl ; ret
0x00000000004e4f5f : test byte ptr [rdi], -0x61 ; ret 0xb60f
0x0000000000439cc5 : test byte ptr [rdi], -0x6b ; ret 0xca08
0x0000000000421367 : test byte ptr [rdi], -0x7c ; add eax, 0xf6000003 ; ret
0x00000000004bb745 : test byte ptr [rdi], -0x7c ; leave ; add byte ptr [rax], al ; add al, ch ; out dx, eax ; ret
0x0000000000544e8e : test byte ptr [rdi], -0x7c ; ret 2
0x000000000055b6ad : test byte ptr [rdi], -0x7c ; sahf ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000593c0c : test byte ptr [rdi], al ; jmp qword ptr [rdi]
0x0000000000458c3c : test byte ptr [rdi], bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000458c94 : test byte ptr [rdi], cl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000606c8c : test byte ptr [rdx + 0x14d00001], ch ; out dx, al ; jmp qword ptr [rdi]
0x0000000000485d5f : test byte ptr [rdx - 0x1000000], bl ; ret
0x000000000061748c : test byte ptr [rdx - 0x1a8ffffe], dh ; hlt ; call qword ptr [rsi]
0x00000000004b30c8 : test byte ptr [rdx - 5], bh ; dec dword ptr [rax - 0x77] ; ret
0x00000000005e8471 : test byte ptr [rdx], al ; add al, dh ; sub cl, dh ; call rax
0x00000000005e8481 : test byte ptr [rdx], al ; add al, dl ; sub ecx, esi ; call qword ptr [rax]
0x00000000004322a3 : test byte ptr [rdx], al ; add byte ptr [rax], al ; mov eax, 0x573a79 ; ret
0x00000000004f599d : test byte ptr [rdx], dh ; add al, byte ptr [rax] ; add bh, bh ; ret
0x00000000005ae4f0 : test byte ptr [rdx], dh ; mov al, 5 ; pushfq ; mov dh, 0x37 ; je 0x5ae527 ; ret 0x6948
0x0000000000421369 : test byte ptr [rip - 0x9fffffd], al ; ret
0x00000000004711cb : test byte ptr [rip - 1], al ; ret
0x0000000000551a33 : test byte ptr [rsi + 0x50], -0x40 ; je 0x551a43 ; mov eax, edi ; ret
0x0000000000551958 : test byte ptr [rsi + 0x50], 0x20 ; je 0x551968 ; mov eax, edi ; ret
0x0000000000551b03 : test byte ptr [rsi + 0x50], 0x20 ; je 0x551b13 ; mov eax, edi ; ret
0x0000000000551b97 : test byte ptr [rsi + 0x60], 7 ; je 0x551ba4 ; ret
0x0000000000551c23 : test byte ptr [rsi + 0x60], 7 ; jne 0x551c33 ; xor eax, eax ; ret
0x000000000060288c : test byte ptr [rsi + 1], ah ; add byte ptr [rax - 0x45], dh ; in al, dx ; call qword ptr [rbx]
0x0000000000426d30 : test byte ptr [rsi - 0x1000000], dl ; ret
0x000000000061788c : test byte ptr [rsi - 0x18effffe], dh ; hlt ; call qword ptr [rcx]
0x000000000060e88c : test byte ptr [rsi], ah ; add al, byte ptr [rax] ; push rax ; sal edx, 1 ; call rsp
0x00000000005a0fe8 : test byte ptr [rsi], bh ; adc byte ptr [rcx - 0x18bf7c53], dl ; ret
0x00000000004f8538 : test byte ptr [rsp + rdx], ah ; add eax, 0x1480000 ; ret
0x00000000004e917c : test byte ptr [rsp + rsi], dl ; add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rax ; ret
0x00000000005d6f8d : test byte ptr [rsp], ah ; ret
0x00000000004be5c2 : test ch, -0x3c ; ret 0xf78b
0x000000000057da14 : test ch, 0x2b ; xchg eax, ebx ; ret
0x00000000004588c4 : test ch, ah ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000005e5565 : test ch, ah ; call qword ptr [rax]
0x00000000005e5555 : test ch, ah ; jmp rax
0x00000000005e6d7d : test ch, bh ; jmp qword ptr [rax]
0x00000000006047f1 : test ch, ch ; call rbx
0x00000000005e643d : test ch, dh ; call rax
0x00000000004be644 : test cl, -0x3c ; ret 0xf789
0x00000000005517d6 : test cl, 7 ; jne 0x5517c1 ; ret
0x0000000000551894 : test cl, 7 ; jne 0x55187f ; ret
0x00000000004bb747 : test cl, cl ; add byte ptr [rax], al ; add al, ch ; out dx, eax ; ret
0x000000000048cb95 : test cl, cl ; cmovne rsi, rdx ; jmp 0x48cb67
0x000000000050484d : test cl, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x90
0x00000000004c9ecd : test cl, dh ; add byte ptr [rax], al ; add dh, dh ; ret
0x0000000000596d5c : test cl, dh ; ret 0x370f
0x000000000054d4f6 : test dh, -2 ; dec dword ptr [rax - 0x77] ; ret
0x00000000004ed8ea : test dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000445fa7 : test dl, ah ; add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 0xfff0
0x00000000005f998c : test dl, bh ; add byte ptr [rax], al ; and byte ptr [rbx - 0x17], al ; jmp qword ptr [rax]
0x0000000000413de4 : test dl, dh ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000055751a : test dl, dh ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x6b ; call rbx
0x000000000050a883 : test dl, dl ; add byte ptr [rax], al ; add al, ch ; ret
0x0000000000415f0b : test dl, dl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000040880c : test dl, dl ; je 0x40881f ; or eax, 0x80 ; ret
0x00000000005a8007 : test dword ptr [rax - 0x16], ebx ; mov ecx, 0x7df9efdc ; ret 0x666d
0x00000000004c486e : test dword ptr [rax - 0x17000000], ecx ; ret 4
0x000000000047c0bf : test dword ptr [rax - 0x2a], eax ; push rdi ; add byte ptr [rax + 0x29], cl ; ret 0x314c
0x000000000047c038 : test dword ptr [rax - 0x2e], eax ; push rdi ; add byte ptr [rax + 0x29], cl ; ret 0x48b
0x00000000005a7a81 : test dword ptr [rax - 0x45], esp ; jno 0x5a7a66 ; and edi, edx ; wait ; call rsp
0x00000000005a8d0b : test dword ptr [rax - 0x5d], 0xe1ebd365 ; ret 0x6819
0x00000000004cfae1 : test dword ptr [rax - 0x77], 0x5e415bd9 ; pop r15 ; jmp rax
0x00000000004977f4 : test dword ptr [rax - 0x77], 0x5e415bde ; pop r15 ; jmp rcx
0x000000000053f769 : test dword ptr [rax - 0x77], 0x5e415bde ; pop rbp ; jmp rax
0x0000000000461a36 : test dword ptr [rax - 0x77], 0xc18949da ; call r15
0x00000000004098ea : test dword ptr [rax - 0x77], 0xca8948d6 ; call rax
0x00000000004b1646 : test dword ptr [rax - 0x7b], 0xe81075ff ; jmp qword ptr [rdi]
0x0000000000542a05 : test dword ptr [rax], 0x89480001 ; ret
0x00000000005e24a1 : test dword ptr [rax], 0xe5064000 ; call rax
0x00000000005fb9b5 : test dword ptr [rax], 0xe9fbf800 ; call qword ptr [rsi]
0x00000000004a9722 : test dword ptr [rax], ebx ; ret
0x000000000059989c : test dword ptr [rax], ecx ; ret
0x000000000042a9d7 : test dword ptr [rbp - 0x76b7fff5], esi ; ret
0x000000000048d34e : test dword ptr [rbp - 0xa000000], ebp ; ret 0xf20
0x000000000049a27d : test dword ptr [rbp - 0xfffffe], esi ; ret
0x0000000000595572 : test dword ptr [rbx + 0x58], ebp ; ret 0xe466
0x00000000005a1261 : test dword ptr [rbx + rsi*8 - 0x728c136b], ecx ; ret
0x00000000005b4e60 : test dword ptr [rbx - 0x31c5f928], ebx ; ret 0x898
0x00000000004d34c7 : test dword ptr [rcx + rcx*4 - 0xa], 0x41e2894c ; call rdi
0x000000000047dc17 : test dword ptr [rcx + rcx*4 - 0xa], 0x41fa894c ; call rsp
0x00000000005e6101 : test dword ptr [rcx], 0xedc52000 ; jmp qword ptr [rax]
0x00000000005e6131 : test dword ptr [rcx], 0xedfcc000 ; call qword ptr [rax]
0x00000000006047ed : test dword ptr [rcx], eax ; add byte ptr [rax], ah ; test ch, ch ; call rbx
0x000000000052b45d : test dword ptr [rcx], esi ; and al, 0xffffffffffffffc3 ; jge 0x52b476 ; push rbp ; ret
0x00000000005a9683 : test dword ptr [rdi - 0x68aa1078], esp ; jrcxz 0x5a963d ; pop rdx ; ret 0xd69
0x000000000050cfd7 : test dword ptr [rdi - 0x76b70003], ecx ; ret
0x0000000000457281 : test dword ptr [rdi], 0x2a683 ; add byte ptr [rax - 1], cl ; ret 0xc239
0x00000000005a565f : test dword ptr [rdx], 0x219773d4 ; ret
0x000000000049cb87 : test dword ptr [rdx], 0x5ac03100 ; ret
0x0000000000513225 : test dword ptr [rdx], 0x894c0000 ; ret 0x894c
0x00000000005ea169 : test dword ptr [rdx], 0xf61b5000 ; jmp qword ptr [rax]
0x00000000005e84b9 : test dword ptr [rdx], eax ; add al, dh ; int1 ; jmp qword ptr [rax]
0x0000000000447fb5 : test dword ptr [rdx], esp ; add eax, dword ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; call qword ptr [rax]
0x00000000005d67c6 : test dword ptr [rip + 0x16c6d2d4], eax ; rcl bl ; ret
0x000000000059a039 : test dword ptr [rsi + 0x24], eax ; inc r13d ; jmp rsi
0x000000000048d357 : test dword ptr [rsi], eax ; add dword ptr [rax], eax ; add dh, dh ; ret 0xf08
0x00000000005a9ace : test dword ptr [rsi], ebx ; push rsp ; jle 0x5a9af5 ; xchg eax, esp ; or byte ptr [rdx + 0x69], bh ; ret
0x00000000005a9a6e : test dword ptr [rsi], edi ; wait ; ret
0x000000000057d9d3 : test eax, 0x296b299e ; xchg eax, ebp ; ret 0x492f
0x00000000005a6e53 : test eax, 0x3c37951e ; ret
0x000000000059a4e4 : test eax, 0x425ad0d5 ; ret
0x00000000004e5db3 : test eax, 0x48003410 ; mov dword ptr [rdx], eax ; ret
0x00000000004d025d : test eax, 0x5b000001 ; ret
0x00000000005a0e21 : test eax, 0x5b0a7e37 ; jno 0x5a0dd0 ; ret
0x00000000005aee2b : test eax, 0x5e4fdc3c ; mov ds, word ptr [rbp + 3] ; ret 0x37ca
0x000000000045d136 : test eax, 0x634825eb ; ret
0x00000000005a6723 : test eax, 0x68206634 ; call rax
0x00000000005b2f7a : test eax, 0x813de778 ; cmp dword ptr [edx + 0x42], esi ; ret
0x00000000004a6a43 : test eax, 0x85003857 ; ror byte ptr [rdi], -0x7c ; ret 0
0x00000000004f73e1 : test eax, 0x8948fff0 ; ret
0x00000000004fc045 : test eax, 0x8948fff5 ; ret
0x0000000000477474 : test eax, 0x8948fff8 ; ret
0x000000000054f2e9 : test eax, 0x8948fffe ; ret
0x00000000005991ab : test eax, 0x8965bf ; jmp qword ptr [rax]
0x0000000000577f7e : test eax, 0x9f60c4c1 ; ret 0x5c9e
0x000000000058d2fd : test eax, 0xa25f8d6f ; ret 0x7455
0x00000000005e4e51 : test eax, 0xacc00001 ; jmp 0x5e4e5d
0x000000000040891c : test eax, 0xb8410056 ; ret
0x000000000050805f : test eax, 0xc10ec7c1 ; ret
0x000000000059d6fb : test eax, 0xd28fb8af ; clc ; push rcx ; ret 0x2a40
0x0000000000593a52 : test eax, 0xe2594c30 ; ret 0xfe43
0x00000000005a8255 : test eax, 0xe947e791 ; out dx, al ; jp 0x5a8223 ; ret 0x50e7
0x00000000005e8d61 : test eax, 0xeab00002 ; int1 ; jmp qword ptr [rax]
0x00000000005e8d99 : test eax, 0xed000002 ; int1 ; jmp rax
0x00000000005e8da9 : test eax, 0xee300002 ; int1 ; call qword ptr [rax]
0x0000000000478f03 : test eax, eax ; cmove ebx, eax ; mov eax, ebx ; pop rbx ; ret
0x000000000043ec89 : test eax, eax ; cmove rax, rdi ; ret
0x0000000000441b92 : test eax, eax ; cmovne ebx, eax ; mov eax, ebx ; pop rbx ; ret
0x000000000040adaa : test eax, eax ; je 0x40adb5 ; pop rbx ; ret
0x000000000042a6ae : test eax, eax ; je 0x42a6b9 ; pop rax ; ret
0x0000000000431825 : test eax, eax ; je 0x431835 ; mov rsi, rbx ; call rax
0x00000000004551fe : test eax, eax ; je 0x455209 ; pop rax ; ret
0x0000000000460dde : test eax, eax ; je 0x460de9 ; pop rax ; ret
0x0000000000460e72 : test eax, eax ; je 0x460ebe ; mov rdi, rbx ; call rax
0x0000000000460fb1 : test eax, eax ; je 0x460fc1 ; mov rdi, rbx ; call rax
0x000000000046103a : test eax, eax ; je 0x46104a ; mov rdi, rbx ; call rax
0x0000000000461c9d : test eax, eax ; je 0x461cad ; mov rdi, rbx ; call rax
0x0000000000461e83 : test eax, eax ; je 0x461e93 ; mov rdi, r15 ; call rax
0x0000000000461f03 : test eax, eax ; je 0x461f13 ; mov rdi, r14 ; call rax
0x0000000000464133 : test eax, eax ; je 0x464146 ; dec eax ; mov dword ptr [rdi + 0x34], eax ; ret
0x0000000000464b5e : test eax, eax ; je 0x464b69 ; pop rax ; ret
0x0000000000479f4e : test eax, eax ; je 0x479f59 ; pop rax ; ret
0x0000000000485e6e : test eax, eax ; je 0x485e79 ; pop rax ; ret
0x0000000000488151 : test eax, eax ; je 0x488164 ; pop rbx ; pop r14 ; pop r15 ; ret
0x000000000048c0de : test eax, eax ; je 0x48c0e9 ; pop rax ; ret
0x000000000048c181 : test eax, eax ; je 0x48c191 ; mov rdi, rbx ; call rax
0x000000000048d72e : test eax, eax ; je 0x48d739 ; pop rax ; ret
0x000000000048ec5e : test eax, eax ; je 0x48ec69 ; pop rax ; ret
0x000000000048ecbe : test eax, eax ; je 0x48eceb ; add eax, 0x29 ; pop rbx ; ret
0x000000000048f33c : test eax, eax ; je 0x48f34e ; mov rdi, rbx ; pop rbx ; jmp rax
0x000000000048f34e : test eax, eax ; je 0x48f361 ; call rax
0x000000000048f3c9 : test eax, eax ; je 0x48f3d5 ; pop rdx ; jmp rax
0x00000000004958be : test eax, eax ; je 0x4958c9 ; pop rax ; ret
0x0000000000496486 : test eax, eax ; je 0x496496 ; mov rdi, rbx ; call rax
0x00000000004964b7 : test eax, eax ; je 0x4964c7 ; mov rdi, rbx ; call rax
0x0000000000496631 : test eax, eax ; je 0x496670 ; mov rdi, rbx ; call rax
0x00000000004966b9 : test eax, eax ; je 0x4966c9 ; mov rdi, rbx ; call rax
0x0000000000498c4e : test eax, eax ; je 0x498c59 ; pop rax ; ret
0x000000000049a6e8 : test eax, eax ; je 0x49a6ff ; mov rdi, r15 ; call rax
0x000000000049a9b4 : test eax, eax ; je 0x49a9f3 ; mov rdi, rbx ; call rax
0x000000000049aa13 : test eax, eax ; je 0x49aa23 ; mov rdi, rbx ; call rax
0x000000000049aa41 : test eax, eax ; je 0x49aa51 ; mov rdi, rbx ; call rax
0x000000000049aa96 : test eax, eax ; je 0x49aaa6 ; mov rdi, rbx ; call rax
0x000000000049c58e : test eax, eax ; je 0x49c599 ; pop rax ; ret
0x000000000049c63c : test eax, eax ; je 0x49c69c ; mov rdi, rbx ; call rax
0x000000000049c733 : test eax, eax ; je 0x49c747 ; mov rdi, rbx ; call rax
0x000000000049c9ec : test eax, eax ; je 0x49c9fa ; pop r8 ; jmp rax
0x000000000049cb16 : test eax, eax ; je 0x49cb41 ; call rax
0x000000000049cb96 : test eax, eax ; je 0x49cbc1 ; call rax
0x000000000049cc93 : test eax, eax ; je 0x49cc9f ; pop rcx ; jmp rax
0x000000000049ccd5 : test eax, eax ; je 0x49ccf1 ; mov rsi, r14 ; call rax
0x000000000049ce3a : test eax, eax ; je 0x49ce4c ; mov rdi, rbx ; pop rbx ; jmp rax
0x00000000004b6eae : test eax, eax ; je 0x4b6eb9 ; pop rax ; ret
0x00000000004b7c89 : test eax, eax ; je 0x4b7c99 ; mov rdi, r15 ; call rax
0x00000000004b7ceb : test eax, eax ; je 0x4b7cfb ; mov rdi, r14 ; call rax
0x00000000004b7d91 : test eax, eax ; je 0x4b7da1 ; mov rdi, rbx ; call rax
0x00000000004b7dd2 : test eax, eax ; je 0x4b7de2 ; mov rdi, r15 ; call rax
0x00000000004b7e44 : test eax, eax ; je 0x4b7e54 ; mov rdi, r14 ; call rax
0x00000000004b7f1a : test eax, eax ; je 0x4b7f2a ; mov rdi, rbx ; call rax
0x00000000004b81b8 : test eax, eax ; je 0x4b81c8 ; mov rdi, r15 ; call rax
0x00000000004b88c9 : test eax, eax ; je 0x4b88d7 ; pop r9 ; jmp rax
0x00000000004b8909 : test eax, eax ; je 0x4b8917 ; pop r9 ; jmp rax
0x00000000004b8949 : test eax, eax ; je 0x4b8957 ; pop r9 ; jmp rax
0x00000000004b8989 : test eax, eax ; je 0x4b8997 ; pop r9 ; jmp rax
0x00000000004b89c9 : test eax, eax ; je 0x4b89d5 ; pop rdx ; jmp rax
0x00000000004b8a09 : test eax, eax ; je 0x4b8a15 ; pop rdx ; jmp rax
0x00000000004b8ed9 : test eax, eax ; je 0x4b8ee9 ; mov rdi, r14 ; call rax
0x00000000004b94ab : test eax, eax ; je 0x4b94b5 ; jmp rax
0x00000000004b9535 : test eax, eax ; je 0x4b9544 ; jmp rax
0x00000000004b9565 : test eax, eax ; je 0x4b9574 ; jmp rax
0x00000000004bbeee : test eax, eax ; je 0x4bbef9 ; pop rax ; ret
0x00000000004c5f6e : test eax, eax ; je 0x4c5f79 ; pop rax ; ret
0x00000000004c9e8e : test eax, eax ; je 0x4c9e99 ; pop rax ; ret
0x00000000004ca3da : test eax, eax ; je 0x4ca3f8 ; mov rdi, rbx ; call rax
0x00000000004ca6f9 : test eax, eax ; je 0x4ca709 ; mov rdi, rbx ; call rax
0x00000000004cead5 : test eax, eax ; je 0x4ceae9 ; mov rdi, rbx ; call rax
0x00000000004ceea4 : test eax, eax ; je 0x4ceebc ; mov rdi, rbx ; call rax
0x00000000004cef4e : test eax, eax ; je 0x4cef95 ; call rax
0x00000000004cf759 : test eax, eax ; je 0x4cf76d ; mov rdi, rbx ; call rax
0x00000000004cf9c9 : test eax, eax ; je 0x4cf9e1 ; mov rdi, rbx ; call rax
0x00000000004cfb3e : test eax, eax ; je 0x4cfb49 ; pop rax ; ret
0x00000000004e3648 : test eax, eax ; je 0x4e3694 ; mov rsi, rbx ; call rax
0x00000000004e366d : test eax, eax ; je 0x4e36be ; mov rsi, rbx ; call rax
0x00000000004e5f2c : test eax, eax ; je 0x4e5f40 ; xor esi, esi ; mov rdi, rbx ; call rax
0x00000000004e631c : test eax, eax ; je 0x4e6330 ; xor esi, esi ; mov rdi, rbx ; call rax
0x00000000004e6365 : test eax, eax ; je 0x4e6379 ; xor esi, esi ; mov rdi, rbx ; call rax
0x00000000004e6428 : test eax, eax ; je 0x4e6432 ; jmp rax
0x00000000004e6438 : test eax, eax ; je 0x4e6442 ; jmp rax
0x00000000004ea87e : test eax, eax ; je 0x4ea889 ; pop rax ; ret
0x00000000004eb92e : test eax, eax ; je 0x4eb939 ; pop rax ; ret
0x00000000004f3463 : test eax, eax ; je 0x4f346d ; jmp rax
0x00000000004f3483 : test eax, eax ; je 0x4f348d ; jmp rax
0x00000000004f355e : test eax, eax ; je 0x4f3568 ; jmp rax
0x00000000004f36d8 : test eax, eax ; je 0x4f36f0 ; mov rdi, rbx ; call rax
0x00000000004f3b4e : test eax, eax ; je 0x4f3b66 ; mov rdi, rbx ; call rax
0x00000000004f6b7e : test eax, eax ; je 0x4f6b89 ; pop rax ; ret
0x00000000004f888d : test eax, eax ; je 0x4f8899 ; call rax
0x00000000004f90e2 : test eax, eax ; je 0x4f9106 ; call rax
0x00000000004fa7ae : test eax, eax ; je 0x4fa7b9 ; pop rax ; ret
0x00000000004ff0be : test eax, eax ; je 0x4ff0c9 ; pop rax ; ret
0x00000000004ffe04 : test eax, eax ; je 0x4ffe18 ; mov rdi, rbx ; call rax
0x0000000000500234 : test eax, eax ; je 0x500244 ; mov rdi, r15 ; call rax
0x0000000000500459 : test eax, eax ; je 0x500469 ; mov rdi, r14 ; call rax
0x00000000005004d6 : test eax, eax ; je 0x5004e6 ; mov rdi, rbx ; call rax
0x0000000000501464 : test eax, eax ; je 0x501487 ; call rax
0x000000000050432e : test eax, eax ; je 0x504339 ; pop rax ; ret
0x00000000005044f5 : test eax, eax ; je 0x5044ff ; call rax
0x00000000005047a5 : test eax, eax ; je 0x5047b1 ; pop rbx ; jmp rax
0x000000000050c9fe : test eax, eax ; je 0x50ca09 ; pop rax ; ret
0x000000000050d111 : test eax, eax ; je 0x50d15d ; mov rdi, rbx ; call rax
0x000000000050d1c3 : test eax, eax ; je 0x50d1d3 ; mov rdi, rbx ; call rax
0x000000000050d1eb : test eax, eax ; je 0x50d1fb ; mov rdi, rbx ; call rax
0x000000000050d246 : test eax, eax ; je 0x50d256 ; mov rdi, rbx ; call rax
0x000000000053eba8 : test eax, eax ; je 0x53ebb9 ; call rax
0x000000000053f061 : test eax, eax ; je 0x53f0e5 ; mov rdi, qword ptr [r12] ; call rax
0x000000000053f1a7 : test eax, eax ; je 0x53f1b9 ; mov rdi, rbx ; pop rbx ; jmp rax
0x000000000053f6e9 : test eax, eax ; je 0x53f731 ; jmp rax
0x0000000000540c54 : test eax, eax ; je 0x540c67 ; mov rax, qword ptr [rsp] ; pop rdx ; ret
0x0000000000541074 : test eax, eax ; je 0x541087 ; mov rax, qword ptr [rsp] ; pop rdx ; ret
0x0000000000541334 : test eax, eax ; je 0x541347 ; mov rax, qword ptr [rsp] ; pop rdx ; ret
0x0000000000541814 : test eax, eax ; je 0x541827 ; mov rax, qword ptr [rsp] ; pop rdx ; ret
0x0000000000542e4e : test eax, eax ; je 0x542e59 ; pop rax ; ret
0x0000000000547066 : test eax, eax ; je 0x547082 ; mov rdi, r14 ; call rax
0x00000000005470c6 : test eax, eax ; je 0x5470e2 ; mov rdi, r14 ; call rax
0x00000000005472ae : test eax, eax ; je 0x5472b9 ; pop rax ; ret
0x000000000054844f : test eax, eax ; je 0x54846c ; mov rdi, r14 ; call rax
0x00000000005484d0 : test eax, eax ; je 0x5484f5 ; mov rdi, r14 ; call rax
0x000000000054854c : test eax, eax ; je 0x548565 ; mov rdi, r14 ; call rax
0x000000000054b31a : test eax, eax ; je 0x54b326 ; pop rcx ; jmp rax
0x000000000054b36b : test eax, eax ; je 0x54b377 ; pop rdx ; jmp rax
0x000000000054b3ae : test eax, eax ; je 0x54b3c0 ; mov rdi, qword ptr [rdi + 0x30] ; jmp rax
0x000000000054b3ce : test eax, eax ; je 0x54b3e0 ; mov rdi, qword ptr [rdi + 0x30] ; jmp rax
0x000000000054e073 : test eax, eax ; je 0x54e08a ; mov rdi, rbx ; call rax
0x0000000000554e2e : test eax, eax ; je 0x554e39 ; pop rax ; ret
0x00000000005598ee : test eax, eax ; je 0x5598f9 ; pop rax ; ret
0x0000000000559b77 : test eax, eax ; je 0x559b87 ; mov rdi, rbx ; call rax
0x0000000000559c1e : test eax, eax ; je 0x559c28 ; jmp rax
0x0000000000559c3e : test eax, eax ; je 0x559c48 ; jmp rax
0x0000000000559c5e : test eax, eax ; je 0x559c68 ; jmp rax
0x0000000000559ddb : test eax, eax ; je 0x559deb ; mov rdi, rbx ; call rax
0x0000000000559df7 : test eax, eax ; je 0x559e07 ; mov rdi, rbx ; call rax
0x0000000000559f11 : test eax, eax ; je 0x559f25 ; mov rdi, r15 ; call rax
0x0000000000559f43 : test eax, eax ; je 0x559f53 ; mov rdi, r15 ; call rax
0x000000000055d541 : test eax, eax ; je 0x55d587 ; call rax
0x000000000055e56c : test eax, eax ; je 0x55e57c ; mov rdi, rbx ; call rax
0x000000000055e60c : test eax, eax ; je 0x55e61c ; mov rdi, rbx ; call rax
0x000000000055ef12 : test eax, eax ; je 0x55ef26 ; lea rdi, qword ptr [rsp + 0x10] ; call rax
0x0000000000565fc9 : test eax, eax ; je 0x565fd3 ; jmp rax
0x0000000000565fe9 : test eax, eax ; je 0x565ff7 ; xor ecx, ecx ; jmp rax
0x00000000005663b5 : test eax, eax ; je 0x5663d1 ; mov rdi, r14 ; call rax
0x0000000000566763 : test eax, eax ; je 0x56677b ; mov rdi, r14 ; call rax
0x0000000000425d4a : test eax, eax ; jle 0x425d55 ; pop rbx ; ret
0x000000000042627a : test eax, eax ; jle 0x426285 ; pop rbx ; ret
0x000000000042ad8a : test eax, eax ; jle 0x42ad95 ; pop rbx ; ret
0x000000000042b26e : test eax, eax ; jle 0x42b281 ; pop rbx ; pop r14 ; pop r15 ; ret
0x0000000000430baa : test eax, eax ; jle 0x430bb5 ; pop rbx ; ret
0x00000000004966a7 : test eax, eax ; jle 0x4966b2 ; pop rbx ; ret
0x000000000049aa87 : test eax, eax ; jle 0x49aa92 ; pop rbx ; ret
0x00000000004b7007 : test eax, eax ; jle 0x4b7012 ; pop rbx ; ret
0x00000000004c2d47 : test eax, eax ; jle 0x4c2d52 ; pop rbx ; ret
0x00000000004c2d97 : test eax, eax ; jle 0x4c2da2 ; pop rbx ; ret
0x00000000004f3b37 : test eax, eax ; jle 0x4f3b42 ; pop rbx ; ret
0x000000000050d237 : test eax, eax ; jle 0x50d242 ; pop rbx ; ret
0x00000000005668c7 : test eax, eax ; jle 0x5668d2 ; pop rbx ; ret
0x00000000005678d7 : test eax, eax ; jle 0x5678e2 ; pop rbx ; ret
0x00000000004089d5 : test eax, eax ; jne 0x4089e1 ; xor eax, eax ; ret
0x000000000042c432 : test eax, eax ; jne 0x42c43e ; xor eax, eax ; ret
0x000000000042c462 : test eax, eax ; jne 0x42c46e ; xor eax, eax ; ret
0x000000000042e404 : test eax, eax ; jne 0x42e410 ; xor eax, eax ; ret
0x00000000004cc20f : test eax, eax ; jne 0x4cc1f9 ; pop rbx ; pop r14 ; pop r15 ; ret
0x0000000000554dff : test eax, eax ; sete al ; movzx eax, al ; pop rbx ; ret
0x0000000000497c89 : test eax, eax ; sete al ; movzx eax, al ; pop rdx ; ret
0x000000000043db33 : test eax, eax ; sete al ; movzx eax, al ; ret
0x000000000040d89f : test eax, eax ; setg al ; movzx eax, al ; pop rdx ; ret
0x0000000000411389 : test eax, eax ; setne al ; movzx eax, al ; pop rbx ; ret
0x00000000004767b0 : test eax, eax ; setne al ; movzx eax, al ; pop rdx ; ret
0x000000000043dad9 : test eax, edx ; setne al ; movzx eax, al ; ret
0x00000000004d78f1 : test ebp, ebp ; je 0x4d7906 ; mov rdi, r13 ; call 0x4f3b19
0x00000000004be649 : test ebx, 0x380f4cf3 ; test ch, -0x3c ; ret 0xf78b
0x00000000004ac6c5 : test ebx, eax ; add byte ptr [rax], al ; add cl, ch ; ret
0x000000000043f51b : test ebx, ebx ; cmove ecx, eax ; mov eax, ecx ; pop rbx ; ret
0x000000000054243c : test ebx, ebx ; je 0x54244d ; mov rax, rbx ; pop rbx ; ret
0x0000000000500a7f : test ebx, ebx ; jne 0x500a49 ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000578302 : test ebx, ebx ; or word ptr [r11 - 0x2e], sp ; ret
0x00000000005b1aa7 : test ebx, esi ; ret 0x3271
0x00000000005b50a0 : test ecx, 0x5f6cf1fd ; jmp 0x5b5071
0x00000000004ede67 : test ecx, ebx ; add byte ptr [rax], al ; add bh, bh ; ret
0x00000000004b8f05 : test ecx, ecx ; cmovne rax, r14 ; jne 0x4b8ef5 ; jmp 0x4b8eda
0x000000000042ba1f : test ecx, ecx ; je 0x42ba2d ; mov rax, qword ptr [rcx] ; ret
0x000000000042e41a : test ecx, ecx ; je 0x42e428 ; mov rax, qword ptr [rcx] ; ret
0x000000000042e43a : test ecx, ecx ; je 0x42e448 ; mov rax, qword ptr [rcx] ; ret
0x00000000004849a8 : test ecx, ecx ; je 0x4849b9 ; mov rax, qword ptr [rcx + 0x10] ; pop rbx ; ret
0x0000000000487863 : test ecx, ecx ; je 0x487872 ; mov rax, qword ptr [rcx] ; pop rbx ; ret
0x0000000000489a08 : test ecx, ecx ; je 0x489a19 ; mov rax, qword ptr [rcx + 0x28] ; pop rbx ; ret
0x000000000048e944 : test ecx, ecx ; je 0x48e907 ; mov rdi, rbx ; call rcx
0x000000000049754c : test ecx, ecx ; je 0x49756c ; mov rdi, rbx ; call rcx
0x00000000004975dc : test ecx, ecx ; je 0x4975fc ; mov rdi, rbx ; call rcx
0x000000000049c71e : test ecx, ecx ; je 0x49c735 ; mov rdi, rbx ; call rcx
0x000000000049c8bd : test ecx, ecx ; je 0x49c932 ; mov rdi, rbx ; call rcx
0x00000000004ca2ba : test ecx, ecx ; je 0x4ca2da ; mov rdi, rbx ; call rcx
0x00000000004da116 : test ecx, ecx ; je 0x4da129 ; mov rax, qword ptr [rcx + 0x38] ; pop rbx ; ret
0x00000000004f34cf : test ecx, ecx ; je 0x4f3536 ; mov rdi, rbx ; call rcx
0x00000000004f3591 : test ecx, ecx ; je 0x4f359b ; jmp rcx
0x00000000004fcc81 : test ecx, ecx ; je 0x4fcc92 ; mov rax, qword ptr [rcx + 8] ; pop rdx ; ret
0x000000000053f526 : test ecx, ecx ; je 0x53f2ee ; call rcx
0x00000000004193cb : test ecx, ecx ; jg 0x4193c4 ; ret
0x000000000046b60c : test ecx, ecx ; jg 0x46b607 ; mov dword ptr [rdi + 8], ecx ; ret
0x0000000000500ad7 : test ecx, ecx ; jne 0x500ad4 ; ret
0x0000000000505846 : test ecx, ecx ; jns 0x505835 ; pop rbx ; ret
0x0000000000559ba0 : test ecx, ecx ; mov eax, 1 ; je 0x559bb4 ; jmp rcx
0x0000000000559bc0 : test ecx, ecx ; mov eax, 1 ; je 0x559bd4 ; jmp rcx
0x0000000000472a02 : test ecx, ecx ; mov rax, rdx ; jg 0x4729e7 ; ret
0x00000000005a68a7 : test ecx, ecx ; ret 0x347f
0x000000000048767c : test ecx, edi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000048d46b : test ecx, edx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004ce448 : test edi, eax ; dec dword ptr [rax - 0x77] ; ret
0x000000000046bbf8 : test edi, edi ; dec dword ptr [rax - 0x77] ; ret
0x000000000041a3d5 : test edi, edi ; je 0x41a3e8 ; call 0x496686
0x0000000000429a83 : test edi, edi ; je 0x429a93 ; mov rax, qword ptr [rdi + 8] ; ret
0x00000000004315e3 : test edi, edi ; je 0x4315f3 ; mov rax, qword ptr [rdi + 0x48] ; ret
0x0000000000461c13 : test edi, edi ; je 0x461c23 ; mov rax, qword ptr [rdi + 0x38] ; ret
0x0000000000461f93 : test edi, edi ; je 0x461fa3 ; mov rax, qword ptr [rdi + 0x50] ; ret
0x0000000000461fa3 : test edi, edi ; je 0x461fb3 ; mov rax, qword ptr [rdi + 0x58] ; ret
0x000000000049c7e3 : test edi, edi ; je 0x49c7f1 ; mov eax, dword ptr [rdi + 0x14] ; ret
0x000000000049cc22 : test edi, edi ; je 0x49cc35 ; mov rax, qword ptr [rdi + 0x38] ; pop rdx ; ret
0x000000000049cd92 : test edi, edi ; je 0x49cda5 ; mov rax, qword ptr [rdi + 0x40] ; pop rdx ; ret
0x00000000004d0392 : test edi, edi ; je 0x4d03a3 ; mov eax, dword ptr [rdi + 8] ; pop rdx ; ret
0x00000000004d03e3 : test edi, edi ; je 0x4d03f1 ; mov rax, qword ptr [rdi] ; ret
0x00000000004db6a7 : test edi, edi ; je 0x4db6d5 ; mov rdi, rbx ; call 0x4b7909
0x00000000004e3253 : test edi, edi ; je 0x4e3263 ; mov rax, qword ptr [rdi + 0x38] ; ret
0x00000000004f4bb3 : test edi, edi ; je 0x4f4bc1 ; mov eax, dword ptr [rdi + 8] ; ret
0x00000000004f4be3 : test edi, edi ; je 0x4f4bf3 ; mov rax, qword ptr [rdi + 0x18] ; ret
0x00000000004f4c93 : test edi, edi ; je 0x4f4ca3 ; mov rax, qword ptr [rdi + 8] ; ret
0x000000000053956a : test edi, edi ; je 0x539587 ; call r15
0x00000000005395ac : test edi, edi ; je 0x5395b8 ; call r14
0x0000000000539ba9 : test edi, edi ; je 0x539bb8 ; call r14
0x00000000005487e3 : test edi, edi ; je 0x5487f3 ; mov rax, qword ptr [rdi + 8] ; ret
0x00000000005487f3 : test edi, edi ; je 0x548803 ; mov rax, qword ptr [rdi + 0x10] ; ret
0x0000000000548803 : test edi, edi ; je 0x548813 ; mov rax, qword ptr [rdi + 0x18] ; ret
0x0000000000548813 : test edi, edi ; je 0x548823 ; mov rax, qword ptr [rdi + 0x20] ; ret
0x0000000000548823 : test edi, edi ; je 0x548833 ; mov rax, qword ptr [rdi + 0x28] ; ret
0x0000000000548833 : test edi, edi ; je 0x548843 ; mov rax, qword ptr [rdi + 0x30] ; ret
0x0000000000548843 : test edi, edi ; je 0x54884f ; mov eax, dword ptr [rdi] ; ret
0x0000000000548853 : test edi, edi ; je 0x548861 ; mov eax, dword ptr [rdi + 0x10] ; ret
0x0000000000548863 : test edi, edi ; je 0x548873 ; mov rax, qword ptr [rdi + 8] ; ret
0x00000000005588d3 : test edi, edi ; je 0x5588e1 ; mov rax, qword ptr [rdi] ; ret
0x000000000055c883 : test edi, edi ; je 0x55c891 ; mov rax, qword ptr [rdi] ; ret
0x000000000055c893 : test edi, edi ; je 0x55c8a3 ; mov rax, qword ptr [rdi + 0x10] ; ret
0x0000000000560da3 : test edi, edi ; je 0x560db3 ; mov rax, qword ptr [rdi + 8] ; ret
0x0000000000561543 : test edi, edi ; je 0x561551 ; mov rax, qword ptr [rdi] ; ret
0x00000000005678fe : test edi, edi ; je 0x56790d ; call 0x4f3b16
0x0000000000461c01 : test edi, edi ; jne 0x461bf4 ; ret
0x00000000004b8d96 : test edi, edi ; jne 0x4b8d84 ; ret
0x00000000004cb1cd : test edi, edi ; jne 0x4cb1c5 ; pop rax ; ret
0x000000000045ebd1 : test edi, edi ; setne al ; movzx eax, al ; ret
0x0000000000478860 : test edi, esi ; dec dword ptr [rax - 0x77] ; ret
0x00000000004be5bc : test edx, 0x380f4cf3 ; test ch, -0x3c ; ret 0xf78b
0x000000000054860e : test edx, edx ; cmove ecx, esi ; mov dword ptr [rdi + 0x28], ecx ; pop rdx ; ret
0x000000000046b54c : test edx, edx ; jg 0x46b547 ; mov dword ptr [rdi + 8], edx ; ret
0x000000000055b63f : test edx, edx ; jne 0x55b636 ; xor eax, eax ; ret
0x00000000005e88b5 : test esi, ecx ; jmp qword ptr [rax]
0x00000000005eb205 : test esi, edi ; call rax
0x0000000000461b99 : test esi, esi ; je 0x461bab ; mov ecx, dword ptr [rax + 0x24] ; mov dword ptr [rsi], ecx ; ret
0x00000000004fff9a : test esi, esi ; je 0x4fffac ; mov eax, dword ptr [rdx + 4] ; mov dword ptr [rsi], eax ; ret
0x0000000000456575 : test esi, esi ; jg 0x456574 ; ret
0x0000000000479f8c : test esi, esi ; jne 0x479f87 ; sub rax, rdi ; ret
0x00000000004f34a4 : test esi, esi ; js 0x4f34b2 ; mov dword ptr [rdi + 0x28], esi ; ret
0x000000000046b385 : test esi, esi ; setne al ; movzx eax, al ; ret
0x00000000004f99d8 : test esp, esp ; je 0x4f99e6 ; call r12
0x00000000005a8006 : test qword ptr [r8 - 0x16], r11 ; mov ecx, 0x7df9efdc ; ret 0x666d
0x00000000004f99d7 : test r12, r12 ; je 0x4f99e7 ; call r12
0x000000000057da13 : test r13b, 0x2b ; xchg eax, ebx ; ret
0x000000000043ec88 : test r8d, r8d ; cmove rax, rdi ; ret
0x0000000000577f7d : test rax, -0x609f3b3f ; ret 0x5c9e
0x00000000004f73e0 : test rax, -0x76b70010 ; ret
0x000000000040ada9 : test rax, rax ; je 0x40adb6 ; pop rbx ; ret
0x000000000042a6ad : test rax, rax ; je 0x42a6ba ; pop rax ; ret
0x0000000000431824 : test rax, rax ; je 0x431836 ; mov rsi, rbx ; call rax
0x00000000004551fd : test rax, rax ; je 0x45520a ; pop rax ; ret
0x0000000000460ddd : test rax, rax ; je 0x460dea ; pop rax ; ret
0x0000000000460e71 : test rax, rax ; je 0x460ebf ; mov rdi, rbx ; call rax
0x0000000000460fb0 : test rax, rax ; je 0x460fc2 ; mov rdi, rbx ; call rax
0x0000000000460faf : test rax, rax ; je 0x460fc3 ; mov rdi, rbx ; call rax
0x0000000000461039 : test rax, rax ; je 0x46104b ; mov rdi, rbx ; call rax
0x0000000000461038 : test rax, rax ; je 0x46104c ; mov rdi, rbx ; call rax
0x0000000000461c9c : test rax, rax ; je 0x461cae ; mov rdi, rbx ; call rax
0x0000000000461c9b : test rax, rax ; je 0x461caf ; mov rdi, rbx ; call rax
0x0000000000461e82 : test rax, rax ; je 0x461e94 ; mov rdi, r15 ; call rax
0x0000000000461e81 : test rax, rax ; je 0x461e95 ; mov rdi, r15 ; call rax
0x0000000000461f02 : test rax, rax ; je 0x461f14 ; mov rdi, r14 ; call rax
0x0000000000461f01 : test rax, rax ; je 0x461f15 ; mov rdi, r14 ; call rax
0x0000000000464b5d : test rax, rax ; je 0x464b6a ; pop rax ; ret
0x0000000000479f4d : test rax, rax ; je 0x479f5a ; pop rax ; ret
0x0000000000485e6d : test rax, rax ; je 0x485e7a ; pop rax ; ret
0x000000000048c0dd : test rax, rax ; je 0x48c0ea ; pop rax ; ret
0x000000000048c180 : test rax, rax ; je 0x48c192 ; mov rdi, rbx ; call rax
0x000000000048d72d : test rax, rax ; je 0x48d73a ; pop rax ; ret
0x000000000048ec5d : test rax, rax ; je 0x48ec6a ; pop rax ; ret
0x000000000048f33b : test rax, rax ; je 0x48f34f ; mov rdi, rbx ; pop rbx ; jmp rax
0x000000000048f34d : test rax, rax ; je 0x48f362 ; call rax
0x000000000048f3c8 : test rax, rax ; je 0x48f3d6 ; pop rdx ; jmp rax
0x00000000004958bd : test rax, rax ; je 0x4958ca ; pop rax ; ret
0x0000000000496485 : test rax, rax ; je 0x496497 ; mov rdi, rbx ; call rax
0x00000000004964b6 : test rax, rax ; je 0x4964c8 ; mov rdi, rbx ; call rax
0x0000000000496630 : test rax, rax ; je 0x496671 ; mov rdi, rbx ; call rax
0x00000000004966b8 : test rax, rax ; je 0x4966ca ; mov rdi, rbx ; call rax
0x0000000000498c4d : test rax, rax ; je 0x498c5a ; pop rax ; ret
0x000000000049a6e7 : test rax, rax ; je 0x49a700 ; mov rdi, r15 ; call rax
0x000000000049a9b3 : test rax, rax ; je 0x49a9f4 ; mov rdi, rbx ; call rax
0x000000000049aa12 : test rax, rax ; je 0x49aa24 ; mov rdi, rbx ; call rax
0x000000000049aa40 : test rax, rax ; je 0x49aa52 ; mov rdi, rbx ; call rax
0x000000000049aa95 : test rax, rax ; je 0x49aaa7 ; mov rdi, rbx ; call rax
0x000000000049c58d : test rax, rax ; je 0x49c59a ; pop rax ; ret
0x000000000049c63b : test rax, rax ; je 0x49c69d ; mov rdi, rbx ; call rax
0x000000000049c63a : test rax, rax ; je 0x49c69e ; mov rdi, rbx ; call rax
0x000000000049c732 : test rax, rax ; je 0x49c748 ; mov rdi, rbx ; call rax
0x000000000049c731 : test rax, rax ; je 0x49c749 ; mov rdi, rbx ; call rax
0x000000000049c9eb : test rax, rax ; je 0x49c9fb ; pop r8 ; jmp rax
0x000000000049cb15 : test rax, rax ; je 0x49cb42 ; call rax
0x000000000049cb95 : test rax, rax ; je 0x49cbc2 ; call rax
0x000000000049cc92 : test rax, rax ; je 0x49cca0 ; pop rcx ; jmp rax
0x000000000049ccd4 : test rax, rax ; je 0x49ccf2 ; mov rsi, r14 ; call rax
0x000000000049ce39 : test rax, rax ; je 0x49ce4d ; mov rdi, rbx ; pop rbx ; jmp rax
0x00000000004b6ead : test rax, rax ; je 0x4b6eba ; pop rax ; ret
0x00000000004b7c88 : test rax, rax ; je 0x4b7c9a ; mov rdi, r15 ; call rax
0x00000000004b7cea : test rax, rax ; je 0x4b7cfc ; mov rdi, r14 ; call rax
0x00000000004b7d90 : test rax, rax ; je 0x4b7da2 ; mov rdi, rbx ; call rax
0x00000000004b7dd1 : test rax, rax ; je 0x4b7de3 ; mov rdi, r15 ; call rax
0x00000000004b7e43 : test rax, rax ; je 0x4b7e55 ; mov rdi, r14 ; call rax
0x00000000004b7f19 : test rax, rax ; je 0x4b7f2b ; mov rdi, rbx ; call rax
0x00000000004b81b7 : test rax, rax ; je 0x4b81c9 ; mov rdi, r15 ; call rax
0x00000000004b88c8 : test rax, rax ; je 0x4b88d8 ; pop r9 ; jmp rax
0x00000000004b8908 : test rax, rax ; je 0x4b8918 ; pop r9 ; jmp rax
0x00000000004b8948 : test rax, rax ; je 0x4b8958 ; pop r9 ; jmp rax
0x00000000004b8988 : test rax, rax ; je 0x4b8998 ; pop r9 ; jmp rax
0x00000000004b89c8 : test rax, rax ; je 0x4b89d6 ; pop rdx ; jmp rax
0x00000000004b8a08 : test rax, rax ; je 0x4b8a16 ; pop rdx ; jmp rax
0x00000000004b8a07 : test rax, rax ; je 0x4b8a17 ; pop rdx ; jmp rax
0x00000000004b8a06 : test rax, rax ; je 0x4b8a18 ; pop rdx ; jmp rax
0x00000000004b8ed8 : test rax, rax ; je 0x4b8eea ; mov rdi, r14 ; call rax
0x00000000004b94aa : test rax, rax ; je 0x4b94b6 ; jmp rax
0x00000000004b9534 : test rax, rax ; je 0x4b9545 ; jmp rax
0x00000000004b9564 : test rax, rax ; je 0x4b9575 ; jmp rax
0x00000000004bbeed : test rax, rax ; je 0x4bbefa ; pop rax ; ret
0x00000000004c5f6d : test rax, rax ; je 0x4c5f7a ; pop rax ; ret
0x00000000004c9e8d : test rax, rax ; je 0x4c9e9a ; pop rax ; ret
0x00000000004ca3d9 : test rax, rax ; je 0x4ca3f9 ; mov rdi, rbx ; call rax
0x00000000004ca6f8 : test rax, rax ; je 0x4ca70a ; mov rdi, rbx ; call rax
0x00000000004cead4 : test rax, rax ; je 0x4ceaea ; mov rdi, rbx ; call rax
0x00000000004ceea3 : test rax, rax ; je 0x4ceebd ; mov rdi, rbx ; call rax
0x00000000004cef4d : test rax, rax ; je 0x4cef96 ; call rax
0x00000000004cef4c : test rax, rax ; je 0x4cef97 ; call rax
0x00000000004cef4b : test rax, rax ; je 0x4cef98 ; call rax
0x00000000004cf758 : test rax, rax ; je 0x4cf76e ; mov rdi, rbx ; call rax
0x00000000004cf9c8 : test rax, rax ; je 0x4cf9e2 ; mov rdi, rbx ; call rax
0x00000000004cfb3d : test rax, rax ; je 0x4cfb4a ; pop rax ; ret
0x00000000004e3647 : test rax, rax ; je 0x4e3695 ; mov rsi, rbx ; call rax
0x00000000004e366c : test rax, rax ; je 0x4e36bf ; mov rsi, rbx ; call rax
0x00000000004e6427 : test rax, rax ; je 0x4e6433 ; jmp rax
0x00000000004e6437 : test rax, rax ; je 0x4e6443 ; jmp rax
0x00000000004ea87d : test rax, rax ; je 0x4ea88a ; pop rax ; ret
0x00000000004eb92d : test rax, rax ; je 0x4eb93a ; pop rax ; ret
0x00000000004f3462 : test rax, rax ; je 0x4f346e ; jmp rax
0x00000000004f3482 : test rax, rax ; je 0x4f348e ; jmp rax
0x00000000004f355d : test rax, rax ; je 0x4f3569 ; jmp rax
0x00000000004f36d7 : test rax, rax ; je 0x4f36f1 ; mov rdi, rbx ; call rax
0x00000000004f3b4d : test rax, rax ; je 0x4f3b67 ; mov rdi, rbx ; call rax
0x00000000004f6b7d : test rax, rax ; je 0x4f6b8a ; pop rax ; ret
0x00000000004f888c : test rax, rax ; je 0x4f889a ; call rax
0x00000000004f90e1 : test rax, rax ; je 0x4f9107 ; call rax
0x00000000004fa7ad : test rax, rax ; je 0x4fa7ba ; pop rax ; ret
0x00000000004ff0bd : test rax, rax ; je 0x4ff0ca ; pop rax ; ret
0x00000000004ffe03 : test rax, rax ; je 0x4ffe19 ; mov rdi, rbx ; call rax
0x0000000000500233 : test rax, rax ; je 0x500245 ; mov rdi, r15 ; call rax
0x0000000000500458 : test rax, rax ; je 0x50046a ; mov rdi, r14 ; call rax
0x00000000005004d5 : test rax, rax ; je 0x5004e7 ; mov rdi, rbx ; call rax
0x0000000000501463 : test rax, rax ; je 0x501488 ; call rax
0x000000000050432d : test rax, rax ; je 0x50433a ; pop rax ; ret
0x00000000005044f4 : test rax, rax ; je 0x504500 ; call rax
0x00000000005047a4 : test rax, rax ; je 0x5047b2 ; pop rbx ; jmp rax
0x000000000050c9fd : test rax, rax ; je 0x50ca0a ; pop rax ; ret
0x000000000050d110 : test rax, rax ; je 0x50d15e ; mov rdi, rbx ; call rax
0x000000000050d1c2 : test rax, rax ; je 0x50d1d4 ; mov rdi, rbx ; call rax
0x000000000050d1c1 : test rax, rax ; je 0x50d1d5 ; mov rdi, rbx ; call rax
0x000000000050d1ea : test rax, rax ; je 0x50d1fc ; mov rdi, rbx ; call rax
0x000000000050d245 : test rax, rax ; je 0x50d257 ; mov rdi, rbx ; call rax
0x000000000050d244 : test rax, rax ; je 0x50d258 ; mov rdi, rbx ; call rax
0x000000000053eba7 : test rax, rax ; je 0x53ebba ; call rax
0x000000000053f060 : test rax, rax ; je 0x53f0e6 ; mov rdi, qword ptr [r12] ; call rax
0x000000000053f1a6 : test rax, rax ; je 0x53f1ba ; mov rdi, rbx ; pop rbx ; jmp rax
0x000000000053f6e8 : test rax, rax ; je 0x53f732 ; jmp rax
0x0000000000542e4d : test rax, rax ; je 0x542e5a ; pop rax ; ret
0x0000000000547065 : test rax, rax ; je 0x547083 ; mov rdi, r14 ; call rax
0x00000000005470c5 : test rax, rax ; je 0x5470e3 ; mov rdi, r14 ; call rax
0x00000000005472ad : test rax, rax ; je 0x5472ba ; pop rax ; ret
0x000000000054844e : test rax, rax ; je 0x54846d ; mov rdi, r14 ; call rax
0x00000000005484cf : test rax, rax ; je 0x5484f6 ; mov rdi, r14 ; call rax
0x000000000054854b : test rax, rax ; je 0x548566 ; mov rdi, r14 ; call rax
0x000000000054b319 : test rax, rax ; je 0x54b327 ; pop rcx ; jmp rax
0x000000000054b36a : test rax, rax ; je 0x54b378 ; pop rdx ; jmp rax
0x000000000054b3ad : test rax, rax ; je 0x54b3c1 ; mov rdi, qword ptr [rdi + 0x30] ; jmp rax
0x000000000054b3cd : test rax, rax ; je 0x54b3e1 ; mov rdi, qword ptr [rdi + 0x30] ; jmp rax
0x000000000054e072 : test rax, rax ; je 0x54e08b ; mov rdi, rbx ; call rax
0x0000000000554e2d : test rax, rax ; je 0x554e3a ; pop rax ; ret
0x00000000005598ed : test rax, rax ; je 0x5598fa ; pop rax ; ret
0x0000000000559b76 : test rax, rax ; je 0x559b88 ; mov rdi, rbx ; call rax
0x0000000000559c1d : test rax, rax ; je 0x559c29 ; jmp rax
0x0000000000559c3d : test rax, rax ; je 0x559c49 ; jmp rax
0x0000000000559c3c : test rax, rax ; je 0x559c4a ; jmp rax
0x0000000000559c3b : test rax, rax ; je 0x559c4b ; jmp rax
0x0000000000559c5d : test rax, rax ; je 0x559c69 ; jmp rax
0x0000000000559c5c : test rax, rax ; je 0x559c6a ; jmp rax
0x0000000000559c5b : test rax, rax ; je 0x559c6b ; jmp rax
0x0000000000559dda : test rax, rax ; je 0x559dec ; mov rdi, rbx ; call rax
0x0000000000559df6 : test rax, rax ; je 0x559e08 ; mov rdi, rbx ; call rax
0x0000000000559f10 : test rax, rax ; je 0x559f26 ; mov rdi, r15 ; call rax
0x0000000000559f42 : test rax, rax ; je 0x559f54 ; mov rdi, r15 ; call rax
0x000000000055d540 : test rax, rax ; je 0x55d588 ; call rax
0x000000000055e56b : test rax, rax ; je 0x55e57d ; mov rdi, rbx ; call rax
0x000000000055e60b : test rax, rax ; je 0x55e61d ; mov rdi, rbx ; call rax
0x0000000000565fc8 : test rax, rax ; je 0x565fd4 ; jmp rax
0x0000000000565fe8 : test rax, rax ; je 0x565ff8 ; xor ecx, ecx ; jmp rax
0x00000000005663b4 : test rax, rax ; je 0x5663d2 ; mov rdi, r14 ; call rax
0x0000000000566762 : test rax, rax ; je 0x56677c ; mov rdi, r14 ; call rax
0x00000000004089d4 : test rax, rax ; jne 0x4089e2 ; xor eax, eax ; ret
0x000000000042c431 : test rax, rax ; jne 0x42c43f ; xor eax, eax ; ret
0x000000000042c461 : test rax, rax ; jne 0x42c46f ; xor eax, eax ; ret
0x000000000042e403 : test rax, rax ; jne 0x42e411 ; xor eax, eax ; ret
0x000000000054243b : test rbx, rbx ; je 0x54244e ; mov rax, rbx ; pop rbx ; ret
0x000000000042ba1e : test rcx, rcx ; je 0x42ba2e ; mov rax, qword ptr [rcx] ; ret
0x000000000042e419 : test rcx, rcx ; je 0x42e429 ; mov rax, qword ptr [rcx] ; ret
0x000000000042e439 : test rcx, rcx ; je 0x42e449 ; mov rax, qword ptr [rcx] ; ret
0x0000000000487862 : test rcx, rcx ; je 0x487873 ; mov rax, qword ptr [rcx] ; pop rbx ; ret
0x000000000048e943 : test rcx, rcx ; je 0x48e908 ; mov rdi, rbx ; call rcx
0x000000000049754b : test rcx, rcx ; je 0x49756d ; mov rdi, rbx ; call rcx
0x00000000004975db : test rcx, rcx ; je 0x4975fd ; mov rdi, rbx ; call rcx
0x000000000049c71d : test rcx, rcx ; je 0x49c736 ; mov rdi, rbx ; call rcx
0x000000000049c8bc : test rcx, rcx ; je 0x49c933 ; mov rdi, rbx ; call rcx
0x00000000004ca2b9 : test rcx, rcx ; je 0x4ca2db ; mov rdi, rbx ; call rcx
0x00000000004f34ce : test rcx, rcx ; je 0x4f3537 ; mov rdi, rbx ; call rcx
0x00000000004f3590 : test rcx, rcx ; je 0x4f359c ; jmp rcx
0x000000000053f525 : test rcx, rcx ; je 0x53f2ef ; call rcx
0x0000000000500ad6 : test rcx, rcx ; jne 0x500ad5 ; ret
0x000000000041a3d4 : test rdi, rdi ; je 0x41a3e9 ; call 0x496687
0x000000000041a3d3 : test rdi, rdi ; je 0x41a3ea ; call 0x496688
0x0000000000429a82 : test rdi, rdi ; je 0x429a94 ; mov rax, qword ptr [rdi + 8] ; ret
0x00000000004315e2 : test rdi, rdi ; je 0x4315f4 ; mov rax, qword ptr [rdi + 0x48] ; ret
0x0000000000461c12 : test rdi, rdi ; je 0x461c24 ; mov rax, qword ptr [rdi + 0x38] ; ret
0x0000000000461f92 : test rdi, rdi ; je 0x461fa4 ; mov rax, qword ptr [rdi + 0x50] ; ret
0x0000000000461fa2 : test rdi, rdi ; je 0x461fb4 ; mov rax, qword ptr [rdi + 0x58] ; ret
0x000000000049c7e2 : test rdi, rdi ; je 0x49c7f2 ; mov eax, dword ptr [rdi + 0x14] ; ret
0x00000000004d0391 : test rdi, rdi ; je 0x4d03a4 ; mov eax, dword ptr [rdi + 8] ; pop rdx ; ret
0x00000000004d03e2 : test rdi, rdi ; je 0x4d03f2 ; mov rax, qword ptr [rdi] ; ret
0x00000000004e3252 : test rdi, rdi ; je 0x4e3264 ; mov rax, qword ptr [rdi + 0x38] ; ret
0x00000000004f4bb2 : test rdi, rdi ; je 0x4f4bc2 ; mov eax, dword ptr [rdi + 8] ; ret
0x00000000004f4be2 : test rdi, rdi ; je 0x4f4bf4 ; mov rax, qword ptr [rdi + 0x18] ; ret
0x00000000004f4c92 : test rdi, rdi ; je 0x4f4ca4 ; mov rax, qword ptr [rdi + 8] ; ret
0x0000000000539569 : test rdi, rdi ; je 0x539588 ; call r15
0x00000000005395ab : test rdi, rdi ; je 0x5395b9 ; call r14
0x0000000000539ba8 : test rdi, rdi ; je 0x539bb9 ; call r14
0x00000000005487e2 : test rdi, rdi ; je 0x5487f4 ; mov rax, qword ptr [rdi + 8] ; ret
0x00000000005487f2 : test rdi, rdi ; je 0x548804 ; mov rax, qword ptr [rdi + 0x10] ; ret
0x0000000000548802 : test rdi, rdi ; je 0x548814 ; mov rax, qword ptr [rdi + 0x18] ; ret
0x0000000000548812 : test rdi, rdi ; je 0x548824 ; mov rax, qword ptr [rdi + 0x20] ; ret
0x0000000000548822 : test rdi, rdi ; je 0x548834 ; mov rax, qword ptr [rdi + 0x28] ; ret
0x0000000000548832 : test rdi, rdi ; je 0x548844 ; mov rax, qword ptr [rdi + 0x30] ; ret
0x0000000000548842 : test rdi, rdi ; je 0x548850 ; mov eax, dword ptr [rdi] ; ret
0x0000000000548852 : test rdi, rdi ; je 0x548862 ; mov eax, dword ptr [rdi + 0x10] ; ret
0x0000000000548862 : test rdi, rdi ; je 0x548874 ; mov rax, qword ptr [rdi + 8] ; ret
0x00000000005588d2 : test rdi, rdi ; je 0x5588e2 ; mov rax, qword ptr [rdi] ; ret
0x000000000055c882 : test rdi, rdi ; je 0x55c892 ; mov rax, qword ptr [rdi] ; ret
0x000000000055c892 : test rdi, rdi ; je 0x55c8a4 ; mov rax, qword ptr [rdi + 0x10] ; ret
0x0000000000560da2 : test rdi, rdi ; je 0x560db4 ; mov rax, qword ptr [rdi + 8] ; ret
0x0000000000561542 : test rdi, rdi ; je 0x561552 ; mov rax, qword ptr [rdi] ; ret
0x00000000005678fd : test rdi, rdi ; je 0x56790e ; call 0x4f3b17
0x0000000000461c00 : test rdi, rdi ; jne 0x461bf5 ; ret
0x00000000004b8d95 : test rdi, rdi ; jne 0x4b8d85 ; ret
0x00000000004cb1cc : test rdi, rdi ; jne 0x4cb1c6 ; pop rax ; ret
0x000000000045ebd0 : test rdi, rdi ; setne al ; movzx eax, al ; ret
0x0000000000479f8b : test rsi, rsi ; jne 0x479f88 ; sub rax, rdi ; ret
0x000000000046b384 : test rsi, rsi ; setne al ; movzx eax, al ; ret
0x000000000044d432 : ud2 ; ret
0x000000000046c2e4 : vandpd ymm8, ymm1, ymmword ptr [rbp + 0x20] ; ret 0x8948
0x000000000046e140 : verw word ptr [rcx] ; ret
0x00000000004d6036 : vmovdqu xmmword ptr [rdi - 0x10], xmm5 ; vzeroupper ; ret
0x00000000004d66f1 : vmovdqu xmmword ptr [rdi], xmm10 ; vzeroupper ; ret
0x00000000004bed1b : vmovdqu ymmword ptr [rdi + 0x20], ymm3 ; vzeroupper ; ret
0x00000000004bec19 : vmovdqu ymmword ptr [rdi + 0x40], ymm4 ; vzeroupper ; ret
0x00000000005128a4 : vmovdqu ymmword ptr [rdi], ymm0 ; vzeroupper ; ret
0x00000000005d70fc : vpaddq ymm10, ymm13, ymm1 ; and dword ptr [r8 + 0x61], esp ; ret
0x0000000000520eee : vpcmpgtd ymm8, ymm15, ymmword ptr [rdi + rcx + 0x6f] ; ret
0x000000000046b1e9 : vpmulhuw ymm13, ymm1, ymm3 ; ret 0x8b49
0x0000000000536533 : vpsllq xmm0, xmm14, xmm1 ; ret
0x0000000000429eaa : vpsubsb xmm3, xmm14, xmmword ptr [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0x00000000005d68fe : vpunpcklbw ymm12, ymm13, ymmword ptr [rcx + 0x41] ; and eax, eax ; ret
0x0000000000448bf6 : vpxor xmm8, xmm8, xmm4 ; ret
0x0000000000433037 : vxorps xmm8, xmm7, xmmword ptr [rax] ; ret
0x00000000004bec1e : vzeroupper ; ret
0x0000000000615d4d : wait ; add al, byte ptr [rax] ; adc byte ptr [rcx - 0xc], bh ; jmp qword ptr [rdi]
0x0000000000406e9e : wait ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004ed1af : wait ; add byte ptr [rax], al ; add bh, bh ; ret
0x0000000000432f25 : wait ; add byte ptr [rax], al ; add byte ptr [rax + 0x56f1f7], bh ; ret
0x0000000000433065 : wait ; add byte ptr [rax], al ; add byte ptr [rax + 0x5740e7], bh ; ret
0x0000000000542a11 : wait ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret
0x00000000005e4ae9 : wait ; add dword ptr [rax], eax ; loopne 0x5e4b48 ; jmp 0x5e4af5
0x00000000005e4ad9 : wait ; add dword ptr [rax], eax ; rcl byte ptr [rbx - 0x15] ; jmp rax
0x000000000048c7c8 : wait ; add eax, 0x1b800 ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000005aeeac : wait ; call qword ptr [r14]
0x000000000060df41 : wait ; call qword ptr [rcx]
0x00000000005985cc : wait ; call qword ptr [rdi]
0x00000000005a7a88 : wait ; call rsp
0x00000000005e976d : wait ; cmc ; call rax
0x00000000005b4e61 : wait ; fadd dword ptr [rsi] ; cmp cl, dh ; ret 0x898
0x00000000005aba57 : wait ; fstp dword ptr [rdi - 0x30c43414] ; in eax, 0x4e ; ret
0x0000000000602119 : wait ; in al, dx ; jmp qword ptr [rsi]
0x00000000005a82e2 : wait ; insd dword ptr [rdi], dx ; cwde ; loope 0x5a8324 ; je 0x5a8330 ; ret
0x00000000005e8b35 : wait ; int1 ; call qword ptr [rax]
0x000000000059fdee : wait ; jmp qword ptr [rdx]
0x000000000057b894 : wait ; lahf ; lodsd eax, dword ptr es:[rsi] ; mov bl, 0x26 ; ret
0x00000000005a10a1 : wait ; leave ; ret 0xbe97
0x000000000057cf95 : wait ; loope 0x57cfc3 ; push rdx ; ret 0xd5a6
0x00000000005a4d7a : wait ; mov ch, 0x7b ; xor eax, 0x67059841 ; ret
0x00000000005b6222 : wait ; mov esp, 0x1baf6060 ; ret 0x7888
0x0000000000557312 : wait ; mov fs, word ptr [rbx + 0x1d357b0c] ; loopne 0x5572fb ; ret 0x4b2e
0x00000000005e65c5 : wait ; out dx, al ; jmp rax
0x00000000005e6e45 : wait ; out dx, eax ; call rax
0x00000000004ae8ff : wait ; pop rax ; add byte ptr [rcx - 0x48], al ; ret
0x0000000000433026 : wait ; pop rbp ; add bl, al ; mov eax, 0x5769c9 ; ret
0x00000000005421ec : wait ; pop rbp ; add byte ptr [rcx - 0x48], al ; ret
0x0000000000404664 : wait ; pop rbx ; pop r14 ; pop r15 ; ret
0x00000000004ab081 : wait ; popfq ; or eax, dword ptr [rax] ; jmp 0x4ab04f
0x000000000058c3d5 : wait ; push rax ; ret
0x00000000005a9a70 : wait ; ret
0x00000000005aa6b8 : wait ; ret 0x2128
0x00000000005ac0f0 : wait ; ret 0x431e
0x00000000005a341e : wait ; ret 0x8463
0x00000000004c4e21 : wait ; stc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000556aa6 : wait ; xchg eax, ebp ; ret
0x0000000000578487 : wait ; xchg eax, esi ; ret 0xeb1a
0x00000000005a0a47 : wait ; xor bl, byte ptr [rbp + 0x52] ; ret
0x0000000000505538 : wbinvd ; ret
0x0000000000549e0b : wbinvd ; ret 0xbfbe
0x00000000005e1c5d : xchg ah, ah ; jmp qword ptr [rax]
0x00000000005ba4f9 : xchg ah, bl ; ret 0x4cef
0x000000000059b8c3 : xchg al, ch ; js 0x59b885 ; rcr dword ptr [rbx], cl ; ret
0x00000000004e2397 : xchg al, cl ; add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; ret
0x00000000005b19be : xchg al, dh ; je 0x5b1980 ; cwde ; ret 0x1955
0x0000000000430fee : xchg al, dl ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x00000000005b0d8c : xchg bh, cl ; ret
0x00000000005eb275 : xchg bh, dh ; jmp qword ptr [rax]
0x0000000000593dec : xchg bl, bl ; loopne 0x593df9 ; lodsb al, byte ptr [rsi] ; xchg eax, esi ; mov ch, -0x5c ; ret 0x9a5b
0x00000000004a9e12 : xchg byte ptr [rax], bl ; ret
0x0000000000542fa6 : xchg byte ptr [rbp - 0x76b7ffff], dl ; ret
0x00000000005d86f9 : xchg byte ptr [rbp], bl ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x5d86
0x00000000004ce866 : xchg byte ptr [rbx - 0x76b7fffa], dh ; ret
0x0000000000426276 : xchg byte ptr [rcx - 0x3f7afffa], dl ; jle 0x426289 ; pop rbx ; ret
0x00000000005b6233 : xchg byte ptr [rcx], bl ; mov edi, 0xe980d936 ; ret
0x00000000005aa824 : xchg byte ptr [rdi + 0x6c], ah ; xor al, 0xffffffffffffffa8 ; clc ; ret 0xc375
0x0000000000549766 : xchg byte ptr [rdi + rdi*8], al ; dec dword ptr [rax - 0x77] ; ret
0x00000000005b5bb6 : xchg byte ptr [rdi - 0x4a1b791e], dl ; ret 0xf99f
0x00000000005a8bf5 : xchg byte ptr [rdi], dh ; lahf ; ret
0x000000000059fcd4 : xchg byte ptr [rdx - 0x4a9fa23], cl ; ret
0x000000000055687c : xchg byte ptr [rdx - 0xd0da051], bl ; out dx, eax ; ret
0x00000000005572f9 : xchg byte ptr [rdx], ah ; xchg byte ptr [rsp + 0x11], al ; ret 0x2318
0x00000000005572f1 : xchg byte ptr [rdx], ah ; xchg byte ptr [rsp + 0x11], al ; ret 0x8686
0x00000000005d6bcd : xchg byte ptr [rsi], ah ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004d15e4 : xchg byte ptr [rsi], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000005572fb : xchg byte ptr [rsp + 0x11], al ; ret 0x2318
0x00000000005572f3 : xchg byte ptr [rsp + 0x11], al ; ret 0x8686
0x000000000054d905 : xchg cl, bh ; dec dword ptr [rax - 0x77] ; ret
0x000000000045957c : xchg dh, bh ; dec dword ptr [rax - 0x77] ; ret
0x00000000005a314d : xchg dl, dl ; add al, -0x6c ; cli ; ret 0xeca0
0x000000000042c2cf : xchg dword ptr [rax + 0x5a000000], eax ; ret
0x000000000042c2e1 : xchg dword ptr [rax + 0x5a000000], ecx ; ret
0x000000000042c1a0 : xchg dword ptr [rax + 0x5a000000], edx ; ret
0x000000000042c151 : xchg dword ptr [rax + 0x5a000001], edi ; ret
0x000000000042b8f1 : xchg dword ptr [rax + 1], eax ; add byte ptr [rax], al ; ret
0x000000000042b912 : xchg dword ptr [rax + 1], ecx ; add byte ptr [rax], al ; ret
0x000000000042b942 : xchg dword ptr [rax + 1], edi ; add byte ptr [rax], al ; ret
0x000000000042b921 : xchg dword ptr [rax + 1], edx ; add byte ptr [rax], al ; ret
0x000000000042e342 : xchg dword ptr [rax + 1], esi ; add byte ptr [rax], al ; ret
0x000000000049db1a : xchg dword ptr [rax + rax], eax ; ret
0x00000000004e5e75 : xchg dword ptr [rax + rax], esi ; mov qword ptr [r8], rax ; ret
0x0000000000597137 : xchg dword ptr [rax - 0x6f], ebx ; mov dword ptr [rax + rbp*2 - 0x67], eax ; ret 0xef10
0x0000000000512745 : xchg dword ptr [rax - 0xd000000], edi ; ret
0x00000000005f49fd : xchg dword ptr [rax], eax ; add byte ptr [rax], ah ; out -0x1a, al ; call qword ptr [rcx]
0x00000000004a9e42 : xchg dword ptr [rax], ebx ; ret
0x00000000005b57f8 : xchg dword ptr [rax], ebx ; sti ; xchg eax, ebp ; mov cl, ah ; int 0xc3
0x000000000045d798 : xchg dword ptr [rax], ecx ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005b23e2 : xchg dword ptr [rax], ecx ; imul ebx, dword ptr [rbx], 0x38 ; ret 0x78f3
0x00000000004d7e1c : xchg dword ptr [rax], esp ; or al, 0 ; add cl, al ; ret
0x00000000004d7de3 : xchg dword ptr [rax], esp ; or al, 0 ; add cl, al ; ret 0x310b
0x000000000040773c : xchg dword ptr [rbp + rax + 0x24ff0000], esi ; int 0x80
0x000000000054e1d5 : xchg dword ptr [rbp - 7], edi ; dec dword ptr [rax - 0x77] ; ret
0x000000000057d23a : xchg dword ptr [rbx + 0x4523ecf1], eax ; ret 0x8def
0x0000000000538c05 : xchg dword ptr [rbx + rsi*8], esp ; dec dword ptr [rax - 0x77] ; ret
0x00000000005d741f : xchg dword ptr [rbx], edx ; rcl bl ; ret
0x0000000000452598 : xchg dword ptr [rcx + 0xf], eax ; adc dword ptr [rcx], ebx ; ret
0x00000000005b68d2 : xchg dword ptr [rdi + 0x7650b680], ecx ; in eax, dx ; ret
0x000000000058e16a : xchg dword ptr [rdi], edx ; mov ecx, 0xcb06bac1 ; ret 0xfea6
0x00000000005d68e2 : xchg dword ptr [rdi], esi ; pop rax ; push rdx ; sbb al, spl ; ret 0x6c6
0x0000000000578763 : xchg dword ptr [rdi], esp ; std ; popfq ; ret
0x00000000006149f5 : xchg dword ptr [rdx], eax ; add byte ptr [rax + 0x3a], ch ; hlt ; jmp rdi
0x000000000059adf9 : xchg dword ptr [rip + 0x36d53d32], eax ; adc al, 0x62 ; ret
0x00000000005a43b2 : xchg dword ptr [rsi + rsi], ebx ; ret
0x0000000000615755 : xchg eax, ebp ; add al, byte ptr [rax] ; sub byte ptr [rax - 0xc], ah ; call qword ptr [rax]
0x00000000005e4971 : xchg eax, ebp ; add dword ptr [rax], eax ; nop ; sub ch, bl ; call qword ptr [rax]
0x00000000005b7e9f : xchg eax, ebp ; add dword ptr ss:[rbx], edx ; adc ecx, ecx ; ret 0x15a3
0x0000000000593c06 : xchg eax, ebp ; and dword ptr [rcx], ecx ; imul ebx, esp, 0xe7048453 ; jmp qword ptr [rdi]
0x0000000000541505 : xchg eax, ebp ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000458c22 : xchg eax, ebp ; cli ; dec dword ptr [rax - 0x75] ; add byte ptr [rax - 1], cl ; ret
0x00000000004323c2 : xchg eax, ebp ; cmp dword ptr [rdi], edx ; ret
0x00000000004bd267 : xchg eax, ebp ; cmp edi, edx ; dec dword ptr [rax - 0x77] ; ret
0x00000000005486c7 : xchg eax, ebp ; fdivr st(1) ; dec dword ptr [rax - 0x77] ; ret
0x00000000005a1264 : xchg eax, ebp ; in al, dx ; jae 0x5a11f9 ; ret
0x00000000005a1263 : xchg eax, ebp ; in al, dx ; jae 0x5a11fa ; ret
0x00000000005a1264 : xchg eax, ebp ; in al, dx ; jae 0x5a11fb ; ret
0x00000000005a1263 : xchg eax, ebp ; in al, dx ; jae 0x5a11fc ; ret
0x000000000059a997 : xchg eax, ebp ; in al, dx ; leave ; or al, 0x6b ; ret 0x1320
0x00000000005e89f5 : xchg eax, ebp ; int1 ; call qword ptr [rax]
0x00000000005e89a5 : xchg eax, ebp ; int1 ; jmp qword ptr [rax]
0x00000000005e89e5 : xchg eax, ebp ; int1 ; jmp rax
0x00000000005e4d25 : xchg eax, ebp ; jmp 0x5e4d29
0x00000000005a0bf8 : xchg eax, ebp ; lahf ; salc ; sub byte ptr [rdx], -0x1e ; ret 0x60a
0x00000000005b57fb : xchg eax, ebp ; mov cl, ah ; int 0xc3
0x000000000057e147 : xchg eax, ebp ; mov ebp, 0x6fb7fbff ; jmp 0xffffffffacf0a3c0
0x0000000000402dc0 : xchg eax, ebp ; or al, 0 ; xor eax, eax ; pop rbx ; ret
0x000000000044762a : xchg eax, ebp ; or eax, dword ptr [rdx - 6] ; ret
0x00000000004473e1 : xchg eax, ebp ; outsb dx, byte ptr [rsi] ; out -0x6b, al ; outsb dx, byte ptr [rsi] ; stosb byte ptr [rdi], al ; jmp rsi
0x00000000004473e5 : xchg eax, ebp ; outsb dx, byte ptr [rsi] ; stosb byte ptr [rdi], al ; jmp rsi
0x00000000005b7c74 : xchg eax, ebp ; push rax ; in eax, dx ; ret
0x0000000000403858 : xchg eax, ebp ; ret
0x00000000004cad97 : xchg eax, ebp ; ret 0x3948
0x000000000041fce2 : xchg eax, ebp ; ret 0x4489
0x00000000005a5e3c : xchg eax, ebp ; ret 0x4551
0x000000000059cb97 : xchg eax, ebp ; ret 0x45da
0x000000000057d9d8 : xchg eax, ebp ; ret 0x492f
0x00000000005971ee : xchg eax, ebp ; ret 0x5413
0x0000000000551579 : xchg eax, ebp ; ret 0x8148
0x0000000000411b85 : xchg eax, ebp ; ret 0x940f
0x000000000046c164 : xchg eax, ebp ; ret 0xb60f
0x000000000059f43b : xchg eax, ebp ; ret 0xb611
0x00000000004f546e : xchg eax, ebp ; ret 0xc208
0x000000000049feb6 : xchg eax, ebp ; ret 0xc230
0x0000000000546b2c : xchg eax, ebp ; ret 0xc2f6
0x0000000000439cc7 : xchg eax, ebp ; ret 0xca08
0x0000000000418126 : xchg eax, ebp ; ret 0xf039
0x000000000042d56b : xchg eax, ebp ; rol dword ptr [rbp - 0x3f6af013], 0x20 ; ret
0x00000000005608b9 : xchg eax, ebp ; ror byte ptr [rdi], -0x4a ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0x0000000000495534 : xchg eax, ebp ; ror byte ptr [rdi], -0x4a ; rol byte ptr [rcx], -0x40 ; pop rbx ; ret
0x00000000005b5ae6 : xchg eax, ebp ; sbb byte ptr [rdi + 0xcba7548], ah ; ret 0x1595
0x0000000000565c86 : xchg eax, ebp ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000615535 : xchg eax, ebx ; add al, byte ptr [rax] ; clc ; pop rax ; hlt ; call qword ptr [rcx]
0x000000000041f274 : xchg eax, ebx ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x7f], cl ; ret 0xa4
0x00000000005f55c5 : xchg eax, ebx ; add byte ptr [rax], al ; mov byte ptr [rsi - 0x19], dl ; call qword ptr [rdx]
0x00000000004023b6 : xchg eax, ebx ; add byte ptr [rcx], al ; ret
0x00000000005e4881 : xchg eax, ebx ; add dword ptr [rax], eax ; and byte ptr [rdi], ah ; jmp 0x5e488d
0x00000000005e48d1 : xchg eax, ebx ; add dword ptr [rax], eax ; shl byte ptr [rdi], -0x15 ; call qword ptr [rax]
0x00000000005d723f : xchg eax, ebx ; add eax, 0xcb313435 ; or ecx, eax ; ret
0x00000000005a3fe4 : xchg eax, ebx ; and al, 0xffffffffffffffa5 ; ret 0x33c5
0x00000000005af3df : xchg eax, ebx ; call qword ptr [rcx]
0x000000000047894b : xchg eax, ebx ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000005aed69 : xchg eax, ebx ; cmc ; ret 0x2d31
0x00000000004e7d1c : xchg eax, ebx ; ficomp word ptr [rbx] ; xor ecx, ecx ; call r12
0x00000000005ad94a : xchg eax, ebx ; imul esp, dword ptr [rax], 0xa8cc8a79 ; jne 0x5ad90f ; ret
0x0000000000601dd1 : xchg eax, ebx ; in al, dx ; jmp qword ptr [rbx]
0x0000000000600129 : xchg eax, ebx ; jmp 0x60012d
0x0000000000600159 : xchg eax, ebx ; jmp 0x60015d
0x0000000000600171 : xchg eax, ebx ; jmp 0x600175
0x00000000004ca2dc : xchg eax, ebx ; mov al, 0 ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000045d4c9 : xchg eax, ebx ; mov cl, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005a99df : xchg eax, ebx ; mov dl, -0x42 ; adc cl, byte ptr [rcx - 0x78] ; scasd eax, dword ptr [rdi] ; ret
0x000000000045403b : xchg eax, ebx ; ret
0x000000000047e361 : xchg eax, ebx ; ret 0x3949
0x00000000005a10a9 : xchg eax, ebx ; ret 0x6718
0x0000000000594081 : xchg eax, ebx ; ret 0x6d6e
0x0000000000578b3b : xchg eax, ebx ; ret 0x7a90
0x0000000000545ed9 : xchg eax, ebx ; ret 0xffeb
0x00000000005100d9 : xchg eax, ebx ; ret 0xfffb
0x0000000000547229 : xchg eax, ebx ; ror dword ptr [rcx + rdi - 0x19], 0xf ; xchg eax, esi ; ret 0xd184
0x0000000000487a61 : xchg eax, ebx ; std ; dec dword ptr [rax - 0x77] ; ret
0x000000000059ee88 : xchg eax, ebx ; xor al, 0xffffffffffffffcc ; ret
0x00000000005f533d : xchg eax, ecx ; add byte ptr [rax], al ; ror byte ptr [rcx - 0x19], 1 ; call qword ptr [rdi]
0x000000000060538d : xchg eax, ecx ; add dword ptr [rax], eax ; jo 0x60534e ; in eax, dx ; jmp rdx
0x00000000004dbbcb : xchg eax, ecx ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000541955 : xchg eax, ecx ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000005b6de3 : xchg eax, ecx ; fadd qword ptr [rax + rbp - 0x3677a4a0] ; ret 0x90cf
0x00000000006162d1 : xchg eax, ecx ; hlt ; jmp qword ptr [rdx]
0x000000000057cccc : xchg eax, ecx ; in al, -0x14 ; out 0x32, al ; ret
0x000000000059b360 : xchg eax, ecx ; inc byte ptr [rbp + 0x2b62a352] ; ret
0x00000000005a1de6 : xchg eax, ecx ; jmp 0x5a1dad
0x00000000005d680d : xchg eax, ecx ; lea ebx, dword ptr [rip + 0x20c0e0e0] ; loopne 0x5d6801 ; ret 0xc822
0x000000000059b526 : xchg eax, ecx ; lodsb al, byte ptr [rsi] ; neg byte ptr [rdx] ; sahf ; push rsi ; ret 0x38c2
0x00000000005a5113 : xchg eax, ecx ; loop 0x5a5122 ; jbe 0x5a50de ; ret
0x00000000005a5113 : xchg eax, ecx ; loop 0x5a5123 ; jbe 0x5a50df ; ret
0x0000000000597139 : xchg eax, ecx ; mov dword ptr [rax + rbp*2 - 0x67], eax ; ret 0xef10
0x00000000004866db : xchg eax, ecx ; or eax, 0x89480000 ; ret
0x00000000005b27d3 : xchg eax, ecx ; push -0x19 ; jo 0x5b27bc ; ret 0x7553
0x0000000000548e54 : xchg eax, ecx ; push rsp ; add byte ptr [rax - 0x39], cl ; ret
0x000000000057dffe : xchg eax, ecx ; rcl byte ptr [rbp - 0x3fb138a5], cl ; ret
0x000000000047bcab : xchg eax, ecx ; ret
0x000000000057d39a : xchg eax, ecx ; ret 0x5669
0x00000000004b1946 : xchg eax, ecx ; sti ; dec dword ptr [rax - 0x7f] ; ret
0x000000000057d9d2 : xchg eax, ecx ; test eax, 0x296b299e ; xchg eax, ebp ; ret 0x492f
0x00000000005320a0 : xchg eax, ecx ; xchg eax, edi ; clc ; sal byte ptr [rax - 0x75], 1 ; ret 0xbe30
0x000000000059bdc0 : xchg eax, edi ; adc byte ptr [rax + 0x47], dh ; pop rdi ; sub ch, byte ptr [rax - 0x71] ; ret 0x88d0
0x0000000000506d9d : xchg eax, edi ; adc byte ptr [rax], al ; ret 0x8a44
0x000000000041ad5a : xchg eax, edi ; add al, byte ptr [rax] ; add bl, ch ; ret 0x8f80
0x000000000061592d : xchg eax, edi ; add al, byte ptr [rax] ; and byte ptr [rdx - 0xc], ah ; call rcx
0x0000000000615975 : xchg eax, edi ; add al, byte ptr [rax] ; js 0x6159e3 ; hlt ; jmp qword ptr [rcx]
0x00000000004dd138 : xchg eax, edi ; add byte ptr [rax], al ; add bl, ch ; mov ch, 0x5a ; ret
0x00000000005e49f1 : xchg eax, edi ; add dword ptr [rax], eax ; adc byte ptr [rdi], dh ; jmp 0x5e49fd
0x000000000042c395 : xchg eax, edi ; and byte ptr [rcx], al ; add byte ptr [rax], al ; mov rax, rdx ; pop rdx ; ret
0x000000000042cde9 : xchg eax, edi ; call 0xffffffffc342cdf6
0x0000000000541256 : xchg eax, edi ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000005320a1 : xchg eax, edi ; clc ; sal byte ptr [rax - 0x75], 1 ; ret 0xbe30
0x000000000042c311 : xchg eax, edi ; cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rdx ; ret
0x0000000000500899 : xchg eax, edi ; enter 0, 0 ; ret
0x000000000058d870 : xchg eax, edi ; fimul dword ptr [rcx - 0x3f37810b] ; call rdi
0x000000000058e364 : xchg eax, edi ; in eax, -0x2b ; ret 0x7870
0x00000000005e8af5 : xchg eax, edi ; int1 ; call qword ptr [rax]
0x00000000005e8aa5 : xchg eax, edi ; int1 ; jmp qword ptr [rax]
0x00000000005e8ae5 : xchg eax, edi ; int1 ; jmp rax
0x00000000005b2a0b : xchg eax, edi ; ja 0x5b2a4c ; in al, 0x21 ; cmp edi, dword ptr [rcx + 0x30] ; ret 0x958e
0x00000000005a3860 : xchg eax, edi ; jmp qword ptr [rbx]
0x00000000005a9688 : xchg eax, edi ; jrcxz 0x5a9638 ; pop rdx ; ret 0xd69
0x000000000042d368 : xchg eax, edi ; js 0x42d371 ; add byte ptr [rax], al ; ret
0x00000000005b5bb7 : xchg eax, edi ; loop 0x5b5b45 ; in al, -0x4b ; ret 0xf99f
0x000000000042c194 : xchg eax, edi ; mov al, 1 ; add byte ptr [rax], al ; mov rax, rdx ; pop rdx ; ret
0x0000000000500859 : xchg eax, edi ; mov byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004261d9 : xchg eax, edi ; mov byte ptr [rdx], al ; add byte ptr [rax], al ; ret
0x000000000042c120 : xchg eax, edi ; mov eax, 0x5a000001 ; ret
0x00000000005a10a4 : xchg eax, edi ; mov esi, 0x9302bb07 ; ret 0x6718
0x000000000059469c : xchg eax, edi ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x000000000051271a : xchg eax, edi ; nop ; add byte ptr [rax], al ; add byte ptr [rbp + 0xf], cl ; lodsb al, byte ptr [rsi] ; ret
0x000000000059cb6b : xchg eax, edi ; or bl, byte ptr ss:[rcx] ; ret
0x0000000000506d67 : xchg eax, edi ; or byte ptr [rax], al ; ret 0x8a44
0x000000000059763d : xchg eax, edi ; or dh, dl ; lodsb al, byte ptr [rsi] ; ret 0xd6fb
0x00000000005e658d : xchg eax, edi ; out dx, al ; jmp qword ptr [rax]
0x00000000005673d5 : xchg eax, edi ; outsb dx, byte ptr [rsi] ; std ; inc dword ptr [rbp + 0x12678c0] ; ret
0x000000000045ba69 : xchg eax, edi ; ret
0x00000000005a8410 : xchg eax, edi ; ret 0x27ba
0x00000000005729d0 : xchg eax, edi ; ret 0x42
0x00000000004409d7 : xchg eax, edi ; ret 0x8948
0x000000000042cd19 : xchg eax, edi ; rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; ret
0x00000000005b18e4 : xchg eax, edi ; sahf ; or eax, 0xeb00e968 ; ret
0x0000000000506dd3 : xchg eax, edi ; sbb byte ptr [rax], al ; ret 0x8a44
0x000000000042c37f : xchg eax, edi ; sbb byte ptr [rcx], al ; add byte ptr [rax], al ; mov rax, rdx ; pop rdx ; ret
0x00000000005aa07e : xchg eax, edi ; sbb byte ptr ss:[rbp + 0x49a1cfe8], 0x6c ; ret 0x8371
0x00000000005948b5 : xchg eax, edi ; sti ; sub al, -0xf ; ret 0x7130
0x000000000042c349 : xchg eax, edi ; sub byte ptr [rcx], al ; add byte ptr [rax], al ; pop rdx ; ret
0x0000000000500879 : xchg eax, edi ; test al, 0 ; add byte ptr [rax], al ; ret
0x000000000042c0ce : xchg eax, edi ; test al, 1 ; add byte ptr [rax], al ; mov rax, rdx ; pop rdx ; ret
0x00000000005a6b4b : xchg eax, edi ; xchg eax, ebp ; ret
0x0000000000541735 : xchg eax, edi ; xchg eax, edx ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000005b0105 : xchg eax, edi ; xchg esp, edi ; shr edx, cl ; ret
0x00000000005a76e0 : xchg eax, edi ; xor cl, ch ; stosd dword ptr [rdi], eax ; leave ; rcl byte ptr [rcx - 0x3e] ; jmp 0x5a76f9
0x00000000004b3b9a : xchg eax, edx ; adc ecx, dword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000432495 : xchg eax, edx ; add byte ptr [rax], al ; add byte ptr [rax + 0x57362c], bh ; ret
0x0000000000432e11 : xchg eax, edx ; add byte ptr [rax], al ; add byte ptr [rax + 0x573e51], bh ; ret
0x000000000051004a : xchg eax, edx ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x34], cl ; and al, 0xffffffffffffffff ; ret
0x000000000045d8aa : xchg eax, edx ; add byte ptr ds:[rax], al ; xor eax, eax ; ret
0x0000000000432d11 : xchg eax, edx ; add dword ptr [rax], eax ; add byte ptr [rax + 0x573e74], bh ; ret
0x00000000004a7dda : xchg eax, edx ; add r8b, byte ptr [r8] ; xor eax, eax ; pop rbx ; ret
0x0000000000478aa4 : xchg eax, edx ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000005b48f4 : xchg eax, edx ; clc ; ret 0x9f2e
0x00000000004bd6da : xchg eax, edx ; in al, dx ; add byte ptr [rax], al ; xor eax, eax ; pop rdx ; ret
0x0000000000604b69 : xchg eax, edx ; in eax, dx ; jmp qword ptr [rcx]
0x00000000005b50f7 : xchg eax, edx ; insb byte ptr [rdi], dx ; fisttp word ptr [rcx] ; sub esi, ebx ; sar dword ptr [rsi], 1 ; ret
0x00000000005e8935 : xchg eax, edx ; int1 ; call rax
0x00000000005b74c9 : xchg eax, edx ; int1 ; ret 0x250d
0x00000000005a6e4f : xchg eax, edx ; jl 0x5a6e41 ; out dx, al ; test eax, 0x3c37951e ; ret
0x000000000057e39d : xchg eax, edx ; jrcxz 0x57e3bd ; mov ecx, dword ptr [rdx + 0x54] ; xchg eax, edx ; ret
0x000000000057e39c : xchg eax, edx ; jrcxz 0x57e3be ; mov ecx, dword ptr [rdx + 0x54] ; xchg eax, edx ; ret
0x0000000000599a10 : xchg eax, edx ; loop 0x599a69 ; ret 0x74a2
0x00000000005a8cc2 : xchg eax, edx ; mov edi, 0xba1700f6 ; ret 0xbf6b
0x0000000000441688 : xchg eax, edx ; or al, byte ptr [rax] ; add rsp, 0x28 ; ret
0x000000000053206f : xchg eax, edx ; out -0x52, al ; in eax, dx ; leave ; ret 0x3b81
0x000000000054293a : xchg eax, edx ; outsb dx, byte ptr [rsi] ; cli ; dec dword ptr [rax - 0x77] ; ret
0x0000000000579de7 : xchg eax, edx ; ret
0x000000000059c445 : xchg eax, edx ; ret 0x4165
0x00000000005aff14 : xchg eax, edx ; ret 0x54c
0x00000000005b544f : xchg eax, edx ; ret 0x9784
0x00000000005b6304 : xchg eax, edx ; ret 0x9b1e
0x00000000005a16fd : xchg eax, edx ; ret 0xa3a6
0x00000000005a8fff : xchg eax, edx ; ret 0xd298
0x0000000000599a75 : xchg eax, edx ; sahf ; pop rcx ; jne 0x599add ; ret
0x00000000004d004a : xchg eax, edx ; sti ; dec dword ptr [rax - 0x7d] ; ret
0x00000000004b1916 : xchg eax, edx ; sti ; dec dword ptr [rax - 0x7f] ; ret
0x000000000047894a : xchg eax, edx ; xchg eax, ebx ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000004e060a : xchg eax, edx ; xor dword ptr [rdi], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005b473b : xchg eax, esi ; adc dh, byte ptr [rax + rbp*4 - 0xc] ; ret 0x82f4
0x0000000000432291 : xchg eax, esi ; add al, byte ptr [rax] ; add byte ptr [rax + 0x573aae], bh ; ret
0x0000000000426d31 : xchg eax, esi ; add byte ptr [rax], al ; add bh, bh ; ret
0x00000000004c9bf7 : xchg eax, esi ; add dword ptr [rax], eax ; add cl, ch ; ret
0x00000000004b3106 : xchg eax, esi ; add dword ptr [rax], eax ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000005a481c : xchg eax, esi ; add eax, 0x64b0408d ; ret
0x0000000000500564 : xchg eax, esi ; add eax, dword ptr [rax] ; mov eax, 1 ; pop rbx ; ret
0x00000000005413f5 : xchg eax, esi ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000432260 : xchg eax, esi ; cmp edx, dword ptr [rdi] ; ret
0x00000000005e8a35 : xchg eax, esi ; int1 ; call rax
0x00000000004dbc86 : xchg eax, esi ; jnp 0x4dbc90 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005937f6 : xchg eax, esi ; jnp 0x5937a0 ; ret 0x9591
0x000000000054e456 : xchg eax, esi ; mov bh, -2 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000593df1 : xchg eax, esi ; mov ch, -0x5c ; ret 0x9a5b
0x00000000004fe356 : xchg eax, esi ; mov eax, 0x89480003 ; ret
0x0000000000596ccb : xchg eax, esi ; mov ebp, 0xf801df2b ; out dx, eax ; ret
0x00000000005e651d : xchg eax, esi ; out dx, al ; call rax
0x00000000005e6e0d : xchg eax, esi ; out dx, eax ; jmp rax
0x00000000005b7a6d : xchg eax, esi ; outsb dx, byte ptr [rsi] ; mov ecx, 0xb1a8908e ; ret 0xf0ad
0x000000000059b3c5 : xchg eax, esi ; outsd dx, dword ptr [rsi] ; leave ; ret 0xe867
0x000000000059da3c : xchg eax, esi ; pop rbp ; adc eax, 0xa72d001e ; ret
0x000000000046dd19 : xchg eax, esi ; pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000005a39f3 : xchg eax, esi ; pop rcx ; or al, bl ; ret 0x1878
0x00000000005aa795 : xchg eax, esi ; pop rcx ; push rbx ; ret 0xf9bc
0x00000000005a0064 : xchg eax, esi ; push rsp ; int 0x80
0x000000000043e026 : xchg eax, esi ; ret
0x0000000000468705 : xchg eax, esi ; ret 0x3948
0x000000000044805e : xchg eax, esi ; ret 0x3949
0x000000000046c2bf : xchg eax, esi ; ret 0x394d
0x00000000005c3568 : xchg eax, esi ; ret 0x5c
0x000000000047de4e : xchg eax, esi ; ret 0x8440
0x000000000046c2d4 : xchg eax, esi ; ret 0x8444
0x000000000044806b : xchg eax, esi ; ret 0xc931
0x000000000054722f : xchg eax, esi ; ret 0xd184
0x0000000000578488 : xchg eax, esi ; ret 0xeb1a
0x00000000004f3f16 : xchg eax, esi ; ret 0xfffd
0x0000000000481750 : xchg eax, esi ; ror byte ptr [rcx + rdi - 0x12], 0xf ; xchg eax, ebx ; ret
0x00000000005b1889 : xchg eax, esi ; sbb edx, dword ptr [rdx] ; imul dword ptr [rdx - 0x6c] ; ret 0x983e
0x000000000055016a : xchg eax, esi ; stc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000560363 : xchg eax, esi ; std ; inc dword ptr [rbp - 0xd08b40] ; ret
0x00000000005a6722 : xchg eax, esi ; test eax, 0x68206634 ; call rax
0x0000000000599d9a : xchg eax, esi ; xlatb ; stosb byte ptr [rdi], al ; ret
0x00000000005b716a : xchg eax, esi ; xor dword ptr [rcx], 0x58 ; ret
0x00000000004e499f : xchg eax, esp ; adc ah, al ; out 0x2c, al ; inc byte ptr [rcx + 9] ; ret
0x0000000000411ce6 : xchg eax, esp ; adc al, 0x50 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4820
0x00000000004e3d6e : xchg eax, esp ; adc byte ptr [rcx - 0x3ea57d87], bl ; ret 0x4105
0x0000000000507ebc : xchg eax, esp ; adc ebx, esp ; mov esp, 0xc1418f1b ; ret 0x4505
0x0000000000507d71 : xchg eax, esp ; adc ebx, esp ; mov esp, 0xc1418f1b ; ret 0x450e
0x0000000000507af0 : xchg eax, esp ; adc esp, dword ptr [rcx - 0x76912615] ; ret
0x0000000000432c0f : xchg eax, esp ; add al, byte ptr [rax] ; add byte ptr [rax + 0x57402d], bh ; ret
0x00000000004e3cf8 : xchg eax, esp ; add bl, byte ptr [rcx - 0x3ea57d87] ; ret 0x4105
0x000000000040396b : xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; stc ; call rax
0x00000000005f56b5 : xchg eax, esp ; add byte ptr [rax], al ; fcomp dword ptr [rcx - 0x19] ; call rsp
0x00000000005e4911 : xchg eax, esp ; add dword ptr [rax], eax ; sub bl, bpl ; call rax
0x00000000005ab33a : xchg eax, esp ; add eax, ebx ; lodsd eax, dword ptr [rsi] ; ret 0x8362
0x0000000000513cca : xchg eax, esp ; and al, 0xffffffffffffff88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x62c4
0x000000000047dcee : xchg eax, esp ; and al, 0xffffffffffffff88 ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0x8348
0x00000000004241cf : xchg eax, esp ; and al, 0xffffffffffffffe0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x48fe
0x0000000000423c96 : xchg eax, esp ; and al, 0xfffffffffffffff0 ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x348
0x00000000005e914d : xchg eax, esp ; call qword ptr [rax]
0x00000000005e918d : xchg eax, esp ; call rax
0x0000000000541615 : xchg eax, esp ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000005a3150 : xchg eax, esp ; cli ; ret 0xeca0
0x0000000000431f1d : xchg eax, esp ; cmp dl, byte ptr [rdi] ; ret
0x0000000000594eee : xchg eax, esp ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xd0e1
0x00000000005a54fc : xchg eax, esp ; fcmovu st(0), st(2) ; adc al, -0x2f ; mov al, -0xa ; jle 0x5a552f ; ret
0x0000000000578934 : xchg eax, esp ; ffree st(2) ; push rbx ; xor al, 0x16 ; ret 0x56c2
0x00000000005f2f9c : xchg eax, esp ; insd dword ptr [rdi], dx ; add byte ptr [rax], al ; nop ; xor al, 0xffffffffffffffe6 ; jmp rdi
0x00000000005423e8 : xchg eax, esp ; je 0x5423ec ; dec dword ptr [rax - 0x77] ; ret
0x00000000004d8292 : xchg eax, esp ; lahf ; and byte ptr [rax + rax], cl ; add cl, al ; ret 0x310b
0x00000000005b4cbe : xchg eax, esp ; lodsb al, byte ptr [rsi] ; ret
0x00000000004c62f8 : xchg eax, esp ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x00000000005a54b7 : xchg eax, esp ; lodsd eax, dword ptr [rsi] ; push rdx ; push rsp ; out -0x15, al ; ret 0x6449
0x000000000057e578 : xchg eax, esp ; loope 0x57e573 ; ret
0x0000000000614d9c : xchg eax, esp ; mov eax, dword ptr [rdx] ; add byte ptr [rax], dh ; hlt ; call rax
0x00000000005b484e : xchg eax, esp ; mov esi, 0x18d3b1d4 ; ret 0x32c0
0x000000000059cb92 : xchg eax, esp ; mov esi, 0x958c3ca8 ; ret 0x45da
0x000000000058dec5 : xchg eax, esp ; or byte ptr [rax + 0x4d], bl ; ret 0x91b2
0x00000000005a9ad3 : xchg eax, esp ; or byte ptr [rdx + 0x69], bh ; ret
0x00000000005e64dd : xchg eax, esp ; out dx, al ; call qword ptr [rax]
0x00000000005e64cd : xchg eax, esp ; out dx, al ; jmp rax
0x0000000000611d9c : xchg eax, esp ; pop rbx ; add al, byte ptr [rax] ; add byte ptr [rdx - 0xd], ch ; call qword ptr [rcx]
0x00000000005a1a39 : xchg eax, esp ; push r9 ; out dx, eax ; out -0x15, eax ; fdivp st(7) ; cwde ; ret 0x98e5
0x000000000040974e : xchg eax, esp ; ret
0x00000000004b00b8 : xchg eax, esp ; ret 0x37
0x000000000059fd31 : xchg eax, esp ; ret 0x481e
0x000000000059d6b5 : xchg eax, esp ; ret 0x8152
0x000000000043baba : xchg eax, esp ; ret 0x8545
0x000000000040a0fe : xchg eax, esp ; ret 0x8948
0x00000000005b188f : xchg eax, esp ; ret 0x983e
0x000000000045a2c1 : xchg eax, esp ; ret 0xb60f
0x0000000000442941 : xchg eax, esp ; ret 0xc085
0x00000000004cfbf2 : xchg eax, esp ; ret 0xc208
0x000000000041b63b : xchg eax, esp ; ret 0xc284
0x0000000000554acc : xchg eax, esp ; ret 0xc985
0x000000000040a0df : xchg eax, esp ; ret 0xca08
0x000000000041cfc6 : xchg eax, esp ; ret 0xca84
0x000000000043f562 : xchg eax, esp ; ret 0xdb84
0x000000000042930c : xchg eax, esp ; ret 0xf44
0x0000000000442b47 : xchg eax, esp ; ret 0xf883
0x000000000060849c : xchg eax, esp ; ret 1
0x00000000004da746 : xchg eax, esp ; ror byte ptr [rdi], -0x4a ; enter -0x3777, 0x5a ; ret
0x00000000004f5051 : xchg eax, esp ; ror byte ptr [rdi], -0x4a ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0x0000000000478542 : xchg eax, esp ; ror dword ptr [rcx + rdi - 0x18], 0xf ; pushfq ; ret 0xca08
0x00000000005b130b : xchg eax, esp ; sahf ; ret 0x667b
0x0000000000463469 : xchg eax, esp ; sal dword ptr [rbx + rbx*2 + 0x48], -0x77 ; ret
0x0000000000560298 : xchg eax, esp ; sbb ch, dl ; dec dword ptr [rax - 0x77] ; ret
0x00000000004d937e : xchg eax, esp ; scasd eax, dword ptr [rdi] ; and byte ptr [rax + rax], cl ; add cl, al ; ret 0x310b
0x0000000000489701 : xchg eax, esp ; shr bl, 6 ; xor eax, eax ; pop rbx ; ret
0x00000000005aa766 : xchg eax, esp ; sub al, -0x23 ; stosb byte ptr [rdi], al ; ret 0x6595
0x00000000004d7de2 : xchg eax, esp ; xchg dword ptr [rax], esp ; or al, 0 ; add cl, al ; ret 0x310b
0x00000000005d723e : xchg eax, esp ; xchg eax, ebx ; add eax, 0xcb313435 ; or ecx, eax ; ret
0x000000000058eb92 : xchg eax, esp ; xor edx, dword ptr [rsi + 7] ; ret
0x0000000000596184 : xchg eax, r10d ; ret
0x00000000005b484d : xchg eax, r12d ; mov esi, 0x18d3b1d4 ; ret 0x32c0
0x00000000005a6721 : xchg eax, r14d ; test eax, 0x68206634 ; call rax
0x00000000005a4d0b : xchg eax, r8d ; ret 0x18b4
0x00000000005b2d15 : xchg ebp, ebp ; ret
0x000000000050b004 : xchg ebp, esi ; dec dword ptr [rax - 0x77] ; ret
0x00000000005e3b9d : xchg ecx, ebp ; jmp rax
0x00000000005ec741 : xchg ecx, esp ; call qword ptr [rbx]
0x000000000060c649 : xchg edi, ebp ; jmp qword ptr [rsi]
0x00000000005eb2c5 : xchg edi, esi ; call qword ptr [rax]
0x00000000005eb2b5 : xchg edi, esi ; jmp rax
0x00000000004f865c : xchg esi, esi ; dec dword ptr [rax - 0x77] ; ret
0x00000000005b0106 : xchg esp, edi ; shr edx, cl ; ret
0x00000000005b19bd : xchg r8b, sil ; je 0x5b1981 ; cwde ; ret 0x1955
0x00000000005a9e7a : xchg rax, r12 ; ret
0x00000000005b130a : xchg rax, r12 ; sahf ; ret 0x667b
0x0000000000615754 : xchg rax, rbp ; add al, byte ptr [rax] ; sub byte ptr [rax - 0xc], ah ; call qword ptr [rax]
0x0000000000447629 : xchg rax, rbp ; or eax, dword ptr [rdx - 6] ; ret
0x00000000005a7bf3 : xchg rax, rbp ; ret
0x00000000005b2a0a : xchg rax, rdi ; ja 0x5b2a4d ; in al, 0x21 ; cmp edi, dword ptr [rcx + 0x30] ; ret 0x958e
0x0000000000596cca : xchg rax, rsi ; mov ebp, 0xf801df2b ; out dx, eax ; ret
0x00000000005b2b13 : xlatb ; adc ecx, dword ptr [rbx - 0x5c] ; cmp dword ptr [rbp - 0x59], edi ; ret
0x000000000047431b : xlatb ; add ah, byte ptr [rsi + 0xf] ; out dx, eax ; ret
0x00000000004733d2 : xlatb ; add ah, byte ptr [rsi + 0xf] ; out dx, eax ; ret 0x4466
0x00000000005ab967 : xlatb ; add ah, cl ; jbe 0x5ab94f ; rcr eax ; ret
0x000000000052f746 : xlatb ; add al, ah ; ret
0x000000000049cffb : xlatb ; add al, byte ptr [rax] ; pop rbx ; ret
0x00000000005f998d : xlatb ; add byte ptr [rax], al ; and byte ptr [rbx - 0x17], al ; jmp qword ptr [rax]
0x00000000005e5971 : xlatb ; add dword ptr [rax], eax ; and bl, ch ; in al, dx ; jmp rax
0x00000000006099e5 : xlatb ; add dword ptr [rax], eax ; call 0xffffffffd76088a3
0x000000000047a295 : xlatb ; and byte ptr [rip + 0x5ac03100], al ; ret
0x000000000060e989 : xlatb ; call qword ptr [rbx]
0x00000000005485a8 : xlatb ; call rax
0x000000000059dab7 : xlatb ; clc ; sbb edx, dword ptr [rax + rdx*4] ; ret
0x00000000005b5717 : xlatb ; cli ; lodsb al, byte ptr [rsi] ; ret 0x1c5b
0x00000000005ac6fb : xlatb ; cmc ; ret
0x00000000005b24ed : xlatb ; cmp byte ptr [rbp + rbp + 0x57e9c835], ah ; ret
0x00000000005564ab : xlatb ; imul byte ptr [rbx + rsi*4 + 0x2fc2c221] ; ret 0xed5e
0x0000000000552e05 : xlatb ; int1 ; dec dword ptr [rax - 0x77] ; ret
0x00000000005a52e7 : xlatb ; jae 0x5a52ed ; ret 0xd029
0x00000000005a4819 : xlatb ; jg 0x5a47d7 ; xchg eax, esi ; add eax, 0x64b0408d ; ret
0x00000000005e4fdd : xlatb ; jmp 0x5e4fe1
0x000000000059dad6 : xlatb ; mov dword ptr [rax - 0x55], eax ; ret 0x435d
0x0000000000598433 : xlatb ; push rcx ; push rax ; ret
0x0000000000472a08 : xlatb ; ret
0x000000000059db7e : xlatb ; ret 0x32ec
0x000000000055731a : xlatb ; ret 0x4b2e
0x00000000005a44a2 : xlatb ; ret 0x779c
0x000000000059ac77 : xlatb ; ret 0x8a8d
0x000000000055b2e5 : xlatb ; rol byte ptr [rax], 1 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005a7bee : xlatb ; rol byte ptr [rdi - 0x79], 1 ; test al, 0x4c ; xchg eax, ebp ; ret
0x000000000059c8c6 : xlatb ; sahf ; cmp al, 0x26 ; ret 0x6f8
0x00000000005962ee : xlatb ; std ; lea esp, dword ptr [rax] ; sub al, 0x5d ; ret
0x0000000000599d9b : xlatb ; stosb byte ptr [rdi], al ; ret
0x00000000004e4a52 : xlatb ; sub al, byte ptr [rcx + 9] ; rol dword ptr [rcx + 0x31], cl ; ret
0x00000000005b05bb : xlatb ; sub bl, bh ; ret
0x00000000005a7a87 : xlatb ; wait ; call rsp
0x000000000059fdde : xlatb ; xor byte ptr [rbp - 0x30], ah ; ret 0x3ef2
0x0000000000617110 : xor ah, ah ; hlt ; call qword ptr [rsi]
0x000000000052787e : xor ah, al ; ret
0x0000000000532416 : xor ah, al ; ret 0x71
0x000000000044ca02 : xor ah, al ; ret 0x79
0x0000000000527878 : xor ah, al ; sar dword ptr [rcx + 0x6e], 0x41 ; xor ah, al ; ret
0x0000000000529b7e : xor ah, al ; sar dword ptr [rcx + 0x6e], 0x51 ; xor ah, al ; ret
0x000000000057e572 : xor ah, byte ptr [rcx + 0x3d321c5d] ; xchg eax, esp ; loope 0x57e579 ; ret
0x00000000004f64fa : xor ah, byte ptr [rcx] ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000005e9b1c : xor ah, dh ; cmc ; jmp qword ptr [rax]
0x0000000000614711 : xor ah, dh ; jmp qword ptr [rbx]
0x00000000004e917e : xor al, 0 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rax ; ret
0x00000000004f6902 : xor al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004e91d7 : xor al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rax ; ret
0x00000000005f84b0 : xor al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x0000000000608460 : xor al, 0 ; add byte ptr [rax], al ; pop rsp ; ret 1
0x0000000000510d39 : xor al, 0 ; add byte ptr [rax], al ; ret
0x00000000004e9165 : xor al, 0 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000004e5ba5 : xor al, 0 ; jmp rax
0x00000000004e5c1d : xor al, 0 ; mov eax, 1 ; ret
0x00000000004e5e76 : xor al, 0 ; mov qword ptr [r8], rax ; ret
0x00000000004e5d5c : xor al, 0 ; mov qword ptr [rdx], rax ; ret
0x00000000004e5deb : xor al, 0 ; mov qword ptr [rsi], rax ; ret
0x00000000004e6655 : xor al, 0 ; ret
0x0000000000505feb : xor al, 0 ; ror dword ptr [rbx - 0x7ebec7ba], cl ; ret
0x00000000004e6425 : xor al, 0 ; test rax, rax ; je 0x4e6435 ; jmp rax
0x00000000004e6435 : xor al, 0 ; test rax, rax ; je 0x4e6445 ; jmp rax
0x000000000054081b : xor al, 0x11 ; ret
0x0000000000578938 : xor al, 0x16 ; ret 0x56c2
0x000000000043e30c : xor al, 0x24 ; mov rdi, r12 ; call r14
0x0000000000459731 : xor al, 0x24 ; mov rdi, r12 ; call r15
0x000000000043f33f : xor al, 0x24 ; mov rdi, r12 ; call rbx
0x00000000004adf79 : xor al, 0x24 ; mov rdi, r14 ; mov rsi, rcx ; mov edx, eax ; call rbx
0x00000000005485a4 : xor al, 0x24 ; mov rdi, rdx ; call rax
0x000000000059fcd2 : xor al, 0x24 ; xchg byte ptr [rdx - 0x4a9fa23], cl ; ret
0x000000000043ea48 : xor al, 0x24 ; xor edi, edi ; call r14
0x00000000004a4a42 : xor al, 0x24 ; xor edi, edi ; call rbx
0x0000000000540c4e : xor al, 0x24 ; xor edx, edx ; call rax
0x0000000000447596 : xor al, 0x2c ; ret 0x40a3
0x00000000005a5e53 : xor al, 0x2c ; ret 0x6201
0x0000000000595081 : xor al, 0x2e ; idiv dword ptr [rdx] ; ret
0x00000000005d74fd : xor al, 0x30 ; add al, 0x12 ; rcl dl ; ret 0x80b
0x00000000005d6a40 : xor al, 0x31 ; add eax, 0xcbc3c835 ; or ecx, esp ; ret 0xece
0x00000000005d74fc : xor al, 0x34 ; xor byte ptr [rdx + rdx], al ; rcl dl ; ret 0x80b
0x00000000005a6a39 : xor al, 0x35 ; or eax, 0xed2a2bf9 ; ret
0x000000000060fa3c : xor al, 0x38 ; add al, byte ptr [rax] ; loopne 0x60fa5d ; call qword ptr [rax]
0x00000000005efa3c : xor al, 0x38 ; add byte ptr [rax], al ; rcr al, -0x1d ; jmp qword ptr [rcx]
0x0000000000596aa4 : xor al, 0x38 ; ret 0xa070
0x00000000005a47e4 : xor al, 0x44 ; outsd dx, dword ptr [rsi] ; xor al, 4 ; ret 0x14db
0x0000000000578571 : xor al, 0x45 ; ret
0x0000000000496634 : xor al, 0x48 ; mov edi, ebx ; call rax
0x000000000058c3cf : xor al, 0x4b ; and byte ptr [rdx + 0x509b04db], ah ; ret
0x00000000005b5861 : xor al, 0x4d ; sbb al, -0x3b ; ret
0x0000000000432513 : xor al, 0x57 ; add bl, al ; mov eax, 0x5733b7 ; ret
0x000000000043230f : xor al, 0x57 ; add bl, al ; mov eax, 0x573479 ; ret
0x0000000000611d3c : xor al, 0x5b ; add al, byte ptr [rax] ; loopne 0x611db2 ; call qword ptr [rcx]
0x00000000005b5998 : xor al, 0x5c ; ret
0x00000000005af7c9 : xor al, 0x66 ; mov dr0, word ptr [rbp + 0x289cb633] ; ret
0x00000000005a8bb8 : xor al, 0x71 ; ja 0x5a8bd6 ; pop rbx ; add byte ptr [rsi + rbx], bl ; ret
0x0000000000493c38 : xor al, 0x71 ; std ; dec dword ptr [rax - 0x77] ; ret
0x000000000052794e : xor al, 0xffffffc4 ; ret
0x0000000000529c72 : xor al, 0xffffffc4 ; sar dword ptr [rcx + 0x6e], 0x51 ; xor al, 0xffffffffffffffc4 ; ret
0x000000000040b02b : xor al, 0xffffffffffffff89 ; ret
0x00000000005f533c : xor al, 0xffffffffffffff91 ; add byte ptr [rax], al ; ror byte ptr [rcx - 0x19], 1 ; call qword ptr [rdi]
0x00000000005a3858 : xor al, 0xffffffffffffff9c ; sub eax, 0xe2ab75b7 ; xchg eax, edi ; jmp qword ptr [rbx]
0x00000000005b2491 : xor al, 0xffffffffffffffa3 ; and edx, dword ptr [rax] ; mov cl, -0x37 ; jp 0x5b2518 ; ret 0x12c9
0x00000000005aa827 : xor al, 0xffffffffffffffa8 ; clc ; ret 0xc375
0x000000000061713c : xor al, 0xffffffffffffffaf ; add al, byte ptr [rax] ; in al, -0xc ; call qword ptr [rsi]
0x0000000000599808 : xor al, 0xffffffffffffffb0 ; ret 0xa613
0x0000000000617c3c : xor al, 0xffffffffffffffba ; add al, byte ptr [rax] ; shr bh, -0xc ; call rbx
0x0000000000617e3c : xor al, 0xffffffffffffffbc ; add al, byte ptr [rax] ; loopne 0x617e3f ; hlt ; call rdi
0x000000000052794f : xor al, 0xffffffffffffffc4 ; ret
0x0000000000527949 : xor al, 0xffffffffffffffc4 ; sar dword ptr [rcx + 0x6e], 0x41 ; xor al, 0xffffffffffffffc4 ; ret
0x0000000000529c73 : xor al, 0xffffffffffffffc4 ; sar dword ptr [rcx + 0x6e], 0x51 ; xor al, 0xffffffffffffffc4 ; ret
0x000000000059ee8b : xor al, 0xffffffffffffffcc ; ret
0x00000000005d6cff : xor al, 0xffffffffffffffd2 ; ret 0xd012
0x00000000004e977f : xor al, 0xffffffffffffffd5 ; sub byte ptr [rsp + rbx*2], ah ; add byte ptr [rax - 0x77], cl ; ret 0xf3e8
0x00000000005b35c3 : xor al, 0xffffffffffffffde ; mov dh, 0x40 ; ret 0xf1de
0x00000000005f2fa1 : xor al, 0xffffffffffffffe6 ; jmp rdi
0x00000000005544e8 : xor al, 0xffffffffffffffe8 ; mov esi, 0x8948fffe ; ret
0x00000000005e5275 : xor al, 0xffffffffffffffec ; call qword ptr [rax]
0x00000000005d6c5e : xor al, 0xfffffffffffffff4 ; ret 0x2c2
0x00000000005a3fdc : xor al, 0xfffffffffffffff4 ; ret 0xfa73
0x000000000059746c : xor al, 0xfffffffffffffff9 ; ret 0x1ede
0x0000000000584069 : xor al, 0xfffffffffffffffd ; ret
0x000000000057cb1d : xor al, 0xffffffffffffffff ; ret 0xfd45
0x00000000004323f3 : xor al, 1 ; add byte ptr [rax], al ; mov eax, 0x5738f0 ; ret
0x00000000005a9827 : xor al, 1 ; lea esi, dword ptr [rbp - 0x1972dfd7] ; ret 0x5a93
0x00000000005b6ab9 : xor al, 1 ; ret 0x5253
0x00000000005a47e7 : xor al, 4 ; ret 0x14db
0x00000000005af111 : xor al, 9 ; mov cl, -0x14 ; ret 0x203c
0x00000000005a3549 : xor al, bl ; imul ebx, ecx, 0x446915c7 ; ret 0x5815
0x00000000004e2dae : xor al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000050451c : xor al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000043056d : xor al, byte ptr [rax] ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000005043c5 : xor al, byte ptr [rax] ; mov eax, 1 ; pop rbx ; ret
0x0000000000504403 : xor al, byte ptr [rax] ; pop rbx ; ret
0x000000000050d197 : xor al, byte ptr [rax] ; pop rdx ; ret
0x000000000050d175 : xor al, byte ptr [rax] ; ret
0x00000000004b909d : xor al, byte ptr [rcx] ; add byte ptr [rcx], dh ; rcr byte ptr [rdx - 0x3d], 0x58 ; jmp r9
0x00000000004f59aa : xor al, byte ptr [rdx + 4] ; add byte ptr [rcx], bh ; ret
0x00000000005e6f41 : xor al, byte ptr [rdx] ; add al, dl ; lodsb al, byte ptr [rsi] ; out dx, eax ; call rax
0x0000000000479f4a : xor al, byte ptr [rip - 0x3f7ab800] ; je 0x479f5d ; pop rax ; ret
0x0000000000553ddf : xor al, ch ; fucompi st(2) ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000004fb9d7 : xor al, ch ; ret
0x000000000040fce8 : xor al, ch ; ret 0x1586
0x0000000000463cf8 : xor al, ch ; ret 0x72
0x000000000041279b : xor al, ch ; scasd eax, dword ptr [rdi] ; jp 0x4127ae ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005e6b14 : xor bh, 0xee ; call qword ptr [rax]
0x00000000005e8eec : xor bh, 0xf1 ; jmp qword ptr [rax]
0x0000000000478255 : xor bh, bh ; and al, 0xfffffffffffffff5 ; pop rax ; ret 0x57
0x000000000055118a : xor bh, bh ; ret
0x00000000004b0f4a : xor bh, bl ; dec dword ptr [rax - 0x77] ; ret
0x0000000000432647 : xor bh, byte ptr [rax + 0x573e12] ; ret
0x00000000005b0ad3 : xor bh, byte ptr [rbx + 0x6c] ; ret
0x000000000046e11a : xor bh, byte ptr [rbx] ; str word ptr [rax - 0x77] ; ret
0x0000000000446a61 : xor bh, byte ptr [rdx] ; or cl, byte ptr [rcx + 6] ; and al, 0x5c ; ret 0xacd3
0x000000000059adfb : xor bh, byte ptr [rip + 0x621436d5] ; ret
0x00000000005e54c0 : xor bl, al ; add dword ptr [rax], eax ; and byte ptr [rbp - 0x14], ah ; jmp qword ptr [rax - 0x3d]
0x00000000005df308 : xor bl, al ; push rbp ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdx], bh ; ret
0x0000000000484a0e : xor bl, al ; ret
0x000000000042a03a : xor bl, al ; xorps xmm0, xmm0 ; movups xmmword ptr [rdi + 0x28], xmm0 ; ret
0x00000000005fee08 : xor bl, bpl ; jmp qword ptr [rbx]
0x00000000005a0a48 : xor bl, byte ptr [rbp + 0x52] ; ret
0x00000000005fee09 : xor bl, ch ; jmp qword ptr [rbx]
0x00000000005b5991 : xor bl, ch ; mov esi, 0x23a4270 ; xor al, 0x5c ; ret
0x0000000000611159 : xor bl, dh ; call qword ptr [rax]
0x00000000005554e2 : xor bl, dh ; movq qword ptr [rdx], mm3 ; ret
0x000000000044518e : xor bl, dh ; ret
0x000000000042dd48 : xor byte ptr [r11 + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000054569b : xor byte ptr [r8 + 1], r15b ; ret
0x000000000042bf4f : xor byte ptr [r8 + rbp + 0x5a], sil ; ret
0x0000000000482462 : xor byte ptr [r9 - 0x77], r9b ; pop rbp ; cmp byte ptr [rbp - 0x77], cl ; ret
0x0000000000496411 : xor byte ptr [r9], r8b ; mov eax, 1 ; ret
0x00000000004358eb : xor byte ptr [rax + 0x39], cl ; ret 0xef72
0x0000000000408748 : xor byte ptr [rax + 0x41], 0x21 ; ret 0xf8c1
0x00000000005416b3 : xor byte ptr [rax + 1], bh ; ret
0x0000000000561fcc : xor byte ptr [rax + 1], cl ; ret
0x000000000042bf50 : xor byte ptr [rax + rbp + 0x5a], dh ; ret
0x00000000005e79c4 : xor byte ptr [rax - 0x10], dh ; jmp rax
0x00000000005e2c04 : xor byte ptr [rax - 0x1a], ch ; call qword ptr [rax]
0x00000000005ec4b0 : xor byte ptr [rax - 0x1f], dh ; jmp qword ptr [rdx]
0x00000000004b8ddf : xor byte ptr [rax - 0x75], cl ; js 0x4b8df1 ; call rdx
0x00000000004b8e3f : xor byte ptr [rax - 0x75], cl ; js 0x4b8e51 ; call rcx
0x00000000004df0ad : xor byte ptr [rax - 0x75], cl ; xor byte ptr [rax - 0x77], cl ; out dx, eax ; call 0x46b379
0x0000000000472582 : xor byte ptr [rax - 0x77], cl ; dec byte ptr [rcx + rcx*4 - 6] ; call rcx
0x0000000000467f6e : xor byte ptr [rax - 0x77], cl ; out dx, eax ; call 0x4641c6
0x00000000004df0b0 : xor byte ptr [rax - 0x77], cl ; out dx, eax ; call 0x46b376
0x0000000000414879 : xor byte ptr [rax - 0x77], cl ; ret
0x000000000046e28f : xor byte ptr [rax - 0x77], cl ; ret 0x1775
0x0000000000553f28 : xor byte ptr [rax - 0x77], cl ; ret 0x4fe8
0x00000000004c4c30 : xor byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000004e0f4e : xor byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000004e1504 : xor byte ptr [rax - 0x77], cl ; ror byte ptr [rax + 0xf], 1 ; scasd eax, dword ptr [rdi] ; ret
0x00000000004c46e2 : xor byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0x18] ; ret
0x00000000004b8907 : xor byte ptr [rax - 0x7b], cl ; sal byte ptr [rsp + rax + 0x41], 0x59 ; jmp rax
0x0000000000460c6a : xor byte ptr [rax - 0x7d], cl ; ret
0x000000000047cfd4 : xor byte ptr [rax - 1], cl ; ret 0x8348
0x000000000047f17c : xor byte ptr [rax - 1], cl ; ret 0xed31
0x0000000000562615 : xor byte ptr [rax - 9], cl ; and byte ptr [rax + 1], cl ; ret
0x00000000005624e4 : xor byte ptr [rax - 9], cl ; or byte ptr [rax + 1], cl ; ret
0x0000000000562614 : xor byte ptr [rax - 9], r9b ; and byte ptr [rax + 1], cl ; ret
0x00000000005624e3 : xor byte ptr [rax - 9], r9b ; or byte ptr [rax + 1], cl ; ret
0x00000000004b92ec : xor byte ptr [rax], 1 ; add byte ptr [rcx], dh ; rcr byte ptr [rdx - 0x3d], 0x59 ; jmp rax
0x00000000004b3dce : xor byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000580450 : xor byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x5810
0x0000000000535c36 : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x0000000000506744 : xor byte ptr [rax], al ; ror dword ptr [rbx - 0x7ebec7ba], cl ; ret
0x00000000004b879f : xor byte ptr [rax], al ; setne al ; movzx eax, al ; pop rbx ; ret
0x00000000005456b2 : xor byte ptr [rax], al ; setne al ; movzx eax, al ; ret
0x00000000004a5581 : xor byte ptr [rbp + 0x58], 0 ; ret
0x0000000000593d1b : xor byte ptr [rbp + 0x64ec3a31], cl ; mov dl, 0x1c ; ret
0x00000000004e464a : xor byte ptr [rbp + 9], al ; fadd qword ptr [rcx - 0x77] ; ret
0x0000000000568249 : xor byte ptr [rbp + rax - 0x48], dh ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000059fddf : xor byte ptr [rbp - 0x30], ah ; ret 0x3ef2
0x00000000005a3e99 : xor byte ptr [rbp - 0x497e2d45], bh ; jae 0x5a3e6a ; ret
0x0000000000456ae1 : xor byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; ret
0x000000000042dd49 : xor byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x00000000004436b3 : xor byte ptr [rbx + 0x41], bl ; pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000059b274 : xor byte ptr [rbx + 0x7c], 0xfc ; ret
0x0000000000566470 : xor byte ptr [rbx + 0x7e001c78], al ; or edi, edi ; ret
0x000000000056646f : xor byte ptr [rbx + 0x7e001c78], r8b ; or edi, edi ; ret
0x00000000005e3a3c : xor byte ptr [rbx - 0x17], ch ; call qword ptr [rax]
0x00000000005a66ee : xor byte ptr [rbx - 0x76], al ; ret
0x000000000047b27c : xor byte ptr [rbx - 0x76b7fff9], ch ; ret
0x00000000005ebb5c : xor byte ptr [rbx - 8], al ; call rax
0x00000000005eafb1 : xor byte ptr [rbx], al ; add byte ptr [rax], ah ; sub bh, dh ; jmp rax
0x0000000000606a60 : xor byte ptr [rbx], cl ; out dx, al ; call rdi
0x0000000000440f47 : xor byte ptr [rcx + 0x39], cl ; ret 0x1077
0x000000000058d93f : xor byte ptr [rcx + 0x7a], al ; jmp rdi
0x0000000000477249 : xor byte ptr [rcx + 1], bh ; mov eax, ecx ; pop rbx ; ret
0x0000000000561ec5 : xor byte ptr [rcx + 1], cl ; ret 0x1148
0x0000000000593a53 : xor byte ptr [rcx + rbx*2 - 0x1e], cl ; ret 0xfe43
0x0000000000513dc8 : xor byte ptr [rcx + rcx*4 + 0x7f], cl ; cmp bl, dh ; ret
0x0000000000548e53 : xor byte ptr [rcx - 0x38b7ffac], dl ; ret
0x0000000000482463 : xor byte ptr [rcx - 0x77], cl ; pop rbp ; cmp byte ptr [rbp - 0x77], cl ; ret
0x0000000000493097 : xor byte ptr [rcx - 0x77], cl ; ret 0x8b48
0x00000000005057a3 : xor byte ptr [rcx - 1], al ; ret
0x00000000005ebcc4 : xor byte ptr [rcx - 8], cl ; jmp qword ptr [rax]
0x0000000000561e55 : xor byte ptr [rcx - 9], cl ; and dword ptr [rcx], esi ; fisttp dword ptr [rcx + 1] ; ret 0x1148
0x0000000000561e54 : xor byte ptr [rcx - 9], r9b ; and dword ptr [rcx], esi ; fisttp dword ptr [rcx + 1] ; ret 0x1148
0x00000000005b2eab : xor byte ptr [rcx], 0xe9 ; ret 0xa287
0x00000000005ff2e5 : xor byte ptr [rcx], al ; add al, bl ; jmp 0x5ff2f1
0x0000000000430583 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000000004b9292 : xor byte ptr [rcx], al ; add byte ptr [rcx], dh ; rcr byte ptr [rdx - 0x3d], 0x58 ; jmp r8
0x00000000004b92ed : xor byte ptr [rcx], al ; add byte ptr [rcx], dh ; rcr byte ptr [rdx - 0x3d], 0x59 ; jmp rax
0x00000000004b934d : xor byte ptr [rcx], al ; add byte ptr [rcx], dh ; rcr byte ptr [rdx - 0x3d], 0x5a ; jmp rax
0x0000000000496412 : xor byte ptr [rcx], al ; mov eax, 1 ; ret
0x000000000048ec55 : xor byte ptr [rcx], bh ; add al, ch ; ret
0x00000000006104d0 : xor byte ptr [rcx], bl ; call qword ptr [rax]
0x0000000000610500 : xor byte ptr [rcx], bl ; call qword ptr [rsi]
0x000000000050abd0 : xor byte ptr [rcx], dh ; dec dword ptr [rax - 0x77] ; fimul word ptr [rax - 0x77] ; ret 0x8948
0x000000000044caff : xor byte ptr [rcx], dh ; faddp st(4) ; ret 0x61
0x000000000050abcf : xor byte ptr [rcx], r14b ; dec dword ptr [rax - 0x77] ; fimul word ptr [rax - 0x77] ; ret 0x8948
0x000000000050579d : xor byte ptr [rdi + 0x5d], cl ; add byte ptr [rax - 0xbecfec], cl ; ret
0x00000000005e54b4 : xor byte ptr [rdi - 0x14], bl ; inc dword ptr [rax] ; ret
0x00000000005e152c : xor byte ptr [rdi - 0x1e], dh ; call rax
0x00000000005f50f0 : xor byte ptr [rdi], 0xe7 ; jmp qword ptr [rsi]
0x00000000005e84dc : xor byte ptr [rdi], 0xf1 ; jmp rax
0x00000000005a5725 : xor byte ptr [rdi], bl ; cmp al, 0x36 ; cdq ; out dx, al ; jbe 0x5a5743 ; ret 0x6dd1
0x0000000000431afb : xor byte ptr [rdi], dl ; ret
0x00000000005b33be : xor byte ptr [rdx + 0x421d3aa4], bl ; sub al, 0x7e ; ret
0x00000000005985c4 : xor byte ptr [rdx + r11*8 + 0x6e830f8b], 0x9b ; call qword ptr [rdi]
0x0000000000403a65 : xor byte ptr [rdx + rax], 0 ; add byte ptr [rsi + 0x39], ah ; ret
0x00000000005985c5 : xor byte ptr [rdx + rbx*8 + 0x6e830f8b], 0x9b ; call qword ptr [rdi]
0x00000000005d74fe : xor byte ptr [rdx + rdx], al ; rcl dl ; ret 0x80b
0x000000000043dd2c : xor byte ptr [rdx - 0x76b7fff6], al ; ret
0x00000000005a87e5 : xor byte ptr [rdx - 0x7c], ch ; cdq ; sub esi, dword ptr [rbx - 0x50] ; mov ah, -0x54 ; ret
0x00000000005ebb1c : xor byte ptr [rdx - 8], al ; call qword ptr [rax]
0x00000000004322f7 : xor byte ptr [rdx], al ; add byte ptr [rax], al ; mov eax, 0x573525 ; ret
0x00000000005a4c9f : xor byte ptr [rdx], dl ; ret
0x000000000052d197 : xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; and byte ptr [r14 + 0xf], 0xfe ; ret
0x00000000006010d0 : xor byte ptr [rsi - 0x14], cl ; call qword ptr [rdx]
0x000000000059fee7 : xor byte ptr [rsi - 0x17], bl ; mov bl, -0x15 ; ret 0xfe88
0x00000000005eb124 : xor byte ptr [rsi - 9], dh ; jmp qword ptr [rax]
0x00000000005b4a57 : xor byte ptr [rsi], 0x40 ; fcomp st(0), st(4) ; sub byte ptr [rcx + 0x64], 0x4c ; ret
0x00000000005e61a4 : xor byte ptr [rsi], ah ; out dx, al ; call qword ptr [rax]
0x00000000006038d0 : xor byte ptr [rsi], cl ; in eax, dx ; jmp rsi
0x00000000005d6cfc : xor byte ptr [rsp + rsi], al ; xor al, 0xffffffffffffffd2 ; ret 0xd012
0x00000000006173d0 : xor ch, ah ; hlt ; call qword ptr [rsi]
0x00000000005e7064 : xor ch, al ; out dx, eax ; jmp qword ptr [rax]
0x00000000004d6146 : xor ch, al ; stc ; out dx, eax ; ret
0x000000000049d43a : xor ch, bh ; add al, byte ptr [rax] ; xor eax, eax ; pop rbx ; ret
0x00000000004f5cfa : xor ch, byte ptr [rcx] ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000005e5b6d : xor ch, ch ; call rax
0x00000000005e5bd5 : xor ch, ch ; jmp qword ptr [rax]
0x00000000005ac78e : xor ch, ch ; ret 0xa9bd
0x0000000000607361 : xor ch, dh ; jmp rsi
0x00000000005e9384 : xor ch, dl ; lcall ptr [rax] ; ret 2
0x000000000044b5b8 : xor cl, al ; ret
0x00000000005d72c3 : xor cl, al ; xor eax, esi ; int1 ; or byte ptr [rax + 0x40], cl ; ret 0xc002
0x000000000042dad1 : xor cl, byte ptr [rax - 0x75] ; add dword ptr [rax + 0x5a], r15d ; ret
0x000000000046682a : xor cl, byte ptr [rbp] ; add bh, bh ; ret
0x00000000005abcfa : xor cl, byte ptr [rbx - 0x2ed41f02] ; ret
0x0000000000512695 : xor cl, byte ptr [rcx + 0x21] ; ret
0x00000000005a4a3c : xor cl, byte ptr [rdi + rbp*8 + 0x6e] ; ret
0x0000000000431af5 : xor cl, byte ptr [rdx] ; add byte ptr [rax], al ; mov eax, 0x5730ed ; ret
0x00000000005b6063 : xor cl, byte ptr [rsi - 0x4dea093b] ; ret
0x00000000005abcf9 : xor cl, byte ptr fs:[rbx - 0x2ed41f02] ; ret
0x00000000005f9629 : xor cl, ch ; call rax
0x000000000055bb30 : xor cl, ch ; cmp bh, byte ptr [rsi - 0x3fcf0000] ; ret
0x00000000005f96c1 : xor cl, ch ; jmp qword ptr [rdx]
0x00000000005a76e1 : xor cl, ch ; stosd dword ptr [rdi], eax ; leave ; rcl byte ptr [rcx - 0x3e] ; jmp 0x5a76f8
0x00000000005e6a94 : xor cl, dh ; out dx, al ; jmp qword ptr [rax]
0x00000000005d7628 : xor dh, al ; ret 0x9012
0x00000000005378fe : xor dh, bl ; dec dword ptr [rax - 0x77] ; ret
0x00000000005ae4f1 : xor dh, byte ptr [rax + 0x37b69c05] ; je 0x5ae526 ; ret 0x6948
0x00000000005b5711 : xor dh, byte ptr [rsi] ; sub cl, byte ptr [r14 - 0x53052858] ; ret 0x1c5b
0x00000000005e6215 : xor dh, ch ; call qword ptr [rax]
0x00000000005e8dac : xor dh, ch ; int1 ; call qword ptr [rax]
0x000000000049cffa : xor dl, bh ; add al, byte ptr [rax] ; pop rbx ; ret
0x00000000004324e8 : xor dl, byte ptr [edi] ; ret
0x00000000005a9cd2 : xor dl, byte ptr [rax - 0x663a9512] ; mov cl, 0x67 ; ret
0x000000000058b958 : xor dl, byte ptr [rbx] ; nop ; mov ecx, 0xd3c1034a ; push rsi ; ret 0x2211
0x00000000005b5d76 : xor dl, byte ptr [rdi - 0x7c] ; ret
0x00000000004321e3 : xor dl, byte ptr [rdi] ; ret
0x000000000059e8da : xor dl, byte ptr [rdx] ; fisttp word ptr [rbx] ; ret 0x1bbc
0x00000000005586ba : xor dl, byte ptr [rip - 0x76b70002] ; ret
0x00000000005e9a1c : xor dl, dh ; cmc ; jmp qword ptr [rax]
0x00000000004ded97 : xor dl, dh ; dec dword ptr [rax + 0x63] ; ret
0x00000000004ded96 : xor dl, r14b ; dec dword ptr [rax + 0x63] ; ret
0x0000000000431b0c : xor dword ptr [edi], edx ; ret
0x00000000005d6a52 : xor dword ptr [r8], edx ; adc dword ptr [rcx], eax ; adc esp, eax ; ret
0x00000000005d6ac7 : xor dword ptr [rax + 0x40], ecx ; or al, al ; ret 0x2c2
0x00000000005b716c : xor dword ptr [rax + 0x47], ebx ; ret
0x00000000005b3553 : xor dword ptr [rax - 0x22], edx ; ret
0x0000000000564c81 : xor dword ptr [rax - 0x3f], ecx ; loop 0x564caf ; or rax, rdx ; ret
0x000000000049488c : xor dword ptr [rax - 0x77], ecx ; fisttp word ptr [rax - 0x77] ; ret 0x48e8
0x00000000004bb5a4 : xor dword ptr [rax - 0x77], ecx ; fucompi st(0) ; ret
0x000000000043a305 : xor dword ptr [rax - 1], ecx ; ret 0x3948
0x000000000054ad04 : xor dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005ef3ed : xor dword ptr [rax], eax ; add byte ptr [rax], dh ; ret
0x00000000005d6a53 : xor dword ptr [rax], edx ; adc dword ptr [rcx], eax ; adc esp, eax ; ret
0x00000000005b2e1c : xor dword ptr [rbp - 0x1ab24fd0], edx ; ret 0xf505
0x000000000052b45e : xor dword ptr [rbx + rax*8], esp ; jge 0x52b475 ; push rbp ; ret
0x00000000005b484c : xor dword ptr [rbx - 0x6c], eax ; mov esi, 0x18d3b1d4 ; ret 0x32c0
0x00000000005b619a : xor dword ptr [rbx], ebp ; jrcxz 0x5b616c ; push rdi ; ret
0x00000000005993a1 : xor dword ptr [rcx + rax - 0x1069994], ebp ; ret
0x00000000005b484b : xor dword ptr [rcx], 0x43 ; xchg eax, esp ; mov esi, 0x18d3b1d4 ; ret 0x32c0
0x00000000005b716b : xor dword ptr [rcx], 0x58 ; ret
0x00000000005e3221 : xor dword ptr [rcx], eax ; add al, al ; add al, ch ; call rax
0x00000000005e3219 : xor dword ptr [rcx], eax ; add al, dh ; jmp rdi
0x0000000000504387 : xor dword ptr [rcx], eax ; add byte ptr [rax + 1], bh ; pop rbx ; ret
0x00000000005e3211 : xor dword ptr [rcx], eax ; add byte ptr [rax], dl ; jmp rdi
0x00000000004b91bd : xor dword ptr [rcx], eax ; add byte ptr [rcx], dh ; rcr byte ptr [rdx - 0x3d], 0x58 ; jmp r9
0x0000000000593b59 : xor dword ptr [rcx], ebp ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000599473 : xor dword ptr [rdi + 0x69af1543], esi ; ret
0x00000000005ac6f5 : xor dword ptr [rdi + rsi*8], ebp ; mov ebp, 0xf3d76a55 ; cmc ; ret
0x00000000004e060b : xor dword ptr [rdi], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005971ec : xor dword ptr [rdi], edi ; xchg eax, ebp ; ret 0x5413
0x0000000000431b0d : xor dword ptr [rdi], edx ; ret
0x00000000005ae0bd : xor dword ptr [rdx - 0x2e], esp ; and dword ptr [rdx], ebx ; ret
0x00000000004a841b : xor dword ptr [rdx - 0x76b70005], edi ; ret
0x0000000000556d7e : xor dword ptr [rdx - 7], edx ; stc ; ret
0x00000000005e6f01 : xor dword ptr [rdx], eax ; add byte ptr [rax - 0x54], dl ; out dx, eax ; call qword ptr [rax]
0x00000000005e6ef1 : xor dword ptr [rdx], eax ; add byte ptr [rax], dh ; lodsb al, byte ptr [rsi] ; out dx, eax ; jmp rax
0x0000000000593d1d : xor dword ptr [rdx], edi ; in al, dx ; mov dl, 0x1c ; ret
0x00000000005d6a41 : xor dword ptr [rip - 0x343c37cb], eax ; or ecx, esp ; ret 0xece
0x00000000004f1c4d : xor eax, 0x105c8800 ; add dword ptr [rax - 0x7d], ecx ; ret 0x3902
0x00000000004dd2e0 : xor eax, 0x1b800 ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004cdc20 : xor eax, 0x1bf00 ; add byte ptr [rax], al ; call qword ptr [rax]
0x00000000005a6a3a : xor eax, 0x2a2bf90d ; in eax, dx ; ret
0x00000000004465d7 : xor eax, 0x2fececc3 ; ret
0x000000000059befd : xor eax, 0x316bc474 ; ret 0xdc5a
0x00000000004465d3 : xor eax, 0x35131326 ; ret
0x000000000057cd93 : xor eax, 0x3526ffa0 ; or dword ptr [rbp + 0x7b], ecx ; ret
0x000000000057bbc3 : xor eax, 0x35bf35bd ; ret
0x00000000004c8f39 : xor eax, 0x36 ; add byte ptr [rax], al ; pop rax ; ret
0x000000000040a0a7 : xor eax, 0x390012fb ; ret
0x00000000005b24f1 : xor eax, 0x4c57e9c8 ; ret
0x00000000004cd3d9 : xor eax, 0x5aff3100 ; jmp qword ptr [rax]
0x00000000005ad263 : xor eax, 0x5d5c0a0 ; lodsb al, byte ptr [rsi] ; ret
0x00000000005a1027 : xor eax, 0x5de91ef7 ; ret
0x00000000005a4d7d : xor eax, 0x67059841 ; ret
0x00000000005a7e4f : xor eax, 0x7482e41d ; je 0x5a7e95 ; lahf ; ret 0xb224
0x0000000000435c8a : xor eax, 0x7c8b4818 ; and al, 0x20 ; call rax
0x0000000000579de2 : xor eax, 0x840234c9 ; xchg eax, edx ; ret
0x000000000059eaf5 : xor eax, 0x85c16712 ; ret 0x349e
0x00000000004e2a5c : xor eax, 0x89480000 ; ret
0x0000000000566618 : xor eax, 0x8948fffd ; ret
0x00000000005a605c : xor eax, 0x8e7c1367 ; ret
0x00000000004cfbee : xor eax, 0x940f0000 ; ret 0xc208
0x00000000005a7e56 : xor eax, 0xb224c29f ; in al, dx ; ret
0x000000000059bda3 : xor eax, 0xbed17407 ; adc al, byte ptr [rax] ; mov esp, dr0 ; ret
0x0000000000488d99 : xor eax, 0xc0310004 ; pop rbx ; ret
0x00000000005971d6 : xor eax, 0xd07a1fb0 ; sahf ; or bh, byte ptr [rax + 0x46] ; ret 0x9fc2
0x00000000005b7709 : xor eax, 0xdbe9024e ; call 0xffffffffc42300e3
0x00000000004890b0 : xor eax, 0xdbe9ae8 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000485937 : xor eax, 0xe900046a ; ret
0x000000000057e2ed : xor eax, 0xf52a0bc0 ; imul edx, dword ptr [rsi], -0x7e ; call qword ptr [rdx]
0x000000000059c4eb : xor eax, 0xfd90d0ad ; ret 0x9661
0x00000000004cdb60 : xor eax, 0xff314500 ; xor edi, edi ; call qword ptr [rax]
0x00000000004ce02f : xor eax, 0xffff3100 ; push rax ; sub byte ptr [rax - 0x77], cl ; ret
0x000000000048970e : xor eax, 1 ; pop rbx ; ret
0x000000000055bd0c : xor eax, 3 ; pop rbx ; ret
0x00000000004989ca : xor eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004e922c : xor eax, dword ptr [rax] ; ret
0x0000000000490928 : xor eax, dword ptr [rcx + 0x31] ; ret 0xe0c1
0x00000000005e3299 : xor eax, dword ptr [rcx] ; add byte ptr [rax], ah ; or ch, al ; jmp rax
0x000000000048f0a8 : xor eax, dword ptr [rcx] ; add byte ptr [rax], al ; call rax
0x00000000004b8fda : xor eax, dword ptr [rcx] ; add byte ptr [rcx], dh ; rcr byte ptr [rdx - 0x3d], 0x58 ; jmp r11
0x00000000004b8f7a : xor eax, dword ptr [rcx] ; add byte ptr [rcx], dh ; rcr byte ptr [rdx - 0x3d], 0x5a ; jmp rax
0x000000000057e12e : xor eax, dword ptr [rdi] ; fldcw word ptr [rdi] ; jle 0x57e17d ; ret 0xc5e
0x000000000057e12d : xor eax, dword ptr [rdi] ; fldcw word ptr [rdi] ; jle 0x57e17e ; ret 0xc5e
0x00000000005b100c : xor eax, dword ptr [rip + 0x3398db0f] ; ret
0x000000000045def8 : xor eax, dword ptr [rsi + 0x44] ; mov dword ptr [rdi + 4], edx ; mov dword ptr [rdi], eax ; pop rbx ; ret
0x000000000045e2bb : xor eax, dword ptr [rsi] ; mov dword ptr [rdi + 4], edx ; mov dword ptr [rdi], eax ; pop rbx ; ret
0x0000000000484e65 : xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000040dadf : xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop r14 ; ret
0x0000000000509031 : xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000406722 : xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000000004e953e : xor eax, eax ; add rsp, 0x38 ; ret
0x00000000005485b4 : xor eax, eax ; add rsp, 0x48 ; ret
0x00000000004f131d : xor eax, eax ; add rsp, 0x50 ; pop rbx ; ret
0x00000000004861cc : xor eax, eax ; add rsp, 0x58 ; pop rbx ; pop r14 ; ret
0x000000000054e066 : xor eax, eax ; add rsp, 0x70 ; pop rbx ; ret
0x0000000000402483 : xor eax, eax ; add rsp, 8 ; pop rbx ; pop r14 ; ret
0x000000000040aced : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000005175d3 : xor eax, eax ; cmp edx, 0xf ; jle 0x5175c7 ; ret
0x0000000000436588 : xor eax, eax ; cmp esi, -1 ; cmove eax, edi ; pop rbx ; ret
0x00000000004a0209 : xor eax, eax ; cmp rsi, rdx ; je 0x4a0218 ; ret
0x0000000000479ea1 : xor eax, eax ; jmp 0x479eb2
0x00000000004dcfcd : xor eax, eax ; jmp 0x4dcff6
0x0000000000507390 : xor eax, eax ; mov dword ptr [rdi - 8], eax ; mov dword ptr [rdi - 4], eax ; ret
0x00000000004e63cf : xor eax, eax ; mov esi, ebp ; call rax
0x0000000000461312 : xor eax, eax ; mov rdi, rbx ; mov rdx, r14 ; call r15
0x00000000005613f9 : xor eax, eax ; mov rdx, r13 ; call 0x4cd6a7
0x00000000004c2cd2 : xor eax, eax ; movzx eax, al ; ret
0x0000000000489709 : xor eax, eax ; movzx eax, al ; xor eax, 1 ; pop rbx ; ret
0x0000000000402510 : xor eax, eax ; pop rbx ; pop r14 ; pop r15 ; ret
0x000000000042b608 : xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000402dc3 : xor eax, eax ; pop rbx ; ret
0x0000000000408d5a : xor eax, eax ; pop rdx ; ret
0x00000000004089d9 : xor eax, eax ; ret
0x000000000042be88 : xor eax, eax ; test byte ptr [rdi + 0x44], 2 ; je 0x42bec1 ; pop rdx ; ret
0x0000000000548840 : xor eax, eax ; test rdi, rdi ; je 0x548852 ; mov eax, dword ptr [rdi] ; ret
0x00000000005ad0ec : xor eax, ebp ; ret
0x000000000048c4d0 : xor eax, ebx ; add rsp, 8 ; pop rbx ; pop r14 ; ret
0x0000000000597e5e : xor eax, ebx ; ret 0x50e2
0x00000000004ce1e1 : xor eax, ecx ; ret
0x00000000004e2c3f : xor eax, edx ; ret
0x00000000005d72c5 : xor eax, esi ; int1 ; or byte ptr [rax + 0x40], cl ; ret 0xc002
0x0000000000541839 : xor ebp, dword ptr [rbx - 0x3fce0008] ; pop rdx ; ret
0x00000000005adde4 : xor ebp, dword ptr [rdi + rsi*8 - 0x692420fb] ; ret
0x000000000048f3a3 : xor ebp, eax ; cmp dword ptr [rax], eax ; ret
0x000000000053e08b : xor ebp, ebp ; jmp 0x53e0c0
0x0000000000405cfd : xor ebp, ebp ; mov eax, ebp ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004fc5ba : xor ebp, ebp ; mov rax, rbp ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000545988 : xor ebp, ebp ; mov rdi, rbp ; call 0x461c27
0x000000000040718c : xor ebp, ebp ; xor esi, esi ; mov rdi, r12 ; call qword ptr [rax]
0x0000000000486664 : xor ebp, edi ; dec dword ptr [rax - 0x77] ; ret
0x00000000005fc781 : xor ebp, edx ; call rdx
0x00000000005e526d : xor ebp, esp ; jmp rax
0x000000000043f527 : xor ebx, 2 ; dec ebx ; mov eax, ebx ; pop rbx ; ret
0x000000000057da2e : xor ebx, dword ptr [rax + 0x13ecf0b0] ; jb 0x57d9f1 ; call rbx
0x000000000053ee29 : xor ebx, dword ptr [rax + rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000456991 : xor ebx, dword ptr [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0x00000000005c36f8 : xor ebx, eax ; pop rsp ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0x00000000005fee99 : xor ebx, ebp ; call rsp
0x0000000000444c47 : xor ebx, ebx ; jmp 0x444c10
0x0000000000564ede : xor ebx, ebx ; lea rax, qword ptr [rsp + 8] ; ret
0x000000000047a3b4 : xor ebx, ebx ; mov eax, ebx ; pop rbx ; pop r14 ; pop r15 ; ret
0x000000000049c83a : xor ebx, ebx ; mov eax, ebx ; pop rbx ; ret
0x00000000004d0b11 : xor ebx, ebx ; mov rax, rbx ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004256ae : xor ebx, ebx ; mov rax, rbx ; pop rbx ; ret
0x0000000000538ec9 : xor ebx, ebx ; mov rdx, rax ; jmp 0x538ee7
0x0000000000444e59 : xor ebx, ebx ; xor ecx, r12d ; xor edx, r8d ; ret
0x00000000005d7243 : xor ebx, ecx ; or ecx, eax ; ret
0x0000000000444e58 : xor ebx, r11d ; xor ecx, r12d ; xor edx, r8d ; ret
0x000000000057d23b : xor ecx, 0xffffffec ; and eax, dword ptr [rbp + 0x40] ; ret 0x8def
0x00000000004450c7 : xor ecx, dword ptr [r15 + 8] ; xor edx, dword ptr [r15 + 0xc] ; ret
0x0000000000561500 : xor ecx, dword ptr [rax - 0x75] ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x000000000044019f : xor ecx, dword ptr [rax - 0x77] ; ret 0xe8e8
0x000000000043ed8f : xor ecx, dword ptr [rax - 0x77] ; ret 0xf8e8
0x0000000000469afd : xor ecx, dword ptr [rax - 0x7d] ; ret
0x000000000046b2f8 : xor ecx, dword ptr [rax - 1] ; ret
0x00000000005b4ec0 : xor ecx, dword ptr [rbx] ; je 0x5b4eb1 ; ret 0x89f6
0x00000000005125f2 : xor ecx, dword ptr [rcx + 0x21] ; ret 0x894c
0x0000000000492e14 : xor ecx, dword ptr [rcx + 0x415b044b] ; pop rsi ; pop r15 ; ret
0x0000000000471ce9 : xor ecx, dword ptr [rcx - 0x7d] ; ret
0x00000000005a3ec9 : xor ecx, dword ptr [rdi + 0x29] ; ret 0x35cc
0x00000000004450c8 : xor ecx, dword ptr [rdi + 8] ; xor edx, dword ptr [r15 + 0xc] ; ret
0x00000000004f3439 : xor ecx, dword ptr [rdi - 0x3fce0003] ; pop rdx ; ret
0x000000000050484b : xor ecx, dword ptr [rdi] ; test cl, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x90
0x00000000004e850c : xor ecx, eax ; mov rax, rcx ; pop rbx ; ret
0x00000000005b2eac : xor ecx, ebp ; ret 0xa287
0x000000000040526f : xor ecx, ecx ; call 0x461564
0x00000000004e7d20 : xor ecx, ecx ; call r12
0x00000000004cf822 : xor ecx, ecx ; call rax
0x0000000000565fed : xor ecx, ecx ; jmp rax
0x000000000042cd72 : xor ecx, ecx ; mov eax, ecx ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000055e3a4 : xor ecx, ecx ; mov edx, eax ; jmp 0x55e3b3
0x00000000004ec12c : xor ecx, ecx ; mov rax, rcx ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000540ccf : xor ecx, ecx ; mov rdi, r12 ; call rax
0x00000000004903ea : xor ecx, ecx ; mov rdi, rbp ; mov rdx, rbx ; call r10
0x0000000000540d74 : xor ecx, ecx ; mov rdi, rbx ; call r14
0x00000000004138b9 : xor ecx, ecx ; mov rdi, rbx ; call rax
0x00000000004606a3 : xor ecx, ecx ; mov rdi, rbx ; mov rdx, r14 ; call rax
0x000000000053eeec : xor ecx, ecx ; mov rsi, r12 ; mov rdx, r15 ; call rax
0x0000000000411935 : xor ecx, ecx ; movzx eax, cl ; pop rdx ; ret
0x00000000005af8a8 : xor ecx, edi ; pop rbp ; ret 0xe4b6
0x0000000000444e5c : xor ecx, esp ; xor edx, r8d ; ret
0x0000000000444e5b : xor ecx, r12d ; xor edx, r8d ; ret
0x0000000000554e2a : xor edi, 0xffffffff ; test rax, rax ; je 0x554e3d ; pop rax ; ret
0x00000000005af7e7 : xor edi, dword ptr [rbx + 0x48] ; mov esi, 0xa47ecd67 ; ret
0x0000000000486554 : xor edi, ebp ; dec dword ptr [rax - 0x77] ; ret
0x00000000004490eb : xor edi, ebp ; enter -0x163b, -0x11 ; rol esp, 1 ; ret
0x0000000000449252 : xor edi, ebp ; enter 0x41c4, 0x29 ; out dx, eax ; rol esp, cl ; ret
0x00000000005e6c8d : xor edi, ebp ; jmp rax
0x0000000000527178 : xor edi, ebx ; ret
0x0000000000552c46 : xor edi, ecx ; dec dword ptr [rax - 0x77] ; ret
0x00000000004cdb65 : xor edi, edi ; call qword ptr [rax]
0x000000000043ea4a : xor edi, edi ; call r14
0x0000000000459699 : xor edi, edi ; call rax
0x00000000004a4a44 : xor edi, edi ; call rbx
0x00000000004e6385 : xor edi, edi ; mov esi, 1 ; call rax
0x00000000004e5f4c : xor edi, edi ; mov esi, 1 ; pop rbx ; jmp rax
0x00000000004d0b63 : xor edi, edi ; mov rax, rdi ; pop rdx ; ret
0x000000000046fd75 : xor edi, edi ; mov rsi, qword ptr [rsp + 0x28] ; call rax
0x000000000055cdcb : xor edi, edi ; mov rsi, r14 ; call r15
0x000000000055f269 : xor edi, edi ; mov rsi, r14 ; pop rbx ; pop r14 ; pop rbp ; jmp rax
0x00000000004e81a5 : xor edi, edi ; mov rsi, r8 ; jmp rax
0x0000000000471056 : xor edi, edi ; mov rsi, rcx ; mov rdx, rax ; jmp 0x471067
0x00000000004cd3db : xor edi, edi ; pop rdx ; jmp qword ptr [rax]
0x00000000004cdb63 : xor edi, edi ; xor edi, edi ; call qword ptr [rax]
0x000000000043f315 : xor edi, edi ; xor esi, esi ; mov rdi, r12 ; call rbx
0x00000000004f8742 : xor edi, edi ; xor esi, esi ; mov rdi, r14 ; call r12
0x00000000004450cb : xor edx, dword ptr [r15 + 0xc] ; ret
0x000000000059cb3e : xor edx, dword ptr [rax] ; ret
0x00000000004450cc : xor edx, dword ptr [rdi + 0xc] ; ret
0x00000000004321b5 : xor edx, dword ptr [rdi] ; ret
0x000000000058eb93 : xor edx, dword ptr [rsi + 7] ; ret
0x00000000004e91d5 : xor edx, dword ptr [rsp + rsi] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rax ; ret
0x00000000004324cc : xor edx, dword ptr es:[rdi] ; ret
0x0000000000444e5f : xor edx, eax ; ret
0x0000000000484e56 : xor edx, edx ; call rax
0x00000000004f3d0d : xor edx, edx ; jmp rax
0x0000000000457bef : xor edx, edx ; lea rcx, qword ptr [rsp + 0x50] ; call rax
0x000000000040a5c5 : xor edx, edx ; mov r9, r14 ; call rax
0x000000000040b752 : xor edx, edx ; mov r9, r15 ; call rax
0x000000000040e8e9 : xor edx, edx ; mov r9, rbx ; call r10
0x000000000048911f : xor edx, edx ; mov rcx, qword ptr [rsp + 0x30] ; call rax
0x00000000004cf910 : xor edx, edx ; mov rcx, rax ; call r8
0x0000000000500f7a : xor edx, edx ; mov rcx, rbp ; call r12
0x000000000048a0b2 : xor edx, edx ; mov rcx, rbp ; call rax
0x000000000040c0d8 : xor edx, edx ; mov rcx, rbp ; mov r9, r12 ; call rax
0x000000000048590c : xor edx, edx ; mov rcx, rbx ; call rax
0x000000000040ca18 : xor edx, edx ; mov rcx, rbx ; mov r9, r12 ; call rax
0x00000000004fdbbd : xor edx, edx ; mov rdi, r12 ; mov rcx, r13 ; call rbx
0x0000000000484bab : xor edx, edx ; mov rdi, r14 ; call rax
0x00000000004a6e4a : xor edx, edx ; mov rdi, r14 ; mov rcx, r13 ; call rax
0x0000000000461a68 : xor edx, edx ; mov rdi, r14 ; mov rcx, rbx ; call rax
0x00000000005505d4 : xor edx, edx ; mov rdi, r14 ; mov rsi, r12 ; call rax
0x00000000004ff885 : xor edx, edx ; mov rdi, rbx ; mov rcx, r14 ; call rax
0x0000000000461d7e : xor edx, edx ; mov rdi, rbx ; mov rcx, r15 ; call r8
0x0000000000461b2e : xor edx, edx ; mov rdi, rbx ; mov rcx, rbx ; call rax
0x00000000004e81b7 : xor edx, edx ; mov rsi, r8 ; jmp rax
0x000000000040526d : xor edx, edx ; xor ecx, ecx ; call 0x461566
0x00000000005e8fbd : xor edx, esi ; jmp rax
0x0000000000556887 : xor edx, esi ; out dx, eax ; ret
0x0000000000444e5e : xor edx, r8d ; ret
0x00000000004ad1e4 : xor esi, 1 ; lea rdi, qword ptr [rsp + 0x40] ; call r14
0x00000000004880c9 : xor esi, dword ptr [rbx] ; add bh, bh ; ret
0x00000000004b9039 : xor esi, dword ptr [rbx] ; add dword ptr [rax], eax ; xor eax, eax ; pop rdx ; ret
0x0000000000490926 : xor esi, dword ptr [rbx] ; xor eax, dword ptr [rcx + 0x31] ; ret 0xe0c1
0x0000000000594ae2 : xor esi, dword ptr [rdi + 0x51] ; pop rbp ; jg 0x594b22 ; ret
0x00000000005d7630 : xor esi, eax ; ret
0x00000000005b0893 : xor esi, ebx ; pushfq ; ret
0x000000000054d50a : xor esi, esi ; call 0x4e97d4
0x0000000000425f24 : xor esi, esi ; mov eax, r14d ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000426584 : xor esi, esi ; mov rax, r14 ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040718e : xor esi, esi ; mov rdi, r12 ; call qword ptr [rax]
0x0000000000459703 : xor esi, esi ; mov rdi, r12 ; call r15
0x000000000043f317 : xor esi, esi ; mov rdi, r12 ; call rbx
0x000000000043ea0d : xor esi, esi ; mov rdi, r13 ; call r15
0x00000000004f8744 : xor esi, esi ; mov rdi, r14 ; call r12
0x000000000046ed0a : xor esi, esi ; mov rdi, r15 ; call 0x46b017
0x000000000041caad : xor esi, esi ; mov rdi, r15 ; call qword ptr [rax]
0x000000000044191e : xor esi, esi ; mov rdi, rax ; call rbx
0x00000000004adef0 : xor esi, esi ; mov rdi, rax ; pop rax ; jmp rcx
0x00000000004e5f30 : xor esi, esi ; mov rdi, rbx ; call rax
0x0000000000545986 : xor esi, esi ; xor ebp, ebp ; mov rdi, rbp ; call 0x461c29
0x000000000055e3a2 : xor esi, esi ; xor ecx, ecx ; mov edx, eax ; jmp 0x55e3b5
0x0000000000540ccd : xor esi, esi ; xor ecx, ecx ; mov rdi, r12 ; call rax
0x0000000000540d72 : xor esi, esi ; xor ecx, ecx ; mov rdi, rbx ; call r14
0x0000000000540b28 : xor esi, esi ; xor ecx, ecx ; mov rdi, rbx ; call rax
0x000000000042bb09 : xor esp, dword ptr [rbp + rdi*8 - 1] ; pop rbx ; pop r14 ; pop r15 ; ret
0x000000000059f8c2 : xor esp, dword ptr [rbx] ; mov ebx, 0xa068aa40 ; scasd eax, dword ptr [rdi] ; ret
0x00000000005b4188 : xor esp, dword ptr [rsi + 0x74808c49] ; loop 0x5b4189 ; ret
0x0000000000600df1 : xor esp, ebp ; jmp qword ptr [rbx]
0x0000000000600e59 : xor esp, ebp ; jmp rcx
0x00000000005b0046 : xor esp, esi ; ret 0xd057
0x000000000043223c : xor qword ptr [r15], rdx ; ret
0x0000000000432206 : xor r10b, byte ptr [r15] ; ret
0x00000000004321c6 : xor r10d, dword ptr [r15] ; ret
0x0000000000564edd : xor r11, r11 ; lea rax, qword ptr [rsp + 8] ; ret
0x000000000052787d : xor r12b, al ; ret
0x0000000000529b7d : xor r12b, r8b ; sar dword ptr [rcx + 0x6e], 0x51 ; xor ah, al ; ret
0x00000000005b4187 : xor r12d, dword ptr [r14 + 0x74808c49] ; loop 0x5b418a ; ret
0x00000000005378fd : xor r14b, r11b ; dec dword ptr [rax - 0x77] ; ret
0x00000000004490ea : xor r15d, ebp ; enter -0x163b, -0x11 ; rol esp, 1 ; ret
0x00000000004cdb62 : xor r15d, r15d ; xor edi, edi ; call qword ptr [rax]
0x000000000043f314 : xor r15d, r15d ; xor esi, esi ; mov rdi, r12 ; call rbx
0x00000000004f8741 : xor r15d, r15d ; xor esi, esi ; mov rdi, r14 ; call r12
0x00000000004bc246 : xor r8, rax ; ret
0x00000000004e63ce : xor r8d, r8d ; mov esi, ebp ; call rax
0x00000000004606a2 : xor r9d, r9d ; mov rdi, rbx ; mov rdx, r14 ; call rax
0x00000000005ad262 : xor rax, 0x5d5c0a0 ; lodsb al, byte ptr [rsi] ; ret
0x0000000000435c89 : xor rax, 0x7c8b4818 ; and al, 0x20 ; call rax
0x00000000004ce1e0 : xor rax, rcx ; ret
0x00000000004e2c3e : xor rax, rdx ; ret
0x00000000004e850b : xor rcx, rax ; mov rax, rcx ; pop rbx ; ret
0x00000000005d7627 : xor sil, al ; ret 0x9012
0x00000000004e542a : xorps xmm0, xmm0 ; call 0x4e4e09
0x00000000004569c5 : xorps xmm0, xmm0 ; movups xmmword ptr [rax + 8], xmm0 ; pop rbx ; ret
0x0000000000456907 : xorps xmm0, xmm0 ; movups xmmword ptr [rax + 8], xmm0 ; pop rdx ; ret
0x000000000042a03c : xorps xmm0, xmm0 ; movups xmmword ptr [rdi + 0x28], xmm0 ; ret
0x0000000000454949 : xorps xmm0, xmm1 ; ret
0x0000000000433080 : xorps xmm0, xmmword ptr [rax] ; ret
0x00000000004549e9 : xorps xmm2, xmm1 ; ret
