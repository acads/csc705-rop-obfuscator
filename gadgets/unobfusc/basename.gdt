0x0000000000406c14 : adc al, -1 ; jmp rax
0x0000000000404ebc : adc dword ptr [rax], eax ; add byte ptr [rax], al ; call 0x4011a6
0x00000000004036b9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406b51 : add al, 0 ; add al, dh ; mov bl, -1 ; jmp rax
0x0000000000406f24 : add al, 1 ; add byte ptr [rax], al ; call 0xffffffffd3406ee0
0x000000000040415b : add al, ch ; call rcx
0x0000000000404498 : add al, ch ; ret 0xffce
0x0000000000407167 : add al, cl ; ret 0xffff
0x0000000000406b53 : add al, dh ; mov bl, -1 ; jmp rax
0x0000000000405c6f : add bl, dh ; ret
0x0000000000404fc7 : add byte ptr [rax - 0x75], cl ; jge 0x404fc3 ; call 0x401247
0x00000000004051b6 : add byte ptr [rax - 0x75], cl ; jge 0x4051a4 ; mov al, 0 ; call 0x401449
0x0000000000404698 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000405125 : add byte ptr [rax - 0x77], cl ; xlatb ; call 0x4013b6
0x0000000000406b63 : add byte ptr [rax], ah ; mov ch, -1 ; jmp qword ptr [rax]
0x0000000000406c12 : add byte ptr [rax], al ; adc al, -1 ; jmp rax
0x0000000000406f22 : add byte ptr [rax], al ; add al, 1 ; add byte ptr [rax], al ; call 0xffffffffd3406ee2
0x0000000000405c6d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000404fc5 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jge 0x404fc5 ; call 0x401249
0x0000000000405123 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; xlatb ; call 0x4013b8
0x0000000000405c6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004003f8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400428 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000004003fa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040042a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000004003fc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040042c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000407161 : add byte ptr [rax], al ; add byte ptr [rbx + rax], al ; add al, cl ; ret 0xffff
0x0000000000402054 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000403f8e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000407162 : add byte ptr [rax], al ; add r8d, dword ptr [rax] ; add al, cl ; ret 0xffff
0x000000000040367a : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403420 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401cda : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040114b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000404ebe : add byte ptr [rax], al ; call 0x4011a4
0x0000000000406f26 : add byte ptr [rax], al ; call 0xffffffffd3406ede
0x0000000000401329 : add byte ptr [rax], al ; jmp 0x401169
0x0000000000402262 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000404fc6 : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x10] ; call 0x401248
0x0000000000405124 : add byte ptr [rax], al ; mov rdi, rdx ; call 0x4013b7
0x0000000000406b22 : add byte ptr [rax], al ; nop ; mov al, -1 ; jmp qword ptr [rax]
0x0000000000403971 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040455b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004033e8 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004003fe : add byte ptr [rax], al ; ret
0x000000000040042e : add byte ptr [rax], al ; ret 0
0x0000000000406ca2 : add byte ptr [rax], al ; sbb ch, -1 ; jmp qword ptr [rax]
0x0000000000406d13 : add byte ptr [rax], dh ; loop 0x406d1a ; jmp rax
0x0000000000406c23 : add byte ptr [rax], dh ; sar edi, 1 ; jmp qword ptr [rax]
0x0000000000406c63 : add byte ptr [rax], dh ; sar edi, cl ; jmp qword ptr [rax]
0x00000000004051ea : add byte ptr [rbx + 0x1de8c87d], cl ; ret 0xffff
0x000000000040455c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004033e9 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000407163 : add byte ptr [rbx + rax], al ; add al, cl ; ret 0xffff
0x0000000000406f23 : add byte ptr [rcx + rax], al ; add byte ptr [rax], al ; call 0xffffffffd3406ee1
0x0000000000401568 : add byte ptr [rcx], al ; ret
0x0000000000402056 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000403f90 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000406ca0 : add byte ptr [rdx], cl ; add byte ptr [rax], al ; sbb ch, -1 ; jmp qword ptr [rax]
0x0000000000403678 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405122 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rdx ; call 0x4013b9
0x000000000040455a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004033e7 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040206c : add dword ptr [rdi], ecx ; mov dh, -0x3e ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004057ca : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401564 : add eax, 0x206d2e ; add ebx, esi ; ret
0x0000000000407165 : add eax, dword ptr [rax] ; add al, cl ; ret 0xffff
0x000000000040152b : add eax, edx ; sar rax, 1 ; jne 0x40153c ; pop rbp ; ret
0x0000000000401569 : add ebx, esi ; ret
0x00000000004016fb : add esp, 0x10 ; pop rbp ; ret
0x000000000040552c : add esp, 0x130 ; pop rbp ; ret
0x00000000004033e4 : add esp, 0x138 ; pop rbx ; pop rbp ; ret
0x000000000040484c : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000401ff0 : add esp, 0x20 ; pop rbp ; ret
0x000000000040180d : add esp, 0x30 ; pop rbp ; ret
0x0000000000401cdd : add esp, 0x40 ; pop rbp ; ret
0x0000000000403a5c : add esp, 0x50 ; pop rbp ; ret
0x00000000004024f3 : add esp, 0x70 ; pop rbp ; ret
0x000000000040359e : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040396d : add esp, 0x90 ; pop rbp ; ret
0x00000000004046e4 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040114e : add esp, 8 ; ret
0x0000000000407164 : add r8d, dword ptr [rax] ; add al, cl ; ret 0xffff
0x000000000040152a : add rax, rdx ; sar rax, 1 ; jne 0x40153d ; pop rbp ; ret
0x00000000004016fa : add rsp, 0x10 ; pop rbp ; ret
0x000000000040552b : add rsp, 0x130 ; pop rbp ; ret
0x00000000004033e3 : add rsp, 0x138 ; pop rbx ; pop rbp ; ret
0x000000000040484b : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000401fef : add rsp, 0x20 ; pop rbp ; ret
0x000000000040180c : add rsp, 0x30 ; pop rbp ; ret
0x0000000000401cdc : add rsp, 0x40 ; pop rbp ; ret
0x0000000000403a5b : add rsp, 0x50 ; pop rbp ; ret
0x00000000004024f2 : add rsp, 0x70 ; pop rbp ; ret
0x000000000040359d : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040396c : add rsp, 0x90 ; pop rbp ; ret
0x00000000004046e3 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040114d : add rsp, 8 ; ret
0x00000000004057c9 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401567 : and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000403737 : and dword ptr [rax], 0x81d8558b ; ret 1
0x00000000004039a7 : and eax, 0x48fffffd ; add esp, 0x20 ; pop rbp ; ret
0x0000000000401cff : and eax, 0x6082a0 ; pop rbp ; ret
0x0000000000401d23 : and eax, 0x6082a8 ; pop rbp ; ret
0x0000000000401149 : and eax, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000404fa6 : call 0x2e496
0x0000000000404fa5 : call 0x2e497
0x0000000000404ec0 : call 0x4011a2
0x0000000000404fa7 : call 0x401242
0x000000000040514c : call 0x401382
0x0000000000405129 : call 0x4013b2
0x00000000004051ee : call 0x401412
0x0000000000404cc4 : call 0x401436
0x00000000004051bd : call 0x401442
0x0000000000406f28 : call 0xffffffffd3406edc
0x0000000000403419 : call 0xffffffffe902bd69
0x0000000000403418 : call 0xffffffffe902bd6a
0x0000000000405c49 : call qword ptr [r12 + rbx*8]
0x0000000000406f4b : call qword ptr [rsi]
0x0000000000405c4a : call qword ptr [rsp + rbx*8]
0x000000000040158d : call rax
0x000000000040406d : call rcx
0x0000000000406f2b : call rdx
0x000000000040552a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x0000000000404a4f : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401ec6 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040152f : clc ; jne 0x401538 ; pop rbp ; ret
0x00000000004023a5 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405b9b : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000405b9e : clc ; pop rbp ; ret
0x0000000000401727 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404efb : cld ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404e40 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000405b98 : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000405673 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405616 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404e3d : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004033e6 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004014ed : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401500 ; pop rbp ; ret
0x000000000040409c : cwde ; mov rcx, qword ptr [rax*8 + 0x406728] ; jmp rcx
0x000000000040548f : dec dword ptr [rax - 0x7f] ; ret 1
0x00000000004034cb : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000402e03 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000405c4c : fmul qword ptr [rax - 0x7d] ; ret
0x00000000004016f9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401500 : hlt ; pop rbp ; mov edi, 0x608230 ; jmp rax
0x0000000000406c1f : inc dword ptr [rax] ; or byte ptr [rax], al ; add byte ptr [rax], dh ; sar edi, 1 ; jmp qword ptr [rax]
0x0000000000406c5f : inc dword ptr [rax] ; or dword ptr [rax], eax ; add byte ptr [rax], dh ; sar edi, cl ; jmp qword ptr [rax]
0x0000000000406b4f : inc eax ; add al, 0 ; add al, dh ; mov bl, -1 ; jmp rax
0x0000000000406d0f : inc eax ; or eax, dword ptr [rax] ; add byte ptr [rax], dh ; loop 0x406d1e ; jmp rax
0x0000000000401566 : insd dword ptr [rdi], dx ; and byte ptr [rax], al ; add ebx, esi ; ret
0x00000000004046a0 : int 0x80
0x00000000004014f3 : ja 0x4014fa ; pop rbp ; ret
0x00000000004014ff : je 0x4014fd ; pop rbp ; mov edi, 0x608230 ; jmp rax
0x0000000000404fa1 : jge 0x404f9b ; mov qword ptr [rbp - 0x18], rax ; call 0x401248
0x0000000000404fca : jge 0x404fc0 ; call 0x401244
0x0000000000404fe4 : jge 0x404fda ; call 0x401244
0x0000000000404fe0 : jge 0x404fda ; mov rdi, qword ptr [rbp - 0x10] ; call 0x401248
0x00000000004051b9 : jge 0x4051a1 ; mov al, 0 ; call 0x401446
0x00000000004051ec : jge 0x4051ba ; call 0x401414
0x000000000040132b : jmp 0x401167
0x0000000000406b27 : jmp qword ptr [rax]
0x000000000040720b : jmp qword ptr [rdx]
0x0000000000401507 : jmp rax
0x00000000004025ae : jmp rcx
0x0000000000401547 : jmp rdx
0x0000000000401530 : jne 0x401537 ; pop rbp ; ret
0x0000000000404eba : jne 0x404ed9 ; call 0x4011a8
0x0000000000404ed5 : jne 0x404eee ; call 0x4011a8
0x0000000000405146 : jne 0x405140 ; mov rdx, qword ptr [rbp - 0x28] ; call 0x401388
0x00000000004024f5 : jo 0x402556 ; ret
0x0000000000403c04 : jo 0x403c65 ; ret
0x0000000000403d3e : jo 0x403d9f ; ret
0x0000000000406d25 : jrcxz 0x406d28 ; jmp qword ptr [rax]
0x00000000004035a0 : js 0x403600 ; pop rbp ; ret
0x0000000000406d15 : loop 0x406d18 ; jmp rax
0x0000000000406cd5 : loopne 0x406cd8 ; jmp rax
0x0000000000406ce5 : loopne 0x406ce8 ; jmp qword ptr [rax]
0x0000000000406b25 : mov al, -1 ; jmp qword ptr [rax]
0x0000000000404cc2 : mov al, 0 ; call 0x401438
0x00000000004051bb : mov al, 0 ; call 0x401444
0x0000000000403adb : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040396b : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x00000000004057c6 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000406b55 : mov bl, -1 ; jmp rax
0x0000000000401d21 : mov byte ptr [0x6082a8], al ; pop rbp ; ret
0x0000000000401cd9 : mov byte ptr [rax], 0 ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000401563 : mov byte ptr [rip + 0x206d2e], 1 ; ret
0x0000000000406b65 : mov ch, -1 ; jmp qword ptr [rax]
0x000000000040206e : mov dh, -0x3e ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004057cc : mov dh, -0x40 ; pop rbp ; ret
0x0000000000401cfd : mov dword ptr [0x6082a0], edi ; pop rbp ; ret
0x00000000004023a6 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004022b4 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000402368 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000404fdf : mov dword ptr [rbp - 0x10], edi ; mov rdi, qword ptr [rbp - 0x10] ; call 0x401249
0x0000000000404fa4 : mov dword ptr [rbp - 0x18], eax ; call 0x401245
0x0000000000401809 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004016f7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401725 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405b99 : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040241e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040359c : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000402268 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040496b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401fec : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402265 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000401f6f : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000404c03 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040221d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004022ae : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040236a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004024ef : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040359a : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000403ad9 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000405674 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404ef9 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404e3e : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404a4d : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401ec4 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000405b9c : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040158b : mov ebp, esp ; call rax
0x00000000004014f1 : mov ebp, esp ; ja 0x4014fc ; pop rbp ; ret
0x00000000004025a7 : mov ecx, dword ptr [rax*8 + 0x406220] ; jmp rcx
0x0000000000402887 : mov ecx, dword ptr [rax*8 + 0x406268] ; jmp rcx
0x000000000040409e : mov ecx, dword ptr [rax*8 + 0x406728] ; jmp rcx
0x00000000004022b1 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401585 : mov edi, 0x607e20 ; mov rbp, rsp ; call rax
0x0000000000401502 : mov edi, 0x608230 ; jmp rax
0x0000000000401542 : mov edi, 0x608230 ; jmp rdx
0x0000000000404fc9 : mov edi, dword ptr [rbp - 0x10] ; call 0x401245
0x0000000000404fa0 : mov edi, dword ptr [rbp - 0x10] ; mov qword ptr [rbp - 0x18], rax ; call 0x401249
0x00000000004051b8 : mov edi, dword ptr [rbp - 0x20] ; mov al, 0 ; call 0x401447
0x00000000004051eb : mov edi, dword ptr [rbp - 0x38] ; call 0x401415
0x0000000000405c47 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000405127 : mov edi, edx ; call 0x4013b4
0x0000000000405c46 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000405149 : mov edx, dword ptr [rbp - 0x28] ; call 0x401385
0x0000000000405145 : mov esi, dword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 0x28] ; call 0x401389
0x0000000000401540 : mov esi, eax ; mov edi, 0x608230 ; jmp rdx
0x0000000000401cfc : mov qword ptr [0x6082a0], rdi ; pop rbp ; ret
0x0000000000404fa3 : mov qword ptr [rbp - 0x18], rax ; call 0x401246
0x000000000040241d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403ada : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040359b : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x000000000040496a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401feb : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402264 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000401f6e : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000404c02 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040221c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004024ee : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000403ad8 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000404a4c : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401ec3 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040158a : mov rbp, rsp ; call rax
0x00000000004014f0 : mov rbp, rsp ; ja 0x4014fd ; pop rbp ; ret
0x00000000004025a6 : mov rcx, qword ptr [rax*8 + 0x406220] ; jmp rcx
0x0000000000402886 : mov rcx, qword ptr [rax*8 + 0x406268] ; jmp rcx
0x000000000040409d : mov rcx, qword ptr [rax*8 + 0x406728] ; jmp rcx
0x0000000000404fc8 : mov rdi, qword ptr [rbp - 0x10] ; call 0x401246
0x00000000004051b7 : mov rdi, qword ptr [rbp - 0x20] ; mov al, 0 ; call 0x401448
0x0000000000405126 : mov rdi, rdx ; call 0x4013b5
0x0000000000405148 : mov rdx, qword ptr [rbp - 0x28] ; call 0x401386
0x000000000040153f : mov rsi, rax ; mov edi, 0x608230 ; jmp rdx
0x00000000004057cb : movzx eax, al ; pop rbp ; ret
0x000000000040206d : movzx eax, dl ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406b24 : nop ; mov al, -1 ; jmp qword ptr [rax]
0x0000000000405c68 : nop dword ptr [rax + rax] ; ret
0x0000000000402dfe : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000402dff : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000406c21 : or byte ptr [rax], al ; add byte ptr [rax], dh ; sar edi, 1 ; jmp qword ptr [rax]
0x0000000000402050 : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000406c61 : or dword ptr [rax], eax ; add byte ptr [rax], dh ; sar edi, cl ; jmp qword ptr [rax]
0x0000000000403cc1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404ed7 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; call 0x4011a6
0x0000000000406d11 : or eax, dword ptr [rax] ; add byte ptr [rax], dh ; loop 0x406d1c ; jmp rax
0x0000000000404fcd : outsd dx, dword ptr [rsi] ; ret 0xffff
0x0000000000405c5c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405c5e : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040455e : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405c60 : pop r14 ; pop r15 ; ret
0x0000000000404560 : pop r15 ; pop rbp ; ret
0x0000000000405c62 : pop r15 ; ret
0x0000000000401562 : pop rbp ; mov byte ptr [rip + 0x206d2e], 1 ; ret
0x0000000000401501 : pop rbp ; mov edi, 0x608230 ; jmp rax
0x000000000040153e : pop rbp ; mov rsi, rax ; mov edi, 0x608230 ; jmp rdx
0x0000000000405c5b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405c5f : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004014f5 : pop rbp ; ret
0x000000000040455d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004033ea : pop rbx ; pop rbp ; ret
0x0000000000404561 : pop rdi ; pop rbp ; ret
0x0000000000405c63 : pop rdi ; ret
0x000000000040455f : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000405c61 : pop rsi ; pop r15 ; ret
0x0000000000405c5d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000403a5e : push rax ; pop rbp ; ret
0x0000000000402e02 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000401584 : push rbp ; mov edi, 0x607e20 ; mov rbp, rsp ; call rax
0x0000000000404fe7 : push rbp ; ret 0xffff
0x000000000040511d : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x00000000004034ce : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000400400 : ret
0x0000000000400430 : ret 0
0x0000000000401332 : ret 0x206d
0x000000000040206f : ret 0x8348
0x0000000000404059 : ret 0x8844
0x0000000000404ad2 : ret 0x8948
0x0000000000402f2d : ret 0x89a5
0x0000000000402e06 : ret 0x8b48
0x0000000000401a0e : ret 0xb0
0x0000000000401525 : ret 0xc148
0x0000000000403f93 : ret 0xd284
0x0000000000402059 : ret 0xe280
0x000000000040341c : ret 0xee8
0x0000000000402e1b : ret 0xefe8
0x0000000000404cca : ret 0xffc4
0x000000000040449a : ret 0xffce
0x0000000000404ec2 : ret 0xffff
0x000000000040373e : ret 1
0x0000000000401b04 : ret 2
0x00000000004034d2 : ret 8
0x0000000000406b90 : rol byte ptr [rip - 0x47700000], -1 ; jmp rax
0x000000000040469b : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x00000000004024f0 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x40255b ; ret
0x000000000040152c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40153b ; pop rbp ; ret
0x000000000040469c : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x00000000004024f1 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x40255a ; ret
0x000000000040511e : ror byte ptr [rax - 0x7f], 1 ; ret 1
0x0000000000406d10 : ror byte ptr [rbx], 0 ; add byte ptr [rax], dh ; loop 0x406d1d ; jmp rax
0x00000000004034cf : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000406d90 : ror byte ptr [rip - 0x11900000], -1 ; jmp rax
0x0000000000406c15 : sar bh, 1 ; jmp rax
0x0000000000406c55 : sar bh, cl ; jmp rax
0x000000000040152e : sar eax, 1 ; jne 0x401539 ; pop rbp ; ret
0x0000000000406c25 : sar edi, 1 ; jmp qword ptr [rax]
0x0000000000406c65 : sar edi, cl ; jmp qword ptr [rax]
0x000000000040152d : sar rax, 1 ; jne 0x40153a ; pop rbp ; ret
0x0000000000407160 : sbb al, 0 ; add byte ptr [rax], al ; add r8d, dword ptr [rax] ; add al, cl ; ret 0xffff
0x0000000000406ca4 : sbb ch, -1 ; jmp qword ptr [rax]
0x00000000004057c8 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000405c9d : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000405c9c : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000406ec9 : test al, -1 ; jmp rdx
0x0000000000405c6a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000402058 : xchg eax, ebp ; ret 0xe280
0x0000000000403f92 : xchg eax, esp ; ret 0xd284
0x0000000000404fa8 : xchg eax, esp ; ret 0xffff
0x0000000000405128 : xlatb ; call 0x4013b3
0x000000000040552e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000402366 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
