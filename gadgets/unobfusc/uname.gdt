0x0000000000404e5c : adc dword ptr [rax], eax ; add byte ptr [rax], al ; call 0x401166
0x0000000000403699 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406df9 : add al, 0 ; add byte ptr [rax], dl ; mov ah, -1 ; jmp rax
0x00000000004073a4 : add al, 3 ; add byte ptr [rax], al ; call 0xffffffffd3407375
0x000000000040515c : add al, ch ; sahf ; ret 0xffff
0x0000000000404e5f : add al, ch ; sti ; ret 0xffff
0x00000000004073e7 : add al, cl ; ret 0xffff
0x0000000000406f8b : add al, dh ; fdivp st(7) ; jmp qword ptr [rax]
0x0000000000406e0b : add al, dl ; mov ah, -1 ; jmp qword ptr [rax]
0x0000000000406efb : add al, dl ; sar bh, 1 ; jmp rax
0x0000000000405c0f : add bl, dh ; ret
0x0000000000404f67 : add byte ptr [rax - 0x75], cl ; jge 0x404f63 ; call 0x401207
0x0000000000405156 : add byte ptr [rax - 0x75], cl ; jge 0x405144 ; mov al, 0 ; call 0x401409
0x0000000000404678 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x00000000004050c5 : add byte ptr [rax - 0x77], cl ; xlatb ; call 0x401376
0x00000000004073a2 : add byte ptr [rax], al ; add al, 3 ; add byte ptr [rax], al ; call 0xffffffffd3407377
0x0000000000404e5d : add byte ptr [rax], al ; add al, ch ; sti ; ret 0xffff
0x0000000000405c0d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000404f65 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jge 0x404f65 ; call 0x401209
0x00000000004050c3 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; xlatb ; call 0x401378
0x0000000000405c0b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000400420 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000400422 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000405c0c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400424 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000004064c4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4026
0x00000000004073e1 : add byte ptr [rax], al ; add byte ptr [rbx + rax], al ; add al, cl ; ret 0xffff
0x0000000000401b31 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000403f6e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004073e2 : add byte ptr [rax], al ; add r8d, dword ptr [rax] ; add al, cl ; ret 0xffff
0x000000000040365a : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403400 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040110b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000407666 : add byte ptr [rax], al ; call 0x23407639
0x0000000000404e5e : add byte ptr [rax], al ; call 0x401164
0x00000000004073a6 : add byte ptr [rax], al ; call 0xffffffffd3407373
0x0000000000401169 : add byte ptr [rax], al ; jmp 0x401129
0x0000000000402242 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000404f66 : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x10] ; call 0x401208
0x00000000004050c4 : add byte ptr [rax], al ; mov rdi, rdx ; call 0x401377
0x0000000000406e7a : add byte ptr [rax], al ; or ah, 0xff ; jmp rax
0x0000000000403951 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040453b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004033c8 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000405c0e : add byte ptr [rax], al ; ret
0x0000000000400426 : add byte ptr [rax], al ; ret 0
0x00000000004064c6 : add byte ptr [rax], al ; ret 0x4026
0x0000000000406eba : add byte ptr [rax], al ; ror dh, -1 ; jmp rax
0x0000000000406f4b : add byte ptr [rax], dh ; fdiv st(7), st(0) ; jmp qword ptr [rax]
0x0000000000406dfb : add byte ptr [rax], dl ; mov ah, -1 ; jmp rax
0x0000000000406f0b : add byte ptr [rax], dl ; sar bh, cl ; jmp qword ptr [rax]
0x000000000040518a : add byte ptr [rbx + 0x3de8c87d], cl ; ret 0xffff
0x000000000040453c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004033c9 : add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004073e3 : add byte ptr [rbx + rax], al ; add al, cl ; ret 0xffff
0x00000000004073a3 : add byte ptr [rbx + rax], al ; add byte ptr [rax], al ; call 0xffffffffd3407376
0x0000000000401893 : add byte ptr [rbx - 0x1cf4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000401b33 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000401b2f : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000401528 : add byte ptr [rcx], al ; ret
0x0000000000403f70 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000405188 : add byte ptr fs:[rbx + 0x3de8c87d], cl ; ret 0xffff
0x0000000000403658 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004050c2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rdx ; call 0x401379
0x000000000040453a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004033c7 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040576a : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000404e59 : add dword ptr [rdi], ecx ; test dword ptr [rcx], edx ; add byte ptr [rax], al ; add al, ch ; sti ; ret 0xffff
0x0000000000401524 : add eax, 0x206d4e ; add ebx, esi ; ret
0x00000000004073e5 : add eax, dword ptr [rax] ; add al, cl ; ret 0xffff
0x00000000004014eb : add eax, edx ; sar rax, 1 ; jne 0x4014fc ; pop rbp ; ret
0x0000000000401529 : add ebx, esi ; ret
0x00000000004016ab : add esp, 0x10 ; pop rbp ; ret
0x00000000004054cc : add esp, 0x130 ; pop rbp ; ret
0x00000000004033c4 : add esp, 0x138 ; pop rbx ; pop rbp ; ret
0x000000000040482c : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000402050 : add esp, 0x20 ; pop rbp ; ret
0x000000000040178d : add esp, 0x30 ; pop rbp ; ret
0x0000000000403a3c : add esp, 0x50 ; pop rbp ; ret
0x0000000000401d95 : add esp, 0x70 ; pop rbp ; ret
0x000000000040357e : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040394d : add esp, 0x90 ; pop rbp ; ret
0x00000000004046c4 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040110e : add esp, 8 ; ret
0x00000000004073e4 : add r8d, dword ptr [rax] ; add al, cl ; ret 0xffff
0x00000000004014ea : add rax, rdx ; sar rax, 1 ; jne 0x4014fd ; pop rbp ; ret
0x00000000004016aa : add rsp, 0x10 ; pop rbp ; ret
0x00000000004054cb : add rsp, 0x130 ; pop rbp ; ret
0x00000000004033c3 : add rsp, 0x138 ; pop rbx ; pop rbp ; ret
0x000000000040482b : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000040204f : add rsp, 0x20 ; pop rbp ; ret
0x000000000040178c : add rsp, 0x30 ; pop rbp ; ret
0x0000000000403a3b : add rsp, 0x50 ; pop rbp ; ret
0x0000000000401d94 : add rsp, 0x70 ; pop rbp ; ret
0x000000000040357d : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040394c : add rsp, 0x90 ; pop rbp ; ret
0x00000000004046c3 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040110d : add rsp, 8 ; ret
0x0000000000405769 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401527 : and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000403717 : and dword ptr [rax], 0x81d8558b ; ret 1
0x0000000000403987 : and eax, 0x48fffffd ; add esp, 0x20 ; pop rbp ; ret
0x0000000000401dff : and eax, 0x608280 ; pop rbp ; ret
0x0000000000401e23 : and eax, 0x608288 ; pop rbp ; ret
0x0000000000401109 : and eax, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000407668 : call 0x23407637
0x0000000000404f46 : call 0x30436
0x0000000000404f45 : call 0x30437
0x0000000000404e60 : call 0x401162
0x0000000000404f47 : call 0x401202
0x00000000004050ec : call 0x401342
0x00000000004050c9 : call 0x401372
0x000000000040518e : call 0x4013d2
0x000000000040515d : call 0x401402
0x00000000004073a8 : call 0xffffffffd3407371
0x00000000004033f9 : call 0xffffffffe902bd49
0x00000000004033f8 : call 0xffffffffe902bd4a
0x0000000000405be9 : call qword ptr [r12 + rbx*8]
0x00000000004071ab : call qword ptr [rsi]
0x0000000000405bea : call qword ptr [rsp + rbx*8]
0x000000000040154d : call rax
0x00000000004073ab : call rdx
0x00000000004054ca : clc ; add rsp, 0x130 ; pop rbp ; ret
0x0000000000404a2f : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403f81 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004014ef : clc ; jne 0x4014f8 ; pop rbp ; ret
0x0000000000402385 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405b3b : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000405b3e : clc ; pop rbp ; ret
0x0000000000405616 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404e9b : cld ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404de0 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000405b38 : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000405613 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004055b6 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404ddd : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004033c6 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004014ad : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4014c0 ; pop rbp ; ret
0x000000000040407c : cwde ; mov rcx, qword ptr [rax*8 + 0x4069c8] ; jmp rcx
0x000000000040192c : dec dword ptr [rax + 5] ; ret
0x0000000000401899 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040542f : dec dword ptr [rax - 0x7f] ; ret 1
0x00000000004034ab : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000404081 : enter 0x4069, 0 ; jmp rcx
0x0000000000406f4d : fdiv st(7), st(0) ; jmp qword ptr [rax]
0x0000000000406f8d : fdivp st(7) ; jmp qword ptr [rax]
0x0000000000406f7d : fdivp st(7) ; jmp rax
0x0000000000402de3 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000405bec : fmul qword ptr [rax - 0x7d] ; ret
0x00000000004050eb : fsubr st(0) ; ret 0xffff
0x00000000004016a9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004014c0 : hlt ; pop rbp ; mov edi, 0x608238 ; jmp rax
0x0000000000405187 : imul esp, dword ptr [rax + rax*2], -0x75 ; jge 0x40515f ; call 0x4013d9
0x0000000000406f47 : inc dword ptr [rax] ; or al, byte ptr [rax] ; add byte ptr [rax], dh ; fdiv st(7), st(0) ; jmp qword ptr [rax]
0x0000000000406f07 : inc dword ptr [rax] ; or dword ptr [rax], eax ; add byte ptr [rax], dl ; sar bh, cl ; jmp qword ptr [rax]
0x0000000000406f87 : inc dword ptr [rax] ; or eax, dword ptr [rax] ; add al, dh ; fdivp st(7) ; jmp qword ptr [rax]
0x0000000000406df7 : inc eax ; add al, 0 ; add byte ptr [rax], dl ; mov ah, -1 ; jmp rax
0x0000000000406ef7 : inc eax ; or byte ptr [rax], al ; add al, dl ; sar bh, 1 ; jmp rax
0x0000000000401526 : insd dword ptr [rdi], dx ; and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000404680 : int 0x80
0x00000000004014b3 : ja 0x4014ba ; pop rbp ; ret
0x00000000004014bf : je 0x4014bd ; pop rbp ; mov edi, 0x608238 ; jmp rax
0x0000000000404f41 : jge 0x404f3b ; mov qword ptr [rbp - 0x18], rax ; call 0x401208
0x0000000000404f6a : jge 0x404f60 ; call 0x401204
0x0000000000404f84 : jge 0x404f7a ; call 0x401204
0x0000000000404f80 : jge 0x404f7a ; mov rdi, qword ptr [rbp - 0x10] ; call 0x401208
0x0000000000405159 : jge 0x405141 ; mov al, 0 ; call 0x401406
0x000000000040518c : jge 0x40515a ; call 0x4013d4
0x000000000040116b : jmp 0x401127
0x0000000000406dcf : jmp qword ptr [rax]
0x000000000040742b : jmp qword ptr [rdx]
0x00000000004014c7 : jmp rax
0x0000000000401c2a : jmp rcx
0x0000000000401507 : jmp rdx
0x00000000004014f0 : jne 0x4014f7 ; pop rbp ; ret
0x0000000000404e5a : jne 0x404e79 ; call 0x401168
0x0000000000404e75 : jne 0x404e8e ; call 0x401168
0x00000000004050e6 : jne 0x4050e0 ; mov rdx, qword ptr [rbp - 0x28] ; call 0x401348
0x0000000000401d97 : jo 0x401df8 ; ret
0x00000000004024d5 : jo 0x402536 ; ret
0x0000000000403be4 : jo 0x403c45 ; ret
0x0000000000403d1e : jo 0x403d7f ; ret
0x0000000000403580 : js 0x4035e0 ; pop rbp ; ret
0x0000000000403716 : lock and dword ptr [rax], 0x81d8558b ; ret 1
0x000000000040515a : loopne 0x405111 ; add al, ch ; sahf ; ret 0xffff
0x0000000000406e0d : mov ah, -1 ; jmp qword ptr [rax]
0x0000000000406dfd : mov ah, -1 ; jmp rax
0x0000000000406dcd : mov al, -1 ; jmp qword ptr [rax]
0x000000000040515b : mov al, 0 ; call 0x401404
0x0000000000403abb : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040394b : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000401c21 : mov al, 0x48 ; mov ecx, dword ptr [rax*8 + 0x405c60] ; jmp rcx
0x0000000000405766 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401e21 : mov byte ptr [0x608288], al ; pop rbp ; ret
0x0000000000401523 : mov byte ptr [rip + 0x206d4e], 1 ; ret
0x000000000040576c : mov dh, -0x40 ; pop rbp ; ret
0x0000000000401dfd : mov dword ptr [0x608280], edi ; pop rbp ; ret
0x0000000000402386 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000402294 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000402348 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000401de0 : mov dword ptr [rbp - 0x10], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404f7f : mov dword ptr [rbp - 0x10], edi ; mov rdi, qword ptr [rbp - 0x10] ; call 0x401209
0x0000000000404f44 : mov dword ptr [rbp - 0x18], eax ; call 0x401205
0x0000000000401789 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004016a7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405b39 : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004023fe : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040357c : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000402248 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040494b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040204c : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402245 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000401fcf : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000404be3 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004021fd : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401d91 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040228e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040234a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004024cf : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040357a : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000403ab9 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000405614 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404e99 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404dde : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404a2d : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403f7f : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000405b3c : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040154b : mov ebp, esp ; call rax
0x00000000004014b1 : mov ebp, esp ; ja 0x4014bc ; pop rbp ; ret
0x0000000000401c23 : mov ecx, dword ptr [rax*8 + 0x405c60] ; jmp rcx
0x0000000000402587 : mov ecx, dword ptr [rax*8 + 0x4064c0] ; jmp rcx
0x0000000000402867 : mov ecx, dword ptr [rax*8 + 0x406508] ; jmp rcx
0x000000000040407e : mov ecx, dword ptr [rax*8 + 0x4069c8] ; jmp rcx
0x0000000000402291 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401545 : mov edi, 0x607e20 ; mov rbp, rsp ; call rax
0x00000000004014c2 : mov edi, 0x608238 ; jmp rax
0x0000000000401502 : mov edi, 0x608238 ; jmp rdx
0x0000000000404f69 : mov edi, dword ptr [rbp - 0x10] ; call 0x401205
0x0000000000404f40 : mov edi, dword ptr [rbp - 0x10] ; mov qword ptr [rbp - 0x18], rax ; call 0x401209
0x0000000000405158 : mov edi, dword ptr [rbp - 0x20] ; mov al, 0 ; call 0x401407
0x000000000040518b : mov edi, dword ptr [rbp - 0x38] ; call 0x4013d5
0x0000000000405129 : mov edi, eax ; mov rdx, rcx ; call 0x401347
0x0000000000405be7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x00000000004050c7 : mov edi, edx ; call 0x401374
0x0000000000405be6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x00000000004050e9 : mov edx, dword ptr [rbp - 0x28] ; call 0x401345
0x000000000040512c : mov edx, ecx ; call 0x401344
0x00000000004050e5 : mov esi, dword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 0x28] ; call 0x401349
0x0000000000401500 : mov esi, eax ; mov edi, 0x608238 ; jmp rdx
0x0000000000401dfc : mov qword ptr [0x608280], rdi ; pop rbp ; ret
0x0000000000404f43 : mov qword ptr [rbp - 0x18], rax ; call 0x401206
0x00000000004023fd : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403aba : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040357b : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x000000000040494a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040204b : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402244 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000401fce : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000404be2 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004021fc : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004024ce : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000403ab8 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000404a2c : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403f7e : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040154a : mov rbp, rsp ; call rax
0x00000000004014b0 : mov rbp, rsp ; ja 0x4014bd ; pop rbp ; ret
0x0000000000401c22 : mov rcx, qword ptr [rax*8 + 0x405c60] ; jmp rcx
0x0000000000402586 : mov rcx, qword ptr [rax*8 + 0x4064c0] ; jmp rcx
0x0000000000402866 : mov rcx, qword ptr [rax*8 + 0x406508] ; jmp rcx
0x000000000040407d : mov rcx, qword ptr [rax*8 + 0x4069c8] ; jmp rcx
0x0000000000404f68 : mov rdi, qword ptr [rbp - 0x10] ; call 0x401206
0x0000000000405157 : mov rdi, qword ptr [rbp - 0x20] ; mov al, 0 ; call 0x401408
0x0000000000405128 : mov rdi, rax ; mov rdx, rcx ; call 0x401348
0x00000000004050c6 : mov rdi, rdx ; call 0x401375
0x00000000004050e8 : mov rdx, qword ptr [rbp - 0x28] ; call 0x401346
0x000000000040512b : mov rdx, rcx ; call 0x401345
0x00000000004014ff : mov rsi, rax ; mov edi, 0x608238 ; jmp rdx
0x000000000040576b : movzx eax, al ; pop rbp ; ret
0x0000000000405c08 : nop dword ptr [rax + rax] ; ret
0x0000000000406e7c : or ah, 0xff ; jmp rax
0x000000000040407f : or al, 0xffffffffffffffc5 ; enter 0x4069, 0 ; jmp rcx
0x0000000000406f49 : or al, byte ptr [rax] ; add byte ptr [rax], dh ; fdiv st(7), st(0) ; jmp qword ptr [rax]
0x0000000000402dde : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000402ddf : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000406ef9 : or byte ptr [rax], al ; add al, dl ; sar bh, 1 ; jmp rax
0x0000000000406f09 : or dword ptr [rax], eax ; add byte ptr [rax], dl ; sar bh, cl ; jmp qword ptr [rax]
0x0000000000406f89 : or eax, dword ptr [rax] ; add al, dh ; fdivp st(7) ; jmp qword ptr [rax]
0x0000000000403ca1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404e77 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; call 0x401166
0x0000000000406fbd : out -1, eax ; jmp rax
0x0000000000405bfc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405bfe : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040453e : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405c00 : pop r14 ; pop r15 ; ret
0x0000000000404540 : pop r15 ; pop rbp ; ret
0x0000000000405c02 : pop r15 ; ret
0x0000000000401522 : pop rbp ; mov byte ptr [rip + 0x206d4e], 1 ; ret
0x00000000004014c1 : pop rbp ; mov edi, 0x608238 ; jmp rax
0x00000000004014fe : pop rbp ; mov rsi, rax ; mov edi, 0x608238 ; jmp rdx
0x0000000000405bfb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405bff : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004014b5 : pop rbp ; ret
0x000000000040453d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004033ca : pop rbx ; pop rbp ; ret
0x0000000000404541 : pop rdi ; pop rbp ; ret
0x0000000000405c03 : pop rdi ; ret
0x000000000040453f : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000405c01 : pop rsi ; pop r15 ; ret
0x0000000000405bfd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000402181 : push 0x48006082 ; add esp, 0x30 ; pop rbp ; ret
0x0000000000403a3e : push rax ; pop rbp ; ret
0x0000000000402de2 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x00000000004050ea : push rbp ; fsubr st(0) ; ret 0xffff
0x0000000000401544 : push rbp ; mov edi, 0x607e20 ; mov rbp, rsp ; call rax
0x00000000004050bd : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x00000000004034ae : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000401111 : ret
0x0000000000400428 : ret 0
0x0000000000401372 : ret 0x206d
0x0000000000401172 : ret 0x206e
0x00000000004064c8 : ret 0x4026
0x0000000000401b37 : ret 0x8445
0x0000000000404039 : ret 0x8844
0x0000000000404ab2 : ret 0x8948
0x0000000000402f0d : ret 0x89a5
0x0000000000402de6 : ret 0x8b48
0x0000000000402dfb : ret 0xafe8
0x000000000040189c : ret 0xb0
0x00000000004014e5 : ret 0xc148
0x0000000000403f73 : ret 0xd284
0x00000000004033fc : ret 0xee8
0x0000000000404e62 : ret 0xffff
0x000000000040371e : ret 1
0x00000000004034b2 : ret 8
0x0000000000406e38 : rol byte ptr [rip - 0x39b00000], -1 ; jmp rax
0x000000000040467b : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x00000000004024d0 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x40253b ; ret
0x00000000004014ec : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4014fb ; pop rbp ; ret
0x000000000040467c : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x00000000004024d1 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x40253a ; ret
0x00000000004050be : ror byte ptr [rax - 0x7f], 1 ; ret 1
0x0000000000406ef8 : ror byte ptr [rax], 0 ; add al, dl ; sar bh, 1 ; jmp rax
0x00000000004034af : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000407038 : ror byte ptr [rip - 0x12f00000], -1 ; jmp rax
0x0000000000406ebc : ror dh, -1 ; jmp rax
0x000000000040515e : sahf ; ret 0xffff
0x0000000000406efd : sar bh, 1 ; jmp rax
0x0000000000406f0d : sar bh, cl ; jmp qword ptr [rax]
0x00000000004014ee : sar eax, 1 ; jne 0x4014f9 ; pop rbp ; ret
0x00000000004014ed : sar rax, 1 ; jne 0x4014fa ; pop rbp ; ret
0x00000000004073e0 : sbb al, 0 ; add byte ptr [rax], al ; add r8d, dword ptr [rax] ; add al, cl ; ret 0xffff
0x0000000000405768 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000404e61 : sti ; ret 0xffff
0x0000000000405c3d : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000405c3c : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000405c0a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000404e5b : test dword ptr [rcx], edx ; add byte ptr [rax], al ; add al, ch ; sti ; ret 0xffff
0x0000000000401c25 : vsubps xmm8, xmm3, xmmword ptr [rax] ; jmp rcx
0x0000000000404e01 : wait ; ret
0x0000000000401b36 : xchg eax, esp ; ret 0x8445
0x0000000000403f72 : xchg eax, esp ; ret 0xd284
0x00000000004050c8 : xlatb ; call 0x401373
0x00000000004054ce : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000402346 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
