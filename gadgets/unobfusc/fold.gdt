0x0000000000408410 : adc ch, -1 ; jmp rax
0x0000000000403c69 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401a6b : add al, 0x25 ; ret 0x6092
0x000000000040840c : add al, 9 ; add byte ptr [rax], al ; adc ch, -1 ; jmp rax
0x000000000040816f : add al, ah ; ret 0xffff
0x000000000040812f : add al, al ; ret 0xffff
0x00000000004017b7 : add al, ch ; ret
0x0000000000405273 : add al, ch ; xchg eax, edi ; ret
0x000000000040818f : add al, dl ; ret
0x000000000040814f : add al, dl ; ret 0xffff
0x00000000004068ef : add bl, dh ; ret
0x000000000040785f : add byte ptr [rax + rsi*4 - 1], ch ; call rsp
0x0000000000404c48 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000405f44 : add byte ptr [rax - 0x77], cl ; call 0xfffffffffff4223b
0x0000000000405f43 : add byte ptr [rax - 0x77], cl ; call 0xfffffffffff4223c
0x0000000000402077 : add byte ptr [rax - 0x77], cl ; mov r8b, -0x17 ; ret 0xffff
0x000000000040840e : add byte ptr [rax], al ; adc ch, -1 ; jmp rax
0x000000000040840a : add byte ptr [rax], al ; add al, 9 ; add byte ptr [rax], al ; adc ch, -1 ; jmp rax
0x00000000004017b5 : add byte ptr [rax], al ; add al, ch ; ret
0x00000000004068ed : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000402075 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; mov r8b, -0x17 ; ret 0xffff
0x00000000004068eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000405919 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004068ec : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040453e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000408169 : add byte ptr [rax], al ; add byte ptr [rsi + rax], ah ; add al, ah ; ret 0xffff
0x0000000000408149 : add byte ptr [rax], al ; add byte ptr [rsi + rax], al ; add al, dl ; ret 0xffff
0x0000000000401fa3 : add byte ptr [rax], al ; add dh, al ; ret
0x0000000000403c2a : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004039d0 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004012f3 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000040802a : add byte ptr [rax], al ; and al, 5 ; add byte ptr [rax], al ; rol cl, -1 ; jmp qword ptr [rax]
0x00000000004080ea : add byte ptr [rax], al ; in al, 5 ; add byte ptr [rax], al ; nop ; ret 0xffff
0x000000000040785e : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; mov al, -1 ; call rsp
0x0000000000401389 : add byte ptr [rax], al ; jmp 0x401309
0x0000000000401fad : add byte ptr [rax], al ; jmp 0x401f52
0x000000000040789e : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret
0x000000000040591b : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000402812 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004080ee : add byte ptr [rax], al ; nop ; ret 0xffff
0x0000000000402248 : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000404b0b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403998 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004080ae : add byte ptr [rax], al ; push rax ; ret 0xffff
0x00000000004068ee : add byte ptr [rax], al ; ret
0x000000000040802e : add byte ptr [rax], al ; rol cl, -1 ; jmp qword ptr [rax]
0x0000000000407a5f : add byte ptr [rbp + rbp*8 - 1], cl ; call rsp
0x0000000000404b0c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000403999 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040840b : add byte ptr [rcx + rcx], al ; add byte ptr [rax], al ; adc ch, -1 ; jmp rax
0x0000000000401768 : add byte ptr [rcx], al ; ret
0x0000000000401f9f : add byte ptr [rdi], cl ; test byte ptr [rcx], cl ; add byte ptr [rax], al ; add dh, al ; ret
0x00000000004017b1 : add byte ptr [rdi], cl ; test byte ptr [rdx], cl ; add byte ptr [rax], al ; add al, ch ; ret
0x0000000000404540 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040816b : add byte ptr [rsi + rax], ah ; add al, ah ; ret 0xffff
0x000000000040814b : add byte ptr [rsi + rax], al ; add al, dl ; ret 0xffff
0x0000000000401a69 : add dh, al ; add al, 0x25 ; ret 0x6092
0x0000000000401f3c : add dh, al ; ret
0x0000000000401f2e : add dh, dh ; add al, 0x25 ; ret 0x6092
0x0000000000403c28 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404b0a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000403997 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000401b62 : add dword ptr [rax], eax ; add dh, al ; add al, 0x25 ; ret 0x6092
0x0000000000401f3a : add dword ptr [rax], eax ; add dh, al ; ret
0x0000000000401f2c : add dword ptr [rax], eax ; add dh, dh ; add al, 0x25 ; ret 0x6092
0x0000000000401b61 : add dword ptr [rax], r8d ; add dh, al ; add al, 0x25 ; ret 0x6092
0x000000000040644a : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401764 : add eax, 0x207b4e ; add ebx, esi ; ret
0x0000000000402457 : add eax, 0x48ffffef ; add esp, 0x10 ; pop rbp ; ret
0x000000000040172b : add eax, edx ; sar rax, 1 ; jne 0x40173c ; pop rbp ; ret
0x0000000000401769 : add ebx, esi ; ret
0x0000000000401b5f : add ecx, ebp ; add dword ptr [rax], r8d ; add dh, al ; add al, 0x25 ; ret 0x6092
0x00000000004018bb : add esp, 0x10 ; pop rbp ; ret
0x000000000040640c : add esp, 0x130 ; pop rbp ; ret
0x0000000000403994 : add esp, 0x138 ; pop rbx ; pop rbp ; ret
0x0000000000404dfc : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000402590 : add esp, 0x20 ; pop rbp ; ret
0x00000000004019cd : add esp, 0x30 ; pop rbp ; ret
0x000000000040400c : add esp, 0x50 ; pop rbp ; ret
0x0000000000402aa3 : add esp, 0x70 ; pop rbp ; ret
0x0000000000403b4e : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000402244 : add esp, 0x90 ; pop rbp ; ret
0x0000000000404c94 : add esp, 0xa0 ; pop rbp ; ret
0x00000000004058af : add esp, 0xe0 ; pop rbp ; ret
0x00000000004012f6 : add esp, 8 ; ret
0x0000000000401f39 : add qword ptr [rax], r8 ; add dh, al ; ret
0x000000000040172a : add rax, rdx ; sar rax, 1 ; jne 0x40173d ; pop rbp ; ret
0x00000000004018ba : add rsp, 0x10 ; pop rbp ; ret
0x000000000040640b : add rsp, 0x130 ; pop rbp ; ret
0x0000000000403993 : add rsp, 0x138 ; pop rbx ; pop rbp ; ret
0x0000000000404dfb : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000040258f : add rsp, 0x20 ; pop rbp ; ret
0x00000000004019cc : add rsp, 0x30 ; pop rbp ; ret
0x000000000040400b : add rsp, 0x50 ; pop rbp ; ret
0x0000000000402aa2 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000403b4d : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000402243 : add rsp, 0x90 ; pop rbp ; ret
0x0000000000404c93 : add rsp, 0xa0 ; pop rbp ; ret
0x00000000004058ae : add rsp, 0xe0 ; pop rbp ; ret
0x00000000004012f5 : add rsp, 8 ; ret
0x0000000000406449 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040802c : and al, 5 ; add byte ptr [rax], al ; rol cl, -1 ; jmp qword ptr [rax]
0x0000000000401767 : and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000403f57 : and eax, 0x48fffffd ; add esp, 0x20 ; pop rbp ; ret
0x0000000000401a64 : and eax, 0x6092c1 ; add dh, al ; add al, 0x25 ; ret 0x6092
0x000000000040233f : and eax, 0x6092d8 ; pop rbp ; ret
0x0000000000402363 : and eax, 0x6092e0 ; pop rbp ; ret
0x00000000004053a3 : call 0x401652
0x00000000004039c9 : call 0xffffffffe902c319
0x00000000004039c8 : call 0xffffffffe902c31a
0x0000000000405f48 : call 0xfffffffffff42237
0x0000000000405f47 : call 0xfffffffffff42238
0x00000000004068c9 : call qword ptr [r12 + rbx*8]
0x0000000000407c33 : call qword ptr [rax]
0x0000000000407893 : call qword ptr [rsi + rax - 0x3dd40000]
0x0000000000407c53 : call qword ptr [rsi]
0x00000000004068ca : call qword ptr [rsp + rbx*8]
0x000000000040178d : call rax
0x0000000000407e93 : call rdx
0x0000000000407b53 : call rsi
0x00000000004077e3 : call rsp
0x000000000040640a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x0000000000404fff : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404551 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040172f : clc ; jne 0x401738 ; pop rbp ; ret
0x0000000000402326 : clc ; mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000402955 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040681b : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402319 : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040231d : clc ; pop rbp ; ret
0x0000000000405918 : cld ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004018e7 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405a69 : cld ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405be4 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004058ad : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x0000000000406818 : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000405ac3 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405a66 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405be1 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040591f : cld ; pop rbp ; ret
0x0000000000403996 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004016ed : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401700 ; pop rbp ; ret
0x00000000004012f1 : cmp eax, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000040464c : cwde ; mov rcx, qword ptr [rax*8 + 0x4072b8] ; jmp rcx
0x000000000040636f : dec dword ptr [rax - 0x7f] ; ret 1
0x0000000000403a7b : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x00000000004033b3 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x00000000004068cc : fmul qword ptr [rax - 0x7d] ; ret
0x00000000004018b9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401700 : hlt ; pop rbp ; mov edi, 0x609260 ; jmp rax
0x0000000000407a21 : in al, -1 ; call rsp
0x00000000004080ec : in al, 5 ; add byte ptr [rax], al ; nop ; ret 0xffff
0x000000000040597d : in al, dx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407860 : insb byte ptr [rdi], dx ; mov al, -1 ; call rsp
0x0000000000404c50 : int 0x80
0x00000000004016f3 : ja 0x4016fa ; pop rbp ; ret
0x0000000000405f42 : ja 0x405f8c ; add byte ptr [rax - 0x77], cl ; call 0xfffffffffff4223d
0x00000000004016ff : je 0x4016fd ; pop rbp ; mov edi, 0x609260 ; jmp rax
0x0000000000405f41 : jge 0x405fc3 ; add byte ptr [rax - 0x77], cl ; call 0xfffffffffff4223e
0x000000000040138b : jmp 0x401307
0x0000000000401b60 : jmp 0x401cb3
0x0000000000401faf : jmp 0x401f50
0x0000000000408033 : jmp qword ptr [rax]
0x0000000000407f13 : jmp qword ptr [rdx]
0x0000000000401707 : jmp rax
0x0000000000402b5e : jmp rcx
0x0000000000401747 : jmp rdx
0x0000000000401730 : jne 0x401737 ; pop rbp ; ret
0x000000000040539e : jne 0x405367 ; mov edx, dword ptr [rbp - 0x1c] ; call 0x401657
0x0000000000401766 : jnp 0x40178d ; add byte ptr [rcx], al ; ret
0x0000000000401765 : jnp 0x40178e ; add byte ptr [rcx], al ; ret
0x0000000000402aa5 : jo 0x402b06 ; ret
0x00000000004041b4 : jo 0x404215 ; ret
0x00000000004042ee : jo 0x40434f ; ret
0x0000000000403b50 : js 0x403bb0 ; pop rbp ; ret
0x00000000004078a0 : lodsb al, byte ptr [rsi] ; ret
0x00000000004025cb : loopne 0x40261b ; add esp, 0x20 ; pop rbp ; ret
0x00000000004025ca : loopne 0x40261c ; add esp, 0x20 ; pop rbp ; ret
0x00000000004058b1 : loopne 0x4058b8 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040785c : mov ah, 5 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; mov al, -1 ; call rsp
0x000000000040789c : mov ah, 6 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret
0x000000000040207b : mov al, -0x17 ; ret 0xffff
0x0000000000407861 : mov al, -1 ; call rsp
0x000000000040408b : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000403f1b : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000406446 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000402361 : mov byte ptr [0x6092e0], al ; pop rbp ; ret
0x0000000000402327 : mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000401763 : mov byte ptr [rip + 0x207b4e], 1 ; ret
0x000000000040644c : mov dh, -0x40 ; pop rbp ; ret
0x000000000040233d : mov dword ptr [0x6092d8], edi ; pop rbp ; ret
0x0000000000402956 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000402864 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000402918 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004025c9 : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004019c9 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004018b7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004018e5 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406819 : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402317 : mov dword ptr [rbp - 8], eax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004029ce : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403b4c : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000402818 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000404f1b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040258c : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402815 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040250f : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040597b : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004051b3 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004027cd : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040285e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040291a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000402a9f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000403b4a : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000404089 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000405ac4 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405a67 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405be2 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040591d : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000404ffd : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040454f : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040231b : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040178b : mov ebp, esp ; call rax
0x00000000004016f1 : mov ebp, esp ; ja 0x4016fc ; pop rbp ; ret
0x0000000000402b57 : mov ecx, dword ptr [rax*8 + 0x406db0] ; jmp rcx
0x0000000000402e37 : mov ecx, dword ptr [rax*8 + 0x406df8] ; jmp rcx
0x000000000040464e : mov ecx, dword ptr [rax*8 + 0x4072b8] ; jmp rcx
0x00000000004056ed : mov ecx, dword ptr [rax*8 + 0x407630] ; jmp rcx
0x000000000040566d : mov ecx, dword ptr [rax*8 + 0x407690] ; jmp rcx
0x0000000000402861 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401785 : mov edi, 0x608e20 ; mov rbp, rsp ; call rax
0x0000000000401702 : mov edi, 0x609260 ; jmp rax
0x0000000000401742 : mov edi, 0x609260 ; jmp rdx
0x00000000004068c7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x00000000004068c6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x00000000004053a0 : mov edx, dword ptr [rbp - 0x1c] ; call 0x401655
0x000000000040539d : mov esi, dword ptr [rbp - 0x40] ; mov edx, dword ptr [rbp - 0x1c] ; call 0x401658
0x0000000000401740 : mov esi, eax ; mov edi, 0x609260 ; jmp rdx
0x0000000000401787 : mov fs, word ptr [rax] ; mov rbp, rsp ; call rax
0x000000000040233c : mov qword ptr [0x6092d8], rdi ; pop rbp ; ret
0x0000000000402316 : mov qword ptr [rbp - 8], rax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004029cd : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040207a : mov r8b, -0x17 ; ret 0xffff
0x000000000040408a : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000403b4b : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000404f1a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040258b : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402814 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040250e : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004051b2 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004027cc : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402a9e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000404088 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000404ffc : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040454e : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040231a : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040178a : mov rbp, rsp ; call rax
0x00000000004016f0 : mov rbp, rsp ; ja 0x4016fd ; pop rbp ; ret
0x0000000000402b56 : mov rcx, qword ptr [rax*8 + 0x406db0] ; jmp rcx
0x0000000000402e36 : mov rcx, qword ptr [rax*8 + 0x406df8] ; jmp rcx
0x000000000040464d : mov rcx, qword ptr [rax*8 + 0x4072b8] ; jmp rcx
0x00000000004056ec : mov rcx, qword ptr [rax*8 + 0x407630] ; jmp rcx
0x000000000040566c : mov rcx, qword ptr [rax*8 + 0x407690] ; jmp rcx
0x000000000040539c : mov rsi, qword ptr [rbp - 0x40] ; mov edx, dword ptr [rbp - 0x1c] ; call 0x401659
0x000000000040173f : mov rsi, rax ; mov edi, 0x609260 ; jmp rdx
0x000000000040644b : movzx eax, al ; pop rbp ; ret
0x000000000040232a : movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x00000000004080f0 : nop ; ret 0xffff
0x00000000004068e8 : nop dword ptr [rax + rax] ; ret
0x00000000004033ae : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x00000000004033af : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000404271 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004068dc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004068de : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000404b0e : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004068e0 : pop r14 ; pop r15 ; ret
0x0000000000404b10 : pop r15 ; pop rbp ; ret
0x00000000004068e2 : pop r15 ; ret
0x0000000000401762 : pop rbp ; mov byte ptr [rip + 0x207b4e], 1 ; ret
0x0000000000401701 : pop rbp ; mov edi, 0x609260 ; jmp rax
0x000000000040173e : pop rbp ; mov rsi, rax ; mov edi, 0x609260 ; jmp rdx
0x00000000004068db : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004068df : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004016f5 : pop rbp ; ret
0x0000000000404b0d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040399a : pop rbx ; pop rbp ; ret
0x0000000000404b11 : pop rdi ; pop rbp ; ret
0x00000000004068e3 : pop rdi ; ret
0x0000000000404b0f : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004068e1 : pop rsi ; pop r15 ; ret
0x00000000004068dd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040400e : push rax ; pop rbp ; ret
0x00000000004080b0 : push rax ; ret 0xffff
0x00000000004033b2 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000401784 : push rbp ; mov edi, 0x608e20 ; mov rbp, rsp ; call rax
0x0000000000405ffd : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x0000000000403a7e : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x00000000004051e9 : push rbx ; ret
0x0000000000401fb3 : push rsi ; ret
0x00000000004012f9 : ret
0x00000000004033cb : ret 0x1fe8
0x0000000000401592 : ret 0x207b
0x0000000000401392 : ret 0x207c
0x0000000000401a6d : ret 0x6092
0x0000000000404609 : ret 0x8844
0x0000000000405082 : ret 0x8948
0x00000000004034dd : ret 0x89a5
0x00000000004033b6 : ret 0x8b48
0x0000000000401725 : ret 0xc148
0x0000000000404543 : ret 0xd284
0x00000000004039cc : ret 0xee8
0x0000000000405f4a : ret 0xffb3
0x000000000040207d : ret 0xffff
0x0000000000403cee : ret 1
0x0000000000403a82 : ret 8
0x0000000000408030 : rol cl, -1 ; jmp qword ptr [rax]
0x0000000000404c4b : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000402aa0 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x402b0b ; ret
0x000000000040172c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40173b ; pop rbp ; ret
0x0000000000404c4c : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000402aa1 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x402b0a ; ret
0x0000000000405ffe : ror byte ptr [rax - 0x7f], 1 ; ret 1
0x0000000000403a7f : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000040172e : sar eax, 1 ; jne 0x401739 ; pop rbp ; ret
0x000000000040172d : sar rax, 1 ; jne 0x40173a ; pop rbp ; ret
0x00000000004080e8 : sbb al, 0 ; add byte ptr [rax], al ; in al, 5 ; add byte ptr [rax], al ; nop ; ret 0xffff
0x0000000000406448 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040691d : sub esp, 8 ; add rsp, 8 ; ret
0x000000000040691c : sub rsp, 8 ; add rsp, 8 ; ret
0x00000000004068ea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000401fa1 : test byte ptr [rcx], cl ; add byte ptr [rax], al ; add dh, al ; ret
0x00000000004017b3 : test byte ptr [rdx], cl ; add byte ptr [rax], al ; add al, ch ; ret
0x0000000000401f2a : xchg bl, ch ; add dword ptr [rax], eax ; add dh, dh ; add al, 0x25 ; ret 0x6092
0x0000000000405275 : xchg eax, edi ; ret
0x0000000000404542 : xchg eax, esp ; ret 0xd284
0x000000000040640e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000402916 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
