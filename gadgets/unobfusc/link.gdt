0x00000000004034e9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401109 : adc eax, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000040724f : add al, ah ; loopne 0x407256 ; jmp rax
0x0000000000405a5f : add bl, dh ; ret
0x000000000040196f : add byte ptr [rax + 0x63], cl ; ret 0x8b48
0x00000000004044c8 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000404e54 : add byte ptr [rax - 0x77], cl ; call 0x3214c
0x0000000000404e53 : add byte ptr [rax - 0x77], cl ; call 0x3214d
0x0000000000404e52 : add byte ptr [rax - 0x77], cl ; call 0x3214e
0x0000000000405a5d : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040196d : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8b48
0x0000000000405a5b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000405a5c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000404ff2 : add byte ptr [rax], al ; add byte ptr [rbx - 0x5c173783], cl ; ret 0xffff
0x0000000000403dbe : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004034aa : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403250 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040110b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000401169 : add byte ptr [rax], al ; jmp 0x401129
0x0000000000404ff3 : add byte ptr [rax], al ; mov edi, dword ptr [rbp - 0x38] ; call 0x4012a7
0x0000000000402092 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040724a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; or byte ptr [rax], al ; add al, ah ; loopne 0x40725b ; jmp rax
0x0000000000401ea8 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040438b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403218 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000405a5e : add byte ptr [rax], al ; ret
0x000000000040438c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000403219 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000404fda : add byte ptr [rbx - 0x32173783], cl ; ret
0x0000000000404ff4 : add byte ptr [rbx - 0x5c173783], cl ; ret 0xffff
0x0000000000401969 : add byte ptr [rcx + 0x1c2], al ; add byte ptr [rax + 0x63], cl ; ret 0x8b48
0x0000000000401518 : add byte ptr [rcx], al ; ret
0x0000000000403dc0 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004034a8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040438a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000403217 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004055ba : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401514 : add eax, 0x206d66 ; add ebx, esi ; ret
0x00000000004014db : add eax, edx ; sar rax, 1 ; jne 0x4014ec ; pop rbp ; ret
0x0000000000401519 : add ebx, esi ; ret
0x000000000040164b : add esp, 0x10 ; pop rbp ; ret
0x000000000040531c : add esp, 0x130 ; pop rbp ; ret
0x0000000000403214 : add esp, 0x138 ; pop rbx ; pop rbp ; ret
0x000000000040467c : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000401ea4 : add esp, 0x1c0 ; pop rbp ; ret
0x0000000000401c70 : add esp, 0x20 ; pop rbp ; ret
0x000000000040172d : add esp, 0x30 ; pop rbp ; ret
0x000000000040388c : add esp, 0x50 ; pop rbp ; ret
0x0000000000402323 : add esp, 0x70 ; pop rbp ; ret
0x00000000004033ce : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040379d : add esp, 0x90 ; pop rbp ; ret
0x0000000000404514 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040110e : add esp, 8 ; ret
0x00000000004014da : add rax, rdx ; sar rax, 1 ; jne 0x4014ed ; pop rbp ; ret
0x000000000040164a : add rsp, 0x10 ; pop rbp ; ret
0x000000000040531b : add rsp, 0x130 ; pop rbp ; ret
0x0000000000403213 : add rsp, 0x138 ; pop rbx ; pop rbp ; ret
0x000000000040467b : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000401ea3 : add rsp, 0x1c0 ; pop rbp ; ret
0x0000000000401c6f : add rsp, 0x20 ; pop rbp ; ret
0x000000000040172c : add rsp, 0x30 ; pop rbp ; ret
0x000000000040388b : add rsp, 0x50 ; pop rbp ; ret
0x0000000000402322 : add rsp, 0x70 ; pop rbp ; ret
0x00000000004033cd : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040379c : add rsp, 0x90 ; pop rbp ; ret
0x0000000000404513 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040110d : add rsp, 8 ; ret
0x00000000004055b9 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401517 : and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000403567 : and dword ptr [rax], 0x81d8558b ; ret 1
0x00000000004037d7 : and eax, 0x48fffffd ; add esp, 0x20 ; pop rbp ; ret
0x0000000000401a1f : and eax, 0x608288 ; pop rbp ; ret
0x0000000000401a43 : and eax, 0x608290 ; pop rbp ; ret
0x0000000000404e58 : call 0x32148
0x0000000000404e57 : call 0x32149
0x0000000000404e59 : call 0x401132
0x0000000000404ff8 : call 0x4012a2
0x00000000004050df : call 0x401382
0x0000000000403249 : call 0xffffffffe902bb99
0x0000000000403248 : call 0xffffffffe902bb9a
0x0000000000405a39 : call qword ptr [r12 + rbx*8]
0x0000000000406a73 : call qword ptr [rsi]
0x0000000000405a3a : call qword ptr [rsp + rbx*8]
0x000000000040153d : call rax
0x0000000000406c93 : call rdx
0x000000000040531a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x000000000040487f : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403dd1 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004014df : clc ; jne 0x4014e8 ; pop rbp ; ret
0x00000000004021d5 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040598b : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040598e : clc ; pop rbp ; ret
0x0000000000405466 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404ceb : cld ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404c30 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000405988 : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000405463 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405406 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404c2d : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403216 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040149d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4014b0 ; pop rbp ; ret
0x0000000000403ecc : cwde ; mov rcx, qword ptr [rax*8 + 0x4062d8] ; jmp rcx
0x000000000040527f : dec dword ptr [rax - 0x7f] ; ret 1
0x00000000004032fb : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000402c33 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000405a3c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000404f3b : fsubr st(0) ; out dx, eax ; ret
0x0000000000401649 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004014b0 : hlt ; pop rbp ; mov edi, 0x608228 ; jmp rax
0x0000000000401516 : insd dword ptr [rdi], dx ; and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000401515 : insw word ptr [rdi], dx ; and byte ptr [rax], al ; add ebx, esi ; ret
0x00000000004044d0 : int 0x80
0x0000000000404fdf : int 0xc3
0x00000000004014a3 : ja 0x4014aa ; pop rbp ; ret
0x00000000004014af : je 0x4014ad ; pop rbp ; mov edi, 0x608228 ; jmp rax
0x0000000000404ff6 : jge 0x404fc4 ; call 0x4012a4
0x00000000004050d9 : jge 0x40508f ; mov rsi, qword ptr [rbp - 0x40] ; call 0x401388
0x000000000040116b : jmp 0x401127
0x0000000000406e33 : jmp qword ptr [rax]
0x0000000000406d13 : jmp qword ptr [rdx]
0x00000000004014b7 : jmp rax
0x00000000004023de : jmp rcx
0x00000000004014f7 : jmp rdx
0x00000000004014e0 : jne 0x4014e7 ; pop rbp ; ret
0x00000000004050dd : jne 0x4050a3 ; call 0x401384
0x0000000000402325 : jo 0x402386 ; ret
0x0000000000403a34 : jo 0x403a95 ; ret
0x0000000000403b6e : jo 0x403bcf ; ret
0x00000000004033d0 : js 0x403430 ; pop rbp ; ret
0x00000000004050da : lodsb al, byte ptr [rsi] ; mov rsi, qword ptr [rbp - 0x40] ; call 0x401387
0x0000000000404f7f : lodsd eax, dword ptr [rsi] ; ret
0x0000000000407251 : loopne 0x407254 ; jmp rax
0x000000000040390b : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040379b : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x00000000004055b6 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401a41 : mov byte ptr [0x608290], al ; pop rbp ; ret
0x0000000000401513 : mov byte ptr [rip + 0x206d66], 1 ; ret
0x00000000004055bc : mov dh, -0x40 ; pop rbp ; ret
0x0000000000401a1d : mov dword ptr [0x608288], edi ; pop rbp ; ret
0x00000000004021d6 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004020e4 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000402198 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000404e56 : mov dword ptr [rbp - 0x18], eax ; call 0x401135
0x0000000000401729 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401647 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405989 : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040224e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004033cc : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000402098 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040479b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401c6c : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402095 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000401bef : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000404a33 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040204d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004020de : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040219a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040231f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004033ca : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000403909 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000405464 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404ce9 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404c2e : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040487d : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403dcf : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040598c : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040153b : mov ebp, esp ; call rax
0x00000000004014a1 : mov ebp, esp ; ja 0x4014ac ; pop rbp ; ret
0x00000000004023d7 : mov ecx, dword ptr [rax*8 + 0x405dd0] ; jmp rcx
0x00000000004026b7 : mov ecx, dword ptr [rax*8 + 0x405e18] ; jmp rcx
0x0000000000403ece : mov ecx, dword ptr [rax*8 + 0x4062d8] ; jmp rcx
0x00000000004020e1 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401535 : mov edi, 0x607e20 ; mov rbp, rsp ; call rax
0x00000000004014b2 : mov edi, 0x608228 ; jmp rax
0x00000000004014f2 : mov edi, 0x608228 ; jmp rdx
0x0000000000404ff5 : mov edi, dword ptr [rbp - 0x38] ; call 0x4012a5
0x00000000004050d8 : mov edi, dword ptr [rbp - 0x54] ; mov rsi, qword ptr [rbp - 0x40] ; call 0x401389
0x0000000000405a37 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000405a36 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x00000000004050dc : mov esi, dword ptr [rbp - 0x40] ; call 0x401385
0x00000000004014f0 : mov esi, eax ; mov edi, 0x608228 ; jmp rdx
0x0000000000401a1c : mov qword ptr [0x608288], rdi ; pop rbp ; ret
0x0000000000404e55 : mov qword ptr [rbp - 0x18], rax ; call 0x401136
0x000000000040224d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040390a : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004033cb : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x000000000040479a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401c6b : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402094 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000401bee : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000404a32 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040204c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040231e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000403908 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040487c : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403dce : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040153a : mov rbp, rsp ; call rax
0x00000000004014a0 : mov rbp, rsp ; ja 0x4014ad ; pop rbp ; ret
0x00000000004023d6 : mov rcx, qword ptr [rax*8 + 0x405dd0] ; jmp rcx
0x00000000004026b6 : mov rcx, qword ptr [rax*8 + 0x405e18] ; jmp rcx
0x0000000000403ecd : mov rcx, qword ptr [rax*8 + 0x4062d8] ; jmp rcx
0x00000000004050db : mov rsi, qword ptr [rbp - 0x40] ; call 0x401386
0x00000000004014ef : mov rsi, rax ; mov edi, 0x608228 ; jmp rdx
0x000000000040724c : movsb byte ptr [rdi], byte ptr [rsi] ; or byte ptr [rax], al ; add al, ah ; loopne 0x407259 ; jmp rax
0x00000000004055bb : movzx eax, al ; pop rbp ; ret
0x0000000000405a58 : nop dword ptr [rax + rax] ; ret
0x0000000000402c2e : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000402c2f : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040724d : or byte ptr [rax], al ; add al, ah ; loopne 0x407258 ; jmp rax
0x0000000000404fd7 : or byte ptr [rbp + 0x40], bl ; add byte ptr [rbx - 0x32173783], cl ; ret
0x0000000000403af1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404f3d : out dx, eax ; ret
0x0000000000405a4c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405a4e : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040438e : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405a50 : pop r14 ; pop r15 ; ret
0x0000000000404390 : pop r15 ; pop rbp ; ret
0x0000000000405a52 : pop r15 ; ret
0x0000000000404fd8 : pop rbp ; add byte ptr [rbx - 0x32173783], cl ; ret
0x0000000000401512 : pop rbp ; mov byte ptr [rip + 0x206d66], 1 ; ret
0x00000000004014b1 : pop rbp ; mov edi, 0x608228 ; jmp rax
0x00000000004014ee : pop rbp ; mov rsi, rax ; mov edi, 0x608228 ; jmp rdx
0x0000000000405a4b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405a4f : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004014a5 : pop rbp ; ret
0x000000000040438d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040321a : pop rbx ; pop rbp ; ret
0x0000000000404391 : pop rdi ; pop rbp ; ret
0x0000000000405a53 : pop rdi ; ret
0x000000000040438f : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000405a51 : pop rsi ; pop r15 ; ret
0x0000000000405a4d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000401fd1 : push 0x48006082 ; add esp, 0x30 ; pop rbp ; ret
0x000000000040388e : push rax ; pop rbp ; ret
0x0000000000402c32 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000404f3a : push rbp ; fsubr st(0) ; out dx, eax ; ret
0x0000000000401534 : push rbp ; mov edi, 0x607e20 ; mov rbp, rsp ; call rax
0x0000000000404f0d : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x00000000004032fe : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000404ea9 : push rbx ; ret
0x00000000004050e0 : pushfq ; ret 0xffff
0x0000000000401111 : ret
0x0000000000401372 : ret 0x206d
0x0000000000401172 : ret 0x206e
0x0000000000403e89 : ret 0x8844
0x0000000000404902 : ret 0x8948
0x0000000000402d5d : ret 0x89a5
0x0000000000401972 : ret 0x8b48
0x0000000000402c4b : ret 0xafe8
0x000000000040189b : ret 0xb0
0x00000000004014d5 : ret 0xc148
0x0000000000403dc3 : ret 0xd284
0x000000000040324c : ret 0xee8
0x0000000000404e5b : ret 0xffff
0x000000000040196b : ret 1
0x0000000000403302 : ret 8
0x00000000004044cb : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000402320 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x40238b ; ret
0x00000000004014dc : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4014eb ; pop rbp ; ret
0x00000000004044cc : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000402321 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x40238a ; ret
0x0000000000404f0e : ror byte ptr [rax - 0x7f], 1 ; ret 1
0x00000000004032ff : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x00000000004014de : sar eax, 1 ; jne 0x4014e9 ; pop rbp ; ret
0x00000000004014dd : sar rax, 1 ; jne 0x4014ea ; pop rbp ; ret
0x00000000004050de : shr al, -0x64 ; ret 0xffff
0x00000000004055b8 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000405a8d : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000405a8c : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000405a5a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004026b9 : vdivps xmm8, xmm12, xmmword ptr [rax] ; jmp rcx
0x00000000004023d9 : vminps xmm0, xmm5, xmmword ptr [rax] ; jmp rcx
0x0000000000403dc2 : xchg eax, esp ; ret 0xd284
0x000000000040531e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000402196 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
