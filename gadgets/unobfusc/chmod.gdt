0x000000000040d851 : adc al, -0x75 ; hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000409d23 : adc al, byte ptr [rcx + 0x4f9] ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x0000000000409c98 : adc al, byte ptr [rcx + 0x4f9] ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf280
0x0000000000410c49 : adc bh, bh ; jmp rdx
0x000000000040a0c7 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000410c48 : adc dil, dil ; jmp rdx
0x00000000004030f7 : adc eax, 0x48ffffe5 ; add esp, 0x10 ; pop rbp ; ret
0x0000000000405829 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403002 : add al, 0x25 ; pop rax ; xor esp, dword ptr [rcx] ; pop rbp ; ret
0x000000000040ba0a : add al, 0x48 ; add eax, ecx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000411807 : add al, bl ; mov edi, edi ; call qword ptr [rcx]
0x000000000040951d : add al, ch ; int 0x80
0x0000000000410d07 : add al, cl ; and bh, bh ; call qword ptr [rsi]
0x000000000040ee8f : add bl, dh ; ret
0x0000000000401f00 : add byte ptr [rax - 0x48], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bl ; jmp qword ptr [rax]
0x0000000000406878 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000410c46 : add byte ptr [rax], al ; adc dil, dil ; jmp rdx
0x000000000040951b : add byte ptr [rax], al ; add al, ch ; int 0x80
0x000000000040ee8d : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040ee8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000401f03 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bl ; jmp qword ptr [rax]
0x00000000004036ad : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040c37d : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000408f2f : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040ee8c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000401f05 : add byte ptr [rax], al ; add byte ptr [rax], bl ; jmp qword ptr [rax]
0x0000000000402580 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7238b], cl ; ret 0xb0
0x00000000004025f5 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7278b], cl ; ret 0xb0
0x0000000000403776 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0x5588
0x0000000000403b1b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0x9588
0x00000000004072a3 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x9588
0x0000000000402a26 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x000000000040385f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x0000000000403db5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x00000000004060fe : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000402a16 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000409c9c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf280
0x0000000000402124 : add byte ptr [rax], al ; add dh, al ; salc ; add cl, ch ; ret 0
0x0000000000410d02 : add byte ptr [rax], al ; add dword ptr [rax], r8d ; add al, cl ; and bh, bh ; call qword ptr [rsi]
0x00000000004036af : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405590 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000408f31 : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040159b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000411f66 : add byte ptr [rax], al ; cwde ; mov bh, -1 ; call qword ptr [rsi]
0x0000000000411046 : add byte ptr [rax], al ; fadd dword ptr [rsi - 1] ; call rdx
0x00000000004016d9 : add byte ptr [rax], al ; jmp 0x4015b9
0x000000000040e96c : add byte ptr [rax], al ; mov al, sil ; movzx eax, al ; pop rbp ; ret
0x000000000040e8ed : add byte ptr [rax], al ; mov ax, si ; movzx eax, ax ; pop rbp ; ret
0x00000000004043d2 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000411802 : add byte ptr [rax], al ; or al, 0 ; add al, bl ; mov edi, edi ; call qword ptr [rcx]
0x0000000000402d2a : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040673b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405558 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040ee8e : add byte ptr [rax], al ; ret
0x0000000000410c42 : add byte ptr [rax], al ; test byte ptr [rax], al ; add byte ptr [rax], al ; adc dil, dil ; jmp rdx
0x0000000000401f07 : add byte ptr [rax], bl ; jmp qword ptr [rax]
0x000000000040673c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000405559 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000402582 : add byte ptr [rbx - 0x76b7238b], cl ; ret 0xb0
0x00000000004025f7 : add byte ptr [rbx - 0x76b7278b], cl ; ret 0xb0
0x0000000000402a13 : add byte ptr [rcx + 0x4000f9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000040729f : add byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x9588
0x0000000000410d03 : add byte ptr [rcx + rax], al ; add al, cl ; and bh, bh ; call qword ptr [rsi]
0x0000000000401aa8 : add byte ptr [rcx], al ; ret
0x0000000000403778 : add byte ptr [rdi], cl ; pushfq ; ret 0x5588
0x0000000000403b1d : add byte ptr [rdi], cl ; pushfq ; ret 0x9588
0x00000000004072a5 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x9588
0x0000000000402a28 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x0000000000403861 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x0000000000403db7 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x0000000000406100 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000402a19 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000409c9e : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf280
0x000000000040b87d : add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x0000000000411803 : add byte ptr [rsp + rcx], al ; add al, bl ; mov edi, edi ; call qword ptr [rcx]
0x000000000040212a : add cl, ch ; ret 0
0x0000000000402126 : add dh, al ; salc ; add cl, ch ; ret 0
0x000000000040d67c : add dword ptr [rax + 0xf], eax ; mov dh, -0x39 ; pop rbp ; ret
0x0000000000410d05 : add dword ptr [rax], eax ; add al, cl ; and bh, bh ; call qword ptr [rsi]
0x00000000004057e8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004076b5 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040673a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000405557 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000410d04 : add dword ptr [rax], r8d ; add al, cl ; and bh, bh ; call qword ptr [rsi]
0x000000000040b3a5 : add dword ptr [rdi], ecx ; mov dh, -0x3f ; pop rbp ; ret
0x0000000000407e23 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040b376 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040260d : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040a4a1 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000406fd9 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000409517 : add dword ptr [rdi], ecx ; test dword ptr [rax], ebx ; add byte ptr [rax], al ; add al, ch ; int 0x80
0x000000000040af54 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x5588
0x0000000000401aa4 : add eax, 0x21186e ; add ebx, esi ; ret
0x0000000000409da2 : add eax, 0xf000000 ; xchg eax, esp ; ret 0x9588
0x000000000040aaf8 : add eax, dword ptr [rcx] ; jmp rcx
0x000000000040ba0c : add eax, ecx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401a6b : add eax, edx ; sar rax, 1 ; jne 0x401a7c ; pop rbp ; ret
0x0000000000401aa9 : add ebx, esi ; ret
0x0000000000401c8b : add esp, 0x10 ; pop rbp ; ret
0x000000000040a0c5 : add esp, 0x110 ; pop rbp ; ret
0x0000000000402d26 : add esp, 0x120 ; pop rbp ; ret
0x000000000040de7c : add esp, 0x130 ; pop rbp ; ret
0x0000000000405554 : add esp, 0x138 ; pop rbx ; pop rbp ; ret
0x0000000000406a2c : add esp, 0x1a0 ; pop rbp ; ret
0x000000000040b5af : add esp, 0x1b0 ; pop rbp ; ret
0x000000000040e5ce : add esp, 0x1e0 ; pop rbp ; ret
0x0000000000403230 : add esp, 0x20 ; pop rbp ; ret
0x0000000000401d6d : add esp, 0x30 ; pop rbp ; ret
0x000000000040819d : add esp, 0x40 ; pop rbp ; ret
0x0000000000405bcc : add esp, 0x50 ; pop rbp ; ret
0x000000000040cfc7 : add esp, 0x60 ; pop rbp ; ret
0x0000000000404663 : add esp, 0x70 ; pop rbp ; ret
0x000000000040570e : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040c733 : add esp, 0x80 ; pop rbp ; ret
0x0000000000402fc8 : add esp, 0x90 ; pop rbp ; ret
0x0000000000403f30 : add esp, 0xa0 ; pop rbp ; ret
0x0000000000402e0d : add esp, 0xc0 ; pop rbp ; ret
0x0000000000403e50 : add esp, 0xe0 ; pop rbp ; ret
0x000000000040159e : add esp, 8 ; ret
0x000000000040ba0b : add rax, rcx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401a6a : add rax, rdx ; sar rax, 1 ; jne 0x401a7d ; pop rbp ; ret
0x0000000000401c8a : add rsp, 0x10 ; pop rbp ; ret
0x000000000040a0c4 : add rsp, 0x110 ; pop rbp ; ret
0x0000000000402d25 : add rsp, 0x120 ; pop rbp ; ret
0x000000000040de7b : add rsp, 0x130 ; pop rbp ; ret
0x0000000000405553 : add rsp, 0x138 ; pop rbx ; pop rbp ; ret
0x0000000000406a2b : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000040b5ae : add rsp, 0x1b0 ; pop rbp ; ret
0x000000000040e5cd : add rsp, 0x1e0 ; pop rbp ; ret
0x000000000040322f : add rsp, 0x20 ; pop rbp ; ret
0x0000000000401d6c : add rsp, 0x30 ; pop rbp ; ret
0x000000000040819c : add rsp, 0x40 ; pop rbp ; ret
0x0000000000405bcb : add rsp, 0x50 ; pop rbp ; ret
0x000000000040cfc6 : add rsp, 0x60 ; pop rbp ; ret
0x0000000000404662 : add rsp, 0x70 ; pop rbp ; ret
0x000000000040570d : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040c732 : add rsp, 0x80 ; pop rbp ; ret
0x0000000000402fc7 : add rsp, 0x90 ; pop rbp ; ret
0x0000000000403f2f : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000402e0c : add rsp, 0xc0 ; pop rbp ; ret
0x0000000000403e4f : add rsp, 0xe0 ; pop rbp ; ret
0x000000000040159d : add rsp, 8 ; ret
0x0000000000406fd8 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040d67a : and bh, 1 ; movzx eax, dil ; pop rbp ; ret
0x0000000000410d09 : and bh, bh ; call qword ptr [rsi]
0x0000000000402d28 : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040b3a3 : and cl, 1 ; movzx eax, cl ; pop rbp ; ret
0x000000000040d679 : and dil, 1 ; movzx eax, dil ; pop rbp ; ret
0x0000000000401aa7 : and dword ptr [rax], eax ; add ebx, esi ; ret
0x000000000040bde5 : and eax, 0x4104f0 ; mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x0000000000405b17 : and eax, 0x48fffffd ; add esp, 0x20 ; pop rbp ; ret
0x0000000000402fdf : and eax, 0x613350 ; pop rbp ; ret
0x0000000000403003 : and eax, 0x613358 ; pop rbp ; ret
0x0000000000405589 : call 0xffffffffe902ded9
0x0000000000405588 : call 0xffffffffe902deda
0x000000000040c2d1 : call 0xffffffffff7a4e22
0x000000000040c2d0 : call 0xffffffffff7a4e23
0x000000000040c40f : call 0xffffffffff7a4f60
0x000000000040c40e : call 0xffffffffff7a4f61
0x000000000040ee69 : call qword ptr [r12 + rbx*8]
0x00000000004124a3 : call qword ptr [rax]
0x000000000041180b : call qword ptr [rcx]
0x0000000000410c8b : call qword ptr [rdi]
0x0000000000402c3d : call qword ptr [rdx]
0x0000000000410d0b : call qword ptr [rsi]
0x000000000040ee6a : call qword ptr [rsp + rbx*8]
0x0000000000401acd : call rax
0x0000000000411c6b : call rbx
0x0000000000410e0b : call rdi
0x000000000041104b : call rdx
0x0000000000411c8b : call rsp
0x000000000040d59d : clc ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040a0c3 : clc ; add rsp, 0x110 ; pop rbp ; ret
0x000000000040de7a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x0000000000406c2f : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406111 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040a9ab : clc ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000407d56 : clc ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040cfc5 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000408ddc : clc ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000407639 : clc ; add rsp, 0x90 ; pop rbp ; ret
0x0000000000403f2e : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x000000000040d4d6 : clc ; add rsp, 0xc0 ; pop rbp ; ret
0x0000000000403e4e : clc ; add rsp, 0xe0 ; pop rbp ; ret
0x0000000000401a6f : clc ; jne 0x401a78 ; pop rbp ; ret
0x000000000040d7ac : clc ; mov byte ptr [rax + 0x1c], 0 ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000404515 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040d6f1 : clc ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x000000000040ab5e : clc ; mov dword ptr [rcx + 0x18], eax ; pop rbp ; ret
0x000000000040a6c5 : clc ; mov dword ptr [rcx + 0x2c], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b267 : clc ; mov dword ptr [rdi + 0x18], 0x95f616 ; pop rbp ; ret
0x000000000040edbb : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040d50e : clc ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040bc6d : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040b5cb : clc ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040b5eb : clc ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040b60b : clc ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000040bc71 : clc ; pop rbp ; ret
0x000000000040e636 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040a752 : cld ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b0a0 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040819b : cld ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040cdea : cld ; add rsp, 0xc0 ; pop rbp ; ret
0x00000000004091f9 : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000040edb8 : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040e633 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040e12b : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b09d : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403e66 : cld ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000403e69 : cld ; pop rbp ; ret
0x0000000000402fde : cmp al, 0x25 ; push rax ; xor esp, dword ptr [rcx] ; pop rbp ; ret
0x0000000000405556 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040bcea : cmp dword ptr [rax - 0x75], ecx ; jne 0x40bcd4 ; call rax
0x0000000000401a2d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401a40 ; pop rbp ; ret
0x0000000000411f68 : cwde ; mov bh, -1 ; call qword ptr [rsi]
0x000000000040627c : cwde ; mov rcx, qword ptr [rax*8 + 0x40ff78] ; jmp rcx
0x000000000040dddf : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000040adf0 : div dword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000040adef : div qword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000040563b : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000040bce7 : enter -0x74b8, 0x39 ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x0000000000411048 : fadd dword ptr [rsi - 1] ; call rdx
0x000000000040af5c : fbld dword ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000040af5d : fbld dword ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x0000000000404f73 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x00000000004025fa : fmul dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000402585 : fmul qword ptr [rax - 0x77] ; ret 0xb0
0x000000000040ee6c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000401c89 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040a1d6 : hlt ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040d6ed : hlt ; mov rcx, qword ptr [rbp - 8] ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x0000000000401a40 : hlt ; pop rbp ; mov edi, 0x6132b0 ; jmp rax
0x000000000040adbd : in al, dx ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000040adc0 : in al, dx ; pop rbp ; ret
0x0000000000403e63 : in eax, -0x77 ; jge 0x403e6b ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000406282 : inc dword ptr [rax] ; jmp rcx
0x0000000000406880 : int 0x80
0x0000000000401a33 : ja 0x401a3a ; pop rbp ; ret
0x000000000040d511 : ja 0x40d55e ; pop rbp ; ret
0x00000000004002d6 : jbe 0x40027d ; xchg al, dh ; xchg eax, esi ; jl 0x400326 ; ret
0x0000000000401a3f : je 0x401a3d ; pop rbp ; mov edi, 0x6132b0 ; jmp rax
0x0000000000403e65 : jge 0x403e69 ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040b5ca : jge 0x40b5cb ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040b5ea : jge 0x40b5eb ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040b60a : jge 0x40b60b ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000040b960 : jge 0x40b953 ; mov rcx, qword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040ce70 : jge 0x40ce63 ; mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040d50d : jge 0x40d50e ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x00000000004002db : jl 0x400321 ; ret
0x00000000004016db : jmp 0x4015b7
0x000000000040d051 : jmp 0x40d054
0x000000000040c170 : jmp 0x49034ac0
0x000000000040cbae : jmp 0x490354fe
0x000000000040cc1b : jmp 0x4903556b
0x000000000040d352 : jmp 0x49035ca2
0x000000000040d3bf : jmp 0x49035d0f
0x0000000000401f09 : jmp qword ptr [rax]
0x0000000000402c4f : jmp qword ptr [rcx]
0x0000000000411dab : jmp qword ptr [rdi]
0x00000000004110cb : jmp qword ptr [rdx]
0x0000000000401a47 : jmp rax
0x0000000000401fc1 : jmp rcx
0x0000000000401a87 : jmp rdx
0x0000000000401a70 : jne 0x401a77 ; pop rbp ; ret
0x000000000040a9f9 : jne 0x40a9dc ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x000000000040adf1 : jne 0x40ade9 ; mov rax, rdx ; pop rbp ; ret
0x000000000040af02 : jne 0x40aefa ; mov rax, rdx ; pop rbp ; ret
0x000000000040b9d6 : jne 0x40b9c1 ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000040bced : jne 0x40bcd1 ; call rax
0x0000000000404665 : jo 0x4046c6 ; ret
0x0000000000405d74 : jo 0x405dd5 ; ret
0x0000000000405eae : jo 0x405f0f ; ret
0x0000000000408de0 : jo 0x408e41 ; ret
0x0000000000409d9f : jo 0x409d2b ; stc ; add eax, 0xf000000 ; xchg eax, esp ; ret 0x9588
0x0000000000405710 : js 0x405770 ; pop rbp ; ret
0x000000000040e7c9 : loop 0x40e81b ; or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x000000000040e8b1 : loop 0x40e903 ; or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x000000000040b3a4 : loope 0x40b3ad ; movzx eax, cl ; pop rbp ; ret
0x0000000000403e52 : loopne 0x403e59 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000406f2b : loopne 0x406f7b ; add esp, 0x20 ; pop rbp ; ret
0x0000000000406f2a : loopne 0x406f7c ; add esp, 0x20 ; pop rbp ; ret
0x00000000004091fd : loopne 0x409204 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040b9d7 : loopne 0x40ba29 ; mov esi, eax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000040e5d0 : loopne 0x40e5d8 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040b8de : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000405c4b : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000405adb : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x000000000040b5b1 : mov al, 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000406fd5 : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040af5b : mov al, byte ptr [rbp - 0x21] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040b7c5 : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040e9e6 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040d70c : mov al, byte ptr [rdi + 0x1c] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040e96f : mov al, dh ; movzx eax, al ; pop rbp ; ret
0x000000000040e96e : mov al, sil ; movzx eax, al ; pop rbp ; ret
0x000000000040e8ef : mov ax, si ; movzx eax, ax ; pop rbp ; ret
0x000000000040e8f3 : mov bh, -0x40 ; pop rbp ; ret
0x0000000000411f69 : mov bh, -1 ; call qword ptr [rsi]
0x0000000000403001 : mov byte ptr [0x613358], al ; pop rbp ; ret
0x000000000040d7ad : mov byte ptr [rax + 0x1c], 0 ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x00000000004035fd : mov byte ptr [rbp - 1], 0x3f ; movsx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000403518 : mov byte ptr [rdx + 0xb], 0 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401aa3 : mov byte ptr [rip + 0x21186e], 1 ; ret
0x000000000040d67f : mov dh, -0x39 ; pop rbp ; ret
0x000000000040b3a7 : mov dh, -0x3f ; pop rbp ; ret
0x0000000000407e25 : mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040b378 : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040260f : mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040a4a3 : mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000406fdb : mov dh, -0x40 ; pop rbp ; ret
0x0000000000411f29 : mov dh, -1 ; call rbx
0x0000000000402fdd : mov dword ptr [0x613350], edi ; pop rbp ; ret
0x0000000000404516 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000404424 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004044d8 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040adbb : mov dword ptr [rbp - 0x14], eax ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000401d69 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040b8dc : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401c87 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403e64 : mov dword ptr [rbp - 4], edi ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040edb9 : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040bc6b : mov dword ptr [rbp - 8], eax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040d6f2 : mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x000000000040ab5f : mov dword ptr [rcx + 0x18], eax ; pop rbp ; ret
0x000000000040a6c6 : mov dword ptr [rcx + 0x2c], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040458e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040a2e8 : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004041e0 : mov dword ptr [rcx], eax ; mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x000000000040bdea : mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x000000000040b268 : mov dword ptr [rdi + 0x18], 0x95f616 ; pop rbp ; ret
0x000000000040d510 : mov dword ptr [rdi + 0x48], esi ; pop rbp ; ret
0x0000000000401f02 : mov eax, 0 ; add byte ptr [rax], bl ; jmp qword ptr [rax]
0x000000000040570c : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x00000000004043d8 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000403ecb : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040322c : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004043d5 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004031af : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040adbe : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000406de3 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040438d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040441e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040b6cf : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000406f29 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b9dc : mov eax, dword ptr [rbp - 0x20] ; call rax
0x00000000004041e2 : mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x000000000040d0cf : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040a9ff : mov eax, dword ptr [rbp - 0x28] ; call rax
0x00000000004044da : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040465f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040570a : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000405c49 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040d852 : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040a1d4 : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040e634 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040a750 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b09e : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000408199 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000403e67 : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040d59b : mov eax, dword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406c2d : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040610f : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040a9a9 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000407d54 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040cfc3 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000408dda : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040bc6f : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040b5cd : mov eax, dword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040b5ed : mov eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040b60d : mov eax, dword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000040e78e : mov eax, edi ; pop rbp ; ret
0x000000000040bfd1 : mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040adf4 : mov eax, edx ; pop rbp ; ret
0x000000000040e8f0 : mov eax, esi ; movzx eax, ax ; pop rbp ; ret
0x000000000040e803 : mov eax, esi ; pop rbp ; ret
0x0000000000401acb : mov ebp, esp ; call rax
0x0000000000401a31 : mov ebp, esp ; ja 0x401a3c ; pop rbp ; ret
0x0000000000403e62 : mov ebp, esp ; mov dword ptr [rbp - 4], edi ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000401fba : mov ecx, dword ptr [rax*8 + 0x40ef30] ; jmp rcx
0x000000000040267d : mov ecx, dword ptr [rax*8 + 0x40ef68] ; jmp rcx
0x0000000000403c4e : mov ecx, dword ptr [rax*8 + 0x40f9f0] ; jmp rcx
0x0000000000404717 : mov ecx, dword ptr [rax*8 + 0x40fa70] ; jmp rcx
0x00000000004049f7 : mov ecx, dword ptr [rax*8 + 0x40fab8] ; jmp rcx
0x000000000040627e : mov ecx, dword ptr [rax*8 + 0x40ff78] ; jmp rcx
0x000000000040aaf4 : mov ecx, dword ptr [rax*8 + 0x410368] ; jmp rcx
0x0000000000404421 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040c332 : mov ecx, dword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040c2cf : mov ecx, dword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x00000000004041dd : mov ecx, dword ptr [rbp - 0x20] ; mov dword ptr [rcx], eax ; mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x000000000040b963 : mov ecx, dword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040ce73 : mov ecx, dword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040d6ef : mov ecx, dword ptr [rbp - 8] ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x000000000040ab5c : mov ecx, dword ptr [rbp - 8] ; mov dword ptr [rcx + 0x18], eax ; pop rbp ; ret
0x000000000040cf40 : mov ecx, dword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040e82d : mov ecx, eax ; shl edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000040e7fd : mov ecx, eax ; shr edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000401ac5 : mov edi, 0x612e20 ; mov rbp, rsp ; call rax
0x0000000000401a42 : mov edi, 0x6132b0 ; jmp rax
0x0000000000401a82 : mov edi, 0x6132b0 ; jmp rdx
0x000000000040d50c : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040b5c9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040b5e9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040b609 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000040c2d3 : mov edi, dword ptr [rcx] ; call rax
0x000000000040bce9 : mov edi, dword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x000000000040ee67 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000411809 : mov edi, edi ; call qword ptr [rcx]
0x000000000040ee66 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000040c512 : mov edx, 0x48ffff50 ; add esp, 0x20 ; pop rbp ; ret
0x00000000004081fa : mov esi, 0x48ffffff ; add esp, 0x10 ; pop rbp ; ret
0x000000000040bdb2 : mov esi, 0x48ffffff ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040bcec : mov esi, dword ptr [rbp - 0x20] ; call rax
0x000000000040b967 : mov esi, dword ptr [rcx] ; call rax
0x0000000000401a80 : mov esi, eax ; mov edi, 0x6132b0 ; jmp rdx
0x000000000040b9d9 : mov esi, eax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000040a9fc : mov esi, eax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x0000000000402fdc : mov qword ptr [0x613350], rdi ; pop rbp ; ret
0x000000000040bc6a : mov qword ptr [rbp - 8], rax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040458d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040a2e7 : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040d50f : mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040b8dd : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000405c4a : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040570b : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000403eca : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040322b : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004043d4 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004031ae : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000406de2 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040438c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040b6ce : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000406f28 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b9db : mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000040d0ce : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040a9fe : mov rax, qword ptr [rbp - 0x28] ; call rax
0x000000000040465e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000405c48 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040d59a : mov rax, qword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406c2c : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040610e : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040a9a8 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000407d53 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040cfc2 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000408dd9 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040bc6e : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040b5cc : mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040b5ec : mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040b60c : mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000040e78d : mov rax, rdi ; pop rbp ; ret
0x000000000040bfd0 : mov rax, rdx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040adf3 : mov rax, rdx ; pop rbp ; ret
0x0000000000401aca : mov rbp, rsp ; call rax
0x0000000000401a30 : mov rbp, rsp ; ja 0x401a3d ; pop rbp ; ret
0x0000000000401fb9 : mov rcx, qword ptr [rax*8 + 0x40ef30] ; jmp rcx
0x000000000040267c : mov rcx, qword ptr [rax*8 + 0x40ef68] ; jmp rcx
0x0000000000403c4d : mov rcx, qword ptr [rax*8 + 0x40f9f0] ; jmp rcx
0x0000000000404716 : mov rcx, qword ptr [rax*8 + 0x40fa70] ; jmp rcx
0x00000000004049f6 : mov rcx, qword ptr [rax*8 + 0x40fab8] ; jmp rcx
0x000000000040627d : mov rcx, qword ptr [rax*8 + 0x40ff78] ; jmp rcx
0x000000000040aaf3 : mov rcx, qword ptr [rax*8 + 0x410368] ; jmp rcx
0x000000000040c331 : mov rcx, qword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040c2ce : mov rcx, qword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040b962 : mov rcx, qword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040ce72 : mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040d6ee : mov rcx, qword ptr [rbp - 8] ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x000000000040ab5b : mov rcx, qword ptr [rbp - 8] ; mov dword ptr [rcx + 0x18], eax ; pop rbp ; ret
0x000000000040cf3f : mov rcx, qword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040d50b : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040b5c8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040b5e8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040b608 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000040c2d2 : mov rdi, qword ptr [rcx] ; call rax
0x000000000040bce8 : mov rdi, qword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x000000000040bceb : mov rsi, qword ptr [rbp - 0x20] ; call rax
0x000000000040b966 : mov rsi, qword ptr [rcx] ; call rax
0x0000000000401a7f : mov rsi, rax ; mov edi, 0x6132b0 ; jmp rdx
0x000000000040b9d8 : mov rsi, rax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000040a9fb : mov rsi, rax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x000000000040b17b : movabs eax, dword ptr [0x5d10c48348000030] ; ret
0x0000000000403601 : movsx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000407e24 : movzx eax, al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040b377 : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040260e : movzx eax, al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040a4a2 : movzx eax, al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000406fda : movzx eax, al ; pop rbp ; ret
0x000000000040e8f2 : movzx eax, ax ; pop rbp ; ret
0x000000000040d67e : movzx eax, bh ; pop rbp ; ret
0x000000000040b3a6 : movzx eax, cl ; pop rbp ; ret
0x000000000040d67d : movzx eax, dil ; pop rbp ; ret
0x0000000000407b70 : movzx eax, word ptr [rbp - 2] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040ee88 : nop dword ptr [rax + rax] ; ret
0x0000000000411805 : or al, 0 ; add al, bl ; mov edi, edi ; call qword ptr [rcx]
0x0000000000404f6e : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000404f6f : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040385b : or byte ptr [rcx + 0x2df9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x0000000000403db1 : or byte ptr [rcx + 0x2df9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x0000000000403772 : or byte ptr [rcx + 0x38f9], al ; add byte ptr [rdi], cl ; pushfq ; ret 0x5588
0x0000000000403b17 : or byte ptr [rcx + 0x38f9], al ; add byte ptr [rdi], cl ; pushfq ; ret 0x9588
0x0000000000405e31 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040351a : or eax, dword ptr [rax] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040e78b : or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x000000000040e801 : or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000040e78a : or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x000000000040d67b : out 1, eax ; movzx eax, dil ; pop rbp ; ret
0x0000000000406fd7 : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040e800 : out dx, eax ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000040b869 : outsb dx, byte ptr [rsi] ; ret 0x280f
0x0000000000401aa5 : outsb dx, byte ptr [rsi] ; sbb byte ptr [rcx], ah ; add byte ptr [rcx], al ; ret
0x000000000040ee7c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040ee7e : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040673e : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040ee80 : pop r14 ; pop r15 ; ret
0x0000000000406740 : pop r15 ; pop rbp ; ret
0x000000000040ee82 : pop r15 ; ret
0x0000000000403004 : pop rax ; xor esp, dword ptr [rcx] ; pop rbp ; ret
0x0000000000401aa2 : pop rbp ; mov byte ptr [rip + 0x21186e], 1 ; ret
0x0000000000401a41 : pop rbp ; mov edi, 0x6132b0 ; jmp rax
0x0000000000401a7e : pop rbp ; mov rsi, rax ; mov edi, 0x6132b0 ; jmp rdx
0x000000000040ee7b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040ee7f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401a35 : pop rbp ; ret
0x000000000040673d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040555a : pop rbx ; pop rbp ; ret
0x0000000000406741 : pop rdi ; pop rbp ; ret
0x000000000040ee83 : pop rdi ; ret
0x000000000040673f : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040ee81 : pop rsi ; pop r15 ; ret
0x000000000040ee7d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040b880 : pop rsp ; ret 0xf66
0x00000000004002d5 : push rax ; jbe 0x40027e ; xchg al, dh ; xchg eax, esi ; jl 0x400327 ; ret
0x0000000000405bce : push rax ; pop rbp ; ret
0x0000000000402fe0 : push rax ; xor esp, dword ptr [rcx] ; pop rbp ; ret
0x0000000000404f72 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000401ac4 : push rbp ; mov edi, 0x612e20 ; mov rbp, rsp ; call rax
0x000000000040da6d : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000040563e : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000040377a : pushfq ; ret 0x5588
0x0000000000403b1f : pushfq ; ret 0x9588
0x000000000040e7fe : rcl ebx, -0x11 ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000040e82e : rcl ebx, -0x19 ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x00000000004002dd : ret
0x000000000040212c : ret 0
0x00000000004077ba : ret 0x110
0x00000000004018e2 : ret 0x2118
0x00000000004016e2 : ret 0x2119
0x000000000040b86a : ret 0x280f
0x0000000000407b9a : ret 0x3948
0x000000000040377b : ret 0x5588
0x0000000000407e96 : ret 0x5589
0x000000000040a1c7 : ret 0x60
0x000000000040c173 : ret 0x8348
0x0000000000406239 : ret 0x8844
0x0000000000406cb2 : ret 0x8948
0x000000000040509d : ret 0x89a5
0x0000000000402c34 : ret 0x8b48
0x0000000000403b20 : ret 0x9588
0x000000000040222b : ret 0xb0
0x000000000040c1f6 : ret 0xb948
0x0000000000403f91 : ret 0xbe01
0x0000000000401a65 : ret 0xc148
0x0000000000402a2b : ret 0xc8b
0x0000000000406103 : ret 0xd284
0x0000000000404f8b : ret 0xdfe8
0x0000000000402a1c : ret 0xe280
0x000000000040558c : ret 0xee8
0x0000000000409ca1 : ret 0xf280
0x000000000040b881 : ret 0xf66
0x000000000040cbc0 : ret 0xff3
0x000000000040b85a : ret 0xff5f
0x00000000004109d1 : ret 0xffff
0x00000000004058ae : ret 1
0x0000000000405642 : ret 8
0x000000000040b854 : rol byte ptr [r8 + rcx*4 - 0x40], -0x18 ; ret 0xff5f
0x000000000040b855 : rol byte ptr [rax + rcx*4 - 0x40], -0x18 ; ret 0xff5f
0x000000000040b3a2 : rol dword ptr [rax - 0x49f0fe1f], -0x3f ; pop rbp ; ret
0x000000000040687b : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000404660 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x4046cb ; ret
0x0000000000401a6c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401a7b ; pop rbp ; ret
0x000000000040687c : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000404661 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x4046ca ; ret
0x000000000040a4a4 : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x0000000000402d24 : ror byte ptr [rax - 0x7f], -0x3c ; and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040da6e : ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000040b87a : ror byte ptr [rbx], cl ; add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x000000000040563f : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000040adba : ror dword ptr [rcx + 0x458bec45], -0x14 ; pop rbp ; ret
0x00000000004002d7 : sahf ; xchg al, dh ; xchg eax, esi ; jl 0x400325 ; ret
0x0000000000402129 : salc ; add cl, ch ; ret 0
0x0000000000401a6e : sar eax, 1 ; jne 0x401a79 ; pop rbp ; ret
0x0000000000401a6d : sar rax, 1 ; jne 0x401a7a ; pop rbp ; ret
0x000000000040d7af : sbb al, 0 ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000040d70e : sbb al, 0x24 ; add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000410c89 : sbb bh, bh ; call qword ptr [rdi]
0x0000000000401aa6 : sbb byte ptr [rcx], ah ; add byte ptr [rcx], al ; ret
0x000000000040ae2a : sete al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040ae2c : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000040b89f : shl dword ptr [rsi + 0xf], 0x5c ; ret 0xf66
0x000000000040e82f : shl edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000040e7c8 : shl edx, cl ; or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x000000000040e7ff : shr edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000040e788 : shr edx, cl ; or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x0000000000402a15 : stc ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000409da1 : stc ; add eax, 0xf000000 ; xchg eax, esp ; ret 0x9588
0x000000000040385d : stc ; sub eax, 0xf000000 ; xchg eax, esp ; ret 0x5588
0x0000000000403db3 : stc ; sub eax, 0xf000000 ; xchg eax, esp ; ret 0x9588
0x000000000040e9e8 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040a6c8 : sub al, 0x48 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040385e : sub eax, 0xf000000 ; xchg eax, esp ; ret 0x5588
0x0000000000403db4 : sub eax, 0xf000000 ; xchg eax, esp ; ret 0x9588
0x000000000040ef09 : sub esp, 8 ; add rsp, 8 ; ret
0x000000000040ef08 : sub rsp, 8 ; add rsp, 8 ; ret
0x00000000004078de : test al, 0 ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000410c44 : test byte ptr [rax], al ; add byte ptr [rax], al ; adc dil, dil ; jmp rdx
0x000000000040ee8a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000409519 : test dword ptr [rax], ebx ; add byte ptr [rax], al ; add al, ch ; int 0x80
0x00000000004002d8 : xchg al, dh ; xchg eax, esi ; jl 0x400324 ; ret
0x00000000004072a7 : xchg eax, ebp ; ret 0x9588
0x0000000000402a2a : xchg eax, ebp ; ret 0xc8b
0x00000000004002da : xchg eax, esi ; jl 0x400322 ; ret
0x0000000000403863 : xchg eax, esp ; ret 0x5588
0x0000000000403db9 : xchg eax, esp ; ret 0x9588
0x0000000000406102 : xchg eax, esp ; ret 0xd284
0x0000000000402a1b : xchg eax, esp ; ret 0xe280
0x0000000000409ca0 : xchg eax, esp ; ret 0xf280
0x000000000040b3a1 : xchg eax, esp ; rol dword ptr [rax - 0x49f0fe1f], -0x3f ; pop rbp ; ret
0x000000000040ae2b : xchg eax, esp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000040e78c : xlatb ; mov rax, rdi ; pop rbp ; ret
0x0000000000401a44 : xor ah, byte ptr [rcx] ; jmp rax
0x0000000000401a84 : xor ah, byte ptr [rcx] ; jmp rdx
0x000000000040de7e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004044d6 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000404312 : xor esp, dword ptr [rcx] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402fe1 : xor esp, dword ptr [rcx] ; pop rbp ; ret
