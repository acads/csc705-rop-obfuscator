0x0000000000403a19 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407e1b : add ah, ah ; add al, 0 ; add byte ptr [rax], dl ; ret 0xffff
0x0000000000407ca0 : add al, -1 ; jmp qword ptr [rdx]
0x0000000000407e1d : add al, 0 ; add byte ptr [rax], dl ; ret 0xffff
0x0000000000407ebf : add al, ah ; ret 0xffff
0x00000000004015b7 : add al, ch ; ret
0x0000000000407f1f : add al, dh ; ret
0x0000000000407edf : add al, dh ; ret 0xffff
0x0000000000407603 : add al, dl ; ret
0x0000000000407e9f : add al, dl ; ret 0xffff
0x000000000040649f : add bl, dh ; ret
0x0000000000404f08 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x00000000004019bc : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x0000000000407e19 : add byte ptr [rax], al ; add ah, ah ; add al, 0 ; add byte ptr [rax], dl ; ret 0xffff
0x0000000000407c9e : add byte ptr [rax], al ; add al, -1 ; jmp qword ptr [rdx]
0x00000000004015b5 : add byte ptr [rax], al ; add al, ch ; ret
0x000000000040649d : add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004019ba : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000040649b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040659a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040649c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004071c4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x404b
0x0000000000407e99 : add byte ptr [rax], al ; add byte ptr [rbp + rax], ah ; add al, dl ; ret 0xffff
0x00000000004042ee : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004039da : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403780 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040114b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000407e5a : add byte ptr [rax], al ; and al, 5 ; add byte ptr [rax], al ; nop ; ret 0xffff
0x0000000000401329 : add byte ptr [rax], al ; jmp 0x401169
0x000000000040432a : add byte ptr [rax], al ; mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040439d : add byte ptr [rax], al ; mov eax, edi ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004047a9 : add byte ptr [rax], al ; mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004045c1 : add byte ptr [rax], al ; mov eax, esi ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004025c2 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000407e5e : add byte ptr [rax], al ; nop ; ret 0xffff
0x0000000000403cd1 : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000404dcb : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403748 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004075fa : add byte ptr [rax], al ; push rax ; ret 0xffff
0x000000000040649e : add byte ptr [rax], al ; ret
0x00000000004071c6 : add byte ptr [rax], al ; ret 0x404b
0x000000000040855f : add byte ptr [rax], dl ; fdivr st(7) ; jmp rax
0x00000000004075f3 : add byte ptr [rax], dl ; ret 0xffff
0x000000000040436f : add byte ptr [rbp + 0x48], dl ; mov ebp, esp ; mov dword ptr [rbp - 4], edi ; pop rbp ; ret
0x0000000000407e9b : add byte ptr [rbp + rax], ah ; add al, dl ; ret 0xffff
0x0000000000406597 : add byte ptr [rbp], dh ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000404dcc : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000403749 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000401b44 : add byte ptr [rbx - 0xaf4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000401d36 : add byte ptr [rbx - 0xcb4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000401e06 : add byte ptr [rbx - 0xdb4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000401568 : add byte ptr [rcx], al ; ret
0x00000000004047da : add byte ptr [rdi], cl ; mov bh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004015b1 : add byte ptr [rdi], cl ; test byte ptr [rdx], cl ; add byte ptr [rax], al ; add al, ch ; ret
0x00000000004042f0 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004039d8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404dca : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000403747 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000405ffa : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401564 : add eax, 0x207d2e ; add ebx, esi ; ret
0x000000000040152b : add eax, edx ; sar rax, 1 ; jne 0x40153c ; pop rbp ; ret
0x0000000000401569 : add ebx, esi ; ret
0x00000000004016bb : add esp, 0x10 ; pop rbp ; ret
0x0000000000405d5c : add esp, 0x130 ; pop rbp ; ret
0x0000000000403744 : add esp, 0x138 ; pop rbx ; pop rbp ; ret
0x00000000004050bc : add esp, 0x1a0 ; pop rbp ; ret
0x00000000004023d0 : add esp, 0x20 ; pop rbp ; ret
0x00000000004017cd : add esp, 0x30 ; pop rbp ; ret
0x0000000000403dbc : add esp, 0x50 ; pop rbp ; ret
0x0000000000402853 : add esp, 0x70 ; pop rbp ; ret
0x00000000004038fe : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000403ccd : add esp, 0x90 ; pop rbp ; ret
0x0000000000404f54 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040114e : add esp, 8 ; ret
0x000000000040152a : add rax, rdx ; sar rax, 1 ; jne 0x40153d ; pop rbp ; ret
0x00000000004016ba : add rsp, 0x10 ; pop rbp ; ret
0x0000000000405d5b : add rsp, 0x130 ; pop rbp ; ret
0x0000000000403743 : add rsp, 0x138 ; pop rbx ; pop rbp ; ret
0x00000000004050bb : add rsp, 0x1a0 ; pop rbp ; ret
0x00000000004023cf : add rsp, 0x20 ; pop rbp ; ret
0x00000000004017cc : add rsp, 0x30 ; pop rbp ; ret
0x0000000000403dbb : add rsp, 0x50 ; pop rbp ; ret
0x0000000000402852 : add rsp, 0x70 ; pop rbp ; ret
0x00000000004038fd : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000403ccc : add rsp, 0x90 ; pop rbp ; ret
0x0000000000404f53 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040114d : add rsp, 8 ; ret
0x0000000000405ff9 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000407e5c : and al, 5 ; add byte ptr [rax], al ; nop ; ret 0xffff
0x0000000000401567 : and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000402297 : and eax, 0x48ffffef ; add esp, 0x10 ; pop rbp ; ret
0x0000000000403d07 : and eax, 0x48fffffd ; add esp, 0x20 ; pop rbp ; ret
0x000000000040217f : and eax, 0x6092a0 ; pop rbp ; ret
0x00000000004021a3 : and eax, 0x6092a8 ; pop rbp ; ret
0x0000000000401149 : and eax, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000403779 : call 0xffffffffe902c0c9
0x0000000000403778 : call 0xffffffffe902c0ca
0x0000000000401fdf : call 0xffffffffff48d578
0x0000000000406479 : call qword ptr [r12 + rbx*8]
0x000000000040754f : call qword ptr [rax]
0x0000000000407a23 : call qword ptr [rsi]
0x000000000040647a : call qword ptr [rsp + rbx*8]
0x000000000040158d : call rax
0x0000000000407c23 : call rdx
0x00000000004043a0 : clc ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405d5a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x00000000004052bf : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404301 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040152f : clc ; jne 0x401538 ; pop rbp ; ret
0x0000000000402705 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004063cb : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000404537 : clc ; pop rbp ; ret
0x00000000004016e7 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040572b : cld ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405670 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004063c8 : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000405ea3 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405e46 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040566d : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404376 : cld ; pop rbp ; ret
0x0000000000403746 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004014ed : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401500 ; pop rbp ; ret
0x000000000040490c : cwde ; mov rcx, qword ptr [rax*8 + 0x407188] ; jmp rcx
0x0000000000402be5 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; enter 0x406c, 0 ; jmp rcx
0x0000000000401b4a : dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000405cbf : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000040382b : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000402bea : enter 0x406c, 0 ; jmp rcx
0x0000000000408561 : fdivr st(7) ; jmp rax
0x0000000000403163 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000401ed7 : fmul dword ptr [rbx - 0xeb4b] ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040647c : fmul qword ptr [rax - 0x7d] ; ret
0x000000000040313b : fsubr st(0) ; jmp rax
0x00000000004016b9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401500 : hlt ; pop rbp ; mov edi, 0x609230 ; jmp rax
0x0000000000404373 : in eax, -0x77 ; jge 0x404378 ; pop rbp ; ret
0x0000000000404533 : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x0000000000404f10 : int 0x80
0x00000000004014f3 : ja 0x4014fa ; pop rbp ; ret
0x00000000004014ff : je 0x4014fd ; pop rbp ; mov edi, 0x609230 ; jmp rax
0x0000000000401566 : jge 0x40158d ; add byte ptr [rcx], al ; ret
0x0000000000401565 : jge 0x40158e ; add byte ptr [rcx], al ; ret
0x0000000000404375 : jge 0x404376 ; pop rbp ; ret
0x0000000000404536 : jge 0x404533 ; pop rbp ; ret
0x000000000040132b : jmp 0x401167
0x0000000000407dc3 : jmp qword ptr [rax]
0x0000000000407f83 : jmp qword ptr [rdi]
0x0000000000407ca3 : jmp qword ptr [rdx]
0x0000000000401507 : jmp rax
0x0000000000401996 : jmp rcx
0x0000000000401547 : jmp rdx
0x0000000000401530 : jne 0x401537 ; pop rbp ; ret
0x0000000000406598 : jne 0x4065a2 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000402855 : jo 0x4028b6 ; ret
0x0000000000403f64 : jo 0x403fc5 ; ret
0x000000000040409e : jo 0x4040ff ; ret
0x0000000000403900 : js 0x403960 ; pop rbp ; ret
0x00000000004075f7 : lcall ptr [rax + 0x50000006] ; ret 0xffff
0x0000000000403e3b : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000403ccb : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000405ff6 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004047dc : mov bh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004021a1 : mov byte ptr [0x6092a8], al ; pop rbp ; ret
0x0000000000401563 : mov byte ptr [rip + 0x207d2e], 1 ; ret
0x0000000000405ffc : mov dh, -0x40 ; pop rbp ; ret
0x000000000040217d : mov dword ptr [0x6092a0], edi ; pop rbp ; ret
0x0000000000402706 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000402614 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004026c8 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004017c9 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004016b7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004016e5 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404374 : mov dword ptr [rbp - 4], edi ; pop rbp ; ret
0x00000000004063c9 : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000404535 : mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x000000000040277e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004038fc : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000407600 : mov eax, 0xd0000006 ; ret
0x00000000004025c8 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004051db : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004023cc : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004025c5 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040234f : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405473 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040257d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040260e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004026ca : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040284f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004038fa : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000403e39 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000405ea4 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405729 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040566e : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004052bd : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004042ff : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004063cc : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040432c : mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040439f : mov eax, edi ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004047ab : mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004045c3 : mov eax, esi ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040158b : mov ebp, esp ; call rax
0x00000000004014f1 : mov ebp, esp ; ja 0x4014fc ; pop rbp ; ret
0x0000000000404372 : mov ebp, esp ; mov dword ptr [rbp - 4], edi ; pop rbp ; ret
0x0000000000404532 : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000040198f : mov ecx, dword ptr [rax*8 + 0x4064f0] ; jmp rcx
0x0000000000402907 : mov ecx, dword ptr [rax*8 + 0x406c80] ; jmp rcx
0x0000000000402be7 : mov ecx, dword ptr [rax*8 + 0x406cc8] ; jmp rcx
0x000000000040490e : mov ecx, dword ptr [rax*8 + 0x407188] ; jmp rcx
0x0000000000402611 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401585 : mov edi, 0x608e20 ; mov rbp, rsp ; call rax
0x0000000000401502 : mov edi, 0x609230 ; jmp rax
0x0000000000401542 : mov edi, 0x609230 ; jmp rdx
0x0000000000406477 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000406476 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000401540 : mov esi, eax ; mov edi, 0x609230 ; jmp rdx
0x0000000000401587 : mov fs, word ptr [rax] ; mov rbp, rsp ; call rax
0x000000000040217c : mov qword ptr [0x6092a0], rdi ; pop rbp ; ret
0x0000000000404534 : mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000040277d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403e3a : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004038fb : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x00000000004051da : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004023cb : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004025c4 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040234e : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405472 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040257c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040284e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000403e38 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004052bc : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004042fe : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404360 : mov rax, rcx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040158a : mov rbp, rsp ; call rax
0x00000000004014f0 : mov rbp, rsp ; ja 0x4014fd ; pop rbp ; ret
0x0000000000404371 : mov rbp, rsp ; mov dword ptr [rbp - 4], edi ; pop rbp ; ret
0x0000000000404531 : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000040198e : mov rcx, qword ptr [rax*8 + 0x4064f0] ; jmp rcx
0x0000000000402906 : mov rcx, qword ptr [rax*8 + 0x406c80] ; jmp rcx
0x0000000000402be6 : mov rcx, qword ptr [rax*8 + 0x406cc8] ; jmp rcx
0x000000000040490d : mov rcx, qword ptr [rax*8 + 0x407188] ; jmp rcx
0x000000000040153f : mov rsi, rax ; mov edi, 0x609230 ; jmp rdx
0x0000000000405ffb : movzx eax, al ; pop rbp ; ret
0x00000000004047db : movzx eax, cx ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407e60 : nop ; ret 0xffff
0x0000000000406498 : nop dword ptr [rax + rax] ; ret
0x000000000040855d : or al, 0 ; add byte ptr [rax], dl ; fdivr st(7) ; jmp rax
0x0000000000402be8 : or al, 0xffffffffffffffc5 ; enter 0x406c, 0 ; jmp rcx
0x000000000040315e : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040315f : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000404021 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040648c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040648e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000404dce : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406490 : pop r14 ; pop r15 ; ret
0x0000000000404dd0 : pop r15 ; pop rbp ; ret
0x0000000000406492 : pop r15 ; ret
0x0000000000401562 : pop rbp ; mov byte ptr [rip + 0x207d2e], 1 ; ret
0x0000000000401501 : pop rbp ; mov edi, 0x609230 ; jmp rax
0x000000000040153e : pop rbp ; mov rsi, rax ; mov edi, 0x609230 ; jmp rdx
0x000000000040648b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040648f : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004014f5 : pop rbp ; ret
0x0000000000404dcd : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040374a : pop rbx ; pop rbp ; ret
0x0000000000404dd1 : pop rdi ; pop rbp ; ret
0x0000000000406493 : pop rdi ; ret
0x0000000000404dcf : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000406491 : pop rsi ; pop r15 ; ret
0x000000000040648d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000403dbe : push rax ; pop rbp ; ret
0x00000000004075fc : push rax ; ret 0xffff
0x0000000000403162 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000401584 : push rbp ; mov edi, 0x608e20 ; mov rbp, rsp ; call rax
0x0000000000404370 : push rbp ; mov rbp, rsp ; mov dword ptr [rbp - 4], edi ; pop rbp ; ret
0x0000000000404530 : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000040594d : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000040382e : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000401151 : ret
0x0000000000401332 : ret 0x207d
0x00000000004071c8 : ret 0x404b
0x00000000004048c9 : ret 0x8844
0x0000000000405342 : ret 0x8948
0x000000000040328d : ret 0x89a5
0x0000000000403166 : ret 0x8b48
0x00000000004019bf : ret 0xb0
0x000000000040317b : ret 0xbfe8
0x0000000000401525 : ret 0xc148
0x00000000004042f3 : ret 0xd284
0x000000000040377c : ret 0xee8
0x000000000040164a : ret 0xfffc
0x00000000004075f5 : ret 0xffff
0x0000000000403a9e : ret 1
0x0000000000403832 : ret 8
0x0000000000404f0b : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000402850 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x4028bb ; ret
0x000000000040152c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40153b ; pop rbp ; ret
0x0000000000404f0c : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000402851 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x4028ba ; ret
0x000000000040594e : ror byte ptr [rax - 0x7f], 1 ; ret 1
0x0000000000401f2f : ror byte ptr [rbx - 0xef4b], 1 ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040382f : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000040152e : sar eax, 1 ; jne 0x401539 ; pop rbp ; ret
0x000000000040152d : sar rax, 1 ; jne 0x40153a ; pop rbp ; ret
0x0000000000407e58 : sbb al, 0 ; add byte ptr [rax], al ; and al, 5 ; add byte ptr [rax], al ; nop ; ret 0xffff
0x0000000000405ff8 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004064cd : sub esp, 8 ; add rsp, 8 ; ret
0x00000000004064cc : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040649a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004015b3 : test byte ptr [rdx], cl ; add byte ptr [rax], al ; add al, ch ; ret
0x00000000004042f2 : xchg eax, esp ; ret 0xd284
0x0000000000405d5e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004026c6 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
