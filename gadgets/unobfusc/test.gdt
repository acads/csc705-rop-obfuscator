0x0000000000403360 : adc byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004058e9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040999b : add al, bl ; ret
0x0000000000409e75 : add al, byte ptr [rax] ; add al, ch ; mov bh, bh ; call rdi
0x0000000000409e77 : add al, ch ; mov bh, bh ; call rdi
0x0000000000403aa8 : add al, ch ; ret 1
0x000000000040822f : add bl, dh ; ret
0x0000000000403265 : add byte ptr [rax + 0x63], cl ; ret 0x8b48
0x0000000000402f73 : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x4090
0x000000000040624d : add byte ptr [rax - 0x77], cl ; jge 0x406250 ; pop rbp ; ret
0x000000000040822d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000403263 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8b48
0x0000000000402f71 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x4090
0x000000000040624b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jge 0x406252 ; pop rbp ; ret
0x000000000040822b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000400630 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000400632 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000406d8d : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040624a : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x00000000004042a6 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040822c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400634 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000040215f : add byte ptr [rax], al ; add byte ptr [rcx + rax], ah ; movzx eax, al ; pop rbp ; ret
0x0000000000403bce : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x9588
0x00000000004064b3 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0xe280
0x00000000004061be : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000403d44 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000409e72 : add byte ptr [rax], al ; add r8b, byte ptr [rax] ; add al, ch ; mov bh, bh ; call rdi
0x0000000000402135 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405650 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401233 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000402160 : add byte ptr [rax], al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040ab86 : add byte ptr [rax], al ; call 0x1140ab68
0x0000000000409e76 : add byte ptr [rax], al ; call 0xffffffffd8409e0a
0x0000000000409cf6 : add byte ptr [rax], al ; cwde ; jle 0x409cff ; jmp qword ptr [rax]
0x0000000000409992 : add byte ptr [rax], al ; cwde ; ret
0x0000000000401449 : add byte ptr [rax], al ; jmp 0x401249
0x0000000000406d8f : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040624c : add byte ptr [rax], al ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000404492 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004042a8 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040a196 : add byte ptr [rax], al ; mov sil, -1 ; call rdx
0x0000000000403362 : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000405618 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040ab82 : add byte ptr [rax], al ; push rsp ; sldt word ptr [rax] ; call 0x1140ab6c
0x000000000040822e : add byte ptr [rax], al ; ret
0x0000000000400636 : add byte ptr [rax], al ; ret 0
0x0000000000405619 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040325f : add byte ptr [rcx + 0x2c2], al ; add byte ptr [rax + 0x63], cl ; ret 0x8b48
0x00000000004064af : add byte ptr [rcx + 0x9f9], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0xe280
0x0000000000402161 : add byte ptr [rcx + rax], ah ; movzx eax, al ; pop rbp ; ret
0x00000000004016a8 : add byte ptr [rcx], al ; ret
0x0000000000403bd0 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x9588
0x00000000004064b5 : add byte ptr [rdi], cl ; xchg eax, esi ; ret 0xe280
0x00000000004061c0 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000403d46 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000409e73 : add byte ptr [rdx + rax], al ; add al, ch ; mov bh, bh ; call rdi
0x0000000000401dd8 : add dword ptr [rax + 0xf], eax ; mov dh, -0x39 ; pop rbp ; ret
0x0000000000403aa6 : add dword ptr [rax], eax ; add al, ch ; ret 1
0x00000000004058a8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405617 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000401f0a : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401cfa : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402163 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004016a4 : add eax, 0x209bde ; add ebx, esi ; ret
0x000000000040166b : add eax, edx ; sar rax, 1 ; jne 0x40167c ; pop rbp ; ret
0x00000000004016a9 : add ebx, esi ; ret
0x000000000040195b : add esp, 0x10 ; pop rbp ; ret
0x0000000000407aec : add esp, 0x130 ; pop rbp ; ret
0x0000000000405614 : add esp, 0x138 ; pop rbx ; pop rbp ; ret
0x0000000000401cff : add esp, 0x20 ; pop rbp ; ret
0x000000000040335e : add esp, 0x210 ; pop rbp ; ret
0x0000000000401a3d : add esp, 0x30 ; pop rbp ; ret
0x0000000000405c8c : add esp, 0x50 ; pop rbp ; ret
0x0000000000404723 : add esp, 0x70 ; pop rbp ; ret
0x00000000004057ce : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000405b9d : add esp, 0x90 ; pop rbp ; ret
0x0000000000403ef1 : add esp, 0xc0 ; pop rbp ; ret
0x0000000000403c60 : add esp, 0xe0 ; pop rbp ; ret
0x0000000000401236 : add esp, 8 ; ret
0x0000000000409e74 : add r8b, byte ptr [rax] ; add al, ch ; mov bh, bh ; call rdi
0x000000000040166a : add rax, rdx ; sar rax, 1 ; jne 0x40167d ; pop rbp ; ret
0x000000000040195a : add rsp, 0x10 ; pop rbp ; ret
0x0000000000407aeb : add rsp, 0x130 ; pop rbp ; ret
0x0000000000405613 : add rsp, 0x138 ; pop rbx ; pop rbp ; ret
0x0000000000401cfe : add rsp, 0x20 ; pop rbp ; ret
0x000000000040335d : add rsp, 0x210 ; pop rbp ; ret
0x0000000000401a3c : add rsp, 0x30 ; pop rbp ; ret
0x0000000000405c8b : add rsp, 0x50 ; pop rbp ; ret
0x0000000000404722 : add rsp, 0x70 ; pop rbp ; ret
0x00000000004057cd : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000405b9c : add rsp, 0x90 ; pop rbp ; ret
0x0000000000403ef0 : add rsp, 0xc0 ; pop rbp ; ret
0x0000000000403c5f : add rsp, 0xe0 ; pop rbp ; ret
0x0000000000401235 : add rsp, 8 ; ret
0x0000000000406ecc : addps xmm1, xmm2 ; movaps xmm0, xmm1 ; pop rbp ; ret
0x0000000000406ecb : addsd xmm1, xmm2 ; movaps xmm0, xmm1 ; pop rbp ; ret
0x0000000000402162 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401dd6 : and bh, 1 ; movzx eax, dil ; pop rbp ; ret
0x00000000004016a7 : and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000401dd5 : and dil, 1 ; movzx eax, dil ; pop rbp ; ret
0x0000000000405bd7 : and eax, 0x48fffffd ; add esp, 0x20 ; pop rbp ; ret
0x0000000000401ba9 : and eax, 0x60b1f8 ; pop rbp ; ret
0x0000000000403c8d : and eax, 0x60b29c ; pop rbp ; ret
0x0000000000403f0f : and eax, 0x60b2a0 ; pop rbp ; ret
0x0000000000403f33 : and eax, 0x60b2a8 ; pop rbp ; ret
0x000000000040ab88 : call 0x1140ab66
0x0000000000404264 : call 0x4902cbb4
0x0000000000404263 : call 0x4902cbb5
0x0000000000404264 : call 0x4902cbb7
0x0000000000404263 : call 0x4902cbb8
0x0000000000409e78 : call 0xffffffffd8409e08
0x0000000000405649 : call 0xffffffffe902df99
0x0000000000405648 : call 0xffffffffe902df9a
0x0000000000408209 : call qword ptr [r12 + rbx*8]
0x0000000000409f3b : call qword ptr [rax]
0x000000000040a49b : call qword ptr [rdx]
0x0000000000409f7b : call qword ptr [rsi]
0x000000000040820a : call qword ptr [rsp + rbx*8]
0x00000000004016cd : call rax
0x0000000000409e7b : call rdi
0x000000000040a19b : call rdx
0x0000000000407aea : clc ; add rsp, 0x130 ; pop rbp ; ret
0x000000000040704f : clc ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004061d1 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040166f : clc ; jne 0x401678 ; pop rbp ; ret
0x0000000000403e56 : clc ; mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x00000000004045d5 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040815b : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004061eb : clc ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000040622b : clc ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000040620b : clc ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000406251 : clc ; pop rbp ; ret
0x0000000000406d8c : cld ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000407c36 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004074bb : cld ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407400 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406b4c : cld ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401ba6 : cld ; mov dword ptr [0x60b1f8], eax ; pop rbp ; ret
0x0000000000408158 : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000407c33 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407bd6 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004073fd : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406b49 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000406d93 : cld ; pop rbp ; ret
0x0000000000402f76 : cmp al, 0x25 ; ret 0x4090
0x0000000000405616 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000402133 : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040162d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401640 ; pop rbp ; ret
0x0000000000401231 : cmp eax, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000409cf8 : cwde ; jle 0x409cfd ; jmp qword ptr [rax]
0x0000000000409994 : cwde ; ret
0x0000000000407a4f : dec dword ptr [rax - 0x7f] ; ret 1
0x00000000004056fb : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000406e8f : enter 0x4d89, -0x14 ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x00000000004016a5 : ficomp word ptr [rbx - 0xcfeffe0] ; ret
0x0000000000405033 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040820c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000401959 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401640 : hlt ; pop rbp ; mov edi, 0x60b258 ; jmp rax
0x0000000000406e92 : in al, dx ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000406e95 : in al, dx ; pop rbp ; ret
0x0000000000401633 : ja 0x40163a ; pop rbp ; ret
0x000000000040163f : je 0x40163d ; pop rbp ; mov edi, 0x60b258 ; jmp rax
0x00000000004061ea : jge 0x4061eb ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000040620a : jge 0x40620b ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000040622a : jge 0x40622b ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000406250 : jge 0x40624d ; pop rbp ; ret
0x0000000000409cb9 : jl 0x409cbc ; jmp rdx
0x0000000000409cf9 : jle 0x409cfc ; jmp qword ptr [rax]
0x000000000040144b : jmp 0x401247
0x0000000000403aa4 : jmp 0x403c5d
0x0000000000409bdf : jmp qword ptr [rax]
0x000000000040a21b : jmp qword ptr [rdx]
0x0000000000409e9b : jmp qword ptr [rsi]
0x0000000000401647 : jmp rax
0x0000000000401bdb : jmp rcx
0x0000000000401687 : jmp rdx
0x0000000000401670 : jne 0x401677 ; pop rbp ; ret
0x0000000000404725 : jo 0x404786 ; ret
0x0000000000405e34 : jo 0x405e95 ; ret
0x0000000000405f6e : jo 0x405fcf ; ret
0x000000000040620f : jo 0x406270 ; ret
0x000000000040620e : jo 0x406271 ; ret
0x00000000004057d0 : js 0x405830 ; pop rbp ; ret
0x0000000000402ce9 : lahf ; ret 0xe280
0x0000000000403c62 : loopne 0x403c69 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000405d0b : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000405b9b : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x00000000004033da : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000407d86 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000409e79 : mov bh, bh ; call rdi
0x0000000000409e99 : mov bh, bh ; jmp qword ptr [rsi]
0x0000000000403f31 : mov byte ptr [0x60b2a8], al ; pop rbp ; ret
0x0000000000403aa1 : mov byte ptr [rbp - 1], al ; jmp 0x403c60
0x0000000000403e57 : mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x00000000004016a3 : mov byte ptr [rip + 0x209bde], 1 ; ret
0x0000000000406e8e : mov dh, -0x38 ; mov dword ptr [rbp - 0x14], ecx ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000401ddb : mov dh, -0x39 ; pop rbp ; ret
0x0000000000401f0c : mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401cfc : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402165 : mov dh, -0x40 ; pop rbp ; ret
0x000000000040a199 : mov dh, -1 ; call rdx
0x0000000000401ba7 : mov dword ptr [0x60b1f8], eax ; pop rbp ; ret
0x0000000000403c8b : mov dword ptr [0x60b29c], edi ; pop rbp ; ret
0x0000000000403f0d : mov dword ptr [0x60b2a0], edi ; pop rbp ; ret
0x00000000004045d6 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004044e4 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000404598 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000406e90 : mov dword ptr [rbp - 0x14], ecx ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000406e2a : mov dword ptr [rbp - 0x24], eax ; mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x0000000000401a39 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401957 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408159 : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040624f : mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x000000000040464e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004057cc : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000409990 : mov eax, 0x98000009 ; ret
0x0000000000404498 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000406f6b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040415c : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404495 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000406271 : mov eax, dword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004040df : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000406e93 : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000407203 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403e14 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004044de : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004042ab : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000406e2d : mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x000000000040459a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040471f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004057ca : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000405d09 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000407c34 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004074b9 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004073fe : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406b4a : mov eax, dword ptr [rbp - 4] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000406d91 : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040704d : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004061cf : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040815c : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004061ed : mov eax, dword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000040622d : mov eax, dword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000040620d : mov eax, dword ptr [rdi + 0x70] ; pop rbp ; ret
0x00000000004016cb : mov ebp, esp ; call rax
0x0000000000401631 : mov ebp, esp ; ja 0x40163c ; pop rbp ; ret
0x0000000000401bd4 : mov ecx, dword ptr [rax*8 + 0x408298] ; jmp rcx
0x0000000000403434 : mov ecx, dword ptr [rax*8 + 0x4082c0] ; jmp rcx
0x00000000004047d7 : mov ecx, dword ptr [rax*8 + 0x4092c0] ; jmp rcx
0x0000000000404ab7 : mov ecx, dword ptr [rax*8 + 0x409308] ; jmp rcx
0x00000000004044e1 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004016c5 : mov edi, 0x60ae20 ; mov rbp, rsp ; call rax
0x0000000000401642 : mov edi, 0x60b258 ; jmp rax
0x0000000000401682 : mov edi, 0x60b258 ; jmp rdx
0x00000000004061e9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000406229 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000406209 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000408207 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000408206 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000406275 : mov edx, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000401680 : mov esi, eax ; mov edi, 0x60b258 ; jmp rdx
0x0000000000403f0c : mov qword ptr [0x60b2a0], rdi ; pop rbp ; ret
0x000000000040624e : mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000040464d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405d0a : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004057cb : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000406f6a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040415b : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404494 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000406270 : mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004040de : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000407202 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403e13 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004042aa : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040471e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000405d08 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040704c : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004061ce : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004061ec : mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000040622c : mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000040620c : mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x00000000004016ca : mov rbp, rsp ; call rax
0x0000000000401630 : mov rbp, rsp ; ja 0x40163d ; pop rbp ; ret
0x0000000000401bd3 : mov rcx, qword ptr [rax*8 + 0x408298] ; jmp rcx
0x0000000000403433 : mov rcx, qword ptr [rax*8 + 0x4082c0] ; jmp rcx
0x00000000004047d6 : mov rcx, qword ptr [rax*8 + 0x4092c0] ; jmp rcx
0x0000000000404ab6 : mov rcx, qword ptr [rax*8 + 0x409308] ; jmp rcx
0x00000000004061e8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000406228 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000406208 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000406274 : mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040167f : mov rsi, rax ; mov edi, 0x60b258 ; jmp rdx
0x000000000040a198 : mov sil, -1 ; call rdx
0x0000000000406ecf : movaps xmm0, xmm1 ; pop rbp ; ret
0x0000000000401f0b : movzx eax, al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401cfb : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402164 : movzx eax, al ; pop rbp ; ret
0x0000000000401dda : movzx eax, bh ; pop rbp ; ret
0x0000000000403e5a : movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000401dd9 : movzx eax, dil ; pop rbp ; ret
0x0000000000408228 : nop dword ptr [rax + rax] ; ret
0x0000000000406312 : or al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040502e : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040502f : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000403d40 : or byte ptr [rcx + 0x2df9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000409999 : or dword ptr [rax], eax ; add al, bl ; ret
0x0000000000405ef1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401dd7 : out 1, eax ; movzx eax, dil ; pop rbp ; ret
0x000000000040821c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040821e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000408220 : pop r14 ; pop r15 ; ret
0x0000000000408222 : pop r15 ; ret
0x00000000004016a2 : pop rbp ; mov byte ptr [rip + 0x209bde], 1 ; ret
0x0000000000401641 : pop rbp ; mov edi, 0x60b258 ; jmp rax
0x000000000040167e : pop rbp ; mov rsi, rax ; mov edi, 0x60b258 ; jmp rdx
0x000000000040821b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040821f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401635 : pop rbp ; ret
0x000000000040561a : pop rbx ; pop rbp ; ret
0x0000000000408223 : pop rdi ; ret
0x0000000000408221 : pop rsi ; pop r15 ; ret
0x000000000040821d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004061ee : push r8 ; pop rbp ; ret
0x0000000000405c8e : push rax ; pop rbp ; ret
0x0000000000406276 : push rbp ; clc ; pop rbp ; ret
0x0000000000405032 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x00000000004016c4 : push rbp ; mov edi, 0x60ae20 ; mov rbp, rsp ; call rax
0x00000000004076dd : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x00000000004056fe : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000040ab84 : push rsp ; sldt word ptr [rax] ; call 0x1140ab6a
0x0000000000401239 : ret
0x0000000000400638 : ret 0
0x0000000000406809 : ret 0x1a8
0x0000000000401452 : ret 0x209c
0x0000000000401242 : ret 0x209d
0x0000000000404259 : ret 0x30
0x0000000000402f78 : ret 0x4090
0x0000000000406806 : ret 0x458a
0x000000000040504b : ret 0x7fe8
0x0000000000404267 : ret 0x8148
0x00000000004067f3 : ret 0x840f
0x0000000000402cf0 : ret 0x8589
0x00000000004070d2 : ret 0x8948
0x000000000040515d : ret 0x89a5
0x0000000000403412 : ret 0x89b9
0x0000000000403268 : ret 0x8b48
0x0000000000403bd3 : ret 0x9588
0x0000000000401665 : ret 0xc148
0x000000000040630e : ret 0xc189
0x00000000004061c3 : ret 0xd284
0x0000000000402cea : ret 0xe280
0x000000000040564c : ret 0xee8
0x000000000040426a : ret 0xffff
0x0000000000403aaa : ret 1
0x0000000000403261 : ret 2
0x0000000000405702 : ret 8
0x0000000000404720 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x40478b ; ret
0x000000000040166c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40167b ; pop rbp ; ret
0x0000000000404721 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x40478a ; ret
0x000000000040335c : ror byte ptr [rax - 0x7f], -0x3c ; adc byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000403c5e : ror byte ptr [rax - 0x7f], -0x3c ; loopne 0x403c6d ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004076de : ror byte ptr [rax - 0x7f], 1 ; ret 1
0x00000000004056ff : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000402ce7 : ror dword ptr [rdi], -0x61 ; ret 0xe280
0x0000000000406eca : sal dl, 1 ; addps xmm1, xmm2 ; movaps xmm0, xmm1 ; pop rbp ; ret
0x000000000040998d : sar bh, -1 ; mov eax, 0x98000009 ; ret
0x000000000040a899 : sar bh, cl ; jmp rax
0x000000000040166e : sar eax, 1 ; jne 0x401679 ; pop rbp ; ret
0x000000000040166d : sar rax, 1 ; jne 0x40167a ; pop rbp ; ret
0x0000000000403aa5 : scasb al, byte ptr [rdi] ; add dword ptr [rax], eax ; add al, ch ; ret 1
0x000000000040ab85 : sldt word ptr [rax] ; call 0x1140ab69
0x0000000000403d42 : stc ; sub eax, 0xf000000 ; xchg eax, esp ; ret 0xe280
0x0000000000407d88 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000406ed0 : sub cl, al ; pop rbp ; ret
0x0000000000403d43 : sub eax, 0xf000000 ; xchg eax, esp ; ret 0xe280
0x0000000000408281 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000408280 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040822a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000402f6f : test byte ptr [rdi], bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x4090
0x00000000004016a6 : wait ; and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000403bd2 : xchg eax, ebp ; ret 0x9588
0x00000000004064b7 : xchg eax, esi ; ret 0xe280
0x00000000004061c2 : xchg eax, esp ; ret 0xd284
0x0000000000403d48 : xchg eax, esp ; ret 0xe280
0x0000000000407aee : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000404596 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
