0x0000000000405f33 : adc al, -0x7f ; ret 0x76c
0x000000000041344d : adc al, 0 ; add byte ptr [rdx + rax*8 - 1], dl ; jmp rsp
0x0000000000405d85 : adc al, 0x2b ; test dword ptr [rax + 0x39fffff8], edx ; ret 0x8d0f
0x0000000000405dec : adc al, 0x2b ; test dword ptr [rax + 0x39fffff8], edx ; ret 0xf40
0x000000000041334d : adc byte ptr [rax], al ; add byte ptr [rsi + rsi*4 - 1], al ; jmp rsp
0x0000000000403a20 : adc dword ptr [rcx], eax ; jmp rcx
0x00000000004034b7 : adc eax, 0x48000000 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040d1f9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406406 : adc eax, dword ptr [rcx] ; jmp rcx
0x0000000000403242 : add al, 0x25 ; push 0x5d006153 ; ret
0x00000000004032eb : add al, ch ; jmp rbx
0x0000000000401c57 : add al, ch ; ret
0x00000000004127c7 : add al, dl ; ret
0x00000000004130d1 : add bh, bh ; jmp rsp
0x000000000040f91f : add bl, dh ; ret
0x000000000040aca9 : add byte ptr [r8], r8b ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000406db7 : add byte ptr [rax + 1], cl ; ret 0x8948
0x000000000040aba5 : add byte ptr [rax + rax], 0 ; pop rbp ; ret
0x0000000000402c51 : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x000000000040acc7 : add byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x00000000004055d6 : add byte ptr [rax - 0x75], cl ; jne 0x40558a ; call 0x4018b7
0x0000000000405612 : add byte ptr [rax - 0x75], cl ; jne 0x4055c6 ; call 0x4018b7
0x000000000040e388 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000040dbfd : add byte ptr [rax - 0x77], cl ; jge 0x40dc00 ; pop rbp ; ret
0x0000000000402360 : add byte ptr [rax - 0x77], cl ; ret 0x77e8
0x000000000040252c : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x00000000004032e9 : add byte ptr [rax], al ; add al, ch ; jmp rbx
0x0000000000401c55 : add byte ptr [rax], al ; add al, ch ; ret
0x00000000004127c5 : add byte ptr [rax], al ; add al, dl ; ret
0x000000000040f91d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000406db5 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000402c4f : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x000000000040acc5 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x00000000004055d4 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jne 0x40558c ; call 0x4018b9
0x0000000000405610 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jne 0x4055c8 ; call 0x4018b9
0x000000000040dbfb : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jge 0x40dc02 ; pop rbp ; ret
0x000000000040252a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x00000000004127c3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dl ; ret
0x000000000040f91b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000400710 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000400920 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x0000000000400712 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000400922 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x0000000000412783 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdx], ah ; ret 0x40
0x000000000040dbfa : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000406b54 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040acc4 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000409ab4 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040f91c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400714 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000400924 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x000000000040b8ad : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b71bb3], cl ; ret 0xb5e8
0x00000000004098ab : add byte ptr [rax], al ; add byte ptr [rcx], al ; pop rbp ; ret
0x000000000040acaa : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000040a6d8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xe280
0x0000000000402556 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040aff3 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x000000000040ada6 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000409d6c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000040afc6 : add byte ptr [rax], al ; add byte ptr [rdx + 0x4d88c44d], cl ; ret
0x0000000000412785 : add byte ptr [rax], al ; add byte ptr [rdx], ah ; ret 0x40
0x0000000000409ab0 : add byte ptr [rax], al ; add cl, ch ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000404382 : add byte ptr [rax], al ; add cl, ch ; ret
0x00000000004135f2 : add byte ptr [rax], al ; add dword ptr [rax], r8d ; add byte ptr [rax], bh ; idiv esi ; jmp qword ptr [rbx]
0x0000000000402d4b : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004034b9 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401693 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000413616 : add byte ptr [rax], al ; idiv rsi ; call qword ptr [rax]
0x00000000004017e9 : add byte ptr [rax], al ; jmp 0x4016a9
0x000000000040436c : add byte ptr [rax], al ; jmp 0x406555
0x000000000040699f : add byte ptr [rax], al ; mov eax, esi ; pop rbp ; ret
0x000000000040dbfc : add byte ptr [rax], al ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000040bda2 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000406b56 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040acc6 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004055d5 : add byte ptr [rax], al ; mov rsi, qword ptr [rbp - 0x58] ; call 0x4018b8
0x000000000041334e : add byte ptr [rax], al ; mov sil, -1 ; jmp rsp
0x0000000000413852 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add eax, dword ptr [rax] ; add byte ptr [rax], cl ; xor edi, edi ; call rcx
0x0000000000413a16 : add byte ptr [rax], al ; pop rax ; jns 0x413a1f ; call qword ptr [rax]
0x000000000040686e : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040e24b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040cf28 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000041344e : add byte ptr [rax], al ; push rsp ; ret 0xffff
0x000000000040f91e : add byte ptr [rax], al ; ret
0x0000000000400716 : add byte ptr [rax], al ; ret 0
0x0000000000400926 : add byte ptr [rax], al ; ret 2
0x000000000041314e : add byte ptr [rax], al ; xchg eax, esp ; push -1 ; jmp rsp
0x00000000004135f7 : add byte ptr [rax], bh ; idiv esi ; jmp qword ptr [rbx]
0x0000000000413857 : add byte ptr [rax], cl ; xor edi, edi ; call rcx
0x000000000040e24c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040cf29 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000041318f : add byte ptr [rbx + rax*4 - 1], al ; jmp rsp
0x0000000000402996 : add byte ptr [rbx - 0x1934b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040b8af : add byte ptr [rbx - 0x76b71bb3], cl ; ret 0xb5e8
0x000000000040391b : add byte ptr [rbx - 0xb36b], cl ; inc dword ptr [rcx] ; ret 0x9589
0x00000000004135f3 : add byte ptr [rcx + rax], al ; add byte ptr [rax], bh ; idiv esi ; jmp qword ptr [rbx]
0x00000000004098ad : add byte ptr [rcx], al ; pop rbp ; ret
0x0000000000401c08 : add byte ptr [rcx], al ; ret
0x000000000040acac : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000040a6da : add byte ptr [rdi], cl ; pushfq ; ret 0xe280
0x0000000000401c51 : add byte ptr [rdi], cl ; test byte ptr [rdx], cl ; add byte ptr [rax], al ; add al, ch ; ret
0x000000000040437e : add byte ptr [rdi], cl ; test byte ptr [rip - 0x17000000], al ; ret
0x0000000000405a7e : add byte ptr [rdi], cl ; test dword ptr [rip - 0x17000000], eax ; ret
0x0000000000402558 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040aff5 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x000000000040ada8 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000409d6e : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000040afc8 : add byte ptr [rdx + 0x4d88c44d], cl ; ret
0x000000000041344f : add byte ptr [rdx + rax*8 - 1], dl ; jmp rsp
0x0000000000412787 : add byte ptr [rdx], ah ; ret 0x40
0x000000000041334f : add byte ptr [rsi + rsi*4 - 1], al ; jmp rsp
0x000000000041330f : add byte ptr [rsp + rbp*4 - 1], al ; jmp rsp
0x000000000040aff2 : add byte ptr cs:[rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x0000000000402c4e : add byte ptr ds:[rax], al ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x0000000000409ab2 : add cl, ch ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000404384 : add cl, ch ; ret
0x0000000000404372 : add cl, ch ; ret 0xfffb
0x0000000000408e88 : add dword ptr [rax + 1], ecx ; ret 0x8948
0x000000000040d1b8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040699d : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, esi ; pop rbp ; ret
0x00000000004135f5 : add dword ptr [rax], eax ; add byte ptr [rax], bh ; idiv esi ; jmp qword ptr [rbx]
0x000000000040e24a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040cf27 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004135f4 : add dword ptr [rax], r8d ; add byte ptr [rax], bh ; idiv esi ; jmp qword ptr [rbx]
0x000000000040aef1 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402c0b : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000402d22 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040ecca : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401c04 : add eax, 0x21374e ; add ebx, esi ; ret
0x000000000040633d : add eax, 0x6348ca01 ; ret 0x6948
0x0000000000404381 : add eax, 0xe9000000 ; ret
0x0000000000413855 : add eax, dword ptr [rax] ; add byte ptr [rax], cl ; xor edi, edi ; call rcx
0x000000000040afef : add eax, dword ptr [rcx + 0x2ef9] ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x0000000000401bcb : add eax, edx ; sar rax, 1 ; jne 0x401bdc ; pop rbp ; ret
0x0000000000401c09 : add ebx, esi ; ret
0x0000000000401f5b : add esp, 0x10 ; pop rbp ; ret
0x000000000040f89c : add esp, 0x130 ; pop rbp ; ret
0x000000000040cf24 : add esp, 0x138 ; pop rbx ; pop rbp ; ret
0x000000000040e53c : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000403470 : add esp, 0x20 ; pop rbp ; ret
0x000000000040206d : add esp, 0x30 ; pop rbp ; ret
0x0000000000402f6f : add esp, 0x40 ; pop rbp ; ret
0x000000000040aba3 : add esp, 0x480 ; pop rbp ; ret
0x0000000000402ebd : add esp, 0x50 ; pop rbp ; ret
0x0000000000402c10 : add esp, 0x60 ; pop rbp ; ret
0x0000000000402d27 : add esp, 0x70 ; pop rbp ; ret
0x000000000040d0de : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040d4ad : add esp, 0x90 ; pop rbp ; ret
0x0000000000409651 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040686a : add esp, 0xa40 ; pop rbp ; ret
0x0000000000408f29 : add esp, 0xc10 ; pop rbp ; ret
0x000000000040b6a8 : add esp, 0xf0 ; pop rbp ; ret
0x0000000000401696 : add esp, 8 ; ret
0x0000000000401bca : add rax, rdx ; sar rax, 1 ; jne 0x401bdd ; pop rbp ; ret
0x0000000000401f5a : add rsp, 0x10 ; pop rbp ; ret
0x000000000040f89b : add rsp, 0x130 ; pop rbp ; ret
0x000000000040cf23 : add rsp, 0x138 ; pop rbx ; pop rbp ; ret
0x000000000040e53b : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000040346f : add rsp, 0x20 ; pop rbp ; ret
0x000000000040206c : add rsp, 0x30 ; pop rbp ; ret
0x0000000000402f6e : add rsp, 0x40 ; pop rbp ; ret
0x000000000040aba2 : add rsp, 0x480 ; pop rbp ; ret
0x0000000000402ebc : add rsp, 0x50 ; pop rbp ; ret
0x0000000000402c0f : add rsp, 0x60 ; pop rbp ; ret
0x0000000000402d26 : add rsp, 0x70 ; pop rbp ; ret
0x000000000040d0dd : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040d4ac : add rsp, 0x90 ; pop rbp ; ret
0x0000000000409650 : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000406869 : add rsp, 0xa40 ; pop rbp ; ret
0x0000000000408f28 : add rsp, 0xc10 ; pop rbp ; ret
0x000000000040b6a7 : add rsp, 0xf0 ; pop rbp ; ret
0x0000000000401695 : add rsp, 8 ; ret
0x000000000040ecc9 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000404370 : and dword ptr [rax], eax ; add cl, ch ; ret 0xfffb
0x0000000000401c07 : and dword ptr [rax], eax ; add ebx, esi ; ret
0x000000000040d4e7 : and eax, 0x48fffffd ; add esp, 0x20 ; pop rbp ; ret
0x000000000040321f : and eax, 0x615360 ; pop rbp ; ret
0x0000000000403243 : and eax, 0x615368 ; pop rbp ; ret
0x0000000000406330 : call 0x202ec58
0x0000000000406374 : call 0x202ec9c
0x00000000004063bd : call 0x202ece5
0x00000000004055db : call 0x4018b2
0x00000000004056d4 : call 0x401962
0x0000000000406b12 : call 0x4902f462
0x0000000000406b11 : call 0x4902f463
0x0000000000406b12 : call 0x4902f465
0x0000000000406b11 : call 0x4902f466
0x000000000040cf59 : call 0xffffffffe90358a9
0x000000000040cf58 : call 0xffffffffe90358aa
0x0000000000401ba3 : call 0xffffffffff407cfe
0x0000000000401be3 : call 0xffffffffff407d3e
0x0000000000406405 : call 0xffffffffff40a521
0x000000000040f8f9 : call qword ptr [r12 + rbx*8]
0x00000000004064b9 : call qword ptr [rax]
0x00000000004122ff : call qword ptr [rbx]
0x0000000000413f3b : call qword ptr [rdx]
0x00000000004136db : call qword ptr [rsi]
0x000000000040f8fa : call qword ptr [rsp + rbx*8]
0x0000000000401c2d : call rax
0x000000000041385b : call rcx
0x00000000004121ff : call rdx
0x000000000041220f : call rsi
0x000000000040aca8 : clc ; add byte ptr [r8], r8b ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000040f89a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x000000000040b4b4 : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403209 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403164 : clc ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000402ebb : clc ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000406868 : clc ; add rsp, 0xa40 ; pop rbp ; ret
0x0000000000401bcf : clc ; jne 0x401bd8 ; pop rbp ; ret
0x00000000004098a7 : clc ; mov byte ptr [rax + 0xa9], 1 ; pop rbp ; ret
0x000000000040b376 : clc ; mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x000000000040bee5 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040f09b : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000409acc : clc ; mov qword ptr [rbp - 0x10], rsi ; pop rbp ; ret
0x00000000004096a3 : clc ; mov qword ptr [rdx + 0x68], rcx ; pop rbp ; ret
0x0000000000402a17 : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040db9b : clc ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000040dbdb : clc ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000040dbbb : clc ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000402a1b : clc ; pop rbp ; ret
0x0000000000401f87 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040ea99 : cld ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040db81 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040bbb3 : cld ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040ba5a : cld ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040964f : cld ; add rsp, 0xa0 ; pop rbp ; ret
0x000000000040f098 : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040eaf3 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040ea96 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040db7e : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040ae24 : cld ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040ae27 : cld ; pop rbp ; ret
0x000000000040633c : cli ; add eax, 0x6348ca01 ; ret 0x6948
0x0000000000402c54 : cmp al, 0x25 ; ret
0x000000000040cf26 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000401b8d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401ba0 ; pop rbp ; ret
0x0000000000413111 : cmp edi, edi ; jmp rsp
0x000000000040dd8c : cwde ; mov rcx, qword ptr [rax*8 + 0x412c88] ; jmp rcx
0x000000000040a88f : dec byte ptr [rax - 0x7f] ; ret 0xca00
0x000000000040a99c : dec dword ptr [rax + 9] ; ret 0x8b48
0x0000000000406400 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; call 0xffffffffff40a526
0x000000000040c3c5 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; enter 0x4127, 0 ; jmp rcx
0x0000000000406244 : dec dword ptr [rax - 0x75] ; test al, -0x18 ; ret 0xffb8
0x0000000000407857 : dec dword ptr [rax - 0x77] ; ret 0x2b48
0x000000000040299c : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040f7ff : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000040a88c : dec dword ptr [rax - 9] ; dec byte ptr [rax - 0x7f] ; ret 0xca00
0x000000000040a803 : dec dword ptr [rdi] ; pushfq ; ret 0xe280
0x000000000040d00b : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000040c3ca : enter 0x4127, 0 ; jmp rcx
0x000000000040c943 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040f8fc : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000401f59 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401ba0 : hlt ; pop rbp ; mov edi, 0x6152e8 ; jmp rax
0x0000000000413619 : idiv esi ; call qword ptr [rax]
0x00000000004135f9 : idiv esi ; jmp qword ptr [rbx]
0x0000000000413618 : idiv rsi ; call qword ptr [rax]
0x0000000000406a0c : in al, 0x48 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040ab51 : inc dword ptr [rax - 0x49f0fe1f] ; shl dword ptr [rcx], 1 ; ret 0xfa81
0x000000000040a6d6 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xe280
0x0000000000408537 : inc dword ptr [rcx] ; add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000403921 : inc dword ptr [rcx] ; ret 0x9589
0x000000000041344b : inc esp ; adc al, 0 ; add byte ptr [rdx + rax*8 - 1], dl ; jmp rsp
0x000000000041334b : inc esp ; adc byte ptr [rax], al ; add byte ptr [rsi + rsi*4 - 1], al ; jmp rsp
0x000000000041318b : inc esp ; or dword ptr [rax], eax ; add byte ptr [rbx + rax*4 - 1], al ; jmp rsp
0x000000000040e390 : int 0x80
0x0000000000401b93 : ja 0x401b9a ; pop rbp ; ret
0x0000000000401b9f : je 0x401b9d ; pop rbp ; mov edi, 0x6152e8 ; jmp rax
0x0000000000402a16 : jge 0x402a17 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000409acb : jge 0x409acc ; mov qword ptr [rbp - 0x10], rsi ; pop rbp ; ret
0x000000000040aca7 : jge 0x40aca9 ; add byte ptr [r8], r8b ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000040db9a : jge 0x40db9b ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000040dbba : jge 0x40dbbb ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000040dbda : jge 0x40dbdb ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000040dc00 : jge 0x40dbfd ; pop rbp ; ret
0x00000000004017eb : jmp 0x4016a7
0x00000000004032e7 : jmp 0x403311
0x000000000040436e : jmp 0x406553
0x0000000000413dbb : jmp qword ptr [rax]
0x00000000004135fb : jmp qword ptr [rbx]
0x0000000000413c9b : jmp qword ptr [rdx]
0x0000000000401ba7 : jmp rax
0x00000000004032ed : jmp rbx
0x0000000000403a23 : jmp rcx
0x000000000041225f : jmp rdi
0x0000000000401be7 : jmp rdx
0x0000000000411f8f : jmp rsi
0x0000000000413053 : jmp rsp
0x0000000000401bd0 : jne 0x401bd7 ; pop rbp ; ret
0x00000000004055d9 : jne 0x405587 ; call 0x4018b4
0x0000000000405615 : jne 0x4055c3 ; call 0x4018b4
0x0000000000409acf : jne 0x409ac4 ; pop rbp ; ret
0x0000000000413a19 : jns 0x413a1c ; call qword ptr [rax]
0x0000000000402d29 : jo 0x402d8a ; ret
0x000000000040ba5e : jo 0x40babf ; ret
0x000000000040c035 : jo 0x40c096 ; ret
0x000000000040d744 : jo 0x40d7a5 ; ret
0x000000000040d87e : jo 0x40d8df ; ret
0x000000000040dbbf : jo 0x40dc20 ; ret
0x000000000040dbbe : jo 0x40dc21 ; ret
0x000000000040d0e0 : js 0x40d140 ; pop rbp ; ret
0x0000000000402554 : loopne 0x40255d ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000402566 : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004030cd : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040d4ab : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x000000000040ecc6 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004145d1 : mov bl, -1 ; call qword ptr [rax]
0x0000000000403241 : mov byte ptr [0x615368], al ; pop rbp ; ret
0x00000000004098a8 : mov byte ptr [rax + 0xa9], 1 ; pop rbp ; ret
0x000000000040632d : mov byte ptr [rax - 0x3f], cl ; call 0x202ec5b
0x0000000000406371 : mov byte ptr [rax - 0x3f], cl ; call 0x202ec9f
0x00000000004063ba : mov byte ptr [rax - 0x3f], cl ; call 0x202ece8
0x000000000040b377 : mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000401c03 : mov byte ptr [rip + 0x21374e], 1 ; ret
0x000000000040aef3 : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402c0d : mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000402d24 : mov dh, -0x40 ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040eccc : mov dh, -0x40 ; pop rbp ; ret
0x0000000000413351 : mov dh, -1 ; jmp rsp
0x000000000040321d : mov dword ptr [0x615360], edi ; pop rbp ; ret
0x000000000040bee6 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040632a : mov dword ptr [rax - 0x3eb77778], ecx ; call 0x202ec5e
0x000000000040636e : mov dword ptr [rax - 0x3eb77778], ecx ; call 0x202eca2
0x00000000004063b7 : mov dword ptr [rax - 0x3eb77778], ecx ; call 0x202eceb
0x000000000040bdf4 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040bea8 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000409ace : mov dword ptr [rbp - 0x10], esi ; pop rbp ; ret
0x0000000000406a0a : mov dword ptr [rbp - 0x1c], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402069 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004030cb : mov dword ptr [rbp - 0x50], eax ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004056ce : mov dword ptr [rbp - 0x970], eax ; call 0x401968
0x0000000000401f57 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401f85 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040ae22 : mov dword ptr [rbp - 4], ecx ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040f099 : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000409aca : mov dword ptr [rbp - 8], edi ; mov qword ptr [rbp - 0x10], rsi ; pop rbp ; ret
0x0000000000402a15 : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040dbff : mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x000000000040bf5e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004096a5 : mov dword ptr [rdx + 0x68], ecx ; pop rbp ; ret
0x000000000040d0dc : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x000000000040bda8 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040e65b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040346c : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040ac3e : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040bda5 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040dc21 : mov eax, dword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004033ef : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040e8f3 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040bd5d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004097c6 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040bdee : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000406b59 : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040beaa : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040c02f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040d0da : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040d619 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040eaf4 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040ea97 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040db7f : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040bbb1 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040ba58 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040ae25 : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040b4b2 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403207 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403162 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000402eb9 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000402a19 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040db9d : mov eax, dword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000040dbdd : mov eax, dword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000040dbbd : mov eax, dword ptr [rdi + 0x70] ; pop rbp ; ret
0x00000000004069a1 : mov eax, esi ; pop rbp ; ret
0x0000000000401c2b : mov ebp, esp ; call rax
0x0000000000401b91 : mov ebp, esp ; ja 0x401b9c ; pop rbp ; ret
0x0000000000401691 : mov ebx, 0x48000002 ; add esp, 8 ; ret
0x0000000000403a1c : mov ecx, dword ptr [rax*8 + 0x411138] ; jmp rcx
0x0000000000406402 : mov ecx, dword ptr [rax*8 + 0x4113e8] ; jmp rcx
0x000000000040714e : mov ecx, dword ptr [rax*8 + 0x411430] ; jmp rcx
0x000000000040c0e7 : mov ecx, dword ptr [rax*8 + 0x412780] ; jmp rcx
0x000000000040c3c7 : mov ecx, dword ptr [rax*8 + 0x4127c8] ; jmp rcx
0x000000000040dd8e : mov ecx, dword ptr [rax*8 + 0x412c88] ; jmp rcx
0x000000000040bdf1 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040ae20 : mov ecx, eax ; mov dword ptr [rbp - 4], ecx ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040652f : mov ecx, gs ; ret
0x0000000000401c25 : mov edi, 0x614e20 ; mov rbp, rsp ; call rax
0x0000000000401ba2 : mov edi, 0x6152e8 ; jmp rax
0x0000000000401be2 : mov edi, 0x6152e8 ; jmp rdx
0x000000000040db99 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000040dbd9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000040dbb9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000040f8f7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000040f8f6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x00000000004096a1 : mov edx, dword ptr [rbp - 8] ; mov qword ptr [rdx + 0x68], rcx ; pop rbp ; ret
0x000000000040dc25 : mov edx, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004055d8 : mov esi, dword ptr [rbp - 0x58] ; call 0x4018b5
0x0000000000401be0 : mov esi, eax ; mov edi, 0x6152e8 ; jmp rdx
0x000000000040321c : mov qword ptr [0x615360], rdi ; pop rbp ; ret
0x0000000000409acd : mov qword ptr [rbp - 0x10], rsi ; pop rbp ; ret
0x00000000004056cd : mov qword ptr [rbp - 0x970], rax ; call 0x401969
0x0000000000409ac9 : mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; pop rbp ; ret
0x0000000000402a14 : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040dbfe : mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000040bf5d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004096a4 : mov qword ptr [rdx + 0x68], rcx ; pop rbp ; ret
0x00000000004030cc : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040d0db : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x000000000040652e : mov r9, gs ; ret
0x000000000040e65a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040346b : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040ac3d : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040bda4 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040dc20 : mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004033ee : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040e8f2 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040bd5c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004097c5 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000406b58 : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040c02e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040d618 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040b4b1 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403206 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403161 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000402eb8 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000402a18 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040db9c : mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000040dbdc : mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000040dbbc : mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000401c2a : mov rbp, rsp ; call rax
0x0000000000401b90 : mov rbp, rsp ; ja 0x401b9d ; pop rbp ; ret
0x0000000000403a1b : mov rcx, qword ptr [rax*8 + 0x411138] ; jmp rcx
0x0000000000406401 : mov rcx, qword ptr [rax*8 + 0x4113e8] ; jmp rcx
0x000000000040714d : mov rcx, qword ptr [rax*8 + 0x411430] ; jmp rcx
0x000000000040c0e6 : mov rcx, qword ptr [rax*8 + 0x412780] ; jmp rcx
0x000000000040c3c6 : mov rcx, qword ptr [rax*8 + 0x4127c8] ; jmp rcx
0x000000000040dd8d : mov rcx, qword ptr [rax*8 + 0x412c88] ; jmp rcx
0x000000000040db98 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000040dbd8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000040dbb8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x00000000004096a0 : mov rdx, qword ptr [rbp - 8] ; mov qword ptr [rdx + 0x68], rcx ; pop rbp ; ret
0x000000000040dc24 : mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004055d7 : mov rsi, qword ptr [rbp - 0x58] ; call 0x4018b6
0x0000000000401bdf : mov rsi, rax ; mov edi, 0x6152e8 ; jmp rdx
0x0000000000413350 : mov sil, -1 ; jmp rsp
0x000000000040a27c : movabs al, byte ptr [0x89fffffe90858b48] ; ret 0x5589
0x0000000000413854 : movsb byte ptr [rdi], byte ptr [rsi] ; add eax, dword ptr [rax] ; add byte ptr [rax], cl ; xor edi, edi ; call rcx
0x000000000040aef2 : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402c0c : movzx eax, al ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000402d23 : movzx eax, al ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040eccb : movzx eax, al ; pop rbp ; ret
0x000000000040b37a : movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x000000000040f918 : nop dword ptr [rax + rax] ; ret
0x0000000000406403 : or al, 0xffffffffffffffc5 ; call 0xffffffffff40a523
0x000000000040c3c8 : or al, 0xffffffffffffffc5 ; enter 0x4127, 0 ; jmp rcx
0x000000000040c93e : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040c93f : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000409d68 : or byte ptr [rcx + 0x5cf9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000041318d : or dword ptr [rax], eax ; add byte ptr [rbx + rax*4 - 1], al ; jmp rsp
0x000000000040d801 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040699c : out dx, al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, esi ; pop rbp ; ret
0x000000000040f90c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040f90e : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040e24e : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040f910 : pop r14 ; pop r15 ; ret
0x000000000040e250 : pop r15 ; pop rbp ; ret
0x000000000040f912 : pop r15 ; ret
0x0000000000413a18 : pop rax ; jns 0x413a1d ; call qword ptr [rax]
0x0000000000401c02 : pop rbp ; mov byte ptr [rip + 0x21374e], 1 ; ret
0x0000000000401ba1 : pop rbp ; mov edi, 0x6152e8 ; jmp rax
0x0000000000401bde : pop rbp ; mov rsi, rax ; mov edi, 0x6152e8 ; jmp rdx
0x000000000040f90b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040f90f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401b95 : pop rbp ; ret
0x000000000040e24d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040cf2a : pop rbx ; pop rbp ; ret
0x000000000040e251 : pop rdi ; pop rbp ; ret
0x000000000040f913 : pop rdi ; ret
0x000000000040e24f : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040f911 : pop rsi ; pop r15 ; ret
0x0000000000409d6b : pop rsp ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000040f90d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000413151 : push -1 ; jmp rsp
0x0000000000403244 : push 0x5d006153 ; ret
0x000000000040db9e : push r8 ; pop rbp ; ret
0x0000000000405f32 : push rax ; adc al, -0x7f ; ret 0x76c
0x0000000000402ebf : push rax ; pop rbp ; ret
0x0000000000405327 : push rax ; sbb al, -0x7f ; ret 1
0x00000000004096a2 : push rbp ; clc ; mov qword ptr [rdx + 0x68], rcx ; pop rbp ; ret
0x000000000040dc26 : push rbp ; clc ; pop rbp ; ret
0x000000000040c942 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000401c24 : push rbp ; mov edi, 0x614e20 ; mov rbp, rsp ; call rax
0x000000000040affa : push rbp ; ret 0x458a
0x0000000000402f35 : push rbp ; ror byte ptr [rax - 0x77], 1 ; ret 0x21e8
0x000000000040f48d : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000040d00e : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000405d84 : push rcx ; adc al, 0x2b ; test dword ptr [rax + 0x39fffff8], edx ; ret 0x8d0f
0x0000000000405deb : push rcx ; adc al, 0x2b ; test dword ptr [rax + 0x39fffff8], edx ; ret 0xf40
0x0000000000413450 : push rsp ; ret 0xffff
0x000000000040acae : pushfq ; ret 0xd284
0x00000000004074c4 : pushfq ; ret 0xe280
0x0000000000401699 : ret
0x0000000000400718 : ret 0
0x000000000040a4ae : ret 0x14c
0x00000000004019f2 : ret 0x2137
0x00000000004017f2 : ret 0x2138
0x0000000000402f39 : ret 0x21e8
0x000000000040785a : ret 0x2b48
0x00000000004044e4 : ret 0x30
0x0000000000412781 : ret 0x40
0x000000000040affe : ret 0x4588
0x000000000040affb : ret 0x458a
0x000000000040aff8 : ret 0x5588
0x000000000040a267 : ret 0x5589
0x0000000000406342 : ret 0x6948
0x0000000000405f35 : ret 0x76c
0x0000000000402363 : ret 0x77e8
0x0000000000406b15 : ret 0x8148
0x000000000040afe1 : ret 0x850f
0x000000000040dd49 : ret 0x8844
0x0000000000406dba : ret 0x8948
0x000000000040ca6d : ret 0x89a5
0x0000000000406d9f : ret 0x8b48
0x0000000000405d8d : ret 0x8d0f
0x0000000000403923 : ret 0x9589
0x000000000040252f : ret 0xb0
0x000000000040b8b5 : ret 0xb5e8
0x000000000040c95b : ret 0xbfe8
0x0000000000401bc5 : ret 0xc148
0x000000000040a892 : ret 0xca00
0x0000000000406333 : ret 0xca01
0x000000000040255b : ret 0xd284
0x00000000004074c5 : ret 0xe280
0x000000000040cf5c : ret 0xee8
0x0000000000405df4 : ret 0xf40
0x000000000040ab59 : ret 0xfa81
0x000000000040624a : ret 0xffb8
0x0000000000404374 : ret 0xfffb
0x0000000000406c5c : ret 0xfffe
0x00000000004055dd : ret 0xffff
0x00000000004026f8 : ret 1
0x0000000000400928 : ret 2
0x0000000000405a04 : ret 7
0x000000000040d012 : ret 8
0x00000000004127c1 : rol dword ptr [rax], 0 ; add byte ptr [rax], al ; add al, dl ; ret
0x000000000040e38b : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000040c030 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x40c09b ; ret
0x0000000000401bcc : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401bdb ; pop rbp ; ret
0x000000000040e38c : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000402f36 : ror byte ptr [rax - 0x77], 1 ; ret 0x21e8
0x0000000000407266 : ror byte ptr [rax - 0x77], 1 ; ret 0x8948
0x0000000000402d25 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x402d8e ; ret
0x000000000040c031 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x40c09a ; ret
0x000000000040aba1 : ror byte ptr [rax - 0x7f], -0x3c ; add byte ptr [rax + rax], 0 ; pop rbp ; ret
0x000000000040f48e : ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000040d00f : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000040ae21 : ror dword ptr [rcx + 0x458bfc4d], -4 ; pop rbp ; ret
0x0000000000401b9e : sal byte ptr [rsp + rsi*8 + 0x5d], -0x41 ; call 0xffffffffff407d03
0x0000000000401bce : sar eax, 1 ; jne 0x401bd9 ; pop rbp ; ret
0x0000000000401bcd : sar rax, 1 ; jne 0x401bda ; pop rbp ; ret
0x0000000000405328 : sbb al, -0x7f ; ret 1
0x000000000040ab57 : shl dword ptr [rcx], 1 ; ret 0xfa81
0x000000000040aff1 : stc ; add byte ptr cs:[rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x0000000000409d6a : stc ; pop rsp ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000040ecc8 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004098a9 : sub byte ptr [rcx + 0x1000000], 0x5d ; ret
0x000000000040699b : sub esi, 1 ; mov eax, esi ; pop rbp ; ret
0x000000000040f961 : sub esp, 8 ; add rsp, 8 ; ret
0x000000000040f960 : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000406248 : test al, -0x18 ; ret 0xffb8
0x0000000000405616 : test al, -0x18 ; xchg eax, esp ; ret 0xffff
0x000000000040257a : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040f91a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000401c53 : test byte ptr [rdx], cl ; add byte ptr [rax], al ; add al, ch ; ret
0x0000000000404380 : test byte ptr [rip - 0x17000000], al ; ret
0x0000000000405d87 : test dword ptr [rax + 0x39fffff8], edx ; ret 0x8d0f
0x0000000000405dee : test dword ptr [rax + 0x39fffff8], edx ; ret 0xf40
0x000000000040a27f : test dword ptr [rax - 0x76000002], edx ; ret 0x5589
0x0000000000405a80 : test dword ptr [rip - 0x17000000], eax ; ret
0x0000000000402c4d : test dword ptr [rsi], edi ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x000000000040a4bb : test dword ptr [rsp + rdi*8 - 0x76b70001], ebp ; ret 0xb0
0x00000000004098aa : test eax, 0x1000000 ; pop rbp ; ret
0x0000000000407150 : vunpcklps xmm8, xmm9, xmmword ptr [rcx] ; jmp rcx
0x000000000040255a : xchg eax, ebp ; ret 0xd284
0x0000000000413150 : xchg eax, esp ; push -1 ; jmp rsp
0x000000000040aff7 : xchg eax, esp ; ret 0x5588
0x000000000040adaa : xchg eax, esp ; ret 0xd284
0x0000000000409d70 : xchg eax, esp ; ret 0xe280
0x0000000000405618 : xchg eax, esp ; ret 0xffff
0x000000000040f89e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000413859 : xor edi, edi ; call rcx
0x000000000040bea6 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
