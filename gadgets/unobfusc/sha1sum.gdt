0x0000000000403739 : adc al, dh ; loope 0x403713 ; ret
0x0000000000405db0 : adc byte ptr [rcx], al ; ret 0x5189
0x0000000000405d66 : adc dword ptr [rcx], eax ; ret 0x1189
0x000000000040851b : adc dword ptr [rsi], ecx ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407c09 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403738 : adc r8b, r14b ; loope 0x403714 ; ret
0x0000000000401d82 : add al, 0x25 ; ret
0x0000000000401d2f : add al, 0x25 ; ret 0x60d2
0x0000000000405d77 : add al, 1 ; ret 0x5189
0x0000000000401ed6 : add al, bpl ; ret
0x000000000040bfcd : add al, byte ptr [rax] ; add al, dh ; jne 0x40bfd8 ; call qword ptr [rsi]
0x0000000000401ed7 : add al, ch ; ret
0x0000000000401f78 : add al, ch ; ret 0xfff8
0x000000000040bfcf : add al, dh ; jne 0x40bfd6 ; call qword ptr [rsi]
0x000000000040c32f : add al, dl ; mov bh, -1 ; call rdx
0x000000000040a56f : add bl, dh ; ret
0x000000000040281f : add byte ptr [r8], r8b ; add dh, dh ; add al, 0x25 ; ret 0x60d2
0x0000000000402b0b : add byte ptr [rax + 0x2504f601], dh ; ret
0x00000000004061e8 : add byte ptr [rax + 1], cl ; ret 0x8b48
0x000000000040bde3 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; mov byte ptr [rbp - 1], dl ; jmp rax
0x00000000004025f6 : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x40ad
0x00000000004038b2 : add byte ptr [rax - 0x75], cl ; push rbp ; call 0x1102ba0a
0x0000000000406253 : add byte ptr [rax - 0x75], cl ; push rbp ; call 0x2102e3ab
0x0000000000403814 : add byte ptr [rax - 0x75], cl ; push rbp ; call 0x902b96c
0x0000000000403863 : add byte ptr [rax - 0x75], cl ; push rbp ; call 0xd02b9bb
0x0000000000408c18 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000402a92 : add byte ptr [rax - 0x77], cl ; ret 0x65e8
0x0000000000402a3e : add byte ptr [rax - 0x77], cl ; ret 0xb9e8
0x00000000004029ea : add byte ptr [rax - 0x77], cl ; ret 0xde8
0x000000000040625e : add byte ptr [rax - 0x7f], cl ; ret 0x40
0x000000000040bb73 : add byte ptr [rax], ah ; ret 0xffff
0x0000000000401f76 : add byte ptr [rax], al ; add al, ch ; ret 0xfff8
0x000000000040a56d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000402b09 : add byte ptr [rax], al ; add byte ptr [rax + 0x2504f601], dh ; ret
0x00000000004061e6 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8b48
0x00000000004025f4 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x40ad
0x00000000004038b0 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbp ; call 0x1102ba0c
0x0000000000406251 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbp ; call 0x2102e3ad
0x0000000000403812 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbp ; call 0x902b96e
0x0000000000403861 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbp ; call 0xd02b9bd
0x000000000040625c : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x40
0x000000000040a56b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040375b : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040a56c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000403bde : add byte ptr [rax], al ; add byte ptr [rcx - 0x8f43], al ; call qword ptr [rax]
0x000000000040224a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004030fd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x00000000004084de : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004023f3 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000401d7e : add byte ptr [rax], al ; add dh, al ; add al, 0x25 ; ret
0x0000000000402820 : add byte ptr [rax], al ; add dh, dh ; add al, 0x25 ; ret 0x60d2
0x0000000000407bca : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407970 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040135b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000401519 : add byte ptr [rax], al ; jmp 0x401379
0x000000000040bde6 : add byte ptr [rax], al ; mov byte ptr [rbp - 1], dl ; jmp rax
0x00000000004067b2 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000402b57 : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000408adb : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000407938 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040a56e : add byte ptr [rax], al ; ret
0x000000000040bde2 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov byte ptr [rbp - 1], dl ; jmp rax
0x000000000040c32b : add byte ptr [rbp + rax], ah ; add al, dl ; mov bh, -1 ; call rdx
0x0000000000408adc : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000407939 : add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004022ee : add byte ptr [rbx - 0xf34b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000403be0 : add byte ptr [rcx - 0x8f43], al ; call qword ptr [rax]
0x0000000000401808 : add byte ptr [rcx], al ; ret
0x000000000040224c : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004030ff : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x00000000004084e0 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004023f5 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x00000000004025f3 : add byte ptr ds:[rax], al ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x40ad
0x0000000000401d80 : add dh, al ; add al, 0x25 ; ret
0x0000000000401d2d : add dh, al ; add al, 0x25 ; ret 0x60d2
0x0000000000402822 : add dh, dh ; add al, 0x25 ; ret 0x60d2
0x0000000000407bc8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408ada : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000407937 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004031b7 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402cc4 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000403116 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040a0ca : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401804 : add eax, 0x20baae ; add ebx, esi ; ret
0x00000000004017cb : add eax, edx ; sar rax, 1 ; jne 0x4017dc ; pop rbp ; ret
0x0000000000401809 : add ebx, esi ; ret
0x0000000000401d7b : add ecx, ebp ; wait ; add byte ptr [rax], al ; add dh, al ; add al, 0x25 ; ret
0x0000000000401d56 : add esi, eax ; add al, 0x25 ; ret 0x60d2
0x0000000000402370 : add esi, eax ; mov rax, rsi ; pop rbp ; ret
0x0000000000402b0d : add esi, esi ; add al, 0x25 ; ret
0x00000000004019eb : add esp, 0x10 ; pop rbp ; ret
0x0000000000402b53 : add esp, 0x120 ; pop rbp ; ret
0x000000000040a08c : add esp, 0x130 ; pop rbp ; ret
0x0000000000407934 : add esp, 0x138 ; pop rbx ; pop rbp ; ret
0x0000000000408dcc : add esp, 0x1a0 ; pop rbp ; ret
0x00000000004096de : add esp, 0x1e0 ; pop rbp ; ret
0x00000000004031bc : add esp, 0x20 ; pop rbp ; ret
0x0000000000401acd : add esp, 0x30 ; pop rbp ; ret
0x0000000000402cc9 : add esp, 0x40 ; pop rbp ; ret
0x000000000040628b : add esp, 0x50 ; pop rbp ; ret
0x000000000040311b : add esp, 0x60 ; pop rbp ; ret
0x0000000000406a43 : add esp, 0x70 ; pop rbp ; ret
0x0000000000407aee : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000407ebd : add esp, 0x90 ; pop rbp ; ret
0x0000000000408c64 : add esp, 0xa0 ; pop rbp ; ret
0x00000000004062db : add esp, 0xc0 ; pop rbp ; ret
0x0000000000405f86 : add esp, 0xe0 ; pop rbp ; ret
0x000000000040135e : add esp, 8 ; ret
0x00000000004017ca : add rax, rdx ; sar rax, 1 ; jne 0x4017dd ; pop rbp ; ret
0x000000000040236f : add rsi, rax ; mov rax, rsi ; pop rbp ; ret
0x00000000004019ea : add rsp, 0x10 ; pop rbp ; ret
0x0000000000402b52 : add rsp, 0x120 ; pop rbp ; ret
0x000000000040a08b : add rsp, 0x130 ; pop rbp ; ret
0x0000000000407933 : add rsp, 0x138 ; pop rbx ; pop rbp ; ret
0x0000000000408dcb : add rsp, 0x1a0 ; pop rbp ; ret
0x00000000004096dd : add rsp, 0x1e0 ; pop rbp ; ret
0x00000000004031bb : add rsp, 0x20 ; pop rbp ; ret
0x0000000000401acc : add rsp, 0x30 ; pop rbp ; ret
0x0000000000402cc8 : add rsp, 0x40 ; pop rbp ; ret
0x000000000040628a : add rsp, 0x50 ; pop rbp ; ret
0x000000000040311a : add rsp, 0x60 ; pop rbp ; ret
0x0000000000406a42 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000407aed : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000407ebc : add rsp, 0x90 ; pop rbp ; ret
0x0000000000408c63 : add rsp, 0xa0 ; pop rbp ; ret
0x00000000004062da : add rsp, 0xc0 ; pop rbp ; ret
0x0000000000405f85 : add rsp, 0xe0 ; pop rbp ; ret
0x000000000040135d : add rsp, 8 ; ret
0x000000000040a0c9 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401807 : and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000402b55 : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000407ef7 : and eax, 0x48fffffd ; add esp, 0x20 ; pop rbp ; ret
0x0000000000401d28 : and eax, 0x60d2c1 ; add dh, al ; add al, 0x25 ; ret 0x60d2
0x0000000000401d51 : and eax, 0x60d2c1 ; add esi, eax ; add al, 0x25 ; ret 0x60d2
0x00000000004035cf : and eax, 0x60d2e0 ; pop rbp ; ret
0x00000000004035f3 : and eax, 0x60d2e8 ; pop rbp ; ret
0x00000000004038b6 : call 0x1102ba06
0x00000000004060a3 : call 0x2102e1f3
0x00000000004061e1 : call 0x2102e331
0x0000000000406257 : call 0x2102e3a7
0x0000000000401fbb : call 0x401848
0x000000000040320d : call 0x49322960
0x000000000040320c : call 0x49322961
0x0000000000403818 : call 0x902b968
0x0000000000403867 : call 0xd02b9b7
0x0000000000407969 : call 0xffffffffe90302b9
0x0000000000407968 : call 0xffffffffe90302ba
0x000000000040a549 : call qword ptr [r12 + rbx*8]
0x0000000000403be6 : call qword ptr [rax]
0x000000000040bfd3 : call qword ptr [rsi]
0x000000000040a54a : call qword ptr [rsp + rbx*8]
0x000000000040182d : call rax
0x000000000040c333 : call rdx
0x000000000040a08a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x0000000000408fcf : clc ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004084f1 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004065c8 : clc ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004017cf : clc ; jne 0x4017d8 ; pop rbp ; ret
0x00000000004068f5 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000403757 : clc ; mov dword ptr [rdi + 0x1c], 0 ; pop rbp ; ret
0x000000000040a49b : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040391e : clc ; mov esi, dword ptr [rbp - 0xc] ; mov dword ptr [rdi], esi ; pop rbp ; ret
0x0000000000402387 : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040238b : clc ; pop rbp ; ret
0x0000000000409746 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000409329 : cld ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000409864 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000405f84 : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000040a498 : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000409743 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000409326 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000409861 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000400290 : cmc ; jmp rdx
0x0000000000401ed2 : cmp al, 0x25 ; lodsb al, byte ptr ds:[rsi] ; add al, bpl ; ret
0x00000000004025f9 : cmp al, 0x25 ; ret 0x40ad
0x0000000000407936 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040178d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4017a0 ; pop rbp ; ret
0x000000000040861c : cwde ; mov rcx, qword ptr [rax*8 + 0x40b648] ; jmp rcx
0x000000000040609f : dec dword ptr [rax - 0x75] ; push rbp ; call 0x2102e1f7
0x0000000000402a06 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x00000000004022f4 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000409fef : dec dword ptr [rax - 0x7f] ; ret 1
0x0000000000407a1b : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000402a3b : fisubr word ptr [rsi - 0x76b7ffc0] ; ret 0xb9e8
0x0000000000407353 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040a54c : fmul qword ptr [rax - 0x7d] ; ret
0x00000000004019e9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403921 : hlt ; mov dword ptr [rdi], esi ; pop rbp ; ret
0x00000000004017a0 : hlt ; pop rbp ; mov edi, 0x60d280 ; jmp rax
0x0000000000408c20 : int 0x80
0x0000000000401793 : ja 0x40179a ; pop rbp ; ret
0x000000000040179f : je 0x40179d ; pop rbp ; mov edi, 0x60d280 ; jmp rax
0x0000000000402386 : jge 0x402387 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040391d : jge 0x40391f ; mov esi, dword ptr [rbp - 0xc] ; mov dword ptr [rdi], esi ; pop rbp ; ret
0x000000000040151b : jmp 0x401377
0x0000000000401d7c : jmp 0x401e24
0x000000000040281e : jmp 0x402878
0x000000000040c4d3 : jmp qword ptr [rax]
0x0000000000404c7c : jmp qword ptr [rbx]
0x0000000000403dad : jmp qword ptr [rcx]
0x000000000040c3b3 : jmp qword ptr [rdx]
0x00000000004017a7 : jmp rax
0x0000000000401d07 : jmp rcx
0x0000000000400291 : jmp rdx
0x00000000004017d0 : jne 0x4017d7 ; pop rbp ; ret
0x0000000000403920 : jne 0x40391b ; mov dword ptr [rdi], esi ; pop rbp ; ret
0x000000000040bfd1 : jne 0x40bfd4 ; call qword ptr [rsi]
0x0000000000406a45 : jo 0x406aa6 ; ret
0x0000000000408154 : jo 0x4081b5 ; ret
0x000000000040828e : jo 0x4082ef ; ret
0x0000000000407af0 : js 0x407b50 ; pop rbp ; ret
0x000000000040c071 : js 0x40c074 ; call qword ptr [rsi]
0x0000000000404c78 : lea edi, dword ptr [rdi + rdi*8 - 1] ; jmp qword ptr [rbx]
0x0000000000401ed5 : lodsb al, byte ptr [rsi] ; add al, bpl ; ret
0x0000000000401ed4 : lodsb al, byte ptr ds:[rsi] ; add al, bpl ; ret
0x000000000040373b : loope 0x403711 ; ret
0x0000000000405f88 : loopne 0x405f8f ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040644b : loopne 0x40649b ; add esp, 0x20 ; pop rbp ; ret
0x000000000040644a : loopne 0x40649c ; add esp, 0x20 ; pop rbp ; ret
0x00000000004096e0 : loopne 0x4096e8 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040802b : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000407ebb : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x000000000040a0c6 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040c331 : mov bh, -1 ; call rdx
0x00000000004035f1 : mov byte ptr [0x60d2e8], al ; pop rbp ; ret
0x000000000040bde8 : mov byte ptr [rbp - 1], dl ; jmp rax
0x0000000000401803 : mov byte ptr [rip + 0x20baae], 1 ; ret
0x00000000004031b9 : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402cc6 : mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000403118 : mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040a0cc : mov dh, -0x40 ; pop rbp ; ret
0x00000000004035cd : mov dword ptr [0x60d2e0], edi ; pop rbp ; ret
0x0000000000406287 : mov dword ptr [rax + 0x1c], ecx ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004068f6 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000406804 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004068b8 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000403219 : mov dword ptr [rbp - 0x10], edx ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000406449 : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401ac9 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004019e7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040a499 : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004035ab : mov dword ptr [rbp - 8], eax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402385 : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040696e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403758 : mov dword ptr [rdi + 0x1c], 0 ; pop rbp ; ret
0x0000000000403922 : mov dword ptr [rdi], esi ; pop rbp ; ret
0x0000000000407aec : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x00000000004067b8 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000408eeb : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403903 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004067b5 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040321d : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000409183 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040676d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004067fe : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004068ba : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000406a3f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000407aea : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000408029 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000409744 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000409327 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000409862 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000408fcd : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004084ef : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004065c6 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000402389 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402373 : mov eax, esi ; pop rbp ; ret
0x000000000040182b : mov ebp, esp ; call rax
0x0000000000401791 : mov ebp, esp ; ja 0x40179c ; pop rbp ; ret
0x0000000000401d00 : mov ecx, dword ptr [rax*8 + 0x40a5c0] ; jmp rcx
0x0000000000406af7 : mov ecx, dword ptr [rax*8 + 0x40b140] ; jmp rcx
0x0000000000406dd7 : mov ecx, dword ptr [rax*8 + 0x40b188] ; jmp rcx
0x000000000040861e : mov ecx, dword ptr [rax*8 + 0x40b648] ; jmp rcx
0x0000000000406801 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401825 : mov edi, 0x60ce20 ; mov rbp, rsp ; call rax
0x00000000004017a2 : mov edi, 0x60d280 ; jmp rax
0x00000000004017e2 : mov edi, 0x60d280 ; jmp rdx
0x000000000040391c : mov edi, dword ptr [rbp - 8] ; mov esi, dword ptr [rbp - 0xc] ; mov dword ptr [rdi], esi ; pop rbp ; ret
0x000000000040a547 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000040a546 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000401806 : mov edx, 0xf3010020 ; ret
0x000000000040391f : mov esi, dword ptr [rbp - 0xc] ; mov dword ptr [rdi], esi ; pop rbp ; ret
0x00000000004017e0 : mov esi, eax ; mov edi, 0x60d280 ; jmp rdx
0x00000000004035cc : mov qword ptr [0x60d2e0], rdi ; pop rbp ; ret
0x0000000000403218 : mov qword ptr [rbp - 0x10], rdx ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004035aa : mov qword ptr [rbp - 8], rax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402384 : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040696d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040802a : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000407aeb : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000408eea : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403902 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004067b4 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040321c : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000409182 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040676c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406a3e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000408028 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000408fcc : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004084ee : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004065c5 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000402388 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402372 : mov rax, rsi ; pop rbp ; ret
0x000000000040182a : mov rbp, rsp ; call rax
0x0000000000401790 : mov rbp, rsp ; ja 0x40179d ; pop rbp ; ret
0x0000000000401cff : mov rcx, qword ptr [rax*8 + 0x40a5c0] ; jmp rcx
0x0000000000406af6 : mov rcx, qword ptr [rax*8 + 0x40b140] ; jmp rcx
0x0000000000406dd6 : mov rcx, qword ptr [rax*8 + 0x40b188] ; jmp rcx
0x000000000040861d : mov rcx, qword ptr [rax*8 + 0x40b648] ; jmp rcx
0x00000000004017df : mov rsi, rax ; mov edi, 0x60d280 ; jmp rdx
0x0000000000400288 : movabs dword ptr [0xf526cd9d8ba8e8b5], eax ; jmp rdx
0x00000000004031b8 : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402cc5 : movzx eax, al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000403117 : movzx eax, al ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040a0cb : movzx eax, al ; pop rbp ; ret
0x000000000040a568 : nop dword ptr [rax + rax] ; ret
0x0000000000405d9b : or al, 1 ; ret 0x5189
0x000000000040734e : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040734f : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x00000000004031a3 : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000405d89 : or byte ptr [rcx], al ; ret 0x5189
0x000000000040bb71 : or dword ptr [rax], eax ; add byte ptr [rax], ah ; ret 0xffff
0x0000000000408211 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040bb70 : or qword ptr [rax], rax ; add byte ptr [rax], ah ; ret 0xffff
0x000000000040a55c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040a55e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000408ade : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040a560 : pop r14 ; pop r15 ; ret
0x0000000000408ae0 : pop r15 ; pop rbp ; ret
0x000000000040a562 : pop r15 ; ret
0x0000000000401802 : pop rbp ; mov byte ptr [rip + 0x20baae], 1 ; ret
0x00000000004017a1 : pop rbp ; mov edi, 0x60d280 ; jmp rax
0x00000000004017de : pop rbp ; mov rsi, rax ; mov edi, 0x60d280 ; jmp rdx
0x000000000040a55b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040a55f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401795 : pop rbp ; ret
0x0000000000408add : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040793a : pop rbx ; pop rbp ; ret
0x0000000000408ae1 : pop rdi ; pop rbp ; ret
0x000000000040a563 : pop rdi ; ret
0x0000000000408adf : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040a561 : pop rsi ; pop r15 ; ret
0x000000000040a55d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040628d : push rax ; pop rbp ; ret
0x00000000004038b5 : push rbp ; call 0x1102ba07
0x00000000004060a2 : push rbp ; call 0x2102e1f4
0x00000000004061e0 : push rbp ; call 0x2102e332
0x0000000000406256 : push rbp ; call 0x2102e3a8
0x0000000000403817 : push rbp ; call 0x902b969
0x0000000000403866 : push rbp ; call 0xd02b9b8
0x0000000000407352 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000401824 : push rbp ; mov edi, 0x60ce20 ; mov rbp, rsp ; call rax
0x0000000000406205 : push rbp ; ror byte ptr [rax + 1], 1 ; ret 0x8948
0x0000000000409c7d : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x0000000000407a1e : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000405daf : push rcx ; adc byte ptr [rcx], al ; ret 0x5189
0x0000000000405d76 : push rcx ; add al, 1 ; ret 0x5189
0x0000000000405d9a : push rcx ; or al, 1 ; ret 0x5189
0x0000000000405d88 : push rcx ; or byte ptr [rcx], al ; ret 0x5189
0x0000000000401f7d : push rsi ; add al, 0x25 ; ret 0x60d2
0x0000000000401361 : ret
0x00000000004038b9 : ret 0x10
0x0000000000405d68 : ret 0x1189
0x0000000000406031 : ret 0x148
0x00000000004060a6 : ret 0x20
0x0000000000401722 : ret 0x20ba
0x0000000000401522 : ret 0x20bb
0x0000000000406261 : ret 0x40
0x00000000004025fb : ret 0x40ad
0x0000000000403213 : ret 0x4240
0x0000000000405d79 : ret 0x5189
0x0000000000401d31 : ret 0x60d2
0x0000000000402a95 : ret 0x65e8
0x0000000000403ab4 : ret 0x6e8
0x00000000004085d9 : ret 0x8844
0x0000000000406034 : ret 0x8941
0x0000000000406137 : ret 0x8948
0x000000000040747d : ret 0x89a5
0x0000000000402626 : ret 0x8b48
0x0000000000401e68 : ret 0xb0
0x0000000000402a41 : ret 0xb9e8
0x000000000040386a : ret 0xc
0x00000000004017c5 : ret 0xc148
0x00000000004061f9 : ret 0xc1e8
0x000000000040224f : ret 0xd284
0x00000000004029ed : ret 0xde8
0x00000000004023f8 : ret 0xe280
0x000000000040796c : ret 0xee8
0x000000000040736b : ret 0xffe8
0x0000000000401f7a : ret 0xfff8
0x000000000040bb75 : ret 0xffff
0x0000000000402045 : ret 1
0x000000000040381b : ret 8
0x00000000004061dc : ror byte ptr [r8 - 0x75], 1 ; push rbp ; call 0x2102e336
0x0000000000408c1b : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000406a40 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x406aab ; ret
0x0000000000406206 : ror byte ptr [rax + 1], 1 ; ret 0x8948
0x00000000004017cc : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4017db ; pop rbp ; ret
0x00000000004061dd : ror byte ptr [rax - 0x75], 1 ; push rbp ; call 0x2102e335
0x0000000000408c1c : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000406a41 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x406aaa ; ret
0x0000000000402cc7 : ror byte ptr [rax - 0x7d], -0x3c ; pop rbp ; ret
0x0000000000402b51 : ror byte ptr [rax - 0x7f], -0x3c ; and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000409c7e : ror byte ptr [rax - 0x7f], 1 ; ret 1
0x0000000000407a1f : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x00000000004017ce : sar eax, 1 ; jne 0x4017d9 ; pop rbp ; ret
0x000000000040bb6d : sar edi, -1 ; or qword ptr [rax], rax ; add byte ptr [rax], ah ; ret 0xffff
0x00000000004017cd : sar rax, 1 ; jne 0x4017da ; pop rbp ; ret
0x000000000040bde4 : sbb al, 0 ; add byte ptr [rax], al ; mov byte ptr [rbp - 1], dl ; jmp rax
0x0000000000406289 : sbb al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000402a3c : scasb al, byte ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0xb9e8
0x00000000004029e8 : scasb al, byte ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0xde8
0x0000000000401805 : scasb al, byte ptr [rdi] ; mov edx, 0xf3010020 ; ret
0x0000000000402a90 : scasd eax, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0x65e8
0x0000000000401d2a : shl byte ptr [rax], cl ; add dh, al ; add al, 0x25 ; ret 0x60d2
0x0000000000401d53 : shl byte ptr [rax], cl ; add esi, eax ; add al, 0x25 ; ret 0x60d2
0x00000000004066f2 : shl byte ptr [rax], cl ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004017a4 : shl byte ptr [rax], cl ; jmp rax
0x00000000004017e4 : shl byte ptr [rax], cl ; jmp rdx
0x00000000004035d1 : shl byte ptr [rax], cl ; pop rbp ; ret
0x000000000040a0c8 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040236d : sub eax, edx ; add rsi, rax ; mov rax, rsi ; pop rbp ; ret
0x000000000040a59d : sub esp, 8 ; add rsp, 8 ; ret
0x000000000040a59c : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040a56a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004025f2 : test byte ptr [rsi], bh ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x40ad
0x0000000000401d7d : wait ; add byte ptr [rax], al ; add dh, al ; add al, 0x25 ; ret
0x00000000004029e7 : xchg dword ptr [rsi - 0x76b7ffc0], ebp ; ret 0xde8
0x000000000040224e : xchg eax, ebp ; ret 0xd284
0x0000000000403101 : xchg eax, ebp ; ret 0xe280
0x00000000004084e2 : xchg eax, esp ; ret 0xd284
0x00000000004023f7 : xchg eax, esp ; ret 0xe280
0x0000000000402a39 : xor al, 0x25 ; fisubr word ptr [rsi - 0x76b7ffc0] ; ret 0xb9e8
0x00000000004029e5 : xor al, 0x25 ; xchg dword ptr [rsi - 0x76b7ffc0], ebp ; ret 0xde8
0x000000000040a08e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004068b6 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
