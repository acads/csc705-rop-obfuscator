0x0000000000409ed5 : adc dword ptr [rax], eax ; add byte ptr [rsp + rbp*8 - 1], ch ; call rsp
0x0000000000405a79 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000409cff : add ah, bh ; ret
0x0000000000409cdf : add ah, bl ; ret 0xffff
0x0000000000409cf7 : add ah, cl ; ret
0x0000000000402c17 : add al, ch ; ret
0x000000000040a7a7 : add al, cl ; ret 0xffff
0x00000000004087bf : add bl, dh ; ret
0x0000000000403729 : add byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000405197 : add byte ptr [rax - 0x75], cl ; jge 0x40517b ; call 0x4013f7
0x0000000000406b18 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000040366b : add byte ptr [rax - 0x77], cl ; ret 0x4ce8
0x0000000000403969 : add byte ptr [rax - 0x77], cl ; ret 0x4ee8
0x00000000004087bd : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000405195 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jge 0x40517d ; call 0x4013f9
0x0000000000403669 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x4ce8
0x0000000000403967 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x4ee8
0x00000000004087bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004004b8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400428 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000400638 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000004004ba : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040042a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000040063a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000004077e9 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004042f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004004bc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040042c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000040063c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x000000000040634e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000401e66 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000405a3a : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004057e0 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004012f3 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000040a166 : add byte ptr [rax], al ; call 0x1740a103
0x0000000000409cfe : add byte ptr [rax], al ; cld ; ret
0x0000000000409b5a : add byte ptr [rax], al ; jb 0x409b67 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ja 0x409b6b ; jmp rsp
0x0000000000401389 : add byte ptr [rax], al ; jmp 0x401309
0x0000000000409f66 : add byte ptr [rax], al ; js 0x409f6f ; call qword ptr [rsi]
0x0000000000409b5e : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ja 0x409b67 ; jmp rsp
0x00000000004077eb : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000404622 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004042f6 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000405196 : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x28] ; call 0x4013f8
0x000000000040a0c2 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rax], cl ; xchg edi, edi ; jmp rcx
0x0000000000402626 : add byte ptr [rax], al ; pop rbp ; ret
0x00000000004069db : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004057a8 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000409ce6 : add byte ptr [rax], al ; pop rsp ; ret
0x0000000000409cce : add byte ptr [rax], al ; pop rsp ; ret 0xffff
0x0000000000409cee : add byte ptr [rax], al ; pushfq ; ret
0x00000000004004be : add byte ptr [rax], al ; ret
0x000000000040042e : add byte ptr [rax], al ; ret 0
0x000000000040063e : add byte ptr [rax], al ; ret 1
0x000000000040a447 : add byte ptr [rax], ch ; mov ch, -1 ; call rdx
0x000000000040a0c7 : add byte ptr [rax], cl ; xchg edi, edi ; jmp rcx
0x00000000004069dc : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004057a9 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000401778 : add byte ptr [rcx], al ; ret
0x0000000000406350 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000401e68 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000409b5b : add byte ptr [rdx], dh ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ja 0x409b6a ; jmp rsp
0x0000000000409ed7 : add byte ptr [rsp + rbp*8 - 1], ch ; call rsp
0x0000000000405a38 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040a0c5 : add dword ptr [rax], eax ; add byte ptr [rax], cl ; xchg edi, edi ; jmp rcx
0x00000000004069da : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004057a7 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000402447 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004028a7 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040831a : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401774 : add eax, 0x209b5e ; add ebx, esi ; ret
0x000000000040173b : add eax, edx ; sar rax, 1 ; jne 0x40174c ; pop rbp ; ret
0x0000000000401779 : add ebx, esi ; ret
0x000000000040190b : add esp, 0x10 ; pop rbp ; ret
0x0000000000403344 : add esp, 0x120 ; pop rbp ; ret
0x000000000040807c : add esp, 0x130 ; pop rbp ; ret
0x00000000004057a4 : add esp, 0x138 ; pop rbx ; pop rbp ; ret
0x0000000000406ccc : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000402c73 : add esp, 0x20 ; pop rbp ; ret
0x000000000040345e : add esp, 0x2030 ; pop rbp ; ret
0x0000000000402bd5 : add esp, 0x2040 ; pop rbp ; ret
0x0000000000403e7f : add esp, 0x2090 ; pop rbp ; ret
0x0000000000402ab6 : add esp, 0x20e0 ; pop rbp ; ret
0x0000000000401a1d : add esp, 0x30 ; pop rbp ; ret
0x000000000040244c : add esp, 0x40 ; pop rbp ; ret
0x00000000004022ca : add esp, 0x50 ; pop rbp ; ret
0x0000000000402738 : add esp, 0x60 ; pop rbp ; ret
0x00000000004048b3 : add esp, 0x70 ; pop rbp ; ret
0x000000000040595e : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000403a34 : add esp, 0x90 ; pop rbp ; ret
0x0000000000406b64 : add esp, 0xa0 ; pop rbp ; ret
0x0000000000402622 : add esp, 0xe0 ; pop rbp ; ret
0x00000000004012f6 : add esp, 8 ; ret
0x000000000040173a : add rax, rdx ; sar rax, 1 ; jne 0x40174d ; pop rbp ; ret
0x000000000040190a : add rsp, 0x10 ; pop rbp ; ret
0x0000000000403343 : add rsp, 0x120 ; pop rbp ; ret
0x000000000040807b : add rsp, 0x130 ; pop rbp ; ret
0x00000000004057a3 : add rsp, 0x138 ; pop rbx ; pop rbp ; ret
0x0000000000406ccb : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000402c72 : add rsp, 0x20 ; pop rbp ; ret
0x000000000040345d : add rsp, 0x2030 ; pop rbp ; ret
0x0000000000402bd4 : add rsp, 0x2040 ; pop rbp ; ret
0x0000000000403e7e : add rsp, 0x2090 ; pop rbp ; ret
0x0000000000402ab5 : add rsp, 0x20e0 ; pop rbp ; ret
0x0000000000401a1c : add rsp, 0x30 ; pop rbp ; ret
0x000000000040244b : add rsp, 0x40 ; pop rbp ; ret
0x00000000004022c9 : add rsp, 0x50 ; pop rbp ; ret
0x0000000000402737 : add rsp, 0x60 ; pop rbp ; ret
0x00000000004048b2 : add rsp, 0x70 ; pop rbp ; ret
0x000000000040595d : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000403a33 : add rsp, 0x90 ; pop rbp ; ret
0x0000000000406b63 : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000402621 : add rsp, 0xe0 ; pop rbp ; ret
0x00000000004012f5 : add rsp, 8 ; ret
0x0000000000408319 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000403727 : and byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000401777 : and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000403346 : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000405d67 : and eax, 0x48fffffd ; add esp, 0x20 ; pop rbp ; ret
0x0000000000403e9f : and eax, 0x60b2e0 ; pop rbp ; ret
0x0000000000403ec3 : and eax, 0x60b2e8 ; pop rbp ; ret
0x000000000040a168 : call 0x1740a101
0x000000000040519c : call 0x4013f2
0x0000000000401871 : call 0x401509
0x0000000000405399 : call 0x401692
0x00000000004042b2 : call 0x4902cc02
0x00000000004042b1 : call 0x4902cc03
0x00000000004042b2 : call 0x4902cc05
0x00000000004042b1 : call 0x4902cc06
0x00000000004043f4 : call 0x4902cd44
0x00000000004043f3 : call 0x4902cd45
0x00000000004043f4 : call 0x4902cd47
0x00000000004043f3 : call 0x4902cd48
0x00000000004057d9 : call 0xffffffffe902e129
0x00000000004057d8 : call 0xffffffffe902e12a
0x0000000000408799 : call qword ptr [r12 + rbx*8]
0x0000000000402f73 : call qword ptr [rax]
0x0000000000409f6b : call qword ptr [rsi]
0x000000000040879a : call qword ptr [rsp + rbx*8]
0x000000000040179d : call rax
0x000000000040a44b : call rdx
0x0000000000409edb : call rsp
0x000000000040807a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x0000000000406ecf : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406361 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040173f : clc ; jne 0x401748 ; pop rbp ; ret
0x0000000000404765 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004086eb : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004086ee : clc ; pop rbp ; ret
0x00000000004077e8 : cld ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000401937 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407a4b : cld ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040345c : cld ; add rsp, 0x2030 ; pop rbp ; ret
0x0000000000407990 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040777d : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x00000000004086e8 : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004081c3 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408166 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040798d : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004077ef : cld ; pop rbp ; ret
0x0000000000409d00 : cld ; ret
0x0000000000401878 : cmp al, 0x25 ; ret
0x00000000004057a6 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004016fd : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401710 ; pop rbp ; ret
0x000000000040651c : cwde ; mov rcx, qword ptr [rax*8 + 0x409658] ; jmp rcx
0x0000000000401875 : dec dword ptr [rax - 0x73] ; cmp al, 0x25 ; ret
0x0000000000401c62 : dec dword ptr [rax - 0x77] ; ret 0x8d8b
0x0000000000407fdf : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000040588b : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000404561 : enter 0x60b2, 0 ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004051c3 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040879c : fmul qword ptr [rax - 0x7d] ; ret
0x000000000040519b : fsubr st(0) ; ret 0xffff
0x0000000000401909 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401710 : hlt ; pop rbp ; mov edi, 0x60b270 ; jmp rax
0x000000000040784d : in al, dx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406b20 : int 0x80
0x0000000000401703 : ja 0x40170a ; pop rbp ; ret
0x0000000000409b61 : ja 0x409b64 ; jmp rsp
0x0000000000409b5c : jb 0x409b65 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ja 0x409b69 ; jmp rsp
0x000000000040170f : je 0x40170d ; pop rbp ; mov edi, 0x60b270 ; jmp rax
0x000000000040519a : jge 0x405178 ; call 0x4013f4
0x000000000040138b : jmp 0x401307
0x0000000000402c6f : jmp 0xffffffff83892c7b
0x000000000040a5eb : jmp qword ptr [rax]
0x000000000040a4cb : jmp qword ptr [rdx]
0x0000000000401717 : jmp rax
0x0000000000401bfe : jmp rcx
0x0000000000401757 : jmp rdx
0x0000000000409b63 : jmp rsp
0x0000000000401740 : jne 0x401747 ; pop rbp ; ret
0x0000000000409fc9 : jns 0x409fcc ; jmp rdx
0x00000000004048b5 : jo 0x404916 ; ret
0x0000000000405fc4 : jo 0x406025 ; ret
0x00000000004060fe : jo 0x40615f ; ret
0x0000000000405960 : js 0x4059c0 ; pop rbp ; ret
0x0000000000409f69 : js 0x409f6c ; call qword ptr [rsi]
0x0000000000409f68 : js 0x409f6d ; call qword ptr [rsi]
0x0000000000405393 : lea edi, dword ptr [rbp - 0x90] ; call 0x401698
0x0000000000405392 : lea rdi, qword ptr [rbp - 0x90] ; call 0x401699
0x0000000000409cfb : ljmp ptr [rdx + rcx] ; add byte ptr [rax], al ; cld ; ret
0x0000000000409b60 : lodsb al, byte ptr [rsi] ; ja 0x409b65 ; jmp rsp
0x0000000000409cdc : lodsb al, byte ptr [rsi] ; or dword ptr [rax], eax ; add ah, bl ; ret 0xffff
0x00000000004022c8 : loopne 0x402318 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004022c7 : loopne 0x402319 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004023e7 : loopne 0x4023d3 ; ret
0x0000000000402624 : loopne 0x40262b ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000402ab8 : loopne 0x402adf ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004041ab : loopne 0x4041fb ; add esp, 0x30 ; pop rbp ; ret
0x00000000004041aa : loopne 0x4041fc ; add esp, 0x30 ; pop rbp ; ret
0x0000000000407781 : loopne 0x407788 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000405e9b : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000405d2b : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000408316 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000403ec1 : mov byte ptr [0x60b2e8], al ; pop rbp ; ret
0x0000000000401bfb : mov byte ptr [rax], al ; jmp rcx
0x0000000000401773 : mov byte ptr [rip + 0x209b5e], 1 ; ret
0x000000000040a449 : mov ch, -1 ; call rdx
0x0000000000402449 : mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004028a9 : mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040831c : mov dh, -0x40 ; pop rbp ; ret
0x0000000000402c15 : mov dl, 0x60 ; add al, ch ; ret
0x0000000000403e9d : mov dword ptr [0x60b2e0], edi ; pop rbp ; ret
0x0000000000404766 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000404674 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000404728 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000401a19 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401907 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401935 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004086e9 : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004047de : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040595c : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000404628 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000406deb : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004040ec : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404625 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040406f : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040784b : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407083 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004045dd : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040466e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004042f9 : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004041a9 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004022c6 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000402734 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040472a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004048af : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040595a : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000405e99 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004081c4 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407a49 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040798e : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004077ed : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000406ecd : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040635f : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004086ec : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000405394 : mov ebp, 0xffffff70 ; call 0x401697
0x000000000040179b : mov ebp, esp ; call rax
0x0000000000401701 : mov ebp, esp ; ja 0x40170c ; pop rbp ; ret
0x0000000000401bf7 : mov ecx, dword ptr [rax*8 + 0x408820] ; jmp rcx
0x0000000000404967 : mov ecx, dword ptr [rax*8 + 0x409150] ; jmp rcx
0x0000000000404c47 : mov ecx, dword ptr [rax*8 + 0x409198] ; jmp rcx
0x000000000040651e : mov ecx, dword ptr [rax*8 + 0x409658] ; jmp rcx
0x00000000004075bd : mov ecx, dword ptr [rax*8 + 0x4099d0] ; jmp rcx
0x000000000040753d : mov ecx, dword ptr [rax*8 + 0x409a30] ; jmp rcx
0x0000000000404671 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401795 : mov edi, 0x60ae20 ; mov rbp, rsp ; call rax
0x0000000000401712 : mov edi, 0x60b270 ; jmp rax
0x0000000000401752 : mov edi, 0x60b270 ; jmp rdx
0x0000000000405199 : mov edi, dword ptr [rbp - 0x28] ; call 0x4013f5
0x0000000000408797 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000408796 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000401750 : mov esi, eax ; mov edi, 0x60b270 ; jmp rdx
0x0000000000403e9c : mov qword ptr [0x60b2e0], rdi ; pop rbp ; ret
0x00000000004047dd : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405e9a : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040595b : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000406dea : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004040eb : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404624 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040406e : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000407082 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004045dc : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004042f8 : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004041a8 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004022c5 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000402733 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004048ae : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000405e98 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000406ecc : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040635e : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040179a : mov rbp, rsp ; call rax
0x0000000000401700 : mov rbp, rsp ; ja 0x40170d ; pop rbp ; ret
0x0000000000401bf6 : mov rcx, qword ptr [rax*8 + 0x408820] ; jmp rcx
0x0000000000404966 : mov rcx, qword ptr [rax*8 + 0x409150] ; jmp rcx
0x0000000000404c46 : mov rcx, qword ptr [rax*8 + 0x409198] ; jmp rcx
0x000000000040651d : mov rcx, qword ptr [rax*8 + 0x409658] ; jmp rcx
0x00000000004075bc : mov rcx, qword ptr [rax*8 + 0x4099d0] ; jmp rcx
0x000000000040753c : mov rcx, qword ptr [rax*8 + 0x409a30] ; jmp rcx
0x0000000000405198 : mov rdi, qword ptr [rbp - 0x28] ; call 0x4013f6
0x000000000040174f : mov rsi, rax ; mov edi, 0x60b270 ; jmp rdx
0x000000000040a0c4 : movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rax], cl ; xchg edi, edi ; jmp rcx
0x0000000000402448 : movzx eax, al ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004028a8 : movzx eax, al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040831b : movzx eax, al ; pop rbp ; ret
0x0000000000402c14 : nop ; mov dl, 0x60 ; add al, ch ; ret
0x00000000004087b8 : nop dword ptr [rax + rax] ; ret
0x0000000000402c12 : or al, 0x25 ; nop ; mov dl, 0x60 ; add al, ch ; ret
0x0000000000409cfd : or al, byte ptr [rax] ; add ah, bh ; ret
0x0000000000409cf5 : or al, byte ptr [rax] ; add ah, cl ; ret
0x00000000004051be : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x00000000004051bf : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040a7a5 : or byte ptr [rax], al ; add al, cl ; ret 0xffff
0x0000000000401e62 : or byte ptr [rcx + 0x2df9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000409cdd : or dword ptr [rax], eax ; add ah, bl ; ret 0xffff
0x0000000000406081 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004087ac : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004087ae : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004069de : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004087b0 : pop r14 ; pop r15 ; ret
0x00000000004069e0 : pop r15 ; pop rbp ; ret
0x00000000004087b2 : pop r15 ; ret
0x0000000000401772 : pop rbp ; mov byte ptr [rip + 0x209b5e], 1 ; ret
0x0000000000401711 : pop rbp ; mov edi, 0x60b270 ; jmp rax
0x000000000040174e : pop rbp ; mov rsi, rax ; mov edi, 0x60b270 ; jmp rdx
0x00000000004087ab : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004087af : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401705 : pop rbp ; ret
0x00000000004069dd : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004057aa : pop rbx ; pop rbp ; ret
0x00000000004069e1 : pop rdi ; pop rbp ; ret
0x00000000004087b3 : pop rdi ; ret
0x00000000004069df : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004087b1 : pop rsi ; pop r15 ; ret
0x0000000000401775 : pop rsi ; wait ; and byte ptr [rax], al ; add ebx, esi ; ret
0x00000000004087ad : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000409ce8 : pop rsp ; ret
0x0000000000409cd0 : pop rsp ; ret 0xffff
0x00000000004022cc : push rax ; pop rbp ; ret
0x00000000004051c2 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000401794 : push rbp ; mov edi, 0x60ae20 ; mov rbp, rsp ; call rax
0x0000000000407c6d : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000040588e : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000409cf0 : pushfq ; ret
0x00000000004004c0 : ret
0x0000000000400430 : ret 0
0x0000000000402cae : ret 0x2000
0x0000000000401592 : ret 0x209b
0x0000000000401392 : ret 0x209c
0x00000000004042a7 : ret 0x30
0x000000000040366e : ret 0x4ce8
0x000000000040396c : ret 0x4ee8
0x00000000004051db : ret 0x7fe8
0x00000000004042b5 : ret 0x8148
0x00000000004064d9 : ret 0x8844
0x000000000040372c : ret 0x8948
0x00000000004052ed : ret 0x89a5
0x00000000004051c6 : ret 0x8b48
0x0000000000401c65 : ret 0x8d8b
0x0000000000401735 : ret 0xc148
0x0000000000406353 : ret 0xd284
0x0000000000401e6b : ret 0xe280
0x00000000004057dc : ret 0xee8
0x00000000004042b8 : ret 0xffff
0x0000000000400640 : ret 1
0x0000000000405892 : ret 8
0x0000000000406b1b : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x00000000004048b0 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x40491b ; ret
0x000000000040173c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40174b ; pop rbp ; ret
0x0000000000406b1c : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x00000000004048b1 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x40491a ; ret
0x000000000040244a : ror byte ptr [rax - 0x7d], -0x3c ; pop rbp ; ret
0x00000000004028aa : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x0000000000403342 : ror byte ptr [rax - 0x7f], -0x3c ; and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000402620 : ror byte ptr [rax - 0x7f], -0x3c ; loopne 0x40262f ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000402ab4 : ror byte ptr [rax - 0x7f], -0x3c ; loopne 0x402ae3 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000407c6e : ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000040588f : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000040173e : sar eax, 1 ; jne 0x401749 ; pop rbp ; ret
0x000000000040173d : sar rax, 1 ; jne 0x40174a ; pop rbp ; ret
0x0000000000402c6e : scasb al, byte ptr [rdi] ; jmp 0xffffffff83892c7c
0x0000000000401e64 : stc ; sub eax, 0xf000000 ; xchg eax, esp ; ret 0xe280
0x0000000000408318 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000409cfc : sub al, 0xa ; add byte ptr [rax], al ; cld ; ret
0x0000000000401e65 : sub eax, 0xf000000 ; xchg eax, esp ; ret 0xe280
0x0000000000408801 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000408800 : sub rsp, 8 ; add rsp, 8 ; ret
0x00000000004087ba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000401776 : wait ; and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000406352 : xchg eax, esp ; ret 0xd284
0x0000000000401e6a : xchg eax, esp ; ret 0xe280
0x000000000040a0c9 : xchg edi, edi ; jmp rcx
0x0000000000403460 : xor byte ptr [rax], ah ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040807e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000404726 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
