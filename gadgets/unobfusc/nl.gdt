0x00000000004048b9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040541b : add al, 0x24 ; mov al, 0 ; call 0x4016e6
0x000000000040a17f : add al, ah ; ret 0xffff
0x0000000000402d28 : add al, ch ; ret 0xffe8
0x0000000000407b6f : add bl, dh ; ret
0x0000000000402b03 : add byte ptr [r8], al ; add cl, ch ; ret 1
0x0000000000405898 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000402d6d : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x0000000000407b6d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000402d6b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x0000000000407b6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004003d0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000004003d2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000004064fd : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000407b6c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004003d4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000402c97 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7338b], cl ; ret 0xb0
0x000000000040518e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000402b04 : add byte ptr [rax], al ; add cl, ch ; ret 1
0x00000000004030e0 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404620 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040147b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004015f9 : add byte ptr [rax], al ; jmp 0x401499
0x00000000004064ff : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000403462 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000404b71 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040575b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004045e8 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000407b6e : add byte ptr [rax], al ; ret
0x00000000004003d6 : add byte ptr [rax], al ; ret 0
0x000000000040575c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004045e9 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000402c99 : add byte ptr [rbx - 0x76b7338b], cl ; ret 0xb0
0x0000000000401948 : add byte ptr [rcx], al ; ret
0x0000000000405190 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000402b06 : add cl, ch ; ret 1
0x0000000000404878 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040575a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004045e7 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000402815 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004026b0 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004076ca : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401944 : add eax, 0x2099ee ; add ebx, esi ; ret
0x000000000040190b : add eax, edx ; sar rax, 1 ; jne 0x40191c ; pop rbp ; ret
0x0000000000401949 : add ebx, esi ; ret
0x0000000000401b1b : add esp, 0x10 ; pop rbp ; ret
0x000000000040768c : add esp, 0x130 ; pop rbp ; ret
0x00000000004045e4 : add esp, 0x138 ; pop rbx ; pop rbp ; ret
0x0000000000405a4c : add esp, 0x1a0 ; pop rbp ; ret
0x000000000040281a : add esp, 0x20 ; pop rbp ; ret
0x0000000000401c2d : add esp, 0x30 ; pop rbp ; ret
0x0000000000402cfa : add esp, 0x40 ; pop rbp ; ret
0x00000000004026b5 : add esp, 0x50 ; pop rbp ; ret
0x00000000004036f3 : add esp, 0x70 ; pop rbp ; ret
0x000000000040479e : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000404b6d : add esp, 0x90 ; pop rbp ; ret
0x00000000004058e4 : add esp, 0xa0 ; pop rbp ; ret
0x0000000000406450 : add esp, 0xc0 ; pop rbp ; ret
0x000000000040147e : add esp, 8 ; ret
0x000000000040190a : add rax, rdx ; sar rax, 1 ; jne 0x40191d ; pop rbp ; ret
0x0000000000401b1a : add rsp, 0x10 ; pop rbp ; ret
0x000000000040768b : add rsp, 0x130 ; pop rbp ; ret
0x00000000004045e3 : add rsp, 0x138 ; pop rbx ; pop rbp ; ret
0x0000000000405a4b : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000402819 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000401c2c : add rsp, 0x30 ; pop rbp ; ret
0x0000000000402cf9 : add rsp, 0x40 ; pop rbp ; ret
0x00000000004026b4 : add rsp, 0x50 ; pop rbp ; ret
0x00000000004036f2 : add rsp, 0x70 ; pop rbp ; ret
0x000000000040479d : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000404b6c : add rsp, 0x90 ; pop rbp ; ret
0x00000000004058e3 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040644f : add rsp, 0xc0 ; pop rbp ; ret
0x000000000040147d : add rsp, 8 ; ret
0x00000000004076c9 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004054a6 : and al, 8 ; mov al, 0 ; call 0x4016e6
0x0000000000401947 : and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000404ba7 : and eax, 0x48fffffd ; add esp, 0x20 ; pop rbp ; ret
0x0000000000402d9f : and eax, 0x60b780 ; pop rbp ; ret
0x0000000000402dc3 : and eax, 0x60b788 ; pop rbp ; ret
0x00000000004052a7 : call 0x4014d2
0x00000000004052f1 : call 0x4015d2
0x000000000040541f : call 0x4016e2
0x0000000000404619 : call 0xffffffffe902cf69
0x0000000000404618 : call 0xffffffffe902cf6a
0x0000000000407b49 : call qword ptr [r12 + rbx*8]
0x0000000000409983 : call qword ptr [rsi]
0x0000000000407b4a : call qword ptr [rsp + rbx*8]
0x000000000040196d : call rax
0x0000000000409c43 : call rdx
0x00000000004093cb : call rsp
0x0000000000401946 : cdq ; and byte ptr [rax], al ; add ebx, esi ; ret
0x000000000040768a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x0000000000405c4f : clc ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004051a1 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403251 : clc ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040190f : clc ; jne 0x401918 ; pop rbp ; ret
0x0000000000403a8a : clc ; mov byte ptr [rax], al ; jmp rcx
0x00000000004035a5 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000407a9b : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000407a9e : clc ; pop rbp ; ret
0x00000000004064fc : cld ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000401b47 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004029e1 : cld ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406e64 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040644e : cld ; add rsp, 0xc0 ; pop rbp ; ret
0x0000000000407a98 : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000406d43 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406ce6 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406e61 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406503 : cld ; pop rbp ; ret
0x00000000004045e6 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004018cd : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4018e0 ; pop rbp ; ret
0x0000000000401d58 : cwde ; mov rcx, qword ptr [rax*8 + 0x407bc0] ; jmp rcx
0x000000000040529c : cwde ; mov rcx, qword ptr [rax*8 + 0x408db8] ; jmp rcx
0x0000000000403a85 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; clc ; mov byte ptr [rax], al ; jmp rcx
0x0000000000405418 : dec dword ptr [rax - 0x77] ; add al, 0x24 ; mov al, 0 ; call 0x4016e9
0x00000000004075ef : dec dword ptr [rax - 0x7f] ; ret 1
0x00000000004046cb : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000404003 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000407b4c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000401b19 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004018e0 : hlt ; pop rbp ; mov edi, 0x60b2e0 ; jmp rax
0x000000000040655d : in al, dx ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004058a0 : int 0x80
0x00000000004018d3 : ja 0x4018da ; pop rbp ; ret
0x0000000000401479 : jae 0x401485 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004018df : je 0x4018dd ; pop rbp ; mov edi, 0x60b2e0 ; jmp rax
0x00000000004015fb : jmp 0x401497
0x0000000000409de3 : jmp qword ptr [rax]
0x0000000000409cc3 : jmp qword ptr [rdx]
0x00000000004018e7 : jmp rax
0x0000000000401d61 : jmp rcx
0x0000000000401927 : jmp rdx
0x0000000000401910 : jne 0x401917 ; pop rbp ; ret
0x00000000004036f5 : jo 0x403756 ; ret
0x0000000000404e04 : jo 0x404e65 ; ret
0x0000000000404f3e : jo 0x404f9f ; ret
0x00000000004047a0 : js 0x404800 ; pop rbp ; ret
0x00000000004052a2 : lea eax, dword ptr [rax] ; jmp rcx
0x000000000040302b : loopne 0x40307b ; add esp, 0x20 ; pop rbp ; ret
0x000000000040302a : loopne 0x40307c ; add esp, 0x20 ; pop rbp ; ret
0x0000000000409de1 : mov al, -1 ; jmp qword ptr [rax]
0x000000000040541d : mov al, 0 ; call 0x4016e4
0x0000000000404cdb : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000404b6b : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x00000000004076c6 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000402dc1 : mov byte ptr [0x60b788], al ; pop rbp ; ret
0x00000000004037ab : mov byte ptr [rax], al ; jmp rcx
0x0000000000401943 : mov byte ptr [rip + 0x2099ee], 1 ; ret
0x0000000000409f01 : mov cl, -1 ; jmp qword ptr [rdx]
0x0000000000402817 : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004026b2 : mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004076cc : mov dh, -0x40 ; pop rbp ; ret
0x0000000000402d9d : mov dword ptr [0x60b780], edi ; pop rbp ; ret
0x00000000004035a6 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004034b4 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000403568 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000403029 : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401c29 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402cf6 : mov dword ptr [rbp - 0x40], eax ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004052eb : mov dword ptr [rbp - 0x88], eax ; call 0x4015d8
0x000000000040532e : mov dword ptr [rbp - 0x98], eax ; call 0x4015d8
0x0000000000405379 : mov dword ptr [rbp - 0xa8], eax ; call 0x4015d8
0x0000000000401b17 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401b45 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407a99 : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040361e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004054a4 : mov dword ptr [rsp + 8], ebx ; mov al, 0 ; call 0x4016e8
0x000000000040541a : mov dword ptr [rsp], eax ; mov al, 0 ; call 0x4016e7
0x000000000040479c : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000403468 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000405b6b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402fec : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403465 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000402f6f : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040655b : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405e03 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040341d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004034ae : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040356a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004036ef : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040479a : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000404cd9 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000406d44 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004029df : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406e62 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406501 : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000405c4d : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040519f : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040324f : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000407a9c : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040196b : mov ebp, esp ; call rax
0x00000000004018d1 : mov ebp, esp ; ja 0x4018dc ; pop rbp ; ret
0x0000000000401d5a : mov ecx, dword ptr [rax*8 + 0x407bc0] ; jmp rcx
0x0000000000402869 : mov ecx, dword ptr [rax*8 + 0x407c70] ; jmp rcx
0x00000000004037a7 : mov ecx, dword ptr [rax*8 + 0x4088b0] ; jmp rcx
0x0000000000403a87 : mov ecx, dword ptr [rax*8 + 0x4088f8] ; jmp rcx
0x000000000040529e : mov ecx, dword ptr [rax*8 + 0x408db8] ; jmp rcx
0x0000000000406294 : mov ecx, dword ptr [rax*8 + 0x409130] ; jmp rcx
0x0000000000406220 : mov ecx, dword ptr [rax*8 + 0x409190] ; jmp rcx
0x0000000000406934 : mov ecx, dword ptr [rax*8 + 0x409278] ; jmp rcx
0x00000000004068c0 : mov ecx, dword ptr [rax*8 + 0x4092d8] ; jmp rcx
0x00000000004034b1 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401965 : mov edi, 0x60ae20 ; mov rbp, rsp ; call rax
0x00000000004018e2 : mov edi, 0x60b2e0 ; jmp rax
0x0000000000401922 : mov edi, 0x60b2e0 ; jmp rdx
0x0000000000407b47 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000407b46 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000401920 : mov esi, eax ; mov edi, 0x60b2e0 ; jmp rdx
0x0000000000402d9c : mov qword ptr [0x60b780], rdi ; pop rbp ; ret
0x0000000000402cf5 : mov qword ptr [rbp - 0x40], rax ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004052ea : mov qword ptr [rbp - 0x88], rax ; call 0x4015d9
0x000000000040532d : mov qword ptr [rbp - 0x98], rax ; call 0x4015d9
0x0000000000405378 : mov qword ptr [rbp - 0xa8], rax ; call 0x4015d9
0x000000000040361d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004054a3 : mov qword ptr [rsp + 8], r11 ; mov al, 0 ; call 0x4016e9
0x0000000000405419 : mov qword ptr [rsp], rax ; mov al, 0 ; call 0x4016e8
0x0000000000404cda : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040479b : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000405b6a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402feb : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403464 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000402f6e : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405e02 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040341c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004036ee : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000404cd8 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000405c4c : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040519e : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040324e : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040196a : mov rbp, rsp ; call rax
0x00000000004018d0 : mov rbp, rsp ; ja 0x4018dd ; pop rbp ; ret
0x0000000000401d59 : mov rcx, qword ptr [rax*8 + 0x407bc0] ; jmp rcx
0x0000000000402868 : mov rcx, qword ptr [rax*8 + 0x407c70] ; jmp rcx
0x00000000004037a6 : mov rcx, qword ptr [rax*8 + 0x4088b0] ; jmp rcx
0x0000000000403a86 : mov rcx, qword ptr [rax*8 + 0x4088f8] ; jmp rcx
0x000000000040529d : mov rcx, qword ptr [rax*8 + 0x408db8] ; jmp rcx
0x0000000000406293 : mov rcx, qword ptr [rax*8 + 0x409130] ; jmp rcx
0x000000000040621f : mov rcx, qword ptr [rax*8 + 0x409190] ; jmp rcx
0x0000000000406933 : mov rcx, qword ptr [rax*8 + 0x409278] ; jmp rcx
0x00000000004068bf : mov rcx, qword ptr [rax*8 + 0x4092d8] ; jmp rcx
0x000000000040191f : mov rsi, rax ; mov edi, 0x60b2e0 ; jmp rdx
0x0000000000402816 : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004026b1 : movzx eax, al ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004076cb : movzx eax, al ; pop rbp ; ret
0x0000000000407b68 : nop dword ptr [rax + rax] ; ret
0x0000000000403a88 : or al, 0xffffffffffffffc5 ; clc ; mov byte ptr [rax], al ; jmp rcx
0x0000000000401d5b : or al, 0xffffffffffffffc5 ; sar byte ptr [rbx + 0x40], 0 ; jmp rcx
0x000000000040a17d : or al, byte ptr [rax] ; add al, ah ; ret 0xffff
0x0000000000403ffe : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000403fff : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000404ec1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401945 : out dx, al ; cdq ; and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000407b5c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000407b5e : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040575e : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000407b60 : pop r14 ; pop r15 ; ret
0x0000000000405760 : pop r15 ; pop rbp ; ret
0x0000000000407b62 : pop r15 ; ret
0x0000000000401942 : pop rbp ; mov byte ptr [rip + 0x2099ee], 1 ; ret
0x00000000004018e1 : pop rbp ; mov edi, 0x60b2e0 ; jmp rax
0x000000000040191e : pop rbp ; mov rsi, rax ; mov edi, 0x60b2e0 ; jmp rdx
0x0000000000407b5b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000407b5f : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004018d5 : pop rbp ; ret
0x000000000040575d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004045ea : pop rbx ; pop rbp ; ret
0x0000000000405761 : pop rdi ; pop rbp ; ret
0x000000000040526d : pop rdi ; ret
0x000000000040575f : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000407b61 : pop rsi ; pop r15 ; ret
0x00000000004054a5 : pop rsp ; and al, 8 ; mov al, 0 ; call 0x4016e7
0x0000000000407b5d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405330 : push -0x17000001 ; xchg eax, edi ; ret 0xffff
0x00000000004026b7 : push rax ; pop rbp ; ret
0x0000000000404002 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000401964 : push rbp ; mov edi, 0x60ae20 ; mov rbp, rsp ; call rax
0x000000000040727d : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x00000000004046ce : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000401481 : ret
0x00000000004003d8 : ret 0
0x0000000000401802 : ret 0x2099
0x0000000000401602 : ret 0x209a
0x0000000000402414 : ret 0x26e8
0x0000000000402137 : ret 0x4085
0x0000000000402856 : ret 0x4d89
0x000000000040401b : ret 0x4fe8
0x0000000000405259 : ret 0x8844
0x0000000000402c4b : ret 0x8941
0x0000000000405cd2 : ret 0x8948
0x000000000040412d : ret 0x89a5
0x0000000000404006 : ret 0x8b48
0x0000000000402c9f : ret 0xb0
0x0000000000401905 : ret 0xc148
0x0000000000405193 : ret 0xd284
0x000000000040461c : ret 0xee8
0x0000000000402d2a : ret 0xffe8
0x000000000040210a : ret 0xfff5
0x00000000004052a9 : ret 0xffff
0x0000000000402b08 : ret 1
0x00000000004046d2 : ret 8
0x000000000040284f : rol dword ptr [rbx - 0x3f76fc17], -0x77 ; ret 0x4d89
0x000000000040589b : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x00000000004036f0 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x40375b ; ret
0x0000000000402cf7 : ror byte ptr [r8 - 0x7d], -0x3c ; pop rbp ; ret
0x000000000040190c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40191b ; pop rbp ; ret
0x000000000040589c : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x00000000004036f1 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x40375a ; ret
0x0000000000402cf8 : ror byte ptr [rax - 0x7d], -0x3c ; pop rbp ; ret
0x00000000004026b3 : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x000000000040727e : ror byte ptr [rax - 0x7f], 1 ; ret 1
0x00000000004046cf : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000401d5d : sar byte ptr [rbx + 0x40], 0 ; jmp rcx
0x000000000040190e : sar eax, 1 ; jne 0x401919 ; pop rbp ; ret
0x000000000040190d : sar rax, 1 ; jne 0x40191a ; pop rbp ; ret
0x00000000004076c8 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000407b9d : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000407b9c : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000407b6a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000405335 : xchg eax, edi ; ret 0xffff
0x0000000000405192 : xchg eax, esp ; ret 0xd284
0x000000000040768e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000403566 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
