0x0000000000404969 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000409b7d : add al, 0 ; add al, dh ; mov al, -1 ; jmp qword ptr [rdx]
0x000000000040a27f : add al, ah ; ret
0x0000000000401777 : add al, ch ; ret
0x00000000004052af : add al, ch ; ret 0xffff
0x0000000000409b7f : add al, dh ; mov al, -1 ; jmp qword ptr [rdx]
0x0000000000406e5f : add bl, dh ; ret
0x0000000000403349 : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x408a
0x000000000040242e : add byte ptr [rax - 0x73], cl ; xor al, 0x25 ; ret 0x4072
0x0000000000405948 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000401d05 : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000040a21f : add byte ptr [rax], ah ; ret
0x000000000040a11f : add byte ptr [rax], ah ; ret 0xffff
0x0000000000409b7a : add byte ptr [rax], al ; add al, 0 ; add al, dh ; mov al, -1 ; jmp qword ptr [rdx]
0x0000000000401775 : add byte ptr [rax], al ; add al, ch ; ret
0x0000000000406e5d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000403347 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x408a
0x000000000040242c : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; xor al, 0x25 ; ret 0x4072
0x0000000000401d03 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x0000000000406e5b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000406e5c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040a279 : add byte ptr [rax], al ; add byte ptr [rbx + rcx], ah ; add al, ah ; ret
0x000000000040294c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5588
0x000000000040523e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040a139 : add byte ptr [rax], al ; add byte ptr [rdx + rcx], ah ; add byte ptr [rax], al ; ret 0xffff
0x000000000040492a : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004046d0 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004012b3 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000040a13a : add byte ptr [rax], al ; and al, 0xa ; add byte ptr [rax], al ; ret 0xffff
0x00000000004013c9 : add byte ptr [rax], al ; jmp 0x4012c9
0x0000000000403512 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040a25e : add byte ptr [rax], al ; nop ; ret
0x000000000040a1be : add byte ptr [rax], al ; nop ; ret 0xffff
0x000000000040a27a : add byte ptr [rax], al ; or eax, dword ptr fs:[rax] ; add al, ah ; ret
0x000000000040275c : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040580b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000404698 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000409c9e : add byte ptr [rax], al ; push rax ; mov dl, -1 ; jmp qword ptr [rax]
0x000000000040a15e : add byte ptr [rax], al ; push rax ; ret 0xffff
0x0000000000406e5e : add byte ptr [rax], al ; ret
0x000000000040a13e : add byte ptr [rax], al ; ret 0xffff
0x000000000040580c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000404699 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040a27b : add byte ptr [rbx + rcx], ah ; add al, ah ; ret
0x0000000000401728 : add byte ptr [rcx], al ; ret
0x0000000000401771 : add byte ptr [rdi], cl ; test byte ptr [rdx], cl ; add byte ptr [rax], al ; add al, ch ; ret
0x000000000040294e : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5588
0x0000000000405240 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040a13b : add byte ptr [rdx + rcx], ah ; add byte ptr [rax], al ; ret 0xffff
0x0000000000409b7b : add byte ptr [rsp + rax], ah ; add al, dh ; mov al, -1 ; jmp qword ptr [rdx]
0x0000000000404928 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040580a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000404697 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000403326 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402844 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004062ca : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401724 : add eax, 0x209b6e ; add ebx, esi ; ret
0x00000000004016eb : add eax, edx ; sar rax, 1 ; jne 0x4016fc ; pop rbp ; ret
0x0000000000401729 : add ebx, esi ; ret
0x000000000040187b : add esp, 0x10 ; pop rbp ; ret
0x0000000000406ddc : add esp, 0x130 ; pop rbp ; ret
0x0000000000404694 : add esp, 0x138 ; pop rbx ; pop rbp ; ret
0x0000000000405afc : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000402849 : add esp, 0x20 ; pop rbp ; ret
0x000000000040195d : add esp, 0x30 ; pop rbp ; ret
0x00000000004032b8 : add esp, 0x40 ; pop rbp ; ret
0x0000000000404d0c : add esp, 0x50 ; pop rbp ; ret
0x0000000000402b05 : add esp, 0x60 ; pop rbp ; ret
0x00000000004037a3 : add esp, 0x70 ; pop rbp ; ret
0x000000000040484e : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000404c1d : add esp, 0x90 ; pop rbp ; ret
0x0000000000405994 : add esp, 0xa0 ; pop rbp ; ret
0x0000000000402758 : add esp, 0xd0 ; pop rbp ; ret
0x00000000004012b6 : add esp, 8 ; ret
0x00000000004016ea : add rax, rdx ; sar rax, 1 ; jne 0x4016fd ; pop rbp ; ret
0x000000000040187a : add rsp, 0x10 ; pop rbp ; ret
0x0000000000406ddb : add rsp, 0x130 ; pop rbp ; ret
0x0000000000404693 : add rsp, 0x138 ; pop rbx ; pop rbp ; ret
0x0000000000405afb : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000402848 : add rsp, 0x20 ; pop rbp ; ret
0x000000000040195c : add rsp, 0x30 ; pop rbp ; ret
0x00000000004032b7 : add rsp, 0x40 ; pop rbp ; ret
0x0000000000404d0b : add rsp, 0x50 ; pop rbp ; ret
0x0000000000402b04 : add rsp, 0x60 ; pop rbp ; ret
0x00000000004037a2 : add rsp, 0x70 ; pop rbp ; ret
0x000000000040484d : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000404c1c : add rsp, 0x90 ; pop rbp ; ret
0x0000000000405993 : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000402757 : add rsp, 0xd0 ; pop rbp ; ret
0x00000000004012b5 : add rsp, 8 ; ret
0x000000000040a13c : and al, 0xa ; add byte ptr [rax], al ; ret 0xffff
0x00000000004062c9 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401727 : and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000404c57 : and eax, 0x48fffffd ; add esp, 0x20 ; pop rbp ; ret
0x0000000000402e7f : and eax, 0x60b2f8 ; pop rbp ; ret
0x0000000000402ea3 : and eax, 0x60b300 ; pop rbp ; ret
0x0000000000405163 : call 0x4013e2
0x000000000040179c : call 0x401409
0x00000000004052b0 : call 0x401502
0x00000000004046c9 : call 0xffffffffe902d019
0x00000000004046c8 : call 0xffffffffe902d01a
0x0000000000406e39 : call qword ptr [r12 + rbx*8]
0x0000000000409883 : call qword ptr [rax]
0x00000000004098c3 : call qword ptr [rsi]
0x0000000000406e3a : call qword ptr [rsp + rbx*8]
0x000000000040174d : call rax
0x0000000000409763 : call rcx
0x0000000000409b03 : call rdx
0x0000000000406dda : clc ; add rsp, 0x130 ; pop rbp ; ret
0x0000000000405cff : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405251 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004016ef : clc ; jne 0x4016f8 ; pop rbp ; ret
0x0000000000402da6 : clc ; mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000403655 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040669b : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040669e : clc ; pop rbp ; ret
0x0000000000401fde : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406099 : cld ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402e60 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406698 : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004060f3 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406096 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402e5d : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004017a3 : cmp al, 0x25 ; ret 0x406e
0x000000000040334c : cmp al, 0x25 ; ret 0x408a
0x0000000000404696 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004016ad : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4016c0 ; pop rbp ; ret
0x000000000040534c : cwde ; mov rcx, qword ptr [rax*8 + 0x409010] ; jmp rcx
0x00000000004017a0 : dec dword ptr [rax - 0x73] ; cmp al, 0x25 ; ret 0x406e
0x0000000000403b35 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; pop rax ; mov eax, dword ptr [rax] ; jmp rcx
0x0000000000401c4d : dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000406d3f : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000040477b : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x00000000004052ad : enter 0xb0, -0x18 ; ret 0xffff
0x00000000004040b3 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000406e3c : fmul qword ptr [rax - 0x7d] ; ret
0x00000000004051e8 : fsubr st(0) ; ret 0xffdb
0x0000000000401879 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004016c0 : hlt ; pop rbp ; mov edi, 0x60b260 ; jmp rax
0x000000000040515e : in al, dx ; mov rdi, qword ptr [rbp - 0x10] ; call 0x4013e7
0x0000000000405950 : int 0x80
0x00000000004016b3 : ja 0x4016ba ; pop rbp ; ret
0x00000000004016bf : je 0x4016bd ; pop rbp ; mov edi, 0x60b260 ; jmp rax
0x0000000000405161 : jge 0x405157 ; call 0x4013e4
0x00000000004013cb : jmp 0x4012c7
0x0000000000409ca3 : jmp qword ptr [rax]
0x0000000000409b83 : jmp qword ptr [rdx]
0x00000000004016c7 : jmp rax
0x000000000040385e : jmp rcx
0x0000000000401707 : jmp rdx
0x00000000004016f0 : jne 0x4016f7 ; pop rbp ; ret
0x000000000040515d : jne 0x405153 ; mov rdi, qword ptr [rbp - 0x10] ; call 0x4013e8
0x00000000004037a5 : jo 0x403806 ; ret
0x0000000000404eb4 : jo 0x404f15 ; ret
0x0000000000404fee : jo 0x40504f ; ret
0x0000000000404850 : js 0x4048b0 ; pop rbp ; ret
0x0000000000409b81 : mov al, -1 ; jmp qword ptr [rdx]
0x00000000004052ae : mov al, 0 ; call 0x401504
0x0000000000404d8b : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000404c1b : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x00000000004062c6 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000409dc1 : mov bl, -1 ; jmp qword ptr [rdx]
0x0000000000402ea1 : mov byte ptr [0x60b300], al ; pop rbp ; ret
0x0000000000402da7 : mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000401723 : mov byte ptr [rip + 0x209b6e], 1 ; ret
0x0000000000403328 : mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402846 : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004062cc : mov dh, -0x40 ; pop rbp ; ret
0x0000000000409ca1 : mov dl, -1 ; jmp qword ptr [rax]
0x0000000000402e7d : mov dword ptr [0x60b2f8], edi ; pop rbp ; ret
0x0000000000403656 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000403564 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000403618 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040515c : mov dword ptr [rbp - 0x14], esi ; mov rdi, qword ptr [rbp - 0x10] ; call 0x4013e9
0x0000000000401959 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401877 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406699 : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004036ce : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402b02 : mov dword ptr [rcx], eax ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040484c : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x000000000040385b : mov eax, dword ptr [rax] ; jmp rcx
0x0000000000403518 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000405c1b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004030cc : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403515 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040304f : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405eb3 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004034cd : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004032b4 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040355e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040361a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004052ab : mov eax, dword ptr [rbp - 0x38] ; mov al, 0 ; call 0x401507
0x000000000040379f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040484a : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000404d89 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401fdc : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406097 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402e5e : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000405cfd : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040524f : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040669c : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040174b : mov ebp, esp ; call rax
0x00000000004016b1 : mov ebp, esp ; ja 0x4016bc ; pop rbp ; ret
0x0000000000403857 : mov ecx, dword ptr [rax*8 + 0x408b10] ; jmp rcx
0x0000000000403b37 : mov ecx, dword ptr [rax*8 + 0x408b58] ; jmp rcx
0x000000000040534e : mov ecx, dword ptr [rax*8 + 0x409010] ; jmp rcx
0x0000000000403561 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004052ce : mov ecx, dword ptr [rbp - 0x38] ; mov al, 0 ; call 0x401507
0x0000000000401745 : mov edi, 0x60ae20 ; mov rbp, rsp ; call rax
0x00000000004016c2 : mov edi, 0x60b260 ; jmp rax
0x0000000000401702 : mov edi, 0x60b260 ; jmp rdx
0x0000000000405160 : mov edi, dword ptr [rbp - 0x10] ; call 0x4013e5
0x0000000000406e37 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000406e36 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000401700 : mov esi, eax ; mov edi, 0x60b260 ; jmp rdx
0x0000000000402e7c : mov qword ptr [0x60b2f8], rdi ; pop rbp ; ret
0x00000000004036cd : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402b01 : mov qword ptr [rcx], rax ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004052aa : mov r8, qword ptr [rbp - 0x38] ; mov al, 0 ; call 0x401508
0x0000000000404d8a : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040484b : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000405c1a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004030cb : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403514 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040304e : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405eb2 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004034cc : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004032b3 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040379e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000404d88 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000405cfc : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040524e : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040174a : mov rbp, rsp ; call rax
0x00000000004016b0 : mov rbp, rsp ; ja 0x4016bd ; pop rbp ; ret
0x0000000000403856 : mov rcx, qword ptr [rax*8 + 0x408b10] ; jmp rcx
0x0000000000403b36 : mov rcx, qword ptr [rax*8 + 0x408b58] ; jmp rcx
0x000000000040534d : mov rcx, qword ptr [rax*8 + 0x409010] ; jmp rcx
0x00000000004052cd : mov rcx, qword ptr [rbp - 0x38] ; mov al, 0 ; call 0x401508
0x000000000040515f : mov rdi, qword ptr [rbp - 0x10] ; call 0x4013e6
0x00000000004016ff : mov rsi, rax ; mov edi, 0x60b260 ; jmp rdx
0x0000000000403327 : movzx eax, al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402845 : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004062cb : movzx eax, al ; pop rbp ; ret
0x0000000000402daa : movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x000000000040a260 : nop ; ret
0x000000000040a1c0 : nop ; ret 0xffff
0x0000000000406e58 : nop dword ptr [rax + rax] ; ret
0x0000000000403b38 : or al, 0xffffffffffffffc5 ; pop rax ; mov eax, dword ptr [rax] ; jmp rcx
0x000000000040a11d : or al, byte ptr [rax] ; add byte ptr [rax], ah ; ret 0xffff
0x00000000004040ae : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x00000000004040af : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000402a4a : or byte ptr [rcx + 0x23f9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5588
0x0000000000402948 : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5588
0x000000000040a27d : or eax, dword ptr [rax] ; add al, ah ; ret
0x000000000040a21d : or eax, dword ptr [rax] ; add byte ptr [rax], ah ; ret
0x0000000000404f71 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040a27c : or eax, dword ptr fs:[rax] ; add al, ah ; ret
0x0000000000401725 : outsb dx, byte ptr [rsi] ; wait ; and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000406e4c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000406e4e : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040580e : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406e50 : pop r14 ; pop r15 ; ret
0x0000000000405810 : pop r15 ; pop rbp ; ret
0x0000000000406e52 : pop r15 ; ret
0x0000000000403b3a : pop rax ; mov eax, dword ptr [rax] ; jmp rcx
0x0000000000401722 : pop rbp ; mov byte ptr [rip + 0x209b6e], 1 ; ret
0x00000000004016c1 : pop rbp ; mov edi, 0x60b260 ; jmp rax
0x00000000004016fe : pop rbp ; mov rsi, rax ; mov edi, 0x60b260 ; jmp rdx
0x0000000000406e4b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000406e4f : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004016b5 : pop rbp ; ret
0x000000000040580d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040469a : pop rbx ; pop rbp ; ret
0x0000000000405811 : pop rdi ; pop rbp ; ret
0x0000000000406e53 : pop rdi ; ret
0x000000000040580f : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000406e51 : pop rsi ; pop r15 ; ret
0x0000000000406e4d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000409ca0 : push rax ; mov dl, -1 ; jmp qword ptr [rax]
0x0000000000404d0e : push rax ; pop rbp ; ret
0x000000000040a160 : push rax ; ret 0xffff
0x00000000004040b2 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000401744 : push rbp ; mov edi, 0x60ae20 ; mov rbp, rsp ; call rax
0x00000000004069cd : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000040477e : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x00000000004012b9 : ret
0x00000000004015d2 : ret 0x209b
0x00000000004013d2 : ret 0x209c
0x00000000004017a5 : ret 0x406e
0x0000000000402433 : ret 0x4072
0x000000000040334e : ret 0x408a
0x00000000004040cb : ret 0x4fe8
0x0000000000402951 : ret 0x5588
0x0000000000405309 : ret 0x8844
0x0000000000405d82 : ret 0x8948
0x00000000004041dd : ret 0x89a5
0x0000000000402164 : ret 0x8b48
0x0000000000401baa : ret 0xb0
0x00000000004016e5 : ret 0xc148
0x0000000000405243 : ret 0xd284
0x0000000000401d35 : ret 0xd5e8
0x00000000004046cc : ret 0xee8
0x00000000004051ea : ret 0xffdb
0x0000000000405165 : ret 0xffff
0x000000000040225e : ret 1
0x0000000000404782 : ret 8
0x000000000040275a : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040594b : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x00000000004037a0 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x40380b ; ret
0x00000000004016ec : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4016fb ; pop rbp ; ret
0x000000000040594c : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x00000000004037a1 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x40380a ; ret
0x0000000000402756 : ror byte ptr [rax - 0x7f], -0x3c ; rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004069ce : ror byte ptr [rax - 0x7f], 1 ; ret 1
0x00000000004052a9 : ror byte ptr [rbx + rcx*4 + 0x45], 1 ; enter 0xb0, -0x18 ; ret 0xffff
0x000000000040477f : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x00000000004016ee : sar eax, 1 ; jne 0x4016f9 ; pop rbp ; ret
0x00000000004016ed : sar rax, 1 ; jne 0x4016fa ; pop rbp ; ret
0x000000000040a138 : sbb al, 0 ; add byte ptr [rax], al ; and al, 0xa ; add byte ptr [rax], al ; ret 0xffff
0x000000000040a278 : sbb al, 0 ; add byte ptr [rax], al ; or eax, dword ptr fs:[rax] ; add al, ah ; ret
0x0000000000402d07 : shr al, 1 ; ret
0x00000000004062c8 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000406e8d : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000406e8c : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000406e5a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000401773 : test byte ptr [rdx], cl ; add byte ptr [rax], al ; add al, ch ; ret
0x0000000000401726 : wait ; and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000402950 : xchg eax, ebp ; ret 0x5588
0x0000000000405242 : xchg eax, esp ; ret 0xd284
0x0000000000402431 : xor al, 0x25 ; ret 0x4072
0x0000000000406dde : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000403616 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
