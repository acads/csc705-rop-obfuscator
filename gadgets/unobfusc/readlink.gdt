0x000000000040302a : adc ch, byte ptr [rbx] ; add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x000000000040a841 : adc dword ptr [rax], eax ; add byte ptr [rax], al ; fcos ; call qword ptr [rax]
0x00000000004008dc : adc dword ptr [rax], eax ; sbb dword ptr [rax], eax ; nop ; ret 0x60
0x0000000000406669 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040a8c1 : adc eax, dword ptr [rax] ; add byte ptr [rax], dh ; fdivp st(7) ; call qword ptr [rax]
0x000000000040ae45 : add al, 0 ; add al, cl ; mov edi, edi ; jmp qword ptr [rdi]
0x0000000000401832 : add al, 0x25 ; nop ; ret 0x60
0x0000000000401ae7 : add al, 0x25 ; popfq ; ret 0x60
0x0000000000401ada : add al, 0x25 ; pushfq ; ret 0x60
0x00000000004031ba : add al, 0x48 ; add eax, ecx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040a543 : add al, ah ; test bh, bh ; call qword ptr [rax]
0x0000000000400027 : add al, bl ; ret
0x00000000004075f8 : add al, ch ; ret 0xff9e
0x000000000040b567 : add al, ch ; ret 0xffff
0x000000000040ad47 : add al, ch ; xchg bh, bh ; call rsp
0x000000000040ab07 : add al, cl ; jle 0x40ab0e ; call qword ptr [rsi]
0x000000000040ae47 : add al, cl ; mov edi, edi ; jmp qword ptr [rdi]
0x000000000040a533 : add al, dh ; jns 0x40a53a ; call rax
0x000000000040928f : add bl, dh ; ret
0x000000000040182f : add byte ptr [rax - 0x75], cl ; add al, 0x25 ; nop ; ret 0x60
0x00000000004077f8 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000405051 : add byte ptr [rax - 0x75], cl ; xor al, 0x25 ; nop ; ret 0x60
0x00000000004008da : add byte ptr [rax], al ; adc dword ptr [rax], eax ; sbb dword ptr [rax], eax ; nop ; ret 0x60
0x000000000040ae42 : add byte ptr [rax], al ; add al, 0 ; add al, cl ; mov edi, edi ; jmp qword ptr [rdi]
0x0000000000400025 : add byte ptr [rax], al ; add al, bl ; ret
0x000000000040928d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000400023 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bl ; ret
0x000000000040928b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000400021 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bl ; ret
0x0000000000400cc8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret 0x60
0x0000000000400600 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000400cca : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret 0x60
0x0000000000400602 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000403b2d : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000400ccc : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret 0x60
0x000000000040928c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400604 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000040b541 : add byte ptr [rax], al ; add byte ptr [rbx + rcx], ah ; add byte ptr [rax], cl ; ret 0xffff
0x0000000000402d4d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf280
0x0000000000406f3e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000401ae3 : add byte ptr [rax], al ; add dh, al ; add al, 0x25 ; popfq ; ret 0x60
0x0000000000401ad6 : add byte ptr [rax], al ; add dh, al ; add al, 0x25 ; pushfq ; ret 0x60
0x0000000000401cb8 : add byte ptr [rax], al ; add dh, dh ; add al, 0x25 ; popfq ; ret 0x60
0x0000000000401bb1 : add byte ptr [rax], al ; add dh, dh ; add al, 0x25 ; pushfq ; ret 0x60
0x000000000040ad42 : add byte ptr [rax], al ; add eax, dword ptr fs:[rax] ; add al, ch ; xchg bh, bh ; call rsp
0x000000000040ad22 : add byte ptr [rax], al ; add r8d, dword ptr [rax] ; add byte ptr [rax], ch ; xchg bh, bh ; call rsp
0x000000000040662a : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403b2f : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402ce8 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040126b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000040b7c6 : add byte ptr [rax], al ; call 0x2840b799
0x000000000040ad46 : add byte ptr [rax], al ; call 0xffffffffd540acd8
0x000000000040aa86 : add byte ptr [rax], al ; enter -0x92, -1 ; ret 3
0x000000000040a843 : add byte ptr [rax], al ; fcos ; call qword ptr [rax]
0x000000000040b7c2 : add byte ptr [rax], al ; in al, 0xd ; add byte ptr [rax], al ; call 0x2840b79d
0x0000000000401409 : add byte ptr [rax], al ; jmp 0x401289
0x000000000040810c : add byte ptr [rax], al ; mov al, sil ; movzx eax, al ; pop rbp ; ret
0x000000000040808d : add byte ptr [rax], al ; mov ax, si ; movzx eax, ax ; pop rbp ; ret
0x000000000040a573 : add byte ptr [rax], al ; mov bh, bh ; call rax
0x0000000000405212 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000400cce : add byte ptr [rax], al ; nop ; ret 0x60
0x000000000040b542 : add byte ptr [rax], al ; or eax, dword ptr fs:[rax] ; add byte ptr [rax], cl ; ret 0xffff
0x00000000004028fb : add byte ptr [rax], al ; pop rbp ; ret
0x00000000004076bb : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406398 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040a8f2 : add byte ptr [rax], al ; push rax ; out -1, eax ; call rax
0x000000000040a872 : add byte ptr [rax], al ; rcr dl, -1 ; call rax
0x000000000040928e : add byte ptr [rax], al ; ret
0x0000000000400606 : add byte ptr [rax], al ; ret 0
0x000000000040a832 : add byte ptr [rax], al ; sbb al, -1 ; call rax
0x000000000040a942 : add byte ptr [rax], al ; sub dl, -1 ; call qword ptr [rax]
0x000000000040ad27 : add byte ptr [rax], ch ; xchg bh, bh ; call rsp
0x000000000040b267 : add byte ptr [rax], cl ; mov bh, -1 ; jmp qword ptr [rdx]
0x000000000040b547 : add byte ptr [rax], cl ; ret 0xffff
0x000000000040a8c3 : add byte ptr [rax], dh ; fdivp st(7) ; call qword ptr [rax]
0x00000000004076bc : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000406399 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040ad43 : add byte ptr [rbx + rax], ah ; add al, ch ; xchg bh, bh ; call rsp
0x000000000040ad23 : add byte ptr [rbx + rax], al ; add byte ptr [rax], ch ; xchg bh, bh ; call rsp
0x000000000040b543 : add byte ptr [rbx + rcx], ah ; add byte ptr [rax], cl ; ret 0xffff
0x00000000004016e8 : add byte ptr [rcx], al ; ret
0x0000000000402d4f : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf280
0x0000000000406f40 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040302d : add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x000000000040ae43 : add byte ptr [rsp + rax], ah ; add al, cl ; mov edi, edi ; jmp qword ptr [rdi]
0x0000000000401bb0 : add byte ptr ss:[rax], al ; add dh, dh ; add al, 0x25 ; pushfq ; ret 0x60
0x0000000000401ae5 : add dh, al ; add al, 0x25 ; popfq ; ret 0x60
0x0000000000401ad8 : add dh, al ; add al, 0x25 ; pushfq ; ret 0x60
0x0000000000401cba : add dh, dh ; add al, 0x25 ; popfq ; ret 0x60
0x0000000000401bb3 : add dh, dh ; add al, 0x25 ; pushfq ; ret 0x60
0x0000000000404e2c : add dword ptr [rax + 0xf], eax ; mov dh, -0x39 ; pop rbp ; ret
0x000000000040ab05 : add dword ptr [rax], eax ; add al, cl ; jle 0x40ab10 ; call qword ptr [rsi]
0x0000000000406628 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004076ba : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000406397 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004029c0 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402d63 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004040da : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000402f79 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004016e4 : add eax, 0x20abae ; add ebx, esi ; ret
0x000000000040ad45 : add eax, dword ptr [rax] ; add al, ch ; xchg bh, bh ; call rsp
0x000000000040ad25 : add eax, dword ptr [rax] ; add byte ptr [rax], ch ; xchg bh, bh ; call rsp
0x000000000040ad44 : add eax, dword ptr fs:[rax] ; add al, ch ; xchg bh, bh ; call rsp
0x00000000004031bc : add eax, ecx ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004016ab : add eax, edx ; sar rax, 1 ; jne 0x4016bc ; pop rbp ; ret
0x00000000004016e9 : add ebx, esi ; ret
0x000000000040185b : add esp, 0x10 ; pop rbp ; ret
0x0000000000408b4c : add esp, 0x130 ; pop rbp ; ret
0x0000000000406394 : add esp, 0x138 ; pop rbx ; pop rbp ; ret
0x00000000004028f7 : add esp, 0x160 ; pop rbp ; ret
0x00000000004070fc : add esp, 0x170 ; pop rbp ; ret
0x00000000004079ac : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000402c30 : add esp, 0x20 ; pop rbp ; ret
0x000000000040193d : add esp, 0x30 ; pop rbp ; ret
0x0000000000402d68 : add esp, 0x40 ; pop rbp ; ret
0x0000000000403090 : add esp, 0x50 ; pop rbp ; ret
0x0000000000404777 : add esp, 0x60 ; pop rbp ; ret
0x0000000000401ed9 : add esp, 0x70 ; pop rbp ; ret
0x000000000040654e : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000403ee3 : add esp, 0x80 ; pop rbp ; ret
0x000000000040691d : add esp, 0x90 ; pop rbp ; ret
0x0000000000407844 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040459c : add esp, 0xc0 ; pop rbp ; ret
0x000000000040126e : add esp, 8 ; ret
0x000000000040ad24 : add r8d, dword ptr [rax] ; add byte ptr [rax], ch ; xchg bh, bh ; call rsp
0x00000000004031bb : add rax, rcx ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004016aa : add rax, rdx ; sar rax, 1 ; jne 0x4016bd ; pop rbp ; ret
0x000000000040185a : add rsp, 0x10 ; pop rbp ; ret
0x0000000000408b4b : add rsp, 0x130 ; pop rbp ; ret
0x0000000000406393 : add rsp, 0x138 ; pop rbx ; pop rbp ; ret
0x00000000004028f6 : add rsp, 0x160 ; pop rbp ; ret
0x00000000004070fb : add rsp, 0x170 ; pop rbp ; ret
0x00000000004079ab : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000402c2f : add rsp, 0x20 ; pop rbp ; ret
0x000000000040193c : add rsp, 0x30 ; pop rbp ; ret
0x0000000000402d67 : add rsp, 0x40 ; pop rbp ; ret
0x000000000040308f : add rsp, 0x50 ; pop rbp ; ret
0x0000000000404776 : add rsp, 0x60 ; pop rbp ; ret
0x0000000000401ed8 : add rsp, 0x70 ; pop rbp ; ret
0x000000000040654d : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000403ee2 : add rsp, 0x80 ; pop rbp ; ret
0x000000000040691c : add rsp, 0x90 ; pop rbp ; ret
0x0000000000407843 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040459b : add rsp, 0xc0 ; pop rbp ; ret
0x000000000040126d : add rsp, 8 ; ret
0x0000000000402f78 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000404e2a : and bh, 1 ; movzx eax, dil ; pop rbp ; ret
0x00000000004016e7 : and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000404e29 : and dil, 1 ; movzx eax, dil ; pop rbp ; ret
0x0000000000403595 : and eax, 0x409be0 ; mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x0000000000406957 : and eax, 0x48fffffd ; add esp, 0x20 ; pop rbp ; ret
0x00000000004029df : and eax, 0x60c2a0 ; pop rbp ; ret
0x0000000000402a03 : and eax, 0x60c2a8 ; pop rbp ; ret
0x000000000040b7c8 : call 0x2840b797
0x000000000040501b : call 0x4012a2
0x0000000000405062 : call 0x4012b2
0x0000000000401c6e : call 0x401489
0x0000000000401bdd : call 0x4015b9
0x0000000000401cb6 : call 0x401cc5
0x000000000040ad48 : call 0xffffffffd540acd6
0x00000000004063c9 : call 0xffffffffe902ed19
0x00000000004063c8 : call 0xffffffffe902ed1a
0x0000000000403a81 : call 0xffffffffff79c5d2
0x0000000000403a80 : call 0xffffffffff79c5d3
0x0000000000403bbf : call 0xffffffffff79c710
0x0000000000403bbe : call 0xffffffffff79c711
0x0000000000409269 : call qword ptr [r12 + rbx*8]
0x000000000040a547 : call qword ptr [rax]
0x000000000040abeb : call qword ptr [rdx]
0x000000000040ab0b : call qword ptr [rsi]
0x000000000040926a : call qword ptr [rsp + rbx*8]
0x000000000040170d : call rax
0x000000000040ad0b : call rbx
0x000000000040b1eb : call rdx
0x000000000040ad2b : call rsp
0x0000000000404d4d : clc ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408b4a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x00000000004028f5 : clc ; add rsp, 0x160 ; pop rbp ; ret
0x000000000040325e : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403159 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004034fd : clc ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000404775 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000401ed7 : clc ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000404c86 : clc ; add rsp, 0xc0 ; pop rbp ; ret
0x00000000004016af : clc ; jne 0x4016b8 ; pop rbp ; ret
0x0000000000405355 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004091bb : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000404cbe : clc ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040341d : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402d7b : clc ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000402d9b : clc ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000402dbb : clc ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000403421 : clc ; pop rbp ; ret
0x0000000000408c96 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004082cb : cld ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000408210 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040459a : cld ; add rsp, 0xc0 ; pop rbp ; ret
0x00000000004091b8 : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000408c93 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408c36 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040820d : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402ad9 : cmp al, 0x25 ; nop ; ret 0x60
0x0000000000406396 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040349a : cmp dword ptr [rax - 0x75], ecx ; jne 0x403484 ; call rax
0x000000000040166d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401680 ; pop rbp ; ret
0x00000000004071fc : cwde ; mov rcx, qword ptr [rax*8 + 0x40a138] ; jmp rcx
0x0000000000402ad6 : dec dword ptr [rax - 0x75] ; cmp al, 0x25 ; nop ; ret 0x60
0x000000000040501f : dec dword ptr [rax - 0x75] ; jge 0x40501b ; call 0x4012a7
0x0000000000408aaf : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000040505e : dec dword ptr [rcx + 0x49e8e445] ; ret 0xffff
0x0000000000404eb1 : div dword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x0000000000404eb0 : div qword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000040647b : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000403497 : enter -0x74b8, 0x39 ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x000000000040aa88 : enter -0x92, -1 ; ret 3
0x000000000040a845 : fcos ; call qword ptr [rax]
0x000000000040a8c5 : fdivp st(7) ; call qword ptr [rax]
0x000000000040a835 : fdivr st(7) ; call rax
0x0000000000405db3 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040926c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000401859 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401680 : hlt ; pop rbp ; mov edi, 0x60c260 ; jmp rax
0x0000000000405061 : in al, -0x18 ; ret 0xffff
0x000000000040504e : in al, -0x65 ; add byte ptr [rax - 0x75], cl ; xor al, 0x25 ; nop ; ret 0x60
0x000000000040b7c4 : in al, 0xd ; add byte ptr [rax], al ; call 0x2840b79b
0x0000000000401be1 : inc esi ; add al, 0x25 ; pushfq ; ret 0x60
0x0000000000401aef : insd dword ptr [rdi], dx ; add byte ptr [rax], al ; add dh, al ; add al, 0x25 ; popfq ; ret 0x60
0x0000000000407800 : int 0x80
0x0000000000401673 : ja 0x40167a ; pop rbp ; ret
0x0000000000404cc1 : ja 0x404d0e ; pop rbp ; ret
0x000000000040167f : je 0x40167d ; pop rbp ; mov edi, 0x60c260 ; jmp rax
0x0000000000402d7a : jge 0x402d7b ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000402d9a : jge 0x402d9b ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000402dba : jge 0x402dbb ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000403110 : jge 0x403103 ; mov rcx, qword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000404620 : jge 0x404613 ; mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000404cbd : jge 0x404cbe ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000405016 : jge 0x40500f ; mov rdi, qword ptr [rdi] ; call 0x4012a7
0x0000000000405022 : jge 0x405018 ; call 0x4012a4
0x000000000040ab09 : jle 0x40ab0c ; call qword ptr [rsi]
0x000000000040140b : jmp 0x401287
0x0000000000401ad4 : jmp 0x401b69
0x0000000000404801 : jmp 0x404804
0x0000000000403920 : jmp 0x4902c270
0x000000000040435e : jmp 0x4902ccae
0x00000000004043cb : jmp 0x4902cd1b
0x0000000000404b02 : jmp 0x4902d452
0x0000000000404b6f : jmp 0x4902d4bf
0x000000000040b38b : jmp qword ptr [rax]
0x000000000040ae4b : jmp qword ptr [rdi]
0x000000000040b26b : jmp qword ptr [rdx]
0x0000000000401687 : jmp rax
0x0000000000401ab3 : jmp rcx
0x00000000004016c7 : jmp rdx
0x00000000004016b0 : jne 0x4016b7 ; pop rbp ; ret
0x0000000000403186 : jne 0x403171 ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000040349d : jne 0x403481 ; call rax
0x0000000000404eb2 : jne 0x404eaa ; mov rax, rdx ; pop rbp ; ret
0x0000000000408528 : jne 0x408520 ; mov rax, rdx ; pop rbp ; ret
0x000000000040a535 : jns 0x40a538 ; call rax
0x0000000000401edb : jo 0x401f3c ; ret
0x00000000004054a5 : jo 0x405506 ; ret
0x0000000000406bb4 : jo 0x406c15 ; ret
0x0000000000406cee : jo 0x406d4f ; ret
0x00000000004070fe : jo 0x407106 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000406550 : js 0x4065b0 ; pop rbp ; ret
0x000000000040a840 : lock adc dword ptr [rax], eax ; add byte ptr [rax], al ; fcos ; call qword ptr [rax]
0x0000000000407f69 : loop 0x407fbb ; or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x0000000000408051 : loop 0x4080a3 ; or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x0000000000403187 : loopne 0x4031d9 ; mov esi, eax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000040308e : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040a830 : mov al, 0x11 ; add byte ptr [rax], al ; sbb al, -1 ; call rax
0x000000000040a870 : mov al, 0x12 ; add byte ptr [rax], al ; rcr dl, -1 ; call rax
0x000000000040a8f0 : mov al, 0x14 ; add byte ptr [rax], al ; push rax ; out -1, eax ; call rax
0x0000000000406a8b : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040691b : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000402f75 : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000408de6 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040810f : mov al, dh ; movzx eax, al ; pop rbp ; ret
0x000000000040810e : mov al, sil ; movzx eax, al ; pop rbp ; ret
0x000000000040808f : mov ax, si ; movzx eax, ax ; pop rbp ; ret
0x0000000000408093 : mov bh, -0x40 ; pop rbp ; ret
0x000000000040b269 : mov bh, -1 ; jmp qword ptr [rdx]
0x000000000040a585 : mov bh, bh ; call qword ptr [rax]
0x000000000040a575 : mov bh, bh ; call rax
0x000000000040b1e9 : mov bl, -1 ; call rdx
0x0000000000402a01 : mov byte ptr [0x60c2a8], al ; pop rbp ; ret
0x00000000004016e3 : mov byte ptr [rip + 0x20abae], 1 ; ret
0x0000000000404e2f : mov dh, -0x39 ; pop rbp ; ret
0x00000000004029c2 : mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402d65 : mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004040dc : mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000402f7b : mov dh, -0x40 ; pop rbp ; ret
0x0000000000401baf : mov dr0, word ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; add al, 0x25 ; pushfq ; ret 0x60
0x00000000004029dd : mov dword ptr [0x60c2a0], edi ; pop rbp ; ret
0x0000000000405356 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405264 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000405318 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040505f : mov dword ptr [rbp - 0x1c], eax ; call 0x4012b5
0x0000000000401939 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040308c : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401857 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004091b9 : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040341b : mov dword ptr [rbp - 8], eax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004053ce : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040359a : mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x0000000000404cc0 : mov dword ptr [rdi + 0x48], esi ; pop rbp ; ret
0x000000000040654c : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000405218 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004047d3 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402c2c : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405215 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000402baf : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000407d63 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004051cd : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040525e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000402e7f : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040318c : mov eax, dword ptr [rbp - 0x20] ; call rax
0x000000000040487f : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040531a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040549f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040654a : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000406a89 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000408c94 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004082c9 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040820e : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404d4b : mov eax, dword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040325c : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403157 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004034fb : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000404773 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000401ed5 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040341f : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402d7d : mov eax, dword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000402d9d : mov eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000402dbd : mov eax, dword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000407f2e : mov eax, edi ; pop rbp ; ret
0x0000000000403781 : mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404eb5 : mov eax, edx ; pop rbp ; ret
0x0000000000408090 : mov eax, esi ; movzx eax, ax ; pop rbp ; ret
0x0000000000407fa3 : mov eax, esi ; pop rbp ; ret
0x000000000040170b : mov ebp, esp ; call rax
0x0000000000401671 : mov ebp, esp ; ja 0x40167c ; pop rbp ; ret
0x0000000000401aac : mov ecx, dword ptr [rax*8 + 0x409300] ; jmp rcx
0x0000000000405557 : mov ecx, dword ptr [rax*8 + 0x409c30] ; jmp rcx
0x0000000000405837 : mov ecx, dword ptr [rax*8 + 0x409c78] ; jmp rcx
0x00000000004071fe : mov ecx, dword ptr [rax*8 + 0x40a138] ; jmp rcx
0x0000000000405261 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000403ae2 : mov ecx, dword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000403a7f : mov ecx, dword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000403113 : mov ecx, dword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000404623 : mov ecx, dword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x00000000004046f0 : mov ecx, dword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000407fcd : mov ecx, eax ; shl edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000407f9d : mov ecx, eax ; shr edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000401705 : mov edi, 0x60be20 ; mov rbp, rsp ; call rax
0x0000000000401682 : mov edi, 0x60c260 ; jmp rax
0x00000000004016c2 : mov edi, 0x60c260 ; jmp rdx
0x000000000040a5b5 : mov edi, dr1 ; call rax
0x0000000000405021 : mov edi, dword ptr [rbp - 0x10] ; call 0x4012a5
0x0000000000405015 : mov edi, dword ptr [rbp - 0x10] ; mov rdi, qword ptr [rdi] ; call 0x4012a8
0x0000000000404cbc : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000402d79 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000402d99 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000402db9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000403a83 : mov edi, dword ptr [rcx] ; call rax
0x0000000000403499 : mov edi, dword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x0000000000405019 : mov edi, dword ptr [rdi] ; call 0x4012a4
0x0000000000409267 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000040ae49 : mov edi, edi ; jmp qword ptr [rdi]
0x0000000000409266 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000403562 : mov esi, 0x48ffffff ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040349c : mov esi, dword ptr [rbp - 0x20] ; call rax
0x0000000000403117 : mov esi, dword ptr [rcx] ; call rax
0x00000000004016c0 : mov esi, eax ; mov edi, 0x60c260 ; jmp rdx
0x0000000000403189 : mov esi, eax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x00000000004029dc : mov qword ptr [0x60c2a0], rdi ; pop rbp ; ret
0x000000000040341a : mov qword ptr [rbp - 8], rax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004053cd : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404cbf : mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040308d : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000406a8a : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040654b : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x00000000004047d2 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402c2b : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405214 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000402bae : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000407d62 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004051cc : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402e7e : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040318b : mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000040487e : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040549e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000406a88 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000404d4a : mov rax, qword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040325b : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403156 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004034fa : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000404772 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000401ed4 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040341e : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402d7c : mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000402d9c : mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000402dbc : mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000407f2d : mov rax, rdi ; pop rbp ; ret
0x0000000000403780 : mov rax, rdx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404eb4 : mov rax, rdx ; pop rbp ; ret
0x000000000040170a : mov rbp, rsp ; call rax
0x0000000000401670 : mov rbp, rsp ; ja 0x40167d ; pop rbp ; ret
0x0000000000401aab : mov rcx, qword ptr [rax*8 + 0x409300] ; jmp rcx
0x0000000000405556 : mov rcx, qword ptr [rax*8 + 0x409c30] ; jmp rcx
0x0000000000405836 : mov rcx, qword ptr [rax*8 + 0x409c78] ; jmp rcx
0x00000000004071fd : mov rcx, qword ptr [rax*8 + 0x40a138] ; jmp rcx
0x0000000000403ae1 : mov rcx, qword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000403a7e : mov rcx, qword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000403112 : mov rcx, qword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000404622 : mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x00000000004046ef : mov rcx, qword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000405020 : mov rdi, qword ptr [rbp - 0x10] ; call 0x4012a6
0x0000000000405014 : mov rdi, qword ptr [rbp - 0x10] ; mov rdi, qword ptr [rdi] ; call 0x4012a9
0x0000000000404cbb : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000402d78 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000402d98 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000402db8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000403a82 : mov rdi, qword ptr [rcx] ; call rax
0x0000000000403498 : mov rdi, qword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x0000000000405018 : mov rdi, qword ptr [rdi] ; call 0x4012a5
0x000000000040349b : mov rsi, qword ptr [rbp - 0x20] ; call rax
0x0000000000403116 : mov rsi, qword ptr [rcx] ; call rax
0x00000000004016bf : mov rsi, rax ; mov edi, 0x60c260 ; jmp rdx
0x0000000000403188 : mov rsi, rax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000040505b : movabs eax, dword ptr [0x49e8e44589ffffc3] ; ret 0xffff
0x00000000004029c1 : movzx eax, al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402d64 : movzx eax, al ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004040db : movzx eax, al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000402f7a : movzx eax, al ; pop rbp ; ret
0x0000000000408092 : movzx eax, ax ; pop rbp ; ret
0x0000000000404e2e : movzx eax, bh ; pop rbp ; ret
0x0000000000404e2d : movzx eax, dil ; pop rbp ; ret
0x0000000000401aaa : nop ; mov rcx, qword ptr [rax*8 + 0x409300] ; jmp rcx
0x0000000000405056 : nop ; ret 0x60
0x0000000000409288 : nop dword ptr [rax + rax] ; ret
0x0000000000405dae : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000405daf : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040b265 : or byte ptr [rax], al ; add byte ptr [rax], cl ; mov bh, -1 ; jmp qword ptr [rdx]
0x0000000000401c6f : or eax, 0xf6fffff8 ; add al, 0x25 ; pushfq ; ret 0x60
0x000000000040b565 : or eax, dword ptr [rax] ; add al, ch ; ret 0xffff
0x0000000000406c71 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b545 : or eax, dword ptr [rax] ; add byte ptr [rax], cl ; ret 0xffff
0x000000000040b544 : or eax, dword ptr fs:[rax] ; add byte ptr [rax], cl ; ret 0xffff
0x0000000000407f2b : or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x0000000000407fa1 : or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000407f2a : or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x000000000040a8f5 : out -1, eax ; call rax
0x0000000000404e2b : out 1, eax ; movzx eax, dil ; pop rbp ; ret
0x0000000000407fa0 : out dx, eax ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000403019 : outsb dx, byte ptr [rsi] ; ret 0x280f
0x000000000040927c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040927e : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004076be : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000409280 : pop r14 ; pop r15 ; ret
0x00000000004076c0 : pop r15 ; pop rbp ; ret
0x0000000000409282 : pop r15 ; ret
0x00000000004016e2 : pop rbp ; mov byte ptr [rip + 0x20abae], 1 ; ret
0x0000000000401681 : pop rbp ; mov edi, 0x60c260 ; jmp rax
0x00000000004016be : pop rbp ; mov rsi, rax ; mov edi, 0x60c260 ; jmp rdx
0x000000000040927b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040927f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401675 : pop rbp ; ret
0x00000000004076bd : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040639a : pop rbx ; pop rbp ; ret
0x00000000004076c1 : pop rdi ; pop rbp ; ret
0x0000000000409283 : pop rdi ; ret
0x00000000004076bf : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000409281 : pop rsi ; pop r15 ; ret
0x000000000040927d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000403030 : pop rsp ; ret 0xf66
0x0000000000401ae9 : popfq ; ret 0x60
0x000000000040a8ef : push qword ptr [rax + 0x50000014] ; out -1, eax ; call rax
0x000000000040a5af : push qword ptr [rax + 0x70000007] ; mov edi, dr1 ; call rax
0x000000000040a66f : push qword ptr [rax + 0x7000000a] ; test al, -1 ; call rax
0x000000000040a56f : push qword ptr [rax + 6] ; mov bh, bh ; call rax
0x000000000040a82f : push qword ptr [rax - 0x7fffffef] ; fdivr st(7) ; call rax
0x000000000040a52f : push qword ptr [rax - 0xffffffb] ; jns 0x40a53e ; call rax
0x000000000040a83f : push rax ; adc dword ptr [rax], eax ; add byte ptr [rax], al ; fcos ; call qword ptr [rax]
0x000000000040a8bf : push rax ; adc eax, dword ptr [rax] ; add byte ptr [rax], dh ; fdivp st(7) ; call qword ptr [rax]
0x000000000040a8f4 : push rax ; out -1, eax ; call rax
0x0000000000403092 : push rax ; pop rbp ; ret
0x0000000000405db2 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000401704 : push rbp ; mov edi, 0x60be20 ; mov rbp, rsp ; call rax
0x000000000040873d : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000040647e : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000401c72 : push rsi ; add al, 0x25 ; pushfq ; ret 0x60
0x0000000000401adc : pushfq ; ret 0x60
0x0000000000407f9e : rcl ebx, -0x11 ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000407fce : rcl ebx, -0x19 ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000040a874 : rcr dl, -1 ; call rax
0x0000000000400029 : ret
0x0000000000400608 : ret 0
0x0000000000401612 : ret 0x20ab
0x0000000000401412 : ret 0x20ac
0x000000000040301a : ret 0x280f
0x0000000000402664 : ret 0x36e8
0x0000000000405057 : ret 0x60
0x0000000000403923 : ret 0x8348
0x00000000004071b9 : ret 0x8844
0x0000000000407c32 : ret 0x8948
0x0000000000405edd : ret 0x89a5
0x0000000000405db6 : ret 0x8b48
0x0000000000405dcb : ret 0xafe8
0x0000000000401b8d : ret 0xb0
0x00000000004039a6 : ret 0xb948
0x00000000004016a5 : ret 0xc148
0x0000000000406f43 : ret 0xd284
0x00000000004063cc : ret 0xee8
0x0000000000402d52 : ret 0xf280
0x0000000000403031 : ret 0xf66
0x0000000000404370 : ret 0xff3
0x00000000004075fa : ret 0xff9e
0x0000000000402180 : ret 0xffff
0x00000000004033d7 : ret 1
0x000000000040aa8c : ret 3
0x0000000000406482 : ret 8
0x00000000004077fb : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x00000000004054a0 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x40550b ; ret
0x00000000004016ac : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4016bb ; pop rbp ; ret
0x00000000004077fc : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x00000000004054a1 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x40550a ; ret
0x0000000000402d66 : ror byte ptr [rax - 0x7d], -0x3c ; pop rbp ; ret
0x00000000004040dd : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x00000000004070fa : ror byte ptr [rax - 0x7f], -0x3c ; jo 0x40710a ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040873e : ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000040647f : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x00000000004016ae : sar eax, 1 ; jne 0x4016b9 ; pop rbp ; ret
0x000000000040b9a9 : sar edi, 1 ; jmp rax
0x00000000004016ad : sar rax, 1 ; jne 0x4016ba ; pop rbp ; ret
0x000000000040a834 : sbb al, -1 ; call rax
0x000000000040b540 : sbb al, 0 ; add byte ptr [rax], al ; or eax, dword ptr fs:[rax] ; add byte ptr [rax], cl ; ret 0xffff
0x00000000004008de : sbb dword ptr [rax], eax ; nop ; ret 0x60
0x00000000004016e5 : scasb al, byte ptr [rdi] ; stosd dword ptr [rdi], eax ; and byte ptr [rax], al ; add ebx, esi ; ret
0x00000000004037a4 : sete al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004037a6 : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000040304f : shl dword ptr [rsi + 0xf], 0x5c ; ret 0xf66
0x0000000000407fcf : shl edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000407f68 : shl edx, cl ; or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x0000000000407f9f : shr edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000407f28 : shr edx, cl ; or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x0000000000408de8 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004016e6 : stosd dword ptr [rdi], eax ; and byte ptr [rax], al ; add ebx, esi ; ret
0x000000000040a944 : sub dl, -1 ; call qword ptr [rax]
0x00000000004092e1 : sub esp, 8 ; add rsp, 8 ; ret
0x00000000004092e0 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040a675 : test al, -1 ; call rax
0x000000000040a545 : test bh, bh ; call qword ptr [rax]
0x000000000040928a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040ad09 : test edi, edi ; call rbx
0x000000000040504f : wait ; add byte ptr [rax - 0x75], cl ; xor al, 0x25 ; nop ; ret 0x60
0x000000000040ad29 : xchg bh, bh ; call rsp
0x0000000000402d51 : xchg eax, ebp ; ret 0xf280
0x0000000000406f42 : xchg eax, esp ; ret 0xd284
0x00000000004037a5 : xchg eax, esp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000407f2c : xlatb ; mov rax, rdi ; pop rbp ; ret
0x0000000000405054 : xor al, 0x25 ; nop ; ret 0x60
0x0000000000408b4e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000405316 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
