0x000000000040cd73 : adc dword ptr [rax - 0x7f], ecx ; ret 1
0x0000000000403bb9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040e6cb : add ah, al ; add dword ptr [rax], eax ; add al, al ; cmp edi, edi ; call qword ptr [rsi]
0x00000000004026a2 : add ah, byte ptr [rcx] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401694 : add ah, byte ptr [rcx] ; jmp rax
0x00000000004016d4 : add ah, byte ptr [rcx] ; jmp rdx
0x00000000004051a4 : add ah, byte ptr [rcx] ; mov dword ptr [rbp - 4], eax ; call 0x4013c8
0x00000000004022a1 : add ah, byte ptr [rcx] ; pop rbp ; ret
0x000000000040e433 : add al, ah ; ret
0x000000000040e54f : add al, ah ; xor edi, edi ; call rcx
0x000000000040e64f : add al, al ; cmp bh, bh ; jmp rbx
0x000000000040e6cf : add al, al ; cmp edi, edi ; call qword ptr [rsi]
0x000000000040e413 : add al, al ; ret 0xffff
0x000000000040e58f : add al, al ; xor bh, bh ; jmp rdx
0x000000000040c814 : add al, byte ptr [rax] ; add byte ptr [rcx - 0xdf43], al ; call qword ptr [rax]
0x0000000000401747 : add al, ch ; ret
0x00000000004051c3 : add al, ch ; xlatb ; ret
0x000000000040f26f : add al, dh ; ret 0xffff
0x000000000040d0af : add bl, dh ; ret
0x000000000040e54b : add byte ptr [rax + rax], al ; add al, ah ; xor edi, edi ; call rcx
0x000000000040a31f : add byte ptr [rax - 0x75], cl ; clc ; mov rsp, rbp ; pop rbp ; ret
0x000000000040a885 : add byte ptr [rax - 0x75], cl ; loopne 0x40a8ee ; ret
0x000000000040b5a9 : add byte ptr [rax - 0x75], cl ; push rbp ; call 0x21033701
0x0000000000404b98 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000040bec6 : add byte ptr [rax - 0x77], cl ; fsubr st(1) ; ret 0xffff
0x0000000000407c8c : add byte ptr [rax - 0x77], cl ; ret 0x5be8
0x0000000000407d05 : add byte ptr [rax - 0x77], cl ; ret 0xe2e8
0x000000000040e54d : add byte ptr [rax], al ; add al, ah ; xor edi, edi ; call rcx
0x000000000040e58d : add byte ptr [rax], al ; add al, al ; xor bh, bh ; jmp rdx
0x0000000000401745 : add byte ptr [rax], al ; add al, ch ; ret
0x000000000040d0ad : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040a883 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; loopne 0x40a8f0 ; ret
0x000000000040b5a7 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbp ; call 0x21033703
0x000000000040bec4 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fsubr st(1) ; ret 0xffff
0x000000000040d0ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040a882 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x20] ; pop rbp ; ret
0x000000000040d0ac : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040e54a : add byte ptr [rax], al ; add byte ptr [rax], r8b ; add al, ah ; xor edi, edi ; call rcx
0x000000000040f269 : add byte ptr [rax], al ; add byte ptr [rbp + rcx], ah ; add al, dh ; ret 0xffff
0x000000000040c9a5 : add byte ptr [rax], al ; add byte ptr [rcx - 0xdf43], al ; call qword ptr [rax]
0x0000000000401fd9 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000401d73 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x0000000000409b17 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x0000000000401fcc : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040e64a : add byte ptr [rax], al ; add dword ptr [rax], r8d ; add al, al ; cmp bh, bh ; jmp rbx
0x0000000000403b7a : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403920 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401283 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000401af2 : add byte ptr [rax], al ; call 0x401738
0x00000000004013f9 : add byte ptr [rax], al ; jmp 0x401299
0x000000000040a9cf : add byte ptr [rax], al ; mov dword ptr [rbp - 4], eax ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000405df1 : add byte ptr [rax], al ; mov dword ptr [rdi], eax ; pop rbp ; ret
0x0000000000402762 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040a884 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x20] ; pop rbp ; ret
0x000000000040e40a : add byte ptr [rax], al ; nop ; ret 0xffff
0x0000000000402283 : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000404a5b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004038e8 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040d0ae : add byte ptr [rax], al ; ret
0x000000000040e58e : add byte ptr [rax], al ; sal byte ptr [rdx], -1 ; jmp rdx
0x000000000040e64e : add byte ptr [rax], al ; sar byte ptr [rax], -1 ; jmp rbx
0x000000000040e6ce : add byte ptr [rax], al ; sar byte ptr [rbx], -1 ; call qword ptr [rsi]
0x000000000040e58a : add byte ptr [rax], al ; test byte ptr [rax], al ; add byte ptr [rax], al ; sal byte ptr [rdx], -1 ; jmp rdx
0x000000000040e15a : add byte ptr [rax], al ; xor edi, edi ; call rax
0x000000000040e41b : add byte ptr [rax], dh ; ret
0x000000000040e403 : add byte ptr [rax], dh ; ret 0xffff
0x000000000040e54c : add byte ptr [rax], r8b ; add al, ah ; xor edi, edi ; call rcx
0x000000000040f26b : add byte ptr [rbp + rcx], ah ; add al, dh ; ret 0xffff
0x0000000000404a5c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004038e9 : add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004051a6 : add byte ptr [rcx + 0x11e8fc45], cl ; ret 0xffff
0x000000000040a9d0 : add byte ptr [rcx + 0x458bfc45], cl ; cld ; pop rbp ; ret
0x000000000040e64b : add byte ptr [rcx + rax], al ; add al, al ; cmp bh, bh ; jmp rbx
0x000000000040c816 : add byte ptr [rcx - 0xdf43], al ; call qword ptr [rax]
0x00000000004016f8 : add byte ptr [rcx], al ; ret
0x000000000040e157 : add byte ptr [rdi], ch ; add byte ptr [rax], al ; xor edi, edi ; call rax
0x0000000000401741 : add byte ptr [rdi], cl ; test byte ptr [rdx], cl ; add byte ptr [rax], al ; add al, ch ; ret
0x0000000000401fdb : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000401d75 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x0000000000409b19 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x0000000000401fce : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040e64d : add dword ptr [rax], eax ; add al, al ; cmp bh, bh ; jmp rbx
0x000000000040e6cd : add dword ptr [rax], eax ; add al, al ; cmp edi, edi ; call qword ptr [rsi]
0x0000000000403b78 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404a5a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004038e7 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040c8d0 : add dword ptr [rax], eax ; add byte ptr [rcx - 0xdf43], al ; call qword ptr [rax]
0x000000000040e64c : add dword ptr [rax], r8d ; add al, al ; cmp bh, bh ; jmp rbx
0x000000000040256c : add dword ptr [rdi], ecx ; mov dh, -0x3e ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401d02 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401fe9 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401e7c : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000401eba : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004016f4 : add eax, 0x20eb9e ; add ebx, esi ; ret
0x0000000000406553 : add eax, 0x8301148b ; ret 0x89ee
0x00000000004016bb : add eax, edx ; sar rax, 1 ; jne 0x4016cc ; pop rbp ; ret
0x00000000004016f9 : add ebx, esi ; ret
0x000000000040184b : add esp, 0x10 ; pop rbp ; ret
0x0000000000405b6c : add esp, 0x130 ; pop rbp ; ret
0x00000000004038e4 : add esp, 0x138 ; pop rbx ; pop rbp ; ret
0x000000000040227f : add esp, 0x1a0 ; pop rbp ; ret
0x000000000040b54e : add esp, 0x1b8 ; pop rbp ; ret
0x000000000040d02b : add esp, 0x1c0 ; pop rbp ; ret
0x0000000000401d07 : add esp, 0x20 ; pop rbp ; ret
0x000000000040192d : add esp, 0x30 ; pop rbp ; ret
0x0000000000401e81 : add esp, 0x40 ; pop rbp ; ret
0x0000000000403f5c : add esp, 0x50 ; pop rbp ; ret
0x00000000004029f3 : add esp, 0x70 ; pop rbp ; ret
0x0000000000403a9e : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004053c3 : add esp, 0x820 ; pop rbp ; ret
0x0000000000403e6d : add esp, 0x90 ; pop rbp ; ret
0x0000000000404be4 : add esp, 0xa0 ; pop rbp ; ret
0x0000000000401286 : add esp, 8 ; ret
0x00000000004016ba : add rax, rdx ; sar rax, 1 ; jne 0x4016cd ; pop rbp ; ret
0x000000000040184a : add rsp, 0x10 ; pop rbp ; ret
0x0000000000405b6b : add rsp, 0x130 ; pop rbp ; ret
0x00000000004038e3 : add rsp, 0x138 ; pop rbx ; pop rbp ; ret
0x000000000040227e : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000040b54d : add rsp, 0x1b8 ; pop rbp ; ret
0x000000000040d02a : add rsp, 0x1c0 ; pop rbp ; ret
0x0000000000401d06 : add rsp, 0x20 ; pop rbp ; ret
0x000000000040192c : add rsp, 0x30 ; pop rbp ; ret
0x0000000000401e80 : add rsp, 0x40 ; pop rbp ; ret
0x0000000000403f5b : add rsp, 0x50 ; pop rbp ; ret
0x00000000004029f2 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000403a9d : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004053c2 : add rsp, 0x820 ; pop rbp ; ret
0x0000000000403e6c : add rsp, 0x90 ; pop rbp ; ret
0x0000000000404be3 : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000401285 : add rsp, 8 ; ret
0x0000000000401eb9 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000405def : and byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], eax ; pop rbp ; ret
0x00000000004016f7 : and byte ptr [rax], al ; add ebx, esi ; ret
0x00000000004053c5 : and byte ptr [rax], cl ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000403ea7 : and eax, 0x48fffffd ; add esp, 0x20 ; pop rbp ; ret
0x000000000040229f : and eax, 0x6102a0 ; pop rbp ; ret
0x00000000004022c3 : and eax, 0x6102a8 ; pop rbp ; ret
0x000000000040b5ad : call 0x210336fd
0x000000000040516b : call 0x401382
0x00000000004051aa : call 0x4013c2
0x0000000000401af4 : call 0x401736
0x000000000040cd70 : call 0x485258c3
0x000000000040cd6f : call 0x485258c4
0x0000000000403919 : call 0xffffffffe902c269
0x0000000000403918 : call 0xffffffffe902c26a
0x000000000040d089 : call qword ptr [r12 + rbx*8]
0x000000000040c760 : call qword ptr [rax]
0x000000000040ca3c : call qword ptr [rbx]
0x000000000040c99e : call qword ptr [rcx]
0x000000000040ef53 : call qword ptr [rdi]
0x000000000040677e : call qword ptr [rdx]
0x000000000040c9d3 : call qword ptr [rsi]
0x000000000040d08a : call qword ptr [rsp + rbx*8]
0x000000000040171d : call rax
0x000000000040f273 : call rbx
0x000000000040e553 : call rcx
0x000000000040e8f3 : call rdx
0x0000000000405b6a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x0000000000404f4f : clc ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004044a1 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000405278 : clc ; idiv edi ; call rax
0x00000000004016bf : clc ; jne 0x4016c8 ; pop rbp ; ret
0x00000000004028a5 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040a7db : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040a323 : clc ; mov rsp, rbp ; pop rbp ; ret
0x000000000040a7de : clc ; pop rbp ; ret
0x0000000000405cb6 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040b54c : cld ; add rsp, 0x1b8 ; pop rbp ; ret
0x000000000040d029 : cld ; add rsp, 0x1c0 ; pop rbp ; ret
0x000000000040553b : cld ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405480 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004053c1 : cld ; add rsp, 0x820 ; pop rbp ; ret
0x00000000004051a9 : cld ; call 0x4013c3
0x00000000004051a8 : cld ; call 0x4013c4
0x000000000040a7d8 : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000405cb3 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405c56 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040547d : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040a9d3 : cld ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040a9d6 : cld ; pop rbp ; ret
0x000000000040e651 : cmp bh, bh ; jmp rbx
0x00000000004038e6 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040167d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401690 ; pop rbp ; ret
0x000000000040e6d1 : cmp edi, edi ; call qword ptr [rsi]
0x000000000040459c : cwde ; mov rcx, qword ptr [rax*8 + 0x40db08] ; jmp rcx
0x0000000000406578 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; fild word ptr [rax] ; jmp rcx
0x000000000040720c : dec dword ptr [rax - 0x77] ; ret 0x8148
0x0000000000405acf : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000040c4d2 : dec dword ptr [rcx] ; ret 0x9589
0x00000000004039cb : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000401fca : fadd qword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004081a9 : fiadd word ptr [rax] ; jmp rcx
0x00000000004045a2 : fild dword ptr [rax] ; jmp rcx
0x000000000040657e : fild word ptr [rax] ; jmp rcx
0x0000000000403303 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000401de2 : fmul dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040d08c : fmul qword ptr [rax - 0x7d] ; ret
0x000000000040beca : fsubr st(1) ; ret 0xffff
0x0000000000401849 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401690 : hlt ; pop rbp ; mov edi, 0x610260 ; jmp rax
0x0000000000405279 : idiv edi ; call rax
0x000000000040a326 : in al, dx ; pop rbp ; ret
0x0000000000404ba0 : int 0x80
0x0000000000401683 : ja 0x40168a ; pop rbp ; ret
0x000000000040168f : je 0x40168d ; pop rbp ; mov edi, 0x610260 ; jmp rax
0x0000000000405166 : jge 0x40515f ; mov rdi, rax ; call 0x401387
0x00000000004013fb : jmp 0x401297
0x0000000000407d2f : jmp 0xffffffff8a030647
0x000000000040ea93 : jmp qword ptr [rax]
0x000000000040e973 : jmp qword ptr [rdx]
0x0000000000401697 : jmp rax
0x000000000040e653 : jmp rbx
0x0000000000402aae : jmp rcx
0x00000000004016d7 : jmp rdx
0x00000000004016c0 : jne 0x4016c7 ; pop rbp ; ret
0x00000000004029f5 : jo 0x402a56 ; ret
0x0000000000404104 : jo 0x404165 ; ret
0x000000000040423e : jo 0x40429f ; ret
0x0000000000403aa0 : js 0x403b00 ; pop rbp ; ret
0x000000000040e417 : lcall ptr [rax + 0x3000000e] ; ret
0x000000000040e407 : lcall ptr [rax + 0xe] ; add byte ptr [rax], al ; nop ; ret 0xffff
0x000000000040a889 : loopne 0x40a8ea ; ret
0x000000000040a888 : loopne 0x40a8eb ; ret
0x0000000000403fdb : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000403e6b : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000401f00 : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401eb6 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004022c1 : mov byte ptr [0x6102a8], al ; pop rbp ; ret
0x00000000004016f3 : mov byte ptr [rip + 0x20eb9e], 1 ; ret
0x000000000040256e : mov dh, -0x3e ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401d04 : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401feb : mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401e7e : mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000401ebc : mov dh, -0x40 ; pop rbp ; ret
0x000000000040229d : mov dword ptr [0x6102a0], edi ; pop rbp ; ret
0x00000000004028a6 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004027b4 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000402868 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000405165 : mov dword ptr [rbp - 0x10], edi ; mov rdi, rax ; call 0x401388
0x000000000040a94c : mov dword ptr [rbp - 0x18], eax ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000401929 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401847 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004051a7 : mov dword ptr [rbp - 4], eax ; call 0x4013c5
0x000000000040a9d1 : mov dword ptr [rbp - 4], eax ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040a7d9 : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040291e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405df3 : mov dword ptr [rdi], eax ; pop rbp ; ret
0x000000000040b550 : mov eax, 0x5d000001 ; ret
0x000000000040e420 : mov eax, 0x7000000e ; ret
0x0000000000403a9c : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000402768 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000402042 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004024ec : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402765 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040246f : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405103 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040271d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004027ae : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040a950 : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040a887 : mov eax, dword ptr [rbp - 0x20] ; pop rbp ; ret
0x000000000040286a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004029ef : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000403a9a : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000403fd9 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000405cb4 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405539 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040547e : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040a9d4 : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000404f4d : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040449f : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040a321 : mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040a7dc : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040171b : mov ebp, esp ; call rax
0x0000000000401681 : mov ebp, esp ; ja 0x40168c ; pop rbp ; ret
0x0000000000402aa7 : mov ecx, dword ptr [rax*8 + 0x40d600] ; jmp rcx
0x0000000000402d87 : mov ecx, dword ptr [rax*8 + 0x40d648] ; jmp rcx
0x000000000040459e : mov ecx, dword ptr [rax*8 + 0x40db08] ; jmp rcx
0x00000000004081a5 : mov ecx, dword ptr [rax*8 + 0x40dec0] ; jmp rcx
0x000000000040657a : mov ecx, dword ptr [rax*8 + 0x40df48] ; jmp rcx
0x000000000040aa37 : mov ecx, dword ptr [rax*8 + 0x40df70] ; jmp rcx
0x000000000040c752 : mov ecx, dword ptr [rax*8 + 0x40e048] ; jmp rcx
0x00000000004027b1 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401715 : mov edi, 0x60fe20 ; mov rbp, rsp ; call rax
0x0000000000401692 : mov edi, 0x610260 ; jmp rax
0x00000000004016d2 : mov edi, 0x610260 ; jmp rdx
0x0000000000405169 : mov edi, eax ; call 0x401384
0x000000000040d087 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000040d086 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x00000000004016d0 : mov esi, eax ; mov edi, 0x610260 ; jmp rdx
0x000000000040a325 : mov esp, ebp ; pop rbp ; ret
0x000000000040229c : mov qword ptr [0x6102a0], rdi ; pop rbp ; ret
0x0000000000405164 : mov qword ptr [rbp - 0x10], rdi ; mov rdi, rax ; call 0x401389
0x000000000040a94b : mov qword ptr [rbp - 0x18], rax ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040291d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403fda : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000403a9b : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000402041 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004024eb : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402764 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040246e : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405102 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040271c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040a94f : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040a886 : mov rax, qword ptr [rbp - 0x20] ; pop rbp ; ret
0x00000000004029ee : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000403fd8 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000404f4c : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040449e : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040a320 : mov rax, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040171a : mov rbp, rsp ; call rax
0x0000000000401680 : mov rbp, rsp ; ja 0x40168d ; pop rbp ; ret
0x0000000000402aa6 : mov rcx, qword ptr [rax*8 + 0x40d600] ; jmp rcx
0x0000000000402d86 : mov rcx, qword ptr [rax*8 + 0x40d648] ; jmp rcx
0x000000000040459d : mov rcx, qword ptr [rax*8 + 0x40db08] ; jmp rcx
0x00000000004081a4 : mov rcx, qword ptr [rax*8 + 0x40dec0] ; jmp rcx
0x0000000000406579 : mov rcx, qword ptr [rax*8 + 0x40df48] ; jmp rcx
0x000000000040aa36 : mov rcx, qword ptr [rax*8 + 0x40df70] ; jmp rcx
0x000000000040c751 : mov rcx, qword ptr [rax*8 + 0x40e048] ; jmp rcx
0x0000000000405168 : mov rdi, rax ; call 0x401385
0x00000000004016cf : mov rsi, rax ; mov edi, 0x610260 ; jmp rdx
0x000000000040a324 : mov rsp, rbp ; pop rbp ; ret
0x000000000040e42c : movabs al, byte ptr [0xe000000ef8ffffc3] ; ret
0x000000000040c8cf : movsd dword ptr [rdi], dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xdf43], al ; call qword ptr [rax]
0x000000000040a3ca : movsx eax, cl ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401d03 : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401fea : movzx eax, al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401e7d : movzx eax, al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000401ebb : movzx eax, al ; pop rbp ; ret
0x000000000040256d : movzx eax, dl ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040e40c : nop ; ret 0xffff
0x000000000040d0a8 : nop dword ptr [rax + rax] ; ret
0x000000000040657b : or al, 0xffffffffffffffc5 ; fild word ptr [rax] ; jmp rcx
0x00000000004032fe : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x00000000004032ff : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000401d6f : or byte ptr [rcx + 0x2ff9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x0000000000402550 : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000405dee : or eax, 0x20 ; mov dword ptr [rdi], eax ; pop rbp ; ret
0x00000000004041c1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d09c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040d09e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000404a5e : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040d0a0 : pop r14 ; pop r15 ; ret
0x0000000000404a60 : pop r15 ; pop rbp ; ret
0x000000000040d0a2 : pop r15 ; ret
0x00000000004016f2 : pop rbp ; mov byte ptr [rip + 0x20eb9e], 1 ; ret
0x0000000000401691 : pop rbp ; mov edi, 0x610260 ; jmp rax
0x00000000004016ce : pop rbp ; mov rsi, rax ; mov edi, 0x610260 ; jmp rdx
0x000000000040d09b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040d09f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401685 : pop rbp ; ret
0x0000000000404a5d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004038ea : pop rbx ; pop rbp ; ret
0x0000000000404a61 : pop rdi ; pop rbp ; ret
0x000000000040d0a3 : pop rdi ; ret
0x0000000000404a5f : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040d0a1 : pop rsi ; pop r15 ; ret
0x000000000040d09d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000403f5e : push rax ; pop rbp ; ret
0x000000000040b5ac : push rbp ; call 0x210336fe
0x0000000000403302 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000401714 : push rbp ; mov edi, 0x60fe20 ; mov rbp, rsp ; call rax
0x000000000040575d : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x00000000004039ce : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000401289 : ret
0x000000000040918d : ret 0
0x000000000040af4b : ret 0x10
0x000000000040b5b0 : ret 0x20
0x0000000000401602 : ret 0x20eb
0x0000000000401402 : ret 0x20ec
0x0000000000405e32 : ret 0x28e8
0x000000000040afb3 : ret 0x4810
0x0000000000401d78 : ret 0x5588
0x00000000004073ee : ret 0x58
0x0000000000407c8f : ret 0x5be8
0x000000000040720f : ret 0x8148
0x000000000040256f : ret 0x8348
0x0000000000407d32 : ret 0x8589
0x0000000000404559 : ret 0x8844
0x0000000000404fd2 : ret 0x8948
0x000000000040342d : ret 0x89a5
0x0000000000406558 : ret 0x89ee
0x0000000000403306 : ret 0x8b48
0x0000000000409b1c : ret 0x9588
0x000000000040c4d4 : ret 0x9589
0x000000000040331b : ret 0xafe8
0x0000000000401b26 : ret 0xb0
0x00000000004016b5 : ret 0xc148
0x0000000000401fd1 : ret 0xd284
0x0000000000401fde : ret 0xe280
0x0000000000407d08 : ret 0xe2e8
0x000000000040391c : ret 0xee8
0x000000000040516d : ret 0xffff
0x0000000000402087 : ret 1
0x00000000004039d2 : ret 8
0x000000000040e414 : rol dl, -1 ; lcall ptr [rax + 0x3000000e] ; ret
0x0000000000404b9b : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x00000000004029f0 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x402a5b ; ret
0x00000000004016bc : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4016cb ; pop rbp ; ret
0x0000000000404b9c : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x00000000004029f1 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x402a5a ; ret
0x0000000000401e7f : ror byte ptr [rax - 0x7d], -0x3c ; pop rbp ; ret
0x000000000040575e : ror byte ptr [rax - 0x7f], 1 ; ret 1
0x00000000004039cf : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000040e590 : sal byte ptr [rdx], -1 ; jmp rdx
0x000000000040e650 : sar byte ptr [rax], -1 ; jmp rbx
0x000000000040e6d0 : sar byte ptr [rbx], -1 ; call qword ptr [rsi]
0x0000000000401fd6 : sar dword ptr [rip], 0xf ; xchg eax, ebp ; ret 0xe280
0x00000000004016be : sar eax, 1 ; jne 0x4016c9 ; pop rbp ; ret
0x00000000004016bd : sar rax, 1 ; jne 0x4016ca ; pop rbp ; ret
0x0000000000401eb8 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000404f01 : stosd dword ptr [rdi], eax ; ret
0x000000000040d0dd : sub esp, 8 ; add rsp, 8 ; ret
0x000000000040d0dc : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040d0aa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040e58c : test byte ptr [rax], al ; add byte ptr [rax], al ; sal byte ptr [rdx], -1 ; jmp rdx
0x0000000000401743 : test byte ptr [rdx], cl ; add byte ptr [rax], al ; add al, ch ; ret
0x0000000000405277 : test edi, eax ; idiv edi ; call rax
0x0000000000401fdd : xchg eax, ebp ; ret 0xe280
0x0000000000401d77 : xchg eax, esp ; ret 0x5588
0x0000000000409b1b : xchg eax, esp ; ret 0x9588
0x0000000000401fd0 : xchg eax, esp ; ret 0xd284
0x00000000004051c5 : xlatb ; ret
0x000000000040e591 : xor bh, bh ; jmp rdx
0x0000000000405b6e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004023b7 : xor eax, 0x48ffffef ; add esp, 0x10 ; pop rbp ; ret
0x000000000040e15d : xor edi, edi ; call rax
0x000000000040e551 : xor edi, edi ; call rcx
0x0000000000402866 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
