0x0000000000402b16 : adc al, 0x25 ; mov eax, 0x81006136 ; ret 1
0x000000000040f018 : adc al, 0x48 ; add esp, 0x10 ; pop rbp ; ret
0x000000000040c835 : adc al, 1 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000410e3c : adc byte ptr [rcx - 1], bl ; call rax
0x00000000004056f0 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000410efc : adc byte ptr [rdx - 1], dh ; call rax
0x000000000040effc : adc dh, dh ; ret 0xf01
0x0000000000401dd6 : adc eax, 0xf3010021 ; ret
0x0000000000409419 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000410dbd : adc edi, edi ; call rax
0x0000000000406fb2 : add al, 0x25 ; nop ; cmp ah, byte ptr [rcx] ; pop rbp ; ret
0x000000000041123b : add al, al ; jrcxz 0x411242 ; call rax
0x00000000004113f7 : add al, bh ; and bh, bh ; call qword ptr [rax]
0x000000000040830b : add al, byte ptr [rcx] ; jmp rcx
0x0000000000409e97 : add al, ch ; ret
0x000000000040e598 : add al, ch ; ret 0xff32
0x0000000000405815 : add al, ch ; xchg eax, ebp ; ret 0xffff
0x0000000000410dcb : add al, dh ; and bh, bh ; call qword ptr [rax]
0x0000000000410ebb : add al, dh ; movsxd rdi, edi ; call rax
0x000000000040f1af : add bl, dh ; ret
0x000000000040d4f3 : add byte ptr [rax + 1], cl ; ret 0x4a3b
0x00000000004028db : add byte ptr [rax - 0x73], cl ; xor al, 0x25 ; ret 0x40fc
0x000000000040ace8 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000410e3a : add byte ptr [rax], al ; adc byte ptr [rcx - 1], bl ; call rax
0x0000000000410efa : add byte ptr [rax], al ; adc byte ptr [rdx - 1], dh ; call rax
0x0000000000409e95 : add byte ptr [rax], al ; add al, ch ; ret
0x000000000040e596 : add byte ptr [rax], al ; add al, ch ; ret 0xff32
0x000000000040f1ad : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040d4f1 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x4a3b
0x00000000004028d9 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; xor al, 0x25 ; ret 0x40fc
0x000000000040f1ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004002f0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400710 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x00000000004002f2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400712 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x000000000040324b : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040eef1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404418 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040bad9 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004002f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400714 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x0000000000406671 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7038b], cl ; ret 0xb0
0x000000000040338e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5588
0x000000000040372d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x9588
0x000000000040ef42 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040369f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf280
0x0000000000406255 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004113f2 : add byte ptr [rax], al ; add dword ptr fs:[rax], eax ; add al, bh ; and bh, bh ; call qword ptr [rax]
0x000000000040324d : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000409180 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040eef3 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040441a : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004017fb : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004113f6 : add byte ptr [rax], al ; clc ; and bh, bh ; call qword ptr [rax]
0x0000000000411556 : add byte ptr [rax], al ; cmp byte ptr [rcx - 1], dl ; call qword ptr [rax]
0x0000000000411c36 : add byte ptr [rax], al ; cwde ; jg 0x411c3f ; jmp qword ptr [rdx]
0x0000000000411976 : add byte ptr [rax], al ; cwde ; jns 0x41197f ; call rdx
0x0000000000411972 : add byte ptr [rax], al ; in al, 6 ; add byte ptr [rax], al ; cwde ; jns 0x411983 ; call rdx
0x0000000000401879 : add byte ptr [rax], al ; jmp 0x401819
0x0000000000411b16 : add byte ptr [rax], al ; mov byte ptr [rsi - 1], bh ; jmp qword ptr [rax]
0x000000000040badb : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000407fc2 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000403fe8 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040abab : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000409148 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000410dba : add byte ptr [rax], al ; push rax ; adc edi, edi ; call rax
0x0000000000410f7a : add byte ptr [rax], al ; push rax ; mov bh, bh ; call rax
0x000000000041120a : add byte ptr [rax], al ; rcr bh, -1 ; call qword ptr [rax]
0x00000000004002f6 : add byte ptr [rax], al ; ret
0x0000000000400716 : add byte ptr [rax], al ; ret 2
0x0000000000410e0a : add byte ptr [rax], al ; sal byte ptr [rdi], -1 ; call qword ptr [rax]
0x000000000041123a : add byte ptr [rax], al ; shl bl, -1 ; call rax
0x0000000000410e8a : add byte ptr [rax], al ; shl byte ptr [rax - 1], 1 ; call qword ptr [rax]
0x00000000004119f6 : add byte ptr [rax], al ; sub byte ptr [rbp - 1], bh ; jmp qword ptr [rdx]
0x0000000000411b12 : add byte ptr [rax], al ; test byte ptr [rax], cl ; add byte ptr [rax], al ; mov byte ptr [rsi - 1], bh ; jmp qword ptr [rax]
0x00000000004119f7 : add byte ptr [rax], ch ; jge 0x4119fe ; jmp qword ptr [rdx]
0x0000000000410efb : add byte ptr [rax], dl ; jb 0x410f02 ; call rax
0x0000000000410f8b : add byte ptr [rax], dl ; mov edi, edi ; call qword ptr [rax]
0x0000000000410f3b : add byte ptr [rax], dl ; test bh, bh ; call rax
0x000000000040abac : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000409149 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000406673 : add byte ptr [rbx - 0x76b7038b], cl ; ret 0xb0
0x000000000040482c : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5588
0x0000000000403729 : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x9588
0x000000000040369b : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf280
0x00000000004113f3 : add byte ptr [rcx + rax], ah ; add al, bh ; and bh, bh ; call qword ptr [rax]
0x0000000000403fe6 : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401dd8 : add byte ptr [rcx], al ; ret
0x00000000004119f3 : add byte ptr [rdi + rax], ah ; add byte ptr [rax], ch ; jge 0x411a02 ; jmp qword ptr [rdx]
0x0000000000403390 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5588
0x000000000040372f : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x9588
0x000000000040ef44 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004036a1 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf280
0x0000000000406257 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040c922 : add byte ptr es:[rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004113f5 : add dword ptr [rax], eax ; add al, bh ; and bh, bh ; call qword ptr [rax]
0x00000000004093d8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040abaa : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000409147 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000407436 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040d99b : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000040e90a : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004113f4 : add dword ptr fs:[rax], eax ; add al, bh ; and bh, bh ; call qword ptr [rax]
0x0000000000401dd4 : add eax, 0x2115be ; add ebx, esi ; ret
0x00000000004017f9 : add eax, dword ptr [rbx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000401d9b : add eax, edx ; sar rax, 1 ; jne 0x401dac ; pop rbp ; ret
0x000000000040dee9 : add eax, esi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x0000000000401dd9 : add ebx, esi ; ret
0x000000000040c86b : add edi, eax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x0000000000401fab : add esp, 0x10 ; pop rbp ; ret
0x0000000000403fe4 : add esp, 0x100 ; pop rbp ; ret
0x000000000040e365 : add esp, 0x10e0 ; pop rbp ; ret
0x00000000004056ee : add esp, 0x110 ; pop rbp ; ret
0x000000000040c5cc : add esp, 0x130 ; pop rbp ; ret
0x0000000000409144 : add esp, 0x138 ; pop rbx ; pop rbp ; ret
0x0000000000407b87 : add esp, 0x170 ; pop rbp ; ret
0x000000000040ae9c : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000403307 : add esp, 0x20 ; pop rbp ; ret
0x000000000040d26d : add esp, 0x250 ; pop rbp ; ret
0x00000000004020bd : add esp, 0x30 ; pop rbp ; ret
0x00000000004034dd : add esp, 0x40 ; pop rbp ; ret
0x000000000040441d : add esp, 0x50 ; pop rbp ; ret
0x0000000000406098 : add esp, 0x60 ; pop rbp ; ret
0x000000000040306b : add esp, 0x70 ; pop rbp ; ret
0x00000000004092fe : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004096cd : add esp, 0x90 ; pop rbp ; ret
0x0000000000407f00 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040e727 : add esp, 0xc0 ; pop rbp ; ret
0x000000000040ba6f : add esp, 0xe0 ; pop rbp ; ret
0x0000000000406641 : add esp, 0xf0 ; pop rbp ; ret
0x00000000004017fe : add esp, 8 ; ret
0x0000000000401d9a : add rax, rdx ; sar rax, 1 ; jne 0x401dad ; pop rbp ; ret
0x000000000040dee8 : add rax, rsi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x000000000040c86a : add rdi, rax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x0000000000401faa : add rsp, 0x10 ; pop rbp ; ret
0x0000000000403fe3 : add rsp, 0x100 ; pop rbp ; ret
0x000000000040e364 : add rsp, 0x10e0 ; pop rbp ; ret
0x00000000004056ed : add rsp, 0x110 ; pop rbp ; ret
0x000000000040c5cb : add rsp, 0x130 ; pop rbp ; ret
0x0000000000409143 : add rsp, 0x138 ; pop rbx ; pop rbp ; ret
0x0000000000407b86 : add rsp, 0x170 ; pop rbp ; ret
0x000000000040ae9b : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000403306 : add rsp, 0x20 ; pop rbp ; ret
0x000000000040d26c : add rsp, 0x250 ; pop rbp ; ret
0x00000000004020bc : add rsp, 0x30 ; pop rbp ; ret
0x00000000004034dc : add rsp, 0x40 ; pop rbp ; ret
0x000000000040441c : add rsp, 0x50 ; pop rbp ; ret
0x0000000000406097 : add rsp, 0x60 ; pop rbp ; ret
0x000000000040306a : add rsp, 0x70 ; pop rbp ; ret
0x00000000004092fd : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004096cc : add rsp, 0x90 ; pop rbp ; ret
0x0000000000407eff : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040e726 : add rsp, 0xc0 ; pop rbp ; ret
0x000000000040ba6e : add rsp, 0xe0 ; pop rbp ; ret
0x0000000000406640 : add rsp, 0xf0 ; pop rbp ; ret
0x00000000004017fd : add rsp, 8 ; ret
0x000000000040d99a : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040e909 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000410dcd : and bh, bh ; call qword ptr [rax]
0x0000000000401dd7 : and dword ptr [rax], eax ; add ebx, esi ; ret
0x0000000000409707 : and eax, 0x48fffffd ; add esp, 0x20 ; pop rbp ; ret
0x0000000000405811 : and eax, 0x613350 ; call 0x401ab7
0x0000000000406f8f : and eax, 0x613a88 ; pop rbp ; ret
0x0000000000406fb3 : and eax, 0x613a90 ; pop rbp ; ret
0x000000000040d0c9 : call 0x35219
0x0000000000401ee8 : call 0x3ae1d7
0x0000000000401ee7 : call 0x3ae1d8
0x0000000000405816 : call 0x401ab2
0x0000000000409179 : call 0xffffffffe9031ac9
0x0000000000409178 : call 0xffffffffe9031aca
0x000000000040dd73 : call 0xffffffffe90366c3
0x00000000004085ea : call 0xffffffffff40c6f5
0x000000000040f189 : call qword ptr [r12 + rbx*8]
0x0000000000410dcf : call qword ptr [rax]
0x00000000004116db : call qword ptr [rsi]
0x000000000040f18a : call qword ptr [rsp + rbx*8]
0x0000000000401dfd : call rax
0x000000000041253b : call rdi
0x00000000004113db : call rdx
0x000000000040a012 : clc ; add rsp, 0x100 ; pop rbp ; ret
0x000000000040c5ca : clc ; add rsp, 0x130 ; pop rbp ; ret
0x000000000040b09f : clc ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d26b : clc ; add rsp, 0x250 ; pop rbp ; ret
0x0000000000406f79 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406ed4 : clc ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000406c2b : clc ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040f130 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000407efe : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x000000000040e725 : clc ; add rsp, 0xc0 ; pop rbp ; ret
0x00000000004113f8 : clc ; and bh, bh ; call qword ptr [rax]
0x0000000000401d9f : clc ; jne 0x401da8 ; pop rbp ; ret
0x0000000000406696 : clc ; mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x000000000040f015 : clc ; mov dword ptr [rax + 0x14], ecx ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408105 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040ecdb : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040ecde : clc ; pop rbp ; ret
0x000000000040bad8 : cld ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000401fd7 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040e363 : cld ; add rsp, 0x10e0 ; pop rbp ; ret
0x000000000040bc29 : cld ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004068e2 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004069c2 : cld ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040ba6d : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000040ecd8 : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040bc83 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040bc26 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004068df : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040badf : cld ; pop rbp ; ret
0x0000000000406f91 : cmp ah, byte ptr [rcx] ; pop rbp ; ret
0x0000000000411558 : cmp byte ptr [rcx - 1], dl ; call qword ptr [rax]
0x0000000000409146 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000401d5d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401d70 ; pop rbp ; ret
0x000000000040c921 : cmp esp, dword ptr [rsi] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000411c38 : cwde ; jg 0x411c3d ; jmp qword ptr [rdx]
0x0000000000411978 : cwde ; jns 0x41197d ; call rdx
0x000000000040a6ec : cwde ; mov rcx, qword ptr [rax*8 + 0x4107a0] ; jmp rcx
0x0000000000405601 : dec dword ptr [rax + 1] ; ret 0x8948
0x00000000004085e5 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; call 0xffffffffff40c6fa
0x000000000040d0c5 : dec dword ptr [rax - 0x75] ; push rbp ; call 0x3521d
0x000000000040d0fb : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000040a29a : dec dword ptr [rax - 0x77] ; ret 0x8de8
0x000000000040a54b : dec dword ptr [rax - 0x77] ; ret 0xdce8
0x000000000040c52f : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000040e592 : dec dword ptr [rdi] ; test edx, esp ; add byte ptr [rax], al ; add al, ch ; ret 0xff32
0x000000000040922b : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x00000000004111bd : fdiv st(7), st(0) ; call rax
0x0000000000408b63 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040f18c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000401fa9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040ef4f : hlt ; mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401d70 : hlt ; pop rbp ; mov edi, 0x613338 ; jmp rax
0x0000000000406254 : imul eax, dword ptr [rax], 0x940f0000 ; ret 0xd284
0x0000000000405cd7 : in al, -0x18 ; ret
0x0000000000406253 : in al, 0x69 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000411974 : in al, 6 ; add byte ptr [rax], al ; cwde ; jns 0x411981 ; call rdx
0x000000000040bb3d : in al, dx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d9a1 : in al, dx ; pop rbp ; ret
0x000000000040482e : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5588
0x000000000040372b : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x9588
0x000000000040369d : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf280
0x000000000040acf0 : int 0x80
0x0000000000401d63 : ja 0x401d6a ; pop rbp ; ret
0x000000000040fcb2 : jb 0x40fd18 ; outsb dx, byte ptr [rsi] ; ret
0x000000000040fcb1 : jb 0x40fd19 ; outsb dx, byte ptr [rsi] ; ret
0x0000000000410efd : jb 0x410f00 ; call rax
0x0000000000410f0d : jb 0x410f10 ; call qword ptr [rax]
0x0000000000401d6f : je 0x401d6d ; pop rbp ; mov edi, 0x613338 ; jmp rax
0x0000000000411c39 : jg 0x411c3c ; jmp qword ptr [rdx]
0x0000000000406252 : jge 0x406240 ; imul eax, dword ptr [rax], 0x940f0000 ; ret 0xd284
0x000000000040628f : jge 0x40627d ; imul eax, dword ptr [rax], 0x940f0000 ; ret 0xd284
0x00000000004062cc : jge 0x4062ba ; imul eax, dword ptr [rax], 0x940f0000 ; ret 0xd284
0x0000000000406309 : jge 0x4062f7 ; imul eax, dword ptr [rax], 0x940f0000 ; ret 0xd284
0x0000000000406346 : jge 0x406334 ; imul eax, dword ptr [rax], 0x940f0000 ; ret 0xd284
0x00000000004119f9 : jge 0x4119fc ; jmp qword ptr [rdx]
0x0000000000411b19 : jle 0x411b1c ; jmp qword ptr [rax]
0x000000000040187b : jmp 0x401817
0x0000000000411b1b : jmp qword ptr [rax]
0x00000000004121fb : jmp qword ptr [rcx]
0x00000000004119fb : jmp qword ptr [rdx]
0x0000000000401d77 : jmp rax
0x0000000000402290 : jmp rcx
0x0000000000401db7 : jmp rdx
0x0000000000401da0 : jne 0x401da7 ; pop rbp ; ret
0x0000000000411979 : jns 0x41197c ; call rdx
0x000000000040306d : jo 0x4030ce ; ret
0x0000000000405bdc : jo 0x405c3d ; ret
0x0000000000407b89 : jo 0x407b91 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000408255 : jo 0x4082b6 ; ret
0x0000000000409964 : jo 0x4099c5 ; ret
0x0000000000409a9e : jo 0x409aff ; ret
0x000000000041123d : jrcxz 0x411240 ; call rax
0x0000000000409300 : js 0x409360 ; pop rbp ; ret
0x0000000000409e94 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add al, ch ; ret
0x000000000040b430 : loopne 0x40b480 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040b42f : loopne 0x40b481 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040ba71 : loopne 0x40ba78 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040e367 : loopne 0x40e37e ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041110d : mov al, -1 ; call qword ptr [rax]
0x0000000000411238 : mov al, 0x17 ; add byte ptr [rax], al ; shl bl, -1 ; call rax
0x0000000000406e3d : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004096cb : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000402c74 : mov al, 0x48 ; mov ecx, dword ptr [rax*8 + 0x40f2e0] ; jmp rcx
0x0000000000410ef8 : mov al, 0xa ; add byte ptr [rax], al ; adc byte ptr [rdx - 1], dh ; call rax
0x0000000000410f78 : mov al, 0xc ; add byte ptr [rax], al ; push rax ; mov bh, bh ; call rax
0x0000000000410db8 : mov al, 5 ; add byte ptr [rax], al ; push rax ; adc edi, edi ; call rax
0x0000000000410e38 : mov al, 7 ; add byte ptr [rax], al ; adc byte ptr [rcx - 1], bl ; call rax
0x000000000040e906 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000410f7d : mov bh, bh ; call rax
0x0000000000406fb1 : mov byte ptr [0x613a90], al ; pop rbp ; ret
0x000000000040c833 : mov byte ptr [rax + 0x14], 1 ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040debb : mov byte ptr [rax + 0xc], 1 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406697 : mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000401dd3 : mov byte ptr [rip + 0x2115be], 1 ; ret
0x0000000000411b18 : mov byte ptr [rsi - 1], bh ; jmp qword ptr [rax]
0x0000000000407438 : mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040d99d : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000040e90c : mov dh, -0x40 ; pop rbp ; ret
0x0000000000410ffd : mov dr1, edi ; call rax
0x0000000000406f8d : mov dword ptr [0x613a88], edi ; pop rbp ; ret
0x000000000040f016 : mov dword ptr [rax + 0x14], ecx ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408106 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000408014 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004080c8 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004020b9 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000405dd6 : mov dword ptr [rbp - 0x3c], eax ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000406e3b : mov dword ptr [rbp - 0x50], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000406094 : mov dword ptr [rbp - 0x5c], eax ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000405bd6 : mov dword ptr [rbp - 0x70], eax ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000401fa7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401fd5 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040ecd9 : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040817e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004035f7 : mov dword ptr [rcx + 8], eax ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040deec : mov dword ptr [rdi + 0x10], eax ; pop rbp ; ret
0x000000000040c86e : mov dword ptr [rsi], edi ; pop rbp ; ret
0x00000000004092fc : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000402b18 : mov eax, 0x81006136 ; ret 1
0x0000000000407fc8 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040afbb : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004071dc : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403067 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000407fc5 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040715f : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040bb3b : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b253 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407f7d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004073c4 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040800e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040b42e : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004080ca : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040b37b : mov eax, dword ptr [rbp - 0x2c] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040824f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004092fa : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000409839 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040ef50 : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040bc84 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040bc27 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004068e0 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004069c0 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040badd : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040b09d : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406f77 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406ed2 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000406c29 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040f12e : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040ecdc : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000406750 : mov eax, ecx ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401dfb : mov ebp, esp ; call rax
0x0000000000401d61 : mov ebp, esp ; ja 0x401d6c ; pop rbp ; ret
0x00000000004022fd : mov ecx, dword ptr [rax*8 + 0x40f210] ; jmp rcx
0x0000000000402289 : mov ecx, dword ptr [rax*8 + 0x40f288] ; jmp rcx
0x0000000000402c76 : mov ecx, dword ptr [rax*8 + 0x40f2e0] ; jmp rcx
0x0000000000402c50 : mov ecx, dword ptr [rax*8 + 0x40f338] ; jmp rcx
0x0000000000406141 : mov ecx, dword ptr [rax*8 + 0x40f368] ; jmp rcx
0x0000000000408307 : mov ecx, dword ptr [rax*8 + 0x4102a0] ; jmp rcx
0x00000000004085e7 : mov ecx, dword ptr [rax*8 + 0x4102e8] ; jmp rcx
0x000000000040a6ee : mov ecx, dword ptr [rax*8 + 0x4107a0] ; jmp rcx
0x000000000040b8ad : mov ecx, dword ptr [rax*8 + 0x410b10] ; jmp rcx
0x000000000040b82d : mov ecx, dword ptr [rax*8 + 0x410b70] ; jmp rcx
0x0000000000408011 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040674e : mov ecx, eax ; mov eax, ecx ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401df5 : mov edi, 0x612e20 ; mov rbp, rsp ; call rax
0x0000000000401d72 : mov edi, 0x613338 ; jmp rax
0x0000000000401db2 : mov edi, 0x613338 ; jmp rdx
0x0000000000410fbd : mov edi, dr1 ; call rax
0x000000000040c868 : mov edi, dword ptr [rsi] ; add rdi, rax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x000000000040f187 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000410f8d : mov edi, edi ; call qword ptr [rax]
0x000000000040f186 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000401dd5 : mov esi, 0x1002115 ; ret
0x000000000040580f : mov esi, dword ptr [0x613350] ; call 0x401ab9
0x0000000000401db0 : mov esi, eax ; mov edi, 0x613338 ; jmp rdx
0x000000000040d9a0 : mov esp, ebp ; pop rbp ; ret
0x0000000000406f8c : mov qword ptr [0x613a88], rdi ; pop rbp ; ret
0x000000000040817d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004035f6 : mov qword ptr [rcx + 8], rax ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040deeb : mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x000000000040c86d : mov qword ptr [rsi], rdi ; pop rbp ; ret
0x0000000000406e3c : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004092fb : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x000000000040afba : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004071db : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403066 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000407fc4 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040715e : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040b252 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407f7c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004073c3 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040b42d : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040824e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000409838 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040b09c : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406f76 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406ed1 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000406c28 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040f12d : mov rax, qword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000401dfa : mov rbp, rsp ; call rax
0x0000000000401d60 : mov rbp, rsp ; ja 0x401d6d ; pop rbp ; ret
0x00000000004022fc : mov rcx, qword ptr [rax*8 + 0x40f210] ; jmp rcx
0x0000000000402288 : mov rcx, qword ptr [rax*8 + 0x40f288] ; jmp rcx
0x0000000000402c75 : mov rcx, qword ptr [rax*8 + 0x40f2e0] ; jmp rcx
0x0000000000402c4f : mov rcx, qword ptr [rax*8 + 0x40f338] ; jmp rcx
0x0000000000406140 : mov rcx, qword ptr [rax*8 + 0x40f368] ; jmp rcx
0x0000000000408306 : mov rcx, qword ptr [rax*8 + 0x4102a0] ; jmp rcx
0x00000000004085e6 : mov rcx, qword ptr [rax*8 + 0x4102e8] ; jmp rcx
0x000000000040a6ed : mov rcx, qword ptr [rax*8 + 0x4107a0] ; jmp rcx
0x000000000040b8ac : mov rcx, qword ptr [rax*8 + 0x410b10] ; jmp rcx
0x000000000040b82c : mov rcx, qword ptr [rax*8 + 0x410b70] ; jmp rcx
0x0000000000401daf : mov rsi, rax ; mov edi, 0x613338 ; jmp rdx
0x000000000040d99f : mov rsp, rbp ; pop rbp ; ret
0x0000000000406096 : movsb byte ptr [rdi], byte ptr [rsi] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000410ebd : movsxd rdi, edi ; call rax
0x0000000000407437 : movzx eax, al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040d99c : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040e90b : movzx eax, al ; pop rbp ; ret
0x000000000040669a : movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000405bd8 : nop ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000406fb4 : nop ; cmp ah, byte ptr [rcx] ; pop rbp ; ret
0x000000000040f1a8 : nop dword ptr [rax + rax] ; ret
0x0000000000410f89 : or al, 0 ; add byte ptr [rax], dl ; mov edi, edi ; call qword ptr [rax]
0x00000000004085e8 : or al, 0xffffffffffffffc5 ; call 0xffffffffff40c6f7
0x0000000000411339 : or al, 0xffffffffffffffff ; jmp rdx
0x000000000040debd : or al, 1 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000410ef9 : or al, byte ptr [rax] ; add byte ptr [rax], dl ; jb 0x410f04 ; call rax
0x0000000000408b5e : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000408b5f : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040338a : or byte ptr [rcx + 0xaf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5588
0x0000000000410eb9 : or dword ptr [rax], eax ; add al, dh ; movsxd rdi, edi ; call rax
0x000000000040a041 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000409a21 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000410f39 : or eax, dword ptr [rax] ; add byte ptr [rax], dl ; test bh, bh ; call rax
0x000000000040b831 : or eax, dword ptr [rcx] ; jmp rcx
0x000000000040fcb4 : outsb dx, byte ptr [rsi] ; ret
0x00000000004028d8 : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; xor al, 0x25 ; ret 0x40fc
0x000000000040f19c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040f19e : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040abae : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040f1a0 : pop r14 ; pop r15 ; ret
0x000000000040abb0 : pop r15 ; pop rbp ; ret
0x000000000040f1a2 : pop r15 ; ret
0x0000000000401dd2 : pop rbp ; mov byte ptr [rip + 0x2115be], 1 ; ret
0x0000000000401d71 : pop rbp ; mov edi, 0x613338 ; jmp rax
0x0000000000401dae : pop rbp ; mov rsi, rax ; mov edi, 0x613338 ; jmp rdx
0x000000000040f19b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040f19f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401d65 : pop rbp ; ret
0x000000000040abad : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040914a : pop rbx ; pop rbp ; ret
0x000000000040abb1 : pop rdi ; pop rbp ; ret
0x000000000040f1a3 : pop rdi ; ret
0x000000000040abaf : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040f1a1 : pop rsi ; pop r15 ; ret
0x000000000040f19d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000410ef7 : push qword ptr [rax + 0x1000000a] ; jb 0x410f06 ; call rax
0x0000000000410f37 : push qword ptr [rax + 0x1000000b] ; test bh, bh ; call rax
0x0000000000410db7 : push qword ptr [rax + 0x50000005] ; adc edi, edi ; call rax
0x0000000000410f77 : push qword ptr [rax + 0x5000000c] ; mov bh, bh ; call rax
0x0000000000410fb7 : push qword ptr [rax + 0x7000000d] ; mov edi, dr1 ; call rax
0x0000000000411237 : push qword ptr [rax - 0x3fffffe9] ; jrcxz 0x411246 ; call rax
0x00000000004111b7 : push qword ptr [rax - 0x4fffffeb] ; fdiv st(7), st(0) ; call rax
0x0000000000410df7 : push qword ptr [rax - 0x5ffffffa] ; xor bh, bh ; call rax
0x0000000000410ff7 : push qword ptr [rax - 0x7ffffff2] ; mov dr1, edi ; call rax
0x0000000000410eb7 : push qword ptr [rax - 0xffffff7] ; movsxd rdi, edi ; call rax
0x0000000000410dbc : push rax ; adc edi, edi ; call rax
0x0000000000410f7c : push rax ; mov bh, bh ; call rax
0x0000000000410f87 : push rax ; or al, 0 ; add byte ptr [rax], dl ; mov edi, edi ; call qword ptr [rax]
0x000000000040441f : push rax ; pop rbp ; ret
0x0000000000405812 : push rax ; xor esp, dword ptr [rcx] ; call 0x401ab6
0x000000000040d0c8 : push rbp ; call 0x3521a
0x0000000000408b62 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000401df4 : push rbp ; mov edi, 0x612e20 ; mov rbp, rsp ; call rax
0x0000000000406ca5 : push rbp ; ror byte ptr [rax - 0x77], 1 ; ret 0xd1e8
0x000000000040c1bd : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000040922e : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000041120c : rcr bh, -1 ; call qword ptr [rax]
0x00000000004002f8 : ret
0x000000000040df85 : ret 0x10
0x000000000040c915 : ret 0x18
0x0000000000401c82 : ret 0x2115
0x0000000000401a82 : ret 0x2116
0x0000000000401882 : ret 0x2117
0x0000000000408b7b : ret 0x2fe8
0x000000000040dd76 : ret 0x34e8
0x00000000004028e0 : ret 0x40fc
0x000000000040e581 : ret 0x49e8
0x000000000040d4f6 : ret 0x4a3b
0x0000000000403393 : ret 0x5588
0x00000000004036da : ret 0x5589
0x000000000040a6a9 : ret 0x8844
0x0000000000403914 : ret 0x8945
0x0000000000405604 : ret 0x8948
0x0000000000403aa2 : ret 0x8966
0x0000000000408c8d : ret 0x89a5
0x0000000000403f8b : ret 0x8b48
0x000000000040a29d : ret 0x8de8
0x0000000000403732 : ret 0x9588
0x0000000000406679 : ret 0xb0
0x00000000004043e3 : ret 0xbe0f
0x000000000040e2bf : ret 0xbe8
0x0000000000403e14 : ret 0xbf0f
0x000000000040c6d6 : ret 0xc
0x0000000000401d95 : ret 0xc148
0x000000000040e102 : ret 0xc8e8
0x0000000000406ca9 : ret 0xd1e8
0x000000000040625a : ret 0xd284
0x000000000040a54e : ret 0xdce8
0x000000000040917c : ret 0xee8
0x000000000040effe : ret 0xf01
0x00000000004036a4 : ret 0xf280
0x000000000040e59a : ret 0xff32
0x000000000040c6ea : ret 0xfff6
0x0000000000401eea : ret 0xfffa
0x0000000000405818 : ret 0xffff
0x0000000000402b1d : ret 1
0x0000000000400718 : ret 2
0x0000000000409232 : ret 8
0x000000000040aceb : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000408250 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x4082bb ; ret
0x0000000000401d9c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401dab ; pop rbp ; ret
0x000000000040d99e : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x000000000040acec : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000406ca6 : ror byte ptr [rax - 0x77], 1 ; ret 0xd1e8
0x0000000000408251 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x4082ba ; ret
0x0000000000407b85 : ror byte ptr [rax - 0x7f], -0x3c ; jo 0x407b95 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040c1be : ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000040922f : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000040674f : ror dword ptr [rcx - 0x3b7cb738], 0x30 ; pop rbp ; ret
0x0000000000410e0c : sal byte ptr [rdi], -1 ; call qword ptr [rax]
0x0000000000401d9e : sar eax, 1 ; jne 0x401da9 ; pop rbp ; ret
0x0000000000401d9d : sar rax, 1 ; jne 0x401daa ; pop rbp ; ret
0x000000000040f055 : setne al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041123c : shl bl, -1 ; call rax
0x0000000000410e8c : shl byte ptr [rax - 1], 1 ; call qword ptr [rax]
0x000000000040f057 : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000040df92 : sldt word ptr [rax] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040e908 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004119f8 : sub byte ptr [rbp - 1], bh ; jmp qword ptr [rdx]
0x000000000040f1f1 : sub esp, 8 ; add rsp, 8 ; ret
0x000000000040f1f0 : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000410f3d : test bh, bh ; call rax
0x000000000040f1aa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000411b14 : test byte ptr [rax], cl ; add byte ptr [rax], al ; mov byte ptr [rsi - 1], bh ; jmp qword ptr [rax]
0x000000000040e594 : test edx, esp ; add byte ptr [rax], al ; add al, ch ; ret 0xff32
0x0000000000410f4d : xchg bh, bh ; call qword ptr [rax]
0x0000000000403392 : xchg eax, ebp ; ret 0x5588
0x0000000000403731 : xchg eax, ebp ; ret 0x9588
0x000000000040ef46 : xchg eax, ebp ; ret 0xd284
0x00000000004036a3 : xchg eax, ebp ; ret 0xf280
0x0000000000405817 : xchg eax, ebp ; ret 0xffff
0x000000000040f056 : xchg eax, ebp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000406259 : xchg eax, esp ; ret 0xd284
0x0000000000405bd7 : xchg eax, r8d ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000405810 : xor al, 0x25 ; push rax ; xor esp, dword ptr [rcx] ; call 0x401ab8
0x00000000004028de : xor al, 0x25 ; ret 0x40fc
0x0000000000410dfd : xor bh, bh ; call rax
0x000000000040c5ce : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004080c6 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000407562 : xor esp, dword ptr [rcx] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000405813 : xor esp, dword ptr [rcx] ; call 0x401ab5
0x0000000000401d74 : xor esp, dword ptr [rcx] ; jmp rax
0x0000000000401db4 : xor esp, dword ptr [rcx] ; jmp rdx
