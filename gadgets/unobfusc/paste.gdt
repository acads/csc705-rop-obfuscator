0x0000000000404109 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407bbb : add ah, al ; add eax, dword ptr [rax] ; add al, al ; ret 0xffff
0x0000000000407bbf : add al, al ; ret 0xffff
0x00000000004016e7 : add al, ch ; ret
0x000000000040667f : add bl, dh ; ret
0x00000000004050e8 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x00000000004020c1 : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x0000000000407bb9 : add byte ptr [rax], al ; add ah, al ; add eax, dword ptr [rax] ; add al, al ; ret 0xffff
0x00000000004016e5 : add byte ptr [rax], al ; add al, ch ; ret
0x000000000040667d : add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004020bf : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000040667b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000400428 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000040042a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000400892 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x000000000040667c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040042c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000400894 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000004027b1 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7038b], cl ; ret 0xb0
0x00000000004049de : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000402527 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000402785 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403e70 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040124b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000401429 : add byte ptr [rax], al ; jmp 0x401269
0x0000000000402cb2 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004043c1 : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000404fab : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403e38 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040667e : add byte ptr [rax], al ; ret
0x000000000040042e : add byte ptr [rax], al ; ret 0
0x0000000000400896 : add byte ptr [rax], al ; ret 1
0x0000000000404fac : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000403e39 : add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004027b3 : add byte ptr [rbx - 0x76b7038b], cl ; ret 0xb0
0x0000000000401698 : add byte ptr [rcx], al ; ret
0x00000000004016e1 : add byte ptr [rdi], cl ; test byte ptr [rdx], cl ; add byte ptr [rax], al ; add al, ch ; ret
0x00000000004049e0 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000402529 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x00000000004040c8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404faa : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000403e37 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004024df : add dword ptr [rdi], ecx ; mov dh, -0x3f ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000402756 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004061da : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401694 : add eax, 0x207c1e ; add ebx, esi ; ret
0x0000000000407bbd : add eax, dword ptr [rax] ; add al, al ; ret 0xffff
0x000000000040165b : add eax, edx ; sar rax, 1 ; jne 0x40166c ; pop rbp ; ret
0x0000000000401699 : add ebx, esi ; ret
0x00000000004017eb : add esp, 0x10 ; pop rbp ; ret
0x000000000040619c : add esp, 0x130 ; pop rbp ; ret
0x0000000000403e34 : add esp, 0x138 ; pop rbx ; pop rbp ; ret
0x000000000040529c : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000402a30 : add esp, 0x20 ; pop rbp ; ret
0x00000000004018fd : add esp, 0x30 ; pop rbp ; ret
0x000000000040275b : add esp, 0x40 ; pop rbp ; ret
0x0000000000401f20 : add esp, 0x50 ; pop rbp ; ret
0x00000000004024e4 : add esp, 0x70 ; pop rbp ; ret
0x0000000000403fee : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004043bd : add esp, 0x90 ; pop rbp ; ret
0x0000000000405134 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040124e : add esp, 8 ; ret
0x000000000040165a : add rax, rdx ; sar rax, 1 ; jne 0x40166d ; pop rbp ; ret
0x00000000004017ea : add rsp, 0x10 ; pop rbp ; ret
0x000000000040619b : add rsp, 0x130 ; pop rbp ; ret
0x0000000000403e33 : add rsp, 0x138 ; pop rbx ; pop rbp ; ret
0x000000000040529b : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000402a2f : add rsp, 0x20 ; pop rbp ; ret
0x00000000004018fc : add rsp, 0x30 ; pop rbp ; ret
0x000000000040275a : add rsp, 0x40 ; pop rbp ; ret
0x0000000000401f1f : add rsp, 0x50 ; pop rbp ; ret
0x00000000004024e3 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000403fed : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004043bc : add rsp, 0x90 ; pop rbp ; ret
0x0000000000405133 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040124d : add rsp, 8 ; ret
0x00000000004061d9 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401697 : and byte ptr [rax], al ; add ebx, esi ; ret
0x00000000004043f7 : and eax, 0x48fffffd ; add esp, 0x20 ; pop rbp ; ret
0x00000000004027df : and eax, 0x6092d8 ; pop rbp ; ret
0x0000000000402803 : and eax, 0x6092e0 ; pop rbp ; ret
0x0000000000403e69 : call 0xffffffffe902c7b9
0x0000000000403e68 : call 0xffffffffe902c7ba
0x0000000000404af1 : call 0xffffffffff408b6a
0x0000000000406659 : call qword ptr [r12 + rbx*8]
0x00000000004079a3 : call qword ptr [rsi]
0x000000000040665a : call qword ptr [rsp + rbx*8]
0x00000000004016bd : call rax
0x0000000000407be3 : call rdx
0x0000000000407843 : call rsi
0x000000000040619a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x000000000040549f : clc ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004049f1 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040165f : clc ; jne 0x401668 ; pop rbp ; ret
0x0000000000402df5 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004065ab : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000401c77 : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000401c7b : clc ; pop rbp ; ret
0x0000000000401817 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004057f9 : cld ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405974 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004065a8 : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000405853 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004057f6 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405971 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401f1c : cmove eax, ecx ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000403e36 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040161d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401630 ; pop rbp ; ret
0x0000000000404aec : cwde ; mov rcx, qword ptr [rax*8 + 0x4070e8] ; jmp rcx
0x00000000004032d5 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; sub byte ptr [rax + rax*2], ch ; jmp rcx
0x00000000004060ff : dec dword ptr [rax - 0x7f] ; ret 1
0x0000000000403f1b : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000403853 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040665c : fmul qword ptr [rax - 0x7d] ; ret
0x00000000004017e9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401630 : hlt ; pop rbp ; mov edi, 0x609248 ; jmp rax
0x00000000004050f0 : int 0x80
0x0000000000401623 : ja 0x40162a ; pop rbp ; ret
0x000000000040162f : je 0x40162d ; pop rbp ; mov edi, 0x609248 ; jmp rax
0x0000000000401c76 : jge 0x401c77 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000401696 : jl 0x4016bd ; add byte ptr [rcx], al ; ret
0x000000000040142b : jmp 0x401267
0x00000000004028f8 : jmp 0xffffffff83892904
0x0000000000407d83 : jmp qword ptr [rax]
0x0000000000407c63 : jmp qword ptr [rdx]
0x0000000000401637 : jmp rax
0x0000000000401df2 : jmp rcx
0x0000000000401677 : jmp rdx
0x0000000000401660 : jne 0x401667 ; pop rbp ; ret
0x00000000004024e6 : jo 0x402547 ; ret
0x0000000000402f45 : jo 0x402fa6 ; ret
0x0000000000404654 : jo 0x4046b5 ; ret
0x000000000040478e : jo 0x4047ef ; ret
0x0000000000403ff0 : js 0x404050 ; pop rbp ; ret
0x0000000000402a6b : loopne 0x402abb ; add esp, 0x20 ; pop rbp ; ret
0x0000000000402a6a : loopne 0x402abc ; add esp, 0x20 ; pop rbp ; ret
0x000000000040452b : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004043bb : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x00000000004061d6 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000402801 : mov byte ptr [0x6092e0], al ; pop rbp ; ret
0x0000000000401693 : mov byte ptr [rip + 0x207c1e], 1 ; ret
0x00000000004024e1 : mov dh, -0x3f ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000402758 : mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004061dc : mov dh, -0x40 ; pop rbp ; ret
0x00000000004027dd : mov dword ptr [0x6092d8], edi ; pop rbp ; ret
0x0000000000402df6 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000402d04 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000402db8 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000402a69 : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004018f9 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004017e7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401815 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004065a9 : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000401c75 : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402e6e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403fec : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000402cb8 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004053bb : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402a2c : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402cb5 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004029af : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405653 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402c6d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402cfe : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000402dba : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000402f3f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000403fea : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000404529 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000405854 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004057f7 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405972 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040549d : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004049ef : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401c79 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004016bb : mov ebp, esp ; call rax
0x0000000000401621 : mov ebp, esp ; ja 0x40162c ; pop rbp ; ret
0x0000000000401deb : mov ecx, dword ptr [rax*8 + 0x4066d0] ; jmp rcx
0x0000000000402ff7 : mov ecx, dword ptr [rax*8 + 0x406be0] ; jmp rcx
0x00000000004032d7 : mov ecx, dword ptr [rax*8 + 0x406c28] ; jmp rcx
0x0000000000404aee : mov ecx, dword ptr [rax*8 + 0x4070e8] ; jmp rcx
0x0000000000402d01 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004016b5 : mov edi, 0x608e20 ; mov rbp, rsp ; call rax
0x0000000000401632 : mov edi, 0x609248 ; jmp rax
0x0000000000401672 : mov edi, 0x609248 ; jmp rdx
0x0000000000406657 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000406656 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000401670 : mov esi, eax ; mov edi, 0x609248 ; jmp rdx
0x00000000004016b7 : mov fs, word ptr [rax] ; mov rbp, rsp ; call rax
0x00000000004027dc : mov qword ptr [0x6092d8], rdi ; pop rbp ; ret
0x0000000000401c74 : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402e6d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040452a : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000403feb : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x00000000004053ba : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402a2b : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402cb4 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004029ae : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405652 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402c6c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402f3e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000404528 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040549c : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004049ee : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401c78 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004016ba : mov rbp, rsp ; call rax
0x0000000000401620 : mov rbp, rsp ; ja 0x40162d ; pop rbp ; ret
0x0000000000401dea : mov rcx, qword ptr [rax*8 + 0x4066d0] ; jmp rcx
0x0000000000402ff6 : mov rcx, qword ptr [rax*8 + 0x406be0] ; jmp rcx
0x00000000004032d6 : mov rcx, qword ptr [rax*8 + 0x406c28] ; jmp rcx
0x0000000000404aed : mov rcx, qword ptr [rax*8 + 0x4070e8] ; jmp rcx
0x000000000040166f : mov rsi, rax ; mov edi, 0x609248 ; jmp rdx
0x0000000000402757 : movzx eax, al ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004061db : movzx eax, al ; pop rbp ; ret
0x00000000004024e0 : movzx eax, cl ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000406678 : nop dword ptr [rax + rax] ; ret
0x0000000000404aef : or al, 0xffffffffffffffc5 ; call 0xffffffffff408b6c
0x00000000004032d8 : or al, 0xffffffffffffffc5 ; sub byte ptr [rax + rax*2], ch ; jmp rcx
0x000000000040384e : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040384f : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000400890 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x0000000000402783 : or dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404711 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040666c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040666e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000404fae : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406670 : pop r14 ; pop r15 ; ret
0x0000000000404fb0 : pop r15 ; pop rbp ; ret
0x0000000000406672 : pop r15 ; ret
0x0000000000401692 : pop rbp ; mov byte ptr [rip + 0x207c1e], 1 ; ret
0x0000000000401631 : pop rbp ; mov edi, 0x609248 ; jmp rax
0x000000000040166e : pop rbp ; mov rsi, rax ; mov edi, 0x609248 ; jmp rdx
0x000000000040666b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040666f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401625 : pop rbp ; ret
0x0000000000404fad : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403e3a : pop rbx ; pop rbp ; ret
0x0000000000404fb1 : pop rdi ; pop rbp ; ret
0x0000000000406673 : pop rdi ; ret
0x0000000000404faf : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000406671 : pop rsi ; pop r15 ; ret
0x000000000040666d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000401f22 : push rax ; pop rbp ; ret
0x0000000000403852 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x00000000004016b4 : push rbp ; mov edi, 0x608e20 ; mov rbp, rsp ; call rax
0x0000000000405d8d : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x0000000000403f1e : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000401251 : ret
0x0000000000400430 : ret 0
0x0000000000401432 : ret 0x207c
0x0000000000401ed9 : ret 0x8148
0x0000000000404aa9 : ret 0x8844
0x0000000000405522 : ret 0x8948
0x000000000040397d : ret 0x89a5
0x0000000000403856 : ret 0x8b48
0x00000000004020c4 : ret 0xb0
0x0000000000401655 : ret 0xc148
0x00000000004049e3 : ret 0xd284
0x000000000040252c : ret 0xe280
0x0000000000403e6c : ret 0xee8
0x000000000040386b : ret 0xfe8
0x0000000000407ba1 : ret 0xffff
0x0000000000400898 : ret 1
0x0000000000403f22 : ret 8
0x00000000004050eb : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000402f40 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x402fab ; ret
0x000000000040165c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40166b ; pop rbp ; ret
0x00000000004050ec : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000402f41 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x402faa ; ret
0x0000000000402759 : ror byte ptr [rax - 0x7d], -0x3c ; pop rbp ; ret
0x0000000000405d8e : ror byte ptr [rax - 0x7f], 1 ; ret 1
0x0000000000403f1f : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x00000000004024e2 : ror dword ptr [rax - 0x7d], -0x3c ; jo 0x40254b ; ret
0x0000000000401f1e : ror dword ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x000000000040165e : sar eax, 1 ; jne 0x401669 ; pop rbp ; ret
0x000000000040165d : sar rax, 1 ; jne 0x40166a ; pop rbp ; ret
0x00000000004061d8 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004032da : sub byte ptr [rax + rax*2], ch ; jmp rcx
0x00000000004066ad : sub esp, 8 ; add rsp, 8 ; ret
0x00000000004066ac : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040667a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000401f1b : test byte ptr [rdi], 0x44 ; ror dword ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x00000000004016e3 : test byte ptr [rdx], cl ; add byte ptr [rax], al ; add al, ch ; ret
0x00000000004049e2 : xchg eax, esp ; ret 0xd284
0x000000000040252b : xchg eax, esp ; ret 0xe280
0x000000000040619e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401249 : xor eax, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000402db6 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
