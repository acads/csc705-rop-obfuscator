0x0000000000408b67 : adc al, 1 ; ret 0x5189
0x0000000000408b4f : adc byte ptr [rcx], al ; ret 0x5189
0x0000000000408b05 : adc dword ptr [rcx], eax ; ret 0x1189
0x000000000040b35b : adc dword ptr [rsi], ecx ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040aa49 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401d30 : add ah, byte ptr [rcx] ; add dh, al ; add al, 0x25 ; ret 0x6102
0x0000000000401d59 : add ah, byte ptr [rcx] ; add esi, eax ; add al, 0x25 ; ret 0x6102
0x0000000000409532 : add ah, byte ptr [rcx] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004017a4 : add ah, byte ptr [rcx] ; jmp rax
0x00000000004017e4 : add ah, byte ptr [rcx] ; jmp rdx
0x00000000004035f1 : add ah, byte ptr [rcx] ; pop rbp ; ret
0x0000000000401d88 : add al, 0x25 ; ret
0x0000000000401d35 : add al, 0x25 ; ret 0x6102
0x0000000000408b16 : add al, 1 ; ret 0x5189
0x000000000040f35f : add al, ah ; mov ch, -1 ; call rdx
0x0000000000401f7e : add al, ch ; mov esp, 0xf6fffff8 ; add al, 0x25 ; ret 0x6102
0x000000000040f6bf : add al, dh ; ret 0xffff
0x000000000040eaeb : add al, dl ; ret
0x000000000040d3af : add bl, dh ; ret
0x0000000000402837 : add byte ptr [r8], r8b ; add dh, dh ; add al, 0x25 ; ret 0x6102
0x0000000000402b26 : add byte ptr [rax + 0x2504f601], dh ; ret
0x0000000000408e68 : add byte ptr [rax - 0x75], cl ; push rbp ; call 0x31030fc0
0x000000000040ba58 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000402aad : add byte ptr [rax - 0x77], cl ; ret 0x4ae8
0x0000000000402a59 : add byte ptr [rax - 0x77], cl ; ret 0x9ee8
0x0000000000402a05 : add byte ptr [rax - 0x77], cl ; ret 0xf2e8
0x0000000000408e73 : add byte ptr [rax - 0x7f], cl ; ret 0x40
0x000000000040d3ad : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000402b24 : add byte ptr [rax], al ; add byte ptr [rax + 0x2504f601], dh ; ret
0x0000000000408e66 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbp ; call 0x31030fc2
0x0000000000408e71 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x40
0x000000000040d3ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040d4aa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040379d : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040d3ac : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040edbd : add byte ptr [rax], al ; add byte ptr [rax], dh ; sub al, -1 ; jmp rdx
0x000000000040e949 : add byte ptr [rax], al ; add byte ptr [rax], dh ; sub bh, bh ; call qword ptr [rax]
0x0000000000403ec5 : add byte ptr [rax], al ; add byte ptr [rcx - 0xa343], al ; call qword ptr [rax]
0x0000000000402250 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040311d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000403a17 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000040b31e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004023f3 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000401d84 : add byte ptr [rax], al ; add dh, al ; add al, 0x25 ; ret
0x0000000000402838 : add byte ptr [rax], al ; add dh, dh ; add al, 0x25 ; ret 0x6102
0x000000000040aa0a : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403bc1 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040135b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000401519 : add byte ptr [rax], al ; jmp 0x401379
0x00000000004095f2 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040f6da : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; or dword ptr [rax], eax ; add al, dl ; ret
0x000000000040f69e : add byte ptr [rax], al ; nop ; ret 0xffff
0x0000000000402b72 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040b91b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040a778 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040d3ae : add byte ptr [rax], al ; ret
0x000000000040edba : add byte ptr [rax], al ; test byte ptr [rax], al ; add byte ptr [rax], al ; xor byte ptr [rdi + rdi*8], ch ; jmp rdx
0x000000000040edbe : add byte ptr [rax], al ; xor byte ptr [rdi + rdi*8], ch ; jmp rdx
0x000000000040edbf : add byte ptr [rax], dh ; sub al, -1 ; jmp rdx
0x000000000040e94b : add byte ptr [rax], dh ; sub bh, bh ; call qword ptr [rax]
0x000000000040b91c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040a779 : add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004022f4 : add byte ptr [rbx - 0x1034b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000403ec7 : add byte ptr [rcx - 0xa343], al ; call qword ptr [rax]
0x0000000000401808 : add byte ptr [rcx], al ; ret
0x0000000000402252 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040311f : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000403a19 : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000040b320 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004023f5 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000401d86 : add dh, al ; add al, 0x25 ; ret
0x0000000000401d33 : add dh, al ; add al, 0x25 ; ret 0x6102
0x000000000040283a : add dh, dh ; add al, 0x25 ; ret 0x6102
0x000000000040aa08 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040b91a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040a777 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004031d7 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402ce4 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000403136 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040cf0a : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401804 : add eax, 0x20eaae ; add ebx, esi ; ret
0x00000000004017cb : add eax, edx ; sar rax, 1 ; jne 0x4017dc ; pop rbp ; ret
0x0000000000401809 : add ebx, esi ; ret
0x0000000000401d81 : add ecx, ebp ; wait ; add byte ptr [rax], al ; add dh, al ; add al, 0x25 ; ret
0x0000000000401d5c : add esi, eax ; add al, 0x25 ; ret 0x6102
0x0000000000402370 : add esi, eax ; mov rax, rsi ; pop rbp ; ret
0x0000000000402b28 : add esi, esi ; add al, 0x25 ; ret
0x00000000004019eb : add esp, 0x10 ; pop rbp ; ret
0x0000000000402b6e : add esp, 0x130 ; pop rbp ; ret
0x000000000040a774 : add esp, 0x138 ; pop rbx ; pop rbp ; ret
0x000000000040bc0c : add esp, 0x1a0 ; pop rbp ; ret
0x000000000040c51e : add esp, 0x1e0 ; pop rbp ; ret
0x00000000004031dc : add esp, 0x20 ; pop rbp ; ret
0x0000000000401acd : add esp, 0x30 ; pop rbp ; ret
0x0000000000402ce9 : add esp, 0x40 ; pop rbp ; ret
0x0000000000408e9f : add esp, 0x50 ; pop rbp ; ret
0x000000000040313b : add esp, 0x60 ; pop rbp ; ret
0x0000000000409883 : add esp, 0x70 ; pop rbp ; ret
0x000000000040a92e : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040acfd : add esp, 0x90 ; pop rbp ; ret
0x000000000040baa4 : add esp, 0xa0 ; pop rbp ; ret
0x00000000004090bb : add esp, 0xd0 ; pop rbp ; ret
0x0000000000403db6 : add esp, 0xf0 ; pop rbp ; ret
0x000000000040135e : add esp, 8 ; ret
0x00000000004017ca : add rax, rdx ; sar rax, 1 ; jne 0x4017dd ; pop rbp ; ret
0x000000000040236f : add rsi, rax ; mov rax, rsi ; pop rbp ; ret
0x00000000004019ea : add rsp, 0x10 ; pop rbp ; ret
0x0000000000402b6d : add rsp, 0x130 ; pop rbp ; ret
0x000000000040a773 : add rsp, 0x138 ; pop rbx ; pop rbp ; ret
0x000000000040bc0b : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000040c51d : add rsp, 0x1e0 ; pop rbp ; ret
0x00000000004031db : add rsp, 0x20 ; pop rbp ; ret
0x0000000000401acc : add rsp, 0x30 ; pop rbp ; ret
0x0000000000402ce8 : add rsp, 0x40 ; pop rbp ; ret
0x0000000000408e9e : add rsp, 0x50 ; pop rbp ; ret
0x000000000040313a : add rsp, 0x60 ; pop rbp ; ret
0x0000000000409882 : add rsp, 0x70 ; pop rbp ; ret
0x000000000040a92d : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040acfc : add rsp, 0x90 ; pop rbp ; ret
0x000000000040baa3 : add rsp, 0xa0 ; pop rbp ; ret
0x00000000004090ba : add rsp, 0xd0 ; pop rbp ; ret
0x0000000000403db5 : add rsp, 0xf0 ; pop rbp ; ret
0x000000000040135d : add rsp, 8 ; ret
0x000000000040cf09 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000402a56 : and bl, ch ; add byte ptr [rax - 0x77], cl ; ret 0x9ee8
0x0000000000401807 : and byte ptr [rax], al ; add ebx, esi ; ret
0x000000000040ad37 : and eax, 0x48fffffd ; add esp, 0x20 ; pop rbp ; ret
0x0000000000401d2e : and eax, 0x6102c1 ; add dh, al ; add al, 0x25 ; ret 0x6102
0x0000000000401d57 : and eax, 0x6102c1 ; add esi, eax ; add al, 0x25 ; ret 0x6102
0x00000000004035ef : and eax, 0x6102e0 ; pop rbp ; ret
0x0000000000403613 : and eax, 0x6102e8 ; pop rbp ; ret
0x0000000000408cbf : call 0x31030e0f
0x0000000000408e6c : call 0x31030fbc
0x0000000000401fc1 : call 0x401848
0x000000000040322d : call 0x49322980
0x000000000040322c : call 0x49322981
0x000000000040a7a9 : call 0xffffffffe90330f9
0x000000000040a7a8 : call 0xffffffffe90330fa
0x000000000040d389 : call qword ptr [r12 + rbx*8]
0x0000000000403ecd : call qword ptr [rax]
0x000000000040ef43 : call qword ptr [rsi]
0x000000000040d38a : call qword ptr [rsp + rbx*8]
0x000000000040182d : call rax
0x000000000040f363 : call rdx
0x000000000040ceca : clc ; add rsp, 0x130 ; pop rbp ; ret
0x000000000040be0f : clc ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b331 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000409408 : clc ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004017cf : clc ; jne 0x4017d8 ; pop rbp ; ret
0x0000000000409735 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040d2db : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004038fe : clc ; mov esi, dword ptr [rbp - 0xc] ; mov dword ptr [rdi], esi ; pop rbp ; ret
0x0000000000402387 : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040238b : clc ; pop rbp ; ret
0x000000000040c586 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040c169 : cld ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040c6a4 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403db4 : cld ; add rsp, 0xf0 ; pop rbp ; ret
0x000000000040d2d8 : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040c583 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040c166 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040c6a1 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040a776 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040178d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4017a0 ; pop rbp ; ret
0x000000000040b45c : cwde ; mov rcx, qword ptr [rax*8 + 0x40e588] ; jmp rcx
0x0000000000409c15 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; enter 0x40e0, 0 ; jmp rcx
0x0000000000408cbb : dec dword ptr [rax - 0x75] ; push rbp ; call 0x31030e13
0x0000000000402a21 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x00000000004022fa : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040ce2f : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000040a85b : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000409c1a : enter 0x40e0, 0 ; jmp rcx
0x000000000040a193 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040d38c : fmul qword ptr [rax - 0x7d] ; ret
0x00000000004019e9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403901 : hlt ; mov dword ptr [rdi], esi ; pop rbp ; ret
0x00000000004017a0 : hlt ; pop rbp ; mov edi, 0x610280 ; jmp rax
0x000000000040ba60 : int 0x80
0x0000000000400290 : ja 0x4002ca ; xor dh, bl ; ret
0x0000000000401793 : ja 0x40179a ; pop rbp ; ret
0x000000000040df81 : jae 0x40df96 ; mov ebx, 0x2e766a0a ; leave ; ret 0x8581
0x000000000040df87 : jbe 0x40dfba ; leave ; ret 0x8581
0x000000000040179f : je 0x40179d ; pop rbp ; mov edi, 0x610280 ; jmp rax
0x0000000000402386 : jge 0x402387 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004038fd : jge 0x4038ff ; mov esi, dword ptr [rbp - 0xc] ; mov dword ptr [rdi], esi ; pop rbp ; ret
0x000000000040deff : jmp 0x3997a161
0x000000000040151b : jmp 0x401377
0x0000000000401d82 : jmp 0x401e2a
0x0000000000402836 : jmp 0x402890
0x000000000040f503 : jmp qword ptr [rax]
0x000000000040406b : jmp qword ptr [rbx]
0x0000000000403fea : jmp qword ptr [rcx]
0x000000000040f3e3 : jmp qword ptr [rdx]
0x00000000004017a7 : jmp rax
0x0000000000401d0d : jmp rcx
0x00000000004017e7 : jmp rdx
0x000000000040ee43 : jmp rsi
0x00000000004017d0 : jne 0x4017d7 ; pop rbp ; ret
0x0000000000403900 : jne 0x4038fb ; mov dword ptr [rdi], esi ; pop rbp ; ret
0x0000000000402aaa : jnp 0x402a8f ; add byte ptr [rax - 0x77], cl ; ret 0x4ae8
0x0000000000409885 : jo 0x4098e6 ; ret
0x000000000040af94 : jo 0x40aff5 ; ret
0x000000000040b0ce : jo 0x40b12f ; ret
0x000000000040df98 : jo 0x40df28 ; ret 0x51a3
0x000000000040a930 : js 0x40a990 ; pop rbp ; ret
0x000000000040431f : lea edi, dword ptr [rdi + rdi*8 - 1] ; jmp qword ptr [rbx]
0x000000000040414e : lea esi, dword ptr [rdi + rdi*8 - 1] ; jmp qword ptr [rbx]
0x000000000040df89 : leave ; ret 0x8581
0x000000000040928b : loopne 0x4092db ; add esp, 0x20 ; pop rbp ; ret
0x000000000040928a : loopne 0x4092dc ; add esp, 0x20 ; pop rbp ; ret
0x000000000040c520 : loopne 0x40c528 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040ae6b : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040acfb : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x000000000040cf06 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000403611 : mov byte ptr [0x6102e8], al ; pop rbp ; ret
0x0000000000401803 : mov byte ptr [rip + 0x20eaae], 1 ; ret
0x000000000040defe : mov ch, -0x17 ; pop rbx ; ret 0x3956
0x000000000040f361 : mov ch, -1 ; call rdx
0x00000000004031d9 : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402ce6 : mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000403138 : mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040cf0c : mov dh, -0x40 ; pop rbp ; ret
0x00000000004035ed : mov dword ptr [0x6102e0], edi ; pop rbp ; ret
0x0000000000409736 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000409644 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004096f8 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000403239 : mov dword ptr [rbp - 0x10], edx ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000409289 : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401ac9 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004019e7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040d2d9 : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004035cb : mov dword ptr [rbp - 8], eax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402385 : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000408e9b : mov dword ptr [rcx + 0x28], eax ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004097ae : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040379a : mov dword ptr [rdi + 0x28], 0 ; pop rbp ; ret
0x0000000000403902 : mov dword ptr [rdi], esi ; pop rbp ; ret
0x000000000040a92c : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x00000000004095f8 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040bd2b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004038de : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004095f5 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040323d : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040bfc3 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004095ad : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040963e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004096fa : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040987f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040a92a : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040ae69 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040c584 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040c167 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040c6a2 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040be0d : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b32f : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000409406 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000402389 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402373 : mov eax, esi ; pop rbp ; ret
0x000000000040182b : mov ebp, esp ; call rax
0x0000000000401791 : mov ebp, esp ; ja 0x40179c ; pop rbp ; ret
0x000000000040df84 : mov ebx, 0x2e766a0a ; leave ; ret 0x8581
0x0000000000401d06 : mov ecx, dword ptr [rax*8 + 0x40d400] ; jmp rcx
0x0000000000409937 : mov ecx, dword ptr [rax*8 + 0x40e080] ; jmp rcx
0x0000000000409c17 : mov ecx, dword ptr [rax*8 + 0x40e0c8] ; jmp rcx
0x000000000040b45e : mov ecx, dword ptr [rax*8 + 0x40e588] ; jmp rcx
0x0000000000409641 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401825 : mov edi, 0x60fe20 ; mov rbp, rsp ; call rax
0x00000000004017a2 : mov edi, 0x610280 ; jmp rax
0x00000000004017e2 : mov edi, 0x610280 ; jmp rdx
0x00000000004038fc : mov edi, dword ptr [rbp - 8] ; mov esi, dword ptr [rbp - 0xc] ; mov dword ptr [rdi], esi ; pop rbp ; ret
0x000000000040d387 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000040d386 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x00000000004038ff : mov esi, dword ptr [rbp - 0xc] ; mov dword ptr [rdi], esi ; pop rbp ; ret
0x00000000004017e0 : mov esi, eax ; mov edi, 0x610280 ; jmp rdx
0x0000000000401f80 : mov esp, 0xf6fffff8 ; add al, 0x25 ; ret 0x6102
0x00000000004035ec : mov qword ptr [0x6102e0], rdi ; pop rbp ; ret
0x0000000000403238 : mov qword ptr [rbp - 0x10], rdx ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004035ca : mov qword ptr [rbp - 8], rax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402384 : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000408e9a : mov qword ptr [rcx + 0x28], rax ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004097ad : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403799 : mov qword ptr [rdi + 0x28], 0 ; pop rbp ; ret
0x000000000040ae6a : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040a92b : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x000000000040bd2a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004038dd : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004095f4 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040323c : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040bfc2 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004095ac : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040987e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040ae68 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040be0c : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b32e : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000409405 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000402388 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402372 : mov rax, rsi ; pop rbp ; ret
0x000000000040182a : mov rbp, rsp ; call rax
0x0000000000401790 : mov rbp, rsp ; ja 0x40179d ; pop rbp ; ret
0x0000000000401d05 : mov rcx, qword ptr [rax*8 + 0x40d400] ; jmp rcx
0x0000000000409936 : mov rcx, qword ptr [rax*8 + 0x40e080] ; jmp rcx
0x0000000000409c16 : mov rcx, qword ptr [rax*8 + 0x40e0c8] ; jmp rcx
0x000000000040b45d : mov rcx, qword ptr [rax*8 + 0x40e588] ; jmp rcx
0x00000000004017df : mov rsi, rax ; mov edi, 0x610280 ; jmp rdx
0x000000000040f6dc : movsb byte ptr [rdi], byte ptr [rsi] ; or dword ptr [rax], eax ; add al, dl ; ret
0x00000000004031d8 : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402ce5 : movzx eax, al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000403137 : movzx eax, al ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040cf0b : movzx eax, al ; pop rbp ; ret
0x000000000040f6a0 : nop ; ret 0xffff
0x000000000040d3a8 : nop dword ptr [rax + rax] ; ret
0x000000000040df82 : or ah, byte ptr [rbp - 0x45] ; or ch, byte ptr [rdx + 0x76] ; leave ; ret 0x8581
0x0000000000409c18 : or al, 0xffffffffffffffc5 ; enter 0x40e0, 0 ; jmp rcx
0x0000000000408b3a : or al, 1 ; ret 0x5189
0x000000000040eae9 : or al, byte ptr [rax] ; add al, dl ; ret
0x000000000040a18e : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040a18f : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x00000000004031c3 : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000408b28 : or byte ptr [rcx], al ; ret 0x5189
0x000000000040df85 : or ch, byte ptr [rdx + 0x76] ; leave ; ret 0x8581
0x000000000040f6bd : or dword ptr [rax], eax ; add al, dh ; ret 0xffff
0x000000000040f6dd : or dword ptr [rax], eax ; add al, dl ; ret
0x000000000040b051 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d39c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040d39e : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040b91e : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040d3a0 : pop r14 ; pop r15 ; ret
0x000000000040b920 : pop r15 ; pop rbp ; ret
0x000000000040d3a2 : pop r15 ; ret
0x000000000040eae8 : pop rax ; or al, byte ptr [rax] ; add al, dl ; ret
0x0000000000401802 : pop rbp ; mov byte ptr [rip + 0x20eaae], 1 ; ret
0x00000000004017a1 : pop rbp ; mov edi, 0x610280 ; jmp rax
0x00000000004017de : pop rbp ; mov rsi, rax ; mov edi, 0x610280 ; jmp rdx
0x000000000040d39b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040d39f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401795 : pop rbp ; ret
0x000000000040b91d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040a77a : pop rbx ; pop rbp ; ret
0x000000000040df00 : pop rbx ; ret 0x3956
0x000000000040b921 : pop rdi ; pop rbp ; ret
0x000000000040d3a3 : pop rdi ; ret
0x000000000040b91f : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040d3a1 : pop rsi ; pop r15 ; ret
0x000000000040d39d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040df86 : push 0x76 ; leave ; ret 0x8581
0x0000000000408ea1 : push rax ; pop rbp ; ret
0x0000000000408cbe : push rbp ; call 0x31030e10
0x0000000000408e6b : push rbp ; call 0x31030fbd
0x000000000040a192 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000401824 : push rbp ; mov edi, 0x60fe20 ; mov rbp, rsp ; call rax
0x000000000040cabd : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000040a85e : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000408b66 : push rcx ; adc al, 1 ; ret 0x5189
0x0000000000408b4e : push rcx ; adc byte ptr [rcx], al ; ret 0x5189
0x0000000000408b15 : push rcx ; add al, 1 ; ret 0x5189
0x0000000000408b39 : push rcx ; or al, 1 ; ret 0x5189
0x0000000000408b27 : push rcx ; or byte ptr [rcx], al ; ret 0x5189
0x0000000000408b96 : push rcx ; sbb al, 1 ; ret 0x5189
0x0000000000408b7e : push rcx ; sbb byte ptr [rcx], al ; ret 0x5189
0x0000000000408c4d : push rcx ; sub byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000401f83 : push rsi ; add al, 0x25 ; ret 0x6102
0x0000000000400295 : ret
0x0000000000408b07 : ret 0x1189
0x0000000000403b9c : ret 0x1ee8
0x0000000000401722 : ret 0x20ea
0x0000000000401522 : ret 0x20eb
0x0000000000408cc2 : ret 0x30
0x000000000040df01 : ret 0x3956
0x0000000000408e76 : ret 0x40
0x0000000000403233 : ret 0x4240
0x0000000000402ab0 : ret 0x4ae8
0x0000000000408b18 : ret 0x5189
0x000000000040df9b : ret 0x51a3
0x0000000000401d37 : ret 0x6102
0x000000000040df8a : ret 0x8581
0x000000000040b419 : ret 0x8844
0x0000000000408c51 : ret 0x8948
0x000000000040a2bd : ret 0x89a5
0x000000000040263e : ret 0x8b48
0x0000000000402a5c : ret 0x9ee8
0x0000000000401e6e : ret 0xb0
0x00000000004017c5 : ret 0xc148
0x0000000000402255 : ret 0xd284
0x00000000004023f8 : ret 0xe280
0x000000000040a7ac : ret 0xee8
0x0000000000402a08 : ret 0xf2e8
0x000000000040a1ab : ret 0xffe8
0x000000000040f6a1 : ret 0xffff
0x000000000040204b : ret 1
0x000000000040a862 : ret 8
0x00000000004090bd : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040ba5b : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000409880 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x4098eb ; ret
0x00000000004017cc : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4017db ; pop rbp ; ret
0x000000000040ba5c : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000409881 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x4098ea ; ret
0x0000000000402ce7 : ror byte ptr [rax - 0x7d], -0x3c ; pop rbp ; ret
0x0000000000402b6c : ror byte ptr [rax - 0x7f], -0x3c ; xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040cabe : ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000040a85f : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000040defa : sal byte ptr [rbp - 0x164a245b], 0x5b ; ret 0x3956
0x00000000004017ce : sar eax, 1 ; jne 0x4017d9 ; pop rbp ; ret
0x000000000040eae5 : sar edi, -1 ; pop rax ; or al, byte ptr [rax] ; add al, dl ; ret
0x00000000004017cd : sar rax, 1 ; jne 0x4017da ; pop rbp ; ret
0x000000000040f6d8 : sbb al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; or dword ptr [rax], eax ; add al, dl ; ret
0x0000000000408b97 : sbb al, 1 ; ret 0x5189
0x0000000000408b7f : sbb byte ptr [rcx], al ; ret 0x5189
0x000000000040cf08 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040def9 : sti ; sal byte ptr [rbp - 0x164a245b], 0x5b ; ret 0x3956
0x000000000040edc1 : sub al, -1 ; jmp rdx
0x000000000040e94d : sub bh, bh ; call qword ptr [rax]
0x0000000000408c4e : sub byte ptr [rax + 1], cl ; ret 0x8948
0x000000000040236d : sub eax, edx ; add rsi, rax ; mov rax, rsi ; pop rbp ; ret
0x000000000040d3dd : sub esp, 8 ; add rsp, 8 ; ret
0x000000000040d3dc : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040d3aa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040edbc : test byte ptr [rax], al ; add byte ptr [rax], al ; xor byte ptr [rdi + rdi*8], ch ; jmp rdx
0x0000000000401d83 : wait ; add byte ptr [rax], al ; add dh, al ; add al, 0x25 ; ret
0x0000000000402254 : xchg eax, ebp ; ret 0xd284
0x0000000000403121 : xchg eax, ebp ; ret 0xe280
0x0000000000403a1b : xchg eax, edx ; ret 0xd284
0x000000000040b322 : xchg eax, esp ; ret 0xd284
0x00000000004023f7 : xchg eax, esp ; ret 0xe280
0x0000000000402a54 : xor al, 0x25 ; and bl, ch ; add byte ptr [rax - 0x77], cl ; ret 0x9ee8
0x0000000000402aa8 : xor al, 0x25 ; jnp 0x402a91 ; add byte ptr [rax - 0x77], cl ; ret 0x4ae8
0x0000000000402b70 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040edc0 : xor byte ptr [rdi + rdi*8], ch ; jmp rdx
0x0000000000400292 : xor dh, bl ; ret
0x00000000004096f6 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000400291 : xor esi, dword ptr [rdx] ; ret
