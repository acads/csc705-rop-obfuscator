0x0000000000403399 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402237 : add al, ch ; ret
0x000000000040590f : add bl, dh ; ret
0x0000000000404ed3 : add byte ptr [rax - 0x75], cl ; jge 0x404e9f ; call 0x4011c7
0x0000000000404f2f : add byte ptr [rax - 0x75], cl ; jge 0x404efb ; call 0x4011c7
0x0000000000404378 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000040590d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000404ed1 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jge 0x404ea1 ; call 0x4011c9
0x0000000000404f2d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jge 0x404efd ; call 0x4011c9
0x000000000040590b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004005c0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400680 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000004005c2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400682 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000004005c4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400684 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000405c34 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4023
0x0000000000403c6e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040335a : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403100 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040110b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000401169 : add byte ptr [rax], al ; jmp 0x401129
0x0000000000401f42 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000404ed2 : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x40] ; call 0x4011c8
0x00000000004070aa : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; or byte ptr [rax], al ; add byte ptr [rax], dh ; loope 0x4070bb ; jmp rax
0x0000000000401d58 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040423b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004030c8 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004005c6 : add byte ptr [rax], al ; ret
0x0000000000400686 : add byte ptr [rax], al ; ret 0
0x0000000000405c36 : add byte ptr [rax], al ; ret 0x4023
0x00000000004070af : add byte ptr [rax], dh ; loope 0x4070b6 ; jmp rax
0x000000000040423c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004030c9 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000401518 : add byte ptr [rcx], al ; ret
0x0000000000403c70 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000403358 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040423a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004030c7 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040546a : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401514 : add eax, 0x206d66 ; add ebx, esi ; ret
0x00000000004014db : add eax, edx ; sar rax, 1 ; jne 0x4014ec ; pop rbp ; ret
0x0000000000401519 : add ebx, esi ; ret
0x000000000040162b : add esp, 0x10 ; pop rbp ; ret
0x00000000004051cc : add esp, 0x130 ; pop rbp ; ret
0x00000000004030c4 : add esp, 0x138 ; pop rbx ; pop rbp ; ret
0x000000000040452c : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000401d54 : add esp, 0x1c0 ; pop rbp ; ret
0x0000000000401b20 : add esp, 0x20 ; pop rbp ; ret
0x000000000040170d : add esp, 0x30 ; pop rbp ; ret
0x000000000040373c : add esp, 0x50 ; pop rbp ; ret
0x00000000004021d3 : add esp, 0x70 ; pop rbp ; ret
0x000000000040327e : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040364d : add esp, 0x90 ; pop rbp ; ret
0x00000000004043c4 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040110e : add esp, 8 ; ret
0x00000000004014da : add rax, rdx ; sar rax, 1 ; jne 0x4014ed ; pop rbp ; ret
0x000000000040162a : add rsp, 0x10 ; pop rbp ; ret
0x00000000004051cb : add rsp, 0x130 ; pop rbp ; ret
0x00000000004030c3 : add rsp, 0x138 ; pop rbx ; pop rbp ; ret
0x000000000040452b : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000401d53 : add rsp, 0x1c0 ; pop rbp ; ret
0x0000000000401b1f : add rsp, 0x20 ; pop rbp ; ret
0x000000000040170c : add rsp, 0x30 ; pop rbp ; ret
0x000000000040373b : add rsp, 0x50 ; pop rbp ; ret
0x00000000004021d2 : add rsp, 0x70 ; pop rbp ; ret
0x000000000040327d : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040364c : add rsp, 0x90 ; pop rbp ; ret
0x00000000004043c3 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040110d : add rsp, 8 ; ret
0x0000000000405469 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401517 : and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000403417 : and dword ptr [rax], 0x81d8558b ; ret 1
0x0000000000403687 : and eax, 0x48fffffd ; add esp, 0x20 ; pop rbp ; ret
0x00000000004018cf : and eax, 0x608288 ; pop rbp ; ret
0x00000000004018f3 : and eax, 0x608290 ; pop rbp ; ret
0x0000000000401109 : and eax, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000404ed8 : call 0x4011c2
0x0000000000404fe3 : call 0x401212
0x0000000000404fb6 : call 0x4012a2
0x00000000004030f9 : call 0xffffffffe902ba49
0x00000000004030f8 : call 0xffffffffe902ba4a
0x00000000004058e9 : call qword ptr [r12 + rbx*8]
0x00000000004068d3 : call qword ptr [rsi]
0x00000000004058ea : call qword ptr [rsp + rbx*8]
0x000000000040153d : call rax
0x0000000000406af3 : call rdx
0x00000000004051ca : clc ; add rsp, 0x130 ; pop rbp ; ret
0x000000000040472f : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403c81 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004014df : clc ; jne 0x4014e8 ; pop rbp ; ret
0x0000000000402085 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040583b : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040583e : clc ; pop rbp ; ret
0x0000000000405316 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404b9b : cld ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404ae0 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000405838 : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000405313 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004052b6 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404add : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404f90 : cld ; ret
0x00000000004030c6 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040149d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4014b0 ; pop rbp ; ret
0x0000000000403d7c : cwde ; mov rcx, qword ptr [rax*8 + 0x406138] ; jmp rcx
0x0000000000402285 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; xor byte ptr [rax + rax*2], bl ; jmp rcx
0x000000000040512f : dec dword ptr [rax - 0x7f] ; ret 1
0x00000000004031ab : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000402ae3 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x00000000004058ec : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000401629 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004014b0 : hlt ; pop rbp ; mov edi, 0x608228 ; jmp rax
0x0000000000401516 : insd dword ptr [rdi], dx ; and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000401515 : insw word ptr [rdi], dx ; and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000404380 : int 0x80
0x00000000004014a3 : ja 0x4014aa ; pop rbp ; ret
0x00000000004014af : je 0x4014ad ; pop rbp ; mov edi, 0x608228 ; jmp rax
0x0000000000404ed6 : jge 0x404e9c ; call 0x4011c4
0x0000000000404f32 : jge 0x404ef8 ; call 0x4011c4
0x000000000040116b : jmp 0x401127
0x0000000000406c93 : jmp qword ptr [rax]
0x0000000000406b73 : jmp qword ptr [rdx]
0x00000000004014b7 : jmp rax
0x000000000040228e : jmp rcx
0x00000000004014f7 : jmp rdx
0x00000000004014e0 : jne 0x4014e7 ; pop rbp ; ret
0x00000000004021d5 : jo 0x402236 ; ret
0x00000000004038e4 : jo 0x403945 ; ret
0x0000000000403a1e : jo 0x403a7f ; ret
0x0000000000403280 : js 0x4032e0 ; pop rbp ; ret
0x00000000004070b1 : loope 0x4070b4 ; jmp rax
0x0000000000404fb4 : mov al, 0 ; call 0x4012a4
0x00000000004037bb : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040364b : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000405466 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004018f1 : mov byte ptr [0x608290], al ; pop rbp ; ret
0x0000000000401513 : mov byte ptr [rip + 0x206d66], 1 ; ret
0x000000000040546c : mov dh, -0x40 ; pop rbp ; ret
0x00000000004018cd : mov dword ptr [0x608288], edi ; pop rbp ; ret
0x0000000000402086 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000401f94 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000402048 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000401709 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401627 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405839 : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004020fe : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040327c : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000401f48 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040464b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401b1c : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401f45 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000401a9f : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004048e3 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401efd : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401f8e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040204a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004021cf : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040327a : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004037b9 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000405314 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404b99 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404ade : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040472d : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403c7f : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040583c : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000404ff1 : mov ebp, 0xffffff00 ; call 0x401217
0x000000000040153b : mov ebp, esp ; call rax
0x00000000004014a1 : mov ebp, esp ; ja 0x4014ac ; pop rbp ; ret
0x0000000000402287 : mov ecx, dword ptr [rax*8 + 0x405c30] ; jmp rcx
0x0000000000402567 : mov ecx, dword ptr [rax*8 + 0x405c78] ; jmp rcx
0x0000000000403d7e : mov ecx, dword ptr [rax*8 + 0x406138] ; jmp rcx
0x0000000000401f91 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401535 : mov edi, 0x607e20 ; mov rbp, rsp ; call rax
0x00000000004014b2 : mov edi, 0x608228 ; jmp rax
0x00000000004014f2 : mov edi, 0x608228 ; jmp rdx
0x0000000000404ff0 : mov edi, dword ptr [rbp - 0x100] ; call 0x401218
0x0000000000404ed5 : mov edi, dword ptr [rbp - 0x40] ; call 0x4011c5
0x0000000000404fe1 : mov edi, eax ; call 0x401214
0x00000000004058e7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x00000000004058e6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x00000000004014f0 : mov esi, eax ; mov edi, 0x608228 ; jmp rdx
0x00000000004018cc : mov qword ptr [0x608288], rdi ; pop rbp ; ret
0x00000000004020fd : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004037ba : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040327b : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x000000000040464a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401b1b : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401f44 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000401a9e : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004048e2 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401efc : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004021ce : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004037b8 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040472c : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403c7e : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040153a : mov rbp, rsp ; call rax
0x00000000004014a0 : mov rbp, rsp ; ja 0x4014ad ; pop rbp ; ret
0x0000000000402286 : mov rcx, qword ptr [rax*8 + 0x405c30] ; jmp rcx
0x0000000000402566 : mov rcx, qword ptr [rax*8 + 0x405c78] ; jmp rcx
0x0000000000403d7d : mov rcx, qword ptr [rax*8 + 0x406138] ; jmp rcx
0x0000000000404fef : mov rdi, qword ptr [rbp - 0x100] ; call 0x401219
0x0000000000404ed4 : mov rdi, qword ptr [rbp - 0x40] ; call 0x4011c6
0x0000000000404fe0 : mov rdi, rax ; call 0x401215
0x00000000004014ef : mov rsi, rax ; mov edi, 0x608228 ; jmp rdx
0x00000000004070ac : movsb byte ptr [rdi], byte ptr [rsi] ; or byte ptr [rax], al ; add byte ptr [rax], dh ; loope 0x4070b9 ; jmp rax
0x000000000040546b : movzx eax, al ; pop rbp ; ret
0x0000000000405908 : nop dword ptr [rax + rax] ; ret
0x0000000000402288 : or al, 0xffffffffffffffc5 ; xor byte ptr [rax + rax*2], bl ; jmp rcx
0x0000000000402ade : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000402adf : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x00000000004070ad : or byte ptr [rax], al ; add byte ptr [rax], dh ; loope 0x4070b8 ; jmp rax
0x00000000004039a1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004058fc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004058fe : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040423e : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405900 : pop r14 ; pop r15 ; ret
0x0000000000404240 : pop r15 ; pop rbp ; ret
0x0000000000405902 : pop r15 ; ret
0x0000000000401512 : pop rbp ; mov byte ptr [rip + 0x206d66], 1 ; ret
0x00000000004014b1 : pop rbp ; mov edi, 0x608228 ; jmp rax
0x00000000004014ee : pop rbp ; mov rsi, rax ; mov edi, 0x608228 ; jmp rdx
0x00000000004058fb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004058ff : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004014a5 : pop rbp ; ret
0x000000000040423d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004030ca : pop rbx ; pop rbp ; ret
0x0000000000404241 : pop rdi ; pop rbp ; ret
0x0000000000405903 : pop rdi ; ret
0x000000000040423f : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000405901 : pop rsi ; pop r15 ; ret
0x00000000004058fd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000401e81 : push 0x48006082 ; add esp, 0x30 ; pop rbp ; ret
0x000000000040373e : push rax ; pop rbp ; ret
0x0000000000402ae2 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000401534 : push rbp ; mov edi, 0x607e20 ; mov rbp, rsp ; call rax
0x0000000000404dbd : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x00000000004031ae : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x00000000004005c8 : ret
0x0000000000400688 : ret 0
0x0000000000401372 : ret 0x206d
0x0000000000401172 : ret 0x206e
0x0000000000405c38 : ret 0x4023
0x0000000000403d39 : ret 0x8844
0x00000000004047b2 : ret 0x8948
0x0000000000402c0d : ret 0x89a5
0x0000000000402ae6 : ret 0x8b48
0x0000000000402afb : ret 0xafe8
0x00000000004014d5 : ret 0xc148
0x0000000000403c73 : ret 0xd284
0x00000000004030fc : ret 0xee8
0x0000000000404eda : ret 0xffff
0x000000000040341e : ret 1
0x00000000004031b2 : ret 8
0x000000000040437b : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x00000000004021d0 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x40223b ; ret
0x00000000004014dc : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4014eb ; pop rbp ; ret
0x000000000040437c : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x00000000004021d1 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x40223a ; ret
0x0000000000404dbe : ror byte ptr [rax - 0x7f], 1 ; ret 1
0x00000000004031af : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x00000000004014de : sar eax, 1 ; jne 0x4014e9 ; pop rbp ; ret
0x00000000004014dd : sar rax, 1 ; jne 0x4014ea ; pop rbp ; ret
0x0000000000404ed7 : shr al, -0x1d ; ret 0xffff
0x0000000000404f33 : shr al, -0x79 ; ret 0xffff
0x0000000000404f8e : shr al, -4 ; ret
0x0000000000405468 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040593d : sub esp, 8 ; add rsp, 8 ; ret
0x000000000040593c : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040590a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000402569 : vsubps xmm8, xmm0, xmmword ptr [rax] ; jmp rcx
0x0000000000402289 : vsubps xmm8, xmm9, xmmword ptr [rax] ; jmp rcx
0x0000000000403c72 : xchg eax, esp ; ret 0xd284
0x000000000040228a : xor byte ptr [rax + rax*2], bl ; jmp rcx
0x00000000004051ce : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000402046 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
