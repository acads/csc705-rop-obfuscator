0x000000000040ac78 : adc al, 0x48 ; add esp, 0x10 ; pop rbp ; ret
0x0000000000408235 : adc al, 1 ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040c3c9 : adc al, byte ptr [rax] ; add al, al ; out -1, eax ; jmp rax
0x000000000040c399 : adc al, byte ptr [rax] ; add byte ptr [rax], dh ; out -1, al ; jmp qword ptr [rax]
0x00000000004097c8 : adc al, ch ; ret 0xff7f
0x000000000040c349 : adc byte ptr [rax], al ; add byte ptr [rax], dl ; loope 0x40c354 ; jmp rax
0x000000000040c09c : adc byte ptr [rbx - 1], dh ; jmp qword ptr [rax]
0x000000000040ac5c : adc dh, dh ; ret 0xf01
0x000000000040c389 : adc dword ptr [rax], eax ; add al, al ; in eax, -1 ; jmp rax
0x000000000040c359 : adc dword ptr [rax], eax ; add al, al ; loop 0x40c364 ; jmp qword ptr [rax]
0x0000000000405689 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040c38b : add al, al ; in eax, -1 ; jmp rax
0x000000000040c35b : add al, al ; loop 0x40c362 ; jmp qword ptr [rax]
0x000000000040c29b : add al, al ; mov dl, -1 ; jmp qword ptr [rax]
0x000000000040c3cb : add al, al ; out -1, eax ; jmp rax
0x000000000040c08b : add al, dl ; jb 0x40c092 ; jmp rax
0x000000000040ae0f : add bl, dh ; ret
0x0000000000408ef3 : add byte ptr [rax + 1], cl ; ret 0x4a3b
0x0000000000406ca8 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000040c2fb : add byte ptr [rax], ah ; ret 0xffff
0x000000000040c09a : add byte ptr [rax], al ; adc byte ptr [rbx - 1], dh ; jmp qword ptr [rax]
0x000000000040ae0d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000408ef1 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x4a3b
0x000000000040ae0b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040ab51 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040ae0c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000403179 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004031fb : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b71b8b], cl ; ret 0xb0
0x00000000004029b6 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b72b8b], cl ; ret 0xb0
0x000000000040aba2 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000405f5e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040564a : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004053f0 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040ab53 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040164b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000040c606 : add byte ptr [rax], al ; call 0x1740c57e
0x000000000040d146 : add byte ptr [rax], al ; cwde ; sar edi, 1 ; jmp rax
0x0000000000401829 : add byte ptr [rax], al ; jmp 0x401669
0x000000000040c28a : add byte ptr [rax], al ; mov dl, -1 ; jmp rax
0x0000000000404232 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040c602 : add byte ptr [rax], al ; mov word ptr [rcx], es ; add byte ptr [rax], al ; call 0x1740c582
0x000000000040c0ca : add byte ptr [rax], al ; nop ; jbe 0x40c0d3 ; jmp rax
0x000000000040c0da : add byte ptr [rax], al ; nop ; js 0x40c0e3 ; jmp qword ptr [rax]
0x000000000040c31a : add byte ptr [rax], al ; nop ; sar edi, cl ; jmp qword ptr [rax]
0x0000000000403dfb : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040317a : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004053b8 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040c25a : add byte ptr [rax], al ; push rax ; mov al, -1 ; jmp qword ptr [rax]
0x000000000040ae0e : add byte ptr [rax], al ; ret
0x000000000040c08a : add byte ptr [rax], al ; sal byte ptr [rdx - 1], 1 ; jmp rax
0x000000000040c3ca : add byte ptr [rax], al ; shl bh, -1 ; jmp rax
0x000000000040c38a : add byte ptr [rax], al ; shl ch, -1 ; jmp rax
0x000000000040c35a : add byte ptr [rax], al ; shl dl, -1 ; jmp qword ptr [rax]
0x000000000040c39b : add byte ptr [rax], dh ; out -1, al ; jmp qword ptr [rax]
0x000000000040c318 : add byte ptr [rax], dl ; add byte ptr [rax], al ; nop ; sar edi, cl ; jmp qword ptr [rax]
0x000000000040c09b : add byte ptr [rax], dl ; jae 0x40c0a2 ; jmp qword ptr [rax]
0x000000000040c34b : add byte ptr [rax], dl ; loope 0x40c352 ; jmp rax
0x000000000040c30b : add byte ptr [rax], dl ; ret
0x000000000040317b : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004053b9 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040222c : add byte ptr [rbx - 0x1a34b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004027d9 : add byte ptr [rbx - 0x1cf4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004031fd : add byte ptr [rbx - 0x76b71b8b], cl ; ret 0xb0
0x00000000004029b8 : add byte ptr [rbx - 0x76b72b8b], cl ; ret 0xb0
0x0000000000402b28 : add byte ptr [rbx - 0x8b4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000401bc8 : add byte ptr [rcx], al ; ret
0x000000000040c358 : add byte ptr [rcx], dl ; add byte ptr [rax], al ; shl dl, -1 ; jmp qword ptr [rax]
0x000000000040c0d8 : add byte ptr [rdi], al ; add byte ptr [rax], al ; nop ; js 0x40c0e5 ; jmp qword ptr [rax]
0x000000000040aba4 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000405f60 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040c098 : add byte ptr [rsi], al ; add byte ptr [rax], al ; adc byte ptr [rbx - 1], dh ; jmp qword ptr [rax]
0x0000000000405648 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406b6a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004053b7 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004079a6 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004029cf : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040939b : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000040a56a : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401bc4 : add eax, 0x20c78e ; add ebx, esi ; ret
0x0000000000401b8b : add eax, edx ; sar rax, 1 ; jne 0x401b9c ; pop rbp ; ret
0x00000000004098e9 : add eax, esi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x0000000000401bc9 : add ebx, esi ; ret
0x000000000040826b : add edi, eax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x0000000000402a30 : add esi, eax ; mov rax, rsi ; pop rbp ; ret
0x0000000000401d5b : add esp, 0x10 ; pop rbp ; ret
0x0000000000409d65 : add esp, 0x10e0 ; pop rbp ; ret
0x0000000000407fcc : add esp, 0x130 ; pop rbp ; ret
0x00000000004053b4 : add esp, 0x138 ; pop rbx ; pop rbp ; ret
0x0000000000403df7 : add esp, 0x170 ; pop rbp ; ret
0x0000000000406e5c : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000403217 : add esp, 0x20 ; pop rbp ; ret
0x0000000000408c6d : add esp, 0x250 ; pop rbp ; ret
0x0000000000401e3d : add esp, 0x30 ; pop rbp ; ret
0x0000000000407938 : add esp, 0x40 ; pop rbp ; ret
0x0000000000405a2c : add esp, 0x50 ; pop rbp ; ret
0x0000000000407433 : add esp, 0x60 ; pop rbp ; ret
0x00000000004044c3 : add esp, 0x70 ; pop rbp ; ret
0x000000000040556e : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040593d : add esp, 0x90 ; pop rbp ; ret
0x0000000000404170 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040a127 : add esp, 0xc0 ; pop rbp ; ret
0x00000000004065b7 : add esp, 0xf0 ; pop rbp ; ret
0x000000000040164e : add esp, 8 ; ret
0x0000000000401b8a : add rax, rdx ; sar rax, 1 ; jne 0x401b9d ; pop rbp ; ret
0x00000000004098e8 : add rax, rsi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x000000000040826a : add rdi, rax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x0000000000402a2f : add rsi, rax ; mov rax, rsi ; pop rbp ; ret
0x0000000000401d5a : add rsp, 0x10 ; pop rbp ; ret
0x0000000000409d64 : add rsp, 0x10e0 ; pop rbp ; ret
0x0000000000407fcb : add rsp, 0x130 ; pop rbp ; ret
0x00000000004053b3 : add rsp, 0x138 ; pop rbx ; pop rbp ; ret
0x0000000000403df6 : add rsp, 0x170 ; pop rbp ; ret
0x0000000000406e5b : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000403216 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000408c6c : add rsp, 0x250 ; pop rbp ; ret
0x0000000000401e3c : add rsp, 0x30 ; pop rbp ; ret
0x0000000000407937 : add rsp, 0x40 ; pop rbp ; ret
0x0000000000405a2b : add rsp, 0x50 ; pop rbp ; ret
0x0000000000407432 : add rsp, 0x60 ; pop rbp ; ret
0x00000000004044c2 : add rsp, 0x70 ; pop rbp ; ret
0x000000000040556d : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040593c : add rsp, 0x90 ; pop rbp ; ret
0x000000000040416f : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040a126 : add rsp, 0xc0 ; pop rbp ; ret
0x00000000004065b6 : add rsp, 0xf0 ; pop rbp ; ret
0x000000000040164d : add rsp, 8 ; ret
0x000000000040939a : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040a569 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401bc7 : and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000405977 : and eax, 0x48fffffd ; add esp, 0x20 ; pop rbp ; ret
0x00000000004032e0 : and eax, 0x60e280 ; pop rbp ; ret
0x00000000004032ff : and eax, 0x60e370 ; pop rbp ; ret
0x0000000000403323 : and eax, 0x60e378 ; pop rbp ; ret
0x000000000040c608 : call 0x1740c57c
0x0000000000408ac9 : call 0x30c19
0x000000000040544d : call 0x4016a2
0x00000000004053e9 : call 0xffffffffe902dd39
0x00000000004053e8 : call 0xffffffffe902dd3a
0x0000000000409773 : call 0xffffffffe90320c3
0x000000000040ade9 : call qword ptr [r12 + rbx*8]
0x000000000040c60b : call qword ptr [rsi]
0x000000000040adea : call qword ptr [rsp + rbx*8]
0x0000000000401bed : call rax
0x000000000040d44b : call rdi
0x000000000040c8cb : call rdx
0x0000000000407fca : clc ; add rsp, 0x130 ; pop rbp ; ret
0x000000000040705f : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000408c6b : clc ; add rsp, 0x250 ; pop rbp ; ret
0x000000000040389e : clc ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040aa68 : clc ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040a271 : clc ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040ad90 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040416e : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x000000000040a125 : clc ; add rsp, 0xc0 ; pop rbp ; ret
0x0000000000401b8f : clc ; jne 0x401b98 ; pop rbp ; ret
0x000000000040ac75 : clc ; mov dword ptr [rax + 0x14], ecx ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404375 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040a93b : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040a93e : clc ; pop rbp ; ret
0x000000000040a416 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000409d63 : cld ; add rsp, 0x10e0 ; pop rbp ; ret
0x000000000040774b : cld ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407690 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040a938 : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040a413 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040a3b6 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040768d : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004053b6 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000401b4d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401b60 ; pop rbp ; ret
0x00000000004066ac : cwde ; mov rcx, qword ptr [rax*8 + 0x40bb40] ; jmp rcx
0x000000000040d148 : cwde ; sar edi, 1 ; jmp rax
0x000000000040268d : dec dword ptr [rax - 0x1c86b] ; dec dword ptr [rax - 0x77] ; ret 0x8a44
0x0000000000408ac5 : dec dword ptr [rax - 0x75] ; push rbp ; call 0x30c1d
0x000000000040650b : dec dword ptr [rax - 0x77] ; ret 0x2ce8
0x0000000000402693 : dec dword ptr [rax - 0x77] ; ret 0x8a44
0x0000000000408afb : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000402232 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040625a : dec dword ptr [rax - 0x77] ; ret 0xdde8
0x0000000000407f2f : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000040549b : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000040d449 : fdivr st(7) ; call rdi
0x0000000000401be7 : fisub word ptr [rax] ; mov rbp, rsp ; call rax
0x0000000000404dd3 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040adec : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000401d59 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040abaf : hlt ; mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401b60 : hlt ; pop rbp ; mov edi, 0x60e320 ; jmp rax
0x00000000004093a1 : in al, dx ; pop rbp ; ret
0x000000000040c38d : in eax, -1 ; jmp rax
0x000000000040c2f7 : inc dword ptr [rax + 0x2000000f] ; ret 0xffff
0x000000000040c397 : inc dword ptr [rax] ; adc al, byte ptr [rax] ; add byte ptr [rax], dh ; out -1, al ; jmp qword ptr [rax]
0x000000000040c357 : inc dword ptr [rax] ; adc dword ptr [rax], eax ; add al, al ; loop 0x40c366 ; jmp qword ptr [rax]
0x000000000040c3c7 : inc eax ; adc al, byte ptr [rax] ; add al, al ; out -1, eax ; jmp rax
0x000000000040c347 : inc eax ; adc byte ptr [rax], al ; add byte ptr [rax], dl ; loope 0x40c356 ; jmp rax
0x000000000040c387 : inc eax ; adc dword ptr [rax], eax ; add al, al ; in eax, -1 ; jmp rax
0x0000000000406cb0 : int 0x80
0x0000000000401b53 : ja 0x401b5a ; pop rbp ; ret
0x000000000040c09d : jae 0x40c0a0 ; jmp qword ptr [rax]
0x000000000040c08d : jb 0x40c090 ; jmp rax
0x000000000040c0cd : jbe 0x40c0d0 ; jmp rax
0x0000000000401b5f : je 0x401b5d ; pop rbp ; mov edi, 0x60e320 ; jmp rax
0x000000000040182b : jmp 0x401667
0x000000000040c05f : jmp qword ptr [rax]
0x000000000040d08b : jmp qword ptr [rcx]
0x000000000040c94b : jmp qword ptr [rdx]
0x0000000000401b67 : jmp rax
0x00000000004020ba : jmp rcx
0x0000000000401ba7 : jmp rdx
0x0000000000401b90 : jne 0x401b97 ; pop rbp ; ret
0x0000000000403df9 : jo 0x403e01 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004044c5 : jo 0x404526 ; ret
0x0000000000405bd4 : jo 0x405c35 ; ret
0x0000000000405d0e : jo 0x405d6f ; ret
0x0000000000405570 : js 0x4055d0 ; pop rbp ; ret
0x000000000040c0dd : js 0x40c0e0 ; jmp qword ptr [rax]
0x000000000040c35d : loop 0x40c360 ; jmp qword ptr [rax]
0x000000000040c34d : loope 0x40c350 ; jmp rax
0x000000000040358b : loopne 0x4035db ; add esp, 0x20 ; pop rbp ; ret
0x000000000040358a : loopne 0x4035dc ; add esp, 0x20 ; pop rbp ; ret
0x000000000040369b : loopne 0x4036eb ; add esp, 0x30 ; pop rbp ; ret
0x000000000040369a : loopne 0x4036ec ; add esp, 0x30 ; pop rbp ; ret
0x0000000000407550 : loopne 0x4075a0 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040754f : loopne 0x4075a1 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000409d67 : loopne 0x409d7e ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040c25d : mov al, -1 ; jmp qword ptr [rax]
0x0000000000405aab : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040593b : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000405448 : mov al, 0x48 ; mov dword ptr [rbp - 0x30], eax ; call 0x4016a7
0x000000000040a566 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000403321 : mov byte ptr [0x60e378], al ; pop rbp ; ret
0x0000000000408233 : mov byte ptr [rax + 0x14], 1 ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004098bb : mov byte ptr [rax + 0xc], 1 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401bc3 : mov byte ptr [rip + 0x20c78e], 1 ; ret
0x00000000004079a8 : mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004029d1 : mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040939d : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000040a56c : mov dh, -0x40 ; pop rbp ; ret
0x000000000040c2cd : mov dh, -1 ; jmp rax
0x000000000040c29d : mov dl, -1 ; jmp qword ptr [rax]
0x000000000040c28d : mov dl, -1 ; jmp rax
0x00000000004032de : mov dword ptr [0x60e280], eax ; pop rbp ; ret
0x00000000004032fd : mov dword ptr [0x60e370], edi ; pop rbp ; ret
0x000000000040ac76 : mov dword ptr [rax + 0x14], ecx ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404376 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000404284 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000404338 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004028ef : mov dword ptr [rbp - 0x18], eax ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000403589 : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401e39 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040544a : mov dword ptr [rbp - 0x30], eax ; call 0x4016a5
0x0000000000401d57 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040a939 : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004043ee : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403214 : mov dword ptr [rcx], eax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004098ec : mov dword ptr [rdi + 0x10], eax ; pop rbp ; ret
0x000000000040826e : mov dword ptr [rsi], edi ; pop rbp ; ret
0x000000000040556c : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000404238 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000406f7b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040354c : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404235 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004034cf : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000407213 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004041ed : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000407934 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040427e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004028f3 : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040754e : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403699 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040433a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040749b : mov eax, dword ptr [rbp - 0x2c] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004044bf : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040556a : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000405aa9 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000405446 : mov eax, dword ptr [rbp - 0x50] ; mov qword ptr [rbp - 0x30], rax ; call 0x4016a9
0x000000000040abb0 : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040a414 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407749 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040768e : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040705d : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040389c : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040aa66 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040a26f : mov eax, dword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040ad8e : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040a93c : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402a33 : mov eax, esi ; pop rbp ; ret
0x0000000000401beb : mov ebp, esp ; call rax
0x0000000000401b51 : mov ebp, esp ; ja 0x401b5c ; pop rbp ; ret
0x00000000004020b3 : mov ecx, dword ptr [rax*8 + 0x40ae70] ; jmp rcx
0x0000000000404577 : mov ecx, dword ptr [rax*8 + 0x40b640] ; jmp rcx
0x0000000000404857 : mov ecx, dword ptr [rax*8 + 0x40b688] ; jmp rcx
0x00000000004066ae : mov ecx, dword ptr [rax*8 + 0x40bb40] ; jmp rcx
0x0000000000404281 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401be5 : mov edi, 0x60de20 ; mov rbp, rsp ; call rax
0x0000000000401b62 : mov edi, 0x60e320 ; jmp rax
0x0000000000401ba2 : mov edi, 0x60e320 ; jmp rdx
0x000000000040c8c9 : mov edi, dr1 ; call rdx
0x0000000000408268 : mov edi, dword ptr [rsi] ; add rdi, rax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x000000000040ade7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000040ade6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000401bc5 : mov es, edi ; and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000401ba0 : mov esi, eax ; mov edi, 0x60e320 ; jmp rdx
0x00000000004093a0 : mov esp, ebp ; pop rbp ; ret
0x00000000004032dd : mov qword ptr [0x60e280], rax ; pop rbp ; ret
0x00000000004032fc : mov qword ptr [0x60e370], rdi ; pop rbp ; ret
0x00000000004028ee : mov qword ptr [rbp - 0x18], rax ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000405449 : mov qword ptr [rbp - 0x30], rax ; call 0x4016a6
0x00000000004043ed : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403213 : mov qword ptr [rcx], rax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004098eb : mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x000000000040826d : mov qword ptr [rsi], rdi ; pop rbp ; ret
0x0000000000405aaa : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000405447 : mov r8b, 0x48 ; mov dword ptr [rbp - 0x30], eax ; call 0x4016a8
0x000000000040556b : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000406f7a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040354b : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404234 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004034ce : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000407212 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004041ec : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000407933 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004028f2 : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040754d : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403698 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004044be : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000405aa8 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040705c : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040389b : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040aa65 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040a26e : mov rax, qword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040ad8d : mov rax, qword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000402a32 : mov rax, rsi ; pop rbp ; ret
0x0000000000401bea : mov rbp, rsp ; call rax
0x0000000000401b50 : mov rbp, rsp ; ja 0x401b5d ; pop rbp ; ret
0x00000000004020b2 : mov rcx, qword ptr [rax*8 + 0x40ae70] ; jmp rcx
0x0000000000404576 : mov rcx, qword ptr [rax*8 + 0x40b640] ; jmp rcx
0x0000000000404856 : mov rcx, qword ptr [rax*8 + 0x40b688] ; jmp rcx
0x00000000004066ad : mov rcx, qword ptr [rax*8 + 0x40bb40] ; jmp rcx
0x0000000000401b9f : mov rsi, rax ; mov edi, 0x60e320 ; jmp rdx
0x000000000040939f : mov rsp, rbp ; pop rbp ; ret
0x000000000040c604 : mov word ptr [rcx], es ; add byte ptr [rax], al ; call 0x1740c580
0x0000000000403060 : movabs al, byte ptr [0x81b955b60f5e00c6] ; ret 0x40
0x00000000004079a7 : movzx eax, al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004029d0 : movzx eax, al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040939c : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040a56b : movzx eax, al ; pop rbp ; ret
0x000000000040c0cc : nop ; jbe 0x40c0d1 ; jmp rax
0x000000000040c0dc : nop ; js 0x40c0e1 ; jmp qword ptr [rax]
0x000000000040c31c : nop ; sar edi, cl ; jmp qword ptr [rax]
0x000000000040ae08 : nop dword ptr [rax + rax] ; ret
0x00000000004098bd : or al, 1 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404dce : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000404dcf : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040c2f8 : or byte ptr [rdi], 0 ; add byte ptr [rax], ah ; ret 0xffff
0x0000000000405c91 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040c39d : out -1, al ; jmp qword ptr [rax]
0x000000000040c3cd : out -1, eax ; jmp rax
0x000000000040adfc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040adfe : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040317d : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040ae00 : pop r14 ; pop r15 ; ret
0x000000000040317f : pop r15 ; pop rbp ; ret
0x000000000040ae02 : pop r15 ; ret
0x0000000000401bc2 : pop rbp ; mov byte ptr [rip + 0x20c78e], 1 ; ret
0x0000000000401b61 : pop rbp ; mov edi, 0x60e320 ; jmp rax
0x0000000000401b9e : pop rbp ; mov rsi, rax ; mov edi, 0x60e320 ; jmp rdx
0x000000000040adfb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040adff : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401b55 : pop rbp ; ret
0x000000000040317c : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004053ba : pop rbx ; pop rbp ; ret
0x0000000000403180 : pop rdi ; pop rbp ; ret
0x000000000040ae03 : pop rdi ; ret
0x000000000040317e : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040ae01 : pop rsi ; pop r15 ; ret
0x000000000040adfd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040c25c : push rax ; mov al, -1 ; jmp qword ptr [rax]
0x0000000000405a2e : push rax ; pop rbp ; ret
0x0000000000408ac8 : push rbp ; call 0x30c1a
0x0000000000404dd2 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000401be4 : push rbp ; mov edi, 0x60de20 ; mov rbp, rsp ; call rax
0x0000000000407bbd : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000040549e : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000040c348 : rcl byte ptr [rax], 0 ; add byte ptr [rax], dl ; loope 0x40c355 ; jmp rax
0x000000000040c388 : rcl byte ptr [rcx], 0 ; add al, al ; in eax, -1 ; jmp rax
0x000000000040c3c8 : rcl byte ptr [rdx], 0 ; add al, al ; out -1, eax ; jmp rax
0x0000000000401651 : ret
0x0000000000409985 : ret 0x10
0x0000000000408315 : ret 0x18
0x0000000000401bd4 : ret 0x20
0x0000000000401a32 : ret 0x20c7
0x0000000000401832 : ret 0x20c8
0x0000000000409cbf : ret 0x2be8
0x000000000040650e : ret 0x2ce8
0x0000000000402fd5 : ret 0x40
0x0000000000408ef6 : ret 0x4a3b
0x0000000000409f81 : ret 0x69e8
0x0000000000404deb : ret 0x6fe8
0x0000000000403239 : ret 0x8801
0x0000000000406669 : ret 0x8844
0x00000000004070e2 : ret 0x8948
0x0000000000404efd : ret 0x89a5
0x0000000000402696 : ret 0x8a44
0x00000000004024dc : ret 0x8b48
0x0000000000402235 : ret 0xb0
0x0000000000400284 : ret 0xb211
0x00000000004080d6 : ret 0xc
0x0000000000401b85 : ret 0xc148
0x0000000000405f63 : ret 0xd284
0x000000000040625d : ret 0xdde8
0x0000000000409776 : ret 0xe4e8
0x0000000000409b02 : ret 0xe8e8
0x00000000004053ec : ret 0xee8
0x000000000040ac5e : ret 0xf01
0x00000000004097ca : ret 0xff7f
0x0000000000407bca : ret 0xff9d
0x000000000040544f : ret 0xffff
0x0000000000402ecb : ret 1
0x00000000004054a2 : ret 8
0x000000000040c088 : rol byte ptr [rip + 0x72d00000], -1 ; jmp rax
0x0000000000406cab : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x00000000004044c0 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x40452b ; ret
0x0000000000401b8c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401b9b ; pop rbp ; ret
0x000000000040939e : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x0000000000406cac : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x00000000004044c1 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x40452a ; ret
0x0000000000403df5 : ror byte ptr [rax - 0x7f], -0x3c ; jo 0x403e05 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000407bbe : ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000040549f : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000040c308 : ror byte ptr [rdi], 0 ; add byte ptr [rax], dl ; ret
0x000000000040c288 : ror byte ptr [rip - 0x4dc00000], -1 ; jmp rax
0x000000000040c08c : sal byte ptr [rdx - 1], 1 ; jmp rax
0x000000000040c2f4 : sar byte ptr [rdi + 0xf80ffff], 0 ; add byte ptr [rax], ah ; ret 0xffff
0x0000000000401b8e : sar eax, 1 ; jne 0x401b99 ; pop rbp ; ret
0x000000000040d149 : sar edi, 1 ; jmp rax
0x000000000040c31d : sar edi, cl ; jmp qword ptr [rax]
0x0000000000401b8d : sar rax, 1 ; jne 0x401b9a ; pop rbp ; ret
0x000000000040acb5 : setne al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040c3cc : shl bh, -1 ; jmp rax
0x000000000040acb7 : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000040c38c : shl ch, -1 ; jmp rax
0x000000000040c35c : shl dl, -1 ; jmp qword ptr [rax]
0x000000000040544c : shr al, 1 ; ret 0xffff
0x000000000040544b : shr r8b, 1 ; ret 0xffff
0x000000000040a568 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000402a2d : sub eax, edx ; add rsi, rax ; mov rax, rsi ; pop rbp ; ret
0x0000000000409991 : sub edx, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040ae51 : sub esp, 8 ; add rsp, 8 ; ret
0x000000000040ae50 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040ae0a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040aba6 : xchg eax, ebp ; ret 0xd284
0x000000000040acb6 : xchg eax, ebp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000405f62 : xchg eax, esp ; ret 0xd284
0x0000000000407fce : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000404336 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
