0x0000000000418f11 : adc al, -0x75 ; hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000409b43 : adc al, -0x7f ; ret 0x76c
0x0000000000409995 : adc al, 0x2b ; test dword ptr [rax + 0x39fffff8], edx ; ret 0x8d0f
0x00000000004099fc : adc al, 0x2b ; test dword ptr [rax + 0x39fffff8], edx ; ret 0xf40
0x0000000000419668 : adc al, 0x48 ; add esp, 0x10 ; pop rbp ; ret
0x0000000000419905 : adc al, 1 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000416ce3 : adc al, byte ptr [rcx + 0x4f9] ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x0000000000416c58 : adc al, byte ptr [rcx + 0x4f9] ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf280
0x000000000040b137 : adc al, ch ; ret
0x000000000040e578 : adc al, ch ; ret 0xff3a
0x00000000004049bb : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041fcd0 : adc byte ptr [rsi + rdi*8], ch ; jmp rdx
0x000000000041964c : adc dh, dh ; ret 0xf01
0x00000000004070c7 : adc eax, 0x48000000 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000410729 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041fccb : add ah, ah ; add byte ptr [rax], al ; add byte ptr [rax], dl ; sub al, -2 ; jmp rdx
0x00000000004206cb : add ah, ah ; or al, byte ptr [rax] ; add byte ptr [rax], al ; test al, -2 ; call rsp
0x000000000040f669 : add al, 0x25 ; ret
0x000000000040ac5a : add al, 0x48 ; add eax, ecx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041ffec : add al, 4 ; add byte ptr [rax], al ; add byte ptr [rbx - 2], dl ; call qword ptr [rsi]
0x0000000000405cfd : add al, ch ; insd dword ptr [rdi], dx ; mov byte ptr [rax], 0 ; pop rbp ; ret
0x0000000000403018 : add al, ch ; ret 0xa7
0x0000000000403d68 : add al, ch ; ret 0xffe1
0x0000000000403ea8 : add al, ch ; ret 0xffe3
0x00000000004026c8 : add al, ch ; ret 0xfff9
0x0000000000415ce2 : add al, ch ; ret 0xfffe
0x0000000000415b99 : add al, ch ; xchg eax, ecx ; ret
0x000000000041f4c3 : add al, dh ; ret 0xfffe
0x000000000041c3ef : add bl, dh ; ret
0x000000000041a5c3 : add byte ptr [rax + 1], cl ; ret 0x4a3b
0x000000000040f666 : add byte ptr [rax - 0x73], cl ; add al, 0x25 ; ret
0x0000000000411e78 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000041108d : add byte ptr [rax - 0x77], cl ; jge 0x411090 ; pop rbp ; ret
0x0000000000402fe1 : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000041fcce : add byte ptr [rax], al ; adc byte ptr [rsi + rdi*8], ch ; jmp rdx
0x000000000041ffea : add byte ptr [rax], al ; add al, 4 ; add byte ptr [rax], al ; add byte ptr [rbx - 2], dl ; call qword ptr [rsi]
0x0000000000405cfb : add byte ptr [rax], al ; add al, ch ; insd dword ptr [rdi], dx ; mov byte ptr [rax], 0 ; pop rbp ; ret
0x0000000000403d66 : add byte ptr [rax], al ; add al, ch ; ret 0xffe1
0x0000000000403ea6 : add byte ptr [rax], al ; add al, ch ; ret 0xffe3
0x0000000000415ce0 : add byte ptr [rax], al ; add al, ch ; ret 0xfffe
0x0000000000415b97 : add byte ptr [rax], al ; add al, ch ; xchg eax, ecx ; ret
0x000000000041c3ed : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000041a5c1 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x4a3b
0x000000000040f664 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add al, 0x25 ; ret
0x000000000041108b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jge 0x411092 ; pop rbp ; ret
0x0000000000402fdf : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000041c3eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000400d52 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000040b5cd : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041c291 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000415eef : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004068c7 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000412d2d : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000041108a : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000040deb4 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000041c3ec : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400d54 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000041c8bc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x41da
0x000000000041fccd : add byte ptr [rax], al ; add byte ptr [rax], dl ; sub al, -2 ; jmp rdx
0x0000000000416162 : add byte ptr [rax], al ; add byte ptr [rbx + 0x23e8cc7d], cl ; ret 0xfffe
0x0000000000403e29 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7338b], cl ; ret 0xb0
0x000000000041ffee : add byte ptr [rax], al ; add byte ptr [rbx - 2], dl ; call qword ptr [rsi]
0x000000000040697f : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000040c933 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000405c76 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5588
0x0000000000414263 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x9588
0x0000000000419592 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041839c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x0000000000416ce7 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x0000000000410ffe : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000416c5c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf280
0x0000000000421bce : add byte ptr [rax], al ; add byte ptr [rdx - 1], ch ; jmp qword ptr [rdi]
0x0000000000407f92 : add byte ptr [rax], al ; add cl, ch ; ret
0x000000000040407b : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406fc3 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041c293 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000415ef1 : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004068c9 : add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000401eb3 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000422356 : add byte ptr [rax], al ; call 0x11422302
0x0000000000415c43 : add byte ptr [rax], al ; call 0x401f34
0x0000000000420dae : add byte ptr [rax], al ; cmp ah, -2 ; jmp qword ptr [rdx]
0x000000000041fcca : add byte ptr [rax], al ; in al, 0 ; add byte ptr [rax], al ; adc byte ptr [rsi + rdi*8], ch ; jmp rdx
0x00000000004218ca : add byte ptr [rax], al ; in al, 0x1c ; add byte ptr [rax], al ; rcr byte ptr [rax - 1] ; call qword ptr [rcx]
0x0000000000421bca : add byte ptr [rax], al ; in al, 0x1f ; add byte ptr [rax], al ; add byte ptr [rdx - 1], ch ; jmp qword ptr [rdi]
0x0000000000401fc9 : add byte ptr [rax], al ; jmp 0x401ec9
0x0000000000407f7c : add byte ptr [rax], al ; jmp 0x40a165
0x000000000041872c : add byte ptr [rax], al ; mov al, sil ; movzx eax, al ; pop rbp ; ret
0x00000000004186ad : add byte ptr [rax], al ; mov ax, si ; movzx eax, ax ; pop rbp ; ret
0x0000000000412d2f : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040a5af : add byte ptr [rax], al ; mov eax, esi ; pop rbp ; ret
0x0000000000416163 : add byte ptr [rax], al ; mov edi, dword ptr [rbp - 0x34] ; call 0x402397
0x0000000000405f83 : add byte ptr [rax], al ; mov edx, dword ptr [rbp - 0x14] ; mov rsi, rcx ; call rax
0x000000000041108c : add byte ptr [rax], al ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000040f2d2 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040deb6 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000403d02 : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000411d3b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040d552 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000421bcf : add byte ptr [rax], al ; push -1 ; jmp qword ptr [rdi]
0x00000000004218ce : add byte ptr [rax], al ; rcr byte ptr [rax - 1] ; call qword ptr [rcx]
0x000000000041c3ee : add byte ptr [rax], al ; ret
0x0000000000400d56 : add byte ptr [rax], al ; ret 0
0x000000000041c8be : add byte ptr [rax], al ; ret 0x41da
0x00000000004206cf : add byte ptr [rax], al ; test al, -2 ; call rsp
0x000000000041fccf : add byte ptr [rax], dl ; sub al, -2 ; jmp rdx
0x0000000000416164 : add byte ptr [rbx + 0x23e8cc7d], cl ; ret 0xfffe
0x0000000000411d3c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040d553 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000403e2b : add byte ptr [rbx - 0x76b7338b], cl ; ret 0xb0
0x000000000040752b : add byte ptr [rbx - 0xb36b], cl ; inc dword ptr [rcx] ; ret 0x9589
0x000000000041fff0 : add byte ptr [rbx - 2], dl ; call qword ptr [rsi]
0x000000000041425f : add byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x9588
0x0000000000406981 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000040c92f : add byte ptr [rcx + 0xfa], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000402618 : add byte ptr [rcx], al ; ret
0x0000000000415c3e : add byte ptr [rdi], cl ; test byte ptr [rdi], al ; add byte ptr [rax], al ; call 0x401f39
0x0000000000407f8e : add byte ptr [rdi], cl ; test byte ptr [rip - 0x17000000], al ; ret
0x0000000000415cdc : add byte ptr [rdi], cl ; test byte ptr [rsi], bl ; add byte ptr [rax], al ; add al, ch ; ret 0xfffe
0x0000000000415b93 : add byte ptr [rdi], cl ; test byte ptr [rsi], bl ; add byte ptr [rax], al ; add al, ch ; xchg eax, ecx ; ret
0x0000000000403d62 : add byte ptr [rdi], cl ; test dword ptr [rax + rax], esp ; add al, ch ; ret 0xffe1
0x0000000000406a6c : add byte ptr [rdi], cl ; test dword ptr [rbp + 0x5dffffff], ecx ; ret
0x000000000040968e : add byte ptr [rdi], cl ; test dword ptr [rip - 0x17000000], eax ; ret
0x000000000040c935 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000405c78 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5588
0x0000000000414265 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x9588
0x0000000000419594 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041839e : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x0000000000416ce9 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x0000000000411000 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000416c5e : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf280
0x0000000000403ee6 : add byte ptr [rdx + rdx*8 - 0x763ebbf1], al ; ret 0xb0
0x0000000000421bd0 : add byte ptr [rdx - 1], ch ; jmp qword ptr [rdi]
0x000000000040aacd : add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x000000000041ffeb : add byte ptr [rsp + rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 2], dl ; call qword ptr [rsi]
0x0000000000403d65 : add byte ptr fs:[rax], al ; add al, ch ; ret 0xffe1
0x0000000000407f94 : add cl, ch ; ret
0x0000000000407f82 : add cl, ch ; ret 0xfffb
0x000000000040c8cc : add dword ptr [rax + 0xf], eax ; mov dh, -0x39 ; pop rbp ; ret
0x00000000004106e8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000414675 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040a5ad : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, esi ; pop rbp ; ret
0x0000000000411d3a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040d551 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040cfd2 : add dword ptr [rbx - 0x73e6bbb], ecx ; add dword ptr [rcx], eax ; ret 0x9589
0x0000000000406a1f : add dword ptr [rcx + 0xf9], eax ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5588
0x000000000040cfd8 : add dword ptr [rcx], eax ; ret 0x9589
0x00000000004061fb : add dword ptr [rdi], ecx ; mov dh, -0x3f ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000418b35 : add dword ptr [rdi], ecx ; mov dh, -0x3f ; pop rbp ; ret
0x000000000040a806 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404a15 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405fbf : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403e46 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040bb7a : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041aa6b : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000040559e : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000417f14 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x5588
0x0000000000402614 : add eax, 0x220e3e ; add ebx, esi ; ret
0x0000000000409f4d : add eax, 0x6348ca01 ; ret 0x6948
0x0000000000407f91 : add eax, 0xe9000000 ; ret
0x0000000000416d62 : add eax, 0xf000000 ; xchg eax, esp ; ret 0x9588
0x000000000040ac5c : add eax, ecx ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004025db : add eax, edx ; sar rax, 1 ; jne 0x4025ec ; pop rbp ; ret
0x000000000040e699 : add eax, esi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x0000000000402619 : add ebx, esi ; ret
0x000000000041993b : add edi, eax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x000000000040283b : add esp, 0x10 ; pop rbp ; ret
0x000000000041b305 : add esp, 0x10e0 ; pop rbp ; ret
0x00000000004049b9 : add esp, 0x110 ; pop rbp ; ret
0x000000000040e3fe : add esp, 0x120 ; pop rbp ; ret
0x000000000041953c : add esp, 0x130 ; pop rbp ; ret
0x0000000000410454 : add esp, 0x138 ; pop rbx ; pop rbp ; ret
0x000000000040ee97 : add esp, 0x170 ; pop rbp ; ret
0x000000000041202c : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000418d3f : add esp, 0x1b0 ; pop rbp ; ret
0x000000000041bc6e : add esp, 0x1e0 ; pop rbp ; ret
0x000000000040d54e : add esp, 0x1e8 ; pop rbx ; pop rbp ; ret
0x0000000000404a1a : add esp, 0x20 ; pop rbp ; ret
0x000000000041a33d : add esp, 0x250 ; pop rbp ; ret
0x0000000000403f94 : add esp, 0x2b0 ; pop rbp ; ret
0x00000000004029bd : add esp, 0x30 ; pop rbp ; ret
0x0000000000403e4b : add esp, 0x40 ; pop rbp ; ret
0x0000000000404ccd : add esp, 0x50 ; pop rbp ; ret
0x000000000040404e : add esp, 0x60 ; pop rbp ; ret
0x00000000004068cc : add esp, 0x70 ; pop rbp ; ret
0x000000000041060e : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040b983 : add esp, 0x80 ; pop rbp ; ret
0x0000000000406d18 : add esp, 0x90 ; pop rbp ; ret
0x0000000000406f94 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040a47a : add esp, 0xa40 ; pop rbp ; ret
0x0000000000403cfe : add esp, 0xb0 ; pop rbp ; ret
0x000000000040c03c : add esp, 0xc0 ; pop rbp ; ret
0x00000000004133cf : add esp, 0xe0 ; pop rbp ; ret
0x0000000000411787 : add esp, 0xf0 ; pop rbp ; ret
0x0000000000401eb6 : add esp, 8 ; ret
0x00000000004026c7 : add r8b, bpl ; ret 0xfff9
0x000000000040ac5b : add rax, rcx ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004025da : add rax, rdx ; sar rax, 1 ; jne 0x4025ed ; pop rbp ; ret
0x000000000040e698 : add rax, rsi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x000000000041993a : add rdi, rax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x000000000040283a : add rsp, 0x10 ; pop rbp ; ret
0x000000000041b304 : add rsp, 0x10e0 ; pop rbp ; ret
0x00000000004049b8 : add rsp, 0x110 ; pop rbp ; ret
0x000000000040e3fd : add rsp, 0x120 ; pop rbp ; ret
0x000000000041953b : add rsp, 0x130 ; pop rbp ; ret
0x0000000000410453 : add rsp, 0x138 ; pop rbx ; pop rbp ; ret
0x000000000040ee96 : add rsp, 0x170 ; pop rbp ; ret
0x000000000041202b : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000418d3e : add rsp, 0x1b0 ; pop rbp ; ret
0x000000000041bc6d : add rsp, 0x1e0 ; pop rbp ; ret
0x000000000040d54d : add rsp, 0x1e8 ; pop rbx ; pop rbp ; ret
0x0000000000404a19 : add rsp, 0x20 ; pop rbp ; ret
0x000000000041a33c : add rsp, 0x250 ; pop rbp ; ret
0x0000000000403f93 : add rsp, 0x2b0 ; pop rbp ; ret
0x00000000004029bc : add rsp, 0x30 ; pop rbp ; ret
0x0000000000403e4a : add rsp, 0x40 ; pop rbp ; ret
0x0000000000404ccc : add rsp, 0x50 ; pop rbp ; ret
0x000000000040404d : add rsp, 0x60 ; pop rbp ; ret
0x00000000004068cb : add rsp, 0x70 ; pop rbp ; ret
0x000000000041060d : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040b982 : add rsp, 0x80 ; pop rbp ; ret
0x0000000000406d17 : add rsp, 0x90 ; pop rbp ; ret
0x0000000000406f93 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040a479 : add rsp, 0xa40 ; pop rbp ; ret
0x0000000000403cfd : add rsp, 0xb0 ; pop rbp ; ret
0x000000000040c03b : add rsp, 0xc0 ; pop rbp ; ret
0x00000000004133ce : add rsp, 0xe0 ; pop rbp ; ret
0x0000000000411786 : add rsp, 0xf0 ; pop rbp ; ret
0x0000000000401eb5 : add rsp, 8 ; ret
0x00000000004112bc : addps xmm1, xmm2 ; movaps xmm0, xmm1 ; pop rbp ; ret
0x00000000004112bb : addsd xmm1, xmm2 ; movaps xmm0, xmm1 ; pop rbp ; ret
0x000000000041aa6a : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040559d : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000402617 : and al, byte ptr [rax] ; add ebx, esi ; ret
0x000000000040c8ca : and bh, 1 ; movzx eax, dil ; pop rbp ; ret
0x000000000040e400 : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000418b33 : and cl, 1 ; movzx eax, cl ; pop rbp ; ret
0x000000000040c8c9 : and dil, 1 ; movzx eax, dil ; pop rbp ; ret
0x0000000000407f80 : and dword ptr [rax], eax ; add cl, ch ; ret 0xfffb
0x000000000040b035 : and eax, 0x41e1a0 ; mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x0000000000410a17 : and eax, 0x48fffffd ; add esp, 0x20 ; pop rbp ; ret
0x00000000004052ff : and eax, 0x623508 ; pop rbp ; ret
0x0000000000405323 : and eax, 0x623510 ; pop rbp ; ret
0x0000000000422358 : call 0x11422300
0x0000000000409f40 : call 0x2032868
0x0000000000409f84 : call 0x20328ac
0x0000000000409fcd : call 0x20328f5
0x0000000000415c45 : call 0x401f32
0x0000000000415f3b : call 0x402212
0x0000000000416168 : call 0x402392
0x000000000041a199 : call 0x422e9
0x000000000040de72 : call 0x490367c2
0x000000000040de71 : call 0x490367c3
0x000000000040de72 : call 0x490367c5
0x000000000040de71 : call 0x490367c6
0x0000000000406ff3 : call 0xffffffffe0b5fb46
0x0000000000407043 : call 0xffffffffe0b5fb96
0x0000000000411882 : call 0xffffffffe24018cb
0x000000000040e523 : call 0xffffffffe9036e73
0x0000000000410489 : call 0xffffffffe9038dd9
0x0000000000410488 : call 0xffffffffe9038dda
0x0000000000415b11 : call 0xffffffffe908e464
0x0000000000415b10 : call 0xffffffffe908e465
0x00000000004025b3 : call 0xffffffffff4087ef
0x00000000004025f3 : call 0xffffffffff40882f
0x000000000040b521 : call 0xffffffffff7a4072
0x000000000040b520 : call 0xffffffffff7a4073
0x000000000040b65f : call 0xffffffffff7a41b0
0x000000000040b65e : call 0xffffffffff7a41b1
0x000000000041c3c9 : call qword ptr [r12 + rbx*8]
0x000000000040a0c9 : call qword ptr [rax]
0x00000000004218d3 : call qword ptr [rcx]
0x0000000000420573 : call qword ptr [rdx]
0x000000000041fff3 : call qword ptr [rsi]
0x000000000041c3ca : call qword ptr [rsp + rbx*8]
0x000000000040263d : call rax
0x0000000000420693 : call rbx
0x0000000000406e61 : call rcx
0x0000000000422293 : call rdi
0x0000000000420d33 : call rdx
0x000000000041fd33 : call rsi
0x00000000004206b3 : call rsp
0x000000000040cfd7 : clc ; add dword ptr [rcx], eax ; ret 0x9589
0x00000000004054de : clc ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000417083 : clc ; add rsp, 0x110 ; pop rbp ; ret
0x000000000041953a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x000000000040508b : clc ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041a33b : clc ; add rsp, 0x250 ; pop rbp ; ret
0x0000000000405019 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404f74 : clc ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000404ccb : clc ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040c215 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000415d9c : clc ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004145f9 : clc ; add rsp, 0x90 ; pop rbp ; ret
0x000000000040f20e : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x000000000040a478 : clc ; add rsp, 0xa40 ; pop rbp ; ret
0x000000000040c726 : clc ; add rsp, 0xc0 ; pop rbp ; ret
0x000000000040762f : clc ; fld qword ptr [rcx] ; jmp rcx
0x00000000004025df : clc ; jne 0x4025e8 ; pop rbp ; ret
0x0000000000418e6c : clc ; mov byte ptr [rax + 0x1c], 0 ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000419665 : clc ; mov dword ptr [rax + 0x14], ecx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040f415 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000418db1 : clc ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x0000000000417b1e : clc ; mov dword ptr [rcx + 0x18], eax ; pop rbp ; ret
0x0000000000417685 : clc ; mov dword ptr [rcx + 0x2c], eax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004189f7 : clc ; mov dword ptr [rdi + 0x18], 0x95f616 ; pop rbp ; ret
0x000000000041c07b : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004069da : clc ; mov qword ptr [rcx], rax ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040c75e : clc ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000403c27 : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040a81b : clc ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040a83b : clc ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040a85b : clc ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000041102b : clc ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000041106b : clc ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000041104b : clc ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000405ef8 : clc ; mov rsi, qword ptr [rbp - 0x10] ; mov edx, dword ptr [rbp - 0x14] ; call rax
0x0000000000406e59 : clc ; mov rsi, qword ptr [rbp - 0x10] ; mov edx, dword ptr [rbp - 0x14] ; call rcx
0x0000000000403c2b : clc ; pop rbp ; ret
0x0000000000412d2c : cld ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000402867 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041b303 : cld ; add rsp, 0x10e0 ; pop rbp ; ret
0x000000000040e3fc : cld ; add rsp, 0x120 ; pop rbp ; ret
0x0000000000413e19 : cld ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004056b6 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406e1b : cld ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040614b : cld ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040c03a : cld ; add rsp, 0xc0 ; pop rbp ; ret
0x00000000004133cd : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000041c078 : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000413e73 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000413e16 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004056b3 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406e18 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000406148 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000412d33 : cld ; pop rbp ; ret
0x0000000000406a6b : cli ; add byte ptr [rdi], cl ; test dword ptr [rbp + 0x5dffffff], ecx ; ret
0x0000000000409f4c : cli ; add eax, 0x6348ca01 ; ret 0x6948
0x000000000040da88 : cmove ecx, edx ; movsxd rax, ecx ; pop rbp ; ret
0x0000000000420db0 : cmp ah, -2 ; jmp qword ptr [rdx]
0x00000000004026c3 : cmp al, 0x25 ; mov cl, cl ; add r8b, bpl ; ret 0xfff9
0x0000000000403013 : cmp al, 0x25 ; xor al, 0x62 ; add al, ch ; ret 0xa7
0x0000000000410456 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040af3a : cmp dword ptr [rax - 0x75], ecx ; jne 0x40af24 ; call rax
0x000000000040259d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4025b0 ; pop rbp ; ret
0x000000000041187c : cwde ; mov rcx, qword ptr [rax*8 + 0x41e820] ; jmp rcx
0x000000000040cb00 : dec dword ptr [rax + 0x69] ; ret 0xa
0x000000000040762a : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; clc ; fld qword ptr [rcx] ; jmp rcx
0x0000000000413a9b : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; enter 0x41ee, 0 ; jmp rcx
0x000000000041a195 : dec dword ptr [rax - 0x75] ; push rbp ; call 0x422ed
0x0000000000406756 : dec dword ptr [rax - 0x75] ; push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 8
0x00000000004184ad : dec dword ptr [rax - 0x77] ; jge 0x4184b0 ; pop rbp ; ret
0x00000000004116db : dec dword ptr [rax - 0x77] ; ret 0x1ce8
0x000000000041a1cb : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x00000000004036b7 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000041142a : dec dword ptr [rax - 0x77] ; ret 0xcde8
0x000000000041949f : dec dword ptr [rax - 0x7f] ; ret 1
0x0000000000415c68 : dec dword ptr [rbx + 0x889a04d] ; call 0x401f38
0x0000000000405568 : div dword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x0000000000405567 : div qword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000041053b : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000040af37 : enter -0x74b8, 0x39 ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x000000000040b133 : enter -0x74b8, 0x78 ; adc al, ch ; ret
0x0000000000405618 : enter -1, 0x48 ; add esp, 0x10 ; pop rbp ; ret
0x0000000000413aa0 : enter 0x41ee, 0 ; jmp rcx
0x000000000041127f : enter 0x4d89, -0x14 ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000040d66f : faddp st(1) ; fstp xword ptr [rbp - 0x20] ; fld xword ptr [rbp - 0x20] ; pop rbp ; ret
0x0000000000417f1c : fbld dword ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x0000000000417f1d : fbld dword ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x0000000000407630 : fld qword ptr [rcx] ; jmp rcx
0x000000000040d674 : fld xword ptr [rbp - 0x20] ; pop rbp ; ret
0x0000000000405547 : fmul dword ptr [rax + 0x31] ; ret 0x8948
0x000000000040fe73 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000041c3cc : fmul qword ptr [rax - 0x7d] ; ret
0x000000000040d671 : fstp xword ptr [rbp - 0x20] ; fld xword ptr [rbp - 0x20] ; pop rbp ; ret
0x0000000000403d8b : fsub st(0), st(0) ; jmp rdx
0x0000000000402839 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000417196 : hlt ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041959f : hlt ; mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000418dad : hlt ; mov rcx, qword ptr [rbp - 8] ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x00000000004025b0 : hlt ; pop rbp ; mov edi, 0x6233e8 ; jmp rax
0x000000000041fccc : in al, 0 ; add byte ptr [rax], al ; adc byte ptr [rsi + rdi*8], ch ; jmp rdx
0x00000000004218cc : in al, 0x1c ; add byte ptr [rax], al ; rcr byte ptr [rax - 1] ; call qword ptr [rcx]
0x0000000000421bcc : in al, 0x1f ; add byte ptr [rax], al ; add byte ptr [rdx - 1], ch ; jmp qword ptr [rdi]
0x000000000040d82e : in al, 0x48 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000406cb7 : in al, 0x48 ; mov ecx, dword ptr [rbp - 0x28] ; call rax
0x0000000000412d8d : in al, dx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405eff : in al, dx ; call rax
0x0000000000406e60 : in al, dx ; call rcx
0x0000000000411282 : in al, dx ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000405f87 : in al, dx ; mov rsi, rcx ; call rax
0x0000000000411285 : in al, dx ; pop rbp ; ret
0x0000000000407531 : inc dword ptr [rcx] ; ret 0x9589
0x000000000040d675 : insd dword ptr [rdi], dx ; loopne 0x40d6d8 ; ret
0x0000000000405cff : insd dword ptr [rdi], dx ; mov byte ptr [rax], 0 ; pop rbp ; ret
0x0000000000411e80 : int 0x80
0x00000000004025a3 : ja 0x4025aa ; pop rbp ; ret
0x000000000040c761 : ja 0x40c7ae ; pop rbp ; ret
0x00000000004025af : je 0x4025ad ; pop rbp ; mov edi, 0x6233e8 ; jmp rax
0x0000000000415c3f : je 0x415c94 ; call 0x401f38
0x0000000000415cdd : je 0x415d09 ; call 0x401f38
0x0000000000403c26 : jge 0x403c27 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000405ef7 : jge 0x405efa ; mov rsi, qword ptr [rbp - 0x10] ; mov edx, dword ptr [rbp - 0x14] ; call rax
0x0000000000406e58 : jge 0x406e5b ; mov rsi, qword ptr [rbp - 0x10] ; mov edx, dword ptr [rbp - 0x14] ; call rcx
0x000000000040a81a : jge 0x40a81b ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040a83a : jge 0x40a83b ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040a85a : jge 0x40a85b ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000040abb0 : jge 0x40aba3 ; mov rcx, qword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040c0c0 : jge 0x40c0b3 ; mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040c75d : jge 0x40c75e ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040d672 : jge 0x40d65a ; fld xword ptr [rbp - 0x20] ; pop rbp ; ret
0x000000000041102a : jge 0x41102b ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000041104a : jge 0x41104b ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000041106a : jge 0x41106b ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000411090 : jge 0x41108d ; pop rbp ; ret
0x0000000000416166 : jge 0x416138 ; call 0x402394
0x00000000004184b0 : jge 0x4184ad ; pop rbp ; ret
0x0000000000401fcb : jmp 0x401ec7
0x000000000040355e : jmp 0x403630
0x0000000000407f7e : jmp 0x40a163
0x000000000040c2a1 : jmp 0x40c2a4
0x000000000040f662 : jmp 0x40f670
0x0000000000410fe5 : jmp 0x411017
0x000000000040b3c0 : jmp 0x49033d10
0x000000000040bdfe : jmp 0x4903474e
0x000000000040be6b : jmp 0x490347bb
0x000000000040c5a2 : jmp 0x49034ef2
0x000000000040c60f : jmp 0x49034f5f
0x0000000000420ed3 : jmp qword ptr [rax]
0x000000000041fdd3 : jmp qword ptr [rbx]
0x0000000000403567 : jmp qword ptr [rcx]
0x00000000004207d3 : jmp qword ptr [rdi]
0x0000000000420db3 : jmp qword ptr [rdx]
0x0000000000403566 : jmp qword ptr es:[rcx]
0x00000000004025b7 : jmp rax
0x0000000000402d48 : jmp rcx
0x00000000004025f7 : jmp rdx
0x00000000004025e0 : jne 0x4025e7 ; pop rbp ; ret
0x0000000000405569 : jne 0x405561 ; mov rax, rdx ; pop rbp ; ret
0x0000000000405976 : jne 0x40596e ; mov rax, rdx ; pop rbp ; ret
0x0000000000405efb : jne 0x405ef2 ; mov edx, dword ptr [rbp - 0x14] ; call rax
0x0000000000406a6d : jne 0x406a07 ; pop rbp ; ret
0x0000000000406cb3 : jne 0x406c7e ; mov edx, dword ptr [rbp - 0x1c] ; mov rcx, qword ptr [rbp - 0x28] ; call rax
0x0000000000406e5c : jne 0x406e53 ; mov edx, dword ptr [rbp - 0x14] ; call rcx
0x000000000040ac26 : jne 0x40ac11 ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000040af3d : jne 0x40af21 ; call rax
0x000000000040dbc9 : jne 0x40dbc1 ; mov rax, rdx ; pop rbp ; ret
0x00000000004179b9 : jne 0x41799c ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x0000000000417db1 : jne 0x417da9 ; mov rax, rdx ; pop rbp ; ret
0x0000000000417ec2 : jne 0x417eba ; mov rax, rdx ; pop rbp ; ret
0x00000000004068ce : jo 0x40692f ; ret
0x000000000040ee99 : jo 0x40eea1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040f565 : jo 0x40f5c6 ; ret
0x0000000000410c74 : jo 0x410cd5 ; ret
0x0000000000410dae : jo 0x410e0f ; ret
0x000000000041104f : jo 0x4110b0 ; ret
0x000000000041104e : jo 0x4110b1 ; ret
0x0000000000415da0 : jo 0x415e01 ; ret
0x0000000000416d5f : jo 0x416ceb ; stc ; add eax, 0xf000000 ; xchg eax, esp ; ret 0x9588
0x0000000000410610 : js 0x410670 ; pop rbp ; ret
0x00000000004026c6 : leave ; add r8b, bpl ; ret 0xfff9
0x0000000000418589 : loop 0x4185db ; or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x0000000000418671 : loop 0x4186c3 ; or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x0000000000418b34 : loope 0x418b3d ; movzx eax, cl ; pop rbp ; ret
0x0000000000406ff7 : loopne 0x406fe3 ; ret
0x0000000000407047 : loopne 0x407033 ; ret
0x000000000040ac27 : loopne 0x40ac79 ; mov esi, eax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000040d673 : loopne 0x40d655 ; insd dword ptr [rdi], dx ; loopne 0x40d6da ; ret
0x000000000040d676 : loopne 0x40d6d7 ; ret
0x000000000041252b : loopne 0x41257b ; add esp, 0x20 ; pop rbp ; ret
0x000000000041252a : loopne 0x41257c ; add esp, 0x20 ; pop rbp ; ret
0x00000000004126f0 : loopne 0x412740 ; add esp, 0x20 ; pop rbp ; ret
0x00000000004126ef : loopne 0x412741 ; add esp, 0x20 ; pop rbp ; ret
0x00000000004133d1 : loopne 0x4133d8 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000413c61 : loopne 0x413c68 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004161bd : loopne 0x4161c4 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041b307 : loopne 0x41b31e ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041bc70 : loopne 0x41bc78 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040ab2e : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000403d00 : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000404edd : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004109db : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000418d41 : mov al, 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000403f96 : mov al, 2 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004125d5 : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000417f1b : mov al, byte ptr [rbp - 0x21] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000405ce5 : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041bca6 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000418dcc : mov al, byte ptr [rdi + 0x1c] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041872f : mov al, dh ; movzx eax, al ; pop rbp ; ret
0x000000000041872e : mov al, sil ; movzx eax, al ; pop rbp ; ret
0x00000000004186af : mov ax, si ; movzx eax, ax ; pop rbp ; ret
0x00000000004186b3 : mov bh, -0x40 ; pop rbp ; ret
0x0000000000405321 : mov byte ptr [0x623510], al ; pop rbp ; ret
0x0000000000419903 : mov byte ptr [rax + 0x14], 1 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000418e6d : mov byte ptr [rax + 0x1c], 0 ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000040e66b : mov byte ptr [rax + 0xc], 1 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000409f3d : mov byte ptr [rax - 0x3f], cl ; call 0x203286b
0x0000000000409f81 : mov byte ptr [rax - 0x3f], cl ; call 0x20328af
0x0000000000409fca : mov byte ptr [rax - 0x3f], cl ; call 0x20328f8
0x0000000000405d00 : mov byte ptr [rax], 0 ; pop rbp ; ret
0x0000000000402613 : mov byte ptr [rip + 0x220e3e], 1 ; ret
0x000000000041890b : mov cl, 0x2f ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004026c5 : mov cl, cl ; add r8b, bpl ; ret 0xfff9
0x000000000041127e : mov dh, -0x38 ; mov dword ptr [rbp - 0x14], ecx ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000040c8cf : mov dh, -0x39 ; pop rbp ; ret
0x00000000004061fd : mov dh, -0x3f ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000418b37 : mov dh, -0x3f ; pop rbp ; ret
0x000000000040a808 : mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404a17 : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405fc1 : mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403e48 : mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040bb7c : mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041aa6d : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x00000000004055a0 : mov dh, -0x40 ; pop rbp ; ret
0x00000000004052fd : mov dword ptr [0x623508], edi ; pop rbp ; ret
0x0000000000419666 : mov dword ptr [rax + 0x14], ecx ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404aa6 : mov dword ptr [rax + 0x18], 0xffffffff ; pop rbp ; ret
0x0000000000404b63 : mov dword ptr [rax + 0x18], ecx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040f416 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000409f3a : mov dword ptr [rax - 0x3eb77778], ecx ; call 0x203286e
0x0000000000409f7e : mov dword ptr [rax - 0x3eb77778], ecx ; call 0x20328b2
0x0000000000409fc7 : mov dword ptr [rax - 0x3eb77778], ecx ; call 0x20328fb
0x0000000000415c6c : mov dword ptr [rax], ecx ; call 0x401f34
0x000000000040f324 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040f3d8 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004052a2 : mov dword ptr [rbp - 0x10], eax ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000417d7b : mov dword ptr [rbp - 0x14], eax ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000411280 : mov dword ptr [rbp - 0x14], ecx ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000403f05 : mov dword ptr [rbp - 0x24], eax ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041121a : mov dword ptr [rbp - 0x24], eax ; mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x00000000004029b9 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040ab2c : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000404edb : mov dword ptr [rbp - 0x50], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000415c5e : mov dword ptr [rbp - 0x5c], eax ; mov dword ptr [rbp - 0x60], ecx ; call 0x401f38
0x000000000040404a : mov dword ptr [rbp - 0x60], eax ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000415c61 : mov dword ptr [rbp - 0x60], ecx ; call 0x401f35
0x0000000000402837 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402865 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041c079 : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040aebb : mov dword ptr [rbp - 8], eax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000403c25 : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000041108f : mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x0000000000418db2 : mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x0000000000417b1f : mov dword ptr [rcx + 0x18], eax ; pop rbp ; ret
0x0000000000404a5c : mov dword ptr [rcx + 0x18], edx ; pop rbp ; ret
0x0000000000417686 : mov dword ptr [rcx + 0x2c], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040f48e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004172a8 : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004069dc : mov dword ptr [rcx], eax ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040e69c : mov dword ptr [rdi + 0x10], eax ; pop rbp ; ret
0x000000000040b03a : mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x00000000004189f8 : mov dword ptr [rdi + 0x18], 0x95f616 ; pop rbp ; ret
0x000000000040c760 : mov dword ptr [rdi + 0x48], esi ; pop rbp ; ret
0x0000000000405afa : mov dword ptr [rsi + 8], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041993e : mov dword ptr [rsi], edi ; pop rbp ; ret
0x0000000000415f34 : mov eax, 0x41f038 ; mov esi, eax ; call 0x402219
0x000000000041060c : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000406754 : mov eax, 0x8b48ffff ; push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 8
0x000000000040f2d8 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040c273 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405a9c : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040f2d5 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004110b1 : mov eax, dword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004052a6 : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000412d8b : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000411283 : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x00000000004123e3 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040f28d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040a794 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040f31e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040a91f : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040d82c : mov eax, dword ptr [rbp - 0x1c] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000412529 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040ac2c : mov eax, dword ptr [rbp - 0x20] ; call rax
0x000000000041121d : mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x000000000040c31f : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004179bf : mov eax, dword ptr [rbp - 0x28] ; call rax
0x000000000040f3da : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000041263b : mov eax, dword ptr [rbp - 0x2c] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040f55f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000041060a : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000410b49 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000418f12 : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000417194 : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000413e74 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000413e17 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004056b4 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406e19 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000406149 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000412d31 : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004054dc : mov eax, dword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405089 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405017 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404f72 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000404cc9 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040c213 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000415d9a : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000403c29 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040a81d : mov eax, dword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040a83d : mov eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040a85d : mov eax, dword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000041102d : mov eax, dword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000041106d : mov eax, dword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000041104d : mov eax, dword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000041854e : mov eax, edi ; pop rbp ; ret
0x000000000040b221 : mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040556c : mov eax, edx ; pop rbp ; ret
0x00000000004186b0 : mov eax, esi ; movzx eax, ax ; pop rbp ; ret
0x000000000040a5b1 : mov eax, esi ; pop rbp ; ret
0x000000000040263b : mov ebp, esp ; call rax
0x00000000004025a1 : mov ebp, esp ; ja 0x4025ac ; pop rbp ; ret
0x00000000004199f1 : mov ebx, 0x48fffffb ; add esp, 0x10 ; pop rbp ; ret
0x0000000000415223 : mov ecx, 0x48fffecc ; add esp, 0x10 ; pop rbp ; ret
0x0000000000402dc1 : mov ecx, dword ptr [rax*8 + 0x41c490] ; jmp rcx
0x0000000000402d41 : mov ecx, dword ptr [rax*8 + 0x41c4d0] ; jmp rcx
0x000000000040762c : mov ecx, dword ptr [rax*8 + 0x41ddf8] ; jmp rcx
0x000000000040a012 : mov ecx, dword ptr [rax*8 + 0x41e0a8] ; jmp rcx
0x000000000040f617 : mov ecx, dword ptr [rax*8 + 0x41e320] ; jmp rcx
0x000000000040f8f7 : mov ecx, dword ptr [rax*8 + 0x41e368] ; jmp rcx
0x000000000041187e : mov ecx, dword ptr [rax*8 + 0x41e820] ; jmp rcx
0x0000000000412ac4 : mov ecx, dword ptr [rax*8 + 0x41ec08] ; jmp rcx
0x0000000000412a50 : mov ecx, dword ptr [rax*8 + 0x41ec68] ; jmp rcx
0x000000000041320d : mov ecx, dword ptr [rax*8 + 0x41ed50] ; jmp rcx
0x000000000041318d : mov ecx, dword ptr [rax*8 + 0x41edb0] ; jmp rcx
0x0000000000413a9d : mov ecx, dword ptr [rax*8 + 0x41eec8] ; jmp rcx
0x0000000000413a1d : mov ecx, dword ptr [rax*8 + 0x41ef28] ; jmp rcx
0x0000000000417ab4 : mov ecx, dword ptr [rax*8 + 0x41efd8] ; jmp rcx
0x000000000040f321 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040b582 : mov ecx, dword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040b51f : mov ecx, dword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000406cb9 : mov ecx, dword ptr [rbp - 0x28] ; call rax
0x000000000040abb3 : mov ecx, dword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040c0c3 : mov ecx, dword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000415c69 : mov ecx, dword ptr [rbp - 0x60] ; mov dword ptr [rax], ecx ; call 0x401f37
0x0000000000418daf : mov ecx, dword ptr [rbp - 8] ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x0000000000417b1c : mov ecx, dword ptr [rbp - 8] ; mov dword ptr [rcx + 0x18], eax ; pop rbp ; ret
0x000000000040c190 : mov ecx, dword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x00000000004185ed : mov ecx, eax ; shl edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x00000000004185bd : mov ecx, eax ; shr edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000040a13f : mov ecx, gs ; ret
0x0000000000402635 : mov edi, 0x622e20 ; mov rbp, rsp ; call rax
0x00000000004025b2 : mov edi, 0x6233e8 ; jmp rax
0x00000000004025f2 : mov edi, 0x6233e8 ; jmp rdx
0x0000000000416165 : mov edi, dword ptr [rbp - 0x34] ; call 0x402395
0x000000000040c75c : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040a819 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040a839 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040a859 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000411029 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000411069 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000411049 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000040b523 : mov edi, dword ptr [rcx] ; call rax
0x000000000040af39 : mov edi, dword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x0000000000419938 : mov edi, dword ptr [rsi] ; add rdi, rax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x000000000041c3c7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000041c3c6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000405efd : mov edx, dword ptr [rbp - 0x14] ; call rax
0x0000000000406e5e : mov edx, dword ptr [rbp - 0x14] ; call rcx
0x0000000000405f85 : mov edx, dword ptr [rbp - 0x14] ; mov rsi, rcx ; call rax
0x0000000000404a58 : mov edx, dword ptr [rbp - 0x18] ; mov qword ptr [rcx + 0x18], rdx ; pop rbp ; ret
0x0000000000406cb5 : mov edx, dword ptr [rbp - 0x1c] ; mov rcx, qword ptr [rbp - 0x28] ; call rax
0x00000000004110b5 : mov edx, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004151ba : mov esi, 0x48ffffff ; add esp, 0x10 ; pop rbp ; ret
0x000000000040b002 : mov esi, 0x48ffffff ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000405efa : mov esi, dword ptr [rbp - 0x10] ; mov edx, dword ptr [rbp - 0x14] ; call rax
0x0000000000406e5b : mov esi, dword ptr [rbp - 0x10] ; mov edx, dword ptr [rbp - 0x14] ; call rcx
0x000000000040af3c : mov esi, dword ptr [rbp - 0x20] ; call rax
0x000000000040abb7 : mov esi, dword ptr [rcx] ; call rax
0x0000000000415f39 : mov esi, eax ; call 0x402214
0x00000000004025f0 : mov esi, eax ; mov edi, 0x6233e8 ; jmp rdx
0x000000000040ac29 : mov esi, eax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x00000000004179bc : mov esi, eax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x0000000000405f89 : mov esi, ecx ; call rax
0x000000000041aa70 : mov esp, ebp ; pop rbp ; ret
0x00000000004052fc : mov qword ptr [0x623508], rdi ; pop rbp ; ret
0x0000000000404aa5 : mov qword ptr [rax + 0x18], -1 ; pop rbp ; ret
0x0000000000404b62 : mov qword ptr [rax + 0x18], rcx ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004052a1 : mov qword ptr [rbp - 0x10], rax ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000404049 : mov qword ptr [rbp - 0x60], rax ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040aeba : mov qword ptr [rbp - 8], rax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000403c24 : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000041108e : mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000404a5b : mov qword ptr [rcx + 0x18], rdx ; pop rbp ; ret
0x000000000040f48d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004172a7 : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004069db : mov qword ptr [rcx], rax ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040e69b : mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x000000000040c75f : mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000405af9 : mov qword ptr [rsi + 8], rax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041993d : mov qword ptr [rsi], rdi ; pop rbp ; ret
0x000000000040ab2d : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000404edc : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000041060b : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x000000000040a13e : mov r9, gs ; ret
0x000000000040c272 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405a9b : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040f2d4 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004110b0 : mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004052a5 : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004123e2 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040f28c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040a793 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040a91e : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000412528 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040ac2b : mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000040c31e : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004179be : mov rax, qword ptr [rbp - 0x28] ; call rax
0x000000000040f55e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000410b48 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004054db : mov rax, qword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405088 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405016 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404f71 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000404cc8 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040c212 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000415d99 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000403c28 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040a81c : mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040a83c : mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040a85c : mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000041102c : mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000041106c : mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000041104c : mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000041854d : mov rax, rdi ; pop rbp ; ret
0x000000000040b220 : mov rax, rdx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040556b : mov rax, rdx ; pop rbp ; ret
0x000000000040263a : mov rbp, rsp ; call rax
0x00000000004025a0 : mov rbp, rsp ; ja 0x4025ad ; pop rbp ; ret
0x0000000000402dc0 : mov rcx, qword ptr [rax*8 + 0x41c490] ; jmp rcx
0x0000000000402d40 : mov rcx, qword ptr [rax*8 + 0x41c4d0] ; jmp rcx
0x000000000040762b : mov rcx, qword ptr [rax*8 + 0x41ddf8] ; jmp rcx
0x000000000040a011 : mov rcx, qword ptr [rax*8 + 0x41e0a8] ; jmp rcx
0x000000000040f616 : mov rcx, qword ptr [rax*8 + 0x41e320] ; jmp rcx
0x000000000040f8f6 : mov rcx, qword ptr [rax*8 + 0x41e368] ; jmp rcx
0x000000000041187d : mov rcx, qword ptr [rax*8 + 0x41e820] ; jmp rcx
0x0000000000412ac3 : mov rcx, qword ptr [rax*8 + 0x41ec08] ; jmp rcx
0x0000000000412a4f : mov rcx, qword ptr [rax*8 + 0x41ec68] ; jmp rcx
0x000000000041320c : mov rcx, qword ptr [rax*8 + 0x41ed50] ; jmp rcx
0x000000000041318c : mov rcx, qword ptr [rax*8 + 0x41edb0] ; jmp rcx
0x0000000000413a9c : mov rcx, qword ptr [rax*8 + 0x41eec8] ; jmp rcx
0x0000000000413a1c : mov rcx, qword ptr [rax*8 + 0x41ef28] ; jmp rcx
0x0000000000417ab3 : mov rcx, qword ptr [rax*8 + 0x41efd8] ; jmp rcx
0x000000000040b581 : mov rcx, qword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040b51e : mov rcx, qword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000406cb8 : mov rcx, qword ptr [rbp - 0x28] ; call rax
0x000000000040abb2 : mov rcx, qword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040c0c2 : mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000418dae : mov rcx, qword ptr [rbp - 8] ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x0000000000417b1b : mov rcx, qword ptr [rbp - 8] ; mov dword ptr [rcx + 0x18], eax ; pop rbp ; ret
0x000000000040c18f : mov rcx, qword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040c75b : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040a818 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040a838 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040a858 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000411028 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000411068 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000411048 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000040b522 : mov rdi, qword ptr [rcx] ; call rax
0x000000000040af38 : mov rdi, qword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x0000000000404a57 : mov rdx, qword ptr [rbp - 0x18] ; mov qword ptr [rcx + 0x18], rdx ; pop rbp ; ret
0x00000000004110b4 : mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000405ef9 : mov rsi, qword ptr [rbp - 0x10] ; mov edx, dword ptr [rbp - 0x14] ; call rax
0x0000000000406e5a : mov rsi, qword ptr [rbp - 0x10] ; mov edx, dword ptr [rbp - 0x14] ; call rcx
0x000000000040af3b : mov rsi, qword ptr [rbp - 0x20] ; call rax
0x000000000040abb6 : mov rsi, qword ptr [rcx] ; call rax
0x00000000004025ef : mov rsi, rax ; mov edi, 0x6233e8 ; jmp rdx
0x000000000040ac28 : mov rsi, rax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x00000000004179bb : mov rsi, rax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x0000000000405f88 : mov rsi, rcx ; call rax
0x000000000041aa6f : mov rsp, rbp ; pop rbp ; ret
0x0000000000406f92 : movabs al, byte ptr [0x5d000000a0c48148] ; ret
0x000000000040dc3a : movabs byte ptr [0x5d10c48348ffff42], al ; ret
0x00000000004112bf : movaps xmm0, xmm1 ; pop rbp ; ret
0x0000000000415c60 : movsb byte ptr [rdi], byte ptr [rsi] ; mov dword ptr [rbp - 0x60], ecx ; call 0x401f36
0x0000000000415c5f : movsb byte ptr [rdi], byte ptr [rsi] ; mov dword ptr [rbp - 0x60], ecx ; call 0x401f37
0x000000000040da8c : movsxd rax, ecx ; pop rbp ; ret
0x000000000040a807 : movzx eax, al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404a16 : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405fc0 : movzx eax, al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403e47 : movzx eax, al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040bb7b : movzx eax, al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041aa6c : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040559f : movzx eax, al ; pop rbp ; ret
0x00000000004186b2 : movzx eax, ax ; pop rbp ; ret
0x000000000040c8ce : movzx eax, bh ; pop rbp ; ret
0x00000000004061fc : movzx eax, cl ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000418b36 : movzx eax, cl ; pop rbp ; ret
0x000000000040c8cd : movzx eax, dil ; pop rbp ; ret
0x0000000000414b30 : movzx eax, word ptr [rbp - 2] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041c3e8 : nop dword ptr [rax + rax] ; ret
0x000000000040762d : or al, 0xffffffffffffffc5 ; clc ; fld qword ptr [rcx] ; jmp rcx
0x0000000000413a9e : or al, 0xffffffffffffffc5 ; enter 0x41ee, 0 ; jmp rcx
0x000000000040e66d : or al, 1 ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004206cd : or al, byte ptr [rax] ; add byte ptr [rax], al ; test al, -2 ; call rsp
0x000000000040fe6e : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040fe6f : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000400d50 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000405c72 : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5588
0x0000000000410d31 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041854b : or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x00000000004185c1 : or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000041854a : or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x000000000040c8cb : out 1, eax ; movzx eax, dil ; pop rbp ; ret
0x000000000040a5ac : out dx, al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, esi ; pop rbp ; ret
0x00000000004125d7 : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004185c0 : out dx, eax ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000040aab9 : outsb dx, byte ptr [rsi] ; ret 0x280f
0x000000000041c3dc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041c3de : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000411d3e : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041c3e0 : pop r14 ; pop r15 ; ret
0x0000000000411d40 : pop r15 ; pop rbp ; ret
0x000000000041c3e2 : pop r15 ; ret
0x0000000000402612 : pop rbp ; mov byte ptr [rip + 0x220e3e], 1 ; ret
0x00000000004025b1 : pop rbp ; mov edi, 0x6233e8 ; jmp rax
0x00000000004025ee : pop rbp ; mov rsi, rax ; mov edi, 0x6233e8 ; jmp rdx
0x000000000041c3db : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041c3df : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004025a5 : pop rbp ; ret
0x0000000000411d3d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040d554 : pop rbx ; pop rbp ; ret
0x0000000000411d41 : pop rdi ; pop rbp ; ret
0x000000000041c3e3 : pop rdi ; ret
0x0000000000411d3f : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000041c3e1 : pop rsi ; pop r15 ; ret
0x000000000041c3dd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040aad0 : pop rsp ; ret 0xf66
0x000000000040407a : popfq ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000421bd1 : push -1 ; jmp qword ptr [rdi]
0x000000000041102e : push r8 ; pop rbp ; ret
0x0000000000409b42 : push rax ; adc al, -0x7f ; ret 0x76c
0x0000000000404ccf : push rax ; pop rbp ; ret
0x0000000000408f37 : push rax ; sbb al, -0x7f ; ret 1
0x000000000041a198 : push rbp ; call 0x422ea
0x00000000004110b6 : push rbp ; clc ; pop rbp ; ret
0x0000000000405546 : push rbp ; fmul dword ptr [rax + 0x31] ; ret 0x8948
0x000000000040fe72 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000406cb6 : push rbp ; in al, 0x48 ; mov ecx, dword ptr [rbp - 0x28] ; call rax
0x0000000000405efe : push rbp ; in al, dx ; call rax
0x0000000000406e5f : push rbp ; in al, dx ; call rcx
0x0000000000405f86 : push rbp ; in al, dx ; mov rsi, rcx ; call rax
0x0000000000402634 : push rbp ; mov edi, 0x622e20 ; mov rbp, rsp ; call rax
0x0000000000405c7d : push rbp ; ret
0x0000000000404d45 : push rbp ; ror byte ptr [rax - 0x77], 1 ; ret 0x41e8
0x000000000041912d : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x0000000000406759 : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 8
0x000000000041053e : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000409994 : push rcx ; adc al, 0x2b ; test dword ptr [rax + 0x39fffff8], edx ; ret 0x8d0f
0x00000000004099fb : push rcx ; adc al, 0x2b ; test dword ptr [rax + 0x39fffff8], edx ; ret 0xf40
0x0000000000416161 : push rdx ; add byte ptr [rax], al ; add byte ptr [rbx + 0x23e8cc7d], cl ; ret 0xfffe
0x00000000004185be : rcl ebx, -0x11 ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x00000000004185ee : rcl ebx, -0x19 ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x00000000004218d0 : rcr byte ptr [rax - 1] ; call qword ptr [rcx]
0x000000000040d670 : rcr ebx, 0x7d ; loopne 0x40d658 ; insd dword ptr [rdi], dx ; loopne 0x40d6dd ; ret
0x00000000004002e5 : ret
0x0000000000400d58 : ret 0
0x000000000040e735 : ret 0x10
0x000000000041477a : ret 0x110
0x00000000004199e5 : ret 0x18
0x00000000004116de : ret 0x1ce8
0x0000000000404839 : ret 0x20
0x000000000040d04a : ret 0x205
0x00000000004023d2 : ret 0x220e
0x00000000004021d2 : ret 0x220f
0x0000000000401fd2 : ret 0x2210
0x000000000040aaba : ret 0x280f
0x000000000040cf14 : ret 0x2b48
0x000000000041b25f : ret 0x2be8
0x00000000004080f4 : ret 0x30
0x0000000000414b5a : ret 0x3948
0x000000000041c8c0 : ret 0x41da
0x0000000000404d49 : ret 0x41e8
0x000000000041a5c6 : ret 0x4a3b
0x000000000040e526 : ret 0x4e8
0x0000000000405c7b : ret 0x5588
0x0000000000414e56 : ret 0x5589
0x0000000000417187 : ret 0x60
0x0000000000409f52 : ret 0x6948
0x000000000041b521 : ret 0x69e8
0x0000000000409b45 : ret 0x76c
0x000000000040d901 : ret 0x79e8
0x0000000000404836 : ret 0x8148
0x000000000040b3c3 : ret 0x8348
0x0000000000406985 : ret 0x8445
0x0000000000411839 : ret 0x8844
0x00000000004047fa : ret 0x8948
0x000000000040ff9d : ret 0x89a5
0x000000000040339f : ret 0x8b48
0x000000000040999d : ret 0x8d0f
0x0000000000414268 : ret 0x9588
0x0000000000407533 : ret 0x9589
0x000000000040fe8b : ret 0x9fe8
0x000000000040cb03 : ret 0xa
0x000000000040301a : ret 0xa7
0x0000000000402fe4 : ret 0xb0
0x000000000040357e : ret 0xb0b8
0x000000000040b446 : ret 0xb948
0x00000000004197a6 : ret 0xc
0x00000000004025d5 : ret 0xc148
0x0000000000409f43 : ret 0xca01
0x000000000041142d : ret 0xcde8
0x0000000000411003 : ret 0xd284
0x000000000040d044 : ret 0xe280
0x000000000041b0a2 : ret 0xe8e8
0x000000000041048c : ret 0xee8
0x000000000041964e : ret 0xf01
0x0000000000416c61 : ret 0xf280
0x0000000000409a04 : ret 0xf40
0x000000000040aad1 : ret 0xf66
0x000000000040be10 : ret 0xff3
0x000000000040e57a : ret 0xff3a
0x000000000040cf3a : ret 0xff54
0x0000000000403d6a : ret 0xffe1
0x0000000000403eaa : ret 0xffe3
0x00000000004027ca : ret 0xfff8
0x00000000004026ca : ret 0xfff9
0x000000000040271a : ret 0xfffa
0x0000000000407f84 : ret 0xfffb
0x0000000000415c47 : ret 0xfffe
0x000000000040d2a7 : ret 0xffff
0x00000000004037d8 : ret 1
0x000000000040cba7 : ret 2
0x0000000000409614 : ret 7
0x0000000000405240 : ret 8
0x0000000000418b32 : rol dword ptr [rax - 0x49f0fe1f], -0x3f ; pop rbp ; ret
0x0000000000411e7b : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000040f560 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x40f5cb ; ret
0x00000000004025dc : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4025eb ; pop rbp ; ret
0x000000000041aa6e : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x0000000000411e7c : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000404d46 : ror byte ptr [rax - 0x77], 1 ; ret 0x41e8
0x000000000040f561 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x40f5ca ; ret
0x0000000000403e49 : ror byte ptr [rax - 0x7d], -0x3c ; pop rbp ; ret
0x000000000040bb7d : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x00000000004049b7 : ror byte ptr [rax - 0x7f], -0x3c ; adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040ee95 : ror byte ptr [rax - 0x7f], -0x3c ; jo 0x40eea5 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041912e : ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000040675a : ror byte ptr [rax - 0x7f], 1 ; ret 8
0x000000000041053f : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000417d7a : ror dword ptr [rcx + 0x458bec45], -0x14 ; pop rbp ; ret
0x00000000004025ae : sal byte ptr [rsp + rsi*8 + 0x5d], -0x41 ; call 0xffffffffff4087f4
0x00000000004112ba : sal dl, 1 ; addps xmm1, xmm2 ; movaps xmm0, xmm1 ; pop rbp ; ret
0x0000000000405e9f : sar bh, -1 ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004025de : sar eax, 1 ; jne 0x4025e9 ; pop rbp ; ret
0x0000000000405daa : sar edi, -1 ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004025dd : sar rax, 1 ; jne 0x4025ea ; pop rbp ; ret
0x0000000000408f38 : sbb al, -0x7f ; ret 1
0x0000000000418e6f : sbb al, 0 ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000418dce : sbb al, 0x24 ; add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x000000000040e742 : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040559a : sete al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004196a5 : setne al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040559c : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000040aaef : shl dword ptr [rsi + 0xf], 0x5c ; ret 0xf66
0x00000000004185ef : shl edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000418588 : shl edx, cl ; or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x00000000004185bf : shr edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000418548 : shr edx, cl ; or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x0000000000416d61 : stc ; add eax, 0xf000000 ; xchg eax, esp ; ret 0x9588
0x000000000041bca8 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041fcd1 : sub al, -2 ; jmp rdx
0x0000000000417688 : sub al, 0x48 ; add esp, 0x20 ; pop rbp ; ret
0x00000000004112c0 : sub cl, al ; pop rbp ; ret
0x000000000040a5ab : sub esi, 1 ; mov eax, esi ; pop rbp ; ret
0x000000000041c469 : sub esp, 8 ; add rsp, 8 ; ret
0x000000000041c468 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040a2d7 : test al, -0x18 ; ret
0x00000000004206d1 : test al, -2 ; call rsp
0x000000000041489e : test al, 0 ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041c3ea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000415c40 : test byte ptr [rdi], al ; add byte ptr [rax], al ; call 0x401f37
0x0000000000407f90 : test byte ptr [rip - 0x17000000], al ; ret
0x0000000000415cde : test byte ptr [rsi], bl ; add byte ptr [rax], al ; add al, ch ; ret 0xfffe
0x0000000000415b95 : test byte ptr [rsi], bl ; add byte ptr [rax], al ; add al, ch ; xchg eax, ecx ; ret
0x000000000040da86 : test dh, dh ; cmove ecx, edx ; movsxd rax, ecx ; pop rbp ; ret
0x0000000000409997 : test dword ptr [rax + 0x39fffff8], edx ; ret 0x8d0f
0x00000000004099fe : test dword ptr [rax + 0x39fffff8], edx ; ret 0xf40
0x0000000000403d64 : test dword ptr [rax + rax], esp ; add al, ch ; ret 0xffe1
0x000000000040d326 : test dword ptr [rax - 0x75], 0x8948a845 ; ret 0x8148
0x0000000000406a6e : test dword ptr [rbp + 0x5dffffff], ecx ; ret
0x0000000000409690 : test dword ptr [rip - 0x17000000], eax ; ret
0x000000000040c937 : xchg eax, ebp ; ret
0x0000000000405c7a : xchg eax, ebp ; ret 0x5588
0x0000000000406984 : xchg eax, ebp ; ret 0x8445
0x0000000000414267 : xchg eax, ebp ; ret 0x9588
0x0000000000419596 : xchg eax, ebp ; ret 0xd284
0x00000000004196a6 : xchg eax, ebp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000415b9b : xchg eax, ecx ; ret
0x000000000040d043 : xchg eax, edx ; ret 0xe280
0x0000000000417f16 : xchg eax, esp ; ret 0x5588
0x0000000000416ceb : xchg eax, esp ; ret 0x9588
0x0000000000411002 : xchg eax, esp ; ret 0xd284
0x0000000000416c60 : xchg eax, esp ; ret 0xf280
0x0000000000418b31 : xchg eax, esp ; rol dword ptr [rax - 0x49f0fe1f], -0x3f ; pop rbp ; ret
0x000000000040559b : xchg eax, esp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000041854c : xlatb ; mov rax, rdi ; pop rbp ; ret
0x0000000000403016 : xor al, 0x62 ; add al, ch ; ret 0xa7
0x0000000000403ee4 : xor al, 0x62 ; add byte ptr [rdx + rdx*8 - 0x763ebbf1], al ; ret 0xb0
0x000000000041953e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000405417 : xor eax, 0x48ffffcb ; add esp, 0x10 ; pop rbp ; ret
0x000000000041f1d5 : xor edi, esi ; call qword ptr [rax]
0x000000000040f3d6 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004025b4 : xor esp, dword ptr [rdx] ; jmp rax
0x00000000004025f4 : xor esp, dword ptr [rdx] ; jmp rdx
