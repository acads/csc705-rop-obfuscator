0x0000000000401ba4 : adc ah, byte ptr [rcx] ; jmp rax
0x0000000000401be4 : adc ah, byte ptr [rcx] ; jmp rdx
0x00000000004064b6 : adc al, -9 ; pop rbp ; ret
0x000000000040fa0d : adc al, 0 ; add byte ptr [rax], dl ; ret 0xffff
0x000000000040e1fd : adc byte ptr [rax], al ; add ah, bh ; test edi, edi ; call rsp
0x000000000040f72d : adc dword ptr [rax], eax ; add al, ah ; test al, -1 ; call rsp
0x000000000040f70d : adc dword ptr [rax], eax ; add byte ptr [rax], ah ; test al, -1 ; call rbx
0x000000000040c14b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040f70c : adc dword ptr fs:[rax], eax ; add byte ptr [rax], ah ; test al, -1 ; call rbx
0x0000000000405389 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401689 : adc eax, dword ptr [rbx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000403e72 : adc esp, dword ptr [rcx] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403621 : adc esp, dword ptr [rcx] ; pop rbp ; ret
0x0000000000403644 : adc rsp, qword ptr [rcx] ; pop rbp ; ret
0x000000000040e1ff : add ah, bh ; test edi, edi ; call rsp
0x000000000040e47f : add ah, bl ; loope 0x40e486 ; call rsp
0x000000000040e3d7 : add ah, bl ; ret 0xffff
0x000000000040e13f : add ah, cl ; jp 0x40e146 ; call rsp
0x0000000000402c11 : add al, -0x36 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406464 : add al, -0x36 ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000403642 : add al, 0x25 ; adc rsp, qword ptr [rcx] ; pop rbp ; ret
0x0000000000409e7a : add al, 0x48 ; add eax, ecx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040f72f : add al, ah ; test al, -1 ; call rsp
0x00000000004028e8 : add al, ch ; ret 0x6b
0x000000000040cc4f : add bl, dh ; ret
0x00000000004030cc : add byte ptr [r8], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x00000000004064d2 : add byte ptr [r8], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040757f : add byte ptr [rax + 0x63], cl ; ret 0x8b48
0x0000000000408768 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000402184 : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000040f70f : add byte ptr [rax], ah ; test al, -1 ; call rbx
0x000000000040fa0a : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], dl ; ret 0xffff
0x000000000040f70a : add byte ptr [rax], al ; adc dword ptr fs:[rax], eax ; add byte ptr [rax], ah ; test al, -1 ; call rbx
0x000000000040cc4d : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040757d : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8b48
0x0000000000402182 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000040cc4b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004004a8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004004aa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040a7ed : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407c45 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000409439 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004004ac : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000402d54 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7538b], cl ; ret 0xb0
0x000000000040eb8e : add byte ptr [rax], al ; add byte ptr [rbx - 1], ch ; jmp qword ptr [rdx]
0x0000000000403091 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x9588
0x0000000000405c5e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040e80e : add byte ptr [rax], al ; add byte ptr [rsi - 1], cl ; call qword ptr [rsi]
0x000000000040fa09 : add byte ptr [rax], al ; add byte ptr [rsp + rdx], ah ; add byte ptr [rax], dl ; ret 0xffff
0x0000000000403542 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403583 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407c47 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040168b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004053e1 : add byte ptr [rax], al ; call 0x4016d4
0x000000000040e1fe : add byte ptr [rax], al ; cld ; test edi, edi ; call rsp
0x000000000040dfbe : add byte ptr [rax], al ; fcom qword ptr [rdx - 1] ; call rsp
0x000000000040dffe : add byte ptr [rax], al ; fcom qword ptr [rsi - 1] ; call rsp
0x000000000040eb8a : add byte ptr [rax], al ; in al, 5 ; add byte ptr [rax], al ; add byte ptr [rbx - 1], ch ; jmp qword ptr [rdx]
0x00000000004017e9 : add byte ptr [rax], al ; jmp 0x4016a9
0x000000000040e0fe : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; js 0x40e107 ; call rsp
0x000000000040e23e : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; mov dr1, edi ; call rsp
0x000000000040c72c : add byte ptr [rax], al ; mov al, sil ; movzx eax, al ; pop rbp ; ret
0x000000000040c6ad : add byte ptr [rax], al ; mov ax, si ; movzx eax, ax ; pop rbp ; ret
0x000000000040943b : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000403f32 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000402cfa : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040862b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004050b8 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040e33e : add byte ptr [rax], al ; pushfq ; mov dh, -1 ; call rsp
0x00000000004004ae : add byte ptr [rax], al ; ret
0x000000000040fa0f : add byte ptr [rax], dl ; ret 0xffff
0x000000000040e17f : add byte ptr [rbp + rdi*2 - 1], bh ; call rsp
0x000000000040e43f : add byte ptr [rbp + rdx*8 - 1], cl ; call rsp
0x000000000040862c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004050b9 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040e53f : add byte ptr [rbx + rbp*8 - 1], bh ; call rsp
0x0000000000402917 : add byte ptr [rbx - 0x15f4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000402b0b : add byte ptr [rbx - 0x1674b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000402d56 : add byte ptr [rbx - 0x76b7538b], cl ; ret 0xb0
0x0000000000403115 : add byte ptr [rbx - 0x874b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040eb90 : add byte ptr [rbx - 1], ch ; jmp qword ptr [rdx]
0x000000000040f70b : add byte ptr [rcx + rdx], ah ; add byte ptr [rax], ah ; test al, -1 ; call rbx
0x0000000000406af8 : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401c08 : add byte ptr [rcx], al ; ret
0x0000000000403093 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x9588
0x0000000000405c60 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000409ced : add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x000000000040e3ff : add byte ptr [rsi + rax*8 - 1], bl ; call rsp
0x000000000040df7f : add byte ptr [rsi + rdi - 1], bl ; call rsp
0x000000000040e810 : add byte ptr [rsi - 1], cl ; call qword ptr [rsi]
0x000000000040fa0b : add byte ptr [rsp + rdx], ah ; add byte ptr [rax], dl ; ret 0xffff
0x000000000040baec : add dword ptr [rax + 0xf], eax ; mov dh, -0x39 ; pop rbp ; ret
0x0000000000405348 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403581 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040862a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004050b7 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040df54 : add dword ptr [rbx], ebx ; add edi, dword ptr [rbx] ; and byte ptr [rsi], al ; add byte ptr [rax], al ; ret
0x0000000000403b56 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040ad9a : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000403601 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401c04 : add eax, 0x20f72e ; add ebx, esi ; ret
0x0000000000409e7c : add eax, ecx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401bcb : add eax, edx ; sar rax, 1 ; jne 0x401bdc ; pop rbp ; ret
0x0000000000401c09 : add ebx, esi ; ret
0x000000000040df56 : add edi, dword ptr [rbx] ; and byte ptr [rsi], al ; add byte ptr [rax], al ; ret
0x0000000000401dab : add esp, 0x10 ; pop rbp ; ret
0x0000000000406af6 : add esp, 0x100 ; pop rbp ; ret
0x000000000040c11c : add esp, 0x130 ; pop rbp ; ret
0x00000000004050b4 : add esp, 0x138 ; pop rbx ; pop rbp ; ret
0x000000000040891c : add esp, 0x1a0 ; pop rbp ; ret
0x000000000040c50e : add esp, 0x1e0 ; pop rbp ; ret
0x0000000000403586 : add esp, 0x20 ; pop rbp ; ret
0x0000000000401ebd : add esp, 0x30 ; pop rbp ; ret
0x0000000000403454 : add esp, 0x40 ; pop rbp ; ret
0x0000000000403228 : add esp, 0x50 ; pop rbp ; ret
0x0000000000402e9b : add esp, 0x60 ; pop rbp ; ret
0x00000000004041c3 : add esp, 0x70 ; pop rbp ; ret
0x000000000040526e : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040aba3 : add esp, 0x80 ; pop rbp ; ret
0x0000000000403162 : add esp, 0x90 ; pop rbp ; ret
0x00000000004087b4 : add esp, 0xa0 ; pop rbp ; ret
0x0000000000402cf6 : add esp, 0xb0 ; pop rbp ; ret
0x000000000040b25c : add esp, 0xc0 ; pop rbp ; ret
0x000000000040744b : add esp, 0xd0 ; pop rbp ; ret
0x00000000004093cf : add esp, 0xe0 ; pop rbp ; ret
0x000000000040168e : add esp, 8 ; ret
0x0000000000409e7b : add rax, rcx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401bca : add rax, rdx ; sar rax, 1 ; jne 0x401bdd ; pop rbp ; ret
0x0000000000401daa : add rsp, 0x10 ; pop rbp ; ret
0x0000000000406af5 : add rsp, 0x100 ; pop rbp ; ret
0x000000000040c11b : add rsp, 0x130 ; pop rbp ; ret
0x00000000004050b3 : add rsp, 0x138 ; pop rbx ; pop rbp ; ret
0x000000000040891b : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000040c50d : add rsp, 0x1e0 ; pop rbp ; ret
0x0000000000403585 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000401ebc : add rsp, 0x30 ; pop rbp ; ret
0x0000000000403453 : add rsp, 0x40 ; pop rbp ; ret
0x0000000000403227 : add rsp, 0x50 ; pop rbp ; ret
0x0000000000402e9a : add rsp, 0x60 ; pop rbp ; ret
0x00000000004041c2 : add rsp, 0x70 ; pop rbp ; ret
0x000000000040526d : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040aba2 : add rsp, 0x80 ; pop rbp ; ret
0x0000000000403161 : add rsp, 0x90 ; pop rbp ; ret
0x00000000004087b3 : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000402cf5 : add rsp, 0xb0 ; pop rbp ; ret
0x000000000040b25b : add rsp, 0xc0 ; pop rbp ; ret
0x000000000040744a : add rsp, 0xd0 ; pop rbp ; ret
0x00000000004093ce : add rsp, 0xe0 ; pop rbp ; ret
0x000000000040168d : add rsp, 8 ; ret
0x0000000000403600 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040baea : and bh, 1 ; movzx eax, dil ; pop rbp ; ret
0x0000000000401c07 : and byte ptr [rax], al ; add ebx, esi ; ret
0x000000000040df58 : and byte ptr [rsi], al ; add byte ptr [rax], al ; ret
0x000000000040bae9 : and dil, 1 ; movzx eax, dil ; pop rbp ; ret
0x000000000040a255 : and eax, 0x40df10 ; mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x0000000000405677 : and eax, 0x48fffffd ; add esp, 0x20 ; pop rbp ; ret
0x000000000040361f : and eax, 0x611340 ; pop rbp ; ret
0x0000000000403643 : and eax, 0x611348 ; pop rbp ; ret
0x00000000004074c5 : and edi, dword ptr [rbp - 0x10] ; mov rax, rdi ; pop rbp ; ret
0x00000000004074c4 : and rdi, qword ptr [rbp - 0x10] ; mov rax, rdi ; pop rbp ; ret
0x00000000004053e3 : call 0x4016d2
0x00000000004057a3 : call 0x4019b2
0x00000000004053b5 : call 0xffffffffe08ddd09
0x00000000004050e9 : call 0xffffffffe902da39
0x00000000004050e8 : call 0xffffffffe902da3a
0x000000000040a741 : call 0xffffffffff7a3292
0x000000000040a740 : call 0xffffffffff7a3293
0x000000000040a87f : call 0xffffffffff7a33d0
0x000000000040a87e : call 0xffffffffff7a33d1
0x000000000040cc29 : call qword ptr [r12 + rbx*8]
0x000000000040ee53 : call qword ptr [rcx]
0x000000000040f5f3 : call qword ptr [rdx]
0x000000000040e813 : call qword ptr [rsi]
0x000000000040cc2a : call qword ptr [rsp + rbx*8]
0x0000000000401c2d : call rax
0x000000000040f713 : call rbx
0x000000000040eb13 : call rdx
0x000000000040df83 : call rsp
0x000000000040ba0d : clc ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407f52 : clc ; add rsp, 0x100 ; pop rbp ; ret
0x000000000040c11a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x0000000000408b1f : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405c71 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403d21 : clc ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004066b0 : clc ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040b435 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000405f13 : clc ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000402cf4 : clc ; add rsp, 0xb0 ; pop rbp ; ret
0x000000000040b946 : clc ; add rsp, 0xc0 ; pop rbp ; ret
0x00000000004074c3 : clc ; and rdi, qword ptr [rbp - 0x10] ; mov rax, rdi ; pop rbp ; ret
0x0000000000401bcf : clc ; jne 0x401bd8 ; pop rbp ; ret
0x0000000000404075 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040cb7b : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000406b33 : clc ; mov qword ptr [rdi + 0x10], rsi ; pop rbp ; ret
0x000000000040b97e : clc ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000406b13 : clc ; mov qword ptr [rdi + 8], rsi ; pop rbp ; ret
0x00000000004064b3 : clc ; mov qword ptr [rdi + rsi*8], rdx ; pop rbp ; ret
0x000000000040a0dd : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000409a3b : clc ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000409a5b : clc ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000409a7b : clc ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000405d3b : clc ; mov rax, qword ptr [rdi] ; pop rbp ; ret
0x0000000000405d37 : clc ; mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi] ; pop rbp ; ret
0x0000000000406c5d : clc ; mov rdi, qword ptr [rdx + 0x10] ; call rax
0x0000000000405f32 : clc ; pop rbp ; ret
0x0000000000405f2b : clc ; shl rdi, 8 ; mov rax, rdi ; pop rbp ; ret
0x0000000000409438 : cld ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000401dd7 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000409589 : cld ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004033aa : cld ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403452 : cld ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000403226 : cld ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040b25a : cld ; add rsp, 0xc0 ; pop rbp ; ret
0x00000000004093cd : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000040cb78 : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004095e3 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000409586 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000409701 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040943f : cld ; pop rbp ; ret
0x00000000004052c0 : cld ; ret
0x000000000040e200 : cld ; test edi, edi ; call rsp
0x000000000040361e : cmp al, 0x25 ; adc esp, dword ptr [rcx] ; pop rbp ; ret
0x00000000004050b6 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040a15a : cmp dword ptr [rax - 0x75], ecx ; jne 0x40a144 ; call rax
0x0000000000401b8d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401ba0 ; pop rbp ; ret
0x0000000000408171 : cwde ; fld dword ptr [rax] ; jmp rcx
0x000000000040816c : cwde ; mov rcx, qword ptr [rax*8 + 0x40d998] ; jmp rcx
0x00000000004067c1 : dec dword ptr [rax - 0x77] ; ret 0x56e8
0x000000000040291d : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040c07f : dec dword ptr [rax - 0x7f] ; ret 1
0x0000000000406500 : div dword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x00000000004064ff : div qword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000040519b : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000040a157 : enter -0x74b8, 0x39 ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x000000000040dfc0 : fcom qword ptr [rdx - 1] ; call rsp
0x000000000040e000 : fcom qword ptr [rsi - 1] ; call rsp
0x0000000000406b91 : fild dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040a257 : fild word ptr [rax] ; mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x0000000000408172 : fld dword ptr [rax] ; jmp rcx
0x0000000000409191 : fld qword ptr [rax] ; jmp rcx
0x0000000000404ad3 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040cc2c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000409968 : fsub st(0), st(0) ; ret 0x27
0x0000000000401da9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405fc0 : hlt ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401ba0 : hlt ; pop rbp ; mov edi, 0x6112e0 ; jmp rax
0x000000000040eb8c : in al, 5 ; add byte ptr [rax], al ; add byte ptr [rbx - 1], ch ; jmp qword ptr [rdx]
0x0000000000406e69 : in al, dx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000408770 : int 0x80
0x0000000000401b93 : ja 0x401b9a ; pop rbp ; ret
0x0000000000406b16 : ja 0x406b23 ; pop rbp ; ret
0x0000000000406b36 : ja 0x406b4b ; pop rbp ; ret
0x000000000040b981 : ja 0x40b9ce ; pop rbp ; ret
0x0000000000401b9f : je 0x401b9d ; pop rbp ; mov edi, 0x6112e0 ; jmp rax
0x000000000040e0c1 : je 0x40e0c4 ; call rsp
0x00000000004053dd : jge 0x4053f0 ; call 0x4016d8
0x0000000000405d3a : jge 0x405d3a ; mov rax, qword ptr [rdi] ; pop rbp ; ret
0x00000000004064b2 : jge 0x4064b3 ; mov qword ptr [rdi + rsi*8], rdx ; pop rbp ; ret
0x0000000000406b12 : jge 0x406b13 ; mov qword ptr [rdi + 8], rsi ; pop rbp ; ret
0x0000000000406b32 : jge 0x406b33 ; mov qword ptr [rdi + 0x10], rsi ; pop rbp ; ret
0x00000000004074c6 : jge 0x4074be ; mov rax, rdi ; pop rbp ; ret
0x0000000000409a3a : jge 0x409a3b ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000409a5a : jge 0x409a5b ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000409a7a : jge 0x409a7b ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000409dd0 : jge 0x409dc3 ; mov rcx, qword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040b2e0 : jge 0x40b2d3 ; mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040b97d : jge 0x40b97e ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040e181 : jge 0x40e184 ; call rsp
0x00000000004017eb : jmp 0x4016a7
0x000000000040b4c1 : jmp 0x40b4c4
0x000000000040a5e0 : jmp 0x49032f30
0x000000000040b01e : jmp 0x4903396e
0x000000000040b08b : jmp 0x490339db
0x000000000040b7c2 : jmp 0x49034112
0x000000000040b82f : jmp 0x4903417f
0x000000000040ecb3 : jmp qword ptr [rax]
0x000000000040f853 : jmp qword ptr [rdi]
0x000000000040eb93 : jmp qword ptr [rdx]
0x000000000040e5f3 : jmp qword ptr [rsi]
0x0000000000401ba7 : jmp rax
0x00000000004020d6 : jmp rcx
0x0000000000401be7 : jmp rdx
0x0000000000401bd0 : jne 0x401bd7 ; pop rbp ; ret
0x0000000000406501 : jne 0x4064f9 ; mov rax, rdx ; pop rbp ; ret
0x000000000040749c : jne 0x407474 ; mov rax, qword ptr [rsi] ; pop rbp ; ret
0x0000000000409e46 : jne 0x409e31 ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000040a15d : jne 0x40a141 ; call rax
0x00000000004041c5 : jo 0x404226 ; ret
0x00000000004058d4 : jo 0x405935 ; ret
0x0000000000405a0e : jo 0x405a6f ; ret
0x0000000000405f17 : jo 0x405f78 ; ret
0x0000000000406c60 : jp 0x406c74 ; call rax
0x000000000040e141 : jp 0x40e144 ; call rsp
0x0000000000405270 : js 0x4052d0 ; pop rbp ; ret
0x000000000040e101 : js 0x40e104 ; call rsp
0x00000000004052f3 : leave ; ret
0x000000000040e100 : lodsb al, byte ptr [rsi] ; js 0x40e105 ; call rsp
0x000000000040e240 : lodsb al, byte ptr [rsi] ; mov dr1, edi ; call rsp
0x000000000040c589 : loop 0x40c5db ; or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x000000000040c671 : loop 0x40c6c3 ; or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x000000000040e481 : loope 0x40e484 ; call rsp
0x00000000004038ab : loopne 0x4038fb ; add esp, 0x20 ; pop rbp ; ret
0x00000000004038aa : loopne 0x4038fc ; add esp, 0x20 ; pop rbp ; ret
0x0000000000405d27 : loopne 0x405d77 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000405d26 : loopne 0x405d78 ; add esp, 0x20 ; pop rbp ; ret
0x00000000004062a4 : loopne 0x4062f4 ; add esp, 0x60 ; pop rbp ; ret
0x00000000004062a3 : loopne 0x4062f5 ; add esp, 0x60 ; pop rbp ; ret
0x00000000004075b4 : loopne 0x407546 ; push rbp ; mov ah, -0x7f ; ret 3
0x00000000004075b3 : loopne 0x407547 ; push rbp ; mov ah, -0x7f ; ret 3
0x0000000000407817 : loopne 0x4077a9 ; push rbp ; mov ah, -0x7f ; ret 2
0x0000000000407816 : loopne 0x4077aa ; push rbp ; mov ah, -0x7f ; ret 2
0x000000000040791c : loopne 0x4078ae ; push rbp ; mov al, -0x7f ; ret 3
0x000000000040791b : loopne 0x4078af ; push rbp ; mov al, -0x7f ; ret 3
0x0000000000407b7f : loopne 0x407b11 ; push rbp ; mov al, -0x7f ; ret 2
0x0000000000407b7e : loopne 0x407b12 ; push rbp ; mov al, -0x7f ; ret 2
0x00000000004093d1 : loopne 0x4093d8 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000409e47 : loopne 0x409e99 ; mov esi, eax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000040c510 : loopne 0x40c518 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000407579 : mov ah, -0x7f ; ret 1
0x0000000000407598 : mov ah, -0x7f ; ret 2
0x00000000004075b7 : mov ah, -0x7f ; ret 3
0x00000000004075d6 : mov ah, -0x7f ; ret 4
0x00000000004075f5 : mov ah, -0x7f ; ret 5
0x0000000000407614 : mov ah, -0x7f ; ret 6
0x0000000000407633 : mov ah, -0x7f ; ret 7
0x000000000040e1fc : mov ah, 0x10 ; add byte ptr [rax], al ; cld ; test edi, edi ; call rsp
0x000000000040e23c : mov ah, 0x11 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; mov dr1, edi ; call rsp
0x000000000040e33c : mov ah, 0x15 ; add byte ptr [rax], al ; pushfq ; mov dh, -1 ; call rsp
0x0000000000409d4e : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040e0fc : mov ah, 0xc ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; js 0x40e109 ; call rsp
0x000000000040dfbc : mov ah, 7 ; add byte ptr [rax], al ; fcom qword ptr [rdx - 1] ; call rsp
0x000000000040dffc : mov ah, 8 ; add byte ptr [rax], al ; fcom qword ptr [rsi - 1] ; call rsp
0x00000000004078e1 : mov al, -0x7f ; ret 1
0x0000000000407900 : mov al, -0x7f ; ret 2
0x000000000040791f : mov al, -0x7f ; ret 3
0x000000000040793e : mov al, -0x7f ; ret 4
0x000000000040795d : mov al, -0x7f ; ret 5
0x000000000040797c : mov al, -0x7f ; ret 6
0x000000000040799b : mov al, -0x7f ; ret 7
0x0000000000402cf8 : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004057ab : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000402e99 : mov al, 0x48 ; add esp, 0x60 ; pop rbp ; ret
0x000000000040563b : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000409c35 : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040c7a6 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004035fd : mov al, byte ptr [rbp - 9] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040c72f : mov al, dh ; movzx eax, al ; pop rbp ; ret
0x000000000040c72e : mov al, sil ; movzx eax, al ; pop rbp ; ret
0x000000000040c6af : mov ax, si ; movzx eax, ax ; pop rbp ; ret
0x000000000040c6b3 : mov bh, -0x40 ; pop rbp ; ret
0x0000000000403641 : mov byte ptr [0x611348], al ; pop rbp ; ret
0x0000000000401c03 : mov byte ptr [rip + 0x20f72e], 1 ; ret
0x000000000040baef : mov dh, -0x39 ; pop rbp ; ret
0x0000000000403b58 : mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040ad9c : mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000403603 : mov dh, -0x40 ; pop rbp ; ret
0x000000000040e341 : mov dh, -1 ; call rsp
0x000000000040e241 : mov dr1, edi ; call rsp
0x000000000040361d : mov dword ptr [0x611340], edi ; pop rbp ; ret
0x0000000000404076 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000403f84 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000404038 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004038a9 : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401eb9 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000409d4c : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401da7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401dd5 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040cb79 : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040a0db : mov dword ptr [rbp - 8], eax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004040ee : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040a25a : mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x0000000000406b35 : mov dword ptr [rdi + 0x10], esi ; pop rbp ; ret
0x000000000040b980 : mov dword ptr [rdi + 0x48], esi ; pop rbp ; ret
0x0000000000406b15 : mov dword ptr [rdi + 8], esi ; pop rbp ; ret
0x00000000004064b5 : mov dword ptr [rdi + rsi*8], edx ; pop rbp ; ret
0x0000000000402c10 : mov dword ptr [rdx + rcx*8], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406463 : mov dword ptr [rdx + rcx*8], eax ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040579c : mov eax, 0x48f78948 ; mov esi, eax ; call 0x4019b9
0x000000000040526c : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000407bf7 : mov eax, 0x81b0558b ; ret 7
0x000000000040788f : mov eax, 0x81b4558b ; ret 7
0x0000000000403f38 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000405cc6 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040386c : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403f35 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004037ef : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000406e67 : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040670e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403eed : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403ae4 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000403f7e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000409b3f : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000405d25 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004062a2 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000409e4c : mov eax, dword ptr [rbp - 0x20] ; call rax
0x0000000000406013 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040403a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004041bf : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040526a : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004057a9 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000402e97 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000405fbe : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004095e4 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000409587 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004033a8 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403450 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000403224 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040943d : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040ba0b : mov eax, dword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408b1d : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405c6f : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403d1f : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004066ae : mov eax, dword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040b433 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000405f11 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040a0df : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000409a3d : mov eax, dword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000409a5d : mov eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000409a7d : mov eax, dword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000405d3d : mov eax, dword ptr [rdi] ; pop rbp ; ret
0x000000000040749f : mov eax, dword ptr [rsi] ; pop rbp ; ret
0x0000000000405f31 : mov eax, edi ; pop rbp ; ret
0x000000000040a441 : mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406504 : mov eax, edx ; pop rbp ; ret
0x000000000040c6b0 : mov eax, esi ; movzx eax, ax ; pop rbp ; ret
0x000000000040c5c3 : mov eax, esi ; pop rbp ; ret
0x0000000000401c2b : mov ebp, esp ; call rax
0x0000000000401b91 : mov ebp, esp ; ja 0x401b9c ; pop rbp ; ret
0x00000000004020cf : mov ecx, dword ptr [rax*8 + 0x40ccb0] ; jmp rcx
0x0000000000404277 : mov ecx, dword ptr [rax*8 + 0x40d460] ; jmp rcx
0x0000000000404557 : mov ecx, dword ptr [rax*8 + 0x40d4a8] ; jmp rcx
0x000000000040816e : mov ecx, dword ptr [rax*8 + 0x40d998] ; jmp rcx
0x000000000040920d : mov ecx, dword ptr [rax*8 + 0x40dd10] ; jmp rcx
0x000000000040918d : mov ecx, dword ptr [rax*8 + 0x40dd70] ; jmp rcx
0x0000000000403f81 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040a7a2 : mov ecx, dword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040a73f : mov ecx, dword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000409dd3 : mov ecx, dword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040b2e3 : mov ecx, dword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040b3b0 : mov ecx, dword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040c5ed : mov ecx, eax ; shl edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000040c5bd : mov ecx, eax ; shr edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000401c25 : mov edi, 0x610e20 ; mov rbp, rsp ; call rax
0x0000000000401ba2 : mov edi, 0x6112e0 ; jmp rax
0x0000000000401be2 : mov edi, 0x6112e0 ; jmp rdx
0x0000000000406b31 : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x10], rsi ; pop rbp ; ret
0x000000000040b97c : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000406b11 : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 8], rsi ; pop rbp ; ret
0x00000000004064b1 : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + rsi*8], rdx ; pop rbp ; ret
0x0000000000409a39 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000409a59 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000409a79 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000405d39 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi] ; pop rbp ; ret
0x000000000040a743 : mov edi, dword ptr [rcx] ; call rax
0x000000000040a159 : mov edi, dword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x0000000000406c5f : mov edi, dword ptr [rdx + 0x10] ; call rax
0x000000000040cc27 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000040579e : mov edi, esi ; mov rsi, rax ; call 0x4019b7
0x000000000040cc26 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000406c5b : mov edx, dword ptr [rbp - 8] ; mov rdi, qword ptr [rdx + 0x10] ; call rax
0x000000000040a222 : mov esi, 0x48ffffff ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040a15c : mov esi, dword ptr [rbp - 0x20] ; call rax
0x000000000040749b : mov esi, dword ptr [rbp - 0x30] ; mov rax, qword ptr [rsi] ; pop rbp ; ret
0x0000000000409dd7 : mov esi, dword ptr [rcx] ; call rax
0x00000000004057a1 : mov esi, eax ; call 0x4019b4
0x0000000000401be0 : mov esi, eax ; mov edi, 0x6112e0 ; jmp rdx
0x0000000000409e49 : mov esi, eax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000040361c : mov qword ptr [0x611340], rdi ; pop rbp ; ret
0x000000000040a0da : mov qword ptr [rbp - 8], rax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004040ed : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406b34 : mov qword ptr [rdi + 0x10], rsi ; pop rbp ; ret
0x000000000040b97f : mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000406b14 : mov qword ptr [rdi + 8], rsi ; pop rbp ; ret
0x00000000004064b4 : mov qword ptr [rdi + rsi*8], rdx ; pop rbp ; ret
0x0000000000402c0f : mov qword ptr [rdx + rcx*8], rax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406462 : mov qword ptr [rdx + rcx*8], rax ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000409d4d : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004057aa : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000402e98 : mov r8b, 0x48 ; add esp, 0x60 ; pop rbp ; ret
0x000000000040526b : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000407bf6 : mov r8d, 0x81b0558b ; ret 7
0x000000000040788e : mov r8d, 0x81b4558b ; ret 7
0x0000000000405cc5 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040386b : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403f34 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004037ee : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040670d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403eec : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403ae3 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000409b3e : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000405d24 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004062a1 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000409e4b : mov rax, qword ptr [rbp - 0x20] ; call rax
0x0000000000406012 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004041be : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004057a8 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000402e96 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040ba0a : mov rax, qword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408b1c : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405c6e : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403d1e : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004066ad : mov rax, qword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040b432 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000405f10 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040a0de : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000409a3c : mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000409a5c : mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000409a7c : mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000405d3c : mov rax, qword ptr [rdi] ; pop rbp ; ret
0x000000000040749e : mov rax, qword ptr [rsi] ; pop rbp ; ret
0x0000000000405f30 : mov rax, rdi ; pop rbp ; ret
0x000000000040a440 : mov rax, rdx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406503 : mov rax, rdx ; pop rbp ; ret
0x0000000000401c2a : mov rbp, rsp ; call rax
0x0000000000401b90 : mov rbp, rsp ; ja 0x401b9d ; pop rbp ; ret
0x00000000004020ce : mov rcx, qword ptr [rax*8 + 0x40ccb0] ; jmp rcx
0x0000000000404276 : mov rcx, qword ptr [rax*8 + 0x40d460] ; jmp rcx
0x0000000000404556 : mov rcx, qword ptr [rax*8 + 0x40d4a8] ; jmp rcx
0x000000000040816d : mov rcx, qword ptr [rax*8 + 0x40d998] ; jmp rcx
0x000000000040920c : mov rcx, qword ptr [rax*8 + 0x40dd10] ; jmp rcx
0x000000000040918c : mov rcx, qword ptr [rax*8 + 0x40dd70] ; jmp rcx
0x000000000040a7a1 : mov rcx, qword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040a73e : mov rcx, qword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000409dd2 : mov rcx, qword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040b2e2 : mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040b3af : mov rcx, qword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000406b30 : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x10], rsi ; pop rbp ; ret
0x000000000040b97b : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000406b10 : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 8], rsi ; pop rbp ; ret
0x00000000004064b0 : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + rsi*8], rdx ; pop rbp ; ret
0x0000000000409a38 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000409a58 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000409a78 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000405d38 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi] ; pop rbp ; ret
0x000000000040a742 : mov rdi, qword ptr [rcx] ; call rax
0x000000000040a158 : mov rdi, qword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x0000000000406c5e : mov rdi, qword ptr [rdx + 0x10] ; call rax
0x000000000040579d : mov rdi, rsi ; mov rsi, rax ; call 0x4019b8
0x0000000000406c5a : mov rdx, qword ptr [rbp - 8] ; mov rdi, qword ptr [rdx + 0x10] ; call rax
0x000000000040a15b : mov rsi, qword ptr [rbp - 0x20] ; call rax
0x000000000040749a : mov rsi, qword ptr [rbp - 0x30] ; mov rax, qword ptr [rsi] ; pop rbp ; ret
0x0000000000409dd6 : mov rsi, qword ptr [rcx] ; call rax
0x00000000004057a0 : mov rsi, rax ; call 0x4019b5
0x0000000000401bdf : mov rsi, rax ; mov edi, 0x6112e0 ; jmp rdx
0x0000000000409e48 : mov rsi, rax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x0000000000403b57 : movzx eax, al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040ad9b : movzx eax, al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000403602 : movzx eax, al ; pop rbp ; ret
0x000000000040c6b2 : movzx eax, ax ; pop rbp ; ret
0x000000000040baee : movzx eax, bh ; pop rbp ; ret
0x000000000040baed : movzx eax, dil ; pop rbp ; ret
0x00000000004035fe : mul dword ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x0000000000401c06 : mul dword ptr [rax] ; add byte ptr [rcx], al ; ret
0x00000000004035ff : mul dword ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x0000000000401c05 : mul dword ptr cs:[rax] ; add byte ptr [rcx], al ; ret
0x000000000040cc48 : nop dword ptr [rax + rax] ; ret
0x0000000000403540 : or al, 0x28 ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040816f : or al, 0xffffffffffffffc5 ; cwde ; fld dword ptr [rax] ; jmp rcx
0x00000000004052be : or al, ch ; cld ; ret
0x00000000004052f1 : or al, ch ; leave ; ret
0x0000000000404ace : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000404acf : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000406c59 : or byte ptr [rax - 0x75], cl ; push rbp ; clc ; mov rdi, qword ptr [rdx + 0x10] ; call rax
0x0000000000405f2f : or byte ptr [rax - 0x77], cl ; clc ; pop rbp ; ret
0x0000000000407f81 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405991 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040c54b : or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x000000000040c5c1 : or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000040c54a : or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x000000000040e4c1 : out -1, eax ; call rsp
0x000000000040baeb : out 1, eax ; movzx eax, dil ; pop rbp ; ret
0x0000000000405f2e : out 8, eax ; mov rax, rdi ; pop rbp ; ret
0x000000000040c5c0 : out dx, eax ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000409cd9 : outsb dx, byte ptr [rsi] ; ret 0x280f
0x000000000040cc3c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040cc3e : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040862e : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040cc40 : pop r14 ; pop r15 ; ret
0x0000000000408630 : pop r15 ; pop rbp ; ret
0x000000000040cc42 : pop r15 ; ret
0x0000000000401c02 : pop rbp ; mov byte ptr [rip + 0x20f72e], 1 ; ret
0x0000000000401ba1 : pop rbp ; mov edi, 0x6112e0 ; jmp rax
0x0000000000401bde : pop rbp ; mov rsi, rax ; mov edi, 0x6112e0 ; jmp rdx
0x000000000040cc3b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040cc3f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401b95 : pop rbp ; ret
0x000000000040862d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004050ba : pop rbx ; pop rbp ; ret
0x0000000000408631 : pop rdi ; pop rbp ; ret
0x000000000040cc43 : pop rdi ; ret
0x000000000040862f : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040cc41 : pop rsi ; pop r15 ; ret
0x000000000040cc3d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000409cf0 : pop rsp ; ret 0xf66
0x000000000040322a : push rax ; pop rbp ; ret
0x00000000004053b4 : push rbp ; call 0xffffffffe08ddd0a
0x0000000000406c5c : push rbp ; clc ; mov rdi, qword ptr [rdx + 0x10] ; call rax
0x0000000000404ad2 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000407578 : push rbp ; mov ah, -0x7f ; ret 1
0x0000000000407597 : push rbp ; mov ah, -0x7f ; ret 2
0x00000000004075b6 : push rbp ; mov ah, -0x7f ; ret 3
0x00000000004075d5 : push rbp ; mov ah, -0x7f ; ret 4
0x00000000004075f4 : push rbp ; mov ah, -0x7f ; ret 5
0x0000000000407613 : push rbp ; mov ah, -0x7f ; ret 6
0x0000000000407632 : push rbp ; mov ah, -0x7f ; ret 7
0x00000000004078e0 : push rbp ; mov al, -0x7f ; ret 1
0x00000000004078ff : push rbp ; mov al, -0x7f ; ret 2
0x000000000040791e : push rbp ; mov al, -0x7f ; ret 3
0x000000000040793d : push rbp ; mov al, -0x7f ; ret 4
0x000000000040795c : push rbp ; mov al, -0x7f ; ret 5
0x000000000040797b : push rbp ; mov al, -0x7f ; ret 6
0x000000000040799a : push rbp ; mov al, -0x7f ; ret 7
0x0000000000401c24 : push rbp ; mov edi, 0x610e20 ; mov rbp, rsp ; call rax
0x000000000040bd0d : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000040519e : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000040e340 : pushfq ; mov dh, -1 ; call rsp
0x000000000040c5be : rcl ebx, -0x11 ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000040c5ee : rcl ebx, -0x19 ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x00000000004004b0 : ret
0x000000000040b36c : ret 0
0x0000000000404aeb : ret 0x1fe8
0x00000000004019f2 : ret 0x20f7
0x00000000004017f2 : ret 0x20f8
0x000000000040996a : ret 0x27
0x0000000000409cda : ret 0x280f
0x00000000004067c4 : ret 0x56e8
0x00000000004028ea : ret 0x6b
0x000000000040a5e3 : ret 0x8348
0x0000000000408129 : ret 0x8844
0x0000000000408ba2 : ret 0x8948
0x0000000000404bfd : ret 0x89a5
0x0000000000404ad6 : ret 0x8b48
0x0000000000403096 : ret 0x9588
0x0000000000402187 : ret 0xb0
0x000000000040a666 : ret 0xb948
0x0000000000401bc5 : ret 0xc148
0x0000000000405c63 : ret 0xd284
0x00000000004050ec : ret 0xee8
0x0000000000409cf1 : ret 0xf66
0x000000000040b030 : ret 0xff3
0x000000000040bd1a : ret 0xff5c
0x0000000000409cca : ret 0xff7c
0x00000000004053e5 : ret 0xffff
0x0000000000402d9c : ret 1
0x000000000040759a : ret 2
0x00000000004075b9 : ret 3
0x0000000000406f9a : ret 4
0x00000000004075f7 : ret 5
0x0000000000407616 : ret 6
0x0000000000407635 : ret 7
0x00000000004051a2 : ret 8
0x0000000000409cc4 : rol byte ptr [r8 + rcx*4 - 0x40], -0x18 ; ret 0xff7c
0x0000000000409cc5 : rol byte ptr [rax + rcx*4 - 0x40], -0x18 ; ret 0xff7c
0x000000000040744d : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040876b : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x00000000004041c0 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x40422b ; ret
0x0000000000401bcc : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401bdb ; pop rbp ; ret
0x0000000000407499 : ror byte ptr [rax - 0x75], 1 ; jne 0x407477 ; mov rax, qword ptr [rsi] ; pop rbp ; ret
0x000000000040876c : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x00000000004041c1 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x40422a ; ret
0x000000000040ad9d : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x000000000040bd0e : ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000040519f : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x00000000004075b0 : ror dword ptr [rax - 0x77], 0x4d ; loopne 0x40754a ; push rbp ; mov ah, -0x7f ; ret 3
0x0000000000407918 : ror dword ptr [rax - 0x77], 0x4d ; loopne 0x4078b2 ; push rbp ; mov al, -0x7f ; ret 3
0x0000000000401bce : sar eax, 1 ; jne 0x401bd9 ; pop rbp ; ret
0x0000000000401bcd : sar rax, 1 ; jne 0x401bda ; pop rbp ; ret
0x000000000040fa08 : sbb al, 0 ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], dl ; ret 0xffff
0x000000000040e47d : sbb al, byte ptr [rax] ; add ah, bl ; loope 0x40e488 ; call rsp
0x000000000040e3d5 : sbb byte ptr [rax], al ; add ah, bl ; ret 0xffff
0x000000000040e3fd : sbb byte ptr [rax], al ; add byte ptr [rsi + rax*8 - 1], bl ; call rsp
0x000000000040e43d : sbb dword ptr [rax], eax ; add byte ptr [rbp + rdx*8 - 1], cl ; call rsp
0x000000000040653a : sete al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040653c : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000409d0f : shl dword ptr [rsi + 0xf], 0x5c ; ret 0xf66
0x0000000000405f2d : shl edi, 8 ; mov rax, rdi ; pop rbp ; ret
0x000000000040c5ef : shl edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000040c588 : shl edx, cl ; or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x0000000000405f2c : shl rdi, 8 ; mov rax, rdi ; pop rbp ; ret
0x000000000040c5bf : shr edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000040c548 : shr edx, cl ; or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x000000000040c7a8 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040cc91 : sub esp, 8 ; add rsp, 8 ; ret
0x000000000040cc90 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040f711 : test al, -1 ; call rbx
0x000000000040f731 : test al, -1 ; call rsp
0x000000000040cc4a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040e201 : test edi, edi ; call rsp
0x0000000000403095 : xchg eax, ebp ; ret 0x9588
0x0000000000405c62 : xchg eax, esp ; ret 0xd284
0x000000000040653b : xchg eax, esp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000040c54c : xlatb ; mov rax, rdi ; pop rbp ; ret
0x000000000040c11e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000404036 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
