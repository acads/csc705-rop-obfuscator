0x0000000000404079 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407c93 : add ah, ah ; add eax, dword ptr [rax] ; add al, bl ; ret 0xffff
0x0000000000408293 : add ah, ah ; or dword ptr [rax], eax ; add al, ch ; fdiv st(7), st(0) ; jmp rax
0x0000000000402802 : add al, 0x25 ; enter 0x6092, 0 ; pop rbp ; ret
0x0000000000407cb4 : add al, 4 ; add byte ptr [rax], al ; cwde ; ret
0x00000000004075a3 : add al, al ; mov cl, -1 ; jmp qword ptr [rax]
0x0000000000407c97 : add al, bl ; ret 0xffff
0x0000000000408297 : add al, ch ; fdiv st(7), st(0) ; jmp rax
0x00000000004076a3 : add al, dh ; sar bh, 1 ; jmp qword ptr [rax]
0x0000000000407763 : add al, dl ; loopne 0x40776a ; jmp qword ptr [rax]
0x00000000004066af : add bl, dh ; ret
0x0000000000407760 : add byte ptr [rax + rax], cl ; add al, dl ; loopne 0x40776d ; jmp qword ptr [rax]
0x00000000004050c8 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x00000000004077a3 : add byte ptr [rax], ah ; in al, -1 ; jmp qword ptr [rax]
0x0000000000407c91 : add byte ptr [rax], al ; add ah, ah ; add eax, dword ptr [rax] ; add al, bl ; ret 0xffff
0x0000000000407cb2 : add byte ptr [rax], al ; add al, 4 ; add byte ptr [rax], al ; cwde ; ret
0x00000000004066ad : add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004066ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000400618 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000040061a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000004066ac : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040061c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000040494e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000407cb1 : add byte ptr [rax], al ; add byte ptr [rsp + rax], al ; add byte ptr [rax], al ; cwde ; ret
0x000000000040403a : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403de0 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401333 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000408296 : add byte ptr [rax], al ; call 0xffffffffe140827e
0x0000000000407cb6 : add byte ptr [rax], al ; cwde ; ret
0x0000000000408292 : add byte ptr [rax], al ; in al, 9 ; add byte ptr [rax], al ; call 0xffffffffe1408282
0x0000000000401549 : add byte ptr [rax], al ; jmp 0x401349
0x000000000040856a : add byte ptr [rax], al ; mov esp, 0x7000000c ; loope 0x40857b ; call qword ptr [rax]
0x0000000000402c22 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004075e2 : add byte ptr [rax], al ; mov sil, -1 ; jmp qword ptr [rax]
0x00000000004075d2 : add byte ptr [rax], al ; nop ; mov ah, -1 ; jmp rax
0x0000000000407622 : add byte ptr [rax], al ; or al, 0xff ; jmp qword ptr [rax]
0x0000000000401e8b : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000404f8b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403da8 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004066ae : add byte ptr [rax], al ; ret
0x000000000040061e : add byte ptr [rax], al ; ret 0
0x00000000004076e3 : add byte ptr [rax], al ; sar edi, cl ; jmp qword ptr [rax]
0x0000000000404f8c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000403da9 : add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004017e8 : add byte ptr [rcx], al ; ret
0x0000000000407620 : add byte ptr [rdi], al ; add byte ptr [rax], al ; or al, 0xff ; jmp qword ptr [rax]
0x0000000000404950 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004075e0 : add byte ptr [rsi], al ; add byte ptr [rax], al ; mov sil, -1 ; jmp qword ptr [rax]
0x0000000000407cb3 : add byte ptr [rsp + rax], al ; add byte ptr [rax], al ; cwde ; ret
0x0000000000404038 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404f8a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000403da7 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004027bc : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000402294 : add dword ptr [rdi], ecx ; xchg eax, ebp ; ret 0xe280
0x00000000004017e4 : add eax, 0x207ace ; add ebx, esi ; ret
0x0000000000407c95 : add eax, dword ptr [rax] ; add al, bl ; ret 0xffff
0x00000000004017ab : add eax, edx ; sar rax, 1 ; jne 0x4017bc ; pop rbp ; ret
0x00000000004017e9 : add ebx, esi ; ret
0x000000000040197b : add esp, 0x10 ; pop rbp ; ret
0x0000000000405f6c : add esp, 0x130 ; pop rbp ; ret
0x0000000000403da4 : add esp, 0x138 ; pop rbx ; pop rbp ; ret
0x0000000000401e87 : add esp, 0x140 ; pop rbp ; ret
0x000000000040527c : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000402500 : add esp, 0x1c0 ; pop rbp ; ret
0x00000000004026eb : add esp, 0x20 ; pop rbp ; ret
0x0000000000401a5d : add esp, 0x30 ; pop rbp ; ret
0x000000000040264e : add esp, 0x40 ; pop rbp ; ret
0x000000000040441c : add esp, 0x50 ; pop rbp ; ret
0x0000000000402eb3 : add esp, 0x70 ; pop rbp ; ret
0x0000000000403f5e : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040432d : add esp, 0x90 ; pop rbp ; ret
0x00000000004049d8 : add esp, 0xa0 ; pop rbp ; ret
0x0000000000402088 : add esp, 0xe0 ; pop rbp ; ret
0x0000000000401336 : add esp, 8 ; ret
0x00000000004017aa : add rax, rdx ; sar rax, 1 ; jne 0x4017bd ; pop rbp ; ret
0x000000000040197a : add rsp, 0x10 ; pop rbp ; ret
0x0000000000405f6b : add rsp, 0x130 ; pop rbp ; ret
0x0000000000403da3 : add rsp, 0x138 ; pop rbx ; pop rbp ; ret
0x0000000000401e86 : add rsp, 0x140 ; pop rbp ; ret
0x000000000040527b : add rsp, 0x1a0 ; pop rbp ; ret
0x00000000004024ff : add rsp, 0x1c0 ; pop rbp ; ret
0x00000000004026ea : add rsp, 0x20 ; pop rbp ; ret
0x0000000000401a5c : add rsp, 0x30 ; pop rbp ; ret
0x000000000040264d : add rsp, 0x40 ; pop rbp ; ret
0x000000000040441b : add rsp, 0x50 ; pop rbp ; ret
0x0000000000402eb2 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000403f5d : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040432c : add rsp, 0x90 ; pop rbp ; ret
0x00000000004049d7 : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000402087 : add rsp, 0xe0 ; pop rbp ; ret
0x0000000000401335 : add rsp, 8 ; ret
0x00000000004027bb : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004017e7 : and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000404367 : and eax, 0x48fffffd ; add esp, 0x20 ; pop rbp ; ret
0x00000000004027df : and eax, 0x6092c0 ; pop rbp ; ret
0x0000000000402803 : and eax, 0x6092c8 ; pop rbp ; ret
0x0000000000405449 : call 0x27639
0x00000000004052fc : call 0x401552
0x0000000000405370 : call 0x401602
0x000000000040544a : call 0x401672
0x0000000000408298 : call 0xffffffffe140827c
0x0000000000403dd9 : call 0xffffffffe902c729
0x0000000000403dd8 : call 0xffffffffe902c72a
0x0000000000406689 : call qword ptr [r12 + rbx*8]
0x0000000000408573 : call qword ptr [rax]
0x00000000004078fb : call qword ptr [rbx]
0x0000000000407a9b : call qword ptr [rsi]
0x000000000040668a : call qword ptr [rsp + rbx*8]
0x000000000040180d : call rax
0x0000000000407c9b : call rdx
0x0000000000401efa : clc ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405f6a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x0000000000401e85 : clc ; add rsp, 0x140 ; pop rbp ; ret
0x000000000040547f : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404961 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004049d6 : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x000000000040536f : clc ; call 0x401603
0x00000000004017af : clc ; jne 0x4017b8 ; pop rbp ; ret
0x0000000000402d65 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004065db : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040536b : clc ; mov rdi, qword ptr [rbp - 8] ; call 0x401607
0x00000000004065de : clc ; pop rbp ; ret
0x00000000004060b6 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040593b : cld ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405880 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004065d8 : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004060b3 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406056 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040587d : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403da6 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040176d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401780 ; pop rbp ; ret
0x0000000000404acc : cwde ; mov rcx, qword ptr [rax*8 + 0x407178] ; jmp rcx
0x0000000000407cb8 : cwde ; ret
0x0000000000402408 : dec dword ptr [rax - 0x77] ; ret 0xffe8
0x0000000000405ecf : dec dword ptr [rax - 0x7f] ; ret 1
0x0000000000403e8b : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000402804 : enter 0x6092, 0 ; pop rbp ; ret
0x0000000000408299 : fdiv st(7), st(0) ; jmp rax
0x00000000004037c3 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040668c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000401979 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401780 : hlt ; pop rbp ; mov edi, 0x609280 ; jmp rax
0x00000000004077a5 : in al, -1 ; jmp qword ptr [rax]
0x0000000000408294 : in al, 9 ; add byte ptr [rax], al ; call 0xffffffffe1408280
0x000000000040775f : inc dword ptr [rax] ; or al, 0 ; add al, dl ; loopne 0x40776e ; jmp qword ptr [rax]
0x00000000004076df : inc dword ptr [rax] ; or al, byte ptr [rax] ; add byte ptr [rax], al ; sar edi, cl ; jmp qword ptr [rax]
0x000000000040769f : inc dword ptr [rax] ; or dword ptr [rax], eax ; add al, dh ; sar bh, 1 ; jmp qword ptr [rax]
0x00000000004050d0 : int 0x80
0x0000000000401773 : ja 0x40177a ; pop rbp ; ret
0x000000000040177f : je 0x40177d ; pop rbp ; mov edi, 0x609280 ; jmp rax
0x000000000040536e : jge 0x40536c ; call 0x401604
0x000000000040536a : jge 0x40536c ; mov rdi, qword ptr [rbp - 8] ; call 0x401608
0x0000000000405444 : jge 0x40543e ; mov rsi, qword ptr [rbp - 0x18] ; call 0x401678
0x000000000040154b : jmp 0x401347
0x0000000000407567 : jmp qword ptr [rax]
0x00000000004079db : jmp qword ptr [rdi]
0x0000000000407d1b : jmp qword ptr [rdx]
0x0000000000401787 : jmp rax
0x0000000000402f6e : jmp rcx
0x0000000000402b7d : jmp rdi
0x00000000004017c7 : jmp rdx
0x00000000004017b0 : jne 0x4017b7 ; pop rbp ; ret
0x0000000000405448 : jne 0x405436 ; call 0x401674
0x0000000000401331 : jnp 0x40133d ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000402eb5 : jo 0x402f16 ; ret
0x00000000004045c4 : jo 0x404625 ; ret
0x00000000004046fe : jo 0x40475f ; ret
0x00000000004017e6 : jp 0x40180d ; add byte ptr [rcx], al ; ret
0x0000000000403f60 : js 0x403fc0 ; pop rbp ; ret
0x0000000000407795 : loop 0x407798 ; jmp rax
0x0000000000408571 : loope 0x408574 ; call qword ptr [rax]
0x00000000004085a1 : loope 0x4085a4 ; call qword ptr [rax]
0x000000000040208a : loopne 0x402091 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000407755 : loopne 0x407758 ; jmp rax
0x0000000000407765 : loopne 0x407768 ; jmp qword ptr [rax]
0x00000000004075d5 : mov ah, -1 ; jmp rax
0x000000000040449b : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040432b : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x00000000004027b8 : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000406206 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000402801 : mov byte ptr [0x6092c8], al ; pop rbp ; ret
0x00000000004017e3 : mov byte ptr [rip + 0x207ace], 1 ; ret
0x00000000004075a5 : mov cl, -1 ; jmp qword ptr [rax]
0x00000000004027be : mov dh, -0x40 ; pop rbp ; ret
0x00000000004075e5 : mov dh, -1 ; jmp qword ptr [rax]
0x00000000004027dd : mov dword ptr [0x6092c0], edi ; pop rbp ; ret
0x0000000000402d66 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000402c74 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000402d28 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000401a59 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401977 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004065d9 : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000405369 : mov dword ptr [rbp - 8], edi ; mov rdi, qword ptr [rbp - 8] ; call 0x401609
0x0000000000402dde : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403f5c : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000402c28 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000402732 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004026e7 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402c25 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004029af : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405633 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402bdd : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402c6e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000402d2a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000402eaf : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000403f5a : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000404499 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004060b4 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405939 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040587e : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401ef8 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040547d : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040495f : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004065dc : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040180b : mov ebp, esp ; call rax
0x0000000000401771 : mov ebp, esp ; ja 0x40177c ; pop rbp ; ret
0x0000000000402f67 : mov ecx, dword ptr [rax*8 + 0x406c70] ; jmp rcx
0x0000000000403247 : mov ecx, dword ptr [rax*8 + 0x406cb8] ; jmp rcx
0x0000000000404ace : mov ecx, dword ptr [rax*8 + 0x407178] ; jmp rcx
0x0000000000402c71 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401805 : mov edi, 0x608e20 ; mov rbp, rsp ; call rax
0x0000000000401782 : mov edi, 0x609280 ; jmp rax
0x00000000004017c2 : mov edi, 0x609280 ; jmp rdx
0x0000000000405443 : mov edi, dword ptr [rbp - 0x10] ; mov rsi, qword ptr [rbp - 0x18] ; call 0x401679
0x000000000040536d : mov edi, dword ptr [rbp - 8] ; call 0x401605
0x00000000004052fa : mov edi, eax ; call 0x401554
0x0000000000406687 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000406686 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000405447 : mov esi, dword ptr [rbp - 0x18] ; call 0x401675
0x00000000004017c0 : mov esi, eax ; mov edi, 0x609280 ; jmp rdx
0x000000000040856c : mov esp, 0x7000000c ; loope 0x408579 ; call qword ptr [rax]
0x0000000000401807 : mov fs, word ptr [rax] ; mov rbp, rsp ; call rax
0x00000000004027dc : mov qword ptr [0x6092c0], rdi ; pop rbp ; ret
0x0000000000402ddd : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040449a : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000403f5b : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000402731 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004026e6 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402c24 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004029ae : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405632 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402bdc : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402eae : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000404498 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401ef7 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040547c : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040495e : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040180a : mov rbp, rsp ; call rax
0x0000000000401770 : mov rbp, rsp ; ja 0x40177d ; pop rbp ; ret
0x0000000000402f66 : mov rcx, qword ptr [rax*8 + 0x406c70] ; jmp rcx
0x0000000000403246 : mov rcx, qword ptr [rax*8 + 0x406cb8] ; jmp rcx
0x0000000000404acd : mov rcx, qword ptr [rax*8 + 0x407178] ; jmp rcx
0x000000000040536c : mov rdi, qword ptr [rbp - 8] ; call 0x401606
0x00000000004052f9 : mov rdi, rax ; call 0x401555
0x0000000000405446 : mov rsi, qword ptr [rbp - 0x18] ; call 0x401676
0x00000000004017bf : mov rsi, rax ; mov edi, 0x609280 ; jmp rdx
0x00000000004075e4 : mov sil, -1 ; jmp qword ptr [rax]
0x00000000004027bd : movzx eax, al ; pop rbp ; ret
0x00000000004075d4 : nop ; mov ah, -1 ; jmp rax
0x00000000004066a8 : nop dword ptr [rax + rax] ; ret
0x0000000000407761 : or al, 0 ; add al, dl ; loopne 0x40776c ; jmp qword ptr [rax]
0x0000000000407624 : or al, 0xff ; jmp qword ptr [rax]
0x00000000004076e1 : or al, byte ptr [rax] ; add byte ptr [rax], al ; sar edi, cl ; jmp qword ptr [rax]
0x00000000004037be : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x00000000004037bf : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000408295 : or dword ptr [rax], eax ; add al, ch ; fdiv st(7), st(0) ; jmp rax
0x00000000004076a1 : or dword ptr [rax], eax ; add al, dh ; sar bh, 1 ; jmp qword ptr [rax]
0x0000000000404681 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040669c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040669e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000404f8e : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004066a0 : pop r14 ; pop r15 ; ret
0x0000000000404f90 : pop r15 ; pop rbp ; ret
0x00000000004066a2 : pop r15 ; ret
0x00000000004017e2 : pop rbp ; mov byte ptr [rip + 0x207ace], 1 ; ret
0x0000000000401781 : pop rbp ; mov edi, 0x609280 ; jmp rax
0x00000000004017be : pop rbp ; mov rsi, rax ; mov edi, 0x609280 ; jmp rdx
0x000000000040669b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040669f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401775 : pop rbp ; ret
0x0000000000404f8d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403daa : pop rbx ; pop rbp ; ret
0x0000000000404f91 : pop rdi ; pop rbp ; ret
0x00000000004066a3 : pop rdi ; ret
0x0000000000404f8f : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004066a1 : pop rsi ; pop r15 ; ret
0x000000000040669d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040441e : push rax ; pop rbp ; ret
0x00000000004037c2 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000401804 : push rbp ; mov edi, 0x608e20 ; mov rbp, rsp ; call rax
0x0000000000405b5d : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x0000000000403e8e : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000400288 : ret
0x0000000000400620 : ret 0
0x0000000000401552 : ret 0x207b
0x0000000000401342 : ret 0x207c
0x0000000000401afa : ret 0x4b
0x00000000004037db : ret 0x6fe8
0x000000000040204a : ret 0x70e8
0x0000000000404a89 : ret 0x8844
0x0000000000405502 : ret 0x8948
0x00000000004038ed : ret 0x89a5
0x00000000004037c6 : ret 0x8b48
0x0000000000401c42 : ret 0xb0
0x00000000004017a5 : ret 0xc148
0x0000000000404953 : ret 0xd284
0x0000000000402297 : ret 0xe280
0x0000000000403ddc : ret 0xee8
0x000000000040240b : ret 0xffe8
0x00000000004052fe : ret 0xffff
0x0000000000402777 : ret 1
0x0000000000403e92 : ret 8
0x00000000004075d0 : rol byte ptr [rip - 0x4b700000], -1 ; jmp rax
0x00000000004050cb : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000402eb0 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x402f1b ; ret
0x00000000004017ac : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4017bb ; pop rbp ; ret
0x00000000004050cc : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000402eb1 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x402f1a ; ret
0x0000000000405b5e : ror byte ptr [rax - 0x7f], 1 ; ret 1
0x0000000000403e8f : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x00000000004077d0 : ror byte ptr [rip - 0x13500000], -1 ; jmp rax
0x00000000004076a5 : sar bh, 1 ; jmp qword ptr [rax]
0x0000000000407695 : sar bh, 1 ; jmp rax
0x00000000004076d5 : sar bh, cl ; jmp rax
0x00000000004017ae : sar eax, 1 ; jne 0x4017b9 ; pop rbp ; ret
0x00000000004076e5 : sar edi, cl ; jmp qword ptr [rax]
0x00000000004017ad : sar rax, 1 ; jne 0x4017ba ; pop rbp ; ret
0x0000000000407cb0 : sbb al, 0 ; add byte ptr [rax], al ; add al, 4 ; add byte ptr [rax], al ; cwde ; ret
0x0000000000406208 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000406711 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000406710 : sub rsp, 8 ; add rsp, 8 ; ret
0x00000000004066aa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000402296 : xchg eax, ebp ; ret 0xe280
0x0000000000404952 : xchg eax, esp ; ret 0xd284
0x0000000000405f6e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000402d26 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
