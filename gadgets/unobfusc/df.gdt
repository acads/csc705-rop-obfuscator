0x00000000004199d8 : adc al, 0x48 ; add esp, 0x10 ; pop rbp ; ret
0x0000000000412585 : adc al, 1 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404958 : adc bh, cl ; add r8b, bpl ; call rbx
0x000000000041ea74 : adc byte ptr [rcx - 2], bh ; jmp rax
0x000000000041080b : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004199bc : adc dh, dh ; ret 0xf01
0x000000000040545a : adc dword ptr [rax + 0x29], ecx ; ret 0x8948
0x00000000004053f2 : adc dword ptr [rax + 1], ecx ; ret 0x8948
0x000000000041c063 : adc dword ptr [rax - 0x7f], ecx ; ret 1
0x000000000040d799 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041ec29 : adc eax, dword ptr [rax] ; add byte ptr [rax], dl ; ret 0xfffe
0x000000000041feb3 : add ah, ah ; or al, 0 ; add al, bl ; ret
0x000000000041f693 : add ah, al ; add al, 0 ; add byte ptr [rax], cl ; jnp 0x41f6a1 ; call qword ptr [rsi]
0x00000000004212bb : add ah, ch ; and byte ptr [rax], al ; add byte ptr [rax], dh ; mov cl, -1 ; call qword ptr [rax]
0x0000000000404e44 : add al, -0x2a ; pop rbp ; ret
0x000000000041f695 : add al, 0 ; add byte ptr [rax], cl ; jnp 0x41f69f ; call qword ptr [rsi]
0x0000000000404a9b : add al, 0 ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004209d4 : add al, 0x18 ; add byte ptr [rax], al ; cwde ; or al, 0xffffffffffffffff ; jmp qword ptr [rdi]
0x00000000004021c6 : add al, 0x22 ; add byte ptr [rcx], al ; ret
0x0000000000407b6a : add al, 0x48 ; add eax, ecx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041f7d4 : add al, 6 ; add byte ptr [rax], al ; jg 0x41f7e0 ; call qword ptr [rdx]
0x000000000041f133 : add al, ah ; mov cl, -1 ; jmp rax
0x000000000041ee03 : add al, al ; or bh, bh ; jmp qword ptr [rax]
0x000000000041feb7 : add al, bl ; ret
0x000000000041bb04 : add al, byte ptr [rax] ; add byte ptr [rcx - 0xdf43], al ; call qword ptr [rax]
0x000000000040495b : add al, ch ; call rbx
0x0000000000402c38 : add al, ch ; ret
0x0000000000414978 : add al, ch ; ret 0xfed2
0x0000000000405db8 : add al, ch ; ret 0xffbd
0x000000000041eef3 : add al, dl ; and al, 0xffffffffffffffff ; jmp rax
0x000000000041e8af : add bl, al ; mov ebx, 0x41 ; add byte ptr [rax], al ; ret
0x000000000041c39f : add bl, dh ; ret
0x0000000000405db5 : add byte ptr [r8], r8b ; add al, ch ; ret 0xffbd
0x0000000000402ede : add byte ptr [rax + 0x63], cl ; ret 0x8b48
0x0000000000413243 : add byte ptr [rax + 1], cl ; ret 0x4a3b
0x00000000004061a5 : add byte ptr [rax + 1], cl ; ret 0x8b48
0x00000000004209d3 : add byte ptr [rax + rbx], al ; add byte ptr [rax], al ; cwde ; or al, 0xffffffffffffffff ; jmp qword ptr [rdi]
0x00000000004191df : add byte ptr [rax - 0x75], cl ; clc ; mov rsp, rbp ; pop rbp ; ret
0x0000000000404dbf : add byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x0000000000405afd : add byte ptr [rax - 0x75], cl ; jge 0x405b01 ; call 0x401dc7
0x0000000000419b75 : add byte ptr [rax - 0x75], cl ; loopne 0x419bde ; ret
0x000000000041a899 : add byte ptr [rax - 0x75], cl ; push rbp ; call 0x210429f1
0x000000000040ef28 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000404e41 : add byte ptr [rax - 0x77], cl ; add al, -0x2a ; pop rbp ; ret
0x000000000041b1b6 : add byte ptr [rax - 0x77], cl ; fsubr st(1) ; ret 0xffff
0x0000000000416b4c : add byte ptr [rax - 0x77], cl ; ret 0x2be8
0x000000000040328d : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x0000000000416bc5 : add byte ptr [rax - 0x77], cl ; ret 0xb2e8
0x000000000041eac3 : add byte ptr [rax], ah ; mov esi, dr1 ; jmp qword ptr [rax]
0x000000000041edf3 : add byte ptr [rax], ah ; or bh, bh ; jmp rax
0x000000000041eec3 : add byte ptr [rax], ah ; sbb al, -1 ; jmp qword ptr [rax]
0x000000000041ea72 : add byte ptr [rax], al ; adc byte ptr [rcx - 2], bh ; jmp rax
0x000000000041feb1 : add byte ptr [rax], al ; add ah, ah ; or al, 0 ; add al, bl ; ret
0x00000000004209d2 : add byte ptr [rax], al ; add al, 0x18 ; add byte ptr [rax], al ; cwde ; or al, 0xffffffffffffffff ; jmp qword ptr [rdi]
0x000000000041f7d2 : add byte ptr [rax], al ; add al, 6 ; add byte ptr [rax], al ; jg 0x41f7e2 ; call qword ptr [rdx]
0x0000000000403675 : add byte ptr [rax], al ; add al, ch ; ret
0x0000000000405db6 : add byte ptr [rax], al ; add al, ch ; ret 0xffbd
0x000000000041c39d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000413241 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x4a3b
0x00000000004061a3 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8b48
0x0000000000404dbd : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x0000000000405afb : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jge 0x405b03 ; call 0x401dc9
0x0000000000419b73 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; loopne 0x419be0 ; ret
0x000000000041a897 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbp ; call 0x210429f3
0x000000000041b1b4 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fsubr st(1) ; ret 0xffff
0x000000000040328b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x0000000000403673 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret
0x000000000041c39b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000403671 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret
0x0000000000400bf2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004105f8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004084dd : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004198b1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040fee9 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040acc6 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000419b72 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x20] ; pop rbp ; ret
0x0000000000404dbc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000400bf4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000041da24 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x40c7
0x0000000000405a26 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x0000000000403dc4 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0xf45
0x000000000041bc95 : add byte ptr [rax], al ; add byte ptr [rcx - 0xdf43], al ; call qword ptr [rax]
0x000000000041087a : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ror dword ptr [rdi], -0x62 ; ret 0x9588
0x0000000000409a33 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000403da6 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b48
0x0000000000419902 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004076fd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf280
0x0000000000410d1c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x00000000004189d7 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x000000000040e06e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041e9b2 : add byte ptr [rax], al ; add byte ptr [rdx - 2], cl ; jmp rax
0x0000000000403d36 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405207 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407698 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401b13 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000041f4f2 : add byte ptr [rax], al ; and al, 3 ; add byte ptr [rax], al ; sbb byte ptr [rbp - 2], bl ; jmp rsp
0x000000000041f7f2 : add byte ptr [rax], al ; and al, 6 ; add byte ptr [rax], al ; jg 0x41f802 ; call qword ptr [rdx]
0x000000000041eec2 : add byte ptr [rax], al ; and byte ptr [rdi + rdi*8], bl ; jmp qword ptr [rax]
0x000000000041f916 : add byte ptr [rax], al ; call 0xffffffffd541f7a5
0x000000000041e973 : add byte ptr [rax], al ; cmp bh, dh ; jmp rax
0x00000000004202b6 : add byte ptr [rax], al ; cwde ; fdiv st(6), st(0) ; jmp qword ptr [rdx]
0x00000000004209d6 : add byte ptr [rax], al ; cwde ; or al, 0xffffffffffffffff ; jmp qword ptr [rdi]
0x00000000004202b2 : add byte ptr [rax], al ; in al, 0x10 ; add byte ptr [rax], al ; cwde ; fdiv st(6), st(0) ; jmp qword ptr [rdx]
0x00000000004208b2 : add byte ptr [rax], al ; in al, 0x16 ; add byte ptr [rax], al ; pop rax ; or bh, bh ; call qword ptr [rax]
0x00000000004209b2 : add byte ptr [rax], al ; in al, 0x17 ; add byte ptr [rax], al ; mov byte ptr [rdi + rdi*8], cl ; jmp qword ptr [rdi]
0x00000000004212ba : add byte ptr [rax], al ; in al, dx ; and byte ptr [rax], al ; add byte ptr [rax], dh ; mov cl, -1 ; call qword ptr [rax]
0x000000000041f7d6 : add byte ptr [rax], al ; jg 0x41f7de ; call qword ptr [rdx]
0x000000000041f7f6 : add byte ptr [rax], al ; jg 0x41f7fe ; call qword ptr [rdx]
0x000000000041f816 : add byte ptr [rax], al ; jg 0x41f81e ; call qword ptr [rdx]
0x0000000000401b69 : add byte ptr [rax], al ; jmp 0x401b29
0x00000000004117cc : add byte ptr [rax], al ; mov al, sil ; movzx eax, al ; pop rbp ; ret
0x000000000041174d : add byte ptr [rax], al ; mov ax, si ; movzx eax, ax ; pop rbp ; ret
0x00000000004209b6 : add byte ptr [rax], al ; mov byte ptr [rdi + rdi*8], cl ; jmp qword ptr [rdi]
0x000000000042128e : add byte ptr [rax], al ; mov cl, -1 ; call qword ptr [rax]
0x0000000000419cbf : add byte ptr [rax], al ; mov dword ptr [rbp - 4], eax ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040feeb : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000042128a : add byte ptr [rax], al ; mov esp, 0x40000020 ; mov cl, -1 ; call qword ptr [rax]
0x000000000040c342 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040acc8 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000419b74 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x20] ; pop rbp ; ret
0x0000000000404dbe : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000405afc : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 8] ; call 0x401dc8
0x0000000000420d72 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; sbb eax, dword ptr [rax] ; add byte ptr [rax], ch ; cmp edi, edi ; jmp rax
0x000000000041ec02 : add byte ptr [rax], al ; nop ; mov al, -2 ; jmp qword ptr [rax]
0x000000000041ee42 : add byte ptr [rax], al ; nop ; or edi, edi ; jmp qword ptr [rax]
0x000000000041f696 : add byte ptr [rax], al ; or byte ptr [rbx - 2], bh ; call qword ptr [rsi]
0x00000000004208b6 : add byte ptr [rax], al ; pop rax ; or bh, bh ; call qword ptr [rax]
0x0000000000403cc1 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040edeb : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000404a9c : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000041ecc2 : add byte ptr [rax], al ; rcr bl, -2 ; jmp qword ptr [rax]
0x0000000000400bf6 : add byte ptr [rax], al ; ret
0x000000000041da26 : add byte ptr [rax], al ; ret 0x40c7
0x000000000041ec32 : add byte ptr [rax], al ; ret 0xfffe
0x000000000041ee02 : add byte ptr [rax], al ; ror byte ptr [rax], -1 ; jmp qword ptr [rax]
0x000000000041f4f6 : add byte ptr [rax], al ; sbb byte ptr [rbp - 2], bl ; jmp rsp
0x000000000041eeb2 : add byte ptr [rax], al ; sbb byte ptr [rbx], -1 ; jmp rax
0x000000000041eef2 : add byte ptr [rax], al ; shl byte ptr [rdi + rdi*8], 1 ; jmp rax
0x000000000041ea32 : add byte ptr [rax], al ; shr byte ptr [rcx - 2], 1 ; jmp rax
0x000000000041f616 : add byte ptr [rax], al ; sub byte ptr [rbx - 2], ch ; call qword ptr [rsi]
0x000000000041ef32 : add byte ptr [rax], al ; sub edi, edi ; jmp rax
0x0000000000420d77 : add byte ptr [rax], ch ; cmp edi, edi ; jmp rax
0x00000000004210f7 : add byte ptr [rax], ch ; mov edi, edi ; call rdi
0x000000000041f697 : add byte ptr [rax], cl ; jnp 0x41f69d ; call qword ptr [rsi]
0x00000000004212bf : add byte ptr [rax], dh ; mov cl, -1 ; call qword ptr [rax]
0x000000000041eaf3 : add byte ptr [rax], dh ; mov dr1, esi ; jmp rax
0x000000000041efb3 : add byte ptr [rax], dh ; xor edi, edi ; jmp rax
0x000000000041ea73 : add byte ptr [rax], dl ; jns 0x41ea79 ; jmp rax
0x000000000041ee33 : add byte ptr [rax], dl ; or edi, edi ; jmp rax
0x000000000041ec2b : add byte ptr [rax], dl ; ret 0xfffe
0x000000000040edec : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000404a9d : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000041f4f3 : add byte ptr [rbx + rax], ah ; add byte ptr [rax], al ; sbb byte ptr [rbp - 2], bl ; jmp rsp
0x00000000004062b3 : add byte ptr [rbx - 0x1874b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000406666 : add byte ptr [rbx - 0x1e34b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000041ee00 : add byte ptr [rbx], bl ; add byte ptr [rax], al ; ror byte ptr [rax], -1 ; jmp qword ptr [rax]
0x000000000041ec00 : add byte ptr [rbx], dl ; add byte ptr [rax], al ; nop ; mov al, -2 ; jmp qword ptr [rax]
0x0000000000419cc0 : add byte ptr [rcx + 0x458bfc45], cl ; cld ; pop rbp ; ret
0x0000000000405a28 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x0000000000403dc6 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0xf45
0x0000000000409a2f : add byte ptr [rcx + 0xfa], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x000000000041bb06 : add byte ptr [rcx - 0xdf43], al ; call qword ptr [rax]
0x000000000040603c : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004021c8 : add byte ptr [rcx], al ; ret
0x000000000041087c : add byte ptr [rcx], bh ; ror dword ptr [rdi], -0x62 ; ret 0x9588
0x0000000000409a35 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000403da8 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b48
0x0000000000419904 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004076ff : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf280
0x0000000000410d1e : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x00000000004189d9 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x000000000040e070 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041e9b4 : add byte ptr [rdx - 2], cl ; jmp rax
0x00000000004079dd : add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x000000000041f7f3 : add byte ptr [rsi + rax], ah ; add byte ptr [rax], al ; jg 0x41f801 ; call qword ptr [rdx]
0x000000000041f7d3 : add byte ptr [rsi + rax], al ; add byte ptr [rax], al ; jg 0x41f7e1 ; call qword ptr [rdx]
0x000000000041eec0 : add byte ptr [rsi], bl ; add byte ptr [rax], al ; and byte ptr [rdi + rdi*8], bl ; jmp qword ptr [rax]
0x000000000041ecc0 : add byte ptr [rsi], dl ; add byte ptr [rax], al ; rcr bl, -2 ; jmp qword ptr [rax]
0x00000000004097dc : add dword ptr [rax + 0xf], eax ; mov dh, -0x39 ; pop rbp ; ret
0x00000000004054a1 : add dword ptr [rax - 0x75], ecx ; clc ; mov qword ptr [rcx], rax ; pop rbp ; ret
0x000000000040d758 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040edea : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000405ad8 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000041bbc0 : add dword ptr [rax], eax ; add byte ptr [rcx - 0xdf43], al ; call qword ptr [rax]
0x000000000040a0d2 : add dword ptr [rbx - 0x73e6bbb], ecx ; add dword ptr [rcx], eax ; ret 0x9589
0x000000000040a0d8 : add dword ptr [rcx], eax ; ret 0x9589
0x0000000000404cb1 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407190 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000407713 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000408a8a : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004136eb : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000405314 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004021c4 : add eax, 0x22048e ; add ebx, esi ; ret
0x0000000000415413 : add eax, 0x8301148b ; ret 0x89ee
0x00000000004178a4 : add eax, 0xe8000000 ; ret
0x0000000000410566 : add eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407b6c : add eax, ecx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040218b : add eax, edx ; sar rax, 1 ; jne 0x40219c ; pop rbp ; ret
0x0000000000413c39 : add eax, esi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x00000000004021c9 : add ebx, esi ; ret
0x00000000004125bb : add edi, eax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x000000000040238b : add esp, 0x10 ; pop rbp ; ret
0x000000000040603a : add esp, 0x100 ; pop rbp ; ret
0x00000000004140b5 : add esp, 0x10e0 ; pop rbp ; ret
0x0000000000410809 : add esp, 0x110 ; pop rbp ; ret
0x0000000000405ad5 : add esp, 0x128 ; pop rbx ; pop rbp ; ret
0x000000000041231c : add esp, 0x130 ; pop rbp ; ret
0x000000000040d4c4 : add esp, 0x138 ; pop rbx ; pop rbp ; ret
0x00000000004070c7 : add esp, 0x160 ; pop rbp ; ret
0x000000000040bf07 : add esp, 0x170 ; pop rbp ; ret
0x00000000004108a2 : add esp, 0x190 ; pop rbp ; ret
0x000000000040f0dc : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000411c7f : add esp, 0x1b0 ; pop rbp ; ret
0x000000000041a83e : add esp, 0x1b8 ; pop rbp ; ret
0x000000000041c31b : add esp, 0x1c0 ; pop rbp ; ret
0x0000000000414b2e : add esp, 0x1e0 ; pop rbp ; ret
0x000000000040a64e : add esp, 0x1e8 ; pop rbx ; pop rbp ; ret
0x0000000000404cb6 : add esp, 0x20 ; pop rbp ; ret
0x0000000000412fbd : add esp, 0x250 ; pop rbp ; ret
0x000000000040250d : add esp, 0x30 ; pop rbp ; ret
0x0000000000403cbd : add esp, 0x320 ; pop rbp ; ret
0x0000000000404c17 : add esp, 0x40 ; pop rbp ; ret
0x0000000000404a98 : add esp, 0x4e8 ; pop rbx ; pop rbp ; ret
0x00000000004035a0 : add esp, 0x50 ; pop rbp ; ret
0x0000000000409127 : add esp, 0x60 ; pop rbp ; ret
0x000000000040c5d3 : add esp, 0x70 ; pop rbp ; ret
0x000000000040d67e : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000408893 : add esp, 0x80 ; pop rbp ; ret
0x000000000040a8a4 : add esp, 0x90 ; pop rbp ; ret
0x000000000040c280 : add esp, 0xa0 ; pop rbp ; ret
0x0000000000405791 : add esp, 0xc0 ; pop rbp ; ret
0x000000000040b161 : add esp, 0xd0 ; pop rbp ; ret
0x000000000040fe7f : add esp, 0xe0 ; pop rbp ; ret
0x000000000040e837 : add esp, 0xf0 ; pop rbp ; ret
0x0000000000401b16 : add esp, 8 ; ret
0x000000000040495a : add r8b, bpl ; call rbx
0x0000000000410565 : add rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407b6b : add rax, rcx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040218a : add rax, rdx ; sar rax, 1 ; jne 0x40219d ; pop rbp ; ret
0x0000000000413c38 : add rax, rsi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x00000000004125ba : add rdi, rax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x000000000040238a : add rsp, 0x10 ; pop rbp ; ret
0x0000000000406039 : add rsp, 0x100 ; pop rbp ; ret
0x00000000004140b4 : add rsp, 0x10e0 ; pop rbp ; ret
0x0000000000410808 : add rsp, 0x110 ; pop rbp ; ret
0x0000000000405ad4 : add rsp, 0x128 ; pop rbx ; pop rbp ; ret
0x000000000041231b : add rsp, 0x130 ; pop rbp ; ret
0x000000000040d4c3 : add rsp, 0x138 ; pop rbx ; pop rbp ; ret
0x00000000004070c6 : add rsp, 0x160 ; pop rbp ; ret
0x000000000040bf06 : add rsp, 0x170 ; pop rbp ; ret
0x00000000004108a1 : add rsp, 0x190 ; pop rbp ; ret
0x000000000040f0db : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000411c7e : add rsp, 0x1b0 ; pop rbp ; ret
0x000000000041a83d : add rsp, 0x1b8 ; pop rbp ; ret
0x000000000041c31a : add rsp, 0x1c0 ; pop rbp ; ret
0x0000000000414b2d : add rsp, 0x1e0 ; pop rbp ; ret
0x000000000040a64d : add rsp, 0x1e8 ; pop rbx ; pop rbp ; ret
0x0000000000404cb5 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000412fbc : add rsp, 0x250 ; pop rbp ; ret
0x000000000040250c : add rsp, 0x30 ; pop rbp ; ret
0x0000000000403cbc : add rsp, 0x320 ; pop rbp ; ret
0x0000000000404c16 : add rsp, 0x40 ; pop rbp ; ret
0x0000000000404a97 : add rsp, 0x4e8 ; pop rbx ; pop rbp ; ret
0x000000000040359f : add rsp, 0x50 ; pop rbp ; ret
0x0000000000409126 : add rsp, 0x60 ; pop rbp ; ret
0x000000000040c5d2 : add rsp, 0x70 ; pop rbp ; ret
0x000000000040d67d : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000408892 : add rsp, 0x80 ; pop rbp ; ret
0x000000000040a8a3 : add rsp, 0x90 ; pop rbp ; ret
0x000000000040c27f : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000405790 : add rsp, 0xc0 ; pop rbp ; ret
0x000000000040b160 : add rsp, 0xd0 ; pop rbp ; ret
0x000000000040fe7e : add rsp, 0xe0 ; pop rbp ; ret
0x000000000040e836 : add rsp, 0xf0 ; pop rbp ; ret
0x0000000000401b15 : add rsp, 8 ; ret
0x000000000041eef5 : and al, 0xffffffffffffffff ; jmp rax
0x00000000004136ea : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000405313 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041f4f4 : and al, 3 ; add byte ptr [rax], al ; sbb byte ptr [rbp - 2], bl ; jmp rsp
0x000000000041f7f4 : and al, 6 ; add byte ptr [rax], al ; jg 0x41f800 ; call qword ptr [rdx]
0x00000000004021c7 : and al, byte ptr [rax] ; add ebx, esi ; ret
0x00000000004097da : and bh, 1 ; movzx eax, dil ; pop rbp ; ret
0x00000000004212bd : and byte ptr [rax], al ; add byte ptr [rax], dh ; mov cl, -1 ; call qword ptr [rax]
0x0000000000403cbf : and byte ptr [rbx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041eec4 : and byte ptr [rdi + rdi*8], bl ; jmp qword ptr [rax]
0x00000000004097d9 : and dil, 1 ; movzx eax, dil ; pop rbp ; ret
0x000000000041efb1 : and dword ptr [rax], eax ; add byte ptr [rax], dh ; xor edi, edi ; jmp rax
0x0000000000405a7b : and eax, 0x41cfd6 ; call 0x401cf7
0x0000000000407f45 : and eax, 0x41d630 ; mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x000000000040da87 : and eax, 0x48fffffd ; add esp, 0x20 ; pop rbp ; ret
0x00000000004071af : and eax, 0x622700 ; pop rbp ; ret
0x00000000004071d3 : and eax, 0x622708 ; pop rbp ; ret
0x000000000041a89d : call 0x210429ed
0x0000000000412e19 : call 0x3af69
0x000000000040631e : call 0x401b89
0x0000000000405a80 : call 0x401cf2
0x0000000000405b02 : call 0x401dc2
0x0000000000405b85 : call 0x401e52
0x0000000000405dee : call 0x402022
0x000000000041c060 : call 0x48534bb3
0x000000000041c05f : call 0x48534bb4
0x000000000040ac84 : call 0x490335d4
0x000000000040ac83 : call 0x490335d5
0x000000000040ac84 : call 0x490335d7
0x000000000040ac83 : call 0x490335d8
0x000000000040b2a5 : call 0x490b3bf8
0x000000000040b2a4 : call 0x490b3bf9
0x000000000041f918 : call 0xffffffffd541f7a3
0x000000000041ba46 : call 0xffffffffe240ba8f
0x000000000041ba45 : call 0xffffffffe240ba90
0x000000000040d4f9 : call 0xffffffffe9035e49
0x000000000040d4f8 : call 0xffffffffe9035e4a
0x0000000000413ac3 : call 0xffffffffe903c413
0x0000000000402163 : call 0xffffffffff408391
0x00000000004021a3 : call 0xffffffffff4083d1
0x0000000000408431 : call 0xffffffffff7a0f82
0x0000000000408430 : call 0xffffffffff7a0f83
0x000000000040856f : call 0xffffffffff7a10c0
0x000000000040856e : call 0xffffffffff7a10c1
0x000000000041c379 : call qword ptr [r12 + rbx*8]
0x0000000000409ab8 : call qword ptr [rax]
0x000000000041bd2c : call qword ptr [rbx]
0x000000000041bc8e : call qword ptr [rcx]
0x000000000041563e : call qword ptr [rdx]
0x000000000041bcc3 : call qword ptr [rsi]
0x000000000041c37a : call qword ptr [rsp + rbx*8]
0x00000000004021ed : call rax
0x000000000040495d : call rbx
0x00000000004206fb : call rdi
0x000000000041fffb : call rdx
0x0000000000406327 : call rsp
0x000000000040a0d7 : clc ; add dword ptr [rcx], eax ; ret 0x9589
0x00000000004096fd : clc ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041231a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x00000000004070c5 : clc ; add rsp, 0x160 ; pop rbp ; ret
0x0000000000405396 : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000412fbb : clc ; add rsp, 0x250 ; pop rbp ; ret
0x0000000000406135 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000407ead : clc ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004052ed : clc ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000409125 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000411107 : clc ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040c27e : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x0000000000409636 : clc ; add rsp, 0xc0 ; pop rbp ; ret
0x0000000000405b01 : clc ; call 0x401dc3
0x000000000040218f : clc ; jne 0x402198 ; pop rbp ; ret
0x000000000040b2ff : clc ; mov byte ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004053a6 : clc ; mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x00000000004199d5 : clc ; mov dword ptr [rax + 0x14], ecx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040c485 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004104bb : clc ; mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x000000000041969b : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004054a5 : clc ; mov qword ptr [rcx], rax ; pop rbp ; ret
0x000000000040966e : clc ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x00000000004066a3 : clc ; mov rax, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000407dcd : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040772b : clc ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040774b : clc ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040776b : clc ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x00000000004035d8 : clc ; mov rcx, qword ptr [rax*8 + 0x41c470] ; jmp rcx
0x00000000004066a7 : clc ; mov rsp, rbp ; pop rbp ; ret
0x0000000000404dc3 : clc ; pop rbp ; ret
0x000000000040fee8 : cld ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004023b7 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004140b3 : cld ; add rsp, 0x10e0 ; pop rbp ; ret
0x0000000000410807 : cld ; add rsp, 0x110 ; pop rbp ; ret
0x000000000041a83c : cld ; add rsp, 0x1b8 ; pop rbp ; ret
0x000000000041c319 : cld ; add rsp, 0x1c0 ; pop rbp ; ret
0x000000000040e2e6 : cld ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004118d0 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040ab52 : cld ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004104a0 : cld ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040b7b3 : cld ; add rsp, 0x80 ; pop rbp ; ret
0x0000000000408f4a : cld ; add rsp, 0xc0 ; pop rbp ; ret
0x000000000040fe7d : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x0000000000419698 : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040e32f : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041468b : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004118cd : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000410f3c : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000419cc3 : cld ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040feef : cld ; pop rbp ; ret
0x000000000040ab88 : cmove ecx, edx ; movsxd rax, ecx ; pop rbp ; ret
0x0000000000406325 : cmp al, 0x25 ; call rsp
0x000000000041e985 : cmp bh, dh ; jmp qword ptr [rax]
0x000000000041e975 : cmp bh, dh ; jmp rax
0x000000000040d4c6 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000407e4a : cmp dword ptr [rax - 0x75], ecx ; jne 0x407e34 ; call rax
0x000000000040214d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x402160 ; pop rbp ; ret
0x0000000000413ce1 : cmp ebx, dword ptr [rax + rax] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000420d79 : cmp edi, edi ; jmp rax
0x00000000004202b8 : cwde ; fdiv st(6), st(0) ; jmp qword ptr [rdx]
0x000000000040e92c : cwde ; mov rcx, qword ptr [rax*8 + 0x41df20] ; jmp rcx
0x00000000004209d8 : cwde ; or al, 0xffffffffffffffff ; jmp qword ptr [rdi]
0x000000000040456f : dec dword ptr [rax + 0x3b] ; xor byte ptr [r15], cl ; xchg eax, edx ; ret 0xe280
0x0000000000409c00 : dec dword ptr [rax + 0x69] ; ret 0xa
0x0000000000406322 : dec dword ptr [rax - 0x73] ; cmp al, 0x25 ; call rsp
0x000000000041ba40 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; call 0xffffffffe240ba95
0x0000000000402804 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; les eax, ptr [rcx] ; jmp rcx
0x0000000000412e15 : dec dword ptr [rax - 0x75] ; push rbp ; call 0x3af6d
0x0000000000410e2d : dec dword ptr [rax - 0x77] ; jge 0x410e30 ; pop rbp ; ret
0x000000000040e4da : dec dword ptr [rax - 0x77] ; ret 0x2de8
0x000000000040e78b : dec dword ptr [rax - 0x77] ; ret 0x7ce8
0x00000000004160cc : dec dword ptr [rax - 0x77] ; ret 0x8148
0x0000000000412e4b : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x00000000004062b9 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040b102 : dec dword ptr [rax - 0x77] ; ret 0xf5e8
0x000000000041227f : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000041b7c2 : dec dword ptr [rcx] ; ret 0x9589
0x0000000000409861 : div dword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x0000000000409860 : div qword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000040d5ab : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000407e47 : enter -0x74b8, 0x39 ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x000000000040b3fd : enter -0x7cb8, -0x3c ; pop rbp ; ret
0x000000000040a76f : faddp st(1) ; fstp xword ptr [rbp - 0x20] ; fld xword ptr [rbp - 0x20] ; pop rbp ; ret
0x00000000004202b9 : fdiv st(6), st(0) ; jmp qword ptr [rdx]
0x000000000040c68b : fiadd dword ptr [rcx] ; jmp rcx
0x000000000040e932 : fild word ptr [rcx] ; jmp rcx
0x000000000040a774 : fld xword ptr [rbp - 0x20] ; pop rbp ; ret
0x000000000040b51c : fmul dword ptr [rax + 0x29] ; ror byte ptr [rax - 0x77], 1 ; ret 0x88e8
0x000000000040cee3 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000041c37c : fmul qword ptr [rax - 0x7d] ; ret
0x000000000040a771 : fstp xword ptr [rbp - 0x20] ; fld xword ptr [rbp - 0x20] ; pop rbp ; ret
0x000000000041b1ba : fsubr st(1) ; ret 0xffff
0x0000000000402389 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041990f : hlt ; mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402160 : hlt ; pop rbp ; mov edi, 0x6225e8 ; jmp rax
0x00000000004202b4 : in al, 0x10 ; add byte ptr [rax], al ; cwde ; fdiv st(6), st(0) ; jmp qword ptr [rdx]
0x00000000004208b4 : in al, 0x16 ; add byte ptr [rax], al ; pop rax ; or bh, bh ; call qword ptr [rax]
0x00000000004209b4 : in al, 0x17 ; add byte ptr [rax], al ; mov byte ptr [rdi + rdi*8], cl ; jmp qword ptr [rdi]
0x000000000040a92e : in al, 0x48 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040ff4d : in al, dx ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004212bc : in al, dx ; and byte ptr [rax], al ; add byte ptr [rax], dh ; mov cl, -1 ; call qword ptr [rax]
0x000000000040e2e3 : in al, dx ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004066aa : in al, dx ; pop rbp ; ret
0x000000000041edff : inc dword ptr [rax] ; sbb eax, dword ptr [rax] ; add al, al ; or bh, bh ; jmp qword ptr [rax]
0x000000000041efaf : inc eax ; and dword ptr [rax], eax ; add byte ptr [rax], dh ; xor edi, edi ; jmp rax
0x000000000041ea6f : inc eax ; or al, 0 ; add byte ptr [rax], dl ; jns 0x41ea7d ; jmp rax
0x000000000041e96f : inc eax ; or byte ptr [rax], al ; add byte ptr [rax], al ; cmp bh, dh ; jmp rax
0x000000000041edef : inc eax ; sbb al, byte ptr [rax] ; add byte ptr [rax], ah ; or bh, bh ; jmp rax
0x000000000041ee2f : inc eax ; sbb eax, dword ptr [rax] ; add byte ptr [rax], dl ; or edi, edi ; jmp rax
0x000000000040a775 : insd dword ptr [rdi], dx ; loopne 0x40a7d8 ; ret
0x000000000040ef30 : int 0x80
0x0000000000404959 : iretd ; add r8b, bpl ; call rbx
0x0000000000402153 : ja 0x40215a ; pop rbp ; ret
0x0000000000409671 : ja 0x4096be ; pop rbp ; ret
0x000000000040215f : je 0x40215d ; pop rbp ; mov edi, 0x6225e8 ; jmp rax
0x000000000041f7d9 : jg 0x41f7db ; call qword ptr [rdx]
0x000000000041f7d8 : jg 0x41f7dc ; call qword ptr [rdx]
0x000000000041f7f9 : jg 0x41f7fb ; call qword ptr [rdx]
0x000000000041f7f8 : jg 0x41f7fc ; call qword ptr [rdx]
0x000000000041f819 : jg 0x41f81b ; call qword ptr [rdx]
0x000000000041f818 : jg 0x41f81c ; call qword ptr [rdx]
0x0000000000405b00 : jge 0x405afe ; call 0x401dc4
0x000000000040772a : jge 0x40772b ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040774a : jge 0x40774b ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040776a : jge 0x40776b ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000407ac0 : jge 0x407ab3 ; mov rcx, qword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000408fd0 : jge 0x408fc3 ; mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040966d : jge 0x40966e ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040a772 : jge 0x40a75a ; fld xword ptr [rbp - 0x20] ; pop rbp ; ret
0x00000000004104ba : jge 0x4104bd ; mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x0000000000410e30 : jge 0x410e2d ; pop rbp ; ret
0x000000000041f739 : jl 0x41f73b ; call rax
0x0000000000401b6b : jmp 0x401b27
0x00000000004091b1 : jmp 0x4091b4
0x00000000004178a3 : jmp 0x4178b3
0x00000000004082d0 : jmp 0x49030c20
0x0000000000408d0e : jmp 0x4903165e
0x0000000000408d7b : jmp 0x490316cb
0x00000000004094b2 : jmp 0x49031e02
0x000000000040951f : jmp 0x49031e6f
0x00000000004034d6 : jmp 0xffffffff8a02bde9
0x0000000000416bef : jmp 0xffffffff8a03f507
0x000000000041e987 : jmp qword ptr [rax]
0x0000000000420c9b : jmp qword ptr [rcx]
0x000000000041fa3b : jmp qword ptr [rdi]
0x000000000042007b : jmp qword ptr [rdx]
0x0000000000402167 : jmp rax
0x000000000040280d : jmp rcx
0x00000000004021a7 : jmp rdx
0x000000000041f4fb : jmp rsp
0x0000000000402190 : jne 0x402197 ; pop rbp ; ret
0x0000000000407b36 : jne 0x407b21 ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x0000000000407e4d : jne 0x407e31 ; call rax
0x0000000000409862 : jne 0x40985a ; mov rax, rdx ; pop rbp ; ret
0x0000000000411cf8 : jne 0x411cf0 ; mov rax, rdx ; pop rbp ; ret
0x000000000041f699 : jnp 0x41f69b ; call qword ptr [rsi]
0x000000000041ea75 : jns 0x41ea77 ; jmp rax
0x000000000040bf09 : jo 0x40bf11 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040c5d5 : jo 0x40c636 ; ret
0x000000000040dce4 : jo 0x40dd45 ; ret
0x000000000040de1e : jo 0x40de7f ; ret
0x000000000040e22e : jo 0x40e236 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004104a4 : jo 0x410505 ; ret
0x000000000041110b : jo 0x41116c ; ret
0x000000000040d680 : js 0x40d6e0 ; pop rbp ; ret
0x0000000000405a79 : lea edi, dword ptr [0x41cfd6] ; call 0x401cf9
0x0000000000405773 : leave ; ret
0x0000000000402809 : les eax, ptr [rcx] ; jmp rcx
0x0000000000411629 : loop 0x41167b ; or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x0000000000411711 : loop 0x411763 ; or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x0000000000404918 : loopne 0x404904 ; ret 0xab
0x0000000000407b37 : loopne 0x407b89 ; mov esi, eax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000040a773 : loopne 0x40a755 ; insd dword ptr [rdi], dx ; loopne 0x40a7da ; ret
0x000000000040a776 : loopne 0x40a7d7 ; ret
0x000000000040f6c0 : loopne 0x40f710 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040f6bf : loopne 0x40f711 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040fe81 : loopne 0x40fe88 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004140b7 : loopne 0x4140ce ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000414b30 : loopne 0x414b38 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000419b79 : loopne 0x419bda ; ret
0x0000000000419b78 : loopne 0x419bdb ; ret
0x0000000000407a3e : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000041ec05 : mov al, -2 ; jmp qword ptr [rax]
0x0000000000405dec : mov al, 0 ; call 0x402024
0x000000000040dbbb : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040da4b : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000411c81 : mov al, 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000407925 : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004192c6 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004117cf : mov al, dh ; movzx eax, al ; pop rbp ; ret
0x00000000004117ce : mov al, sil ; movzx eax, al ; pop rbp ; ret
0x000000000041174f : mov ax, si ; movzx eax, ax ; pop rbp ; ret
0x0000000000411753 : mov bh, -0x40 ; pop rbp ; ret
0x0000000000406426 : mov bh, -1 ; dec dword ptr [rax - 0x73] ; cmp al, 0x25 ; call rsp
0x000000000041eab5 : mov bh, dh ; jmp rax
0x00000000004071d1 : mov byte ptr [0x622708], al ; pop rbp ; ret
0x0000000000412583 : mov byte ptr [rax + 0x14], 1 ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040624c : mov byte ptr [rax + 0x2c], 1 ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040509f : mov byte ptr [rax + 0x38], dl ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000413c0b : mov byte ptr [rax + 0xc], 1 ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b300 : mov byte ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004053a7 : mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x00000000004209b8 : mov byte ptr [rdi + rdi*8], cl ; jmp qword ptr [rdi]
0x00000000004021c3 : mov byte ptr [rip + 0x22048e], 1 ; ret
0x00000000004065a6 : mov ch, -1 ; dec dword ptr [rax - 0x73] ; cmp al, 0x25 ; call rsp
0x0000000000421291 : mov cl, -1 ; call qword ptr [rax]
0x000000000041f135 : mov cl, -1 ; jmp rax
0x00000000004097df : mov dh, -0x39 ; pop rbp ; ret
0x0000000000404cb3 : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407192 : mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000407715 : mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000408a8c : mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004136ed : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000405316 : mov dh, -0x40 ; pop rbp ; ret
0x000000000041f145 : mov dl, -1 ; jmp qword ptr [rax]
0x000000000041eaf5 : mov dr1, esi ; jmp rax
0x00000000004071ad : mov dword ptr [0x622700], edi ; pop rbp ; ret
0x00000000004199d6 : mov dword ptr [rax + 0x14], ecx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040c486 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040c394 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040c448 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000419c3c : mov dword ptr [rbp - 0x18], eax ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000402509 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000407a3c : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041147b : mov dword ptr [rbp - 0x50], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000402387 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004023b5 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000419cc1 : mov dword ptr [rbp - 4], eax ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000419699 : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000407dcb : mov dword ptr [rbp - 8], eax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000410e2f : mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x000000000040c4fe : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004054a7 : mov dword ptr [rcx], eax ; pop rbp ; ret
0x0000000000413c3c : mov dword ptr [rdi + 0x10], eax ; pop rbp ; ret
0x0000000000407f4a : mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x0000000000409670 : mov dword ptr [rdi + 0x48], esi ; pop rbp ; ret
0x00000000004104bc : mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x0000000000404e43 : mov dword ptr [rsi + rdx*8], eax ; pop rbp ; ret
0x00000000004125be : mov dword ptr [rsi], edi ; pop rbp ; ret
0x000000000041a840 : mov eax, 0x5d000001 ; ret
0x000000000040d67c : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000406320 : mov eax, 0x8d48ffff ; cmp al, 0x25 ; call rsp
0x000000000040c348 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040730d : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004075dc : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040c345 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040755f : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040ff4b : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004073e2 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040c2fd : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040c38e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040782f : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040a92c : mov eax, dword ptr [rbp - 0x1c] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040f6be : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407b3c : mov eax, dword ptr [rbp - 0x20] ; call rax
0x0000000000419b77 : mov eax, dword ptr [rbp - 0x20] ; pop rbp ; ret
0x000000000040922f : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040c44a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040f60b : mov eax, dword ptr [rbp - 0x2c] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040b3fb : mov eax, dword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040c5cf : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040d67a : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040dbb9 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000419910 : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040e330 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040e2e4 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004118ce : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040ab50 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041049e : mov eax, dword ptr [rbp - 4] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040feed : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004096fb : mov eax, dword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405394 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406133 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000407eab : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004052eb : mov eax, dword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000409123 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000411105 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004066a5 : mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000404dc1 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040772d : mov eax, dword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040774d : mov eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040776d : mov eax, dword ptr [rdi + 0x20] ; pop rbp ; ret
0x00000000004115ee : mov eax, edi ; pop rbp ; ret
0x0000000000408131 : mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000409865 : mov eax, edx ; pop rbp ; ret
0x0000000000411750 : mov eax, esi ; movzx eax, ax ; pop rbp ; ret
0x0000000000411663 : mov eax, esi ; pop rbp ; ret
0x000000000041e889 : mov ebp, 0x41 ; add byte ptr [rax], al ; ret
0x00000000004021eb : mov ebp, esp ; call rax
0x0000000000402151 : mov ebp, esp ; ja 0x40215c ; pop rbp ; ret
0x000000000041e8b1 : mov ebx, 0x41 ; add byte ptr [rax], al ; ret
0x0000000000405b7e : mov ecx, 0x41cfd1 ; mov esi, ecx ; call 0x401e59
0x0000000000402886 : mov ecx, dword ptr [rax*8 + 0x41c420] ; jmp rcx
0x0000000000402806 : mov ecx, dword ptr [rax*8 + 0x41c440] ; jmp rcx
0x00000000004035da : mov ecx, dword ptr [rax*8 + 0x41c470] ; jmp rcx
0x0000000000404393 : mov ecx, dword ptr [rax*8 + 0x41c498] ; jmp rcx
0x000000000040b4c6 : mov ecx, dword ptr [rax*8 + 0x41d6c0] ; jmp rcx
0x000000000040c687 : mov ecx, dword ptr [rax*8 + 0x41da20] ; jmp rcx
0x000000000040c967 : mov ecx, dword ptr [rax*8 + 0x41da68] ; jmp rcx
0x000000000040e92e : mov ecx, dword ptr [rax*8 + 0x41df20] ; jmp rcx
0x000000000040fcbd : mov ecx, dword ptr [rax*8 + 0x41e2f0] ; jmp rcx
0x000000000040fc3d : mov ecx, dword ptr [rax*8 + 0x41e350] ; jmp rcx
0x0000000000417065 : mov ecx, dword ptr [rax*8 + 0x41e6a0] ; jmp rcx
0x000000000041543a : mov ecx, dword ptr [rax*8 + 0x41e728] ; jmp rcx
0x0000000000419d27 : mov ecx, dword ptr [rax*8 + 0x41e770] ; jmp rcx
0x000000000041ba42 : mov ecx, dword ptr [rax*8 + 0x41e848] ; jmp rcx
0x000000000040c391 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000408492 : mov ecx, dword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040842f : mov ecx, dword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000407ac3 : mov ecx, dword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000408fd3 : mov ecx, dword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x00000000004054a3 : mov ecx, dword ptr [rbp - 8] ; mov qword ptr [rcx], rax ; pop rbp ; ret
0x00000000004090a0 : mov ecx, dword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000405dea : mov ecx, eax ; mov al, 0 ; call 0x402026
0x000000000041168d : mov ecx, eax ; shl edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000041165d : mov ecx, eax ; shr edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x00000000004021e5 : mov edi, 0x621e20 ; mov rbp, rsp ; call rax
0x0000000000402162 : mov edi, 0x6225e8 ; jmp rax
0x00000000004021a2 : mov edi, 0x6225e8 ; jmp rdx
0x0000000000405aff : mov edi, dword ptr [rbp - 8] ; call 0x401dc5
0x000000000040966c : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000407729 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000407749 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000407769 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000408433 : mov edi, dword ptr [rcx] ; call rax
0x0000000000407e49 : mov edi, dword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x00000000004125b8 : mov edi, dword ptr [rsi] ; add rdi, rax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x000000000041c377 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x00000000004210f9 : mov edi, edi ; call rdi
0x000000000041c376 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000041e8a9 : mov edx, 0x41 ; add byte ptr [rax], al ; ret
0x00000000004021c5 : mov es, word ptr [rdx] ; add byte ptr [rcx], al ; ret
0x0000000000407f12 : mov esi, 0x48ffffff ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000041eac5 : mov esi, dr1 ; jmp qword ptr [rax]
0x0000000000407e4c : mov esi, dword ptr [rbp - 0x20] ; call rax
0x0000000000407ac7 : mov esi, dword ptr [rcx] ; call rax
0x00000000004021a0 : mov esi, eax ; mov edi, 0x6225e8 ; jmp rdx
0x0000000000407b39 : mov esi, eax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x0000000000405b83 : mov esi, ecx ; call 0x401e54
0x000000000041fa39 : mov esi, edi ; jmp qword ptr [rdi]
0x000000000042128c : mov esp, 0x40000020 ; mov cl, -1 ; call qword ptr [rax]
0x00000000004066a9 : mov esp, ebp ; pop rbp ; ret
0x00000000004071ac : mov qword ptr [0x622700], rdi ; pop rbp ; ret
0x0000000000419c3b : mov qword ptr [rbp - 0x18], rax ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000407dca : mov qword ptr [rbp - 8], rax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000410e2e : mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000040c4fd : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004054a6 : mov qword ptr [rcx], rax ; pop rbp ; ret
0x0000000000413c3b : mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x000000000040966f : mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000404e42 : mov qword ptr [rsi + rdx*8], rax ; pop rbp ; ret
0x00000000004125bd : mov qword ptr [rsi], rdi ; pop rbp ; ret
0x0000000000407a3d : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040dbba : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040d67b : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x000000000040730c : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004075db : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040c344 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040755e : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004073e1 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040c2fc : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040782e : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040f6bd : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407b3b : mov rax, qword ptr [rbp - 0x20] ; call rax
0x0000000000419b76 : mov rax, qword ptr [rbp - 0x20] ; pop rbp ; ret
0x000000000040922e : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040b3fa : mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040c5ce : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040dbb8 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004096fa : mov rax, qword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405393 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406132 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000407eaa : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004052ea : mov rax, qword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000409122 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000411104 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004066a4 : mov rax, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000404dc0 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040772c : mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040774c : mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040776c : mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x00000000004115ed : mov rax, rdi ; pop rbp ; ret
0x0000000000408130 : mov rax, rdx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000409864 : mov rax, rdx ; pop rbp ; ret
0x00000000004021ea : mov rbp, rsp ; call rax
0x0000000000402150 : mov rbp, rsp ; ja 0x40215d ; pop rbp ; ret
0x0000000000402885 : mov rcx, qword ptr [rax*8 + 0x41c420] ; jmp rcx
0x0000000000402805 : mov rcx, qword ptr [rax*8 + 0x41c440] ; jmp rcx
0x00000000004035d9 : mov rcx, qword ptr [rax*8 + 0x41c470] ; jmp rcx
0x0000000000404392 : mov rcx, qword ptr [rax*8 + 0x41c498] ; jmp rcx
0x000000000040b4c5 : mov rcx, qword ptr [rax*8 + 0x41d6c0] ; jmp rcx
0x000000000040c686 : mov rcx, qword ptr [rax*8 + 0x41da20] ; jmp rcx
0x000000000040c966 : mov rcx, qword ptr [rax*8 + 0x41da68] ; jmp rcx
0x000000000040e92d : mov rcx, qword ptr [rax*8 + 0x41df20] ; jmp rcx
0x000000000040fcbc : mov rcx, qword ptr [rax*8 + 0x41e2f0] ; jmp rcx
0x000000000040fc3c : mov rcx, qword ptr [rax*8 + 0x41e350] ; jmp rcx
0x0000000000417064 : mov rcx, qword ptr [rax*8 + 0x41e6a0] ; jmp rcx
0x0000000000415439 : mov rcx, qword ptr [rax*8 + 0x41e728] ; jmp rcx
0x0000000000419d26 : mov rcx, qword ptr [rax*8 + 0x41e770] ; jmp rcx
0x000000000041ba41 : mov rcx, qword ptr [rax*8 + 0x41e848] ; jmp rcx
0x0000000000408491 : mov rcx, qword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040842e : mov rcx, qword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000407ac2 : mov rcx, qword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000408fd2 : mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x00000000004054a2 : mov rcx, qword ptr [rbp - 8] ; mov qword ptr [rcx], rax ; pop rbp ; ret
0x000000000040909f : mov rcx, qword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000405de9 : mov rcx, rax ; mov al, 0 ; call 0x402027
0x0000000000405afe : mov rdi, qword ptr [rbp - 8] ; call 0x401dc6
0x000000000040966b : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000407728 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000407748 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000407768 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000408432 : mov rdi, qword ptr [rcx] ; call rax
0x0000000000407e48 : mov rdi, qword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x0000000000407e4b : mov rsi, qword ptr [rbp - 0x20] ; call rax
0x0000000000407ac6 : mov rsi, qword ptr [rcx] ; call rax
0x000000000040219f : mov rsi, rax ; mov edi, 0x6225e8 ; jmp rdx
0x0000000000407b38 : mov rsi, rax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x00000000004066a8 : mov rsp, rbp ; pop rbp ; ret
0x000000000040b4c4 : movabs al, byte ptr [0x41d6c0c50c8b48] ; jmp rcx
0x000000000040359b : movabs eax, dword ptr [0x5d50c48348ffffe5] ; ret
0x0000000000420d74 : movsb byte ptr [rdi], byte ptr [rsi] ; sbb eax, dword ptr [rax] ; add byte ptr [rax], ch ; cmp edi, edi ; jmp rax
0x000000000041bbbf : movsd dword ptr [rdi], dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xdf43], al ; call qword ptr [rax]
0x000000000041928a : movsx eax, cl ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040ab8c : movsxd rax, ecx ; pop rbp ; ret
0x000000000041e9f5 : movsxd rdi, esi ; jmp rax
0x0000000000404cb2 : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407191 : movzx eax, al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000407714 : movzx eax, al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000408a8b : movzx eax, al ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004136ec : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000405315 : movzx eax, al ; pop rbp ; ret
0x0000000000411752 : movzx eax, ax ; pop rbp ; ret
0x00000000004097de : movzx eax, bh ; pop rbp ; ret
0x00000000004053aa : movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x00000000004097dd : movzx eax, dil ; pop rbp ; ret
0x000000000041ec04 : nop ; mov al, -2 ; jmp qword ptr [rax]
0x000000000041ee44 : nop ; or edi, edi ; jmp qword ptr [rax]
0x000000000041c398 : nop dword ptr [rax + rax] ; ret
0x000000000041feb5 : or al, 0 ; add al, bl ; ret
0x000000000041ea71 : or al, 0 ; add byte ptr [rax], dl ; jns 0x41ea7b ; jmp rax
0x0000000000404956 : or al, 0x25 ; adc bh, cl ; add r8b, bpl ; call rbx
0x000000000041ba43 : or al, 0xffffffffffffffc5 ; call 0xffffffffe240ba92
0x0000000000402807 : or al, 0xffffffffffffffc5 ; les eax, ptr [rcx] ; jmp rcx
0x00000000004209b9 : or al, 0xffffffffffffffff ; jmp qword ptr [rdi]
0x0000000000413c0d : or al, 1 ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004208b9 : or bh, bh ; call qword ptr [rax]
0x000000000041ee05 : or bh, bh ; jmp qword ptr [rax]
0x000000000041edf5 : or bh, bh ; jmp rax
0x000000000040cede : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040cedf : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000400bf0 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000041e971 : or byte ptr [rax], al ; add byte ptr [rax], al ; cmp bh, dh ; jmp rax
0x000000000041f698 : or byte ptr [rbx - 2], bh ; call qword ptr [rsi]
0x000000000040dda1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041ee45 : or edi, edi ; jmp qword ptr [rax]
0x000000000041ee35 : or edi, edi ; jmp rax
0x00000000004115eb : or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x0000000000411661 : or esi, edi ; mov eax, esi ; pop rbp ; ret
0x00000000004115ea : or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x00000000004097db : out 1, eax ; movzx eax, dil ; pop rbp ; ret
0x0000000000411660 : out dx, eax ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x00000000004079c9 : outsb dx, byte ptr [rsi] ; ret 0x280f
0x000000000041c38c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041c38e : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040edee : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041c390 : pop r14 ; pop r15 ; ret
0x000000000040edf0 : pop r15 ; pop rbp ; ret
0x000000000041c392 : pop r15 ; ret
0x00000000004208b8 : pop rax ; or bh, bh ; call qword ptr [rax]
0x00000000004021c2 : pop rbp ; mov byte ptr [rip + 0x22048e], 1 ; ret
0x000000000040631f : pop rbp ; mov eax, 0x8d48ffff ; cmp al, 0x25 ; call rsp
0x0000000000402161 : pop rbp ; mov edi, 0x6225e8 ; jmp rax
0x000000000040219e : pop rbp ; mov rsi, rax ; mov edi, 0x6225e8 ; jmp rdx
0x000000000041c38b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041c38f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000402155 : pop rbp ; ret
0x000000000040eded : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000404a9e : pop rbx ; pop rbp ; ret
0x000000000040edf1 : pop rdi ; pop rbp ; ret
0x000000000041c393 : pop rdi ; ret
0x000000000040edef : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000041c391 : pop rsi ; pop r15 ; ret
0x0000000000413ce2 : pop rsp ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041c38d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004079e0 : pop rsp ; ret 0xf66
0x000000000041ea45 : push -2 ; jmp qword ptr [rax]
0x0000000000403345 : push 0x48006226 ; add esp, 0x10 ; pop rbp ; ret
0x00000000004035a2 : push rax ; pop rbp ; ret
0x000000000041a89c : push rbp ; call 0x210429ee
0x0000000000412e18 : push rbp ; call 0x3af6a
0x000000000040b51b : push rbp ; fmul dword ptr [rax + 0x29] ; ror byte ptr [rax - 0x77], 1 ; ret 0x88e8
0x000000000040cee2 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x00000000004021e4 : push rbp ; mov edi, 0x621e20 ; mov rbp, rsp ; call rax
0x00000000004112e5 : push rbp ; ror byte ptr [rax - 0x77], 1 ; ret 0x11e8
0x0000000000411f0d : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000040d5ae : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000406425 : push rdi ; mov bh, -1 ; dec dword ptr [rax - 0x73] ; cmp al, 0x25 ; call rsp
0x000000000041ecb0 : rcl byte ptr [rip - 0x25000000], -2 ; jmp rax
0x000000000041165e : rcl ebx, -0x11 ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000041168e : rcl ebx, -0x19 ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000041ecc4 : rcr bl, -2 ; jmp qword ptr [rax]
0x000000000041ee30 : rcr byte ptr [rbx], 0 ; add byte ptr [rax], dl ; or edi, edi ; jmp rax
0x000000000041edf0 : rcr byte ptr [rdx], 0 ; add byte ptr [rax], ah ; or bh, bh ; jmp rax
0x000000000041eeb0 : rcr byte ptr [rip + 0x1b800000], -1 ; jmp rax
0x000000000041eef0 : rcr byte ptr [rsi], 0 ; add al, dl ; and al, 0xffffffffffffffff ; jmp rax
0x000000000040a770 : rcr ebx, 0x7d ; loopne 0x40a758 ; insd dword ptr [rdi], dx ; loopne 0x40a7dd ; ret
0x0000000000400bf8 : ret
0x000000000040905c : ret 0
0x0000000000413cd5 : ret 0x10
0x00000000004112e9 : ret 0x11e8
0x0000000000412665 : ret 0x18
0x000000000040aa01 : ret 0x19e8
0x000000000041a8a0 : ret 0x20
0x000000000040a14a : ret 0x205
0x0000000000401f72 : ret 0x2202
0x0000000000401d72 : ret 0x2203
0x0000000000401b72 : ret 0x2204
0x00000000004079ca : ret 0x280f
0x000000000040451a : ret 0x28f5
0x000000000040a014 : ret 0x2b48
0x0000000000416b4f : ret 0x2be8
0x000000000040e4dd : ret 0x2de8
0x000000000040ac79 : ret 0x30
0x000000000041da28 : ret 0x40c7
0x00000000004034d9 : ret 0x4589
0x000000000041a2a3 : ret 0x4810
0x0000000000413246 : ret 0x4a3b
0x0000000000410d21 : ret 0x5588
0x0000000000410f39 : ret 0x5589
0x00000000004162ae : ret 0x58
0x0000000000414cf2 : ret 0x58e8
0x0000000000413e52 : ret 0x78e8
0x000000000040e78e : ret 0x7ce8
0x000000000040a42d : ret 0x8148
0x00000000004082d3 : ret 0x8348
0x0000000000416bf2 : ret 0x8589
0x000000000040e8e9 : ret 0x8844
0x000000000040b522 : ret 0x88e8
0x00000000004047f1 : ret 0x8948
0x000000000040d00d : ret 0x89a5
0x0000000000415418 : ret 0x89ee
0x0000000000402ee1 : ret 0x8b48
0x000000000040ad88 : ret 0x92e8
0x0000000000410881 : ret 0x9588
0x000000000040a0da : ret 0x9589
0x0000000000409c03 : ret 0xa
0x000000000040491a : ret 0xab
0x000000000040cefb : ret 0xafe8
0x0000000000403290 : ret 0xb0
0x0000000000416bc8 : ret 0xb2e8
0x0000000000408356 : ret 0xb948
0x000000000041400f : ret 0xbbe8
0x0000000000412426 : ret 0xc
0x0000000000402185 : ret 0xc148
0x000000000040aea9 : ret 0xd1e8
0x000000000040e073 : ret 0xd284
0x0000000000406e34 : ret 0xd6e8
0x0000000000404576 : ret 0xe280
0x0000000000413ac6 : ret 0xe4e8
0x000000000040d4fc : ret 0xee8
0x00000000004199be : ret 0xf01
0x0000000000407702 : ret 0xf280
0x0000000000403dca : ret 0xf45
0x000000000040b105 : ret 0xf5e8
0x00000000004079e1 : ret 0xf66
0x00000000004142d1 : ret 0xf9e8
0x000000000041497a : ret 0xfed2
0x0000000000408d20 : ret 0xff3
0x000000000040744a : ret 0xffaa
0x0000000000405dba : ret 0xffbd
0x000000000041ec2d : ret 0xfffe
0x0000000000405a82 : ret 0xffff
0x0000000000407d87 : ret 1
0x0000000000409ca7 : ret 2
0x00000000004101eb : ret 3
0x000000000040d5b2 : ret 8
0x000000000040b163 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040ef2b : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000040c5d0 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x40c63b ; ret
0x000000000041ea70 : ror byte ptr [rax + rax], 0 ; adc byte ptr [rcx - 2], bh ; jmp rax
0x000000000040218c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40219b ; pop rbp ; ret
0x00000000004136ee : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x000000000040ef2c : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x00000000004112e6 : ror byte ptr [rax - 0x77], 1 ; ret 0x11e8
0x000000000040b51f : ror byte ptr [rax - 0x77], 1 ; ret 0x88e8
0x000000000040c5d1 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x40c63a ; ret
0x0000000000407716 : ror byte ptr [rax - 0x7d], -0x3c ; pop rbp ; ret
0x0000000000408a8d : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x000000000040bf05 : ror byte ptr [rax - 0x7f], -0x3c ; jo 0x40bf15 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040e22a : ror byte ptr [rax - 0x7f], -0x3c ; jo 0x40e23a ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000411f0e : ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000041ee04 : ror byte ptr [rax], -1 ; jmp qword ptr [rax]
0x000000000041e970 : ror byte ptr [rax], 0 ; add byte ptr [rax], al ; cmp bh, dh ; jmp rax
0x000000000040d5af : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000041eab0 : ror byte ptr [rip - 0x75600000], -2 ; jmp rax
0x000000000041eaf0 : ror byte ptr [rsi], 0 ; add byte ptr [rax], dh ; mov dr1, esi ; jmp rax
0x000000000041087e : ror dword ptr [rdi], -0x62 ; ret 0x9588
0x0000000000410880 : sahf ; ret 0x9588
0x000000000040215e : sal byte ptr [rsp + rsi*8 + 0x5d], -0x41 ; call 0xffffffffff408396
0x0000000000404e45 : salc ; pop rbp ; ret
0x000000000041ec85 : sar dh, 1 ; jmp qword ptr [rax]
0x000000000040218e : sar eax, 1 ; jne 0x402199 ; pop rbp ; ret
0x000000000040218d : sar rax, 1 ; jne 0x40219a ; pop rbp ; ret
0x000000000041eec5 : sbb al, -1 ; jmp qword ptr [rax]
0x000000000041edf1 : sbb al, byte ptr [rax] ; add byte ptr [rax], ah ; or bh, bh ; jmp rax
0x000000000041f4f8 : sbb byte ptr [rbp - 2], bl ; jmp rsp
0x000000000041eeb4 : sbb byte ptr [rbx], -1 ; jmp rax
0x000000000041ee01 : sbb eax, dword ptr [rax] ; add al, al ; or bh, bh ; jmp qword ptr [rax]
0x0000000000420d75 : sbb eax, dword ptr [rax] ; add byte ptr [rax], ch ; cmp edi, edi ; jmp rax
0x000000000041ee31 : sbb eax, dword ptr [rax] ; add byte ptr [rax], dl ; or edi, edi ; jmp rax
0x000000000041eeb5 : sbb edi, edi ; jmp rax
0x0000000000405310 : setb al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000408154 : sete al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000419a15 : setne al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000405312 : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000041efb0 : shl byte ptr [rcx], 0 ; add byte ptr [rax], dh ; xor edi, edi ; jmp rax
0x000000000041eef4 : shl byte ptr [rdi + rdi*8], 1 ; jmp rax
0x000000000041f130 : shl byte ptr [rdi], 0 ; add al, ah ; mov cl, -1 ; jmp rax
0x000000000041f0b0 : shl byte ptr [rip - 0x55300000], -1 ; jmp rax
0x00000000004079ff : shl dword ptr [rsi + 0xf], 0x5c ; ret 0xf66
0x000000000041168f : shl edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000411628 : shl edx, cl ; or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x000000000041ea34 : shr byte ptr [rcx - 2], 1 ; jmp rax
0x000000000041165f : shr edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x00000000004115e8 : shr edx, cl ; or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x00000000004192c8 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041ef45 : sub al, -1 ; jmp qword ptr [rax]
0x000000000040624e : sub al, 1 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404f99 : sub byte ptr [r15], cl ; xchg eax, edx ; ret 0x8b48
0x000000000041f618 : sub byte ptr [rbx - 2], ch ; call qword ptr [rsi]
0x0000000000405ad7 : sub byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000404f9a : sub byte ptr [rdi], cl ; xchg eax, edx ; ret 0x8b48
0x000000000041ef35 : sub edi, edi ; jmp rax
0x000000000041c401 : sub esp, 8 ; add rsp, 8 ; ret
0x000000000041c400 : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000405977 : test al, -0x18 ; ret
0x000000000041f075 : test al, -1 ; jmp rax
0x000000000041ebb5 : test al, -2 ; jmp rax
0x0000000000403d34 : test al, 0x1d ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041f939 : test bh, dh ; call rsp
0x000000000041c39a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040ab86 : test dh, dh ; cmove ecx, edx ; movsxd rax, ecx ; pop rbp ; ret
0x000000000040a426 : test dword ptr [rax - 0x75], 0x8948a845 ; ret 0x8148
0x0000000000405a2b : xchg eax, ebp ; ret
0x0000000000403daa : xchg eax, ebp ; ret 0x8b48
0x0000000000419906 : xchg eax, ebp ; ret 0xd284
0x0000000000407701 : xchg eax, ebp ; ret 0xf280
0x0000000000403dc9 : xchg eax, ebp ; ret 0xf45
0x0000000000419a16 : xchg eax, ebp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000404f9c : xchg eax, edx ; ret 0x8b48
0x0000000000404575 : xchg eax, edx ; ret 0xe280
0x0000000000405311 : xchg eax, edx ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000410d20 : xchg eax, esp ; ret 0x5588
0x00000000004189db : xchg eax, esp ; ret 0x9588
0x000000000040e072 : xchg eax, esp ; ret 0xd284
0x0000000000408155 : xchg eax, esp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000041ea85 : xchg esi, edi ; jmp qword ptr [rax]
0x00000000004065a5 : xlatb ; mov ch, -1 ; dec dword ptr [rax - 0x73] ; cmp al, 0x25 ; call rsp
0x00000000004115ec : xlatb ; mov rax, rdi ; pop rbp ; ret
0x0000000000404572 : xor byte ptr [r15], cl ; xchg eax, edx ; ret 0xe280
0x000000000041231e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000404573 : xor byte ptr [rdi], cl ; xchg eax, edx ; ret 0xe280
0x000000000041efc5 : xor edi, edi ; jmp qword ptr [rax]
0x000000000041efb5 : xor edi, edi ; jmp rax
0x000000000040c446 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000041f2b9 : xor esi, edi ; jmp rdx
