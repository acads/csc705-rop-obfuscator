0x0000000000405488 : adc al, 0 ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004026ea : adc byte ptr [rax + 0x63], cl ; ret 0x8948
0x0000000000406cdb : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404ab9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004026e5 : add ah, 0x60 ; add byte ptr [rbx], ch ; adc byte ptr [rax + 0x63], cl ; ret 0x8948
0x000000000040854f : add ah, ah ; ret
0x000000000040862f : add ah, al ; sar bh, 1 ; jmp rsp
0x0000000000408dd4 : add al, 6 ; add byte ptr [rax], al ; clc ; ret 0xffff
0x0000000000408dd7 : add al, bh ; ret 0xffff
0x0000000000408e97 : add al, bl ; ret
0x0000000000408db7 : add al, bl ; ret 0xffff
0x0000000000409157 : add al, bl ; sar bh, 1 ; jmp rax
0x00000000004018a7 : add al, ch ; ret
0x0000000000408e77 : add al, cl ; ret
0x0000000000408d77 : add al, cl ; ret 0xffff
0x000000000040757f : add bl, dh ; ret
0x0000000000401edf : add byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000405bf8 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000401ec7 : add byte ptr [rax - 0x77], cl ; ret 0x40e8
0x0000000000401c7c : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x0000000000408dd2 : add byte ptr [rax], al ; add al, 6 ; add byte ptr [rax], al ; clc ; ret 0xffff
0x00000000004018a5 : add byte ptr [rax], al ; add al, ch ; ret
0x000000000040757d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000401ec5 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x40e8
0x0000000000401c7a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000040757b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040757c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040538e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000408df1 : add byte ptr [rax], al ; add byte ptr [rsi + rax], ah ; add byte ptr [rax], al ; pop rax ; ret
0x0000000000408dd1 : add byte ptr [rax], al ; add byte ptr [rsi + rax], al ; add byte ptr [rax], al ; clc ; ret 0xffff
0x0000000000404a7a : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404820 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004013a3 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000408df2 : add byte ptr [rax], al ; and al, 6 ; add byte ptr [rax], al ; pop rax ; ret
0x0000000000408dd6 : add byte ptr [rax], al ; clc ; ret 0xffff
0x0000000000408e36 : add byte ptr [rax], al ; cwde ; ret
0x00000000004014d9 : add byte ptr [rax], al ; jmp 0x4013b9
0x00000000004086ee : add byte ptr [rax], al ; loop 0x4086f7 ; jmp rsp
0x000000000040852e : add byte ptr [rax], al ; mov bl, -1 ; jmp rsp
0x0000000000403662 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000408546 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000408df6 : add byte ptr [rax], al ; pop rax ; ret
0x0000000000408d36 : add byte ptr [rax], al ; pop rax ; ret 0xffff
0x0000000000402b70 : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000405abb : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004047e8 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040757e : add byte ptr [rax], al ; ret
0x0000000000408d16 : add byte ptr [rax], al ; ret 0xffff
0x0000000000408cf7 : add byte ptr [rax], bh ; ret 0xffff
0x0000000000408cd7 : add byte ptr [rax], bl ; ret 0xffff
0x000000000040872f : add byte ptr [rbp + rbp*8 - 1], dh ; jmp rsp
0x0000000000405abc : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004047e9 : add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004085af : add byte ptr [rbx + rcx*8 - 1], al ; jmp rsp
0x000000000040852f : add byte ptr [rbx + rsi*4 - 1], ah ; jmp rsp
0x00000000004026e8 : add byte ptr [rbx], ch ; adc byte ptr [rax + 0x63], cl ; ret 0x8948
0x0000000000401858 : add byte ptr [rcx], al ; ret
0x00000000004018a1 : add byte ptr [rdi], cl ; test byte ptr [rdx], cl ; add byte ptr [rax], al ; add al, ch ; ret
0x0000000000405390 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004086ef : add byte ptr [rdx - 1], al ; jmp rsp
0x0000000000408df3 : add byte ptr [rsi + rax], ah ; add byte ptr [rax], al ; pop rax ; ret
0x0000000000408dd3 : add byte ptr [rsi + rax], al ; add byte ptr [rax], al ; clc ; ret 0xffff
0x00000000004084ef : add byte ptr [rsi + rbp*4 - 1], al ; jmp rsp
0x0000000000404a78 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405aba : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004047e7 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004023c7 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004021d2 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000402fde : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004070da : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401854 : add eax, 0x208a7e ; add ebx, esi ; ret
0x000000000040181b : add eax, edx ; sar rax, 1 ; jne 0x40182c ; pop rbp ; ret
0x0000000000401859 : add ebx, esi ; ret
0x00000000004019ab : add esp, 0x10 ; pop rbp ; ret
0x0000000000406cac : add esp, 0x130 ; pop rbp ; ret
0x00000000004047e4 : add esp, 0x138 ; pop rbx ; pop rbp ; ret
0x0000000000405dac : add esp, 0x1a0 ; pop rbp ; ret
0x000000000040709e : add esp, 0x1e0 ; pop rbp ; ret
0x000000000040300d : add esp, 0x20 ; pop rbp ; ret
0x0000000000401abd : add esp, 0x30 ; pop rbp ; ret
0x00000000004021d7 : add esp, 0x50 ; pop rbp ; ret
0x0000000000402fe3 : add esp, 0x70 ; pop rbp ; ret
0x000000000040499e : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000402d37 : add esp, 0x80 ; pop rbp ; ret
0x0000000000404d6d : add esp, 0x90 ; pop rbp ; ret
0x0000000000405c44 : add esp, 0xa0 ; pop rbp ; ret
0x0000000000402b6c : add esp, 0xe0 ; pop rbp ; ret
0x00000000004013a6 : add esp, 8 ; ret
0x000000000040181a : add rax, rdx ; sar rax, 1 ; jne 0x40182d ; pop rbp ; ret
0x00000000004019aa : add rsp, 0x10 ; pop rbp ; ret
0x0000000000406cab : add rsp, 0x130 ; pop rbp ; ret
0x00000000004047e3 : add rsp, 0x138 ; pop rbx ; pop rbp ; ret
0x0000000000405dab : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000040709d : add rsp, 0x1e0 ; pop rbp ; ret
0x000000000040300c : add rsp, 0x20 ; pop rbp ; ret
0x0000000000401abc : add rsp, 0x30 ; pop rbp ; ret
0x00000000004021d6 : add rsp, 0x50 ; pop rbp ; ret
0x0000000000402fe2 : add rsp, 0x70 ; pop rbp ; ret
0x000000000040499d : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000402d36 : add rsp, 0x80 ; pop rbp ; ret
0x0000000000404d6c : add rsp, 0x90 ; pop rbp ; ret
0x0000000000405c43 : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000402b6b : add rsp, 0xe0 ; pop rbp ; ret
0x00000000004013a5 : add rsp, 8 ; ret
0x00000000004070d9 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000408df4 : and al, 6 ; add byte ptr [rax], al ; pop rax ; ret
0x0000000000408544 : and al, 7 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000401857 : and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000404da7 : and eax, 0x48fffffd ; add esp, 0x20 ; pop rbp ; ret
0x000000000040302f : and eax, 0x60c4a0 ; pop rbp ; ret
0x0000000000403053 : and eax, 0x60c4a8 ; pop rbp ; ret
0x00000000004052b3 : call 0x4014f2
0x000000000040270a : call 0x490ab05d
0x0000000000402709 : call 0x490ab05e
0x0000000000404819 : call 0xffffffffe902d169
0x0000000000404818 : call 0xffffffffe902d16a
0x0000000000403c8a : call 0xffffffffff407d0e
0x0000000000407559 : call qword ptr [r12 + rbx*8]
0x000000000040899b : call qword ptr [rsi]
0x000000000040755a : call qword ptr [rsp + rbx*8]
0x000000000040187d : call rax
0x0000000000408bdb : call rdx
0x000000000040881b : call rsi
0x0000000000406caa : clc ; add rsp, 0x130 ; pop rbp ; ret
0x0000000000405faf : clc ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004053a1 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040341d : clc ; add rsp, 0x80 ; pop rbp ; ret
0x000000000040181f : clc ; jne 0x401828 ; pop rbp ; ret
0x00000000004037a5 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004074ab : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040346e : clc ; pop rbp ; ret
0x0000000000408dd8 : clc ; ret 0xffff
0x00000000004019d7 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004054fe : cld ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406484 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004074a8 : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000406363 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004054fb : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406481 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004047e6 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004017dd : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4017f0 ; pop rbp ; ret
0x00000000004055fc : cwde ; mov rcx, qword ptr [rax*8 + 0x4080a8] ; jmp rcx
0x0000000000408e38 : cwde ; ret
0x000000000040346a : dec dword ptr [rax - 0x75] ; clc ; pop rbp ; ret
0x0000000000403c85 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; call 0xffffffffff407d13
0x0000000000406c0f : dec dword ptr [rax - 0x7f] ; ret 1
0x00000000004048cb : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x00000000004035a1 : enter 0x60a2, 0 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404203 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040755c : fmul qword ptr [rax - 0x7d] ; ret
0x00000000004019a9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004017f0 : hlt ; pop rbp ; mov edi, 0x60a280 ; jmp rax
0x000000000040300b : in al, dx ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004052ae : in al, dx ; mov rdi, qword ptr [rbp - 0x10] ; call 0x4014f7
0x000000000040854b : inc dword ptr [rdi + rax] ; add ah, ah ; ret
0x000000000040862b : inc esp ; or al, byte ptr [rax] ; add ah, al ; sar bh, 1 ; jmp rsp
0x00000000004085ab : inc esp ; or byte ptr [rax], al ; add byte ptr [rbx + rcx*8 - 1], al ; jmp rsp
0x0000000000405c00 : int 0x80
0x00000000004017e3 : ja 0x4017ea ; pop rbp ; ret
0x00000000004017ef : je 0x4017ed ; pop rbp ; mov edi, 0x60a280 ; jmp rax
0x00000000004052b1 : jge 0x4052a7 ; call 0x4014f4
0x0000000000401855 : jle 0x4017e7 ; and byte ptr [rax], al ; add ebx, esi ; ret
0x00000000004014db : jmp 0x4013b7
0x0000000000408d7b : jmp qword ptr [rax]
0x000000000040897b : jmp qword ptr [rdx]
0x00000000004017f7 : jmp rax
0x00000000004039ae : jmp rcx
0x0000000000401837 : jmp rdx
0x0000000000408473 : jmp rsp
0x0000000000401820 : jne 0x401827 ; pop rbp ; ret
0x00000000004052ad : jne 0x4052a3 ; mov rdi, qword ptr [rbp - 0x10] ; call 0x4014f8
0x0000000000402fe5 : jo 0x403046 ; ret
0x00000000004038f5 : jo 0x403956 ; ret
0x0000000000405004 : jo 0x405065 ; ret
0x000000000040513e : jo 0x40519f ; ret
0x00000000004049a0 : js 0x404a00 ; pop rbp ; ret
0x00000000004086f1 : loop 0x4086f4 ; jmp rsp
0x00000000004086f0 : loop 0x4086f5 ; jmp rsp
0x0000000000402b6e : loopne 0x402b75 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004070a0 : loopne 0x4070a8 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401856 : mov ah, byte ptr [rax] ; add byte ptr [rcx], al ; ret
0x0000000000404edb : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000404d6b : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x00000000004070d6 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000408531 : mov bl, -1 ; jmp rsp
0x0000000000403051 : mov byte ptr [0x60c4a8], al ; pop rbp ; ret
0x0000000000401853 : mov byte ptr [rip + 0x208a7e], 1 ; ret
0x00000000004023c9 : mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004021d4 : mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000402fe0 : mov dh, -0x40 ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004070dc : mov dh, -0x40 ; pop rbp ; ret
0x000000000040302d : mov dword ptr [0x60c4a0], edi ; pop rbp ; ret
0x00000000004037a6 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004036b4 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000403768 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000403009 : mov dword ptr [rbp - 0x14], eax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004052ac : mov dword ptr [rbp - 0x14], esi ; mov rdi, qword ptr [rbp - 0x10] ; call 0x4014f9
0x0000000000401ab9 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004019a7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004019d5 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004074a9 : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040381e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040499c : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000403668 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000405ecb : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040327c : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403665 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004031ff : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000406163 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040361d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004036ae : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040376a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004038ef : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040499a : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000404ed9 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000406364 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004054fc : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406482 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000405fad : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040539f : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040346c : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040187b : mov ebp, esp ; call rax
0x00000000004017e1 : mov ebp, esp ; ja 0x4017ec ; pop rbp ; ret
0x00000000004039a7 : mov ecx, dword ptr [rax*8 + 0x407ba0] ; jmp rcx
0x0000000000403c87 : mov ecx, dword ptr [rax*8 + 0x407be8] ; jmp rcx
0x00000000004055fe : mov ecx, dword ptr [rax*8 + 0x4080a8] ; jmp rcx
0x00000000004036b1 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401875 : mov edi, 0x609e20 ; mov rbp, rsp ; call rax
0x00000000004017f2 : mov edi, 0x60a280 ; jmp rax
0x0000000000401832 : mov edi, 0x60a280 ; jmp rdx
0x00000000004052b0 : mov edi, dword ptr [rbp - 0x10] ; call 0x4014f5
0x0000000000407557 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000407556 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000401830 : mov esi, eax ; mov edi, 0x60a280 ; jmp rdx
0x000000000040302c : mov qword ptr [0x60c4a0], rdi ; pop rbp ; ret
0x000000000040381d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404eda : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040499b : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000405eca : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040327b : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403664 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004031fe : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000406162 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040361c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004038ee : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000404ed8 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000405fac : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040539e : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040346b : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040187a : mov rbp, rsp ; call rax
0x00000000004017e0 : mov rbp, rsp ; ja 0x4017ed ; pop rbp ; ret
0x00000000004039a6 : mov rcx, qword ptr [rax*8 + 0x407ba0] ; jmp rcx
0x0000000000403c86 : mov rcx, qword ptr [rax*8 + 0x407be8] ; jmp rcx
0x00000000004055fd : mov rcx, qword ptr [rax*8 + 0x4080a8] ; jmp rcx
0x00000000004052af : mov rdi, qword ptr [rbp - 0x10] ; call 0x4014f6
0x000000000040182f : mov rsi, rax ; mov edi, 0x60a280 ; jmp rdx
0x0000000000408548 : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004023c8 : movzx eax, al ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004021d3 : movzx eax, al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000402fdf : movzx eax, al ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004070db : movzx eax, al ; pop rbp ; ret
0x0000000000407578 : nop dword ptr [rax + rax] ; ret
0x0000000000403c88 : or al, 0xffffffffffffffc5 ; call 0xffffffffff407d10
0x000000000040862d : or al, byte ptr [rax] ; add ah, al ; sar bh, 1 ; jmp rsp
0x00000000004041fe : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x00000000004041ff : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x00000000004085ad : or byte ptr [rax], al ; add byte ptr [rbx + rcx*8 - 1], al ; jmp rsp
0x0000000000409155 : or dword ptr [rax], eax ; add al, bl ; sar bh, 1 ; jmp rax
0x00000000004050c1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040756c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040756e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405abe : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000407570 : pop r14 ; pop r15 ; ret
0x0000000000405ac0 : pop r15 ; pop rbp ; ret
0x0000000000407572 : pop r15 ; ret
0x0000000000408df8 : pop rax ; ret
0x0000000000408d38 : pop rax ; ret 0xffff
0x0000000000401852 : pop rbp ; mov byte ptr [rip + 0x208a7e], 1 ; ret
0x00000000004017f1 : pop rbp ; mov edi, 0x60a280 ; jmp rax
0x000000000040182e : pop rbp ; mov rsi, rax ; mov edi, 0x60a280 ; jmp rdx
0x000000000040756b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040756f : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004017e5 : pop rbp ; ret
0x0000000000405abd : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004047ea : pop rbx ; pop rbp ; ret
0x0000000000405ac1 : pop rdi ; pop rbp ; ret
0x0000000000407573 : pop rdi ; ret
0x0000000000405abf : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000407571 : pop rsi ; pop r15 ; ret
0x000000000040756d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004021d9 : push rax ; pop rbp ; ret
0x0000000000404202 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000401874 : push rbp ; mov edi, 0x609e20 ; mov rbp, rsp ; call rax
0x000000000040689d : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x00000000004048ce : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x00000000004013a9 : ret
0x00000000004016e2 : ret 0x208a
0x00000000004014e2 : ret 0x208b
0x0000000000401eca : ret 0x40e8
0x000000000040421b : ret 0x6fe8
0x00000000004055b9 : ret 0x8844
0x0000000000401ee2 : ret 0x8948
0x000000000040432d : ret 0x89a5
0x000000000040264d : ret 0x8b44
0x0000000000404206 : ret 0x8b48
0x0000000000401c7f : ret 0xb0
0x0000000000401815 : ret 0xc148
0x0000000000405393 : ret 0xd284
0x000000000040481c : ret 0xee8
0x0000000000402710 : ret 0xffff
0x0000000000404b3e : ret 1
0x00000000004048d2 : ret 8
0x0000000000405bfb : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x00000000004038f0 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x40395b ; ret
0x000000000040181c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40182b ; pop rbp ; ret
0x0000000000405bfc : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000402fe1 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x40304a ; ret
0x00000000004038f1 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x40395a ; ret
0x00000000004021d5 : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x0000000000402b6a : ror byte ptr [rax - 0x7f], -0x3c ; loopne 0x402b79 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040689e : ror byte ptr [rax - 0x7f], 1 ; ret 1
0x00000000004048cf : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000409159 : sar bh, 1 ; jmp rax
0x0000000000408631 : sar bh, 1 ; jmp rsp
0x000000000040181e : sar eax, 1 ; jne 0x401829 ; pop rbp ; ret
0x000000000040181d : sar rax, 1 ; jne 0x40182a ; pop rbp ; ret
0x0000000000408dd0 : sbb al, 0 ; add byte ptr [rax], al ; add al, 6 ; add byte ptr [rax], al ; clc ; ret 0xffff
0x0000000000408df0 : sbb al, 0 ; add byte ptr [rax], al ; and al, 6 ; add byte ptr [rax], al ; pop rax ; ret
0x00000000004070d8 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004075ad : sub esp, 8 ; add rsp, 8 ; ret
0x00000000004075ac : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040757a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004018a3 : test byte ptr [rdx], cl ; add byte ptr [rax], al ; add al, ch ; ret
0x0000000000405392 : xchg eax, esp ; ret 0xd284
0x0000000000406cae : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000403766 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
