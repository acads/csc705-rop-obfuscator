0x0000000000403449 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406bc0 : add bh, -1 ; call rdx
0x00000000004059bf : add bl, dh ; ret
0x0000000000404f83 : add byte ptr [rax - 0x75], cl ; jge 0x404f4f ; call 0x4011c7
0x0000000000404428 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000406bbe : add byte ptr [rax], al ; add bh, -1 ; call rdx
0x00000000004059bd : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000404f81 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jge 0x404f51 ; call 0x4011c9
0x00000000004059bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004059bc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000404f52 : add byte ptr [rax], al ; add byte ptr [rbx + 0x53e8c87d], cl ; ret
0x0000000000403d1e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040340a : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004031b0 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040110b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000406bba : add byte ptr [rax], al ; in al, 2 ; add byte ptr [rax], al ; add bh, -1 ; call rdx
0x0000000000401169 : add byte ptr [rax], al ; jmp 0x401129
0x0000000000401ff2 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000404f82 : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x40] ; call 0x4011c8
0x00000000004050f1 : add byte ptr [rax], al ; mov rdi, rax ; call 0x401367
0x0000000000405135 : add byte ptr [rax], al ; mov rsi, rax ; call 0x4013b7
0x000000000040717a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; or byte ptr [rax], al ; add byte ptr [rax], dl ; loope 0x40718b ; jmp rax
0x0000000000406e7e : add byte ptr [rax], al ; or ch, 0xff ; jmp qword ptr [rdx]
0x0000000000401e08 : add byte ptr [rax], al ; pop rbp ; ret
0x00000000004042eb : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403178 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004059be : add byte ptr [rax], al ; ret
0x000000000040717f : add byte ptr [rax], dl ; loope 0x407186 ; jmp rax
0x00000000004042ec : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000404f54 : add byte ptr [rbx + 0x53e8c87d], cl ; ret
0x0000000000403179 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000401518 : add byte ptr [rcx], al ; ret
0x0000000000403d20 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000403408 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004050ef : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rax ; call 0x401369
0x0000000000405133 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rsi, rax ; call 0x4013b9
0x00000000004042ea : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000403177 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040551a : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401514 : add eax, 0x206d66 ; add ebx, esi ; ret
0x00000000004014db : add eax, edx ; sar rax, 1 ; jne 0x4014ec ; pop rbp ; ret
0x0000000000401519 : add ebx, esi ; ret
0x000000000040164b : add esp, 0x10 ; pop rbp ; ret
0x000000000040527c : add esp, 0x130 ; pop rbp ; ret
0x0000000000403174 : add esp, 0x138 ; pop rbx ; pop rbp ; ret
0x00000000004045dc : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000401e04 : add esp, 0x1c0 ; pop rbp ; ret
0x0000000000401bd0 : add esp, 0x20 ; pop rbp ; ret
0x000000000040172d : add esp, 0x30 ; pop rbp ; ret
0x00000000004037ec : add esp, 0x50 ; pop rbp ; ret
0x0000000000402283 : add esp, 0x70 ; pop rbp ; ret
0x000000000040332e : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004036fd : add esp, 0x90 ; pop rbp ; ret
0x0000000000404474 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040110e : add esp, 8 ; ret
0x00000000004014da : add rax, rdx ; sar rax, 1 ; jne 0x4014ed ; pop rbp ; ret
0x000000000040164a : add rsp, 0x10 ; pop rbp ; ret
0x000000000040527b : add rsp, 0x130 ; pop rbp ; ret
0x0000000000403173 : add rsp, 0x138 ; pop rbx ; pop rbp ; ret
0x00000000004045db : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000401e03 : add rsp, 0x1c0 ; pop rbp ; ret
0x0000000000401bcf : add rsp, 0x20 ; pop rbp ; ret
0x000000000040172c : add rsp, 0x30 ; pop rbp ; ret
0x00000000004037eb : add rsp, 0x50 ; pop rbp ; ret
0x0000000000402282 : add rsp, 0x70 ; pop rbp ; ret
0x000000000040332d : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004036fc : add rsp, 0x90 ; pop rbp ; ret
0x0000000000404473 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040110d : add rsp, 8 ; ret
0x0000000000405519 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401517 : and byte ptr [rax], al ; add ebx, esi ; ret
0x00000000004034c7 : and dword ptr [rax], 0x81d8558b ; ret 1
0x0000000000403737 : and eax, 0x48fffffd ; add esp, 0x20 ; pop rbp ; ret
0x000000000040197f : and eax, 0x608288 ; pop rbp ; ret
0x00000000004019a3 : and eax, 0x608290 ; pop rbp ; ret
0x0000000000401109 : and eax, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000404f88 : call 0x4011c2
0x0000000000405066 : call 0x4012a2
0x00000000004050f6 : call 0x401362
0x000000000040513a : call 0x4013b2
0x00000000004031a9 : call 0xffffffffe902baf9
0x00000000004031a8 : call 0xffffffffe902bafa
0x0000000000405999 : call qword ptr [r12 + rbx*8]
0x00000000004069a3 : call qword ptr [rsi]
0x000000000040599a : call qword ptr [rsp + rbx*8]
0x000000000040153d : call rax
0x0000000000406bc3 : call rdx
0x000000000040527a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x00000000004047df : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403d31 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004014df : clc ; jne 0x4014e8 ; pop rbp ; ret
0x0000000000402135 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004058eb : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004058ee : clc ; pop rbp ; ret
0x00000000004053c6 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404c4b : cld ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404b90 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004058e8 : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004053c3 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405366 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404b8d : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403176 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040149d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4014b0 ; pop rbp ; ret
0x0000000000403e2c : cwde ; mov rcx, qword ptr [rax*8 + 0x406208] ; jmp rcx
0x00000000004051df : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000040325b : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000402b93 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040599c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000401649 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004014b0 : hlt ; pop rbp ; mov edi, 0x608228 ; jmp rax
0x0000000000406bbc : in al, 2 ; add byte ptr [rax], al ; add bh, -1 ; call rdx
0x0000000000401516 : insd dword ptr [rdi], dx ; and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000401515 : insw word ptr [rdi], dx ; and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000404430 : int 0x80
0x00000000004014a3 : ja 0x4014aa ; pop rbp ; ret
0x00000000004014af : je 0x4014ad ; pop rbp ; mov edi, 0x608228 ; jmp rax
0x0000000000404f86 : jge 0x404f4c ; call 0x4011c4
0x000000000040116b : jmp 0x401127
0x0000000000406d63 : jmp qword ptr [rax]
0x0000000000406c43 : jmp qword ptr [rdx]
0x0000000000406983 : jmp qword ptr [rsi]
0x00000000004014b7 : jmp rax
0x000000000040233e : jmp rcx
0x00000000004014f7 : jmp rdx
0x00000000004014e0 : jne 0x4014e7 ; pop rbp ; ret
0x0000000000402285 : jo 0x4022e6 ; ret
0x0000000000403994 : jo 0x4039f5 ; ret
0x0000000000403ace : jo 0x403b2f ; ret
0x0000000000403330 : js 0x403390 ; pop rbp ; ret
0x0000000000407181 : loope 0x407184 ; jmp rax
0x0000000000405064 : mov al, 0 ; call 0x4012a4
0x000000000040386b : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004036fb : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000405516 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004019a1 : mov byte ptr [0x608290], al ; pop rbp ; ret
0x0000000000401513 : mov byte ptr [rip + 0x206d66], 1 ; ret
0x000000000040551c : mov dh, -0x40 ; pop rbp ; ret
0x000000000040197d : mov dword ptr [0x608288], edi ; pop rbp ; ret
0x0000000000402136 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000402044 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004020f8 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000401729 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401647 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004058e9 : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004021ae : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040332c : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000401ff8 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004046fb : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401bcc : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401ff5 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000401b4f : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000404993 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401fad : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040203e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004020fa : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040227f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040332a : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000403869 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004053c4 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404c49 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404b8e : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004047dd : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403d2f : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004058ec : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040153b : mov ebp, esp ; call rax
0x00000000004014a1 : mov ebp, esp ; ja 0x4014ac ; pop rbp ; ret
0x0000000000402337 : mov ecx, dword ptr [rax*8 + 0x405d00] ; jmp rcx
0x0000000000402617 : mov ecx, dword ptr [rax*8 + 0x405d48] ; jmp rcx
0x0000000000403e2e : mov ecx, dword ptr [rax*8 + 0x406208] ; jmp rcx
0x0000000000402041 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401535 : mov edi, 0x607e20 ; mov rbp, rsp ; call rax
0x00000000004014b2 : mov edi, 0x608228 ; jmp rax
0x00000000004014f2 : mov edi, 0x608228 ; jmp rdx
0x0000000000404f85 : mov edi, dword ptr [rbp - 0x40] ; call 0x4011c5
0x00000000004050f4 : mov edi, eax ; call 0x401364
0x0000000000405997 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000405996 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000405138 : mov esi, eax ; call 0x4013b4
0x00000000004014f0 : mov esi, eax ; mov edi, 0x608228 ; jmp rdx
0x000000000040197c : mov qword ptr [0x608288], rdi ; pop rbp ; ret
0x00000000004021ad : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040386a : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040332b : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x00000000004046fa : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401bcb : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401ff4 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000401b4e : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000404992 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401fac : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040227e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000403868 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004047dc : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403d2e : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040153a : mov rbp, rsp ; call rax
0x00000000004014a0 : mov rbp, rsp ; ja 0x4014ad ; pop rbp ; ret
0x0000000000402336 : mov rcx, qword ptr [rax*8 + 0x405d00] ; jmp rcx
0x0000000000402616 : mov rcx, qword ptr [rax*8 + 0x405d48] ; jmp rcx
0x0000000000403e2d : mov rcx, qword ptr [rax*8 + 0x406208] ; jmp rcx
0x0000000000404f84 : mov rdi, qword ptr [rbp - 0x40] ; call 0x4011c6
0x00000000004050f3 : mov rdi, rax ; call 0x401365
0x0000000000405137 : mov rsi, rax ; call 0x4013b5
0x00000000004014ef : mov rsi, rax ; mov edi, 0x608228 ; jmp rdx
0x000000000040717c : movsb byte ptr [rdi], byte ptr [rsi] ; or byte ptr [rax], al ; add byte ptr [rax], dl ; loope 0x407189 ; jmp rax
0x000000000040551b : movzx eax, al ; pop rbp ; ret
0x00000000004059b8 : nop dword ptr [rax + rax] ; ret
0x0000000000402b8e : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000402b8f : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040717d : or byte ptr [rax], al ; add byte ptr [rax], dl ; loope 0x407188 ; jmp rax
0x0000000000406e80 : or ch, 0xff ; jmp qword ptr [rdx]
0x0000000000403a51 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004059ac : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004059ae : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004042ee : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004059b0 : pop r14 ; pop r15 ; ret
0x00000000004042f0 : pop r15 ; pop rbp ; ret
0x00000000004059b2 : pop r15 ; ret
0x0000000000401512 : pop rbp ; mov byte ptr [rip + 0x206d66], 1 ; ret
0x00000000004014b1 : pop rbp ; mov edi, 0x608228 ; jmp rax
0x00000000004014ee : pop rbp ; mov rsi, rax ; mov edi, 0x608228 ; jmp rdx
0x00000000004059ab : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004059af : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004014a5 : pop rbp ; ret
0x00000000004042ed : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040317a : pop rbx ; pop rbp ; ret
0x00000000004042f1 : pop rdi ; pop rbp ; ret
0x00000000004059b3 : pop rdi ; ret
0x00000000004042ef : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004059b1 : pop rsi ; pop r15 ; ret
0x00000000004059ad : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000401f31 : push 0x48006082 ; add esp, 0x30 ; pop rbp ; ret
0x00000000004037ee : push rax ; pop rbp ; ret
0x0000000000402b92 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000401534 : push rbp ; mov edi, 0x607e20 ; mov rbp, rsp ; call rax
0x0000000000404e6d : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000040325e : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000404f59 : push rbx ; ret
0x0000000000401111 : ret
0x0000000000401372 : ret 0x206d
0x0000000000401172 : ret 0x206e
0x0000000000403de9 : ret 0x8844
0x0000000000404862 : ret 0x8948
0x0000000000402cbd : ret 0x89a5
0x0000000000402b96 : ret 0x8b48
0x0000000000402bab : ret 0xafe8
0x0000000000401880 : ret 0xb0
0x00000000004014d5 : ret 0xc148
0x0000000000403d23 : ret 0xd284
0x00000000004031ac : ret 0xee8
0x0000000000402d6a : ret 0xffe6
0x0000000000404f8a : ret 0xffff
0x00000000004034ce : ret 1
0x0000000000403262 : ret 8
0x000000000040442b : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000402280 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x4022eb ; ret
0x00000000004014dc : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4014eb ; pop rbp ; ret
0x000000000040442c : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000402281 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x4022ea ; ret
0x0000000000404e6e : ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000040325f : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x00000000004014de : sar eax, 1 ; jne 0x4014e9 ; pop rbp ; ret
0x00000000004014dd : sar rax, 1 ; jne 0x4014ea ; pop rbp ; ret
0x0000000000404f87 : shr al, 0x33 ; ret 0xffff
0x000000000040503e : shr al, 0x4c ; ret
0x0000000000405518 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004059ed : sub esp, 8 ; add rsp, 8 ; ret
0x00000000004059ec : sub rsp, 8 ; add rsp, 8 ; ret
0x00000000004059ba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000402339 : vminps xmm8, xmm15, xmmword ptr [rax] ; jmp rcx
0x0000000000402619 : vminps xmm8, xmm6, xmmword ptr [rax] ; jmp rcx
0x0000000000403d22 : xchg eax, esp ; ret 0xd284
0x000000000040527e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004020f6 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
