0x00000000004050f9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040916f : add ah, cl ; ret
0x0000000000401ac7 : add al, 0x25 ; ret
0x0000000000401abf : add al, 0x25 ; ret 0x60b2
0x0000000000405243 : add al, 0x48 ; mov edi, eax ; call 0x401486
0x00000000004094e7 : add al, bl ; mov edi, dr1 ; jmp qword ptr [rsi]
0x0000000000409927 : add al, cl ; mov dh, -1 ; call rdx
0x0000000000409c67 : add al, cl ; ret
0x0000000000409467 : add al, cl ; test bh, bh ; jmp rdx
0x0000000000407d7f : add bl, dh ; ret
0x000000000040359c : add byte ptr [rax + 1], cl ; ret 0x8948
0x00000000004060d8 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000409465 : add byte ptr [rax], al ; add al, cl ; test bh, bh ; jmp rdx
0x0000000000407d7d : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040359a : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000407d7b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000403270 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000406da9 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000402d4f : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004032a2 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000407d7c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000402100 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x0000000000403272 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040329e : add byte ptr [rax], al ; add cl, ch ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401cd1 : add byte ptr [rax], al ; add dh, al ; add al, 0x25 ; ret 0x60b2
0x00000000004031ca : add byte ptr [rax], al ; add dh, dh ; add al, 0x25 ; ret
0x00000000004024b3 : add byte ptr [rax], al ; add dh, dh ; add al, 0x25 ; ret 0x60b2
0x00000000004050ba : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404e60 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004012f3 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000401389 : add byte ptr [rax], al ; jmp 0x401309
0x0000000000406dab : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000403ca2 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000402d51 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000409462 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add al, cl ; test bh, bh ; jmp rdx
0x0000000000409c62 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; or byte ptr [rax], al ; add al, cl ; ret
0x00000000004032a4 : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000405f9b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000404e28 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000407d7e : add byte ptr [rax], al ; ret
0x0000000000409923 : add byte ptr [rbp + rax], ah ; add al, cl ; mov dh, -1 ; call rdx
0x0000000000400283 : add byte ptr [rbp - 0x43299ff3], ch ; stc ; ret 0xd3c0
0x0000000000405f9c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000404e29 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000401768 : add byte ptr [rcx], al ; ret
0x0000000000402102 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x0000000000403274 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004032a0 : add cl, ch ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004024b0 : add cl, ch ; out dx, eax ; add byte ptr [rax], al ; add dh, dh ; add al, 0x25 ; ret 0x60b2
0x0000000000402436 : add cl, ch ; outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add dh, dh ; add al, 0x25 ; ret
0x0000000000403207 : add cl, ch ; xchg eax, esp ; add byte ptr [rax], al ; add dh, dh ; add al, 0x25 ; ret 0x60b2
0x0000000000401ac5 : add dh, al ; add al, 0x25 ; ret
0x0000000000401abd : add dh, al ; add al, 0x25 ; ret 0x60b2
0x000000000040243b : add dh, dh ; add al, 0x25 ; ret
0x00000000004024b5 : add dh, dh ; add al, 0x25 ; ret 0x60b2
0x00000000004094e5 : add dword ptr [rax], eax ; add al, bl ; mov edi, dr1 ; jmp qword ptr [rsi]
0x00000000004050b8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405f9a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000404e27 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000402439 : add dword ptr [rax], eax ; add dh, dh ; add al, 0x25 ; ret
0x0000000000402621 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403315 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401764 : add eax, 0x209b4e ; add ebx, esi ; ret
0x000000000040172b : add eax, edx ; sar rax, 1 ; jne 0x40173c ; pop rbp ; ret
0x0000000000401769 : add ebx, esi ; ret
0x0000000000401cce : add ecx, ebp ; wait ; add byte ptr [rax], al ; add dh, al ; add al, 0x25 ; ret 0x60b2
0x0000000000405029 : add edx, ecx ; mov rdi, qword ptr [rdx + 8] ; call 0x401328
0x00000000004018fb : add esp, 0x10 ; pop rbp ; ret
0x000000000040789c : add esp, 0x130 ; pop rbp ; ret
0x0000000000404e24 : add esp, 0x138 ; pop rbx ; pop rbp ; ret
0x000000000040628c : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000402148 : add esp, 0x20 ; pop rbp ; ret
0x0000000000401a0d : add esp, 0x30 ; pop rbp ; ret
0x00000000004022e1 : add esp, 0x40 ; pop rbp ; ret
0x000000000040549c : add esp, 0x50 ; pop rbp ; ret
0x00000000004035a9 : add esp, 0x60 ; pop rbp ; ret
0x0000000000403f33 : add esp, 0x70 ; pop rbp ; ret
0x0000000000404fde : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004053ad : add esp, 0x90 ; pop rbp ; ret
0x0000000000406124 : add esp, 0xa0 ; pop rbp ; ret
0x0000000000406d3f : add esp, 0xe0 ; pop rbp ; ret
0x00000000004012f6 : add esp, 8 ; ret
0x000000000040172a : add rax, rdx ; sar rax, 1 ; jne 0x40173d ; pop rbp ; ret
0x0000000000405028 : add rdx, rcx ; mov rdi, qword ptr [rdx + 8] ; call 0x401329
0x00000000004018fa : add rsp, 0x10 ; pop rbp ; ret
0x000000000040789b : add rsp, 0x130 ; pop rbp ; ret
0x0000000000404e23 : add rsp, 0x138 ; pop rbx ; pop rbp ; ret
0x000000000040628b : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000402147 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000401a0c : add rsp, 0x30 ; pop rbp ; ret
0x00000000004022e0 : add rsp, 0x40 ; pop rbp ; ret
0x000000000040549b : add rsp, 0x50 ; pop rbp ; ret
0x00000000004035a8 : add rsp, 0x60 ; pop rbp ; ret
0x0000000000403f32 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000404fdd : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004053ac : add rsp, 0x90 ; pop rbp ; ret
0x0000000000406123 : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000406d3e : add rsp, 0xe0 ; pop rbp ; ret
0x00000000004012f5 : add rsp, 8 ; ret
0x0000000000403314 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401767 : and byte ptr [rax], al ; add ebx, esi ; ret
0x00000000004053e7 : and eax, 0x48fffffd ; add esp, 0x20 ; pop rbp ; ret
0x0000000000401ab8 : and eax, 0x60b2c1 ; add dh, al ; add al, 0x25 ; ret 0x60b2
0x0000000000401ac0 : and eax, 0x60b2c2 ; add dh, al ; add al, 0x25 ; ret
0x00000000004037cf : and eax, 0x6162f0 ; pop rbp ; ret
0x00000000004037f3 : and eax, 0x6162f8 ; pop rbp ; ret
0x000000000040502f : call 0x401322
0x000000000040512a : call 0x401342
0x0000000000405247 : call 0x401482
0x0000000000401cb5 : call 0x4017a8
0x0000000000404e59 : call 0xffffffffe902d7a9
0x0000000000404e58 : call 0xffffffffe902d7aa
0x0000000000407d59 : call qword ptr [r12 + rbx*8]
0x000000000040940b : call qword ptr [rsi]
0x0000000000407d5a : call qword ptr [rsp + rbx*8]
0x000000000040178d : call rax
0x000000000040992b : call rdx
0x000000000040789a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x000000000040648f : clc ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004059e1 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040172f : clc ; jne 0x401738 ; pop rbp ; ret
0x0000000000405ae1 : clc ; mov al, byte ptr [rax] ; jmp rcx
0x0000000000403de5 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000407cab : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402baa : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040505d : clc ; mov rdi, qword ptr [rax + 8] ; call 0x401327
0x000000000040505c : clc ; mov rdi, qword ptr [rax + 8] ; call 0x401328
0x0000000000405098 : clc ; mov rdi, rax ; call 0x401326
0x0000000000405097 : clc ; mov rdi, rax ; call 0x401327
0x0000000000402bae : clc ; pop rbp ; ret
0x0000000000406da8 : cld ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000401927 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406ef9 : cld ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407074 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004022df : cld ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000406d3d : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x0000000000407ca8 : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000406f53 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406ef6 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407071 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004022dc : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000406daf : cld ; pop rbp ; ret
0x0000000000404e26 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004016ed : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401700 ; pop rbp ; ret
0x00000000004012f1 : cmp eax, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000405adc : cwde ; mov rcx, qword ptr [rax*8 + 0x408af8] ; jmp rcx
0x0000000000401c9f : dec dword ptr [rax - 0x77] ; ret 0x8d8b
0x00000000004077ff : dec dword ptr [rax - 0x7f] ; ret 1
0x0000000000404f0b : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000404843 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000407d5c : fmul qword ptr [rax - 0x7d] ; ret
0x00000000004018f9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402ed9 : hlt ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401700 : hlt ; pop rbp ; mov edi, 0x60b260 ; jmp rax
0x0000000000406e0d : in al, dx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405030 : in al, dx ; ret 0xffff
0x00000000004020fc : inc dword ptr [rcx + 0x20f9] ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x0000000000401cb9 : inc esi ; add al, 0x25 ; ret
0x000000000040916c : insb byte ptr [rdi], dx ; or dword ptr [rax], eax ; add ah, cl ; ret
0x00000000004060e0 : int 0x80
0x00000000004016f3 : ja 0x4016fa ; pop rbp ; ret
0x00000000004016ff : je 0x4016fd ; pop rbp ; mov edi, 0x60b260 ; jmp rax
0x000000000040138b : jmp 0x401307
0x0000000000401ccf : jmp 0x401d77
0x00000000004024b1 : jmp 0x4025ad
0x0000000000402437 : jmp 0x4025b2
0x0000000000403208 : jmp 0x4032a9
0x00000000004031c8 : jmp 0x4032ae
0x0000000000409acb : jmp qword ptr [rax]
0x00000000004099ab : jmp qword ptr [rdx]
0x00000000004094eb : jmp qword ptr [rsi]
0x0000000000401707 : jmp rax
0x0000000000401c6c : jmp rcx
0x0000000000401747 : jmp rdx
0x000000000040958b : jmp rsi
0x0000000000409003 : jmp rsp
0x0000000000401730 : jne 0x401737 ; pop rbp ; ret
0x0000000000403f35 : jo 0x403f96 ; ret
0x0000000000405644 : jo 0x4056a5 ; ret
0x000000000040577e : jo 0x4057df ; ret
0x000000000040502d : jp 0x40503b ; call 0x401324
0x0000000000404fe0 : js 0x405040 ; pop rbp ; ret
0x0000000000405060 : js 0x40506e ; call 0x401324
0x000000000040916b : ljmp ptr [rcx + rcx] ; add ah, cl ; ret
0x0000000000400284 : lodsd eax, dword ptr [rsi] ; or eax, 0xf9bcd660 ; ret 0xd3c0
0x0000000000405242 : loop 0x40524f ; mov rdi, rax ; call 0x401487
0x0000000000402972 : loopne 0x4029c2 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000402971 : loopne 0x4029c3 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000402cb3 : loopne 0x402c38 ; ret 2
0x0000000000403a5b : loopne 0x403aab ; add esp, 0x20 ; pop rbp ; ret
0x0000000000403a5a : loopne 0x403aac ; add esp, 0x20 ; pop rbp ; ret
0x0000000000406d41 : loopne 0x406d48 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040551b : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004053ab : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000408a51 : mov al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000405ae2 : mov al, byte ptr [rax] ; jmp rcx
0x0000000000403311 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004037f1 : mov byte ptr [0x6162f8], al ; pop rbp ; ret
0x0000000000403717 : mov byte ptr [rax + 0x10], dl ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401763 : mov byte ptr [rip + 0x209b4e], 1 ; ret
0x0000000000402623 : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403317 : mov dh, -0x40 ; pop rbp ; ret
0x0000000000409929 : mov dh, -1 ; call rdx
0x00000000004037cd : mov dword ptr [0x6162f0], edi ; pop rbp ; ret
0x0000000000403de6 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000403cf4 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000403da8 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000405123 : mov dword ptr [rbp - 0x18], edx ; mov qword ptr [rbp - 0x20], rcx ; call 0x401349
0x0000000000402970 : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405127 : mov dword ptr [rbp - 0x20], ecx ; call 0x401345
0x0000000000401a09 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004018f7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401925 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407ca9 : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402ba8 : mov dword ptr [rbp - 8], eax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000403e5e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402821 : mov dword ptr [rcx + 8], eax ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000404fdc : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000403ca8 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004063ab : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403a1c : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403ca5 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000402d54 : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000406e0b : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406643 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403c5d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403cee : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000403daa : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000403f2f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000404fda : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000405519 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000403794 : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402ed7 : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406f54 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406ef7 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407072 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004022dd : mov eax, dword ptr [rbp - 4] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000406dad : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040648d : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004059df : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040505b : mov eax, dword ptr [rbp - 8] ; mov rdi, qword ptr [rax + 8] ; call 0x401329
0x0000000000405096 : mov eax, dword ptr [rbp - 8] ; mov rdi, rax ; call 0x401328
0x0000000000402bac : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040178b : mov ebp, esp ; call rax
0x00000000004016f1 : mov ebp, esp ; ja 0x4016fc ; pop rbp ; ret
0x0000000000401c65 : mov ecx, dword ptr [rax*8 + 0x407dd0] ; jmp rcx
0x0000000000403fe7 : mov ecx, dword ptr [rax*8 + 0x4085f0] ; jmp rcx
0x00000000004042c7 : mov ecx, dword ptr [rax*8 + 0x408638] ; jmp rcx
0x0000000000405ade : mov ecx, dword ptr [rax*8 + 0x408af8] ; jmp rcx
0x0000000000406b7d : mov ecx, dword ptr [rax*8 + 0x408e70] ; jmp rcx
0x0000000000406afd : mov ecx, dword ptr [rax*8 + 0x408ed0] ; jmp rcx
0x0000000000403cf1 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401785 : mov edi, 0x60ae20 ; mov rbp, rsp ; call rax
0x0000000000401702 : mov edi, 0x60b260 ; jmp rax
0x0000000000401742 : mov edi, 0x60b260 ; jmp rdx
0x00000000004094e9 : mov edi, dr1 ; jmp qword ptr [rsi]
0x000000000040505f : mov edi, dword ptr [rax + 8] ; call 0x401325
0x000000000040502c : mov edi, dword ptr [rdx + 8] ; call 0x401325
0x000000000040509a : mov edi, eax ; call 0x401324
0x0000000000405245 : mov edi, eax ; call 0x401484
0x0000000000407d57 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000407d56 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000406b01 : mov es, word ptr [rax] ; jmp rcx
0x0000000000401740 : mov esi, eax ; mov edi, 0x60b260 ; jmp rdx
0x00000000004037cc : mov qword ptr [0x6162f0], rdi ; pop rbp ; ret
0x0000000000405126 : mov qword ptr [rbp - 0x20], rcx ; call 0x401346
0x0000000000402ba7 : mov qword ptr [rbp - 8], rax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000403e5d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040551a : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000404fdb : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x00000000004063aa : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403a1b : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403ca4 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000402d53 : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000406642 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403c5c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403f2e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000405518 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040648c : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004059de : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000405095 : mov rax, qword ptr [rbp - 8] ; mov rdi, rax ; call 0x401329
0x0000000000402bab : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040178a : mov rbp, rsp ; call rax
0x00000000004016f0 : mov rbp, rsp ; ja 0x4016fd ; pop rbp ; ret
0x0000000000401c64 : mov rcx, qword ptr [rax*8 + 0x407dd0] ; jmp rcx
0x0000000000403fe6 : mov rcx, qword ptr [rax*8 + 0x4085f0] ; jmp rcx
0x00000000004042c6 : mov rcx, qword ptr [rax*8 + 0x408638] ; jmp rcx
0x0000000000405add : mov rcx, qword ptr [rax*8 + 0x408af8] ; jmp rcx
0x0000000000406b7c : mov rcx, qword ptr [rax*8 + 0x408e70] ; jmp rcx
0x0000000000406afc : mov rcx, qword ptr [rax*8 + 0x408ed0] ; jmp rcx
0x000000000040505e : mov rdi, qword ptr [rax + 8] ; call 0x401326
0x000000000040502b : mov rdi, qword ptr [rdx + 8] ; call 0x401326
0x0000000000405099 : mov rdi, rax ; call 0x401325
0x0000000000405244 : mov rdi, rax ; call 0x401485
0x000000000040173f : mov rsi, rax ; mov edi, 0x60b260 ; jmp rdx
0x0000000000409464 : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add al, cl ; test bh, bh ; jmp rdx
0x0000000000409c64 : movsb byte ptr [rdi], byte ptr [rsi] ; or byte ptr [rax], al ; add al, cl ; ret
0x0000000000402622 : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403316 : movzx eax, al ; pop rbp ; ret
0x0000000000407d78 : nop dword ptr [rax + rax] ; ret
0x0000000000405adf : or al, 0xffffffffffffffc5 ; clc ; mov al, byte ptr [rax] ; jmp rcx
0x000000000040502e : or al, ch ; in al, dx ; ret 0xffff
0x000000000040483e : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040483f : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000409c65 : or byte ptr [rax], al ; add al, cl ; ret
0x000000000040916d : or dword ptr [rax], eax ; add ah, cl ; ret
0x0000000000400285 : or eax, 0xf9bcd660 ; ret 0xd3c0
0x0000000000405701 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004024b2 : out dx, eax ; add byte ptr [rax], al ; add dh, dh ; add al, 0x25 ; ret 0x60b2
0x0000000000402438 : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add dh, dh ; add al, 0x25 ; ret
0x0000000000407d6c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000407d6e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405f9e : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000407d70 : pop r14 ; pop r15 ; ret
0x0000000000405fa0 : pop r15 ; pop rbp ; ret
0x0000000000407d72 : pop r15 ; ret
0x0000000000401762 : pop rbp ; mov byte ptr [rip + 0x209b4e], 1 ; ret
0x0000000000401701 : pop rbp ; mov edi, 0x60b260 ; jmp rax
0x000000000040173e : pop rbp ; mov rsi, rax ; mov edi, 0x60b260 ; jmp rdx
0x0000000000407d6b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000407d6f : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004016f5 : pop rbp ; ret
0x0000000000405f9d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000404e2a : pop rbx ; pop rbp ; ret
0x0000000000405fa1 : pop rdi ; pop rbp ; ret
0x0000000000407d73 : pop rdi ; ret
0x0000000000405f9f : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000407d71 : pop rsi ; pop r15 ; ret
0x0000000000407d6d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040549e : push rax ; pop rbp ; ret
0x0000000000400282 : push rbp ; add byte ptr [rbp - 0x43299ff3], ch ; stc ; ret 0xd3c0
0x0000000000404842 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000401784 : push rbp ; mov edi, 0x60ae20 ; mov rbp, rsp ; call rax
0x000000000040748d : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x0000000000404f0e : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000402cb2 : push rcx ; loopne 0x402c39 ; ret 2
0x0000000000402366 : pushfq ; ret 0x5588
0x00000000004012f9 : ret
0x000000000040213f : ret 0x1489
0x000000000040485b : ret 0x1fe8
0x0000000000401592 : ret 0x209b
0x0000000000401392 : ret 0x209c
0x0000000000402105 : ret 0x5588
0x00000000004026de : ret 0x5589
0x0000000000401ac1 : ret 0x60b2
0x0000000000405a99 : ret 0x8844
0x0000000000402775 : ret 0x8948
0x000000000040496d : ret 0x89a5
0x0000000000402fd9 : ret 0x8b48
0x0000000000401ca2 : ret 0x8d8b
0x0000000000401725 : ret 0xc148
0x0000000000403277 : ret 0xd284
0x000000000040028a : ret 0xd3c0
0x0000000000404e5c : ret 0xee8
0x0000000000401b7a : ret 0xffff
0x000000000040517e : ret 1
0x0000000000402cb5 : ret 2
0x0000000000404f12 : ret 8
0x000000000040502a : retf -0x74b8 ; jp 0x40503e ; call 0x401327
0x00000000004060db : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000403f30 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x403f9b ; ret
0x000000000040172c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40173b ; pop rbp ; ret
0x00000000004060dc : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000403f31 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x403f9a ; ret
0x000000000040748e : ror byte ptr [rax - 0x7f], 1 ; ret 1
0x0000000000404f0f : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000040172e : sar eax, 1 ; jne 0x401739 ; pop rbp ; ret
0x0000000000409169 : sar edi, -1 ; insb byte ptr [rdi], dx ; or dword ptr [rax], eax ; add ah, cl ; ret
0x000000000040172d : sar rax, 1 ; jne 0x40173a ; pop rbp ; ret
0x0000000000409c60 : sbb al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; or byte ptr [rax], al ; add al, cl ; ret
0x0000000000405241 : shl edx, 4 ; mov rdi, rax ; call 0x401488
0x0000000000405240 : shl rdx, 4 ; mov rdi, rax ; call 0x401489
0x0000000000400289 : stc ; ret 0xd3c0
0x0000000000403313 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000407dad : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000407dac : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000409469 : test bh, bh ; jmp rdx
0x0000000000407d7a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000403feb : test dword ptr [rax], eax ; jmp rcx
0x0000000000401cd0 : wait ; add byte ptr [rax], al ; add dh, al ; add al, 0x25 ; ret 0x60b2
0x0000000000401766 : wait ; and byte ptr [rax], al ; add ebx, esi ; ret
0x00000000004042cb : xchg byte ptr [rax], al ; jmp rcx
0x0000000000403209 : xchg eax, esp ; add byte ptr [rax], al ; add dh, dh ; add al, 0x25 ; ret 0x60b2
0x0000000000402104 : xchg eax, esp ; ret 0x5588
0x0000000000403276 : xchg eax, esp ; ret 0xd284
0x000000000040789e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000403da6 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
