0x00000000004264f9 : adc bh, bh ; jmp qword ptr [rbx]
0x000000000042530e : adc byte ptr [rcx], dh ; imul cl ; stosb byte ptr [rdi], al ; ret 0xfffd
0x0000000000411a5e : adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x00000000004113d1 : adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x0000000000419acb : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041255b : adc eax, 0x558abda1 ; ret
0x0000000000415b39 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000425d19 : adc edi, edi ; jmp rsp
0x0000000000423f4a : add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000041cd37 : add al, bpl ; ret 0xfe46
0x00000000004264f7 : add al, ch ; adc bh, bh ; jmp qword ptr [rbx]
0x0000000000405343 : add al, ch ; push rdi ; ret 0xffff
0x000000000041cd38 : add al, ch ; ret 0xfe46
0x0000000000416cf8 : add al, ch ; ret 0xfea5
0x0000000000426a1f : add al, dl ; mov dh, -1 ; call rdi
0x000000000041e0e1 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rax]
0x000000000041e0a0 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rcx]
0x0000000000405887 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; jmp rax
0x0000000000405870 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; jmp rcx
0x00000000004197a4 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000412399 : add bh, al ; test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x00000000004252ef : add bl, dh ; ret
0x0000000000420862 : add byte ptr [r8], al ; add byte ptr [rcx], al ; ret 0xea81
0x0000000000420ac4 : add byte ptr [r8], al ; add byte ptr [rcx], ch ; ret 0x5589
0x0000000000425c97 : add byte ptr [rax + rbx - 2], ch ; call rsp
0x0000000000416afb : add byte ptr [rax - 0x75], cl ; clc ; mov rsp, rbp ; pop rbp ; ret
0x0000000000402f6b : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000042663f : add byte ptr [rax], ah ; cmp bh, bh ; call qword ptr [rdx]
0x0000000000405341 : add byte ptr [rax], al ; add al, ch ; push rdi ; ret 0xffff
0x0000000000416cf6 : add byte ptr [rax], al ; add al, ch ; ret 0xfea5
0x000000000041e0df : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rax]
0x0000000000405885 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; jmp rax
0x000000000040586e : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; jmp rcx
0x00000000004197a2 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x00000000004252ed : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000402f69 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004252eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004252ec : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000402efe : add byte ptr [rax], al ; add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x00000000004155a2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000417f63 : add byte ptr [rax], al ; add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x000000000042461c : add byte ptr [rax], al ; add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x000000000041a8c9 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x0000000000402bb0 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000420863 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xea81
0x0000000000420ac5 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x5589
0x0000000000419710 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8b48
0x000000000040535c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; lahf ; ret 0xd284
0x000000000041fc31 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x00000000004237b1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000041ccf7 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000405c6b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004051d4 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000041969a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000417c75 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041e3ab : add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000415b3b : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004151c0 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000419acd : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000424cc8 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040127b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004264f6 : add byte ptr [rax], al ; call 0x24426414
0x0000000000405342 : add byte ptr [rax], al ; call 0x4015a4
0x0000000000402bff : add byte ptr [rax], al ; call 0x401718
0x0000000000425c96 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; sbb dh, bh ; call rsp
0x00000000004013f9 : add byte ptr [rax], al ; jmp 0x401299
0x000000000041e3a7 : add byte ptr [rax], al ; jmp 0x41e3b6
0x000000000041e44f : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x00000000004208a8 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040533d : add byte ptr [rax], al ; mov edi, 0x54 ; call 0x4015a9
0x0000000000402f6a : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000042640e : add byte ptr [rax], al ; or al, 0xffffffff ; call rdx
0x0000000000401b2b : add byte ptr [rax], al ; pop rbp ; ret
0x00000000004155a3 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000402dda : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000425ece : add byte ptr [rax], al ; pushfq ; idiv bh ; call rsp
0x00000000004252ee : add byte ptr [rax], al ; ret
0x0000000000425c16 : add byte ptr [rax], al ; sbb al, -0x3c ; std ; call rsp
0x0000000000425c56 : add byte ptr [rax], al ; sbb al, -3 ; std ; call rsp
0x0000000000425205 : add byte ptr [rbp - 0x3d], bl ; mov rdi, qword ptr [rbp - 0x28] ; call 0x4014e9
0x0000000000402f00 : add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x00000000004155a4 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000402ddb : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000417f65 : add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x0000000000417f1a : add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x000000000042461e : add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x00000000004208a9 : add byte ptr [rbx - 0x76b71fbb], cl ; in al, dx ; pop rbp ; ret
0x000000000041a8cb : add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x0000000000402bb2 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000041980e : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004016d8 : add byte ptr [rcx], al ; ret
0x0000000000420865 : add byte ptr [rcx], al ; ret 0xea81
0x0000000000420ac7 : add byte ptr [rcx], ch ; ret 0x5589
0x0000000000419712 : add byte ptr [rcx], ch ; ret 0x8b48
0x000000000040533e : add byte ptr [rdi + 0x54], bh ; call 0x4015a8
0x0000000000425cd7 : add byte ptr [rdi + rcx - 1], bl ; jmp rsp
0x000000000040535e : add byte ptr [rdi], cl ; lahf ; ret 0xd284
0x000000000041fc33 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x00000000004237b3 : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000041ccf9 : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000405c6d : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004051d6 : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000041969c : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000417c77 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000425c17 : add byte ptr [rsp + rax*8], bl ; std ; call rsp
0x0000000000425dcf : add byte ptr [rsp + rcx*2 - 1], bl ; call rsp
0x00000000004124cc : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x00000000004022fe : add cl, ch ; ret
0x00000000004026ff : add cl, ch ; ret 1
0x000000000041e09e : add dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rcx]
0x0000000000402dd9 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000041fdb2 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x000000000041ec04 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000041edee : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004016d4 : add eax, 0x225bde ; add ebx, esi ; ret
0x000000000041e003 : add eax, 0x5d5b0000 ; ret
0x0000000000425c15 : add eax, dword ptr [rax] ; add byte ptr [rsp + rax*8], bl ; std ; call rsp
0x000000000040169b : add eax, edx ; sar rax, 1 ; jne 0x4016ac ; pop rbp ; ret
0x00000000004016d9 : add ebx, esi ; ret
0x0000000000426121 : add edi, esi ; call qword ptr [rdx]
0x0000000000401c5b : add esp, 0x10 ; pop rbp ; ret
0x000000000041980c : add esp, 0x100 ; pop rbp ; ret
0x000000000041997c : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000402dd6 : add esp, 0x1e8 ; pop rbx ; pop rbp ; ret
0x00000000004151c3 : add esp, 0x20 ; pop rbp ; ret
0x0000000000405525 : add esp, 0x2e0 ; pop rbp ; ret
0x0000000000419ad0 : add esp, 0x40 ; pop rbp ; ret
0x0000000000424149 : add esp, 0x440 ; pop rbp ; ret
0x0000000000403d42 : add esp, 0x50 ; pop rbp ; ret
0x000000000041e000 : add esp, 0x598 ; pop rbx ; pop rbp ; ret
0x000000000041a9f0 : add esp, 0x60 ; pop rbp ; ret
0x0000000000416eb2 : add esp, 0x70 ; pop rbp ; ret
0x000000000040406f : add esp, 0x80 ; pop rbp ; ret
0x000000000041a14d : add esp, 0x90 ; pop rbp ; ret
0x0000000000417c96 : add esp, 0xa0 ; pop rbp ; ret
0x0000000000401fa1 : add esp, 0xb0 ; pop rbp ; ret
0x0000000000401b27 : add esp, 0xc0 ; pop rbp ; ret
0x0000000000405e4a : add esp, 0xd0 ; pop rbp ; ret
0x000000000042486e : add esp, 0xe0 ; pop rbp ; ret
0x00000000004058de : add esp, 0xf0 ; pop rbp ; ret
0x0000000000406453 : add esp, 8 ; pop rbp ; ret
0x000000000040127e : add esp, 8 ; ret
0x000000000040169a : add rax, rdx ; sar rax, 1 ; jne 0x4016ad ; pop rbp ; ret
0x0000000000401c5a : add rsp, 0x10 ; pop rbp ; ret
0x000000000041980b : add rsp, 0x100 ; pop rbp ; ret
0x000000000041997b : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000402dd5 : add rsp, 0x1e8 ; pop rbx ; pop rbp ; ret
0x00000000004151c2 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000405524 : add rsp, 0x2e0 ; pop rbp ; ret
0x0000000000419acf : add rsp, 0x40 ; pop rbp ; ret
0x0000000000424148 : add rsp, 0x440 ; pop rbp ; ret
0x0000000000403d41 : add rsp, 0x50 ; pop rbp ; ret
0x000000000041dfff : add rsp, 0x598 ; pop rbx ; pop rbp ; ret
0x000000000041a9ef : add rsp, 0x60 ; pop rbp ; ret
0x0000000000416eb1 : add rsp, 0x70 ; pop rbp ; ret
0x000000000040406e : add rsp, 0x80 ; pop rbp ; ret
0x000000000041a14c : add rsp, 0x90 ; pop rbp ; ret
0x0000000000417c95 : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000401fa0 : add rsp, 0xb0 ; pop rbp ; ret
0x0000000000401b26 : add rsp, 0xc0 ; pop rbp ; ret
0x0000000000405e49 : add rsp, 0xd0 ; pop rbp ; ret
0x000000000042486d : add rsp, 0xe0 ; pop rbp ; ret
0x00000000004058dd : add rsp, 0xf0 ; pop rbp ; ret
0x0000000000406452 : add rsp, 8 ; pop rbp ; ret
0x000000000040127d : add rsp, 8 ; ret
0x000000000042086d : and al, 0xffffffffffffff81 ; ret 0x61
0x000000000041ec03 : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000041eded : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004016d7 : and al, byte ptr [rax] ; add ebx, esi ; ret
0x000000000041a5fb : and byte ptr [rsi + 0x58], ah ; jb 0x41a632 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000411701 : and eax, 0x75b4b9d3 ; ret
0x000000000041e44d : and eax, 0x8b000000 ; in al, dx ; pop rbp ; ret
0x00000000004264f8 : call 0x24426412
0x000000000042520c : call 0x4014e2
0x0000000000405344 : call 0x4015a2
0x0000000000402c01 : call 0x401716
0x000000000041a9f5 : call 0x41aab9
0x0000000000402132 : call 0xffffffff8085aa90
0x0000000000424bbd : call 0xffffffffaca30df1
0x0000000000424bbc : call 0xffffffffaca30df2
0x00000000004151b9 : call 0xffffffffe903db09
0x00000000004151b8 : call 0xffffffffe903db0a
0x0000000000405861 : call 0xffffffffff9cde33
0x0000000000405860 : call 0xffffffffff9cde34
0x00000000004252c9 : call qword ptr [r12 + rbx*8]
0x000000000041e0e7 : call qword ptr [rax]
0x000000000041697e : call qword ptr [rbx]
0x00000000004241ec : call qword ptr [rcx]
0x0000000000414644 : call qword ptr [rdi]
0x000000000041062b : call qword ptr [rdx]
0x00000000004252ca : call qword ptr [rsp + rbx*8]
0x00000000004016fd : call rax
0x00000000004128ab : call rcx
0x0000000000414284 : call rdi
0x0000000000413ab5 : call rdx
0x0000000000402eab : call rsp
0x0000000000416cf5 : cdq ; add byte ptr [rax], al ; add al, ch ; ret 0xfea5
0x0000000000424147 : clc ; add rsp, 0x440 ; pop rbp ; ret
0x0000000000419d57 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x000000000041ea39 : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x00000000004058dc : clc ; add rsp, 0xf0 ; pop rbp ; ret
0x000000000040169f : clc ; jne 0x4016a8 ; pop rbp ; ret
0x000000000041e6ae : clc ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000416aff : clc ; mov rsp, rbp ; pop rbp ; ret
0x0000000000407c8d : clc ; ret 0x77a8
0x00000000004251fe : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000042154d : cld ; add rsp, 0xf0 ; pop rbp ; ret
0x0000000000402f2f : cld ; jmp 0x402f9c
0x0000000000402f2e : cld ; jmp 0x402f9d
0x000000000041a600 : cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000404ea2 : cli ; ret
0x000000000042086c : cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x000000000041951b : cmc ; ret 0x4f0b
0x0000000000426641 : cmp bh, bh ; call qword ptr [rdx]
0x00000000004196b1 : cmp cl, byte ptr [rsi - 0x946182f] ; ret 0x4f0b
0x000000000041b3b7 : cmp dl, al ; ret
0x0000000000402131 : cmp eax, 0x458952e8 ; or byte ptr [rdi], 0x8f ; ret 6
0x000000000041d489 : cmp eax, 0xb95a1a7d ; salc ; jmp qword ptr [rdi]
0x000000000040165d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401670 ; pop rbp ; ret
0x0000000000412557 : cmp esp, dword ptr [rbp - 0x47] ; push -0x75425eeb ; push rbp ; ret
0x000000000041e002 : cwde ; add eax, 0x5d5b0000 ; ret
0x0000000000411a5b : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x00000000004113ce : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x0000000000411bd3 : dec dword ptr [rax - 0x75] ; or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x000000000041a72d : dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x0000000000423ca6 : dec dword ptr [rax - 0x77] ; ret 0x8148
0x00000000004053c7 : dec dword ptr [rax - 0x77] ; ret 0x8348
0x00000000004187eb : dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000419516 : dec dword ptr [rcx - 0xa167e3f] ; ret 0x4f0b
0x000000000040796a : dec dword ptr [rdi] ; test byte ptr [rcx], ch ; ret 0
0x00000000004022f8 : dec dword ptr [rdi] ; test dl, bl ; or al, byte ptr [rax] ; add cl, ch ; ret
0x0000000000423ad3 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x0000000000402905 : enter -1, -1 ; inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x8445
0x0000000000423729 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000405c69 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004016d5 : ficomp word ptr [rbx + 0x22] ; add byte ptr [rcx], al ; ret
0x000000000041e26b : fisttp dword ptr [rbp - 0x77] ; sbb al, bh ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rbx]
0x000000000041ee28 : fld qword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000402cf5 : fmul dword ptr [r15] ; xchg eax, edx ; ret 0xd284
0x0000000000424307 : fmul dword ptr [r9 - 0x57167e3f] ; ret
0x0000000000424308 : fmul dword ptr [rcx - 0x57167e3f] ; ret
0x0000000000402cf6 : fmul dword ptr [rdi] ; xchg eax, edx ; ret 0xd284
0x00000000004252cc : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000401c59 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042486c : hlt ; add rsp, 0xe0 ; pop rbp ; ret
0x0000000000406451 : hlt ; add rsp, 8 ; pop rbp ; ret
0x0000000000401670 : hlt ; pop rbp ; mov edi, 0x627250 ; jmp rax
0x0000000000425ed1 : idiv bh ; call rsp
0x000000000041a72b : idiv edi ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x0000000000425310 : imul cl ; stosb byte ptr [rdi], al ; ret 0xfffd
0x000000000041736c : imul esi, eax, 0x9b358b4c ; jmp qword ptr [rax]
0x0000000000420e91 : in al, 0x48 ; add esp, 0xb0 ; pop rbp ; ret
0x0000000000424c7c : in al, dx ; jmp 0x424cf9
0x0000000000424c7b : in al, dx ; jmp 0x424cfa
0x0000000000402f6e : in al, dx ; pop rbp ; ret
0x0000000000402909 : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x8445
0x000000000041e139 : inc edi ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rbx]
0x000000000041ae76 : insb byte ptr [rdi], dx ; ret 0x9e6d
0x0000000000425c98 : insb byte ptr [rdi], dx ; sbb dh, bh ; call rsp
0x000000000041aeca : insd dword ptr [rdi], dx ; ret 0x9e6d
0x0000000000417667 : int 0x5b
0x0000000000426001 : iretd ; std ; call qword ptr [rcx]
0x0000000000401663 : ja 0x40166a ; pop rbp ; ret
0x000000000041a5fe : jb 0x41a62f ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000040166f : je 0x40166d ; pop rbp ; mov edi, 0x627250 ; jmp rax
0x000000000042530a : je 0x42531f ; mov rdx, qword ptr [rax] ; xor esi, esi ; jmp 0x4015c9
0x0000000000410af6 : jge 0x410a7b ; ret 0xffd5
0x00000000004115c0 : jge 0x4115a0 ; shr cl, cl ; ret 0x3b
0x000000000042520a : jge 0x4251e8 ; call 0x4014e4
0x00000000004013fb : jmp 0x401297
0x0000000000425311 : jmp 0x4015c2
0x0000000000402c03 : jmp 0x402c08
0x0000000000402e52 : jmp 0x402e86
0x0000000000402f30 : jmp 0x402f9b
0x0000000000411d10 : jmp 0x415190
0x000000000040fc14 : jmp 0x415191
0x0000000000410fe1 : jmp 0x415192
0x0000000000416cf4 : jmp 0x416d98
0x000000000041893b : jmp 0x4193a7
0x0000000000418878 : jmp 0x4193a9
0x000000000041a9a3 : jmp 0x41aa08
0x000000000041d13b : jmp 0x41e280
0x000000000041db56 : jmp 0x41e281
0x000000000041e3a9 : jmp 0x41e3b4
0x0000000000423fe6 : jmp 0x4242c8
0x0000000000424c7d : jmp 0x424cf8
0x000000000041951a : jmp 0x4f4d5816
0x0000000000414ae5 : jmp qword ptr [rax]
0x00000000004262b3 : jmp qword ptr [rbx]
0x00000000004068e2 : jmp qword ptr [rcx]
0x0000000000412797 : jmp qword ptr [rdi]
0x00000000004197aa : jmp qword ptr [rdx]
0x0000000000417388 : jmp qword ptr fs:[rax]
0x0000000000401677 : jmp rax
0x00000000004110e8 : jmp rbx
0x0000000000405876 : jmp rcx
0x0000000000411142 : jmp rdi
0x00000000004016b7 : jmp rdx
0x000000000042653b : jmp rsi
0x00000000004113f8 : jmp rsp
0x00000000004016a0 : jne 0x4016a7 ; pop rbp ; ret
0x000000000040aa0e : jo 0x40aa1a ; ret
0x000000000040c67e : jo 0x40c68a ; ret
0x000000000040fbcd : jo 0x40fbd9 ; ret
0x0000000000416eb4 : jo 0x416f15 ; ret
0x0000000000405360 : lahf ; ret 0xd284
0x00000000004115be : lcall ptr [rbx - 0x162d2583] ; ret 0x3b
0x00000000004126be : lcall ptr [rsi] ; pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x0000000000403736 : lea eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000407305 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004171a9 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000407304 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040ff1e : ljmp ptr [rdi] ; ret 0x23da
0x0000000000412f25 : loope 0x412ef3 ; jmp 0x415193
0x0000000000405527 : loopne 0x405530 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000407303 : loopne 0x407356 ; lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004168ad : loopne 0x416913 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000417c94 : loopne 0x417ce7 ; add esp, 0xa0 ; pop rbp ; ret
0x000000000041a063 : loopne 0x41a06c ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041a9ee : loopne 0x41aa3e ; add esp, 0x60 ; pop rbp ; ret
0x000000000041a9ed : loopne 0x41aa3f ; add esp, 0x60 ; pop rbp ; ret
0x00000000004208ac : loopne 0x4208fb ; mov esp, ebp ; pop rbp ; ret
0x00000000004208ab : loopne 0x4208fc ; mov esp, ebp ; pop rbp ; ret
0x0000000000420afc : loopne 0x420b4b ; mov esp, ebp ; pop rbp ; ret
0x0000000000420afb : loopne 0x420b4c ; mov esp, ebp ; pop rbp ; ret
0x0000000000424870 : loopne 0x424877 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000425202 : loopne 0x425209 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000410aed : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000410bc7 : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000040eb75 : mov ah, 0x75 ; ret
0x0000000000425ecc : mov ah, 0xe ; add byte ptr [rax], al ; pushfq ; idiv bh ; call rsp
0x0000000000425c14 : mov ah, 3 ; add byte ptr [rax], al ; sbb al, -0x3c ; std ; call rsp
0x0000000000425c54 : mov ah, 4 ; add byte ptr [rax], al ; sbb al, -3 ; std ; call rsp
0x0000000000425c94 : mov ah, 5 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; sbb dh, bh ; call rsp
0x0000000000417683 : mov al, -0x47 ; ret
0x00000000004237af : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000401fa3 : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041f11d : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041edea : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041f04d : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000408515 : mov bl, 0x75 ; ret
0x00000000004016d3 : mov byte ptr [rip + 0x225bde], 1 ; ret
0x000000000041036f : mov ch, byte ptr [rdx - 0x47] ; pop rbp ; pop rcx ; ret 0x1b2
0x000000000041fdb4 : mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x000000000041ec06 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000041edf0 : mov dh, -0x40 ; pop rbp ; ret
0x0000000000426a21 : mov dh, -1 ; call rdi
0x000000000042086a : mov dl, -0x34 ; cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x000000000041fae1 : mov dr1, word ptr [rcx + rcx*4 - 0x7bf05bbb] ; ret 2
0x0000000000406a89 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040665f : mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x0000000000424c7a : mov dword ptr [rbp - 0x14], eax ; jmp 0x424cfb
0x0000000000416cf1 : mov dword ptr [rbp - 0x44], eax ; jmp 0x416d9b
0x0000000000418938 : mov dword ptr [rbp - 0x6c], eax ; jmp 0x4193aa
0x0000000000401c57 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406d66 : mov dword ptr [rcx + 0x30], eax ; mov rsp, rbp ; pop rbp ; ret
0x000000000040690d : mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000406189 : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000041a86b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041e451 : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000041aa3e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403d3e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000424af5 : mov eax, dword ptr [rbp - 0x18] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000406a8c : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000041a9ec : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004208aa : mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040690f : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000040644f : mov eax, dword ptr [rbp - 0xc] ; add rsp, 8 ; pop rbp ; ret
0x000000000041e6ac : mov eax, dword ptr [rbp - 8] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000416afd : mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040690e : mov eax, dword ptr ds:[rbp - 0x38] ; pop rbp ; ret
0x0000000000413328 : mov ebp, 0xe19c53ba ; ret
0x00000000004016fb : mov ebp, esp ; call rax
0x0000000000401661 : mov ebp, esp ; ja 0x40166c ; pop rbp ; ret
0x0000000000401f2e : mov ebx, 0xb9c5042a ; ret 0x14d1
0x000000000040665c : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x000000000040533f : mov edi, 0x54 ; call 0x4015a7
0x00000000004016f5 : mov edi, 0x626e20 ; mov rbp, rsp ; call rax
0x0000000000401672 : mov edi, 0x627250 ; jmp rax
0x00000000004016b2 : mov edi, 0x627250 ; jmp rdx
0x000000000041cfb6 : mov edi, 0xb8000012 ; insd dword ptr [rdi], dx ; ret 0x9e6d
0x000000000040fbc7 : mov edi, 0xb8000055 ; wait ; jo 0x40fbdf ; ret
0x0000000000425209 : mov edi, dword ptr [rbp - 0x28] ; call 0x4014e5
0x00000000004252c7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000425e11 : mov edi, edi ; call rsp
0x00000000004252c6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000423f5e : mov edx, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000041038b : mov edx, 0x595db993 ; ret 0x8b48
0x000000000042530d : mov edx, dword ptr [rax] ; xor esi, esi ; jmp 0x4015c6
0x0000000000411202 : mov esi, 0x39443e04 ; ret 0xf41
0x0000000000423f47 : mov esi, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x00000000004016b0 : mov esi, eax ; mov edi, 0x627250 ; jmp rdx
0x0000000000416cf3 : mov esp, 0x99e9 ; add al, ch ; ret 0xfea5
0x0000000000402f6d : mov esp, ebp ; pop rbp ; ret
0x0000000000406d65 : mov qword ptr [rcx + 0x30], rax ; mov rsp, rbp ; pop rbp ; ret
0x0000000000416cf2 : mov r12d, 0x99e9 ; add al, ch ; ret 0xfea5
0x0000000000406188 : mov rax, qword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000041a86a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041aa3d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403d3d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041a9eb : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000416afc : mov rax, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004016fa : mov rbp, rsp ; call rax
0x0000000000401660 : mov rbp, rsp ; ja 0x40166d ; pop rbp ; ret
0x0000000000425208 : mov rdi, qword ptr [rbp - 0x28] ; call 0x4014e6
0x000000000042530c : mov rdx, qword ptr [rax] ; xor esi, esi ; jmp 0x4015c7
0x00000000004016af : mov rsi, rax ; mov edi, 0x627250 ; jmp rdx
0x0000000000402f6c : mov rsp, rbp ; pop rbp ; ret
0x000000000041a601 : mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000417369 : movabs al, byte ptr [0x9b358b4cf069894d] ; jmp qword ptr [rax]
0x000000000040be68 : movabs byte ptr [0x840ffffff3c48589], al ; ret 0x4b
0x000000000040f0b5 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x6a8a
0x000000000041fdb3 : movzx eax, al ; add rsp, 8 ; pop rbp ; ret
0x000000000041ec05 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000041edef : movzx eax, al ; pop rbp ; ret
0x0000000000423d58 : neg byte ptr [rsi + 0x2948e012] ; ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000408355 : nop ; ret
0x0000000000416762 : nop ; ret 0x148
0x0000000000416776 : nop ; ret 0x2948
0x00000000004252e8 : nop dword ptr [rax + rax] ; ret
0x000000000041cd33 : or al, 0x25 ; push rsi ; pop rbx ; add al, bpl ; ret 0xfe46
0x0000000000410aea : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000410bc4 : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000426410 : or al, 0xffffffff ; call rdx
0x0000000000426411 : or al, 0xffffffffffffffff ; call rdx
0x0000000000425dcd : or al, byte ptr [rax] ; add byte ptr [rsp + rcx*2 - 1], bl ; call rsp
0x00000000004022fc : or al, byte ptr [rax] ; add cl, ch ; ret
0x0000000000426311 : or bh, bh ; call rdi
0x0000000000402135 : or byte ptr [r15], 0x8f ; ret 6
0x0000000000406660 : or byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000417f18 : or byte ptr [rax], al ; add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x0000000000402136 : or byte ptr [rdi], 0x8f ; ret 6
0x000000000042530b : or cl, byte ptr [rax - 0x75] ; adc byte ptr [rcx], dh ; imul cl ; stosb byte ptr [rdi], al ; ret 0xfffd
0x0000000000411bd6 : or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x0000000000406d64 : or dword ptr [rax - 0x77], ecx ; xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000426a1d : or eax, dword ptr [rax] ; add al, dl ; mov dh, -1 ; call rdi
0x000000000040690b : or edi, eax ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x00000000004124cb : out dx, al ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x000000000041edec : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041f11f : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000417682 : out dx, eax ; mov al, -0x47 ; ret
0x0000000000423f49 : outsb dx, byte ptr [rsi] ; add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x00000000004135b5 : outsb dx, byte ptr [rsi] ; ret 0x4861
0x0000000000408206 : outsb dx, byte ptr [rsi] ; ret 0x8961
0x0000000000413600 : outsb dx, byte ptr [rsi] ; ret 0xe961
0x00000000004197a1 : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000423f4c : outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000041a5fc : pop ax ; jb 0x41a631 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000414469 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004252dc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004168af : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041446b : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004252de : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041446d : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004252e0 : pop r14 ; pop r15 ; ret
0x0000000000407309 : pop r14 ; pop rbp ; ret
0x000000000041446f : pop r15 ; pop rbp ; ret
0x00000000004252e2 : pop r15 ; ret
0x000000000041a5fd : pop rax ; jb 0x41a630 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004016d2 : pop rbp ; mov byte ptr [rip + 0x225bde], 1 ; ret
0x0000000000401671 : pop rbp ; mov edi, 0x627250 ; jmp rax
0x00000000004016ae : pop rbp ; mov rsi, rax ; mov edi, 0x627250 ; jmp rdx
0x00000000004252db : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041446c : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004252df : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000410372 : pop rbp ; pop rcx ; ret 0x1b2
0x000000000040c645 : pop rbp ; pop rcx ; ret 0x8589
0x000000000041038e : pop rbp ; pop rcx ; ret 0x8b48
0x0000000000401665 : pop rbp ; ret
0x000000000041cd36 : pop rbx ; add al, bpl ; ret 0xfe46
0x00000000004016d6 : pop rbx ; and al, byte ptr [rax] ; add ebx, esi ; ret
0x00000000004168ae : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004155a5 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000407308 : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000402ddc : pop rbx ; pop rbp ; ret
0x0000000000417f20 : pop rbx ; ret
0x0000000000410373 : pop rcx ; ret 0x1b2
0x000000000040aa46 : pop rcx ; ret 0x8589
0x000000000041038f : pop rcx ; ret 0x8b48
0x00000000004126c0 : pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x0000000000414470 : pop rdi ; pop rbp ; ret
0x00000000004252e3 : pop rdi ; ret
0x000000000041446e : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004252e1 : pop rsi ; pop r15 ; ret
0x000000000040730a : pop rsi ; pop rbp ; ret
0x000000000041446a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004252dd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004168b0 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040aa45 : pop rsp ; pop rcx ; ret 0x8589
0x000000000041fc35 : popfq ; ret 0xd284
0x0000000000410370 : push -0x47 ; pop rbp ; pop rcx ; ret 0x1b2
0x000000000041255a : push -0x75425eeb ; push rbp ; ret
0x000000000040f0b8 : push -0x77 ; test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x0000000000425c13 : push qword ptr [rbx + rax - 0x3be40000] ; std ; call rsp
0x0000000000425c53 : push qword ptr [rsp + rax - 0x2e40000] ; std ; call rsp
0x0000000000403d44 : push rax ; pop rbp ; ret
0x00000000004016f4 : push rbp ; mov edi, 0x626e20 ; mov rbp, rsp ; call rax
0x000000000041255f : push rbp ; ret
0x00000000004124f6 : push rbp ; ret 0xd284
0x0000000000410aef : push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000410bc9 : push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000423f4b : push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000405345 : push rdi ; ret 0xffff
0x000000000041cd35 : push rsi ; pop rbx ; add al, bpl ; ret 0xfe46
0x0000000000405340 : push rsp ; add byte ptr [rax], al ; add al, ch ; push rdi ; ret 0xffff
0x0000000000425ed0 : pushfq ; idiv bh ; call rsp
0x00000000004237b5 : pushfq ; ret 0xd284
0x0000000000401281 : ret
0x000000000040796e : ret 0
0x0000000000416763 : ret 0x148
0x0000000000401dfa : ret 0x14d1
0x00000000004136c4 : ret 0x1a
0x000000000040893d : ret 0x1add
0x0000000000410375 : ret 0x1b2
0x0000000000401602 : ret 0x225b
0x0000000000401402 : ret 0x225c
0x00000000004241a8 : ret 0x22e8
0x000000000040928a : ret 0x23da
0x0000000000415f88 : ret 0x279e
0x0000000000411bd9 : ret 0x2948
0x00000000004126c4 : ret 0x2a
0x0000000000410af2 : ret 0x2d50
0x0000000000423aae : ret 0x3040
0x00000000004115c4 : ret 0x3b
0x000000000040e625 : ret 0x3e
0x0000000000411a61 : ret 0x4802
0x0000000000423f4e : ret 0x4815
0x00000000004135b6 : ret 0x4861
0x00000000004034b8 : ret 0x48f0
0x000000000040be71 : ret 0x4b
0x0000000000417487 : ret 0x4cc0
0x00000000004144c8 : ret 0x4cf0
0x000000000041951c : ret 0x4f0b
0x00000000004068bb : ret 0x5589
0x0000000000410d7a : ret 0x5966
0x0000000000418177 : ret 0x5bc6
0x000000000042086f : ret 0x61
0x0000000000407fd6 : ret 0x6a8a
0x0000000000407c8e : ret 0x77a8
0x0000000000408df1 : ret 0x7a8a
0x000000000040fa6b : ret 0x7b7f
0x000000000041641a : ret 0x8041
0x0000000000416662 : ret 0x8141
0x0000000000423ca9 : ret 0x8148
0x0000000000411984 : ret 0x822d
0x00000000004053ca : ret 0x8348
0x000000000040290d : ret 0x8445
0x000000000040aa2c : ret 0x8589
0x0000000000408a03 : ret 0x8940
0x000000000041e22d : ret 0x8941
0x0000000000402d1e : ret 0x8948
0x000000000042256f : ret 0x894a
0x0000000000408207 : ret 0x8961
0x000000000041b9d8 : ret 0x89f1
0x0000000000423b68 : ret 0x8a44
0x0000000000423a65 : ret 0x8a4a
0x0000000000402bed : ret 0x8b48
0x000000000041d5d5 : ret 0x9589
0x000000000041ae77 : ret 0x9e6d
0x0000000000410bcc : ret 0xa30b
0x0000000000424bbf : ret 0xac60
0x00000000004187ee : ret 0xb0
0x00000000004124d0 : ret 0xb740
0x000000000041a5f7 : ret 0xb848
0x0000000000410700 : ret 0xb940
0x00000000004239f2 : ret 0xb94a
0x000000000041d866 : ret 0xb9f1
0x0000000000412b4c : ret 0xbf48
0x0000000000401695 : ret 0xc148
0x0000000000420ab2 : ret 0xc493
0x000000000040228b : ret 0xc96c
0x000000000041eda9 : ret 0xca21
0x000000000041e125 : ret 0xca29
0x0000000000420875 : ret 0xccb2
0x0000000000402cf9 : ret 0xd284
0x00000000004221b5 : ret 0xd618
0x000000000041fd5b : ret 0xe280
0x00000000004123a2 : ret 0xe940
0x0000000000413601 : ret 0xe961
0x000000000040942d : ret 0xea51
0x0000000000420867 : ret 0xea81
0x00000000004151bc : ret 0xee8
0x00000000004068f5 : ret 0xf281
0x0000000000411207 : ret 0xf41
0x0000000000413155 : ret 0xf7f3
0x00000000004118de : ret 0xfc75
0x000000000041cd3a : ret 0xfe46
0x0000000000416cfa : ret 0xfea5
0x000000000041314f : ret 0xffa5
0x00000000004118d8 : ret 0xffc4
0x0000000000410af8 : ret 0xffd5
0x0000000000410bd2 : ret 0xffd8
0x000000000041198a : ret 0xffd9
0x0000000000410d74 : ret 0xffe0
0x000000000040fa65 : ret 0xfffa
0x000000000042520e : ret 0xfffd
0x0000000000405346 : ret 0xffff
0x0000000000402701 : ret 1
0x0000000000411770 : ret 2
0x0000000000402139 : ret 6
0x00000000004148c4 : ret 8
0x0000000000423f2d : rol byte ptr [rax + 0x48f22948], -0x7f ; ret 1
0x000000000041e9ac : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000405e4c : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000423f2c : rol byte ptr ds:[rax + 0x48f22948], -0x7f ; ret 1
0x0000000000402cf1 : ror byte ptr [r8 + 0x3b], 1 ; fmul dword ptr [r15] ; xchg eax, edx ; ret 0xd284
0x0000000000402cf2 : ror byte ptr [rax + 0x3b], 1 ; fmul dword ptr [r15] ; xchg eax, edx ; ret 0xd284
0x000000000041a5f4 : ror byte ptr [rax + 1], cl ; ret 0xb848
0x000000000040169c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4016ab ; pop rbp ; ret
0x000000000041ec07 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x00000000004251aa : ror byte ptr [rbx - 0x221733ab], 1 ; ret
0x000000000040690a : ror byte ptr [rcx], -0x39 ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000423d5e : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000417340 : ror dword ptr [rcx - 0x7d], cl ; ret
0x000000000041ccfb : sahf ; ret 0xd284
0x000000000041ba9a : salc ; jmp qword ptr [rdi]
0x000000000041b9d6 : salc ; sti ; ret 0x89f1
0x000000000040169e : sar eax, 1 ; jne 0x4016a9 ; pop rbp ; ret
0x00000000004126c1 : sar ebp, -0x17 ; ret 0x2a
0x000000000040169d : sar rax, 1 ; jne 0x4016aa ; pop rbp ; ret
0x0000000000425c18 : sbb al, -0x3c ; std ; call rsp
0x0000000000425c58 : sbb al, -3 ; std ; call rsp
0x0000000000417680 : sbb al, 0x41 ; out dx, eax ; mov al, -0x47 ; ret
0x000000000041e26e : sbb al, bh ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rbx]
0x000000000041d48b : sbb bl, byte ptr [rdx - 0x47] ; salc ; jmp qword ptr [rdi]
0x00000000004125c1 : sbb cl, ch ; ret
0x0000000000425c99 : sbb dh, bh ; call rsp
0x0000000000419e43 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004166d0 : sbb ecx, dword ptr [rax - 0x7f] ; ret
0x00000000004115c2 : shr cl, cl ; ret 0x3b
0x000000000040f3fd : stc ; ret 0x77a8
0x0000000000426002 : std ; call qword ptr [rcx]
0x0000000000425c1a : std ; call rsp
0x0000000000425c12 : std ; push qword ptr [rbx + rax - 0x3be40000] ; std ; call rsp
0x0000000000425c52 : std ; push qword ptr [rsp + rax - 0x2e40000] ; std ; call rsp
0x0000000000415f87 : std ; ret 0x279e
0x0000000000425c59 : std ; std ; call rsp
0x000000000041b9d7 : sti ; ret 0x89f1
0x000000000041d865 : sti ; ret 0xb9f1
0x0000000000425312 : stosb byte ptr [rdi], al ; ret 0xfffd
0x000000000040307e : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000424cc6 : sub byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000402f68 : sub byte ptr [rax], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000410af5 : sub byte ptr [rbp - 0x7f], bh ; ret 0xffd5
0x0000000000410aeb : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000410bc5 : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000411985 : sub eax, 0x81268e82 ; ret 0xffd9
0x000000000041a5ff : sub edx, edi ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000042531d : sub esp, 8 ; add rsp, 8 ; ret
0x000000000042531c : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000410af0 : test al, -0x7f ; ret 0x2d50
0x0000000000410bca : test al, -0x7f ; ret 0xa30b
0x000000000040535a : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; lahf ; ret 0xd284
0x000000000041d042 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000423803 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000416d5e : test al, 0x48 ; add esp, 0x80 ; pop rbp ; ret
0x0000000000413326 : test al, 0x48 ; mov ebp, 0xe19c53ba ; ret
0x0000000000419698 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x00000000004252ea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040796c : test byte ptr [rcx], ch ; ret 0
0x00000000004022fa : test dl, bl ; or al, byte ptr [rax] ; add cl, ch ; ret
0x0000000000407966 : test dword ptr [rax + 0xffffffd], esp ; test byte ptr [rcx], ch ; ret 0
0x000000000041e0e3 : test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rax]
0x000000000041e13b : test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rbx]
0x000000000041e0a2 : test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rcx]
0x0000000000405863 : test dword ptr [rdi + rdi*8 - 1], ebx ; jmp rax
0x0000000000405872 : test dword ptr [rdi + rdi*8 - 1], ebx ; jmp rcx
0x00000000004197a6 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000041697a : test dword ptr [rdi + rdi*8 - 1], esp ; call qword ptr [rbx]
0x000000000041239b : test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x00000000004135fa : test dword ptr [rsi + rdi*8 + 0x6e94ffff], esp ; ret 0xe961
0x0000000000404616 : test dword ptr [rsi + rdi*8 - 0x70f00001], esp ; ret 6
0x000000000040f0ba : test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x00000000004135af : test eax, 0xb9dd5cac ; xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x00000000004115bf : wait ; jge 0x4115a1 ; shr cl, cl ; ret 0x3b
0x0000000000417371 : wait ; jmp qword ptr [rax]
0x000000000040c67d : wait ; jo 0x40c68b ; ret
0x000000000040fbcc : wait ; jo 0x40fbda ; ret
0x0000000000423f48 : xchg dword ptr [rsi + 4], ebp ; push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000402bb5 : xchg eax, ebp ; ret 0x8445
0x0000000000405c6f : xchg eax, ebp ; ret 0xd284
0x0000000000408205 : xchg eax, ebx ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x000000000040eb05 : xchg eax, ebx ; ret
0x000000000040ed35 : xchg eax, ecx ; ret
0x00000000004051d8 : xchg eax, edi ; ret 0xd284
0x0000000000408585 : xchg eax, edx ; ret
0x000000000041642f : xchg eax, edx ; ret 0x8445
0x0000000000402cf8 : xchg eax, edx ; ret 0xd284
0x000000000041893a : xchg eax, esp ; jmp 0x4193a8
0x0000000000418877 : xchg eax, esp ; jmp 0x4193aa
0x00000000004135b4 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x000000000040ee85 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x00000000004135ff : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0xe961
0x0000000000416419 : xchg eax, esp ; ret 0x8041
0x000000000040290c : xchg eax, esp ; ret 0x8445
0x00000000004124ce : xchg eax, esp ; ret 0xb740
0x0000000000417c79 : xchg eax, esp ; ret 0xd284
0x0000000000418939 : xchg eax, r12d ; jmp 0x4193a9
0x000000000041ba2a : xlatb ; sti ; ret 0x89f1
0x000000000041d864 : xlatb ; sti ; ret 0xb9f1
0x00000000004124c9 : xor al, byte ptr [rbx - 0x6bf0fd12] ; ret 0xb740
0x0000000000406d67 : xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000406d68 : xor byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000042530f : xor esi, esi ; jmp 0x4015c4
