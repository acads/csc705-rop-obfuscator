0x0000000000406789 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040afe7 : add ah, ch ; ret 0xffff
0x000000000040869d : add al, 0x21 ; ret 0xd709
0x000000000040b86f : add al, ah ; mov ah, -1 ; jmp qword ptr [rax]
0x000000000040b2c7 : add al, ch ; jno 0x40b2ce ; call rsi
0x0000000000403358 : add al, ch ; ret 0xffe2
0x0000000000404f53 : add al, ch ; xlatb ; ret
0x000000000040b98f : add al, dh ; mov ch, -1 ; jmp qword ptr [rdx]
0x000000000040bbcf : add al, dh ; ret 0xffff
0x000000000040bbaf : add al, dl ; ret 0xffff
0x0000000000409a3f : add bl, dh ; ret
0x0000000000407013 : add byte ptr [rax - 0x73], cl ; or al, 0x25 ; ret 0x40a8
0x0000000000404bca : add byte ptr [rax - 0x73], cl ; xor al, 0x25 ; ret 0x40a3
0x000000000040788d : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000408b44 : add byte ptr [rax - 0x77], cl ; call 0xffffffffffc84e3b
0x0000000000408b43 : add byte ptr [rax - 0x77], cl ; call 0xffffffffffc84e3c
0x00000000004030e6 : add byte ptr [rax - 0x77], cl ; ret 0x2948
0x000000000040beaf : add byte ptr [rax], ah ; fdivr st(7) ; jmp rdx
0x000000000040bbef : add byte ptr [rax], ah ; ret
0x0000000000404f51 : add byte ptr [rax], al ; add al, ch ; xlatb ; ret
0x0000000000409a3d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000404bc8 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; xor al, 0x25 ; ret 0x40a3
0x0000000000409a3b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004004b8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400428 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000400638 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000004004ba : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040042a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000040063a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x0000000000408729 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040498a : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004004bc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040042c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000040063c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000004086c2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000402033 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xd139
0x0000000000405e2e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x000000000040709e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000401e8d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000040bbe9 : add byte ptr [rax], al ; add byte ptr [rdx + rcx], cl ; add byte ptr [rax], ah ; ret
0x0000000000408e9c : add byte ptr [rax], al ; add cl, ch ; ret 2
0x0000000000406751 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406460 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004012f3 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000040b2c2 : add byte ptr [rax], al ; and al, 1 ; add byte ptr [rax], al ; call 0xffffffffd740b247
0x000000000040b2c6 : add byte ptr [rax], al ; call 0xffffffffd740b243
0x000000000040b666 : add byte ptr [rax], al ; call 0xffffffffd840b60b
0x000000000040afe6 : add byte ptr [rax], al ; in al, dx ; ret 0xffff
0x0000000000401389 : add byte ptr [rax], al ; jmp 0x401309
0x000000000040b0de : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; out -1, al ; call rsp
0x000000000040afee : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret
0x000000000040b05e : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; sar bh, 1 ; call rsp
0x000000000040872b : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000404d22 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040498c : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040b70e : add byte ptr [rax], al ; nop ; mov al, -1 ; jmp rdx
0x000000000040bb6e : add byte ptr [rax], al ; nop ; ret 0xffff
0x000000000040bbea : add byte ptr [rax], al ; or r8b, byte ptr [rax] ; add byte ptr [rax], ah ; ret
0x0000000000402682 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040772b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406420 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004086c3 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004004be : add byte ptr [rax], al ; ret
0x000000000040042e : add byte ptr [rax], al ; ret 0
0x000000000040063e : add byte ptr [rax], al ; ret 1
0x000000000040b01f : add byte ptr [rbp + rcx*8 - 1], ch ; call rsp
0x000000000040772c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000406421 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x00000000004086c4 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040b2c3 : add byte ptr [rcx + rax], ah ; add byte ptr [rax], al ; call 0xffffffffd740b246
0x00000000004098dc : add byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x0000000000401778 : add byte ptr [rcx], al ; ret
0x0000000000402035 : add byte ptr [rcx], al ; ret 0xd139
0x0000000000408e98 : add byte ptr [rdi], cl ; lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000404f4d : add byte ptr [rdi], cl ; test dword ptr [rip - 0x18000000], eax ; xlatb ; ret
0x0000000000405e30 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x00000000004070a0 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000401e8f : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000040bbeb : add byte ptr [rdx + rcx], cl ; add byte ptr [rax], ah ; ret
0x0000000000408e9e : add cl, ch ; ret 2
0x0000000000407d69 : add dword ptr [rax - 0x77], ecx ; ret 0x8148
0x000000000040b2c5 : add dword ptr [rax], eax ; add al, ch ; jno 0x40b2d0 ; call rsi
0x000000000040674f : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040772a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040641f : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040979d : add dword ptr [rax], ecx ; ret 0x840
0x0000000000402497 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000402941 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040947a : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401774 : add eax, 0x20bb5e ; add ebx, esi ; ret
0x0000000000404f50 : add eax, 0xe8000000 ; xlatb ; ret
0x0000000000408e9b : add eax, 0xe9000000 ; ret 2
0x000000000040173b : add eax, edx ; sar rax, 1 ; jne 0x40174c ; pop rbp ; ret
0x0000000000401779 : add ebx, esi ; ret
0x000000000040190b : add esp, 0x10 ; pop rbp ; ret
0x0000000000403656 : add esp, 0x120 ; pop rbp ; ret
0x00000000004091cc : add esp, 0x130 ; pop rbp ; ret
0x0000000000407a5c : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000402dc3 : add esp, 0x20 ; pop rbp ; ret
0x000000000040377b : add esp, 0x2030 ; pop rbp ; ret
0x0000000000402d1f : add esp, 0x2040 ; pop rbp ; ret
0x000000000040449f : add esp, 0x2090 ; pop rbp ; ret
0x0000000000402bd9 : add esp, 0x20e0 ; pop rbp ; ret
0x0000000000401a1d : add esp, 0x30 ; pop rbp ; ret
0x000000000040249c : add esp, 0x40 ; pop rbp ; ret
0x000000000040231a : add esp, 0x50 ; pop rbp ; ret
0x0000000000402798 : add esp, 0x60 ; pop rbp ; ret
0x0000000000405043 : add esp, 0x70 ; pop rbp ; ret
0x0000000000406a7a : add esp, 0x90 ; pop rbp ; ret
0x0000000000403f13 : add esp, 0xa0 ; pop rbp ; ret
0x00000000004086bf : add esp, 0xd8 ; pop rbx ; pop rbp ; ret
0x000000000040267e : add esp, 0xe0 ; pop rbp ; ret
0x00000000004012f6 : add esp, 8 ; ret
0x000000000040173a : add rax, rdx ; sar rax, 1 ; jne 0x40174d ; pop rbp ; ret
0x000000000040190a : add rsp, 0x10 ; pop rbp ; ret
0x0000000000403655 : add rsp, 0x120 ; pop rbp ; ret
0x00000000004091cb : add rsp, 0x130 ; pop rbp ; ret
0x0000000000407a5b : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000402dc2 : add rsp, 0x20 ; pop rbp ; ret
0x000000000040377a : add rsp, 0x2030 ; pop rbp ; ret
0x0000000000402d1e : add rsp, 0x2040 ; pop rbp ; ret
0x000000000040449e : add rsp, 0x2090 ; pop rbp ; ret
0x0000000000402bd8 : add rsp, 0x20e0 ; pop rbp ; ret
0x0000000000401a1c : add rsp, 0x30 ; pop rbp ; ret
0x000000000040249b : add rsp, 0x40 ; pop rbp ; ret
0x0000000000402319 : add rsp, 0x50 ; pop rbp ; ret
0x0000000000402797 : add rsp, 0x60 ; pop rbp ; ret
0x0000000000405042 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000406a79 : add rsp, 0x90 ; pop rbp ; ret
0x0000000000403f12 : add rsp, 0xa0 ; pop rbp ; ret
0x00000000004086be : add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x000000000040267d : add rsp, 0xe0 ; pop rbp ; ret
0x00000000004012f5 : add rsp, 8 ; ret
0x000000000040b2c4 : and al, 1 ; add byte ptr [rax], al ; call 0xffffffffd740b245
0x0000000000409479 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401777 : and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000403658 : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004044bf : and eax, 0x60d2e0 ; pop rbp ; ret
0x00000000004044e3 : and eax, 0x60d2e8 ; pop rbp ; ret
0x0000000000402dbf : call 0xffffffff83892dcb
0x000000000040b2c8 : call 0xffffffffd740b241
0x000000000040b668 : call 0xffffffffd840b609
0x0000000000406459 : call 0xffffffffe902eda9
0x0000000000406458 : call 0xffffffffe902edaa
0x0000000000408b48 : call 0xffffffffffc84e37
0x0000000000408b47 : call 0xffffffffffc84e38
0x0000000000409a19 : call qword ptr [r12 + rbx*8]
0x00000000004031bc : call qword ptr [rax]
0x000000000040b1eb : call qword ptr [rsi]
0x0000000000409a1a : call qword ptr [rsp + rbx*8]
0x000000000040179d : call rax
0x00000000004061ac : call rbx
0x000000000040b66b : call rdi
0x000000000040b2cb : call rsi
0x000000000040af63 : call rsp
0x00000000004091ca : clc ; add rsp, 0x130 ; pop rbp ; ret
0x0000000000407c5f : clc ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004070b1 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040173f : clc ; jne 0x401748 ; pop rbp ; ret
0x0000000000404ef5 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040995f : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000409962 : clc ; pop rbp ; ret
0x0000000000408728 : cld ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000401937 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004089ab : cld ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403779 : cld ; add rsp, 0x2030 ; pop rbp ; ret
0x00000000004088ea : cld ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040995c : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000409313 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004092b6 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004088e7 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040872f : cld ; pop rbp ; ret
0x00000000004081e6 : cmp eax, 0x8945c621 ; ret 0x8141
0x00000000004016fd : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401710 ; pop rbp ; ret
0x000000000040726c : cwde ; mov rcx, qword ptr [rax*8 + 0x40a8d8] ; jmp rcx
0x0000000000408f04 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000401c7a : dec dword ptr [rax - 0x77] ; ret 0x8d8b
0x0000000000405bb2 : dec dword ptr [rcx - 0x77] ; ret 0x294d
0x0000000000405f40 : enter 0x4b05, 0x34 ; fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x0000000000404c5b : enter 0x60d2, 0 ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004086c1 : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040beb1 : fdivr st(7) ; jmp rdx
0x0000000000405f44 : fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x0000000000409a1c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000401909 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401710 : hlt ; pop rbp ; mov edi, 0x60d270 ; jmp rax
0x000000000040879a : in al, dx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040afe8 : in al, dx ; ret 0xffff
0x00000000004085fa : in eax, -0x4a ; loope 0x408623 ; ret 0x8941
0x00000000004061cb : inc dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000407895 : int 0x80
0x0000000000401703 : ja 0x40170a ; pop rbp ; ret
0x000000000040170f : je 0x40170d ; pop rbp ; mov edi, 0x60d270 ; jmp rax
0x000000000040138b : jmp 0x401307
0x0000000000407d68 : jmp 0xffffffffc2c9c572
0x000000000040b873 : jmp qword ptr [rax]
0x000000000040b3eb : jmp qword ptr [rbx]
0x0000000000402b54 : jmp qword ptr [rcx]
0x000000000040b753 : jmp qword ptr [rdx]
0x0000000000401717 : jmp rax
0x0000000000401c16 : jmp rcx
0x0000000000401757 : jmp rdx
0x000000000040ade3 : jmp rsp
0x0000000000401740 : jne 0x401747 ; pop rbp ; ret
0x000000000040b2c9 : jno 0x40b2cc ; call rsi
0x0000000000405045 : jo 0x4050a6 ; ret
0x000000000040666f : jo 0x4066d5 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406d14 : jo 0x406d75 ; ret
0x0000000000406e4e : jo 0x406eaf ; ret
0x0000000000408e9a : lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x000000000040b0e0 : lodsb al, byte ptr [rsi] ; out -1, al ; call rsp
0x000000000040aff0 : lodsb al, byte ptr [rsi] ; ret
0x000000000040b060 : lodsb al, byte ptr [rsi] ; sar bh, 1 ; call rsp
0x0000000000402a3c : lodsb al, byte ptr [rsi] ; test byte ptr [r8 - 0x77], cl ; ret 0x148
0x0000000000408b42 : lodsd eax, dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; call 0xffffffffffc84e3d
0x00000000004085fc : loope 0x408621 ; ret 0x8941
0x0000000000402318 : loopne 0x402368 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000402317 : loopne 0x402369 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000402680 : loopne 0x402687 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000402bdb : loopne 0x402c02 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040481e : loopne 0x40486e ; add esp, 0x30 ; pop rbp ; ret
0x000000000040481d : loopne 0x40486f ; add esp, 0x30 ; pop rbp ; ret
0x00000000004085f8 : loopne 0x408614 ; in eax, -0x4a ; loope 0x408625 ; ret 0x8941
0x000000000040b871 : mov ah, -1 ; jmp qword ptr [rax]
0x000000000040b05c : mov ah, 0xd ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; sar bh, 1 ; call rsp
0x000000000040b0dc : mov ah, 0xf ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; out -1, al ; call rsp
0x000000000040b711 : mov al, -1 ; jmp rdx
0x0000000000406beb : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000406a78 : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000409476 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040b751 : mov bl, -1 ; jmp qword ptr [rdx]
0x00000000004044e1 : mov byte ptr [0x60d2e8], al ; pop rbp ; ret
0x0000000000401773 : mov byte ptr [rip + 0x20bb5e], 1 ; ret
0x000000000040b991 : mov ch, -1 ; jmp qword ptr [rdx]
0x0000000000402499 : mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000402943 : mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040947c : mov dh, -0x40 ; pop rbp ; ret
0x00000000004044bd : mov dword ptr [0x60d2e0], edi ; pop rbp ; ret
0x0000000000404ef6 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000404eb8 : mov dword ptr [rax], eax ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000404d74 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000404eb7 : mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000401a19 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401907 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401935 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040995d : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000404f6e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402a39 : mov eax, 0x43ac3d3f ; test byte ptr [rax - 0x77], cl ; ret 0x148
0x0000000000404d28 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000407b7b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404733 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404d25 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040468f : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000408798 : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407e73 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404cdd : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404d6e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040498f : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040481c : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402316 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000402794 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000404eba : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040503f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000406be9 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000409314 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004089a9 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004088e8 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040872d : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000407c5d : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004070af : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000409960 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040179b : mov ebp, esp ; call rax
0x0000000000401701 : mov ebp, esp ; ja 0x40170c ; pop rbp ; ret
0x0000000000401776 : mov ebx, 0xf3010020 ; ret
0x00000000004078ad : mov ecx, 0x5b2a830a ; ret
0x000000000040416f : mov ecx, 0x6255ea3f ; ret 0xc216
0x0000000000401c0f : mov ecx, dword ptr [rax*8 + 0x409aa0] ; jmp rcx
0x0000000000405102 : mov ecx, dword ptr [rax*8 + 0x40a3d0] ; jmp rcx
0x0000000000405426 : mov ecx, dword ptr [rax*8 + 0x40a418] ; jmp rcx
0x000000000040726e : mov ecx, dword ptr [rax*8 + 0x40a8d8] ; jmp rcx
0x000000000040845a : mov ecx, dword ptr [rax*8 + 0x40ac50] ; jmp rcx
0x00000000004083da : mov ecx, dword ptr [rax*8 + 0x40acb0] ; jmp rcx
0x0000000000404d71 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401795 : mov edi, 0x60ce20 ; mov rbp, rsp ; call rax
0x0000000000401712 : mov edi, 0x60d270 ; jmp rax
0x0000000000401752 : mov edi, 0x60d270 ; jmp rdx
0x0000000000409a17 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000409a16 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000401750 : mov esi, eax ; mov edi, 0x60d270 ; jmp rdx
0x00000000004044bc : mov qword ptr [0x60d2e0], rdi ; pop rbp ; ret
0x0000000000404f6d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406bea : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000407b7a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404732 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404d24 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040468e : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000407e72 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404cdc : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040498e : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040481b : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402315 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000402793 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040503e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000406be8 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000407c5c : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004070ae : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040179a : mov rbp, rsp ; call rax
0x0000000000401700 : mov rbp, rsp ; ja 0x40170d ; pop rbp ; ret
0x0000000000401c0e : mov rcx, qword ptr [rax*8 + 0x409aa0] ; jmp rcx
0x0000000000405101 : mov rcx, qword ptr [rax*8 + 0x40a3d0] ; jmp rcx
0x0000000000405425 : mov rcx, qword ptr [rax*8 + 0x40a418] ; jmp rcx
0x000000000040726d : mov rcx, qword ptr [rax*8 + 0x40a8d8] ; jmp rcx
0x0000000000408459 : mov rcx, qword ptr [rax*8 + 0x40ac50] ; jmp rcx
0x00000000004083d9 : mov rcx, qword ptr [rax*8 + 0x40acb0] ; jmp rcx
0x000000000040174f : mov rsi, rax ; mov edi, 0x60d270 ; jmp rdx
0x0000000000404bc6 : mov word ptr [rax + rax], dr1 ; add byte ptr [rax - 0x73], cl ; xor al, 0x25 ; ret 0x40a3
0x0000000000402498 : movzx eax, al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000402942 : movzx eax, al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040947b : movzx eax, al ; pop rbp ; ret
0x000000000040b710 : nop ; mov al, -1 ; jmp rdx
0x000000000040bb70 : nop ; ret 0xffff
0x0000000000409a38 : nop dword ptr [rax + rax] ; ret
0x000000000040b01d : or al, 0 ; add byte ptr [rbp + rcx*8 - 1], ch ; call rsp
0x000000000040578d : or al, 0x18 ; ret 0x6451
0x0000000000407016 : or al, 0x25 ; ret 0x40a8
0x000000000040bbcd : or al, byte ptr [rax] ; add al, dh ; ret 0xffff
0x000000000040bbad : or al, byte ptr [rax] ; add al, dl ; ret 0xffff
0x000000000040bbed : or al, byte ptr [rax] ; add byte ptr [rax], ah ; ret
0x0000000000401e89 : or byte ptr [rcx + 0x2df9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000040869b : or dword ptr [rsp + rax + 0x21], esp ; ret 0xd709
0x000000000040afe5 : or eax, dword ptr [rax] ; add ah, ch ; ret 0xffff
0x0000000000406dd1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040bbec : or r8b, byte ptr [rax] ; add byte ptr [rax], ah ; ret
0x000000000040b0e1 : out -1, al ; call rsp
0x0000000000409a2c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000406671 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000409a2e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000406673 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000409a30 : pop r14 ; pop r15 ; ret
0x0000000000406423 : pop r14 ; pop rbp ; ret
0x0000000000406675 : pop r15 ; pop rbp ; ret
0x0000000000409a32 : pop r15 ; ret
0x0000000000401772 : pop rbp ; mov byte ptr [rip + 0x20bb5e], 1 ; ret
0x0000000000401711 : pop rbp ; mov edi, 0x60d270 ; jmp rax
0x000000000040174e : pop rbp ; mov rsi, rax ; mov edi, 0x60d270 ; jmp rdx
0x0000000000409a2b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000409a2f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401705 : pop rbp ; ret
0x0000000000406670 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040772d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406422 : pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004086c5 : pop rbx ; pop rbp ; ret
0x00000000004078b1 : pop rbx ; ret
0x0000000000406676 : pop rdi ; pop rbp ; ret
0x0000000000409a33 : pop rdi ; ret
0x0000000000402dbe : pop rsi ; call 0xffffffff83892dcc
0x0000000000401775 : pop rsi ; mov ebx, 0xf3010020 ; ret
0x0000000000406674 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000409a31 : pop rsi ; pop r15 ; ret
0x0000000000406424 : pop rsi ; pop rbp ; ret
0x0000000000409a2d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000406672 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040231c : push rax ; pop rbp ; ret
0x0000000000401794 : push rbp ; mov edi, 0x60ce20 ; mov rbp, rsp ; call rax
0x00000000004004c0 : ret
0x0000000000400430 : ret 0
0x0000000000402a41 : ret 0x148
0x000000000040680e : ret 0x1b2
0x0000000000402e0b : ret 0x2000
0x0000000000401592 : ret 0x20bb
0x0000000000401392 : ret 0x20bc
0x0000000000403054 : ret 0x2948
0x0000000000405b99 : ret 0x294c
0x0000000000405bb5 : ret 0x294d
0x0000000000403d0f : ret 0x3948
0x0000000000404bcf : ret 0x40a3
0x0000000000407018 : ret 0x40a8
0x0000000000404df4 : ret 0x5589
0x000000000040578f : ret 0x6451
0x00000000004081eb : ret 0x8141
0x0000000000407d6c : ret 0x8148
0x000000000040979f : ret 0x840
0x0000000000405e33 : ret 0x8840
0x0000000000407229 : ret 0x8844
0x00000000004085fe : ret 0x8941
0x0000000000403728 : ret 0x8948
0x0000000000405bb8 : ret 0x8949
0x0000000000405d4c : ret 0x89a5
0x0000000000405b9c : ret 0x8b48
0x0000000000401c7d : ret 0x8d8b
0x0000000000403af5 : ret 0xb848
0x00000000004090d9 : ret 0xb849
0x0000000000401735 : ret 0xc148
0x0000000000404174 : ret 0xc216
0x0000000000408e40 : ret 0xc2f6
0x0000000000402594 : ret 0xca21
0x00000000004082d8 : ret 0xca29
0x0000000000402037 : ret 0xd139
0x00000000004070a3 : ret 0xd284
0x000000000040869f : ret 0xd709
0x0000000000405bcd : ret 0xdde8
0x0000000000401e92 : ret 0xe280
0x000000000040645c : ret 0xee8
0x0000000000405e48 : ret 0xf180
0x0000000000408e33 : ret 0xf280
0x0000000000402b3c : ret 0xf281
0x0000000000408b4a : ret 0xff87
0x000000000040335a : ret 0xffe2
0x000000000040afe9 : ret 0xffff
0x0000000000400640 : ret 1
0x0000000000408ea0 : ret 2
0x0000000000404eb6 : rol byte ptr [rcx + rcx*4], 1 ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000407890 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000405040 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x4050ab ; ret
0x000000000040173c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40174b ; pop rbp ; ret
0x0000000000407891 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000405b8d : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000405b96 : ror byte ptr [rax - 0x77], 1 ; ret 0x294c
0x0000000000405041 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x4050aa ; ret
0x000000000040249a : ror byte ptr [rax - 0x7d], -0x3c ; pop rbp ; ret
0x0000000000402944 : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x0000000000403654 : ror byte ptr [rax - 0x7f], -0x3c ; and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040267c : ror byte ptr [rax - 0x7f], -0x3c ; loopne 0x40268b ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000402bd7 : ror byte ptr [rax - 0x7f], -0x3c ; loopne 0x402c06 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040b061 : sar bh, 1 ; call rsp
0x000000000040173e : sar eax, 1 ; jne 0x401749 ; pop rbp ; ret
0x000000000040173d : sar rax, 1 ; jne 0x40174a ; pop rbp ; ret
0x000000000040bbe8 : sbb al, 0 ; add byte ptr [rax], al ; or r8b, byte ptr [rax] ; add byte ptr [rax], ah ; ret
0x0000000000404c5c : shl byte ptr [rax], cl ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401714 : shl byte ptr [rax], cl ; jmp rax
0x0000000000401754 : shl byte ptr [rax], cl ; jmp rdx
0x00000000004044c1 : shl byte ptr [rax], cl ; pop rbp ; ret
0x000000000040b0dd : sldt word ptr [rax] ; lodsb al, byte ptr [rsi] ; out -1, al ; call rsp
0x0000000000401e8b : stc ; sub eax, 0xf000000 ; xchg eax, esp ; ret 0xe280
0x0000000000409478 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004078af : sub dword ptr [rdx], 0x5b ; ret
0x0000000000401e8c : sub eax, 0xf000000 ; xchg eax, esp ; ret 0xe280
0x0000000000409a81 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000409a80 : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000407011 : test al, 0x40 ; add byte ptr [rax - 0x73], cl ; or al, 0x25 ; ret 0x40a8
0x000000000040869a : test al, 9 ; add al, 0x21 ; ret 0xd709
0x0000000000402a3d : test byte ptr [r8 - 0x77], cl ; ret 0x148
0x0000000000402a3e : test byte ptr [rax - 0x77], cl ; ret 0x148
0x0000000000409a3a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000404f4f : test dword ptr [rip - 0x18000000], eax ; xlatb ; ret
0x0000000000408b41 : wait ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; call 0xffffffffffc84e3e
0x0000000000405e32 : xchg eax, ebp ; ret 0x8840
0x000000000040ac50 : xchg eax, edi ; test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004070a2 : xchg eax, esp ; ret 0xd284
0x0000000000401e91 : xchg eax, esp ; ret 0xe280
0x0000000000404f55 : xlatb ; ret
0x0000000000404bcd : xor al, 0x25 ; ret 0x40a3
0x000000000040377d : xor byte ptr [rax], ah ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004091ce : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000406b67 : xor eax, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x0000000000404eb5 : xor eax, edx ; mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
