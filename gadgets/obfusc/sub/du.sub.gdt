0x000000000041ca28 : adc al, -0x75 ; hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040aac8 : adc al, -0x7f ; ret 0x8924
0x00000000004253ed : adc al, 0 ; add al, dh ; fdiv st(6), st(0) ; jmp qword ptr [rdx]
0x000000000041d378 : adc al, 0x48 ; add esp, 0x10 ; pop rbp ; ret
0x000000000041d679 : adc al, 1 ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041a16c : adc al, byte ptr [rcx + 0x4f9] ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x000000000040c337 : adc al, ch ; ret
0x0000000000424960 : adc byte ptr [rax - 2], dh ; call qword ptr [rdx]
0x0000000000404b55 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041d35c : adc dh, dh ; ret 0xf01
0x000000000040dfd9 : adc dword ptr [rcx - 0xa], eax ; jmp qword ptr [rcx]
0x000000000040dfd8 : adc dword ptr cs:[rcx - 0xa], eax ; jmp qword ptr [rcx]
0x00000000004077f7 : adc eax, 0x48000000 ; add esp, 0x20 ; pop rbp ; ret
0x00000000004128e9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004243e1 : adc esi, edi ; call qword ptr [rsi]
0x0000000000424bbb : add ah, ah ; or eax, dword ptr [rax] ; add al, dh ; jp 0x424bc9 ; jmp qword ptr [rdi]
0x000000000042499b : add ah, al ; or dword ptr [rax], eax ; add byte ptr [rax], dl ; jo 0x4249a9 ; call qword ptr [rdx]
0x00000000004243dd : add al, 0 ; add byte ptr [rax], ah ; adc esi, edi ; call qword ptr [rsi]
0x000000000041641d : add al, 0x21 ; ret 0xd709
0x000000000040be1a : add al, 0x48 ; add eax, ecx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000423d63 : add al, ah ; jle 0x423d6a ; jmp rax
0x00000000004026c7 : add al, bpl ; ret 0xfff9
0x00000000004048dc : add al, byte ptr [rax] ; add byte ptr [rax - 0x73], cl ; or al, 0x25 ; ret 0x421c
0x0000000000405eea : add al, byte ptr [rcx - 0xf] ; jmp qword ptr [rcx]
0x0000000000415b7b : add al, ch ; lahf ; ret
0x0000000000405ffd : add al, ch ; or eax, 0x5d0000e7 ; ret
0x000000000041fe17 : add al, ch ; ret
0x0000000000405068 : add al, ch ; ret 0xffd1
0x00000000004026c8 : add al, ch ; ret 0xfff9
0x00000000004253ef : add al, dh ; fdiv st(6), st(0) ; jmp qword ptr [rdx]
0x0000000000424bbf : add al, dh ; jp 0x424bc5 ; jmp qword ptr [rdi]
0x0000000000423923 : add al, dh ; mov dh, -2 ; call rax
0x00000000004239b3 : add al, dh ; sar esi, cl ; call qword ptr [rax]
0x0000000000425b4f : add al, dh ; sbb bh, bh ; call qword ptr [rcx]
0x0000000000423d23 : add al, dl ; jns 0x423d2a ; jmp rax
0x00000000004207df : add bl, dh ; ret
0x000000000040cd59 : add byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000041e537 : add byte ptr [rax + 1], cl ; ret 0x4a3b
0x000000000040e8d8 : add byte ptr [rax + 1], cl ; ret 0x8948
0x00000000004186a8 : add byte ptr [rax + 1], cl ; ret 0x8b48
0x0000000000404295 : add byte ptr [rax - 0x73], cl ; or al, 0x25 ; ret 0x421c
0x000000000040b5ad : add byte ptr [rax - 0x75], cl ; call 0x49033f05
0x0000000000420706 : add byte ptr [rax - 0x75], cl ; call 0x4904905e
0x000000000040c12f : add byte ptr [rax - 0x75], cl ; fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x000000000041419d : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000041328d : add byte ptr [rax - 0x77], cl ; jge 0x413290 ; pop rbp ; ret
0x00000000004047f2 : add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000402fe1 : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x00000000004243df : add byte ptr [rax], ah ; adc esi, edi ; call qword ptr [rsi]
0x0000000000425a0f : add byte ptr [rax], ah ; or edi, edi ; jmp rax
0x000000000042495e : add byte ptr [rax], al ; adc byte ptr [rax - 2], dh ; call qword ptr [rdx]
0x0000000000415b79 : add byte ptr [rax], al ; add al, ch ; lahf ; ret
0x0000000000405ffb : add byte ptr [rax], al ; add al, ch ; or eax, 0x5d0000e7 ; ret
0x00000000004207dd : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040cd57 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000041e535 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x4a3b
0x000000000040e8d6 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8948
0x00000000004186a6 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8b48
0x000000000040b5ab : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; call 0x49033f07
0x0000000000420704 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; call 0x49049060
0x000000000040c12d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x000000000041328b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jge 0x413292 ; pop rbp ; ret
0x0000000000402fdf : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x00000000004207db : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000400d52 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000040c7cd : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000420651 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000418ea2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000406efb : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x000000000041526d : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000041328a : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000040f7a7 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004207dc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400d54 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000004151be : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000403f07 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7338b], cl ; ret 0xb0
0x0000000000406212 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x0000000000417518 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000040623a : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000040b131 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7628d639], cl ; ret 0xf229
0x0000000000408873 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x858b
0x0000000000407caa : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xfa81
0x000000000041798b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000405f60 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5588
0x0000000000411f8e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000405b7c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8841
0x000000000041d2a2 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040e4f1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000041bad4 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x000000000041a170 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x00000000004131fe : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000416b3f : add byte ptr [rax], al ; add cl, ch ; ret
0x00000000004092ab : add byte ptr [rax], al ; add cl, ch ; ret 0x22
0x000000000041cf1c : add byte ptr [rax], al ; add cl, ch ; ret 2
0x000000000040415b : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004076f3 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000420653 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000418ea4 : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000406efd : add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000401eb3 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004240be : add byte ptr [rax], al ; and al, ch ; std ; jmp rdx
0x00000000004250c6 : add byte ptr [rax], al ; call 0xffffffffd8424f92
0x00000000004241be : add byte ptr [rax], al ; cmp bh, -3 ; jmp qword ptr [rbx]
0x00000000004239f3 : add byte ptr [rax], al ; fdiv st(6), st(0) ; call qword ptr [rax]
0x00000000004240ba : add byte ptr [rax], al ; in al, 0 ; add byte ptr [rax], al ; and al, ch ; std ; jmp rdx
0x00000000004241ba : add byte ptr [rax], al ; in al, 1 ; add byte ptr [rax], al ; cmp bh, -3 ; jmp qword ptr [rbx]
0x0000000000401fc9 : add byte ptr [rax], al ; jmp 0x401ec9
0x0000000000415bf4 : add byte ptr [rax], al ; jmp 0x415c04
0x0000000000423cf2 : add byte ptr [rax], al ; jno 0x423cfb ; jmp qword ptr [rax]
0x0000000000423d32 : add byte ptr [rax], al ; jnp 0x423d3b ; jmp qword ptr [rax]
0x00000000004235c2 : add byte ptr [rax], al ; mov al, -0x11 ; std ; call qword ptr [rax]
0x00000000004261d6 : add byte ptr [rax], al ; mov byte ptr [rsi - 1], ah ; call qword ptr [rsi]
0x0000000000423db2 : add byte ptr [rax], al ; mov dil, dil ; jmp qword ptr [rax]
0x000000000041526f : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000423de2 : add byte ptr [rax], al ; mov edi, edi ; jmp rax
0x00000000004062c8 : add byte ptr [rax], al ; mov edx, dword ptr [rbp - 0x14] ; mov rsi, rcx ; call rax
0x000000000041328c : add byte ptr [rax], al ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000410e82 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040f7a9 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000042497a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; or dword ptr [rax], eax ; add byte ptr [rax], dl ; jo 0x42498a ; call qword ptr [rdx]
0x0000000000403dd2 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000041403b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000412580 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040b57e : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000424a7e : add byte ptr [rax], al ; push rax ; je 0x424a86 ; call rbx
0x0000000000423eba : add byte ptr [rax], al ; push rax ; ret
0x000000000042477e : add byte ptr [rax], al ; push rax ; sub esi, edi ; call qword ptr [rsi]
0x0000000000423da2 : add byte ptr [rax], al ; push rax ; xchg edi, edi ; jmp rax
0x00000000004207de : add byte ptr [rax], al ; ret
0x0000000000400d56 : add byte ptr [rax], al ; ret 0
0x0000000000423d22 : add byte ptr [rax], al ; sar byte ptr [rcx - 1], 1 ; jmp rax
0x0000000000425db6 : add byte ptr [rax], al ; sbb byte ptr [rdx - 1], dl ; call qword ptr [rdx]
0x00000000004251ae : add byte ptr [rax], al ; sbb dl, -2 ; jmp qword ptr [rdx]
0x000000000042495a : add byte ptr [rax], al ; test byte ptr [rcx], cl ; add byte ptr [rax], al ; adc byte ptr [rax - 2], dh ; call qword ptr [rdx]
0x0000000000423d30 : add byte ptr [rax], ch ; add byte ptr [rax], al ; jnp 0x423d3d ; jmp qword ptr [rax]
0x0000000000424f27 : add byte ptr [rax], cl ; mov cl, -2 ; jmp qword ptr [rcx]
0x000000000042495f : add byte ptr [rax], dl ; jo 0x424965 ; call qword ptr [rdx]
0x000000000042497f : add byte ptr [rax], dl ; jo 0x424985 ; call qword ptr [rdx]
0x000000000042499f : add byte ptr [rax], dl ; jo 0x4249a5 ; call qword ptr [rdx]
0x000000000042397b : add byte ptr [rax], dl ; ret 0xfffe
0x0000000000416a3d : add byte ptr [rbp - 0x77], al ; ret 0x3145
0x00000000004179a0 : add byte ptr [rbp - 0x77], al ; ret 0x8141
0x000000000041403c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000412581 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040ec96 : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040b57f : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000425b4b : add byte ptr [rbx + rbx], dh ; add al, dh ; sbb bh, bh ; call qword ptr [rcx]
0x00000000004035b5 : add byte ptr [rbx + rcx*4 + 0xd], cl ; ret
0x0000000000403f09 : add byte ptr [rbx - 0x76b7338b], cl ; ret 0xb0
0x0000000000406214 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x000000000041751a : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000040623c : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000040b133 : add byte ptr [rcx - 0x7628d639], cl ; ret 0xf229
0x000000000040673f : add byte ptr [rcx - 0x78], al ; ret
0x000000000042039c : add byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x0000000000413a7d : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000402618 : add byte ptr [rcx], al ; ret
0x0000000000408875 : add byte ptr [rcx], al ; ret 0x858b
0x0000000000407cac : add byte ptr [rcx], al ; ret 0xfa81
0x0000000000424f23 : add byte ptr [rdi + rcx], cl ; add byte ptr [rax], cl ; mov cl, -2 ; jmp qword ptr [rcx]
0x0000000000423cf0 : add byte ptr [rdi], ah ; add byte ptr [rax], al ; jno 0x423cfd ; jmp qword ptr [rax]
0x000000000041cf18 : add byte ptr [rdi], cl ; lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x00000000004070bc : add byte ptr [rdi], cl ; test dword ptr [rbp + 0x5dffffff], ecx ; ret
0x000000000041798d : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000405f62 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5588
0x0000000000407430 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000405b7e : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8841
0x000000000041d2a4 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040e4f3 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000041bad6 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x000000000041a172 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x0000000000413200 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000403fc6 : add byte ptr [rdx + rdx*8 - 0x763ebbf1], al ; ret 0xb0
0x0000000000423db0 : add byte ptr [rdx], ch ; add byte ptr [rax], al ; mov dil, dil ; jmp qword ptr [rax]
0x000000000040bc8d : add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x0000000000423eb9 : add byte ptr cs:[rax], al ; push rax ; ret
0x000000000040b130 : add byte ptr fs:[rax], al ; add byte ptr [rcx - 0x7628d639], cl ; ret 0xf229
0x0000000000416b41 : add cl, ch ; ret
0x00000000004092ad : add cl, ch ; ret 0x22
0x000000000041cf1e : add cl, ch ; ret 2
0x000000000040dbd2 : add dword ptr [rax + 0xf], eax ; mov dh, -0x39 ; pop rbp ; ret
0x000000000041c5b1 : add dword ptr [rax + 0xf], eax ; mov dh, -0x3a ; pop rbp ; ret
0x0000000000414679 : add dword ptr [rax - 0x77], ecx ; ret 0x8148
0x0000000000404293 : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; or al, 0x25 ; ret 0x421c
0x00000000004128af : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041403a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000041257f : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000041a56c : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000407605 : add dword ptr [rax], ecx ; ret 0x840
0x0000000000408e61 : add dword ptr [rbp + 0x20], eax ; rol byte ptr [rcx - 0x78], 1 ; ret
0x000000000040706f : add dword ptr [rcx + 0xf9], eax ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5588
0x000000000041ba1c : add dword ptr [rcx - 0x78], eax ; ret 0x3045
0x0000000000408e5a : add dword ptr [rcx - 0x78], eax ; ret 0x8041
0x000000000041c8ab : add dword ptr [rdi + rcx - 0x4a], eax ; ret 0xee81
0x00000000004065be : add dword ptr [rdi], ecx ; mov dh, -0x3f ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b966 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404ba5 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406791 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403f24 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040cdb9 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041eac2 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x00000000004057de : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000416b3b : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret
0x000000000041b5a4 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x5588
0x0000000000402614 : add eax, 0x224e3e ; add ebx, esi ; ret
0x000000000040af82 : add eax, 0x6348ca01 ; ret 0x6948
0x0000000000416b3e : add eax, 0xe9000000 ; ret
0x000000000041cf1b : add eax, 0xe9000000 ; ret 2
0x000000000041a1eb : add eax, 0xf000000 ; xchg eax, esp ; ret 0x9588
0x000000000040be1c : add eax, ecx ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004025db : add eax, edx ; sar rax, 1 ; jne 0x4025ec ; pop rbp ; ret
0x0000000000410049 : add eax, esi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x0000000000402619 : add ebx, esi ; ret
0x000000000040b70c : add ecx, 0x378ee1f9 ; mov eax, ecx ; pop rbp ; ret
0x000000000041d6bb : add edi, eax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x000000000040283b : add esp, 0x10 ; pop rbp ; ret
0x0000000000413a7b : add esp, 0x100 ; pop rbp ; ret
0x000000000041a569 : add esp, 0x108 ; pop rbx ; pop rbp ; ret
0x000000000041f46c : add esp, 0x10e0 ; pop rbp ; ret
0x0000000000404b53 : add esp, 0x110 ; pop rbp ; ret
0x000000000040fdad : add esp, 0x120 ; pop rbp ; ret
0x000000000041d24c : add esp, 0x130 ; pop rbp ; ret
0x0000000000410995 : add esp, 0x170 ; pop rbp ; ret
0x000000000041436c : add esp, 0x1a0 ; pop rbp ; ret
0x000000000041c7dc : add esp, 0x1b0 ; pop rbp ; ret
0x000000000041fefe : add esp, 0x1e0 ; pop rbp ; ret
0x0000000000404baa : add esp, 0x20 ; pop rbp ; ret
0x000000000041e276 : add esp, 0x250 ; pop rbp ; ret
0x0000000000404074 : add esp, 0x2b0 ; pop rbp ; ret
0x00000000004029bd : add esp, 0x30 ; pop rbp ; ret
0x000000000040702a : add esp, 0x30 ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000403f29 : add esp, 0x40 ; pop rbp ; ret
0x000000000041b0dc : add esp, 0x48 ; pop rbx ; pop rbp ; ret
0x0000000000404e9a : add esp, 0x50 ; pop rbp ; ret
0x000000000040412e : add esp, 0x60 ; pop rbp ; ret
0x000000000041bbfe : add esp, 0x60 ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000406f00 : add esp, 0x70 ; pop rbp ; ret
0x000000000040cb83 : add esp, 0x80 ; pop rbp ; ret
0x00000000004073de : add esp, 0x90 ; pop rbp ; ret
0x0000000000417023 : add esp, 0x98 ; pop rbx ; pop rbp ; ret
0x00000000004076c3 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040b57a : add esp, 0xa48 ; pop rbx ; pop rbp ; ret
0x0000000000403dce : add esp, 0xb0 ; pop rbp ; ret
0x000000000040d2bc : add esp, 0xc0 ; pop rbp ; ret
0x00000000004151bb : add esp, 0xc8 ; pop rbx ; pop rbp ; ret
0x000000000041643f : add esp, 0xd8 ; pop rbx ; pop rbp ; ret
0x0000000000415a05 : add esp, 0xe0 ; pop rbp ; ret
0x0000000000401eb6 : add esp, 8 ; ret
0x000000000040be1b : add rax, rcx ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004025da : add rax, rdx ; sar rax, 1 ; jne 0x4025ed ; pop rbp ; ret
0x0000000000410048 : add rax, rsi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x000000000041d6ba : add rdi, rax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x000000000040283a : add rsp, 0x10 ; pop rbp ; ret
0x0000000000413a7a : add rsp, 0x100 ; pop rbp ; ret
0x000000000041a568 : add rsp, 0x108 ; pop rbx ; pop rbp ; ret
0x000000000041f46b : add rsp, 0x10e0 ; pop rbp ; ret
0x0000000000404b52 : add rsp, 0x110 ; pop rbp ; ret
0x000000000040fdac : add rsp, 0x120 ; pop rbp ; ret
0x000000000041d24b : add rsp, 0x130 ; pop rbp ; ret
0x0000000000410994 : add rsp, 0x170 ; pop rbp ; ret
0x000000000041436b : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000041c7db : add rsp, 0x1b0 ; pop rbp ; ret
0x000000000041fefd : add rsp, 0x1e0 ; pop rbp ; ret
0x0000000000404ba9 : add rsp, 0x20 ; pop rbp ; ret
0x000000000041e275 : add rsp, 0x250 ; pop rbp ; ret
0x0000000000404073 : add rsp, 0x2b0 ; pop rbp ; ret
0x00000000004029bc : add rsp, 0x30 ; pop rbp ; ret
0x0000000000407029 : add rsp, 0x30 ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000403f28 : add rsp, 0x40 ; pop rbp ; ret
0x000000000041b0db : add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x0000000000404e99 : add rsp, 0x50 ; pop rbp ; ret
0x000000000040412d : add rsp, 0x60 ; pop rbp ; ret
0x000000000041bbfd : add rsp, 0x60 ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000406eff : add rsp, 0x70 ; pop rbp ; ret
0x000000000040cb82 : add rsp, 0x80 ; pop rbp ; ret
0x00000000004073dd : add rsp, 0x90 ; pop rbp ; ret
0x0000000000417022 : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x00000000004076c2 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040b579 : add rsp, 0xa48 ; pop rbx ; pop rbp ; ret
0x0000000000403dcd : add rsp, 0xb0 ; pop rbp ; ret
0x000000000040d2bb : add rsp, 0xc0 ; pop rbp ; ret
0x00000000004151ba : add rsp, 0xc8 ; pop rbx ; pop rbp ; ret
0x000000000041643e : add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x0000000000415a04 : add rsp, 0xe0 ; pop rbp ; ret
0x0000000000401eb5 : add rsp, 8 ; ret
0x000000000041350c : addps xmm1, xmm2 ; movaps xmm0, xmm1 ; pop rbp ; ret
0x000000000041350b : addsd xmm1, xmm2 ; movaps xmm0, xmm1 ; pop rbp ; ret
0x000000000041eac1 : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004057dd : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000402617 : and al, byte ptr [rax] ; add ebx, esi ; ret
0x00000000004240c0 : and al, ch ; std ; jmp rdx
0x000000000040dbd0 : and bh, 1 ; movzx eax, dil ; pop rbp ; ret
0x0000000000417abb : and byte ptr [rbx + 0x41], bl ; pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040fdaf : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000423eb8 : and byte ptr [rsi], ch ; add byte ptr [rax], al ; push rax ; ret
0x000000000041c5af : and dh, 1 ; movzx eax, sil ; pop rbp ; ret
0x000000000040dbcf : and dil, 1 ; movzx eax, dil ; pop rbp ; ret
0x0000000000407e04 : and dword ptr [rdx], eax ; jmp rcx
0x000000000040c235 : and eax, 0x422590 ; mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x0000000000405627 : and eax, 0x48ffffc9 ; add esp, 0x10 ; pop rbp ; ret
0x000000000040550f : and eax, 0x627508 ; pop rbp ; ret
0x0000000000405533 : and eax, 0x627510 ; pop rbp ; ret
0x000000000041bec9 : and eax, edx ; xor rdi, rdx ; or rax, rdi ; pop rbp ; ret
0x000000000041c14e : and edx, eax ; mov al, dl ; movzx eax, al ; pop rbp ; ret
0x000000000041c028 : and edx, eax ; mov ax, dx ; movzx eax, ax ; pop rbp ; ret
0x000000000041bdd7 : and edx, eax ; or r9d, edx ; mov eax, r9d ; pop rbp ; ret
0x000000000041c0e3 : and edx, ebx ; mov al, dl ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000041c14d : and edx, r8d ; mov al, dl ; movzx eax, al ; pop rbp ; ret
0x0000000000402616 : and r8b, byte ptr [rax] ; add ebx, esi ; ret
0x0000000000402615 : and r8b, byte ptr ds:[rax] ; add ebx, esi ; ret
0x000000000041c5ae : and sil, 1 ; movzx eax, sil ; pop rbp ; ret
0x000000000040af75 : call 0x203389d
0x000000000040afb9 : call 0x20338e1
0x000000000040b002 : call 0x203392a
0x0000000000415e63 : call 0x4020b2
0x0000000000414854 : call 0x402416
0x000000000040a94b : call 0x4102e32e
0x0000000000415b77 : call 0x415b97
0x000000000041e084 : call 0x461d4
0x000000000040b5b1 : call 0x49033f01
0x000000000040b5b0 : call 0x49033f02
0x000000000042070a : call 0x4904905a
0x0000000000420709 : call 0x4904905b
0x00000000004250c8 : call 0xffffffffd8424f90
0x000000000040fed3 : call 0xffffffffe9038823
0x00000000004125b9 : call 0xffffffffe903af09
0x00000000004125b8 : call 0xffffffffe903af0a
0x00000000004043d0 : call 0xfffffffff2c23492
0x00000000004025b3 : call 0xffffffffff40882f
0x00000000004025f3 : call 0xffffffffff40886f
0x0000000000407e03 : call 0xffffffffff40c02d
0x000000000040c721 : call 0xffffffffff7a5272
0x000000000040c720 : call 0xffffffffff7a5273
0x000000000040c85f : call 0xffffffffff7a53b0
0x000000000040c85e : call 0xffffffffff7a53b1
0x00000000004207b9 : call qword ptr [r12 + rbx*8]
0x000000000040b125 : call qword ptr [rax]
0x0000000000425b53 : call qword ptr [rcx]
0x0000000000424963 : call qword ptr [rdx]
0x00000000004243e3 : call qword ptr [rsi]
0x00000000004207ba : call qword ptr [rsp + rbx*8]
0x000000000040263d : call rax
0x000000000041230c : call rbx
0x0000000000406236 : call rcx
0x00000000004250cb : call rdi
0x000000000040df4b : cdq ; ret 0xb60f
0x00000000004056ee : clc ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041d24a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x000000000040526b : clc ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041e274 : clc ; add rsp, 0x250 ; pop rbp ; ret
0x00000000004051f6 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000405144 : clc ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000404e98 : clc ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040d495 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000418d32 : clc ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000410db8 : clc ; add rsp, 0xb0 ; pop rbp ; ret
0x000000000040d9c0 : clc ; add rsp, 0xc0 ; pop rbp ; ret
0x000000000040b41d : clc ; idiv edi ; dec dword ptr [rax - 0x77] ; ret 0x2948
0x00000000004025df : clc ; jne 0x4025e8 ; pop rbp ; ret
0x000000000041bfba : clc ; mov ax, r8w ; movzx eax, ax ; pop rbp ; ret
0x000000000041c96a : clc ; mov byte ptr [rax + 0x1c], 0 ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000041d375 : clc ; mov dword ptr [rax + 0x14], ecx ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000411055 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000041c858 : clc ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x000000000041b17e : clc ; mov dword ptr [rcx + 0x18], eax ; pop rbp ; ret
0x000000000041ac36 : clc ; mov dword ptr [rcx + 0x2c], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041c417 : clc ; mov dword ptr [rdi + 0x18], 0x95f616 ; pop rbp ; ret
0x000000000042041f : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040d9fe : clc ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000403cd7 : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040b97b : clc ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040b99b : clc ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040b9bb : clc ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000041322b : clc ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000041326b : clc ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000041324b : clc ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000041bcec : clc ; mov rax, r8 ; pop rbp ; ret
0x0000000000407549 : clc ; mov rsi, qword ptr [rbp - 0x10] ; mov edx, dword ptr [rbp - 0x14] ; call rcx
0x0000000000403cdb : clc ; pop rbp ; ret
0x000000000041526c : cld ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000402867 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041f46a : cld ; add rsp, 0x10e0 ; pop rbp ; ret
0x000000000040fdab : cld ; add rsp, 0x120 ; pop rbp ; ret
0x0000000000416609 : cld ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004058f6 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000407511 : cld ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004064f2 : cld ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040d2ba : cld ; add rsp, 0xc0 ; pop rbp ; ret
0x0000000000415a03 : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000042041c : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000416663 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000416606 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004058f3 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040750e : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004064ef : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000415273 : cld ; pop rbp ; ret
0x00000000004070bb : cli ; add byte ptr [rdi], cl ; test dword ptr [rbp + 0x5dffffff], ecx ; ret
0x000000000040af81 : cli ; add eax, 0x6348ca01 ; ret 0x6948
0x000000000040f2f8 : cmove ecx, edx ; movsxd rax, ecx ; pop rbp ; ret
0x00000000004026c3 : cmp al, 0x25 ; js 0x4026db ; add al, bpl ; ret 0xfff9
0x00000000004241c0 : cmp bh, -3 ; jmp qword ptr [rbx]
0x000000000040c10a : cmp dword ptr [rax - 0x75], ecx ; jne 0x40c0f4 ; call rax
0x000000000041fde9 : cmp dword ptr [rdx - 0x76be63d5], ebx ; ret
0x0000000000415f66 : cmp eax, 0x8945c621 ; ret 0x8141
0x000000000040259d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4025b0 ; pop rbp ; ret
0x000000000040a94a : cmp ebp, eax ; fstp xword ptr [rcx] ; ret 0xf40
0x00000000004169ef : cmpsd dword ptr [rsi], dword ptr [rdi] ; cvttps2pi mm0, qword ptr [rcx - 0xe] ; jmp qword ptr [rcx]
0x00000000004169f0 : cvttps2pi mm0, qword ptr [rcx - 0xe] ; jmp qword ptr [rcx]
0x0000000000417025 : cwde ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000413b7c : cwde ; mov rcx, qword ptr [rax*8 + 0x422c10] ; jmp rcx
0x0000000000419400 : cwde ; pop rdx ; adc dword ptr [rcx - 0xa], eax ; jmp qword ptr [rcx]
0x00000000004196dc : cwde ; sbb byte ptr [rcx - 0xe], al ; jmp qword ptr [rcx]
0x000000000040576d : dec dword ptr [rax + 0x21] ; ret 0x948
0x000000000040de64 : dec dword ptr [rax + 0x69] ; ret 0xa
0x00000000004093cd : dec dword ptr [rax - 0x46] ; jbe 0x409415 ; ret
0x0000000000407dfe : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; call 0xffffffffff40c032
0x0000000000414ee6 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; pop rax ; xor byte ptr [rdx], al ; jmp rcx
0x000000000041579c : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; xor dword ptr [rdx], eax ; jmp rcx
0x000000000041e080 : dec dword ptr [rax - 0x75] ; push rbp ; call 0x461d8
0x000000000041bc1d : dec dword ptr [rax - 0x77] ; jge 0x41bc20 ; pop rbp ; ret
0x0000000000407aef : dec dword ptr [rax - 0x77] ; ret 0x2948
0x00000000004139ac : dec dword ptr [rax - 0x77] ; ret 0x4be8
0x00000000004136a9 : dec dword ptr [rax - 0x77] ; ret 0x4ee8
0x000000000041e0b6 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000403703 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000411d12 : dec dword ptr [rcx - 0x77] ; ret 0x294d
0x000000000040df49 : dec dword ptr [rdi] ; cdq ; ret 0xb60f
0x0000000000409c72 : dec dword ptr [rdi] ; pushfq ; ret 0xe280
0x000000000040df05 : dec dword ptr [rdi] ; xchg eax, edx ; ret 0xe280
0x000000000040579b : div dword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000040579a : div qword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x00000000004093dd : enter -0x46b8, 0x40 ; jbe 0x409425 ; ret
0x000000000040c107 : enter -0x74b8, 0x39 ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x000000000040c333 : enter -0x74b8, 0x78 ; adc al, ch ; ret
0x000000000041ec54 : enter -0x76b8, 0xc ; ret 0x59e9
0x00000000004151bd : enter 0, 0 ; pop rbx ; pop rbp ; ret
0x00000000004184ee : enter 0x41ed, -0x77 ; ret 0x8141
0x000000000041b117 : enter 0x4233, 0 ; jmp rcx
0x00000000004120a0 : enter 0x4b05, 0x34 ; fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x00000000004134cf : enter 0x4d89, -0x14 ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000040e8d2 : enter 0x548, 0 ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000416441 : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000406757 : fadd dword ptr [rcx + 0x30] ; ret 0x8041
0x0000000000419b45 : fadd dword ptr [rcx - 0xe] ; jmp qword ptr [rcx]
0x000000000040edb5 : faddp st(1) ; fstp xword ptr [rbp - 0x20] ; fld xword ptr [rbp - 0x20] ; pop rbp ; ret
0x000000000041b5ac : fbld dword ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000041b5ad : fbld dword ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x00000000004239f5 : fdiv st(6), st(0) ; call qword ptr [rax]
0x00000000004253f1 : fdiv st(6), st(0) ; jmp qword ptr [rdx]
0x000000000040a521 : fdivr qword ptr [rax - 0x7f] ; ret 7
0x000000000040a949 : fdivr qword ptr [rbx] ; call 0x4102e330
0x00000000004120a4 : fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x0000000000417992 : fild dword ptr [rdi + rcx + 0x44] ; ret 0x8941
0x000000000041489e : fild word ptr [rbp - 0x76ba39df] ; ret 0x8141
0x000000000041c0e4 : fimul dword ptr [rax - 0x3f49f030] ; pop rbx ; pop rbp ; ret
0x000000000040edba : fld xword ptr [rbp - 0x20] ; pop rbp ; ret
0x000000000040bb23 : fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x000000000041f68e : fmul dword ptr [r8 - 0x77] ; ret 0x8148
0x00000000004102eb : fmul dword ptr [rax + 0x29] ; ret 0x148
0x000000000040bb24 : fmul dword ptr [rax - 0x77] ; ret 0x2948
0x000000000041f68f : fmul dword ptr [rax - 0x77] ; ret 0x8148
0x00000000004207bc : fmul qword ptr [rax - 0x7d] ; ret
0x000000000040edb7 : fstp xword ptr [rbp - 0x20] ; fld xword ptr [rbp - 0x20] ; pop rbp ; ret
0x000000000040a94c : fstp xword ptr [rcx] ; ret 0xf40
0x0000000000402839 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041a6de : hlt ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041d2af : hlt ; mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041c854 : hlt ; mov rcx, qword ptr [rbp - 8] ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x00000000004025b0 : hlt ; pop rbp ; mov edi, 0x6273e8 ; jmp rax
0x000000000040b41e : idiv edi ; dec dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000408866 : idiv edi ; ljmp ptr [rcx] ; ret 0x858b
0x000000000040dfd7 : imul byte ptr [rsi] ; adc dword ptr [rcx - 0xa], eax ; jmp qword ptr [rcx]
0x00000000004198f2 : imul edx, dword ptr [rbx - 0xd7f], -1 ; jmp qword ptr [rcx]
0x00000000004240bc : in al, 0 ; add byte ptr [rax], al ; and al, ch ; std ; jmp rdx
0x000000000040efae : in al, 0x48 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040737d : in al, 0x48 ; mov ecx, dword ptr [rbp - 0x28] ; call rax
0x00000000004241bc : in al, 1 ; add byte ptr [rax], al ; cmp bh, -3 ; jmp qword ptr [rbx]
0x00000000004152e1 : in al, dx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407550 : in al, dx ; call rcx
0x0000000000406232 : in al, dx ; mov dword ptr [rbp - 0x34], eax ; call rcx
0x00000000004134d2 : in al, dx ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x00000000004062cc : in al, dx ; mov rsi, rcx ; call rax
0x00000000004134d5 : in al, dx ; pop rbp ; ret
0x000000000041637a : in eax, -0x4a ; loope 0x4163a3 ; ret 0x8941
0x000000000040a51c : inc byte ptr [rcx - 0x23a0353e] ; js 0x40a4ad ; ret 7
0x000000000041b767 : inc dword ptr [rax + 0x2041f3ca] ; rol byte ptr [rbp + 8], 1 ; ret 0x8844
0x00000000004235bf : inc dword ptr [rax + 0xa] ; add byte ptr [rax], al ; mov al, -0x11 ; std ; call qword ptr [rax]
0x00000000004179aa : inc dword ptr [rcx - 0x77] ; ret
0x0000000000406b1c : inc dword ptr [rcx - 0x77] ; ret 0x8141
0x000000000041232b : inc dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000423d5f : inc eax ; sub byte ptr [rax], al ; add al, ah ; jle 0x423d6e ; jmp rax
0x000000000040edbb : insd dword ptr [rdi], dx ; loopne 0x40ee1e ; ret
0x00000000004141a5 : int 0x80
0x00000000004180df : int 0x81
0x000000000041ddbc : int 0xfd
0x000000000041ba1b : int1 ; add dword ptr [rcx - 0x78], eax ; ret 0x3045
0x000000000041bc70 : int1 ; jmp qword ptr [rax]
0x00000000004025a3 : ja 0x4025aa ; pop rbp ; ret
0x000000000040da01 : ja 0x40da4e ; pop rbp ; ret
0x00000000004093d1 : jbe 0x409411 ; ret
0x00000000004093d0 : jbe 0x409412 ; ret
0x00000000004093e1 : jbe 0x409421 ; ret
0x00000000004093e0 : jbe 0x409422 ; ret
0x000000000040dfd6 : jbe 0x40dfd7 ; adc dword ptr cs:[rcx - 0xa], eax ; jmp qword ptr [rcx]
0x00000000004025af : je 0x4025ad ; pop rbp ; mov edi, 0x6273e8 ; jmp rax
0x0000000000403fc4 : je 0x404031 ; add byte ptr [rdx + rdx*8 - 0x763ebbf1], al ; ret 0xb0
0x00000000004047f0 : je 0x404859 ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000424a81 : je 0x424a83 ; call rbx
0x0000000000423d75 : jg 0x423d78 ; jmp qword ptr [rax]
0x0000000000403cd6 : jge 0x403cd7 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000407548 : jge 0x40754b ; mov rsi, qword ptr [rbp - 0x10] ; mov edx, dword ptr [rbp - 0x14] ; call rcx
0x000000000040b97a : jge 0x40b97b ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040b99a : jge 0x40b99b ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040b9ba : jge 0x40b9bb ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000040bd70 : jge 0x40bd63 ; mov rcx, qword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040d340 : jge 0x40d333 ; mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040d9fd : jge 0x40d9fe ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040edb8 : jge 0x40eda0 ; fld xword ptr [rbp - 0x20] ; pop rbp ; ret
0x000000000041322a : jge 0x41322b ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000041324a : jge 0x41324b ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000041326a : jge 0x41326b ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000413290 : jge 0x41328d ; pop rbp ; ret
0x000000000041bc20 : jge 0x41bc1d ; pop rbp ; ret
0x0000000000423d65 : jle 0x423d68 ; jmp rax
0x0000000000418f2f : jmp 0x3810b7
0x0000000000401fcb : jmp 0x401ec7
0x0000000000415bf6 : jmp 0x415c02
0x000000000040a4c9 : jmp 0x426751
0x000000000040c5c0 : jmp 0x49034f10
0x000000000040d03e : jmp 0x4903598e
0x000000000040d0ab : jmp 0x490359fb
0x000000000040d83c : jmp 0x4903618c
0x000000000040d8a9 : jmp 0x490361f9
0x0000000000414678 : jmp 0xffffffffc2ca8e82
0x0000000000403d4a : jmp qword ptr [rax]
0x00000000004241c3 : jmp qword ptr [rbx]
0x0000000000404342 : jmp qword ptr [rcx]
0x0000000000424bc3 : jmp qword ptr [rdi]
0x0000000000424743 : jmp qword ptr [rdx]
0x00000000004025b7 : jmp rax
0x0000000000402d48 : jmp rcx
0x00000000004025f7 : jmp rdx
0x00000000004025e0 : jne 0x4025e7 ; pop rbp ; ret
0x000000000040579c : jne 0x405794 ; mov rax, rdx ; pop rbp ; ret
0x0000000000405c06 : jne 0x405bfe ; mov rax, rdx ; pop rbp ; ret
0x000000000040622e : jne 0x406228 ; mov edx, dword ptr [rbp - 0x14] ; mov dword ptr [rbp - 0x34], eax ; call rcx
0x00000000004070bd : jne 0x407057 ; pop rbp ; ret
0x0000000000407379 : jne 0x407344 ; mov edx, dword ptr [rbp - 0x1c] ; mov rcx, qword ptr [rbp - 0x28] ; call rax
0x000000000040754c : jne 0x407543 ; mov edx, dword ptr [rbp - 0x14] ; call rcx
0x000000000040bde6 : jne 0x40bdd1 ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000040c10d : jne 0x40c0f1 ; call rax
0x000000000040f45c : jne 0x40f454 ; mov rax, rdx ; pop rbp ; ret
0x000000000041afb9 : jne 0x41af9c ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x000000000041b441 : jne 0x41b439 ; mov rax, rdx ; pop rbp ; ret
0x000000000041b552 : jne 0x41b54a ; mov rax, rdx ; pop rbp ; ret
0x0000000000423cf5 : jno 0x423cf8 ; jmp qword ptr [rax]
0x0000000000423cf4 : jno 0x423cf9 ; jmp qword ptr [rax]
0x0000000000423d35 : jnp 0x423d38 ; jmp qword ptr [rax]
0x0000000000423d34 : jnp 0x423d39 ; jmp qword ptr [rax]
0x000000000040742e : jns 0x407436 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000423d25 : jns 0x423d28 ; jmp rax
0x0000000000406f02 : jo 0x406f63 ; ret
0x0000000000410997 : jo 0x41099f ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004111a5 : jo 0x411206 ; ret
0x00000000004127cf : jo 0x412835 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000412e74 : jo 0x412ed5 ; ret
0x0000000000412fae : jo 0x41300f ; ret
0x000000000041324f : jo 0x4132b0 ; ret
0x000000000041324e : jo 0x4132b1 ; ret
0x0000000000418d36 : jo 0x418d97 ; ret
0x000000000041a1e8 : jo 0x41a174 ; stc ; add eax, 0xf000000 ; xchg eax, esp ; ret 0x9588
0x0000000000424961 : jo 0x424963 ; call qword ptr [rdx]
0x0000000000424981 : jo 0x424983 ; call qword ptr [rdx]
0x00000000004249a1 : jo 0x4249a3 ; call qword ptr [rdx]
0x0000000000424bc1 : jp 0x424bc3 ; jmp qword ptr [rdi]
0x0000000000404159 : jrcxz 0x404118 ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004026c5 : js 0x4026d9 ; add al, bpl ; ret 0xfff9
0x000000000040a522 : js 0x40a4a7 ; ret 7
0x0000000000415b7d : lahf ; ret
0x0000000000418635 : lahf ; sub ah, byte ptr [rcx] ; ret 0x8941
0x0000000000418641 : lahf ; sub al, byte ptr [rcx - 0x77] ; ret 0x8141
0x000000000041cf1a : lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x000000000040df97 : lea edi, dword ptr [rax + 0xffffffe] ; cdq ; ret 0xb60f
0x000000000040df45 : lea esi, dword ptr [rax + 0xffffffe] ; cdq ; ret 0xb60f
0x000000000040f206 : leave ; test dword ptr [rcx], esp ; ret 0xd709
0x000000000042391f : ljmp ptr [rax - 0xfffffe9] ; mov dh, -2 ; call rax
0x0000000000408868 : ljmp ptr [rcx] ; ret 0x858b
0x00000000004239b0 : lock sbb dword ptr [rax], eax ; add al, dh ; sar esi, cl ; call qword ptr [rax]
0x00000000004148a7 : loop 0x414868 ; loopne 0x414891 ; test dword ptr [rcx - 0x77], eax ; ret
0x000000000041637c : loope 0x4163a1 ; ret 0x8941
0x000000000041863e : loope 0x418618 ; mov edi, 0x89412a9f ; ret 0x8141
0x000000000040742c : loopne 0x4073b5 ; jns 0x407438 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x000000000040742b : loopne 0x4073b6 ; jns 0x407439 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x000000000040bde7 : loopne 0x40be39 ; mov esi, eax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000040edb9 : loopne 0x40ed9b ; insd dword ptr [rdi], dx ; loopne 0x40ee20 ; ret
0x000000000040edbc : loopne 0x40ee1d ; ret
0x00000000004148a9 : loopne 0x41488f ; test dword ptr [rcx - 0x77], eax ; ret
0x0000000000414930 : loopne 0x414980 ; add esp, 0x20 ; pop rbp ; ret
0x000000000041492f : loopne 0x414981 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000414b20 : loopne 0x414b70 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000414b1f : loopne 0x414b71 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000415a07 : loopne 0x415a0e ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000416378 : loopne 0x416394 ; in eax, -0x4a ; loope 0x4163a5 ; ret 0x8941
0x00000000004191e0 : loopne 0x4191e7 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041f46e : loopne 0x41f485 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041ff00 : loopne 0x41ff08 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040bcee : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004235c4 : mov al, -0x11 ; std ; call qword ptr [rax]
0x0000000000403dd0 : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000414852 : mov al, 0 ; call 0x402418
0x00000000004050aa : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000412bd8 : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x000000000041c7de : mov al, 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000404076 : mov al, 2 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000414a02 : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041b5ab : mov al, byte ptr [rbp - 0x21] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000405fdb : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041ff36 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041c86c : mov al, byte ptr [rdi + 0x1c] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041c150 : mov al, dl ; movzx eax, al ; pop rbp ; ret
0x000000000041c0e5 : mov al, dl ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000041c02a : mov ax, dx ; movzx eax, ax ; pop rbp ; ret
0x000000000041bfbb : mov ax, r8w ; movzx eax, ax ; pop rbp ; ret
0x000000000041bfc0 : mov bh, -0x40 ; pop rbp ; ret
0x0000000000423db5 : mov bh, bh ; jmp qword ptr [rax]
0x0000000000405531 : mov byte ptr [0x627510], al ; pop rbp ; ret
0x000000000041d677 : mov byte ptr [rax + 0x14], 1 ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041c96b : mov byte ptr [rax + 0x1c], 0 ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000041001b : mov byte ptr [rax + 0xc], 1 ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040af72 : mov byte ptr [rax - 0x3f], cl ; call 0x20338a0
0x000000000040afb6 : mov byte ptr [rax - 0x3f], cl ; call 0x20338e4
0x000000000040afff : mov byte ptr [rax - 0x3f], cl ; call 0x203392d
0x0000000000402613 : mov byte ptr [rip + 0x224e3e], 1 ; ret
0x00000000004261d8 : mov byte ptr [rsi - 1], ah ; call qword ptr [rsi]
0x000000000040f204 : mov ch, 0x1c ; leave ; test dword ptr [rcx], esp ; ret 0xd709
0x0000000000424f29 : mov cl, -2 ; jmp qword ptr [rcx]
0x00000000004134ce : mov dh, -0x38 ; mov dword ptr [rbp - 0x14], ecx ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000040dbd5 : mov dh, -0x39 ; pop rbp ; ret
0x000000000041c5b4 : mov dh, -0x3a ; pop rbp ; ret
0x00000000004065c0 : mov dh, -0x3f ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b968 : mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404ba7 : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406793 : mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403f26 : mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040cdbb : mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041eac4 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x00000000004057e0 : mov dh, -0x40 ; pop rbp ; ret
0x000000000041c0e8 : mov dh, -0x40 ; pop rbx ; pop rbp ; ret
0x0000000000423925 : mov dh, -2 ; call rax
0x0000000000423db4 : mov dil, dil ; jmp qword ptr [rax]
0x000000000040b710 : mov dr0, word ptr [rdi] ; mov eax, ecx ; pop rbp ; ret
0x000000000040550d : mov dword ptr [0x627508], edi ; pop rbp ; ret
0x000000000041d376 : mov dword ptr [rax + 0x14], ecx ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404c36 : mov dword ptr [rax + 0x18], 0xffffffff ; pop rbp ; ret
0x0000000000404d1f : mov dword ptr [rax + 0x18], ecx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000411056 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040af6f : mov dword ptr [rax - 0x3eb77778], ecx ; call 0x20338a3
0x000000000040afb3 : mov dword ptr [rax - 0x3eb77778], ecx ; call 0x20338e7
0x000000000040affc : mov dword ptr [rax - 0x3eb77778], ecx ; call 0x2033930
0x0000000000411018 : mov dword ptr [rax], eax ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000410ed4 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000411017 : mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004054af : mov dword ptr [rbp - 0x10], ecx ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000041b40b : mov dword ptr [rbp - 0x14], eax ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x00000000004134d0 : mov dword ptr [rbp - 0x14], ecx ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000403fe5 : mov dword ptr [rbp - 0x24], eax ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041346a : mov dword ptr [rbp - 0x24], eax ; mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x00000000004029b9 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406233 : mov dword ptr [rbp - 0x34], eax ; call rcx
0x000000000040bcec : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004050a8 : mov dword ptr [rbp - 0x50], eax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040412a : mov dword ptr [rbp - 0x60], eax ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000402837 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402865 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042041d : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040c095 : mov dword ptr [rbp - 8], eax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000403cd5 : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000041328f : mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x000000000041c859 : mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x000000000041b17f : mov dword ptr [rcx + 0x18], eax ; pop rbp ; ret
0x0000000000404bec : mov dword ptr [rcx + 0x18], edx ; pop rbp ; ret
0x000000000041ac37 : mov dword ptr [rcx + 0x2c], eax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004110ce : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041a831 : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041004c : mov dword ptr [rdi + 0x10], eax ; pop rbp ; ret
0x000000000040c23a : mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x000000000041c418 : mov dword ptr [rdi + 0x18], 0x95f616 ; pop rbp ; ret
0x000000000040da00 : mov dword ptr [rdi + 0x48], esi ; pop rbp ; ret
0x0000000000405daa : mov dword ptr [rsi + 8], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041d6be : mov dword ptr [rsi], edi ; pop rbp ; ret
0x0000000000405063 : mov eax, 0xb0c28948 ; add al, ch ; ret 0xffd1
0x000000000040df98 : mov eax, 0xffffffe ; cdq ; ret 0xb60f
0x0000000000415e5e : mov eax, dword ptr [rax] ; movsx esi, byte ptr [rax] ; call 0x4020b7
0x0000000000410e88 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040d4f3 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405d53 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041b0d8 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x0000000000410e85 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004132b1 : mov eax, dword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004054b3 : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004152df : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004134d3 : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000414783 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000410e3d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040b8f4 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000410ece : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040ba99 : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040efac : mov eax, dword ptr [rbp - 0x1c] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041492e : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040bdec : mov eax, dword ptr [rbp - 0x20] ; call rax
0x000000000041346d : mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x000000000040d59f : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041afbf : mov eax, dword ptr [rbp - 0x28] ; call rax
0x000000000041101a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000414a6b : mov eax, dword ptr [rbp - 0x2c] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041119f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000412d49 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041ca29 : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041a6dc : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000416664 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000416607 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004058f4 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040750f : mov eax, dword ptr [rbp - 4] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004064f0 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000415271 : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004056ec : mov eax, dword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405269 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004051f4 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000405142 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000404e96 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040d493 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000418d30 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000403cd9 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040b97d : mov eax, dword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040b99d : mov eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040b9bd : mov eax, dword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000041322d : mov eax, dword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000041326d : mov eax, dword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000041324d : mov eax, dword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000041bfbd : mov eax, eax ; movzx eax, ax ; pop rbp ; ret
0x000000000041bcee : mov eax, eax ; pop rbp ; ret
0x00000000004170a7 : mov eax, ecx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b712 : mov eax, ecx ; pop rbp ; ret
0x000000000040c421 : mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041c02b : mov eax, edx ; movzx eax, ax ; pop rbp ; ret
0x000000000040579f : mov eax, edx ; pop rbp ; ret
0x000000000041bfbc : mov eax, r8d ; movzx eax, ax ; pop rbp ; ret
0x000000000041bddc : mov eax, r9d ; pop rbp ; ret
0x000000000040263b : mov ebp, esp ; call rax
0x00000000004025a1 : mov ebp, esp ; ja 0x4025ac ; pop rbp ; ret
0x0000000000409721 : mov ecx, 0x509a0b1a ; xchg eax, edx ; ret
0x00000000004141bd : mov ecx, 0x5b2a830a ; ret
0x0000000000402dc1 : mov ecx, dword ptr [rax*8 + 0x420880] ; jmp rcx
0x0000000000402d41 : mov ecx, dword ptr [rax*8 + 0x4208c0] ; jmp rcx
0x0000000000407e00 : mov ecx, dword ptr [rax*8 + 0x4221e8] ; jmp rcx
0x000000000040b047 : mov ecx, dword ptr [rax*8 + 0x422498] ; jmp rcx
0x0000000000411262 : mov ecx, dword ptr [rax*8 + 0x422710] ; jmp rcx
0x0000000000411586 : mov ecx, dword ptr [rax*8 + 0x422758] ; jmp rcx
0x0000000000413b7e : mov ecx, dword ptr [rax*8 + 0x422c10] ; jmp rcx
0x0000000000414f5c : mov ecx, dword ptr [rax*8 + 0x422ff8] ; jmp rcx
0x0000000000414ee8 : mov ecx, dword ptr [rax*8 + 0x423058] ; jmp rcx
0x000000000041579e : mov ecx, dword ptr [rax*8 + 0x423140] ; jmp rcx
0x000000000041571e : mov ecx, dword ptr [rax*8 + 0x4231a0] ; jmp rcx
0x00000000004161da : mov ecx, dword ptr [rax*8 + 0x4232b8] ; jmp rcx
0x000000000041615a : mov ecx, dword ptr [rax*8 + 0x423318] ; jmp rcx
0x000000000041b114 : mov ecx, dword ptr [rax*8 + 0x4233c8] ; jmp rcx
0x0000000000410ed1 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040c782 : mov ecx, dword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040c71f : mov ecx, dword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040737f : mov ecx, dword ptr [rbp - 0x28] ; call rax
0x000000000040bd73 : mov ecx, dword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040d343 : mov ecx, dword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000041c856 : mov ecx, dword ptr [rbp - 8] ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x000000000041b17c : mov ecx, dword ptr [rbp - 8] ; mov dword ptr [rcx + 0x18], eax ; pop rbp ; ret
0x000000000040d410 : mov ecx, dword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000402635 : mov edi, 0x626e20 ; mov rbp, rsp ; call rax
0x00000000004025b2 : mov edi, 0x6273e8 ; jmp rax
0x00000000004025f2 : mov edi, 0x6273e8 ; jmp rdx
0x0000000000418640 : mov edi, 0x89412a9f ; ret 0x8141
0x0000000000423df5 : mov edi, dr1 ; jmp qword ptr [rax]
0x000000000040d9fc : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040b979 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040b999 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040b9b9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000413229 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000413269 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000413249 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000040c723 : mov edi, dword ptr [rcx] ; call rax
0x000000000040c109 : mov edi, dword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x000000000041d6b8 : mov edi, dword ptr [rsi] ; add rdi, rax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x00000000004207b7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000423de5 : mov edi, edi ; jmp rax
0x00000000004207b6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000409711 : mov edx, 0x509a0b1a ; xchg eax, edx ; ret
0x000000000040754e : mov edx, dword ptr [rbp - 0x14] ; call rcx
0x0000000000406230 : mov edx, dword ptr [rbp - 0x14] ; mov dword ptr [rbp - 0x34], eax ; call rcx
0x00000000004062ca : mov edx, dword ptr [rbp - 0x14] ; mov rsi, rcx ; call rax
0x0000000000404be8 : mov edx, dword ptr [rbp - 0x18] ; mov qword ptr [rcx + 0x18], rdx ; pop rbp ; ret
0x000000000040737b : mov edx, dword ptr [rbp - 0x1c] ; mov rcx, qword ptr [rbp - 0x28] ; call rax
0x00000000004132b5 : mov edx, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000423eb5 : mov esi, 0x2e20ffff ; add byte ptr [rax], al ; push rax ; ret
0x000000000040a7ba : mov esi, 0x81ca29e5 ; ret 0x270e
0x000000000040754b : mov esi, dword ptr [rbp - 0x10] ; mov edx, dword ptr [rbp - 0x14] ; call rcx
0x000000000040622d : mov esi, dword ptr [rbp - 0x10] ; mov edx, dword ptr [rbp - 0x14] ; mov dword ptr [rbp - 0x34], eax ; call rcx
0x000000000040c10c : mov esi, dword ptr [rbp - 0x20] ; call rax
0x000000000040bd77 : mov esi, dword ptr [rcx] ; call rax
0x00000000004025f0 : mov esi, eax ; mov edi, 0x6273e8 ; jmp rdx
0x000000000040bde9 : mov esi, eax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000041afbc : mov esi, eax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x00000000004062ce : mov esi, ecx ; call rax
0x00000000004150f8 : mov esp, dword ptr [rcx] ; ret 0x8941
0x000000000041eac7 : mov esp, ebp ; pop rbp ; ret
0x000000000040550c : mov qword ptr [0x627508], rdi ; pop rbp ; ret
0x0000000000404c35 : mov qword ptr [rax + 0x18], -1 ; pop rbp ; ret
0x0000000000404d1e : mov qword ptr [rax + 0x18], rcx ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004054ae : mov qword ptr [rbp - 0x10], rcx ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000404129 : mov qword ptr [rbp - 0x60], rax ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040c094 : mov qword ptr [rbp - 8], rax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000403cd4 : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000041328e : mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000404beb : mov qword ptr [rcx + 0x18], rdx ; pop rbp ; ret
0x00000000004110cd : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041a830 : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041004b : mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x000000000040d9ff : mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000405da9 : mov qword ptr [rsi + 8], rax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041d6bd : mov qword ptr [rsi], rdi ; pop rbp ; ret
0x000000000040bced : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004050a9 : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000415e5d : mov rax, qword ptr [rax] ; movsx esi, byte ptr [rax] ; call 0x4020b8
0x000000000040d4f2 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405d52 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000410e84 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004132b0 : mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004054b2 : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000414782 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000410e3c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040b8f3 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040ba98 : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000041492d : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040bdeb : mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000040d59e : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041afbe : mov rax, qword ptr [rbp - 0x28] ; call rax
0x000000000041119e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000412d48 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004056eb : mov rax, qword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405268 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004051f3 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000405141 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000404e95 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040d492 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000418d2f : mov rax, qword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000403cd8 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040b97c : mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040b99c : mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040b9bc : mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000041322c : mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000041326c : mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000041324c : mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000041bced : mov rax, r8 ; pop rbp ; ret
0x00000000004170a6 : mov rax, rcx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040c420 : mov rax, rdx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040579e : mov rax, rdx ; pop rbp ; ret
0x000000000040263a : mov rbp, rsp ; call rax
0x00000000004025a0 : mov rbp, rsp ; ja 0x4025ad ; pop rbp ; ret
0x0000000000402dc0 : mov rcx, qword ptr [rax*8 + 0x420880] ; jmp rcx
0x0000000000402d40 : mov rcx, qword ptr [rax*8 + 0x4208c0] ; jmp rcx
0x0000000000407dff : mov rcx, qword ptr [rax*8 + 0x4221e8] ; jmp rcx
0x000000000040b046 : mov rcx, qword ptr [rax*8 + 0x422498] ; jmp rcx
0x0000000000411261 : mov rcx, qword ptr [rax*8 + 0x422710] ; jmp rcx
0x0000000000411585 : mov rcx, qword ptr [rax*8 + 0x422758] ; jmp rcx
0x0000000000413b7d : mov rcx, qword ptr [rax*8 + 0x422c10] ; jmp rcx
0x0000000000414f5b : mov rcx, qword ptr [rax*8 + 0x422ff8] ; jmp rcx
0x0000000000414ee7 : mov rcx, qword ptr [rax*8 + 0x423058] ; jmp rcx
0x000000000041579d : mov rcx, qword ptr [rax*8 + 0x423140] ; jmp rcx
0x000000000041571d : mov rcx, qword ptr [rax*8 + 0x4231a0] ; jmp rcx
0x00000000004161d9 : mov rcx, qword ptr [rax*8 + 0x4232b8] ; jmp rcx
0x0000000000416159 : mov rcx, qword ptr [rax*8 + 0x423318] ; jmp rcx
0x000000000041b113 : mov rcx, qword ptr [rax*8 + 0x4233c8] ; jmp rcx
0x000000000040c781 : mov rcx, qword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040c71e : mov rcx, qword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040737e : mov rcx, qword ptr [rbp - 0x28] ; call rax
0x000000000040bd72 : mov rcx, qword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040d342 : mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000041c855 : mov rcx, qword ptr [rbp - 8] ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x000000000041b17b : mov rcx, qword ptr [rbp - 8] ; mov dword ptr [rcx + 0x18], eax ; pop rbp ; ret
0x000000000040d40f : mov rcx, qword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040d9fb : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040b978 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040b998 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040b9b8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000413228 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000413268 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000413248 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000040c722 : mov rdi, qword ptr [rcx] ; call rax
0x000000000040c108 : mov rdi, qword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x0000000000404be7 : mov rdx, qword ptr [rbp - 0x18] ; mov qword ptr [rcx + 0x18], rdx ; pop rbp ; ret
0x00000000004132b4 : mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040754a : mov rsi, qword ptr [rbp - 0x10] ; mov edx, dword ptr [rbp - 0x14] ; call rcx
0x000000000040c10b : mov rsi, qword ptr [rbp - 0x20] ; call rax
0x000000000040bd76 : mov rsi, qword ptr [rcx] ; call rax
0x00000000004025ef : mov rsi, rax ; mov edi, 0x6273e8 ; jmp rdx
0x000000000040bde8 : mov rsi, rax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000041afbb : mov rsi, rax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x00000000004062cd : mov rsi, rcx ; call rax
0x000000000041eac6 : mov rsp, rbp ; pop rbp ; ret
0x00000000004076c1 : movabs al, byte ptr [0x5d000000a0c48148] ; ret
0x0000000000409cfc : movabs byte ptr [0x8100000001c281c5], al ; ret 0x2075
0x0000000000415b00 : movabs dword ptr [0x941c90941f0213f], eax ; ret 0x3145
0x0000000000419fe1 : movabs dword ptr [0xfffffff281f4f275], eax ; jmp qword ptr [rcx]
0x000000000041830d : movabs eax, dword ptr [0x21fffffffff281ee] ; ret 0xfa81
0x000000000041350f : movaps xmm0, xmm1 ; pop rbp ; ret
0x000000000042497c : movsb byte ptr [rdi], byte ptr [rsi] ; or dword ptr [rax], eax ; add byte ptr [rax], dl ; jo 0x424988 ; call qword ptr [rdx]
0x0000000000415e60 : movsx esi, byte ptr [rax] ; call 0x4020b5
0x000000000040f2fc : movsxd rax, ecx ; pop rbp ; ret
0x000000000040b967 : movzx eax, al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404ba6 : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406792 : movzx eax, al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403f25 : movzx eax, al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040cdba : movzx eax, al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041eac3 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004057df : movzx eax, al ; pop rbp ; ret
0x000000000041c0e7 : movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000041bfbf : movzx eax, ax ; pop rbp ; ret
0x000000000040dbd4 : movzx eax, bh ; pop rbp ; ret
0x00000000004065bf : movzx eax, cl ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041c5b3 : movzx eax, dh ; pop rbp ; ret
0x000000000040dbd3 : movzx eax, dil ; pop rbp ; ret
0x000000000041c5b2 : movzx eax, sil ; pop rbp ; ret
0x0000000000417635 : movzx eax, word ptr [rbp - 2] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000419cfa : mul dword ptr [rbp + 0x21] ; ret 0x8941
0x00000000004207d8 : nop dword ptr [rax + rax] ; ret
0x00000000004118ed : or al, 0x18 ; ret 0x6451
0x0000000000404298 : or al, 0x25 ; ret 0x421c
0x0000000000407e01 : or al, 0xffffffffffffffc5 ; call 0xffffffffff40c02f
0x000000000041b115 : or al, 0xffffffffffffffc5 ; enter 0x4233, 0 ; jmp rcx
0x0000000000414ee9 : or al, 0xffffffffffffffc5 ; pop rax ; xor byte ptr [rdx], al ; jmp rcx
0x000000000041579f : or al, 0xffffffffffffffc5 ; xor dword ptr [rdx], eax ; jmp rcx
0x000000000041001d : or al, 1 ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b57d : or al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000424281 : or bh, dh ; call qword ptr [rax]
0x0000000000400d50 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000416a3b : or byte ptr [rax], al ; add byte ptr [rbp - 0x77], al ; ret 0x3145
0x0000000000405f5c : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5588
0x000000000041a56b : or byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000402d45 : or byte ptr [rdx], al ; jmp rcx
0x000000000042495d : or dword ptr [rax], eax ; add byte ptr [rax], dl ; jo 0x424967 ; call qword ptr [rdx]
0x000000000042497d : or dword ptr [rax], eax ; add byte ptr [rax], dl ; jo 0x424987 ; call qword ptr [rdx]
0x000000000042499d : or dword ptr [rax], eax ; add byte ptr [rax], dl ; jo 0x4249a7 ; call qword ptr [rdx]
0x000000000041799e : or dword ptr [rcx], eax ; add byte ptr [rbp - 0x77], al ; ret 0x8141
0x000000000041641b : or dword ptr [rsp + rax + 0x21], esp ; ret 0xd709
0x0000000000405fff : or eax, 0x5d0000e7 ; ret
0x0000000000424bbd : or eax, dword ptr [rax] ; add al, dh ; jp 0x424bc7 ; jmp qword ptr [rdi]
0x0000000000412f31 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041bceb : or eax, edi ; mov rax, r8 ; pop rbp ; ret
0x000000000041becf : or eax, edi ; pop rbp ; ret
0x000000000041bdda : or ecx, edx ; mov eax, r9d ; pop rbp ; ret
0x0000000000425a11 : or edi, edi ; jmp rax
0x000000000041bcea : or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x000000000041bdd9 : or r9d, edx ; mov eax, r9d ; pop rbp ; ret
0x000000000041bece : or rax, rdi ; pop rbp ; ret
0x000000000041c5b0 : out 1, al ; movzx eax, sil ; pop rbp ; ret
0x000000000040dbd1 : out 1, eax ; movzx eax, dil ; pop rbp ; ret
0x00000000004173aa : out dx, al ; rol byte ptr [rcx - 0xe], 1 ; jmp qword ptr [rcx]
0x0000000000414a04 : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000415c9d : out dx, eax ; ret
0x00000000004235c5 : out dx, eax ; std ; call qword ptr [rax]
0x000000000040bc79 : outsb dx, byte ptr [rsi] ; ret 0x280f
0x00000000004207cc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040ec98 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004207ce : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040ec9a : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004207d0 : pop r14 ; pop r15 ; ret
0x000000000040702e : pop r14 ; pop rbp ; ret
0x000000000040ec9c : pop r15 ; pop rbp ; ret
0x00000000004207d2 : pop r15 ; ret
0x0000000000414eeb : pop rax ; xor byte ptr [rdx], al ; jmp rcx
0x0000000000402612 : pop rbp ; mov byte ptr [rip + 0x224e3e], 1 ; ret
0x00000000004025b1 : pop rbp ; mov edi, 0x6273e8 ; jmp rax
0x00000000004025ee : pop rbp ; mov rsi, rax ; mov edi, 0x6273e8 ; jmp rdx
0x00000000004207cb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004207cf : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004025a5 : pop rbp ; ret
0x000000000040ec97 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041403d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040702d : pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040b580 : pop rbx ; pop rbp ; ret
0x00000000004141c1 : pop rbx ; ret
0x000000000040a520 : pop rdi ; fdivr qword ptr [rax - 0x7f] ; ret 7
0x000000000040ec9d : pop rdi ; pop rbp ; ret
0x00000000004207d3 : pop rdi ; ret
0x0000000000419401 : pop rdx ; adc dword ptr [rcx - 0xa], eax ; jmp qword ptr [rcx]
0x00000000004169ee : pop rdx ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cvttps2pi mm0, qword ptr [rcx - 0xe] ; jmp qword ptr [rcx]
0x000000000040ec9b : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004207d1 : pop rsi ; pop r15 ; ret
0x000000000040702f : pop rsi ; pop rbp ; ret
0x00000000004207cd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040ec99 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040bc90 : pop rsp ; ret 0xf66
0x000000000040bc8b : push 0xf660001 ; pop rsp ; ret 0xf66
0x000000000041322e : push r8 ; pop rbp ; ret
0x000000000040aac7 : push rax ; adc al, -0x7f ; ret 0x8924
0x0000000000424a80 : push rax ; je 0x424a84 ; call rbx
0x0000000000404e9c : push rax ; pop rbp ; ret
0x0000000000423ebc : push rax ; ret
0x00000000004239ef : push rax ; sbb al, byte ptr [rax] ; add byte ptr [rax], al ; fdiv st(6), st(0) ; call qword ptr [rax]
0x00000000004239af : push rax ; sbb dword ptr [rax], eax ; add al, dh ; sar esi, cl ; call qword ptr [rax]
0x0000000000424780 : push rax ; sub esi, edi ; call qword ptr [rsi]
0x0000000000409715 : push rax ; xchg eax, edx ; ret
0x0000000000423da4 : push rax ; xchg edi, edi ; jmp rax
0x000000000041e083 : push rbp ; call 0x461d5
0x00000000004132b6 : push rbp ; clc ; pop rbp ; ret
0x000000000041ec53 : push rbp ; enter -0x76b8, 0xc ; ret 0x59e9
0x00000000004102ea : push rbp ; fmul dword ptr [rax + 0x29] ; ret 0x148
0x000000000040737c : push rbp ; in al, 0x48 ; mov ecx, dword ptr [rbp - 0x28] ; call rax
0x000000000040754f : push rbp ; in al, dx ; call rcx
0x0000000000406231 : push rbp ; in al, dx ; mov dword ptr [rbp - 0x34], eax ; call rcx
0x00000000004062cb : push rbp ; in al, dx ; mov rsi, rcx ; call rax
0x0000000000402634 : push rbp ; mov edi, 0x626e20 ; mov rbp, rsp ; call rax
0x0000000000405f67 : push rbp ; ret
0x000000000041871b : push rbp ; ror byte ptr [rax - 0x75], 1 ; ror byte ptr [r8 - 0x77], 1 ; ret 0x8148
0x0000000000404f05 : push rbp ; ror byte ptr [rax - 0x77], 1 ; ret 0x81e8
0x0000000000409c74 : pushfq ; ret 0xe280
0x000000000040edb6 : rcr ebx, 0x7d ; loopne 0x40ed9e ; insd dword ptr [rdi], dx ; loopne 0x40ee23 ; ret
0x00000000004002e5 : ret
0x0000000000400d58 : ret 0
0x00000000004100e5 : ret 0x10
0x000000000041924a : ret 0x134
0x00000000004102ee : ret 0x148
0x000000000041d765 : ret 0x18
0x000000000040a510 : ret 0x1923
0x000000000041296e : ret 0x1b2
0x00000000004148da : ret 0x1e
0x00000000004049b6 : ret 0x20
0x0000000000409d05 : ret 0x2075
0x00000000004092af : ret 0x22
0x00000000004023d2 : ret 0x224e
0x00000000004021d2 : ret 0x224f
0x0000000000401fd2 : ret 0x2250
0x000000000041c775 : ret 0x26a8
0x000000000040a7bf : ret 0x270e
0x000000000040bc7a : ret 0x280f
0x000000000040b6d8 : ret 0x2944
0x000000000040473a : ret 0x2948
0x0000000000411cf9 : ret 0x294c
0x0000000000411d15 : ret 0x294d
0x000000000041ba1f : ret 0x3045
0x0000000000415b09 : ret 0x3145
0x000000000041c8b3 : ret 0x3693
0x0000000000408efb : ret 0x3948
0x000000000040429a : ret 0x421c
0x000000000040b6db : ret 0x4589
0x000000000041e53a : ret 0x4a3b
0x00000000004139af : ret 0x4be8
0x00000000004136ac : ret 0x4ee8
0x0000000000405f65 : ret 0x5588
0x000000000040b0e4 : ret 0x5589
0x000000000041ec58 : ret 0x59e9
0x000000000040a51e : ret 0x5fca
0x000000000041a6cf : ret 0x60
0x0000000000409fb6 : ret 0x62dc
0x00000000004118ef : ret 0x6451
0x000000000040af87 : ret 0x6948
0x000000000040aad0 : ret 0x76c
0x000000000040675a : ret 0x8041
0x0000000000406b1f : ret 0x8141
0x00000000004049b3 : ret 0x8148
0x0000000000404f09 : ret 0x81e8
0x000000000041916f : ret 0x8341
0x000000000040c5c3 : ret 0x8348
0x0000000000407607 : ret 0x840
0x0000000000405bce : ret 0x844
0x000000000041751e : ret 0x8445
0x000000000040e4fc : ret 0x8589
0x000000000040886a : ret 0x858b
0x0000000000407433 : ret 0x8840
0x0000000000405b81 : ret 0x8841
0x0000000000413b39 : ret 0x8844
0x000000000040aaca : ret 0x8924
0x00000000004150fa : ret 0x8941
0x000000000041b04a : ret 0x8944
0x0000000000404977 : ret 0x8948
0x0000000000411d18 : ret 0x8949
0x000000000041c029 : ret 0x8966
0x0000000000411eac : ret 0x89a5
0x00000000004033eb : ret 0x8b48
0x000000000040a8c5 : ret 0x8d0f
0x0000000000411d2d : ret 0x8de8
0x000000000040eb21 : ret 0x941
0x000000000041b02d : ret 0x945
0x0000000000405770 : ret 0x948
0x000000000041f1f6 : ret 0x94e8
0x000000000041a175 : ret 0x9588
0x000000000040de67 : ret 0xa
0x00000000004035ca : ret 0xa0b8
0x000000000041f6e9 : ret 0xa1e8
0x000000000040f08b : ret 0xafe8
0x0000000000402fe4 : ret 0xb0
0x0000000000403d4c : ret 0xb60f
0x000000000041d159 : ret 0xb849
0x000000000040c646 : ret 0xb948
0x000000000040a4c5 : ret 0xb992
0x000000000040e5e1 : ret 0xbeb6
0x000000000041d500 : ret 0xc
0x0000000000416a8b : ret 0xc121
0x000000000040393f : ret 0xc131
0x00000000004025d5 : ret 0xc148
0x0000000000416aa3 : ret 0xc221
0x000000000040fb88 : ret 0xc2f6
0x000000000041f3c6 : ret 0xc4e8
0x000000000040af78 : ret 0xca01
0x0000000000405f1d : ret 0xca21
0x000000000040ab67 : ret 0xca29
0x000000000041c14f : ret 0xd088
0x000000000040a865 : ret 0xd262
0x0000000000413203 : ret 0xd284
0x0000000000419176 : ret 0xd4e8
0x0000000000403042 : ret 0xd709
0x0000000000407254 : ret 0xe280
0x000000000040fed6 : ret 0xe4e8
0x000000000040a86b : ret 0xea81
0x0000000000403830 : ret 0xed04
0x00000000004125bc : ret 0xee8
0x000000000041c8af : ret 0xee81
0x000000000040760e : ret 0xf01
0x0000000000411fa8 : ret 0xf180
0x000000000040b139 : ret 0xf229
0x0000000000405bb1 : ret 0xf280
0x0000000000405ed8 : ret 0xf281
0x000000000040a94e : ret 0xf40
0x000000000040bc91 : ret 0xf66
0x000000000041c024 : ret 0xfa31
0x0000000000404344 : ret 0xfa81
0x0000000000414cea : ret 0xfed3
0x000000000041485a : ret 0xfed6
0x000000000040d050 : ret 0xff3
0x000000000040bc6a : ret 0xff65
0x000000000040b50a : ret 0xff6f
0x000000000040506a : ret 0xffd1
0x00000000004027ca : ret 0xfff8
0x00000000004026ca : ret 0xfff9
0x000000000040271a : ret 0xfffa
0x0000000000415e65 : ret 0xfffe
0x000000000040b63a : ret 0xffff
0x000000000040382a : ret 1
0x000000000041cf20 : ret 2
0x000000000040a524 : ret 7
0x0000000000405439 : ret 8
0x000000000040bc64 : rol byte ptr [r8 + rcx*4 - 0x40], -0x18 ; ret 0xff65
0x000000000040bc65 : rol byte ptr [rax + rcx*4 - 0x40], -0x18 ; ret 0xff65
0x000000000041b76d : rol byte ptr [rbp + 8], 1 ; ret 0x8844
0x000000000041c0d3 : rol byte ptr [rbp + 9], 1 ; ret
0x0000000000411016 : rol byte ptr [rcx + rcx*4], 1 ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000041c949 : rol byte ptr [rcx - 0x77], 1 ; ret
0x0000000000408e64 : rol byte ptr [rcx - 0x78], 1 ; ret
0x00000000004173ab : rol byte ptr [rcx - 0xe], 1 ; jmp qword ptr [rcx]
0x000000000041bddb : rol dword ptr [rcx + rcx*4 - 0x38], 1 ; pop rbp ; ret
0x0000000000418d84 : rol dword ptr [rcx - 0xf], cl ; jmp qword ptr [rcx]
0x000000000041ec4f : ror byte ptr [r8 - 0x75], 0x55 ; enter -0x76b8, 0xc ; ret 0x59e9
0x00000000004141a0 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000041871f : ror byte ptr [r8 - 0x77], 1 ; ret 0x8148
0x00000000004111a0 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x41120b ; ret
0x00000000004093da : ror byte ptr [rax + 0x29], 1 ; enter -0x46b8, 0x40 ; jbe 0x409428 ; ret
0x000000000041beca : ror byte ptr [rax + 0x31], 1 ; xlatb ; or rax, rdi ; pop rbp ; ret
0x00000000004025dc : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4025eb ; pop rbp ; ret
0x000000000041ec50 : ror byte ptr [rax - 0x75], 0x55 ; enter -0x76b8, 0xc ; ret 0x59e9
0x000000000041871c : ror byte ptr [rax - 0x75], 1 ; ror byte ptr [r8 - 0x77], 1 ; ret 0x8148
0x000000000041eac5 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x00000000004141a1 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000411ced : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000411cf6 : ror byte ptr [rax - 0x77], 1 ; ret 0x294c
0x0000000000418720 : ror byte ptr [rax - 0x77], 1 ; ret 0x8148
0x0000000000404f06 : ror byte ptr [rax - 0x77], 1 ; ret 0x81e8
0x00000000004111a1 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x41120a ; ret
0x0000000000403f27 : ror byte ptr [rax - 0x7d], -0x3c ; pop rbp ; ret
0x000000000040cdbc : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x0000000000404b51 : ror byte ptr [rax - 0x7f], -0x3c ; adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000410993 : ror byte ptr [rax - 0x7f], -0x3c ; jo 0x4109a3 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041c02c : ror byte ptr [rdi], 1 ; mov bh, -0x40 ; pop rbp ; ret
0x000000000041c151 : ror byte ptr [rdi], 1 ; mov dh, -0x40 ; pop rbp ; ret
0x000000000041c0e6 : ror byte ptr [rdi], 1 ; mov dh, -0x40 ; pop rbx ; pop rbp ; ret
0x00000000004170a5 : ror dword ptr [rax - 0x77], -0x38 ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041338f : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x000000000041b40a : ror dword ptr [rcx + 0x458bec45], -0x14 ; pop rbp ; ret
0x00000000004025ae : sal byte ptr [rsp + rsi*8 + 0x5d], -0x41 ; call 0xffffffffff408834
0x000000000041350a : sal dl, 1 ; addps xmm1, xmm2 ; movaps xmm0, xmm1 ; pop rbp ; ret
0x0000000000423f65 : sar bh, 1 ; jmp rax
0x0000000000423d24 : sar byte ptr [rcx - 1], 1 ; jmp rax
0x000000000041a5b3 : sar byte ptr [rdi], cl ; test dword ptr [rcx - 0xe], eax ; jmp qword ptr [rcx]
0x0000000000423eb4 : sar byte ptr [rsi + 0x2e20ffff], 1 ; add byte ptr [rax], al ; push rax ; ret
0x000000000040df73 : sar dh, -1 ; dec dword ptr [rdi] ; cdq ; ret 0xb60f
0x000000000041863f : sar dword ptr [rdi - 0x76bed561], 1 ; ret 0x8141
0x00000000004025de : sar eax, 1 ; jne 0x4025e9 ; pop rbp ; ret
0x000000000040b70d : sar ecx, -0x1f ; mov dr0, word ptr [rdi] ; mov eax, ecx ; pop rbp ; ret
0x00000000004239b5 : sar esi, cl ; call qword ptr [rax]
0x00000000004025dd : sar rax, 1 ; jne 0x4025ea ; pop rbp ; ret
0x000000000040f205 : sbb al, -0x37 ; test dword ptr [rcx], esp ; ret 0xd709
0x000000000041c96d : sbb al, 0 ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000041c86e : sbb al, 0x24 ; add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000425a0d : sbb al, byte ptr [rax] ; add byte ptr [rax], ah ; or edi, edi ; jmp rax
0x00000000004239f1 : sbb al, byte ptr [rax] ; add byte ptr [rax], al ; fdiv st(6), st(0) ; call qword ptr [rax]
0x0000000000425b51 : sbb bh, bh ; call qword ptr [rcx]
0x00000000004196dd : sbb byte ptr [rcx - 0xe], al ; jmp qword ptr [rcx]
0x0000000000425db8 : sbb byte ptr [rdx - 1], dl ; call qword ptr [rdx]
0x00000000004251b0 : sbb dl, -2 ; jmp qword ptr [rdx]
0x00000000004239b1 : sbb dword ptr [rax], eax ; add al, dh ; sar esi, cl ; call qword ptr [rax]
0x0000000000423979 : sbb dword ptr [rax], eax ; add byte ptr [rax], dl ; ret 0xfffe
0x0000000000415199 : sbb dword ptr [rcx], esp ; ret 0xd709
0x0000000000425b4d : sbb eax, dword ptr [rax] ; add al, dh ; sbb bh, bh ; call qword ptr [rcx]
0x00000000004057da : sete al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041d3d8 : setne al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004057dc : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000423d20 : shl byte ptr [rdi], 0 ; add al, dl ; jns 0x423d2d ; jmp rax
0x0000000000418b19 : shl byte ptr [rip - 0xd7f], -1 ; jmp qword ptr [rcx]
0x000000000040bcaf : shl dword ptr [rsi + 0xf], 0x5c ; ret 0xf66
0x0000000000423d60 : shr byte ptr [rax], 0 ; add al, ah ; jle 0x423d6d ; jmp rax
0x0000000000423ea0 : shr byte ptr [rip - 0x47800000], -1 ; jmp rax
0x000000000041a1ea : stc ; add eax, 0xf000000 ; xchg eax, esp ; ret 0x9588
0x00000000004235c6 : std ; call qword ptr [rax]
0x00000000004235be : std ; inc dword ptr [rax + 0xa] ; add byte ptr [rax], al ; mov al, -0x11 ; std ; call qword ptr [rax]
0x00000000004241c2 : std ; jmp qword ptr [rbx]
0x00000000004240c2 : std ; jmp rdx
0x000000000041ff38 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000418636 : sub ah, byte ptr [rcx] ; ret 0x8941
0x000000000040f286 : sub ah, byte ptr [rcx] ; ret 0xd709
0x000000000041ac39 : sub al, 0x48 ; add esp, 0x20 ; pop rbp ; ret
0x00000000004184ec : sub al, 0x7d ; enter 0x41ed, -0x77 ; ret 0x8141
0x0000000000418642 : sub al, byte ptr [rcx - 0x77] ; ret 0x8141
0x0000000000423d61 : sub byte ptr [rax], al ; add al, ah ; jle 0x423d6c ; jmp rax
0x0000000000413510 : sub cl, al ; pop rbp ; ret
0x00000000004141bf : sub dword ptr [rdx], 0x5b ; ret
0x0000000000424781 : sub esi, edi ; call qword ptr [rsi]
0x0000000000420859 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000420858 : sub rsp, 8 ; add rsp, 8 ; ret
0x00000000004172fe : test al, 0 ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041641a : test al, 9 ; add al, 0x21 ; ret 0xd709
0x00000000004207da : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000042495c : test byte ptr [rcx], cl ; add byte ptr [rax], al ; adc byte ptr [rax - 2], dh ; call qword ptr [rdx]
0x000000000040f2f6 : test dh, dh ; cmove ecx, edx ; movsxd rax, ecx ; pop rbp ; ret
0x000000000040a85f : test dword ptr [rax - 0x7e000008], eax ; ret 0xd262
0x00000000004070be : test dword ptr [rbp + 0x5dffffff], ecx ; ret
0x00000000004148ab : test dword ptr [rcx - 0x77], eax ; ret
0x000000000041a5b5 : test dword ptr [rcx - 0xe], eax ; jmp qword ptr [rcx]
0x000000000040f207 : test dword ptr [rcx], esp ; ret 0xd709
0x0000000000416b3d : test dword ptr [rip - 0x17000000], eax ; ret
0x000000000040eb1c : test eax, 0x2140e457 ; ret 0x941
0x0000000000414f5e : vcomiss xmm0, xmmword ptr [rdx] ; jmp rcx
0x00000000004076f1 : wait ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000408864 : xchg eax, ebp ; idiv edi ; ljmp ptr [rcx] ; ret 0x858b
0x0000000000406217 : xchg eax, ebp ; ret
0x0000000000405f64 : xchg eax, ebp ; ret 0x5588
0x000000000041751d : xchg eax, ebp ; ret 0x8445
0x0000000000407432 : xchg eax, ebp ; ret 0x8840
0x0000000000405b80 : xchg eax, ebp ; ret 0x8841
0x000000000041d2a6 : xchg eax, ebp ; ret 0xd284
0x000000000040e4f5 : xchg eax, ebp ; ret 0xe280
0x000000000041d3d9 : xchg eax, ebp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000409716 : xchg eax, edx ; ret
0x000000000040e7b1 : xchg eax, edx ; ret 0x8041
0x000000000040df07 : xchg eax, edx ; ret 0xe280
0x000000000040623f : xchg eax, esp ; ret
0x000000000041b5a6 : xchg eax, esp ; ret 0x5588
0x000000000041a174 : xchg eax, esp ; ret 0x9588
0x0000000000413202 : xchg eax, esp ; ret 0xd284
0x00000000004057db : xchg eax, esp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000423da5 : xchg edi, edi ; jmp rax
0x000000000041bce9 : xlatb ; or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x000000000041becd : xlatb ; or rax, rdi ; pop rbp ; ret
0x00000000004161de : xor al, byte ptr [rdx] ; jmp rcx
0x0000000000414ce8 : xor al, ch ; ret 0xfed3
0x0000000000415e62 : xor al, ch ; ret 0xfffe
0x0000000000417e60 : xor bl, byte ptr [rcx + rax*4 - 0xf] ; jmp qword ptr [rcx]
0x000000000040702c : xor byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000041d24e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000414eec : xor byte ptr [rdx], al ; jmp rcx
0x0000000000415722 : xor dword ptr [rdx], eax ; jmp rcx
0x0000000000412cc7 : xor eax, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x000000000041615e : xor eax, dword ptr [rdx] ; jmp rcx
0x0000000000411015 : xor eax, edx ; mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000041bce8 : xor edi, edx ; or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x000000000041becc : xor edi, edx ; or rax, rdi ; pop rbp ; ret
0x000000000041becb : xor rdi, rdx ; or rax, rdi ; pop rbp ; ret
