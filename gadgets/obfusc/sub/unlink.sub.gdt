0x000000000040718c : adc al, -1 ; jmp rax
0x0000000000401a78 : adc al, 0x25 ; ret 0x4066
0x0000000000403ab9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040724b : add al, ah ; loopne 0x407252 ; jmp rax
0x000000000040644f : add bl, dh ; ret
0x0000000000401a75 : add byte ptr [rax - 0x73], cl ; adc al, 0x25 ; ret 0x4066
0x0000000000404e7b : add byte ptr [rax - 0x75], cl ; jge 0x404e77 ; call 0x401147
0x0000000000404afd : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000040718a : add byte ptr [rax], al ; adc al, -1 ; jmp rax
0x000000000040644d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000401a73 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; adc al, 0x25 ; ret 0x4066
0x0000000000404e79 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jge 0x404e79 ; call 0x401149
0x000000000040644b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040644c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040315e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x00000000004043ce : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004058ac : add byte ptr [rax], al ; add cl, ch ; ret 2
0x0000000000403a81 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403790 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040110b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000401169 : add byte ptr [rax], al ; jmp 0x401129
0x0000000000402052 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000404e7a : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x10] ; call 0x401148
0x000000000040721a : add byte ptr [rax], al ; nop ; fdivp st(7) ; jmp qword ptr [rax]
0x00000000004071ca : add byte ptr [rax], al ; nop ; sar bh, cl ; jmp rax
0x0000000000407db2 : add byte ptr [rax], al ; or r8b, byte ptr [rax] ; add byte ptr [rax], ch ; jrcxz 0x407dc3 ; jmp rdx
0x0000000000407656 : add byte ptr [rax], al ; pop rax ; ret
0x0000000000401e48 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040499b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403750 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040644e : add byte ptr [rax], al ; ret
0x000000000040719a : add byte ptr [rax], al ; sar edi, 1 ; jmp qword ptr [rax]
0x000000000040728a : add byte ptr [rax], al ; sub ah, -1 ; jmp rax
0x0000000000407db7 : add byte ptr [rax], ch ; jrcxz 0x407dbe ; jmp rdx
0x0000000000407198 : add byte ptr [rax], cl ; add byte ptr [rax], al ; sar edi, 1 ; jmp qword ptr [rax]
0x000000000040499c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000403751 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x00000000004062ec : add byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x0000000000401518 : add byte ptr [rcx], al ; ret
0x00000000004058a8 : add byte ptr [rdi], cl ; lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000403160 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x00000000004043d0 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000407db3 : add byte ptr [rdx + rcx], cl ; add byte ptr [rax], ch ; jrcxz 0x407dc2 ; jmp rdx
0x0000000000407218 : add byte ptr [rdx], cl ; add byte ptr [rax], al ; nop ; fdivp st(7) ; jmp qword ptr [rax]
0x00000000004058ae : add cl, ch ; ret 2
0x0000000000404fd9 : add dword ptr [rax - 0x77], ecx ; ret 0x8148
0x0000000000403a7f : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040499a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040374f : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x00000000004061ad : add dword ptr [rax], ecx ; ret 0x840
0x0000000000405e8a : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401514 : add eax, 0x207d66 ; add ebx, esi ; ret
0x00000000004058ab : add eax, 0xe9000000 ; ret 2
0x00000000004014db : add eax, edx ; sar rax, 1 ; jne 0x4014ec ; pop rbp ; ret
0x0000000000401519 : add ebx, esi ; ret
0x000000000040164b : add esp, 0x10 ; pop rbp ; ret
0x0000000000405bdc : add esp, 0x130 ; pop rbp ; ret
0x0000000000404ccc : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000401e44 : add esp, 0x1c0 ; pop rbp ; ret
0x0000000000401c17 : add esp, 0x20 ; pop rbp ; ret
0x000000000040172d : add esp, 0x30 ; pop rbp ; ret
0x0000000000403e9c : add esp, 0x50 ; pop rbp ; ret
0x0000000000402373 : add esp, 0x70 ; pop rbp ; ret
0x0000000000403daa : add esp, 0x90 ; pop rbp ; ret
0x0000000000404b63 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040110e : add esp, 8 ; ret
0x00000000004014da : add rax, rdx ; sar rax, 1 ; jne 0x4014ed ; pop rbp ; ret
0x000000000040164a : add rsp, 0x10 ; pop rbp ; ret
0x0000000000405bdb : add rsp, 0x130 ; pop rbp ; ret
0x0000000000404ccb : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000401e43 : add rsp, 0x1c0 ; pop rbp ; ret
0x0000000000401c16 : add rsp, 0x20 ; pop rbp ; ret
0x000000000040172c : add rsp, 0x30 ; pop rbp ; ret
0x0000000000403e9b : add rsp, 0x50 ; pop rbp ; ret
0x0000000000402372 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000403da9 : add rsp, 0x90 ; pop rbp ; ret
0x0000000000404b62 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040110d : add rsp, 8 ; ret
0x0000000000405e89 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401517 : and byte ptr [rax], al ; add ebx, esi ; ret
0x000000000040199f : and eax, 0x609288 ; pop rbp ; ret
0x00000000004019c3 : and eax, 0x609290 ; pop rbp ; ret
0x0000000000401109 : and eax, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000405117 : call 0x27507
0x0000000000405116 : call 0x27508
0x0000000000404e80 : call 0x401142
0x00000000004050c8 : call 0x401302
0x0000000000405118 : call 0x401342
0x00000000004051b4 : call 0x4013e2
0x0000000000403789 : call 0xffffffffe902c0d9
0x0000000000403788 : call 0xffffffffe902c0da
0x0000000000406429 : call qword ptr [r12 + rbx*8]
0x0000000000407433 : call qword ptr [rsi]
0x000000000040642a : call qword ptr [rsp + rbx*8]
0x000000000040153d : call rax
0x00000000004034dc : call rbx
0x00000000004075f3 : call rdi
0x0000000000405bda : clc ; add rsp, 0x130 ; pop rbp ; ret
0x0000000000404ecf : clc ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004043e1 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004014df : clc ; jne 0x4014e8 ; pop rbp ; ret
0x0000000000402225 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040636f : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004050c3 : clc ; mov rsi, qword ptr [rbp - 0x10] ; call 0x401307
0x0000000000406372 : clc ; pop rbp ; ret
0x0000000000405d26 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004053bb : cld ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004052fa : cld ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040636c : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000405d23 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405cc6 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004052f7 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004051ae : cld ; mov rcx, rax ; mov al, 0 ; call 0x4013e8
0x000000000040149d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4014b0 ; pop rbp ; ret
0x00000000004044dc : cwde ; mov rcx, qword ptr [rax*8 + 0x406c98] ; jmp rcx
0x0000000000405914 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000402ee2 : dec dword ptr [rcx - 0x77] ; ret 0x294d
0x0000000000403270 : enter 0x4b05, 0x34 ; fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x00000000004071dd : fcos ; jmp qword ptr [rax]
0x000000000040721d : fdivp st(7) ; jmp qword ptr [rax]
0x0000000000403274 : fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x000000000040642c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000404378 : fsubr st(0) ; ret 0xe
0x0000000000401649 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004014b0 : hlt ; pop rbp ; mov edi, 0x609228 ; jmp rax
0x00000000004034fb : inc dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000407247 : inc eax ; or al, byte ptr [rax] ; add al, ah ; loopne 0x407256 ; jmp rax
0x0000000000404b05 : int 0x80
0x00000000004014a3 : ja 0x4014aa ; pop rbp ; ret
0x00000000004014af : je 0x4014ad ; pop rbp ; mov edi, 0x609228 ; jmp rax
0x0000000000401516 : jge 0x40153d ; add byte ptr [rcx], al ; ret
0x0000000000401515 : jge 0x40153e ; add byte ptr [rcx], al ; ret
0x0000000000404e7e : jge 0x404e74 ; call 0x401144
0x00000000004050c2 : jge 0x4050c4 ; mov rsi, qword ptr [rbp - 0x10] ; call 0x401308
0x00000000004051ad : jge 0x4051b4 ; mov rcx, rax ; mov al, 0 ; call 0x4013e9
0x000000000040116b : jmp 0x401127
0x0000000000404fd8 : jmp 0xffffffffc2c997e2
0x000000000040711f : jmp qword ptr [rax]
0x0000000000402976 : jmp qword ptr [rcx]
0x00000000004076db : jmp qword ptr [rdx]
0x00000000004014b7 : jmp rax
0x0000000000402439 : jmp rcx
0x00000000004014f7 : jmp rdx
0x00000000004014e0 : jne 0x4014e7 ; pop rbp ; ret
0x00000000004050c6 : jne 0x4050bc ; call 0x401304
0x0000000000402375 : jo 0x4023d6 ; ret
0x000000000040399f : jo 0x403a05 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000404044 : jo 0x4040a5 ; ret
0x000000000040417e : jo 0x4041df ; ret
0x0000000000407db9 : jrcxz 0x407dbc ; jmp rdx
0x00000000004058aa : lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x000000000040725d : loope 0x407260 ; jmp qword ptr [rax]
0x000000000040724d : loopne 0x407250 ; jmp rax
0x00000000004051b2 : mov al, 0 ; call 0x4013e4
0x0000000000403f1b : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000403da8 : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000405e86 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004019c1 : mov byte ptr [0x609290], al ; pop rbp ; ret
0x0000000000401513 : mov byte ptr [rip + 0x207d66], 1 ; ret
0x0000000000405e8c : mov dh, -0x40 ; pop rbp ; ret
0x000000000040199d : mov dword ptr [0x609288], edi ; pop rbp ; ret
0x0000000000402226 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004021e8 : mov dword ptr [rax], eax ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004020a4 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004021e7 : mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000405115 : mov dword ptr [rbp - 0x18], eax ; call 0x401345
0x0000000000401729 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401647 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040636d : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040229e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402058 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000404deb : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401c13 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402055 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000401b6f : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004050e3 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040200d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040209e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004021ea : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040236f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000403f19 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000405d24 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004053b9 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004052f8 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404ecd : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004043df : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406370 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040153b : mov ebp, esp ; call rax
0x00000000004014a1 : mov ebp, esp ; ja 0x4014ac ; pop rbp ; ret
0x0000000000404b1d : mov ecx, 0x5b2a830a ; ret
0x0000000000402432 : mov ecx, dword ptr [rax*8 + 0x406790] ; jmp rcx
0x0000000000402756 : mov ecx, dword ptr [rax*8 + 0x4067d8] ; jmp rcx
0x00000000004044de : mov ecx, dword ptr [rax*8 + 0x406c98] ; jmp rcx
0x00000000004020a1 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004051b0 : mov ecx, eax ; mov al, 0 ; call 0x4013e6
0x0000000000401535 : mov edi, 0x608e20 ; mov rbp, rsp ; call rax
0x00000000004014b2 : mov edi, 0x609228 ; jmp rax
0x00000000004014f2 : mov edi, 0x609228 ; jmp rdx
0x0000000000404e7d : mov edi, dword ptr [rbp - 0x10] ; call 0x401145
0x00000000004050c1 : mov edi, dword ptr [rbp - 8] ; mov rsi, qword ptr [rbp - 0x10] ; call 0x401309
0x0000000000405112 : mov edi, eax ; mov qword ptr [rbp - 0x18], rax ; call 0x401348
0x0000000000406427 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000406426 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x00000000004050c5 : mov esi, dword ptr [rbp - 0x10] ; call 0x401305
0x00000000004014f0 : mov esi, eax ; mov edi, 0x609228 ; jmp rdx
0x0000000000401537 : mov fs, word ptr [rax] ; mov rbp, rsp ; call rax
0x000000000040199c : mov qword ptr [0x609288], rdi ; pop rbp ; ret
0x0000000000405114 : mov qword ptr [rbp - 0x18], rax ; call 0x401346
0x000000000040229d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403f1a : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000404dea : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401c12 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402054 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000401b6e : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004050e2 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040200c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040236e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000403f18 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000404ecc : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004043de : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040153a : mov rbp, rsp ; call rax
0x00000000004014a0 : mov rbp, rsp ; ja 0x4014ad ; pop rbp ; ret
0x0000000000402431 : mov rcx, qword ptr [rax*8 + 0x406790] ; jmp rcx
0x0000000000402755 : mov rcx, qword ptr [rax*8 + 0x4067d8] ; jmp rcx
0x00000000004044dd : mov rcx, qword ptr [rax*8 + 0x406c98] ; jmp rcx
0x00000000004051af : mov rcx, rax ; mov al, 0 ; call 0x4013e7
0x0000000000404e7c : mov rdi, qword ptr [rbp - 0x10] ; call 0x401146
0x0000000000405111 : mov rdi, rax ; mov qword ptr [rbp - 0x18], rax ; call 0x401349
0x00000000004050c4 : mov rsi, qword ptr [rbp - 0x10] ; call 0x401306
0x00000000004014ef : mov rsi, rax ; mov edi, 0x609228 ; jmp rdx
0x0000000000400288 : movabs al, byte ptr [0xe74caa7b7cb5bdc2] ; ret 0x86c1
0x0000000000405e8b : movzx eax, al ; pop rbp ; ret
0x000000000040721c : nop ; fdivp st(7) ; jmp qword ptr [rax]
0x00000000004071cc : nop ; sar bh, cl ; jmp rax
0x0000000000406448 : nop dword ptr [rax + rax] ; ret
0x0000000000402abd : or al, 0x18 ; ret 0x6451
0x0000000000407249 : or al, byte ptr [rax] ; add al, ah ; loopne 0x407254 ; jmp rax
0x0000000000407db5 : or al, byte ptr [rax] ; add byte ptr [rax], ch ; jrcxz 0x407dc0 ; jmp rdx
0x0000000000404101 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407db4 : or r8b, byte ptr [rax] ; add byte ptr [rax], ch ; jrcxz 0x407dc1 ; jmp rdx
0x000000000040643c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004039a1 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040643e : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004039a3 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406440 : pop r14 ; pop r15 ; ret
0x0000000000403753 : pop r14 ; pop rbp ; ret
0x00000000004039a5 : pop r15 ; pop rbp ; ret
0x0000000000406442 : pop r15 ; ret
0x0000000000407658 : pop rax ; ret
0x0000000000401512 : pop rbp ; mov byte ptr [rip + 0x207d66], 1 ; ret
0x00000000004014b1 : pop rbp ; mov edi, 0x609228 ; jmp rax
0x00000000004014ee : pop rbp ; mov rsi, rax ; mov edi, 0x609228 ; jmp rdx
0x000000000040643b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040643f : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004014a5 : pop rbp ; ret
0x00000000004039a0 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040499d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403752 : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000404b21 : pop rbx ; ret
0x00000000004039a6 : pop rdi ; pop rbp ; ret
0x0000000000406443 : pop rdi ; ret
0x00000000004039a4 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000406441 : pop rsi ; pop r15 ; ret
0x0000000000403754 : pop rsi ; pop rbp ; ret
0x000000000040643d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004039a2 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000401f8b : push 0x48006092 ; add esp, 0x30 ; pop rbp ; ret
0x0000000000403e9e : push rax ; pop rbp ; ret
0x0000000000401534 : push rbp ; mov edi, 0x608e20 ; mov rbp, rsp ; call rax
0x0000000000401111 : ret
0x0000000000405ae2 : ret 0
0x0000000000405af6 : ret 0x148
0x0000000000403b3e : ret 0x1b2
0x0000000000401372 : ret 0x207d
0x0000000000401172 : ret 0x207e
0x0000000000401bf5 : ret 0x2948
0x0000000000402ec9 : ret 0x294c
0x0000000000402ee5 : ret 0x294d
0x0000000000401a7a : ret 0x4066
0x0000000000402124 : ret 0x5589
0x0000000000402abf : ret 0x6451
0x0000000000404fdc : ret 0x8148
0x00000000004061af : ret 0x840
0x0000000000400291 : ret 0x86c1
0x0000000000403163 : ret 0x8840
0x0000000000404499 : ret 0x8844
0x0000000000404ff0 : ret 0x8948
0x0000000000402ee8 : ret 0x8949
0x000000000040307c : ret 0x89a5
0x0000000000402ecc : ret 0x8b48
0x000000000040188c : ret 0xb0
0x0000000000400289 : ret 0xb5bd
0x0000000000405ae9 : ret 0xb849
0x0000000000402efd : ret 0xbde8
0x00000000004014d5 : ret 0xc148
0x0000000000405850 : ret 0xc2f6
0x00000000004028e4 : ret 0xca21
0x00000000004043d3 : ret 0xd284
0x000000000040437a : ret 0xe
0x000000000040378c : ret 0xee8
0x0000000000403178 : ret 0xf180
0x0000000000405843 : ret 0xf280
0x000000000040295e : ret 0xf281
0x0000000000404e82 : ret 0xffff
0x0000000000403b44 : ret 1
0x00000000004058b0 : ret 2
0x00000000004021e6 : rol byte ptr [rcx + rcx*4], 1 ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000404b00 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000402370 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x4023db ; ret
0x00000000004014dc : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4014eb ; pop rbp ; ret
0x0000000000404b01 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000402ebd : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000402ec6 : ror byte ptr [rax - 0x77], 1 ; ret 0x294c
0x0000000000402371 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x4023da ; ret
0x0000000000407248 : ror byte ptr [rdx], 0 ; add al, ah ; loopne 0x407255 ; jmp rax
0x0000000000407308 : ror byte ptr [rip - 0xd300000], -1 ; jmp rax
0x000000000040718d : sar bh, 1 ; jmp rax
0x00000000004071cd : sar bh, cl ; jmp rax
0x00000000004014de : sar eax, 1 ; jne 0x4014e9 ; pop rbp ; ret
0x000000000040719d : sar edi, 1 ; jmp qword ptr [rax]
0x00000000004014dd : sar rax, 1 ; jne 0x4014ea ; pop rbp ; ret
0x0000000000405e88 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040728c : sub ah, -1 ; jmp rax
0x0000000000404b1f : sub dword ptr [rdx], 0x5b ; ret
0x000000000040647d : sub esp, 8 ; add rsp, 8 ; ret
0x000000000040647c : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040644a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000403162 : xchg eax, ebp ; ret 0x8840
0x00000000004043d2 : xchg eax, esp ; ret 0xd284
0x0000000000405bde : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000403e97 : xor eax, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x00000000004021e5 : xor eax, edx ; mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
