0x0000000000409ff4 : adc al, 0xc ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret 0xffff
0x000000000040a034 : adc al, 0xd ; add byte ptr [rax], al ; cld ; ret
0x00000000004025d7 : adc byte ptr [rax - 0x75], cl ; cmp al, 0x25 ; nop ; ret 0x60
0x000000000040a11d : adc byte ptr [rax], al ; add ah, cl ; out -1, al ; call rsp
0x0000000000400884 : adc dword ptr [rax], eax ; sbb dword ptr [rax], eax ; nop ; ret 0x60
0x0000000000405589 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040a037 : add ah, bh ; ret
0x000000000040a00f : add ah, bh ; ret 0xffff
0x000000000040acdb : add ah, ch ; or al, byte ptr [rax] ; add byte ptr [rax], al ; ret 0xffff
0x000000000040a11f : add ah, cl ; out -1, al ; call rsp
0x000000000040a02f : add ah, cl ; ret
0x000000000040a007 : add ah, cl ; ret 0xffff
0x00000000004076fd : add al, 0x21 ; ret 0xd709
0x00000000004054dd : add al, 0x25 ; ret
0x0000000000403f61 : add al, 0x25 ; ret 0x4098
0x0000000000400027 : add al, ah ; ret
0x000000000040a8bf : add al, al ; mov ah, -1 ; jmp qword ptr [rdx]
0x000000000040092f : add al, al ; ret 0x60
0x000000000040a297 : add al, bh ; jbe 0x40a29e ; jmp rdx
0x000000000040a3f5 : add al, byte ptr [rax] ; add byte ptr [rax], ch ; test bh, bh ; call rcx
0x00000000004008c9 : add al, byte ptr [rax] ; add byte ptr [rcx], dl ; add byte ptr [rcx], bl ; add al, cl ; ret 0x60
0x00000000004008b7 : add al, cl ; ret 0x60
0x00000000004008ff : add al, dl ; ret 0x60
0x0000000000408a9f : add bl, dh ; ret
0x00000000004057af : add byte ptr [rax - 0x73], cl ; add al, 0x25 ; ret
0x0000000000403f5e : add byte ptr [rax - 0x73], cl ; add al, 0x25 ; ret 0x4098
0x0000000000401c6f : add byte ptr [rax - 0x75], cl ; cmp al, 0x25 ; nop ; ret 0x60
0x00000000004068ed : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000401ce6 : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000040acff : add byte ptr [rax], ah ; ret 0xffff
0x0000000000400882 : add byte ptr [rax], al ; adc dword ptr [rax], eax ; sbb dword ptr [rax], eax ; nop ; ret 0x60
0x000000000040acd9 : add byte ptr [rax], al ; add ah, ch ; or al, byte ptr [rax] ; add byte ptr [rax], al ; ret 0xffff
0x0000000000400025 : add byte ptr [rax], al ; add al, ah ; ret
0x0000000000400d1d : add byte ptr [rax], al ; add al, al ; ret 0x60
0x000000000040a295 : add byte ptr [rax], al ; add al, bh ; jbe 0x40a2a0 ; jmp rdx
0x0000000000400d35 : add byte ptr [rax], al ; add al, cl ; ret 0x60
0x0000000000400d4d : add byte ptr [rax], al ; add al, dl ; ret 0x60
0x0000000000408a9d : add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004057ad : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add al, 0x25 ; ret
0x0000000000403f5c : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add al, 0x25 ; ret 0x4098
0x0000000000401c6d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; cmp al, 0x25 ; nop ; ret 0x60
0x0000000000401ce4 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x0000000000400023 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ah ; ret
0x0000000000400d1b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, al ; ret 0x60
0x0000000000400d33 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, cl ; ret 0x60
0x0000000000400d4b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dl ; ret 0x60
0x0000000000408a9b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000400021 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ah ; ret
0x0000000000400d19 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, al ; ret 0x60
0x0000000000400d31 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, cl ; ret 0x60
0x0000000000400d49 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dl ; ret 0x60
0x0000000000400ce8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret 0x60
0x0000000000400cea : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret 0x60
0x00000000004092ba : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000407789 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000400cec : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret 0x60
0x0000000000408a9c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040344b : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], al ; ret 0x3145
0x0000000000407722 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040ad19 : add byte ptr [rax], al ; add byte ptr [rbx + rcx], ch ; add byte ptr [rax], al ; push rax ; ret 0xffff
0x0000000000403433 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x00000000004008b1 : add byte ptr [rax], al ; add byte ptr [rcx], ah ; add byte ptr [rcx], bl ; add al, cl ; ret 0x60
0x00000000004028ee : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0x5588
0x0000000000402dc9 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0x9588
0x0000000000404c2e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000402a27 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x000000000040314e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x0000000000405e9e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000407efc : add byte ptr [rax], al ; add cl, ch ; ret 2
0x0000000000405551 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405260 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401303 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000040a296 : add byte ptr [rax], al ; clc ; jbe 0x40a29f ; jmp rdx
0x000000000040a036 : add byte ptr [rax], al ; cld ; ret
0x000000000040a00e : add byte ptr [rax], al ; cld ; ret 0xffff
0x000000000040acda : add byte ptr [rax], al ; in al, dx ; or al, byte ptr [rax] ; add byte ptr [rax], al ; ret 0xffff
0x0000000000409ff6 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret 0xffff
0x0000000000401379 : add byte ptr [rax], al ; jmp 0x401319
0x000000000040778b : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000405eda : add byte ptr [rax], al ; mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040600d : add byte ptr [rax], al ; mov eax, edi ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406169 : add byte ptr [rax], al ; mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040257d : add byte ptr [rax], al ; mov eax, esi ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405f81 : add byte ptr [rax], al ; mov eax, esi ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403b22 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040aa3e : add byte ptr [rax], al ; mov sil, -1 ; jmp qword ptr [rdi]
0x000000000040a292 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add al, bh ; jbe 0x40a2a3 ; jmp rdx
0x0000000000400cee : add byte ptr [rax], al ; nop ; ret 0x60
0x00000000004031ed : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040678b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405220 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000407723 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040a01e : add byte ptr [rax], al ; pop rsp ; ret
0x000000000040a67e : add byte ptr [rax], al ; push rax ; mov dl, -1 ; jmp qword ptr [rdx]
0x000000000040ad1e : add byte ptr [rax], al ; push rax ; ret 0xffff
0x000000000040a026 : add byte ptr [rax], al ; pushfq ; ret
0x0000000000409ffe : add byte ptr [rax], al ; pushfq ; ret 0xffff
0x0000000000408a9e : add byte ptr [rax], al ; ret
0x000000000040acdf : add byte ptr [rax], al ; ret 0xffff
0x000000000040ad1a : add byte ptr [rax], al ; sub al, 0xb ; add byte ptr [rax], al ; push rax ; ret 0xffff
0x000000000040a3f7 : add byte ptr [rax], ch ; test bh, bh ; call rcx
0x000000000040a9df : add byte ptr [rax], dl ; mov dh, -1 ; jmp qword ptr [rdi]
0x000000000040a05f : add byte ptr [rbp + rcx*8 - 1], ch ; call rsp
0x000000000040344d : add byte ptr [rbp - 0x77], al ; ret 0x3145
0x000000000040678c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000405221 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000407724 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040a01f : add byte ptr [rbx + rax*8 - 1], bl ; call rsp
0x000000000040ad1b : add byte ptr [rbx + rcx], ch ; add byte ptr [rax], al ; push rax ; ret 0xffff
0x0000000000409f1f : add byte ptr [rbx + rdi*4 - 1], cl ; call rsp
0x0000000000403435 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x0000000000402535 : add byte ptr [rcx + rax], ah ; movzx eax, al ; pop rbp ; ret
0x0000000000403410 : add byte ptr [rcx - 0x77], al ; ret 0x8141
0x000000000040893c : add byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x00000000004008b3 : add byte ptr [rcx], ah ; add byte ptr [rcx], bl ; add al, cl ; ret 0x60
0x0000000000401788 : add byte ptr [rcx], al ; ret
0x000000000040092d : add byte ptr [rcx], bl ; add al, al ; ret 0x60
0x00000000004008b5 : add byte ptr [rcx], bl ; add al, cl ; ret 0x60
0x00000000004008fd : add byte ptr [rcx], bl ; add al, dl ; ret 0x60
0x000000000040092b : add byte ptr [rcx], dl ; add byte ptr [rcx], bl ; add al, al ; ret 0x60
0x00000000004008cb : add byte ptr [rcx], dl ; add byte ptr [rcx], bl ; add al, cl ; ret 0x60
0x00000000004008fb : add byte ptr [rcx], dl ; add byte ptr [rcx], bl ; add al, dl ; ret 0x60
0x0000000000407ef8 : add byte ptr [rdi], cl ; lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x000000000040619a : add byte ptr [rdi], cl ; mov bh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004028f0 : add byte ptr [rdi], cl ; pushfq ; ret 0x5588
0x0000000000402dcb : add byte ptr [rdi], cl ; pushfq ; ret 0x9588
0x0000000000404c30 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000402a29 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x0000000000403150 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x0000000000405ea0 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004092b7 : add byte ptr [rdx], bl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000407efe : add cl, ch ; ret 2
0x0000000000406dc9 : add dword ptr [rax - 0x77], ecx ; ret 0x8148
0x000000000040554f : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040678a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040521f : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040340e : add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], al ; ret 0x8141
0x0000000000400929 : add dword ptr [rax], eax ; add byte ptr [rcx], dl ; add byte ptr [rcx], bl ; add al, al ; ret 0x60
0x00000000004008f9 : add dword ptr [rax], eax ; add byte ptr [rcx], dl ; add byte ptr [rcx], bl ; add al, dl ; ret 0x60
0x00000000004087fd : add dword ptr [rax], ecx ; ret 0x840
0x0000000000402537 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004008f8 : add dword ptr gs:[rax], eax ; add byte ptr [rcx], dl ; add byte ptr [rcx], bl ; add al, dl ; ret 0x60
0x0000000000401784 : add eax, 0x20ab4e ; add ebx, esi ; ret
0x0000000000407efb : add eax, 0xe9000000 ; ret 2
0x000000000040174b : add eax, edx ; sar rax, 1 ; jne 0x40175c ; pop rbp ; ret
0x0000000000401789 : add ebx, esi ; ret
0x000000000040195b : add esp, 0x10 ; pop rbp ; ret
0x000000000040822c : add esp, 0x130 ; pop rbp ; ret
0x0000000000408afb : add esp, 0x18 ; ret
0x0000000000406abc : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000402817 : add esp, 0x20 ; pop rbp ; ret
0x0000000000401a6d : add esp, 0x30 ; pop rbp ; ret
0x000000000040596c : add esp, 0x50 ; pop rbp ; ret
0x0000000000403e43 : add esp, 0x70 ; pop rbp ; ret
0x000000000040587a : add esp, 0x90 ; pop rbp ; ret
0x00000000004032d0 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040771f : add esp, 0xd8 ; pop rbx ; pop rbp ; ret
0x00000000004031e9 : add esp, 0xe0 ; pop rbp ; ret
0x0000000000401306 : add esp, 8 ; ret
0x000000000040174a : add rax, rdx ; sar rax, 1 ; jne 0x40175d ; pop rbp ; ret
0x000000000040195a : add rsp, 0x10 ; pop rbp ; ret
0x000000000040822b : add rsp, 0x130 ; pop rbp ; ret
0x0000000000408afa : add rsp, 0x18 ; ret
0x0000000000406abb : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000402816 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000401a6c : add rsp, 0x30 ; pop rbp ; ret
0x000000000040596b : add rsp, 0x50 ; pop rbp ; ret
0x0000000000403e42 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000405879 : add rsp, 0x90 ; pop rbp ; ret
0x00000000004032cf : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040771e : add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x00000000004031e8 : add rsp, 0xe0 ; pop rbp ; ret
0x0000000000401305 : add rsp, 8 ; ret
0x0000000000402536 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401787 : and byte ptr [rax], al ; add ebx, esi ; ret
0x000000000040259f : and eax, 0x60c2e0 ; pop rbp ; ret
0x00000000004025c3 : and eax, 0x60c2e8 ; pop rbp ; ret
0x00000000004036f4 : and eax, 0xffffff35 ; jmp qword ptr [rcx]
0x0000000000405259 : call 0xffffffffe902dba9
0x0000000000405258 : call 0xffffffffe902dbaa
0x00000000004062d1 : call 0xffffffffff40a372
0x0000000000408a79 : call qword ptr [r12 + rbx*8]
0x000000000040b11b : call qword ptr [rax]
0x000000000040a033 : call qword ptr [rcx - 0x3c040000]
0x000000000040a35b : call qword ptr [rsi]
0x0000000000408a7a : call qword ptr [rsp + rbx*8]
0x000000000040a013 : call qword ptr [rsp + rcx - 0x3cd40000]
0x00000000004017ad : call rax
0x0000000000404fac : call rbx
0x000000000040a3fb : call rcx
0x000000000040a59b : call rdi
0x0000000000409f23 : call rsp
0x0000000000406010 : clc ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040822a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x0000000000406cbf : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405eb1 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004032ce : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x00000000004031e7 : clc ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000040a298 : clc ; jbe 0x40a29d ; jmp rdx
0x000000000040174f : clc ; jne 0x401758 ; pop rbp ; ret
0x0000000000403cf5 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004089bf : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402557 : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040254c : clc ; pop rbp ; ret
0x0000000000407788 : cld ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000401987 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407a0b : cld ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040794a : cld ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004089bc : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000408373 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408316 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407947 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403206 : cld ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000403209 : cld ; pop rbp ; ret
0x000000000040a038 : cld ; ret
0x000000000040a010 : cld ; ret 0xffff
0x0000000000401c72 : cmp al, 0x25 ; nop ; ret 0x60
0x0000000000407246 : cmp eax, 0x8945c621 ; ret 0x8141
0x000000000040170d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401720 ; pop rbp ; ret
0x0000000000401301 : cmp eax, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004062cc : cwde ; mov rcx, qword ptr [rax*8 + 0x4098e8] ; jmp rcx
0x00000000004054da : dec dword ptr [rax - 0x73] ; add al, 0x25 ; ret
0x0000000000401810 : dec dword ptr [rax - 0x75] ; xor al, 0x25 ; nop ; ret 0x60
0x0000000000402548 : dec dword ptr [rax - 0x77] ; jge 0x40254b ; pop rbp ; ret
0x0000000000407f64 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000401f15 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004049b2 : dec dword ptr [rcx - 0x77] ; ret 0x294d
0x00000000004036d1 : dec dword ptr [rcx] ; ret 0xf709
0x0000000000404d40 : enter 0x4b05, 0x34 ; fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x0000000000403a5b : enter 0x60c2, 0 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000407721 : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040b119 : fcos ; call qword ptr [rax]
0x00000000004038da : fiadd dword ptr [rcx - 0xf] ; jmp qword ptr [rcx]
0x0000000000404d44 : fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x00000000004036fe : fmul dword ptr [rcx + 0x31c621d6] ; ret 0xd609
0x0000000000408a7c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000401959 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040a02c : hlt ; or al, 0 ; add ah, cl ; ret
0x0000000000401720 : hlt ; pop rbp ; mov edi, 0x60c268 ; jmp rax
0x0000000000407cd7 : imul eax ; ret
0x00000000004034da : in al, 0x21 ; ret 0xd709
0x00000000004025d6 : in al, dx ; adc byte ptr [rax - 0x75], cl ; cmp al, 0x25 ; nop ; ret 0x60
0x00000000004077fa : in al, dx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040acdc : in al, dx ; or al, byte ptr [rax] ; add byte ptr [rax], al ; ret 0xffff
0x000000000040765a : in eax, -0x4a ; loope 0x407683 ; ret 0x8941
0x0000000000402533 : in eax, -0x50 ; add byte ptr [rcx + rax], ah ; movzx eax, al ; pop rbp ; ret
0x0000000000403203 : in eax, -0x77 ; jge 0x40320b ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000405ef3 : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x00000000004033d9 : inc dword ptr [rcx - 0x77] ; ret 0x8141
0x0000000000404fcb : inc dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000409ff8 : insb byte ptr [rdi], dx ; ret 0xffff
0x00000000004008b0 : insd dword ptr [rdi], dx ; add byte ptr [rax], al ; add byte ptr [rcx], ah ; add byte ptr [rcx], bl ; add al, cl ; ret 0x60
0x00000000004068f5 : int 0x80
0x0000000000403449 : int1 ; xchg eax, edx ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], al ; ret 0x3145
0x0000000000401713 : ja 0x40171a ; pop rbp ; ret
0x00000000004036f2 : jbe 0x40372c ; and eax, 0xffffff35 ; jmp qword ptr [rcx]
0x000000000040a299 : jbe 0x40a29c ; jmp rdx
0x000000000040171f : je 0x40171d ; pop rbp ; mov edi, 0x60c268 ; jmp rax
0x000000000040a00c : je 0x40a01f ; add byte ptr [rax], al ; cld ; ret 0xffff
0x000000000040254b : jge 0x402548 ; pop rbp ; ret
0x0000000000402556 : jge 0x402557 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000403205 : jge 0x403209 ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004034d8 : jge 0x40348d ; in al, 0x21 ; ret 0xd709
0x0000000000405ef6 : jge 0x405ef3 ; pop rbp ; ret
0x0000000000402bec : jl 0x402c11 ; ret 0xd709
0x0000000000402beb : jl 0x402c12 ; ret 0xd709
0x0000000000402bea : jl 0x402c13 ; ret 0xd709
0x000000000040137b : jmp 0x401317
0x0000000000403f5a : jmp 0x403f68
0x0000000000405e85 : jmp 0x405eb7
0x0000000000406dc8 : jmp 0xffffffffc2c9b5d2
0x000000000040a7a3 : jmp qword ptr [rax]
0x0000000000402980 : jmp qword ptr [rcx]
0x000000000040a33b : jmp qword ptr [rdi]
0x000000000040a683 : jmp qword ptr [rdx]
0x0000000000401727 : jmp rax
0x0000000000402f03 : jmp rcx
0x0000000000401767 : jmp rdx
0x0000000000401750 : jne 0x401757 ; pop rbp ; ret
0x0000000000402f88 : jno 0x402fad ; ret 0xd709
0x0000000000403e45 : jo 0x403ea6 ; ret
0x000000000040546f : jo 0x4054d5 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405b14 : jo 0x405b75 ; ret
0x0000000000405c4e : jo 0x405caf ; ret
0x0000000000407efa : lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000402f87 : lea esi, dword ptr [rcx + 0x21] ; ret 0xd709
0x00000000004034d7 : lodsd eax, dword ptr [rsi] ; jge 0x40348e ; in al, 0x21 ; ret 0xd709
0x000000000040765c : loope 0x407681 ; ret 0x8941
0x00000000004031eb : loopne 0x4031f2 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000407658 : loopne 0x407674 ; in eax, -0x4a ; loope 0x407685 ; ret 0x8941
0x00000000004035f1 : mov ah, -0x75 ; ror byte ptr [r9 + 0x21ca31c2], 1 ; ret 0x458b
0x000000000040a8c1 : mov ah, -1 ; jmp qword ptr [rdx]
0x000000000040a01c : mov ah, 0xc ; add byte ptr [rax], al ; pop rsp ; ret
0x0000000000402534 : mov al, 0 ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004059eb : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000405878 : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x00000000004084d6 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040619c : mov bh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040a7a1 : mov bl, -1 ; jmp qword ptr [rax]
0x00000000004025c1 : mov byte ptr [0x60c2e8], al ; pop rbp ; ret
0x0000000000401783 : mov byte ptr [rip + 0x20ab4e], 1 ; ret
0x0000000000402f86 : mov cl, -0x73 ; jno 0x402faf ; ret 0xd709
0x0000000000402539 : mov dh, -0x40 ; pop rbp ; ret
0x000000000040a9e1 : mov dh, -1 ; jmp qword ptr [rdi]
0x000000000040a681 : mov dl, -1 ; jmp qword ptr [rdx]
0x000000000040259d : mov dword ptr [0x60c2e0], edi ; pop rbp ; ret
0x0000000000403cf6 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000403cb8 : mov dword ptr [rax], eax ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000403b74 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000403cb7 : mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000401a69 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401957 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401985 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403204 : mov dword ptr [rbp - 4], edi ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004089bd : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402555 : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040254a : mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x0000000000403d6e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403913 : mov dword ptr [rcx], eax ; mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x0000000000403b28 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040326b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402813 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403b25 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040276f : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004077f8 : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406ed3 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403add : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403b6e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000403915 : mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x0000000000403cba : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000403e3f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004059e9 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000408374 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407a09 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407948 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403207 : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000406cbd : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405eaf : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402559 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000405edc : mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040600f : mov eax, edi ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040616b : mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040257f : mov eax, esi ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405f83 : mov eax, esi ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004017ab : mov ebp, esp ; call rax
0x0000000000401711 : mov ebp, esp ; ja 0x40171c ; pop rbp ; ret
0x0000000000403202 : mov ebp, esp ; mov dword ptr [rbp - 4], edi ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000405ef2 : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000040690d : mov ecx, 0x5b2a830a ; ret
0x0000000000402efc : mov ecx, dword ptr [rax*8 + 0x409358] ; jmp rcx
0x0000000000403f02 : mov ecx, dword ptr [rax*8 + 0x4093e0] ; jmp rcx
0x0000000000404226 : mov ecx, dword ptr [rax*8 + 0x409428] ; jmp rcx
0x00000000004062ce : mov ecx, dword ptr [rax*8 + 0x4098e8] ; jmp rcx
0x00000000004074ba : mov ecx, dword ptr [rax*8 + 0x409c60] ; jmp rcx
0x000000000040743a : mov ecx, dword ptr [rax*8 + 0x409cc0] ; jmp rcx
0x0000000000403b71 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000403910 : mov ecx, dword ptr [rbp - 0x20] ; mov dword ptr [rcx], eax ; mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x00000000004017a5 : mov edi, 0x60be20 ; mov rbp, rsp ; call rax
0x0000000000401722 : mov edi, 0x60c268 ; jmp rax
0x0000000000401762 : mov edi, 0x60c268 ; jmp rdx
0x0000000000408a77 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000408a76 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x00000000004054fb : mov esi, 0x8d48ffff ; add al, 0x25 ; ret
0x0000000000401760 : mov esi, eax ; mov edi, 0x60c268 ; jmp rdx
0x0000000000402fea : mov esp, 0x218264b0 ; ret 0xd709
0x000000000040259c : mov qword ptr [0x60c2e0], rdi ; pop rbp ; ret
0x0000000000402554 : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402549 : mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000403d6d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004059ea : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040326a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402812 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403b24 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040276e : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000406ed2 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403adc : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403e3e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004059e8 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000406cbc : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405eae : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402558 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004017aa : mov rbp, rsp ; call rax
0x0000000000401710 : mov rbp, rsp ; ja 0x40171d ; pop rbp ; ret
0x0000000000405ef1 : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000402efb : mov rcx, qword ptr [rax*8 + 0x409358] ; jmp rcx
0x0000000000403f01 : mov rcx, qword ptr [rax*8 + 0x4093e0] ; jmp rcx
0x0000000000404225 : mov rcx, qword ptr [rax*8 + 0x409428] ; jmp rcx
0x00000000004062cd : mov rcx, qword ptr [rax*8 + 0x4098e8] ; jmp rcx
0x00000000004074b9 : mov rcx, qword ptr [rax*8 + 0x409c60] ; jmp rcx
0x0000000000407439 : mov rcx, qword ptr [rax*8 + 0x409cc0] ; jmp rcx
0x000000000040175f : mov rsi, rax ; mov edi, 0x60c268 ; jmp rdx
0x000000000040aa40 : mov sil, -1 ; jmp qword ptr [rdi]
0x000000000040a294 : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add al, bh ; jbe 0x40a2a1 ; jmp rdx
0x0000000000402538 : movzx eax, al ; pop rbp ; ret
0x000000000040619b : movzx eax, cx ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000400888 : nop ; ret 0x60
0x0000000000408a98 : nop dword ptr [rax + rax] ; ret
0x000000000040a00d : or al, 0 ; add ah, bh ; ret 0xffff
0x000000000040a02d : or al, 0 ; add ah, cl ; ret
0x000000000040a005 : or al, 0 ; add ah, cl ; ret 0xffff
0x000000000040a01d : or al, 0 ; add byte ptr [rbx + rax*8 - 1], bl ; call rsp
0x000000000040458d : or al, 0x18 ; ret 0x6451
0x00000000004062cf : or al, 0xffffffffffffffc5 ; call 0xffffffffff40a374
0x000000000040acdd : or al, byte ptr [rax] ; add byte ptr [rax], al ; ret 0xffff
0x0000000000409f1d : or byte ptr [rax], al ; add byte ptr [rbx + rdi*4 - 1], cl ; call rsp
0x0000000000402a23 : or byte ptr [rcx + 0x2df9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x000000000040314a : or byte ptr [rcx + 0x2df9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x00000000004028ea : or byte ptr [rcx + 0x38f9], al ; add byte ptr [rdi], cl ; pushfq ; ret 0x5588
0x0000000000402dc5 : or byte ptr [rcx + 0x38f9], al ; add byte ptr [rdi], cl ; pushfq ; ret 0x9588
0x00000000004076fb : or dword ptr [rsp + rax + 0x21], esp ; ret 0xd709
0x000000000040acfd : or eax, dword ptr [rax] ; add byte ptr [rax], ah ; ret 0xffff
0x0000000000405bd1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040a121 : out -1, al ; call rsp
0x0000000000406b2d : out dx, eax ; test al, -1 ; dec dword ptr [rax - 0x75] ; xor al, 0x25 ; nop ; ret 0x60
0x0000000000401701 : outsd dx, dword ptr [rsi] ; ret 0x60
0x000000000040180d : paddb mm7, mm7 ; dec dword ptr [rax - 0x75] ; xor al, 0x25 ; nop ; ret 0x60
0x0000000000408a8c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405471 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000408a8e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405473 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000408a90 : pop r14 ; pop r15 ; ret
0x0000000000405223 : pop r14 ; pop rbp ; ret
0x0000000000405475 : pop r15 ; pop rbp ; ret
0x0000000000408a92 : pop r15 ; ret
0x0000000000401782 : pop rbp ; mov byte ptr [rip + 0x20ab4e], 1 ; ret
0x0000000000401721 : pop rbp ; mov edi, 0x60c268 ; jmp rax
0x000000000040175e : pop rbp ; mov rsi, rax ; mov edi, 0x60c268 ; jmp rdx
0x0000000000408a8b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000408a8f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401715 : pop rbp ; ret
0x0000000000405470 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040678d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405222 : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000407725 : pop rbx ; pop rbp ; ret
0x0000000000406911 : pop rbx ; ret
0x0000000000405476 : pop rdi ; pop rbp ; ret
0x0000000000408a93 : pop rdi ; ret
0x0000000000405474 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000408a91 : pop rsi ; pop r15 ; ret
0x0000000000405224 : pop rsi ; pop rbp ; ret
0x0000000000408a8d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405472 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040a020 : pop rsp ; ret
0x000000000040a00b : push qword ptr [rsp + rcx] ; add ah, bh ; ret 0xffff
0x0000000000409ffb : push qword ptr [rsp + rcx] ; add byte ptr [rax], al ; pushfq ; ret 0xffff
0x000000000040a680 : push rax ; mov dl, -1 ; jmp qword ptr [rdx]
0x000000000040596e : push rax ; pop rbp ; ret
0x000000000040ad20 : push rax ; ret 0xffff
0x00000000004036fd : push rbp ; fmul dword ptr [rcx + 0x31c621d6] ; ret 0xd609
0x00000000004017a4 : push rbp ; mov edi, 0x60be20 ; mov rbp, rsp ; call rax
0x0000000000405ef0 : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000400928 : push rbx ; add dword ptr [rax], eax ; add byte ptr [rcx], dl ; add byte ptr [rcx], bl ; add al, al ; ret 0x60
0x000000000040a02b : push rsp ; or al, 0 ; add ah, cl ; ret
0x000000000040a004 : push rsp ; or al, 0 ; add ah, cl ; ret 0xffff
0x000000000040a028 : pushfq ; ret
0x00000000004028f2 : pushfq ; ret 0x5588
0x0000000000402dcd : pushfq ; ret 0x9588
0x000000000040a000 : pushfq ; ret 0xffff
0x0000000000400029 : ret
0x0000000000401bcb : ret 0
0x0000000000402d74 : ret 0x141
0x0000000000408146 : ret 0x148
0x000000000040560e : ret 0x1b2
0x0000000000401582 : ret 0x20ab
0x0000000000401382 : ret 0x20ac
0x00000000004027f5 : ret 0x2948
0x0000000000404999 : ret 0x294c
0x00000000004049b5 : ret 0x294d
0x0000000000403450 : ret 0x3145
0x00000000004049cd : ret 0x3de8
0x0000000000403f63 : ret 0x4098
0x00000000004035fa : ret 0x458b
0x00000000004028f3 : ret 0x5588
0x00000000004035eb : ret 0x5589
0x0000000000400889 : ret 0x60
0x000000000040458f : ret 0x6451
0x00000000004033dc : ret 0x8141
0x0000000000406dcc : ret 0x8148
0x00000000004087ff : ret 0x840
0x0000000000404c33 : ret 0x8840
0x0000000000406289 : ret 0x8844
0x00000000004037a3 : ret 0x8941
0x000000000040304f : ret 0x8948
0x00000000004049b8 : ret 0x8949
0x0000000000404b4c : ret 0x89a5
0x000000000040499c : ret 0x8b48
0x000000000040355a : ret 0x941
0x0000000000402dce : ret 0x9588
0x0000000000401c32 : ret 0xb0
0x0000000000408139 : ret 0xb849
0x000000000040333c : ret 0xbe01
0x0000000000401745 : ret 0xc148
0x0000000000407ea0 : ret 0xc2f6
0x00000000004043b4 : ret 0xca21
0x0000000000401dcd : ret 0xca29
0x00000000004035f6 : ret 0xca31
0x00000000004022be : ret 0xcf89
0x0000000000401f45 : ret 0xd139
0x0000000000405ea3 : ret 0xd284
0x00000000004035ff : ret 0xd2f7
0x0000000000403704 : ret 0xd609
0x0000000000402bee : ret 0xd709
0x000000000040525c : ret 0xee8
0x0000000000404c48 : ret 0xf180
0x0000000000407e93 : ret 0xf280
0x0000000000402968 : ret 0xf281
0x00000000004036d3 : ret 0xf709
0x0000000000409fe9 : ret 0xffff
0x0000000000405614 : ret 1
0x0000000000407f00 : ret 2
0x0000000000403cb6 : rol byte ptr [rcx + rcx*4], 1 ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000402be9 : rol dword ptr [rdi + 0x4f], 1 ; jl 0x402c14 ; ret 0xd709
0x00000000004068f0 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000403e40 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x403eab ; ret
0x00000000004035f3 : ror byte ptr [r9 + 0x21ca31c2], 1 ; ret 0x458b
0x000000000040174c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40175b ; pop rbp ; ret
0x00000000004068f1 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x000000000040498d : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000404996 : ror byte ptr [rax - 0x77], 1 ; ret 0x294c
0x0000000000403e41 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x403eaa ; ret
0x00000000004035f4 : ror byte ptr [rcx + 0x21ca31c2], 1 ; ret 0x458b
0x0000000000402f85 : sahf ; mov cl, -0x73 ; jno 0x402fb0 ; ret 0xd709
0x00000000004036f1 : salc ; jbe 0x40372d ; and eax, 0xffffff35 ; jmp qword ptr [rcx]
0x00000000004054d7 : sar bh, -1 ; dec dword ptr [rax - 0x73] ; add al, 0x25 ; ret
0x000000000040a0a1 : sar bh, 1 ; call rsp
0x000000000040174e : sar eax, 1 ; jne 0x401759 ; pop rbp ; ret
0x000000000040174d : sar rax, 1 ; jne 0x40175a ; pop rbp ; ret
0x000000000040acd8 : sbb al, 0 ; add byte ptr [rax], al ; in al, dx ; or al, byte ptr [rax] ; add byte ptr [rax], al ; ret 0xffff
0x000000000040ad18 : sbb al, 0 ; add byte ptr [rax], al ; sub al, 0xb ; add byte ptr [rax], al ; push rax ; ret 0xffff
0x0000000000400886 : sbb dword ptr [rax], eax ; nop ; ret 0x60
0x00000000004034d9 : scasd eax, dword ptr [rdi] ; in al, 0x21 ; ret 0xd709
0x0000000000403601 : shl byte ptr [rcx], cl ; ret 0x5589
0x0000000000402a25 : stc ; sub eax, 0xf000000 ; xchg eax, esp ; ret 0x5588
0x000000000040314c : stc ; sub eax, 0xf000000 ; xchg eax, esp ; ret 0x9588
0x00000000004084d8 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401786 : stosd dword ptr [rdi], eax ; and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000401785 : stosq qword ptr [rdi], rax ; and byte ptr [rax], al ; add ebx, esi ; ret
0x000000000040ad1c : sub al, 0xb ; add byte ptr [rax], al ; push rax ; ret 0xffff
0x000000000040690f : sub dword ptr [rdx], 0x5b ; ret
0x0000000000402a26 : sub eax, 0xf000000 ; xchg eax, esp ; ret 0x5588
0x000000000040314d : sub eax, 0xf000000 ; xchg eax, esp ; ret 0x9588
0x0000000000408b01 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000408b00 : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000406b2e : test al, -1 ; dec dword ptr [rax - 0x75] ; xor al, 0x25 ; nop ; ret 0x60
0x00000000004076fa : test al, 9 ; add al, 0x21 ; ret 0xd709
0x000000000040a3f9 : test bh, bh ; call rcx
0x0000000000408a9a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000403438 : xchg eax, ebp ; ret
0x0000000000404c32 : xchg eax, ebp ; ret 0x8840
0x000000000040344a : xchg eax, edx ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], al ; ret 0x3145
0x0000000000402a2b : xchg eax, esp ; ret 0x5588
0x0000000000403152 : xchg eax, esp ; ret 0x9588
0x0000000000405ea2 : xchg eax, esp ; ret 0xd284
0x0000000000401813 : xor al, 0x25 ; nop ; ret 0x60
0x0000000000409ffc : xor al, 0xc ; add byte ptr [rax], al ; pushfq ; ret 0xffff
0x00000000004054fa : xor bh, byte ptr [rsi - 0x72b70001] ; add al, 0x25 ; ret
0x000000000040822e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004036f3 : xor dword ptr [rip - 0xcb], esp ; jmp qword ptr [rcx]
0x0000000000405967 : xor eax, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x0000000000403cb5 : xor eax, edx ; mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
