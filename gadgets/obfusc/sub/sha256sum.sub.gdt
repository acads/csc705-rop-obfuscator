0x000000000041584b : adc al, byte ptr [rbp + 0x21] ; rol byte ptr [rbp + 9], 1 ; ret
0x0000000000415819 : adc al, byte ptr [rbp - 0x77] ; ret
0x000000000040c7f8 : adc byte ptr [rbp + 0x21], al ; rol byte ptr [rbp + 9], 1 ; ret
0x000000000040c7c6 : adc byte ptr [rbp - 0x77], al ; ret
0x0000000000421dd0 : adc byte ptr [rsi + rdi*8], bl ; call qword ptr [rsi]
0x00000000004107ed : adc byte ptr [rsi], cl ; add byte ptr [rcx - 0x7628d639], cl ; ret 0xf229
0x000000000040356a : adc cl, byte ptr [rax + 0x29] ; ret 0x8148
0x000000000040357e : adc cl, byte ptr [rax + 1] ; ret 0x8948
0x00000000004091f5 : adc dword ptr [rax + 0x2145603b], ebp ; fld dword ptr [rbp + 9] ; ret 0x944
0x0000000000421b21 : adc dword ptr [rax], eax ; add al, ah ; in eax, -1 ; jmp qword ptr [rax]
0x0000000000421b51 : adc dword ptr [rax], eax ; add al, dh ; out -1, eax ; jmp rax
0x000000000041d459 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407da3 : adc eax, dword ptr [rbp + 0x21] ; rol byte ptr [rbp + 9], 1 ; ret
0x0000000000407d71 : adc eax, dword ptr [rbp - 0x77] ; ret
0x000000000040b816 : adc ebx, dword ptr [rsi + 0x2145b1b4] ; fld dword ptr [rbp + 9] ; ret 0x944
0x0000000000407714 : adc ebx, edi ; ret
0x0000000000421a14 : add ah, -1 ; jmp rax
0x0000000000403564 : add ah, byte ptr [rax + 0x56] ; mov ch, bh ; popfq ; adc cl, byte ptr [rax + 0x29] ; ret 0x8148
0x0000000000403578 : add ah, byte ptr [rax + 0x56] ; mov ch, bh ; popfq ; adc cl, byte ptr [rax + 1] ; ret 0x8948
0x00000000004226b3 : add ah, ch ; or al, byte ptr [rax] ; add al, cl ; ret
0x0000000000401d88 : add al, 0x25 ; ret
0x0000000000401d35 : add al, 0x25 ; ret 0x6232
0x0000000000421dcc : add al, 2 ; add byte ptr [rax], al ; adc byte ptr [rsi + rdi*8], bl ; call qword ptr [rsi]
0x0000000000421b23 : add al, ah ; in eax, -1 ; jmp qword ptr [rax]
0x00000000004219fb : add al, ah ; ret
0x00000000004219e3 : add al, ah ; ret 0xffff
0x0000000000421dcd : add al, byte ptr [rax] ; add byte ptr [rax], dl ; sbb al, -2 ; call qword ptr [rsi]
0x0000000000416997 : add al, byte ptr [rbp + 0x21] ; rol byte ptr [rbp + 9], 1 ; ret
0x0000000000416965 : add al, byte ptr [rbp - 0x77] ; ret
0x0000000000406a9a : add al, byte ptr [rcx - 0xe] ; jmp qword ptr [rcx]
0x0000000000401d0a : add al, byte ptr [rdx] ; jmp rcx
0x0000000000401f7e : add al, ch ; mov esp, 0xf6fffff8 ; add al, 0x25 ; ret 0x6232
0x00000000004027f7 : add al, ch ; ret
0x00000000004226b7 : add al, cl ; ret
0x0000000000421b53 : add al, dh ; out -1, eax ; jmp rax
0x000000000042023f : add bl, dh ; ret
0x00000000004029b6 : add byte ptr [r8], r8b ; add dh, dh ; add al, 0x25 ; ret 0x6232
0x0000000000402ccd : add byte ptr [rax + 0x2504f601], dh ; ret
0x000000000041ae1c : add byte ptr [rax + 1], cl ; ret 0x8b48
0x0000000000421c4b : add byte ptr [rax + rax - 0x2600000], al ; std ; jmp rdx
0x0000000000421be3 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; mov bh, dh ; std ; jmp rax
0x00000000004219e0 : add byte ptr [rax + rax], cl ; add al, ah ; ret 0xffff
0x0000000000402765 : add byte ptr [rax - 0x75], cl ; fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x000000000041b1e6 : add byte ptr [rax - 0x75], cl ; push rbp ; call 0x3104333e
0x000000000041e4cd : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000041f5b4 : add byte ptr [rax - 0x77], cl ; call 0xfffffffffe5fb8ab
0x000000000041f5b3 : add byte ptr [rax - 0x77], cl ; call 0xfffffffffe5fb8ac
0x0000000000402bac : add byte ptr [rax - 0x77], cl ; ret 0x4be8
0x0000000000402c54 : add byte ptr [rax - 0x77], cl ; ret 0xa3e8
0x0000000000402c00 : add byte ptr [rax - 0x77], cl ; ret 0xf7e8
0x000000000041b1f1 : add byte ptr [rax - 0x7f], cl ; ret 0x40
0x00000000004219c3 : add byte ptr [rax], ah ; ret 0xffff
0x0000000000421dce : add byte ptr [rax], al ; adc byte ptr [rsi + rdi*8], bl ; call qword ptr [rsi]
0x0000000000421a12 : add byte ptr [rax], al ; add ah, -1 ; jmp rax
0x00000000004226b1 : add byte ptr [rax], al ; add ah, ch ; or al, byte ptr [rax] ; add al, cl ; ret
0x0000000000421dca : add byte ptr [rax], al ; add al, 2 ; add byte ptr [rax], al ; adc byte ptr [rsi + rdi*8], bl ; call qword ptr [rsi]
0x000000000042023d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000402ccb : add byte ptr [rax], al ; add byte ptr [rax + 0x2504f601], dh ; ret
0x000000000041ae1a : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8b48
0x0000000000402763 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x000000000041b1e4 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbp ; call 0x31043340
0x000000000041b1ef : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x40
0x000000000042023b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000403b9d : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042023c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000404786 : add byte ptr [rax], al ; add byte ptr [rcx - 0xc343], al ; call qword ptr [rax]
0x0000000000402a44 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x00000000004022b9 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041dd6e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000402483 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000422611 : add byte ptr [rax], al ; add byte ptr [rdx + rcx], cl ; add byte ptr [rax], cl ; ret 0xffff
0x000000000041f90c : add byte ptr [rax], al ; add cl, ch ; ret 2
0x0000000000401d84 : add byte ptr [rax], al ; add dh, al ; add al, 0x25 ; ret
0x00000000004029b7 : add byte ptr [rax], al ; add dh, dh ; add al, 0x25 ; ret 0x6232
0x000000000041d421 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041d130 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040135b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004217e2 : add byte ptr [rax], al ; cmp bh, -3 ; jmp rax
0x00000000004224b6 : add byte ptr [rax], al ; cwde ; mov bh, -1 ; jmp qword ptr [rdx]
0x0000000000422656 : add byte ptr [rax], al ; cwde ; ret
0x00000000004226b2 : add byte ptr [rax], al ; in al, dx ; or al, byte ptr [rax] ; add al, cl ; ret
0x0000000000401519 : add byte ptr [rax], al ; jmp 0x401379
0x0000000000421be6 : add byte ptr [rax], al ; mov bh, dh ; std ; jmp rax
0x000000000041b9f2 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000422652 : add byte ptr [rax], al ; mov word ptr [rdx], cs ; add byte ptr [rax], al ; cwde ; ret
0x0000000000422612 : add byte ptr [rax], al ; or r8b, byte ptr [rax] ; add byte ptr [rax], cl ; ret 0xffff
0x0000000000402d19 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000041e36b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041d0f0 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000421b12 : add byte ptr [rax], al ; push rax ; in eax, -1 ; jmp rax
0x00000000004219ca : add byte ptr [rax], al ; push rax ; ret 0xffff
0x000000000042023e : add byte ptr [rax], al ; ret
0x0000000000421a22 : add byte ptr [rax], al ; rol ch, -1 ; jmp qword ptr [rax]
0x0000000000421a63 : add byte ptr [rax], al ; sar bh, 1 ; jmp qword ptr [rax]
0x0000000000421be2 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov bh, dh ; std ; jmp rax
0x0000000000421b8a : add byte ptr [rax], al ; sub dl, -1 ; jmp rax
0x0000000000422237 : add byte ptr [rax], bh ; mov dl, -1 ; jmp rdx
0x0000000000422277 : add byte ptr [rax], ch ; mov ch, -1 ; jmp qword ptr [rdx]
0x0000000000422617 : add byte ptr [rax], cl ; ret 0xffff
0x0000000000421aa3 : add byte ptr [rax], dh ; sar edi, cl ; jmp qword ptr [rax]
0x0000000000421dcf : add byte ptr [rax], dl ; sbb al, -2 ; call qword ptr [rsi]
0x0000000000403ca4 : add byte ptr [rbp - 0x77], al ; ret 0x3145
0x000000000041e36c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000041d0f1 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000402367 : add byte ptr [rbx - 0x1034b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040c4e7 : add byte ptr [rcx - 0x7628d639], cl ; ret 0xf229
0x0000000000406875 : add byte ptr [rcx - 0x7629d63a], cl ; ret 0xca29
0x0000000000403cdb : add byte ptr [rcx - 0x77], al ; ret 0x8141
0x0000000000404788 : add byte ptr [rcx - 0xc343], al ; call qword ptr [rax]
0x00000000004200dc : add byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x0000000000401808 : add byte ptr [rcx], al ; ret
0x000000000041f908 : add byte ptr [rdi], cl ; lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000402a46 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x00000000004022bb : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041dd70 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000402485 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000421dcb : add byte ptr [rdx + rax], al ; add byte ptr [rax], al ; adc byte ptr [rsi + rdi*8], bl ; call qword ptr [rsi]
0x0000000000422613 : add byte ptr [rdx + rcx], cl ; add byte ptr [rax], cl ; ret 0xffff
0x0000000000422233 : add byte ptr [rsi + rax], ch ; add byte ptr [rax], bh ; mov dl, -1 ; jmp rdx
0x000000000040f076 : add byte ptr [rsi], cl ; add byte ptr [rcx - 0x7628d639], cl ; ret 0xf229
0x000000000041f90e : add cl, ch ; ret 2
0x0000000000401d86 : add dh, al ; add al, 0x25 ; ret
0x0000000000401d33 : add dh, al ; add al, 0x25 ; ret 0x6232
0x00000000004029b9 : add dh, dh ; add al, 0x25 ; ret 0x6232
0x000000000041e9a9 : add dword ptr [rax - 0x77], ecx ; ret 0x8148
0x000000000041d41f : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041e36a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000041d0ef : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000041ff9d : add dword ptr [rax], ecx ; ret 0x840
0x0000000000403514 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402e84 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040343f : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041fc7a : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x000000000040f449 : add eax, 0x21452944 ; rol byte ptr [rbp + 9], 1 ; ret
0x0000000000415741 : add eax, 0x2145fe9a ; rol byte ptr [rbp + 9], 1 ; ret
0x0000000000401804 : add eax, 0x221aae ; add ebx, esi ; ret
0x000000000041a0bc : add eax, 0x81ca012c ; ret 0x5f9a
0x0000000000417d7c : add eax, 0x8944fc2c ; ret
0x000000000040f417 : add eax, 0x89452944 ; ret
0x000000000041570f : add eax, 0x8945fe9a ; ret
0x000000000041f90b : add eax, 0xe9000000 ; ret 2
0x0000000000406333 : add eax, dword ptr [rbp + 0x21] ; rol byte ptr [rbp + 9], 1 ; ret
0x0000000000406301 : add eax, dword ptr [rbp - 0x77] ; ret
0x00000000004017cb : add eax, edx ; sar rax, 1 ; jne 0x4017dc ; pop rbp ; ret
0x0000000000401809 : add ebx, esi ; ret
0x0000000000401d81 : add ecx, ebp ; wait ; add byte ptr [rax], al ; add dh, al ; add al, 0x25 ; ret
0x0000000000411448 : add edx, ecx ; mov word ptr [rbp + 0x21], es ; rol byte ptr [rbp + 9], 1 ; ret
0x0000000000411416 : add edx, ecx ; mov word ptr [rbp - 0x77], es ; ret
0x0000000000401d5c : add esi, eax ; add al, 0x25 ; ret 0x6232
0x0000000000402403 : add esi, eax ; mov rax, rsi ; pop rbp ; ret
0x0000000000402ccf : add esi, esi ; add al, 0x25 ; ret
0x00000000004019eb : add esp, 0x10 ; pop rbp ; ret
0x0000000000402d15 : add esp, 0x130 ; pop rbp ; ret
0x000000000041e69c : add esp, 0x1a0 ; pop rbp ; ret
0x000000000041f07e : add esp, 0x1e0 ; pop rbp ; ret
0x0000000000403519 : add esp, 0x20 ; pop rbp ; ret
0x0000000000403f0e : add esp, 0x20 ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004043f5 : add esp, 0x28 ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403d8d : add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000401acd : add esp, 0x30 ; pop rbp ; ret
0x000000000041ad4b : add esp, 0x38 ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000402e89 : add esp, 0x40 ; pop rbp ; ret
0x000000000041d83c : add esp, 0x50 ; pop rbp ; ret
0x0000000000403444 : add esp, 0x60 ; pop rbp ; ret
0x000000000041bd13 : add esp, 0x70 ; pop rbp ; ret
0x000000000041d74a : add esp, 0x90 ; pop rbp ; ret
0x000000000041e533 : add esp, 0xa0 ; pop rbp ; ret
0x000000000041b47b : add esp, 0xd0 ; pop rbp ; ret
0x000000000040461d : add esp, 0xf0 ; pop rbp ; ret
0x000000000040135e : add esp, 8 ; ret
0x00000000004017ca : add rax, rdx ; sar rax, 1 ; jne 0x4017dd ; pop rbp ; ret
0x0000000000402402 : add rsi, rax ; mov rax, rsi ; pop rbp ; ret
0x00000000004019ea : add rsp, 0x10 ; pop rbp ; ret
0x0000000000402d14 : add rsp, 0x130 ; pop rbp ; ret
0x000000000041e69b : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000041f07d : add rsp, 0x1e0 ; pop rbp ; ret
0x0000000000403518 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000403f0d : add rsp, 0x20 ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000403d8c : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000401acc : add rsp, 0x30 ; pop rbp ; ret
0x0000000000402e88 : add rsp, 0x40 ; pop rbp ; ret
0x000000000041d83b : add rsp, 0x50 ; pop rbp ; ret
0x0000000000403443 : add rsp, 0x60 ; pop rbp ; ret
0x000000000041bd12 : add rsp, 0x70 ; pop rbp ; ret
0x000000000041d749 : add rsp, 0x90 ; pop rbp ; ret
0x000000000041e532 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000041b47a : add rsp, 0xd0 ; pop rbp ; ret
0x000000000040461c : add rsp, 0xf0 ; pop rbp ; ret
0x000000000040135d : add rsp, 8 ; ret
0x000000000041263d : and al, 0xe ; add byte ptr [rcx - 0x7628d639], cl ; ret 0xf229
0x000000000041fc79 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401807 : and al, byte ptr [rax] ; add ebx, esi ; ret
0x000000000041a2bc : and al, byte ptr [rbp + 0x21] ; rol byte ptr [rbp + 9], 1 ; ret
0x000000000041a28a : and al, byte ptr [rbp - 0x77] ; ret
0x000000000040e1b4 : and byte ptr [rbp + 0x21], al ; rol byte ptr [rbp + 9], 1 ; ret
0x000000000040e182 : and byte ptr [rbp - 0x77], al ; ret
0x0000000000403f10 : and byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000403d26 : and cl, byte ptr [rip + 0x945c721] ; ret
0x000000000040888c : and dh, dh ; ret 0x944
0x0000000000408895 : and dh, dh ; ret 0xf781
0x00000000004044be : and dword ptr [rdi + 0x74], edi ; xchg eax, ebx ; ret
0x000000000041419d : and eax, 0x2145f8c7 ; rol byte ptr [rbp + 9], 1 ; ret
0x0000000000401d2e : and eax, 0x6232c1 ; add dh, al ; add al, 0x25 ; ret 0x6232
0x0000000000401d57 : and eax, 0x6232c1 ; add esi, eax ; add al, 0x25 ; ret 0x6232
0x00000000004039ef : and eax, 0x6232e0 ; pop rbp ; ret
0x0000000000403a13 : and eax, 0x6232e8 ; pop rbp ; ret
0x000000000041416b : and eax, 0x8945f8c7 ; ret
0x0000000000416bd7 : and eax, dword ptr [rbp + 0x21] ; rol byte ptr [rbp + 9], 1 ; ret
0x0000000000416ba5 : and eax, dword ptr [rbp - 0x77] ; ret
0x000000000040af68 : and ebp, dword ptr [rsi + 0x2145e03e] ; rol byte ptr [rbp + 9], 1 ; ret
0x000000000040af36 : and ebp, dword ptr [rsi - 0x76ba1fc2] ; ret
0x000000000041ae15 : call 0x31042f65
0x000000000041af28 : call 0x31043078
0x000000000041b1ea : call 0x3104333a
0x000000000041f8d8 : call 0x401639
0x0000000000401f7f : call 0x401848
0x0000000000411479 : call 0xffffffffc3ca58f4
0x000000000041d129 : call 0xffffffffe9045a79
0x000000000041d128 : call 0xffffffffe9045a7a
0x000000000041f5b8 : call 0xfffffffffe5fb8a7
0x000000000041f5b7 : call 0xfffffffffe5fb8a8
0x0000000000420219 : call qword ptr [r12 + rbx*8]
0x000000000040478e : call qword ptr [rax]
0x000000000040d201 : call qword ptr [rip - 0x3c76bb92]
0x0000000000421dd3 : call qword ptr [rsi]
0x000000000042021a : call qword ptr [rsp + rbx*8]
0x000000000040182d : call rax
0x000000000041ce7c : call rbx
0x0000000000422193 : call rdi
0x000000000041fc3a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x000000000041e89f : clc ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041dd81 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041b7e8 : clc ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004017cf : clc ; jne 0x4017d8 ; pop rbp ; ret
0x000000000041bbc5 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000042015f : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000403dae : clc ; mov esi, dword ptr [rbp - 0xc] ; mov dword ptr [rdi], esi ; pop rbp ; ret
0x0000000000402417 : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040241b : clc ; pop rbp ; ret
0x0000000000414c07 : clc ; sbb dword ptr [rbp + 0x21], eax ; rol byte ptr [rbp + 9], 1 ; ret
0x0000000000414bd5 : clc ; sbb dword ptr [rbp - 0x77], eax ; ret
0x000000000041f0e6 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041ec69 : cld ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041f20e : cld ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040461b : cld ; add rsp, 0xf0 ; pop rbp ; ret
0x000000000042015c : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000041f0e3 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041ec66 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041f20b : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041bdd6 : cmovb eax, dword ptr [rax] ; jmp rcx
0x00000000004147c0 : cmp al, 0xe ; add byte ptr [rcx - 0x7628d639], cl ; ret 0xf229
0x000000000040873c : cmp al, byte ptr [rbp + 0x21] ; rol byte ptr [rbp + 9], 1 ; ret
0x000000000040870a : cmp al, byte ptr [rbp - 0x77] ; ret
0x00000000004217e4 : cmp bh, -3 ; jmp rax
0x000000000041ad4d : cmp byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000041ef69 : cmp dword ptr [rdx - 0x76be63d5], ebx ; ret
0x000000000040178d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4017a0 ; pop rbp ; ret
0x0000000000409c61 : cmp ecx, dword ptr [rax - 0x76] ; ret 0x2141
0x0000000000409c4b : cmp ecx, dword ptr [rax - 0x76] ; ret 0x8945
0x0000000000409c55 : cmp ecx, dword ptr [rax - 0x76] ; ret 0xdf21
0x0000000000417e63 : cwde ; enter 0x44d0, 0x21 ; ret
0x00000000004224b8 : cwde ; mov bh, -1 ; jmp qword ptr [rdx]
0x000000000041deac : cwde ; mov rcx, qword ptr [rax*8 + 0x421418] ; jmp rcx
0x0000000000422658 : cwde ; ret
0x000000000041aeb4 : dec dword ptr [rax + 0x21] ; ret 0x8b48
0x000000000041f8dc : dec dword ptr [rax - 0x73] ; xor al, 0x25 ; ret
0x0000000000401d04 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; nop ; add al, byte ptr [rdx] ; jmp rcx
0x000000000041c0f4 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; pop rax ; cmovb eax, dword ptr [rax] ; jmp rcx
0x0000000000402624 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x000000000041b0e7 : dec dword ptr [rax - 0x77] ; ret 0x8148
0x0000000000402bc8 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000040236d : dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000404b9b : dec dword ptr [rcx - 0x7629d63a] ; ret 0xca29
0x000000000041c882 : dec dword ptr [rcx - 0x77] ; ret 0x294d
0x0000000000417ec5 : enter -0x7ebf, -0x10 ; ret
0x0000000000421b88 : enter 0x12, 0 ; sub dl, -1 ; jmp rax
0x0000000000417e64 : enter 0x44d0, 0x21 ; ret
0x0000000000414d57 : enter 0x45fc, 0x21 ; fld dword ptr [rbp + 9] ; ret 0x944
0x000000000041cc10 : enter 0x4b05, 0x34 ; fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x0000000000409874 : fadd dword ptr [rbp + 0x21] ; rol byte ptr [rbp + 9], 1 ; ret
0x0000000000409842 : fadd dword ptr [rbp - 0x77] ; ret
0x0000000000405e96 : fadd qword ptr [rbp + 0x21] ; rol byte ptr [rbp + 9], 1 ; ret
0x0000000000405e64 : fadd qword ptr [rbp - 0x77] ; ret
0x0000000000411447 : fadd qword ptr [rbx] ; ror dword ptr [rbp + rax*2 + 0x945d021], 1 ; ret
0x0000000000421ad5 : fcos ; jmp rax
0x000000000041cc14 : fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x000000000040cc4b : fiadd word ptr [rbp + 9] ; ret 0x3144
0x00000000004077b6 : fiadd word ptr [rcx - 0xa] ; jmp qword ptr [rcx]
0x0000000000412f42 : fiadd word ptr [rcx - 0xe] ; jmp qword ptr [rcx]
0x000000000040754a : fild dword ptr [rbp + 0x21] ; rol byte ptr [rbp + 9], 1 ; ret
0x0000000000407518 : fild dword ptr [rbp - 0x77] ; ret
0x000000000040317f : fimul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040d27a : fisub word ptr [rdx + 0x9f82141] ; fiadd word ptr [rbp + 9] ; ret 0x3144
0x000000000040d267 : fisub word ptr [rdx - 0x76ba04df] ; ret 0x8141
0x0000000000405320 : fld dword ptr [rbp + 9] ; ret 0x944
0x000000000041a7c9 : fld qword ptr [rcx - 0x77] ; rol dword ptr [rcx - 0x7f], cl ; jrcxz 0x41a7ed ; insb byte ptr [rdi], dx ; ret 0x45dd
0x0000000000402768 : fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x0000000000402769 : fmul dword ptr [rax - 0x77] ; ret 0x2948
0x000000000042021c : fmul qword ptr [rax - 0x7d] ; ret
0x00000000004019e9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403db1 : hlt ; mov dword ptr [rdi], esi ; pop rbp ; ret
0x00000000004017a0 : hlt ; pop rbp ; mov edi, 0x623280 ; jmp rax
0x0000000000414c06 : idiv eax ; sbb dword ptr [rbp + 0x21], eax ; rol byte ptr [rbp + 9], 1 ; ret
0x0000000000414bd4 : idiv eax ; sbb dword ptr [rbp - 0x77], eax ; ret
0x0000000000421be9 : idiv ebp ; jmp rax
0x000000000040fc4a : imul dword ptr [rcx] ; xchg eax, ecx ; ret
0x000000000040e6f4 : imul dword ptr [rsi - 0x71] ; ret 0x211b
0x0000000000411045 : imul ebp, esi, 0x2145e3ce ; rol byte ptr [rbp + 9], 1 ; ret
0x0000000000411013 : imul ebp, esi, 0x8945e3ce ; ret
0x000000000040c746 : imul ecx, dword ptr [rip - 0x35fe76df], -0x7f ; ret 0xd6b
0x000000000040bd65 : imul edx, dword ptr [rax], 0x14486ee ; ret 0xc281
0x000000000041a9d8 : imul esp, dword ptr [rax + 0x45], 0x8141c389 ; jrcxz 0x41a974 ; ret
0x000000000041aa0a : imul esp, dword ptr [rax + 0x45], 0x945d021 ; ret
0x000000000041212d : imul esp, edi, 0x21455628 ; rol byte ptr [rbp + 9], 1 ; ret
0x00000000004120fb : imul esp, edi, 0x89455628 ; ret
0x000000000040c4e4 : in al, 0xd ; add byte ptr [rcx - 0x7628d639], cl ; ret 0xf229
0x00000000004226b4 : in al, dx ; or al, byte ptr [rax] ; add al, cl ; ret
0x0000000000421b25 : in eax, -1 ; jmp qword ptr [rax]
0x0000000000421b15 : in eax, -1 ; jmp rax
0x0000000000415743 : inc byte ptr [rbp + 0x21] ; rol byte ptr [rbp + 9], 1 ; ret
0x0000000000415711 : inc byte ptr [rbp - 0x77] ; ret
0x00000000004219bf : inc dword ptr [rax + 0x2000000b] ; ret 0xffff
0x0000000000421b1f : inc dword ptr [rax] ; adc dword ptr [rax], eax ; add al, ah ; in eax, -1 ; jmp qword ptr [rax]
0x0000000000403ca2 : inc dword ptr [rax] ; add byte ptr [rbp - 0x77], al ; ret 0x3145
0x0000000000403cd9 : inc dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret 0x8141
0x00000000004219df : inc dword ptr [rax] ; or al, 0 ; add al, ah ; ret 0xffff
0x0000000000405aa5 : inc dword ptr [rbp + 0x21] ; ret
0x000000000040cee4 : inc dword ptr [rbp + 0x21] ; rol byte ptr [rbp + 9], 1 ; ret
0x000000000040ceb2 : inc dword ptr [rbp - 0x77] ; ret
0x0000000000404b37 : inc dword ptr [rbp - 0x77] ; ret 0x2145
0x0000000000404107 : inc dword ptr [rbp - 0x77] ; ret 0x8141
0x000000000040c26a : inc dword ptr [rcx + 0x3df5bacb] ; ret 0x2141
0x0000000000410989 : inc dword ptr [rcx - 0x18e31819] ; ret
0x0000000000410972 : inc dword ptr [rcx - 0x18e3181a] ; ret
0x0000000000409c7a : inc dword ptr [rcx - 0x75b7c435] ; ret 0x2141
0x0000000000417ec2 : inc dword ptr [rcx - 0x77] ; enter -0x7ebf, -0x10 ; ret
0x0000000000403e47 : inc dword ptr [rcx - 0x77] ; ret
0x0000000000404048 : inc dword ptr [rcx - 0x77] ; ret 0x8141
0x000000000041a280 : inc dword ptr [rcx - 0x77] ; retf -0x7ebf ; pop rsi ; movsd dword ptr [rdi], dword ptr [rsi] ; jmp qword ptr [rdx]
0x0000000000416325 : inc dword ptr [rcx - 0x7f] ; leave ; scasb al, byte ptr [rdi] ; ret 0x44f6
0x000000000040772e : inc dword ptr [rcx - 0x7f] ; loop 0x40774a ; sti ; ret
0x000000000040aa7e : inc dword ptr [rcx - 0x7f] ; loope 0x40aaeb ; push rcx ; ret
0x000000000040c39c : inc dword ptr [rcx - 0x7f] ; loope 0x40c356 ; ret
0x0000000000413df8 : inc dword ptr [rcx - 0x7f] ; loope 0x413e0c ; ret 0xa46b
0x00000000004074d6 : inc dword ptr [rcx - 0x7f] ; loopne 0x40753c ; ret
0x000000000040bd15 : inc dword ptr [rcx - 0x7f] ; loopne 0x40bcab ; sub al, -1 ; ret
0x000000000040fc5b : inc dword ptr [rcx - 0x7f] ; loopne 0x40fc8f ; xchg eax, ecx ; ret
0x000000000041a2b5 : inc dword ptr [rcx - 0x7f] ; retf -0x5aa2 ; jmp qword ptr [rdx]
0x0000000000408888 : inc dword ptr [rcx - 0x9dd9a0f] ; ret 0x944
0x000000000040bcfa : inc dword ptr [rcx - 0xd3751a] ; ret
0x000000000041ce9b : inc dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000421b4f : inc eax ; adc dword ptr [rax], eax ; add al, dh ; out -1, eax ; jmp rax
0x000000000041a7c7 : insb byte ptr [rdi], dx ; ret 0x41dd
0x000000000041a7dd : insb byte ptr [rdi], dx ; ret 0x44dd
0x000000000041a7d1 : insb byte ptr [rdi], dx ; ret 0x45dd
0x000000000041e4d5 : int 0x80
0x000000000040a8c2 : int 0x81
0x000000000040888a : int1 ; and dh, dh ; ret 0x944
0x00000000004155dc : int1 ; mov ebp, 0x5c8013b ; ret 0xbdf1
0x000000000040d8f7 : int1 ; or dword ptr [rsi - 0x2c], ecx ; ret
0x00000000004162f5 : int1 ; scasb al, byte ptr [rdi] ; ret 0x41f6
0x0000000000401793 : ja 0x40179a ; pop rbp ; ret
0x00000000004070a6 : ja 0x4070ab ; ret 0xea81
0x0000000000420e11 : jae 0x420e26 ; mov ebx, 0x2e766a0a ; leave ; ret 0x8581
0x0000000000420e17 : jbe 0x420e4a ; leave ; ret 0x8581
0x000000000040179f : je 0x40179d ; pop rbp ; mov edi, 0x623280 ; jmp rax
0x00000000004044c0 : je 0x404457 ; ret
0x00000000004044d0 : je 0x404467 ; ret
0x00000000004044bf : jg 0x404538 ; xchg eax, ebx ; ret
0x00000000004044cf : jg 0x404548 ; xchg eax, ebx ; ret
0x0000000000402416 : jge 0x402417 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000403dad : jge 0x403daf ; mov esi, dword ptr [rbp - 0xc] ; mov dword ptr [rdi], esi ; pop rbp ; ret
0x000000000041a99e : jl 0x41a9b7 ; add byte ptr [rcx - 0x7628d639], cl ; ret 0xf229
0x0000000000420d8f : jmp 0x3998cff1
0x000000000040151b : jmp 0x401377
0x0000000000401d82 : jmp 0x401e2a
0x00000000004029b5 : jmp 0x402a0f
0x000000000041834d : jmp 0x418388
0x000000000041834c : jmp 0x418389
0x000000000041837f : jmp 0x4183bd
0x0000000000404f76 : jmp 0xffffffffa202ee09
0x000000000041e9a8 : jmp 0xffffffffc2cb31b2
0x0000000000408104 : jmp 0xffffffffca41a76f
0x0000000000403279 : jmp qword ptr [rax]
0x0000000000406c3d : jmp qword ptr [rcx]
0x000000000041a289 : jmp qword ptr [rdx]
0x00000000004017a7 : jmp rax
0x0000000000401d0d : jmp rcx
0x00000000004017e7 : jmp rdx
0x00000000004017d0 : jne 0x4017d7 ; pop rbp ; ret
0x0000000000403db0 : jne 0x403dab ; mov dword ptr [rdi], esi ; pop rbp ; ret
0x000000000041bd15 : jo 0x41bd76 ; ret
0x000000000041d33f : jo 0x41d3a5 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041d9e4 : jo 0x41da45 ; ret
0x000000000041db1e : jo 0x41db7f ; ret
0x0000000000420e28 : jo 0x420db8 ; ret 0x51a3
0x0000000000403d23 : jrcxz 0x403ccd ; outsb dx, byte ptr [rsi] ; and cl, byte ptr [rip + 0x945c721] ; ret
0x0000000000409848 : jrcxz 0x409874 ; ret 0xd828
0x0000000000409854 : jrcxz 0x409880 ; ret 0xd828
0x0000000000409fc7 : jrcxz 0x409fbb ; ret 0x44f1
0x000000000040b8bf : jrcxz 0x40b88d ; ret 0x4425
0x000000000040b8cb : jrcxz 0x40b899 ; ret 0x4425
0x000000000040e28f : jrcxz 0x40e2e5 ; out dx, al ; ret
0x0000000000415f9d : jrcxz 0x415f29 ; ret
0x000000000041630c : jrcxz 0x4162bf ; ret 0x44f6
0x0000000000419959 : jrcxz 0x41995e ; ret 0xea81
0x000000000041a290 : jrcxz 0x41a2f3 ; movsd dword ptr [rdi], dword ptr [rsi] ; jmp qword ptr [rdx]
0x000000000041a29c : jrcxz 0x41a2ff ; movsd dword ptr [rdi], dword ptr [rsi] ; jmp qword ptr [rdx]
0x000000000041a7cf : jrcxz 0x41a7e7 ; insb byte ptr [rdi], dx ; ret 0x45dd
0x000000000041a7db : jrcxz 0x41a7f3 ; insb byte ptr [rdi], dx ; ret 0x44dd
0x000000000041a9df : jrcxz 0x41a96d ; ret
0x000000000041a9eb : jrcxz 0x41a979 ; ret
0x000000000041a3d4 : js 0x41a3ed ; add byte ptr [rcx - 0x7628d639], cl ; ret 0xf229
0x0000000000403d24 : lahf ; outsb dx, byte ptr [rsi] ; and cl, byte ptr [rip + 0x945c721] ; ret
0x0000000000409d54 : lahf ; ret 0x2144
0x0000000000409d7c : lahf ; ret 0x2145
0x0000000000409d4a : lahf ; ret 0x8945
0x0000000000411369 : lea eax, dword ptr [rbp + 0x21] ; fld dword ptr [rbp + 9] ; ret 0x944
0x000000000040d150 : lea eax, dword ptr [rbp + 0x21] ; rol byte ptr [rbp + 9], 1 ; ret
0x000000000040d11e : lea eax, dword ptr [rbp - 0x77] ; ret
0x000000000041f90a : lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x00000000004182dc : lea ebp, dword ptr [rdi + rdi*8 - 1] ; inc dword ptr [rbp - 0x77] ; ret 0x2145
0x0000000000404d47 : lea ebp, dword ptr [rdi + rdi*8 - 1] ; inc dword ptr [rbp - 0x77] ; ret 0x8141
0x000000000040aada : lea ebx, dword ptr [rax + 0x2145aaad] ; fld dword ptr [rbp + 9] ; ret 0x944
0x0000000000407ebd : lea ebx, dword ptr [rdi + rdi*8 - 1] ; inc dword ptr [rbp - 0x77] ; ret 0x2145
0x00000000004052ec : lea ebx, dword ptr [rdi + rdi*8 - 1] ; inc dword ptr [rbp - 0x77] ; ret 0x8141
0x000000000040cdf3 : lea edx, dword ptr [rdi + rdi*8 - 1] ; inc dword ptr [rbp - 0x77] ; ret 0x2145
0x0000000000406be0 : lea edx, dword ptr [rdi + rdi*8 - 1] ; inc dword ptr [rbp - 0x77] ; ret 0x8141
0x000000000040665d : lea esp, dword ptr [rdi + rdi*8 - 1] ; inc dword ptr [rbp - 0x77] ; ret 0x2145
0x0000000000407c35 : lea esp, dword ptr [rdi + rdi*8 - 1] ; inc dword ptr [rbp - 0x77] ; ret 0x8141
0x0000000000408893 : leave ; and dh, dh ; ret 0xf781
0x000000000040b8c0 : leave ; ret 0x4425
0x000000000040b8b6 : leave ; ret 0x4525
0x0000000000420e19 : leave ; ret 0x8581
0x0000000000416328 : leave ; scasb al, byte ptr [rdi] ; ret 0x44f6
0x00000000004074bd : loop 0x40751d ; ret
0x0000000000407731 : loop 0x407747 ; sti ; ret
0x0000000000413de0 : loop 0x413dee ; ret 0xa46b
0x00000000004162ff : loop 0x4162b2 ; ret 0x44f6
0x000000000040a36a : loope 0x40a3a4 ; or eax, dword ptr [rbp - 0x77] ; ret
0x000000000040a39c : loope 0x40a3d9 ; or eax, dword ptr [rbp + 0x21] ; rol byte ptr [rbp + 9], 1 ; ret
0x000000000040aa81 : loope 0x40aae8 ; push rcx ; ret
0x000000000040aa81 : loope 0x40aaec ; push rcx ; ret
0x000000000040c39f : loope 0x40c353 ; ret
0x000000000040c7c4 : loope 0x40c7ac ; adc byte ptr [rbp - 0x77], al ; ret
0x000000000040c7c3 : loope 0x40c7ad ; adc byte ptr [rbp - 0x77], al ; ret
0x000000000040c7c2 : loope 0x40c7ae ; adc byte ptr [rbp - 0x77], al ; ret
0x000000000040c7f6 : loope 0x40c7e1 ; adc byte ptr [rbp + 0x21], al ; rol byte ptr [rbp + 9], 1 ; ret
0x000000000040c7f5 : loope 0x40c7e2 ; adc byte ptr [rbp + 0x21], al ; rol byte ptr [rbp + 9], 1 ; ret
0x0000000000413dfb : loope 0x413e09 ; ret 0xa46b
0x0000000000417e61 : loope 0x417e1f ; cwde ; enter 0x44d0, 0x21 ; ret
0x0000000000403f0c : loopne 0x403f5f ; add esp, 0x20 ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004074d9 : loopne 0x407539 ; ret
0x000000000040bd18 : loopne 0x40bca8 ; sub al, -1 ; ret
0x000000000040fc5e : loopne 0x40fc8c ; xchg eax, ecx ; ret
0x000000000041b66b : loopne 0x41b6bb ; add esp, 0x20 ; pop rbp ; ret
0x000000000041b66a : loopne 0x41b6bc ; add esp, 0x20 ; pop rbp ; ret
0x000000000041f080 : loopne 0x41f088 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004077b4 : mov ah, 0x18 ; fiadd word ptr [rcx - 0xa] ; jmp qword ptr [rcx]
0x000000000041d8bb : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000041d748 : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x000000000041aa08 : mov al, bl ; imul esp, dword ptr [rax + 0x45], 0x945d021 ; ret
0x00000000004100d4 : mov al, byte ptr [rbp + 0x21] ; rol byte ptr [rbp + 9], 1 ; ret
0x00000000004100a2 : mov al, byte ptr [rbp - 0x77] ; ret
0x000000000041fc76 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004224b9 : mov bh, -1 ; jmp qword ptr [rdx]
0x0000000000419dfc : mov bh, 0x67 ; xor eax, dword ptr [rbp + 0x21] ; fld dword ptr [rbp + 9] ; ret 0x944
0x0000000000421be8 : mov bh, dh ; std ; jmp rax
0x0000000000403a11 : mov byte ptr [0x6232e8], al ; pop rbp ; ret
0x0000000000411639 : mov byte ptr [r9 - 0x7629d63a], r9b ; ret 0xca29
0x00000000004193fc : mov byte ptr [rbp + 0x21], al ; rol byte ptr [rbp + 9], 1 ; ret
0x00000000004193ca : mov byte ptr [rbp - 0x77], al ; ret
0x000000000041163a : mov byte ptr [rcx - 0x7629d63a], cl ; ret 0xca29
0x0000000000419dfb : mov byte ptr [rdi + 0x21453367], dh ; fld dword ptr [rbp + 9] ; ret 0x944
0x0000000000416ef8 : mov byte ptr [rdx], cl ; sub al, byte ptr [rbp + 0x21] ; rol byte ptr [rbp + 9], 1 ; ret
0x0000000000416ec6 : mov byte ptr [rdx], cl ; sub al, byte ptr [rbp - 0x77] ; ret
0x0000000000401803 : mov byte ptr [rip + 0x221aae], 1 ; ret
0x0000000000420d8e : mov ch, -0x17 ; pop rbx ; ret 0x3956
0x0000000000417e62 : mov ch, -0x68 ; enter 0x44d0, 0x21 ; ret
0x0000000000422279 : mov ch, -1 ; jmp qword ptr [rdx]
0x0000000000403567 : mov ch, bh ; popfq ; adc cl, byte ptr [rax + 0x29] ; ret 0x8148
0x000000000040357b : mov ch, bh ; popfq ; adc cl, byte ptr [rax + 1] ; ret 0x8948
0x000000000040bcfd : mov ch, byte ptr [rdi + rdi*8] ; ret
0x00000000004051d3 : mov cl, -0x60 ; ret
0x0000000000403516 : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402e86 : mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000403441 : mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041fc7c : mov dh, -0x40 ; pop rbp ; ret
0x0000000000422399 : mov dh, -1 ; jmp qword ptr [rax]
0x0000000000422239 : mov dl, -1 ; jmp rdx
0x0000000000402bfd : mov dl, 0xb ; add byte ptr [rax - 0x77], cl ; ret 0xf7e8
0x00000000004039ed : mov dword ptr [0x6232e0], edi ; pop rbp ; ret
0x000000000041bbc6 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000041bb88 : mov dword ptr [rax], eax ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000041ba44 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000041bb87 : mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000407e3f : mov dword ptr [rbp + 0x21], eax ; rol byte ptr [rbp + 9], 1 ; ret
0x000000000041078f : mov dword ptr [rbp + rax*2 + 0x21], edi ; fld dword ptr [rbp + 9] ; ret 0x944
0x0000000000403583 : mov dword ptr [rbp - 0x10], edx ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000041b669 : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401ac9 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000407e0d : mov dword ptr [rbp - 0x77], eax ; ret
0x00000000004019e7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042015d : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004039d0 : mov dword ptr [rbp - 8], eax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402415 : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000041b219 : mov dword ptr [rcx + 0x28], eax ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041bc3e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403b9a : mov dword ptr [rdi + 0x28], 0 ; pop rbp ; ret
0x0000000000403db2 : mov dword ptr [rdi], esi ; pop rbp ; ret
0x000000000040e85d : mov eax, 0x2145c527 ; rol byte ptr [rbp + 9], 1 ; ret
0x000000000040e82b : mov eax, 0x8945c527 ; ret
0x000000000041b9f8 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000041e7bb : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041b633 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041b9f5 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000403587 : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000041eab3 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403d89 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000041b9ad : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041ba3e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000041bb8a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000041bd0f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000041d8b9 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041f0e4 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041ec67 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041f20c : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041e89d : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041dd7f : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041b7e6 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000402419 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402406 : mov eax, esi ; pop rbp ; ret
0x00000000004155dd : mov ebp, 0x5c8013b ; ret 0xbdf1
0x000000000040182b : mov ebp, esp ; call rax
0x0000000000401791 : mov ebp, esp ; ja 0x40179c ; pop rbp ; ret
0x0000000000410bc6 : mov ebx, 0x214563d6 ; rol byte ptr [rbp + 9], 1 ; ret
0x0000000000420e14 : mov ebx, 0x2e766a0a ; leave ; ret 0x8581
0x0000000000410b94 : mov ebx, 0x894563d6 ; ret
0x00000000004122db : mov ecx, 0x2dc80132 ; ret
0x000000000041e4ed : mov ecx, 0x5b2a830a ; ret
0x0000000000401d06 : mov ecx, dword ptr [rax*8 + 0x420290] ; jmp rcx
0x000000000041bdd2 : mov ecx, dword ptr [rax*8 + 0x420f10] ; jmp rcx
0x000000000041c0f6 : mov ecx, dword ptr [rax*8 + 0x420f58] ; jmp rcx
0x000000000041deae : mov ecx, dword ptr [rax*8 + 0x421418] ; jmp rcx
0x000000000041ba41 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004044ba : mov edi, 0x2118ab81 ; jg 0x40453d ; xchg eax, ebx ; ret
0x0000000000406228 : mov edi, 0x2145bc26 ; rol byte ptr [rbp + 9], 1 ; ret
0x0000000000401825 : mov edi, 0x622e20 ; mov rbp, rsp ; call rax
0x00000000004017a2 : mov edi, 0x623280 ; jmp rax
0x00000000004017e2 : mov edi, 0x623280 ; jmp rdx
0x00000000004061f6 : mov edi, 0x8945bc26 ; ret
0x0000000000403dac : mov edi, dword ptr [rbp - 8] ; mov esi, dword ptr [rbp - 0xc] ; mov dword ptr [rdi], esi ; pop rbp ; ret
0x0000000000420217 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000420216 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x00000000004044ca : mov edx, 0x2118ab81 ; jg 0x40454d ; xchg eax, ebx ; ret
0x00000000004088bc : mov esi, 0x1448593 ; ret 0xc281
0x0000000000405d43 : mov esi, 0x2145c7a8 ; rol byte ptr [rbp + 9], 1 ; ret
0x0000000000410457 : mov esi, 0x81ca01e5 ; ret 0x2d2d
0x0000000000405d11 : mov esi, 0x8945c7a8 ; ret
0x0000000000403daf : mov esi, dword ptr [rbp - 0xc] ; mov dword ptr [rdi], esi ; pop rbp ; ret
0x00000000004017e0 : mov esi, eax ; mov edi, 0x623280 ; jmp rdx
0x000000000040e1b2 : mov esp, 0x21452024 ; rol byte ptr [rbp + 9], 1 ; ret
0x0000000000416c0b : mov esp, 0x894451d2 ; ret
0x000000000040e180 : mov esp, 0x89452024 ; ret
0x0000000000401f80 : mov esp, 0xf6fffff8 ; add al, 0x25 ; ret 0x6232
0x00000000004039ec : mov qword ptr [0x6232e0], rdi ; pop rbp ; ret
0x0000000000403582 : mov qword ptr [rbp - 0x10], rdx ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004039cf : mov qword ptr [rbp - 8], rax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402414 : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000041b218 : mov qword ptr [rcx + 0x28], rax ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041bc3d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403b99 : mov qword ptr [rdi + 0x28], 0 ; pop rbp ; ret
0x000000000041d8ba : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004122da : mov r9d, 0x2dc80132 ; ret
0x000000000041e7ba : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041b632 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041b9f4 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000403586 : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000041eab2 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041b9ac : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041bd0e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000041d8b8 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041e89c : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041dd7e : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041b7e5 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000402418 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402405 : mov rax, rsi ; pop rbp ; ret
0x000000000040182a : mov rbp, rsp ; call rax
0x0000000000401790 : mov rbp, rsp ; ja 0x40179d ; pop rbp ; ret
0x0000000000401d05 : mov rcx, qword ptr [rax*8 + 0x420290] ; jmp rcx
0x000000000041bdd1 : mov rcx, qword ptr [rax*8 + 0x420f10] ; jmp rcx
0x000000000041c0f5 : mov rcx, qword ptr [rax*8 + 0x420f58] ; jmp rcx
0x000000000041dead : mov rcx, qword ptr [rax*8 + 0x421418] ; jmp rcx
0x00000000004017df : mov rsi, rax ; mov edi, 0x623280 ; jmp rdx
0x000000000040ba56 : mov word ptr [r9 - 0x7629d63a], cs ; ret 0xca29
0x000000000040b6e6 : mov word ptr [rbp + 0x21], es ; rol byte ptr [rbp + 9], 1 ; ret
0x000000000040b6b4 : mov word ptr [rbp - 0x77], es ; ret
0x000000000040ba57 : mov word ptr [rcx - 0x7629d63a], cs ; ret 0xca29
0x0000000000422654 : mov word ptr [rdx], cs ; add byte ptr [rax], al ; cwde ; ret
0x0000000000406c45 : mov word ptr [rsi + 0x1446e74], ss ; ret 0xea81
0x00000000004165e0 : mov word ptr [rsi], ss ; or al, byte ptr [rbp + 0x21] ; fld dword ptr [rbp + 9] ; ret 0x944
0x00000000004219bc : movabs al, byte ptr [0x2000000b80ffffc1] ; ret 0xffff
0x0000000000406c55 : movabs al, byte ptr [0x89d629c68900420d] ; ret 0xca29
0x00000000004170fc : movabs al, byte ptr [0x944d0214577b20d] ; ret
0x00000000004151fc : movabs al, byte ptr [0x945d02145a62e2e] ; ret
0x00000000004219dc : movabs al, byte ptr [0xe000000c00ffffc2] ; ret 0xffff
0x00000000004219f4 : movabs al, byte ptr [0xe000000c60ffffc3] ; ret
0x0000000000418e31 : movabs byte ptr [0x945d02145347ec9], al ; ret
0x000000000040e615 : movabs dword ptr [0x8945ca21443bc0a3], eax ; ret
0x000000000040e6d9 : movabs dword ptr [0x945d021456657b6], eax ; ret
0x0000000000418197 : movabs eax, dword ptr [0x8945ca2144e822b0] ; ret
0x0000000000404e33 : movabs eax, dword ptr [0x945d02145613583] ; ret
0x0000000000405e95 : movsb byte ptr [rdi], byte ptr [rsi] ; fadd qword ptr [rbp + 0x21] ; rol byte ptr [rbp + 9], 1 ; ret
0x0000000000405e63 : movsb byte ptr [rdi], byte ptr [rsi] ; fadd qword ptr [rbp - 0x77] ; ret
0x0000000000405e93 : movsb byte ptr [rdi], byte ptr gs:[rsi] ; fadd qword ptr [rbp + 0x21] ; rol byte ptr [rbp + 9], 1 ; ret
0x0000000000405e61 : movsb byte ptr [rdi], byte ptr gs:[rsi] ; fadd qword ptr [rbp - 0x77] ; ret
0x000000000041a288 : movsd dword ptr [rdi], dword ptr [rsi] ; jmp qword ptr [rdx]
0x0000000000403515 : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402e85 : movzx eax, al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000403440 : movzx eax, al ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041fc7b : movzx eax, al ; pop rbp ; ret
0x0000000000401d09 : nop ; add al, byte ptr [rdx] ; jmp rcx
0x0000000000420238 : nop dword ptr [rax + rax] ; ret
0x0000000000420e12 : or ah, byte ptr [rbp - 0x45] ; or ch, byte ptr [rdx + 0x76] ; leave ; ret 0x8581
0x00000000004219f9 : or al, 0 ; add al, ah ; ret
0x00000000004219e1 : or al, 0 ; add al, ah ; ret 0xffff
0x000000000041c45d : or al, 0x18 ; ret 0x6451
0x0000000000401fc9 : or al, 0x25 ; ret
0x0000000000402c52 : or al, 0x42 ; add byte ptr [rax - 0x77], cl ; ret 0xa3e8
0x0000000000401d07 : or al, 0xffffffffffffffc5 ; nop ; add al, byte ptr [rdx] ; jmp rcx
0x000000000041c0f7 : or al, 0xffffffffffffffc5 ; pop rax ; cmovb eax, dword ptr [rax] ; jmp rcx
0x0000000000407e3d : or al, 0xffffffffffffffde ; mov dword ptr [rbp + 0x21], eax ; rol byte ptr [rbp + 9], 1 ; ret
0x0000000000407e0b : or al, 0xffffffffffffffde ; mov dword ptr [rbp - 0x77], eax ; ret
0x00000000004226b5 : or al, byte ptr [rax] ; add al, cl ; ret
0x0000000000422615 : or al, byte ptr [rax] ; add byte ptr [rax], cl ; ret 0xffff
0x00000000004165e2 : or al, byte ptr [rbp + 0x21] ; fld dword ptr [rbp + 9] ; ret 0x944
0x000000000041d3c8 : or al, ch ; ret 0xfe3f
0x00000000004219c0 : or byte ptr [rbx], 0 ; add byte ptr [rax], ah ; ret 0xffff
0x0000000000403500 : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000420e15 : or ch, byte ptr [rdx + 0x76] ; leave ; ret 0x8581
0x000000000040e331 : or dword ptr [rbp + 0x21], eax ; fld dword ptr [rbp + 9] ; ret 0x944
0x000000000040d8f2 : or dword ptr [rsi - 0x2c], ecx ; ret
0x000000000040d265 : or dword ptr [rsi], edx ; fisub word ptr [rdx - 0x76ba04df] ; ret 0x8141
0x00000000004170cb : or eax, 0x894477b2 ; ret
0x0000000000403d27 : or eax, 0x945c721 ; ret
0x00000000004226d5 : or eax, dword ptr [rax] ; add al, ch ; ret
0x00000000004219c1 : or eax, dword ptr [rax] ; add byte ptr [rax], ah ; ret 0xffff
0x000000000041daa1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040604b : or eax, dword ptr [rbp + 0x21] ; fld dword ptr [rbp + 9] ; ret 0x944
0x000000000040a39e : or eax, dword ptr [rbp + 0x21] ; rol byte ptr [rbp + 9], 1 ; ret
0x000000000040a36c : or eax, dword ptr [rbp - 0x77] ; ret
0x000000000040873a : or ebx, ebp ; cmp al, byte ptr [rbp + 0x21] ; rol byte ptr [rbp + 9], 1 ; ret
0x0000000000408708 : or ebx, ebp ; cmp al, byte ptr [rbp - 0x77] ; ret
0x0000000000402c51 : or ecx, dword ptr [rdx + rax*2] ; add byte ptr [rax - 0x77], cl ; ret 0xa3e8
0x0000000000411477 : or edx, dword ptr [rcx] ; call 0xffffffffc3ca58f6
0x0000000000411476 : or edx, dword ptr [rcx] ; call 0xffffffffc3ca58f7
0x0000000000422614 : or r8b, byte ptr [rax] ; add byte ptr [rax], cl ; ret 0xffff
0x0000000000409fd4 : out -0x11, al ; ret 0x44f1
0x0000000000410974 : out -0x19, al ; sbb al, -0x19 ; ret
0x000000000041098b : out -0x19, eax ; sbb al, -0x19 ; ret
0x000000000040d3ca : out -0x28, eax ; sub al, byte ptr [rbp + 0x21] ; rol byte ptr [rbp + 9], 1 ; ret
0x000000000040d398 : out -0x28, eax ; sub al, byte ptr [rbp - 0x77] ; ret
0x000000000040c383 : out -0x50, al ; ret
0x000000000040bcfc : out -0x76, al ; sub al, -1 ; ret
0x0000000000415faa : out -0x78, al ; ret
0x0000000000421b55 : out -1, eax ; jmp rax
0x0000000000407713 : out 0x11, al ; sti ; ret
0x000000000040fc42 : out 0x29, al ; xchg eax, ecx ; ret
0x000000000040e29c : out 0x51, al ; out dx, al ; ret
0x000000000040aa63 : out 0x62, eax ; push rcx ; ret
0x000000000040e288 : out dx, al ; ret
0x0000000000403568 : out dx, eax ; popfq ; adc cl, byte ptr [rax + 0x29] ; ret 0x8148
0x000000000040357c : out dx, eax ; popfq ; adc cl, byte ptr [rax + 1] ; ret 0x8948
0x0000000000409fbf : out dx, eax ; ret 0x44f1
0x0000000000409ff1 : out dx, eax ; ret 0x45f1
0x000000000040f448 : outsb dx, byte ptr [rsi] ; add eax, 0x21452944 ; rol byte ptr [rbp + 9], 1 ; ret
0x000000000040f416 : outsb dx, byte ptr [rsi] ; add eax, 0x89452944 ; ret
0x0000000000403d25 : outsb dx, byte ptr [rsi] ; and cl, byte ptr [rip + 0x945c721] ; ret
0x000000000040e1b1 : outsb dx, byte ptr [rsi] ; mov esp, 0x21452024 ; rol byte ptr [rbp + 9], 1 ; ret
0x000000000040e17f : outsb dx, byte ptr [rsi] ; mov esp, 0x89452024 ; ret
0x000000000042022c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041d341 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042022e : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004043f9 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000420230 : pop r14 ; pop r15 ; ret
0x0000000000403f12 : pop r14 ; pop rbp ; ret
0x00000000004043fb : pop r15 ; pop rbp ; ret
0x0000000000420232 : pop r15 ; ret
0x000000000041c0f9 : pop rax ; cmovb eax, dword ptr [rax] ; jmp rcx
0x0000000000401802 : pop rbp ; mov byte ptr [rip + 0x221aae], 1 ; ret
0x00000000004017a1 : pop rbp ; mov edi, 0x623280 ; jmp rax
0x00000000004017de : pop rbp ; mov rsi, rax ; mov edi, 0x623280 ; jmp rdx
0x000000000042022b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000042022f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401795 : pop rbp ; ret
0x0000000000414705 : pop rbp ; test eax, 0x1446889 ; ret 0xea81
0x000000000041d340 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004043f8 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403f11 : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000403d90 : pop rbx ; pop rbp ; ret
0x000000000041e4f1 : pop rbx ; ret
0x0000000000420d90 : pop rbx ; ret 0x3956
0x000000000041a0bb : pop rdi ; add eax, 0x81ca012c ; ret 0x5f9a
0x00000000004043fc : pop rdi ; pop rbp ; ret
0x0000000000420233 : pop rdi ; ret
0x0000000000408079 : pop rdi ; sub edi, ebx ; sub dword ptr [rbp + 0x21], eax ; fld dword ptr [rbp + 9] ; ret 0x944
0x000000000041a287 : pop rsi ; movsd dword ptr [rdi], dword ptr [rsi] ; jmp qword ptr [rdx]
0x00000000004043fa : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000420231 : pop rsi ; pop r15 ; ret
0x0000000000403f13 : pop rsi ; pop rbp ; ret
0x0000000000415848 : pop rsi ; std ; push rdx ; adc al, byte ptr [rbp + 0x21] ; rol byte ptr [rbp + 9], 1 ; ret
0x0000000000415816 : pop rsi ; std ; push rdx ; adc al, byte ptr [rbp - 0x77] ; ret
0x000000000042022d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041d342 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004074be : pop rsp ; ret
0x0000000000403569 : popfq ; adc cl, byte ptr [rax + 0x29] ; ret 0x8148
0x000000000040357d : popfq ; adc cl, byte ptr [rax + 1] ; ret 0x8948
0x000000000040fb95 : push -0x76ba5b4b ; ret
0x0000000000407b25 : push -0x76bb30a7 ; ret
0x0000000000412d8d : push -0x7e000001 ; ret 0x637f
0x000000000040fbc7 : push 0x2145a4b5 ; rol byte ptr [rbp + 9], 1 ; ret
0x0000000000420e16 : push 0x76 ; leave ; ret 0x8581
0x0000000000401fc5 : push qword ptr [rax + 0x250c8a01] ; ret
0x0000000000421b14 : push rax ; in eax, -1 ; jmp rax
0x000000000041d83e : push rax ; pop rbp ; ret
0x00000000004219cc : push rax ; ret 0xffff
0x000000000041ae14 : push rbp ; call 0x31042f66
0x000000000041af27 : push rbp ; call 0x31043079
0x000000000041b1e9 : push rbp ; call 0x3104333b
0x0000000000401824 : push rbp ; mov edi, 0x622e20 ; mov rbp, rsp ; call rax
0x000000000041ad29 : push rbp ; ror byte ptr [rbx - 0x167ee3b6], 1 ; ret 0xf2b9
0x000000000041f8d9 : push rbx ; sbb eax, 0x8d48fffe ; xor al, 0x25 ; ret
0x0000000000406227 : push rcx ; mov edi, 0x2145bc26 ; rol byte ptr [rbp + 9], 1 ; ret
0x00000000004061f5 : push rcx ; mov edi, 0x8945bc26 ; ret
0x000000000040e287 : push rcx ; out dx, al ; ret
0x000000000040aa65 : push rcx ; ret
0x000000000040e330 : push rdi ; or dword ptr [rbp + 0x21], eax ; fld dword ptr [rbp + 9] ; ret 0x944
0x000000000041584a : push rdx ; adc al, byte ptr [rbp + 0x21] ; rol byte ptr [rbp + 9], 1 ; ret
0x0000000000415818 : push rdx ; adc al, byte ptr [rbp - 0x77] ; ret
0x0000000000407c63 : push rdx ; sub eax, 0x21454219 ; fld dword ptr [rbp + 9] ; ret 0x944
0x0000000000401f83 : push rsi ; add al, 0x25 ; ret 0x6232
0x0000000000403566 : push rsi ; mov ch, bh ; popfq ; adc cl, byte ptr [rax + 0x29] ; ret 0x8148
0x000000000040357a : push rsi ; mov ch, bh ; popfq ; adc cl, byte ptr [rax + 1] ; ret 0x8948
0x000000000040fb94 : push rsi ; push -0x76ba5b4b ; ret
0x000000000040fbc6 : push rsi ; push 0x2145a4b5 ; rol byte ptr [rbp + 9], 1 ; ret
0x0000000000416ef7 : pushfq ; mov byte ptr [rdx], cl ; sub al, byte ptr [rbp + 0x21] ; rol byte ptr [rbp + 9], 1 ; ret
0x0000000000416ec5 : pushfq ; mov byte ptr [rdx], cl ; sub al, byte ptr [rbp - 0x77] ; ret
0x0000000000421b50 : rcl byte ptr [rcx], 0 ; add al, dh ; out -1, eax ; jmp rax
0x00000000004105a2 : rcl byte ptr [rip + 0x45d02145], 9 ; ret
0x0000000000405e60 : repne movsb byte ptr [rdi], byte ptr gs:[rsi] ; fadd qword ptr [rbp - 0x77] ; ret
0x0000000000401361 : ret
0x000000000041fb42 : ret 0
0x0000000000419955 : ret 0x112f
0x0000000000416011 : ret 0x121a
0x000000000040a76a : ret 0x130
0x000000000041fb56 : ret 0x148
0x0000000000404b89 : ret 0x14e7
0x0000000000415a74 : ret 0x1630
0x0000000000404bc5 : ret 0x181b
0x0000000000404f79 : ret 0x1a1
0x000000000040f228 : ret 0x1a63
0x000000000041d4de : ret 0x1b2
0x000000000041a35b : ret 0x1b4d
0x0000000000409f08 : ret 0x1b6b
0x0000000000419082 : ret 0x1b7
0x0000000000406f1e : ret 0x1ce4
0x000000000040e6f7 : ret 0x211b
0x0000000000409c64 : ret 0x2141
0x0000000000409d55 : ret 0x2144
0x0000000000404b3a : ret 0x2145
0x000000000041b09e : ret 0x2148
0x00000000004064c5 : ret 0x2204
0x0000000000401722 : ret 0x221a
0x0000000000401522 : ret 0x221b
0x0000000000418107 : ret 0x2339
0x0000000000404f4c : ret 0x23c1
0x0000000000404f2e : ret 0x2437
0x000000000040df40 : ret 0x255a
0x000000000040f5b0 : ret 0x2662
0x000000000040923a : ret 0x26b8
0x0000000000415a8a : ret 0x281
0x00000000004073b5 : ret 0x2927
0x00000000004159ca : ret 0x292d
0x00000000004057c1 : ret 0x2944
0x0000000000402627 : ret 0x2948
0x000000000041c869 : ret 0x294c
0x000000000041c885 : ret 0x294d
0x000000000041045c : ret 0x2d2d
0x0000000000411664 : ret 0x2e58
0x00000000004070a2 : ret 0x2fda
0x0000000000404015 : ret 0x30
0x0000000000408c4d : ret 0x3144
0x0000000000403ca7 : ret 0x3145
0x0000000000405ff7 : ret 0x34ed
0x00000000004178ac : ret 0x3633
0x000000000040321b : ret 0x3948
0x0000000000420d91 : ret 0x3956
0x000000000040ee02 : ret 0x399
0x0000000000410d34 : ret 0x3ed2
0x000000000040cad8 : ret 0x3f2b
0x0000000000402090 : ret 0x3f55
0x000000000040f5a3 : ret 0x3fcf
0x000000000041b1f4 : ret 0x40
0x0000000000421151 : ret 0x41
0x000000000040e70a : ret 0x411b
0x000000000041a7c8 : ret 0x41dd
0x00000000004162f8 : ret 0x41f6
0x0000000000403570 : ret 0x4240
0x000000000040b8c2 : ret 0x4425
0x00000000004084d8 : ret 0x44a9
0x000000000041a7de : ret 0x44dd
0x0000000000409fc1 : ret 0x44f1
0x0000000000416302 : ret 0x44f6
0x000000000040b8b8 : ret 0x4525
0x000000000040ab3a : ret 0x455b
0x000000000041a7d2 : ret 0x45dd
0x0000000000409ff3 : ret 0x45f1
0x0000000000407088 : ret 0x48b
0x00000000004081fc : ret 0x4aaa
0x00000000004102aa : ret 0x4b54
0x0000000000402baf : ret 0x4be8
0x0000000000412bc0 : ret 0x4f59
0x000000000041413f : ret 0x4f87
0x00000000004077f8 : ret 0x4fcc
0x0000000000420e2b : ret 0x51a3
0x00000000004060f7 : ret 0x52b
0x00000000004178c2 : ret 0x53bc
0x000000000041a5e0 : ret 0x5531
0x000000000041043c : ret 0x556e
0x000000000041bac4 : ret 0x5589
0x000000000040b45c : ret 0x5cf2
0x000000000040881b : ret 0x5ea9
0x0000000000414d0d : ret 0x5f12
0x000000000041a0c1 : ret 0x5f9a
0x0000000000401d37 : ret 0x6232
0x0000000000412d92 : ret 0x637f
0x000000000041c45f : ret 0x6451
0x000000000040d96b : ret 0x66ad
0x000000000041aec4 : ret 0x66e8
0x00000000004084e9 : ret 0x679a
0x0000000000418b3e : ret 0x68e0
0x00000000004064f6 : ret 0x6c9f
0x0000000000417e7a : ret 0x6e2b
0x0000000000416097 : ret 0x6f1
0x0000000000414d91 : ret 0x70c9
0x0000000000416d4b : ret 0x7267
0x00000000004109e5 : ret 0x778a
0x00000000004094c5 : ret 0x77b4
0x0000000000405727 : ret 0x77c0
0x000000000040b068 : ret 0x7bcc
0x000000000041c89d : ret 0x7de8
0x000000000041b0ab : ret 0x7fe8
0x0000000000403cde : ret 0x8141
0x000000000040356d : ret 0x8148
0x00000000004073dc : ret 0x814f
0x000000000040dae1 : ret 0x8172
0x000000000040e9af : ret 0x81f1
0x000000000041ff9f : ret 0x840
0x0000000000410d49 : ret 0x844f
0x0000000000420e1a : ret 0x8581
0x0000000000402a49 : ret 0x8840
0x000000000041de69 : ret 0x8844
0x000000000040ce72 : ret 0x88db
0x000000000040e6ef : ret 0x891b
0x0000000000409c4e : ret 0x8945
0x0000000000403581 : ret 0x8948
0x000000000041c888 : ret 0x8949
0x0000000000404f81 : ret 0x89a1
0x000000000041ca1c : ret 0x89a5
0x0000000000405ea7 : ret 0x8a66
0x0000000000402719 : ret 0x8b48
0x000000000041908a : ret 0x8bb7
0x0000000000413ba0 : ret 0x8cd5
0x000000000041977e : ret 0x8e21
0x000000000040538a : ret 0x8eee
0x000000000040b883 : ret 0x8f8a
0x000000000040ab47 : ret 0x904a
0x0000000000409a39 : ret 0x9129
0x0000000000417f32 : ret 0x9388
0x000000000041907f : ret 0x93db
0x000000000040483e : ret 0x941
0x0000000000405323 : ret 0x944
0x0000000000406832 : ret 0x945
0x00000000004053b6 : ret 0x9589
0x0000000000406c44 : ret 0x968c
0x000000000040dad8 : ret 0x972
0x0000000000408bce : ret 0x99ae
0x000000000040d94b : ret 0x9cbb
0x0000000000415853 : ret 0x9d65
0x000000000040a565 : ret 0xa1ed
0x000000000040d59a : ret 0xa227
0x000000000040be07 : ret 0xa257
0x0000000000402c57 : ret 0xa3e8
0x0000000000413de2 : ret 0xa46b
0x0000000000415e9a : ret 0xa5d9
0x00000000004088d8 : ret 0xa76
0x00000000004053a8 : ret 0xa8a
0x0000000000414704 : ret 0xa95d
0x0000000000414daf : ret 0xa99
0x0000000000409f1e : ret 0xaf64
0x0000000000401e6e : ret 0xb0
0x0000000000418b20 : ret 0xb380
0x00000000004054bf : ret 0xb58b
0x00000000004088e1 : ret 0xb782
0x0000000000403175 : ret 0xb848
0x000000000041fb49 : ret 0xb849
0x000000000040d0d3 : ret 0xb923
0x000000000040dd50 : ret 0xb9fd
0x000000000041872a : ret 0xba94
0x0000000000404d37 : ret 0xbd8b
0x00000000004155db : ret 0xbdf1
0x0000000000403cad : ret 0xc141
0x00000000004017c5 : ret 0xc148
0x0000000000404b10 : ret 0xc161
0x0000000000407805 : ret 0xc1ad
0x000000000041810d : ret 0xc274
0x0000000000405b9d : ret 0xc281
0x000000000041f8b0 : ret 0xc2f6
0x00000000004129b0 : ret 0xc681
0x0000000000417ccc : ret 0xc781
0x000000000040f3d7 : ret 0xc789
0x000000000041abf3 : ret 0xc7a7
0x0000000000413120 : ret 0xc954
0x000000000041c284 : ret 0xca21
0x0000000000403ef2 : ret 0xca29
0x000000000040ebee : ret 0xca8c
0x0000000000404b73 : ret 0xce11
0x000000000041a98d : ret 0xcecd
0x000000000040e2dd : ret 0xd0ac
0x00000000004057c4 : ret 0xd101
0x00000000004022be : ret 0xd284
0x000000000040d0f0 : ret 0xd2e7
0x0000000000407335 : ret 0xd601
0x00000000004062b5 : ret 0xd609
0x000000000040c74d : ret 0xd6b
0x0000000000404db8 : ret 0xd709
0x000000000040a925 : ret 0xd729
0x0000000000409840 : ret 0xd828
0x0000000000409c58 : ret 0xdf21
0x00000000004152df : ret 0xdfd8
0x0000000000417b56 : ret 0xe0d2
0x0000000000418f24 : ret 0xe137
0x0000000000402488 : ret 0xe280
0x00000000004073d3 : ret 0xe69f
0x00000000004171de : ret 0xe702
0x000000000040fb5b : ret 0xe740
0x000000000040810a : ret 0xe931
0x0000000000408c67 : ret 0xe9f9
0x0000000000404b7a : ret 0xea81
0x0000000000407ce8 : ret 0xec9d
0x0000000000412038 : ret 0xee4d
0x000000000041d12c : ret 0xee8
0x000000000040e138 : ret 0xee81
0x0000000000405b2b : ret 0xee8f
0x0000000000402a5e : ret 0xf180
0x0000000000412b0a : ret 0xf191
0x0000000000416847 : ret 0xf1f1
0x0000000000417cc4 : ret 0xf221
0x000000000041ac13 : ret 0xf225
0x0000000000404a09 : ret 0xf229
0x000000000041f8a3 : ret 0xf280
0x000000000040c287 : ret 0xf281
0x000000000041ad30 : ret 0xf2b9
0x00000000004172a3 : ret 0xf4d0
0x00000000004120c3 : ret 0xf582
0x000000000040a8eb : ret 0xf681
0x0000000000405141 : ret 0xf781
0x00000000004047fe : ret 0xf789
0x0000000000419114 : ret 0xf7b6
0x0000000000402c03 : ret 0xf7e8
0x000000000040e130 : ret 0xfa21
0x000000000040e58b : ret 0xfa23
0x0000000000404a03 : ret 0xfa29
0x0000000000416b71 : ret 0xfd48
0x000000000041f5ba : ret 0xfe1d
0x000000000041d3ca : ret 0xfe3f
0x00000000004064d6 : ret 0xff74
0x00000000004219c5 : ret 0xffff
0x000000000040208a : ret 1
0x000000000041f910 : ret 2
0x0000000000421f74 : ret 4
0x000000000041a2b8 : retf -0x5aa2 ; jmp qword ptr [rdx]
0x000000000041a283 : retf -0x7ebf ; pop rsi ; movsd dword ptr [rdi], dword ptr [rsi] ; jmp qword ptr [rdx]
0x000000000041b47d : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004096c3 : rol byte ptr [rbp + 0x21], cl ; rol byte ptr [rbp + 9], 1 ; ret
0x0000000000404087 : rol byte ptr [rbp + 9], 1 ; ret
0x00000000004055ee : rol byte ptr [rbp + 9], cl ; ret
0x0000000000409691 : rol byte ptr [rbp - 0x77], cl ; ret
0x000000000041bb86 : rol byte ptr [rcx + rcx*4], 1 ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040771a : rol byte ptr [rcx - 0x7f], -0x10 ; adc ebx, edi ; ret
0x0000000000421a24 : rol ch, -1 ; jmp qword ptr [rax]
0x000000000041a7cc : rol dword ptr [rcx - 0x7f], cl ; jrcxz 0x41a7ea ; insb byte ptr [rdi], dx ; ret 0x45dd
0x000000000041e4d0 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000041bd10 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x41bd7b ; ret
0x0000000000421a10 : ror byte ptr [rax + rax], 0 ; add ah, -1 ; jmp rax
0x00000000004017cc : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4017db ; pop rbp ; ret
0x000000000041e4d1 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x000000000041c85d : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x000000000041c866 : ror byte ptr [rax - 0x77], 1 ; ret 0x294c
0x000000000041bd11 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x41bd7a ; ret
0x0000000000402e87 : ror byte ptr [rax - 0x7d], -0x3c ; pop rbp ; ret
0x0000000000402d13 : ror byte ptr [rax - 0x7f], -0x3c ; xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041ad2a : ror byte ptr [rbx - 0x167ee3b6], 1 ; ret 0xf2b9
0x000000000040f063 : ror byte ptr [rcx - 0x7629d63a], 1 ; ret 0x2944
0x0000000000421a50 : ror byte ptr [rip - 0x30a00000], -1 ; jmp rax
0x0000000000411449 : ror dword ptr [rbp + rax*2 + 0x945d021], 1 ; ret
0x0000000000404f78 : sahf ; ret 0x1a1
0x0000000000404f80 : sahf ; ret 0x89a1
0x0000000000420d8a : sal byte ptr [rbp - 0x164a245b], 0x5b ; ret 0x3956
0x0000000000421a65 : sar bh, 1 ; jmp qword ptr [rax]
0x0000000000421a95 : sar bh, cl ; jmp rax
0x00000000004017ce : sar eax, 1 ; jne 0x4017d9 ; pop rbp ; ret
0x00000000004219bd : sar edi, -1 ; or byte ptr [rbx], 0 ; add byte ptr [rax], ah ; ret 0xffff
0x0000000000421aa5 : sar edi, cl ; jmp qword ptr [rax]
0x00000000004017cd : sar rax, 1 ; jne 0x4017da ; pop rbp ; ret
0x0000000000401806 : sbb ah, byte ptr [rdx] ; add byte ptr [rcx], al ; ret
0x0000000000410976 : sbb al, -0x19 ; ret
0x000000000040d14e : sbb al, -0x33 ; lea eax, dword ptr [rbp + 0x21] ; rol byte ptr [rbp + 9], 1 ; ret
0x000000000040d11c : sbb al, -0x33 ; lea eax, dword ptr [rbp - 0x77] ; ret
0x0000000000421dd1 : sbb al, -2 ; call qword ptr [rsi]
0x00000000004226b0 : sbb al, 0 ; add byte ptr [rax], al ; in al, dx ; or al, byte ptr [rax] ; add al, cl ; ret
0x0000000000421be4 : sbb al, 0 ; add byte ptr [rax], al ; mov bh, dh ; std ; jmp rax
0x0000000000422650 : sbb al, 0 ; add byte ptr [rax], al ; mov word ptr [rdx], cs ; add byte ptr [rax], al ; cwde ; ret
0x0000000000422610 : sbb al, 0 ; add byte ptr [rax], al ; or r8b, byte ptr [rax] ; add byte ptr [rax], cl ; ret 0xffff
0x0000000000411b24 : sbb al, 0xe ; add byte ptr [rcx - 0x7628d639], cl ; ret 0xf229
0x000000000040abb5 : sbb byte ptr [rbp + 0x21], al ; rol byte ptr [rbp + 9], 1 ; ret
0x000000000040ab83 : sbb byte ptr [rbp - 0x77], al ; ret
0x00000000004044bd : sbb byte ptr [rcx], ah ; jg 0x40453a ; xchg eax, ebx ; ret
0x00000000004044cd : sbb byte ptr [rcx], ah ; jg 0x40454a ; xchg eax, ebx ; ret
0x0000000000414c08 : sbb dword ptr [rbp + 0x21], eax ; rol byte ptr [rbp + 9], 1 ; ret
0x0000000000414bd6 : sbb dword ptr [rbp - 0x77], eax ; ret
0x0000000000416369 : sbb dword ptr [rsp + rax*2 - 0x76bb35df], esp ; ret
0x0000000000404830 : sbb eax, 0x8945c721 ; ret 0x8141
0x000000000041f8da : sbb eax, 0x8d48fffe ; xor al, 0x25 ; ret
0x0000000000414d55 : sbb edi, eax ; enter 0x45fc, 0x21 ; fld dword ptr [rbp + 9] ; ret 0x944
0x00000000004162f6 : scasb al, byte ptr [rdi] ; ret 0x41f6
0x0000000000416300 : scasb al, byte ptr [rdi] ; ret 0x44f6
0x0000000000401805 : scasb al, byte ptr [rdi] ; sbb ah, byte ptr [rdx] ; add byte ptr [rcx], al ; ret
0x0000000000411b16 : shl dword ptr [rdi + 0x44], 1 ; ret 0xc281
0x00000000004217de : std ; call qword ptr [rax]
0x00000000004217e6 : std ; jmp rax
0x0000000000421c52 : std ; jmp rdx
0x0000000000415849 : std ; push rdx ; adc al, byte ptr [rbp + 0x21] ; rol byte ptr [rbp + 9], 1 ; ret
0x0000000000415817 : std ; push rdx ; adc al, byte ptr [rbp - 0x77] ; ret
0x0000000000421c51 : std ; std ; jmp rdx
0x000000000041fc78 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000407715 : sti ; ret
0x0000000000420d89 : sti ; sal byte ptr [rbp - 0x164a245b], 0x5b ; ret 0x3956
0x00000000004217dd : sti ; std ; call qword ptr [rax]
0x000000000040807b : sti ; sub dword ptr [rbp + 0x21], eax ; fld dword ptr [rbp + 9] ; ret 0x944
0x00000000004044bc : stosd dword ptr [rdi], eax ; sbb byte ptr [rcx], ah ; jg 0x40453b ; xchg eax, ebx ; ret
0x00000000004044cc : stosd dword ptr [rdi], eax ; sbb byte ptr [rcx], ah ; jg 0x40454b ; xchg eax, ebx ; ret
0x000000000040bcfe : sub al, -1 ; ret
0x000000000040d3cc : sub al, byte ptr [rbp + 0x21] ; rol byte ptr [rbp + 9], 1 ; ret
0x000000000040d39a : sub al, byte ptr [rbp - 0x77] ; ret
0x000000000041af24 : sub byte ptr [rax - 0x75], cl ; push rbp ; call 0x3104307c
0x00000000004065a9 : sub byte ptr [rbp + 0x21], al ; rol byte ptr [rbp + 9], 1 ; ret
0x0000000000406577 : sub byte ptr [rbp - 0x77], al ; ret
0x00000000004043f7 : sub byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000403d8f : sub byte ptr [rbx + 0x5d], bl ; ret
0x0000000000421b8c : sub dl, -1 ; jmp rax
0x000000000040807c : sub dword ptr [rbp + 0x21], eax ; fld dword ptr [rbp + 9] ; ret 0x944
0x000000000040f44b : sub dword ptr [rbp + 0x21], eax ; rol byte ptr [rbp + 9], 1 ; ret
0x000000000040f44a : sub dword ptr [rbp + 0x21], r8d ; rol byte ptr [rbp + 9], 1 ; ret
0x000000000040f419 : sub dword ptr [rbp - 0x77], eax ; ret
0x000000000040f418 : sub dword ptr [rbp - 0x77], r8d ; ret
0x000000000041e4ef : sub dword ptr [rdx], 0x5b ; ret
0x0000000000417d7b : sub dword ptr [rip - 0x76bb03d4], eax ; ret
0x0000000000407c64 : sub eax, 0x21454219 ; fld dword ptr [rbp + 9] ; ret 0x944
0x0000000000409db1 : sub eax, 0x89448664 ; ret
0x0000000000402400 : sub eax, edx ; add rsi, rax ; mov rax, rsi ; pop rbp ; ret
0x000000000040807a : sub edi, ebx ; sub dword ptr [rbp + 0x21], eax ; fld dword ptr [rbp + 9] ; ret 0x944
0x000000000042026d : sub esp, 8 ; add rsp, 8 ; ret
0x000000000042026c : sub rsp, 8 ; add rsp, 8 ; ret
0x00000000004060cc : test byte ptr [r9 - 0x7629d63a], r9b ; ret 0xca29
0x000000000042023a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004060cd : test byte ptr [rcx - 0x7629d63a], cl ; ret 0xca29
0x000000000041910d : test dword ptr [rsi - 0x2f], 0x81ca0144 ; ret 0xf7b6
0x0000000000414706 : test eax, 0x1446889 ; ret 0xea81
0x000000000040ba99 : test eax, 0x2dc801cb ; ret
0x000000000041deb0 : vunpcklps xmm8, xmm12, xmmword ptr [rdx] ; jmp rcx
0x0000000000401d83 : wait ; add byte ptr [rax], al ; add dh, al ; add al, 0x25 ; ret
0x000000000040798b : xchg dword ptr [rax], esi ; xor byte ptr fs:[rbp + 0x21], al ; rol byte ptr [rbp + 9], 1 ; ret
0x0000000000407959 : xchg dword ptr [rax], esi ; xor byte ptr fs:[rbp - 0x77], al ; ret
0x0000000000412d8c : xchg eax, ebp ; push -0x7e000001 ; ret 0x637f
0x0000000000402a48 : xchg eax, ebp ; ret 0x8840
0x00000000004022bd : xchg eax, ebp ; ret 0xd284
0x00000000004044c1 : xchg eax, ebx ; ret
0x0000000000419081 : xchg eax, ebx ; ret 0x1b7
0x0000000000419089 : xchg eax, ebx ; ret 0x8bb7
0x000000000040fc44 : xchg eax, ecx ; ret
0x0000000000414c05 : xchg eax, esp ; idiv eax ; sbb dword ptr [rbp + 0x21], eax ; rol byte ptr [rbp + 9], 1 ; ret
0x0000000000414bd3 : xchg eax, esp ; idiv eax ; sbb dword ptr [rbp - 0x77], eax ; ret
0x000000000041dd72 : xchg eax, esp ; ret 0xd284
0x0000000000402487 : xchg eax, esp ; ret 0xe280
0x0000000000401d30 : xor ah, byte ptr [rdx] ; add dh, al ; add al, 0x25 ; ret 0x6232
0x0000000000401d59 : xor ah, byte ptr [rdx] ; add esi, eax ; add al, 0x25 ; ret 0x6232
0x000000000041b92c : xor ah, byte ptr [rdx] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004017a4 : xor ah, byte ptr [rdx] ; jmp rax
0x00000000004017e4 : xor ah, byte ptr [rdx] ; jmp rdx
0x00000000004039f1 : xor ah, byte ptr [rdx] ; pop rbp ; ret
0x0000000000402bfb : xor al, 0x25 ; mov dl, 0xb ; add byte ptr [rax - 0x77], cl ; ret 0xf7e8
0x0000000000402c4f : xor al, 0x25 ; or ecx, dword ptr [rdx + rax*2] ; add byte ptr [rax - 0x77], cl ; ret 0xa3e8
0x000000000041f8df : xor al, 0x25 ; ret
0x0000000000413bb0 : xor al, 0xe ; add byte ptr [rcx - 0x7628d639], cl ; ret 0xf229
0x000000000040798e : xor byte ptr [rbp + 0x21], al ; rol byte ptr [rbp + 9], 1 ; ret
0x000000000040795c : xor byte ptr [rbp - 0x77], al ; ret
0x0000000000402d17 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000415740 : xor byte ptr [rip + 0x2145fe9a], al ; rol byte ptr [rbp + 9], 1 ; ret
0x000000000041570e : xor byte ptr [rip - 0x76ba0166], al ; ret
0x000000000040dfcc : xor byte ptr [rsp + rax*2 - 0x76ba35df], ah ; ret
0x000000000040798d : xor byte ptr fs:[rbp + 0x21], al ; rol byte ptr [rbp + 9], 1 ; ret
0x000000000040795b : xor byte ptr fs:[rbp - 0x77], al ; ret
0x00000000004171ce : xor dword ptr [rdi + 0x214498ff], esp ; ret
0x000000000041d837 : xor eax, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x0000000000419dfd : xor eax, dword ptr [ebp + 0x21] ; fld dword ptr [rbp + 9] ; ret 0x944
0x0000000000419dfe : xor eax, dword ptr [rbp + 0x21] ; fld dword ptr [rbp + 9] ; ret 0x944
0x000000000041bb85 : xor eax, edx ; mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
