0x000000000040129f : add bl, dh ; ret
0x0000000000400aca : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; ret 0x2948
0x000000000040129d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000400ac8 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; ret 0x2948
0x000000000040129b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040129c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000401077 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x458b
0x00000000004006e3 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000400799 : add byte ptr [rax], al ; jmp 0x4006f9
0x000000000040120e : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040129e : add byte ptr [rax], al ; ret
0x0000000000401120 : add byte ptr [rcx + 0x1b382bc2], al ; jb 0x4010b1 ; ret 1
0x0000000000400898 : add byte ptr [rcx], al ; ret
0x0000000000401079 : add byte ptr [rcx], ch ; ret 0x458b
0x0000000000400894 : add eax, 0x201816 ; add ebx, esi ; ret
0x000000000040085b : add eax, edx ; sar rax, 1 ; jne 0x40086c ; pop rbp ; ret
0x0000000000400899 : add ebx, esi ; ret
0x0000000000400bdc : add esp, 0x20 ; pop rbp ; ret
0x0000000000401154 : add esp, 0x40 ; pop rbp ; ret
0x0000000000400f66 : add esp, 0x50 ; pop rbp ; ret
0x0000000000400ba1 : add esp, 0x70 ; pop rbp ; ret
0x00000000004006e6 : add esp, 8 ; ret
0x000000000040085a : add rax, rdx ; sar rax, 1 ; jne 0x40086d ; pop rbp ; ret
0x0000000000400bdb : add rsp, 0x20 ; pop rbp ; ret
0x0000000000401153 : add rsp, 0x40 ; pop rbp ; ret
0x0000000000400f65 : add rsp, 0x50 ; pop rbp ; ret
0x0000000000400ba0 : add rsp, 0x70 ; pop rbp ; ret
0x00000000004006e5 : add rsp, 8 ; ret
0x0000000000400834 : and byte ptr [rax], ah ; jmp rax
0x0000000000400874 : and byte ptr [rax], ah ; jmp rdx
0x0000000000400897 : and byte ptr [rax], al ; add ebx, esi ; ret
0x00000000004011c2 : call 0xffffffffc2c9d254
0x0000000000401279 : call qword ptr [r12 + rbx*8]
0x000000000040127a : call qword ptr [rsp + rbx*8]
0x00000000004008bd : call rax
0x00000000004014bb : call rsi
0x000000000040143b : call rsp
0x000000000040085f : clc ; jne 0x400868 ; pop rbp ; ret
0x0000000000400b9f : cld ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000401124 : cmp byte ptr [rbx], bl ; jb 0x4010ad ; ret 1
0x000000000040081d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x400830 ; pop rbp ; ret
0x0000000000400833 : cwde ; and byte ptr [rax], ah ; jmp rax
0x0000000000400873 : cwde ; and byte ptr [rax], ah ; jmp rdx
0x0000000000400faf : fcom st(0), st(3) ; loop 0x400f38 ; ret 0xbb53
0x000000000040127c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000400830 : hlt ; pop rbp ; mov edi, 0x602098 ; jmp rax
0x0000000000400823 : ja 0x40082a ; pop rbp ; ret
0x0000000000401126 : jb 0x4010ab ; ret 1
0x000000000040082f : je 0x40082d ; pop rbp ; mov edi, 0x602098 ; jmp rax
0x000000000040079b : jmp 0x4006f7
0x0000000000400837 : jmp rax
0x0000000000400877 : jmp rdx
0x0000000000400860 : jne 0x400867 ; pop rbp ; ret
0x0000000000400ba3 : jo 0x400c04 ; ret
0x0000000000400fb1 : loop 0x400f36 ; ret 0xbb53
0x0000000000400893 : mov byte ptr [rip + 0x201816], 1 ; ret
0x0000000000401150 : mov dword ptr [rbp - 0x40], eax ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000400f62 : mov dword ptr [rbp - 0x48], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000400c57 : mov dword ptr [rdx + 0x10], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000400f64 : mov eax, 0x50c48348 ; pop rbp ; ret
0x0000000000400bd8 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401211 : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000400b9d : mov eax, dword ptr [rbp - 4] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004008bb : mov ebp, esp ; call rax
0x0000000000400821 : mov ebp, esp ; ja 0x40082c ; pop rbp ; ret
0x0000000000400fc1 : mov ebx, 0x634cabba ; ret 0x8148
0x00000000004008b5 : mov edi, 0x601e20 ; mov rbp, rsp ; call rax
0x0000000000400832 : mov edi, 0x602098 ; jmp rax
0x0000000000400872 : mov edi, 0x602098 ; jmp rdx
0x0000000000401277 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000401276 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000400870 : mov esi, eax ; mov edi, 0x602098 ; jmp rdx
0x0000000000400c56 : mov qword ptr [rdx + 0x10], rax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000400f63 : mov r8d, 0x50c48348 ; pop rbp ; ret
0x0000000000400bd7 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401210 : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004008ba : mov rbp, rsp ; call rax
0x0000000000400820 : mov rbp, rsp ; ja 0x40082d ; pop rbp ; ret
0x000000000040086f : mov rsi, rax ; mov edi, 0x602098 ; jmp rdx
0x0000000000401298 : nop dword ptr [rax + rax] ; ret
0x000000000040128c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040128e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000401290 : pop r14 ; pop r15 ; ret
0x0000000000401292 : pop r15 ; ret
0x0000000000400892 : pop rbp ; mov byte ptr [rip + 0x201816], 1 ; ret
0x0000000000400831 : pop rbp ; mov edi, 0x602098 ; jmp rax
0x000000000040086e : pop rbp ; mov rsi, rax ; mov edi, 0x602098 ; jmp rdx
0x000000000040128b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040128f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000400825 : pop rbp ; ret
0x0000000000401293 : pop rdi ; ret
0x0000000000401291 : pop rsi ; pop r15 ; ret
0x000000000040128d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000400f68 : push rax ; pop rbp ; ret
0x0000000000400fae : push rbp ; fcom st(0), st(3) ; loop 0x400f39 ; ret 0xbb53
0x00000000004008b4 : push rbp ; mov edi, 0x601e20 ; mov rbp, rsp ; call rax
0x0000000000400fc0 : push rbx ; mov ebx, 0x634cabba ; ret 0x8148
0x00000000004006e9 : ret
0x00000000004007a2 : ret 0x2018
0x0000000000400ad1 : ret 0x2948
0x0000000000401122 : ret 0x382b
0x000000000040107b : ret 0x458b
0x0000000000400fc6 : ret 0x8148
0x00000000004011c6 : ret 0x8948
0x0000000000400d1f : ret 0x8b48
0x0000000000400b7f : ret 0xb0
0x0000000000400fb3 : ret 0xbb53
0x0000000000400855 : ret 0xc148
0x0000000000400f46 : ret 0xc2f6
0x0000000000400957 : ret 0xca21
0x000000000040096f : ret 0xca29
0x0000000000401085 : ret 0xe5e8
0x0000000000401128 : ret 1
0x0000000000400acd : ror byte ptr [r8 - 0x77], 1 ; ret 0x2948
0x0000000000401151 : ror byte ptr [r8 - 0x7d], -0x3c ; pop rbp ; ret
0x000000000040085c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40086b ; pop rbp ; ret
0x0000000000400ace : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000401152 : ror byte ptr [rax - 0x7d], -0x3c ; pop rbp ; ret
0x000000000040082e : sal byte ptr [rsp + rsi*8 + 0x5d], -0x41 ; cwde ; and byte ptr [rax], ah ; jmp rax
0x000000000040085e : sar eax, 1 ; jne 0x400869 ; pop rbp ; ret
0x000000000040085d : sar rax, 1 ; jne 0x40086a ; pop rbp ; ret
0x0000000000400896 : sbb byte ptr [rax], ah ; add byte ptr [rcx], al ; ret
0x0000000000401125 : sbb esi, dword ptr [rdx - 0x7f] ; ret 1
0x0000000000401123 : sub edi, dword ptr [rax] ; sbb esi, dword ptr [rdx - 0x7f] ; ret 1
0x00000000004012a5 : sub esp, 8 ; add rsp, 8 ; ret
0x00000000004012a4 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040129a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
