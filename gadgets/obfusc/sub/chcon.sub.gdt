0x000000000040f498 : adc al, -0x75 ; hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000415255 : adc al, 0 ; add al, bl ; mov bh, bh ; jmp qword ptr [rdi]
0x0000000000414ff5 : adc al, byte ptr [rax] ; add al, bh ; jg 0x415000 ; call qword ptr [rdx]
0x0000000000415015 : adc al, byte ptr [rax] ; add al, bh ; jg 0x415020 ; call qword ptr [rdx]
0x0000000000415035 : adc al, byte ptr [rax] ; add al, bh ; jg 0x415040 ; call qword ptr [rdx]
0x000000000040a9cc : adc al, byte ptr [rcx + 0x4f9] ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x0000000000414131 : adc bh, bh ; jmp rdx
0x000000000040c149 : adc byte ptr [rax], dl ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000414490 : adc byte ptr [rdi], -1 ; jmp qword ptr [rdi]
0x0000000000409c62 : adc dword ptr [rcx - 0xa], eax ; jmp qword ptr [rcx]
0x00000000004051c9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000415115 : adc eax, dword ptr [rax] ; add byte ptr [rax], bh ; test bh, bh ; call rbx
0x0000000000414171 : adc edi, edi ; jmp qword ptr [rdx]
0x0000000000415253 : add ah, dh ; adc al, 0 ; add al, bl ; mov bh, bh ; jmp qword ptr [rdi]
0x0000000000415033 : add ah, dl ; adc al, byte ptr [rax] ; add al, bh ; jg 0x415042 ; call qword ptr [rdx]
0x0000000000413685 : add al, -1 ; call rax
0x000000000040d49a : add al, 0x48 ; add eax, ecx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000413683 : add al, ah ; add al, -1 ; call rax
0x0000000000414ff7 : add al, bh ; jg 0x414ffe ; call qword ptr [rdx]
0x0000000000415017 : add al, bh ; jg 0x41501e ; call qword ptr [rdx]
0x0000000000415037 : add al, bh ; jg 0x41503e ; call qword ptr [rdx]
0x0000000000415257 : add al, bl ; mov bh, bh ; jmp qword ptr [rdi]
0x0000000000414aaf : add al, dh ; xor edi, edi ; call qword ptr [rcx]
0x0000000000413cc3 : add al, dl ; loopne 0x413cca ; jmp rax
0x00000000004119ef : add bl, dh ; ret
0x000000000040bfb7 : add byte ptr [r8], r8b ; add byte ptr [rcx - 0xfff43], al ; jmp qword ptr [rsi]
0x000000000040ccd4 : add byte ptr [rax + 0x29], cl ; ret 0x8948
0x0000000000408f08 : add byte ptr [rax + 1], cl ; ret 0x8b48
0x000000000040290c : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x000000000040d7af : add byte ptr [rax - 0x75], cl ; fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x000000000040542f : add byte ptr [rax - 0x75], cl ; jge 0x4053eb ; call 0x4016e7
0x000000000040678d : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x00000000004022dc : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000041448e : add byte ptr [rax], al ; adc byte ptr [rdi], -1 ; jmp qword ptr [rdi]
0x00000000004119ed : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040ccd2 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8948
0x0000000000408f06 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8b48
0x000000000040290a : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x000000000040d7ad : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x000000000040542d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jge 0x4053ed ; call 0x4016e9
0x00000000004022da : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x00000000004119eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004003b8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004003ba : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004106c8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040de4d : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000409702 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004003bc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000407886 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000402732 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7238b], cl ; ret 0xb0
0x00000000004027d2 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7278b], cl ; ret 0xb0
0x00000000004072ab : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x0000000000407d78 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000040bfb8 : add byte ptr [rax], al ; add byte ptr [rcx - 0xfff43], al ; jmp qword ptr [rsi]
0x0000000000413652 : add byte ptr [rax], al ; add byte ptr [rcx], -1 ; call qword ptr [rax]
0x00000000004081eb : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x000000000040486e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x000000000040a9d0 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x0000000000405ade : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000413982 : add byte ptr [rax], al ; add byte ptr [rsi - 1], bh ; jmp rax
0x000000000040739f : add byte ptr [rax], al ; add cl, ch ; ret
0x000000000040f98c : add byte ptr [rax], al ; add cl, ch ; ret 2
0x0000000000405191 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404ea0 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000409704 : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004016b3 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000413ee6 : add byte ptr [rax], al ; call 0x17413de5
0x0000000000415996 : add byte ptr [rax], al ; call 0xffffffffe341595e
0x0000000000414ff6 : add byte ptr [rax], al ; clc ; jg 0x414fff ; call qword ptr [rdx]
0x0000000000415016 : add byte ptr [rax], al ; clc ; jg 0x41501f ; call qword ptr [rdx]
0x0000000000415036 : add byte ptr [rax], al ; clc ; jg 0x41503f ; call qword ptr [rdx]
0x0000000000415252 : add byte ptr [rax], al ; hlt ; adc al, 0 ; add al, bl ; mov bh, bh ; jmp qword ptr [rdi]
0x0000000000413983 : add byte ptr [rax], al ; jle 0x41398a ; jmp rax
0x00000000004017c9 : add byte ptr [rax], al ; jmp 0x4016c9
0x0000000000413cd2 : add byte ptr [rax], al ; loop 0x413cdb ; jmp qword ptr [rax]
0x0000000000415012 : add byte ptr [rax], al ; mov ah, 0x12 ; add byte ptr [rax], al ; clc ; jg 0x415023 ; call qword ptr [rdx]
0x0000000000414d12 : add byte ptr [rax], al ; mov ah, 0xf ; add byte ptr [rax], al ; sbb byte ptr [rbx - 1], ch ; call qword ptr [rdx]
0x0000000000405b8a : add byte ptr [rax], al ; mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405bfd : add byte ptr [rax], al ; mov eax, edi ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406009 : add byte ptr [rax], al ; mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405e21 : add byte ptr [rax], al ; mov eax, esi ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403762 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040542e : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x50] ; call 0x4016e8
0x0000000000413e06 : add byte ptr [rax], al ; pop rax ; loopne 0x413e0e ; jmp rdx
0x0000000000402d4a : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040662b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000404e60 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000407887 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004139c2 : add byte ptr [rax], al ; push rax ; xchg bh, bh ; jmp rax
0x00000000004003be : add byte ptr [rax], al ; ret
0x0000000000413c92 : add byte ptr [rax], al ; sbb bh, -1 ; jmp qword ptr [rax]
0x0000000000414d16 : add byte ptr [rax], al ; sbb byte ptr [rbx - 1], ch ; call qword ptr [rdx]
0x0000000000413c82 : add byte ptr [rax], al ; sbb dh, -1 ; jmp rax
0x000000000041464e : add byte ptr [rax], al ; sbb dil, dil ; jmp qword ptr [rdi]
0x0000000000413693 : add byte ptr [rax], al ; sbb edi, edi ; call qword ptr [rax]
0x000000000041448a : add byte ptr [rax], al ; sub al, 7 ; add byte ptr [rax], al ; adc byte ptr [rdi], -1 ; jmp qword ptr [rdi]
0x0000000000413ee2 : add byte ptr [rax], al ; test byte ptr [rcx], al ; add byte ptr [rax], al ; call 0x17413de9
0x0000000000414ff2 : add byte ptr [rax], al ; xchg eax, esp ; adc al, byte ptr [rax] ; add al, bh ; jg 0x415003 ; call qword ptr [rdx]
0x00000000004139d3 : add byte ptr [rax], al ; xchg edi, edi ; jmp qword ptr [rax]
0x0000000000415992 : add byte ptr [rax], al ; xor al, 0x1c ; add byte ptr [rax], al ; call 0xffffffffe3415962
0x0000000000415117 : add byte ptr [rax], bh ; test bh, bh ; call rbx
0x0000000000415697 : add byte ptr [rax], ch ; mov cl, -1 ; call qword ptr [rsi]
0x0000000000413c03 : add byte ptr [rax], dl ; sar bh, cl ; jmp rax
0x0000000000405bcf : add byte ptr [rbp + 0x48], dl ; mov ebp, esp ; mov dword ptr [rbp - 4], edi ; pop rbp ; ret
0x0000000000414aab : add byte ptr [rbp + rcx], cl ; add al, dh ; xor edi, edi ; call qword ptr [rcx]
0x000000000040729d : add byte ptr [rbp - 0x77], al ; ret 0x3145
0x0000000000408200 : add byte ptr [rbp - 0x77], al ; ret 0x8141
0x000000000040662c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000404e61 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000407888 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000402734 : add byte ptr [rbx - 0x76b7238b], cl ; ret 0xb0
0x00000000004027d4 : add byte ptr [rbx - 0x76b7278b], cl ; ret 0xb0
0x0000000000413c90 : add byte ptr [rbx], ah ; add byte ptr [rax], al ; sbb bh, -1 ; jmp qword ptr [rax]
0x00000000004072ad : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x0000000000407d7a : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000041188c : add byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x000000000040bfba : add byte ptr [rcx - 0xfff43], al ; jmp qword ptr [rsi]
0x0000000000413654 : add byte ptr [rcx], -1 ; call qword ptr [rax]
0x0000000000401c08 : add byte ptr [rcx], al ; ret
0x000000000041448b : add byte ptr [rdi + rax], ch ; add byte ptr [rax], al ; adc byte ptr [rdi], -1 ; jmp qword ptr [rdi]
0x000000000040f988 : add byte ptr [rdi], cl ; lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x000000000040603a : add byte ptr [rdi], cl ; mov bh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004081ed : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000404870 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x000000000040a9d2 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x0000000000405ae0 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040d30d : add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x0000000000413984 : add byte ptr [rsi - 1], bh ; jmp rax
0x0000000000415993 : add byte ptr [rsp + rbx], dh ; add byte ptr [rax], al ; call 0xffffffffe3415961
0x0000000000402c13 : add byte ptr fs:[rax], al ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x00000000004073a1 : add cl, ch ; ret
0x000000000040f98e : add cl, ch ; ret 2
0x000000000040f252 : add dword ptr [rax + 0xf], eax ; mov dh, -0x39 ; pop rbp ; ret
0x000000000040cdb1 : add dword ptr [rax + 0xf], eax ; mov dh, -0x3a ; pop rbp ; ret
0x0000000000406c69 : add dword ptr [rax - 0x77], ecx ; ret 0x8148
0x000000000040518f : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040662a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000404e5f : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040adcc : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000408642 : add dword ptr [rax], ecx ; ret 0x840
0x000000000040f31b : add dword ptr [rdi + rcx - 0x4a], eax ; ret 0xee81
0x000000000040818f : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040cd32 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004027ea : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040b24d : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000406ff6 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x000000000040739b : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret
0x000000000040be04 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x5588
0x0000000000401c04 : add eax, 0x21472e ; add ebx, esi ; ret
0x000000000040739e : add eax, 0xe9000000 ; ret
0x000000000040f98b : add eax, 0xe9000000 ; ret 2
0x000000000040aa4b : add eax, 0xf000000 ; xchg eax, esp ; ret 0x9588
0x0000000000410636 : add eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040d49c : add eax, ecx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401bcb : add eax, edx ; sar rax, 1 ; jne 0x401bdc ; pop rbp ; ret
0x0000000000401c09 : add ebx, esi ; ret
0x0000000000413655 : add edi, edi ; call qword ptr [rax]
0x0000000000401e2b : add esp, 0x10 ; pop rbp ; ret
0x000000000040c147 : add esp, 0x1010 ; pop rbp ; ret
0x000000000040adc9 : add esp, 0x108 ; pop rbx ; pop rbp ; ret
0x000000000040fcbc : add esp, 0x130 ; pop rbp ; ret
0x000000000040695c : add esp, 0x1a0 ; pop rbp ; ret
0x000000000040cfdc : add esp, 0x1b0 ; pop rbp ; ret
0x0000000000410bce : add esp, 0x1e0 ; pop rbp ; ret
0x0000000000403557 : add esp, 0x20 ; pop rbp ; ret
0x0000000000401f3d : add esp, 0x30 ; pop rbp ; ret
0x0000000000408601 : add esp, 0x40 ; pop rbp ; ret
0x000000000040b93c : add esp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000004055ac : add esp, 0x50 ; pop rbp ; ret
0x000000000040eb17 : add esp, 0x60 ; pop rbp ; ret
0x0000000000403a83 : add esp, 0x70 ; pop rbp ; ret
0x00000000004032c6 : add esp, 0x80 ; pop rbp ; ret
0x0000000000402fea : add esp, 0x90 ; pop rbp ; ret
0x0000000000407883 : add esp, 0x98 ; pop rbx ; pop rbp ; ret
0x0000000000405b68 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040e93c : add esp, 0xc0 ; pop rbp ; ret
0x0000000000402d46 : add esp, 0xd0 ; pop rbp ; ret
0x0000000000409a3e : add esp, 0xe0 ; pop rbp ; ret
0x00000000004016b6 : add esp, 8 ; ret
0x0000000000410635 : add rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040d49b : add rax, rcx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401bca : add rax, rdx ; sar rax, 1 ; jne 0x401bdd ; pop rbp ; ret
0x0000000000401e2a : add rsp, 0x10 ; pop rbp ; ret
0x000000000040c146 : add rsp, 0x1010 ; pop rbp ; ret
0x000000000040adc8 : add rsp, 0x108 ; pop rbx ; pop rbp ; ret
0x000000000040fcbb : add rsp, 0x130 ; pop rbp ; ret
0x000000000040695b : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000040cfdb : add rsp, 0x1b0 ; pop rbp ; ret
0x0000000000410bcd : add rsp, 0x1e0 ; pop rbp ; ret
0x0000000000403556 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000401f3c : add rsp, 0x30 ; pop rbp ; ret
0x0000000000408600 : add rsp, 0x40 ; pop rbp ; ret
0x000000000040b93b : add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000004055ab : add rsp, 0x50 ; pop rbp ; ret
0x000000000040eb16 : add rsp, 0x60 ; pop rbp ; ret
0x0000000000403a82 : add rsp, 0x70 ; pop rbp ; ret
0x00000000004032c5 : add rsp, 0x80 ; pop rbp ; ret
0x0000000000402fe9 : add rsp, 0x90 ; pop rbp ; ret
0x0000000000407882 : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x0000000000405b67 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040e93b : add rsp, 0xc0 ; pop rbp ; ret
0x0000000000402d45 : add rsp, 0xd0 ; pop rbp ; ret
0x0000000000409a3d : add rsp, 0xe0 ; pop rbp ; ret
0x00000000004016b5 : add rsp, 8 ; ret
0x00000000004149b1 : and al, 0xffffffffffffffff ; call rdi
0x0000000000406ff5 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040f250 : and bh, 1 ; movzx eax, dil ; pop rbp ; ret
0x0000000000413c01 : and byte ptr [rax], al ; add byte ptr [rax], dl ; sar bh, cl ; jmp rax
0x000000000040831b : and byte ptr [rbx + 0x41], bl ; pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040cdaf : and dh, 1 ; movzx eax, sil ; pop rbp ; ret
0x000000000040f24f : and dil, 1 ; movzx eax, dil ; pop rbp ; ret
0x0000000000401c06 : and dword ptr [r8], r8d ; add ebx, esi ; ret
0x0000000000401c07 : and dword ptr [rax], eax ; add ebx, esi ; ret
0x0000000000401c05 : and dword ptr cs:[r8], r8d ; add ebx, esi ; ret
0x000000000040d8b5 : and eax, 0x413450 ; mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x00000000004033f7 : and eax, 0x48ffffe3 ; add esp, 0x10 ; pop rbp ; ret
0x00000000004032df : and eax, 0x616390 ; pop rbp ; ret
0x0000000000403303 : and eax, 0x616398 ; pop rbp ; ret
0x0000000000413cc1 : and eax, dword ptr [rax] ; add al, dl ; loopne 0x413ccc ; jmp rax
0x0000000000411169 : and eax, edx ; xor rdi, rdx ; or rax, rdi ; pop rbp ; ret
0x00000000004113ee : and edx, eax ; mov al, dl ; movzx eax, al ; pop rbp ; ret
0x00000000004112c8 : and edx, eax ; mov ax, dx ; movzx eax, ax ; pop rbp ; ret
0x0000000000411077 : and edx, eax ; or r9d, edx ; mov eax, r9d ; pop rbp ; ret
0x0000000000411383 : and edx, ebx ; mov al, dl ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x00000000004113ed : and edx, r8d ; mov al, dl ; movzx eax, al ; pop rbp ; ret
0x000000000040cdae : and sil, 1 ; movzx eax, sil ; pop rbp ; ret
0x0000000000413ee8 : call 0x17413de3
0x0000000000405434 : call 0x4016e2
0x00000000004054ab : call 0x401702
0x00000000004055ee : call 0x401892
0x0000000000405723 : call 0x401992
0x00000000004020db : call 0xffffffff8085aa39
0x0000000000415998 : call 0xffffffffe341595c
0x0000000000404e99 : call 0xffffffffe902d7e9
0x0000000000404e98 : call 0xffffffffe902d7ea
0x000000000040dda1 : call 0xffffffffff7a68f2
0x000000000040dda0 : call 0xffffffffff7a68f3
0x000000000040dedf : call 0xffffffffff7a6a30
0x000000000040dede : call 0xffffffffff7a6a31
0x00000000004119c9 : call qword ptr [r12 + rbx*8]
0x00000000004135d7 : call qword ptr [rax]
0x0000000000414ab3 : call qword ptr [rcx]
0x0000000000414d1b : call qword ptr [rdx]
0x0000000000413eeb : call qword ptr [rsi]
0x00000000004119ca : call qword ptr [rsp + rbx*8]
0x0000000000401c2d : call rax
0x0000000000404bec : call rbx
0x000000000041408b : call rdi
0x0000000000405c00 : clc ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040fcba : clc ; add rsp, 0x130 ; pop rbp ; ret
0x0000000000406b5f : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405af1 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040b7d4 : clc ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004080aa : clc ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040eb15 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000409592 : clc ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000410f3f : clc ; add rsp, 0x80 ; pop rbp ; ret
0x0000000000405b66 : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x000000000040f040 : clc ; add rsp, 0xc0 ; pop rbp ; ret
0x0000000000414ff8 : clc ; jg 0x414ffd ; call qword ptr [rdx]
0x0000000000415018 : clc ; jg 0x41501d ; call qword ptr [rdx]
0x0000000000415038 : clc ; jg 0x41503d ; call qword ptr [rdx]
0x0000000000401bcf : clc ; jne 0x401bd8 ; pop rbp ; ret
0x000000000041125a : clc ; mov ax, r8w ; movzx eax, ax ; pop rbp ; ret
0x000000000040f3da : clc ; mov byte ptr [rax + 0x1c], 0 ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000403935 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040f2c8 : clc ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x000000000040b9de : clc ; mov dword ptr [rcx + 0x18], eax ; pop rbp ; ret
0x000000000040b496 : clc ; mov dword ptr [rcx + 0x2c], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040cc17 : clc ; mov dword ptr [rdi + 0x18], 0x95f616 ; pop rbp ; ret
0x000000000041058b : clc ; mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x000000000041190f : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040f07e : clc ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x00000000004026b7 : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040cffb : clc ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040d01b : clc ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040d03b : clc ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000410f8c : clc ; mov rax, r8 ; pop rbp ; ret
0x00000000004026bb : clc ; pop rbp ; ret
0x0000000000401e57 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040c145 : cld ; add rsp, 0x1010 ; pop rbp ; ret
0x000000000040b522 : cld ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040ca1a : cld ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004085ff : cld ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000410572 : cld ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004032c4 : cld ; add rsp, 0x80 ; pop rbp ; ret
0x0000000000402fe8 : cld ; add rsp, 0x90 ; pop rbp ; ret
0x000000000040e93a : cld ; add rsp, 0xc0 ; pop rbp ; ret
0x0000000000409a3c : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000041190c : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000041006f : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041014b : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040ca17 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000405bd6 : cld ; pop rbp ; ret
0x000000000040290f : cmp al, 0x25 ; ret
0x000000000040d78a : cmp dword ptr [rax - 0x75], ecx ; jne 0x40d774 ; call rax
0x0000000000410ab9 : cmp dword ptr [rdx - 0x76be63d5], ebx ; ret
0x0000000000401b8d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401ba0 ; pop rbp ; ret
0x000000000040724f : cmpsd dword ptr [rsi], dword ptr [rdi] ; cvttps2pi mm0, qword ptr [rcx - 0xe] ; jmp qword ptr [rcx]
0x0000000000405435 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xffff
0x0000000000407250 : cvttps2pi mm0, qword ptr [rcx - 0xe] ; jmp qword ptr [rcx]
0x0000000000407885 : cwde ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040616c : cwde ; mov rcx, qword ptr [rax*8 + 0x412ed8] ; jmp rcx
0x0000000000409c60 : cwde ; pop rdx ; adc dword ptr [rcx - 0xa], eax ; jmp qword ptr [rcx]
0x0000000000409f3c : cwde ; sbb byte ptr [rcx - 0xe], al ; jmp qword ptr [rcx]
0x000000000040213e : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; nop ; sbb al, byte ptr [rcx] ; jmp rcx
0x000000000040f9f4 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x00000000004045f2 : dec dword ptr [rcx - 0x77] ; ret 0x294d
0x000000000040bca0 : div dword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000040bc9f : div qword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000040d787 : enter -0x74b8, 0x39 ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x000000000040b977 : enter 0x4132, 0 ; jmp rcx
0x0000000000408d4e : enter 0x41ed, -0x77 ; ret 0x8141
0x0000000000404980 : enter 0x4b05, 0x34 ; fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x000000000040a3a5 : fadd dword ptr [rcx - 0xe] ; jmp qword ptr [rcx]
0x000000000040be0c : fbld dword ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000040be0d : fbld dword ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x0000000000413c85 : fdivp st(7) ; jmp rax
0x0000000000404984 : fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x00000000004081f2 : fild dword ptr [rdi + rcx + 0x44] ; ret 0x8941
0x0000000000406e8e : fild word ptr [rbp - 0x76ba39df] ; ret 0x8141
0x0000000000411384 : fimul dword ptr [rax - 0x3f49f030] ; pop rbx ; pop rbp ; ret
0x000000000040d1a3 : fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x000000000040d1a4 : fmul dword ptr [rax - 0x77] ; ret 0x2948
0x00000000004027d7 : fmul dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004054a6 : fmul qword ptr [r9 + 0x50e88c45] ; ret 0xffff
0x0000000000402737 : fmul qword ptr [rax - 0x77] ; ret 0xb0
0x00000000004119cc : fmul qword ptr [rax - 0x7d] ; ret
0x00000000004054a7 : fmul qword ptr [rcx + 0x50e88c45] ; ret 0xffff
0x0000000000415254 : hlt ; adc al, 0 ; add al, bl ; mov bh, bh ; jmp qword ptr [rdi]
0x0000000000401e29 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040af3e : hlt ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040f2c4 : hlt ; mov rcx, qword ptr [rbp - 8] ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x0000000000401ba0 : hlt ; pop rbp ; mov edi, 0x6162d0 ; jmp rax
0x000000000040a152 : imul edx, dword ptr [rbx - 0xd7f], -1 ; jmp qword ptr [rcx]
0x000000000040bc6d : in al, dx ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000410023 : in al, dx ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040bc70 : in al, dx ; pop rbp ; ret
0x0000000000405bd3 : in eax, -0x77 ; jge 0x405bd8 ; pop rbp ; ret
0x0000000000405d93 : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x00000000004139cf : inc dword ptr [rax] ; sbb byte ptr [rax], al ; add byte ptr [rax], al ; xchg edi, edi ; jmp qword ptr [rax]
0x000000000040820a : inc dword ptr [rcx - 0x77] ; ret
0x0000000000404c0b : inc dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000413bff : inc eax ; and byte ptr [rax], al ; add byte ptr [rax], dl ; sar bh, cl ; jmp rax
0x0000000000413cbf : inc eax ; and eax, dword ptr [rax] ; add al, dl ; loopne 0x413cce ; jmp rax
0x0000000000406795 : int 0x80
0x000000000040893f : int 0x81
0x0000000000401b93 : ja 0x401b9a ; pop rbp ; ret
0x000000000040f081 : ja 0x40f0ce ; pop rbp ; ret
0x00000000004002d6 : jbe 0x40027d ; xchg al, dh ; xchg eax, esi ; jl 0x400326 ; ret
0x0000000000401b9f : je 0x401b9d ; pop rbp ; mov edi, 0x6162d0 ; jmp rax
0x0000000000413995 : jg 0x413998 ; jmp qword ptr [rax]
0x0000000000414ff9 : jg 0x414ffc ; call qword ptr [rdx]
0x0000000000415019 : jg 0x41501c ; call qword ptr [rdx]
0x0000000000415039 : jg 0x41503c ; call qword ptr [rdx]
0x00000000004026b6 : jge 0x4026b7 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000405432 : jge 0x4053e8 ; call 0x4016e4
0x0000000000405bd5 : jge 0x405bd6 ; pop rbp ; ret
0x0000000000405d96 : jge 0x405d93 ; pop rbp ; ret
0x000000000040cffa : jge 0x40cffb ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040d01a : jge 0x40d01b ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040d03a : jge 0x40d03b ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000040d3f0 : jge 0x40d3e3 ; mov rcx, qword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040e9c0 : jge 0x40e9b3 ; mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040f07d : jge 0x40f07e ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000041058a : jge 0x41058d ; mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x00000000004002db : jl 0x400321 ; ret
0x0000000000414f79 : jl 0x414f7c ; jmp qword ptr [rcx]
0x0000000000413985 : jle 0x413988 ; jmp rax
0x000000000040978f : jmp 0x371917
0x00000000004017cb : jmp 0x4016c7
0x0000000000402908 : jmp 0x402968
0x0000000000402c12 : jmp 0x402c84
0x000000000040dc40 : jmp 0x49036590
0x000000000040e6be : jmp 0x4903700e
0x000000000040e72b : jmp 0x4903707b
0x000000000040eebc : jmp 0x4903780c
0x000000000040ef29 : jmp 0x49037879
0x0000000000406c68 : jmp 0xffffffffc2c9b472
0x0000000000413957 : jmp qword ptr [rax]
0x0000000000404086 : jmp qword ptr [rcx]
0x0000000000414473 : jmp qword ptr [rdi]
0x0000000000414173 : jmp qword ptr [rdx]
0x000000000040bfc0 : jmp qword ptr [rsi]
0x0000000000401ba7 : jmp rax
0x0000000000402118 : jmp rcx
0x0000000000401be7 : jmp rdx
0x0000000000401bd0 : jne 0x401bd7 ; pop rbp ; ret
0x000000000040b819 : jne 0x40b7fc ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x000000000040bca1 : jne 0x40bc99 ; mov rax, rdx ; pop rbp ; ret
0x000000000040bdb2 : jne 0x40bdaa ; mov rax, rdx ; pop rbp ; ret
0x000000000040d466 : jne 0x40d451 ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000040d78d : jne 0x40d771 ; call rax
0x0000000000403a85 : jo 0x403ae6 ; ret
0x00000000004050af : jo 0x405115 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405754 : jo 0x4057b5 ; ret
0x000000000040588e : jo 0x4058ef ; ret
0x0000000000409596 : jo 0x4095f7 ; ret
0x000000000040aa48 : jo 0x40a9d4 ; stc ; add eax, 0xf000000 ; xchg eax, esp ; ret 0x9588
0x0000000000410576 : jo 0x4105d7 ; ret
0x0000000000408e95 : lahf ; sub ah, byte ptr [rcx] ; ret 0x8941
0x0000000000408ea1 : lahf ; sub al, byte ptr [rcx - 0x77] ; ret 0x8141
0x000000000040f98a : lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000406e97 : loop 0x406e58 ; loopne 0x406e81 ; test dword ptr [rcx - 0x77], eax ; ret
0x0000000000413cd5 : loop 0x413cd8 ; jmp qword ptr [rax]
0x0000000000413cd4 : loop 0x413cd9 ; jmp qword ptr [rax]
0x0000000000408e9e : loope 0x408e78 ; mov edi, 0x89412a9f ; ret 0x8141
0x00000000004100db : loope 0x4100ec ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406e99 : loopne 0x406e7f ; test dword ptr [rcx - 0x77], eax ; ret
0x0000000000406f20 : loopne 0x406f70 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000406f1f : loopne 0x406f71 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000409a40 : loopne 0x409a47 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040d467 : loopne 0x40d4b9 ; mov esi, eax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x0000000000410bd0 : loopne 0x410bd8 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000413cc5 : loopne 0x413cc8 ; jmp rax
0x0000000000413e09 : loopne 0x413e0b ; jmp rdx
0x0000000000415014 : mov ah, 0x12 ; add byte ptr [rax], al ; clc ; jg 0x415021 ; call qword ptr [rdx]
0x000000000040d36e : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000414d14 : mov ah, 0xf ; add byte ptr [rax], al ; sbb byte ptr [rbx - 1], ch ; call qword ptr [rdx]
0x0000000000405433 : mov al, -0x18 ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xffff
0x00000000004055ed : mov al, -0x18 ; popfq ; ret 0xffff
0x0000000000415679 : mov al, -1 ; jmp rax
0x000000000040562b : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004054b8 : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x000000000040cfde : mov al, 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000406ff2 : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040be0b : mov al, byte ptr [rbp - 0x21] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040d247 : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000411426 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040f2dc : mov al, byte ptr [rdi + 0x1c] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004113f0 : mov al, dl ; movzx eax, al ; pop rbp ; ret
0x0000000000411385 : mov al, dl ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x00000000004112ca : mov ax, dx ; movzx eax, ax ; pop rbp ; ret
0x000000000041125b : mov ax, r8w ; movzx eax, ax ; pop rbp ; ret
0x000000000040603c : mov bh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000411260 : mov bh, -0x40 ; pop rbp ; ret
0x0000000000415259 : mov bh, bh ; jmp qword ptr [rdi]
0x0000000000403301 : mov byte ptr [0x616398], al ; pop rbp ; ret
0x000000000040f3db : mov byte ptr [rax + 0x1c], 0 ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000401c03 : mov byte ptr [rip + 0x21472e], 1 ; ret
0x0000000000415699 : mov cl, -1 ; call qword ptr [rsi]
0x000000000040f255 : mov dh, -0x39 ; pop rbp ; ret
0x000000000040cdb4 : mov dh, -0x3a ; pop rbp ; ret
0x0000000000408191 : mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040cd34 : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004027ec : mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040b24f : mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000406ff8 : mov dh, -0x40 ; pop rbp ; ret
0x0000000000411388 : mov dh, -0x40 ; pop rbx ; pop rbp ; ret
0x00000000004032dd : mov dword ptr [0x616390], edi ; pop rbp ; ret
0x0000000000403936 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004038f8 : mov dword ptr [rax], eax ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004037b4 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004038f7 : mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040bc6b : mov dword ptr [rbp - 0x14], eax ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000401f39 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040d36c : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004055eb : mov dword ptr [rbp - 0x50], eax ; call 0x401895
0x0000000000405720 : mov dword ptr [rbp - 0x60], ecx ; call 0x401995
0x00000000004054a8 : mov dword ptr [rbp - 0x74], eax ; call 0x401705
0x0000000000401e27 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401e55 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405bd4 : mov dword ptr [rbp - 4], edi ; pop rbp ; ret
0x000000000041190d : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040d715 : mov dword ptr [rbp - 8], eax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004026b5 : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000405d95 : mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x000000000040f2c9 : mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x000000000040b9df : mov dword ptr [rcx + 0x18], eax ; pop rbp ; ret
0x000000000040b497 : mov dword ptr [rcx + 0x2c], eax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004039ae : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b091 : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040d8ba : mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x000000000040cc18 : mov dword ptr [rdi + 0x18], 0x95f616 ; pop rbp ; ret
0x000000000040f080 : mov dword ptr [rdi + 0x48], esi ; pop rbp ; ret
0x000000000041058c : mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x0000000000403768 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000406a7b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403553 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b938 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x0000000000403765 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004034af : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040bc6e : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000406d73 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040371d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004037ae : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040d119 : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000406f1e : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d46c : mov eax, dword ptr [rbp - 0x20] ; call rax
0x00000000004054a5 : mov eax, dword ptr [rbp - 0x24] ; mov dword ptr [rbp - 0x74], eax ; call 0x401708
0x000000000040ec1f : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040b81f : mov eax, dword ptr [rbp - 0x28] ; call rax
0x00000000004038fa : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000403a7f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000405629 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040f499 : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040af3c : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000410070 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040b520 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040ca18 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004085fd : mov eax, dword ptr [rbp - 4] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000410570 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040f148 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406b5d : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405aef : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040b7d2 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004080a8 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040eb13 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000409590 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004026b9 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040cffd : mov eax, dword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040d01d : mov eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040d03d : mov eax, dword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000041125d : mov eax, eax ; movzx eax, ax ; pop rbp ; ret
0x0000000000410f8e : mov eax, eax ; pop rbp ; ret
0x0000000000405b8c : mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407907 : mov eax, ecx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041107d : mov eax, ecx ; pop rbp ; ret
0x0000000000405bff : mov eax, edi ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040600b : mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004112cb : mov eax, edx ; movzx eax, ax ; pop rbp ; ret
0x000000000040bca4 : mov eax, edx ; pop rbp ; ret
0x0000000000405e23 : mov eax, esi ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004054aa : mov eax, gs ; push rax ; ret 0xffff
0x000000000041125c : mov eax, r8d ; movzx eax, ax ; pop rbp ; ret
0x000000000041107c : mov eax, r9d ; pop rbp ; ret
0x0000000000401c2b : mov ebp, esp ; call rax
0x0000000000401b91 : mov ebp, esp ; ja 0x401b9c ; pop rbp ; ret
0x0000000000405bd2 : mov ebp, esp ; mov dword ptr [rbp - 4], edi ; pop rbp ; ret
0x0000000000405d92 : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x00000000004067ad : mov ecx, 0x5b2a830a ; ret
0x0000000000402140 : mov ecx, dword ptr [rax*8 + 0x411a90] ; jmp rcx
0x0000000000402111 : mov ecx, dword ptr [rax*8 + 0x411ab0] ; jmp rcx
0x0000000000402858 : mov ecx, dword ptr [rax*8 + 0x411b38] ; jmp rcx
0x0000000000403b42 : mov ecx, dword ptr [rax*8 + 0x4129d0] ; jmp rcx
0x0000000000403e66 : mov ecx, dword ptr [rax*8 + 0x412a18] ; jmp rcx
0x000000000040616e : mov ecx, dword ptr [rax*8 + 0x412ed8] ; jmp rcx
0x000000000040b974 : mov ecx, dword ptr [rax*8 + 0x4132c8] ; jmp rcx
0x00000000004037b1 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040de02 : mov ecx, dword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040dd9f : mov ecx, dword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040d3f3 : mov ecx, dword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040e9c3 : mov ecx, dword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040f2c6 : mov ecx, dword ptr [rbp - 8] ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x000000000040b9dc : mov ecx, dword ptr [rbp - 8] ; mov dword ptr [rcx + 0x18], eax ; pop rbp ; ret
0x000000000040ea90 : mov ecx, dword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000401c25 : mov edi, 0x615e20 ; mov rbp, rsp ; call rax
0x0000000000401ba2 : mov edi, 0x6162d0 ; jmp rax
0x0000000000401be2 : mov edi, 0x6162d0 ; jmp rdx
0x0000000000408ea0 : mov edi, 0x89412a9f ; ret 0x8141
0x0000000000405431 : mov edi, dword ptr [rbp - 0x50] ; call 0x4016e5
0x000000000040f07c : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040cff9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040d019 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040d039 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000040dda3 : mov edi, dword ptr [rcx] ; call rax
0x000000000040d789 : mov edi, dword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x00000000004119c7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000413a05 : mov edi, edi ; jmp rax
0x00000000004119c6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000040571d : mov edx, ecx ; mov qword ptr [rbp - 0x60], rcx ; call 0x401998
0x000000000040d78c : mov esi, dword ptr [rbp - 0x20] ; call rax
0x000000000040d3f7 : mov esi, dword ptr [rcx] ; call rax
0x0000000000401be0 : mov esi, eax ; mov edi, 0x6162d0 ; jmp rdx
0x000000000040d469 : mov esi, eax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000040b81c : mov esi, eax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x00000000004055e8 : mov esi, ecx ; mov qword ptr [rbp - 0x50], rax ; call 0x401898
0x00000000004032dc : mov qword ptr [0x616390], rdi ; pop rbp ; ret
0x00000000004055ea : mov qword ptr [rbp - 0x50], rax ; call 0x401896
0x000000000040571f : mov qword ptr [rbp - 0x60], rcx ; call 0x401996
0x000000000040d714 : mov qword ptr [rbp - 8], rax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004026b4 : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000405d94 : mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x00000000004039ad : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b090 : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040f07f : mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040d36d : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004055ec : mov r8b, -0x18 ; popfq ; ret 0xffff
0x000000000040562a : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004054a9 : mov r8d, gs ; push rax ; ret 0xffff
0x0000000000406a7a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403552 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403764 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004034ae : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000406d72 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040371c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040d118 : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000406f1d : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d46b : mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000040ec1e : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040b81e : mov rax, qword ptr [rbp - 0x28] ; call rax
0x0000000000403a7e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000405628 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040f147 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406b5c : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405aee : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040b7d1 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004080a7 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040eb12 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040958f : mov rax, qword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004026b8 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040cffc : mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040d01c : mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040d03c : mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000410f8d : mov rax, r8 ; pop rbp ; ret
0x0000000000405bc0 : mov rax, rcx ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407906 : mov rax, rcx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040daa0 : mov rax, rdx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040bca3 : mov rax, rdx ; pop rbp ; ret
0x0000000000401c2a : mov rbp, rsp ; call rax
0x0000000000401b90 : mov rbp, rsp ; ja 0x401b9d ; pop rbp ; ret
0x0000000000405bd1 : mov rbp, rsp ; mov dword ptr [rbp - 4], edi ; pop rbp ; ret
0x0000000000405d91 : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000040213f : mov rcx, qword ptr [rax*8 + 0x411a90] ; jmp rcx
0x0000000000402110 : mov rcx, qword ptr [rax*8 + 0x411ab0] ; jmp rcx
0x0000000000402857 : mov rcx, qword ptr [rax*8 + 0x411b38] ; jmp rcx
0x0000000000403b41 : mov rcx, qword ptr [rax*8 + 0x4129d0] ; jmp rcx
0x0000000000403e65 : mov rcx, qword ptr [rax*8 + 0x412a18] ; jmp rcx
0x000000000040616d : mov rcx, qword ptr [rax*8 + 0x412ed8] ; jmp rcx
0x000000000040b973 : mov rcx, qword ptr [rax*8 + 0x4132c8] ; jmp rcx
0x000000000040de01 : mov rcx, qword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040dd9e : mov rcx, qword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040d3f2 : mov rcx, qword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040e9c2 : mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040f2c5 : mov rcx, qword ptr [rbp - 8] ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x000000000040b9db : mov rcx, qword ptr [rbp - 8] ; mov dword ptr [rcx + 0x18], eax ; pop rbp ; ret
0x000000000040ea8f : mov rcx, qword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000405430 : mov rdi, qword ptr [rbp - 0x50] ; call 0x4016e6
0x000000000040f07b : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040cff8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040d018 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040d038 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000040dda2 : mov rdi, qword ptr [rcx] ; call rax
0x000000000040d788 : mov rdi, qword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x000000000040571c : mov rdx, r9 ; mov qword ptr [rbp - 0x60], rcx ; call 0x401999
0x000000000040d78b : mov rsi, qword ptr [rbp - 0x20] ; call rax
0x000000000040d3f6 : mov rsi, qword ptr [rcx] ; call rax
0x0000000000401bdf : mov rsi, rax ; mov edi, 0x6162d0 ; jmp rdx
0x000000000040d468 : mov rsi, rax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000040b81b : mov rsi, rax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x000000000040a841 : movabs dword ptr [0xfffffff281f4f275], eax ; jmp qword ptr [rcx]
0x0000000000408b6d : movabs eax, dword ptr [0x21fffffffff281ee] ; ret 0xfa81
0x0000000000408190 : movzx eax, al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040cd33 : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004027eb : movzx eax, al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040b24e : movzx eax, al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000406ff7 : movzx eax, al ; pop rbp ; ret
0x0000000000411387 : movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000041125f : movzx eax, ax ; pop rbp ; ret
0x000000000040f254 : movzx eax, bh ; pop rbp ; ret
0x000000000040603b : movzx eax, cx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040cdb3 : movzx eax, dh ; pop rbp ; ret
0x000000000040f253 : movzx eax, dil ; pop rbp ; ret
0x000000000040cdb2 : movzx eax, sil ; pop rbp ; ret
0x0000000000407e95 : movzx eax, word ptr [rbp - 2] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040a55a : mul dword ptr [rbp + 0x21] ; ret 0x8941
0x00000000004054a4 : nop ; mov eax, dword ptr [rbp - 0x24] ; mov dword ptr [rbp - 0x74], eax ; call 0x401709
0x0000000000402143 : nop ; sbb al, byte ptr [rcx] ; jmp rcx
0x00000000004119e8 : nop dword ptr [rax + rax] ; ret
0x00000000004041cd : or al, 0x18 ; ret 0x6451
0x000000000040b975 : or al, 0xffffffffffffffc5 ; enter 0x4132, 0 ; jmp rcx
0x0000000000402141 : or al, 0xffffffffffffffc5 ; nop ; sbb al, byte ptr [rcx] ; jmp rcx
0x0000000000413681 : or al, byte ptr [rax] ; add al, ah ; add al, -1 ; call rax
0x0000000000413691 : or al, byte ptr [rax] ; add byte ptr [rax], al ; sbb edi, edi ; call qword ptr [rax]
0x00000000004020de : or byte ptr [r15], 0x84 ; ret 0
0x000000000040729b : or byte ptr [rax], al ; add byte ptr [rbp - 0x77], al ; ret 0x3145
0x000000000040adcb : or byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004020df : or byte ptr [rdi], 0x84 ; ret 0
0x00000000004081fe : or dword ptr [rcx], eax ; add byte ptr [rbp - 0x77], al ; ret 0x8141
0x0000000000405811 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000410f8b : or eax, edi ; mov rax, r8 ; pop rbp ; ret
0x000000000041116f : or eax, edi ; pop rbp ; ret
0x000000000041107a : or ecx, edx ; mov eax, r9d ; pop rbp ; ret
0x0000000000410f8a : or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x0000000000411079 : or r9d, edx ; mov eax, r9d ; pop rbp ; ret
0x000000000041116e : or rax, rdi ; pop rbp ; ret
0x000000000040cdb0 : out 1, al ; movzx eax, sil ; pop rbp ; ret
0x000000000040f251 : out 1, eax ; movzx eax, dil ; pop rbp ; ret
0x0000000000407c0a : out dx, al ; rol byte ptr [rcx - 0xe], 1 ; jmp qword ptr [rcx]
0x0000000000406ff4 : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040d2f9 : outsb dx, byte ptr [rsi] ; ret 0x280f
0x00000000004119dc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004050b1 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004119de : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004050b3 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004119e0 : pop r14 ; pop r15 ; ret
0x0000000000404e63 : pop r14 ; pop rbp ; ret
0x00000000004050b5 : pop r15 ; pop rbp ; ret
0x00000000004119e2 : pop r15 ; ret
0x0000000000413e08 : pop rax ; loopne 0x413e0c ; jmp rdx
0x0000000000401c02 : pop rbp ; mov byte ptr [rip + 0x21472e], 1 ; ret
0x0000000000401ba1 : pop rbp ; mov edi, 0x6162d0 ; jmp rax
0x0000000000401bde : pop rbp ; mov rsi, rax ; mov edi, 0x6162d0 ; jmp rdx
0x00000000004119db : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004119df : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401b95 : pop rbp ; ret
0x00000000004050b0 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040662d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000404e62 : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000407889 : pop rbx ; pop rbp ; ret
0x00000000004067b1 : pop rbx ; ret
0x00000000004050b6 : pop rdi ; pop rbp ; ret
0x00000000004119e3 : pop rdi ; ret
0x0000000000409c61 : pop rdx ; adc dword ptr [rcx - 0xa], eax ; jmp qword ptr [rcx]
0x000000000040724e : pop rdx ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cvttps2pi mm0, qword ptr [rcx - 0xe] ; jmp qword ptr [rcx]
0x00000000004050b4 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004119e1 : pop rsi ; pop r15 ; ret
0x0000000000404e64 : pop rsi ; pop rbp ; ret
0x00000000004119dd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004050b2 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040d310 : pop rsp ; ret 0xf66
0x00000000004055ef : popfq ; ret 0xffff
0x000000000041367f : push qword ptr [rax - 0x1ffffff6] ; add al, -1 ; call rax
0x00000000004002d5 : push rax ; jbe 0x40027e ; xchg al, dh ; xchg eax, esi ; jl 0x400327 ; ret
0x000000000041368f : push rax ; or al, byte ptr [rax] ; add byte ptr [rax], al ; sbb edi, edi ; call qword ptr [rax]
0x00000000004055ae : push rax ; pop rbp ; ret
0x00000000004054ac : push rax ; ret 0xffff
0x00000000004139c4 : push rax ; xchg bh, bh ; jmp rax
0x0000000000401c24 : push rbp ; mov edi, 0x615e20 ; mov rbp, rsp ; call rax
0x0000000000405bd0 : push rbp ; mov rbp, rsp ; mov dword ptr [rbp - 4], edi ; pop rbp ; ret
0x0000000000405d90 : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000408f7b : push rbp ; ror byte ptr [rax - 0x75], 1 ; ror byte ptr [r8 - 0x77], 1 ; ret 0x8148
0x0000000000402909 : push rdx ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x0000000000413940 : rcl byte ptr [rip + 0x51600000], -1 ; jmp rax
0x0000000000413980 : rcl byte ptr [rsi], 0 ; add byte ptr [rax], al ; jle 0x41398d ; jmp rax
0x0000000000413b40 : rcr byte ptr [rip - 0x45600000], -1 ; jmp rax
0x00000000004002dd : ret
0x00000000004020e2 : ret 0
0x0000000000409aaa : ret 0x134
0x000000000040ba66 : ret 0x148
0x00000000004024ef : ret 0x1489
0x000000000040524e : ret 0x1b2
0x00000000004019d2 : ret 0x2147
0x00000000004017d2 : ret 0x2148
0x000000000040cf75 : ret 0x26a8
0x000000000040d2fa : ret 0x280f
0x0000000000403535 : ret 0x2948
0x00000000004045d9 : ret 0x294c
0x00000000004045f5 : ret 0x294d
0x00000000004072a0 : ret 0x3145
0x000000000040f323 : ret 0x3693
0x0000000000407eba : ret 0x3948
0x000000000040c1aa : ret 0x4b
0x000000000040be07 : ret 0x5588
0x0000000000403834 : ret 0x5589
0x000000000040af2f : ret 0x60
0x00000000004041cf : ret 0x6451
0x0000000000402f3a : ret 0x70e8
0x0000000000406e94 : ret 0x8141
0x0000000000406c6c : ret 0x8148
0x00000000004099cf : ret 0x8341
0x000000000040dc43 : ret 0x8348
0x0000000000408644 : ret 0x840
0x0000000000407d7e : ret 0x8445
0x0000000000404873 : ret 0x8840
0x0000000000406129 : ret 0x8844
0x00000000004071d5 : ret 0x8941
0x000000000040b8aa : ret 0x8944
0x0000000000406c80 : ret 0x8948
0x00000000004045f8 : ret 0x8949
0x00000000004112c9 : ret 0x8966
0x000000000040478c : ret 0x89a5
0x00000000004045dc : ret 0x8b48
0x0000000000410adf : ret 0x941
0x000000000040b88d : ret 0x945
0x000000000040a9d5 : ret 0x9588
0x00000000004022df : ret 0xb0
0x000000000040fbc9 : ret 0xb849
0x000000000040dcc6 : ret 0xb948
0x00000000004072eb : ret 0xc121
0x0000000000401bc5 : ret 0xc148
0x0000000000407303 : ret 0xc221
0x000000000040f930 : ret 0xc2f6
0x0000000000403ff4 : ret 0xca21
0x00000000004113ef : ret 0xd088
0x0000000000405ae3 : ret 0xd284
0x00000000004099d6 : ret 0xd4e8
0x000000000040460d : ret 0xde8
0x000000000040f473 : ret 0xea81
0x0000000000404e9c : ret 0xee8
0x000000000040f31f : ret 0xee81
0x000000000040864b : ret 0xf01
0x0000000000404888 : ret 0xf180
0x0000000000402f09 : ret 0xf1e8
0x0000000000408628 : ret 0xf280
0x000000000040406e : ret 0xf281
0x000000000040d311 : ret 0xf66
0x00000000004112c4 : ret 0xfa31
0x0000000000407259 : ret 0xfa81
0x000000000040e6d0 : ret 0xff3
0x0000000000405436 : ret 0xffff
0x0000000000405254 : ret 1
0x000000000040f990 : ret 2
0x000000000041027b : ret 3
0x0000000000407fe4 : ret 8
0x0000000000402d48 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000411373 : rol byte ptr [rbp + 9], 1 ; ret
0x00000000004038f6 : rol byte ptr [rcx + rcx*4], 1 ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040f3b9 : rol byte ptr [rcx - 0x77], 1 ; ret
0x0000000000407c0b : rol byte ptr [rcx - 0xe], 1 ; jmp qword ptr [rcx]
0x000000000041107b : rol dword ptr [rcx + rcx*4 - 0x38], 1 ; pop rbp ; ret
0x00000000004095e4 : rol dword ptr [rcx - 0xf], cl ; jmp qword ptr [rcx]
0x0000000000406790 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000408f7f : ror byte ptr [r8 - 0x77], 1 ; ret 0x8148
0x0000000000403a80 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x403aeb ; ret
0x000000000041116a : ror byte ptr [rax + 0x31], 1 ; xlatb ; or rax, rdi ; pop rbp ; ret
0x0000000000401bcc : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401bdb ; pop rbp ; ret
0x0000000000408f7c : ror byte ptr [rax - 0x75], 1 ; ror byte ptr [r8 - 0x77], 1 ; ret 0x8148
0x0000000000406791 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x00000000004045cd : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x00000000004045d6 : ror byte ptr [rax - 0x77], 1 ; ret 0x294c
0x0000000000408f80 : ror byte ptr [rax - 0x77], 1 ; ret 0x8148
0x0000000000403a81 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x403aea ; ret
0x000000000040b250 : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x0000000000402d44 : ror byte ptr [rax - 0x7f], -0x3c ; rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004112cc : ror byte ptr [rdi], 1 ; mov bh, -0x40 ; pop rbp ; ret
0x00000000004113f1 : ror byte ptr [rdi], 1 ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000411386 : ror byte ptr [rdi], 1 ; mov dh, -0x40 ; pop rbx ; pop rbp ; ret
0x0000000000407905 : ror dword ptr [rax - 0x77], -0x38 ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040a4b4 : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x000000000040bc6a : ror dword ptr [rcx + 0x458bec45], -0x14 ; pop rbp ; ret
0x00000000004002d7 : sahf ; xchg al, dh ; xchg eax, esi ; jl 0x400325 ; ret
0x0000000000413c05 : sar bh, cl ; jmp rax
0x000000000040ae13 : sar byte ptr [rdi], cl ; test dword ptr [rcx - 0xe], eax ; jmp qword ptr [rcx]
0x0000000000408e9f : sar dword ptr [rdi - 0x76bed561], 1 ; ret 0x8141
0x0000000000401bce : sar eax, 1 ; jne 0x401bd9 ; pop rbp ; ret
0x0000000000401bcd : sar rax, 1 ; jne 0x401bda ; pop rbp ; ret
0x000000000040f3dd : sbb al, 0 ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000040f2de : sbb al, 0x24 ; add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000402115 : sbb al, byte ptr [rcx] ; jmp rcx
0x0000000000413c94 : sbb bh, -1 ; jmp qword ptr [rax]
0x0000000000414651 : sbb bh, bh ; jmp qword ptr [rdi]
0x00000000004139d1 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; xchg edi, edi ; jmp qword ptr [rax]
0x0000000000414d18 : sbb byte ptr [rbx - 1], ch ; call qword ptr [rdx]
0x0000000000409f3d : sbb byte ptr [rcx - 0xe], al ; jmp qword ptr [rcx]
0x0000000000413c84 : sbb dh, -1 ; jmp rax
0x0000000000414650 : sbb dil, dil ; jmp qword ptr [rdi]
0x0000000000415695 : sbb dword ptr [rax], eax ; add byte ptr [rax], ch ; mov cl, -1 ; call qword ptr [rsi]
0x000000000040285c : sbb eax, dword ptr [rcx] ; jmp rcx
0x0000000000413695 : sbb edi, edi ; call qword ptr [rax]
0x000000000040bcda : sete al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000413c00 : shl byte ptr [rax], 0 ; add byte ptr [rax], dl ; sar bh, cl ; jmp rax
0x0000000000413cc0 : shl byte ptr [rbx], 0 ; add al, dl ; loopne 0x413ccd ; jmp rax
0x000000000040bcdc : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000409379 : shl byte ptr [rip - 0xd7f], -1 ; jmp qword ptr [rcx]
0x000000000040d32f : shl dword ptr [rsi + 0xf], 0x5c ; ret 0xf66
0x0000000000414d15 : sldt word ptr [rax] ; sbb byte ptr [rbx - 1], ch ; call qword ptr [rdx]
0x000000000040aa4a : stc ; add eax, 0xf000000 ; xchg eax, esp ; ret 0x9588
0x0000000000411428 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000408e96 : sub ah, byte ptr [rcx] ; ret 0x8941
0x000000000040b499 : sub al, 0x48 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000408d4c : sub al, 0x7d ; enter 0x41ed, -0x77 ; ret 0x8141
0x000000000041448c : sub al, 7 ; add byte ptr [rax], al ; adc byte ptr [rdi], -1 ; jmp qword ptr [rdi]
0x0000000000408ea2 : sub al, byte ptr [rcx - 0x77] ; ret 0x8141
0x0000000000403e6a : sub al, byte ptr [rcx] ; jmp rcx
0x0000000000403b46 : sub dword ptr [rcx], eax ; jmp rcx
0x00000000004067af : sub dword ptr [rdx], 0x5b ; ret
0x0000000000411a69 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000411a68 : sub rsp, 8 ; add rsp, 8 ; ret
0x00000000004020d9 : test al, -0x7d ; call 0xffffffff8085aa3b
0x0000000000407b5e : test al, 0 ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000415119 : test bh, bh ; call rbx
0x00000000004119ea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000413ee4 : test byte ptr [rcx], al ; add byte ptr [rax], al ; call 0x17413de7
0x0000000000406e9b : test dword ptr [rcx - 0x77], eax ; ret
0x000000000040ae15 : test dword ptr [rcx - 0xe], eax ; jmp qword ptr [rcx]
0x000000000040739d : test dword ptr [rip - 0x17000000], eax ; ret
0x00000000004002d8 : xchg al, dh ; xchg eax, esi ; jl 0x400324 ; ret
0x00000000004139c5 : xchg bh, bh ; jmp rax
0x00000000004072b0 : xchg eax, ebp ; ret
0x0000000000407d7d : xchg eax, ebp ; ret 0x8445
0x0000000000404872 : xchg eax, ebp ; ret 0x8840
0x00000000004002da : xchg eax, esi ; jl 0x400322 ; ret
0x0000000000414ff4 : xchg eax, esp ; adc al, byte ptr [rax] ; add al, bh ; jg 0x415001 ; call qword ptr [rdx]
0x000000000040be06 : xchg eax, esp ; ret 0x5588
0x000000000040a9d4 : xchg eax, esp ; ret 0x9588
0x0000000000405ae2 : xchg eax, esp ; ret 0xd284
0x000000000040bcdb : xchg eax, esp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004139d5 : xchg edi, edi ; jmp qword ptr [rax]
0x0000000000410f89 : xlatb ; or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x000000000041116d : xlatb ; or rax, rdi ; pop rbp ; ret
0x0000000000415994 : xor al, 0x1c ; add byte ptr [rax], al ; call 0xffffffffe3415960
0x000000000040b978 : xor al, byte ptr [rcx] ; jmp rcx
0x00000000004086c0 : xor bl, byte ptr [rcx + rax*4 - 0xf] ; jmp qword ptr [rcx]
0x000000000040fcbe : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004055a7 : xor eax, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x00000000004038f5 : xor eax, edx ; mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000414ab1 : xor edi, edi ; call qword ptr [rcx]
0x0000000000410f88 : xor edi, edx ; or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x000000000041116c : xor edi, edx ; or rax, rdi ; pop rbp ; ret
0x000000000041116b : xor rdi, rdx ; or rax, rdi ; pop rbp ; ret
