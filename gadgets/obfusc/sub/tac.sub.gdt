0x0000000000405d98 : adc al, 0 ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004078ab : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403307 : adc eax, 0x48ffffe1 ; add esp, 0x10 ; pop rbp ; ret
0x0000000000405389 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000409feb : add ah, cl ; or al, byte ptr [rax] ; add al, dl ; fdivr st(7) ; call qword ptr [rsi]
0x00000000004091bf : add ah, dl ; xchg edi, edi ; jmp rsp
0x00000000004018a7 : add al, ch ; ret
0x0000000000409fef : add al, dl ; fdivr st(7) ; call qword ptr [rsi]
0x00000000004082cf : add bl, dh ; ret
0x0000000000402a31 : add byte ptr [rax + 1], cl ; ret 0x2948
0x0000000000402682 : add byte ptr [rax + 1], cl ; ret 0x8948
0x00000000004035ce : add byte ptr [rax + 1], cl ; ret 0x8b48
0x000000000040652d : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x00000000004071f4 : add byte ptr [rax - 0x77], cl ; call 0xffffffffffe234eb
0x00000000004071f3 : add byte ptr [rax - 0x77], cl ; call 0xffffffffffe234ec
0x0000000000402cff : add byte ptr [rax - 0x77], cl ; ret 0x8148
0x0000000000401c7c : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x00000000004018a5 : add byte ptr [rax], al ; add al, ch ; ret
0x00000000004082cd : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000402a2f : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x2948
0x0000000000402680 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8948
0x00000000004035cc : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8b48
0x0000000000401c7a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x00000000004082cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004082cc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000408e34 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4061
0x00000000004095c5 : add byte ptr [rax], al ; add byte ptr [rax], bl ; test bh, bh ; jmp rdx
0x0000000000404a2e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000405c9e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040754c : add byte ptr [rax], al ; add cl, ch ; ret 2
0x0000000000405351 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405060 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004013a3 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004096c6 : add byte ptr [rax], al ; call 0x2340966c
0x00000000004014d9 : add byte ptr [rax], al ; jmp 0x4013b9
0x0000000000403922 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004095c2 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax], bl ; test bh, bh ; jmp rdx
0x0000000000402d38 : add byte ptr [rax], al ; pop rbp ; ret
0x00000000004063cb : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405020 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004082ce : add byte ptr [rax], al ; ret
0x0000000000408e36 : add byte ptr [rax], al ; ret 0x4061
0x00000000004095c7 : add byte ptr [rax], bl ; test bh, bh ; jmp rdx
0x000000000040a12f : add byte ptr [rax], dh ; fdivp st(7) ; jmp rdx
0x00000000004063cc : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000405021 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040927f : add byte ptr [rcx + rbp*4 - 1], ah ; jmp rsp
0x000000000040816c : add byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x0000000000401858 : add byte ptr [rcx], al ; ret
0x0000000000407548 : add byte ptr [rdi], cl ; lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x00000000004018a1 : add byte ptr [rdi], cl ; test byte ptr [rdx], cl ; add byte ptr [rax], al ; add al, ch ; ret
0x0000000000404a30 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000405ca0 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040754e : add cl, ch ; ret 2
0x0000000000406a09 : add dword ptr [rax - 0x77], ecx ; ret 0x8148
0x000000000040534f : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004063ca : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040501f : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040802d : add dword ptr [rax], ecx ; ret 0x840
0x0000000000402477 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402232 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040319e : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000407d0a : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401854 : add eax, 0x209a7e ; add ebx, esi ; ret
0x000000000040754b : add eax, 0xe9000000 ; ret 2
0x00000000004091bd : add eax, dword ptr [rax] ; add ah, dl ; xchg edi, edi ; jmp rsp
0x000000000040181b : add eax, edx ; sar rax, 1 ; jne 0x40182c ; pop rbp ; ret
0x0000000000401859 : add ebx, esi ; ret
0x00000000004019ab : add esp, 0x10 ; pop rbp ; ret
0x000000000040787c : add esp, 0x130 ; pop rbp ; ret
0x00000000004066fc : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000407cce : add esp, 0x1e0 ; pop rbp ; ret
0x00000000004031cd : add esp, 0x20 ; pop rbp ; ret
0x0000000000401abd : add esp, 0x30 ; pop rbp ; ret
0x0000000000402237 : add esp, 0x50 ; pop rbp ; ret
0x00000000004031a3 : add esp, 0x70 ; pop rbp ; ret
0x0000000000402ef7 : add esp, 0x80 ; pop rbp ; ret
0x000000000040567a : add esp, 0x90 ; pop rbp ; ret
0x0000000000406593 : add esp, 0xa0 ; pop rbp ; ret
0x0000000000402d34 : add esp, 0xe0 ; pop rbp ; ret
0x00000000004013a6 : add esp, 8 ; ret
0x000000000040181a : add rax, rdx ; sar rax, 1 ; jne 0x40182d ; pop rbp ; ret
0x00000000004019aa : add rsp, 0x10 ; pop rbp ; ret
0x000000000040787b : add rsp, 0x130 ; pop rbp ; ret
0x00000000004066fb : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000407ccd : add rsp, 0x1e0 ; pop rbp ; ret
0x00000000004031cc : add rsp, 0x20 ; pop rbp ; ret
0x0000000000401abc : add rsp, 0x30 ; pop rbp ; ret
0x0000000000402236 : add rsp, 0x50 ; pop rbp ; ret
0x00000000004031a2 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000402ef6 : add rsp, 0x80 ; pop rbp ; ret
0x0000000000405679 : add rsp, 0x90 ; pop rbp ; ret
0x0000000000406592 : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000402d33 : add rsp, 0xe0 ; pop rbp ; ret
0x00000000004013a5 : add rsp, 8 ; ret
0x0000000000407d09 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401857 : and byte ptr [rax], al ; add ebx, esi ; ret
0x00000000004031ef : and eax, 0x60d4a0 ; pop rbp ; ret
0x0000000000403213 : and eax, 0x60d4a8 ; pop rbp ; ret
0x00000000004096c8 : call 0x2340966a
0x0000000000402833 : call 0x490ab186
0x0000000000402832 : call 0x490ab187
0x0000000000405059 : call 0xffffffffe902d9a9
0x0000000000405058 : call 0xffffffffe902d9aa
0x00000000004071f8 : call 0xffffffffffe234e7
0x00000000004071f7 : call 0xffffffffffe234e8
0x00000000004082a9 : call qword ptr [r12 + rbx*8]
0x00000000004096eb : call qword ptr [rsi]
0x00000000004082aa : call qword ptr [rsp + rbx*8]
0x000000000040187d : call rax
0x0000000000404dac : call rbx
0x00000000004098cb : call rdi
0x000000000040956b : call rsi
0x000000000040787a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x00000000004068ff : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405cb1 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004036b7 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x000000000040181f : clc ; jne 0x401828 ; pop rbp ; ret
0x0000000000405f11 : clc ; lea eax, dword ptr [rax] ; jmp rcx
0x0000000000403af5 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004081ef : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040370e : clc ; pop rbp ; ret
0x00000000004019d7 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405e0e : cld ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406e4e : cld ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004081ec : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000406d23 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405e0b : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406e4b : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000407bb9 : cmp dword ptr [rdx - 0x76be63d5], ebx ; ret
0x00000000004017dd : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4017f0 ; pop rbp ; ret
0x0000000000405f0c : cwde ; mov rcx, qword ptr [rax*8 + 0x408df8] ; jmp rcx
0x000000000040370a : dec dword ptr [rax - 0x75] ; clc ; pop rbp ; ret
0x00000000004075b4 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x00000000004047b2 : dec dword ptr [rcx - 0x77] ; ret 0x294d
0x0000000000402a2b : enter 0x2d48, 2 ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x2948
0x0000000000404b40 : enter 0x4b05, 0x34 ; fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x000000000040267c : enter 0x548, 0 ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8948
0x000000000040385b : enter 0x60b2, 0 ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040a131 : fdivp st(7) ; jmp rdx
0x0000000000409ff1 : fdivr st(7) ; call qword ptr [rsi]
0x0000000000404b44 : fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x0000000000402813 : fisttp dword ptr [rax + 0x63] ; ret 0x8948
0x00000000004082ac : fmul qword ptr [rax - 0x7d] ; ret
0x00000000004019a9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004017f0 : hlt ; pop rbp ; mov edi, 0x60b280 ; jmp rax
0x00000000004031cb : in al, dx ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004023e8 : in al, dx ; ret
0x0000000000404dcb : inc dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x00000000004091bb : inc esp ; add eax, dword ptr [rax] ; add ah, dl ; xchg edi, edi ; jmp rsp
0x0000000000406535 : int 0x80
0x00000000004017e3 : ja 0x4017ea ; pop rbp ; ret
0x00000000004017ef : je 0x4017ed ; pop rbp ; mov edi, 0x60b280 ; jmp rax
0x0000000000401855 : jle 0x4017f7 ; and byte ptr [rax], al ; add ebx, esi ; ret
0x00000000004014db : jmp 0x4013b7
0x0000000000406a08 : jmp 0xffffffffc2c9b212
0x0000000000409ad3 : jmp qword ptr [rax]
0x0000000000404246 : jmp qword ptr [rcx]
0x00000000004096cb : jmp qword ptr [rdx]
0x00000000004017f7 : jmp rax
0x000000000040311d : jmp rbx
0x0000000000403d09 : jmp rcx
0x0000000000401837 : jmp rdx
0x00000000004091c3 : jmp rsp
0x0000000000401820 : jne 0x401827 ; pop rbp ; ret
0x00000000004031a5 : jo 0x403206 ; ret
0x0000000000403c45 : jo 0x403ca6 ; ret
0x000000000040526f : jo 0x4052d5 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405914 : jo 0x405975 ; ret
0x0000000000405a4e : jo 0x405aaf ; ret
0x0000000000408d51 : lea eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000405f12 : lea eax, dword ptr [rax] ; jmp rcx
0x000000000040754a : lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x00000000004023e4 : lodsb al, byte ptr [rsi] ; loope 0x402447 ; push rbx ; in al, dx ; ret
0x00000000004023f4 : lodsb al, byte ptr [rsi] ; loope 0x402457 ; push rbx ; in al, dx ; ret
0x00000000004023e5 : loope 0x402446 ; push rbx ; in al, dx ; ret
0x00000000004023f5 : loope 0x402456 ; push rbx ; in al, dx ; ret
0x0000000000402d36 : loopne 0x402d3d ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000407cd0 : loopne 0x407cd8 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000402cfd : mov ah, 0x60 ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x00000000004057eb : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000405678 : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000407d06 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000403211 : mov byte ptr [0x60d4a8], al ; pop rbp ; ret
0x0000000000403d06 : mov byte ptr [rax], al ; jmp rcx
0x0000000000401853 : mov byte ptr [rip + 0x209a7e], 1 ; ret
0x0000000000402479 : mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402234 : mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004031a0 : mov dh, -0x40 ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000407d0c : mov dh, -0x40 ; pop rbp ; ret
0x00000000004031ed : mov dword ptr [0x60d4a0], edi ; pop rbp ; ret
0x0000000000403af6 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040402a : mov dword ptr [rax], eax ; jmp rcx
0x0000000000403ab8 : mov dword ptr [rax], eax ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000403974 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000403ab7 : mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004031c9 : mov dword ptr [rbp - 0x14], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401ab9 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004019a7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004019d5 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004081ed : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000403b6e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004023f1 : mov eax, 0xe1ac0230 ; pop rbx ; push rbx ; in al, dx ; ret
0x0000000000403928 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040681b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403463 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403925 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004033bf : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000406b13 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004038dd : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040396e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000403aba : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000403c3f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004057e9 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000406d24 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405e0c : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406e4c : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004068fd : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405caf : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040370c : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040187b : mov ebp, esp ; call rax
0x00000000004017e1 : mov ebp, esp ; ja 0x4017ec ; pop rbp ; ret
0x000000000040654d : mov ecx, 0x5b2a830a ; ret
0x0000000000403d02 : mov ecx, dword ptr [rax*8 + 0x4088f0] ; jmp rcx
0x0000000000404026 : mov ecx, dword ptr [rax*8 + 0x408938] ; jmp rcx
0x0000000000405f0e : mov ecx, dword ptr [rax*8 + 0x408df8] ; jmp rcx
0x0000000000403971 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401875 : mov edi, 0x60ae20 ; mov rbp, rsp ; call rax
0x00000000004017f2 : mov edi, 0x60b280 ; jmp rax
0x0000000000401832 : mov edi, 0x60b280 ; jmp rdx
0x00000000004082a7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x00000000004082a6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x00000000004034dd : mov edx, 0x4fdaf5a1 ; ret
0x00000000004034cd : mov esi, 0x4fdaf5a1 ; ret
0x00000000004023e1 : mov esi, 0xe1ac0230 ; pop rbx ; push rbx ; in al, dx ; ret
0x0000000000401830 : mov esi, eax ; mov edi, 0x60b280 ; jmp rdx
0x00000000004031ec : mov qword ptr [0x60d4a0], rdi ; pop rbp ; ret
0x0000000000403b6d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004057ea : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040681a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403462 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403924 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004033be : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000406b12 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004038dc : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403c3e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004057e8 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004068fc : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405cae : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040370b : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040187a : mov rbp, rsp ; call rax
0x00000000004017e0 : mov rbp, rsp ; ja 0x4017ed ; pop rbp ; ret
0x0000000000403d01 : mov rcx, qword ptr [rax*8 + 0x4088f0] ; jmp rcx
0x0000000000404025 : mov rcx, qword ptr [rax*8 + 0x408938] ; jmp rcx
0x0000000000405f0d : mov rcx, qword ptr [rax*8 + 0x408df8] ; jmp rcx
0x000000000040182f : mov rsi, rax ; mov edi, 0x60b280 ; jmp rdx
0x0000000000402cfc : mov spl, 0x60 ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x00000000004095c4 : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax], bl ; test bh, bh ; jmp rdx
0x0000000000402478 : movzx eax, al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402233 : movzx eax, al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040319f : movzx eax, al ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000407d0b : movzx eax, al ; pop rbp ; ret
0x00000000004082c8 : nop dword ptr [rax + rax] ; ret
0x000000000040a12d : or al, 0 ; add byte ptr [rax], dh ; fdivp st(7) ; jmp rdx
0x000000000040438d : or al, 0x18 ; ret 0x6451
0x0000000000402cfa : or al, 0x25 ; mov spl, 0x60 ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x0000000000405f0f : or al, 0xffffffffffffffc5 ; clc ; lea eax, dword ptr [rax] ; jmp rcx
0x0000000000409fed : or al, byte ptr [rax] ; add al, dl ; fdivr st(7) ; call qword ptr [rsi]
0x00000000004059d1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004082bc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405271 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004082be : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405273 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004082c0 : pop r14 ; pop r15 ; ret
0x0000000000405023 : pop r14 ; pop rbp ; ret
0x0000000000405275 : pop r15 ; pop rbp ; ret
0x00000000004082c2 : pop r15 ; ret
0x0000000000401852 : pop rbp ; mov byte ptr [rip + 0x209a7e], 1 ; ret
0x00000000004017f1 : pop rbp ; mov edi, 0x60b280 ; jmp rax
0x000000000040182e : pop rbp ; mov rsi, rax ; mov edi, 0x60b280 ; jmp rdx
0x00000000004082bb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004082bf : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004017e5 : pop rbp ; ret
0x0000000000405270 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004063cd : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405022 : pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004023e6 : pop rbx ; push rbx ; in al, dx ; ret
0x0000000000406551 : pop rbx ; ret
0x0000000000405276 : pop rdi ; pop rbp ; ret
0x00000000004082c3 : pop rdi ; ret
0x0000000000405274 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004082c1 : pop rsi ; pop r15 ; ret
0x0000000000405024 : pop rsi ; pop rbp ; ret
0x00000000004082bd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405272 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000402239 : push rax ; pop rbp ; ret
0x0000000000401874 : push rbp ; mov edi, 0x60ae20 ; mov rbp, rsp ; call rax
0x00000000004023e7 : push rbx ; in al, dx ; ret
0x00000000004013a9 : ret
0x0000000000407782 : ret 0
0x0000000000407796 : ret 0x148
0x000000000040540e : ret 0x1b2
0x00000000004016e2 : ret 0x209a
0x00000000004014e2 : ret 0x209b
0x0000000000401e55 : ret 0x2948
0x0000000000404799 : ret 0x294c
0x00000000004047b5 : ret 0x294d
0x000000000040280f : ret 0x3703
0x0000000000401f07 : ret 0x3e8
0x0000000000408e38 : ret 0x4061
0x00000000004039f4 : ret 0x5589
0x000000000040438f : ret 0x6451
0x0000000000407bb5 : ret 0x8141
0x0000000000402d02 : ret 0x8148
0x000000000040802f : ret 0x840
0x0000000000404a33 : ret 0x8840
0x0000000000405ec9 : ret 0x8844
0x000000000040233c : ret 0x8948
0x00000000004047b8 : ret 0x8949
0x000000000040494c : ret 0x89a5
0x00000000004035c4 : ret 0x8b48
0x00000000004047cd : ret 0x8de8
0x0000000000407bdf : ret 0x941
0x0000000000401c7f : ret 0xb0
0x00000000004023ef : ret 0xb848
0x0000000000407789 : ret 0xb849
0x0000000000401815 : ret 0xc148
0x00000000004074f0 : ret 0xc2f6
0x00000000004041b4 : ret 0xca21
0x0000000000405ca3 : ret 0xd284
0x000000000040505c : ret 0xee8
0x0000000000404a48 : ret 0xf180
0x00000000004074e3 : ret 0xf280
0x000000000040422e : ret 0xf281
0x00000000004071fa : ret 0xffa1
0x0000000000402839 : ret 0xffff
0x0000000000405414 : ret 1
0x0000000000407550 : ret 2
0x0000000000403ab6 : rol byte ptr [rcx + rcx*4], 1 ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000406530 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000403c40 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x403cab ; ret
0x000000000040181c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40182b ; pop rbp ; ret
0x0000000000406531 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x000000000040478d : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000404796 : ror byte ptr [rax - 0x77], 1 ; ret 0x294c
0x00000000004031a1 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x40320a ; ret
0x0000000000403c41 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x403caa ; ret
0x0000000000402235 : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x0000000000402d32 : ror byte ptr [rax - 0x7f], -0x3c ; loopne 0x402d41 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040181e : sar eax, 1 ; jne 0x401829 ; pop rbp ; ret
0x000000000040181d : sar rax, 1 ; jne 0x40182a ; pop rbp ; ret
0x0000000000407d08 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040654f : sub dword ptr [rdx], 0x5b ; ret
0x00000000004082fd : sub esp, 8 ; add rsp, 8 ; ret
0x00000000004082fc : sub rsp, 8 ; add rsp, 8 ; ret
0x00000000004095c9 : test bh, bh ; jmp rdx
0x00000000004082ca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000402e23 : test byte ptr [rdi], bh ; add byte ptr [rax], al ; add al, ch ; ret
0x00000000004018a3 : test byte ptr [rdx], cl ; add byte ptr [rax], al ; add al, ch ; ret
0x0000000000404a32 : xchg eax, ebp ; ret 0x8840
0x00000000004071f2 : xchg eax, ecx ; add byte ptr [rax - 0x77], cl ; call 0xffffffffffe234ed
0x00000000004071f1 : xchg eax, ecx ; add byte ptr [rax - 0x77], cl ; call 0xffffffffffe234ee
0x0000000000405ca2 : xchg eax, esp ; ret 0xd284
0x00000000004091c1 : xchg edi, edi ; jmp rsp
0x000000000040787e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004023e2 : xor byte ptr [rdx], al ; lodsb al, byte ptr [rsi] ; loope 0x402449 ; push rbx ; in al, dx ; ret
0x00000000004023f2 : xor byte ptr [rdx], al ; lodsb al, byte ptr [rsi] ; loope 0x402459 ; push rbx ; in al, dx ; ret
0x0000000000405767 : xor eax, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x0000000000403ab5 : xor eax, edx ; mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
