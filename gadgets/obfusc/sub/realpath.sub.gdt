0x000000000040f2c8 : adc al, 0x48 ; add esp, 0x10 ; pop rbp ; ret
0x000000000040c269 : adc al, 1 ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004109a1 : adc byte ptr [rax], al ; add al, dh ; mov bh, bh ; jmp rax
0x00000000004115a0 : adc byte ptr [rdi - 1], bl ; call rdi
0x000000000040f2ac : adc dh, dh ; ret 0xf01
0x0000000000402d3d : adc dword ptr [rax + 1], ecx ; ret 0x8948
0x0000000000408be9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004106f5 : adc edi, edi ; jmp rax
0x0000000000400285 : adc esi, dword ptr [rcx] ; sub dword ptr [rbx - 0x61], edx ; wait ; ret
0x0000000000400284 : adc esi, dword ptr cs:[rcx] ; sub dword ptr [rbx - 0x61], edx ; wait ; ret
0x00000000004110bb : add ah, ah ; add eax, dword ptr [rax] ; add al, ah ; xor edi, edi ; call rbx
0x00000000004118c3 : add ah, ch ; or eax, dword ptr [rax] ; add byte ptr [rax], bl ; jnp 0x4118d2 ; jmp qword ptr [rdx]
0x00000000004117a3 : add ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax], cl ; jp 0x4117b2 ; jmp qword ptr [rax]
0x00000000004043ea : add al, 0x48 ; add eax, ecx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000410bf3 : add al, ah ; in al, -1 ; jmp qword ptr [rax]
0x00000000004110bf : add al, ah ; xor edi, edi ; call rbx
0x0000000000409d32 : add al, byte ptr [rcx] ; jmp rcx
0x0000000000401af7 : add al, ch ; ret
0x00000000004109a3 : add al, dh ; mov bh, bh ; jmp rax
0x0000000000410c23 : add al, dh ; out -1, al ; jmp rax
0x000000000040f4bf : add bl, dh ; ret
0x0000000000405329 : add byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000040d127 : add byte ptr [rax + 1], cl ; ret 0x4a3b
0x000000000040ac82 : add byte ptr [rax - 0x75], cl ; call 0x490335da
0x000000000040b56b : add byte ptr [rax - 0x75], cl ; call 0x49033ec3
0x000000000040f3e6 : add byte ptr [rax - 0x75], cl ; call 0x49037d3e
0x00000000004046ff : add byte ptr [rax - 0x75], cl ; fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x000000000040a34d : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x00000000004027ea : add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000004114a0 : add byte ptr [rax - 1], bl ; jmp qword ptr [rdx]
0x000000000041159e : add byte ptr [rax], al ; adc byte ptr [rdi - 1], bl ; call rdi
0x0000000000401af5 : add byte ptr [rax], al ; add al, ch ; ret
0x000000000040f4bd : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000405327 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000040d125 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x4a3b
0x000000000040ac80 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; call 0x490335dc
0x000000000040b569 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; call 0x49033ec5
0x000000000040f3e4 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; call 0x49037d40
0x00000000004046fd : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x000000000041149e : add byte ptr [rax], al ; add byte ptr [rax - 1], bl ; jmp qword ptr [rdx]
0x000000000040f4bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000400710 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x0000000000400712 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x0000000000404d9d : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040f1a1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040f4bc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400714 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x0000000000402655 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5588
0x000000000040828e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x000000000040f1f2 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004025e1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x00000000004094fe : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040261d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000040bc9c : add byte ptr [rax], al ; add cl, ch ; ret 2
0x0000000000408bb1 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404d9f : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403e78 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040156b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004111fa : add byte ptr [rax], al ; and al, 5 ; add byte ptr [rax], al ; cmp byte ptr [rdx], -1 ; jmp qword ptr [rdi]
0x0000000000412006 : add byte ptr [rax], al ; call 0xffffffffe1411fd9
0x00000000004111fe : add byte ptr [rax], al ; cmp byte ptr [rdx], -1 ; jmp qword ptr [rdi]
0x00000000004123b2 : add byte ptr [rax], al ; fcom qword ptr [rsi] ; add byte ptr [rax], al ; sar rdi, 1 ; call qword ptr [rax]
0x00000000004118c2 : add byte ptr [rax], al ; in al, dx ; or eax, dword ptr [rax] ; add byte ptr [rax], bl ; jnp 0x4118d3 ; jmp qword ptr [rdx]
0x0000000000401709 : add byte ptr [rax], al ; jmp 0x401589
0x00000000004109f2 : add byte ptr [rax], al ; mov dr1, edi ; jmp qword ptr [rax]
0x0000000000407182 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004117a6 : add byte ptr [rax], al ; or byte ptr [rdx - 1], bh ; jmp qword ptr [rax]
0x000000000040259a : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040a1eb : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000408880 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000410be2 : add byte ptr [rax], al ; push rax ; in al, -1 ; jmp rax
0x000000000041239e : add byte ptr [rax], al ; push rax ; sar edi, 1 ; call qword ptr [rax]
0x000000000040f4be : add byte ptr [rax], al ; ret
0x0000000000400716 : add byte ptr [rax], al ; ret 1
0x00000000004123b6 : add byte ptr [rax], al ; sar rdi, 1 ; call qword ptr [rax]
0x00000000004118c6 : add byte ptr [rax], al ; sbb byte ptr [rbx - 1], bh ; jmp qword ptr [rdx]
0x0000000000412002 : add byte ptr [rax], al ; sub al, 0x13 ; add byte ptr [rax], al ; call 0xffffffffe1411fdd
0x0000000000410933 : add byte ptr [rax], al ; test bh, bh ; jmp qword ptr [rax]
0x00000000004118c7 : add byte ptr [rax], bl ; jnp 0x4118ce ; jmp qword ptr [rdx]
0x00000000004117a7 : add byte ptr [rax], cl ; jp 0x4117ae ; jmp qword ptr [rax]
0x00000000004106f3 : add byte ptr [rax], dl ; adc edi, edi ; jmp rax
0x0000000000410bb3 : add byte ptr [rax], dl ; loope 0x410bba ; jmp qword ptr [rax]
0x000000000040a1ec : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000408881 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000412003 : add byte ptr [rbx + rdx], ch ; add byte ptr [rax], al ; call 0xffffffffe1411fdc
0x000000000040eeec : add byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x0000000000409c2d : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401aa8 : add byte ptr [rcx], al ; ret
0x000000000040bc98 : add byte ptr [rdi], cl ; lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000401af1 : add byte ptr [rdi], cl ; test byte ptr [rdx], cl ; add byte ptr [rax], al ; add al, ch ; ret
0x0000000000402657 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5588
0x00000000004026dc : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x000000000040f1f4 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004025e3 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000409500 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040261f : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x00000000004109f0 : add byte ptr [rdx], dl ; add byte ptr [rax], al ; mov dr1, edi ; jmp qword ptr [rax]
0x000000000040425d : add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x0000000000400283 : add byte ptr [rsi], ch ; adc esi, dword ptr [rcx] ; sub dword ptr [rbx - 0x61], edx ; wait ; ret
0x000000000040c362 : add byte ptr cs:[rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040b66c : add cl, byte ptr [rax - 0x77] ; ret 0x148
0x000000000040bc9e : add cl, ch ; ret 2
0x00000000004061a2 : add dword ptr [rax + 0xf], eax ; mov dh, -0x39 ; pop rbp ; ret
0x000000000040a829 : add dword ptr [rax - 0x77], ecx ; ret 0x8148
0x0000000000408baf : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040a1ea : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040887f : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040605c : add dword ptr [rax], ecx ; ret 0x840
0x00000000004026ec : add dword ptr [rax], esp ; ret 0x840
0x0000000000402843 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403f33 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000402b0e : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040d6b2 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000402708 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401aa4 : add eax, 0x21188e ; add ebx, esi ; ret
0x000000000040bc9b : add eax, 0xe9000000 ; ret 2
0x00000000004110bd : add eax, dword ptr [rax] ; add al, ah ; xor edi, edi ; call rbx
0x00000000004043ec : add eax, ecx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401a6b : add eax, edx ; sar rax, 1 ; jne 0x401a7c ; pop rbp ; ret
0x000000000040dca9 : add eax, esi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x0000000000401aa9 : add ebx, esi ; ret
0x000000000040c2ab : add edi, eax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x0000000000401bfb : add esp, 0x10 ; pop rbp ; ret
0x0000000000409c2b : add esp, 0x100 ; pop rbp ; ret
0x000000000040e16c : add esp, 0x10e0 ; pop rbp ; ret
0x000000000040bfcc : add esp, 0x130 ; pop rbp ; ret
0x0000000000403a62 : add esp, 0x160 ; pop rbp ; ret
0x0000000000406c95 : add esp, 0x170 ; pop rbp ; ret
0x000000000040a51c : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000403dc7 : add esp, 0x20 ; pop rbp ; ret
0x000000000040ce66 : add esp, 0x250 ; pop rbp ; ret
0x0000000000401cdd : add esp, 0x30 ; pop rbp ; ret
0x0000000000403f38 : add esp, 0x40 ; pop rbp ; ret
0x0000000000402b13 : add esp, 0x50 ; pop rbp ; ret
0x0000000000405a67 : add esp, 0x60 ; pop rbp ; ret
0x00000000004074a3 : add esp, 0x70 ; pop rbp ; ret
0x0000000000405153 : add esp, 0x80 ; pop rbp ; ret
0x0000000000408eda : add esp, 0x90 ; pop rbp ; ret
0x000000000040a3b3 : add esp, 0xa0 ; pop rbp ; ret
0x0000000000402596 : add esp, 0xb0 ; pop rbp ; ret
0x000000000040588c : add esp, 0xc0 ; pop rbp ; ret
0x000000000040156e : add esp, 8 ; ret
0x00000000004043eb : add rax, rcx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401a6a : add rax, rdx ; sar rax, 1 ; jne 0x401a7d ; pop rbp ; ret
0x000000000040dca8 : add rax, rsi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x000000000040c2aa : add rdi, rax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x0000000000401bfa : add rsp, 0x10 ; pop rbp ; ret
0x0000000000409c2a : add rsp, 0x100 ; pop rbp ; ret
0x000000000040e16b : add rsp, 0x10e0 ; pop rbp ; ret
0x000000000040bfcb : add rsp, 0x130 ; pop rbp ; ret
0x0000000000403a61 : add rsp, 0x160 ; pop rbp ; ret
0x0000000000406c94 : add rsp, 0x170 ; pop rbp ; ret
0x000000000040a51b : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000403dc6 : add rsp, 0x20 ; pop rbp ; ret
0x000000000040ce65 : add rsp, 0x250 ; pop rbp ; ret
0x0000000000401cdc : add rsp, 0x30 ; pop rbp ; ret
0x0000000000403f37 : add rsp, 0x40 ; pop rbp ; ret
0x0000000000402b12 : add rsp, 0x50 ; pop rbp ; ret
0x0000000000405a66 : add rsp, 0x60 ; pop rbp ; ret
0x00000000004074a2 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000405152 : add rsp, 0x80 ; pop rbp ; ret
0x0000000000408ed9 : add rsp, 0x90 ; pop rbp ; ret
0x000000000040a3b2 : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000402595 : add rsp, 0xb0 ; pop rbp ; ret
0x000000000040588b : add rsp, 0xc0 ; pop rbp ; ret
0x000000000040156d : add rsp, 8 ; ret
0x000000000040d6b1 : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000402707 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004111fc : and al, 5 ; add byte ptr [rax], al ; cmp byte ptr [rdx], -1 ; jmp qword ptr [rdi]
0x00000000004061a0 : and bh, 1 ; movzx eax, dil ; pop rbp ; ret
0x000000000040619f : and dil, 1 ; movzx eax, dil ; pop rbp ; ret
0x0000000000401aa7 : and dword ptr [rax], eax ; add ebx, esi ; ret
0x0000000000404805 : and eax, 0x40fce0 ; mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x0000000000403b4f : and eax, 0x613358 ; pop rbp ; ret
0x0000000000403b73 : and eax, 0x613360 ; pop rbp ; ret
0x000000000040b019 : and eax, edx ; xor rdi, rdx ; or rax, rdi ; pop rbp ; ret
0x000000000040b29e : and edx, eax ; mov al, dl ; movzx eax, al ; pop rbp ; ret
0x000000000040b178 : and edx, eax ; mov ax, dx ; movzx eax, ax ; pop rbp ; ret
0x000000000040af27 : and edx, eax ; or r9d, edx ; mov eax, r9d ; pop rbp ; ret
0x000000000040b233 : and edx, ebx ; mov al, dl ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000040b29d : and edx, r8d ; mov al, dl ; movzx eax, al ; pop rbp ; ret
0x000000000040cc74 : call 0x34dc4
0x0000000000401f24 : call 0x4010b2
0x0000000000401f23 : call 0x4010b3
0x0000000000401f5c : call 0x4010ea
0x0000000000401f5b : call 0x4010eb
0x000000000040252a : call 0x4015c9
0x000000000040ac86 : call 0x490335d6
0x000000000040ac85 : call 0x490335d7
0x000000000040b56f : call 0x49033ebf
0x000000000040b56e : call 0x49033ec0
0x000000000040f3ea : call 0x49037d3a
0x000000000040f3e9 : call 0x49037d3b
0x0000000000402c26 : call 0xffffffff8a2481bf
0x0000000000412008 : call 0xffffffffe1411fd7
0x00000000004088b9 : call 0xffffffffe9031209
0x00000000004088b8 : call 0xffffffffe903120a
0x000000000040db33 : call 0xffffffffe9036483
0x0000000000404cf1 : call 0xffffffffff79d842
0x0000000000404cf0 : call 0xffffffffff79d843
0x0000000000404e2f : call 0xffffffffff79d980
0x0000000000404e2e : call 0xffffffffff79d981
0x000000000040f499 : call qword ptr [r12 + rbx*8]
0x00000000004106ef : call qword ptr [rax]
0x0000000000411deb : call qword ptr [rcx]
0x0000000000410fa3 : call qword ptr [rdx]
0x0000000000410ec3 : call qword ptr [rsi]
0x000000000040f49a : call qword ptr [rsp + rbx*8]
0x0000000000401acd : call rax
0x000000000040860c : call rbx
0x0000000000410d23 : call rcx
0x00000000004115a3 : call rdi
0x000000000040609a : clc ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040bfca : clc ; add rsp, 0x130 ; pop rbp ; ret
0x0000000000403a60 : clc ; add rsp, 0x160 ; pop rbp ; ret
0x000000000040448e : clc ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040ce64 : clc ; add rsp, 0x250 ; pop rbp ; ret
0x00000000004024f9 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404757 : clc ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040e741 : clc ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000405a65 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040adeb : clc ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004070b8 : clc ; add rsp, 0xb0 ; pop rbp ; ret
0x0000000000405f90 : clc ; add rsp, 0xc0 ; pop rbp ; ret
0x0000000000401a6f : clc ; jne 0x401a78 ; pop rbp ; ret
0x000000000040b10a : clc ; mov ax, r8w ; movzx eax, ax ; pop rbp ; ret
0x000000000040f2c5 : clc ; mov dword ptr [rax + 0x14], ecx ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407355 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040ef6f : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000405fce : clc ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000404667 : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000403f4b : clc ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000403f6b : clc ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000403f8b : clc ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000040ae3c : clc ; mov rax, r8 ; pop rbp ; ret
0x000000000040466b : clc ; pop rbp ; ret
0x000000000040e926 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040e16a : cld ; add rsp, 0x10e0 ; pop rbp ; ret
0x000000000040b42b : cld ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b36a : cld ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040588a : cld ; add rsp, 0xc0 ; pop rbp ; ret
0x000000000040ef6c : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040e923 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040e8c6 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b367 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402ca7 : cld ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000402caa : cld ; pop rbp ; ret
0x0000000000403b4e : cmp al, 0x25 ; pop rax ; xor esp, dword ptr [rcx] ; pop rbp ; ret
0x0000000000402531 : cmp al, 0x25 ; ret
0x0000000000411201 : cmp bh, bh ; jmp qword ptr [rdi]
0x0000000000411200 : cmp byte ptr [rdx], -1 ; jmp qword ptr [rdi]
0x00000000004046da : cmp dword ptr [rax - 0x75], ecx ; jne 0x4046c4 ; call rax
0x0000000000401a2d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401a40 ; pop rbp ; ret
0x0000000000409d2c : cwde ; mov rcx, qword ptr [rax*8 + 0x410250] ; jmp rcx
0x000000000040252e : dec dword ptr [rax - 0x73] ; cmp al, 0x25 ; ret
0x000000000040cc70 : dec dword ptr [rax - 0x75] ; push rbp ; call 0x34dc8
0x000000000040bd04 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x000000000040cca6 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000409b5c : dec dword ptr [rax - 0x77] ; ret 0xcbe8
0x0000000000409859 : dec dword ptr [rax - 0x77] ; ret 0xcee8
0x0000000000408012 : dec dword ptr [rcx - 0x77] ; ret 0x294d
0x0000000000406281 : div dword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x0000000000406280 : div qword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x00000000004046d7 : enter -0x74b8, 0x39 ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x000000000040d844 : enter -0x76b8, 0xc ; ret 0x59e9
0x00000000004083a0 : enter 0x4b05, 0x34 ; fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x0000000000401a43 : enter 0x6132, 0 ; jmp rax
0x0000000000401a83 : enter 0x6132, 0 ; jmp rdx
0x00000000004123b4 : fcom qword ptr [rsi] ; add byte ptr [rax], al ; sar rdi, 1 ; call qword ptr [rax]
0x00000000004083a4 : fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x000000000040b234 : fimul dword ptr [rax - 0x3f49f030] ; pop rbx ; pop rbp ; ret
0x0000000000401f3e : fld dword ptr [rcx - 0xf] ; jmp qword ptr [rcx]
0x0000000000402d13 : fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x000000000040e38e : fmul dword ptr [r8 - 0x77] ; ret 0x8148
0x00000000004065eb : fmul dword ptr [rax + 0x29] ; ret 0x148
0x0000000000402d14 : fmul dword ptr [rax - 0x77] ; ret 0x2948
0x000000000040e38f : fmul dword ptr [rax - 0x77] ; ret 0x8148
0x000000000040f49c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000401bf9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040f1ff : hlt ; mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401a40 : hlt ; pop rbp ; mov edi, 0x6132c8 ; jmp rax
0x000000000040b668 : imul eax, dword ptr [rax - 0x77], 0x7a ; add cl, byte ptr [rax - 0x77] ; ret 0x148
0x0000000000402bf0 : in al, -0x77 ; ret 0xca29
0x0000000000410bf5 : in al, -1 ; jmp qword ptr [rax]
0x0000000000410be5 : in al, -1 ; jmp rax
0x00000000004118c4 : in al, dx ; or eax, dword ptr [rax] ; add byte ptr [rax], bl ; jnp 0x4118d1 ; jmp qword ptr [rdx]
0x000000000040d6b8 : in al, dx ; pop rbp ; ret
0x0000000000410bef : inc dword ptr [rax] ; sbb al, byte ptr [rax] ; add al, ah ; in al, -1 ; jmp qword ptr [rax]
0x0000000000410baf : inc dword ptr [rax] ; sbb dword ptr [rax], eax ; add byte ptr [rax], dl ; loope 0x410bbe ; jmp qword ptr [rax]
0x000000000040862b : inc dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x000000000041099f : inc eax ; adc byte ptr [rax], al ; add al, dh ; mov bh, bh ; jmp rax
0x0000000000410c1f : inc eax ; sbb al, byte ptr [rax] ; add al, dh ; out -1, al ; jmp rax
0x000000000040a355 : int 0x80
0x000000000040c9ac : int 0xfd
0x0000000000401a33 : ja 0x401a3a ; pop rbp ; ret
0x0000000000405fd1 : ja 0x40601e ; pop rbp ; ret
0x000000000040f89f : jb 0x40f908 ; jns 0x40f8aa ; push rax ; ret
0x000000000040f89e : jb 0x40f909 ; jns 0x40f8ab ; push rax ; ret
0x0000000000401a3f : je 0x401a3d ; pop rbp ; mov edi, 0x6132c8 ; jmp rax
0x0000000000403f4a : jge 0x403f4b ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000403f6a : jge 0x403f6b ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000403f8a : jge 0x403f8b ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000404340 : jge 0x404333 ; mov rcx, qword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000405910 : jge 0x405903 ; mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000405fcd : jge 0x405fce ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040170b : jmp 0x401587
0x0000000000404b90 : jmp 0x4902d4e0
0x000000000040560e : jmp 0x4902df5e
0x000000000040567b : jmp 0x4902dfcb
0x0000000000405e0c : jmp 0x4902e75c
0x0000000000405e79 : jmp 0x4902e7c9
0x000000000040a828 : jmp 0xffffffffc2c9f032
0x0000000000410937 : jmp qword ptr [rax]
0x0000000000401f44 : jmp qword ptr [rcx]
0x0000000000411203 : jmp qword ptr [rdi]
0x00000000004114a3 : jmp qword ptr [rdx]
0x0000000000401a47 : jmp rax
0x0000000000407569 : jmp rcx
0x0000000000401a87 : jmp rdx
0x0000000000401a70 : jne 0x401a77 ; pop rbp ; ret
0x00000000004043b6 : jne 0x4043a1 ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x00000000004046dd : jne 0x4046c1 ; call rax
0x0000000000406282 : jne 0x40627a ; mov rax, rdx ; pop rbp ; ret
0x000000000040b7b6 : jne 0x40b7ae ; mov rax, rdx ; pop rbp ; ret
0x0000000000411649 : jne 0x41164c ; jmp rdx
0x00000000004118c9 : jnp 0x4118cc ; jmp qword ptr [rdx]
0x000000000040f8a2 : jns 0x40f8a7 ; push rax ; ret
0x000000000040f8a1 : jns 0x40f8a8 ; push rax ; ret
0x0000000000406c97 : jo 0x406c9f ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004074a5 : jo 0x407506 ; ret
0x0000000000408acf : jo 0x408b35 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000409174 : jo 0x4091d5 ; ret
0x00000000004092ae : jo 0x40930f ; ret
0x00000000004096be : jo 0x4096c6 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040adef : jo 0x40ae50 ; ret
0x00000000004117a9 : jp 0x4117ac ; jmp qword ptr [rax]
0x0000000000411689 : js 0x41168c ; jmp qword ptr [rdx]
0x0000000000400289 : lahf ; wait ; ret
0x000000000040bc9a : lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000410bb5 : loope 0x410bb8 ; jmp qword ptr [rax]
0x0000000000402ca4 : loopne 0x402c37 ; cld ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000402ca3 : loopne 0x402c38 ; cld ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004043b7 : loopne 0x404409 ; mov esi, eax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000040ab70 : loopne 0x40abc0 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040ab6f : loopne 0x40abc1 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040e16e : loopne 0x40e185 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004042be : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000402598 : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040904b : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000408ed8 : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000402704 : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040ea86 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040b2a0 : mov al, dl ; movzx eax, al ; pop rbp ; ret
0x000000000040b235 : mov al, dl ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000040b17a : mov ax, dx ; movzx eax, ax ; pop rbp ; ret
0x000000000040b10b : mov ax, r8w ; movzx eax, ax ; pop rbp ; ret
0x000000000040b110 : mov bh, -0x40 ; pop rbp ; ret
0x0000000000410965 : mov bh, bh ; jmp rax
0x0000000000401569 : mov bl, 2 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000403b71 : mov byte ptr [0x613360], al ; pop rbp ; ret
0x000000000040c267 : mov byte ptr [rax + 0x14], 1 ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040dc7b : mov byte ptr [rax + 0xc], 1 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401aa3 : mov byte ptr [rip + 0x21188e], 1 ; ret
0x00000000004061a5 : mov dh, -0x39 ; pop rbp ; ret
0x0000000000402845 : mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403f35 : mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000402b10 : mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040d6b4 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000040270a : mov dh, -0x40 ; pop rbp ; ret
0x000000000040b238 : mov dh, -0x40 ; pop rbx ; pop rbp ; ret
0x00000000004109f5 : mov dr1, edi ; jmp qword ptr [rax]
0x0000000000401aa5 : mov ds, word ptr [rax] ; and dword ptr [rax], eax ; add ebx, esi ; ret
0x0000000000403b4d : mov dword ptr [0x613358], edi ; pop rbp ; ret
0x000000000040f2c6 : mov dword ptr [rax + 0x14], ecx ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407356 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000407318 : mov dword ptr [rax], eax ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004071d4 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000407317 : mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000401cd9 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004042bc : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401bf7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402ca5 : mov dword ptr [rbp - 4], eax ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040ef6d : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000404665 : mov dword ptr [rbp - 8], eax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004073ce : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040dcac : mov dword ptr [rdi + 0x10], eax ; pop rbp ; ret
0x000000000040480a : mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x0000000000405fd0 : mov dword ptr [rdi + 0x48], esi ; pop rbp ; ret
0x000000000040c2ae : mov dword ptr [rsi], edi ; pop rbp ; ret
0x0000000000407188 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000405ac3 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403dc3 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407185 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000403d1f : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040a933 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040713d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004071ce : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000404069 : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040ab6e : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004043bc : mov eax, dword ptr [rbp - 0x20] ; call rax
0x0000000000405b6f : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040731a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040aabb : mov eax, dword ptr [rbp - 0x2c] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040749f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000409049 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040f200 : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040e924 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040b429 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b368 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402ca8 : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000406098 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040448c : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004024f7 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404755 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040e73f : mov eax, dword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000405a63 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040ade9 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000404669 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000403f4d : mov eax, dword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000403f6d : mov eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000403f8d : mov eax, dword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000040b10d : mov eax, eax ; movzx eax, ax ; pop rbp ; ret
0x000000000040ae3e : mov eax, eax ; pop rbp ; ret
0x000000000040af2d : mov eax, ecx ; pop rbp ; ret
0x00000000004049f1 : mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b17b : mov eax, edx ; movzx eax, ax ; pop rbp ; ret
0x0000000000406285 : mov eax, edx ; pop rbp ; ret
0x000000000040b10c : mov eax, r8d ; movzx eax, ax ; pop rbp ; ret
0x000000000040af2c : mov eax, r9d ; pop rbp ; ret
0x0000000000401acb : mov ebp, esp ; call rax
0x0000000000401a31 : mov ebp, esp ; ja 0x401a3c ; pop rbp ; ret
0x000000000040dd51 : mov ebx, 0x48000014 ; add esp, 0x10 ; pop rbp ; ret
0x000000000040a36d : mov ecx, 0x5b2a830a ; ret
0x000000000040425b : mov ecx, 0xf660000 ; pop rsp ; ret 0xf66
0x0000000000407562 : mov ecx, dword ptr [rax*8 + 0x40fd50] ; jmp rcx
0x0000000000407886 : mov ecx, dword ptr [rax*8 + 0x40fd98] ; jmp rcx
0x0000000000409d2e : mov ecx, dword ptr [rax*8 + 0x410250] ; jmp rcx
0x00000000004071d1 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000404d52 : mov ecx, dword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000404cef : mov ecx, dword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000404343 : mov ecx, dword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000405913 : mov ecx, dword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x00000000004059e0 : mov ecx, dword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000401ac5 : mov edi, 0x612e20 ; mov rbp, rsp ; call rax
0x0000000000401a42 : mov edi, 0x6132c8 ; jmp rax
0x0000000000401a82 : mov edi, 0x6132c8 ; jmp rdx
0x0000000000405fcc : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000403f49 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000403f69 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000403f89 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000404cf3 : mov edi, dword ptr [rcx] ; call rax
0x00000000004046d9 : mov edi, dword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x000000000040c2a8 : mov edi, dword ptr [rsi] ; add rdi, rax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x000000000040f497 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000410975 : mov edi, edi ; jmp qword ptr [rax]
0x000000000040f496 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x00000000004046dc : mov esi, dword ptr [rbp - 0x20] ; call rax
0x0000000000404347 : mov esi, dword ptr [rcx] ; call rax
0x0000000000401a80 : mov esi, eax ; mov edi, 0x6132c8 ; jmp rdx
0x00000000004043b9 : mov esi, eax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000040d6b7 : mov esp, ebp ; pop rbp ; ret
0x0000000000403b4c : mov qword ptr [0x613358], rdi ; pop rbp ; ret
0x0000000000404664 : mov qword ptr [rbp - 8], rax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004073cd : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040dcab : mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x0000000000405fcf : mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040c2ad : mov qword ptr [rsi], rdi ; pop rbp ; ret
0x00000000004042bd : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040904a : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000405ac2 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403dc2 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407184 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000403d1e : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040a932 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040713c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404068 : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040ab6d : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004043bb : mov rax, qword ptr [rbp - 0x20] ; call rax
0x0000000000405b6e : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040749e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000409048 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000406097 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040448b : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004024f6 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404754 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040e73e : mov rax, qword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000405a62 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040ade8 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000404668 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000403f4c : mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000403f6c : mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000403f8c : mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000040ae3d : mov rax, r8 ; pop rbp ; ret
0x00000000004049f0 : mov rax, rdx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406284 : mov rax, rdx ; pop rbp ; ret
0x0000000000401aca : mov rbp, rsp ; call rax
0x0000000000401a30 : mov rbp, rsp ; ja 0x401a3d ; pop rbp ; ret
0x0000000000407561 : mov rcx, qword ptr [rax*8 + 0x40fd50] ; jmp rcx
0x0000000000407885 : mov rcx, qword ptr [rax*8 + 0x40fd98] ; jmp rcx
0x0000000000409d2d : mov rcx, qword ptr [rax*8 + 0x410250] ; jmp rcx
0x0000000000404d51 : mov rcx, qword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000404cee : mov rcx, qword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000404342 : mov rcx, qword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000405912 : mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x00000000004059df : mov rcx, qword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000405fcb : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000403f48 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000403f68 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000403f88 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000404cf2 : mov rdi, qword ptr [rcx] ; call rax
0x00000000004046d8 : mov rdi, qword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x00000000004046db : mov rsi, qword ptr [rbp - 0x20] ; call rax
0x0000000000404346 : mov rsi, qword ptr [rcx] ; call rax
0x0000000000401a7f : mov rsi, rax ; mov edi, 0x6132c8 ; jmp rdx
0x00000000004043b8 : mov rsi, rax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000040d6b6 : mov rsp, rbp ; pop rbp ; ret
0x0000000000402844 : movzx eax, al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403f34 : movzx eax, al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000402b0f : movzx eax, al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040d6b3 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000402709 : movzx eax, al ; pop rbp ; ret
0x000000000040b237 : movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000040b10f : movzx eax, ax ; pop rbp ; ret
0x00000000004061a4 : movzx eax, bh ; pop rbp ; ret
0x00000000004061a3 : movzx eax, dil ; pop rbp ; ret
0x000000000040f4b8 : nop dword ptr [rax + rax] ; ret
0x0000000000407bed : or al, 0x18 ; ret 0x6451
0x0000000000409d2f : or al, 0xffffffffffffffc5 ; push rax ; add al, byte ptr [rcx] ; jmp rcx
0x000000000040dc7d : or al, 1 ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004117a5 : or al, byte ptr [rax] ; add byte ptr [rax], cl ; jp 0x4117b0 ; jmp qword ptr [rax]
0x00000000004025dd : or byte ptr [rcx + 0x2ff9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000402619 : or byte ptr [rcx + 0x2ff9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000402651 : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5588
0x00000000004117a8 : or byte ptr [rdx - 1], bh ; jmp qword ptr [rax]
0x0000000000409231 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004118c5 : or eax, dword ptr [rax] ; add byte ptr [rax], bl ; jnp 0x4118d0 ; jmp qword ptr [rdx]
0x000000000040ae3b : or eax, edi ; mov rax, r8 ; pop rbp ; ret
0x000000000040b01f : or eax, edi ; pop rbp ; ret
0x000000000040af2a : or ecx, edx ; mov eax, r9d ; pop rbp ; ret
0x000000000040ae3a : or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x000000000040af29 : or r9d, edx ; mov eax, r9d ; pop rbp ; ret
0x000000000040b01e : or rax, rdi ; pop rbp ; ret
0x0000000000410c25 : out -1, al ; jmp rax
0x0000000000410c35 : out -1, eax ; jmp qword ptr [rax]
0x00000000004061a1 : out 1, eax ; movzx eax, dil ; pop rbp ; ret
0x0000000000404249 : outsb dx, byte ptr [rsi] ; ret 0x280f
0x000000000040f4ac : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000408ad1 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040f4ae : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000408ad3 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040f4b0 : pop r14 ; pop r15 ; ret
0x0000000000408883 : pop r14 ; pop rbp ; ret
0x0000000000408ad5 : pop r15 ; pop rbp ; ret
0x000000000040f4b2 : pop r15 ; ret
0x0000000000403b50 : pop rax ; xor esp, dword ptr [rcx] ; pop rbp ; ret
0x0000000000401aa2 : pop rbp ; mov byte ptr [rip + 0x21188e], 1 ; ret
0x0000000000401a41 : pop rbp ; mov edi, 0x6132c8 ; jmp rax
0x0000000000401a7e : pop rbp ; mov rsi, rax ; mov edi, 0x6132c8 ; jmp rdx
0x000000000040f4ab : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040f4af : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401a35 : pop rbp ; ret
0x0000000000408ad0 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040a1ed : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000408882 : pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040b23a : pop rbx ; pop rbp ; ret
0x000000000040a371 : pop rbx ; ret
0x0000000000408ad6 : pop rdi ; pop rbp ; ret
0x000000000040f4b3 : pop rdi ; ret
0x0000000000408ad4 : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040f4b1 : pop rsi ; pop r15 ; ret
0x0000000000408884 : pop rsi ; pop rbp ; ret
0x000000000040f4ad : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000408ad2 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000404260 : pop rsp ; ret 0xf66
0x0000000000409d31 : push rax ; add al, byte ptr [rcx] ; jmp rcx
0x0000000000410be4 : push rax ; in al, -1 ; jmp rax
0x0000000000402b15 : push rax ; pop rbp ; ret
0x000000000040f8a4 : push rax ; ret
0x00000000004123a0 : push rax ; sar edi, 1 ; call qword ptr [rax]
0x0000000000400282 : push rbp ; add byte ptr [rsi], ch ; adc esi, dword ptr [rcx] ; sub dword ptr [rbx - 0x61], edx ; wait ; ret
0x000000000040cc73 : push rbp ; call 0x34dc5
0x000000000040d843 : push rbp ; enter -0x76b8, 0xc ; ret 0x59e9
0x00000000004065ea : push rbp ; fmul dword ptr [rax + 0x29] ; ret 0x148
0x0000000000401ac4 : push rbp ; mov edi, 0x612e20 ; mov rbp, rsp ; call rax
0x0000000000400288 : push rbx ; lahf ; wait ; ret
0x00000000004109a0 : rcl byte ptr [rax], 0 ; add al, dh ; mov bh, bh ; jmp rax
0x0000000000410ae0 : rcl byte ptr [rip - 0x56b00000], -1 ; jmp rax
0x0000000000410c20 : rcr byte ptr [rdx], 0 ; add al, dh ; out -1, al ; jmp rax
0x000000000040028b : ret
0x000000000040599c : ret 0
0x000000000040dd45 : ret 0x10
0x00000000004065ee : ret 0x148
0x000000000040def6 : ret 0x14e8
0x000000000040c355 : ret 0x18
0x0000000000408c6e : ret 0x1b2
0x0000000000401912 : ret 0x2118
0x0000000000401712 : ret 0x2119
0x000000000040622f : ret 0x2148
0x000000000040e3e9 : ret 0x21e8
0x000000000040424a : ret 0x280f
0x0000000000402d17 : ret 0x2948
0x0000000000407ff9 : ret 0x294c
0x0000000000408015 : ret 0x294d
0x000000000040db36 : ret 0x44e8
0x000000000040d12a : ret 0x4a3b
0x000000000040802d : ret 0x4de8
0x000000000040265a : ret 0x5588
0x0000000000407254 : ret 0x5589
0x000000000040d848 : ret 0x59e9
0x0000000000407bef : ret 0x6451
0x0000000000402e45 : ret 0x6eab
0x000000000040af06 : ret 0x8141
0x000000000040523e : ret 0x8148
0x0000000000404b93 : ret 0x8348
0x00000000004026ee : ret 0x840
0x00000000004026df : ret 0x8840
0x0000000000409ce9 : ret 0x8844
0x00000000004027ed : ret 0x8948
0x0000000000408018 : ret 0x8949
0x000000000040b179 : ret 0x8966
0x00000000004081ac : ret 0x89a5
0x0000000000407ffc : ret 0x8b48
0x000000000040af28 : ret 0x941
0x000000000040378f : ret 0x9be8
0x0000000000402173 : ret 0xb0
0x0000000000402d5e : ret 0xb848
0x000000000040bed9 : ret 0xb849
0x0000000000404c16 : ret 0xb948
0x000000000040b73e : ret 0xb949
0x00000000004030da : ret 0xbe86
0x000000000040c0f0 : ret 0xc
0x0000000000401a65 : ret 0xc148
0x000000000040678c : ret 0xc2f6
0x0000000000402074 : ret 0xca21
0x0000000000402420 : ret 0xca29
0x0000000000409b5f : ret 0xcbe8
0x000000000040985c : ret 0xcee8
0x000000000040b29f : ret 0xd088
0x0000000000409503 : ret 0xd284
0x0000000000401fed : ret 0xd709
0x00000000004025e6 : ret 0xe280
0x0000000000402c2f : ret 0xea81
0x00000000004088bc : ret 0xee8
0x00000000004068fd : ret 0xf01
0x00000000004082a8 : ret 0xf180
0x0000000000406042 : ret 0xf280
0x0000000000401f2c : ret 0xf281
0x0000000000404261 : ret 0xf66
0x000000000040b174 : ret 0xfa31
0x0000000000402d2d : ret 0xfde8
0x0000000000405620 : ret 0xff3
0x00000000004030ca : ret 0xffff
0x0000000000400718 : ret 1
0x000000000040bca0 : ret 2
0x000000000040b223 : rol byte ptr [rbp + 9], 1 ; ret
0x0000000000407316 : rol byte ptr [rcx + rcx*4], 1 ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040af2b : rol dword ptr [rcx + rcx*4 - 0x38], 1 ; pop rbp ; ret
0x000000000040d83f : ror byte ptr [r8 - 0x75], 0x55 ; enter -0x76b8, 0xc ; ret 0x59e9
0x000000000040a350 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x00000000004074a0 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x40750b ; ret
0x000000000040b01a : ror byte ptr [rax + 0x31], 1 ; xlatb ; or rax, rdi ; pop rbp ; ret
0x0000000000401a6c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401a7b ; pop rbp ; ret
0x000000000040d840 : ror byte ptr [rax - 0x75], 0x55 ; enter -0x76b8, 0xc ; ret 0x59e9
0x000000000040d6b5 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x000000000040a351 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000407fed : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000407ff6 : ror byte ptr [rax - 0x77], 1 ; ret 0x294c
0x0000000000402d2a : ror byte ptr [rax - 0x77], 1 ; ret 0xfde8
0x00000000004074a1 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x40750a ; ret
0x0000000000403f36 : ror byte ptr [rax - 0x7d], -0x3c ; pop rbp ; ret
0x0000000000402b11 : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x0000000000406c93 : ror byte ptr [rax - 0x7f], -0x3c ; jo 0x406ca3 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004096ba : ror byte ptr [rax - 0x7f], -0x3c ; jo 0x4096ca ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040b17c : ror byte ptr [rdi], 1 ; mov bh, -0x40 ; pop rbp ; ret
0x000000000040b2a1 : ror byte ptr [rdi], 1 ; mov dh, -0x40 ; pop rbp ; ret
0x000000000040b236 : ror byte ptr [rdi], 1 ; mov dh, -0x40 ; pop rbx ; pop rbp ; ret
0x000000000040e7af : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x000000000040b748 : ror dword ptr [rbp - 0x77], cl ; ret
0x0000000000401a3e : sal byte ptr [rsp + rsi*8 + 0x5d], -0x41 ; enter 0x6132, 0 ; jmp rax
0x0000000000401a6e : sar eax, 1 ; jne 0x401a79 ; pop rbp ; ret
0x00000000004123a1 : sar edi, 1 ; call qword ptr [rax]
0x0000000000401a6d : sar rax, 1 ; jne 0x401a7a ; pop rbp ; ret
0x00000000004123b8 : sar rdi, 1 ; call qword ptr [rax]
0x0000000000410bf1 : sbb al, byte ptr [rax] ; add al, ah ; in al, -1 ; jmp qword ptr [rax]
0x0000000000410c21 : sbb al, byte ptr [rax] ; add al, dh ; out -1, al ; jmp rax
0x00000000004118c8 : sbb byte ptr [rbx - 1], bh ; jmp qword ptr [rdx]
0x0000000000401aa6 : sbb byte ptr [rcx], ah ; add byte ptr [rcx], al ; ret
0x0000000000410bb1 : sbb dword ptr [rax], eax ; add byte ptr [rax], dl ; loope 0x410bbc ; jmp qword ptr [rax]
0x0000000000404a14 : sete al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040f328 : setne al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000404a16 : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000040427f : shl dword ptr [rsi + 0xf], 0x5c ; ret 0xf66
0x000000000040ea88 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040c361 : stosd dword ptr [rdi], eax ; add byte ptr cs:[rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000410ec1 : sub al, -1 ; call qword ptr [rsi]
0x0000000000412004 : sub al, 0x13 ; add byte ptr [rax], al ; call 0xffffffffe1411fdb
0x0000000000400287 : sub dword ptr [rbx - 0x61], edx ; wait ; ret
0x000000000040a36f : sub dword ptr [rdx], 0x5b ; ret
0x000000000040f511 : sub esp, 8 ; add rsp, 8 ; ret
0x000000000040f510 : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000410935 : test bh, bh ; jmp qword ptr [rax]
0x000000000040f4ba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000401af3 : test byte ptr [rdx], cl ; add byte ptr [rax], al ; add al, ch ; ret
0x000000000040028a : wait ; ret
0x0000000000402659 : xchg eax, ebp ; ret 0x5588
0x00000000004026de : xchg eax, ebp ; ret 0x8840
0x000000000040f1f6 : xchg eax, ebp ; ret 0xd284
0x00000000004025e5 : xchg eax, ebp ; ret 0xe280
0x000000000040f329 : xchg eax, ebp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000409502 : xchg eax, esp ; ret 0xd284
0x0000000000402621 : xchg eax, esp ; ret 0xe280
0x0000000000404a15 : xchg eax, esp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000040ae39 : xlatb ; or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x000000000040b01d : xlatb ; or rax, rdi ; pop rbp ; ret
0x0000000000401a44 : xor ah, byte ptr [rcx] ; jmp rax
0x0000000000401a84 : xor ah, byte ptr [rcx] ; jmp rdx
0x000000000040b666 : xor al, 0x6a ; imul eax, dword ptr [rax - 0x77], 0x7a ; add cl, byte ptr [rax - 0x77] ; ret 0x148
0x000000000040bfce : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000400286 : xor dword ptr [rcx], ebp ; push rbx ; lahf ; wait ; ret
0x0000000000408fc7 : xor eax, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x0000000000407315 : xor eax, edx ; mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004110c1 : xor edi, edi ; call rbx
0x000000000040ae38 : xor edi, edx ; or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x000000000040b01c : xor edi, edx ; or rax, rdi ; pop rbp ; ret
0x000000000040653c : xor esp, dword ptr [rcx] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403b51 : xor esp, dword ptr [rcx] ; pop rbp ; ret
0x000000000040b01b : xor rdi, rdx ; or rax, rdi ; pop rbp ; ret
