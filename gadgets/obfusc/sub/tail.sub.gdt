0x0000000000405462 : adc ah, byte ptr [rdx] ; mov word ptr [rcx - 0xf], es ; jmp qword ptr [rcx]
0x0000000000416824 : adc al, 0xb ; add byte ptr [rax], al ; cmp byte ptr [rdx - 1], ah ; call rdi
0x0000000000415971 : adc al, byte ptr [rax] ; add byte ptr [rax], dl ; jp 0x41597c ; jmp rax
0x0000000000409f1f : adc byte ptr [rbp - 8], al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000408551 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004157c4 : adc byte ptr [rdi - 1], al ; jmp qword ptr [rax]
0x0000000000415974 : adc byte ptr [rdx - 1], bh ; jmp rax
0x00000000004121d5 : adc cl, byte ptr [rax + 1] ; ret 0x8948
0x0000000000415931 : adc dword ptr [rax], eax ; add al, ah ; je 0x41593c ; jmp rax
0x000000000040e7a9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000415981 : adc eax, dword ptr [rax] ; add byte ptr [rax], dh ; mov dr1, edi ; jmp qword ptr [rax]
0x00000000004169eb : add ah, bl ; or al, 0 ; add al, dl ; jge 0x4169fa ; jmp rdx
0x0000000000415705 : add al, -1 ; jmp qword ptr [rax]
0x000000000041134d : add al, 0x21 ; ret 0xd709
0x0000000000409f6e : add al, 0x25 ; nop ; and dword ptr [rcx], 0x5d ; ret
0x000000000040ab2a : add al, 0x48 ; add eax, ecx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000415933 : add al, ah ; je 0x41593a ; jmp rax
0x0000000000415eb7 : add al, ch ; fdivr st(6) ; call rcx
0x00000000004057cb : add al, ch ; out dx, eax ; ret 0xffff
0x0000000000405760 : add al, ch ; pop rdx ; ret
0x0000000000401fe8 : add al, ch ; ret 0xfffa
0x0000000000415b9b : add al, dh ; ret
0x00000000004169ef : add al, dl ; jge 0x4169f6 ; jmp rdx
0x00000000004173ef : add al, dl ; mov dh, -1 ; jmp rax
0x0000000000416ccf : add al, dl ; test bh, bh ; call qword ptr [rdx]
0x00000000004156f5 : add bh, bh ; jmp rax
0x000000000041331f : add bl, dh ; ret
0x000000000040ba69 : add byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000040906c : add byte ptr [rax + 1], cl ; ret 0x3948
0x0000000000403cad : add byte ptr [rax + 1], cl ; ret 0x4a3b
0x0000000000404c0e : add byte ptr [rax + 1], cl ; ret 0x7a81
0x0000000000404cc1 : add byte ptr [rax + 1], cl ; ret 0x8944
0x0000000000404cd7 : add byte ptr [rax + 1], cl ; ret 0xc748
0x000000000040a1ab : add byte ptr [rax - 0x75], cl ; call 0x49032b03
0x000000000040ae3f : add byte ptr [rax - 0x75], cl ; fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x00000000004102fa : add byte ptr [rax - 0x75], cl ; loopne 0x410351 ; mov edi, dword ptr [rbp - 8] ; call rax
0x000000000040fb7d : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000040f20d : add byte ptr [rax - 0x77], cl ; jge 0x40f210 ; pop rbp ; ret
0x0000000000408c29 : add byte ptr [rax - 0x77], cl ; ret 0x348
0x00000000004098a1 : add byte ptr [rax - 0x77], cl ; ret 0x56e8
0x0000000000402c89 : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x0000000000409444 : add byte ptr [rax - 0x77], cl ; ret 0xb3e8
0x0000000000415b8b : add byte ptr [rax], ah ; ret 0xffff
0x0000000000416822 : add byte ptr [rax], al ; adc al, 0xb ; add byte ptr [rax], al ; cmp byte ptr [rdx - 1], ah ; call rdi
0x00000000004157c2 : add byte ptr [rax], al ; adc byte ptr [rdi - 1], al ; jmp qword ptr [rax]
0x0000000000415972 : add byte ptr [rax], al ; adc byte ptr [rdx - 1], bh ; jmp rax
0x0000000000415702 : add byte ptr [rax], al ; add al, -1 ; jmp qword ptr [rax]
0x000000000041331d : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040ba67 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000040906a : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x3948
0x0000000000403cab : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x4a3b
0x0000000000404c0c : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x7a81
0x0000000000404cbf : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8944
0x0000000000404cd5 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0xc748
0x000000000040a1a9 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; call 0x49032b05
0x000000000040ae3d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x000000000040f20b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jge 0x40f212 ; pop rbp ; ret
0x0000000000408c27 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x348
0x000000000040989f : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x56e8
0x0000000000409442 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb3e8
0x000000000041331b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000408c25 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x348
0x0000000000408c23 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x348
0x0000000000400968 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000004008f0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x000000000040096a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000004008f2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x000000000040b4dd : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000410b29 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040f20a : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000040ca4a : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000041331c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040096c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000004008f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x0000000000411372 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000402e75 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b72bb3], cl ; ret 0xb0
0x000000000040de4e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x000000000040f0be : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004026fb : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x00000000004076cf : add byte ptr [rax], al ; add cl, ch ; ret
0x000000000041274c : add byte ptr [rax], al ; add cl, ch ; ret 2
0x000000000040e771 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040b4df : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004016d3 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000415eb6 : add byte ptr [rax], al ; call 0xffffffffd2415d9a
0x0000000000415db6 : add byte ptr [rax], al ; call 0xffffffffe3415c82
0x0000000000416826 : add byte ptr [rax], al ; cmp byte ptr [rdx - 1], ah ; call rdi
0x00000000004161a6 : add byte ptr [rax], al ; cwde ; sub edi, edi ; jmp qword ptr [rdx]
0x00000000004169ea : add byte ptr [rax], al ; fmul qword ptr [rax + rax] ; add al, dl ; jge 0x4169fb ; jmp rdx
0x00000000004017a9 : add byte ptr [rax], al ; jmp 0x4016e9
0x0000000000410b2b : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000416cca : add byte ptr [rax], al ; mov esp, 0xd000000f ; test bh, bh ; call qword ptr [rdx]
0x000000000040f20c : add byte ptr [rax], al ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000040cd42 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040ca4c : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000415eb2 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], eax ; add al, ch ; fdivr st(6) ; call rcx
0x00000000004156f2 : add byte ptr [rax], al ; nop ; add bh, bh ; jmp rax
0x0000000000415742 : add byte ptr [rax], al ; or edi, edi ; jmp qword ptr [rax]
0x0000000000402fcf : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040fa1b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040e440 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004058e4 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000041331e : add byte ptr [rax], al ; ret
0x000000000040096e : add byte ptr [rax], al ; ret 0
0x00000000004008f6 : add byte ptr [rax], al ; ret 2
0x00000000004169ee : add byte ptr [rax], al ; sar byte ptr [rbp - 1], 1 ; jmp rdx
0x00000000004156b2 : add byte ptr [rax], al ; sbb cl, -2 ; call rax
0x0000000000416946 : add byte ptr [rax], al ; sub byte ptr [rdi - 1], ah ; call rdi
0x0000000000416942 : add byte ptr [rax], al ; xor al, 0xc ; add byte ptr [rax], al ; sub byte ptr [rdi - 1], ah ; call rdi
0x0000000000415983 : add byte ptr [rax], dh ; mov dr1, edi ; jmp qword ptr [rax]
0x0000000000415973 : add byte ptr [rax], dl ; jp 0x41597a ; jmp rax
0x0000000000415733 : add byte ptr [rax], dl ; or bh, bh ; jmp rax
0x000000000040fa1c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040e441 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000405073 : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004058e5 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000416823 : add byte ptr [rbx + rcx], dl ; add byte ptr [rax], al ; cmp byte ptr [rdx - 1], ah ; call rdi
0x0000000000404f8f : add byte ptr [rbx - 0x16b4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000405052 : add byte ptr [rbx - 0x1734b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004041b3 : add byte ptr [rbx - 0x22b4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004042ae : add byte ptr [rbx - 0x22f4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000402e77 : add byte ptr [rbx - 0x76b72bb3], cl ; ret 0xb0
0x00000000004024e1 : add byte ptr [rbx - 0x834b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040253c : add byte ptr [rbx - 0x874b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000407ea9 : add byte ptr [rbx - 0xe34b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004131bc : add byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x0000000000401c58 : add byte ptr [rcx], al ; ret
0x0000000000415700 : add byte ptr [rcx], cl ; add byte ptr [rax], al ; add al, -1 ; jmp qword ptr [rax]
0x0000000000412748 : add byte ptr [rdi], cl ; lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x000000000040de50 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x000000000040f0c0 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004026fd : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000415740 : add byte ptr [rdx], cl ; add byte ptr [rax], al ; or edi, edi ; jmp qword ptr [rax]
0x000000000040a99d : add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x0000000000416943 : add byte ptr [rsp + rcx], dh ; add byte ptr [rax], al ; sub byte ptr [rdi - 1], ah ; call rdi
0x000000000040a2ac : add cl, byte ptr [rax - 0x77] ; ret 0x148
0x00000000004076d1 : add cl, ch ; ret
0x000000000041274e : add cl, ch ; ret 2
0x0000000000403c73 : add dh, al ; movsd dword ptr [rdi], dword ptr [rsi] ; add eax, ebp ; ret
0x000000000040c8e2 : add dword ptr [rax + 0xf], eax ; mov dh, -0x39 ; pop rbp ; ret
0x0000000000410059 : add dword ptr [rax - 0x77], ecx ; ret 0x8148
0x0000000000415eb5 : add dword ptr [rax], eax ; add al, ch ; fdivr st(6) ; call rcx
0x000000000040e76f : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040fa1a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040e43f : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x00000000004058e3 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000403091 : add dword ptr [rax], ecx ; ret 0x840
0x00000000004103a4 : add dword ptr [rdi], ecx ; mov dh, -0x3f ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000407c0f : add dword ptr [rdi], ecx ; mov dh, -0x3f ; pop rbp ; ret
0x00000000004036e4 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407f3b : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040bac9 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004028d2 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000403791 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401c54 : add eax, 0x21671e ; add ebx, esi ; ret
0x000000000041274b : add eax, 0xe9000000 ; ret 2
0x0000000000403c77 : add eax, ebp ; ret
0x000000000040ab2c : add eax, ecx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401c1b : add eax, edx ; sar rax, 1 ; jne 0x401c2c ; pop rbp ; ret
0x0000000000401c59 : add ebx, esi ; ret
0x0000000000405cee : add ecx, ebp ; ret
0x0000000000401e6b : add esp, 0x10 ; pop rbp ; ret
0x000000000040854f : add esp, 0x110 ; pop rbp ; ret
0x0000000000412a7c : add esp, 0x130 ; pop rbp ; ret
0x00000000004058e0 : add esp, 0x148 ; pop rbx ; pop rbp ; ret
0x000000000040fd4c : add esp, 0x1a0 ; pop rbp ; ret
0x000000000040a66c : add esp, 0x1b0 ; pop rbp ; ret
0x000000000041186e : add esp, 0x1e0 ; pop rbp ; ret
0x00000000004036e9 : add esp, 0x20 ; pop rbp ; ret
0x00000000004086ff : add esp, 0x2050 ; pop rbp ; ret
0x0000000000405cb1 : add esp, 0x2060 ; pop rbp ; ret
0x00000000004092e0 : add esp, 0x20b0 ; pop rbp ; ret
0x0000000000401f7d : add esp, 0x30 ; pop rbp ; ret
0x000000000040619a : add esp, 0x40 ; pop rbp ; ret
0x0000000000409b4a : add esp, 0x50 ; pop rbp ; ret
0x0000000000407b9e : add esp, 0x588 ; pop rbp ; ret
0x0000000000405992 : add esp, 0x60 ; pop rbp ; ret
0x00000000004028d7 : add esp, 0x70 ; pop rbp ; ret
0x000000000040b893 : add esp, 0x80 ; pop rbp ; ret
0x000000000040ea9a : add esp, 0x90 ; pop rbp ; ret
0x00000000004099d5 : add esp, 0xa0 ; pop rbp ; ret
0x0000000000403869 : add esp, 0xb0 ; pop rbp ; ret
0x000000000040bfcc : add esp, 0xc0 ; pop rbp ; ret
0x0000000000402fcb : add esp, 0xd0 ; pop rbp ; ret
0x000000000041136f : add esp, 0xd8 ; pop rbx ; pop rbp ; ret
0x0000000000410ac5 : add esp, 0xe0 ; pop rbp ; ret
0x0000000000403494 : add esp, 0xf0 ; pop rbp ; ret
0x00000000004016d6 : add esp, 8 ; ret
0x00000000004058e2 : add qword ptr [rax], rax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000403c72 : add r14b, al ; movsd dword ptr [rdi], dword ptr [rsi] ; add eax, ebp ; ret
0x0000000000401fe7 : add r8b, bpl ; ret 0xfffa
0x000000000040ab2b : add rax, rcx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401c1a : add rax, rdx ; sar rax, 1 ; jne 0x401c2d ; pop rbp ; ret
0x0000000000401e6a : add rsp, 0x10 ; pop rbp ; ret
0x000000000040854e : add rsp, 0x110 ; pop rbp ; ret
0x0000000000412a7b : add rsp, 0x130 ; pop rbp ; ret
0x00000000004058df : add rsp, 0x148 ; pop rbx ; pop rbp ; ret
0x000000000040fd4b : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000040a66b : add rsp, 0x1b0 ; pop rbp ; ret
0x000000000041186d : add rsp, 0x1e0 ; pop rbp ; ret
0x00000000004036e8 : add rsp, 0x20 ; pop rbp ; ret
0x00000000004086fe : add rsp, 0x2050 ; pop rbp ; ret
0x0000000000405cb0 : add rsp, 0x2060 ; pop rbp ; ret
0x00000000004092df : add rsp, 0x20b0 ; pop rbp ; ret
0x0000000000401f7c : add rsp, 0x30 ; pop rbp ; ret
0x0000000000406199 : add rsp, 0x40 ; pop rbp ; ret
0x0000000000409b49 : add rsp, 0x50 ; pop rbp ; ret
0x0000000000407b9d : add rsp, 0x588 ; pop rbp ; ret
0x0000000000405991 : add rsp, 0x60 ; pop rbp ; ret
0x00000000004028d6 : add rsp, 0x70 ; pop rbp ; ret
0x000000000040b892 : add rsp, 0x80 ; pop rbp ; ret
0x000000000040ea99 : add rsp, 0x90 ; pop rbp ; ret
0x00000000004099d4 : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000403868 : add rsp, 0xb0 ; pop rbp ; ret
0x000000000040bfcb : add rsp, 0xc0 ; pop rbp ; ret
0x0000000000402fca : add rsp, 0xd0 ; pop rbp ; ret
0x000000000041136e : add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x0000000000410ac4 : add rsp, 0xe0 ; pop rbp ; ret
0x0000000000403493 : add rsp, 0xf0 ; pop rbp ; ret
0x00000000004016d5 : add rsp, 8 ; ret
0x000000000040f3ec : addps xmm1, xmm2 ; movaps xmm0, xmm1 ; pop rbp ; ret
0x000000000040f3eb : addsd xmm1, xmm2 ; movaps xmm0, xmm1 ; pop rbp ; ret
0x000000000040377a : and al, 0xffffffffffffffcb ; ret 0x148
0x0000000000403767 : and al, 0xffffffffffffffcb ; ret 0x2948
0x0000000000403790 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040c8e0 : and bh, 1 ; movzx eax, dil ; pop rbp ; ret
0x00000000004107e1 : and byte ptr [rcx + rax*2], dl ; jmp rcx
0x0000000000407c0d : and cl, 1 ; movzx eax, cl ; pop rbp ; ret
0x0000000000405463 : and cl, byte ptr [rcx + rax*4 - 0xf] ; jmp qword ptr [rcx]
0x000000000040c8df : and dil, 1 ; movzx eax, dil ; pop rbp ; ret
0x0000000000401c56 : and dword ptr [eax], eax ; add ebx, esi ; ret
0x0000000000401c57 : and dword ptr [rax], eax ; add ebx, esi ; ret
0x000000000040cc7c : and dword ptr [rcx], 0x48 ; add esp, 0x30 ; pop rbp ; ret
0x0000000000409f71 : and dword ptr [rcx], 0x5d ; ret
0x000000000040910b : and eax, 0x294c6eb7 ; ret 0x2948
0x0000000000405697 : and eax, 0x41421a ; call 0x4018b7
0x000000000040af45 : and eax, 0x414b00 ; mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x0000000000409f6f : and eax, 0x618390 ; pop rbp ; ret
0x0000000000409f8f : and eax, 0x618398 ; pop rbp ; ret
0x0000000000409fb3 : and eax, 0x6183a0 ; pop rbp ; ret
0x0000000000411c69 : and eax, edx ; xor rdi, rdx ; or rax, rdi ; pop rbp ; ret
0x0000000000411eee : and edx, eax ; mov al, dl ; movzx eax, al ; pop rbp ; ret
0x0000000000411dc8 : and edx, eax ; mov ax, dx ; movzx eax, ax ; pop rbp ; ret
0x0000000000411b77 : and edx, eax ; or r9d, edx ; mov eax, r9d ; pop rbp ; ret
0x0000000000411e83 : and edx, ebx ; mov al, dl ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x0000000000411eed : and edx, r8d ; mov al, dl ; movzx eax, al ; pop rbp ; ret
0x0000000000405a51 : call 0x401729
0x000000000040556b : call 0x401842
0x000000000040569c : call 0x4018b2
0x00000000004057cc : call 0x401ac2
0x000000000040a1af : call 0x49032aff
0x000000000040a1ae : call 0x49032b00
0x0000000000415eb8 : call 0xffffffffd2415d98
0x0000000000415db8 : call 0xffffffffe3415c80
0x000000000040e479 : call 0xffffffffe9036dc9
0x000000000040e478 : call 0xffffffffe9036dca
0x000000000040b431 : call 0xffffffffff7a3f82
0x000000000040b430 : call 0xffffffffff7a3f83
0x000000000040b56f : call 0xffffffffff7a40c0
0x000000000040b56e : call 0xffffffffff7a40c1
0x00000000004132f9 : call qword ptr [r12 + rbx*8]
0x0000000000415687 : call qword ptr [rax]
0x000000000041638b : call qword ptr [rcx]
0x000000000041640b : call qword ptr [rdx]
0x000000000041630b : call qword ptr [rsi]
0x00000000004132fa : call qword ptr [rsp + rbx*8]
0x0000000000401c7d : call rax
0x000000000040e1cc : call rbx
0x0000000000415ebb : call rcx
0x000000000041682b : call rdi
0x000000000040c7da : clc ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000412a7a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x000000000040abce : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000409ea6 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000409df4 : clc ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000409b48 : clc ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040c1a5 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040c6d0 : clc ; add rsp, 0xc0 ; pop rbp ; ret
0x0000000000410302 : clc ; call rax
0x0000000000401c1f : clc ; jne 0x401c28 ; pop rbp ; ret
0x00000000004121d2 : clc ; jo 0x412183 ; adc cl, byte ptr [rax + 1] ; ret 0x8948
0x0000000000411d5a : clc ; mov ax, r8w ; movzx eax, ax ; pop rbp ; ret
0x000000000040cf15 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000041323f : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040c70e : clc ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040ada7 : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040a68b : clc ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040a6ab : clc ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040a6cb : clc ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000040f1ab : clc ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000040f1eb : clc ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000040f1cb : clc ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000411a8c : clc ; mov rax, r8 ; pop rbp ; ret
0x000000000040adab : clc ; pop rbp ; ret
0x0000000000410b28 : cld ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000401e97 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040f45e : cld ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004086fd : cld ; add rsp, 0x2050 ; pop rbp ; ret
0x0000000000408d58 : cld ; add rsp, 0x2060 ; pop rbp ; ret
0x0000000000411fba : cld ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000411a3d : cld ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000407b9c : cld ; add rsp, 0x588 ; pop rbp ; ret
0x000000000040bfca : cld ; add rsp, 0xc0 ; pop rbp ; ret
0x0000000000410ac3 : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000041323c : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000412bf3 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040f45b : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000411fb7 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000411a3a : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000410b2f : cld ; pop rbp ; ret
0x000000000040835f : cmovs ebp, dword ptr [rcx] ; ret 0x2948
0x0000000000416309 : cmp al, -1 ; call qword ptr [rsi]
0x0000000000409f8e : cmp al, 0x25 ; cwde ; and dword ptr [rcx], 0x5d ; ret
0x0000000000405a58 : cmp al, 0x25 ; ret 0x4141
0x0000000000416828 : cmp byte ptr [rdx - 1], ah ; call rdi
0x00000000004088ac : cmp cl, byte ptr [rax + 1] ; ret 0x8948
0x000000000040ae1a : cmp dword ptr [rax - 0x75], ecx ; jne 0x40ae04 ; call rax
0x0000000000411759 : cmp dword ptr [rdx - 0x76be63d5], ebx ; ret
0x0000000000410e96 : cmp eax, 0x8945c621 ; ret 0x8141
0x0000000000401bdd : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401bf0 ; pop rbp ; ret
0x00000000004088ab : cmp r9b, byte ptr [r8 + 1] ; ret 0x8948
0x0000000000409f90 : cwde ; and dword ptr [rcx], 0x5d ; ret
0x000000000040f55c : cwde ; mov rcx, qword ptr [rax*8 + 0x415068] ; jmp rcx
0x00000000004161a8 : cwde ; sub edi, edi ; jmp qword ptr [rdx]
0x0000000000409569 : dec dword ptr [rax + 0x29] ; ret 0x148
0x0000000000405a55 : dec dword ptr [rax - 0x73] ; cmp al, 0x25 ; ret 0x4141
0x00000000004107dc : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; and byte ptr [rcx + rax*2], dl ; jmp rcx
0x0000000000402a6a : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; nop ; xor eax, dword ptr [rcx] ; jmp rcx
0x000000000041085c : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; rcl byte ptr [rbx + 0x41], 0 ; jmp rcx
0x0000000000403d69 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x00000000004024e7 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040dbd2 : dec dword ptr [rcx - 0x77] ; ret 0x294d
0x0000000000407bd1 : div dword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x0000000000407bd0 : div qword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000040ae17 : enter -0x74b8, 0x39 ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x000000000040df60 : enter 0x4b05, 0x34 ; fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x000000000040f3af : enter 0x4d89, -0x14 ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000411371 : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000415eb9 : fdivr st(6) ; call rcx
0x000000000040df64 : fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x0000000000411e84 : fimul dword ptr [rax - 0x3f49f030] ; pop rbx ; pop rbp ; ret
0x000000000040a833 : fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x000000000040835c : fmul dword ptr [rax - 0x75] ; cmovs ebp, dword ptr [rcx] ; ret 0x2948
0x000000000040a834 : fmul dword ptr [rax - 0x77] ; ret 0x2948
0x00000000004169ec : fmul qword ptr [rax + rax] ; add al, dl ; jge 0x4169f9 ; jmp rdx
0x00000000004132fc : fmul qword ptr [rax - 0x7d] ; ret
0x00000000004156b5 : fsin ; call rax
0x0000000000401e69 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401bf0 : hlt ; pop rbp ; mov edi, 0x618310 ; jmp rax
0x000000000040a2a8 : imul eax, dword ptr [rax - 0x77], 0x7a ; add cl, byte ptr [rax - 0x77] ; ret 0x148
0x0000000000410bec : in al, dx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040f3b2 : in al, dx ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000040f3b5 : in al, dx ; pop rbp ; ret
0x00000000004112aa : in eax, -0x4a ; loope 0x4112d3 ; ret 0x8941
0x0000000000405409 : inc byte ptr [rcx - 0xf] ; jmp qword ptr [rcx]
0x000000000041597f : inc dword ptr [rax] ; adc eax, dword ptr [rax] ; add byte ptr [rax], dh ; mov dr1, edi ; jmp qword ptr [rax]
0x000000000040e1eb : inc dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x000000000041596f : inc eax ; adc al, byte ptr [rax] ; add byte ptr [rax], dl ; jp 0x41597e ; jmp rax
0x000000000041592f : inc eax ; adc dword ptr [rax], eax ; add al, ah ; je 0x41593e ; jmp rax
0x000000000041572f : inc eax ; or dword ptr [rax], eax ; add byte ptr [rax], dl ; or bh, bh ; jmp rax
0x000000000040fb85 : int 0x80
0x0000000000401be3 : ja 0x401bea ; pop rbp ; ret
0x000000000040c711 : ja 0x40c75e ; pop rbp ; ret
0x0000000000415945 : jbe 0x415948 ; jmp qword ptr [rax]
0x0000000000401bef : je 0x401bed ; pop rbp ; mov edi, 0x618310 ; jmp rax
0x0000000000415935 : je 0x415938 ; jmp rax
0x0000000000401fe5 : jge 0x40202a ; add r8b, bpl ; ret 0xfffa
0x000000000040a68a : jge 0x40a68b ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040a6aa : jge 0x40a6ab ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040a6ca : jge 0x40a6cb ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000040aa80 : jge 0x40aa73 ; mov rcx, qword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040c050 : jge 0x40c043 ; mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040c70d : jge 0x40c70e ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040f1aa : jge 0x40f1ab ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000040f1ca : jge 0x40f1cb ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000040f1ea : jge 0x40f1eb ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000040f210 : jge 0x40f20d ; pop rbp ; ret
0x0000000000410301 : jge 0x4102fd ; call rax
0x00000000004169f1 : jge 0x4169f4 ; jmp rdx
0x00000000004017ab : jmp 0x4016e7
0x000000000040b2d0 : jmp 0x49033c20
0x000000000040bd4e : jmp 0x4903469e
0x000000000040bdbb : jmp 0x4903470b
0x000000000040c54c : jmp 0x49034e9c
0x000000000040c5b9 : jmp 0x49034f09
0x0000000000412aac : jmp 0xffffffff838a2ab8
0x0000000000410058 : jmp 0xffffffffc2ca4862
0x0000000000415707 : jmp qword ptr [rax]
0x0000000000406821 : jmp qword ptr [rbx - 0x3d]
0x0000000000403266 : jmp qword ptr [rcx]
0x000000000041666b : jmp qword ptr [rdi]
0x00000000004161ab : jmp qword ptr [rdx]
0x0000000000401bf7 : jmp rax
0x0000000000402a44 : jmp rcx
0x0000000000401c37 : jmp rdx
0x0000000000401c20 : jne 0x401c27 ; pop rbp ; ret
0x0000000000407bd2 : jne 0x407bca ; mov rax, rdx ; pop rbp ; ret
0x000000000040aaf6 : jne 0x40aae1 ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000040ae1d : jne 0x40ae01 ; call rax
0x00000000004028d9 : jo 0x40293a ; ret
0x0000000000408b3c : jo 0x408b9d ; ret
0x000000000040d065 : jo 0x40d0c6 ; ret
0x000000000040e68f : jo 0x40e6f5 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040ed34 : jo 0x40ed95 ; ret
0x000000000040ee6e : jo 0x40eecf ; ret
0x000000000040f1cf : jo 0x40f230 ; ret
0x000000000040f1ce : jo 0x40f231 ; ret
0x00000000004121d3 : jo 0x412182 ; adc cl, byte ptr [rax + 1] ; ret 0x8948
0x0000000000415975 : jp 0x415978 ; jmp rax
0x000000000041274a : lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000405695 : lea ecx, dword ptr [0x41421a] ; call 0x4018b9
0x0000000000412202 : leave ; ret 0xf8ca
0x0000000000415b87 : ljmp ptr [rax] ; sbb eax, dword ptr [rax] ; add byte ptr [rax], ah ; ret 0xffff
0x0000000000405461 : lodsb al, byte ptr [rsi] ; adc ah, byte ptr [rdx] ; mov word ptr [rcx - 0xf], es ; jmp qword ptr [rcx]
0x0000000000407c0e : loope 0x407c17 ; movzx eax, cl ; pop rbp ; ret
0x00000000004112ac : loope 0x4112d1 ; ret 0x8941
0x0000000000405caf : loopne 0x405d02 ; add esp, 0x2060 ; pop rbp ; ret
0x000000000040aaf7 : loopne 0x40ab49 ; mov esi, eax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x00000000004102fe : loopne 0x41034d ; mov edi, dword ptr [rbp - 8] ; call rax
0x00000000004102fd : loopne 0x41034e ; mov edi, dword ptr [rbp - 8] ; call rax
0x0000000000410ac7 : loopne 0x410ace ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004112a8 : loopne 0x4112c4 ; in eax, -0x4a ; loope 0x4112d5 ; ret 0x8941
0x0000000000411870 : loopne 0x411878 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004121d0 : mov ah, -0x17 ; clc ; jo 0x412185 ; adc cl, byte ptr [rax + 1] ; ret 0x8948
0x000000000040a9fe : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040386b : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004057ca : mov al, 0 ; call 0x401ac4
0x00000000004092e2 : mov al, 0x20 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000409d5a : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040ea98 : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x000000000040a66e : mov al, 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004156b0 : mov al, 7 ; add byte ptr [rax], al ; sbb cl, -2 ; call rax
0x000000000040378d : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000412d56 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000411ef0 : mov al, dl ; movzx eax, al ; pop rbp ; ret
0x0000000000411e85 : mov al, dl ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x0000000000411dca : mov ax, dx ; movzx eax, ax ; pop rbp ; ret
0x0000000000411d5b : mov ax, r8w ; movzx eax, ax ; pop rbp ; ret
0x0000000000411d60 : mov bh, -0x40 ; pop rbp ; ret
0x0000000000409fb1 : mov byte ptr [0x6183a0], al ; pop rbp ; ret
0x0000000000406195 : mov byte ptr [rax + 0x34], 0 ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000401c53 : mov byte ptr [rip + 0x21671e], 1 ; ret
0x000000000040f3ae : mov dh, -0x38 ; mov dword ptr [rbp - 0x14], ecx ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000040c8e5 : mov dh, -0x39 ; pop rbp ; ret
0x00000000004103a6 : mov dh, -0x3f ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000407c11 : mov dh, -0x3f ; pop rbp ; ret
0x00000000004036e6 : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407f3d : mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040bacb : mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004028d4 : mov dh, -0x40 ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000403793 : mov dh, -0x40 ; pop rbp ; ret
0x0000000000411e88 : mov dh, -0x40 ; pop rbx ; pop rbp ; ret
0x00000000004173f1 : mov dh, -1 ; jmp rax
0x0000000000415985 : mov dr1, edi ; jmp qword ptr [rax]
0x0000000000409f8d : mov dword ptr [0x618398], edi ; pop rbp ; ret
0x0000000000405564 : mov dword ptr [rax + 0x3c], 0xffffffff ; call 0x401849
0x000000000040cf16 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040ced8 : mov dword ptr [rax], eax ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040cd94 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040ced7 : mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040f3b0 : mov dword ptr [rbp - 0x14], ecx ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000040f34a : mov dword ptr [rbp - 0x24], eax ; mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x0000000000401f79 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040a9fc : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000409d58 : mov dword ptr [rbp - 0x50], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401e67 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401e95 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041323d : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040ada5 : mov dword ptr [rbp - 8], eax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040f20f : mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x000000000040cf8e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040af4a : mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x000000000040c710 : mov dword ptr [rdi + 0x48], esi ; pop rbp ; ret
0x0000000000409105 : mov eax, 0xa1c86031 ; ret
0x0000000000409f6d : mov eax, dword ptr [0x618390] ; pop rbp ; ret
0x000000000040cd48 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040593c : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040a443 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040cd45 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040f231 : mov eax, dword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040a39f : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000410bea : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040f3b3 : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000040a1d0 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403635 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040cd8e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040a7a9 : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040aafc : mov eax, dword ptr [rbp - 0x20] ; call rax
0x00000000004102fc : mov eax, dword ptr [rbp - 0x20] ; mov rdi, qword ptr [rbp - 8] ; call rax
0x000000000040f34d : mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x000000000040c2af : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040598e : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040ceda : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040d05f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040ec09 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000412bf4 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040f45c : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000411fb8 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000411a3b : mov eax, dword ptr [rbp - 4] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000410b2d : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040c7d8 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040abcc : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000409ea4 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000409df2 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000409b46 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040c1a3 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040ada9 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040a68d : mov eax, dword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040a6ad : mov eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040a6cd : mov eax, dword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000040f1ad : mov eax, dword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000040f1ed : mov eax, dword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000040f1cd : mov eax, dword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000411d5d : mov eax, eax ; movzx eax, ax ; pop rbp ; ret
0x0000000000411a8e : mov eax, eax ; pop rbp ; ret
0x000000000040cb2f : mov eax, ecx ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000411b7d : mov eax, ecx ; pop rbp ; ret
0x000000000040b131 : mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000411dcb : mov eax, edx ; movzx eax, ax ; pop rbp ; ret
0x0000000000407bd5 : mov eax, edx ; pop rbp ; ret
0x0000000000411d5c : mov eax, r8d ; movzx eax, ax ; pop rbp ; ret
0x0000000000411b7c : mov eax, r9d ; pop rbp ; ret
0x0000000000401c7b : mov ebp, esp ; call rax
0x0000000000401be1 : mov ebp, esp ; ja 0x401bec ; pop rbp ; ret
0x00000000004016d1 : mov ebx, 0x48000002 ; add esp, 8 ; ret
0x000000000040fb9d : mov ecx, 0x5b2a830a ; ret
0x00000000004121fd : mov ecx, 0x8d1c8842 ; leave ; ret 0xf8ca
0x00000000004090f5 : mov ecx, 0xa1c86031 ; ret
0x0000000000402a6c : mov ecx, dword ptr [rax*8 + 0x413390] ; jmp rcx
0x0000000000402a3d : mov ecx, dword ptr [rax*8 + 0x4133c0] ; jmp rcx
0x000000000040705e : mov ecx, dword ptr [rax*8 + 0x413408] ; jmp rcx
0x000000000040d122 : mov ecx, dword ptr [rax*8 + 0x414b60] ; jmp rcx
0x000000000040d446 : mov ecx, dword ptr [rax*8 + 0x414ba8] ; jmp rcx
0x000000000040f55e : mov ecx, dword ptr [rax*8 + 0x415068] ; jmp rcx
0x000000000041085e : mov ecx, dword ptr [rax*8 + 0x4153c0] ; jmp rcx
0x00000000004107de : mov ecx, dword ptr [rax*8 + 0x415420] ; jmp rcx
0x000000000041110a : mov ecx, dword ptr [rax*8 + 0x415508] ; jmp rcx
0x000000000041108a : mov ecx, dword ptr [rax*8 + 0x415568] ; jmp rcx
0x000000000040cd91 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040b492 : mov ecx, dword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040b42f : mov ecx, dword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040aa83 : mov ecx, dword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040c053 : mov ecx, dword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040c120 : mov ecx, dword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x00000000004057c8 : mov ecx, eax ; mov al, 0 ; call 0x401ac6
0x000000000040cb2d : mov ecx, eax ; mov eax, ecx ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401c75 : mov edi, 0x617e20 ; mov rbp, rsp ; call rax
0x0000000000401bf2 : mov edi, 0x618310 ; jmp rax
0x0000000000401c32 : mov edi, 0x618310 ; jmp rdx
0x0000000000410300 : mov edi, dword ptr [rbp - 8] ; call rax
0x000000000040c70c : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040a689 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040a6a9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040a6c9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000040f1a9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000040f1e9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000040f1c9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000040b433 : mov edi, dword ptr [rcx] ; call rax
0x000000000040ae19 : mov edi, dword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x00000000004132f7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x00000000004132f6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000412262 : mov edx, dword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040f235 : mov edx, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040ae1c : mov esi, dword ptr [rbp - 0x20] ; call rax
0x000000000040aa87 : mov esi, dword ptr [rcx] ; call rax
0x0000000000401c30 : mov esi, eax ; mov edi, 0x618310 ; jmp rdx
0x000000000040aaf9 : mov esi, eax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x0000000000405a53 : mov esp, 0x8d48ffff ; cmp al, 0x25 ; ret 0x4141
0x0000000000416ccc : mov esp, 0xd000000f ; test bh, bh ; call qword ptr [rdx]
0x0000000000409f8c : mov qword ptr [0x618398], rdi ; pop rbp ; ret
0x000000000040ada4 : mov qword ptr [rbp - 8], rax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040f20e : mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000040cf8d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040c70f : mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040a9fd : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000409d59 : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000409f6c : mov rax, qword ptr [0x618390] ; pop rbp ; ret
0x000000000040593b : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040a442 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040cd44 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040f230 : mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040a39e : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040a1cf : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403634 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040a7a8 : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040aafb : mov rax, qword ptr [rbp - 0x20] ; call rax
0x00000000004102fb : mov rax, qword ptr [rbp - 0x20] ; mov rdi, qword ptr [rbp - 8] ; call rax
0x000000000040c2ae : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040598d : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040d05e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040ec08 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040c7d7 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040abcb : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000409ea3 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000409df1 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000409b45 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040c1a2 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040ada8 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040a68c : mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040a6ac : mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040a6cc : mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000040f1ac : mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000040f1ec : mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000040f1cc : mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000411a8d : mov rax, r8 ; pop rbp ; ret
0x000000000040b130 : mov rax, rdx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407bd4 : mov rax, rdx ; pop rbp ; ret
0x0000000000401c7a : mov rbp, rsp ; call rax
0x0000000000401be0 : mov rbp, rsp ; ja 0x401bed ; pop rbp ; ret
0x0000000000402a6b : mov rcx, qword ptr [rax*8 + 0x413390] ; jmp rcx
0x0000000000402a3c : mov rcx, qword ptr [rax*8 + 0x4133c0] ; jmp rcx
0x000000000040705d : mov rcx, qword ptr [rax*8 + 0x413408] ; jmp rcx
0x000000000040d121 : mov rcx, qword ptr [rax*8 + 0x414b60] ; jmp rcx
0x000000000040d445 : mov rcx, qword ptr [rax*8 + 0x414ba8] ; jmp rcx
0x000000000040f55d : mov rcx, qword ptr [rax*8 + 0x415068] ; jmp rcx
0x000000000041085d : mov rcx, qword ptr [rax*8 + 0x4153c0] ; jmp rcx
0x00000000004107dd : mov rcx, qword ptr [rax*8 + 0x415420] ; jmp rcx
0x0000000000411109 : mov rcx, qword ptr [rax*8 + 0x415508] ; jmp rcx
0x0000000000411089 : mov rcx, qword ptr [rax*8 + 0x415568] ; jmp rcx
0x000000000040b491 : mov rcx, qword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040b42e : mov rcx, qword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040aa82 : mov rcx, qword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040c052 : mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040c11f : mov rcx, qword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x00000000004057c7 : mov rcx, rax ; mov al, 0 ; call 0x401ac7
0x00000000004102ff : mov rdi, qword ptr [rbp - 8] ; call rax
0x000000000040c70b : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040a688 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040a6a8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040a6c8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000040f1a8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000040f1e8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000040f1c8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000040b432 : mov rdi, qword ptr [rcx] ; call rax
0x000000000040ae18 : mov rdi, qword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x0000000000412261 : mov rdx, qword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040f234 : mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040ae1b : mov rsi, qword ptr [rbp - 0x20] ; call rax
0x000000000040aa86 : mov rsi, qword ptr [rcx] ; call rax
0x0000000000401c2f : mov rsi, rax ; mov edi, 0x618310 ; jmp rdx
0x000000000040aaf8 : mov rsi, rax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x0000000000405464 : mov word ptr [rcx - 0xf], es ; jmp qword ptr [rcx]
0x0000000000409006 : movabs al, byte ptr [0x148c82948ffffdf] ; ret 0x8948
0x0000000000415b94 : movabs al, byte ptr [0xf000001b68ffffc2] ; ret
0x0000000000410bc0 : movabs dword ptr [0x941c90941f0213f], eax ; ret 0x3145
0x000000000040f3ef : movaps xmm0, xmm1 ; pop rbp ; ret
0x0000000000415eb4 : movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], eax ; add al, ch ; fdivr st(6) ; call rcx
0x0000000000403c76 : movsd dword ptr [rdi], dword ptr [rsi] ; add eax, ebp ; ret
0x0000000000409f1e : movups xmm0, xmmword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004036e5 : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407f3c : movzx eax, al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040baca : movzx eax, al ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004028d3 : movzx eax, al ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000403792 : movzx eax, al ; pop rbp ; ret
0x0000000000411e87 : movzx eax, al ; pop rbx ; pop rbp ; ret
0x0000000000411d5f : movzx eax, ax ; pop rbp ; ret
0x000000000040c8e4 : movzx eax, bh ; pop rbp ; ret
0x00000000004103a5 : movzx eax, cl ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000407c10 : movzx eax, cl ; pop rbp ; ret
0x000000000040c8e3 : movzx eax, dil ; pop rbp ; ret
0x00000000004156f4 : nop ; add bh, bh ; jmp rax
0x0000000000409f70 : nop ; and dword ptr [rcx], 0x5d ; ret
0x0000000000402a6f : nop ; xor eax, dword ptr [rcx] ; jmp rcx
0x0000000000413318 : nop dword ptr [rax + rax] ; ret
0x00000000004169ed : or al, 0 ; add al, dl ; jge 0x4169f8 ; jmp rdx
0x000000000040d7ad : or al, 0x18 ; ret 0x6451
0x00000000004107df : or al, 0xffffffffffffffc5 ; and byte ptr [rcx + rax*2], dl ; jmp rcx
0x0000000000402a6d : or al, 0xffffffffffffffc5 ; nop ; xor eax, dword ptr [rcx] ; jmp rcx
0x000000000041085f : or al, 0xffffffffffffffc5 ; rcl byte ptr [rbx + 0x41], 0 ; jmp rcx
0x0000000000415735 : or bh, bh ; jmp rax
0x0000000000407e67 : or byte ptr [r8 + 0x29], r9b ; ret 0x2948
0x0000000000407e68 : or byte ptr [rax + 0x29], cl ; ret 0x2948
0x00000000004026f7 : or byte ptr [rcx + 0x63f9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000415731 : or dword ptr [rax], eax ; add byte ptr [rax], dl ; or bh, bh ; jmp rax
0x000000000041134b : or dword ptr [rsp + rax + 0x21], esp ; ret 0xd709
0x000000000040edf1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000411a8b : or eax, edi ; mov rax, r8 ; pop rbp ; ret
0x0000000000411c6f : or eax, edi ; pop rbp ; ret
0x0000000000411b7a : or ecx, edx ; mov eax, r9d ; pop rbp ; ret
0x0000000000415745 : or edi, edi ; jmp qword ptr [rax]
0x0000000000411a8a : or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x0000000000411b79 : or r9d, edx ; mov eax, r9d ; pop rbp ; ret
0x0000000000411c6e : or rax, rdi ; pop rbp ; ret
0x000000000040c8e1 : out 1, eax ; movzx eax, dil ; pop rbp ; ret
0x00000000004057cd : out dx, eax ; ret 0xffff
0x000000000040a989 : outsb dx, byte ptr [rsi] ; ret 0x280f
0x00000000004054cd : outsd dx, dword ptr [rsi] ; ret
0x0000000000404734 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041330c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405075 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000404736 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041330e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000404738 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000413310 : pop r14 ; pop r15 ; ret
0x000000000040e443 : pop r14 ; pop rbp ; ret
0x000000000040473a : pop r15 ; pop rbp ; ret
0x0000000000413312 : pop r15 ; ret
0x0000000000401c52 : pop rbp ; mov byte ptr [rip + 0x21671e], 1 ; ret
0x0000000000401bf1 : pop rbp ; mov edi, 0x618310 ; jmp rax
0x0000000000401c2e : pop rbp ; mov rsi, rax ; mov edi, 0x618310 ; jmp rdx
0x000000000041330b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000404737 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041330f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401be5 : pop rbp ; ret
0x0000000000405074 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040fa1d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040e442 : pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004058e6 : pop rbx ; pop rbp ; ret
0x000000000040fba1 : pop rbx ; ret
0x000000000040473b : pop rdi ; pop rbp ; ret
0x0000000000413313 : pop rdi ; ret
0x0000000000405762 : pop rdx ; ret
0x0000000000404739 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000413311 : pop rsi ; pop r15 ; ret
0x000000000040e444 : pop rsi ; pop rbp ; ret
0x0000000000404735 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041330d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405076 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040a9a0 : pop rsp ; ret 0xf66
0x0000000000415b98 : push -0xfffffe5 ; ret
0x000000000040cc7b : push 0x48006183 ; add esp, 0x30 ; pop rbp ; ret
0x00000000004156af : push qword ptr [rax - 0x7ffffff9] ; fsin ; call rax
0x000000000040f1ae : push r8 ; pop rbp ; ret
0x0000000000409b4c : push rax ; pop rbp ; ret
0x0000000000412263 : push rbp ; clc ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040f236 : push rbp ; clc ; pop rbp ; ret
0x0000000000401c74 : push rbp ; mov edi, 0x617e20 ; mov rbp, rsp ; call rax
0x0000000000409bb5 : push rbp ; ror byte ptr [rax - 0x77], 1 ; ret 0x91e8
0x0000000000410861 : rcl byte ptr [rbx + 0x41], 0 ; jmp rcx
0x0000000000415930 : rcl byte ptr [rcx], 0 ; add al, ah ; je 0x41593d ; jmp rax
0x0000000000415970 : rcl byte ptr [rdx], 0 ; add byte ptr [rax], dl ; jp 0x41597d ; jmp rax
0x0000000000400297 : ret
0x0000000000400970 : ret 0
0x000000000040377c : ret 0x148
0x000000000040e82e : ret 0x1b2
0x00000000004019b2 : ret 0x2167
0x00000000004017b2 : ret 0x2168
0x000000000040a605 : ret 0x26a8
0x000000000040a98a : ret 0x280f
0x00000000004022f8 : ret 0x2948
0x000000000040dbb9 : ret 0x294c
0x000000000040dbd5 : ret 0x294d
0x0000000000410bc9 : ret 0x3145
0x0000000000408c2c : ret 0x348
0x000000000040906f : ret 0x3948
0x0000000000405a5a : ret 0x4141
0x0000000000403cb0 : ret 0x4a3b
0x000000000040ce14 : ret 0x5589
0x00000000004098a4 : ret 0x56e8
0x000000000040d7af : ret 0x6451
0x0000000000404c11 : ret 0x7a81
0x00000000004109e9 : ret 0x8141
0x000000000040b97e : ret 0x8148
0x000000000040b2d3 : ret 0x8348
0x0000000000403093 : ret 0x840
0x0000000000404903 : ret 0x840f
0x000000000040de53 : ret 0x8840
0x000000000040f519 : ret 0x8844
0x00000000004033d8 : ret 0x8941
0x0000000000404cc4 : ret 0x8944
0x000000000040268d : ret 0x8948
0x000000000040dbd8 : ret 0x8949
0x00000000004033d5 : ret 0x894c
0x0000000000411dc9 : ret 0x8966
0x000000000040dd6c : ret 0x89a5
0x0000000000404d49 : ret 0x8b48
0x000000000040dbed : ret 0x8de8
0x0000000000409bb9 : ret 0x91e8
0x0000000000405168 : ret 0x941
0x000000000040a99a : ret 0xa0
0x000000000040225e : ret 0xb0
0x0000000000409447 : ret 0xb3e8
0x00000000004088a2 : ret 0xb848
0x0000000000409103 : ret 0xb849
0x000000000040b356 : ret 0xb948
0x0000000000410a29 : ret 0xc131
0x0000000000401c15 : ret 0xc148
0x00000000004126f0 : ret 0xc2f6
0x0000000000404cda : ret 0xc748
0x0000000000404afc : ret 0xca21
0x0000000000410b62 : ret 0xca29
0x0000000000411eef : ret 0xd088
0x000000000040f0c3 : ret 0xd284
0x0000000000410aa5 : ret 0xd709
0x0000000000402700 : ret 0xe280
0x0000000000404e15 : ret 0xe5e8
0x000000000040e47c : ret 0xee8
0x000000000040de68 : ret 0xf180
0x0000000000403077 : ret 0xf280
0x000000000040324e : ret 0xf281
0x000000000040a9a1 : ret 0xf66
0x0000000000412203 : ret 0xf8ca
0x0000000000411dc4 : ret 0xfa31
0x0000000000407cd8 : ret 0xfa81
0x000000000040bd60 : ret 0xff3
0x0000000000401fea : ret 0xfffa
0x000000000040556d : ret 0xffff
0x000000000040a24b : ret 1
0x00000000004008f8 : ret 2
0x000000000040a5ff : ret 8
0x0000000000402fcd : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000411e73 : rol byte ptr [rbp + 9], 1 ; ret
0x000000000040ced6 : rol byte ptr [rcx + rcx*4], 1 ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004040a4 : rol byte ptr [rcx - 0x77], 1 ; ret 0x8948
0x0000000000407c0c : rol dword ptr [rax - 0x49f0fe1f], -0x3f ; pop rbp ; ret
0x0000000000411b7b : rol dword ptr [rcx + rcx*4 - 0x38], 1 ; pop rbp ; ret
0x000000000040fb80 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000040d060 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x40d0cb ; ret
0x0000000000411c6a : ror byte ptr [rax + 0x31], 1 ; xlatb ; or rax, rdi ; pop rbp ; ret
0x0000000000401c1c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401c2b ; pop rbp ; ret
0x000000000040fb81 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x000000000040dbad : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x000000000040dbb6 : ror byte ptr [rax - 0x77], 1 ; ret 0x294c
0x0000000000409bb6 : ror byte ptr [rax - 0x77], 1 ; ret 0x91e8
0x00000000004028d5 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x40293e ; ret
0x0000000000408b38 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x408ba1 ; ret
0x000000000040d061 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x40d0ca ; ret
0x000000000040bacc : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x000000000040854d : ror byte ptr [rax - 0x7f], -0x3c ; adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000403867 : ror byte ptr [rax - 0x7f], -0x3c ; mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004092de : ror byte ptr [rax - 0x7f], -0x3c ; mov al, 0x20 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000406062 : ror byte ptr [rax - 0x7f], -0x3c ; rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000415730 : ror byte ptr [rcx], 0 ; add byte ptr [rax], dl ; or bh, bh ; jmp rax
0x0000000000411dcc : ror byte ptr [rdi], 1 ; mov bh, -0x40 ; pop rbp ; ret
0x0000000000411ef1 : ror byte ptr [rdi], 1 ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000411e86 : ror byte ptr [rdi], 1 ; mov dh, -0x40 ; pop rbx ; pop rbp ; ret
0x0000000000415830 : ror byte ptr [rip + 0x50600000], -1 ; jmp rax
0x00000000004103a7 : ror dword ptr [rax - 0x7d], -0x3c ; pop rbp ; ret
0x000000000040cb2e : ror dword ptr [rcx - 0x3b7cb738], 0x30 ; pop rbp ; ret
0x000000000040f3ea : sal dl, 1 ; addps xmm1, xmm2 ; movaps xmm0, xmm1 ; pop rbp ; ret
0x00000000004169f0 : sar byte ptr [rbp - 1], 1 ; jmp rdx
0x0000000000401c1e : sar eax, 1 ; jne 0x401c29 ; pop rbp ; ret
0x0000000000401c1d : sar rax, 1 ; jne 0x401c2a ; pop rbp ; ret
0x0000000000412200 : sbb al, -0x73 ; leave ; ret 0xf8ca
0x00000000004156b4 : sbb cl, -2 ; call rax
0x0000000000415b99 : sbb eax, dword ptr [rax] ; add al, dh ; ret
0x0000000000415b89 : sbb eax, dword ptr [rax] ; add byte ptr [rax], ah ; ret 0xffff
0x000000000040b154 : sete al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000405ebe : setne al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000403ca9 : shl byte ptr [rax], 0 ; add byte ptr [rax + 1], cl ; ret 0x4a3b
0x0000000000404c0a : shl byte ptr [rax], 0 ; add byte ptr [rax + 1], cl ; ret 0x7a81
0x0000000000404cbd : shl byte ptr [rax], 0 ; add byte ptr [rax + 1], cl ; ret 0x8944
0x0000000000404cd3 : shl byte ptr [rax], 0 ; add byte ptr [rax + 1], cl ; ret 0xc748
0x0000000000405ec0 : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000040a9bf : shl dword ptr [rsi + 0xf], 0x5c ; ret 0xf66
0x0000000000412d58 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000416948 : sub byte ptr [rdi - 1], ah ; call rdi
0x000000000040f3f0 : sub cl, al ; pop rbp ; ret
0x000000000040fb9f : sub dword ptr [rdx], 0x5b ; ret
0x00000000004161a9 : sub edi, edi ; jmp qword ptr [rdx]
0x0000000000415775 : sub edi, edi ; jmp rax
0x0000000000413371 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000413370 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000041134a : test al, 9 ; add al, 0x21 ; ret 0xd709
0x0000000000416cd1 : test bh, bh ; call qword ptr [rdx]
0x000000000041331a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000041110c : vandnps xmm8, xmm14, xmmword ptr [rcx] ; jmp rcx
0x000000000041108c : vandnps xmm8, xmm2, xmmword ptr [rcx] ; jmp rcx
0x00000000004107e0 : vandps xmm8, xmm11, xmmword ptr [rcx] ; jmp rcx
0x000000000040549d : xchg byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x000000000040de52 : xchg eax, ebp ; ret 0x8840
0x0000000000405ebf : xchg eax, ebp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000040f0c2 : xchg eax, esp ; ret 0xd284
0x00000000004026ff : xchg eax, esp ; ret 0xe280
0x0000000000407c0b : xchg eax, esp ; rol dword ptr [rax - 0x49f0fe1f], -0x3f ; pop rbp ; ret
0x000000000040b155 : xchg eax, esp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000411a89 : xlatb ; or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x0000000000411c6d : xlatb ; or rax, rdi ; pop rbp ; ret
0x0000000000406197 : xor al, 0 ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000401fe3 : xor al, 0x25 ; jge 0x40202c ; add r8b, bpl ; ret 0xfffa
0x000000000040a2a6 : xor al, 0x6a ; imul eax, dword ptr [rax - 0x77], 0x7a ; add cl, byte ptr [rax - 0x77] ; ret 0x148
0x0000000000416944 : xor al, 0xc ; add byte ptr [rax], al ; sub byte ptr [rdi - 1], ah ; call rdi
0x0000000000415785 : xor bh, bh ; jmp qword ptr [rax]
0x0000000000412a7e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040eb87 : xor eax, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x0000000000402a41 : xor eax, dword ptr [rcx] ; jmp rcx
0x000000000040ced5 : xor eax, edx ; mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000411a88 : xor edi, edx ; or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x0000000000411c6c : xor edi, edx ; or rax, rdi ; pop rbp ; ret
0x0000000000411c6b : xor rdi, rdx ; or rax, rdi ; pop rbp ; ret
