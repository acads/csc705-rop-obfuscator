0x0000000000404ed9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000409b33 : add ah, cl ; add al, 0 ; add al, ch ; mov dh, -1 ; jmp qword ptr [rdx]
0x0000000000409af5 : add al, 0 ; add al, bh ; mov bl, -1 ; jmp rdx
0x0000000000409b35 : add al, 0 ; add al, ch ; mov dh, -1 ; jmp qword ptr [rdx]
0x0000000000401a46 : add al, 0x25 ; ret
0x0000000000401a3e : add al, 0x25 ; ret 0x60b2
0x0000000000409af7 : add al, bh ; mov bl, -1 ; jmp rdx
0x000000000040945b : add al, bh ; ret 0xffff
0x0000000000409e57 : add al, bl ; ret 0xffff
0x0000000000409b37 : add al, ch ; mov dh, -1 ; jmp qword ptr [rdx]
0x000000000040947b : add al, ch ; ret
0x0000000000409ed7 : add al, cl ; ret
0x00000000004092db : add al, cl ; test edi, edi ; call qword ptr [rax]
0x000000000040820f : add bl, dh ; ret
0x0000000000409ed3 : add byte ptr [rax + rcx], ch ; add al, cl ; ret
0x0000000000405f4d : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000401f77 : add byte ptr [rax - 0x77], cl ; ret 0x148
0x0000000000401c10 : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000040820d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000409ed1 : add byte ptr [rax], al ; add byte ptr [rax + rcx], ch ; add al, cl ; ret
0x0000000000401f75 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x148
0x0000000000401c0e : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000040820b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000402ad9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040820c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004066b3 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b72b8b], cl ; ret 0xb0
0x000000000040457e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000402a8b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040284c : add byte ptr [rax], al ; add cl, ch ; ret 0
0x000000000040758c : add byte ptr [rax], al ; add cl, ch ; ret 2
0x0000000000402890 : add byte ptr [rax], al ; add dh, dh ; add al, 0x25 ; ret
0x0000000000402856 : add byte ptr [rax], al ; add dh, dh ; add al, 0x25 ; ret 0x60b2
0x0000000000403000 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402adb : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401273 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000409b36 : add byte ptr [rax], al ; call 0x23409af8
0x0000000000409af6 : add byte ptr [rax], al ; clc ; mov bl, -1 ; jmp rdx
0x000000000040945a : add byte ptr [rax], al ; clc ; ret 0xffff
0x0000000000409eb6 : add byte ptr [rax], al ; cwde ; ret
0x0000000000409ed2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; or byte ptr [rax], al ; add al, cl ; ret
0x0000000000401409 : add byte ptr [rax], al ; jmp 0x401289
0x0000000000403472 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000409af2 : add byte ptr [rax], al ; mov word ptr [rax + rax], es ; add al, bh ; mov bl, -1 ; jmp rdx
0x00000000004027e2 : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000405deb : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000404b70 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040820e : add byte ptr [rax], al ; ret
0x0000000000409463 : add byte ptr [rax], bh ; ret
0x000000000040944b : add byte ptr [rax], bh ; ret 0xffff
0x0000000000409443 : add byte ptr [rax], cl ; ret 0xffff
0x0000000000405dec : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000404b71 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x00000000004066b5 : add byte ptr [rbx - 0x76b72b8b], cl ; ret 0xb0
0x00000000004080ac : add byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x0000000000402a89 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004016c8 : add byte ptr [rcx], al ; ret
0x0000000000407588 : add byte ptr [rdi], cl ; lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000404580 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000402a8d : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000401b95 : add cl, ch ; add dword ptr [r8], r8d ; add dh, al ; add al, 0x25 ; ret
0x0000000000401b88 : add cl, ch ; push rsp ; add dword ptr [rax], eax ; add dh, al ; add al, 0x25 ; ret 0x60b2
0x000000000040284e : add cl, ch ; ret 0
0x000000000040758e : add cl, ch ; ret 2
0x0000000000402853 : add cl, ch ; xchg eax, esi ; add byte ptr [rax], al ; add dh, dh ; add al, 0x25 ; ret 0x60b2
0x0000000000401b9a : add dh, al ; add al, 0x25 ; ret
0x0000000000401b8d : add dh, al ; add al, 0x25 ; ret 0x60b2
0x0000000000402892 : add dh, dh ; add al, 0x25 ; ret
0x0000000000402858 : add dh, dh ; add al, 0x25 ; ret 0x60b2
0x0000000000401b97 : add dword ptr [r8], r8d ; add dh, al ; add al, 0x25 ; ret
0x0000000000406429 : add dword ptr [rax - 0x77], ecx ; ret 0x8148
0x0000000000404e9f : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405dea : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000404b6f : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000401b98 : add dword ptr [rax], eax ; add dh, al ; add al, 0x25 ; ret
0x0000000000401b8b : add dword ptr [rax], eax ; add dh, al ; add al, 0x25 ; ret 0x60b2
0x0000000000407f6d : add dword ptr [rax], ecx ; ret 0x840
0x0000000000402fa6 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407c4a : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000402848 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0
0x00000000004016c4 : add eax, 0x209bee ; add ebx, esi ; ret
0x000000000040284b : add eax, 0xe9000000 ; ret 0
0x000000000040758b : add eax, 0xe9000000 ; ret 2
0x00000000004092d9 : add eax, dword ptr [rax] ; add al, cl ; test edi, edi ; call qword ptr [rax]
0x000000000040168b : add eax, edx ; sar rax, 1 ; jne 0x40169c ; pop rbp ; ret
0x00000000004016c9 : add ebx, esi ; ret
0x0000000000401a44 : add esi, eax ; add al, 0x25 ; ret
0x0000000000401a3c : add esi, eax ; add al, 0x25 ; ret 0x60b2
0x00000000004018bb : add esp, 0x10 ; pop rbp ; ret
0x00000000004078bc : add esp, 0x130 ; pop rbp ; ret
0x00000000004027de : add esp, 0x190 ; pop rbp ; ret
0x000000000040611c : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000406cfe : add esp, 0x1e0 ; pop rbp ; ret
0x0000000000402ade : add esp, 0x20 ; pop rbp ; ret
0x000000000040199d : add esp, 0x30 ; pop rbp ; ret
0x0000000000402917 : add esp, 0x40 ; pop rbp ; ret
0x00000000004052bc : add esp, 0x50 ; pop rbp ; ret
0x0000000000403793 : add esp, 0x70 ; pop rbp ; ret
0x00000000004051ca : add esp, 0x90 ; pop rbp ; ret
0x0000000000405fb3 : add esp, 0xa0 ; pop rbp ; ret
0x0000000000401276 : add esp, 8 ; ret
0x000000000040168a : add rax, rdx ; sar rax, 1 ; jne 0x40169d ; pop rbp ; ret
0x00000000004018ba : add rsp, 0x10 ; pop rbp ; ret
0x00000000004078bb : add rsp, 0x130 ; pop rbp ; ret
0x00000000004027dd : add rsp, 0x190 ; pop rbp ; ret
0x000000000040611b : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000406cfd : add rsp, 0x1e0 ; pop rbp ; ret
0x0000000000402add : add rsp, 0x20 ; pop rbp ; ret
0x000000000040199c : add rsp, 0x30 ; pop rbp ; ret
0x0000000000402916 : add rsp, 0x40 ; pop rbp ; ret
0x00000000004052bb : add rsp, 0x50 ; pop rbp ; ret
0x0000000000403792 : add rsp, 0x70 ; pop rbp ; ret
0x00000000004051c9 : add rsp, 0x90 ; pop rbp ; ret
0x0000000000405fb2 : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000401275 : add rsp, 8 ; ret
0x0000000000407c49 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004016c7 : and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000401a37 : and eax, 0x60b2c1 ; add esi, eax ; add al, 0x25 ; ret 0x60b2
0x0000000000401a3f : and eax, 0x60b2c2 ; add esi, eax ; add al, 0x25 ; ret
0x0000000000402aff : and eax, 0x60b2d8 ; pop rbp ; ret
0x0000000000402b23 : and eax, 0x60b2e0 ; pop rbp ; ret
0x0000000000409b38 : call 0x23409af6
0x0000000000404f05 : call 0xffffffffe08dd859
0x0000000000404ba9 : call 0xffffffffe902d4f9
0x0000000000404ba8 : call 0xffffffffe902d4fa
0x00000000004065a8 : call 0xffffffffffee2897
0x00000000004065a7 : call 0xffffffffffee2898
0x00000000004081e9 : call qword ptr [r12 + rbx*8]
0x00000000004092df : call qword ptr [rax]
0x0000000000409793 : call qword ptr [rsi]
0x00000000004081ea : call qword ptr [rsp + rbx*8]
0x00000000004016ed : call rax
0x00000000004048fc : call rbx
0x0000000000409a53 : call rdi
0x00000000004078ba : clc ; add rsp, 0x130 ; pop rbp ; ret
0x000000000040631f : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405801 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402f28 : clc ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040168f : clc ; jne 0x401698 ; pop rbp ; ret
0x0000000000409af8 : clc ; mov bl, -1 ; jmp rdx
0x0000000000403645 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040812f : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000409458 : clc ; or dword ptr [rax], eax ; add al, bh ; ret 0xffff
0x0000000000408132 : clc ; pop rbp ; ret
0x000000000040945c : clc ; ret 0xffff
0x0000000000406d66 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004068e9 : cld ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406e8e : cld ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000407b8a : cld ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040812c : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000406d63 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004068e6 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406e8b : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000407b87 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000406be9 : cmp dword ptr [rdx - 0x76be63d5], ebx ; ret
0x000000000040164d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401660 ; pop rbp ; ret
0x0000000000405931 : cwde ; mov es, word ptr [rax] ; jmp rcx
0x000000000040592c : cwde ; mov rcx, qword ptr [rax*8 + 0x408e98] ; jmp rcx
0x0000000000409440 : cwde ; or dword ptr [rax], eax ; add byte ptr [rax], cl ; ret 0xffff
0x0000000000409eb8 : cwde ; ret
0x000000000040235c : dec dword ptr [rax + 0x3b] ; or byte ptr [r15], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000403850 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; nop ; mov dword ptr [rax], eax ; jmp rcx
0x00000000004075f4 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000404302 : dec dword ptr [rcx - 0x77] ; ret 0x294d
0x0000000000402915 : enter -0x7cb8, -0x3c ; pop rbp ; ret
0x0000000000404690 : enter 0x4b05, 0x34 ; fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x0000000000404694 : fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x00000000004081ec : fmul qword ptr [rax - 0x7d] ; ret
0x000000000040288d : fsubr st(1) ; pop rsp ; add byte ptr [rax], al ; add dh, dh ; add al, 0x25 ; ret
0x00000000004018b9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401660 : hlt ; pop rbp ; mov edi, 0x60b250 ; jmp rax
0x00000000004067d1 : in al, 0x34 ; sub eax, 0x14c5b7a ; ret 0x8148
0x00000000004067e5 : in al, 0x34 ; sub eax, 0x294c5b7a ; ret 0x8948
0x000000000040491b : inc dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000409ed4 : insb byte ptr [rdi], dx ; or byte ptr [rax], al ; add al, cl ; ret
0x0000000000405f55 : int 0x80
0x0000000000401653 : ja 0x40165a ; pop rbp ; ret
0x000000000040165f : je 0x40165d ; pop rbp ; mov edi, 0x60b250 ; jmp rax
0x000000000040140b : jmp 0x401287
0x0000000000401b96 : jmp 0x401cea
0x000000000040288e : jmp 0x4028f7
0x0000000000406428 : jmp 0xffffffffc2c9ac32
0x0000000000409c5b : jmp qword ptr [rax]
0x0000000000403d96 : jmp qword ptr [rcx]
0x0000000000409b3b : jmp qword ptr [rdx]
0x0000000000401667 : jmp rax
0x0000000000403859 : jmp rcx
0x00000000004016a7 : jmp rdx
0x0000000000401690 : jne 0x401697 ; pop rbp ; ret
0x0000000000403795 : jo 0x4037f6 ; ret
0x0000000000404dbf : jo 0x404e25 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405464 : jo 0x4054c5 ; ret
0x000000000040559e : jo 0x4055ff ; ret
0x000000000040943f : lcall ptr [rax + 0x8000009] ; ret 0xffff
0x000000000040945f : lcall ptr [rax] ; or al, byte ptr [rax] ; add byte ptr [rax], bh ; ret
0x000000000040758a : lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000401f43 : lea ebp, dword ptr [rax - 0x76000002] ; ret 0xca29
0x00000000004067d0 : lodsb al, byte ptr [rsi] ; in al, 0x34 ; sub eax, 0x14c5b7a ; ret 0x8148
0x00000000004067e4 : lodsb al, byte ptr [rsi] ; in al, 0x34 ; sub eax, 0x294c5b7a ; ret 0x8948
0x0000000000402dab : loopne 0x402dfb ; add esp, 0x20 ; pop rbp ; ret
0x0000000000402daa : loopne 0x402dfc ; add esp, 0x20 ; pop rbp ; ret
0x0000000000406d00 : loopne 0x406d08 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040533b : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004051c8 : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000407c46 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000409af9 : mov bl, -1 ; jmp rdx
0x0000000000402b21 : mov byte ptr [0x60b2e0], al ; pop rbp ; ret
0x00000000004016c3 : mov byte ptr [rip + 0x209bee], 1 ; ret
0x0000000000402fa8 : mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407c4c : mov dh, -0x40 ; pop rbp ; ret
0x0000000000409b39 : mov dh, -1 ; jmp qword ptr [rdx]
0x0000000000402a87 : mov dl, 0x60 ; add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000402afd : mov dword ptr [0x60b2d8], edi ; pop rbp ; ret
0x0000000000403646 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000403856 : mov dword ptr [rax], eax ; jmp rcx
0x0000000000403608 : mov dword ptr [rax], eax ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004034c4 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000403607 : mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000402da9 : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401999 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402913 : mov dword ptr [rbp - 0x38], eax ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004018b7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040812d : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004036be : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000409448 : mov eax, 0x38000009 ; ret 0xffff
0x0000000000409474 : mov eax, 0x78ffffc3 ; or al, byte ptr [rax] ; add al, ch ; ret
0x0000000000403478 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040623b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402d73 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403475 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000402ccf : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000406533 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040342d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004034be : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000406671 : mov eax, dword ptr [rbp - 0x24] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403258 : mov eax, dword ptr [rbp - 0x24] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040360a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040378f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000405339 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000406d64 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004068e7 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406e8c : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000407b88 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040631d : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004057ff : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402f26 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000408130 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004016eb : mov ebp, esp ; call rax
0x0000000000401651 : mov ebp, esp ; ja 0x40165c ; pop rbp ; ret
0x0000000000405f6d : mov ecx, 0x5b2a830a ; ret
0x0000000000403852 : mov ecx, dword ptr [rax*8 + 0x408990] ; jmp rcx
0x0000000000403b76 : mov ecx, dword ptr [rax*8 + 0x4089d8] ; jmp rcx
0x000000000040592e : mov ecx, dword ptr [rax*8 + 0x408e98] ; jmp rcx
0x00000000004034c1 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004016e5 : mov edi, 0x60ae20 ; mov rbp, rsp ; call rax
0x0000000000401662 : mov edi, 0x60b250 ; jmp rax
0x00000000004016a2 : mov edi, 0x60b250 ; jmp rdx
0x0000000000407a7e : mov edi, 0x8fcb99c5 ; xlatb ; ret 0x8c1b
0x00000000004081e7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x00000000004081e6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000405932 : mov es, word ptr [rax] ; jmp rcx
0x00000000004016a0 : mov esi, eax ; mov edi, 0x60b250 ; jmp rdx
0x0000000000402afc : mov qword ptr [0x60b2d8], rdi ; pop rbp ; ret
0x0000000000402912 : mov qword ptr [rbp - 0x38], rax ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004036bd : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040533a : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040623a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402d72 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403474 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000402cce : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000406532 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040342c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040378e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000405338 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040631c : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004057fe : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402f25 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004016ea : mov rbp, rsp ; call rax
0x0000000000401650 : mov rbp, rsp ; ja 0x40165d ; pop rbp ; ret
0x0000000000403851 : mov rcx, qword ptr [rax*8 + 0x408990] ; jmp rcx
0x0000000000403b75 : mov rcx, qword ptr [rax*8 + 0x4089d8] ; jmp rcx
0x000000000040592d : mov rcx, qword ptr [rax*8 + 0x408e98] ; jmp rcx
0x000000000040169f : mov rsi, rax ; mov edi, 0x60b250 ; jmp rdx
0x0000000000409af4 : mov word ptr [rax + rax], es ; add al, bh ; mov bl, -1 ; jmp rdx
0x0000000000402fa7 : movzx eax, al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407c4b : movzx eax, al ; pop rbp ; ret
0x0000000000403855 : nop ; mov dword ptr [rax], eax ; jmp rcx
0x0000000000408208 : nop dword ptr [rax + rax] ; ret
0x0000000000403edd : or al, 0x18 ; ret 0x6451
0x000000000040592f : or al, 0xffffffffffffffc5 ; cwde ; mov es, word ptr [rax] ; jmp rcx
0x0000000000403853 : or al, 0xffffffffffffffc5 ; nop ; mov dword ptr [rax], eax ; jmp rcx
0x0000000000409479 : or al, byte ptr [rax] ; add al, ch ; ret
0x0000000000409461 : or al, byte ptr [rax] ; add byte ptr [rax], bh ; ret
0x000000000040235f : or byte ptr [r15], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000409ed5 : or byte ptr [rax], al ; add al, cl ; ret
0x0000000000409e75 : or byte ptr [rax], al ; add byte ptr [rax], bh ; ret
0x0000000000402360 : or byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000409459 : or dword ptr [rax], eax ; add al, bh ; ret 0xffff
0x0000000000409449 : or dword ptr [rax], eax ; add byte ptr [rax], bh ; ret 0xffff
0x0000000000409441 : or dword ptr [rax], eax ; add byte ptr [rax], cl ; ret 0xffff
0x0000000000405521 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004016c5 : out dx, al ; wait ; and byte ptr [rax], al ; add ebx, esi ; ret
0x00000000004081fc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000404dc1 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004081fe : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000404dc3 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000408200 : pop r14 ; pop r15 ; ret
0x0000000000404b73 : pop r14 ; pop rbp ; ret
0x0000000000404dc5 : pop r15 ; pop rbp ; ret
0x0000000000408202 : pop r15 ; ret
0x00000000004016c2 : pop rbp ; mov byte ptr [rip + 0x209bee], 1 ; ret
0x0000000000401661 : pop rbp ; mov edi, 0x60b250 ; jmp rax
0x000000000040169e : pop rbp ; mov rsi, rax ; mov edi, 0x60b250 ; jmp rdx
0x00000000004081fb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004081ff : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401655 : pop rbp ; ret
0x0000000000404dc0 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405ded : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000404b72 : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000405f71 : pop rbx ; ret
0x0000000000404dc6 : pop rdi ; pop rbp ; ret
0x0000000000408203 : pop rdi ; ret
0x0000000000404dc4 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000408201 : pop rsi ; pop r15 ; ret
0x0000000000404b74 : pop rsi ; pop rbp ; ret
0x000000000040288f : pop rsp ; add byte ptr [rax], al ; add dh, dh ; add al, 0x25 ; ret
0x00000000004081fd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000404dc2 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004092d7 : push rax ; add eax, dword ptr [rax] ; add al, cl ; test edi, edi ; call qword ptr [rax]
0x00000000004052be : push rax ; pop rbp ; ret
0x0000000000404f04 : push rbp ; call 0xffffffffe08dd85a
0x00000000004016e4 : push rbp ; mov edi, 0x60ae20 ; mov rbp, rsp ; call rax
0x00000000004067ef : push rbp ; ror byte ptr [rax - 0x77], 1 ; ret 0x8b4c
0x0000000000401b8a : push rsp ; add dword ptr [rax], eax ; add dh, al ; add al, 0x25 ; ret 0x60b2
0x0000000000401279 : ret
0x0000000000402850 : ret 0
0x0000000000401f7a : ret 0x148
0x0000000000404f5e : ret 0x1b2
0x00000000004025fd : ret 0x1de8
0x0000000000401412 : ret 0x209c
0x0000000000402d55 : ret 0x2948
0x00000000004042e9 : ret 0x294c
0x0000000000404305 : ret 0x294d
0x0000000000403209 : ret 0x31e8
0x00000000004026cb : ret 0x4fe8
0x0000000000403544 : ret 0x5589
0x0000000000401a40 : ret 0x60b2
0x0000000000403edf : ret 0x6451
0x000000000040431d : ret 0x7de8
0x0000000000406be5 : ret 0x8141
0x000000000040642c : ret 0x8148
0x0000000000407f6f : ret 0x840
0x0000000000404583 : ret 0x8840
0x00000000004058e9 : ret 0x8844
0x0000000000406440 : ret 0x8948
0x0000000000404308 : ret 0x8949
0x000000000040449c : ret 0x89a5
0x00000000004042ec : ret 0x8b48
0x00000000004067f3 : ret 0x8b4c
0x0000000000407a84 : ret 0x8c1b
0x0000000000406c0f : ret 0x941
0x0000000000401c13 : ret 0xb0
0x00000000004077c9 : ret 0xb849
0x0000000000401685 : ret 0xc148
0x0000000000407530 : ret 0xc2f6
0x0000000000403d04 : ret 0xca21
0x0000000000401f49 : ret 0xca29
0x0000000000402a90 : ret 0xd284
0x0000000000402363 : ret 0xe280
0x0000000000404bac : ret 0xee8
0x0000000000404598 : ret 0xf180
0x0000000000407523 : ret 0xf280
0x0000000000403d7e : ret 0xf281
0x00000000004065aa : ret 0xffad
0x0000000000409445 : ret 0xffff
0x0000000000404f64 : ret 1
0x0000000000407590 : ret 2
0x0000000000403606 : rol byte ptr [rcx + rcx*4], 1 ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000405f50 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000403790 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x4037fb ; ret
0x000000000040168c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40169b ; pop rbp ; ret
0x0000000000405f51 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x00000000004042dd : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x00000000004042e6 : ror byte ptr [rax - 0x77], 1 ; ret 0x294c
0x00000000004067f0 : ror byte ptr [rax - 0x77], 1 ; ret 0x8b4c
0x0000000000403791 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x4037fa ; ret
0x000000000040504e : sahf ; ret
0x000000000040168e : sar eax, 1 ; jne 0x401699 ; pop rbp ; ret
0x000000000040943d : sar edi, -1 ; cwde ; or dword ptr [rax], eax ; add byte ptr [rax], cl ; ret 0xffff
0x000000000040168d : sar rax, 1 ; jne 0x40169a ; pop rbp ; ret
0x0000000000409ed0 : sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; or byte ptr [rax], al ; add al, cl ; ret
0x0000000000407c48 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000405f6f : sub dword ptr [rdx], 0x5b ; ret
0x00000000004067d3 : sub eax, 0x14c5b7a ; ret 0x8148
0x00000000004067e7 : sub eax, 0x294c5b7a ; ret 0x8948
0x0000000000401271 : sub eax, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000040823d : sub esp, 8 ; add rsp, 8 ; ret
0x000000000040823c : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040820a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040284a : test dword ptr [rip - 0x17000000], eax ; ret 0
0x00000000004092dd : test edi, edi ; call qword ptr [rax]
0x00000000004016c6 : wait ; and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000404582 : xchg eax, ebp ; ret 0x8840
0x0000000000402362 : xchg eax, ebp ; ret 0xe280
0x0000000000402855 : xchg eax, esi ; add byte ptr [rax], al ; add dh, dh ; add al, 0x25 ; ret 0x60b2
0x0000000000402a8f : xchg eax, esp ; ret 0xd284
0x0000000000407a83 : xlatb ; ret 0x8c1b
0x00000000004078be : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004052b7 : xor eax, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x0000000000403605 : xor eax, edx ; mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
