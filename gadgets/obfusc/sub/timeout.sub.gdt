0x000000000040c318 : adc al, 0x48 ; add esp, 0x10 ; pop rbp ; ret
0x00000000004092b9 : adc al, 1 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407f07 : adc byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; call rdi
0x0000000000402b40 : adc byte ptr [rbp - 0x10], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004034bf : adc byte ptr [rbp - 8], al ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004038f5 : adc cl, byte ptr [rax + 1] ; ret 0x8948
0x000000000040c2fc : adc dh, dh ; ret 0xf01
0x0000000000406179 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402a7b : add ah, byte ptr [rcx] ; pop rbp ; ret
0x000000000040b6a8 : add al, ch ; ret 0xff63
0x000000000040c50f : add bl, dh ; ret
0x000000000040a177 : add byte ptr [rax + 1], cl ; ret 0x4a3b
0x000000000040a4a1 : add byte ptr [rax + 1], cl ; ror dword ptr [rax - 0x75], 0x51 ; or al, ch ; ret 0xff77
0x000000000040c436 : add byte ptr [rax - 0x75], cl ; call 0x49034d8e
0x000000000040808a : add byte ptr [rax - 0x75], cl ; loopne 0x4080e1 ; mov edi, dword ptr [rbp - 8] ; call rax
0x000000000040787d : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000040b6a6 : add byte ptr [rax], al ; add al, ch ; ret 0xff63
0x000000000040c50d : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040a175 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x4a3b
0x000000000040c434 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; call 0x49034d90
0x000000000040c50b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040c1f1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040c50c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040d1dc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x404f
0x0000000000402e46 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7078b], cl ; ret 0xb0
0x0000000000402d26 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7538b], cl ; ret 0xb0
0x0000000000402d7b : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b75b8b], cl ; ret 0xb0
0x000000000040da6a : add byte ptr [rax], al ; add byte ptr [rcx - 1], dh ; call qword ptr [rax]
0x000000000040328f : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8840
0x000000000040581e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x000000000040c242 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000406a8e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000408cec : add byte ptr [rax], al ; add cl, ch ; ret 2
0x0000000000406141 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405e50 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040c1f3 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004019fb : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000040d99a : add byte ptr [rax], al ; and byte ptr [rbx - 1], dl ; call rax
0x000000000040d95a : add byte ptr [rax], al ; and byte ptr [rdi - 1], al ; call rax
0x000000000040e036 : add byte ptr [rax], al ; call 0x1740df96
0x000000000040e256 : add byte ptr [rax], al ; call 0xffffffffd840e1c9
0x000000000040e156 : add byte ptr [rax], al ; fsub dword ptr [rax - 1] ; jmp qword ptr [rdx]
0x0000000000401a79 : add byte ptr [rax], al ; jmp 0x401a19
0x000000000040da6b : add byte ptr [rax], al ; jno 0x40da72 ; call qword ptr [rax]
0x0000000000404712 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040e2fe : add byte ptr [rax], al ; nop ; jle 0x40e307 ; jmp rdx
0x000000000040eb1e : add byte ptr [rax], al ; nop ; ret 0xffff
0x0000000000402c58 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040771b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405e10 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040c50e : add byte ptr [rax], al ; ret
0x000000000040d1de : add byte ptr [rax], al ; ret 0x404f
0x000000000040eadf : add byte ptr [rax], al ; ret 0xffff
0x000000000040e2fa : add byte ptr [rax], al ; sub al, 5 ; add byte ptr [rax], al ; nop ; jle 0x40e30b ; jmp rdx
0x000000000040e152 : add byte ptr [rax], al ; test byte ptr [rbx], al ; add byte ptr [rax], al ; fsub dword ptr [rax - 1] ; jmp qword ptr [rdx]
0x000000000040d9aa : add byte ptr [rax], al ; xor byte ptr [rbp - 1], dl ; call qword ptr [rax]
0x000000000040eaff : add byte ptr [rax], dl ; ret 0xffff
0x000000000040771c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000405e11 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040281d : add byte ptr [rbx - 0x1074b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000402e48 : add byte ptr [rbx - 0x76b7078b], cl ; ret 0xb0
0x0000000000402d28 : add byte ptr [rbx - 0x76b7538b], cl ; ret 0xb0
0x0000000000402d7d : add byte ptr [rbx - 0x76b75b8b], cl ; ret 0xb0
0x0000000000402eec : add byte ptr [rbx - 0x934b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004026a1 : add byte ptr [rbx - 0xdb4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040bf3c : add byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x000000000040da6c : add byte ptr [rcx - 1], dh ; call qword ptr [rax]
0x000000000040715d : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000402028 : add byte ptr [rcx], al ; ret
0x0000000000403291 : add byte ptr [rcx], ch ; ret 0x8840
0x0000000000408ce8 : add byte ptr [rdi], cl ; lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x000000000040b6a2 : add byte ptr [rdi], cl ; test dword ptr [rbx], ecx ; add byte ptr [rax], al ; add al, ch ; ret 0xff63
0x0000000000405820 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x000000000040c244 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000406a90 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004093b2 : add byte ptr cs:[rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408cee : add cl, ch ; ret 2
0x0000000000407d59 : add dword ptr [rax - 0x77], ecx ; ret 0x8148
0x000000000040613f : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040771a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000405e0f : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000403e84 : add dword ptr [rax], ecx ; ret 0x840
0x0000000000408134 : add dword ptr [rdi], ecx ; mov dh, -0x3f ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000402e5e : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040a702 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x00000000004031a2 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000402024 : add eax, 0x20e52e ; add ebx, esi ; ret
0x0000000000408ceb : add eax, 0xe9000000 ; ret 2
0x0000000000401feb : add eax, edx ; sar rax, 1 ; jne 0x401ffc ; pop rbp ; ret
0x000000000040acf9 : add eax, esi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x0000000000402029 : add ebx, esi ; ret
0x00000000004092fb : add edi, eax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x00000000004021bb : add esp, 0x10 ; pop rbp ; ret
0x000000000040715b : add esp, 0x100 ; pop rbp ; ret
0x000000000040b1bc : add esp, 0x10e0 ; pop rbp ; ret
0x000000000040901c : add esp, 0x130 ; pop rbp ; ret
0x0000000000404225 : add esp, 0x170 ; pop rbp ; ret
0x0000000000407a4c : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000402b44 : add esp, 0x20 ; pop rbp ; ret
0x0000000000409eb6 : add esp, 0x250 ; pop rbp ; ret
0x00000000004022cd : add esp, 0x30 ; pop rbp ; ret
0x0000000000403c0d : add esp, 0x40 ; pop rbp ; ret
0x0000000000403986 : add esp, 0x50 ; pop rbp ; ret
0x0000000000402dfb : add esp, 0x60 ; pop rbp ; ret
0x0000000000404a33 : add esp, 0x70 ; pop rbp ; ret
0x000000000040646a : add esp, 0x90 ; pop rbp ; ret
0x0000000000402efe : add esp, 0xa0 ; pop rbp ; ret
0x000000000040464a : add esp, 0xb0 ; pop rbp ; ret
0x0000000000402c54 : add esp, 0xc0 ; pop rbp ; ret
0x00000000004019fe : add esp, 8 ; ret
0x0000000000401fea : add rax, rdx ; sar rax, 1 ; jne 0x401ffd ; pop rbp ; ret
0x000000000040acf8 : add rax, rsi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x00000000004092fa : add rdi, rax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x00000000004021ba : add rsp, 0x10 ; pop rbp ; ret
0x000000000040715a : add rsp, 0x100 ; pop rbp ; ret
0x000000000040b1bb : add rsp, 0x10e0 ; pop rbp ; ret
0x000000000040901b : add rsp, 0x130 ; pop rbp ; ret
0x0000000000404224 : add rsp, 0x170 ; pop rbp ; ret
0x0000000000407a4b : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000402b43 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000409eb5 : add rsp, 0x250 ; pop rbp ; ret
0x00000000004022cc : add rsp, 0x30 ; pop rbp ; ret
0x0000000000403c0c : add rsp, 0x40 ; pop rbp ; ret
0x0000000000403985 : add rsp, 0x50 ; pop rbp ; ret
0x0000000000402dfa : add rsp, 0x60 ; pop rbp ; ret
0x0000000000404a32 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000406469 : add rsp, 0x90 ; pop rbp ; ret
0x0000000000402efd : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000404649 : add rsp, 0xb0 ; pop rbp ; ret
0x0000000000402c53 : add rsp, 0xc0 ; pop rbp ; ret
0x00000000004019fd : add rsp, 8 ; ret
0x0000000000406bec : addps xmm1, xmm2 ; movaps xmm0, xmm1 ; pop rbp ; ret
0x0000000000406beb : addsd xmm1, xmm2 ; movaps xmm0, xmm1 ; pop rbp ; ret
0x000000000040a701 : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004031a1 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000402027 : and byte ptr [rax], al ; add ebx, esi ; ret
0x000000000040d99c : and byte ptr [rbx - 1], dl ; call rax
0x000000000040d95c : and byte ptr [rdi - 1], al ; call rax
0x0000000000402a79 : and eax, 0x6102e0 ; pop rbp ; ret
0x000000000040350f : and eax, 0x610578 ; pop rbp ; ret
0x000000000040352f : and eax, 0x610580 ; pop rbp ; ret
0x0000000000403553 : and eax, 0x610588 ; pop rbp ; ret
0x000000000040e038 : call 0x1740df94
0x0000000000409cc4 : call 0x31e14
0x000000000040c43a : call 0x49034d8a
0x000000000040c439 : call 0x49034d8b
0x000000000040e258 : call 0xffffffffd840e1c7
0x0000000000405e49 : call 0xffffffffe902e799
0x0000000000405e48 : call 0xffffffffe902e79a
0x000000000040ab83 : call 0xffffffffe90334d3
0x0000000000401fc3 : call 0xffffffffff4080d0
0x0000000000402003 : call 0xffffffffff408110
0x0000000000404e19 : call 0xffffffffff408ef1
0x000000000040c4e9 : call qword ptr [r12 + rbx*8]
0x000000000040d96f : call qword ptr [rax]
0x000000000040e03b : call qword ptr [rsi]
0x000000000040c4ea : call qword ptr [rsp + rbx*8]
0x000000000040204d : call rax
0x000000000040466d : call rbx
0x0000000000407f0c : call rdi
0x000000000040901a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x0000000000407c4f : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000409eb4 : clc ; add rsp, 0x250 ; pop rbp ; ret
0x00000000004034c1 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403c0b : clc ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000403984 : clc ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040c48a : clc ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000404648 : clc ; add rsp, 0xb0 ; pop rbp ; ret
0x000000000040b63b : clc ; add rsp, 0xc0 ; pop rbp ; ret
0x0000000000408092 : clc ; call rax
0x0000000000401fef : clc ; jne 0x401ff8 ; pop rbp ; ret
0x00000000004038f2 : clc ; jo 0x4038a3 ; adc cl, byte ptr [rax + 1] ; ret 0x8948
0x000000000040c315 : clc ; mov dword ptr [rax + 0x14], ecx ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004048e5 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040bfbf : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000406adb : clc ; pop rbp ; ret
0x00000000004021e7 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040b1ba : cld ; add rsp, 0x10e0 ; pop rbp ; ret
0x00000000004087fb : cld ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040873a : cld ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004084ab : cld ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000403440 : cld ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000402a76 : cld ; mov dword ptr [0x6102e0], eax ; pop rbp ; ret
0x000000000040bfbc : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040b973 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040b916 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000408737 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040343d : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000407f0a : cmp al, 0x25 ; call rdi
0x000000000040304f : cmp eax, 0x48ffffea ; add esp, 0x20 ; pop rbp ; ret
0x0000000000401fad : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401fc0 ; pop rbp ; ret
0x000000000040725c : cwde ; mov rcx, qword ptr [rax*8 + 0x40d4a0] ; jmp rcx
0x0000000000404e14 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; call 0xffffffffff408ef6
0x0000000000409cc0 : dec dword ptr [rax - 0x75] ; push rbp ; call 0x31e18
0x0000000000408d54 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x000000000040708c : dec dword ptr [rax - 0x77] ; ret 0x7be8
0x0000000000406d89 : dec dword ptr [rax - 0x77] ; ret 0x7ee8
0x0000000000409cf6 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000402a02 : dec dword ptr [rax - 0x77] ; ret 0x8d8b
0x00000000004026a7 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004055a2 : dec dword ptr [rcx - 0x77] ; ret 0x294d
0x000000000040a894 : enter -0x76b8, 0xc ; ret 0x59e9
0x0000000000405930 : enter 0x4b05, 0x34 ; fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x0000000000406baf : enter 0x4d89, -0x14 ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000405934 : fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x000000000040b3de : fmul dword ptr [r8 - 0x77] ; ret 0x8148
0x0000000000403b7b : fmul dword ptr [rax + 0x29] ; ret 0x148
0x000000000040b3df : fmul dword ptr [rax - 0x77] ; ret 0x8148
0x000000000040c4ec : fmul qword ptr [rax - 0x7d] ; ret
0x000000000040e158 : fsub dword ptr [rax - 1] ; jmp qword ptr [rdx]
0x00000000004021b9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040c24f : hlt ; mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401fc0 : hlt ; pop rbp ; mov edi, 0x6104e8 ; jmp rax
0x0000000000407f06 : in al, dx ; adc byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; call rdi
0x0000000000406bb2 : in al, dx ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000406bb5 : in al, dx ; pop rbp ; ret
0x0000000000402026 : in eax, 0x20 ; add byte ptr [rcx], al ; ret
0x0000000000405bbb : inc dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000407885 : int 0x80
0x00000000004099fc : int 0xfd
0x0000000000401fb3 : ja 0x401fba ; pop rbp ; ret
0x000000000040cb7b : jb 0x40cbe4 ; jns 0x40cb86 ; push rax ; ret
0x000000000040cb7a : jb 0x40cbe5 ; jns 0x40cb87 ; push rax ; ret
0x0000000000401fbf : je 0x401fbd ; pop rbp ; mov edi, 0x6104e8 ; jmp rax
0x0000000000408091 : jge 0x40808d ; call rax
0x000000000040e301 : jle 0x40e304 ; jmp rdx
0x000000000040289c : jmp 0x31a9d0
0x0000000000401a7b : jmp 0x401a17
0x0000000000407d58 : jmp 0xffffffffc2c9c562
0x000000000040debb : jmp qword ptr [rax]
0x0000000000402867 : jmp qword ptr [rcx]
0x000000000040e15b : jmp qword ptr [rdx]
0x0000000000401fc7 : jmp rax
0x0000000000404af9 : jmp rcx
0x0000000000402007 : jmp rdx
0x0000000000401ff0 : jne 0x401ff7 ; pop rbp ; ret
0x000000000040da6d : jno 0x40da70 ; call qword ptr [rax]
0x000000000040cb7e : jns 0x40cb83 ; push rax ; ret
0x000000000040cb7d : jns 0x40cb84 ; push rax ; ret
0x00000000004038f3 : jo 0x4038a2 ; adc cl, byte ptr [rax + 1] ; ret 0x8948
0x0000000000404227 : jo 0x40422f ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000404a35 : jo 0x404a96 ; ret
0x000000000040605f : jo 0x4060c5 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406704 : jo 0x406765 ; ret
0x000000000040683e : jo 0x40689f ; ret
0x000000000040d958 : js 0x40d965 ; add byte ptr [rax], al ; and byte ptr [rdi - 1], al ; call rax
0x0000000000408cea : lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000403922 : leave ; ret 0xf8ca
0x000000000040da68 : lock or byte ptr [rax], al ; add byte ptr [rax], al ; jno 0x40da75 ; call qword ptr [rax]
0x000000000040289b : loope 0x40288e ; sub byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x0000000000408050 : loopne 0x4080a0 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040804f : loopne 0x4080a1 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040808e : loopne 0x4080dd ; mov edi, dword ptr [rbp - 8] ; call rax
0x000000000040808d : loopne 0x4080de ; mov edi, dword ptr [rbp - 8] ; call rax
0x000000000040b1be : loopne 0x40b1d5 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004038f0 : mov ah, -0x17 ; clc ; jo 0x4038a5 ; adc cl, byte ptr [rax + 1] ; ret 0x8948
0x000000000040464c : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004065db : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000406468 : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x000000000040d998 : mov al, 5 ; add byte ptr [rax], al ; and byte ptr [rbx - 1], dl ; call rax
0x000000000040319e : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040bad6 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000403551 : mov byte ptr [0x610588], al ; pop rbp ; ret
0x00000000004092b7 : mov byte ptr [rax + 0x14], 1 ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040accb : mov byte ptr [rax + 0xc], 1 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402023 : mov byte ptr [rip + 0x20e52e], 1 ; ret
0x0000000000406bae : mov dh, -0x38 ; mov dword ptr [rbp - 0x14], ecx ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000408136 : mov dh, -0x3f ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000402e60 : mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040a704 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x00000000004031a4 : mov dh, -0x40 ; pop rbp ; ret
0x0000000000402a77 : mov dword ptr [0x6102e0], eax ; pop rbp ; ret
0x000000000040352d : mov dword ptr [0x610580], edi ; pop rbp ; ret
0x000000000040c316 : mov dword ptr [rax + 0x14], ecx ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004048e6 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004048a8 : mov dword ptr [rax], eax ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000404764 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004048a7 : mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000406bb0 : mov dword ptr [rbp - 0x14], ecx ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000406b4a : mov dword ptr [rbp - 0x24], eax ; mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x00000000004022c9 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402df7 : mov dword ptr [rbp - 0x60], eax ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004021b7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004021e5 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040bfbd : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040495e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040acfc : mov dword ptr [rdi + 0x10], eax ; pop rbp ; ret
0x00000000004092fe : mov dword ptr [rsi], edi ; pop rbp ; ret
0x000000000040350d : mov eax, dword ptr [0x610578] ; pop rbp ; ret
0x0000000000404718 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000407b6b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004037a3 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404715 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000406ad5 : mov eax, dword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004036ff : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000406bb3 : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000407e63 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004046cd : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040475e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040804e : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040808c : mov eax, dword ptr [rbp - 0x20] ; mov rdi, qword ptr [rbp - 8] ; call rax
0x0000000000406b4d : mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x00000000004048aa : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000407f9b : mov eax, dword ptr [rbp - 0x2c] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404a2f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004065d9 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040c250 : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040b974 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004087f9 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000408738 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004084a9 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040343e : mov eax, dword ptr [rbp - 4] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000407c4d : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406a9f : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403c09 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040b78f : mov eax, dword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040c488 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040bfc0 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004081fd : mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040204b : mov ebp, esp ; call rax
0x0000000000401fb1 : mov ebp, esp ; ja 0x401fbc ; pop rbp ; ret
0x000000000040ada1 : mov ebx, 0x48000014 ; add esp, 0x10 ; pop rbp ; ret
0x000000000040789d : mov ecx, 0x5b2a830a ; ret
0x000000000040391d : mov ecx, 0x8d1c8842 ; leave ; ret 0xf8ca
0x0000000000404af2 : mov ecx, dword ptr [rax*8 + 0x40cfa0] ; jmp rcx
0x0000000000404e16 : mov ecx, dword ptr [rax*8 + 0x40cfe8] ; jmp rcx
0x000000000040725e : mov ecx, dword ptr [rax*8 + 0x40d4a0] ; jmp rcx
0x0000000000404761 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000402045 : mov edi, 0x60fe00 ; mov rbp, rsp ; call rax
0x0000000000401fc2 : mov edi, 0x6104e8 ; jmp rax
0x0000000000402002 : mov edi, 0x6104e8 ; jmp rdx
0x0000000000408090 : mov edi, dword ptr [rbp - 8] ; call rax
0x00000000004092f8 : mov edi, dword ptr [rsi] ; add rdi, rax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x000000000040c4e7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000040c4e6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000403982 : mov edx, dword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000406ad9 : mov edx, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402000 : mov esi, eax ; mov edi, 0x6104e8 ; jmp rdx
0x000000000040a707 : mov esp, ebp ; pop rbp ; ret
0x000000000040352c : mov qword ptr [0x610580], rdi ; pop rbp ; ret
0x000000000040495d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040acfb : mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x00000000004092fd : mov qword ptr [rsi], rdi ; pop rbp ; ret
0x00000000004065da : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040350c : mov rax, qword ptr [0x610578] ; pop rbp ; ret
0x0000000000407b6a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004037a2 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404714 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000406ad4 : mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004036fe : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000407e62 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004046cc : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040804d : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040808b : mov rax, qword ptr [rbp - 0x20] ; mov rdi, qword ptr [rbp - 8] ; call rax
0x0000000000404a2e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004065d8 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000407c4c : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406a9e : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403c08 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040b78e : mov rax, qword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040c487 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040204a : mov rbp, rsp ; call rax
0x0000000000401fb0 : mov rbp, rsp ; ja 0x401fbd ; pop rbp ; ret
0x0000000000404af1 : mov rcx, qword ptr [rax*8 + 0x40cfa0] ; jmp rcx
0x0000000000404e15 : mov rcx, qword ptr [rax*8 + 0x40cfe8] ; jmp rcx
0x000000000040725d : mov rcx, qword ptr [rax*8 + 0x40d4a0] ; jmp rcx
0x000000000040808f : mov rdi, qword ptr [rbp - 8] ; call rax
0x0000000000403981 : mov rdx, qword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000406ad8 : mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000401fff : mov rsi, rax ; mov edi, 0x6104e8 ; jmp rdx
0x000000000040a706 : mov rsp, rbp ; pop rbp ; ret
0x0000000000406bef : movaps xmm0, xmm1 ; pop rbp ; ret
0x0000000000402b3f : movups xmm0, xmmword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004034be : movups xmm0, xmmword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402e5f : movzx eax, al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040a703 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004031a3 : movzx eax, al ; pop rbp ; ret
0x0000000000408135 : movzx eax, cl ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040e300 : nop ; jle 0x40e305 ; jmp rdx
0x000000000040eb20 : nop ; ret 0xffff
0x000000000040c508 : nop dword ptr [rax + rax] ; ret
0x000000000040517d : or al, 0x18 ; ret 0x6451
0x0000000000404e17 : or al, 0xffffffffffffffc5 ; call 0xffffffffff408ef3
0x000000000040accd : or al, 1 ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040a4a8 : or al, ch ; ret 0xff77
0x000000000040da69 : or byte ptr [rax], al ; add byte ptr [rax], al ; jno 0x40da74 ; call qword ptr [rax]
0x0000000000402917 : or byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x00000000004067c1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040289a : outsb dx, byte ptr [rsi] ; loope 0x40288f ; sub byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x000000000040c4fc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000406061 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040c4fe : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000406063 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040c500 : pop r14 ; pop r15 ; ret
0x0000000000405e13 : pop r14 ; pop rbp ; ret
0x0000000000406065 : pop r15 ; pop rbp ; ret
0x000000000040c502 : pop r15 ; ret
0x0000000000402022 : pop rbp ; mov byte ptr [rip + 0x20e52e], 1 ; ret
0x0000000000401fc1 : pop rbp ; mov edi, 0x6104e8 ; jmp rax
0x0000000000401ffe : pop rbp ; mov rsi, rax ; mov edi, 0x6104e8 ; jmp rdx
0x000000000040c4fb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040c4ff : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401fb5 : pop rbp ; ret
0x0000000000406060 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040771d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405e12 : pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004078a1 : pop rbx ; ret
0x0000000000406066 : pop rdi ; pop rbp ; ret
0x000000000040c503 : pop rdi ; ret
0x0000000000406064 : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040c501 : pop rsi ; pop r15 ; ret
0x0000000000405e14 : pop rsi ; pop rbp ; ret
0x000000000040c4fd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000406062 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040da67 : push rax ; or byte ptr [rax], al ; add byte ptr [rax], al ; jno 0x40da76 ; call qword ptr [rax]
0x0000000000403988 : push rax ; pop rbp ; ret
0x000000000040cb80 : push rax ; ret
0x0000000000409cc3 : push rbp ; call 0x31e15
0x0000000000403983 : push rbp ; clc ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000406ada : push rbp ; clc ; pop rbp ; ret
0x000000000040a893 : push rbp ; enter -0x76b8, 0xc ; ret 0x59e9
0x0000000000403b7a : push rbp ; fmul dword ptr [rax + 0x29] ; ret 0x148
0x0000000000402044 : push rbp ; mov edi, 0x60fe00 ; mov rbp, rsp ; call rax
0x000000000040a4a7 : push rcx ; or al, ch ; ret 0xff77
0x0000000000401a01 : ret
0x0000000000408f22 : ret 0
0x000000000040ad95 : ret 0x10
0x00000000004038e8 : ret 0x148
0x00000000004093a5 : ret 0x18
0x00000000004061fe : ret 0x1b2
0x0000000000401e82 : ret 0x20e3
0x0000000000401c82 : ret 0x20e4
0x0000000000401a82 : ret 0x20e5
0x0000000000403785 : ret 0x2948
0x0000000000405589 : ret 0x294c
0x00000000004055a5 : ret 0x294d
0x000000000040d1e0 : ret 0x404f
0x000000000040a17a : ret 0x4a3b
0x0000000000402deb : ret 0x5589
0x000000000040a898 : ret 0x59e9
0x000000000040517f : ret 0x6451
0x000000000040af46 : ret 0x74e8
0x000000000040708f : ret 0x7be8
0x00000000004055bd : ret 0x7de8
0x0000000000406d8c : ret 0x7ee8
0x0000000000407d5c : ret 0x8148
0x000000000040b439 : ret 0x81e8
0x0000000000403e86 : ret 0x840
0x0000000000403293 : ret 0x8840
0x0000000000407219 : ret 0x8844
0x00000000004038f8 : ret 0x8948
0x00000000004055a8 : ret 0x8949
0x000000000040573c : ret 0x89a5
0x0000000000403420 : ret 0x8b48
0x0000000000402a05 : ret 0x8d8b
0x000000000040b116 : ret 0xa4e8
0x00000000004026aa : ret 0xb0
0x000000000040ab86 : ret 0xb4e8
0x00000000004038eb : ret 0xb848
0x0000000000408f29 : ret 0xb849
0x0000000000409140 : ret 0xc
0x0000000000401fe5 : ret 0xc148
0x0000000000403d1c : ret 0xc2f6
0x00000000004032bf : ret 0xca21
0x00000000004025a3 : ret 0xca29
0x00000000004085d6 : ret 0xd101
0x0000000000406a93 : ret 0xd284
0x0000000000405e4c : ret 0xee8
0x0000000000403e8d : ret 0xf01
0x0000000000405838 : ret 0xf180
0x0000000000403d0f : ret 0xf280
0x000000000040284f : ret 0xf281
0x0000000000403923 : ret 0xf8ca
0x000000000040b6aa : ret 0xff63
0x000000000040a4aa : ret 0xff77
0x0000000000402faa : ret 0xffea
0x0000000000409cc7 : ret 0xffff
0x0000000000406204 : ret 1
0x0000000000408cf0 : ret 2
0x00000000004048a6 : rol byte ptr [rcx + rcx*4], 1 ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040a88f : ror byte ptr [r8 - 0x75], 0x55 ; enter -0x76b8, 0xc ; ret 0x59e9
0x0000000000407880 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000404a30 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x404a9b ; ret
0x0000000000401fec : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401ffb ; pop rbp ; ret
0x000000000040a890 : ror byte ptr [rax - 0x75], 0x55 ; enter -0x76b8, 0xc ; ret 0x59e9
0x000000000040a705 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x0000000000407881 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x000000000040557d : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000405586 : ror byte ptr [rax - 0x77], 1 ; ret 0x294c
0x0000000000404a31 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x404a9a ; ret
0x0000000000404223 : ror byte ptr [rax - 0x7f], -0x3c ; jo 0x404233 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040a4a4 : ror dword ptr [rax - 0x75], 0x51 ; or al, ch ; ret 0xff77
0x000000000040b7ff : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000408137 : ror dword ptr [rax - 0x7d], -0x3c ; pop rbp ; ret
0x0000000000401fbe : sal byte ptr [rsp + rsi*8 + 0x5d], -0x41 ; call 0xffffffffff4080d5
0x0000000000406bea : sal dl, 1 ; addps xmm1, xmm2 ; movaps xmm0, xmm1 ; pop rbp ; ret
0x0000000000401fee : sar eax, 1 ; jne 0x401ff9 ; pop rbp ; ret
0x0000000000401fed : sar rax, 1 ; jne 0x401ffa ; pop rbp ; ret
0x0000000000403920 : sbb al, -0x73 ; leave ; ret 0xf8ca
0x000000000040c378 : setne al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040c37a : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000040bad8 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004093b1 : stosd dword ptr [rdi], eax ; add byte ptr cs:[rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040e2fc : sub al, 5 ; add byte ptr [rax], al ; nop ; jle 0x40e309 ; jmp rdx
0x000000000040289d : sub byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x0000000000406bf0 : sub cl, al ; pop rbp ; ret
0x000000000040789f : sub dword ptr [rdx], 0x5b ; ret
0x000000000040c53d : sub esp, 8 ; add rsp, 8 ; ret
0x000000000040c53c : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040c50a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040e154 : test byte ptr [rbx], al ; add byte ptr [rax], al ; fsub dword ptr [rax - 1] ; jmp qword ptr [rdx]
0x000000000040b6a4 : test dword ptr [rbx], ecx ; add byte ptr [rax], al ; add al, ch ; ret 0xff63
0x0000000000405822 : xchg eax, ebp ; ret 0x8840
0x000000000040c246 : xchg eax, ebp ; ret 0xd284
0x000000000040c379 : xchg eax, ebp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000406a92 : xchg eax, esp ; ret 0xd284
0x000000000040d9ac : xor byte ptr [rbp - 1], dl ; call qword ptr [rax]
0x000000000040901e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000406557 : xor eax, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x00000000004048a5 : xor eax, edx ; mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
