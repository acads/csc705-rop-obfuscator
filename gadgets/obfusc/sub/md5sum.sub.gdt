0x0000000000401d2a : adc ah, byte ptr [rcx] ; add dh, al ; add al, 0x25 ; ret 0x6112
0x0000000000401d53 : adc ah, byte ptr [rcx] ; add esi, eax ; add al, 0x25 ; ret 0x6112
0x00000000004095ac : adc ah, byte ptr [rcx] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004017a4 : adc ah, byte ptr [rcx] ; jmp rax
0x00000000004017e4 : adc ah, byte ptr [rcx] ; jmp rdx
0x0000000000403961 : adc ah, byte ptr [rcx] ; pop rbp ; ret
0x0000000000404bd0 : adc al, -0x77 ; ret 0xca21
0x00000000004067e2 : adc byte ptr [rax], ch ; ret
0x00000000004067e1 : adc byte ptr es:[rax], ch ; ret
0x0000000000405499 : adc dh, bl ; sub byte ptr [rcx - 0xa], al ; jmp qword ptr [rcx]
0x0000000000408d5a : adc dword ptr [rax + 1], ecx ; ret 0x8941
0x000000000040b0d9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401d82 : add al, 0x25 ; ret
0x0000000000401d2f : add al, 0x25 ; ret 0x6112
0x000000000040f91c : add al, 2 ; add byte ptr [rax], al ; xor byte ptr [rax - 1], al ; call qword ptr [rsi]
0x000000000040f533 : add al, ah ; ret
0x00000000004100a7 : add al, bh ; ret
0x0000000000401ed6 : add al, bpl ; ret
0x0000000000401ed7 : add al, ch ; ret
0x0000000000401f78 : add al, ch ; ret 0xfff8
0x0000000000410087 : add al, cl ; ret
0x000000000040f5eb : add al, dh ; sar edi, cl ; call qword ptr [rax]
0x000000000040debf : add bl, dh ; ret
0x000000000040298c : add byte ptr [r8], r8b ; add dh, dh ; add al, 0x25 ; ret 0x6112
0x0000000000402c8b : add byte ptr [rax + 0x2504f601], dh ; ret
0x0000000000409031 : add byte ptr [rax + 1], cl ; ret 0x8b48
0x000000000040f733 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; cmp byte ptr [rdi + rdi*8], bl ; jmp rax
0x0000000000402bae : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; jmp rdi
0x00000000004090d0 : add byte ptr [rax - 0x75], cl ; push rbp ; call 0x1d031228
0x000000000040c14d : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000402bbe : add byte ptr [rax - 0x77], cl ; ret 0x39e8
0x0000000000402b6a : add byte ptr [rax - 0x77], cl ; ret 0x8de8
0x0000000000402c12 : add byte ptr [rax - 0x77], cl ; ret 0xe5e8
0x0000000000401b78 : add byte ptr [rax - 0x77], cl ; sub r8b, 0x4e ; ret
0x00000000004090db : add byte ptr [rax - 0x7f], cl ; ret 0x40
0x000000000040f35b : add byte ptr [rax], ah ; and bh, bh ; jmp rax
0x000000000040f513 : add byte ptr [rax], ah ; ret
0x000000000040f91a : add byte ptr [rax], al ; add al, 2 ; add byte ptr [rax], al ; xor byte ptr [rax - 1], al ; call qword ptr [rsi]
0x0000000000401f76 : add byte ptr [rax], al ; add al, ch ; ret 0xfff8
0x000000000040debd : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000402c89 : add byte ptr [rax], al ; add byte ptr [rax + 0x2504f601], dh ; ret
0x000000000040902f : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8b48
0x00000000004090ce : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbp ; call 0x1d03122a
0x00000000004090d9 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x40
0x000000000040f359 : add byte ptr [rax], al ; add byte ptr [rax], ah ; and bh, bh ; jmp rax
0x000000000040debb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000403ae0 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040debc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040f735 : add byte ptr [rax], al ; add byte ptr [rax], bh ; sbb al, -1 ; jmp rax
0x0000000000410081 : add byte ptr [rax], al ; add byte ptr [rcx + rcx], ch ; add al, cl ; ret
0x0000000000402a1a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x00000000004022bc : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040b9ee : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000402473 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000040f4ea : add byte ptr [rax], al ; add cl, -1 ; call qword ptr [rax]
0x000000000040d58c : add byte ptr [rax], al ; add cl, ch ; ret 2
0x0000000000401d7e : add byte ptr [rax], al ; add dh, al ; add al, 0x25 ; ret
0x000000000040298d : add byte ptr [rax], al ; add dh, dh ; add al, 0x25 ; ret 0x6112
0x00000000004023f3 : add byte ptr [rax], al ; add rsi, rax ; mov rax, rsi ; pop rbp ; ret
0x000000000040b0a1 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040adb0 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040135b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004100a6 : add byte ptr [rax], al ; clc ; ret
0x000000000040f736 : add byte ptr [rax], al ; cmp byte ptr [rdi + rdi*8], bl ; jmp rax
0x0000000000410066 : add byte ptr [rax], al ; cwde ; ret
0x0000000000410082 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; or dword ptr [rax], eax ; add al, cl ; ret
0x0000000000401519 : add byte ptr [rax], al ; jmp 0x401379
0x0000000000409672 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004100a2 : add byte ptr [rax], al ; mov word ptr [rcx], cs ; add byte ptr [rax], al ; clc ; ret
0x0000000000402cd7 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040bfeb : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040ad70 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040f79e : add byte ptr [rax], al ; push rax ; and bh, bh ; jmp rdx
0x000000000040f51a : add byte ptr [rax], al ; push rax ; ret
0x000000000040debe : add byte ptr [rax], al ; ret
0x000000000040f4f3 : add byte ptr [rax], al ; ret 0xffff
0x000000000040f732 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; cmp byte ptr [rdi + rdi*8], bl ; jmp rax
0x000000000040f79a : add byte ptr [rax], al ; test byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; and bh, bh ; jmp rdx
0x000000000040f91e : add byte ptr [rax], al ; xor byte ptr [rax - 1], al ; call qword ptr [rsi]
0x000000000040f737 : add byte ptr [rax], bh ; sbb al, -1 ; jmp rax
0x000000000040fd07 : add byte ptr [rax], bl ; mov bh, -1 ; jmp qword ptr [rdx]
0x000000000040fcc7 : add byte ptr [rax], ch ; mov ah, -1 ; jmp rdx
0x0000000000410027 : add byte ptr [rax], cl ; ret
0x000000000040bfec : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040ad71 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040236a : add byte ptr [rbx - 0xf34b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000410083 : add byte ptr [rcx + rcx], ch ; add al, cl ; ret
0x000000000040dd5c : add byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x0000000000401808 : add byte ptr [rcx], al ; ret
0x000000000040d588 : add byte ptr [rdi], cl ; lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000402a1c : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x00000000004022be : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040b9f0 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000402475 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000040f91b : add byte ptr [rdx + rax], al ; add byte ptr [rax], al ; xor byte ptr [rax - 1], al ; call qword ptr [rsi]
0x000000000040f4ec : add cl, -1 ; call qword ptr [rax]
0x000000000040d58e : add cl, ch ; ret 2
0x0000000000401d80 : add dh, al ; add al, 0x25 ; ret
0x0000000000401d2d : add dh, al ; add al, 0x25 ; ret 0x6112
0x000000000040298f : add dh, dh ; add al, 0x25 ; ret 0x6112
0x000000000040c629 : add dword ptr [rax - 0x77], ecx ; ret 0x8148
0x000000000040b09f : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040bfea : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040ad6f : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040dc1d : add dword ptr [rax], ecx ; ret 0x840
0x0000000000403482 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402e44 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004033bd : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040d8fa : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401804 : add eax, 0x20faae ; add ebx, esi ; ret
0x000000000040d58b : add eax, 0xe9000000 ; ret 2
0x00000000004069b5 : add eax, edi ; loop 0x40693e ; ret 0xf436
0x00000000004069ad : add eax, edi ; loop 0x4069b6 ; ret 0xc281
0x00000000004017cb : add eax, edx ; sar rax, 1 ; jne 0x4017dc ; pop rbp ; ret
0x0000000000401809 : add ebx, esi ; ret
0x0000000000401d7b : add ecx, ebp ; wait ; add byte ptr [rax], al ; add dh, al ; add al, 0x25 ; ret
0x0000000000401d56 : add esi, eax ; add al, 0x25 ; ret 0x6112
0x00000000004023f6 : add esi, eax ; mov rax, rsi ; pop rbp ; ret
0x0000000000402c8d : add esi, esi ; add al, 0x25 ; ret
0x00000000004019eb : add esp, 0x10 ; pop rbp ; ret
0x0000000000402cd3 : add esp, 0x120 ; pop rbp ; ret
0x000000000040d8bc : add esp, 0x130 ; pop rbp ; ret
0x000000000040c31c : add esp, 0x1a0 ; pop rbp ; ret
0x000000000040ccfe : add esp, 0x1e0 ; pop rbp ; ret
0x0000000000403487 : add esp, 0x20 ; pop rbp ; ret
0x0000000000403d77 : add esp, 0x28 ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000401acd : add esp, 0x30 ; pop rbp ; ret
0x0000000000408a88 : add esp, 0x30 ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000402e49 : add esp, 0x40 ; pop rbp ; ret
0x000000000040b4bc : add esp, 0x50 ; pop rbp ; ret
0x00000000004033c2 : add esp, 0x60 ; pop rbp ; ret
0x0000000000409993 : add esp, 0x70 ; pop rbp ; ret
0x000000000040b3ca : add esp, 0x90 ; pop rbp ; ret
0x000000000040c1b3 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040915b : add esp, 0xc0 ; pop rbp ; ret
0x0000000000408c69 : add esp, 0xe0 ; pop rbp ; ret
0x000000000040135e : add esp, 8 ; ret
0x00000000004069b4 : add rax, r15 ; loop 0x40693f ; ret 0xf436
0x00000000004069ac : add rax, r15 ; loop 0x4069b7 ; ret 0xc281
0x00000000004017ca : add rax, rdx ; sar rax, 1 ; jne 0x4017dd ; pop rbp ; ret
0x00000000004023f5 : add rsi, rax ; mov rax, rsi ; pop rbp ; ret
0x00000000004019ea : add rsp, 0x10 ; pop rbp ; ret
0x0000000000402cd2 : add rsp, 0x120 ; pop rbp ; ret
0x000000000040d8bb : add rsp, 0x130 ; pop rbp ; ret
0x000000000040c31b : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000040ccfd : add rsp, 0x1e0 ; pop rbp ; ret
0x0000000000403486 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000401acc : add rsp, 0x30 ; pop rbp ; ret
0x0000000000408a87 : add rsp, 0x30 ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000402e48 : add rsp, 0x40 ; pop rbp ; ret
0x000000000040b4bb : add rsp, 0x50 ; pop rbp ; ret
0x00000000004033c1 : add rsp, 0x60 ; pop rbp ; ret
0x0000000000409992 : add rsp, 0x70 ; pop rbp ; ret
0x000000000040b3c9 : add rsp, 0x90 ; pop rbp ; ret
0x000000000040c1b2 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040915a : add rsp, 0xc0 ; pop rbp ; ret
0x0000000000408c68 : add rsp, 0xe0 ; pop rbp ; ret
0x000000000040135d : add rsp, 8 ; ret
0x000000000040d8f9 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040f35d : and bh, bh ; jmp rax
0x000000000040f7a1 : and bh, bh ; jmp rdx
0x0000000000401807 : and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000402cd5 : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000404139 : and eax, 0x212305e5 ; ret 0x941
0x0000000000405058 : and eax, 0x21444134 ; ret 0x8941
0x0000000000401d28 : and eax, 0x6112c1 ; add dh, al ; add al, 0x25 ; ret 0x6112
0x0000000000401d51 : and eax, 0x6112c1 ; add esi, eax ; add al, 0x25 ; ret 0x6112
0x000000000040395f : and eax, 0x6112e0 ; pop rbp ; ret
0x0000000000403983 : and eax, 0x6112e8 ; pop rbp ; ret
0x000000000040807f : and eax, dword ptr [rbp - 0x76ba35df] ; ret 0x8141
0x000000000040413c : and esp, dword ptr [rcx] ; ret 0x941
0x0000000000406eec : and r12d, dword ptr [r9] ; ret 0x941
0x0000000000408dd4 : call 0x1d030f24
0x000000000040902a : call 0x1d03117a
0x00000000004090d4 : call 0x1d031224
0x0000000000401f79 : call 0x401848
0x0000000000402baa : call 0x403499
0x000000000040ada9 : call 0xffffffffe90336f9
0x000000000040ada8 : call 0xffffffffe90336fa
0x000000000040c7a8 : call 0xffffffffff8d8a97
0x000000000040c7a7 : call 0xffffffffff8d8a98
0x000000000040de99 : call qword ptr [r12 + rbx*8]
0x000000000040f4ef : call qword ptr [rax]
0x000000000040f923 : call qword ptr [rsi]
0x000000000040de9a : call qword ptr [rsp + rbx*8]
0x000000000040182d : call rax
0x000000000040aafc : call rbx
0x000000000040fc23 : call rdi
0x000000000040d8ba : clc ; add rsp, 0x130 ; pop rbp ; ret
0x000000000040c51f : clc ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040ba01 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000409468 : clc ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000407ada : clc ; cmp ch, dl ; mov ch, -0x7f ; ret 0x59c3
0x00000000004017cf : clc ; jne 0x4017d8 ; pop rbp ; ret
0x00000000004020fc : clc ; jp 0x4020fe ; cmp dword ptr [rcx - 0xa], eax ; jmp qword ptr [rcx]
0x00000000004069b6 : clc ; loop 0x40693d ; ret 0xf436
0x00000000004069ae : clc ; loop 0x4069b5 ; ret 0xc281
0x0000000000409845 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000403adc : clc ; mov dword ptr [rdi + 0x18], 0 ; pop rbp ; ret
0x000000000040dddf : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000403b7e : clc ; mov esi, dword ptr [rbp - 0xc] ; mov dword ptr [rdi], esi ; pop rbp ; ret
0x0000000000402407 : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040240b : clc ; pop rbp ; ret
0x00000000004100a8 : clc ; ret
0x000000000040cd66 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040c8e9 : cld ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040ce8e : cld ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000408c67 : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000040dddc : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040cd63 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040c8e6 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040ce8b : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401806 : cli ; and byte ptr [rax], al ; add ebx, esi ; ret
0x00000000004055f4 : cli ; popfq ; jmp 0x36d7a3
0x0000000000401fbc : cmp al, -1 ; push qword ptr [rax + 0x250c8a01] ; ret
0x0000000000402bb1 : cmp al, 0x25 ; jmp rdi
0x0000000000401ed2 : cmp al, 0x25 ; mov ah, ch ; add al, bpl ; ret
0x000000000040421e : cmp bh, byte ptr [rcx + 0x214469b1] ; ret 0x8941
0x000000000040f738 : cmp byte ptr [rdi + rdi*8], bl ; jmp rax
0x0000000000407adb : cmp ch, dl ; mov ch, -0x7f ; ret 0x59c3
0x00000000004020ff : cmp dword ptr [rcx - 0xa], eax ; jmp qword ptr [rcx]
0x000000000040cbe9 : cmp dword ptr [rdx - 0x76be63d5], ebx ; ret
0x000000000040178d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4017a0 ; pop rbp ; ret
0x0000000000408873 : cmp esp, dword ptr [rcx] ; ret 0x941
0x000000000040bb2c : cwde ; mov rcx, qword ptr [rax*8 + 0x40ef98] ; jmp rcx
0x0000000000410068 : cwde ; ret
0x0000000000407f4d : cwde ; ret 0x8d89
0x0000000000407f45 : cwde ; ret 0xc101
0x00000000004067db : dec byte ptr [rbx - 0x397e4fb3] ; adc byte ptr es:[rax], ch ; ret
0x0000000000404292 : dec dword ptr [rax - 0x75] ; pop rbp ; mov byte ptr [rax - 0x7f], cl ; ret
0x000000000040d5f4 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000408fcd : dec dword ptr [rax - 0x77] ; ret 0x8148
0x0000000000402b86 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000402370 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000404679 : dec dword ptr [rbp - 0x77] ; ror dword ptr [rcx - 0x7f], cl ; ret
0x00000000004046bf : dec dword ptr [rbx + rcx*4 + 0x55] ; mov byte ptr [rcx - 0x7f], cl ; ret 4
0x0000000000403fb7 : dec dword ptr [rbx + rcx*4 + 0x5d] ; mov byte ptr [rcx - 0x7f], cl ; ret
0x0000000000404563 : dec dword ptr [rcx - 0x7628d639] ; ret 0xf229
0x00000000004043d5 : dec dword ptr [rcx - 0x7629d63a] ; ret 0x2944
0x0000000000404313 : dec dword ptr [rcx - 0x7629d63a] ; ret 0xca29
0x000000000040a502 : dec dword ptr [rcx - 0x77] ; ret 0x294d
0x00000000004069a9 : enter -0x157f, 0x4c ; add eax, edi ; loop 0x4069ba ; ret 0xc281
0x00000000004069a8 : enter -0x157f, 0x4c ; add eax, edi ; loop 0x4069bb ; ret 0xc281
0x000000000040a890 : enter 0x4b05, 0x34 ; fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x000000000040a894 : fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x0000000000407acd : fiadd dword ptr [rdx - 0x7e35fe4e] ; ret 0xdae3
0x0000000000401d04 : fild word ptr [rax] ; jmp rcx
0x0000000000403f6c : fisttp dword ptr [rax - 0x7f] ; ret
0x0000000000403303 : fisttp qword ptr [rax - 0x77] ; ret 0x148
0x000000000040de9c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000405ee4 : fstp qword ptr [rsp + rbx*8 + 0x21] ; ret 0x941
0x0000000000405ee6 : fsub qword ptr [rcx] ; ret 0x941
0x0000000000407f4b : fucomp st(4) ; cwde ; ret 0x8d89
0x0000000000407f43 : fucomp st(4) ; cwde ; ret 0xc101
0x00000000004019e9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403b81 : hlt ; mov dword ptr [rdi], esi ; pop rbp ; ret
0x00000000004017a0 : hlt ; pop rbp ; mov edi, 0x611280 ; jmp rax
0x0000000000407f4c : in al, dx ; cwde ; ret 0x8d89
0x0000000000407f44 : in al, dx ; cwde ; ret 0xc101
0x0000000000400290 : in eax, -0x45 ; ret 0xeffd
0x000000000040f65d : in eax, -1 ; call rax
0x0000000000401ed5 : in eax, 0x40 ; add al, ch ; ret
0x000000000040413a : in eax, 5 ; and esp, dword ptr [rcx] ; ret 0x941
0x0000000000407b3f : in eax, dx ; jmp 0x9823d69
0x000000000040402e : inc dword ptr [rbp - 0x77] ; ret 0x2145
0x0000000000403e5a : inc dword ptr [rcx + 0xf] ; xchg eax, edx ; ret 0x8041
0x0000000000407f40 : inc dword ptr [rcx - 0x6713223f] ; ret 0xc101
0x000000000040697d : inc dword ptr [rcx - 0x76a2f219] ; mov bl, 0x21 ; ret 0xce09
0x000000000040782a : inc dword ptr [rcx - 0x77] ; ret 0x8141
0x000000000040799d : inc dword ptr [rcx - 0x7f] ; loop 0x407979 ; ret 0x8e6a
0x000000000040797f : inc dword ptr [rcx - 0x7f] ; loopne 0x40795b ; ret 0x8e6a
0x000000000040ab1b : inc dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000404a6c : inc ecx ; jmp 0x2202d391
0x0000000000404bcd : inc ecx ; jmp 0x2202d4ed
0x0000000000404cfa : inc ecx ; jmp 0x2202d615
0x0000000000405736 : inc ecx ; jmp 0x2202e054
0x0000000000405a5c : inc ecx ; jmp 0x2202e37f
0x0000000000405da2 : inc ecx ; jmp 0x2202e6c9
0x00000000004069f0 : inc ecx ; jmp 0x2202f305
0x0000000000406ab3 : inc ecx ; jmp 0x2202f3db
0x0000000000406ddd : inc ecx ; jmp 0x2202f6f2
0x00000000004071c3 : inc ecx ; jmp 0x2202fad8
0x0000000000407497 : inc ecx ; jmp 0x2202fdb3
0x000000000040757b : inc ecx ; jmp 0x2202fe90
0x00000000004077a5 : inc ecx ; jmp 0x220300c7
0x0000000000407c69 : inc ecx ; jmp 0x2203058b
0x0000000000407f63 : inc ecx ; jmp 0x2203087a
0x00000000004089a2 : inc ecx ; jmp 0x220312b9
0x0000000000410084 : insb byte ptr [rdi], dx ; or dword ptr [rax], eax ; add al, cl ; ret
0x000000000040c155 : int 0x80
0x0000000000401793 : ja 0x40179a ; pop rbp ; ret
0x000000000040179f : je 0x40179d ; pop rbp ; mov edi, 0x611280 ; jmp rax
0x0000000000402406 : jge 0x402407 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000403b7d : jge 0x403b7f ; mov esi, dword ptr [rbp - 0xc] ; mov dword ptr [rdi], esi ; pop rbp ; ret
0x0000000000404a6e : jmp 0x2202d38f
0x0000000000404bcf : jmp 0x2202d4eb
0x0000000000404cfc : jmp 0x2202d613
0x0000000000405738 : jmp 0x2202e052
0x0000000000405a5e : jmp 0x2202e37d
0x0000000000405da4 : jmp 0x2202e6c7
0x00000000004069f2 : jmp 0x2202f303
0x0000000000406ab5 : jmp 0x2202f3d9
0x0000000000406ddf : jmp 0x2202f6f0
0x00000000004071c5 : jmp 0x2202fad6
0x0000000000407499 : jmp 0x2202fdb1
0x000000000040757d : jmp 0x2202fe8e
0x00000000004077a7 : jmp 0x220300c5
0x0000000000407c6b : jmp 0x22030589
0x0000000000407f65 : jmp 0x22030878
0x00000000004089a4 : jmp 0x220312b7
0x00000000004055f6 : jmp 0x36d7a1
0x000000000040151b : jmp 0x401377
0x0000000000401d7c : jmp 0x401e24
0x000000000040298b : jmp 0x4029e5
0x0000000000407b40 : jmp 0x9823d68
0x000000000040c628 : jmp 0xffffffffc2ca0e32
0x0000000000407f4a : jmp 0xffffffffc2d96c30
0x000000000040305f : jmp qword ptr [rax]
0x0000000000402105 : jmp qword ptr [rcx]
0x000000000040fd0b : jmp qword ptr [rdx]
0x00000000004017a7 : jmp rax
0x0000000000401d07 : jmp rcx
0x0000000000402bb3 : jmp rdi
0x00000000004017e7 : jmp rdx
0x00000000004017d0 : jne 0x4017d7 ; pop rbp ; ret
0x0000000000403b80 : jne 0x403b7b ; mov dword ptr [rdi], esi ; pop rbp ; ret
0x0000000000408319 : jo 0x40833e ; ret 0x941
0x0000000000409995 : jo 0x4099f6 ; ret
0x000000000040afbf : jo 0x40b025 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040b664 : jo 0x40b6c5 ; ret
0x000000000040b79e : jo 0x40b7ff ; ret
0x00000000004020fd : jp 0x4020fd ; cmp dword ptr [rcx - 0xa], eax ; jmp qword ptr [rcx]
0x000000000040d58a : lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000404cf6 : lea ebp, dword ptr [rdi + rdi*8 - 1] ; inc ecx ; jmp 0x2202d619
0x0000000000405732 : lea ebp, dword ptr [rdi + rdi*8 - 1] ; inc ecx ; jmp 0x2202e058
0x0000000000407493 : lea ebp, dword ptr [rdi + rdi*8 - 1] ; inc ecx ; jmp 0x2202fdb7
0x0000000000404a68 : lea esi, dword ptr [rdi + rdi*8 - 1] ; inc ecx ; jmp 0x2202d395
0x0000000000405d9e : lea esi, dword ptr [rdi + rdi*8 - 1] ; inc ecx ; jmp 0x2202e6cd
0x0000000000406aaf : lea esi, dword ptr [rdi + rdi*8 - 1] ; inc ecx ; jmp 0x2202f3df
0x0000000000403e56 : lea esp, dword ptr [rdi + rdi*8 - 1] ; inc dword ptr [rcx + 0xf] ; xchg eax, edx ; ret 0x8041
0x0000000000404d92 : lock xor byte ptr [rdx + 0x21444278], ch ; ret 0x8941
0x000000000040807e : lodsb al, byte ptr [rsi] ; and eax, dword ptr [rbp - 0x76ba35df] ; ret 0x8141
0x000000000040660a : lodsb al, byte ptr [rsi] ; xor al, 0x21 ; ret 0x941
0x00000000004069b7 : loop 0x40693c ; ret 0xf436
0x00000000004069af : loop 0x4069b4 ; ret 0xc281
0x00000000004079a0 : loop 0x407976 ; ret 0x8e6a
0x0000000000404138 : loope 0x404165 ; in eax, 5 ; and esp, dword ptr [rcx] ; ret 0x941
0x0000000000405ee2 : loope 0x405ef5 ; fstp qword ptr [rsp + rbx*8 + 0x21] ; ret 0x941
0x0000000000406607 : loope 0x4065da ; xlatb ; lodsb al, byte ptr [rsi] ; xor al, 0x21 ; ret 0x941
0x00000000004070e9 : loope 0x407120 ; xchg dword ptr [rax], eax ; sbb byte ptr [rcx], ah ; ret 0x941
0x000000000040807c : loope 0x408021 ; lodsb al, byte ptr [rsi] ; and eax, dword ptr [rbp - 0x76ba35df] ; ret 0x8141
0x0000000000407982 : loopne 0x407958 ; ret 0x8e6a
0x0000000000408c6b : loopne 0x408c72 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004092eb : loopne 0x40933b ; add esp, 0x20 ; pop rbp ; ret
0x00000000004092ea : loopne 0x40933c ; add esp, 0x20 ; pop rbp ; ret
0x000000000040cd00 : loopne 0x40cd08 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000405d73 : mov ah, -0x77 ; ret 0xca29
0x0000000000408963 : mov ah, -0x77 ; ret 0xf229
0x000000000040fcc9 : mov ah, -1 ; jmp rdx
0x0000000000401ed4 : mov ah, ch ; add al, bpl ; ret
0x000000000040b53b : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040b3c8 : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x000000000040f518 : mov al, 0xa ; add byte ptr [rax], al ; push rax ; ret
0x000000000040d8f6 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040fd09 : mov bh, -1 ; jmp qword ptr [rdx]
0x0000000000406983 : mov bl, 0x21 ; ret 0xce09
0x0000000000403981 : mov byte ptr [0x6112e8], al ; pop rbp ; ret
0x0000000000404296 : mov byte ptr [rax - 0x7f], cl ; ret
0x0000000000403fbb : mov byte ptr [rcx - 0x7f], cl ; ret
0x00000000004046c3 : mov byte ptr [rcx - 0x7f], cl ; ret 4
0x0000000000401803 : mov byte ptr [rip + 0x20faae], 1 ; ret
0x0000000000407add : mov ch, -0x7f ; ret 0x59c3
0x0000000000408fde : mov ch, 0x5b ; ret
0x0000000000403484 : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402e46 : mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004033bf : mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040d8fc : mov dh, -0x40 ; pop rbp ; ret
0x000000000040537d : mov dh, byte ptr [rbp + 0x144b483] ; ret 0xc281
0x0000000000407ad7 : mov dl, -0x7f ; ret 0x38f8
0x000000000040395d : mov dword ptr [0x6112e0], edi ; pop rbp ; ret
0x0000000000409104 : mov dword ptr [rax + 0x18], ecx ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000409846 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000409808 : mov dword ptr [rax], eax ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004096c4 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000409807 : mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004034f6 : mov dword ptr [rbp - 0x10], ecx ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004092e9 : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401ac9 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004019e7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040dddd : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040393f : mov dword ptr [rbp - 8], eax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402405 : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004098be : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403add : mov dword ptr [rdi + 0x18], 0 ; pop rbp ; ret
0x0000000000403b82 : mov dword ptr [rdi], esi ; pop rbp ; ret
0x0000000000409678 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040c43b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403b61 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000409675 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004034fa : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040c733 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040962d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004096be : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040980a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040998f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040b539 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040cd64 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040c8e7 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040ce8c : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040c51d : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b9ff : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000409466 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000402409 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004023f9 : mov eax, esi ; pop rbp ; ret
0x000000000040182b : mov ebp, esp ; call rax
0x0000000000401791 : mov ebp, esp ; ja 0x40179c ; pop rbp ; ret
0x000000000040421f : mov ecx, 0x214469b1 ; ret 0x8941
0x000000000040c16d : mov ecx, 0x5b2a830a ; ret
0x0000000000401d00 : mov ecx, dword ptr [rax*8 + 0x40df10] ; jmp rcx
0x0000000000409a52 : mov ecx, dword ptr [rax*8 + 0x40ea90] ; jmp rcx
0x0000000000409d76 : mov ecx, dword ptr [rax*8 + 0x40ead8] ; jmp rcx
0x000000000040bb2e : mov ecx, dword ptr [rax*8 + 0x40ef98] ; jmp rcx
0x00000000004096c1 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401825 : mov edi, 0x610e20 ; mov rbp, rsp ; call rax
0x00000000004017a2 : mov edi, 0x611280 ; jmp rax
0x00000000004017e2 : mov edi, 0x611280 ; jmp rdx
0x0000000000408df5 : mov edi, 0x63f1c760 ; ret 0xb7e6
0x000000000040552e : mov edi, 0x8945ca21 ; ret 0x8141
0x0000000000403b7c : mov edi, dword ptr [rbp - 8] ; mov esi, dword ptr [rbp - 0xc] ; mov dword ptr [rdi], esi ; pop rbp ; ret
0x000000000040de97 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000040de96 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000408de5 : mov edx, 0x63f1c760 ; ret 0xb7e6
0x0000000000408fe9 : mov edx, 0xc5c747 ; mov ch, 0x5b ; ret
0x0000000000408fd9 : mov esi, 0xc5c747 ; mov ch, 0x5b ; ret
0x0000000000403b7f : mov esi, dword ptr [rbp - 0xc] ; mov dword ptr [rdi], esi ; pop rbp ; ret
0x00000000004017e0 : mov esi, eax ; mov edi, 0x611280 ; jmp rdx
0x000000000040395c : mov qword ptr [0x6112e0], rdi ; pop rbp ; ret
0x00000000004034f5 : mov qword ptr [rbp - 0x10], rcx ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040393e : mov qword ptr [rbp - 8], rax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402404 : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004098bd : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405d72 : mov r12b, -0x77 ; ret 0xca29
0x0000000000408962 : mov r12b, -0x77 ; ret 0xf229
0x000000000040b53a : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040c43a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403b60 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000409674 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004034f9 : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040c732 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040962c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040998e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040b538 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040c51c : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b9fe : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000409465 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000402408 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004023f8 : mov rax, rsi ; pop rbp ; ret
0x000000000040182a : mov rbp, rsp ; call rax
0x0000000000401790 : mov rbp, rsp ; ja 0x40179d ; pop rbp ; ret
0x0000000000401cff : mov rcx, qword ptr [rax*8 + 0x40df10] ; jmp rcx
0x0000000000409a51 : mov rcx, qword ptr [rax*8 + 0x40ea90] ; jmp rcx
0x0000000000409d75 : mov rcx, qword ptr [rax*8 + 0x40ead8] ; jmp rcx
0x000000000040bb2d : mov rcx, qword ptr [rax*8 + 0x40ef98] ; jmp rcx
0x00000000004017df : mov rsi, rax ; mov edi, 0x611280 ; jmp rdx
0x00000000004100a4 : mov word ptr [rcx], cs ; add byte ptr [rax], al ; clc ; ret
0x000000000040f50c : movabs al, byte ptr [0x2000000a90ffffc2] ; ret
0x0000000000407338 : movabs al, byte ptr [0x81e6db99e5c2819d] ; ret 0x97e4
0x0000000000407ec8 : movabs al, byte ptr [0x944f30941d02145] ; ret
0x000000000040f52c : movabs al, byte ptr [0xe000000b10ffffc3] ; ret
0x00000000004049a1 : movabs byte ptr [0x8945d72144e46872], al ; ret
0x00000000004062ad : movabs dword ptr [0x8945d72144836e9c], eax ; ret
0x00000000004059cf : movabs dword ptr [0x945f90941d02145], eax ; ret
0x0000000000405b38 : movabs eax, dword ptr [0x89f929c189d4bc1c] ; ret 0xea81
0x0000000000403483 : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402e45 : movzx eax, al ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004033be : movzx eax, al ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040d8fb : movzx eax, al ; pop rbp ; ret
0x000000000040f510 : nop ; or al, byte ptr [rax] ; add byte ptr [rax], ah ; ret
0x000000000040deb8 : nop dword ptr [rax + rax] ; ret
0x000000000040a0dd : or al, 0x18 ; ret 0x6451
0x0000000000401fc3 : or al, 0x25 ; ret
0x0000000000408a86 : or al, 0x48 ; add esp, 0x30 ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040f511 : or al, byte ptr [rax] ; add byte ptr [rax], ah ; ret
0x000000000040f4f1 : or al, byte ptr [rax] ; add byte ptr [rax], al ; ret 0xffff
0x0000000000402bac : or byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; jmp rdi
0x000000000040346e : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x00000000004100a5 : or dword ptr [rax], eax ; add al, bh ; ret
0x0000000000410085 : or dword ptr [rax], eax ; add al, cl ; ret
0x0000000000410025 : or dword ptr [rax], eax ; add byte ptr [rax], cl ; ret
0x0000000000406980 : or eax, 0x21b3895d ; ret 0xce09
0x000000000040f531 : or eax, dword ptr [rax] ; add al, ah ; ret
0x000000000040b721 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405ee3 : or ebx, ebp ; pop rsp ; fsub qword ptr [rcx] ; ret 0x941
0x000000000040028c : out -0x7a, eax ; sahf ; xchg eax, esp ; in eax, -0x45 ; ret 0xeffd
0x000000000040733f : out -0x7f, al ; ret 0x97e4
0x000000000040f66d : out -1, al ; call qword ptr [rax]
0x0000000000402b68 : out 0x40, eax ; add byte ptr [rax - 0x77], cl ; ret 0x8de8
0x00000000004067e8 : out dx, al ; adc byte ptr es:[rax], ch ; ret
0x0000000000405b0b : outsd dx, dword ptr [rsi] ; rol dword ptr [rcx - 0xa], 1 ; jmp qword ptr [rcx]
0x0000000000400289 : outsd dx, dword ptr [rsi] ; test dword ptr [rbx], esi ; out -0x7a, eax ; sahf ; xchg eax, esp ; in eax, -0x45 ; ret 0xeffd
0x000000000040deac : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040afc1 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040deae : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000403d7b : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040deb0 : pop r14 ; pop r15 ; ret
0x0000000000408a8c : pop r14 ; pop rbp ; ret
0x0000000000403d7d : pop r15 ; pop rbp ; ret
0x000000000040deb2 : pop r15 ; ret
0x0000000000404295 : pop rbp ; mov byte ptr [rax - 0x7f], cl ; ret
0x0000000000403fba : pop rbp ; mov byte ptr [rcx - 0x7f], cl ; ret
0x0000000000401802 : pop rbp ; mov byte ptr [rip + 0x20faae], 1 ; ret
0x00000000004017a1 : pop rbp ; mov edi, 0x611280 ; jmp rax
0x00000000004017de : pop rbp ; mov rsi, rax ; mov edi, 0x611280 ; jmp rdx
0x000000000040deab : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040deaf : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401795 : pop rbp ; ret
0x000000000040afc0 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403d7a : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000408a8b : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000408fdf : pop rbx ; ret
0x0000000000403d7e : pop rdi ; pop rbp ; ret
0x000000000040deb3 : pop rdi ; ret
0x0000000000403d7c : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040deb1 : pop rsi ; pop r15 ; ret
0x0000000000408a8d : pop rsi ; pop rbp ; ret
0x0000000000405ee5 : pop rsp ; fsub qword ptr [rcx] ; ret 0x941
0x000000000040dead : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040afc2 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004055f5 : popfq ; jmp 0x36d7a2
0x0000000000404bca : push -0x3e000001 ; jmp 0x2202d4f0
0x0000000000405a59 : push -0x3e000001 ; jmp 0x2202e382
0x00000000004077a2 : push -0x3e000001 ; jmp 0x220300ca
0x0000000000407c66 : push -0x3e000001 ; jmp 0x2203058e
0x0000000000405a38 : push -0x76000001 ; ret 0xca29
0x0000000000406343 : push -0x7e000001 ; ret 0x51e
0x0000000000401fbf : push qword ptr [rax + 0x250c8a01] ; ret
0x000000000040f517 : push qword ptr [rax + 0x5000000a] ; ret
0x000000000040f5d7 : push qword ptr [rax + 0x7000000d] ; sar edi, cl ; call rax
0x000000000040f657 : push qword ptr [rax - 0x4ffffff1] ; in eax, -1 ; call rax
0x000000000040f7a0 : push rax ; and bh, bh ; jmp rdx
0x000000000040b4be : push rax ; pop rbp ; ret
0x000000000040f51c : push rax ; ret
0x0000000000405b09 : push rax ; sbb al, 0x6f ; rol dword ptr [rcx - 0xa], 1 ; jmp qword ptr [rcx]
0x0000000000408dd3 : push rbp ; call 0x1d030f25
0x0000000000409029 : push rbp ; call 0x1d03117b
0x00000000004090d3 : push rbp ; call 0x1d031225
0x00000000004046c2 : push rbp ; mov byte ptr [rcx - 0x7f], cl ; ret 4
0x0000000000401824 : push rbp ; mov edi, 0x610e20 ; mov rbp, rsp ; call rax
0x0000000000401f7d : push rsi ; add al, 0x25 ; ret 0x6112
0x0000000000407f42 : rcr ebp, -0x14 ; cwde ; ret 0xc101
0x0000000000401361 : ret
0x000000000040d7c2 : ret 0
0x000000000040322b : ret 0x148
0x000000000040b15e : ret 0x1b2
0x0000000000408dd7 : ret 0x1c
0x0000000000401722 : ret 0x20fa
0x0000000000401522 : ret 0x20fb
0x0000000000404031 : ret 0x2145
0x0000000000408f5c : ret 0x2148
0x0000000000408f69 : ret 0x21e8
0x0000000000406cad : ret 0x25b3
0x00000000004043db : ret 0x2944
0x0000000000402917 : ret 0x2948
0x000000000040a4e9 : ret 0x294c
0x000000000040a505 : ret 0x294d
0x0000000000403f34 : ret 0x3145
0x00000000004069bf : ret 0x380c
0x0000000000407ad9 : ret 0x38f8
0x000000000040319d : ret 0x3948
0x0000000000402bc1 : ret 0x39e8
0x00000000004090de : ret 0x40
0x0000000000406cb3 : ret 0x4b60
0x0000000000407ac6 : ret 0x4d8b
0x000000000040746c : ret 0x50b
0x0000000000406348 : ret 0x51e
0x0000000000409744 : ret 0x5589
0x0000000000407adf : ret 0x59c3
0x0000000000401d31 : ret 0x6112
0x000000000040a0df : ret 0x6451
0x00000000004085b8 : ret 0x6552
0x000000000040880c : ret 0x683f
0x0000000000409042 : ret 0x78e8
0x0000000000407466 : ret 0x7cf8
0x000000000040a51d : ret 0x7de8
0x0000000000403e5e : ret 0x8041
0x0000000000403f1d : ret 0x8141
0x0000000000403c52 : ret 0x8148
0x000000000040dc1f : ret 0x840
0x0000000000402a1f : ret 0x8840
0x000000000040bae9 : ret 0x8844
0x0000000000404082 : ret 0x8941
0x00000000004031dd : ret 0x8948
0x000000000040a508 : ret 0x8949
0x0000000000403d37 : ret 0x894c
0x000000000040a69c : ret 0x89a5
0x00000000004026fc : ret 0x8b48
0x0000000000403c66 : ret 0x8b4c
0x0000000000407f4e : ret 0x8d89
0x0000000000402b6d : ret 0x8de8
0x0000000000407984 : ret 0x8e6a
0x000000000040413e : ret 0x941
0x0000000000403ff6 : ret 0x9589
0x00000000004087fe : ret 0x9676
0x0000000000407341 : ret 0x97e4
0x000000000040733b : ret 0x99e5
0x0000000000401e68 : ret 0xb0
0x0000000000408dea : ret 0xb7e6
0x0000000000408d50 : ret 0xb848
0x000000000040d7c9 : ret 0xb849
0x00000000004089e6 : ret 0xbe3e
0x0000000000408d40 : ret 0xbe48
0x0000000000408190 : ret 0xbff4
0x0000000000407f46 : ret 0xc101
0x00000000004017c5 : ret 0xc148
0x0000000000405383 : ret 0xc281
0x000000000040d530 : ret 0xc2f6
0x0000000000404a71 : ret 0xca21
0x0000000000403451 : ret 0xca29
0x0000000000406985 : ret 0xce09
0x0000000000405e48 : ret 0xce81
0x0000000000406471 : ret 0xce89
0x00000000004022c1 : ret 0xd284
0x0000000000408812 : ret 0xd2bb
0x00000000004043de : ret 0xd601
0x0000000000407ad3 : ret 0xdae3
0x0000000000403fa5 : ret 0xdc06
0x0000000000404288 : ret 0xde81
0x0000000000402478 : ret 0xe280
0x0000000000405230 : ret 0xe59
0x0000000000402c15 : ret 0xe5e8
0x000000000040818a : ret 0xe6e0
0x0000000000404b8b : ret 0xea81
0x000000000040adac : ret 0xee8
0x0000000000400292 : ret 0xeffd
0x000000000040a798 : ret 0xf180
0x00000000004043e2 : ret 0xf229
0x000000000040d523 : ret 0xf280
0x0000000000409f7e : ret 0xf281
0x00000000004069b9 : ret 0xf436
0x0000000000403f7f : ret 0xfa29
0x0000000000408a06 : ret 0xfdaf
0x0000000000406c92 : ret 0xfe09
0x000000000040c7aa : ret 0xff4c
0x0000000000401f7a : ret 0xfff8
0x000000000040f4f5 : ret 0xffff
0x0000000000403231 : ret 1
0x000000000040d590 : ret 2
0x00000000004046c6 : ret 4
0x0000000000409806 : rol byte ptr [rcx + rcx*4], 1 ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000405b0c : rol dword ptr [rcx - 0xa], 1 ; jmp qword ptr [rcx]
0x0000000000409025 : ror byte ptr [r8 - 0x75], 1 ; push rbp ; call 0x1d03117f
0x000000000040c150 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000409990 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x4099fb ; ret
0x00000000004017cc : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4017db ; pop rbp ; ret
0x0000000000409026 : ror byte ptr [rax - 0x75], 1 ; push rbp ; call 0x1d03117e
0x000000000040c151 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x000000000040a4dd : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x000000000040a4e6 : ror byte ptr [rax - 0x77], 1 ; ret 0x294c
0x0000000000409991 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x4099fa ; ret
0x0000000000402e47 : ror byte ptr [rax - 0x7d], -0x3c ; pop rbp ; ret
0x0000000000402cd1 : ror byte ptr [rax - 0x7f], -0x3c ; and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040467c : ror dword ptr [rcx - 0x7f], cl ; ret
0x000000000040028e : sahf ; xchg eax, esp ; in eax, -0x45 ; ret 0xeffd
0x000000000040f5ad : sar bh, 1 ; call qword ptr [rax]
0x00000000004017ce : sar eax, 1 ; jne 0x4017d9 ; pop rbp ; ret
0x000000000040f5ed : sar edi, cl ; call qword ptr [rax]
0x000000000040f5dd : sar edi, cl ; call rax
0x00000000004017cd : sar rax, 1 ; jne 0x4017da ; pop rbp ; ret
0x0000000000406ab6 : sbb al, -0x77 ; ret 0xca21
0x000000000040f739 : sbb al, -1 ; jmp rax
0x000000000040f734 : sbb al, 0 ; add byte ptr [rax], al ; cmp byte ptr [rdi + rdi*8], bl ; jmp rax
0x0000000000410080 : sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; or dword ptr [rax], eax ; add al, cl ; ret
0x00000000004100a0 : sbb al, 0 ; add byte ptr [rax], al ; mov word ptr [rcx], cs ; add byte ptr [rax], al ; clc ; ret
0x0000000000405b0a : sbb al, 0x6f ; rol dword ptr [rcx - 0xa], 1 ; jmp qword ptr [rcx]
0x0000000000408dd0 : sbb byte ptr [rax - 0x75], cl ; push rbp ; call 0x1d030f28
0x0000000000408dcf : sbb byte ptr [rax - 0x75], cl ; push rbp ; call 0x1d030f29
0x00000000004070ed : sbb byte ptr [rcx], ah ; ret 0x941
0x0000000000401805 : scasb al, byte ptr [rdi] ; cli ; and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000402b67 : shl edi, cl ; add byte ptr [rax - 0x77], cl ; ret 0x8de8
0x000000000040d8f8 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401b7c : sub al, 0x4e ; ret
0x0000000000403d79 : sub byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040549b : sub byte ptr [rcx - 0xa], al ; jmp qword ptr [rcx]
0x0000000000402bbb : sub ch, al ; add byte ptr [rax - 0x77], cl ; ret 0x39e8
0x000000000040c16f : sub dword ptr [rdx], 0x5b ; ret
0x0000000000402c0f : sub eax, 0x40 ; add byte ptr [rax - 0x77], cl ; ret 0xe5e8
0x000000000040deed : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000401b7b : sub r8b, 0x4e ; ret
0x000000000040deec : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040717c : test al, -0x77 ; ret 0xf229
0x0000000000405633 : test al, -0x77 ; ret 0xfa29
0x000000000040deba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040f79c : test byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; and bh, bh ; jmp rdx
0x000000000040028a : test dword ptr [rbx], esi ; out -0x7a, eax ; sahf ; xchg eax, esp ; in eax, -0x45 ; ret 0xeffd
0x0000000000401d7d : wait ; add byte ptr [rax], al ; add dh, al ; add al, 0x25 ; ret
0x00000000004064d4 : xchg byte ptr [rcx], ah ; ret 0x941
0x00000000004070eb : xchg dword ptr [rax], eax ; sbb byte ptr [rcx], ah ; ret 0x941
0x0000000000406342 : xchg eax, ebp ; push -0x7e000001 ; ret 0x51e
0x0000000000402a1e : xchg eax, ebp ; ret 0x8840
0x00000000004022c0 : xchg eax, ebp ; ret 0xd284
0x0000000000403e5d : xchg eax, edx ; ret 0x8041
0x000000000040028f : xchg eax, esp ; in eax, -0x45 ; ret 0xeffd
0x000000000040b9f2 : xchg eax, esp ; ret 0xd284
0x0000000000402477 : xchg eax, esp ; ret 0xe280
0x0000000000406609 : xlatb ; lodsb al, byte ptr [rsi] ; xor al, 0x21 ; ret 0x941
0x000000000040660b : xor al, 0x21 ; ret 0x941
0x0000000000402b65 : xor al, 0x25 ; shl edi, cl ; add byte ptr [rax - 0x77], cl ; ret 0x8de8
0x0000000000402bb9 : xor al, 0x25 ; sub ch, al ; add byte ptr [rax - 0x77], cl ; ret 0x39e8
0x0000000000402c0d : xor al, 0x25 ; sub eax, 0x40 ; add byte ptr [rax - 0x77], cl ; ret 0xe5e8
0x000000000040f920 : xor byte ptr [rax - 1], al ; call qword ptr [rsi]
0x0000000000408a8a : xor byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040d8be : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000404d93 : xor byte ptr [rdx + 0x21444278], ch ; ret 0x8941
0x000000000040f4f8 : xor byte ptr [rdx], cl ; add byte ptr [rax], al ; ret 0xffff
0x00000000004064d1 : xor eax, 0x218684ed ; ret 0x941
0x000000000040b4b7 : xor eax, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x0000000000409805 : xor eax, edx ; mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
