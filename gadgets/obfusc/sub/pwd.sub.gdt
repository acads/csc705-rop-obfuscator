0x00000000004047f9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040893b : add ah, ch ; add al, 0 ; add byte ptr [rax], dh ; ret
0x000000000040891b : add ah, cl ; add al, 0 ; add al, dl ; ret 0xffff
0x000000000040891d : add al, 0 ; add al, dl ; ret 0xffff
0x000000000040893d : add al, 0 ; add byte ptr [rax], dh ; ret
0x0000000000402932 : add al, 0x25 ; enter 0x60a2, 0 ; pop rbp ; ret
0x00000000004089df : add al, ah ; ret
0x000000000040534b : add al, ch ; ret 0xffff
0x00000000004051ef : add al, ch ; stosd dword ptr [rdi], eax ; ret
0x00000000004087d7 : add al, ch ; test al, -1 ; call rdi
0x0000000000408a1f : add al, dh ; ret
0x00000000004081c3 : add al, dl ; ret
0x000000000040891f : add al, dl ; ret 0xffff
0x000000000040724f : add bl, dh ; ret
0x00000000004058ad : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000408939 : add byte ptr [rax], al ; add ah, ch ; add al, 0 ; add byte ptr [rax], dh ; ret
0x0000000000408919 : add byte ptr [rax], al ; add ah, cl ; add al, 0 ; add al, dl ; ret 0xffff
0x000000000040724d : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040724b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000400618 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000040061a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000040724c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040061c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000004089b9 : add byte ptr [rax], al ; add byte ptr [rbp + rax], ch ; add al, dl ; ret
0x0000000000403e9e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x000000000040510e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004066ac : add byte ptr [rax], al ; add cl, ch ; ret 2
0x00000000004088be : add byte ptr [rax], al ; add dl, -1 ; jmp qword ptr [rdx]
0x00000000004047c1 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004044d0 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401333 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004087d6 : add byte ptr [rax], al ; call 0xffffffffd840878a
0x000000000040893a : add byte ptr [rax], al ; in al, dx ; add al, 0 ; add byte ptr [rax], dh ; ret
0x0000000000401549 : add byte ptr [rax], al ; jmp 0x401349
0x0000000000402d92 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004088de : add byte ptr [rax], al ; nop ; ret 0xffff
0x000000000040895a : add byte ptr [rax], al ; or al, 5 ; add byte ptr [rax], al ; push rax ; ret
0x0000000000409146 : add byte ptr [rax], al ; pop rax ; loope 0x40914f ; call qword ptr [rax]
0x0000000000401e8b : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040574b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000404490 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040895e : add byte ptr [rax], al ; push rax ; ret
0x000000000040724e : add byte ptr [rax], al ; ret
0x000000000040061e : add byte ptr [rax], al ; ret 0
0x00000000004087d2 : add byte ptr [rax], al ; test byte ptr [rbx], al ; add byte ptr [rax], al ; call 0xffffffffd840878e
0x00000000004083f2 : add byte ptr [rax], al ; xor cl, 0xff ; call qword ptr [rax]
0x000000000040893f : add byte ptr [rax], dh ; ret
0x00000000004089bb : add byte ptr [rbp + rax], ch ; add al, dl ; ret
0x000000000040574c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000404491 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000405256 : add byte ptr [rcx - 0x5bba7631], cl ; call 0x401498
0x0000000000405255 : add byte ptr [rcx - 0x5bba7631], cl ; call 0x401499
0x00000000004070ec : add byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x00000000004017e8 : add byte ptr [rcx], al ; ret
0x00000000004066a8 : add byte ptr [rdi], cl ; lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000403ea0 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000405110 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004066ae : add cl, ch ; ret 2
0x00000000004088c0 : add dl, -1 ; jmp qword ptr [rdx]
0x0000000000405d89 : add dword ptr [rax - 0x77], ecx ; ret 0x8148
0x00000000004047bf : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040574a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040448f : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000406fad : add dword ptr [rax], ecx ; ret 0x840
0x00000000004028ef : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004022c4 : add dword ptr [rdi], ecx ; xchg eax, ebp ; ret 0xe280
0x00000000004017e4 : add eax, 0x208ace ; add ebx, esi ; ret
0x00000000004066ab : add eax, 0xe9000000 ; ret 2
0x00000000004087d5 : add eax, dword ptr [rax] ; add al, ch ; test al, -1 ; call rdi
0x00000000004017ab : add eax, edx ; sar rax, 1 ; jne 0x4017bc ; pop rbp ; ret
0x00000000004017e9 : add ebx, esi ; ret
0x000000000040197b : add esp, 0x10 ; pop rbp ; ret
0x00000000004069dc : add esp, 0x130 ; pop rbp ; ret
0x0000000000401e87 : add esp, 0x140 ; pop rbp ; ret
0x0000000000405a7c : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000402530 : add esp, 0x1c0 ; pop rbp ; ret
0x0000000000402805 : add esp, 0x20 ; pop rbp ; ret
0x0000000000401a5d : add esp, 0x30 ; pop rbp ; ret
0x0000000000402757 : add esp, 0x40 ; pop rbp ; ret
0x0000000000404bdc : add esp, 0x50 ; pop rbp ; ret
0x00000000004030b3 : add esp, 0x70 ; pop rbp ; ret
0x0000000000404aea : add esp, 0x90 ; pop rbp ; ret
0x0000000000405198 : add esp, 0xa0 ; pop rbp ; ret
0x00000000004020b2 : add esp, 0xe0 ; pop rbp ; ret
0x0000000000401336 : add esp, 8 ; ret
0x00000000004017aa : add rax, rdx ; sar rax, 1 ; jne 0x4017bd ; pop rbp ; ret
0x000000000040197a : add rsp, 0x10 ; pop rbp ; ret
0x00000000004069db : add rsp, 0x130 ; pop rbp ; ret
0x0000000000401e86 : add rsp, 0x140 ; pop rbp ; ret
0x0000000000405a7b : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000040252f : add rsp, 0x1c0 ; pop rbp ; ret
0x0000000000402804 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000401a5c : add rsp, 0x30 ; pop rbp ; ret
0x0000000000402756 : add rsp, 0x40 ; pop rbp ; ret
0x0000000000404bdb : add rsp, 0x50 ; pop rbp ; ret
0x00000000004030b2 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000404ae9 : add rsp, 0x90 ; pop rbp ; ret
0x0000000000405197 : add rsp, 0xa0 ; pop rbp ; ret
0x00000000004020b1 : add rsp, 0xe0 ; pop rbp ; ret
0x0000000000401335 : add rsp, 8 ; ret
0x00000000004028ee : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004017e7 : and byte ptr [rax], al ; add ebx, esi ; ret
0x000000000040290f : and eax, 0x60a2c0 ; pop rbp ; ret
0x0000000000402933 : and eax, 0x60a2c8 ; pop rbp ; ret
0x000000000040522d : call 0x401492
0x0000000000405268 : call 0x401552
0x00000000004052c1 : call 0x4015a2
0x0000000000406678 : call 0x401639
0x0000000000402491 : call 0x48c5ade7
0x00000000004087d8 : call 0xffffffffd8408788
0x00000000004044c9 : call 0xffffffffe902ce19
0x00000000004044c8 : call 0xffffffffe902ce1a
0x0000000000407229 : call qword ptr [r12 + rbx*8]
0x00000000004083f7 : call qword ptr [rax]
0x000000000040849b : call qword ptr [rbx]
0x000000000040863b : call qword ptr [rsi]
0x000000000040722a : call qword ptr [rsp + rbx*8]
0x000000000040180d : call rax
0x000000000040421c : call rbx
0x00000000004087db : call rdi
0x0000000000401f14 : clc ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004069da : clc ; add rsp, 0x130 ; pop rbp ; ret
0x0000000000401e85 : clc ; add rsp, 0x140 ; pop rbp ; ret
0x0000000000405c7f : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405121 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000405196 : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x00000000004017af : clc ; jne 0x4017b8 ; pop rbp ; ret
0x0000000000402f65 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040716f : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000407172 : clc ; pop rbp ; ret
0x0000000000406b26 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004061bb : cld ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004060fa : cld ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040716c : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000406b23 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406ac6 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004060f7 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040176d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401780 ; pop rbp ; ret
0x000000000040528c : cwde ; mov rcx, qword ptr [rax*8 + 0x407d18] ; jmp rcx
0x000000000040667c : dec dword ptr [rax - 0x73] ; xor al, 0x25 ; ret
0x0000000000406714 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000402438 : dec dword ptr [rax - 0x77] ; ret 0xffe8
0x0000000000403c22 : dec dword ptr [rcx - 0x77] ; ret 0x294d
0x00000000004083ef : dec eax ; sldt word ptr [rax] ; xor cl, 0xff ; call qword ptr [rax]
0x0000000000403fb0 : enter 0x4b05, 0x34 ; fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x0000000000402934 : enter 0x60a2, 0 ; pop rbp ; ret
0x00000000004051ed : enter 0xb0, -0x18 ; stosd dword ptr [rdi], eax ; ret
0x00000000004083f0 : enter 0xf, 0 ; xor cl, 0xff ; call qword ptr [rax]
0x0000000000403fb4 : fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x000000000040722c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000401979 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401780 : hlt ; pop rbp ; mov edi, 0x60a280 ; jmp rax
0x000000000040893c : in al, dx ; add al, 0 ; add byte ptr [rax], dh ; ret
0x000000000040423b : inc dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x00000000004058b5 : int 0x80
0x000000000040522c : iretd ; call 0x401493
0x0000000000405258 : iretd ; mov dword ptr [rbp - 0x5c], eax ; call 0x401496
0x0000000000401773 : ja 0x40177a ; pop rbp ; ret
0x000000000040177f : je 0x40177d ; pop rbp ; mov edi, 0x60a280 ; jmp rax
0x0000000000405228 : jge 0x4051d9 ; mov rdi, rcx ; call 0x401497
0x00000000004052ba : jge 0x40524d ; mov rsi, rax ; mov al, 0 ; call 0x4015a9
0x000000000040154b : jmp 0x401347
0x0000000000402a28 : jmp 0xffffffff83892a34
0x0000000000405d88 : jmp 0xffffffffc2c9a592
0x0000000000408107 : jmp qword ptr [rax]
0x00000000004036b6 : jmp qword ptr [rcx]
0x000000000040857b : jmp qword ptr [rdi]
0x00000000004088c3 : jmp qword ptr [rdx]
0x0000000000401787 : jmp rax
0x0000000000403179 : jmp rcx
0x00000000004017c7 : jmp rdx
0x00000000004017b0 : jne 0x4017b7 ; pop rbp ; ret
0x0000000000405263 : jne 0x40524c ; mov rdi, rax ; call 0x401557
0x0000000000401331 : jnp 0x40133d ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004030b5 : jo 0x403116 ; ret
0x00000000004046df : jo 0x404745 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000404d84 : jo 0x404de5 ; ret
0x0000000000404ebe : jo 0x404f1f ; ret
0x00000000004066aa : lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000409119 : loope 0x40911c ; call qword ptr [rax]
0x0000000000409149 : loope 0x40914c ; call qword ptr [rax]
0x00000000004020b4 : loopne 0x4020bb ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000405264 : loopne 0x4052b4 ; mov edi, eax ; call 0x401556
0x00000000004017e6 : mov ah, byte ptr [rax] ; add byte ptr [rcx], al ; ret
0x00000000004052bf : mov al, 0 ; call 0x4015a4
0x0000000000404c5b : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000404ae8 : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x00000000004028eb : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000406c86 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000402931 : mov byte ptr [0x60a2c8], al ; pop rbp ; ret
0x00000000004017e3 : mov byte ptr [rip + 0x208ace], 1 ; ret
0x00000000004028f1 : mov dh, -0x40 ; pop rbp ; ret
0x000000000040290d : mov dword ptr [0x60a2c0], edi ; pop rbp ; ret
0x0000000000402f66 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000402f28 : mov dword ptr [rax], eax ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000402de4 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000402f27 : mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000401a59 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000405227 : mov dword ptr [rbp - 0x58], edi ; mov rdi, rcx ; call 0x401498
0x0000000000405259 : mov dword ptr [rbp - 0x5c], eax ; call 0x401495
0x0000000000401977 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040716d : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402fde : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402d98 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000402852 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402801 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402d95 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000402adf : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405e93 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402d4d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402dde : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000402f2a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004030af : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000404c59 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000406b24 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004061b9 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004060f8 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401f12 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405c7d : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040511f : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000407170 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040180b : mov ebp, esp ; call rax
0x0000000000401771 : mov ebp, esp ; ja 0x40177c ; pop rbp ; ret
0x00000000004058cd : mov ecx, 0x5b2a830a ; ret
0x0000000000403172 : mov ecx, dword ptr [rax*8 + 0x407810] ; jmp rcx
0x0000000000403496 : mov ecx, dword ptr [rax*8 + 0x407858] ; jmp rcx
0x000000000040528e : mov ecx, dword ptr [rax*8 + 0x407d18] ; jmp rcx
0x0000000000402de1 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401805 : mov edi, 0x609e20 ; mov rbp, rsp ; call rax
0x0000000000401782 : mov edi, 0x60a280 ; jmp rax
0x00000000004017c2 : mov edi, 0x60a280 ; jmp rdx
0x0000000000405266 : mov edi, eax ; call 0x401554
0x000000000040522b : mov edi, ecx ; call 0x401494
0x0000000000405257 : mov edi, ecx ; mov dword ptr [rbp - 0x5c], eax ; call 0x401497
0x0000000000407227 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000407226 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000405262 : mov esi, dword ptr [rbp - 0x20] ; mov rdi, rax ; call 0x401558
0x00000000004052bd : mov esi, eax ; mov al, 0 ; call 0x4015a6
0x00000000004017c0 : mov esi, eax ; mov edi, 0x60a280 ; jmp rdx
0x000000000040290c : mov qword ptr [0x60a2c0], rdi ; pop rbp ; ret
0x0000000000405226 : mov qword ptr [rbp - 0x58], rdi ; mov rdi, rcx ; call 0x401499
0x0000000000402fdd : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404c5a : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000402851 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402800 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402d94 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000402ade : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405e92 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402d4c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004030ae : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000404c58 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401f11 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405c7c : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040511e : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040180a : mov rbp, rsp ; call rax
0x0000000000401770 : mov rbp, rsp ; ja 0x40177d ; pop rbp ; ret
0x0000000000403171 : mov rcx, qword ptr [rax*8 + 0x407810] ; jmp rcx
0x0000000000403495 : mov rcx, qword ptr [rax*8 + 0x407858] ; jmp rcx
0x000000000040528d : mov rcx, qword ptr [rax*8 + 0x407d18] ; jmp rcx
0x0000000000405265 : mov rdi, rax ; call 0x401555
0x000000000040522a : mov rdi, rcx ; call 0x401495
0x0000000000405261 : mov rsi, qword ptr [rbp - 0x20] ; mov rdi, rax ; call 0x401559
0x00000000004052bc : mov rsi, rax ; mov al, 0 ; call 0x4015a7
0x00000000004017bf : mov rsi, rax ; mov edi, 0x60a280 ; jmp rdx
0x000000000040525b : movsb byte ptr [rdi], byte ptr [rsi] ; call 0x401493
0x000000000040525a : movsb byte ptr [rdi], byte ptr [rsi] ; call 0x401494
0x00000000004028f0 : movzx eax, al ; pop rbp ; ret
0x00000000004088e0 : nop ; ret 0xffff
0x0000000000407248 : nop dword ptr [rax + rax] ; ret
0x00000000004037fd : or al, 0x18 ; ret 0x6451
0x000000000040895c : or al, 5 ; add byte ptr [rax], al ; push rax ; ret
0x0000000000404e41 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040723c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004046e1 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040723e : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004046e3 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000407240 : pop r14 ; pop r15 ; ret
0x0000000000404493 : pop r14 ; pop rbp ; ret
0x00000000004046e5 : pop r15 ; pop rbp ; ret
0x0000000000407242 : pop r15 ; ret
0x0000000000409148 : pop rax ; loope 0x40914d ; call qword ptr [rax]
0x00000000004017e2 : pop rbp ; mov byte ptr [rip + 0x208ace], 1 ; ret
0x0000000000401781 : pop rbp ; mov edi, 0x60a280 ; jmp rax
0x00000000004017be : pop rbp ; mov rsi, rax ; mov edi, 0x60a280 ; jmp rdx
0x000000000040723b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040723f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401775 : pop rbp ; ret
0x00000000004046e0 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040574d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000404492 : pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004058d1 : pop rbx ; ret
0x00000000004046e6 : pop rdi ; pop rbp ; ret
0x0000000000407243 : pop rdi ; ret
0x00000000004046e4 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000407241 : pop rsi ; pop r15 ; ret
0x0000000000404494 : pop rsi ; pop rbp ; ret
0x000000000040522e : pop rsi ; ret 0xffff
0x000000000040723d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004046e2 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000404bde : push rax ; pop rbp ; ret
0x0000000000408960 : push rax ; ret
0x0000000000401804 : push rbp ; mov edi, 0x609e20 ; mov rbp, rsp ; call rax
0x0000000000401339 : ret
0x0000000000400620 : ret 0
0x000000000040256f : ret 0x1242
0x00000000004068f6 : ret 0x148
0x000000000040487e : ret 0x1b2
0x0000000000401552 : ret 0x208b
0x0000000000401342 : ret 0x208c
0x0000000000402056 : ret 0x2948
0x0000000000403c09 : ret 0x294c
0x0000000000403c25 : ret 0x294d
0x0000000000402e64 : ret 0x5589
0x00000000004037ff : ret 0x6451
0x0000000000402074 : ret 0x76e8
0x0000000000403c3d : ret 0x7de8
0x0000000000405d8c : ret 0x8148
0x00000000004025b5 : ret 0x830f
0x0000000000406faf : ret 0x840
0x0000000000403ea3 : ret 0x8840
0x0000000000405249 : ret 0x8844
0x0000000000405da0 : ret 0x8948
0x0000000000403c28 : ret 0x8949
0x0000000000403dbc : ret 0x89a5
0x0000000000403c0c : ret 0x8b48
0x0000000000401c42 : ret 0xb0
0x00000000004068e9 : ret 0xb849
0x00000000004017a5 : ret 0xc148
0x0000000000406650 : ret 0xc2f6
0x0000000000403624 : ret 0xca21
0x0000000000405113 : ret 0xd284
0x00000000004022c7 : ret 0xe280
0x00000000004044cc : ret 0xee8
0x0000000000403eb8 : ret 0xf180
0x0000000000406643 : ret 0xf280
0x000000000040369e : ret 0xf281
0x000000000040243b : ret 0xffe8
0x000000000040522f : ret 0xffff
0x000000000040205c : ret 1
0x000000000040249a : ret 2
0x0000000000402f26 : rol byte ptr [rcx + rcx*4], 1 ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000408170 : rol byte ptr [rip - 0x55e00000], -1 ; jmp rax
0x00000000004058b0 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x00000000004030b0 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x40311b ; ret
0x00000000004017ac : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4017bb ; pop rbp ; ret
0x00000000004058b1 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000403bfd : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000403c06 : ror byte ptr [rax - 0x77], 1 ; ret 0x294c
0x00000000004030b1 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x40311a ; ret
0x00000000004051e9 : ror byte ptr [rbx + rcx*4 + 0x45], 1 ; enter 0xb0, -0x18 ; stosd dword ptr [rdi], eax ; ret
0x00000000004017ae : sar eax, 1 ; jne 0x4017b9 ; pop rbp ; ret
0x00000000004017ad : sar rax, 1 ; jne 0x4017ba ; pop rbp ; ret
0x0000000000408938 : sbb al, 0 ; add byte ptr [rax], al ; in al, dx ; add al, 0 ; add byte ptr [rax], dh ; ret
0x0000000000408958 : sbb al, 0 ; add byte ptr [rax], al ; or al, 5 ; add byte ptr [rax], al ; push rax ; ret
0x000000000040524c : shr al, 0x4e ; ret
0x00000000004083f1 : sldt word ptr [rax] ; xor cl, 0xff ; call qword ptr [rax]
0x0000000000406c88 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004051f1 : stosd dword ptr [rdi], eax ; ret
0x00000000004058cf : sub dword ptr [rdx], 0x5b ; ret
0x00000000004072b1 : sub esp, 8 ; add rsp, 8 ; ret
0x00000000004072b0 : sub rsp, 8 ; add rsp, 8 ; ret
0x00000000004087d9 : test al, -1 ; call rdi
0x0000000000405229 : test al, 0x48 ; mov edi, ecx ; call 0x401496
0x000000000040724a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004087d4 : test byte ptr [rbx], al ; add byte ptr [rax], al ; call 0xffffffffd840878c
0x0000000000403ea2 : xchg eax, ebp ; ret 0x8840
0x00000000004022c6 : xchg eax, ebp ; ret 0xe280
0x0000000000405112 : xchg eax, esp ; ret 0xd284
0x000000000040667f : xor al, 0x25 ; ret
0x00000000004069de : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004083f4 : xor cl, 0xff ; call qword ptr [rax]
0x0000000000404bd7 : xor eax, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x0000000000402f25 : xor eax, edx ; mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
