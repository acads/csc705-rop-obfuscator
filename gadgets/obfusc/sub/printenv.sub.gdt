0x0000000000403aa9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407793 : add ah, ch ; add al, byte ptr [rax] ; add byte ptr [rax], cl ; ret 0xffff
0x0000000000401ba8 : add al, 0x25 ; enter 0x6091, 0 ; pop rbp ; ret
0x0000000000407ef7 : add al, bl ; loope 0x407efe ; jmp rdx
0x0000000000407795 : add al, byte ptr [rax] ; add byte ptr [rax], cl ; ret 0xffff
0x00000000004015a7 : add al, ch ; ret
0x00000000004077d7 : add al, ch ; ret 0xffff
0x00000000004077b7 : add al, cl ; ret 0xffff
0x000000000040643f : add bl, dh ; ret
0x0000000000404333 : add byte ptr [rax - 0x73], cl ; or al, 0x25 ; ret 0x406d
0x0000000000404aed : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000040739b : add byte ptr [rax], ah ; loopne 0x4073a2 ; jmp qword ptr [rax]
0x0000000000407791 : add byte ptr [rax], al ; add ah, ch ; add al, byte ptr [rax] ; add byte ptr [rax], cl ; ret 0xffff
0x00000000004015a5 : add byte ptr [rax], al ; add al, ch ; ret
0x000000000040643d : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040643b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040643c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040314e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x00000000004043be : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040589c : add byte ptr [rax], al ; add cl, ch ; ret 2
0x00000000004019b0 : add byte ptr [rax], al ; add dh, al ; ret
0x0000000000403a71 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403780 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040114b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004077d6 : add byte ptr [rax], al ; call 0xffffffffe34077a4
0x0000000000407792 : add byte ptr [rax], al ; in al, dx ; add al, byte ptr [rax] ; add byte ptr [rax], cl ; ret 0xffff
0x0000000000401329 : add byte ptr [rax], al ; jmp 0x401169
0x0000000000402042 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000407ef2 : add byte ptr [rax], al ; or r8b, byte ptr [rax] ; add al, bl ; loope 0x407f03 ; jmp rdx
0x0000000000403d9e : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040498b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403740 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040643e : add byte ptr [rax], al ; ret
0x000000000040730a : add byte ptr [rax], al ; sar edi, 1 ; jmp rax
0x00000000004077d2 : add byte ptr [rax], al ; sub al, 3 ; add byte ptr [rax], al ; call 0xffffffffe34077a8
0x000000000040740a : add byte ptr [rax], al ; sub dh, -1 ; jmp rax
0x000000000040744a : add byte ptr [rax], al ; xor cl, 0xff ; jmp rax
0x0000000000407797 : add byte ptr [rax], cl ; ret 0xffff
0x000000000040731b : add byte ptr [rax], dl ; fdivr st(7) ; jmp qword ptr [rax]
0x000000000040498c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000403741 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x00000000004077d3 : add byte ptr [rbx + rax], ch ; add byte ptr [rax], al ; call 0xffffffffe34077a7
0x00000000004062dc : add byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x0000000000401558 : add byte ptr [rcx], al ; ret
0x0000000000405898 : add byte ptr [rdi], cl ; lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x00000000004015a1 : add byte ptr [rdi], cl ; test byte ptr [rdx], cl ; add byte ptr [rax], al ; add al, ch ; ret
0x0000000000403150 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x00000000004043c0 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000407ef3 : add byte ptr [rdx + rcx], cl ; add al, bl ; loope 0x407f02 ; jmp rdx
0x000000000040589e : add cl, ch ; ret 2
0x00000000004019b2 : add dh, al ; ret
0x0000000000404fc9 : add dword ptr [rax - 0x77], ecx ; ret 0x8148
0x0000000000403a6f : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040498a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040373f : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040619d : add dword ptr [rax], ecx ; ret 0x840
0x0000000000405e7a : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401554 : add eax, 0x207d3e ; add ebx, esi ; ret
0x000000000040589b : add eax, 0xe9000000 ; ret 2
0x00000000004077d5 : add eax, dword ptr [rax] ; add al, ch ; ret 0xffff
0x00000000004077b5 : add eax, dword ptr [rax] ; add al, cl ; ret 0xffff
0x000000000040151b : add eax, edx ; sar rax, 1 ; jne 0x40152c ; pop rbp ; ret
0x0000000000401559 : add ebx, esi ; ret
0x00000000004016ab : add esp, 0x10 ; pop rbp ; ret
0x0000000000405bcc : add esp, 0x130 ; pop rbp ; ret
0x0000000000404cbc : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000401e37 : add esp, 0x20 ; pop rbp ; ret
0x000000000040178d : add esp, 0x30 ; pop rbp ; ret
0x0000000000403e8c : add esp, 0x50 ; pop rbp ; ret
0x0000000000402363 : add esp, 0x70 ; pop rbp ; ret
0x0000000000403d9a : add esp, 0x90 ; pop rbp ; ret
0x0000000000404b53 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040114e : add esp, 8 ; ret
0x000000000040151a : add rax, rdx ; sar rax, 1 ; jne 0x40152d ; pop rbp ; ret
0x00000000004016aa : add rsp, 0x10 ; pop rbp ; ret
0x0000000000405bcb : add rsp, 0x130 ; pop rbp ; ret
0x0000000000404cbb : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000401e36 : add rsp, 0x20 ; pop rbp ; ret
0x000000000040178c : add rsp, 0x30 ; pop rbp ; ret
0x0000000000403e8b : add rsp, 0x50 ; pop rbp ; ret
0x0000000000402362 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000403d99 : add rsp, 0x90 ; pop rbp ; ret
0x0000000000404b52 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040114d : add rsp, 8 ; ret
0x0000000000405e79 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401557 : and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000401ba9 : and eax, 0x6091c8 ; pop rbp ; ret
0x0000000000401bbf : and eax, 0x6092a0 ; pop rbp ; ret
0x0000000000401be3 : and eax, 0x6092a8 ; pop rbp ; ret
0x0000000000401149 : and eax, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000405107 : call 0x2c4f7
0x0000000000405106 : call 0x2c4f8
0x0000000000401ad9 : call 0x401297
0x0000000000405085 : call 0x4012d2
0x00000000004050b8 : call 0x401342
0x0000000000405108 : call 0x401382
0x00000000004051a4 : call 0x401422
0x00000000004077d8 : call 0xffffffffe34077a2
0x0000000000403779 : call 0xffffffffe902c0c9
0x0000000000403778 : call 0xffffffffe902c0ca
0x0000000000406419 : call qword ptr [r12 + rbx*8]
0x0000000000407593 : call qword ptr [rsi]
0x000000000040641a : call qword ptr [rsp + rbx*8]
0x000000000040157d : call rax
0x00000000004034cc : call rbx
0x0000000000407733 : call rdi
0x0000000000405bca : clc ; add rsp, 0x130 ; pop rbp ; ret
0x0000000000404ebf : clc ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004043d1 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040151f : clc ; jne 0x401528 ; pop rbp ; ret
0x0000000000402215 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040635f : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004050b3 : clc ; mov rsi, qword ptr [rbp - 0x10] ; call 0x401347
0x0000000000406362 : clc ; pop rbp ; ret
0x0000000000405d16 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004053ab : cld ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004052ea : cld ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401ba6 : cld ; mov dword ptr [0x6091c8], eax ; pop rbp ; ret
0x000000000040635c : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000405d13 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405cb6 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004052e7 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040519e : cld ; mov rcx, rax ; mov al, 0 ; call 0x401428
0x00000000004019af : cmp eax, 0xc6000000 ; ret
0x00000000004014dd : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4014f0 ; pop rbp ; ret
0x00000000004044cc : cwde ; mov rcx, qword ptr [rax*8 + 0x406dd8] ; jmp rcx
0x0000000000405904 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000402ed2 : dec dword ptr [rcx - 0x77] ; ret 0x294d
0x0000000000403260 : enter 0x4b05, 0x34 ; fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x0000000000401baa : enter 0x6091, 0 ; pop rbp ; ret
0x000000000040734d : fdiv st(7), st(0) ; jmp rax
0x0000000000407d59 : fdivp st(7) ; jmp rax
0x000000000040731d : fdivr st(7) ; jmp qword ptr [rax]
0x0000000000403264 : fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x000000000040641c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000404368 : fsubr st(0) ; ret 0xe
0x00000000004016a9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004014f0 : hlt ; pop rbp ; mov edi, 0x609228 ; jmp rax
0x0000000000401adb : idiv edi ; inc esi ; ret
0x0000000000407794 : in al, dx ; add al, byte ptr [rax] ; add byte ptr [rax], cl ; ret 0xffff
0x0000000000407317 : inc dword ptr [rax] ; or dword ptr [rax], eax ; add byte ptr [rax], dl ; fdivr st(7) ; jmp qword ptr [rax]
0x0000000000407397 : inc dword ptr [rax] ; or eax, dword ptr [rax] ; add byte ptr [rax], ah ; loopne 0x4073a6 ; jmp qword ptr [rax]
0x00000000004034eb : inc dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000401add : inc esi ; ret
0x0000000000404331 : insd dword ptr [rdi], dx ; add byte ptr [rax - 0x73], cl ; or al, 0x25 ; ret 0x406d
0x0000000000404af5 : int 0x80
0x00000000004014e3 : ja 0x4014ea ; pop rbp ; ret
0x00000000004014ef : je 0x4014ed ; pop rbp ; mov edi, 0x609228 ; jmp rax
0x0000000000401556 : jge 0x40157d ; add byte ptr [rcx], al ; ret
0x0000000000401555 : jge 0x40157e ; add byte ptr [rcx], al ; ret
0x00000000004050b2 : jge 0x4050b4 ; mov rsi, qword ptr [rbp - 0x10] ; call 0x401348
0x000000000040519d : jge 0x4051a4 ; mov rcx, rax ; mov al, 0 ; call 0x401429
0x000000000040132b : jmp 0x401167
0x0000000000404fc8 : jmp 0xffffffffc2c997d2
0x000000000040725f : jmp qword ptr [rax]
0x0000000000402966 : jmp qword ptr [rcx]
0x000000000040781b : jmp qword ptr [rdx]
0x00000000004014f7 : jmp rax
0x0000000000402429 : jmp rcx
0x0000000000401537 : jmp rdx
0x0000000000407553 : jmp rsi
0x0000000000401520 : jne 0x401527 ; pop rbp ; ret
0x00000000004050b6 : jne 0x4050ac ; call 0x401344
0x0000000000402365 : jo 0x4023c6 ; ret
0x000000000040398f : jo 0x4039f5 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000404034 : jo 0x404095 ; ret
0x000000000040416e : jo 0x4041cf ; ret
0x000000000040589a : lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000407ef9 : loope 0x407efc ; jmp rdx
0x000000000040739d : loopne 0x4073a0 ; jmp qword ptr [rax]
0x0000000000401ad7 : mov al, 0 ; call 0x401299
0x00000000004051a2 : mov al, 0 ; call 0x401424
0x0000000000403f0b : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000403d98 : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000405e76 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401be1 : mov byte ptr [0x6092a8], al ; pop rbp ; ret
0x0000000000401553 : mov byte ptr [rip + 0x207d3e], 1 ; ret
0x0000000000405e7c : mov dh, -0x40 ; pop rbp ; ret
0x0000000000401ba7 : mov dword ptr [0x6091c8], eax ; pop rbp ; ret
0x0000000000401bbd : mov dword ptr [0x6092a0], edi ; pop rbp ; ret
0x0000000000402216 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004021d8 : mov dword ptr [rax], eax ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000402094 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004021d7 : mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000405082 : mov dword ptr [rbp - 0x10], eax ; call 0x4012d5
0x0000000000405105 : mov dword ptr [rbp - 0x18], eax ; call 0x401385
0x0000000000401789 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004016a7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040635d : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040228e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402048 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000404ddb : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401e33 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402045 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000401d8f : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004050d3 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401ffd : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040208e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004021da : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040235f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000403f09 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000405d14 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004053a9 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004052e8 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404ebd : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004043cf : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406360 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040157b : mov ebp, esp ; call rax
0x00000000004014e1 : mov ebp, esp ; ja 0x4014ec ; pop rbp ; ret
0x0000000000404b0d : mov ecx, 0x5b2a830a ; ret
0x0000000000402422 : mov ecx, dword ptr [rax*8 + 0x4068d0] ; jmp rcx
0x0000000000402746 : mov ecx, dword ptr [rax*8 + 0x406918] ; jmp rcx
0x00000000004044ce : mov ecx, dword ptr [rax*8 + 0x406dd8] ; jmp rcx
0x0000000000402091 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004051a0 : mov ecx, eax ; mov al, 0 ; call 0x401426
0x0000000000401575 : mov edi, 0x608e20 ; mov rbp, rsp ; call rax
0x00000000004014f2 : mov edi, 0x609228 ; jmp rax
0x0000000000401532 : mov edi, 0x609228 ; jmp rdx
0x00000000004050b1 : mov edi, dword ptr [rbp - 8] ; mov rsi, qword ptr [rbp - 0x10] ; call 0x401349
0x000000000040507f : mov edi, eax ; mov qword ptr [rbp - 0x10], rax ; call 0x4012d8
0x0000000000405102 : mov edi, eax ; mov qword ptr [rbp - 0x18], rax ; call 0x401388
0x0000000000406417 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000406416 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x00000000004050b5 : mov esi, dword ptr [rbp - 0x10] ; call 0x401345
0x0000000000401530 : mov esi, eax ; mov edi, 0x609228 ; jmp rdx
0x0000000000401577 : mov fs, word ptr [rax] ; mov rbp, rsp ; call rax
0x0000000000401bbc : mov qword ptr [0x6092a0], rdi ; pop rbp ; ret
0x0000000000405081 : mov qword ptr [rbp - 0x10], rax ; call 0x4012d6
0x0000000000405104 : mov qword ptr [rbp - 0x18], rax ; call 0x401386
0x000000000040228d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403f0a : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000404dda : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401e32 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402044 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000401d8e : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004050d2 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401ffc : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040235e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000403f08 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000404ebc : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004043ce : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040157a : mov rbp, rsp ; call rax
0x00000000004014e0 : mov rbp, rsp ; ja 0x4014ed ; pop rbp ; ret
0x0000000000402421 : mov rcx, qword ptr [rax*8 + 0x4068d0] ; jmp rcx
0x0000000000402745 : mov rcx, qword ptr [rax*8 + 0x406918] ; jmp rcx
0x00000000004044cd : mov rcx, qword ptr [rax*8 + 0x406dd8] ; jmp rcx
0x000000000040519f : mov rcx, rax ; mov al, 0 ; call 0x401427
0x000000000040507e : mov rdi, rax ; mov qword ptr [rbp - 0x10], rax ; call 0x4012d9
0x0000000000405101 : mov rdi, rax ; mov qword ptr [rbp - 0x18], rax ; call 0x401389
0x00000000004050b4 : mov rsi, qword ptr [rbp - 0x10] ; call 0x401346
0x000000000040152f : mov rsi, rax ; mov edi, 0x609228 ; jmp rdx
0x0000000000405e7b : movzx eax, al ; pop rbp ; ret
0x0000000000406438 : nop dword ptr [rax + rax] ; ret
0x0000000000402aad : or al, 0x18 ; ret 0x6451
0x0000000000404336 : or al, 0x25 ; ret 0x406d
0x0000000000407ef5 : or al, byte ptr [rax] ; add al, bl ; loope 0x407f00 ; jmp rdx
0x0000000000407319 : or dword ptr [rax], eax ; add byte ptr [rax], dl ; fdivr st(7) ; jmp qword ptr [rax]
0x0000000000407399 : or eax, dword ptr [rax] ; add byte ptr [rax], ah ; loopne 0x4073a4 ; jmp qword ptr [rax]
0x00000000004040f1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407ef4 : or r8b, byte ptr [rax] ; add al, bl ; loope 0x407f01 ; jmp rdx
0x000000000040642c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000403991 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040642e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000403993 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406430 : pop r14 ; pop r15 ; ret
0x0000000000403743 : pop r14 ; pop rbp ; ret
0x0000000000403995 : pop r15 ; pop rbp ; ret
0x0000000000406432 : pop r15 ; ret
0x0000000000401552 : pop rbp ; mov byte ptr [rip + 0x207d3e], 1 ; ret
0x00000000004014f1 : pop rbp ; mov edi, 0x609228 ; jmp rax
0x000000000040152e : pop rbp ; mov rsi, rax ; mov edi, 0x609228 ; jmp rdx
0x000000000040642b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040642f : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004014e5 : pop rbp ; ret
0x0000000000403990 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040498d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403742 : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000404b11 : pop rbx ; ret
0x0000000000403996 : pop rdi ; pop rbp ; ret
0x0000000000406433 : pop rdi ; ret
0x0000000000403994 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000406431 : pop rsi ; pop r15 ; ret
0x0000000000403744 : pop rsi ; pop rbp ; ret
0x000000000040642d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000403992 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403e8e : push rax ; pop rbp ; ret
0x0000000000401574 : push rbp ; mov edi, 0x608e20 ; mov rbp, rsp ; call rax
0x0000000000401151 : ret
0x0000000000405ad2 : ret 0
0x0000000000405ae6 : ret 0x148
0x0000000000403b2e : ret 0x1b2
0x0000000000401332 : ret 0x207d
0x0000000000401e15 : ret 0x2948
0x0000000000402eb9 : ret 0x294c
0x0000000000402ed5 : ret 0x294d
0x0000000000404338 : ret 0x406d
0x0000000000402114 : ret 0x5589
0x0000000000402aaf : ret 0x6451
0x0000000000404fcc : ret 0x8148
0x000000000040619f : ret 0x840
0x0000000000403153 : ret 0x8840
0x0000000000404489 : ret 0x8844
0x0000000000404fe0 : ret 0x8948
0x0000000000402ed8 : ret 0x8949
0x000000000040306c : ret 0x89a5
0x0000000000402ebc : ret 0x8b48
0x000000000040196a : ret 0xb0
0x0000000000405ad9 : ret 0xb849
0x0000000000402eed : ret 0xbde8
0x0000000000401515 : ret 0xc148
0x0000000000405840 : ret 0xc2f6
0x00000000004028d4 : ret 0xca21
0x00000000004043c3 : ret 0xd284
0x000000000040436a : ret 0xe
0x000000000040377c : ret 0xee8
0x0000000000403168 : ret 0xf180
0x0000000000405833 : ret 0xf280
0x000000000040294e : ret 0xf281
0x0000000000405087 : ret 0xffff
0x0000000000401ac3 : ret 1
0x00000000004058a0 : ret 2
0x00000000004021d6 : rol byte ptr [rcx + rcx*4], 1 ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000404af0 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000402360 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x4023cb ; ret
0x0000000000407408 : ror byte ptr [rax + rax], 0 ; sub dh, -1 ; jmp rax
0x000000000040151c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40152b ; pop rbp ; ret
0x0000000000404af1 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000402ead : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000402eb6 : ror byte ptr [rax - 0x77], 1 ; ret 0x294c
0x0000000000402361 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x4023ca ; ret
0x0000000000407448 : ror byte ptr [rip - 0xe800000], -1 ; jmp rax
0x000000000040151e : sar eax, 1 ; jne 0x401529 ; pop rbp ; ret
0x000000000040730d : sar edi, 1 ; jmp rax
0x000000000040151d : sar rax, 1 ; jne 0x40152a ; pop rbp ; ret
0x0000000000407790 : sbb al, 0 ; add byte ptr [rax], al ; in al, dx ; add al, byte ptr [rax] ; add byte ptr [rax], cl ; ret 0xffff
0x0000000000405e78 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004077d4 : sub al, 3 ; add byte ptr [rax], al ; call 0xffffffffe34077a6
0x000000000040740c : sub dh, -1 ; jmp rax
0x0000000000404b0f : sub dword ptr [rdx], 0x5b ; ret
0x000000000040646d : sub esp, 8 ; add rsp, 8 ; ret
0x000000000040646c : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040643a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004015a3 : test byte ptr [rdx], cl ; add byte ptr [rax], al ; add al, ch ; ret
0x0000000000403152 : xchg eax, ebp ; ret 0x8840
0x00000000004043c2 : xchg eax, esp ; ret 0xd284
0x0000000000405bce : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040744c : xor cl, 0xff ; jmp rax
0x0000000000403e87 : xor eax, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x00000000004021d5 : xor eax, edx ; mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
