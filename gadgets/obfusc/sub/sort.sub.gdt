0x0000000000411910 : adc al, -0x77 ; ret 0xca21
0x00000000004299f5 : adc byte ptr [rax], al ; add al, bl ; sar dh, 1 ; call qword ptr [rdx]
0x0000000000413522 : adc byte ptr [rax], ch ; ret
0x0000000000429a14 : adc byte ptr [rax], r8b ; add al, bl ; sar dh, 1 ; call qword ptr [rdx]
0x0000000000405301 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000413521 : adc byte ptr es:[rax], ch ; ret
0x0000000000423e55 : adc cl, byte ptr [rax + 1] ; ret 0x8948
0x00000000004121d9 : adc dh, bl ; sub byte ptr [rcx - 0xa], al ; jmp qword ptr [rcx]
0x0000000000415a9a : adc dword ptr [rax + 1], ecx ; ret 0x8941
0x000000000040d2d3 : adc eax, 0x148b420 ; ret 0x8948
0x000000000041bc99 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407ece : adc ecx, dword ptr [rax + 1] ; ret 0x3948
0x0000000000428aab : add ah, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x3d], dl ; std ; jmp qword ptr [rax]
0x00000000004286ef : add ah, cl ; jbe 0x4286f6 ; jmp rsp
0x000000000042886f : add ah, cl ; mov bl, -1 ; jmp rsp
0x0000000000418fd1 : add al, -0x36 ; add rsp, 0x30 ; pop rbp ; ret
0x000000000042a119 : add al, -1 ; call rdi
0x00000000004227dd : add al, 0x21 ; ret 0xd709
0x0000000000416f7a : add al, 0x48 ; add eax, ecx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000428acc : add al, 1 ; add byte ptr [rax], al ; push rax ; ret
0x000000000040230f : add al, ah ; ret
0x000000000040200f : add al, ah ; ret 0x62
0x00000000004022af : add al, al ; ret
0x0000000000401faf : add al, al ; ret 0x62
0x0000000000402057 : add al, bh ; ret 0x62
0x00000000004022f7 : add al, bl ; ret
0x0000000000401ff7 : add al, bl ; ret 0x62
0x00000000004299f7 : add al, bl ; sar dh, 1 ; call qword ptr [rdx]
0x0000000000404dd7 : add al, bpl ; ret 0xffd7
0x000000000040666e : add al, ch ; in al, dx ; ret 0xffff
0x0000000000402327 : add al, ch ; ret
0x0000000000402027 : add al, ch ; ret 0x62
0x0000000000404dd8 : add al, ch ; ret 0xffd7
0x00000000004022c7 : add al, cl ; ret
0x0000000000401fc7 : add al, cl ; ret 0x62
0x000000000040203f : add al, dh ; ret 0x62
0x000000000042a1bf : add al, dh ; sbb bh, bh ; jmp rdx
0x000000000042ab1f : add al, dl ; jge 0x42ab26 ; jmp rax
0x0000000000428a6f : add al, dl ; movsb byte ptr [rdi], byte ptr [rsi] ; std ; jmp rdx
0x00000000004022df : add al, dl ; ret
0x0000000000401fdf : add al, dl ; ret 0x62
0x0000000000424c1f : add bl, dh ; ret
0x0000000000408e67 : add byte ptr [r8], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408903 : add byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000040edef : add byte ptr [rax + 1], cl ; ret 0x8b48
0x0000000000428a6b : add byte ptr [rax + rax - 0x5b300000], ah ; std ; jmp rdx
0x0000000000429a33 : add byte ptr [rax + rdx], ch ; add al, bl ; sar dh, 1 ; call qword ptr [rdx]
0x0000000000429a13 : add byte ptr [rax + rdx], cl ; add al, bl ; sar dh, 1 ; call qword ptr [rdx]
0x0000000000427fef : add byte ptr [rax + rsi*4 - 3], bh ; call rsp
0x0000000000428acf : add byte ptr [rax - 0x3d], dl ; std ; call qword ptr [rax]
0x0000000000428aaf : add byte ptr [rax - 0x3d], dl ; std ; jmp qword ptr [rax]
0x00000000004086f0 : add byte ptr [rax - 0x42], cl ; jg 0x40872b ; pop rsp ; ret
0x0000000000408704 : add byte ptr [rax - 0x42], cl ; jg 0x40873f ; pop rsp ; ret
0x0000000000409761 : add byte ptr [rax - 0x47], cl ; ret 0x5662
0x000000000040a255 : add byte ptr [rax - 0x75], cl ; fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x0000000000415e10 : add byte ptr [rax - 0x75], cl ; push rbp ; call 0x1d03df68
0x0000000000420d5d : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x00000000004166de : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; ret 0x2948
0x000000000041667f : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; ret 0x8148
0x000000000041d1d1 : add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000406f09 : add byte ptr [rax - 0x77], cl ; ret 0x6ee8
0x0000000000406cc8 : add byte ptr [rax - 0x77], cl ; ret 0x8fe8
0x0000000000403c61 : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x0000000000415e1b : add byte ptr [rax - 0x7f], cl ; ret 0x40
0x000000000042ae5f : add byte ptr [rax], ah ; mov bh, bh ; jmp rdx
0x00000000004020cf : add byte ptr [rax], ah ; ret
0x0000000000401dcf : add byte ptr [rax], ah ; ret 0x62
0x0000000000429a12 : add byte ptr [rax], al ; adc byte ptr [rax], r8b ; add al, bl ; sar dh, 1 ; call qword ptr [rdx]
0x000000000042a116 : add byte ptr [rax], al ; add al, -1 ; call rdi
0x0000000000428aca : add byte ptr [rax], al ; add al, 1 ; add byte ptr [rax], al ; push rax ; ret
0x000000000040230d : add byte ptr [rax], al ; add al, ah ; ret
0x000000000040200d : add byte ptr [rax], al ; add al, ah ; ret 0x62
0x00000000004022ad : add byte ptr [rax], al ; add al, al ; ret
0x0000000000401fad : add byte ptr [rax], al ; add al, al ; ret 0x62
0x0000000000402055 : add byte ptr [rax], al ; add al, bh ; ret 0x62
0x00000000004022f5 : add byte ptr [rax], al ; add al, bl ; ret
0x0000000000401ff5 : add byte ptr [rax], al ; add al, bl ; ret 0x62
0x0000000000402325 : add byte ptr [rax], al ; add al, ch ; ret
0x0000000000402025 : add byte ptr [rax], al ; add al, ch ; ret 0x62
0x00000000004022c5 : add byte ptr [rax], al ; add al, cl ; ret
0x0000000000401fc5 : add byte ptr [rax], al ; add al, cl ; ret 0x62
0x000000000040203d : add byte ptr [rax], al ; add al, dh ; ret 0x62
0x0000000000428a6d : add byte ptr [rax], al ; add al, dl ; movsb byte ptr [rdi], byte ptr [rsi] ; std ; jmp rdx
0x00000000004022dd : add byte ptr [rax], al ; add al, dl ; ret
0x0000000000401fdd : add byte ptr [rax], al ; add al, dl ; ret 0x62
0x0000000000424c1d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000408901 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000040eded : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8b48
0x0000000000428aad : add byte ptr [rax], al ; add byte ptr [rax - 0x3d], dl ; std ; jmp qword ptr [rax]
0x0000000000408702 : add byte ptr [rax], al ; add byte ptr [rax - 0x42], cl ; jg 0x408741 ; pop rsp ; ret
0x000000000040975f : add byte ptr [rax], al ; add byte ptr [rax - 0x47], cl ; ret 0x5662
0x000000000040a253 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x0000000000415e0e : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbp ; call 0x1d03df6a
0x00000000004166dc : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; ret 0x2948
0x000000000041667d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; ret 0x8148
0x0000000000406f07 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x6ee8
0x0000000000403c5f : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x0000000000415e19 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x40
0x00000000004020cd : add byte ptr [rax], al ; add byte ptr [rax], ah ; ret
0x0000000000401dcd : add byte ptr [rax], al ; add byte ptr [rax], ah ; ret 0x62
0x000000000040230b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ah ; ret
0x000000000040200b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ah ; ret 0x62
0x00000000004022ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, al ; ret
0x0000000000401fab : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, al ; ret 0x62
0x0000000000402053 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bh ; ret 0x62
0x00000000004022f3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bl ; ret
0x0000000000401ff3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bl ; ret 0x62
0x0000000000402323 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret
0x0000000000402023 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret 0x62
0x00000000004022c3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, cl ; ret
0x0000000000401fc3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, cl ; ret 0x62
0x000000000040203b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; ret 0x62
0x00000000004022db : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dl ; ret
0x0000000000401fdb : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dl ; ret 0x62
0x0000000000424c1b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000406f05 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x6ee8
0x00000000004020cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; ret
0x0000000000401dcb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; ret 0x62
0x0000000000402309 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ah ; ret
0x0000000000402009 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ah ; ret 0x62
0x00000000004022a9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, al ; ret
0x0000000000401fa9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, al ; ret 0x62
0x0000000000402051 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bh ; ret 0x62
0x00000000004022f1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bl ; ret
0x0000000000401ff1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bl ; ret 0x62
0x0000000000402321 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret
0x0000000000402021 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret 0x62
0x00000000004022c1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, cl ; ret
0x0000000000401fc1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, cl ; ret 0x62
0x0000000000402039 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; ret 0x62
0x00000000004022d9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dl ; ret
0x0000000000401fd9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dl ; ret 0x62
0x0000000000406f03 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x6ee8
0x00000000004020c9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; ret
0x0000000000401dc9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; ret 0x62
0x0000000000402050 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; ret 0x62
0x0000000000402230 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; cwde ; ret
0x0000000000401f30 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; cwde ; ret 0x62
0x0000000000402218 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x0000000000401f18 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret 0x62
0x0000000000402170 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rax ; ret
0x0000000000401e70 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rax ; ret 0x62
0x0000000000402158 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; ret
0x0000000000401e58 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; ret 0x62
0x0000000000400640 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000401d69 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x62
0x0000000000400d78 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000004005e0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x0000000000402111 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bh ; ret
0x0000000000401e11 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bh ; ret 0x62
0x00000000004020b1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bl ; ret
0x0000000000401db1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bl ; ret 0x62
0x00000000004020e1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ch ; ret
0x0000000000401de1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ch ; ret 0x62
0x0000000000402081 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], cl ; ret
0x0000000000401d81 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], cl ; ret 0x62
0x00000000004020f9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; ret
0x0000000000401df9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; ret 0x62
0x0000000000402099 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; ret
0x0000000000401d99 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; ret 0x62
0x0000000000402052 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; ret 0x62
0x0000000000402232 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; cwde ; ret
0x0000000000401f32 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; cwde ; ret 0x62
0x000000000040221a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x0000000000401f1a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret 0x62
0x0000000000402172 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rax ; ret
0x0000000000401e72 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rax ; ret 0x62
0x000000000040215a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; ret
0x0000000000401e5a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; ret 0x62
0x0000000000400642 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000401d6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x62
0x0000000000400d7a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000004005e2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x0000000000402113 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bh ; ret
0x0000000000401e13 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bh ; ret 0x62
0x00000000004020b3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bl ; ret
0x0000000000401db3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bl ; ret 0x62
0x00000000004020e3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ch ; ret
0x0000000000401de3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ch ; ret 0x62
0x0000000000402083 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], cl ; ret
0x0000000000401d83 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], cl ; ret 0x62
0x00000000004020fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; ret
0x0000000000401dfb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; ret 0x62
0x000000000040209b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; ret
0x0000000000401d9b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; ret 0x62
0x000000000040d4b0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040570e : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402054 : add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; ret 0x62
0x0000000000402234 : add byte ptr [rax], al ; add byte ptr [rax], al ; cwde ; ret
0x0000000000401f34 : add byte ptr [rax], al ; add byte ptr [rax], al ; cwde ; ret 0x62
0x000000000040c550 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004192f0 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040221c : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x0000000000401f1c : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret 0x62
0x0000000000402174 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rax ; ret
0x0000000000401e74 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rax ; ret 0x62
0x0000000000410820 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040215c : add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; ret
0x0000000000401e5c : add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; ret 0x62
0x0000000000400644 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000042743c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x41ad
0x0000000000401d6d : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x62
0x0000000000400d7c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000004005e4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x0000000000402115 : add byte ptr [rax], al ; add byte ptr [rax], bh ; ret
0x0000000000401e15 : add byte ptr [rax], al ; add byte ptr [rax], bh ; ret 0x62
0x00000000004020b5 : add byte ptr [rax], al ; add byte ptr [rax], bl ; ret
0x0000000000401db5 : add byte ptr [rax], al ; add byte ptr [rax], bl ; ret 0x62
0x00000000004020e5 : add byte ptr [rax], al ; add byte ptr [rax], ch ; ret
0x0000000000401de5 : add byte ptr [rax], al ; add byte ptr [rax], ch ; ret 0x62
0x0000000000402085 : add byte ptr [rax], al ; add byte ptr [rax], cl ; ret
0x0000000000401d85 : add byte ptr [rax], al ; add byte ptr [rax], cl ; ret 0x62
0x00000000004020fd : add byte ptr [rax], al ; add byte ptr [rax], dh ; ret
0x0000000000401dfd : add byte ptr [rax], al ; add byte ptr [rax], dh ; ret 0x62
0x000000000040209d : add byte ptr [rax], al ; add byte ptr [rax], dl ; ret
0x0000000000401d9d : add byte ptr [rax], al ; add byte ptr [rax], dl ; ret 0x62
0x0000000000422802 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040c34e : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7238b], cl ; ret 0xb0
0x00000000004214c3 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b72b8b], cl ; ret 0xb0
0x0000000000428ae9 : add byte ptr [rax], al ; add byte ptr [rcx + rax], ah ; add byte ptr [rax], al ; ret
0x0000000000428ac9 : add byte ptr [rax], al ; add byte ptr [rcx + rax], al ; add byte ptr [rax], al ; push rax ; ret
0x000000000041e842 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7f], al ; call 0xffffffff8b0433d2
0x0000000000404217 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xfa81
0x000000000040f182 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8d0f
0x000000000040c69e : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0xf41
0x0000000000419678 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x5589
0x000000000040cb04 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000409dea : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x9588
0x0000000000404253 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000041fb77 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0xe280
0x0000000000409cd1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x000000000041c5ae : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004243cc : add byte ptr [rax], al ; add cl, ch ; ret 2
0x0000000000409d9e : add byte ptr [rax], al ; add dh, al ; cmpsd dword ptr [rsi], dword ptr [rdi] ; add ecx, ebp ; ret 0xffff
0x0000000000407443 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405710 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406e24 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402353 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000428aea : add byte ptr [rax], al ; and al, 1 ; add byte ptr [rax], al ; ret
0x0000000000429e16 : add byte ptr [rax], al ; call 0x14429d11
0x0000000000429e36 : add byte ptr [rax], al ; call 0x28429d31
0x0000000000402056 : add byte ptr [rax], al ; clc ; ret 0x62
0x0000000000429756 : add byte ptr [rax], al ; cmp byte ptr [rdi - 2], ch ; call qword ptr [rsi]
0x0000000000402236 : add byte ptr [rax], al ; cwde ; ret
0x0000000000401f36 : add byte ptr [rax], al ; cwde ; ret 0x62
0x0000000000429316 : add byte ptr [rax], al ; fadd dword ptr [rcx - 2] ; jmp qword ptr [rdi]
0x0000000000429576 : add byte ptr [rax], al ; fcom dword ptr [rbp - 2] ; jmp qword ptr [rdx]
0x0000000000428aaa : add byte ptr [rax], al ; in al, 0 ; add byte ptr [rax], al ; push rax ; ret
0x0000000000428caa : add byte ptr [rax], al ; in al, 2 ; add byte ptr [rax], al ; nop ; sar ch, cl ; jmp rsp
0x0000000000429a32 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; adc byte ptr [rax], al ; add al, bl ; sar dh, 1 ; call qword ptr [rdx]
0x000000000042a43a : add byte ptr [rax], al ; je 0x42a461 ; add byte ptr [rax], al ; push rax ; and bh, bh ; jmp qword ptr [rdx]
0x000000000042ab3a : add byte ptr [rax], al ; je 0x42ab68 ; add byte ptr [rax], al ; nop ; jle 0x42ab4b ; call qword ptr [rsi]
0x0000000000427fee : add byte ptr [rax], al ; jl 0x427fa7 ; std ; call rsp
0x0000000000402529 : add byte ptr [rax], al ; jmp 0x402369
0x000000000042806e : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; fdivp st(5) ; call rsp
0x000000000040c552 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000041a232 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004192f2 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000042866e : add byte ptr [rax], al ; mov word ptr [rdi - 1], es ; jmp rsp
0x0000000000428a6a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add al, dl ; movsb byte ptr [rdi], byte ptr [rsi] ; std ; jmp rdx
0x000000000042ab3e : add byte ptr [rax], al ; nop ; jle 0x42ab47 ; call qword ptr [rsi]
0x000000000040221e : add byte ptr [rax], al ; nop ; ret
0x0000000000401f1e : add byte ptr [rax], al ; nop ; ret 0x62
0x0000000000428cae : add byte ptr [rax], al ; nop ; sar ch, cl ; jmp rsp
0x0000000000402176 : add byte ptr [rax], al ; pop rax ; ret
0x0000000000401e76 : add byte ptr [rax], al ; pop rax ; ret 0x62
0x0000000000405303 : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000420bfb : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041b930 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000406d61 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000042872e : add byte ptr [rax], al ; pop rsp ; mov edi, dr1 ; jmp rsp
0x000000000042a43e : add byte ptr [rax], al ; push rax ; and bh, bh ; jmp qword ptr [rdx]
0x000000000040215e : add byte ptr [rax], al ; push rax ; ret
0x0000000000401e5e : add byte ptr [rax], al ; push rax ; ret 0x62
0x000000000042ab1a : add byte ptr [rax], al ; push rsp ; and dword ptr [rax], eax ; add al, dl ; jge 0x42ab2b ; jmp rax
0x0000000000400646 : add byte ptr [rax], al ; ret
0x000000000042743e : add byte ptr [rax], al ; ret 0x41ad
0x0000000000401d6f : add byte ptr [rax], al ; ret 0x62
0x0000000000400d7e : add byte ptr [rax], al ; ret 1
0x00000000004005e6 : add byte ptr [rax], al ; ret 2
0x0000000000428b8e : add byte ptr [rax], al ; ror al, -3 ; jmp rsi
0x000000000042ab1e : add byte ptr [rax], al ; sar byte ptr [rbp - 1], 1 ; jmp rax
0x0000000000429696 : add byte ptr [rax], al ; sub byte ptr [rbx - 2], ch ; call qword ptr [rax]
0x000000000042ae5a : add byte ptr [rax], al ; xchg eax, esp ; and al, 0 ; add byte ptr [rax], ah ; mov bh, bh ; jmp rdx
0x0000000000402117 : add byte ptr [rax], bh ; ret
0x0000000000401e17 : add byte ptr [rax], bh ; ret 0x62
0x0000000000429137 : add byte ptr [rax], bh ; sub dh, bh ; jmp rcx
0x00000000004020b7 : add byte ptr [rax], bl ; ret
0x0000000000401db7 : add byte ptr [rax], bl ; ret 0x62
0x00000000004020e7 : add byte ptr [rax], ch ; ret
0x0000000000401de7 : add byte ptr [rax], ch ; ret 0x62
0x0000000000402087 : add byte ptr [rax], cl ; ret
0x0000000000401d87 : add byte ptr [rax], cl ; ret 0x62
0x00000000004020ff : add byte ptr [rax], dh ; ret
0x0000000000401dff : add byte ptr [rax], dh ; ret 0x62
0x000000000040209f : add byte ptr [rax], dl ; ret
0x0000000000401d9f : add byte ptr [rax], dl ; ret 0x62
0x0000000000420bfc : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000041b931 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000406d62 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040954e : add byte ptr [rbx - 0x76b71f8b], cl ; ret 0xb0
0x000000000040c350 : add byte ptr [rbx - 0x76b7238b], cl ; ret 0xb0
0x00000000004214c5 : add byte ptr [rbx - 0x76b72b8b], cl ; ret 0xb0
0x000000000040fdd4 : add byte ptr [rbx - 0x76b73b8b], cl ; ret 0xb0
0x0000000000428aeb : add byte ptr [rcx + rax], ah ; add byte ptr [rax], al ; ret
0x0000000000428acb : add byte ptr [rcx + rax], al ; add byte ptr [rax], al ; push rax ; ret
0x00000000004286af : add byte ptr [rcx + rdx*2 - 1], cl ; jmp rsp
0x000000000041e844 : add byte ptr [rcx - 0x7f], al ; call 0xffffffff8b0433d0
0x0000000000423a8c : add byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x000000000040869e : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000402bd8 : add byte ptr [rcx], al ; ret
0x0000000000404219 : add byte ptr [rcx], al ; ret 0xfa81
0x000000000040f184 : add byte ptr [rcx], bh ; ret 0x8d0f
0x000000000040c6a0 : add byte ptr [rcx], bh ; ret 0xf41
0x000000000041967a : add byte ptr [rcx], ch ; ret 0x5589
0x000000000042ab1b : add byte ptr [rcx], dl ; add al, dl ; jge 0x42ab2a ; jmp rax
0x0000000000429133 : add byte ptr [rdi + rax], ch ; add byte ptr [rax], bh ; sub dh, bh ; jmp rcx
0x00000000004288af : add byte ptr [rdi + rsi*4 - 1], bh ; jmp rsp
0x00000000004243c8 : add byte ptr [rdi], cl ; lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000409f84 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5588
0x000000000040cb06 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000409dec : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x9588
0x0000000000404255 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000041fb79 : add byte ptr [rdi], cl ; xchg eax, esi ; ret 0xe280
0x0000000000409cd3 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x000000000041c5b0 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040de54 : add byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000416ded : add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x0000000000428e53 : add byte ptr [rsp + rax - 0x1080000], cl ; std ; jmp qword ptr [rcx]
0x000000000042872f : add byte ptr [rsp + rcx*4 - 1], bl ; jmp rsp
0x00000000004287af : add byte ptr [rsp + rdx*4 - 1], ch ; jmp rsp
0x00000000004243ce : add cl, ch ; ret 2
0x0000000000409da0 : add dh, al ; cmpsd dword ptr [rsi], dword ptr [rdi] ; add ecx, ebp ; ret 0xffff
0x000000000040b801 : add dword ptr [r8], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041e43a : add dword ptr [rax + 0x29], ecx ; ret 0x8948
0x0000000000418d32 : add dword ptr [rax + 0xf], eax ; mov dh, -0x39 ; pop rbp ; ret
0x0000000000421239 : add dword ptr [rax - 0x77], ecx ; ret 0x8148
0x0000000000428acd : add dword ptr [rax], eax ; add byte ptr [rax - 0x3d], dl ; std ; call qword ptr [rax]
0x000000000041bc5f : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000420bfa : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000041b92f : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000406d60 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040b802 : add dword ptr [rax], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405cba : add dword ptr [rax], eax ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000405f26 : add dword ptr [rax], ecx ; ret 0x840
0x0000000000405f30 : add dword ptr [rdi], ecx ; mov dh, -0x3e ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040e2ff : add dword ptr [rdi], ecx ; mov dh, -0x3f ; pop rbp ; ret
0x0000000000416ac6 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004096a0 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000417f19 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040a55c : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x000000000041ea2b : add eax, 0x148a3f2 ; ret 0x8948
0x0000000000402bd4 : add eax, 0x2299de ; add ebx, esi ; ret
0x0000000000403797 : add eax, 0x8945ce21 ; ret 0x8141
0x00000000004243cb : add eax, 0xe9000000 ; ret 2
0x0000000000416f7c : add eax, ecx ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004136f5 : add eax, edi ; loop 0x41367e ; ret 0xf436
0x00000000004136ed : add eax, edi ; loop 0x4136f6 ; ret 0xc281
0x0000000000402b9b : add eax, edx ; sar rax, 1 ; jne 0x402bac ; pop rbp ; ret
0x0000000000402bd9 : add ebx, esi ; ret
0x0000000000409da4 : add ecx, ebp ; ret 0xffff
0x000000000041913d : add edx, ecx ; mov rsi, qword ptr [rdx] ; call rax
0x0000000000402f0b : add esp, 0x10 ; pop rbp ; ret
0x000000000040869c : add esp, 0x100 ; pop rbp ; ret
0x000000000040b75b : add esp, 0x10b0 ; pop rbp ; ret
0x00000000004052ff : add esp, 0x110 ; pop rbp ; ret
0x00000000004072fd : add esp, 0x120 ; pop rbp ; ret
0x000000000040c2da : add esp, 0x1240 ; pop rbp ; ret
0x00000000004246fc : add esp, 0x130 ; pop rbp ; ret
0x0000000000408194 : add esp, 0x140 ; pop rbp ; ret
0x000000000040eb44 : add esp, 0x180 ; pop rbp ; ret
0x0000000000420f2c : add esp, 0x1a0 ; pop rbp ; ret
0x000000000040fcb4 : add esp, 0x1d0 ; pop rbp ; ret
0x0000000000422dde : add esp, 0x1e0 ; pop rbp ; ret
0x0000000000406d5d : add esp, 0x1e8 ; pop rbx ; pop rbp ; ret
0x00000000004052a2 : add esp, 0x20 ; pop rbp ; ret
0x000000000040de52 : add esp, 0x200 ; pop rbp ; ret
0x0000000000410ab7 : add esp, 0x28 ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040301d : add esp, 0x30 ; pop rbp ; ret
0x00000000004157c8 : add esp, 0x30 ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000408fea : add esp, 0x40 ; pop rbp ; ret
0x0000000000405447 : add esp, 0x50 ; pop rbp ; ret
0x000000000041eed7 : add esp, 0x50 ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000405cbd : add esp, 0x60 ; pop rbp ; ret
0x0000000000405268 : add esp, 0x68 ; pop rbx ; pop rbp ; ret
0x000000000040b968 : add esp, 0x70 ; pop rbp ; ret
0x000000000040c9a4 : add esp, 0x80 ; pop rbp ; ret
0x0000000000405a10 : add esp, 0x90 ; pop rbp ; ret
0x0000000000409ea0 : add esp, 0xa0 ; pop rbp ; ret
0x0000000000408d43 : add esp, 0xb0 ; pop rbp ; ret
0x0000000000415e9b : add esp, 0xc0 ; pop rbp ; ret
0x00000000004093d6 : add esp, 0xd0 ; pop rbp ; ret
0x00000000004227ff : add esp, 0xd8 ; pop rbx ; pop rbp ; ret
0x00000000004159a9 : add esp, 0xe0 ; pop rbp ; ret
0x0000000000402356 : add esp, 8 ; ret
0x00000000004136f4 : add rax, r15 ; loop 0x41367f ; ret 0xf436
0x00000000004136ec : add rax, r15 ; loop 0x4136f7 ; ret 0xc281
0x0000000000416f7b : add rax, rcx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402b9a : add rax, rdx ; sar rax, 1 ; jne 0x402bad ; pop rbp ; ret
0x000000000041913c : add rdx, rcx ; mov rsi, qword ptr [rdx] ; call rax
0x0000000000402f0a : add rsp, 0x10 ; pop rbp ; ret
0x000000000040869b : add rsp, 0x100 ; pop rbp ; ret
0x000000000040b75a : add rsp, 0x10b0 ; pop rbp ; ret
0x00000000004052fe : add rsp, 0x110 ; pop rbp ; ret
0x00000000004072fc : add rsp, 0x120 ; pop rbp ; ret
0x000000000040c2d9 : add rsp, 0x1240 ; pop rbp ; ret
0x00000000004246fb : add rsp, 0x130 ; pop rbp ; ret
0x0000000000408193 : add rsp, 0x140 ; pop rbp ; ret
0x000000000040eb43 : add rsp, 0x180 ; pop rbp ; ret
0x0000000000420f2b : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000040fcb3 : add rsp, 0x1d0 ; pop rbp ; ret
0x0000000000422ddd : add rsp, 0x1e0 ; pop rbp ; ret
0x0000000000406d5c : add rsp, 0x1e8 ; pop rbx ; pop rbp ; ret
0x00000000004052a1 : add rsp, 0x20 ; pop rbp ; ret
0x000000000040de51 : add rsp, 0x200 ; pop rbp ; ret
0x000000000040301c : add rsp, 0x30 ; pop rbp ; ret
0x00000000004157c7 : add rsp, 0x30 ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000408fe9 : add rsp, 0x40 ; pop rbp ; ret
0x0000000000405446 : add rsp, 0x50 ; pop rbp ; ret
0x000000000041eed6 : add rsp, 0x50 ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000405cbc : add rsp, 0x60 ; pop rbp ; ret
0x0000000000405267 : add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x000000000040b967 : add rsp, 0x70 ; pop rbp ; ret
0x000000000040c9a3 : add rsp, 0x80 ; pop rbp ; ret
0x0000000000405a0f : add rsp, 0x90 ; pop rbp ; ret
0x0000000000409e9f : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000408d42 : add rsp, 0xb0 ; pop rbp ; ret
0x0000000000415e9a : add rsp, 0xc0 ; pop rbp ; ret
0x00000000004093d5 : add rsp, 0xd0 ; pop rbp ; ret
0x00000000004227fe : add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x00000000004159a8 : add rsp, 0xe0 ; pop rbp ; ret
0x0000000000402355 : add rsp, 8 ; ret
0x0000000000424b9c : addps xmm1, xmm2 ; movaps xmm0, xmm1 ; pop rbp ; ret
0x0000000000424b9b : addsd xmm1, xmm2 ; movaps xmm0, xmm1 ; pop rbp ; ret
0x000000000042ae5d : and al, 0 ; add byte ptr [rax], ah ; mov bh, bh ; jmp rdx
0x0000000000428aec : and al, 1 ; add byte ptr [rax], al ; ret
0x000000000040a55b : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000402bd7 : and al, byte ptr [rax] ; add ebx, esi ; ret
0x0000000000418d30 : and bh, 1 ; movzx eax, dil ; pop rbp ; ret
0x000000000042a441 : and bh, bh ; jmp qword ptr [rdx]
0x000000000040d2c4 : and byte ptr [rax + rcx*2 + 0x2948f229], dh ; ret 0xb848
0x00000000004072ff : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040e2fd : and cl, 1 ; movzx eax, cl ; pop rbp ; ret
0x0000000000418d2f : and dil, 1 ; movzx eax, dil ; pop rbp ; ret
0x000000000042ab1d : and dword ptr [rax], eax ; add al, dl ; jge 0x42ab28 ; jmp rax
0x0000000000410e79 : and eax, 0x212305e5 ; ret 0x941
0x0000000000411d98 : and eax, 0x21444134 ; ret 0x8941
0x0000000000417395 : and eax, 0x427040 ; mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x0000000000404e19 : and eax, 0x62c500 ; pop rbp ; ret
0x000000000041069f : and eax, 0x62cb88 ; pop rbp ; ret
0x00000000004106c3 : and eax, 0x62cb90 ; pop rbp ; ret
0x0000000000414dbf : and eax, dword ptr [rbp - 0x76ba35df] ; ret 0x8141
0x0000000000423369 : and eax, edx ; xor rdi, rdx ; or rax, rdi ; pop rbp ; ret
0x000000000041de15 : and edi, eax ; mov rax, rdi ; pop rbp ; ret
0x00000000004235ee : and edx, eax ; mov al, dl ; movzx eax, al ; pop rbp ; ret
0x00000000004234c8 : and edx, eax ; mov ax, dx ; movzx eax, ax ; pop rbp ; ret
0x0000000000423277 : and edx, eax ; or r9d, edx ; mov eax, r9d ; pop rbp ; ret
0x0000000000423583 : and edx, ebx ; mov al, dl ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x00000000004235ed : and edx, r8d ; mov al, dl ; movzx eax, al ; pop rbp ; ret
0x0000000000410e7c : and esp, dword ptr [rcx] ; ret 0x941
0x0000000000413c2c : and r12d, dword ptr [r9] ; ret 0x941
0x000000000041de14 : and rdi, rax ; mov rax, rdi ; pop rbp ; ret
0x0000000000429e18 : call 0x14429d0f
0x0000000000415b14 : call 0x1d03dc64
0x0000000000415d6a : call 0x1d03deba
0x0000000000415e14 : call 0x1d03df64
0x0000000000429e38 : call 0x28429d2f
0x000000000042040f : call 0x2973c22a
0x000000000042040e : call 0x2973c22b
0x0000000000403113 : call 0x402539
0x000000000040624f : call 0x402542
0x00000000004030f7 : call 0x402919
0x000000000040666f : call 0x402962
0x0000000000408bc4 : call 0x404e22
0x00000000004095c4 : call 0x408752
0x00000000004095c3 : call 0x408753
0x000000000040d19d : call 0x4093e2
0x0000000000405cb7 : call 0x421f02
0x000000000040d5ac : call 0x490b5eff
0x000000000040d5ab : call 0x490b5f00
0x000000000040d6ab : call 0x490b5ffe
0x000000000040d6aa : call 0x490b5fff
0x000000000041d973 : call 0x49419bac
0x000000000041d983 : call 0x49419bbc
0x000000000040974a : call 0x881229e
0x0000000000409749 : call 0x881229f
0x000000000041e847 : call 0xffffffff8b0433cd
0x0000000000421443 : call 0xffffffffe08f9f96
0x000000000040c181 : call 0xffffffffe0b64cd5
0x000000000040e847 : call 0xffffffffe9037197
0x000000000041b969 : call 0xffffffffe90442b9
0x000000000041b968 : call 0xffffffffe90442ba
0x0000000000417881 : call 0xffffffffff7b03d2
0x0000000000417880 : call 0xffffffffff7b03d3
0x00000000004179bf : call 0xffffffffff7b0510
0x00000000004179be : call 0xffffffffff7b0511
0x0000000000424bf9 : call qword ptr [r12 + rbx*8]
0x0000000000428ad3 : call qword ptr [rax]
0x0000000000429e1b : call qword ptr [rbx]
0x00000000004299fb : call qword ptr [rdx]
0x000000000040c6be : call qword ptr [rsi]
0x0000000000424bfa : call qword ptr [rsp + rbx*8]
0x0000000000402bfd : call rax
0x000000000041b6bc : call rbx
0x000000000042941b : call rcx
0x0000000000429ffb : call rdi
0x000000000042917b : call rdx
0x0000000000427ff3 : call rsp
0x0000000000402bd6 : cdq ; and al, byte ptr [rax] ; add ebx, esi ; ret
0x0000000000405343 : clc ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040869a : clc ; add rsp, 0x100 ; pop rbp ; ret
0x00000000004246fa : clc ; add rsp, 0x130 ; pop rbp ; ret
0x000000000041701e : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405e51 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040dbca : clc ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000405445 : clc ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040fee2 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000419d42 : clc ; add rsp, 0x90 ; pop rbp ; ret
0x0000000000418b20 : clc ; add rsp, 0xc0 ; pop rbp ; ret
0x000000000041481a : clc ; cmp ch, dl ; mov ch, -0x7f ; ret 0x59c3
0x0000000000402b9f : clc ; jne 0x402ba8 ; pop rbp ; ret
0x0000000000423e52 : clc ; jo 0x423e03 ; adc cl, byte ptr [rax + 1] ; ret 0x8948
0x00000000004136f6 : clc ; loop 0x41367d ; ret 0xf436
0x00000000004136ee : clc ; loop 0x4136f5 ; ret 0xc281
0x000000000042345a : clc ; mov ax, r8w ; movzx eax, ax ; pop rbp ; ret
0x0000000000404e26 : clc ; mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x000000000041a405 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000041081c : clc ; mov dword ptr [rdi + 0x18], 0 ; pop rbp ; ret
0x0000000000423b0f : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004108be : clc ; mov esi, dword ptr [rbp - 0xc] ; mov dword ptr [rdi], esi ; pop rbp ; ret
0x0000000000418e0c : clc ; mov qword ptr [rbp - 0x10], rsi ; pop rbp ; ret
0x000000000041cd23 : clc ; mov qword ptr [rdi + 0x10], rsi ; pop rbp ; ret
0x0000000000418b5e : clc ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000041cd03 : clc ; mov qword ptr [rdi + 8], rsi ; pop rbp ; ret
0x000000000040562f : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000416adb : clc ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000416afb : clc ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000416b1b : clc ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000042318c : clc ; mov rax, r8 ; pop rbp ; ret
0x000000000041ce67 : clc ; mov rdi, qword ptr [rdx + 0x10] ; call rax
0x0000000000418f6e : clc ; mov rdi, qword ptr [rdx + rcx*8] ; mov rsi, qword ptr [rbp - 0x28] ; call rax
0x0000000000405633 : clc ; pop rbp ; ret
0x0000000000402058 : clc ; ret 0x62
0x000000000040c54f : cld ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000402f37 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040b759 : cld ; add rsp, 0x10b0 ; pop rbp ; ret
0x000000000042063e : cld ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040e0bb : cld ; add rsp, 0x200 ; pop rbp ; ret
0x0000000000422f6e : cld ; add rsp, 0x30 ; pop rbp ; ret
0x000000000042313d : cld ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000409911 : cld ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041687c : cld ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040b966 : cld ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004163d3 : cld ; add rsp, 0x80 ; pop rbp ; ret
0x000000000041841a : cld ; add rsp, 0xc0 ; pop rbp ; ret
0x00000000004159a7 : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x0000000000404e16 : cld ; mov dword ptr [0x62c500], eax ; pop rbp ; ret
0x0000000000423b0c : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000416921 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042063b : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000422f6b : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000042313a : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040990e : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040b963 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040da36 : cld ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040c556 : cld ; pop rbp ; ret
0x0000000000412334 : cli ; popfq ; jmp 0x37a4e3
0x0000000000418f71 : cmp al, -0x36 ; mov rsi, qword ptr [rbp - 0x28] ; call rax
0x00000000004285b1 : cmp al, -1 ; jmp rsp
0x0000000000404dd3 : cmp al, 0x25 ; cmp esp, dword ptr [rdi + 0x42] ; add al, ch ; ret 0xffd7
0x00000000004030fe : cmp al, 0x25 ; ret 0x4265
0x0000000000408bc3 : cmp al, ch ; push rdi ; ret 0xffff
0x0000000000410f5e : cmp bh, byte ptr [rcx + 0x214469b1] ; ret 0x8941
0x0000000000429758 : cmp byte ptr [rdi - 2], ch ; call qword ptr [rsi]
0x000000000041481b : cmp ch, dl ; mov ch, -0x7f ; ret 0x59c3
0x00000000004097e3 : cmp dword ptr [rax - 0x75], ecx ; fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x000000000041726a : cmp dword ptr [rax - 0x75], ecx ; jne 0x417254 ; call rax
0x0000000000422cc9 : cmp dword ptr [rdx - 0x76be63d5], ebx ; ret
0x0000000000422326 : cmp eax, 0x8945c621 ; ret 0x8141
0x0000000000402b5d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x402b70 ; pop rbp ; ret
0x00000000004155b3 : cmp esp, dword ptr [rcx] ; ret 0x941
0x0000000000404dd5 : cmp esp, dword ptr [rdi + 0x42] ; add al, ch ; ret 0xffd7
0x0000000000409da3 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add ecx, ebp ; ret 0xffff
0x000000000042073c : cwde ; mov rcx, qword ptr [rax*8 + 0x4278e0] ; jmp rcx
0x0000000000408bc0 : cwde ; movsx edi, byte ptr [rax] ; call 0x404e26
0x0000000000408bbf : cwde ; movsx edi, byte ptr [rax] ; call 0x404e27
0x0000000000402238 : cwde ; ret
0x0000000000401f38 : cwde ; ret 0x62
0x0000000000414c8d : cwde ; ret 0x8d89
0x0000000000414c85 : cwde ; ret 0xc101
0x000000000041351b : dec byte ptr [rbx - 0x397e4fb3] ; adc byte ptr es:[rax], ch ; ret
0x000000000041ed51 : dec dword ptr [rax + 0x21] ; ret 0x948
0x000000000040dc45 : dec dword ptr [rax + 0x29] ; ret 0x148
0x000000000040ed82 : dec dword ptr [rax + 0x39] ; ret 0x8948
0x00000000004030fb : dec dword ptr [rax - 0x73] ; cmp al, 0x25 ; ret 0x4265
0x0000000000422518 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; enter 0x427e, 0 ; jmp rcx
0x0000000000410fd2 : dec dword ptr [rax - 0x75] ; pop rbp ; mov byte ptr [rax - 0x7f], cl ; ret
0x000000000040b4d5 : dec dword ptr [rax - 0x77] ; ret 0x12e8
0x00000000004070fd : dec dword ptr [rax - 0x77] ; ret 0x1ae8
0x000000000040c0e6 : dec dword ptr [rax - 0x77] ; ret 0x1e8
0x0000000000406705 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x000000000040bda6 : dec dword ptr [rax - 0x77] ; ret 0x41e8
0x0000000000407e04 : dec dword ptr [rax - 0x77] ; ret 0x73e8
0x000000000040c26d : dec dword ptr [rax - 0x77] ; ret 0x7ae8
0x0000000000407e8d : dec dword ptr [rax - 0x77] ; ret 0x8148
0x000000000041c841 : dec dword ptr [rax - 0x77] ; ret 0x86e8
0x0000000000406ce7 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000040edd5 : dec dword ptr [rax - 0x77] ; ret 0xa2e8
0x000000000040438e : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040c04f : dec dword ptr [rax - 0x7f] ; ret 0x9c
0x0000000000406fa5 : dec dword ptr [rax - 0x7f] ; ret 0xffe0
0x000000000040e351 : dec dword ptr [rax - 0x7f] ; ret 8
0x00000000004113b9 : dec dword ptr [rbp - 0x77] ; ror dword ptr [rcx - 0x7f], cl ; ret
0x00000000004113ff : dec dword ptr [rbx + rcx*4 + 0x55] ; mov byte ptr [rcx - 0x7f], cl ; ret 4
0x0000000000410cf7 : dec dword ptr [rbx + rcx*4 + 0x5d] ; mov byte ptr [rcx - 0x7f], cl ; ret
0x00000000004112a3 : dec dword ptr [rcx - 0x7628d639] ; ret 0xf229
0x0000000000411115 : dec dword ptr [rcx - 0x7629d63a] ; ret 0x2944
0x0000000000411053 : dec dword ptr [rcx - 0x7629d63a] ; ret 0xca29
0x000000000041e2af : dec dword ptr [rcx - 0x77] ; ret 0x2149
0x000000000041b0c2 : dec dword ptr [rcx - 0x77] ; ret 0x294d
0x0000000000422d01 : dec dword ptr [rdi] ; test dword ptr [rip - 0x18000000], esi ; ret
0x000000000040e2c1 : div dword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000040e2c0 : div qword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x00000000004136e9 : enter -0x157f, 0x4c ; add eax, edi ; loop 0x4136fa ; ret 0xc281
0x00000000004136e8 : enter -0x157f, 0x4c ; add eax, edi ; loop 0x4136fb ; ret 0xc281
0x0000000000417267 : enter -0x74b8, 0x39 ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x0000000000408fe8 : enter -0x7cb8, -0x3c ; pop rbp ; ret
0x00000000004088fd : enter 0x2d48, 1 ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000040975b : enter 0x2d48, 1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x47], cl ; ret 0x5662
0x000000000042251d : enter 0x427e, 0 ; jmp rcx
0x000000000041ea03 : enter 0x4879, 0x29 ; ret 0x8948
0x000000000041b450 : enter 0x4b05, 0x34 ; fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x0000000000424b5f : enter 0x4d89, -0x14 ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000422801 : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004199f1 : fadd dword ptr [rcx - 0xa] ; jmp qword ptr [rcx]
0x0000000000429318 : fadd dword ptr [rcx - 2] ; jmp qword ptr [rdi]
0x0000000000429578 : fcom dword ptr [rbp - 2] ; jmp qword ptr [rdx]
0x0000000000428071 : fdivp st(5) ; call rsp
0x000000000041b454 : fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x000000000041480d : fiadd dword ptr [rdx - 0x7e35fe4e] ; ret 0xdae3
0x0000000000402bd5 : ficomp word ptr [rcx - 0xcfeffde] ; ret
0x00000000004084ff : fild word ptr [rcx - 0xf] ; jmp qword ptr [rcx]
0x0000000000423584 : fimul dword ptr [rax - 0x3f49f030] ; pop rbx ; pop rbp ; ret
0x000000000041e90f : fimul word ptr [rcx - 0x77] ; ret 0x8149
0x000000000041e0e7 : fisttp dword ptr [rax + 0x21] ; fisttp word ptr [rcx - 0x77] ; ret
0x0000000000410cac : fisttp dword ptr [rax - 0x7f] ; ret
0x000000000041e0ea : fisttp word ptr [rcx - 0x77] ; ret
0x000000000041c9b1 : fmul dword ptr [r8 - 0x46] ; jg 0x41c95d ; ret
0x00000000004097e6 : fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x000000000041cb3b : fmul dword ptr [rax - 0x42] ; ret
0x000000000041c9b2 : fmul dword ptr [rax - 0x46] ; jg 0x41c95c ; ret
0x0000000000408fb3 : fmul dword ptr [rax - 0x75] ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x80
0x00000000004097e7 : fmul dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000408fb7 : fmul dword ptr [rax - 0x7f] ; ret 0x80
0x000000000041e12e : fmul dword ptr [rcx - 0x77] ; ror byte ptr [rcx + 0x29], cl ; ret 0x14c
0x000000000040c353 : fmul qword ptr [rax - 0x77] ; ret 0xb0
0x0000000000424bfc : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000412c24 : fstp qword ptr [rsp + rbx*8 + 0x21] ; ret 0x941
0x0000000000412c26 : fsub qword ptr [rcx] ; ret 0x941
0x0000000000414c8b : fucomp st(4) ; cwde ; ret 0x8d89
0x0000000000414c83 : fucomp st(4) ; cwde ; ret 0xc101
0x0000000000402f09 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000409649 : hlt ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004108c1 : hlt ; mov dword ptr [rdi], esi ; pop rbp ; ret
0x0000000000402b70 : hlt ; pop rbp ; mov edi, 0x62c560 ; jmp rax
0x0000000000406264 : imul eax, dword ptr [rdx], 0xd2e8d689 ; ret 0xffff
0x000000000040ba47 : in al, -0x75 ; in al, 0x48 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000428aac : in al, 0 ; add byte ptr [rax], al ; push rax ; ret
0x00000000004215e1 : in al, 0x34 ; sub eax, 0x14c5b7a ; ret 0x8148
0x00000000004215f5 : in al, 0x34 ; sub eax, 0x294c5b7a ; ret 0x8948
0x000000000040ba4a : in al, 0x48 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000428cac : in al, 2 ; add byte ptr [rax], al ; nop ; sar ch, cl ; jmp rsp
0x00000000004052a0 : in al, dx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000414c8c : in al, dx ; cwde ; ret 0x8d89
0x0000000000414c84 : in al, dx ; cwde ; ret 0xc101
0x0000000000424b62 : in al, dx ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000424b65 : in al, dx ; pop rbp ; ret
0x0000000000406250 : in al, dx ; ret 0xffff
0x000000000042273a : in eax, -0x4a ; loope 0x422763 ; ret 0x8941
0x0000000000410e7a : in eax, 5 ; and esp, dword ptr [rcx] ; ret 0x941
0x000000000041487f : in eax, dx ; jmp 0x9830aa9
0x0000000000409a66 : inc dword ptr [rax] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000410d6e : inc dword ptr [rbp - 0x77] ; ret 0x2145
0x0000000000406bcf : inc dword ptr [rcx + 0x21] ; ret 0x8141
0x0000000000410b9a : inc dword ptr [rcx + 0xf] ; xchg eax, edx ; ret 0x8041
0x0000000000414c80 : inc dword ptr [rcx - 0x6713223f] ; ret 0xc101
0x00000000004136bd : inc dword ptr [rcx - 0x76a2f219] ; mov bl, 0x21 ; ret 0xce09
0x000000000040686e : inc dword ptr [rcx - 0x77] ; ret
0x000000000041456a : inc dword ptr [rcx - 0x77] ; ret 0x8141
0x00000000004146dd : inc dword ptr [rcx - 0x7f] ; loop 0x4146b9 ; ret 0x8e6a
0x00000000004146bf : inc dword ptr [rcx - 0x7f] ; loopne 0x41469b ; ret 0x8e6a
0x000000000041b6db : inc dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x00000000004117ac : inc ecx ; jmp 0x2203a0d1
0x000000000041190d : inc ecx ; jmp 0x2203a22d
0x0000000000411a3a : inc ecx ; jmp 0x2203a355
0x0000000000412476 : inc ecx ; jmp 0x2203ad94
0x000000000041279c : inc ecx ; jmp 0x2203b0bf
0x0000000000412ae2 : inc ecx ; jmp 0x2203b409
0x0000000000413730 : inc ecx ; jmp 0x2203c045
0x00000000004137f3 : inc ecx ; jmp 0x2203c11b
0x0000000000413b1d : inc ecx ; jmp 0x2203c432
0x0000000000413f03 : inc ecx ; jmp 0x2203c818
0x00000000004141d7 : inc ecx ; jmp 0x2203caf3
0x00000000004142bb : inc ecx ; jmp 0x2203cbd0
0x00000000004144e5 : inc ecx ; jmp 0x2203ce07
0x00000000004149a9 : inc ecx ; jmp 0x2203d2cb
0x0000000000414ca3 : inc ecx ; jmp 0x2203d5ba
0x00000000004156e2 : inc ecx ; jmp 0x2203dff9
0x000000000042886b : inc esp ; sub al, 0 ; add ah, cl ; mov bl, -1 ; jmp rsp
0x00000000004287ab : inc esp ; sub dword ptr [rax], eax ; add byte ptr [rsp + rdx*4 - 1], ch ; jmp rsp
0x0000000000429a34 : insb byte ptr [rdi], dx ; adc byte ptr [rax], al ; add al, bl ; sar dh, 1 ; call qword ptr [rdx]
0x0000000000407442 : insd dword ptr [rdi], dx ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000420d65 : int 0x80
0x000000000040537f : int 1
0x000000000040d19c : iretd ; call 0x4093e3
0x0000000000402b63 : ja 0x402b6a ; pop rbp ; ret
0x0000000000418b61 : ja 0x418bae ; pop rbp ; ret
0x000000000041cd06 : ja 0x41cd13 ; pop rbp ; ret
0x000000000041cd26 : ja 0x41cd3b ; pop rbp ; ret
0x000000000040e16a : jb 0x40e1a7 ; add dword ptr [rax], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004286f1 : jbe 0x4286f4 ; jmp rsp
0x0000000000402b6f : je 0x402b6d ; pop rbp ; mov edi, 0x62c560 ; jmp rax
0x000000000042a43c : je 0x42a45f ; add byte ptr [rax], al ; push rax ; and bh, bh ; jmp qword ptr [rdx]
0x000000000042ab3c : je 0x42ab66 ; add byte ptr [rax], al ; nop ; jle 0x42ab49 ; call qword ptr [rsi]
0x00000000004086f4 : jg 0x408727 ; pop rsp ; ret
0x00000000004086f3 : jg 0x408728 ; pop rsp ; ret
0x0000000000408708 : jg 0x40873b ; pop rsp ; ret
0x0000000000408707 : jg 0x40873c ; pop rsp ; ret
0x000000000041c9b5 : jg 0x41c959 ; ret
0x000000000041c9c5 : jg 0x41c969 ; ret
0x0000000000408d69 : jge 0x408d62 ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004108bd : jge 0x4108bf ; mov esi, dword ptr [rbp - 0xc] ; mov dword ptr [rdi], esi ; pop rbp ; ret
0x0000000000416ada : jge 0x416adb ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000416afa : jge 0x416afb ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000416b1a : jge 0x416b1b ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000416ed0 : jge 0x416ec3 ; mov rcx, qword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x00000000004184a0 : jge 0x418493 ; mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000418b5d : jge 0x418b5e ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000418e0b : jge 0x418e0c ; mov qword ptr [rbp - 0x10], rsi ; pop rbp ; ret
0x000000000041cd02 : jge 0x41cd03 ; mov qword ptr [rdi + 8], rsi ; pop rbp ; ret
0x000000000041cd22 : jge 0x41cd23 ; mov qword ptr [rdi + 0x10], rsi ; pop rbp ; ret
0x000000000042ab21 : jge 0x42ab24 ; jmp rax
0x0000000000427ff0 : jl 0x427fa5 ; std ; call rsp
0x000000000041e83a : jle 0x41e889 ; ret 0x418a
0x000000000041e848 : jle 0x41e897 ; ret 0x498a
0x000000000042ab41 : jle 0x42ab44 ; call qword ptr [rsi]
0x00000000004117ae : jmp 0x2203a0cf
0x000000000041190f : jmp 0x2203a22b
0x0000000000411a3c : jmp 0x2203a353
0x0000000000412478 : jmp 0x2203ad92
0x000000000041279e : jmp 0x2203b0bd
0x0000000000412ae4 : jmp 0x2203b407
0x0000000000413732 : jmp 0x2203c043
0x00000000004137f5 : jmp 0x2203c119
0x0000000000413b1f : jmp 0x2203c430
0x0000000000413f05 : jmp 0x2203c816
0x00000000004141d9 : jmp 0x2203caf1
0x00000000004142bd : jmp 0x2203cbce
0x00000000004144e7 : jmp 0x2203ce05
0x00000000004149ab : jmp 0x2203d2c9
0x0000000000414ca5 : jmp 0x2203d5b8
0x00000000004156e4 : jmp 0x2203dff7
0x0000000000412336 : jmp 0x37a4e1
0x000000000040252b : jmp 0x402367
0x000000000041fb69 : jmp 0x41fba7
0x00000000004047b9 : jmp 0x4202d106
0x0000000000417720 : jmp 0x49040070
0x000000000041819e : jmp 0x49040aee
0x000000000041820b : jmp 0x49040b5b
0x000000000041899c : jmp 0x490412ec
0x0000000000418a09 : jmp 0x49041359
0x0000000000414880 : jmp 0x9830aa8
0x0000000000407be1 : jmp 0xffffffffc269c446
0x0000000000421238 : jmp 0xffffffffc2cb5a42
0x0000000000414c8a : jmp 0xffffffffc2da3970
0x000000000041f725 : jmp qword ptr [rax]
0x0000000000404e97 : jmp qword ptr [rcx]
0x000000000042931b : jmp qword ptr [rdi]
0x000000000042957b : jmp qword ptr [rdx]
0x0000000000402b77 : jmp rax
0x000000000042a6a3 : jmp rbx
0x0000000000403685 : jmp rcx
0x0000000000402bb7 : jmp rdx
0x0000000000428b93 : jmp rsi
0x00000000004285b3 : jmp rsp
0x0000000000402ba0 : jne 0x402ba7 ; pop rbp ; ret
0x000000000040e2c2 : jne 0x40e2ba ; mov rax, rdx ; pop rbp ; ret
0x00000000004108c0 : jne 0x4108bb ; mov dword ptr [rdi], esi ; pop rbp ; ret
0x0000000000416f46 : jne 0x416f31 ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000041726d : jne 0x417251 ; call rax
0x0000000000418e0f : jne 0x418e04 ; pop rbp ; ret
0x0000000000418f75 : jne 0x418f51 ; call rax
0x0000000000419189 : jne 0x419165 ; call rax
0x000000000040b96a : jo 0x40b9cb ; ret
0x0000000000415059 : jo 0x41507e ; ret 0x941
0x000000000041a555 : jo 0x41a5b6 ; ret
0x000000000041bb7f : jo 0x41bbe5 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041c224 : jo 0x41c285 ; ret
0x000000000041c35e : jo 0x41c3bf ; ret
0x000000000041ea28 : jo 0x41e9eb ; sbb eax, dword ptr [rip + 0x148a3f2] ; ret 0x8948
0x000000000041f960 : jo 0x41f9c1 ; ret
0x0000000000423e53 : jo 0x423e02 ; adc cl, byte ptr [rax + 1] ; ret 0x8948
0x00000000004297f9 : jo 0x4297fb ; call qword ptr [rsi]
0x000000000041ce6a : jp 0x41ce7e ; call rax
0x000000000041e9ff : jp 0x41ea27 ; lea esi, dword ptr [rbx + 0x294879c8] ; ret 0x8948
0x00000000004243ca : lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000411a36 : lea ebp, dword ptr [rdi + rdi*8 - 1] ; inc ecx ; jmp 0x2203a359
0x0000000000412472 : lea ebp, dword ptr [rdi + rdi*8 - 1] ; inc ecx ; jmp 0x2203ad98
0x00000000004141d3 : lea ebp, dword ptr [rdi + rdi*8 - 1] ; inc ecx ; jmp 0x2203caf7
0x000000000041ea01 : lea esi, dword ptr [rbx + 0x294879c8] ; ret 0x8948
0x00000000004117a8 : lea esi, dword ptr [rdi + rdi*8 - 1] ; inc ecx ; jmp 0x2203a0d5
0x0000000000412ade : lea esi, dword ptr [rdi + rdi*8 - 1] ; inc ecx ; jmp 0x2203b40d
0x00000000004137ef : lea esi, dword ptr [rdi + rdi*8 - 1] ; inc ecx ; jmp 0x2203c11f
0x0000000000410b96 : lea esp, dword ptr [rdi + rdi*8 - 1] ; inc dword ptr [rcx + 0xf] ; xchg eax, edx ; ret 0x8041
0x0000000000423e82 : leave ; ret 0xf8ca
0x0000000000411ad2 : lock xor byte ptr [rdx + 0x21444278], ch ; ret 0x8941
0x0000000000414dbe : lodsb al, byte ptr [rsi] ; and eax, dword ptr [rbp - 0x76ba35df] ; ret 0x8141
0x0000000000428070 : lodsb al, byte ptr [rsi] ; fdivp st(5) ; call rsp
0x00000000004215e0 : lodsb al, byte ptr [rsi] ; in al, 0x34 ; sub eax, 0x14c5b7a ; ret 0x8148
0x00000000004215f4 : lodsb al, byte ptr [rsi] ; in al, 0x34 ; sub eax, 0x294c5b7a ; ret 0x8948
0x000000000041334a : lodsb al, byte ptr [rsi] ; xor al, 0x21 ; ret 0x941
0x00000000004136f7 : loop 0x41367c ; ret 0xf436
0x00000000004136ef : loop 0x4136f4 ; ret 0xc281
0x00000000004146e0 : loop 0x4146b6 ; ret 0x8e6a
0x000000000040e2fe : loope 0x40e307 ; movzx eax, cl ; pop rbp ; ret
0x0000000000410e78 : loope 0x410ea5 ; in eax, 5 ; and esp, dword ptr [rcx] ; ret 0x941
0x0000000000412c22 : loope 0x412c35 ; fstp qword ptr [rsp + rbx*8 + 0x21] ; ret 0x941
0x0000000000413347 : loope 0x41331a ; xlatb ; lodsb al, byte ptr [rsi] ; xor al, 0x21 ; ret 0x941
0x0000000000413e29 : loope 0x413e60 ; xchg dword ptr [rax], eax ; sbb byte ptr [rcx], ah ; ret 0x941
0x0000000000414dbc : loope 0x414d61 ; lodsb al, byte ptr [rsi] ; and eax, dword ptr [rbp - 0x76ba35df] ; ret 0x8141
0x000000000041913a : loope 0x419147 ; add rdx, rcx ; mov rsi, qword ptr [rdx] ; call rax
0x000000000042273c : loope 0x422761 ; ret 0x8941
0x0000000000406cc5 : loopne 0x406d37 ; add byte ptr [rax - 0x77], cl ; ret 0x8fe8
0x000000000040a8dc : loopne 0x40a92c ; add esp, 0x20 ; pop rbp ; ret
0x000000000040a8db : loopne 0x40a92d ; add esp, 0x20 ; pop rbp ; ret
0x000000000040c3bb : loopne 0x40c40b ; add esp, 0x30 ; pop rbp ; ret
0x000000000040c3ba : loopne 0x40c40c ; add esp, 0x30 ; pop rbp ; ret
0x000000000040ca1c : loopne 0x40ca6c ; add esp, 0x20 ; pop rbp ; ret
0x000000000040ca1b : loopne 0x40ca6d ; add esp, 0x20 ; pop rbp ; ret
0x000000000040d199 : loopne 0x40d1e9 ; mov edi, ecx ; call 0x4093e6
0x00000000004146c2 : loopne 0x414698 ; ret 0x8e6a
0x00000000004159ab : loopne 0x4159b2 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041602b : loopne 0x41607b ; add esp, 0x20 ; pop rbp ; ret
0x000000000041602a : loopne 0x41607c ; add esp, 0x20 ; pop rbp ; ret
0x0000000000416f47 : loopne 0x416f99 ; mov esi, eax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000041d96c : loopne 0x41d9bf ; mov edx, 0xb9bb83c3 ; call 0x49419bb3
0x0000000000421447 : loopne 0x421433 ; ret
0x0000000000421446 : loopne 0x421434 ; ret
0x0000000000421dc7 : loopne 0x421dce ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000422738 : loopne 0x422754 ; in eax, -0x4a ; loope 0x422765 ; ret 0x8941
0x0000000000422de0 : loopne 0x422de8 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000423e50 : mov ah, -0x17 ; clc ; jo 0x423e05 ; adc cl, byte ptr [rax + 1] ; ret 0x8948
0x0000000000412ab3 : mov ah, -0x77 ; ret 0xca29
0x00000000004156a3 : mov ah, -0x77 ; ret 0xf229
0x0000000000416e4e : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000427fec : mov ah, 0xa ; add byte ptr [rax], al ; jl 0x427fa9 ; std ; call rsp
0x000000000042806c : mov ah, 0xc ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; fdivp st(5) ; call rsp
0x0000000000409c87 : mov al, -0x17 ; ret
0x0000000000427ff1 : mov al, -3 ; call rsp
0x0000000000408d45 : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040666d : mov al, 0 ; call 0x402964
0x000000000040b75d : mov al, 0x10 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041053a : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000041bf88 : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000416d27 : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000423626 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040a558 : mov al, byte ptr [rbp - 9] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004235f0 : mov al, dl ; movzx eax, al ; pop rbp ; ret
0x0000000000423585 : mov al, dl ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x00000000004234ca : mov ax, dx ; movzx eax, ax ; pop rbp ; ret
0x000000000042345b : mov ax, r8w ; movzx eax, ax ; pop rbp ; ret
0x0000000000423460 : mov bh, -0x40 ; pop rbp ; ret
0x00000000004288b1 : mov bh, -1 ; jmp rsp
0x000000000042ae61 : mov bh, bh ; jmp rdx
0x0000000000428871 : mov bl, -1 ; jmp rsp
0x00000000004136c3 : mov bl, 0x21 ; ret 0xce09
0x00000000004106c1 : mov byte ptr [0x62cb90], al ; pop rbp ; ret
0x0000000000408385 : mov byte ptr [rax + 0x30], 0 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000410fd6 : mov byte ptr [rax - 0x7f], cl ; ret
0x0000000000409a64 : mov byte ptr [rax - 1], 0 ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004100a3 : mov byte ptr [rax], 0 ; pop rbp ; ret
0x0000000000404e27 : mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000410cfb : mov byte ptr [rcx - 0x7f], cl ; ret
0x0000000000411403 : mov byte ptr [rcx - 0x7f], cl ; ret 4
0x0000000000402bd3 : mov byte ptr [rip + 0x2299de], 1 ; ret
0x000000000041481d : mov ch, -0x7f ; ret 0x59c3
0x0000000000415d1e : mov ch, 0x5b ; ret
0x000000000040f132 : mov ch, 2 ; ret 0x23
0x000000000040da32 : mov dh, -0x36 ; mov dword ptr [rbp - 4], ecx ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000424b5e : mov dh, -0x38 ; mov dword ptr [rbp - 0x14], ecx ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000418d35 : mov dh, -0x39 ; pop rbp ; ret
0x0000000000405f32 : mov dh, -0x3e ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040e301 : mov dh, -0x3f ; pop rbp ; ret
0x0000000000416ac8 : mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004096a2 : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000417f1b : mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040a55e : mov dh, -0x40 ; pop rbp ; ret
0x0000000000423588 : mov dh, -0x40 ; pop rbx ; pop rbp ; ret
0x0000000000419ed7 : mov dh, 0 ; add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x00000000004120bd : mov dh, byte ptr [rbp + 0x144b483] ; ret 0xc281
0x0000000000414817 : mov dl, -0x7f ; ret 0x38f8
0x0000000000404e17 : mov dword ptr [0x62c500], eax ; pop rbp ; ret
0x000000000041069d : mov dword ptr [0x62cb88], edi ; pop rbp ; ret
0x0000000000415e44 : mov dword ptr [rax + 0x18], ecx ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041a406 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405d59 : mov dword ptr [rax + rdx*8], ecx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041a3c8 : mov dword ptr [rax], eax ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000041f95b : mov dword ptr [rax], ecx ; add rsp, 0x70 ; pop rbp ; ret
0x000000000041a284 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000041a3c7 : mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040e1b0 : mov dword ptr [rbp - 0x10], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408d68 : mov dword ptr [rbp - 0x10], edi ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000410113 : mov dword ptr [rbp - 0x10], edx ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000418e0e : mov dword ptr [rbp - 0x10], esi ; pop rbp ; ret
0x000000000040529e : mov dword ptr [rbp - 0x14], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000424b60 : mov dword ptr [rbp - 0x14], ecx ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000408ed8 : mov dword ptr [rbp - 0x18], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040a8da : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000424afa : mov dword ptr [rbp - 0x24], eax ; mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x0000000000403019 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000416e4c : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000410538 : mov dword ptr [rbp - 0x50], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000402f07 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402f35 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040da34 : mov dword ptr [rbp - 4], ecx ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040fce8 : mov dword ptr [rbp - 8], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000423b0d : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040562d : mov dword ptr [rbp - 8], eax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000418e0a : mov dword ptr [rbp - 8], edi ; mov qword ptr [rbp - 0x10], rsi ; pop rbp ; ret
0x000000000041a47e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d307 : mov dword ptr [rcx + 0x30], edx ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041739a : mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x000000000041cd25 : mov dword ptr [rdi + 0x10], esi ; pop rbp ; ret
0x000000000041081d : mov dword ptr [rdi + 0x18], 0 ; pop rbp ; ret
0x0000000000418b60 : mov dword ptr [rdi + 0x48], esi ; pop rbp ; ret
0x000000000041cd05 : mov dword ptr [rdi + 8], esi ; pop rbp ; ret
0x00000000004108c2 : mov dword ptr [rdi], esi ; pop rbp ; ret
0x0000000000418fd0 : mov dword ptr [rdx + rcx*8], eax ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041a238 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000418653 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040cb90 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004100a0 : mov eax, dword ptr [rbp - 0x10] ; mov byte ptr [rax], 0 ; pop rbp ; ret
0x000000000041a235 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000424a85 : mov eax, dword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000408d6c : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000041d0f7 : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000424b63 : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000408269 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040e80d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040a1a2 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041a27e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000416bf9 : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040ba48 : mov eax, dword ptr [rbp - 0x1c] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040c3b9 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000416f4c : mov eax, dword ptr [rbp - 0x20] ; call rax
0x0000000000421481 : mov eax, dword ptr [rbp - 0x24] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000424afd : mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x00000000004186ff : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041a3ca : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004191d3 : mov eax, dword ptr [rbp - 0x30] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041ddad : mov eax, dword ptr [rbp - 0x30] ; mov rax, qword ptr [rax] ; pop rbp ; ret
0x000000000040e8b5 : mov eax, dword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040e6cd : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041a54f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000041c0f9 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000408bbe : mov eax, dword ptr [rbp - 0x68] ; movsx edi, byte ptr [rax] ; call 0x404e28
0x0000000000409647 : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000416922 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042063c : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000422f6c : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000042313b : mov eax, dword ptr [rbp - 4] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040990f : mov eax, dword ptr [rbp - 4] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041687a : mov eax, dword ptr [rbp - 4] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040b964 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040c554 : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000405341 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041701c : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405e4f : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040dbc8 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000405443 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040fee0 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000405631 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000416add : mov eax, dword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000416afd : mov eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000416b1d : mov eax, dword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000042345d : mov eax, eax ; movzx eax, ax ; pop rbp ; ret
0x000000000042318e : mov eax, eax ; pop rbp ; ret
0x000000000041a01f : mov eax, ecx ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000408fe7 : mov eax, ecx ; add rsp, 0x40 ; pop rbp ; ret
0x000000000042327d : mov eax, ecx ; pop rbp ; ret
0x000000000041de18 : mov eax, edi ; pop rbp ; ret
0x0000000000417581 : mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004234cb : mov eax, edx ; movzx eax, ax ; pop rbp ; ret
0x000000000040e2c5 : mov eax, edx ; pop rbp ; ret
0x000000000042345c : mov eax, r8d ; movzx eax, ax ; pop rbp ; ret
0x000000000042327c : mov eax, r9d ; pop rbp ; ret
0x0000000000404892 : mov ebp, 0x2181a1ad ; ret 0x941
0x0000000000402bfb : mov ebp, esp ; call rax
0x0000000000402b61 : mov ebp, esp ; ja 0x402b6c ; pop rbp ; ret
0x0000000000410f5f : mov ecx, 0x214469b1 ; ret 0x8941
0x000000000040f12f : mov ecx, 0x2b53beb ; ret 0x23
0x0000000000420d7d : mov ecx, 0x5b2a830a ; ret
0x0000000000423e7d : mov ecx, 0x8d1c8842 ; leave ; ret 0xf8ca
0x000000000041d97e : mov ecx, 0xb9bb83c3 ; call 0x49419bc1
0x000000000040367e : mov ecx, dword ptr [rax*8 + 0x424c90] ; jmp rcx
0x000000000040539d : mov ecx, dword ptr [rax*8 + 0x424eb8] ; jmp rcx
0x000000000040550a : mov ecx, dword ptr [rax*8 + 0x424ee0] ; jmp rcx
0x0000000000419656 : mov ecx, dword ptr [rax*8 + 0x427048] ; jmp rcx
0x000000000041a612 : mov ecx, dword ptr [rax*8 + 0x4273b0] ; jmp rcx
0x000000000041a936 : mov ecx, dword ptr [rax*8 + 0x4273f8] ; jmp rcx
0x000000000042073e : mov ecx, dword ptr [rax*8 + 0x4278e0] ; jmp rcx
0x0000000000421b5e : mov ecx, dword ptr [rax*8 + 0x427cc0] ; jmp rcx
0x0000000000421ade : mov ecx, dword ptr [rax*8 + 0x427d20] ; jmp rcx
0x000000000042259a : mov ecx, dword ptr [rax*8 + 0x427e68] ; jmp rcx
0x000000000042251a : mov ecx, dword ptr [rax*8 + 0x427ec8] ; jmp rcx
0x000000000041a281 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004178e2 : mov ecx, dword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000041787f : mov ecx, dword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000416ed3 : mov ecx, dword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x00000000004184a3 : mov ecx, dword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000418570 : mov ecx, dword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000405cb5 : mov ecx, eax ; call 0x421f04
0x000000000041a01d : mov ecx, eax ; mov eax, ecx ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040e45a : mov edi, 0x48ffffff ; add esp, 0x10 ; pop rbp ; ret
0x000000000041c92f : mov edi, 0x54582f16 ; ret
0x0000000000402bf5 : mov edi, 0x62be10 ; mov rbp, rsp ; call rax
0x0000000000402b72 : mov edi, 0x62c560 ; jmp rax
0x0000000000402bb2 : mov edi, 0x62c560 ; jmp rdx
0x0000000000415b35 : mov edi, 0x63f1c760 ; ret 0xb7e6
0x000000000041226e : mov edi, 0x8945ca21 ; ret 0x8141
0x00000000004248be : mov edi, 0x8fcb99c5 ; xlatb ; ret 0x8c1b
0x0000000000428731 : mov edi, dr1 ; jmp rsp
0x00000000004108bc : mov edi, dword ptr [rbp - 8] ; mov esi, dword ptr [rbp - 0xc] ; mov dword ptr [rdi], esi ; pop rbp ; ret
0x000000000041cd21 : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x10], rsi ; pop rbp ; ret
0x0000000000418b5c : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000041cd01 : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 8], rsi ; pop rbp ; ret
0x0000000000416ad9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000416af9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000416b19 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000417883 : mov edi, dword ptr [rcx] ; call rax
0x0000000000417269 : mov edi, dword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x000000000041ce69 : mov edi, dword ptr [rdx + 0x10] ; call rax
0x0000000000418f70 : mov edi, dword ptr [rdx + rcx*8] ; mov rsi, qword ptr [rbp - 0x28] ; call rax
0x000000000040d19b : mov edi, ecx ; call 0x4093e4
0x0000000000424bf7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000424bf6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x00000000004100f8 : mov edx, 0x148b301 ; ret 0x8148
0x000000000041010c : mov edx, 0x2948b301 ; ret 0x8948
0x0000000000406262 : mov edx, 0x4269f2 ; mov esi, edx ; call 0x402549
0x000000000041c93f : mov edx, 0x54582f16 ; ret
0x0000000000415b25 : mov edx, 0x63f1c760 ; ret 0xb7e6
0x000000000041d96e : mov edx, 0xb9bb83c3 ; call 0x49419bb1
0x0000000000415d29 : mov edx, 0xc5c747 ; mov ch, 0x5b ; ret
0x0000000000407bdc : mov edx, 0xeaca4bc9 ; jmp 0xffffffffc269c44b
0x000000000040d197 : mov edx, dword ptr [rbp - 0x20] ; mov rdi, rcx ; call 0x4093e8
0x0000000000423ee2 : mov edx, dword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041ce65 : mov edx, dword ptr [rbp - 8] ; mov rdi, qword ptr [rdx + 0x10] ; call rax
0x0000000000424a89 : mov edx, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000420411 : mov esi, 0x1f02931 ; ret 0x5589
0x0000000000405a75 : mov esi, 0x302dff51 ; add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xfa81
0x00000000004086f2 : mov esi, 0x5c2e7f47 ; ret
0x000000000040980a : mov esi, 0xa10e4b07 ; sbb al, -0x47 ; ret 0x48c4
0x000000000040f57b : mov esi, 0xa32084d4 ; ret 0x10b9
0x0000000000405cb2 : mov esi, 0xc18948d1 ; call 0x421f07
0x0000000000415d19 : mov esi, 0xc5c747 ; mov ch, 0x5b ; ret
0x000000000041726c : mov esi, dword ptr [rbp - 0x20] ; call rax
0x0000000000418f74 : mov esi, dword ptr [rbp - 0x28] ; call rax
0x00000000004108bf : mov esi, dword ptr [rbp - 0xc] ; mov dword ptr [rdi], esi ; pop rbp ; ret
0x0000000000416ed7 : mov esi, dword ptr [rcx] ; call rax
0x0000000000419140 : mov esi, dword ptr [rdx] ; call rax
0x000000000040624d : mov esi, eax ; call 0x402544
0x0000000000402bb0 : mov esi, eax ; mov edi, 0x62c560 ; jmp rdx
0x0000000000416f49 : mov esi, eax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x00000000004062ee : mov esi, ecx ; call 0x402544
0x0000000000406267 : mov esi, edx ; call 0x402544
0x000000000041069c : mov qword ptr [0x62cb88], rdi ; pop rbp ; ret
0x0000000000405d58 : mov qword ptr [rax + rdx*8], rcx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041f95a : mov qword ptr [rax], rcx ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000408d67 : mov qword ptr [rbp - 0x10], rdi ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000410112 : mov qword ptr [rbp - 0x10], rdx ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000418e0d : mov qword ptr [rbp - 0x10], rsi ; pop rbp ; ret
0x000000000040562c : mov qword ptr [rbp - 8], rax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000418e09 : mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; pop rbp ; ret
0x000000000041a47d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d306 : mov qword ptr [rcx + 0x30], rdx ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041cd24 : mov qword ptr [rdi + 0x10], rsi ; pop rbp ; ret
0x0000000000418b5f : mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000041cd04 : mov qword ptr [rdi + 8], rsi ; pop rbp ; ret
0x0000000000418fcf : mov qword ptr [rdx + rcx*8], rax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000412ab2 : mov r12b, -0x77 ; ret 0xca29
0x00000000004156a2 : mov r12b, -0x77 ; ret 0xf229
0x0000000000416e4d : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000410539 : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000041ddb0 : mov rax, qword ptr [rax] ; pop rbp ; ret
0x0000000000418652 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040cb8f : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041009f : mov rax, qword ptr [rbp - 0x10] ; mov byte ptr [rax], 0 ; pop rbp ; ret
0x000000000041a234 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000424a84 : mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000408d6b : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000408268 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040e80c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040a1a1 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000416bf8 : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040c3b8 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000416f4b : mov rax, qword ptr [rbp - 0x20] ; call rax
0x00000000004186fe : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004191d2 : mov rax, qword ptr [rbp - 0x30] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041ddac : mov rax, qword ptr [rbp - 0x30] ; mov rax, qword ptr [rax] ; pop rbp ; ret
0x000000000040e8b4 : mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040e6cc : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041a54e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000041c0f8 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000408bbd : mov rax, qword ptr [rbp - 0x68] ; movsx edi, byte ptr [rax] ; call 0x404e29
0x0000000000405340 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041701b : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405e4e : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040dbc7 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000405442 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040fedf : mov rax, qword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000405630 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000416adc : mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000416afc : mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000416b1c : mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000042318d : mov rax, r8 ; pop rbp ; ret
0x0000000000408fe6 : mov rax, rcx ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041de17 : mov rax, rdi ; pop rbp ; ret
0x0000000000417580 : mov rax, rdx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040e2c4 : mov rax, rdx ; pop rbp ; ret
0x0000000000402bfa : mov rbp, rsp ; call rax
0x0000000000402b60 : mov rbp, rsp ; ja 0x402b6d ; pop rbp ; ret
0x000000000040367d : mov rcx, qword ptr [rax*8 + 0x424c90] ; jmp rcx
0x000000000040539c : mov rcx, qword ptr [rax*8 + 0x424eb8] ; jmp rcx
0x0000000000405509 : mov rcx, qword ptr [rax*8 + 0x424ee0] ; jmp rcx
0x0000000000419655 : mov rcx, qword ptr [rax*8 + 0x427048] ; jmp rcx
0x000000000041a611 : mov rcx, qword ptr [rax*8 + 0x4273b0] ; jmp rcx
0x000000000041a935 : mov rcx, qword ptr [rax*8 + 0x4273f8] ; jmp rcx
0x000000000042073d : mov rcx, qword ptr [rax*8 + 0x4278e0] ; jmp rcx
0x0000000000421b5d : mov rcx, qword ptr [rax*8 + 0x427cc0] ; jmp rcx
0x0000000000421add : mov rcx, qword ptr [rax*8 + 0x427d20] ; jmp rcx
0x0000000000422599 : mov rcx, qword ptr [rax*8 + 0x427e68] ; jmp rcx
0x0000000000422519 : mov rcx, qword ptr [rax*8 + 0x427ec8] ; jmp rcx
0x00000000004178e1 : mov rcx, qword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000041787e : mov rcx, qword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000416ed2 : mov rcx, qword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x00000000004184a2 : mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000041856f : mov rcx, qword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000405cb4 : mov rcx, rax ; call 0x421f05
0x000000000041cd20 : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x10], rsi ; pop rbp ; ret
0x0000000000418b5b : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000041cd00 : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 8], rsi ; pop rbp ; ret
0x0000000000416ad8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000416af8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000416b18 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000417882 : mov rdi, qword ptr [rcx] ; call rax
0x0000000000417268 : mov rdi, qword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x000000000041ce68 : mov rdi, qword ptr [rdx + 0x10] ; call rax
0x0000000000418f6f : mov rdi, qword ptr [rdx + rcx*8] ; mov rsi, qword ptr [rbp - 0x28] ; call rax
0x000000000040d19a : mov rdi, rcx ; call 0x4093e5
0x000000000040d196 : mov rdx, qword ptr [rbp - 0x20] ; mov rdi, rcx ; call 0x4093e9
0x0000000000423ee1 : mov rdx, qword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041ce64 : mov rdx, qword ptr [rbp - 8] ; mov rdi, qword ptr [rdx + 0x10] ; call rax
0x0000000000424a88 : mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000041726b : mov rsi, qword ptr [rbp - 0x20] ; call rax
0x0000000000418f73 : mov rsi, qword ptr [rbp - 0x28] ; call rax
0x0000000000416ed6 : mov rsi, qword ptr [rcx] ; call rax
0x000000000041913f : mov rsi, qword ptr [rdx] ; call rax
0x000000000040624c : mov rsi, rax ; call 0x402545
0x0000000000402baf : mov rsi, rax ; mov edi, 0x62c560 ; jmp rdx
0x0000000000416f48 : mov rsi, rax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x00000000004062ed : mov rsi, rcx ; call 0x402545
0x0000000000428670 : mov word ptr [rdi - 1], es ; jmp rsp
0x0000000000406214 : movabs al, byte ptr [0x20e8ce8948fffffe] ; ret
0x0000000000419654 : movabs al, byte ptr [0x427048c50c8b48] ; jmp rcx
0x0000000000414078 : movabs al, byte ptr [0x81e6db99e5c2819d] ; ret 0x97e4
0x0000000000414c08 : movabs al, byte ptr [0x944f30941d02145] ; ret
0x00000000004116e1 : movabs byte ptr [0x8945d72144e46872], al ; ret
0x000000000040d006 : movabs byte ptr [0x89485b6c4763c69d], al ; ret 0x148
0x0000000000404e8e : movabs byte ptr [0xfffffff7814aeb39], al ; jmp qword ptr [rcx]
0x000000000040d2c2 : movabs dword ptr [0x2948f22948b42015], eax ; ret 0xb848
0x0000000000412fed : movabs dword ptr [0x8945d72144836e9c], eax ; ret
0x0000000000421ec0 : movabs dword ptr [0x941c90941f0213f], eax ; ret 0x3145
0x000000000041270f : movabs dword ptr [0x945f90941d02145], eax ; ret
0x0000000000412878 : movabs eax, dword ptr [0x89f929c189d4bc1c] ; ret 0xea81
0x0000000000424b9f : movaps xmm0, xmm1 ; pop rbp ; ret
0x0000000000428a6c : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add al, dl ; movsb byte ptr [rdi], byte ptr [rsi] ; std ; jmp rdx
0x0000000000428a71 : movsb byte ptr [rdi], byte ptr [rsi] ; std ; jmp rdx
0x0000000000408bc1 : movsx edi, byte ptr [rax] ; call 0x404e25
0x0000000000405cb1 : movsx edx, cl ; mov rcx, rax ; call 0x421f08
0x000000000040ec68 : movsxd rax, dword ptr [rbp - 0x24] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000416ac7 : movzx eax, al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004096a1 : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000417f1a : movzx eax, al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040a55d : movzx eax, al ; pop rbp ; ret
0x0000000000423587 : movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000042345f : movzx eax, ax ; pop rbp ; ret
0x0000000000418d34 : movzx eax, bh ; pop rbp ; ret
0x0000000000404e2a : movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x000000000040e300 : movzx eax, cl ; pop rbp ; ret
0x0000000000418d33 : movzx eax, dil ; pop rbp ; ret
0x0000000000405f31 : movzx eax, dl ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040a559 : mul dword ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000040a55a : mul dword ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000042ab40 : nop ; jle 0x42ab45 ; call qword ptr [rsi]
0x0000000000402220 : nop ; ret
0x0000000000401f20 : nop ; ret 0x62
0x0000000000428cb0 : nop ; sar ch, cl ; jmp rsp
0x0000000000424c18 : nop dword ptr [rax + rax] ; ret
0x000000000041ac9d : or al, 0x18 ; ret 0x6451
0x00000000004157c6 : or al, 0x48 ; add esp, 0x30 ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000042251b : or al, 0xffffffffffffffc5 ; enter 0x427e, 0 ; jmp rcx
0x0000000000405d5a : or al, 0xffffffffffffffd0 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000427fed : or al, byte ptr [rax] ; add byte ptr [rax + rsi*4 - 3], bh ; call rsp
0x000000000040974e : or byte ptr [rax - 0x47], cl ; ret 0x5662
0x000000000041ce63 : or byte ptr [rax - 0x75], cl ; push rbp ; clc ; mov rdi, qword ptr [rdx + 0x10] ; call rax
0x000000000041d1cf : or byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000409ccd : or byte ptr [rcx + 0x2df9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x000000000040424f : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x00000000004227db : or dword ptr [rsp + rax + 0x21], esp ; ret 0xd709
0x00000000004136c0 : or eax, 0x21b3895d ; ret 0xce09
0x000000000041c2e1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042318b : or eax, edi ; mov rax, r8 ; pop rbp ; ret
0x000000000042336f : or eax, edi ; pop rbp ; ret
0x0000000000412c23 : or ebx, ebp ; pop rsp ; fsub qword ptr [rcx] ; ret 0x941
0x000000000042327a : or ecx, edx ; mov eax, r9d ; pop rbp ; ret
0x000000000042318a : or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x0000000000423279 : or r9d, edx ; mov eax, r9d ; pop rbp ; ret
0x000000000042336e : or rax, rdi ; pop rbp ; ret
0x000000000041e438 : out -0x36, al ; add dword ptr [rax + 0x29], ecx ; ret 0x8948
0x000000000041407f : out -0x7f, al ; ret 0x97e4
0x000000000040e326 : out 0, al ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000416deb : out 0, eax ; add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x000000000041f4d7 : out 0x20, al ; ret 0x8841
0x0000000000418d31 : out 1, eax ; movzx eax, dil ; pop rbp ; ret
0x0000000000413528 : out dx, al ; adc byte ptr es:[rax], ch ; ret
0x0000000000416dd9 : outsb dx, byte ptr [rsi] ; ret 0x280f
0x000000000041284b : outsd dx, dword ptr [rsi] ; rol dword ptr [rcx - 0xa], 1 ; jmp qword ptr [rcx]
0x000000000040611a : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000424c0c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041bb81 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040611c : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000424c0e : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040611e : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000424c10 : pop r14 ; pop r15 ; ret
0x00000000004157cc : pop r14 ; pop rbp ; ret
0x0000000000406120 : pop r15 ; pop rbp ; ret
0x0000000000424c12 : pop r15 ; ret
0x000000000041c932 : pop rax ; push rsp ; ret
0x0000000000402178 : pop rax ; ret
0x0000000000401e78 : pop rax ; ret 0x62
0x0000000000410fd5 : pop rbp ; mov byte ptr [rax - 0x7f], cl ; ret
0x0000000000410cfa : pop rbp ; mov byte ptr [rcx - 0x7f], cl ; ret
0x0000000000402bd2 : pop rbp ; mov byte ptr [rip + 0x2299de], 1 ; ret
0x0000000000402b71 : pop rbp ; mov edi, 0x62c560 ; jmp rax
0x0000000000402bae : pop rbp ; mov rsi, rax ; mov edi, 0x62c560 ; jmp rdx
0x0000000000424c0b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040611d : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000424c0f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000402b65 : pop rbp ; ret
0x000000000041bb80 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000410aba : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004157cb : pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040526b : pop rbx ; pop rbp ; ret
0x0000000000415d1f : pop rbx ; ret
0x0000000000406121 : pop rdi ; pop rbp ; ret
0x0000000000424c13 : pop rdi ; ret
0x00000000004100f7 : pop rdx ; mov edx, 0x148b301 ; ret 0x8148
0x000000000041010b : pop rdx ; mov edx, 0x2948b301 ; ret 0x8948
0x000000000040611f : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000424c11 : pop rsi ; pop r15 ; ret
0x00000000004157cd : pop rsi ; pop rbp ; ret
0x000000000040e55e : pop rsi ; shl dword ptr [rsi + 0xf], 1 ; ret 0x860f
0x0000000000412c25 : pop rsp ; fsub qword ptr [rcx] ; ret 0x941
0x0000000000428730 : pop rsp ; mov edi, dr1 ; jmp rsp
0x000000000040611b : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000424c0d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041bb82 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004086f6 : pop rsp ; ret
0x0000000000416df0 : pop rsp ; ret 0xf66
0x0000000000412335 : popfq ; jmp 0x37a4e2
0x000000000041190a : push -0x3e000001 ; jmp 0x2203a230
0x0000000000412799 : push -0x3e000001 ; jmp 0x2203b0c2
0x00000000004144e2 : push -0x3e000001 ; jmp 0x2203ce0a
0x00000000004149a6 : push -0x3e000001 ; jmp 0x2203d2ce
0x0000000000412778 : push -0x76000001 ; ret 0xca29
0x0000000000413083 : push -0x7e000001 ; ret 0x51e
0x0000000000406cc6 : push 0x42 ; add byte ptr [rax - 0x77], cl ; ret 0x8fe8
0x000000000042802b : push qword ptr [rbx + rcx - 0x2b640000] ; std ; call rsp
0x0000000000427feb : push qword ptr [rdx + rcx - 0x4f840000] ; std ; call rsp
0x000000000042806b : push qword ptr [rsp + rcx - 0x21540000] ; std ; call rsp
0x000000000042a440 : push rax ; and bh, bh ; jmp qword ptr [rdx]
0x0000000000405449 : push rax ; pop rbp ; ret
0x000000000041eed9 : push rax ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000402160 : push rax ; ret
0x0000000000401e60 : push rax ; ret 0x62
0x0000000000412849 : push rax ; sbb al, 0x6f ; rol dword ptr [rcx - 0xa], 1 ; jmp qword ptr [rcx]
0x0000000000415b13 : push rbp ; call 0x1d03dc65
0x0000000000415d69 : push rbp ; call 0x1d03debb
0x0000000000415e13 : push rbp ; call 0x1d03df65
0x0000000000421442 : push rbp ; call 0xffffffffe08f9f97
0x0000000000423ee3 : push rbp ; clc ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041ce66 : push rbp ; clc ; mov rdi, qword ptr [rdx + 0x10] ; call rax
0x0000000000424a8a : push rbp ; clc ; pop rbp ; ret
0x000000000041cb3a : push rbp ; fmul dword ptr [rax - 0x42] ; ret
0x0000000000408fb6 : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x80
0x000000000040d198 : push rbp ; loopne 0x40d1ea ; mov edi, ecx ; call 0x4093e7
0x0000000000411402 : push rbp ; mov byte ptr [rcx - 0x7f], cl ; ret 4
0x0000000000402bf4 : push rbp ; mov edi, 0x62be10 ; mov rbp, rsp ; call rax
0x00000000004215ff : push rbp ; ror byte ptr [rax - 0x77], 1 ; ret 0x8b4c
0x0000000000410395 : push rbp ; ror byte ptr [rax - 0x77], 1 ; ret 0xa1e8
0x0000000000408bc5 : push rdi ; ret 0xffff
0x000000000041009e : push rsi ; mov rax, qword ptr [rbp - 0x10] ; mov byte ptr [rax], 0 ; pop rbp ; ret
0x000000000040c4e2 : push rsi ; test byte ptr [rbx + rcx*4 - 0x357623b3], 0x21 ; ret 0xc131
0x000000000042ab1c : push rsp ; and dword ptr [rax], eax ; add al, dl ; jge 0x42ab29 ; jmp rax
0x000000000041c933 : push rsp ; ret
0x000000000040b800 : pushfq ; add dword ptr [r8], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000414c82 : rcr ebp, -0x14 ; cwde ; ret 0xc101
0x0000000000400648 : ret
0x0000000000404c06 : ret 0
0x000000000040c1cb : ret 0x10
0x000000000040f580 : ret 0x10b9
0x000000000040b4d8 : ret 0x12e8
0x0000000000407288 : ret 0x148
0x000000000041e134 : ret 0x14c
0x000000000041ff4d : ret 0x1a8
0x0000000000407100 : ret 0x1ae8
0x000000000041bd1e : ret 0x1b2
0x0000000000415b17 : ret 0x1c
0x000000000040c0e9 : ret 0x1e8
0x000000000042056a : ret 0x1efb
0x0000000000410d71 : ret 0x2145
0x0000000000415c9c : ret 0x2148
0x000000000041e2b2 : ret 0x2149
0x0000000000415ca9 : ret 0x21e8
0x0000000000402932 : ret 0x2299
0x0000000000402732 : ret 0x229a
0x0000000000402532 : ret 0x229b
0x000000000040f134 : ret 0x23
0x00000000004139ed : ret 0x25b3
0x0000000000416dda : ret 0x280f
0x000000000041111b : ret 0x2944
0x0000000000406708 : ret 0x2948
0x000000000041b0a9 : ret 0x294c
0x000000000041b0c5 : ret 0x294d
0x00000000004165cb : ret 0x3040
0x0000000000410c74 : ret 0x3145
0x000000000041e54a : ret 0x314c
0x00000000004136ff : ret 0x380c
0x0000000000414819 : ret 0x38f8
0x0000000000407ed1 : ret 0x3948
0x00000000004167b1 : ret 0x3b4
0x0000000000415e1e : ret 0x40
0x000000000041e83c : ret 0x418a
0x0000000000427440 : ret 0x41ad
0x000000000040bda9 : ret 0x41e8
0x0000000000410100 : ret 0x4240
0x0000000000403100 : ret 0x4265
0x000000000041ffd4 : ret 0x4589
0x000000000041ff4a : ret 0x458a
0x0000000000409811 : ret 0x48c4
0x0000000000415d82 : ret 0x48e8
0x000000000041d975 : ret 0x48ff
0x000000000041e84a : ret 0x498a
0x00000000004139f3 : ret 0x4b60
0x0000000000403579 : ret 0x4be1
0x0000000000414806 : ret 0x4d8b
0x00000000004141ac : ret 0x50b
0x0000000000413088 : ret 0x51e
0x0000000000409af6 : ret 0x5588
0x0000000000405809 : ret 0x5589
0x0000000000409751 : ret 0x5662
0x000000000041481f : ret 0x59c3
0x000000000040e25d : ret 0x5de8
0x0000000000401d71 : ret 0x62
0x000000000041ac9f : ret 0x6451
0x00000000004152f8 : ret 0x6552
0x0000000000408a55 : ret 0x65e8
0x000000000041554c : ret 0x683f
0x0000000000409881 : ret 0x69e8
0x0000000000406f0c : ret 0x6ee8
0x0000000000407e07 : ret 0x73e8
0x000000000040c270 : ret 0x7ae8
0x00000000004141a6 : ret 0x7cf8
0x0000000000408fba : ret 0x80
0x0000000000410b9e : ret 0x8041
0x000000000041f6d0 : ret 0x8139
0x000000000040379c : ret 0x8141
0x0000000000403a22 : ret 0x8148
0x000000000041e52d : ret 0x8149
0x0000000000405f33 : ret 0x8348
0x0000000000405f28 : ret 0x840
0x000000000041ff37 : ret 0x840f
0x000000000040e563 : ret 0x860f
0x000000000041c844 : ret 0x86e8
0x000000000040cb09 : ret 0x8840
0x000000000041f4d9 : ret 0x8841
0x00000000004206f9 : ret 0x8844
0x0000000000410dc2 : ret 0x8941
0x00000000004077e5 : ret 0x8948
0x000000000041b0c8 : ret 0x8949
0x0000000000410a77 : ret 0x894c
0x00000000004234c9 : ret 0x8966
0x000000000041b25c : ret 0x89a5
0x000000000040c8be : ret 0x8a44
0x00000000004064a4 : ret 0x8b48
0x00000000004109a6 : ret 0x8b4c
0x00000000004248c4 : ret 0x8c1b
0x000000000040f186 : ret 0x8d0f
0x0000000000414c8e : ret 0x8d89
0x00000000004146c4 : ret 0x8e6a
0x000000000040ee1c : ret 0x8ee8
0x0000000000406ccb : ret 0x8fe8
0x0000000000404897 : ret 0x941
0x000000000041ed54 : ret 0x948
0x0000000000406560 : ret 0x9588
0x0000000000410d36 : ret 0x9589
0x000000000041553e : ret 0x9676
0x0000000000414081 : ret 0x97e4
0x000000000041407b : ret 0x99e5
0x000000000040c052 : ret 0x9c
0x000000000041b0dd : ret 0x9de8
0x0000000000410399 : ret 0xa1e8
0x000000000040edd8 : ret 0xa2e8
0x000000000041ef32 : ret 0xa8e8
0x0000000000403c64 : ret 0xb0
0x0000000000415b2a : ret 0xb7e6
0x00000000004196c3 : ret 0xb7e8
0x00000000004077d8 : ret 0xb848
0x0000000000424609 : ret 0xb849
0x0000000000405bc0 : ret 0xb948
0x000000000040c2b1 : ret 0xbd12
0x0000000000415726 : ret 0xbe3e
0x0000000000415a80 : ret 0xbe48
0x0000000000414ed0 : ret 0xbff4
0x0000000000414c86 : ret 0xc101
0x000000000040c461 : ret 0xc131
0x0000000000402b95 : ret 0xc148
0x00000000004120c3 : ret 0xc281
0x0000000000407afd : ret 0xc2f6
0x000000000040e1f1 : ret 0xc9e8
0x00000000004095a8 : ret 0xca21
0x000000000040962c : ret 0xca29
0x00000000004136c5 : ret 0xce09
0x0000000000412b88 : ret 0xce81
0x00000000004131b1 : ret 0xce89
0x00000000004069d6 : ret 0xcf01
0x000000000041f727 : ret 0xd088
0x000000000041c5b3 : ret 0xd284
0x0000000000415552 : ret 0xd2bb
0x000000000040c136 : ret 0xd583
0x000000000041111e : ret 0xd601
0x0000000000421da5 : ret 0xd709
0x0000000000414813 : ret 0xdae3
0x0000000000410ce5 : ret 0xdc06
0x0000000000410fc8 : ret 0xde81
0x0000000000404258 : ret 0xe280
0x0000000000411f70 : ret 0xe59
0x000000000040b1b3 : ret 0xe606
0x0000000000414eca : ret 0xe6e0
0x000000000040e84a : ret 0xe8
0x00000000004118cb : ret 0xea81
0x0000000000405383 : ret 0xea83
0x0000000000403706 : ret 0xedb0
0x000000000041b96c : ret 0xee8
0x000000000040cb1e : ret 0xf180
0x0000000000411122 : ret 0xf229
0x0000000000405f0c : ret 0xf280
0x00000000004084ed : ret 0xf281
0x000000000040c6a2 : ret 0xf41
0x00000000004136f9 : ret 0xf436
0x0000000000416df1 : ret 0xf66
0x0000000000423e83 : ret 0xf8ca
0x0000000000410cbf : ret 0xfa29
0x00000000004234c4 : ret 0xfa31
0x000000000040421b : ret 0xfa81
0x0000000000415746 : ret 0xfdaf
0x00000000004139d2 : ret 0xfe09
0x00000000004181b0 : ret 0xff3
0x000000000040e48a : ret 0xff45
0x0000000000404dda : ret 0xffd7
0x0000000000406fa8 : ret 0xffe0
0x000000000040f250 : ret 0xfffe
0x0000000000406251 : ret 0xffff
0x0000000000400d80 : ret 1
0x00000000004005e8 : ret 2
0x0000000000411406 : ret 4
0x000000000040e354 : ret 8
0x0000000000418f72 : retf -0x74b8 ; jne 0x418f54 ; call rax
0x0000000000419186 : retf -0x74b8 ; jne 0x419168 ; call rax
0x00000000004093d8 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000423573 : rol byte ptr [rbp + 9], 1 ; ret
0x000000000041a3c6 : rol byte ptr [rcx + rcx*4], 1 ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040fcb6 : rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040e2fc : rol dword ptr [rax - 0x49f0fe1f], -0x3f ; pop rbp ; ret
0x000000000042327b : rol dword ptr [rcx + rcx*4 - 0x38], 1 ; pop rbp ; ret
0x000000000041284c : rol dword ptr [rcx - 0xa], 1 ; jmp qword ptr [rcx]
0x0000000000428b90 : ror al, -3 ; jmp rsi
0x000000000040b335 : ror byte ptr [r15], -0x6e ; ret 0xe280
0x000000000040b331 : ror byte ptr [r8 + 0x3b], 1 ; ror byte ptr [r15], -0x6e ; ret 0xe280
0x0000000000415d65 : ror byte ptr [r8 - 0x75], 1 ; push rbp ; call 0x1d03debf
0x0000000000420d60 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x00000000004166e1 : ror byte ptr [r8 - 0x77], 1 ; ret 0x2948
0x0000000000416682 : ror byte ptr [r8 - 0x77], 1 ; ret 0x8148
0x000000000041a550 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x41a5bb ; ret
0x000000000040e6ce : ror byte ptr [r8 - 0x7d], -0x3c ; pop rbp ; ret
0x000000000042336a : ror byte ptr [rax + 0x31], 1 ; xlatb ; or rax, rdi ; pop rbp ; ret
0x000000000040b332 : ror byte ptr [rax + 0x3b], 1 ; ror byte ptr [r15], -0x6e ; ret 0xe280
0x0000000000402b9c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x402bab ; pop rbp ; ret
0x0000000000415d66 : ror byte ptr [rax - 0x75], 1 ; push rbp ; call 0x1d03debe
0x0000000000408fe5 : ror byte ptr [rax - 0x77], -0x38 ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000420d61 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x00000000004166e2 : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x000000000041b0a6 : ror byte ptr [rax - 0x77], 1 ; ret 0x294c
0x0000000000416683 : ror byte ptr [rax - 0x77], 1 ; ret 0x8148
0x0000000000421600 : ror byte ptr [rax - 0x77], 1 ; ret 0x8b4c
0x0000000000410396 : ror byte ptr [rax - 0x77], 1 ; ret 0xa1e8
0x000000000041a551 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x41a5ba ; ret
0x000000000040e6cf : ror byte ptr [rax - 0x7d], -0x3c ; pop rbp ; ret
0x0000000000417f1c : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x00000000004072fb : ror byte ptr [rax - 0x7f], -0x3c ; and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000408d41 : ror byte ptr [rax - 0x7f], -0x3c ; mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041e131 : ror byte ptr [rcx + 0x29], cl ; ret 0x14c
0x000000000041e11c : ror byte ptr [rcx + 0x29], cl ; ret 0x294c
0x000000000040b336 : ror byte ptr [rdi], -0x6e ; ret 0xe280
0x00000000004234cc : ror byte ptr [rdi], 1 ; mov bh, -0x40 ; pop rbp ; ret
0x00000000004235f1 : ror byte ptr [rdi], 1 ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000423586 : ror byte ptr [rdi], 1 ; mov dh, -0x40 ; pop rbx ; pop rbp ; ret
0x000000000041cb4b : ror dword ptr [rax - 0x46], 1 ; ret
0x0000000000405cb3 : ror dword ptr [rax - 0x77], 1 ; shr eax, 0x44 ; ret 1
0x000000000041a01e : ror dword ptr [rcx - 0x3b7cb738], 0x30 ; pop rbp ; ret
0x00000000004113bc : ror dword ptr [rcx - 0x7f], cl ; ret
0x0000000000424b9a : sal dl, 1 ; addps xmm1, xmm2 ; movaps xmm0, xmm1 ; pop rbp ; ret
0x0000000000408e66 : salc ; add byte ptr [r8], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406268 : salc ; call 0x402543
0x000000000042ab20 : sar byte ptr [rbp - 1], 1 ; jmp rax
0x0000000000428cb1 : sar ch, cl ; jmp rsp
0x00000000004299f9 : sar dh, 1 ; call qword ptr [rdx]
0x0000000000402b9e : sar eax, 1 ; jne 0x402ba9 ; pop rbp ; ret
0x0000000000402b9d : sar rax, 1 ; jne 0x402baa ; pop rbp ; ret
0x000000000040980f : sbb al, -0x47 ; ret 0x48c4
0x0000000000423e80 : sbb al, -0x73 ; leave ; ret 0xf8ca
0x00000000004137f6 : sbb al, -0x77 ; ret 0xca21
0x0000000000428ac8 : sbb al, 0 ; add byte ptr [rax], al ; add al, 1 ; add byte ptr [rax], al ; push rax ; ret
0x0000000000428ae8 : sbb al, 0 ; add byte ptr [rax], al ; and al, 1 ; add byte ptr [rax], al ; ret
0x0000000000428aa8 : sbb al, 0 ; add byte ptr [rax], al ; in al, 0 ; add byte ptr [rax], al ; push rax ; ret
0x000000000041284a : sbb al, 0x6f ; rol dword ptr [rcx - 0xa], 1 ; jmp qword ptr [rcx]
0x000000000042a1c1 : sbb bh, bh ; jmp rdx
0x0000000000415b10 : sbb byte ptr [rax - 0x75], cl ; push rbp ; call 0x1d03dc68
0x0000000000415b0f : sbb byte ptr [rax - 0x75], cl ; push rbp ; call 0x1d03dc69
0x0000000000413e2d : sbb byte ptr [rcx], ah ; ret 0x941
0x000000000041ea2a : sbb eax, dword ptr [rip + 0x148a3f2] ; ret 0x8948
0x00000000004175a4 : sete al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004175a6 : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000416e0f : shl dword ptr [rsi + 0xf], 0x5c ; ret 0xf66
0x000000000040e55f : shl dword ptr [rsi + 0xf], 1 ; ret 0x860f
0x000000000041fb6f : shl dword ptr [rsi], -0x6a ; ret
0x0000000000419139 : shl ecx, 3 ; add rdx, rcx ; mov rsi, qword ptr [rdx] ; call rax
0x0000000000405cb6 : shr eax, 0x44 ; ret 1
0x0000000000409ccf : stc ; sub eax, 0xf000000 ; xchg eax, esp ; ret 0x9588
0x0000000000428ad2 : std ; call qword ptr [rax]
0x0000000000427ff2 : std ; call rsp
0x0000000000428ab2 : std ; jmp qword ptr [rax]
0x0000000000428e5a : std ; jmp qword ptr [rcx]
0x0000000000428a72 : std ; jmp rdx
0x0000000000428b92 : std ; jmp rsi
0x0000000000428cb2 : std ; jmp rsp
0x000000000042802a : std ; push qword ptr [rbx + rcx - 0x2b640000] ; std ; call rsp
0x0000000000427fea : std ; push qword ptr [rdx + rcx - 0x4f840000] ; std ; call rsp
0x000000000042806a : std ; push qword ptr [rsp + rcx - 0x21540000] ; std ; call rsp
0x0000000000423628 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042886d : sub al, 0 ; add ah, cl ; mov bl, -1 ; jmp rsp
0x0000000000410ab9 : sub byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000429698 : sub byte ptr [rbx - 2], ch ; call qword ptr [rax]
0x00000000004121db : sub byte ptr [rcx - 0xa], al ; jmp qword ptr [rcx]
0x0000000000424ba0 : sub cl, al ; pop rbp ; ret
0x000000000040c04c : sub dh, -1 ; dec dword ptr [rax - 0x7f] ; ret 0x9c
0x0000000000429139 : sub dh, bh ; jmp rcx
0x00000000004287ad : sub dword ptr [rax], eax ; add byte ptr [rsp + rdx*4 - 1], ch ; jmp rsp
0x0000000000420d7f : sub dword ptr [rdx], 0x5b ; ret
0x00000000004215e3 : sub eax, 0x14c5b7a ; ret 0x8148
0x00000000004215f7 : sub eax, 0x294c5b7a ; ret 0x8948
0x0000000000409cd0 : sub eax, 0xf000000 ; xchg eax, esp ; ret 0x9588
0x0000000000424c71 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000424c70 : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000413ebc : test al, -0x77 ; ret 0xf229
0x0000000000412373 : test al, -0x77 ; ret 0xfa29
0x00000000004227da : test al, 9 ; add al, 0x21 ; ret 0xd709
0x0000000000424c1a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040c4e3 : test byte ptr [rbx + rcx*4 - 0x357623b3], 0x21 ; ret 0xc131
0x0000000000422d03 : test dword ptr [rip - 0x18000000], esi ; ret
0x0000000000413214 : xchg byte ptr [rcx], ah ; ret 0x941
0x0000000000413e2b : xchg dword ptr [rax], eax ; sbb byte ptr [rcx], ah ; ret 0x941
0x0000000000413082 : xchg eax, ebp ; push -0x7e000001 ; ret 0x51e
0x0000000000409f86 : xchg eax, ebp ; ret 0x5588
0x000000000040cb08 : xchg eax, ebp ; ret 0x8840
0x0000000000409dee : xchg eax, ebp ; ret 0x9588
0x0000000000404257 : xchg eax, ebp ; ret 0xe280
0x0000000000410b9d : xchg eax, edx ; ret 0x8041
0x000000000040b327 : xchg eax, edx ; ret 0xe280
0x000000000041fb65 : xchg eax, esi ; ret
0x000000000041fb7b : xchg eax, esi ; ret 0xe280
0x000000000042ae5c : xchg eax, esp ; and al, 0 ; add byte ptr [rax], ah ; mov bh, bh ; jmp rdx
0x0000000000409cd5 : xchg eax, esp ; ret 0x9588
0x000000000041c5b2 : xchg eax, esp ; ret 0xd284
0x000000000040e2fb : xchg eax, esp ; rol dword ptr [rax - 0x49f0fe1f], -0x3f ; pop rbp ; ret
0x00000000004175a5 : xchg eax, esp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000413349 : xlatb ; lodsb al, byte ptr [rsi] ; xor al, 0x21 ; ret 0x941
0x0000000000423189 : xlatb ; or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x000000000042336d : xlatb ; or rax, rdi ; pop rbp ; ret
0x00000000004248c3 : xlatb ; ret 0x8c1b
0x000000000041334b : xor al, 0x21 ; ret 0x941
0x0000000000406cc3 : xor al, 0x25 ; loopne 0x406d39 ; add byte ptr [rax - 0x77], cl ; ret 0x8fe8
0x0000000000408387 : xor byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004157ca : xor byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x00000000004246fe : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000411ad3 : xor byte ptr [rdx + 0x21444278], ch ; ret 0x8941
0x0000000000413211 : xor eax, 0x218684ed ; ret 0x941
0x000000000041c077 : xor eax, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x0000000000422d04 : xor eax, 0xe8000000 ; ret
0x000000000041a3c5 : xor eax, edx ; mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000423188 : xor edi, edx ; or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x000000000042336c : xor edi, edx ; or rax, rdi ; pop rbp ; ret
0x0000000000429179 : xor esi, edi ; call rdx
0x000000000042336b : xor rdi, rdx ; or rax, rdi ; pop rbp ; ret
