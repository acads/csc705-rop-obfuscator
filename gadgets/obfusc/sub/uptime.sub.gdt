0x0000000000405c78 : adc al, -0x7f ; ret 0x8924
0x000000000040267f : adc byte ptr [rbp - 8], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040c534 : adc byte ptr [rdx - 1], ah ; jmp rax
0x00000000004029a7 : adc eax, 0x48000000 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000408769 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004091cb : add al, 0 ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; pop rdx ; ret 0x40
0x0000000000402466 : add al, bpl ; ret
0x00000000004093a7 : add al, byte ptr [rax] ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; stc ; ret 0x40
0x0000000000402467 : add al, ch ; ret
0x000000000040b3ef : add bl, dh ; ret
0x00000000004092ae : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; lodsd eax, dword ptr [rsi] ; ret 0x40
0x00000000004091cd : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; pop rdx ; ret 0x40
0x00000000004094e6 : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; push rbp ; ret
0x00000000004023e9 : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x00000000004093a9 : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; stc ; ret 0x40
0x000000000040675d : add byte ptr [rax - 0x75], cl ; call 0x4902f0b5
0x0000000000405520 : add byte ptr [rax - 0x75], cl ; jne 0x4054cc ; call 0x4017c7
0x0000000000405595 : add byte ptr [rax - 0x75], cl ; jne 0x405541 ; call 0x4017c7
0x00000000004097ad : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x00000000004024a0 : add byte ptr [rax - 0x77], cl ; ret 0x47e8
0x0000000000402438 : add byte ptr [rax - 0x77], cl ; ret 0xafe8
0x000000000040c532 : add byte ptr [rax], al ; adc byte ptr [rdx - 1], ah ; jmp rax
0x000000000040b3ed : add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004023e7 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x000000000040675b : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; call 0x4902f0b7
0x000000000040551e : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jne 0x4054ce ; call 0x4017c9
0x0000000000405593 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jne 0x405543 ; call 0x4017c9
0x000000000040b3eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040b3ec : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040b99c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x404e
0x00000000004062e1 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7628d639], cl ; ret 0xf229
0x0000000000403a23 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x858b
0x0000000000402e5a : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xfa81
0x0000000000407e0e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x000000000040907e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040445b : add byte ptr [rax], al ; add cl, ch ; ret 0x22
0x000000000040aabc : add byte ptr [rax], al ; add cl, ch ; ret 2
0x0000000000408731 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401fc3 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040159b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000040d43e : add byte ptr [rax], al ; fdiv st(7), st(0) ; jmp rdx
0x00000000004016d9 : add byte ptr [rax], al ; jmp 0x4015b9
0x0000000000406d02 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040551f : add byte ptr [rax], al ; mov rsi, qword ptr [rbp - 0x60] ; call 0x4017c8
0x0000000000402594 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040964b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000408400 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040672e : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040b3ee : add byte ptr [rax], al ; ret
0x000000000040b99e : add byte ptr [rax], al ; ret 0x404e
0x000000000040c9b6 : add byte ptr [rax], al ; sub byte ptr [rbp - 1], bl ; call qword ptr [rsi]
0x000000000040964c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000408401 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040672f : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000402241 : add byte ptr [rbx - 0x209b4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004062e3 : add byte ptr [rcx - 0x7628d639], cl ; ret 0xf229
0x000000000040b28c : add byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x0000000000401ae8 : add byte ptr [rcx], al ; ret
0x0000000000403a25 : add byte ptr [rcx], al ; ret 0x858b
0x0000000000402e5c : add byte ptr [rcx], al ; ret 0xfa81
0x000000000040aab8 : add byte ptr [rdi], cl ; lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000407e10 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000409080 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004062e0 : add byte ptr fs:[rax], al ; add byte ptr [rcx - 0x7628d639], cl ; ret 0xf229
0x000000000040445d : add cl, ch ; ret 0x22
0x000000000040aabe : add cl, ch ; ret 2
0x0000000000409c89 : add dword ptr [rax - 0x77], ecx ; ret 0x8148
0x00000000004094e4 : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; push rbp ; ret
0x000000000040872f : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040964a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004083ff : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040b14d : add dword ptr [rax], ecx ; ret 0x840
0x0000000000404011 : add dword ptr [rbp + 0x20], eax ; rol byte ptr [rcx - 0x78], 1 ; ret
0x000000000040400a : add dword ptr [rcx - 0x78], eax ; ret 0x8041
0x000000000040a444 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040ae2a : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401ae4 : add eax, 0x20c836 ; add ebx, esi ; ret
0x0000000000406132 : add eax, 0x6348ca01 ; ret 0x6948
0x000000000040aabb : add eax, 0xe9000000 ; ret 2
0x00000000004092ac : add eax, dword ptr [rax] ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; lodsd eax, dword ptr [rsi] ; ret 0x40
0x0000000000401aab : add eax, edx ; sar rax, 1 ; jne 0x401abc ; pop rbp ; ret
0x0000000000401ae9 : add ebx, esi ; ret
0x00000000004068bc : add ecx, 0x378ee1f9 ; mov eax, ecx ; pop rbp ; ret
0x0000000000401c4b : add esp, 0x10 ; pop rbp ; ret
0x000000000040adec : add esp, 0x130 ; pop rbp ; ret
0x000000000040997c : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000406af4 : add esp, 0x1c0 ; pop rbp ; ret
0x0000000000401fc6 : add esp, 0x20 ; pop rbp ; ret
0x0000000000402590 : add esp, 0x20f0 ; pop rbp ; ret
0x0000000000401d2d : add esp, 0x30 ; pop rbp ; ret
0x0000000000408b4c : add esp, 0x50 ; pop rbp ; ret
0x0000000000407023 : add esp, 0x70 ; pop rbp ; ret
0x0000000000408a5a : add esp, 0x90 ; pop rbp ; ret
0x0000000000409813 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040672a : add esp, 0xa48 ; pop rbx ; pop rbp ; ret
0x000000000040159e : add esp, 8 ; ret
0x0000000000401aaa : add rax, rdx ; sar rax, 1 ; jne 0x401abd ; pop rbp ; ret
0x0000000000401c4a : add rsp, 0x10 ; pop rbp ; ret
0x000000000040adeb : add rsp, 0x130 ; pop rbp ; ret
0x000000000040997b : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000406af3 : add rsp, 0x1c0 ; pop rbp ; ret
0x0000000000401fc5 : add rsp, 0x20 ; pop rbp ; ret
0x000000000040258f : add rsp, 0x20f0 ; pop rbp ; ret
0x0000000000401d2c : add rsp, 0x30 ; pop rbp ; ret
0x0000000000408b4b : add rsp, 0x50 ; pop rbp ; ret
0x0000000000407022 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000408a59 : add rsp, 0x90 ; pop rbp ; ret
0x0000000000409812 : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000406729 : add rsp, 0xa48 ; pop rbx ; pop rbp ; ret
0x000000000040159d : add rsp, 8 ; ret
0x000000000040ae29 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401ae7 : and byte ptr [rax], al ; add ebx, esi ; ret
0x000000000040249d : and dword ptr [rdi - 0x76b7ffc0], esi ; ret 0x47e8
0x00000000004026cf : and eax, 0x60e328 ; pop rbp ; ret
0x00000000004026ef : and eax, 0x60e330 ; pop rbp ; ret
0x0000000000402713 : and eax, 0x60e338 ; pop rbp ; ret
0x0000000000406125 : call 0x202ea4d
0x0000000000406169 : call 0x202ea91
0x00000000004061b2 : call 0x202eada
0x0000000000401bba : call 0x401749
0x0000000000405525 : call 0x4017c2
0x000000000040aa88 : call 0x401909
0x0000000000405afb : call 0x410294de
0x0000000000406761 : call 0x4902f0b1
0x0000000000406760 : call 0x4902f0b2
0x0000000000408439 : call 0xffffffffe9030d89
0x0000000000408438 : call 0xffffffffe9030d8a
0x000000000040b3c9 : call qword ptr [r12 + rbx*8]
0x00000000004062d5 : call qword ptr [rax]
0x000000000040c9bb : call qword ptr [rsi]
0x000000000040b3ca : call qword ptr [rsp + rbx*8]
0x0000000000401b0d : call rax
0x000000000040818c : call rbx
0x000000000040cc1b : call rdi
0x000000000040adea : clc ; add rsp, 0x130 ; pop rbp ; ret
0x0000000000409b7f : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402681 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004065cd : clc ; idiv edi ; dec dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000401aaf : clc ; jne 0x401ab8 ; pop rbp ; ret
0x0000000000406ed5 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040b30f : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040b312 : clc ; pop rbp ; ret
0x0000000000409fa6 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000409f49 : cld ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040a0ce : cld ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040b30c : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000409fa3 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000409f46 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040a0cb : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406131 : cli ; add eax, 0x6348ca01 ; ret 0x6948
0x00000000004092b1 : cmp al, 0x25 ; lodsd eax, dword ptr [rsi] ; ret 0x40
0x00000000004091d0 : cmp al, 0x25 ; pop rdx ; ret 0x40
0x00000000004094e9 : cmp al, 0x25 ; push rbp ; ret
0x00000000004023ec : cmp al, 0x25 ; ret
0x000000000040919e : cmp al, 0x25 ; ret 0x40
0x0000000000401bc1 : cmp al, 0x25 ; ret 0x40b5
0x00000000004093ac : cmp al, 0x25 ; stc ; ret 0x40
0x0000000000401a6d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401a80 ; pop rbp ; ret
0x0000000000405afa : cmp ebp, eax ; fstp xword ptr [rcx] ; ret 0xf40
0x0000000000401bbb : cmp ebx, 0x8d48ffff ; cmp al, 0x25 ; ret 0x40b5
0x000000000040918c : cwde ; mov rcx, qword ptr [rax*8 + 0x40c118] ; jmp rcx
0x000000000040457d : dec dword ptr [rax - 0x46] ; jbe 0x4045c5 ; ret
0x000000000040919b : dec dword ptr [rax - 0x73] ; cmp al, 0x25 ; ret 0x40
0x0000000000401bbe : dec dword ptr [rax - 0x73] ; cmp al, 0x25 ; ret 0x40b5
0x000000000040aa8c : dec dword ptr [rax - 0x73] ; xor al, 0x25 ; ret
0x000000000040a1be : dec dword ptr [rax - 0x75] ; push rbp ; fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000402c9f : dec dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000402247 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000407b92 : dec dword ptr [rcx - 0x77] ; ret 0x294d
0x0000000000404e22 : dec dword ptr [rdi] ; pushfq ; ret 0xe280
0x000000000040458d : enter -0x46b8, 0x40 ; jbe 0x4045d5 ; ret
0x0000000000401ae6 : enter 0x20, 1 ; ret
0x0000000000407f20 : enter 0x4b05, 0x34 ; fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x0000000000401a83 : enter 0x60e2, 0 ; jmp rax
0x0000000000401ac3 : enter 0x60e2, 0 ; jmp rdx
0x000000000040d441 : fdiv st(7), st(0) ; jmp rdx
0x00000000004056d1 : fdivr qword ptr [rax - 0x7f] ; ret 7
0x0000000000405af9 : fdivr qword ptr [rbx] ; call 0x410294e0
0x0000000000407f24 : fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x0000000000401b07 : fisub word ptr [rax] ; mov rbp, rsp ; call rax
0x000000000040a1c2 : fmul dword ptr [rax + 1] ; ret 0x8948
0x000000000040b3cc : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000405afc : fstp xword ptr [rcx] ; ret 0xf40
0x0000000000401c49 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401a80 : hlt ; pop rbp ; mov edi, 0x60e2c8 ; jmp rax
0x00000000004065ce : idiv edi ; dec dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000403a16 : idiv edi ; ljmp ptr [rcx] ; ret 0x858b
0x00000000004056cc : inc byte ptr [rcx - 0x23a0353e] ; js 0x40565d ; ret 7
0x00000000004081ab : inc dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x00000000004097b5 : int 0x80
0x0000000000401a73 : ja 0x401a7a ; pop rbp ; ret
0x0000000000404581 : jbe 0x4045c1 ; ret
0x0000000000404580 : jbe 0x4045c2 ; ret
0x0000000000404591 : jbe 0x4045d1 ; ret
0x0000000000404590 : jbe 0x4045d2 ; ret
0x0000000000401a7f : je 0x401a7d ; pop rbp ; mov edi, 0x60e2c8 ; jmp rax
0x00000000004016db : jmp 0x4015b7
0x0000000000405679 : jmp 0x421901
0x0000000000409c88 : jmp 0xffffffffc2c9e492
0x000000000040c507 : jmp qword ptr [rax]
0x0000000000407626 : jmp qword ptr [rcx]
0x000000000040cd03 : jmp qword ptr [rdx]
0x0000000000401a87 : jmp rax
0x0000000000402fb7 : jmp rcx
0x0000000000401ac7 : jmp rdx
0x0000000000401ab0 : jne 0x401ab7 ; pop rbp ; ret
0x0000000000405523 : jne 0x4054c9 ; call 0x4017c4
0x0000000000405598 : jne 0x40553e ; call 0x4017c4
0x000000000040a1bc : jne 0x40a1c6 ; dec dword ptr [rax - 0x75] ; push rbp ; fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000407025 : jo 0x407086 ; ret
0x000000000040864f : jo 0x4086b5 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000408cf4 : jo 0x408d55 ; ret
0x0000000000408e2e : jo 0x408e8f ; ret
0x00000000004056d2 : js 0x405657 ; ret 7
0x000000000040aaba : lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x000000000040c5e7 : ljmp ptr [rax + 0x70000007] ; ret 0xffff
0x0000000000403a18 : ljmp ptr [rcx] ; ret 0x858b
0x00000000004092b3 : lodsd eax, dword ptr [rsi] ; ret 0x40
0x0000000000408bcb : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000408a58 : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x000000000040ae26 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000402465 : mov bh, 0x40 ; add al, ch ; ret
0x000000000040249e : mov bh, 0x40 ; add byte ptr [rax - 0x77], cl ; ret 0x47e8
0x0000000000401599 : mov bl, 2 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000402711 : mov byte ptr [0x60e338], al ; pop rbp ; ret
0x0000000000406122 : mov byte ptr [rax - 0x3f], cl ; call 0x202ea50
0x0000000000406166 : mov byte ptr [rax - 0x3f], cl ; call 0x202ea94
0x00000000004061af : mov byte ptr [rax - 0x3f], cl ; call 0x202eadd
0x0000000000401ae3 : mov byte ptr [rip + 0x20c836], 1 ; ret
0x000000000040a446 : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040ae2c : mov dh, -0x40 ; pop rbp ; ret
0x0000000000402436 : mov dh, 0x40 ; add byte ptr [rax - 0x77], cl ; ret 0xafe8
0x00000000004068c0 : mov dr0, word ptr [rdi] ; mov eax, ecx ; pop rbp ; ret
0x00000000004026ed : mov dword ptr [0x60e330], edi ; pop rbp ; ret
0x0000000000406ed6 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040611f : mov dword ptr [rax - 0x3eb77778], ecx ; call 0x202ea53
0x0000000000406163 : mov dword ptr [rax - 0x3eb77778], ecx ; call 0x202ea97
0x00000000004061ac : mov dword ptr [rax - 0x3eb77778], ecx ; call 0x202eae0
0x0000000000406e98 : mov dword ptr [rax], eax ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000406d54 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000406e97 : mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000402606 : mov dword ptr [rbp - 0x10], ecx ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000401d29 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401c47 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040b30d : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000406f4e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040a330 : mov dword ptr [rdx], ecx ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004026cd : mov eax, dword ptr [0x60e328] ; pop rbp ; ret
0x0000000000406d08 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000409a9b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402963 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406d05 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040260a : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000409d93 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406cbd : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406d4e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000406e9a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040701f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000408bc9 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000409fa4 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000409f47 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040a0cc : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000409b7d : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040908f : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040b310 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004068c2 : mov eax, ecx ; pop rbp ; ret
0x0000000000401b0b : mov ebp, esp ; call rax
0x0000000000401a71 : mov ebp, esp ; ja 0x401a7c ; pop rbp ; ret
0x00000000004048d1 : mov ecx, 0x509a0b1a ; xchg eax, edx ; ret
0x00000000004097cd : mov ecx, 0x5b2a830a ; ret
0x0000000000402fb0 : mov ecx, dword ptr [rax*8 + 0x40b858] ; jmp rcx
0x00000000004061f7 : mov ecx, dword ptr [rax*8 + 0x40bb08] ; jmp rcx
0x00000000004070e2 : mov ecx, dword ptr [rax*8 + 0x40bc10] ; jmp rcx
0x0000000000407406 : mov ecx, dword ptr [rax*8 + 0x40bc58] ; jmp rcx
0x000000000040918e : mov ecx, dword ptr [rax*8 + 0x40c118] ; jmp rcx
0x0000000000406d51 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401b05 : mov edi, 0x60de20 ; mov rbp, rsp ; call rax
0x0000000000401a82 : mov edi, 0x60e2c8 ; jmp rax
0x0000000000401ac2 : mov edi, 0x60e2c8 ; jmp rdx
0x000000000040b3c7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000040b3c6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x00000000004048c1 : mov edx, 0x509a0b1a ; xchg eax, edx ; ret
0x000000000040596a : mov esi, 0x81ca29e5 ; ret 0x270e
0x0000000000405522 : mov esi, dword ptr [rbp - 0x60] ; call 0x4017c5
0x0000000000401ac0 : mov esi, eax ; mov edi, 0x60e2c8 ; jmp rdx
0x00000000004026ec : mov qword ptr [0x60e330], rdi ; pop rbp ; ret
0x0000000000402605 : mov qword ptr [rbp - 0x10], rcx ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000406f4d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040a32f : mov qword ptr [rdx], rcx ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000408bca : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004026cc : mov rax, qword ptr [0x60e328] ; pop rbp ; ret
0x0000000000409a9a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402962 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406d04 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000402609 : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000409d92 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406cbc : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040701e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000408bc8 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000409b7c : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040908e : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401b0a : mov rbp, rsp ; call rax
0x0000000000401a70 : mov rbp, rsp ; ja 0x401a7d ; pop rbp ; ret
0x0000000000402faf : mov rcx, qword ptr [rax*8 + 0x40b858] ; jmp rcx
0x00000000004061f6 : mov rcx, qword ptr [rax*8 + 0x40bb08] ; jmp rcx
0x00000000004070e1 : mov rcx, qword ptr [rax*8 + 0x40bc10] ; jmp rcx
0x0000000000407405 : mov rcx, qword ptr [rax*8 + 0x40bc58] ; jmp rcx
0x000000000040918d : mov rcx, qword ptr [rax*8 + 0x40c118] ; jmp rcx
0x0000000000405521 : mov rsi, qword ptr [rbp - 0x60] ; call 0x4017c6
0x0000000000401abf : mov rsi, rax ; mov edi, 0x60e2c8 ; jmp rdx
0x0000000000404eac : movabs byte ptr [0x8100000001c281c5], al ; ret 0x2075
0x000000000040267e : movups xmm0, xmmword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040a445 : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040ae2b : movzx eax, al ; pop rbp ; ret
0x000000000040b3e8 : nop dword ptr [rax + rax] ; ret
0x000000000040776d : or al, 0x18 ; ret 0x6451
0x000000000040672d : or al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000401fc1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b3dc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000408651 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040b3de : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000408653 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040b3e0 : pop r14 ; pop r15 ; ret
0x0000000000408403 : pop r14 ; pop rbp ; ret
0x0000000000408655 : pop r15 ; pop rbp ; ret
0x000000000040b3e2 : pop r15 ; ret
0x0000000000401ae2 : pop rbp ; mov byte ptr [rip + 0x20c836], 1 ; ret
0x0000000000401a81 : pop rbp ; mov edi, 0x60e2c8 ; jmp rax
0x0000000000401abe : pop rbp ; mov rsi, rax ; mov edi, 0x60e2c8 ; jmp rdx
0x000000000040b3db : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040b3df : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401a75 : pop rbp ; ret
0x0000000000408650 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040964d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000408402 : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000406730 : pop rbx ; pop rbp ; ret
0x00000000004097d1 : pop rbx ; ret
0x00000000004094e3 : pop rdi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; push rbp ; ret
0x00000000004056d0 : pop rdi ; fdivr qword ptr [rax - 0x7f] ; ret 7
0x0000000000408656 : pop rdi ; pop rbp ; ret
0x000000000040b3e3 : pop rdi ; ret
0x00000000004091d2 : pop rdx ; ret 0x40
0x0000000000408654 : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040b3e1 : pop rsi ; pop r15 ; ret
0x0000000000408404 : pop rsi ; pop rbp ; ret
0x000000000040b3dd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000408652 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405c77 : push rax ; adc al, -0x7f ; ret 0x8924
0x0000000000408b4e : push rax ; pop rbp ; ret
0x00000000004048c5 : push rax ; xchg eax, edx ; ret
0x000000000040a1c1 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000401b04 : push rbp ; mov edi, 0x60de20 ; mov rbp, rsp ; call rax
0x00000000004094eb : push rbp ; ret
0x00000000004093a6 : pushfq ; add al, byte ptr [rax] ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; stc ; ret 0x40
0x0000000000404e24 : pushfq ; ret 0xe280
0x00000000004015a1 : ret
0x000000000040acf2 : ret 0
0x000000000040ad06 : ret 0x148
0x00000000004056c0 : ret 0x1923
0x00000000004087ee : ret 0x1b2
0x0000000000404eb5 : ret 0x2075
0x00000000004018e2 : ret 0x20c8
0x00000000004016e2 : ret 0x20c9
0x000000000040445f : ret 0x22
0x000000000040596f : ret 0x270e
0x0000000000406888 : ret 0x2944
0x0000000000402121 : ret 0x2948
0x0000000000407b79 : ret 0x294c
0x0000000000407b95 : ret 0x294d
0x0000000000407bad : ret 0x2de8
0x00000000004040ab : ret 0x3948
0x00000000004091a1 : ret 0x40
0x000000000040b9a0 : ret 0x404e
0x0000000000401bc3 : ret 0x40b5
0x000000000040688b : ret 0x4589
0x00000000004024a3 : ret 0x47e8
0x0000000000406294 : ret 0x5589
0x00000000004056ce : ret 0x5fca
0x0000000000405166 : ret 0x62dc
0x000000000040776f : ret 0x6451
0x0000000000406137 : ret 0x6948
0x0000000000405c80 : ret 0x76c
0x000000000040400d : ret 0x8041
0x0000000000409c8c : ret 0x8148
0x000000000040211c : ret 0x8259
0x000000000040b14f : ret 0x840
0x0000000000403a1a : ret 0x858b
0x0000000000407e13 : ret 0x8840
0x0000000000409149 : ret 0x8844
0x0000000000405c7a : ret 0x8924
0x00000000004035ba : ret 0x8948
0x0000000000407b98 : ret 0x8949
0x0000000000407d2c : ret 0x89a5
0x0000000000407b7c : ret 0x8b48
0x0000000000405a75 : ret 0x8d0f
0x000000000040243b : ret 0xafe8
0x000000000040224a : ret 0xb0
0x000000000040acf9 : ret 0xb849
0x0000000000405675 : ret 0xb992
0x0000000000401aa5 : ret 0xc148
0x000000000040aa60 : ret 0xc2f6
0x0000000000406128 : ret 0xca01
0x0000000000403c09 : ret 0xca21
0x0000000000405d17 : ret 0xca29
0x0000000000405a15 : ret 0xd262
0x0000000000409083 : ret 0xd284
0x0000000000404e25 : ret 0xe280
0x0000000000405a1b : ret 0xea81
0x000000000040843c : ret 0xee8
0x0000000000407e28 : ret 0xf180
0x00000000004062e9 : ret 0xf229
0x000000000040aa53 : ret 0xf280
0x000000000040760e : ret 0xf281
0x0000000000405afe : ret 0xf40
0x0000000000402e5e : ret 0xfa81
0x0000000000402127 : ret 0xffff
0x0000000000404eaf : ret 1
0x000000000040aac0 : ret 2
0x00000000004056d4 : ret 7
0x000000000040c530 : rol byte ptr [rax + rax], 0 ; adc byte ptr [rdx - 1], ah ; jmp rax
0x0000000000406e96 : rol byte ptr [rcx + rcx*4], 1 ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000404014 : rol byte ptr [rcx - 0x78], 1 ; ret
0x000000000040c570 : rol byte ptr [rip - 0x5d100000], -1 ; jmp rax
0x00000000004097b0 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000407020 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x40708b ; ret
0x000000000040458a : ror byte ptr [rax + 0x29], 1 ; enter -0x46b8, 0x40 ; jbe 0x4045d8 ; ret
0x0000000000401aac : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401abb ; pop rbp ; ret
0x00000000004097b1 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000407b6d : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000407b76 : ror byte ptr [rax - 0x77], 1 ; ret 0x294c
0x0000000000407021 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x40708a ; ret
0x0000000000401a7e : sal byte ptr [rsp + rsi*8 + 0x5d], -0x41 ; enter 0x60e2, 0 ; jmp rax
0x0000000000401aae : sar eax, 1 ; jne 0x401ab9 ; pop rbp ; ret
0x00000000004068bd : sar ecx, -0x1f ; mov dr0, word ptr [rdi] ; mov eax, ecx ; pop rbp ; ret
0x0000000000401aad : sar rax, 1 ; jne 0x401aba ; pop rbp ; ret
0x00000000004093ae : stc ; ret 0x40
0x000000000040ae28 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040c9b8 : sub byte ptr [rbp - 1], bl ; call qword ptr [rsi]
0x00000000004097cf : sub dword ptr [rdx], 0x5b ; ret
0x000000000040b41d : sub esp, 8 ; add rsp, 8 ; ret
0x000000000040b41c : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000409199 : test bh, bh ; dec dword ptr [rax - 0x73] ; cmp al, 0x25 ; ret 0x40
0x000000000040b3ea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000405a0f : test dword ptr [rax - 0x7e000008], eax ; ret 0xd262
0x00000000004023e5 : test dword ptr [rdx], esp ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x0000000000403a14 : xchg eax, ebp ; idiv edi ; ljmp ptr [rcx] ; ret 0x858b
0x0000000000407e12 : xchg eax, ebp ; ret 0x8840
0x00000000004092ab : xchg eax, edi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; lodsd eax, dword ptr [rsi] ; ret 0x40
0x00000000004048c6 : xchg eax, edx ; ret
0x0000000000405526 : xchg eax, esi ; ret 0xffff
0x0000000000409082 : xchg eax, esp ; ret 0xd284
0x000000000040249b : xor al, 0x25 ; and dword ptr [rdi - 0x76b7ffc0], esi ; ret 0x47e8
0x000000000040aa8f : xor al, 0x25 ; ret
0x000000000040adee : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000402807 : xor eax, 0x48ffffee ; add esp, 0x10 ; pop rbp ; ret
0x0000000000408b47 : xor eax, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x0000000000406e95 : xor eax, edx ; mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
