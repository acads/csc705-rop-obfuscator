0x0000000000412e7c : adc al, 0x12 ; add byte ptr [rax], al ; rol dh, -1 ; jmp rdx
0x000000000040cb72 : adc al, byte ptr [rcx] ; jmp rcx
0x0000000000411a4d : adc byte ptr [rax], al ; add byte ptr [rcx + rdx*4 - 1], ch ; jmp rsp
0x00000000004062a9 : adc dword ptr [rcx - 0xa], eax ; jmp qword ptr [rcx]
0x00000000004062a8 : adc dword ptr cs:[rcx - 0xa], eax ; jmp qword ptr [rcx]
0x0000000000411b0d : adc eax, dword ptr [rax] ; add byte ptr [rax + rax*8 - 1], ch ; jmp rsp
0x00000000004093b9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004017d9 : adc eax, dword ptr [rbx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000041194f : add ah, bl ; jg 0x411956 ; jmp rsp
0x0000000000411c0f : add ah, ch ; loopne 0x411c16 ; jmp rsp
0x000000000041178f : add ah, cl ; or edi, edi ; call rsp
0x000000000040df9d : add al, 0x21 ; ret 0xd709
0x000000000041241f : add al, ah ; jb 0x412426 ; jmp qword ptr [rdx]
0x00000000004126df : add al, al ; jbe 0x4126e6 ; call qword ptr [rcx]
0x0000000000411e6d : add al, byte ptr [rax] ; add byte ptr [rax], dh ; and bh, bh ; jmp rcx
0x000000000040462b : add al, ch ; call rcx
0x0000000000412bdf : add al, dl ; mov ah, -1 ; jmp rax
0x0000000000411def : add al, dl ; sbb edi, edi ; jmp qword ptr [rax]
0x000000000040f8af : add bl, dh ; ret
0x000000000040528b : add byte ptr [r8], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406ba8 : add byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000411b0f : add byte ptr [rax + rax*8 - 1], ch ; jmp rsp
0x00000000004059db : add byte ptr [rax - 0x75], cl ; call 0x4902e333
0x00000000004032a2 : add byte ptr [rax - 0x75], cl ; fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x000000000040d18d : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000403659 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; ret 0x2948
0x000000000040ad01 : add byte ptr [rax - 0x77], cl ; ret 0x2948
0x00000000004023e8 : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x0000000000411d0f : add byte ptr [rax], ah ; add edi, edi ; jmp rdx
0x0000000000412e7a : add byte ptr [rax], al ; adc al, 0x12 ; add byte ptr [rax], al ; rol dh, -1 ; jmp rdx
0x0000000000404629 : add byte ptr [rax], al ; add al, ch ; call rcx
0x000000000040f8ad : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000406ba6 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8948
0x00000000004059d9 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; call 0x4902e335
0x00000000004032a0 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x0000000000403657 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; ret 0x2948
0x00000000004023e6 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x0000000000411d0d : add byte ptr [rax], al ; add byte ptr [rax], ah ; add edi, edi ; jmp rdx
0x000000000040f8ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000400a70 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x0000000000400a72 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x0000000000404e9c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040e029 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040773b : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040f8ac : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400a74 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000004049dd : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], al ; ret 0x8141
0x000000000040dfc2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040c372 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7f], al ; call 0xffffffff8b030f02
0x0000000000408a5e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x00000000004067c1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000409cce : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040ef4c : add byte ptr [rax], al ; add cl, ch ; ret 2
0x0000000000404de3 : add byte ptr [rax], al ; add rsi, rax ; mov rax, rsi ; pop rbp ; ret
0x000000000040528c : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404e9e : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004017db : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004120ce : add byte ptr [rax], al ; cmp edi, edi ; call qword ptr [rcx]
0x000000000041194e : add byte ptr [rax], al ; fdivr qword ptr [rdi - 1] ; jmp rsp
0x0000000000411c0e : add byte ptr [rax], al ; in al, dx ; loopne 0x411c17 ; jmp rsp
0x000000000041253e : add byte ptr [rax], al ; je 0x412547 ; jmp qword ptr [rax]
0x0000000000401899 : add byte ptr [rax], al ; jmp 0x4017f9
0x000000000040e02b : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000407952 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040773d : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000411d0a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax], ah ; add edi, edi ; jmp rdx
0x0000000000412bfe : add byte ptr [rax], al ; nop ; mov ch, -1 ; call qword ptr [rsi]
0x00000000004033ad : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040d02b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000404c7a : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040dfc3 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000041265e : add byte ptr [rax], al ; push rax ; jne 0x412667 ; jmp qword ptr [rdx]
0x000000000040f8ae : add byte ptr [rax], al ; ret
0x0000000000400a76 : add byte ptr [rax], al ; ret 1
0x0000000000412e7e : add byte ptr [rax], al ; rol dh, -1 ; jmp rdx
0x0000000000412bfa : add byte ptr [rax], al ; xchg eax, esp ; sldt word ptr [rax] ; nop ; mov ch, -1 ; call qword ptr [rsi]
0x0000000000411e6f : add byte ptr [rax], dh ; and bh, bh ; jmp rcx
0x0000000000411f6f : add byte ptr [rax], dh ; xor edi, edi ; call qword ptr [rax]
0x0000000000404628 : add byte ptr [rax], r8b ; add al, ch ; call rcx
0x00000000004049df : add byte ptr [rbp - 0x77], al ; ret 0x8141
0x000000000040d02c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000404c7b : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000406f66 : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040dfc4 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000411a4f : add byte ptr [rcx + rdx*4 - 1], ch ; jmp rsp
0x000000000040c374 : add byte ptr [rcx - 0x7f], al ; call 0xffffffff8b030f00
0x000000000040f74c : add byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x000000000040a80b : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401dc8 : add byte ptr [rcx], al ; ret
0x0000000000412bdb : add byte ptr [rdi + rcx], dh ; add al, dl ; mov ah, -1 ; jmp rax
0x000000000040ef48 : add byte ptr [rdi], cl ; lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000408a60 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x00000000004067c3 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000409cd0 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004126db : add byte ptr [rdx + rcx], dh ; add al, al ; jbe 0x4126ea ; call qword ptr [rcx]
0x000000000041180f : add byte ptr [rdx + rdi - 1], bh ; call rsp
0x0000000000412e7b : add byte ptr [rdx + rdx], dl ; add byte ptr [rax], al ; rol dh, -1 ; jmp rdx
0x00000000004117cf : add byte ptr [rdx - 1], bh ; call rsp
0x0000000000405adc : add cl, byte ptr [rax - 0x77] ; ret 0x148
0x000000000040ef4e : add cl, ch ; ret 2
0x000000000040bf6a : add dword ptr [rax + 0x29], ecx ; ret 0x8948
0x000000000040d669 : add dword ptr [rax - 0x77], ecx ; ret 0x8148
0x00000000004050c6 : add dword ptr [rax - 0x77], ecx ; shr r9b, 1 ; ret 0xffff
0x0000000000411ded : add dword ptr [rax], eax ; add al, dl ; sbb edi, edi ; jmp qword ptr [rax]
0x000000000040937f : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040d02a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040904f : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040f60d : add dword ptr [rax], ecx ; ret 0x840
0x00000000004039c2 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004028d6 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402a41 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000403a0c : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x000000000040c55b : add eax, 0x148a3f2 ; ret 0x8948
0x0000000000401dc4 : add eax, 0x2125ae ; add ebx, esi ; ret
0x000000000040ef4b : add eax, 0xe9000000 ; ret 2
0x0000000000411f6d : add eax, dword ptr [rax] ; add byte ptr [rax], dh ; xor edi, edi ; call qword ptr [rax]
0x0000000000401d8b : add eax, edx ; sar rax, 1 ; jne 0x401d9c ; pop rbp ; ret
0x0000000000401dc9 : add ebx, esi ; ret
0x0000000000404626 : add ecx, ebp ; add byte ptr [rax], r8b ; add al, ch ; call rcx
0x0000000000411d11 : add edi, edi ; jmp rdx
0x0000000000404de6 : add esi, eax ; mov rax, rsi ; pop rbp ; ret
0x0000000000401ffb : add esp, 0x10 ; pop rbp ; ret
0x000000000040a809 : add esp, 0x100 ; pop rbp ; ret
0x00000000004037ae : add esp, 0x120 ; pop rbp ; ret
0x000000000040f27c : add esp, 0x130 ; pop rbp ; ret
0x00000000004033a9 : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000405e9c : add esp, 0x1b0 ; pop rbp ; ret
0x000000000040e59e : add esp, 0x1e0 ; pop rbp ; ret
0x00000000004039c7 : add esp, 0x20 ; pop rbp ; ret
0x000000000040210d : add esp, 0x30 ; pop rbp ; ret
0x00000000004051bd : add esp, 0x30 ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000402a46 : add esp, 0x40 ; pop rbp ; ret
0x000000000040540a : add esp, 0x50 ; pop rbp ; ret
0x000000000040ca07 : add esp, 0x50 ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000403e8d : add esp, 0x60 ; pop rbp ; ret
0x0000000000407c73 : add esp, 0x70 ; pop rbp ; ret
0x000000000040a048 : add esp, 0x80 ; pop rbp ; ret
0x00000000004071d5 : add esp, 0x90 ; pop rbp ; ret
0x000000000040d1f3 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040b882 : add esp, 0xd0 ; pop rbp ; ret
0x000000000040dfbf : add esp, 0xd8 ; pop rbx ; pop rbp ; ret
0x00000000004017de : add esp, 8 ; ret
0x0000000000401d8a : add rax, rdx ; sar rax, 1 ; jne 0x401d9d ; pop rbp ; ret
0x0000000000404de5 : add rsi, rax ; mov rax, rsi ; pop rbp ; ret
0x0000000000401ffa : add rsp, 0x10 ; pop rbp ; ret
0x000000000040a808 : add rsp, 0x100 ; pop rbp ; ret
0x00000000004037ad : add rsp, 0x120 ; pop rbp ; ret
0x000000000040f27b : add rsp, 0x130 ; pop rbp ; ret
0x00000000004033a8 : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000405e9b : add rsp, 0x1b0 ; pop rbp ; ret
0x000000000040e59d : add rsp, 0x1e0 ; pop rbp ; ret
0x00000000004039c6 : add rsp, 0x20 ; pop rbp ; ret
0x000000000040210c : add rsp, 0x30 ; pop rbp ; ret
0x00000000004051bc : add rsp, 0x30 ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000402a45 : add rsp, 0x40 ; pop rbp ; ret
0x0000000000405409 : add rsp, 0x50 ; pop rbp ; ret
0x000000000040ca06 : add rsp, 0x50 ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000403e8c : add rsp, 0x60 ; pop rbp ; ret
0x0000000000407c72 : add rsp, 0x70 ; pop rbp ; ret
0x000000000040a047 : add rsp, 0x80 ; pop rbp ; ret
0x00000000004071d4 : add rsp, 0x90 ; pop rbp ; ret
0x000000000040d1f2 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040b881 : add rsp, 0xd0 ; pop rbp ; ret
0x000000000040dfbe : add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x00000000004017dd : add rsp, 8 ; ret
0x0000000000403a0b : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004117d1 : and bh, bh ; call rsp
0x0000000000411e71 : and bh, bh ; jmp rcx
0x00000000004037b0 : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004038fa : and dword ptr [rax], 0x8948c9d9 ; ret 0x148
0x0000000000401dc7 : and dword ptr [rax], eax ; add ebx, esi ; ret
0x000000000040577f : and eax, 0x614388 ; pop rbp ; ret
0x00000000004057a3 : and eax, 0x614390 ; pop rbp ; ret
0x0000000000401dc6 : and eax, 0xf3010021 ; ret
0x000000000040b945 : and edi, eax ; mov rax, rdi ; pop rbp ; ret
0x000000000040b944 : and rdi, rax ; mov rax, rdi ; pop rbp ; ret
0x00000000004059df : call 0x4902e32f
0x00000000004059de : call 0x4902e330
0x000000000040b4a3 : call 0x494076dc
0x000000000040b4b3 : call 0x494076ec
0x000000000040c377 : call 0xffffffff8b030efd
0x0000000000403826 : call 0xffffffffb102c176
0x0000000000409089 : call 0xffffffffe90319d9
0x0000000000409088 : call 0xffffffffe90319da
0x000000000040f889 : call qword ptr [r12 + rbx*8]
0x0000000000405fe3 : call qword ptr [rax]
0x00000000004120d3 : call qword ptr [rcx]
0x0000000000412033 : call qword ptr [rsi]
0x000000000040f88a : call qword ptr [rsp + rbx*8]
0x0000000000401ded : call rax
0x0000000000408ddc : call rbx
0x000000000040462d : call rcx
0x000000000041233b : call rdi
0x0000000000411793 : call rsp
0x000000000040621b : cdq ; ret 0xb60f
0x000000000040f27a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x000000000040d55f : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405766 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004056b4 : clc ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000405408 : clc ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040a046 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x0000000000401d8f : clc ; jne 0x401d98 ; pop rbp ; ret
0x0000000000407b25 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040f7cf : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040a853 : clc ; mov qword ptr [rdi + 0x10], rsi ; pop rbp ; ret
0x000000000040a833 : clc ; mov qword ptr [rdi + 8], rsi ; pop rbp ; ret
0x0000000000409dab : clc ; mov rax, qword ptr [rdi] ; pop rbp ; ret
0x0000000000409da7 : clc ; mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi] ; pop rbp ; ret
0x000000000040a997 : clc ; mov rdi, qword ptr [rdx + 0x10] ; call rax
0x000000000040a062 : clc ; pop rbp ; ret
0x000000000040a05b : clc ; shl rdi, 8 ; mov rax, rdi ; pop rbp ; ret
0x000000000040e028 : cld ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000402027 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040ca6e : cld ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004038d9 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000407597 : cld ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040f7cc : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040e603 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040ca6b : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040e72b : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040e02f : cld ; pop rbp ; ret
0x00000000004075c8 : cmove ecx, edx ; movsxd rax, ecx ; pop rbp ; ret
0x0000000000411811 : cmp bh, bh ; call rsp
0x000000000040e489 : cmp dword ptr [rdx - 0x76be63d5], ebx ; ret
0x000000000040dae6 : cmp eax, 0x8945c621 ; ret 0x8141
0x0000000000401d4d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401d60 ; pop rbp ; ret
0x00000000004120d1 : cmp edi, edi ; call qword ptr [rcx]
0x0000000000404cfd : cmpsd dword ptr [rsi], dword ptr [rdi] ; xchg byte ptr [r9 - 0xe], r8b ; jmp qword ptr [rcx]
0x000000000040cb6c : cwde ; mov rcx, qword ptr [rax*8 + 0x411258] ; jmp rcx
0x0000000000400292 : cwde ; ret
0x000000000040c881 : dec dword ptr [rax + 0x21] ; ret 0x948
0x00000000004040fb : dec dword ptr [rax + 0x39] ; ret 0x830f
0x0000000000406134 : dec dword ptr [rax + 0x69] ; ret 0xa
0x000000000040b305 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x00000000004041fc : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000402b14 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040a371 : dec dword ptr [rax - 0x77] ; ret 0xf6e8
0x000000000040bddf : dec dword ptr [rcx - 0x77] ; ret 0x2149
0x00000000004087e2 : dec dword ptr [rcx - 0x77] ; ret 0x294d
0x0000000000406219 : dec dword ptr [rdi] ; cdq ; ret 0xb60f
0x00000000004061d5 : dec dword ptr [rdi] ; xchg eax, edx ; ret 0xe280
0x000000000040c533 : enter 0x4879, 0x29 ; ret 0x8948
0x0000000000408b70 : enter 0x4b05, 0x34 ; fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x0000000000406ba2 : enter 0x548, 0 ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8948
0x000000000040dfc1 : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000407085 : faddp st(1) ; fstp xword ptr [rbp - 0x20] ; fld xword ptr [rbp - 0x20] ; pop rbp ; ret
0x0000000000411950 : fdivr qword ptr [rdi - 1] ; jmp rsp
0x0000000000408b74 : fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x0000000000403233 : fimul dword ptr [rcx - 0x7f] ; ret 1
0x000000000040c43f : fimul word ptr [rcx - 0x77] ; ret 0x8149
0x000000000040bc17 : fisttp dword ptr [rax + 0x21] ; fisttp word ptr [rcx - 0x77] ; ret
0x000000000040bc1a : fisttp word ptr [rcx - 0x77] ; ret
0x00000000004115d1 : fld qword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040708a : fld xword ptr [rbp - 0x20] ; pop rbp ; ret
0x000000000040a4e1 : fmul dword ptr [r8 - 0x46] ; jg 0x40a48d ; ret
0x00000000004032a5 : fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x000000000040a66b : fmul dword ptr [rax - 0x42] ; ret
0x000000000040a4e2 : fmul dword ptr [rax - 0x46] ; jg 0x40a48c ; ret
0x00000000004032a6 : fmul dword ptr [rax - 0x77] ; ret 0x2948
0x000000000040283a : fmul dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000404068 : fmul dword ptr [rbx - 0x8cf4b] ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040464e : fmul dword ptr [rbx - 0x91b4b] ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040bc5e : fmul dword ptr [rcx - 0x77] ; ror byte ptr [rcx + 0x29], cl ; ret 0x14c
0x000000000040f88c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000407087 : fstp xword ptr [rbp - 0x20] ; fld xword ptr [rbp - 0x20] ; pop rbp ; ret
0x0000000000401ff9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040a0f0 : hlt ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004047ea : hlt ; mov word ptr [rbp - 0x77], es ; ret 0x8141
0x000000000040286d : hlt ; movsb byte ptr [rdi], byte ptr [rsi] ; jmp 0x4019fd
0x0000000000401d60 : hlt ; pop rbp ; mov edi, 0x614320 ; jmp rax
0x00000000004048b9 : idiv bh ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000404652 : idiv bh ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004040f9 : idiv edi ; dec dword ptr [rax + 0x39] ; ret 0x830f
0x00000000004041fa : idiv edi ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000040406c : idiv edi ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004062a7 : imul byte ptr [rsi] ; adc dword ptr [rcx - 0xa], eax ; jmp qword ptr [rcx]
0x0000000000405ad8 : imul eax, dword ptr [rax - 0x77], 0x7a ; add cl, byte ptr [rax - 0x77] ; ret 0x148
0x000000000040727e : in al, 0x48 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040ac29 : in al, dx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000411c10 : in al, dx ; loopne 0x411c15 ; jmp rsp
0x000000000040defa : in eax, -0x4a ; loope 0x40df23 ; ret 0x8941
0x0000000000402762 : inc dword ptr [rbp + 0x21] ; ret 0x8141
0x0000000000404fe7 : inc dword ptr [rcx - 0x77] ; ret 0x8141
0x00000000004047e5 : inc dword ptr [rcx - 0xb366b0f] ; mov word ptr [rbp - 0x77], es ; ret 0x8141
0x0000000000408dfb : inc dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000404625 : inc dword ptr [rcx] ; jmp 0x404678
0x0000000000411a4b : inc esp ; adc byte ptr [rax], al ; add byte ptr [rcx + rdx*4 - 1], ch ; jmp rsp
0x0000000000411b0b : inc esp ; adc eax, dword ptr [rax] ; add byte ptr [rax + rax*8 - 1], ch ; jmp rsp
0x000000000041194b : inc esp ; or al, 0 ; add ah, bl ; jg 0x41195a ; jmp rsp
0x0000000000404d47 : insb byte ptr [rdi], dx ; rol byte ptr [rcx - 0xe], 1 ; jmp qword ptr [rcx]
0x000000000040708b : insd dword ptr [rdi], dx ; loopne 0x4070ee ; ret
0x000000000040d195 : int 0x80
0x00000000004047e7 : int1 ; xchg eax, esp ; leave ; hlt ; mov word ptr [rbp - 0x77], es ; ret 0x8141
0x0000000000401d53 : ja 0x401d5a ; pop rbp ; ret
0x000000000040a836 : ja 0x40a843 ; pop rbp ; ret
0x000000000040a856 : ja 0x40a86b ; pop rbp ; ret
0x0000000000412421 : jb 0x412424 ; jmp qword ptr [rdx]
0x00000000004062a6 : jbe 0x4062a7 ; adc dword ptr cs:[rcx - 0xa], eax ; jmp qword ptr [rcx]
0x00000000004126e1 : jbe 0x4126e4 ; call qword ptr [rcx]
0x0000000000401d5f : je 0x401d5d ; pop rbp ; mov edi, 0x614320 ; jmp rax
0x0000000000412541 : je 0x412544 ; jmp qword ptr [rax]
0x0000000000412540 : je 0x412545 ; jmp qword ptr [rax]
0x000000000040a4e5 : jg 0x40a489 ; ret
0x000000000040a4f5 : jg 0x40a499 ; ret
0x0000000000411951 : jg 0x411954 ; jmp rsp
0x0000000000407088 : jge 0x407070 ; fld xword ptr [rbp - 0x20] ; pop rbp ; ret
0x0000000000409daa : jge 0x409daa ; mov rax, qword ptr [rdi] ; pop rbp ; ret
0x000000000040a832 : jge 0x40a833 ; mov qword ptr [rdi + 8], rsi ; pop rbp ; ret
0x000000000040a852 : jge 0x40a853 ; mov qword ptr [rdi + 0x10], rsi ; pop rbp ; ret
0x000000000040c36a : jle 0x40c3b9 ; ret 0x418a
0x000000000040c378 : jle 0x40c3c7 ; ret 0x498a
0x000000000040189b : jmp 0x4017f7
0x000000000040286f : jmp 0x4019fb
0x0000000000404627 : jmp 0x404676
0x0000000000404913 : jmp 0x4049af
0x000000000040d668 : jmp 0xffffffffc2ca1e72
0x0000000000411c8b : jmp qword ptr [rax]
0x0000000000402875 : jmp qword ptr [rcx]
0x0000000000412423 : jmp qword ptr [rdx]
0x0000000000401d67 : jmp rax
0x00000000004022f3 : jmp rcx
0x0000000000401da7 : jmp rdx
0x0000000000411953 : jmp rsp
0x0000000000401d90 : jne 0x401d97 ; pop rbp ; ret
0x0000000000412661 : jne 0x412664 ; jmp qword ptr [rdx]
0x0000000000405244 : jo 0x405253 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407c75 : jo 0x407cd6 ; ret
0x000000000040929f : jo 0x409305 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000409944 : jo 0x4099a5 ; ret
0x0000000000409a7e : jo 0x409adf ; ret
0x000000000040c558 : jo 0x40c51b ; sbb eax, dword ptr [rip + 0x148a3f2] ; ret 0x8948
0x000000000040a99a : jp 0x40a9ae ; call rax
0x000000000040c52f : jp 0x40c557 ; lea esi, dword ptr [rbx + 0x294879c8] ; ret 0x8948
0x000000000040ef4a : lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000406267 : lea edi, dword ptr [rax + 0xffffffe] ; cdq ; ret 0xb60f
0x0000000000406215 : lea esi, dword ptr [rax + 0xffffffe] ; cdq ; ret 0xb60f
0x000000000040c531 : lea esi, dword ptr [rbx + 0x294879c8] ; ret 0x8948
0x00000000004047e9 : leave ; hlt ; mov word ptr [rbp - 0x77], es ; ret 0x8141
0x00000000004074d6 : leave ; test dword ptr [rcx], esp ; ret 0xd709
0x000000000040defc : loope 0x40df21 ; ret 0x8941
0x0000000000407089 : loopne 0x40706b ; insd dword ptr [rdi], dx ; loopne 0x4070f0 ; ret
0x000000000040708c : loopne 0x4070ed ; ret
0x0000000000409d97 : loopne 0x409de7 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000409d96 : loopne 0x409de8 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040b49c : loopne 0x40b4ef ; mov edx, 0xb9bb83c3 ; call 0x494076e3
0x000000000040def8 : loopne 0x40df14 ; in eax, -0x4a ; loope 0x40df25 ; ret 0x8941
0x000000000040e5a0 : loopne 0x40e5a8 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000411c11 : loopne 0x411c14 ; jmp rsp
0x0000000000402785 : mov ah, -0x77 ; ret 0xca29
0x0000000000412be1 : mov ah, -1 ; jmp rax
0x000000000040561a : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004096a8 : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000405e9e : mov al, 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000404d83 : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000403a08 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000404d45 : mov bh, 0x1b ; insb byte ptr [rdi], dx ; rol byte ptr [rcx - 0xe], 1 ; jmp qword ptr [rcx]
0x00000000004057a1 : mov byte ptr [0x614390], al ; pop rbp ; ret
0x0000000000405243 : mov byte ptr [rax + 6], dh ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405242 : mov byte ptr [rax + 6], sil ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401dc3 : mov byte ptr [rip + 0x2125ae], 1 ; ret
0x0000000000404650 : mov ch, -0x1c ; idiv bh ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000412c01 : mov ch, -1 ; call qword ptr [rsi]
0x00000000004074d4 : mov ch, 0x1c ; leave ; test dword ptr [rcx], esp ; ret 0xd709
0x000000000040406a : mov ch, 0x30 ; idiv edi ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004039c4 : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004028d8 : mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402a43 : mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000403a0e : mov dh, -0x40 ; pop rbp ; ret
0x0000000000411a91 : mov dl, -1 ; jmp rsp
0x000000000040577d : mov dword ptr [0x614388], edi ; pop rbp ; ret
0x0000000000407b26 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000407ae8 : mov dword ptr [rax], eax ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004079a4 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000407ae7 : mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000402109 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000405618 : mov dword ptr [rbp - 0x50], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401ff7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402025 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040f7cd : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000407b9e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040a855 : mov dword ptr [rdi + 0x10], esi ; pop rbp ; ret
0x000000000040a835 : mov dword ptr [rdi + 8], esi ; pop rbp ; ret
0x0000000000406268 : mov eax, 0xffffffe ; cdq ; ret 0xb60f
0x0000000000407958 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004058dd : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405c73 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407955 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000405bcf : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040ac27 : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405a00 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040790d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040799e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000407740 : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040727c : mov eax, dword ptr [rbp - 0x1c] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000409d95 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407aea : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040b8dd : mov eax, dword ptr [rbp - 0x30] ; mov rax, qword ptr [rax] ; pop rbp ; ret
0x0000000000407c6f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000409819 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040a0ee : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040e604 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040ca6c : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004038d7 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000407595 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040e02d : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040d55d : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405764 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004056b2 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000405406 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040f7d0 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000409dad : mov eax, dword ptr [rdi] ; pop rbp ; ret
0x000000000040a061 : mov eax, edi ; pop rbp ; ret
0x0000000000404de9 : mov eax, esi ; pop rbp ; ret
0x0000000000401deb : mov ebp, esp ; call rax
0x0000000000401d51 : mov ebp, esp ; ja 0x401d5c ; pop rbp ; ret
0x000000000040d1ad : mov ecx, 0x5b2a830a ; ret
0x000000000040b4ae : mov ecx, 0xb9bb83c3 ; call 0x494076f1
0x00000000004022ec : mov ecx, dword ptr [rax*8 + 0x40f920] ; jmp rcx
0x0000000000407d32 : mov ecx, dword ptr [rax*8 + 0x410d20] ; jmp rcx
0x0000000000408056 : mov ecx, dword ptr [rax*8 + 0x410d68] ; jmp rcx
0x000000000040cb6e : mov ecx, dword ptr [rax*8 + 0x411258] ; jmp rcx
0x000000000040dd5a : mov ecx, dword ptr [rax*8 + 0x4115d0] ; jmp rcx
0x000000000040dcda : mov ecx, dword ptr [rax*8 + 0x411630] ; jmp rcx
0x00000000004079a1 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040a45f : mov edi, 0x54582f16 ; ret
0x0000000000401de5 : mov edi, 0x613e20 ; mov rbp, rsp ; call rax
0x0000000000401d62 : mov edi, 0x614320 ; jmp rax
0x0000000000401da2 : mov edi, 0x614320 ; jmp rdx
0x000000000040a851 : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x10], rsi ; pop rbp ; ret
0x000000000040a831 : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 8], rsi ; pop rbp ; ret
0x0000000000409da9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi] ; pop rbp ; ret
0x000000000040a999 : mov edi, dword ptr [rdx + 0x10] ; call rax
0x000000000040f887 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000411a11 : mov edi, edi ; jmp rsp
0x000000000040f886 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000040a46f : mov edx, 0x54582f16 ; ret
0x000000000040b49e : mov edx, 0xb9bb83c3 ; call 0x494076e1
0x000000000040a995 : mov edx, dword ptr [rbp - 8] ; mov rdi, qword ptr [rdx + 0x10] ; call rax
0x0000000000401da0 : mov esi, eax ; mov edi, 0x614320 ; jmp rdx
0x000000000040577c : mov qword ptr [0x614388], rdi ; pop rbp ; ret
0x0000000000407b9d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040a854 : mov qword ptr [rdi + 0x10], rsi ; pop rbp ; ret
0x000000000040a834 : mov qword ptr [rdi + 8], rsi ; pop rbp ; ret
0x0000000000402784 : mov r12b, -0x77 ; ret 0xca29
0x0000000000405619 : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040b8e0 : mov rax, qword ptr [rax] ; pop rbp ; ret
0x00000000004058dc : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405c72 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407954 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000405bce : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004059ff : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040790c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040773f : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000409d94 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b8dc : mov rax, qword ptr [rbp - 0x30] ; mov rax, qword ptr [rax] ; pop rbp ; ret
0x0000000000407c6e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000409818 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040d55c : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405763 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004056b1 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000405405 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000409dac : mov rax, qword ptr [rdi] ; pop rbp ; ret
0x000000000040a060 : mov rax, rdi ; pop rbp ; ret
0x0000000000404de8 : mov rax, rsi ; pop rbp ; ret
0x0000000000401dea : mov rbp, rsp ; call rax
0x0000000000401d50 : mov rbp, rsp ; ja 0x401d5d ; pop rbp ; ret
0x00000000004022eb : mov rcx, qword ptr [rax*8 + 0x40f920] ; jmp rcx
0x0000000000407d31 : mov rcx, qword ptr [rax*8 + 0x410d20] ; jmp rcx
0x0000000000408055 : mov rcx, qword ptr [rax*8 + 0x410d68] ; jmp rcx
0x000000000040cb6d : mov rcx, qword ptr [rax*8 + 0x411258] ; jmp rcx
0x000000000040dd59 : mov rcx, qword ptr [rax*8 + 0x4115d0] ; jmp rcx
0x000000000040dcd9 : mov rcx, qword ptr [rax*8 + 0x411630] ; jmp rcx
0x000000000040a850 : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x10], rsi ; pop rbp ; ret
0x000000000040a830 : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 8], rsi ; pop rbp ; ret
0x0000000000409da8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi] ; pop rbp ; ret
0x000000000040a998 : mov rdi, qword ptr [rdx + 0x10] ; call rax
0x000000000040a994 : mov rdx, qword ptr [rbp - 8] ; mov rdi, qword ptr [rdx + 0x10] ; call rax
0x0000000000401d9f : mov rsi, rax ; mov edi, 0x614320 ; jmp rdx
0x00000000004047eb : mov word ptr [rbp - 0x77], es ; ret 0x8141
0x000000000040471b : movabs al, byte ptr [0x8948d62948c68948] ; ret 0x2948
0x0000000000411d0c : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax], ah ; add edi, edi ; jmp rdx
0x000000000040286e : movsb byte ptr [rdi], byte ptr [rsi] ; jmp 0x4019fc
0x00000000004075cc : movsxd rax, ecx ; pop rbp ; ret
0x00000000004039c3 : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004028d7 : movzx eax, al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402a42 : movzx eax, al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000403a0d : movzx eax, al ; pop rbp ; ret
0x0000000000412c00 : nop ; mov ch, -1 ; call qword ptr [rsi]
0x000000000040f8a8 : nop dword ptr [rax + rax] ; ret
0x000000000041194d : or al, 0 ; add ah, bl ; jg 0x411958 ; jmp rsp
0x00000000004083bd : or al, 0x18 ; ret 0x6451
0x000000000040cb6f : or al, 0xffffffffffffffc5 ; pop rax ; adc al, byte ptr [rcx] ; jmp rcx
0x00000000004126dd : or al, byte ptr [rax] ; add al, al ; jbe 0x4126e8 ; call qword ptr [rcx]
0x000000000040a993 : or byte ptr [rax - 0x75], cl ; push rbp ; clc ; mov rdi, qword ptr [rdx + 0x10] ; call rax
0x000000000040a05f : or byte ptr [rax - 0x77], cl ; clc ; pop rbp ; ret
0x000000000040acff : or byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000404c79 : or dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040df9b : or dword ptr [rsp + rax + 0x21], esp ; ret 0xd709
0x0000000000409a01 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000411791 : or edi, edi ; call rsp
0x000000000040bf68 : out -0x36, al ; add dword ptr [rax + 0x29], ecx ; ret 0x8948
0x000000000040a05e : out 8, eax ; mov rax, rdi ; pop rbp ; ret
0x000000000040f89c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000406f68 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040f89e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000406f6a : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040f8a0 : pop r14 ; pop r15 ; ret
0x0000000000404c7d : pop r14 ; pop rbp ; ret
0x0000000000406f6c : pop r15 ; pop rbp ; ret
0x000000000040f8a2 : pop r15 ; ret
0x000000000040cb71 : pop rax ; adc al, byte ptr [rcx] ; jmp rcx
0x000000000040a462 : pop rax ; push rsp ; ret
0x0000000000401dc2 : pop rbp ; mov byte ptr [rip + 0x2125ae], 1 ; ret
0x0000000000401d61 : pop rbp ; mov edi, 0x614320 ; jmp rax
0x0000000000401d9e : pop rbp ; mov rsi, rax ; mov edi, 0x614320 ; jmp rdx
0x000000000040f89b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040f89f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401d55 : pop rbp ; ret
0x0000000000406f67 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040d02d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000404c7c : pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040dfc5 : pop rbx ; pop rbp ; ret
0x000000000040d1b1 : pop rbx ; ret
0x0000000000406f6d : pop rdi ; pop rbp ; ret
0x000000000040f8a3 : pop rdi ; ret
0x0000000000406f6b : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040f8a1 : pop rsi ; pop r15 ; ret
0x0000000000404c7e : pop rsi ; pop rbp ; ret
0x000000000040f89d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000406f69 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040788b : push 0x48006143 ; add esp, 0x30 ; pop rbp ; ret
0x0000000000412660 : push rax ; jne 0x412665 ; jmp qword ptr [rdx]
0x000000000040540c : push rax ; pop rbp ; ret
0x000000000040ca09 : push rax ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040a996 : push rbp ; clc ; mov rdi, qword ptr [rdx + 0x10] ; call rax
0x000000000040a66a : push rbp ; fmul dword ptr [rax - 0x42] ; ret
0x0000000000401de4 : push rbp ; mov edi, 0x613e20 ; mov rbp, rsp ; call rax
0x0000000000402711 : push rbp ; ror byte ptr [rax - 0x75], 0x3c ; ret 0x8b48
0x0000000000405475 : push rbp ; ror byte ptr [rax - 0x77], 1 ; ret 0xe1e8
0x000000000040a463 : push rsp ; ret
0x0000000000407086 : rcr ebx, 0x7d ; loopne 0x40706e ; insd dword ptr [rdi], dx ; loopne 0x4070f3 ; ret
0x0000000000400293 : ret
0x00000000004066b9 : ret 0
0x0000000000402f3f : ret 0x148
0x000000000040bc64 : ret 0x14c
0x000000000040943e : ret 0x1b2
0x0000000000401ca2 : ret 0x2125
0x0000000000401aa2 : ret 0x2126
0x00000000004018a2 : ret 0x2127
0x000000000040bde2 : ret 0x2149
0x0000000000405e35 : ret 0x26a8
0x000000000040491c : ret 0x28f5
0x00000000004032a9 : ret 0x2948
0x00000000004087c9 : ret 0x294c
0x00000000004087e5 : ret 0x294d
0x000000000040c07a : ret 0x314c
0x00000000004031a5 : ret 0x3948
0x00000000004087fd : ret 0x3de8
0x000000000040c36c : ret 0x418a
0x000000000040b4a5 : ret 0x48ff
0x000000000040c37a : ret 0x498a
0x000000000040735b : ret 0x4fe8
0x0000000000404d77 : ret 0x5588
0x0000000000407a24 : ret 0x5589
0x00000000004083bf : ret 0x6451
0x0000000000406a82 : ret 0x8041
0x0000000000402765 : ret 0x8141
0x000000000040ad87 : ret 0x8148
0x000000000040c05d : ret 0x8149
0x00000000004040fe : ret 0x830f
0x000000000040f60f : ret 0x840
0x00000000004067cc : ret 0x8589
0x0000000000408a63 : ret 0x8840
0x000000000040cb29 : ret 0x8844
0x000000000040defe : ret 0x8941
0x0000000000404828 : ret 0x8944
0x0000000000403ae4 : ret 0x8948
0x00000000004087e8 : ret 0x8949
0x000000000040897c : ret 0x89a5
0x0000000000402716 : ret 0x8b48
0x0000000000406df1 : ret 0x941
0x000000000040c884 : ret 0x948
0x0000000000404560 : ret 0x949
0x0000000000406137 : ret 0xa
0x00000000004023eb : ret 0xb0
0x000000000040621c : ret 0xb60f
0x0000000000403df9 : ret 0xb848
0x000000000040f189 : ret 0xb849
0x00000000004068b1 : ret 0xbeb6
0x0000000000401d85 : ret 0xc148
0x000000000040eef0 : ret 0xc2f6
0x0000000000402b87 : ret 0xca21
0x0000000000402787 : ret 0xca29
0x0000000000409cd3 : ret 0xd284
0x000000000040746e : ret 0xd709
0x0000000000403621 : ret 0xd9e8
0x0000000000405479 : ret 0xe1e8
0x00000000004061d8 : ret 0xe280
0x000000000040908c : ret 0xee8
0x0000000000408a78 : ret 0xf180
0x000000000040eee3 : ret 0xf280
0x000000000040285d : ret 0xf281
0x000000000040a374 : ret 0xf6e8
0x0000000000403906 : ret 0xffff
0x0000000000400a78 : ret 1
0x000000000040ef50 : ret 2
0x0000000000405e2f : ret 8
0x000000000040b884 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000405026 : rol byte ptr [rbp + 9], 1 ; ret
0x0000000000407ae6 : rol byte ptr [rcx + rcx*4], 1 ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000404d48 : rol byte ptr [rcx - 0xe], 1 ; jmp qword ptr [rcx]
0x0000000000412e80 : rol dh, -1 ; jmp rdx
0x000000000040d190 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000040365c : ror byte ptr [r8 - 0x77], 1 ; ret 0x2948
0x0000000000407c70 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x407cdb ; ret
0x0000000000401d8c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401d9b ; pop rbp ; ret
0x0000000000402712 : ror byte ptr [rax - 0x75], 0x3c ; ret 0x8b48
0x000000000040d191 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x000000000040365d : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x00000000004087c6 : ror byte ptr [rax - 0x77], 1 ; ret 0x294c
0x0000000000405476 : ror byte ptr [rax - 0x77], 1 ; ret 0xe1e8
0x0000000000407c71 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x407cda ; ret
0x0000000000402a44 : ror byte ptr [rax - 0x7d], -0x3c ; pop rbp ; ret
0x00000000004037ac : ror byte ptr [rax - 0x7f], -0x3c ; and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040bc61 : ror byte ptr [rcx + 0x29], cl ; ret 0x14c
0x000000000040bc4c : ror byte ptr [rcx + 0x29], cl ; ret 0x294c
0x0000000000404c78 : ror byte ptr [rcx], 0 ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040a67b : ror dword ptr [rax - 0x46], 1 ; ret
0x0000000000406243 : sar dh, -1 ; dec dword ptr [rdi] ; cdq ; ret 0xb60f
0x0000000000401d8e : sar eax, 1 ; jne 0x401d99 ; pop rbp ; ret
0x0000000000401d8d : sar rax, 1 ; jne 0x401d9a ; pop rbp ; ret
0x00000000004074d5 : sbb al, -0x37 ; test dword ptr [rcx], esp ; ret 0xd709
0x000000000040c55a : sbb eax, dword ptr [rip + 0x148a3f2] ; ret 0x8948
0x0000000000411df1 : sbb edi, edi ; jmp qword ptr [rax]
0x0000000000401dc5 : scasb al, byte ptr [rdi] ; and eax, 0xf3010021 ; ret
0x000000000040a05d : shl edi, 8 ; mov rax, rdi ; pop rbp ; ret
0x000000000040a05c : shl rdi, 8 ; mov rax, rdi ; pop rbp ; ret
0x00000000004050ca : shr cl, 1 ; ret 0xffff
0x00000000004050c9 : shr r9b, 1 ; ret 0xffff
0x0000000000412bfd : sldt word ptr [rax] ; nop ; mov ch, -1 ; call qword ptr [rsi]
0x0000000000403a0a : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000407556 : sub ah, byte ptr [rcx] ; ret 0xd709
0x000000000040322d : sub dword ptr [rbp + 0x294d2c61], ecx ; fimul dword ptr [rcx - 0x7f] ; ret 1
0x000000000040d1af : sub dword ptr [rdx], 0x5b ; ret
0x000000000040f901 : sub esp, 8 ; add rsp, 8 ; ret
0x000000000040f900 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040df9a : test al, 9 ; add al, 0x21 ; ret 0xd709
0x00000000004119d1 : test bh, bh ; jmp rsp
0x000000000040f8aa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004075c6 : test dh, dh ; cmove ecx, edx ; movsxd rax, ecx ; pop rbp ; ret
0x00000000004074d7 : test dword ptr [rcx], esp ; ret 0xd709
0x0000000000406dec : test eax, 0x2140e457 ; ret 0x941
0x000000000040dcdc : vmovhps xmm8, xmm9, qword ptr [rcx] ; jmp rcx
0x000000000040cb70 : vmovlps xmm8, xmm4, qword ptr [rcx] ; jmp rcx
0x000000000040dd5c : vunpckhps xmm0, xmm5, xmmword ptr [rcx] ; jmp rcx
0x0000000000404cfe : xchg byte ptr [r9 - 0xe], r8b ; jmp qword ptr [rcx]
0x0000000000404cff : xchg byte ptr [rcx - 0xe], al ; jmp qword ptr [rcx]
0x0000000000404d76 : xchg eax, ebp ; ret 0x5588
0x0000000000408a62 : xchg eax, ebp ; ret 0x8840
0x00000000004067c5 : xchg eax, ebp ; ret 0xe280
0x00000000004115d0 : xchg eax, edi ; fld qword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000406a81 : xchg eax, edx ; ret 0x8041
0x00000000004061d7 : xchg eax, edx ; ret 0xe280
0x00000000004047e8 : xchg eax, esp ; leave ; hlt ; mov word ptr [rbp - 0x77], es ; ret 0x8141
0x0000000000409cd2 : xchg eax, esp ; ret 0xd284
0x0000000000412bfc : xchg eax, esp ; sldt word ptr [rax] ; nop ; mov ch, -1 ; call qword ptr [rsi]
0x0000000000405ad6 : xor al, 0x6a ; imul eax, dword ptr [rax - 0x77], 0x7a ; add cl, byte ptr [rax - 0x77] ; ret 0x148
0x00000000004051bf : xor byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040f27e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000409797 : xor eax, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x0000000000407ae5 : xor eax, edx ; mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000411f71 : xor edi, edi ; call qword ptr [rax]
