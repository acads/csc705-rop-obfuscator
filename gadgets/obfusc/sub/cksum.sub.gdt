0x0000000000404469 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406dff : add bl, dh ; ret
0x00000000004054ad : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000406dfd : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000406dfb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000407424 : add byte ptr [rax], al ; add byte ptr [rax], al ; call 0x102f221
0x00000000004025bb : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000406dfc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040710c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x9796
0x0000000000403b0e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000404d7e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000408b81 : add byte ptr [rax], al ; add byte ptr [rsi + rax], ch ; add byte ptr [rax], bl ; ret 0xffff
0x00000000004064cc : add byte ptr [rax], al ; add cl, ch ; ret 2
0x0000000000404431 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404140 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040123b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000407426 : add byte ptr [rax], al ; call 0x102f21f
0x00000000004083e2 : add byte ptr [rax], al ; fdivr st(7) ; jmp qword ptr [rax]
0x0000000000401439 : add byte ptr [rax], al ; jmp 0x401259
0x0000000000402a02 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004025bd : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000408463 : add byte ptr [rax], al ; out -1, eax ; jmp qword ptr [rax]
0x00000000004027f8 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040534b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000404100 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000406dfe : add byte ptr [rax], al ; ret
0x000000000040710e : add byte ptr [rax], al ; ret 0x9796
0x0000000000408492 : add byte ptr [rax], al ; sub al, -1 ; jmp rax
0x0000000000408b87 : add byte ptr [rax], bl ; ret 0xffff
0x0000000000408453 : add byte ptr [rax], dh ; out -1, al ; jmp rax
0x0000000000408393 : add byte ptr [rax], dl ; sar bh, cl ; jmp rax
0x000000000040534c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000404101 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000407107 : add byte ptr [rbx], bl ; mov al, -0x2c ; pop rbx ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x9796
0x00000000004083e0 : add byte ptr [rbx], cl ; add byte ptr [rax], al ; fdivr st(7) ; jmp qword ptr [rax]
0x0000000000406c9c : add byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x0000000000401688 : add byte ptr [rcx], al ; ret
0x00000000004064c8 : add byte ptr [rdi], cl ; lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000403b10 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000404d80 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000408b83 : add byte ptr [rsi + rax], ch ; add byte ptr [rax], bl ; ret 0xffff
0x00000000004064ce : add cl, ch ; ret 2
0x0000000000405989 : add dword ptr [rax - 0x77], ecx ; ret 0x8148
0x000000000040442f : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040534a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004040ff : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040212c : add dword ptr [rax], eax ; pop rbp ; ret
0x0000000000406b5d : add dword ptr [rax], ecx ; ret 0x840
0x000000000040683a : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401684 : add eax, 0x208c16 ; add ebx, esi ; ret
0x00000000004064cb : add eax, 0xe9000000 ; ret 2
0x000000000040164b : add eax, edx ; sar rax, 1 ; jne 0x40165c ; pop rbp ; ret
0x0000000000401689 : add ebx, esi ; ret
0x00000000004017bb : add esp, 0x10 ; pop rbp ; ret
0x0000000000402128 : add esp, 0x10080 ; pop rbp ; ret
0x00000000004067fc : add esp, 0x130 ; pop rbp ; ret
0x000000000040567c : add esp, 0x1a0 ; pop rbp ; ret
0x00000000004027f4 : add esp, 0x1c0 ; pop rbp ; ret
0x00000000004023b7 : add esp, 0x20 ; pop rbp ; ret
0x000000000040189d : add esp, 0x30 ; pop rbp ; ret
0x000000000040484c : add esp, 0x50 ; pop rbp ; ret
0x0000000000402d23 : add esp, 0x70 ; pop rbp ; ret
0x000000000040475a : add esp, 0x90 ; pop rbp ; ret
0x0000000000405513 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040123e : add esp, 8 ; ret
0x000000000040164a : add rax, rdx ; sar rax, 1 ; jne 0x40165d ; pop rbp ; ret
0x00000000004017ba : add rsp, 0x10 ; pop rbp ; ret
0x0000000000402127 : add rsp, 0x10080 ; pop rbp ; ret
0x00000000004067fb : add rsp, 0x130 ; pop rbp ; ret
0x000000000040567b : add rsp, 0x1a0 ; pop rbp ; ret
0x00000000004027f3 : add rsp, 0x1c0 ; pop rbp ; ret
0x00000000004023b6 : add rsp, 0x20 ; pop rbp ; ret
0x000000000040189c : add rsp, 0x30 ; pop rbp ; ret
0x000000000040484b : add rsp, 0x50 ; pop rbp ; ret
0x0000000000402d22 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000404759 : add rsp, 0x90 ; pop rbp ; ret
0x0000000000405512 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040123d : add rsp, 8 ; ret
0x00000000004051d3 : and al, 0x18 ; mov al, 0 ; call 0x401466
0x0000000000406839 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401687 : and byte ptr [rax], al ; add ebx, esi ; ret
0x000000000040213f : and eax, 0x60a2a8 ; pop rbp ; ret
0x0000000000402163 : and eax, 0x60a2b0 ; pop rbp ; ret
0x0000000000407428 : call 0x102f21d
0x00000000004050bd : call 0x401372
0x00000000004051d7 : call 0x401462
0x0000000000404139 : call 0xffffffffe902ca89
0x0000000000404138 : call 0xffffffffe902ca8a
0x0000000000406dd9 : call qword ptr [r12 + rbx*8]
0x00000000004085e3 : call qword ptr [rax]
0x0000000000408603 : call qword ptr [rsi]
0x0000000000406dda : call qword ptr [rsp + rbx*8]
0x00000000004016ad : call rax
0x0000000000403e8c : call rbx
0x0000000000408823 : call rdi
0x00000000004067fa : clc ; add rsp, 0x130 ; pop rbp ; ret
0x000000000040587f : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404d91 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040164f : clc ; jne 0x401658 ; pop rbp ; ret
0x0000000000402bd5 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000406d1f : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000406d22 : clc ; pop rbp ; ret
0x0000000000405ca6 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405c49 : cld ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405dce : cld ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406d1c : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000405ca3 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405c46 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405dcb : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404f70 : cld ; ret
0x000000000040160d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401620 ; pop rbp ; ret
0x0000000000404e8c : cwde ; mov rcx, qword ptr [rax*8 + 0x407e38] ; jmp rcx
0x000000000040205d : dec dword ptr [rax + 0x21] ; ret 0x8948
0x0000000000406534 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000401d60 : dec dword ptr [rax - 0x77] ; ret 0x8148
0x0000000000403892 : dec dword ptr [rcx - 0x77] ; ret 0x294d
0x0000000000403c20 : enter 0x4b05, 0x34 ; fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x00000000004083e5 : fdivr st(7) ; jmp qword ptr [rax]
0x0000000000403c24 : fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x0000000000406ddc : fmul qword ptr [rax - 0x7d] ; ret
0x00000000004017b9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401620 : hlt ; pop rbp ; mov edi, 0x60a248 ; jmp rax
0x0000000000403eab : inc dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x000000000040844f : inc eax ; or al, 0 ; add byte ptr [rax], dh ; out -1, al ; jmp rax
0x000000000040838f : inc eax ; or dword ptr [rax], eax ; add byte ptr [rax], dl ; sar bh, cl ; jmp rax
0x00000000004054b5 : int 0x80
0x0000000000401613 : ja 0x40161a ; pop rbp ; ret
0x000000000040161f : je 0x40161d ; pop rbp ; mov edi, 0x60a248 ; jmp rax
0x0000000000407650 : je 0x407687 ; mov al, -0x7f ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040143b : jmp 0x401257
0x0000000000405988 : jmp 0xffffffffc2c9a192
0x00000000004081f7 : jmp qword ptr [rax]
0x0000000000403326 : jmp qword ptr [rcx]
0x000000000040890b : jmp qword ptr [rdx]
0x0000000000401627 : jmp rax
0x0000000000404e95 : jmp rcx
0x0000000000401667 : jmp rdx
0x0000000000401650 : jne 0x401657 ; pop rbp ; ret
0x0000000000402d25 : jo 0x402d86 ; ret
0x000000000040434f : jo 0x4043b5 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004049f4 : jo 0x404a55 ; ret
0x0000000000404b2e : jo 0x404b8f ; ret
0x0000000000401ccd : jp 0x401ca6 ; les r9, ptr [r8 - 0x77] ; ret 0x2948
0x00000000004064ca : lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000401ccf : les r9, ptr [r8 - 0x77] ; ret 0x2948
0x00000000004023eb : loopne 0x40243b ; add esp, 0x20 ; pop rbp ; ret
0x00000000004023ea : loopne 0x40243c ; add esp, 0x20 ; pop rbp ; ret
0x0000000000407109 : mov al, -0x2c ; pop rbx ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x9796
0x0000000000407652 : mov al, -0x7f ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004051d5 : mov al, 0 ; call 0x401464
0x00000000004048cb : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000404758 : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000406836 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000402161 : mov byte ptr [0x60a2b0], al ; pop rbp ; ret
0x0000000000407423 : mov byte ptr [rax], 0 ; add byte ptr [rax], al ; call 0x102f222
0x0000000000401683 : mov byte ptr [rip + 0x208c16], 1 ; ret
0x000000000040683c : mov dh, -0x40 ; pop rbp ; ret
0x000000000040213d : mov dword ptr [0x60a2a8], edi ; pop rbp ; ret
0x0000000000402bd6 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000402b98 : mov dword ptr [rax], eax ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000402a54 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000402b97 : mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040514f : mov dword ptr [rbp - 0x110], eax ; call 0x401378
0x00000000004023e9 : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401899 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004017b7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004050b7 : mov dword ptr [rbp - 0xf0], eax ; call 0x401378
0x0000000000406d1d : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402c4e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004051d1 : mov dword ptr [rsp + 0x18], ebx ; mov al, 0 ; call 0x401468
0x0000000000402a08 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040579b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004023b3 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402a05 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040230f : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405a93 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004029bd : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402a4e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004025c0 : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000402b9a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000402d1f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004048c9 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000405ca4 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405c47 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405dcc : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040587d : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404d8f : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406d20 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004016ab : mov ebp, esp ; call rax
0x0000000000401611 : mov ebp, esp ; ja 0x40161c ; pop rbp ; ret
0x00000000004054cd : mov ecx, 0x5b2a830a ; ret
0x0000000000402de2 : mov ecx, dword ptr [rax*8 + 0x407930] ; jmp rcx
0x0000000000403106 : mov ecx, dword ptr [rax*8 + 0x407978] ; jmp rcx
0x0000000000404e8e : mov ecx, dword ptr [rax*8 + 0x407e38] ; jmp rcx
0x0000000000402a51 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004016a5 : mov edi, 0x609e20 ; mov rbp, rsp ; call rax
0x0000000000401622 : mov edi, 0x60a248 ; jmp rax
0x0000000000401662 : mov edi, 0x60a248 ; jmp rdx
0x0000000000406dd7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000406dd6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000401660 : mov esi, eax ; mov edi, 0x60a248 ; jmp rdx
0x000000000040213c : mov qword ptr [0x60a2a8], rdi ; pop rbp ; ret
0x000000000040514e : mov qword ptr [rbp - 0x110], rax ; call 0x401379
0x00000000004050b6 : mov qword ptr [rbp - 0xf0], rax ; call 0x401379
0x0000000000402c4d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004051d0 : mov qword ptr [rsp + 0x18], r11 ; mov al, 0 ; call 0x401469
0x00000000004048ca : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040579a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004023b2 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402a04 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040230e : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405a92 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004029bc : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004025bf : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000402d1e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004048c8 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040587c : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404d8e : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004016aa : mov rbp, rsp ; call rax
0x0000000000401610 : mov rbp, rsp ; ja 0x40161d ; pop rbp ; ret
0x0000000000402de1 : mov rcx, qword ptr [rax*8 + 0x407930] ; jmp rcx
0x0000000000403105 : mov rcx, qword ptr [rax*8 + 0x407978] ; jmp rcx
0x0000000000404e8d : mov rcx, qword ptr [rax*8 + 0x407e38] ; jmp rcx
0x000000000040165f : mov rsi, rax ; mov edi, 0x60a248 ; jmp rdx
0x0000000000401686 : mov word ptr [rax], fs ; add byte ptr [rcx], al ; ret
0x000000000040683b : movzx eax, al ; pop rbp ; ret
0x0000000000406df8 : nop dword ptr [rax + rax] ; ret
0x0000000000408451 : or al, 0 ; add byte ptr [rax], dh ; out -1, al ; jmp rax
0x000000000040346d : or al, 0x18 ; ret 0x6451
0x0000000000408391 : or dword ptr [rax], eax ; add byte ptr [rax], dl ; sar bh, cl ; jmp rax
0x0000000000404ab1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000408455 : out -1, al ; jmp rax
0x0000000000408465 : out -1, eax ; jmp qword ptr [rax]
0x0000000000406dec : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000404351 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406dee : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000404353 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406df0 : pop r14 ; pop r15 ; ret
0x0000000000404103 : pop r14 ; pop rbp ; ret
0x0000000000404355 : pop r15 ; pop rbp ; ret
0x0000000000406df2 : pop r15 ; ret
0x0000000000401682 : pop rbp ; mov byte ptr [rip + 0x208c16], 1 ; ret
0x0000000000401621 : pop rbp ; mov edi, 0x60a248 ; jmp rax
0x000000000040165e : pop rbp ; mov rsi, rax ; mov edi, 0x60a248 ; jmp rdx
0x0000000000406deb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000406def : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401615 : pop rbp ; ret
0x000000000040710b : pop rbx ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x9796
0x0000000000404350 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040534d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000404102 : pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004054d1 : pop rbx ; ret
0x0000000000404356 : pop rdi ; pop rbp ; ret
0x0000000000406df3 : pop rdi ; ret
0x0000000000404354 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000406df1 : pop rsi ; pop r15 ; ret
0x0000000000404104 : pop rsi ; pop rbp ; ret
0x00000000004051d2 : pop rsp ; and al, 0x18 ; mov al, 0 ; call 0x401467
0x0000000000406ded : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000404352 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040484e : push rax ; pop rbp ; ret
0x00000000004016a4 : push rbp ; mov edi, 0x609e20 ; mov rbp, rsp ; call rax
0x0000000000401241 : ret
0x0000000000406702 : ret 0
0x0000000000406716 : ret 0x148
0x00000000004044ee : ret 0x1b2
0x0000000000401442 : ret 0x208c
0x0000000000401cd3 : ret 0x2948
0x0000000000403879 : ret 0x294c
0x0000000000403895 : ret 0x294d
0x00000000004038ad : ret 0x2de8
0x0000000000402ad4 : ret 0x5589
0x000000000040346f : ret 0x6451
0x0000000000401d63 : ret 0x8148
0x0000000000406b5f : ret 0x840
0x0000000000403b13 : ret 0x8840
0x0000000000404e49 : ret 0x8844
0x0000000000402060 : ret 0x8948
0x0000000000403898 : ret 0x8949
0x0000000000403a2c : ret 0x89a5
0x000000000040387c : ret 0x8b48
0x0000000000401ddd : ret 0x948
0x0000000000407110 : ret 0x9796
0x0000000000401c86 : ret 0xb0
0x0000000000406709 : ret 0xb849
0x0000000000401645 : ret 0xc148
0x0000000000406470 : ret 0xc2f6
0x0000000000403294 : ret 0xca21
0x0000000000401a9c : ret 0xca29
0x0000000000404d83 : ret 0xd284
0x000000000040413c : ret 0xee8
0x0000000000403b28 : ret 0xf180
0x0000000000406463 : ret 0xf280
0x000000000040330e : ret 0xf281
0x0000000000401e8a : ret 0xfff5
0x0000000000401cd9 : ret 0xffff
0x00000000004044f4 : ret 1
0x00000000004064d0 : ret 2
0x0000000000402b96 : rol byte ptr [rcx + rcx*4], 1 ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004054b0 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000402d20 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x402d8b ; ret
0x000000000040164c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40165b ; pop rbp ; ret
0x00000000004054b1 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x000000000040386d : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000403876 : ror byte ptr [rax - 0x77], 1 ; ret 0x294c
0x0000000000402d21 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x402d8a ; ret
0x0000000000408390 : ror byte ptr [rcx], 0 ; add byte ptr [rax], dl ; sar bh, cl ; jmp rax
0x0000000000408490 : ror byte ptr [rip - 0x17800000], -1 ; jmp rax
0x0000000000408395 : sar bh, cl ; jmp rax
0x000000000040164e : sar eax, 1 ; jne 0x401659 ; pop rbp ; ret
0x000000000040164d : sar rax, 1 ; jne 0x40165a ; pop rbp ; ret
0x0000000000407108 : sbb esi, dword ptr [rax + 0x5bd4] ; add byte ptr [rax], al ; ret 0x9796
0x00000000004050be : scasb al, byte ptr [rdi] ; ret 0xffff
0x0000000000406838 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000408494 : sub al, -1 ; jmp rax
0x00000000004054cf : sub dword ptr [rdx], 0x5b ; ret
0x0000000000407651 : sub eax, 0x81b0 ; add byte ptr [rax], al ; ret
0x0000000000406e2d : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000406e2c : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000406dfa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000403b12 : xchg eax, ebp ; ret 0x8840
0x0000000000404d82 : xchg eax, esp ; ret 0xd284
0x00000000004067fe : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000404847 : xor eax, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x0000000000401239 : xor eax, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000402b95 : xor eax, edx ; mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
