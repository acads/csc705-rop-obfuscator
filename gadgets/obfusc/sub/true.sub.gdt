0x0000000000403609 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404d03 : add al, ch ; mov ebp, 0x52e8ffff ; ret
0x0000000000404f2c : add al, ch ; ret
0x0000000000405f9f : add bl, dh ; ret
0x0000000000407723 : add byte ptr [rax + rcx], ch ; add byte ptr [rax], bl ; loopne 0x407732 ; jmp rax
0x000000000040464d : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000404f2a : add byte ptr [rax], al ; add al, ch ; ret
0x0000000000405f9d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000405f9b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000405f9c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000402cae : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000403f1e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004053fc : add byte ptr [rax], al ; add cl, ch ; ret 2
0x00000000004035d1 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004032e0 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040101b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000407166 : add byte ptr [rax], al ; cwde ; ret
0x0000000000407722 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; or byte ptr [rax], al ; add byte ptr [rax], bl ; loopne 0x407733 ; jmp rax
0x0000000000401059 : add byte ptr [rax], al ; jmp 0x401039
0x0000000000401ba2 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004038fe : add byte ptr [rax], al ; pop rbp ; ret
0x00000000004044eb : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004032a0 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000406d2a : add byte ptr [rax], al ; push rax ; fcos ; call rax
0x0000000000405f9e : add byte ptr [rax], al ; ret
0x0000000000406d6a : add byte ptr [rax], al ; sbb dh, -1 ; call rax
0x0000000000406e3a : add byte ptr [rax], al ; xor al, 0xff ; call qword ptr [rax]
0x0000000000406e6a : add byte ptr [rax], al ; xor bl, 0xff ; call rax
0x0000000000407727 : add byte ptr [rax], bl ; loopne 0x40772e ; jmp rax
0x0000000000406ceb : add byte ptr [rax], dh ; sar edi, 1 ; call rax
0x00000000004044ec : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004032a1 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000405e3c : add byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x0000000000401408 : add byte ptr [rcx], al ; ret
0x00000000004053f8 : add byte ptr [rdi], cl ; lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000402cb0 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000403f20 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004053fe : add cl, ch ; ret 2
0x0000000000404b29 : add dword ptr [rax - 0x77], ecx ; ret 0x8148
0x00000000004035cf : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004044ea : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040329f : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000405cfd : add dword ptr [rax], ecx ; ret 0x840
0x00000000004059da : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401404 : add eax, 0x206e3e ; add ebx, esi ; ret
0x00000000004053fb : add eax, 0xe9000000 ; ret 2
0x0000000000401019 : add eax, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004013cb : add eax, edx ; sar rax, 1 ; jne 0x4013dc ; pop rbp ; ret
0x0000000000401409 : add ebx, esi ; ret
0x000000000040183c : add esp, 0x10 ; pop rbp ; ret
0x000000000040572c : add esp, 0x130 ; pop rbp ; ret
0x000000000040481c : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000401997 : add esp, 0x20 ; pop rbp ; ret
0x00000000004015ed : add esp, 0x30 ; pop rbp ; ret
0x00000000004039ec : add esp, 0x50 ; pop rbp ; ret
0x0000000000401ec3 : add esp, 0x70 ; pop rbp ; ret
0x00000000004038fa : add esp, 0x90 ; pop rbp ; ret
0x00000000004046b3 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040101e : add esp, 8 ; ret
0x00000000004013ca : add rax, rdx ; sar rax, 1 ; jne 0x4013dd ; pop rbp ; ret
0x000000000040183b : add rsp, 0x10 ; pop rbp ; ret
0x000000000040572b : add rsp, 0x130 ; pop rbp ; ret
0x000000000040481b : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000401996 : add rsp, 0x20 ; pop rbp ; ret
0x00000000004015ec : add rsp, 0x30 ; pop rbp ; ret
0x00000000004039eb : add rsp, 0x50 ; pop rbp ; ret
0x0000000000401ec2 : add rsp, 0x70 ; pop rbp ; ret
0x00000000004038f9 : add rsp, 0x90 ; pop rbp ; ret
0x00000000004046b2 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040101d : add rsp, 8 ; ret
0x00000000004059d9 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401407 : and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000403687 : and dword ptr [rax], 0x81d8558b ; ret 0x1b2
0x000000000040171f : and eax, 0x608250 ; pop rbp ; ret
0x0000000000401743 : and eax, 0x608258 ; pop rbp ; ret
0x0000000000404e70 : call 0x4010b2
0x0000000000404f74 : call 0x401202
0x0000000000404d04 : call 0x4012d7
0x00000000004032d9 : call 0xffffffffe902bc29
0x00000000004032d8 : call 0xffffffffe902bc2a
0x0000000000405f79 : call qword ptr [r12 + rbx*8]
0x0000000000406c7f : call qword ptr [rax]
0x0000000000406f63 : call qword ptr [rsi]
0x0000000000405f7a : call qword ptr [rsp + rbx*8]
0x000000000040142d : call rax
0x000000000040302c : call rbx
0x0000000000407103 : call rdi
0x000000000040572a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x0000000000404a1f : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403f31 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004013cf : clc ; jne 0x4013d8 ; pop rbp ; ret
0x0000000000401d75 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405ebf : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000404f6f : clc ; mov rsi, qword ptr [rbp - 0x10] ; call 0x401207
0x0000000000405ec2 : clc ; pop rbp ; ret
0x0000000000405876 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404f0b : cld ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404e4a : cld ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000405ebc : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000405873 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405816 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404e47 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040138d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4013a0 ; pop rbp ; ret
0x000000000040402c : cwde ; mov rcx, qword ptr [rax*8 + 0x4067f8] ; jmp rcx
0x0000000000407168 : cwde ; ret
0x0000000000405464 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000402a32 : dec dword ptr [rcx - 0x77] ; ret 0x294d
0x0000000000402dc0 : enter 0x4b05, 0x34 ; fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x0000000000406d2d : fcos ; call rax
0x0000000000406d6d : fdivp st(7) ; call rax
0x0000000000402dc4 : fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x0000000000405f7c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000403ec8 : fsubr st(0) ; ret 0xe
0x0000000000404d7c : fsubr st(0) ; sahf ; ret
0x00000000004048a3 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004013a0 : hlt ; pop rbp ; mov edi, 0x608218 ; jmp rax
0x000000000040304b : inc dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000407724 : insb byte ptr [rdi], dx ; or byte ptr [rax], al ; add byte ptr [rax], bl ; loopne 0x407731 ; jmp rax
0x0000000000404655 : int 0x80
0x0000000000401393 : ja 0x40139a ; pop rbp ; ret
0x000000000040139f : je 0x40139d ; pop rbp ; mov edi, 0x608218 ; jmp rax
0x0000000000404e6e : jge 0x404e64 ; call 0x4010b4
0x0000000000404e6a : jge 0x404e64 ; mov rdi, qword ptr [rbp - 0x10] ; call 0x4010b8
0x0000000000404f6e : jge 0x404f70 ; mov rsi, qword ptr [rbp - 0x10] ; call 0x401208
0x000000000040105b : jmp 0x401037
0x0000000000404b28 : jmp 0xffffffffc2c99332
0x0000000000406bbf : jmp qword ptr [rax]
0x00000000004024c6 : jmp qword ptr [rcx]
0x00000000004071eb : jmp qword ptr [rdx]
0x00000000004013a7 : jmp rax
0x0000000000401f89 : jmp rcx
0x00000000004013e7 : jmp rdx
0x00000000004013d0 : jne 0x4013d7 ; pop rbp ; ret
0x0000000000404f72 : jne 0x404f68 ; call 0x401204
0x0000000000401ec5 : jo 0x401f26 ; ret
0x00000000004034ef : jo 0x403555 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403b94 : jo 0x403bf5 ; ret
0x0000000000403cce : jo 0x403d2f ; ret
0x00000000004078c9 : jrcxz 0x4078cc ; jmp rdx
0x00000000004053fa : lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000406dbd : loop 0x406dc0 ; call qword ptr [rax]
0x0000000000406dad : loope 0x406db0 ; call rax
0x0000000000407729 : loopne 0x40772c ; jmp rax
0x0000000000404d02 : mov al, 0 ; call 0x4012d9
0x0000000000403a6b : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004038f8 : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000406e68 : mov al, 0xd ; add byte ptr [rax], al ; xor bl, 0xff ; call rax
0x0000000000406d28 : mov al, 8 ; add byte ptr [rax], al ; push rax ; fcos ; call rax
0x0000000000406d68 : mov al, 9 ; add byte ptr [rax], al ; sbb dh, -1 ; call rax
0x00000000004059d6 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401741 : mov byte ptr [0x608258], al ; pop rbp ; ret
0x0000000000401403 : mov byte ptr [rip + 0x206e3e], 1 ; ret
0x00000000004059dc : mov dh, -0x40 ; pop rbp ; ret
0x000000000040171d : mov dword ptr [0x608250], edi ; pop rbp ; ret
0x0000000000401d76 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000401d38 : mov dword ptr [rax], eax ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000401bf4 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401d37 : mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000404e69 : mov dword ptr [rbp - 0x10], edi ; mov rdi, qword ptr [rbp - 0x10] ; call 0x4010b9
0x00000000004015e9 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004048a1 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405ebd : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000401dee : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401ba8 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040493b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401993 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401ba5 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004018ef : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000404c33 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401b5d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401bee : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401d3a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000401ebf : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000403a69 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000405874 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404f09 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404e48 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404a1d : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403f2f : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000405ec0 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000404d05 : mov ebp, 0x52e8ffff ; ret
0x000000000040142b : mov ebp, esp ; call rax
0x0000000000401391 : mov ebp, esp ; ja 0x40139c ; pop rbp ; ret
0x000000000040466d : mov ecx, 0x5b2a830a ; ret
0x0000000000401f82 : mov ecx, dword ptr [rax*8 + 0x4062f0] ; jmp rcx
0x00000000004022a6 : mov ecx, dword ptr [rax*8 + 0x406338] ; jmp rcx
0x000000000040402e : mov ecx, dword ptr [rax*8 + 0x4067f8] ; jmp rcx
0x0000000000401bf1 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401425 : mov edi, 0x607e20 ; mov rbp, rsp ; call rax
0x00000000004013a2 : mov edi, 0x608218 ; jmp rax
0x00000000004013e2 : mov edi, 0x608218 ; jmp rdx
0x0000000000404e6d : mov edi, dword ptr [rbp - 0x10] ; call 0x4010b5
0x0000000000404f6d : mov edi, dword ptr [rbp - 8] ; mov rsi, qword ptr [rbp - 0x10] ; call 0x401209
0x0000000000405f77 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000405f76 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000404f71 : mov esi, dword ptr [rbp - 0x10] ; call 0x401205
0x00000000004013e0 : mov esi, eax ; mov edi, 0x608218 ; jmp rdx
0x000000000040171c : mov qword ptr [0x608250], rdi ; pop rbp ; ret
0x0000000000401ded : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403a6a : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040493a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401992 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401ba4 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004018ee : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000404c32 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401b5c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401ebe : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000403a68 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000404a1c : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403f2e : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040142a : mov rbp, rsp ; call rax
0x0000000000401390 : mov rbp, rsp ; ja 0x40139d ; pop rbp ; ret
0x0000000000401f81 : mov rcx, qword ptr [rax*8 + 0x4062f0] ; jmp rcx
0x00000000004022a5 : mov rcx, qword ptr [rax*8 + 0x406338] ; jmp rcx
0x000000000040402d : mov rcx, qword ptr [rax*8 + 0x4067f8] ; jmp rcx
0x0000000000404e6c : mov rdi, qword ptr [rbp - 0x10] ; call 0x4010b6
0x0000000000404f70 : mov rsi, qword ptr [rbp - 0x10] ; call 0x401206
0x00000000004013df : mov rsi, rax ; mov edi, 0x608218 ; jmp rdx
0x00000000004059db : movzx eax, al ; pop rbp ; ret
0x0000000000405f98 : nop dword ptr [rax + rax] ; ret
0x000000000040260d : or al, 0x18 ; ret 0x6451
0x0000000000407725 : or byte ptr [rax], al ; add byte ptr [rax], bl ; loopne 0x407730 ; jmp rax
0x0000000000403c51 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401406 : outsb dx, byte ptr [rsi] ; and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000401405 : outsb dx, byte ptr ds:[rsi] ; and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000405f8c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004034f1 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405f8e : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004034f3 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405f90 : pop r14 ; pop r15 ; ret
0x00000000004032a3 : pop r14 ; pop rbp ; ret
0x00000000004034f5 : pop r15 ; pop rbp ; ret
0x0000000000405f92 : pop r15 ; ret
0x0000000000401402 : pop rbp ; mov byte ptr [rip + 0x206e3e], 1 ; ret
0x00000000004013a1 : pop rbp ; mov edi, 0x608218 ; jmp rax
0x00000000004013de : pop rbp ; mov rsi, rax ; mov edi, 0x608218 ; jmp rdx
0x0000000000405f8b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405f8f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401395 : pop rbp ; ret
0x00000000004034f0 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004044ed : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004032a2 : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000404671 : pop rbx ; ret
0x00000000004034f6 : pop rdi ; pop rbp ; ret
0x0000000000405f93 : pop rdi ; ret
0x00000000004034f4 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000405f91 : pop rsi ; pop r15 ; ret
0x00000000004032a4 : pop rsi ; pop rbp ; ret
0x0000000000405f8d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004034f2 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406ce7 : push qword ptr [rax + 0x30000007] ; sar edi, 1 ; call rax
0x0000000000406d27 : push qword ptr [rax + 0x50000008] ; fcos ; call rax
0x0000000000406da7 : push qword ptr [rax + 0x6000000a] ; loope 0x406db6 ; call rax
0x0000000000406d67 : push qword ptr [rax - 0x7ffffff7] ; fdivp st(7) ; call rax
0x0000000000406d2c : push rax ; fcos ; call rax
0x00000000004039ee : push rax ; pop rbp ; ret
0x0000000000401424 : push rbp ; mov edi, 0x607e20 ; mov rbp, rsp ; call rax
0x0000000000404e89 : push rbx ; ret
0x0000000000404d0a : push rdx ; ret
0x0000000000401021 : ret
0x0000000000405632 : ret 0
0x0000000000405646 : ret 0x148
0x000000000040368e : ret 0x1b2
0x0000000000401262 : ret 0x206e
0x0000000000401062 : ret 0x206f
0x0000000000401975 : ret 0x2948
0x0000000000402a19 : ret 0x294c
0x0000000000402a35 : ret 0x294d
0x0000000000401c74 : ret 0x5589
0x000000000040260f : ret 0x6451
0x0000000000404b2c : ret 0x8148
0x0000000000405cff : ret 0x840
0x0000000000402cb3 : ret 0x8840
0x0000000000403fe9 : ret 0x8844
0x0000000000404b40 : ret 0x8948
0x0000000000402a38 : ret 0x8949
0x0000000000402bcc : ret 0x89a5
0x0000000000402a1c : ret 0x8b48
0x0000000000405639 : ret 0xb849
0x0000000000402a4d : ret 0xbde8
0x00000000004013c5 : ret 0xc148
0x00000000004053a0 : ret 0xc2f6
0x0000000000402434 : ret 0xca21
0x0000000000403f23 : ret 0xd284
0x0000000000403eca : ret 0xe
0x00000000004032dc : ret 0xee8
0x0000000000402cc8 : ret 0xf180
0x0000000000405393 : ret 0xf280
0x00000000004024ae : ret 0xf281
0x0000000000404e72 : ret 0xffff
0x0000000000403694 : ret 1
0x0000000000405400 : ret 2
0x0000000000401d36 : rol byte ptr [rcx + rcx*4], 1 ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000404650 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000401ec0 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x401f2b ; ret
0x00000000004013cc : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4013db ; pop rbp ; ret
0x0000000000404651 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000402a0d : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000402a16 : ror byte ptr [rax - 0x77], 1 ; ret 0x294c
0x0000000000401ec1 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x401f2a ; ret
0x0000000000404d7e : sahf ; ret
0x00000000004013ce : sar eax, 1 ; jne 0x4013d9 ; pop rbp ; ret
0x0000000000406cfd : sar edi, 1 ; call qword ptr [rax]
0x0000000000406ced : sar edi, 1 ; call rax
0x00000000004013cd : sar rax, 1 ; jne 0x4013da ; pop rbp ; ret
0x0000000000406d6c : sbb dh, -1 ; call rax
0x00000000004059d8 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040466f : sub dword ptr [rdx], 0x5b ; ret
0x0000000000405fcd : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000405fcc : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000405f9a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000402cb2 : xchg eax, ebp ; ret 0x8840
0x0000000000403f22 : xchg eax, esp ; ret 0xd284
0x0000000000406e3c : xor al, 0xff ; call qword ptr [rax]
0x0000000000406e6c : xor bl, 0xff ; call rax
0x000000000040572e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004039e7 : xor eax, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x0000000000401d35 : xor eax, edx ; mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
