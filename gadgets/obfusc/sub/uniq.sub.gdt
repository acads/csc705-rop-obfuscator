0x0000000000405d79 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040ae87 : add ah, bh ; ret
0x000000000040bc23 : add ah, ch ; or eax, dword ptr [rax] ; add al, ch ; ret
0x0000000000403792 : add al, 0x25 ; shl dword ptr [rax], cl ; pop rbp ; ret
0x000000000040b29f : add al, al ; test bh, bh ; call qword ptr [rsi]
0x000000000040b29d : add al, byte ptr [rax] ; add al, al ; test bh, bh ; call qword ptr [rsi]
0x000000000040b29c : add al, byte ptr fs:[rax] ; add al, al ; test bh, bh ; call qword ptr [rsi]
0x0000000000401937 : add al, ch ; ret
0x000000000040bbe7 : add al, ch ; ret 0xffff
0x000000000040b19f : add al, dh ; jg 0x40b1a6 ; jmp rsp
0x00000000004094af : add bl, dh ; ret
0x0000000000403ff6 : add byte ptr [rax - 0x75], cl ; fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x0000000000406dbd : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000040bc21 : add byte ptr [rax], al ; add ah, ch ; or eax, dword ptr [rax] ; add al, ch ; ret
0x000000000040b29a : add byte ptr [rax], al ; add al, byte ptr fs:[rax] ; add al, al ; test bh, bh ; call qword ptr [rsi]
0x0000000000401935 : add byte ptr [rax], al ; add al, ch ; ret
0x00000000004094ad : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000403ff4 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x00000000004094ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040964a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x409d
0x0000000000407df9 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004094ac : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040a3ec : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x404b
0x000000000040964c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x409d
0x0000000000407523 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b72b8b], cl ; ret 0xb0
0x000000000040271c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x000000000040668e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040882c : add byte ptr [rax], al ; add cl, ch ; ret 2
0x000000000040b19a : add byte ptr [rax], al ; add dword ptr fs:[rax], eax ; add al, dh ; jg 0x40b1ab ; jmp rsp
0x0000000000403da0 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405a50 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401423 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000040bbe6 : add byte ptr [rax], al ; call 0xffffffffe140bbb4
0x000000000040ae86 : add byte ptr [rax], al ; cld ; ret
0x000000000040bc22 : add byte ptr [rax], al ; in al, dx ; or eax, dword ptr [rax] ; add al, ch ; ret
0x0000000000401459 : add byte ptr [rax], al ; jmp 0x401439
0x000000000040bbe2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; or eax, dword ptr [rax] ; add al, ch ; ret 0xffff
0x0000000000407dfb : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000404312 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040bbc2 : add byte ptr [rax], al ; mov word ptr [rbx], cs ; add byte ptr [rax], al ; ret 0xffff
0x000000000040b0de : add byte ptr [rax], al ; nop ; push -1 ; jmp rdx
0x0000000000402da4 : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000406c5b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405a10 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004094ae : add byte ptr [rax], al ; ret
0x000000000040a3ee : add byte ptr [rax], al ; ret 0x404b
0x000000000040964e : add byte ptr [rax], al ; ret 0x409d
0x000000000040bbc6 : add byte ptr [rax], al ; ret 0xffff
0x0000000000406c5c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000405a11 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000407525 : add byte ptr [rbx - 0x76b72b8b], cl ; ret 0xb0
0x000000000040b19b : add byte ptr [rcx + rax], ah ; add al, dh ; jg 0x40b1aa ; jmp rsp
0x000000000040ad1f : add byte ptr [rcx + rdx*4 - 1], bl ; call rsp
0x000000000040934c : add byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x00000000004018e8 : add byte ptr [rcx], al ; ret
0x0000000000408828 : add byte ptr [rdi], cl ; lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000401931 : add byte ptr [rdi], cl ; test byte ptr [rdx], cl ; add byte ptr [rax], al ; add al, ch ; ret
0x000000000040271e : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000406690 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040b29b : add byte ptr [rdx + rax], ah ; add al, al ; test bh, bh ; call qword ptr [rsi]
0x000000000040ac9f : add byte ptr [rsi + rax*4 - 1], bh ; call rsp
0x000000000040acdf : add byte ptr [rsp + rcx*4 - 1], bh ; call rsp
0x000000000040882e : add cl, ch ; ret 2
0x0000000000407299 : add dword ptr [rax - 0x77], ecx ; ret 0x8148
0x000000000040b19d : add dword ptr [rax], eax ; add al, dh ; jg 0x40b1a8 ; jmp rsp
0x0000000000405d3f : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406c5a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000405a0f : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040920d : add dword ptr [rax], ecx ; ret 0x840
0x0000000000403cc6 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403182 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000408eea : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x000000000040b19c : add dword ptr fs:[rax], eax ; add al, dh ; jg 0x40b1a9 ; jmp rsp
0x00000000004018e4 : add eax, 0x20ba0e ; add ebx, esi ; ret
0x0000000000403887 : add eax, 0x48ffffdc ; add esp, 0x10 ; pop rbp ; ret
0x000000000040882b : add eax, 0xe9000000 ; ret 2
0x0000000000403062 : add eax, dword ptr [rbp - 0x28] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004018ab : add eax, edx ; sar rax, 1 ; jne 0x4018bc ; pop rbp ; ret
0x00000000004018e9 : add ebx, esi ; ret
0x0000000000401b3b : add esp, 0x10 ; pop rbp ; ret
0x0000000000408b5c : add esp, 0x130 ; pop rbp ; ret
0x0000000000406f8c : add esp, 0x1a0 ; pop rbp ; ret
0x00000000004039e7 : add esp, 0x20 ; pop rbp ; ret
0x0000000000401c4d : add esp, 0x30 ; pop rbp ; ret
0x000000000040349f : add esp, 0x40 ; pop rbp ; ret
0x0000000000403066 : add esp, 0x50 ; pop rbp ; ret
0x0000000000404633 : add esp, 0x70 ; pop rbp ; ret
0x000000000040606a : add esp, 0x90 ; pop rbp ; ret
0x0000000000406e23 : add esp, 0xa0 ; pop rbp ; ret
0x0000000000402da0 : add esp, 0xe0 ; pop rbp ; ret
0x0000000000401426 : add esp, 8 ; ret
0x0000000000403061 : add rax, qword ptr [rbp - 0x28] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004018aa : add rax, rdx ; sar rax, 1 ; jne 0x4018bd ; pop rbp ; ret
0x0000000000401b3a : add rsp, 0x10 ; pop rbp ; ret
0x0000000000408b5b : add rsp, 0x130 ; pop rbp ; ret
0x0000000000406f8b : add rsp, 0x1a0 ; pop rbp ; ret
0x00000000004039e6 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000401c4c : add rsp, 0x30 ; pop rbp ; ret
0x000000000040349e : add rsp, 0x40 ; pop rbp ; ret
0x0000000000403065 : add rsp, 0x50 ; pop rbp ; ret
0x0000000000404632 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000406069 : add rsp, 0x90 ; pop rbp ; ret
0x0000000000406e22 : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000402d9f : add rsp, 0xe0 ; pop rbp ; ret
0x0000000000401425 : add rsp, 8 ; ret
0x0000000000408ee9 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004018e7 : and byte ptr [rax], al ; add ebx, esi ; ret
0x000000000040376f : and eax, 0x60d338 ; pop rbp ; ret
0x0000000000403793 : and eax, 0x60d340 ; pop rbp ; ret
0x00000000004074a3 : call 0xffffffffe08dfff6
0x000000000040bbe8 : call 0xffffffffe140bbb2
0x0000000000405a49 : call 0xffffffffe902e399
0x0000000000405a48 : call 0xffffffffe902e39a
0x0000000000409489 : call qword ptr [r12 + rbx*8]
0x000000000040b1c3 : call qword ptr [rax]
0x000000000040b2a3 : call qword ptr [rsi]
0x000000000040948a : call qword ptr [rsp + rbx*8]
0x000000000040190d : call rax
0x000000000040579c : call rbx
0x000000000040426d : call rcx
0x000000000040b483 : call rdi
0x000000000040b083 : call rsi
0x000000000040ac63 : call rsp
0x0000000000408b5a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x000000000040718f : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403756 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004036a4 : clc ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004033f8 : clc ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004018af : clc ; jne 0x4018b8 ; pop rbp ; ret
0x0000000000403286 : clc ; mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x00000000004044e5 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004093cf : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004093d2 : clc ; pop rbp ; ret
0x0000000000407df8 : cld ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000401b67 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407fa9 : cld ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040812e : cld ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404023 : cld ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000407d93 : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x00000000004093cc : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000408003 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407fa6 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040812b : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000408e27 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000407dff : cld ; pop rbp ; ret
0x000000000040ae88 : cld ; ret
0x000000000040186d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401880 ; pop rbp ; ret
0x000000000040679c : cwde ; mov rcx, qword ptr [rax*8 + 0x40a6b8] ; jmp rcx
0x0000000000408894 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x00000000004051a2 : dec dword ptr [rcx - 0x77] ; ret 0x294d
0x0000000000405530 : enter 0x4b05, 0x34 ; fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x0000000000405534 : fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x0000000000403ff9 : fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x0000000000403ffa : fmul dword ptr [rax - 0x77] ; ret 0x2948
0x000000000040948c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000408ca7 : fsubr st(0) ; ret
0x0000000000401b39 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401880 : hlt ; pop rbp ; mov edi, 0x60d290 ; jmp rax
0x0000000000407641 : in al, 0x34 ; sub eax, 0x14c5b7a ; ret 0x8148
0x0000000000407655 : in al, 0x34 ; sub eax, 0x294c5b7a ; ret 0x8948
0x0000000000407ebc : in al, dx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040bc24 : in al, dx ; or eax, dword ptr [rax] ; add al, ch ; ret
0x00000000004057bb : inc dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000406dc5 : int 0x80
0x0000000000401873 : ja 0x40187a ; pop rbp ; ret
0x000000000040187f : je 0x40187d ; pop rbp ; mov edi, 0x60d290 ; jmp rax
0x000000000040b1a1 : jg 0x40b1a4 ; jmp rsp
0x000000000040145b : jmp 0x401437
0x0000000000407298 : jmp 0xffffffffc2c9baa2
0x000000000040b7ab : jmp qword ptr [rax]
0x0000000000402f25 : jmp qword ptr [rcx]
0x000000000040b68b : jmp qword ptr [rdx]
0x0000000000401887 : jmp rax
0x0000000000401f8e : jmp rcx
0x00000000004018c7 : jmp rdx
0x000000000040b1a3 : jmp rsp
0x00000000004018b0 : jne 0x4018b7 ; pop rbp ; ret
0x0000000000404635 : jo 0x404696 ; ret
0x0000000000405c5f : jo 0x405cc5 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406304 : jo 0x406365 ; ret
0x000000000040643e : jo 0x40649f ; ret
0x000000000040ac61 : jo 0x40ac64 ; call rsp
0x000000000040ae83 : lcall ptr [rbp + rcx] ; add ah, bh ; ret
0x000000000040882a : lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000407640 : lodsb al, byte ptr [rsi] ; in al, 0x34 ; sub eax, 0x14c5b7a ; ret 0x8148
0x0000000000407654 : lodsb al, byte ptr [rsi] ; in al, 0x34 ; sub eax, 0x294c5b7a ; ret 0x8948
0x000000000040bbe4 : lodsb al, byte ptr [rsi] ; or eax, dword ptr [rax] ; add al, ch ; ret 0xffff
0x0000000000402da2 : loopne 0x402da9 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000403a1b : loopne 0x403a6b ; add esp, 0x20 ; pop rbp ; ret
0x0000000000403a1a : loopne 0x403a6c ; add esp, 0x20 ; pop rbp ; ret
0x00000000004074a7 : loopne 0x407493 ; ret
0x00000000004074a6 : loopne 0x407494 ; ret
0x0000000000407d97 : loopne 0x407d9e ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040360a : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000406068 : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000408ee6 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000403791 : mov byte ptr [0x60d340], al ; pop rbp ; ret
0x0000000000403287 : mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x00000000004018e3 : mov byte ptr [rip + 0x20ba0e], 1 ; ret
0x0000000000403cc8 : mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403184 : mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000408eec : mov dh, -0x40 ; pop rbp ; ret
0x000000000040376d : mov dword ptr [0x60d338], edi ; pop rbp ; ret
0x00000000004044e6 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004044a8 : mov dword ptr [rax], eax ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000404364 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004044a7 : mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000403a19 : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040326b : mov dword ptr [rbp - 0x28], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401c49 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403608 : mov dword ptr [rbp - 0x50], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401b37 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401b65 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004093cd : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040455e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404318 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004070ab : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004039e3 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404315 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040393f : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000407eba : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004073a3 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004042cd : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403c54 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040435e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004074e1 : mov eax, dword ptr [rbp - 0x24] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004044aa : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004025c4 : mov eax, dword ptr [rbp - 0x30] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040462f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004061d9 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000408004 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407fa7 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040812c : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404021 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000407dfd : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040718d : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403754 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004036a2 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004033f6 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004093d0 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004040ff : mov eax, ecx ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040190b : mov ebp, esp ; call rax
0x0000000000401871 : mov ebp, esp ; ja 0x40187c ; pop rbp ; ret
0x0000000000406ddd : mov ecx, 0x5b2a830a ; ret
0x0000000000401fcd : mov ecx, dword ptr [rax*8 + 0x409500] ; jmp rcx
0x0000000000401f87 : mov ecx, dword ptr [rax*8 + 0x409540] ; jmp rcx
0x00000000004046f2 : mov ecx, dword ptr [rax*8 + 0x40a1b0] ; jmp rcx
0x0000000000404a16 : mov ecx, dword ptr [rax*8 + 0x40a1f8] ; jmp rcx
0x000000000040679e : mov ecx, dword ptr [rax*8 + 0x40a6b8] ; jmp rcx
0x0000000000407b2e : mov ecx, dword ptr [rax*8 + 0x40aaa0] ; jmp rcx
0x0000000000407aae : mov ecx, dword ptr [rax*8 + 0x40ab00] ; jmp rcx
0x0000000000404361 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004040fd : mov ecx, eax ; mov eax, ecx ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401905 : mov edi, 0x60ce20 ; mov rbp, rsp ; call rax
0x0000000000401882 : mov edi, 0x60d290 ; jmp rax
0x00000000004018c2 : mov edi, 0x60d290 ; jmp rdx
0x0000000000408d1e : mov edi, 0x8fcb99c5 ; xlatb ; ret 0x8c1b
0x000000000040ace1 : mov edi, dr1 ; call rsp
0x0000000000409487 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000040b481 : mov edi, edi ; call rdi
0x0000000000409486 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x00000000004018e6 : mov edx, 0xf3010020 ; ret
0x00000000004018c0 : mov esi, eax ; mov edi, 0x60d290 ; jmp rdx
0x000000000040376c : mov qword ptr [0x60d338], rdi ; pop rbp ; ret
0x000000000040326a : mov qword ptr [rbp - 0x28], rax ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040455d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403609 : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004070aa : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004039e2 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404314 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040393e : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004073a2 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004042cc : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403c53 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004025c3 : mov rax, qword ptr [rbp - 0x30] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040462e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004061d8 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040718c : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403753 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004036a1 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004033f5 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040190a : mov rbp, rsp ; call rax
0x0000000000401870 : mov rbp, rsp ; ja 0x40187d ; pop rbp ; ret
0x0000000000401fcc : mov rcx, qword ptr [rax*8 + 0x409500] ; jmp rcx
0x0000000000401f86 : mov rcx, qword ptr [rax*8 + 0x409540] ; jmp rcx
0x00000000004046f1 : mov rcx, qword ptr [rax*8 + 0x40a1b0] ; jmp rcx
0x0000000000404a15 : mov rcx, qword ptr [rax*8 + 0x40a1f8] ; jmp rcx
0x000000000040679d : mov rcx, qword ptr [rax*8 + 0x40a6b8] ; jmp rcx
0x0000000000407b2d : mov rcx, qword ptr [rax*8 + 0x40aaa0] ; jmp rcx
0x0000000000407aad : mov rcx, qword ptr [rax*8 + 0x40ab00] ; jmp rcx
0x00000000004018bf : mov rsi, rax ; mov edi, 0x60d290 ; jmp rdx
0x000000000040bbc4 : mov word ptr [rbx], cs ; add byte ptr [rax], al ; ret 0xffff
0x0000000000407e90 : movabs dword ptr [0x941c90941f0213f], eax ; ret 0x3145
0x00000000004035bd : movabs eax, dword ptr [0x8948b87d8b480040] ; ret 0xb0
0x000000000040356b : movabs eax, dword ptr [0x8948c87d8b480040] ; ret 0xb0
0x0000000000403cc7 : movzx eax, al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403183 : movzx eax, al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000408eeb : movzx eax, al ; pop rbp ; ret
0x000000000040328a : movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x000000000040b0e0 : nop ; push -1 ; jmp rdx
0x0000000000401883 : nop ; shl byte ptr [rax], cl ; jmp rax
0x00000000004018c3 : nop ; shl byte ptr [rax], cl ; jmp rdx
0x00000000004094a8 : nop dword ptr [rax + rax] ; ret
0x0000000000404d7d : or al, 0x18 ; ret 0x6451
0x000000000040bc25 : or eax, dword ptr [rax] ; add al, ch ; ret
0x000000000040bbe5 : or eax, dword ptr [rax] ; add al, ch ; ret 0xffff
0x00000000004063c1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040949c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405c61 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040949e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405c63 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004094a0 : pop r14 ; pop r15 ; ret
0x0000000000405a13 : pop r14 ; pop rbp ; ret
0x0000000000405c65 : pop r15 ; pop rbp ; ret
0x00000000004094a2 : pop r15 ; ret
0x00000000004018e2 : pop rbp ; mov byte ptr [rip + 0x20ba0e], 1 ; ret
0x0000000000401881 : pop rbp ; mov edi, 0x60d290 ; jmp rax
0x00000000004018be : pop rbp ; mov rsi, rax ; mov edi, 0x60d290 ; jmp rdx
0x000000000040949b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040949f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401875 : pop rbp ; ret
0x0000000000405c60 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406c5d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405a12 : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000406de1 : pop rbx ; ret
0x0000000000405c66 : pop rdi ; pop rbp ; ret
0x00000000004094a3 : pop rdi ; ret
0x0000000000405c64 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004094a1 : pop rsi ; pop r15 ; ret
0x0000000000405a14 : pop rsi ; pop rbp ; ret
0x000000000040949d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405c62 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405411 : push -0x17000001 ; salc ; ret
0x000000000040b0e1 : push -1 ; jmp rdx
0x0000000000403068 : push rax ; pop rbp ; ret
0x00000000004074a2 : push rbp ; call 0xffffffffe08dfff7
0x0000000000401904 : push rbp ; mov edi, 0x60ce20 ; mov rbp, rsp ; call rax
0x000000000040765f : push rbp ; ror byte ptr [rax - 0x77], 1 ; ret 0x8b4c
0x0000000000403465 : push rbp ; ror byte ptr [rax - 0x77], 1 ; ret 0xb1e8
0x0000000000401429 : ret
0x0000000000408a62 : ret 0
0x00000000004021ae : ret 0x148
0x0000000000405dfe : ret 0x1b2
0x0000000000401662 : ret 0x20ba
0x0000000000401462 : ret 0x20bb
0x00000000004039c5 : ret 0x2948
0x0000000000405189 : ret 0x294c
0x00000000004051a5 : ret 0x294d
0x0000000000407e99 : ret 0x3145
0x000000000040a3f0 : ret 0x404b
0x0000000000409650 : ret 0x409d
0x00000000004043e4 : ret 0x5589
0x0000000000404d7f : ret 0x6451
0x00000000004051bd : ret 0x7de8
0x0000000000407cb9 : ret 0x8141
0x000000000040729c : ret 0x8148
0x000000000040920f : ret 0x840
0x0000000000402721 : ret 0x8840
0x0000000000406759 : ret 0x8844
0x00000000004072b0 : ret 0x8948
0x00000000004051a8 : ret 0x8949
0x00000000004020df : ret 0x894a
0x000000000040533c : ret 0x89a5
0x000000000040518c : ret 0x8b48
0x0000000000407663 : ret 0x8b4c
0x0000000000408d24 : ret 0x8c1b
0x000000000040213a : ret 0x971
0x0000000000402450 : ret 0xb0
0x0000000000403469 : ret 0xb1e8
0x0000000000408a69 : ret 0xb849
0x0000000000407cf9 : ret 0xc131
0x00000000004018a5 : ret 0xc148
0x00000000004087d0 : ret 0xc2f6
0x0000000000404ba4 : ret 0xca21
0x0000000000407e32 : ret 0xca29
0x0000000000406693 : ret 0xd284
0x0000000000407d75 : ret 0xd709
0x0000000000405a4c : ret 0xee8
0x0000000000402736 : ret 0xf180
0x00000000004087c3 : ret 0xf280
0x0000000000404c1e : ret 0xf281
0x000000000040ae79 : ret 0xffff
0x0000000000405e04 : ret 1
0x0000000000408830 : ret 2
0x00000000004044a6 : rol byte ptr [rcx + rcx*4], 1 ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000406dc0 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000404630 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x40469b ; ret
0x00000000004018ac : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4018bb ; pop rbp ; ret
0x0000000000406dc1 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x000000000040517d : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000405186 : ror byte ptr [rax - 0x77], 1 ; ret 0x294c
0x0000000000407660 : ror byte ptr [rax - 0x77], 1 ; ret 0x8b4c
0x0000000000403466 : ror byte ptr [rax - 0x77], 1 ; ret 0xb1e8
0x0000000000404631 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x40469a ; ret
0x00000000004040fe : ror dword ptr [rcx - 0x3b7cb738], 0x30 ; pop rbp ; ret
0x000000000040187e : sal byte ptr [rsp + rsi*8 + 0x5d], -0x41 ; nop ; shl byte ptr [rax], cl ; jmp rax
0x0000000000405416 : salc ; ret
0x000000000040be89 : sar bh, cl ; jmp rdx
0x00000000004018ae : sar eax, 1 ; jne 0x4018b9 ; pop rbp ; ret
0x00000000004018ad : sar rax, 1 ; jne 0x4018ba ; pop rbp ; ret
0x000000000040bc20 : sbb al, 0 ; add byte ptr [rax], al ; in al, dx ; or eax, dword ptr [rax] ; add al, ch ; ret
0x000000000040bbe0 : sbb al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; or eax, dword ptr [rax] ; add al, ch ; ret 0xffff
0x000000000040bbc0 : sbb al, 0 ; add byte ptr [rax], al ; mov word ptr [rbx], cs ; add byte ptr [rax], al ; ret 0xffff
0x000000000040424c : shl byte ptr [rax], cl ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401884 : shl byte ptr [rax], cl ; jmp rax
0x00000000004018c4 : shl byte ptr [rax], cl ; jmp rdx
0x0000000000403771 : shl dword ptr [rax], cl ; pop rbp ; ret
0x0000000000408ee8 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000406ddf : sub dword ptr [rdx], 0x5b ; ret
0x0000000000407643 : sub eax, 0x14c5b7a ; ret 0x8148
0x0000000000407657 : sub eax, 0x294c5b7a ; ret 0x8948
0x00000000004094dd : sub esp, 8 ; add rsp, 8 ; ret
0x00000000004094dc : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040b2a1 : test bh, bh ; call qword ptr [rsi]
0x00000000004094aa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000401933 : test byte ptr [rdx], cl ; add byte ptr [rax], al ; add al, ch ; ret
0x000000000040aca1 : xchg bh, bh ; call rsp
0x0000000000402720 : xchg eax, ebp ; ret 0x8840
0x0000000000406692 : xchg eax, esp ; ret 0xd284
0x0000000000408d23 : xlatb ; ret 0x8c1b
0x0000000000408b5e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000406157 : xor eax, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x00000000004044a5 : xor eax, edx ; mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
