0x000000000042495d : adc al, 0 ; add byte ptr [rax], al ; add edi, edi ; jmp qword ptr [rdx]
0x000000000041ef68 : adc al, 0x48 ; add esp, 0x10 ; pop rbp ; ret
0x000000000041b669 : adc al, 1 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000424715 : adc al, byte ptr [rax] ; add byte ptr [rax], cl ; loopne 0x42471f ; jmp qword ptr [rdx]
0x0000000000406088 : adc al, byte ptr [rdx] ; call 0x402355
0x000000000041a71a : adc byte ptr [rax - 0x75], cl ; jge 0x41a6e4 ; call rax
0x000000000041a719 : adc byte ptr [rax - 0x75], cl ; jge 0x41a6e5 ; call rax
0x000000000041a8ad : adc byte ptr [rax - 0x75], cl ; jge 0x41a877 ; call rax
0x000000000041a8ac : adc byte ptr [rax - 0x75], cl ; jge 0x41a878 ; call rax
0x000000000042323c : adc byte ptr [rax - 1], bh ; call rax
0x0000000000422b51 : adc byte ptr [rax], al ; add byte ptr [rax], dh ; mov esi, dr1 ; jmp qword ptr [rax]
0x000000000040f06a : adc byte ptr [rcx - 0xa], al ; jmp qword ptr [rcx]
0x000000000041ef4c : adc dh, dh ; ret 0xf01
0x0000000000414719 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000424493 : add ah, ch ; sldt word ptr [rax] ; cwde ; ret
0x0000000000422ed5 : add al, -1 ; jmp qword ptr [rax]
0x000000000040e4c2 : add al, 0x25 ; push 0x5d006279 ; ret
0x000000000040fe6a : add al, 0x48 ; add eax, ecx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000422b43 : add al, ah ; mov bh, dh ; jmp rax
0x0000000000422d0b : add al, ah ; ret
0x000000000042333b : add al, al ; mov bl, -1 ; call rax
0x0000000000425407 : add al, bl ; cmp edi, edi ; call qword ptr [rsi]
0x00000000004241f7 : add al, bl ; mov dh, -2 ; jmp rsi
0x0000000000405fdd : add al, bpl ; insb byte ptr [rdi], dx ; ret
0x000000000040f2a6 : add al, byte ptr [rax] ; add byte ptr [rcx + 0x21ca31c2], cl ; ret 0xfa81
0x000000000040e0e7 : add al, byte ptr [rax] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040e59e : add al, ch ; in al, dx ; ret
0x0000000000405fde : add al, ch ; insb byte ptr [rdi], dx ; ret
0x0000000000405797 : add al, ch ; ret
0x000000000040d698 : add al, ch ; ret 0xff4e
0x00000000004031b8 : add al, ch ; ret 0xffef
0x000000000040c6be : add al, ch ; sbb al, -0x39 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040c77b : add al, ch ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000423af7 : add al, ch ; xchg dh, bh ; call qword ptr [rbx]
0x0000000000422e03 : add al, dh ; loope 0x422e09 ; jmp rax
0x0000000000422ec3 : add al, dl ; add bh, bh ; jmp rax
0x00000000004232bb : add al, dl ; mov edi, dr1 ; call rax
0x0000000000424ddf : add al, dl ; or al, 0xffffffffffffffff ; jmp qword ptr [rdi]
0x0000000000423444 : add bh, -1 ; call qword ptr [rax]
0x0000000000424a81 : add bh, bh ; jmp qword ptr [rax]
0x0000000000422ec5 : add bh, bh ; jmp rax
0x000000000041f15f : add bl, dh ; ret
0x0000000000419eac : add byte ptr [r8], r8b ; add byte ptr [rcx - 0x100f43], al ; jmp qword ptr [rsi]
0x00000000004070bd : add byte ptr [r9 - 0x77], r8b ; ret 0x8141
0x00000000004070dd : add byte ptr [r9], r12b ; ret 0x941
0x0000000000410da9 : add byte ptr [rax + 0x29], cl ; ret 0x8948
0x00000000004163f3 : add byte ptr [rax + 1], cl ; ret 0x3948
0x000000000040cbcb : add byte ptr [rax + 1], cl ; ret 0x3b48
0x000000000041c527 : add byte ptr [rax + 1], cl ; ret 0x4a3b
0x000000000040cc32 : add byte ptr [rax + 1], cl ; ret 0x4a8b
0x000000000040ce67 : add byte ptr [rax + 1], cl ; ret 0x8b48
0x000000000042354b : add byte ptr [rax + rax - 0x8900000], ah ; std ; jmp rdx
0x000000000041a97e : add byte ptr [rax + rax], 0 ; pop rbp ; ret
0x000000000040549c : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x000000000040d1e2 : add byte ptr [rax - 0x75], cl ; call 0x49035b3a
0x000000000040e7eb : add byte ptr [rax - 0x75], cl ; call 0x49037143
0x000000000041f086 : add byte ptr [rax - 0x75], cl ; call 0x490479de
0x000000000041017f : add byte ptr [rax - 0x75], cl ; fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x000000000041a92b : add byte ptr [rax - 0x75], cl ; jge 0x41a8ed ; call rax
0x000000000041a7bf : add byte ptr [rax - 0x75], cl ; mov ebp, 0xfffffba0 ; call rax
0x00000000004186fd : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000415c7d : add byte ptr [rax - 0x77], cl ; jge 0x415c80 ; pop rbp ; ret
0x000000000040318a : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x00000000004229fb : add byte ptr [rax - 9], al ; std ; call rax
0x000000000042354f : add byte ptr [rax - 9], dh ; std ; jmp rdx
0x000000000042318b : add byte ptr [rax], ah ; movsxd rdi, edi ; call qword ptr [rax]
0x000000000042323a : add byte ptr [rax], al ; adc byte ptr [rax - 1], bh ; call rax
0x0000000000424491 : add byte ptr [rax], al ; add ah, ch ; sldt word ptr [rax] ; cwde ; ret
0x00000000004031b6 : add byte ptr [rax], al ; add al, ch ; ret 0xffef
0x000000000040c6bc : add byte ptr [rax], al ; add al, ch ; sbb al, -0x39 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000423442 : add byte ptr [rax], al ; add bh, -1 ; call qword ptr [rax]
0x000000000041f15d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000410da7 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8948
0x00000000004163f1 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x3948
0x000000000040cbc9 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x3b48
0x000000000041c525 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x4a3b
0x000000000040cc30 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x4a8b
0x000000000040ce65 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8b48
0x000000000040549a : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x000000000040d1e0 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; call 0x49035b3c
0x000000000040e7e9 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; call 0x49037145
0x000000000041f084 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; call 0x490479e0
0x000000000041017d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x0000000000415c7b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jge 0x415c82 ; pop rbp ; ret
0x0000000000403188 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000042354d : add byte ptr [rax], al ; add byte ptr [rax - 9], dh ; std ; jmp rdx
0x000000000041f15b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004007b8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x00000000004007ba : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x00000000004038a8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041081d : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041ee41 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000415c7a : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000041f15c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004007bc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x0000000000409d09 : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], al ; ret
0x000000000040c09e : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040af6b : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7038b], cl ; ret 0xb0
0x0000000000403d5a : add byte ptr [rax], al ; add byte ptr [rcx + 0x62523ce9], al ; ret 0x6348
0x0000000000419ead : add byte ptr [rax], al ; add byte ptr [rcx - 0x100f43], al ; jmp qword ptr [rsi]
0x000000000040f100 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret
0x000000000040f278 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0x3141
0x000000000042324a : add byte ptr [rax], al ; add byte ptr [rcx - 1], bh ; call qword ptr [rax]
0x0000000000418fb2 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0xf40
0x0000000000413dbe : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x000000000041ee92 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040eae4 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000041502e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040dc02 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x00000000004155d3 : add byte ptr [rax], al ; add cl, ch ; ret
0x000000000041b09c : add byte ptr [rax], al ; add cl, ch ; ret 2
0x000000000042495f : add byte ptr [rax], al ; add edi, edi ; jmp qword ptr [rdx]
0x00000000004229f6 : add byte ptr [rax], al ; add qword ptr [r8], r8 ; add byte ptr [rax - 9], al ; std ; call rax
0x00000000004038aa : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041081f : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040c4f8 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402123 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000042318a : add byte ptr [rax], al ; and byte ptr [rbx - 1], ah ; call qword ptr [rax]
0x0000000000423af6 : add byte ptr [rax], al ; call 0x14423988
0x0000000000424336 : add byte ptr [rax], al ; call 0xffffffffd44241fd
0x0000000000424496 : add byte ptr [rax], al ; cwde ; ret
0x00000000004229fa : add byte ptr [rax], al ; idiv ebp ; call rax
0x0000000000424492 : add byte ptr [rax], al ; in al, dx ; sldt word ptr [rax] ; cwde ; ret
0x0000000000424712 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; adc al, byte ptr [rax] ; add byte ptr [rax], cl ; loopne 0x424722 ; jmp qword ptr [rdx]
0x0000000000424012 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; or eax, dword ptr [rax] ; add byte ptr [rax], cl ; test al, -2 ; call qword ptr [rcx]
0x0000000000402159 : add byte ptr [rax], al ; jmp 0x402139
0x000000000042324b : add byte ptr [rax], al ; jns 0x423252 ; call qword ptr [rax]
0x000000000042354e : add byte ptr [rax], al ; jo 0x42354e ; std ; jmp rdx
0x0000000000423976 : add byte ptr [rax], al ; mov byte ptr [rdx - 2], bh ; call qword ptr [rcx]
0x000000000041590a : add byte ptr [rax], al ; mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000415a3d : add byte ptr [rax], al ; mov eax, edi ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000415b99 : add byte ptr [rax], al ; mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040c38d : add byte ptr [rax], al ; mov eax, esi ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004159b1 : add byte ptr [rax], al ; mov eax, esi ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000425862 : add byte ptr [rax], al ; mov esp, 0x28000023 ; js 0x425873 ; jmp qword ptr [rcx]
0x0000000000415c7c : add byte ptr [rax], al ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000412cb2 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000424332 : add byte ptr [rax], al ; mov word ptr [rsi], cs ; add byte ptr [rax], al ; call 0xffffffffd4424201
0x000000000042354a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 9], dh ; std ; jmp rdx
0x0000000000422c82 : add byte ptr [rax], al ; nop ; mov bh, -2 ; jmp rax
0x0000000000423402 : add byte ptr [rax], al ; nop ; ret 0xffff
0x0000000000424776 : add byte ptr [rax], al ; pop rax ; in al, -2 ; jmp qword ptr [rdi]
0x0000000000408d4b : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000409a86 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040bdad : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000042327a : add byte ptr [rax], al ; push rax ; jl 0x423283 ; call rax
0x000000000042314a : add byte ptr [rax], al ; rcr byte ptr [rdi - 1] ; call qword ptr [rax]
0x000000000041f15e : add byte ptr [rax], al ; ret
0x00000000004007be : add byte ptr [rax], al ; ret 2
0x0000000000424dde : add byte ptr [rax], al ; ror byte ptr [rdi + rdi*8], 1 ; jmp qword ptr [rdi]
0x0000000000425866 : add byte ptr [rax], al ; sub byte ptr [rax - 1], bh ; jmp qword ptr [rcx]
0x0000000000424dda : add byte ptr [rax], al ; xor al, 0x19 ; add byte ptr [rax], al ; ror byte ptr [rdi + rdi*8], 1 ; jmp qword ptr [rdi]
0x0000000000423b57 : add byte ptr [rax], bl ; mov dh, bh ; jmp qword ptr [rdi]
0x0000000000425867 : add byte ptr [rax], ch ; js 0x42586e ; jmp qword ptr [rcx]
0x0000000000424717 : add byte ptr [rax], cl ; loopne 0x42471d ; jmp qword ptr [rdx]
0x0000000000424017 : add byte ptr [rax], cl ; test al, -2 ; call qword ptr [rcx]
0x0000000000422b53 : add byte ptr [rax], dh ; mov esi, dr1 ; jmp qword ptr [rax]
0x000000000042323b : add byte ptr [rax], dl ; js 0x423242 ; call rax
0x00000000004241f3 : add byte ptr [rbp + rcx], cl ; add al, bl ; mov dh, -2 ; jmp rsi
0x0000000000409d0b : add byte ptr [rbp - 0x77], al ; ret
0x000000000040757d : add byte ptr [rbp - 0x77], al ; ret 0x3141
0x0000000000409a87 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040bdae : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040af17 : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000424013 : add byte ptr [rbx + rcx], ch ; add byte ptr [rax], cl ; test al, -2 ; call qword ptr [rcx]
0x000000000040af6d : add byte ptr [rbx - 0x76b7038b], cl ; ret 0xb0
0x0000000000406d56 : add byte ptr [rcx + 0x21ca31c2], cl ; ret 0x9589
0x000000000040f2a8 : add byte ptr [rcx + 0x21ca31c2], cl ; ret 0xfa81
0x0000000000403d5c : add byte ptr [rcx + 0x62523ce9], al ; ret 0x6348
0x0000000000424ddb : add byte ptr [rcx + rbx], dh ; add byte ptr [rax], al ; ror byte ptr [rdi + rdi*8], 1 ; jmp qword ptr [rdi]
0x0000000000419eaf : add byte ptr [rcx - 0x100f43], al ; jmp qword ptr [rsi]
0x000000000040f102 : add byte ptr [rcx - 0x77], al ; ret
0x000000000040f27a : add byte ptr [rcx - 0x77], al ; ret 0x3141
0x00000000004070be : add byte ptr [rcx - 0x77], al ; ret 0x8141
0x0000000000404450 : add byte ptr [rcx - 0xe], al ; jmp qword ptr [rcx]
0x000000000041ea7c : add byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x000000000042324c : add byte ptr [rcx - 1], bh ; call qword ptr [rax]
0x00000000004070de : add byte ptr [rcx], ah ; ret 0x941
0x000000000041627d : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000402968 : add byte ptr [rcx], al ; ret
0x0000000000418fb4 : add byte ptr [rcx], bh ; ret 0xf40
0x00000000004229f7 : add byte ptr [rdi + 1], cl ; add byte ptr [rax], al ; idiv ebp ; call rax
0x0000000000425403 : add byte ptr [rdi + rbx], bl ; add al, bl ; cmp edi, edi ; call qword ptr [rsi]
0x000000000041b098 : add byte ptr [rdi], cl ; lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000415bca : add byte ptr [rdi], cl ; mov bh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000413dc0 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x000000000041ee94 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040eae6 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000415030 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040dc04 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000424713 : add byte ptr [rdx + rdx], ch ; add byte ptr [rax], cl ; loopne 0x424721 ; jmp qword ptr [rdx]
0x000000000040fcdd : add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x0000000000423af3 : add byte ptr [rsi + rax], cl ; add al, ch ; xchg dh, bh ; call qword ptr [rbx]
0x00000000004233f4 : add cl, -1 ; push qword ptr [rax + 0x60000032] ; ret 0xffff
0x000000000040e8ec : add cl, byte ptr [rax - 0x77] ; ret 0x148
0x0000000000408977 : add cl, byte ptr [rbp - 0x69] ; jmp 0x407c09
0x00000000004155d5 : add cl, ch ; ret
0x000000000041b09e : add cl, ch ; ret 2
0x0000000000411c22 : add dword ptr [rax + 0xf], eax ; mov dh, -0x39 ; pop rbp ; ret
0x0000000000418c39 : add dword ptr [rax - 0x77], ecx ; ret 0x8148
0x00000000004229f9 : add dword ptr [rax], eax ; add byte ptr [rax - 9], al ; std ; call rax
0x00000000004146df : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040757b : add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], al ; ret 0x3141
0x0000000000409a85 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040bdac : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000411adc : add dword ptr [rax], ecx ; ret 0x840
0x0000000000408926 : add dword ptr [rax], ecx ; ret 0x844
0x0000000000409485 : add dword ptr [rax], esp ; ret 0x840
0x000000000040c805 : add dword ptr [rcx + rax], esp ; movzx eax, al ; pop rbp ; ret
0x000000000040eafc : add dword ptr [rdi], ecx ; mov dh, -0x3e ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040c3fb : add dword ptr [rdi], ecx ; mov dh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040c18d : add dword ptr [rdi], ecx ; mov dh, -0x3f ; pop rbp ; ret
0x000000000040550b : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040901f : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004093fd : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004044ca : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000408f0d : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040966c : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004043c2 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000040856c : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004085d8 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x9588
0x0000000000408bb6 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xe280
0x0000000000402964 : add eax, 0x224b6e ; add ebx, esi ; ret
0x000000000041b09b : add eax, 0xe9000000 ; ret 2
0x000000000041e286 : add eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040fe6c : add eax, ecx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040292b : add eax, edx ; sar rax, 1 ; jne 0x40293c ; pop rbp ; ret
0x000000000041d0a9 : add eax, esi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x0000000000402969 : add ebx, esi ; ret
0x000000000041b6ab : add edi, eax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x0000000000424961 : add edi, edi ; jmp qword ptr [rdx]
0x000000000041b069 : add esi, dword ptr [rsi - 2] ; dec dword ptr [rax - 0x73] ; xor al, 0x25 ; ret
0x000000000040b713 : add esi, eax ; mov rax, rsi ; pop rbp ; ret
0x0000000000402c8b : add esp, 0x10 ; pop rbp ; ret
0x000000000041627b : add esp, 0x100 ; pop rbp ; ret
0x000000000041a06d : add esp, 0x1030 ; pop rbp ; ret
0x000000000040cff5 : add esp, 0x1070 ; pop rbp ; ret
0x000000000041d72c : add esp, 0x10e0 ; pop rbp ; ret
0x0000000000417fe7 : add esp, 0x120 ; pop rbp ; ret
0x000000000041b3cc : add esp, 0x130 ; pop rbp ; ret
0x0000000000412715 : add esp, 0x170 ; pop rbp ; ret
0x000000000041f1fb : add esp, 0x18 ; ret
0x0000000000408d47 : add esp, 0x190 ; pop rbp ; ret
0x00000000004188cc : add esp, 0x1a0 ; pop rbp ; ret
0x000000000040edbc : add esp, 0x1b0 ; pop rbp ; ret
0x00000000004193ee : add esp, 0x1e0 ; pop rbp ; ret
0x0000000000409024 : add esp, 0x20 ; pop rbp ; ret
0x000000000041c266 : add esp, 0x250 ; pop rbp ; ret
0x0000000000402d9d : add esp, 0x30 ; pop rbp ; ret
0x00000000004044cf : add esp, 0x40 ; pop rbp ; ret
0x000000000041a97c : add esp, 0x480 ; pop rbp ; ret
0x0000000000403afb : add esp, 0x50 ; pop rbp ; ret
0x000000000040d9f0 : add esp, 0x60 ; pop rbp ; ret
0x0000000000405344 : add esp, 0x68 ; pop rbx ; pop rbp ; ret
0x0000000000409671 : add esp, 0x70 ; pop rbp ; ret
0x0000000000409198 : add esp, 0x80 ; pop rbp ; ret
0x000000000040b3d0 : add esp, 0x90 ; pop rbp ; ret
0x0000000000418763 : add esp, 0xa0 ; pop rbp ; ret
0x0000000000412b3a : add esp, 0xb0 ; pop rbp ; ret
0x000000000040df4c : add esp, 0xc0 ; pop rbp ; ret
0x0000000000402126 : add esp, 8 ; ret
0x00000000004229f8 : add qword ptr [r8], r8 ; add byte ptr [rax - 9], al ; std ; call rax
0x000000000041e285 : add rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040fe6b : add rax, rcx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040292a : add rax, rdx ; sar rax, 1 ; jne 0x40293d ; pop rbp ; ret
0x000000000041d0a8 : add rax, rsi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x000000000041b6aa : add rdi, rax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x000000000040b712 : add rsi, rax ; mov rax, rsi ; pop rbp ; ret
0x0000000000402c8a : add rsp, 0x10 ; pop rbp ; ret
0x000000000041627a : add rsp, 0x100 ; pop rbp ; ret
0x000000000041a06c : add rsp, 0x1030 ; pop rbp ; ret
0x000000000040cff4 : add rsp, 0x1070 ; pop rbp ; ret
0x000000000041d72b : add rsp, 0x10e0 ; pop rbp ; ret
0x0000000000417fe6 : add rsp, 0x120 ; pop rbp ; ret
0x000000000041b3cb : add rsp, 0x130 ; pop rbp ; ret
0x0000000000412714 : add rsp, 0x170 ; pop rbp ; ret
0x000000000041f1fa : add rsp, 0x18 ; ret
0x0000000000408d46 : add rsp, 0x190 ; pop rbp ; ret
0x00000000004188cb : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000040edbb : add rsp, 0x1b0 ; pop rbp ; ret
0x00000000004193ed : add rsp, 0x1e0 ; pop rbp ; ret
0x0000000000409023 : add rsp, 0x20 ; pop rbp ; ret
0x000000000041c265 : add rsp, 0x250 ; pop rbp ; ret
0x0000000000402d9c : add rsp, 0x30 ; pop rbp ; ret
0x00000000004044ce : add rsp, 0x40 ; pop rbp ; ret
0x000000000041a97b : add rsp, 0x480 ; pop rbp ; ret
0x0000000000403afa : add rsp, 0x50 ; pop rbp ; ret
0x000000000040d9ef : add rsp, 0x60 ; pop rbp ; ret
0x0000000000405343 : add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x0000000000409670 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000409197 : add rsp, 0x80 ; pop rbp ; ret
0x000000000040b3cf : add rsp, 0x90 ; pop rbp ; ret
0x0000000000418762 : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000412b39 : add rsp, 0xb0 ; pop rbp ; ret
0x000000000040df4b : add rsp, 0xc0 ; pop rbp ; ret
0x0000000000402125 : add rsp, 8 ; ret
0x00000000004043c1 : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040856b : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000402966 : and al, byte ptr [r8] ; add ebx, esi ; ret
0x0000000000402967 : and al, byte ptr [rax] ; add ebx, esi ; ret
0x0000000000404749 : and al, byte ptr [rcx - 0xa] ; jmp qword ptr [rcx]
0x0000000000411c20 : and bh, 1 ; movzx eax, dil ; pop rbp ; ret
0x000000000042318c : and byte ptr [rbx - 1], ah ; call qword ptr [rax]
0x0000000000417fe9 : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040fcdb : and byte ptr [rcx], al ; add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x000000000040c18b : and cl, 1 ; movzx eax, cl ; pop rbp ; ret
0x0000000000411c1f : and dil, 1 ; movzx eax, dil ; pop rbp ; ret
0x0000000000409f67 : and eax, 0x2144ce03 ; ret 0x941
0x0000000000406086 : and eax, 0x4212fe ; call 0x402357
0x0000000000410285 : and eax, 0x421e50 ; mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x000000000040e33f : and eax, 0x627958 ; pop rbp ; ret
0x000000000040e49f : and eax, 0x627960 ; pop rbp ; ret
0x000000000040e4c3 : and eax, 0x627968 ; pop rbp ; ret
0x0000000000409f45 : and eax, 0x8945ce03 ; ret
0x0000000000425865 : and eax, dword ptr [rax] ; add byte ptr [rax], ch ; js 0x425870 ; jmp qword ptr [rcx]
0x0000000000405f66 : and eax, dword ptr [rcx - 0xf] ; jmp qword ptr [rcx]
0x000000000041a2d9 : and eax, edx ; xor rdi, rdx ; or rax, rdi ; pop rbp ; ret
0x000000000041a55e : and edx, eax ; mov al, dl ; movzx eax, al ; pop rbp ; ret
0x000000000041a438 : and edx, eax ; mov ax, dx ; movzx eax, ax ; pop rbp ; ret
0x000000000041a1e7 : and edx, eax ; or r9d, edx ; mov eax, r9d ; pop rbp ; ret
0x000000000041a4f3 : and edx, ebx ; mov al, dl ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000041a55d : and edx, r8d ; mov al, dl ; movzx eax, al ; pop rbp ; ret
0x000000000040f068 : and esi, dword ptr [rcx] ; adc byte ptr [rcx - 0xa], al ; jmp qword ptr [rcx]
0x000000000040f067 : and r14d, dword ptr [r9] ; adc byte ptr [rcx - 0xa], al ; jmp qword ptr [rcx]
0x0000000000423af8 : call 0x14423986
0x0000000000409a22 : call 0x4022f8
0x000000000040608b : call 0x402352
0x00000000004062b3 : call 0x4025b2
0x000000000041b068 : call 0x402679
0x0000000000406477 : call 0x402762
0x000000000041c074 : call 0x441c4
0x000000000040d1e6 : call 0x49035b36
0x000000000040d1e5 : call 0x49035b37
0x000000000040e7ef : call 0x4903713f
0x000000000040e7ee : call 0x49037140
0x000000000041f08a : call 0x490479da
0x000000000041f089 : call 0x490479db
0x0000000000408bf8 : call 0xffffffff81ba9825
0x0000000000417a31 : call 0xffffffffca6b3cc1
0x0000000000417a30 : call 0xffffffffca6b3cc2
0x0000000000424338 : call 0xffffffffd44241fb
0x00000000004143e9 : call 0xffffffffe903cd39
0x00000000004143e8 : call 0xffffffffe903cd3a
0x000000000041cf33 : call 0xffffffffe9045883
0x0000000000406852 : call 0xfffffffff1c19e96
0x0000000000410771 : call 0xffffffffff7a92c2
0x0000000000410770 : call 0xffffffffff7a92c3
0x00000000004108af : call 0xffffffffff7a9400
0x00000000004108ae : call 0xffffffffff7a9401
0x000000000041f139 : call qword ptr [r12 + rbx*8]
0x000000000042310f : call qword ptr [rax]
0x0000000000423afb : call qword ptr [rbx]
0x000000000042397b : call qword ptr [rcx]
0x000000000042421b : call qword ptr [rdx]
0x0000000000423f1b : call qword ptr [rsi]
0x000000000041f13a : call qword ptr [rsp + rbx*8]
0x000000000040298d : call rax
0x000000000041413c : call rbx
0x000000000042417b : call rcx
0x000000000042487b : call rdi
0x0000000000411b1a : clc ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041b3ca : clc ; add rsp, 0x130 ; pop rbp ; ret
0x000000000040ff0e : clc ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041c264 : clc ; add rsp, 0x250 ; pop rbp ; ret
0x000000000040c663 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040d774 : clc ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041a97a : clc ; add rsp, 0x480 ; pop rbp ; ret
0x000000000040d4c8 : clc ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040d9ee : clc ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040d34b : clc ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040f867 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x0000000000412b38 : clc ; add rsp, 0xb0 ; pop rbp ; ret
0x0000000000411a10 : clc ; add rsp, 0xc0 ; pop rbp ; ret
0x000000000040292f : clc ; jne 0x402938 ; pop rbp ; ret
0x000000000041a3ca : clc ; mov ax, r8w ; movzx eax, ax ; pop rbp ; ret
0x000000000041ef65 : clc ; mov dword ptr [rax + 0x14], ecx ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000412e85 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040b407 : clc ; mov dword ptr [rbp - 0xc], esi ; mov qword ptr [rbp - 0x18], rdx ; pop rbp ; ret
0x000000000041e1db : clc ; mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x000000000041eaff : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000411a4e : clc ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000403b07 : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040f9cb : clc ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040f9eb : clc ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040fa0b : clc ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000415c1b : clc ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000415c5b : clc ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000415c3b : clc ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000041a0fc : clc ; mov rax, r8 ; pop rbp ; ret
0x0000000000403b0b : clc ; pop rbp ; ret
0x00000000004062b4 : clc ; ret 0xffff
0x0000000000402cb7 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000419cd5 : cld ; add rsp, 0x100 ; pop rbp ; ret
0x000000000041a06b : cld ; add rsp, 0x1030 ; pop rbp ; ret
0x000000000041d72a : cld ; add rsp, 0x10e0 ; pop rbp ; ret
0x0000000000417fe5 : cld ; add rsp, 0x120 ; pop rbp ; ret
0x00000000004178d6 : cld ; add rsp, 0x1b0 ; pop rbp ; ret
0x000000000040c0f4 : cld ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041967e : cld ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004199e2 : cld ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041e1c2 : cld ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040b3ce : cld ; add rsp, 0x90 ; pop rbp ; ret
0x000000000040df4a : cld ; add rsp, 0xc0 ; pop rbp ; ret
0x000000000041eafc : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000419453 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040c0f1 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041967b : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004199df : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004077d4 : cmove esp, dword ptr [rcx] ; ret 0x8941
0x000000000040549f : cmp al, 0x25 ; ret
0x000000000041015a : cmp dword ptr [rax - 0x75], ecx ; jne 0x410144 ; call rax
0x00000000004192d9 : cmp dword ptr [rdx - 0x76be63d5], ebx ; ret
0x00000000004028ed : cmp eax, 0xe ; mov rbp, rsp ; ja 0x402900 ; pop rbp ; ret
0x00000000004070bb : cmp edi, dword ptr [rdx + 0x4d] ; add byte ptr [rcx - 0x77], al ; ret 0x8141
0x00000000004070db : cmp edi, dword ptr [rdx + 0x4d] ; add byte ptr [rcx], ah ; ret 0x941
0x0000000000425409 : cmp edi, edi ; call qword ptr [rsi]
0x00000000004180dc : cwde ; mov rcx, qword ptr [rax*8 + 0x422418] ; jmp rcx
0x0000000000424498 : cwde ; ret
0x0000000000416ee8 : dec dword ptr [rax + 0x21] ; ret 0x6948
0x00000000004156da : dec dword ptr [rax + 0x29] ; ret 0x2948
0x000000000040c8d6 : dec dword ptr [rax + 0x29] ; ret 0xb848
0x0000000000417695 : dec dword ptr [rax + 0x3b] ; or byte ptr [r15], cl ; sahf ; ret 0xe280
0x00000000004176ac : dec dword ptr [rax + 0x3b] ; sbb byte ptr [r15], cl ; sahf ; ret 0xe280
0x000000000040a48f : dec dword ptr [rax - 0x46] ; sti ; ret 0xbbf3
0x000000000041b06c : dec dword ptr [rax - 0x73] ; xor al, 0x25 ; ret
0x000000000040c339 : dec dword ptr [rax - 0x75] ; clc ; pop rbp ; ret
0x000000000041c070 : dec dword ptr [rax - 0x75] ; push rbp ; call 0x441c8
0x000000000040a557 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x000000000040be76 : dec dword ptr [rax - 0x77] ; ret 0x41e8
0x00000000004066d0 : dec dword ptr [rax - 0x77] ; ret 0x57e8
0x000000000041c0a6 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x00000000004161ac : dec dword ptr [rax - 0x77] ; ret 0x9be8
0x0000000000415ea9 : dec dword ptr [rax - 0x77] ; ret 0x9ee8
0x0000000000406a84 : dec dword ptr [rax - 0x77] ; ret 0xa3e8
0x0000000000407b13 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040c8cf : dec dword ptr [rax - 0x7f] ; ret 0xffff
0x00000000004048fe : dec dword ptr [rbx - 0x1eb6b] ; push qword ptr [rcx] ; ret 0x858b
0x0000000000413b42 : dec dword ptr [rcx - 0x77] ; ret 0x294d
0x0000000000408068 : dec dword ptr [rcx] ; ret 0x941
0x0000000000404b39 : dec dword ptr [rcx] ; ret 0xf709
0x000000000040c6f0 : div dword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000040c6ef : div qword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x00000000004197d9 : enter -0x3577, -0x7f ; ret 0x8bd2
0x000000000040a49f : enter -0x46b8, 0x4a ; sti ; ret 0xbbf3
0x0000000000410157 : enter -0x74b8, 0x39 ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x0000000000405283 : enter -0x74b8, 0x7d ; fsubr st(0) ; ret
0x000000000041cc44 : enter -0x76b8, 0xc ; ret 0x59e9
0x00000000004092c4 : enter -0x7cb8, -0x3c ; pop rbp ; ret
0x00000000004171a4 : enter 0x28, 0 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000413ed0 : enter 0x4b05, 0x34 ; fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x0000000000411fbb : enter 0x6274, 0 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000422dc5 : fdivr st(6) ; jmp rax
0x000000000040f0b8 : fiadd dword ptr [rcx - 0xa] ; jmp qword ptr [rcx]
0x0000000000413ed4 : fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x000000000041a4f4 : fimul dword ptr [rax - 0x3f49f030] ; pop rbx ; pop rbp ; ret
0x0000000000416695 : fimul word ptr [rax + 9] ; ret
0x00000000004085d4 : fmul dword ptr [r8 + 0x3b] ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x9588
0x000000000040fb73 : fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x000000000041d94e : fmul dword ptr [r8 - 0x77] ; ret 0x8148
0x000000000041206b : fmul dword ptr [rax + 0x29] ; ret 0x148
0x00000000004085d5 : fmul dword ptr [rax + 0x3b] ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x9588
0x000000000040fb74 : fmul dword ptr [rax - 0x77] ; ret 0x2948
0x000000000041d94f : fmul dword ptr [rax - 0x77] ; ret 0x8148
0x0000000000407b0d : fmul dword ptr [rbx - 0x74b4b] ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000041f13c : fmul qword ptr [rax - 0x7d] ; ret
0x000000000040b3f6 : fsub dword ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000040b3f7 : fsub dword ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x0000000000405287 : fsubr st(0) ; ret
0x0000000000402c89 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041ee9f : hlt ; mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040b40a : hlt ; mov qword ptr [rbp - 0x18], rdx ; pop rbp ; ret
0x0000000000402900 : hlt ; pop rbp ; mov edi, 0x627468 ; jmp rax
0x00000000004229fd : idiv ebp ; call rax
0x0000000000423551 : idiv ebp ; jmp rdx
0x000000000041ae77 : imul eax ; ret
0x0000000000402121 : imul eax, dword ptr [rax + rax], 0 ; add rsp, 8 ; ret
0x000000000040e8e8 : imul eax, dword ptr [rax - 0x77], 0x7a ; add cl, byte ptr [rax - 0x77] ; ret 0x148
0x0000000000424779 : in al, -2 ; jmp qword ptr [rdi]
0x000000000041aaac : in al, 0x48 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040afd7 : in al, dx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041d283 : in al, dx ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004043c8 : in al, dx ; pop rbp ; ret
0x000000000040e5a0 : in al, dx ; ret
0x0000000000424494 : in al, dx ; sldt word ptr [rax] ; cwde ; ret
0x000000000040c803 : in eax, -0x50 ; add dword ptr [rcx + rax], esp ; movzx eax, al ; pop rbp ; ret
0x0000000000415923 : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x0000000000422b4f : inc dword ptr [rax] ; adc byte ptr [rax], al ; add byte ptr [rax], dh ; mov esi, dr1 ; jmp qword ptr [rax]
0x0000000000404199 : inc dword ptr [rbp + 0x21] ; ret 0x8141
0x000000000040a500 : inc dword ptr [rbp - 0x77] ; ret 0x8141
0x0000000000407577 : inc dword ptr [rcx + 0x1fff1] ; add byte ptr [rbp - 0x77], al ; ret 0x3141
0x000000000041a6f4 : inc dword ptr [rcx - 0x46343] ; jmp qword ptr [rdx]
0x000000000040a6c3 : inc dword ptr [rcx - 0x77] ; ret 0x8141
0x000000000040c444 : inc dword ptr [rcx - 0xa] ; jmp qword ptr [rcx]
0x0000000000404954 : inc dword ptr [rcx - 0xf] ; jmp qword ptr [rcx]
0x000000000041415b : inc dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000422dff : inc eax ; sbb al, byte ptr [rax] ; add al, dh ; loope 0x422e0d ; jmp rax
0x0000000000424714 : insb byte ptr [rdi], dx ; adc al, byte ptr [rax] ; add byte ptr [rax], cl ; loopne 0x424720 ; jmp qword ptr [rdx]
0x0000000000424014 : insb byte ptr [rdi], dx ; or eax, dword ptr [rax] ; add byte ptr [rax], cl ; test al, -2 ; call qword ptr [rcx]
0x0000000000405fe0 : insb byte ptr [rdi], dx ; ret
0x0000000000418705 : int 0x80
0x0000000000408a21 : int 0x81
0x000000000041bdac : int 0xfd
0x00000000004028f3 : ja 0x4028fa ; pop rbp ; ret
0x0000000000411a51 : ja 0x411a9e ; pop rbp ; ret
0x000000000041b06a : jbe 0x41b071 ; dec dword ptr [rax - 0x73] ; xor al, 0x25 ; ret
0x00000000004028ff : je 0x4028fd ; pop rbp ; mov edi, 0x627468 ; jmp rax
0x000000000040e59c : je 0x40e605 ; add al, ch ; in al, dx ; ret
0x0000000000403b06 : jge 0x403b07 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040f9ca : jge 0x40f9cb ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040f9ea : jge 0x40f9eb ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040fa0a : jge 0x40fa0b ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000040fdc0 : jge 0x40fdb3 ; mov rcx, qword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000411390 : jge 0x411383 ; mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000411a4d : jge 0x411a4e ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000415926 : jge 0x415923 ; pop rbp ; ret
0x0000000000415c1a : jge 0x415c1b ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000415c3a : jge 0x415c3b ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000415c5a : jge 0x415c5b ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000415c80 : jge 0x415c7d ; pop rbp ; ret
0x000000000041a71d : jge 0x41a6e1 ; call rax
0x000000000041a853 : jge 0x41a81e ; mov rsi, qword ptr [rbp - 0x460] ; call rax
0x000000000041a8b0 : jge 0x41a874 ; call rax
0x000000000041a92e : jge 0x41a8ea ; call rax
0x000000000041a960 : jge 0x41a91c ; call rax
0x000000000041e1da : jge 0x41e1dd ; mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x000000000042327d : jl 0x423280 ; call rax
0x000000000040c7f4 : jle 0x40c80d ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040b10d : jmp 0x283317
0x000000000040215b : jmp 0x402137
0x0000000000405498 : jmp 0x4054c8
0x000000000040897a : jmp 0x407c06
0x000000000040897a : jmp 0x407c08
0x0000000000410610 : jmp 0x49038f60
0x000000000041108e : jmp 0x490399de
0x00000000004110fb : jmp 0x49039a4b
0x000000000041188c : jmp 0x4903a1dc
0x00000000004118f9 : jmp 0x4903a249
0x0000000000403d5e : jmp 0xffffffffc2a28fa3
0x0000000000418c38 : jmp 0xffffffffc2cad442
0x0000000000422b17 : jmp qword ptr [rax]
0x00000000004080d9 : jmp qword ptr [rcx]
0x0000000000423b5b : jmp qword ptr [rdi]
0x000000000041a6fa : jmp qword ptr [rdx]
0x0000000000419eb5 : jmp qword ptr [rsi]
0x0000000000422d07 : jmp rax
0x0000000000402f3b : jmp rcx
0x0000000000402947 : jmp rdx
0x0000000000423a7b : jmp rsi
0x0000000000423fbb : jmp rsp
0x0000000000402930 : jne 0x402937 ; pop rbp ; ret
0x000000000040b409 : jne 0x40b406 ; mov qword ptr [rbp - 0x18], rdx ; pop rbp ; ret
0x000000000040c6f1 : jne 0x40c6e9 ; mov rax, rdx ; pop rbp ; ret
0x000000000040fe36 : jne 0x40fe21 ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000041015d : jne 0x410141 ; call rax
0x0000000000411d02 : jne 0x411cfa ; mov rax, rdx ; pop rbp ; ret
0x00000000004158e9 : jne 0x4158cd ; mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x0000000000417131 : jne 0x417129 ; mov rax, rdx ; pop rbp ; ret
0x000000000041abb6 : jne 0x41abae ; mov rax, rdx ; pop rbp ; ret
0x000000000040c779 : jns 0x40c7e6 ; add al, ch ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042324d : jns 0x423250 ; call qword ptr [rax]
0x0000000000409673 : jo 0x4096d4 ; ret
0x000000000040cff7 : jo 0x40d00e ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040d34f : jo 0x40d3b0 ; ret
0x0000000000412717 : jo 0x41271f ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000412fd5 : jo 0x413036 ; ret
0x00000000004145ff : jo 0x414665 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000414ca4 : jo 0x414d05 ; ret
0x0000000000414dde : jo 0x414e3f ; ret
0x00000000004152ae : jo 0x4152b6 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000415c3f : jo 0x415ca0 ; ret
0x0000000000415c3e : jo 0x415ca1 ; ret
0x000000000041e1c6 : jo 0x41e227 ; ret
0x000000000042320d : jo 0x423210 ; call qword ptr [rax]
0x0000000000423550 : jo 0x42354c ; std ; jmp rdx
0x00000000004070bc : jp 0x407110 ; add byte ptr [rcx - 0x77], al ; ret 0x8141
0x00000000004070dc : jp 0x40712f ; add byte ptr [rcx], ah ; ret 0x941
0x0000000000423979 : jp 0x42397b ; call qword ptr [rcx]
0x000000000042323d : js 0x423240 ; call rax
0x0000000000425869 : js 0x42586c ; jmp qword ptr [rcx]
0x000000000041b09a : lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000406084 : lea edi, dword ptr [0x4212fe] ; call 0x402359
0x00000000004083f6 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004083f5 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000423188 : lock sub byte ptr [rax], al ; add byte ptr [rax], ah ; movsxd rdi, edi ; call qword ptr [rax]
0x0000000000409cff : loop 0x409cd6 ; mov word ptr [rcx - 0x77], es ; ret 0x8141
0x0000000000409d2c : loop 0x409d02 ; mov word ptr [rcx], fs ; ret 0x941
0x0000000000409d07 : loop 0x409d11 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], al ; ret
0x0000000000409f43 : loop 0x409f35 ; and eax, 0x8945ce03 ; ret
0x00000000004070ba : loope 0x4070fe ; jp 0x407112 ; add byte ptr [rcx - 0x77], al ; ret 0x8141
0x0000000000409cfd : loope 0x409cf0 ; loop 0x409cd8 ; mov word ptr [rcx - 0x77], es ; ret 0x8141
0x000000000040c18c : loope 0x40c195 ; movzx eax, cl ; pop rbp ; ret
0x0000000000422e05 : loope 0x422e07 ; jmp rax
0x0000000000408cc7 : loopne 0x408cb3 ; ret
0x000000000040eb3b : loopne 0x40eb8b ; add esp, 0x20 ; pop rbp ; ret
0x000000000040eb3a : loopne 0x40eb8c ; add esp, 0x20 ; pop rbp ; ret
0x000000000040f60f : loopne 0x40f65f ; add esp, 0x20 ; pop rbp ; ret
0x000000000040f60e : loopne 0x40f660 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040f9af : loopne 0x40f9ff ; add esp, 0x30 ; pop rbp ; ret
0x000000000040f9ae : loopne 0x40fa00 ; add esp, 0x30 ; pop rbp ; ret
0x000000000040fe37 : loopne 0x40fe89 ; mov esi, eax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x0000000000418f30 : loopne 0x418f80 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000418f2f : loopne 0x418f81 ; add esp, 0x20 ; pop rbp ; ret
0x00000000004193f0 : loopne 0x4193f8 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041d627 : loopne 0x41d613 ; ret
0x000000000041d72e : loopne 0x41d745 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000424719 : loopne 0x42471b ; jmp qword ptr [rdx]
0x00000000004173c2 : mov ah, -0x77 ; ret 0xca29
0x000000000040fd3e : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040d287 : mov al, -0x18 ; ret
0x0000000000412b3c : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040c09d : mov al, 0 ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000406475 : mov al, 0 ; call 0x402764
0x0000000000423238 : mov al, 0x2b ; add byte ptr [rax], al ; adc byte ptr [rax - 1], bh ; call rax
0x0000000000423278 : mov al, 0x2c ; add byte ptr [rax], al ; push rax ; jl 0x423285 ; call rax
0x000000000040d6da : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000414a08 : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x000000000040edbe : mov al, 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040c804 : mov al, 1 ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000408568 : mov al, byte ptr [rbp - 0xa] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000409224 : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040c366 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040b69e : mov al, byte ptr [rbp - 9] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041e528 : mov al, ch ; ret 0xfe3d
0x000000000041a560 : mov al, dl ; movzx eax, al ; pop rbp ; ret
0x000000000041a4f5 : mov al, dl ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000041a43a : mov ax, dx ; movzx eax, ax ; pop rbp ; ret
0x000000000041a3cb : mov ax, r8w ; movzx eax, ax ; pop rbp ; ret
0x0000000000415bcc : mov bh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041a3d0 : mov bh, -0x40 ; pop rbp ; ret
0x0000000000424219 : mov bh, -2 ; call qword ptr [rdx]
0x0000000000422c85 : mov bh, -2 ; jmp rax
0x0000000000425a89 : mov bh, bh ; jmp rax
0x0000000000423cb9 : mov bh, dh ; call qword ptr [rbx]
0x0000000000422b45 : mov bh, dh ; jmp rax
0x000000000042333d : mov bl, -1 ; call rax
0x0000000000424179 : mov bl, -2 ; call rcx
0x000000000040e4c1 : mov byte ptr [0x627968], al ; pop rbp ; ret
0x000000000041b667 : mov byte ptr [rax + 0x14], 1 ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041d07b : mov byte ptr [rax + 0xc], 1 ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040f4db : mov byte ptr [rbp - 1], 0x3f ; movsx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000408447 : mov byte ptr [rdx + 0x19], cl ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040f352 : mov byte ptr [rdx + 0xb], 0 ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040e0e5 : mov byte ptr [rdx + rax], 0 ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000423978 : mov byte ptr [rdx - 2], bh ; call qword ptr [rcx]
0x0000000000402963 : mov byte ptr [rip + 0x224b6e], 1 ; ret
0x0000000000411c25 : mov dh, -0x39 ; pop rbp ; ret
0x000000000040eafe : mov dh, -0x3e ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040c3fd : mov dh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040c18f : mov dh, -0x3f ; pop rbp ; ret
0x000000000040550d : mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000409021 : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004093ff : mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004044cc : mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000408f0f : mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000405341 : mov dh, -0x40 ; add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x000000000040966e : mov dh, -0x40 ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004043c4 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000040856e : mov dh, -0x40 ; pop rbp ; ret
0x000000000041a4f8 : mov dh, -0x40 ; pop rbx ; pop rbp ; ret
0x00000000004158e6 : mov dh, -0xe ; mov dword ptr [rbp - 0x24], esi ; mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x00000000004241f9 : mov dh, -2 ; jmp rsi
0x0000000000423b59 : mov dh, bh ; jmp qword ptr [rdi]
0x000000000040e33d : mov dword ptr [0x627958], edi ; pop rbp ; ret
0x000000000040e49d : mov dword ptr [0x627960], edi ; pop rbp ; ret
0x000000000041ef66 : mov dword ptr [rax + 0x14], ecx ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000412e86 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000412e48 : mov dword ptr [rax], eax ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000412d04 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000412e47 : mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040b60f : mov dword ptr [rbp - 0x18], eax ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040b40c : mov dword ptr [rbp - 0x18], edx ; pop rbp ; ret
0x000000000041aaaa : mov dword ptr [rbp - 0x1c], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040eb39 : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004158e8 : mov dword ptr [rbp - 0x24], esi ; mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x000000000040b3f5 : mov dword ptr [rbp - 0x28], eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000402d99 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004092c2 : mov dword ptr [rbp - 0x38], eax ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040fd3c : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040d6d8 : mov dword ptr [rbp - 0x50], eax ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004062ad : mov dword ptr [rbp - 0x590], eax ; call 0x4025b8
0x0000000000402c87 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040b408 : mov dword ptr [rbp - 0xc], esi ; mov qword ptr [rbp - 0x18], rdx ; pop rbp ; ret
0x0000000000402cb5 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041eafd : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040e321 : mov dword ptr [rbp - 8], eax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000403b05 : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000415925 : mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x00000000004195a1 : mov dword ptr [rbp - 8], edx ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000412efe : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405205 : mov dword ptr [rcx + 0x38], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405255 : mov dword ptr [rcx + 0x40], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041d0ac : mov dword ptr [rdi + 0x10], eax ; pop rbp ; ret
0x000000000041028a : mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x0000000000411a50 : mov dword ptr [rdi + 0x48], esi ; pop rbp ; ret
0x000000000041e1dc : mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x000000000040c7f3 : mov dword ptr [rsi + 0x10], edi ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041b6ae : mov dword ptr [rsi], edi ; pop rbp ; ret
0x000000000040d693 : mov eax, 0xb0c28948 ; add al, ch ; ret 0xff4e
0x0000000000408bb3 : mov eax, 0xf013b48 ; xchg eax, esp ; ret 0xe280
0x000000000041a718 : mov eax, dword ptr [rax + 0x10] ; mov rdi, qword ptr [rbp - 0x40] ; call rax
0x000000000041a95b : mov eax, dword ptr [rax + 0x18] ; mov rdi, qword ptr [rbp - 0x48] ; call rax
0x000000000041a7be : mov eax, dword ptr [rax] ; mov rdi, qword ptr [rbp - 0x460] ; call rax
0x000000000041a92a : mov eax, dword ptr [rax] ; mov rdi, qword ptr [rbp - 0x48] ; call rax
0x0000000000412cb8 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040e6ed : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040ea83 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040e6ab : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000412cb5 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000415ca1 : mov eax, dword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040e9df : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040afd5 : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040e810 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000412c6d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000412cfe : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040b613 : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040f60d : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040f9ad : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040fe3c : mov eax, dword ptr [rbp - 0x20] ; call rax
0x000000000040d0d0 : mov eax, dword ptr [rbp - 0x24] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004158eb : mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x00000000004115ef : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000412e4a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000418e7b : mov eax, dword ptr [rbp - 0x2c] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040c59b : mov eax, dword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000412fcf : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000414b79 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041eea0 : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000419454 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040c0f2 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041967c : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004199e0 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041e1c0 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000411b18 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040ff0c : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040c661 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040d772 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040d4c6 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040d9ec : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040d349 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000403b09 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040f9cd : mov eax, dword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040f9ed : mov eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040fa0d : mov eax, dword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000415c1d : mov eax, dword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000415c5d : mov eax, dword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000415c3d : mov eax, dword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000041a3cd : mov eax, eax ; movzx eax, ax ; pop rbp ; ret
0x000000000041a0fe : mov eax, eax ; pop rbp ; ret
0x000000000041590c : mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041a1ed : mov eax, ecx ; pop rbp ; ret
0x0000000000415a3f : mov eax, edi ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000410471 : mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b51d : mov eax, edx ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041a43b : mov eax, edx ; movzx eax, ax ; pop rbp ; ret
0x000000000040c6f4 : mov eax, edx ; pop rbp ; ret
0x000000000040c38f : mov eax, esi ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004159b3 : mov eax, esi ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b716 : mov eax, esi ; pop rbp ; ret
0x000000000041a3cc : mov eax, r8d ; movzx eax, ax ; pop rbp ; ret
0x000000000041a1ec : mov eax, r9d ; pop rbp ; ret
0x000000000041a7c2 : mov ebp, 0xfffffba0 ; call rax
0x000000000040298b : mov ebp, esp ; call rax
0x00000000004028f1 : mov ebp, esp ; ja 0x4028fc ; pop rbp ; ret
0x0000000000415922 : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000041871d : mov ecx, 0x5b2a830a ; ret
0x0000000000402f34 : mov ecx, dword ptr [rax*8 + 0x41f220] ; jmp rcx
0x0000000000403995 : mov ecx, dword ptr [rax*8 + 0x41f428] ; jmp rcx
0x0000000000413092 : mov ecx, dword ptr [rax*8 + 0x421ec0] ; jmp rcx
0x00000000004133b6 : mov ecx, dword ptr [rax*8 + 0x421f08] ; jmp rcx
0x00000000004180de : mov ecx, dword ptr [rax*8 + 0x422418] ; jmp rcx
0x0000000000412d01 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004107d2 : mov ecx, dword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000041076f : mov ecx, dword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040fdc3 : mov ecx, dword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000411393 : mov ecx, dword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000041a6cb : mov ecx, dword ptr [rbp - 0x48] ; call rax
0x0000000000411460 : mov ecx, dword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000406473 : mov ecx, eax ; mov al, 0 ; call 0x402766
0x0000000000402985 : mov edi, 0x626e20 ; mov rbp, rsp ; call rax
0x0000000000402902 : mov edi, 0x627468 ; jmp rax
0x0000000000402942 : mov edi, 0x627468 ; jmp rdx
0x00000000004232bd : mov edi, dr1 ; call rax
0x0000000000425be9 : mov edi, dr1 ; jmp rdx
0x000000000041a71c : mov edi, dword ptr [rbp - 0x40] ; call rax
0x000000000041a7c1 : mov edi, dword ptr [rbp - 0x460] ; call rax
0x000000000041a92d : mov edi, dword ptr [rbp - 0x48] ; call rax
0x0000000000411a4c : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040f9c9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040f9e9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040fa09 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000415c19 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000415c59 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000415c39 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000410773 : mov edi, dword ptr [rcx] ; call rax
0x0000000000410159 : mov edi, dword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x000000000041b6a8 : mov edi, dword ptr [rsi] ; add rdi, rax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x000000000041f137 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000041f136 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x00000000004099e9 : mov edx, 0x21372370 ; ret 0x941
0x000000000040f68d : mov edx, 0x4fdaf5a1 ; ret
0x000000000041a6c7 : mov edx, dword ptr [rbp - 0x40] ; mov rcx, qword ptr [rbp - 0x48] ; call rax
0x0000000000415ca5 : mov edx, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040f67d : mov esi, 0x4fdaf5a1 ; ret
0x0000000000422b55 : mov esi, dr1 ; jmp qword ptr [rax]
0x000000000041015c : mov esi, dword ptr [rbp - 0x20] ; call rax
0x000000000041a856 : mov esi, dword ptr [rbp - 0x460] ; call rax
0x000000000040fdc7 : mov esi, dword ptr [rcx] ; call rax
0x0000000000402940 : mov esi, eax ; mov edi, 0x627468 ; jmp rdx
0x000000000040fe39 : mov esi, eax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x0000000000425864 : mov esp, 0x28000023 ; js 0x425871 ; jmp qword ptr [rcx]
0x00000000004043c7 : mov esp, ebp ; pop rbp ; ret
0x000000000040e33c : mov qword ptr [0x627958], rdi ; pop rbp ; ret
0x000000000040e49c : mov qword ptr [0x627960], rdi ; pop rbp ; ret
0x000000000040b60e : mov qword ptr [rbp - 0x18], rax ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040b40b : mov qword ptr [rbp - 0x18], rdx ; pop rbp ; ret
0x00000000004062ac : mov qword ptr [rbp - 0x590], rax ; call 0x4025b9
0x000000000040e320 : mov qword ptr [rbp - 8], rax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000403b04 : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000415924 : mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x00000000004195a0 : mov qword ptr [rbp - 8], rdx ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000412efd : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405204 : mov qword ptr [rcx + 0x38], rax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405254 : mov qword ptr [rcx + 0x40], rax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041d0ab : mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x0000000000411a4f : mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000041b6ad : mov qword ptr [rsi], rdi ; pop rbp ; ret
0x00000000004173c1 : mov r12b, -0x77 ; ret 0xca29
0x000000000040fd3d : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040d6d9 : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000041e527 : mov r8b, r13b ; ret 0xfe3d
0x000000000041a717 : mov rax, qword ptr [rax + 0x10] ; mov rdi, qword ptr [rbp - 0x40] ; call rax
0x000000000041a95a : mov rax, qword ptr [rax + 0x18] ; mov rdi, qword ptr [rbp - 0x48] ; call rax
0x000000000041a929 : mov rax, qword ptr [rax] ; mov rdi, qword ptr [rbp - 0x48] ; call rax
0x000000000040e6ec : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040ea82 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040e6aa : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000412cb4 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000415ca0 : mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040e9de : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040e80f : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000412c6c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040b612 : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040f60c : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040f9ac : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040fe3b : mov rax, qword ptr [rbp - 0x20] ; call rax
0x00000000004115ee : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040c59a : mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000412fce : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000414b78 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000411b17 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040ff0b : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040c660 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040d771 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040d4c5 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040d9eb : mov rax, qword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040d348 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000403b08 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040f9cc : mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040f9ec : mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040fa0c : mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000415c1c : mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000415c5c : mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000415c3c : mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000041a0fd : mov rax, r8 ; pop rbp ; ret
0x0000000000410470 : mov rax, rdx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b51c : mov rax, rdx ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040c6f3 : mov rax, rdx ; pop rbp ; ret
0x000000000040b715 : mov rax, rsi ; pop rbp ; ret
0x000000000040298a : mov rbp, rsp ; call rax
0x00000000004028f0 : mov rbp, rsp ; ja 0x4028fd ; pop rbp ; ret
0x0000000000415921 : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000402f33 : mov rcx, qword ptr [rax*8 + 0x41f220] ; jmp rcx
0x0000000000403994 : mov rcx, qword ptr [rax*8 + 0x41f428] ; jmp rcx
0x0000000000413091 : mov rcx, qword ptr [rax*8 + 0x421ec0] ; jmp rcx
0x00000000004133b5 : mov rcx, qword ptr [rax*8 + 0x421f08] ; jmp rcx
0x00000000004180dd : mov rcx, qword ptr [rax*8 + 0x422418] ; jmp rcx
0x00000000004107d1 : mov rcx, qword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000041076e : mov rcx, qword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040fdc2 : mov rcx, qword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000411392 : mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000041a6ca : mov rcx, qword ptr [rbp - 0x48] ; call rax
0x000000000041145f : mov rcx, qword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000406472 : mov rcx, rax ; mov al, 0 ; call 0x402767
0x000000000041a71b : mov rdi, qword ptr [rbp - 0x40] ; call rax
0x000000000041a7c0 : mov rdi, qword ptr [rbp - 0x460] ; call rax
0x000000000041a92c : mov rdi, qword ptr [rbp - 0x48] ; call rax
0x0000000000411a4b : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040f9c8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040f9e8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040fa08 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000415c18 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000415c58 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000415c38 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000410772 : mov rdi, qword ptr [rcx] ; call rax
0x0000000000410158 : mov rdi, qword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x000000000041a6c6 : mov rdx, qword ptr [rbp - 0x40] ; mov rcx, qword ptr [rbp - 0x48] ; call rax
0x0000000000415ca4 : mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000041015b : mov rsi, qword ptr [rbp - 0x20] ; call rax
0x000000000041a855 : mov rsi, qword ptr [rbp - 0x460] ; call rax
0x000000000040fdc6 : mov rsi, qword ptr [rcx] ; call rax
0x000000000040293f : mov rsi, rax ; mov edi, 0x627468 ; jmp rdx
0x000000000040fe38 : mov rsi, rax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x00000000004043c6 : mov rsp, rbp ; pop rbp ; ret
0x000000000041679e : mov word ptr [rbx - 0x1874b], cs ; jmp qword ptr [rcx]
0x0000000000409d01 : mov word ptr [rcx - 0x77], es ; ret 0x8141
0x0000000000408691 : mov word ptr [rcx - 0xe], es ; jmp qword ptr [rcx]
0x0000000000409d2e : mov word ptr [rcx], fs ; ret 0x941
0x0000000000424334 : mov word ptr [rsi], cs ; add byte ptr [rax], al ; call 0xffffffffd44241ff
0x00000000004163ed : movabs al, byte ptr [0x148000000022d48] ; ret 0x3948
0x0000000000405f9c : movabs eax, dword ptr [0xfffffff181b28b53] ; jmp qword ptr [rcx]
0x000000000042354c : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 9], dh ; std ; jmp rdx
0x000000000040f4df : movsx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x000000000042318d : movsxd rdi, edi ; call qword ptr [rax]
0x000000000040550c : movzx eax, al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000409020 : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004093fe : movzx eax, al ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004044cb : movzx eax, al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000408f0e : movzx eax, al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000405340 : movzx eax, al ; add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x000000000040966d : movzx eax, al ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004043c3 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040856d : movzx eax, al ; pop rbp ; ret
0x000000000041a4f7 : movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000041a3cf : movzx eax, ax ; pop rbp ; ret
0x0000000000411c24 : movzx eax, bh ; pop rbp ; ret
0x000000000040c3fc : movzx eax, cl ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040c18e : movzx eax, cl ; pop rbp ; ret
0x0000000000415bcb : movzx eax, cx ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000411c23 : movzx eax, dil ; pop rbp ; ret
0x000000000040eafd : movzx eax, dl ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000408569 : mul byte ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000040856a : mul byte ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000040b69f : mul dword ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000040b6a0 : mul dword ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x0000000000409a21 : nop ; call 0x4022f9
0x0000000000422c84 : nop ; mov bh, -2 ; jmp rax
0x0000000000423404 : nop ; ret 0xffff
0x000000000041f158 : nop dword ptr [rax + rax] ; ret
0x000000000041371d : or al, 0x18 ; ret 0x6451
0x0000000000424d81 : or al, 0xffffffffffffffff ; jmp qword ptr [rdi]
0x000000000041d07d : or al, 1 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000414688 : or al, ch ; ret 0xfeda
0x0000000000417698 : or byte ptr [r15], cl ; sahf ; ret 0xe280
0x00000000004158dd : or byte ptr [r15], cl ; xchg eax, edi ; ret 0xe280
0x000000000040c743 : or byte ptr [r15], cl ; xchg eax, esp ; ret 0x5588
0x000000000040dbfe : or byte ptr [rcx + 0x39f9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000040eae0 : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000417699 : or byte ptr [rdi], cl ; sahf ; ret 0xe280
0x00000000004158de : or byte ptr [rdi], cl ; xchg eax, edi ; ret 0xe280
0x000000000040c744 : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x000000000041e2a3 : or dword ptr [rsi + rdi*8 - 1], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000414d61 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000424015 : or eax, dword ptr [rax] ; add byte ptr [rax], cl ; test al, -2 ; call qword ptr [rcx]
0x000000000040f354 : or eax, dword ptr [rax] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041a0fb : or eax, edi ; mov rax, r8 ; pop rbp ; ret
0x000000000041a2df : or eax, edi ; pop rbp ; ret
0x000000000041a1ea : or ecx, edx ; mov eax, r9d ; pop rbp ; ret
0x000000000041a0fa : or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x000000000041a1e9 : or r9d, edx ; mov eax, r9d ; pop rbp ; ret
0x000000000041a2de : or rax, rdi ; pop rbp ; ret
0x0000000000424879 : out -2, eax ; call rdi
0x0000000000411c21 : out 1, eax ; movzx eax, dil ; pop rbp ; ret
0x0000000000402965 : outsb dx, byte ptr [rsi] ; and al, byte ptr [r8] ; add ebx, esi ; ret
0x000000000040fcc9 : outsb dx, byte ptr [rsi] ; ret 0x280f
0x0000000000417101 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041f14c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040af19 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000417103 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041f14e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000409a89 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041f150 : pop r14 ; pop r15 ; ret
0x00000000004083fa : pop r14 ; pop rbp ; ret
0x0000000000409a8b : pop r15 ; pop rbp ; ret
0x000000000041f152 : pop r15 ; ret
0x0000000000424778 : pop rax ; in al, -2 ; jmp qword ptr [rdi]
0x0000000000402962 : pop rbp ; mov byte ptr [rip + 0x224b6e], 1 ; ret
0x0000000000402901 : pop rbp ; mov edi, 0x627468 ; jmp rax
0x000000000040293e : pop rbp ; mov rsi, rax ; mov edi, 0x627468 ; jmp rdx
0x000000000041f14b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000417104 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041f14f : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004028f5 : pop rbp ; ret
0x000000000040af18 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000409a88 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004083f9 : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000405347 : pop rbx ; pop rbp ; ret
0x000000000040aaef : pop rbx ; pop rdx ; test byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x0000000000418721 : pop rbx ; ret
0x0000000000409a8c : pop rdi ; pop rbp ; ret
0x000000000041f153 : pop rdi ; ret
0x000000000040aaf0 : pop rdx ; test byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x0000000000409a8a : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000041f151 : pop rsi ; pop r15 ; ret
0x00000000004083fb : pop rsi ; pop rbp ; ret
0x0000000000417102 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041f14d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040af1a : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040fce0 : pop rsp ; ret 0xf66
0x0000000000408227 : push -0x76000002 ; ret 0xca21
0x000000000040b4c4 : push 0x48ffff6f ; add esp, 0x10 ; pop rbp ; ret
0x000000000040e4c4 : push 0x5d006279 ; ret
0x0000000000423237 : push qword ptr [rax + 0x1000002b] ; js 0x423246 ; call rax
0x0000000000423277 : push qword ptr [rax + 0x5000002c] ; jl 0x423286 ; call rax
0x00000000004233f7 : push qword ptr [rax + 0x60000032] ; ret 0xffff
0x00000000004232b7 : push qword ptr [rax - 0x2fffffd3] ; mov edi, dr1 ; call rax
0x0000000000423337 : push qword ptr [rax - 0x3fffffd1] ; mov bl, -1 ; call rax
0x0000000000404904 : push qword ptr [rcx] ; ret 0x858b
0x0000000000415c1e : push r8 ; pop rbp ; ret
0x000000000042327c : push rax ; jl 0x423281 ; call rax
0x0000000000403afd : push rax ; pop rbp ; ret
0x0000000000423187 : push rax ; sub byte ptr [rax], al ; add byte ptr [rax], ah ; movsxd rdi, edi ; call qword ptr [rax]
0x0000000000423247 : push rax ; sub eax, dword ptr [rax] ; add byte ptr [rax], al ; jns 0x423256 ; call qword ptr [rax]
0x000000000041c073 : push rbp ; call 0x441c5
0x00000000004195a2 : push rbp ; clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000415ca6 : push rbp ; clc ; pop rbp ; ret
0x000000000041cc43 : push rbp ; enter -0x76b8, 0xc ; ret 0x59e9
0x000000000041206a : push rbp ; fmul dword ptr [rax + 0x29] ; ret 0x148
0x0000000000402984 : push rbp ; mov edi, 0x626e20 ; mov rbp, rsp ; call rax
0x0000000000415920 : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000040d535 : push rbp ; ror byte ptr [rax - 0x77], 1 ; ret 0x81e8
0x0000000000422c80 : rcl byte ptr [rax + rax], 0 ; nop ; mov bh, -2 ; jmp rax
0x0000000000422cc0 : rcl byte ptr [rip - 0x43300000], -2 ; jmp rax
0x000000000042314c : rcr byte ptr [rdi - 1] ; call qword ptr [rax]
0x0000000000422e00 : rcr byte ptr [rdx], 0 ; add al, dh ; loope 0x422e0c ; jmp rax
0x0000000000422ec0 : rcr byte ptr [rip + 0x2d00000], -1 ; jmp rax
0x00000000004002da : ret
0x000000000040602b : ret 0
0x000000000041d145 : ret 0x10
0x000000000040db77 : ret 0x13
0x000000000040e8ef : ret 0x148
0x000000000041b755 : ret 0x18
0x000000000041479e : ret 0x1b2
0x0000000000411caf : ret 0x2148
0x0000000000402762 : ret 0x224b
0x0000000000402562 : ret 0x224c
0x0000000000402362 : ret 0x224d
0x0000000000402162 : ret 0x224e
0x000000000040ed55 : ret 0x26a8
0x000000000040fcca : ret 0x280f
0x000000000040a55a : ret 0x2948
0x0000000000413b29 : ret 0x294c
0x0000000000413b45 : ret 0x294d
0x0000000000407580 : ret 0x3141
0x000000000041d4b6 : ret 0x34e8
0x00000000004163f6 : ret 0x3948
0x000000000040cbce : ret 0x3b48
0x000000000040be79 : ret 0x41e8
0x000000000040ad60 : ret 0x458b
0x000000000041c52a : ret 0x4a3b
0x000000000040cc35 : ret 0x4a8b
0x0000000000408e86 : ret 0x4e8
0x000000000040c747 : ret 0x5588
0x0000000000412d84 : ret 0x5589
0x00000000004066d3 : ret 0x57e8
0x000000000041cc48 : ret 0x59e9
0x00000000004091e3 : ret 0x5bd0
0x0000000000403d62 : ret 0x6348
0x000000000041371f : ret 0x6451
0x000000000041d686 : ret 0x64e8
0x0000000000416eeb : ret 0x6948
0x0000000000403b52 : ret 0x8041
0x000000000040419c : ret 0x8141
0x000000000040e0d3 : ret 0x8148
0x000000000040d539 : ret 0x81e8
0x000000000040eaff : ret 0x8348
0x0000000000409487 : ret 0x840
0x0000000000408928 : ret 0x844
0x0000000000409a2a : ret 0x846f
0x0000000000404906 : ret 0x858b
0x000000000040cb07 : ret 0x870f
0x000000000040d923 : ret 0x87e8
0x0000000000413dc3 : ret 0x8840
0x000000000040efb4 : ret 0x8844
0x00000000004077d7 : ret 0x8941
0x0000000000406289 : ret 0x8948
0x0000000000413b48 : ret 0x8949
0x000000000040a838 : ret 0x894d
0x000000000041a439 : ret 0x8966
0x0000000000413cdc : ret 0x89a5
0x0000000000407586 : ret 0x8b44
0x000000000040c8e6 : ret 0x8b48
0x00000000004197dd : ret 0x8bd2
0x00000000004074ba : ret 0x8d88
0x0000000000413b5d : ret 0x8de8
0x0000000000404c39 : ret 0x941
0x00000000004058ec : ret 0x9588
0x000000000040490e : ret 0x9589
0x00000000004161af : ret 0x9be8
0x0000000000415eac : ret 0x9ee8
0x0000000000406a87 : ret 0xa3e8
0x000000000040318d : ret 0xb0
0x000000000041cf36 : ret 0xb4e8
0x000000000040c8d9 : ret 0xb848
0x000000000040ca1f : ret 0xb849
0x0000000000410696 : ret 0xb948
0x000000000041ab3e : ret 0xb949
0x000000000040a494 : ret 0xbbf3
0x000000000041b4f0 : ret 0xc
0x0000000000402925 : ret 0xc148
0x000000000041220c : ret 0xc2f6
0x000000000040ad13 : ret 0xc7e8
0x0000000000406de7 : ret 0xc981
0x0000000000416eee : ret 0xca00
0x0000000000404d4a : ret 0xca21
0x000000000040bc99 : ret 0xca29
0x0000000000406d58 : ret 0xca31
0x000000000041a55f : ret 0xd088
0x000000000040b11c : ret 0xd089
0x0000000000415033 : ret 0xd284
0x000000000040dc29 : ret 0xd366
0x0000000000406f6a : ret 0xd609
0x0000000000408232 : ret 0xd689
0x0000000000408daa : ret 0xe0e8
0x0000000000408bb9 : ret 0xe280
0x000000000040dec2 : ret 0xe8e8
0x0000000000403d56 : ret 0xe981
0x000000000040df17 : ret 0xea80
0x000000000040cf5a : ret 0xea81
0x00000000004143ec : ret 0xee8
0x000000000040bcd0 : ret 0xf01
0x0000000000413dd8 : ret 0xf180
0x00000000004058df : ret 0xf280
0x0000000000403215 : ret 0xf281
0x0000000000418fb6 : ret 0xf40
0x000000000040fce1 : ret 0xf66
0x0000000000404b3b : ret 0xf709
0x000000000041a434 : ret 0xfa31
0x0000000000404458 : ret 0xfa81
0x000000000040ca60 : ret 0xfae8
0x000000000041e52a : ret 0xfe3d
0x000000000041468a : ret 0xfeda
0x000000000041098a : ret 0xff17
0x00000000004110a0 : ret 0xff3
0x000000000040769f : ret 0xff35
0x000000000040d69a : ret 0xff4e
0x000000000041658a : ret 0xff97
0x00000000004031ba : ret 0xffef
0x000000000040bcd4 : ret 0xfffa
0x0000000000424479 : ret 0xfffe
0x0000000000423405 : ret 0xffff
0x0000000000409114 : ret 1
0x00000000004007c0 : ret 2
0x000000000041decb : ret 3
0x000000000040a332 : ret 5
0x000000000040ed4f : ret 8
0x000000000040df7a : ret 9
0x000000000041a4e3 : rol byte ptr [rbp + 9], 1 ; ret
0x0000000000412e46 : rol byte ptr [rcx + rcx*4], 1 ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040c18a : rol dword ptr [rax - 0x49f0fe1f], -0x3f ; pop rbp ; ret
0x000000000040f108 : rol dword ptr [rcx + 0x21], cl ; ret
0x000000000041a1eb : rol dword ptr [rcx + rcx*4 - 0x38], 1 ; pop rbp ; ret
0x0000000000408062 : rol dword ptr [rcx - 0x1a], cl ; dec dword ptr [rcx] ; ret 0x941
0x0000000000408061 : rol dword ptr ds:[rcx - 0x1a], cl ; dec dword ptr [rcx] ; ret 0x941
0x000000000041cc3f : ror byte ptr [r8 - 0x75], 0x55 ; enter -0x76b8, 0xc ; ret 0x59e9
0x000000000041a927 : ror byte ptr [r8 - 0x75], 1 ; add byte ptr [rax - 0x75], cl ; jge 0x41a8f1 ; call rax
0x0000000000418700 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000412fd0 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x41303b ; ret
0x000000000040a49c : ror byte ptr [rax + 0x29], 1 ; enter -0x46b8, 0x4a ; sti ; ret 0xbbf3
0x000000000041a2da : ror byte ptr [rax + 0x31], 1 ; xlatb ; or rax, rdi ; pop rbp ; ret
0x000000000040292c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40293b ; pop rbp ; ret
0x000000000041cc40 : ror byte ptr [rax - 0x75], 0x55 ; enter -0x76b8, 0xc ; ret 0x59e9
0x000000000041a716 : ror byte ptr [rax - 0x75], 1 ; adc byte ptr [rax - 0x75], cl ; jge 0x41a6e8 ; call rax
0x000000000041a8a9 : ror byte ptr [rax - 0x75], 1 ; adc byte ptr [rax - 0x75], cl ; jge 0x41a87b ; call rax
0x000000000041a928 : ror byte ptr [rax - 0x75], 1 ; add byte ptr [rax - 0x75], cl ; jge 0x41a8f0 ; call rax
0x000000000041a959 : ror byte ptr [rax - 0x75], 1 ; sbb byte ptr [rax - 0x75], cl ; jge 0x41a923 ; call rax
0x00000000004043c5 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x0000000000418701 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000413b1d : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000413b26 : ror byte ptr [rax - 0x77], 1 ; ret 0x294c
0x000000000040d536 : ror byte ptr [rax - 0x77], 1 ; ret 0x81e8
0x000000000040966f : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x4096d8 ; ret
0x0000000000412fd1 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x41303a ; ret
0x00000000004044cd : ror byte ptr [rax - 0x7d], -0x3c ; pop rbp ; ret
0x0000000000408f10 : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x000000000040cff3 : ror byte ptr [rax - 0x7f], -0x3c ; jo 0x40d012 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000412713 : ror byte ptr [rax - 0x7f], -0x3c ; jo 0x412723 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004152aa : ror byte ptr [rax - 0x7f], -0x3c ; jo 0x4152ba ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000424de0 : ror byte ptr [rdi + rdi*8], 1 ; jmp qword ptr [rdi]
0x0000000000422b40 : ror byte ptr [rdi], 0 ; add al, ah ; mov bh, dh ; jmp rax
0x000000000041a43c : ror byte ptr [rdi], 1 ; mov bh, -0x40 ; pop rbp ; ret
0x000000000041a561 : ror byte ptr [rdi], 1 ; mov dh, -0x40 ; pop rbp ; ret
0x000000000041a4f6 : ror byte ptr [rdi], 1 ; mov dh, -0x40 ; pop rbx ; pop rbp ; ret
0x000000000041dd6f : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x000000000041ab48 : ror dword ptr [rbp - 0x77], cl ; ret
0x000000000041769b : sahf ; ret 0xe280
0x0000000000423400 : sal byte ptr [rdx], 1 ; add byte ptr [rax], al ; nop ; ret 0xffff
0x0000000000403d52 : sar dword ptr [rdx + rdx*2], 0x62 ; ret 0xe981
0x000000000040292e : sar eax, 1 ; jne 0x402939 ; pop rbp ; ret
0x0000000000422d85 : sar esi, cl ; jmp rax
0x000000000040292d : sar rax, 1 ; jne 0x40293a ; pop rbp ; ret
0x000000000040c6c0 : sbb al, -0x39 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000424490 : sbb al, 0 ; add byte ptr [rax], al ; in al, dx ; sldt word ptr [rax] ; cwde ; ret
0x0000000000422e01 : sbb al, byte ptr [rax] ; add al, dh ; loope 0x422e0b ; jmp rax
0x00000000004176af : sbb byte ptr [r15], cl ; sahf ; ret 0xe280
0x000000000041a95d : sbb byte ptr [rax - 0x75], cl ; jge 0x41a91f ; call rax
0x000000000041a95c : sbb byte ptr [rax - 0x75], cl ; jge 0x41a920 ; call rax
0x00000000004176b0 : sbb byte ptr [rdi], cl ; sahf ; ret 0xe280
0x0000000000424ddd : sbb dword ptr [rax], eax ; add al, dl ; or al, 0xffffffffffffffff ; jmp qword ptr [rdi]
0x000000000040762f : sbb dword ptr [rcx - 0xf], eax ; jmp qword ptr [rcx]
0x000000000040762e : sbb qword ptr [rcx - 0xf], r8 ; jmp qword ptr [rcx]
0x000000000040c77d : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000410494 : sete al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040c763 : setne al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040c765 : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000040fcff : shl dword ptr [rsi + 0xf], 0x5c ; ret 0xf66
0x0000000000424495 : sldt word ptr [rax] ; cwde ; ret
0x00000000004229fe : std ; call rax
0x0000000000423552 : std ; jmp rdx
0x000000000040c368 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040a493 : sti ; ret 0xbbf3
0x000000000040f0b7 : stosb byte ptr [rdi], al ; fiadd dword ptr [rcx - 0xa] ; jmp qword ptr [rcx]
0x0000000000425868 : sub byte ptr [rax - 1], bh ; jmp qword ptr [rcx]
0x0000000000423189 : sub byte ptr [rax], al ; add byte ptr [rax], ah ; movsxd rdi, edi ; call qword ptr [rax]
0x000000000040cb86 : sub byte ptr [rcx - 0xa], al ; jmp qword ptr [rcx]
0x000000000041871f : sub dword ptr [rdx], 0x5b ; ret
0x0000000000423249 : sub eax, dword ptr [rax] ; add byte ptr [rax], al ; jns 0x423254 ; call qword ptr [rax]
0x0000000000423239 : sub eax, dword ptr [rax] ; add byte ptr [rax], dl ; js 0x423244 ; call rax
0x000000000040b710 : sub eax, edx ; add rsi, rax ; mov rax, rsi ; pop rbp ; ret
0x000000000041f201 : sub esp, 8 ; add rsp, 8 ; ret
0x000000000041f200 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000042330d : test al, -1 ; call qword ptr [rax]
0x0000000000424019 : test al, -2 ; call qword ptr [rcx]
0x000000000041f15a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040aaf1 : test byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x00000000004168b2 : test dword ptr [rsi + rdi*8 - 1], esp ; jmp qword ptr [rcx]
0x0000000000422b15 : test edi, esi ; jmp qword ptr [rax]
0x0000000000406f84 : xchg byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x0000000000423af9 : xchg dh, bh ; call qword ptr [rbx]
0x0000000000413dc2 : xchg eax, ebp ; ret 0x8840
0x000000000041ee96 : xchg eax, ebp ; ret 0xd284
0x000000000040eae8 : xchg eax, ebp ; ret 0xe280
0x000000000040c764 : xchg eax, ebp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000408690 : xchg eax, ebx ; mov word ptr [rcx - 0xe], es ; jmp qword ptr [rcx]
0x0000000000408979 : xchg eax, edi ; jmp 0x407c07
0x0000000000408979 : xchg eax, edi ; jmp 0x407c09
0x00000000004158e0 : xchg eax, edi ; ret 0xe280
0x000000000040c189 : xchg eax, edx ; rol dword ptr [rax - 0x49f0fe1f], -0x3f ; pop rbp ; ret
0x000000000040c746 : xchg eax, esp ; ret 0x5588
0x00000000004085da : xchg eax, esp ; ret 0x9588
0x0000000000415032 : xchg eax, esp ; ret 0xd284
0x0000000000408bb8 : xchg eax, esp ; ret 0xe280
0x0000000000410495 : xchg eax, esp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000040868f : xchg eax, r11d ; mov word ptr [rcx - 0xe], es ; jmp qword ptr [rcx]
0x0000000000408978 : xchg rax, r15 ; jmp 0x407c08
0x000000000041a0f9 : xlatb ; or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x000000000041a2dd : xlatb ; or rax, rdi ; pop rbp ; ret
0x0000000000424ddc : xor al, 0x19 ; add byte ptr [rax], al ; ror byte ptr [rdi + rdi*8], 1 ; jmp qword ptr [rdi]
0x000000000041b06f : xor al, 0x25 ; ret
0x000000000040e8e6 : xor al, 0x6a ; imul eax, dword ptr [rax - 0x77], 0x7a ; add cl, byte ptr [rax - 0x77] ; ret 0x148
0x000000000041a06f : xor byte ptr [rax], dl ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041b3ce : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000414af7 : xor eax, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x0000000000412e45 : xor eax, edx ; mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000041a0f8 : xor edi, edx ; or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x000000000041a2dc : xor edi, edx ; or rax, rdi ; pop rbp ; ret
0x000000000041a2db : xor rdi, rdx ; or rax, rdi ; pop rbp ; ret
