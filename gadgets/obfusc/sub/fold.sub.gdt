0x0000000000404469 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040862f : add ah, bh ; ret 0xffff
0x000000000040863f : add ah, cl ; ret
0x0000000000408627 : add ah, cl ; ret 0xffff
0x0000000000401a6b : add al, 0x25 ; ret 0x60a2
0x0000000000401f90 : add al, byte ptr [rax] ; add dh, dh ; add al, 0x25 ; ret 0x60a2
0x00000000004017b7 : add al, ch ; ret
0x0000000000405288 : add al, ch ; xchg eax, edx ; ret 0xffff
0x00000000004088af : add al, dh ; mov dr1, edi ; call rsi
0x000000000040764f : add bl, dh ; ret
0x00000000004088ab : add byte ptr [rax + rax], al ; add al, dh ; mov dr1, edi ; call rsi
0x00000000004054ad : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x00000000004017b5 : add byte ptr [rax], al ; add al, ch ; ret
0x00000000004088ad : add byte ptr [rax], al ; add al, dh ; mov dr1, edi ; call rsi
0x000000000040764d : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040764b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004062e9 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040764c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004088aa : add byte ptr [rax], al ; add byte ptr [rax], r8b ; add al, dh ; mov dr1, edi ; call rsi
0x0000000000403b0e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000404d7e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000406d1c : add byte ptr [rax], al ; add cl, ch ; ret 2
0x000000000040201f : add byte ptr [rax], al ; add dh, al ; ret
0x0000000000404431 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404140 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004012f3 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000040862e : add byte ptr [rax], al ; cld ; ret 0xffff
0x0000000000401389 : add byte ptr [rax], al ; jmp 0x401309
0x0000000000402029 : add byte ptr [rax], al ; jmp 0x401fb6
0x00000000004062eb : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000402a02 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000409172 : add byte ptr [rax], al ; or al, 9 ; add byte ptr [rax], al ; sar dil, cl ; jmp rax
0x0000000000402382 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040534b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000404100 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000408616 : add byte ptr [rax], al ; pop rsp ; ret 0xffff
0x000000000040861e : add byte ptr [rax], al ; pushfq ; ret 0xffff
0x000000000040764e : add byte ptr [rax], al ; ret
0x0000000000409176 : add byte ptr [rax], al ; sar dil, cl ; jmp rax
0x00000000004088ac : add byte ptr [rax], r8b ; add al, dh ; mov dr1, edi ; call rsi
0x000000000040534c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000404101 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000409173 : add byte ptr [rcx + rcx], cl ; add byte ptr [rax], al ; sar dil, cl ; jmp rax
0x00000000004074ec : add byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x0000000000401768 : add byte ptr [rcx], al ; ret
0x0000000000406d18 : add byte ptr [rdi], cl ; lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x000000000040201b : add byte ptr [rdi], cl ; test byte ptr [rcx], cl ; add byte ptr [rax], al ; add dh, al ; ret
0x00000000004017b1 : add byte ptr [rdi], cl ; test byte ptr [rdx], cl ; add byte ptr [rax], al ; add al, ch ; ret
0x0000000000403b10 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000404d80 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000406d1e : add cl, ch ; ret 2
0x0000000000401a69 : add dh, al ; add al, 0x25 ; ret 0x60a2
0x0000000000401fa0 : add dh, al ; ret
0x0000000000401f92 : add dh, dh ; add al, 0x25 ; ret 0x60a2
0x0000000000405989 : add dword ptr [rax - 0x77], ecx ; ret 0x8148
0x000000000040442f : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040534a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004040ff : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000401b62 : add dword ptr [rax], eax ; add dh, al ; add al, 0x25 ; ret 0x60a2
0x0000000000401f9e : add dword ptr [rax], eax ; add dh, al ; ret
0x00000000004073ad : add dword ptr [rax], ecx ; ret 0x840
0x0000000000401b61 : add dword ptr [rax], r8d ; add dh, al ; add al, 0x25 ; ret 0x60a2
0x000000000040708a : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401f9a : add dword ptr [rdi], ecx ; test dl, ah ; add dword ptr [rax], eax ; add dh, al ; ret
0x0000000000401764 : add eax, 0x208b4e ; add ebx, esi ; ret
0x0000000000406d1b : add eax, 0xe9000000 ; ret 2
0x000000000040172b : add eax, edx ; sar rax, 1 ; jne 0x40173c ; pop rbp ; ret
0x0000000000401769 : add ebx, esi ; ret
0x0000000000401b5f : add ecx, ebp ; add dword ptr [rax], r8d ; add dh, al ; add al, 0x25 ; ret 0x60a2
0x00000000004018bb : add esp, 0x10 ; pop rbp ; ret
0x000000000040704c : add esp, 0x130 ; pop rbp ; ret
0x000000000040567c : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000402767 : add esp, 0x20 ; pop rbp ; ret
0x00000000004019cd : add esp, 0x30 ; pop rbp ; ret
0x000000000040484c : add esp, 0x50 ; pop rbp ; ret
0x0000000000402d23 : add esp, 0x70 ; pop rbp ; ret
0x000000000040475a : add esp, 0x90 ; pop rbp ; ret
0x000000000040237e : add esp, 0xa0 ; pop rbp ; ret
0x0000000000406285 : add esp, 0xe0 ; pop rbp ; ret
0x00000000004012f6 : add esp, 8 ; ret
0x000000000040172a : add rax, rdx ; sar rax, 1 ; jne 0x40173d ; pop rbp ; ret
0x00000000004018ba : add rsp, 0x10 ; pop rbp ; ret
0x000000000040704b : add rsp, 0x130 ; pop rbp ; ret
0x000000000040567b : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000402766 : add rsp, 0x20 ; pop rbp ; ret
0x00000000004019cc : add rsp, 0x30 ; pop rbp ; ret
0x000000000040484b : add rsp, 0x50 ; pop rbp ; ret
0x0000000000402d22 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000404759 : add rsp, 0x90 ; pop rbp ; ret
0x000000000040237d : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000406284 : add rsp, 0xe0 ; pop rbp ; ret
0x00000000004012f5 : add rsp, 8 ; ret
0x0000000000405285 : and al, 0x20 ; mov al, 0 ; call 0x401526
0x0000000000407089 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401767 : and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000401a64 : and eax, 0x60a2c1 ; add dh, al ; add al, 0x25 ; ret 0x60a2
0x00000000004024ef : and eax, 0x60a2d8 ; pop rbp ; ret
0x0000000000402513 : and eax, 0x60a2e0 ; pop rbp ; ret
0x0000000000405155 : call 0x401412
0x0000000000405289 : call 0x401522
0x0000000000405b64 : call 0x401616
0x0000000000404139 : call 0xffffffffe902ca89
0x0000000000404138 : call 0xffffffffe902ca8a
0x0000000000407629 : call qword ptr [r12 + rbx*8]
0x0000000000408993 : call qword ptr [rax]
0x00000000004089b3 : call qword ptr [rsi]
0x000000000040762a : call qword ptr [rsp + rbx*8]
0x000000000040178d : call rax
0x0000000000403e8c : call rbx
0x0000000000408b93 : call rdi
0x00000000004088b3 : call rsi
0x0000000000408543 : call rsp
0x000000000040704a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x000000000040587f : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404d91 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040172f : clc ; jne 0x401738 ; pop rbp ; ret
0x00000000004024d6 : clc ; mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000402bd5 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040756f : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004024ba : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004024be : clc ; pop rbp ; ret
0x00000000004062e8 : cld ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004018e7 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406499 : cld ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040661e : cld ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406283 : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000040756c : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004064f3 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406496 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040661b : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004062ef : cld ; pop rbp ; ret
0x0000000000408630 : cld ; ret 0xffff
0x000000000040861c : cmp al, 7 ; add byte ptr [rax], al ; pushfq ; ret 0xffff
0x00000000004016ed : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401700 ; pop rbp ; ret
0x00000000004012f1 : cmp eax, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000404e8c : cwde ; mov rcx, qword ptr [rax*8 + 0x408018] ; jmp rcx
0x0000000000406d84 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000403892 : dec dword ptr [rcx - 0x77] ; ret 0x294d
0x0000000000403c20 : enter 0x4b05, 0x34 ; fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x0000000000403c24 : fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x000000000040762c : fmul qword ptr [rax - 0x7d] ; ret
0x00000000004018b9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401700 : hlt ; pop rbp ; mov edi, 0x60a260 ; jmp rax
0x00000000004063ac : in al, dx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403eab : inc dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000408610 : insb byte ptr [rdi], dx ; mov edi, 0x71cffff ; add byte ptr [rax], al ; pop rsp ; ret 0xffff
0x00000000004054b5 : int 0x80
0x00000000004016f3 : ja 0x4016fa ; pop rbp ; ret
0x00000000004016ff : je 0x4016fd ; pop rbp ; mov edi, 0x60a260 ; jmp rax
0x000000000040862c : jl 0x40863a ; add byte ptr [rax], al ; cld ; ret 0xffff
0x000000000040138b : jmp 0x401307
0x0000000000401b60 : jmp 0x401cb3
0x0000000000402273 : jmp 0x401e86
0x000000000040202b : jmp 0x401fb4
0x0000000000405988 : jmp 0xffffffffc2c9a192
0x0000000000408d9b : jmp qword ptr [rax]
0x0000000000403326 : jmp qword ptr [rcx]
0x0000000000408c7b : jmp qword ptr [rdx]
0x0000000000401707 : jmp rax
0x0000000000402de9 : jmp rcx
0x0000000000401747 : jmp rdx
0x0000000000401730 : jne 0x401737 ; pop rbp ; ret
0x0000000000402d25 : jo 0x402d86 ; ret
0x000000000040434f : jo 0x4043b5 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004049f4 : jo 0x404a55 ; ret
0x0000000000404b2e : jo 0x404b8f ; ret
0x0000000000408623 : lcall ptr [rdi + rax] ; add ah, cl ; ret 0xffff
0x0000000000408613 : lcall ptr [rdi + rax] ; add byte ptr [rax], al ; pop rsp ; ret 0xffff
0x0000000000406d1a : lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x000000000040279b : loopne 0x4027eb ; add esp, 0x20 ; pop rbp ; ret
0x000000000040279a : loopne 0x4027ec ; add esp, 0x20 ; pop rbp ; ret
0x0000000000406287 : loopne 0x40628e ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000405287 : mov al, 0 ; call 0x401524
0x0000000000405b62 : mov al, 0 ; call 0x401618
0x00000000004048cb : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000404758 : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000407086 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000402511 : mov byte ptr [0x60a2e0], al ; pop rbp ; ret
0x00000000004024d7 : mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000401763 : mov byte ptr [rip + 0x208b4e], 1 ; ret
0x0000000000402270 : mov byte ptr [rsi + rdx], cl ; jmp 0x401e89
0x000000000040708c : mov dh, -0x40 ; pop rbp ; ret
0x00000000004088b1 : mov dr1, edi ; call rsi
0x00000000004024ed : mov dword ptr [0x60a2d8], edi ; pop rbp ; ret
0x0000000000402bd6 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000402b98 : mov dword ptr [rax], eax ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000402a54 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000402b97 : mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040514f : mov dword ptr [rbp - 0x110], eax ; call 0x401418
0x00000000004051f4 : mov dword ptr [rbp - 0x130], eax ; call 0x401418
0x0000000000402799 : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004019c9 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004018b7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004018e5 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040756d : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004024b8 : mov dword ptr [rbp - 8], eax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402c4e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405283 : mov dword ptr [rsp + 0x20], ebx ; mov al, 0 ; call 0x401528
0x0000000000402a08 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040579b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402763 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402a05 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004026bf : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004063aa : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405a93 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004029bd : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402a4e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000402b9a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000402d1f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004048c9 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004064f4 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406497 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040661c : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004062ed : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040587d : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404d8f : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004024bc : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040178b : mov ebp, esp ; call rax
0x00000000004016f1 : mov ebp, esp ; ja 0x4016fc ; pop rbp ; ret
0x00000000004054cd : mov ecx, 0x5b2a830a ; ret
0x0000000000402de2 : mov ecx, dword ptr [rax*8 + 0x407b10] ; jmp rcx
0x0000000000403106 : mov ecx, dword ptr [rax*8 + 0x407b58] ; jmp rcx
0x0000000000404e8e : mov ecx, dword ptr [rax*8 + 0x408018] ; jmp rcx
0x000000000040601e : mov ecx, dword ptr [rax*8 + 0x408390] ; jmp rcx
0x0000000000405f9e : mov ecx, dword ptr [rax*8 + 0x4083f0] ; jmp rcx
0x0000000000402a51 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401785 : mov edi, 0x609e20 ; mov rbp, rsp ; call rax
0x0000000000401702 : mov edi, 0x60a260 ; jmp rax
0x0000000000401742 : mov edi, 0x60a260 ; jmp rdx
0x0000000000408611 : mov edi, 0x71cffff ; add byte ptr [rax], al ; pop rsp ; ret 0xffff
0x0000000000407627 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000407626 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000401740 : mov esi, eax ; mov edi, 0x60a260 ; jmp rdx
0x000000000040863c : mov esp, 0xcc000007 ; ret
0x0000000000401766 : mov esp, dword ptr [rax] ; add byte ptr [rcx], al ; ret
0x00000000004024ec : mov qword ptr [0x60a2d8], rdi ; pop rbp ; ret
0x000000000040514e : mov qword ptr [rbp - 0x110], rax ; call 0x401419
0x00000000004051f3 : mov qword ptr [rbp - 0x130], rax ; call 0x401419
0x00000000004024b7 : mov qword ptr [rbp - 8], rax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402c4d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405282 : mov qword ptr [rsp + 0x20], rbx ; mov al, 0 ; call 0x401529
0x0000000000401765 : mov r12, qword ptr [rax] ; add byte ptr [rcx], al ; ret
0x00000000004048ca : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040579a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402762 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402a04 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004026be : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405a92 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004029bc : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402d1e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004048c8 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040587c : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404d8e : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004024bb : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040178a : mov rbp, rsp ; call rax
0x00000000004016f0 : mov rbp, rsp ; ja 0x4016fd ; pop rbp ; ret
0x0000000000402de1 : mov rcx, qword ptr [rax*8 + 0x407b10] ; jmp rcx
0x0000000000403105 : mov rcx, qword ptr [rax*8 + 0x407b58] ; jmp rcx
0x0000000000404e8d : mov rcx, qword ptr [rax*8 + 0x408018] ; jmp rcx
0x000000000040601d : mov rcx, qword ptr [rax*8 + 0x408390] ; jmp rcx
0x0000000000405f9d : mov rcx, qword ptr [rax*8 + 0x4083f0] ; jmp rcx
0x000000000040173f : mov rsi, rax ; mov edi, 0x60a260 ; jmp rdx
0x0000000000406380 : movabs dword ptr [0x941c90941f0213f], eax ; ret 0x3145
0x0000000000401f8f : movsb byte ptr [rdi], byte ptr [rsi] ; add al, byte ptr [rax] ; add dh, dh ; add al, 0x25 ; ret 0x60a2
0x000000000040708b : movzx eax, al ; pop rbp ; ret
0x00000000004024da : movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000407648 : nop dword ptr [rax + rax] ; ret
0x0000000000402271 : or al, 0x16 ; jmp 0x401e88
0x000000000040346d : or al, 0x18 ; ret 0x6451
0x0000000000409174 : or al, 9 ; add byte ptr [rax], al ; sar dil, cl ; jmp rax
0x0000000000404ab1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040763c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000404351 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040763e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000404353 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000407640 : pop r14 ; pop r15 ; ret
0x0000000000404103 : pop r14 ; pop rbp ; ret
0x0000000000404355 : pop r15 ; pop rbp ; ret
0x0000000000407642 : pop r15 ; ret
0x0000000000401762 : pop rbp ; mov byte ptr [rip + 0x208b4e], 1 ; ret
0x0000000000401701 : pop rbp ; mov edi, 0x60a260 ; jmp rax
0x000000000040173e : pop rbp ; mov rsi, rax ; mov edi, 0x60a260 ; jmp rdx
0x000000000040763b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040763f : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004016f5 : pop rbp ; ret
0x0000000000404350 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040534d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000404102 : pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004054d1 : pop rbx ; ret
0x0000000000404356 : pop rdi ; pop rbp ; ret
0x0000000000407643 : pop rdi ; ret
0x0000000000404354 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000407641 : pop rsi ; pop r15 ; ret
0x0000000000404104 : pop rsi ; pop rbp ; ret
0x0000000000405284 : pop rsp ; and al, 0x20 ; mov al, 0 ; call 0x401527
0x000000000040763d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000404352 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000408618 : pop rsp ; ret 0xffff
0x000000000040484e : push rax ; pop rbp ; ret
0x0000000000401784 : push rbp ; mov edi, 0x609e20 ; mov rbp, rsp ; call rax
0x000000000040202f : push rsi ; ret
0x0000000000408620 : pushfq ; ret 0xffff
0x00000000004012f9 : ret
0x0000000000406f52 : ret 0
0x0000000000406f66 : ret 0x148
0x00000000004044ee : ret 0x1b2
0x0000000000401592 : ret 0x208b
0x0000000000401392 : ret 0x208c
0x0000000000401ea7 : ret 0x2948
0x0000000000403879 : ret 0x294c
0x0000000000403895 : ret 0x294d
0x0000000000406389 : ret 0x3145
0x0000000000402ad4 : ret 0x5589
0x0000000000401a6d : ret 0x60a2
0x000000000040346f : ret 0x6451
0x00000000004038ad : ret 0x7de8
0x00000000004061a9 : ret 0x8141
0x000000000040598c : ret 0x8148
0x00000000004073af : ret 0x840
0x0000000000403b13 : ret 0x8840
0x0000000000404e49 : ret 0x8844
0x00000000004059a0 : ret 0x8948
0x0000000000403898 : ret 0x8949
0x0000000000403a2c : ret 0x89a5
0x000000000040387c : ret 0x8b48
0x0000000000406f59 : ret 0xb849
0x00000000004061e9 : ret 0xc131
0x0000000000401725 : ret 0xc148
0x0000000000406cc0 : ret 0xc2f6
0x0000000000403294 : ret 0xca21
0x0000000000406322 : ret 0xca29
0x000000000040028d : ret 0xcfa4
0x0000000000404d83 : ret 0xd284
0x0000000000406265 : ret 0xd709
0x000000000040413c : ret 0xee8
0x0000000000403b28 : ret 0xf180
0x0000000000406cb3 : ret 0xf280
0x000000000040330e : ret 0xf281
0x0000000000405b6a : ret 0xffb7
0x0000000000405157 : ret 0xffff
0x00000000004044f4 : ret 1
0x0000000000406d20 : ret 2
0x0000000000402b96 : rol byte ptr [rcx + rcx*4], 1 ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004054b0 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000402d20 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x402d8b ; ret
0x000000000040172c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40173b ; pop rbp ; ret
0x00000000004054b1 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x000000000040386d : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000403876 : ror byte ptr [rax - 0x77], 1 ; ret 0x294c
0x0000000000402d21 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x402d8a ; ret
0x0000000000409179 : sar bh, cl ; jmp rax
0x0000000000409178 : sar dil, cl ; jmp rax
0x000000000040172e : sar eax, 1 ; jne 0x401739 ; pop rbp ; ret
0x000000000040172d : sar rax, 1 ; jne 0x40173a ; pop rbp ; ret
0x0000000000408614 : sbb al, 7 ; add byte ptr [rax], al ; pop rsp ; ret 0xffff
0x0000000000407088 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004054cf : sub dword ptr [rdx], 0x5b ; ret
0x000000000040767d : sub esp, 8 ; add rsp, 8 ; ret
0x000000000040767c : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040764a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040201d : test byte ptr [rcx], cl ; add byte ptr [rax], al ; add dh, al ; ret
0x00000000004017b3 : test byte ptr [rdx], cl ; add byte ptr [rax], al ; add al, ch ; ret
0x0000000000401f9c : test dl, ah ; add dword ptr [rax], eax ; add dh, al ; ret
0x0000000000403b12 : xchg eax, ebp ; ret 0x8840
0x000000000040528a : xchg eax, edx ; ret 0xffff
0x0000000000404d82 : xchg eax, esp ; ret 0xd284
0x000000000040704e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000404847 : xor eax, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x0000000000402b95 : xor eax, edx ; mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
