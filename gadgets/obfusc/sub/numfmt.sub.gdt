0x00000000004019e4 : adc ah, byte ptr [rcx] ; jmp rax
0x0000000000401a24 : adc ah, byte ptr [rcx] ; jmp rdx
0x0000000000402243 : adc al, -0x7b ; nop ; ret
0x00000000004021da : adc al, -0x7b ; ret
0x00000000004025f3 : adc al, 0x25 ; ret 0x40d5
0x00000000004021aa : adc bl, al ; add byte ptr [rax - 0x73], cl ; add al, 0x25 ; ret
0x000000000040503f : adc dword ptr [rax - 0x7f], ecx ; ret 1
0x000000000040ee25 : adc dword ptr [rax], eax ; add byte ptr [rsp + rsi*4 - 1], dh ; call rsp
0x0000000000408d19 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004033a9 : adc esp, dword ptr [rcx] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004071ec : adc esp, dword ptr [rcx] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040537c : adc esp, dword ptr [rcx] ; call 0x401595
0x0000000000406531 : adc esp, dword ptr [rcx] ; pop rbp ; ret
0x00000000004071eb : adc rsp, qword ptr [rcx] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040b31d : add al, 0x21 ; ret 0xd709
0x0000000000402219 : add al, 0x25 ; nop ; ret
0x00000000004021b0 : add al, 0x25 ; ret
0x0000000000405e08 : add al, ch ; ret 0xffb9
0x0000000000405cda : add bh, byte ptr [rdi + rdi*8 - 0x3b7cb701] ; pop rbp ; ret
0x000000000040c13f : add bl, dh ; ret
0x00000000004069a0 : add byte ptr [rax - 0x47], cl ; js 0x406a0c ; xchg eax, ebx ; xchg eax, ecx ; salc ; call rsi
0x00000000004025f0 : add byte ptr [rax - 0x73], cl ; adc al, 0x25 ; ret 0x40d5
0x0000000000402216 : add byte ptr [rax - 0x73], cl ; add al, 0x25 ; nop ; ret
0x00000000004021ad : add byte ptr [rax - 0x73], cl ; add al, 0x25 ; ret
0x00000000004095f0 : add byte ptr [rax - 0x73], cl ; or al, 0x25 ; ret 0x40e4
0x0000000000404b90 : add byte ptr [rax - 0x75], cl ; call 0x4902d4e8
0x0000000000406f8c : add byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x0000000000409d5d : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000406ff3 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; ret 0x2948
0x0000000000402475 : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000040f8bf : add byte ptr [rax], ah ; jge 0x40f8c6 ; call rdi
0x000000000040c13d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000404b8e : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; call 0x4902d4ea
0x0000000000406ff1 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; ret 0x2948
0x0000000000402473 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000040c13b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040561d : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040c13c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040c23c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x404a
0x000000000040687c : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], al ; ret
0x000000000040b342 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000403cd2 : add byte ptr [rax], al ; add byte ptr [rcx - 0xb343], al ; call qword ptr [rdx]
0x000000000040594b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5588
0x00000000004083be : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x000000000040962e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040bb1c : add byte ptr [rax], al ; add cl, ch ; ret 2
0x0000000000408ce1 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004089f0 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040152b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000040f8be : add byte ptr [rax], al ; and byte ptr [rbp - 1], bh ; call rdi
0x000000000040f09e : add byte ptr [rax], al ; and byte ptr [rbx - 1], al ; jmp qword ptr [rbx]
0x0000000000401749 : add byte ptr [rax], al ; jmp 0x401549
0x00000000004049fa : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004072b2 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000406f8b : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040f8ba : add byte ptr [rax], al ; or dword ptr fs:[rax], eax ; add byte ptr [rax], ah ; jge 0x40f8cb ; call rdi
0x0000000000403337 : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000409bfb : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004089b0 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040b343 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040c13e : add byte ptr [rax], al ; ret
0x000000000040c23e : add byte ptr [rax], al ; ret 0x404a
0x000000000040687e : add byte ptr [rbp - 0x77], al ; ret
0x0000000000409bfc : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004089b1 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040b344 : add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004022a9 : add byte ptr [rbx + rcx*4 + 0x14], al ; test edx, eax ; ret
0x000000000040344d : add byte ptr [rbx - 0x76b74f83], cl ; ret 0xb0
0x0000000000402a6a : add byte ptr [rbx - 0xab4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040f8bb : add byte ptr [rcx + rcx], ah ; add byte ptr [rax], ah ; jge 0x40f8ca ; call rdi
0x0000000000403cd4 : add byte ptr [rcx - 0xb343], al ; call qword ptr [rdx]
0x000000000040642c : add byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x0000000000401a48 : add byte ptr [rcx], al ; ret
0x000000000040bb18 : add byte ptr [rdi], cl ; lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x00000000004058de : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5588
0x00000000004083c0 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x000000000040588a : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x0000000000409630 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040ee27 : add byte ptr [rsp + rsi*4 - 1], dh ; call rsp
0x000000000040bb1e : add cl, ch ; ret 2
0x000000000040a239 : add dword ptr [rax - 0x77], ecx ; ret 0x8148
0x0000000000408cdf : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000409bfa : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004089af : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x00000000004062ed : add dword ptr [rax], ecx ; ret 0x840
0x000000000040550a : add dword ptr [rdi], ecx ; mov dh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406e13 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405fca : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401a44 : add eax, 0x20f90e ; add ebx, esi ; ret
0x000000000040bb1b : add eax, 0xe9000000 ; ret 2
0x0000000000401a0b : add eax, edx ; sar rax, 1 ; jne 0x401a1c ; pop rbp ; ret
0x0000000000401a49 : add ebx, esi ; ret
0x0000000000401ebb : add esp, 0x10 ; pop rbp ; ret
0x000000000040be4c : add esp, 0x130 ; pop rbp ; ret
0x0000000000404063 : add esp, 0x170 ; pop rbp ; ret
0x000000000040486a : add esp, 0x180 ; pop rbp ; ret
0x0000000000409f2c : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000404bf4 : add esp, 0x20 ; pop rbp ; ret
0x0000000000401fcd : add esp, 0x30 ; pop rbp ; ret
0x0000000000404e28 : add esp, 0x40 ; pop rbp ; ret
0x00000000004041ae : add esp, 0x50 ; pop rbp ; ret
0x00000000004075d3 : add esp, 0x70 ; pop rbp ; ret
0x00000000004035db : add esp, 0x80 ; pop rbp ; ret
0x000000000040900a : add esp, 0x90 ; pop rbp ; ret
0x0000000000409dc3 : add esp, 0xa0 ; pop rbp ; ret
0x0000000000403c83 : add esp, 0xb0 ; pop rbp ; ret
0x0000000000403333 : add esp, 0xc0 ; pop rbp ; ret
0x00000000004051eb : add esp, 0xd0 ; pop rbp ; ret
0x000000000040b33f : add esp, 0xd8 ; pop rbx ; pop rbp ; ret
0x0000000000406da5 : add esp, 0xe0 ; pop rbp ; ret
0x000000000040152e : add esp, 8 ; ret
0x0000000000401a0a : add rax, rdx ; sar rax, 1 ; jne 0x401a1d ; pop rbp ; ret
0x0000000000401eba : add rsp, 0x10 ; pop rbp ; ret
0x000000000040be4b : add rsp, 0x130 ; pop rbp ; ret
0x0000000000404062 : add rsp, 0x170 ; pop rbp ; ret
0x0000000000404869 : add rsp, 0x180 ; pop rbp ; ret
0x0000000000409f2b : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000404bf3 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000401fcc : add rsp, 0x30 ; pop rbp ; ret
0x0000000000404e27 : add rsp, 0x40 ; pop rbp ; ret
0x00000000004041ad : add rsp, 0x50 ; pop rbp ; ret
0x00000000004075d2 : add rsp, 0x70 ; pop rbp ; ret
0x00000000004035da : add rsp, 0x80 ; pop rbp ; ret
0x0000000000409009 : add rsp, 0x90 ; pop rbp ; ret
0x0000000000409dc2 : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000403c82 : add rsp, 0xb0 ; pop rbp ; ret
0x0000000000403332 : add rsp, 0xc0 ; pop rbp ; ret
0x00000000004051ea : add rsp, 0xd0 ; pop rbp ; ret
0x000000000040b33e : add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x0000000000406da4 : add rsp, 0xe0 ; pop rbp ; ret
0x000000000040152d : add rsp, 8 ; ret
0x0000000000405fc9 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401a47 : and byte ptr [rax], al ; add ebx, esi ; ret
0x000000000040f8c0 : and byte ptr [rbp - 1], bh ; call rdi
0x000000000040f0a0 : and byte ptr [rbx - 1], al ; jmp qword ptr [rbx]
0x000000000040537a : and eax, 0x611368 ; call 0x401597
0x000000000040652f : and eax, 0x6113d0 ; pop rbp ; ret
0x0000000000406553 : and eax, 0x6113d8 ; pop rbp ; ret
0x000000000040537f : call 0x401592
0x0000000000401f00 : call 0x401689
0x0000000000401bc5 : call 0x401789
0x000000000040bae8 : call 0x401889
0x000000000040503c : call 0x4851db8f
0x000000000040503b : call 0x4851db90
0x0000000000405759 : call 0x4851e2ac
0x0000000000405758 : call 0x4851e2ad
0x0000000000404b94 : call 0x4902d4e4
0x0000000000404b93 : call 0x4902d4e5
0x000000000040a7d5 : call 0xffffffffe23fa81d
0x000000000040a849 : call 0xffffffffe23fa891
0x000000000040a848 : call 0xffffffffe23fa892
0x00000000004089e9 : call 0xffffffffe9031339
0x00000000004089e8 : call 0xffffffffe903133a
0x00000000004019e3 : call 0xffffffffff407afe
0x0000000000401a23 : call 0xffffffffff407b3e
0x000000000040c119 : call qword ptr [r12 + rbx*8]
0x000000000040f2c3 : call qword ptr [rax]
0x0000000000403cda : call qword ptr [rdx]
0x000000000040f683 : call qword ptr [rsi]
0x000000000040c11a : call qword ptr [rsp + rbx*8]
0x0000000000401a6d : call rax
0x000000000040873c : call rbx
0x000000000040f8c3 : call rdi
0x0000000000406996 : call rsi
0x000000000040ed6b : call rsp
0x000000000040be4a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x000000000040a12f : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405f96 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000405ee4 : clc ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004049a2 : clc ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401a0f : clc ; jne 0x401a18 ; pop rbp ; ret
0x0000000000406f89 : clc ; mov byte ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000404d16 : clc ; mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000407485 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004064af : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000404b33 : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000404b37 : clc ; pop rbp ; ret
0x000000000040561c : cld ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000401ee7 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404061 : cld ; add rsp, 0x170 ; pop rbp ; ret
0x000000000040b62b : cld ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b56a : cld ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404e26 : cld ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004057b9 : cld ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004054c9 : cld ; add rsp, 0x80 ; pop rbp ; ret
0x000000000040aaa4 : cld ; add rsp, 0xc0 ; pop rbp ; ret
0x00000000004051e9 : cld ; add rsp, 0xd0 ; pop rbp ; ret
0x00000000004064ac : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040bf93 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040bf36 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b567 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404e23 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004057b6 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004049fe : cld ; pop rbp ; ret
0x0000000000404fbb : cmp al, 0x23 ; cmp dword ptr [rcx - 0xe], eax ; jmp qword ptr [rcx]
0x0000000000401bcc : cmp al, 0x25 ; ret
0x0000000000404fbd : cmp dword ptr [rcx - 0xe], eax ; jmp qword ptr [rcx]
0x000000000040ae66 : cmp eax, 0x8945c621 ; ret 0x8141
0x00000000004019cd : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4019e0 ; pop rbp ; ret
0x00000000004022a7 : cmp eax, dword ptr [rax] ; add byte ptr [rbx + rcx*4 + 0x14], al ; test edx, eax ; ret
0x000000000040973c : cwde ; mov rcx, qword ptr [rax*8 + 0x40e4c8] ; jmp rcx
0x0000000000401bc9 : dec dword ptr [rax - 0x73] ; cmp al, 0x25 ; ret
0x0000000000401f04 : dec dword ptr [rax - 0x73] ; xor al, 0x25 ; ret 0x40d5
0x000000000040baec : dec dword ptr [rax - 0x73] ; xor al, 0x25 ; ret 0x40ea
0x000000000040a843 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; call 0xffffffffe23fa897
0x000000000040bb84 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x00000000004041f8 : dec dword ptr [rax - 0x77] ; ret 0x8148
0x0000000000403e09 : dec dword ptr [rax - 0x77] ; ret 0x8d8b
0x0000000000402a70 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000406d10 : dec dword ptr [rax - 0x77] ; ret 0xb7e8
0x0000000000408142 : dec dword ptr [rcx - 0x77] ; ret 0x294d
0x00000000004070a7 : enter -0x7cb8, -0x3c ; pop rbp ; ret
0x0000000000409741 : enter 0x40e4, 0 ; jmp rcx
0x00000000004084d0 : enter 0x4b05, 0x34 ; fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x000000000040b341 : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000403a5f : fcomp st(0), st(5) ; sub byte ptr [rcx - 0xe], al ; jmp qword ptr [rcx]
0x00000000004084d4 : fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x0000000000407696 : fild word ptr [rax] ; jmp rcx
0x000000000040a9d1 : fild word ptr [rcx - 0x77] ; ret
0x00000000004041aa : fld xword ptr [rbp - 0x10] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004048eb : fld xword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000404a4e : fld xword ptr [rbp - 0x24] ; pop rbp ; ret
0x0000000000404d06 : fldcw word ptr [rbp - 0x1a] ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040c11c : fmul qword ptr [rax - 0x7d] ; ret
0x00000000004048e8 : fstp xword ptr [rbp - 0x10] ; fld xword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000404a4b : fstp xword ptr [rbp - 0x24] ; fld xword ptr [rbp - 0x24] ; pop rbp ; ret
0x0000000000404c8e : fstp xword ptr [rbp - 0x24] ; pop rbp ; ret
0x0000000000401eb9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004019e0 : hlt ; pop rbp ; mov edi, 0x6112e8 ; jmp rax
0x0000000000401f02 : idiv edi ; dec dword ptr [rax - 0x73] ; xor al, 0x25 ; ret 0x40d5
0x00000000004095ee : in al, 0x40 ; add byte ptr [rax - 0x73], cl ; or al, 0x25 ; ret 0x40e4
0x000000000040abba : in al, dx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b27a : in eax, -0x4a ; loope 0x40b2a3 ; ret 0x8941
0x000000000040875b : inc dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000404d07 : insd dword ptr [rdi], dx ; out 0x48, al ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000409d65 : int 0x80
0x00000000004019d3 : ja 0x4019da ; pop rbp ; ret
0x0000000000409f74 : ja 0x409f7c ; dec dword ptr [rax - 0x73] ; xor al, 0x25 ; ret 0x40d5
0x00000000004019df : je 0x4019dd ; pop rbp ; mov edi, 0x6112e8 ; jmp rax
0x00000000004048e9 : jge 0x4048e1 ; fld xword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000404a4c : jge 0x404a30 ; fld xword ptr [rbp - 0x24] ; pop rbp ; ret
0x0000000000404c8f : jge 0x404c70 ; pop rbp ; ret
0x000000000040f8c1 : jge 0x40f8c4 ; call rdi
0x000000000040174b : jmp 0x401547
0x000000000040a238 : jmp 0xffffffffc2c9ea42
0x000000000040b05e : jmp 0xffffffffe23fb0a6
0x000000000040b0de : jmp 0xffffffffe23fb126
0x000000000040facb : jmp qword ptr [rax]
0x000000000040f0a3 : jmp qword ptr [rbx]
0x0000000000403a67 : jmp qword ptr [rcx]
0x000000000040f9ab : jmp qword ptr [rdx]
0x00000000004019e7 : jmp rax
0x000000000040f343 : jmp rbx
0x000000000040523d : jmp rcx
0x0000000000401a27 : jmp rdx
0x000000000040f323 : jmp rsp
0x0000000000401a10 : jne 0x401a17 ; pop rbp ; ret
0x0000000000404065 : jo 0x40406d ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004075d5 : jo 0x407636 ; ret
0x0000000000408bff : jo 0x408c65 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004092a4 : jo 0x409305 ; ret
0x00000000004093de : jo 0x40943f ; ret
0x0000000000406990 : js 0x4069f6 ; xchg eax, ebx ; xchg eax, ecx ; salc ; call rsi
0x00000000004069a3 : js 0x406a09 ; xchg eax, ebx ; xchg eax, ecx ; salc ; call rsi
0x000000000040bb1a : lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x000000000040b27c : loope 0x40b2a1 ; ret 0x8941
0x0000000000402bc8 : loopne 0x402c18 ; add esp, 0x30 ; pop rbp ; ret
0x0000000000402bc7 : loopne 0x402c19 ; add esp, 0x30 ; pop rbp ; ret
0x0000000000404c59 : loopne 0x404ca9 ; add esp, 0x30 ; pop rbp ; ret
0x0000000000404c58 : loopne 0x404caa ; add esp, 0x30 ; pop rbp ; ret
0x0000000000405234 : loopne 0x405287 ; mov ecx, dword ptr [rax*8 + 0x40c270] ; jmp rcx
0x0000000000405573 : loopne 0x4055c6 ; mov ecx, dword ptr [rax*8 + 0x40c2a8] ; jmp rcx
0x0000000000406da7 : loopne 0x406dae ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040b278 : loopne 0x40b294 ; in eax, -0x4a ; loope 0x40b2a5 ; ret 0x8941
0x000000000040ee29 : mov ah, -1 ; call rsp
0x00000000004035d9 : mov ah, 0x48 ; add esp, 0x80 ; pop rbp ; ret
0x0000000000403c85 : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000405e4a : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000409008 : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000405fc6 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401529 : mov bl, 2 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000406551 : mov byte ptr [0x6113d8], al ; pop rbp ; ret
0x000000000040698d : mov byte ptr [rax - 0x47], cl ; js 0x4069f9 ; xchg eax, ebx ; xchg eax, ecx ; salc ; call rsi
0x0000000000406f8a : mov byte ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000404d17 : mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000401a43 : mov byte ptr [rip + 0x20f90e], 1 ; ret
0x000000000040550c : mov dh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406e15 : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405fcc : mov dh, -0x40 ; pop rbp ; ret
0x000000000040652d : mov dword ptr [0x6113d0], edi ; pop rbp ; ret
0x0000000000407486 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000407448 : mov dword ptr [rax], eax ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000407304 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000407447 : mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000404bac : mov dword ptr [rbp - 0x18], eax ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000401fc9 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000405e48 : mov dword ptr [rbp - 0x50], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401eb7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401ee5 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004064ad : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000404b31 : mov dword ptr [rbp - 8], eax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004074fe : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405e03 : mov eax, 0xb0c28948 ; add al, ch ; ret 0xffb9
0x00000000004072b8 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040a04b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004067a3 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004072b5 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004066ff : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040abb8 : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406ef6 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040726d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000405abf : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000404c8b : mov eax, dword ptr [rbp - 0x18] ; fstp xword ptr [rbp - 0x24] ; pop rbp ; ret
0x00000000004072fe : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000404bb0 : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000402bc6 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040744a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004070a5 : mov eax, dword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004075cf : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000409179 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040bf94 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040b629 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b568 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404e24 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004057b7 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004049fc : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040a12d : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405f94 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000405ee2 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004049a0 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000404b35 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000404bf1 : mov eax, ecx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401a6b : mov ebp, esp ; call rax
0x00000000004019d1 : mov ebp, esp ; ja 0x4019dc ; pop rbp ; ret
0x0000000000409d7d : mov ecx, 0x5b2a830a ; ret
0x000000000040698f : mov ecx, 0x91935e78 ; salc ; call rsi
0x0000000000402195 : mov ecx, dword ptr [rax*8 + 0x40c190] ; jmp rcx
0x0000000000404920 : mov ecx, dword ptr [rax*8 + 0x40c200] ; jmp rcx
0x0000000000404a86 : mov ecx, dword ptr [rax*8 + 0x40c228] ; jmp rcx
0x0000000000405236 : mov ecx, dword ptr [rax*8 + 0x40c270] ; jmp rcx
0x0000000000405575 : mov ecx, dword ptr [rax*8 + 0x40c2a8] ; jmp rcx
0x0000000000407692 : mov ecx, dword ptr [rax*8 + 0x40dfc0] ; jmp rcx
0x00000000004079b6 : mov ecx, dword ptr [rax*8 + 0x40e008] ; jmp rcx
0x000000000040973e : mov ecx, dword ptr [rax*8 + 0x40e4c8] ; jmp rcx
0x000000000040a845 : mov ecx, dword ptr [rax*8 + 0x40e840] ; jmp rcx
0x000000000040a7d1 : mov ecx, dword ptr [rax*8 + 0x40e8a0] ; jmp rcx
0x000000000040b0da : mov ecx, dword ptr [rax*8 + 0x40e970] ; jmp rcx
0x000000000040b05a : mov ecx, dword ptr [rax*8 + 0x40e9d0] ; jmp rcx
0x0000000000407301 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401a65 : mov edi, 0x610e20 ; mov rbp, rsp ; call rax
0x00000000004019e2 : mov edi, 0x6112e8 ; jmp rax
0x0000000000401a22 : mov edi, 0x6112e8 ; jmp rdx
0x000000000040c117 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000040c116 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000401a20 : mov esi, eax ; mov edi, 0x6112e8 ; jmp rdx
0x000000000040652c : mov qword ptr [0x6113d0], rdi ; pop rbp ; ret
0x0000000000404bab : mov qword ptr [rbp - 0x18], rax ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000404b30 : mov qword ptr [rbp - 8], rax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004074fd : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405e49 : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040a04a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004067a2 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004072b4 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004066fe : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000406ef5 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040726c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000405abe : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000404c8a : mov rax, qword ptr [rbp - 0x18] ; fstp xword ptr [rbp - 0x24] ; pop rbp ; ret
0x0000000000404baf : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000402bc5 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004070a4 : mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004075ce : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000409178 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040a12c : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405f93 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000405ee1 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040499f : mov rax, qword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000404b34 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000404bf0 : mov rax, rcx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401a6a : mov rbp, rsp ; call rax
0x00000000004019d0 : mov rbp, rsp ; ja 0x4019dd ; pop rbp ; ret
0x0000000000402194 : mov rcx, qword ptr [rax*8 + 0x40c190] ; jmp rcx
0x000000000040491f : mov rcx, qword ptr [rax*8 + 0x40c200] ; jmp rcx
0x0000000000404a85 : mov rcx, qword ptr [rax*8 + 0x40c228] ; jmp rcx
0x0000000000405235 : mov rcx, qword ptr [rax*8 + 0x40c270] ; jmp rcx
0x0000000000405574 : mov rcx, qword ptr [rax*8 + 0x40c2a8] ; jmp rcx
0x0000000000407691 : mov rcx, qword ptr [rax*8 + 0x40dfc0] ; jmp rcx
0x00000000004079b5 : mov rcx, qword ptr [rax*8 + 0x40e008] ; jmp rcx
0x000000000040973d : mov rcx, qword ptr [rax*8 + 0x40e4c8] ; jmp rcx
0x000000000040a844 : mov rcx, qword ptr [rax*8 + 0x40e840] ; jmp rcx
0x000000000040a7d0 : mov rcx, qword ptr [rax*8 + 0x40e8a0] ; jmp rcx
0x000000000040b0d9 : mov rcx, qword ptr [rax*8 + 0x40e970] ; jmp rcx
0x000000000040b059 : mov rcx, qword ptr [rax*8 + 0x40e9d0] ; jmp rcx
0x0000000000401a1f : mov rsi, rax ; mov edi, 0x6112e8 ; jmp rdx
0x000000000040227c : movabs al, byte ptr [0xd025048d480040c3] ; ret
0x0000000000406e14 : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405fcb : movzx eax, al ; pop rbp ; ret
0x0000000000404d1a : movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x000000000040550b : movzx eax, cl ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040221b : nop ; ret
0x000000000040c138 : nop dword ptr [rax + rax] ; ret
0x0000000000407d1d : or al, 0x18 ; ret 0x6451
0x00000000004058d9 : or al, 0x25 ; push 0xf006112 ; xchg eax, ebp ; ret 0x5588
0x0000000000405885 : or al, 0x25 ; push 0xf006112 ; xchg eax, esp ; ret 0x5588
0x00000000004095f3 : or al, 0x25 ; ret 0x40e4
0x000000000040a846 : or al, 0xffffffffffffffc5 ; call 0xffffffffe23fa894
0x000000000040973f : or al, 0xffffffffffffffc5 ; enter 0x40e4, 0 ; jmp rcx
0x000000000040f8bd : or dword ptr [rax], eax ; add byte ptr [rax], ah ; jge 0x40f8c8 ; call rdi
0x0000000000409f73 : or dword ptr [rdi - 1], esi ; dec dword ptr [rax - 0x73] ; xor al, 0x25 ; ret 0x40d5
0x000000000040b31b : or dword ptr [rsp + rax + 0x21], esp ; ret 0xd709
0x000000000040f8bc : or dword ptr fs:[rax], eax ; add byte ptr [rax], ah ; jge 0x40f8c9 ; call rdi
0x0000000000409361 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404c89 : out 0x48, al ; mov eax, dword ptr [rbp - 0x18] ; fstp xword ptr [rbp - 0x24] ; pop rbp ; ret
0x0000000000404d08 : out 0x48, al ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040c12c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000408c01 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040c12e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000408c03 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040c130 : pop r14 ; pop r15 ; ret
0x00000000004089b3 : pop r14 ; pop rbp ; ret
0x0000000000408c05 : pop r15 ; pop rbp ; ret
0x000000000040c132 : pop r15 ; ret
0x0000000000401a42 : pop rbp ; mov byte ptr [rip + 0x20f90e], 1 ; ret
0x00000000004019e1 : pop rbp ; mov edi, 0x6112e8 ; jmp rax
0x0000000000401a1e : pop rbp ; mov rsi, rax ; mov edi, 0x6112e8 ; jmp rdx
0x000000000040c12b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040c12f : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004019d5 : pop rbp ; ret
0x0000000000408c00 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000409bfd : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004089b2 : pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040b345 : pop rbx ; pop rbp ; ret
0x0000000000409d81 : pop rbx ; ret
0x0000000000408c06 : pop rdi ; pop rbp ; ret
0x000000000040c133 : pop rdi ; ret
0x0000000000408c04 : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040c131 : pop rsi ; pop r15 ; ret
0x00000000004089b4 : pop rsi ; pop rbp ; ret
0x0000000000406991 : pop rsi ; xchg eax, ebx ; xchg eax, ecx ; salc ; call rsi
0x000000000040c12d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000408c02 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004058db : push 0xf006112 ; xchg eax, ebp ; ret 0x5588
0x0000000000405887 : push 0xf006112 ; xchg eax, esp ; ret 0x5588
0x00000000004041b0 : push rax ; pop rbp ; ret
0x0000000000401a64 : push rbp ; mov edi, 0x610e20 ; mov rbp, rsp ; call rax
0x0000000000405ca5 : push rbp ; ror byte ptr [rax - 0x77], 1 ; ret 0x11e8
0x0000000000404fba : push rcx ; cmp al, 0x23 ; cmp dword ptr [rcx - 0xe], eax ; jmp qword ptr [rcx]
0x0000000000401531 : ret
0x000000000040bd52 : ret 0
0x0000000000405ca9 : ret 0x11e8
0x0000000000403147 : ret 0x148
0x0000000000408d9e : ret 0x1b2
0x0000000000405145 : ret 0x20
0x0000000000401952 : ret 0x20f8
0x0000000000401752 : ret 0x20f9
0x0000000000401542 : ret 0x20fa
0x0000000000402d12 : ret 0x2948
0x0000000000408129 : ret 0x294c
0x0000000000408145 : ret 0x294d
0x00000000004068b9 : ret 0x31e8
0x0000000000404924 : ret 0x40
0x000000000040c240 : ret 0x404a
0x0000000000401f09 : ret 0x40d5
0x00000000004095f5 : ret 0x40e4
0x000000000040baf1 : ret 0x40ea
0x000000000040588d : ret 0x5588
0x000000000040583e : ret 0x5589
0x0000000000407d1f : ret 0x6451
0x0000000000404749 : ret 0x6f16
0x000000000040a9ca : ret 0x8141
0x00000000004041fb : ret 0x8148
0x00000000004062ef : ret 0x840
0x0000000000403d3a : ret 0x858a
0x00000000004083c3 : ret 0x8840
0x0000000000403f17 : ret 0x8844
0x000000000040b27e : ret 0x8941
0x0000000000402cf8 : ret 0x8948
0x0000000000408148 : ret 0x8949
0x00000000004082dc : ret 0x89a5
0x000000000040812c : ret 0x8b48
0x0000000000403e0c : ret 0x8d8b
0x0000000000402478 : ret 0xb0
0x0000000000406d13 : ret 0xb7e8
0x000000000040bd59 : ret 0xb849
0x000000000040aa0a : ret 0xc131
0x0000000000401a05 : ret 0xc148
0x000000000040bac0 : ret 0xc2f6
0x00000000004060ac : ret 0xca21
0x00000000004048b8 : ret 0xca29
0x000000000040815d : ret 0xcde8
0x0000000000409633 : ret 0xd284
0x00000000004036c8 : ret 0xd689
0x000000000040aa86 : ret 0xd709
0x0000000000406a2c : ret 0xee8
0x00000000004083d8 : ret 0xf180
0x00000000004028aa : ret 0xf221
0x00000000004062d3 : ret 0xf280
0x000000000040602a : ret 0xf281
0x0000000000404349 : ret 0xf48
0x0000000000405e0a : ret 0xffb9
0x0000000000405381 : ret 0xffff
0x00000000004041fe : ret 1
0x000000000040bb20 : ret 2
0x00000000004051ed : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000407446 : rol byte ptr [rcx + rcx*4], 1 ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000409d60 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000406ff6 : ror byte ptr [r8 - 0x77], 1 ; ret 0x2948
0x00000000004075d0 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x40763b ; ret
0x0000000000401a0c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401a1b ; pop rbp ; ret
0x0000000000409d61 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000405ca6 : ror byte ptr [rax - 0x77], 1 ; ret 0x11e8
0x0000000000406ff7 : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000408126 : ror byte ptr [rax - 0x77], 1 ; ret 0x294c
0x00000000004075d1 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x40763a ; ret
0x0000000000403c81 : ror byte ptr [rax - 0x7f], -0x3c ; mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004019de : sal byte ptr [rsp + rsi*8 + 0x5d], -0x41 ; call 0xffffffffff407b03
0x0000000000406995 : salc ; call rsi
0x0000000000403fd6 : sar dh, -1 ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000404342 : sar dword ptr [rax + 0x40d82b], -0x77 ; ret 0xf48
0x000000000040469c : sar dword ptr [rax + 0x40d8d4], -0x77 ; ret 0xf48
0x0000000000401a0e : sar eax, 1 ; jne 0x401a19 ; pop rbp ; ret
0x0000000000401a0d : sar rax, 1 ; jne 0x401a1a ; pop rbp ; ret
0x0000000000401a46 : stc ; and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000405fc8 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000403a61 : sub byte ptr [rcx - 0xe], al ; jmp qword ptr [rcx]
0x000000000040aa83 : sub byte ptr [rsi + 0x21], dl ; ret 0xd709
0x0000000000409d7f : sub dword ptr [rdx], 0x5b ; ret
0x000000000040c16d : sub esp, 8 ; add rsp, 8 ; ret
0x000000000040c16c : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040b31a : test al, 9 ; add al, 0x21 ; ret 0xd709
0x000000000040c13a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004022ad : test edx, eax ; ret
0x00000000004058e0 : xchg eax, ebp ; ret 0x5588
0x00000000004083c2 : xchg eax, ebp ; ret 0x8840
0x0000000000406992 : xchg eax, ebx ; xchg eax, ecx ; salc ; call rsi
0x0000000000406993 : xchg eax, ecx ; salc ; call rsi
0x000000000040588c : xchg eax, esp ; ret 0x5588
0x0000000000409632 : xchg eax, esp ; ret 0xd284
0x0000000000401f07 : xor al, 0x25 ; ret 0x40d5
0x000000000040baef : xor al, 0x25 ; ret 0x40ea
0x000000000040be4e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004090f7 : xor eax, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x0000000000407445 : xor eax, edx ; mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
