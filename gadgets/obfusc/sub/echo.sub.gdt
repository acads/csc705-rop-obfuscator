0x0000000000403f49 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407f63 : add ah, cl ; add eax, dword ptr [rax] ; add al, bl ; ret
0x0000000000407f67 : add al, bl ; ret
0x00000000004068df : add bl, dh ; ret
0x0000000000404f8d : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000407f61 : add byte ptr [rax], al ; add ah, cl ; add eax, dword ptr [rax] ; add al, bl ; ret
0x00000000004068dd : add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004068db : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000400660 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000400662 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000004068dc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400664 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000004035ee : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000401787 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x000000000040485e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000405d3c : add byte ptr [rax], al ; add cl, ch ; ret 2
0x0000000000403f11 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403c20 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040105b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000408026 : add byte ptr [rax], al ; call 0x21407ff6
0x0000000000407f26 : add byte ptr [rax], al ; cwde ; ret
0x0000000000401219 : add byte ptr [rax], al ; jmp 0x401079
0x0000000000408442 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; or byte ptr [rax], al ; add byte ptr [rax], bh ; fdiv st(7), st(0) ; jmp rax
0x000000000040203c : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004024e2 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000407f22 : add byte ptr [rax], al ; mov word ptr [rbx], es ; add byte ptr [rax], al ; cwde ; ret
0x000000000040798a : add byte ptr [rax], al ; or bl, 0xff ; jmp qword ptr [rax]
0x000000000040423e : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000404e2b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403be0 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000407a0a : add byte ptr [rax], al ; rcl ch, -1 ; jmp qword ptr [rax]
0x00000000004068de : add byte ptr [rax], al ; ret
0x0000000000400666 : add byte ptr [rax], al ; ret 0
0x000000000040797a : add byte ptr [rax], al ; ror dl, -1 ; jmp rax
0x0000000000408447 : add byte ptr [rax], bh ; fdiv st(7), st(0) ; jmp rax
0x0000000000404e2c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000403be1 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040677c : add byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x0000000000401458 : add byte ptr [rcx], al ; ret
0x0000000000407a08 : add byte ptr [rcx], cl ; add byte ptr [rax], al ; rcl ch, -1 ; jmp qword ptr [rax]
0x0000000000407988 : add byte ptr [rdi], al ; add byte ptr [rax], al ; or bl, 0xff ; jmp qword ptr [rax]
0x0000000000405d38 : add byte ptr [rdi], cl ; lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x00000000004035f0 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000401789 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x0000000000404860 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000405d3e : add cl, ch ; ret 2
0x0000000000405469 : add dword ptr [rax - 0x77], ecx ; ret 0x8148
0x0000000000403f0f : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404e2a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000403bdf : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040663d : add dword ptr [rax], ecx ; ret 0x840
0x000000000040631a : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401454 : add eax, 0x207dee ; add ebx, esi ; ret
0x0000000000405d3b : add eax, 0xe9000000 ; ret 2
0x0000000000407f65 : add eax, dword ptr [rax] ; add al, bl ; ret
0x0000000000401059 : add eax, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000040141b : add eax, edx ; sar rax, 1 ; jne 0x40142c ; pop rbp ; ret
0x0000000000401459 : add ebx, esi ; ret
0x000000000040162b : add esp, 0x10 ; pop rbp ; ret
0x000000000040606c : add esp, 0x130 ; pop rbp ; ret
0x000000000040515c : add esp, 0x1a0 ; pop rbp ; ret
0x00000000004022d7 : add esp, 0x20 ; pop rbp ; ret
0x000000000040170d : add esp, 0x30 ; pop rbp ; ret
0x000000000040432c : add esp, 0x50 ; pop rbp ; ret
0x0000000000402803 : add esp, 0x70 ; pop rbp ; ret
0x000000000040423a : add esp, 0x90 ; pop rbp ; ret
0x0000000000404ff3 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040105e : add esp, 8 ; ret
0x000000000040141a : add rax, rdx ; sar rax, 1 ; jne 0x40142d ; pop rbp ; ret
0x000000000040162a : add rsp, 0x10 ; pop rbp ; ret
0x000000000040606b : add rsp, 0x130 ; pop rbp ; ret
0x000000000040515b : add rsp, 0x1a0 ; pop rbp ; ret
0x00000000004022d6 : add rsp, 0x20 ; pop rbp ; ret
0x000000000040170c : add rsp, 0x30 ; pop rbp ; ret
0x000000000040432b : add rsp, 0x50 ; pop rbp ; ret
0x0000000000402802 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000404239 : add rsp, 0x90 ; pop rbp ; ret
0x0000000000404ff2 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040105d : add rsp, 8 ; ret
0x0000000000406319 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401457 : and byte ptr [rax], al ; add ebx, esi ; ret
0x000000000040205f : and eax, 0x609250 ; pop rbp ; ret
0x0000000000402083 : and eax, 0x609258 ; pop rbp ; ret
0x0000000000408028 : call 0x21407ff4
0x0000000000403c19 : call 0xffffffffe902c569
0x0000000000403c18 : call 0xffffffffe902c56a
0x00000000004068b9 : call qword ptr [r12 + rbx*8]
0x0000000000407c83 : call qword ptr [rsi]
0x00000000004068ba : call qword ptr [rsp + rbx*8]
0x000000000040147d : call rax
0x000000000040396c : call rbx
0x0000000000407e23 : call rdi
0x000000000040606a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x000000000040535f : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404871 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040141f : clc ; jne 0x401428 ; pop rbp ; ret
0x00000000004026b5 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004067ff : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000406802 : clc ; pop rbp ; ret
0x00000000004061b6 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040584b : cld ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040578a : cld ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004067fc : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004061b3 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406156 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405787 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402040 : cld ; pop rbp ; ret
0x00000000004013dd : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4013f0 ; pop rbp ; ret
0x000000000040496c : cwde ; mov rcx, qword ptr [rax*8 + 0x4074c8] ; jmp rcx
0x0000000000407f28 : cwde ; ret
0x00000000004028c0 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; shr byte ptr [rdi + 0x40], 0 ; jmp rcx
0x0000000000401b99 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; sub byte ptr [rcx + 0x40], 0 ; jmp rcx
0x0000000000405da4 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000403372 : dec dword ptr [rcx - 0x77] ; ret 0x294d
0x0000000000404971 : enter 0x4074, 0 ; jmp rcx
0x0000000000403700 : enter 0x4b05, 0x34 ; fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x0000000000408449 : fdiv st(7), st(0) ; jmp rax
0x0000000000403704 : fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x00000000004068bc : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000404808 : fsubr st(0) ; ret 0xe
0x0000000000401629 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004013f0 : hlt ; pop rbp ; mov edi, 0x609220 ; jmp rax
0x000000000040398b : inc dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000404f95 : int 0x80
0x00000000004013e3 : ja 0x4013ea ; pop rbp ; ret
0x00000000004013ef : je 0x4013ed ; pop rbp ; mov edi, 0x609220 ; jmp rax
0x0000000000401456 : jge 0x40147d ; add byte ptr [rcx], al ; ret
0x000000000040121b : jmp 0x401077
0x0000000000405468 : jmp 0xffffffffc2c99c72
0x000000000040794f : jmp qword ptr [rax]
0x0000000000402e06 : jmp qword ptr [rcx]
0x0000000000407f0b : jmp qword ptr [rdx]
0x00000000004013f7 : jmp rax
0x0000000000401ba2 : jmp rcx
0x0000000000401437 : jmp rdx
0x0000000000401420 : jne 0x401427 ; pop rbp ; ret
0x0000000000402805 : jo 0x402866 ; ret
0x0000000000403e2f : jo 0x403e95 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004044d4 : jo 0x404535 ; ret
0x000000000040460e : jo 0x40466f ; ret
0x000000000040792f : lcall ptr [rax + 0x70000005] ; ret
0x0000000000405d3a : lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000408444 : lodsb al, byte ptr [rsi] ; or byte ptr [rax], al ; add byte ptr [rax], bh ; fdiv st(7), st(0) ; jmp rax
0x00000000004043ab : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000404238 : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000406316 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000402081 : mov byte ptr [0x609258], al ; pop rbp ; ret
0x0000000000401453 : mov byte ptr [rip + 0x207dee], 1 ; ret
0x000000000040631c : mov dh, -0x40 ; pop rbp ; ret
0x000000000040205d : mov dword ptr [0x609250], edi ; pop rbp ; ret
0x00000000004026b6 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000402678 : mov dword ptr [rax], eax ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000402534 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000402677 : mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000401709 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401627 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004067fd : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040272e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407938 : mov eax, 0xb0000005 ; ret
0x00000000004024e8 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040527b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004022d3 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004024e5 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040222f : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405573 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040249d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040252e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040267a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004027ff : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004043a9 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004061b4 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405849 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405788 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040203e : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040535d : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040486f : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406800 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040147b : mov ebp, esp ; call rax
0x00000000004013e1 : mov ebp, esp ; ja 0x4013ec ; pop rbp ; ret
0x0000000000404fad : mov ecx, 0x5b2a830a ; ret
0x0000000000401bcd : mov ecx, dword ptr [rax*8 + 0x406928] ; jmp rcx
0x0000000000401b9b : mov ecx, dword ptr [rax*8 + 0x406980] ; jmp rcx
0x0000000000401fd7 : mov ecx, dword ptr [rax*8 + 0x4069d8] ; jmp rcx
0x0000000000401fb1 : mov ecx, dword ptr [rax*8 + 0x406a08] ; jmp rcx
0x00000000004028c2 : mov ecx, dword ptr [rax*8 + 0x406fc0] ; jmp rcx
0x0000000000402be6 : mov ecx, dword ptr [rax*8 + 0x407008] ; jmp rcx
0x000000000040496e : mov ecx, dword ptr [rax*8 + 0x4074c8] ; jmp rcx
0x0000000000402531 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401475 : mov edi, 0x608e20 ; mov rbp, rsp ; call rax
0x00000000004013f2 : mov edi, 0x609220 ; jmp rax
0x0000000000401432 : mov edi, 0x609220 ; jmp rdx
0x00000000004068b7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x00000000004068b6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000401430 : mov esi, eax ; mov edi, 0x609220 ; jmp rdx
0x0000000000401477 : mov fs, word ptr [rax] ; mov rbp, rsp ; call rax
0x000000000040205c : mov qword ptr [0x609250], rdi ; pop rbp ; ret
0x000000000040272d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004043aa : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040527a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004022d2 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004024e4 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040222e : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405572 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040249c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004027fe : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004043a8 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040535c : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040486e : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040147a : mov rbp, rsp ; call rax
0x00000000004013e0 : mov rbp, rsp ; ja 0x4013ed ; pop rbp ; ret
0x0000000000401bcc : mov rcx, qword ptr [rax*8 + 0x406928] ; jmp rcx
0x0000000000401b9a : mov rcx, qword ptr [rax*8 + 0x406980] ; jmp rcx
0x0000000000401fd6 : mov rcx, qword ptr [rax*8 + 0x4069d8] ; jmp rcx
0x0000000000401fb0 : mov rcx, qword ptr [rax*8 + 0x406a08] ; jmp rcx
0x00000000004028c1 : mov rcx, qword ptr [rax*8 + 0x406fc0] ; jmp rcx
0x0000000000402be5 : mov rcx, qword ptr [rax*8 + 0x407008] ; jmp rcx
0x000000000040496d : mov rcx, qword ptr [rax*8 + 0x4074c8] ; jmp rcx
0x000000000040142f : mov rsi, rax ; mov edi, 0x609220 ; jmp rdx
0x0000000000407f24 : mov word ptr [rbx], es ; add byte ptr [rax], al ; cwde ; ret
0x000000000040631b : movzx eax, al ; pop rbp ; ret
0x00000000004068d8 : nop dword ptr [rax + rax] ; ret
0x0000000000402f4d : or al, 0x18 ; ret 0x6451
0x000000000040496f : or al, 0xffffffffffffffc5 ; enter 0x4074, 0 ; jmp rcx
0x00000000004028c3 : or al, 0xffffffffffffffc5 ; shr byte ptr [rdi + 0x40], 0 ; jmp rcx
0x0000000000401b9c : or al, 0xffffffffffffffc5 ; sub byte ptr [rcx + 0x40], 0 ; jmp rcx
0x000000000040798c : or bl, 0xff ; jmp qword ptr [rax]
0x0000000000408445 : or byte ptr [rax], al ; add byte ptr [rax], bh ; fdiv st(7), st(0) ; jmp rax
0x0000000000401904 : or byte ptr [rcx + 0x2df9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x0000000000404591 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401455 : out dx, al ; jge 0x40147e ; add byte ptr [rcx], al ; ret
0x00000000004068cc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000403e31 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004068ce : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000403e33 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004068d0 : pop r14 ; pop r15 ; ret
0x0000000000403be3 : pop r14 ; pop rbp ; ret
0x0000000000403e35 : pop r15 ; pop rbp ; ret
0x00000000004068d2 : pop r15 ; ret
0x0000000000401452 : pop rbp ; mov byte ptr [rip + 0x207dee], 1 ; ret
0x00000000004013f1 : pop rbp ; mov edi, 0x609220 ; jmp rax
0x000000000040142e : pop rbp ; mov rsi, rax ; mov edi, 0x609220 ; jmp rdx
0x00000000004068cb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004068cf : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004013e5 : pop rbp ; ret
0x0000000000403e30 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000404e2d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403be2 : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000404fb1 : pop rbx ; ret
0x0000000000403e36 : pop rdi ; pop rbp ; ret
0x00000000004068d3 : pop rdi ; ret
0x0000000000403e34 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004068d1 : pop rsi ; pop r15 ; ret
0x0000000000403be4 : pop rsi ; pop rbp ; ret
0x00000000004068cd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000403e32 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040432e : push rax ; pop rbp ; ret
0x0000000000401474 : push rbp ; mov edi, 0x608e20 ; mov rbp, rsp ; call rax
0x0000000000407a0c : rcl ch, -1 ; jmp qword ptr [rax]
0x0000000000401061 : ret
0x0000000000400668 : ret 0
0x0000000000405f86 : ret 0x148
0x0000000000403fce : ret 0x1b2
0x0000000000401222 : ret 0x207e
0x00000000004022b5 : ret 0x2948
0x0000000000403359 : ret 0x294c
0x0000000000403375 : ret 0x294d
0x000000000040178c : ret 0x5588
0x00000000004025b4 : ret 0x5589
0x0000000000402f4f : ret 0x6451
0x000000000040546c : ret 0x8148
0x000000000040663f : ret 0x840
0x00000000004035f3 : ret 0x8840
0x0000000000404929 : ret 0x8844
0x0000000000401c37 : ret 0x8948
0x0000000000403378 : ret 0x8949
0x000000000040350c : ret 0x89a5
0x0000000000401959 : ret 0x89bb
0x000000000040335c : ret 0x8b48
0x0000000000405f79 : ret 0xb849
0x000000000040338d : ret 0xbde8
0x0000000000401415 : ret 0xc148
0x0000000000405ce0 : ret 0xc2f6
0x0000000000402d74 : ret 0xca21
0x0000000000401a54 : ret 0xca29
0x0000000000404863 : ret 0xd284
0x000000000040480a : ret 0xe
0x0000000000403c1c : ret 0xee8
0x0000000000403608 : ret 0xf180
0x0000000000405cd3 : ret 0xf280
0x0000000000402dee : ret 0xf281
0x0000000000403fd4 : ret 1
0x0000000000405d40 : ret 2
0x00000000004018d1 : ret 8
0x0000000000402676 : rol byte ptr [rcx + rcx*4], 1 ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000404f90 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000402800 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x40286b ; ret
0x000000000040141c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40142b ; pop rbp ; ret
0x0000000000404f91 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x000000000040334d : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000403356 : ror byte ptr [rax - 0x77], 1 ; ret 0x294c
0x0000000000402801 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x40286a ; ret
0x0000000000407b38 : ror byte ptr [rip - 0x10d00000], -1 ; jmp rax
0x000000000040797c : ror dl, -1 ; jmp rax
0x000000000040141e : sar eax, 1 ; jne 0x401429 ; pop rbp ; ret
0x000000000040141d : sar rax, 1 ; jne 0x40142a ; pop rbp ; ret
0x0000000000407f20 : sbb al, 0 ; add byte ptr [rax], al ; mov word ptr [rbx], es ; add byte ptr [rax], al ; cwde ; ret
0x00000000004028c5 : shr byte ptr [rdi + 0x40], 0 ; jmp rcx
0x0000000000401906 : stc ; sub eax, 0xf000000 ; xchg eax, esp ; ret 0x5588
0x0000000000406318 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401b9e : sub byte ptr [rcx + 0x40], 0 ; jmp rcx
0x0000000000404faf : sub dword ptr [rdx], 0x5b ; ret
0x0000000000401907 : sub eax, 0xf000000 ; xchg eax, esp ; ret 0x5588
0x000000000040690d : sub esp, 8 ; add rsp, 8 ; ret
0x000000000040690c : sub rsp, 8 ; add rsp, 8 ; ret
0x00000000004068da : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004035f2 : xchg eax, ebp ; ret 0x8840
0x000000000040178b : xchg eax, esp ; ret 0x5588
0x0000000000404862 : xchg eax, esp ; ret 0xd284
0x000000000040606e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000404327 : xor eax, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x0000000000402675 : xor eax, edx ; mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
