0x000000000041372c : adc byte ptr [rbp - 1], dl ; jmp qword ptr [rax]
0x000000000041366c : adc byte ptr [rbx - 1], al ; jmp qword ptr [rax]
0x0000000000402f4e : adc byte ptr [rcx - 0xe], al ; jmp qword ptr [rcx]
0x000000000041375c : adc byte ptr [rdi - 1], ah ; jmp rax
0x0000000000411c0f : adc dword ptr [rax - 0x42], ecx ; ret
0x0000000000406109 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000413d9b : add ah, ah ; add al, 0 ; add byte ptr [rax], dh ; or al, 0xffffffffffffffff ; call rdi
0x000000000041399b : add ah, ah ; add byte ptr [rax], al ; add al, dl ; out -2, eax ; call rcx
0x0000000000406c4a : add al, -0x62 ; rol byte ptr [rcx - 0xf], cl ; jmp qword ptr [rcx]
0x0000000000413d9d : add al, 0 ; add byte ptr [rax], dh ; or al, 0xffffffffffffffff ; call rdi
0x0000000000404ae1 : add al, 0x25 ; ret 0x412b
0x0000000000407418 : add al, 0xf ; pushfq ; ret 0x5588
0x00000000004137eb : add al, al ; mov bh, -1 ; jmp qword ptr [rax]
0x0000000000413e47 : add al, bl ; and bh, bh ; jmp rdx
0x00000000004115e3 : add al, byte ptr [rax] ; add byte ptr [rcx - 0xdf43], al ; call qword ptr [rax]
0x0000000000402097 : add al, ch ; ret
0x000000000041399f : add al, dl ; out -2, eax ; call rcx
0x0000000000411f5f : add bl, dh ; ret
0x000000000040df64 : add byte ptr [rax + 1], cl ; ret 0xc148
0x0000000000411c23 : add byte ptr [rax - 0x42], cl ; ret
0x0000000000404ade : add byte ptr [rax - 0x73], cl ; add al, 0x25 ; ret 0x412b
0x0000000000402b3b : add byte ptr [rax - 0x75], cl ; call 0x4902b493
0x000000000040e735 : add byte ptr [rax - 0x75], cl ; clc ; mov rsp, rbp ; pop rbp ; ret
0x000000000040ee02 : add byte ptr [rax - 0x75], cl ; loopne 0x40ee6b ; ret
0x0000000000410129 : add byte ptr [rax - 0x75], cl ; push rbp ; call 0x21038281
0x0000000000407e5d : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000410b7f : add byte ptr [rax - 0x77], cl ; fsubr st(1) ; ret 0xffff
0x000000000040c04a : add byte ptr [rax - 0x77], cl ; ret 0x4de8
0x000000000040bfb7 : add byte ptr [rax - 0x77], cl ; ret 0xe0e8
0x00000000004136dc : add byte ptr [rax - 1], dl ; jmp rax
0x00000000004137ab : add byte ptr [rax], ah ; mov ch, -1 ; jmp qword ptr [rax]
0x000000000041372a : add byte ptr [rax], al ; adc byte ptr [rbp - 1], dl ; jmp qword ptr [rax]
0x000000000041366a : add byte ptr [rax], al ; adc byte ptr [rbx - 1], al ; jmp qword ptr [rax]
0x000000000041375a : add byte ptr [rax], al ; adc byte ptr [rdi - 1], ah ; jmp rax
0x000000000041399d : add byte ptr [rax], al ; add al, dl ; out -2, eax ; call rcx
0x0000000000411f5d : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040df62 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0xc148
0x0000000000411c21 : add byte ptr [rax], al ; add byte ptr [rax - 0x42], cl ; ret
0x0000000000404adc : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add al, 0x25 ; ret 0x412b
0x0000000000402b39 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; call 0x4902b495
0x000000000040ee00 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; loopne 0x40ee6d ; ret
0x0000000000410127 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbp ; call 0x21038283
0x0000000000410b7d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fsubr st(1) ; ret 0xffff
0x00000000004136da : add byte ptr [rax], al ; add byte ptr [rax - 1], dl ; jmp rax
0x0000000000411f5b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000406a90 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x000000000040edff : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x20] ; pop rbp ; ret
0x0000000000406a4e : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000411f5c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000403fcb : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], al ; ret 0x3145
0x0000000000403fb3 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x000000000040f3d8 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x0000000000406b38 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000403114 : add byte ptr [rax], al ; add byte ptr [rcx], cl ; ret 0x458b
0x000000000040346e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0x5588
0x0000000000403949 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0x9588
0x00000000004057ae : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x00000000004035a7 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x0000000000403cce : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x0000000000406a1e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000408fbc : add byte ptr [rax], al ; add cl, ch ; ret 2
0x00000000004060d1 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405de0 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004026ce : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401503 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004136aa : add byte ptr [rax], al ; and byte ptr [rbp - 1], cl ; jmp qword ptr [rax]
0x00000000004135ea : add byte ptr [rax], al ; cmp byte ptr [rsi], -1 ; jmp qword ptr [rax]
0x0000000000413d9a : add byte ptr [rax], al ; in al, 4 ; add byte ptr [rax], al ; xor byte ptr [rdi + rdi*8], cl ; call rdi
0x0000000000401579 : add byte ptr [rax], al ; jmp 0x401519
0x0000000000406a92 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x000000000040744a : add byte ptr [rax], al ; mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040757d : add byte ptr [rax], al ; mov eax, edi ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004076d9 : add byte ptr [rax], al ; mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040262d : add byte ptr [rax], al ; mov eax, esi ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004074f1 : add byte ptr [rax], al ; mov eax, esi ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004046a2 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040ee01 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x20] ; pop rbp ; ret
0x0000000000414bfe : add byte ptr [rax], al ; nop ; sar edi, cl ; call qword ptr [rax]
0x00000000004028c3 : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000407cfb : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405da0 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040260b : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000041379a : add byte ptr [rax], al ; push rax ; mov ah, -1 ; jmp rax
0x000000000041356a : add byte ptr [rax], al ; push rax ; xor edi, edi ; jmp qword ptr [rax]
0x0000000000411f5e : add byte ptr [rax], al ; ret
0x0000000000414786 : add byte ptr [rax], al ; sub byte ptr [rbx - 1], dl ; jmp rax
0x000000000041369a : add byte ptr [rax], al ; xor byte ptr [rbx - 1], cl ; jmp rax
0x000000000041361a : add byte ptr [rax], al ; xor byte ptr [rcx - 1], al ; jmp rax
0x0000000000413d9e : add byte ptr [rax], al ; xor byte ptr [rdi + rdi*8], cl ; call rdi
0x000000000041355b : add byte ptr [rax], al ; xor edi, edi ; jmp rax
0x00000000004140c7 : add byte ptr [rax], bh ; sub bh, bh ; jmp qword ptr [rdx]
0x0000000000413d9f : add byte ptr [rax], dh ; or al, 0xffffffffffffffff ; call rdi
0x0000000000413668 : add byte ptr [rax], dl ; add byte ptr [rax], al ; adc byte ptr [rbx - 1], al ; jmp qword ptr [rax]
0x000000000041352b : add byte ptr [rax], dl ; xor edi, edi ; jmp qword ptr [rax]
0x0000000000403fcd : add byte ptr [rbp - 0x77], al ; ret 0x3145
0x0000000000407cfc : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000405da1 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040260c : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000413728 : add byte ptr [rbx], dl ; add byte ptr [rax], al ; adc byte ptr [rbp - 1], dl ; jmp qword ptr [rax]
0x00000000004030e7 : add byte ptr [rcx + 0x21ca31c2], cl ; ret 0xfa81
0x0000000000403fb5 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x000000000040f3da : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x0000000000406b3a : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000402355 : add byte ptr [rcx + rax], ah ; movzx eax, al ; pop rbp ; ret
0x0000000000403f90 : add byte ptr [rcx - 0x77], al ; ret 0x8141
0x00000000004115e5 : add byte ptr [rcx - 0xdf43], al ; call qword ptr [rax]
0x000000000040ec7c : add byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x0000000000401a28 : add byte ptr [rcx], al ; ret
0x0000000000403116 : add byte ptr [rcx], cl ; ret 0x458b
0x00000000004136a8 : add byte ptr [rcx], dl ; add byte ptr [rax], al ; and byte ptr [rbp - 1], cl ; jmp qword ptr [rax]
0x0000000000408fb8 : add byte ptr [rdi], cl ; lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x000000000040770a : add byte ptr [rdi], cl ; mov bh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403470 : add byte ptr [rdi], cl ; pushfq ; ret 0x5588
0x000000000040394b : add byte ptr [rdi], cl ; pushfq ; ret 0x9588
0x00000000004057b0 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x00000000004035a9 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x0000000000403cd0 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x0000000000406a20 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004135e8 : add byte ptr [rsi], cl ; add byte ptr [rax], al ; cmp byte ptr [rsi], -1 ; jmp qword ptr [rax]
0x0000000000402c3c : add cl, byte ptr [rax - 0x77] ; ret 0x148
0x0000000000408fbe : add cl, ch ; ret 2
0x000000000040df45 : add dh, ch ; call 0x4932e09c
0x0000000000408339 : add dword ptr [rax - 0x77], ecx ; ret 0x8148
0x00000000004060cf : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407cfa : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000405d9f : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040260a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004030e5 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x21ca31c2], cl ; ret 0xfa81
0x0000000000403f8e : add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], al ; ret 0x8141
0x00000000004117d2 : add dword ptr [rax], eax ; add byte ptr [rcx - 0xdf43], al ; call qword ptr [rax]
0x000000000040eb3d : add dword ptr [rax], ecx ; ret 0x840
0x000000000040270b : add dword ptr [rdi], ecx ; mov dh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406f40 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402357 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401a24 : add eax, 0x2138ee ; add ebx, esi ; ret
0x0000000000407211 : add eax, 0x48000000 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040a4f0 : add eax, 0x8301148b ; ret 0x89ee
0x0000000000408fbb : add eax, 0xe9000000 ; ret 2
0x00000000004019eb : add eax, edx ; sar rax, 1 ; jne 0x4019fc ; pop rbp ; ret
0x0000000000401a29 : add ebx, esi ; ret
0x0000000000402ec1 : add ecx, ebp ; ret 4
0x0000000000401b9b : add esp, 0x10 ; pop rbp ; ret
0x0000000000402607 : add esp, 0x108 ; pop rbx ; pop rbp ; ret
0x00000000004092ec : add esp, 0x130 ; pop rbp ; ret
0x0000000000403392 : add esp, 0x158 ; pop rbx ; pop rbp ; ret
0x00000000004028bf : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000408acc : add esp, 0x1b0 ; pop rbp ; ret
0x00000000004100d4 : add esp, 0x1b8 ; pop rbp ; ret
0x0000000000411ee1 : add esp, 0x1c0 ; pop rbp ; ret
0x000000000040f2ee : add esp, 0x1e0 ; pop rbp ; ret
0x0000000000402b64 : add esp, 0x20 ; pop rbp ; ret
0x0000000000401cad : add esp, 0x30 ; pop rbp ; ret
0x000000000040233c : add esp, 0x50 ; pop rbp ; ret
0x0000000000407152 : add esp, 0x60 ; pop rbp ; ret
0x00000000004049c3 : add esp, 0x70 ; pop rbp ; ret
0x0000000000408713 : add esp, 0x820 ; pop rbp ; ret
0x00000000004063fa : add esp, 0x90 ; pop rbp ; ret
0x0000000000403e50 : add esp, 0xa0 ; pop rbp ; ret
0x0000000000403d69 : add esp, 0xe0 ; pop rbp ; ret
0x0000000000409a38 : add esp, 0xf0 ; pop rbp ; ret
0x0000000000401506 : add esp, 8 ; ret
0x0000000000402096 : add r8b, bpl ; ret
0x00000000004019ea : add rax, rdx ; sar rax, 1 ; jne 0x4019fd ; pop rbp ; ret
0x0000000000401b9a : add rsp, 0x10 ; pop rbp ; ret
0x0000000000402606 : add rsp, 0x108 ; pop rbx ; pop rbp ; ret
0x00000000004092eb : add rsp, 0x130 ; pop rbp ; ret
0x0000000000403391 : add rsp, 0x158 ; pop rbx ; pop rbp ; ret
0x00000000004028be : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000408acb : add rsp, 0x1b0 ; pop rbp ; ret
0x00000000004100d3 : add rsp, 0x1b8 ; pop rbp ; ret
0x0000000000411ee0 : add rsp, 0x1c0 ; pop rbp ; ret
0x000000000040f2ed : add rsp, 0x1e0 ; pop rbp ; ret
0x0000000000402b63 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000401cac : add rsp, 0x30 ; pop rbp ; ret
0x000000000040233b : add rsp, 0x50 ; pop rbp ; ret
0x0000000000407151 : add rsp, 0x60 ; pop rbp ; ret
0x00000000004049c2 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000408712 : add rsp, 0x820 ; pop rbp ; ret
0x00000000004063f9 : add rsp, 0x90 ; pop rbp ; ret
0x0000000000403e4f : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000403d68 : add rsp, 0xe0 ; pop rbp ; ret
0x0000000000409a37 : add rsp, 0xf0 ; pop rbp ; ret
0x0000000000401505 : add rsp, 8 ; ret
0x0000000000402356 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000413e49 : and bh, bh ; jmp rdx
0x0000000000408715 : and byte ptr [rax], cl ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004136ac : and byte ptr [rbp - 1], cl ; jmp qword ptr [rax]
0x0000000000401a27 : and dword ptr [rax], eax ; add ebx, esi ; ret
0x00000000004028df : and eax, 0x615320 ; pop rbp ; ret
0x0000000000402903 : and eax, 0x615328 ; pop rbp ; ret
0x0000000000404274 : and eax, 0xffffff35 ; jmp qword ptr [rcx]
0x0000000000409d7e : and edx, eax ; or r8d, edx ; mov dword ptr [rdi], r8d ; pop rbp ; ret
0x000000000041012d : call 0x2103827d
0x00000000004054ae : call 0x4016d2
0x0000000000411c0c : call 0x4852a75f
0x0000000000411c0b : call 0x4852a760
0x0000000000402b3f : call 0x4902b48f
0x0000000000402b3e : call 0x4902b490
0x000000000040df47 : call 0x4932e09a
0x0000000000405dd9 : call 0xffffffffe902e729
0x0000000000405dd8 : call 0xffffffffe902e72a
0x0000000000402fd8 : call 0xfffffffff1c1ef96
0x0000000000406ce9 : call 0xffffffffff40ae1d
0x0000000000411f39 : call qword ptr [r12 + rbx*8]
0x00000000004114f4 : call qword ptr [rax]
0x00000000004118a4 : call qword ptr [rbx]
0x00000000004117cb : call qword ptr [rcx]
0x000000000041185c : call qword ptr [rdx]
0x000000000041180c : call qword ptr [rsi]
0x0000000000411f3a : call qword ptr [rsp + rbx*8]
0x000000000040306d : call r10
0x0000000000401a4d : call rax
0x0000000000405b2c : call rbx
0x00000000004139a3 : call rcx
0x0000000000413da3 : call rdi
0x000000000040306e : call rdx
0x0000000000407580 : clc ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004092ea : clc ; add rsp, 0x130 ; pop rbp ; ret
0x000000000040822f : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402c7a : clc ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004095f7 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000403e4e : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x0000000000403d67 : clc ; add rsp, 0xe0 ; pop rbp ; ret
0x00000000004085c8 : clc ; idiv edi ; call rax
0x00000000004019ef : clc ; jne 0x4019f8 ; pop rbp ; ret
0x0000000000404875 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000406a4b : clc ; mov dword ptr [rdi], 0 ; pop rbp ; ret
0x000000000040ecff : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402377 : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040e739 : clc ; mov rsp, rbp ; pop rbp ; ret
0x000000000040236c : clc ; pop rbp ; ret
0x0000000000401bc7 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004100d2 : cld ; add rsp, 0x1b8 ; pop rbp ; ret
0x0000000000411edf : cld ; add rsp, 0x1c0 ; pop rbp ; ret
0x000000000040889b : cld ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004087da : cld ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000407150 : cld ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000408711 : cld ; add rsp, 0x820 ; pop rbp ; ret
0x000000000040ecfc : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000409be3 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000409a9b : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004087d7 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403d86 : cld ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000403d89 : cld ; pop rbp ; ret
0x00000000004115e2 : cli ; add al, byte ptr [rax] ; add byte ptr [rcx - 0xdf43], al ; call qword ptr [rax]
0x00000000004072ec : cmp al, -0x36 ; mov rdx, qword ptr [rbp - 0x20] ; call rax
0x0000000000402092 : cmp al, 0x25 ; cmp byte ptr [rbx], ah ; add r8b, bpl ; ret
0x0000000000401bda : cmp al, 0x25 ; ret
0x0000000000402094 : cmp byte ptr [rbx], ah ; add r8b, bpl ; ret
0x00000000004105d0 : cmp byte ptr [rcx - 0x77], al ; ret 0x8141
0x0000000000401a26 : cmp byte ptr [rcx], ah ; add byte ptr [rcx], al ; ret
0x00000000004105c4 : cmp byte ptr [rcx], ah ; ret 0x8941
0x00000000004135ec : cmp byte ptr [rsi], -1 ; jmp qword ptr [rax]
0x000000000041188a : cmp dword ptr [rcx - 0xf], eax ; jmp qword ptr [rcx]
0x000000000040f1d9 : cmp dword ptr [rdx - 0x76be63d5], ebx ; ret
0x00000000004019ad : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4019c0 ; pop rbp ; ret
0x000000000040b721 : cmp edi, dword ptr [rdx + 0x5a5335da] ; ret
0x00000000004135dd : cmp edi, edi ; jmp rax
0x000000000040783c : cwde ; mov rcx, qword ptr [rax*8 + 0x412d60] ; jmp rcx
0x00000000004114e9 : cwde ; xor al, byte ptr [rcx] ; jmp rcx
0x000000000040a51a : cwde ; xor dword ptr [rcx], eax ; jmp rcx
0x000000000040b71e : dec dword ptr [rax - 0x46] ; cmp edi, dword ptr [rdx + 0x5a5335da] ; ret
0x00000000004114e4 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; cwde ; xor al, byte ptr [rcx] ; jmp rcx
0x000000000040a515 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; cwde ; xor dword ptr [rcx], eax ; jmp rcx
0x000000000041127b : dec dword ptr [rax - 0x75] ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 1
0x0000000000402368 : dec dword ptr [rax - 0x77] ; jge 0x40236b ; pop rbp ; ret
0x0000000000409024 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x000000000040b31f : dec dword ptr [rax - 0x77] ; ret 0x8148
0x000000000040308d : dec dword ptr [rcx + 0x21ca31c2] ; ret 0x8a44
0x000000000041122b : dec dword ptr [rcx + 0x31c621d6] ; ret 0xd609
0x0000000000405532 : dec dword ptr [rcx - 0x77] ; ret 0x294d
0x0000000000404251 : dec dword ptr [rcx] ; ret 0xf709
0x000000000040b72e : enter -0x46b8, 0x3b ; mov edx, 0x5a5335da ; ret
0x0000000000409d5c : enter 0x4193, -0x77 ; ret 0x8141
0x00000000004058c0 : enter 0x4b05, 0x34 ; fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x000000000040445a : fiadd dword ptr [rcx - 0xf] ; jmp qword ptr [rcx]
0x00000000004058c4 : fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x00000000004026c5 : fmul dword ptr [rax - 0x77] ; ret 0xb0
0x000000000041127f : fmul dword ptr [rax - 0x7f] ; ret 1
0x000000000040427e : fmul dword ptr [rcx + 0x31c621d6] ; ret 0xd609
0x0000000000411f3c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000410b83 : fsubr st(1) ; ret 0xffff
0x0000000000401b99 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004019c0 : hlt ; pop rbp ; mov edi, 0x6152b8 ; jmp rax
0x0000000000406a96 : hlt ; pop rbp ; ret
0x00000000004085c9 : idiv edi ; call rax
0x0000000000413c01 : idiv esi ; call rcx
0x0000000000402c38 : imul eax, dword ptr [rax - 0x77], 0x7a ; add cl, byte ptr [rax - 0x77] ; ret 0x148
0x000000000040405a : in al, 0x21 ; ret 0xd709
0x0000000000413d9c : in al, 4 ; add byte ptr [rax], al ; xor byte ptr [rdi + rdi*8], cl ; call rdi
0x000000000040e73c : in al, dx ; pop rbp ; ret
0x0000000000401bd6 : in al, dx ; xor byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x0000000000402353 : in eax, -0x50 ; add byte ptr [rcx + rax], ah ; movzx eax, al ; pop rbp ; ret
0x0000000000403d83 : in eax, -0x77 ; jge 0x403d8b ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000407463 : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x0000000000406b36 : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000413527 : inc dword ptr [rax] ; or eax, dword ptr [rax] ; add byte ptr [rax], dl ; xor edi, edi ; jmp qword ptr [rax]
0x0000000000403f59 : inc dword ptr [rcx - 0x77] ; ret 0x8141
0x0000000000405b4b : inc dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000413557 : inc eax ; or eax, dword ptr [rax] ; add byte ptr [rax], al ; xor edi, edi ; jmp rax
0x0000000000407e65 : int 0x80
0x0000000000403fc9 : int1 ; xchg eax, edx ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], al ; ret 0x3145
0x00000000004019b3 : ja 0x4019ba ; pop rbp ; ret
0x0000000000404272 : jbe 0x4042ac ; and eax, 0xffffff35 ; jmp qword ptr [rcx]
0x00000000004019bf : je 0x4019bd ; pop rbp ; mov edi, 0x6152b8 ; jmp rax
0x000000000040236b : jge 0x402368 ; pop rbp ; ret
0x0000000000402376 : jge 0x402377 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000403d85 : jge 0x403d89 ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000404058 : jge 0x40400d ; in al, 0x21 ; ret 0xd709
0x0000000000406a4a : jge 0x406a4d ; mov dword ptr [rdi], 0 ; pop rbp ; ret
0x0000000000407466 : jge 0x407463 ; pop rbp ; ret
0x000000000040376c : jl 0x403791 ; ret 0xd709
0x000000000040376b : jl 0x403792 ; ret 0xd709
0x000000000040376a : jl 0x403793 ; ret 0xd709
0x000000000040f318 : jmp 0x327426
0x000000000040157b : jmp 0x401517
0x0000000000404ada : jmp 0x404ae8
0x0000000000406a05 : jmp 0x406a37
0x000000000040f7d4 : jmp 0x40f819
0x0000000000406dd1 : jmp 0xffffffff8a02f6de
0x000000000040c074 : jmp 0xffffffff8a03498c
0x0000000000408338 : jmp 0xffffffffc2c9cb42
0x000000000041352f : jmp qword ptr [rax]
0x00000000004022a1 : jmp qword ptr [rcx]
0x0000000000413a43 : jmp qword ptr [rdi]
0x0000000000413e8b : jmp qword ptr [rdx]
0x00000000004019c7 : jmp rax
0x0000000000403a83 : jmp rcx
0x0000000000401a07 : jmp rdx
0x00000000004019f0 : jne 0x4019f7 ; pop rbp ; ret
0x000000000040946b : jne 0x40943b ; mov rdx, qword ptr [rbp - 0x28] ; call rax
0x0000000000403b08 : jno 0x403b2d ; ret 0xd709
0x0000000000401501 : jnp 0x40150d ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004049c5 : jo 0x404a26 ; ret
0x0000000000405fef : jo 0x406055 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406694 : jo 0x4066f5 ; ret
0x00000000004067ce : jo 0x40682f ; ret
0x0000000000408fba : lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000403b07 : lea esi, dword ptr [rcx + 0x21] ; ret 0xd709
0x0000000000404057 : lodsd eax, dword ptr [rsi] ; jge 0x40400e ; in al, 0x21 ; ret 0xd709
0x0000000000413961 : loop 0x413963 ; jmp rdx
0x0000000000409d59 : loope 0x409db4 ; enter 0x4193, -0x77 ; ret 0x8141
0x0000000000403d6b : loopne 0x403d72 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004077ce : loopne 0x40778a ; ret
0x000000000040ee06 : loopne 0x40ee67 ; ret
0x000000000040ee05 : loopne 0x40ee68 ; ret
0x000000000040f2f0 : loopne 0x40f2f8 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000404171 : mov ah, -0x75 ; ror byte ptr [r9 + 0x21ca31c2], 1 ; ret 0x458b
0x000000000041379d : mov ah, -1 ; jmp rax
0x0000000000402354 : mov al, 0 ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040656b : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004063f8 : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000408ace : mov al, 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000402666 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040741f : mov al, byte ptr [rbp - 9] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040770c : mov bh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004137ed : mov bh, -1 ; jmp qword ptr [rax]
0x0000000000402901 : mov byte ptr [0x615328], al ; pop rbp ; ret
0x0000000000401a23 : mov byte ptr [rip + 0x2138ee], 1 ; ret
0x00000000004137ad : mov ch, -1 ; jmp qword ptr [rax]
0x000000000040b25c : mov cl, -0x32 ; ret
0x0000000000403b06 : mov cl, -0x73 ; jno 0x403b2f ; ret 0xd709
0x000000000040270d : mov dh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406f42 : mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402359 : mov dh, -0x40 ; pop rbp ; ret
0x00000000004137dd : mov dh, -1 ; jmp rax
0x00000000004028dd : mov dword ptr [0x615320], edi ; pop rbp ; ret
0x0000000000404876 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000404838 : mov dword ptr [rax], eax ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004046f4 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000404837 : mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000403067 : mov dword ptr [rbp - 0x12c], edx ; call r10
0x000000000040eecc : mov dword ptr [rbp - 0x18], eax ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000401ca9 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401b97 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401bc5 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403d84 : mov dword ptr [rbp - 4], edi ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040f428 : mov dword ptr [rbp - 4], edx ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040ecfd : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402375 : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040236a : mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x00000000004048ee : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404493 : mov dword ptr [rcx], eax ; mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x0000000000406a4c : mov dword ptr [rdi], 0 ; pop rbp ; ret
0x0000000000409d84 : mov dword ptr [rdi], eax ; pop rbp ; ret
0x0000000000409d83 : mov dword ptr [rdi], r8d ; pop rbp ; ret
0x00000000004100d6 : mov eax, 0x5d000001 ; ret
0x00000000004046a8 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000402a3d : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402dd3 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004046a5 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000402d2f : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000402b60 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040465d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004046ee : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040eed0 : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040ee04 : mov eax, dword ptr [rbp - 0x20] ; pop rbp ; ret
0x0000000000404495 : mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x0000000000406db2 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040483a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000402338 : mov eax, dword ptr [rbp - 0x2c] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004049bf : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000406569 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000406a94 : mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000409be4 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408899 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004087d8 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040714e : mov eax, dword ptr [rbp - 4] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000403d87 : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040822d : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402c78 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004095f5 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040e737 : mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000402379 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040744c : mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040757f : mov eax, edi ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004076db : mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040262f : mov eax, esi ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004074f3 : mov eax, esi ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401a4b : mov ebp, esp ; call rax
0x00000000004019b1 : mov ebp, esp ; ja 0x4019bc ; pop rbp ; ret
0x0000000000403d82 : mov ebp, esp ; mov dword ptr [rbp - 4], edi ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000407462 : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000040b730 : mov ecx, 0x35daba3b ; push rbx ; pop rdx ; ret
0x0000000000407e7d : mov ecx, 0x5b2a830a ; ret
0x0000000000403a7c : mov ecx, dword ptr [rax*8 + 0x412660] ; jmp rcx
0x0000000000404a82 : mov ecx, dword ptr [rax*8 + 0x4126e0] ; jmp rcx
0x0000000000404da6 : mov ecx, dword ptr [rax*8 + 0x412728] ; jmp rcx
0x0000000000406ce6 : mov ecx, dword ptr [rax*8 + 0x412be8] ; jmp rcx
0x0000000000406f81 : mov ecx, dword ptr [rax*8 + 0x412c10] ; jmp rcx
0x000000000040718a : mov ecx, dword ptr [rax*8 + 0x412c38] ; jmp rcx
0x000000000040783e : mov ecx, dword ptr [rax*8 + 0x412d60] ; jmp rcx
0x000000000040c516 : mov ecx, dword ptr [rax*8 + 0x413110] ; jmp rcx
0x000000000040a517 : mov ecx, dword ptr [rax*8 + 0x413198] ; jmp rcx
0x000000000040f487 : mov ecx, dword ptr [rax*8 + 0x4131c0] ; jmp rcx
0x00000000004114e6 : mov ecx, dword ptr [rax*8 + 0x413298] ; jmp rcx
0x00000000004046f1 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000404490 : mov ecx, dword ptr [rbp - 0x20] ; mov dword ptr [rcx], eax ; mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x0000000000401a45 : mov edi, 0x614e20 ; mov rbp, rsp ; call rax
0x00000000004019c2 : mov edi, 0x6152b8 ; jmp rax
0x0000000000401a02 : mov edi, 0x6152b8 ; jmp rdx
0x00000000004072eb : mov edi, dword ptr [rdx + rcx*8] ; mov rdx, qword ptr [rbp - 0x20] ; call rax
0x00000000004054ac : mov edi, eax ; call 0x4016d4
0x0000000000411f37 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000411f36 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000040b720 : mov edx, 0x35daba3b ; push rbx ; pop rdx ; ret
0x000000000040b722 : mov edx, 0x5a5335da ; ret
0x00000000004072ef : mov edx, dword ptr [rbp - 0x20] ; call rax
0x000000000040946e : mov edx, dword ptr [rbp - 0x28] ; call rax
0x000000000040946a : mov esi, dword ptr [rbp - 0x38] ; mov rdx, qword ptr [rbp - 0x28] ; call rax
0x0000000000401a00 : mov esi, eax ; mov edi, 0x6152b8 ; jmp rdx
0x0000000000403b6a : mov esp, 0x218264b0 ; ret 0xd709
0x000000000040e73b : mov esp, ebp ; pop rbp ; ret
0x00000000004028dc : mov qword ptr [0x615320], rdi ; pop rbp ; ret
0x000000000040eecb : mov qword ptr [rbp - 0x18], rax ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000402374 : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402369 : mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x00000000004048ed : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040656a : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000402a3c : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402dd2 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004046a4 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000402d2e : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000402b5f : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040465c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040eecf : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040ee03 : mov rax, qword ptr [rbp - 0x20] ; pop rbp ; ret
0x00000000004049be : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000406568 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040822c : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402c77 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004095f4 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040e736 : mov rax, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000402378 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000401a4a : mov rbp, rsp ; call rax
0x00000000004019b0 : mov rbp, rsp ; ja 0x4019bd ; pop rbp ; ret
0x0000000000407461 : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000403a7b : mov rcx, qword ptr [rax*8 + 0x412660] ; jmp rcx
0x0000000000404a81 : mov rcx, qword ptr [rax*8 + 0x4126e0] ; jmp rcx
0x0000000000404da5 : mov rcx, qword ptr [rax*8 + 0x412728] ; jmp rcx
0x0000000000406ce5 : mov rcx, qword ptr [rax*8 + 0x412be8] ; jmp rcx
0x0000000000406f80 : mov rcx, qword ptr [rax*8 + 0x412c10] ; jmp rcx
0x0000000000407189 : mov rcx, qword ptr [rax*8 + 0x412c38] ; jmp rcx
0x000000000040783d : mov rcx, qword ptr [rax*8 + 0x412d60] ; jmp rcx
0x000000000040c515 : mov rcx, qword ptr [rax*8 + 0x413110] ; jmp rcx
0x000000000040a516 : mov rcx, qword ptr [rax*8 + 0x413198] ; jmp rcx
0x000000000040f486 : mov rcx, qword ptr [rax*8 + 0x4131c0] ; jmp rcx
0x00000000004114e5 : mov rcx, qword ptr [rax*8 + 0x413298] ; jmp rcx
0x00000000004072ea : mov rdi, qword ptr [rdx + rcx*8] ; mov rdx, qword ptr [rbp - 0x20] ; call rax
0x00000000004054ab : mov rdi, rax ; call 0x4016d5
0x00000000004072ee : mov rdx, qword ptr [rbp - 0x20] ; call rax
0x000000000040946d : mov rdx, qword ptr [rbp - 0x28] ; call rax
0x0000000000409469 : mov rsi, qword ptr [rbp - 0x38] ; mov rdx, qword ptr [rbp - 0x28] ; call rax
0x00000000004019ff : mov rsi, rax ; mov edi, 0x6152b8 ; jmp rdx
0x000000000040e73a : mov rsp, rbp ; pop rbp ; ret
0x000000000040e7da : movsx eax, cl ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406f41 : movzx eax, al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402358 : movzx eax, al ; pop rbp ; ret
0x000000000040270c : movzx eax, cl ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040770b : movzx eax, cx ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407420 : mul dword ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x0000000000407421 : mul dword ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x0000000000414c00 : nop ; sar edi, cl ; call qword ptr [rax]
0x0000000000411f58 : nop dword ptr [rax + rax] ; ret
0x000000000040510d : or al, 0x18 ; ret 0x6451
0x0000000000406ce7 : or al, 0xffffffffffffffc5 ; call 0xffffffffff40ae1f
0x00000000004114e7 : or al, 0xffffffffffffffc5 ; cwde ; xor al, byte ptr [rcx] ; jmp rcx
0x000000000040a518 : or al, 0xffffffffffffffc5 ; cwde ; xor dword ptr [rcx], eax ; jmp rcx
0x0000000000413da1 : or al, 0xffffffffffffffff ; call rdi
0x0000000000406078 : or al, ch ; ret 0xffb4
0x00000000004140c5 : or byte ptr [rax], al ; add byte ptr [rax], bh ; sub bh, bh ; jmp qword ptr [rdx]
0x00000000004035a3 : or byte ptr [rcx + 0x2df9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x0000000000403cca : or byte ptr [rcx + 0x2df9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x000000000040346a : or byte ptr [rcx + 0x38f9], al ; add byte ptr [rdi], cl ; pushfq ; ret 0x5588
0x0000000000403945 : or byte ptr [rcx + 0x38f9], al ; add byte ptr [rdi], cl ; pushfq ; ret 0x9588
0x0000000000402609 : or byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000406751 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000413559 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; xor edi, edi ; jmp rax
0x0000000000413529 : or eax, dword ptr [rax] ; add byte ptr [rax], dl ; xor edi, edi ; jmp qword ptr [rax]
0x0000000000409d81 : or eax, edx ; mov dword ptr [rdi], r8d ; pop rbp ; ret
0x0000000000409d80 : or r8d, edx ; mov dword ptr [rdi], r8d ; pop rbp ; ret
0x00000000004139a1 : out -2, eax ; call rcx
0x000000000040df46 : out dx, al ; call 0x4932e09b
0x0000000000401a25 : out dx, al ; cmp byte ptr [rcx], ah ; add byte ptr [rcx], al ; ret
0x0000000000411f4c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405ff1 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000411f4e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405ff3 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000411f50 : pop r14 ; pop r15 ; ret
0x0000000000405da3 : pop r14 ; pop rbp ; ret
0x0000000000405ff5 : pop r15 ; pop rbp ; ret
0x0000000000411f52 : pop r15 ; ret
0x0000000000403394 : pop rax ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000401a22 : pop rbp ; mov byte ptr [rip + 0x2138ee], 1 ; ret
0x00000000004019c1 : pop rbp ; mov edi, 0x6152b8 ; jmp rax
0x00000000004019fe : pop rbp ; mov rsi, rax ; mov edi, 0x6152b8 ; jmp rdx
0x0000000000411f4b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000411f4f : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004019b5 : pop rbp ; ret
0x0000000000405ff0 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000407cfd : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405da2 : pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040260d : pop rbx ; pop rbp ; ret
0x0000000000407e81 : pop rbx ; ret
0x0000000000405ff6 : pop rdi ; pop rbp ; ret
0x0000000000411f53 : pop rdi ; ret
0x000000000040b726 : pop rdx ; ret
0x0000000000405ff4 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000411f51 : pop rsi ; pop r15 ; ret
0x0000000000405da4 : pop rsi ; pop rbp ; ret
0x0000000000411f4d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405ff2 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004054a7 : push 0x48ffffff ; mov edi, eax ; call 0x4016d9
0x000000000041379c : push rax ; mov ah, -1 ; jmp rax
0x000000000040233e : push rax ; pop rbp ; ret
0x000000000041356c : push rax ; xor edi, edi ; jmp qword ptr [rax]
0x000000000041012c : push rbp ; call 0x2103827e
0x000000000040f429 : push rbp ; cld ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000041127e : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 1
0x000000000040427d : push rbp ; fmul dword ptr [rcx + 0x31c621d6] ; ret 0xd609
0x0000000000401a44 : push rbp ; mov edi, 0x614e20 ; mov rbp, rsp ; call rax
0x0000000000407460 : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000040b725 : push rbx ; pop rdx ; ret
0x0000000000409d5a : push rdx ; enter 0x4193, -0x77 ; ret 0x8141
0x00000000004105cf : push rsp ; cmp byte ptr [rcx - 0x77], al ; ret 0x8141
0x00000000004105c3 : push rsp ; cmp byte ptr [rcx], ah ; ret 0x8941
0x0000000000403472 : pushfq ; ret 0x5588
0x000000000040394d : pushfq ; ret 0x9588
0x0000000000413798 : rcl byte ptr [rax + rax], 0 ; push rax ; mov ah, -1 ; jmp rax
0x00000000004137d8 : rcl byte ptr [rip - 0x49600000], -1 ; jmp rax
0x0000000000401509 : ret
0x00000000004091f2 : ret 0
0x000000000040fa31 : ret 0x10
0x00000000004038f4 : ret 0x141
0x0000000000402c3f : ret 0x148
0x0000000000409dc2 : ret 0x18e8
0x000000000040618e : ret 0x1b2
0x000000000040f748 : ret 0x1fe4
0x0000000000410130 : ret 0x20
0x0000000000401782 : ret 0x2139
0x0000000000401582 : ret 0x213a
0x0000000000408a65 : ret 0x26a8
0x0000000000402b42 : ret 0x2948
0x0000000000405519 : ret 0x294c
0x0000000000405535 : ret 0x294d
0x0000000000403fd0 : ret 0x3145
0x000000000040f7d3 : ret 0x3eeb
0x0000000000404ae3 : ret 0x412b
0x0000000000406dd4 : ret 0x4589
0x0000000000403118 : ret 0x458b
0x000000000040c04d : ret 0x4de8
0x000000000040fcc7 : ret 0x54c8
0x0000000000403473 : ret 0x5588
0x000000000040416b : ret 0x5589
0x000000000040f4bb : ret 0x5ef2
0x000000000040510f : ret 0x6451
0x000000000040fc24 : ret 0x651d
0x000000000040f86c : ret 0x744a
0x000000000040f3de : ret 0x8041
0x0000000000403f5c : ret 0x8141
0x000000000040833c : ret 0x8148
0x000000000040fe8a : ret 0x8334
0x000000000040eb3f : ret 0x840
0x0000000000406b3e : ret 0x8445
0x000000000040c077 : ret 0x8589
0x00000000004057b3 : ret 0x8840
0x00000000004077f9 : ret 0x8844
0x0000000000404323 : ret 0x8941
0x0000000000403bcf : ret 0x8948
0x0000000000405538 : ret 0x8949
0x00000000004056cc : ret 0x89a5
0x000000000040a4f5 : ret 0x89ee
0x0000000000403093 : ret 0x8a44
0x000000000040551c : ret 0x8b48
0x0000000000410334 : ret 0x9303
0x00000000004040da : ret 0x941
0x000000000040394e : ret 0x9588
0x0000000000401ede : ret 0xb0
0x00000000004091f9 : ret 0xb849
0x0000000000403ebc : ret 0xbe01
0x000000000040fdfd : ret 0xc0c2
0x00000000004019e5 : ret 0xc148
0x0000000000408f60 : ret 0xc2f6
0x000000000040fe0a : ret 0xc4c0
0x00000000004030b8 : ret 0xc981
0x0000000000410034 : ret 0xc996
0x00000000004031a8 : ret 0xca21
0x00000000004112f1 : ret 0xca29
0x000000000040308f : ret 0xca31
0x000000000040554d : ret 0xcde8
0x0000000000406a23 : ret 0xd284
0x000000000040417f : ret 0xd2f7
0x0000000000404284 : ret 0xd609
0x000000000040376e : ret 0xd709
0x00000000004022a3 : ret 0xd789
0x0000000000410790 : ret 0xd83a
0x000000000040fa2b : ret 0xddeb
0x000000000040bfba : ret 0xe0e8
0x000000000040310b : ret 0xe281
0x000000000040b670 : ret 0xea81
0x0000000000405ddc : ret 0xee8
0x00000000004057c8 : ret 0xf180
0x0000000000408f53 : ret 0xf280
0x0000000000402421 : ret 0xf281
0x0000000000404253 : ret 0xf709
0x00000000004030ed : ret 0xfa81
0x000000000040607a : ret 0xffb4
0x00000000004054b0 : ret 0xffff
0x0000000000402bdb : ret 1
0x0000000000408fc0 : ret 2
0x0000000000402ec3 : ret 4
0x0000000000408a5f : ret 8
0x000000000040254b : rol byte ptr [rbp + 0xf], 0x44 ; ret
0x0000000000409d82 : rol byte ptr [rcx + rcx*4 + 7], 1 ; pop rbp ; ret
0x0000000000404836 : rol byte ptr [rcx + rcx*4], 1 ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000406c4c : rol byte ptr [rcx - 0xf], cl ; jmp qword ptr [rcx]
0x0000000000403769 : rol dword ptr [rdi + 0x4f], 1 ; jl 0x403794 ; ret 0xd709
0x0000000000407e60 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x00000000004049c0 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x404a2b ; ret
0x0000000000404173 : ror byte ptr [r9 + 0x21ca31c2], 1 ; ret 0x458b
0x00000000004019ec : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4019fb ; pop rbp ; ret
0x0000000000407e61 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x000000000040550d : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000405516 : ror byte ptr [rax - 0x77], 1 ; ret 0x294c
0x00000000004049c1 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x404a2a ; ret
0x0000000000413558 : ror byte ptr [rbx], 0 ; add byte ptr [rax], al ; xor edi, edi ; jmp rax
0x0000000000404174 : ror byte ptr [rcx + 0x21ca31c2], 1 ; ret 0x458b
0x00000000004135d8 : ror byte ptr [rip + 0x3bb00000], -1 ; jmp rax
0x0000000000403b05 : sahf ; mov cl, -0x73 ; jno 0x403b30 ; ret 0xd709
0x0000000000406c4b : sahf ; rol byte ptr [rcx - 0xf], cl ; jmp qword ptr [rcx]
0x0000000000404271 : salc ; jbe 0x4042ad ; and eax, 0xffffff35 ; jmp qword ptr [rcx]
0x00000000004019ee : sar eax, 1 ; jne 0x4019f9 ; pop rbp ; ret
0x0000000000414c01 : sar edi, cl ; call qword ptr [rax]
0x00000000004019ed : sar rax, 1 ; jne 0x4019fa ; pop rbp ; ret
0x000000000040fc19 : sbb eax, 0x81d55b65 ; ret 8
0x0000000000404059 : scasd eax, dword ptr [rdi] ; in al, 0x21 ; ret 0xd709
0x0000000000404181 : shl byte ptr [rcx], cl ; ret 0x5589
0x00000000004035a5 : stc ; sub eax, 0xf000000 ; xchg eax, esp ; ret 0x5588
0x0000000000403ccc : stc ; sub eax, 0xf000000 ; xchg eax, esp ; ret 0x9588
0x0000000000402668 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004140c9 : sub bh, bh ; jmp qword ptr [rdx]
0x0000000000414788 : sub byte ptr [rbx - 1], dl ; jmp rax
0x0000000000407e7f : sub dword ptr [rdx], 0x5b ; ret
0x00000000004035a6 : sub eax, 0xf000000 ; xchg eax, esp ; ret 0x5588
0x0000000000403ccd : sub eax, 0xf000000 ; xchg eax, esp ; ret 0x9588
0x0000000000406cea : sub eax, dword ptr [rcx] ; jmp rcx
0x0000000000411fb1 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000411fb0 : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000411f5a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004085c7 : test edi, eax ; idiv edi ; call rax
0x0000000000406c49 : xchg byte ptr [rsi + rbx*4], al ; rol byte ptr [rcx - 0xf], cl ; jmp qword ptr [rcx]
0x0000000000403fb8 : xchg eax, ebp ; ret
0x000000000040f3dd : xchg eax, ebp ; ret 0x8041
0x0000000000406b3d : xchg eax, ebp ; ret 0x8445
0x00000000004057b2 : xchg eax, ebp ; ret 0x8840
0x000000000040df44 : xchg eax, ebx ; add dh, ch ; call 0x4932e09d
0x0000000000403fca : xchg eax, edx ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], al ; ret 0x3145
0x00000000004035ab : xchg eax, esp ; ret 0x5588
0x0000000000403cd2 : xchg eax, esp ; ret 0x9588
0x0000000000406a22 : xchg eax, esp ; ret 0xd284
0x0000000000402c36 : xor al, 0x6a ; imul eax, dword ptr [rax - 0x77], 0x7a ; add cl, byte ptr [rax - 0x77] ; ret 0x148
0x00000000004114ea : xor al, byte ptr [rcx] ; jmp rcx
0x00000000004142e9 : xor bh, bh ; jmp qword ptr [rdi]
0x000000000041351d : xor bh, bh ; jmp rax
0x0000000000401bd7 : xor byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x000000000041369c : xor byte ptr [rbx - 1], cl ; jmp rax
0x000000000041361c : xor byte ptr [rcx - 1], al ; jmp rax
0x00000000004092ee : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000413da0 : xor byte ptr [rdi + rdi*8], cl ; call rdi
0x000000000040a51b : xor dword ptr [rcx], eax ; jmp rcx
0x0000000000404273 : xor dword ptr [rip - 0xcb], esp ; jmp qword ptr [rcx]
0x00000000004064e7 : xor eax, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x0000000000404835 : xor eax, edx ; mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000041352d : xor edi, edi ; jmp qword ptr [rax]
0x000000000041355d : xor edi, edi ; jmp rax
0x000000000040f426 : xor edx, eax ; mov dword ptr [rbp - 4], edx ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
