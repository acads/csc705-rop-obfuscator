0x0000000000422b19 : adc al, -2 ; jmp rdi
0x000000000041cb88 : adc al, 0x48 ; add esp, 0x10 ; pop rbp ; ret
0x0000000000414c39 : adc al, 1 ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004053a7 : adc al, ch ; ret
0x00000000004222b4 : adc byte ptr [rbp - 2], ch ; jmp rax
0x0000000000412800 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041cb6c : adc dh, dh ; ret 0xf01
0x000000000041f78f : adc dword ptr [rax - 0x42], ecx ; ret
0x0000000000423a65 : adc dword ptr [rax], eax ; add al, bh ; ret
0x000000000040a919 : adc dword ptr [rcx - 0xa], eax ; jmp qword ptr [rcx]
0x0000000000400289 : adc dword ptr [rcx], 0xe98cd16c ; ret
0x000000000040dcf6 : adc dword ptr [rdx], eax ; jmp rcx
0x000000000040a918 : adc dword ptr cs:[rcx - 0xa], eax ; jmp qword ptr [rcx]
0x000000000040f379 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042266d : adc edi, edi ; call rax
0x00000000004220f5 : adc edi, esi ; jmp rax
0x00000000004229f3 : add ah, ah ; add byte ptr [rax], al ; add byte ptr [rax], bh ; cli ; std ; jmp rdx
0x0000000000424a0b : add ah, bh ; and byte ptr [rax], al ; add byte ptr [rax], ah ; mov cl, -1 ; call qword ptr [rax]
0x00000000004249db : add ah, cl ; and byte ptr [rax], al ; add byte ptr [rax], dh ; mov cl, -1 ; call qword ptr [rax]
0x00000000004050fb : add al, -0x36 ; pop rbp ; ret
0x0000000000405874 : add al, -0x5c ; ret
0x0000000000404ce1 : add al, 0 ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000411d2d : add al, 0x21 ; ret 0xd709
0x000000000040850a : add al, 0x48 ; add eax, ecx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000422b14 : add al, 2 ; add byte ptr [rax], al ; call 0xffffffffe8422938
0x00000000004228ab : add al, ah ; fcos ; call rax
0x00000000004220b3 : add al, al ; add bh, dh ; jmp rax
0x00000000004224ab : add al, al ; fsin ; call rax
0x000000000042242b : add al, al ; sar dh, cl ; call rax
0x0000000000423a67 : add al, bh ; ret
0x0000000000422b15 : add al, byte ptr [rax] ; add al, ch ; adc al, -2 ; jmp rdi
0x000000000041f163 : add al, byte ptr [rax] ; add byte ptr [rcx - 0xdf43], al ; call qword ptr [rax]
0x0000000000422b17 : add al, ch ; adc al, -2 ; jmp rdi
0x0000000000407aee : add al, ch ; lodsb al, byte ptr [rsi] ; ret 0
0x0000000000403697 : add al, ch ; ret
0x0000000000403898 : add al, ch ; ret 0x2d
0x000000000041b458 : add al, ch ; ret 0xfe68
0x000000000042266b : add al, dl ; adc edi, edi ; call rax
0x00000000004225fb : add al, dl ; add edi, edi ; call qword ptr [rax]
0x00000000004224fb : add al, dl ; fdivp st(6) ; call qword ptr [rax]
0x00000000004220b5 : add bh, dh ; jmp rax
0x000000000041fadf : add bl, dh ; ret
0x0000000000409449 : add byte ptr [rax + 0x29], cl ; ret 0x8948
0x0000000000415af7 : add byte ptr [rax + 1], cl ; ret 0x4a3b
0x000000000040b218 : add byte ptr [rax + 1], cl ; ret 0x8948
0x00000000004066ce : add byte ptr [rax + 1], cl ; ret 0x8b48
0x000000000041ba94 : add byte ptr [rax + 1], cl ; ret 0xc148
0x000000000041f7a3 : add byte ptr [rax - 0x42], cl ; ret
0x000000000040bfb0 : add byte ptr [rax - 0x47], cl ; js 0x40c01c ; xchg eax, ebx ; xchg eax, ecx ; salc ; call rsi
0x0000000000407c4b : add byte ptr [rax - 0x75], cl ; call 0x490305a3
0x00000000004130c2 : add byte ptr [rax - 0x75], cl ; call 0x4903ba1a
0x000000000041cca6 : add byte ptr [rax - 0x75], cl ; call 0x490455fe
0x000000000041c265 : add byte ptr [rax - 0x75], cl ; clc ; mov rsp, rbp ; pop rbp ; ret
0x000000000040504f : add byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x000000000040881f : add byte ptr [rax - 0x75], cl ; fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x000000000041cda2 : add byte ptr [rax - 0x75], cl ; loopne 0x41ce0b ; ret
0x000000000041dca9 : add byte ptr [rax - 0x75], cl ; push rbp ; call 0x21045e01
0x0000000000410c1d : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000040c603 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; ret 0x2948
0x00000000004050f8 : add byte ptr [rax - 0x77], cl ; add al, -0x36 ; pop rbp ; ret
0x000000000041e6ff : add byte ptr [rax - 0x77], cl ; fsubr st(1) ; ret 0xffff
0x0000000000419ae7 : add byte ptr [rax - 0x77], cl ; ret 0x90e8
0x00000000004032f5 : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x0000000000419b7a : add byte ptr [rax - 0x77], cl ; ret 0xfde8
0x000000000042273c : add byte ptr [rax - 1], al ; call qword ptr [rax]
0x0000000000424a0f : add byte ptr [rax], ah ; mov cl, -1 ; call qword ptr [rax]
0x00000000004222b2 : add byte ptr [rax], al ; adc byte ptr [rbp - 2], ch ; jmp rax
0x0000000000422b12 : add byte ptr [rax], al ; add al, 2 ; add byte ptr [rax], al ; call 0xffffffffe842293a
0x0000000000403695 : add byte ptr [rax], al ; add al, ch ; ret
0x0000000000403896 : add byte ptr [rax], al ; add al, ch ; ret 0x2d
0x000000000041fadd : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000409447 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8948
0x0000000000415af5 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x4a3b
0x000000000040b216 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8948
0x00000000004066cc : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8b48
0x000000000041ba92 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0xc148
0x000000000041f7a1 : add byte ptr [rax], al ; add byte ptr [rax - 0x42], cl ; ret
0x0000000000407c49 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; call 0x490305a5
0x00000000004130c0 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; call 0x4903ba1c
0x000000000041cca4 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; call 0x49045600
0x000000000040504d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x000000000040881d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x000000000041cda0 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; loopne 0x41ce0d ; ret
0x000000000041dca7 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbp ; call 0x21045e03
0x000000000040c601 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; ret 0x2948
0x000000000041e6fd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fsubr st(1) ; ret 0xffff
0x00000000004032f3 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000042273a : add byte ptr [rax], al ; add byte ptr [rax - 1], al ; call qword ptr [rax]
0x0000000000403693 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret
0x0000000000403894 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret 0x2d
0x000000000041fadb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000403691 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret
0x0000000000403892 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret 0x2d
0x0000000000400bf2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000412518 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408ebd : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041ca61 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000411db9 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040bdab : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000041cd9f : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x20] ; pop rbp ; ret
0x000000000040504c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000400bf4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000042139c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x40e1
0x00000000004229f5 : add byte ptr [rax], al ; add byte ptr [rax], bh ; cli ; std ; jmp rdx
0x000000000040be8c : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], al ; ret
0x0000000000411d52 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000041cf58 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x0000000000405eaf : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8b4c
0x0000000000423a61 : add byte ptr [rax], al ; add byte ptr [rcx + rdx], dl ; add al, bh ; ret
0x000000000041286a : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ror dword ptr [rdi], -0x62 ; ret 0x9588
0x000000000040c798 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x5589
0x0000000000422272 : add byte ptr [rax], al ; add byte ptr [rdi - 2], ah ; jmp rax
0x000000000040c9d9 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000412ca5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8841
0x000000000041cab2 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040ae31 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000412db4 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x000000000041b9b8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x000000000040fc8e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041466c : add byte ptr [rax], al ; add cl, ch ; ret 2
0x00000000004225ea : add byte ptr [rax], al ; add edi, edi ; call rax
0x0000000000403edc : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040554f : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407f98 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401b13 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000423032 : add byte ptr [rax], al ; and al, 7 ; add byte ptr [rax], al ; mov byte ptr [rbp - 2], dl ; call rbx
0x00000000004226fb : add byte ptr [rax], al ; and bh, bh ; call qword ptr [rax]
0x0000000000422b16 : add byte ptr [rax], al ; call 0xffffffffe8422936
0x0000000000423a66 : add byte ptr [rax], al ; clc ; ret
0x0000000000424a0a : add byte ptr [rax], al ; cld ; and byte ptr [rax], al ; add byte ptr [rax], ah ; mov cl, -1 ; call qword ptr [rax]
0x00000000004229f6 : add byte ptr [rax], al ; cmp dl, bh ; std ; jmp rdx
0x000000000042247b : add byte ptr [rax], al ; fdivr st(6) ; call qword ptr [rax]
0x00000000004229f2 : add byte ptr [rax], al ; in al, 0 ; add byte ptr [rax], al ; cmp dl, bh ; std ; jmp rdx
0x0000000000401b69 : add byte ptr [rax], al ; jmp 0x401b29
0x0000000000423036 : add byte ptr [rax], al ; mov byte ptr [rbp - 2], dl ; call rbx
0x0000000000411dbb : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040d912 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040bdad : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000041cda1 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x20] ; pop rbp ; ret
0x000000000040504e : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004222f2 : add byte ptr [rax], al ; nop ; jnp 0x4222fa ; jmp rax
0x000000000042262a : add byte ptr [rax], al ; nop ; or bh, bh ; call rax
0x0000000000422102 : add byte ptr [rax], al ; nop ; sbb dh, bh ; jmp qword ptr [rax]
0x0000000000422342 : add byte ptr [rax], al ; nop ; test bh, dh ; jmp qword ptr [rax]
0x0000000000422e76 : add byte ptr [rax], al ; or byte ptr [rsi - 2], cl ; call qword ptr [rcx]
0x000000000042263a : add byte ptr [rax], al ; or byte ptr [rsi], 0xff ; call qword ptr [rax]
0x0000000000403e52 : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000405f98 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406568 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000404ce2 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000423a62 : add byte ptr [rax], al ; push rsp ; adc dword ptr [rax], eax ; add al, bh ; ret
0x000000000042242a : add byte ptr [rax], al ; rcl dl, -2 ; call rax
0x00000000004224aa : add byte ptr [rax], al ; rcr cl, -2 ; call rax
0x0000000000400bf6 : add byte ptr [rax], al ; ret
0x000000000042139e : add byte ptr [rax], al ; ret 0x40e1
0x00000000004220b2 : add byte ptr [rax], al ; rol byte ptr [rdx], -2 ; jmp rax
0x00000000004222c2 : add byte ptr [rax], al ; shr byte ptr [rdi - 2], 1 ; jmp qword ptr [rax]
0x0000000000422132 : add byte ptr [rax], al ; shr byte ptr [rsi], -2 ; jmp rax
0x00000000004227aa : add byte ptr [rax], al ; xor byte ptr [rax - 1], bl ; call rax
0x0000000000422232 : add byte ptr [rax], al ; xor byte ptr [rax - 2], ah ; jmp rax
0x000000000042277a : add byte ptr [rax], al ; xor byte ptr [rcx - 1], dl ; call qword ptr [rax]
0x00000000004221b2 : add byte ptr [rax], al ; xor byte ptr [rdi - 2], al ; jmp rax
0x000000000042257a : add byte ptr [rax], al ; xor cl, 0xfe ; call qword ptr [rax]
0x00000000004229f7 : add byte ptr [rax], bh ; cli ; std ; jmp rdx
0x0000000000423f07 : add byte ptr [rax], ch ; out -2, al ; call rsi
0x00000000004220f3 : add byte ptr [rax], dh ; adc edi, esi ; jmp rax
0x00000000004220c3 : add byte ptr [rax], dh ; add edi, esi ; jmp qword ptr [rax]
0x00000000004249df : add byte ptr [rax], dh ; mov cl, -1 ; call qword ptr [rax]
0x000000000042283b : add byte ptr [rax], dl ; test al, -1 ; call qword ptr [rax]
0x000000000040be8e : add byte ptr [rbp - 0x77], al ; ret
0x000000000040575b : add byte ptr [rbp - 0x78], al ; ret 0x8041
0x0000000000405f99 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000406569 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040b5d6 : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000404ce3 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000406813 : add byte ptr [rbx - 0x1874b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000406bf1 : add byte ptr [rbx - 0x1e34b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000422340 : add byte ptr [rbx], dl ; add byte ptr [rax], al ; nop ; test bh, dh ; jmp qword ptr [rax]
0x000000000041cf5a : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x0000000000405eb1 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8b4c
0x0000000000423a63 : add byte ptr [rcx + rdx], dl ; add al, bh ; ret
0x000000000041f165 : add byte ptr [rcx - 0xdf43], al ; call qword ptr [rax]
0x000000000041c7ac : add byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x00000000004104fd : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000406566 : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004021c8 : add byte ptr [rcx], al ; ret
0x000000000041286c : add byte ptr [rcx], bh ; ror dword ptr [rdi], -0x62 ; ret 0x9588
0x000000000040c79a : add byte ptr [rcx], ch ; ret 0x5589
0x00000000004222c0 : add byte ptr [rcx], dl ; add byte ptr [rax], al ; shr byte ptr [rdi - 2], 1 ; jmp qword ptr [rax]
0x0000000000423033 : add byte ptr [rdi + rax], ah ; add byte ptr [rax], al ; mov byte ptr [rbp - 2], dl ; call rbx
0x0000000000422274 : add byte ptr [rdi - 2], ah ; jmp rax
0x0000000000414668 : add byte ptr [rdi], cl ; lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x000000000040c9db : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000412ca7 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8841
0x000000000041cab4 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040ae33 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000412db6 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x000000000041b9ba : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x000000000040fc90 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000422b13 : add byte ptr [rdx + rax], al ; add byte ptr [rax], al ; call 0xffffffffe8422939
0x0000000000422100 : add byte ptr [rdx], cl ; add byte ptr [rax], al ; nop ; sbb dh, bh ; jmp qword ptr [rax]
0x000000000040837d : add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x0000000000407d4c : add cl, byte ptr [rax - 0x77] ; ret 0x148
0x000000000041466e : add cl, ch ; ret 2
0x000000000041ba75 : add dh, ch ; call 0x4933bbcc
0x000000000040a2c2 : add dword ptr [rax + 0xf], eax ; mov dh, -0x39 ; pop rbp ; ret
0x00000000004110f9 : add dword ptr [rax - 0x77], ecx ; ret 0x8148
0x000000000040f33f : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405f97 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000406567 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000041f352 : add dword ptr [rax], eax ; add byte ptr [rcx - 0xdf43], al ; call qword ptr [rax]
0x000000000040a17c : add dword ptr [rax], ecx ; ret 0x840
0x000000000040590a : add dword ptr [rbx + 0x5d], ebx ; ret
0x0000000000412cfc : add dword ptr [rcx - 0x78], eax ; ret 0x3045
0x0000000000404f41 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004079d0 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000408053 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004094a9 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000416082 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000405684 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004021c4 : add eax, 0x22348e ; add ebx, esi ; ret
0x0000000000418020 : add eax, 0x8301148b ; ret 0x89ee
0x000000000041466b : add eax, 0xe9000000 ; ret 2
0x0000000000412486 : add eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040850c : add eax, ecx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040218b : add eax, edx ; sar rax, 1 ; jne 0x40219c ; pop rbp ; ret
0x0000000000416679 : add eax, esi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x00000000004021c9 : add ebx, esi ; ret
0x0000000000414c7b : add edi, eax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x00000000004225fd : add edi, edi ; call qword ptr [rax]
0x00000000004225ed : add edi, edi ; call rax
0x00000000004220c5 : add edi, esi ; jmp qword ptr [rax]
0x000000000040238b : add esp, 0x10 ; pop rbp ; ret
0x00000000004104fb : add esp, 0x100 ; pop rbp ; ret
0x0000000000416b3c : add esp, 0x10e0 ; pop rbp ; ret
0x00000000004127fe : add esp, 0x110 ; pop rbp ; ret
0x000000000041499c : add esp, 0x130 ; pop rbp ; ret
0x0000000000407902 : add esp, 0x160 ; pop rbp ; ret
0x000000000040d425 : add esp, 0x170 ; pop rbp ; ret
0x0000000000412892 : add esp, 0x190 ; pop rbp ; ret
0x0000000000410dec : add esp, 0x1a0 ; pop rbp ; ret
0x000000000041407c : add esp, 0x1b0 ; pop rbp ; ret
0x000000000041dc54 : add esp, 0x1b8 ; pop rbp ; ret
0x000000000041fa61 : add esp, 0x1c0 ; pop rbp ; ret
0x000000000041771e : add esp, 0x1e0 ; pop rbp ; ret
0x0000000000404f46 : add esp, 0x20 ; pop rbp ; ret
0x0000000000415836 : add esp, 0x250 ; pop rbp ; ret
0x000000000040250d : add esp, 0x30 ; pop rbp ; ret
0x0000000000403ff0 : add esp, 0x30 ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000403e4e : add esp, 0x320 ; pop rbp ; ret
0x0000000000404ea5 : add esp, 0x40 ; pop rbp ; ret
0x0000000000404cde : add esp, 0x4e8 ; pop rbx ; pop rbp ; ret
0x0000000000403617 : add esp, 0x50 ; pop rbp ; ret
0x0000000000409b87 : add esp, 0x60 ; pop rbp ; ret
0x0000000000412ede : add esp, 0x60 ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040dc33 : add esp, 0x70 ; pop rbp ; ret
0x0000000000409273 : add esp, 0x80 ; pop rbp ; ret
0x000000000040b845 : add esp, 0x90 ; pop rbp ; ret
0x0000000000410c83 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040d84a : add esp, 0xb0 ; pop rbp ; ret
0x0000000000405bf1 : add esp, 0xc0 ; pop rbp ; ret
0x0000000000411d4f : add esp, 0xd8 ; pop rbx ; pop rbp ; ret
0x000000000040c3b5 : add esp, 0xe0 ; pop rbp ; ret
0x0000000000401b16 : add esp, 8 ; ret
0x0000000000412485 : add rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040850b : add rax, rcx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040218a : add rax, rdx ; sar rax, 1 ; jne 0x40219d ; pop rbp ; ret
0x0000000000416678 : add rax, rsi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x0000000000414c7a : add rdi, rax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x000000000040238a : add rsp, 0x10 ; pop rbp ; ret
0x00000000004104fa : add rsp, 0x100 ; pop rbp ; ret
0x0000000000416b3b : add rsp, 0x10e0 ; pop rbp ; ret
0x00000000004127fd : add rsp, 0x110 ; pop rbp ; ret
0x000000000041499b : add rsp, 0x130 ; pop rbp ; ret
0x0000000000407901 : add rsp, 0x160 ; pop rbp ; ret
0x000000000040d424 : add rsp, 0x170 ; pop rbp ; ret
0x0000000000412891 : add rsp, 0x190 ; pop rbp ; ret
0x0000000000410deb : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000041407b : add rsp, 0x1b0 ; pop rbp ; ret
0x000000000041dc53 : add rsp, 0x1b8 ; pop rbp ; ret
0x000000000041fa60 : add rsp, 0x1c0 ; pop rbp ; ret
0x000000000041771d : add rsp, 0x1e0 ; pop rbp ; ret
0x0000000000404f45 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000415835 : add rsp, 0x250 ; pop rbp ; ret
0x000000000040250c : add rsp, 0x30 ; pop rbp ; ret
0x0000000000403fef : add rsp, 0x30 ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000403e4d : add rsp, 0x320 ; pop rbp ; ret
0x0000000000404ea4 : add rsp, 0x40 ; pop rbp ; ret
0x0000000000404cdd : add rsp, 0x4e8 ; pop rbx ; pop rbp ; ret
0x0000000000403616 : add rsp, 0x50 ; pop rbp ; ret
0x0000000000409b86 : add rsp, 0x60 ; pop rbp ; ret
0x0000000000412edd : add rsp, 0x60 ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040dc32 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000409272 : add rsp, 0x80 ; pop rbp ; ret
0x000000000040b844 : add rsp, 0x90 ; pop rbp ; ret
0x0000000000410c82 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040d849 : add rsp, 0xb0 ; pop rbp ; ret
0x0000000000405bf0 : add rsp, 0xc0 ; pop rbp ; ret
0x0000000000411d4e : add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x000000000040c3b4 : add rsp, 0xe0 ; pop rbp ; ret
0x0000000000401b15 : add rsp, 8 ; ret
0x0000000000416081 : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000405683 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000423034 : and al, 7 ; add byte ptr [rax], al ; mov byte ptr [rbp - 2], dl ; call rbx
0x00000000004021c7 : and al, byte ptr [rax] ; add ebx, esi ; ret
0x000000000040a2c0 : and bh, 1 ; movzx eax, dil ; pop rbp ; ret
0x00000000004226fd : and bh, bh ; call qword ptr [rax]
0x00000000004243e9 : and bh, bh ; jmp qword ptr [rcx]
0x0000000000424a0d : and byte ptr [rax], al ; add byte ptr [rax], ah ; mov cl, -1 ; call qword ptr [rax]
0x00000000004249dd : and byte ptr [rax], al ; add byte ptr [rax], dh ; mov cl, -1 ; call qword ptr [rax]
0x0000000000403e50 : and byte ptr [rbx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000406465 : and byte ptr [rcx - 0x80], al ; inc dword ptr [rcx - 0x78] ; ret
0x000000000040a2bf : and dil, 1 ; movzx eax, dil ; pop rbp ; ret
0x00000000004226f9 : and dword ptr [rax], eax ; add byte ptr [rax], al ; and bh, bh ; call qword ptr [rax]
0x0000000000408925 : and eax, 0x420d70 ; mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x0000000000407aea : and eax, 0x625650 ; call 0x413da7
0x00000000004079ef : and eax, 0x625700 ; pop rbp ; ret
0x0000000000407a13 : and eax, 0x625708 ; pop rbp ; ret
0x0000000000402f22 : and eax, 0x6348f135 ; ret 0x8b48
0x0000000000413929 : and eax, edx ; xor rdi, rdx ; or rax, rdi ; pop rbp ; ret
0x0000000000413bae : and edx, eax ; mov al, dl ; movzx eax, al ; pop rbp ; ret
0x0000000000413a88 : and edx, eax ; mov ax, dx ; movzx eax, ax ; pop rbp ; ret
0x0000000000413837 : and edx, eax ; or r9d, edx ; mov eax, r9d ; pop rbp ; ret
0x0000000000413b43 : and edx, ebx ; mov al, dl ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x0000000000413bad : and edx, r8d ; mov al, dl ; movzx eax, al ; pop rbp ; ret
0x000000000041dcad : call 0x21045dfd
0x0000000000415644 : call 0x3d794
0x0000000000405a36 : call 0x401c92
0x0000000000405a16 : call 0x401d02
0x0000000000415b60 : call 0x401e12
0x0000000000407aef : call 0x413da2
0x000000000041f78c : call 0x485382df
0x000000000041f78b : call 0x485382e0
0x0000000000407c4f : call 0x4903059f
0x0000000000407c4e : call 0x490305a0
0x00000000004130c6 : call 0x4903ba16
0x00000000004130c5 : call 0x4903ba17
0x000000000041ccaa : call 0x490455fa
0x000000000041cca9 : call 0x490455fb
0x000000000041ba77 : call 0x4933bbca
0x0000000000422b18 : call 0xffffffffe8422934
0x000000000040f049 : call 0xffffffffe9037999
0x000000000040f048 : call 0xffffffffe903799a
0x0000000000402163 : call 0xffffffffff4083c1
0x00000000004021a3 : call 0xffffffffff408401
0x0000000000408e11 : call 0xffffffffff7a1962
0x0000000000408e10 : call 0xffffffffff7a1963
0x0000000000408f4f : call 0xffffffffff7a1aa0
0x0000000000408f4e : call 0xffffffffff7a1aa1
0x000000000041fab9 : call qword ptr [r12 + rbx*8]
0x000000000040a653 : call qword ptr [rax]
0x000000000041f424 : call qword ptr [rbx]
0x000000000041f34b : call qword ptr [rcx]
0x000000000041f3dc : call qword ptr [rdx]
0x000000000041f38c : call qword ptr [rsi]
0x000000000041faba : call qword ptr [rsp + rbx*8]
0x00000000004021ed : call rax
0x000000000040ed9c : call rbx
0x00000000004236e3 : call rdi
0x000000000040bfa6 : call rsi
0x0000000000400286 : cdq ; mov dh, 0x7d ; adc dword ptr [rcx], 0xe98cd16c ; ret
0x000000000040a88b : cdq ; ret 0xb60f
0x000000000040a1ba : clc ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041499a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x0000000000407900 : clc ; add rsp, 0x160 ; pop rbp ; ret
0x0000000000405711 : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000415834 : clc ; add rsp, 0x250 ; pop rbp ; ret
0x0000000000406655 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000408877 : clc ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040565a : clc ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000409b85 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041322b : clc ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040d848 : clc ; add rsp, 0xb0 ; pop rbp ; ret
0x000000000040a0b0 : clc ; add rsp, 0xc0 ; pop rbp ; ret
0x000000000040218f : clc ; jne 0x402198 ; pop rbp ; ret
0x0000000000413a1a : clc ; mov ax, r8w ; movzx eax, ax ; pop rbp ; ret
0x000000000040c599 : clc ; mov byte ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000405726 : clc ; mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x000000000041cb85 : clc ; mov dword ptr [rax + 0x14], ecx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040dae5 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004123db : clc ; mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x000000000041c82f : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040a0ee : clc ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000406c2e : clc ; mov rax, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000408787 : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040806b : clc ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040808b : clc ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x00000000004080ab : clc ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000041374c : clc ; mov rax, r8 ; pop rbp ; ret
0x0000000000403648 : clc ; mov rcx, qword ptr [rax*8 + 0x41fbb0] ; jmp rcx
0x0000000000406c32 : clc ; mov rsp, rbp ; pop rbp ; ret
0x0000000000405053 : clc ; pop rbp ; ret
0x0000000000423a68 : clc ; ret
0x0000000000411db8 : cld ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004023b7 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000416b3a : cld ; add rsp, 0x10e0 ; pop rbp ; ret
0x00000000004127fc : cld ; add rsp, 0x110 ; pop rbp ; ret
0x000000000041dc52 : cld ; add rsp, 0x1b8 ; pop rbp ; ret
0x000000000041fa5f : cld ; add rsp, 0x1c0 ; pop rbp ; ret
0x000000000040ff06 : cld ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000413c7a : cld ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040bc07 : cld ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004123c2 : cld ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040cb79 : cld ; add rsp, 0x80 ; pop rbp ; ret
0x00000000004099aa : cld ; add rsp, 0xc0 ; pop rbp ; ret
0x0000000000424a0c : cld ; and byte ptr [rax], al ; add byte ptr [rax], ah ; mov cl, -1 ; call qword ptr [rax]
0x000000000041c82c : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040ff4f : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041721b : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000413c77 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041302c : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041cfaa : cld ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000411dbf : cld ; pop rbp ; ret
0x000000000041f162 : cli ; add al, byte ptr [rax] ; add byte ptr [rcx - 0xdf43], al ; call qword ptr [rax]
0x00000000004229f9 : cli ; std ; jmp rdx
0x000000000040bc38 : cmove ecx, edx ; movsxd rax, ecx ; pop rbp ; ret
0x000000000041e150 : cmp byte ptr [rcx - 0x77], al ; ret 0x8141
0x000000000041e144 : cmp byte ptr [rcx], ah ; ret 0x8941
0x00000000004229f8 : cmp dl, bh ; std ; jmp rdx
0x00000000004087fa : cmp dword ptr [rax - 0x75], ecx ; jne 0x4087e4 ; call rax
0x000000000041f40a : cmp dword ptr [rcx - 0xf], eax ; jmp qword ptr [rcx]
0x0000000000417609 : cmp dword ptr [rdx - 0x76be63d5], ebx ; ret
0x0000000000411876 : cmp eax, 0x8945c621 ; ret 0x8141
0x000000000040214d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x402160 ; pop rbp ; ret
0x0000000000419251 : cmp edi, dword ptr [rdx + 0x5a5335da] ; ret
0x00000000004105fc : cwde ; mov rcx, qword ptr [rax*8 + 0x421660] ; jmp rcx
0x000000000040a7a4 : dec dword ptr [rax + 0x69] ; ret 0xa
0x000000000041924e : dec dword ptr [rax - 0x46] ; cmp edi, dword ptr [rdx + 0x5a5335da] ; ret
0x0000000000411a68 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; nop ; sbb al, byte ptr [rdx] ; jmp rcx
0x0000000000415b5b : dec dword ptr [rax - 0x75] ; push rax ; or al, ch ; stosd dword ptr [rdi], eax ; ret 0xfffe
0x0000000000415640 : dec dword ptr [rax - 0x75] ; push rbp ; call 0x3d798
0x000000000041edfb : dec dword ptr [rax - 0x75] ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 1
0x0000000000412efd : dec dword ptr [rax - 0x77] ; jge 0x412f00 ; pop rbp ; ret
0x0000000000404cae : dec dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000418e4f : dec dword ptr [rax - 0x77] ; ret 0x8148
0x0000000000415676 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000406819 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040c320 : dec dword ptr [rax - 0x77] ; ret 0xd7e8
0x000000000041042c : dec dword ptr [rax - 0x77] ; ret 0xdbe8
0x0000000000410129 : dec dword ptr [rax - 0x77] ; ret 0xdee8
0x000000000041edab : dec dword ptr [rcx + 0x31c621d6] ; ret 0xd609
0x000000000040e7a2 : dec dword ptr [rcx - 0x77] ; ret 0x294d
0x000000000040a889 : dec dword ptr [rdi] ; cdq ; ret 0xb60f
0x000000000040a845 : dec dword ptr [rdi] ; xchg eax, edx ; ret 0xe280
0x000000000040a3a1 : div dword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000040a3a0 : div qword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000041925e : enter -0x46b8, 0x3b ; mov edx, 0x5a5335da ; ret
0x00000000004087f7 : enter -0x74b8, 0x39 ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x0000000000416214 : enter -0x76b8, 0xc ; ret 0x59e9
0x000000000040c6b7 : enter -0x7cb8, -0x3c ; pop rbp ; ret
0x000000000040eb30 : enter 0x4b05, 0x34 ; fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x000000000040b212 : enter 0x548, 0 ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000411d51 : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040cb11 : fadd dword ptr [rcx - 0xa] ; jmp qword ptr [rcx]
0x000000000040b6f5 : faddp st(1) ; fstp xword ptr [rbp - 0x20] ; fld xword ptr [rbp - 0x20] ; pop rbp ; ret
0x00000000004228ad : fcos ; call rax
0x00000000004224fd : fdivp st(6) ; call qword ptr [rax]
0x000000000042247d : fdivr st(6) ; call qword ptr [rax]
0x000000000040eb34 : fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x000000000040554d : fild word ptr [rcx] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000413b44 : fimul dword ptr [rax - 0x3f49f030] ; pop rbx ; pop rbp ; ret
0x000000000040b6fa : fld xword ptr [rbp - 0x20] ; pop rbp ; ret
0x0000000000408213 : fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x0000000000416d5e : fmul dword ptr [r8 - 0x77] ; ret 0x8148
0x000000000040cd7b : fmul dword ptr [rax + 0x29] ; ret 0x148
0x0000000000408214 : fmul dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000416d5f : fmul dword ptr [rax - 0x77] ; ret 0x8148
0x000000000041edff : fmul dword ptr [rax - 0x7f] ; ret 1
0x000000000041fabc : fmul qword ptr [rax - 0x7d] ; ret
0x00000000004224ad : fsin ; call rax
0x000000000040b6f7 : fstp xword ptr [rbp - 0x20] ; fld xword ptr [rbp - 0x20] ; pop rbp ; ret
0x000000000041e703 : fsubr st(1) ; ret 0xffff
0x0000000000402389 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041cabf : hlt ; mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402160 : hlt ; pop rbp ; mov edi, 0x6255e8 ; jmp rax
0x000000000040a917 : imul byte ptr [rsi] ; adc dword ptr [rcx - 0xa], eax ; jmp qword ptr [rcx]
0x0000000000414447 : imul eax ; ret
0x0000000000407d48 : imul eax, dword ptr [rax - 0x77], 0x7a ; add cl, byte ptr [rax - 0x77] ; ret 0x148
0x00000000004229f4 : in al, 0 ; add byte ptr [rax], al ; cmp dl, bh ; std ; jmp rdx
0x000000000040b8ee : in al, 0x48 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000411e2a : in al, dx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040ff03 : in al, dx ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406c35 : in al, dx ; pop rbp ; ret
0x0000000000411c8a : in eax, -0x4a ; loope 0x411cb3 ; ret 0x8941
0x0000000000405ead : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8b4c
0x0000000000412a47 : inc dword ptr [rax + 0x2041f3ca] ; rol byte ptr [rbp + 8], 1 ; ret 0x8844
0x00000000004220bf : inc dword ptr [rax] ; or dword ptr [rax], eax ; add byte ptr [rax], dh ; add edi, esi ; jmp qword ptr [rax]
0x0000000000406469 : inc dword ptr [rcx - 0x78] ; ret
0x000000000040edbb : inc dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x00000000004220af : inc eax ; or byte ptr [rax], al ; add al, al ; add bh, dh ; jmp rax
0x00000000004220ef : inc eax ; or dword ptr [rax], eax ; add byte ptr [rax], dh ; adc edi, esi ; jmp rax
0x000000000042226f : inc eax ; sldt word ptr [rax] ; add byte ptr [rdi - 2], ah ; jmp rax
0x000000000040b6fb : insd dword ptr [rdi], dx ; loopne 0x40b75e ; ret
0x0000000000410c25 : int 0x80
0x000000000041537c : int 0xfd
0x0000000000412cfb : int1 ; add dword ptr [rcx - 0x78], eax ; ret 0x3045
0x0000000000412f50 : int1 ; jmp qword ptr [rax]
0x0000000000402153 : ja 0x40215a ; pop rbp ; ret
0x000000000040a0f1 : ja 0x40a13e ; pop rbp ; ret
0x000000000040a916 : jbe 0x40a917 ; adc dword ptr cs:[rcx - 0xa], eax ; jmp qword ptr [rcx]
0x000000000040215f : je 0x40215d ; pop rbp ; mov edi, 0x6255e8 ; jmp rax
0x000000000040806a : jge 0x40806b ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040808a : jge 0x40808b ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x00000000004080aa : jge 0x4080ab ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000408460 : jge 0x408453 ; mov rcx, qword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000409a30 : jge 0x409a23 ; mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040a0ed : jge 0x40a0ee ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040b6f8 : jge 0x40b6e0 ; fld xword ptr [rbp - 0x20] ; pop rbp ; ret
0x00000000004123da : jge 0x4123dd ; mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x0000000000412f00 : jge 0x412efd ; pop rbp ; ret
0x00000000004246e9 : jle 0x4246ec ; jmp rdx
0x000000000041ce98 : jmp 0x334fa6
0x0000000000401b6b : jmp 0x401b27
0x000000000041d354 : jmp 0x41d399
0x0000000000408cb0 : jmp 0x49031600
0x000000000040972e : jmp 0x4903207e
0x000000000040979b : jmp 0x490320eb
0x0000000000409f2c : jmp 0x4903287c
0x0000000000409f99 : jmp 0x490328e9
0x000000000040354d : jmp 0xffffffff8a02be60
0x0000000000419ba4 : jmp 0xffffffff8a0424bc
0x00000000004110f8 : jmp 0xffffffffc2ca5902
0x000000000040638c : jmp qword ptr [rax]
0x0000000000402d36 : jmp qword ptr [rcx]
0x000000000042317b : jmp qword ptr [rdi]
0x00000000004235e3 : jmp qword ptr [rdx]
0x0000000000402167 : jmp rax
0x000000000040280d : jmp rcx
0x0000000000422b1b : jmp rdi
0x00000000004021a7 : jmp rdx
0x0000000000402190 : jne 0x402197 ; pop rbp ; ret
0x00000000004084d6 : jne 0x4084c1 ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x00000000004087fd : jne 0x4087e1 ; call rax
0x000000000040a3a2 : jne 0x40a39a ; mov rax, rdx ; pop rbp ; ret
0x0000000000414186 : jne 0x41417e ; mov rax, rdx ; pop rbp ; ret
0x0000000000402f19 : jnp 0x402f47 ; xor eax, 0x81f229f1 ; ret 0x257b
0x00000000004222f5 : jnp 0x4222f7 ; jmp rax
0x0000000000405383 : jo 0x4053c4 ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d427 : jo 0x40d42f ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040dc35 : jo 0x40dc96 ; ret
0x000000000040f25f : jo 0x40f2c5 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040f904 : jo 0x40f965 ; ret
0x000000000040fa3e : jo 0x40fa9f ; ret
0x000000000040fe4e : jo 0x40fe56 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004123c6 : jo 0x412427 ; ret
0x000000000041322f : jo 0x413290 ; ret
0x000000000040837b : jp 0x408384 ; add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x000000000040837a : jp 0x408385 ; add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x0000000000405a34 : js 0x405a42 ; call 0x401c94
0x000000000040bfa0 : js 0x40c006 ; xchg eax, ebx ; xchg eax, ecx ; salc ; call rsi
0x000000000040bfb3 : js 0x40c019 ; xchg eax, ebx ; xchg eax, ecx ; salc ; call rsi
0x0000000000403c23 : lahf ; sub esp, dword ptr [rcx] ; ret 0xd709
0x000000000041466a : lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x000000000040a8d7 : lea edi, dword ptr [rax + 0xffffffe] ; cdq ; ret 0xb60f
0x000000000040a885 : lea esi, dword ptr [rax + 0xffffffe] ; cdq ; ret 0xb60f
0x000000000040bb46 : leave ; test dword ptr [rcx], esp ; ret 0xd709
0x00000000004226f8 : lock and dword ptr [rax], eax ; add byte ptr [rax], al ; and bh, bh ; call qword ptr [rax]
0x00000000004224f8 : lock sbb dword ptr [rax], eax ; add al, dl ; fdivp st(6) ; call qword ptr [rax]
0x0000000000407af0 : lodsb al, byte ptr [rsi] ; ret 0
0x0000000000411c8c : loope 0x411cb1 ; ret 0x8941
0x00000000004084d7 : loopne 0x408529 ; mov esi, eax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000040b6f9 : loopne 0x40b6db ; insd dword ptr [rdi], dx ; loopne 0x40b760 ; ret
0x000000000040b6fc : loopne 0x40b75d ; ret
0x000000000040c3b7 : loopne 0x40c3be ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041058e : loopne 0x41054a ; ret
0x0000000000411440 : loopne 0x411490 ; add esp, 0x20 ; pop rbp ; ret
0x000000000041143f : loopne 0x411491 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000411c88 : loopne 0x411ca4 ; in eax, -0x4a ; loope 0x411cb5 ; ret 0x8941
0x0000000000416b3e : loopne 0x416b55 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000417720 : loopne 0x417728 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041cda6 : loopne 0x41ce07 ; ret
0x000000000041cda5 : loopne 0x41ce08 ; ret
0x00000000004083de : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040d84c : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000422428 : mov al, 0x16 ; add byte ptr [rax], al ; rcl dl, -2 ; call rax
0x00000000004224a8 : mov al, 0x18 ; add byte ptr [rax], al ; rcr cl, -2 ; call rax
0x00000000004225e8 : mov al, 0x1d ; add byte ptr [rax], al ; add edi, edi ; call rax
0x0000000000422628 : mov al, 0x1e ; add byte ptr [rax], al ; nop ; or bh, bh ; call rax
0x00000000004227a8 : mov al, 0x24 ; add byte ptr [rax], al ; xor byte ptr [rax - 1], bl ; call rax
0x000000000040f7db : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040f668 : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x000000000041407e : mov al, 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004082b7 : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041c346 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000413bb0 : mov al, dl ; movzx eax, al ; pop rbp ; ret
0x0000000000413b45 : mov al, dl ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x0000000000413a8a : mov ax, dx ; movzx eax, ax ; pop rbp ; ret
0x0000000000413a1b : mov ax, r8w ; movzx eax, ax ; pop rbp ; ret
0x0000000000413a20 : mov bh, -0x40 ; pop rbp ; ret
0x0000000000407a11 : mov byte ptr [0x625708], al ; pop rbp ; ret
0x0000000000414c37 : mov byte ptr [rax + 0x14], 1 ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004067af : mov byte ptr [rax + 0x2c], 1 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405382 : mov byte ptr [rax + 0x38], dh ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405381 : mov byte ptr [rax + 0x38], sil ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041664b : mov byte ptr [rax + 0xc], 1 ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040bf9d : mov byte ptr [rax - 0x47], cl ; js 0x40c009 ; xchg eax, ebx ; xchg eax, ecx ; salc ; call rsi
0x000000000040c59a : mov byte ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000405727 : mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000423038 : mov byte ptr [rbp - 2], dl ; call rbx
0x00000000004021c3 : mov byte ptr [rip + 0x22348e], 1 ; ret
0x000000000040bb44 : mov ch, 0x1c ; leave ; test dword ptr [rcx], esp ; ret 0xd709
0x0000000000418d8c : mov cl, -0x32 ; ret
0x00000000004249e1 : mov cl, -1 ; call qword ptr [rax]
0x000000000040a2c5 : mov dh, -0x39 ; pop rbp ; ret
0x0000000000404f43 : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004079d2 : mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000408055 : mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004094ab : mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000416084 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000405686 : mov dh, -0x40 ; pop rbp ; ret
0x0000000000413b48 : mov dh, -0x40 ; pop rbx ; pop rbp ; ret
0x0000000000400287 : mov dh, 0x7d ; adc dword ptr [rcx], 0xe98cd16c ; ret
0x00000000004021c5 : mov dr0, word ptr [rdx] ; add byte ptr [rcx], al ; ret
0x00000000004079ed : mov dword ptr [0x625700], edi ; pop rbp ; ret
0x000000000041cb86 : mov dword ptr [rax + 0x14], ecx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040dae6 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040daa8 : mov dword ptr [rax], eax ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040d964 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040daa7 : mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000041ce6c : mov dword ptr [rbp - 0x18], eax ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000402509 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004083dc : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004135b8 : mov dword ptr [rbp - 0x50], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000405a44 : mov dword ptr [rbp - 0xc0], eax ; call 0x401c98
0x0000000000402387 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004023b5 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041cfa8 : mov dword ptr [rbp - 4], edx ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000041c82d : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000408785 : mov dword ptr [rbp - 8], eax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000412eff : mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x000000000040db5e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405909 : mov dword ptr [rcx], eax ; pop rbx ; pop rbp ; ret
0x000000000041667c : mov dword ptr [rdi + 0x10], eax ; pop rbp ; ret
0x000000000040892a : mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x000000000040a0f0 : mov dword ptr [rdi + 0x48], esi ; pop rbp ; ret
0x00000000004123dc : mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x00000000004050fa : mov dword ptr [rdx + rcx*8], eax ; pop rbp ; ret
0x0000000000414c7e : mov dword ptr [rsi], edi ; pop rbp ; ret
0x000000000041dc56 : mov eax, 0x5d000001 ; ret
0x000000000040587e : mov eax, 0xca8de16e ; add al, -0x5c ; ret
0x000000000040a8d8 : mov eax, 0xffffffe ; cdq ; ret 0xb60f
0x0000000000405a2f : mov eax, dword ptr [rax + 8] ; mov rdi, qword ptr [rax + 8] ; call 0x401c99
0x0000000000405a10 : mov eax, dword ptr [rax + 8] ; mov rdi, qword ptr [rax] ; call 0x401d08
0x000000000040d918 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000407b4d : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407ee3 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d915 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000407e3f : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000411e28 : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407c70 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d8cd : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040d95e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000408189 : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040b8ec : mov eax, dword ptr [rbp - 0x1c] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041143e : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004084dc : mov eax, dword ptr [rbp - 0x20] ; call rax
0x000000000041cda4 : mov eax, dword ptr [rbp - 0x20] ; pop rbp ; ret
0x0000000000409c8f : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040daaa : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000041138b : mov eax, dword ptr [rbp - 0x2c] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040c6b5 : mov eax, dword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040dc2f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040f7d9 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041cac0 : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040ff50 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040ff04 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000413c78 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040bc05 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004123c0 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000411dbd : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040a1b8 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040570f : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406653 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000408875 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000405658 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000409b83 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000413229 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000406c30 : mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000405051 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040806d : mov eax, dword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040808d : mov eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0x00000000004080ad : mov eax, dword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000413a1d : mov eax, eax ; movzx eax, ax ; pop rbp ; ret
0x000000000041374e : mov eax, eax ; pop rbp ; ret
0x000000000041383d : mov eax, ecx ; pop rbp ; ret
0x0000000000408b11 : mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000413a8b : mov eax, edx ; movzx eax, ax ; pop rbp ; ret
0x000000000040a3a5 : mov eax, edx ; pop rbp ; ret
0x0000000000413a1c : mov eax, r8d ; movzx eax, ax ; pop rbp ; ret
0x000000000041383c : mov eax, r9d ; pop rbp ; ret
0x00000000004021eb : mov ebp, esp ; call rax
0x0000000000402151 : mov ebp, esp ; ja 0x40215c ; pop rbp ; ret
0x0000000000419260 : mov ecx, 0x35daba3b ; push rbx ; pop rdx ; ret
0x0000000000410c3d : mov ecx, 0x5b2a830a ; ret
0x000000000040bf9f : mov ecx, 0x91935e78 ; salc ; call rsi
0x0000000000402886 : mov ecx, dword ptr [rax*8 + 0x41fb60] ; jmp rcx
0x0000000000402806 : mov ecx, dword ptr [rax*8 + 0x41fb80] ; jmp rcx
0x000000000040364a : mov ecx, dword ptr [rax*8 + 0x41fbb0] ; jmp rcx
0x0000000000404573 : mov ecx, dword ptr [rax*8 + 0x41fbd8] ; jmp rcx
0x000000000040c776 : mov ecx, dword ptr [rax*8 + 0x420e00] ; jmp rcx
0x000000000040dcf2 : mov ecx, dword ptr [rax*8 + 0x421160] ; jmp rcx
0x000000000040e016 : mov ecx, dword ptr [rax*8 + 0x4211a8] ; jmp rcx
0x00000000004105fe : mov ecx, dword ptr [rax*8 + 0x421660] ; jmp rcx
0x0000000000411aea : mov ecx, dword ptr [rax*8 + 0x421a30] ; jmp rcx
0x0000000000411a6a : mov ecx, dword ptr [rax*8 + 0x421a90] ; jmp rcx
0x000000000041a046 : mov ecx, dword ptr [rax*8 + 0x421de0] ; jmp rcx
0x0000000000418047 : mov ecx, dword ptr [rax*8 + 0x421e68] ; jmp rcx
0x000000000041d007 : mov ecx, dword ptr [rax*8 + 0x421eb0] ; jmp rcx
0x000000000041f066 : mov ecx, dword ptr [rax*8 + 0x421f88] ; jmp rcx
0x000000000040d961 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000405905 : mov ecx, dword ptr [rbp - 0x10] ; mov qword ptr [rcx], rax ; pop rbx ; pop rbp ; ret
0x0000000000408e72 : mov ecx, dword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000408e0f : mov ecx, dword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000408463 : mov ecx, dword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000409a33 : mov ecx, dword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000409b00 : mov ecx, dword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040028d : mov ecx, gs ; ret
0x00000000004021e5 : mov edi, 0x624e20 ; mov rbp, rsp ; call rax
0x0000000000402162 : mov edi, 0x6255e8 ; jmp rax
0x00000000004021a2 : mov edi, 0x6255e8 ; jmp rdx
0x0000000000407ae8 : mov edi, dword ptr [0x625650] ; call 0x413da9
0x0000000000405a33 : mov edi, dword ptr [rax + 8] ; call 0x401c95
0x0000000000405a14 : mov edi, dword ptr [rax] ; call 0x401d04
0x000000000040a0ec : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000408069 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000408089 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x00000000004080a9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000408e13 : mov edi, dword ptr [rcx] ; call rax
0x00000000004087f9 : mov edi, dword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x0000000000414c78 : mov edi, dword ptr [rsi] ; add rdi, rax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x000000000041fab7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000041fab6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000419250 : mov edx, 0x35daba3b ; push rbx ; pop rdx ; ret
0x0000000000419252 : mov edx, 0x5a5335da ; ret
0x0000000000415b5d : mov edx, dword ptr [rax + 8] ; call 0x401e15
0x000000000040586e : mov esi, 0xca8de16e ; add al, -0x5c ; ret
0x00000000004087fc : mov esi, dword ptr [rbp - 0x20] ; call rax
0x0000000000408467 : mov esi, dword ptr [rcx] ; call rax
0x00000000004021a0 : mov esi, eax ; mov edi, 0x6255e8 ; jmp rdx
0x00000000004084d9 : mov esi, eax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x0000000000406c34 : mov esp, ebp ; pop rbp ; ret
0x00000000004079ec : mov qword ptr [0x625700], rdi ; pop rbp ; ret
0x000000000041ce6b : mov qword ptr [rbp - 0x18], rax ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000405a43 : mov qword ptr [rbp - 0xc0], rax ; call 0x401c99
0x0000000000408784 : mov qword ptr [rbp - 8], rax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000412efe : mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000040db5d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405908 : mov qword ptr [rcx], rax ; pop rbx ; pop rbp ; ret
0x000000000041667b : mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x000000000040a0ef : mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x00000000004050f9 : mov qword ptr [rdx + rcx*8], rax ; pop rbp ; ret
0x0000000000414c7d : mov qword ptr [rsi], rdi ; pop rbp ; ret
0x00000000004083dd : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040f7da : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000405a0f : mov rax, qword ptr [rax + 8] ; mov rdi, qword ptr [rax] ; call 0x401d09
0x0000000000407b4c : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407ee2 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d914 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000407e3e : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000407c6f : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d8cc : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000408188 : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000041143d : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004084db : mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000041cda3 : mov rax, qword ptr [rbp - 0x20] ; pop rbp ; ret
0x0000000000409c8e : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040c6b4 : mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040dc2e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040f7d8 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040a1b7 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040570e : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406652 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000408874 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000405657 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000409b82 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000413228 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000406c2f : mov rax, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000405050 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040806c : mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040808c : mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x00000000004080ac : mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000041374d : mov rax, r8 ; pop rbp ; ret
0x0000000000408b10 : mov rax, rdx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040a3a4 : mov rax, rdx ; pop rbp ; ret
0x00000000004021ea : mov rbp, rsp ; call rax
0x0000000000402150 : mov rbp, rsp ; ja 0x40215d ; pop rbp ; ret
0x0000000000402885 : mov rcx, qword ptr [rax*8 + 0x41fb60] ; jmp rcx
0x0000000000402805 : mov rcx, qword ptr [rax*8 + 0x41fb80] ; jmp rcx
0x0000000000403649 : mov rcx, qword ptr [rax*8 + 0x41fbb0] ; jmp rcx
0x0000000000404572 : mov rcx, qword ptr [rax*8 + 0x41fbd8] ; jmp rcx
0x000000000040c775 : mov rcx, qword ptr [rax*8 + 0x420e00] ; jmp rcx
0x000000000040dcf1 : mov rcx, qword ptr [rax*8 + 0x421160] ; jmp rcx
0x000000000040e015 : mov rcx, qword ptr [rax*8 + 0x4211a8] ; jmp rcx
0x00000000004105fd : mov rcx, qword ptr [rax*8 + 0x421660] ; jmp rcx
0x0000000000411ae9 : mov rcx, qword ptr [rax*8 + 0x421a30] ; jmp rcx
0x0000000000411a69 : mov rcx, qword ptr [rax*8 + 0x421a90] ; jmp rcx
0x000000000041a045 : mov rcx, qword ptr [rax*8 + 0x421de0] ; jmp rcx
0x0000000000418046 : mov rcx, qword ptr [rax*8 + 0x421e68] ; jmp rcx
0x000000000041d006 : mov rcx, qword ptr [rax*8 + 0x421eb0] ; jmp rcx
0x000000000041f065 : mov rcx, qword ptr [rax*8 + 0x421f88] ; jmp rcx
0x0000000000405904 : mov rcx, qword ptr [rbp - 0x10] ; mov qword ptr [rcx], rax ; pop rbx ; pop rbp ; ret
0x0000000000408e71 : mov rcx, qword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000408e0e : mov rcx, qword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000408462 : mov rcx, qword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000409a32 : mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000409aff : mov rcx, qword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000405a32 : mov rdi, qword ptr [rax + 8] ; call 0x401c96
0x0000000000405a13 : mov rdi, qword ptr [rax] ; call 0x401d05
0x000000000040a0eb : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000408068 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000408088 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x00000000004080a8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000408e12 : mov rdi, qword ptr [rcx] ; call rax
0x00000000004087f8 : mov rdi, qword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x0000000000415b5c : mov rdx, qword ptr [rax + 8] ; call 0x401e16
0x00000000004087fb : mov rsi, qword ptr [rbp - 0x20] ; call rax
0x0000000000408466 : mov rsi, qword ptr [rcx] ; call rax
0x000000000040219f : mov rsi, rax ; mov edi, 0x6255e8 ; jmp rdx
0x00000000004084d8 : mov rsi, rax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x0000000000406c33 : mov rsp, rbp ; pop rbp ; ret
0x000000000040c774 : movabs al, byte ptr [0x420e00c50c8b48] ; jmp rcx
0x0000000000405875 : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000041c30a : movsx eax, cl ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040bc3c : movsxd rax, ecx ; pop rbp ; ret
0x0000000000404f42 : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004079d1 : movzx eax, al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000408054 : movzx eax, al ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004094aa : movzx eax, al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000416083 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000405685 : movzx eax, al ; pop rbp ; ret
0x0000000000413b47 : movzx eax, al ; pop rbx ; pop rbp ; ret
0x0000000000413a1f : movzx eax, ax ; pop rbp ; ret
0x000000000040a2c4 : movzx eax, bh ; pop rbp ; ret
0x000000000040572a : movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x000000000040a2c3 : movzx eax, dil ; pop rbp ; ret
0x00000000004222f4 : nop ; jnp 0x4222f8 ; jmp rax
0x000000000042262c : nop ; or bh, bh ; call rax
0x0000000000411a6d : nop ; sbb al, byte ptr [rdx] ; jmp rcx
0x0000000000422104 : nop ; sbb dh, bh ; jmp qword ptr [rax]
0x0000000000422344 : nop ; test bh, dh ; jmp qword ptr [rax]
0x000000000041fad8 : nop dword ptr [rax + rax] ; ret
0x000000000040e37d : or al, 0x18 ; ret 0x6451
0x0000000000411a6b : or al, 0xffffffffffffffc5 ; nop ; sbb al, byte ptr [rdx] ; jmp rcx
0x000000000041664d : or al, 1 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405a35 : or al, ch ; push rbp ; ret 0xffff
0x0000000000415b5f : or al, ch ; stosd dword ptr [rdi], eax ; ret 0xfffe
0x000000000042262d : or bh, bh ; call rax
0x0000000000405a31 : or byte ptr [rax - 0x75], cl ; js 0x405a45 ; call 0x401c97
0x0000000000405a30 : or byte ptr [rax - 0x75], cl ; js 0x405a46 ; call 0x401c98
0x00000000004220b1 : or byte ptr [rax], al ; add al, al ; add bh, dh ; jmp rax
0x0000000000400bf0 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000406856 : or byte ptr [rcx - 0xe], al ; jmp qword ptr [rcx]
0x0000000000422e78 : or byte ptr [rsi - 2], cl ; call qword ptr [rcx]
0x000000000042263c : or byte ptr [rsi], 0xff ; call qword ptr [rax]
0x00000000004220f1 : or dword ptr [rax], eax ; add byte ptr [rax], dh ; adc edi, esi ; jmp rax
0x00000000004220c1 : or dword ptr [rax], eax ; add byte ptr [rax], dh ; add edi, esi ; jmp qword ptr [rax]
0x0000000000411d2b : or dword ptr [rsp + rax + 0x21], esp ; ret 0xd709
0x000000000040f9c1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041374b : or eax, edi ; mov rax, r8 ; pop rbp ; ret
0x000000000041392f : or eax, edi ; pop rbp ; ret
0x000000000041383a : or ecx, edx ; mov eax, r9d ; pop rbp ; ret
0x000000000041374a : or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x0000000000413839 : or r9d, edx ; mov eax, r9d ; pop rbp ; ret
0x000000000041392e : or rax, rdi ; pop rbp ; ret
0x0000000000423f09 : out -2, al ; call rsi
0x000000000040a2c1 : out 1, eax ; movzx eax, dil ; pop rbp ; ret
0x000000000041ba76 : out dx, al ; call 0x4933bbcb
0x0000000000408369 : outsb dx, byte ptr [rsi] ; ret 0x280f
0x000000000041facc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040b5d8 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041face : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405f9b : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041fad0 : pop r14 ; pop r15 ; ret
0x0000000000403ff4 : pop r14 ; pop rbp ; ret
0x0000000000405f9d : pop r15 ; pop rbp ; ret
0x000000000041fad2 : pop r15 ; ret
0x00000000004021c2 : pop rbp ; mov byte ptr [rip + 0x22348e], 1 ; ret
0x0000000000402161 : pop rbp ; mov edi, 0x6255e8 ; jmp rax
0x000000000040219e : pop rbp ; mov rsi, rax ; mov edi, 0x6255e8 ; jmp rdx
0x000000000041facb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041facf : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000402155 : pop rbp ; ret
0x000000000040b5d7 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405f9a : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403ff3 : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000404ce4 : pop rbx ; pop rbp ; ret
0x0000000000410c41 : pop rbx ; ret
0x0000000000405f9e : pop rdi ; pop rbp ; ret
0x000000000041fad3 : pop rdi ; ret
0x0000000000419256 : pop rdx ; ret
0x0000000000405f9c : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000041fad1 : pop rsi ; pop r15 ; ret
0x0000000000403ff5 : pop rsi ; pop rbp ; ret
0x000000000040bfa1 : pop rsi ; xchg eax, ebx ; xchg eax, ecx ; salc ; call rsi
0x000000000041facd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040b5d9 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000408380 : pop rsp ; ret 0xf66
0x0000000000403c21 : push 0x212b9f95 ; ret 0xd709
0x00000000004033b5 : push 0x48006256 ; add esp, 0x10 ; pop rbp ; ret
0x00000000004225e7 : push qword ptr [rax + 0x4000001d] ; add edi, edi ; call rax
0x00000000004228a7 : push qword ptr [rax - 0x1fffffd8] ; fcos ; call rax
0x0000000000422667 : push qword ptr [rax - 0x2fffffe1] ; adc edi, edi ; call rax
0x00000000004224a7 : push qword ptr [rax - 0x3fffffe8] ; fsin ; call rax
0x0000000000422427 : push qword ptr [rax - 0x3fffffea] ; sar dh, cl ; call rax
0x0000000000422727 : push qword ptr [rax - 0x4fffffde] ; sub al, -1 ; call rax
0x00000000004226a7 : push qword ptr [rax - 0x4fffffe0] ; sbb bh, bh ; call rax
0x0000000000422627 : push qword ptr [rax - 0x6fffffe2] ; or bh, bh ; call rax
0x00000000004226f7 : push rax ; and dword ptr [rax], eax ; add byte ptr [rax], al ; and bh, bh ; call qword ptr [rax]
0x0000000000415b5e : push rax ; or al, ch ; stosd dword ptr [rdi], eax ; ret 0xfffe
0x0000000000403619 : push rax ; pop rbp ; ret
0x00000000004224f7 : push rax ; sbb dword ptr [rax], eax ; add al, dl ; fdivp st(6) ; call qword ptr [rax]
0x000000000041dcac : push rbp ; call 0x21045dfe
0x0000000000415643 : push rbp ; call 0x3d795
0x000000000041cfa9 : push rbp ; cld ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000416213 : push rbp ; enter -0x76b8, 0xc ; ret 0x59e9
0x000000000040cd7a : push rbp ; fmul dword ptr [rax + 0x29] ; ret 0x148
0x000000000041edfe : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 1
0x00000000004021e4 : push rbp ; mov edi, 0x624e20 ; mov rbp, rsp ; call rax
0x0000000000405a37 : push rbp ; ret 0xffff
0x0000000000413415 : push rbp ; ror byte ptr [rax - 0x77], 1 ; ret 0x1e8
0x0000000000419255 : push rbx ; pop rdx ; ret
0x0000000000406464 : push rcx ; and byte ptr [rcx - 0x80], al ; inc dword ptr [rcx - 0x78] ; ret
0x0000000000423a64 : push rsp ; adc dword ptr [rax], eax ; add al, bh ; ret
0x000000000041e14f : push rsp ; cmp byte ptr [rcx - 0x77], al ; ret 0x8141
0x000000000041e143 : push rsp ; cmp byte ptr [rcx], ah ; ret 0x8941
0x000000000042242c : rcl dl, -2 ; call rax
0x00000000004224ac : rcr cl, -2 ; call rax
0x000000000040b6f6 : rcr ebx, 0x7d ; loopne 0x40b6de ; insd dword ptr [rdi], dx ; loopne 0x40b763 ; ret
0x000000000040028f : ret
0x0000000000407af1 : ret 0
0x0000000000416715 : ret 0x10
0x0000000000416db9 : ret 0x11e8
0x0000000000407d4f : ret 0x148
0x0000000000414d25 : ret 0x18
0x000000000040f3fe : ret 0x1b2
0x0000000000413419 : ret 0x1e8
0x000000000041d2c8 : ret 0x1fe4
0x000000000041dcb0 : ret 0x20
0x000000000040a34f : ret 0x2148
0x0000000000401f72 : ret 0x2232
0x0000000000401d72 : ret 0x2233
0x0000000000401b72 : ret 0x2234
0x0000000000402f20 : ret 0x257b
0x0000000000414015 : ret 0x26a8
0x000000000040836a : ret 0x280f
0x00000000004046fa : ret 0x28f5
0x0000000000404cb1 : ret 0x2948
0x000000000040e789 : ret 0x294c
0x000000000040e7a5 : ret 0x294d
0x000000000040389a : ret 0x2d
0x0000000000412cff : ret 0x3045
0x000000000041265d : ret 0x3148
0x0000000000416a96 : ret 0x34e8
0x000000000040c03c : ret 0x3ee8
0x000000000041d353 : ret 0x3eeb
0x00000000004213a0 : ret 0x40e1
0x0000000000403550 : ret 0x4589
0x0000000000415afa : ret 0x4a3b
0x00000000004168c6 : ret 0x4e8
0x000000000040bec9 : ret 0x51e8
0x000000000041d847 : ret 0x54c8
0x0000000000412db9 : ret 0x5588
0x000000000040c79c : ret 0x5589
0x0000000000416218 : ret 0x59e9
0x000000000041d03b : ret 0x5ef2
0x000000000040e37f : ret 0x6451
0x000000000041d7a4 : ret 0x651d
0x00000000004178f2 : ret 0x68e8
0x0000000000406ce5 : ret 0x6eab
0x000000000041d3ec : ret 0x744a
0x000000000040b9cb : ret 0x7fe8
0x000000000040575e : ret 0x8041
0x000000000041187b : ret 0x8141
0x000000000040935e : ret 0x8148
0x000000000041da0a : ret 0x8334
0x0000000000408cb3 : ret 0x8348
0x000000000040a17e : ret 0x840
0x000000000040ae3c : ret 0x8589
0x000000000040c9de : ret 0x8840
0x0000000000412caa : ret 0x8841
0x00000000004105b9 : ret 0x8844
0x0000000000411c8e : ret 0x8941
0x0000000000404a10 : ret 0x8948
0x000000000040e7a8 : ret 0x8949
0x0000000000413a89 : ret 0x8966
0x000000000040e93c : ret 0x89a5
0x0000000000418025 : ret 0x89ee
0x0000000000402f27 : ret 0x8b48
0x0000000000405eb5 : ret 0x8b4c
0x0000000000419aea : ret 0x90e8
0x000000000041deb4 : ret 0x9303
0x000000000040b461 : ret 0x941
0x0000000000416506 : ret 0x94e8
0x0000000000412871 : ret 0x9588
0x000000000040a7a7 : ret 0xa
0x00000000004031ef : ret 0xacce
0x00000000004032f8 : ret 0xb0
0x000000000040638e : ret 0xb60f
0x000000000040c7e3 : ret 0xb7e8
0x000000000040587c : ret 0xb848
0x00000000004148a9 : ret 0xb849
0x0000000000408d36 : ret 0xb948
0x000000000041410e : ret 0xb949
0x000000000041274a : ret 0xbe48
0x0000000000406f7a : ret 0xbe86
0x000000000040af21 : ret 0xbeb6
0x0000000000414ac0 : ret 0xc
0x000000000041d97d : ret 0xc0c2
0x0000000000402185 : ret 0xc148
0x000000000040cf1c : ret 0xc2f6
0x000000000041d98a : ret 0xc4c0
0x000000000041dbb4 : ret 0xc996
0x0000000000403b90 : ret 0xca21
0x000000000040b3be : ret 0xca29
0x0000000000413baf : ret 0xd088
0x000000000040fc93 : ret 0xd284
0x000000000041edb1 : ret 0xd609
0x0000000000403c26 : ret 0xd709
0x000000000040c323 : ret 0xd7e8
0x000000000041e310 : ret 0xd83a
0x000000000040762f : ret 0xdbe8
0x000000000040e7bd : ret 0xdde8
0x000000000041d5ab : ret 0xddeb
0x000000000041012c : ret 0xdee8
0x000000000040a848 : ret 0xe280
0x00000000004191a0 : ret 0xea81
0x000000000040f04c : ret 0xee8
0x000000000040d08d : ret 0xf01
0x000000000040ea38 : ret 0xf180
0x000000000040a162 : ret 0xf280
0x0000000000402d1e : ret 0xf281
0x0000000000408381 : ret 0xf66
0x0000000000413a84 : ret 0xfa31
0x000000000040685e : ret 0xfa81
0x0000000000419b7d : ret 0xfde8
0x000000000041b45a : ret 0xfe68
0x0000000000409740 : ret 0xff3
0x0000000000415b62 : ret 0xfffe
0x0000000000405a18 : ret 0xffff
0x0000000000405fee : ret 1
0x0000000000414670 : ret 2
0x00000000004120cb : ret 3
0x000000000041400f : ret 8
0x0000000000412a4d : rol byte ptr [rbp + 8], 1 ; ret 0x8844
0x0000000000413b33 : rol byte ptr [rbp + 9], 1 ; ret
0x0000000000405765 : rol byte ptr [rbp - 0x78], 1 ; ret
0x000000000040daa6 : rol byte ptr [rcx + rcx*4], 1 ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004220b4 : rol byte ptr [rdx], -2 ; jmp rax
0x000000000041383b : rol dword ptr [rcx + rcx*4 - 0x38], 1 ; pop rbp ; ret
0x000000000041620f : ror byte ptr [r8 - 0x75], 0x55 ; enter -0x76b8, 0xc ; ret 0x59e9
0x0000000000410c20 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000040c606 : ror byte ptr [r8 - 0x77], 1 ; ret 0x2948
0x000000000040dc30 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x40dc9b ; ret
0x000000000041392a : ror byte ptr [rax + 0x31], 1 ; xlatb ; or rax, rdi ; pop rbp ; ret
0x00000000004221b0 : ror byte ptr [rax + rax], 0 ; xor byte ptr [rdi - 2], al ; jmp rax
0x000000000040218c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40219b ; pop rbp ; ret
0x0000000000416210 : ror byte ptr [rax - 0x75], 0x55 ; enter -0x76b8, 0xc ; ret 0x59e9
0x0000000000416085 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x0000000000410c21 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000413416 : ror byte ptr [rax - 0x77], 1 ; ret 0x1e8
0x000000000040c607 : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x000000000040e786 : ror byte ptr [rax - 0x77], 1 ; ret 0x294c
0x000000000040dc31 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x40dc9a ; ret
0x0000000000408056 : ror byte ptr [rax - 0x7d], -0x3c ; pop rbp ; ret
0x00000000004094ac : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x000000000040d423 : ror byte ptr [rax - 0x7f], -0x3c ; jo 0x40d433 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040fe4a : ror byte ptr [rax - 0x7f], -0x3c ; jo 0x40fe5a ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004220b0 : ror byte ptr [rax], 0 ; add al, al ; add bh, dh ; jmp rax
0x00000000004220f0 : ror byte ptr [rcx], 0 ; add byte ptr [rax], dh ; adc edi, esi ; jmp rax
0x0000000000413a8c : ror byte ptr [rdi], 1 ; mov bh, -0x40 ; pop rbp ; ret
0x0000000000413bb1 : ror byte ptr [rdi], 1 ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000413b46 : ror byte ptr [rdi], 1 ; mov dh, -0x40 ; pop rbx ; pop rbp ; ret
0x00000000004221f0 : ror byte ptr [rip + 0x5bf00000], -2 ; jmp rax
0x000000000041717f : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x000000000041265a : ror dword ptr [rax - 0x77], 1 ; ret 0x3148
0x0000000000414118 : ror dword ptr [rbp - 0x77], cl ; ret
0x000000000041286e : ror dword ptr [rdi], -0x62 ; ret 0x9588
0x0000000000412870 : sahf ; ret 0x9588
0x000000000040215e : sal byte ptr [rsp + rsi*8 + 0x5d], -0x41 ; call 0xffffffffff4083c6
0x000000000040bfa5 : salc ; call rsi
0x000000000040a8b3 : sar dh, -1 ; dec dword ptr [rdi] ; cdq ; ret 0xb60f
0x000000000042242d : sar dh, cl ; call rax
0x000000000040218e : sar eax, 1 ; jne 0x402199 ; pop rbp ; ret
0x000000000040218d : sar rax, 1 ; jne 0x40219a ; pop rbp ; ret
0x000000000040bb45 : sbb al, -0x37 ; test dword ptr [rcx], esp ; ret 0xd709
0x0000000000423a60 : sbb al, 0 ; add byte ptr [rax], al ; push rsp ; adc dword ptr [rax], eax ; add al, bh ; ret
0x0000000000411a6e : sbb al, byte ptr [rdx] ; jmp rcx
0x00000000004226ad : sbb bh, bh ; call rax
0x00000000004224a9 : sbb byte ptr [rax], al ; add al, al ; fsin ; call rax
0x0000000000422105 : sbb dh, bh ; jmp qword ptr [rax]
0x00000000004224f9 : sbb dword ptr [rax], eax ; add al, dl ; fdivp st(6) ; call qword ptr [rax]
0x000000000041d799 : sbb eax, 0x81d55b65 ; ret 8
0x00000000004226bd : sbb edi, edi ; call qword ptr [rax]
0x0000000000405680 : setb al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000408b34 : sete al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041cbe8 : setne al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000403eda : shl byte ptr [rax], cl ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405682 : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000040839f : shl dword ptr [rsi + 0xf], 0x5c ; ret 0xf66
0x00000000004222c4 : shr byte ptr [rdi - 2], 1 ; jmp qword ptr [rax]
0x0000000000422134 : shr byte ptr [rsi], -2 ; jmp rax
0x0000000000422271 : sldt word ptr [rax] ; add byte ptr [rdi - 2], ah ; jmp rax
0x00000000004229fa : std ; jmp rdx
0x000000000041c348 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000415b61 : stosd dword ptr [rdi], eax ; ret 0xfffe
0x000000000040bbc6 : sub ah, byte ptr [rcx] ; ret 0xd709
0x000000000042272d : sub al, -1 ; call rax
0x00000000004067b1 : sub al, 1 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000422c99 : sub bh, dh ; call qword ptr [rax]
0x00000000004228a9 : sub byte ptr [rax], al ; add al, ah ; fcos ; call rax
0x0000000000410c3f : sub dword ptr [rdx], 0x5b ; ret
0x000000000041fb41 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000403c24 : sub esp, dword ptr [rcx] ; ret 0xd709
0x000000000041fb40 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000042283d : test al, -1 ; call qword ptr [rax]
0x0000000000411d2a : test al, 9 ; add al, 0x21 ; ret 0xd709
0x0000000000422345 : test bh, dh ; jmp qword ptr [rax]
0x000000000041fada : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040bc36 : test dh, dh ; cmove ecx, edx ; movsxd rax, ecx ; pop rbp ; ret
0x000000000040bb47 : test dword ptr [rcx], esp ; ret 0xd709
0x000000000040b45c : test eax, 0x2140e457 ; ret 0x941
0x000000000040ff93 : test eax, 0x48ffff1b ; add esp, 0x10 ; pop rbp ; ret
0x0000000000410600 : vmovhps xmm8, xmm3, qword ptr [rdx] ; jmp rcx
0x0000000000403c22 : xchg eax, ebp ; lahf ; sub esp, dword ptr [rcx] ; ret 0xd709
0x000000000041cf5d : xchg eax, ebp ; ret 0x8041
0x000000000040c9dd : xchg eax, ebp ; ret 0x8840
0x0000000000412ca9 : xchg eax, ebp ; ret 0x8841
0x0000000000405eb4 : xchg eax, ebp ; ret 0x8b4c
0x000000000041cab6 : xchg eax, ebp ; ret 0xd284
0x000000000040ae35 : xchg eax, ebp ; ret 0xe280
0x000000000041cbe9 : xchg eax, ebp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000041ba74 : xchg eax, ebx ; add dh, ch ; call 0x4933bbcd
0x000000000040bfa2 : xchg eax, ebx ; xchg eax, ecx ; salc ; call rsi
0x000000000040bfa3 : xchg eax, ecx ; salc ; call rsi
0x000000000040b0f1 : xchg eax, edx ; ret 0x8041
0x000000000040a847 : xchg eax, edx ; ret 0xe280
0x0000000000405681 : xchg eax, edx ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000416508 : xchg eax, esp ; ret
0x0000000000412db8 : xchg eax, esp ; ret 0x5588
0x000000000041b9bc : xchg eax, esp ; ret 0x9588
0x000000000040fc92 : xchg eax, esp ; ret 0xd284
0x0000000000408b35 : xchg eax, esp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000413749 : xlatb ; or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x000000000041392d : xlatb ; or rax, rdi ; pop rbp ; ret
0x0000000000405a75 : xlatb ; ret
0x00000000004021c6 : xor al, 0x22 ; add byte ptr [rcx], al ; ret
0x0000000000407d46 : xor al, 0x6a ; imul eax, dword ptr [rax - 0x77], 0x7a ; add cl, byte ptr [rax - 0x77] ; ret 0x148
0x0000000000405a73 : xor al, ch ; xlatb ; ret
0x00000000004227ac : xor byte ptr [rax - 1], bl ; call rax
0x0000000000422234 : xor byte ptr [rax - 2], ah ; jmp rax
0x0000000000403ff2 : xor byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000042277c : xor byte ptr [rcx - 1], dl ; call qword ptr [rax]
0x000000000041499e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004221b4 : xor byte ptr [rdi - 2], al ; jmp rax
0x000000000042257c : xor cl, 0xfe ; call qword ptr [rax]
0x000000000040f757 : xor eax, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x0000000000402f1b : xor eax, 0x81f229f1 ; ret 0x257b
0x000000000040daa5 : xor eax, edx ; mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000413748 : xor edi, edx ; or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x000000000041392c : xor edi, edx ; or rax, rdi ; pop rbp ; ret
0x000000000041cfa6 : xor edx, eax ; mov dword ptr [rbp - 4], edx ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000041392b : xor rdi, rdx ; or rax, rdi ; pop rbp ; ret
