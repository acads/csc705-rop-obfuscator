0x0000000000402d0f : adc al, 0x25 ; ret
0x00000000004037cb : adc byte ptr [r8 - 0x75], cl ; push rbp ; call 0x1902b925
0x00000000004037cc : adc byte ptr [rax - 0x75], cl ; push rbp ; call 0x1902b924
0x00000000004074c9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040d93f : add ah, ah ; out -1, al ; call rsp
0x000000000040d60f : add ah, al ; jbe 0x40d616 ; jmp rsp
0x000000000040a3dd : add al, 0x21 ; ret 0xd709
0x0000000000403c99 : add al, al ; jmp 0x403c62
0x0000000000403cac : add al, al ; jmp 0x403c75
0x000000000040e90f : add al, al ; ret
0x000000000040537b : add al, ch ; outsd dx, dword ptr [rsi] ; ret
0x00000000004053c5 : add al, ch ; push rbp ; ret
0x0000000000403de7 : add al, ch ; ret
0x0000000000403d68 : add al, ch ; ret 0xffdc
0x000000000040bb9f : add bl, dh ; ret
0x00000000004037f0 : add byte ptr [rax + 0x29], cl ; ret 0x8948
0x0000000000404248 : add byte ptr [rax - 0x41], cl ; ret 0x3ee8
0x0000000000404638 : add byte ptr [rax - 0x47], cl ; ret
0x0000000000402d0c : add byte ptr [rax - 0x73], cl ; adc al, 0x25 ; ret
0x0000000000403288 : add byte ptr [rax - 0x75], cl ; call 0x4902bbe0
0x0000000000404caf : add byte ptr [rax - 0x75], cl ; call 0xffffffffb102d607
0x00000000004085fd : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000404b68 : add byte ptr [rax - 0x77], cl ; ret 0x1fe8
0x0000000000402e5b : add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000401f6b : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x0000000000405379 : add byte ptr [rax], al ; add al, ch ; outsd dx, dword ptr [rsi] ; ret
0x0000000000403de5 : add byte ptr [rax], al ; add al, ch ; ret
0x000000000040bb9d : add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004037ee : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8948
0x0000000000404246 : add byte ptr [rax], al ; add byte ptr [rax - 0x41], cl ; ret 0x3ee8
0x0000000000404636 : add byte ptr [rax], al ; add byte ptr [rax - 0x47], cl ; ret
0x0000000000403286 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; call 0x4902bbe2
0x0000000000404cad : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; call 0xffffffffb102d609
0x0000000000404b66 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1fe8
0x00000000004025d8 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000040bb9b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000400680 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004005a8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000400682 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004005aa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000040499c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040396f : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004093bd : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040584b : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000404207 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000400684 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004005ac : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000040930e : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004044e0 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7038b], cl ; ret 0xb0
0x0000000000403d5e : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7238b], cl ; ret 0xb0
0x000000000040260f : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xfa81
0x000000000040e8e9 : add byte ptr [rax], al ; add byte ptr [rdi + rcx], ch ; add byte ptr [rax], dl ; ret
0x0000000000406b6e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000407dde : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004043a7 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000040b26c : add byte ptr [rax], al ; add cl, ch ; ret 2
0x0000000000402c71 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403971 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040332a : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040166b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000040dca2 : add byte ptr [rax], al ; and al, 3 ; add byte ptr [rax], al ; call 0x1340dc16
0x000000000040dca6 : add byte ptr [rax], al ; call 0x1340dc12
0x000000000040dbc6 : add byte ptr [rax], al ; call 0x2440db2a
0x000000000040dc46 : add byte ptr [rax], al ; cmp byte ptr [rbp - 1], bl ; call qword ptr [rbx]
0x000000000040df66 : add byte ptr [rax], al ; cmp byte ptr [rbx - 1], dh ; call qword ptr [rsi]
0x000000000040df62 : add byte ptr [rax], al ; in al, 5 ; add byte ptr [rax], al ; cmp byte ptr [rbx - 1], dh ; call qword ptr [rsi]
0x0000000000401809 : add byte ptr [rax], al ; jmp 0x401689
0x00000000004093bf : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000405a62 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040584d : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040346a : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040849b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000407160 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040930f : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000400686 : add byte ptr [rax], al ; ret
0x00000000004005ae : add byte ptr [rax], al ; ret 0
0x000000000040df67 : add byte ptr [rax], bh ; jae 0x40df6e ; call qword ptr [rsi]
0x000000000040e167 : add byte ptr [rax], ch ; jl 0x40e16e ; call rdi
0x000000000040e8ef : add byte ptr [rax], dl ; ret
0x0000000000404d7e : add byte ptr [rbp + 0x48], bh ; add esp, 0x30 ; pop rbp ; ret
0x000000000040d68f : add byte ptr [rbp + rax*4 - 1], dh ; jmp rsp
0x00000000004021f7 : add byte ptr [rbp - 0x77], al ; ret 0x2945
0x000000000040849c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000407161 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000409310 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040557c : add byte ptr [rbx + 0x758be47d], cl ; clc ; call 0x401809
0x000000000040dca3 : add byte ptr [rbx + rax], ah ; add byte ptr [rax], al ; call 0x1340dc15
0x00000000004023d1 : add byte ptr [rbx - 0x1634b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004044e2 : add byte ptr [rbx - 0x76b7038b], cl ; ret 0xb0
0x0000000000403d60 : add byte ptr [rbx - 0x76b7238b], cl ; ret 0xb0
0x000000000040ba3c : add byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x0000000000401bd8 : add byte ptr [rcx], al ; ret
0x0000000000402611 : add byte ptr [rcx], al ; ret 0xfa81
0x000000000040e8eb : add byte ptr [rdi + rcx], ch ; add byte ptr [rax], dl ; ret
0x000000000040b268 : add byte ptr [rdi], cl ; lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000406b70 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000407de0 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004043a9 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000407edc : add byte ptr es:[rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040b26e : add cl, ch ; ret 2
0x0000000000404f62 : add dword ptr [rax - 0x75], ecx ; loopne 0x404fcb ; ret
0x0000000000408ad9 : add dword ptr [rax - 0x77], ecx ; ret 0x8148
0x000000000040748f : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040849a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040715f : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040b8fd : add dword ptr [rax], ecx ; ret 0x840
0x00000000004043af : add dword ptr [rdi], ecx ; mov dh, -0x3e ; pop rbp ; ret
0x0000000000403b89 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040b5da : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401bd4 : add eax, 0x20d75e ; add ebx, esi ; ret
0x000000000040b26b : add eax, 0xe9000000 ; ret 2
0x0000000000401b9b : add eax, edx ; sar rax, 1 ; jne 0x401bac ; pop rbp ; ret
0x0000000000401bd9 : add ebx, esi ; ret
0x0000000000402c74 : add esp, 0x10 ; pop rbp ; ret
0x000000000040b59c : add esp, 0x130 ; pop rbp ; ret
0x00000000004087cc : add esp, 0x1a0 ; pop rbp ; ret
0x000000000040a9de : add esp, 0x1e0 ; pop rbp ; ret
0x000000000040271d : add esp, 0x20 ; pop rbp ; ret
0x0000000000402dcd : add esp, 0x30 ; pop rbp ; ret
0x00000000004031ec : add esp, 0x40 ; pop rbp ; ret
0x000000000040522d : add esp, 0x40 ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004078ac : add esp, 0x50 ; pop rbp ; ret
0x0000000000402a68 : add esp, 0x60 ; pop rbp ; ret
0x0000000000405d83 : add esp, 0x70 ; pop rbp ; ret
0x0000000000403466 : add esp, 0x90 ; pop rbp ; ret
0x0000000000408663 : add esp, 0xa0 ; pop rbp ; ret
0x00000000004036cb : add esp, 0xc0 ; pop rbp ; ret
0x000000000040930b : add esp, 0xc8 ; pop rbx ; pop rbp ; ret
0x000000000040a3ff : add esp, 0xd8 ; pop rbx ; pop rbp ; ret
0x0000000000409b55 : add esp, 0xe0 ; pop rbp ; ret
0x000000000040166e : add esp, 8 ; ret
0x0000000000401b9a : add rax, rdx ; sar rax, 1 ; jne 0x401bad ; pop rbp ; ret
0x0000000000402c73 : add rsp, 0x10 ; pop rbp ; ret
0x000000000040b59b : add rsp, 0x130 ; pop rbp ; ret
0x00000000004087cb : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000040a9dd : add rsp, 0x1e0 ; pop rbp ; ret
0x000000000040271c : add rsp, 0x20 ; pop rbp ; ret
0x0000000000402dcc : add rsp, 0x30 ; pop rbp ; ret
0x00000000004031eb : add rsp, 0x40 ; pop rbp ; ret
0x000000000040522c : add rsp, 0x40 ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004078ab : add rsp, 0x50 ; pop rbp ; ret
0x0000000000402a67 : add rsp, 0x60 ; pop rbp ; ret
0x0000000000405d82 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000403465 : add rsp, 0x90 ; pop rbp ; ret
0x0000000000408662 : add rsp, 0xa0 ; pop rbp ; ret
0x00000000004036ca : add rsp, 0xc0 ; pop rbp ; ret
0x000000000040930a : add rsp, 0xc8 ; pop rbx ; pop rbp ; ret
0x000000000040a3fe : add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x0000000000409b54 : add rsp, 0xe0 ; pop rbp ; ret
0x000000000040166d : add rsp, 8 ; ret
0x0000000000404f4d : and ah, byte ptr [rcx] ; ret 0xd709
0x000000000040b5d9 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040dca4 : and al, 3 ; add byte ptr [rax], al ; call 0x1340dc14
0x0000000000401bd7 : and byte ptr [rax], al ; add ebx, esi ; ret
0x00000000004043ad : and dl, 1 ; movzx eax, dl ; pop rbp ; ret
0x0000000000402d09 : and dword ptr [rsi - 0x72b7ffc0], edi ; adc al, 0x25 ; ret
0x00000000004052af : and eax, 0x60f468 ; pop rbp ; ret
0x00000000004052d3 : and eax, 0x60f470 ; pop rbp ; ret
0x000000000040dca8 : call 0x1340dc10
0x00000000004037d0 : call 0x1902b920
0x000000000040dbc8 : call 0x2440db28
0x0000000000405583 : call 0x401802
0x000000000040328c : call 0x4902bbdc
0x000000000040328b : call 0x4902bbdd
0x0000000000402653 : call 0x490aafa6
0x0000000000402652 : call 0x490aafa7
0x0000000000404cb3 : call 0xffffffffb102d603
0x0000000000404cb2 : call 0xffffffffb102d604
0x0000000000404e8d : call 0xffffffffc885d7c9
0x0000000000407199 : call 0xffffffffe902fae9
0x0000000000407198 : call 0xffffffffe902faea
0x0000000000406169 : call 0xffffffffff40a23a
0x000000000040bb79 : call qword ptr [r12 + rbx*8]
0x000000000040d9eb : call qword ptr [rbx]
0x000000000040db4b : call qword ptr [rcx]
0x000000000040dcab : call qword ptr [rdx]
0x000000000040df6b : call qword ptr [rsi]
0x000000000040bb7a : call qword ptr [rsp + rbx*8]
0x0000000000401bfd : call rax
0x0000000000406eec : call rbx
0x000000000040e16b : call rdi
0x000000000040d943 : call rsp
0x00000000004041d6 : clc ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040b59a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x000000000040387f : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403d7e : clc ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403f9b : clc ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000405582 : clc ; call 0x401803
0x0000000000401b9f : clc ; jne 0x401ba8 ; pop rbp ; ret
0x0000000000405c35 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040babf : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040bac2 : clc ; pop rbp ; ret
0x00000000004093bc : cld ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000402ce7 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040a5c9 : cld ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004055b8 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000409b53 : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000040babc : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040aa43 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040a5c6 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004055b5 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004093c3 : cld ; pop rbp ; ret
0x00000000004052ae : cmp al, 0x25 ; push 0x5d0060f4 ; ret
0x00000000004053c0 : cmp al, 0x25 ; xor dl, 0x60 ; add al, ch ; push rbp ; ret
0x000000000040dc48 : cmp byte ptr [rbp - 1], bl ; call qword ptr [rbx]
0x000000000040df68 : cmp byte ptr [rbx - 1], dh ; call qword ptr [rsi]
0x000000000040a8c9 : cmp dword ptr [rdx - 0x76be63d5], ebx ; ret
0x0000000000402c6f : cmp eax, 0x48000008 ; add esp, 0x10 ; pop rbp ; ret
0x0000000000409f26 : cmp eax, 0x8945c621 ; ret 0x8141
0x0000000000401b5d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401b70 ; pop rbp ; ret
0x0000000000407fdc : cwde ; mov rcx, qword ptr [rax*8 + 0x40cda8] ; jmp rcx
0x0000000000406164 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; call 0xffffffffff40a23f
0x00000000004098ec : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; pop rax ; rol byte ptr [rax], cl ; jmp rcx
0x0000000000404c73 : dec dword ptr [rax - 0x75] ; push rbp ; ror byte ptr [rax + 1], 1 ; ret 0x8148
0x000000000040b2d4 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x00000000004023d7 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004068f2 : dec dword ptr [rcx - 0x77] ; ret 0x294d
0x000000000040930d : enter 0, 0 ; pop rbx ; pop rbp ; ret
0x0000000000406c80 : enter 0x4b05, 0x34 ; fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x000000000040a401 : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000404d7c : fadd st(6) ; add byte ptr [rbp + 0x48], bh ; add esp, 0x30 ; pop rbp ; ret
0x0000000000406c84 : fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x0000000000404624 : fmul dword ptr [r8 - 0x47] ; ret
0x0000000000404625 : fmul dword ptr [rax - 0x47] ; ret
0x0000000000403d63 : fmul qword ptr [rax - 0x77] ; ret 0xb0
0x000000000040bb7c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000405594 : fmul qword ptr [rbx + 0x3e8e47d] ; ret
0x0000000000402cb9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401b70 : hlt ; pop rbp ; mov edi, 0x60f2e0 ; jmp rax
0x000000000040557f : in al, -0x75 ; jne 0x405581 ; call 0x401806
0x000000000040df64 : in al, 5 ; add byte ptr [rax], al ; cmp byte ptr [rbx - 1], dh ; call qword ptr [rsi]
0x0000000000402aa7 : in al, dx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040a33a : in eax, -0x4a ; loope 0x40a363 ; ret 0x8941
0x0000000000406f0b : inc dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x000000000040d60b : inc esp ; or dword ptr [rax], eax ; add ah, al ; jbe 0x40d61a ; jmp rsp
0x000000000040d68b : inc esp ; or eax, dword ptr [rax] ; add byte ptr [rbp + rax*4 - 1], dh ; jmp rsp
0x0000000000408605 : int 0x80
0x0000000000407edb : int1 ; add byte ptr es:[rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401b63 : ja 0x401b6a ; pop rbp ; ret
0x000000000040df69 : jae 0x40df6c ; call qword ptr [rsi]
0x000000000040d611 : jbe 0x40d614 ; jmp rsp
0x0000000000401b6f : je 0x401b6d ; pop rbp ; mov edi, 0x60f2e0 ; jmp rax
0x0000000000404d7f : jge 0x404dcf ; add esp, 0x30 ; pop rbp ; ret
0x000000000040557e : jge 0x40556b ; mov esi, dword ptr [rbp - 8] ; call 0x401807
0x000000000040e169 : jl 0x40e16c ; call rdi
0x000000000040d651 : jle 0x40d654 ; jmp rsp
0x000000000040180b : jmp 0x401687
0x0000000000403c9b : jmp 0x403c60
0x0000000000403cae : jmp 0x403c73
0x0000000000405377 : jmp 0x4053a2
0x0000000000408ad8 : jmp 0xffffffffc2c9d2e2
0x000000000040e373 : jmp qword ptr [rax]
0x000000000040dbcb : jmp qword ptr [rbx]
0x00000000004050cc : jmp qword ptr [rcx]
0x000000000040e253 : jmp qword ptr [rdx]
0x0000000000401b77 : jmp rax
0x0000000000401e97 : jmp rcx
0x0000000000401bb7 : jmp rdx
0x000000000040d513 : jmp rsp
0x0000000000401ba0 : jne 0x401ba7 ; pop rbp ; ret
0x0000000000405581 : jne 0x40557f ; call 0x401804
0x0000000000405d85 : jo 0x405de6 ; ret
0x00000000004073af : jo 0x407415 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000407a54 : jo 0x407ab5 ; ret
0x0000000000407b8e : jo 0x407bef ; ret
0x000000000040b26a : lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x00000000004043ae : loop 0x4043b5 ; movzx eax, dl ; pop rbp ; ret
0x00000000004043ae : loop 0x4043b7 ; movzx eax, dl ; pop rbp ; ret
0x000000000040a33c : loope 0x40a361 ; ret 0x8941
0x000000000040271b : loopne 0x40276b ; add esp, 0x20 ; pop rbp ; ret
0x000000000040271a : loopne 0x40276c ; add esp, 0x20 ; pop rbp ; ret
0x0000000000404f66 : loopne 0x404fc7 ; ret
0x0000000000404f65 : loopne 0x404fc8 ; ret
0x0000000000409b57 : loopne 0x409b5e ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040a338 : loopne 0x40a354 ; in eax, -0x4a ; loope 0x40a365 ; ret 0x8941
0x000000000040a9e0 : loopne 0x40a9e8 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000404f4b : mov ah, bl ; and ah, byte ptr [rcx] ; ret 0xd709
0x000000000040792b : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004077b8 : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x000000000040b5d6 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004052d1 : mov byte ptr [0x60f470], al ; pop rbp ; ret
0x0000000000404bd9 : mov byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000404d7d : mov byte ptr [rax], 0x7d ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401bd3 : mov byte ptr [rip + 0x20d75e], 1 ; ret
0x00000000004043b1 : mov dh, -0x3e ; pop rbp ; ret
0x0000000000403b8b : mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040b5dc : mov dh, -0x40 ; pop rbp ; ret
0x00000000004052ad : mov dword ptr [0x60f468], edi ; pop rbp ; ret
0x0000000000405c36 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000404151 : mov dword ptr [rax + 8], ecx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405bf8 : mov dword ptr [rax], eax ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000405ab4 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000405bf7 : mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004038ea : mov dword ptr [rbp - 0x10], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402aa5 : mov dword ptr [rbp - 0x14], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402dc9 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402cb7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402ce5 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040babd : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000405cae : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404034 : mov dword ptr [rcx + 0x40], eax ; pop rbp ; ret
0x0000000000404f61 : mov dword ptr [rcx], eax ; mov rax, qword ptr [rbp - 0x20] ; pop rbp ; ret
0x0000000000404204 : mov dword ptr [rdi + 0x10], 0 ; pop rbp ; ret
0x00000000004044f9 : mov eax, dword ptr [rax + 0x18] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405a68 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040428a : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403cd3 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405a65 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040547f : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040942f : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000408be3 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405a1d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000405aae : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000405850 : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000404f64 : mov eax, dword ptr [rbp - 0x20] ; pop rbp ; ret
0x0000000000405bfa : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000404b72 : mov eax, dword ptr [rbp - 0x30] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000405d7f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000407929 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040aa44 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040a5c7 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004055b6 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004093c1 : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004041d4 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040387d : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403d7c : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403f99 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040bac0 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000401bfb : mov ebp, esp ; call rax
0x0000000000401b61 : mov ebp, esp ; ja 0x401b6c ; pop rbp ; ret
0x000000000040861d : mov ecx, 0x5b2a830a ; ret
0x0000000000401e90 : mov ecx, dword ptr [rax*8 + 0x40bbf0] ; jmp rcx
0x0000000000405e42 : mov ecx, dword ptr [rax*8 + 0x40c8a0] ; jmp rcx
0x0000000000406166 : mov ecx, dword ptr [rax*8 + 0x40c8e8] ; jmp rcx
0x0000000000407fde : mov ecx, dword ptr [rax*8 + 0x40cda8] ; jmp rcx
0x00000000004090ac : mov ecx, dword ptr [rax*8 + 0x40d110] ; jmp rcx
0x0000000000409038 : mov ecx, dword ptr [rax*8 + 0x40d170] ; jmp rcx
0x00000000004098ee : mov ecx, dword ptr [rax*8 + 0x40d258] ; jmp rcx
0x000000000040986e : mov ecx, dword ptr [rax*8 + 0x40d2b8] ; jmp rcx
0x000000000040a19a : mov ecx, dword ptr [rax*8 + 0x40d370] ; jmp rcx
0x000000000040a11a : mov ecx, dword ptr [rax*8 + 0x40d3d0] ; jmp rcx
0x0000000000405ab1 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000404030 : mov ecx, dword ptr [rbp - 0x10] ; mov qword ptr [rcx + 0x40], rax ; pop rbp ; ret
0x0000000000401bf5 : mov edi, 0x60ee20 ; mov rbp, rsp ; call rax
0x0000000000401b72 : mov edi, 0x60f2e0 ; jmp rax
0x0000000000401bb2 : mov edi, 0x60f2e0 ; jmp rdx
0x0000000000403c97 : mov edi, 0xebc00007 ; ret 0x8342
0x000000000040557d : mov edi, dword ptr [rbp - 0x1c] ; mov esi, dword ptr [rbp - 8] ; call 0x401808
0x000000000040bb77 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000040bb76 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000404a16 : mov esi, 0x8948e745 ; ret 0xb0
0x0000000000402d0a : mov esi, 0x8d480040 ; adc al, 0x25 ; ret
0x0000000000405580 : mov esi, dword ptr [rbp - 8] ; call 0x401805
0x0000000000401bb0 : mov esi, eax ; mov edi, 0x60f2e0 ; jmp rdx
0x0000000000409248 : mov esp, dword ptr [rcx] ; ret 0x8941
0x00000000004052ac : mov qword ptr [0x60f468], rdi ; pop rbp ; ret
0x0000000000404150 : mov qword ptr [rax + 8], rcx ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004038e9 : mov qword ptr [rbp - 0x10], rax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405cad : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404033 : mov qword ptr [rcx + 0x40], rax ; pop rbp ; ret
0x0000000000404203 : mov qword ptr [rdi + 0x10], 0 ; pop rbp ; ret
0x000000000040792a : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004044f8 : mov rax, qword ptr [rax + 0x18] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404289 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403cd2 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405a64 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040547e : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000408be2 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405a1c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040584f : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000404f63 : mov rax, qword ptr [rbp - 0x20] ; pop rbp ; ret
0x0000000000404b71 : mov rax, qword ptr [rbp - 0x30] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000405d7e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000407928 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004041d3 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040387c : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403d7b : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403f98 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000401bfa : mov rbp, rsp ; call rax
0x0000000000401b60 : mov rbp, rsp ; ja 0x401b6d ; pop rbp ; ret
0x0000000000401e8f : mov rcx, qword ptr [rax*8 + 0x40bbf0] ; jmp rcx
0x0000000000405e41 : mov rcx, qword ptr [rax*8 + 0x40c8a0] ; jmp rcx
0x0000000000406165 : mov rcx, qword ptr [rax*8 + 0x40c8e8] ; jmp rcx
0x0000000000407fdd : mov rcx, qword ptr [rax*8 + 0x40cda8] ; jmp rcx
0x00000000004090ab : mov rcx, qword ptr [rax*8 + 0x40d110] ; jmp rcx
0x0000000000409037 : mov rcx, qword ptr [rax*8 + 0x40d170] ; jmp rcx
0x00000000004098ed : mov rcx, qword ptr [rax*8 + 0x40d258] ; jmp rcx
0x000000000040986d : mov rcx, qword ptr [rax*8 + 0x40d2b8] ; jmp rcx
0x000000000040a199 : mov rcx, qword ptr [rax*8 + 0x40d370] ; jmp rcx
0x000000000040a119 : mov rcx, qword ptr [rax*8 + 0x40d3d0] ; jmp rcx
0x000000000040402f : mov rcx, qword ptr [rbp - 0x10] ; mov qword ptr [rcx + 0x40], rax ; pop rbp ; ret
0x0000000000401baf : mov rsi, rax ; mov edi, 0x60f2e0 ; jmp rdx
0x0000000000409c50 : movabs dword ptr [0x941c90941f0213f], eax ; ret 0x3145
0x0000000000402718 : movsxd rax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403b8a : movzx eax, al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040b5db : movzx eax, al ; pop rbp ; ret
0x00000000004043b0 : movzx eax, dl ; pop rbp ; ret
0x000000000040bb98 : nop dword ptr [rax + rax] ; ret
0x00000000004064cd : or al, 0x18 ; ret 0x6451
0x0000000000406167 : or al, 0xffffffffffffffc5 ; call 0xffffffffff40a23c
0x00000000004098ef : or al, 0xffffffffffffffc5 ; pop rax ; rol byte ptr [rax], cl ; jmp rcx
0x000000000040d60d : or dword ptr [rax], eax ; add ah, al ; jbe 0x40d618 ; jmp rsp
0x000000000040a3db : or dword ptr [rsp + rax + 0x21], esp ; ret 0xd709
0x0000000000407b11 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d68d : or eax, dword ptr [rax] ; add byte ptr [rbp + rax*4 - 1], dh ; jmp rsp
0x0000000000404bd3 : out -0x5e, eax ; sti ; sbb eax, 0x89488806 ; ret 0x2948
0x000000000040d941 : out -1, al ; call rsp
0x000000000040537d : outsd dx, dword ptr [rsi] ; ret
0x000000000040bb8c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004073b1 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040bb8e : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004073b3 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040bb90 : pop r14 ; pop r15 ; ret
0x0000000000405231 : pop r14 ; pop rbp ; ret
0x00000000004073b5 : pop r15 ; pop rbp ; ret
0x000000000040bb92 : pop r15 ; ret
0x00000000004098f1 : pop rax ; rol byte ptr [rax], cl ; jmp rcx
0x0000000000401bd2 : pop rbp ; mov byte ptr [rip + 0x20d75e], 1 ; ret
0x0000000000401b71 : pop rbp ; mov edi, 0x60f2e0 ; jmp rax
0x0000000000401bae : pop rbp ; mov rsi, rax ; mov edi, 0x60f2e0 ; jmp rdx
0x000000000040bb8b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040bb8f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401b65 : pop rbp ; ret
0x00000000004073b0 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040849d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405230 : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000409311 : pop rbx ; pop rbp ; ret
0x0000000000408621 : pop rbx ; ret
0x00000000004073b6 : pop rdi ; pop rbp ; ret
0x000000000040bb93 : pop rdi ; ret
0x00000000004073b4 : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040bb91 : pop rsi ; pop r15 ; ret
0x0000000000405232 : pop rsi ; pop rbp ; ret
0x0000000000401bd5 : pop rsi ; xlatb ; and byte ptr [rax], al ; add ebx, esi ; ret
0x000000000040bb8d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004073b2 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004052b0 : push 0x5d0060f4 ; ret
0x0000000000404635 : push rax ; add byte ptr [rax], al ; add byte ptr [rax - 0x47], cl ; ret
0x00000000004078ae : push rax ; pop rbp ; ret
0x00000000004037cf : push rbp ; call 0x1902b921
0x0000000000401bf4 : push rbp ; mov edi, 0x60ee20 ; mov rbp, rsp ; call rax
0x00000000004053c7 : push rbp ; ret
0x0000000000404c76 : push rbp ; ror byte ptr [rax + 1], 1 ; ret 0x8148
0x0000000000400688 : ret
0x00000000004005b0 : ret 0
0x000000000040b4b6 : ret 0x148
0x00000000004037d3 : ret 0x18
0x000000000040754e : ret 0x1b2
0x0000000000404b6b : ret 0x1fe8
0x0000000000401a12 : ret 0x20d7
0x0000000000401812 : ret 0x20d8
0x00000000004021fa : ret 0x2945
0x00000000004021c6 : ret 0x2948
0x00000000004068d9 : ret 0x294c
0x00000000004068f5 : ret 0x294d
0x0000000000409c59 : ret 0x3145
0x00000000004045cf : ret 0x3948
0x0000000000404238 : ret 0x3ee8
0x0000000000405b34 : ret 0x5589
0x00000000004064cf : ret 0x6451
0x000000000040690d : ret 0x6de8
0x0000000000408e82 : ret 0x8141
0x0000000000403c14 : ret 0x8148
0x0000000000403c9c : ret 0x8342
0x000000000040b8ff : ret 0x840
0x0000000000406b73 : ret 0x8840
0x0000000000407f99 : ret 0x8844
0x000000000040924a : ret 0x8941
0x00000000004037f3 : ret 0x8948
0x00000000004068f8 : ret 0x8949
0x0000000000406a8c : ret 0x89a5
0x000000000040481a : ret 0x8b48
0x000000000040a8ef : ret 0x941
0x0000000000404d65 : ret 0xb0
0x0000000000403a78 : ret 0xb848
0x000000000040b4a9 : ret 0xb849
0x0000000000409ab9 : ret 0xc131
0x0000000000401b95 : ret 0xc148
0x0000000000402763 : ret 0xc189
0x000000000040b210 : ret 0xc2f6
0x00000000004043b2 : ret 0xc35d
0x00000000004062f4 : ret 0xca21
0x00000000004093f2 : ret 0xca29
0x0000000000407de3 : ret 0xd284
0x0000000000404ef3 : ret 0xd709
0x00000000004043ac : ret 0xe280
0x000000000040719c : ret 0xee8
0x0000000000406b88 : ret 0xf180
0x000000000040b203 : ret 0xf280
0x000000000040636e : ret 0xf281
0x0000000000402613 : ret 0xfa81
0x000000000040a92a : ret 0xff6d
0x0000000000403d6a : ret 0xffdc
0x0000000000404c7d : ret 0xffff
0x0000000000402659 : ret 1
0x000000000040b270 : ret 2
0x0000000000409872 : rol byte ptr [rax], cl ; jmp rcx
0x0000000000405bf6 : rol byte ptr [rcx + rcx*4], 1 ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040903c : rol dword ptr [rax], 1 ; jmp rcx
0x000000000040a11e : rol dword ptr [rax], cl ; jmp rcx
0x0000000000408600 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000403e8e : ror byte ptr [r8 - 0x77], 1 ; ret 0x2948
0x0000000000405d80 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x405deb ; ret
0x0000000000404c77 : ror byte ptr [rax + 1], 1 ; ret 0x8148
0x0000000000401b9c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401bab ; pop rbp ; ret
0x0000000000408601 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000403e8f : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x00000000004068d6 : ror byte ptr [rax - 0x77], 1 ; ret 0x294c
0x0000000000405d81 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x405dea ; ret
0x0000000000404b31 : ror byte ptr [rcx + 0x48ce89cf], -0x77 ; ret 0x8b48
0x00000000004021c3 : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000403c11 : ror dword ptr [rax - 0x77], 1 ; ret 0x8148
0x0000000000401b9e : sar eax, 1 ; jne 0x401ba9 ; pop rbp ; ret
0x0000000000401b9d : sar rax, 1 ; jne 0x401baa ; pop rbp ; ret
0x00000000004092e9 : sbb dword ptr [rcx], esp ; ret 0xd709
0x0000000000404bd7 : sbb eax, 0x89488806 ; ret 0x2948
0x0000000000404f4a : scasd eax, dword ptr [rdi] ; mov ah, bl ; and ah, byte ptr [rcx] ; ret 0xd709
0x00000000004043aa : sete dl ; and dl, 1 ; movzx eax, dl ; pop rbp ; ret
0x000000000040b5d8 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000404bd6 : sti ; sbb eax, 0x89488806 ; ret 0x2948
0x000000000040861f : sub dword ptr [rdx], 0x5b ; ret
0x000000000040bbcd : sub esp, 8 ; add rsp, 8 ; ret
0x000000000040bbcc : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040a3da : test al, 9 ; add al, 0x21 ; ret 0xd709
0x000000000040bb9a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040d691 : test edi, edi ; jmp rsp
0x0000000000406b72 : xchg eax, ebp ; ret 0x8840
0x0000000000407de2 : xchg eax, esp ; ret 0xd284
0x00000000004043ab : xchg eax, esp ; ret 0xe280
0x0000000000401bd6 : xlatb ; and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000404e8e : xor byte ptr [rcx - 0x7af037bb], cl ; ret 0
0x000000000040b59e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004053c2 : xor dl, 0x60 ; add al, ch ; push rbp ; ret
0x00000000004078a7 : xor eax, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x0000000000405bf5 : xor eax, edx ; mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
