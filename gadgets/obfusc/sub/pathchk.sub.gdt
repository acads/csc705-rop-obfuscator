0x0000000000404329 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408963 : add ah, ch ; or al, byte ptr [rax] ; add byte ptr [rax], bh ; loopne 0x408972 ; jmp rdx
0x0000000000408243 : add ah, cl ; add eax, dword ptr [rax] ; add al, ch ; ret
0x00000000004087c7 : add al, ch ; fdiv st(7), st(0) ; jmp rax
0x0000000000404ff1 : add al, ch ; leave ; ret
0x0000000000408247 : add al, ch ; ret
0x0000000000406d0f : add bl, dh ; ret
0x000000000040536d : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000407d1b : add byte ptr [rax], ah ; fdiv st(7), st(0) ; call rax
0x0000000000408241 : add byte ptr [rax], al ; add ah, cl ; add eax, dword ptr [rax] ; add al, ch ; ret
0x0000000000406d0d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000406d0b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000406d0c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004039ce : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000404c3e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040616c : add byte ptr [rax], al ; add cl, ch ; ret 2
0x00000000004042f1 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404000 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040117b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004087c6 : add byte ptr [rax], al ; call 0xffffffffe14087ae
0x0000000000408962 : add byte ptr [rax], al ; in al, dx ; or al, byte ptr [rax] ; add byte ptr [rax], bh ; loopne 0x408973 ; jmp rdx
0x00000000004012f9 : add byte ptr [rax], al ; jmp 0x401199
0x00000000004028c2 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004087c2 : add byte ptr [rax], al ; or qword ptr [rax], r8 ; add al, ch ; fdiv st(7), st(0) ; jmp rax
0x000000000040216a : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040520b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403fc0 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000406d0e : add byte ptr [rax], al ; ret
0x0000000000407d2a : add byte ptr [rax], al ; sbb ch, -1 ; call qword ptr [rax]
0x0000000000407d9a : add byte ptr [rax], al ; shr dl, -1 ; call rax
0x0000000000408967 : add byte ptr [rax], bh ; loopne 0x40896e ; jmp rdx
0x000000000040520c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000403fc1 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x00000000004087c3 : add byte ptr [rcx + rcx], cl ; add al, ch ; fdiv st(7), st(0) ; jmp rax
0x0000000000406bac : add byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x00000000004015b8 : add byte ptr [rcx], al ; ret
0x0000000000406168 : add byte ptr [rdi], cl ; lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x00000000004039d0 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000404c40 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040616e : add cl, ch ; ret 2
0x0000000000405849 : add dword ptr [rax - 0x77], ecx ; ret 0x8148
0x00000000004042ef : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040520a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000403fbf : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000406a6d : add dword ptr [rax], ecx ; ret 0x840
0x0000000000401a23 : add dword ptr [rdi + rcx - 0x4a], eax ; ret 0x8840
0x000000000040221e : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402365 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040674a : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004015b4 : add eax, 0x207cbe ; add ebx, esi ; ret
0x000000000040616b : add eax, 0xe9000000 ; ret 2
0x0000000000408245 : add eax, dword ptr [rax] ; add al, ch ; ret
0x000000000040157b : add eax, edx ; sar rax, 1 ; jne 0x40158c ; pop rbp ; ret
0x00000000004015b9 : add ebx, esi ; ret
0x00000000004016eb : add esp, 0x10 ; pop rbp ; ret
0x000000000040649c : add esp, 0x130 ; pop rbp ; ret
0x0000000000402166 : add esp, 0x190 ; pop rbp ; ret
0x000000000040553c : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000402223 : add esp, 0x20 ; pop rbp ; ret
0x00000000004017cd : add esp, 0x30 ; pop rbp ; ret
0x000000000040470c : add esp, 0x50 ; pop rbp ; ret
0x000000000040236a : add esp, 0x70 ; pop rbp ; ret
0x000000000040461a : add esp, 0x90 ; pop rbp ; ret
0x00000000004053d3 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040117e : add esp, 8 ; ret
0x000000000040157a : add rax, rdx ; sar rax, 1 ; jne 0x40158d ; pop rbp ; ret
0x00000000004016ea : add rsp, 0x10 ; pop rbp ; ret
0x000000000040649b : add rsp, 0x130 ; pop rbp ; ret
0x0000000000402165 : add rsp, 0x190 ; pop rbp ; ret
0x000000000040553b : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000402222 : add rsp, 0x20 ; pop rbp ; ret
0x00000000004017cc : add rsp, 0x30 ; pop rbp ; ret
0x000000000040470b : add rsp, 0x50 ; pop rbp ; ret
0x0000000000402369 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000404619 : add rsp, 0x90 ; pop rbp ; ret
0x00000000004053d2 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040117d : add rsp, 8 ; ret
0x0000000000405145 : and al, 0x20 ; mov al, 0 ; call 0x4013c6
0x0000000000406749 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004015b7 : and byte ptr [rax], al ; add ebx, esi ; ret
0x000000000040243f : and eax, 0x609280 ; pop rbp ; ret
0x0000000000402463 : and eax, 0x609288 ; pop rbp ; ret
0x0000000000405015 : call 0x4012c2
0x0000000000405149 : call 0x4013c2
0x00000000004087c8 : call 0xffffffffe14087ac
0x0000000000403ff9 : call 0xffffffffe902c949
0x0000000000403ff8 : call 0xffffffffe902c94a
0x0000000000406ce9 : call qword ptr [r12 + rbx*8]
0x0000000000407c2f : call qword ptr [rax]
0x0000000000407fe3 : call qword ptr [rsi]
0x0000000000406cea : call qword ptr [rsp + rbx*8]
0x00000000004015dd : call rax
0x0000000000403d4c : call rbx
0x0000000000408183 : call rdi
0x000000000040649a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x000000000040573f : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404c51 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040157f : clc ; jne 0x401588 ; pop rbp ; ret
0x0000000000402a95 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000406c2f : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004023a1 : clc ; pop rbp ; ret
0x00000000004065e6 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405c7b : cld ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405bba : cld ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406c2c : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004065e3 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406586 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405bb7 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040153d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401550 ; pop rbp ; ret
0x0000000000405016 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xffff
0x0000000000404d4c : cwde ; mov rcx, qword ptr [rax*8 + 0x407778] ; jmp rcx
0x000000000040239d : dec dword ptr [rax - 0x75] ; clc ; pop rbp ; ret
0x00000000004061d4 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000401cc2 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000401cbc : dec dword ptr [rbx - 0x1374b] ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000403752 : dec dword ptr [rcx - 0x77] ; ret 0x294d
0x0000000000403ae0 : enter 0x4b05, 0x34 ; fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x0000000000407d1d : fdiv st(7), st(0) ; call rax
0x00000000004087c9 : fdiv st(7), st(0) ; jmp rax
0x0000000000407ced : fdivr st(7) ; call qword ptr [rax]
0x0000000000403ae4 : fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x0000000000406cec : fmul qword ptr [rax - 0x7d] ; ret
0x00000000004016e9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401550 : hlt ; pop rbp ; mov edi, 0x609240 ; jmp rax
0x0000000000408964 : in al, dx ; or al, byte ptr [rax] ; add byte ptr [rax], bh ; loopne 0x408971 ; jmp rdx
0x0000000000403d6b : inc dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000405375 : int 0x80
0x0000000000401543 : ja 0x40154a ; pop rbp ; ret
0x000000000040154f : je 0x40154d ; pop rbp ; mov edi, 0x609240 ; jmp rax
0x00000000004015b6 : jl 0x4015dd ; add byte ptr [rcx], al ; ret
0x00000000004012fb : jmp 0x401197
0x0000000000405848 : jmp 0xffffffffc2c9a052
0x000000000040838b : jmp qword ptr [rax]
0x00000000004031e6 : jmp qword ptr [rcx]
0x000000000040826b : jmp qword ptr [rdx]
0x0000000000401557 : jmp rax
0x0000000000402ca9 : jmp rcx
0x0000000000401597 : jmp rdx
0x0000000000401580 : jne 0x401587 ; pop rbp ; ret
0x000000000040236c : jo 0x4023cd ; ret
0x0000000000402be5 : jo 0x402c46 ; ret
0x000000000040420f : jo 0x404275 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004048b4 : jo 0x404915 ; ret
0x00000000004049ee : jo 0x404a4f ; ret
0x000000000040616a : lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000404ef3 : leave ; ret
0x0000000000408aa1 : loop 0x408aa4 ; call qword ptr [rax]
0x0000000000408969 : loopne 0x40896c ; jmp rdx
0x0000000000405147 : mov al, 0 ; call 0x4013c4
0x000000000040478b : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000404618 : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000407d98 : mov al, 0xc ; add byte ptr [rax], al ; shr dl, -1 ; call rax
0x0000000000406746 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000402461 : mov byte ptr [0x609288], al ; pop rbp ; ret
0x00000000004015b3 : mov byte ptr [rip + 0x207cbe], 1 ; ret
0x0000000000402220 : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402367 : mov dh, -0x40 ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040674c : mov dh, -0x40 ; pop rbp ; ret
0x000000000040243d : mov dword ptr [0x609280], edi ; pop rbp ; ret
0x0000000000402a96 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000402a58 : mov dword ptr [rax], eax ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000402914 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000402a57 : mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040500f : mov dword ptr [rbp - 0x110], eax ; call 0x4012c8
0x00000000004050b4 : mov dword ptr [rbp - 0x130], eax ; call 0x4012c8
0x00000000004017c9 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004016e7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406c2d : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402b0e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405143 : mov dword ptr [rsp + 0x20], ebx ; mov al, 0 ; call 0x4013c8
0x00000000004028c8 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040565b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004026b3 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004028c5 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000402423 : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405953 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040287d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040290e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000402a5a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000402bdf : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000404789 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004065e4 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405c79 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405bb8 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040573d : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404c4f : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040239f : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004015db : mov ebp, esp ; call rax
0x0000000000401541 : mov ebp, esp ; ja 0x40154c ; pop rbp ; ret
0x000000000040538d : mov ecx, 0x5b2a830a ; ret
0x0000000000402ca2 : mov ecx, dword ptr [rax*8 + 0x407270] ; jmp rcx
0x0000000000402fc6 : mov ecx, dword ptr [rax*8 + 0x4072b8] ; jmp rcx
0x0000000000404d4e : mov ecx, dword ptr [rax*8 + 0x407778] ; jmp rcx
0x0000000000402911 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004015d5 : mov edi, 0x608e20 ; mov rbp, rsp ; call rax
0x0000000000401552 : mov edi, 0x609240 ; jmp rax
0x0000000000401592 : mov edi, 0x609240 ; jmp rdx
0x0000000000406ce7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000406ce6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x00000000004015b5 : mov esi, 0x100207c ; ret
0x0000000000401590 : mov esi, eax ; mov edi, 0x609240 ; jmp rdx
0x00000000004015d7 : mov fs, word ptr [rax] ; mov rbp, rsp ; call rax
0x000000000040243c : mov qword ptr [0x609280], rdi ; pop rbp ; ret
0x000000000040500e : mov qword ptr [rbp - 0x110], rax ; call 0x4012c9
0x00000000004050b3 : mov qword ptr [rbp - 0x130], rax ; call 0x4012c9
0x0000000000402b0d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405142 : mov qword ptr [rsp + 0x20], rbx ; mov al, 0 ; call 0x4013c9
0x000000000040478a : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040565a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004026b2 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004028c4 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000402422 : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405952 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040287c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402bde : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000404788 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040573c : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404c4e : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040239e : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004015da : mov rbp, rsp ; call rax
0x0000000000401540 : mov rbp, rsp ; ja 0x40154d ; pop rbp ; ret
0x0000000000402ca1 : mov rcx, qword ptr [rax*8 + 0x407270] ; jmp rcx
0x0000000000402fc5 : mov rcx, qword ptr [rax*8 + 0x4072b8] ; jmp rcx
0x0000000000404d4d : mov rcx, qword ptr [rax*8 + 0x407778] ; jmp rcx
0x000000000040158f : mov rsi, rax ; mov edi, 0x609240 ; jmp rdx
0x000000000040221f : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402366 : movzx eax, al ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040674b : movzx eax, al ; pop rbp ; ret
0x0000000000406d08 : nop dword ptr [rax + rax] ; ret
0x000000000040332d : or al, 0x18 ; ret 0x6451
0x0000000000407d19 : or al, byte ptr [rax] ; add byte ptr [rax], ah ; fdiv st(7), st(0) ; call rax
0x0000000000408965 : or al, byte ptr [rax] ; add byte ptr [rax], bh ; loopne 0x408970 ; jmp rdx
0x00000000004087c5 : or dword ptr [rax], eax ; add al, ch ; fdiv st(7), st(0) ; jmp rax
0x0000000000404971 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004087c4 : or qword ptr [rax], r8 ; add al, ch ; fdiv st(7), st(0) ; jmp rax
0x0000000000406cfc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000404211 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406cfe : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000404213 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406d00 : pop r14 ; pop r15 ; ret
0x0000000000403fc3 : pop r14 ; pop rbp ; ret
0x0000000000404215 : pop r15 ; pop rbp ; ret
0x0000000000406d02 : pop r15 ; ret
0x00000000004015b2 : pop rbp ; mov byte ptr [rip + 0x207cbe], 1 ; ret
0x0000000000401551 : pop rbp ; mov edi, 0x609240 ; jmp rax
0x000000000040158e : pop rbp ; mov rsi, rax ; mov edi, 0x609240 ; jmp rdx
0x0000000000406cfb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000406cff : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401545 : pop rbp ; ret
0x0000000000404210 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040520d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403fc2 : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000405391 : pop rbx ; ret
0x0000000000404216 : pop rdi ; pop rbp ; ret
0x0000000000406d03 : pop rdi ; ret
0x0000000000404214 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000406d01 : pop rsi ; pop r15 ; ret
0x0000000000403fc4 : pop rsi ; pop rbp ; ret
0x0000000000405144 : pop rsp ; and al, 0x20 ; mov al, 0 ; call 0x4013c7
0x0000000000406cfd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000404212 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004027fb : push 0x48006092 ; add esp, 0x30 ; pop rbp ; ret
0x0000000000407d17 : push qword ptr [rax + 0x2000000a] ; fdiv st(7), st(0) ; call rax
0x000000000040470e : push rax ; pop rbp ; ret
0x00000000004015d4 : push rbp ; mov edi, 0x608e20 ; mov rbp, rsp ; call rax
0x0000000000401181 : ret
0x00000000004063a2 : ret 0
0x00000000004063b6 : ret 0x148
0x00000000004043ae : ret 0x1b2
0x0000000000401302 : ret 0x207d
0x0000000000402695 : ret 0x2948
0x0000000000403739 : ret 0x294c
0x0000000000403755 : ret 0x294d
0x0000000000402994 : ret 0x5589
0x000000000040332f : ret 0x6451
0x000000000040584c : ret 0x8148
0x0000000000406a6f : ret 0x840
0x0000000000401a27 : ret 0x8840
0x0000000000404d09 : ret 0x8844
0x0000000000405860 : ret 0x8948
0x0000000000403758 : ret 0x8949
0x00000000004038ec : ret 0x89a5
0x000000000040373c : ret 0x8b48
0x00000000004019df : ret 0xb0
0x00000000004063a9 : ret 0xb849
0x0000000000401575 : ret 0xc148
0x0000000000406110 : ret 0xc2f6
0x0000000000403154 : ret 0xca21
0x0000000000404c43 : ret 0xd284
0x000000000040376d : ret 0xde8
0x0000000000403ffc : ret 0xee8
0x00000000004039e8 : ret 0xf180
0x0000000000406103 : ret 0xf280
0x00000000004031ce : ret 0xf281
0x0000000000405017 : ret 0xffff
0x00000000004043b4 : ret 1
0x0000000000406170 : ret 2
0x0000000000402a56 : rol byte ptr [rcx + rcx*4], 1 ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000405370 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000402be0 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x402c4b ; ret
0x000000000040157c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40158b ; pop rbp ; ret
0x0000000000405371 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x000000000040372d : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000403736 : ror byte ptr [rax - 0x77], 1 ; ret 0x294c
0x0000000000402368 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x4023d1 ; ret
0x0000000000402be1 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x402c4a ; ret
0x000000000040157e : sar eax, 1 ; jne 0x401589 ; pop rbp ; ret
0x000000000040157d : sar rax, 1 ; jne 0x40158a ; pop rbp ; ret
0x0000000000407d2c : sbb ch, -1 ; call qword ptr [rax]
0x0000000000407d9c : shr dl, -1 ; call rax
0x0000000000406748 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040538f : sub dword ptr [rdx], 0x5b ; ret
0x0000000000406d51 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000406d50 : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000406d0a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004039d2 : xchg eax, ebp ; ret 0x8840
0x0000000000404c42 : xchg eax, esp ; ret 0xd284
0x000000000040649e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000404707 : xor eax, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x0000000000402a55 : xor eax, edx ; mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
