0x0000000000403b56 : adc byte ptr [rbp - 0x78], al ; ret
0x0000000000405dc9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040a41f : add ah, bh ; ret 0xffff
0x000000000040a22f : add ah, bl ; jo 0x40a236 ; jmp rsp
0x000000000040a43f : add ah, cl ; ret
0x0000000000401ac7 : add al, 0x25 ; ret
0x0000000000401abf : add al, 0x25 ; ret 0x60c2
0x000000000040b047 : add al, bh ; ret
0x0000000000400027 : add al, bl ; ret
0x0000000000408faf : add bl, dh ; ret
0x0000000000403ab0 : add byte ptr [rax + 1], cl ; ret 0x8948
0x000000000040ae23 : add byte ptr [rax + rcx], dh ; add byte ptr [rax], al ; cwde ; mov bh, -1 ; jmp qword ptr [rdx]
0x0000000000405192 : add byte ptr [rax - 0x75], cl ; jge 0x40516e ; call 0x4013e7
0x0000000000406e0d : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000040a22d : add byte ptr [rax], al ; add ah, bl ; jo 0x40a238 ; jmp rsp
0x0000000000400025 : add byte ptr [rax], al ; add al, bl ; ret
0x0000000000408fad : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000403aae : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000405190 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jge 0x405170 ; call 0x4013e9
0x0000000000400023 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bl ; ret
0x0000000000408fab : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000400021 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bl ; ret
0x00000000004036a0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000407c49 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040304c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004036d2 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000408fac : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000403bf4 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8845
0x000000000040546e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000403541 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000403ced : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000402140 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x00000000004036a2 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040b041 : add byte ptr [rax], al ; add byte ptr [rdx + rcx], dl ; add al, bh ; ret
0x00000000004036ce : add byte ptr [rax], al ; add cl, ch ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040867c : add byte ptr [rax], al ; add cl, ch ; ret 2
0x0000000000401cef : add byte ptr [rax], al ; add dh, al ; add al, 0x25 ; ret 0x60c2
0x00000000004035fa : add byte ptr [rax], al ; add dh, dh ; add al, 0x25 ; ret
0x0000000000402517 : add byte ptr [rax], al ; add dh, dh ; add al, 0x25 ; ret 0x60c2
0x0000000000405d91 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405aa0 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004012f3 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000040b046 : add byte ptr [rax], al ; clc ; ret
0x000000000040a41e : add byte ptr [rax], al ; cld ; ret 0xffff
0x000000000040a696 : add byte ptr [rax], al ; cwde ; jb 0x40a69f ; jmp rdx
0x000000000040ae26 : add byte ptr [rax], al ; cwde ; mov bh, -1 ; jmp qword ptr [rdx]
0x000000000040afe6 : add byte ptr [rax], al ; cwde ; ret
0x000000000040a22e : add byte ptr [rax], al ; fdiv qword ptr [rax - 1] ; jmp rsp
0x000000000040a42e : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret
0x000000000040a22a : add byte ptr [rax], al ; jb 0x40a237 ; add byte ptr [rax], al ; fdiv qword ptr [rax - 1] ; jmp rsp
0x0000000000401389 : add byte ptr [rax], al ; jmp 0x401309
0x0000000000407c4b : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000404362 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040304e : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405191 : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x30] ; call 0x4013e8
0x00000000004036d4 : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000406cab : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405a60 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040b042 : add byte ptr [rax], al ; push rsp ; or al, byte ptr [rax] ; add al, bh ; ret
0x000000000040a436 : add byte ptr [rax], al ; pushfq ; ret
0x0000000000408fae : add byte ptr [rax], al ; ret
0x000000000040ae22 : add byte ptr [rax], al ; xor al, 8 ; add byte ptr [rax], al ; cwde ; mov bh, -1 ; jmp qword ptr [rdx]
0x000000000040aba7 : add byte ptr [rax], bh ; mov dl, -1 ; jmp rdx
0x000000000040b327 : add byte ptr [rax], bl ; fcos ; jmp rdx
0x000000000040abe7 : add byte ptr [rax], ch ; mov ch, -1 ; jmp qword ptr [rdx]
0x0000000000406cac : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000405a61 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040a2ef : add byte ptr [rbx + rbx*4 - 1], ch ; call rsp
0x0000000000403bf6 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8845
0x00000000004023b8 : add byte ptr [rcx - 0x7628d639], cl ; ret 0xf229
0x0000000000408e4c : add byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x0000000000401768 : add byte ptr [rcx], al ; ret
0x0000000000408678 : add byte ptr [rdi], cl ; lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000405470 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000403543 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000403cef : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000402142 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x00000000004036a4 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040b043 : add byte ptr [rdx + rcx], dl ; add al, bh ; ret
0x000000000040a22b : add byte ptr [rdx], dh ; add byte ptr [rax], al ; fdiv qword ptr [rax - 1] ; jmp rsp
0x000000000040a36f : add byte ptr [rsp - 1], ch ; call rsp
0x00000000004036d0 : add cl, ch ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000402514 : add cl, ch ; out dx, eax ; add byte ptr [rax], al ; add dh, dh ; add al, 0x25 ; ret 0x60c2
0x000000000040249a : add cl, ch ; outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add dh, dh ; add al, 0x25 ; ret
0x000000000040867e : add cl, ch ; ret 2
0x0000000000403637 : add cl, ch ; xchg eax, esp ; add byte ptr [rax], al ; add dh, dh ; add al, 0x25 ; ret 0x60c2
0x0000000000401ac5 : add dh, al ; add al, 0x25 ; ret
0x0000000000401abd : add dh, al ; add al, 0x25 ; ret 0x60c2
0x000000000040249f : add dh, dh ; add al, 0x25 ; ret
0x0000000000402519 : add dh, dh ; add al, 0x25 ; ret 0x60c2
0x00000000004072e9 : add dword ptr [rax - 0x77], ecx ; ret 0x8148
0x0000000000405d8f : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406caa : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000405a5f : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040249d : add dword ptr [rax], eax ; add dh, dh ; add al, 0x25 ; ret
0x0000000000408d0d : add dword ptr [rax], ecx ; ret 0x840
0x0000000000403753 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401764 : add eax, 0x20ab4e ; add ebx, esi ; ret
0x000000000040867b : add eax, 0xe9000000 ; ret 2
0x000000000040172b : add eax, edx ; sar rax, 1 ; jne 0x40173c ; pop rbp ; ret
0x0000000000401769 : add ebx, esi ; ret
0x0000000000401cec : add ecx, ebp ; wait ; add byte ptr [rax], al ; add dh, al ; add al, 0x25 ; ret 0x60c2
0x00000000004018fb : add esp, 0x10 ; pop rbp ; ret
0x00000000004089ac : add esp, 0x130 ; pop rbp ; ret
0x0000000000406fdc : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000402195 : add esp, 0x20 ; pop rbp ; ret
0x0000000000402705 : add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000401a0d : add esp, 0x30 ; pop rbp ; ret
0x000000000040233b : add esp, 0x40 ; pop rbp ; ret
0x0000000000403abd : add esp, 0x50 ; pop rbp ; ret
0x0000000000404683 : add esp, 0x70 ; pop rbp ; ret
0x00000000004060ba : add esp, 0x90 ; pop rbp ; ret
0x0000000000406e73 : add esp, 0xa0 ; pop rbp ; ret
0x0000000000407be5 : add esp, 0xe0 ; pop rbp ; ret
0x00000000004012f6 : add esp, 8 ; ret
0x000000000040172a : add rax, rdx ; sar rax, 1 ; jne 0x40173d ; pop rbp ; ret
0x00000000004018fa : add rsp, 0x10 ; pop rbp ; ret
0x00000000004089ab : add rsp, 0x130 ; pop rbp ; ret
0x0000000000406fdb : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000402194 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000402704 : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000401a0c : add rsp, 0x30 ; pop rbp ; ret
0x000000000040233a : add rsp, 0x40 ; pop rbp ; ret
0x0000000000403abc : add rsp, 0x50 ; pop rbp ; ret
0x0000000000404682 : add rsp, 0x70 ; pop rbp ; ret
0x00000000004060b9 : add rsp, 0x90 ; pop rbp ; ret
0x0000000000406e72 : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000407be4 : add rsp, 0xe0 ; pop rbp ; ret
0x00000000004012f5 : add rsp, 8 ; ret
0x0000000000403752 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401767 : and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000401ab8 : and eax, 0x60c2c1 ; add dh, al ; add al, 0x25 ; ret 0x60c2
0x0000000000401ac0 : and eax, 0x60c2c2 ; add dh, al ; add al, 0x25 ; ret
0x0000000000403e4f : and eax, 0x6172f0 ; pop rbp ; ret
0x0000000000403e73 : and eax, 0x6172f8 ; pop rbp ; ret
0x00000000004026c0 : call 0x254cb213
0x00000000004026bf : call 0x254cb214
0x0000000000405197 : call 0x4013e2
0x0000000000401881 : call 0x4014e9
0x0000000000405465 : call 0x401682
0x0000000000405406 : call 0x401692
0x0000000000401cd3 : call 0x4017a8
0x0000000000401cd3 : call 0x4017a9
0x0000000000402488 : call 0x4035d9
0x00000000004021b5 : call 0x404119
0x0000000000405a99 : call 0xffffffffe902e3e9
0x0000000000405a98 : call 0xffffffffe902e3ea
0x0000000000408f89 : call qword ptr [r12 + rbx*8]
0x000000000040a63b : call qword ptr [rsi]
0x0000000000408f8a : call qword ptr [rsp + rbx*8]
0x000000000040178d : call rax
0x00000000004057ec : call rbx
0x000000000040ab03 : call rdi
0x000000000040a2f3 : call rsp
0x00000000004089aa : clc ; add rsp, 0x130 ; pop rbp ; ret
0x00000000004071df : clc ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004066f1 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040172f : clc ; jne 0x401738 ; pop rbp ; ret
0x0000000000404535 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000408ecf : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402d9e : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402da2 : clc ; pop rbp ; ret
0x000000000040b048 : clc ; ret
0x0000000000407c48 : cld ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000401927 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407df9 : cld ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407f7e : cld ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402339 : cld ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000407be3 : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x0000000000408ecc : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000407e53 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407df6 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407f7b : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402336 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040a43c : cld ; or eax, dword ptr [rax] ; add ah, cl ; ret
0x0000000000407c4f : cld ; pop rbp ; ret
0x000000000040a420 : cld ; ret 0xffff
0x0000000000401888 : cmp al, 0x25 ; ret 0x4094
0x0000000000402058 : cmp byte ptr [rcx + rbx*4 - 0x7fdafb77], ah ; ret 0x60
0x00000000004016ed : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401700 ; pop rbp ; ret
0x00000000004012f1 : cmp eax, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000040a698 : cwde ; jb 0x40a69d ; jmp rdx
0x000000000040ae28 : cwde ; mov bh, -1 ; jmp qword ptr [rdx]
0x00000000004067ec : cwde ; mov rcx, qword ptr [rax*8 + 0x409d28] ; jmp rcx
0x000000000040afe8 : cwde ; ret
0x0000000000401885 : dec dword ptr [rax - 0x73] ; cmp al, 0x25 ; ret 0x4094
0x00000000004086e4 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000401cbd : dec dword ptr [rax - 0x77] ; ret 0x8d8b
0x00000000004051f2 : dec dword ptr [rcx - 0x77] ; ret 0x294d
0x0000000000405580 : enter 0x4b05, 0x34 ; fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x000000000040b329 : fcos ; jmp rdx
0x000000000040a230 : fdiv qword ptr [rax - 1] ; jmp rsp
0x0000000000405584 : fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x0000000000402d8c : fmul dword ptr [rax + 0x29] ; ret 0x2948
0x0000000000408f8c : fmul qword ptr [rax - 0x7d] ; ret
0x000000000040a434 : fmul qword ptr [rbx] ; add byte ptr [rax], al ; pushfq ; ret
0x00000000004018f9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004031fd : hlt ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401700 : hlt ; pop rbp ; mov edi, 0x60c260 ; jmp rax
0x0000000000407d0c : in al, dx ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004034a6 : inc dword ptr [rax - 0x77ba4f0f] ; ret 0x8041
0x000000000040213c : inc dword ptr [rcx + 0x20f9] ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x000000000040580b : inc dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000401cd7 : inc esi ; add al, 0x25 ; ret
0x000000000040a430 : insb byte ptr [rdi], dx ; ret
0x0000000000406e15 : int 0x80
0x00000000004034a5 : int1 ; inc dword ptr [rax - 0x77ba4f0f] ; ret 0x8041
0x00000000004016f3 : ja 0x4016fa ; pop rbp ; ret
0x000000000040a22c : jb 0x40a235 ; add byte ptr [rax], al ; fdiv qword ptr [rax - 1] ; jmp rsp
0x000000000040a699 : jb 0x40a69c ; jmp rdx
0x00000000004016ff : je 0x4016fd ; pop rbp ; mov edi, 0x60c260 ; jmp rax
0x0000000000405195 : jge 0x40516b ; call 0x4013e4
0x0000000000402922 : jl 0x402927 ; ret 0xea81
0x000000000040a41c : jl 0x40a42e ; add byte ptr [rax], al ; cld ; ret 0xffff
0x000000000040138b : jmp 0x401307
0x0000000000401ced : jmp 0x401d95
0x0000000000401ce0 : jmp 0x401d96
0x0000000000402515 : jmp 0x402611
0x000000000040249b : jmp 0x402616
0x000000000040249b : jmp 0x402617
0x0000000000403638 : jmp 0x4036d9
0x00000000004035f8 : jmp 0x4036de
0x00000000004035f8 : jmp 0x4036df
0x00000000004072e8 : jmp 0xffffffffc2c9baf2
0x00000000004026df : jmp qword ptr [rax]
0x0000000000404c86 : jmp qword ptr [rcx]
0x000000000040abeb : jmp qword ptr [rdx]
0x0000000000401707 : jmp rax
0x0000000000401c80 : jmp rcx
0x0000000000401747 : jmp rdx
0x000000000040a233 : jmp rsp
0x0000000000401730 : jne 0x401737 ; pop rbp ; ret
0x000000000040a639 : jno 0x40a63c ; call qword ptr [rsi]
0x0000000000402fe6 : jnp 0x402f6b ; jmp qword ptr [rax]
0x0000000000404685 : jo 0x4046e6 ; ret
0x0000000000405caf : jo 0x405d15 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406354 : jo 0x4063b5 ; ret
0x000000000040648e : jo 0x4064ef ; ret
0x000000000040a231 : jo 0x40a234 ; jmp rsp
0x000000000040867a : lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x000000000040545f : lea edi, dword ptr [rbp - 0x98] ; call 0x401688
0x000000000040545e : lea rdi, qword ptr [rbp - 0x98] ; call 0x401689
0x0000000000402b06 : loopne 0x402b56 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000402b05 : loopne 0x402b57 ; add esp, 0x20 ; pop rbp ; ret
0x00000000004040fb : loopne 0x40414b ; add esp, 0x20 ; pop rbp ; ret
0x00000000004040fa : loopne 0x40414c ; add esp, 0x20 ; pop rbp ; ret
0x0000000000407be7 : loopne 0x407bee ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040622b : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004060b8 : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x00000000004027c2 : mov al, 1 ; ret 0xea81
0x000000000040374f : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040ae29 : mov bh, -1 ; jmp qword ptr [rdx]
0x0000000000403e71 : mov byte ptr [0x6172f8], al ; pop rbp ; ret
0x0000000000401763 : mov byte ptr [rip + 0x20ab4e], 1 ; ret
0x000000000040abe9 : mov ch, -1 ; jmp qword ptr [rdx]
0x0000000000402702 : mov dh, -0x40 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000403755 : mov dh, -0x40 ; pop rbp ; ret
0x000000000040ad09 : mov dh, -1 ; jmp qword ptr [rax]
0x000000000040aba9 : mov dl, -1 ; jmp rdx
0x000000000040028e : mov ds, eax ; ret
0x0000000000403e4d : mov dword ptr [0x6172f0], edi ; pop rbp ; ret
0x0000000000404536 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004044f8 : mov dword ptr [rax], eax ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004043b4 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004044f7 : mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000402b04 : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401a09 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004018f7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401925 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408ecd : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402d9c : mov dword ptr [rbp - 8], eax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004045ae : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402996 : mov dword ptr [rcx + 8], eax ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000404368 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004070fb : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004040c3 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404365 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000403051 : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000407d0a : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004073f3 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040431d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004043ae : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004044fa : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040467f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000406229 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000403e18 : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004031fb : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000407e54 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407df7 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407f7c : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402337 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000407c4d : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004071dd : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004066ef : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402da0 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000400289 : mov ebp, 0x6394192a ; mov ds, eax ; ret
0x0000000000405401 : mov ebp, 0xffffff64 ; call 0x401697
0x0000000000405460 : mov ebp, 0xffffff68 ; call 0x401687
0x000000000040178b : mov ebp, esp ; call rax
0x00000000004016f1 : mov ebp, esp ; ja 0x4016fc ; pop rbp ; ret
0x0000000000406e2d : mov ecx, 0x5b2a830a ; ret
0x0000000000401c79 : mov ecx, dword ptr [rax*8 + 0x409000] ; jmp rcx
0x0000000000404742 : mov ecx, dword ptr [rax*8 + 0x409820] ; jmp rcx
0x0000000000404a66 : mov ecx, dword ptr [rax*8 + 0x409868] ; jmp rcx
0x00000000004067ee : mov ecx, dword ptr [rax*8 + 0x409d28] ; jmp rcx
0x000000000040797e : mov ecx, dword ptr [rax*8 + 0x40a0a0] ; jmp rcx
0x00000000004078fe : mov ecx, dword ptr [rax*8 + 0x40a100] ; jmp rcx
0x00000000004043b1 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401785 : mov edi, 0x60be20 ; mov rbp, rsp ; call rax
0x0000000000401702 : mov edi, 0x60c260 ; jmp rax
0x0000000000401742 : mov edi, 0x60c260 ; jmp rdx
0x0000000000405194 : mov edi, dword ptr [rbp - 0x30] ; call 0x4013e5
0x0000000000405400 : mov edi, dword ptr [rbp - 0x9c] ; call 0x401698
0x0000000000408f87 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000408f86 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000401740 : mov esi, eax ; mov edi, 0x60c260 ; jmp rdx
0x000000000040a42c : mov esp, 0x6c00000b ; ret
0x000000000040a418 : mov esp, 0x7cffffc2 ; or eax, dword ptr [rax] ; add ah, bh ; ret 0xffff
0x0000000000403e4c : mov qword ptr [0x6172f0], rdi ; pop rbp ; ret
0x0000000000402d9b : mov qword ptr [rbp - 8], rax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004045ad : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040622a : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004070fa : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004040c2 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404364 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000403050 : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004073f2 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040431c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040467e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000406228 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004071dc : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004066ee : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402d9f : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040178a : mov rbp, rsp ; call rax
0x00000000004016f0 : mov rbp, rsp ; ja 0x4016fd ; pop rbp ; ret
0x0000000000401c78 : mov rcx, qword ptr [rax*8 + 0x409000] ; jmp rcx
0x0000000000404741 : mov rcx, qword ptr [rax*8 + 0x409820] ; jmp rcx
0x0000000000404a65 : mov rcx, qword ptr [rax*8 + 0x409868] ; jmp rcx
0x00000000004067ed : mov rcx, qword ptr [rax*8 + 0x409d28] ; jmp rcx
0x000000000040797d : mov rcx, qword ptr [rax*8 + 0x40a0a0] ; jmp rcx
0x00000000004078fd : mov rcx, qword ptr [rax*8 + 0x40a100] ; jmp rcx
0x0000000000405193 : mov rdi, qword ptr [rbp - 0x30] ; call 0x4013e6
0x000000000040173f : mov rsi, rax ; mov edi, 0x60c260 ; jmp rdx
0x0000000000407ce0 : movabs dword ptr [0x941c90941f0213f], eax ; ret 0x3145
0x0000000000402701 : movzx eax, al ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000403754 : movzx eax, al ; pop rbp ; ret
0x0000000000408fa8 : nop dword ptr [rax + rax] ; ret
0x0000000000404dcd : or al, 0x18 ; ret 0x6451
0x000000000040b045 : or al, byte ptr [rax] ; add al, bh ; ret
0x000000000040b025 : or al, byte ptr [rax] ; add al, bl ; ret
0x000000000040a36d : or byte ptr [rax], al ; add byte ptr [rsp - 1], ch ; call rsp
0x000000000040290d : or byte ptr [rcx - 0x7628d639], cl ; ret 0xf229
0x000000000040a41d : or eax, dword ptr [rax] ; add ah, bh ; ret 0xffff
0x000000000040a43d : or eax, dword ptr [rax] ; add ah, cl ; ret
0x0000000000406411 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004028ad : or edx, dword ptr [rdx + 0x294868c3] ; ret 0x8948
0x000000000040289c : out 0xb, al ; xchg eax, edx ; ret
0x0000000000402516 : out dx, eax ; add byte ptr [rax], al ; add dh, dh ; add al, 0x25 ; ret 0x60c2
0x000000000040249c : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add dh, dh ; add al, 0x25 ; ret
0x0000000000408f9c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000403d79 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000408f9e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000403d7b : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000408fa0 : pop r14 ; pop r15 ; ret
0x0000000000405a63 : pop r14 ; pop rbp ; ret
0x0000000000403d7d : pop r15 ; pop rbp ; ret
0x0000000000408fa2 : pop r15 ; ret
0x0000000000401762 : pop rbp ; mov byte ptr [rip + 0x20ab4e], 1 ; ret
0x0000000000401701 : pop rbp ; mov edi, 0x60c260 ; jmp rax
0x000000000040173e : pop rbp ; mov rsi, rax ; mov edi, 0x60c260 ; jmp rdx
0x0000000000408f9b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000408f9f : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004016f5 : pop rbp ; ret
0x0000000000403d78 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406cad : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405a62 : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000402708 : pop rbx ; pop rbp ; ret
0x0000000000406e31 : pop rbx ; ret
0x0000000000403d7e : pop rdi ; pop rbp ; ret
0x0000000000408fa3 : pop rdi ; ret
0x0000000000403d7c : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000408fa1 : pop rsi ; pop r15 ; ret
0x0000000000405a64 : pop rsi ; pop rbp ; ret
0x0000000000408f9d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000403d7a : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403b55 : push rax ; adc byte ptr [rbp - 0x78], al ; ret
0x0000000000403abf : push rax ; pop rbp ; ret
0x0000000000402d8b : push rbp ; fmul dword ptr [rax + 0x29] ; ret 0x2948
0x0000000000401784 : push rbp ; mov edi, 0x60be20 ; mov rbp, rsp ; call rax
0x00000000004027c0 : push rcx ; mov al, 1 ; ret 0xea81
0x000000000040b044 : push rsp ; or al, byte ptr [rax] ; add al, bh ; ret
0x000000000040a438 : pushfq ; ret
0x0000000000400029 : ret
0x00000000004088b2 : ret 0
0x00000000004088c6 : ret 0x148
0x0000000000405e4e : ret 0x1b2
0x0000000000401592 : ret 0x20ab
0x0000000000401392 : ret 0x20ac
0x0000000000402d8f : ret 0x2948
0x00000000004051d9 : ret 0x294c
0x00000000004051f5 : ret 0x294d
0x0000000000407ce9 : ret 0x3145
0x000000000040188a : ret 0x4094
0x0000000000401ed0 : ret 0x43f5
0x000000000040291e : ret 0x5060
0x00000000004027be : ret 0x5161
0x0000000000402145 : ret 0x5588
0x0000000000404434 : ret 0x5589
0x0000000000400871 : ret 0x60
0x0000000000401ac1 : ret 0x60c2
0x0000000000402f3a : ret 0x6348
0x0000000000404dcf : ret 0x6451
0x000000000040520d : ret 0x7de8
0x00000000004034ac : ret 0x8041
0x0000000000407b09 : ret 0x8141
0x00000000004072ec : ret 0x8148
0x0000000000408d0f : ret 0x840
0x0000000000405473 : ret 0x8840
0x0000000000402694 : ret 0x8841
0x00000000004034d5 : ret 0x8844
0x0000000000403bfa : ret 0x8845
0x00000000004028b3 : ret 0x8948
0x00000000004051f8 : ret 0x8949
0x000000000040538c : ret 0x89a5
0x00000000004051dc : ret 0x8b48
0x0000000000401cc0 : ret 0x8d8b
0x0000000000402e1a : ret 0xb60f
0x00000000004028a6 : ret 0xb848
0x00000000004088b9 : ret 0xb849
0x0000000000400287 : ret 0xbd3c
0x0000000000407b49 : ret 0xc131
0x0000000000401725 : ret 0xc148
0x0000000000408620 : ret 0xc2f6
0x0000000000403019 : ret 0xc55c
0x0000000000404bf4 : ret 0xca21
0x00000000004020c7 : ret 0xca29
0x00000000004026e1 : ret 0xd088
0x0000000000403546 : ret 0xd284
0x0000000000403718 : ret 0xd2d5
0x0000000000402d5b : ret 0xd601
0x0000000000407bc5 : ret 0xd709
0x0000000000403cf2 : ret 0xe280
0x00000000004027c4 : ret 0xea81
0x0000000000405a9c : ret 0xee8
0x0000000000405488 : ret 0xf180
0x00000000004023be : ret 0xf229
0x0000000000403d38 : ret 0xf280
0x0000000000404c6e : ret 0xf281
0x0000000000402b2b : ret 0xfa29
0x0000000000403b0e : ret 0xfd39
0x0000000000405199 : ret 0xffff
0x0000000000405e54 : ret 1
0x0000000000403013 : ret 2
0x00000000004044f6 : rol byte ptr [rcx + rcx*4], 1 ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000403b52 : rol dword ptr [rdx + rcx*4 + 0x50], 1 ; adc byte ptr [rbp - 0x78], al ; ret
0x0000000000406e10 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000404680 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x4046eb ; ret
0x000000000040172c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40173b ; pop rbp ; ret
0x0000000000406e11 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x00000000004051cd : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x00000000004051d6 : ror byte ptr [rax - 0x77], 1 ; ret 0x294c
0x0000000000404681 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x4046ea ; ret
0x0000000000402703 : ror byte ptr [rax - 0x7d], -0x3c ; sub byte ptr [rbx + 0x5d], bl ; ret
0x000000000040218a : ror dword ptr [rcx + 0x253489ce], -0x28 ; ret 0x60
0x000000000040172e : sar eax, 1 ; jne 0x401739 ; pop rbp ; ret
0x000000000040172d : sar rax, 1 ; jne 0x40173a ; pop rbp ; ret
0x000000000040b040 : sbb al, 0 ; add byte ptr [rax], al ; push rsp ; or al, byte ptr [rax] ; add al, bh ; ret
0x0000000000405196 : shr al, 1 ; ret 0xffff
0x0000000000403751 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401766 : stosd dword ptr [rdi], eax ; and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000401765 : stosq qword ptr [rdi], rax ; and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000402707 : sub byte ptr [rbx + 0x5d], bl ; ret
0x0000000000406e2f : sub dword ptr [rdx], 0x5b ; ret
0x0000000000402899 : sub eax, 0xbe6bdd5 ; xchg eax, edx ; ret
0x0000000000408fdd : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000408fdc : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000408faa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000401cee : wait ; add byte ptr [rax], al ; add dh, al ; add al, 0x25 ; ret 0x60c2
0x0000000000405472 : xchg eax, ebp ; ret 0x8840
0x0000000000403bf9 : xchg eax, ebp ; ret 0x8845
0x0000000000403545 : xchg eax, ebp ; ret 0xd284
0x0000000000403cf1 : xchg eax, ebp ; ret 0xe280
0x000000000040289e : xchg eax, edx ; ret
0x0000000000403639 : xchg eax, esp ; add byte ptr [rax], al ; add dh, dh ; add al, 0x25 ; ret 0x60c2
0x0000000000402144 : xchg eax, esp ; ret 0x5588
0x00000000004036a6 : xchg eax, esp ; ret 0xd284
0x000000000040ae24 : xor al, 8 ; add byte ptr [rax], al ; cwde ; mov bh, -1 ; jmp qword ptr [rdx]
0x0000000000403d77 : xor byte ptr [rbx + 0x41], bl ; pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004089ae : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004061a7 : xor eax, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x00000000004044f5 : xor eax, edx ; mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
