0x000000000040b315 : adc al, byte ptr [rax] ; add ah, bl ; jrcxz 0x40b320 ; call rsp
0x000000000040b355 : adc eax, dword ptr [rax] ; add ah, bl ; out -1, al ; call rsp
0x0000000000405cc9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040b317 : add ah, bl ; jrcxz 0x40b31e ; call rsp
0x000000000040b357 : add ah, bl ; out -1, al ; call rsp
0x0000000000402057 : add al, bpl ; ret 0
0x0000000000402058 : add al, ch ; ret 0
0x0000000000409a1f : add bl, dh ; ret
0x000000000040790d : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000401e8a : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000040279c : add byte ptr [rax - 0x77], cl ; ret 0xdbe8
0x0000000000401eea : add byte ptr [rax - 0x77], cl ; ret 0xdde8
0x000000000040c38f : add byte ptr [rax], ah ; sar edi, cl ; jmp rdx
0x0000000000409a1d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000401e88 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000040279a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xdbe8
0x0000000000401ee8 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xdde8
0x0000000000409a1b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000400470 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400472 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004071e9 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000403e17 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000400474 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040865e : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040249c : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7278b], cl ; ret 0xb0
0x0000000000402d20 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000407039 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xfa81
0x000000000040536e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000406cfd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x5588
0x0000000000402703 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000401fbb : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000408e7c : add byte ptr [rax], al ; add cl, ch ; ret 2
0x0000000000405c91 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004059a0 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004028ac : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004013a3 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000040b1d6 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; mov bl, -1 ; call rsp
0x00000000004014d9 : add byte ptr [rax], al ; jmp 0x4013b9
0x000000000040b196 : add byte ptr [rax], al ; mov cl, -1 ; call rsp
0x00000000004071eb : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000404262 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000403e19 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040b466 : add byte ptr [rax], al ; or byte ptr [rsi - 1], ah ; jmp rdx
0x00000000004034e9 : add byte ptr [rax], al ; pop rbp ; ret
0x00000000004077ab : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405960 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040865f : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000400476 : add byte ptr [rax], al ; ret
0x000000000040b462 : add byte ptr [rax], al ; test byte ptr [rax], al ; add byte ptr [rax], al ; or byte ptr [rsi - 1], ah ; jmp rdx
0x000000000040b217 : add byte ptr [rbp + rsi*4 - 1], bh ; call rsp
0x00000000004077ac : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000405961 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000408660 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040b257 : add byte ptr [rbx + rcx*8 - 1], bh ; call rsp
0x000000000040b1d7 : add byte ptr [rbx + rsi*4 - 1], ch ; call rsp
0x000000000040376b : add byte ptr [rbx - 0x1b74b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040249e : add byte ptr [rbx - 0x76b7278b], cl ; ret 0xb0
0x0000000000402d22 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000040b197 : add byte ptr [rcx + rsi*4 - 1], cl ; call rsp
0x00000000004098bc : add byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x0000000000401848 : add byte ptr [rcx], al ; ret
0x000000000040703b : add byte ptr [rcx], al ; ret 0xfa81
0x0000000000408e78 : add byte ptr [rdi], cl ; lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000405370 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000406cff : add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x5588
0x0000000000402705 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000401fbd : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000408e7e : add cl, ch ; ret 2
0x0000000000407de9 : add dword ptr [rax - 0x77], ecx ; ret 0x8148
0x0000000000405c8f : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004077aa : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040595f : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040977d : add dword ptr [rax], ecx ; ret 0x840
0x0000000000403a0c : add dword ptr [rdi], ecx ; mov dh, -0x3f ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401e68 : add dword ptr [rdi], ecx ; mov dh, -0x3f ; pop rbp ; ret
0x0000000000402024 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402872 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000402e16 : add dword ptr [rdi], ecx ; pushfq ; ret 0xe280
0x0000000000401844 : add eax, 0x20ba86 ; add ebx, esi ; ret
0x0000000000408e7b : add eax, 0xe9000000 ; ret 2
0x000000000040180b : add eax, edx ; sar rax, 1 ; jne 0x40181c ; pop rbp ; ret
0x0000000000401849 : add ebx, esi ; ret
0x0000000000401a6b : add esp, 0x10 ; pop rbp ; ret
0x00000000004091ac : add esp, 0x130 ; pop rbp ; ret
0x0000000000407adc : add esp, 0x1a0 ; pop rbp ; ret
0x00000000004037c6 : add esp, 0x1c0 ; pop rbp ; ret
0x0000000000401e3b : add esp, 0x20 ; pop rbp ; ret
0x0000000000401b4d : add esp, 0x30 ; pop rbp ; ret
0x00000000004023b3 : add esp, 0x50 ; pop rbp ; ret
0x0000000000404583 : add esp, 0x70 ; pop rbp ; ret
0x00000000004034e5 : add esp, 0x80 ; pop rbp ; ret
0x0000000000405fba : add esp, 0x90 ; pop rbp ; ret
0x0000000000407973 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040865b : add esp, 0xc8 ; pop rbx ; pop rbp ; ret
0x00000000004013a6 : add esp, 8 ; ret
0x000000000040180a : add rax, rdx ; sar rax, 1 ; jne 0x40181d ; pop rbp ; ret
0x0000000000401a6a : add rsp, 0x10 ; pop rbp ; ret
0x00000000004091ab : add rsp, 0x130 ; pop rbp ; ret
0x0000000000407adb : add rsp, 0x1a0 ; pop rbp ; ret
0x00000000004037c5 : add rsp, 0x1c0 ; pop rbp ; ret
0x0000000000401e3a : add rsp, 0x20 ; pop rbp ; ret
0x0000000000401b4c : add rsp, 0x30 ; pop rbp ; ret
0x00000000004023b2 : add rsp, 0x50 ; pop rbp ; ret
0x0000000000404582 : add rsp, 0x70 ; pop rbp ; ret
0x00000000004034e4 : add rsp, 0x80 ; pop rbp ; ret
0x0000000000405fb9 : add rsp, 0x90 ; pop rbp ; ret
0x0000000000407972 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040865a : add rsp, 0xc8 ; pop rbx ; pop rbp ; ret
0x00000000004013a5 : add rsp, 8 ; ret
0x0000000000402871 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401847 : and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000401e66 : and cl, 1 ; movzx eax, cl ; pop rbp ; ret
0x00000000004033ac : and eax, 0x1482b56 ; ret 0x8148
0x00000000004033c0 : and eax, 0x29482b56 ; ret 0x3948
0x0000000000401d59 : and eax, 0x60d210 ; pop rbp ; ret
0x0000000000403a2f : and eax, 0x60d2e0 ; pop rbp ; ret
0x0000000000403a53 : and eax, 0x60d2e8 ; pop rbp ; ret
0x0000000000407059 : call 0x29722e74
0x0000000000407058 : call 0x29722e75
0x0000000000402007 : call 0x419893
0x0000000000402006 : call 0x419894
0x0000000000405999 : call 0xffffffffe902e2e9
0x0000000000405998 : call 0xffffffffe902e2ea
0x00000000004099f9 : call qword ptr [r12 + rbx*8]
0x000000000040b8eb : call qword ptr [rcx]
0x000000000040b92b : call qword ptr [rsi]
0x00000000004099fa : call qword ptr [rsp + rbx*8]
0x000000000040186d : call rax
0x00000000004056ec : call rbx
0x000000000040bb0b : call rdi
0x000000000040b19b : call rsp
0x00000000004091aa : clc ; add rsp, 0x130 ; pop rbp ; ret
0x0000000000403899 : clc ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004065f1 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004034e3 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x000000000040180f : clc ; jne 0x401818 ; pop rbp ; ret
0x0000000000404435 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040993f : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402c10 : clc ; mov qword ptr [rcx], rax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403010 : clc ; mov qword ptr [rcx], rax ; pop rbp ; ret
0x0000000000402273 : clc ; mov qword ptr [rdi], rsi ; pop rbp ; ret
0x0000000000402f93 : clc ; mov qword ptr [rdx], rax ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004039bb : clc ; mov rax, qword ptr [rdi] ; pop rbp ; ret
0x00000000004039b7 : clc ; mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi] ; pop rbp ; ret
0x0000000000402287 : clc ; pop rbp ; ret
0x00000000004071e8 : cld ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004092f6 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040898b : cld ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004088ca : cld ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406f4c : cld ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401d56 : cld ; mov dword ptr [0x60d210], eax ; pop rbp ; ret
0x000000000040993c : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004092f3 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000409296 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004088c7 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406f49 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004071ef : cld ; pop rbp ; ret
0x00000000004017cd : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4017e0 ; pop rbp ; ret
0x00000000004033ab : cmp esp, dword ptr [rip + 0x1482b56] ; ret 0x8148
0x00000000004033bf : cmp esp, dword ptr [rip + 0x29482b56] ; ret 0x3948
0x00000000004072ec : cwde ; mov rcx, qword ptr [rax*8 + 0x40aa78] ; jmp rcx
0x0000000000408ee4 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000403771 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004050f2 : dec dword ptr [rcx - 0x77] ; ret 0x294d
0x000000000040865d : enter 0, 0 ; pop rbx ; pop rbp ; ret
0x0000000000405480 : enter 0x4b05, 0x34 ; fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x000000000040b2d9 : fdivr st(7) ; call rsp
0x0000000000405484 : fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x0000000000402733 : fmul dword ptr [rax - 0x77] ; iretd ; mov rdx, qword ptr [rbp - 0x28] ; call rax
0x00000000004024a1 : fmul dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000401ca9 : fmul dword ptr [rax - 0x7f] ; ret 8
0x00000000004099fc : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000401a69 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402e22 : hlt ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x00000000004017e0 : hlt ; pop rbp ; mov edi, 0x60d270 ; jmp rax
0x0000000000402e25 : hlt ; pop rbp ; ret
0x0000000000402701 : in al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000402a45 : in al, 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000408781 : in al, dx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402283 : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x000000000040570b : inc dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x000000000040b1d8 : insb byte ptr [rdi], dx ; mov bl, -1 ; call rsp
0x0000000000407915 : int 0x80
0x0000000000402736 : iretd ; mov rdx, qword ptr [rbp - 0x28] ; call rax
0x00000000004017d3 : ja 0x4017da ; pop rbp ; ret
0x00000000004017df : je 0x4017dd ; pop rbp ; mov edi, 0x60d270 ; jmp rax
0x0000000000402272 : jge 0x402272 ; mov qword ptr [rdi], rsi ; pop rbp ; ret
0x0000000000402286 : jge 0x402283 ; pop rbp ; ret
0x0000000000402732 : jge 0x402715 ; mov rdi, rcx ; mov rdx, qword ptr [rbp - 0x28] ; call rax
0x00000000004039ba : jge 0x4039ba ; mov rax, qword ptr [rdi] ; pop rbp ; ret
0x00000000004014db : jmp 0x4013b7
0x0000000000407de8 : jmp 0xffffffffc2c9c5f2
0x00000000004035fb : jmp qword ptr [rax]
0x000000000040be93 : jmp qword ptr [rbx]
0x0000000000404b86 : jmp qword ptr [rcx]
0x000000000040b50b : jmp qword ptr [rdi]
0x000000000040bbf3 : jmp qword ptr [rdx]
0x00000000004017e7 : jmp rax
0x0000000000402554 : jmp rcx
0x0000000000401827 : jmp rdx
0x0000000000401810 : jne 0x401817 ; pop rbp ; ret
0x0000000000402a81 : jne 0x402a5c ; mov rsi, rdx ; mov rdx, qword ptr [rbp - 0x30] ; call rax
0x0000000000402e21 : jne 0x402e1d ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x00000000004013a1 : jnp 0x4013ad ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000404585 : jo 0x4045e6 ; ret
0x0000000000405baf : jo 0x405c15 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406254 : jo 0x4062b5 ; ret
0x000000000040638e : jo 0x4063ef ; ret
0x000000000040b319 : jrcxz 0x40b31c ; call rsp
0x0000000000408e7a : lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000401e67 : loope 0x401e70 ; movzx eax, cl ; pop rbp ; ret
0x000000000040b194 : mov ah, 0xc ; add byte ptr [rax], al ; mov cl, -1 ; call rsp
0x000000000040b1d4 : mov ah, 0xd ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; mov bl, -1 ; call rsp
0x000000000040612b : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000405fb8 : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x000000000040286e : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000409456 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004039a5 : mov al, byte ptr [rbp - 9] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040bb09 : mov bh, bh ; call rdi
0x000000000040b1d9 : mov bl, -1 ; call rsp
0x0000000000403a51 : mov byte ptr [0x60d2e8], al ; pop rbp ; ret
0x0000000000401843 : mov byte ptr [rip + 0x20ba86], 1 ; ret
0x000000000040b219 : mov ch, -1 ; call rsp
0x000000000040b199 : mov cl, -1 ; call rsp
0x0000000000403a0e : mov dh, -0x3f ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401e6a : mov dh, -0x3f ; pop rbp ; ret
0x0000000000402026 : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402874 : mov dh, -0x40 ; pop rbp ; ret
0x0000000000402e1e : mov dh, -0xe ; mov dword ptr [rbp - 0xc], esi ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000401d57 : mov dword ptr [0x60d210], eax ; pop rbp ; ret
0x0000000000403a2d : mov dword ptr [0x60d2e0], edi ; pop rbp ; ret
0x0000000000404436 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004043f8 : mov dword ptr [rax], eax ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004042b4 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004043f7 : mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000401b49 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401a67 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402e20 : mov dword ptr [rbp - 0xc], esi ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x000000000040993d : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402285 : mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x00000000004044ae : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402c12 : mov dword ptr [rcx], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403012 : mov dword ptr [rcx], eax ; pop rbp ; ret
0x0000000000402275 : mov dword ptr [rdi], esi ; pop rbp ; ret
0x0000000000402f95 : mov dword ptr [rdx], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404268 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000402253 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401e37 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040267e : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004023af : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000404265 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000403bff : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040877f : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407ef3 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040421d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004042ae : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000403e1c : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004043fa : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040457f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000406129 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000402e23 : mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x00000000004092f4 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408989 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004088c8 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406f4a : mov eax, dword ptr [rbp - 4] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004071ed : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000403897 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004065ef : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000409940 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004039bd : mov eax, dword ptr [rdi] ; pop rbp ; ret
0x0000000000402d2e : mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040186b : mov ebp, esp ; call rax
0x00000000004017d1 : mov ebp, esp ; ja 0x4017dc ; pop rbp ; ret
0x0000000000402282 : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000040792d : mov ecx, 0x5b2a830a ; ret
0x000000000040254d : mov ecx, dword ptr [rax*8 + 0x409a68] ; jmp rcx
0x0000000000404642 : mov ecx, dword ptr [rax*8 + 0x40a570] ; jmp rcx
0x0000000000404966 : mov ecx, dword ptr [rax*8 + 0x40a5b8] ; jmp rcx
0x00000000004072ee : mov ecx, dword ptr [rax*8 + 0x40aa78] ; jmp rcx
0x00000000004083fc : mov ecx, dword ptr [rax*8 + 0x40adf0] ; jmp rcx
0x0000000000408388 : mov ecx, dword ptr [rax*8 + 0x40ae50] ; jmp rcx
0x00000000004042b1 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040300e : mov ecx, dword ptr [rbp - 8] ; mov qword ptr [rcx], rax ; pop rbp ; ret
0x0000000000401865 : mov edi, 0x60ce20 ; mov rbp, rsp ; call rax
0x00000000004017e2 : mov edi, 0x60d270 ; jmp rax
0x0000000000401822 : mov edi, 0x60d270 ; jmp rdx
0x0000000000402271 : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi], rsi ; pop rbp ; ret
0x00000000004039b9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi] ; pop rbp ; ret
0x0000000000402735 : mov edi, ecx ; mov rdx, qword ptr [rbp - 0x28] ; call rax
0x00000000004099f7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x00000000004099f6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000401846 : mov edx, 0xf3010020 ; ret
0x0000000000402738 : mov edx, dword ptr [rbp - 0x28] ; call rax
0x0000000000402a87 : mov edx, dword ptr [rbp - 0x30] ; call rax
0x000000000040705b : mov esi, 0x1f02931 ; ret 0x5589
0x0000000000401820 : mov esi, eax ; mov edi, 0x60d270 ; jmp rdx
0x0000000000402a84 : mov esi, edx ; mov rdx, qword ptr [rbp - 0x30] ; call rax
0x0000000000408598 : mov esp, dword ptr [rcx] ; ret 0x8941
0x0000000000403a2c : mov qword ptr [0x60d2e0], rdi ; pop rbp ; ret
0x0000000000402284 : mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x00000000004044ad : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402c11 : mov qword ptr [rcx], rax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403011 : mov qword ptr [rcx], rax ; pop rbp ; ret
0x0000000000402274 : mov qword ptr [rdi], rsi ; pop rbp ; ret
0x0000000000402f94 : mov qword ptr [rdx], rax ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040612a : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000402252 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401e36 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040267d : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004023ae : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000404264 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000403bfe : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000407ef2 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040421c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403e1b : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040457e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000406128 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000403896 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004065ee : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004039bc : mov rax, qword ptr [rdi] ; pop rbp ; ret
0x000000000040186a : mov rbp, rsp ; call rax
0x00000000004017d0 : mov rbp, rsp ; ja 0x4017dd ; pop rbp ; ret
0x0000000000402281 : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000040254c : mov rcx, qword ptr [rax*8 + 0x409a68] ; jmp rcx
0x0000000000404641 : mov rcx, qword ptr [rax*8 + 0x40a570] ; jmp rcx
0x0000000000404965 : mov rcx, qword ptr [rax*8 + 0x40a5b8] ; jmp rcx
0x00000000004072ed : mov rcx, qword ptr [rax*8 + 0x40aa78] ; jmp rcx
0x00000000004083fb : mov rcx, qword ptr [rax*8 + 0x40adf0] ; jmp rcx
0x0000000000408387 : mov rcx, qword ptr [rax*8 + 0x40ae50] ; jmp rcx
0x000000000040300d : mov rcx, qword ptr [rbp - 8] ; mov qword ptr [rcx], rax ; pop rbp ; ret
0x0000000000402270 : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi], rsi ; pop rbp ; ret
0x00000000004039b8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi] ; pop rbp ; ret
0x0000000000402734 : mov rdi, rcx ; mov rdx, qword ptr [rbp - 0x28] ; call rax
0x0000000000402737 : mov rdx, qword ptr [rbp - 0x28] ; call rax
0x0000000000402a86 : mov rdx, qword ptr [rbp - 0x30] ; call rax
0x000000000040181f : mov rsi, rax ; mov edi, 0x60d270 ; jmp rdx
0x0000000000402a83 : mov rsi, rdx ; mov rdx, qword ptr [rbp - 0x30] ; call rax
0x0000000000402025 : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402873 : movzx eax, al ; pop rbp ; ret
0x0000000000403a0d : movzx eax, cl ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401e69 : movzx eax, cl ; pop rbp ; ret
0x00000000004039a6 : mul dword ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x00000000004039a7 : mul dword ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x0000000000409a18 : nop dword ptr [rax + rax] ; ret
0x000000000040b195 : or al, 0 ; add byte ptr [rcx + rsi*4 - 1], cl ; call rsp
0x0000000000404ccd : or al, 0x18 ; ret 0x6451
0x0000000000406622 : or al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401fb7 : or byte ptr [rcx + 0x2df9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000040b468 : or byte ptr [rsi - 1], ah ; jmp rdx
0x0000000000406311 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b359 : out -1, al ; call rsp
0x0000000000409a0c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405bb1 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000409a0e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405bb3 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000409a10 : pop r14 ; pop r15 ; ret
0x0000000000405963 : pop r14 ; pop rbp ; ret
0x0000000000405bb5 : pop r15 ; pop rbp ; ret
0x0000000000409a12 : pop r15 ; ret
0x0000000000401842 : pop rbp ; mov byte ptr [rip + 0x20ba86], 1 ; ret
0x00000000004017e1 : pop rbp ; mov edi, 0x60d270 ; jmp rax
0x000000000040181e : pop rbp ; mov rsi, rax ; mov edi, 0x60d270 ; jmp rdx
0x0000000000409a0b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000409a0f : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004017d5 : pop rbp ; ret
0x0000000000405bb0 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004077ad : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405962 : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000408661 : pop rbx ; pop rbp ; ret
0x0000000000407931 : pop rbx ; ret
0x0000000000405bb6 : pop rdi ; pop rbp ; ret
0x0000000000409a13 : pop rdi ; ret
0x0000000000405bb4 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000409a11 : pop rsi ; pop r15 ; ret
0x0000000000405964 : pop rsi ; pop rbp ; ret
0x0000000000409a0d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405bb2 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004023b5 : push rax ; pop rbp ; ret
0x0000000000401ca8 : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 8
0x0000000000401864 : push rbp ; mov edi, 0x60ce20 ; mov rbp, rsp ; call rax
0x0000000000402280 : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x00000000004028ab : push rsi ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004033c1 : push rsi ; sub ecx, dword ptr [rax + 0x29] ; ret 0x3948
0x00000000004033ad : push rsi ; sub ecx, dword ptr [rax + 1] ; ret 0x8148
0x0000000000402e18 : pushfq ; ret 0xe280
0x0000000000400478 : ret
0x000000000040205a : ret 0
0x00000000004090c6 : ret 0x148
0x0000000000406e54 : ret 0x1a46
0x0000000000406b96 : ret 0x1a8
0x0000000000405d4e : ret 0x1b2
0x00000000004016e2 : ret 0x20ba
0x00000000004014e2 : ret 0x20bb
0x0000000000402bc4 : ret 0x2948
0x00000000004050d9 : ret 0x294c
0x00000000004050f5 : ret 0x294d
0x00000000004033c5 : ret 0x3948
0x0000000000406b93 : ret 0x458a
0x0000000000402093 : ret 0x5588
0x0000000000404334 : ret 0x5589
0x0000000000404ccf : ret 0x6451
0x000000000040510d : ret 0x7de8
0x00000000004081d2 : ret 0x8141
0x00000000004033b1 : ret 0x8148
0x000000000040977f : ret 0x840
0x0000000000406b80 : ret 0x840f
0x0000000000402d26 : ret 0x8445
0x0000000000402ef1 : ret 0x850f
0x0000000000405373 : ret 0x8840
0x00000000004072a9 : ret 0x8844
0x000000000040859a : ret 0x8941
0x0000000000402c61 : ret 0x8948
0x00000000004050f8 : ret 0x8949
0x000000000040528c : ret 0x89a5
0x00000000004050dc : ret 0x8b48
0x00000000004071a5 : ret 0xaa60
0x0000000000401cda : ret 0xb0
0x00000000004033a4 : ret 0xb848
0x00000000004090b9 : ret 0xb849
0x0000000000401805 : ret 0xc148
0x000000000040661e : ret 0xc189
0x0000000000408e20 : ret 0xc2f6
0x0000000000404af4 : ret 0xca21
0x0000000000408742 : ret 0xca29
0x0000000000402708 : ret 0xd284
0x000000000040863b : ret 0xd709
0x000000000040279f : ret 0xdbe8
0x0000000000401eed : ret 0xdde8
0x0000000000401fc0 : ret 0xe280
0x00000000004067c3 : ret 0xea81
0x000000000040599c : ret 0xee8
0x0000000000405388 : ret 0xf180
0x0000000000402086 : ret 0xf280
0x0000000000404b6e : ret 0xf281
0x000000000040703d : ret 0xfa81
0x000000000040b239 : ret 0xffff
0x0000000000402b1a : ret 1
0x0000000000408e80 : ret 2
0x0000000000401cac : ret 8
0x00000000004043f6 : rol byte ptr [rcx + rcx*4], 1 ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000401e65 : rol dword ptr [rax - 0x49f0fe1f], -0x3f ; pop rbp ; ret
0x0000000000407910 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000404580 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x4045eb ; ret
0x000000000040180c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40181b ; pop rbp ; ret
0x000000000040300c : ror byte ptr [rax - 0x75], 1 ; clc ; mov qword ptr [rcx], rax ; pop rbp ; ret
0x0000000000407911 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x00000000004050cd : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x00000000004050d6 : ror byte ptr [rax - 0x77], 1 ; ret 0x294c
0x0000000000402a82 : ror byte ptr [rax - 0x77], 1 ; salc ; mov rdx, qword ptr [rbp - 0x30] ; call rax
0x0000000000404581 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x4045ea ; ret
0x0000000000406e52 : sahf ; ret 0x1a46
0x0000000000402a85 : salc ; mov rdx, qword ptr [rbp - 0x30] ; call rax
0x000000000040180e : sar eax, 1 ; jne 0x401819 ; pop rbp ; ret
0x000000000040c391 : sar edi, cl ; jmp rdx
0x000000000040180d : sar rax, 1 ; jne 0x40181a ; pop rbp ; ret
0x0000000000408639 : sbb dword ptr [rcx], esp ; ret 0xd709
0x000000000040419c : shl byte ptr [rax], cl ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004017e4 : shl byte ptr [rax], cl ; jmp rax
0x0000000000401824 : shl byte ptr [rax], cl ; jmp rdx
0x0000000000401d5b : shl byte ptr [rax], cl ; pop rbp ; ret
0x0000000000401fb9 : stc ; sub eax, 0xf000000 ; xchg eax, esp ; ret 0xe280
0x0000000000409458 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040792f : sub dword ptr [rdx], 0x5b ; ret
0x0000000000401fba : sub eax, 0xf000000 ; xchg eax, esp ; ret 0xe280
0x00000000004033c2 : sub ecx, dword ptr [rax + 0x29] ; ret 0x3948
0x00000000004033ae : sub ecx, dword ptr [rax + 1] ; ret 0x8148
0x0000000000409a4d : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000409a4c : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000409a1a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040b464 : test byte ptr [rax], al ; add byte ptr [rax], al ; or byte ptr [rsi - 1], ah ; jmp rdx
0x0000000000401845 : xchg byte ptr [rdx - 0xcfeffe0], bh ; ret
0x0000000000405372 : xchg eax, ebp ; ret 0x8840
0x00000000004028aa : xchg eax, edx ; push rsi ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406d01 : xchg eax, esi ; ret 0x5588
0x0000000000402d25 : xchg eax, esp ; ret 0x8445
0x0000000000402707 : xchg eax, esp ; ret 0xd284
0x0000000000401fbf : xchg eax, esp ; ret 0xe280
0x0000000000401e64 : xchg eax, esp ; rol dword ptr [rax - 0x49f0fe1f], -0x3f ; pop rbp ; ret
0x00000000004033aa : xor al, 0x3b ; and eax, 0x1482b56 ; ret 0x8148
0x00000000004033be : xor al, 0x3b ; and eax, 0x29482b56 ; ret 0x3948
0x00000000004091ae : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004060a7 : xor eax, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x00000000004043f5 : xor eax, edx ; mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
