0x0000000000417c89 : adc byte ptr [rax], al ; add al, al ; cmp edi, edi ; jmp rax
0x0000000000417c59 : adc byte ptr [rax], al ; add byte ptr [rax], al ; xor bh, bh ; jmp qword ptr [rax]
0x0000000000417d0c : adc byte ptr [rdx - 1], al ; jmp rax
0x0000000000414e2f : adc dword ptr [rax - 0x42], ecx ; ret
0x000000000040a059 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040c42d : add al, 0x21 ; ret 0xd709
0x00000000004072c8 : add al, 0x25 ; ret
0x0000000000417c8b : add al, al ; cmp edi, edi ; jmp rax
0x00000000004180cd : add al, byte ptr [rax] ; add byte ptr [rax], dl ; ret
0x0000000000414803 : add al, byte ptr [rax] ; add byte ptr [rcx - 0xdf43], al ; call qword ptr [rax]
0x000000000040ffa7 : add al, ch ; ret
0x00000000004021c8 : add al, ch ; ret 0xfff4
0x000000000041864f : add al, dl ; add bh, bh ; call rdi
0x0000000000418651 : add bh, bh ; call rdi
0x0000000000417627 : add bl, al ; ret 0x40
0x000000000041517f : add bl, dh ; ret
0x0000000000401ebd : add byte ptr [rax + 0x29], cl ; ror dword ptr [rax - 0x77], 0x4d ; loopne 0x401eb8 ; ret
0x00000000004115d4 : add byte ptr [rax + 1], cl ; ret 0xc148
0x0000000000414e43 : add byte ptr [rax - 0x42], cl ; ret
0x00000000004072c5 : add byte ptr [rax - 0x73], cl ; add al, 0x25 ; ret
0x0000000000404291 : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x0000000000405011 : add byte ptr [rax - 0x75], cl ; call 0x4902d969
0x0000000000411da5 : add byte ptr [rax - 0x75], cl ; clc ; mov rsp, rbp ; pop rbp ; ret
0x000000000040489a : add byte ptr [rax - 0x75], cl ; jge 0x40486c ; call rax
0x0000000000404c28 : add byte ptr [rax - 0x75], cl ; jge 0x404c2a ; call rax
0x0000000000412442 : add byte ptr [rax - 0x75], cl ; loopne 0x4124ab ; ret
0x0000000000413349 : add byte ptr [rax - 0x75], cl ; push rbp ; call 0x2103b4a1
0x0000000000406f9c : add byte ptr [rax - 0x75], cl ; push rbp ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4810
0x000000000040b09d : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000413d9f : add byte ptr [rax - 0x77], cl ; fsubr st(1) ; ret 0xffff
0x000000000040f6ba : add byte ptr [rax - 0x77], cl ; ret 0x1de8
0x0000000000402387 : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000040f627 : add byte ptr [rax - 0x77], cl ; ret 0xb0e8
0x0000000000417d0a : add byte ptr [rax], al ; adc byte ptr [rdx - 1], al ; jmp rax
0x000000000040ffa5 : add byte ptr [rax], al ; add al, ch ; ret
0x0000000000417625 : add byte ptr [rax], al ; add bl, al ; ret 0x40
0x000000000041517d : add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004115d2 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0xc148
0x0000000000414e41 : add byte ptr [rax], al ; add byte ptr [rax - 0x42], cl ; ret
0x00000000004072c3 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add al, 0x25 ; ret
0x000000000040428f : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x000000000040500f : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; call 0x4902d96b
0x0000000000412440 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; loopne 0x4124ad ; ret
0x0000000000413347 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbp ; call 0x2103b4a3
0x0000000000406f9a : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbp ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4810
0x0000000000413d9d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fsubr st(1) ; ret 0xffff
0x00000000004029ba : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x0000000000417623 : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, al ; ret 0x40
0x000000000041517b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004005c0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004005c2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040c4b9 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000041243f : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x20] ; pop rbp ; ret
0x00000000004175cc : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rdi ; ret 0x40
0x0000000000417574 : add byte ptr [rax], al ; add byte ptr [rax], al ; push rbx ; ret 0x40
0x00000000004005c4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004175c4 : add byte ptr [rax], al ; add byte ptr [rax], al ; stosb byte ptr [rdi], al ; ret 0x40
0x00000000004175b4 : add byte ptr [rax], al ; add byte ptr [rax], al ; xchg eax, ecx ; ret 0x40
0x00000000004083c6 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040c452 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004125f8 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x0000000000407367 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000402bf4 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x5589
0x00000000004096fe : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x00000000004114f8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x000000000040558d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040d04c : add byte ptr [rax], al ; add cl, ch ; ret 2
0x000000000040a021 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000409d30 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404dc2 : add byte ptr [rax], al ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000401533 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000417d5a : add byte ptr [rax], al ; and byte ptr [rax - 1], dl ; jmp qword ptr [rax]
0x0000000000417d4a : add byte ptr [rax], al ; and byte ptr [rsi - 1], cl ; jmp rax
0x0000000000418ff6 : add byte ptr [rax], al ; call 0xffffffffe3418f92
0x0000000000418cf6 : add byte ptr [rax], al ; cmp dil, dil ; jmp rax
0x000000000041838a : add byte ptr [rax], al ; in al, 4 ; add byte ptr [rax], al ; xor al, 0xfe ; call qword ptr [rax]
0x0000000000401749 : add byte ptr [rax], al ; jmp 0x401549
0x000000000040c4bb : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004085f2 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000412441 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x20] ; pop rbp ; ret
0x0000000000403db0 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040af3b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004083c7 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040c453 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004175ce : add byte ptr [rax], al ; pop rdi ; ret 0x40
0x0000000000417576 : add byte ptr [rax], al ; push rbx ; ret 0x40
0x00000000004005c6 : add byte ptr [rax], al ; ret
0x0000000000417d1a : add byte ptr [rax], al ; ror byte ptr [rdx - 1], 1 ; jmp qword ptr [rax]
0x0000000000417c8a : add byte ptr [rax], al ; sar byte ptr [rcx], -1 ; jmp rax
0x0000000000417c4a : add byte ptr [rax], al ; shr byte ptr [rsi], -1 ; jmp rax
0x00000000004175c6 : add byte ptr [rax], al ; stosb byte ptr [rdi], al ; ret 0x40
0x000000000041836e : add byte ptr [rax], al ; sub dh, -2 ; call qword ptr [rsi]
0x0000000000417bda : add byte ptr [rax], al ; sub edi, edi ; jmp qword ptr [rax]
0x00000000004175b6 : add byte ptr [rax], al ; xchg eax, ecx ; ret 0x40
0x000000000041838e : add byte ptr [rax], al ; xor al, 0xfe ; call qword ptr [rax]
0x0000000000417c5b : add byte ptr [rax], al ; xor bh, bh ; jmp qword ptr [rax]
0x00000000004180cf : add byte ptr [rax], dl ; ret
0x000000000040af3c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004083c8 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040c454 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000403347 : add byte ptr [rbx - 0x11f4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004021dc : add byte ptr [rbx - 0x41f0ff9f], ah ; or dword ptr [rax - 0x77], ecx ; ret 0xb0
0x0000000000404e28 : add byte ptr [rbx - 0x76b70b8b], cl ; ret 0xb0
0x0000000000402384 : add byte ptr [rbx - 0x76b7ff9f], ah ; ret 0xb0
0x0000000000417d18 : add byte ptr [rbx], dl ; add byte ptr [rax], al ; ror byte ptr [rdx - 1], 1 ; jmp qword ptr [rax]
0x00000000004125fa : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x0000000000407369 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000414805 : add byte ptr [rcx - 0xdf43], al ; call qword ptr [rax]
0x00000000004122ec : add byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x0000000000401a48 : add byte ptr [rcx], al ; ret
0x0000000000402bf6 : add byte ptr [rcx], al ; ret 0x5589
0x000000000041756f : add byte ptr [rdi], ah ; ret 0x40
0x000000000040d048 : add byte ptr [rdi], cl ; lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000409700 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x00000000004114fa : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x000000000040558f : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000417bd8 : add byte ptr [rsi], cl ; add byte ptr [rax], al ; sub edi, edi ; jmp qword ptr [rax]
0x000000000041756d : add byte ptr gs:[edi], ah ; ret 0x40
0x000000000041756e : add byte ptr gs:[rdi], ah ; ret 0x40
0x000000000040d04e : add cl, ch ; ret 2
0x00000000004115b5 : add dh, ch ; call 0x4933170c
0x000000000040b579 : add dword ptr [rax - 0x77], ecx ; ret 0x8148
0x000000000040a01f : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040af3a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000409cef : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x00000000004149f2 : add dword ptr [rax], eax ; add byte ptr [rcx - 0xdf43], al ; call qword ptr [rax]
0x00000000004121ad : add dword ptr [rax], ecx ; ret 0x840
0x0000000000404737 : add dword ptr [rbp + 8], eax ; ror dword ptr [rax], cl ; fadd dword ptr [rcx + 0x30] ; ret
0x00000000004045d7 : add dword ptr [rcx + 0x20], eax ; ret 0x845
0x000000000040484e : add dword ptr [rdi + rcx - 0x4a], eax ; fisttp dword ptr [rcx + 0x63] ; ret
0x0000000000404586 : add dword ptr [rdi + rcx - 0x4a], eax ; ret 0x634d
0x000000000040bccb : add dword ptr [rdi + rdi*8 - 1], ebx ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000403ab4 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040378a : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000411df4 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404ad6 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000405eb9 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401a44 : add eax, 0x2188ce ; add ebx, esi ; ret
0x000000000040db60 : add eax, 0x8301148b ; ret 0x89ee
0x000000000040ffa4 : add eax, 0xe8000000 ; ret
0x000000000040d04b : add eax, 0xe9000000 ; ret 2
0x0000000000401a0b : add eax, edx ; sar rax, 1 ; jne 0x401a1c ; pop rbp ; ret
0x0000000000401a49 : add ebx, esi ; ret
0x00000000004023a5 : add ecx, ebp ; ret 5
0x0000000000404208 : add ecx, edx ; mov rdi, rcx ; call rax
0x0000000000401ccb : add esp, 0x10 ; pop rbp ; ret
0x000000000040d37c : add esp, 0x130 ; pop rbp ; ret
0x0000000000405da5 : add esp, 0x190 ; pop rbp ; ret
0x000000000040b26c : add esp, 0x1a0 ; pop rbp ; ret
0x00000000004132f4 : add esp, 0x1b8 ; pop rbp ; ret
0x0000000000415101 : add esp, 0x1c0 ; pop rbp ; ret
0x000000000040378f : add esp, 0x20 ; pop rbp ; ret
0x0000000000403dac : add esp, 0x20c0 ; pop rbp ; ret
0x0000000000401ddd : add esp, 0x30 ; pop rbp ; ret
0x0000000000404adb : add esp, 0x40 ; pop rbp ; ret
0x000000000040813a : add esp, 0x40 ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040757a : add esp, 0x50 ; pop rbp ; ret
0x000000000040491f : add esp, 0x58 ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000404dc5 : add esp, 0x60 ; pop rbp ; ret
0x0000000000407e48 : add esp, 0x60 ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000403629 : add esp, 0x70 ; pop rbp ; ret
0x00000000004073fe : add esp, 0x80 ; pop rbp ; ret
0x000000000040c9a3 : add esp, 0x820 ; pop rbp ; ret
0x00000000004043cb : add esp, 0x90 ; pop rbp ; ret
0x0000000000406e35 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040c44f : add esp, 0xd8 ; pop rbx ; pop rbp ; ret
0x0000000000407031 : add esp, 0xe0 ; pop rbp ; ret
0x0000000000401536 : add esp, 8 ; ret
0x00000000004021c7 : add r8b, bpl ; ret 0xfff4
0x0000000000401a0a : add rax, rdx ; sar rax, 1 ; jne 0x401a1d ; pop rbp ; ret
0x0000000000404207 : add rcx, rdx ; mov rdi, rcx ; call rax
0x0000000000401cca : add rsp, 0x10 ; pop rbp ; ret
0x000000000040d37b : add rsp, 0x130 ; pop rbp ; ret
0x0000000000405da4 : add rsp, 0x190 ; pop rbp ; ret
0x000000000040b26b : add rsp, 0x1a0 ; pop rbp ; ret
0x00000000004132f3 : add rsp, 0x1b8 ; pop rbp ; ret
0x0000000000415100 : add rsp, 0x1c0 ; pop rbp ; ret
0x000000000040378e : add rsp, 0x20 ; pop rbp ; ret
0x0000000000403dab : add rsp, 0x20c0 ; pop rbp ; ret
0x0000000000401ddc : add rsp, 0x30 ; pop rbp ; ret
0x0000000000404ada : add rsp, 0x40 ; pop rbp ; ret
0x0000000000408139 : add rsp, 0x40 ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000407579 : add rsp, 0x50 ; pop rbp ; ret
0x0000000000404dc4 : add rsp, 0x60 ; pop rbp ; ret
0x0000000000407e47 : add rsp, 0x60 ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000403628 : add rsp, 0x70 ; pop rbp ; ret
0x00000000004073fd : add rsp, 0x80 ; pop rbp ; ret
0x000000000040c9a2 : add rsp, 0x820 ; pop rbp ; ret
0x00000000004043ca : add rsp, 0x90 ; pop rbp ; ret
0x0000000000406e34 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040c44e : add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x0000000000407030 : add rsp, 0xe0 ; pop rbp ; ret
0x0000000000401535 : add rsp, 8 ; ret
0x0000000000405eb8 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000404cca : and byte ptr [r9 + rcx*4 - 0x3f], cl ; mov r8d, r10d ; call rax
0x0000000000417d5c : and byte ptr [rax - 1], dl ; jmp qword ptr [rax]
0x000000000040c9a5 : and byte ptr [rax], cl ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000417569 : and byte ptr [rcx + 0x72], ch ; add byte ptr gs:[edi], ah ; ret 0x40
0x000000000040526d : and byte ptr [rcx + rax*2], dl ; jmp rcx
0x0000000000404ccb : and byte ptr [rcx + rcx*4 - 0x3f], cl ; mov r8d, r10d ; call rax
0x0000000000417d4c : and byte ptr [rsi - 1], cl ; jmp rax
0x0000000000401a47 : and dword ptr [rax], eax ; add ebx, esi ; ret
0x00000000004053ca : and eax, 0x4168b1 ; call 0x401697
0x000000000040544e : and eax, 0x4168c8 ; call 0x401697
0x0000000000404896 : and eax, 0x61a3b0 ; mov rdi, qword ptr [rbp - 0x38] ; call rax
0x0000000000404c24 : and eax, 0x61a3b0 ; mov rdi, qword ptr [rbp - 8] ; call rax
0x00000000004023a0 : and eax, 0x61a3c0 ; add ecx, ebp ; ret 5
0x00000000004078ef : and eax, 0x61a430 ; pop rbp ; ret
0x0000000000407913 : and eax, 0x61a438 ; pop rbp ; ret
0x000000000040d3ee : and edx, eax ; or r8d, edx ; mov dword ptr [rdi], r8d ; pop rbp ; ret
0x000000000041334d : call 0x2103b49d
0x0000000000403f73 : call 0x36c0c6
0x00000000004053cf : call 0x401692
0x0000000000405660 : call 0x401932
0x0000000000414e2c : call 0x4852d97f
0x0000000000414e2b : call 0x4852d980
0x0000000000405015 : call 0x4902d965
0x0000000000405014 : call 0x4902d966
0x00000000004052af : call 0x4902dbff
0x00000000004052ae : call 0x4902dc00
0x00000000004115b7 : call 0x4933170a
0x0000000000418ff8 : call 0xffffffffe3418f90
0x0000000000409d29 : call 0xffffffffe9032679
0x0000000000409d28 : call 0xffffffffe903267a
0x0000000000404252 : call 0xffffffffff4083ae
0x0000000000415159 : call qword ptr [r12 + rbx*8]
0x0000000000414714 : call qword ptr [rax]
0x0000000000414ac4 : call qword ptr [rbx]
0x00000000004149eb : call qword ptr [rcx]
0x0000000000414a7c : call qword ptr [rdx]
0x0000000000414a2c : call qword ptr [rsi]
0x000000000041515a : call qword ptr [rsp + rbx*8]
0x0000000000401a6d : call rax
0x0000000000409a7c : call rbx
0x0000000000418653 : call rdi
0x000000000040d37a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x000000000040b46f : clc ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004078d6 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000407824 : clc ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000407578 : clc ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000404c2c : clc ; call rax
0x000000000040c858 : clc ; idiv edi ; call rax
0x0000000000401a0f : clc ; jne 0x401a18 ; pop rbp ; ret
0x000000000040363a : clc ; mov byte ptr [rbp - 9], al ; pop rbp ; ret
0x00000000004087c5 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000041236f : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000411da9 : clc ; mov rsp, rbp ; pop rbp ; ret
0x00000000004051dd : clc ; pop rbp ; ret
0x000000000040c4b8 : cld ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000401cf7 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004132f2 : cld ; add rsp, 0x1b8 ; pop rbp ; ret
0x00000000004150ff : cld ; add rsp, 0x1c0 ; pop rbp ; ret
0x000000000040c619 : cld ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040c79e : cld ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040c9a1 : cld ; add rsp, 0x820 ; pop rbp ; ret
0x000000000041236c : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040c673 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040c616 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040c79b : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041264a : cld ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040c4bf : cld ; pop rbp ; ret
0x0000000000414802 : cli ; add al, byte ptr [rax] ; add byte ptr [rcx - 0xdf43], al ; call qword ptr [rax]
0x000000000040544d : cmp al, 0x25 ; enter 0x4168, 0 ; call 0x401698
0x00000000004021c3 : cmp al, 0x25 ; movsd dword ptr [rdi], dword ptr [rsi] ; add r8b, bpl ; ret 0xfff4
0x0000000000404294 : cmp al, 0x25 ; ret
0x0000000000417c9d : cmp bh, bh ; jmp qword ptr [rax]
0x0000000000418cf9 : cmp bh, bh ; jmp rax
0x00000000004137f0 : cmp byte ptr [rcx - 0x77], al ; ret 0x8141
0x00000000004137e4 : cmp byte ptr [rcx], ah ; ret 0x8941
0x0000000000418cf8 : cmp dil, dil ; jmp rax
0x0000000000414aaa : cmp dword ptr [rcx - 0xf], eax ; jmp qword ptr [rcx]
0x0000000000417620 : cmp eax, 0x40c3 ; add byte ptr [rax], al ; add bl, al ; ret 0x40
0x000000000040bf76 : cmp eax, 0x8945c621 ; ret 0x8141
0x00000000004019cd : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4019e0 ; pop rbp ; ret
0x000000000040ed91 : cmp edi, dword ptr [rdx + 0x5a5335da] ; ret
0x0000000000417c8d : cmp edi, edi ; jmp rax
0x000000000040428e : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x000000000040aa7c : cwde ; mov rcx, qword ptr [rax*8 + 0x417178] ; jmp rcx
0x000000000040ed8e : dec dword ptr [rax - 0x46] ; cmp edi, dword ptr [rdx + 0x5a5335da] ; ret
0x00000000004051d9 : dec dword ptr [rax - 0x75] ; clc ; pop rbp ; ret
0x000000000040db85 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; xor byte ptr [rdi + 0x41], 0 ; jmp rcx
0x000000000041449b : dec dword ptr [rax - 0x75] ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 1
0x000000000040d0b4 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000403579 : dec dword ptr [rax - 0x77] ; ret 0x8148
0x00000000004055b5 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040bb29 : dec dword ptr [rbx + 0x758be07d] ; fmul qword ptr [rax - 0x77] ; ret 0xb0
0x000000000041444b : dec dword ptr [rcx + 0x31c621d6] ; ret 0xd609
0x0000000000409482 : dec dword ptr [rcx - 0x77] ; ret 0x294d
0x000000000040ed9e : enter -0x46b8, 0x3b ; mov edx, 0x5a5335da ; ret
0x000000000040544f : enter 0x4168, 0 ; call 0x401696
0x000000000040d3cc : enter 0x4193, -0x77 ; ret 0x8141
0x0000000000409810 : enter 0x4b05, 0x34 ; fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x000000000040c451 : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040473c : fadd dword ptr [rcx + 0x30] ; ret
0x0000000000409814 : fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x0000000000404852 : fisttp dword ptr [rcx + 0x63] ; ret
0x000000000041449f : fmul dword ptr [rax - 0x7f] ; ret 1
0x000000000040bb2f : fmul qword ptr [rax - 0x77] ; ret 0xb0
0x000000000041515c : fmul qword ptr [rax - 0x7d] ; ret
0x000000000040a918 : fsubr st(0) ; ret 0x20
0x0000000000413da3 : fsubr st(1) ; ret 0xffff
0x0000000000401cc9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004019e0 : hlt ; pop rbp ; mov edi, 0x61a2c0 ; jmp rax
0x000000000040c859 : idiv edi ; call rax
0x000000000040bb3c : in al, 0x48 ; add esp, 0x30 ; pop rbp ; ret
0x000000000041838c : in al, 4 ; add byte ptr [rax], al ; xor al, 0xfe ; call qword ptr [rax]
0x00000000004038f4 : in al, dx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000411dac : in al, dx ; pop rbp ; ret
0x000000000040c38a : in eax, -0x4a ; loope 0x40c3b3 ; ret 0x8941
0x0000000000417c57 : inc dword ptr [rax] ; adc byte ptr [rax], al ; add byte ptr [rax], al ; xor bh, bh ; jmp qword ptr [rax]
0x0000000000409a9b : inc dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000417c87 : inc eax ; adc byte ptr [rax], al ; add al, al ; cmp edi, edi ; jmp rax
0x0000000000417c47 : inc eax ; sldt word ptr [rax] ; shr byte ptr [rsi], -1 ; jmp rax
0x00000000004032e2 : int 0x80
0x000000000040420c : iretd ; call rax
0x00000000004019d3 : ja 0x4019da ; pop rbp ; ret
0x000000000041756c : jb 0x4175da ; add byte ptr gs:[rdi], ah ; ret 0x40
0x00000000004019df : je 0x4019dd ; pop rbp ; mov edi, 0x61a2c0 ; jmp rax
0x0000000000403639 : jge 0x403639 ; mov byte ptr [rbp - 9], al ; pop rbp ; ret
0x000000000040489d : jge 0x404869 ; call rax
0x0000000000404c2b : jge 0x404c27 ; call rax
0x0000000000412538 : jmp 0x32a646
0x000000000040174b : jmp 0x401547
0x000000000040428d : jmp 0x404342
0x00000000004072c1 : jmp 0x40739b
0x000000000040ffa3 : jmp 0x40ffb3
0x00000000004129f4 : jmp 0x412a39
0x000000000040f6e4 : jmp 0xffffffff8a037ffc
0x000000000040b578 : jmp 0xffffffffc2c9fd82
0x0000000000417b9f : jmp qword ptr [rax]
0x00000000004023ed : jmp qword ptr [rcx]
0x000000000041873b : jmp qword ptr [rdx]
0x00000000004019e7 : jmp rax
0x000000000040208c : jmp rcx
0x0000000000401a27 : jmp rdx
0x0000000000401a10 : jne 0x401a17 ; pop rbp ; ret
0x000000000040362b : jo 0x40368c ; ret
0x000000000040689e : jo 0x4068ff ; ret
0x0000000000406a40 : jo 0x406aa1 ; ret
0x0000000000408915 : jo 0x408976 ; ret
0x0000000000409f3f : jo 0x409fa5 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040a5e4 : jo 0x40a645 ; ret
0x000000000040a71e : jo 0x40a77f ; ret
0x00000000004065c8 : js 0x40664a ; ret
0x00000000004065d0 : js 0x406652 ; ret
0x000000000040d04a : lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x00000000004053c8 : lea edi, dword ptr [0x4168b1] ; call 0x401699
0x000000000040544c : lea edi, dword ptr [0x4168c8] ; call 0x401699
0x000000000040c38c : loope 0x40c3b1 ; ret 0x8941
0x000000000040d3c9 : loope 0x40d424 ; enter 0x4193, -0x77 ; ret 0x8141
0x0000000000401ec4 : loopne 0x401eb1 ; ret
0x0000000000401ec3 : loopne 0x401eb2 ; ret
0x0000000000407033 : loopne 0x40703a ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040c388 : loopne 0x40c3a4 ; in eax, -0x4a ; loope 0x40c3b5 ; ret 0x8941
0x0000000000412446 : loopne 0x4124a7 ; ret
0x0000000000412445 : loopne 0x4124a8 ; ret
0x0000000000408138 : mov ah, 0x48 ; add esp, 0x40 ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000406ddf : mov al, -0x77 ; ret 0xc189
0x000000000040565e : mov al, 0 ; call 0x401934
0x000000000040778a : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040a348 : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000406171 : mov al, 0x48 ; mov ecx, 0xd4cd9529 ; ret 0x9755
0x0000000000405eb5 : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000411e86 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000403d24 : mov al, byte ptr [rcx - 0xe] ; jmp qword ptr [rcx]
0x0000000000407911 : mov byte ptr [0x61a438], al ; pop rbp ; ret
0x0000000000405268 : mov byte ptr [rax - 0x75], cl ; or al, 0xffffffffffffffc5 ; and byte ptr [rcx + rax*2], dl ; jmp rcx
0x000000000040363b : mov byte ptr [rbp - 9], al ; pop rbp ; ret
0x0000000000401a46 : mov byte ptr [rcx], ah ; add byte ptr [rcx], al ; ret
0x0000000000401a43 : mov byte ptr [rip + 0x2188ce], 1 ; ret
0x000000000040e8cc : mov cl, -0x32 ; ret
0x0000000000403ab6 : mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040378c : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000411df6 : mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404ad8 : mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000405ebb : mov dh, -0x40 ; pop rbp ; ret
0x0000000000417fb1 : mov dh, -2 ; call qword ptr [rax]
0x00000000004078ed : mov dword ptr [0x61a430], edi ; pop rbp ; ret
0x00000000004087c6 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000408788 : mov dword ptr [rax], eax ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000408644 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000408787 : mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004038f2 : mov dword ptr [rbp - 0x14], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041250c : mov dword ptr [rbp - 0x18], eax ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000401dd9 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040503f : mov dword ptr [rbp - 0x34], eax ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000407788 : mov dword ptr [rbp - 0x50], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000403625 : mov dword ptr [rbp - 0x64], eax ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000401cc7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401cf5 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000412648 : mov dword ptr [rbp - 4], edx ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000041236d : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000403638 : mov dword ptr [rbp - 8], edi ; mov byte ptr [rbp - 9], al ; pop rbp ; ret
0x000000000040883e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d3f4 : mov dword ptr [rdi], eax ; pop rbp ; ret
0x000000000040d3f3 : mov dword ptr [rdi], r8d ; pop rbp ; ret
0x00000000004132f6 : mov eax, 0x5d000001 ; ret
0x00000000004085f8 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040b38b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407b63 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004085f5 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000407abf : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040b946 : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b683 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004085ad : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040863e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000412510 : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040bb3a : mov eax, dword ptr [rbp - 0x1c] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000412444 : mov eax, dword ptr [rbp - 0x20] ; pop rbp ; ret
0x000000000040878a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040890f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040a4b9 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000403e47 : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040c674 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040c617 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040c79c : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040c4bd : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040b46d : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004078d4 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000407822 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000407576 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000411da7 : mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004051db : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040518d : mov eax, edx ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404cd0 : mov eax, edx ; call rax
0x0000000000401a6b : mov ebp, esp ; call rax
0x00000000004019d1 : mov ebp, esp ; ja 0x4019dc ; pop rbp ; ret
0x0000000000406389 : mov ebx, 0x48fffffe ; add esp, 0x60 ; pop rbp ; ret
0x000000000040eda0 : mov ecx, 0x35daba3b ; push rbx ; pop rdx ; ret
0x000000000040b0bd : mov ecx, 0x5b2a830a ; ret
0x0000000000406173 : mov ecx, 0xd4cd9529 ; ret 0x9755
0x0000000000402085 : mov ecx, dword ptr [rax*8 + 0x4151e0] ; jmp rcx
0x000000000040424f : mov ecx, dword ptr [rax*8 + 0x4153e8] ; jmp rcx
0x000000000040526a : mov ecx, dword ptr [rax*8 + 0x415420] ; jmp rcx
0x000000000040581d : mov ecx, dword ptr [rax*8 + 0x415450] ; jmp rcx
0x000000000040728a : mov ecx, dword ptr [rax*8 + 0x415478] ; jmp rcx
0x00000000004089d2 : mov ecx, dword ptr [rax*8 + 0x416c70] ; jmp rcx
0x0000000000408cf6 : mov ecx, dword ptr [rax*8 + 0x416cb8] ; jmp rcx
0x000000000040aa7e : mov ecx, dword ptr [rax*8 + 0x417178] ; jmp rcx
0x000000000040c1ea : mov ecx, dword ptr [rax*8 + 0x417570] ; jmp rcx
0x000000000040c16a : mov ecx, dword ptr [rax*8 + 0x4175d0] ; jmp rcx
0x000000000040fb86 : mov ecx, dword ptr [rax*8 + 0x4176f8] ; jmp rcx
0x000000000040db87 : mov ecx, dword ptr [rax*8 + 0x417780] ; jmp rcx
0x00000000004126a7 : mov ecx, dword ptr [rax*8 + 0x4177b0] ; jmp rcx
0x0000000000414706 : mov ecx, dword ptr [rax*8 + 0x417888] ; jmp rcx
0x0000000000408641 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000404cc9 : mov ecx, dword ptr [rcx + 0x20] ; mov rcx, r8 ; mov r8d, r10d ; call rax
0x000000000040565c : mov ecx, eax ; mov al, 0 ; call 0x401936
0x0000000000404ccd : mov ecx, eax ; mov r8d, r10d ; call rax
0x0000000000401a65 : mov edi, 0x619e20 ; mov rbp, rsp ; call rax
0x00000000004019e2 : mov edi, 0x61a2c0 ; jmp rax
0x0000000000401a22 : mov edi, 0x61a2c0 ; jmp rdx
0x000000000040489c : mov edi, dword ptr [rbp - 0x38] ; call rax
0x0000000000404c2a : mov edi, dword ptr [rbp - 8] ; call rax
0x000000000040420b : mov edi, ecx ; call rax
0x0000000000415157 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000415156 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000040ed90 : mov edx, 0x35daba3b ; push rbx ; pop rdx ; ret
0x000000000040ed92 : mov edx, 0x5a5335da ; ret
0x00000000004056f5 : mov edx, eax ; mov al, 0 ; call 0x401936
0x0000000000401a20 : mov esi, eax ; mov edi, 0x61a2c0 ; jmp rdx
0x0000000000411dab : mov esp, ebp ; pop rbp ; ret
0x00000000004078ec : mov qword ptr [0x61a430], rdi ; pop rbp ; ret
0x000000000041250b : mov qword ptr [rbp - 0x18], rax ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000403637 : mov qword ptr [rbp - 8], rdi ; mov byte ptr [rbp - 9], al ; pop rbp ; ret
0x000000000040883d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406dde : mov r8b, -0x77 ; ret 0xc189
0x0000000000407789 : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000406170 : mov r8b, 0x48 ; mov ecx, 0xd4cd9529 ; ret 0x9755
0x0000000000404ccf : mov r8d, r10d ; call rax
0x000000000040b38a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407b62 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004085f4 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000407abe : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040b682 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004085ac : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041250f : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000412443 : mov rax, qword ptr [rbp - 0x20] ; pop rbp ; ret
0x000000000040890e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040a4b8 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040b46c : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004078d3 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000407821 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000407575 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000411da6 : mov rax, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004051da : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040518c : mov rax, rdx ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401a6a : mov rbp, rsp ; call rax
0x00000000004019d0 : mov rbp, rsp ; ja 0x4019dd ; pop rbp ; ret
0x0000000000402084 : mov rcx, qword ptr [rax*8 + 0x4151e0] ; jmp rcx
0x000000000040424e : mov rcx, qword ptr [rax*8 + 0x4153e8] ; jmp rcx
0x0000000000405269 : mov rcx, qword ptr [rax*8 + 0x415420] ; jmp rcx
0x000000000040581c : mov rcx, qword ptr [rax*8 + 0x415450] ; jmp rcx
0x0000000000407289 : mov rcx, qword ptr [rax*8 + 0x415478] ; jmp rcx
0x00000000004089d1 : mov rcx, qword ptr [rax*8 + 0x416c70] ; jmp rcx
0x0000000000408cf5 : mov rcx, qword ptr [rax*8 + 0x416cb8] ; jmp rcx
0x000000000040aa7d : mov rcx, qword ptr [rax*8 + 0x417178] ; jmp rcx
0x000000000040c1e9 : mov rcx, qword ptr [rax*8 + 0x417570] ; jmp rcx
0x000000000040c169 : mov rcx, qword ptr [rax*8 + 0x4175d0] ; jmp rcx
0x000000000040fb85 : mov rcx, qword ptr [rax*8 + 0x4176f8] ; jmp rcx
0x000000000040db86 : mov rcx, qword ptr [rax*8 + 0x417780] ; jmp rcx
0x00000000004126a6 : mov rcx, qword ptr [rax*8 + 0x4177b0] ; jmp rcx
0x0000000000414705 : mov rcx, qword ptr [rax*8 + 0x417888] ; jmp rcx
0x0000000000404ccc : mov rcx, r8 ; mov r8d, r10d ; call rax
0x000000000040565b : mov rcx, rax ; mov al, 0 ; call 0x401937
0x000000000040489b : mov rdi, qword ptr [rbp - 0x38] ; call rax
0x0000000000404c29 : mov rdi, qword ptr [rbp - 8] ; call rax
0x000000000040420a : mov rdi, rcx ; call rax
0x00000000004056f4 : mov rdx, rax ; mov al, 0 ; call 0x401937
0x0000000000401a1f : mov rsi, rax ; mov edi, 0x61a2c0 ; jmp rdx
0x0000000000411daa : mov rsp, rbp ; pop rbp ; ret
0x000000000040424d : movabs al, byte ptr [0x4153e8c50c8b48] ; jmp rcx
0x0000000000407288 : movabs al, byte ptr [0x415478c50c8b48] ; jmp rcx
0x0000000000404dc0 : movabs byte ptr [0x5d60c48348000061], al ; ret
0x0000000000406201 : movabs dword ptr [0x5d60c48348fffffe], eax ; ret
0x0000000000406533 : movabs eax, dword ptr [0x5d60c48348fffffe] ; ret
0x0000000000407e46 : movsb byte ptr [rdi], byte ptr [rsi] ; add rsp, 0x60 ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004021c5 : movsd dword ptr [rdi], dword ptr [rsi] ; add r8b, bpl ; ret 0xfff4
0x0000000000411e4a : movsx eax, cl ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403ab5 : movzx eax, al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040378b : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000411df5 : movzx eax, al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404ad7 : movzx eax, al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000405eba : movzx eax, al ; pop rbp ; ret
0x0000000000415178 : nop dword ptr [rax + rax] ; ret
0x000000000040905d : or al, 0x18 ; ret 0x6451
0x0000000000402382 : or al, 0x25 ; add byte ptr [rbx - 0x76b7ff9f], ah ; ret 0xb0
0x0000000000405105 : or al, 0x6b ; sbb eax, dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x000000000040526b : or al, 0xffffffffffffffc5 ; and byte ptr [rcx + rax*2], dl ; jmp rcx
0x0000000000404250 : or al, 0xffffffffffffffc5 ; call 0xffffffffff4083b0
0x000000000040db88 : or al, 0xffffffffffffffc5 ; xor byte ptr [rdi + 0x41], 0 ; jmp rcx
0x00000000004021e2 : or dword ptr [rax - 0x77], ecx ; ret 0xb0
0x000000000040c42b : or dword ptr [rsp + rax + 0x21], esp ; ret 0xd709
0x000000000040346c : or eax, 0x314c0211 ; ret 0x948
0x000000000040a6a1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d3f1 : or eax, edx ; mov dword ptr [rdi], r8d ; pop rbp ; ret
0x000000000040d3f0 : or r8d, edx ; mov dword ptr [rdi], r8d ; pop rbp ; ret
0x00000000004115b6 : out dx, al ; call 0x4933170b
0x00000000004065c7 : out dx, al ; js 0x40664b ; ret
0x0000000000417568 : outsd dx, dword ptr [rsi] ; and byte ptr [rcx + 0x72], ch ; add byte ptr gs:[edi], ah ; ret 0x40
0x000000000041516c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000409f41 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041516e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000404923 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000415170 : pop r14 ; pop r15 ; ret
0x0000000000407e4c : pop r14 ; pop rbp ; ret
0x0000000000404925 : pop r15 ; pop rbp ; ret
0x0000000000415172 : pop r15 ; ret
0x0000000000404921 : pop rax ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000401a42 : pop rbp ; mov byte ptr [rip + 0x2188ce], 1 ; ret
0x00000000004019e1 : pop rbp ; mov edi, 0x61a2c0 ; jmp rax
0x0000000000401a1e : pop rbp ; mov rsi, rax ; mov edi, 0x61a2c0 ; jmp rdx
0x000000000041516b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041516f : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004019d5 : pop rbp ; ret
0x0000000000409f40 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000404922 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000407e4b : pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040c455 : pop rbx ; pop rbp ; ret
0x000000000040b0c1 : pop rbx ; ret
0x0000000000404926 : pop rdi ; pop rbp ; ret
0x0000000000415173 : pop rdi ; ret
0x00000000004175d0 : pop rdi ; ret 0x40
0x000000000040ed96 : pop rdx ; ret
0x0000000000404924 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000415171 : pop rsi ; pop r15 ; ret
0x0000000000407e4d : pop rsi ; pop rbp ; ret
0x000000000041516d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000409f42 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004117b4 : push -0x17000009 ; ret
0x00000000004053cc : push -0x4317ffbf ; ret 0xffff
0x0000000000405450 : push 0x38e80041 ; ret 0xffff
0x0000000000403944 : push 0x48ffffff ; add esp, 0x10 ; pop rbp ; ret
0x000000000040757c : push rax ; pop rbp ; ret
0x000000000041334c : push rbp ; call 0x2103b49e
0x0000000000412649 : push rbp ; cld ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000041449e : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 1
0x0000000000401a64 : push rbp ; mov edi, 0x619e20 ; mov rbp, rsp ; call rax
0x00000000004075e5 : push rbp ; ror byte ptr [rax - 0x77], 1 ; ret 0x11e8
0x0000000000406f9f : push rbp ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4810
0x000000000040ed95 : push rbx ; pop rdx ; ret
0x0000000000417578 : push rbx ; ret 0x40
0x000000000040d3ca : push rdx ; enter 0x4193, -0x77 ; ret 0x8141
0x00000000004137ef : push rsp ; cmp byte ptr [rcx - 0x77], al ; ret 0x8141
0x00000000004137e3 : push rsp ; cmp byte ptr [rcx], ah ; ret 0x8941
0x0000000000403627 : pushfq ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000417c88 : rcl byte ptr [rax], 0 ; add al, al ; cmp edi, edi ; jmp rax
0x0000000000417dc8 : rcl byte ptr [rip - 0x59700000], -1 ; jmp rax
0x00000000004005c8 : ret
0x000000000040d282 : ret 0
0x0000000000412c51 : ret 0x10
0x00000000004075e9 : ret 0x11e8
0x000000000040d296 : ret 0x148
0x000000000040a0de : ret 0x1b2
0x000000000040f6bd : ret 0x1de8
0x0000000000412968 : ret 0x1fe4
0x000000000040a91a : ret 0x20
0x0000000000404506 : ret 0x2145
0x0000000000401952 : ret 0x2188
0x0000000000401752 : ret 0x2189
0x0000000000401542 : ret 0x218a
0x0000000000401f36 : ret 0x2948
0x0000000000404793 : ret 0x294c
0x0000000000409485 : ret 0x294d
0x00000000004129f3 : ret 0x3eeb
0x0000000000417571 : ret 0x40
0x0000000000412606 : ret 0x4589
0x0000000000406fa3 : ret 0x4810
0x000000000040243c : ret 0x48b8
0x0000000000412ee7 : ret 0x54c8
0x0000000000402bf8 : ret 0x5589
0x00000000004126db : ret 0x5ef2
0x00000000004047b7 : ret 0x634c
0x000000000040458a : ret 0x634d
0x000000000040905f : ret 0x6451
0x0000000000412e44 : ret 0x651d
0x0000000000412a8c : ret 0x744a
0x00000000004125fe : ret 0x8041
0x000000000040bf7b : ret 0x8141
0x000000000040357c : ret 0x8148
0x00000000004130aa : ret 0x8334
0x00000000004121af : ret 0x840
0x000000000040736d : ret 0x8445
0x00000000004045da : ret 0x845
0x000000000040f6e7 : ret 0x8589
0x0000000000405e59 : ret 0x860f
0x0000000000409703 : ret 0x8840
0x000000000040aa39 : ret 0x8844
0x000000000040c38e : ret 0x8941
0x0000000000403ba0 : ret 0x8948
0x000000000040478a : ret 0x8949
0x000000000040961c : ret 0x89a5
0x000000000040db65 : ret 0x89ee
0x000000000040309f : ret 0x8b48
0x0000000000406fc2 : ret 0x8d89
0x0000000000413554 : ret 0x9303
0x000000000040d3ef : ret 0x941
0x0000000000403471 : ret 0x948
0x00000000004114fd : ret 0x9588
0x0000000000406178 : ret 0x9755
0x00000000004055b8 : ret 0xb0
0x000000000040f62a : ret 0xb0e8
0x000000000040d289 : ret 0xb849
0x000000000041301d : ret 0xc0c2
0x0000000000401a05 : ret 0xc148
0x0000000000406bde : ret 0xc189
0x000000000040cff0 : ret 0xc2f6
0x000000000041302a : ret 0xc4c0
0x0000000000402c34 : ret 0xc8b
0x000000000040d432 : ret 0xc8e8
0x0000000000413254 : ret 0xc996
0x0000000000408e84 : ret 0xca21
0x0000000000402c90 : ret 0xca29
0x0000000000405592 : ret 0xd284
0x0000000000414451 : ret 0xd609
0x000000000040c42f : ret 0xd709
0x00000000004139b0 : ret 0xd83a
0x0000000000412c4b : ret 0xddeb
0x000000000040949d : ret 0xde8
0x0000000000402ab7 : ret 0xea81
0x0000000000409d2c : ret 0xee8
0x0000000000409718 : ret 0xf180
0x000000000040cfe3 : ret 0xf280
0x0000000000403b40 : ret 0xf281
0x00000000004052b2 : ret 0xff48
0x00000000004021ca : ret 0xfff4
0x00000000004053d1 : ret 0xffff
0x000000000040a0e4 : ret 1
0x000000000040d050 : ret 2
0x00000000004023a7 : ret 5
0x00000000004126e1 : ret 8
0x000000000040d3f2 : rol byte ptr [rcx + rcx*4 + 7], 1 ; pop rbp ; ret
0x0000000000408786 : rol byte ptr [rcx + rcx*4], 1 ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000404cce : rol dword ptr [rbp - 0x77], -0x30 ; call rax
0x000000000040b0a0 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000408910 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x40897b ; ret
0x0000000000401a0c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401a1b ; pop rbp ; ret
0x000000000040b0a1 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x00000000004075e6 : ror byte ptr [rax - 0x77], 1 ; ret 0x11e8
0x000000000040945d : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000409466 : ror byte ptr [rax - 0x77], 1 ; ret 0x294c
0x0000000000408911 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x40897a ; ret
0x0000000000404ad9 : ror byte ptr [rax - 0x7d], -0x3c ; pop rbp ; ret
0x0000000000406fa0 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4810
0x0000000000404787 : ror byte ptr [rbp + 0x29], cl ; ret 0x8949
0x0000000000417d1c : ror byte ptr [rdx - 1], 1 ; jmp qword ptr [rax]
0x0000000000417bc8 : ror byte ptr [rip + 0x2a700000], -1 ; jmp rax
0x0000000000401ec0 : ror dword ptr [rax - 0x77], 0x4d ; loopne 0x401eb5 ; ret
0x0000000000404209 : ror dword ptr [rax - 0x77], 1 ; iretd ; call rax
0x0000000000405bcb : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x000000000040473a : ror dword ptr [rax], cl ; fadd dword ptr [rcx + 0x30] ; ret
0x0000000000417c8c : sar byte ptr [rcx], -1 ; jmp rax
0x0000000000401a0e : sar eax, 1 ; jne 0x401a19 ; pop rbp ; ret
0x0000000000401a0d : sar rax, 1 ; jne 0x401a1a ; pop rbp ; ret
0x0000000000418739 : sbb al, -1 ; jmp qword ptr [rdx]
0x0000000000404206 : sbb eax, 0x48d10148 ; mov edi, ecx ; call rax
0x0000000000412e39 : sbb eax, 0x81d55b65 ; ret 8
0x0000000000405107 : sbb eax, dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x00000000004186f9 : sbb edi, edi ; jmp rdx
0x0000000000403d23 : scasd eax, dword ptr [rdi] ; mov al, byte ptr [rcx - 0xe] ; jmp qword ptr [rcx]
0x0000000000417c4c : shr byte ptr [rsi], -1 ; jmp rax
0x0000000000417c49 : sldt word ptr [rax] ; shr byte ptr [rsi], -1 ; jmp rax
0x0000000000411e88 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004175c8 : stosb byte ptr [rdi], al ; ret 0x40
0x0000000000417c0d : sub al, -1 ; jmp rax
0x0000000000417bcd : sub bh, bh ; jmp rax
0x0000000000403f71 : sub byte ptr [rbx], ah ; call 0x36c0c8
0x0000000000418370 : sub dh, -2 ; call qword ptr [rsi]
0x000000000040b0bf : sub dword ptr [rdx], 0x5b ; ret
0x0000000000417bdd : sub edi, edi ; jmp qword ptr [rax]
0x00000000004151c1 : sub esp, 8 ; add rsp, 8 ; ret
0x00000000004151c0 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040c42a : test al, 9 ; add al, 0x21 ; ret 0xd709
0x000000000041517a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040c857 : test edi, eax ; idiv edi ; call rax
0x000000000040728c : vandps xmm8, xmm0, xmmword ptr [rcx] ; jmp rcx
0x000000000040526c : vandps xmm8, xmm11, xmmword ptr [rcx] ; jmp rcx
0x000000000040581f : vandps xmm8, xmm5, xmmword ptr [rcx] ; jmp rcx
0x00000000004125fd : xchg eax, ebp ; ret 0x8041
0x000000000040736c : xchg eax, ebp ; ret 0x8445
0x0000000000409702 : xchg eax, ebp ; ret 0x8840
0x00000000004115b4 : xchg eax, ebx ; add dh, ch ; call 0x4933170d
0x00000000004175b8 : xchg eax, ecx ; ret 0x40
0x00000000004114fc : xchg eax, esp ; ret 0x9588
0x0000000000405591 : xchg eax, esp ; ret 0xd284
0x0000000000418390 : xor al, 0xfe ; call qword ptr [rax]
0x0000000000417c5d : xor bh, bh ; jmp qword ptr [rax]
0x000000000040d37e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040db8a : xor byte ptr [rdi + 0x41], 0 ; jmp rcx
0x000000000040a437 : xor eax, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x0000000000408785 : xor eax, edx ; mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000412646 : xor edx, eax ; mov dword ptr [rbp - 4], edx ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
