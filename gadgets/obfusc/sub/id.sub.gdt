0x0000000000402727 : adc al, 0x25 ; ret 0x60
0x000000000040a955 : adc al, byte ptr [rax] ; add byte ptr [rax + rbp*8 - 1], bh ; call rsp
0x0000000000402c87 : adc byte ptr [rax - 0x73], cl ; xor al, 0x25 ; ret
0x000000000040b6c0 : adc cl, -1 ; jmp rax
0x000000000040a915 : adc dword ptr [rax], eax ; add ah, bl ; in eax, -1 ; call rsp
0x0000000000403127 : adc eax, 0x48ffffe4 ; add esp, 0x10 ; pop rbp ; ret
0x0000000000405079 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040ab93 : add ah, al ; add dword ptr [rax], eax ; add byte ptr [rax], bh ; test bh, bh ; jmp qword ptr [rdi]
0x000000000040a917 : add ah, bl ; in eax, -1 ; call rsp
0x000000000040a797 : add ah, bl ; mov ah, -1 ; call rsp
0x000000000040b5bb : add ah, ch ; or eax, dword ptr [rax] ; add al, dh ; ret 0xffff
0x0000000000407091 : add al, 0x25 ; pop rax ; ret 0x60
0x0000000000402645 : add al, 0x25 ; ret 0x60
0x000000000040096f : add al, ah ; ret 0x60
0x000000000040aa57 : add al, bh ; jo 0x40aa5e ; jmp rdx
0x00000000004009b1 : add al, byte ptr [rax] ; add byte ptr [rcx], ah ; add byte ptr [rcx], bl ; add al, ah ; ret 0x60
0x0000000000400969 : add al, byte ptr [rax] ; add byte ptr [rcx], dl ; add byte ptr [rcx], bl ; add al, ah ; ret 0x60
0x0000000000400999 : add al, byte ptr [rax] ; add byte ptr [rcx], dl ; add byte ptr [rcx], bl ; add byte ptr [rax], cl ; ret
0x0000000000402878 : add al, ch ; ret 0xffed
0x000000000040ad77 : add al, cl ; mov edi, edi ; call rdi
0x000000000040b5ff : add al, dh ; ret
0x0000000000400957 : add al, dh ; ret 0x60
0x000000000040b5bf : add al, dh ; ret 0xffff
0x000000000040928f : add bl, dh ; ret
0x00000000004009e0 : add byte ptr [r8], r8b ; add byte ptr [rcx], dl ; add byte ptr [rcx], bl ; add byte ptr [rax], al ; ret
0x000000000040a957 : add byte ptr [rax + rbp*8 - 1], bh ; call rsp
0x00000000004052df : add byte ptr [rax - 0x75], cl ; jge 0x40529b ; call 0x401507
0x0000000000401f41 : add byte ptr [rax - 0x75], cl ; or al, 0x25 ; push rax ; ret 0x60
0x00000000004069fd : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000401eb4 : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x0000000000401467 : add byte ptr [rax], ah ; ret 0x60
0x000000000040b6be : add byte ptr [rax], al ; adc cl, -1 ; jmp rax
0x000000000040b5b9 : add byte ptr [rax], al ; add ah, ch ; or eax, dword ptr [rax] ; add al, dh ; ret 0xffff
0x0000000000400dd5 : add byte ptr [rax], al ; add al, ah ; ret 0x60
0x000000000040aa55 : add byte ptr [rax], al ; add al, bh ; jo 0x40aa60 ; jmp rdx
0x0000000000400ded : add byte ptr [rax], al ; add al, dh ; ret 0x60
0x000000000040928d : add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004052dd : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jge 0x40529d ; call 0x401509
0x0000000000401eb2 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x0000000000401465 : add byte ptr [rax], al ; add byte ptr [rax], ah ; ret 0x60
0x0000000000400dd3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ah ; ret 0x60
0x0000000000400deb : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; ret 0x60
0x000000000040928b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000401463 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; ret 0x60
0x0000000000400dd1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ah ; ret 0x60
0x0000000000400de9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; ret 0x60
0x0000000000401461 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; ret 0x60
0x0000000000400e01 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000401401 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x60
0x0000000000401449 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bl ; ret 0x60
0x0000000000401479 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ch ; ret 0x60
0x0000000000400e19 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], cl ; ret
0x0000000000401419 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], cl ; ret 0x60
0x0000000000401491 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; ret 0x60
0x0000000000400e31 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; ret
0x0000000000401431 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; ret 0x60
0x0000000000400e03 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000401403 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x60
0x000000000040144b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bl ; ret 0x60
0x000000000040147b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ch ; ret 0x60
0x0000000000400e1b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], cl ; ret
0x000000000040141b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], cl ; ret 0x60
0x0000000000401493 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; ret 0x60
0x0000000000400e33 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; ret
0x0000000000401433 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; ret 0x60
0x0000000000407899 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004033fb : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000400e05 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000409dbc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x403e
0x0000000000401405 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x60
0x000000000040144d : add byte ptr [rax], al ; add byte ptr [rax], bl ; ret 0x60
0x000000000040147d : add byte ptr [rax], al ; add byte ptr [rax], ch ; ret 0x60
0x0000000000400e1d : add byte ptr [rax], al ; add byte ptr [rax], cl ; ret
0x000000000040141d : add byte ptr [rax], al ; add byte ptr [rax], cl ; ret 0x60
0x0000000000401495 : add byte ptr [rax], al ; add byte ptr [rax], dh ; ret 0x60
0x0000000000400e35 : add byte ptr [rax], al ; add byte ptr [rax], dl ; ret
0x0000000000401435 : add byte ptr [rax], al ; add byte ptr [rax], dl ; ret 0x60
0x0000000000402e1c : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b75b8b], cl ; ret 0xb0
0x0000000000400981 : add byte ptr [rax], al ; add byte ptr [rcx], ah ; add byte ptr [rcx], bl ; add byte ptr [rax], cl ; ret
0x00000000004009e1 : add byte ptr [rax], al ; add byte ptr [rcx], dl ; add byte ptr [rcx], bl ; add byte ptr [rax], al ; ret
0x000000000040471e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x000000000040598e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040b5d9 : add byte ptr [rax], al ; add byte ptr [rsp + rcx], cl ; add byte ptr [rax], al ; nop ; ret
0x000000000040805c : add byte ptr [rax], al ; add cl, ch ; ret 2
0x0000000000402641 : add byte ptr [rax], al ; add dh, al ; add al, 0x25 ; ret 0x60
0x0000000000402c6f : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404d50 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004014c3 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000040aa56 : add byte ptr [rax], al ; clc ; jo 0x40aa5f ; jmp rdx
0x000000000040abb2 : add byte ptr [rax], al ; in al, 1 ; add byte ptr [rax], al ; test dil, dil ; call qword ptr [rsi]
0x000000000040b5ba : add byte ptr [rax], al ; in al, dx ; or eax, dword ptr [rax] ; add al, dh ; ret 0xffff
0x00000000004015b9 : add byte ptr [rax], al ; jmp 0x4014d9
0x000000000040789b : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004059ca : add byte ptr [rax], al ; mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405afd : add byte ptr [rax], al ; mov eax, edi ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405c59 : add byte ptr [rax], al ; mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405a71 : add byte ptr [rax], al ; mov eax, esi ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403612 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004033fd : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004052de : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x50] ; call 0x401508
0x000000000040ad72 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add eax, dword ptr [rax] ; add al, cl ; mov edi, edi ; call rdi
0x000000000040b5de : add byte ptr [rax], al ; nop ; ret
0x000000000040b5da : add byte ptr [rax], al ; or al, 0xc ; add byte ptr [rax], al ; nop ; ret
0x0000000000402c44 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040689b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000404d10 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040a7d6 : add byte ptr [rax], al ; pop rsp ; mov dh, -1 ; call rsp
0x000000000040a716 : add byte ptr [rax], al ; pushfq ; mov al, -1 ; call rsp
0x000000000040a756 : add byte ptr [rax], al ; pushfq ; mov dl, -1 ; call rsp
0x000000000040a816 : add byte ptr [rax], al ; pushfq ; ret
0x00000000004009e7 : add byte ptr [rax], al ; ret
0x0000000000409dbe : add byte ptr [rax], al ; ret 0x403e
0x0000000000401407 : add byte ptr [rax], al ; ret 0x60
0x000000000040aa52 : add byte ptr [rax], al ; test byte ptr [rax], al ; add byte ptr [rax], al ; clc ; jo 0x40aa63 ; jmp rdx
0x000000000040abb6 : add byte ptr [rax], al ; test dil, dil ; call qword ptr [rsi]
0x000000000040ab97 : add byte ptr [rax], bh ; test bh, bh ; jmp qword ptr [rdi]
0x000000000040144f : add byte ptr [rax], bl ; ret 0x60
0x000000000040147f : add byte ptr [rax], ch ; ret 0x60
0x0000000000400987 : add byte ptr [rax], cl ; ret
0x000000000040141f : add byte ptr [rax], cl ; ret 0x60
0x0000000000401497 : add byte ptr [rax], dh ; ret 0x60
0x00000000004009cf : add byte ptr [rax], dl ; ret
0x0000000000401437 : add byte ptr [rax], dl ; ret 0x60
0x000000000040689c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000404d11 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040a897 : add byte ptr [rbx + rcx*8 - 1], bh ; call rsp
0x0000000000402e1e : add byte ptr [rbx - 0x76b75b8b], cl ; ret 0xb0
0x0000000000402af4 : add byte ptr [rbx - 0x834b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004023e9 : add byte ptr [rbx - 0xcb4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000402490 : add byte ptr [rbx - 0xcf4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000402528 : add byte ptr [rbx - 0xd34b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040258f : add byte ptr [rbx - 0xd74b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000402745 : add byte ptr [rcx + rax], ah ; movzx eax, al ; pop rbp ; ret
0x000000000040a857 : add byte ptr [rcx + rcx*8 - 1], bh ; call rsp
0x0000000000408f3c : add byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x00000000004009b3 : add byte ptr [rcx], ah ; add byte ptr [rcx], bl ; add al, ah ; ret 0x60
0x0000000000400983 : add byte ptr [rcx], ah ; add byte ptr [rcx], bl ; add byte ptr [rax], cl ; ret
0x00000000004019d8 : add byte ptr [rcx], al ; ret
0x000000000040096d : add byte ptr [rcx], bl ; add al, ah ; ret 0x60
0x0000000000400955 : add byte ptr [rcx], bl ; add al, dh ; ret 0x60
0x00000000004009e5 : add byte ptr [rcx], bl ; add byte ptr [rax], al ; ret
0x0000000000400985 : add byte ptr [rcx], bl ; add byte ptr [rax], cl ; ret
0x00000000004009cd : add byte ptr [rcx], bl ; add byte ptr [rax], dl ; ret
0x000000000040096b : add byte ptr [rcx], dl ; add byte ptr [rcx], bl ; add al, ah ; ret 0x60
0x0000000000400953 : add byte ptr [rcx], dl ; add byte ptr [rcx], bl ; add al, dh ; ret 0x60
0x00000000004009e3 : add byte ptr [rcx], dl ; add byte ptr [rcx], bl ; add byte ptr [rax], al ; ret
0x000000000040099b : add byte ptr [rcx], dl ; add byte ptr [rcx], bl ; add byte ptr [rax], cl ; ret
0x00000000004009cb : add byte ptr [rcx], dl ; add byte ptr [rcx], bl ; add byte ptr [rax], dl ; ret
0x0000000000408058 : add byte ptr [rdi], cl ; lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000405c8a : add byte ptr [rdi], cl ; mov bh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404720 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000405990 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040a6d7 : add byte ptr [rsi + rbp*4 - 1], cl ; call rsp
0x000000000040a7d7 : add byte ptr [rsi + rsi*4 - 1], bl ; call rsp
0x000000000040b5db : add byte ptr [rsp + rcx], cl ; add byte ptr [rax], al ; nop ; ret
0x000000000040805e : add cl, ch ; ret 2
0x0000000000402643 : add dh, al ; add al, 0x25 ; ret 0x60
0x0000000000400950 : add dword ptr [r8], r8d ; add byte ptr [rcx], dl ; add byte ptr [rcx], bl ; add al, dh ; ret 0x60
0x0000000000406ed9 : add dword ptr [rax - 0x77], ecx ; ret 0x8148
0x000000000040503f : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040ab95 : add dword ptr [rax], eax ; add byte ptr [rax], bh ; test bh, bh ; jmp qword ptr [rdi]
0x000000000040689a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000404d0f : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000400951 : add dword ptr [rax], eax ; add byte ptr [rcx], dl ; add byte ptr [rcx], bl ; add al, dh ; ret 0x60
0x00000000004009c9 : add dword ptr [rax], eax ; add byte ptr [rcx], dl ; add byte ptr [rcx], bl ; add byte ptr [rax], dl ; ret
0x0000000000408dfd : add dword ptr [rax], ecx ; ret 0x840
0x0000000000402ee1 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000402747 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004019d4 : add eax, 0x20a93e ; add ebx, esi ; ret
0x000000000040805b : add eax, 0xe9000000 ; ret 2
0x000000000040ad75 : add eax, dword ptr [rax] ; add al, cl ; mov edi, edi ; call rdi
0x000000000040199b : add eax, edx ; sar rax, 1 ; jne 0x4019ac ; pop rbp ; ret
0x00000000004019d9 : add ebx, esi ; ret
0x0000000000401b4b : add esp, 0x10 ; pop rbp ; ret
0x000000000040838c : add esp, 0x130 ; pop rbp ; ret
0x0000000000406bcc : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000403287 : add esp, 0x20 ; pop rbp ; ret
0x0000000000401c2d : add esp, 0x30 ; pop rbp ; ret
0x0000000000402fbc : add esp, 0x40 ; pop rbp ; ret
0x000000000040545c : add esp, 0x50 ; pop rbp ; ret
0x0000000000402ee6 : add esp, 0x60 ; pop rbp ; ret
0x0000000000403933 : add esp, 0x70 ; pop rbp ; ret
0x000000000040536a : add esp, 0x90 ; pop rbp ; ret
0x0000000000402c40 : add esp, 0xa0 ; pop rbp ; ret
0x00000000004062e3 : add esp, 0xe0 ; pop rbp ; ret
0x00000000004014c6 : add esp, 8 ; ret
0x000000000040199a : add rax, rdx ; sar rax, 1 ; jne 0x4019ad ; pop rbp ; ret
0x0000000000401b4a : add rsp, 0x10 ; pop rbp ; ret
0x000000000040838b : add rsp, 0x130 ; pop rbp ; ret
0x0000000000406bcb : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000403286 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000401c2c : add rsp, 0x30 ; pop rbp ; ret
0x0000000000402fbb : add rsp, 0x40 ; pop rbp ; ret
0x000000000040545b : add rsp, 0x50 ; pop rbp ; ret
0x0000000000402ee5 : add rsp, 0x60 ; pop rbp ; ret
0x0000000000403932 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000405369 : add rsp, 0x90 ; pop rbp ; ret
0x0000000000402c3f : add rsp, 0xa0 ; pop rbp ; ret
0x00000000004062e2 : add rsp, 0xe0 ; pop rbp ; ret
0x00000000004014c5 : add rsp, 8 ; ret
0x0000000000402746 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004019d7 : and byte ptr [rax], al ; add ebx, esi ; ret
0x000000000040300f : and eax, 0x60c398 ; pop rbp ; ret
0x0000000000403033 : and eax, 0x60c3a0 ; pop rbp ; ret
0x000000000040281f : call 0x2574b372
0x00000000004052e4 : call 0x401502
0x0000000000402445 : call 0x4015f9
0x0000000000401faf : call 0x401629
0x0000000000402879 : call 0x401649
0x000000000040549e : call 0x4016b2
0x000000000040239e : call 0x4016c9
0x00000000004054d3 : call 0x401782
0x0000000000402544 : call 0x4017c9
0x00000000004024dd : call 0x401839
0x0000000000401eba : call 0x401889
0x0000000000404d49 : call 0xffffffffe902d699
0x0000000000404d48 : call 0xffffffffe902d69a
0x0000000000409269 : call qword ptr [r12 + rbx*8]
0x000000000040a80b : call qword ptr [rbp + rcx - 0x3cf40000]
0x000000000040abbb : call qword ptr [rsi]
0x000000000040926a : call qword ptr [rsp + rbx*8]
0x00000000004019fd : call rax
0x0000000000404a9c : call rbx
0x000000000040ab7b : call rcx
0x000000000040ad7b : call rdi
0x000000000040a6db : call rsp
0x0000000000405b00 : clc ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040838a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x0000000000406dcf : clc ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004059a1 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040199f : clc ; jne 0x4019a8 ; pop rbp ; ret
0x000000000040aa58 : clc ; jo 0x40aa5d ; jmp rdx
0x00000000004037e5 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000408fbf : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402761 : clc ; pop rbp ; ret
0x0000000000407898 : cld ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000408976 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407b6b : cld ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407aaa : cld ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004087c1 : cld ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000407833 : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x0000000000408fbc : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000408973 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408916 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407aa7 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004087be : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040789f : cld ; pop rbp ; ret
0x000000000040300e : cmp al, 0x25 ; cwde ; ret
0x00000000004030fc : cmp al, 0x25 ; pop rax ; ret 0x60
0x0000000000401b5a : cmp al, 0x25 ; ret 0x4098
0x000000000040195d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401970 ; pop rbp ; ret
0x00000000004063dc : cwde ; mov rcx, qword ptr [rax*8 + 0x40a0b0] ; jmp rcx
0x0000000000403010 : cwde ; ret
0x0000000000403d14 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; enter 0x409b, 0 ; jmp rcx
0x000000000040275d : dec dword ptr [rax - 0x77] ; jge 0x402760 ; pop rbp ; ret
0x00000000004080c4 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x00000000004023ef : dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004044a2 : dec dword ptr [rcx - 0x77] ; ret 0x294d
0x0000000000405dd0 : enter -0x7cb8, -0x3c ; push rax ; pop rbp ; ret
0x0000000000403d19 : enter 0x409b, 0 ; jmp rcx
0x0000000000404830 : enter 0x4b05, 0x34 ; fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x0000000000404834 : fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x000000000040926c : fmul qword ptr [rax - 0x7d] ; ret
0x00000000004058eb : fsubr st(0) ; jmp qword ptr [rax]
0x0000000000401b49 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401970 : hlt ; pop rbp ; mov edi, 0x60c2d0 ; jmp rax
0x000000000040710b : in al, 0x48 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040abb4 : in al, 1 ; add byte ptr [rax], al ; test dil, dil ; call qword ptr [rsi]
0x0000000000402c86 : in al, dx ; adc byte ptr [rax - 0x73], cl ; xor al, 0x25 ; ret
0x000000000040795c : in al, dx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b5bc : in al, dx ; or eax, dword ptr [rax] ; add al, dh ; ret 0xffff
0x0000000000401b56 : in al, dx ; xor byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x4098
0x0000000000402743 : in eax, -0x50 ; add byte ptr [rcx + rax], ah ; movzx eax, al ; pop rbp ; ret
0x000000000040a919 : in eax, -1 ; call rsp
0x00000000004059e3 : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x0000000000404abb : inc dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x00000000004027db : inc esi ; add al, 0x25 ; ret 0x60
0x0000000000406a05 : int 0x80
0x0000000000401963 : ja 0x40196a ; pop rbp ; ret
0x000000000040196f : je 0x40196d ; pop rbp ; mov edi, 0x60c2d0 ; jmp rax
0x0000000000402760 : jge 0x40275d ; pop rbp ; ret
0x00000000004052e2 : jge 0x405298 ; call 0x401504
0x00000000004059e6 : jge 0x4059e3 ; pop rbp ; ret
0x00000000004015bb : jmp 0x4014d7
0x0000000000401ed0 : jmp 0x401f7d
0x00000000004025cb : jmp 0x4025e6
0x0000000000402610 : jmp 0x40262b
0x00000000004026b8 : jmp 0x402702
0x0000000000402998 : jmp 0x4029a6
0x0000000000402a5a : jmp 0x402a72
0x0000000000406ed8 : jmp 0xffffffffc2c9b6e2
0x000000000040302d : jmp qword ptr [r9 + rax]
0x00000000004058ed : jmp qword ptr [rax]
0x000000000040302e : jmp qword ptr [rcx + rax]
0x0000000000403f36 : jmp qword ptr [rcx]
0x000000000040ab1b : jmp qword ptr [rdi]
0x000000000040ae63 : jmp qword ptr [rdx]
0x0000000000401977 : jmp rax
0x00000000004039f9 : jmp rcx
0x00000000004019b7 : jmp rdx
0x00000000004019a0 : jne 0x4019a7 ; pop rbp ; ret
0x0000000000403935 : jo 0x403996 ; ret
0x0000000000404f5f : jo 0x404fc5 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405604 : jo 0x405665 ; ret
0x000000000040573e : jo 0x40579f ; ret
0x00000000004087c5 : jo 0x408826 ; ret
0x000000000040aa59 : jo 0x40aa5c ; jmp rdx
0x000000000040805a : lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x00000000004062e5 : loopne 0x4062ec ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000407837 : loopne 0x40783e ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000409219 : loopne 0x409269 ; add esp, 0x40 ; pop rbp ; ret
0x0000000000409218 : loopne 0x40926a ; add esp, 0x40 ; pop rbp ; ret
0x000000000040a799 : mov ah, -1 ; call rsp
0x000000000040a754 : mov ah, 0xa ; add byte ptr [rax], al ; pushfq ; mov dl, -1 ; call rsp
0x000000000040a7d4 : mov ah, 0xc ; add byte ptr [rax], al ; pop rsp ; mov dh, -1 ; call rsp
0x000000000040a814 : mov ah, 0xd ; add byte ptr [rax], al ; pushfq ; ret
0x000000000040a714 : mov ah, 9 ; add byte ptr [rax], al ; pushfq ; mov al, -1 ; call rsp
0x0000000000408784 : mov al, -0x75 ; or byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; ret 0x8148
0x000000000040a719 : mov al, -1 ; call rsp
0x0000000000402744 : mov al, 0 ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004054db : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000405368 : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000408ad6 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000405c8c : mov bh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403031 : mov byte ptr [0x60c3a0], al ; pop rbp ; ret
0x00000000004019d3 : mov byte ptr [rip + 0x20a93e], 1 ; ret
0x0000000000402ee3 : mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000402749 : mov dh, -0x40 ; pop rbp ; ret
0x000000000040a7d9 : mov dh, -1 ; call rsp
0x000000000040a759 : mov dl, -1 ; call rsp
0x000000000040300d : mov dword ptr [0x60c398], edi ; pop rbp ; ret
0x00000000004037e6 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004037a8 : mov dword ptr [rax], eax ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000403664 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004037a7 : mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000401c29 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040549b : mov dword ptr [rbp - 0x50], eax ; call 0x4016b5
0x0000000000401b47 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408fbd : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040275f : mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x000000000040385e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004054cc : mov eax, 0x48f78948 ; mov esi, eax ; call 0x401789
0x0000000000403618 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000406ceb : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403283 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403615 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004031df : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040795a : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406fe3 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004035cd : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040365e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000403400 : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000407109 : mov eax, dword ptr [rbp - 0x1c] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000409217 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004037aa : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000405dce : mov eax, dword ptr [rbp - 0x38] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040392f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004054d9 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000408974 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407b69 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407aa8 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004087bf : mov eax, dword ptr [rbp - 4] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040789d : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000406dcd : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040599f : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000408fc0 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004059cc : mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405aff : mov eax, edi ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405c5b : mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402fb9 : mov eax, edx ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000405a73 : mov eax, esi ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004019fb : mov ebp, esp ; call rax
0x0000000000401961 : mov ebp, esp ; ja 0x40196c ; pop rbp ; ret
0x00000000004059e2 : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000406a1d : mov ecx, 0x5b2a830a ; ret
0x00000000004039f2 : mov ecx, dword ptr [rax*8 + 0x409b80] ; jmp rcx
0x0000000000403d16 : mov ecx, dword ptr [rax*8 + 0x409bc8] ; jmp rcx
0x00000000004063de : mov ecx, dword ptr [rax*8 + 0x40a0b0] ; jmp rcx
0x00000000004075ce : mov ecx, dword ptr [rax*8 + 0x40a420] ; jmp rcx
0x000000000040754e : mov ecx, dword ptr [rax*8 + 0x40a480] ; jmp rcx
0x0000000000403661 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004019f5 : mov edi, 0x60be20 ; mov rbp, rsp ; call rax
0x0000000000401972 : mov edi, 0x60c2d0 ; jmp rax
0x00000000004019b2 : mov edi, 0x60c2d0 ; jmp rdx
0x00000000004052e1 : mov edi, dword ptr [rbp - 0x50] ; call 0x401505
0x0000000000409267 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000040ad79 : mov edi, edi ; call rdi
0x00000000004054ce : mov edi, esi ; mov rsi, rax ; call 0x401787
0x0000000000409266 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x00000000004054d1 : mov esi, eax ; call 0x401784
0x00000000004019b0 : mov esi, eax ; mov edi, 0x60c2d0 ; jmp rdx
0x0000000000405498 : mov esi, ecx ; mov qword ptr [rbp - 0x50], rax ; call 0x4016b8
0x000000000040300c : mov qword ptr [0x60c398], rdi ; pop rbp ; ret
0x000000000040549a : mov qword ptr [rbp - 0x50], rax ; call 0x4016b6
0x000000000040275e : mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000040385d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004054da : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000406cea : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403282 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403614 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004031de : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000406fe2 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004035cc : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004033ff : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000405dcd : mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040392e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004054d8 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000406dcc : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040599e : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004019fa : mov rbp, rsp ; call rax
0x0000000000401960 : mov rbp, rsp ; ja 0x40196d ; pop rbp ; ret
0x00000000004059e1 : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x00000000004039f1 : mov rcx, qword ptr [rax*8 + 0x409b80] ; jmp rcx
0x0000000000403d15 : mov rcx, qword ptr [rax*8 + 0x409bc8] ; jmp rcx
0x00000000004063dd : mov rcx, qword ptr [rax*8 + 0x40a0b0] ; jmp rcx
0x00000000004075cd : mov rcx, qword ptr [rax*8 + 0x40a420] ; jmp rcx
0x000000000040754d : mov rcx, qword ptr [rax*8 + 0x40a480] ; jmp rcx
0x00000000004052e0 : mov rdi, qword ptr [rbp - 0x50] ; call 0x401506
0x00000000004054cd : mov rdi, rsi ; mov rsi, rax ; call 0x401788
0x00000000004054d0 : mov rsi, rax ; call 0x401785
0x00000000004019af : mov rsi, rax ; mov edi, 0x60c2d0 ; jmp rdx
0x0000000000400980 : movabs byte ptr [0x800190021000000], al ; ret
0x0000000000407930 : movabs dword ptr [0x941c90941f0213f], eax ; ret 0x3145
0x000000000040ad74 : movsb byte ptr [rdi], byte ptr [rsi] ; add eax, dword ptr [rax] ; add al, cl ; mov edi, edi ; call rdi
0x0000000000402ee2 : movzx eax, al ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000402748 : movzx eax, al ; pop rbp ; ret
0x0000000000405c8b : movzx eax, cx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040b5e0 : nop ; ret
0x0000000000409288 : nop dword ptr [rax + rax] ; ret
0x000000000040b5fd : or al, 0 ; add al, dh ; ret
0x000000000040a7d5 : or al, 0 ; add byte ptr [rsi + rsi*4 - 1], bl ; call rsp
0x000000000040407d : or al, 0x18 ; ret 0x6451
0x0000000000401f44 : or al, 0x25 ; push rax ; ret 0x60
0x000000000040b5dc : or al, 0xc ; add byte ptr [rax], al ; nop ; ret
0x0000000000403d17 : or al, 0xffffffffffffffc5 ; enter 0x409b, 0 ; jmp rcx
0x0000000000408786 : or byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; ret 0x8148
0x000000000040a6d5 : or byte ptr [rax], al ; add byte ptr [rsi + rbp*4 - 1], cl ; call rsp
0x000000000040a795 : or eax, dword ptr [rax] ; add ah, bl ; mov ah, -1 ; call rsp
0x000000000040b5bd : or eax, dword ptr [rax] ; add al, dh ; ret 0xffff
0x00000000004056c1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040927c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000404f61 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040927e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000404f63 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000409280 : pop r14 ; pop r15 ; ret
0x0000000000404d13 : pop r14 ; pop rbp ; ret
0x0000000000404f65 : pop r15 ; pop rbp ; ret
0x0000000000409282 : pop r15 ; ret
0x00000000004030fe : pop rax ; ret 0x60
0x00000000004019d2 : pop rbp ; mov byte ptr [rip + 0x20a93e], 1 ; ret
0x0000000000401971 : pop rbp ; mov edi, 0x60c2d0 ; jmp rax
0x00000000004019ae : pop rbp ; mov rsi, rax ; mov edi, 0x60c2d0 ; jmp rdx
0x000000000040927b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040927f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401965 : pop rbp ; ret
0x0000000000404f60 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040689d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000404d12 : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000406a21 : pop rbx ; ret
0x0000000000404f66 : pop rdi ; pop rbp ; ret
0x0000000000409283 : pop rdi ; ret
0x0000000000404f64 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000409281 : pop rsi ; pop r15 ; ret
0x0000000000404d14 : pop rsi ; pop rbp ; ret
0x000000000040a7d8 : pop rsp ; mov dh, -1 ; call rsp
0x000000000040927d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000404f62 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040545e : push rax ; pop rbp ; ret
0x0000000000401f46 : push rax ; ret 0x60
0x00000000004019f4 : push rbp ; mov edi, 0x60be20 ; mov rbp, rsp ; call rax
0x00000000004059e0 : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000400998 : pushfq ; add al, byte ptr [rax] ; add byte ptr [rcx], dl ; add byte ptr [rcx], bl ; add byte ptr [rax], cl ; ret
0x000000000040a718 : pushfq ; mov al, -1 ; call rsp
0x000000000040a758 : pushfq ; mov dl, -1 ; call rsp
0x000000000040a818 : pushfq ; ret
0x0000000000400989 : ret
0x0000000000408292 : ret 0
0x00000000004082a6 : ret 0x148
0x00000000004050fe : ret 0x1b2
0x00000000004017c2 : ret 0x20a9
0x00000000004015c2 : ret 0x20aa
0x0000000000403265 : ret 0x2948
0x0000000000404489 : ret 0x294c
0x00000000004044a5 : ret 0x294d
0x0000000000407939 : ret 0x3145
0x0000000000409dc0 : ret 0x403e
0x0000000000401b5c : ret 0x4098
0x00000000004036e4 : ret 0x5589
0x0000000000400959 : ret 0x60
0x000000000040407f : ret 0x6451
0x0000000000402693 : ret 0x8041
0x0000000000407759 : ret 0x8141
0x0000000000406edc : ret 0x8148
0x0000000000408dff : ret 0x840
0x0000000000404723 : ret 0x8840
0x0000000000406399 : ret 0x8844
0x00000000004022ab : ret 0x8948
0x00000000004044a8 : ret 0x8949
0x000000000040463c : ret 0x89a5
0x0000000000402f54 : ret 0x8b48
0x00000000004044bd : ret 0xade8
0x0000000000401eb7 : ret 0xb0
0x0000000000408299 : ret 0xb849
0x0000000000407799 : ret 0xc131
0x0000000000401995 : ret 0xc148
0x0000000000408000 : ret 0xc2f6
0x00000000004020ef : ret 0xc563
0x0000000000403ea4 : ret 0xca21
0x00000000004078d2 : ret 0xca29
0x0000000000405993 : ret 0xd284
0x0000000000407815 : ret 0xd709
0x0000000000404d4c : ret 0xee8
0x0000000000404738 : ret 0xf180
0x0000000000402106 : ret 0xf229
0x0000000000407ff3 : ret 0xf280
0x0000000000403f1e : ret 0xf281
0x000000000040287a : ret 0xffed
0x0000000000401cca : ret 0xfff8
0x00000000004052e6 : ret 0xffff
0x0000000000405104 : ret 1
0x0000000000408060 : ret 2
0x0000000000408790 : ret 4
0x00000000004037a6 : rol byte ptr [rcx + rcx*4], 1 ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000406a00 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000408789 : ror byte ptr [r8 - 0x77], 1 ; ret 0x8148
0x0000000000403930 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x40399b ; ret
0x000000000040199c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4019ab ; pop rbp ; ret
0x0000000000406a01 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x000000000040447d : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000404486 : ror byte ptr [rax - 0x77], 1 ; ret 0x294c
0x000000000040878a : ror byte ptr [rax - 0x77], 1 ; ret 0x8148
0x0000000000403931 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x40399a ; ret
0x000000000040199e : sar eax, 1 ; jne 0x4019a9 ; pop rbp ; ret
0x000000000040b6c1 : sar edi, 1 ; jmp rax
0x000000000040199d : sar rax, 1 ; jne 0x4019aa ; pop rbp ; ret
0x000000000040b5b8 : sbb al, 0 ; add byte ptr [rax], al ; in al, dx ; or eax, dword ptr [rax] ; add al, dh ; ret 0xffff
0x000000000040b5d8 : sbb al, 0 ; add byte ptr [rax], al ; or al, 0xc ; add byte ptr [rax], al ; nop ; ret
0x000000000040708c : shld dword ptr [rax], eax, -0x75 ; add al, 0x25 ; pop rax ; ret 0x60
0x0000000000408ad8 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000406a1f : sub dword ptr [rdx], 0x5b ; ret
0x00000000004092bd : sub esp, 8 ; add rsp, 8 ; ret
0x00000000004092bc : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040abb9 : test bh, bh ; call qword ptr [rsi]
0x000000000040ab99 : test bh, bh ; jmp qword ptr [rdi]
0x000000000040928a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040aa54 : test byte ptr [rax], al ; add byte ptr [rax], al ; clc ; jo 0x40aa61 ; jmp rdx
0x000000000040abb8 : test dil, dil ; call qword ptr [rsi]
0x000000000040263f : test dword ptr [rax], ecx ; add byte ptr [rax], al ; add dh, al ; add al, 0x25 ; ret 0x60
0x00000000004019d6 : test eax, 0xf3010020 ; ret
0x0000000000404722 : xchg eax, ebp ; ret 0x8840
0x0000000000400968 : xchg eax, ecx ; add al, byte ptr [rax] ; add byte ptr [rcx], dl ; add byte ptr [rcx], bl ; add al, ah ; ret 0x60
0x0000000000405992 : xchg eax, esp ; ret 0xd284
0x0000000000401951 : xlatb ; ret 0x60
0x0000000000402c8a : xor al, 0x25 ; ret
0x0000000000401b57 : xor byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x4098
0x00000000004030a8 : xor byte ptr [rax - 0x75], cl ; cmp al, 0x25 ; cwde ; ret
0x000000000040838e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000405457 : xor eax, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x00000000004037a5 : xor eax, edx ; mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
