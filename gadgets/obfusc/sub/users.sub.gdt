0x0000000000403f49 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004078db : add al, ah ; ret
0x0000000000407a3b : add al, al ; fdivp st(7) ; call rax
0x0000000000408667 : add al, bh ; loope 0x40866e ; jmp rdx
0x00000000004051bb : add al, ch ; pop rdi ; ret 0xffff
0x0000000000407a0b : add al, dh ; fdiv st(7), st(0) ; call qword ptr [rax]
0x0000000000406bcf : add bl, dh ; ret
0x0000000000404f8d : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000406bcd : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000406bcb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000406bcc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004035ee : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x000000000040485e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040602c : add byte ptr [rax], al ; add cl, ch ; ret 2
0x0000000000403f11 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403c20 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004012ab : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000408666 : add byte ptr [rax], al ; clc ; loope 0x40866f ; jmp rdx
0x00000000004013c9 : add byte ptr [rax], al ; jmp 0x4012c9
0x00000000004024e2 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000408662 : add byte ptr [rax], al ; or al, 0xb ; add byte ptr [rax], al ; clc ; loope 0x408673 ; jmp rdx
0x000000000040790a : add byte ptr [rax], al ; or dl, 0xff ; call qword ptr [rax]
0x00000000004022d8 : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000404e2b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403be0 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004079ba : add byte ptr [rax], al ; rcl dh, -1 ; call rax
0x0000000000407a3a : add byte ptr [rax], al ; rcr dh, -1 ; call rax
0x0000000000406bce : add byte ptr [rax], al ; ret
0x0000000000404e2c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000403be1 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000408663 : add byte ptr [rbx + rcx], cl ; add byte ptr [rax], al ; clc ; loope 0x408672 ; jmp rdx
0x00000000004051c8 : add byte ptr [rcx + 0x3fe8f845], cl ; ret 0xffff
0x000000000040519e : add byte ptr [rcx + 0x69e8fc45], cl ; ret 0xffff
0x0000000000406a6c : add byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x0000000000401728 : add byte ptr [rcx], al ; ret
0x0000000000406028 : add byte ptr [rdi], cl ; lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x00000000004035f0 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000404860 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040602e : add cl, ch ; ret 2
0x0000000000405469 : add dword ptr [rax - 0x77], ecx ; ret 0x8148
0x0000000000403f0f : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404e2a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000403bdf : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040692d : add dword ptr [rax], ecx ; ret 0x840
0x00000000004059b4 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040660a : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401724 : add eax, 0x207b76 ; add ebx, esi ; ret
0x000000000040602b : add eax, 0xe9000000 ; ret 2
0x00000000004016eb : add eax, edx ; sar rax, 1 ; jne 0x4016fc ; pop rbp ; ret
0x0000000000401729 : add ebx, esi ; ret
0x000000000040185b : add esp, 0x10 ; pop rbp ; ret
0x000000000040635c : add esp, 0x130 ; pop rbp ; ret
0x000000000040515c : add esp, 0x1a0 ; pop rbp ; ret
0x00000000004022d4 : add esp, 0x1c0 ; pop rbp ; ret
0x0000000000401bba : add esp, 0x20 ; pop rbp ; ret
0x000000000040193d : add esp, 0x30 ; pop rbp ; ret
0x0000000000401dd0 : add esp, 0x40 ; pop rbp ; ret
0x000000000040432c : add esp, 0x50 ; pop rbp ; ret
0x0000000000402803 : add esp, 0x70 ; pop rbp ; ret
0x000000000040423a : add esp, 0x90 ; pop rbp ; ret
0x0000000000404ff3 : add esp, 0xa0 ; pop rbp ; ret
0x00000000004012ae : add esp, 8 ; ret
0x00000000004016ea : add rax, rdx ; sar rax, 1 ; jne 0x4016fd ; pop rbp ; ret
0x000000000040185a : add rsp, 0x10 ; pop rbp ; ret
0x000000000040635b : add rsp, 0x130 ; pop rbp ; ret
0x000000000040515b : add rsp, 0x1a0 ; pop rbp ; ret
0x00000000004022d3 : add rsp, 0x1c0 ; pop rbp ; ret
0x0000000000401bb9 : add rsp, 0x20 ; pop rbp ; ret
0x000000000040193c : add rsp, 0x30 ; pop rbp ; ret
0x0000000000401dcf : add rsp, 0x40 ; pop rbp ; ret
0x000000000040432b : add rsp, 0x50 ; pop rbp ; ret
0x0000000000402802 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000404239 : add rsp, 0x90 ; pop rbp ; ret
0x0000000000404ff2 : add rsp, 0xa0 ; pop rbp ; ret
0x00000000004012ad : add rsp, 8 ; ret
0x0000000000406609 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401727 : and byte ptr [rax], al ; add ebx, esi ; ret
0x000000000040517b : and eax, 0x407705 ; call 0x401417
0x0000000000401e2f : and eax, 0x6092a8 ; pop rbp ; ret
0x0000000000401e53 : and eax, 0x6092b0 ; pop rbp ; ret
0x0000000000405329 : call 0x2d519
0x0000000000405180 : call 0x401412
0x0000000000405192 : call 0x401422
0x00000000004051dc : call 0x4014b2
0x000000000040532a : call 0x4015b2
0x0000000000403c19 : call 0xffffffffe902c569
0x0000000000403c18 : call 0xffffffffe902c56a
0x0000000000406ba9 : call qword ptr [r12 + rbx*8]
0x000000000040790f : call qword ptr [rax]
0x00000000004047bd : call qword ptr [rcx]
0x0000000000407c83 : call qword ptr [rsi]
0x0000000000406baa : call qword ptr [rsp + rbx*8]
0x000000000040174d : call rax
0x000000000040396c : call rbx
0x0000000000407e43 : call rdi
0x000000000040635a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x000000000040535f : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404871 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004051cb : clc ; call 0x401413
0x00000000004051ca : clc ; call 0x401414
0x00000000004016ef : clc ; jne 0x4016f8 ; pop rbp ; ret
0x0000000000408668 : clc ; loope 0x40866d ; jmp rdx
0x00000000004026b5 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000406aef : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000406af2 : clc ; pop rbp ; ret
0x00000000004064a6 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405b3b : cld ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405a7a : cld ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004051a1 : cld ; call 0x401413
0x00000000004051a0 : cld ; call 0x401414
0x0000000000406aec : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004064a3 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406446 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405a77 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004016ad : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4016c0 ; pop rbp ; ret
0x000000000040496c : cwde ; mov rcx, qword ptr [rax*8 + 0x407458] ; jmp rcx
0x000000000040572e : dec dword ptr [rax - 0x75] ; push rbp ; fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000406094 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000403372 : dec dword ptr [rcx - 0x77] ; ret 0x294d
0x0000000000403700 : enter 0x4b05, 0x34 ; fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x00000000004079cd : fcos ; call qword ptr [rax]
0x0000000000407a0d : fdiv st(7), st(0) ; call qword ptr [rax]
0x00000000004079fd : fdiv st(7), st(0) ; call rax
0x0000000000407a3d : fdivp st(7) ; call rax
0x00000000004084c9 : fdivp st(7) ; jmp rax
0x0000000000403704 : fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x0000000000405732 : fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000406bac : fmul qword ptr [rax - 0x7d] ; ret
0x00000000004047bb : fsubr st(0) ; call qword ptr [rcx]
0x0000000000401859 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004016c0 : hlt ; pop rbp ; mov edi, 0x609260 ; jmp rax
0x0000000000401d9f : in al, 0x23 ; ret
0x000000000040398b : inc dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000404f95 : int 0x80
0x0000000000401e0f : int 0xf6
0x00000000004016b3 : ja 0x4016ba ; pop rbp ; ret
0x000000000040519c : ja 0x4051e6 ; add byte ptr [rcx + 0x69e8fc45], cl ; ret 0xffff
0x00000000004051c6 : ja 0x405210 ; add byte ptr [rcx + 0x3fe8f845], cl ; ret 0xffff
0x00000000004051c5 : ja 0x405211 ; add byte ptr [rcx + 0x3fe8f845], cl ; ret 0xffff
0x0000000000401725 : jbe 0x4017a8 ; and byte ptr [rax], al ; add ebx, esi ; ret
0x00000000004016bf : je 0x4016bd ; pop rbp ; mov edi, 0x609260 ; jmp rax
0x0000000000405324 : jge 0x40531e ; mov rsi, qword ptr [rbp - 0x18] ; call 0x4015b8
0x00000000004013cb : jmp 0x4012c7
0x0000000000405468 : jmp 0xffffffffc2c99c72
0x000000000040804b : jmp qword ptr [rax]
0x0000000000402e06 : jmp qword ptr [rcx]
0x0000000000407f2b : jmp qword ptr [rdx]
0x00000000004016c7 : jmp rax
0x00000000004028c9 : jmp rcx
0x0000000000401707 : jmp rdx
0x00000000004016f0 : jne 0x4016f7 ; pop rbp ; ret
0x0000000000405328 : jne 0x405316 ; call 0x4015b4
0x0000000000401726 : jnp 0x40174d ; add byte ptr [rcx], al ; ret
0x0000000000402805 : jo 0x402866 ; ret
0x0000000000403e2f : jo 0x403e95 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004044d4 : jo 0x404535 ; ret
0x000000000040460e : jo 0x40466f ; ret
0x000000000040602a : lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000405179 : lea edi, dword ptr [0x407705] ; call 0x401419
0x0000000000408669 : loope 0x40866c ; jmp rdx
0x0000000000407a4d : loopne 0x407a50 ; call qword ptr [rax]
0x0000000000405190 : mov al, 0 ; call 0x401424
0x00000000004043ab : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000404238 : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000407a38 : mov al, 0xb ; add byte ptr [rax], al ; rcr dh, -1 ; call rax
0x00000000004079b8 : mov al, 9 ; add byte ptr [rax], al ; rcl dh, -1 ; call rax
0x0000000000406606 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401e51 : mov byte ptr [0x6092b0], al ; pop rbp ; ret
0x0000000000401723 : mov byte ptr [rip + 0x207b76], 1 ; ret
0x00000000004059b6 : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040660c : mov dh, -0x40 ; pop rbp ; ret
0x0000000000401e2d : mov dword ptr [0x6092a8], edi ; pop rbp ; ret
0x00000000004026b6 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000402678 : mov dword ptr [rax], eax ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000402534 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000402677 : mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000401939 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401857 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040519f : mov dword ptr [rbp - 4], eax ; call 0x401415
0x00000000004051c9 : mov dword ptr [rbp - 8], eax ; call 0x401415
0x0000000000406aed : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040272e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004058a0 : mov dword ptr [rdx], ecx ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004024e8 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040527b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004020a3 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004024e5 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000401fff : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405573 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040249d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040252e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040267a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004027ff : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004043a9 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004064a4 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405b39 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405a78 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040535d : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040486f : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406af0 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040174b : mov ebp, esp ; call rax
0x00000000004016b1 : mov ebp, esp ; ja 0x4016bc ; pop rbp ; ret
0x0000000000404fad : mov ecx, 0x5b2a830a ; ret
0x00000000004028c2 : mov ecx, dword ptr [rax*8 + 0x406f50] ; jmp rcx
0x0000000000402be6 : mov ecx, dword ptr [rax*8 + 0x406f98] ; jmp rcx
0x000000000040496e : mov ecx, dword ptr [rax*8 + 0x407458] ; jmp rcx
0x0000000000402531 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401745 : mov edi, 0x608e20 ; mov rbp, rsp ; call rax
0x00000000004016c2 : mov edi, 0x609260 ; jmp rax
0x0000000000401702 : mov edi, 0x609260 ; jmp rdx
0x0000000000405323 : mov edi, dword ptr [rbp - 0x10] ; mov rsi, qword ptr [rbp - 0x18] ; call 0x4015b9
0x00000000004051da : mov edi, eax ; call 0x4014b4
0x000000000040518e : mov edi, eax ; mov al, 0 ; call 0x401426
0x0000000000406ba7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000406ba6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000405327 : mov esi, dword ptr [rbp - 0x18] ; call 0x4015b5
0x0000000000401700 : mov esi, eax ; mov edi, 0x609260 ; jmp rdx
0x000000000040572c : mov esp, 0x8b48ffff ; push rbp ; fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000401747 : mov fs, word ptr [rax] ; mov rbp, rsp ; call rax
0x0000000000401e2c : mov qword ptr [0x6092a8], rdi ; pop rbp ; ret
0x000000000040272d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040589f : mov qword ptr [rdx], rcx ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004043aa : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040527a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004020a2 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004024e4 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000401ffe : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405572 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040249c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004027fe : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004043a8 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040535c : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040486e : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040174a : mov rbp, rsp ; call rax
0x00000000004016b0 : mov rbp, rsp ; ja 0x4016bd ; pop rbp ; ret
0x00000000004028c1 : mov rcx, qword ptr [rax*8 + 0x406f50] ; jmp rcx
0x0000000000402be5 : mov rcx, qword ptr [rax*8 + 0x406f98] ; jmp rcx
0x000000000040496d : mov rcx, qword ptr [rax*8 + 0x407458] ; jmp rcx
0x00000000004051d9 : mov rdi, rax ; call 0x4014b5
0x000000000040518d : mov rdi, rax ; mov al, 0 ; call 0x401427
0x0000000000405326 : mov rsi, qword ptr [rbp - 0x18] ; call 0x4015b6
0x00000000004016ff : mov rsi, rax ; mov edi, 0x609260 ; jmp rdx
0x00000000004059b5 : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040660b : movzx eax, al ; pop rbp ; ret
0x0000000000406bc8 : nop dword ptr [rax + rax] ; ret
0x0000000000402f4d : or al, 0x18 ; ret 0x6451
0x0000000000408664 : or al, 0xb ; add byte ptr [rax], al ; clc ; loope 0x408671 ; jmp rdx
0x0000000000407a09 : or al, byte ptr [rax] ; add al, dh ; fdiv st(7), st(0) ; call qword ptr [rax]
0x000000000040790c : or dl, 0xff ; call qword ptr [rax]
0x0000000000407a39 : or eax, dword ptr [rax] ; add al, al ; fdivp st(7) ; call rax
0x0000000000408665 : or eax, dword ptr [rax] ; add al, bh ; loope 0x408670 ; jmp rdx
0x0000000000404591 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406bbc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000403e31 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406bbe : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000403e33 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406bc0 : pop r14 ; pop r15 ; ret
0x0000000000403be3 : pop r14 ; pop rbp ; ret
0x0000000000403e35 : pop r15 ; pop rbp ; ret
0x0000000000406bc2 : pop r15 ; ret
0x0000000000401722 : pop rbp ; mov byte ptr [rip + 0x207b76], 1 ; ret
0x00000000004016c1 : pop rbp ; mov edi, 0x609260 ; jmp rax
0x00000000004016fe : pop rbp ; mov rsi, rax ; mov edi, 0x609260 ; jmp rdx
0x0000000000406bbb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000406bbf : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004016b5 : pop rbp ; ret
0x0000000000403e30 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000404e2d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403be2 : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000404fb1 : pop rbx ; ret
0x0000000000403e36 : pop rdi ; pop rbp ; ret
0x0000000000406bc3 : pop rdi ; ret
0x00000000004051bd : pop rdi ; ret 0xffff
0x0000000000403e34 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000406bc1 : pop rsi ; pop r15 ; ret
0x0000000000403be4 : pop rsi ; pop rbp ; ret
0x0000000000406bbd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000403e32 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000407a37 : push qword ptr [rax - 0x3ffffff5] ; fdivp st(7) ; call rax
0x00000000004079f7 : push qword ptr [rax - 0x5ffffff6] ; fdiv st(7), st(0) ; call rax
0x0000000000407a07 : push rax ; or al, byte ptr [rax] ; add al, dh ; fdiv st(7), st(0) ; call qword ptr [rax]
0x000000000040432e : push rax ; pop rbp ; ret
0x0000000000405731 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000401744 : push rbp ; mov edi, 0x608e20 ; mov rbp, rsp ; call rax
0x00000000004079bc : rcl dh, -1 ; call rax
0x0000000000407a3c : rcr dh, -1 ; call rax
0x00000000004012b1 : ret
0x0000000000406262 : ret 0
0x0000000000406276 : ret 0x148
0x0000000000403fce : ret 0x1b2
0x00000000004015d2 : ret 0x207b
0x00000000004013d2 : ret 0x207c
0x0000000000402085 : ret 0x2948
0x0000000000403359 : ret 0x294c
0x0000000000403375 : ret 0x294d
0x00000000004025b4 : ret 0x5589
0x0000000000402f4f : ret 0x6451
0x000000000040546c : ret 0x8148
0x000000000040692f : ret 0x840
0x00000000004035f3 : ret 0x8840
0x0000000000404929 : ret 0x8844
0x0000000000401c0b : ret 0x8948
0x0000000000403378 : ret 0x8949
0x000000000040350c : ret 0x89a5
0x000000000040335c : ret 0x8b48
0x0000000000406269 : ret 0xb849
0x000000000040338d : ret 0xbde8
0x00000000004016e5 : ret 0xc148
0x0000000000405fd0 : ret 0xc2f6
0x0000000000402d74 : ret 0xca21
0x0000000000404863 : ret 0xd284
0x0000000000403c1c : ret 0xee8
0x0000000000403608 : ret 0xf180
0x0000000000405fc3 : ret 0xf280
0x0000000000402dee : ret 0xf281
0x0000000000405182 : ret 0xffff
0x0000000000403fd4 : ret 1
0x0000000000406030 : ret 2
0x0000000000402676 : rol byte ptr [rcx + rcx*4], 1 ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000404f90 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000402800 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x40286b ; ret
0x00000000004016ec : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4016fb ; pop rbp ; ret
0x0000000000404f91 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x000000000040334d : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000403356 : ror byte ptr [rax - 0x77], 1 ; ret 0x294c
0x0000000000402801 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x40286a ; ret
0x00000000004016ee : sar eax, 1 ; jne 0x4016f9 ; pop rbp ; ret
0x00000000004016ed : sar rax, 1 ; jne 0x4016fa ; pop rbp ; ret
0x0000000000406608 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000404faf : sub dword ptr [rdx], 0x5b ; ret
0x0000000000406bfd : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000406bfc : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000406bca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004035f2 : xchg eax, ebp ; ret 0x8840
0x0000000000404862 : xchg eax, esp ; ret 0xd284
0x000000000040635e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040519b : xor byte ptr [rdi + 0x40], dh ; add byte ptr [rcx + 0x69e8fc45], cl ; ret 0xffff
0x0000000000404327 : xor eax, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x0000000000402675 : xor eax, edx ; mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
