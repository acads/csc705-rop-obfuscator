0x000000000040f44a : adc al, byte ptr [rcx] ; jmp rcx
0x0000000000411829 : adc bh, bh ; call rdx
0x0000000000412090 : adc byte ptr [rcx - 1], dl ; call rdi
0x000000000040a8ca : adc byte ptr [rcx], al ; jmp rcx
0x000000000040fb6f : adc dword ptr [rax - 0x42], ecx ; ret
0x00000000004088cb : adc dword ptr [rcx], eax ; jmp rcx
0x0000000000405a99 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041133d : add al, -1 ; jmp qword ptr [rax]
0x0000000000411b04 : add al, 4 ; add byte ptr [rax], al ; pop rax ; sub bh, bh ; call rdi
0x00000000004113fb : add al, ah ; sub al, -1 ; jmp qword ptr [rax]
0x0000000000411965 : add al, byte ptr [rax] ; add byte ptr [rax], bh ; and bh, bh ; call qword ptr [rsi]
0x000000000040f543 : add al, byte ptr [rax] ; add byte ptr [rcx - 0xdf43], al ; call qword ptr [rax]
0x0000000000411964 : add al, byte ptr fs:[rax] ; add byte ptr [rax], bh ; and bh, bh ; call qword ptr [rsi]
0x00000000004117a7 : add al, ch ; add edi, edi ; jmp rdx
0x000000000041133b : add al, dl ; add al, -1 ; jmp qword ptr [rax]
0x00000000004117c9 : add bh, bh ; jmp qword ptr [rdx]
0x0000000000411749 : add bh, bh ; jmp qword ptr [rsi]
0x000000000040febf : add bl, dh ; ret
0x0000000000406322 : add byte ptr [r8 - 0x73], cl ; or al, 0x25 ; ret 0x410c
0x000000000040c314 : add byte ptr [rax + 1], cl ; ret 0xc148
0x0000000000402b67 : add byte ptr [rax - 0x41], cl ; out -0x2f, al ; jl 0x402b6f ; ret 0x87f3
0x000000000040fb83 : add byte ptr [rax - 0x42], cl ; ret
0x0000000000402839 : add byte ptr [rax - 0x47], cl ; wait ; ret 0x73c9
0x0000000000406323 : add byte ptr [rax - 0x73], cl ; or al, 0x25 ; ret 0x410c
0x000000000040cae5 : add byte ptr [rax - 0x75], cl ; clc ; mov rsp, rbp ; pop rbp ; ret
0x00000000004028af : add byte ptr [rax - 0x75], cl ; fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x000000000040d182 : add byte ptr [rax - 0x75], cl ; loopne 0x40d1eb ; ret
0x000000000040e089 : add byte ptr [rax - 0x75], cl ; push rbp ; call 0x210361e1
0x0000000000406add : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000040eadf : add byte ptr [rax - 0x77], cl ; fsubr st(1) ; ret 0xffff
0x000000000040a367 : add byte ptr [rax - 0x77], cl ; ret 0x30e8
0x000000000040a3fa : add byte ptr [rax - 0x77], cl ; ret 0x9de8
0x000000000041208e : add byte ptr [rax], al ; adc byte ptr [rcx - 1], dl ; call rdi
0x0000000000411b02 : add byte ptr [rax], al ; add al, 4 ; add byte ptr [rax], al ; pop rax ; sub bh, bh ; call rdi
0x0000000000411962 : add byte ptr [rax], al ; add al, byte ptr fs:[rax] ; add byte ptr [rax], bh ; and bh, bh ; call qword ptr [rsi]
0x00000000004117a5 : add byte ptr [rax], al ; add al, ch ; add edi, edi ; jmp rdx
0x000000000040febd : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040c312 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0xc148
0x0000000000402b65 : add byte ptr [rax], al ; add byte ptr [rax - 0x41], cl ; out -0x2f, al ; jl 0x402b71 ; ret 0x87f3
0x000000000040fb81 : add byte ptr [rax], al ; add byte ptr [rax - 0x42], cl ; ret
0x0000000000402837 : add byte ptr [rax], al ; add byte ptr [rax - 0x47], cl ; wait ; ret 0x73c9
0x00000000004028ad : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x000000000040d180 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; loopne 0x40d1ed ; ret
0x000000000040e087 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbp ; call 0x210361e3
0x000000000040eadd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fsubr st(1) ; ret 0xffff
0x000000000040febb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040d17f : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x20] ; pop rbp ; ret
0x000000000040febc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000041085c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x404b
0x000000000040d338 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x000000000040513e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000402f53 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x000000000040c238 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x00000000004063ae : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000407b8c : add byte ptr [rax], al ; add cl, ch ; ret 2
0x0000000000405a61 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405770 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401323 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004117a6 : add byte ptr [rax], al ; call 0xffffffffe34116b3
0x0000000000401359 : add byte ptr [rax], al ; jmp 0x401339
0x0000000000404032 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040d181 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x20] ; pop rbp ; ret
0x000000000041208a : add byte ptr [rax], al ; mov word ptr [rcx], cs ; add byte ptr [rax], al ; adc byte ptr [rcx - 1], dl ; call rdi
0x00000000004117a2 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add al, ch ; add edi, edi ; jmp rdx
0x0000000000411b06 : add byte ptr [rax], al ; pop rax ; sub bh, bh ; call rdi
0x0000000000402e5e : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040697b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405730 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000041137a : add byte ptr [rax], al ; push rax ; sbb edi, edi ; jmp qword ptr [rax]
0x000000000040febe : add byte ptr [rax], al ; ret
0x000000000041085e : add byte ptr [rax], al ; ret 0x404b
0x000000000041133a : add byte ptr [rax], al ; rol byte ptr [rdi + rdi*8], 1 ; jmp qword ptr [rax]
0x000000000041142a : add byte ptr [rax], al ; xor dil, dil ; jmp rax
0x0000000000411967 : add byte ptr [rax], bh ; and bh, bh ; call qword ptr [rsi]
0x00000000004113bb : add byte ptr [rax], dh ; sub bh, bh ; jmp qword ptr [rax]
0x00000000004113eb : add byte ptr [rax], dl ; sub edi, edi ; jmp rax
0x000000000040697c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000405731 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040d33a : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x000000000040f545 : add byte ptr [rcx - 0xdf43], al ; call qword ptr [rax]
0x000000000040d02c : add byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x00000000004017b8 : add byte ptr [rcx], al ; ret
0x0000000000407b88 : add byte ptr [rdi], cl ; lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000405140 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000402f55 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x000000000040c23a : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x00000000004063b0 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000411963 : add byte ptr [rdx + rax], ah ; add byte ptr [rax], bh ; and bh, bh ; call qword ptr [rsi]
0x0000000000411b03 : add byte ptr [rsp + rax], al ; add byte ptr [rax], al ; pop rax ; sub bh, bh ; call rdi
0x0000000000407b8e : add cl, ch ; ret 2
0x000000000040c2f5 : add dh, ch ; call 0x4932c44c
0x0000000000406fb9 : add dword ptr [rax - 0x77], ecx ; ret 0x8148
0x0000000000405a5f : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040697a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040572f : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040f732 : add dword ptr [rax], eax ; add byte ptr [rcx - 0xdf43], al ; call qword ptr [rax]
0x000000000040ceed : add dword ptr [rax], ecx ; ret 0x840
0x000000000040726d : add dword ptr [rdi], ecx ; mov dh, -0x3f ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000402a83 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040cb34 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040cbca : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004017b4 : add eax, 0x211b1e ; add ebx, esi ; ret
0x00000000004088a0 : add eax, 0x8301148b ; ret 0x89ee
0x0000000000407b8b : add eax, 0xe9000000 ; ret 2
0x0000000000411339 : add eax, dword ptr [rax] ; add al, dl ; add al, -1 ; jmp qword ptr [rax]
0x000000000040177b : add eax, edx ; sar rax, 1 ; jne 0x40178c ; pop rbp ; ret
0x00000000004017b9 : add ebx, esi ; ret
0x00000000004117a9 : add edi, edi ; jmp rdx
0x0000000000403ad1 : add esi, edx ; sub rax, rsi ; mov qword ptr [rcx], rax ; pop rbp ; ret
0x000000000040195b : add esp, 0x10 ; pop rbp ; ret
0x0000000000403924 : add esp, 0x130 ; pop rbp ; ret
0x0000000000406cac : add esp, 0x1a0 ; pop rbp ; ret
0x000000000040e034 : add esp, 0x1b8 ; pop rbp ; ret
0x000000000040fe41 : add esp, 0x1c0 ; pop rbp ; ret
0x0000000000402a88 : add esp, 0x20 ; pop rbp ; ret
0x0000000000401a6d : add esp, 0x30 ; pop rbp ; ret
0x0000000000403b47 : add esp, 0x40 ; pop rbp ; ret
0x0000000000405e7c : add esp, 0x50 ; pop rbp ; ret
0x000000000040357c : add esp, 0x60 ; pop rbp ; ret
0x000000000040299e : add esp, 0x70 ; pop rbp ; ret
0x0000000000405d8a : add esp, 0x90 ; pop rbp ; ret
0x0000000000402e5a : add esp, 0xa0 ; pop rbp ; ret
0x0000000000401326 : add esp, 8 ; ret
0x000000000040177a : add rax, rdx ; sar rax, 1 ; jne 0x40178d ; pop rbp ; ret
0x000000000040195a : add rsp, 0x10 ; pop rbp ; ret
0x0000000000403923 : add rsp, 0x130 ; pop rbp ; ret
0x0000000000406cab : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000040e033 : add rsp, 0x1b8 ; pop rbp ; ret
0x000000000040fe40 : add rsp, 0x1c0 ; pop rbp ; ret
0x0000000000402a87 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000401a6c : add rsp, 0x30 ; pop rbp ; ret
0x0000000000403b46 : add rsp, 0x40 ; pop rbp ; ret
0x0000000000405e7b : add rsp, 0x50 ; pop rbp ; ret
0x000000000040357b : add rsp, 0x60 ; pop rbp ; ret
0x000000000040299d : add rsp, 0x70 ; pop rbp ; ret
0x0000000000405d89 : add rsp, 0x90 ; pop rbp ; ret
0x0000000000402e59 : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000401325 : add rsp, 8 ; ret
0x000000000040cbc9 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004118a9 : and bh, bh ; call qword ptr [rax]
0x0000000000411969 : and bh, bh ; call qword ptr [rsi]
0x00000000004017b7 : and dword ptr [rax], eax ; add ebx, esi ; ret
0x0000000000403b8f : and eax, 0x613310 ; pop rbp ; ret
0x0000000000403baf : and eax, 0x613318 ; pop rbp ; ret
0x0000000000403bd3 : and eax, 0x613320 ; pop rbp ; ret
0x000000000040e08d : call 0x210361dd
0x0000000000407194 : call 0x401666
0x000000000040fb6c : call 0x485286bf
0x000000000040fb6b : call 0x485286c0
0x000000000040c2f7 : call 0x4932c44a
0x00000000004117a8 : call 0xffffffffe34116b1
0x0000000000405769 : call 0xffffffffe902e0b9
0x0000000000405768 : call 0xffffffffe902e0ba
0x000000000040fe99 : call qword ptr [r12 + rbx*8]
0x000000000040f454 : call qword ptr [rax]
0x000000000040f804 : call qword ptr [rbx]
0x000000000040f72b : call qword ptr [rcx]
0x000000000040f7bc : call qword ptr [rdx]
0x000000000040f76c : call qword ptr [rsi]
0x000000000040fe9a : call qword ptr [rsp + rbx*8]
0x00000000004017dd : call rax
0x00000000004054bc : call rbx
0x0000000000411b0b : call rdi
0x000000000041182b : call rdx
0x0000000000407eba : clc ; add rsp, 0x130 ; pop rbp ; ret
0x0000000000406eaf : clc ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004063c1 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040357a : clc ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040177f : clc ; jne 0x401788 ; pop rbp ; ret
0x00000000004071ce : clc ; lea rsi, qword ptr [rbp - 0x38] ; call rax
0x0000000000403936 : clc ; mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000404205 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040d0af : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040399e : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040cae9 : clc ; mov rsp, rbp ; pop rbp ; ret
0x00000000004039a2 : clc ; pop rbp ; ret
0x0000000000401987 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040e032 : cld ; add rsp, 0x1b8 ; pop rbp ; ret
0x000000000040fe3f : cld ; add rsp, 0x1c0 ; pop rbp ; ret
0x000000000040769b : cld ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403a0e : cld ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040750f : cld ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040d0ac : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000408003 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407fa6 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403a0b : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040750c : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040d38a : cld ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040d38d : cld ; pop rbp ; ret
0x000000000040f542 : cli ; add al, byte ptr [rax] ; add byte ptr [rcx - 0xdf43], al ; call qword ptr [rax]
0x0000000000402b59 : cli ; ret 0x87f3
0x000000000040e530 : cmp byte ptr [rcx - 0x77], al ; ret 0x8141
0x000000000040e524 : cmp byte ptr [rcx], ah ; ret 0x8941
0x000000000040f7ea : cmp dword ptr [rcx - 0xf], eax ; jmp qword ptr [rcx]
0x000000000040173d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401750 ; pop rbp ; ret
0x0000000000409ad1 : cmp edi, dword ptr [rdx + 0x5a5335da] ; ret
0x0000000000403321 : cwde ; add rsp, 0xa0 ; pop rbp ; ret
0x00000000004064bc : cwde ; mov rcx, qword ptr [rax*8 + 0x410cd8] ; jmp rcx
0x0000000000409ace : dec dword ptr [rax - 0x46] ; cmp edi, dword ptr [rdx + 0x5a5335da] ; ret
0x000000000040a8c4 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; nop ; adc byte ptr [rcx], al ; jmp rcx
0x000000000040f1db : dec dword ptr [rax - 0x75] ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 1
0x0000000000407bf4 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x00000000004096cf : dec dword ptr [rax - 0x77] ; ret 0x8148
0x000000000040f18b : dec dword ptr [rcx + 0x31c621d6] ; ret 0xd609
0x0000000000404ec2 : dec dword ptr [rcx - 0x77] ; ret 0x294d
0x0000000000411337 : dec eax ; add eax, dword ptr [rax] ; add al, dl ; add al, -1 ; jmp qword ptr [rax]
0x0000000000409ade : enter -0x46b8, 0x3b ; mov edx, 0x5a5335da ; ret
0x000000000040299c : enter -0x7cb8, -0x3c ; jo 0x402a05 ; ret
0x0000000000405250 : enter 0x4b05, 0x34 ; fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x0000000000403f6b : enter 0x6132, 0 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000411338 : enter 3, 0 ; rol byte ptr [rdi + rdi*8], 1 ; jmp qword ptr [rax]
0x0000000000405254 : fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x0000000000403b43 : fld xword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004028b2 : fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x00000000004028b3 : fmul dword ptr [rax - 0x77] ; ret 0x2948
0x000000000040f1df : fmul dword ptr [rax - 0x7f] ; ret 1
0x00000000004033f7 : fmul dword ptr [rcx + 0x29] ; ret 0x894c
0x000000000040fe9c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000406358 : fsubr st(0) ; ret 0x11
0x000000000040eae3 : fsubr st(1) ; ret 0xffff
0x0000000000401959 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401750 : hlt ; pop rbp ; mov edi, 0x613270 ; jmp rax
0x00000000004025b7 : in al, -0x7f ; ret 1
0x000000000040caec : in al, dx ; pop rbp ; ret
0x00000000004054db : inc dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000406ae5 : int 0x80
0x0000000000401743 : ja 0x40174a ; pop rbp ; ret
0x00000000004025c0 : jbe 0x4025be ; pmulhuw mm1, qword ptr [rax + 0x63] ; ret 0x8b48
0x000000000040174f : je 0x40174d ; pop rbp ; mov edi, 0x613270 ; jmp rax
0x00000000004071cd : jge 0x4071cd ; lea rsi, qword ptr [rbp - 0x38] ; call rax
0x0000000000402b58 : jl 0x402b56 ; ret 0x87f3
0x0000000000402b6c : jl 0x402b6a ; ret 0x87f3
0x000000000040d278 : jmp 0x325386
0x000000000040135b : jmp 0x401337
0x000000000040d734 : jmp 0x40d779
0x000000000040a424 : jmp 0xffffffff8a032d3c
0x0000000000406fb8 : jmp 0xffffffffc2c9b7c2
0x000000000041133f : jmp qword ptr [rax]
0x0000000000404956 : jmp qword ptr [rcx]
0x00000000004117cb : jmp qword ptr [rdx]
0x000000000041174b : jmp qword ptr [rsi]
0x0000000000401757 : jmp rax
0x0000000000404419 : jmp rcx
0x0000000000401797 : jmp rdx
0x0000000000402e4d : jmp rsp
0x0000000000401780 : jne 0x401787 ; pop rbp ; ret
0x00000000004071d1 : jne 0x40719d ; call rax
0x00000000004029a0 : jo 0x402a01 ; ret
0x0000000000404355 : jo 0x4043b6 ; ret
0x000000000040597f : jo 0x4059e5 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406024 : jo 0x406085 ; ret
0x000000000040615e : jo 0x4061bf ; ret
0x0000000000407b8a : lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x00000000004071d0 : lea esi, dword ptr [rbp - 0x38] ; call rax
0x00000000004071cf : lea rsi, qword ptr [rbp - 0x38] ; call rax
0x00000000004071ca : loopne 0x40721d ; mov edi, dword ptr [rbp - 8] ; lea rsi, qword ptr [rbp - 0x38] ; call rax
0x000000000040d186 : loopne 0x40d1e7 ; ret
0x000000000040d185 : loopne 0x40d1e8 ; ret
0x0000000000407192 : mov al, 0 ; call 0x401668
0x0000000000405efb : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000405d88 : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x000000000040cbc6 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000403bd1 : mov byte ptr [0x613320], al ; pop rbp ; ret
0x0000000000403937 : mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000402d8d : mov byte ptr [rdi - 0x1cd3f1be], dh ; ret 0x4833
0x00000000004017b3 : mov byte ptr [rip + 0x211b1e], 1 ; ret
0x000000000040960c : mov cl, -0x32 ; ret
0x000000000040726f : mov dh, -0x3f ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000402a85 : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040cb36 : mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040cbcc : mov dh, -0x40 ; pop rbp ; ret
0x0000000000403bad : mov dword ptr [0x613318], edi ; pop rbp ; ret
0x0000000000404206 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004041c8 : mov dword ptr [rax], eax ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000404084 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004041c7 : mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040d24c : mov dword ptr [rbp - 0x18], eax ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000401a69 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401957 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401985 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040d388 : mov dword ptr [rbp - 4], edx ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040d0ad : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040399c : mov dword ptr [rbp - 8], eax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040427e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403ad7 : mov dword ptr [rcx], eax ; pop rbp ; ret
0x000000000040e036 : mov eax, 0x5d000001 ; ret
0x0000000000403b8d : mov eax, dword ptr [0x613310] ; pop rbp ; ret
0x0000000000404038 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000406dcb : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403e23 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404035 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000403d7f : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004070c3 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403fed : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040407e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040d250 : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040d184 : mov eax, dword ptr [rbp - 0x20] ; pop rbp ; ret
0x00000000004041ca : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040434f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000405ef9 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000408004 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407699 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403a0c : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040750d : mov eax, dword ptr [rbp - 4] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040d38b : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000406ead : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004063bf : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403578 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040cae7 : mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004039a0 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040299b : mov eax, ecx ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004017db : mov ebp, esp ; call rax
0x0000000000401741 : mov ebp, esp ; ja 0x40174c ; pop rbp ; ret
0x0000000000409ae0 : mov ecx, 0x35daba3b ; push rbx ; pop rdx ; ret
0x0000000000406afd : mov ecx, 0x5b2a830a ; ret
0x0000000000402d9c : mov ecx, 0xe42b788 ; sub al, -0x1d ; ret 0x4833
0x0000000000404412 : mov ecx, dword ptr [rax*8 + 0x4107d0] ; jmp rcx
0x0000000000404736 : mov ecx, dword ptr [rax*8 + 0x410818] ; jmp rcx
0x00000000004064be : mov ecx, dword ptr [rax*8 + 0x410cd8] ; jmp rcx
0x000000000040a8c6 : mov ecx, dword ptr [rax*8 + 0x411090] ; jmp rcx
0x00000000004088c7 : mov ecx, dword ptr [rax*8 + 0x411118] ; jmp rcx
0x000000000040d3e7 : mov ecx, dword ptr [rax*8 + 0x411140] ; jmp rcx
0x000000000040f446 : mov ecx, dword ptr [rax*8 + 0x411218] ; jmp rcx
0x0000000000404081 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004017d5 : mov edi, 0x612e20 ; mov rbp, rsp ; call rax
0x0000000000401752 : mov edi, 0x613270 ; jmp rax
0x0000000000401792 : mov edi, 0x613270 ; jmp rdx
0x0000000000402b55 : mov edi, 0xfa7cd1e6 ; ret 0x87f3
0x00000000004071cc : mov edi, dword ptr [rbp - 8] ; lea rsi, qword ptr [rbp - 0x38] ; call rax
0x000000000040fe97 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000040fe96 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000409ad0 : mov edx, 0x35daba3b ; push rbx ; pop rdx ; ret
0x0000000000409ad2 : mov edx, 0x5a5335da ; ret
0x0000000000402d8c : mov esi, 0xe42b788 ; sub al, -0x1d ; ret 0x4833
0x0000000000401790 : mov esi, eax ; mov edi, 0x613270 ; jmp rdx
0x000000000040caeb : mov esp, ebp ; pop rbp ; ret
0x0000000000403bac : mov qword ptr [0x613318], rdi ; pop rbp ; ret
0x000000000040d24b : mov qword ptr [rbp - 0x18], rax ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040399b : mov qword ptr [rbp - 8], rax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040427d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403ad6 : mov qword ptr [rcx], rax ; pop rbp ; ret
0x0000000000405efa : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000403b8c : mov rax, qword ptr [0x613310] ; pop rbp ; ret
0x0000000000406dca : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403e22 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404034 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000403d7e : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004070c2 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403fec : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040d24f : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040d183 : mov rax, qword ptr [rbp - 0x20] ; pop rbp ; ret
0x000000000040434e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000405ef8 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000406eac : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004063be : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403577 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040cae6 : mov rax, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040399f : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040299a : mov rax, rcx ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004017da : mov rbp, rsp ; call rax
0x0000000000401740 : mov rbp, rsp ; ja 0x40174d ; pop rbp ; ret
0x0000000000404411 : mov rcx, qword ptr [rax*8 + 0x4107d0] ; jmp rcx
0x0000000000404735 : mov rcx, qword ptr [rax*8 + 0x410818] ; jmp rcx
0x00000000004064bd : mov rcx, qword ptr [rax*8 + 0x410cd8] ; jmp rcx
0x000000000040a8c5 : mov rcx, qword ptr [rax*8 + 0x411090] ; jmp rcx
0x00000000004088c6 : mov rcx, qword ptr [rax*8 + 0x411118] ; jmp rcx
0x000000000040d3e6 : mov rcx, qword ptr [rax*8 + 0x411140] ; jmp rcx
0x000000000040f445 : mov rcx, qword ptr [rax*8 + 0x411218] ; jmp rcx
0x00000000004071cb : mov rdi, qword ptr [rbp - 8] ; lea rsi, qword ptr [rbp - 0x38] ; call rax
0x000000000040178f : mov rsi, rax ; mov edi, 0x613270 ; jmp rdx
0x000000000040caea : mov rsp, rbp ; pop rbp ; ret
0x000000000041208c : mov word ptr [rcx], cs ; add byte ptr [rax], al ; adc byte ptr [rcx - 1], dl ; call rdi
0x00000000004117a4 : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add al, ch ; add edi, edi ; jmp rdx
0x000000000040cb8a : movsx eax, cl ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402a84 : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040cb35 : movzx eax, al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040cbcb : movzx eax, al ; pop rbp ; ret
0x000000000040393a : movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x000000000040726e : movzx eax, cl ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040a8c9 : nop ; adc byte ptr [rcx], al ; jmp rcx
0x0000000000402999 : nop ; mov rax, rcx ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040feb8 : nop dword ptr [rax + rax] ; ret
0x0000000000404a9d : or al, 0x18 ; ret 0x6451
0x0000000000406326 : or al, 0x25 ; ret 0x410c
0x0000000000406321 : or al, 0x41 ; add byte ptr [rax - 0x73], cl ; or al, 0x25 ; ret 0x410c
0x000000000040d3e8 : or al, 0xffffffffffffffc5 ; adc dword ptr [rcx], eax ; jmp rcx
0x000000000040a8c7 : or al, 0xffffffffffffffc5 ; nop ; adc byte ptr [rcx], al ; jmp rcx
0x0000000000402f4f : or byte ptr [rcx + 0x2bf9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x000000000040473a : or byte ptr [rcx], al ; jmp rcx
0x00000000004060e1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402b56 : out -0x2f, al ; jl 0x402b58 ; ret 0x87f3
0x0000000000402b6a : out -0x2f, al ; jl 0x402b6c ; ret 0x87f3
0x000000000040c2f6 : out dx, al ; call 0x4932c44b
0x00000000004025c2 : pmulhuw mm1, qword ptr [rax + 0x63] ; ret 0x8b48
0x000000000040feac : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405981 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040feae : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405983 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040feb0 : pop r14 ; pop r15 ; ret
0x0000000000405733 : pop r14 ; pop rbp ; ret
0x0000000000405985 : pop r15 ; pop rbp ; ret
0x000000000040feb2 : pop r15 ; ret
0x0000000000411b08 : pop rax ; sub bh, bh ; call rdi
0x00000000004017b2 : pop rbp ; mov byte ptr [rip + 0x211b1e], 1 ; ret
0x0000000000401751 : pop rbp ; mov edi, 0x613270 ; jmp rax
0x000000000040178e : pop rbp ; mov rsi, rax ; mov edi, 0x613270 ; jmp rdx
0x000000000040feab : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040feaf : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401745 : pop rbp ; ret
0x0000000000405980 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040697d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405732 : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000406b01 : pop rbx ; ret
0x0000000000405986 : pop rdi ; pop rbp ; ret
0x000000000040feb3 : pop rdi ; ret
0x0000000000409ad6 : pop rdx ; ret
0x0000000000405984 : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040feb1 : pop rsi ; pop r15 ; ret
0x0000000000405734 : pop rsi ; pop rbp ; ret
0x000000000040fead : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405982 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405e7e : push rax ; pop rbp ; ret
0x000000000041137c : push rax ; sbb edi, edi ; jmp qword ptr [rax]
0x000000000040e08c : push rbp ; call 0x210361de
0x000000000040d389 : push rbp ; cld ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040f1de : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 1
0x00000000004017d4 : push rbp ; mov edi, 0x612e20 ; mov rbp, rsp ; call rax
0x0000000000409ad5 : push rbx ; pop rdx ; ret
0x000000000040e52f : push rsp ; cmp byte ptr [rcx - 0x77], al ; ret 0x8141
0x000000000040e523 : push rsp ; cmp byte ptr [rcx], ah ; ret 0x8941
0x0000000000401329 : ret
0x0000000000402b44 : ret 0
0x000000000040d991 : ret 0x10
0x000000000040635a : ret 0x11
0x0000000000407dd6 : ret 0x148
0x00000000004020b1 : ret 0x1489
0x0000000000405b1e : ret 0x1b2
0x000000000040d6a8 : ret 0x1fe4
0x000000000040e090 : ret 0x20
0x0000000000401562 : ret 0x211b
0x0000000000401362 : ret 0x211c
0x00000000004028b6 : ret 0x2948
0x0000000000404ea9 : ret 0x294c
0x0000000000404ec5 : ret 0x294d
0x000000000040a36a : ret 0x30e8
0x0000000000402035 : ret 0x3573
0x0000000000401bfa : ret 0x3a47
0x000000000040d733 : ret 0x3eeb
0x0000000000410860 : ret 0x404b
0x0000000000406328 : ret 0x410c
0x000000000040d346 : ret 0x4589
0x0000000000402d93 : ret 0x4833
0x000000000040dc27 : ret 0x54c8
0x0000000000402f58 : ret 0x5588
0x0000000000404104 : ret 0x5589
0x000000000040d41b : ret 0x5ef2
0x0000000000404a9f : ret 0x6451
0x000000000040db84 : ret 0x651d
0x00000000004021cf : ret 0x6883
0x000000000040282a : ret 0x73c9
0x000000000040d7cc : ret 0x744a
0x000000000040d33e : ret 0x8041
0x000000000040e46c : ret 0x8141
0x0000000000402d04 : ret 0x8148
0x000000000040ddea : ret 0x8334
0x000000000040ceef : ret 0x840
0x000000000040a427 : ret 0x8589
0x0000000000402b5a : ret 0x87f3
0x0000000000405143 : ret 0x8840
0x0000000000406479 : ret 0x8844
0x000000000040d30c : ret 0x8941
0x0000000000406fd0 : ret 0x8948
0x0000000000404ec8 : ret 0x8949
0x00000000004033fa : ret 0x894c
0x000000000040505c : ret 0x89a5
0x00000000004088a5 : ret 0x89ee
0x00000000004025c6 : ret 0x8b48
0x000000000040e294 : ret 0x9303
0x000000000040c23d : ret 0x9588
0x000000000040a3fd : ret 0x9de8
0x0000000000402906 : ret 0xa223
0x0000000000401dd1 : ret 0xb0
0x0000000000407dc9 : ret 0xb849
0x000000000040dd5d : ret 0xc0c2
0x0000000000401775 : ret 0xc148
0x0000000000407b30 : ret 0xc2f6
0x000000000040dd6a : ret 0xc4c0
0x0000000000408172 : ret 0xc8e8
0x000000000040df94 : ret 0xc996
0x00000000004048c4 : ret 0xca21
0x000000000040f251 : ret 0xca29
0x00000000004063b3 : ret 0xd284
0x000000000040f191 : ret 0xd609
0x000000000040e6f0 : ret 0xd83a
0x000000000040d98b : ret 0xddeb
0x0000000000404edd : ret 0xde8
0x0000000000409a20 : ret 0xea81
0x000000000040576c : ret 0xee8
0x0000000000405158 : ret 0xf180
0x0000000000407b23 : ret 0xf280
0x000000000040493e : ret 0xf281
0x00000000004025bf : ret 0xf676
0x000000000040719a : ret 0xffa1
0x000000000040e1fa : ret 0xffff
0x00000000004021d5 : ret 1
0x0000000000407b90 : ret 2
0x000000000040d421 : ret 8
0x00000000004041c6 : rol byte ptr [rcx + rcx*4], 1 ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000041133c : rol byte ptr [rdi + rdi*8], 1 ; jmp qword ptr [rax]
0x00000000004113a8 : rol byte ptr [rip + 0x27000000], -1 ; jmp rax
0x00000000004113e8 : rol byte ptr [rsi], 0 ; add byte ptr [rax], dl ; sub edi, edi ; jmp rax
0x0000000000406ae0 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000404350 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x4043bb ; ret
0x000000000040177c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40178b ; pop rbp ; ret
0x000000000040d3e5 : ror byte ptr [rax - 0x75], 1 ; or al, 0xffffffffffffffc5 ; adc dword ptr [rcx], eax ; jmp rcx
0x0000000000406ae1 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x00000000004029f3 : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000404ea6 : ror byte ptr [rax - 0x77], 1 ; ret 0x294c
0x0000000000404351 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x4043ba ; ret
0x0000000000407270 : ror dword ptr [rax - 0x7d], -0x3c ; pop rbp ; ret
0x0000000000403ad2 : salc ; sub rax, rsi ; mov qword ptr [rcx], rax ; pop rbp ; ret
0x000000000040177e : sar eax, 1 ; jne 0x401789 ; pop rbp ; ret
0x000000000040177d : sar rax, 1 ; jne 0x40178a ; pop rbp ; ret
0x000000000040db79 : sbb eax, 0x81d55b65 ; ret 8
0x000000000041137d : sbb edi, edi ; jmp qword ptr [rax]
0x00000000004017b6 : sbb esp, dword ptr [rcx] ; add byte ptr [rcx], al ; ret
0x000000000040cbc8 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000402d91 : sub al, -0x1d ; ret 0x4833
0x00000000004113fd : sub al, -1 ; jmp qword ptr [rax]
0x0000000000411b09 : sub bh, bh ; call rdi
0x00000000004113bd : sub bh, bh ; jmp qword ptr [rax]
0x0000000000406aff : sub dword ptr [rdx], 0x5b ; ret
0x0000000000403ad4 : sub eax, esi ; mov qword ptr [rcx], rax ; pop rbp ; ret
0x00000000004113ed : sub edi, edi ; jmp rax
0x000000000040feed : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000403ad3 : sub rax, rsi ; mov qword ptr [rcx], rax ; pop rbp ; ret
0x000000000040feec : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000402d8a : test al, 0x48 ; mov esi, 0xe42b788 ; sub al, -0x1d ; ret 0x4833
0x000000000040feba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040f448 : vmovlps xmm8, xmm12, qword ptr [rcx] ; jmp rcx
0x0000000000402829 : wait ; ret 0x73c9
0x000000000040d33d : xchg eax, ebp ; ret 0x8041
0x0000000000405142 : xchg eax, ebp ; ret 0x8840
0x000000000040c2f4 : xchg eax, ebx ; add dh, ch ; call 0x4932c44d
0x0000000000402f57 : xchg eax, esp ; ret 0x5588
0x000000000040c23c : xchg eax, esp ; ret 0x9588
0x00000000004063b2 : xchg eax, esp ; ret 0xd284
0x0000000000403f6c : xor ah, byte ptr [rcx] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401754 : xor ah, byte ptr [rcx] ; jmp rax
0x0000000000401794 : xor ah, byte ptr [rcx] ; jmp rdx
0x000000000041142d : xor bh, bh ; jmp rax
0x0000000000403926 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041142c : xor dil, dil ; jmp rax
0x0000000000405e77 : xor eax, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x00000000004041c5 : xor eax, edx ; mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040d386 : xor edx, eax ; mov dword ptr [rbp - 4], edx ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000403b91 : xor esp, dword ptr [rcx] ; pop rbp ; ret
