0x0000000000417271 : adc al, -1 ; call qword ptr [rbx]
0x000000000041501a : adc al, -9 ; jbe 0x414ffe ; adc eax, dword ptr [rax] ; ret
0x0000000000416eb1 : adc al, 0 ; add al, al ; mov bl, -1 ; call qword ptr [rax]
0x0000000000416ea1 : adc al, 0 ; add byte ptr [rax], dh ; mov bl, -1 ; call rax
0x0000000000412568 : adc al, 0x48 ; add esp, 0x10 ; pop rbp ; ret
0x000000000040f509 : adc al, 1 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000416db1 : adc byte ptr [rax], al ; add al, al ; jnp 0x416dbc ; call qword ptr [rax]
0x0000000000408267 : adc byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000416d24 : adc byte ptr [rsi - 1], ah ; call rax
0x000000000041254c : adc dh, dh ; ret 0xf01
0x0000000000416df1 : adc dword ptr [rax], eax ; add byte ptr [rax], al ; jg 0x416dfc ; call qword ptr [rax]
0x000000000041542e : adc dword ptr [rax], eax ; in eax, 0x7e ; ret 0x92d
0x0000000000414e7e : adc eax, 0x11473300 ; ret
0x0000000000414e18 : adc eax, 0xf989d1eb ; ret
0x000000000040c539 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041501e : adc eax, dword ptr [rax] ; ret
0x000000000041425a : adc eax, dword ptr [rcx + 0x2a4eff] ; int1 ; stosb byte ptr [rdi], al ; ret
0x0000000000403faa : add al, -0x23 ; push rcx ; jmp qword ptr [rsi - 0x3dfeb769]
0x000000000040d0f7 : add al, -8 ; pop rbp ; ret
0x0000000000414e14 : add al, 0x1a ; sbb ch, byte ptr [rdi] ; adc eax, 0xf989d1eb ; ret
0x0000000000416db3 : add al, al ; jnp 0x416dba ; call qword ptr [rax]
0x0000000000416eb3 : add al, al ; mov bl, -1 ; call qword ptr [rax]
0x0000000000416ee3 : add al, dl ; mov ch, -1 ; call rax
0x00000000004146df : add bl, bh ; xor ch, byte ptr [rdx] ; ret 0xf718
0x000000000041275f : add bl, dh ; ret
0x0000000000413a4e : add byte ptr [ecx + 0x7f00663d], al ; ret 0xff99
0x0000000000413bfe : add byte ptr [r15 + 0x58077722], r8b ; ret
0x0000000000405cca : add byte ptr [rax + 0x29], cl ; ror dword ptr [rax - 0x46], 1 ; ret 0x9174
0x00000000004103c7 : add byte ptr [rax + 1], cl ; ret 0x4a3b
0x0000000000405ca2 : add byte ptr [rax - 0x47], cl ; ret 0x9174
0x0000000000412686 : add byte ptr [rax - 0x75], cl ; call 0x4903afde
0x000000000040d2ee : add byte ptr [rax - 0x75], cl ; mov byte ptr [r8 - 0x77], r9b ; ret 0x2948
0x000000000040e06d : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x00000000004088eb : add byte ptr [rax - 0x77], cl ; ret 0x3148
0x0000000000404697 : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x00000000004174cf : add byte ptr [rax], ah ; xor edi, edi ; jmp qword ptr [rdx]
0x0000000000416d22 : add byte ptr [rax], al ; adc byte ptr [rsi - 1], ah ; call rax
0x000000000041275d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000405cc8 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ror dword ptr [rax - 0x46], 1 ; ret 0x9174
0x00000000004103c5 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x4a3b
0x0000000000405ca0 : add byte ptr [rax], al ; add byte ptr [rax - 0x47], cl ; ret 0x9174
0x0000000000412684 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; call 0x4903afe0
0x000000000040d2ec : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; mov byte ptr [r8 - 0x77], r9b ; ret 0x2948
0x00000000004088e9 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x3148
0x0000000000404695 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000041275b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000405c9e : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x47], cl ; ret 0x9174
0x0000000000405c9c : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x47], cl ; ret 0x9174
0x0000000000402755 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000412441 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000409d3b : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040ce8b : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041275c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000402f0e : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004070b5 : add byte ptr [rax], al ; add byte ptr [rcx + 0x29], cl ; ret
0x0000000000402a11 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5e3cfc1], al ; ret
0x0000000000404ea2 : add byte ptr [rax], al ; add byte ptr [rcx - 0x15ac743a], al ; ret 0xf189
0x00000000004082b5 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x5589
0x00000000004083f1 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x6348
0x0000000000416df2 : add byte ptr [rax], al ; add byte ptr [rdi - 1], bh ; call qword ptr [rax]
0x000000000040bbde : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000412492 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004020bb : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x8840
0x000000000040ce4e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000402f67 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000040ef3c : add byte ptr [rax], al ; add cl, ch ; ret 2
0x000000000040c501 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402757 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000412443 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040144b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000417936 : add byte ptr [rax], al ; cmp byte ptr [rbp - 1], dl ; jmp qword ptr [rcx]
0x0000000000417676 : add byte ptr [rax], al ; fmul dword ptr [rsi - 1] ; jmp rdx
0x000000000041726a : add byte ptr [rax], al ; in al, 2 ; add byte ptr [rax], al ; nop ; adc al, -1 ; call qword ptr [rbx]
0x0000000000416df3 : add byte ptr [rax], al ; jg 0x416dfa ; call qword ptr [rax]
0x0000000000401629 : add byte ptr [rax], al ; jmp 0x401469
0x0000000000416da2 : add byte ptr [rax], al ; jnp 0x416dab ; call rax
0x000000000040aad2 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000409d3d : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000041726e : add byte ptr [rax], al ; nop ; adc al, -1 ; call qword ptr [rbx]
0x000000000040242b : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040df0b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040c1d0 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000402f0f : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000041275e : add byte ptr [rax], al ; ret
0x00000000004177d6 : add byte ptr [rax], al ; sub byte ptr [rbx - 1], dl ; jmp qword ptr [rax]
0x0000000000416cb2 : add byte ptr [rax], al ; xor byte ptr [rax - 1], ah ; call qword ptr [rax]
0x0000000000416cf2 : add byte ptr [rax], al ; xor byte ptr [rdx - 1], ah ; call qword ptr [rax]
0x00000000004175cf : add byte ptr [rax], dh ; cmp bh, bh ; call rdi
0x0000000000416ea3 : add byte ptr [rax], dh ; mov bl, -1 ; call rax
0x0000000000403c66 : add byte ptr [rax], r8b ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000414d6f : add byte ptr [rbp + 0x2e], ch ; ret
0x0000000000402c09 : add byte ptr [rbp + 1], al ; rol dword ptr [rcx + rbp - 0x38], -0x77 ; ret 0x89e8
0x0000000000402e07 : add byte ptr [rbp + 1], al ; rol dword ptr [rcx + rbp - 0x38], -0x77 ; ret 0x8be8
0x0000000000414e6f : add byte ptr [rbp + 8], bl ; lodsb al, byte ptr [rsi] ; mov ebx, 0xf006b0cc ; ret
0x00000000004174cb : add byte ptr [rbp + rax], al ; add byte ptr [rax], ah ; xor edi, edi ; jmp qword ptr [rdx]
0x000000000041569f : add byte ptr [rbp - 0x4158e275], ch ; popfq ; ret 0x766e
0x000000000040df0c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040c1d1 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000402f10 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000041460f : add byte ptr [rbx - 0x18], bl ; ret 0xd9e9
0x000000000041461f : add byte ptr [rbx - 0x64], dl ; fsub qword ptr [rcx] ; ret 0xc591
0x000000000041519f : add byte ptr [rbx], al ; test dword ptr [rdx + 0x1a7c3b68], esi ; ret 0x56fd
0x00000000004070b7 : add byte ptr [rcx + 0x29], cl ; ret
0x0000000000402a13 : add byte ptr [rcx + 0x5e3cfc1], al ; ret
0x0000000000413a4f : add byte ptr [rcx + 0x7f00663d], al ; ret 0xff99
0x0000000000404ea4 : add byte ptr [rcx - 0x15ac743a], al ; ret 0xf189
0x000000000041374f : add byte ptr [rcx - 0x309e019], dh ; ret
0x0000000000414b0f : add byte ptr [rcx - 0x36a149e7], ah ; xchg eax, esi ; ret
0x000000000041218c : add byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x000000000040d94d : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401938 : add byte ptr [rcx], al ; ret
0x00000000004082b7 : add byte ptr [rcx], al ; ret 0x5589
0x000000000041447f : add byte ptr [rcx], bh ; mov bh, -1 ; jno 0x4144f9 ; jmp rbx
0x00000000004083f3 : add byte ptr [rcx], ch ; ret 0x6348
0x0000000000413bff : add byte ptr [rdi + 0x58077722], al ; ret
0x0000000000416df4 : add byte ptr [rdi - 1], bh ; call qword ptr [rax]
0x000000000041385f : add byte ptr [rdi], al ; lodsb al, byte ptr [rsi] ; out dx, eax ; ret
0x0000000000414def : add byte ptr [rdi], al ; ret 0x3fd9
0x00000000004159df : add byte ptr [rdi], cl ; cmp eax, 0x9b59d4d7 ; ret 0x7982
0x000000000041562f : add byte ptr [rdi], cl ; jmp rax
0x000000000040ef38 : add byte ptr [rdi], cl ; lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x000000000040bbe0 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000412494 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004020bd : add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x8840
0x000000000040ce50 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000402f69 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000040285a : add byte ptr [rdx - 0x76b219b4], al ; ret
0x000000000040705e : add byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004139a6 : add byte ptr [rdx], bl ; jg 0x413a27 ; ret
0x0000000000413d0f : add byte ptr [rip - 0x1f8ed3a8], ah ; ret
0x0000000000413d0e : add byte ptr [rip - 0x1f8ed3a8], r12b ; ret
0x00000000004145ef : add byte ptr [rip - 0x21754bc3], al ; sbb byte ptr [rsi], dh ; ret 0xe990
0x000000000041291f : add byte ptr [rsi + 0x69], cl ; insb byte ptr [rdi], dx ; jae 0x41294e ; ret
0x00000000004175cb : add byte ptr [rsi + rax], al ; add byte ptr [rax], dh ; cmp bh, bh ; call rdi
0x000000000040f602 : add byte ptr cs:[rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000413b9f : add ch, cl ; push rcx ; xor eax, 0xeb778e13 ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xc0be
0x0000000000413e8f : add cl, bh ; sub eax, 0x58ad9f63 ; ret 0x23b4
0x000000000040ef3e : add cl, ch ; ret 2
0x000000000041425f : add cl, dh ; stosb byte ptr [rdi], al ; ret
0x0000000000413c98 : add dh, bl ; ret
0x0000000000402522 : add dword ptr [rax - 0x77], ecx ; ret 0x2148
0x000000000040e549 : add dword ptr [rax - 0x77], ecx ; ret 0x8148
0x000000000040c4ff : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040df0a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040c1cf : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040a244 : add dword ptr [rax], ecx ; ret 0x840
0x00000000004020cd : add dword ptr [rax], esp ; ret 0x840
0x00000000004020a2 : add dword ptr [rbx - 0x3e7e43b3], ecx ; jmp 0x402074
0x0000000000414259 : add dword ptr [rbx], edx ; cmp edi, 0xf1002a4e ; stosb byte ptr [rdi], al ; ret
0x000000000040d17b : add dword ptr [rdi], ecx ; mov dh, -0x3f ; pop rbp ; ret
0x0000000000401ea1 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401fd8 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000410952 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000411d2a : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000414fc5 : add eax, 0x10d78564 ; ret 0x75a6
0x0000000000401934 : add eax, 0x21799e ; add ebx, esi ; ret
0x00000000004145f0 : add eax, 0xde8ab43d ; sbb byte ptr [rsi], dh ; ret 0xe990
0x000000000040ef3b : add eax, 0xe9000000 ; ret 2
0x00000000004018fb : add eax, edx ; sar rax, 1 ; jne 0x40190c ; pop rbp ; ret
0x0000000000410f49 : add eax, esi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x0000000000401939 : add ebx, esi ; ret
0x000000000040f54b : add edi, eax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x0000000000415ab1 : add edx, ebp ; shr bl, 0x60 ; mov al, 0x20 ; push rax ; ret
0x0000000000401a6b : add esp, 0x10 ; pop rbp ; ret
0x000000000040d94b : add esp, 0x100 ; pop rbp ; ret
0x000000000041140c : add esp, 0x10e0 ; pop rbp ; ret
0x00000000004074e3 : add esp, 0x130 ; pop rbp ; ret
0x0000000000402427 : add esp, 0x150 ; pop rbp ; ret
0x000000000040a5e5 : add esp, 0x170 ; pop rbp ; ret
0x000000000040e23c : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000401ea6 : add esp, 0x20 ; pop rbp ; ret
0x000000000040705c : add esp, 0x200 ; pop rbp ; ret
0x0000000000408265 : add esp, 0x210 ; pop rbp ; ret
0x0000000000410106 : add esp, 0x250 ; pop rbp ; ret
0x0000000000403bd2 : add esp, 0x2b0 ; pop rbp ; ret
0x0000000000401b4d : add esp, 0x30 ; pop rbp ; ret
0x0000000000409fcd : add esp, 0x40 ; pop rbp ; ret
0x0000000000401fdd : add esp, 0x50 ; pop rbp ; ret
0x00000000004126dc : add esp, 0x60 ; pop rbp ; ret
0x0000000000405726 : add esp, 0x680 ; pop rbp ; ret
0x000000000040944c : add esp, 0x70 ; pop rbp ; ret
0x000000000040260c : add esp, 0x80 ; pop rbp ; ret
0x0000000000402f0b : add esp, 0x88 ; pop rbx ; pop rbp ; ret
0x0000000000409604 : add esp, 0x90 ; pop rbp ; ret
0x000000000040e0d3 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040aa0a : add esp, 0xb0 ; pop rbp ; ret
0x0000000000409107 : add esp, 0xc0 ; pop rbp ; ret
0x00000000004061b6 : add esp, 0xf0 ; pop rbp ; ret
0x000000000040144e : add esp, 8 ; ret
0x00000000004018fa : add rax, rdx ; sar rax, 1 ; jne 0x40190d ; pop rbp ; ret
0x0000000000410f48 : add rax, rsi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x000000000040f54a : add rdi, rax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x0000000000401a6a : add rsp, 0x10 ; pop rbp ; ret
0x000000000040d94a : add rsp, 0x100 ; pop rbp ; ret
0x000000000041140b : add rsp, 0x10e0 ; pop rbp ; ret
0x00000000004074e2 : add rsp, 0x130 ; pop rbp ; ret
0x0000000000402426 : add rsp, 0x150 ; pop rbp ; ret
0x000000000040a5e4 : add rsp, 0x170 ; pop rbp ; ret
0x000000000040e23b : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000401ea5 : add rsp, 0x20 ; pop rbp ; ret
0x000000000040705b : add rsp, 0x200 ; pop rbp ; ret
0x0000000000408264 : add rsp, 0x210 ; pop rbp ; ret
0x0000000000410105 : add rsp, 0x250 ; pop rbp ; ret
0x0000000000403bd1 : add rsp, 0x2b0 ; pop rbp ; ret
0x0000000000401b4c : add rsp, 0x30 ; pop rbp ; ret
0x0000000000409fcc : add rsp, 0x40 ; pop rbp ; ret
0x0000000000401fdc : add rsp, 0x50 ; pop rbp ; ret
0x00000000004126db : add rsp, 0x60 ; pop rbp ; ret
0x0000000000405725 : add rsp, 0x680 ; pop rbp ; ret
0x000000000040944b : add rsp, 0x70 ; pop rbp ; ret
0x000000000040260b : add rsp, 0x80 ; pop rbp ; ret
0x0000000000402f0a : add rsp, 0x88 ; pop rbx ; pop rbp ; ret
0x0000000000409603 : add rsp, 0x90 ; pop rbp ; ret
0x000000000040e0d2 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040aa09 : add rsp, 0xb0 ; pop rbp ; ret
0x0000000000409106 : add rsp, 0xc0 ; pop rbp ; ret
0x00000000004061b5 : add rsp, 0xf0 ; pop rbp ; ret
0x000000000040144d : add rsp, 8 ; ret
0x0000000000410951 : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000411d29 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004145ee : and byte ptr [rax], al ; add eax, 0xde8ab43d ; sbb byte ptr [rsi], dh ; ret 0xe990
0x000000000041461e : and byte ptr [rax], al ; push rbx ; pushfq ; fsub qword ptr [rcx] ; ret 0xc591
0x000000000041463e : and byte ptr [rax], al ; ret
0x00000000004139e9 : and byte ptr [rbp + rsi - 0x4b], ch ; push 0x25e9006d ; call rcx
0x000000000040d179 : and cl, 1 ; movzx eax, cl ; pop rbp ; ret
0x0000000000413c01 : and dh, byte ptr [rdi + 7] ; pop rax ; ret
0x0000000000401937 : and dword ptr [rax], eax ; add ebx, esi ; ret
0x0000000000414d6b : and eax, 0x168759 ; insd dword ptr [rdi], dx ; ret
0x00000000004053b3 : and eax, 0x412b4b ; call 0x4015e7
0x000000000040994f : and eax, 0x6192e8 ; pop rbp ; ret
0x0000000000409973 : and eax, 0x6192f0 ; pop rbp ; ret
0x0000000000413d10 : and eax, 0xe0712c58 ; ret
0x0000000000402b7a : and ebp, dword ptr [rbx] ; jmp 0x41ee06
0x0000000000412f00 : and ebx, ecx ; in eax, dx ; xlatb ; pop rcx ; ret
0x0000000000414d0a : and edi, dword ptr [rax + 0x16f051] ; movsd dword ptr [rdi], dword ptr [rsi] ; jl 0x414d47 ; ret 0x715e
0x00000000004138e7 : and esi, ecx ; int1 ; lodsb al, byte ptr [rsi] ; mov cl, 0x22 ; xchg eax, edx ; xchg byte ptr [rax], al ; ret
0x0000000000413530 : and esp, dword ptr [rdi + 0x58] ; jo 0x4134e7 ; insb byte ptr [rdi], dx ; out dx, eax ; cmp bh, byte ptr [rcx] ; ret
0x000000000040ff14 : call 0x38064
0x00000000004053b8 : call 0x4015e2
0x0000000000406f3d : call 0x4902f88d
0x0000000000406f3c : call 0x4902f88e
0x0000000000407648 : call 0x4902ff98
0x0000000000407647 : call 0x4902ff99
0x000000000041268a : call 0x4903afda
0x0000000000412689 : call 0x4903afdb
0x000000000040c209 : call 0xffffffffe9034b59
0x000000000040c208 : call 0xffffffffe9034b5a
0x0000000000410dd3 : call 0xffffffffe9039723
0x0000000000412739 : call qword ptr [r12 + rbx*8]
0x0000000000416c77 : call qword ptr [rax]
0x0000000000417273 : call qword ptr [rbx]
0x0000000000414c0d : call qword ptr [rdi]
0x00000000004173b3 : call qword ptr [rsi]
0x000000000041273a : call qword ptr [rsp + rbx*8]
0x000000000040195d : call rax
0x000000000040bf5c : call rbx
0x00000000004139f2 : call rcx
0x00000000004175d3 : call rdi
0x0000000000414f69 : call rsi
0x0000000000414f68 : cdq ; call rsi
0x0000000000414f65 : cdq ; sub bh, byte ptr [rcx - 0x67] ; call rsi
0x000000000040f26a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x000000000040e43f : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000410104 : clc ; add rsp, 0x250 ; pop rbp ; ret
0x000000000040ce61 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000409fcb : clc ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004078aa : clc ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004126da : clc ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040944a : clc ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004086f4 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x000000000040aa08 : clc ; add rsp, 0xb0 ; pop rbp ; ret
0x0000000000409105 : clc ; add rsp, 0xc0 ; pop rbp ; ret
0x00000000004018ff : clc ; jne 0x401908 ; pop rbp ; ret
0x0000000000412565 : clc ; mov dword ptr [rax + 0x14], ecx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040aca5 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000041220f : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000408b97 : clc ; pop rbp ; ret
0x0000000000411bc6 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041140a : cld ; add rsp, 0x10e0 ; pop rbp ; ret
0x000000000040ea4b : cld ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040e98a : cld ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041220c : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000411bc3 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000411b66 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040e987 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000415072 : cld ; or eax, 0xe4b786e ; xchg eax, esi ; sbb al, -0x7c ; ret
0x0000000000413754 : cld ; ret
0x0000000000413ec0 : cmc ; out dx, eax ; std ; pushfq ; outsd dx, dword ptr [rsi] ; in eax, dx ; test ch, ah ; hlt ; ret
0x0000000000408448 : cmp al, 0xa ; pop rbp ; ret
0x0000000000413d4a : cmp al, 0xd ; ret 0x43c5
0x00000000004175d1 : cmp bh, bh ; call rdi
0x0000000000413537 : cmp bh, byte ptr [rcx] ; ret
0x0000000000402c46 : cmp byte ptr [r15], cl ; xchg eax, edi ; ret 0xe280
0x0000000000417938 : cmp byte ptr [rbp - 1], dl ; jmp qword ptr [rcx]
0x00000000004146dc : cmp byte ptr [rdi + 0x1f], bl ; add bl, bh ; xor ch, byte ptr [rdx] ; ret 0xf718
0x0000000000402c47 : cmp byte ptr [rdi], cl ; xchg eax, edi ; ret 0xe280
0x00000000004138d5 : cmp byte ptr [rdx], ch ; outsd dx, dword ptr [rsi] ; xor eax, dword ptr [rcx + 0x3a] ; int 0x80
0x00000000004145f1 : cmp eax, 0x18de8ab4 ; ret 0xe990
0x00000000004159e1 : cmp eax, 0x9b59d4d7 ; ret 0x7982
0x00000000004018bd : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4018d0 ; pop rbp ; ret
0x0000000000413e8e : cmp eax, dword ptr [rax] ; stc ; sub eax, 0x58ad9f63 ; ret 0x23b4
0x000000000041425b : cmp edi, 0xf1002a4e ; stosb byte ptr [rdi], al ; ret
0x00000000004138d4 : cmpsb byte ptr [rsi], byte ptr [rdi] ; cmp byte ptr [rdx], ch ; outsd dx, dword ptr [rsi] ; xor eax, dword ptr [rcx + 0x3a] ; int 0x80
0x0000000000408442 : cmpsd dword ptr [rsi], dword ptr [rdi] ; mov dil, sil ; mov byte ptr [rdx + rcx], dil ; pop rbp ; ret
0x000000000040d3e6 : cwde ; add rsp, 0x80 ; pop rbp ; ret
0x000000000040da4c : cwde ; mov rcx, qword ptr [rax*8 + 0x416610] ; jmp rcx
0x00000000004092c1 : dec dword ptr [rax + 0x21] ; ret 0x8148
0x00000000004051ad : dec dword ptr [rax + 0x29] ; ret 0x8b48
0x0000000000403287 : dec dword ptr [rax - 0x3f] ; jmp 0xffffffffc2c97ad5
0x0000000000403a99 : dec dword ptr [rax - 0x3f] ; jmp 0xffffffffc2c982e7
0x0000000000407b7f : dec dword ptr [rax - 0x3f] ; jmp 0xffffffffc2c9c38f
0x0000000000406f39 : dec dword ptr [rax - 0x75] ; call 0x4902f891
0x0000000000408b93 : dec dword ptr [rax - 0x75] ; clc ; pop rbp ; ret
0x000000000040ff10 : dec dword ptr [rax - 0x75] ; push rbp ; call 0x38068
0x0000000000403246 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x00000000004059ca : dec dword ptr [rax - 0x77] ; ret 0x3148
0x000000000040d87c : dec dword ptr [rax - 0x77] ; ret 0x3be8
0x000000000040d579 : dec dword ptr [rax - 0x77] ; ret 0x3ee8
0x00000000004030b1 : dec dword ptr [rax - 0x77] ; ret 0x8148
0x000000000040ff46 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000403f88 : dec dword ptr [rcx - 0x50f0b736] ; ret 0x8b48
0x000000000040b962 : dec dword ptr [rcx - 0x77] ; ret 0x294d
0x000000000041425c : dec dword ptr [rsi + 0x2a] ; add cl, dh ; stosb byte ptr [rdi], al ; ret
0x000000000041501b : div dword ptr [rsi - 0x26] ; adc eax, dword ptr [rax] ; ret
0x0000000000413c97 : enter -0x2200, 0x44 ; ret
0x0000000000404523 : enter -0x46b8, 0x6b ; ret 0xdb6
0x0000000000410ae4 : enter -0x76b8, 0xc ; ret 0x59e9
0x000000000040bcf0 : enter 0x4b05, 0x34 ; fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x0000000000409e8b : enter 0x6192, 0 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000415019 : fcom qword ptr [rdi + rsi*8] ; jbe 0x414fff ; adc eax, dword ptr [rax] ; ret
0x000000000040bcf4 : fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x0000000000413a15 : ficom dword ptr [rcx - 0x74] ; ret 0x4b96
0x0000000000405a1c : ficom word ptr [rsi] ; jg 0x405a4a ; ret
0x0000000000405a2c : ficom word ptr [rsi] ; jg 0x405a5a ; ret
0x00000000004145f4 : ficomp word ptr [rax] ; ret 0xe990
0x0000000000413c95 : fidivr dword ptr [rdi - 0x38] ; add dh, bl ; ret
0x0000000000402163 : fmul dword ptr [r15] ; xchg eax, edi ; ret 0xe280
0x0000000000407643 : fmul dword ptr [r8 - 0x75] ; call 0x4902ff9d
0x0000000000407d3d : fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x000000000041162e : fmul dword ptr [r8 - 0x77] ; ret 0x8148
0x0000000000409f3b : fmul dword ptr [rax + 0x29] ; ret 0x148
0x0000000000407644 : fmul dword ptr [rax - 0x75] ; call 0x4902ff9c
0x0000000000407d3e : fmul dword ptr [rax - 0x77] ; ret 0x2948
0x000000000041162f : fmul dword ptr [rax - 0x77] ; ret 0x8148
0x0000000000402164 : fmul dword ptr [rdi] ; xchg eax, edi ; ret 0xe280
0x0000000000417678 : fmul dword ptr [rsi - 1] ; jmp rdx
0x000000000041273c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000414622 : fsub qword ptr [rcx] ; ret 0xc591
0x00000000004027d4 : fsubr dword ptr [rbp - 0x7f] ; ret 0x40
0x0000000000401a69 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041249f : hlt ; mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004018d0 : hlt ; pop rbp ; mov edi, 0x6192a0 ; jmp rax
0x0000000000413ec8 : hlt ; ret
0x0000000000413753 : idiv ah ; ret
0x0000000000413de6 : idiv dword ptr [rbx - 0x54abd34f] ; ret 0x3f90
0x0000000000412efc : imul edx, dword ptr [rbx + 0x75], 0xedcb211f ; xlatb ; pop rcx ; ret
0x0000000000414c50 : imul edx, ebp, 0xd17237d ; ret 0x399f
0x0000000000402278 : in al, -0x77 ; ret 0x3948
0x0000000000408d20 : in al, -0x7f ; ret 0x40
0x000000000041726c : in al, 2 ; add byte ptr [rax], al ; nop ; adc al, -1 ; call qword ptr [rbx]
0x0000000000413ec7 : in al, dx ; hlt ; ret
0x0000000000410958 : in al, dx ; pop rbp ; ret
0x00000000004142da : in eax, -0x1e ; xor eax, 0x770028ef ; ret
0x00000000004139a5 : in eax, 0 ; sbb bh, byte ptr [rdi + 0x79] ; ret
0x0000000000415430 : in eax, 0x7e ; ret 0x92d
0x0000000000405d06 : in eax, dx ; int 0x80
0x0000000000413ec5 : in eax, dx ; test ch, ah ; hlt ; ret
0x0000000000412f02 : in eax, dx ; xlatb ; pop rcx ; ret
0x000000000041374d : inc ch ; add byte ptr [rcx - 0x309e019], dh ; ret
0x000000000040bf7b : inc dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000412923 : insb byte ptr [rdi], dx ; jae 0x41294a ; ret
0x0000000000412922 : insb byte ptr [rdi], dx ; jae 0x41294b ; ret
0x0000000000413535 : insb byte ptr [rdi], dx ; out dx, eax ; cmp bh, byte ptr [rcx] ; ret
0x00000000004070bf : insb byte ptr [rdi], dx ; xchg eax, ebp ; int 0x48
0x0000000000414d70 : insd dword ptr [rdi], dx ; ret
0x0000000000413d46 : insd dword ptr [rdi], dx ; test esp, esi ; lahf ; cmp al, 0xd ; ret 0x43c5
0x00000000004070c2 : int 0x48
0x0000000000405d07 : int 0x80
0x000000000040fc4c : int 0xfd
0x0000000000413d0d : int1 ; add byte ptr [rip - 0x1f8ed3a8], r12b ; ret
0x00000000004138e9 : int1 ; lodsb al, byte ptr [rsi] ; mov cl, 0x22 ; xchg eax, edx ; xchg byte ptr [rax], al ; ret
0x0000000000414eb0 : int1 ; pop rsi ; mov ebp, 0xbc7504e3 ; ret
0x0000000000414038 : int1 ; sar byte ptr [rcx + 0xe], -0x7b ; ret
0x0000000000414260 : int1 ; stosb byte ptr [rdi], al ; ret
0x00000000004018c3 : ja 0x4018ca ; pop rbp ; ret
0x0000000000413ba5 : ja 0x413b95 ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xc0be
0x0000000000413bf1 : ja 0x413bb0 ; ret 0x206d
0x0000000000413c02 : ja 0x413c0e ; pop rax ; ret
0x0000000000416d65 : ja 0x416d68 ; call rax
0x0000000000401449 : jae 0x401455 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000412924 : jae 0x412949 ; ret
0x000000000041501c : jbe 0x414ffc ; adc eax, dword ptr [rax] ; ret
0x00000000004018cf : je 0x4018cd ; pop rbp ; mov edi, 0x6192a0 ; jmp rax
0x0000000000405a1e : jg 0x405a48 ; ret
0x0000000000405a2e : jg 0x405a58 ; ret
0x00000000004139a8 : jg 0x413a25 ; ret
0x0000000000413c96 : jg 0x413c65 ; add dh, bl ; ret
0x0000000000416df5 : jg 0x416df8 ; call qword ptr [rax]
0x0000000000416de5 : jge 0x416de8 ; call rax
0x0000000000414d11 : jl 0x414d40 ; ret 0x715e
0x00000000004151a5 : jl 0x4151c3 ; ret 0x56fd
0x000000000040162b : jmp 0x401467
0x00000000004020a8 : jmp 0x40206e
0x00000000004020b4 : jmp 0x40207a
0x00000000004020ad : jmp 0x4020ea
0x0000000000402b7c : jmp 0x41ee04
0x0000000000409935 : jmp 0xffffffff83899941
0x0000000000402521 : jmp 0xffffffffc2c96d2b
0x000000000040328a : jmp 0xffffffffc2c97ad2
0x00000000004036ad : jmp 0xffffffffc2c97eb7
0x0000000000403a9c : jmp 0xffffffffc2c982e4
0x0000000000407619 : jmp 0xffffffffc2c9be23
0x000000000040780a : jmp 0xffffffffc2c9c014
0x0000000000407b82 : jmp 0xffffffffc2c9c38c
0x000000000040e548 : jmp 0xffffffffc2ca2d52
0x0000000000402a09 : jmp 0xffffffffc3460de1
0x0000000000416fab : jmp qword ptr [rax]
0x0000000000414359 : jmp qword ptr [rbx]
0x0000000000408cba : jmp qword ptr [rcx]
0x00000000004174d3 : jmp qword ptr [rdx]
0x0000000000414de8 : jmp qword ptr [rip + 0xefe30c5]
0x0000000000403fad : jmp qword ptr [rsi - 0x3dfeb769]
0x00000000004018d7 : jmp rax
0x0000000000414485 : jmp rbx
0x000000000040aeb9 : jmp rcx
0x0000000000401917 : jmp rdx
0x00000000004170d3 : jmp rsp
0x0000000000401900 : jne 0x401907 ; pop rbp ; ret
0x0000000000412efe : jne 0x412f26 ; and ebx, ecx ; in eax, dx ; xlatb ; pop rcx ; ret
0x000000000041385c : jne 0x4138bf ; xchg eax, edi ; add byte ptr [rdi], al ; lodsb al, byte ptr [rsi] ; out dx, eax ; ret
0x00000000004143b9 : jne 0x414345 ; pop rdi ; ret 0x2692
0x0000000000414eb6 : jne 0x414e77 ; ret
0x0000000000413d13 : jno 0x413cf7 ; ret
0x0000000000414483 : jno 0x4144f5 ; jmp rbx
0x0000000000416da5 : jnp 0x416da8 ; call rax
0x0000000000416da4 : jnp 0x416da9 ; call rax
0x0000000000416db5 : jnp 0x416db8 ; call qword ptr [rax]
0x0000000000401936 : jns 0x40195e ; add byte ptr [rcx], al ; ret
0x0000000000414f67 : jns 0x414f04 ; call rsi
0x000000000040944e : jo 0x4094af ; ret
0x000000000040a5e7 : jo 0x40a5ef ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040adf5 : jo 0x40ae56 ; ret
0x000000000040c41f : jo 0x40c485 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040cac4 : jo 0x40cb25 ; ret
0x000000000040cbfe : jo 0x40cc5f ; ret
0x0000000000413533 : jo 0x4134e4 ; insb byte ptr [rdi], dx ; out dx, eax ; cmp bh, byte ptr [rcx] ; ret
0x0000000000402a0b : jrcxz 0x402a14 ; ret
0x0000000000402a17 : jrcxz 0x402a20 ; ret
0x00000000004147f5 : jrcxz 0x4147b5 ; ret
0x0000000000414eb4 : jrcxz 0x414ebf ; jne 0x414e79 ; ret
0x0000000000402e45 : js 0x402e59 ; xchg eax, edi ; ret 0xe280
0x0000000000402e44 : js 0x402e5a ; xchg eax, edi ; ret 0xe280
0x0000000000416d75 : js 0x416d78 ; call qword ptr [rax]
0x0000000000413d49 : lahf ; cmp al, 0xd ; ret 0x43c5
0x0000000000413e93 : lahf ; lodsd eax, dword ptr [rsi] ; pop rax ; ret 0x23b4
0x000000000040ef3a : lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x00000000004053b1 : lea ecx, dword ptr [0x412b4b] ; call 0x4015e9
0x0000000000414263 : lea esp, dword ptr [rsi + rdi*4 - 0x53] ; ret 0xdf32
0x0000000000414b14 : leave ; xchg eax, esi ; ret
0x0000000000402a06 : les r8, ptr [r9 + 0x5e3cfe9] ; ret
0x00000000004070c3 : les rcx, ptr [rcx + 0x29] ; ret
0x0000000000416db0 : lock adc byte ptr [rax], al ; add al, al ; jnp 0x416dbd ; call qword ptr [rax]
0x0000000000416df0 : lock adc dword ptr [rax], eax ; add byte ptr [rax], al ; jg 0x416dfd ; call qword ptr [rax]
0x00000000004138ea : lodsb al, byte ptr [rsi] ; mov cl, 0x22 ; xchg eax, edx ; xchg byte ptr [rax], al ; ret
0x0000000000414e72 : lodsb al, byte ptr [rsi] ; mov ebx, 0xf006b0cc ; ret
0x0000000000413861 : lodsb al, byte ptr [rsi] ; out dx, eax ; ret
0x00000000004156a0 : lodsd eax, dword ptr [rsi] ; mov ebx, dword ptr [rip - 0x620d4159] ; ret 0x766e
0x0000000000413e94 : lodsd eax, dword ptr [rsi] ; pop rax ; ret 0x23b4
0x0000000000414266 : lodsd eax, dword ptr [rsi] ; ret 0xdf32
0x000000000040d17a : loope 0x40d183 ; movzx eax, cl ; pop rbp ; ret
0x000000000040e840 : loopne 0x40e890 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040e83f : loopne 0x40e891 ; add esp, 0x20 ; pop rbp ; ret
0x000000000041140e : loopne 0x411425 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004145f2 : mov ah, -0x76 ; ficomp word ptr [rax] ; ret 0xe990
0x0000000000413422 : mov ah, byte ptr [rax - 0x34115b1f] ; ret
0x00000000004142d8 : mov al, -0x11 ; in eax, -0x1e ; xor eax, 0x770028ef ; ret
0x0000000000414a3c : mov al, -0x1c ; sbb dword ptr [rax], eax ; ret
0x000000000040aa0c : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000416da0 : mov al, 0x10 ; add byte ptr [rax], al ; jnp 0x416dad ; call rax
0x0000000000415ab6 : mov al, 0x20 ; push rax ; ret
0x00000000004074e1 : mov al, 0x48 ; add esp, 0x130 ; pop rbp ; ret
0x000000000040c99b : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040c828 : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x00000000004089d6 : mov al, 0x48 ; mov eax, dword ptr [rbp - 0x50] ; pop rbp ; ret
0x00000000004089da : mov al, 0x5d ; ret
0x0000000000416d20 : mov al, 0xe ; add byte ptr [rax], al ; adc byte ptr [rsi - 1], ah ; call rax
0x0000000000403bd4 : mov al, 2 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000411d26 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000414481 : mov bh, -1 ; jno 0x4144f7 ; jmp rbx
0x0000000000408444 : mov bh, dh ; mov byte ptr [rdx + rcx], dil ; pop rbp ; ret
0x0000000000416eb5 : mov bl, -1 ; call qword ptr [rax]
0x0000000000416ea5 : mov bl, -1 ; call rax
0x00000000004170d1 : mov bl, -2 ; jmp rsp
0x00000000004145f3 : mov bl, dh ; sbb byte ptr [rsi], dh ; ret 0xe990
0x0000000000409971 : mov byte ptr [0x6192f0], al ; pop rbp ; ret
0x000000000040d2f1 : mov byte ptr [r8 - 0x77], r9b ; ret 0x2948
0x000000000040f507 : mov byte ptr [rax + 0x14], 1 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000410f1b : mov byte ptr [rax + 0xc], 1 ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d2f2 : mov byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000402f0d : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000408447 : mov byte ptr [rdx + rcx], bh ; pop rbp ; ret
0x0000000000408446 : mov byte ptr [rdx + rcx], dil ; pop rbp ; ret
0x0000000000401933 : mov byte ptr [rip + 0x21799e], 1 ; ret
0x0000000000416ee5 : mov ch, -1 ; call rax
0x0000000000414f63 : mov cl, -0x63 ; cdq ; sub bh, byte ptr [rcx - 0x67] ; call rsi
0x00000000004138eb : mov cl, 0x22 ; xchg eax, edx ; xchg byte ptr [rax], al ; ret
0x0000000000413de8 : mov cl, 0x2c ; push rsp ; stosd dword ptr [rdi], eax ; ret 0x3f90
0x000000000040d17d : mov dh, -0x3f ; pop rbp ; ret
0x0000000000401ea3 : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401fda : mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000410954 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000411d2c : mov dh, -0x40 ; pop rbp ; ret
0x0000000000416ef5 : mov dh, -1 ; call qword ptr [rax]
0x0000000000414b12 : mov dh, 0x5e ; leave ; xchg eax, esi ; ret
0x0000000000408443 : mov dil, sil ; mov byte ptr [rdx + rcx], dil ; pop rbp ; ret
0x0000000000413ba4 : mov dr0, word ptr [rdi - 0x15] ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xc0be
0x000000000040994d : mov dword ptr [0x6192e8], edi ; pop rbp ; ret
0x0000000000412566 : mov dword ptr [rax + 0x14], ecx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040aca6 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040d0f6 : mov dword ptr [rax + rdi*8], eax ; pop rbp ; ret
0x000000000040ac68 : mov dword ptr [rax], eax ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040ab24 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040ac67 : mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000401b49 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004089d4 : mov dword ptr [rbp - 0x50], edx ; mov rax, qword ptr [rbp - 0x50] ; pop rbp ; ret
0x0000000000401a67 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041220d : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040ad1e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004022bf : mov dword ptr [rcx], eax ; mov eax, dword ptr [rbp - 0x34] ; pop rbp ; ret
0x0000000000410f4c : mov dword ptr [rdi + 0x10], eax ; pop rbp ; ret
0x000000000040ce88 : mov dword ptr [rdi + 8], 0 ; pop rbp ; ret
0x000000000040f54e : mov dword ptr [rsi], edi ; pop rbp ; ret
0x0000000000414d0b : mov eax, 0x16f051 ; movsd dword ptr [rdi], dword ptr [rsi] ; jl 0x414d46 ; ret 0x715e
0x0000000000405a2b : mov eax, 0x267f16de ; ret
0x000000000041461d : mov eax, 0x9c530020 ; fsub qword ptr [rcx] ; ret 0xc591
0x000000000040aad8 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040e35b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000409bc3 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040aad5 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000409b1f : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040e653 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040aa8d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040ab1e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000409d40 : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040e83e : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040ac6a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040e78b : mov eax, dword ptr [rbp - 0x2c] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000408921 : mov eax, dword ptr [rbp - 0x30] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004022c1 : mov eax, dword ptr [rbp - 0x34] ; pop rbp ; ret
0x000000000040adef : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040c999 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004089d8 : mov eax, dword ptr [rbp - 0x50] ; pop rbp ; ret
0x00000000004124a0 : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000411bc4 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040ea49 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040e988 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040e43d : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040ce5f : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000409fc9 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004078a8 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004126d8 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000409448 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000408b95 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000414eb3 : mov ebp, 0xbc7504e3 ; ret
0x000000000040195b : mov ebp, esp ; call rax
0x00000000004018c1 : mov ebp, esp ; ja 0x4018cc ; pop rbp ; ret
0x00000000004139a4 : mov ebp, fs ; add byte ptr [rdx], bl ; jg 0x413a29 ; ret
0x0000000000410ff1 : mov ebx, 0x48000014 ; add esp, 0x10 ; pop rbp ; ret
0x0000000000413de7 : mov ebx, 0xab542cb1 ; ret 0x3f90
0x0000000000414e73 : mov ebx, 0xf006b0cc ; ret
0x00000000004156a1 : mov ebx, dword ptr [rip - 0x620d4159] ; ret 0x766e
0x0000000000405a1b : mov ecx, 0x267f16de ; ret
0x000000000040e08d : mov ecx, 0x5b2a830a ; ret
0x0000000000405d12 : mov ecx, 0xedf9cd91 ; int 0x80
0x000000000040aeb2 : mov ecx, dword ptr [rax*8 + 0x416110] ; jmp rcx
0x000000000040b1d6 : mov ecx, dword ptr [rax*8 + 0x416158] ; jmp rcx
0x000000000040da4e : mov ecx, dword ptr [rax*8 + 0x416610] ; jmp rcx
0x000000000040ab21 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000414e1b : mov ecx, edi ; ret
0x0000000000401955 : mov edi, 0x618e20 ; mov rbp, rsp ; call rax
0x00000000004018d2 : mov edi, 0x6192a0 ; jmp rax
0x0000000000401912 : mov edi, 0x6192a0 ; jmp rdx
0x00000000004138d3 : mov edi, 0x6f2a38a6 ; xor eax, dword ptr [rcx + 0x3a] ; int 0x80
0x000000000040f548 : mov edi, dword ptr [rsi] ; add rdi, rax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x0000000000412737 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000416e25 : mov edi, edi ; call rax
0x0000000000412736 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000405d02 : mov edx, 0xedf9cd91 ; int 0x80
0x0000000000404e9b : mov edx, dword ptr [rbx - 0x16] ; ret 0xee81
0x0000000000404ea7 : mov edx, dword ptr [rbx - 0x16] ; ret 0xf189
0x0000000000401910 : mov esi, eax ; mov edi, 0x6192a0 ; jmp rdx
0x0000000000410957 : mov esp, ebp ; pop rbp ; ret
0x0000000000401957 : mov fs, word ptr [rcx] ; mov rbp, rsp ; call rax
0x000000000040994c : mov qword ptr [0x6192e8], rdi ; pop rbp ; ret
0x000000000040d0f5 : mov qword ptr [rax + rdi*8], r8 ; pop rbp ; ret
0x00000000004089d3 : mov qword ptr [rbp - 0x50], rdx ; mov rax, qword ptr [rbp - 0x50] ; pop rbp ; ret
0x000000000040ad1d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004022be : mov qword ptr [rcx], rax ; mov eax, dword ptr [rbp - 0x34] ; pop rbp ; ret
0x0000000000410f4b : mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x000000000040ce87 : mov qword ptr [rdi + 8], 0 ; pop rbp ; ret
0x000000000040f54d : mov qword ptr [rsi], rdi ; pop rbp ; ret
0x000000000040c99a : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004089d9 : mov r8b, 0x5d ; ret
0x000000000040e35a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000409bc2 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040aad4 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000409b1e : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040e652 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040aa8c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000409d3f : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040e83d : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000408920 : mov rax, qword ptr [rbp - 0x30] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040adee : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040c998 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004089d7 : mov rax, qword ptr [rbp - 0x50] ; pop rbp ; ret
0x000000000040e43c : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040ce5e : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000409fc8 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004078a7 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004126d7 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000409447 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000408b94 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040195a : mov rbp, rsp ; call rax
0x00000000004018c0 : mov rbp, rsp ; ja 0x4018cd ; pop rbp ; ret
0x000000000040aeb1 : mov rcx, qword ptr [rax*8 + 0x416110] ; jmp rcx
0x000000000040b1d5 : mov rcx, qword ptr [rax*8 + 0x416158] ; jmp rcx
0x000000000040da4d : mov rcx, qword ptr [rax*8 + 0x416610] ; jmp rcx
0x000000000040190f : mov rsi, rax ; mov edi, 0x6192a0 ; jmp rdx
0x0000000000410956 : mov rsp, rbp ; pop rbp ; ret
0x00000000004062f1 : movabs byte ptr [0x2148c2214dfa8949], al ; ret 0x949
0x0000000000414d10 : movsd dword ptr [rdi], dword ptr [rsi] ; jl 0x414d41 ; ret 0x715e
0x0000000000413ba7 : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xc0be
0x0000000000401ea2 : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401fd9 : movzx eax, al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000410953 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000411d2b : movzx eax, al ; pop rbp ; ret
0x000000000040d17c : movzx eax, cl ; pop rbp ; ret
0x0000000000417270 : nop ; adc al, -1 ; call qword ptr [rbx]
0x0000000000412758 : nop dword ptr [rax + rax] ; ret
0x000000000040b53d : or al, 0x18 ; ret 0x6451
0x00000000004053b2 : or al, 0x25 ; sub rax, qword ptr [r9] ; call 0x4015e8
0x0000000000410f1d : or al, 1 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402ac3 : or byte ptr [r15], cl ; xchg eax, edi ; ret 0xe280
0x0000000000414e71 : or byte ptr [rbx + rdi*4 - 0xff94f34], ch ; ret
0x0000000000402ac4 : or byte ptr [rdi], cl ; xchg eax, edi ; ret 0xe280
0x0000000000413d44 : or dl, byte ptr [rsi + 0x6d] ; test esp, esi ; lahf ; cmp al, 0xd ; ret 0x43c5
0x0000000000415b2e : or eax, 0x28844f00 ; ret 0xdf30
0x0000000000415073 : or eax, 0xe4b786e ; xchg eax, esi ; sbb al, -0x7c ; ret
0x000000000040cb81 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d0f3 : or eax, edx ; mov qword ptr [rax + rdi*8], r8 ; pop rbp ; ret
0x000000000041461c : or edi, dword ptr [rax - 0x63acffe0] ; fsub qword ptr [rcx] ; ret 0xc591
0x000000000040d0f2 : or r8, rdx ; mov qword ptr [rax + rdi*8], r8 ; pop rbp ; ret
0x0000000000413d48 : out -0x61, al ; cmp al, 0xd ; ret 0x43c5
0x0000000000413751 : out 0x1f, eax ; idiv ah ; ret
0x000000000041463c : out 0x7d, eax ; and byte ptr [rax], al ; ret
0x0000000000404e9a : out dx, al ; mov edx, dword ptr [rbx - 0x16] ; ret 0xee81
0x0000000000413536 : out dx, eax ; cmp bh, byte ptr [rcx] ; ret
0x00000000004142d9 : out dx, eax ; in eax, -0x1e ; xor eax, 0x770028ef ; ret
0x0000000000413862 : out dx, eax ; ret
0x0000000000413ec1 : out dx, eax ; std ; pushfq ; outsd dx, dword ptr [rsi] ; in eax, dx ; test ch, ah ; hlt ; ret
0x0000000000414484 : outsb dx, byte ptr [rsi] ; jmp rbx
0x0000000000413ec4 : outsd dx, dword ptr [rsi] ; in eax, dx ; test ch, ah ; hlt ; ret
0x00000000004138d7 : outsd dx, dword ptr [rsi] ; xor eax, dword ptr [rcx + 0x3a] ; int 0x80
0x000000000041385b : pcmpeqw mm3, qword ptr [rdx - 0x69] ; add byte ptr [rdi], al ; lodsb al, byte ptr [rsi] ; out dx, eax ; ret
0x000000000041274c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040c421 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041274e : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040c423 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000412750 : pop r14 ; pop r15 ; ret
0x000000000040c1d3 : pop r14 ; pop rbp ; ret
0x000000000040c425 : pop r15 ; pop rbp ; ret
0x0000000000412752 : pop r15 ; ret
0x0000000000413532 : pop rax ; jo 0x4134e5 ; insb byte ptr [rdi], dx ; out dx, eax ; cmp bh, byte ptr [rcx] ; ret
0x0000000000413531 : pop rax ; jo 0x4134e6 ; insb byte ptr [rdi], dx ; out dx, eax ; cmp bh, byte ptr [rcx] ; ret
0x0000000000413c04 : pop rax ; ret
0x0000000000413e95 : pop rax ; ret 0x23b4
0x0000000000401932 : pop rbp ; mov byte ptr [rip + 0x21799e], 1 ; ret
0x00000000004018d1 : pop rbp ; mov edi, 0x6192a0 ; jmp rax
0x000000000040190e : pop rbp ; mov rsi, rax ; mov edi, 0x6192a0 ; jmp rdx
0x0000000000414e70 : pop rbp ; or byte ptr [rbx + rdi*4 - 0xff94f34], ch ; ret
0x000000000041274b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041274f : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004018c5 : pop rbp ; ret
0x000000000040c420 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040df0d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040c1d2 : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000402f11 : pop rbx ; pop rbp ; ret
0x000000000040e091 : pop rbx ; ret
0x0000000000414a99 : pop rbx ; ret 0x517e
0x0000000000412f04 : pop rcx ; ret
0x00000000004159e4 : pop rcx ; wait ; ret 0x7982
0x0000000000414d6c : pop rcx ; xchg dword ptr [rsi], edx ; add byte ptr [rbp + 0x2e], ch ; ret
0x000000000040c426 : pop rdi ; pop rbp ; ret
0x0000000000412753 : pop rdi ; ret
0x00000000004143bb : pop rdi ; ret 0x2692
0x000000000041385d : pop rdx ; xchg eax, edi ; add byte ptr [rdi], al ; lodsb al, byte ptr [rsi] ; out dx, eax ; ret
0x0000000000414b13 : pop rsi ; leave ; xchg eax, esi ; ret
0x0000000000414eb2 : pop rsi ; mov ebp, 0xbc7504e3 ; ret
0x000000000040c424 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000412751 : pop rsi ; pop r15 ; ret
0x000000000040c1d4 : pop rsi ; pop rbp ; ret
0x000000000041274d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040c422 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000414f64 : popfq ; cdq ; sub bh, byte ptr [rcx - 0x67] ; call rsi
0x00000000004156a6 : popfq ; ret 0x766e
0x00000000004139ed : push 0x25e9006d ; call rcx
0x0000000000416e9f : push qword ptr [rax + 0x30000014] ; mov bl, -1 ; call rax
0x0000000000416d9f : push qword ptr [rax + 0x40000010] ; jnp 0x416dae ; call rax
0x0000000000416e1f : push qword ptr [rax + 0x70000012] ; mov edi, edi ; call rax
0x0000000000416edf : push qword ptr [rax - 0x2fffffeb] ; mov ch, -1 ; call rax
0x0000000000416ddf : push qword ptr [rax - 0x4fffffef] ; jge 0x416dee ; call rax
0x0000000000416d5f : push qword ptr [rax - 0x4ffffff1] ; ja 0x416d6e ; call rax
0x0000000000414482 : push qword ptr [rcx + 0x6e] ; jmp rbx
0x00000000004139a2 : push r12 ; mov ebp, fs ; add byte ptr [rdx], bl ; jg 0x413a2b ; ret
0x0000000000416eaf : push rax ; adc al, 0 ; add al, al ; mov bl, -1 ; call qword ptr [rax]
0x0000000000416daf : push rax ; adc byte ptr [rax], al ; add al, al ; jnp 0x416dbe ; call qword ptr [rax]
0x0000000000416def : push rax ; adc dword ptr [rax], eax ; add byte ptr [rax], al ; jg 0x416dfe ; call qword ptr [rax]
0x0000000000401fdf : push rax ; pop rbp ; ret
0x0000000000415ab8 : push rax ; ret
0x000000000040ff13 : push rbp ; call 0x38065
0x0000000000410ae3 : push rbp ; enter -0x76b8, 0xc ; ret 0x59e9
0x0000000000409f3a : push rbp ; fmul dword ptr [rax + 0x29] ; ret 0x148
0x00000000004089d5 : push rbp ; mov al, 0x48 ; mov eax, dword ptr [rbp - 0x50] ; pop rbp ; ret
0x0000000000401954 : push rbp ; mov edi, 0x618e20 ; mov rbp, rsp ; call rax
0x0000000000412efd : push rbx ; jne 0x412f27 ; and ebx, ecx ; in eax, dx ; xlatb ; pop rcx ; ret
0x0000000000414620 : push rbx ; pushfq ; fsub qword ptr [rcx] ; ret 0xc591
0x0000000000403fac : push rcx ; jmp qword ptr [rsi - 0x3dfeb769]
0x0000000000413ba1 : push rcx ; xor eax, 0xeb778e13 ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xc0be
0x0000000000413d45 : push rsi ; insd dword ptr [rdi], dx ; test esp, esi ; lahf ; cmp al, 0xd ; ret 0x43c5
0x00000000004139a3 : push rsp ; mov ebp, fs ; add byte ptr [rdx], bl ; jg 0x413a2a ; ret
0x00000000004138d2 : push rsp ; mov edi, 0x6f2a38a6 ; xor eax, dword ptr [rcx + 0x3a] ; int 0x80
0x0000000000413dea : push rsp ; stosd dword ptr [rdi], eax ; ret 0x3f90
0x0000000000403fa9 : pushfq ; add al, -0x23 ; push rcx ; jmp qword ptr [rsi - 0x3dfeb769]
0x0000000000414621 : pushfq ; fsub qword ptr [rcx] ; ret 0xc591
0x0000000000413ec3 : pushfq ; outsd dx, dword ptr [rsi] ; in eax, dx ; test ch, ah ; hlt ; ret
0x0000000000414d69 : rcl dword ptr [rbx + 0x16875925], 0 ; insd dword ptr [rdi], dx ; ret
0x00000000004148f1 : rcl dword ptr [rsi + 0x1ea0f6c4], 0xe ; ret
0x0000000000401451 : ret
0x0000000000405024 : ret 0
0x0000000000410fe5 : ret 0x10
0x000000000040223e : ret 0x145
0x0000000000406264 : ret 0x148
0x0000000000402d86 : ret 0x14e8
0x00000000004141e2 : ret 0x1685
0x0000000000414b0d : ret 0x18
0x000000000040c5be : ret 0x1b2
0x0000000000402c7e : ret 0x1da0
0x0000000000413e26 : ret 0x1dd9
0x0000000000402feb : ret 0x1e4a
0x0000000000413bf4 : ret 0x206d
0x00000000004047ae : ret 0x2145
0x0000000000402525 : ret 0x2148
0x0000000000401832 : ret 0x2179
0x0000000000401632 : ret 0x217a
0x0000000000402b78 : ret 0x237e
0x0000000000413e97 : ret 0x23b4
0x00000000004027d1 : ret 0x23d1
0x000000000040ced5 : ret 0x25e8
0x00000000004143bc : ret 0x2692
0x000000000040223b : ret 0x2945
0x0000000000403249 : ret 0x2948
0x000000000040b949 : ret 0x294c
0x000000000040b965 : ret 0x294d
0x00000000004141a2 : ret 0x2c60
0x00000000004059cd : ret 0x3148
0x00000000004042db : ret 0x38
0x000000000040221f : ret 0x3948
0x0000000000414c56 : ret 0x399f
0x000000000040d87f : ret 0x3be8
0x000000000040d57c : ret 0x3ee8
0x0000000000413dec : ret 0x3f90
0x0000000000414df1 : ret 0x3fd9
0x00000000004027d7 : ret 0x40
0x0000000000415674 : ret 0x4152
0x0000000000413d4c : ret 0x43c5
0x0000000000414365 : ret 0x496d
0x00000000004103ca : ret 0x4a3b
0x0000000000414ca7 : ret 0x4ae4
0x0000000000413a18 : ret 0x4b96
0x00000000004133b1 : ret 0x4f72
0x0000000000414a9a : ret 0x517e
0x0000000000411196 : ret 0x54e8
0x00000000004082b9 : ret 0x5589
0x00000000004151a7 : ret 0x56fd
0x0000000000410ae8 : ret 0x59e9
0x0000000000403e0a : ret 0x60e8
0x0000000000411689 : ret 0x61e8
0x00000000004083f5 : ret 0x6348
0x000000000040b53f : ret 0x6451
0x0000000000414a68 : ret 0x6fc7
0x0000000000414d13 : ret 0x715e
0x0000000000410dd6 : ret 0x74e8
0x0000000000414fca : ret 0x75a6
0x00000000004156a7 : ret 0x766e
0x00000000004159e6 : ret 0x7982
0x0000000000414c6b : ret 0x7f7e
0x00000000004030b4 : ret 0x8148
0x00000000004020cf : ret 0x840
0x0000000000413811 : ret 0x84b1
0x0000000000411366 : ret 0x84e8
0x00000000004020c0 : ret 0x8840
0x000000000040da09 : ret 0x8844
0x0000000000408c84 : ret 0x8941
0x000000000040252e : ret 0x8948
0x000000000040b968 : ret 0x8949
0x000000000040bafc : ret 0x89a5
0x0000000000402c11 : ret 0x89e8
0x0000000000402206 : ret 0x8b48
0x0000000000402e0f : ret 0x8be8
0x0000000000415867 : ret 0x8e5
0x0000000000402d0a : ret 0x90e8
0x0000000000405ca5 : ret 0x9174
0x0000000000415432 : ret 0x92d
0x0000000000404c04 : ret 0x949
0x00000000004159f7 : ret 0xaf5c
0x0000000000403bbc : ret 0xb0
0x0000000000403fa5 : ret 0xb848
0x000000000040f179 : ret 0xb849
0x0000000000402866 : ret 0xba49
0x000000000040f390 : ret 0xc
0x0000000000413ba8 : ret 0xc0be
0x00000000004018f5 : ret 0xc148
0x000000000040a0dc : ret 0xc2f6
0x0000000000414624 : ret 0xc591
0x000000000040b364 : ret 0xca21
0x00000000004023a3 : ret 0xca29
0x000000000040b97d : ret 0xcde8
0x000000000040ce53 : ret 0xd284
0x0000000000402e7c : ret 0xd2cd
0x000000000041375e : ret 0xd300
0x0000000000414612 : ret 0xd9e9
0x0000000000404517 : ret 0xdb6
0x0000000000415c86 : ret 0xdc85
0x0000000000415b34 : ret 0xdf30
0x0000000000414267 : ret 0xdf32
0x00000000004145e1 : ret 0xe066
0x0000000000402167 : ret 0xe280
0x0000000000413899 : ret 0xe3fd
0x00000000004145f7 : ret 0xe990
0x00000000004083ce : ret 0xea81
0x0000000000415984 : ret 0xebbc
0x000000000040c20c : ret 0xee8
0x0000000000404e9e : ret 0xee81
0x000000000040a24d : ret 0xf01
0x000000000040bbf8 : ret 0xf180
0x0000000000404eaa : ret 0xf189
0x00000000004083d8 : ret 0xf229
0x000000000040a0cf : ret 0xf280
0x000000000040b3de : ret 0xf281
0x0000000000403efd : ret 0xf48
0x00000000004146e3 : ret 0xf718
0x000000000041487a : ret 0xf7f9
0x0000000000402afb : ret 0xf809
0x0000000000413a55 : ret 0xff99
0x00000000004053ba : ret 0xffff
0x0000000000402b01 : ret 1
0x000000000040ef40 : ret 2
0x000000000040ac66 : rol byte ptr [rcx + rcx*4], 1 ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000414c69 : rol dh, 1 ; ret 0x7f7e
0x000000000040d178 : rol dword ptr [rax - 0x49f0fe1f], -0x3f ; pop rbp ; ret
0x0000000000402c0c : rol dword ptr [rcx + rbp - 0x38], -0x77 ; ret 0x89e8
0x0000000000402e0a : rol dword ptr [rcx + rbp - 0x38], -0x77 ; ret 0x8be8
0x0000000000402238 : rol dword ptr [rcx - 0x77], cl ; ret 0x2945
0x00000000004036a9 : ror byte ptr [r8 - 0x3f], -0x17 ; add dword ptr [rax - 0x77], ecx ; ret 0x2148
0x000000000040251d : ror byte ptr [r8 - 0x3f], 1 ; jmp 0xffffffffc2c96d2f
0x0000000000407615 : ror byte ptr [r8 - 0x3f], 1 ; jmp 0xffffffffc2c9be27
0x0000000000407806 : ror byte ptr [r8 - 0x3f], 1 ; jmp 0xffffffffc2c9c018
0x0000000000410adf : ror byte ptr [r8 - 0x75], 0x55 ; enter -0x76b8, 0xc ; ret 0x59e9
0x000000000040e070 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000405fcf : ror byte ptr [r8 - 0x77], 1 ; ret 0x2948
0x000000000040adf0 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x40ae5b ; ret
0x0000000000404520 : ror byte ptr [rax + 1], 1 ; enter -0x46b8, 0x6b ; ret 0xdb6
0x00000000004018fc : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40190b ; pop rbp ; ret
0x00000000004036aa : ror byte ptr [rax - 0x3f], -0x17 ; add dword ptr [rax - 0x77], ecx ; ret 0x2148
0x000000000040251e : ror byte ptr [rax - 0x3f], 1 ; jmp 0xffffffffc2c96d2e
0x0000000000407616 : ror byte ptr [rax - 0x3f], 1 ; jmp 0xffffffffc2c9be26
0x0000000000407807 : ror byte ptr [rax - 0x3f], 1 ; jmp 0xffffffffc2c9c017
0x0000000000410ae0 : ror byte ptr [rax - 0x75], 0x55 ; enter -0x76b8, 0xc ; ret 0x59e9
0x0000000000410955 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x000000000040e071 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000405fd0 : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x000000000040b946 : ror byte ptr [rax - 0x77], 1 ; ret 0x294c
0x000000000040adf1 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x40ae5a ; ret
0x0000000000401fdb : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x0000000000408263 : ror byte ptr [rax - 0x7f], -0x3c ; adc byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040a5e3 : ror byte ptr [rax - 0x7f], -0x3c ; jo 0x40a5f3 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000403bd0 : ror byte ptr [rax - 0x7f], -0x3c ; mov al, 2 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040d0f4 : ror byte ptr [rcx + rcx*4 + 4], 1 ; clc ; pop rbp ; ret
0x0000000000402863 : ror dword ptr [rax + 0x21], cl ; ret 0xba49
0x0000000000405ccd : ror dword ptr [rax - 0x46], 1 ; ret 0x9174
0x0000000000411a4f : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000413bfd : ror dword ptr [rdi], cl ; xchg dword ptr [rdx], esp ; ja 0x413c13 ; pop rax ; ret
0x0000000000401935 : sahf ; jns 0x40195f ; add byte ptr [rcx], al ; ret
0x0000000000415628 : sal dword ptr [rbx + rcx*8 + 0x1017213f], cl ; add byte ptr [rdi], cl ; jmp rax
0x0000000000414039 : sar byte ptr [rcx + 0xe], -0x7b ; ret
0x00000000004018fe : sar eax, 1 ; jne 0x401909 ; pop rbp ; ret
0x0000000000408b90 : sar esi, -1 ; dec dword ptr [rax - 0x75] ; clc ; pop rbp ; ret
0x00000000004018fd : sar rax, 1 ; jne 0x40190a ; pop rbp ; ret
0x0000000000415079 : sbb al, -0x7c ; ret
0x00000000004139a7 : sbb bh, byte ptr [rdi + 0x79] ; ret
0x0000000000402b40 : sbb byte ptr [r15], cl ; xchg eax, edi ; ret 0xe280
0x0000000000402b41 : sbb byte ptr [rdi], cl ; xchg eax, edi ; ret 0xe280
0x00000000004145f5 : sbb byte ptr [rsi], dh ; ret 0xe990
0x0000000000414e16 : sbb ch, byte ptr [rdi] ; adc eax, 0xf989d1eb ; ret
0x0000000000414a3e : sbb dword ptr [rax], eax ; ret
0x00000000004156a2 : sbb eax, 0x9df2bea7 ; ret 0x766e
0x0000000000413bfc : sbb ebx, edx ; add byte ptr [r15 + 0x58077722], r8b ; ret
0x0000000000403f8d : scasd eax, dword ptr [rdi] ; ret 0x8b48
0x00000000004125c8 : setne al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004125ca : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004027d2 : shl dword ptr [rbx], 1 ; fsubr dword ptr [rbp - 0x7f] ; ret 0x40
0x0000000000415ab3 : shr bl, 0x60 ; mov al, 0x20 ; push rax ; ret
0x0000000000405d05 : stc ; in eax, dx ; int 0x80
0x0000000000414e1c : stc ; ret
0x0000000000413e90 : stc ; sub eax, 0x58ad9f63 ; ret 0x23b4
0x0000000000413ec2 : std ; pushfq ; outsd dx, dword ptr [rsi] ; in eax, dx ; test ch, ah ; hlt ; ret
0x0000000000414fc4 : sti ; add eax, 0x10d78564 ; ret 0x75a6
0x0000000000411d28 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004146e0 : sti ; xor ch, byte ptr [rdx] ; ret 0xf718
0x0000000000414261 : stosb byte ptr [rdi], al ; ret
0x000000000040f601 : stosd dword ptr [rdi], eax ; add byte ptr cs:[rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000413deb : stosd dword ptr [rdi], eax ; ret 0x3f90
0x0000000000413de9 : sub al, 0x54 ; stosd dword ptr [rdi], eax ; ret 0x3f90
0x000000000041425e : sub al, byte ptr [rax] ; int1 ; stosb byte ptr [rdi], al ; ret
0x0000000000414f66 : sub bh, byte ptr [rcx - 0x67] ; call rsi
0x0000000000402bbd : sub byte ptr [r15], cl ; xchg eax, edi ; ret 0xe280
0x00000000004177d8 : sub byte ptr [rbx - 1], dl ; jmp qword ptr [rax]
0x0000000000402bbe : sub byte ptr [rdi], cl ; xchg eax, edi ; ret 0xe280
0x000000000040e08f : sub dword ptr [rdx], 0x5b ; ret
0x0000000000413e91 : sub eax, 0x58ad9f63 ; ret 0x23b4
0x00000000004053b5 : sub eax, dword ptr [rcx] ; call 0x4015e5
0x000000000041278d : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000414f60 : sub esp, dword ptr [rdx - 0x66624ecf] ; sub bh, byte ptr [rcx - 0x67] ; call rsi
0x000000000041425d : sub r8b, byte ptr [rax] ; int1 ; stosb byte ptr [rdi], al ; ret
0x00000000004053b4 : sub rax, qword ptr [r9] ; call 0x4015e6
0x000000000041278c : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000415b30 : test byte ptr [r8], r13b ; ret 0xdf30
0x000000000041275a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000415b31 : test byte ptr [rax], ch ; ret 0xdf30
0x000000000041385a : test byte ptr [rdi], 0x75 ; pop rdx ; xchg eax, edi ; add byte ptr [rdi], al ; lodsb al, byte ptr [rsi] ; out dx, eax ; ret
0x0000000000413ec6 : test ch, ah ; hlt ; ret
0x00000000004151a1 : test dword ptr [rdx + 0x1a7c3b68], esi ; ret 0x56fd
0x0000000000413534 : test eax, 0x393aef6c ; ret
0x0000000000413d47 : test esp, esi ; lahf ; cmp al, 0xd ; ret 0x43c5
0x000000000041569e : verw word ptr [rbp - 0x4158e275] ; popfq ; ret 0x766e
0x00000000004159e5 : wait ; ret 0x7982
0x00000000004138ee : xchg byte ptr [rax], al ; ret
0x00000000004139a1 : xchg byte ptr [rcx + 0x54], cl ; mov ebp, fs ; add byte ptr [rdx], bl ; jg 0x413a2c ; ret
0x0000000000413c00 : xchg dword ptr [rdx], esp ; ja 0x413c10 ; pop rax ; ret
0x0000000000414d6d : xchg dword ptr [rsi], edx ; add byte ptr [rbp + 0x2e], ch ; ret
0x00000000004070c0 : xchg eax, ebp ; int 0x48
0x000000000040bbe2 : xchg eax, ebp ; ret 0x8840
0x0000000000412496 : xchg eax, ebp ; ret 0xd284
0x000000000040d177 : xchg eax, ebp ; rol dword ptr [rax - 0x49f0fe1f], -0x3f ; pop rbp ; ret
0x00000000004125c9 : xchg eax, ebp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000414d6a : xchg eax, ebx ; and eax, 0x168759 ; insd dword ptr [rdi], dx ; ret
0x000000000041385e : xchg eax, edi ; add byte ptr [rdi], al ; lodsb al, byte ptr [rsi] ; out dx, eax ; ret
0x0000000000414a67 : xchg eax, edi ; ret 0x6fc7
0x0000000000402166 : xchg eax, edi ; ret 0xe280
0x00000000004138ed : xchg eax, edx ; xchg byte ptr [rax], al ; ret
0x0000000000414b15 : xchg eax, esi ; ret
0x00000000004020bf : xchg eax, esi ; ret 0x8840
0x0000000000415078 : xchg eax, esi ; sbb al, -0x7c ; ret
0x000000000040ce52 : xchg eax, esp ; ret 0xd284
0x0000000000402f6b : xchg eax, esp ; ret 0xe280
0x0000000000414a3a : xchg ebp, ecx ; mov al, -0x1c ; sbb dword ptr [rax], eax ; ret
0x0000000000412f03 : xlatb ; pop rcx ; ret
0x0000000000413bc1 : xlatb ; ret
0x0000000000413fde : xor al, 0 ; ret
0x0000000000416cb4 : xor byte ptr [rax - 1], ah ; call qword ptr [rax]
0x00000000004074e5 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000416cf4 : xor byte ptr [rdx - 1], ah ; call qword ptr [rax]
0x00000000004146e1 : xor ch, byte ptr [rdx] ; ret 0xf718
0x0000000000414f62 : xor dword ptr [rcx + 0x792a999d], esi ; cdq ; call rsi
0x000000000040c917 : xor eax, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x00000000004142dc : xor eax, 0x770028ef ; ret
0x0000000000413ba2 : xor eax, 0xeb778e13 ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xc0be
0x00000000004138d8 : xor eax, dword ptr [rcx + 0x3a] ; int 0x80
0x0000000000414e80 : xor eax, dword ptr [rdi + 0x11] ; ret
0x000000000040ac65 : xor eax, edx ; mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004174d1 : xor edi, edi ; jmp qword ptr [rdx]
