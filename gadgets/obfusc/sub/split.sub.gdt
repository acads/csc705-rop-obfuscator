0x00000000004113b8 : adc al, 0x48 ; add esp, 0x10 ; pop rbp ; ret
0x000000000040e179 : adc al, 1 ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041492d : adc byte ptr [rax], al ; add al, dh ; ret 0xffff
0x000000000041494d : adc byte ptr [rax], al ; add byte ptr [rax], dh ; ret
0x000000000041139c : adc dh, dh ; ret 0xf01
0x0000000000414a0d : adc dword ptr [rax], eax ; add al, al ; ret
0x000000000041071b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000409d59 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041494b : add ah, cl ; adc byte ptr [rax], al ; add byte ptr [rax], dh ; ret
0x00000000004133ad : add al, -1 ; jmp qword ptr [rax]
0x000000000040cc7d : add al, 0x21 ; ret 0xd709
0x000000000041346b : add al, ah ; cmp al, -1 ; jmp qword ptr [rax]
0x000000000041418f : add al, al ; movsxd rdi, edi ; jmp qword ptr [rdx]
0x0000000000414a0f : add al, al ; ret
0x00000000004056ce : add al, ch ; insb byte ptr [rdi], dx ; ret
0x00000000004028b7 : add al, ch ; ret
0x0000000000403878 : add al, ch ; ret 0xffe5
0x0000000000413be7 : add al, cl ; xor edi, edi ; call qword ptr [rsi]
0x000000000041492f : add al, dh ; ret 0xffff
0x00000000004115af : add bl, dh ; ret
0x00000000004023a7 : add byte ptr [r8 - 0x73], cl ; xor al, 0x25 ; ret 0x411e
0x0000000000404fa8 : add byte ptr [rax + 1], cl ; ret 0x3948
0x000000000040f037 : add byte ptr [rax + 1], cl ; ret 0x4a3b
0x0000000000403569 : add byte ptr [rax - 0x47], cl ; ret 0x8f66
0x00000000004023a8 : add byte ptr [rax - 0x73], cl ; xor al, 0x25 ; ret 0x411e
0x00000000004114d6 : add byte ptr [rax - 0x75], cl ; call 0x49039e2e
0x0000000000403a62 : add byte ptr [rax - 0x75], cl ; call 0xffffffffb102c3ba
0x0000000000403811 : add byte ptr [rax - 0x75], cl ; push rbp ; call 0x202b969
0x000000000040b4fd : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000040573c : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; ret 0x2948
0x0000000000405ea3 : add byte ptr [rax - 0x77], cl ; ret 0x2948
0x00000000004027e9 : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000041341b : add byte ptr [rax], ah ; sub edi, edi ; jmp rax
0x0000000000414949 : add byte ptr [rax], al ; add ah, cl ; adc byte ptr [rax], al ; add byte ptr [rax], dh ; ret
0x00000000004056cc : add byte ptr [rax], al ; add al, ch ; insb byte ptr [rdi], dx ; ret
0x00000000004028b5 : add byte ptr [rax], al ; add al, ch ; ret
0x00000000004115ad : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000404fa6 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x3948
0x000000000040f035 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x4a3b
0x0000000000403567 : add byte ptr [rax], al ; add byte ptr [rax - 0x47], cl ; ret 0x8f66
0x00000000004114d4 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; call 0x49039e30
0x0000000000403a60 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; call 0xffffffffb102c3bc
0x000000000040573a : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; ret 0x2948
0x0000000000403871 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x00000000004115ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000041302b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx], al ; ret 0x40
0x0000000000412fdb : add byte ptr [rax], al ; add byte ptr [rax], al ; add cl, ah ; ret 0x40
0x0000000000411291 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000405c6f : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040c459 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040755b : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004115ac : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000413024 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x40
0x000000000040cca2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000405a79 : add byte ptr [rax], al ; add byte ptr [rbx - 0x23170f83], cl ; ret
0x0000000000405993 : add byte ptr [rax], al ; add byte ptr [rbx - 0x5d170b83], cl ; ret 0xffff
0x0000000000405c59 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b71fb3], cl ; ret 0xb0
0x0000000000405ab9 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7638b], cl ; ret 0xb0
0x000000000041302d : add byte ptr [rax], al ; add byte ptr [rbx], al ; ret 0x40
0x00000000004149a9 : add byte ptr [rax], al ; add byte ptr [rcx + rdx], ch ; add byte ptr [rax], al ; nop ; ret
0x00000000004093fe : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000402e3c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x9588
0x00000000004112e2 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040a66e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000412fdd : add byte ptr [rax], al ; add cl, ah ; ret 0x40
0x000000000040dbac : add byte ptr [rax], al ; add cl, ch ; ret 2
0x0000000000413be2 : add byte ptr [rax], al ; add eax, dword ptr fs:[rax] ; add al, cl ; xor edi, edi ; call qword ptr [rsi]
0x0000000000403cb3 : add byte ptr [rax], al ; add rsi, rax ; mov rax, rsi ; pop rbp ; ret
0x0000000000409d21 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000409a30 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000411293 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000405c71 : add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004019e3 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000413b62 : add byte ptr [rax], al ; in al, 2 ; add byte ptr [rax], al ; pop rax ; and edi, edi ; call qword ptr [rdx]
0x0000000000401a99 : add byte ptr [rax], al ; jmp 0x4019f9
0x000000000041492a : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; adc byte ptr [rax], al ; add al, dh ; ret 0xffff
0x000000000041458f : add byte ptr [rax], al ; mov bh, bh ; jmp rax
0x000000000040c45b : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000405994 : add byte ptr [rax], al ; mov edi, dword ptr [rbp - 0xc] ; call 0x401c47
0x00000000004082f2 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040755d : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000414a0a : add byte ptr [rax], al ; mov word ptr [rcx], ss ; add byte ptr [rax], al ; rol bl, -1 ; jmp rdx
0x000000000041345a : add byte ptr [rax], al ; nop ; cmp edi, edi ; jmp rax
0x00000000004149ae : add byte ptr [rax], al ; nop ; ret
0x00000000004133db : add byte ptr [rax], al ; or edi, edi ; jmp rax
0x0000000000413b66 : add byte ptr [rax], al ; pop rax ; and edi, edi ; call qword ptr [rdx]
0x0000000000404703 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040b39b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004099f0 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040cca3 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004115ae : add byte ptr [rax], al ; ret
0x0000000000413026 : add byte ptr [rax], al ; ret 0x40
0x0000000000414a0e : add byte ptr [rax], al ; rol bl, -1 ; jmp rdx
0x00000000004149aa : add byte ptr [rax], al ; sub al, 0x11 ; add byte ptr [rax], al ; nop ; ret
0x000000000041342a : add byte ptr [rax], al ; sub byte ptr [rdi], -1 ; jmp qword ptr [rax]
0x0000000000413428 : add byte ptr [rax], cl ; add byte ptr [rax], al ; sub byte ptr [rdi], -1 ; jmp qword ptr [rax]
0x00000000004133eb : add byte ptr [rax], dh ; or edi, edi ; jmp qword ptr [rax]
0x000000000041494f : add byte ptr [rax], dh ; ret
0x000000000040b39c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004099f1 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040cca4 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000413be3 : add byte ptr [rbx + rax], ah ; add al, cl ; xor edi, edi ; call qword ptr [rsi]
0x000000000040686c : add byte ptr [rbx - 0x1034b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040690a : add byte ptr [rbx - 0x11f4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000406995 : add byte ptr [rbx - 0x1234b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004069ff : add byte ptr [rbx - 0x1274b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000406a59 : add byte ptr [rbx - 0x12b4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000406a9e : add byte ptr [rbx - 0x12f4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000406b51 : add byte ptr [rbx - 0x1434b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000406b90 : add byte ptr [rbx - 0x1474b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000406bd5 : add byte ptr [rbx - 0x14b4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000405a7b : add byte ptr [rbx - 0x23170f83], cl ; ret
0x0000000000405995 : add byte ptr [rbx - 0x5d170b83], cl ; ret 0xffff
0x0000000000405c5b : add byte ptr [rbx - 0x76b71fb3], cl ; ret 0xb0
0x0000000000405abb : add byte ptr [rbx - 0x76b7638b], cl ; ret 0xb0
0x0000000000405b90 : add byte ptr [rbx - 0x76b76b83], cl ; ret 0xb0
0x0000000000405c32 : add byte ptr [rbx - 0x76b76f83], cl ; ret 0xb0
0x000000000041302f : add byte ptr [rbx], al ; ret 0x40
0x00000000004149ab : add byte ptr [rcx + rdx], ch ; add byte ptr [rax], al ; nop ; ret
0x0000000000410fdc : add byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x000000000040ad6d : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000402048 : add byte ptr [rcx], al ; ret
0x000000000040dba8 : add byte ptr [rdi], cl ; lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x00000000004056c8 : add byte ptr [rdi], cl ; test byte ptr [rip - 0x18000000], ch ; insb byte ptr [rdi], dx ; ret
0x0000000000409400 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000402e3e : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x9588
0x00000000004112e4 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040a670 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000412fdf : add cl, ah ; ret 0x40
0x000000000040dbae : add cl, ch ; ret 2
0x000000000040b9d9 : add dword ptr [rax - 0x77], ecx ; ret 0x8148
0x0000000000409d1f : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040b39a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004099ef : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000407a64 : add dword ptr [rax], ecx ; ret 0x840
0x0000000000402e38 : add dword ptr [rcx + 0xf9], eax ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x9588
0x0000000000406616 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040f5c2 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000403c58 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000402044 : add eax, 0x21352e ; add ebx, esi ; ret
0x000000000040dbab : add eax, 0xe9000000 ; ret 2
0x0000000000413be5 : add eax, dword ptr [rax] ; add al, cl ; xor edi, edi ; call qword ptr [rsi]
0x0000000000413be4 : add eax, dword ptr fs:[rax] ; add al, cl ; xor edi, edi ; call qword ptr [rsi]
0x0000000000413030 : add eax, edx ; add byte ptr [rax], al ; add byte ptr [rax], al ; add cl, ah ; ret 0x40
0x000000000040200b : add eax, edx ; sar rax, 1 ; jne 0x40201c ; pop rbp ; ret
0x000000000040fbb9 : add eax, esi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x0000000000402049 : add ebx, esi ; ret
0x000000000040e1bb : add edi, eax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x0000000000403cb6 : add esi, eax ; mov rax, rsi ; pop rbp ; ret
0x00000000004021eb : add esp, 0x10 ; pop rbp ; ret
0x000000000040ad6b : add esp, 0x100 ; pop rbp ; ret
0x000000000041007c : add esp, 0x10e0 ; pop rbp ; ret
0x000000000040dedc : add esp, 0x130 ; pop rbp ; ret
0x0000000000406c85 : add esp, 0x150 ; pop rbp ; ret
0x0000000000407e05 : add esp, 0x170 ; pop rbp ; ret
0x000000000040b6cc : add esp, 0x1a0 ; pop rbp ; ret
0x000000000040725c : add esp, 0x1b0 ; pop rbp ; ret
0x0000000000410b3e : add esp, 0x1e0 ; pop rbp ; ret
0x0000000000403912 : add esp, 0x20 ; pop rbp ; ret
0x000000000040ed76 : add esp, 0x250 ; pop rbp ; ret
0x000000000040232d : add esp, 0x30 ; pop rbp ; ret
0x0000000000403aba : add esp, 0x40 ; pop rbp ; ret
0x0000000000403e89 : add esp, 0x50 ; pop rbp ; ret
0x00000000004040f5 : add esp, 0x60 ; pop rbp ; ret
0x0000000000405c74 : add esp, 0x70 ; pop rbp ; ret
0x0000000000405901 : add esp, 0x90 ; pop rbp ; ret
0x00000000004046ff : add esp, 0xa0 ; pop rbp ; ret
0x000000000040822a : add esp, 0xb0 ; pop rbp ; ret
0x00000000004051ac : add esp, 0xc0 ; pop rbp ; ret
0x000000000040cc9f : add esp, 0xd8 ; pop rbx ; pop rbp ; ret
0x000000000040c3f5 : add esp, 0xe0 ; pop rbp ; ret
0x00000000004019e6 : add esp, 8 ; ret
0x000000000040200a : add rax, rdx ; sar rax, 1 ; jne 0x40201d ; pop rbp ; ret
0x000000000040fbb8 : add rax, rsi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x000000000040e1ba : add rdi, rax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x0000000000403cb5 : add rsi, rax ; mov rax, rsi ; pop rbp ; ret
0x00000000004021ea : add rsp, 0x10 ; pop rbp ; ret
0x000000000040ad6a : add rsp, 0x100 ; pop rbp ; ret
0x000000000041007b : add rsp, 0x10e0 ; pop rbp ; ret
0x000000000040dedb : add rsp, 0x130 ; pop rbp ; ret
0x0000000000406c84 : add rsp, 0x150 ; pop rbp ; ret
0x0000000000407e04 : add rsp, 0x170 ; pop rbp ; ret
0x000000000040b6cb : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000040725b : add rsp, 0x1b0 ; pop rbp ; ret
0x0000000000410b3d : add rsp, 0x1e0 ; pop rbp ; ret
0x0000000000403911 : add rsp, 0x20 ; pop rbp ; ret
0x000000000040ed75 : add rsp, 0x250 ; pop rbp ; ret
0x000000000040232c : add rsp, 0x30 ; pop rbp ; ret
0x0000000000403ab9 : add rsp, 0x40 ; pop rbp ; ret
0x0000000000403e88 : add rsp, 0x50 ; pop rbp ; ret
0x00000000004040f4 : add rsp, 0x60 ; pop rbp ; ret
0x0000000000405c73 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000405900 : add rsp, 0x90 ; pop rbp ; ret
0x00000000004046fe : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000408229 : add rsp, 0xb0 ; pop rbp ; ret
0x00000000004051ab : add rsp, 0xc0 ; pop rbp ; ret
0x000000000040cc9e : add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x000000000040c3f4 : add rsp, 0xe0 ; pop rbp ; ret
0x00000000004019e5 : add rsp, 8 ; ret
0x000000000040f5c1 : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000403c57 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000402047 : and dword ptr [rax], eax ; add ebx, esi ; ret
0x0000000000406dbf : and eax, 0x6157a8 ; pop rbp ; ret
0x0000000000406de3 : and eax, 0x6157b0 ; pop rbp ; ret
0x0000000000413b69 : and edi, edi ; call qword ptr [rdx]
0x0000000000403815 : call 0x202b965
0x000000000040eb84 : call 0x36cd4
0x0000000000405999 : call 0x401c42
0x0000000000405b99 : call 0x401e42
0x00000000004114da : call 0x49039e2a
0x00000000004114d9 : call 0x49039e2b
0x0000000000403ec8 : call 0xa801b7
0x0000000000403a66 : call 0xffffffffb102c3b6
0x0000000000403a65 : call 0xffffffffb102c3b7
0x0000000000409a29 : call 0xffffffffe9032379
0x0000000000409a28 : call 0xffffffffe903237a
0x000000000040fa43 : call 0xffffffffe9038393
0x0000000000411589 : call qword ptr [r12 + rbx*8]
0x00000000004139ab : call qword ptr [rax]
0x0000000000413b6b : call qword ptr [rdx]
0x0000000000413beb : call qword ptr [rsi]
0x000000000041158a : call qword ptr [rsp + rbx*8]
0x000000000040206d : call rax
0x000000000040977c : call rbx
0x0000000000413e6b : call rdi
0x000000000040deda : clc ; add rsp, 0x130 ; pop rbp ; ret
0x000000000040b8cf : clc ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040ed74 : clc ; add rsp, 0x250 ; pop rbp ; ret
0x000000000040a681 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004077eb : clc ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000410651 : clc ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041152a : clc ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000408228 : clc ; add rsp, 0xb0 ; pop rbp ; ret
0x00000000004104fb : clc ; add rsp, 0xc0 ; pop rbp ; ret
0x000000000040200f : clc ; jne 0x402018 ; pop rbp ; ret
0x00000000004037d6 : clc ; mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x00000000004113b5 : clc ; mov dword ptr [rax + 0x14], ecx ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004084c5 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000041105f : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004037c7 : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004037cb : clc ; pop rbp ; ret
0x000000000040c458 : cld ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000402217 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041007a : cld ; add rsp, 0x10e0 ; pop rbp ; ret
0x0000000000406c83 : cld ; add rsp, 0x150 ; pop rbp ; ret
0x000000000040adde : cld ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004072f8 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040d36b : cld ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040c3f3 : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000041105c : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040cec3 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040addb : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004072f5 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040c45f : cld ; pop rbp ; ret
0x000000000041346d : cmp al, -1 ; jmp qword ptr [rax]
0x0000000000410a29 : cmp dword ptr [rdx - 0x76be63d5], ebx ; ret
0x000000000040c7c6 : cmp eax, 0x8945c621 ; ret 0x8141
0x0000000000401fcd : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401fe0 ; pop rbp ; ret
0x000000000041345d : cmp edi, edi ; jmp rax
0x000000000040aedc : cwde ; mov rcx, qword ptr [rax*8 + 0x412c60] ; jmp rcx
0x0000000000404678 : dec dword ptr [rax + 0x29] ; ret 0x148
0x000000000040465c : dec dword ptr [rax + 0x29] ; ret 0x2948
0x000000000040eb80 : dec dword ptr [rax - 0x75] ; push rbp ; call 0x36cd8
0x000000000040dc14 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x000000000040ebb6 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000040ac9c : dec dword ptr [rax - 0x77] ; ret 0x8be8
0x000000000040a999 : dec dword ptr [rax - 0x77] ; ret 0x8ee8
0x0000000000406872 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000409182 : dec dword ptr [rcx - 0x77] ; ret 0x294d
0x000000000040f754 : enter -0x76b8, 0xc ; ret 0x59e9
0x0000000000403563 : enter 0x2d48, 1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x47], cl ; ret 0x8f66
0x0000000000409510 : enter 0x4b05, 0x34 ; fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x000000000040cca1 : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000409514 : fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x000000000041029e : fmul dword ptr [r8 - 0x77] ; ret 0x8148
0x000000000040775b : fmul dword ptr [rax + 0x29] ; ret 0x148
0x000000000041029f : fmul dword ptr [rax - 0x77] ; ret 0x8148
0x000000000041158c : fmul qword ptr [rax - 0x7d] ; ret
0x00000000004021e9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405998 : hlt ; call 0x401c43
0x00000000004112ef : hlt ; mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401fe0 : hlt ; pop rbp ; mov edi, 0x615518 ; jmp rax
0x0000000000413b64 : in al, 2 ; add byte ptr [rax], al ; pop rax ; and edi, edi ; call qword ptr [rdx]
0x000000000040c51c : in al, dx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040f5c8 : in al, dx ; pop rbp ; ret
0x000000000040cbda : in eax, -0x4a ; loope 0x40cc03 ; ret 0x8941
0x0000000000413467 : inc dword ptr [rax] ; or dword ptr [rax], eax ; add al, ah ; cmp al, -1 ; jmp qword ptr [rax]
0x000000000040979b : inc dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x00000000004056d0 : insb byte ptr [rdi], dx ; ret
0x000000000040b505 : int 0x80
0x000000000040e8bc : int 0xfd
0x0000000000401fd3 : ja 0x401fda ; pop rbp ; ret
0x0000000000401fdf : je 0x401fdd ; pop rbp ; mov edi, 0x615518 ; jmp rax
0x00000000004037c6 : jge 0x4037c7 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000405997 : jge 0x405991 ; call 0x401c44
0x0000000000405b92 : jge 0x405b31 ; mov rdx, rax ; mov al, 0 ; call 0x401e49
0x0000000000405c34 : jge 0x405bcf ; mov rdx, rax ; mov al, 0 ; call 0x401e49
0x0000000000401a9b : jmp 0x4019f7
0x0000000000405685 : jmp 0x405691
0x000000000040b9d8 : jmp 0xffffffffc2ca01e2
0x00000000004133af : jmp qword ptr [rax]
0x0000000000403c10 : jmp qword ptr [rcx]
0x0000000000413d6b : jmp qword ptr [rdx]
0x0000000000401fe7 : jmp rax
0x0000000000402598 : jmp rcx
0x0000000000402027 : jmp rdx
0x0000000000413ccb : jmp rsi
0x0000000000402010 : jne 0x402017 ; pop rbp ; ret
0x0000000000405c76 : jo 0x405cd7 ; ret
0x0000000000407e07 : jo 0x407e0f ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000408615 : jo 0x408676 ; ret
0x0000000000409c3f : jo 0x409ca5 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040a2e4 : jo 0x40a345 ; ret
0x000000000040a41e : jo 0x40a47f ; ret
0x000000000040dbaa : lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x000000000041492c : lodsb al, byte ptr [rsi] ; adc byte ptr [rax], al ; add al, dh ; ret 0xffff
0x000000000040cbdc : loope 0x40cc01 ; ret 0x8941
0x0000000000412fe0 : loope 0x412fad ; add byte ptr [rax], al ; add byte ptr [rax], al ; add cl, ah ; ret 0x40
0x0000000000412fe8 : loope 0x412fb5 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add cl, ah ; ret 0x40
0x0000000000413000 : loope 0x412fcd ; add byte ptr [rax], al ; add byte ptr [rax], al ; add cl, ah ; ret 0x40
0x0000000000413008 : loope 0x412fd5 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add cl, ah ; ret 0x40
0x0000000000413048 : loope 0x413015 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add cl, ah ; ret 0x40
0x0000000000413050 : loope 0x41301d ; add byte ptr [rax], al ; add byte ptr [rax], al ; add cl, ah ; ret 0x40
0x0000000000413078 : loope 0x413045 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add cl, ah ; ret 0x40
0x00000000004073df : loopne 0x40742f ; add esp, 0x30 ; pop rbp ; ret
0x00000000004073de : loopne 0x407430 ; add esp, 0x30 ; pop rbp ; ret
0x000000000040ae6e : loopne 0x40ae2a ; ret
0x000000000040bcd0 : loopne 0x40bd20 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040bccf : loopne 0x40bd21 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040c3f7 : loopne 0x40c3fe ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040cbd8 : loopne 0x40cbf4 ; in eax, -0x4a ; loope 0x40cc05 ; ret 0x8941
0x000000000041007e : loopne 0x410095 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000410b40 : loopne 0x410b48 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040822c : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000405b97 : mov al, 0 ; call 0x401e44
0x000000000040a1bb : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040a048 : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x000000000040725e : mov al, 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000405cab : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000403c54 : mov al, byte ptr [rbp - 9] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000414591 : mov bh, bh ; jmp rax
0x00000000004147f1 : mov bl, -1 ; jmp qword ptr [rcx]
0x0000000000406de1 : mov byte ptr [0x6157b0], al ; pop rbp ; ret
0x000000000040e177 : mov byte ptr [rax + 0x14], 1 ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040fb8b : mov byte ptr [rax + 0xc], 1 ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004037d7 : mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000402043 : mov byte ptr [rip + 0x21352e], 1 ; ret
0x0000000000406618 : mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040f5c4 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000403c5a : mov dh, -0x40 ; pop rbp ; ret
0x0000000000406dbd : mov dword ptr [0x6157a8], edi ; pop rbp ; ret
0x00000000004113b6 : mov dword ptr [rax + 0x14], ecx ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004084c6 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000408488 : mov dword ptr [rax], eax ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000408344 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000408487 : mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000403b9f : mov dword ptr [rbp - 0x18], eax ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000402329 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004021e7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402215 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041105d : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004037c5 : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040853e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040fbbc : mov dword ptr [rdi + 0x10], eax ; pop rbp ; ret
0x000000000040e1be : mov dword ptr [rsi], edi ; pop rbp ; ret
0x00000000004082f8 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040b7eb : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407033 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004082f5 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000406f8f : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040c51a : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040bae3 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004082ad : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040833e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000403ba3 : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040bcce : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004073dd : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040848a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040bc1b : mov eax, dword ptr [rbp - 0x2c] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040860f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040a1b9 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004112f0 : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040cec4 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040addc : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004072f6 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040d369 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040c45d : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040b8cd : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040a67f : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004077e9 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041064f : mov eax, dword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000411528 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004037c9 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040d0bd : mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403cb9 : mov eax, esi ; pop rbp ; ret
0x000000000040206b : mov ebp, esp ; call rax
0x0000000000401fd1 : mov ebp, esp ; ja 0x401fdc ; pop rbp ; ret
0x000000000040b51d : mov ecx, 0x5b2a830a ; ret
0x00000000004025dd : mov ecx, dword ptr [rax*8 + 0x411610] ; jmp rcx
0x0000000000402591 : mov ecx, dword ptr [rax*8 + 0x411630] ; jmp rcx
0x0000000000403657 : mov ecx, dword ptr [rax*8 + 0x4116a0] ; jmp rcx
0x00000000004086d2 : mov ecx, dword ptr [rax*8 + 0x412760] ; jmp rcx
0x00000000004089f6 : mov ecx, dword ptr [rax*8 + 0x4127a8] ; jmp rcx
0x000000000040aede : mov ecx, dword ptr [rax*8 + 0x412c60] ; jmp rcx
0x000000000040c18e : mov ecx, dword ptr [rax*8 + 0x412fd0] ; jmp rcx
0x000000000040c10e : mov ecx, dword ptr [rax*8 + 0x413030] ; jmp rcx
0x000000000040ca3a : mov ecx, dword ptr [rax*8 + 0x413118] ; jmp rcx
0x000000000040c9ba : mov ecx, dword ptr [rax*8 + 0x413178] ; jmp rcx
0x0000000000408341 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000402065 : mov edi, 0x614e20 ; mov rbp, rsp ; call rax
0x0000000000401fe2 : mov edi, 0x615518 ; jmp rax
0x0000000000402022 : mov edi, 0x615518 ; jmp rdx
0x0000000000405996 : mov edi, dword ptr [rbp - 0xc] ; call 0x401c45
0x000000000040e1b8 : mov edi, dword ptr [rsi] ; add rdi, rax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x0000000000411587 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000411586 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000405b95 : mov edx, eax ; mov al, 0 ; call 0x401e46
0x000000000040e271 : mov esi, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402020 : mov esi, eax ; mov edi, 0x615518 ; jmp rdx
0x000000000040f5c7 : mov esp, ebp ; pop rbp ; ret
0x0000000000406dbc : mov qword ptr [0x6157a8], rdi ; pop rbp ; ret
0x0000000000403b9e : mov qword ptr [rbp - 0x18], rax ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004037c4 : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040853d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040fbbb : mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x000000000040e1bd : mov qword ptr [rsi], rdi ; pop rbp ; ret
0x000000000040a1ba : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040b7ea : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407032 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004082f4 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000406f8e : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040bae2 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004082ac : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403ba2 : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040bccd : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004073dc : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040860e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040a1b8 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040b8cc : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040a67e : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004077e8 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041064e : mov rax, qword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000411527 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004037c8 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000403cb8 : mov rax, rsi ; pop rbp ; ret
0x000000000040206a : mov rbp, rsp ; call rax
0x0000000000401fd0 : mov rbp, rsp ; ja 0x401fdd ; pop rbp ; ret
0x00000000004025dc : mov rcx, qword ptr [rax*8 + 0x411610] ; jmp rcx
0x0000000000402590 : mov rcx, qword ptr [rax*8 + 0x411630] ; jmp rcx
0x0000000000403656 : mov rcx, qword ptr [rax*8 + 0x4116a0] ; jmp rcx
0x00000000004086d1 : mov rcx, qword ptr [rax*8 + 0x412760] ; jmp rcx
0x00000000004089f5 : mov rcx, qword ptr [rax*8 + 0x4127a8] ; jmp rcx
0x000000000040aedd : mov rcx, qword ptr [rax*8 + 0x412c60] ; jmp rcx
0x000000000040c18d : mov rcx, qword ptr [rax*8 + 0x412fd0] ; jmp rcx
0x000000000040c10d : mov rcx, qword ptr [rax*8 + 0x413030] ; jmp rcx
0x000000000040ca39 : mov rcx, qword ptr [rax*8 + 0x413118] ; jmp rcx
0x000000000040c9b9 : mov rcx, qword ptr [rax*8 + 0x413178] ; jmp rcx
0x0000000000405b94 : mov rdx, rax ; mov al, 0 ; call 0x401e47
0x000000000040201f : mov rsi, rax ; mov edi, 0x615518 ; jmp rdx
0x000000000040f5c6 : mov rsp, rbp ; pop rbp ; ret
0x0000000000405bca : mov word ptr [rcx - 0xf], es ; jmp qword ptr [rcx]
0x0000000000414a0c : mov word ptr [rcx], ss ; add byte ptr [rax], al ; rol bl, -1 ; jmp rdx
0x0000000000405bec : movabs al, byte ptr [0x31ca890000ff0035] ; ret 0xca21
0x000000000040c4f0 : movabs dword ptr [0x941c90941f0213f], eax ; ret 0x3145
0x0000000000414191 : movsxd rdi, edi ; jmp qword ptr [rdx]
0x0000000000406617 : movzx eax, al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040f5c3 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000403c59 : movzx eax, al ; pop rbp ; ret
0x00000000004037da : movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000403c55 : mul dword ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x0000000000403c56 : mul dword ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000041345c : nop ; cmp edi, edi ; jmp rax
0x0000000000405c35 : nop ; mov rdx, rax ; mov al, 0 ; call 0x401e48
0x00000000004149b0 : nop ; ret
0x00000000004115a8 : nop dword ptr [rax + rax] ; ret
0x0000000000408d5d : or al, 0x18 ; ret 0x6451
0x000000000040fb8d : or al, 1 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000413469 : or dword ptr [rax], eax ; add al, ah ; cmp al, -1 ; jmp qword ptr [rax]
0x000000000041418d : or dword ptr [rax], eax ; add al, al ; movsxd rdi, edi ; jmp qword ptr [rdx]
0x000000000040cc7b : or dword ptr [rsp + rax + 0x21], esp ; ret 0xd709
0x000000000040a3a1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004133ed : or edi, edi ; jmp qword ptr [rax]
0x00000000004133dd : or edi, edi ; jmp rax
0x000000000041159c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000409c41 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041159e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000409c43 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004115a0 : pop r14 ; pop r15 ; ret
0x00000000004099f3 : pop r14 ; pop rbp ; ret
0x0000000000409c45 : pop r15 ; pop rbp ; ret
0x00000000004115a2 : pop r15 ; ret
0x0000000000413b68 : pop rax ; and edi, edi ; call qword ptr [rdx]
0x0000000000402042 : pop rbp ; mov byte ptr [rip + 0x21352e], 1 ; ret
0x0000000000401fe1 : pop rbp ; mov edi, 0x615518 ; jmp rax
0x000000000040201e : pop rbp ; mov rsi, rax ; mov edi, 0x615518 ; jmp rdx
0x000000000041159b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041159f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401fd5 : pop rbp ; ret
0x0000000000409c40 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040b39d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004099f2 : pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040cca5 : pop rbx ; pop rbp ; ret
0x000000000040b521 : pop rbx ; ret
0x0000000000409c46 : pop rdi ; pop rbp ; ret
0x00000000004115a3 : pop rdi ; ret
0x0000000000409c44 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004115a1 : pop rsi ; pop r15 ; ret
0x00000000004099f4 : pop rsi ; pop rbp ; ret
0x000000000041159d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000409c42 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004076ab : push 0x48006155 ; add esp, 0x30 ; pop rbp ; ret
0x0000000000403e8b : push rax ; pop rbp ; ret
0x0000000000403814 : push rbp ; call 0x202b966
0x000000000040eb83 : push rbp ; call 0x36cd5
0x0000000000403ec7 : push rbp ; call 0xa801b8
0x000000000040f753 : push rbp ; enter -0x76b8, 0xc ; ret 0x59e9
0x000000000040775a : push rbp ; fmul dword ptr [rax + 0x29] ; ret 0x148
0x0000000000402064 : push rbp ; mov edi, 0x614e20 ; mov rbp, rsp ; call rax
0x00000000004019e9 : ret
0x000000000040dde2 : ret 0
0x000000000040fc55 : ret 0x10
0x0000000000402cdd : ret 0x13f0
0x000000000040467b : ret 0x148
0x000000000040310f : ret 0x1489
0x000000000040e265 : ret 0x18
0x0000000000409dde : ret 0x1b2
0x0000000000401ea2 : ret 0x2133
0x0000000000401ca2 : ret 0x2134
0x0000000000401aa2 : ret 0x2135
0x00000000004071f5 : ret 0x26a8
0x00000000004040af : ret 0x2948
0x0000000000409169 : ret 0x294c
0x0000000000409185 : ret 0x294d
0x000000000040c4f9 : ret 0x3145
0x0000000000402c98 : ret 0x3321
0x0000000000404fab : ret 0x3948
0x0000000000412fe1 : ret 0x40
0x00000000004023ad : ret 0x411e
0x000000000040f03a : ret 0x4a3b
0x00000000004083c4 : ret 0x5589
0x000000000040f758 : ret 0x59e9
0x0000000000403f73 : ret 0x5d9a
0x000000000040919d : ret 0x5de8
0x0000000000408d5f : ret 0x6451
0x0000000000403eca : ret 0x67
0x000000000040c319 : ret 0x8141
0x000000000040b9dc : ret 0x8148
0x0000000000405f89 : ret 0x81e8
0x0000000000407a66 : ret 0x840
0x000000000040fe06 : ret 0x84e8
0x0000000000409403 : ret 0x8840
0x000000000040ae99 : ret 0x8844
0x000000000040cbde : ret 0x8941
0x000000000040330e : ret 0x8948
0x0000000000409188 : ret 0x8949
0x000000000040931c : ret 0x89a5
0x0000000000402654 : ret 0x8b48
0x000000000040ac9f : ret 0x8be8
0x000000000040611d : ret 0x8c32
0x000000000040a99c : ret 0x8ee8
0x0000000000403559 : ret 0x8f66
0x00000000004102f9 : ret 0x91e8
0x0000000000410a4f : ret 0x941
0x0000000000402e41 : ret 0x9588
0x00000000004040e9 : ret 0xa1e8
0x00000000004050e1 : ret 0xa9e8
0x0000000000405ac1 : ret 0xb0
0x000000000040fa46 : ret 0xb4e8
0x0000000000403fd9 : ret 0xb848
0x000000000040dde9 : ret 0xb849
0x000000000040e000 : ret 0xc
0x000000000040c359 : ret 0xc131
0x0000000000402005 : ret 0xc148
0x0000000000403253 : ret 0xc189
0x00000000004078fc : ret 0xc2f6
0x0000000000405b1a : ret 0xca21
0x0000000000403147 : ret 0xca29
0x000000000040d496 : ret 0xd101
0x000000000040a673 : ret 0xd284
0x000000000040c3d5 : ret 0xd709
0x0000000000403e50 : ret 0xe180
0x00000000004033f2 : ret 0xe8e8
0x00000000004051a0 : ret 0xeae8
0x0000000000409a2c : ret 0xee8
0x0000000000407a6d : ret 0xf01
0x0000000000409418 : ret 0xf180
0x00000000004078ef : ret 0xf280
0x0000000000405bb8 : ret 0xf281
0x000000000040387a : ret 0xffe5
0x000000000040599b : ret 0xffff
0x0000000000403818 : ret 1
0x000000000040dbb0 : ret 2
0x00000000004071ef : ret 8
0x0000000000414a10 : rol bl, -1 ; jmp rdx
0x0000000000408486 : rol byte ptr [rcx + rcx*4], 1 ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000413418 : rol byte ptr [rdi], 0 ; add byte ptr [rax], ah ; sub edi, edi ; jmp rax
0x0000000000413398 : rol byte ptr [rip - 0x11100000], -2 ; jmp rax
0x00000000004133d8 : rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; or edi, edi ; jmp rax
0x0000000000412fd9 : rol dword ptr [rax], 0 ; add byte ptr [rax], al ; add cl, ah ; ret 0x40
0x000000000040f74f : ror byte ptr [r8 - 0x75], 0x55 ; enter -0x76b8, 0xc ; ret 0x59e9
0x000000000040b500 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000040573f : ror byte ptr [r8 - 0x77], 1 ; ret 0x2948
0x0000000000408610 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x40867b ; ret
0x000000000040200c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40201b ; pop rbp ; ret
0x000000000040f750 : ror byte ptr [rax - 0x75], 0x55 ; enter -0x76b8, 0xc ; ret 0x59e9
0x000000000040f5c5 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x000000000040b501 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000405740 : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000409166 : ror byte ptr [rax - 0x77], 1 ; ret 0x294c
0x0000000000408611 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x40867a ; ret
0x0000000000406619 : ror byte ptr [rax - 0x7d], -0x3c ; pop rbp ; ret
0x0000000000407e03 : ror byte ptr [rax - 0x7f], -0x3c ; jo 0x407e13 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004106bf : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x000000000040200e : sar eax, 1 ; jne 0x402019 ; pop rbp ; ret
0x000000000040200d : sar rax, 1 ; jne 0x40201a ; pop rbp ; ret
0x0000000000412ff8 : sbb al, -0x3e ; add byte ptr [rax], al ; add byte ptr [rax], al ; add cl, ah ; ret 0x40
0x0000000000414928 : sbb al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; adc byte ptr [rax], al ; add al, dh ; ret 0xffff
0x00000000004149a8 : sbb al, 0 ; add byte ptr [rax], al ; sub al, 0x11 ; add byte ptr [rax], al ; nop ; ret
0x0000000000403fe3 : sbb byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000411418 : setne al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041141a : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000405cad : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004149ac : sub al, 0x11 ; add byte ptr [rax], al ; nop ; ret
0x000000000041342c : sub byte ptr [rdi], -1 ; jmp qword ptr [rax]
0x000000000040b51f : sub dword ptr [rdx], 0x5b ; ret
0x00000000004056cb : sub eax, 0xe8000000 ; insb byte ptr [rdi], dx ; ret
0x00000000004019e1 : sub eax, dword ptr [rbx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000041341d : sub edi, edi ; jmp rax
0x00000000004115f1 : sub esp, 8 ; add rsp, 8 ; ret
0x00000000004115f0 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040733d : sysenter
0x000000000040cc7a : test al, 9 ; add al, 0x21 ; ret 0xd709
0x00000000004115aa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004056ca : test byte ptr [rip - 0x18000000], ch ; insb byte ptr [rdi], dx ; ret
0x0000000000403659 : vmovhps xmm0, xmm11, qword ptr [rcx] ; jmp rcx
0x00000000004025df : vmovhps xmm8, xmm13, qword ptr [rcx] ; jmp rcx
0x0000000000402593 : vmovhps xmm8, xmm9, qword ptr [rcx] ; jmp rcx
0x0000000000409402 : xchg eax, ebp ; ret 0x8840
0x0000000000402e40 : xchg eax, ebp ; ret 0x9588
0x00000000004112e6 : xchg eax, ebp ; ret 0xd284
0x0000000000411419 : xchg eax, ebp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000405bc9 : xchg eax, edx ; mov word ptr [rcx - 0xf], es ; jmp qword ptr [rcx]
0x0000000000405b93 : xchg eax, esp ; mov rdx, rax ; mov al, 0 ; call 0x401e48
0x000000000040a672 : xchg eax, esp ; ret 0xd284
0x00000000004023ab : xor al, 0x25 ; ret 0x411e
0x0000000000405992 : xor al, byte ptr [rax] ; add byte ptr [rax], al ; mov edi, dword ptr [rbp - 0xc] ; call 0x401c49
0x000000000040dede : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040c112 : xor byte ptr [rcx], al ; jmp rcx
0x000000000040c9be : xor dword ptr [rcx], eax ; jmp rcx
0x0000000000413018 : xor eax, 0x40c2 ; add byte ptr [rax], al ; add cl, ah ; ret 0x40
0x000000000040a137 : xor eax, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x0000000000402046 : xor eax, 0xf3010021 ; ret
0x0000000000408485 : xor eax, edx ; mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000413be9 : xor edi, edi ; call qword ptr [rsi]
