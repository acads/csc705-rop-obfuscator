0x0000000000406878 : adc al, -0x7f ; ret 0x8924
0x000000000040da8e : adc al, 0x2d ; add byte ptr fs:[rax], al ; add byte ptr [rcx], ch ; ret 0x5189
0x00000000004165c4 : adc al, 7 ; add byte ptr [rax], al ; fdivr dword ptr [rdx - 1] ; call rdi
0x000000000040e155 : adc byte ptr [rcx + 0x41], 0 ; jmp rcx
0x00000000004035a7 : adc eax, 0x48000000 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040f7d9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000415a8f : add ah, ah ; sar esi, cl ; jmp rsp
0x0000000000415acf : add ah, dh ; fdivr st(6) ; jmp rsp
0x0000000000403312 : add al, 0x25 ; push 0x5d006183 ; ret
0x00000000004165c7 : add al, bl ; jp 0x4165ce ; call rdi
0x00000000004160d5 : add al, byte ptr [rax] ; add byte ptr [rax], cl ; sar dh, cl ; call qword ptr [rsi]
0x0000000000401c57 : add al, ch ; ret
0x000000000041231f : add bl, dh ; ret
0x000000000040c626 : add byte ptr [r8], r8b ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000402dfa : add byte ptr [r8], r8b ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408559 : add byte ptr [rax + 0x29], cl ; enter -0x46b8, 0x6a ; jmp rsp
0x0000000000407e4f : add byte ptr [rax + 0x29], cl ; ret 0x8948
0x0000000000407991 : add byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000415b87 : add byte ptr [rax + rsi*2 - 1], ah ; call rsp
0x000000000040c539 : add byte ptr [rax - 0x41], cl ; push rdx ; xor eax, 0xba06cf71 ; ret
0x0000000000407d9c : add byte ptr [rax - 0x46], cl ; and byte ptr [rbp + 0x26], 0x80 ; ret 0xd1f4
0x00000000004079fc : add byte ptr [rax - 0x47], cl ; pushfq ; ret 0xe4a3
0x0000000000402d01 : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x000000000040735d : add byte ptr [rax - 0x75], cl ; call 0x4902fcb5
0x000000000040c65e : add byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x00000000004109cd : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000041021d : add byte ptr [rax - 0x77], cl ; jge 0x410220 ; pop rbp ; ret
0x0000000000407897 : add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000402360 : add byte ptr [rax - 0x77], cl ; ret 0x37e8
0x000000000040252c : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x00000000004165c2 : add byte ptr [rax], al ; adc al, 7 ; add byte ptr [rax], al ; fdivr dword ptr [rdx - 1] ; call rdi
0x0000000000401c55 : add byte ptr [rax], al ; add al, ch ; ret
0x000000000041231d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000408557 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; enter -0x46b8, 0x6a ; jmp rsp
0x0000000000407e4d : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000040798f : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000407d9a : add byte ptr [rax], al ; add byte ptr [rax - 0x46], cl ; and byte ptr [rbp + 0x26], 0x80 ; ret 0xd1f4
0x00000000004079fa : add byte ptr [rax], al ; add byte ptr [rax - 0x47], cl ; pushfq ; ret 0xe4a3
0x0000000000402cff : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x000000000040735b : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; call 0x4902fcb7
0x000000000040c65c : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x000000000041021b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jge 0x410222 ; pop rbp ; ret
0x0000000000407895 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x000000000040252a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000041231b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000400710 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000400920 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x0000000000400712 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000400922 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x000000000041021a : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x00000000004076a7 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040c65b : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040ab87 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041231c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400714 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000413c7c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x405a
0x0000000000400924 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x0000000000406ee1 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7628d639], cl ; ret 0xf229
0x000000000040a94c : add byte ptr [rax], al ; add byte ptr [rcx], al ; pop rbp ; ret
0x000000000040d9b3 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x5589
0x0000000000404623 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x858b
0x0000000000403a5a : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xfa81
0x000000000040da91 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x5189
0x000000000040c627 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000040ee7e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000402556 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040c499 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000040cb83 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x000000000040c746 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040ae45 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000040cb56 : add byte ptr [rax], al ; add byte ptr [rdx + 0x4d88c44d], cl ; ret
0x000000000040ab83 : add byte ptr [rax], al ; add cl, ch ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004078cb : add byte ptr [rax], al ; add cl, ch ; jmp qword ptr [rdx]
0x00000000004092f1 : add byte ptr [rax], al ; add cl, ch ; ret
0x000000000040505b : add byte ptr [rax], al ; add cl, ch ; ret 0x22
0x0000000000411f6c : add byte ptr [rax], al ; add cl, ch ; ret 2
0x0000000000402dfb : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004035a9 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401693 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000415ff6 : add byte ptr [rax], al ; call 0x24415ecf
0x00000000004165c6 : add byte ptr [rax], al ; fdivr dword ptr [rdx - 1] ; call rdi
0x0000000000415ace : add byte ptr [rax], al ; hlt ; fdivr st(6) ; jmp rsp
0x0000000000416422 : add byte ptr [rax], al ; je 0x416434 ; add byte ptr [rax], al ; sbb byte ptr [rbx - 1], ch ; call qword ptr [rax]
0x00000000004017e9 : add byte ptr [rax], al ; jmp 0x4016a9
0x0000000000415b86 : add byte ptr [rax], al ; jo 0x415b8f ; call rsp
0x000000000041021c : add byte ptr [rax], al ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000040dd72 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004076a9 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040c65d : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000415b0e : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; sbb bh, bh ; jmp rsp
0x0000000000409d7b : add byte ptr [rax], al ; pop rbp ; ret
0x000000000041086b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040f470 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040732e : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000041231e : add byte ptr [rax], al ; ret
0x0000000000400716 : add byte ptr [rax], al ; ret 0
0x0000000000413c7e : add byte ptr [rax], al ; ret 0x405a
0x0000000000400926 : add byte ptr [rax], al ; ret 2
0x0000000000416426 : add byte ptr [rax], al ; sbb byte ptr [rbx - 1], ch ; call qword ptr [rax]
0x00000000004160d7 : add byte ptr [rax], cl ; sar dh, cl ; call qword ptr [rsi]
0x000000000041086c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040f471 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040732f : add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004029ca : add byte ptr [rbx - 0x1934b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000415b4f : add byte ptr [rcx + rdx*2 - 1], ah ; jmp rsp
0x0000000000406ee3 : add byte ptr [rcx - 0x7628d639], cl ; ret 0xf229
0x000000000041180c : add byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x000000000040a94e : add byte ptr [rcx], al ; pop rbp ; ret
0x0000000000401c08 : add byte ptr [rcx], al ; ret
0x000000000040d9b5 : add byte ptr [rcx], al ; ret 0x5589
0x0000000000404625 : add byte ptr [rcx], al ; ret 0x858b
0x0000000000403a5c : add byte ptr [rcx], al ; ret 0xfa81
0x000000000040da93 : add byte ptr [rcx], ch ; ret 0x5189
0x00000000004165c3 : add byte ptr [rdi + rax], dl ; add byte ptr [rax], al ; fdivr dword ptr [rdx - 1] ; call rdi
0x0000000000411f68 : add byte ptr [rdi], cl ; lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x000000000040c629 : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000401c51 : add byte ptr [rdi], cl ; test byte ptr [rdx], cl ; add byte ptr [rax], al ; add al, ch ; ret
0x00000000004078c7 : add byte ptr [rdi], cl ; test dword ptr [rip - 0x17000000], eax ; jmp qword ptr [rdx]
0x000000000040ee80 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000402558 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040c49b : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000040cb85 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x000000000040c748 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040ae47 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000040cb58 : add byte ptr [rdx + 0x4d88c44d], cl ; ret
0x000000000040cb82 : add byte ptr cs:[rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x0000000000402cfe : add byte ptr ds:[rax], al ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x0000000000406ee0 : add byte ptr fs:[rax], al ; add byte ptr [rcx - 0x7628d639], cl ; ret 0xf229
0x000000000040da90 : add byte ptr fs:[rax], al ; add byte ptr [rcx], ch ; ret 0x5189
0x000000000040ab85 : add cl, ch ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004078cd : add cl, ch ; jmp qword ptr [rdx]
0x00000000004092f3 : add cl, ch ; ret
0x000000000040505d : add cl, ch ; ret 0x22
0x0000000000411f6e : add cl, ch ; ret 2
0x0000000000409cd6 : add dword ptr [rax + 1], ecx ; ret 0x8948
0x0000000000410ea9 : add dword ptr [rax - 0x77], ecx ; ret 0x8148
0x000000000040f79f : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041086a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040f46f : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x00000000004116cd : add dword ptr [rax], ecx ; ret 0x840
0x0000000000404c11 : add dword ptr [rbp + 0x20], eax ; rol byte ptr [rcx - 0x78], 1 ; ret
0x0000000000404c0a : add dword ptr [rcx - 0x78], eax ; ret 0x8041
0x0000000000402cbc : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000402dd2 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004113aa : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401c04 : add eax, 0x21674e ; add ebx, esi ; ret
0x0000000000403407 : add eax, 0x48ffffe3 ; add esp, 0x10 ; pop rbp ; ret
0x0000000000406d32 : add eax, 0x6348ca01 ; ret 0x6948
0x00000000004078ca : add eax, 0xe9000000 ; jmp qword ptr [rdx]
0x0000000000411f6b : add eax, 0xe9000000 ; ret 2
0x000000000040cb7f : add eax, dword ptr [rcx + 0x2ef9] ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x0000000000401bcb : add eax, edx ; sar rax, 1 ; jne 0x401bdc ; pop rbp ; ret
0x0000000000401c09 : add ebx, esi ; ret
0x00000000004074bc : add ecx, 0x378ee1f9 ; mov eax, ecx ; pop rbp ; ret
0x0000000000401f5b : add esp, 0x10 ; pop rbp ; ret
0x000000000041229c : add esp, 0x130 ; pop rbp ; ret
0x0000000000410b9c : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000403567 : add esp, 0x20 ; pop rbp ; ret
0x000000000040206d : add esp, 0x30 ; pop rbp ; ret
0x000000000040301f : add esp, 0x40 ; pop rbp ; ret
0x0000000000402f7a : add esp, 0x50 ; pop rbp ; ret
0x0000000000402cc1 : add esp, 0x60 ; pop rbp ; ret
0x0000000000402dd7 : add esp, 0x70 ; pop rbp ; ret
0x000000000040faca : add esp, 0x90 ; pop rbp ; ret
0x000000000040a5db : add esp, 0xa0 ; pop rbp ; ret
0x000000000040732a : add esp, 0xa48 ; pop rbx ; pop rbp ; ret
0x0000000000409d77 : add esp, 0xc20 ; pop rbp ; ret
0x000000000040d4b7 : add esp, 0xf0 ; pop rbp ; ret
0x0000000000401696 : add esp, 8 ; ret
0x0000000000401bca : add rax, rdx ; sar rax, 1 ; jne 0x401bdd ; pop rbp ; ret
0x0000000000401f5a : add rsp, 0x10 ; pop rbp ; ret
0x000000000041229b : add rsp, 0x130 ; pop rbp ; ret
0x0000000000410b9b : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000403566 : add rsp, 0x20 ; pop rbp ; ret
0x000000000040206c : add rsp, 0x30 ; pop rbp ; ret
0x000000000040301e : add rsp, 0x40 ; pop rbp ; ret
0x0000000000402f79 : add rsp, 0x50 ; pop rbp ; ret
0x0000000000402cc0 : add rsp, 0x60 ; pop rbp ; ret
0x0000000000402dd6 : add rsp, 0x70 ; pop rbp ; ret
0x000000000040fac9 : add rsp, 0x90 ; pop rbp ; ret
0x000000000040a5da : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000407329 : add rsp, 0xa48 ; pop rbx ; pop rbp ; ret
0x0000000000409d76 : add rsp, 0xc20 ; pop rbp ; ret
0x000000000040d4b6 : add rsp, 0xf0 ; pop rbp ; ret
0x0000000000401695 : add rsp, 8 ; ret
0x00000000004113a9 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000407d9f : and byte ptr [rbp + 0x26], 0x80 ; ret 0xd1f4
0x000000000040ca80 : and byte ptr [rbx + 0x41], bl ; pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000401c06 : and dword ptr [eax], eax ; add ebx, esi ; ret
0x0000000000401c07 : and dword ptr [rax], eax ; add ebx, esi ; ret
0x000000000040dcac : and dword ptr [rcx], 0x48 ; add esp, 0x30 ; pop rbp ; ret
0x00000000004032f1 : and dword ptr [rcx], 0x5d ; ret
0x00000000004032ef : and eax, 0x618360 ; pop rbp ; ret
0x0000000000403313 : and eax, 0x618368 ; pop rbp ; ret
0x000000000040dcab : and qword ptr [rcx], 0x48 ; add esp, 0x30 ; pop rbp ; ret
0x0000000000406d25 : call 0x202f64d
0x0000000000406d69 : call 0x202f691
0x0000000000406db2 : call 0x202f6da
0x0000000000415ff8 : call 0x24415ecd
0x00000000004055eb : call 0x4018b2
0x00000000004058e4 : call 0x401b12
0x00000000004066fb : call 0x4102a0de
0x0000000000407361 : call 0x4902fcb1
0x0000000000407360 : call 0x4902fcb2
0x000000000040dadb : call 0xffffffff89454c74
0x000000000040f4a9 : call 0xffffffffe9037df9
0x000000000040f4a8 : call 0xffffffffe9037dfa
0x0000000000401ba3 : call 0xffffffffff407d2e
0x0000000000401be3 : call 0xffffffffff407d6e
0x0000000000406dfa : call 0xffffffffff40af40
0x00000000004122f9 : call qword ptr [r12 + rbx*8]
0x0000000000406ed5 : call qword ptr [rax]
0x0000000000414cff : call qword ptr [rbx]
0x0000000000416953 : call qword ptr [rdx]
0x00000000004160db : call qword ptr [rsi]
0x00000000004122fa : call qword ptr [rsp + rbx*8]
0x0000000000401c2d : call rax
0x000000000040f1fc : call rbx
0x00000000004165cb : call rdi
0x0000000000414bff : call rdx
0x0000000000414c0f : call rsi
0x0000000000415b8b : call rsp
0x000000000040c625 : clc ; add byte ptr [r8], r8b ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000041229a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x000000000040d084 : clc ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004032d6 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403224 : clc ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000402f78 : clc ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004071cd : clc ; idiv edi ; dec dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000401bcf : clc ; jne 0x401bd8 ; pop rbp ; ret
0x000000000040a948 : clc ; mov byte ptr [rax + 0xa9], 1 ; pop rbp ; ret
0x000000000040cf46 : clc ; mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x000000000040df45 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000041188f : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040ab9c : clc ; mov qword ptr [rbp - 0x10], rsi ; pop rbp ; ret
0x000000000040a633 : clc ; mov qword ptr [rdx + 0x68], rcx ; pop rbp ; ret
0x0000000000402a77 : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004101bb : clc ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x00000000004101fb : clc ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x00000000004101db : clc ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000402a7b : clc ; pop rbp ; ret
0x0000000000401f87 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000411169 : cld ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004101a1 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040db5b : cld ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040d9cd : cld ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040a5d9 : cld ; add rsp, 0xa0 ; pop rbp ; ret
0x000000000041188c : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004111c3 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000411166 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041019e : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040c7de : cld ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040c7e1 : cld ; pop rbp ; ret
0x0000000000406d31 : cli ; add eax, 0x6348ca01 ; ret 0x6948
0x0000000000402d04 : cmp al, 0x25 ; ret
0x000000000040c069 : cmp bl, -1 ; dec dword ptr [rbp + 0x31] ; ret 0xb849
0x0000000000401b8d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401ba0 ; pop rbp ; ret
0x0000000000403bb4 : cmp eax, dword ptr [rcx] ; jmp rcx
0x00000000004066fa : cmp ebp, eax ; fstp xword ptr [rcx] ; ret 0xf40
0x00000000004103ac : cwde ; mov rcx, qword ptr [rax*8 + 0x415688] ; jmp rcx
0x000000000040c526 : dec dword ptr [rax - 0x41] ; push rdx ; xor eax, 0xba06cf71 ; ret
0x000000000040517d : dec dword ptr [rax - 0x46] ; jbe 0x4051c5 ; ret
0x000000000040c16c : dec dword ptr [rax - 0x48] ; pop rbx ; ret
0x00000000004055e6 : dec dword ptr [rax - 0x75] ; jne 0x405592 ; call 0x4018b7
0x000000000040e150 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; adc byte ptr [rcx + 0x41], 0 ; jmp rcx
0x0000000000406df5 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; call 0xffffffffff40af45
0x000000000040e474 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; enter 0x4151, 0 ; jmp rcx
0x0000000000408748 : dec dword ptr [rax - 0x75] ; ror byte ptr [r8 - 0x77], 1 ; ret 0x2948
0x000000000040389f : dec dword ptr [rax - 0x77] ; ret 0x2948
0x00000000004029d0 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040c06c : dec dword ptr [rbp + 0x31] ; ret 0xb849
0x000000000040c11f : dec dword ptr [rcx - 0x47] ; pop rbx ; ret
0x000000000040ec02 : dec dword ptr [rcx - 0x77] ; ret 0x294d
0x0000000000405a22 : dec dword ptr [rdi] ; pushfq ; ret 0xe280
0x000000000040518d : enter -0x46b8, 0x40 ; jbe 0x4051d5 ; ret
0x000000000040855c : enter -0x46b8, 0x6a ; jmp rsp
0x000000000040e479 : enter 0x4151, 0 ; jmp rcx
0x000000000040ef90 : enter 0x4b05, 0x34 ; fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x00000000004165c8 : fdivr dword ptr [rdx - 1] ; call rdi
0x00000000004062d1 : fdivr qword ptr [rax - 0x7f] ; ret 7
0x00000000004066f9 : fdivr qword ptr [rbx] ; call 0x4102a0e0
0x0000000000415ad1 : fdivr st(6) ; jmp rsp
0x000000000040ef94 : fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x000000000040c1ed : fimul dword ptr [rax + 0x21] ; ret 0x3148
0x000000000040c39c : fimul dword ptr [rcx + 9] ; ret
0x00000000004122fc : fmul qword ptr [rax - 0x7d] ; ret
0x00000000004066fc : fstp xword ptr [rcx] ; ret 0xf40
0x0000000000401f59 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000415ad0 : hlt ; fdivr st(6) ; jmp rsp
0x0000000000401ba0 : hlt ; pop rbp ; mov edi, 0x6182e8 ; jmp rax
0x00000000004071ce : idiv edi ; dec dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000404616 : idiv edi ; ljmp ptr [rcx] ; ret 0x858b
0x000000000040752c : in al, 0x48 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040c497 : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x00000000004062cc : inc byte ptr [rcx - 0x23a0353e] ; js 0x40625d ; ret 7
0x00000000004098d3 : inc dword ptr [rbp + 0x29] ; ret
0x000000000040c9d0 : inc dword ptr [rbp - 0x77] ; ret 0x2145
0x000000000040f21b : inc dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x00000000004092ef : inc dword ptr [rcx] ; add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000415b4b : inc esp ; or byte ptr [rax], al ; add byte ptr [rcx + rdx*2 - 1], ah ; jmp rsp
0x00000000004109d5 : int 0x80
0x0000000000401b93 : ja 0x401b9a ; pop rbp ; ret
0x0000000000405181 : jbe 0x4051c1 ; ret
0x0000000000405180 : jbe 0x4051c2 ; ret
0x0000000000405191 : jbe 0x4051d1 ; ret
0x0000000000405190 : jbe 0x4051d2 ; ret
0x0000000000401b9f : je 0x401b9d ; pop rbp ; mov edi, 0x6182e8 ; jmp rax
0x0000000000416424 : je 0x416432 ; add byte ptr [rax], al ; sbb byte ptr [rbx - 1], ch ; call qword ptr [rax]
0x0000000000402a76 : jge 0x402a77 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040ab9b : jge 0x40ab9c ; mov qword ptr [rbp - 0x10], rsi ; pop rbp ; ret
0x000000000040c624 : jge 0x40c626 ; add byte ptr [r8], r8b ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004101ba : jge 0x4101bb ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x00000000004101da : jge 0x4101db ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x00000000004101fa : jge 0x4101fb ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000410220 : jge 0x41021d ; pop rbp ; ret
0x00000000004017eb : jmp 0x4016a7
0x0000000000408514 : jmp 0x4097c4
0x0000000000406279 : jmp 0x422501
0x0000000000410ea8 : jmp 0xffffffffc2ca56b2
0x00000000004167d3 : jmp qword ptr [rax]
0x0000000000415ffb : jmp qword ptr [rbx]
0x000000000040c23d : jmp qword ptr [rcx]
0x00000000004078cf : jmp qword ptr [rdx]
0x0000000000401ba7 : jmp rax
0x0000000000414c4f : jmp rbx
0x0000000000403bb7 : jmp rcx
0x0000000000414c5f : jmp rdi
0x0000000000401be7 : jmp rdx
0x000000000041498f : jmp rsi
0x000000000040851c : jmp rsp
0x0000000000401bd0 : jne 0x401bd7 ; pop rbp ; ret
0x00000000004055e9 : jne 0x40558f ; call 0x4018b4
0x000000000040ab9f : jne 0x40ab94 ; pop rbp ; ret
0x0000000000402dd9 : jo 0x402e3a ; ret
0x000000000040d9d1 : jo 0x40da32 ; ret
0x000000000040e095 : jo 0x40e0f6 ; ret
0x000000000040f6bf : jo 0x40f725 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040fd64 : jo 0x40fdc5 ; ret
0x000000000040fe9e : jo 0x40feff ; ret
0x00000000004101df : jo 0x410240 ; ret
0x00000000004101de : jo 0x410241 ; ret
0x0000000000415b89 : jo 0x415b8c ; call rsp
0x0000000000415b88 : jo 0x415b8d ; call rsp
0x00000000004165c9 : jp 0x4165cc ; call rdi
0x000000000040bc89 : jrcxz 0x40bc85 ; mov eax, 0x21415cfb ; ret 0x945
0x00000000004062d2 : js 0x406257 ; ret 7
0x0000000000411f6a : lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000404618 : ljmp ptr [rcx] ; ret 0x858b
0x0000000000415b84 : lodsb al, byte ptr [rsi] ; or dword ptr [rax], eax ; add byte ptr [rax + rsi*2 - 1], ah ; call rsp
0x0000000000402554 : loopne 0x40255d ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000402566 : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040318a : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040fac8 : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x00000000004113a6 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000416fe9 : mov bl, -1 ; call qword ptr [rax]
0x0000000000403311 : mov byte ptr [0x618368], al ; pop rbp ; ret
0x000000000040a949 : mov byte ptr [rax + 0xa9], 1 ; pop rbp ; ret
0x0000000000406d22 : mov byte ptr [rax - 0x3f], cl ; call 0x202f650
0x0000000000406d66 : mov byte ptr [rax - 0x3f], cl ; call 0x202f694
0x0000000000406daf : mov byte ptr [rax - 0x3f], cl ; call 0x202f6dd
0x000000000040cf47 : mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000401c03 : mov byte ptr [rip + 0x21674e], 1 ; ret
0x0000000000402cbe : mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000402dd4 : mov dh, -0x40 ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004113ac : mov dh, -0x40 ; pop rbp ; ret
0x00000000004074c0 : mov dr0, word ptr [rdi] ; mov eax, ecx ; pop rbp ; ret
0x00000000004032ed : mov dword ptr [0x618360], edi ; pop rbp ; ret
0x000000000040df46 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000406d1f : mov dword ptr [rax - 0x3eb77778], ecx ; call 0x202f653
0x0000000000406d63 : mov dword ptr [rax - 0x3eb77778], ecx ; call 0x202f697
0x0000000000406dac : mov dword ptr [rax - 0x3eb77778], ecx ; call 0x202f6e0
0x000000000040df08 : mov dword ptr [rax], eax ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040ddc4 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040df07 : mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040ab9e : mov dword ptr [rbp - 0x10], esi ; pop rbp ; ret
0x000000000040752a : mov dword ptr [rbp - 0x1c], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402069 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403188 : mov dword ptr [rbp - 0x50], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401f57 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401f85 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040c7dc : mov dword ptr [rbp - 4], ecx ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000041188d : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040ab9a : mov dword ptr [rbp - 8], edi ; mov qword ptr [rbp - 0x10], rsi ; pop rbp ; ret
0x0000000000402a75 : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000041021f : mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x000000000040dfbe : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040a635 : mov dword ptr [rdx + 0x68], ecx ; pop rbp ; ret
0x000000000040bc8b : mov eax, 0x21415cfb ; ret 0x945
0x000000000040dd78 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000410cbb : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403563 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040c598 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040dd75 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000410241 : mov eax, dword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004034bf : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000410fb3 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040dd2d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040a7ba : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040ddbe : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004076ac : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040df0a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040e08f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040fc39 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004111c4 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000411167 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041019f : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040db59 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040d9cb : mov eax, dword ptr [rbp - 4] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040c7df : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040d082 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004032d4 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403222 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000402f76 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000402a79 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004101bd : mov eax, dword ptr [rdi + 0x50] ; pop rbp ; ret
0x00000000004101fd : mov eax, dword ptr [rdi + 0x60] ; pop rbp ; ret
0x00000000004101dd : mov eax, dword ptr [rdi + 0x70] ; pop rbp ; ret
0x00000000004074c2 : mov eax, ecx ; pop rbp ; ret
0x0000000000401c2b : mov ebp, esp ; call rax
0x0000000000401b91 : mov ebp, esp ; ja 0x401b9c ; pop rbp ; ret
0x0000000000401691 : mov ebx, 0x48000002 ; add esp, 8 ; ret
0x00000000004054d1 : mov ecx, 0x509a0b1a ; xchg eax, edx ; ret
0x00000000004109ed : mov ecx, 0x5b2a830a ; ret
0x0000000000408595 : mov ecx, 0xf75f1e48 ; xchg eax, esp ; ret 0xacad
0x0000000000403bb0 : mov ecx, dword ptr [rax*8 + 0x413b38] ; jmp rcx
0x0000000000406df7 : mov ecx, dword ptr [rax*8 + 0x413de8] ; jmp rcx
0x0000000000407d5f : mov ecx, dword ptr [rax*8 + 0x413e30] ; jmp rcx
0x000000000040e152 : mov ecx, dword ptr [rax*8 + 0x415180] ; jmp rcx
0x000000000040e476 : mov ecx, dword ptr [rax*8 + 0x4151c8] ; jmp rcx
0x00000000004103ae : mov ecx, dword ptr [rax*8 + 0x415688] ; jmp rcx
0x000000000040ddc1 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004058e1 : mov ecx, dword ptr [rbp - 0x60] ; call 0x401b15
0x000000000040c7da : mov ecx, eax ; mov dword ptr [rbp - 4], ecx ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000401c25 : mov edi, 0x617e20 ; mov rbp, rsp ; call rax
0x0000000000401ba2 : mov edi, 0x6182e8 ; jmp rax
0x0000000000401be2 : mov edi, 0x6182e8 ; jmp rdx
0x00000000004101b9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x00000000004101f9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x00000000004101d9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x00000000004122f7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x00000000004122f6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x00000000004054c1 : mov edx, 0x509a0b1a ; xchg eax, edx ; ret
0x0000000000407d9e : mov edx, 0x80266580 ; ret 0xd1f4
0x00000000004085c7 : mov edx, 0xf75f1e48 ; xchg eax, esp ; ret 0xacad
0x000000000040a631 : mov edx, dword ptr [rbp - 8] ; mov qword ptr [rdx + 0x68], rcx ; pop rbp ; ret
0x0000000000410245 : mov edx, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040d965 : mov esi, 0x302d0151 ; add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xfa81
0x000000000040656a : mov esi, 0x81ca29e5 ; ret 0x270e
0x00000000004055e8 : mov esi, dword ptr [rbp - 0x60] ; call 0x4018b5
0x0000000000401be0 : mov esi, eax ; mov edi, 0x6182e8 ; jmp rdx
0x00000000004032ec : mov qword ptr [0x618360], rdi ; pop rbp ; ret
0x000000000040ab9d : mov qword ptr [rbp - 0x10], rsi ; pop rbp ; ret
0x000000000040ab99 : mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; pop rbp ; ret
0x0000000000402a74 : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000041021e : mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000040dfbd : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040a634 : mov qword ptr [rdx + 0x68], rcx ; pop rbp ; ret
0x0000000000403189 : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000410cba : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403562 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040c597 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040dd74 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000410240 : mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004034be : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000410fb2 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040dd2c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040a7b9 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004076ab : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040e08e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040fc38 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040d081 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004032d3 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403221 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000402f75 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000402a78 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004101bc : mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x00000000004101fc : mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x00000000004101dc : mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000401c2a : mov rbp, rsp ; call rax
0x0000000000401b90 : mov rbp, rsp ; ja 0x401b9d ; pop rbp ; ret
0x0000000000403baf : mov rcx, qword ptr [rax*8 + 0x413b38] ; jmp rcx
0x0000000000406df6 : mov rcx, qword ptr [rax*8 + 0x413de8] ; jmp rcx
0x0000000000407d5e : mov rcx, qword ptr [rax*8 + 0x413e30] ; jmp rcx
0x000000000040e151 : mov rcx, qword ptr [rax*8 + 0x415180] ; jmp rcx
0x000000000040e475 : mov rcx, qword ptr [rax*8 + 0x4151c8] ; jmp rcx
0x00000000004103ad : mov rcx, qword ptr [rax*8 + 0x415688] ; jmp rcx
0x00000000004058e0 : mov rcx, qword ptr [rbp - 0x60] ; call 0x401b16
0x00000000004101b8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x00000000004101f8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x00000000004101d8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000040a630 : mov rdx, qword ptr [rbp - 8] ; mov qword ptr [rdx + 0x68], rcx ; pop rbp ; ret
0x0000000000410244 : mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004055e7 : mov rsi, qword ptr [rbp - 0x60] ; call 0x4018b6
0x0000000000401bdf : mov rsi, rax ; mov edi, 0x6182e8 ; jmp rdx
0x000000000040b491 : movabs al, byte ptr [0x89c801480122ddd7] ; ret 0x9589
0x0000000000405aac : movabs byte ptr [0x8100000001c281c5], al ; ret 0x2075
0x0000000000415b10 : movsb byte ptr [rdi], byte ptr [rsi] ; sbb bh, bh ; jmp rsp
0x0000000000402cbd : movzx eax, al ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000402dd3 : movzx eax, al ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004113ab : movzx eax, al ; pop rbp ; ret
0x000000000040cf4a : movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000412318 : nop dword ptr [rax + rax] ; ret
0x000000000040e7dd : or al, 0x18 ; ret 0x6451
0x000000000040e153 : or al, 0xffffffffffffffc5 ; adc byte ptr [rcx + 0x41], 0 ; jmp rcx
0x0000000000406df8 : or al, 0xffffffffffffffc5 ; call 0xffffffffff40af42
0x000000000040e477 : or al, 0xffffffffffffffc5 ; enter 0x4151, 0 ; jmp rcx
0x000000000040732d : or al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000415b4d : or byte ptr [rax], al ; add byte ptr [rcx + rdx*2 - 1], ah ; jmp rsp
0x000000000040ae41 : or byte ptr [rcx + 0x5cf9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000415b85 : or dword ptr [rax], eax ; add byte ptr [rax + rsi*2 - 1], ah ; call rsp
0x000000000040fe21 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040bb98 : orps xmm0, xmmword ptr [rcx - 0x77] ; ret
0x000000000040c4e6 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041230c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040ca82 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040c4e8 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041230e : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040c4ea : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000412310 : pop r14 ; pop r15 ; ret
0x000000000040f473 : pop r14 ; pop rbp ; ret
0x000000000040c4ec : pop r15 ; pop rbp ; ret
0x0000000000412312 : pop r15 ; ret
0x0000000000401c02 : pop rbp ; mov byte ptr [rip + 0x21674e], 1 ; ret
0x0000000000401ba1 : pop rbp ; mov edi, 0x6182e8 ; jmp rax
0x0000000000401bde : pop rbp ; mov rsi, rax ; mov edi, 0x6182e8 ; jmp rdx
0x000000000041230b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040c4e9 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041230f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401b95 : pop rbp ; ret
0x000000000040ca81 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041086d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040f472 : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000407330 : pop rbx ; pop rbp ; ret
0x000000000040c122 : pop rbx ; ret
0x00000000004062d0 : pop rdi ; fdivr qword ptr [rax - 0x7f] ; ret 7
0x000000000040c4ed : pop rdi ; pop rbp ; ret
0x0000000000412313 : pop rdi ; ret
0x000000000040c4eb : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000412311 : pop rsi ; pop r15 ; ret
0x000000000040f474 : pop rsi ; pop rbp ; ret
0x000000000040ae44 : pop rsp ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000040c4e7 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041230d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040ca83 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040b4a4 : push -0x76000002 ; ret 0x9589
0x0000000000403314 : push 0x5d006183 ; ret
0x00000000004101be : push r8 ; pop rbp ; ret
0x0000000000406877 : push rax ; adc al, -0x7f ; ret 0x8924
0x0000000000402f7c : push rax ; pop rbp ; ret
0x00000000004054c5 : push rax ; xchg eax, edx ; ret
0x000000000040a632 : push rbp ; clc ; mov qword ptr [rdx + 0x68], rcx ; pop rbp ; ret
0x0000000000410246 : push rbp ; clc ; pop rbp ; ret
0x0000000000401c24 : push rbp ; mov edi, 0x617e20 ; mov rbp, rsp ; call rax
0x000000000040cb8a : push rbp ; ret 0x458a
0x0000000000402fe5 : push rbp ; ror byte ptr [rax - 0x77], 1 ; ret 0x91e8
0x000000000040da8d : push rcx ; adc al, 0x2d ; add byte ptr fs:[rax], al ; add byte ptr [rcx], ch ; ret 0x5189
0x000000000040c529 : push rdx ; xor eax, 0xba06cf71 ; ret
0x000000000040c62b : pushfq ; ret 0xd284
0x0000000000405a24 : pushfq ; ret 0xe280
0x00000000004079ff : pushfq ; ret 0xe4a3
0x0000000000401699 : ret
0x0000000000400718 : ret 0
0x00000000004121b6 : ret 0x148
0x0000000000402717 : ret 0x1489
0x000000000040b7ee : ret 0x14c
0x000000000040d7c4 : ret 0x16e8
0x00000000004062c0 : ret 0x1923
0x000000000040f85e : ret 0x1b2
0x0000000000405ab5 : ret 0x2075
0x000000000040c9d3 : ret 0x2145
0x000000000040ba72 : ret 0x2148
0x000000000040b5b4 : ret 0x214c
0x00000000004019f2 : ret 0x2167
0x00000000004017f2 : ret 0x2168
0x000000000040505f : ret 0x22
0x000000000040656f : ret 0x270e
0x0000000000407488 : ret 0x2944
0x0000000000403545 : ret 0x2948
0x000000000040ebe9 : ret 0x294c
0x000000000040ec05 : ret 0x294d
0x000000000040ca2f : ret 0x3145
0x000000000040c1f0 : ret 0x3148
0x0000000000402363 : ret 0x37e8
0x0000000000404cab : ret 0x3948
0x0000000000413c80 : ret 0x405a
0x000000000040cb8e : ret 0x4588
0x000000000040748b : ret 0x4589
0x000000000040cb8b : ret 0x458a
0x000000000040da95 : ret 0x5189
0x000000000040cb88 : ret 0x5588
0x0000000000406e94 : ret 0x5589
0x000000000040a095 : ret 0x5749
0x00000000004062ce : ret 0x5fca
0x0000000000405d66 : ret 0x62dc
0x000000000040e7df : ret 0x6451
0x0000000000406d37 : ret 0x6948
0x0000000000406880 : ret 0x76c
0x0000000000404c0d : ret 0x8041
0x000000000040ca18 : ret 0x8141
0x00000000004080ae : ret 0x8148
0x00000000004116cf : ret 0x840
0x000000000040cb71 : ret 0x850f
0x000000000040461a : ret 0x858b
0x000000000040ee83 : ret 0x8840
0x0000000000410369 : ret 0x8844
0x000000000040687a : ret 0x8924
0x000000000040d2b6 : ret 0x8941
0x00000000004041ba : ret 0x8948
0x000000000040ec08 : ret 0x8949
0x000000000040ed9c : ret 0x89a5
0x0000000000407979 : ret 0x8b48
0x0000000000406675 : ret 0x8d0f
0x0000000000402fe9 : ret 0x91e8
0x000000000040d386 : ret 0x944
0x000000000040bc90 : ret 0x945
0x000000000040c008 : ret 0x948
0x000000000040b661 : ret 0x949
0x0000000000407bbe : ret 0x9589
0x000000000040c468 : ret 0x958a
0x000000000040d65a : ret 0xaae4
0x000000000040859b : ret 0xacad
0x000000000040252f : ret 0xb0
0x0000000000402a20 : ret 0xb2e2
0x000000000040a75a : ret 0xb848
0x000000000040c06f : ret 0xb849
0x0000000000406275 : ret 0xb992
0x000000000040d8c6 : ret 0xbc0d
0x000000000040b62b : ret 0xbf48
0x000000000040a8f5 : ret 0xbffe
0x0000000000401bc5 : ret 0xc148
0x0000000000411f10 : ret 0xc2f6
0x000000000040be82 : ret 0xca00
0x0000000000406d28 : ret 0xca01
0x0000000000404809 : ret 0xca21
0x0000000000406917 : ret 0xca29
0x0000000000407da3 : ret 0xd1f4
0x0000000000406615 : ret 0xd262
0x000000000040255b : ret 0xd284
0x000000000040ec1d : ret 0xdde8
0x0000000000405a25 : ret 0xe280
0x0000000000407a00 : ret 0xe4a3
0x000000000040661b : ret 0xea81
0x000000000040f4ac : ret 0xee8
0x000000000040ee98 : ret 0xf180
0x0000000000406ee9 : ret 0xf229
0x00000000004116b3 : ret 0xf280
0x000000000040e67e : ret 0xf281
0x00000000004066fe : ret 0xf40
0x0000000000403a5e : ret 0xfa81
0x000000000040969a : ret 0xff82
0x00000000004077bc : ret 0xfffe
0x00000000004055ed : ret 0xffff
0x0000000000405aaf : ret 1
0x0000000000400928 : ret 2
0x00000000004062d4 : ret 7
0x000000000040df06 : rol byte ptr [rcx + rcx*4], 1 ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000404c14 : rol byte ptr [rcx - 0x78], 1 ; ret
0x00000000004109d0 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000040874b : ror byte ptr [r8 - 0x77], 1 ; ret 0x2948
0x000000000040e090 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x40e0fb ; ret
0x000000000040518a : ror byte ptr [rax + 0x29], 1 ; enter -0x46b8, 0x40 ; jbe 0x4051d8 ; ret
0x0000000000401bcc : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401bdb ; pop rbp ; ret
0x00000000004109d1 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x000000000040874c : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x000000000040ebe6 : ror byte ptr [rax - 0x77], 1 ; ret 0x294c
0x0000000000407f03 : ror byte ptr [rax - 0x77], 1 ; ret 0x8948
0x0000000000402fe6 : ror byte ptr [rax - 0x77], 1 ; ret 0x91e8
0x0000000000402dd5 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x402e3e ; ret
0x000000000040e091 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x40e0fa ; ret
0x000000000040c380 : ror byte ptr [rbp + 0x21], cl ; ret 0x214c
0x000000000040c0b7 : ror byte ptr [rcx + 9], 1 ; ret
0x000000000040c7db : ror dword ptr [rcx + 0x458bfc4d], -4 ; pop rbp ; ret
0x000000000040c146 : ror dword ptr [rcx - 0x47], cl ; pop rbx ; ret
0x0000000000401b9e : sal byte ptr [rsp + rsi*8 + 0x5d], -0x41 ; call 0xffffffffff407d33
0x00000000004160d9 : sar dh, cl ; call qword ptr [rsi]
0x0000000000401bce : sar eax, 1 ; jne 0x401bd9 ; pop rbp ; ret
0x00000000004074bd : sar ecx, -0x1f ; mov dr0, word ptr [rdi] ; mov eax, ecx ; pop rbp ; ret
0x0000000000415a91 : sar esi, cl ; jmp rsp
0x0000000000401bcd : sar rax, 1 ; jne 0x401bda ; pop rbp ; ret
0x0000000000415b11 : sbb bh, bh ; jmp rsp
0x0000000000416428 : sbb byte ptr [rbx - 1], ch ; call qword ptr [rax]
0x00000000004081f3 : sbb cl, ch ; ret
0x00000000004081f2 : sbb r9b, bpl ; ret
0x000000000040cb81 : stc ; add byte ptr cs:[rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x000000000040ae43 : stc ; pop rsp ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x00000000004113a8 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040a94a : sub byte ptr [rcx + 0x1000000], 0x5d ; ret
0x00000000004109ef : sub dword ptr [rdx], 0x5b ; ret
0x0000000000412361 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000412360 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040be8e : test al, -0x31 ; xchg dword ptr [rax + 0x29], ecx ; ret 0x8948
0x000000000040be7a : test al, -0x31 ; xchg dword ptr [rax + 1], ecx ; ret 0x8148
0x000000000040a127 : test al, -0x77 ; ret 0xca29
0x0000000000402586 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041231a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000401c53 : test byte ptr [rdx], cl ; add byte ptr [rax], al ; add al, ch ; ret
0x000000000040660f : test dword ptr [rax - 0x7e000008], eax ; ret 0xd262
0x00000000004078c9 : test dword ptr [rip - 0x17000000], eax ; jmp qword ptr [rdx]
0x0000000000402cfd : test dword ptr [rsi], edi ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x000000000040b7fb : test dword ptr [rsp + rdi*8 - 1], edi ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040a94b : test eax, 0x1000000 ; pop rbp ; ret
0x00000000004103b0 : vorps xmm0, xmm14, xmmword ptr [rcx] ; jmp rcx
0x000000000040be90 : xchg dword ptr [rax + 0x29], ecx ; ret 0x8948
0x000000000040be7c : xchg dword ptr [rax + 1], ecx ; ret 0x8148
0x000000000040c068 : xchg eax, ebp ; cmp bl, -1 ; dec dword ptr [rbp + 0x31] ; ret 0xb849
0x0000000000404614 : xchg eax, ebp ; idiv edi ; ljmp ptr [rcx] ; ret 0x858b
0x000000000040ee82 : xchg eax, ebp ; ret 0x8840
0x000000000040255a : xchg eax, ebp ; ret 0xd284
0x000000000040c49d : xchg eax, ebp ; ret 0xe280
0x00000000004054c6 : xchg eax, edx ; ret
0x000000000040cb87 : xchg eax, esp ; ret 0x5588
0x000000000040859a : xchg eax, esp ; ret 0xacad
0x000000000040c74a : xchg eax, esp ; ret 0xd284
0x000000000040ae49 : xchg eax, esp ; ret 0xe280
0x000000000041229e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040fbb7 : xor eax, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x000000000040c52a : xor eax, 0xba06cf71 ; ret
0x000000000040df05 : xor eax, edx ; mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
