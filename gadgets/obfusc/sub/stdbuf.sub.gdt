0x0000000000410d98 : adc al, 0x48 ; add esp, 0x10 ; pop rbp ; ret
0x0000000000409859 : adc al, 1 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000416b0d : adc al, byte ptr [rax] ; add al, ah ; sar edi, 1 ; call qword ptr [rax]
0x0000000000415585 : adc bh, bh ; call rax
0x0000000000415bf0 : adc bl, -2 ; call qword ptr [rsi]
0x0000000000408a7a : adc byte ptr [rax - 0x75], cl ; jge 0x408a44 ; call rax
0x0000000000408a79 : adc byte ptr [rax - 0x75], cl ; jge 0x408a45 ; call rax
0x0000000000408c0d : adc byte ptr [rax - 0x75], cl ; jge 0x408bd7 ; call rax
0x0000000000408c0c : adc byte ptr [rax - 0x75], cl ; jge 0x408bd8 ; call rax
0x0000000000415691 : adc byte ptr [rax], al ; add byte ptr [rax], ah ; sub edi, edi ; call qword ptr [rax]
0x00000000004155d4 : adc byte ptr [rbx], -1 ; call qword ptr [rax]
0x0000000000415594 : adc byte ptr [rcx], -1 ; call qword ptr [rax]
0x0000000000415c90 : adc ch, -2 ; call qword ptr [rcx]
0x0000000000410d7c : adc dh, dh ; ret 0xf01
0x000000000041396f : adc dword ptr [rax - 0x42], ecx ; ret
0x00000000004156d1 : adc dword ptr [rax], eax ; add al, dl ; xor al, 0xffffffffffffffff ; call qword ptr [rax]
0x0000000000405f69 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000415595 : adc edi, edi ; call qword ptr [rax]
0x00000000004155c5 : adc edi, edi ; call rax
0x00000000004160b9 : add al, -1 ; jmp qword ptr [rax]
0x0000000000415385 : add al, 0 ; add byte ptr [rbp - 0x20000000], dl ; ret 0xfffe
0x000000000040849d : add al, 0x21 ; ret 0xd709
0x0000000000402388 : add al, 0x25 ; xor byte ptr [rdx + 0x61], 0 ; pop rbp ; ret
0x000000000041538b : add al, ah ; ret 0xfffe
0x0000000000416b0f : add al, ah ; sar edi, 1 ; call qword ptr [rax]
0x0000000000413343 : add al, byte ptr [rax] ; add byte ptr [rcx - 0xdf43], al ; call qword ptr [rax]
0x0000000000415583 : add al, dl ; adc bh, bh ; call rax
0x00000000004156d3 : add al, dl ; xor al, 0xffffffffffffffff ; call qword ptr [rax]
0x0000000000415f59 : add bh, bh ; jmp rdx
0x0000000000413cbf : add bl, dh ; ret
0x000000000040a717 : add byte ptr [rax + 1], cl ; ret 0x4a3b
0x000000000040362e : add byte ptr [rax + 1], cl ; ret 0x8b48
0x0000000000410224 : add byte ptr [rax + 1], cl ; ret 0xc148
0x0000000000408cde : add byte ptr [rax + rax], 0 ; pop rbp ; ret
0x0000000000413983 : add byte ptr [rax - 0x42], cl ; ret
0x00000000004031db : add byte ptr [rax - 0x75], cl ; call 0x4902bb33
0x0000000000410eb6 : add byte ptr [rax - 0x75], cl ; call 0x4903980e
0x00000000004109f5 : add byte ptr [rax - 0x75], cl ; clc ; mov rsp, rbp ; pop rbp ; ret
0x0000000000408c8b : add byte ptr [rax - 0x75], cl ; jge 0x408c4d ; call rax
0x0000000000410f82 : add byte ptr [rax - 0x75], cl ; loopne 0x410feb ; ret
0x0000000000408b1f : add byte ptr [rax - 0x75], cl ; mov ebp, 0xfffffba0 ; call rax
0x0000000000411e89 : add byte ptr [rax - 0x75], cl ; push rbp ; call 0x21039fe1
0x000000000040751d : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x00000000004128df : add byte ptr [rax - 0x77], cl ; fsubr st(1) ; ret 0xffff
0x000000000040e277 : add byte ptr [rax - 0x77], cl ; ret 0x90e8
0x000000000040e30a : add byte ptr [rax - 0x77], cl ; ret 0xfde8
0x0000000000415693 : add byte ptr [rax], ah ; sub edi, edi ; call qword ptr [rax]
0x0000000000415bee : add byte ptr [rax], al ; adc bl, -2 ; call qword ptr [rsi]
0x00000000004155d2 : add byte ptr [rax], al ; adc byte ptr [rbx], -1 ; call qword ptr [rax]
0x0000000000415592 : add byte ptr [rax], al ; adc byte ptr [rcx], -1 ; call qword ptr [rax]
0x0000000000415c8e : add byte ptr [rax], al ; adc ch, -2 ; call qword ptr [rcx]
0x00000000004155c3 : add byte ptr [rax], al ; adc edi, edi ; call rax
0x0000000000415389 : add byte ptr [rax], al ; add al, ah ; ret 0xfffe
0x0000000000413cbd : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040a715 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x4a3b
0x000000000040362c : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8b48
0x0000000000410222 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0xc148
0x0000000000413981 : add byte ptr [rax], al ; add byte ptr [rax - 0x42], cl ; ret
0x00000000004031d9 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; call 0x4902bb35
0x0000000000410eb4 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; call 0x49039810
0x0000000000410f80 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; loopne 0x410fed ; ret
0x0000000000411e87 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbp ; call 0x21039fe3
0x00000000004128dd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fsubr st(1) ; ret 0xffff
0x0000000000413cbb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000410c71 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000408529 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000410f7f : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x20] ; pop rbp ; ret
0x0000000000413cbc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004084c2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000411138 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x0000000000415542 : add byte ptr [rax], al ; add byte ptr [rdi + rdi*8], cl ; call rax
0x0000000000415742 : add byte ptr [rax], al ; add byte ptr [rdi - 1], bl ; call rax
0x000000000040560e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000410cc2 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000410148 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x00000000004024a9 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040928c : add byte ptr [rax], al ; add cl, ch ; ret 2
0x0000000000405f31 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405c40 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000410c73 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401653 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000415c8a : add byte ptr [rax], al ; and al, 4 ; add byte ptr [rax], al ; adc ch, -2 ; call qword ptr [rcx]
0x0000000000415702 : add byte ptr [rax], al ; cmp byte ptr [rbx], -1 ; call rax
0x0000000000401829 : add byte ptr [rax], al ; jmp 0x401669
0x000000000040852b : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004023fc : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000404502 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000410f81 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x20] ; pop rbp ; ret
0x0000000000416b0a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; adc al, byte ptr [rax] ; add al, ah ; sar edi, 1 ; call qword ptr [rax]
0x0000000000415543 : add byte ptr [rax], al ; or al, 0xffffffffffffffff ; call rax
0x00000000004029e5 : add byte ptr [rax], al ; pop rbp ; ret
0x00000000004073bb : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405c00 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004084c3 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000415602 : add byte ptr [rax], al ; push rax ; and bh, bh ; call rax
0x00000000004158ae : add byte ptr [rax], al ; push rax ; ret
0x0000000000415752 : add byte ptr [rax], al ; rcr byte ptr [rdi - 1] ; call qword ptr [rax]
0x0000000000413cbe : add byte ptr [rax], al ; ret
0x000000000041590e : add byte ptr [rax], al ; rol ah, -2 ; jmp rdx
0x00000000004156d2 : add byte ptr [rax], al ; sal byte ptr [rdi + rdi*8], 1 ; call qword ptr [rax]
0x0000000000415b2e : add byte ptr [rax], al ; sar esi, 1 ; jmp rdx
0x0000000000416756 : add byte ptr [rax], al ; sub byte ptr [rbx - 1], cl ; jmp qword ptr [rcx]
0x0000000000415eae : add byte ptr [rax], al ; sub cl, -2 ; call rdi
0x0000000000415bea : add byte ptr [rax], al ; test byte ptr [rbx], al ; add byte ptr [rax], al ; adc bl, -2 ; call qword ptr [rsi]
0x0000000000415386 : add byte ptr [rax], al ; xchg eax, ebp ; add byte ptr [rax], al ; add al, ah ; ret 0xfffe
0x0000000000415f97 : add byte ptr [rax], bl ; add edi, edi ; jmp qword ptr [rdx]
0x0000000000415f57 : add byte ptr [rax], ch ; add bh, bh ; jmp rdx
0x0000000000415613 : add byte ptr [rax], dl ; and bh, bh ; call qword ptr [rax]
0x0000000000415387 : add byte ptr [rbp - 0x20000000], dl ; ret 0xfffe
0x00000000004073bc : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000405c01 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x00000000004084c4 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000041113a : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x0000000000413345 : add byte ptr [rcx - 0xdf43], al ; call qword ptr [rax]
0x0000000000402e7c : add byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x00000000004029e3 : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401bc8 : add byte ptr [rcx], al ; ret
0x0000000000415544 : add byte ptr [rdi + rdi*8], cl ; call rax
0x0000000000415744 : add byte ptr [rdi - 1], bl ; call rax
0x0000000000409288 : add byte ptr [rdi], cl ; lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000405610 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000410cc4 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041014a : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x00000000004024ab : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000415c8b : add byte ptr [rsp + rax], ah ; add byte ptr [rax], al ; adc ch, -2 ; call qword ptr [rcx]
0x00000000004032dc : add cl, byte ptr [rax - 0x77] ; ret 0x148
0x000000000040928e : add cl, ch ; ret 2
0x0000000000410205 : add dh, ch ; call 0x4933035c
0x00000000004079f9 : add dword ptr [rax - 0x77], ecx ; ret 0x8148
0x0000000000405f2f : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004023fa : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004073ba : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000405bff : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000413532 : add dword ptr [rax], eax ; add byte ptr [rcx - 0xdf43], al ; call qword ptr [rax]
0x0000000000402d3d : add dword ptr [rax], ecx ; ret 0x840
0x0000000000402674 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040aca2 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000402a1a : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401bc4 : add eax, 0x21576e ; add ebx, esi ; ret
0x000000000040c7b0 : add eax, 0x8301148b ; ret 0x89ee
0x000000000040928b : add eax, 0xe9000000 ; ret 2
0x0000000000401b8b : add eax, edx ; sar rax, 1 ; jne 0x401b9c ; pop rbp ; ret
0x000000000040b299 : add eax, esi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x0000000000401bc9 : add ebx, esi ; ret
0x000000000040989b : add edi, eax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x0000000000415f99 : add edi, edi ; jmp qword ptr [rdx]
0x0000000000401d9b : add esp, 0x10 ; pop rbp ; ret
0x00000000004029e1 : add esp, 0x100 ; pop rbp ; ret
0x000000000040b75c : add esp, 0x10e0 ; pop rbp ; ret
0x00000000004095bc : add esp, 0x130 ; pop rbp ; ret
0x0000000000404015 : add esp, 0x170 ; pop rbp ; ret
0x00000000004076ec : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000411e34 : add esp, 0x1b8 ; pop rbp ; ret
0x0000000000413c41 : add esp, 0x1c0 ; pop rbp ; ret
0x00000000004027ce : add esp, 0x20 ; pop rbp ; ret
0x000000000040a456 : add esp, 0x250 ; pop rbp ; ret
0x0000000000401ead : add esp, 0x30 ; pop rbp ; ret
0x00000000004039fd : add esp, 0x40 ; pop rbp ; ret
0x0000000000408cdc : add esp, 0x480 ; pop rbp ; ret
0x000000000040634c : add esp, 0x50 ; pop rbp ; ret
0x0000000000410f0c : add esp, 0x60 ; pop rbp ; ret
0x0000000000404823 : add esp, 0x70 ; pop rbp ; ret
0x0000000000403719 : add esp, 0x80 ; pop rbp ; ret
0x000000000040625a : add esp, 0x90 ; pop rbp ; ret
0x0000000000407583 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040443a : add esp, 0xb0 ; pop rbp ; ret
0x000000000040bbdd : add esp, 0xc0 ; pop rbp ; ret
0x00000000004084bf : add esp, 0xd8 ; pop rbx ; pop rbp ; ret
0x0000000000401656 : add esp, 8 ; ret
0x0000000000401b8a : add rax, rdx ; sar rax, 1 ; jne 0x401b9d ; pop rbp ; ret
0x000000000040b298 : add rax, rsi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x000000000040989a : add rdi, rax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x0000000000401d9a : add rsp, 0x10 ; pop rbp ; ret
0x00000000004029e0 : add rsp, 0x100 ; pop rbp ; ret
0x000000000040b75b : add rsp, 0x10e0 ; pop rbp ; ret
0x00000000004095bb : add rsp, 0x130 ; pop rbp ; ret
0x0000000000404014 : add rsp, 0x170 ; pop rbp ; ret
0x00000000004076eb : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000411e33 : add rsp, 0x1b8 ; pop rbp ; ret
0x0000000000413c40 : add rsp, 0x1c0 ; pop rbp ; ret
0x00000000004027cd : add rsp, 0x20 ; pop rbp ; ret
0x000000000040a455 : add rsp, 0x250 ; pop rbp ; ret
0x0000000000401eac : add rsp, 0x30 ; pop rbp ; ret
0x00000000004039fc : add rsp, 0x40 ; pop rbp ; ret
0x0000000000408cdb : add rsp, 0x480 ; pop rbp ; ret
0x000000000040634b : add rsp, 0x50 ; pop rbp ; ret
0x0000000000410f0b : add rsp, 0x60 ; pop rbp ; ret
0x0000000000404822 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000403718 : add rsp, 0x80 ; pop rbp ; ret
0x0000000000406259 : add rsp, 0x90 ; pop rbp ; ret
0x0000000000407582 : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000404439 : add rsp, 0xb0 ; pop rbp ; ret
0x000000000040bbdc : add rsp, 0xc0 ; pop rbp ; ret
0x00000000004084be : add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x0000000000401655 : add rsp, 8 ; ret
0x000000000040aca1 : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000402a19 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000415c8c : and al, 4 ; add byte ptr [rax], al ; adc ch, -2 ; call qword ptr [rcx]
0x0000000000415615 : and bh, bh ; call qword ptr [rax]
0x0000000000415605 : and bh, bh ; call rax
0x0000000000401bc7 : and dword ptr [rax], eax ; add ebx, esi ; ret
0x0000000000403097 : and eax, 0x48ffffe6 ; add esp, 0x10 ; pop rbp ; ret
0x0000000000402389 : and eax, 0x617280 ; pop rbp ; ret
0x0000000000402f7f : and eax, 0x617390 ; pop rbp ; ret
0x0000000000402fa3 : and eax, 0x617398 ; pop rbp ; ret
0x0000000000411e8d : call 0x21039fdd
0x000000000040a264 : call 0x323b4
0x0000000000407710 : call 0x4017b9
0x000000000041396c : call 0x4852c4bf
0x000000000041396b : call 0x4852c4c0
0x00000000004031df : call 0x4902bb2f
0x00000000004031de : call 0x4902bb30
0x0000000000410eba : call 0x4903980a
0x0000000000410eb9 : call 0x4903980b
0x0000000000410207 : call 0x4933035a
0x0000000000405c39 : call 0xffffffffe902e589
0x0000000000405c38 : call 0xffffffffe902e58a
0x0000000000413c99 : call qword ptr [r12 + rbx*8]
0x0000000000413254 : call qword ptr [rax]
0x0000000000413604 : call qword ptr [rbx]
0x000000000041352b : call qword ptr [rcx]
0x00000000004135bc : call qword ptr [rdx]
0x000000000041356c : call qword ptr [rsi]
0x0000000000413c9a : call qword ptr [rsp + rbx*8]
0x0000000000401bed : call rax
0x000000000040598c : call rbx
0x0000000000415eb3 : call rdi
0x00000000004023f9 : clc ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004095ba : clc ; add rsp, 0x130 ; pop rbp ; ret
0x00000000004078ef : clc ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040a454 : clc ; add rsp, 0x250 ; pop rbp ; ret
0x000000000040331a : clc ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004039fb : clc ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000408cda : clc ; add rsp, 0x480 ; pop rbp ; ret
0x000000000040bd31 : clc ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000410f0a : clc ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000403717 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x0000000000404438 : clc ; add rsp, 0xb0 ; pop rbp ; ret
0x000000000040bbdb : clc ; add rsp, 0xc0 ; pop rbp ; ret
0x0000000000401b8f : clc ; jne 0x401b98 ; pop rbp ; ret
0x0000000000410d95 : clc ; mov dword ptr [rax + 0x14], ecx ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004046d5 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000402eff : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004109f9 : clc ; mov rsp, rbp ; pop rbp ; ret
0x0000000000402400 : clc ; pop rbp ; ret
0x0000000000408528 : cld ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000401dc7 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040b75a : cld ; add rsp, 0x10e0 ; pop rbp ; ret
0x0000000000411e32 : cld ; add rsp, 0x1b8 ; pop rbp ; ret
0x0000000000413c3f : cld ; add rsp, 0x1c0 ; pop rbp ; ret
0x0000000000408d9b : cld ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004024ca : cld ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040883f : cld ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000402386 : cld ; mov dword ptr [0x617280], eax ; pop rbp ; ret
0x0000000000402efc : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040bf13 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040beb6 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000408987 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040883c : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041118a : cld ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040852f : cld ; pop rbp ; ret
0x0000000000413342 : cli ; add al, byte ptr [rax] ; add byte ptr [rcx - 0xdf43], al ; call qword ptr [rax]
0x0000000000415704 : cmp byte ptr [rbx], -1 ; call rax
0x0000000000412330 : cmp byte ptr [rcx - 0x77], al ; ret 0x8141
0x0000000000412324 : cmp byte ptr [rcx], ah ; ret 0x8941
0x00000000004135ea : cmp dword ptr [rcx - 0xf], eax ; jmp qword ptr [rcx]
0x0000000000407fe6 : cmp eax, 0x8945c621 ; ret 0x8141
0x0000000000401b4d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401b60 ; pop rbp ; ret
0x000000000040d9e1 : cmp edi, dword ptr [rdx + 0x5a5335da] ; ret
0x0000000000415705 : cmp edi, edi ; call rax
0x0000000000406efc : cwde ; mov rcx, qword ptr [rax*8 + 0x414b00] ; jmp rcx
0x000000000040d9de : dec dword ptr [rax - 0x46] ; cmp edi, dword ptr [rdx + 0x5a5335da] ; ret
0x0000000000407714 : dec dword ptr [rax - 0x73] ; xor al, 0x25 ; ret 0x414d
0x000000000040376a : dec dword ptr [rax - 0x75] ; clc ; pop rbp ; ret
0x000000000040a260 : dec dword ptr [rax - 0x75] ; push rbp ; call 0x323b8
0x0000000000412fdb : dec dword ptr [rax - 0x75] ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 1
0x00000000004092f4 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x000000000040d5df : dec dword ptr [rax - 0x77] ; ret 0x8148
0x000000000040a296 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000406d2c : dec dword ptr [rax - 0x77] ; ret 0xdbe8
0x0000000000406a29 : dec dword ptr [rax - 0x77] ; ret 0xdee8
0x0000000000412f8b : dec dword ptr [rcx + 0x31c621d6] ; ret 0xd609
0x0000000000405392 : dec dword ptr [rcx - 0x77] ; ret 0x294d
0x000000000040d9ee : enter -0x46b8, 0x3b ; mov edx, 0x5a5335da ; ret
0x000000000040ae34 : enter -0x76b8, 0xc ; ret 0x59e9
0x0000000000405720 : enter 0x4b05, 0x34 ; fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x00000000004084c1 : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004024a7 : fadd qword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000405724 : fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x000000000040b97e : fmul dword ptr [r8 - 0x77] ; ret 0x8148
0x000000000040396b : fmul dword ptr [rax + 0x29] ; ret 0x148
0x000000000040b97f : fmul dword ptr [rax - 0x77] ; ret 0x8148
0x0000000000412fdf : fmul dword ptr [rax - 0x7f] ; ret 1
0x0000000000413c9c : fmul qword ptr [rax - 0x7d] ; ret
0x00000000004128e3 : fsubr st(1) ; ret 0xffff
0x0000000000401d99 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000410ccf : hlt ; mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401b60 : hlt ; pop rbp ; mov edi, 0x6172e0 ; jmp rax
0x00000000004032d8 : imul eax, dword ptr [rax - 0x77], 0x7a ; add cl, byte ptr [rax - 0x77] ; ret 0x148
0x000000000040859a : in al, dx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040aca8 : in al, dx ; pop rbp ; ret
0x00000000004083fa : in eax, -0x4a ; loope 0x408423 ; ret 0x8941
0x0000000000408a54 : inc dword ptr [rcx - 0x46343] ; jmp qword ptr [rdx]
0x00000000004059ab : inc dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000407525 : int 0x80
0x0000000000409f9c : int 0xfd
0x0000000000401b53 : ja 0x401b5a ; pop rbp ; ret
0x0000000000414229 : jb 0x414292 ; jns 0x414234 ; push rax ; ret
0x0000000000414228 : jb 0x414293 ; jns 0x414235 ; push rax ; ret
0x0000000000401b5f : je 0x401b5d ; pop rbp ; mov edi, 0x6172e0 ; jmp rax
0x0000000000408a7d : jge 0x408a41 ; call rax
0x0000000000408bb3 : jge 0x408b7e ; mov rsi, qword ptr [rbp - 0x460] ; call rax
0x0000000000408c10 : jge 0x408bd4 ; call rax
0x0000000000408c8e : jge 0x408c4a ; call rax
0x0000000000408cc0 : jge 0x408c7c ; call rax
0x0000000000411078 : jmp 0x329186
0x000000000040182b : jmp 0x401667
0x0000000000411534 : jmp 0x411579
0x000000000040e334 : jmp 0xffffffff8a036c4c
0x00000000004079f8 : jmp 0xffffffffc2c9c202
0x0000000000415953 : jmp qword ptr [rax]
0x0000000000402a92 : jmp qword ptr [rcx]
0x0000000000408a5a : jmp qword ptr [rdx]
0x0000000000401b67 : jmp rax
0x00000000004048e9 : jmp rcx
0x0000000000401ba7 : jmp rdx
0x0000000000401b90 : jne 0x401b97 ; pop rbp ; ret
0x000000000041422c : jns 0x414231 ; push rax ; ret
0x000000000041422b : jns 0x414232 ; push rax ; ret
0x0000000000404017 : jo 0x40401f ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000404825 : jo 0x404886 ; ret
0x0000000000405e4f : jo 0x405eb5 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004064f4 : jo 0x406555 ; ret
0x000000000040662e : jo 0x40668f ; ret
0x000000000040928a : lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000415690 : lock adc byte ptr [rax], al ; add byte ptr [rax], ah ; sub edi, edi ; call qword ptr [rax]
0x00000000004156d0 : lock adc dword ptr [rax], eax ; add al, dl ; xor al, 0xffffffffffffffff ; call qword ptr [rax]
0x0000000000415db1 : loop 0x415db3 ; jmp qword ptr [rdx]
0x00000000004083fc : loope 0x408421 ; ret 0x8941
0x00000000004034bf : loopne 0x40350f ; add esp, 0x20 ; pop rbp ; ret
0x00000000004034be : loopne 0x403510 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000407d40 : loopne 0x407d90 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000407d3f : loopne 0x407d91 ; add esp, 0x20 ; pop rbp ; ret
0x00000000004083f8 : loopne 0x408414 ; in eax, -0x4a ; loope 0x408425 ; ret 0x8941
0x000000000040b75e : loopne 0x40b775 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000410f86 : loopne 0x410fe7 ; ret
0x0000000000410f85 : loopne 0x410fe8 ; ret
0x0000000000415384 : mov ah, 4 ; add byte ptr [rax], al ; xchg eax, ebp ; add byte ptr [rax], al ; add al, ah ; ret 0xfffe
0x00000000004036fb : mov al, -0x18 ; jmp rdx
0x000000000040443c : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000415700 : mov al, 0x12 ; add byte ptr [rax], al ; cmp byte ptr [rbx], -1 ; call rax
0x0000000000415740 : mov al, 0x13 ; add byte ptr [rax], al ; add byte ptr [rdi - 1], bl ; call rax
0x00000000004063cb : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000406258 : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000415540 : mov al, 0xb ; add byte ptr [rax], al ; add byte ptr [rdi + rdi*8], cl ; call rax
0x0000000000415600 : mov al, 0xe ; add byte ptr [rax], al ; push rax ; and bh, bh ; call rax
0x0000000000402a16 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000402fa1 : mov byte ptr [0x617398], al ; pop rbp ; ret
0x0000000000409857 : mov byte ptr [rax + 0x14], 1 ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040b26b : mov byte ptr [rax + 0xc], 1 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401bc3 : mov byte ptr [rip + 0x21576e], 1 ; ret
0x000000000040d51c : mov cl, -0x32 ; ret
0x0000000000402676 : mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040aca4 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000402a1c : mov dh, -0x40 ; pop rbp ; ret
0x0000000000402387 : mov dword ptr [0x617280], eax ; pop rbp ; ret
0x0000000000402f7d : mov dword ptr [0x617390], edi ; pop rbp ; ret
0x0000000000410d96 : mov dword ptr [rax + 0x14], ecx ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004046d6 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000404698 : mov dword ptr [rax], eax ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000404554 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000404697 : mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000041104c : mov dword ptr [rbp - 0x18], eax ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000401ea9 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401d97 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401dc5 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000411188 : mov dword ptr [rbp - 4], edx ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000402efd : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040474e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b29c : mov dword ptr [rdi + 0x10], eax ; pop rbp ; ret
0x000000000040989e : mov dword ptr [rsi], edi ; pop rbp ; ret
0x0000000000411e36 : mov eax, 0x5d000001 ; ret
0x0000000000408a78 : mov eax, dword ptr [rax + 0x10] ; mov rdi, qword ptr [rbp - 0x40] ; call rax
0x0000000000408cbb : mov eax, dword ptr [rax + 0x18] ; mov rdi, qword ptr [rbp - 0x48] ; call rax
0x0000000000408b1e : mov eax, dword ptr [rax] ; mov rdi, qword ptr [rbp - 0x460] ; call rax
0x0000000000408c8a : mov eax, dword ptr [rax] ; mov rdi, qword ptr [rbp - 0x48] ; call rax
0x0000000000404508 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004030dd : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403473 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404505 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004033cf : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000408598 : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403200 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004044bd : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040454e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000411050 : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004034bd : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000410f84 : mov eax, dword ptr [rbp - 0x20] ; pop rbp ; ret
0x000000000040469a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000407c8b : mov eax, dword ptr [rbp - 0x2c] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040481f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004063c9 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000410cd0 : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040bf14 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408d99 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004024c8 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040883d : mov eax, dword ptr [rbp - 4] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040852d : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004078ed : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403318 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004039f9 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040bd2f : mov eax, dword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000410f08 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004109f7 : mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004023fe : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000408b22 : mov ebp, 0xfffffba0 ; call rax
0x0000000000401beb : mov ebp, esp ; call rax
0x0000000000401b51 : mov ebp, esp ; ja 0x401b5c ; pop rbp ; ret
0x000000000040d9f0 : mov ecx, 0x35daba3b ; push rbx ; pop rdx ; ret
0x000000000040753d : mov ecx, 0x5b2a830a ; ret
0x00000000004048e2 : mov ecx, dword ptr [rax*8 + 0x414600] ; jmp rcx
0x0000000000404c06 : mov ecx, dword ptr [rax*8 + 0x414648] ; jmp rcx
0x0000000000406efe : mov ecx, dword ptr [rax*8 + 0x414b00] ; jmp rcx
0x000000000040825a : mov ecx, dword ptr [rax*8 + 0x414e70] ; jmp rcx
0x00000000004081da : mov ecx, dword ptr [rax*8 + 0x414ed0] ; jmp rcx
0x000000000040e7d6 : mov ecx, dword ptr [rax*8 + 0x4150b0] ; jmp rcx
0x000000000040c7d7 : mov ecx, dword ptr [rax*8 + 0x415138] ; jmp rcx
0x00000000004111e7 : mov ecx, dword ptr [rax*8 + 0x4151a0] ; jmp rcx
0x0000000000413246 : mov ecx, dword ptr [rax*8 + 0x415278] ; jmp rcx
0x0000000000404551 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000408a2b : mov ecx, dword ptr [rbp - 0x48] ; call rax
0x0000000000401be5 : mov edi, 0x616e20 ; mov rbp, rsp ; call rax
0x0000000000401b62 : mov edi, 0x6172e0 ; jmp rax
0x0000000000401ba2 : mov edi, 0x6172e0 ; jmp rdx
0x0000000000408a7c : mov edi, dword ptr [rbp - 0x40] ; call rax
0x0000000000408b21 : mov edi, dword ptr [rbp - 0x460] ; call rax
0x0000000000408c8d : mov edi, dword ptr [rbp - 0x48] ; call rax
0x0000000000409898 : mov edi, dword ptr [rsi] ; add rdi, rax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x0000000000413c97 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000413c96 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000040d9e0 : mov edx, 0x35daba3b ; push rbx ; pop rdx ; ret
0x000000000040353d : mov edx, 0x4fdaf5a1 ; ret
0x000000000040d9e2 : mov edx, 0x5a5335da ; ret
0x0000000000408a27 : mov edx, dword ptr [rbp - 0x40] ; mov rcx, qword ptr [rbp - 0x48] ; call rax
0x000000000040352d : mov esi, 0x4fdaf5a1 ; ret
0x0000000000408bb6 : mov esi, dword ptr [rbp - 0x460] ; call rax
0x0000000000401ba0 : mov esi, eax ; mov edi, 0x6172e0 ; jmp rdx
0x000000000040aca7 : mov esp, ebp ; pop rbp ; ret
0x0000000000402f7c : mov qword ptr [0x617390], rdi ; pop rbp ; ret
0x000000000041104b : mov qword ptr [rbp - 0x18], rax ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040474d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b29b : mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x000000000040989d : mov qword ptr [rsi], rdi ; pop rbp ; ret
0x00000000004063ca : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000408a77 : mov rax, qword ptr [rax + 0x10] ; mov rdi, qword ptr [rbp - 0x40] ; call rax
0x0000000000408cba : mov rax, qword ptr [rax + 0x18] ; mov rdi, qword ptr [rbp - 0x48] ; call rax
0x0000000000408c89 : mov rax, qword ptr [rax] ; mov rdi, qword ptr [rbp - 0x48] ; call rax
0x00000000004030dc : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403472 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404504 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004033ce : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004031ff : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004044bc : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041104f : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004034bc : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000410f83 : mov rax, qword ptr [rbp - 0x20] ; pop rbp ; ret
0x000000000040481e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004063c8 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004078ec : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403317 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004039f8 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040bd2e : mov rax, qword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000410f07 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004109f6 : mov rax, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040376b : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000401bea : mov rbp, rsp ; call rax
0x0000000000401b50 : mov rbp, rsp ; ja 0x401b5d ; pop rbp ; ret
0x00000000004048e1 : mov rcx, qword ptr [rax*8 + 0x414600] ; jmp rcx
0x0000000000404c05 : mov rcx, qword ptr [rax*8 + 0x414648] ; jmp rcx
0x0000000000406efd : mov rcx, qword ptr [rax*8 + 0x414b00] ; jmp rcx
0x0000000000408259 : mov rcx, qword ptr [rax*8 + 0x414e70] ; jmp rcx
0x00000000004081d9 : mov rcx, qword ptr [rax*8 + 0x414ed0] ; jmp rcx
0x000000000040e7d5 : mov rcx, qword ptr [rax*8 + 0x4150b0] ; jmp rcx
0x000000000040c7d6 : mov rcx, qword ptr [rax*8 + 0x415138] ; jmp rcx
0x00000000004111e6 : mov rcx, qword ptr [rax*8 + 0x4151a0] ; jmp rcx
0x0000000000413245 : mov rcx, qword ptr [rax*8 + 0x415278] ; jmp rcx
0x0000000000408a2a : mov rcx, qword ptr [rbp - 0x48] ; call rax
0x0000000000408a7b : mov rdi, qword ptr [rbp - 0x40] ; call rax
0x0000000000408b20 : mov rdi, qword ptr [rbp - 0x460] ; call rax
0x0000000000408c8c : mov rdi, qword ptr [rbp - 0x48] ; call rax
0x0000000000408a26 : mov rdx, qword ptr [rbp - 0x40] ; mov rcx, qword ptr [rbp - 0x48] ; call rax
0x0000000000408bb5 : mov rsi, qword ptr [rbp - 0x460] ; call rax
0x0000000000401b9f : mov rsi, rax ; mov edi, 0x6172e0 ; jmp rdx
0x000000000040aca6 : mov rsp, rbp ; pop rbp ; ret
0x0000000000416b0c : movsb byte ptr [rdi], byte ptr [rsi] ; adc al, byte ptr [rax] ; add al, ah ; sar edi, 1 ; call qword ptr [rax]
0x0000000000410a9a : movsx eax, cl ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402675 : movzx eax, al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040aca3 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000402a1b : movzx eax, al ; pop rbp ; ret
0x0000000000413cb8 : nop dword ptr [rax + rax] ; ret
0x0000000000415581 : or al, 0 ; add al, dl ; adc bh, bh ; call rax
0x0000000000404f6d : or al, 0x18 ; ret 0x6451
0x0000000000415545 : or al, 0xffffffffffffffff ; call rax
0x000000000040b26d : or al, 1 ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040849b : or dword ptr [rsp + rax + 0x21], esp ; ret 0xd709
0x00000000004065b1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000415541 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; or al, 0xffffffffffffffff ; call rax
0x0000000000410206 : out dx, al ; call 0x4933035b
0x0000000000401bc5 : outsb dx, byte ptr [rsi] ; push rdi ; and dword ptr [rax], eax ; add ebx, esi ; ret
0x0000000000413cac : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405e51 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000413cae : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405e53 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000413cb0 : pop r14 ; pop r15 ; ret
0x0000000000405c03 : pop r14 ; pop rbp ; ret
0x0000000000405e55 : pop r15 ; pop rbp ; ret
0x0000000000413cb2 : pop r15 ; ret
0x0000000000401bc2 : pop rbp ; mov byte ptr [rip + 0x21576e], 1 ; ret
0x0000000000401b61 : pop rbp ; mov edi, 0x6172e0 ; jmp rax
0x0000000000401b9e : pop rbp ; mov rsi, rax ; mov edi, 0x6172e0 ; jmp rdx
0x0000000000413cab : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000413caf : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401b55 : pop rbp ; ret
0x0000000000405e50 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004073bd : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405c02 : pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004084c5 : pop rbx ; pop rbp ; ret
0x0000000000407541 : pop rbx ; ret
0x000000000040b342 : pop rcx ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405e56 : pop rdi ; pop rbp ; ret
0x0000000000413cb3 : pop rdi ; ret
0x000000000040d9e6 : pop rdx ; ret
0x0000000000405e54 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000413cb1 : pop rsi ; pop r15 ; ret
0x0000000000405c04 : pop rsi ; pop rbp ; ret
0x0000000000413cad : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405e52 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004155ff : push qword ptr [rax + 0x5000000e] ; and bh, bh ; call rax
0x000000000041567f : push qword ptr [rax + 0x60000010] ; sub bh, bh ; call rax
0x000000000041553f : push qword ptr [rax + 0xb] ; or al, 0xffffffffffffffff ; call rax
0x00000000004155bf : push qword ptr [rax + 0xd] ; adc edi, edi ; call rax
0x000000000041557f : push qword ptr [rax - 0x2ffffff4] ; adc bh, bh ; call rax
0x00000000004156bf : push qword ptr [rax - 0x5fffffef] ; xor edi, edi ; call rax
0x00000000004156ff : push qword ptr [rax - 0x7fffffee] ; cmp edi, edi ; call rax
0x000000000041568f : push rax ; adc byte ptr [rax], al ; add byte ptr [rax], ah ; sub edi, edi ; call qword ptr [rax]
0x00000000004156cf : push rax ; adc dword ptr [rax], eax ; add al, dl ; xor al, 0xffffffffffffffff ; call qword ptr [rax]
0x0000000000415604 : push rax ; and bh, bh ; call rax
0x000000000040634e : push rax ; pop rbp ; ret
0x000000000041422e : push rax ; ret
0x0000000000411e8c : push rbp ; call 0x21039fde
0x000000000040a263 : push rbp ; call 0x323b5
0x0000000000411189 : push rbp ; cld ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040ae33 : push rbp ; enter -0x76b8, 0xc ; ret 0x59e9
0x000000000040396a : push rbp ; fmul dword ptr [rax + 0x29] ; ret 0x148
0x0000000000412fde : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 1
0x00000000004036fa : push rbp ; mov al, -0x18 ; jmp rdx
0x0000000000401be4 : push rbp ; mov edi, 0x616e20 ; mov rbp, rsp ; call rax
0x000000000040d9e5 : push rbx ; pop rdx ; ret
0x0000000000401bc6 : push rdi ; and dword ptr [rax], eax ; add ebx, esi ; ret
0x000000000041232f : push rsp ; cmp byte ptr [rcx - 0x77], al ; ret 0x8141
0x0000000000412323 : push rsp ; cmp byte ptr [rcx], ah ; ret 0x8941
0x0000000000415754 : rcr byte ptr [rdi - 1] ; call qword ptr [rax]
0x0000000000401659 : ret
0x00000000004094c2 : ret 0
0x000000000040b335 : ret 0x10
0x00000000004032df : ret 0x148
0x000000000040b4e6 : ret 0x14e8
0x0000000000409945 : ret 0x18
0x0000000000405fee : ret 0x1b2
0x00000000004114a8 : ret 0x1fe4
0x0000000000411e90 : ret 0x20
0x0000000000401a32 : ret 0x2157
0x0000000000401832 : ret 0x2158
0x000000000040b9d9 : ret 0x21e8
0x00000000004031e2 : ret 0x2948
0x0000000000405379 : ret 0x294c
0x0000000000405395 : ret 0x294d
0x0000000000411533 : ret 0x3eeb
0x0000000000407719 : ret 0x414d
0x000000000040b6b6 : ret 0x44e8
0x0000000000411146 : ret 0x4589
0x000000000040a71a : ret 0x4a3b
0x0000000000411a27 : ret 0x54c8
0x00000000004045d4 : ret 0x5589
0x000000000040ae38 : ret 0x59e9
0x000000000041121b : ret 0x5ef2
0x0000000000404f6f : ret 0x6451
0x0000000000411984 : ret 0x651d
0x00000000004053ad : ret 0x6de8
0x00000000004115cc : ret 0x744a
0x000000000041113e : ret 0x8041
0x0000000000407feb : ret 0x8141
0x00000000004079fc : ret 0x8148
0x0000000000411bea : ret 0x8334
0x0000000000402d3f : ret 0x840
0x000000000040e337 : ret 0x8589
0x0000000000405613 : ret 0x8840
0x0000000000406eb9 : ret 0x8844
0x00000000004083fe : ret 0x8941
0x0000000000403686 : ret 0x8948
0x0000000000405398 : ret 0x8949
0x000000000040552c : ret 0x89a5
0x000000000040c7b5 : ret 0x89ee
0x0000000000403624 : ret 0x8b48
0x000000000040e27a : ret 0x90e8
0x0000000000412094 : ret 0x9303
0x000000000041014d : ret 0x9588
0x00000000004020ea : ret 0xb0
0x00000000004094c9 : ret 0xb849
0x000000000040c082 : ret 0xb8e8
0x00000000004096e0 : ret 0xc
0x0000000000411b5d : ret 0xc0c2
0x0000000000401b85 : ret 0xc148
0x0000000000403b0c : ret 0xc2f6
0x0000000000411b6a : ret 0xc4c0
0x0000000000411d94 : ret 0xc996
0x0000000000402afc : ret 0xca21
0x00000000004080d8 : ret 0xca29
0x00000000004024ae : ret 0xd284
0x0000000000412f91 : ret 0xd609
0x000000000040849f : ret 0xd709
0x00000000004124f0 : ret 0xd83a
0x0000000000406d2f : ret 0xdbe8
0x000000000041178b : ret 0xddeb
0x0000000000406a2c : ret 0xdee8
0x000000000040d930 : ret 0xea81
0x0000000000405c3c : ret 0xee8
0x0000000000403c7d : ret 0xf01
0x0000000000405628 : ret 0xf180
0x0000000000402d23 : ret 0xf280
0x0000000000402a7a : ret 0xf281
0x000000000040b126 : ret 0xf4e8
0x000000000040e30d : ret 0xfde8
0x000000000041538d : ret 0xfffe
0x000000000040a267 : ret 0xffff
0x000000000040327b : ret 1
0x0000000000409290 : ret 2
0x0000000000411221 : ret 8
0x0000000000415910 : rol ah, -2 ; jmp rdx
0x0000000000404696 : rol byte ptr [rcx + rcx*4], 1 ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040ae2f : ror byte ptr [r8 - 0x75], 0x55 ; enter -0x76b8, 0xc ; ret 0x59e9
0x0000000000408c87 : ror byte ptr [r8 - 0x75], 1 ; add byte ptr [rax - 0x75], cl ; jge 0x408c51 ; call rax
0x0000000000407520 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000404820 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x40488b ; ret
0x0000000000401b8c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401b9b ; pop rbp ; ret
0x000000000040ae30 : ror byte ptr [rax - 0x75], 0x55 ; enter -0x76b8, 0xc ; ret 0x59e9
0x0000000000408a76 : ror byte ptr [rax - 0x75], 1 ; adc byte ptr [rax - 0x75], cl ; jge 0x408a48 ; call rax
0x0000000000408c09 : ror byte ptr [rax - 0x75], 1 ; adc byte ptr [rax - 0x75], cl ; jge 0x408bdb ; call rax
0x0000000000408c88 : ror byte ptr [rax - 0x75], 1 ; add byte ptr [rax - 0x75], cl ; jge 0x408c50 ; call rax
0x0000000000408cb9 : ror byte ptr [rax - 0x75], 1 ; sbb byte ptr [rax - 0x75], cl ; jge 0x408c83 ; call rax
0x000000000040aca5 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x0000000000407521 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x000000000040536d : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000405376 : ror byte ptr [rax - 0x77], 1 ; ret 0x294c
0x0000000000404821 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x40488a ; ret
0x0000000000404013 : ror byte ptr [rax - 0x7f], -0x3c ; jo 0x404023 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040bd9f : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x00000000004156d4 : sal byte ptr [rdi + rdi*8], 1 ; call qword ptr [rax]
0x0000000000401b8e : sar eax, 1 ; jne 0x401b99 ; pop rbp ; ret
0x0000000000416b11 : sar edi, 1 ; call qword ptr [rax]
0x0000000000415b31 : sar esi, 1 ; jmp rdx
0x0000000000415bf1 : sar esi, cl ; call qword ptr [rsi]
0x0000000000401b8d : sar rax, 1 ; jne 0x401b9a ; pop rbp ; ret
0x0000000000408cbd : sbb byte ptr [rax - 0x75], cl ; jge 0x408c7f ; call rax
0x0000000000408cbc : sbb byte ptr [rax - 0x75], cl ; jge 0x408c80 ; call rax
0x0000000000411979 : sbb eax, 0x81d55b65 ; ret 8
0x0000000000410df8 : setne al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000410dfa : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000402a18 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000415685 : sub bh, bh ; call rax
0x0000000000416758 : sub byte ptr [rbx - 1], cl ; jmp qword ptr [rcx]
0x0000000000415eb0 : sub cl, -2 ; call rdi
0x000000000040753f : sub dword ptr [rdx], 0x5b ; ret
0x0000000000415695 : sub edi, edi ; call qword ptr [rax]
0x0000000000413d01 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000413d00 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040849a : test al, 9 ; add al, 0x21 ; ret 0xd709
0x0000000000413cba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000415bec : test byte ptr [rbx], al ; add byte ptr [rax], al ; adc bl, -2 ; call qword ptr [rsi]
0x0000000000413248 : vrsqrtps xmm8, xmmword ptr [rcx] ; jmp rcx
0x000000000040b341 : wait ; pop rcx ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000415388 : xchg eax, ebp ; add byte ptr [rax], al ; add al, ah ; ret 0xfffe
0x000000000041113d : xchg eax, ebp ; ret 0x8041
0x0000000000405612 : xchg eax, ebp ; ret 0x8840
0x0000000000410cc6 : xchg eax, ebp ; ret 0xd284
0x0000000000410df9 : xchg eax, ebp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000410204 : xchg eax, ebx ; add dh, ch ; call 0x4933035d
0x000000000041014c : xchg eax, esp ; ret 0x9588
0x00000000004024ad : xchg eax, esp ; ret 0xd284
0x0000000000407717 : xor al, 0x25 ; ret 0x414d
0x00000000004032d6 : xor al, 0x6a ; imul eax, dword ptr [rax - 0x77], 0x7a ; add cl, byte ptr [rax - 0x77] ; ret 0x148
0x00000000004156d5 : xor al, 0xffffffffffffffff ; call qword ptr [rax]
0x00000000004095be : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040238a : xor byte ptr [rdx + 0x61], 0 ; pop rbp ; ret
0x0000000000406347 : xor eax, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x0000000000404695 : xor eax, edx ; mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004156c5 : xor edi, edi ; call rax
0x0000000000411186 : xor edx, eax ; mov dword ptr [rbp - 4], edx ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
