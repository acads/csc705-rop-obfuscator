0x00000000004039b9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401109 : adc eax, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004070eb : add al, al ; fdivp st(7) ; jmp qword ptr [rax]
0x000000000040709b : add al, al ; sar bh, cl ; jmp rax
0x0000000000401866 : add al, bpl ; ret
0x0000000000401867 : add al, ch ; ret
0x000000000040634f : add bl, dh ; ret
0x00000000004049fd : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000040634d : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040634b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040634c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040305e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x00000000004042ce : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004057ac : add byte ptr [rax], al ; add cl, ch ; ret 2
0x0000000000403981 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403690 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040110b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000401169 : add byte ptr [rax], al ; jmp 0x401129
0x0000000000407ae2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; or byte ptr [rax], al ; add byte ptr [rax], cl ; loopne 0x407af3 ; jmp rax
0x0000000000401f52 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004070aa : add byte ptr [rax], al ; nop ; fcos ; jmp qword ptr [rax]
0x0000000000407c86 : add byte ptr [rax], al ; pop rax ; jrcxz 0x407c8f ; jmp rdx
0x0000000000401d48 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040489b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403650 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040709a : add byte ptr [rax], al ; rcl dl, -1 ; jmp rax
0x00000000004070ea : add byte ptr [rax], al ; rcr dh, -1 ; jmp qword ptr [rax]
0x000000000040634e : add byte ptr [rax], al ; ret
0x00000000004071ea : add byte ptr [rax], al ; sal bl, -1 ; jmp qword ptr [rax]
0x0000000000407ae7 : add byte ptr [rax], cl ; loopne 0x407aee ; jmp rax
0x000000000040711b : add byte ptr [rax], dl ; loope 0x407122 ; jmp rax
0x000000000040489c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000403651 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x00000000004061ec : add byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x0000000000401518 : add byte ptr [rcx], al ; ret
0x00000000004070a8 : add byte ptr [rcx], cl ; add byte ptr [rax], al ; nop ; fcos ; jmp qword ptr [rax]
0x00000000004057a8 : add byte ptr [rdi], cl ; lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000403060 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x00000000004042d0 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004070e8 : add byte ptr [rdx], cl ; add byte ptr [rax], al ; rcr dh, -1 ; jmp qword ptr [rax]
0x00000000004071e8 : add byte ptr [rsi], cl ; add byte ptr [rax], al ; sal bl, -1 ; jmp qword ptr [rax]
0x00000000004057ae : add cl, ch ; ret 2
0x0000000000404ed9 : add dword ptr [rax - 0x77], ecx ; ret 0x8148
0x000000000040397f : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040489a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040364f : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x00000000004060ad : add dword ptr [rax], ecx ; ret 0x840
0x0000000000405d8a : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401514 : add eax, 0x206d66 ; add ebx, esi ; ret
0x00000000004057ab : add eax, 0xe9000000 ; ret 2
0x00000000004014db : add eax, edx ; sar rax, 1 ; jne 0x4014ec ; pop rbp ; ret
0x0000000000401519 : add ebx, esi ; ret
0x000000000040164b : add esp, 0x10 ; pop rbp ; ret
0x0000000000405adc : add esp, 0x130 ; pop rbp ; ret
0x0000000000404bcc : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000401d44 : add esp, 0x1c0 ; pop rbp ; ret
0x0000000000401b17 : add esp, 0x20 ; pop rbp ; ret
0x000000000040172d : add esp, 0x30 ; pop rbp ; ret
0x0000000000403d9c : add esp, 0x50 ; pop rbp ; ret
0x0000000000402273 : add esp, 0x70 ; pop rbp ; ret
0x0000000000403caa : add esp, 0x90 ; pop rbp ; ret
0x0000000000404a63 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040110e : add esp, 8 ; ret
0x00000000004014da : add rax, rdx ; sar rax, 1 ; jne 0x4014ed ; pop rbp ; ret
0x000000000040164a : add rsp, 0x10 ; pop rbp ; ret
0x0000000000405adb : add rsp, 0x130 ; pop rbp ; ret
0x0000000000404bcb : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000401d43 : add rsp, 0x1c0 ; pop rbp ; ret
0x0000000000401b16 : add rsp, 0x20 ; pop rbp ; ret
0x000000000040172c : add rsp, 0x30 ; pop rbp ; ret
0x0000000000403d9b : add rsp, 0x50 ; pop rbp ; ret
0x0000000000402272 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000403ca9 : add rsp, 0x90 ; pop rbp ; ret
0x0000000000404a62 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040110d : add rsp, 8 ; ret
0x0000000000405d89 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401517 : and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000403a37 : and dword ptr [rax], 0x81d8558b ; ret 0x1b2
0x000000000040189f : and eax, 0x608288 ; pop rbp ; ret
0x00000000004018c3 : and eax, 0x608290 ; pop rbp ; ret
0x0000000000404f95 : call 0x401282
0x0000000000403689 : call 0xffffffffe902bfd9
0x0000000000403688 : call 0xffffffffe902bfda
0x0000000000406329 : call qword ptr [r12 + rbx*8]
0x0000000000407303 : call qword ptr [rsi]
0x000000000040632a : call qword ptr [rsp + rbx*8]
0x000000000040153d : call rax
0x00000000004033dc : call rbx
0x00000000004074c3 : call rdi
0x0000000000405ada : clc ; add rsp, 0x130 ; pop rbp ; ret
0x0000000000404dcf : clc ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004042e1 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004014df : clc ; jne 0x4014e8 ; pop rbp ; ret
0x0000000000402125 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040626f : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000406272 : clc ; pop rbp ; ret
0x0000000000405c26 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004052bb : cld ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004051fa : cld ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040626c : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000405c23 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405bc6 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004051f7 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401862 : cmp al, 0x25 ; insd dword ptr [rdi], dx ; add al, bpl ; ret
0x000000000040149d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4014b0 ; pop rbp ; ret
0x00000000004043dc : cwde ; mov rcx, qword ptr [rax*8 + 0x406b68] ; jmp rcx
0x0000000000405814 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000402de2 : dec dword ptr [rcx - 0x77] ; ret 0x294d
0x0000000000403170 : enter 0x4b05, 0x34 ; fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x00000000004070ad : fcos ; jmp qword ptr [rax]
0x00000000004070ed : fdivp st(7) ; jmp qword ptr [rax]
0x0000000000403174 : fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x000000000040632c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000404278 : fsubr st(0) ; ret 0xe
0x0000000000401649 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004014b0 : hlt ; pop rbp ; mov edi, 0x608228 ; jmp rax
0x00000000004070e7 : inc dword ptr [rax] ; or al, byte ptr [rax] ; add al, al ; fdivp st(7) ; jmp qword ptr [rax]
0x00000000004033fb : inc dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000407117 : inc eax ; or al, byte ptr [rax] ; add byte ptr [rax], dl ; loope 0x407126 ; jmp rax
0x0000000000407097 : inc eax ; or byte ptr [rax], al ; add al, al ; sar bh, cl ; jmp rax
0x0000000000401864 : insd dword ptr [rdi], dx ; add al, bpl ; ret
0x0000000000401516 : insd dword ptr [rdi], dx ; and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000401515 : insw word ptr [rdi], dx ; and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000404a05 : int 0x80
0x00000000004014a3 : ja 0x4014aa ; pop rbp ; ret
0x00000000004014af : je 0x4014ad ; pop rbp ; mov edi, 0x608228 ; jmp rax
0x000000000040116b : jmp 0x401127
0x0000000000404ed8 : jmp 0xffffffffc2c996e2
0x0000000000406fef : jmp qword ptr [rax]
0x0000000000402876 : jmp qword ptr [rcx]
0x00000000004075ab : jmp qword ptr [rdx]
0x00000000004014b7 : jmp rax
0x0000000000402339 : jmp rcx
0x00000000004014f7 : jmp rdx
0x00000000004014e0 : jne 0x4014e7 ; pop rbp ; ret
0x0000000000402275 : jo 0x4022d6 ; ret
0x000000000040389f : jo 0x403905 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403f44 : jo 0x403fa5 ; ret
0x000000000040407e : jo 0x4040df ; ret
0x0000000000407c89 : jrcxz 0x407c8c ; jmp rdx
0x00000000004057aa : lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000407ae4 : lodsb al, byte ptr [rsi] ; or byte ptr [rax], al ; add byte ptr [rax], cl ; loopne 0x407af1 ; jmp rax
0x000000000040711d : loope 0x407120 ; jmp rax
0x000000000040712d : loope 0x407130 ; jmp qword ptr [rax]
0x0000000000407ae9 : loopne 0x407aec ; jmp rax
0x0000000000403e1b : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000403ca8 : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000405d86 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004018c1 : mov byte ptr [0x608290], al ; pop rbp ; ret
0x0000000000401513 : mov byte ptr [rip + 0x206d66], 1 ; ret
0x0000000000405d8c : mov dh, -0x40 ; pop rbp ; ret
0x000000000040189d : mov dword ptr [0x608288], edi ; pop rbp ; ret
0x0000000000402126 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004020e8 : mov dword ptr [rax], eax ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000401fa4 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004020e7 : mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000404f92 : mov dword ptr [rbp - 0x10], eax ; call 0x401285
0x0000000000401729 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401647 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040626d : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040219e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401f58 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000404ceb : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401b13 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401f55 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000401a6f : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000404fe3 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401f0d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401f9e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004020ea : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040226f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000403e19 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000405c24 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004052b9 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004051f8 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404dcd : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004042df : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406270 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040153b : mov ebp, esp ; call rax
0x00000000004014a1 : mov ebp, esp ; ja 0x4014ac ; pop rbp ; ret
0x0000000000404a1d : mov ecx, 0x5b2a830a ; ret
0x0000000000402332 : mov ecx, dword ptr [rax*8 + 0x406660] ; jmp rcx
0x0000000000402656 : mov ecx, dword ptr [rax*8 + 0x4066a8] ; jmp rcx
0x00000000004043de : mov ecx, dword ptr [rax*8 + 0x406b68] ; jmp rcx
0x0000000000401fa1 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401535 : mov edi, 0x607e20 ; mov rbp, rsp ; call rax
0x00000000004014b2 : mov edi, 0x608228 ; jmp rax
0x00000000004014f2 : mov edi, 0x608228 ; jmp rdx
0x0000000000404f8f : mov edi, eax ; mov qword ptr [rbp - 0x10], rax ; call 0x401288
0x0000000000406327 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000406326 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x00000000004014f0 : mov esi, eax ; mov edi, 0x608228 ; jmp rdx
0x000000000040189c : mov qword ptr [0x608288], rdi ; pop rbp ; ret
0x0000000000404f91 : mov qword ptr [rbp - 0x10], rax ; call 0x401286
0x000000000040219d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403e1a : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000404cea : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401b12 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401f54 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000401a6e : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000404fe2 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401f0c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040226e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000403e18 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000404dcc : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004042de : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040153a : mov rbp, rsp ; call rax
0x00000000004014a0 : mov rbp, rsp ; ja 0x4014ad ; pop rbp ; ret
0x0000000000402331 : mov rcx, qword ptr [rax*8 + 0x406660] ; jmp rcx
0x0000000000402655 : mov rcx, qword ptr [rax*8 + 0x4066a8] ; jmp rcx
0x00000000004043dd : mov rcx, qword ptr [rax*8 + 0x406b68] ; jmp rcx
0x0000000000404f8e : mov rdi, rax ; mov qword ptr [rbp - 0x10], rax ; call 0x401289
0x00000000004014ef : mov rsi, rax ; mov edi, 0x608228 ; jmp rdx
0x0000000000405d8b : movzx eax, al ; pop rbp ; ret
0x00000000004070ac : nop ; fcos ; jmp qword ptr [rax]
0x0000000000406348 : nop dword ptr [rax + rax] ; ret
0x00000000004029bd : or al, 0x18 ; ret 0x6451
0x00000000004070e9 : or al, byte ptr [rax] ; add al, al ; fdivp st(7) ; jmp qword ptr [rax]
0x0000000000407119 : or al, byte ptr [rax] ; add byte ptr [rax], dl ; loope 0x407124 ; jmp rax
0x0000000000407099 : or byte ptr [rax], al ; add al, al ; sar bh, cl ; jmp rax
0x0000000000407ae5 : or byte ptr [rax], al ; add byte ptr [rax], cl ; loopne 0x407af0 ; jmp rax
0x0000000000404001 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040633c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004038a1 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040633e : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004038a3 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406340 : pop r14 ; pop r15 ; ret
0x0000000000403653 : pop r14 ; pop rbp ; ret
0x00000000004038a5 : pop r15 ; pop rbp ; ret
0x0000000000406342 : pop r15 ; ret
0x0000000000407c88 : pop rax ; jrcxz 0x407c8d ; jmp rdx
0x0000000000401512 : pop rbp ; mov byte ptr [rip + 0x206d66], 1 ; ret
0x00000000004014b1 : pop rbp ; mov edi, 0x608228 ; jmp rax
0x00000000004014ee : pop rbp ; mov rsi, rax ; mov edi, 0x608228 ; jmp rdx
0x000000000040633b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040633f : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004014a5 : pop rbp ; ret
0x00000000004038a0 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040489d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403652 : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000404a21 : pop rbx ; ret
0x00000000004038a6 : pop rdi ; pop rbp ; ret
0x0000000000406343 : pop rdi ; ret
0x00000000004038a4 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000406341 : pop rsi ; pop r15 ; ret
0x0000000000403654 : pop rsi ; pop rbp ; ret
0x000000000040633d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004038a2 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000401e8b : push 0x48006082 ; add esp, 0x30 ; pop rbp ; ret
0x0000000000403d9e : push rax ; pop rbp ; ret
0x0000000000401534 : push rbp ; mov edi, 0x607e20 ; mov rbp, rsp ; call rax
0x000000000040709c : rcl dl, -1 ; jmp rax
0x00000000004070ec : rcr dh, -1 ; jmp qword ptr [rax]
0x0000000000401111 : ret
0x00000000004059e2 : ret 0
0x00000000004059f6 : ret 0x148
0x0000000000403a3e : ret 0x1b2
0x0000000000401372 : ret 0x206d
0x0000000000401172 : ret 0x206e
0x0000000000401af5 : ret 0x2948
0x0000000000402dc9 : ret 0x294c
0x0000000000402de5 : ret 0x294d
0x0000000000400296 : ret 0x348
0x0000000000402024 : ret 0x5589
0x00000000004029bf : ret 0x6451
0x0000000000404edc : ret 0x8148
0x00000000004060af : ret 0x840
0x0000000000403063 : ret 0x8840
0x0000000000404399 : ret 0x8844
0x0000000000404ef0 : ret 0x8948
0x0000000000402de8 : ret 0x8949
0x0000000000402f7c : ret 0x89a5
0x0000000000402dcc : ret 0x8b48
0x0000000000401878 : ret 0xb0
0x00000000004059e9 : ret 0xb849
0x0000000000402dfd : ret 0xbde8
0x00000000004014d5 : ret 0xc148
0x0000000000405750 : ret 0xc2f6
0x00000000004027e4 : ret 0xca21
0x00000000004042d3 : ret 0xd284
0x000000000040427a : ret 0xe
0x000000000040368c : ret 0xee8
0x0000000000403078 : ret 0xf180
0x0000000000405743 : ret 0xf280
0x000000000040285e : ret 0xf281
0x0000000000404f97 : ret 0xffff
0x0000000000403a44 : ret 1
0x00000000004057b0 : ret 2
0x00000000004020e6 : rol byte ptr [rcx + rcx*4], 1 ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000404a00 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000402270 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x4022db ; ret
0x00000000004014dc : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4014eb ; pop rbp ; ret
0x0000000000404a01 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000402dbd : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000402dc6 : ror byte ptr [rax - 0x77], 1 ; ret 0x294c
0x0000000000402271 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x4022da ; ret
0x0000000000407098 : ror byte ptr [rax], 0 ; add al, al ; sar bh, cl ; jmp rax
0x0000000000407118 : ror byte ptr [rdx], 0 ; add byte ptr [rax], dl ; loope 0x407125 ; jmp rax
0x00000000004071d8 : ror byte ptr [rip - 0xd000000], -1 ; jmp rax
0x00000000004071ec : sal bl, -1 ; jmp qword ptr [rax]
0x000000000040705d : sar bh, 1 ; jmp rax
0x000000000040709d : sar bh, cl ; jmp rax
0x00000000004014de : sar eax, 1 ; jne 0x4014e9 ; pop rbp ; ret
0x000000000040706d : sar edi, 1 ; jmp qword ptr [rax]
0x00000000004014dd : sar rax, 1 ; jne 0x4014ea ; pop rbp ; ret
0x0000000000405d88 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000404a1f : sub dword ptr [rdx], 0x5b ; ret
0x000000000040637d : sub esp, 8 ; add rsp, 8 ; ret
0x000000000040637c : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040634a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000403062 : xchg eax, ebp ; ret 0x8840
0x00000000004042d2 : xchg eax, esp ; ret 0xd284
0x0000000000405ade : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000403d97 : xor eax, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x00000000004020e5 : xor eax, edx ; mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
