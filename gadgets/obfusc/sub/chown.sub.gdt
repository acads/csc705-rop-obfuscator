0x0000000000410208 : adc al, -0x75 ; hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040c1fc : adc al, byte ptr [rcx + 0x4f9] ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x000000000040b492 : adc dword ptr [rcx - 0xa], eax ; jmp qword ptr [rcx]
0x0000000000406099 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000413ef7 : add ah, bh ; cmp bh, bh ; call rsp
0x00000000004141ef : add ah, ch ; ret 0xffff
0x0000000000414795 : add al, 0 ; add al, cl ; add edi, edi ; call rdi
0x000000000040e20a : add al, 0x48 ; add eax, ecx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041499f : add al, al ; sbb al, -1 ; jmp qword ptr [rax]
0x00000000004032f7 : add al, ch ; ret
0x0000000000414797 : add al, cl ; add edi, edi ; call rdi
0x0000000000411e3f : add bl, dh ; ret
0x000000000040696f : add byte ptr [r8 - 0x73], cl ; or al, 0x25 ; ret 0x4135
0x000000000040da44 : add byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000040a738 : add byte ptr [rax + 1], cl ; ret 0x8b48
0x0000000000406970 : add byte ptr [rax - 0x73], cl ; or al, 0x25 ; ret 0x4135
0x000000000040e51f : add byte ptr [rax - 0x75], cl ; fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x000000000040272c : add byte ptr [rax - 0x75], cl ; push rbp ; call 0xffffffffc27cb285
0x000000000040776d : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000402522 : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x0000000000411e3d : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040da42 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000040a736 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8b48
0x000000000040e51d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x0000000000402520 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x0000000000411e3b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040ebbd : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040af32 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000408759 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040441b : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040293a : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000411e3c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000041314c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4051
0x00000000004090b6 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000402b15 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7478b], cl ; ret 0xb0
0x0000000000402bae : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b74b8b], cl ; ret 0xb0
0x0000000000408adb : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x00000000004095a8 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000409a1b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x000000000040573e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x000000000040c200 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x0000000000403a3b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000408bcf : add byte ptr [rax], al ; add cl, ch ; ret
0x00000000004106fc : add byte ptr [rax], al ; add cl, ch ; ret 2
0x0000000000406061 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405d70 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004029a1 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040af34 : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004017ab : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000413ef6 : add byte ptr [rax], al ; cld ; cmp bh, bh ; call rsp
0x00000000004141ee : add byte ptr [rax], al ; in al, dx ; ret 0xffff
0x00000000004018c9 : add byte ptr [rax], al ; jmp 0x4017c9
0x0000000000413eb6 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; sub edi, edi ; call rsp
0x0000000000415142 : add byte ptr [rax], al ; mov ah, 0xd ; add byte ptr [rax], al ; sbb byte ptr [rdi - 1], bh ; call qword ptr [rdx]
0x000000000040875b : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000404632 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040441d : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004158c6 : add byte ptr [rax], al ; mov spl, -1 ; jmp rax
0x000000000040293c : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040760b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405d30 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004090b7 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000041432e : add byte ptr [rax], al ; pop rsp ; loope 0x414337 ; jmp rsp
0x00000000004141f6 : add byte ptr [rax], al ; pop rsp ; ret
0x0000000000413e76 : add byte ptr [rax], al ; pushfq ; sub edi, edi ; call rsp
0x0000000000411e3e : add byte ptr [rax], al ; ret
0x000000000041314e : add byte ptr [rax], al ; ret 0x4051
0x0000000000415146 : add byte ptr [rax], al ; sbb byte ptr [rdi - 1], bh ; call qword ptr [rdx]
0x0000000000415326 : add byte ptr [rax], al ; xchg dil, dil ; jmp qword ptr [rcx]
0x0000000000415322 : add byte ptr [rax], al ; xchg eax, esp ; sldt word ptr [rax] ; xchg dil, dil ; jmp qword ptr [rcx]
0x00000000004158c2 : add byte ptr [rax], al ; xor al, 0x15 ; add byte ptr [rax], al ; mov spl, -1 ; jmp rax
0x0000000000415147 : add byte ptr [rax], bl ; jg 0x41514e ; call qword ptr [rdx]
0x00000000004158e7 : add byte ptr [rax], cl ; mov ch, -1 ; call qword ptr [rsi]
0x00000000004158e3 : add byte ptr [rbp + rdx], dl ; add byte ptr [rax], cl ; mov ch, -1 ; call qword ptr [rsi]
0x0000000000408acd : add byte ptr [rbp - 0x77], al ; ret 0x3145
0x0000000000409a30 : add byte ptr [rbp - 0x77], al ; ret 0x8141
0x000000000040760c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000405d31 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x00000000004090b8 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000402b17 : add byte ptr [rbx - 0x76b7478b], cl ; ret 0xb0
0x0000000000402bb0 : add byte ptr [rbx - 0x76b74b8b], cl ; ret 0xb0
0x0000000000408add : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x00000000004095aa : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000411cdc : add byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x000000000041432f : add byte ptr [rcx - 1], bl ; jmp rsp
0x0000000000401d48 : add byte ptr [rcx], al ; ret
0x0000000000413e37 : add byte ptr [rdi - 1], bl ; call rsp
0x00000000004106f8 : add byte ptr [rdi], cl ; lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000409a1d : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000405740 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x000000000040c202 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x0000000000403a3d : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040e07d : add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x0000000000408bd1 : add cl, ch ; ret
0x00000000004106fe : add cl, ch ; ret 2
0x000000000040ffc2 : add dword ptr [rax + 0xf], eax ; mov dh, -0x39 ; pop rbp ; ret
0x000000000040db21 : add dword ptr [rax + 0xf], eax ; mov dh, -0x3a ; pop rbp ; ret
0x0000000000407c49 : add dword ptr [rax - 0x77], ecx ; ret 0x8148
0x000000000040605f : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040760a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000405d2f : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040c5fc : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004035a6 : add dword ptr [rax], ecx ; ret 0x840
0x000000000041008b : add dword ptr [rdi + rcx - 0x4a], eax ; ret 0xee81
0x00000000004099bf : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040daa2 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000409224 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040ca7d : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000402bc6 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000407fd6 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000408bcb : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret
0x000000000040d634 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x5588
0x0000000000401d44 : add eax, 0x21462e ; add ebx, esi ; ret
0x0000000000408bce : add eax, 0xe9000000 ; ret
0x00000000004106fb : add eax, 0xe9000000 ; ret 2
0x000000000040c27b : add eax, 0xf000000 ; xchg eax, esp ; ret 0x9588
0x000000000040e20c : add eax, ecx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401d0b : add eax, edx ; sar rax, 1 ; jne 0x401d1c ; pop rbp ; ret
0x0000000000401d49 : add ebx, esi ; ret
0x0000000000414799 : add edi, edi ; call rdi
0x0000000000401fcb : add esp, 0x10 ; pop rbp ; ret
0x000000000040c5f9 : add esp, 0x108 ; pop rbx ; pop rbp ; ret
0x0000000000410a2c : add esp, 0x130 ; pop rbp ; ret
0x000000000040793c : add esp, 0x1a0 ; pop rbp ; ret
0x000000000040dd4c : add esp, 0x1b0 ; pop rbp ; ret
0x00000000004111fe : add esp, 0x1e0 ; pop rbp ; ret
0x0000000000403790 : add esp, 0x1f0 ; pop rbp ; ret
0x0000000000404227 : add esp, 0x20 ; pop rbp ; ret
0x00000000004020ad : add esp, 0x30 ; pop rbp ; ret
0x0000000000409e31 : add esp, 0x40 ; pop rbp ; ret
0x000000000040d16c : add esp, 0x48 ; pop rbx ; pop rbp ; ret
0x000000000040647c : add esp, 0x50 ; pop rbp ; ret
0x0000000000402bcb : add esp, 0x60 ; pop rbp ; ret
0x0000000000404953 : add esp, 0x70 ; pop rbp ; ret
0x000000000040ef73 : add esp, 0x80 ; pop rbp ; ret
0x000000000040638a : add esp, 0x90 ; pop rbp ; ret
0x00000000004090b3 : add esp, 0x98 ; pop rbx ; pop rbp ; ret
0x0000000000406a38 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040f6ac : add esp, 0xc0 ; pop rbp ; ret
0x0000000000403e5e : add esp, 0xd0 ; pop rbp ; ret
0x0000000000403aab : add esp, 0xe0 ; pop rbp ; ret
0x00000000004017ae : add esp, 8 ; ret
0x000000000040e20b : add rax, rcx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401d0a : add rax, rdx ; sar rax, 1 ; jne 0x401d1d ; pop rbp ; ret
0x0000000000401fca : add rsp, 0x10 ; pop rbp ; ret
0x000000000040c5f8 : add rsp, 0x108 ; pop rbx ; pop rbp ; ret
0x0000000000410a2b : add rsp, 0x130 ; pop rbp ; ret
0x000000000040793b : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000040dd4b : add rsp, 0x1b0 ; pop rbp ; ret
0x00000000004111fd : add rsp, 0x1e0 ; pop rbp ; ret
0x000000000040378f : add rsp, 0x1f0 ; pop rbp ; ret
0x0000000000404226 : add rsp, 0x20 ; pop rbp ; ret
0x00000000004020ac : add rsp, 0x30 ; pop rbp ; ret
0x0000000000409e30 : add rsp, 0x40 ; pop rbp ; ret
0x000000000040d16b : add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x000000000040647b : add rsp, 0x50 ; pop rbp ; ret
0x0000000000402bca : add rsp, 0x60 ; pop rbp ; ret
0x0000000000404952 : add rsp, 0x70 ; pop rbp ; ret
0x000000000040ef72 : add rsp, 0x80 ; pop rbp ; ret
0x0000000000406389 : add rsp, 0x90 ; pop rbp ; ret
0x00000000004090b2 : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x0000000000406a37 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040f6ab : add rsp, 0xc0 ; pop rbp ; ret
0x0000000000403e5d : add rsp, 0xd0 ; pop rbp ; ret
0x0000000000403aaa : add rsp, 0xe0 ; pop rbp ; ret
0x00000000004017ad : add rsp, 8 ; ret
0x0000000000407fd5 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040ffc0 : and bh, 1 ; movzx eax, dil ; pop rbp ; ret
0x0000000000403152 : and byte ptr [r15], cl ; xchg eax, esp ; ret 0x9588
0x0000000000409b4b : and byte ptr [rbx + 0x41], bl ; pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403153 : and byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x000000000040db1f : and dh, 1 ; movzx eax, sil ; pop rbp ; ret
0x000000000040ffbf : and dil, 1 ; movzx eax, dil ; pop rbp ; ret
0x0000000000401d47 : and dword ptr [rax], eax ; add ebx, esi ; ret
0x0000000000401d46 : and dword ptr [rax], r8d ; add ebx, esi ; ret
0x0000000000401d45 : and dword ptr cs:[rax], r8d ; add ebx, esi ; ret
0x000000000040e625 : and eax, 0x413ca0 ; mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x0000000000403faf : and eax, 0x616398 ; pop rbp ; ret
0x0000000000403fd3 : and eax, 0x6163a0 ; pop rbp ; ret
0x00000000004115b9 : and eax, edx ; xor rdi, rdx ; or rax, rdi ; pop rbp ; ret
0x000000000041183e : and edx, eax ; mov al, dl ; movzx eax, al ; pop rbp ; ret
0x0000000000411718 : and edx, eax ; mov ax, dx ; movzx eax, ax ; pop rbp ; ret
0x00000000004114c7 : and edx, eax ; or r9d, edx ; mov eax, r9d ; pop rbp ; ret
0x00000000004117d3 : and edx, ebx ; mov al, dl ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000041183d : and edx, r8d ; mov al, dl ; movzx eax, al ; pop rbp ; ret
0x000000000040db1e : and sil, 1 ; movzx eax, sil ; pop rbp ; ret
0x0000000000401de4 : call 0x401a39
0x0000000000402f48 : call 0x8ff237
0x0000000000402730 : call 0xffffffffc27cb281
0x0000000000405d69 : call 0xffffffffe902e6b9
0x0000000000405d68 : call 0xffffffffe902e6ba
0x000000000040eb11 : call 0xffffffffff7a7662
0x000000000040eb10 : call 0xffffffffff7a7663
0x000000000040ec4f : call 0xffffffffff7a77a0
0x000000000040ec4e : call 0xffffffffff7a77a1
0x0000000000411e19 : call qword ptr [r12 + rbx*8]
0x0000000000414e83 : call qword ptr [rax]
0x000000000041453b : call qword ptr [rbx]
0x0000000000414ee3 : call qword ptr [rcx]
0x000000000041514b : call qword ptr [rdx]
0x000000000041459b : call qword ptr [rsi]
0x0000000000411e1a : call qword ptr [rsp + rbx*8]
0x0000000000401d6d : call rax
0x0000000000405abc : call rbx
0x000000000041479b : call rdi
0x0000000000413e3b : call rsp
0x000000000040feba : clc ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000410a2a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x0000000000407b3f : clc ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004069c1 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040d004 : clc ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004098da : clc ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040f885 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040adc2 : clc ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000406a36 : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x000000000040fdb0 : clc ; add rsp, 0xc0 ; pop rbp ; ret
0x0000000000401d0f : clc ; jne 0x401d18 ; pop rbp ; ret
0x00000000004116aa : clc ; mov ax, r8w ; movzx eax, ax ; pop rbp ; ret
0x000000000041014a : clc ; mov byte ptr [rax + 0x1c], 0 ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000404805 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000410038 : clc ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x000000000040d20e : clc ; mov dword ptr [rcx + 0x18], eax ; pop rbp ; ret
0x000000000040ccc6 : clc ; mov dword ptr [rcx + 0x2c], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d987 : clc ; mov dword ptr [rdi + 0x18], 0x95f616 ; pop rbp ; ret
0x0000000000411d5f : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040fdee : clc ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x00000000004028e7 : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040dd6b : clc ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040dd8b : clc ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040ddab : clc ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x00000000004113dc : clc ; mov rax, r8 ; pop rbp ; ret
0x00000000004028eb : clc ; pop rbp ; ret
0x0000000000408758 : cld ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000411266 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040cd52 : cld ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d78a : cld ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000409e2f : cld ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040f6aa : cld ; add rsp, 0xc0 ; pop rbp ; ret
0x0000000000403aa9 : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x0000000000413ef8 : cld ; cmp bh, bh ; call rsp
0x0000000000411d5c : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000411263 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000410cfb : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d787 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040875f : cld ; pop rbp ; ret
0x0000000000401deb : cmp al, 0x25 ; ret 0x4121
0x0000000000408412 : cmp al, byte ptr [rcx] ; jmp rcx
0x0000000000413ef9 : cmp bh, bh ; call rsp
0x000000000040e4fa : cmp dword ptr [rax - 0x75], ecx ; jne 0x40e4e4 ; call rax
0x0000000000408492 : cmp dword ptr [rcx], eax ; jmp rcx
0x00000000004110e9 : cmp dword ptr [rdx - 0x76be63d5], ebx ; ret
0x0000000000401ccd : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401ce0 ; pop rbp ; ret
0x000000000040d1a8 : cmp eax, dword ptr [rcx] ; jmp rcx
0x0000000000408a7f : cmpsd dword ptr [rsi], dword ptr [rdi] ; cvttps2pi mm0, qword ptr [rcx - 0xe] ; jmp qword ptr [rcx]
0x0000000000408a80 : cvttps2pi mm0, qword ptr [rcx - 0xe] ; jmp qword ptr [rcx]
0x00000000004090b5 : cwde ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040714c : cwde ; mov rcx, qword ptr [rax*8 + 0x4135f0] ; jmp rcx
0x000000000040b490 : cwde ; pop rdx ; adc dword ptr [rcx - 0xa], eax ; jmp qword ptr [rcx]
0x000000000040b76c : cwde ; sbb byte ptr [rcx - 0xe], al ; jmp qword ptr [rcx]
0x0000000000401de8 : dec dword ptr [rax - 0x73] ; cmp al, 0x25 ; ret 0x4121
0x0000000000410764 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x00000000004025d1 : dec dword ptr [rbx - 0x167e0fb3] ; ret 0x15b1
0x00000000004054c2 : dec dword ptr [rcx - 0x77] ; ret 0x294d
0x000000000040d4d0 : div dword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000040d4cf : div qword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000040e4f7 : enter -0x74b8, 0x39 ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x0000000000406b40 : enter -0x7cb8, -0x3c ; push rax ; pop rbp ; ret
0x000000000040a57e : enter 0x41ed, -0x77 ; ret 0x8141
0x0000000000405850 : enter 0x4b05, 0x34 ; fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x000000000040bbd5 : fadd dword ptr [rcx - 0xe] ; jmp qword ptr [rcx]
0x000000000040d63c : fbld dword ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000040d63d : fbld dword ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x0000000000414439 : fdiv st(6), st(0) ; jmp qword ptr [rax]
0x0000000000405854 : fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x0000000000409a22 : fild dword ptr [rdi + rcx + 0x44] ; ret 0x8941
0x0000000000407e6e : fild word ptr [rbp - 0x76ba39df] ; ret 0x8141
0x00000000004117d4 : fimul dword ptr [rax - 0x3f49f030] ; pop rbx ; pop rbp ; ret
0x000000000040df13 : fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x000000000040df14 : fmul dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000411e1c : fmul qword ptr [rax - 0x7d] ; ret
0x000000000040cfa7 : fsub st(0), st(0) ; ret
0x0000000000401fc9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040c76e : hlt ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000410034 : hlt ; mov rcx, qword ptr [rbp - 8] ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x0000000000401ce0 : hlt ; pop rbp ; mov edi, 0x616308 ; jmp rax
0x000000000040b982 : imul edx, dword ptr [rbx - 0xd7f], -1 ; jmp qword ptr [rcx]
0x000000000040881c : in al, dx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d49d : in al, dx ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000040d4a0 : in al, dx ; pop rbp ; ret
0x00000000004141f0 : in al, dx ; ret 0xffff
0x00000000004141e8 : in al, dx ; sar edi, -1 ; pushfq ; sbb al, byte ptr [rax] ; add ah, ch ; ret 0xffff
0x0000000000402943 : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x0000000000409a3a : inc dword ptr [rcx - 0x77] ; ret
0x0000000000405adb : inc dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000407775 : int 0x80
0x000000000040a16f : int 0x81
0x0000000000401cd3 : ja 0x401cda ; pop rbp ; ret
0x000000000040fdf1 : ja 0x40fe3e ; pop rbp ; ret
0x00000000004002d6 : jbe 0x40027d ; xchg al, dh ; xchg eax, esi ; jl 0x400326 ; ret
0x0000000000401cdf : je 0x401cdd ; pop rbp ; mov edi, 0x616308 ; jmp rax
0x0000000000415149 : jg 0x41514c ; call qword ptr [rdx]
0x00000000004028e6 : jge 0x4028e7 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402946 : jge 0x402943 ; pop rbp ; ret
0x000000000040dd6a : jge 0x40dd6b ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040dd8a : jge 0x40dd8b ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040ddaa : jge 0x40ddab ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000040e160 : jge 0x40e153 ; mov rcx, qword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040f730 : jge 0x40f723 ; mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040fded : jge 0x40fdee ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x00000000004002db : jl 0x400321 ; ret
0x000000000040afbf : jmp 0x373147
0x00000000004018cb : jmp 0x4017c7
0x00000000004025dc : jmp 0x4025e9
0x000000000040e9b0 : jmp 0x49037300
0x000000000040f42e : jmp 0x49037d7e
0x000000000040f49b : jmp 0x49037deb
0x000000000040fc2c : jmp 0x4903857c
0x000000000040fc99 : jmp 0x490385e9
0x0000000000407c48 : jmp 0xffffffffc2c9c452
0x000000000041443b : jmp qword ptr [rax]
0x0000000000403829 : jmp qword ptr [rcx]
0x000000000041560b : jmp qword ptr [rdi]
0x0000000000414883 : jmp qword ptr [rdx]
0x0000000000401ce7 : jmp rax
0x000000000040236f : jmp rcx
0x0000000000401d27 : jmp rdx
0x0000000000414333 : jmp rsp
0x0000000000401d10 : jne 0x401d17 ; pop rbp ; ret
0x000000000040d049 : jne 0x40d02c ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x000000000040d4d1 : jne 0x40d4c9 ; mov rax, rdx ; pop rbp ; ret
0x000000000040d5e2 : jne 0x40d5da ; mov rax, rdx ; pop rbp ; ret
0x000000000040e1d6 : jne 0x40e1c1 ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000040e4fd : jne 0x40e4e1 ; call rax
0x0000000000404955 : jo 0x4049b6 ; ret
0x0000000000405f7f : jo 0x405fe5 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406624 : jo 0x406685 ; ret
0x000000000040675e : jo 0x4067bf ; ret
0x000000000040adc6 : jo 0x40ae27 ; ret
0x000000000040c278 : jo 0x40c204 ; stc ; add eax, 0xf000000 ; xchg eax, esp ; ret 0x9588
0x000000000040a6c5 : lahf ; sub ah, byte ptr [rcx] ; ret 0x8941
0x000000000040a6d1 : lahf ; sub al, byte ptr [rcx - 0x77] ; ret 0x8141
0x00000000004106fa : lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000413eb8 : lodsb al, byte ptr [rsi] ; sub edi, edi ; call rsp
0x0000000000407e77 : loop 0x407e38 ; loopne 0x407e61 ; test dword ptr [rcx - 0x77], eax ; ret
0x000000000040a6ce : loope 0x40a6a8 ; mov edi, 0x89412a9f ; ret 0x8141
0x0000000000414331 : loope 0x414334 ; jmp rsp
0x0000000000403aad : loopne 0x403ab4 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000407055 : loopne 0x40705c ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000407e79 : loopne 0x407e5f ; test dword ptr [rcx - 0x77], eax ; ret
0x0000000000407f00 : loopne 0x407f50 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000407eff : loopne 0x407f51 ; add esp, 0x20 ; pop rbp ; ret
0x00000000004086f7 : loopne 0x4086fe ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040b270 : loopne 0x40b277 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040e1d7 : loopne 0x40e229 ; mov esi, eax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x0000000000411200 : loopne 0x411208 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004158c9 : mov ah, -1 ; jmp rax
0x000000000040e0de : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000413e74 : mov ah, 0xc ; add byte ptr [rax], al ; pushfq ; sub edi, edi ; call rsp
0x0000000000413eb4 : mov ah, 0xd ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; sub edi, edi ; call rsp
0x0000000000415144 : mov ah, 0xd ; add byte ptr [rax], al ; sbb byte ptr [rdi - 1], bh ; call qword ptr [rdx]
0x0000000000413ef4 : mov ah, 0xe ; add byte ptr [rax], al ; cld ; cmp bh, bh ; call rsp
0x00000000004064fb : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000406388 : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x000000000040dd4e : mov al, 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000407fd2 : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040d63b : mov al, byte ptr [rbp - 0x21] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040dfb7 : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000411876 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041004c : mov al, byte ptr [rdi + 0x1c] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000411840 : mov al, dl ; movzx eax, al ; pop rbp ; ret
0x00000000004117d5 : mov al, dl ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000041171a : mov ax, dx ; movzx eax, ax ; pop rbp ; ret
0x00000000004116ab : mov ax, r8w ; movzx eax, ax ; pop rbp ; ret
0x00000000004116b0 : mov bh, -0x40 ; pop rbp ; ret
0x0000000000403fd1 : mov byte ptr [0x6163a0], al ; pop rbp ; ret
0x000000000041014b : mov byte ptr [rax + 0x1c], 0 ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000401d43 : mov byte ptr [rip + 0x21462e], 1 ; ret
0x00000000004158e9 : mov ch, -1 ; call qword ptr [rsi]
0x000000000040ffc5 : mov dh, -0x39 ; pop rbp ; ret
0x000000000040db24 : mov dh, -0x3a ; pop rbp ; ret
0x00000000004099c1 : mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040daa4 : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000409226 : mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040ca7f : mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000402bc8 : mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000407fd8 : mov dh, -0x40 ; pop rbp ; ret
0x00000000004117d8 : mov dh, -0x40 ; pop rbx ; pop rbp ; ret
0x0000000000403fad : mov dword ptr [0x616398], edi ; pop rbp ; ret
0x0000000000404806 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004047c8 : mov dword ptr [rax], eax ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000404684 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004047c7 : mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040d49b : mov dword ptr [rbp - 0x14], eax ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x00000000004020a9 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040e0dc : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401fc7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000411d5d : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040e485 : mov dword ptr [rbp - 8], eax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004028e5 : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402945 : mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x0000000000410039 : mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x000000000040d20f : mov dword ptr [rcx + 0x18], eax ; pop rbp ; ret
0x000000000040ccc7 : mov dword ptr [rcx + 0x2c], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040487e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040c8c1 : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040e62a : mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x000000000040d988 : mov dword ptr [rdi + 0x18], 0x95f616 ; pop rbp ; ret
0x0000000000402937 : mov dword ptr [rdi + 0x20], 0 ; pop rbp ; ret
0x000000000040fdf0 : mov dword ptr [rdi + 0x48], esi ; pop rbp ; ret
0x0000000000403150 : mov eax, 0xf20413b ; xchg eax, esp ; ret 0x9588
0x0000000000404638 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000407a5b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404223 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d168 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x0000000000404635 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040417f : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040881a : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d49e : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000407d53 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403f95 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040467e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000404420 : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000407efe : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040e1dc : mov eax, dword ptr [rbp - 0x20] ; call rax
0x000000000040f98f : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040d04f : mov eax, dword ptr [rbp - 0x28] ; call rax
0x00000000004047ca : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000406b3e : mov eax, dword ptr [rbp - 0x38] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040494f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004064f9 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000410209 : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040c76c : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000411264 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040cd50 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d788 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000409e2d : mov eax, dword ptr [rbp - 4] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040875d : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040feb8 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407b3d : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004069bf : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040d002 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004098d8 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040f883 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040adc0 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004028e9 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040dd6d : mov eax, dword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040dd8d : mov eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040ddad : mov eax, dword ptr [rdi + 0x20] ; pop rbp ; ret
0x00000000004116ad : mov eax, eax ; movzx eax, ax ; pop rbp ; ret
0x00000000004113de : mov eax, eax ; pop rbp ; ret
0x0000000000409137 : mov eax, ecx ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004114cd : mov eax, ecx ; pop rbp ; ret
0x000000000040e811 : mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041171b : mov eax, edx ; movzx eax, ax ; pop rbp ; ret
0x000000000040d4d4 : mov eax, edx ; pop rbp ; ret
0x00000000004116ac : mov eax, r8d ; movzx eax, ax ; pop rbp ; ret
0x00000000004114cc : mov eax, r9d ; pop rbp ; ret
0x0000000000401d6b : mov ebp, esp ; call rax
0x0000000000401cd1 : mov ebp, esp ; ja 0x401cdc ; pop rbp ; ret
0x0000000000402942 : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000040778d : mov ecx, 0x5b2a830a ; ret
0x0000000000402368 : mov ecx, dword ptr [rax*8 + 0x411ee0] ; jmp rcx
0x0000000000402c49 : mov ecx, dword ptr [rax*8 + 0x412c50] ; jmp rcx
0x00000000004033ce : mov ecx, dword ptr [rax*8 + 0x412ca0] ; jmp rcx
0x0000000000404a12 : mov ecx, dword ptr [rax*8 + 0x4130c0] ; jmp rcx
0x0000000000404d36 : mov ecx, dword ptr [rax*8 + 0x413108] ; jmp rcx
0x000000000040714e : mov ecx, dword ptr [rax*8 + 0x4135f0] ; jmp rcx
0x000000000040848e : mov ecx, dword ptr [rax*8 + 0x4139d8] ; jmp rcx
0x000000000040840e : mov ecx, dword ptr [rax*8 + 0x413a38] ; jmp rcx
0x000000000040d1a4 : mov ecx, dword ptr [rax*8 + 0x413b20] ; jmp rcx
0x0000000000404681 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040eb72 : mov ecx, dword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040eb0f : mov ecx, dword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040e163 : mov ecx, dword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040f733 : mov ecx, dword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000410036 : mov ecx, dword ptr [rbp - 8] ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x000000000040d20c : mov ecx, dword ptr [rbp - 8] ; mov dword ptr [rcx + 0x18], eax ; pop rbp ; ret
0x000000000040f800 : mov ecx, dword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000401d65 : mov edi, 0x615e20 ; mov rbp, rsp ; call rax
0x0000000000401ce2 : mov edi, 0x616308 ; jmp rax
0x0000000000401d22 : mov edi, 0x616308 ; jmp rdx
0x000000000040a6d0 : mov edi, 0x89412a9f ; ret 0x8141
0x000000000040fdec : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040dd69 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040dd89 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040dda9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000040eb13 : mov edi, dword ptr [rcx] ; call rax
0x000000000040e4f9 : mov edi, dword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x0000000000411e17 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x00000000004153a9 : mov edi, edi ; call qword ptr [rdx]
0x0000000000411e16 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000040e4fc : mov esi, dword ptr [rbp - 0x20] ; call rax
0x000000000040e167 : mov esi, dword ptr [rcx] ; call rax
0x0000000000401d20 : mov esi, eax ; mov edi, 0x616308 ; jmp rdx
0x000000000040e1d9 : mov esi, eax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000040d04c : mov esi, eax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x00000000004141f4 : mov esp, 0x5c00001a ; ret
0x0000000000403fac : mov qword ptr [0x616398], rdi ; pop rbp ; ret
0x000000000040e484 : mov qword ptr [rbp - 8], rax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004028e4 : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402944 : mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000040487d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040c8c0 : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402936 : mov qword ptr [rdi + 0x20], 0 ; pop rbp ; ret
0x000000000040fdef : mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040e0dd : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004064fa : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000407a5a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404222 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404634 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040417e : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000407d52 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403f94 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040441f : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000407efd : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040e1db : mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000040f98e : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040d04e : mov rax, qword ptr [rbp - 0x28] ; call rax
0x0000000000406b3d : mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040494e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004064f8 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040feb7 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407b3c : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004069be : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040d001 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004098d7 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040f882 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040adbf : mov rax, qword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004028e8 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040dd6c : mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040dd8c : mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040ddac : mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x00000000004113dd : mov rax, r8 ; pop rbp ; ret
0x0000000000409136 : mov rax, rcx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040e810 : mov rax, rdx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d4d3 : mov rax, rdx ; pop rbp ; ret
0x0000000000401d6a : mov rbp, rsp ; call rax
0x0000000000401cd0 : mov rbp, rsp ; ja 0x401cdd ; pop rbp ; ret
0x0000000000402941 : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000402367 : mov rcx, qword ptr [rax*8 + 0x411ee0] ; jmp rcx
0x0000000000402c48 : mov rcx, qword ptr [rax*8 + 0x412c50] ; jmp rcx
0x00000000004033cd : mov rcx, qword ptr [rax*8 + 0x412ca0] ; jmp rcx
0x0000000000404a11 : mov rcx, qword ptr [rax*8 + 0x4130c0] ; jmp rcx
0x0000000000404d35 : mov rcx, qword ptr [rax*8 + 0x413108] ; jmp rcx
0x000000000040714d : mov rcx, qword ptr [rax*8 + 0x4135f0] ; jmp rcx
0x000000000040848d : mov rcx, qword ptr [rax*8 + 0x4139d8] ; jmp rcx
0x000000000040840d : mov rcx, qword ptr [rax*8 + 0x413a38] ; jmp rcx
0x000000000040d1a3 : mov rcx, qword ptr [rax*8 + 0x413b20] ; jmp rcx
0x000000000040eb71 : mov rcx, qword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040eb0e : mov rcx, qword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040e162 : mov rcx, qword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040f732 : mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000410035 : mov rcx, qword ptr [rbp - 8] ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x000000000040d20b : mov rcx, qword ptr [rbp - 8] ; mov dword ptr [rcx + 0x18], eax ; pop rbp ; ret
0x000000000040f7ff : mov rcx, qword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040fdeb : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040dd68 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040dd88 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040dda8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000040eb12 : mov rdi, qword ptr [rcx] ; call rax
0x000000000040e4f8 : mov rdi, qword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x000000000040e4fb : mov rsi, qword ptr [rbp - 0x20] ; call rax
0x000000000040e166 : mov rsi, qword ptr [rcx] ; call rax
0x0000000000401d1f : mov rsi, rax ; mov edi, 0x616308 ; jmp rdx
0x000000000040e1d8 : mov rsi, rax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000040d04b : mov rsi, rax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x00000000004158c8 : mov spl, -1 ; jmp rax
0x0000000000404299 : movabs dword ptr [0x5d20c48348ffffd9], eax ; ret
0x00000000004087f0 : movabs dword ptr [0x941c90941f0213f], eax ; ret 0x3145
0x000000000040c071 : movabs dword ptr [0xfffffff281f4f275], eax ; jmp qword ptr [rcx]
0x000000000040a39d : movabs eax, dword ptr [0x21fffffffff281ee] ; ret 0xfa81
0x00000000004099c0 : movzx eax, al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040daa3 : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000409225 : movzx eax, al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040ca7e : movzx eax, al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000402bc7 : movzx eax, al ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000407fd7 : movzx eax, al ; pop rbp ; ret
0x00000000004117d7 : movzx eax, al ; pop rbx ; pop rbp ; ret
0x00000000004116af : movzx eax, ax ; pop rbp ; ret
0x000000000040ffc4 : movzx eax, bh ; pop rbp ; ret
0x000000000040db23 : movzx eax, dh ; pop rbp ; ret
0x000000000040ffc3 : movzx eax, dil ; pop rbp ; ret
0x000000000040db22 : movzx eax, sil ; pop rbp ; ret
0x00000000004096c5 : movzx eax, word ptr [rbp - 2] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040bd8a : mul dword ptr [rbp + 0x21] ; ret 0x8941
0x0000000000411e38 : nop dword ptr [rax + rax] ; ret
0x000000000040509d : or al, 0x18 ; ret 0x6451
0x0000000000406973 : or al, 0x25 ; ret 0x4135
0x0000000000408acb : or byte ptr [rax], al ; add byte ptr [rbp - 0x77], al ; ret 0x3145
0x000000000040c5fb : or byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000409a2e : or dword ptr [rcx], eax ; add byte ptr [rbp - 0x77], al ; ret 0x8141
0x00000000004066e1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000413e35 : or eax, dword ptr [rax] ; add byte ptr [rdi - 1], bl ; call rsp
0x00000000004113db : or eax, edi ; mov rax, r8 ; pop rbp ; ret
0x00000000004115bf : or eax, edi ; pop rbp ; ret
0x00000000004114ca : or ecx, edx ; mov eax, r9d ; pop rbp ; ret
0x00000000004113da : or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x00000000004114c9 : or r9d, edx ; mov eax, r9d ; pop rbp ; ret
0x00000000004115be : or rax, rdi ; pop rbp ; ret
0x000000000040db20 : out 1, al ; movzx eax, sil ; pop rbp ; ret
0x000000000040ffc1 : out 1, eax ; movzx eax, dil ; pop rbp ; ret
0x000000000040943a : out dx, al ; rol byte ptr [rcx - 0xe], 1 ; jmp qword ptr [rcx]
0x0000000000407fd4 : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040e069 : outsb dx, byte ptr [rsi] ; ret 0x280f
0x0000000000411e2c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405f81 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000411e2e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405f83 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000411e30 : pop r14 ; pop r15 ; ret
0x0000000000405d33 : pop r14 ; pop rbp ; ret
0x0000000000405f85 : pop r15 ; pop rbp ; ret
0x0000000000411e32 : pop r15 ; ret
0x0000000000401d42 : pop rbp ; mov byte ptr [rip + 0x21462e], 1 ; ret
0x0000000000401ce1 : pop rbp ; mov edi, 0x616308 ; jmp rax
0x0000000000401d1e : pop rbp ; mov rsi, rax ; mov edi, 0x616308 ; jmp rdx
0x0000000000411e2b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000411e2f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401cd5 : pop rbp ; ret
0x0000000000405f80 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040760d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405d32 : pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004090b9 : pop rbx ; pop rbp ; ret
0x0000000000407791 : pop rbx ; ret
0x0000000000405f86 : pop rdi ; pop rbp ; ret
0x0000000000411e33 : pop rdi ; ret
0x000000000040b491 : pop rdx ; adc dword ptr [rcx - 0xa], eax ; jmp qword ptr [rcx]
0x0000000000408a7e : pop rdx ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cvttps2pi mm0, qword ptr [rcx - 0xe] ; jmp qword ptr [rcx]
0x0000000000405f84 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000411e31 : pop rsi ; pop r15 ; ret
0x0000000000405d34 : pop rsi ; pop rbp ; ret
0x0000000000414330 : pop rsp ; loope 0x414335 ; jmp rsp
0x0000000000411e2d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405f82 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004141f8 : pop rsp ; ret
0x000000000040e080 : pop rsp ; ret 0xf66
0x00000000004029ff : popfq ; push rbx ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040456b : push 0x48006163 ; add esp, 0x30 ; pop rbp ; ret
0x00000000004002d5 : push rax ; jbe 0x40027e ; xchg al, dh ; xchg eax, esi ; jl 0x400327 ; ret
0x000000000040647e : push rax ; pop rbp ; ret
0x000000000040272f : push rbp ; call 0xffffffffc27cb282
0x0000000000401d64 : push rbp ; mov edi, 0x615e20 ; mov rbp, rsp ; call rax
0x0000000000402940 : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000040a7ab : push rbp ; ror byte ptr [rax - 0x75], 1 ; ror byte ptr [r8 - 0x77], 1 ; ret 0x8148
0x00000000004029a0 : push rbx ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004141ec : pushfq ; sbb al, byte ptr [rax] ; add ah, ch ; ret 0xffff
0x0000000000413e78 : pushfq ; sub edi, edi ; call rsp
0x00000000004002dd : ret
0x000000000040ac5c : ret 0
0x000000000040b2da : ret 0x134
0x000000000040d296 : ret 0x148
0x00000000004025d7 : ret 0x15b1
0x000000000040611e : ret 0x1b2
0x0000000000401ad2 : ret 0x2146
0x00000000004018d2 : ret 0x2147
0x000000000040dce5 : ret 0x26a8
0x000000000040e06a : ret 0x280f
0x0000000000404205 : ret 0x2948
0x00000000004054a9 : ret 0x294c
0x00000000004054c5 : ret 0x294d
0x0000000000403650 : ret 0x3040
0x00000000004087f9 : ret 0x3145
0x0000000000410093 : ret 0x3693
0x00000000004096ea : ret 0x3948
0x0000000000413150 : ret 0x4051
0x0000000000401ded : ret 0x4121
0x0000000000406975 : ret 0x4135
0x0000000000402f4a : ret 0x4f
0x000000000040d637 : ret 0x5588
0x0000000000404704 : ret 0x5589
0x000000000040c75f : ret 0x60
0x000000000040509f : ret 0x6451
0x00000000004054dd : ret 0x6de8
0x0000000000407e74 : ret 0x8141
0x0000000000407c4c : ret 0x8148
0x000000000040b1ff : ret 0x8341
0x000000000040e9b3 : ret 0x8348
0x00000000004035a8 : ret 0x840
0x00000000004095ae : ret 0x8445
0x0000000000405743 : ret 0x8840
0x0000000000407109 : ret 0x8844
0x0000000000408a05 : ret 0x8941
0x000000000040d0da : ret 0x8944
0x0000000000402734 : ret 0x8948
0x00000000004054c8 : ret 0x8949
0x0000000000411719 : ret 0x8966
0x000000000040565c : ret 0x89a5
0x00000000004054ac : ret 0x8b48
0x000000000041110f : ret 0x941
0x000000000040d0bd : ret 0x945
0x0000000000403156 : ret 0x9588
0x00000000004032f5 : ret 0xb0
0x0000000000410939 : ret 0xb849
0x000000000040ea36 : ret 0xb948
0x0000000000408b1b : ret 0xc121
0x0000000000408659 : ret 0xc131
0x0000000000401d05 : ret 0xc148
0x0000000000408b33 : ret 0xc221
0x00000000004106a0 : ret 0xc2f6
0x0000000000404ec4 : ret 0xca21
0x0000000000408792 : ret 0xca29
0x000000000041183f : ret 0xd088
0x0000000000403a40 : ret 0xd284
0x000000000040b206 : ret 0xd4e8
0x000000000040256f : ret 0xd701
0x00000000004086d5 : ret 0xd709
0x00000000004033af : ret 0xe883
0x00000000004101e3 : ret 0xea81
0x0000000000405d6c : ret 0xee8
0x000000000041008f : ret 0xee81
0x0000000000409e7b : ret 0xf01
0x0000000000405758 : ret 0xf180
0x000000000040358c : ret 0xf280
0x0000000000404f3e : ret 0xf281
0x000000000040e081 : ret 0xf66
0x0000000000411714 : ret 0xfa31
0x000000000040382b : ret 0xfa81
0x000000000041114a : ret 0xff06
0x000000000040ed2a : ret 0xff2a
0x000000000040f440 : ret 0xff3
0x00000000004141f1 : ret 0xffff
0x0000000000406124 : ret 1
0x0000000000410700 : ret 2
0x0000000000409814 : ret 8
0x0000000000403e60 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004117c3 : rol byte ptr [rbp + 9], 1 ; ret
0x00000000004047c6 : rol byte ptr [rcx + rcx*4], 1 ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000410129 : rol byte ptr [rcx - 0x77], 1 ; ret
0x000000000040943b : rol byte ptr [rcx - 0xe], 1 ; jmp qword ptr [rcx]
0x00000000004114cb : rol dword ptr [rcx + rcx*4 - 0x38], 1 ; pop rbp ; ret
0x0000000000403823 : rol dword ptr [rcx - 0xe], 1 ; jmp qword ptr [rcx]
0x000000000040ae14 : rol dword ptr [rcx - 0xf], cl ; jmp qword ptr [rcx]
0x0000000000407770 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000040a7af : ror byte ptr [r8 - 0x77], 1 ; ret 0x8148
0x0000000000404950 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x4049bb ; ret
0x00000000004115ba : ror byte ptr [rax + 0x31], 1 ; xlatb ; or rax, rdi ; pop rbp ; ret
0x0000000000401d0c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401d1b ; pop rbp ; ret
0x000000000040a7ac : ror byte ptr [rax - 0x75], 1 ; ror byte ptr [r8 - 0x77], 1 ; ret 0x8148
0x0000000000407771 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x000000000040549d : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x00000000004054a6 : ror byte ptr [rax - 0x77], 1 ; ret 0x294c
0x000000000040a7b0 : ror byte ptr [rax - 0x77], 1 ; ret 0x8148
0x0000000000404951 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x4049ba ; ret
0x000000000040ca80 : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x000000000041171c : ror byte ptr [rdi], 1 ; mov bh, -0x40 ; pop rbp ; ret
0x0000000000411841 : ror byte ptr [rdi], 1 ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004117d6 : ror byte ptr [rdi], 1 ; mov dh, -0x40 ; pop rbx ; pop rbp ; ret
0x0000000000409135 : ror dword ptr [rax - 0x77], -0x38 ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040bce4 : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x000000000040d49a : ror dword ptr [rcx + 0x458bec45], -0x14 ; pop rbp ; ret
0x00000000004002d7 : sahf ; xchg al, dh ; xchg eax, esi ; jl 0x400325 ; ret
0x000000000040c643 : sar byte ptr [rdi], cl ; test dword ptr [rcx - 0xe], eax ; jmp qword ptr [rcx]
0x00000000004033ac : sar dh, -0x77 ; ret 0xe883
0x000000000040a6cf : sar dword ptr [rdi - 0x76bed561], 1 ; ret 0x8141
0x0000000000401d0e : sar eax, 1 ; jne 0x401d19 ; pop rbp ; ret
0x00000000004141e9 : sar edi, -1 ; pushfq ; sbb al, byte ptr [rax] ; add ah, ch ; ret 0xffff
0x0000000000401d0d : sar rax, 1 ; jne 0x401d1a ; pop rbp ; ret
0x00000000004149a1 : sbb al, -1 ; jmp qword ptr [rax]
0x000000000041014d : sbb al, 0 ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000041004e : sbb al, 0x24 ; add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004141ed : sbb al, byte ptr [rax] ; add ah, ch ; ret 0xffff
0x0000000000414841 : sbb bh, bh ; jmp rdx
0x000000000040b76d : sbb byte ptr [rcx - 0xe], al ; jmp qword ptr [rcx]
0x0000000000415148 : sbb byte ptr [rdi - 1], bh ; call qword ptr [rdx]
0x0000000000414881 : sbb edi, edi ; jmp qword ptr [rdx]
0x000000000040d50a : sete al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040d50c : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000040aba9 : shl byte ptr [rip - 0xd7f], -1 ; jmp qword ptr [rcx]
0x000000000040e09f : shl dword ptr [rsi + 0xf], 0x5c ; ret 0xf66
0x0000000000415325 : sldt word ptr [rax] ; xchg dil, dil ; jmp qword ptr [rcx]
0x000000000040c27a : stc ; add eax, 0xf000000 ; xchg eax, esp ; ret 0x9588
0x000000000040299f : std ; push rbx ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000411878 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040a6c6 : sub ah, byte ptr [rcx] ; ret 0x8941
0x000000000040ccc9 : sub al, 0x48 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040a57c : sub al, 0x7d ; enter 0x41ed, -0x77 ; ret 0x8141
0x000000000040a6d2 : sub al, byte ptr [rcx - 0x77] ; ret 0x8141
0x000000000040778f : sub dword ptr [rdx], 0x5b ; ret
0x0000000000413e79 : sub edi, edi ; call rsp
0x0000000000411eb9 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000411eb8 : sub rsp, 8 ; add rsp, 8 ; ret
0x00000000004157c9 : test al, -1 ; call qword ptr [rsi]
0x000000000040938e : test al, 0 ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000411e3a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004030c3 : test dword ptr [rax - 0x17000002], edx ; ret
0x0000000000407e7b : test dword ptr [rcx - 0x77], eax ; ret
0x000000000040c645 : test dword ptr [rcx - 0xe], eax ; jmp qword ptr [rcx]
0x0000000000408bcd : test dword ptr [rip - 0x17000000], eax ; ret
0x00000000004002d8 : xchg al, dh ; xchg eax, esi ; jl 0x400324 ; ret
0x0000000000415329 : xchg bh, bh ; jmp qword ptr [rcx]
0x0000000000415328 : xchg dil, dil ; jmp qword ptr [rcx]
0x0000000000408ae0 : xchg eax, ebp ; ret
0x00000000004095ad : xchg eax, ebp ; ret 0x8445
0x0000000000405742 : xchg eax, ebp ; ret 0x8840
0x00000000004002da : xchg eax, esi ; jl 0x400322 ; ret
0x000000000040d636 : xchg eax, esp ; ret 0x5588
0x0000000000403155 : xchg eax, esp ; ret 0x9588
0x0000000000403a3f : xchg eax, esp ; ret 0xd284
0x000000000040d50b : xchg eax, esp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000415324 : xchg eax, esp ; sldt word ptr [rax] ; xchg dil, dil ; jmp qword ptr [rcx]
0x00000000004113d9 : xlatb ; or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x00000000004115bd : xlatb ; or rax, rdi ; pop rbp ; ret
0x00000000004158c4 : xor al, 0x15 ; add byte ptr [rax], al ; mov spl, -1 ; jmp rax
0x0000000000414d81 : xor bh, bh ; call rdi
0x0000000000409ef0 : xor bl, byte ptr [rcx + rax*4 - 0xf] ; jmp qword ptr [rcx]
0x0000000000410a2e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000404a16 : xor byte ptr [rcx], al ; jmp rcx
0x0000000000404d3a : xor dword ptr [rcx], eax ; jmp rcx
0x0000000000406477 : xor eax, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x000000000040696e : xor eax, 0x8d480041 ; or al, 0x25 ; ret 0x4135
0x00000000004047c5 : xor eax, edx ; mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004113d8 : xor edi, edx ; or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x00000000004115bc : xor edi, edx ; or rax, rdi ; pop rbp ; ret
0x00000000004115bb : xor rdi, rdx ; or rax, rdi ; pop rbp ; ret
