0x00000000004041e9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401b87 : add al, ch ; ret
0x0000000000405008 : add al, ch ; ret 0xffc5
0x000000000040726f : add bl, dh ; ret
0x000000000040522d : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000401b85 : add byte ptr [rax], al ; add al, ch ; ret
0x000000000040726d : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040726b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004003c0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000004003c2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x000000000040256b : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040726c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000407bf4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x404e
0x00000000004003c4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x0000000000401f8c : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b75b8b], cl ; ret 0xb0
0x0000000000401bf4 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b76b8b], cl ; ret 0xb0
0x0000000000401c4d : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b76f8b], cl ; ret 0xb0
0x0000000000401ca6 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7738b], cl ; ret 0xb0
0x000000000040388e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000404afe : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000408909 : add byte ptr [rax], al ; add byte ptr [rsi + rax], cl ; add byte ptr [rax], dl ; ret 0xffff
0x000000000040603c : add byte ptr [rax], al ; add cl, ch ; ret 2
0x000000000040215f : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403ec0 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040135b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000401519 : add byte ptr [rax], al ; jmp 0x401379
0x0000000000402782 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040256d : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040805a : add byte ptr [rax], al ; nop ; ret 0xffff
0x00000000004044de : add byte ptr [rax], al ; pop rbp ; ret
0x00000000004050cb : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403e80 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000408052 : add byte ptr [rax], al ; push rax ; ret 0xffff
0x000000000040726e : add byte ptr [rax], al ; ret
0x0000000000407bf6 : add byte ptr [rax], al ; ret 0x404e
0x00000000004003c6 : add byte ptr [rax], al ; ret 1
0x000000000040890f : add byte ptr [rax], dl ; ret 0xffff
0x00000000004050cc : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000403e81 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000401f8e : add byte ptr [rbx - 0x76b75b8b], cl ; ret 0xb0
0x0000000000401bf6 : add byte ptr [rbx - 0x76b76b8b], cl ; ret 0xb0
0x0000000000401c4f : add byte ptr [rbx - 0x76b76f8b], cl ; ret 0xb0
0x0000000000401ca8 : add byte ptr [rbx - 0x76b7738b], cl ; ret 0xb0
0x0000000000406f1c : add byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x0000000000401818 : add byte ptr [rcx], al ; ret
0x0000000000406038 : add byte ptr [rdi], cl ; lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000403890 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000404b00 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040890b : add byte ptr [rsi + rax], cl ; add byte ptr [rax], dl ; ret 0xffff
0x000000000040603e : add cl, ch ; ret 2
0x0000000000405709 : add dword ptr [rax - 0x77], ecx ; ret 0x8148
0x00000000004041af : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004050ca : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000403e7f : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000406ddd : add dword ptr [rax], ecx ; ret 0x840
0x0000000000402051 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000406aba : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401814 : add eax, 0x208a9e ; add ebx, esi ; ret
0x000000000040603b : add eax, 0xe9000000 ; ret 2
0x00000000004017db : add eax, edx ; sar rax, 1 ; jne 0x4017ec ; pop rbp ; ret
0x0000000000401819 : add ebx, esi ; ret
0x000000000040194b : add esp, 0x10 ; pop rbp ; ret
0x000000000040636c : add esp, 0x130 ; pop rbp ; ret
0x00000000004053fc : add esp, 0x1a0 ; pop rbp ; ret
0x00000000004023f7 : add esp, 0x20 ; pop rbp ; ret
0x0000000000401a2d : add esp, 0x30 ; pop rbp ; ret
0x000000000040212c : add esp, 0x40 ; pop rbp ; ret
0x00000000004045cc : add esp, 0x50 ; pop rbp ; ret
0x0000000000402056 : add esp, 0x60 ; pop rbp ; ret
0x0000000000402aa3 : add esp, 0x70 ; pop rbp ; ret
0x00000000004044da : add esp, 0x90 ; pop rbp ; ret
0x0000000000405293 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040135e : add esp, 8 ; ret
0x00000000004017da : add rax, rdx ; sar rax, 1 ; jne 0x4017ed ; pop rbp ; ret
0x000000000040194a : add rsp, 0x10 ; pop rbp ; ret
0x000000000040636b : add rsp, 0x130 ; pop rbp ; ret
0x00000000004053fb : add rsp, 0x1a0 ; pop rbp ; ret
0x00000000004023f6 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000401a2c : add rsp, 0x30 ; pop rbp ; ret
0x000000000040212b : add rsp, 0x40 ; pop rbp ; ret
0x00000000004045cb : add rsp, 0x50 ; pop rbp ; ret
0x0000000000402055 : add rsp, 0x60 ; pop rbp ; ret
0x0000000000402aa2 : add rsp, 0x70 ; pop rbp ; ret
0x00000000004044d9 : add rsp, 0x90 ; pop rbp ; ret
0x0000000000405292 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040135d : add rsp, 8 ; ret
0x0000000000406ab9 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401817 : and byte ptr [rax], al ; add ebx, esi ; ret
0x000000000040217f : and eax, 0x60a2d8 ; pop rbp ; ret
0x00000000004021a3 : and eax, 0x60a2e0 ; pop rbp ; ret
0x00000000004058e4 : call 0x4016d6
0x0000000000403eb9 : call 0xffffffffe902c809
0x0000000000403eb8 : call 0xffffffffe902c80a
0x0000000000407249 : call qword ptr [r12 + rbx*8]
0x0000000000407faf : call qword ptr [rax]
0x00000000004083eb : call qword ptr [rsi]
0x000000000040724a : call qword ptr [rsp + rbx*8]
0x000000000040183d : call rax
0x0000000000403c0c : call rbx
0x00000000004083ab : call rcx
0x00000000004085ab : call rdi
0x000000000040636a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x00000000004055ff : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404b11 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004017df : clc ; jne 0x4017e8 ; pop rbp ; ret
0x0000000000402955 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000406f9f : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000406fa2 : clc ; pop rbp ; ret
0x0000000000406956 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405b4b : cld ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405a8a : cld ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004067a1 : cld ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000406f9c : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000406953 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004068f6 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405a87 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040679e : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040179d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4017b0 ; pop rbp ; ret
0x0000000000404c0c : cwde ; mov rcx, qword ptr [rax*8 + 0x407bb8] ; jmp rcx
0x00000000004060a4 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000403612 : dec dword ptr [rcx - 0x77] ; ret 0x294d
0x00000000004039a0 : enter 0x4b05, 0x34 ; fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x00000000004039a4 : fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x000000000040724c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000401949 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004017b0 : hlt ; pop rbp ; mov edi, 0x60a280 ; jmp rax
0x000000000040593b : in al, 0x48 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000403c2b : inc dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000405235 : int 0x80
0x00000000004017a3 : ja 0x4017aa ; pop rbp ; ret
0x00000000004017af : je 0x4017ad ; pop rbp ; mov edi, 0x60a280 ; jmp rax
0x000000000040151b : jmp 0x401377
0x0000000000405708 : jmp 0xffffffffc2c99f12
0x00000000004087b3 : jmp qword ptr [rax]
0x00000000004030a6 : jmp qword ptr [rcx]
0x00000000004083cb : jmp qword ptr [rdi]
0x0000000000408693 : jmp qword ptr [rdx]
0x00000000004017b7 : jmp rax
0x0000000000402b69 : jmp rcx
0x00000000004017f7 : jmp rdx
0x00000000004017e0 : jne 0x4017e7 ; pop rbp ; ret
0x0000000000402aa5 : jo 0x402b06 ; ret
0x00000000004040cf : jo 0x404135 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000404774 : jo 0x4047d5 ; ret
0x00000000004048ae : jo 0x40490f ; ret
0x00000000004067a5 : jo 0x406806 ; ret
0x000000000040804f : lcall ptr [rax + 0x50000006] ; ret 0xffff
0x000000000040603a : lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x00000000004071f9 : loopne 0x407249 ; add esp, 0x40 ; pop rbp ; ret
0x00000000004071f8 : loopne 0x40724a ; add esp, 0x40 ; pop rbp ; ret
0x0000000000401816 : mov ah, byte ptr [rax] ; add byte ptr [rcx], al ; ret
0x0000000000406764 : mov al, -0x75 ; or byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; ret 0x8148
0x00000000004058e2 : mov al, 0 ; call 0x4016d8
0x000000000040464b : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004044d8 : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000406ab6 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004021a1 : mov byte ptr [0x60a2e0], al ; pop rbp ; ret
0x0000000000401813 : mov byte ptr [rip + 0x208a9e], 1 ; ret
0x0000000000402053 : mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000406abc : mov dh, -0x40 ; pop rbp ; ret
0x000000000040217d : mov dword ptr [0x60a2d8], edi ; pop rbp ; ret
0x0000000000402956 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000402918 : mov dword ptr [rax], eax ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004027d4 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000402917 : mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000401a29 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401947 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406f9d : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004029ce : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000408058 : mov eax, 0x90000006 ; ret 0xffff
0x0000000000402788 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040551b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004023f3 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402785 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040234f : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405813 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040273d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004027ce : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000402570 : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000405939 : mov eax, dword ptr [rbp - 0x1c] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004071f7 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040291a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000402a9f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000404649 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000406954 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405b49 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405a88 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040679f : mov eax, dword ptr [rbp - 4] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004055fd : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404b0f : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406fa0 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402129 : mov eax, edx ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040183b : mov ebp, esp ; call rax
0x00000000004017a1 : mov ebp, esp ; ja 0x4017ac ; pop rbp ; ret
0x000000000040524d : mov ecx, 0x5b2a830a ; ret
0x0000000000402b62 : mov ecx, dword ptr [rax*8 + 0x4076b0] ; jmp rcx
0x0000000000402e86 : mov ecx, dword ptr [rax*8 + 0x4076f8] ; jmp rcx
0x0000000000404c0e : mov ecx, dword ptr [rax*8 + 0x407bb8] ; jmp rcx
0x00000000004027d1 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401835 : mov edi, 0x609e20 ; mov rbp, rsp ; call rax
0x00000000004017b2 : mov edi, 0x60a280 ; jmp rax
0x00000000004017f2 : mov edi, 0x60a280 ; jmp rdx
0x0000000000407247 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000407246 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x00000000004017f0 : mov esi, eax ; mov edi, 0x60a280 ; jmp rdx
0x000000000040217c : mov qword ptr [0x60a2d8], rdi ; pop rbp ; ret
0x00000000004029cd : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040464a : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040551a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004023f2 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402784 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040234e : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405812 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040273c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040256f : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000402a9e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000404648 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004055fc : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404b0e : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040183a : mov rbp, rsp ; call rax
0x00000000004017a0 : mov rbp, rsp ; ja 0x4017ad ; pop rbp ; ret
0x0000000000402b61 : mov rcx, qword ptr [rax*8 + 0x4076b0] ; jmp rcx
0x0000000000402e85 : mov rcx, qword ptr [rax*8 + 0x4076f8] ; jmp rcx
0x0000000000404c0d : mov rcx, qword ptr [rax*8 + 0x407bb8] ; jmp rcx
0x00000000004017ef : mov rsi, rax ; mov edi, 0x60a280 ; jmp rdx
0x0000000000401cab : mov word ptr [rax - 0x77], cs ; ret 0xb0
0x0000000000402052 : movzx eax, al ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000406abb : movzx eax, al ; pop rbp ; ret
0x000000000040805c : nop ; ret 0xffff
0x0000000000407268 : nop dword ptr [rax + rax] ; ret
0x00000000004031ed : or al, 0x18 ; ret 0x6451
0x0000000000406766 : or byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; ret 0x8148
0x0000000000404831 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040725c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004040d1 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040725e : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004040d3 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000407260 : pop r14 ; pop r15 ; ret
0x0000000000403e83 : pop r14 ; pop rbp ; ret
0x00000000004040d5 : pop r15 ; pop rbp ; ret
0x0000000000407262 : pop r15 ; ret
0x0000000000401812 : pop rbp ; mov byte ptr [rip + 0x208a9e], 1 ; ret
0x00000000004017b1 : pop rbp ; mov edi, 0x60a280 ; jmp rax
0x00000000004017ee : pop rbp ; mov rsi, rax ; mov edi, 0x60a280 ; jmp rdx
0x000000000040725b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040725f : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004017a5 : pop rbp ; ret
0x00000000004040d0 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004050cd : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403e82 : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000405251 : pop rbx ; ret
0x00000000004040d6 : pop rdi ; pop rbp ; ret
0x0000000000407263 : pop rdi ; ret
0x00000000004040d4 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000407261 : pop rsi ; pop r15 ; ret
0x0000000000403e84 : pop rsi ; pop rbp ; ret
0x000000000040725d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004040d2 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004045ce : push rax ; pop rbp ; ret
0x0000000000408054 : push rax ; ret 0xffff
0x0000000000401834 : push rbp ; mov edi, 0x609e20 ; mov rbp, rsp ; call rax
0x0000000000401361 : ret
0x0000000000406272 : ret 0
0x0000000000406286 : ret 0x148
0x000000000040426e : ret 0x1b2
0x000000000040362d : ret 0x1de8
0x0000000000401722 : ret 0x208a
0x0000000000401522 : ret 0x208b
0x00000000004023d5 : ret 0x2948
0x00000000004035f9 : ret 0x294c
0x0000000000403615 : ret 0x294d
0x0000000000407bf8 : ret 0x404e
0x0000000000402854 : ret 0x5589
0x00000000004031ef : ret 0x6451
0x000000000040570c : ret 0x8148
0x0000000000406ddf : ret 0x840
0x0000000000403893 : ret 0x8840
0x0000000000404bc9 : ret 0x8844
0x0000000000401e2d : ret 0x8948
0x0000000000403618 : ret 0x8949
0x00000000004037ac : ret 0x89a5
0x00000000004020c4 : ret 0x8b48
0x0000000000401bfc : ret 0xb0
0x0000000000406279 : ret 0xb849
0x00000000004017d5 : ret 0xc148
0x0000000000405fe0 : ret 0xc2f6
0x0000000000403014 : ret 0xca21
0x000000000040674a : ret 0xca29
0x0000000000404b03 : ret 0xd284
0x0000000000403ebc : ret 0xee8
0x00000000004038a8 : ret 0xf180
0x0000000000405fd3 : ret 0xf280
0x000000000040308e : ret 0xf281
0x00000000004058ea : ret 0xffba
0x000000000040500a : ret 0xffc5
0x0000000000408055 : ret 0xffff
0x00000000004003c8 : ret 1
0x0000000000406040 : ret 2
0x0000000000406770 : ret 4
0x0000000000402916 : rol byte ptr [rcx + rcx*4], 1 ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000405230 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000406769 : ror byte ptr [r8 - 0x77], 1 ; ret 0x8148
0x0000000000402aa0 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x402b0b ; ret
0x00000000004017dc : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4017eb ; pop rbp ; ret
0x0000000000405231 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x00000000004035ed : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x00000000004035f6 : ror byte ptr [rax - 0x77], 1 ; ret 0x294c
0x000000000040676a : ror byte ptr [rax - 0x77], 1 ; ret 0x8148
0x0000000000402aa1 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x402b0a ; ret
0x0000000000401815 : sahf ; mov ah, byte ptr [rax] ; add byte ptr [rcx], al ; ret
0x00000000004017de : sar eax, 1 ; jne 0x4017e9 ; pop rbp ; ret
0x00000000004017dd : sar rax, 1 ; jne 0x4017ea ; pop rbp ; ret
0x0000000000406ab8 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040524f : sub dword ptr [rdx], 0x5b ; ret
0x000000000040729d : sub esp, 8 ; add rsp, 8 ; ret
0x000000000040729c : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040726a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000403892 : xchg eax, ebp ; ret 0x8840
0x0000000000404b02 : xchg eax, esp ; ret 0xd284
0x000000000040636e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004045c7 : xor eax, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x0000000000402915 : xor eax, edx ; mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
