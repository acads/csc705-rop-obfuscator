0x000000000040be18 : adc al, 0x48 ; add esp, 0x10 ; pop rbp ; ret
0x0000000000408db9 : adc al, 1 ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040d454 : adc byte ptr [rbp - 1], al ; jmp qword ptr [rax]
0x000000000040d4b4 : adc byte ptr [rbp - 1], bl ; jmp rax
0x000000000040d504 : adc byte ptr [rbp - 1], ch ; jmp qword ptr [rax]
0x000000000040dcb0 : adc byte ptr [rdi - 1], bh ; jmp rdx
0x000000000040bdfc : adc dh, dh ; ret 0xf01
0x0000000000403257 : adc eax, 0x48ffffe3 ; add esp, 0x10 ; pop rbp ; ret
0x0000000000405ba9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040dcad : add al, 0 ; add byte ptr [rax], dl ; jg 0x40dcb8 ; jmp rdx
0x000000000040e64f : add al, ah ; sar edi, 1 ; jmp rdx
0x000000000040e3ef : add al, dh ; ret
0x000000000040c00f : add bl, dh ; ret
0x0000000000409c77 : add byte ptr [rax + 1], cl ; ret 0x4a3b
0x000000000040214a : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; int 0xc3
0x0000000000401b4d : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; out dx, eax ; ret 0x40
0x0000000000401d73 : add byte ptr [rax - 0x73], cl ; xor al, 0x25 ; scasb al, byte ptr [rdi] ; ret
0x000000000040bf36 : add byte ptr [rax - 0x75], cl ; call 0x4903488e
0x000000000040715d : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000402220 : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000040d452 : add byte ptr [rax], al ; adc byte ptr [rbp - 1], al ; jmp qword ptr [rax]
0x000000000040d4b2 : add byte ptr [rax], al ; adc byte ptr [rbp - 1], bl ; jmp rax
0x000000000040d502 : add byte ptr [rax], al ; adc byte ptr [rbp - 1], ch ; jmp qword ptr [rax]
0x000000000040dcae : add byte ptr [rax], al ; adc byte ptr [rdi - 1], bh ; jmp rdx
0x000000000040c00d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000409c75 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x4a3b
0x0000000000402148 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; int 0xc3
0x0000000000401b4b : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; out dx, eax ; ret 0x40
0x000000000040bf34 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; call 0x49034890
0x000000000040221e : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000040c00b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040bcf1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040807d : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040c00c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000407fce : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040e3e9 : add byte ptr [rax], al ; add byte ptr [rbx + rcx], dh ; add al, dh ; ret
0x000000000040524e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x000000000040bd42 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004029f3 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004087ec : add byte ptr [rax], al ; add cl, ch ; ret 2
0x0000000000405b71 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405880 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040bcf3 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004014f3 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000401589 : add byte ptr [rax], al ; jmp 0x401509
0x000000000040807f : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000404142 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040da02 : add byte ptr [rax], al ; mov word ptr [rcx], es ; add byte ptr [rax], al ; sub byte ptr [rdi - 1], dl ; call qword ptr [rsi]
0x000000000040311d : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000406ffb : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405840 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000407fcf : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040c00e : add byte ptr [rax], al ; ret
0x000000000040da06 : add byte ptr [rax], al ; sub byte ptr [rdi - 1], dl ; call qword ptr [rsi]
0x000000000040dcaa : add byte ptr [rax], al ; xor al, 4 ; add byte ptr [rax], al ; adc byte ptr [rdi - 1], bh ; jmp rdx
0x000000000040d4c2 : add byte ptr [rax], al ; xor byte ptr [rsi - 1], bl ; jmp qword ptr [rax]
0x000000000040dcaf : add byte ptr [rax], dl ; jg 0x40dcb6 ; jmp rdx
0x000000000040d533 : add byte ptr [rax], dl ; test bh, bh ; jmp rax
0x0000000000406ffc : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000405841 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000407fd0 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040e3eb : add byte ptr [rbx + rcx], dh ; add al, dh ; ret
0x000000000040ba3c : add byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x0000000000406a3d : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401a08 : add byte ptr [rcx], al ; ret
0x000000000040d500 : add byte ptr [rdi], al ; add byte ptr [rax], al ; adc byte ptr [rbp - 1], ch ; jmp qword ptr [rax]
0x00000000004087e8 : add byte ptr [rdi], cl ; lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000405250 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x000000000040bd44 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004029f5 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040d4c0 : add byte ptr [rsi], al ; add byte ptr [rax], al ; xor byte ptr [rsi - 1], bl ; jmp qword ptr [rax]
0x000000000040dcab : add byte ptr [rsp + rax], dh ; add byte ptr [rax], al ; adc byte ptr [rdi - 1], bh ; jmp rdx
0x0000000000408eb2 : add byte ptr cs:[rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004087ee : add cl, ch ; ret 2
0x0000000000401eef : add cl, ch ; ret 3
0x0000000000407639 : add dword ptr [rax - 0x77], ecx ; ret 0x8148
0x0000000000405b6f : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406ffa : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040583f : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x00000000004038b4 : add dword ptr [rax], ecx ; ret 0x840
0x0000000000402825 : add dword ptr [rcx - 0x78], eax ; ret 0x8041
0x000000000040a202 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000402ae0 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401a04 : add eax, 0x20d90e ; add ebx, esi ; ret
0x00000000004087eb : add eax, 0xe9000000 ; ret 2
0x00000000004019cb : add eax, edx ; sar rax, 1 ; jne 0x4019dc ; pop rbp ; ret
0x000000000040a7f9 : add eax, esi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x0000000000401a09 : add ebx, esi ; ret
0x0000000000408dfb : add edi, eax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x0000000000401bbb : add esp, 0x10 ; pop rbp ; ret
0x0000000000406a3b : add esp, 0x100 ; pop rbp ; ret
0x000000000040acbc : add esp, 0x10e0 ; pop rbp ; ret
0x0000000000408b1c : add esp, 0x130 ; pop rbp ; ret
0x0000000000403119 : add esp, 0x170 ; pop rbp ; ret
0x000000000040732c : add esp, 0x1a0 ; pop rbp ; ret
0x00000000004033b7 : add esp, 0x20 ; pop rbp ; ret
0x00000000004099b6 : add esp, 0x250 ; pop rbp ; ret
0x0000000000401cfd : add esp, 0x30 ; pop rbp ; ret
0x000000000040363d : add esp, 0x40 ; pop rbp ; ret
0x0000000000405f8c : add esp, 0x50 ; pop rbp ; ret
0x000000000040bf8c : add esp, 0x60 ; pop rbp ; ret
0x0000000000404463 : add esp, 0x70 ; pop rbp ; ret
0x0000000000405e9a : add esp, 0x90 ; pop rbp ; ret
0x00000000004071c3 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040407a : add esp, 0xb0 ; pop rbp ; ret
0x000000000040b13d : add esp, 0xc0 ; pop rbp ; ret
0x0000000000407fcb : add esp, 0xc8 ; pop rbx ; pop rbp ; ret
0x00000000004014f6 : add esp, 8 ; ret
0x00000000004019ca : add rax, rdx ; sar rax, 1 ; jne 0x4019dd ; pop rbp ; ret
0x000000000040a7f8 : add rax, rsi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x0000000000408dfa : add rdi, rax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x0000000000401bba : add rsp, 0x10 ; pop rbp ; ret
0x0000000000406a3a : add rsp, 0x100 ; pop rbp ; ret
0x000000000040acbb : add rsp, 0x10e0 ; pop rbp ; ret
0x0000000000408b1b : add rsp, 0x130 ; pop rbp ; ret
0x0000000000403118 : add rsp, 0x170 ; pop rbp ; ret
0x000000000040732b : add rsp, 0x1a0 ; pop rbp ; ret
0x00000000004033b6 : add rsp, 0x20 ; pop rbp ; ret
0x00000000004099b5 : add rsp, 0x250 ; pop rbp ; ret
0x0000000000401cfc : add rsp, 0x30 ; pop rbp ; ret
0x000000000040363c : add rsp, 0x40 ; pop rbp ; ret
0x0000000000405f8b : add rsp, 0x50 ; pop rbp ; ret
0x000000000040bf8b : add rsp, 0x60 ; pop rbp ; ret
0x0000000000404462 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000405e99 : add rsp, 0x90 ; pop rbp ; ret
0x00000000004071c2 : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000404079 : add rsp, 0xb0 ; pop rbp ; ret
0x000000000040b13c : add rsp, 0xc0 ; pop rbp ; ret
0x0000000000407fca : add rsp, 0xc8 ; pop rbx ; pop rbp ; ret
0x00000000004014f5 : add rsp, 8 ; ret
0x000000000040a201 : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000402adf : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401a07 : and byte ptr [rax], al ; add ebx, esi ; ret
0x000000000040313f : and eax, 0x60f330 ; pop rbp ; ret
0x0000000000403163 : and eax, 0x60f338 ; pop rbp ; ret
0x0000000000401d70 : and eax, esp ; add byte ptr [rax - 0x73], cl ; xor al, 0x25 ; scasb al, byte ptr [rdi] ; ret
0x00000000004097c4 : call 0x31914
0x0000000000402a50 : call 0x32abeb
0x000000000040bf3a : call 0x4903488a
0x000000000040bf39 : call 0x4903488b
0x0000000000405879 : call 0xffffffffe902e1c9
0x0000000000405878 : call 0xffffffffe902e1ca
0x000000000040a683 : call 0xffffffffe9032fd3
0x000000000040bfe9 : call qword ptr [r12 + rbx*8]
0x000000000040d98b : call qword ptr [rax]
0x000000000040da0b : call qword ptr [rsi]
0x000000000040bfea : call qword ptr [rsp + rbx*8]
0x0000000000401a2d : call rax
0x00000000004055cc : call rbx
0x000000000040dc0b : call rdi
0x0000000000408b1a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x000000000040752f : clc ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004099b4 : clc ; add rsp, 0x250 ; pop rbp ; ret
0x00000000004064d1 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040363b : clc ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040b291 : clc ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040bf8a : clc ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000404078 : clc ; add rsp, 0xb0 ; pop rbp ; ret
0x000000000040b13b : clc ; add rsp, 0xc0 ; pop rbp ; ret
0x00000000004019cf : clc ; jne 0x4019d8 ; pop rbp ; ret
0x0000000000402936 : clc ; mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x000000000040be15 : clc ; mov dword ptr [rax + 0x14], ecx ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404315 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040babf : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040bac2 : clc ; pop rbp ; ret
0x000000000040807c : cld ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000401be7 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040acba : cld ; add rsp, 0x10e0 ; pop rbp ; ret
0x00000000004082fb : cld ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402a14 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040babc : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040b473 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040b416 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000408237 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000408083 : cld ; pop rbp ; ret
0x000000000040214d : cmp al, 0x25 ; int 0xc3
0x0000000000401b50 : cmp al, 0x25 ; out dx, eax ; ret 0x40
0x000000000040219f : cmp al, 0x25 ; ret
0x000000000040198d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4019a0 ; pop rbp ; ret
0x0000000000406b3c : cwde ; mov rcx, qword ptr [rax*8 + 0x40ce70] ; jmp rcx
0x000000000040219c : dec dword ptr [rax - 0x73] ; cmp al, 0x25 ; ret
0x0000000000407cf6 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; rol byte ptr [rax], cl ; jmp rcx
0x00000000004097c0 : dec dword ptr [rax - 0x75] ; push rbp ; call 0x31918
0x000000000040696c : dec dword ptr [rax - 0x77] ; ret 0x1be8
0x0000000000406669 : dec dword ptr [rax - 0x77] ; ret 0x1ee8
0x0000000000408854 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x00000000004097f6 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000404fd2 : dec dword ptr [rcx - 0x77] ; ret 0x294d
0x000000000040a394 : enter -0x76b8, 0xc ; ret 0x59e9
0x0000000000407fcd : enter 0, 0 ; pop rbx ; pop rbp ; ret
0x0000000000405360 : enter 0x4b05, 0x34 ; fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x0000000000405364 : fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x0000000000401a06 : fldenv dword ptr [rax] ; add byte ptr [rcx], al ; ret
0x000000000040aede : fmul dword ptr [r8 - 0x77] ; ret 0x8148
0x00000000004035ab : fmul dword ptr [rax + 0x29] ; ret 0x148
0x000000000040aedf : fmul dword ptr [rax - 0x77] ; ret 0x8148
0x000000000040bfec : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000401bb9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040bd4f : hlt ; mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004019a0 : hlt ; pop rbp ; mov edi, 0x60f2b0 ; jmp rax
0x00000000004029f1 : in al, 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004080f1 : in al, dx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040a208 : in al, dx ; pop rbp ; ret
0x0000000000402822 : inc dword ptr [rcx - 0x4f] ; add dword ptr [rcx - 0x78], eax ; ret 0x8041
0x00000000004055eb : inc dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000407165 : int 0x80
0x000000000040214f : int 0xc3
0x00000000004094fc : int 0xfd
0x0000000000401993 : ja 0x40199a ; pop rbp ; ret
0x000000000040c436 : jb 0x40c49f ; jns 0x40c441 ; push rax ; ret
0x000000000040c435 : jb 0x40c4a0 ; jns 0x40c442 ; push rax ; ret
0x000000000040199f : je 0x40199d ; pop rbp ; mov edi, 0x60f2b0 ; jmp rax
0x000000000040dcb1 : jg 0x40dcb4 ; jmp rdx
0x000000000040158b : jmp 0x401507
0x0000000000407638 : jmp 0xffffffffc2c9be42
0x000000000040d457 : jmp qword ptr [rax]
0x0000000000401f50 : jmp qword ptr [rcx]
0x000000000040db0b : jmp qword ptr [rdx]
0x00000000004019a7 : jmp rax
0x0000000000404529 : jmp rcx
0x00000000004019e7 : jmp rdx
0x00000000004019d0 : jne 0x4019d7 ; pop rbp ; ret
0x000000000040c439 : jns 0x40c43e ; push rax ; ret
0x000000000040c438 : jns 0x40c43f ; push rax ; ret
0x000000000040272a : jo 0x40274f ; ret 0x941
0x000000000040311b : jo 0x403123 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000403c57 : jo 0x403c5f ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000404465 : jo 0x4044c6 ; ret
0x0000000000405a8f : jo 0x405af5 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406134 : jo 0x406195 ; ret
0x000000000040626e : jo 0x4062cf ; ret
0x00000000004087ea : lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000407930 : loopne 0x407980 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040792f : loopne 0x407981 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040acbe : loopne 0x40acd5 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040407c : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040600b : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000405e98 : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x000000000040b5d6 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000402adc : mov al, byte ptr [rbp - 9] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000403161 : mov byte ptr [0x60f338], al ; pop rbp ; ret
0x0000000000408db7 : mov byte ptr [rax + 0x14], 1 ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040a7cb : mov byte ptr [rax + 0xc], 1 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402937 : mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000401a03 : mov byte ptr [rip + 0x20d90e], 1 ; ret
0x000000000040a204 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000402ae2 : mov dh, -0x40 ; pop rbp ; ret
0x000000000040313d : mov dword ptr [0x60f330], edi ; pop rbp ; ret
0x000000000040be16 : mov dword ptr [rax + 0x14], ecx ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404316 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004042d8 : mov dword ptr [rax], eax ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000404194 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004042d7 : mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000401cf9 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401bb7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401be5 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040babd : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040438e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040a7fc : mov dword ptr [rdi + 0x10], eax ; pop rbp ; ret
0x0000000000408dfe : mov dword ptr [rsi], edi ; pop rbp ; ret
0x0000000000404148 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040744b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004033b3 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404145 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040330f : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004080ef : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407743 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004040fd : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040418e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040792e : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004042da : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040787b : mov eax, dword ptr [rbp - 0x2c] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040445f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000406009 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040bd50 : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040b474 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004082f9 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402a12 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000408081 : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040752d : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004064cf : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403639 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040b28f : mov eax, dword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040bf88 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040bac0 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004014f1 : mov eax, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000401a2b : mov ebp, esp ; call rax
0x0000000000401991 : mov ebp, esp ; ja 0x40199c ; pop rbp ; ret
0x000000000040a8a1 : mov ebx, 0x48000014 ; add esp, 0x10 ; pop rbp ; ret
0x000000000040717d : mov ecx, 0x5b2a830a ; ret
0x0000000000404522 : mov ecx, dword ptr [rax*8 + 0x40c970] ; jmp rcx
0x0000000000404846 : mov ecx, dword ptr [rax*8 + 0x40c9b8] ; jmp rcx
0x0000000000406b3e : mov ecx, dword ptr [rax*8 + 0x40ce70] ; jmp rcx
0x0000000000407d6c : mov ecx, dword ptr [rax*8 + 0x40d1e0] ; jmp rcx
0x0000000000407cf8 : mov ecx, dword ptr [rax*8 + 0x40d240] ; jmp rcx
0x0000000000404191 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401a25 : mov edi, 0x60ee20 ; mov rbp, rsp ; call rax
0x00000000004019a2 : mov edi, 0x60f2b0 ; jmp rax
0x00000000004019e2 : mov edi, 0x60f2b0 ; jmp rdx
0x0000000000408df8 : mov edi, dword ptr [rsi] ; add rdi, rax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x000000000040bfe7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000040bfe6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x00000000004019e0 : mov esi, eax ; mov edi, 0x60f2b0 ; jmp rdx
0x0000000000407f08 : mov esp, dword ptr [rcx] ; ret 0x8941
0x000000000040a207 : mov esp, ebp ; pop rbp ; ret
0x000000000040313c : mov qword ptr [0x60f330], rdi ; pop rbp ; ret
0x000000000040438d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040a7fb : mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x0000000000408dfd : mov qword ptr [rsi], rdi ; pop rbp ; ret
0x000000000040600a : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040744a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004033b2 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404144 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040330e : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000407742 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004040fc : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040792d : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040445e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000406008 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040752c : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004064ce : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403638 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040b28e : mov rax, qword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040bf87 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000401a2a : mov rbp, rsp ; call rax
0x0000000000401990 : mov rbp, rsp ; ja 0x40199d ; pop rbp ; ret
0x0000000000404521 : mov rcx, qword ptr [rax*8 + 0x40c970] ; jmp rcx
0x0000000000404845 : mov rcx, qword ptr [rax*8 + 0x40c9b8] ; jmp rcx
0x0000000000406b3d : mov rcx, qword ptr [rax*8 + 0x40ce70] ; jmp rcx
0x0000000000407d6b : mov rcx, qword ptr [rax*8 + 0x40d1e0] ; jmp rcx
0x0000000000407cf7 : mov rcx, qword ptr [rax*8 + 0x40d240] ; jmp rcx
0x00000000004019df : mov rsi, rax ; mov edi, 0x60f2b0 ; jmp rdx
0x000000000040a206 : mov rsp, rbp ; pop rbp ; ret
0x000000000040da04 : mov word ptr [rcx], es ; add byte ptr [rax], al ; sub byte ptr [rdi - 1], dl ; call qword ptr [rsi]
0x0000000000401b4a : movabs byte ptr [0xef253c8d48000000], al ; ret 0x40
0x000000000040a203 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000402ae1 : movzx eax, al ; pop rbp ; ret
0x000000000040293a : movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000402add : mul dword ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x0000000000402ade : mul dword ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000040c008 : nop dword ptr [rax + rax] ; ret
0x0000000000404bad : or al, 0x18 ; ret 0x6451
0x0000000000407cf9 : or al, 0xffffffffffffffc5 ; rol byte ptr [rax], cl ; jmp rcx
0x000000000040a7cd : or al, 1 ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040e3ed : or eax, dword ptr [rax] ; add al, dh ; ret
0x00000000004061f1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401b52 : out dx, eax ; ret 0x40
0x0000000000402a51 : pop qword ptr [rcx - 0xe] ; jmp qword ptr [rcx]
0x000000000040bffc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405a91 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040bffe : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405a93 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040c000 : pop r14 ; pop r15 ; ret
0x0000000000405843 : pop r14 ; pop rbp ; ret
0x0000000000405a95 : pop r15 ; pop rbp ; ret
0x000000000040c002 : pop r15 ; ret
0x0000000000401a02 : pop rbp ; mov byte ptr [rip + 0x20d90e], 1 ; ret
0x00000000004019a1 : pop rbp ; mov edi, 0x60f2b0 ; jmp rax
0x00000000004019de : pop rbp ; mov rsi, rax ; mov edi, 0x60f2b0 ; jmp rdx
0x000000000040bffb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040bfff : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401995 : pop rbp ; ret
0x0000000000405a90 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406ffd : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405842 : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000407fd1 : pop rbx ; pop rbp ; ret
0x0000000000407181 : pop rbx ; ret
0x0000000000405a96 : pop rdi ; pop rbp ; ret
0x000000000040c003 : pop rdi ; ret
0x0000000000405a94 : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040c001 : pop rsi ; pop r15 ; ret
0x0000000000405844 : pop rsi ; pop rbp ; ret
0x000000000040bffd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405a92 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405f8e : push rax ; pop rbp ; ret
0x000000000040c43b : push rax ; ret
0x00000000004097c3 : push rbp ; call 0x31915
0x000000000040a393 : push rbp ; enter -0x76b8, 0xc ; ret 0x59e9
0x00000000004035aa : push rbp ; fmul dword ptr [rax + 0x29] ; ret 0x148
0x0000000000401a24 : push rbp ; mov edi, 0x60ee20 ; mov rbp, rsp ; call rax
0x00000000004014f9 : ret
0x0000000000408a22 : ret 0
0x000000000040a895 : ret 0x10
0x00000000004035ae : ret 0x148
0x0000000000408ea5 : ret 0x18
0x0000000000405c2e : ret 0x1b2
0x000000000040696f : ret 0x1be8
0x000000000040666c : ret 0x1ee8
0x0000000000401792 : ret 0x20d9
0x0000000000401592 : ret 0x20da
0x0000000000403395 : ret 0x2948
0x0000000000404fb9 : ret 0x294c
0x0000000000404fd5 : ret 0x294d
0x0000000000401aeb : ret 0x40
0x0000000000402842 : ret 0x458a
0x0000000000409c7a : ret 0x4a3b
0x000000000040aa46 : ret 0x54e8
0x0000000000404214 : ret 0x5589
0x000000000040a398 : ret 0x59e9
0x000000000040af39 : ret 0x61e8
0x0000000000404baf : ret 0x6451
0x000000000040a686 : ret 0x74e8
0x0000000000402828 : ret 0x8041
0x0000000000407b42 : ret 0x8141
0x000000000040763c : ret 0x8148
0x00000000004038b6 : ret 0x840
0x000000000040ac16 : ret 0x84e8
0x0000000000405253 : ret 0x8840
0x0000000000406af9 : ret 0x8844
0x0000000000407f0a : ret 0x8941
0x0000000000407650 : ret 0x8948
0x0000000000404fd8 : ret 0x8949
0x000000000040516c : ret 0x89a5
0x0000000000404fbc : ret 0x8b48
0x000000000040272c : ret 0x941
0x0000000000402163 : ret 0xb0
0x0000000000408a29 : ret 0xb849
0x0000000000408c40 : ret 0xc
0x00000000004019c5 : ret 0xc148
0x000000000040374c : ret 0xc2f6
0x00000000004049d4 : ret 0xca21
0x00000000004080b2 : ret 0xca29
0x00000000004029f8 : ret 0xd284
0x0000000000407fab : ret 0xd709
0x0000000000404fed : ret 0xde8
0x000000000040587c : ret 0xee8
0x00000000004038bd : ret 0xf01
0x0000000000405268 : ret 0xf180
0x000000000040373f : ret 0xf280
0x00000000004026e1 : ret 0xf281
0x00000000004097c7 : ret 0xffff
0x0000000000405c34 : ret 1
0x00000000004087f0 : ret 2
0x0000000000401ef1 : ret 3
0x0000000000407cfc : rol byte ptr [rax], cl ; jmp rcx
0x00000000004042d6 : rol byte ptr [rcx + rcx*4], 1 ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040d530 : rol byte ptr [rdi], 0 ; add byte ptr [rax], dl ; test bh, bh ; jmp rax
0x000000000040d4b0 : rol byte ptr [rip + 0x5d100000], -1 ; jmp rax
0x0000000000407d70 : rol dword ptr [rax], 1 ; jmp rcx
0x000000000040a38f : ror byte ptr [r8 - 0x75], 0x55 ; enter -0x76b8, 0xc ; ret 0x59e9
0x0000000000407160 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000404460 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x4044cb ; ret
0x00000000004019cc : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4019db ; pop rbp ; ret
0x000000000040a390 : ror byte ptr [rax - 0x75], 0x55 ; enter -0x76b8, 0xc ; ret 0x59e9
0x000000000040a205 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x0000000000407161 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000404fad : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000404fb6 : ror byte ptr [rax - 0x77], 1 ; ret 0x294c
0x0000000000404461 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x4044ca ; ret
0x0000000000403117 : ror byte ptr [rax - 0x7f], -0x3c ; jo 0x403127 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000403c53 : ror byte ptr [rax - 0x7f], -0x3c ; jo 0x403c63 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040b2ff : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x00000000004019ce : sar eax, 1 ; jne 0x4019d9 ; pop rbp ; ret
0x000000000040e651 : sar edi, 1 ; jmp rdx
0x00000000004019cd : sar rax, 1 ; jne 0x4019da ; pop rbp ; ret
0x0000000000407fa9 : sbb dword ptr [rcx], esp ; ret 0xd709
0x0000000000401d78 : scasb al, byte ptr [rdi] ; ret
0x000000000040be78 : setne al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040be7a : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000040b5d8 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000408eb1 : stosd dword ptr [rdi], eax ; add byte ptr cs:[rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040da08 : sub byte ptr [rdi - 1], dl ; call qword ptr [rsi]
0x000000000040717f : sub dword ptr [rdx], 0x5b ; ret
0x000000000040c061 : sub esp, 8 ; add rsp, 8 ; ret
0x000000000040c060 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040df31 : test bh, bh ; jmp qword ptr [rdx]
0x000000000040d535 : test bh, bh ; jmp rax
0x000000000040c00a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000405252 : xchg eax, ebp ; ret 0x8840
0x000000000040bd46 : xchg eax, ebp ; ret 0xd284
0x000000000040be79 : xchg eax, ebp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004029f7 : xchg eax, esp ; ret 0xd284
0x0000000000401d76 : xor al, 0x25 ; scasb al, byte ptr [rdi] ; ret
0x000000000040dcac : xor al, 4 ; add byte ptr [rax], al ; adc byte ptr [rdi - 1], bh ; jmp rdx
0x0000000000408b1e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040d4c4 : xor byte ptr [rsi - 1], bl ; jmp qword ptr [rax]
0x0000000000405f87 : xor eax, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x00000000004042d5 : xor eax, edx ; mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
