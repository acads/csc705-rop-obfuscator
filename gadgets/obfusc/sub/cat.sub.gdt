0x000000000040c098 : adc al, 0x48 ; add esp, 0x10 ; pop rbp ; ret
0x0000000000409039 : adc al, 1 ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040d819 : adc al, byte ptr [rax] ; add al, dh ; in al, -1 ; jmp qword ptr [rax]
0x000000000040d849 : adc al, byte ptr [rax] ; add byte ptr [rax], al ; out -1, eax ; jmp rax
0x000000000040c07c : adc dh, dh ; ret 0xf01
0x000000000040d7d9 : adc dword ptr [rax], eax ; add byte ptr [rax], ah ; loope 0x40d7e4 ; jmp qword ptr [rax]
0x00000000004060b9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040e4e3 : add ah, ch ; or eax, dword ptr [rax] ; add byte ptr [rax], cl ; ret
0x000000000040ddc3 : add ah, cl ; add al, 0 ; add byte ptr [rax], bh ; xchg bh, bh ; jmp qword ptr [rdx]
0x000000000040ddc5 : add al, 0 ; add byte ptr [rax], bh ; xchg bh, bh ; jmp qword ptr [rdx]
0x0000000000401f2c : add al, 0x25 ; ret
0x000000000040359b : add al, ch ; jmp rax
0x000000000040d81b : add al, dh ; in al, -1 ; jmp qword ptr [rax]
0x000000000040c28f : add bl, dh ; ret
0x0000000000409ef7 : add byte ptr [rax + 1], cl ; ret 0x4a3b
0x0000000000402666 : add byte ptr [rax - 0x46], cl ; ret
0x00000000004025c0 : add byte ptr [rax - 0x47], cl ; imul dl ; ret
0x0000000000401f29 : add byte ptr [rax - 0x73], cl ; add al, 0x25 ; ret
0x000000000040c1b6 : add byte ptr [rax - 0x75], cl ; call 0x49034b0e
0x00000000004077ed : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000040d7db : add byte ptr [rax], ah ; loope 0x40d7e2 ; jmp qword ptr [rax]
0x000000000040e4e1 : add byte ptr [rax], al ; add ah, ch ; or eax, dword ptr [rax] ; add byte ptr [rax], cl ; ret
0x0000000000403599 : add byte ptr [rax], al ; add al, ch ; jmp rax
0x000000000040c28d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000409ef5 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x4a3b
0x0000000000402664 : add byte ptr [rax], al ; add byte ptr [rax - 0x46], cl ; ret
0x00000000004025be : add byte ptr [rax], al ; add byte ptr [rax - 0x47], cl ; imul dl ; ret
0x000000000040c1b4 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; call 0x49034b10
0x000000000040c28b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040bf71 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040c28c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040332d : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004033c5 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b71b8b], cl ; ret 0xb0
0x0000000000402af6 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b72b8b], cl ; ret 0xb0
0x000000000040575e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x000000000040bfc2 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004069ce : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000408a6c : add byte ptr [rax], al ; add cl, ch ; ret 2
0x0000000000406081 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405d90 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040bf73 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040164b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000040dee6 : add byte ptr [rax], al ; cwde ; xchg edi, edi ; jmp qword ptr [rax]
0x000000000040e4e2 : add byte ptr [rax], al ; in al, dx ; or eax, dword ptr [rax] ; add byte ptr [rax], cl ; ret
0x0000000000401829 : add byte ptr [rax], al ; jmp 0x401669
0x0000000000404652 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040d84b : add byte ptr [rax], al ; out -1, eax ; jmp rax
0x0000000000404169 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040332e : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405d50 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040c28e : add byte ptr [rax], al ; ret
0x000000000040e766 : add byte ptr [rax], al ; sar rdi, cl ; jmp rdx
0x000000000040ddc7 : add byte ptr [rax], bh ; xchg bh, bh ; jmp qword ptr [rdx]
0x000000000040e4e7 : add byte ptr [rax], cl ; ret
0x000000000040d5cb : add byte ptr [rax], dh ; mov edi, dr1 ; jmp rax
0x000000000040332f : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000405d51 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000402222 : add byte ptr [rbx - 0x1934b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040291c : add byte ptr [rbx - 0x1bb4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004033c7 : add byte ptr [rbx - 0x76b71b8b], cl ; ret 0xb0
0x0000000000402af8 : add byte ptr [rbx - 0x76b72b8b], cl ; ret 0xb0
0x0000000000402c88 : add byte ptr [rbx - 0x8b4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040bcbc : add byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x00000000004070cd : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401bc8 : add byte ptr [rcx], al ; ret
0x0000000000408a68 : add byte ptr [rdi], cl ; lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000405760 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x000000000040bfc4 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004069d0 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000409132 : add byte ptr cs:[rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004023f8 : add cl, ch ; ret
0x0000000000408a6e : add cl, ch ; ret 2
0x0000000000407cc9 : add dword ptr [rax - 0x77], ecx ; ret 0x8148
0x000000000040607f : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040768a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000405d4f : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000403dc4 : add dword ptr [rax], ecx ; ret 0x840
0x0000000000408586 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402b0f : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040a482 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000040b85a : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401bc4 : add eax, 0x20d78e ; add ebx, esi ; ret
0x0000000000408a6b : add eax, 0xe9000000 ; ret 2
0x0000000000401b8b : add eax, edx ; sar rax, 1 ; jne 0x401b9c ; pop rbp ; ret
0x000000000040aa79 : add eax, esi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x0000000000401bc9 : add ebx, esi ; ret
0x0000000000402b87 : add edi, eax ; add rsi, rdi ; mov rax, rsi ; pop rbp ; ret
0x000000000040907b : add edi, eax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x0000000000402b8a : add esi, edi ; mov rax, rsi ; pop rbp ; ret
0x0000000000401d5b : add esp, 0x10 ; pop rbp ; ret
0x00000000004070cb : add esp, 0x100 ; pop rbp ; ret
0x000000000040af3c : add esp, 0x10e0 ; pop rbp ; ret
0x0000000000408d9c : add esp, 0x130 ; pop rbp ; ret
0x0000000000404165 : add esp, 0x170 ; pop rbp ; ret
0x00000000004079bc : add esp, 0x1a0 ; pop rbp ; ret
0x00000000004033e1 : add esp, 0x20 ; pop rbp ; ret
0x0000000000409c36 : add esp, 0x250 ; pop rbp ; ret
0x0000000000401e3d : add esp, 0x30 ; pop rbp ; ret
0x0000000000403b4d : add esp, 0x40 ; pop rbp ; ret
0x000000000040649c : add esp, 0x50 ; pop rbp ; ret
0x0000000000408003 : add esp, 0x60 ; pop rbp ; ret
0x0000000000404973 : add esp, 0x70 ; pop rbp ; ret
0x00000000004063aa : add esp, 0x90 ; pop rbp ; ret
0x0000000000407853 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040458a : add esp, 0xb0 ; pop rbp ; ret
0x000000000040b3bd : add esp, 0xc0 ; pop rbp ; ret
0x000000000040164e : add esp, 8 ; ret
0x0000000000401b8a : add rax, rdx ; sar rax, 1 ; jne 0x401b9d ; pop rbp ; ret
0x000000000040aa78 : add rax, rsi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x000000000040907a : add rdi, rax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x0000000000402b89 : add rsi, rdi ; mov rax, rsi ; pop rbp ; ret
0x0000000000401d5a : add rsp, 0x10 ; pop rbp ; ret
0x00000000004070ca : add rsp, 0x100 ; pop rbp ; ret
0x000000000040af3b : add rsp, 0x10e0 ; pop rbp ; ret
0x0000000000408d9b : add rsp, 0x130 ; pop rbp ; ret
0x0000000000404164 : add rsp, 0x170 ; pop rbp ; ret
0x00000000004079bb : add rsp, 0x1a0 ; pop rbp ; ret
0x00000000004033e0 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000409c35 : add rsp, 0x250 ; pop rbp ; ret
0x0000000000401e3c : add rsp, 0x30 ; pop rbp ; ret
0x0000000000403b4c : add rsp, 0x40 ; pop rbp ; ret
0x000000000040649b : add rsp, 0x50 ; pop rbp ; ret
0x0000000000408002 : add rsp, 0x60 ; pop rbp ; ret
0x0000000000404972 : add rsp, 0x70 ; pop rbp ; ret
0x00000000004063a9 : add rsp, 0x90 ; pop rbp ; ret
0x0000000000407852 : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000404589 : add rsp, 0xb0 ; pop rbp ; ret
0x000000000040b3bc : add rsp, 0xc0 ; pop rbp ; ret
0x000000000040164d : add rsp, 8 ; ret
0x000000000040a481 : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040b859 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401bc7 : and byte ptr [rax], al ; add ebx, esi ; ret
0x00000000004034b6 : and eax, 0x60f280 ; pop rbp ; ret
0x00000000004034cf : and eax, 0x60f370 ; pop rbp ; ret
0x00000000004034f3 : and eax, 0x60f378 ; pop rbp ; ret
0x0000000000409a44 : call 0x31b94
0x000000000040c1ba : call 0x49034b0a
0x000000000040c1b9 : call 0x49034b0b
0x0000000000405d89 : call 0xffffffffe902e6d9
0x0000000000405d88 : call 0xffffffffe902e6da
0x000000000040a903 : call 0xffffffffe9033253
0x000000000040c269 : call qword ptr [r12 + rbx*8]
0x000000000040da83 : call qword ptr [rsi]
0x000000000040c26a : call qword ptr [rsp + rbx*8]
0x0000000000401bed : call rax
0x0000000000405adc : call rbx
0x000000000040dce3 : call rdi
0x0000000000408d9a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x0000000000407bbf : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000409c34 : clc ; add rsp, 0x250 ; pop rbp ; ret
0x00000000004069e1 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403b4b : clc ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040b511 : clc ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040c20a : clc ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000404588 : clc ; add rsp, 0xb0 ; pop rbp ; ret
0x000000000040b3bb : clc ; add rsp, 0xc0 ; pop rbp ; ret
0x0000000000401b8f : clc ; jne 0x401b98 ; pop rbp ; ret
0x000000000040c095 : clc ; mov dword ptr [rax + 0x14], ecx ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404825 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040bd3f : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040bd42 : clc ; pop rbp ; ret
0x000000000040b6f6 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040af3a : cld ; add rsp, 0x10e0 ; pop rbp ; ret
0x000000000040832b : cld ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040826a : cld ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040bd3c : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040b6f3 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040b696 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000408267 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401b4d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401b60 ; pop rbp ; ret
0x00000000004071cc : cwde ; mov rcx, qword ptr [rax*8 + 0x40cfc0] ; jmp rcx
0x000000000040dee8 : cwde ; xchg edi, edi ; jmp qword ptr [rax]
0x0000000000409a40 : dec dword ptr [rax - 0x75] ; push rbp ; call 0x31b98
0x0000000000408ad4 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000406ffc : dec dword ptr [rax - 0x77] ; ret 0x3be8
0x0000000000406cf9 : dec dword ptr [rax - 0x77] ; ret 0x3ee8
0x0000000000409a76 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000402228 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004027cc : dec dword ptr [rax - 0x77] ; ret 0xf45
0x00000000004054e2 : dec dword ptr [rcx - 0x77] ; ret 0x294d
0x000000000040a614 : enter -0x76b8, 0xc ; ret 0x59e9
0x0000000000405870 : enter 0x4b05, 0x34 ; fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x0000000000405874 : fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x000000000040b15e : fmul dword ptr [r8 - 0x77] ; ret 0x8148
0x0000000000403abb : fmul dword ptr [rax + 0x29] ; ret 0x148
0x000000000040b15f : fmul dword ptr [rax - 0x77] ; ret 0x8148
0x000000000040c26c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000401d59 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040bfcf : hlt ; mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401b60 : hlt ; pop rbp ; mov edi, 0x60f320 ; jmp rax
0x00000000004023f2 : idiv bh ; inc esi ; scasd eax, dword ptr [rdi] ; add cl, ch ; ret
0x00000000004025b0 : imul dl ; ret
0x000000000040d81d : in al, -1 ; jmp qword ptr [rax]
0x000000000040d80d : in al, -1 ; jmp rax
0x000000000040e4e4 : in al, dx ; or eax, dword ptr [rax] ; add byte ptr [rax], cl ; ret
0x000000000040a488 : in al, dx ; pop rbp ; ret
0x000000000040d817 : inc dword ptr [rax] ; adc al, byte ptr [rax] ; add al, dh ; in al, -1 ; jmp qword ptr [rax]
0x000000000040d7d7 : inc dword ptr [rax] ; adc dword ptr [rax], eax ; add byte ptr [rax], ah ; loope 0x40d7e6 ; jmp qword ptr [rax]
0x000000000040262d : inc dword ptr [rbp + 0x21] ; ret 0x8141
0x0000000000405afb : inc dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x000000000040d847 : inc eax ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; out -1, eax ; jmp rax
0x000000000040d5c7 : inc eax ; or byte ptr [rax], al ; add byte ptr [rax], dh ; mov edi, dr1 ; jmp rax
0x00000000004023f4 : inc esi ; scasd eax, dword ptr [rdi] ; add cl, ch ; ret
0x00000000004077f5 : int 0x80
0x000000000040977c : int 0xfd
0x0000000000401b53 : ja 0x401b5a ; pop rbp ; ret
0x0000000000401b5f : je 0x401b5d ; pop rbp ; mov edi, 0x60f320 ; jmp rax
0x000000000040182b : jmp 0x401667
0x0000000000403597 : jmp 0x4035c1
0x0000000000407cc8 : jmp 0xffffffffc2c9c4d2
0x000000000040d5df : jmp qword ptr [rax]
0x000000000040235d : jmp qword ptr [rcx]
0x000000000040dbe3 : jmp qword ptr [rdx]
0x0000000000401b67 : jmp rax
0x00000000004020b0 : jmp rcx
0x0000000000401ba7 : jmp rdx
0x000000000040db63 : jmp rsi
0x0000000000401b90 : jne 0x401b97 ; pop rbp ; ret
0x000000000040340a : jo 0x40338e ; ret 0x8001
0x0000000000404167 : jo 0x40416f ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000404975 : jo 0x4049d6 ; ret
0x0000000000405f9f : jo 0x406005 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406644 : jo 0x4066a5 ; ret
0x000000000040677e : jo 0x4067df ; ret
0x0000000000408a6a : lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x000000000040d7dd : loope 0x40d7e0 ; jmp qword ptr [rax]
0x000000000040377b : loopne 0x4037cb ; add esp, 0x20 ; pop rbp ; ret
0x000000000040377a : loopne 0x4037cc ; add esp, 0x20 ; pop rbp ; ret
0x00000000004038bf : loopne 0x40390f ; add esp, 0x30 ; pop rbp ; ret
0x00000000004038be : loopne 0x403910 ; add esp, 0x30 ; pop rbp ; ret
0x0000000000408120 : loopne 0x408170 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040811f : loopne 0x408171 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040af3e : loopne 0x40af55 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040d75d : mov al, -1 ; jmp qword ptr [rax]
0x000000000040458c : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040651b : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004063a8 : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x000000000040028a : mov al, 0x54 ; ret
0x000000000040b856 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040e009 : mov bh, bh ; jmp qword ptr [rdx]
0x00000000004034f1 : mov byte ptr [0x60f378], al ; pop rbp ; ret
0x0000000000409037 : mov byte ptr [rax + 0x14], 1 ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040aa4b : mov byte ptr [rax + 0xc], 1 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401bc3 : mov byte ptr [rip + 0x20d78e], 1 ; ret
0x0000000000408588 : mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402b11 : mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040a484 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000040b85c : mov dh, -0x40 ; pop rbp ; ret
0x00000000004034b4 : mov dword ptr [0x60f280], eax ; pop rbp ; ret
0x00000000004034cd : mov dword ptr [0x60f370], edi ; pop rbp ; ret
0x000000000040c096 : mov dword ptr [rax + 0x14], ecx ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404826 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004047e8 : mov dword ptr [rax], eax ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004046a4 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004047e7 : mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000402a2f : mov dword ptr [rbp - 0x18], eax ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000403779 : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401e39 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401d57 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040bd3d : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040489e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004033de : mov dword ptr [rcx], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040aa7c : mov dword ptr [rdi + 0x10], eax ; pop rbp ; ret
0x000000000040907e : mov dword ptr [rsi], edi ; pop rbp ; ret
0x0000000000404658 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000407adb : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403743 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404655 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040369f : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000407dd3 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040460d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000408514 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040469e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000402a33 : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040811e : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004038bd : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004047ea : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040806b : mov eax, dword ptr [rbp - 0x2c] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040496f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000406519 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040bfd0 : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040b6f4 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408329 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000408268 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000407bbd : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004069df : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403b49 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040b50f : mov eax, dword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040c208 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040bd40 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402b8d : mov eax, esi ; pop rbp ; ret
0x0000000000401beb : mov ebp, esp ; call rax
0x0000000000401b51 : mov ebp, esp ; ja 0x401b5c ; pop rbp ; ret
0x000000000040ab21 : mov ebx, 0x48000014 ; add esp, 0x10 ; pop rbp ; ret
0x000000000040780d : mov ecx, 0x5b2a830a ; ret
0x00000000004020a9 : mov ecx, dword ptr [rax*8 + 0x40c2f0] ; jmp rcx
0x0000000000404a32 : mov ecx, dword ptr [rax*8 + 0x40cac0] ; jmp rcx
0x0000000000404d56 : mov ecx, dword ptr [rax*8 + 0x40cb08] ; jmp rcx
0x00000000004071ce : mov ecx, dword ptr [rax*8 + 0x40cfc0] ; jmp rcx
0x00000000004046a1 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401be5 : mov edi, 0x60ee20 ; mov rbp, rsp ; call rax
0x0000000000401b62 : mov edi, 0x60f320 ; jmp rax
0x0000000000401ba2 : mov edi, 0x60f320 ; jmp rdx
0x000000000040d5cd : mov edi, dr1 ; jmp rax
0x0000000000409078 : mov edi, dword ptr [rsi] ; add rdi, rax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x000000000040c267 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000040c266 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x00000000004026ea : mov edx, 0xd090af63 ; ret
0x00000000004026da : mov esi, 0xd090af63 ; ret
0x0000000000401ba0 : mov esi, eax ; mov edi, 0x60f320 ; jmp rdx
0x000000000040a487 : mov esp, ebp ; pop rbp ; ret
0x00000000004034b3 : mov qword ptr [0x60f280], rax ; pop rbp ; ret
0x00000000004034cc : mov qword ptr [0x60f370], rdi ; pop rbp ; ret
0x0000000000402a2e : mov qword ptr [rbp - 0x18], rax ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040489d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004033dd : mov qword ptr [rcx], rax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040aa7b : mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x000000000040907d : mov qword ptr [rsi], rdi ; pop rbp ; ret
0x000000000040651a : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000407ada : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403742 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404654 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040369e : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000407dd2 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040460c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000408513 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000402a32 : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040811d : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004038bc : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040496e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000406518 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000407bbc : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004069de : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403b48 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040b50e : mov rax, qword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040c207 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000402b8c : mov rax, rsi ; pop rbp ; ret
0x0000000000401bea : mov rbp, rsp ; call rax
0x0000000000401b50 : mov rbp, rsp ; ja 0x401b5d ; pop rbp ; ret
0x00000000004020a8 : mov rcx, qword ptr [rax*8 + 0x40c2f0] ; jmp rcx
0x0000000000404a31 : mov rcx, qword ptr [rax*8 + 0x40cac0] ; jmp rcx
0x0000000000404d55 : mov rcx, qword ptr [rax*8 + 0x40cb08] ; jmp rcx
0x00000000004071cd : mov rcx, qword ptr [rax*8 + 0x40cfc0] ; jmp rcx
0x0000000000401b9f : mov rsi, rax ; mov edi, 0x60f320 ; jmp rdx
0x000000000040a486 : mov rsp, rbp ; pop rbp ; ret
0x0000000000401bc5 : mov ss, edi ; and byte ptr [rax], al ; add ebx, esi ; ret
0x00000000004031f9 : movabs al, byte ptr [0x81b955b60f5e00c6] ; ret 0x6065
0x0000000000403147 : movabs al, byte ptr [0x81b955b60f5e00c6] ; ret 0xe01
0x0000000000408587 : movzx eax, al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402b10 : movzx eax, al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040a483 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040b85b : movzx eax, al ; pop rbp ; ret
0x0000000000401b22 : nop ; ret 0x40
0x00000000004026dd : nop ; shr byte ptr [rsi], 1 ; ret
0x000000000040c288 : nop dword ptr [rax + rax] ; ret
0x00000000004050bd : or al, 0x18 ; ret 0x6451
0x000000000040aa4d : or al, 1 ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d5c9 : or byte ptr [rax], al ; add byte ptr [rax], dh ; mov edi, dr1 ; jmp rax
0x0000000000406701 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040e4e5 : or eax, dword ptr [rax] ; add byte ptr [rax], cl ; ret
0x000000000040d85d : out -1, eax ; jmp qword ptr [rax]
0x000000000040d84d : out -1, eax ; jmp rax
0x000000000040c27c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405fa1 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040c27e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000403331 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040c280 : pop r14 ; pop r15 ; ret
0x0000000000405d53 : pop r14 ; pop rbp ; ret
0x0000000000403333 : pop r15 ; pop rbp ; ret
0x000000000040c282 : pop r15 ; ret
0x0000000000401bc2 : pop rbp ; mov byte ptr [rip + 0x20d78e], 1 ; ret
0x0000000000401b61 : pop rbp ; mov edi, 0x60f320 ; jmp rax
0x0000000000401b9e : pop rbp ; mov rsi, rax ; mov edi, 0x60f320 ; jmp rdx
0x000000000040c27b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040c27f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401b55 : pop rbp ; ret
0x00000000004023f1 : pop rbx ; idiv bh ; inc esi ; scasd eax, dword ptr [rdi] ; add cl, ch ; ret
0x0000000000405fa0 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403330 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405d52 : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000407811 : pop rbx ; ret
0x0000000000403334 : pop rdi ; pop rbp ; ret
0x000000000040c283 : pop rdi ; ret
0x0000000000403332 : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040c281 : pop rsi ; pop r15 ; ret
0x0000000000405d54 : pop rsi ; pop rbp ; ret
0x000000000040c27d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405fa2 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040649e : push rax ; pop rbp ; ret
0x0000000000409a43 : push rbp ; call 0x31b95
0x000000000040a613 : push rbp ; enter -0x76b8, 0xc ; ret 0x59e9
0x0000000000403aba : push rbp ; fmul dword ptr [rax + 0x29] ; ret 0x148
0x0000000000401be4 : push rbp ; mov edi, 0x60ee20 ; mov rbp, rsp ; call rax
0x000000000040028b : push rsp ; ret
0x000000000040d848 : rcl byte ptr [rdx], 0 ; add byte ptr [rax], al ; out -1, eax ; jmp rax
0x000000000040028c : ret
0x0000000000408ca2 : ret 0
0x000000000040ab15 : ret 0x10
0x0000000000403abe : ret 0x148
0x0000000000409125 : ret 0x18
0x000000000040613e : ret 0x1b2
0x0000000000401a32 : ret 0x20d7
0x0000000000401832 : ret 0x20d8
0x000000000040a906 : ret 0x24e8
0x0000000000403725 : ret 0x2948
0x00000000004054c9 : ret 0x294c
0x00000000004054e5 : ret 0x294d
0x000000000040316e : ret 0x2b77
0x00000000004054fd : ret 0x2de8
0x000000000040b1b9 : ret 0x31e8
0x0000000000406fff : ret 0x3be8
0x0000000000406cfc : ret 0x3ee8
0x0000000000401b23 : ret 0x40
0x0000000000409efa : ret 0x4a3b
0x000000000040ae96 : ret 0x54e8
0x0000000000404724 : ret 0x5589
0x000000000040a618 : ret 0x59e9
0x0000000000403202 : ret 0x6065
0x00000000004050bf : ret 0x6451
0x000000000040340c : ret 0x8001
0x0000000000403409 : ret 0x8070
0x0000000000402630 : ret 0x8141
0x0000000000407ccc : ret 0x8148
0x0000000000403dc6 : ret 0x840
0x0000000000405763 : ret 0x8840
0x0000000000407189 : ret 0x8844
0x0000000000407ce0 : ret 0x8948
0x00000000004054e8 : ret 0x8949
0x000000000040567c : ret 0x89a5
0x0000000000402bb5 : ret 0x8a44
0x00000000004024fc : ret 0x8b48
0x000000000040222b : ret 0xb0
0x0000000000408ca9 : ret 0xb849
0x0000000000408ec0 : ret 0xc
0x0000000000401b85 : ret 0xc148
0x0000000000403c5c : ret 0xc2f6
0x0000000000404ee4 : ret 0xca21
0x00000000004069d3 : ret 0xd284
0x0000000000403150 : ret 0xe01
0x0000000000405d8c : ret 0xee8
0x0000000000403dcd : ret 0xf01
0x0000000000405778 : ret 0xf180
0x0000000000403c4f : ret 0xf280
0x0000000000402345 : ret 0xf281
0x00000000004027cf : ret 0xf45
0x0000000000409a47 : ret 0xffff
0x0000000000403042 : ret 1
0x0000000000408a70 : ret 2
0x0000000000404a36 : retf 0x40 ; jmp rcx
0x00000000004047e6 : rol byte ptr [rcx + rcx*4], 1 ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040a60f : ror byte ptr [r8 - 0x75], 0x55 ; enter -0x76b8, 0xc ; ret 0x59e9
0x00000000004077f0 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000404970 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x4049db ; ret
0x0000000000401b8c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401b9b ; pop rbp ; ret
0x000000000040a610 : ror byte ptr [rax - 0x75], 0x55 ; enter -0x76b8, 0xc ; ret 0x59e9
0x000000000040a485 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x00000000004077f1 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x00000000004054bd : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x00000000004054c6 : ror byte ptr [rax - 0x77], 1 ; ret 0x294c
0x0000000000404971 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x4049da ; ret
0x0000000000404163 : ror byte ptr [rax - 0x7f], -0x3c ; jo 0x404173 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040d5c8 : ror byte ptr [rax], 0 ; add byte ptr [rax], dh ; mov edi, dr1 ; jmp rax
0x000000000040d708 : ror byte ptr [rip - 0x56800000], -1 ; jmp rax
0x000000000040b57f : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000401b8e : sar eax, 1 ; jne 0x401b99 ; pop rbp ; ret
0x000000000040e769 : sar edi, cl ; jmp rdx
0x0000000000401b8d : sar rax, 1 ; jne 0x401b9a ; pop rbp ; ret
0x000000000040e768 : sar rdi, cl ; jmp rdx
0x000000000040e4e0 : sbb al, 0 ; add byte ptr [rax], al ; in al, dx ; or eax, dword ptr [rax] ; add byte ptr [rax], cl ; ret
0x00000000004023f7 : scasd eax, dword ptr [rdi] ; add cl, ch ; ret
0x00000000004026dc : scasd eax, dword ptr [rdi] ; nop ; shr byte ptr [rsi], 1 ; ret
0x000000000040c0f8 : setne al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040c0fa : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004026de : shr byte ptr [rsi], 1 ; ret
0x000000000040b858 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000409131 : stosd dword ptr [rdi], eax ; add byte ptr cs:[rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040780f : sub dword ptr [rdx], 0x5b ; ret
0x000000000040c2d1 : sub esp, 8 ; add rsp, 8 ; ret
0x000000000040c2d0 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040c28a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040ddc9 : xchg bh, bh ; jmp qword ptr [rdx]
0x0000000000405762 : xchg eax, ebp ; ret 0x8840
0x000000000040bfc6 : xchg eax, ebp ; ret 0xd284
0x000000000040c0f9 : xchg eax, ebp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004069d2 : xchg eax, esp ; ret 0xd284
0x000000000040dee9 : xchg edi, edi ; jmp qword ptr [rax]
0x0000000000401bc6 : xlatb ; and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000408d9e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000406497 : xor eax, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x00000000004047e5 : xor eax, edx ; mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
