0x0000000000421c8e : adc ah, byte ptr [rcx + rbx*2] ; ret
0x0000000000401fd1 : adc al, 0x25 ; ret
0x0000000000402bac : adc al, 0x43 ; add byte ptr [rax - 0x77], cl ; ret 0x49e8
0x0000000000402c00 : adc al, 0x43 ; add byte ptr [rax - 0x77], cl ; ret 0xf5e8
0x00000000004322a0 : adc byte ptr [rax + rax], al ; add al, al ; hlt ; cld ; jmp rax
0x00000000004325d9 : adc byte ptr [rax], al ; add al, dh ; jrcxz 0x4325e4 ; call qword ptr [rax]
0x00000000004325c9 : adc byte ptr [rax], al ; add al, dh ; loop 0x4325d4 ; call rax
0x000000000042401e : adc byte ptr [rbx], cl ; ret 0x8948
0x000000000042400e : adc byte ptr [rbx], cl ; ret 0x8949
0x000000000042406c : adc byte ptr [rbx], cl ; ret 0x949
0x0000000000417ca4 : adc byte ptr [rip + 0x4c3b7001], 0x21 ; ret 0xb849
0x0000000000405c75 : adc byte ptr [rsi + 0x4c0a7478], -0x77 ; ret
0x000000000042811e : adc byte ptr [rsp + rbx*2 + 0x49], 0x29 ; ret
0x000000000042812e : adc byte ptr [rsp + rbx*2 + 0x49], 1 ; ret
0x0000000000402c54 : adc eax, 0x89480043 ; ret 0xa1e8
0x0000000000425c22 : adc eax, 0x894c9a7e ; ret
0x000000000042dd59 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000432891 : adc ebp, edi ; call qword ptr [rsi]
0x0000000000418c3e : adc esp, dword ptr [rdi - 0x76b33f94] ; ret
0x000000000043296b : add ah, ah ; add al, byte ptr [rax] ; add byte ptr [rax + 0x15], ah ; std ; jmp rsi
0x0000000000432f83 : add ah, bh ; or byte ptr [rax], al ; add al, cl ; mov ch, -1 ; jmp qword ptr [rdx]
0x00000000004322a1 : add al, 0 ; add al, al ; hlt ; cld ; jmp rax
0x0000000000401d8b : add al, 0x25 ; ret
0x0000000000401d38 : add al, 0x25 ; ret 0x6342
0x000000000043288c : add al, 2 ; add byte ptr [rax], al ; push rax ; adc ebp, edi ; call qword ptr [rsi]
0x000000000043270f : add al, ah ; cld ; jmp rdx
0x00000000004322a3 : add al, al ; hlt ; cld ; jmp rax
0x00000000004324d3 : add al, al ; ret 0xffff
0x000000000043288d : add al, byte ptr [rax] ; add byte ptr [rax + 0x11], dl ; std ; call qword ptr [rsi]
0x000000000043296d : add al, byte ptr [rax] ; add byte ptr [rax + 0x15], ah ; std ; jmp rsi
0x0000000000401f81 : add al, ch ; mov ecx, 0xf6fffff8 ; add al, 0x25 ; ret 0x6342
0x00000000004326a7 : add al, cl ; in al, dx ; cld ; jmp rax
0x0000000000432f87 : add al, cl ; mov ch, -1 ; jmp qword ptr [rdx]
0x00000000004325db : add al, dh ; jrcxz 0x4325e2 ; call qword ptr [rax]
0x00000000004325cb : add al, dh ; loop 0x4325d2 ; call rax
0x00000000004324db : add al, dh ; ret 0xffff
0x0000000000430b3f : add bl, dh ; ret
0x000000000042feb3 : add byte ptr [r8 - 0x77], cl ; call 0xfffffffffd57c1ac
0x0000000000402bad : add byte ptr [r8 - 0x77], cl ; ret 0x49e8
0x0000000000402c55 : add byte ptr [r8 - 0x77], cl ; ret 0xa1e8
0x0000000000402c01 : add byte ptr [r8 - 0x77], cl ; ret 0xf5e8
0x00000000004029cd : add byte ptr [r8], r8b ; add dh, dh ; add al, 0x25 ; ret 0x6342
0x000000000043288f : add byte ptr [rax + 0x11], dl ; std ; call qword ptr [rsi]
0x000000000043296f : add byte ptr [rax + 0x15], ah ; std ; jmp rsi
0x0000000000402ccf : add byte ptr [rax + 0x2504f601], dh ; ret
0x0000000000403582 : add byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000043270b : add byte ptr [rax + rax - 0xd200000], al ; cld ; jmp rdx
0x0000000000404977 : add byte ptr [rax - 0x46], cl ; mov ebx, 0xd0fb93d9 ; ret 0x68c2
0x0000000000402b3a : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; call qword ptr [rbx]
0x0000000000402076 : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x4319
0x0000000000402775 : add byte ptr [rax - 0x75], cl ; fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x000000000042bafa : add byte ptr [rax - 0x75], cl ; push rbp ; call 0x59053c52
0x000000000042edcd : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000042feb4 : add byte ptr [rax - 0x77], cl ; call 0xfffffffffd57c1ab
0x0000000000402bae : add byte ptr [rax - 0x77], cl ; ret 0x49e8
0x0000000000402c56 : add byte ptr [rax - 0x77], cl ; ret 0xa1e8
0x0000000000402c02 : add byte ptr [rax - 0x77], cl ; ret 0xf5e8
0x000000000042bb05 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000004324bb : add byte ptr [rax], ah ; ret 0xffff
0x000000000043288a : add byte ptr [rax], al ; add al, 2 ; add byte ptr [rax], al ; push rax ; adc ebp, edi ; call qword ptr [rsi]
0x000000000043270d : add byte ptr [rax], al ; add al, ah ; cld ; jmp rdx
0x00000000004326a5 : add byte ptr [rax], al ; add al, cl ; in al, dx ; cld ; jmp rax
0x0000000000430b3d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000402ccd : add byte ptr [rax], al ; add byte ptr [rax + 0x2504f601], dh ; ret
0x0000000000402b38 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; call qword ptr [rbx]
0x0000000000402074 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x4319
0x0000000000402773 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x000000000042baf8 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbp ; call 0x59053c54
0x000000000042bb03 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000430b3b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000403bd7 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000430b3c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004050ee : add byte ptr [rax], al ; add byte ptr [rcx - 0x11b43], al ; call qword ptr [rax]
0x0000000000402a5b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x00000000004022ce : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042e66e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000402486 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000043020c : add byte ptr [rax], al ; add cl, ch ; ret 2
0x0000000000401d87 : add byte ptr [rax], al ; add dh, al ; add al, 0x25 ; ret
0x00000000004029ce : add byte ptr [rax], al ; add dh, dh ; add al, 0x25 ; ret 0x6342
0x0000000000402403 : add byte ptr [rax], al ; add rsi, rax ; mov rax, rsi ; pop rbp ; ret
0x000000000042dd21 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042da30 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040135b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000432f82 : add byte ptr [rax], al ; cld ; or byte ptr [rax], al ; add al, cl ; mov ch, -1 ; jmp qword ptr [rdx]
0x000000000043260a : add byte ptr [rax], al ; in eax, -1 ; call rax
0x0000000000432296 : add byte ptr [rax], al ; ja 0x4322a3 ; add byte ptr [rax], al ; loopne 0x432297 ; cld ; call qword ptr [rax]
0x0000000000401519 : add byte ptr [rax], al ; jmp 0x401379
0x000000000043229a : add byte ptr [rax], al ; loopne 0x432293 ; cld ; call qword ptr [rax]
0x000000000043270e : add byte ptr [rax], al ; loopne 0x432709 ; cld ; jmp rdx
0x0000000000432d42 : add byte ptr [rax], al ; mov esp, 0x58000006 ; mov bl, -1 ; jmp qword ptr [rdx]
0x000000000042c2f2 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000043259a : add byte ptr [rax], al ; nop ; fdivr st(7) ; call qword ptr [rax]
0x00000000004324ca : add byte ptr [rax], al ; nop ; ret 0xffff
0x0000000000432d46 : add byte ptr [rax], al ; pop rax ; mov bl, -1 ; jmp qword ptr [rdx]
0x0000000000402d1b : add byte ptr [rax], al ; pop rbp ; ret
0x000000000042ec6b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042d9f0 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000043288e : add byte ptr [rax], al ; push rax ; adc ebp, edi ; call qword ptr [rsi]
0x0000000000430b3e : add byte ptr [rax], al ; ret
0x00000000004322a2 : add byte ptr [rax], al ; sal ah, -4 ; jmp rax
0x000000000043270a : add byte ptr [rax], al ; test byte ptr [rax], al ; add byte ptr [rax], al ; loopne 0x43270d ; cld ; jmp rdx
0x00000000004331c7 : add byte ptr [rax], bh ; ret 0xffff
0x00000000004331a7 : add byte ptr [rax], bl ; ret 0xffff
0x000000000043255b : add byte ptr [rax], dh ; sar edi, 1 ; call qword ptr [rax]
0x000000000042ec6c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000042d9f1 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000402379 : add byte ptr [rbx - 0x1134b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004050f0 : add byte ptr [rcx - 0x11b43], al ; call qword ptr [rax]
0x00000000004309dc : add byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x0000000000401808 : add byte ptr [rcx], al ; ret
0x0000000000430208 : add byte ptr [rdi], cl ; lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000402a5d : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x00000000004022d0 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042e670 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000402488 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000432297 : add byte ptr [rdi], dh ; add byte ptr [rax], al ; loopne 0x432296 ; cld ; call qword ptr [rax]
0x00000000004017a3 : add byte ptr [rdx + 0x63], 0 ; jmp rax
0x00000000004017e3 : add byte ptr [rdx + 0x63], 0 ; jmp rdx
0x000000000043288b : add byte ptr [rdx + rax], al ; add byte ptr [rax], al ; push rax ; adc ebp, edi ; call qword ptr [rsi]
0x0000000000416f62 : add cl, byte ptr [rbp + 9] ; ret 0x8148
0x0000000000414a05 : add cl, byte ptr [rcx + 0x21] ; fisttp dword ptr [rax - 0x45] ; cmp byte ptr [rax], ch ; jmp 0x4149db
0x00000000004251d9 : add cl, byte ptr [rcx + 0x29] ; ret 0x149
0x000000000041b47c : add cl, byte ptr [rcx + 1] ; ret 0x8b48
0x000000000043020e : add cl, ch ; ret 2
0x0000000000401d89 : add dh, al ; add al, 0x25 ; ret
0x0000000000401d36 : add dh, al ; add al, 0x25 ; ret 0x6342
0x00000000004029d0 : add dh, dh ; add al, 0x25 ; ret 0x6342
0x000000000042f2a9 : add dword ptr [rax - 0x77], ecx ; ret 0x8148
0x000000000042dd1f : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042ec6a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000042d9ef : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000043089d : add dword ptr [rax], ecx ; ret 0x840
0x000000000040351c : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402e84 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040345b : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x000000000043057a : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401804 : add eax, 0x232aae ; add ebx, esi ; ret
0x000000000043020b : add eax, 0xe9000000 ; ret 2
0x0000000000404a62 : add eax, 0xecae37b7 ; sbb byte ptr [rcx - 0x77], cl ; ret
0x00000000004017cb : add eax, edx ; sar rax, 1 ; jne 0x4017dc ; pop rbp ; ret
0x0000000000401809 : add ebx, esi ; ret
0x0000000000407a35 : add ecx, dword ptr [rbp + 9] ; ret 0x8148
0x000000000042594c : add ecx, dword ptr [rcx + 0x29] ; ret 0xb848
0x0000000000401d84 : add ecx, ebp ; wait ; add byte ptr [rax], al ; add dh, al ; add al, 0x25 ; ret
0x0000000000401d5f : add esi, eax ; add al, 0x25 ; ret 0x6342
0x0000000000402406 : add esi, eax ; mov rax, rsi ; pop rbp ; ret
0x0000000000402cd1 : add esi, esi ; add al, 0x25 ; ret
0x00000000004019eb : add esp, 0x10 ; pop rbp ; ret
0x000000000043053c : add esp, 0x130 ; pop rbp ; ret
0x0000000000402d17 : add esp, 0x140 ; pop rbp ; ret
0x000000000042bd7b : add esp, 0x170 ; pop rbp ; ret
0x0000000000404f65 : add esp, 0x1a0 ; pop rbp ; ret
0x000000000042f97e : add esp, 0x1e0 ; pop rbp ; ret
0x0000000000403521 : add esp, 0x20 ; pop rbp ; ret
0x00000000004042ac : add esp, 0x28 ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000401acd : add esp, 0x30 ; pop rbp ; ret
0x0000000000402e89 : add esp, 0x40 ; pop rbp ; ret
0x000000000042e13c : add esp, 0x50 ; pop rbp ; ret
0x0000000000403460 : add esp, 0x60 ; pop rbp ; ret
0x000000000042c613 : add esp, 0x70 ; pop rbp ; ret
0x000000000042e04a : add esp, 0x90 ; pop rbp ; ret
0x000000000042ee33 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040135e : add esp, 8 ; ret
0x00000000004017ca : add rax, rdx ; sar rax, 1 ; jne 0x4017dd ; pop rbp ; ret
0x0000000000402405 : add rsi, rax ; mov rax, rsi ; pop rbp ; ret
0x00000000004019ea : add rsp, 0x10 ; pop rbp ; ret
0x000000000043053b : add rsp, 0x130 ; pop rbp ; ret
0x0000000000402d16 : add rsp, 0x140 ; pop rbp ; ret
0x000000000042bd7a : add rsp, 0x170 ; pop rbp ; ret
0x0000000000404f64 : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000042f97d : add rsp, 0x1e0 ; pop rbp ; ret
0x0000000000403520 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000401acc : add rsp, 0x30 ; pop rbp ; ret
0x0000000000402e88 : add rsp, 0x40 ; pop rbp ; ret
0x000000000042e13b : add rsp, 0x50 ; pop rbp ; ret
0x000000000040345f : add rsp, 0x60 ; pop rbp ; ret
0x000000000042c612 : add rsp, 0x70 ; pop rbp ; ret
0x000000000042e049 : add rsp, 0x90 ; pop rbp ; ret
0x000000000042ee32 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040135d : add rsp, 8 ; ret
0x0000000000421c8f : and al, 0x59 ; ret
0x0000000000430579 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000416468 : and byte ptr [rax - 0x25], bh ; push rcx ; psrad mm6, qword ptr [rcx + rcx*2 + 0x29] ; ret 0x8b48
0x0000000000416458 : and byte ptr [rax - 0x25], bh ; push rcx ; psrad mm6, qword ptr [rcx + rcx*2 + 1] ; ret 0x149
0x0000000000404d43 : and byte ptr [rbx + 0x41], bl ; pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000416f5f : and byte ptr [rbx + 0x94d0248], bl ; ret 0x8148
0x0000000000429bcc : and byte ptr [rcx + 0x29], cl ; ret 0xb848
0x0000000000429bbc : and byte ptr [rcx + 1], cl ; ret 0x149
0x0000000000425c1f : and byte ptr [rdx - 0x51], al ; adc eax, 0x894c9a7e ; ret
0x0000000000410036 : and cl, byte ptr [rcx + 0x29] ; ror dword ptr [rax - 0x48], 0x3e ; mov ah, 0x28 ; ret 0x294c
0x0000000000420ca6 : and dword ptr [rbx + 0x6a], 0x894ce4d2 ; ret
0x0000000000418e61 : and dword ptr [rdi], edx ; stosb byte ptr [rdi], al ; call 0xffffffffc2965c66
0x0000000000418e71 : and dword ptr [rdi], edx ; stosb byte ptr [rdi], al ; call 0xffffffffc2965c76
0x0000000000418e84 : and dword ptr [rdi], edx ; stosb byte ptr [rdi], al ; call 0xffffffffc2965c89
0x0000000000418eaa : and dword ptr [rdi], edx ; stosb byte ptr [rdi], al ; call 0xffffffffc2965caf
0x0000000000403a2b : and eax, 0x634290 ; call 0x42fc77
0x0000000000401d31 : and eax, 0x6342c1 ; add dh, al ; add al, 0x25 ; ret 0x6342
0x0000000000401d5a : and eax, 0x6342c1 ; add esi, eax ; add al, 0x25 ; ret 0x6342
0x00000000004039ef : and eax, 0x6342e0 ; pop rbp ; ret
0x0000000000403a13 : and eax, 0x6342e8 ; pop rbp ; ret
0x000000000040a211 : and eax, 0x894c034b ; ret
0x0000000000401807 : and eax, dword ptr [rax] ; add ebx, esi ; ret
0x000000000040b5db : and ebp, edx ; ret 0xb18a
0x0000000000416a78 : and ecx, dword ptr [rcx + 0x29] ; ret
0x0000000000416a88 : and ecx, dword ptr [rcx + 1] ; ret
0x0000000000401f82 : call 0x401848
0x0000000000403a30 : call 0x42fc72
0x00000000004255e1 : call 0x4a2a1878
0x00000000004255d4 : call 0x4d2a186b
0x00000000004255fe : call 0x4e2a1895
0x000000000042b823 : call 0x59053973
0x000000000042ba55 : call 0x59053ba5
0x000000000042bafe : call 0x59053c4e
0x0000000000414352 : call 0xffffffffc2428c08
0x0000000000414362 : call 0xffffffffc26a8c18
0x0000000000418e64 : call 0xffffffffc2965c63
0x0000000000418e74 : call 0xffffffffc2965c73
0x0000000000418e87 : call 0xffffffffc2965c86
0x0000000000418ead : call 0xffffffffc2965cac
0x0000000000404825 : call 0xffffffffc2c99056
0x000000000040beab : call 0xffffffffc3ca07f1
0x0000000000415912 : call 0xffffffffc3caa258
0x0000000000416158 : call 0xffffffffc3caaa9e
0x00000000004178ef : call 0xffffffffc3cac235
0x0000000000425e70 : call 0xffffffffc3cba7b6
0x0000000000426d94 : call 0xffffffffc3cbb6da
0x0000000000429a35 : call 0xffffffffc3cbe246
0x00000000004299df : call 0xffffffffc4115631
0x000000000042da29 : call 0xffffffffe9056379
0x000000000042da28 : call 0xffffffffe905637a
0x000000000042feb8 : call 0xfffffffffd57c1a7
0x000000000042feb7 : call 0xfffffffffd57c1a8
0x0000000000430b19 : call qword ptr [r12 + rbx*8]
0x00000000004050f6 : call qword ptr [rax]
0x0000000000402b3f : call qword ptr [rbx]
0x000000000041f829 : call qword ptr [rdx]
0x0000000000432893 : call qword ptr [rsi]
0x0000000000430b1a : call qword ptr [rsp + rbx*8]
0x000000000040182d : call rax
0x000000000040c7f8 : call rbx
0x0000000000432c63 : call rdi
0x000000000040b208 : call rdx
0x0000000000414d9a : cdq ; mov ecx, 0x894cfef8 ; ret
0x000000000043053a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x000000000042f19f : clc ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042e681 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x000000000042c0e8 : clc ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000416b77 : clc ; idiv bh ; dec dword ptr [rax + 0x29] ; ret 0x8b48
0x0000000000413b30 : clc ; idiv edi ; dec dword ptr [rax + 0x29] ; ret 0x8b48
0x00000000004017cf : clc ; jne 0x4017d8 ; pop rbp ; ret
0x000000000040f90c : clc ; lea edi, dword ptr ds:[rbx + 0x1498392] ; ret 0x149
0x000000000040f91c : clc ; lea edi, dword ptr ds:[rbx + 0x29498392] ; ret 0x8b48
0x000000000042c4c5 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000430a5f : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402417 : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000403ebf : clc ; mov rdi, qword ptr [rbp - 0x10] ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x000000000040241b : clc ; pop rbp ; ret
0x00000000004317d2 : clc ; sal byte ptr [rax - 0x75], 1 ; ret 0xbe30
0x000000000042f9e6 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404f63 : cld ; add rsp, 0x1a0 ; pop rbp ; ret
0x000000000042f569 : cld ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042fb0e : cld ; add rsp, 0x30 ; pop rbp ; ret
0x000000000043229e : cld ; call qword ptr [rax]
0x0000000000427e0f : cld ; dec byte ptr [rbp + 9] ; ret 0x8148
0x000000000041b50b : cld ; fisttp word ptr [rax + 0x29] ; ret 0x14c
0x000000000041b51b : cld ; fisttp word ptr [rax + 1] ; ret 0x8948
0x00000000004322a6 : cld ; jmp rax
0x0000000000432712 : cld ; jmp rdx
0x0000000000430a5c : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000042f9e3 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042f566 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042fb0b : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000432f84 : cld ; or byte ptr [rax], al ; add al, cl ; mov ch, -1 ; jmp qword ptr [rdx]
0x0000000000427e0d : cld ; or esp, edi ; dec byte ptr [rbp + 9] ; ret 0x8148
0x00000000004041b4 : cld ; pop rbx ; out 3, al ; jmp 0xffffffffc3c98a69
0x000000000041b476 : cli ; or al, 0xffffffffffffffc0 ; xchg eax, ecx ; out -0x32, eax ; add cl, byte ptr [rcx + 1] ; ret 0x8b48
0x0000000000427314 : cli ; ret
0x0000000000415837 : cmovge ecx, dword ptr [rcx] ; ret 0x8148
0x00000000004171bf : cmp ah, dh ; ret 0x7b6a
0x0000000000402b3d : cmp al, 0x25 ; call qword ptr [rbx]
0x0000000000402079 : cmp al, 0x25 ; ret 0x4319
0x00000000004149fe : cmp byte ptr [rax], ch ; jmp 0x4149c8
0x0000000000414a0b : cmp byte ptr [rax], ch ; jmp 0x4149d5
0x0000000000414a25 : cmp byte ptr [rax], ch ; jmp 0x4149ef
0x00000000004032c3 : cmp byte ptr [rcx - 0x76b7647c], al ; ret 0x148
0x000000000042f869 : cmp dword ptr [rdx - 0x76be63d5], ebx ; ret
0x00000000004199c5 : cmp dword ptr [rsi], eax ; mov ah, byte ptr [rax + rsi*8 - 0x7e] ; hlt ; ret
0x000000000041e278 : cmp eax, 0x894c30a4 ; ret
0x000000000040178d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4017a0 ; pop rbp ; ret
0x0000000000418b6f : cmp ecx, dword ptr [rax + 0x29] ; ret 0x8948
0x0000000000418b5f : cmp ecx, dword ptr [rax + 1] ; ret 0x14c
0x0000000000415c3b : cmpsb byte ptr [rsi], byte ptr [rdi] ; mov dl, -0x4d ; push rbx ; mov edx, 0x894c087e ; ret
0x0000000000427c98 : cwde ; hlt ; jae 0x427cf0 ; ret 0x23f8
0x0000000000427ca8 : cwde ; hlt ; jae 0x427d00 ; ret 0x23f8
0x0000000000427cbb : cwde ; hlt ; jae 0x427d13 ; ret 0x23f8
0x0000000000427ce1 : cwde ; hlt ; jae 0x427d39 ; ret 0x23f8
0x0000000000414b29 : cwde ; idiv edi ; dec dword ptr [rax + 0x29] ; ret 0x8b48
0x000000000042e7ac : cwde ; mov rcx, qword ptr [rax*8 + 0x431ed8] ; jmp rcx
0x000000000040e5c1 : dec byte ptr [rax - 0x41] ; ret 0x7483
0x000000000040b20e : dec byte ptr [rax - 0x41] ; xor dh, byte ptr [rcx] ; xchg eax, ebp ; call rdx
0x0000000000412c5e : dec byte ptr [rax - 0x77] ; ret 0x2948
0x0000000000427e10 : dec byte ptr [rbp + 9] ; ret 0x8148
0x000000000040491b : dec byte ptr [rbp - 0x77] ; ret
0x000000000040db3d : dec dword ptr [rax + 0x21] ; ret
0x00000000004052c7 : dec dword ptr [rax + 0x21] ; ret 0x8b48
0x00000000004130ed : dec dword ptr [rax + 0x29] ; ret
0x0000000000420138 : dec dword ptr [rax + 0x29] ; ret 0x8948
0x000000000040b8c2 : dec dword ptr [rax + 0x29] ; ret 0x8b48
0x00000000004181b6 : dec dword ptr [rax + 9] ; ret
0x00000000004128e6 : dec dword ptr [rax - 0x3f] ; jmp 0xffffffffc3ca70fd
0x00000000004248ea : dec dword ptr [rax - 0x3f] ; jmp 0xffffffffc3cb9201
0x000000000040e5b4 : dec dword ptr [rax - 0x41] ; ret 0x7483
0x000000000040b201 : dec dword ptr [rax - 0x41] ; xor dh, byte ptr [rcx] ; xchg eax, ebp ; call rdx
0x0000000000421cd4 : dec dword ptr [rax - 0x42] ; adc ah, byte ptr [rcx + rbx*2] ; ret
0x0000000000427311 : dec dword ptr [rax - 0x42] ; cli ; ret
0x000000000041d8f3 : dec dword ptr [rax - 0x42] ; jmp qword ptr [rax]
0x0000000000405484 : dec dword ptr [rax - 0x42] ; jrcxz 0x40542c ; ret
0x000000000042a61a : dec dword ptr [rax - 0x42] ; mov ebp, 0x8087b8f ; ret
0x000000000040695b : dec dword ptr [rax - 0x42] ; ret
0x0000000000420150 : dec dword ptr [rax - 0x42] ; ret 0x3cfb
0x0000000000427b76 : dec dword ptr [rax - 0x42] ; ret 0xe54b
0x0000000000427cdd : dec dword ptr [rax - 0x42] ; test al, -0x68 ; hlt ; jae 0x427d3d ; ret 0x23f8
0x00000000004175ee : dec dword ptr [rax - 0x42] ; xor al, 0xffffffffffffffb7 ; ret
0x0000000000421c8b : dec dword ptr [rax - 0x45] ; adc ah, byte ptr [rcx + rbx*2] ; ret
0x000000000040b5d8 : dec dword ptr [rax - 0x45] ; and ebp, edx ; ret 0xb18a
0x00000000004149fb : dec dword ptr [rax - 0x45] ; cmp byte ptr [rax], ch ; jmp 0x4149cb
0x000000000041fdca : dec dword ptr [rax - 0x45] ; jns 0x41fde0 ; test al, 0x6f ; ret
0x000000000042a5d1 : dec dword ptr [rax - 0x45] ; mov ebp, 0x8087b8f ; ret
0x000000000041a1db : dec dword ptr [rax - 0x45] ; outsd dx, dword ptr [rsi] ; ret 0x9f22
0x000000000042039e : dec dword ptr [rax - 0x45] ; ret
0x0000000000427b2d : dec dword ptr [rax - 0x45] ; ret 0xe54b
0x0000000000423977 : dec dword ptr [rax - 0x45] ; stosd dword ptr [rdi], eax ; xchg eax, edi ; ret
0x00000000004175a5 : dec dword ptr [rax - 0x45] ; xor al, 0xffffffffffffffb7 ; ret
0x000000000041937a : dec dword ptr [rax - 0x46] ; mov dh, -0x40 ; movsb byte ptr [rdi], byte ptr [rsi] ; leave ; ret
0x000000000040663f : dec dword ptr [rax - 0x46] ; ret
0x0000000000415c70 : dec dword ptr [rax - 0x46] ; ret 0xb2a6
0x000000000040e387 : dec dword ptr [rax - 0x46] ; ret 0xb604
0x000000000041bd10 : dec dword ptr [rax - 0x46] ; ret 0xca0d
0x00000000004171f1 : dec dword ptr [rax - 0x48] ; mov ebp, 0xe63a2580 ; ret 0x7b6a
0x0000000000417045 : dec dword ptr [rax - 0x48] ; ret 0x64f0
0x0000000000416130 : dec dword ptr [rax - 0x48] ; ret 0xfee1
0x00000000004247c4 : dec dword ptr [rax - 0x48] ; xchg eax, ebp ; out -0x4b, al ; ret
0x0000000000401d07 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; nop ; or eax, dword ptr [rbx] ; jmp rcx
0x000000000040d2fb : dec dword ptr [rax - 0x77] ; ret
0x0000000000402289 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000405175 : dec dword ptr [rax - 0x77] ; ret 0x8148
0x0000000000402bca : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000040237f : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040c176 : dec dword ptr [rbp + 0x29] ; ret
0x0000000000410703 : dec dword ptr [rbp - 0x77] ; fimul dword ptr [rcx + 0x21] ; ret 0x8149
0x000000000040566e : dec dword ptr [rbp - 0x77] ; ret
0x0000000000416094 : dec dword ptr [rbp - 0x77] ; ret 0x2149
0x000000000040553f : dec dword ptr [rbp - 0x77] ; ret 0x214d
0x00000000004046e9 : dec dword ptr [rbp - 0x77] ; ret 0x8149
0x0000000000414134 : dec dword ptr [rbp - 0x77] ; ror dword ptr [rcx + 0x21], cl ; ret
0x000000000040da09 : dec dword ptr [rcx + 0x21] ; ret
0x0000000000410009 : dec dword ptr [rcx + 0x29] ; ret
0x00000000004107e2 : dec dword ptr [rcx + 0x29] ; ret 0x14c
0x000000000040ca86 : dec dword ptr [rcx + 0x29] ; ret 0x8b48
0x000000000042009c : dec dword ptr [rcx + 0x29] ; ret 0xb848
0x000000000040aec8 : dec dword ptr [rcx + 1] ; ret
0x000000000041bca0 : dec dword ptr [rcx + 1] ; ret 0x149
0x000000000040ae3d : dec dword ptr [rcx + 9] ; ret
0x0000000000428976 : dec dword ptr [rcx + 9] ; ret 0x214d
0x000000000040bea8 : dec dword ptr [rcx - 0x3f] ; call 0xffffffffc3ca07f4
0x000000000041590f : dec dword ptr [rcx - 0x3f] ; call 0xffffffffc3caa25b
0x0000000000416155 : dec dword ptr [rcx - 0x3f] ; call 0xffffffffc3caaaa1
0x00000000004178ec : dec dword ptr [rcx - 0x3f] ; call 0xffffffffc3cac238
0x0000000000425e6d : dec dword ptr [rcx - 0x3f] ; call 0xffffffffc3cba7b9
0x0000000000426d91 : dec dword ptr [rcx - 0x3f] ; call 0xffffffffc3cbb6dd
0x000000000040f65f : dec dword ptr [rcx - 0x3f] ; jmp 0xffffffffc3ca3fab
0x000000000040febe : dec dword ptr [rcx - 0x3f] ; jmp 0xffffffffc3ca480a
0x0000000000415136 : dec dword ptr [rcx - 0x3f] ; jmp 0xffffffffc3ca9a82
0x000000000041c235 : dec dword ptr [rcx - 0x3f] ; jmp 0xffffffffc3cb0b81
0x0000000000420f43 : dec dword ptr [rcx - 0x3f] ; jmp 0xffffffffc3cb588f
0x0000000000424f6c : dec dword ptr [rcx - 0x3f] ; jmp 0xffffffffc3cb98b8
0x000000000040b602 : dec dword ptr [rcx - 0x41] ; and ebp, edx ; ret 0xb18a
0x0000000000414a22 : dec dword ptr [rcx - 0x41] ; cmp byte ptr [rax], ch ; jmp 0x4149f2
0x00000000004171b9 : dec dword ptr [rcx - 0x41] ; mov ebp, 0xe63a2580 ; ret 0x7b6a
0x00000000004237f0 : dec dword ptr [rcx - 0x41] ; ret
0x0000000000416ff5 : dec dword ptr [rcx - 0x41] ; ret 0x64f0
0x00000000004160e0 : dec dword ptr [rcx - 0x41] ; ret 0xfee1
0x00000000004239a5 : dec dword ptr [rcx - 0x41] ; stosd dword ptr [rdi], eax ; xchg eax, edi ; ret
0x000000000041cad8 : dec dword ptr [rcx - 0x41] ; xor dword ptr [rsi], edi ; ret 0x93b3
0x000000000042476d : dec dword ptr [rcx - 0x42] ; xchg eax, ebp ; out -0x4b, al ; ret
0x000000000040e5de : dec dword ptr [rcx - 0x45] ; ret 0x7483
0x0000000000427c94 : dec dword ptr [rcx - 0x45] ; test al, -0x68 ; hlt ; jae 0x427cf4 ; ret 0x23f8
0x000000000041caae : dec dword ptr [rcx - 0x45] ; xor dword ptr [rsi], edi ; ret 0x93b3
0x00000000004255f7 : dec dword ptr [rcx - 0x46] ; fsub dword ptr [rdi] ; xchg eax, edx ; push rax ; call 0x4e2a189c
0x0000000000423c9e : dec dword ptr [rcx - 0x46] ; hlt ; ret
0x0000000000419e8b : dec dword ptr [rcx - 0x46] ; ja 0x419e16 ; ret 0x29a8
0x000000000041fda0 : dec dword ptr [rcx - 0x46] ; jns 0x41fdb6 ; test al, 0x6f ; ret
0x000000000041a1b1 : dec dword ptr [rcx - 0x46] ; outsd dx, dword ptr [rsi] ; ret 0x9f22
0x0000000000406912 : dec dword ptr [rcx - 0x46] ; ret
0x0000000000415c27 : dec dword ptr [rcx - 0x46] ; ret 0xb2a6
0x000000000040e33e : dec dword ptr [rcx - 0x46] ; ret 0xb604
0x00000000004054ae : dec dword ptr [rcx - 0x47] ; jrcxz 0x405456 ; ret
0x0000000000419331 : dec dword ptr [rcx - 0x47] ; mov dh, -0x40 ; movsb byte ptr [rdi], byte ptr [rsi] ; leave ; ret
0x0000000000406052 : dec dword ptr [rcx - 0x47] ; ret
0x000000000040b22b : dec dword ptr [rcx - 0x47] ; xor dh, byte ptr [rcx] ; xchg eax, ebp ; call rdx
0x00000000004255cd : dec dword ptr [rcx - 0x48] ; fsub dword ptr [rdi] ; xchg eax, edx ; push rax ; call 0x4d2a1872
0x0000000000423c74 : dec dword ptr [rcx - 0x48] ; hlt ; ret
0x0000000000419e61 : dec dword ptr [rcx - 0x48] ; ja 0x419dec ; ret 0x29a8
0x000000000042a0d6 : dec dword ptr [rcx - 0x48] ; ret
0x000000000040ad38 : dec dword ptr [rcx - 0x77] ; ret
0x000000000040e0fd : dec dword ptr [rcx - 0x77] ; ret 0x2149
0x000000000042d182 : dec dword ptr [rcx - 0x77] ; ret 0x294d
0x00000000004277ec : enter -0x46b8, -0x54 ; ret
0x0000000000410049 : enter -0x47b8, 0x3e ; mov ah, 0x28 ; ret 0x294c
0x0000000000418b6e : enter 0x483b, 0x29 ; ret 0x8948
0x0000000000418b5e : enter 0x483b, 1 ; ret 0x14c
0x000000000040af80 : enter 0x48a1, 0x29 ; ret 0x148
0x000000000040af90 : enter 0x48a1, 1 ; ret 0x8948
0x000000000042d510 : enter 0x4b05, 0x34 ; fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x000000000040e6a2 : fcmove st(0), st(6) ; movsb byte ptr [rdi], byte ptr [rsi] ; push 0x94deb4a ; ret 0x8148
0x0000000000421b64 : fdiv dword ptr [rdx - 0x76b30258] ; ret
0x000000000043259d : fdivr st(7) ; call qword ptr [rax]
0x000000000042d514 : fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x000000000042781d : ficom dword ptr [rbx - 0x3a] ; mov ah, byte ptr [rcx + 0x7a] ; or dword ptr [rcx + 0x29], ecx ; ret
0x000000000042780d : ficom dword ptr [rbx - 0x3a] ; mov ah, byte ptr [rcx + 0x7a] ; or dword ptr [rcx + 1], ecx ; ret
0x0000000000422917 : ficomp word ptr [rcx + 0x294916cd] ; ret 0xb848
0x000000000040b615 : fimul dword ptr [rax + 9] ; ret
0x0000000000416e38 : fimul dword ptr [rax + 9] ; ror dword ptr [rax - 0x77], cl ; ret 0x2948
0x000000000040b5e5 : fimul dword ptr [rax - 0x45] ; and ebp, edx ; ret 0xb18a
0x0000000000410706 : fimul dword ptr [rcx + 0x21] ; ret 0x8149
0x00000000004110a9 : fimul dword ptr [rcx + 0x29] ; ret 0xb848
0x0000000000411099 : fimul dword ptr [rcx + 1] ; ret 0x149
0x0000000000415c4a : fimul dword ptr [rcx - 0x46] ; ret 0xb2a6
0x000000000040e361 : fimul dword ptr [rcx - 0x46] ; ret 0xb604
0x0000000000421c9b : fimul word ptr [rax - 0x45] ; adc ah, byte ptr [rcx + rbx*2] ; ret
0x000000000042a5e1 : fimul word ptr [rax - 0x45] ; mov ebp, 0x8087b8f ; ret
0x00000000004203ae : fimul word ptr [rax - 0x45] ; ret
0x0000000000427b3d : fimul word ptr [rax - 0x45] ; ret 0xe54b
0x00000000004175b5 : fimul word ptr [rax - 0x45] ; xor al, 0xffffffffffffffb7 ; ret
0x00000000004047cc : fimul word ptr [rax - 0x76b35f6f] ; ret
0x00000000004047a9 : fimul word ptr [rax - 0x76b65f6f] ; ret 0x314d
0x000000000040b4f1 : fimul word ptr [rbp - 0x77] ; ret 0x8149
0x0000000000427cb7 : fimul word ptr [rcx - 0x45] ; test al, -0x68 ; hlt ; jae 0x427d17 ; ret 0x23f8
0x0000000000406935 : fimul word ptr [rcx - 0x46] ; ret
0x0000000000425a00 : fisttp dword ptr [rax + 0x29] ; ret 0x148
0x0000000000425a10 : fisttp dword ptr [rax + 1] ; ret 0x8948
0x0000000000414a08 : fisttp dword ptr [rax - 0x45] ; cmp byte ptr [rax], ch ; jmp 0x4149d8
0x0000000000423984 : fisttp dword ptr [rax - 0x45] ; stosd dword ptr [rdi], eax ; xchg eax, edi ; ret
0x000000000040bfa8 : fisttp dword ptr [rcx + 0x21] ; fisttp qword ptr [rbp - 0x77] ; ret
0x000000000040bf5c : fisttp dword ptr [rcx + 0x21] ; fmul qword ptr [rcx - 0x77] ; ret
0x0000000000427ca4 : fisttp dword ptr [rcx - 0x45] ; test al, -0x68 ; hlt ; jae 0x427d04 ; ret 0x23f8
0x000000000040bfab : fisttp qword ptr [rbp - 0x77] ; ret
0x000000000041b50c : fisttp word ptr [rax + 0x29] ; ret 0x14c
0x000000000041b51c : fisttp word ptr [rax + 1] ; ret 0x8948
0x0000000000410dcc : fisttp word ptr [rbp - 0x77] ; ret 0x8149
0x000000000042a0e9 : fisttp word ptr [rcx - 0x48] ; ret
0x0000000000404a61 : fld dword ptr [rip - 0x1351c849] ; sbb byte ptr [rcx - 0x77], cl ; ret
0x0000000000402778 : fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x000000000040db19 : fmul dword ptr [rax + 9] ; ret
0x0000000000402779 : fmul dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000404988 : fmul dword ptr [rax - 0x7f] ; ret 0x58
0x0000000000412960 : fmul dword ptr [rcx + 0x29] ; ret 0x8b48
0x000000000040e8a4 : fmul dword ptr [rcx + 0x29] ; ret 0xb848
0x000000000041cabb : fmul dword ptr [rcx - 0x45] ; xor dword ptr [rsi], edi ; ret 0x93b3
0x0000000000430b1c : fmul qword ptr [rax - 0x7d] ; ret
0x000000000040bf5f : fmul qword ptr [rcx - 0x77] ; ret
0x00000000004255dd : fsub dword ptr [rdi] ; xchg eax, edx ; push rax ; call 0x4a2a187c
0x00000000004255d0 : fsub dword ptr [rdi] ; xchg eax, edx ; push rax ; call 0x4d2a186f
0x00000000004255fa : fsub dword ptr [rdi] ; xchg eax, edx ; push rax ; call 0x4e2a1899
0x00000000004019e9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004322a5 : hlt ; cld ; jmp rax
0x0000000000427c99 : hlt ; jae 0x427cef ; ret 0x23f8
0x0000000000427ca9 : hlt ; jae 0x427cff ; ret 0x23f8
0x0000000000427cbc : hlt ; jae 0x427d12 ; ret 0x23f8
0x0000000000427ce2 : hlt ; jae 0x427d38 ; ret 0x23f8
0x00000000004017a0 : hlt ; pop rbp ; mov edi, 0x634280 ; jmp rax
0x00000000004199cb : hlt ; ret
0x000000000042277a : hlt ; ret 0x49ea
0x00000000004227a4 : hlt ; ret 0x4cea
0x0000000000417a7a : idiv bh ; dec dword ptr [rax + 0x29] ; ret
0x0000000000416b78 : idiv bh ; dec dword ptr [rax + 0x29] ; ret 0x8b48
0x00000000004181b4 : idiv bh ; dec dword ptr [rax + 9] ; ret
0x00000000004172fd : idiv bh ; dec dword ptr [rcx + 0x29] ; ret 0x8b48
0x0000000000418b69 : idiv byte ptr [rsi - 0x372fa0ce] ; cmp ecx, dword ptr [rax + 0x29] ; ret 0x8948
0x0000000000418b59 : idiv byte ptr [rsi - 0x372fa0ce] ; cmp ecx, dword ptr [rax + 1] ; ret 0x14c
0x0000000000413b31 : idiv edi ; dec dword ptr [rax + 0x29] ; ret 0x8b48
0x00000000004163fd : idiv edi ; dec dword ptr [rbp + 0x29] ; ret
0x0000000000414a66 : idiv edi ; dec dword ptr [rcx + 0x29] ; ret
0x00000000004138b3 : idiv edi ; dec dword ptr [rcx + 9] ; ret
0x0000000000425949 : imul edi, esi, -0x7d ; add ecx, dword ptr [rcx + 0x29] ; ret 0xb848
0x0000000000431758 : in al, 0xe ; out dx, eax ; mov esi, 0xbf597fc7 ; ret 0xa88f
0x00000000004326a9 : in al, dx ; cld ; jmp rax
0x0000000000404a66 : in al, dx ; sbb byte ptr [rcx - 0x77], cl ; ret
0x0000000000404125 : in eax, -0x55 ; mov cl, byte ptr [rbp + 9] ; ret 0x8148
0x0000000000404112 : in eax, -0x55 ; mov cl, byte ptr [rcx - 0x77] ; ret 0x314d
0x000000000043260d : in eax, -1 ; call rax
0x0000000000422175 : in eax, 0x22 ; ret 0x73ea
0x000000000040af8b : in eax, 0x7a ; out dx, al ; or byte ptr [rsi + 0x148a1c8], cl ; ret 0x8948
0x000000000040af7b : in eax, 0x7a ; out dx, al ; or byte ptr [rsi + 0x2948a1c8], cl ; ret 0x148
0x000000000040491a : in eax, dx ; dec byte ptr [rbp - 0x77] ; ret
0x00000000004317b2 : in eax, dx ; leave ; ret 0x3b81
0x000000000042d79b : inc dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000422778 : inc esp ; hlt ; ret 0x49ea
0x00000000004227a2 : inc esp ; hlt ; ret 0x4cea
0x000000000042946f : insb byte ptr [rdi], dx ; xchg eax, edi ; outsd dx, dword ptr [rsi] ; ret 0x34c0
0x0000000000429bb9 : insd dword ptr [rdi], dx ; js 0x429b75 ; and byte ptr [rcx + 1], cl ; ret 0x149
0x0000000000429bc9 : insd dword ptr [rdi], dx ; js 0x429b85 ; and byte ptr [rcx + 0x29], cl ; ret 0xb848
0x0000000000418276 : int 0x45
0x000000000042edd5 : int 0x80
0x000000000041c1c5 : int 0xc5
0x000000000041b507 : int1 ; push rsi ; sbb al, 0x7b ; cld ; fisttp word ptr [rax + 0x29] ; ret 0x14c
0x000000000041b517 : int1 ; push rsi ; sbb al, 0x7b ; cld ; fisttp word ptr [rax + 1] ; ret 0x8948
0x0000000000401793 : ja 0x40179a ; pop rbp ; ret
0x0000000000419e64 : ja 0x419de9 ; ret 0x29a8
0x0000000000419e71 : ja 0x419df6 ; ret 0x29a8
0x0000000000419e8e : ja 0x419e13 ; ret 0x29a8
0x0000000000432298 : ja 0x4322a1 ; add byte ptr [rax], al ; loopne 0x432295 ; cld ; call qword ptr [rax]
0x0000000000427c9a : jae 0x427cee ; ret 0x23f8
0x0000000000427caa : jae 0x427cfe ; ret 0x23f8
0x0000000000427cbd : jae 0x427d11 ; ret 0x23f8
0x0000000000427ce3 : jae 0x427d37 ; ret 0x23f8
0x00000000004317af : jbe 0x43179e ; scasb al, byte ptr [rdi] ; in eax, dx ; leave ; ret 0x3b81
0x000000000040179f : je 0x40179d ; pop rbp ; mov edi, 0x634280 ; jmp rax
0x000000000042227b : je 0x4222aa ; mov bl, byte ptr [rip + 0x29482714] ; ret 0x14c
0x000000000042228b : je 0x4222ba ; mov bl, byte ptr [rip + 0x1482714] ; ret 0x8948
0x0000000000422915 : je 0x4228d4 ; ficomp word ptr [rcx + 0x294916cd] ; ret 0xb848
0x0000000000402416 : jge 0x402417 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000403ec2 : jge 0x403eba ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x0000000000405c73 : jle 0x405ce1 ; adc byte ptr [rsi + 0x4c0a7478], -0x77 ; ret
0x00000000004282c5 : jmp 0x1045ed73
0x000000000040151b : jmp 0x401377
0x0000000000401d85 : jmp 0x401e2d
0x00000000004029cc : jmp 0x402a26
0x000000000040f0a7 : jmp 0x40f05d
0x000000000040f0b7 : jmp 0x40f06d
0x0000000000414a00 : jmp 0x4149c6
0x0000000000414a0d : jmp 0x4149d3
0x0000000000414a27 : jmp 0x4149ed
0x000000000041bb53 : jmp 0x41bba3
0x000000000042f2a8 : jmp 0xffffffffc2cc3ab2
0x00000000004041b8 : jmp 0xffffffffc3c98a65
0x000000000040f662 : jmp 0xffffffffc3ca3fa8
0x000000000040fec1 : jmp 0xffffffffc3ca4807
0x000000000040ffab : jmp 0xffffffffc3ca48bc
0x00000000004128e9 : jmp 0xffffffffc3ca70fa
0x0000000000412eb1 : jmp 0xffffffffc3ca77f7
0x0000000000415139 : jmp 0xffffffffc3ca9a7f
0x00000000004190c8 : jmp 0xffffffffc3cada0e
0x000000000041c238 : jmp 0xffffffffc3cb0b7e
0x0000000000420f46 : jmp 0xffffffffc3cb588c
0x0000000000422f15 : jmp 0xffffffffc3cb785b
0x00000000004248ed : jmp 0xffffffffc3cb91fe
0x0000000000424f6f : jmp 0xffffffffc3cb98b5
0x000000000042b153 : jmp 0xffffffffc3cbfa99
0x00000000004030ac : jmp qword ptr [rax]
0x000000000040201a : jmp qword ptr [rcx]
0x0000000000432d4b : jmp qword ptr [rdx]
0x0000000000422cc3 : jmp qword ptr [rip - 0x3c76b3bd]
0x00000000004017a7 : jmp rax
0x0000000000401d10 : jmp rcx
0x00000000004017e7 : jmp rdx
0x0000000000432973 : jmp rsi
0x00000000004017d0 : jne 0x4017d7 ; pop rbp ; ret
0x0000000000419713 : jno 0x419748 ; mov word ptr [rax], cs ; mov cl, -0x79 ; ret
0x0000000000419723 : jno 0x419758 ; mov word ptr [rax], cs ; mov cl, -0x79 ; ret
0x0000000000419736 : jno 0x41976b ; mov word ptr [rax], cs ; mov cl, -0x79 ; ret
0x000000000041975c : jno 0x419791 ; mov word ptr [rax], cs ; mov cl, -0x79 ; ret
0x00000000004251d7 : jno 0x4251f5 ; add cl, byte ptr [rcx + 0x29] ; ret 0x149
0x00000000004251e7 : jno 0x425205 ; add cl, byte ptr [rcx + 1] ; ret 0x8b48
0x000000000041b50a : jnp 0x41b50d ; fisttp word ptr [rax + 0x29] ; ret 0x14c
0x000000000041b51a : jnp 0x41b51d ; fisttp word ptr [rax + 1] ; ret 0x8948
0x000000000040410e : jns 0x404171 ; loop 0x4040ea ; in eax, -0x55 ; mov cl, byte ptr [rcx - 0x77] ; ret 0x314d
0x0000000000404121 : jns 0x404184 ; loop 0x4040fd ; in eax, -0x55 ; mov cl, byte ptr [rbp + 9] ; ret 0x8148
0x0000000000419712 : jns 0x41978c ; sub eax, 0x87b1088c ; ret
0x0000000000419722 : jns 0x41979c ; sub eax, 0x87b1088c ; ret
0x0000000000419735 : jns 0x4197af ; sub eax, 0x87b1088c ; ret
0x000000000041975b : jns 0x4197d5 ; sub eax, 0x87b1088c ; ret
0x000000000041bfd4 : jns 0x41bf74 ; or edi, dword ptr [rdx - 0x76b361cc] ; ret
0x000000000041fda3 : jns 0x41fdb3 ; test al, 0x6f ; ret
0x000000000041fdb0 : jns 0x41fdc0 ; test al, 0x6f ; ret
0x000000000041fdcd : jns 0x41fddd ; test al, 0x6f ; ret
0x0000000000419c6f : jo 0x419c70 ; ret
0x0000000000419c7f : jo 0x419c80 ; ret
0x000000000042bd7d : jo 0x42bd85 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042bddd : jo 0x42bde5 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042c615 : jo 0x42c676 ; ret
0x000000000042dc3f : jo 0x42dca5 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042e2e4 : jo 0x42e345 ; ret
0x000000000042e41e : jo 0x42e47f ; ret
0x00000000004317d4 : jo 0x431764 ; ret 0xbe30
0x000000000040af7c : jp 0x40af74 ; or byte ptr [rsi + 0x2948a1c8], cl ; ret 0x148
0x000000000040af8c : jp 0x40af84 ; or byte ptr [rsi + 0x148a1c8], cl ; ret 0x8948
0x0000000000405487 : jrcxz 0x405429 ; ret
0x0000000000405494 : jrcxz 0x405436 ; ret
0x00000000004054b1 : jrcxz 0x405453 ; ret
0x00000000004325dd : jrcxz 0x4325e0 ; call qword ptr [rax]
0x0000000000416459 : js 0x41643e ; push rcx ; psrad mm6, qword ptr [rcx + rcx*2 + 1] ; ret 0x149
0x0000000000416469 : js 0x41644e ; push rcx ; psrad mm6, qword ptr [rcx + rcx*2 + 0x29] ; ret 0x8b48
0x0000000000429bba : js 0x429b74 ; and byte ptr [rcx + 1], cl ; ret 0x149
0x0000000000429bca : js 0x429b84 ; and byte ptr [rcx + 0x29], cl ; ret 0xb848
0x0000000000419241 : lahf ; ret 0x9371
0x000000000043020a : lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x000000000041a775 : lea ebx, dword ptr [rax + rcx*2 + 0x14cf229] ; ret 0xbe48
0x000000000040f90f : lea edi, dword ptr [rbx + 0x1498392] ; ret 0x149
0x000000000040f91f : lea edi, dword ptr [rbx + 0x29498392] ; ret 0x8b48
0x000000000040f90e : lea edi, dword ptr ds:[rbx + 0x1498392] ; ret 0x149
0x000000000040f91e : lea edi, dword ptr ds:[rbx + 0x29498392] ; ret 0x8b48
0x0000000000419337 : leave ; ret
0x00000000004317b5 : leave ; ret 0x3b81
0x00000000004325d8 : lock adc byte ptr [rax], al ; add al, dh ; jrcxz 0x4325e5 ; call qword ptr [rax]
0x00000000004277ef : lodsb al, byte ptr [rsi] ; ret
0x0000000000404110 : loop 0x4040e8 ; in eax, -0x55 ; mov cl, byte ptr [rcx - 0x77] ; ret 0x314d
0x0000000000404123 : loop 0x4040fb ; in eax, -0x55 ; mov cl, byte ptr [rbp + 9] ; ret 0x8148
0x00000000004325cd : loop 0x4325d0 ; call rax
0x0000000000414d97 : loope 0x414d67 ; cdq ; mov ecx, 0x894cfef8 ; ret
0x0000000000429bb6 : loopne 0x429b82 ; pop rdx ; insd dword ptr [rdi], dx ; js 0x429b78 ; and byte ptr [rcx + 1], cl ; ret 0x149
0x0000000000429bc6 : loopne 0x429b92 ; pop rdx ; insd dword ptr [rdi], dx ; js 0x429b88 ; and byte ptr [rcx + 0x29], cl ; ret 0xb848
0x000000000042bf6b : loopne 0x42bfbb ; add esp, 0x20 ; pop rbp ; ret
0x000000000042bf6a : loopne 0x42bfbc ; add esp, 0x20 ; pop rbp ; ret
0x000000000042f980 : loopne 0x42f988 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000043229c : loopne 0x432291 ; cld ; call qword ptr [rax]
0x0000000000432710 : loopne 0x432707 ; cld ; jmp rdx
0x0000000000432e69 : mov ah, -1 ; jmp qword ptr [rax]
0x000000000041003d : mov ah, 0x28 ; ret 0x294c
0x00000000004199c7 : mov ah, byte ptr [rax + rsi*8 - 0x7e] ; hlt ; ret
0x000000000041b782 : mov ah, byte ptr [rax - 0x76b39254] ; ret
0x0000000000427820 : mov ah, byte ptr [rcx + 0x7a] ; or dword ptr [rcx + 0x29], ecx ; ret
0x0000000000427810 : mov ah, byte ptr [rcx + 0x7a] ; or dword ptr [rcx + 1], ecx ; ret
0x000000000040a210 : mov ah, byte ptr [rip - 0x76b3fcb5] ; ret
0x0000000000432d09 : mov al, -1 ; jmp rdx
0x0000000000432608 : mov al, 0x11 ; add byte ptr [rax], al ; in eax, -1 ; call rax
0x000000000042e1bb : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000042e048 : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x00000000004324c8 : mov al, 0xc ; add byte ptr [rax], al ; nop ; ret 0xffff
0x0000000000430576 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000404a63 : mov bh, 0x37 ; scasb al, byte ptr [rdi] ; in al, dx ; sbb byte ptr [rcx - 0x77], cl ; ret
0x0000000000415b3e : mov bh, byte ptr [rcx] ; push rsi ; ret 0xc95a
0x0000000000432d49 : mov bl, -1 ; jmp qword ptr [rdx]
0x0000000000415c3d : mov bl, 0x53 ; mov edx, 0x894c087e ; ret
0x000000000042228d : mov bl, byte ptr [rip + 0x1482714] ; ret 0x8948
0x000000000042227d : mov bl, byte ptr [rip + 0x29482714] ; ret 0x14c
0x0000000000403a11 : mov byte ptr [0x6342e8], al ; pop rbp ; ret
0x000000000040ffa7 : mov byte ptr [r8 - 0x3f], r9b ; jmp 0xffffffffc3ca48c0
0x000000000040ffa8 : mov byte ptr [rax - 0x3f], cl ; jmp 0xffffffffc3ca48bf
0x000000000041e0e6 : mov byte ptr [rax - 0x70], ch ; mov ecx, 0x214ca6c0 ; ret 0xb849
0x00000000004194bf : mov byte ptr [rcx + 0x4ccf214c], 0x21 ; ret 0x94c
0x000000000040403a : mov byte ptr [rcx - 0x77], cl ; ret
0x0000000000401803 : mov byte ptr [rip + 0x232aae], 1 ; ret
0x0000000000432f89 : mov ch, -1 ; jmp qword ptr [rdx]
0x00000000004316a1 : mov ch, 0x48 ; pop rbx ; ret 0x3956
0x0000000000419240 : mov cl, -0x61 ; ret 0x9371
0x0000000000419717 : mov cl, -0x79 ; ret
0x000000000041111f : mov cl, 0x38 ; ret
0x0000000000404127 : mov cl, byte ptr [rbp + 9] ; ret 0x8148
0x0000000000404114 : mov cl, byte ptr [rcx - 0x77] ; ret 0x314d
0x000000000040351e : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402e86 : mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040345d : mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000419334 : mov dh, -0x40 ; movsb byte ptr [rdi], byte ptr [rsi] ; leave ; ret
0x000000000043057c : mov dh, -0x40 ; pop rbp ; ret
0x0000000000415c3c : mov dl, -0x4d ; push rbx ; mov edx, 0x894c087e ; ret
0x0000000000402bff : mov dl, 0x14 ; add byte ptr [r8 - 0x77], cl ; ret 0xf5e8
0x00000000004039ed : mov dword ptr [0x6342e0], edi ; pop rbp ; ret
0x0000000000403bd4 : mov dword ptr [rax + 0x50], 0 ; pop rbp ; ret
0x000000000042c4c6 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000042c488 : mov dword ptr [rax], eax ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000042c344 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000042c487 : mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000403587 : mov dword ptr [rbp - 0x10], edx ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000042bf69 : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401ac9 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004019e7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000430a5d : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004039cf : mov dword ptr [rbp - 8], eax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402415 : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000042c53e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042bb2d : mov dword ptr [rcx + 0x50], eax ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000403ec5 : mov dword ptr [rsi], edi ; pop rbp ; ret
0x0000000000418274 : mov eax, 0x3245cd06 ; sahf ; ret 0x4f8e
0x00000000004255dc : mov eax, 0x509227d8 ; call 0x4a2a187d
0x00000000004255cf : mov eax, 0x509227d8 ; call 0x4d2a1870
0x0000000000415b3c : mov eax, 0x56398a50 ; ret 0xc95a
0x000000000042946d : mov eax, 0x6f976c84 ; ret 0x34c0
0x000000000041f824 : mov eax, 0x7e105ad5 ; call qword ptr [rdx]
0x0000000000421a47 : mov eax, 0x7ed5f6e0 ; ret 0x5c45
0x0000000000428967 : mov eax, 0x8356e323 ; ret 0x21f9
0x0000000000419c6a : mov eax, 0xf94ed648 ; jo 0x419c75 ; ret
0x0000000000419c7a : mov eax, 0xf94ed648 ; jo 0x419c85 ; ret
0x000000000040c1ac : mov eax, 0xfff5b637 ; ret
0x000000000042c2f8 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000042f0bb : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403ea4 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042c2f5 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040358b : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000042f3b3 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042c2ad : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000042c33e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000042c48a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000042c60f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000042e1b9 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000042f9e4 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042f567 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042fb0c : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000042f19d : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042e67f : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000042c0e6 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000402419 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402409 : mov eax, esi ; pop rbp ; ret
0x000000000042a5d4 : mov ebp, 0x8087b8f ; ret
0x00000000004288f4 : mov ebp, 0x8356e323 ; ret 0x21f9
0x00000000004171bc : mov ebp, 0xe63a2580 ; ret 0x7b6a
0x000000000040182b : mov ebp, esp ; call rax
0x0000000000401791 : mov ebp, esp ; ja 0x40179c ; pop rbp ; ret
0x000000000040f910 : mov ebx, 0x1498392 ; ret 0x149
0x000000000040f920 : mov ebx, 0x29498392 ; ret 0x8b48
0x000000000041fdcc : mov ebx, 0x6fa80a79 ; ret
0x0000000000427c96 : mov ebx, 0x73f498a8 ; push rax ; ret 0x23f8
0x0000000000404966 : mov ebx, 0xd0fb93d9 ; ret 0x68c2
0x0000000000422776 : mov ebx, 0xf4c4ffdf ; ret 0x49ea
0x000000000041e0e9 : mov ecx, 0x214ca6c0 ; ret 0xb849
0x0000000000427946 : mov ecx, 0x4b1bfb31 ; ret
0x000000000042eded : mov ecx, 0x5b2a830a ; ret
0x00000000004045c2 : mov ecx, 0x8949975a ; ret 0x314d
0x00000000004183e8 : mov ecx, 0x894c7e85 ; ret
0x0000000000414d9b : mov ecx, 0x894cfef8 ; ret
0x000000000040b22d : mov ecx, 0x95213432 ; call rdx
0x00000000004072a3 : mov ecx, 0xbb4d51d7 ; sti ; jmp rcx
0x0000000000419333 : mov ecx, 0xc9a4c0b6 ; ret
0x0000000000401f83 : mov ecx, 0xf6fffff8 ; add al, 0x25 ; ret 0x6342
0x0000000000401d09 : mov ecx, dword ptr [rax*8 + 0x430b90] ; jmp rcx
0x000000000042c6d2 : mov ecx, dword ptr [rax*8 + 0x4319d0] ; jmp rcx
0x000000000042c9f6 : mov ecx, dword ptr [rax*8 + 0x431a18] ; jmp rcx
0x000000000042e7ae : mov ecx, dword ptr [rax*8 + 0x431ed8] ; jmp rcx
0x000000000042c341 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000428e5d : mov ecx, dword ptr [rsi - 0x76b39411] ; ret
0x000000000040e265 : mov edi, 0x1484959 ; ret 0x8948
0x000000000040e255 : mov edi, 0x29484959 ; ret 0x14c
0x0000000000401825 : mov edi, 0x633e20 ; mov rbp, rsp ; call rax
0x00000000004017a2 : mov edi, 0x634280 ; jmp rax
0x00000000004017e2 : mov edi, 0x634280 ; jmp rdx
0x000000000040b203 : mov edi, 0x95213432 ; call rdx
0x0000000000407279 : mov edi, 0xbb4d51d7 ; sti ; jmp rcx
0x00000000004227a0 : mov edi, 0xf4c4ffdf ; ret 0x4cea
0x0000000000403a29 : mov edi, dword ptr [0x634290] ; call 0x42fc79
0x0000000000403ec1 : mov edi, dword ptr [rbp - 0x10] ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x0000000000430b17 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000430b16 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x00000000004042e2 : mov edx, 0x48fffff9 ; add esp, 0x10 ; pop rbp ; ret
0x000000000042798f : mov edx, 0x4b1bfb31 ; ret
0x00000000004255f9 : mov edx, 0x509227d8 ; call 0x4e2a189a
0x000000000041fda2 : mov edx, 0x6fa80a79 ; ret
0x0000000000415c3f : mov edx, 0x894c087e ; ret
0x000000000041bfd7 : mov edx, 0x894c9e34 ; ret
0x000000000041937c : mov edx, 0xc9a4c0b6 ; ret
0x0000000000418e60 : mov edx, 0xe8aa1721 ; test ch, 0x54 ; ret 0x8949
0x0000000000418e70 : mov edx, 0xe8aa1721 ; test ch, 0x54 ; ret 0x894c
0x0000000000418e83 : mov edx, 0xe8aa1721 ; test ch, 0x54 ; ret 0x894d
0x0000000000427cdf : mov esi, 0x73f498a8 ; push rax ; ret 0x23f8
0x000000000043175b : mov esi, 0xbf597fc7 ; ret 0xa88f
0x0000000000418b6a : mov esi, 0xc8d05f32 ; cmp ecx, dword ptr [rax + 0x29] ; ret 0x8948
0x0000000000418b5a : mov esi, 0xc8d05f32 ; cmp ecx, dword ptr [rax + 1] ; ret 0x14c
0x0000000000418ea9 : mov esi, 0xe8aa1721 ; test ch, 0x54 ; ret 0x949
0x00000000004017e0 : mov esi, eax ; mov edi, 0x634280 ; jmp rdx
0x000000000042813b : mov esp, 0x14905f0 ; ret 0x14d
0x000000000042814b : mov esp, 0x294905f0 ; ret 0xb848
0x0000000000432d44 : mov esp, 0x58000006 ; mov bl, -1 ; jmp qword ptr [rdx]
0x000000000040208b : mov esp, 0x8165e164 ; ret 1
0x000000000041121e : mov esp, 0x894c10ec ; ret
0x00000000004039ec : mov qword ptr [0x6342e0], rdi ; pop rbp ; ret
0x0000000000403bd3 : mov qword ptr [rax + 0x50], 0 ; pop rbp ; ret
0x0000000000403586 : mov qword ptr [rbp - 0x10], rdx ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004039ce : mov qword ptr [rbp - 8], rax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402414 : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000042c53d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042bb2c : mov qword ptr [rcx + 0x50], rax ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000403ec4 : mov qword ptr [rsi], rdi ; pop rbp ; ret
0x000000000042e1ba : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000042f0ba : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403ea3 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042c2f4 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040358a : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000042f3b2 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042c2ac : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000042c60e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000042e1b8 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000042f19c : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042e67e : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000042c0e5 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000402418 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402408 : mov rax, rsi ; pop rbp ; ret
0x000000000040182a : mov rbp, rsp ; call rax
0x0000000000401790 : mov rbp, rsp ; ja 0x40179d ; pop rbp ; ret
0x0000000000401d08 : mov rcx, qword ptr [rax*8 + 0x430b90] ; jmp rcx
0x000000000042c6d1 : mov rcx, qword ptr [rax*8 + 0x4319d0] ; jmp rcx
0x000000000042c9f5 : mov rcx, qword ptr [rax*8 + 0x431a18] ; jmp rcx
0x000000000042e7ad : mov rcx, qword ptr [rax*8 + 0x431ed8] ; jmp rcx
0x0000000000403ec0 : mov rdi, qword ptr [rbp - 0x10] ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x00000000004017df : mov rsi, rax ; mov edi, 0x634280 ; jmp rdx
0x0000000000419715 : mov word ptr [rax], cs ; mov cl, -0x79 ; ret
0x0000000000423980 : mov word ptr [rcx + rcx*2 - 0x44b724df], gs ; stosd dword ptr [rdi], eax ; xchg eax, edi ; ret
0x0000000000425371 : mov word ptr [rdx + rax*2 + 0x28], dr1 ; ret
0x00000000004100bd : movabs al, byte ptr [0x2948c82948fffff8] ; ret 0x8948
0x00000000004177fe : movabs byte ptr [0x314dca8949d14b51], al ; ret 0x948
0x0000000000424acf : movabs eax, dword ptr [0x894c5c1ee864f1bb] ; ret
0x0000000000406600 : movabs eax, dword ptr [0xb949ca314dca8949] ; ret
0x00000000004047cb : movsb byte ptr [rdi], byte ptr [rsi] ; fimul word ptr [rax - 0x76b35f6f] ; ret
0x00000000004047a8 : movsb byte ptr [rdi], byte ptr [rsi] ; fimul word ptr [rax - 0x76b65f6f] ; ret 0x314d
0x0000000000419336 : movsb byte ptr [rdi], byte ptr [rsi] ; leave ; ret
0x000000000040e6a5 : movsb byte ptr [rdi], byte ptr [rsi] ; push 0x94deb4a ; ret 0x8148
0x00000000004047ca : movsb byte ptr [rdi], byte ptr gs:[rsi] ; fimul word ptr [rax - 0x76b35f6f] ; ret
0x00000000004047a7 : movsb byte ptr [rdi], byte ptr gs:[rsi] ; fimul word ptr [rax - 0x76b65f6f] ; ret 0x314d
0x000000000041655e : movsxd r9, dword ptr [r10 - 0x799a8508] ; ret
0x000000000040351d : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402e85 : movzx eax, al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040345c : movzx eax, al ; add rsp, 0x60 ; pop rbp ; ret
0x000000000043057b : movzx eax, al ; pop rbp ; ret
0x000000000043259c : nop ; fdivr st(7) ; call qword ptr [rax]
0x000000000041e0e8 : nop ; mov ecx, 0x214ca6c0 ; ret 0xb849
0x0000000000401d0c : nop ; or eax, dword ptr [rbx] ; jmp rcx
0x00000000004255e2 : nop ; ret 0x49e7
0x00000000004255d5 : nop ; ret 0x4ce7
0x00000000004255ff : nop ; ret 0x4de7
0x00000000004324cc : nop ; ret 0xffff
0x0000000000430b38 : nop dword ptr [rax + rax] ; ret
0x000000000042ab71 : or ah, byte ptr [rdx + 2] ; ror byte ptr [rcx + 0x29], cl ; ret 0x149
0x000000000042ab81 : or ah, byte ptr [rdx + 2] ; ror byte ptr [rcx + 1], cl ; ret 0xb848
0x00000000004324d1 : or al, 0 ; add al, al ; ret 0xffff
0x00000000004324d9 : or al, 0 ; add al, dh ; ret 0xffff
0x00000000004324b9 : or al, 0 ; add byte ptr [rax], ah ; ret 0xffff
0x000000000042cd5d : or al, 0x18 ; ret 0x6451
0x000000000041b477 : or al, 0xffffffffffffffc0 ; xchg eax, ecx ; out -0x32, eax ; add cl, byte ptr [rcx + 1] ; ret 0x8b48
0x0000000000401d0a : or al, 0xffffffffffffffc5 ; nop ; or eax, dword ptr [rbx] ; jmp rcx
0x000000000042dcc8 : or al, ch ; ret 0xfd36
0x000000000040c083 : or byte ptr [rax - 0x77], cl ; ret
0x0000000000432f85 : or byte ptr [rax], al ; add al, cl ; mov ch, -1 ; jmp qword ptr [rdx]
0x000000000042a5d7 : or byte ptr [rax], cl ; ret
0x0000000000403508 : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x00000000004179e7 : or byte ptr [rcx - 0x3f], 0xeb ; or byte ptr [rax - 0x77], cl ; ret
0x000000000040ffac : or byte ptr [rcx - 0x77], cl ; ret
0x000000000042a0f0 : or byte ptr [rdi + 0x94d5981], cl ; ret 0x8148
0x000000000040af8e : or byte ptr [rsi + 0x148a1c8], cl ; ret 0x8948
0x000000000040af7e : or byte ptr [rsi + 0x2948a1c8], cl ; ret 0x148
0x00000000004317ad : or ch, byte ptr [rdx + 0x76] ; out -0x52, al ; in eax, dx ; leave ; ret 0x3b81
0x0000000000427823 : or dword ptr [rcx + 0x29], ecx ; ret
0x0000000000427813 : or dword ptr [rcx + 1], ecx ; ret
0x0000000000414351 : or eax, 0x148ade8 ; ret 0x148
0x0000000000414361 : or eax, 0x2948ade8 ; ret 0x8948
0x000000000041780f : or eax, 0x4b51a295 ; ror dword ptr [rbp + 9], 1 ; ret 0x8148
0x0000000000407718 : or eax, 0x894c682a ; ret
0x000000000042548a : or eax, 0x894c6a58 ; ret
0x000000000042e3a1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004331c5 : or eax, dword ptr [rax] ; add byte ptr [rax], bh ; ret 0xffff
0x00000000004331a5 : or eax, dword ptr [rax] ; add byte ptr [rax], bl ; ret 0xffff
0x0000000000401d0d : or eax, dword ptr [rbx] ; jmp rcx
0x000000000041830c : or ecx, dword ptr [rax + 0x29] ; ret 0x8948
0x00000000004182fc : or ecx, dword ptr [rax + 1] ; ret 0x148
0x000000000041bfd6 : or edi, dword ptr [rdx - 0x76b361cc] ; ret
0x0000000000402c53 : or edx, dword ptr [rip - 0x76b7ffbd] ; ret 0xa1e8
0x0000000000427e0e : or esp, edi ; dec byte ptr [rbp + 9] ; ret 0x8148
0x000000000041b47a : out -0x32, eax ; add cl, byte ptr [rcx + 1] ; ret 0x8b48
0x0000000000424773 : out -0x4b, al ; ret
0x00000000004317b0 : out -0x52, al ; in eax, dx ; leave ; ret 0x3b81
0x000000000043261d : out -1, al ; call qword ptr [rax]
0x00000000004041b6 : out 3, al ; jmp 0xffffffffc3c98a67
0x000000000040af8d : out dx, al ; or byte ptr [rsi + 0x148a1c8], cl ; ret 0x8948
0x000000000040af7d : out dx, al ; or byte ptr [rsi + 0x2948a1c8], cl ; ret 0x148
0x000000000043175a : out dx, eax ; mov esi, 0xbf597fc7 ; ret 0xa88f
0x0000000000407716 : outsb dx, byte ptr [rsi] ; pop rbp ; or eax, 0x894c682a ; ret
0x000000000041d37a : outsd dx, dword ptr [rsi] ; ret
0x0000000000429471 : outsd dx, dword ptr [rsi] ; ret 0x34c0
0x000000000041a1b4 : outsd dx, dword ptr [rsi] ; ret 0x9f22
0x000000000042b697 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000430b2c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000404d45 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042b699 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000430b2e : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004042b0 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000430b30 : pop r14 ; pop r15 ; ret
0x000000000042d9f3 : pop r14 ; pop rbp ; ret
0x00000000004042b2 : pop r15 ; pop rbp ; ret
0x0000000000430b32 : pop r15 ; ret
0x000000000042bb02 : pop rax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000040410f : pop rax ; loop 0x4040e9 ; in eax, -0x55 ; mov cl, byte ptr [rcx - 0x77] ; ret 0x314d
0x0000000000404122 : pop rax ; loop 0x4040fc ; in eax, -0x55 ; mov cl, byte ptr [rbp + 9] ; ret 0x8148
0x0000000000432d48 : pop rax ; mov bl, -1 ; jmp qword ptr [rdx]
0x0000000000401802 : pop rbp ; mov byte ptr [rip + 0x232aae], 1 ; ret
0x00000000004017a1 : pop rbp ; mov edi, 0x634280 ; jmp rax
0x00000000004017de : pop rbp ; mov rsi, rax ; mov edi, 0x634280 ; jmp rdx
0x00000000004179e6 : pop rbp ; or byte ptr [rcx - 0x3f], 0xeb ; or byte ptr [rax - 0x77], cl ; ret
0x0000000000407717 : pop rbp ; or eax, 0x894c682a ; ret
0x0000000000430b2b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000042b69a : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000430b2f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401795 : pop rbp ; ret
0x0000000000402bab : pop rbx ; adc al, 0x43 ; add byte ptr [rax - 0x77], cl ; ret 0x49e8
0x00000000004041b5 : pop rbx ; out 3, al ; jmp 0xffffffffc3c98a68
0x0000000000404d44 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004042af : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042d9f2 : pop rbx ; pop r14 ; pop rbp ; ret
0x000000000042edf1 : pop rbx ; ret
0x00000000004316a4 : pop rbx ; ret 0x3956
0x0000000000404039 : pop rcx ; mov byte ptr [rcx - 0x77], cl ; ret
0x0000000000421c90 : pop rcx ; ret
0x00000000004042b3 : pop rdi ; pop rbp ; ret
0x0000000000430b33 : pop rdi ; ret
0x0000000000418b6c : pop rdi ; ror al, 1 ; cmp ecx, dword ptr [rax + 0x29] ; ret 0x8948
0x0000000000418b5c : pop rdi ; ror al, 1 ; cmp ecx, dword ptr [rax + 1] ; ret 0x14c
0x0000000000429bb8 : pop rdx ; insd dword ptr [rdi], dx ; js 0x429b76 ; and byte ptr [rcx + 1], cl ; ret 0x149
0x0000000000429bc8 : pop rdx ; insd dword ptr [rdi], dx ; js 0x429b86 ; and byte ptr [rcx + 0x29], cl ; ret 0xb848
0x0000000000428a0b : pop rdx ; rsqrtps xmm1, xmmword ptr [rcx + 1] ; ret 0xb848
0x00000000004042b1 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000430b31 : pop rsi ; pop r15 ; ret
0x000000000042d9f4 : pop rsi ; pop rbp ; ret
0x000000000042b698 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000430b2d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000404d46 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040ae39 : popfq ; sar cl, -1 ; dec dword ptr [rcx + 9] ; ret
0x00000000004149d9 : popfq ; xor bh, 0xff ; dec dword ptr [rcx + 9] ; ret
0x000000000041646c : psrad mm6, qword ptr [rcx + rcx*2 + 0x29] ; ret 0x8b48
0x000000000041645c : psrad mm6, qword ptr [rcx + rcx*2 + 1] ; ret 0x149
0x00000000004317ae : push 0x76 ; out -0x52, al ; in eax, dx ; leave ; ret 0x3b81
0x000000000040e6a6 : push 0x94deb4a ; ret 0x8148
0x0000000000432607 : push qword ptr [rax + 0x40000011] ; in eax, -1 ; call rax
0x0000000000432547 : push qword ptr [rax - 0x4ffffff2] ; sar bh, 1 ; call rax
0x00000000004324c7 : push qword ptr [rax - 0x6ffffff4] ; ret 0xffff
0x00000000004325c7 : push qword ptr [rax - 0xffffff0] ; loop 0x4325d6 ; call rax
0x0000000000401fcd : push qword ptr [rcx + 0x25148a01] ; ret
0x000000000042bb2e : push r8 ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004325d7 : push rax ; adc byte ptr [rax], al ; add al, dh ; jrcxz 0x4325e6 ; call qword ptr [rax]
0x0000000000432890 : push rax ; adc ebp, edi ; call qword ptr [rsi]
0x0000000000403bd6 : push rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042bb2f : push rax ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004255e0 : push rax ; call 0x4a2a1879
0x00000000004255d3 : push rax ; call 0x4d2a186c
0x00000000004255fd : push rax ; call 0x4e2a1896
0x0000000000415b3d : push rax ; mov bh, byte ptr [rcx] ; push rsi ; ret 0xc95a
0x00000000004324d7 : push rax ; or al, 0 ; add al, dh ; ret 0xffff
0x000000000042e13e : push rax ; pop rbp ; ret
0x00000000004030c3 : push rax ; ret
0x0000000000427c9b : push rax ; ret 0x23f8
0x0000000000432597 : push rax ; sldt word ptr [rax] ; nop ; fdivr st(7) ; call qword ptr [rax]
0x000000000042b822 : push rbp ; call 0x59053974
0x000000000042ba54 : push rbp ; call 0x59053ba6
0x000000000042bafd : push rbp ; call 0x59053c4f
0x0000000000404987 : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x58
0x0000000000422cc2 : push rbp ; jmp qword ptr [rip - 0x3c76b3bd]
0x0000000000401824 : push rbp ; mov edi, 0x633e20 ; mov rbp, rsp ; call rax
0x000000000042a0ef : push rbp ; or byte ptr [rdi + 0x94d5981], cl ; ret 0x8148
0x0000000000415c3e : push rbx ; mov edx, 0x894c087e ; ret
0x000000000041646b : push rcx ; psrad mm6, qword ptr [rcx + rcx*2 + 0x29] ; ret 0x8b48
0x000000000041645b : push rcx ; psrad mm6, qword ptr [rcx + rcx*2 + 1] ; ret 0x149
0x0000000000417812 : push rcx ; ror qword ptr [r13 + 9], 1 ; ret 0x8148
0x0000000000401f86 : push rsi ; add al, 0x25 ; ret 0x6342
0x0000000000415b40 : push rsi ; ret 0xc95a
0x000000000041b508 : push rsi ; sbb al, 0x7b ; cld ; fisttp word ptr [rax + 0x29] ; ret 0x14c
0x000000000041b518 : push rsi ; sbb al, 0x7b ; cld ; fisttp word ptr [rax + 1] ; ret 0x8948
0x0000000000418e67 : push rsp ; ret 0x8949
0x0000000000418e77 : push rsp ; ret 0x894c
0x0000000000418e8a : push rsp ; ret 0x894d
0x0000000000418eb0 : push rsp ; ret 0x949
0x000000000041a434 : push rsp ; test byte ptr [rcx + 1], cl ; ret
0x000000000041b478 : rcl byte ptr [rcx + 0x4902cee7], 1 ; ret 0x8b48
0x0000000000401361 : ret
0x0000000000430442 : ret 0
0x000000000042b465 : ret 0x148
0x000000000040c1d4 : ret 0x149
0x000000000040e25a : ret 0x14c
0x0000000000428140 : ret 0x14d
0x000000000042ddde : ret 0x1b2
0x0000000000412c46 : ret 0x2148
0x000000000040e100 : ret 0x2149
0x0000000000404aed : ret 0x214c
0x0000000000405542 : ret 0x214d
0x0000000000431889 : ret 0x21c0
0x00000000004288f9 : ret 0x21f9
0x0000000000401722 : ret 0x232a
0x0000000000401522 : ret 0x232b
0x0000000000427c9c : ret 0x23f8
0x000000000040228c : ret 0x2948
0x0000000000405e38 : ret 0x294c
0x000000000042d185 : ret 0x294d
0x0000000000419e66 : ret 0x29a8
0x00000000004052f3 : ret 0x3148
0x0000000000407f52 : ret 0x314c
0x0000000000403ffb : ret 0x314d
0x0000000000429472 : ret 0x34c0
0x000000000040322f : ret 0x3948
0x00000000004316a5 : ret 0x3956
0x0000000000416d3d : ret 0x3b35
0x00000000004317b6 : ret 0x3b81
0x0000000000420153 : ret 0x3cfb
0x0000000000426e49 : ret 0x42b5
0x000000000040207b : ret 0x4319
0x000000000041f20b : ret 0x486d
0x0000000000426747 : ret 0x48ab
0x0000000000408ad7 : ret 0x4942
0x000000000041f218 : ret 0x496d
0x000000000042673a : ret 0x49ab
0x00000000004255e3 : ret 0x49e7
0x0000000000402bb1 : ret 0x49e8
0x000000000042277d : ret 0x49ea
0x0000000000408b01 : ret 0x4c42
0x000000000041f235 : ret 0x4c6d
0x0000000000426761 : ret 0x4cab
0x00000000004255d6 : ret 0x4ce7
0x00000000004227a7 : ret 0x4cea
0x0000000000425600 : ret 0x4de7
0x000000000041827a : ret 0x4f8e
0x000000000041c1c8 : ret 0x5546
0x000000000042c3c4 : ret 0x5589
0x000000000040498b : ret 0x58
0x00000000004237ce : ret 0x59b1
0x0000000000421a4c : ret 0x5c45
0x0000000000401d3a : ret 0x6342
0x000000000042cd5f : ret 0x6451
0x000000000040208a : ret 0x64bc
0x0000000000416ff8 : ret 0x64f0
0x000000000040496b : ret 0x68c2
0x0000000000422177 : ret 0x73ea
0x000000000040e5b7 : ret 0x7483
0x00000000004171c1 : ret 0x7b6a
0x000000000042d19d : ret 0x7de8
0x000000000042bb08 : ret 0x80
0x000000000042f865 : ret 0x8141
0x000000000040400e : ret 0x8148
0x00000000004046ec : ret 0x8149
0x000000000043089f : ret 0x840
0x0000000000402a60 : ret 0x8840
0x000000000042e769 : ret 0x8844
0x0000000000403585 : ret 0x8948
0x0000000000418e68 : ret 0x8949
0x0000000000418e78 : ret 0x894c
0x0000000000418e8b : ret 0x894d
0x000000000042d31c : ret 0x89a5
0x0000000000402736 : ret 0x8b48
0x0000000000419242 : ret 0x9371
0x000000000041cab3 : ret 0x93b3
0x000000000042f88f : ret 0x941
0x0000000000403d20 : ret 0x948
0x0000000000404947 : ret 0x949
0x0000000000403ffe : ret 0x94c
0x000000000041a1b6 : ret 0x9f22
0x0000000000402c59 : ret 0xa1e8
0x000000000041e179 : ret 0xa567
0x0000000000431760 : ret 0xa88f
0x0000000000401e71 : ret 0xb0
0x000000000040b5dd : ret 0xb18a
0x0000000000415c2a : ret 0xb2a6
0x000000000040e341 : ret 0xb604
0x000000000042594f : ret 0xb848
0x0000000000404c8c : ret 0xb849
0x000000000040424b : ret 0xb949
0x000000000040b0cd : ret 0xbd1a
0x00000000004317d7 : ret 0xbe30
0x000000000040bbe9 : ret 0xbe48
0x00000000004051de : ret 0xbf48
0x00000000004017c5 : ret 0xc148
0x00000000004301b0 : ret 0xc2f6
0x000000000042b45b : ret 0xc366
0x000000000041b959 : ret 0xc72d
0x0000000000415b41 : ret 0xc95a
0x000000000041bd13 : ret 0xca0d
0x000000000042cb84 : ret 0xca21
0x000000000041ac51 : ret 0xcc6d
0x00000000004022d3 : ret 0xd284
0x000000000041d552 : ret 0xdc36
0x000000000040248b : ret 0xe280
0x0000000000427b30 : ret 0xe54b
0x000000000042da2c : ret 0xee8
0x000000000041a600 : ret 0xf14b
0x000000000042d418 : ret 0xf180
0x00000000004301a3 : ret 0xf280
0x000000000042cbfe : ret 0xf281
0x0000000000402c05 : ret 0xf5e8
0x000000000042feba : ret 0xfd14
0x000000000042dcca : ret 0xfd36
0x00000000004160e4 : ret 0xfee1
0x000000000041f416 : ret 0xffbe
0x00000000004324bd : ret 0xffff
0x0000000000402090 : ret 1
0x0000000000403a32 : ret 2
0x000000000042c486 : rol byte ptr [rcx + rcx*4], 1 ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004324d4 : rol dl, -1 ; push rax ; or al, 0 ; add al, dh ; ret 0xffff
0x0000000000401d32 : rol dword ptr [rdx + 0x63], 0 ; add dh, al ; add al, 0x25 ; ret 0x6342
0x0000000000401d5b : rol dword ptr [rdx + 0x63], 0 ; add esi, eax ; add al, 0x25 ; ret 0x6342
0x0000000000418b6d : ror al, 1 ; cmp ecx, dword ptr [rax + 0x29] ; ret 0x8948
0x0000000000418b5d : ror al, 1 ; cmp ecx, dword ptr [rax + 1] ; ret 0x14c
0x000000000042ba50 : ror byte ptr [r8 - 0x75], 1 ; push rbp ; call 0x59053baa
0x0000000000404ce5 : ror byte ptr [r8 - 0x75], 1 ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x58
0x000000000042edd0 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000042c610 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x42c67b ; ret
0x0000000000414205 : ror byte ptr [rax + 9], 1 ; ret
0x00000000004324d0 : ror byte ptr [rax + rax], 1 ; add al, al ; ret 0xffff
0x00000000004017cc : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4017db ; pop rbp ; ret
0x0000000000420160 : ror byte ptr [rax - 0x46], 1 ; ret 0x3cfb
0x00000000004259d9 : ror byte ptr [rax - 0x48], -0x19 ; ret
0x000000000042946b : ror byte ptr [rax - 0x48], -0x7c ; insb byte ptr [rdi], dx ; xchg eax, edi ; outsd dx, dword ptr [rsi] ; ret 0x34c0
0x000000000042ba51 : ror byte ptr [rax - 0x75], 1 ; push rbp ; call 0x59053ba9
0x0000000000404ce6 : ror byte ptr [rax - 0x75], 1 ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x58
0x000000000042edd1 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x000000000040558f : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000405e35 : ror byte ptr [rax - 0x77], 1 ; ret 0x294c
0x0000000000404417 : ror byte ptr [rax - 0x77], 1 ; ret 0x8148
0x000000000042c611 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x42c67a ; ret
0x0000000000402e87 : ror byte ptr [rax - 0x7d], -0x3c ; pop rbp ; ret
0x000000000042ab74 : ror byte ptr [rcx + 0x29], cl ; ret 0x149
0x000000000042ab84 : ror byte ptr [rcx + 1], cl ; ret 0xb848
0x000000000040b5c3 : ror byte ptr [rcx + 9], 1 ; ret
0x0000000000404822 : ror byte ptr [rcx - 0x3f], 1 ; call 0xffffffffc2c99059
0x000000000041fdad : ror byte ptr [rcx - 0x46], 1 ; jns 0x41fdc3 ; test al, 0x6f ; ret
0x00000000004237d3 : ror byte ptr [rcx - 0x46], 1 ; ret
0x0000000000419354 : ror byte ptr [rcx - 0x47], cl ; mov dh, -0x40 ; movsb byte ptr [rdi], byte ptr [rsi] ; leave ; ret
0x0000000000406619 : ror byte ptr [rcx - 0x47], cl ; ret
0x0000000000426e50 : ror byte ptr [rcx - 0x48], -0x47 ; stc ; ret 0x42b5
0x000000000041111b : ror dword ptr [rax - 0x48], -0x52 ; mov cl, 0x38 ; ret
0x00000000004277fc : ror dword ptr [rax - 0x48], -0x54 ; ret
0x0000000000410039 : ror dword ptr [rax - 0x48], 0x3e ; mov ah, 0x28 ; ret 0x294c
0x0000000000415b3a : ror dword ptr [rax - 0x48], 0x50 ; mov bh, byte ptr [rcx] ; push rsi ; ret 0xc95a
0x0000000000418272 : ror dword ptr [rax - 0x48], 6 ; int 0x45
0x00000000004142dd : ror dword ptr [rax - 0x48], cl ; stosb byte ptr [rdi], al ; ret
0x0000000000404984 : ror dword ptr [rax - 0x75], 1 ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x58
0x0000000000405b92 : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000409c32 : ror dword ptr [rax - 0x77], 1 ; ret 0x294c
0x0000000000416e3b : ror dword ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000417814 : ror dword ptr [rbp + 9], 1 ; ret 0x8148
0x0000000000414137 : ror dword ptr [rcx + 0x21], cl ; ret
0x000000000041a1be : ror dword ptr [rcx - 0x46], 1 ; outsd dx, dword ptr [rsi] ; ret 0x9f22
0x0000000000406922 : ror dword ptr [rcx - 0x46], cl ; ret
0x0000000000415c37 : ror dword ptr [rcx - 0x46], cl ; ret 0xb2a6
0x000000000040e34e : ror dword ptr [rcx - 0x46], cl ; ret 0xb604
0x0000000000417813 : ror qword ptr [r13 + 9], 1 ; ret 0x8148
0x0000000000428a0c : rsqrtps xmm1, xmmword ptr [rcx + 1] ; ret 0xb848
0x000000000041b506 : sahf ; int1 ; push rsi ; sbb al, 0x7b ; cld ; fisttp word ptr [rax + 0x29] ; ret 0x14c
0x000000000041b516 : sahf ; int1 ; push rsi ; sbb al, 0x7b ; cld ; fisttp word ptr [rax + 1] ; ret 0x8948
0x000000000042227a : sahf ; je 0x4222ab ; mov bl, byte ptr [rip + 0x29482714] ; ret 0x14c
0x000000000042228a : sahf ; je 0x4222bb ; mov bl, byte ptr [rip + 0x1482714] ; ret 0x8948
0x0000000000405488 : sahf ; ret
0x0000000000418279 : sahf ; ret 0x4f8e
0x00000000004322a4 : sal ah, -4 ; jmp rax
0x00000000004317d3 : sal byte ptr [rax - 0x75], 1 ; ret 0xbe30
0x000000000040179e : sal byte ptr [rsp + rsi*8 + 0x5d], -0x41 ; add byte ptr [rdx + 0x63], 0 ; jmp rax
0x0000000000419c6c : salc ; stc ; jo 0x419c73 ; ret
0x0000000000419c6b : salc ; stc ; jo 0x419c74 ; ret
0x0000000000419c7c : salc ; stc ; jo 0x419c83 ; ret
0x0000000000419c7b : salc ; stc ; jo 0x419c84 ; ret
0x00000000004041b3 : sar ah, 1 ; pop rbx ; out 3, al ; jmp 0xffffffffc3c98a6a
0x000000000043254d : sar bh, 1 ; call rax
0x000000000041bd0d : sar bl, -1 ; dec dword ptr [rax - 0x46] ; ret 0xca0d
0x000000000040ae3a : sar cl, -1 ; dec dword ptr [rcx + 9] ; ret
0x00000000004017ce : sar eax, 1 ; jne 0x4017d9 ; pop rbp ; ret
0x000000000043255d : sar edi, 1 ; call qword ptr [rax]
0x0000000000433469 : sar edi, cl ; jmp rdx
0x00000000004017cd : sar rax, 1 ; jne 0x4017da ; pop rbp ; ret
0x000000000041463b : sbb al, -0x44 ; test dword ptr [rsi - 0x76b3e015], edx ; ret
0x00000000004259fe : sbb al, 0x73 ; fisttp dword ptr [rax + 0x29] ; ret 0x148
0x0000000000425a0e : sbb al, 0x73 ; fisttp dword ptr [rax + 1] ; ret 0x8948
0x000000000041b509 : sbb al, 0x7b ; cld ; fisttp word ptr [rax + 0x29] ; ret 0x14c
0x000000000041b519 : sbb al, 0x7b ; cld ; fisttp word ptr [rax + 1] ; ret 0x8948
0x000000000042c9fa : sbb al, byte ptr [rbx] ; jmp rcx
0x0000000000428e5b : sbb byte ptr [rbx], ch ; mov ecx, dword ptr [rsi - 0x76b39411] ; ret
0x0000000000404a67 : sbb byte ptr [rcx - 0x77], cl ; ret
0x00000000004317ce : sbb ch, byte ptr [rax - 0x2f07686f] ; jo 0x43176a ; ret 0xbe30
0x000000000040b5e2 : sbb cl, byte ptr [rcx + 0x21] ; fimul dword ptr [rax - 0x45] ; and ebp, edx ; ret 0xb18a
0x000000000042c6d6 : sbb dword ptr [rbx], eax ; jmp rcx
0x000000000042a0df : sbb dword ptr [rcx + 0x49], 0x314dca89 ; ret 0x948
0x000000000040a20d : sbb dword ptr [rsi - 0xa], esp ; mov ah, byte ptr [rip - 0x76b3fcb5] ; ret
0x000000000042228e : sbb eax, 0x1482714 ; ret 0x8948
0x000000000042227e : sbb eax, 0x29482714 ; ret 0x14c
0x000000000042ab6f : sbb ecx, dword ptr [rax] ; or ah, byte ptr [rdx + 2] ; ror byte ptr [rcx + 0x29], cl ; ret 0x149
0x000000000042ab7f : sbb ecx, dword ptr [rax] ; or ah, byte ptr [rdx + 2] ; ror byte ptr [rcx + 1], cl ; ret 0xb848
0x0000000000404a65 : scasb al, byte ptr [rdi] ; in al, dx ; sbb byte ptr [rcx - 0x77], cl ; ret
0x00000000004317b1 : scasb al, byte ptr [rdi] ; in eax, dx ; leave ; ret 0x3b81
0x000000000041111e : scasb al, byte ptr [rdi] ; mov cl, 0x38 ; ret
0x0000000000401805 : scasb al, byte ptr [rdi] ; sub ah, byte ptr [rbx] ; add byte ptr [rcx], al ; ret
0x0000000000425486 : scasb al, byte ptr [rdi] ; test byte ptr fs:[rdi], bl ; or eax, 0x894c6a58 ; ret
0x0000000000425c21 : scasd eax, dword ptr [rdi] ; adc eax, 0x894c9a7e ; ret
0x0000000000432599 : sldt word ptr [rax] ; nop ; fdivr st(7) ; call qword ptr [rax]
0x0000000000419c6e : stc ; jo 0x419c71 ; ret
0x0000000000419c6d : stc ; jo 0x419c72 ; ret
0x0000000000419c7e : stc ; jo 0x419c81 ; ret
0x0000000000419c7d : stc ; jo 0x419c82 ; ret
0x0000000000426e48 : stc ; ret 0x42b5
0x0000000000432892 : std ; call qword ptr [rsi]
0x0000000000432972 : std ; jmp rsi
0x0000000000419c70 : std ; ret
0x0000000000430578 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040727e : sti ; jmp rcx
0x0000000000418e63 : stosb byte ptr [rdi], al ; call 0xffffffffc2965c64
0x0000000000418e73 : stosb byte ptr [rdi], al ; call 0xffffffffc2965c74
0x0000000000418e86 : stosb byte ptr [rdi], al ; call 0xffffffffc2965c87
0x0000000000418eac : stosb byte ptr [rdi], al ; call 0xffffffffc2965cad
0x00000000004194be : stosb byte ptr [rdi], al ; mov byte ptr [rcx + 0x4ccf214c], 0x21 ; ret 0x94c
0x00000000004142d0 : stosb byte ptr [rdi], al ; ret
0x0000000000404126 : stosd dword ptr [rdi], eax ; mov cl, byte ptr [rbp + 9] ; ret 0x8148
0x0000000000404113 : stosd dword ptr [rdi], eax ; mov cl, byte ptr [rcx - 0x77] ; ret 0x314d
0x000000000042397a : stosd dword ptr [rdi], eax ; xchg eax, edi ; ret
0x0000000000403581 : str word ptr [rax + 0x29] ; ret 0x8948
0x0000000000401806 : sub ah, byte ptr [rbx] ; add byte ptr [rcx], al ; ret
0x00000000004149ff : sub bl, ch ; ret
0x0000000000404826 : sub byte ptr [rax - 0x77], cl ; ret 0x8148
0x00000000004042ae : sub byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000042edef : sub dword ptr [rdx], 0x5b ; ret
0x000000000042a471 : sub eax, 0x14848e2 ; ret 0x8948
0x0000000000416b27 : sub eax, 0x148fd4d ; ret 0x8948
0x000000000042a461 : sub eax, 0x294848e2 ; ret 0x14c
0x0000000000416b17 : sub eax, 0x2948fd4d ; ret 0x148
0x0000000000419714 : sub eax, 0x87b1088c ; ret
0x0000000000430b6d : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000430b6c : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000427c97 : test al, -0x68 ; hlt ; jae 0x427cf1 ; ret 0x23f8
0x0000000000427ca7 : test al, -0x68 ; hlt ; jae 0x427d01 ; ret 0x23f8
0x0000000000427cba : test al, -0x68 ; hlt ; jae 0x427d14 ; ret 0x23f8
0x0000000000427ce0 : test al, -0x68 ; hlt ; jae 0x427d3a ; ret 0x23f8
0x00000000004317cf : test al, -0x6f ; xchg eax, edi ; clc ; sal byte ptr [rax - 0x75], 1 ; ret 0xbe30
0x000000000041fda5 : test al, 0x6f ; ret
0x000000000042812d : test byte ptr [rax + 0x1495c54], al ; ret
0x000000000042811d : test byte ptr [rax + 0x29495c54], al ; ret
0x0000000000421cae : test byte ptr [rax - 0x45], 0x12 ; and al, 0x59 ; ret
0x00000000004203c1 : test byte ptr [rax - 0x45], 0x4f ; ret
0x0000000000430b3a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004022cc : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000043270c : test byte ptr [rax], al ; add byte ptr [rax], al ; loopne 0x43270b ; cld ; jmp rdx
0x000000000041a435 : test byte ptr [rcx + 1], cl ; ret
0x000000000042946e : test byte ptr [rdi + rdx*4 + 0x6f], ch ; ret 0x34c0
0x0000000000425488 : test byte ptr [rdi], bl ; or eax, 0x894c6a58 ; ret
0x000000000040a20f : test byte ptr [rdx + 0x4c034b25], -0x77 ; ret
0x0000000000425487 : test byte ptr fs:[rdi], bl ; or eax, 0x894c6a58 ; ret
0x0000000000418e65 : test ch, 0x54 ; ret 0x8949
0x0000000000418e75 : test ch, 0x54 ; ret 0x894c
0x0000000000418e88 : test ch, 0x54 ; ret 0x894d
0x0000000000418eae : test ch, 0x54 ; ret 0x949
0x0000000000402b36 : test dword ptr [rdi], edi ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; call qword ptr [rbx]
0x0000000000402072 : test dword ptr [rdx], esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x4319
0x000000000041463d : test dword ptr [rsi - 0x76b3e015], edx ; ret
0x0000000000428a07 : test eax, 0x5accf3a0 ; rsqrtps xmm1, xmmword ptr [rcx + 1] ; ret 0xb848
0x0000000000401d86 : wait ; add byte ptr [rax], al ; add dh, al ; add al, 0x25 ; ret
0x0000000000416f60 : wait ; add cl, byte ptr [rbp + 9] ; ret 0x8148
0x0000000000416f5e : wait ; and byte ptr [rbx + 0x94d0248], bl ; ret 0x8148
0x0000000000407715 : wait ; outsb dx, byte ptr [rsi] ; pop rbp ; or eax, 0x894c682a ; ret
0x000000000040b207 : xchg eax, ebp ; call rdx
0x0000000000416b76 : xchg eax, ebp ; clc ; idiv bh ; dec dword ptr [rax + 0x29] ; ret 0x8b48
0x0000000000413b2f : xchg eax, ebp ; clc ; idiv edi ; dec dword ptr [rax + 0x29] ; ret 0x8b48
0x0000000000414b28 : xchg eax, ebp ; cwde ; idiv edi ; dec dword ptr [rax + 0x29] ; ret 0x8b48
0x0000000000424772 : xchg eax, ebp ; out -0x4b, al ; ret
0x0000000000402a5f : xchg eax, ebp ; ret 0x8840
0x00000000004022d2 : xchg eax, ebp ; ret 0xd284
0x00000000004278aa : xchg eax, ebp ; xor dl, 0xff ; dec dword ptr [rax + 0x29] ; ret 0x8b48
0x00000000004047c9 : xchg eax, ecx ; movsb byte ptr [rdi], byte ptr gs:[rsi] ; fimul word ptr [rax - 0x76b35f6f] ; ret
0x00000000004047a6 : xchg eax, ecx ; movsb byte ptr [rdi], byte ptr gs:[rsi] ; fimul word ptr [rax - 0x76b65f6f] ; ret 0x314d
0x000000000041b479 : xchg eax, ecx ; out -0x32, eax ; add cl, byte ptr [rcx + 1] ; ret 0x8b48
0x00000000004317d0 : xchg eax, ecx ; xchg eax, edi ; clc ; sal byte ptr [rax - 0x75], 1 ; ret 0xbe30
0x00000000004317d1 : xchg eax, edi ; clc ; sal byte ptr [rax - 0x75], 1 ; ret 0xbe30
0x0000000000429470 : xchg eax, edi ; outsd dx, dword ptr [rsi] ; ret 0x34c0
0x000000000042397b : xchg eax, edi ; ret
0x0000000000422174 : xchg eax, edx ; in eax, 0x22 ; ret 0x73ea
0x00000000004255df : xchg eax, edx ; push rax ; call 0x4a2a187a
0x00000000004255d2 : xchg eax, edx ; push rax ; call 0x4d2a186d
0x00000000004255fc : xchg eax, edx ; push rax ; call 0x4e2a1897
0x000000000041bfd5 : xchg eax, esi ; or edi, dword ptr [rdx - 0x76b361cc] ; ret
0x000000000042e672 : xchg eax, esp ; ret 0xd284
0x000000000040248a : xchg eax, esp ; ret 0xe280
0x000000000040b205 : xor al, 0x21 ; xchg eax, ebp ; call rdx
0x0000000000402bfd : xor al, 0x25 ; mov dl, 0x14 ; add byte ptr [r8 - 0x77], cl ; ret 0xf5e8
0x0000000000402c51 : xor al, 0x25 ; or edx, dword ptr [rip - 0x76b7ffbd] ; ret 0xa1e8
0x0000000000402ba9 : xor al, 0x25 ; pop rbx ; adc al, 0x43 ; add byte ptr [rax - 0x77], cl ; ret 0x49e8
0x00000000004175a8 : xor al, 0xffffffffffffffb7 ; ret
0x00000000004149da : xor bh, 0xff ; dec dword ptr [rcx + 9] ; ret
0x0000000000418b6b : xor bl, byte ptr [rdi - 0x30] ; enter 0x483b, 0x29 ; ret 0x8948
0x0000000000418b5b : xor bl, byte ptr [rdi - 0x30] ; enter 0x483b, 1 ; ret 0x14c
0x000000000043053e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040b204 : xor dh, byte ptr [rcx] ; xchg eax, ebp ; call rdx
0x00000000004278ab : xor dl, 0xff ; dec dword ptr [rax + 0x29] ; ret 0x8b48
0x00000000004183e7 : xor dword ptr [rcx - 0x76b3817b], edi ; ret
0x000000000041cab1 : xor dword ptr [rsi], edi ; ret 0x93b3
0x000000000042e137 : xor eax, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x000000000042c485 : xor eax, edx ; mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
