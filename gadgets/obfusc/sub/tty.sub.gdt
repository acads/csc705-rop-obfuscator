0x00000000004038d9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004074d3 : add ah, ch ; add al, byte ptr [rax] ; add al, bh ; ret 0xffff
0x000000000040701b : add al, ah ; sar bh, 1 ; jmp qword ptr [rax]
0x00000000004074d7 : add al, bh ; ret 0xffff
0x0000000000407517 : add al, bl ; ret
0x00000000004074d5 : add al, byte ptr [rax] ; add al, bh ; ret 0xffff
0x0000000000407c37 : add al, cl ; loop 0x407c3e ; jmp rdx
0x000000000040626f : add bl, dh ; ret
0x000000000040491d : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000040700b : add byte ptr [rax], ah ; sar bh, 1 ; jmp rax
0x00000000004074d1 : add byte ptr [rax], al ; add ah, ch ; add al, byte ptr [rax] ; add al, bh ; ret 0xffff
0x000000000040626d : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040626b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040626c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000402f7e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x00000000004019a5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004041ee : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004056cc : add byte ptr [rax], al ; add cl, ch ; ret 2
0x00000000004038a1 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004035b0 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401133 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004070ca : add byte ptr [rax], al ; and al, 0xff ; jmp rax
0x00000000004074d6 : add byte ptr [rax], al ; clc ; ret 0xffff
0x000000000040705b : add byte ptr [rax], al ; fcos ; jmp qword ptr [rax]
0x00000000004074d2 : add byte ptr [rax], al ; in al, dx ; add al, byte ptr [rax] ; add al, bh ; ret 0xffff
0x0000000000401349 : add byte ptr [rax], al ; jmp 0x401149
0x0000000000401e72 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000407c32 : add byte ptr [rax], al ; or r8b, byte ptr [rax] ; add al, cl ; loop 0x407c43 ; jmp rdx
0x0000000000403bce : add byte ptr [rax], al ; pop rbp ; ret
0x00000000004047bb : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403570 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040626e : add byte ptr [rax], al ; ret
0x0000000000406fda : add byte ptr [rax], al ; ror dh, -1 ; jmp qword ptr [rax]
0x000000000040709b : add byte ptr [rax], dh ; fdivp st(7) ; jmp qword ptr [rax]
0x000000000040704b : add byte ptr [rax], dh ; sar bh, cl ; jmp rax
0x00000000004070db : add byte ptr [rax], dl ; loope 0x4070e2 ; jmp qword ptr [rax]
0x00000000004047bc : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000403571 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000404fb6 : add byte ptr [rcx - 0x4e1703bb], cl ; ret 0xffff
0x000000000040610c : add byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x0000000000401558 : add byte ptr [rcx], al ; ret
0x0000000000406fd8 : add byte ptr [rdi], al ; add byte ptr [rax], al ; ror dh, -1 ; jmp qword ptr [rax]
0x00000000004056c8 : add byte ptr [rdi], cl ; lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000402f80 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x00000000004019a7 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004041f0 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000407c33 : add byte ptr [rdx + rcx], cl ; add al, cl ; loop 0x407c42 ; jmp rdx
0x00000000004056ce : add cl, ch ; ret 2
0x0000000000404df9 : add dword ptr [rax - 0x77], ecx ; ret 0x8148
0x000000000040389f : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004047ba : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040356f : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000405fcd : add dword ptr [rax], ecx ; ret 0x840
0x0000000000405caa : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401554 : add eax, 0x206d1e ; add ebx, esi ; ret
0x00000000004056cb : add eax, 0xe9000000 ; ret 2
0x0000000000407515 : add eax, dword ptr [rax] ; add al, bl ; ret
0x000000000040151b : add eax, edx ; sar rax, 1 ; jne 0x40152c ; pop rbp ; ret
0x0000000000401559 : add ebx, esi ; ret
0x000000000040168b : add esp, 0x10 ; pop rbp ; ret
0x00000000004059fc : add esp, 0x130 ; pop rbp ; ret
0x0000000000404aec : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000401c67 : add esp, 0x20 ; pop rbp ; ret
0x000000000040176d : add esp, 0x30 ; pop rbp ; ret
0x0000000000403cbc : add esp, 0x50 ; pop rbp ; ret
0x0000000000402193 : add esp, 0x70 ; pop rbp ; ret
0x0000000000403bca : add esp, 0x90 ; pop rbp ; ret
0x0000000000404983 : add esp, 0xa0 ; pop rbp ; ret
0x0000000000401136 : add esp, 8 ; ret
0x000000000040151a : add rax, rdx ; sar rax, 1 ; jne 0x40152d ; pop rbp ; ret
0x000000000040168a : add rsp, 0x10 ; pop rbp ; ret
0x00000000004059fb : add rsp, 0x130 ; pop rbp ; ret
0x0000000000404aeb : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000401c66 : add rsp, 0x20 ; pop rbp ; ret
0x000000000040176c : add rsp, 0x30 ; pop rbp ; ret
0x0000000000403cbb : add rsp, 0x50 ; pop rbp ; ret
0x0000000000402192 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000403bc9 : add rsp, 0x90 ; pop rbp ; ret
0x0000000000404982 : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000401135 : add rsp, 8 ; ret
0x00000000004070cc : and al, 0xff ; jmp rax
0x0000000000405ca9 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401557 : and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000403957 : and dword ptr [rax], 0x81d8558b ; ret 0x1b2
0x00000000004019d9 : and eax, 0x6081d8 ; pop rbp ; ret
0x00000000004019ef : and eax, 0x608280 ; pop rbp ; ret
0x0000000000401a13 : and eax, 0x608288 ; pop rbp ; ret
0x0000000000405699 : and edi, dword ptr [rbp - 0x72b70001] ; xor al, 0x25 ; ret
0x0000000000404f78 : call 0x31267
0x0000000000404f77 : call 0x31268
0x000000000040504d : call 0x401262
0x0000000000404fba : call 0x401272
0x0000000000405698 : call 0x4013c9
0x00000000004035a9 : call 0xffffffffe902bef9
0x00000000004035a8 : call 0xffffffffe902befa
0x0000000000406249 : call qword ptr [r12 + rbx*8]
0x00000000004072d3 : call qword ptr [rsi]
0x000000000040624a : call qword ptr [rsp + rbx*8]
0x000000000040157d : call rax
0x00000000004032fc : call rbx
0x0000000000407473 : call rdi
0x00000000004059fa : clc ; add rsp, 0x130 ; pop rbp ; ret
0x0000000000404cef : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404201 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040151f : clc ; jne 0x401528 ; pop rbp ; ret
0x0000000000402045 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040618f : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000406192 : clc ; pop rbp ; ret
0x00000000004074d8 : clc ; ret 0xffff
0x0000000000405b46 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004051db : cld ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040511a : cld ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404fb9 : cld ; call 0x401273
0x0000000000404fb8 : cld ; call 0x401274
0x00000000004019d6 : cld ; mov dword ptr [0x6081d8], eax ; pop rbp ; ret
0x000000000040618c : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000405b43 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405ae6 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405117 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004014dd : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4014f0 ; pop rbp ; ret
0x00000000004042fc : cwde ; mov rcx, qword ptr [rax*8 + 0x406b18] ; jmp rcx
0x000000000040569c : dec dword ptr [rax - 0x73] ; xor al, 0x25 ; ret
0x0000000000405734 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000402d02 : dec dword ptr [rcx - 0x77] ; ret 0x294d
0x0000000000403090 : enter 0x4b05, 0x34 ; fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x0000000000404fb3 : fadd dword ptr [rcx + 0x45890060] ; cld ; call 0x401279
0x000000000040705d : fcos ; jmp qword ptr [rax]
0x000000000040709d : fdivp st(7) ; jmp qword ptr [rax]
0x0000000000403094 : fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x000000000040624c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000404198 : fsubr st(0) ; ret 0xe
0x0000000000401689 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004014f0 : hlt ; pop rbp ; mov edi, 0x608238 ; jmp rax
0x00000000004074d4 : in al, dx ; add al, byte ptr [rax] ; add al, bh ; ret 0xffff
0x0000000000407097 : inc dword ptr [rax] ; or al, byte ptr [rax] ; add byte ptr [rax], dh ; fdivp st(7) ; jmp qword ptr [rax]
0x0000000000407017 : inc dword ptr [rax] ; or byte ptr [rax], al ; add al, ah ; sar bh, 1 ; jmp qword ptr [rax]
0x0000000000407057 : inc dword ptr [rax] ; or dword ptr [rax], eax ; add byte ptr [rax], al ; fcos ; jmp qword ptr [rax]
0x00000000004070d7 : inc dword ptr [rax] ; or eax, dword ptr [rax] ; add byte ptr [rax], dl ; loope 0x4070e6 ; jmp qword ptr [rax]
0x000000000040331b : inc dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000407047 : inc eax ; or byte ptr [rax], al ; add byte ptr [rax], dh ; sar bh, cl ; jmp rax
0x0000000000401556 : insd dword ptr [rdi], dx ; and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000404925 : int 0x80
0x00000000004014e3 : ja 0x4014ea ; pop rbp ; ret
0x00000000004014ef : je 0x4014ed ; pop rbp ; mov edi, 0x608238 ; jmp rax
0x000000000040134b : jmp 0x401147
0x0000000000404df8 : jmp 0xffffffffc2c99602
0x0000000000406f9f : jmp qword ptr [rax]
0x0000000000402796 : jmp qword ptr [rcx]
0x000000000040755b : jmp qword ptr [rdx]
0x00000000004014f7 : jmp rax
0x0000000000402259 : jmp rcx
0x0000000000401537 : jmp rdx
0x0000000000401520 : jne 0x401527 ; pop rbp ; ret
0x0000000000402195 : jo 0x4021f6 ; ret
0x00000000004037bf : jo 0x403825 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403e64 : jo 0x403ec5 ; ret
0x0000000000403f9e : jo 0x403fff ; ret
0x00000000004056ca : lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000403956 : lock and dword ptr [rax], 0x81d8558b ; ret 0x1b2
0x0000000000407c39 : loop 0x407c3c ; jmp rdx
0x00000000004070dd : loope 0x4070e0 ; jmp qword ptr [rax]
0x0000000000405048 : loopne 0x405099 ; mov ecx, dword ptr [rbp - 0x28] ; call 0x401267
0x00000000004070cd : loopne 0x4070d0 ; jmp rax
0x0000000000403d3b : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000403bc8 : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000405ca6 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401a11 : mov byte ptr [0x608288], al ; pop rbp ; ret
0x0000000000401553 : mov byte ptr [rip + 0x206d1e], 1 ; ret
0x0000000000405cac : mov dh, -0x40 ; pop rbp ; ret
0x00000000004019d7 : mov dword ptr [0x6081d8], eax ; pop rbp ; ret
0x00000000004019ed : mov dword ptr [0x608280], edi ; pop rbp ; ret
0x0000000000402046 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000402008 : mov dword ptr [rax], eax ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000401ec4 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000402007 : mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000401769 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401687 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404fb7 : mov dword ptr [rbp - 4], eax ; call 0x401275
0x000000000040618d : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004020be : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401e78 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000404c0b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401c63 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401e75 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000401bbf : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000404f03 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401e2d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401ebe : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040200a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040218f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000403d39 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000405b44 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004051d9 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405118 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404ced : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004041ff : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406190 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040569a : mov ebp, 0x8d48ffff ; xor al, 0x25 ; ret
0x000000000040157b : mov ebp, esp ; call rax
0x00000000004014e1 : mov ebp, esp ; ja 0x4014ec ; pop rbp ; ret
0x000000000040493d : mov ecx, 0x5b2a830a ; ret
0x0000000000402252 : mov ecx, dword ptr [rax*8 + 0x406610] ; jmp rcx
0x0000000000402576 : mov ecx, dword ptr [rax*8 + 0x406658] ; jmp rcx
0x00000000004042fe : mov ecx, dword ptr [rax*8 + 0x406b18] ; jmp rcx
0x0000000000401ec1 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040504a : mov ecx, dword ptr [rbp - 0x28] ; call 0x401265
0x0000000000401575 : mov edi, 0x607e20 ; mov rbp, rsp ; call rax
0x00000000004014f2 : mov edi, 0x608238 ; jmp rax
0x0000000000401532 : mov edi, 0x608238 ; jmp rdx
0x0000000000406247 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000406246 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000405046 : mov edx, dword ptr [rbp - 0x20] ; mov rcx, qword ptr [rbp - 0x28] ; call 0x401269
0x0000000000401530 : mov esi, eax ; mov edi, 0x608238 ; jmp rdx
0x00000000004019ec : mov qword ptr [0x608280], rdi ; pop rbp ; ret
0x00000000004020bd : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403d3a : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000404c0a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401c62 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401e74 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000401bbe : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000404f02 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401e2c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040218e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000403d38 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000404cec : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004041fe : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040157a : mov rbp, rsp ; call rax
0x00000000004014e0 : mov rbp, rsp ; ja 0x4014ed ; pop rbp ; ret
0x0000000000402251 : mov rcx, qword ptr [rax*8 + 0x406610] ; jmp rcx
0x0000000000402575 : mov rcx, qword ptr [rax*8 + 0x406658] ; jmp rcx
0x00000000004042fd : mov rcx, qword ptr [rax*8 + 0x406b18] ; jmp rcx
0x0000000000405049 : mov rcx, qword ptr [rbp - 0x28] ; call 0x401266
0x000000000040152f : mov rsi, rax ; mov edi, 0x608238 ; jmp rdx
0x0000000000405cab : movzx eax, al ; pop rbp ; ret
0x0000000000406268 : nop dword ptr [rax + rax] ; ret
0x00000000004028dd : or al, 0x18 ; ret 0x6451
0x0000000000407c35 : or al, byte ptr [rax] ; add al, cl ; loop 0x407c40 ; jmp rdx
0x0000000000407099 : or al, byte ptr [rax] ; add byte ptr [rax], dh ; fdivp st(7) ; jmp qword ptr [rax]
0x0000000000407019 : or byte ptr [rax], al ; add al, ah ; sar bh, 1 ; jmp qword ptr [rax]
0x0000000000407049 : or byte ptr [rax], al ; add byte ptr [rax], dh ; sar bh, cl ; jmp rax
0x0000000000407059 : or dword ptr [rax], eax ; add byte ptr [rax], al ; fcos ; jmp qword ptr [rax]
0x0000000000403f21 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004070d9 : or eax, dword ptr [rax] ; add byte ptr [rax], dl ; loope 0x4070e4 ; jmp qword ptr [rax]
0x0000000000407c34 : or r8b, byte ptr [rax] ; add al, cl ; loop 0x407c41 ; jmp rdx
0x000000000040625c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004037c1 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040625e : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004037c3 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406260 : pop r14 ; pop r15 ; ret
0x0000000000403573 : pop r14 ; pop rbp ; ret
0x00000000004037c5 : pop r15 ; pop rbp ; ret
0x0000000000406262 : pop r15 ; ret
0x0000000000401552 : pop rbp ; mov byte ptr [rip + 0x206d1e], 1 ; ret
0x00000000004014f1 : pop rbp ; mov edi, 0x608238 ; jmp rax
0x000000000040152e : pop rbp ; mov rsi, rax ; mov edi, 0x608238 ; jmp rdx
0x000000000040625b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040625f : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004014e5 : pop rbp ; ret
0x00000000004037c0 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004047bd : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403572 : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000404941 : pop rbx ; ret
0x00000000004037c6 : pop rdi ; pop rbp ; ret
0x0000000000406263 : pop rdi ; ret
0x00000000004037c4 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000406261 : pop rsi ; pop r15 ; ret
0x0000000000403574 : pop rsi ; pop rbp ; ret
0x000000000040625d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004037c2 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000401dab : push 0x48006082 ; add esp, 0x30 ; pop rbp ; ret
0x0000000000403cbe : push rax ; pop rbp ; ret
0x0000000000405047 : push rbp ; loopne 0x40509a ; mov ecx, dword ptr [rbp - 0x28] ; call 0x401268
0x0000000000401574 : push rbp ; mov edi, 0x607e20 ; mov rbp, rsp ; call rax
0x000000000040028c : ret
0x0000000000405902 : ret 0
0x0000000000405916 : ret 0x148
0x000000000040395e : ret 0x1b2
0x0000000000401352 : ret 0x206d
0x0000000000401142 : ret 0x206e
0x0000000000401c45 : ret 0x2948
0x0000000000402ce9 : ret 0x294c
0x0000000000402d05 : ret 0x294d
0x0000000000401f44 : ret 0x5589
0x00000000004028df : ret 0x6451
0x0000000000404dfc : ret 0x8148
0x0000000000405fcf : ret 0x840
0x0000000000402f83 : ret 0x8840
0x00000000004042b9 : ret 0x8844
0x0000000000404e10 : ret 0x8948
0x0000000000402d08 : ret 0x8949
0x0000000000402e9c : ret 0x89a5
0x0000000000402cec : ret 0x8b48
0x0000000000405909 : ret 0xb849
0x0000000000402d1d : ret 0xbde8
0x0000000000401515 : ret 0xc148
0x0000000000405670 : ret 0xc2f6
0x0000000000402704 : ret 0xca21
0x00000000004019aa : ret 0xd284
0x000000000040419a : ret 0xe
0x00000000004035ac : ret 0xee8
0x0000000000402f98 : ret 0xf180
0x0000000000405663 : ret 0xf280
0x000000000040277e : ret 0xf281
0x0000000000404f7a : ret 0xffc2
0x0000000000404fbc : ret 0xffff
0x0000000000403964 : ret 1
0x00000000004056d0 : ret 2
0x0000000000402006 : rol byte ptr [rcx + rcx*4], 1 ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000407008 : rol byte ptr [rdi], 0 ; add byte ptr [rax], ah ; sar bh, 1 ; jmp rax
0x0000000000404920 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000402190 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x4021fb ; ret
0x000000000040151c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40152b ; pop rbp ; ret
0x0000000000404921 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000402cdd : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000402ce6 : ror byte ptr [rax - 0x77], 1 ; ret 0x294c
0x0000000000402191 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x4021fa ; ret
0x0000000000407048 : ror byte ptr [rax], 0 ; add byte ptr [rax], dh ; sar bh, cl ; jmp rax
0x0000000000407188 : ror byte ptr [rip - 0xd900000], -1 ; jmp rax
0x0000000000406fdc : ror dh, -1 ; jmp qword ptr [rax]
0x000000000040701d : sar bh, 1 ; jmp qword ptr [rax]
0x000000000040700d : sar bh, 1 ; jmp rax
0x000000000040704d : sar bh, cl ; jmp rax
0x000000000040151e : sar eax, 1 ; jne 0x401529 ; pop rbp ; ret
0x000000000040151d : sar rax, 1 ; jne 0x40152a ; pop rbp ; ret
0x00000000004074d0 : sbb al, 0 ; add byte ptr [rax], al ; in al, dx ; add al, byte ptr [rax] ; add al, bh ; ret 0xffff
0x0000000000405ca8 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040493f : sub dword ptr [rdx], 0x5b ; ret
0x0000000000401131 : sub eax, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000040629d : sub esp, 8 ; add rsp, 8 ; ret
0x000000000040629c : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040626a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000402f82 : xchg eax, ebp ; ret 0x8840
0x00000000004019a9 : xchg eax, ebp ; ret 0xd284
0x00000000004041f2 : xchg eax, esp ; ret 0xd284
0x000000000040569f : xor al, 0x25 ; ret
0x00000000004059fe : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000403cb7 : xor eax, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x0000000000402005 : xor eax, edx ; mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
