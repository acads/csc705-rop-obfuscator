0x00000000004082d1 : adc byte ptr [rax], al ; add byte ptr [rax], al ; out -1, eax ; jmp qword ptr [rax]
0x00000000004022a7 : adc eax, 0x48ffffef ; add esp, 0x10 ; pop rbp ; ret
0x0000000000404079 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040512b : add al, 0x24 ; mov al, 0 ; call 0x401366
0x00000000004082c3 : add al, ah ; fdivp st(7) ; jmp rax
0x0000000000408253 : add al, al ; fdivr st(7) ; jmp qword ptr [rax]
0x000000000040809b : add al, al ; ret
0x000000000040506b : add al, ch ; out dx, eax ; ret 0xffff
0x00000000004050be : add al, ch ; pushfq ; ret 0xffff
0x00000000004015b7 : add al, ch ; ret
0x0000000000406f1f : add bl, dh ; ret
0x0000000000408be3 : add byte ptr [rax + rcx], ch ; add byte ptr [rax], al ; call 0x28408bb5
0x00000000004055cd : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x00000000004019bc : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x00000000004015b5 : add byte ptr [rax], al ; add al, ch ; ret
0x0000000000406f1d : add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004019ba : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x0000000000406f1b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000406f1c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040793c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x402e
0x000000000040371e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x000000000040498e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040637c : add byte ptr [rax], al ; add cl, ch ; ret 2
0x0000000000404041 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403d50 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040114b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000408be6 : add byte ptr [rax], al ; call 0x28408bb2
0x0000000000408293 : add byte ptr [rax], al ; fdiv st(7), st(0) ; jmp qword ptr [rax]
0x0000000000401329 : add byte ptr [rax], al ; jmp 0x401169
0x00000000004049ca : add byte ptr [rax], al ; mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404a3d : add byte ptr [rax], al ; mov eax, edi ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404e49 : add byte ptr [rax], al ; mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404c61 : add byte ptr [rax], al ; mov eax, esi ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402612 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004082d3 : add byte ptr [rax], al ; out -1, eax ; jmp qword ptr [rax]
0x000000000040436e : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040546b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403d10 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000408252 : add byte ptr [rax], al ; rcr al, -1 ; jmp qword ptr [rax]
0x0000000000406f1e : add byte ptr [rax], al ; ret
0x000000000040793e : add byte ptr [rax], al ; ret 0x402e
0x0000000000408282 : add byte ptr [rax], al ; sbb bl, -1 ; jmp rax
0x0000000000408be2 : add byte ptr [rax], al ; sub al, 8 ; add byte ptr [rax], al ; call 0x28408bb6
0x0000000000404a0f : add byte ptr [rbp + 0x48], dl ; mov ebp, esp ; mov dword ptr [rbp - 4], edi ; pop rbp ; ret
0x000000000040546c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000403d11 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000401b50 : add byte ptr [rbx - 0xaf4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000401d4e : add byte ptr [rbx - 0xcb4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000401e1e : add byte ptr [rbx - 0xdb4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000404f76 : add byte ptr [rcx - 0x5bba7631], cl ; call 0x401278
0x0000000000404f75 : add byte ptr [rcx - 0x5bba7631], cl ; call 0x401279
0x0000000000406dbc : add byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x0000000000401568 : add byte ptr [rcx], al ; ret
0x0000000000406378 : add byte ptr [rdi], cl ; lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000404e7a : add byte ptr [rdi], cl ; mov bh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004015b1 : add byte ptr [rdi], cl ; test byte ptr [rdx], cl ; add byte ptr [rax], al ; add al, ch ; ret
0x0000000000403720 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000404990 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000408250 : add byte ptr [rsi], cl ; add byte ptr [rax], al ; rcr al, -1 ; jmp qword ptr [rax]
0x000000000040637e : add cl, ch ; ret 2
0x0000000000405aa9 : add dword ptr [rax - 0x77], ecx ; ret 0x8148
0x000000000040403f : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040546a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000403d0f : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000406c7d : add dword ptr [rax], ecx ; ret 0x840
0x000000000040695a : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401564 : add eax, 0x208d2e ; add ebx, esi ; ret
0x000000000040637b : add eax, 0xe9000000 ; ret 2
0x000000000040152b : add eax, edx ; sar rax, 1 ; jne 0x40153c ; pop rbp ; ret
0x0000000000401569 : add ebx, esi ; ret
0x00000000004016bb : add esp, 0x10 ; pop rbp ; ret
0x00000000004066ac : add esp, 0x130 ; pop rbp ; ret
0x000000000040579c : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000402407 : add esp, 0x20 ; pop rbp ; ret
0x00000000004017cd : add esp, 0x30 ; pop rbp ; ret
0x000000000040445c : add esp, 0x50 ; pop rbp ; ret
0x0000000000402933 : add esp, 0x70 ; pop rbp ; ret
0x000000000040436a : add esp, 0x90 ; pop rbp ; ret
0x0000000000405633 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040114e : add esp, 8 ; ret
0x000000000040152a : add rax, rdx ; sar rax, 1 ; jne 0x40153d ; pop rbp ; ret
0x00000000004016ba : add rsp, 0x10 ; pop rbp ; ret
0x00000000004066ab : add rsp, 0x130 ; pop rbp ; ret
0x000000000040579b : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000402406 : add rsp, 0x20 ; pop rbp ; ret
0x00000000004017cc : add rsp, 0x30 ; pop rbp ; ret
0x000000000040445b : add rsp, 0x50 ; pop rbp ; ret
0x0000000000402932 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000404369 : add rsp, 0x90 ; pop rbp ; ret
0x0000000000405632 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040114d : add rsp, 8 ; ret
0x0000000000406959 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401567 : and byte ptr [rax], al ; add ebx, esi ; ret
0x000000000040218f : and eax, 0x60a2a0 ; pop rbp ; ret
0x00000000004021b3 : and eax, 0x60a2a8 ; pop rbp ; ret
0x0000000000401149 : and eax, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000408be8 : call 0x28408bb0
0x0000000000404ea0 : call 0x4011a2
0x0000000000404f7c : call 0x401272
0x000000000040506c : call 0x401362
0x0000000000403d49 : call 0xffffffffe902c699
0x0000000000403d48 : call 0xffffffffe902c69a
0x0000000000401ff7 : call 0xffffffffff48d590
0x0000000000406ef9 : call qword ptr [r12 + rbx*8]
0x0000000000407fcf : call qword ptr [rax]
0x00000000004084a3 : call qword ptr [rsi]
0x0000000000406efa : call qword ptr [rsp + rbx*8]
0x000000000040158d : call rax
0x0000000000403a9c : call rbx
0x0000000000408643 : call rdi
0x0000000000404a40 : clc ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004066aa : clc ; add rsp, 0x130 ; pop rbp ; ret
0x000000000040599f : clc ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004049a1 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040152f : clc ; jne 0x401538 ; pop rbp ; ret
0x00000000004027e5 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000406e3f : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000404e9b : clc ; mov qword ptr [rbp - 0x10], rsi ; call 0x4011a7
0x0000000000404bd7 : clc ; pop rbp ; ret
0x00000000004016e7 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405e8b : cld ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405dca : cld ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406e3c : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004067f3 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406796 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405dc7 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404a16 : cld ; pop rbp ; ret
0x00000000004014ed : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401500 ; pop rbp ; ret
0x0000000000404fac : cwde ; mov rcx, qword ptr [rax*8 + 0x407c08] ; jmp rcx
0x0000000000405128 : dec dword ptr [rax - 0x77] ; add al, 0x24 ; mov al, 0 ; call 0x401369
0x00000000004063e4 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000401b56 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004034a2 : dec dword ptr [rcx - 0x77] ; ret 0x294d
0x0000000000403830 : enter 0x4b05, 0x34 ; fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x0000000000408295 : fdiv st(7), st(0) ; jmp qword ptr [rax]
0x00000000004082c5 : fdivp st(7) ; jmp rax
0x0000000000408255 : fdivr st(7) ; jmp qword ptr [rax]
0x0000000000403834 : fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x0000000000401eef : fmul dword ptr [rbx - 0xeb4b] ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000406efc : fmul qword ptr [rax - 0x7d] ; ret
0x00000000004016b9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401500 : hlt ; pop rbp ; mov edi, 0x60a230 ; jmp rax
0x0000000000404a13 : in eax, -0x77 ; jge 0x404a18 ; pop rbp ; ret
0x0000000000404bd3 : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x00000000004082cf : inc dword ptr [rax] ; adc byte ptr [rax], al ; add byte ptr [rax], al ; out -1, eax ; jmp qword ptr [rax]
0x0000000000403abb : inc dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x00000000004055d5 : int 0x80
0x0000000000404f78 : iretd ; mov dword ptr [rbp - 0x5c], eax ; call 0x401276
0x00000000004014f3 : ja 0x4014fa ; pop rbp ; ret
0x00000000004014ff : je 0x4014fd ; pop rbp ; mov edi, 0x60a230 ; jmp rax
0x0000000000404a15 : jge 0x404a16 ; pop rbp ; ret
0x0000000000404bd6 : jge 0x404bd3 ; pop rbp ; ret
0x0000000000404e9a : jge 0x404e9c ; mov qword ptr [rbp - 0x10], rsi ; call 0x4011a8
0x000000000040132b : jmp 0x401167
0x0000000000405aa8 : jmp 0xffffffffc2c9a2b2
0x0000000000408097 : jmp qword ptr [rax]
0x0000000000402f36 : jmp qword ptr [rcx]
0x0000000000408a0b : jmp qword ptr [rdi]
0x000000000040872b : jmp qword ptr [rdx]
0x0000000000401507 : jmp rax
0x0000000000401996 : jmp rcx
0x0000000000401547 : jmp rdx
0x0000000000401530 : jne 0x401537 ; pop rbp ; ret
0x0000000000404e9e : jne 0x404e94 ; call 0x4011a4
0x0000000000402935 : jo 0x402996 ; ret
0x0000000000403f5f : jo 0x403fc5 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000404604 : jo 0x404665 ; ret
0x000000000040473e : jo 0x40479f ; ret
0x0000000000404dfd : lahf ; ret
0x0000000000404fcd : lahf ; ret 0xffff
0x000000000040637a : lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000401566 : lea esp, dword ptr [rax] ; add byte ptr [rcx], al ; ret
0x0000000000401565 : lea esp, dword ptr cs:[rax] ; add byte ptr [rcx], al ; ret
0x0000000000404fc7 : loopne 0x405018 ; mov dword ptr [rbp - 0x78], eax ; call 0x401277
0x0000000000404fc6 : loopne 0x405019 ; mov dword ptr [rbp - 0x78], eax ; call 0x401278
0x000000000040506a : mov al, 0 ; call 0x401364
0x00000000004044db : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000404368 : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000406956 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000404fcb : mov al, ch ; lahf ; ret 0xffff
0x0000000000404e7c : mov bh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004021b1 : mov byte ptr [0x60a2a8], al ; pop rbp ; ret
0x0000000000401563 : mov byte ptr [rip + 0x208d2e], 1 ; ret
0x000000000040695c : mov dh, -0x40 ; pop rbp ; ret
0x000000000040218d : mov dword ptr [0x60a2a0], edi ; pop rbp ; ret
0x00000000004027e6 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004027a8 : mov dword ptr [rax], eax ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000402664 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004027a7 : mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000404e9d : mov dword ptr [rbp - 0x10], esi ; call 0x4011a5
0x00000000004017c9 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404f79 : mov dword ptr [rbp - 0x5c], eax ; call 0x401275
0x0000000000404fc9 : mov dword ptr [rbp - 0x78], eax ; call 0x401275
0x0000000000404ffb : mov dword ptr [rbp - 0x88], eax ; call 0x401278
0x000000000040503e : mov dword ptr [rbp - 0x98], eax ; call 0x401278
0x00000000004016b7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004016e5 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404a14 : mov dword ptr [rbp - 4], edi ; pop rbp ; ret
0x0000000000406e3d : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000404e99 : mov dword ptr [rbp - 8], edi ; mov qword ptr [rbp - 0x10], rsi ; call 0x4011a9
0x0000000000404bd5 : mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x000000000040285e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040512a : mov dword ptr [rsp], eax ; mov al, 0 ; call 0x401367
0x0000000000402618 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004058bb : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402403 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402615 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040235f : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405bb3 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004025cd : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040265e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000404fc5 : mov eax, dword ptr [rbp - 0x20] ; mov qword ptr [rbp - 0x78], rax ; call 0x401279
0x00000000004027aa : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040292f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004044d9 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004067f4 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405e89 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405dc8 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040599d : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040499f : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406e40 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004049cc : mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404a3f : mov eax, edi ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404e4b : mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404c63 : mov eax, esi ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040158b : mov ebp, esp ; call rax
0x00000000004014f1 : mov ebp, esp ; ja 0x4014fc ; pop rbp ; ret
0x0000000000404a12 : mov ebp, esp ; mov dword ptr [rbp - 4], edi ; pop rbp ; ret
0x0000000000404bd2 : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x00000000004055ed : mov ecx, 0x5b2a830a ; ret
0x000000000040198f : mov ecx, dword ptr [rax*8 + 0x406f70] ; jmp rcx
0x00000000004029f2 : mov ecx, dword ptr [rax*8 + 0x407700] ; jmp rcx
0x0000000000402d16 : mov ecx, dword ptr [rax*8 + 0x407748] ; jmp rcx
0x0000000000404fae : mov ecx, dword ptr [rax*8 + 0x407c08] ; jmp rcx
0x0000000000402661 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401585 : mov edi, 0x609e20 ; mov rbp, rsp ; call rax
0x0000000000401502 : mov edi, 0x60a230 ; jmp rax
0x0000000000401542 : mov edi, 0x60a230 ; jmp rdx
0x0000000000404f77 : mov edi, ecx ; mov dword ptr [rbp - 0x5c], eax ; call 0x401277
0x0000000000406ef7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000406ef6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000405068 : mov esi, eax ; mov al, 0 ; call 0x401366
0x0000000000401540 : mov esi, eax ; mov edi, 0x60a230 ; jmp rdx
0x000000000040218c : mov qword ptr [0x60a2a0], rdi ; pop rbp ; ret
0x0000000000404e9c : mov qword ptr [rbp - 0x10], rsi ; call 0x4011a6
0x0000000000404fc8 : mov qword ptr [rbp - 0x78], rax ; call 0x401276
0x0000000000404ffa : mov qword ptr [rbp - 0x88], rax ; call 0x401279
0x000000000040503d : mov qword ptr [rbp - 0x98], rax ; call 0x401279
0x0000000000404bd4 : mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000040285d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405129 : mov qword ptr [rsp], rax ; mov al, 0 ; call 0x401368
0x00000000004044da : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000404fca : mov r8b, r13b ; lahf ; ret 0xffff
0x00000000004058ba : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402402 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402614 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040235e : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405bb2 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004025cc : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040292e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004044d8 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040599c : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040499e : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404a00 : mov rax, rcx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040158a : mov rbp, rsp ; call rax
0x00000000004014f0 : mov rbp, rsp ; ja 0x4014fd ; pop rbp ; ret
0x0000000000404a11 : mov rbp, rsp ; mov dword ptr [rbp - 4], edi ; pop rbp ; ret
0x0000000000404bd1 : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000040198e : mov rcx, qword ptr [rax*8 + 0x406f70] ; jmp rcx
0x00000000004029f1 : mov rcx, qword ptr [rax*8 + 0x407700] ; jmp rcx
0x0000000000402d15 : mov rcx, qword ptr [rax*8 + 0x407748] ; jmp rcx
0x0000000000404fad : mov rcx, qword ptr [rax*8 + 0x407c08] ; jmp rcx
0x0000000000405067 : mov rsi, rax ; mov al, 0 ; call 0x401367
0x000000000040153f : mov rsi, rax ; mov edi, 0x60a230 ; jmp rdx
0x0000000000404f7b : movsb byte ptr [rdi], byte ptr [rsi] ; call 0x401273
0x0000000000404f7a : movsb byte ptr [rdi], byte ptr [rsi] ; call 0x401274
0x000000000040695b : movzx eax, al ; pop rbp ; ret
0x0000000000404e7b : movzx eax, cx ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406f18 : nop dword ptr [rax + rax] ; ret
0x000000000040307d : or al, 0x18 ; ret 0x6451
0x0000000000404faf : or al, 0xffffffffffffffc5 ; or byte ptr [rax + rax*2], bh ; jmp rcx
0x0000000000404fb1 : or byte ptr [rax + rax*2], bh ; jmp rcx
0x00000000004046c1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004082d5 : out -1, eax ; jmp qword ptr [rax]
0x0000000000404f6e : out dx, al ; ret
0x0000000000404f7d : out dx, eax ; ret 0xffff
0x0000000000406f0c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000403f61 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406f0e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000403f63 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406f10 : pop r14 ; pop r15 ; ret
0x0000000000403d13 : pop r14 ; pop rbp ; ret
0x0000000000403f65 : pop r15 ; pop rbp ; ret
0x0000000000406f12 : pop r15 ; ret
0x0000000000401562 : pop rbp ; mov byte ptr [rip + 0x208d2e], 1 ; ret
0x0000000000401501 : pop rbp ; mov edi, 0x60a230 ; jmp rax
0x000000000040153e : pop rbp ; mov rsi, rax ; mov edi, 0x60a230 ; jmp rdx
0x0000000000406f0b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000406f0f : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004014f5 : pop rbp ; ret
0x0000000000403f60 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040546d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403d12 : pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004055f1 : pop rbx ; ret
0x0000000000403f66 : pop rdi ; pop rbp ; ret
0x0000000000406f13 : pop rdi ; ret
0x0000000000403f64 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000406f11 : pop rsi ; pop r15 ; ret
0x0000000000403d14 : pop rsi ; pop rbp ; ret
0x0000000000406f0d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000403f62 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040445e : push rax ; pop rbp ; ret
0x0000000000401584 : push rbp ; mov edi, 0x609e20 ; mov rbp, rsp ; call rax
0x0000000000404a10 : push rbp ; mov rbp, rsp ; mov dword ptr [rbp - 4], edi ; pop rbp ; ret
0x0000000000404bd0 : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x00000000004050c0 : pushfq ; ret 0xffff
0x0000000000408254 : rcr al, -1 ; jmp qword ptr [rax]
0x0000000000401151 : ret
0x00000000004065b2 : ret 0
0x00000000004065c6 : ret 0x148
0x00000000004040fe : ret 0x1b2
0x0000000000401332 : ret 0x208d
0x00000000004023e5 : ret 0x2948
0x0000000000403489 : ret 0x294c
0x00000000004034a5 : ret 0x294d
0x0000000000407940 : ret 0x402e
0x00000000004026e4 : ret 0x5589
0x000000000040307f : ret 0x6451
0x0000000000405aac : ret 0x8148
0x0000000000406c7f : ret 0x840
0x0000000000403723 : ret 0x8840
0x0000000000404f69 : ret 0x8844
0x0000000000405ac0 : ret 0x8948
0x00000000004034a8 : ret 0x8949
0x000000000040363c : ret 0x89a5
0x000000000040348c : ret 0x8b48
0x00000000004019bf : ret 0xb0
0x00000000004065b9 : ret 0xb849
0x0000000000401525 : ret 0xc148
0x0000000000406320 : ret 0xc2f6
0x0000000000402ea4 : ret 0xca21
0x00000000004034bd : ret 0xcde8
0x0000000000404993 : ret 0xd284
0x0000000000403d4c : ret 0xee8
0x0000000000403738 : ret 0xf180
0x0000000000406313 : ret 0xf280
0x0000000000402f1e : ret 0xf281
0x000000000040164a : ret 0xfffc
0x0000000000404ea2 : ret 0xffff
0x0000000000404104 : ret 1
0x0000000000406380 : ret 2
0x00000000004027a6 : rol byte ptr [rcx + rcx*4], 1 ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004055d0 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000402930 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x40299b ; ret
0x000000000040152c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40153b ; pop rbp ; ret
0x00000000004055d1 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x000000000040347d : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000403486 : ror byte ptr [rax - 0x77], 1 ; ret 0x294c
0x0000000000402931 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x40299a ; ret
0x0000000000401f47 : ror byte ptr [rbx - 0xef4b], 1 ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004082c0 : ror byte ptr [rdi], 0 ; add al, ah ; fdivp st(7) ; jmp rax
0x0000000000408240 : ror byte ptr [rip - 0x28100000], -1 ; jmp rax
0x000000000040152e : sar eax, 1 ; jne 0x401539 ; pop rbp ; ret
0x000000000040152d : sar rax, 1 ; jne 0x40153a ; pop rbp ; ret
0x0000000000408284 : sbb bl, -1 ; jmp rax
0x0000000000404f6c : shr al, -0x12 ; ret
0x0000000000406958 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000404ea1 : sti ; ret 0xffff
0x0000000000408be4 : sub al, 8 ; add byte ptr [rax], al ; call 0x28408bb4
0x00000000004055ef : sub dword ptr [rdx], 0x5b ; ret
0x0000000000406f4d : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000406f4c : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000406f1a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004015b3 : test byte ptr [rdx], cl ; add byte ptr [rax], al ; add al, ch ; ret
0x0000000000403722 : xchg eax, ebp ; ret 0x8840
0x0000000000404992 : xchg eax, esp ; ret 0xd284
0x0000000000407939 : xor al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x402e
0x00000000004066ae : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000404457 : xor eax, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x00000000004027a5 : xor eax, edx ; mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
