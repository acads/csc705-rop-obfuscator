0x0000000000403dd9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407ee7 : add ah, bl ; ret 0xffff
0x0000000000407f07 : add ah, cl ; ret
0x0000000000407e75 : add al, 0 ; add byte ptr [rbx - 1], ch ; call rsp
0x0000000000401c32 : add al, 0x25 ; enter 0x6092, 0 ; pop rbp ; ret
0x000000000040500e : add al, bpl ; wait ; ret
0x0000000000401727 : add al, ch ; ret
0x000000000040500f : add al, ch ; wait ; ret
0x0000000000406fbf : add bl, dh ; ret
0x0000000000402755 : add byte ptr [rax + rax*2], dh ; jmp rcx
0x0000000000404e1d : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000401725 : add byte ptr [rax], al ; add al, ch ; ret
0x0000000000406fbd : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000406fbb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000405c59 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000406fbc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040347e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x00000000004046ee : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040699c : add byte ptr [rax], al ; add cl, ch ; ret 2
0x0000000000403da1 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403ab0 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040127b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000408c46 : add byte ptr [rax], al ; cwde ; loopne 0x408c4f ; jmp rax
0x00000000004013f9 : add byte ptr [rax], al ; jmp 0x401299
0x0000000000405c5b : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000402372 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000408c42 : add byte ptr [rax], al ; or al, 0xb ; add byte ptr [rax], al ; cwde ; loopne 0x408c53 ; jmp rax
0x0000000000402168 : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000404cbb : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403a70 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000407eb6 : add byte ptr [rax], al ; pushfq ; test al, -1 ; call rsp
0x0000000000406fbe : add byte ptr [rax], al ; ret
0x0000000000404cbc : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000403a71 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000408c43 : add byte ptr [rbx + rcx], cl ; add byte ptr [rax], al ; cwde ; loopne 0x408c52 ; jmp rax
0x0000000000407e77 : add byte ptr [rbx - 1], ch ; call rsp
0x0000000000405058 : add byte ptr [rcx + 0x4fe8f845], cl ; ret
0x000000000040502e : add byte ptr [rcx + 0x79e8fc45], cl ; ret
0x000000000040623c : add byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x00000000004016d8 : add byte ptr [rcx], al ; ret
0x0000000000406998 : add byte ptr [rdi], cl ; lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000401721 : add byte ptr [rdi], cl ; test byte ptr [rdx], cl ; add byte ptr [rax], al ; add al, ch ; ret
0x0000000000403480 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x00000000004046f0 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040699e : add cl, ch ; ret 2
0x00000000004052f9 : add dword ptr [rax - 0x77], ecx ; ret 0x8148
0x0000000000403d9f : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404cba : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000403a6f : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x00000000004060fd : add dword ptr [rax], ecx ; ret 0x840
0x0000000000405dda : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004016d4 : add eax, 0x207bde ; add ebx, esi ; ret
0x000000000040699b : add eax, 0xe9000000 ; ret 2
0x000000000040169b : add eax, edx ; sar rax, 1 ; jne 0x4016ac ; pop rbp ; ret
0x00000000004016d9 : add ebx, esi ; ret
0x000000000040182b : add esp, 0x10 ; pop rbp ; ret
0x0000000000406ccc : add esp, 0x130 ; pop rbp ; ret
0x0000000000404fec : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000401e87 : add esp, 0x20 ; pop rbp ; ret
0x000000000040190d : add esp, 0x30 ; pop rbp ; ret
0x00000000004041bc : add esp, 0x50 ; pop rbp ; ret
0x00000000004020da : add esp, 0x60 ; pop rbp ; ret
0x0000000000402693 : add esp, 0x70 ; pop rbp ; ret
0x0000000000402164 : add esp, 0x90 ; pop rbp ; ret
0x0000000000404e83 : add esp, 0xa0 ; pop rbp ; ret
0x0000000000405bf5 : add esp, 0xe0 ; pop rbp ; ret
0x000000000040127e : add esp, 8 ; ret
0x000000000040169a : add rax, rdx ; sar rax, 1 ; jne 0x4016ad ; pop rbp ; ret
0x000000000040182a : add rsp, 0x10 ; pop rbp ; ret
0x0000000000406ccb : add rsp, 0x130 ; pop rbp ; ret
0x0000000000404feb : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000401e86 : add rsp, 0x20 ; pop rbp ; ret
0x000000000040190c : add rsp, 0x30 ; pop rbp ; ret
0x00000000004041bb : add rsp, 0x50 ; pop rbp ; ret
0x00000000004020d9 : add rsp, 0x60 ; pop rbp ; ret
0x0000000000402692 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000402163 : add rsp, 0x90 ; pop rbp ; ret
0x0000000000404e82 : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000405bf4 : add rsp, 0xe0 ; pop rbp ; ret
0x000000000040127d : add rsp, 8 ; ret
0x0000000000405dd9 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004016d7 : and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000401c0f : and eax, 0x6092c0 ; pop rbp ; ret
0x0000000000401c33 : and eax, 0x6092c8 ; pop rbp ; ret
0x0000000000403aa9 : call 0xffffffffe902c3f9
0x0000000000403aa8 : call 0xffffffffe902c3fa
0x0000000000406f99 : call qword ptr [r12 + rbx*8]
0x0000000000408203 : call qword ptr [rsi]
0x0000000000406f9a : call qword ptr [rsp + rbx*8]
0x00000000004016fd : call rax
0x00000000004037fc : call rbx
0x0000000000408183 : call rcx
0x00000000004083e3 : call rdi
0x0000000000407e3b : call rsp
0x0000000000406cca : clc ; add rsp, 0x130 ; pop rbp ; ret
0x00000000004051ef : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404701 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004020d8 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000402162 : clc ; add rsp, 0x90 ; pop rbp ; ret
0x000000000040169f : clc ; jne 0x4016a8 ; pop rbp ; ret
0x0000000000402545 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004062bf : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004062c2 : clc ; pop rbp ; ret
0x0000000000405c58 : cld ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000406e16 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004064ab : cld ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004063ea : cld ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000405bf3 : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x00000000004062bc : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000406e13 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406db6 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004063e7 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000405c5f : cld ; pop rbp ; ret
0x000000000040500a : cmp al, 0x25 ; mov ch, 0x7b ; add al, bpl ; wait ; ret
0x000000000040165d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401670 ; pop rbp ; ret
0x0000000000408c48 : cwde ; loopne 0x408c4d ; jmp rax
0x00000000004047fc : cwde ; mov rcx, qword ptr [rax*8 + 0x407908] ; jmp rcx
0x0000000000402750 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; add byte ptr [rax + rax*2], dh ; jmp rcx
0x0000000000406a04 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000403202 : dec dword ptr [rcx - 0x77] ; ret 0x294d
0x0000000000403590 : enter 0x4b05, 0x34 ; fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x0000000000401c34 : enter 0x6092, 0 ; pop rbp ; ret
0x0000000000403594 : fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x00000000004016d5 : fidivr word ptr [rbx + 0x20] ; add byte ptr [rcx], al ; ret
0x0000000000406f9c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000401829 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405055 : hlt ; jnp 0x4050a1 ; add byte ptr [rcx + 0x4fe8f845], cl ; ret
0x0000000000401670 : hlt ; pop rbp ; mov edi, 0x609250 ; jmp rax
0x0000000000405d1c : in al, dx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040381b : inc dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000404e25 : int 0x80
0x0000000000401663 : ja 0x40166a ; pop rbp ; ret
0x000000000040166f : je 0x40166d ; pop rbp ; mov edi, 0x609250 ; jmp rax
0x00000000004013fb : jmp 0x401297
0x00000000004052f8 : jmp 0xffffffffc2c99b02
0x00000000004085eb : jmp qword ptr [rax]
0x0000000000402c96 : jmp qword ptr [rcx]
0x00000000004084cb : jmp qword ptr [rdx]
0x0000000000401677 : jmp rax
0x0000000000402759 : jmp rcx
0x00000000004016b7 : jmp rdx
0x00000000004016a0 : jne 0x4016a7 ; pop rbp ; ret
0x00000000004016d6 : jnp 0x4016fd ; add byte ptr [rcx], al ; ret
0x000000000040500d : jnp 0x405054 ; add al, ch ; wait ; ret
0x000000000040502c : jnp 0x405076 ; add byte ptr [rcx + 0x79e8fc45], cl ; ret
0x0000000000405056 : jnp 0x4050a0 ; add byte ptr [rcx + 0x4fe8f845], cl ; ret
0x0000000000402695 : jo 0x4026f6 ; ret
0x0000000000403cbf : jo 0x403d25 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000404364 : jo 0x4043c5 ; ret
0x000000000040449e : jo 0x4044ff ; ret
0x000000000040699a : lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x000000000040502b : loopne 0x4050b1 ; add byte ptr [rcx + 0x79e8fc45], cl ; ret
0x0000000000405bf7 : loopne 0x405bfe ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000408c49 : loopne 0x408c4c ; jmp rax
0x0000000000407eb4 : mov ah, 5 ; add byte ptr [rax], al ; pushfq ; test al, -1 ; call rsp
0x000000000040423b : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004040c8 : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000405dd6 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401c31 : mov byte ptr [0x6092c8], al ; pop rbp ; ret
0x00000000004016d3 : mov byte ptr [rip + 0x207bde], 1 ; ret
0x000000000040500c : mov ch, 0x7b ; add al, bpl ; wait ; ret
0x0000000000405ddc : mov dh, -0x40 ; pop rbp ; ret
0x0000000000401c0d : mov dword ptr [0x6092c0], edi ; pop rbp ; ret
0x0000000000402546 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000402508 : mov dword ptr [rax], eax ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004023c4 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000402507 : mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000401909 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401827 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004062bd : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004025be : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402378 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040510b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401e83 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402375 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000401ddf : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405d1a : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405403 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040232d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004023be : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040250a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040268f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000404239 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000406e14 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004064a9 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004063e8 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000405c5d : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004051ed : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004046ff : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004020d6 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004062c0 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004016fb : mov ebp, esp ; call rax
0x0000000000401661 : mov ebp, esp ; ja 0x40166c ; pop rbp ; ret
0x0000000000404e3d : mov ecx, 0x5b2a830a ; ret
0x0000000000402752 : mov ecx, dword ptr [rax*8 + 0x407400] ; jmp rcx
0x0000000000402a76 : mov ecx, dword ptr [rax*8 + 0x407448] ; jmp rcx
0x00000000004047fe : mov ecx, dword ptr [rax*8 + 0x407908] ; jmp rcx
0x000000000040598e : mov ecx, dword ptr [rax*8 + 0x407c80] ; jmp rcx
0x000000000040590e : mov ecx, dword ptr [rax*8 + 0x407ce0] ; jmp rcx
0x00000000004023c1 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004016f5 : mov edi, 0x608e20 ; mov rbp, rsp ; call rax
0x0000000000401672 : mov edi, 0x609250 ; jmp rax
0x00000000004016b2 : mov edi, 0x609250 ; jmp rdx
0x0000000000406f97 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000406f96 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x00000000004016b0 : mov esi, eax ; mov edi, 0x609250 ; jmp rdx
0x0000000000407ef4 : mov esp, 0x4c000006 ; ret
0x00000000004016f7 : mov fs, word ptr [rax] ; mov rbp, rsp ; call rax
0x0000000000401c0c : mov qword ptr [0x6092c0], rdi ; pop rbp ; ret
0x00000000004025bd : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040423a : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040510a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401e82 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402374 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000401dde : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405402 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040232c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040268e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000404238 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004051ec : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004046fe : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004020d5 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004016fa : mov rbp, rsp ; call rax
0x0000000000401660 : mov rbp, rsp ; ja 0x40166d ; pop rbp ; ret
0x0000000000402751 : mov rcx, qword ptr [rax*8 + 0x407400] ; jmp rcx
0x0000000000402a75 : mov rcx, qword ptr [rax*8 + 0x407448] ; jmp rcx
0x00000000004047fd : mov rcx, qword ptr [rax*8 + 0x407908] ; jmp rcx
0x000000000040598d : mov rcx, qword ptr [rax*8 + 0x407c80] ; jmp rcx
0x000000000040590d : mov rcx, qword ptr [rax*8 + 0x407ce0] ; jmp rcx
0x00000000004016af : mov rsi, rax ; mov edi, 0x609250 ; jmp rdx
0x0000000000405cf0 : movabs dword ptr [0x941c90941f0213f], eax ; ret 0x3145
0x0000000000405ddb : movzx eax, al ; pop rbp ; ret
0x0000000000406fb8 : nop dword ptr [rax + rax] ; ret
0x0000000000402ddd : or al, 0x18 ; ret 0x6451
0x0000000000408c44 : or al, 0xb ; add byte ptr [rax], al ; cwde ; loopne 0x408c51 ; jmp rax
0x0000000000402753 : or al, 0xffffffffffffffc5 ; add byte ptr [rax + rax*2], dh ; jmp rcx
0x0000000000404421 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406fac : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000403cc1 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406fae : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000403cc3 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406fb0 : pop r14 ; pop r15 ; ret
0x0000000000403a73 : pop r14 ; pop rbp ; ret
0x0000000000403cc5 : pop r15 ; pop rbp ; ret
0x0000000000406fb2 : pop r15 ; ret
0x00000000004016d2 : pop rbp ; mov byte ptr [rip + 0x207bde], 1 ; ret
0x0000000000401671 : pop rbp ; mov edi, 0x609250 ; jmp rax
0x00000000004016ae : pop rbp ; mov rsi, rax ; mov edi, 0x609250 ; jmp rdx
0x0000000000406fab : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000406faf : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401665 : pop rbp ; ret
0x0000000000403cc0 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000404cbd : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403a72 : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000404e41 : pop rbx ; ret
0x0000000000403cc6 : pop rdi ; pop rbp ; ret
0x0000000000406fb3 : pop rdi ; ret
0x0000000000403cc4 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000406fb1 : pop rsi ; pop r15 ; ret
0x0000000000403a74 : pop rsi ; pop rbp ; ret
0x0000000000406fad : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000403cc2 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004041be : push rax ; pop rbp ; ret
0x00000000004016f4 : push rbp ; mov edi, 0x608e20 ; mov rbp, rsp ; call rax
0x0000000000407eb8 : pushfq ; test al, -1 ; call rsp
0x0000000000401281 : ret
0x0000000000406bd2 : ret 0
0x0000000000406be6 : ret 0x148
0x0000000000403e5e : ret 0x1b2
0x0000000000401602 : ret 0x207b
0x0000000000401402 : ret 0x207c
0x0000000000401e65 : ret 0x2948
0x00000000004031e9 : ret 0x294c
0x0000000000403205 : ret 0x294d
0x0000000000405cf9 : ret 0x3145
0x0000000000402444 : ret 0x5589
0x0000000000402ddf : ret 0x6451
0x0000000000405b19 : ret 0x8141
0x00000000004052fc : ret 0x8148
0x00000000004060ff : ret 0x840
0x0000000000403483 : ret 0x8840
0x00000000004047b9 : ret 0x8844
0x0000000000405310 : ret 0x8948
0x0000000000403208 : ret 0x8949
0x000000000040339c : ret 0x89a5
0x0000000000401b03 : ret 0x8b48
0x0000000000406bd9 : ret 0xb849
0x0000000000405b59 : ret 0xc131
0x0000000000401695 : ret 0xc148
0x0000000000406940 : ret 0xc2f6
0x0000000000402c04 : ret 0xca21
0x0000000000405c92 : ret 0xca29
0x00000000004046f3 : ret 0xd284
0x0000000000405bd5 : ret 0xd709
0x000000000040321d : ret 0xde8
0x0000000000403aac : ret 0xee8
0x0000000000403498 : ret 0xf180
0x00000000004060e3 : ret 0xf280
0x0000000000402c7e : ret 0xf281
0x0000000000407ee9 : ret 0xffff
0x0000000000403e64 : ret 1
0x00000000004069a0 : ret 2
0x0000000000402506 : rol byte ptr [rcx + rcx*4], 1 ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000404e20 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000402690 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x4026fb ; ret
0x000000000040169c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4016ab ; pop rbp ; ret
0x0000000000404e21 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x00000000004031dd : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x00000000004031e6 : ror byte ptr [rax - 0x77], 1 ; ret 0x294c
0x0000000000402691 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x4026fa ; ret
0x000000000040169e : sar eax, 1 ; jne 0x4016a9 ; pop rbp ; ret
0x000000000040169d : sar rax, 1 ; jne 0x4016aa ; pop rbp ; ret
0x0000000000405dd8 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000404e3f : sub dword ptr [rdx], 0x5b ; ret
0x0000000000406fed : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000406fec : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000407eb9 : test al, -1 ; call rsp
0x0000000000406fba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000401723 : test byte ptr [rdx], cl ; add byte ptr [rax], al ; add al, ch ; ret
0x0000000000405011 : wait ; ret
0x0000000000403482 : xchg eax, ebp ; ret 0x8840
0x00000000004046f2 : xchg eax, esp ; ret 0xd284
0x0000000000406cce : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004041b7 : xor eax, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x0000000000402505 : xor eax, edx ; mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
