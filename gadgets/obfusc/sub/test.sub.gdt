0x000000000040ba60 : adc ah, -1 ; jmp rdx
0x000000000040223b : adc al, 0x25 ; cwde ; ret 0x60
0x0000000000401f73 : adc al, 0x25 ; nop ; ret 0x60
0x0000000000402137 : adc al, 0x25 ; pushfq ; ret 0x60
0x0000000000401e07 : adc byte ptr [rax + 0x63], cl ; add al, 0x25 ; pushfq ; ret 0x60
0x000000000040ab41 : adc byte ptr [rax], al ; add al, bl ; fdivr st(7) ; jmp qword ptr [rax]
0x000000000040362f : adc byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000403600 : adc eax, 0x898bb00b ; add al, 0x25 ; pushfq ; ret 0x60
0x00000000004063c9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040b61b : add ah, cl ; or dword ptr [rax], eax ; add al, dh ; ret
0x0000000000401ba8 : add al, 0x25 ; clc ; shl dword ptr [rax], 0x5d ; ret
0x00000000004021d2 : add al, 0x25 ; cwde ; ret 0x60
0x0000000000402152 : add al, 0x25 ; nop ; ret 0x60
0x0000000000401ae0 : add al, 0x25 ; pushfq ; ret 0x60
0x000000000040b1ff : add al, ah ; mov cl, -1 ; jmp rdx
0x000000000040ab43 : add al, bl ; fdivr st(7) ; jmp qword ptr [rax]
0x000000000040aab3 : add al, bl ; sar edi, 1 ; jmp rax
0x0000000000404f19 : add al, ch ; push rcx ; ret
0x000000000040aa33 : add al, ch ; ret 0xffff
0x0000000000401cc8 : add al, ch ; ret 4
0x000000000040b61f : add al, dh ; ret
0x000000000040b23f : add al, dl ; mov ah, -1 ; jmp qword ptr [rdx]
0x0000000000400027 : add al, dl ; ret
0x0000000000401ade : add bh, al ; add al, 0x25 ; pushfq ; ret 0x60
0x000000000040924f : add bl, dh ; ret
0x000000000040240b : add byte ptr [rax + 0x250c8b00], dh ; pushfq ; ret 0x60
0x000000000040357e : add byte ptr [rax + 0x63], cl ; adc al, 0x25 ; pushfq ; ret 0x60
0x0000000000401c09 : add byte ptr [rax + 0x63], cl ; add al, 0x25 ; pushfq ; ret 0x60
0x0000000000402426 : add byte ptr [rax + 0x63], cl ; or al, 0x25 ; pushfq ; ret 0x60
0x0000000000401dd5 : add byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x75], 1 ; xor al, 0x25 ; nop ; ret 0x60
0x000000000040b47b : add byte ptr [rax + rcx], ch ; add byte ptr [rax], al ; mov dil, -1 ; jmp qword ptr [rdx]
0x000000000040242e : add byte ptr [rax - 0x75], cl ; adc al, 0x25 ; nop ; ret 0x60
0x0000000000401b52 : add byte ptr [rax - 0x75], cl ; or al, 0x25 ; nop ; ret 0x60
0x0000000000401d3f : add byte ptr [rax - 0x75], cl ; xor al, 0x25 ; nop ; ret 0x60
0x0000000000406d6d : add byte ptr [rax - 0x77], cl ; jge 0x406d70 ; pop rbp ; ret
0x000000000040163b : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rsp + rsi*8 + 0x5d], -0x41 ; pop rax ; ret 0x60
0x000000000040ba5e : add byte ptr [rax], al ; adc ah, -1 ; jmp rdx
0x000000000040b619 : add byte ptr [rax], al ; add ah, cl ; or dword ptr [rax], eax ; add al, dh ; ret
0x0000000000404f17 : add byte ptr [rax], al ; add al, ch ; push rcx ; ret
0x0000000000401cc6 : add byte ptr [rax], al ; add al, ch ; ret 4
0x0000000000400025 : add byte ptr [rax], al ; add al, dl ; ret
0x000000000040924d : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040357c : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; adc al, 0x25 ; pushfq ; ret 0x60
0x0000000000401c5d : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; add al, 0x25 ; pushfq ; ret 0x60
0x0000000000406d6b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jge 0x406d72 ; pop rbp ; ret
0x0000000000400023 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dl ; ret
0x000000000040924b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000400021 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dl ; ret
0x0000000000400630 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000400632 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000004079f9 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000406d6a : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000040474b : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040924c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400634 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000040220f : add byte ptr [rax], al ; add byte ptr [rcx + rax], ah ; movzx eax, al ; pop rbp ; ret
0x0000000000407849 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xfa81
0x0000000000405a6e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000403fc9 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x9588
0x000000000040750d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x5588
0x0000000000406cde : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000402e4b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x00000000004086ac : add byte ptr [rax], al ; add cl, ch ; ret 2
0x00000000004021e1 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004060a0 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401233 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000402210 : add byte ptr [rax], al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040ae72 : add byte ptr [rax], al ; and al, 2 ; add byte ptr [rax], al ; mov byte ptr [rbp - 1], dh ; call qword ptr [rsi]
0x000000000040bb96 : add byte ptr [rax], al ; call 0x1140bb78
0x000000000040aa32 : add byte ptr [rax], al ; call 0xffffffffe140aa00
0x000000000040b8ba : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; or al, 0 ; add byte ptr [rax], dh ; sar edi, 1 ; jmp rax
0x0000000000401449 : add byte ptr [rax], al ; jmp 0x401249
0x000000000040ab72 : add byte ptr [rax], al ; jrcxz 0x40ab7b ; jmp rax
0x000000000040ae76 : add byte ptr [rax], al ; mov byte ptr [rbp - 1], dh ; call qword ptr [rsi]
0x000000000040ae96 : add byte ptr [rax], al ; mov byte ptr [rdx - 1], bh ; call rdi
0x000000000040b47e : add byte ptr [rax], al ; mov dil, -1 ; jmp qword ptr [rdx]
0x00000000004079fb : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000406d6c : add byte ptr [rax], al ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000404962 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040474d : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040ba5a : add byte ptr [rax], al ; or al, 0xe ; add byte ptr [rax], al ; adc ah, -1 ; jmp rdx
0x000000000040abb2 : add byte ptr [rax], al ; out -1, al ; jmp rax
0x000000000040ab82 : add byte ptr [rax], al ; pop rax ; in al, -1 ; jmp qword ptr [rax]
0x000000000040aa42 : add byte ptr [rax], al ; pop rax ; ret
0x0000000000403631 : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000406060 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040924e : add byte ptr [rax], al ; ret
0x0000000000400636 : add byte ptr [rax], al ; ret 0
0x000000000040bb92 : add byte ptr [rax], al ; sldt word ptr [rax] ; call 0x1140bb7c
0x000000000040b47a : add byte ptr [rax], al ; sub al, 8 ; add byte ptr [rax], al ; mov dil, -1 ; jmp qword ptr [rdx]
0x000000000040aa3b : add byte ptr [rax], ch ; ret
0x000000000040b35f : add byte ptr [rax], dh ; mov dh, -1 ; jmp qword ptr [rax]
0x000000000040b8bf : add byte ptr [rax], dh ; sar edi, 1 ; jmp rax
0x0000000000406061 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x00000000004021d0 : add byte ptr [rbx], bh ; add al, 0x25 ; cwde ; ret 0x60
0x0000000000401af0 : add byte ptr [rbx], bh ; or al, 0x25 ; cwde ; ret 0x60
0x00000000004034f1 : add byte ptr [rcx + 0x5eca6bea], al ; or dword ptr [rax + 0x63], ecx ; ret 0x8b48
0x0000000000402211 : add byte ptr [rcx + rax], ah ; movzx eax, al ; pop rbp ; ret
0x00000000004090ec : add byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x00000000004016a8 : add byte ptr [rcx], al ; ret
0x000000000040784b : add byte ptr [rcx], al ; ret 0xfa81
0x000000000040ab80 : add byte ptr [rcx], dl ; add byte ptr [rax], al ; pop rax ; in al, -1 ; jmp qword ptr [rax]
0x00000000004086a8 : add byte ptr [rdi], cl ; lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000405a70 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000403fcb : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x9588
0x000000000040750f : add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x5588
0x0000000000406ce0 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000402e4d : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000040ae73 : add byte ptr [rdx + rax], ah ; add byte ptr [rax], al ; mov byte ptr [rbp - 1], dh ; call qword ptr [rsi]
0x000000000040ba5b : add byte ptr [rsi + rcx], cl ; add byte ptr [rax], al ; adc ah, -1 ; jmp rdx
0x000000000040b8bb : add byte ptr [rsp + rcx], ch ; add byte ptr [rax], dh ; sar edi, 1 ; jmp rax
0x0000000000402449 : add byte ptr es:[rax], al ; add byte ptr [rax + 0x63], cl ; add al, 0x25 ; pushfq ; ret 0x60
0x0000000000402e4a : add byte ptr gs:[rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000404f14 : add cl, ch ; add eax, 0xe8000000 ; push rcx ; ret
0x00000000004086ae : add cl, ch ; ret 2
0x0000000000401d3c : add dl, 0x60 ; add byte ptr [rax - 0x75], cl ; xor al, 0x25 ; nop ; ret 0x60
0x00000000004025ed : add dword ptr [rax + 0x6348ff45], ecx ; or al, 0x25 ; pushfq ; ret 0x60
0x0000000000401df4 : add dword ptr [rax + 0xf], eax ; mov dh, -0x39 ; pop rbp ; ret
0x0000000000407dd9 : add dword ptr [rax - 0x77], ecx ; ret 0x8148
0x0000000000401c07 : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; add al, 0x25 ; pushfq ; ret 0x60
0x000000000040638f : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040605f : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000401ffa : add dword ptr [rax], ecx ; ret 0x840
0x0000000000401f3a : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401d11 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402213 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004016a4 : add eax, 0x20abde ; add ebx, esi ; ret
0x0000000000404f16 : add eax, 0xe8000000 ; push rcx ; ret
0x00000000004086ab : add eax, 0xe9000000 ; ret 2
0x000000000040166b : add eax, edx ; sar rax, 1 ; jne 0x40167c ; pop rbp ; ret
0x00000000004016a9 : add ebx, esi ; ret
0x000000000040195b : add esp, 0x10 ; pop rbp ; ret
0x00000000004089dc : add esp, 0x130 ; pop rbp ; ret
0x0000000000401d16 : add esp, 0x20 ; pop rbp ; ret
0x000000000040362d : add esp, 0x210 ; pop rbp ; ret
0x0000000000401a3d : add esp, 0x30 ; pop rbp ; ret
0x00000000004067ac : add esp, 0x50 ; pop rbp ; ret
0x0000000000404c83 : add esp, 0x70 ; pop rbp ; ret
0x00000000004066ba : add esp, 0x90 ; pop rbp ; ret
0x0000000000404341 : add esp, 0xc0 ; pop rbp ; ret
0x000000000040406c : add esp, 0xe0 ; pop rbp ; ret
0x0000000000401236 : add esp, 8 ; ret
0x000000000040166a : add rax, rdx ; sar rax, 1 ; jne 0x40167d ; pop rbp ; ret
0x000000000040195a : add rsp, 0x10 ; pop rbp ; ret
0x00000000004089db : add rsp, 0x130 ; pop rbp ; ret
0x0000000000401d15 : add rsp, 0x20 ; pop rbp ; ret
0x000000000040362c : add rsp, 0x210 ; pop rbp ; ret
0x0000000000401a3c : add rsp, 0x30 ; pop rbp ; ret
0x00000000004067ab : add rsp, 0x50 ; pop rbp ; ret
0x0000000000404c82 : add rsp, 0x70 ; pop rbp ; ret
0x00000000004066b9 : add rsp, 0x90 ; pop rbp ; ret
0x0000000000404340 : add rsp, 0xc0 ; pop rbp ; ret
0x000000000040406b : add rsp, 0xe0 ; pop rbp ; ret
0x0000000000401235 : add rsp, 8 ; ret
0x0000000000407b4c : addps xmm1, xmm2 ; movaps xmm0, xmm1 ; pop rbp ; ret
0x0000000000407b4b : addsd xmm1, xmm2 ; movaps xmm0, xmm1 ; pop rbp ; ret
0x0000000000402212 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040ae74 : and al, 2 ; add byte ptr [rax], al ; mov byte ptr [rbp - 1], dh ; call qword ptr [rsi]
0x0000000000401df2 : and bh, 1 ; movzx eax, dil ; pop rbp ; ret
0x00000000004016a7 : and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000401df1 : and dil, 1 ; movzx eax, dil ; pop rbp ; ret
0x0000000000404477 : and eax, 0x48ffffce ; add esp, 0x10 ; pop rbp ; ret
0x0000000000401ba9 : and eax, 0x60c1f8 ; pop rbp ; ret
0x00000000004040ab : and eax, 0x60c29c ; pop rbp ; ret
0x000000000040435f : and eax, 0x60c2a0 ; pop rbp ; ret
0x0000000000404383 : and eax, 0x60c2a8 ; pop rbp ; ret
0x000000000040bb98 : call 0x1140bb76
0x0000000000407869 : call 0x29723684
0x0000000000407868 : call 0x29723685
0x000000000040aa34 : call 0xffffffffe140a9fe
0x0000000000406099 : call 0xffffffffe902e9e9
0x0000000000406098 : call 0xffffffffe902e9ea
0x0000000000409229 : call qword ptr [r12 + rbx*8]
0x000000000040af5b : call qword ptr [rax]
0x0000000000406c3d : call qword ptr [rbx]
0x000000000040b4c3 : call qword ptr [rdx]
0x000000000040ae7b : call qword ptr [rsi]
0x000000000040922a : call qword ptr [rsp + rbx*8]
0x00000000004016cd : call rax
0x0000000000405dec : call rbx
0x000000000040ae9b : call rdi
0x000000000040af3b : call rsi
0x00000000004089da : clc ; add rsp, 0x130 ; pop rbp ; ret
0x0000000000407ccf : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406cf1 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040166f : clc ; jne 0x401678 ; pop rbp ; ret
0x00000000004042a6 : clc ; mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000404b35 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040916f : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000406d0b : clc ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000406d4b : clc ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000406d2b : clc ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000406d71 : clc ; pop rbp ; ret
0x0000000000401baa : clc ; shl dword ptr [rax], 0x5d ; ret
0x00000000004079f8 : cld ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000408b26 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004081bb : cld ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004080fa : cld ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040775c : cld ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401ba6 : cld ; mov dword ptr [0x60c1f8], eax ; pop rbp ; ret
0x000000000040916c : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000408b23 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408ac6 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004080f7 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000407759 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004079ff : cld ; pop rbp ; ret
0x0000000000402059 : cmp al, 0x25 ; nop ; ret 0x60
0x0000000000401b4d : cmp al, 0x25 ; pushfq ; ret 0x60
0x00000000004021df : cmp eax, 0x48000000 ; add esp, 0x10 ; pop rbp ; ret
0x000000000040351c : cmp eax, 0x8bfffffe ; add al, 0x25 ; pushfq ; ret 0x60
0x000000000040162d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401640 ; pop rbp ; ret
0x0000000000401231 : cmp eax, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000401adb : cwde ; ret 0x60
0x00000000004025ef : dec dword ptr [r8 + 0x63] ; or al, 0x25 ; pushfq ; ret 0x60
0x00000000004024d6 : dec dword ptr [rax + 0x63] ; add al, 0x25 ; pushfq ; ret 0x60
0x0000000000401b4a : dec dword ptr [rax + 0x63] ; cmp al, 0x25 ; pushfq ; ret 0x60
0x00000000004025f0 : dec dword ptr [rax + 0x63] ; or al, 0x25 ; pushfq ; ret 0x60
0x0000000000408714 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x00000000004057f2 : dec dword ptr [rcx - 0x77] ; ret 0x294d
0x0000000000405b80 : enter 0x4b05, 0x34 ; fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x0000000000407b0f : enter 0x4d89, -0x14 ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000040ab45 : fdivr st(7) ; jmp qword ptr [rax]
0x0000000000405b84 : fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x00000000004016a5 : fisubr word ptr [rbx - 0xcfeffe0] ; ret
0x000000000040922c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000406c3b : fsubr st(0) ; call qword ptr [rbx]
0x0000000000401959 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401640 : hlt ; pop rbp ; mov edi, 0x60c258 ; jmp rax
0x000000000040262b : idiv bh ; dec dword ptr [rax + 0x63] ; add al, 0x25 ; pushfq ; ret 0x60
0x00000000004034f4 : imul ecx, edx, 0x5e ; or dword ptr [rax + 0x63], ecx ; ret 0x8b48
0x000000000040ab85 : in al, -1 ; jmp qword ptr [rax]
0x0000000000401e06 : in al, dx ; adc byte ptr [rax + 0x63], cl ; add al, 0x25 ; pushfq ; ret 0x60
0x0000000000407b12 : in al, dx ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000407b15 : in al, dx ; pop rbp ; ret
0x0000000000401db3 : in eax, -0x75 ; add al, 0x25 ; pushfq ; ret 0x60
0x0000000000403535 : in eax, -0x77 ; add al, 0x25 ; pushfq ; ret 0x60
0x000000000040aa1f : inc dword ptr [rax + 0x6800000b] ; ret 0xffff
0x000000000040ab3f : inc dword ptr [rax] ; adc byte ptr [rax], al ; add al, bl ; fdivr st(7) ; jmp qword ptr [rax]
0x0000000000405e0b : inc dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x000000000040aa2f : inc eax ; or eax, dword ptr [rax] ; add al, ch ; ret 0xffff
0x000000000040b8bc : insb byte ptr [rdi], dx ; or al, 0 ; add byte ptr [rax], dh ; sar edi, 1 ; jmp rax
0x0000000000401633 : ja 0x40163a ; pop rbp ; ret
0x000000000040163f : je 0x40163d ; pop rbp ; mov edi, 0x60c258 ; jmp rax
0x0000000000406d0a : jge 0x406d0b ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000406d2a : jge 0x406d2b ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000406d4a : jge 0x406d4b ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000406d70 : jge 0x406d6d ; pop rbp ; ret
0x000000000040144b : jmp 0x401247
0x0000000000404f15 : jmp 0x404f26
0x0000000000407dd8 : jmp 0xffffffffc2c9c5e2
0x000000000040a9c7 : jmp qword ptr [rax]
0x000000000040b5e3 : jmp qword ptr [rbx]
0x0000000000402392 : jmp qword ptr [rcx]
0x000000000040b243 : jmp qword ptr [rdx]
0x0000000000401647 : jmp rax
0x0000000000401bdb : jmp rcx
0x0000000000401687 : jmp rdx
0x0000000000401670 : jne 0x401677 ; pop rbp ; ret
0x000000000040ae79 : jne 0x40ae7c ; call qword ptr [rsi]
0x0000000000404c85 : jo 0x404ce6 ; ret
0x00000000004062af : jo 0x406315 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406954 : jo 0x4069b5 ; ret
0x0000000000406a8e : jo 0x406aef ; ret
0x0000000000406d2f : jo 0x406d90 ; ret
0x0000000000406d2e : jo 0x406d91 ; ret
0x000000000040ae99 : jp 0x40ae9c ; call rdi
0x000000000040ab75 : jrcxz 0x40ab78 ; jmp rax
0x000000000040ab74 : jrcxz 0x40ab79 ; jmp rax
0x0000000000402f08 : lahf ; ret 0xe280
0x00000000004086aa : lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000401c5c : lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; add al, 0x25 ; pushfq ; ret 0x60
0x00000000004022b0 : loope 0x4022a1 ; sbb al, -0x4f ; mov eax, 0x8945ce21 ; ret 0x8141
0x000000000040406e : loopne 0x404075 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040b241 : mov ah, -1 ; jmp qword ptr [rdx]
0x0000000000402f04 : mov ah, 0x39 ; ror dword ptr [rdi], -0x61 ; ret 0xe280
0x000000000040682b : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004066b8 : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x00000000004036aa : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000408c86 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040b481 : mov bh, -1 ; jmp qword ptr [rdx]
0x0000000000404381 : mov byte ptr [0x60c2a8], al ; pop rbp ; ret
0x00000000004042a7 : mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x000000000040ae78 : mov byte ptr [rbp - 1], dh ; call qword ptr [rsi]
0x000000000040ae98 : mov byte ptr [rdx - 1], bh ; call rdi
0x00000000004016a3 : mov byte ptr [rip + 0x20abde], 1 ; ret
0x000000000040b201 : mov cl, -1 ; jmp rdx
0x0000000000407b0e : mov dh, -0x38 ; mov dword ptr [rbp - 0x14], ecx ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000401df7 : mov dh, -0x39 ; pop rbp ; ret
0x0000000000401f3c : mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401d13 : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402215 : mov dh, -0x40 ; pop rbp ; ret
0x000000000040b361 : mov dh, -1 ; jmp qword ptr [rax]
0x000000000040b480 : mov dil, -1 ; jmp qword ptr [rdx]
0x0000000000401ba7 : mov dword ptr [0x60c1f8], eax ; pop rbp ; ret
0x00000000004040a9 : mov dword ptr [0x60c29c], edi ; pop rbp ; ret
0x000000000040435d : mov dword ptr [0x60c2a0], edi ; pop rbp ; ret
0x0000000000404b36 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000404af8 : mov dword ptr [rax], eax ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004049b4 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000404af7 : mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000407b10 : mov dword ptr [rbp - 0x14], ecx ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000407aaa : mov dword ptr [rbp - 0x24], eax ; mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x0000000000401a39 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401957 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040916d : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000406d6f : mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x0000000000404bae : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004022b4 : mov eax, 0x8945ce21 ; ret 0x8141
0x0000000000404968 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000407beb : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004045d3 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404965 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000406d91 : mov eax, dword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040452f : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000407b13 : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000407ee3 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404262 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004049ae : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000404750 : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000407aad : mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x0000000000404afa : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000404c7f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000406829 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000408b24 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004081b9 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004080f8 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040775a : mov eax, dword ptr [rbp - 4] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004079fd : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000407ccd : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406cef : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000409170 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000406d0d : mov eax, dword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000406d4d : mov eax, dword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000406d2d : mov eax, dword ptr [rdi + 0x70] ; pop rbp ; ret
0x00000000004016cb : mov ebp, esp ; call rax
0x0000000000401631 : mov ebp, esp ; ja 0x40163c ; pop rbp ; ret
0x0000000000401bd4 : mov ecx, dword ptr [rax*8 + 0x4092b8] ; jmp rcx
0x0000000000403704 : mov ecx, dword ptr [rax*8 + 0x4092e0] ; jmp rcx
0x0000000000404d42 : mov ecx, dword ptr [rax*8 + 0x40a2e0] ; jmp rcx
0x0000000000405066 : mov ecx, dword ptr [rax*8 + 0x40a328] ; jmp rcx
0x00000000004049b1 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004016c5 : mov edi, 0x60be20 ; mov rbp, rsp ; call rax
0x0000000000401642 : mov edi, 0x60c258 ; jmp rax
0x0000000000401682 : mov edi, 0x60c258 ; jmp rdx
0x0000000000406d09 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000406d49 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000406d29 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000409227 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000409226 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000406d95 : mov edx, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040786b : mov esi, 0x1f02931 ; ret 0x5589
0x0000000000401680 : mov esi, eax ; mov edi, 0x60c258 ; jmp rdx
0x000000000040435c : mov qword ptr [0x60c2a0], rdi ; pop rbp ; ret
0x0000000000406d6e : mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000404bad : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040682a : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000407bea : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004045d2 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404964 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000406d90 : mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040452e : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000407ee2 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404261 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040474f : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000404c7e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000406828 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000407ccc : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406cee : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406d0c : mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000406d4c : mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000406d2c : mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x00000000004016ca : mov rbp, rsp ; call rax
0x0000000000401630 : mov rbp, rsp ; ja 0x40163d ; pop rbp ; ret
0x0000000000401bd3 : mov rcx, qword ptr [rax*8 + 0x4092b8] ; jmp rcx
0x0000000000403703 : mov rcx, qword ptr [rax*8 + 0x4092e0] ; jmp rcx
0x0000000000404d41 : mov rcx, qword ptr [rax*8 + 0x40a2e0] ; jmp rcx
0x0000000000405065 : mov rcx, qword ptr [rax*8 + 0x40a328] ; jmp rcx
0x0000000000406d08 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000406d48 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000406d28 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000406d94 : mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040167f : mov rsi, rax ; mov edi, 0x60c258 ; jmp rdx
0x0000000000407b4f : movaps xmm0, xmm1 ; pop rbp ; ret
0x0000000000401f3b : movzx eax, al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401d12 : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402214 : movzx eax, al ; pop rbp ; ret
0x0000000000401df6 : movzx eax, bh ; pop rbp ; ret
0x00000000004042aa : movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000401df5 : movzx eax, dil ; pop rbp ; ret
0x0000000000401ad1 : nop ; ret 0x60
0x0000000000409248 : nop dword ptr [rax + rax] ; ret
0x000000000040b8bd : or al, 0 ; add byte ptr [rax], dh ; sar edi, 1 ; jmp rax
0x00000000004053cd : or al, 0x18 ; ret 0x6451
0x0000000000401ad9 : or al, 0x25 ; cwde ; ret 0x60
0x0000000000401b55 : or al, 0x25 ; nop ; ret 0x60
0x0000000000401aeb : or al, 0x25 ; pushfq ; ret 0x60
0x000000000040ba5c : or al, 0xe ; add byte ptr [rax], al ; adc ah, -1 ; jmp rdx
0x0000000000406e32 : or al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040416b : or byte ptr [rcx + 0x2df9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x00000000004034f7 : or dword ptr [rax + 0x63], ecx ; ret 0x8b48
0x000000000040b61d : or dword ptr [rax], eax ; add al, dh ; ret
0x000000000040aa31 : or eax, dword ptr [rax] ; add al, ch ; ret 0xffff
0x0000000000406a11 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040aa39 : or eax, dword ptr [rax] ; add byte ptr [rax], ch ; ret
0x0000000000403601 : or esi, dword ptr [rax + 0x2504898b] ; pushfq ; ret 0x60
0x000000000040abc5 : out -1, al ; jmp qword ptr [rax]
0x000000000040abb5 : out -1, al ; jmp rax
0x0000000000401df3 : out 1, eax ; movzx eax, dil ; pop rbp ; ret
0x000000000040923c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004062b1 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040923e : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004062b3 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000409240 : pop r14 ; pop r15 ; ret
0x0000000000406063 : pop r14 ; pop rbp ; ret
0x00000000004062b5 : pop r15 ; pop rbp ; ret
0x0000000000409242 : pop r15 ; ret
0x000000000040ab84 : pop rax ; in al, -1 ; jmp qword ptr [rax]
0x000000000040aa44 : pop rax ; ret
0x0000000000401628 : pop rax ; ret 0x60
0x00000000004016a2 : pop rbp ; mov byte ptr [rip + 0x20abde], 1 ; ret
0x0000000000401641 : pop rbp ; mov edi, 0x60c258 ; jmp rax
0x000000000040167e : pop rbp ; mov rsi, rax ; mov edi, 0x60c258 ; jmp rdx
0x000000000040923b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040923f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401635 : pop rbp ; ret
0x00000000004062b0 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406062 : pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004062b6 : pop rdi ; pop rbp ; ret
0x0000000000409243 : pop rdi ; ret
0x0000000000401621 : pop rdi ; ret 0x60
0x00000000004034f6 : pop rsi ; or dword ptr [rax + 0x63], ecx ; ret 0x8b48
0x00000000004062b4 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000409241 : pop rsi ; pop r15 ; ret
0x0000000000406064 : pop rsi ; pop rbp ; ret
0x000000000040923d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004062b2 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040383f : push -0x74000001 ; add al, 0x25 ; pushfq ; ret 0x60
0x0000000000406d0e : push r8 ; pop rbp ; ret
0x00000000004067ae : push rax ; pop rbp ; ret
0x0000000000406d96 : push rbp ; clc ; pop rbp ; ret
0x00000000004016c4 : push rbp ; mov edi, 0x60be20 ; mov rbp, rsp ; call rax
0x0000000000404f1b : push rcx ; ret
0x0000000000401ae2 : pushfq ; ret 0x60
0x0000000000400029 : ret
0x0000000000400638 : ret 0
0x00000000004088f6 : ret 0x148
0x0000000000407664 : ret 0x1a46
0x00000000004073a6 : ret 0x1a8
0x000000000040644e : ret 0x1b2
0x0000000000401452 : ret 0x20ac
0x0000000000401242 : ret 0x20ad
0x00000000004045b5 : ret 0x2948
0x00000000004057d9 : ret 0x294c
0x00000000004057f5 : ret 0x294d
0x0000000000400296 : ret 0x32d
0x00000000004073a3 : ret 0x458a
0x0000000000407512 : ret 0x5588
0x0000000000404a34 : ret 0x5589
0x0000000000400869 : ret 0x60
0x00000000004053cf : ret 0x6451
0x000000000040419f : ret 0x6aa1
0x00000000004022b9 : ret 0x8141
0x0000000000407ddc : ret 0x8148
0x0000000000401ffc : ret 0x840
0x0000000000407390 : ret 0x840f
0x0000000000402f0f : ret 0x8589
0x0000000000405a73 : ret 0x8840
0x0000000000407df0 : ret 0x8948
0x00000000004057f8 : ret 0x8949
0x000000000040598c : ret 0x89a5
0x00000000004036e2 : ret 0x89b9
0x00000000004034fa : ret 0x8b48
0x0000000000403fce : ret 0x9588
0x00000000004079b5 : ret 0xaa60
0x000000000040580d : ret 0xade8
0x00000000004088e9 : ret 0xb849
0x0000000000401665 : ret 0xc148
0x0000000000406e2e : ret 0xc189
0x0000000000408650 : ret 0xc2f6
0x0000000000403a00 : ret 0xca21
0x0000000000402045 : ret 0xca29
0x00000000004034e7 : ret 0xca6b
0x0000000000406ce3 : ret 0xd284
0x0000000000401c54 : ret 0xe280
0x0000000000406fd3 : ret 0xea81
0x000000000040609c : ret 0xee8
0x0000000000405a88 : ret 0xf180
0x0000000000401c47 : ret 0xf280
0x000000000040526e : ret 0xf281
0x000000000040784d : ret 0xfa81
0x000000000040aa25 : ret 0xffff
0x0000000000406454 : ret 1
0x00000000004034ed : ret 2
0x0000000000401cca : ret 4
0x0000000000402e70 : rol byte ptr [rcx + rbp - 0x3f], -0x77 ; or al, 0x25 ; pushfq ; ret 0x60
0x0000000000404af6 : rol byte ptr [rcx + rcx*4], 1 ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000404c80 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x404ceb ; ret
0x000000000040166c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40167b ; pop rbp ; ret
0x0000000000401dd8 : ror byte ptr [rax - 0x75], 1 ; xor al, 0x25 ; nop ; ret 0x60
0x00000000004057cd : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x00000000004057d6 : ror byte ptr [rax - 0x77], 1 ; ret 0x294c
0x0000000000404c81 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x404cea ; ret
0x000000000040362b : ror byte ptr [rax - 0x7f], -0x3c ; adc byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040406a : ror byte ptr [rax - 0x7f], -0x3c ; loopne 0x404079 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040aa30 : ror byte ptr [rbx], 0 ; add al, ch ; ret 0xffff
0x000000000040aab0 : ror byte ptr [rip - 0x2e280000], -1 ; jmp rax
0x0000000000402d14 : ror dword ptr [rax - 0x75], 1 ; cmp al, 0x25 ; nop ; ret 0x60
0x0000000000401ca0 : ror dword ptr [rax - 0x75], 1 ; xor al, 0x25 ; nop ; ret 0x60
0x0000000000402f06 : ror dword ptr [rdi], -0x61 ; ret 0xe280
0x0000000000407662 : sahf ; ret 0x1a46
0x000000000040163e : sal byte ptr [rsp + rsi*8 + 0x5d], -0x41 ; pop rax ; ret 0x60
0x0000000000407b4a : sal dl, 1 ; addps xmm1, xmm2 ; movaps xmm0, xmm1 ; pop rbp ; ret
0x000000000040aac5 : sar bh, cl ; jmp qword ptr [rax]
0x000000000040166e : sar eax, 1 ; jne 0x401679 ; pop rbp ; ret
0x000000000040aab5 : sar edi, 1 ; jmp rax
0x000000000040166d : sar rax, 1 ; jne 0x40167a ; pop rbp ; ret
0x00000000004022b2 : sbb al, -0x4f ; mov eax, 0x8945ce21 ; ret 0x8141
0x0000000000403533 : sbb dword ptr [0xffffffff9c250489], esp ; ret 0x60
0x0000000000403532 : sbb dword ptr gs:[0xffffffff9c250489], esp ; ret 0x60
0x0000000000403188 : sbb eax, 0x8b000001 ; add al, 0x25 ; pushfq ; ret 0x60
0x0000000000401bab : shl dword ptr [rax], 0x5d ; ret
0x000000000040bb95 : sldt word ptr [rax] ; call 0x1140bb79
0x000000000040bb94 : sldt word ptr [rax] ; call 0x1140bb7a
0x000000000040416d : stc ; sub eax, 0xf000000 ; xchg eax, esp ; ret 0xe280
0x0000000000408c88 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401e7d : stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; add al, 0x25 ; pushfq ; ret 0x60
0x00000000004016a6 : stosd dword ptr [rdi], eax ; and byte ptr [rax], al ; add ebx, esi ; ret
0x000000000040b47c : sub al, 8 ; add byte ptr [rax], al ; mov dil, -1 ; jmp qword ptr [rdx]
0x0000000000407b50 : sub cl, al ; pop rbp ; ret
0x000000000040416e : sub eax, 0xf000000 ; xchg eax, esp ; ret 0xe280
0x00000000004092a1 : sub esp, 8 ; add rsp, 8 ; ret
0x00000000004092a0 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040924a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000404f13 : test dword ptr [rax], eax ; jmp 0x404f28
0x000000000040351b : test dword ptr [rip - 0x74000002], edi ; add al, 0x25 ; pushfq ; ret 0x60
0x0000000000403187 : test dword ptr [rip - 0x74ffffff], ebx ; add al, 0x25 ; pushfq ; ret 0x60
0x0000000000405a72 : xchg eax, ebp ; ret 0x8840
0x0000000000403fcd : xchg eax, ebp ; ret 0x9588
0x0000000000407511 : xchg eax, esi ; ret 0x5588
0x0000000000406ce2 : xchg eax, esp ; ret 0xd284
0x0000000000402e4f : xchg eax, esp ; ret 0xe280
0x0000000000401acf : xor al, 0x25 ; nop ; ret 0x60
0x00000000004026c4 : xor al, 0x25 ; pushfq ; ret 0x60
0x00000000004089de : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004067a7 : xor eax, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x0000000000404af5 : xor eax, edx ; mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
