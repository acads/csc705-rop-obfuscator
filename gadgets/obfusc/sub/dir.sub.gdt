0x0000000000408681 : adc al, -0x7f ; ret 2
0x0000000000427385 : adc al, byte ptr [rax] ; add byte ptr [rax], bl ; jbe 0x42738f ; call qword ptr [rax]
0x0000000000427445 : adc al, byte ptr [rax] ; add byte ptr [rax], ch ; jp 0x42744f ; call qword ptr [rsi]
0x000000000041d211 : adc byte ptr [rbx + 0x42], 0 ; jmp rcx
0x000000000041bddb : adc byte ptr [rcx + 0x45], ah ; xor ecx, dword ptr [rsi - 0x76b7ecf2] ; ret 0x148
0x000000000040f46a : adc byte ptr [rcx - 0xa], al ; jmp qword ptr [rcx]
0x000000000040a6fb : adc byte ptr [rcx - 0xe], al ; jmp qword ptr [rcx]
0x000000000040beac : adc byte ptr [rcx], dl ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040ba4c : adc byte ptr [rsi], dl ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000412cc9 : adc dword ptr [rcx - 0xa], eax ; jmp qword ptr [rcx]
0x0000000000412cc8 : adc dword ptr cs:[rcx - 0xa], eax ; jmp qword ptr [rcx]
0x0000000000417979 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004274c5 : adc eax, dword ptr [rax] ; add byte ptr [rax], cl ; jl 0x4274cf ; call qword ptr [rcx]
0x000000000041bde1 : adc ecx, dword ptr [rax - 0x77] ; ret 0x148
0x00000000004264e9 : adc esi, edi ; jmp rdx
0x00000000004274c4 : adc r8d, dword ptr [rax] ; add byte ptr [rax], cl ; jl 0x4274d0 ; call qword ptr [rcx]
0x0000000000427443 : add ah, al ; adc al, byte ptr [rax] ; add byte ptr [rax], ch ; jp 0x427451 ; call qword ptr [rsi]
0x000000000041f8c7 : add ah, bh ; cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000041f8b7 : add ah, ch ; cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000427284 : add al, 0x11 ; add byte ptr [rax], al ; sub byte ptr [rcx - 2], ch ; call rsi
0x0000000000427384 : add al, 0x12 ; add byte ptr [rax], al ; sbb byte ptr [rsi - 2], dh ; call qword ptr [rax]
0x000000000041df0d : add al, 0x21 ; ret 0xd709
0x0000000000410b0a : add al, 0x48 ; add eax, ecx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000426284 : add al, 1 ; add byte ptr [rax], al ; js 0x42627b ; std ; jmp qword ptr [rsi]
0x00000000004200e7 : add al, ah ; ret
0x00000000004200cf : add al, al ; ret 0x40
0x0000000000427127 : add al, bl ; movsxd rdi, esi ; call rdi
0x000000000040432e : add al, byte ptr [rax] ; add byte ptr [rax], al ; call 0x4105e6
0x000000000040f6a6 : add al, byte ptr [rax] ; add byte ptr [rcx + 0x21ca31c2], cl ; ret 0xfa81
0x0000000000407f88 : add al, ch ; loop 0x407fbc ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040a960 : add al, ch ; or al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000407217 : add al, ch ; ret
0x000000000041f75f : add bl, dh ; ret
0x0000000000424fca : add byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rdi], bl ; ret 0x41
0x0000000000424fda : add byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rdx], bl ; ret
0x000000000040e3fb : add byte ptr [r8], al ; add byte ptr [rcx + 0x6dd966c7], al ; ret
0x000000000040ae3f : add byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000040a13b : add byte ptr [rax + 0x29], cl ; ret 0x8b48
0x00000000004135c8 : add byte ptr [rax + 1], cl ; ret 0x8948
0x000000000040fb7e : add byte ptr [rax + 1], cl ; ret 0x8b48
0x0000000000426287 : add byte ptr [rax - 0x16], bh ; std ; jmp qword ptr [rsi]
0x0000000000406e85 : add byte ptr [rax - 0x46], cl ; ret 0xfac9
0x0000000000414c10 : add byte ptr [rax - 0x47], cl ; js 0x414c7c ; xchg eax, ebx ; xchg eax, ecx ; salc ; call rsi
0x0000000000409a1f : add byte ptr [rax - 0x49f0fe1e], al ; ret 0x4589
0x000000000040e822 : add byte ptr [rax - 0x75], cl ; call 0x4903717a
0x000000000040f09b : add byte ptr [rax - 0x75], cl ; call 0x490379f3
0x00000000004151fc : add byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x0000000000410e1f : add byte ptr [rax - 0x75], cl ; fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x000000000040b127 : add byte ptr [rax - 0x75], cl ; push rbp ; call 0x1002ea7f
0x000000000041c71d : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000041031e : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; ret 0x2948
0x00000000004102bf : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; ret 0x8148
0x000000000041ede4 : add byte ptr [rax - 0x77], cl ; call 0xfffffffffe72b0db
0x000000000041ede3 : add byte ptr [rax - 0x77], cl ; call 0xfffffffffe72b0dc
0x000000000041863d : add byte ptr [rax - 0x77], cl ; jge 0x418640 ; pop rbp ; ret
0x00000000004063e3 : add byte ptr [rax - 0x77], cl ; loopne 0x4063d7 ; ret
0x00000000004200c7 : add byte ptr [rax], ah ; ret 0x40
0x00000000004274c2 : add byte ptr [rax], al ; adc r8d, dword ptr [rax] ; add byte ptr [rax], cl ; jl 0x4274d2 ; call qword ptr [rcx]
0x0000000000427282 : add byte ptr [rax], al ; add al, 0x11 ; add byte ptr [rax], al ; sub byte ptr [rcx - 2], ch ; call rsi
0x0000000000427382 : add byte ptr [rax], al ; add al, 0x12 ; add byte ptr [rax], al ; sbb byte ptr [rsi - 2], dh ; call qword ptr [rax]
0x0000000000426282 : add byte ptr [rax], al ; add al, 1 ; add byte ptr [rax], al ; js 0x42627d ; std ; jmp qword ptr [rsi]
0x00000000004200e5 : add byte ptr [rax], al ; add al, ah ; ret
0x00000000004200cd : add byte ptr [rax], al ; add al, al ; ret 0x40
0x0000000000407f86 : add byte ptr [rax], al ; add al, ch ; loop 0x407fbe ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040a95e : add byte ptr [rax], al ; add al, ch ; or al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041f75d : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040ae3d : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000040a139 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8b48
0x00000000004135c6 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8948
0x000000000040fb7c : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8b48
0x0000000000406e97 : add byte ptr [rax], al ; add byte ptr [rax - 0x46], cl ; ret 0xfac9
0x0000000000409a1d : add byte ptr [rax], al ; add byte ptr [rax - 0x49f0fe1e], al ; ret 0x4589
0x000000000040e820 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; call 0x4903717c
0x000000000040f099 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; call 0x490379f5
0x0000000000410e1d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x000000000041031c : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; ret 0x2948
0x00000000004102bd : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; ret 0x8148
0x000000000041863b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jge 0x418642 ; pop rbp ; ret
0x00000000004063e1 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; loopne 0x4063d9 ; ret
0x00000000004200c5 : add byte ptr [rax], al ; add byte ptr [rax], ah ; ret 0x40
0x00000000004200e3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ah ; ret
0x00000000004200cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, al ; ret 0x40
0x000000000041f75b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004200c3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; ret 0x40
0x00000000004008e0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400778 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x0000000000405729 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x00000000004008e2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040077a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x0000000000424fcb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], bl ; ret 0x41
0x000000000040572b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000424fdb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdx], bl ; ret
0x0000000000404eda : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004114bd : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004064e8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041d559 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000041863a : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000414887 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040995e : add byte ptr [rax], al ; add byte ptr [rax], al ; movsx eax, byte ptr [rbp - 0xd] ; pop rbp ; ret
0x000000000040ce43 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004008e4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000041f964 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4036
0x00000000004249fc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4167
0x000000000040077c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x00000000004087a4 : add byte ptr [rax], al ; add byte ptr [rbp + 1], al ; ret 0x2944
0x0000000000414aec : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], al ; ret
0x000000000041df32 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040e3fc : add byte ptr [rax], al ; add byte ptr [rcx + 0x6dd966c7], al ; ret
0x000000000040e3a4 : add byte ptr [rax], al ; add byte ptr [rcx - 0x429af911], al ; ret
0x000000000040f500 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret
0x000000000040f678 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0x3141
0x00000000004195ca : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x858b
0x0000000000418bc1 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xfa81
0x00000000004153f8 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x5589
0x0000000000424fcd : add byte ptr [rax], al ; add byte ptr [rdi], bl ; ret 0x41
0x000000000040568d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xe280
0x000000000040a4ff : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000403739 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040572d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000403f44 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000424fdd : add byte ptr [rax], al ; add byte ptr [rdx], bl ; ret
0x000000000040ce3f : add byte ptr [rax], al ; add cl, ch ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041ab2c : add byte ptr [rax], al ; add cl, ch ; ret
0x000000000041f13c : add byte ptr [rax], al ; add cl, ch ; ret 2
0x000000000041beaf : add byte ptr [rax], al ; add esi, eax ; mov eax, esi ; pop rbp ; ret
0x0000000000404edc : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408ef7 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004064ea : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406104 : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000401e93 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000404330 : add byte ptr [rax], al ; call 0x4105e4
0x0000000000427126 : add byte ptr [rax], al ; fsub dword ptr [rbx - 2] ; call rdi
0x0000000000425c16 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret 0xfffe
0x0000000000401fe9 : add byte ptr [rax], al ; jmp 0x401ea9
0x0000000000426286 : add byte ptr [rax], al ; js 0x426279 ; std ; jmp qword ptr [rsi]
0x000000000041d55b : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004182ca : add byte ptr [rax], al ; mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004183fd : add byte ptr [rax], al ; mov eax, edi ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000418559 : add byte ptr [rax], al ; mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000418371 : add byte ptr [rax], al ; mov eax, esi ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040432b : add byte ptr [rax], al ; mov edi, 2 ; call 0x4105e9
0x000000000041863c : add byte ptr [rax], al ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000415f12 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000414889 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004151fb : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000405dab : add byte ptr [rax], al ; mov rdi, rax ; call 0x402087
0x0000000000427122 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; sldt word ptr [rax] ; fsub dword ptr [rbx - 2] ; call rdi
0x0000000000409960 : add byte ptr [rax], al ; movsx eax, byte ptr [rbp - 0xd] ; pop rbp ; ret
0x00000000004267c6 : add byte ptr [rax], al ; or byte ptr [rdx - 2], al ; call qword ptr [rax]
0x00000000004264e6 : add byte ptr [rax], al ; pop rax ; adc esi, edi ; jmp rdx
0x0000000000404728 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000041c5bb : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000417610 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000041bd31 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004282d2 : add byte ptr [rax], al ; push rsp ; and dword ptr [rax], eax ; add byte ptr [rax], cl ; add edi, edi ; jmp qword ptr [rdi]
0x0000000000425c76 : add byte ptr [rax], al ; pushfq ; in al, -2 ; call rsp
0x00000000004008e6 : add byte ptr [rax], al ; ret
0x000000000041f966 : add byte ptr [rax], al ; ret 0x4036
0x00000000004249fe : add byte ptr [rax], al ; ret 0x4167
0x000000000040077e : add byte ptr [rax], al ; ret 3
0x0000000000427386 : add byte ptr [rax], al ; sbb byte ptr [rsi - 2], dh ; call qword ptr [rax]
0x0000000000427286 : add byte ptr [rax], al ; sub byte ptr [rcx - 2], ch ; call rsi
0x0000000000427446 : add byte ptr [rax], al ; sub byte ptr [rdx - 2], bh ; call qword ptr [rsi]
0x00000000004261e6 : add byte ptr [rax], al ; test al, -0x31 ; std ; jmp qword ptr [rax]
0x0000000000428337 : add byte ptr [rax], bh ; add edi, edi ; jmp qword ptr [rdi]
0x0000000000427387 : add byte ptr [rax], bl ; jbe 0x42738d ; call qword ptr [rax]
0x0000000000427447 : add byte ptr [rax], ch ; jp 0x42744d ; call qword ptr [rsi]
0x00000000004282d7 : add byte ptr [rax], cl ; add edi, edi ; jmp qword ptr [rdi]
0x00000000004274c7 : add byte ptr [rax], cl ; jl 0x4274cd ; call qword ptr [rcx]
0x000000000041fa17 : add byte ptr [rax], dh ; cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004087a6 : add byte ptr [rbp + 1], al ; ret 0x2944
0x0000000000425cf7 : add byte ptr [rbp + rdi*8 - 2], cl ; call rsp
0x0000000000414aee : add byte ptr [rbp - 0x77], al ; ret
0x000000000041c5bc : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000417611 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000413986 : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041bd32 : add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004274c3 : add byte ptr [rbx + rdx], al ; add byte ptr [rax], cl ; jl 0x4274d1 ; call qword ptr [rcx]
0x00000000004077b1 : add byte ptr [rbx - 0x2af4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000407877 : add byte ptr [rbx - 0x2bb4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040f6a8 : add byte ptr [rcx + 0x21ca31c2], cl ; ret 0xfa81
0x000000000040e3fe : add byte ptr [rcx + 0x6dd966c7], al ; ret
0x000000000040d245 : add byte ptr [rcx + rax], ah ; movzx eax, al ; pop rbp ; ret
0x0000000000426283 : add byte ptr [rcx + rax], al ; add byte ptr [rax], al ; js 0x42627c ; std ; jmp qword ptr [rsi]
0x0000000000427283 : add byte ptr [rcx + rdx], al ; add byte ptr [rax], al ; sub byte ptr [rcx - 2], ch ; call rsi
0x000000000040e3a6 : add byte ptr [rcx - 0x429af911], al ; ret
0x000000000040867b : add byte ptr [rcx - 0x52f38516], al ; adc al, -0x7f ; ret 2
0x000000000040f502 : add byte ptr [rcx - 0x77], al ; ret
0x000000000040f67a : add byte ptr [rcx - 0x77], al ; ret 0x3141
0x0000000000408796 : add byte ptr [rcx - 0x77], al ; rol byte ptr [rbp + 0x29], cl ; ret 0x8941
0x000000000041e9dc : add byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x0000000000404bac : add byte ptr [rcx], al ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000402628 : add byte ptr [rcx], al ; ret
0x00000000004195cc : add byte ptr [rcx], al ; ret 0x858b
0x0000000000418bc3 : add byte ptr [rcx], al ; ret 0xfa81
0x00000000004153fa : add byte ptr [rcx], ch ; ret 0x5589
0x000000000041f7df : add byte ptr [rcx], cl ; cmp eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004282d3 : add byte ptr [rcx], dl ; add byte ptr [rax], cl ; add edi, edi ; jmp qword ptr [rdi]
0x000000000040432c : add byte ptr [rdi + 2], bh ; call 0x4105e8
0x000000000040c74c : add byte ptr [rdi], al ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000424fcf : add byte ptr [rdi], bl ; ret 0x41
0x000000000041f138 : add byte ptr [rdi], cl ; lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x000000000041858a : add byte ptr [rdi], cl ; mov bh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040568f : add byte ptr [rdi], cl ; pushfq ; ret 0xe280
0x000000000041ab28 : add byte ptr [rdi], cl ; test dword ptr [rip - 0x17000000], eax ; ret
0x000000000040a501 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x000000000040373b : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040572f : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000403f46 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000427383 : add byte ptr [rdx + rdx], al ; add byte ptr [rax], al ; sbb byte ptr [rsi - 2], dh ; call qword ptr [rax]
0x0000000000403f42 : add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000424fdf : add byte ptr [rdx], bl ; ret
0x000000000041097d : add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x000000000041f917 : add ch, dh ; cmp al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000041f8ff : add cl, ah ; cmp al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040f19c : add cl, byte ptr [rax - 0x77] ; ret 0x148
0x000000000040ce41 : add cl, ch ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041ab2e : add cl, ch ; ret
0x000000000041f13e : add cl, ch ; ret 2
0x000000000041f89f : add dl, bl ; cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004128c2 : add dword ptr [rax + 0xf], eax ; mov dh, -0x39 ; pop rbp ; ret
0x000000000041cbf9 : add dword ptr [rax - 0x77], ecx ; ret 0x8148
0x0000000000426285 : add dword ptr [rax], eax ; add byte ptr [rax - 0x16], bh ; std ; jmp qword ptr [rsi]
0x000000000041bead : add dword ptr [rax], eax ; add byte ptr [rax], al ; add esi, eax ; mov eax, esi ; pop rbp ; ret
0x000000000041793f : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041c5ba : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000041760f : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000404ca8 : add dword ptr [rax], ecx ; ret 0x840
0x0000000000409703 : add dword ptr [rax], esp ; ret 0xd108
0x0000000000419b32 : add dword ptr [rcx + 0x20], eax ; ret 0x845
0x0000000000419b18 : add dword ptr [rcx - 0x78], eax ; ret
0x000000000040531c : add dword ptr [rcx - 0x78], eax ; ret 0x8041
0x0000000000404cb2 : add dword ptr [rdi], ecx ; mov dh, -0x3e ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040da3b : add dword ptr [rdi], ecx ; mov dh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040970a : add dword ptr [rdi], ecx ; mov dh, -0x3f ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d1b3 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040d4e7 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040dae3 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040a05a : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000404dc7 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000402624 : add eax, 0x22800e ; add ebx, esi ; ret
0x000000000041b7a5 : add eax, 0x6348ca01 ; ret 0x6948
0x000000000041ab2b : add eax, 0xe9000000 ; ret
0x000000000041f13b : add eax, 0xe9000000 ; ret 2
0x0000000000410b0c : add eax, ecx ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004025eb : add eax, edx ; sar rax, 1 ; jne 0x4025fc ; pop rbp ; ret
0x0000000000402629 : add ebx, esi ; ret
0x0000000000415817 : add ecx, dword ptr [rax + 1] ; ret 0x8b48
0x0000000000428419 : add edi, edi ; call qword ptr [rdx]
0x00000000004282d9 : add edi, edi ; jmp qword ptr [rdi]
0x000000000041beb1 : add esi, eax ; mov eax, esi ; pop rbp ; ret
0x0000000000404de6 : add esp, 0x10 ; pop rbp ; ret
0x000000000041f46c : add esp, 0x130 ; pop rbp ; ret
0x0000000000408dc8 : add esp, 0x1570 ; pop rbp ; ret
0x000000000040926e : add esp, 0x160 ; pop rbp ; ret
0x0000000000404724 : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000404cb7 : add esp, 0x20 ; pop rbp ; ret
0x0000000000407986 : add esp, 0x2e0 ; pop rbp ; ret
0x0000000000405f14 : add esp, 0x30 ; pop rbp ; ret
0x0000000000406f9a : add esp, 0x3f0 ; pop rbp ; ret
0x0000000000406107 : add esp, 0x40 ; pop rbp ; ret
0x0000000000409351 : add esp, 0x410 ; pop rbp ; ret
0x000000000040660a : add esp, 0x50 ; pop rbp ; ret
0x000000000040725b : add esp, 0x60 ; pop rbp ; ret
0x0000000000404baf : add esp, 0x70 ; pop rbp ; ret
0x000000000040fc69 : add esp, 0x80 ; pop rbp ; ret
0x0000000000413bf5 : add esp, 0x90 ; pop rbp ; ret
0x000000000041bd2d : add esp, 0x908 ; pop rbx ; pop rbp ; ret
0x000000000041c783 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040a8f7 : add esp, 0xb0 ; pop rbp ; ret
0x0000000000411fac : add esp, 0xc0 ; pop rbp ; ret
0x000000000040e5cb : add esp, 0xd0 ; pop rbp ; ret
0x000000000041df2f : add esp, 0xd8 ; pop rbx ; pop rbp ; ret
0x0000000000415015 : add esp, 0xe0 ; pop rbp ; ret
0x0000000000401e96 : add esp, 8 ; ret
0x0000000000410b0b : add rax, rcx ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004025ea : add rax, rdx ; sar rax, 1 ; jne 0x4025fd ; pop rbp ; ret
0x0000000000404de5 : add rsp, 0x10 ; pop rbp ; ret
0x000000000041f46b : add rsp, 0x130 ; pop rbp ; ret
0x0000000000408dc7 : add rsp, 0x1570 ; pop rbp ; ret
0x000000000040926d : add rsp, 0x160 ; pop rbp ; ret
0x0000000000404723 : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000404cb6 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000407985 : add rsp, 0x2e0 ; pop rbp ; ret
0x0000000000405f13 : add rsp, 0x30 ; pop rbp ; ret
0x0000000000406f99 : add rsp, 0x3f0 ; pop rbp ; ret
0x0000000000406106 : add rsp, 0x40 ; pop rbp ; ret
0x0000000000409350 : add rsp, 0x410 ; pop rbp ; ret
0x0000000000406609 : add rsp, 0x50 ; pop rbp ; ret
0x000000000040725a : add rsp, 0x60 ; pop rbp ; ret
0x0000000000404bae : add rsp, 0x70 ; pop rbp ; ret
0x000000000040fc68 : add rsp, 0x80 ; pop rbp ; ret
0x0000000000413bf4 : add rsp, 0x90 ; pop rbp ; ret
0x000000000041bd2c : add rsp, 0x908 ; pop rbx ; pop rbp ; ret
0x000000000041c782 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040a8f6 : add rsp, 0xb0 ; pop rbp ; ret
0x0000000000411fab : add rsp, 0xc0 ; pop rbp ; ret
0x000000000040e5ca : add rsp, 0xd0 ; pop rbp ; ret
0x000000000041df2e : add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x0000000000415014 : add rsp, 0xe0 ; pop rbp ; ret
0x0000000000401e95 : add rsp, 8 ; ret
0x000000000041bffc : addps xmm1, xmm2 ; movaps xmm0, xmm1 ; pop rbp ; ret
0x000000000041bffb : addsd xmm1, xmm2 ; movaps xmm0, xmm1 ; pop rbp ; ret
0x0000000000404dc6 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000402627 : and al, byte ptr [rax] ; add ebx, esi ; ret
0x00000000004128c0 : and bh, 1 ; movzx eax, dil ; pop rbp ; ret
0x000000000040c3cc : and byte ptr [rbx], cl ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402626 : and byte ptr [rdx], 0 ; add ebx, esi ; ret
0x000000000040c82c : and byte ptr [rsi], al ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004128bf : and dil, 1 ; movzx eax, dil ; pop rbp ; ret
0x00000000004200c8 : and dl, al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, al ; ret 0x40
0x0000000000428335 : and dword ptr [rax], eax ; add byte ptr [rax], bh ; add edi, edi ; jmp qword ptr [rdi]
0x00000000004282d5 : and dword ptr [rax], eax ; add byte ptr [rax], cl ; add edi, edi ; jmp qword ptr [rdi]
0x0000000000410f25 : and eax, 0x4243e0 ; mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x00000000004031a9 : and eax, 0x62a578 ; pop rbp ; ret
0x0000000000404cf8 : and eax, 0x62a844 ; pop rbp ; ret
0x0000000000404d1f : and eax, 0x62a848 ; pop rbp ; ret
0x0000000000405fcb : and eax, 0x62b090 ; call 0x4021e7
0x000000000040ee7f : and eax, 0x62b1a0 ; pop rbp ; ret
0x000000000040eea3 : and eax, 0x62b1a8 ; pop rbp ; ret
0x000000000041e2b9 : and eax, edx ; xor rdi, rdx ; or rax, rdi ; pop rbp ; ret
0x000000000041e53e : and edx, eax ; mov al, dl ; movzx eax, al ; pop rbp ; ret
0x000000000041e418 : and edx, eax ; mov ax, dx ; movzx eax, ax ; pop rbp ; ret
0x000000000041e1c7 : and edx, eax ; or r9d, edx ; mov eax, r9d ; pop rbp ; ret
0x000000000041e4d3 : and edx, ebx ; mov al, dl ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000041e53d : and edx, r8d ; mov al, dl ; movzx eax, al ; pop rbp ; ret
0x000000000040f468 : and esi, dword ptr [rcx] ; adc byte ptr [rcx - 0xa], al ; jmp qword ptr [rcx]
0x000000000040f467 : and r14d, dword ptr [r9] ; adc byte ptr [rcx - 0xa], al ; jmp qword ptr [rcx]
0x000000000040b12b : call 0x1002ea7b
0x000000000041b798 : call 0x20440c0
0x000000000041b7dc : call 0x2044104
0x000000000041b825 : call 0x204414d
0x00000000004026ae : call 0x402049
0x0000000000405db0 : call 0x402082
0x0000000000405fd0 : call 0x4021e2
0x0000000000402692 : call 0x402409
0x0000000000404332 : call 0x4105e2
0x000000000040e826 : call 0x49037176
0x000000000040e825 : call 0x49037177
0x000000000040f09f : call 0x490379ef
0x000000000040f09e : call 0x490379f0
0x0000000000415bc8 : call 0x490be51b
0x0000000000415bc7 : call 0x490be51c
0x0000000000415c41 : call 0x490be594
0x0000000000415c40 : call 0x490be595
0x0000000000417649 : call 0xffffffffe903ff99
0x0000000000417648 : call 0xffffffffe903ff9a
0x000000000040ccb3 : call 0xfffffffff0965807
0x000000000040ce63 : call 0xfffffffff09659b7
0x000000000040cf03 : call 0xfffffffff0965a57
0x000000000041ede8 : call 0xfffffffffe72b0d7
0x000000000041ede7 : call 0xfffffffffe72b0d8
0x0000000000411411 : call 0xffffffffff7a9f62
0x0000000000411410 : call 0xffffffffff7a9f63
0x000000000041154f : call 0xffffffffff7aa0a0
0x000000000041154e : call 0xffffffffff7aa0a1
0x000000000041f739 : call qword ptr [r12 + rbx*8]
0x0000000000412a03 : call qword ptr [rax]
0x0000000000427d93 : call qword ptr [rbx]
0x00000000004274cb : call qword ptr [rcx]
0x00000000004276ab : call qword ptr [rdx]
0x000000000042744b : call qword ptr [rsi]
0x000000000041f73a : call qword ptr [rsp + rbx*8]
0x000000000040264d : call rax
0x000000000041739c : call rbx
0x000000000042756b : call rcx
0x000000000042712b : call rdi
0x000000000040d186 : call rdx
0x0000000000414c06 : call rsi
0x0000000000425c7b : call rsp
0x0000000000412c3b : cdq ; ret 0xb60f
0x00000000004127ba : clc ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041f46a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x0000000000410bae : clc ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040ee66 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040d87e : clc ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000406608 : clc ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000412185 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040e98b : clc ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040fc67 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x00000000004126b0 : clc ; add rsp, 0xc0 ; pop rbp ; ret
0x00000000004025ef : clc ; jne 0x4025f8 ; pop rbp ; ret
0x000000000041e3aa : clc ; mov ax, r8w ; movzx eax, ax ; pop rbp ; ret
0x00000000004151f9 : clc ; mov byte ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040d3eb : clc ; mov byte ptr [rax], 0 ; pop rbp ; ret
0x000000000040a9d6 : clc ; mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x00000000004160e5 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000041ea5f : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000415e4c : clc ; mov qword ptr [rbp - 0x10], rsi ; pop rbp ; ret
0x00000000004126ee : clc ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000405e29 : clc ; mov rax, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040e637 : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000041066b : clc ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000041068b : clc ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x00000000004106ab : clc ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x00000000004185db : clc ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000041861b : clc ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x00000000004185fb : clc ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000041e0dc : clc ; mov rax, r8 ; pop rbp ; ret
0x0000000000405e2d : clc ; mov rsp, rbp ; pop rbp ; ret
0x0000000000409119 : clc ; pop rbp ; ret
0x000000000041d558 : cld ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000407607 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404722 : cld ; add rsp, 0x1a0 ; pop rbp ; ret
0x000000000040b694 : cld ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d5d0 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000413fb7 : cld ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040d9b5 : cld ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004104bc : cld ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000410013 : cld ; add rsp, 0x80 ; pop rbp ; ret
0x0000000000411faa : cld ; add rsp, 0xc0 ; pop rbp ; ret
0x000000000041d4f3 : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000041f8c8 : cld ; cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004031a6 : cld ; mov dword ptr [0x62a578], eax ; pop rbp ; ret
0x0000000000404d1c : cld ; mov dword ptr [0x62a848], eax ; pop rbp ; ret
0x000000000041ea5c : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000410561 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040b691 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d5cd : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040d9b2 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041d55f : cld ; pop rbp ; ret
0x000000000041b7a4 : cli ; add eax, 0x6348ca01 ; ret 0x6948
0x000000000041f918 : cmc ; cmp al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000409d6e : cmovb eax, dword ptr [rcx - 0xf] ; jmp qword ptr [rcx]
0x0000000000413fe8 : cmove ecx, edx ; movsxd rax, ecx ; pop rbp ; ret
0x0000000000402699 : cmp al, 0x25 ; ret 0x4237
0x000000000041f901 : cmp al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040e3f2 : cmp al, byte ptr [rcx + 0x6dd966ef] ; ret
0x000000000040e39a : cmp al, byte ptr [rcx - 0x429af939] ; ret
0x0000000000406e82 : cmp byte ptr [rax - 0x45b7ff9e], ch ; ret 0xfac9
0x0000000000410dfa : cmp dword ptr [rax - 0x75], ecx ; jne 0x410de4 ; call rax
0x000000000041f879 : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000041097b : cmp dword ptr [rcx], eax ; add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x0000000000419818 : cmp eax, 0x811851b4 ; ret 0x30
0x000000000041da56 : cmp eax, 0x8945c621 ; ret 0x8141
0x00000000004025ad : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4025c0 ; pop rbp ; ret
0x000000000041f7e1 : cmp eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040617f : cmp ebp, esp ; pop rax ; imul byte ptr [rsi - 0x76b78376] ; ret 0x2948
0x0000000000400289 : comiss xmm7, xmmword ptr [rbx + 0x1d] ; fstp xword ptr [rdx - 9] ; pop rax ; ret 0xa9de
0x000000000041c0fc : cwde ; mov rcx, qword ptr [rax*8 + 0x424fa8] ; jmp rcx
0x0000000000412b54 : dec dword ptr [rax + 0x69] ; ret 0xa
0x00000000004083ff : dec dword ptr [rax + 1] ; ret 0x8948
0x0000000000402696 : dec dword ptr [rax - 0x73] ; cmp al, 0x25 ; ret 0x4237
0x000000000040d3e7 : dec dword ptr [rax - 0x75] ; clc ; mov byte ptr [rax], 0 ; pop rbp ; ret
0x000000000040fcba : dec dword ptr [rax - 0x75] ; clc ; pop rbp ; ret
0x000000000041d20c : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; adc byte ptr [rbx + 0x42], 0 ; jmp rcx
0x000000000041dcc8 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; enter 0x4254, 0 ; jmp rcx
0x00000000004162f0 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; rol byte ptr [rdi + 0x42], 0 ; jmp rcx
0x000000000040a7be : dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000040448c : dec dword ptr [rax - 0x77] ; ret 0x1be8
0x000000000040a4cc : dec dword ptr [rax - 0x77] ; ret 0x2948
0x00000000004077b7 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000414f80 : dec dword ptr [rax - 0x77] ; ret 0xb7e8
0x000000000040a10f : dec dword ptr [rax - 0x7d] ; ret 0x4810
0x0000000000407964 : dec dword ptr [rbp - 0x77] ; ret
0x000000000041b8ff : dec dword ptr [rcx - 0x7628d639] ; ret 0xf229
0x0000000000416da2 : dec dword ptr [rcx - 0x77] ; ret 0x294d
0x0000000000412c39 : dec dword ptr [rdi] ; cdq ; ret 0xb60f
0x000000000041b369 : dec dword ptr [rdi] ; pushfq ; ret 0xe280
0x0000000000412bf5 : dec dword ptr [rdi] ; xchg eax, edx ; ret 0xe280
0x0000000000404d50 : div dword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x0000000000404d4f : div qword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x0000000000410df7 : enter -0x74b8, 0x39 ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x0000000000415317 : enter -0x7cb8, -0x3c ; pop rbp ; ret
0x00000000004089aa : enter 0x2d48, -0x54 ; ret 0xf0
0x000000000040ae39 : enter 0x2d48, 1 ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000041dccd : enter 0x4254, 0 ; jmp rcx
0x0000000000417130 : enter 0x4b05, 0x34 ; fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x000000000041bfbf : enter 0x4d89, -0x14 ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x00000000004135c2 : enter 0x548, 0 ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8948
0x000000000041df31 : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000415771 : fadd dword ptr [rcx - 0xa] ; jmp qword ptr [rcx]
0x0000000000413aa5 : faddp st(1) ; fstp xword ptr [rbp - 0x20] ; fld xword ptr [rbp - 0x20] ; pop rbp ; ret
0x000000000040d7cf : fcom qword ptr [rbp + 0x48] ; sub ecx, dword ptr [rax + 1] ; ret 0x8b48
0x000000000040d7ce : fcom qword ptr gs:[rbp + 0x48] ; sub ecx, dword ptr [rax + 1] ; ret 0x8b48
0x000000000040f4b8 : fiadd dword ptr [rcx - 0xa] ; jmp qword ptr [rcx]
0x0000000000417134 : fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x000000000041e4d4 : fimul dword ptr [rax - 0x3f49f030] ; pop rbx ; pop rbp ; ret
0x000000000040aa81 : fisttp dword ptr [rax + 1] ; ret 0x8b48
0x0000000000413aaa : fld xword ptr [rbp - 0x20] ; pop rbp ; ret
0x0000000000410813 : fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x0000000000415885 : fmul dword ptr [rax - 0x75] ; jne 0x41585f ; call rax
0x0000000000403384 : fmul dword ptr [rax - 0x77] ; ret 0x23e8
0x0000000000410814 : fmul dword ptr [rax - 0x77] ; ret 0x2948
0x000000000041f73c : fmul qword ptr [rax - 0x7d] ; ret
0x000000000041ede1 : fst qword ptr [rbp + 0x42] ; add byte ptr [rax - 0x77], cl ; call 0xfffffffffe72b0de
0x0000000000413aa7 : fstp xword ptr [rbp - 0x20] ; fld xword ptr [rbp - 0x20] ; pop rbp ; ret
0x000000000040028d : fstp xword ptr [rdx - 9] ; pop rax ; ret 0xa9de
0x0000000000427128 : fsub dword ptr [rbx - 2] ; call rdi
0x00000000004075d9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004025c0 : hlt ; pop rbp ; mov edi, 0x62a5d8 ; jmp rax
0x0000000000406182 : imul byte ptr [rsi - 0x76b78376] ; ret 0x2948
0x0000000000412cc7 : imul byte ptr [rsi] ; adc dword ptr [rcx - 0xa], eax ; jmp qword ptr [rcx]
0x000000000040f198 : imul eax, dword ptr [rax - 0x77], 0x7a ; add cl, byte ptr [rax - 0x77] ; ret 0x148
0x0000000000402693 : imul edi, ebp, 0x8d48ffff ; cmp al, 0x25 ; ret 0x4237
0x0000000000425c79 : in al, -2 ; call rsp
0x00000000004105cc : in al, 0x48 ; add esp, 0x20 ; pop rbp ; ret
0x000000000041d61c : in al, dx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040cdef : in al, dx ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041f8b8 : in al, dx ; cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000041bfc2 : in al, dx ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000406180 : in al, dx ; pop rax ; imul byte ptr [rsi - 0x76b78376] ; ret 0x2948
0x0000000000405e30 : in al, dx ; pop rbp ; ret
0x000000000041de6a : in eax, -0x4a ; loope 0x41de93 ; ret 0x8941
0x000000000040d243 : in eax, -0x50 ; add byte ptr [rcx + rax], ah ; movzx eax, al ; pop rbp ; ret
0x00000000004182e3 : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x0000000000408654 : inc byte ptr [rcx - 0xe] ; jmp qword ptr [rcx]
0x000000000040dea7 : inc byte ptr [rcx] ; jmp rcx
0x000000000040574f : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000041b116 : inc dword ptr [rcx - 0x32c9d916] ; or dword ptr [rcx], eax ; ret 0xc281
0x00000000004173bb : inc dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x000000000040e0e5 : inc dword ptr [rcx] ; jmp rcx
0x000000000040834f : inc esi ; jmp qword ptr [rax]
0x0000000000425c18 : insb byte ptr [rdi], dx ; ret 0xfffe
0x0000000000413aab : insd dword ptr [rdi], dx ; loopne 0x413b0e ; ret
0x000000000040e3f7 : insd dword ptr [rdi], dx ; ret
0x000000000041c725 : int 0x80
0x00000000004261e9 : iretd ; std ; jmp qword ptr [rax]
0x00000000004025b3 : ja 0x4025ba ; pop rbp ; ret
0x00000000004126f1 : ja 0x41273e ; pop rbp ; ret
0x0000000000412cc6 : jbe 0x412cc7 ; adc dword ptr cs:[rcx - 0xa], eax ; jmp qword ptr [rcx]
0x0000000000427389 : jbe 0x42738b ; call qword ptr [rax]
0x00000000004025bf : je 0x4025bd ; pop rbp ; mov edi, 0x62a5d8 ; jmp rax
0x000000000040d7cd : jg 0x40d83c ; fcom qword ptr [rbp + 0x48] ; sub ecx, dword ptr [rax + 1] ; ret 0x8b48
0x000000000040d10e : jge 0x40d0d1 ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x38] ; call rax
0x000000000040e636 : jge 0x40e637 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000041066a : jge 0x41066b ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000041068a : jge 0x41068b ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x00000000004106aa : jge 0x4106ab ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000410a60 : jge 0x410a53 ; mov rcx, qword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000412030 : jge 0x412023 ; mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x00000000004126ed : jge 0x4126ee ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000413aa8 : jge 0x413a90 ; fld xword ptr [rbp - 0x20] ; pop rbp ; ret
0x0000000000415884 : jge 0x415864 ; mov rsi, qword ptr [rbp - 0x30] ; call rax
0x0000000000415987 : jge 0x415917 ; mov rsi, qword ptr [rbp - 0x70] ; call rax
0x0000000000415bae : jge 0x415b5e ; mov rsi, qword ptr [rbp - 0x60] ; call rax
0x0000000000415e4b : jge 0x415e4c ; mov qword ptr [rbp - 0x10], rsi ; pop rbp ; ret
0x00000000004182e6 : jge 0x4182e3 ; pop rbp ; ret
0x00000000004185da : jge 0x4185db ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x00000000004185fa : jge 0x4185fb ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000041861a : jge 0x41861b ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000418640 : jge 0x41863d ; pop rbp ; ret
0x00000000004274c9 : jl 0x4274cb ; call qword ptr [rcx]
0x0000000000401feb : jmp 0x401ea7
0x00000000004112b0 : jmp 0x49039c00
0x0000000000411d2e : jmp 0x4903a67e
0x0000000000411d9b : jmp 0x4903a6eb
0x000000000041252c : jmp 0x4903ae7c
0x0000000000412599 : jmp 0x4903aee9
0x000000000041cbf8 : jmp 0xffffffffc2cb1402
0x0000000000408352 : jmp qword ptr [rax]
0x00000000004266ab : jmp qword ptr [rbx]
0x0000000000405472 : jmp qword ptr [rcx]
0x000000000042642b : jmp qword ptr [rdi]
0x00000000004261cb : jmp qword ptr [rdx]
0x000000000042628b : jmp qword ptr [rsi]
0x00000000004025c7 : jmp rax
0x00000000004036b0 : jmp rcx
0x0000000000402607 : jmp rdx
0x00000000004025f0 : jne 0x4025f7 ; pop rbp ; ret
0x0000000000404d51 : jne 0x404d49 ; mov rax, rdx ; pop rbp ; ret
0x000000000040d181 : jne 0x40d178 ; mov rsi, qword ptr [rsi] ; call rdx
0x0000000000410ad6 : jne 0x410ac1 ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x0000000000410dfd : jne 0x410de1 ; call rax
0x0000000000415888 : jne 0x41585c ; call rax
0x000000000041598b : jne 0x41591f ; call rax
0x0000000000415bb2 : jne 0x415b56 ; call rax
0x0000000000415e4f : jne 0x415e44 ; pop rbp ; ret
0x000000000040028b : jnp 0x4002b0 ; fstp xword ptr [rdx - 9] ; pop rax ; ret 0xa9de
0x0000000000404bb1 : jo 0x404c12 ; ret
0x0000000000407bdc : jo 0x407c3d ; ret
0x0000000000408dca : jo 0x408de6 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000409654 : jo 0x4096b5 ; ret
0x000000000040b09f : jo 0x40b100 ; ret
0x000000000040b5ec : jo 0x40b612 ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040e98f : jo 0x40e9f0 ; ret
0x0000000000416235 : jo 0x416296 ; ret
0x000000000041785f : jo 0x4178c5 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000417f04 : jo 0x417f65 ; ret
0x000000000041803e : jo 0x41809f ; ret
0x00000000004185ff : jo 0x418660 ; ret
0x00000000004185fe : jo 0x418661 ; ret
0x000000000040028e : jp 0x40028a ; pop rax ; ret 0xa9de
0x000000000040867e : jp 0x408691 ; lodsd eax, dword ptr [rsi] ; adc al, -0x7f ; ret 2
0x0000000000427449 : jp 0x42744b ; call qword ptr [rsi]
0x0000000000427e91 : jrcxz 0x427e93 ; call rdi
0x0000000000414c00 : js 0x414c66 ; xchg eax, ebx ; xchg eax, ecx ; salc ; call rsi
0x0000000000414c13 : js 0x414c79 ; xchg eax, ebx ; xchg eax, ecx ; salc ; call rsi
0x0000000000426288 : js 0x426277 ; std ; jmp qword ptr [rsi]
0x000000000040aa80 : lahf ; fisttp dword ptr [rax + 1] ; ret 0x8b48
0x000000000040d008 : lahf ; ret 0xe280
0x000000000041f13a : lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000405fc9 : lea edi, dword ptr [0x62b090] ; call 0x4021e9
0x0000000000412c87 : lea edi, dword ptr [rax + 0xffffffe] ; cdq ; ret 0xb60f
0x0000000000412c35 : lea esi, dword ptr [rax + 0xffffffe] ; cdq ; ret 0xb60f
0x0000000000413ef6 : leave ; test dword ptr [rcx], esp ; ret 0xd709
0x0000000000425c13 : ljmp ptr [rbx] ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret 0xfffe
0x00000000004195bf : ljmp ptr [rcx] ; ret 0x858b
0x000000000040d14d : lodsb al, byte ptr [rsi] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040d14a : lodsb al, byte ptr [rsi] ; mov eax, dword ptr [rbp - 0x54] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004089ad : lodsb al, byte ptr [rsi] ; ret 0xf0
0x0000000000408680 : lodsd eax, dword ptr [rsi] ; adc al, -0x7f ; ret 2
0x0000000000407f8a : loop 0x407fba ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041de6c : loope 0x41de91 ; ret 0x8941
0x00000000004063e7 : loopne 0x4063d3 ; ret
0x00000000004063e6 : loopne 0x4063d4 ; ret
0x0000000000407988 : loopne 0x407991 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000408e70 : loopne 0x408ec0 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000408e6f : loopne 0x408ec1 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040ace3 : loopne 0x40acec ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040c20c : loopne 0x40c223 ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040c66c : loopne 0x40c67e ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040db9d : loopne 0x40dbf0 ; mov dword ptr [rdx], ecx ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040fa0f : loopne 0x40fa5f ; add esp, 0x20 ; pop rbp ; ret
0x000000000040fa0e : loopne 0x40fa60 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000410ad7 : loopne 0x410b29 ; mov esi, eax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x0000000000413aa9 : loopne 0x413a8b ; insd dword ptr [rdi], dx ; loopne 0x413b10 ; ret
0x0000000000413aac : loopne 0x413b0d ; ret
0x0000000000415017 : loopne 0x41501e ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000415881 : loopne 0x4158d4 ; mov edi, dword ptr [rbp - 0x28] ; mov rsi, qword ptr [rbp - 0x30] ; call rax
0x0000000000415984 : loopne 0x4159d7 ; mov edi, dword ptr [rbp - 0x78] ; mov rsi, qword ptr [rbp - 0x70] ; call rax
0x0000000000415bab : loopne 0x415bfe ; mov edi, dword ptr [rbp - 0x58] ; mov rsi, qword ptr [rbp - 0x60] ; call rax
0x000000000041d4f7 : loopne 0x41d4fe ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041de68 : loopne 0x41de84 ; in eax, -0x4a ; loope 0x41de95 ; ret 0x8941
0x00000000004200c0 : loopne 0x42008c ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; ret 0x40
0x0000000000427d91 : loopne 0x427d93 ; call qword ptr [rbx]
0x0000000000425c74 : mov ah, 0x24 ; add byte ptr [rax], al ; pushfq ; in al, -2 ; call rsp
0x00000000004109de : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040a8f9 : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040d244 : mov al, 0 ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040b7ac : mov al, 0x19 ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040ed1a : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000417c68 : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000404806 : mov al, 0x48 ; mov ecx, dword ptr [rax*8 + 0x41faf8] ; jmp rcx
0x000000000040dea1 : mov al, 0x48 ; mov ecx, dword ptr [rax*8 + 0x41feb8] ; jmp rcx
0x000000000040b125 : mov al, 0x62 ; add byte ptr [rax - 0x75], cl ; push rbp ; call 0x1002ea81
0x000000000040c9ec : mov al, 2 ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d2db : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040da0a : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040cc95 : mov al, byte ptr [rbp - 9] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041e540 : mov al, dl ; movzx eax, al ; pop rbp ; ret
0x000000000041e4d5 : mov al, dl ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000041e41a : mov ax, dx ; movzx eax, ax ; pop rbp ; ret
0x000000000041e3ab : mov ax, r8w ; movzx eax, ax ; pop rbp ; ret
0x000000000041858c : mov bh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041e3b0 : mov bh, -0x40 ; pop rbp ; ret
0x0000000000406184 : mov bh, byte ptr [rax + rcx*2 - 0x77] ; ret 0x2948
0x000000000040eea1 : mov byte ptr [0x62b1a8], al ; pop rbp ; ret
0x000000000041b795 : mov byte ptr [rax - 0x3f], cl ; call 0x20440c3
0x000000000041b7d9 : mov byte ptr [rax - 0x3f], cl ; call 0x2044107
0x000000000041b822 : mov byte ptr [rax - 0x3f], cl ; call 0x2044150
0x0000000000414bfd : mov byte ptr [rax - 0x47], cl ; js 0x414c69 ; xchg eax, ebx ; xchg eax, ecx ; salc ; call rsi
0x0000000000415988 : mov byte ptr [rax - 0x75], cl ; jne 0x415922 ; call rax
0x00000000004151fa : mov byte ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040d3ec : mov byte ptr [rax], 0 ; pop rbp ; ret
0x000000000040f8db : mov byte ptr [rbp - 1], 0x3f ; movsx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x000000000040a9d7 : mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x000000000040f752 : mov byte ptr [rdx + 0xb], 0 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402623 : mov byte ptr [rip + 0x22800e], 1 ; ret
0x0000000000413ef4 : mov ch, 0x1c ; leave ; test dword ptr [rcx], esp ; ret 0xd709
0x000000000041bddf : mov cs, word ptr [rsi] ; adc ecx, dword ptr [rax - 0x77] ; ret 0x148
0x000000000041bfbe : mov dh, -0x38 ; mov dword ptr [rbp - 0x14], ecx ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x00000000004128c5 : mov dh, -0x39 ; pop rbp ; ret
0x0000000000404cb4 : mov dh, -0x3e ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040da3d : mov dh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040970c : mov dh, -0x3f ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d1b5 : mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040d4e9 : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040dae5 : mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040a05c : mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000404dc9 : mov dh, -0x40 ; pop rbp ; ret
0x000000000041e4d8 : mov dh, -0x40 ; pop rbx ; pop rbp ; ret
0x00000000004031a7 : mov dword ptr [0x62a578], eax ; pop rbp ; ret
0x0000000000404cf6 : mov dword ptr [0x62a844], eax ; pop rbp ; ret
0x0000000000404d1d : mov dword ptr [0x62a848], eax ; pop rbp ; ret
0x000000000040ee7d : mov dword ptr [0x62b1a0], edi ; pop rbp ; ret
0x00000000004160e6 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000041b792 : mov dword ptr [rax - 0x3eb77778], ecx ; call 0x20440c6
0x000000000041b7d6 : mov dword ptr [rax - 0x3eb77778], ecx ; call 0x204410a
0x000000000041b81f : mov dword ptr [rax - 0x3eb77778], ecx ; call 0x2044153
0x00000000004160a8 : mov dword ptr [rax], eax ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000415f64 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004160a7 : mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040a9be : mov dword ptr [rbp - 0x10], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000415e4e : mov dword ptr [rbp - 0x10], esi ; pop rbp ; ret
0x000000000041bfc0 : mov dword ptr [rbp - 0x14], ecx ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x00000000004105ca : mov dword ptr [rbp - 0x1c], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041bf5a : mov dword ptr [rbp - 0x24], eax ; mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x0000000000407719 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000407f22 : mov dword ptr [rbp - 0x3c], eax ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004109dc : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040ed18 : mov dword ptr [rbp - 0x50], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000407257 : mov dword ptr [rbp - 0x5c], eax ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004075d7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407605 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041ea5d : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000410d85 : mov dword ptr [rbp - 8], eax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000415e4a : mov dword ptr [rbp - 8], edi ; mov qword ptr [rbp - 0x10], rsi ; pop rbp ; ret
0x000000000040e635 : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004182e5 : mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x000000000041615e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000410f2a : mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x00000000004126f0 : mov dword ptr [rdi + 0x48], esi ; pop rbp ; ret
0x000000000040db9f : mov dword ptr [rdx], ecx ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040d10f : mov eax, 0x48c68948 ; mov eax, dword ptr [rbp - 0x38] ; call rax
0x0000000000409650 : mov eax, 0x70c48348 ; pop rbp ; ret
0x0000000000412c88 : mov eax, 0xffffffe ; cdq ; ret 0xb60f
0x0000000000415f18 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004121e3 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040f333 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000415f15 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000418661 : mov eax, dword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040f28f : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000041d61a : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040cded : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041bfc3 : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000040f0c0 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000415ecd : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040b099 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000415f5e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000410789 : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000413c9c : mov eax, dword ptr [rbp - 0x1c] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000408e6e : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000410adc : mov eax, dword ptr [rbp - 0x20] ; call rax
0x000000000040d048 : mov eax, dword ptr [rbp - 0x24] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041bf5d : mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x000000000041228f : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004160aa : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000415315 : mov eax, dword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040d114 : mov eax, dword ptr [rbp - 0x38] ; call rax
0x000000000041622f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040cd30 : mov eax, dword ptr [rbp - 0x44] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040964e : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000414174 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040d14b : mov eax, dword ptr [rbp - 0x54] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000410562 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040b692 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d5ce : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000413fb5 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040d9b3 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004104ba : mov eax, dword ptr [rbp - 4] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041d55d : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004127b8 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000410bac : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040ee64 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040d87c : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040eb06 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000412183 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040e989 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040d3e9 : mov eax, dword ptr [rbp - 8] ; mov byte ptr [rax], 0 ; pop rbp ; ret
0x0000000000405e2b : mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040e639 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000041066d : mov eax, dword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000041068d : mov eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0x00000000004106ad : mov eax, dword ptr [rdi + 0x20] ; pop rbp ; ret
0x00000000004185dd : mov eax, dword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000041861d : mov eax, dword ptr [rdi + 0x60] ; pop rbp ; ret
0x00000000004185fd : mov eax, dword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000041e3ad : mov eax, eax ; movzx eax, ax ; pop rbp ; ret
0x000000000041e0de : mov eax, eax ; pop rbp ; ret
0x00000000004182cc : mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041e1cd : mov eax, ecx ; pop rbp ; ret
0x00000000004183ff : mov eax, edi ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000409118 : mov eax, edi ; pop rbp ; ret
0x0000000000411111 : mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041e41b : mov eax, edx ; movzx eax, ax ; pop rbp ; ret
0x0000000000404d54 : mov eax, edx ; pop rbp ; ret
0x0000000000418373 : mov eax, esi ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041beb3 : mov eax, esi ; pop rbp ; ret
0x000000000041e3ac : mov eax, r8d ; movzx eax, ax ; pop rbp ; ret
0x000000000041e1cc : mov eax, r9d ; pop rbp ; ret
0x000000000040264b : mov ebp, esp ; call rax
0x00000000004025b1 : mov ebp, esp ; ja 0x4025bc ; pop rbp ; ret
0x00000000004182e2 : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000041ad4d : mov ebx, 0x81524f62 ; ret 7
0x000000000041c73d : mov ecx, 0x5b2a830a ; ret
0x0000000000414bff : mov ecx, 0x91935e78 ; salc ; call rsi
0x00000000004036a9 : mov ecx, dword ptr [rax*8 + 0x41f7e0] ; jmp rcx
0x00000000004045a2 : mov ecx, dword ptr [rax*8 + 0x41fad8] ; jmp rcx
0x0000000000404808 : mov ecx, dword ptr [rax*8 + 0x41faf8] ; jmp rcx
0x000000000040639a : mov ecx, dword ptr [rax*8 + 0x41fb28] ; jmp rcx
0x0000000000406b88 : mov ecx, dword ptr [rax*8 + 0x41fb50] ; jmp rcx
0x000000000040a1f5 : mov ecx, dword ptr [rax*8 + 0x41fbc0] ; jmp rcx
0x000000000040dea3 : mov ecx, dword ptr [rax*8 + 0x41feb8] ; jmp rcx
0x000000000040e110 : mov ecx, dword ptr [rax*8 + 0x41fee0] ; jmp rcx
0x000000000040e0e1 : mov ecx, dword ptr [rax*8 + 0x41ff38] ; jmp rcx
0x00000000004153d6 : mov ecx, dword ptr [rax*8 + 0x424480] ; jmp rcx
0x00000000004162f2 : mov ecx, dword ptr [rax*8 + 0x4247c0] ; jmp rcx
0x0000000000416616 : mov ecx, dword ptr [rax*8 + 0x424808] ; jmp rcx
0x0000000000418c9d : mov ecx, dword ptr [rax*8 + 0x424cb8] ; jmp rcx
0x000000000041b86a : mov ecx, dword ptr [rax*8 + 0x424f68] ; jmp rcx
0x000000000041c0fe : mov ecx, dword ptr [rax*8 + 0x424fa8] ; jmp rcx
0x000000000041d28e : mov ecx, dword ptr [rax*8 + 0x425320] ; jmp rcx
0x000000000041d20e : mov ecx, dword ptr [rax*8 + 0x425380] ; jmp rcx
0x000000000041dcca : mov ecx, dword ptr [rax*8 + 0x4254c8] ; jmp rcx
0x000000000041dc4a : mov ecx, dword ptr [rax*8 + 0x425528] ; jmp rcx
0x0000000000415f61 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000411472 : mov ecx, dword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040cd25 : mov ecx, dword ptr [rbp - 0x10] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000041140f : mov ecx, dword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000410a63 : mov ecx, dword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000412033 : mov ecx, dword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000412100 : mov ecx, dword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000402645 : mov edi, 0x629e20 ; mov rbp, rsp ; call rax
0x00000000004025c2 : mov edi, 0x62a5d8 ; jmp rax
0x0000000000402602 : mov edi, 0x62a5d8 ; jmp rdx
0x000000000040432d : mov edi, 2 ; call 0x4105e7
0x0000000000415883 : mov edi, dword ptr [rbp - 0x28] ; mov rsi, qword ptr [rbp - 0x30] ; call rax
0x0000000000415bad : mov edi, dword ptr [rbp - 0x58] ; mov rsi, qword ptr [rbp - 0x60] ; call rax
0x0000000000415986 : mov edi, dword ptr [rbp - 0x78] ; mov rsi, qword ptr [rbp - 0x70] ; call rax
0x00000000004126ec : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000410669 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000410689 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x00000000004106a9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x00000000004185d9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000418619 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x00000000004185f9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000411413 : mov edi, dword ptr [rcx] ; call rax
0x000000000040cd22 : mov edi, dword ptr [rcx] ; mov rcx, qword ptr [rbp - 0x10] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000410df9 : mov edi, dword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x000000000040d17d : mov edi, dword ptr [rsi] ; mov rsi, qword ptr [rbp - 0x10] ; mov rsi, qword ptr [rsi] ; call rdx
0x0000000000405dae : mov edi, eax ; call 0x402084
0x000000000041f737 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000041f736 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000040fa8d : mov edx, 0x4fdaf5a1 ; ret
0x0000000000406606 : mov edx, dword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000418665 : mov edx, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040fa7d : mov esi, 0x4fdaf5a1 ; ret
0x000000000040d180 : mov esi, dword ptr [rbp - 0x10] ; mov rsi, qword ptr [rsi] ; call rdx
0x0000000000410dfc : mov esi, dword ptr [rbp - 0x20] ; call rax
0x0000000000415887 : mov esi, dword ptr [rbp - 0x30] ; call rax
0x0000000000415bb1 : mov esi, dword ptr [rbp - 0x60] ; call rax
0x000000000041598a : mov esi, dword ptr [rbp - 0x70] ; call rax
0x000000000040cd29 : mov esi, dword ptr [rcx] ; call rax
0x000000000040d184 : mov esi, dword ptr [rsi] ; call rdx
0x0000000000402600 : mov esi, eax ; mov edi, 0x62a5d8 ; jmp rdx
0x0000000000410ad9 : mov esi, eax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000040d111 : mov esi, eax ; mov rax, qword ptr [rbp - 0x38] ; call rax
0x000000000040cd2f : mov esp, 0x48bc458b ; add esp, 0x50 ; pop rbp ; ret
0x000000000040cd32 : mov esp, 0x50c48348 ; pop rbp ; ret
0x0000000000405e2f : mov esp, ebp ; pop rbp ; ret
0x000000000040ee7c : mov qword ptr [0x62b1a0], rdi ; pop rbp ; ret
0x000000000040a9bd : mov qword ptr [rbp - 0x10], rax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000415e4d : mov qword ptr [rbp - 0x10], rsi ; pop rbp ; ret
0x0000000000410d84 : mov qword ptr [rbp - 8], rax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000415e49 : mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; pop rbp ; ret
0x000000000040e634 : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004182e4 : mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000041615d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004126ef : mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040db9e : mov qword ptr [rdx], rcx ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004109dd : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040cd31 : mov r12d, 0x50c48348 ; pop rbp ; ret
0x000000000040ed19 : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040964f : mov r8d, 0x70c48348 ; pop rbp ; ret
0x00000000004121e2 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040f332 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000415f14 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000418660 : mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040f28e : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040f0bf : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000415ecc : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040b098 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000410788 : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000408e6d : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000410adb : mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000041228e : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000415314 : mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040d113 : mov rax, qword ptr [rbp - 0x38] ; call rax
0x000000000041622e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040964d : mov rax, qword ptr [rbp - 0x48] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000414173 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004127b7 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000410bab : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040ee63 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040d87b : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040eb05 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000412182 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040e988 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040d3e8 : mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax], 0 ; pop rbp ; ret
0x0000000000405e2a : mov rax, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040e638 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000041066c : mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000041068c : mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x00000000004106ac : mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x00000000004185dc : mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000041861c : mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x00000000004185fc : mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000041e0dd : mov rax, r8 ; pop rbp ; ret
0x0000000000409117 : mov rax, rdi ; pop rbp ; ret
0x0000000000411110 : mov rax, rdx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404d53 : mov rax, rdx ; pop rbp ; ret
0x000000000040264a : mov rbp, rsp ; call rax
0x00000000004025b0 : mov rbp, rsp ; ja 0x4025bd ; pop rbp ; ret
0x00000000004182e1 : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x00000000004036a8 : mov rcx, qword ptr [rax*8 + 0x41f7e0] ; jmp rcx
0x00000000004045a1 : mov rcx, qword ptr [rax*8 + 0x41fad8] ; jmp rcx
0x0000000000404807 : mov rcx, qword ptr [rax*8 + 0x41faf8] ; jmp rcx
0x0000000000406399 : mov rcx, qword ptr [rax*8 + 0x41fb28] ; jmp rcx
0x0000000000406b87 : mov rcx, qword ptr [rax*8 + 0x41fb50] ; jmp rcx
0x000000000040a1f4 : mov rcx, qword ptr [rax*8 + 0x41fbc0] ; jmp rcx
0x000000000040dea2 : mov rcx, qword ptr [rax*8 + 0x41feb8] ; jmp rcx
0x000000000040e10f : mov rcx, qword ptr [rax*8 + 0x41fee0] ; jmp rcx
0x000000000040e0e0 : mov rcx, qword ptr [rax*8 + 0x41ff38] ; jmp rcx
0x00000000004153d5 : mov rcx, qword ptr [rax*8 + 0x424480] ; jmp rcx
0x00000000004162f1 : mov rcx, qword ptr [rax*8 + 0x4247c0] ; jmp rcx
0x0000000000416615 : mov rcx, qword ptr [rax*8 + 0x424808] ; jmp rcx
0x0000000000418c9c : mov rcx, qword ptr [rax*8 + 0x424cb8] ; jmp rcx
0x000000000041b869 : mov rcx, qword ptr [rax*8 + 0x424f68] ; jmp rcx
0x000000000041c0fd : mov rcx, qword ptr [rax*8 + 0x424fa8] ; jmp rcx
0x000000000041d28d : mov rcx, qword ptr [rax*8 + 0x425320] ; jmp rcx
0x000000000041d20d : mov rcx, qword ptr [rax*8 + 0x425380] ; jmp rcx
0x000000000041dcc9 : mov rcx, qword ptr [rax*8 + 0x4254c8] ; jmp rcx
0x000000000041dc49 : mov rcx, qword ptr [rax*8 + 0x425528] ; jmp rcx
0x0000000000411471 : mov rcx, qword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040cd24 : mov rcx, qword ptr [rbp - 0x10] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000041140e : mov rcx, qword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000410a62 : mov rcx, qword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000412032 : mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x00000000004120ff : mov rcx, qword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000415882 : mov rdi, qword ptr [rbp - 0x28] ; mov rsi, qword ptr [rbp - 0x30] ; call rax
0x0000000000415bac : mov rdi, qword ptr [rbp - 0x58] ; mov rsi, qword ptr [rbp - 0x60] ; call rax
0x0000000000415985 : mov rdi, qword ptr [rbp - 0x78] ; mov rsi, qword ptr [rbp - 0x70] ; call rax
0x00000000004126eb : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000410668 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000410688 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x00000000004106a8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x00000000004185d8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000418618 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x00000000004185f8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000411412 : mov rdi, qword ptr [rcx] ; call rax
0x0000000000410df8 : mov rdi, qword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x0000000000405dad : mov rdi, rax ; call 0x402085
0x0000000000406605 : mov rdx, qword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000418664 : mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040d17f : mov rsi, qword ptr [rbp - 0x10] ; mov rsi, qword ptr [rsi] ; call rdx
0x0000000000410dfb : mov rsi, qword ptr [rbp - 0x20] ; call rax
0x0000000000415886 : mov rsi, qword ptr [rbp - 0x30] ; call rax
0x0000000000415bb0 : mov rsi, qword ptr [rbp - 0x60] ; call rax
0x0000000000415989 : mov rsi, qword ptr [rbp - 0x70] ; call rax
0x000000000040cd28 : mov rsi, qword ptr [rcx] ; call rax
0x000000000040d183 : mov rsi, qword ptr [rsi] ; call rdx
0x000000000040d17e : mov rsi, qword ptr ds:[rbp - 0x10] ; mov rsi, qword ptr [rsi] ; call rdx
0x00000000004025ff : mov rsi, rax ; mov edi, 0x62a5d8 ; jmp rdx
0x0000000000410ad8 : mov rsi, rax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000040d110 : mov rsi, rax ; mov rax, qword ptr [rbp - 0x38] ; call rax
0x0000000000405e2e : mov rsp, rbp ; pop rbp ; ret
0x0000000000419ae5 : mov word ptr [rax - 0x7f], cs ; ret 0x17
0x0000000000405bdb : mov word ptr [rcx - 0xe], es ; jmp qword ptr [rcx]
0x00000000004153d4 : movabs al, byte ptr [0x424480c50c8b48] ; jmp rcx
0x000000000040ae0e : movabs al, byte ptr [0x8944c03145c88948] ; ret 0x8b48
0x00000000004200e0 : movabs al, byte ptr [0xe0000000000040c3] ; ret
0x000000000040663a : movabs byte ptr [0x5d10c48348ffffb8], al ; ret
0x0000000000409379 : movabs dword ptr [0x5d10c483480000b3], eax ; ret
0x000000000041d5f0 : movabs dword ptr [0x941c90941f0213f], eax ; ret 0x3145
0x000000000041bfff : movaps xmm0, xmm1 ; pop rbp ; ret
0x0000000000407259 : movsb byte ptr [rdi], byte ptr [rsi] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000427124 : movsb byte ptr [rdi], byte ptr [rsi] ; sldt word ptr [rax] ; fsub dword ptr [rbx - 2] ; call rdi
0x0000000000409962 : movsx eax, byte ptr [rbp - 0xd] ; pop rbp ; ret
0x000000000040f8df : movsx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000413fec : movsxd rax, ecx ; pop rbp ; ret
0x0000000000427129 : movsxd rdi, esi ; call rdi
0x000000000040d1b4 : movzx eax, al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040d4e8 : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040dae4 : movzx eax, al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040a05b : movzx eax, al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000404dc8 : movzx eax, al ; pop rbp ; ret
0x000000000041e4d7 : movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000041e3af : movzx eax, ax ; pop rbp ; ret
0x00000000004128c4 : movzx eax, bh ; pop rbp ; ret
0x000000000040a9da : movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x000000000040da3c : movzx eax, cl ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040970b : movzx eax, cl ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041858b : movzx eax, cx ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004128c3 : movzx eax, dil ; pop rbp ; ret
0x0000000000404cb3 : movzx eax, dl ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040cc96 : mul dword ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000040cc97 : mul dword ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000041598c : nop ; call rax
0x000000000041f878 : nop ; cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000041f758 : nop dword ptr [rax + rax] ; ret
0x0000000000415820 : or al, 0 ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041697d : or al, 0x18 ; ret 0x6451
0x0000000000406e80 : or al, 0x25 ; cmp byte ptr [rax - 0x45b7ff9e], ch ; ret 0xfac9
0x000000000040867f : or al, 0xffffffffffffffad ; adc al, -0x7f ; ret 2
0x000000000041d20f : or al, 0xffffffffffffffc5 ; adc byte ptr [rbx + 0x42], 0 ; jmp rcx
0x000000000041dccb : or al, 0xffffffffffffffc5 ; enter 0x4254, 0 ; jmp rcx
0x00000000004162f3 : or al, 0xffffffffffffffc5 ; rol byte ptr [rdi + 0x42], 0 ; jmp rcx
0x000000000040a962 : or al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000404da3 : or byte ptr [r15], cl ; xchg eax, esp ; ret 0x5588
0x0000000000418724 : or byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041bd2f : or byte ptr [rcx], cl ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000404da4 : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x00000000004267c8 : or byte ptr [rdx - 2], al ; call qword ptr [rax]
0x000000000041bd30 : or dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000041b11c : or dword ptr [rcx], eax ; ret 0xc281
0x000000000041df0b : or dword ptr [rsp + rax + 0x21], esp ; ret 0xd709
0x0000000000417fc1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040f754 : or eax, dword ptr [rax] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041e0db : or eax, edi ; mov rax, r8 ; pop rbp ; ret
0x000000000041e2bf : or eax, edi ; pop rbp ; ret
0x000000000041e1ca : or ecx, edx ; mov eax, r9d ; pop rbp ; ret
0x0000000000425d39 : or edi, edi ; call rsp
0x0000000000426429 : or edi, esi ; jmp qword ptr [rdi]
0x000000000041e0da : or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x000000000041e1c9 : or r9d, edx ; mov eax, r9d ; pop rbp ; ret
0x000000000041e2be : or rax, rdi ; pop rbp ; ret
0x00000000004128c1 : out 1, eax ; movzx eax, dil ; pop rbp ; ret
0x000000000041916d : out dx, al ; ret
0x0000000000410969 : outsb dx, byte ptr [rsi] ; ret 0x280f
0x000000000041f74c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000413988 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041f74e : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041398a : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041f750 : pop r14 ; pop r15 ; ret
0x0000000000417613 : pop r14 ; pop rbp ; ret
0x000000000041398c : pop r15 ; pop rbp ; ret
0x000000000041f752 : pop r15 ; ret
0x00000000004264e8 : pop rax ; adc esi, edi ; jmp rdx
0x0000000000406181 : pop rax ; imul byte ptr [rsi - 0x76b78376] ; ret 0x2948
0x0000000000400290 : pop rax ; ret 0xa9de
0x0000000000402622 : pop rbp ; mov byte ptr [rip + 0x22800e], 1 ; ret
0x00000000004025c1 : pop rbp ; mov edi, 0x62a5d8 ; jmp rax
0x00000000004025fe : pop rbp ; mov rsi, rax ; mov edi, 0x62a5d8 ; jmp rdx
0x000000000041f74b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041f74f : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004025b5 : pop rbp ; ret
0x0000000000413987 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041c5bd : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000417612 : pop rbx ; pop r14 ; pop rbp ; ret
0x000000000041bd33 : pop rbx ; pop rbp ; ret
0x000000000041c741 : pop rbx ; ret
0x000000000041398d : pop rdi ; pop rbp ; ret
0x0000000000406e51 : pop rdi ; ret
0x0000000000424fd8 : pop rdx ; add byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rdx], bl ; ret
0x0000000000409d6d : pop rdx ; cmovb eax, dword ptr [rcx - 0xf] ; jmp qword ptr [rcx]
0x000000000041398b : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000041f751 : pop rsi ; pop r15 ; ret
0x0000000000417614 : pop rsi ; pop rbp ; ret
0x0000000000414c01 : pop rsi ; xchg eax, ebx ; xchg eax, ecx ; salc ; call rsi
0x000000000041f74d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000413989 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000410980 : pop rsp ; ret 0xf66
0x00000000004185de : push r8 ; pop rbp ; ret
0x000000000040660c : push rax ; pop rbp ; ret
0x000000000041ede2 : push rbp ; add byte ptr [rax - 0x77], cl ; call 0xfffffffffe72b0dd
0x000000000040b12a : push rbp ; call 0x1002ea7c
0x000000000040ccb2 : push rbp ; call 0xfffffffff0965808
0x000000000040ce62 : push rbp ; call 0xfffffffff09659b8
0x000000000040cf02 : push rbp ; call 0xfffffffff0965a58
0x0000000000406607 : push rbp ; clc ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000418666 : push rbp ; clc ; pop rbp ; ret
0x0000000000402644 : push rbp ; mov edi, 0x629e20 ; mov rbp, rsp ; call rax
0x00000000004182e0 : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000040eb75 : push rbp ; ror byte ptr [rax - 0x77], 1 ; ret 0xa1e8
0x000000000040d7d0 : push rbp ; sub rcx, qword ptr [rax + 1] ; ret 0x8b48
0x00000000004282d4 : push rsp ; and dword ptr [rax], eax ; add byte ptr [rax], cl ; add edi, edi ; jmp qword ptr [rdi]
0x0000000000425c78 : pushfq ; in al, -2 ; call rsp
0x0000000000405691 : pushfq ; ret 0xe280
0x0000000000408793 : pushfq ; test al, 0x62 ; add byte ptr [rcx - 0x77], al ; rol byte ptr [rbp + 0x29], cl ; ret 0x8941
0x000000000040bcec : rcl byte ptr [rdx] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b88c : rcr byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000413aa6 : rcr ebx, 0x7d ; loopne 0x413a8e ; insd dword ptr [rdi], dx ; loopne 0x413b13 ; ret
0x00000000004008e8 : ret
0x0000000000404334 : ret 0
0x000000000040ccba : ret 0x10
0x000000000041097a : ret 0x139
0x000000000040f19f : ret 0x148
0x0000000000405738 : ret 0x148a
0x0000000000419ae8 : ret 0x17
0x00000000004179fe : ret 0x1b2
0x000000000040448f : ret 0x1be8
0x000000000040a14c : ret 0x1ee8
0x00000000004023f2 : ret 0x227e
0x00000000004021f2 : ret 0x227f
0x0000000000401ff2 : ret 0x2280
0x0000000000403387 : ret 0x23e8
0x000000000041096a : ret 0x280f
0x00000000004087a9 : ret 0x2944
0x0000000000406188 : ret 0x2948
0x0000000000416d89 : ret 0x294c
0x000000000040796d : ret 0x294d
0x0000000000414c9c : ret 0x2ee8
0x0000000000413d7b : ret 0x2fe8
0x000000000041981d : ret 0x30
0x000000000041020b : ret 0x3040
0x000000000040f67d : ret 0x3141
0x000000000041d5f9 : ret 0x3145
0x000000000040351a : ret 0x3948
0x00000000004103f1 : ret 0x3b4
0x00000000004200c9 : ret 0x40
0x000000000041f968 : ret 0x4036
0x0000000000424fd1 : ret 0x41
0x0000000000424a00 : ret 0x4167
0x000000000040269b : ret 0x4237
0x0000000000405698 : ret 0x4589
0x000000000040a112 : ret 0x4810
0x0000000000408d3e : ret 0x4ce8
0x0000000000404da7 : ret 0x5588
0x0000000000409047 : ret 0x5589
0x000000000040a2c5 : ret 0x55e8
0x00000000004091dd : ret 0x5de8
0x000000000041ad58 : ret 0x62bb
0x00000000004065be : ret 0x6348
0x000000000041697f : ret 0x6451
0x0000000000402b96 : ret 0x64e8
0x000000000041ad46 : ret 0x66b0
0x000000000041a6e2 : ret 0x6709
0x000000000041a662 : ret 0x68c1
0x000000000041b7aa : ret 0x6948
0x000000000040531f : ret 0x8041
0x000000000040f683 : ret 0x8141
0x000000000040e5c9 : ret 0x8148
0x0000000000404cb5 : ret 0x8348
0x0000000000404caa : ret 0x840
0x000000000040962b : ret 0x840f
0x0000000000419b35 : ret 0x845
0x00000000004131ec : ret 0x8589
0x00000000004195c1 : ret 0x858b
0x000000000040b12e : ret 0x860f
0x000000000040a504 : ret 0x8840
0x000000000040f3b4 : ret 0x8844
0x000000000040879c : ret 0x8941
0x0000000000406c4f : ret 0x8948
0x0000000000416da8 : ret 0x8949
0x000000000041e419 : ret 0x8966
0x0000000000416f3c : ret 0x89a5
0x0000000000408cfe : ret 0x8b48
0x000000000040acb6 : ret 0x8b4c
0x00000000004065c5 : ret 0x8d0f
0x0000000000413811 : ret 0x941
0x0000000000402a5c : ret 0x9ee8
0x0000000000412b57 : ret 0xa
0x000000000040eb79 : ret 0xa1e8
0x0000000000400291 : ret 0xa9de
0x0000000000404704 : ret 0xb0
0x0000000000419823 : ret 0xb43d
0x0000000000402f45 : ret 0xb60f
0x0000000000414f83 : ret 0xb7e8
0x0000000000406c42 : ret 0xb848
0x000000000041f379 : ret 0xb849
0x0000000000411336 : ret 0xb948
0x00000000004132d1 : ret 0xbeb6
0x000000000041d459 : ret 0xc131
0x00000000004025e5 : ret 0xc148
0x000000000041b11e : ret 0xc281
0x000000000041f0e0 : ret 0xc2f6
0x0000000000408689 : ret 0xc7a
0x000000000041b79b : ret 0xca01
0x00000000004097af : ret 0xca21
0x0000000000402867 : ret 0xca29
0x000000000040f6aa : ret 0xca31
0x00000000004069f5 : ret 0xccb7
0x000000000041e53f : ret 0xd088
0x0000000000409705 : ret 0xd108
0x000000000040373e : ret 0xd284
0x0000000000413e8e : ret 0xd709
0x0000000000415443 : ret 0xd7e8
0x0000000000405692 : ret 0xe280
0x000000000041b069 : ret 0xe309
0x000000000041ad7b : ret 0xe56c
0x000000000041be6e : ret 0xea81
0x000000000041916b : ret 0xee64
0x000000000041764c : ret 0xee8
0x00000000004089ae : ret 0xf0
0x000000000040a519 : ret 0xf180
0x000000000041b905 : ret 0xf229
0x0000000000404c8e : ret 0xf280
0x000000000040589c : ret 0xf281
0x0000000000410981 : ret 0xf66
0x000000000041ae2e : ret 0xfa29
0x000000000041e414 : ret 0xfa31
0x0000000000405474 : ret 0xfa81
0x0000000000406e88 : ret 0xfac9
0x000000000041edea : ret 0xfe30
0x0000000000411d40 : ret 0xff3
0x000000000041a9b7 : ret 0xffe5
0x0000000000425c19 : ret 0xfffe
0x0000000000405db2 : ret 0xffff
0x000000000040a37a : ret 1
0x0000000000408683 : ret 2
0x0000000000400780 : ret 3
0x000000000041ad52 : ret 7
0x0000000000415bce : ret 8
0x000000000040e5cd : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000408799 : rol byte ptr [rbp + 0x29], cl ; ret 0x8941
0x000000000041e4c3 : rol byte ptr [rbp + 9], 1 ; ret
0x00000000004160a6 : rol byte ptr [rcx + rcx*4], 1 ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040cacc : rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004162f5 : rol byte ptr [rdi + 0x42], 0 ; jmp rcx
0x00000000004200d0 : rol dl, 0x40 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004200c1 : rol dword ptr [rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], ah ; ret 0x40
0x000000000040f508 : rol dword ptr [rcx + 0x21], cl ; ret
0x000000000041e1cb : rol dword ptr [rcx + rcx*4 - 0x38], 1 ; pop rbp ; ret
0x0000000000424fc9 : rol dword ptr [rcx], 0 ; add byte ptr [rax], al ; add byte ptr [rdi], bl ; ret 0x41
0x000000000041c720 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000410321 : ror byte ptr [r8 - 0x77], 1 ; ret 0x2948
0x00000000004102c2 : ror byte ptr [r8 - 0x77], 1 ; ret 0x8148
0x0000000000416230 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x41629b ; ret
0x000000000041e2ba : ror byte ptr [rax + 0x31], 1 ; xlatb ; or rax, rdi ; pop rbp ; ret
0x00000000004025ec : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4025fb ; pop rbp ; ret
0x000000000041c721 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000408d0b : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000416d86 : ror byte ptr [rax - 0x77], 1 ; ret 0x294c
0x000000000040a2c2 : ror byte ptr [rax - 0x77], 1 ; ret 0x55e8
0x00000000004102c3 : ror byte ptr [rax - 0x77], 1 ; ret 0x8148
0x000000000040eb76 : ror byte ptr [rax - 0x77], 1 ; ret 0xa1e8
0x0000000000416231 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x41629a ; ret
0x000000000040a05d : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x000000000040e3ef : ror byte ptr [rdi], -0x42 ; cmp al, byte ptr [rcx + 0x6dd966ef] ; ret
0x000000000040e397 : ror byte ptr [rdi], -0x42 ; cmp al, byte ptr [rcx - 0x429af939] ; ret
0x000000000041e41c : ror byte ptr [rdi], 1 ; mov bh, -0x40 ; pop rbp ; ret
0x000000000041e541 : ror byte ptr [rdi], 1 ; mov dh, -0x40 ; pop rbp ; ret
0x000000000041e4d6 : ror byte ptr [rdi], 1 ; mov dh, -0x40 ; pop rbx ; pop rbp ; ret
0x00000000004069fe : ror dword ptr [rax + 1], 1 ; ror dword ptr [rax - 0x48], 0x70 ; ret 0xccb7
0x0000000000419178 : ror dword ptr [rax - 0x46], 1 ; ret 0xee64
0x0000000000406a01 : ror dword ptr [rax - 0x48], 0x70 ; ret 0xccb7
0x0000000000408d3b : ror dword ptr [rax - 0x77], 1 ; ret 0x4ce8
0x000000000040796a : ror dword ptr [rbp - 0x77], cl ; ret 0x294d
0x000000000041bffa : sal dl, 1 ; addps xmm1, xmm2 ; movaps xmm0, xmm1 ; pop rbp ; ret
0x0000000000414c05 : salc ; call rsi
0x000000000040d7cc : salc ; jg 0x40d83d ; fcom qword ptr [rbp + 0x48] ; sub ecx, dword ptr [rax + 1] ; ret 0x8b48
0x0000000000412c63 : sar dh, -1 ; dec dword ptr [rdi] ; cdq ; ret 0xb60f
0x0000000000425c11 : sar dh, -1 ; sub al, 0x23 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret 0xfffe
0x00000000004025ee : sar eax, 1 ; jne 0x4025f9 ; pop rbp ; ret
0x00000000004025ed : sar rax, 1 ; jne 0x4025fa ; pop rbp ; ret
0x0000000000425c10 : sar sil, -1 ; sub al, 0x23 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret 0xfffe
0x0000000000413ef5 : sbb al, -0x37 ; test dword ptr [rcx], esp ; ret 0xd709
0x0000000000427388 : sbb byte ptr [rsi - 2], dh ; call qword ptr [rax]
0x000000000040cfaf : sbb eax, 0x4800002d ; add esp, 0x10 ; pop rbp ; ret
0x000000000040028c : sbb eax, 0x58f77adb ; ret 0xa9de
0x0000000000402f41 : sbb ebx, dword ptr [rbx + 0xf] ; xchg eax, ebp ; ret 0xb60f
0x0000000000406183 : scasb al, byte ptr [rdi] ; mov bh, byte ptr [rax + rcx*2 - 0x77] ; ret 0x2948
0x0000000000411134 : sete al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000404dc3 : setne al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000404dc5 : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000041099f : shl dword ptr [rsi + 0xf], 0x5c ; ret 0xf66
0x000000000040c065 : sldt word ptr [rax] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000427125 : sldt word ptr [rax] ; fsub dword ptr [rbx - 2] ; call rdi
0x00000000004261a2 : std ; call rax
0x00000000004261ea : std ; jmp qword ptr [rax]
0x00000000004261ca : std ; jmp qword ptr [rdx]
0x000000000042628a : std ; jmp qword ptr [rsi]
0x000000000040da0c : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000405c81 : sti ; ret
0x000000000040f4b7 : stosb byte ptr [rdi], al ; fiadd dword ptr [rcx - 0xa] ; jmp qword ptr [rcx]
0x0000000000413f76 : sub ah, byte ptr [rcx] ; ret 0xd709
0x00000000004266a9 : sub al, -2 ; jmp qword ptr [rbx]
0x0000000000425c14 : sub al, 0x23 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret 0xfffe
0x0000000000427288 : sub byte ptr [rcx - 2], ch ; call rsi
0x000000000040c064 : sub byte ptr [rdi], cl ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000427448 : sub byte ptr [rdx - 2], bh ; call qword ptr [rsi]
0x000000000041c000 : sub cl, al ; pop rbp ; ret
0x000000000041c73f : sub dword ptr [rdx], 0x5b ; ret
0x0000000000409112 : sub eax, esi ; sub rdi, rax ; mov rax, rdi ; pop rbp ; ret
0x0000000000402f3f : sub ecx, 0x950f5b1b ; ret 0xb60f
0x000000000040d7d2 : sub ecx, dword ptr [rax + 1] ; ret 0x8b48
0x0000000000409115 : sub edi, eax ; mov rax, rdi ; pop rbp ; ret
0x000000000041f7c1 : sub esp, 8 ; add rsp, 8 ; ret
0x000000000040d7d1 : sub rcx, qword ptr [rax + 1] ; ret 0x8b48
0x0000000000409114 : sub rdi, rax ; mov rax, rdi ; pop rbp ; ret
0x000000000041f7c0 : sub rsp, 8 ; add rsp, 8 ; ret
0x00000000004261e8 : test al, -0x31 ; std ; jmp qword ptr [rax]
0x0000000000415baf : test al, 0x48 ; mov esi, dword ptr [rbp - 0x60] ; call rax
0x0000000000406e83 : test al, 0x62 ; add byte ptr [rax - 0x46], cl ; ret 0xfac9
0x0000000000408794 : test al, 0x62 ; add byte ptr [rcx - 0x77], al ; rol byte ptr [rbp + 0x29], cl ; ret 0x8941
0x000000000041df0a : test al, 9 ; add al, 0x21 ; ret 0xd709
0x0000000000406103 : test byte ptr [rax], 0 ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041f75a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000413fe6 : test dh, dh ; cmove ecx, edx ; movsxd rax, ecx ; pop rbp ; ret
0x000000000040834b : test dword ptr [rax - 0x3900000f], esp ; jmp qword ptr [rax]
0x0000000000413ef7 : test dword ptr [rcx], esp ; ret 0xd709
0x000000000041ab2a : test dword ptr [rip - 0x17000000], eax ; ret
0x000000000041380c : test eax, 0x2140e457 ; ret 0x941
0x000000000041dc4c : vandnps xmm8, xmm10, xmmword ptr [rdx] ; jmp rcx
0x000000000041dccc : vandps xmm0, xmm6, xmmword ptr [rdx] ; jmp rcx
0x0000000000408ef5 : xchg dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040a503 : xchg eax, ebp ; ret 0x8840
0x0000000000402f44 : xchg eax, ebp ; ret 0xb60f
0x000000000040373d : xchg eax, ebp ; ret 0xd284
0x0000000000405731 : xchg eax, ebp ; ret 0xe280
0x0000000000404dc4 : xchg eax, ebp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000414c02 : xchg eax, ebx ; xchg eax, ecx ; salc ; call rsi
0x0000000000414c03 : xchg eax, ecx ; salc ; call rsi
0x00000000004134a1 : xchg eax, edx ; ret 0x8041
0x0000000000412bf7 : xchg eax, edx ; ret 0xe280
0x0000000000404da6 : xchg eax, esp ; ret 0x5588
0x0000000000403f48 : xchg eax, esp ; ret 0xd284
0x0000000000411135 : xchg eax, esp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000041e0d9 : xlatb ; or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x000000000041e2bd : xlatb ; or rax, rdi ; pop rbp ; ret
0x000000000040f196 : xor al, 0x6a ; imul eax, dword ptr [rax - 0x77], 0x7a ; add cl, byte ptr [rax - 0x77] ; ret 0x148
0x000000000040bf8c : xor byte ptr [rax], dl ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004058ae : xor byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x000000000041f46e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000417d57 : xor eax, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x00000000004160a5 : xor eax, edx ; mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000041bdde : xor ecx, dword ptr [rsi - 0x76b7ecf2] ; ret 0x148
0x000000000041e0d8 : xor edi, edx ; or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x000000000041e2bc : xor edi, edx ; or rax, rdi ; pop rbp ; ret
0x000000000041bddd : xor r9d, dword ptr [r14 - 0x76b7ecf2] ; ret 0x148
0x000000000041e2bb : xor rdi, rdx ; or rax, rdi ; pop rbp ; ret
