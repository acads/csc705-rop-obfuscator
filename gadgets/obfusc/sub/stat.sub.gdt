0x000000000040e90b : adc byte ptr [rcx + 0x45], ah ; xor ecx, dword ptr [rsi - 0x76b7ecf2] ; ret 0x148
0x00000000004026dc : adc byte ptr [rcx - 0xa], al ; jmp qword ptr [rcx]
0x00000000004198af : adc dword ptr [rax - 0x42], ecx ; ret
0x000000000041dd2d : adc eax, dword ptr [rax] ; add al, ah ; cmp edi, edi ; jmp rax
0x000000000040a369 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040e911 : adc ecx, dword ptr [rax - 0x77] ; ret 0x148
0x000000000041dd2c : adc r8, qword ptr [rax] ; add al, ah ; cmp edi, edi ; jmp rax
0x000000000041d5cb : add ah, ch ; or eax, dword ptr [rax] ; add al, dl ; fsin ; jmp qword ptr [rdi]
0x000000000041591a : add al, 0x24 ; mov al, 0 ; call 0x401b36
0x0000000000406da5 : add al, 0x25 ; ret
0x00000000004040bd : add al, 0x25 ; ret 0x41ab
0x000000000041dd2f : add al, ah ; cmp edi, edi ; jmp rax
0x000000000041c413 : add al, ah ; jnp 0x41c419 ; jmp rax
0x000000000041c463 : add al, al ; xchg esi, edi ; jmp qword ptr [rax]
0x0000000000406da0 : add al, byte ptr [rax] ; add byte ptr [rax - 0x73], cl ; add al, 0x25 ; ret
0x0000000000403f1d : add al, byte ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000408256 : add al, byte ptr [rax] ; add byte ptr [rcx + 0x21ca31c2], cl ; ret 0xfa81
0x0000000000419283 : add al, byte ptr [rax] ; add byte ptr [rcx - 0xdf43], al ; call qword ptr [rax]
0x00000000004043db : add al, ch ; call rdi
0x00000000004158bd : add al, ch ; insd dword ptr [rdi], dx ; ret 0xfffe
0x0000000000401fa7 : add al, ch ; ret
0x000000000041d5cf : add al, dl ; fsin ; jmp qword ptr [rdi]
0x000000000041c4d3 : add al, dl ; mov ah, -2 ; jmp rax
0x0000000000419bff : add bl, dh ; ret
0x00000000004031eb : add byte ptr [r8], al ; add byte ptr [rcx], al ; ret 0xea81
0x0000000000416714 : add byte ptr [rax + 1], cl ; ret 0xc148
0x00000000004198c3 : add byte ptr [rax - 0x42], cl ; ret
0x0000000000406da2 : add byte ptr [rax - 0x73], cl ; add al, 0x25 ; ret
0x00000000004040ba : add byte ptr [rax - 0x73], cl ; add al, 0x25 ; ret 0x41ab
0x0000000000407c96 : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x00000000004075b2 : add byte ptr [rax - 0x75], cl ; call 0x4902ff0a
0x000000000040799b : add byte ptr [rax - 0x75], cl ; call 0x490302f3
0x0000000000416ee5 : add byte ptr [rax - 0x75], cl ; clc ; mov rsp, rbp ; pop rbp ; ret
0x0000000000412462 : add byte ptr [rax - 0x75], cl ; loopne 0x4124cb ; ret
0x0000000000417dc9 : add byte ptr [rax - 0x75], cl ; push rbp ; call 0x2103ff21
0x000000000040f0fd : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000041881f : add byte ptr [rax - 0x77], cl ; fsubr st(1) ; ret 0xffff
0x000000000040b16d : add byte ptr [rax - 0x77], cl ; jge 0x40b170 ; pop rbp ; ret
0x0000000000414767 : add byte ptr [rax - 0x77], cl ; ret 0x20e8
0x00000000004147fa : add byte ptr [rax - 0x77], cl ; ret 0x8de8
0x00000000004040b7 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x73], cl ; add al, 0x25 ; ret 0x41ab
0x000000000041dd2a : add byte ptr [rax], al ; adc r8, qword ptr [rax] ; add al, ah ; cmp edi, edi ; jmp rax
0x00000000004043d9 : add byte ptr [rax], al ; add al, ch ; call rdi
0x0000000000401fa5 : add byte ptr [rax], al ; add al, ch ; ret
0x0000000000419bfd : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000416712 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0xc148
0x00000000004198c1 : add byte ptr [rax], al ; add byte ptr [rax - 0x42], cl ; ret
0x00000000004040b8 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add al, 0x25 ; ret 0x41ab
0x0000000000407c94 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x00000000004075b0 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; call 0x4902ff0c
0x0000000000407999 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; call 0x490302f5
0x0000000000412460 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; loopne 0x4124cd ; ret
0x0000000000417dc7 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbp ; call 0x2103ff23
0x000000000041881d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fsubr st(1) ; ret 0xffff
0x000000000040b16b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jge 0x40b172 ; pop rbp ; ret
0x0000000000419bfb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004009e0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004009e2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000408567 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040b16a : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x00000000004086e7 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000041245f : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x20] ; pop rbp ; ret
0x00000000004009e4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000417078 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x00000000004080b0 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret
0x0000000000408228 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0x3141
0x000000000040303c : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x5589
0x000000000040c0fa : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x858b
0x000000000040321d : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x9589
0x00000000004031ec : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xea81
0x00000000004044ef : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xfa81
0x00000000004031a5 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x9589
0x0000000000409a0e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000410305 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8841
0x00000000004026e8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000410414 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x0000000000416638 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x000000000040ac7e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040d65c : add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000410f9c : add byte ptr [rax], al ; add cl, ch ; ret 2
0x000000000040e9df : add byte ptr [rax], al ; add esi, eax ; mov eax, esi ; pop rbp ; ret
0x000000000040409b : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040a040 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b256 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040192b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000041d5ca : add byte ptr [rax], al ; in al, dx ; or eax, dword ptr [rax] ; add al, dl ; fsin ; jmp qword ptr [rdi]
0x0000000000401b49 : add byte ptr [rax], al ; jmp 0x401949
0x000000000040adfa : add byte ptr [rax], al ; mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040af2d : add byte ptr [rax], al ; mov eax, edi ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040b089 : add byte ptr [rax], al ; mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040aea1 : add byte ptr [rax], al ; mov eax, esi ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b16c : add byte ptr [rax], al ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000408902 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004086e9 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000412461 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x20] ; pop rbp ; ret
0x000000000041c3e2 : add byte ptr [rax], al ; nop ; movsxd rdi, esi ; jmp qword ptr [rax]
0x0000000000402a27 : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000403f1e : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040a000 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040e861 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000041c492 : add byte ptr [rax], al ; push rax ; mov esi, dr1 ; jmp rax
0x00000000004009e6 : add byte ptr [rax], al ; ret
0x000000000041cf87 : add byte ptr [rax], bl ; mov ch, -2 ; call rcx
0x000000000041c4e3 : add byte ptr [rax], dh ; mov dh, -2 ; jmp qword ptr [rax]
0x000000000041d16f : add byte ptr [rax], dl ; sar dh, cl ; jmp rdx
0x0000000000403f1f : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040a001 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040e862 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000041dd2b : add byte ptr [rbx + rdx], cl ; add al, ah ; cmp edi, edi ; jmp rax
0x0000000000407103 : add byte ptr [rbx - 0x1874b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004074e1 : add byte ptr [rbx - 0x1e34b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000402ad4 : add byte ptr [rbx - 0xc74b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000408258 : add byte ptr [rcx + 0x21ca31c2], cl ; ret 0xfa81
0x000000000041707a : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x00000000004080b2 : add byte ptr [rcx - 0x77], al ; ret
0x000000000040822a : add byte ptr [rcx - 0x77], al ; ret 0x3141
0x0000000000419285 : add byte ptr [rcx - 0xdf43], al ; call qword ptr [rax]
0x00000000004122dc : add byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x0000000000404ad7 : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401f58 : add byte ptr [rcx], al ; ret
0x000000000040303e : add byte ptr [rcx], al ; ret 0x5589
0x000000000040c0fc : add byte ptr [rcx], al ; ret 0x858b
0x000000000040321f : add byte ptr [rcx], al ; ret 0x9589
0x00000000004031ee : add byte ptr [rcx], al ; ret 0xea81
0x00000000004044f1 : add byte ptr [rcx], al ; ret 0xfa81
0x00000000004031a7 : add byte ptr [rcx], ch ; ret 0x9589
0x000000000041c3e0 : add byte ptr [rdi], al ; add byte ptr [rax], al ; nop ; movsxd rdi, esi ; jmp qword ptr [rax]
0x0000000000410f98 : add byte ptr [rdi], cl ; lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x000000000040b0ba : add byte ptr [rdi], cl ; mov bh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401fa1 : add byte ptr [rdi], cl ; test byte ptr [rdx], cl ; add byte ptr [rax], al ; add al, ch ; ret
0x000000000040d658 : add byte ptr [rdi], cl ; test dword ptr [rip - 0x17000000], eax ; ret
0x0000000000409a10 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000410307 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8841
0x00000000004026ea : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000410416 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x000000000041663a : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x000000000040ac80 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004043d8 : add byte ptr cs:[rax], al ; add al, ch ; call rdi
0x0000000000407a9c : add cl, byte ptr [rax - 0x77] ; ret 0x148
0x0000000000406493 : add cl, ch ; ret
0x0000000000410f9e : add cl, ch ; ret 2
0x00000000004166f5 : add dh, ch ; call 0x4933684c
0x000000000040f5d9 : add dword ptr [rax - 0x77], ecx ; ret 0x8148
0x000000000040e9dd : add dword ptr [rax], eax ; add byte ptr [rax], al ; add esi, eax ; mov eax, esi ; pop rbp ; ret
0x000000000040a32f : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040ef9a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000409fff : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000419472 : add dword ptr [rax], eax ; add byte ptr [rcx - 0xdf43], al ; call qword ptr [rax]
0x000000000041219d : add dword ptr [rax], ecx ; ret 0x840
0x000000000040c662 : add dword ptr [rcx + 0x20], eax ; ret 0x845
0x0000000000402c64 : add dword ptr [rcx + 8], eax ; ret 0x845
0x000000000040c648 : add dword ptr [rcx - 0x78], eax ; ret
0x000000000041035c : add dword ptr [rcx - 0x78], eax ; ret 0x3045
0x0000000000416f34 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404c7e : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000411e7a : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401f54 : add eax, 0x21d43e ; add ebx, esi ; ret
0x000000000040e2d5 : add eax, 0x6348ca01 ; ret 0x6948
0x0000000000412ca0 : add eax, 0x8301148b ; ret 0x89ee
0x000000000040d65b : add eax, 0xe9000000 ; ret
0x0000000000410f9b : add eax, 0xe9000000 ; ret 2
0x000000000040fe56 : add eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401f1b : add eax, edx ; sar rax, 1 ; jne 0x401f2c ; pop rbp ; ret
0x0000000000401f59 : add ebx, esi ; ret
0x000000000040e9e1 : add esi, eax ; mov eax, esi ; pop rbp ; ret
0x00000000004021ab : add esp, 0x10 ; pop rbp ; ret
0x0000000000404ad5 : add esp, 0x100 ; pop rbp ; ret
0x00000000004112cc : add esp, 0x130 ; pop rbp ; ret
0x0000000000404fd3 : add esp, 0x150 ; pop rbp ; ret
0x000000000040f96a : add esp, 0x190 ; pop rbp ; ret
0x000000000040f2cc : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000410aac : add esp, 0x1b0 ; pop rbp ; ret
0x0000000000417d74 : add esp, 0x1b8 ; pop rbp ; ret
0x0000000000419b81 : add esp, 0x1c0 ; pop rbp ; ret
0x0000000000411bfe : add esp, 0x1e0 ; pop rbp ; ret
0x0000000000403f77 : add esp, 0x20 ; pop rbp ; ret
0x00000000004022bd : add esp, 0x30 ; pop rbp ; ret
0x00000000004028dc : add esp, 0x40 ; pop rbp ; ret
0x0000000000405138 : add esp, 0x50 ; pop rbp ; ret
0x0000000000404c83 : add esp, 0x60 ; pop rbp ; ret
0x000000000041053e : add esp, 0x60 ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000407099 : add esp, 0x620 ; pop rbp ; ret
0x000000000040771d : add esp, 0x70 ; pop rbp ; ret
0x000000000040426f : add esp, 0x80 ; pop rbp ; ret
0x000000000040a65a : add esp, 0x90 ; pop rbp ; ret
0x000000000040e85d : add esp, 0x908 ; pop rbx ; pop rbp ; ret
0x000000000040f163 : add esp, 0xa0 ; pop rbp ; ret
0x0000000000402a23 : add esp, 0xb0 ; pop rbp ; ret
0x0000000000402c7f : add esp, 0xe0 ; pop rbp ; ret
0x000000000040192e : add esp, 8 ; ret
0x000000000040fe55 : add rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401f1a : add rax, rdx ; sar rax, 1 ; jne 0x401f2d ; pop rbp ; ret
0x00000000004021aa : add rsp, 0x10 ; pop rbp ; ret
0x0000000000404ad4 : add rsp, 0x100 ; pop rbp ; ret
0x00000000004112cb : add rsp, 0x130 ; pop rbp ; ret
0x0000000000404fd2 : add rsp, 0x150 ; pop rbp ; ret
0x000000000040f969 : add rsp, 0x190 ; pop rbp ; ret
0x000000000040f2cb : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000410aab : add rsp, 0x1b0 ; pop rbp ; ret
0x0000000000417d73 : add rsp, 0x1b8 ; pop rbp ; ret
0x0000000000419b80 : add rsp, 0x1c0 ; pop rbp ; ret
0x0000000000411bfd : add rsp, 0x1e0 ; pop rbp ; ret
0x0000000000403f76 : add rsp, 0x20 ; pop rbp ; ret
0x00000000004022bc : add rsp, 0x30 ; pop rbp ; ret
0x00000000004028db : add rsp, 0x40 ; pop rbp ; ret
0x0000000000405137 : add rsp, 0x50 ; pop rbp ; ret
0x0000000000404c82 : add rsp, 0x60 ; pop rbp ; ret
0x000000000041053d : add rsp, 0x60 ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000407098 : add rsp, 0x620 ; pop rbp ; ret
0x000000000040771c : add rsp, 0x70 ; pop rbp ; ret
0x000000000040426e : add rsp, 0x80 ; pop rbp ; ret
0x000000000040a659 : add rsp, 0x90 ; pop rbp ; ret
0x000000000040e85c : add rsp, 0x908 ; pop rbx ; pop rbp ; ret
0x000000000040f162 : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000402a22 : add rsp, 0xb0 ; pop rbp ; ret
0x0000000000402c7e : add rsp, 0xe0 ; pop rbp ; ret
0x000000000040192d : add rsp, 8 ; ret
0x0000000000411e79 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040709b : and byte ptr [rsi], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401f57 : and dword ptr [rax], eax ; add ebx, esi ; ret
0x000000000040773f : and eax, 0x61f430 ; pop rbp ; ret
0x0000000000407763 : and eax, 0x61f438 ; pop rbp ; ret
0x0000000000408018 : and esi, dword ptr [rcx] ; adc byte ptr [rcx - 0xa], al ; jmp qword ptr [rcx]
0x0000000000408017 : and r14d, dword ptr [r9] ; adc byte ptr [rcx - 0xa], al ; jmp qword ptr [rcx]
0x000000000040e2c8 : call 0x2036bf0
0x000000000040e30c : call 0x2036c34
0x000000000040e355 : call 0x2036c7d
0x0000000000417dcd : call 0x2103ff1d
0x000000000040eae7 : call 0x401999
0x0000000000415879 : call 0x401b32
0x0000000000402dc6 : call 0x401bd7
0x00000000004198ac : call 0x485323ff
0x00000000004198ab : call 0x48532400
0x00000000004075b6 : call 0x4902ff06
0x00000000004075b5 : call 0x4902ff07
0x000000000040799f : call 0x490302ef
0x000000000040799e : call 0x490302f0
0x00000000004166f7 : call 0x4933684a
0x000000000040a039 : call 0xffffffffe9032989
0x000000000040a038 : call 0xffffffffe903298a
0x0000000000419bd9 : call qword ptr [r12 + rbx*8]
0x000000000040e476 : call qword ptr [rax]
0x0000000000419544 : call qword ptr [rbx]
0x000000000041946b : call qword ptr [rcx]
0x00000000004194fc : call qword ptr [rdx]
0x00000000004194ac : call qword ptr [rsi]
0x0000000000419bda : call qword ptr [rsp + rbx*8]
0x0000000000401f7d : call rax
0x0000000000409d8c : call rbx
0x000000000041cf8b : call rcx
0x00000000004043dd : call rdi
0x000000000040af30 : clc ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004112ca : clc ; add rsp, 0x130 ; pop rbp ; ret
0x0000000000404fd1 : clc ; add rsp, 0x150 ; pop rbp ; ret
0x0000000000407ee6 : clc ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040439b : clc ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404302 : clc ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000407097 : clc ; add rsp, 0x620 ; pop rbp ; ret
0x000000000040771b : clc ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004116fb : clc ; add rsp, 0xb0 ; pop rbp ; ret
0x0000000000401f1f : clc ; jne 0x401f28 ; pop rbp ; ret
0x0000000000404fe6 : clc ; mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000408ad5 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040fdab : clc ; mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x000000000041235f : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040751e : clc ; mov rax, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040b10b : clc ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000040b14b : clc ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000040b12b : clc ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000407522 : clc ; mov rsp, rbp ; pop rbp ; ret
0x000000000040ae17 : clc ; pop rbp ; ret
0x00000000004021d7 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000417d72 : cld ; add rsp, 0x1b8 ; pop rbp ; ret
0x0000000000419b7f : cld ; add rsp, 0x1c0 ; pop rbp ; ret
0x000000000040ad46 : cld ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004106aa : cld ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000411e3f : cld ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040fd92 : cld ; add rsp, 0x70 ; pop rbp ; ret
0x000000000041235c : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040ad8f : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041133b : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004106a7 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000411e3c : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004170ca : cld ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004170cd : cld ; pop rbp ; ret
0x0000000000419282 : cli ; add al, byte ptr [rax] ; add byte ptr [rcx - 0xdf43], al ; call qword ptr [rax]
0x000000000040e2d4 : cli ; add eax, 0x6348ca01 ; ret 0x6948
0x0000000000407c99 : cmp al, 0x25 ; ret
0x000000000040eaee : cmp al, 0x25 ; ret 0x41bd
0x000000000041dd51 : cmp bh, bh ; call qword ptr [rsi]
0x0000000000418270 : cmp byte ptr [rcx - 0x77], al ; ret 0x8141
0x0000000000418264 : cmp byte ptr [rcx], ah ; ret 0x8941
0x0000000000419181 : cmp dh, -1 ; dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; cwde ; ret 0x41
0x000000000041952a : cmp dword ptr [rcx - 0xf], eax ; jmp qword ptr [rcx]
0x0000000000411ae9 : cmp dword ptr [rdx - 0x76be63d5], ebx ; ret
0x000000000040c348 : cmp eax, 0x811851b4 ; ret 0x30
0x0000000000401edd : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401ef0 ; pop rbp ; ret
0x0000000000413ed1 : cmp edi, dword ptr [rdx + 0x5a5335da] ; ret
0x000000000041dd31 : cmp edi, edi ; jmp rax
0x000000000040eadc : cwde ; mov rcx, qword ptr [rax*8 + 0x41bc90] ; jmp rcx
0x0000000000419189 : cwde ; ret 0x41
0x00000000004048aa : dec dword ptr [rax + 0x29] ; ret 0x148
0x000000000041c97f : dec dword ptr [rax + 0x6000001d] ; fdivr st(7) ; call rax
0x0000000000402dca : dec dword ptr [rax - 0x42] ; ret 0x173d
0x0000000000413ece : dec dword ptr [rax - 0x46] ; cmp edi, dword ptr [rdx + 0x5a5335da] ; ret
0x000000000040eaeb : dec dword ptr [rax - 0x73] ; cmp al, 0x25 ; ret 0x41bd
0x0000000000419184 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; cwde ; ret 0x41
0x0000000000418f1b : dec dword ptr [rax - 0x75] ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 1
0x0000000000415917 : dec dword ptr [rax - 0x77] ; add al, 0x24 ; mov al, 0 ; call 0x401b39
0x000000000041055d : dec dword ptr [rax - 0x77] ; jge 0x410560 ; pop rbp ; ret
0x0000000000411004 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000403df1 : dec dword ptr [rax - 0x77] ; ret 0x36e8
0x00000000004038de : dec dword ptr [rax - 0x77] ; ret 0x49e8
0x0000000000405320 : dec dword ptr [rax - 0x77] ; ret 0x7e8
0x0000000000413acf : dec dword ptr [rax - 0x77] ; ret 0x8148
0x0000000000403ae8 : dec dword ptr [rax - 0x77] ; ret 0x8fe8
0x0000000000403782 : dec dword ptr [rax - 0x77] ; ret 0xa5e8
0x0000000000402ada : dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000403b72 : dec dword ptr [rax - 0x77] ; ret 0xb5e8
0x0000000000403c65 : dec dword ptr [rax - 0x77] ; ret 0xc2e8
0x0000000000403645 : dec dword ptr [rax - 0x77] ; ret 0xe2e8
0x0000000000403542 : dec dword ptr [rax - 0x77] ; ret 0xe5e8
0x0000000000403840 : dec dword ptr [rax - 0x77] ; ret 0xe7e8
0x0000000000403d2b : dec dword ptr [rax - 0x77] ; ret 0xfce8
0x000000000040372a : dec dword ptr [rax - 0x77] ; ret 0xfde8
0x0000000000402344 : dec dword ptr [rax - 0x77] ; test al, -0x18 ; ret 0xfff6
0x0000000000418ecb : dec dword ptr [rcx + 0x31c621d6] ; ret 0xd609
0x000000000040e42f : dec dword ptr [rcx - 0x7628d639] ; ret 0xf229
0x0000000000409792 : dec dword ptr [rcx - 0x77] ; ret 0x294d
0x000000000040de99 : dec dword ptr [rdi] ; pushfq ; ret 0xe280
0x00000000004029f6 : dec dword ptr [rdx - 0x907b] ; inc dword ptr [rcx - 0x78] ; ret 0x8041
0x0000000000402c3d : dec dword ptr [rdx - 0xb87b] ; inc dword ptr [rcx - 0x78] ; ret 0x8041
0x0000000000413ede : enter -0x46b8, 0x3b ; mov edx, 0x5a5335da ; ret
0x00000000004051ca : enter 0x419e, 0 ; jmp rcx
0x0000000000409b20 : enter 0x4b05, 0x34 ; fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x000000000041c985 : fdivr st(7) ; call rax
0x0000000000408068 : fiadd dword ptr [rcx - 0xa] ; jmp qword ptr [rcx]
0x0000000000409b24 : fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x00000000004113f2 : fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x0000000000404d6d : fmul dword ptr [r8 - 0x77] ; ret 0x8148
0x00000000004113f3 : fmul dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000404d6e : fmul dword ptr [rax - 0x77] ; ret 0x8148
0x000000000040283a : fmul dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000418f1f : fmul dword ptr [rax - 0x7f] ; ret 1
0x0000000000419bdc : fmul qword ptr [rax - 0x7d] ; ret
0x000000000041d571 : fsin ; jmp qword ptr [rdi]
0x000000000040ac28 : fsubr st(0) ; ret 0x59
0x0000000000418823 : fsubr st(1) ; ret 0xffff
0x00000000004021a9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401ef0 : hlt ; pop rbp ; mov edi, 0x61f340 ; jmp rax
0x0000000000402342 : idiv bh ; dec dword ptr [rax - 0x77] ; test al, -0x18 ; ret 0xfff6
0x0000000000407a98 : imul eax, dword ptr [rax - 0x77], 0x7a ; add cl, byte ptr [rax - 0x77] ; ret 0x148
0x000000000040add4 : imul edi, edi, -1 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403f75 : in al, 0x48 ; add esp, 0x20 ; pop rbp ; ret
0x00000000004040b6 : in al, dx ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x73], cl ; add al, 0x25 ; ret 0x41ab
0x000000000040ad43 : in al, dx ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041d5cc : in al, dx ; or eax, dword ptr [rax] ; add al, dl ; fsin ; jmp qword ptr [rdi]
0x0000000000407525 : in al, dx ; pop rbp ; ret
0x000000000040ae13 : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x00000000004026e6 : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x00000000004100a7 : inc dword ptr [rax + 0x2041f3ca] ; rol byte ptr [rbp + 8], 1 ; ret 0x8844
0x000000000041c45f : inc dword ptr [rax] ; or dword ptr [rax], eax ; add al, al ; xchg esi, edi ; jmp qword ptr [rax]
0x000000000041c4df : inc dword ptr [rax] ; or eax, dword ptr [rax] ; add byte ptr [rax], dh ; mov dh, -2 ; jmp qword ptr [rax]
0x0000000000403e95 : inc dword ptr [rbp - 0x77] ; ret
0x000000000040dc46 : inc dword ptr [rcx - 0x32c9d916] ; or dword ptr [rcx], eax ; ret 0xc281
0x00000000004029fc : inc dword ptr [rcx - 0x78] ; ret 0x8041
0x0000000000409dab : inc dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x000000000041c4cf : inc eax ; or al, byte ptr [rax] ; add al, dl ; mov ah, -2 ; jmp rax
0x00000000004158bf : insd dword ptr [rdi], dx ; ret 0xfffe
0x000000000040f105 : int 0x80
0x0000000000406d9f : int1 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x73], cl ; add al, 0x25 ; ret
0x000000000041035b : int1 ; add dword ptr [rcx - 0x78], eax ; ret 0x3045
0x00000000004105b0 : int1 ; jmp qword ptr [rax]
0x0000000000401ee3 : ja 0x401eea ; pop rbp ; ret
0x0000000000404e09 : jae 0x404e4b ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401eef : je 0x401eed ; pop rbp ; mov edi, 0x61f340 ; jmp rax
0x000000000040ae16 : jge 0x40ae13 ; pop rbp ; ret
0x000000000040b10a : jge 0x40b10b ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000040b12a : jge 0x40b12b ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000040b14a : jge 0x40b14b ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000040b170 : jge 0x40b16d ; pop rbp ; ret
0x000000000040fdaa : jge 0x40fdad ; mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x0000000000410560 : jge 0x41055d ; pop rbp ; ret
0x000000000041c425 : jl 0x41c427 ; jmp qword ptr [rax]
0x0000000000416fb8 : jmp 0x32f0c6
0x0000000000401b4b : jmp 0x401947
0x0000000000404c38 : jmp 0x404c57
0x0000000000406d9e : jmp 0x40709d
0x0000000000407c92 : jmp 0x407cb1
0x0000000000415667 : jmp 0x415678
0x0000000000417474 : jmp 0x4174b9
0x0000000000414824 : jmp 0xffffffff8a03d13c
0x000000000040f5d8 : jmp 0xffffffffc2ca3de2
0x00000000004105b1 : jmp qword ptr [rax]
0x0000000000405ae7 : jmp qword ptr [rbx - 0x3d]
0x000000000041cd2b : jmp qword ptr [rbx]
0x00000000004026e2 : jmp qword ptr [rcx]
0x000000000041d573 : jmp qword ptr [rdi]
0x000000000041d1b3 : jmp qword ptr [rdx]
0x0000000000401ef7 : jmp rax
0x00000000004034fb : jmp rcx
0x0000000000401f37 : jmp rdx
0x0000000000401f20 : jne 0x401f27 ; pop rbp ; ret
0x000000000041c415 : jnp 0x41c417 ; jmp rax
0x000000000040771f : jo 0x407780 ; ret
0x0000000000408c25 : jo 0x408c86 ; ret
0x000000000040a24f : jo 0x40a2b5 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040a8f4 : jo 0x40a955 ; ret
0x000000000040aa2e : jo 0x40aa8f ; ret
0x000000000040b12f : jo 0x40b190 ; ret
0x000000000040b12e : jo 0x40b191 ; ret
0x000000000040fd96 : jo 0x40fdf7 ; ret
0x0000000000410f9a : lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x000000000040c0ef : ljmp ptr [rcx] ; ret 0x858b
0x0000000000402c81 : loopne 0x402c88 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040348e : loopne 0x403495 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000411c00 : loopne 0x411c08 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000412466 : loopne 0x4124c7 ; ret
0x0000000000412465 : loopne 0x4124c8 ; ret
0x000000000041c4d5 : mov ah, -2 ; jmp rax
0x000000000040528c : mov al, -0x77 ; ret 0xca29
0x0000000000402a25 : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000415877 : mov al, 0 ; call 0x401b34
0x000000000040a7cb : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040a658 : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000410aae : mov al, 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000411e76 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040b0bc : mov bh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040411c : mov bl, 0x2f ; mov es, word ptr [rcx - 0xe] ; jmp qword ptr [rcx]
0x0000000000407761 : mov byte ptr [0x61f438], al ; pop rbp ; ret
0x000000000040e2c5 : mov byte ptr [rax - 0x3f], cl ; call 0x2036bf3
0x000000000040e309 : mov byte ptr [rax - 0x3f], cl ; call 0x2036c37
0x000000000040e352 : mov byte ptr [rax - 0x3f], cl ; call 0x2036c80
0x00000000004051c5 : mov byte ptr [rax - 0x75], cl ; or al, 0xffffffffffffffc5 ; enter 0x419e, 0 ; jmp rcx
0x000000000040848b : mov byte ptr [rbp - 1], 0x3f ; movsx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000404fe7 : mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000408302 : mov byte ptr [rdx + 0xb], 0 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401f53 : mov byte ptr [rip + 0x21d43e], 1 ; ret
0x000000000041cf89 : mov ch, -2 ; call rcx
0x0000000000413a0c : mov cl, -0x32 ; ret
0x000000000040e90f : mov cs, word ptr [rsi] ; adc ecx, dword ptr [rax - 0x77] ; ret 0x148
0x0000000000416f36 : mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404c80 : mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000411e7c : mov dh, -0x40 ; pop rbp ; ret
0x000000000041c4e5 : mov dh, -2 ; jmp qword ptr [rax]
0x000000000040773d : mov dword ptr [0x61f430], edi ; pop rbp ; ret
0x0000000000408ad6 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040e2c2 : mov dword ptr [rax - 0x3eb77778], ecx ; call 0x2036bf6
0x000000000040e306 : mov dword ptr [rax - 0x3eb77778], ecx ; call 0x2036c3a
0x000000000040e34f : mov dword ptr [rax - 0x3eb77778], ecx ; call 0x2036c83
0x0000000000408a98 : mov dword ptr [rax], eax ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000408954 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000408a97 : mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000041252c : mov dword ptr [rbp - 0x18], eax ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000403f73 : mov dword ptr [rbp - 0x1c], eax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004022b9 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404de5 : mov dword ptr [rbp - 0x40], eax ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000405134 : mov dword ptr [rbp - 0x44], eax ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004021a7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004021d5 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004170c8 : mov dword ptr [rbp - 4], edx ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000041235d : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040ae15 : mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x0000000000408b4e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040fdac : mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x0000000000415919 : mov dword ptr [rsp], eax ; mov al, 0 ; call 0x401b37
0x0000000000417d76 : mov eax, 0x5d000001 ; ret
0x0000000000403097 : mov eax, 0x8111be0f ; ret 0x3da7
0x0000000000408908 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040789d : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407c33 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004028d8 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000408905 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040b191 : mov eax, dword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000407b8f : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004079c0 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004088bd : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040894e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004086ec : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000412464 : mov eax, dword ptr [rbp - 0x20] ; pop rbp ; ret
0x0000000000408a9a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000408c1f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040a7c9 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000402fa1 : mov eax, dword ptr [rbp - 0xa0] ; call rax
0x000000000040ad90 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040ad44 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004106a8 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000411e3d : mov eax, dword ptr [rbp - 4] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040fd90 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004170cb : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040f806 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407ee4 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404399 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000407719 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000407520 : mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000412360 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040b10d : mov eax, dword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000040b14d : mov eax, dword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000040b12d : mov eax, dword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000040adfc : mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040af2f : mov eax, edi ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040b08b : mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040aea3 : mov eax, esi ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040e9e3 : mov eax, esi ; pop rbp ; ret
0x0000000000401f7b : mov ebp, esp ; call rax
0x0000000000401ee1 : mov ebp, esp ; ja 0x401eec ; pop rbp ; ret
0x000000000040ae12 : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000040d87d : mov ebx, 0x81524f62 ; ret 7
0x0000000000413ee0 : mov ecx, 0x35daba3b ; push rbx ; pop rdx ; ret
0x000000000040f11d : mov ecx, 0x5b2a830a ; ret
0x00000000004034f4 : mov ecx, dword ptr [rax*8 + 0x419c80] ; jmp rcx
0x00000000004050ab : mov ecx, dword ptr [rax*8 + 0x419e50] ; jmp rcx
0x0000000000405085 : mov ecx, dword ptr [rax*8 + 0x419e98] ; jmp rcx
0x00000000004051c7 : mov ecx, dword ptr [rax*8 + 0x419ec8] ; jmp rcx
0x0000000000406324 : mov ecx, dword ptr [rax*8 + 0x419f68] ; jmp rcx
0x0000000000408ce2 : mov ecx, dword ptr [rax*8 + 0x41b490] ; jmp rcx
0x0000000000409006 : mov ecx, dword ptr [rax*8 + 0x41b4d8] ; jmp rcx
0x000000000040b7cd : mov ecx, dword ptr [rax*8 + 0x41b998] ; jmp rcx
0x000000000040e39a : mov ecx, dword ptr [rax*8 + 0x41bc48] ; jmp rcx
0x000000000040eade : mov ecx, dword ptr [rax*8 + 0x41bc90] ; jmp rcx
0x0000000000414cc6 : mov ecx, dword ptr [rax*8 + 0x41c108] ; jmp rcx
0x0000000000412cc7 : mov ecx, dword ptr [rax*8 + 0x41c190] ; jmp rcx
0x0000000000417127 : mov ecx, dword ptr [rax*8 + 0x41c1c0] ; jmp rcx
0x0000000000419186 : mov ecx, dword ptr [rax*8 + 0x41c298] ; jmp rcx
0x0000000000408951 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401f75 : mov edi, 0x61ee20 ; mov rbp, rsp ; call rax
0x0000000000401ef2 : mov edi, 0x61f340 ; jmp rax
0x0000000000401f32 : mov edi, 0x61f340 ; jmp rdx
0x000000000040b109 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000040b149 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000040b129 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000402dc4 : mov edi, eax ; call 0x401bd9
0x0000000000415875 : mov edi, eax ; mov al, 0 ; call 0x401b36
0x0000000000419bd7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000419bd6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000413ed0 : mov edx, 0x35daba3b ; push rbx ; pop rdx ; ret
0x0000000000413ed2 : mov edx, 0x5a5335da ; ret
0x0000000000404b49 : mov edx, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404300 : mov edx, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040b195 : mov edx, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040411e : mov es, word ptr [rcx - 0xe] ; jmp qword ptr [rcx]
0x0000000000403218 : mov esi, 0x302d0151 ; add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x9589
0x00000000004044ea : mov esi, 0x302dff51 ; add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xfa81
0x00000000004031e7 : mov esi, 0x412d0151 ; add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xea81
0x000000000041c495 : mov esi, dr1 ; jmp rax
0x0000000000401f30 : mov esi, eax ; mov edi, 0x61f340 ; jmp rdx
0x0000000000405136 : mov esp, 0x50c48348 ; pop rbp ; ret
0x0000000000407524 : mov esp, ebp ; pop rbp ; ret
0x000000000040773c : mov qword ptr [0x61f430], rdi ; pop rbp ; ret
0x000000000041252b : mov qword ptr [rbp - 0x18], rax ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000404de4 : mov qword ptr [rbp - 0x40], rax ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040ae14 : mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000408b4d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000415918 : mov qword ptr [rsp], rax ; mov al, 0 ; call 0x401b38
0x0000000000405135 : mov r12d, 0x50c48348 ; pop rbp ; ret
0x000000000040528b : mov r8b, -0x77 ; ret 0xca29
0x000000000040a7ca : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040789c : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407c32 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004028d7 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000408904 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040b190 : mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000407b8e : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004079bf : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004088bc : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004086eb : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000412463 : mov rax, qword ptr [rbp - 0x20] ; pop rbp ; ret
0x0000000000408c1e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040a7c8 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000402fa0 : mov rax, qword ptr [rbp - 0xa0] ; call rax
0x000000000040f805 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407ee3 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404398 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000407718 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040751f : mov rax, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040b10c : mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000040b14c : mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000040b12c : mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000401f7a : mov rbp, rsp ; call rax
0x0000000000401ee0 : mov rbp, rsp ; ja 0x401eed ; pop rbp ; ret
0x000000000040ae11 : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x00000000004034f3 : mov rcx, qword ptr [rax*8 + 0x419c80] ; jmp rcx
0x00000000004050aa : mov rcx, qword ptr [rax*8 + 0x419e50] ; jmp rcx
0x0000000000405084 : mov rcx, qword ptr [rax*8 + 0x419e98] ; jmp rcx
0x00000000004051c6 : mov rcx, qword ptr [rax*8 + 0x419ec8] ; jmp rcx
0x0000000000406323 : mov rcx, qword ptr [rax*8 + 0x419f68] ; jmp rcx
0x0000000000408ce1 : mov rcx, qword ptr [rax*8 + 0x41b490] ; jmp rcx
0x0000000000409005 : mov rcx, qword ptr [rax*8 + 0x41b4d8] ; jmp rcx
0x000000000040b7cc : mov rcx, qword ptr [rax*8 + 0x41b998] ; jmp rcx
0x000000000040e399 : mov rcx, qword ptr [rax*8 + 0x41bc48] ; jmp rcx
0x000000000040eadd : mov rcx, qword ptr [rax*8 + 0x41bc90] ; jmp rcx
0x0000000000414cc5 : mov rcx, qword ptr [rax*8 + 0x41c108] ; jmp rcx
0x0000000000412cc6 : mov rcx, qword ptr [rax*8 + 0x41c190] ; jmp rcx
0x0000000000417126 : mov rcx, qword ptr [rax*8 + 0x41c1c0] ; jmp rcx
0x0000000000419185 : mov rcx, qword ptr [rax*8 + 0x41c298] ; jmp rcx
0x000000000040b108 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000040b148 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000040b128 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000415874 : mov rdi, rax ; mov al, 0 ; call 0x401b37
0x0000000000404b48 : mov rdx, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004042ff : mov rdx, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040b194 : mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000401f2f : mov rsi, rax ; mov edi, 0x61f340 ; jmp rdx
0x0000000000407523 : mov rsp, rbp ; pop rbp ; ret
0x000000000040c615 : mov word ptr [rax - 0x7f], cs ; ret 0x17
0x0000000000400198 : movabs al, byte ptr [0xa0000000000001c3] ; ret
0x00000000004001a0 : movabs al, byte ptr [0xa0000000000041c3] ; ret
0x000000000040848f : movsx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000416f8a : movsx eax, cl ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041c3e5 : movsxd rdi, esi ; jmp qword ptr [rax]
0x0000000000416f35 : movzx eax, al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404c7f : movzx eax, al ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000411e7b : movzx eax, al ; pop rbp ; ret
0x0000000000404fea : movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x000000000040b0bb : movzx eax, cx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041c3e4 : nop ; movsxd rdi, esi ; jmp qword ptr [rax]
0x0000000000419bf8 : nop dword ptr [rax + rax] ; ret
0x000000000040936d : or al, 0x18 ; ret 0x6451
0x0000000000419187 : or al, 0xffffffffffffffc5 ; cwde ; ret 0x41
0x00000000004051c8 : or al, 0xffffffffffffffc5 ; enter 0x419e, 0 ; jmp rcx
0x000000000041c4d1 : or al, byte ptr [rax] ; add al, dl ; mov ah, -2 ; jmp rax
0x0000000000406490 : or byte ptr [r8], al ; add cl, ch ; ret
0x0000000000404d6a : or byte ptr [rax - 0x75], cl ; fmul dword ptr [r8 - 0x77] ; ret 0x8148
0x000000000040b254 : or byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406491 : or byte ptr [rax], al ; add cl, ch ; ret
0x0000000000407146 : or byte ptr [rcx - 0xe], al ; jmp qword ptr [rcx]
0x000000000040e85f : or byte ptr [rcx], cl ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000041c461 : or dword ptr [rax], eax ; add al, al ; xchg esi, edi ; jmp qword ptr [rax]
0x000000000040e860 : or dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040dc4c : or dword ptr [rcx], eax ; ret 0xc281
0x000000000041d5cd : or eax, dword ptr [rax] ; add al, dl ; fsin ; jmp qword ptr [rdi]
0x000000000040a9b1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041c4e1 : or eax, dword ptr [rax] ; add byte ptr [rax], dh ; mov dh, -2 ; jmp qword ptr [rax]
0x0000000000408304 : or eax, dword ptr [rax] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004166f6 : out dx, al ; call 0x4933684b
0x000000000040bc9d : out dx, al ; ret
0x0000000000419bec : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040a251 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000419bee : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000403f21 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000419bf0 : pop r14 ; pop r15 ; ret
0x000000000040a003 : pop r14 ; pop rbp ; ret
0x0000000000403f23 : pop r15 ; pop rbp ; ret
0x0000000000419bf2 : pop r15 ; ret
0x0000000000401f52 : pop rbp ; mov byte ptr [rip + 0x21d43e], 1 ; ret
0x0000000000401ef1 : pop rbp ; mov edi, 0x61f340 ; jmp rax
0x0000000000401f2e : pop rbp ; mov rsi, rax ; mov edi, 0x61f340 ; jmp rdx
0x0000000000419beb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000419bef : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401ee5 : pop rbp ; ret
0x000000000040a250 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403f20 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040a002 : pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040e863 : pop rbx ; pop rbp ; ret
0x000000000040f121 : pop rbx ; ret
0x0000000000403f24 : pop rdi ; pop rbp ; ret
0x0000000000419bf3 : pop rdi ; ret
0x0000000000413ed6 : pop rdx ; ret
0x0000000000403f22 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000419bf1 : pop rsi ; pop r15 ; ret
0x000000000040a004 : pop rsi ; pop rbp ; ret
0x0000000000419bed : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040a252 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040b10e : push r8 ; pop rbp ; ret
0x000000000041c494 : push rax ; mov esi, dr1 ; jmp rax
0x000000000040513a : push rax ; pop rbp ; ret
0x0000000000417dcc : push rbp ; call 0x2103ff1e
0x0000000000404b4a : push rbp ; clc ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404301 : push rbp ; clc ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040b196 : push rbp ; clc ; pop rbp ; ret
0x00000000004170c9 : push rbp ; cld ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000418f1e : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 1
0x0000000000401f74 : push rbp ; mov edi, 0x61ee20 ; mov rbp, rsp ; call rax
0x000000000040ae10 : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000413ed5 : push rbx ; pop rdx ; ret
0x000000000041826f : push rsp ; cmp byte ptr [rcx - 0x77], al ; ret 0x8141
0x0000000000418263 : push rsp ; cmp byte ptr [rcx], ah ; ret 0x8941
0x000000000040de9b : pushfq ; ret 0xe280
0x0000000000400199 : ret
0x00000000004111d2 : ret 0
0x000000000041130a : ret 0x10
0x00000000004048ad : ret 0x148
0x00000000004036df : ret 0x160d
0x000000000040c618 : ret 0x17
0x0000000000402dcd : ret 0x173d
0x0000000000403bb3 : ret 0x17e8
0x000000000040a3ee : ret 0x1b2
0x00000000004173e8 : ret 0x1fe4
0x0000000000417dd0 : ret 0x20
0x000000000041476a : ret 0x20e8
0x0000000000401d52 : ret 0x21d4
0x0000000000401b52 : ret 0x21d5
0x0000000000401942 : ret 0x21d6
0x0000000000410a45 : ret 0x26a8
0x00000000004075b9 : ret 0x2948
0x0000000000409779 : ret 0x294c
0x0000000000409795 : ret 0x294d
0x00000000004031fe : ret 0x29a0
0x00000000004036f0 : ret 0x2ae8
0x0000000000402f01 : ret 0x2c6
0x0000000000403fae : ret 0x2ce8
0x000000000040c34d : ret 0x30
0x000000000041035f : ret 0x3045
0x000000000040822d : ret 0x3141
0x0000000000403df4 : ret 0x36e8
0x000000000040309c : ret 0x3da7
0x0000000000417473 : ret 0x3eeb
0x0000000000417920 : ret 0x41
0x00000000004040bf : ret 0x41ab
0x000000000040eaf0 : ret 0x41bd
0x0000000000417086 : ret 0x4589
0x00000000004038e1 : ret 0x49e8
0x0000000000402e3e : ret 0x4ce8
0x0000000000405120 : ret 0x4d8b
0x00000000004097ad : ret 0x4de8
0x0000000000417967 : ret 0x54c8
0x0000000000410419 : ret 0x5588
0x0000000000403040 : ret 0x5589
0x000000000040ac2a : ret 0x59
0x00000000004114ef : ret 0x5d9a
0x000000000041715b : ret 0x5ef2
0x000000000040d888 : ret 0x62bb
0x000000000040936f : ret 0x6451
0x00000000004178c4 : ret 0x651d
0x000000000040d876 : ret 0x66b0
0x000000000040d212 : ret 0x6709
0x000000000040d192 : ret 0x68c1
0x000000000040e2da : ret 0x6948
0x000000000041750c : ret 0x744a
0x00000000004032ef : ret 0x7844
0x0000000000403f5e : ret 0x7ce8
0x0000000000405323 : ret 0x7e8
0x00000000004029ff : ret 0x8041
0x0000000000408233 : ret 0x8141
0x0000000000402f68 : ret 0x8148
0x0000000000417b2a : ret 0x8334
0x000000000041219f : ret 0x840
0x0000000000402c67 : ret 0x845
0x0000000000414827 : ret 0x8589
0x000000000040c0f1 : ret 0x858b
0x0000000000409a13 : ret 0x8840
0x000000000041030a : ret 0x8841
0x0000000000407f64 : ret 0x8844
0x000000000040397e : ret 0x8941
0x0000000000405255 : ret 0x8948
0x0000000000409798 : ret 0x8949
0x000000000040992c : ret 0x89a5
0x0000000000412ca5 : ret 0x89ee
0x0000000000403915 : ret 0x8b48
0x000000000040404e : ret 0x8ce8
0x000000000040dca8 : ret 0x8d0f
0x00000000004147fd : ret 0x8de8
0x0000000000412572 : ret 0x8e8
0x0000000000403aeb : ret 0x8fe8
0x0000000000417fd4 : ret 0x9303
0x0000000000411b0f : ret 0x941
0x000000000041663d : ret 0x9588
0x00000000004031a9 : ret 0x9589
0x00000000004031f8 : ret 0xa
0x0000000000403785 : ret 0xa5e8
0x0000000000402ed4 : ret 0xa88
0x00000000004025d6 : ret 0xb0
0x000000000040c353 : ret 0xb43d
0x0000000000403b75 : ret 0xb5e8
0x00000000004111d9 : ret 0xb849
0x0000000000417a9d : ret 0xc0c2
0x0000000000401f15 : ret 0xc148
0x000000000040dc4e : ret 0xc281
0x0000000000403c68 : ret 0xc2e8
0x0000000000410f40 : ret 0xc2f6
0x0000000000417aaa : ret 0xc4c0
0x0000000000417cd4 : ret 0xc996
0x000000000040e2cb : ret 0xca01
0x0000000000407c60 : ret 0xca21
0x000000000040528e : ret 0xca29
0x000000000040825a : ret 0xca31
0x00000000004036ec : ret 0xd089
0x000000000040ac83 : ret 0xd284
0x0000000000404256 : ret 0xd4e8
0x0000000000418ed1 : ret 0xd609
0x0000000000418430 : ret 0xd83a
0x0000000000403ffe : ret 0xdce8
0x00000000004176cb : ret 0xddeb
0x00000000004026ed : ret 0xe280
0x0000000000403648 : ret 0xe2e8
0x000000000040db99 : ret 0xe309
0x000000000040d8ab : ret 0xe56c
0x0000000000403545 : ret 0xe5e8
0x0000000000403843 : ret 0xe7e8
0x00000000004031f0 : ret 0xea81
0x000000000040bc9b : ret 0xee64
0x000000000040a03c : ret 0xee8
0x0000000000409a28 : ret 0xf180
0x000000000040e435 : ret 0xf229
0x00000000004105a5 : ret 0xf280
0x0000000000402ba9 : ret 0xf281
0x000000000040d95e : ret 0xfa29
0x0000000000404126 : ret 0xfa81
0x0000000000403d2e : ret 0xfce8
0x000000000040372d : ret 0xfde8
0x0000000000416d9a : ret 0xfeab
0x000000000040732a : ret 0xffa7
0x000000000040d4e7 : ret 0xffe5
0x000000000040234a : ret 0xfff6
0x000000000041587b : ret 0xfffe
0x0000000000403403 : ret 0xffff
0x00000000004046cb : ret 1
0x0000000000410fa0 : ret 2
0x000000000040fa9b : ret 3
0x000000000040d882 : ret 7
0x0000000000410a3f : ret 8
0x00000000004100ad : rol byte ptr [rbp + 8], 1 ; ret 0x8844
0x0000000000408a96 : rol byte ptr [rcx + rcx*4], 1 ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000041c410 : rol byte ptr [rdi], 0 ; add al, ah ; jnp 0x41c41c ; jmp rax
0x00000000004080b8 : rol dword ptr [rcx + 0x21], cl ; ret
0x00000000004113ee : ror byte ptr [r8 - 0x75], 1 ; fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x000000000040f100 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000408c20 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x408c8b ; ret
0x0000000000404de6 : ror byte ptr [r8 - 0x7d], -0x3c ; pop rbp ; ret
0x0000000000401f1c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401f2b ; pop rbp ; ret
0x00000000004113ef : ror byte ptr [rax - 0x75], 1 ; fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x000000000040f101 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x000000000040976d : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000409776 : ror byte ptr [rax - 0x77], 1 ; ret 0x294c
0x000000000040287a : ror byte ptr [rax - 0x77], 1 ; ret 0xb0
0x0000000000408c21 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x408c8a ; ret
0x0000000000404de7 : ror byte ptr [rax - 0x7d], -0x3c ; pop rbp ; ret
0x0000000000402c7d : ror byte ptr [rax - 0x7f], -0x3c ; loopne 0x402c8c ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000402a21 : ror byte ptr [rax - 0x7f], -0x3c ; mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000404d68 : ror byte ptr [rdx + 0x458b4808], 1 ; fmul dword ptr [rax - 0x77] ; ret 0x8148
0x000000000041c4d0 : ror byte ptr [rdx], 0 ; add al, dl ; mov ah, -2 ; jmp rax
0x000000000040bca8 : ror dword ptr [rax - 0x46], 1 ; ret 0xee64
0x000000000041d171 : sar dh, cl ; jmp rdx
0x0000000000401f1e : sar eax, 1 ; jne 0x401f29 ; pop rbp ; ret
0x0000000000401f1d : sar rax, 1 ; jne 0x401f2a ; pop rbp ; ret
0x0000000000407e35 : sbb dword ptr [rcx - 0xe], eax ; jmp qword ptr [rcx]
0x00000000004178b9 : sbb eax, 0x81d55b65 ; ret 8
0x0000000000411e78 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000402341 : sti ; idiv bh ; dec dword ptr [rax - 0x77] ; test al, -0x18 ; ret 0xfff6
0x0000000000408067 : stosb byte ptr [rdi], al ; fiadd dword ptr [rcx - 0xa] ; jmp qword ptr [rcx]
0x000000000040f11f : sub dword ptr [rdx], 0x5b ; ret
0x00000000004031f4 : sub dword ptr [rsi + rbp - 0x7f], ebp ; ret 0xa
0x0000000000419c61 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000419c60 : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000402348 : test al, -0x18 ; ret 0xfff6
0x0000000000419bfa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000401fa3 : test byte ptr [rdx], cl ; add byte ptr [rax], al ; add al, ch ; ret
0x000000000040d65a : test dword ptr [rip - 0x17000000], eax ; ret
0x000000000041707d : xchg eax, ebp ; ret 0x8041
0x0000000000409a12 : xchg eax, ebp ; ret 0x8840
0x0000000000410309 : xchg eax, ebp ; ret 0x8841
0x00000000004026ec : xchg eax, ebp ; ret 0xe280
0x00000000004166f4 : xchg eax, ebx ; add dh, ch ; call 0x4933684d
0x000000000040411b : xchg eax, edi ; mov bl, 0x2f ; mov es, word ptr [rcx - 0xe] ; jmp qword ptr [rcx]
0x0000000000410418 : xchg eax, esp ; ret 0x5588
0x000000000041663c : xchg eax, esp ; ret 0x9588
0x000000000040ac82 : xchg eax, esp ; ret 0xd284
0x000000000041c465 : xchg esi, edi ; jmp qword ptr [rax]
0x0000000000407a96 : xor al, 0x6a ; imul eax, dword ptr [rax - 0x77], 0x7a ; add cl, byte ptr [rax - 0x77] ; ret 0x148
0x0000000000404d37 : xor al, ch ; ret
0x00000000004112ce : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004107bb : xor dword ptr [rax], edx ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040a747 : xor eax, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x0000000000408a95 : xor eax, edx ; mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040e90e : xor ecx, dword ptr [rsi - 0x76b7ecf2] ; ret 0x148
0x00000000004170c6 : xor edx, eax ; mov dword ptr [rbp - 4], edx ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040e90d : xor r9d, dword ptr [r14 - 0x76b7ecf2] ; ret 0x148
