0x00000000004039e9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040637f : add bl, dh ; ret
0x0000000000404a2d : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000040637d : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040637b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004005c0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400680 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000004005c2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400682 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000004005c4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400684 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000406be4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4046
0x000000000040308e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x00000000004042fe : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004057dc : add byte ptr [rax], al ; add cl, ch ; ret 2
0x00000000004039b1 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004036c0 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040110b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000401169 : add byte ptr [rax], al ; jmp 0x401129
0x0000000000407cc6 : add byte ptr [rax], al ; jrcxz 0x407ccf ; jmp rdx
0x000000000040715b : add byte ptr [rax], al ; loope 0x407162 ; jmp rax
0x0000000000401f82 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040716a : add byte ptr [rax], al ; nop ; loope 0x407173 ; jmp qword ptr [rax]
0x000000000040705a : add byte ptr [rax], al ; or dh, 0xff ; jmp rax
0x0000000000401d78 : add byte ptr [rax], al ; pop rbp ; ret
0x00000000004048cb : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403680 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040027e : add byte ptr [rax], al ; push rbp ; add dl, ch ; sbb al, -0x26 ; ret
0x00000000004005c6 : add byte ptr [rax], al ; ret
0x0000000000400686 : add byte ptr [rax], al ; ret 0
0x0000000000406be6 : add byte ptr [rax], al ; ret 0x4046
0x00000000004070ea : add byte ptr [rax], al ; sbb cl, -1 ; jmp qword ptr [rax]
0x00000000004048cc : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000403681 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000407168 : add byte ptr [rbx], cl ; add byte ptr [rax], al ; nop ; loope 0x407175 ; jmp qword ptr [rax]
0x000000000040621c : add byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x0000000000401518 : add byte ptr [rcx], al ; ret
0x00000000004070e8 : add byte ptr [rcx], cl ; add byte ptr [rax], al ; sbb cl, -1 ; jmp qword ptr [rax]
0x000000000040027f : add byte ptr [rdi + 0x4e], al ; push rbp ; add dl, ch ; sbb al, -0x26 ; ret
0x00000000004057d8 : add byte ptr [rdi], cl ; lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000403090 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000404300 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004057de : add cl, ch ; ret 2
0x0000000000400283 : add dl, ch ; sbb al, -0x26 ; ret
0x0000000000404f09 : add dword ptr [rax - 0x77], ecx ; ret 0x8148
0x00000000004039af : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004048ca : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040367f : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x00000000004060dd : add dword ptr [rax], ecx ; ret 0x840
0x0000000000405dba : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401514 : add eax, 0x206d66 ; add ebx, esi ; ret
0x00000000004057db : add eax, 0xe9000000 ; ret 2
0x00000000004014db : add eax, edx ; sar rax, 1 ; jne 0x4014ec ; pop rbp ; ret
0x0000000000401519 : add ebx, esi ; ret
0x000000000040162b : add esp, 0x10 ; pop rbp ; ret
0x0000000000405b0c : add esp, 0x130 ; pop rbp ; ret
0x0000000000404bfc : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000401d74 : add esp, 0x1c0 ; pop rbp ; ret
0x0000000000401b47 : add esp, 0x20 ; pop rbp ; ret
0x000000000040170d : add esp, 0x30 ; pop rbp ; ret
0x0000000000403dcc : add esp, 0x50 ; pop rbp ; ret
0x00000000004022a3 : add esp, 0x70 ; pop rbp ; ret
0x0000000000403cda : add esp, 0x90 ; pop rbp ; ret
0x0000000000404a93 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040110e : add esp, 8 ; ret
0x00000000004014da : add rax, rdx ; sar rax, 1 ; jne 0x4014ed ; pop rbp ; ret
0x000000000040162a : add rsp, 0x10 ; pop rbp ; ret
0x0000000000405b0b : add rsp, 0x130 ; pop rbp ; ret
0x0000000000404bfb : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000401d73 : add rsp, 0x1c0 ; pop rbp ; ret
0x0000000000401b46 : add rsp, 0x20 ; pop rbp ; ret
0x000000000040170c : add rsp, 0x30 ; pop rbp ; ret
0x0000000000403dcb : add rsp, 0x50 ; pop rbp ; ret
0x00000000004022a2 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000403cd9 : add rsp, 0x90 ; pop rbp ; ret
0x0000000000404a92 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040110d : add rsp, 8 ; ret
0x0000000000405db9 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401517 : and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000403a67 : and dword ptr [rax], 0x81d8558b ; ret 0x1b2
0x00000000004018cf : and eax, 0x608288 ; pop rbp ; ret
0x00000000004018f3 : and eax, 0x608290 ; pop rbp ; ret
0x0000000000401109 : and eax, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000405047 : call 0x34437
0x0000000000405046 : call 0x34438
0x0000000000404fc5 : call 0x401292
0x0000000000405048 : call 0x401342
0x00000000004050e4 : call 0x4013e2
0x00000000004036b9 : call 0xffffffffe902c009
0x00000000004036b8 : call 0xffffffffe902c00a
0x0000000000402689 : call 0xffffffffff4066f8
0x0000000000406359 : call qword ptr [r12 + rbx*8]
0x0000000000407343 : call qword ptr [rsi]
0x000000000040635a : call qword ptr [rsp + rbx*8]
0x000000000040153d : call rax
0x000000000040340c : call rbx
0x0000000000407503 : call rdi
0x0000000000405b0a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x0000000000404dff : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404311 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004014df : clc ; jne 0x4014e8 ; pop rbp ; ret
0x0000000000402155 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040629f : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004062a2 : clc ; pop rbp ; ret
0x0000000000405c56 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004052eb : cld ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040522a : cld ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040629c : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000405c53 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405bf6 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405227 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004050de : cld ; mov rcx, rax ; mov al, 0 ; call 0x4013e8
0x000000000040149d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4014b0 ; pop rbp ; ret
0x000000000040440c : cwde ; mov rcx, qword ptr [rax*8 + 0x406ba8] ; jmp rcx
0x0000000000402684 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; call 0xffffffffff4066fd
0x0000000000405844 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000402e12 : dec dword ptr [rcx - 0x77] ; ret 0x294d
0x00000000004031a0 : enter 0x4b05, 0x34 ; fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x00000000004070ed : fcos ; jmp qword ptr [rax]
0x000000000040712d : fdivp st(7) ; jmp qword ptr [rax]
0x00000000004031a4 : fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x000000000040635c : fmul qword ptr [rax - 0x7d] ; ret
0x00000000004042a8 : fsubr st(0) ; ret 0xe
0x0000000000401629 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004014b0 : hlt ; pop rbp ; mov edi, 0x608228 ; jmp rax
0x000000000040342b : inc dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000407157 : inc eax ; or al, byte ptr [rax] ; add byte ptr [rax], al ; loope 0x407166 ; jmp rax
0x0000000000401516 : insd dword ptr [rdi], dx ; and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000401515 : insw word ptr [rdi], dx ; and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000404a35 : int 0x80
0x00000000004014a3 : ja 0x4014aa ; pop rbp ; ret
0x00000000004014af : je 0x4014ad ; pop rbp ; mov edi, 0x608228 ; jmp rax
0x00000000004050dd : jge 0x4050e4 ; mov rcx, rax ; mov al, 0 ; call 0x4013e9
0x000000000040116b : jmp 0x401127
0x0000000000404f08 : jmp 0xffffffffc2c99712
0x000000000040702f : jmp qword ptr [rax]
0x00000000004028a6 : jmp qword ptr [rcx]
0x00000000004075eb : jmp qword ptr [rdx]
0x00000000004014b7 : jmp rax
0x0000000000402369 : jmp rcx
0x00000000004014f7 : jmp rdx
0x00000000004014e0 : jne 0x4014e7 ; pop rbp ; ret
0x00000000004022a5 : jo 0x402306 ; ret
0x00000000004038cf : jo 0x403935 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403f74 : jo 0x403fd5 ; ret
0x00000000004040ae : jo 0x40410f ; ret
0x0000000000407cc9 : jrcxz 0x407ccc ; jmp rdx
0x0000000000407cc8 : jrcxz 0x407ccd ; jmp rdx
0x00000000004057da : lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x000000000040715d : loope 0x407160 ; jmp rax
0x000000000040716d : loope 0x407170 ; jmp qword ptr [rax]
0x00000000004050e2 : mov al, 0 ; call 0x4013e4
0x0000000000403e4b : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000403cd8 : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000405db6 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004018f1 : mov byte ptr [0x608290], al ; pop rbp ; ret
0x0000000000401513 : mov byte ptr [rip + 0x206d66], 1 ; ret
0x0000000000405dbc : mov dh, -0x40 ; pop rbp ; ret
0x00000000004018cd : mov dword ptr [0x608288], edi ; pop rbp ; ret
0x0000000000402156 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000402118 : mov dword ptr [rax], eax ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000401fd4 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000402117 : mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000404fc2 : mov dword ptr [rbp - 0x10], eax ; call 0x401295
0x0000000000405045 : mov dword ptr [rbp - 0x18], eax ; call 0x401345
0x0000000000401709 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401627 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040629d : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004021ce : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401f88 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000404d1b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401b43 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401f85 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000401a9f : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405013 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401f3d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401fce : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040211a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040229f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000403e49 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000405c54 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004052e9 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405228 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404dfd : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040430f : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004062a0 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040153b : mov ebp, esp ; call rax
0x00000000004014a1 : mov ebp, esp ; ja 0x4014ac ; pop rbp ; ret
0x0000000000404a4d : mov ecx, 0x5b2a830a ; ret
0x0000000000402362 : mov ecx, dword ptr [rax*8 + 0x4066a0] ; jmp rcx
0x0000000000402686 : mov ecx, dword ptr [rax*8 + 0x4066e8] ; jmp rcx
0x000000000040440e : mov ecx, dword ptr [rax*8 + 0x406ba8] ; jmp rcx
0x0000000000401fd1 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004050e0 : mov ecx, eax ; mov al, 0 ; call 0x4013e6
0x0000000000401535 : mov edi, 0x607e20 ; mov rbp, rsp ; call rax
0x00000000004014b2 : mov edi, 0x608228 ; jmp rax
0x00000000004014f2 : mov edi, 0x608228 ; jmp rdx
0x0000000000404fbf : mov edi, eax ; mov qword ptr [rbp - 0x10], rax ; call 0x401298
0x0000000000405042 : mov edi, eax ; mov qword ptr [rbp - 0x18], rax ; call 0x401348
0x0000000000406357 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000406356 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x00000000004014f0 : mov esi, eax ; mov edi, 0x608228 ; jmp rdx
0x00000000004018cc : mov qword ptr [0x608288], rdi ; pop rbp ; ret
0x0000000000404fc1 : mov qword ptr [rbp - 0x10], rax ; call 0x401296
0x0000000000405044 : mov qword ptr [rbp - 0x18], rax ; call 0x401346
0x00000000004021cd : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403e4a : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000404d1a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401b42 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401f84 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000401a9e : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405012 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401f3c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040229e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000403e48 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000404dfc : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040430e : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040153a : mov rbp, rsp ; call rax
0x00000000004014a0 : mov rbp, rsp ; ja 0x4014ad ; pop rbp ; ret
0x0000000000402361 : mov rcx, qword ptr [rax*8 + 0x4066a0] ; jmp rcx
0x0000000000402685 : mov rcx, qword ptr [rax*8 + 0x4066e8] ; jmp rcx
0x000000000040440d : mov rcx, qword ptr [rax*8 + 0x406ba8] ; jmp rcx
0x00000000004050df : mov rcx, rax ; mov al, 0 ; call 0x4013e7
0x0000000000404fbe : mov rdi, rax ; mov qword ptr [rbp - 0x10], rax ; call 0x401299
0x0000000000405041 : mov rdi, rax ; mov qword ptr [rbp - 0x18], rax ; call 0x401349
0x00000000004014ef : mov rsi, rax ; mov edi, 0x608228 ; jmp rdx
0x0000000000405dbb : movzx eax, al ; pop rbp ; ret
0x000000000040716c : nop ; loope 0x407171 ; jmp qword ptr [rax]
0x0000000000406378 : nop dword ptr [rax + rax] ; ret
0x00000000004029ed : or al, 0x18 ; ret 0x6451
0x0000000000402687 : or al, 0xffffffffffffffc5 ; call 0xffffffffff4066fa
0x0000000000407159 : or al, byte ptr [rax] ; add byte ptr [rax], al ; loope 0x407164 ; jmp rax
0x000000000040705c : or dh, 0xff ; jmp rax
0x0000000000404031 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040636c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004038d1 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040636e : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004038d3 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406370 : pop r14 ; pop r15 ; ret
0x0000000000403683 : pop r14 ; pop rbp ; ret
0x00000000004038d5 : pop r15 ; pop rbp ; ret
0x0000000000406372 : pop r15 ; ret
0x0000000000401512 : pop rbp ; mov byte ptr [rip + 0x206d66], 1 ; ret
0x00000000004014b1 : pop rbp ; mov edi, 0x608228 ; jmp rax
0x00000000004014ee : pop rbp ; mov rsi, rax ; mov edi, 0x608228 ; jmp rdx
0x000000000040636b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040636f : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004014a5 : pop rbp ; ret
0x00000000004038d0 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004048cd : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403682 : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000404a51 : pop rbx ; ret
0x00000000004038d6 : pop rdi ; pop rbp ; ret
0x0000000000406373 : pop rdi ; ret
0x00000000004038d4 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000406371 : pop rsi ; pop r15 ; ret
0x0000000000403684 : pop rsi ; pop rbp ; ret
0x000000000040636d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004038d2 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000401ebb : push 0x48006082 ; add esp, 0x30 ; pop rbp ; ret
0x0000000000403dce : push rax ; pop rbp ; ret
0x0000000000400282 : push rbp ; add dl, ch ; sbb al, -0x26 ; ret
0x0000000000401534 : push rbp ; mov edi, 0x607e20 ; mov rbp, rsp ; call rax
0x0000000000400287 : ret
0x0000000000400688 : ret 0
0x0000000000405a26 : ret 0x148
0x0000000000403a6e : ret 0x1b2
0x0000000000401372 : ret 0x206d
0x0000000000401172 : ret 0x206e
0x0000000000401b25 : ret 0x2948
0x0000000000402df9 : ret 0x294c
0x0000000000402e15 : ret 0x294d
0x0000000000406be8 : ret 0x4046
0x0000000000402054 : ret 0x5589
0x00000000004029ef : ret 0x6451
0x0000000000404f0c : ret 0x8148
0x00000000004060df : ret 0x840
0x0000000000403093 : ret 0x8840
0x00000000004043c9 : ret 0x8844
0x0000000000404f20 : ret 0x8948
0x0000000000402e18 : ret 0x8949
0x0000000000402fac : ret 0x89a5
0x0000000000402dfc : ret 0x8b48
0x0000000000405a19 : ret 0xb849
0x0000000000402e2d : ret 0xbde8
0x00000000004014d5 : ret 0xc148
0x0000000000405780 : ret 0xc2f6
0x0000000000402814 : ret 0xca21
0x0000000000404303 : ret 0xd284
0x00000000004042aa : ret 0xe
0x00000000004036bc : ret 0xee8
0x00000000004030a8 : ret 0xf180
0x0000000000405773 : ret 0xf280
0x000000000040288e : ret 0xf281
0x0000000000404fc7 : ret 0xffff
0x0000000000403a74 : ret 1
0x00000000004057e0 : ret 2
0x0000000000402116 : rol byte ptr [rcx + rcx*4], 1 ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000404a30 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x00000000004022a0 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x40230b ; ret
0x00000000004014dc : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4014eb ; pop rbp ; ret
0x0000000000404a31 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000402ded : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000402df6 : ror byte ptr [rax - 0x77], 1 ; ret 0x294c
0x00000000004022a1 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x40230a ; ret
0x0000000000407158 : ror byte ptr [rdx], 0 ; add byte ptr [rax], al ; loope 0x407165 ; jmp rax
0x0000000000407218 : ror byte ptr [rip - 0xd100000], -1 ; jmp rax
0x000000000040709d : sar bh, 1 ; jmp rax
0x00000000004070dd : sar bh, cl ; jmp rax
0x00000000004014de : sar eax, 1 ; jne 0x4014e9 ; pop rbp ; ret
0x00000000004070ad : sar edi, 1 ; jmp qword ptr [rax]
0x00000000004014dd : sar rax, 1 ; jne 0x4014ea ; pop rbp ; ret
0x0000000000400285 : sbb al, -0x26 ; ret
0x00000000004070ec : sbb cl, -1 ; jmp qword ptr [rax]
0x0000000000405db8 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000404a4f : sub dword ptr [rdx], 0x5b ; ret
0x00000000004063ad : sub esp, 8 ; add rsp, 8 ; ret
0x00000000004063ac : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040637a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000403092 : xchg eax, ebp ; ret 0x8840
0x0000000000404302 : xchg eax, esp ; ret 0xd284
0x0000000000405b0e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000403dc7 : xor eax, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x0000000000402115 : xor eax, edx ; mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
