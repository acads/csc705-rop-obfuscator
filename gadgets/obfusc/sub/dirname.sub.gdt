0x0000000000403b69 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040789f : add al, ah ; ret 0xffff
0x000000000040787f : add al, al ; ret 0xffff
0x0000000000407fbf : add al, dl ; loope 0x407fc6 ; jmp rdx
0x00000000004064ff : add bl, dh ; ret
0x0000000000401c5b : add byte ptr [rax - 0x75], cl ; call 0x4902a5b3
0x0000000000404f2b : add byte ptr [rax - 0x75], cl ; jge 0x404f27 ; call 0x401147
0x0000000000404bad : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x00000000004064fd : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000401c59 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; call 0x4902a5b5
0x0000000000404f29 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jge 0x404f29 ; call 0x401149
0x00000000004064fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004006a8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400420 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000004006aa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400422 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000004006ac : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400424 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000407899 : add byte ptr [rax], al ; add byte ptr [rbx + rax], cl ; add al, ah ; ret 0xffff
0x000000000040320e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x000000000040447e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040595c : add byte ptr [rax], al ; add cl, ch ; ret 2
0x000000000040789a : add byte ptr [rax], al ; add r8, qword ptr [rax] ; add al, ah ; ret 0xffff
0x0000000000403b31 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403840 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401113 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000407fba : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; or al, byte ptr [rax] ; add al, dl ; loope 0x407fcb ; jmp rdx
0x0000000000401169 : add byte ptr [rax], al ; jmp 0x401129
0x0000000000402102 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000404f2a : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x10] ; call 0x401148
0x0000000000403e5e : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000404a4b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403800 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004006ae : add byte ptr [rax], al ; ret
0x0000000000400426 : add byte ptr [rax], al ; ret 0
0x000000000040785f : add byte ptr [rax], al ; ret 0xffff
0x0000000000407e1e : add byte ptr [rax], al ; sbb dh, -1 ; jmp rax
0x000000000040727a : add byte ptr [rax], al ; test al, -1 ; jmp qword ptr [rax]
0x000000000040726b : add byte ptr [rax], al ; test al, -1 ; jmp rax
0x0000000000404a4c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000403801 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040789b : add byte ptr [rbx + rax], cl ; add al, ah ; ret 0xffff
0x0000000000401924 : add byte ptr [rcx - 0x7629d63a], cl ; ret 0xea81
0x000000000040639c : add byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x0000000000401528 : add byte ptr [rcx], al ; ret
0x0000000000405958 : add byte ptr [rdi], cl ; lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000403210 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000404480 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000407fbb : add byte ptr [rdx + rcx], ch ; add al, dl ; loope 0x407fca ; jmp rdx
0x0000000000401d5c : add cl, byte ptr [rax - 0x77] ; ret 0x148
0x000000000040595e : add cl, ch ; ret 2
0x0000000000405089 : add dword ptr [rax - 0x77], ecx ; ret 0x8148
0x0000000000403b2f : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404a4a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004037ff : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040625d : add dword ptr [rax], ecx ; ret 0x840
0x0000000000405f3a : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401524 : add eax, 0x207d4e ; add ebx, esi ; ret
0x000000000040595b : add eax, 0xe9000000 ; ret 2
0x000000000040789d : add eax, dword ptr [rax] ; add al, ah ; ret 0xffff
0x000000000040787d : add eax, dword ptr [rax] ; add al, al ; ret 0xffff
0x000000000040785d : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret 0xffff
0x0000000000407269 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; test al, -1 ; jmp rax
0x00000000004014eb : add eax, edx ; sar rax, 1 ; jne 0x4014fc ; pop rbp ; ret
0x0000000000401529 : add ebx, esi ; ret
0x00000000004016ab : add esp, 0x10 ; pop rbp ; ret
0x0000000000405c8c : add esp, 0x130 ; pop rbp ; ret
0x0000000000404d7c : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000401c84 : add esp, 0x20 ; pop rbp ; ret
0x000000000040178d : add esp, 0x30 ; pop rbp ; ret
0x0000000000403f4c : add esp, 0x50 ; pop rbp ; ret
0x0000000000402423 : add esp, 0x70 ; pop rbp ; ret
0x0000000000403e5a : add esp, 0x90 ; pop rbp ; ret
0x0000000000404c13 : add esp, 0xa0 ; pop rbp ; ret
0x0000000000401116 : add esp, 8 ; ret
0x000000000040789c : add r8, qword ptr [rax] ; add al, ah ; ret 0xffff
0x00000000004014ea : add rax, rdx ; sar rax, 1 ; jne 0x4014fd ; pop rbp ; ret
0x00000000004016aa : add rsp, 0x10 ; pop rbp ; ret
0x0000000000405c8b : add rsp, 0x130 ; pop rbp ; ret
0x0000000000404d7b : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000401c83 : add rsp, 0x20 ; pop rbp ; ret
0x000000000040178c : add rsp, 0x30 ; pop rbp ; ret
0x0000000000403f4b : add rsp, 0x50 ; pop rbp ; ret
0x0000000000402422 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000403e59 : add rsp, 0x90 ; pop rbp ; ret
0x0000000000404c12 : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000401115 : add rsp, 8 ; ret
0x0000000000405f39 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401527 : and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000401b57 : and eax, 0x48fffff6 ; add esp, 0x10 ; pop rbp ; ret
0x0000000000401a3f : and eax, 0x609280 ; pop rbp ; ret
0x0000000000401a63 : and eax, 0x609288 ; pop rbp ; ret
0x0000000000404f30 : call 0x401142
0x0000000000401c5f : call 0x4902a5af
0x0000000000401c5e : call 0x4902a5b0
0x0000000000403839 : call 0xffffffffe902c189
0x0000000000403838 : call 0xffffffffe902c18a
0x00000000004064d9 : call qword ptr [r12 + rbx*8]
0x000000000040769b : call qword ptr [rcx]
0x000000000040761b : call qword ptr [rsi]
0x00000000004064da : call qword ptr [rsp + rbx*8]
0x000000000040154d : call rax
0x000000000040358c : call rbx
0x00000000004077fb : call rdi
0x0000000000405c8a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x0000000000404f7f : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401d9a : clc ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004014ef : clc ; jne 0x4014f8 ; pop rbp ; ret
0x00000000004022d5 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040641f : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000406422 : clc ; pop rbp ; ret
0x0000000000405dd6 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040546b : cld ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004053aa : cld ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040641c : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000405dd3 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405d76 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004053a7 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004014ad : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4014c0 ; pop rbp ; ret
0x000000000040458c : cwde ; mov rcx, qword ptr [rax*8 + 0x406e78] ; jmp rcx
0x00000000004059c4 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000402f92 : dec dword ptr [rcx - 0x77] ; ret 0x294d
0x0000000000403320 : enter 0x4b05, 0x34 ; fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x0000000000407e21 : fdivp st(7) ; jmp rax
0x0000000000403324 : fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x00000000004064dc : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000404428 : fsubr st(0) ; ret 0xe
0x00000000004016a9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004014c0 : hlt ; pop rbp ; mov edi, 0x609230 ; jmp rax
0x0000000000401d58 : imul eax, dword ptr [rax - 0x77], 0x7a ; add cl, byte ptr [rax - 0x77] ; ret 0x148
0x00000000004035ab : inc dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000407267 : inc eax ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; test al, -1 ; jmp rax
0x0000000000407fbc : insb byte ptr [rdi], dx ; or al, byte ptr [rax] ; add al, dl ; loope 0x407fc9 ; jmp rdx
0x0000000000404bb5 : int 0x80
0x00000000004014b3 : ja 0x4014ba ; pop rbp ; ret
0x00000000004014bf : je 0x4014bd ; pop rbp ; mov edi, 0x609230 ; jmp rax
0x0000000000401526 : jge 0x40154d ; add byte ptr [rcx], al ; ret
0x0000000000401525 : jge 0x40154e ; add byte ptr [rcx], al ; ret
0x0000000000404f2e : jge 0x404f24 ; call 0x401144
0x000000000040116b : jmp 0x401127
0x0000000000405088 : jmp 0xffffffffc2c99892
0x000000000040727f : jmp qword ptr [rax]
0x0000000000402a26 : jmp qword ptr [rcx]
0x00000000004078e3 : jmp qword ptr [rdx]
0x00000000004014c7 : jmp rax
0x00000000004024e9 : jmp rcx
0x0000000000401507 : jmp rdx
0x00000000004014f0 : jne 0x4014f7 ; pop rbp ; ret
0x0000000000402425 : jo 0x402486 ; ret
0x0000000000403a4f : jo 0x403ab5 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004040f4 : jo 0x404155 ; ret
0x000000000040422e : jo 0x40428f ; ret
0x000000000040595a : lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000407fc1 : loope 0x407fc4 ; jmp rdx
0x0000000000403fcb : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000403e58 : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000405f36 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401a61 : mov byte ptr [0x609288], al ; pop rbp ; ret
0x0000000000401523 : mov byte ptr [rip + 0x207d4e], 1 ; ret
0x0000000000405f3c : mov dh, -0x40 ; pop rbp ; ret
0x0000000000401a3d : mov dword ptr [0x609280], edi ; pop rbp ; ret
0x00000000004022d6 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000402298 : mov dword ptr [rax], eax ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000402154 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000402297 : mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000401789 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004016a7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040641d : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040234e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402108 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000404e9b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401ef3 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402105 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000401e4f : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000401c80 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004020bd : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040214e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040229a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040241f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000403fc9 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000405dd4 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405469 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004053a8 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404f7d : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401d98 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406420 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040154b : mov ebp, esp ; call rax
0x00000000004014b1 : mov ebp, esp ; ja 0x4014bc ; pop rbp ; ret
0x0000000000404bcd : mov ecx, 0x5b2a830a ; ret
0x00000000004024e2 : mov ecx, dword ptr [rax*8 + 0x406970] ; jmp rcx
0x0000000000402806 : mov ecx, dword ptr [rax*8 + 0x4069b8] ; jmp rcx
0x000000000040458e : mov ecx, dword ptr [rax*8 + 0x406e78] ; jmp rcx
0x0000000000402151 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401545 : mov edi, 0x608e20 ; mov rbp, rsp ; call rax
0x00000000004014c2 : mov edi, 0x609230 ; jmp rax
0x0000000000401502 : mov edi, 0x609230 ; jmp rdx
0x0000000000404f2d : mov edi, dword ptr [rbp - 0x10] ; call 0x401145
0x00000000004064d7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x00000000004064d6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000401500 : mov esi, eax ; mov edi, 0x609230 ; jmp rdx
0x0000000000401547 : mov fs, word ptr [rax] ; mov rbp, rsp ; call rax
0x0000000000401a3c : mov qword ptr [0x609280], rdi ; pop rbp ; ret
0x000000000040234d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403fca : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000404e9a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401ef2 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402104 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000401e4e : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000401c7f : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004020bc : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040241e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000403fc8 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000404f7c : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401d97 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040154a : mov rbp, rsp ; call rax
0x00000000004014b0 : mov rbp, rsp ; ja 0x4014bd ; pop rbp ; ret
0x00000000004024e1 : mov rcx, qword ptr [rax*8 + 0x406970] ; jmp rcx
0x0000000000402805 : mov rcx, qword ptr [rax*8 + 0x4069b8] ; jmp rcx
0x000000000040458d : mov rcx, qword ptr [rax*8 + 0x406e78] ; jmp rcx
0x0000000000404f2c : mov rdi, qword ptr [rbp - 0x10] ; call 0x401146
0x00000000004014ff : mov rsi, rax ; mov edi, 0x609230 ; jmp rdx
0x0000000000405f3b : movzx eax, al ; pop rbp ; ret
0x00000000004064f8 : nop dword ptr [rax + rax] ; ret
0x0000000000402b6d : or al, 0x18 ; ret 0x6451
0x0000000000407fbd : or al, byte ptr [rax] ; add al, dl ; loope 0x407fc8 ; jmp rdx
0x00000000004041b1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401111 : or eax, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004064ec : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000403a51 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004064ee : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000403a53 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004064f0 : pop r14 ; pop r15 ; ret
0x0000000000403803 : pop r14 ; pop rbp ; ret
0x0000000000403a55 : pop r15 ; pop rbp ; ret
0x00000000004064f2 : pop r15 ; ret
0x0000000000401522 : pop rbp ; mov byte ptr [rip + 0x207d4e], 1 ; ret
0x00000000004014c1 : pop rbp ; mov edi, 0x609230 ; jmp rax
0x00000000004014fe : pop rbp ; mov rsi, rax ; mov edi, 0x609230 ; jmp rdx
0x00000000004064eb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004064ef : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004014b5 : pop rbp ; ret
0x0000000000403a50 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000404a4d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403802 : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000404bd1 : pop rbx ; ret
0x0000000000403a56 : pop rdi ; pop rbp ; ret
0x00000000004064f3 : pop rdi ; ret
0x0000000000403a54 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004064f1 : pop rsi ; pop r15 ; ret
0x0000000000403804 : pop rsi ; pop rbp ; ret
0x00000000004064ed : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000403a52 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040203b : push 0x48006092 ; add esp, 0x30 ; pop rbp ; ret
0x0000000000403f4e : push rax ; pop rbp ; ret
0x0000000000401544 : push rbp ; mov edi, 0x608e20 ; mov rbp, rsp ; call rax
0x00000000004006b0 : ret
0x0000000000400428 : ret 0
0x0000000000401d5f : ret 0x148
0x0000000000403bee : ret 0x1b2
0x0000000000401372 : ret 0x207d
0x0000000000401172 : ret 0x207e
0x0000000000401c62 : ret 0x2948
0x0000000000402f79 : ret 0x294c
0x0000000000402f95 : ret 0x294d
0x00000000004021d4 : ret 0x5589
0x0000000000402b6f : ret 0x6451
0x000000000040508c : ret 0x8148
0x000000000040625f : ret 0x840
0x0000000000403213 : ret 0x8840
0x0000000000404549 : ret 0x8844
0x00000000004050a0 : ret 0x8948
0x0000000000402f98 : ret 0x8949
0x000000000040312c : ret 0x89a5
0x0000000000402f7c : ret 0x8b48
0x0000000000401955 : ret 0xb0
0x0000000000405b99 : ret 0xb849
0x0000000000402fad : ret 0xbde8
0x00000000004014e5 : ret 0xc148
0x0000000000405900 : ret 0xc2f6
0x0000000000402994 : ret 0xca21
0x0000000000404483 : ret 0xd284
0x000000000040442a : ret 0xe
0x000000000040192a : ret 0xea81
0x000000000040383c : ret 0xee8
0x0000000000403228 : ret 0xf180
0x00000000004058f3 : ret 0xf280
0x0000000000402a0e : ret 0xf281
0x0000000000404f32 : ret 0xffff
0x0000000000401cfb : ret 1
0x0000000000405960 : ret 2
0x0000000000407268 : rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; test al, -1 ; jmp rax
0x0000000000402296 : rol byte ptr [rcx + rcx*4], 1 ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004072e8 : rol byte ptr [rip - 0x3a200000], -1 ; jmp rax
0x0000000000404bb0 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000402420 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x40248b ; ret
0x00000000004014ec : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4014fb ; pop rbp ; ret
0x0000000000404bb1 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000402f6d : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000402f76 : ror byte ptr [rax - 0x77], 1 ; ret 0x294c
0x0000000000402421 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x40248a ; ret
0x00000000004014ee : sar eax, 1 ; jne 0x4014f9 ; pop rbp ; ret
0x00000000004014ed : sar rax, 1 ; jne 0x4014fa ; pop rbp ; ret
0x0000000000407898 : sbb al, 0 ; add byte ptr [rax], al ; add r8, qword ptr [rax] ; add al, ah ; ret 0xffff
0x0000000000407e20 : sbb dh, -1 ; jmp rax
0x0000000000405f38 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000404bcf : sub dword ptr [rdx], 0x5b ; ret
0x000000000040652d : sub esp, 8 ; add rsp, 8 ; ret
0x000000000040652c : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040727d : test al, -1 ; jmp qword ptr [rax]
0x000000000040726d : test al, -1 ; jmp rax
0x00000000004064fa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000403212 : xchg eax, ebp ; ret 0x8840
0x0000000000404482 : xchg eax, esp ; ret 0xd284
0x0000000000401d56 : xor al, 0x6a ; imul eax, dword ptr [rax - 0x77], 0x7a ; add cl, byte ptr [rax - 0x77] ; ret 0x148
0x0000000000405c8e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000403f47 : xor eax, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x0000000000402295 : xor eax, edx ; mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
