0x0000000000407046 : adc al, -9 ; pop rbp ; ret
0x0000000000412235 : adc al, 0 ; add byte ptr [rax], bh ; ret
0x0000000000412215 : adc al, 0 ; add byte ptr [rax], ch ; ret
0x000000000040e55b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405d79 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401689 : adc eax, dword ptr [rbx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000410f6b : add ah, ah ; add dword ptr [rax], eax ; add byte ptr [rax], dl ; sub bh, bh ; jmp rdx
0x0000000000402d67 : add al, -0x36 ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000406ff4 : add al, -0x36 ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004039d2 : add al, 0x25 ; xor rsp, qword ptr [rcx] ; pop rbp ; ret
0x000000000040bf5a : add al, 0x48 ; add eax, ecx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040f42f : add bl, dh ; ret
0x000000000040333c : add byte ptr [r8], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000040ce99 : add byte ptr [rax + 0x29], cl ; ret 0x8948
0x0000000000406d17 : add byte ptr [rax + 0x29], cl ; ror dword ptr [rax - 0x77], 0x4d ; shr cl, 1 ; ret 0xffff
0x0000000000409c49 : add byte ptr [rax + 1], cl ; ret 0x3948
0x0000000000401cb8 : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x40f6
0x000000000040c26f : add byte ptr [rax - 0x75], cl ; fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x000000000040a5fd : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000040374c : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; ret 0x2948
0x0000000000407ce1 : add byte ptr [rax - 0x77], cl ; ret 0x2948
0x00000000004021b8 : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000040f42d : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040ce97 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8948
0x0000000000409c47 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x3948
0x0000000000401cb6 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x40f6
0x000000000040c26d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x000000000040374a : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; ret 0x2948
0x00000000004021b6 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000040f42b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004004a8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004004aa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040c90d : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b439 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004004ac : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040fe7c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x404b
0x0000000000402ec4 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7538b], cl ; ret 0xb0
0x0000000000409352 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7f], al ; call 0xffffffff8b02dee2
0x000000000040541e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x000000000040215f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8841
0x000000000040668e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040e1fc : add byte ptr [rax], al ; add cl, ch ; ret 2
0x00000000004038ac : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004038f3 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040168b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004017e9 : add byte ptr [rax], al ; jmp 0x4016a9
0x0000000000412232 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; adc al, 0 ; add byte ptr [rax], bh ; ret
0x000000000040b43b : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000404312 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000412212 : add byte ptr [rax], al ; mov word ptr [rax + rax], ss ; add byte ptr [rax], ch ; ret
0x0000000000402e64 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040a49b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405a10 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004004ae : add byte ptr [rax], al ; ret
0x000000000040fe7e : add byte ptr [rax], al ; ret 0x404b
0x0000000000411636 : add byte ptr [rax], al ; sub byte ptr [rcx - 1], dl ; call qword ptr [rcx]
0x0000000000412237 : add byte ptr [rax], bh ; ret
0x0000000000412217 : add byte ptr [rax], ch ; ret
0x0000000000410f6f : add byte ptr [rax], dl ; sub bh, bh ; jmp rdx
0x000000000040a49c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000405a11 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000402a31 : add byte ptr [rbx - 0x1774b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000402c3a : add byte ptr [rbx - 0x17f4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000402ec6 : add byte ptr [rbx - 0x76b7538b], cl ; ret 0xb0
0x0000000000403385 : add byte ptr [rbx - 0x874b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000409354 : add byte ptr [rcx - 0x7f], al ; call 0xffffffff8b02dee0
0x000000000040f2cc : add byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x00000000004077eb : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401c08 : add byte ptr [rcx], al ; ret
0x000000000040e1f8 : add byte ptr [rdi], cl ; lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000405420 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000402161 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8841
0x0000000000406690 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040bdcd : add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x000000000041075f : add byte ptr [rsi + rdx - 1], bh ; call rsp
0x00000000004038ab : add byte ptr cs:[rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040e1fe : add cl, ch ; ret 2
0x0000000000408f4a : add dword ptr [rax + 0x29], ecx ; ret 0x8948
0x000000000040dd12 : add dword ptr [rax + 0xf], eax ; mov dh, -0x39 ; pop rbp ; ret
0x000000000040aad9 : add dword ptr [rax - 0x77], ecx ; ret 0x8148
0x0000000000405d3f : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004038f1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000410f6d : add dword ptr [rax], eax ; add byte ptr [rax], dl ; sub bh, bh ; jmp rdx
0x000000000040a49a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000405a0f : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040dbcc : add dword ptr [rax], ecx ; ret 0x840
0x0000000000410734 : add dword ptr [rbx], ebx ; add edi, dword ptr [rbx] ; and byte ptr [rsi], al ; add byte ptr [rax], al ; ret
0x0000000000409fe2 : add dword ptr [rcx], eax ; jmp rcx
0x0000000000403f06 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040cef9 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000403990 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x000000000040953b : add eax, 0x148a3f2 ; ret 0x8948
0x0000000000401c04 : add eax, 0x21172e ; add ebx, esi ; ret
0x000000000040e1fb : add eax, 0xe9000000 ; ret 2
0x000000000040bf5c : add eax, ecx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401bcb : add eax, edx ; sar rax, 1 ; jne 0x401bdc ; pop rbp ; ret
0x0000000000401c09 : add ebx, esi ; ret
0x0000000000410736 : add edi, dword ptr [rbx] ; and byte ptr [rsi], al ; add byte ptr [rax], al ; ret
0x0000000000401dab : add esp, 0x10 ; pop rbp ; ret
0x00000000004077e9 : add esp, 0x100 ; pop rbp ; ret
0x000000000040e52c : add esp, 0x130 ; pop rbp ; ret
0x000000000040a7cc : add esp, 0x1a0 ; pop rbp ; ret
0x000000000040e97e : add esp, 0x1e0 ; pop rbp ; ret
0x00000000004038f6 : add esp, 0x20 ; pop rbp ; ret
0x0000000000401ebd : add esp, 0x30 ; pop rbp ; ret
0x0000000000402d6a : add esp, 0x40 ; pop rbp ; ret
0x00000000004034e9 : add esp, 0x50 ; pop rbp ; ret
0x00000000004099e7 : add esp, 0x50 ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004030a1 : add esp, 0x60 ; pop rbp ; ret
0x0000000000404633 : add esp, 0x70 ; pop rbp ; ret
0x0000000000406a08 : add esp, 0x80 ; pop rbp ; ret
0x00000000004033d2 : add esp, 0x90 ; pop rbp ; ret
0x000000000040a663 : add esp, 0xa0 ; pop rbp ; ret
0x0000000000402e60 : add esp, 0xb0 ; pop rbp ; ret
0x000000000040d3fc : add esp, 0xc0 ; pop rbp ; ret
0x0000000000408862 : add esp, 0xd0 ; pop rbp ; ret
0x000000000040b3d5 : add esp, 0xe0 ; pop rbp ; ret
0x000000000040168e : add esp, 8 ; ret
0x000000000040bf5b : add rax, rcx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401bca : add rax, rdx ; sar rax, 1 ; jne 0x401bdd ; pop rbp ; ret
0x0000000000401daa : add rsp, 0x10 ; pop rbp ; ret
0x00000000004077e8 : add rsp, 0x100 ; pop rbp ; ret
0x000000000040e52b : add rsp, 0x130 ; pop rbp ; ret
0x000000000040a7cb : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000040e97d : add rsp, 0x1e0 ; pop rbp ; ret
0x00000000004038f5 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000401ebc : add rsp, 0x30 ; pop rbp ; ret
0x0000000000402d69 : add rsp, 0x40 ; pop rbp ; ret
0x00000000004034e8 : add rsp, 0x50 ; pop rbp ; ret
0x00000000004099e6 : add rsp, 0x50 ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004030a0 : add rsp, 0x60 ; pop rbp ; ret
0x0000000000404632 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000406a07 : add rsp, 0x80 ; pop rbp ; ret
0x00000000004033d1 : add rsp, 0x90 ; pop rbp ; ret
0x000000000040a662 : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000402e5f : add rsp, 0xb0 ; pop rbp ; ret
0x000000000040d3fb : add rsp, 0xc0 ; pop rbp ; ret
0x0000000000408861 : add rsp, 0xd0 ; pop rbp ; ret
0x000000000040b3d4 : add rsp, 0xe0 ; pop rbp ; ret
0x000000000040168d : add rsp, 8 ; ret
0x000000000040398f : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040dd10 : and bh, 1 ; movzx eax, dil ; pop rbp ; ret
0x0000000000410738 : and byte ptr [rsi], al ; add byte ptr [rax], al ; ret
0x000000000040dd0f : and dil, 1 ; movzx eax, dil ; pop rbp ; ret
0x0000000000401c07 : and dword ptr [rax], eax ; add ebx, esi ; ret
0x000000000040c375 : and eax, 0x4106f0 ; mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x00000000004039af : and eax, 0x613340 ; pop rbp ; ret
0x00000000004039d3 : and eax, 0x613348 ; pop rbp ; ret
0x000000000040eba9 : and eax, edx ; xor rdi, rdx ; or rax, rdi ; pop rbp ; ret
0x0000000000408925 : and edi, eax ; mov rax, rdi ; pop rbp ; ret
0x000000000040ee2e : and edx, eax ; mov al, dl ; movzx eax, al ; pop rbp ; ret
0x000000000040ed08 : and edx, eax ; mov ax, dx ; movzx eax, ax ; pop rbp ; ret
0x000000000040eab7 : and edx, eax ; or r9d, edx ; mov eax, r9d ; pop rbp ; ret
0x000000000040edc3 : and edx, ebx ; mov al, dl ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000040ee2d : and edx, r8d ; mov al, dl ; movzx eax, al ; pop rbp ; ret
0x0000000000408924 : and rdi, rax ; mov rax, rdi ; pop rbp ; ret
0x0000000000401cb4 : call 0x401db9
0x0000000000408483 : call 0x494046bc
0x0000000000408493 : call 0x494046cc
0x0000000000409357 : call 0xffffffff8b02dedd
0x0000000000405a49 : call 0xffffffffe902e399
0x0000000000405a48 : call 0xffffffffe902e39a
0x000000000040c861 : call 0xffffffffff7a53b2
0x000000000040c860 : call 0xffffffffff7a53b3
0x000000000040c99f : call 0xffffffffff7a54f0
0x000000000040c99e : call 0xffffffffff7a54f1
0x000000000040f409 : call qword ptr [r12 + rbx*8]
0x000000000041163b : call qword ptr [rcx]
0x0000000000411ddb : call qword ptr [rdx]
0x0000000000410ff3 : call qword ptr [rsi]
0x000000000040f40a : call qword ptr [rsp + rbx*8]
0x0000000000401c2d : call rax
0x000000000040579c : call rbx
0x0000000000411293 : call rdi
0x00000000004119db : call rsi
0x0000000000410763 : call rsp
0x000000000040dc0a : clc ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000409dbc : clc ; add rsp, 0x100 ; pop rbp ; ret
0x000000000040e52a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x000000000040a9cf : clc ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004066a1 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004040de : clc ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000407240 : clc ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040d5d5 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000406a06 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x0000000000402e5e : clc ; add rsp, 0xb0 ; pop rbp ; ret
0x000000000040db00 : clc ; add rsp, 0xc0 ; pop rbp ; ret
0x0000000000401bcf : clc ; jne 0x401bd8 ; pop rbp ; ret
0x000000000040ec9a : clc ; mov ax, r8w ; movzx eax, ax ; pop rbp ; ret
0x00000000004044e5 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040f34f : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000407833 : clc ; mov qword ptr [rdi + 0x10], rsi ; pop rbp ; ret
0x000000000040db3e : clc ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000407813 : clc ; mov qword ptr [rdi + 8], rsi ; pop rbp ; ret
0x0000000000407043 : clc ; mov qword ptr [rdi + rsi*8], rdx ; pop rbp ; ret
0x000000000040c1d7 : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040babb : clc ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040badb : clc ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040bafb : clc ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000040676b : clc ; mov rax, qword ptr [rdi] ; pop rbp ; ret
0x000000000040e9cc : clc ; mov rax, r8 ; pop rbp ; ret
0x0000000000406767 : clc ; mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi] ; pop rbp ; ret
0x0000000000407977 : clc ; mov rdi, qword ptr [rdx + 0x10] ; call rax
0x0000000000406a22 : clc ; pop rbp ; ret
0x0000000000406a1b : clc ; shl rdi, 8 ; mov rax, rdi ; pop rbp ; ret
0x000000000040b438 : cld ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000401dd7 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040b5e9 : cld ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004036a4 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403779 : cld ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004034e7 : cld ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040d3fa : cld ; add rsp, 0xc0 ; pop rbp ; ret
0x000000000040b3d3 : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000040f34c : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040b643 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040b5e6 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b76b : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040b43f : cld ; pop rbp ; ret
0x0000000000410861 : cmp al, -1 ; call rsp
0x0000000000401cbb : cmp al, 0x25 ; ret 0x40f6
0x00000000004039ae : cmp al, 0x25 ; xor esp, dword ptr [rcx] ; pop rbp ; ret
0x0000000000402c3d : cmp dh, -1 ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040c24a : cmp dword ptr [rax - 0x75], ecx ; jne 0x40c234 ; call rax
0x000000000040e869 : cmp dword ptr [rdx - 0x76be63d5], ebx ; ret
0x0000000000401b8d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401ba0 ; pop rbp ; ret
0x0000000000409fdc : cwde ; mov rcx, qword ptr [rax*8 + 0x410178] ; jmp rcx
0x0000000000409861 : dec dword ptr [rax + 0x21] ; ret 0x948
0x00000000004082e5 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000402a37 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000407351 : dec dword ptr [rax - 0x77] ; ret 0xc6e8
0x0000000000408dbf : dec dword ptr [rcx - 0x77] ; ret 0x2149
0x00000000004051a2 : dec dword ptr [rcx - 0x77] ; ret 0x294d
0x0000000000407090 : div dword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000040708f : div qword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000040c247 : enter -0x74b8, 0x39 ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x0000000000409513 : enter 0x4879, 0x29 ; ret 0x8948
0x0000000000405530 : enter 0x4b05, 0x34 ; fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x0000000000405534 : fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x000000000040edc4 : fimul dword ptr [rax - 0x3f49f030] ; pop rbx ; pop rbp ; ret
0x000000000040941f : fimul word ptr [rcx - 0x77] ; ret 0x8149
0x0000000000408bf7 : fisttp dword ptr [rax + 0x21] ; fisttp word ptr [rcx - 0x77] ; ret
0x0000000000408bfa : fisttp word ptr [rcx - 0x77] ; ret
0x00000000004074c1 : fmul dword ptr [r8 - 0x46] ; jg 0x40746d ; ret
0x000000000040bc63 : fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x000000000040764b : fmul dword ptr [rax - 0x42] ; ret
0x00000000004074c2 : fmul dword ptr [rax - 0x46] ; jg 0x40746c ; ret
0x000000000040bc64 : fmul dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000408c3e : fmul dword ptr [rcx - 0x77] ; ror byte ptr [rcx + 0x29], cl ; ret 0x14c
0x000000000040f40c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000406ea3 : fst dword ptr [rax + rax] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406638 : fsubr st(0) ; ret 0x51
0x0000000000401da9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406ab0 : hlt ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401ba0 : hlt ; pop rbp ; mov edi, 0x6132e0 ; jmp rax
0x0000000000407c09 : in al, dx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040215d : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8841
0x0000000000402301 : inc dword ptr [rcx - 0x7658b10e] ; or dword ptr [rbp - 0x77], eax ; ret 0x8141
0x00000000004057bb : inc dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x000000000040a605 : int 0x80
0x0000000000401b93 : ja 0x401b9a ; pop rbp ; ret
0x0000000000407816 : ja 0x407823 ; pop rbp ; ret
0x0000000000407836 : ja 0x40784b ; pop rbp ; ret
0x000000000040db41 : ja 0x40db8e ; pop rbp ; ret
0x0000000000401b9f : je 0x401b9d ; pop rbp ; mov edi, 0x6132e0 ; jmp rax
0x00000000004074c5 : jg 0x407469 ; ret
0x00000000004074d5 : jg 0x407479 ; ret
0x000000000040676a : jge 0x40676a ; mov rax, qword ptr [rdi] ; pop rbp ; ret
0x0000000000407042 : jge 0x407043 ; mov qword ptr [rdi + rsi*8], rdx ; pop rbp ; ret
0x0000000000407812 : jge 0x407813 ; mov qword ptr [rdi + 8], rsi ; pop rbp ; ret
0x0000000000407832 : jge 0x407833 ; mov qword ptr [rdi + 0x10], rsi ; pop rbp ; ret
0x000000000040baba : jge 0x40babb ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040bada : jge 0x40badb ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040bafa : jge 0x40bafb ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000040beb0 : jge 0x40bea3 ; mov rcx, qword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040d480 : jge 0x40d473 ; mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040db3d : jge 0x40db3e ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040934a : jle 0x409399 ; ret 0x418a
0x0000000000409358 : jle 0x4093a7 ; ret 0x498a
0x00000000004017eb : jmp 0x4016a7
0x000000000040c700 : jmp 0x49035050
0x000000000040d17e : jmp 0x49035ace
0x000000000040d1eb : jmp 0x49035b3b
0x000000000040d97c : jmp 0x490362cc
0x000000000040d9e9 : jmp 0x49036339
0x000000000040aad8 : jmp 0xffffffffc2c9f2e2
0x000000000041149b : jmp qword ptr [rax]
0x0000000000404c36 : jmp qword ptr [rcx]
0x000000000041203b : jmp qword ptr [rdi]
0x000000000041137b : jmp qword ptr [rdx]
0x0000000000410dd3 : jmp qword ptr [rsi]
0x0000000000401ba7 : jmp rax
0x00000000004020e1 : jmp rcx
0x0000000000401be7 : jmp rdx
0x0000000000401bd0 : jne 0x401bd7 ; pop rbp ; ret
0x0000000000407091 : jne 0x407089 ; mov rax, rdx ; pop rbp ; ret
0x000000000040bf26 : jne 0x40bf11 ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000040c24d : jne 0x40c231 ; call rax
0x0000000000404635 : jo 0x404696 ; ret
0x0000000000405c5f : jo 0x405cc5 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406304 : jo 0x406365 ; ret
0x000000000040643e : jo 0x40649f ; ret
0x0000000000409538 : jo 0x4094fb ; sbb eax, dword ptr [rip + 0x148a3f2] ; ret 0x8948
0x000000000040797a : jp 0x40798e ; call rax
0x000000000040950f : jp 0x409537 ; lea esi, dword ptr [rbx + 0x294879c8] ; ret 0x8948
0x000000000040e1fa : lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000409511 : lea esi, dword ptr [rbx + 0x294879c8] ; ret 0x8948
0x0000000000412234 : lodsb al, byte ptr [rsi] ; adc al, 0 ; add byte ptr [rax], bh ; ret
0x0000000000403c5b : loopne 0x403cab ; add esp, 0x20 ; pop rbp ; ret
0x0000000000403c5a : loopne 0x403cac ; add esp, 0x20 ; pop rbp ; ret
0x0000000000406757 : loopne 0x4067a7 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000406756 : loopne 0x4067a8 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000406e27 : loopne 0x406e77 ; add esp, 0x60 ; pop rbp ; ret
0x0000000000406e26 : loopne 0x406e78 ; add esp, 0x60 ; pop rbp ; ret
0x000000000040847c : loopne 0x4084cf ; mov edx, 0xb9bb83c3 ; call 0x494046c3
0x000000000040b3d7 : loopne 0x40b3de ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040bf27 : loopne 0x40bf79 ; mov esi, eax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000040e980 : loopne 0x40e988 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040be2e : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000402e62 : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004061db : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040309f : mov al, 0x48 ; add esp, 0x60 ; pop rbp ; ret
0x0000000000406068 : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x000000000040bd07 : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040ee66 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040398c : mov al, byte ptr [rbp - 9] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040ee30 : mov al, dl ; movzx eax, al ; pop rbp ; ret
0x000000000040edc5 : mov al, dl ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000040ed0a : mov ax, dx ; movzx eax, ax ; pop rbp ; ret
0x000000000040ec9b : mov ax, r8w ; movzx eax, ax ; pop rbp ; ret
0x000000000040eca0 : mov bh, -0x40 ; pop rbp ; ret
0x00000000004039d1 : mov byte ptr [0x613348], al ; pop rbp ; ret
0x0000000000401c03 : mov byte ptr [rip + 0x21172e], 1 ; ret
0x000000000040dd15 : mov dh, -0x39 ; pop rbp ; ret
0x0000000000403f08 : mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040cefb : mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000403992 : mov dh, -0x40 ; pop rbp ; ret
0x000000000040edc8 : mov dh, -0x40 ; pop rbx ; pop rbp ; ret
0x00000000004039ad : mov dword ptr [0x613340], edi ; pop rbp ; ret
0x00000000004044e6 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004044a8 : mov dword ptr [rax], eax ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000404364 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004044a7 : mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000403c59 : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401eb9 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040be2c : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401da7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401dd5 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040f34d : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040c1d5 : mov dword ptr [rbp - 8], eax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040455e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040c37a : mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x0000000000407835 : mov dword ptr [rdi + 0x10], esi ; pop rbp ; ret
0x000000000040db40 : mov dword ptr [rdi + 0x48], esi ; pop rbp ; ret
0x0000000000407815 : mov dword ptr [rdi + 8], esi ; pop rbp ; ret
0x0000000000407045 : mov dword ptr [rdi + rsi*8], edx ; pop rbp ; ret
0x0000000000402d66 : mov dword ptr [rdx + rcx*8], eax ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000406ff3 : mov dword ptr [rdx + rcx*8], eax ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000404318 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004066f6 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403c23 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404315 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000403b7f : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000407c07 : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040729e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004042cd : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403e94 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040435e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040bbd9 : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000406755 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406e25 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040bf2c : mov eax, dword ptr [rbp - 0x20] ; call rax
0x0000000000406b37 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004044aa : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004088bd : mov eax, dword ptr [rbp - 0x30] ; mov rax, qword ptr [rax] ; pop rbp ; ret
0x000000000040462f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004061d9 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040309d : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000406aae : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b644 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040b5e7 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004036a2 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403777 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004034e5 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040b43d : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040dc08 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040a9cd : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040669f : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004040dc : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040723e : mov eax, dword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040d5d3 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040c1d9 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040babd : mov eax, dword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040badd : mov eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040bafd : mov eax, dword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000040676d : mov eax, dword ptr [rdi] ; pop rbp ; ret
0x000000000040ec9d : mov eax, eax ; movzx eax, ax ; pop rbp ; ret
0x000000000040e9ce : mov eax, eax ; pop rbp ; ret
0x000000000040eabd : mov eax, ecx ; pop rbp ; ret
0x0000000000406a21 : mov eax, edi ; pop rbp ; ret
0x000000000040c561 : mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040ed0b : mov eax, edx ; movzx eax, ax ; pop rbp ; ret
0x0000000000407094 : mov eax, edx ; pop rbp ; ret
0x000000000040ec9c : mov eax, r8d ; movzx eax, ax ; pop rbp ; ret
0x000000000040eabc : mov eax, r9d ; pop rbp ; ret
0x0000000000401c2b : mov ebp, esp ; call rax
0x0000000000401b91 : mov ebp, esp ; ja 0x401b9c ; pop rbp ; ret
0x0000000000407061 : mov ebx, 0x48000058 ; add esp, 0x10 ; pop rbp ; ret
0x000000000040a61d : mov ecx, 0x5b2a830a ; ret
0x000000000040848e : mov ecx, 0xb9bb83c3 ; call 0x494046d1
0x00000000004020da : mov ecx, dword ptr [rax*8 + 0x40f490] ; jmp rcx
0x00000000004046f2 : mov ecx, dword ptr [rax*8 + 0x40fc40] ; jmp rcx
0x0000000000404a16 : mov ecx, dword ptr [rax*8 + 0x40fc88] ; jmp rcx
0x0000000000409fde : mov ecx, dword ptr [rax*8 + 0x410178] ; jmp rcx
0x000000000040b16e : mov ecx, dword ptr [rax*8 + 0x4104f0] ; jmp rcx
0x000000000040b0ee : mov ecx, dword ptr [rax*8 + 0x410550] ; jmp rcx
0x0000000000404361 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040c8c2 : mov ecx, dword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040c85f : mov ecx, dword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040beb3 : mov ecx, dword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040d483 : mov ecx, dword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040d550 : mov ecx, dword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040743f : mov edi, 0x54582f16 ; ret
0x0000000000401c25 : mov edi, 0x612e20 ; mov rbp, rsp ; call rax
0x0000000000401ba2 : mov edi, 0x6132e0 ; jmp rax
0x0000000000401be2 : mov edi, 0x6132e0 ; jmp rdx
0x0000000000407831 : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x10], rsi ; pop rbp ; ret
0x000000000040db3c : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000407811 : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 8], rsi ; pop rbp ; ret
0x0000000000407041 : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + rsi*8], rdx ; pop rbp ; ret
0x000000000040bab9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040bad9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040baf9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000406769 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi] ; pop rbp ; ret
0x000000000040c863 : mov edi, dword ptr [rcx] ; call rax
0x000000000040c249 : mov edi, dword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x0000000000407979 : mov edi, dword ptr [rdx + 0x10] ; call rax
0x000000000040f407 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000040f406 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000040744f : mov edx, 0x54582f16 ; ret
0x000000000040847e : mov edx, 0xb9bb83c3 ; call 0x494046c1
0x0000000000407975 : mov edx, dword ptr [rbp - 8] ; mov rdi, qword ptr [rdx + 0x10] ; call rax
0x000000000040c24c : mov esi, dword ptr [rbp - 0x20] ; call rax
0x000000000040beb7 : mov esi, dword ptr [rcx] ; call rax
0x0000000000401be0 : mov esi, eax ; mov edi, 0x6132e0 ; jmp rdx
0x000000000040bf29 : mov esi, eax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x00000000004039ac : mov qword ptr [0x613340], rdi ; pop rbp ; ret
0x000000000040c1d4 : mov qword ptr [rbp - 8], rax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040455d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407834 : mov qword ptr [rdi + 0x10], rsi ; pop rbp ; ret
0x000000000040db3f : mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000407814 : mov qword ptr [rdi + 8], rsi ; pop rbp ; ret
0x0000000000407044 : mov qword ptr [rdi + rsi*8], rdx ; pop rbp ; ret
0x0000000000402d65 : mov qword ptr [rdx + rcx*8], rax ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000406ff2 : mov qword ptr [rdx + rcx*8], rax ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040be2d : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004061da : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040309e : mov r8b, 0x48 ; add esp, 0x60 ; pop rbp ; ret
0x00000000004088c0 : mov rax, qword ptr [rax] ; pop rbp ; ret
0x00000000004066f5 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403c22 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404314 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000403b7e : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040729d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004042cc : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403e93 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040bbd8 : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000406754 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406e24 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040bf2b : mov rax, qword ptr [rbp - 0x20] ; call rax
0x0000000000406b36 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004088bc : mov rax, qword ptr [rbp - 0x30] ; mov rax, qword ptr [rax] ; pop rbp ; ret
0x000000000040462e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004061d8 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040309c : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040dc07 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040a9cc : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040669e : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004040db : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040723d : mov rax, qword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040d5d2 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040c1d8 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040babc : mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040badc : mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040bafc : mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000040676c : mov rax, qword ptr [rdi] ; pop rbp ; ret
0x000000000040e9cd : mov rax, r8 ; pop rbp ; ret
0x0000000000406a20 : mov rax, rdi ; pop rbp ; ret
0x000000000040c560 : mov rax, rdx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407093 : mov rax, rdx ; pop rbp ; ret
0x0000000000401c2a : mov rbp, rsp ; call rax
0x0000000000401b90 : mov rbp, rsp ; ja 0x401b9d ; pop rbp ; ret
0x00000000004020d9 : mov rcx, qword ptr [rax*8 + 0x40f490] ; jmp rcx
0x00000000004046f1 : mov rcx, qword ptr [rax*8 + 0x40fc40] ; jmp rcx
0x0000000000404a15 : mov rcx, qword ptr [rax*8 + 0x40fc88] ; jmp rcx
0x0000000000409fdd : mov rcx, qword ptr [rax*8 + 0x410178] ; jmp rcx
0x000000000040b16d : mov rcx, qword ptr [rax*8 + 0x4104f0] ; jmp rcx
0x000000000040b0ed : mov rcx, qword ptr [rax*8 + 0x410550] ; jmp rcx
0x000000000040c8c1 : mov rcx, qword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040c85e : mov rcx, qword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040beb2 : mov rcx, qword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040d482 : mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040d54f : mov rcx, qword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000407830 : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x10], rsi ; pop rbp ; ret
0x000000000040db3b : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000407810 : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 8], rsi ; pop rbp ; ret
0x0000000000407040 : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + rsi*8], rdx ; pop rbp ; ret
0x000000000040bab8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040bad8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040baf8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000406768 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi] ; pop rbp ; ret
0x000000000040c862 : mov rdi, qword ptr [rcx] ; call rax
0x000000000040c248 : mov rdi, qword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x0000000000407978 : mov rdi, qword ptr [rdx + 0x10] ; call rax
0x0000000000407974 : mov rdx, qword ptr [rbp - 8] ; mov rdi, qword ptr [rdx + 0x10] ; call rax
0x000000000040c24b : mov rsi, qword ptr [rbp - 0x20] ; call rax
0x000000000040beb6 : mov rsi, qword ptr [rcx] ; call rax
0x0000000000401bdf : mov rsi, rax ; mov edi, 0x6132e0 ; jmp rdx
0x000000000040bf28 : mov rsi, rax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x0000000000412214 : mov word ptr [rax + rax], ss ; add byte ptr [rax], ch ; ret
0x000000000040b4d0 : movabs dword ptr [0x941c90941f0213f], eax ; ret 0x3145
0x0000000000403f07 : movzx eax, al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040cefa : movzx eax, al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000403991 : movzx eax, al ; pop rbp ; ret
0x000000000040edc7 : movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000040ec9f : movzx eax, ax ; pop rbp ; ret
0x000000000040dd14 : movzx eax, bh ; pop rbp ; ret
0x000000000040dd13 : movzx eax, dil ; pop rbp ; ret
0x000000000040398d : mul dword ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000040398e : mul dword ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000040f428 : nop dword ptr [rax + rax] ; ret
0x0000000000404d7d : or al, 0x18 ; ret 0x6451
0x0000000000407973 : or byte ptr [rax - 0x75], cl ; push rbp ; clc ; mov rdi, qword ptr [rdx + 0x10] ; call rax
0x0000000000406a1f : or byte ptr [rax - 0x77], cl ; clc ; pop rbp ; ret
0x0000000000407cdf : or byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000402307 : or dword ptr [rbp - 0x77], eax ; ret 0x8141
0x0000000000402338 : or dword ptr [rcx + 0x21], eax ; rol byte ptr [rbp + 9], 1 ; ret 0x8141
0x0000000000409df1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004063c1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040e9cb : or eax, edi ; mov rax, r8 ; pop rbp ; ret
0x000000000040ebaf : or eax, edi ; pop rbp ; ret
0x000000000040eaba : or ecx, edx ; mov eax, r9d ; pop rbp ; ret
0x000000000040e9ca : or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x000000000040eab9 : or r9d, edx ; mov eax, r9d ; pop rbp ; ret
0x000000000040ebae : or rax, rdi ; pop rbp ; ret
0x0000000000408f48 : out -0x36, al ; add dword ptr [rax + 0x29], ecx ; ret 0x8948
0x000000000040dd11 : out 1, eax ; movzx eax, dil ; pop rbp ; ret
0x0000000000406a1e : out 8, eax ; mov rax, rdi ; pop rbp ; ret
0x000000000040bdb9 : outsb dx, byte ptr [rsi] ; ret 0x280f
0x000000000040f41c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405c61 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040f41e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405c63 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040f420 : pop r14 ; pop r15 ; ret
0x0000000000405a13 : pop r14 ; pop rbp ; ret
0x0000000000405c65 : pop r15 ; pop rbp ; ret
0x000000000040f422 : pop r15 ; ret
0x0000000000407062 : pop rax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407442 : pop rax ; push rsp ; ret
0x0000000000401c02 : pop rbp ; mov byte ptr [rip + 0x21172e], 1 ; ret
0x0000000000401ba1 : pop rbp ; mov edi, 0x6132e0 ; jmp rax
0x0000000000401bde : pop rbp ; mov rsi, rax ; mov edi, 0x6132e0 ; jmp rdx
0x000000000040f41b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040f41f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401b95 : pop rbp ; ret
0x0000000000405c60 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040a49d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405a12 : pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040edca : pop rbx ; pop rbp ; ret
0x000000000040a621 : pop rbx ; ret
0x0000000000405c66 : pop rdi ; pop rbp ; ret
0x000000000040f423 : pop rdi ; ret
0x0000000000405c64 : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040f421 : pop rsi ; pop r15 ; ret
0x0000000000405a14 : pop rsi ; pop rbp ; ret
0x000000000040f41d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405c62 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040bdd0 : pop rsp ; ret 0xf66
0x00000000004034eb : push rax ; pop rbp ; ret
0x00000000004099e9 : push rax ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000407976 : push rbp ; clc ; mov rdi, qword ptr [rdx + 0x10] ; call rax
0x000000000040764a : push rbp ; fmul dword ptr [rax - 0x42] ; ret
0x0000000000401c24 : push rbp ; mov edi, 0x612e20 ; mov rbp, rsp ; call rax
0x0000000000406ea4 : push rsp ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407443 : push rsp ; ret
0x00000000004004b0 : ret
0x000000000040d50c : ret 0
0x00000000004032e0 : ret 0x148
0x0000000000408c44 : ret 0x14c
0x0000000000405dfe : ret 0x1b2
0x00000000004019f2 : ret 0x2117
0x00000000004017f2 : ret 0x2118
0x0000000000408dc2 : ret 0x2149
0x000000000040bdba : ret 0x280f
0x0000000000402cb8 : ret 0x2948
0x0000000000405189 : ret 0x294c
0x00000000004051a5 : ret 0x294d
0x000000000040b4d9 : ret 0x3145
0x000000000040905a : ret 0x314c
0x0000000000409c4c : ret 0x3948
0x000000000040fe80 : ret 0x404b
0x0000000000401cbd : ret 0x40f6
0x000000000040934c : ret 0x418a
0x0000000000408485 : ret 0x48ff
0x000000000040935a : ret 0x498a
0x000000000040663a : ret 0x51
0x00000000004043e4 : ret 0x5589
0x0000000000404d7f : ret 0x6451
0x000000000040230a : ret 0x8141
0x0000000000407d67 : ret 0x8148
0x000000000040903d : ret 0x8149
0x000000000040c703 : ret 0x8348
0x000000000040dbce : ret 0x840
0x0000000000405423 : ret 0x8840
0x0000000000402164 : ret 0x8841
0x0000000000409f99 : ret 0x8844
0x0000000000406d5e : ret 0x8948
0x00000000004051a8 : ret 0x8949
0x000000000040ed09 : ret 0x8966
0x000000000040533c : ret 0x89a5
0x000000000040518c : ret 0x8b48
0x000000000040e88f : ret 0x941
0x0000000000409864 : ret 0x948
0x00000000004021bb : ret 0xb0
0x0000000000408b9a : ret 0xb848
0x000000000040e439 : ret 0xb849
0x000000000040c786 : ret 0xb948
0x00000000004051bd : ret 0xbde8
0x0000000000402fc0 : ret 0xbe0f
0x0000000000402366 : ret 0xbe22
0x000000000040b339 : ret 0xc131
0x0000000000401bc5 : ret 0xc148
0x000000000040e1a0 : ret 0xc2f6
0x0000000000407354 : ret 0xc6e8
0x0000000000404ba4 : ret 0xca21
0x000000000040b472 : ret 0xca29
0x000000000040ee2f : ret 0xd088
0x0000000000406693 : ret 0xd284
0x000000000040b3b5 : ret 0xd709
0x0000000000405a4c : ret 0xee8
0x0000000000405438 : ret 0xf180
0x000000000040dbb2 : ret 0xf280
0x0000000000404c1e : ret 0xf281
0x000000000040bdd1 : ret 0xf66
0x000000000040ed04 : ret 0xfa31
0x000000000040d190 : ret 0xff3
0x0000000000406d20 : ret 0xffff
0x00000000004032e6 : ret 1
0x000000000040e200 : ret 2
0x0000000000408864 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040edb3 : rol byte ptr [rbp + 9], 1 ; ret
0x000000000040233b : rol byte ptr [rbp + 9], 1 ; ret 0x8141
0x00000000004044a6 : rol byte ptr [rcx + rcx*4], 1 ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040eabb : rol dword ptr [rcx + rcx*4 - 0x38], 1 ; pop rbp ; ret
0x000000000040a600 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000040374f : ror byte ptr [r8 - 0x77], 1 ; ret 0x2948
0x0000000000404630 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x40469b ; ret
0x000000000040ebaa : ror byte ptr [rax + 0x31], 1 ; xlatb ; or rax, rdi ; pop rbp ; ret
0x0000000000401bcc : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401bdb ; pop rbp ; ret
0x000000000040a601 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000403750 : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000405186 : ror byte ptr [rax - 0x77], 1 ; ret 0x294c
0x0000000000404631 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x40469a ; ret
0x000000000040cefc : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x0000000000408c41 : ror byte ptr [rcx + 0x29], cl ; ret 0x14c
0x0000000000408c2c : ror byte ptr [rcx + 0x29], cl ; ret 0x294c
0x000000000040ed0c : ror byte ptr [rdi], 1 ; mov bh, -0x40 ; pop rbp ; ret
0x000000000040ee31 : ror byte ptr [rdi], 1 ; mov dh, -0x40 ; pop rbp ; ret
0x000000000040edc6 : ror byte ptr [rdi], 1 ; mov dh, -0x40 ; pop rbx ; pop rbp ; ret
0x000000000040765b : ror dword ptr [rax - 0x46], 1 ; ret
0x0000000000406d1a : ror dword ptr [rax - 0x77], 0x4d ; shr cl, 1 ; ret 0xffff
0x0000000000401bce : sar eax, 1 ; jne 0x401bd9 ; pop rbp ; ret
0x0000000000401bcd : sar rax, 1 ; jne 0x401bda ; pop rbp ; ret
0x0000000000412230 : sbb al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; adc al, 0 ; add byte ptr [rax], bh ; ret
0x0000000000412210 : sbb al, 0 ; add byte ptr [rax], al ; mov word ptr [rax + rax], ss ; add byte ptr [rax], ch ; ret
0x000000000040caa2 : sbb cl, byte ptr [rdi + rdi*8 - 1] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040953a : sbb eax, dword ptr [rip + 0x148a3f2] ; ret 0x8948
0x00000000004070ca : sete al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004070cc : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000040bdef : shl dword ptr [rsi + 0xf], 0x5c ; ret 0xf66
0x0000000000406a1d : shl edi, 8 ; mov rax, rdi ; pop rbp ; ret
0x0000000000406a1c : shl rdi, 8 ; mov rax, rdi ; pop rbp ; ret
0x00000000004038aa : shr byte ptr [rsi], cl ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406d1e : shr cl, 1 ; ret 0xffff
0x0000000000406d1d : shr r9b, 1 ; ret 0xffff
0x000000000040ee68 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000410f71 : sub bh, bh ; jmp rdx
0x0000000000411638 : sub byte ptr [rcx - 1], dl ; call qword ptr [rcx]
0x000000000040a61f : sub dword ptr [rdx], 0x5b ; ret
0x0000000000410ff1 : sub edi, edi ; call qword ptr [rsi]
0x000000000040f471 : sub esp, 8 ; add rsp, 8 ; ret
0x000000000040f470 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040f42a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000401cb5 : test dword ptr [rax], 0x8d480000 ; cmp al, 0x25 ; ret 0x40f6
0x0000000000405422 : xchg eax, ebp ; ret 0x8840
0x0000000000402163 : xchg eax, ebp ; ret 0x8841
0x0000000000406692 : xchg eax, esp ; ret 0xd284
0x00000000004070cb : xchg eax, esp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000040e9c9 : xlatb ; or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x000000000040ebad : xlatb ; or rax, rdi ; pop rbp ; ret
0x0000000000401ba4 : xor ah, byte ptr [rcx] ; jmp rax
0x0000000000401be4 : xor ah, byte ptr [rcx] ; jmp rdx
0x00000000004107e1 : xor bh, bh ; call rsp
0x000000000040e52e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000403ac7 : xor eax, 0x48ffffdc ; add esp, 0x10 ; pop rbp ; ret
0x0000000000406157 : xor eax, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x00000000004044a5 : xor eax, edx ; mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000411291 : xor edi, edi ; call rdi
0x000000000040e9c8 : xor edi, edx ; or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x000000000040ebac : xor edi, edx ; or rax, rdi ; pop rbp ; ret
0x000000000040424c : xor esp, dword ptr [rcx] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004039b1 : xor esp, dword ptr [rcx] ; pop rbp ; ret
0x000000000040ebab : xor rdi, rdx ; or rax, rdi ; pop rbp ; ret
0x00000000004039d4 : xor rsp, qword ptr [rcx] ; pop rbp ; ret
