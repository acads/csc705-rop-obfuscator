0x00000000004038a3 : adc al, 0x25 ; push rbp ; ret
0x0000000000402d38 : adc al, 0x25 ; push rdx ; ret
0x0000000000402d10 : adc al, 0x25 ; ret
0x000000000040bc28 : adc al, 0x48 ; add esp, 0x10 ; pop rbp ; ret
0x0000000000408bc9 : adc al, 1 ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040d101 : adc byte ptr [rax], al ; add al, dl ; out -1, al ; call qword ptr [rax]
0x000000000040d0f1 : adc byte ptr [rax], al ; add byte ptr [rax], al ; out -1, al ; call rax
0x000000000040d270 : adc byte ptr [rcx - 1], cl ; jmp rdx
0x000000000040bc0c : adc dh, dh ; ret 0xf01
0x0000000000402d77 : adc eax, 0x48ffffe8 ; add esp, 0x10 ; pop rbp ; ret
0x0000000000406179 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040d6b3 : add ah, cl ; add al, 0 ; add byte ptr [rax], cl ; mov dr1, edi ; jmp qword ptr [rdx]
0x00000000004084a9 : add al, 0 ; add byte ptr [rax - 0x73], cl ; xor al, 0x25 ; ret
0x000000000040d675 : add al, 0 ; add byte ptr [rax], bl ; mov edi, edi ; jmp rdx
0x000000000040d6b5 : add al, 0 ; add byte ptr [rax], cl ; mov dr1, edi ; jmp qword ptr [rdx]
0x00000000004023d8 : add al, ch ; ret 0xfff2
0x0000000000402558 : add al, ch ; ret 0xfff3
0x000000000040d103 : add al, dl ; out -1, al ; call qword ptr [rax]
0x000000000040be1f : add bl, dh ; ret
0x0000000000409a87 : add byte ptr [rax + 1], cl ; ret 0x4a3b
0x00000000004038a0 : add byte ptr [rax - 0x73], cl ; adc al, 0x25 ; push rbp ; ret
0x0000000000402d35 : add byte ptr [rax - 0x73], cl ; adc al, 0x25 ; push rdx ; ret
0x0000000000402d0d : add byte ptr [rax - 0x73], cl ; adc al, 0x25 ; ret
0x0000000000402cce : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x0000000000402952 : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x40
0x0000000000401bfd : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; xchg eax, ebp ; ret 0x40
0x00000000004084ab : add byte ptr [rax - 0x73], cl ; xor al, 0x25 ; ret
0x0000000000401bd7 : add byte ptr [rax - 0x73], cl ; xor al, 0x25 ; xchg eax, ecx ; ret 0x40
0x000000000040bd46 : add byte ptr [rax - 0x75], cl ; call 0x4903469e
0x000000000040772d : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000040d26e : add byte ptr [rax], al ; adc byte ptr [rcx - 1], cl ; jmp rdx
0x000000000040be1d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000409a85 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x4a3b
0x000000000040389e : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; adc al, 0x25 ; push rbp ; ret
0x0000000000402d33 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; adc al, 0x25 ; push rdx ; ret
0x0000000000402d0b : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; adc al, 0x25 ; ret
0x0000000000402ccc : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x0000000000401bfb : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; xchg eax, ebp ; ret 0x40
0x0000000000401bd5 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; xor al, 0x25 ; xchg eax, ecx ; ret 0x40
0x000000000040bd44 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; call 0x490346a0
0x000000000040be1b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040c368 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; push rdi ; ret
0x0000000000400398 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040c38a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rsp ; ret
0x000000000040c36a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; push rdi ; ret
0x000000000040039a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040bb01 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040c38c : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rsp ; ret
0x000000000040c36c : add byte ptr [rax], al ; add byte ptr [rax], al ; push rdi ; ret
0x000000000040039c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040c66c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x404f
0x000000000040c96c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4073
0x0000000000403736 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040d34e : add byte ptr [rax], al ; add byte ptr [rcx - 1], bl ; call qword ptr [rsi]
0x000000000040581e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x000000000040bb52 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000406a8e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004085fc : add byte ptr [rax], al ; add cl, ch ; ret 2
0x0000000000406141 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405e50 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040bb03 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401523 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000040d0b3 : add byte ptr [rax], al ; fcos ; call rax
0x0000000000401559 : add byte ptr [rax], al ; jmp 0x401539
0x0000000000404712 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040d672 : add byte ptr [rax], al ; mov word ptr [rax + rax], es ; add byte ptr [rax], bl ; mov edi, edi ; jmp rdx
0x000000000040d0f3 : add byte ptr [rax], al ; out -1, al ; call rax
0x0000000000402a10 : add byte ptr [rax], al ; pop rbp ; ret
0x00000000004075cb : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403737 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040c38e : add byte ptr [rax], al ; pop rsp ; ret
0x000000000040d042 : add byte ptr [rax], al ; push rax ; mov cl, -1 ; call qword ptr [rax]
0x000000000040c36e : add byte ptr [rax], al ; push rdi ; ret
0x000000000040039e : add byte ptr [rax], al ; ret
0x000000000040c66e : add byte ptr [rax], al ; ret 0x404f
0x000000000040c96e : add byte ptr [rax], al ; ret 0x4073
0x000000000040cdd2 : add byte ptr [rax], al ; ror byte ptr [rbx - 1], 1 ; call qword ptr [rax]
0x000000000040d26a : add byte ptr [rax], al ; test byte ptr [rax], al ; add byte ptr [rax], al ; adc byte ptr [rcx - 1], cl ; jmp rdx
0x000000000040de17 : add byte ptr [rax], bh ; sar edi, cl ; jmp rax
0x000000000040d677 : add byte ptr [rax], bl ; mov edi, edi ; jmp rdx
0x000000000040d6b7 : add byte ptr [rax], cl ; mov dr1, edi ; jmp qword ptr [rdx]
0x000000000040dd17 : add byte ptr [rax], cl ; ret
0x00000000004075cc : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000403738 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040b84c : add byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x000000000040d350 : add byte ptr [rcx - 1], bl ; call qword ptr [rsi]
0x000000000040700d : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401a48 : add byte ptr [rcx], al ; ret
0x00000000004085f8 : add byte ptr [rdi], cl ; lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000405820 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x000000000040bb54 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000406a90 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000408cc2 : add byte ptr cs:[rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004085fe : add cl, ch ; ret 2
0x0000000000407c09 : add dword ptr [rax - 0x77], ecx ; ret 0x8148
0x0000000000402950 : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x40
0x000000000040613f : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004075ca : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000405e0f : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000402adb : add dword ptr [rax], ebp ; ret 0x1188
0x0000000000403e84 : add dword ptr [rax], ecx ; ret 0x840
0x000000000040a012 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000040b3ea : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401a44 : add eax, 0x20d8b6 ; add ebx, esi ; ret
0x00000000004085fb : add eax, 0xe9000000 ; ret 2
0x0000000000401a0b : add eax, edx ; sar rax, 1 ; jne 0x401a1c ; pop rbp ; ret
0x000000000040a609 : add eax, esi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x0000000000401a49 : add ebx, esi ; ret
0x0000000000408c0b : add edi, eax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x0000000000401b7b : add esp, 0x10 ; pop rbp ; ret
0x000000000040700b : add esp, 0x100 ; pop rbp ; ret
0x000000000040aacc : add esp, 0x10e0 ; pop rbp ; ret
0x000000000040892c : add esp, 0x130 ; pop rbp ; ret
0x0000000000404225 : add esp, 0x170 ; pop rbp ; ret
0x00000000004078fc : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000403984 : add esp, 0x1c0 ; pop rbp ; ret
0x0000000000402a0c : add esp, 0x1e0 ; pop rbp ; ret
0x0000000000402ed7 : add esp, 0x20 ; pop rbp ; ret
0x00000000004097c6 : add esp, 0x250 ; pop rbp ; ret
0x0000000000401c5d : add esp, 0x30 ; pop rbp ; ret
0x0000000000402b30 : add esp, 0x40 ; pop rbp ; ret
0x00000000004034aa : add esp, 0x40 ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040655c : add esp, 0x50 ; pop rbp ; ret
0x000000000040bd9c : add esp, 0x60 ; pop rbp ; ret
0x00000000004031b8 : add esp, 0x60 ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000402c44 : add esp, 0x70 ; pop rbp ; ret
0x000000000040646a : add esp, 0x90 ; pop rbp ; ret
0x0000000000407793 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040464a : add esp, 0xb0 ; pop rbp ; ret
0x000000000040af4d : add esp, 0xc0 ; pop rbp ; ret
0x0000000000401526 : add esp, 8 ; ret
0x0000000000401a0a : add rax, rdx ; sar rax, 1 ; jne 0x401a1d ; pop rbp ; ret
0x000000000040a608 : add rax, rsi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x0000000000408c0a : add rdi, rax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x0000000000401b7a : add rsp, 0x10 ; pop rbp ; ret
0x000000000040700a : add rsp, 0x100 ; pop rbp ; ret
0x000000000040aacb : add rsp, 0x10e0 ; pop rbp ; ret
0x000000000040892b : add rsp, 0x130 ; pop rbp ; ret
0x0000000000404224 : add rsp, 0x170 ; pop rbp ; ret
0x00000000004078fb : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000403983 : add rsp, 0x1c0 ; pop rbp ; ret
0x0000000000402a0b : add rsp, 0x1e0 ; pop rbp ; ret
0x0000000000402ed6 : add rsp, 0x20 ; pop rbp ; ret
0x00000000004097c5 : add rsp, 0x250 ; pop rbp ; ret
0x0000000000401c5c : add rsp, 0x30 ; pop rbp ; ret
0x0000000000402b2f : add rsp, 0x40 ; pop rbp ; ret
0x00000000004034a9 : add rsp, 0x40 ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040655b : add rsp, 0x50 ; pop rbp ; ret
0x000000000040bd9b : add rsp, 0x60 ; pop rbp ; ret
0x00000000004031b7 : add rsp, 0x60 ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000402c43 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000406469 : add rsp, 0x90 ; pop rbp ; ret
0x0000000000407792 : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000404649 : add rsp, 0xb0 ; pop rbp ; ret
0x000000000040af4c : add rsp, 0xc0 ; pop rbp ; ret
0x0000000000401525 : add rsp, 8 ; ret
0x000000000040a011 : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040b3e9 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401a47 : and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000402a39 : and eax, 0x60f250 ; pop rbp ; ret
0x0000000000402c5f : and eax, 0x60f308 ; pop rbp ; ret
0x0000000000402c83 : and eax, 0x60f310 ; pop rbp ; ret
0x00000000004095d4 : call 0x31724
0x000000000040bd4a : call 0x4903469a
0x000000000040bd49 : call 0x4903469b
0x0000000000402d78 : call 0xffffffff83892d84
0x0000000000405e49 : call 0xffffffffe902e799
0x0000000000405e48 : call 0xffffffffe902e79a
0x000000000040a493 : call 0xffffffffe9032de3
0x0000000000407d88 : call 0xffffffffffd94077
0x0000000000407d87 : call 0xffffffffffd94078
0x000000000040bdf9 : call qword ptr [r12 + rbx*8]
0x000000000040cdd7 : call qword ptr [rax]
0x000000000040d353 : call qword ptr [rsi]
0x000000000040bdfa : call qword ptr [rsp + rbx*8]
0x0000000000401a6d : call rax
0x0000000000405b9c : call rbx
0x000000000040416d : call rdi
0x000000000040892a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x0000000000407aff : clc ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004097c4 : clc ; add rsp, 0x250 ; pop rbp ; ret
0x0000000000406aa1 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403c0b : clc ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040b0a1 : clc ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040bd9a : clc ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000404648 : clc ; add rsp, 0xb0 ; pop rbp ; ret
0x000000000040af4b : clc ; add rsp, 0xc0 ; pop rbp ; ret
0x0000000000401a0f : clc ; jne 0x401a18 ; pop rbp ; ret
0x000000000040bc25 : clc ; mov dword ptr [rax + 0x14], ecx ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004048e5 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040b8cf : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040b8d2 : clc ; pop rbp ; ret
0x000000000040b286 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040aaca : cld ; add rsp, 0x10e0 ; pop rbp ; ret
0x000000000040810b : cld ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040804a : cld ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402a36 : cld ; mov dword ptr [0x60f250], eax ; pop rbp ; ret
0x000000000040b8cc : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040b283 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040b226 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000408047 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401b8a : cmp al, 0x25 ; push rbx ; ret 0x40
0x0000000000402cd1 : cmp al, 0x25 ; ret
0x0000000000402955 : cmp al, 0x25 ; ret 0x40
0x0000000000401c00 : cmp al, 0x25 ; xchg eax, ebp ; ret 0x40
0x00000000004019cd : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4019e0 ; pop rbp ; ret
0x000000000040710c : cwde ; mov rcx, qword ptr [rax*8 + 0x40c930] ; jmp rcx
0x00000000004095d0 : dec dword ptr [rax - 0x75] ; push rbp ; call 0x31728
0x0000000000402a90 : dec dword ptr [rax - 0x75] ; push rbp ; ror byte ptr [rax + 1], 1 ; ret 0x8948
0x0000000000408664 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000406f3c : dec dword ptr [rax - 0x77] ; ret 0x7be8
0x0000000000406c39 : dec dword ptr [rax - 0x77] ; ret 0x7ee8
0x0000000000409606 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x00000000004055a2 : dec dword ptr [rcx - 0x77] ; ret 0x294d
0x000000000040a1a4 : enter -0x76b8, 0xc ; ret 0x59e9
0x0000000000402b7d : enter -0x7cb8, -0x3c ; pop rbp ; ret
0x0000000000405930 : enter 0x4b05, 0x34 ; fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x000000000040d0b5 : fcos ; call rax
0x0000000000405934 : fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x000000000040acee : fmul dword ptr [r8 - 0x77] ; ret 0x8148
0x0000000000403b7b : fmul dword ptr [rax + 0x29] ; ret 0x148
0x000000000040acef : fmul dword ptr [rax - 0x77] ; ret 0x8148
0x000000000040bdfc : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000401a46 : fsub dword ptr [rax] ; add byte ptr [rcx], al ; ret
0x0000000000401b79 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040bb5f : hlt ; mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004019e0 : hlt ; pop rbp ; mov edi, 0x60f2b0 ; jmp rax
0x000000000040a018 : in al, dx ; pop rbp ; ret
0x0000000000401b86 : in al, dx ; xor byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; push rbx ; ret 0x40
0x000000000040294f : in eax, dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x40
0x000000000040cdcf : inc dword ptr [rax + 4] ; add byte ptr [rax], al ; ror byte ptr [rbx - 1], 1 ; call qword ptr [rax]
0x0000000000405bbb : inc dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000407735 : int 0x80
0x000000000040930c : int 0xfd
0x00000000004019d3 : ja 0x4019da ; pop rbp ; ret
0x000000000040bf9d : jb 0x40c006 ; jns 0x40bfa8 ; push rax ; ret
0x000000000040bf9c : jb 0x40c007 ; jns 0x40bfa9 ; push rax ; ret
0x00000000004019df : je 0x4019dd ; pop rbp ; mov edi, 0x60f2b0 ; jmp rax
0x000000000040d5d1 : je 0x40d5d4 ; call rdi
0x000000000040155b : jmp 0x401537
0x0000000000407c08 : jmp 0xffffffffc2c9c412
0x000000000040d2b3 : jmp qword ptr [rax]
0x00000000004040fb : jmp qword ptr [rcx]
0x000000000040d4d3 : jmp qword ptr [rdx]
0x00000000004019e7 : jmp rax
0x0000000000404af9 : jmp rcx
0x0000000000401a27 : jmp rdx
0x0000000000401a10 : jne 0x401a17 ; pop rbp ; ret
0x000000000040bfa0 : jns 0x40bfa5 ; push rax ; ret
0x000000000040bf9f : jns 0x40bfa6 ; push rax ; ret
0x0000000000402c46 : jo 0x402ca7 ; ret
0x0000000000404227 : jo 0x40422f ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000404a35 : jo 0x404a96 ; ret
0x000000000040605f : jo 0x4060c5 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406704 : jo 0x406765 ; ret
0x000000000040683e : jo 0x40689f ; ret
0x00000000004085fa : lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x000000000040d100 : lock adc byte ptr [rax], al ; add al, dl ; out -1, al ; call qword ptr [rax]
0x000000000040d0c5 : loope 0x40d0c8 ; call qword ptr [rax]
0x0000000000402a0e : loopne 0x402a16 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000407f00 : loopne 0x407f50 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000407eff : loopne 0x407f51 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040aace : loopne 0x40aae5 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004034a8 : mov ah, 0x48 ; add esp, 0x40 ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040d035 : mov al, -1 ; call rax
0x000000000040464c : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004065db : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000406468 : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x000000000040b3e6 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000402c81 : mov byte ptr [0x60f310], al ; pop rbp ; ret
0x0000000000408bc7 : mov byte ptr [rax + 0x14], 1 ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040a5db : mov byte ptr [rax + 0xc], 1 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401a43 : mov byte ptr [rip + 0x20d8b6], 1 ; ret
0x000000000040d045 : mov cl, -1 ; call qword ptr [rax]
0x0000000000401a45 : mov dh, -0x28 ; and byte ptr [rax], al ; add ebx, esi ; ret
0x000000000040a014 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000040b3ec : mov dh, -0x40 ; pop rbp ; ret
0x000000000040d6b9 : mov dr1, edi ; jmp qword ptr [rdx]
0x0000000000402a37 : mov dword ptr [0x60f250], eax ; pop rbp ; ret
0x0000000000402c5d : mov dword ptr [0x60f308], edi ; pop rbp ; ret
0x000000000040bc26 : mov dword ptr [rax + 0x14], ecx ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004048e6 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004048a8 : mov dword ptr [rax], eax ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000404764 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004048a7 : mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000401c59 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402b7b : mov dword ptr [rbp - 0x38], eax ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000402c40 : mov dword ptr [rbp - 0x58], eax ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000401b77 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040b8cd : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040495e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040a60c : mov dword ptr [rdi + 0x10], eax ; pop rbp ; ret
0x0000000000408c0e : mov dword ptr [rsi], edi ; pop rbp ; ret
0x0000000000404718 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000407a1b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402ed3 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404715 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000402e2f : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000407d13 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004046cd : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040475e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000407efe : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402b2c : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004048aa : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000407e4b : mov eax, dword ptr [rbp - 0x2c] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404a2f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004065d9 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040bb60 : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040b284 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408109 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000408048 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000407afd : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406a9f : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403c09 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040b09f : mov eax, dword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040bd98 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040b8d0 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000401a6b : mov ebp, esp ; call rax
0x00000000004019d1 : mov ebp, esp ; ja 0x4019dc ; pop rbp ; ret
0x000000000040a6b1 : mov ebx, 0x48000014 ; add esp, 0x10 ; pop rbp ; ret
0x000000000040774d : mov ecx, 0x5b2a830a ; ret
0x0000000000404af2 : mov ecx, dword ptr [rax*8 + 0x40c430] ; jmp rcx
0x0000000000404e16 : mov ecx, dword ptr [rax*8 + 0x40c478] ; jmp rcx
0x000000000040710e : mov ecx, dword ptr [rax*8 + 0x40c930] ; jmp rcx
0x0000000000404761 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401a65 : mov edi, 0x60ee20 ; mov rbp, rsp ; call rax
0x00000000004019e2 : mov edi, 0x60f2b0 ; jmp rax
0x0000000000401a22 : mov edi, 0x60f2b0 ; jmp rdx
0x0000000000408c08 : mov edi, dword ptr [rsi] ; add rdi, rax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x000000000040bdf7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000040d679 : mov edi, edi ; jmp rdx
0x000000000040bdf6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000401a20 : mov esi, eax ; mov edi, 0x60f2b0 ; jmp rdx
0x000000000040a017 : mov esp, ebp ; pop rbp ; ret
0x0000000000402c5c : mov qword ptr [0x60f308], rdi ; pop rbp ; ret
0x000000000040495d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040a60b : mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x0000000000408c0d : mov qword ptr [rsi], rdi ; pop rbp ; ret
0x00000000004065da : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000407a1a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402ed2 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404714 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000402e2e : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000407d12 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004046cc : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000407efd : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402b2b : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000404a2e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004065d8 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000407afc : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406a9e : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403c08 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040b09e : mov rax, qword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040bd97 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000401a6a : mov rbp, rsp ; call rax
0x00000000004019d0 : mov rbp, rsp ; ja 0x4019dd ; pop rbp ; ret
0x0000000000404af1 : mov rcx, qword ptr [rax*8 + 0x40c430] ; jmp rcx
0x0000000000404e15 : mov rcx, qword ptr [rax*8 + 0x40c478] ; jmp rcx
0x000000000040710d : mov rcx, qword ptr [rax*8 + 0x40c930] ; jmp rcx
0x0000000000401a1f : mov rsi, rax ; mov edi, 0x60f2b0 ; jmp rdx
0x000000000040a016 : mov rsp, rbp ; pop rbp ; ret
0x000000000040d674 : mov word ptr [rax + rax], es ; add byte ptr [rax], bl ; mov edi, edi ; jmp rdx
0x00000000004031b6 : movsb byte ptr [rdi], byte ptr [rsi] ; add rsp, 0x60 ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040a013 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040b3eb : movzx eax, al ; pop rbp ; ret
0x000000000040be18 : nop dword ptr [rax + rax] ; ret
0x000000000040de15 : or al, 0 ; add byte ptr [rax], bh ; sar edi, cl ; jmp rax
0x000000000040517d : or al, 0x18 ; ret 0x6451
0x000000000040a5dd : or al, 1 ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004067c1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040dd15 : or eax, dword ptr [rax] ; add byte ptr [rax], cl ; ret
0x000000000040d105 : out -1, al ; call qword ptr [rax]
0x000000000040d0f5 : out -1, al ; call rax
0x000000000040be0c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000406061 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040be0e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000406063 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040be10 : pop r14 ; pop r15 ; ret
0x00000000004031bc : pop r14 ; pop rbp ; ret
0x0000000000406065 : pop r15 ; pop rbp ; ret
0x000000000040be12 : pop r15 ; ret
0x0000000000401a42 : pop rbp ; mov byte ptr [rip + 0x20d8b6], 1 ; ret
0x00000000004019e1 : pop rbp ; mov edi, 0x60f2b0 ; jmp rax
0x0000000000401a1e : pop rbp ; mov rsi, rax ; mov edi, 0x60f2b0 ; jmp rdx
0x000000000040be0b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040be0f : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004019d5 : pop rbp ; ret
0x0000000000406060 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004075cd : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004031bb : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000407751 : pop rbx ; ret
0x0000000000406066 : pop rdi ; pop rbp ; ret
0x000000000040be13 : pop rdi ; ret
0x0000000000406064 : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040be11 : pop rsi ; pop r15 ; ret
0x00000000004031bd : pop rsi ; pop rbp ; ret
0x000000000040be0d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000406062 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040c390 : pop rsp ; ret
0x000000000040d0ef : push qword ptr [rax + 0x10] ; out -1, al ; call rax
0x000000000040d0af : push qword ptr [rax + 0xf] ; fcos ; call rax
0x000000000040cfaf : push qword ptr [rax - 0x4ffffff5] ; test al, -1 ; call rax
0x000000000040d02f : push qword ptr [rax - 0x5ffffff3] ; mov al, -1 ; call rax
0x000000000040d0ff : push rax ; adc byte ptr [rax], al ; add al, dl ; out -1, al ; call qword ptr [rax]
0x000000000040d044 : push rax ; mov cl, -1 ; call qword ptr [rax]
0x000000000040655e : push rax ; pop rbp ; ret
0x000000000040bfa2 : push rax ; ret
0x0000000000401bd4 : push rbp ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; xor al, 0x25 ; xchg eax, ecx ; ret 0x40
0x00000000004095d3 : push rbp ; call 0x31725
0x000000000040a1a3 : push rbp ; enter -0x76b8, 0xc ; ret 0x59e9
0x0000000000403b7a : push rbp ; fmul dword ptr [rax + 0x29] ; ret 0x148
0x0000000000401a64 : push rbp ; mov edi, 0x60ee20 ; mov rbp, rsp ; call rax
0x00000000004038a5 : push rbp ; ret
0x0000000000402a93 : push rbp ; ror byte ptr [rax + 1], 1 ; ret 0x8948
0x0000000000401b8c : push rbx ; ret 0x40
0x000000000040c370 : push rdi ; ret
0x0000000000402d3a : push rdx ; ret
0x00000000004003a0 : ret
0x0000000000408832 : ret 0
0x000000000040a6a5 : ret 0x10
0x0000000000402add : ret 0x1188
0x0000000000403b7e : ret 0x148
0x0000000000408cb5 : ret 0x18
0x00000000004061fe : ret 0x1b2
0x0000000000401962 : ret 0x20d8
0x0000000000401762 : ret 0x20d9
0x0000000000401562 : ret 0x20da
0x0000000000402eb5 : ret 0x2948
0x0000000000405589 : ret 0x294c
0x00000000004055a5 : ret 0x294d
0x0000000000401b8d : ret 0x40
0x000000000040c670 : ret 0x404f
0x000000000040c970 : ret 0x4073
0x0000000000409a8a : ret 0x4a3b
0x0000000000402c24 : ret 0x4d89
0x00000000004055bd : ret 0x4de8
0x00000000004047e4 : ret 0x5589
0x000000000040a1a8 : ret 0x59e9
0x000000000040517f : ret 0x6451
0x000000000040a856 : ret 0x64e8
0x000000000040ad49 : ret 0x71e8
0x000000000040a496 : ret 0x74e8
0x0000000000406f3f : ret 0x7be8
0x0000000000406c3c : ret 0x7ee8
0x0000000000407c0c : ret 0x8148
0x0000000000403e86 : ret 0x840
0x0000000000405823 : ret 0x8840
0x00000000004070c9 : ret 0x8844
0x0000000000402a97 : ret 0x8948
0x00000000004055a8 : ret 0x8949
0x000000000040573c : ret 0x89a5
0x000000000040558c : ret 0x8b48
0x000000000040aa26 : ret 0x94e8
0x0000000000408839 : ret 0xb849
0x0000000000408a50 : ret 0xc
0x0000000000401a05 : ret 0xc148
0x0000000000403d1c : ret 0xc2f6
0x0000000000404fa4 : ret 0xca21
0x00000000004034c0 : ret 0xca29
0x0000000000406a93 : ret 0xd284
0x0000000000405e4c : ret 0xee8
0x0000000000403e8d : ret 0xf01
0x0000000000405838 : ret 0xf180
0x0000000000403d0f : ret 0xf280
0x000000000040501e : ret 0xf281
0x000000000040a6fa : ret 0xff6e
0x0000000000407d8a : ret 0xff98
0x00000000004023da : ret 0xfff2
0x000000000040255a : ret 0xfff3
0x00000000004095d7 : ret 0xffff
0x0000000000406204 : ret 1
0x0000000000408600 : ret 2
0x00000000004048a6 : rol byte ptr [rcx + rcx*4], 1 ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040a19f : ror byte ptr [r8 - 0x75], 0x55 ; enter -0x76b8, 0xc ; ret 0x59e9
0x0000000000407730 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000404a30 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x404a9b ; ret
0x0000000000402a94 : ror byte ptr [rax + 1], 1 ; ret 0x8948
0x0000000000401a0c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401a1b ; pop rbp ; ret
0x000000000040a1a0 : ror byte ptr [rax - 0x75], 0x55 ; enter -0x76b8, 0xc ; ret 0x59e9
0x000000000040a015 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x0000000000407731 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x000000000040557d : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000405586 : ror byte ptr [rax - 0x77], 1 ; ret 0x294c
0x0000000000404a31 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x404a9a ; ret
0x0000000000404223 : ror byte ptr [rax - 0x7f], -0x3c ; jo 0x404233 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040cdd4 : ror byte ptr [rbx - 1], 1 ; call qword ptr [rax]
0x000000000040b10f : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000401a0e : sar eax, 1 ; jne 0x401a19 ; pop rbp ; ret
0x000000000040de19 : sar edi, cl ; jmp rax
0x0000000000401a0d : sar rax, 1 ; jne 0x401a1a ; pop rbp ; ret
0x000000000040bc88 : setne al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040bc8a : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000040b3e8 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000408cc1 : stosd dword ptr [rdi], eax ; add byte ptr cs:[rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040774f : sub dword ptr [rdx], 0x5b ; ret
0x000000000040be4d : sub esp, 8 ; add rsp, 8 ; ret
0x000000000040be4c : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040cfb5 : test al, -1 ; call rax
0x0000000000402c42 : test al, 0x48 ; add esp, 0x70 ; pop rbp ; ret
0x000000000040d26c : test byte ptr [rax], al ; add byte ptr [rax], al ; adc byte ptr [rcx - 1], cl ; jmp rdx
0x000000000040be1a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000404167 : test dword ptr [rax - 0x17000002], edx ; call rdi
0x0000000000402995 : test dword ptr [rcx], 0x8d480000 ; cmp al, 0x25 ; ret 0x40
0x0000000000401c02 : xchg eax, ebp ; ret 0x40
0x0000000000405822 : xchg eax, ebp ; ret 0x8840
0x000000000040bb56 : xchg eax, ebp ; ret 0xd284
0x000000000040bc89 : xchg eax, ebp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401bdc : xchg eax, ecx ; ret 0x40
0x0000000000406a92 : xchg eax, esp ; ret 0xd284
0x00000000004084ae : xor al, 0x25 ; ret
0x0000000000401bda : xor al, 0x25 ; xchg eax, ecx ; ret 0x40
0x0000000000401b87 : xor byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; push rbx ; ret 0x40
0x000000000040892e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000406557 : xor eax, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x00000000004048a5 : xor eax, edx ; mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
