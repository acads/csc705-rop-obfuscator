0x000000000040d280 : adc ah, -1 ; call qword ptr [rsi]
0x000000000040a6eb : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404ae9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040bfc7 : add ah, ah ; push -1 ; jmp rsp
0x000000000040c9ff : add al, ah ; mov bh, bh ; jmp qword ptr [rdx]
0x000000000040c8df : add al, dl ; xchg edi, edi ; jmp qword ptr [rax]
0x000000000040ab8f : add bl, dh ; ret
0x0000000000402d2e : add byte ptr [rax + 1], cl ; ret 0x8b48
0x0000000000401fc3 : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x000000000040606d : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000408321 : add byte ptr [rax - 0x77], cl ; ret 0x2948
0x000000000040d27e : add byte ptr [rax], al ; adc ah, -1 ; call qword ptr [rsi]
0x000000000040ab8d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000402d2c : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8b48
0x0000000000401fc1 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x000000000040ab8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004005a8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004005aa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004026bf : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004005ac : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000409992 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7f], al ; call 0xffffffff8b02e522
0x000000000040418e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x00000000004053fe : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000406fcc : add byte ptr [rax], al ; add cl, ch ; ret 2
0x0000000000404ab1 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004047c0 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004027c7 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004014e3 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000040c3f6 : add byte ptr [rax], al ; call 0xffffffffe340c359
0x0000000000401599 : add byte ptr [rax], al ; jmp 0x4014f9
0x000000000040c006 : add byte ptr [rax], al ; jno 0x40c00f ; jmp rsp
0x0000000000403082 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040d27a : add byte ptr [rax], al ; or al, 0xf ; add byte ptr [rax], al ; adc ah, -1 ; call qword ptr [rsi]
0x00000000004026c1 : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000405f0b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000404780 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004058c5 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004005ae : add byte ptr [rax], al ; ret
0x000000000040c3f2 : add byte ptr [rax], al ; test byte ptr [rax], al ; add byte ptr [rax], al ; call 0xffffffffe340c35d
0x000000000040c26e : add byte ptr [rax], al ; xchg eax, esp ; ret
0x000000000040c25e : add byte ptr [rax], al ; xchg eax, esp ; ret 0xffff
0x000000000040d17f : add byte ptr [rax], dh ; sar edi, 1 ; jmp rdx
0x000000000040c8db : add byte ptr [rbp + rax], ch ; add al, dl ; xchg edi, edi ; jmp qword ptr [rax]
0x0000000000405f0c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000404781 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x00000000004058c6 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040264f : add byte ptr [rbx - 0x1434b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040c007 : add byte ptr [rcx + rsi*2 - 1], al ; jmp rsp
0x0000000000409994 : add byte ptr [rcx - 0x7f], al ; call 0xffffffff8b02e520
0x000000000040a4bc : add byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x0000000000407e2b : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004019f8 : add byte ptr [rcx], al ; ret
0x000000000040d27b : add byte ptr [rdi + rcx], cl ; add byte ptr [rax], al ; adc ah, -1 ; call qword ptr [rsi]
0x0000000000406fc8 : add byte ptr [rdi], cl ; lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000404190 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000405400 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000406fce : add cl, ch ; ret 2
0x000000000040958a : add dword ptr [rax + 0x29], ecx ; ret 0x8948
0x0000000000406549 : add dword ptr [rax - 0x77], ecx ; ret 0x8148
0x0000000000404aaf : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405f0a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040477f : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x00000000004058c4 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040a37d : add dword ptr [rax], ecx ; ret 0x840
0x0000000000405908 : add dword ptr [rdi], ecx ; mov dh, -0x3f ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040a05a : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000409b7b : add eax, 0x148a3f2 ; ret 0x8948
0x00000000004019f4 : add eax, 0x20c91e ; add ebx, esi ; ret
0x000000000040570f : add eax, 0x2141f70b ; ret 0x8941
0x000000000040571c : add eax, 0x8941f70b ; ret
0x0000000000406fcb : add eax, 0xe9000000 ; ret 2
0x00000000004019bb : add eax, edx ; sar rax, 1 ; jne 0x4019cc ; pop rbp ; ret
0x00000000004019f9 : add ebx, esi ; ret
0x0000000000401bdb : add esp, 0x10 ; pop rbp ; ret
0x0000000000407e29 : add esp, 0x100 ; pop rbp ; ret
0x00000000004058c1 : add esp, 0x128 ; pop rbx ; pop rbp ; ret
0x00000000004072fc : add esp, 0x130 ; pop rbp ; ret
0x000000000040623c : add esp, 0x1a0 ; pop rbp ; ret
0x000000000040ab0e : add esp, 0x1e0 ; pop rbp ; ret
0x00000000004028dd : add esp, 0x20 ; pop rbp ; ret
0x0000000000401cbd : add esp, 0x30 ; pop rbp ; ret
0x000000000040a6ca : add esp, 0x40 ; pop rbp ; ret
0x0000000000404ecc : add esp, 0x50 ; pop rbp ; ret
0x000000000040a027 : add esp, 0x50 ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004033a3 : add esp, 0x70 ; pop rbp ; ret
0x0000000000402e19 : add esp, 0x80 ; pop rbp ; ret
0x0000000000404dda : add esp, 0x90 ; pop rbp ; ret
0x00000000004060d3 : add esp, 0xa0 ; pop rbp ; ret
0x0000000000408ea2 : add esp, 0xd0 ; pop rbp ; ret
0x00000000004014e6 : add esp, 8 ; ret
0x00000000004019ba : add rax, rdx ; sar rax, 1 ; jne 0x4019cd ; pop rbp ; ret
0x0000000000401bda : add rsp, 0x10 ; pop rbp ; ret
0x0000000000407e28 : add rsp, 0x100 ; pop rbp ; ret
0x00000000004058c0 : add rsp, 0x128 ; pop rbx ; pop rbp ; ret
0x00000000004072fb : add rsp, 0x130 ; pop rbp ; ret
0x000000000040623b : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000040ab0d : add rsp, 0x1e0 ; pop rbp ; ret
0x00000000004028dc : add rsp, 0x20 ; pop rbp ; ret
0x0000000000401cbc : add rsp, 0x30 ; pop rbp ; ret
0x000000000040a6c9 : add rsp, 0x40 ; pop rbp ; ret
0x0000000000404ecb : add rsp, 0x50 ; pop rbp ; ret
0x000000000040a026 : add rsp, 0x50 ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004033a2 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000402e18 : add rsp, 0x80 ; pop rbp ; ret
0x0000000000404dd9 : add rsp, 0x90 ; pop rbp ; ret
0x00000000004060d2 : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000408ea1 : add rsp, 0xd0 ; pop rbp ; ret
0x00000000004014e5 : add rsp, 8 ; ret
0x000000000040a059 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004019f7 : and byte ptr [rax], al ; add ebx, esi ; ret
0x00000000004028ff : and eax, 0x60e320 ; pop rbp ; ret
0x0000000000402923 : and eax, 0x60e328 ; pop rbp ; ret
0x0000000000408f65 : and edi, eax ; mov rax, rdi ; pop rbp ; ret
0x0000000000408f64 : and rdi, rax ; mov rax, rdi ; pop rbp ; ret
0x0000000000408ac3 : call 0x49404cfc
0x0000000000408ad3 : call 0x49404d0c
0x000000000040028e : call 0x603d388c
0x0000000000409997 : call 0xffffffff8b02e51d
0x000000000040c3f8 : call 0xffffffffe340c357
0x00000000004047b9 : call 0xffffffffe902d109
0x00000000004047b8 : call 0xffffffffe902d10a
0x000000000040ab69 : call qword ptr [r12 + rbx*8]
0x000000000040d31b : call qword ptr [rax]
0x000000000040ce03 : call qword ptr [rcx]
0x000000000040c4db : call qword ptr [rsi]
0x000000000040ab6a : call qword ptr [rsp + rbx*8]
0x0000000000401a1d : call rax
0x000000000040450c : call rbx
0x000000000040c6db : call rdi
0x00000000004072fa : clc ; add rsp, 0x130 ; pop rbp ; ret
0x000000000040643f : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405411 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040a6c8 : clc ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000407880 : clc ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000402e17 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x00000000004019bf : clc ; jne 0x4019c8 ; pop rbp ; ret
0x0000000000403255 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040a53f : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000407e73 : clc ; mov qword ptr [rdi + 0x10], rsi ; pop rbp ; ret
0x0000000000407e53 : clc ; mov qword ptr [rdi + 8], rsi ; pop rbp ; ret
0x00000000004073cb : clc ; mov rax, qword ptr [rdi] ; pop rbp ; ret
0x00000000004073c7 : clc ; mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi] ; pop rbp ; ret
0x0000000000407fb7 : clc ; mov rdi, qword ptr [rdx + 0x10] ; call rax
0x0000000000402e6e : clc ; pop rbp ; ret
0x000000000040767b : clc ; shl rdi, 8 ; mov rax, rdi ; pop rbp ; ret
0x0000000000406866 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004028db : cld ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040698e : cld ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040a53c : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000406863 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406806 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040698b : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401fc6 : cmp al, 0x25 ; ret
0x000000000040a9f9 : cmp dword ptr [rdx - 0x76be63d5], ebx ; ret
0x000000000040197d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401990 ; pop rbp ; ret
0x0000000000405a4c : cwde ; mov rcx, qword ptr [rax*8 + 0x40bb68] ; jmp rcx
0x0000000000409ea1 : dec dword ptr [rax + 0x21] ; ret 0x948
0x0000000000402e6a : dec dword ptr [rax - 0x75] ; clc ; pop rbp ; ret
0x0000000000407034 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000407991 : dec dword ptr [rax - 0x77] ; ret 0xa6e8
0x0000000000402655 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004093ff : dec dword ptr [rcx - 0x77] ; ret 0x2149
0x0000000000403f12 : dec dword ptr [rcx - 0x77] ; ret 0x294d
0x0000000000409b53 : enter 0x4879, 0x29 ; ret 0x8948
0x00000000004042a0 : enter 0x4b05, 0x34 ; fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x000000000040d319 : fdivr st(7) ; call qword ptr [rax]
0x00000000004042a4 : fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x00000000004014e1 : fild dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000409a5f : fimul word ptr [rcx - 0x77] ; ret 0x8149
0x0000000000409237 : fisttp dword ptr [rax + 0x21] ; fisttp word ptr [rcx - 0x77] ; ret
0x000000000040923a : fisttp word ptr [rcx - 0x77] ; ret
0x0000000000401a17 : fisub word ptr [rax] ; mov rbp, rsp ; call rax
0x0000000000407b01 : fmul dword ptr [r8 - 0x46] ; jg 0x407aad ; ret
0x0000000000407c8b : fmul dword ptr [rax - 0x42] ; ret
0x0000000000407b02 : fmul dword ptr [rax - 0x46] ; jg 0x407aac ; ret
0x000000000040927e : fmul dword ptr [rcx - 0x77] ; ror byte ptr [rcx + 0x29], cl ; ret 0x14c
0x000000000040ab6c : fmul qword ptr [rax - 0x7d] ; ret
0x000000000040a608 : fsub st(0), st(0) ; ret 0
0x0000000000401bd9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407710 : hlt ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401990 : hlt ; pop rbp ; mov edi, 0x60e2b8 ; jmp rax
0x0000000000408249 : in al, dx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040452b : inc dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000406075 : int 0x80
0x000000000040028f : int1 ; xor eax, 0xf075ffd ; ret
0x0000000000401983 : ja 0x40198a ; pop rbp ; ret
0x0000000000407e56 : ja 0x407e63 ; pop rbp ; ret
0x0000000000407e76 : ja 0x407e8b ; pop rbp ; ret
0x000000000040198f : je 0x40198d ; pop rbp ; mov edi, 0x60e2b8 ; jmp rax
0x0000000000407b05 : jg 0x407aa9 ; ret
0x0000000000407b15 : jg 0x407ab9 ; ret
0x00000000004073ca : jge 0x4073ca ; mov rax, qword ptr [rdi] ; pop rbp ; ret
0x0000000000407e52 : jge 0x407e53 ; mov qword ptr [rdi + 8], rsi ; pop rbp ; ret
0x0000000000407e72 : jge 0x407e73 ; mov qword ptr [rdi + 0x10], rsi ; pop rbp ; ret
0x000000000040998a : jle 0x4099d9 ; ret 0x418a
0x0000000000409998 : jle 0x4099e7 ; ret 0x498a
0x000000000040159b : jmp 0x4014f7
0x0000000000406548 : jmp 0xffffffffc2c9ad52
0x000000000040c8e3 : jmp qword ptr [rax]
0x00000000004039a6 : jmp qword ptr [rcx]
0x000000000040c7c3 : jmp qword ptr [rdx]
0x0000000000401997 : jmp rax
0x0000000000401ebc : jmp rcx
0x00000000004019d7 : jmp rdx
0x000000000040bf8b : jmp rsp
0x00000000004019c0 : jne 0x4019c7 ; pop rbp ; ret
0x000000000040c009 : jno 0x40c00c ; jmp rsp
0x000000000040c008 : jno 0x40c00d ; jmp rsp
0x00000000004033a5 : jo 0x403406 ; ret
0x00000000004049cf : jo 0x404a35 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405074 : jo 0x4050d5 ; ret
0x00000000004051ae : jo 0x40520f ; ret
0x0000000000409b78 : jo 0x409b3b ; sbb eax, dword ptr [rip + 0x148a3f2] ; ret 0x8948
0x0000000000407fba : jp 0x407fce ; call rax
0x0000000000409b4f : jp 0x409b77 ; lea esi, dword ptr [rbx + 0x294879c8] ; ret 0x8948
0x0000000000406fca : lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000409b51 : lea esi, dword ptr [rbx + 0x294879c8] ; ret 0x8948
0x00000000004019f6 : leave ; and byte ptr [rax], al ; add ebx, esi ; ret
0x000000000040c25b : ljmp ptr [rax + rdx] ; add byte ptr [rax], al ; xchg eax, esp ; ret 0xffff
0x000000000040571a : loope 0x4056d1 ; add eax, 0x8941f70b ; ret
0x0000000000402bbf : loopne 0x402c0f ; add esp, 0x20 ; pop rbp ; ret
0x0000000000402bbe : loopne 0x402c10 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040570d : loopne 0x4056c4 ; add eax, 0x2141f70b ; ret 0x8941
0x00000000004073b7 : loopne 0x407407 ; add esp, 0x20 ; pop rbp ; ret
0x00000000004073b6 : loopne 0x407408 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000408abc : loopne 0x408b0f ; mov edx, 0xb9bb83c3 ; call 0x49404d03
0x000000000040ab10 : loopne 0x40ab18 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000404f4b : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000404dd8 : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x000000000040a056 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040ca01 : mov bh, bh ; jmp qword ptr [rdx]
0x0000000000402921 : mov byte ptr [0x60e328], al ; pop rbp ; ret
0x00000000004019f3 : mov byte ptr [rip + 0x20c91e], 1 ; ret
0x000000000040590a : mov dh, -0x3f ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040a05c : mov dh, -0x40 ; pop rbp ; ret
0x00000000004028fd : mov dword ptr [0x60e320], edi ; pop rbp ; ret
0x0000000000403256 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000403218 : mov dword ptr [rax], eax ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004030d4 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000403217 : mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000401cb9 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401bd7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040a53d : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004032ce : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407e75 : mov dword ptr [rdi + 0x10], esi ; pop rbp ; ret
0x0000000000407e55 : mov dword ptr [rdi + 8], esi ; pop rbp ; ret
0x0000000000403088 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040635b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402b73 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403085 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000402acf : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000408247 : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406653 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040303d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004030ce : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000402766 : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000402bbd : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040321a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000408efd : mov eax, dword ptr [rbp - 0x30] ; mov rax, qword ptr [rax] ; pop rbp ; ret
0x000000000040339f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000404f49 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040770e : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406864 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004028d9 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040698c : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040643d : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040540f : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040a6c6 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040787e : mov eax, dword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000402e6c : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004073cd : mov eax, dword ptr [rdi] ; pop rbp ; ret
0x0000000000407681 : mov eax, edi ; pop rbp ; ret
0x0000000000401a1b : mov ebp, esp ; call rax
0x0000000000401981 : mov ebp, esp ; ja 0x40198c ; pop rbp ; ret
0x000000000040608d : mov ecx, 0x5b2a830a ; ret
0x0000000000408ace : mov ecx, 0xb9bb83c3 ; call 0x49404d11
0x0000000000401eb5 : mov ecx, dword ptr [rax*8 + 0x40abf0] ; jmp rcx
0x0000000000403462 : mov ecx, dword ptr [rax*8 + 0x40b5b0] ; jmp rcx
0x0000000000403786 : mov ecx, dword ptr [rax*8 + 0x40b5f8] ; jmp rcx
0x0000000000405a4e : mov ecx, dword ptr [rax*8 + 0x40bb68] ; jmp rcx
0x00000000004030d1 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000407a7f : mov edi, 0x54582f16 ; ret
0x0000000000401a15 : mov edi, 0x60de20 ; mov rbp, rsp ; call rax
0x0000000000401992 : mov edi, 0x60e2b8 ; jmp rax
0x00000000004019d2 : mov edi, 0x60e2b8 ; jmp rdx
0x0000000000407e71 : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x10], rsi ; pop rbp ; ret
0x0000000000407e51 : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 8], rsi ; pop rbp ; ret
0x00000000004073c9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi] ; pop rbp ; ret
0x0000000000407fb9 : mov edi, dword ptr [rdx + 0x10] ; call rax
0x000000000040ab67 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000040ab66 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000402c3d : mov edx, 0x4fdaf5a1 ; ret
0x0000000000407a8f : mov edx, 0x54582f16 ; ret
0x0000000000408abe : mov edx, 0xb9bb83c3 ; call 0x49404d01
0x0000000000407fb5 : mov edx, dword ptr [rbp - 8] ; mov rdi, qword ptr [rdx + 0x10] ; call rax
0x0000000000402c2d : mov esi, 0x4fdaf5a1 ; ret
0x00000000004019d0 : mov esi, eax ; mov edi, 0x60e2b8 ; jmp rdx
0x00000000004028fc : mov qword ptr [0x60e320], rdi ; pop rbp ; ret
0x00000000004032cd : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407e74 : mov qword ptr [rdi + 0x10], rsi ; pop rbp ; ret
0x0000000000407e54 : mov qword ptr [rdi + 8], rsi ; pop rbp ; ret
0x0000000000404f4a : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000408f00 : mov rax, qword ptr [rax] ; pop rbp ; ret
0x000000000040635a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402b72 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403084 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000402ace : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000406652 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040303c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402765 : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000402bbc : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000408efc : mov rax, qword ptr [rbp - 0x30] ; mov rax, qword ptr [rax] ; pop rbp ; ret
0x000000000040339e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000404f48 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040643c : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040540e : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040a6c5 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040787d : mov rax, qword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000402e6b : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004073cc : mov rax, qword ptr [rdi] ; pop rbp ; ret
0x0000000000407680 : mov rax, rdi ; pop rbp ; ret
0x0000000000401a1a : mov rbp, rsp ; call rax
0x0000000000401980 : mov rbp, rsp ; ja 0x40198d ; pop rbp ; ret
0x0000000000401eb4 : mov rcx, qword ptr [rax*8 + 0x40abf0] ; jmp rcx
0x0000000000403461 : mov rcx, qword ptr [rax*8 + 0x40b5b0] ; jmp rcx
0x0000000000403785 : mov rcx, qword ptr [rax*8 + 0x40b5f8] ; jmp rcx
0x0000000000405a4d : mov rcx, qword ptr [rax*8 + 0x40bb68] ; jmp rcx
0x0000000000407e70 : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x10], rsi ; pop rbp ; ret
0x0000000000407e50 : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 8], rsi ; pop rbp ; ret
0x00000000004073c8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi] ; pop rbp ; ret
0x0000000000407fb8 : mov rdi, qword ptr [rdx + 0x10] ; call rax
0x0000000000407fb4 : mov rdx, qword ptr [rbp - 8] ; mov rdi, qword ptr [rdx + 0x10] ; call rax
0x00000000004019cf : mov rsi, rax ; mov edi, 0x60e2b8 ; jmp rdx
0x000000000040a05b : movzx eax, al ; pop rbp ; ret
0x0000000000405909 : movzx eax, cl ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040ab88 : nop dword ptr [rax + rax] ; ret
0x0000000000403aed : or al, 0x18 ; ret 0x6451
0x000000000040d27c : or al, 0xf ; add byte ptr [rax], al ; adc ah, -1 ; call qword ptr [rsi]
0x0000000000407fb3 : or byte ptr [rax - 0x75], cl ; push rbp ; clc ; mov rdi, qword ptr [rdx + 0x10] ; call rax
0x000000000040767f : or byte ptr [rax - 0x77], cl ; clc ; pop rbp ; ret
0x000000000040831f : or byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000405131 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000409588 : out -0x36, al ; add dword ptr [rax + 0x29], ecx ; ret 0x8948
0x000000000040767e : out 8, eax ; mov rax, rdi ; pop rbp ; ret
0x000000000040ab7c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004049d1 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040ab7e : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004049d3 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040ab80 : pop r14 ; pop r15 ; ret
0x0000000000404783 : pop r14 ; pop rbp ; ret
0x00000000004049d5 : pop r15 ; pop rbp ; ret
0x000000000040ab82 : pop r15 ; ret
0x0000000000407a82 : pop rax ; push rsp ; ret
0x0000000000405324 : pop rax ; ret
0x00000000004019f2 : pop rbp ; mov byte ptr [rip + 0x20c91e], 1 ; ret
0x0000000000401991 : pop rbp ; mov edi, 0x60e2b8 ; jmp rax
0x00000000004019ce : pop rbp ; mov rsi, rax ; mov edi, 0x60e2b8 ; jmp rdx
0x000000000040ab7b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040ab7f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401985 : pop rbp ; ret
0x00000000004049d0 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405f0d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000404782 : pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004058c7 : pop rbx ; pop rbp ; ret
0x0000000000406091 : pop rbx ; ret
0x00000000004049d6 : pop rdi ; pop rbp ; ret
0x000000000040ab83 : pop rdi ; ret
0x00000000004049d4 : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040ab81 : pop rsi ; pop r15 ; ret
0x0000000000404784 : pop rsi ; pop rbp ; ret
0x000000000040ab7d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004049d2 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040028d : popfq ; call 0x603d388d
0x000000000040bfc9 : push -1 ; jmp rsp
0x0000000000404ece : push rax ; pop rbp ; ret
0x000000000040a029 : push rax ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000407fb6 : push rbp ; clc ; mov rdi, qword ptr [rdx + 0x10] ; call rax
0x0000000000407c8a : push rbp ; fmul dword ptr [rax - 0x42] ; ret
0x0000000000401a14 : push rbp ; mov edi, 0x60de20 ; mov rbp, rsp ; call rax
0x0000000000407a83 : push rsp ; ret
0x0000000000400296 : ret
0x0000000000407202 : ret 0
0x0000000000407216 : ret 0x148
0x0000000000409284 : ret 0x14c
0x0000000000404b6e : ret 0x1b2
0x00000000004017a2 : ret 0x20c9
0x00000000004015a2 : ret 0x20ca
0x0000000000409402 : ret 0x2149
0x0000000000402b55 : ret 0x2948
0x0000000000403ef9 : ret 0x294c
0x0000000000403f15 : ret 0x294d
0x000000000040969a : ret 0x314c
0x000000000040998c : ret 0x418a
0x0000000000408ac5 : ret 0x48ff
0x000000000040999a : ret 0x498a
0x0000000000403154 : ret 0x5589
0x0000000000403aef : ret 0x6451
0x0000000000403f2d : ret 0x6de8
0x000000000040a9f5 : ret 0x8141
0x000000000040654c : ret 0x8148
0x000000000040967d : ret 0x8149
0x000000000040a37f : ret 0x840
0x0000000000404193 : ret 0x8840
0x0000000000405a09 : ret 0x8844
0x0000000000405714 : ret 0x8941
0x0000000000402d86 : ret 0x8948
0x0000000000403f18 : ret 0x8949
0x00000000004040ac : ret 0x89a5
0x0000000000402d24 : ret 0x8b48
0x000000000040aa1f : ret 0x941
0x0000000000409ea4 : ret 0x948
0x0000000000407994 : ret 0xa6e8
0x0000000000401fdc : ret 0xb0
0x00000000004091da : ret 0xb848
0x0000000000407209 : ret 0xb849
0x00000000004019b5 : ret 0xc148
0x0000000000406f70 : ret 0xc2f6
0x0000000000403914 : ret 0xca21
0x0000000000405403 : ret 0xd284
0x00000000004047bc : ret 0xee8
0x00000000004041a8 : ret 0xf180
0x0000000000406f63 : ret 0xf280
0x000000000040398e : ret 0xf281
0x0000000000401d4a : ret 0xfff8
0x000000000040c261 : ret 0xffff
0x0000000000404b74 : ret 1
0x0000000000406fd0 : ret 2
0x0000000000408ea4 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000403216 : rol byte ptr [rcx + rcx*4], 1 ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000406070 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x00000000004033a0 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x40340b ; ret
0x00000000004019bc : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4019cb ; pop rbp ; ret
0x0000000000406071 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000403eed : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000403ef6 : ror byte ptr [rax - 0x77], 1 ; ret 0x294c
0x00000000004033a1 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x40340a ; ret
0x0000000000409281 : ror byte ptr [rcx + 0x29], cl ; ret 0x14c
0x000000000040926c : ror byte ptr [rcx + 0x29], cl ; ret 0x294c
0x0000000000407c9b : ror dword ptr [rax - 0x46], 1 ; ret
0x000000000040c259 : sar bh, -1 ; sub al, 0x10 ; add byte ptr [rax], al ; xchg eax, esp ; ret 0xffff
0x00000000004019be : sar eax, 1 ; jne 0x4019c9 ; pop rbp ; ret
0x000000000040d181 : sar edi, 1 ; jmp rdx
0x00000000004019bd : sar rax, 1 ; jne 0x4019ca ; pop rbp ; ret
0x0000000000409b7a : sbb eax, dword ptr [rip + 0x148a3f2] ; ret 0x8948
0x000000000040570e : scasb al, byte ptr [rdi] ; add eax, 0x2141f70b ; ret 0x8941
0x000000000040571b : scasb al, byte ptr [rdi] ; add eax, 0x8941f70b ; ret
0x000000000040767d : shl edi, 8 ; mov rax, rdi ; pop rbp ; ret
0x000000000040767c : shl rdi, 8 ; mov rax, rdi ; pop rbp ; ret
0x000000000040d27d : sldt word ptr [rax] ; adc ah, -1 ; call qword ptr [rsi]
0x000000000040a058 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040c25c : sub al, 0x10 ; add byte ptr [rax], al ; xchg eax, esp ; ret 0xffff
0x00000000004058c3 : sub byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040608f : sub dword ptr [rdx], 0x5b ; ret
0x000000000040abd1 : sub esp, 8 ; add rsp, 8 ; ret
0x000000000040abd0 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040ab8a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040c3f4 : test byte ptr [rax], al ; add byte ptr [rax], al ; call 0xffffffffe340c35b
0x000000000040c7c1 : xchg bh, bh ; jmp qword ptr [rdx]
0x0000000000401fbf : xchg dword ptr [rdx], ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x0000000000404192 : xchg eax, ebp ; ret 0x8840
0x000000000040c270 : xchg eax, esp ; ret
0x0000000000405402 : xchg eax, esp ; ret 0xd284
0x000000000040c260 : xchg eax, esp ; ret 0xffff
0x000000000040c8e1 : xchg edi, edi ; jmp qword ptr [rax]
0x00000000004072fe : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000404ec7 : xor eax, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x0000000000400290 : xor eax, 0xf075ffd ; ret
0x0000000000403215 : xor eax, edx ; mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
