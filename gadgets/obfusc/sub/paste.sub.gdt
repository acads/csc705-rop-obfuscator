0x0000000000404849 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004087e5 : add al, 0 ; add al, bl ; ret
0x0000000000408805 : add al, 0 ; add al, ch ; ret
0x00000000004087c5 : add al, 0 ; add al, cl ; ret
0x000000000040823b : add al, al ; fdivp st(7) ; jmp qword ptr [rax]
0x000000000040826b : add al, al ; loope 0x408272 ; jmp rax
0x00000000004087e7 : add al, bl ; ret
0x00000000004016e7 : add al, ch ; ret
0x0000000000408c67 : add al, ch ; sar bh, cl ; jmp rax
0x00000000004051cf : add al, ch ; wait ; ret 0xffff
0x00000000004087c7 : add al, cl ; ret
0x00000000004071df : add bl, dh ; ret
0x0000000000408238 : add byte ptr [rax + rax], cl ; add al, al ; fdivp st(7) ; jmp qword ptr [rax]
0x000000000040588d : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000402111 : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x00000000004016e5 : add byte ptr [rax], al ; add al, ch ; ret
0x00000000004071dd : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040210f : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x00000000004071db : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000400428 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000040042a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000400892 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000004071dc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040042c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000400894 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000004028a1 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7038b], cl ; ret 0xb0
0x0000000000403eee : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x000000000040515e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000402607 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x00000000004087c1 : add byte ptr [rax], al ; add byte ptr [rsp + rax], ch ; add al, cl ; ret
0x00000000004068ac : add byte ptr [rax], al ; add cl, ch ; ret 2
0x0000000000402875 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404520 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040124b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000408c66 : add byte ptr [rax], al ; call 0xffffffffe1408c44
0x000000000040822a : add byte ptr [rax], al ; fdivp st(7) ; jmp rax
0x00000000004087c2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; add al, 0 ; add al, cl ; ret
0x0000000000401429 : add byte ptr [rax], al ; jmp 0x401269
0x0000000000408802 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add al, 0 ; add al, ch ; ret
0x0000000000402de2 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004087e2 : add byte ptr [rax], al ; mov word ptr [rax + rax], es ; add al, bl ; ret
0x0000000000408c62 : add byte ptr [rax], al ; or al, 9 ; add byte ptr [rax], al ; call 0xffffffffe1408c48
0x0000000000404b3e : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040572b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004044e0 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040823a : add byte ptr [rax], al ; rcr dh, -1 ; jmp qword ptr [rax]
0x00000000004071de : add byte ptr [rax], al ; ret
0x000000000040042e : add byte ptr [rax], al ; ret 0
0x0000000000400896 : add byte ptr [rax], al ; ret 1
0x000000000040812a : add byte ptr [rax], al ; ror bl, -1 ; jmp rax
0x000000000040826a : add byte ptr [rax], al ; shl cl, -1 ; jmp rax
0x000000000040827b : add byte ptr [rax], dl ; jrcxz 0x408282 ; jmp qword ptr [rax]
0x00000000004081ab : add byte ptr [rax], dl ; sar bh, 1 ; jmp rax
0x000000000040572c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004044e1 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x00000000004028a3 : add byte ptr [rbx - 0x76b7038b], cl ; ret 0xb0
0x0000000000408c63 : add byte ptr [rcx + rcx], cl ; add byte ptr [rax], al ; call 0xffffffffe1408c47
0x000000000040707c : add byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x0000000000401698 : add byte ptr [rcx], al ; ret
0x00000000004068a8 : add byte ptr [rdi], cl ; lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x00000000004016e1 : add byte ptr [rdi], cl ; test byte ptr [rdx], cl ; add byte ptr [rax], al ; add al, ch ; ret
0x0000000000403ef0 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000405160 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000402609 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x00000000004087c3 : add byte ptr [rsp + rax], ch ; add al, cl ; ret
0x00000000004068ae : add cl, ch ; ret 2
0x0000000000405d69 : add dword ptr [rax - 0x77], ecx ; ret 0x8148
0x000000000040480f : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040572a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004044df : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000406f3d : add dword ptr [rax], ecx ; ret 0x840
0x00000000004025ba : add dword ptr [rdi], ecx ; mov dh, -0x3f ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000402843 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000406c1a : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401694 : add eax, 0x208c1e ; add ebx, esi ; ret
0x00000000004068ab : add eax, 0xe9000000 ; ret 2
0x000000000040165b : add eax, edx ; sar rax, 1 ; jne 0x40166c ; pop rbp ; ret
0x0000000000401699 : add ebx, esi ; ret
0x00000000004017eb : add esp, 0x10 ; pop rbp ; ret
0x0000000000406bdc : add esp, 0x130 ; pop rbp ; ret
0x0000000000405a5c : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000402b47 : add esp, 0x20 ; pop rbp ; ret
0x00000000004018fd : add esp, 0x30 ; pop rbp ; ret
0x0000000000402848 : add esp, 0x40 ; pop rbp ; ret
0x0000000000401f30 : add esp, 0x50 ; pop rbp ; ret
0x00000000004025bf : add esp, 0x70 ; pop rbp ; ret
0x0000000000404b3a : add esp, 0x90 ; pop rbp ; ret
0x00000000004058f3 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040124e : add esp, 8 ; ret
0x000000000040165a : add rax, rdx ; sar rax, 1 ; jne 0x40166d ; pop rbp ; ret
0x00000000004017ea : add rsp, 0x10 ; pop rbp ; ret
0x0000000000406bdb : add rsp, 0x130 ; pop rbp ; ret
0x0000000000405a5b : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000402b46 : add rsp, 0x20 ; pop rbp ; ret
0x00000000004018fc : add rsp, 0x30 ; pop rbp ; ret
0x0000000000402847 : add rsp, 0x40 ; pop rbp ; ret
0x0000000000401f2f : add rsp, 0x50 ; pop rbp ; ret
0x00000000004025be : add rsp, 0x70 ; pop rbp ; ret
0x0000000000404b39 : add rsp, 0x90 ; pop rbp ; ret
0x00000000004058f2 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040124d : add rsp, 8 ; ret
0x0000000000406c19 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401697 : and byte ptr [rax], al ; add ebx, esi ; ret
0x00000000004028cf : and eax, 0x60a2d8 ; pop rbp ; ret
0x00000000004028f3 : and eax, 0x60a2e0 ; pop rbp ; ret
0x0000000000405083 : call 0x401382
0x00000000004051d0 : call 0x401472
0x00000000004029e8 : call 0xffffffff838929f4
0x0000000000408c68 : call 0xffffffffe1408c42
0x0000000000404519 : call 0xffffffffe902ce69
0x0000000000404518 : call 0xffffffffe902ce6a
0x00000000004071b9 : call qword ptr [r12 + rbx*8]
0x0000000000408503 : call qword ptr [rsi]
0x00000000004071ba : call qword ptr [rsp + rbx*8]
0x00000000004016bd : call rax
0x000000000040426c : call rbx
0x00000000004086e3 : call rdi
0x00000000004083a3 : call rsi
0x0000000000406bda : clc ; add rsp, 0x130 ; pop rbp ; ret
0x0000000000405c5f : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405171 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040165f : clc ; jne 0x401668 ; pop rbp ; ret
0x0000000000402fb5 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004070ff : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000401c87 : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000401c8b : clc ; pop rbp ; ret
0x0000000000405084 : clc ; ret 0xffff
0x0000000000401817 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406029 : cld ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004061ae : cld ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004070fc : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000406083 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406026 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004061ab : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401f2c : cmove eax, ecx ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040161d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401630 ; pop rbp ; ret
0x000000000040526c : cwde ; mov rcx, qword ptr [rax*8 + 0x407c48] ; jmp rcx
0x0000000000406914 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000403c72 : dec dword ptr [rcx - 0x77] ; ret 0x294d
0x0000000000404000 : enter 0x4b05, 0x34 ; fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x00000000004051cd : enter 0xb0, -0x18 ; wait ; ret 0xffff
0x000000000040823d : fdivp st(7) ; jmp qword ptr [rax]
0x000000000040822d : fdivp st(7) ; jmp rax
0x0000000000404004 : fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x00000000004071bc : fmul qword ptr [rax - 0x7d] ; ret
0x00000000004017e9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401630 : hlt ; pop rbp ; mov edi, 0x60a248 ; jmp rax
0x000000000040507e : in al, dx ; mov rdi, qword ptr [rbp - 0x10] ; call 0x401387
0x0000000000408237 : inc dword ptr [rax] ; or al, 0 ; add al, al ; fdivp st(7) ; jmp qword ptr [rax]
0x000000000040428b : inc dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000408267 : inc eax ; or al, 0 ; add al, al ; loope 0x408276 ; jmp rax
0x00000000004081a7 : inc eax ; or dword ptr [rax], eax ; add byte ptr [rax], dl ; sar bh, 1 ; jmp rax
0x00000000004087c4 : insb byte ptr [rdi], dx ; add al, 0 ; add al, cl ; ret
0x0000000000405895 : int 0x80
0x0000000000401623 : ja 0x40162a ; pop rbp ; ret
0x000000000040162f : je 0x40162d ; pop rbp ; mov edi, 0x60a248 ; jmp rax
0x0000000000401c86 : jge 0x401c87 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000405081 : jge 0x405077 ; call 0x401384
0x000000000040142b : jmp 0x401267
0x0000000000405d68 : jmp 0xffffffffc2c9a572
0x000000000040813f : jmp qword ptr [rax]
0x0000000000403706 : jmp qword ptr [rcx]
0x00000000004087cb : jmp qword ptr [rdx]
0x0000000000401637 : jmp rax
0x0000000000401e02 : jmp rcx
0x0000000000401677 : jmp rdx
0x0000000000401660 : jne 0x401667 ; pop rbp ; ret
0x000000000040507d : jne 0x405073 ; mov rdi, qword ptr [rbp - 0x10] ; call 0x401388
0x00000000004025c1 : jo 0x402622 ; ret
0x0000000000403105 : jo 0x403166 ; ret
0x000000000040472f : jo 0x404795 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000404dd4 : jo 0x404e35 ; ret
0x0000000000404f0e : jo 0x404f6f ; ret
0x000000000040827d : jrcxz 0x408280 ; jmp qword ptr [rax]
0x00000000004068aa : lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000408804 : lodsb al, byte ptr [rsi] ; add al, 0 ; add al, ch ; ret
0x000000000040826d : loope 0x408270 ; jmp rax
0x0000000000402b7b : loopne 0x402bcb ; add esp, 0x20 ; pop rbp ; ret
0x0000000000402b7a : loopne 0x402bcc ; add esp, 0x20 ; pop rbp ; ret
0x00000000004051ce : mov al, 0 ; call 0x401474
0x0000000000404cab : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000404b38 : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x000000000040522b : mov al, al ; call 0x401474
0x0000000000406c16 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040522a : mov al, r8b ; call 0x401475
0x00000000004028f1 : mov byte ptr [0x60a2e0], al ; pop rbp ; ret
0x0000000000401693 : mov byte ptr [rip + 0x208c1e], 1 ; ret
0x00000000004025bc : mov dh, -0x3f ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000402845 : mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000406c1c : mov dh, -0x40 ; pop rbp ; ret
0x00000000004028cd : mov dword ptr [0x60a2d8], edi ; pop rbp ; ret
0x0000000000402fb6 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000402f78 : mov dword ptr [rax], eax ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000402e34 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000402f77 : mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040507c : mov dword ptr [rbp - 0x14], esi ; mov rdi, qword ptr [rbp - 0x10] ; call 0x401389
0x0000000000402b79 : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004018f9 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004017e7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401815 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004070fd : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000401c85 : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040302e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402de8 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000405b7b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402b43 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402de5 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000402a9f : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405e73 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402d9d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402e2e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000402f7a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004051cb : mov eax, dword ptr [rbp - 0x38] ; mov al, 0 ; call 0x401477
0x00000000004030ff : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000404ca9 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000406084 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406027 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004061ac : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000405c5d : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040516f : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401c89 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004016bb : mov ebp, esp ; call rax
0x0000000000401621 : mov ebp, esp ; ja 0x40162c ; pop rbp ; ret
0x00000000004058ad : mov ecx, 0x5b2a830a ; ret
0x0000000000401dfb : mov ecx, dword ptr [rax*8 + 0x407230] ; jmp rcx
0x00000000004031c2 : mov ecx, dword ptr [rax*8 + 0x407740] ; jmp rcx
0x00000000004034e6 : mov ecx, dword ptr [rax*8 + 0x407788] ; jmp rcx
0x000000000040526e : mov ecx, dword ptr [rax*8 + 0x407c48] ; jmp rcx
0x0000000000402e31 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004051ee : mov ecx, dword ptr [rbp - 0x38] ; mov al, 0 ; call 0x401477
0x00000000004016b5 : mov edi, 0x609e20 ; mov rbp, rsp ; call rax
0x0000000000401632 : mov edi, 0x60a248 ; jmp rax
0x0000000000401672 : mov edi, 0x60a248 ; jmp rdx
0x0000000000405080 : mov edi, dword ptr [rbp - 0x10] ; call 0x401385
0x00000000004071b7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x00000000004071b6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000405228 : mov edx, eax ; mov al, r8b ; call 0x401477
0x0000000000401670 : mov esi, eax ; mov edi, 0x60a248 ; jmp rdx
0x00000000004028cc : mov qword ptr [0x60a2d8], rdi ; pop rbp ; ret
0x0000000000401c84 : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040302d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004051ca : mov r8, qword ptr [rbp - 0x38] ; mov al, 0 ; call 0x401478
0x0000000000404caa : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000405b7a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402b42 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402de4 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000402a9e : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405e72 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402d9c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004030fe : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000404ca8 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000405c5c : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040516e : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401c88 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004016ba : mov rbp, rsp ; call rax
0x0000000000401620 : mov rbp, rsp ; ja 0x40162d ; pop rbp ; ret
0x0000000000401dfa : mov rcx, qword ptr [rax*8 + 0x407230] ; jmp rcx
0x00000000004031c1 : mov rcx, qword ptr [rax*8 + 0x407740] ; jmp rcx
0x00000000004034e5 : mov rcx, qword ptr [rax*8 + 0x407788] ; jmp rcx
0x000000000040526d : mov rcx, qword ptr [rax*8 + 0x407c48] ; jmp rcx
0x00000000004051ed : mov rcx, qword ptr [rbp - 0x38] ; mov al, 0 ; call 0x401478
0x000000000040507f : mov rdi, qword ptr [rbp - 0x10] ; call 0x401386
0x0000000000405227 : mov rdx, rax ; mov al, r8b ; call 0x401478
0x000000000040166f : mov rsi, rax ; mov edi, 0x60a248 ; jmp rdx
0x00000000004087e4 : mov word ptr [rax + rax], es ; add al, bl ; ret
0x0000000000401696 : mov word ptr [rax], fs ; add byte ptr [rcx], al ; ret
0x0000000000402844 : movzx eax, al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000406c1b : movzx eax, al ; pop rbp ; ret
0x00000000004025bb : movzx eax, cl ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004071d8 : nop dword ptr [rax + rax] ; ret
0x0000000000408239 : or al, 0 ; add al, al ; fdivp st(7) ; jmp qword ptr [rax]
0x0000000000408269 : or al, 0 ; add al, al ; loope 0x408274 ; jmp rax
0x000000000040384d : or al, 0x18 ; ret 0x6451
0x0000000000408c64 : or al, 9 ; add byte ptr [rax], al ; call 0xffffffffe1408c46
0x00000000004047b8 : or al, ch ; ret 0xffca
0x0000000000400890 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x0000000000408c65 : or dword ptr [rax], eax ; add al, ch ; sar bh, cl ; jmp rax
0x0000000000402873 : or dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004081a9 : or dword ptr [rax], eax ; add byte ptr [rax], dl ; sar bh, 1 ; jmp rax
0x0000000000404e91 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004071cc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000404731 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004071ce : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000404733 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004071d0 : pop r14 ; pop r15 ; ret
0x00000000004044e3 : pop r14 ; pop rbp ; ret
0x0000000000404735 : pop r15 ; pop rbp ; ret
0x00000000004071d2 : pop r15 ; ret
0x0000000000401692 : pop rbp ; mov byte ptr [rip + 0x208c1e], 1 ; ret
0x0000000000401631 : pop rbp ; mov edi, 0x60a248 ; jmp rax
0x000000000040166e : pop rbp ; mov rsi, rax ; mov edi, 0x60a248 ; jmp rdx
0x00000000004071cb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004071cf : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401625 : pop rbp ; ret
0x0000000000404730 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040572d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004044e2 : pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004058b1 : pop rbx ; ret
0x0000000000404736 : pop rdi ; pop rbp ; ret
0x00000000004071d3 : pop rdi ; ret
0x0000000000404734 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004071d1 : pop rsi ; pop r15 ; ret
0x00000000004044e4 : pop rsi ; pop rbp ; ret
0x00000000004071cd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000404732 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000401f32 : push rax ; pop rbp ; ret
0x00000000004016b4 : push rbp ; mov edi, 0x609e20 ; mov rbp, rsp ; call rax
0x000000000040823c : rcr dh, -1 ; jmp qword ptr [rax]
0x0000000000401251 : ret
0x0000000000400430 : ret 0
0x0000000000406af6 : ret 0x148
0x00000000004048ce : ret 0x1b2
0x0000000000401432 : ret 0x208c
0x000000000040257e : ret 0x2948
0x0000000000403c59 : ret 0x294c
0x0000000000403c75 : ret 0x294d
0x0000000000403c8d : ret 0x2de8
0x0000000000402eb4 : ret 0x5589
0x000000000040384f : ret 0x6451
0x0000000000401ee9 : ret 0x8148
0x0000000000406f3f : ret 0x840
0x0000000000403ef3 : ret 0x8840
0x0000000000405229 : ret 0x8844
0x0000000000405d80 : ret 0x8948
0x0000000000403c78 : ret 0x8949
0x0000000000403e0c : ret 0x89a5
0x0000000000403c5c : ret 0x8b48
0x0000000000402114 : ret 0xb0
0x0000000000406ae9 : ret 0xb849
0x0000000000401655 : ret 0xc148
0x0000000000406850 : ret 0xc2f6
0x0000000000403674 : ret 0xca21
0x0000000000405163 : ret 0xd284
0x000000000040260c : ret 0xe280
0x000000000040451c : ret 0xee8
0x0000000000403f08 : ret 0xf180
0x0000000000406843 : ret 0xf280
0x00000000004036ee : ret 0xf281
0x00000000004047ba : ret 0xffca
0x0000000000405085 : ret 0xffff
0x0000000000400898 : ret 1
0x00000000004068b0 : ret 2
0x0000000000402f76 : rol byte ptr [rcx + rcx*4], 1 ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040812c : ror bl, -1 ; jmp rax
0x0000000000405890 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000403100 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x40316b ; ret
0x0000000000408268 : ror byte ptr [rax + rax], 0 ; shl cl, -1 ; jmp rax
0x000000000040165c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40166b ; pop rbp ; ret
0x0000000000405891 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000403c4d : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000403c56 : ror byte ptr [rax - 0x77], 1 ; ret 0x294c
0x0000000000403101 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x40316a ; ret
0x0000000000402846 : ror byte ptr [rax - 0x7d], -0x3c ; pop rbp ; ret
0x00000000004051c9 : ror byte ptr [rbx + rcx*4 + 0x45], 1 ; enter 0xb0, -0x18 ; wait ; ret 0xffff
0x00000000004081a8 : ror byte ptr [rcx], 0 ; add byte ptr [rax], dl ; sar bh, 1 ; jmp rax
0x00000000004082a8 : ror byte ptr [rip - 0x12e00000], -1 ; jmp rax
0x00000000004025bd : ror dword ptr [rax - 0x7d], -0x3c ; jo 0x402626 ; ret
0x0000000000401f2e : ror dword ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x00000000004081bd : sar bh, 1 ; jmp qword ptr [rax]
0x00000000004081ad : sar bh, 1 ; jmp rax
0x0000000000408c69 : sar bh, cl ; jmp rax
0x000000000040165e : sar eax, 1 ; jne 0x401669 ; pop rbp ; ret
0x000000000040165d : sar rax, 1 ; jne 0x40166a ; pop rbp ; ret
0x00000000004087c0 : sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; add al, 0 ; add al, cl ; ret
0x0000000000408800 : sbb al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add al, 0 ; add al, ch ; ret
0x00000000004087e0 : sbb al, 0 ; add byte ptr [rax], al ; mov word ptr [rax + rax], es ; add al, bl ; ret
0x000000000040826c : shl cl, -1 ; jmp rax
0x000000000040522c : shr al, 0x3e ; ret 0xffff
0x0000000000406c18 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004058af : sub dword ptr [rdx], 0x5b ; ret
0x000000000040720d : sub esp, 8 ; add rsp, 8 ; ret
0x000000000040720c : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000405226 : test al, 0x48 ; mov edx, eax ; mov al, r8b ; call 0x401479
0x00000000004071da : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000401f2b : test byte ptr [rdi], 0x44 ; ror dword ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x00000000004016e3 : test byte ptr [rdx], cl ; add byte ptr [rax], al ; add al, ch ; ret
0x00000000004051d1 : wait ; ret 0xffff
0x0000000000403ef2 : xchg eax, ebp ; ret 0x8840
0x0000000000405162 : xchg eax, esp ; ret 0xd284
0x000000000040260b : xchg eax, esp ; ret 0xe280
0x0000000000406bde : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000404c27 : xor eax, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x0000000000401249 : xor eax, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000402f75 : xor eax, edx ; mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
