0x00000000004135fd : adc al, 0 ; add ah, ah ; mov dl, -1 ; jmp rsp
0x000000000040cf0b : adc byte ptr [rcx + 0x45], ah ; xor ecx, dword ptr [rsi - 0x76b7ecf2] ; ret 0x148
0x000000000040674f : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041353d : adc dword ptr [rax], eax ; add byte ptr [rsi - 1], dl ; jmp rsp
0x0000000000408dc9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004135bd : adc eax, dword ptr [rax] ; add byte ptr [rdx + rbp*4 - 1], ah ; jmp rsp
0x000000000040cf11 : adc ecx, dword ptr [rax - 0x77] ; ret 0x148
0x00000000004135ff : add ah, ah ; mov dl, -1 ; jmp rsp
0x000000000041364f : add ah, dh ; ret 0xffff
0x0000000000413657 : add ah, dl ; ret
0x000000000041364c : add al, 0x16 ; add byte ptr [rax], al ; hlt ; ret 0xffff
0x000000000040ee3d : add al, 0x21 ; ret 0xd709
0x000000000040df28 : add al, ch ; ret 0xff36
0x0000000000413c6f : add al, dl ; and al, 0xffffffffffffffff ; call qword ptr [rax]
0x00000000004138ef : add al, dl ; idiv dh ; jmp rdx
0x00000000004105ff : add bl, dh ; ret
0x0000000000403427 : add byte ptr [rax + 1], cl ; ret 0x2948
0x00000000004136bf : add byte ptr [rax + rdx*8 - 1], dl ; jmp rsp
0x0000000000403395 : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x000000000040d72d : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000401c54 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; ret 0x2948
0x000000000040976d : add byte ptr [rax - 0x77], cl ; jge 0x409770 ; pop rbp ; ret
0x0000000000404a53 : add byte ptr [rax - 0x77], cl ; push rbp ; call 0xffffffffff7a0873
0x0000000000405d8d : add byte ptr [rax - 0x77], cl ; push rbp ; call 0xffffffffff7a1bad
0x0000000000401dc1 : add byte ptr [rax - 0x77], cl ; ret 0x66e8
0x0000000000401e2d : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000041347f : add byte ptr [rax - 1], dh ; jmp rsp
0x000000000040df26 : add byte ptr [rax], al ; add al, ch ; ret 0xff36
0x00000000004105fd : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000403425 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x2948
0x0000000000403393 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x0000000000401c52 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; ret 0x2948
0x000000000040976b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jge 0x409772 ; pop rbp ; ret
0x0000000000401dbf : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x66e8
0x0000000000401e2b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x00000000004105fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004004b8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000004004ba : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x0000000000404425 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404cd3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406340 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040e4dd : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040976a : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000412a44 : add byte ptr [rax], al ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000404790 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004105fc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004107f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4022
0x0000000000412be4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x40d3
0x00000000004004bc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x000000000040ee62 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004036d0 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x5589
0x000000000040a6fa : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x858b
0x0000000000409cf1 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xfa81
0x0000000000404711 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x1489
0x0000000000403cc9 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x5589
0x0000000000406fa9 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000403f64 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x00000000004096de : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040478c : add byte ptr [rax], al ; add cl, ch ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040bc5c : add byte ptr [rax], al ; add cl, ch ; ret
0x000000000040fccc : add byte ptr [rax], al ; add cl, ch ; ret 2
0x000000000040cfdf : add byte ptr [rax], al ; add esi, eax ; mov eax, esi ; pop rbp ; ret
0x0000000000404427 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404cd5 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406342 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401593 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000413a6a : add byte ptr [rax], al ; and al, 3 ; add byte ptr [rax], al ; push rax ; or al, 0xffffffffffffffff ; call rsi
0x0000000000413c6a : add byte ptr [rax], al ; and al, 5 ; add byte ptr [rax], al ; shl byte ptr [rdi + rdi*8], 1 ; call qword ptr [rax]
0x000000000041364e : add byte ptr [rax], al ; hlt ; ret 0xffff
0x00000000004016e9 : add byte ptr [rax], al ; jmp 0x4015a9
0x000000000040e4df : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000404a52 : add byte ptr [rax], al ; mov qword ptr [rbp - 0x18], rdx ; movsx edi, byte ptr [rcx] ; call rax
0x000000000040976c : add byte ptr [rax], al ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000407362 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040573f : add byte ptr [rax], al ; mov rdx, rax ; mov al, 0 ; call 0x401959
0x00000000004147d2 : add byte ptr [rax], al ; mov word ptr [rax], ss ; add byte ptr [rax], al ; pop rax ; test al, -1 ; call qword ptr [rsi]
0x00000000004138ea : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], eax ; add al, dl ; idiv dh ; jmp rdx
0x0000000000412a46 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000413646 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xffff
0x00000000004139ee : add byte ptr [rax], al ; or dil, dil ; call rax
0x00000000004147d6 : add byte ptr [rax], al ; pop rax ; test al, -1 ; call qword ptr [rsi]
0x0000000000404792 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040d5cb : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000408a60 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004058c9 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000413a6e : add byte ptr [rax], al ; push rax ; or al, 0xffffffffffffffff ; call rsi
0x00000000004136be : add byte ptr [rax], al ; push rsp ; sar bh, 1 ; jmp rsp
0x00000000004105fe : add byte ptr [rax], al ; ret
0x00000000004107f6 : add byte ptr [rax], al ; ret 0x4022
0x0000000000412be6 : add byte ptr [rax], al ; ret 0x40d3
0x000000000041363e : add byte ptr [rax], al ; ret 0xffff
0x00000000004004be : add byte ptr [rax], al ; ret 1
0x0000000000414176 : add byte ptr [rax], al ; sbb byte ptr [rdx - 1], dl ; jmp qword ptr [rax]
0x0000000000413c6e : add byte ptr [rax], al ; shl byte ptr [rdi + rdi*8], 1 ; call qword ptr [rax]
0x0000000000414172 : add byte ptr [rax], al ; sub al, 0xa ; add byte ptr [rax], al ; sbb byte ptr [rdx - 1], dl ; jmp qword ptr [rax]
0x0000000000414296 : add byte ptr [rax], al ; sub byte ptr [rbx - 1], dl ; jmp qword ptr [rdx]
0x000000000040d5cc : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000408a61 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x00000000004058ca : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000413a6b : add byte ptr [rbx + rax], ah ; add byte ptr [rax], al ; push rax ; or al, 0xffffffffffffffff ; call rsi
0x00000000004027f2 : add byte ptr [rbx - 0xff4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004048e7 : add byte ptr [rcx - 0x7629d63a], cl ; ret 0xea81
0x000000000041049c : add byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x0000000000402a52 : add byte ptr [rcx], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401ab8 : add byte ptr [rcx], al ; ret
0x00000000004036d2 : add byte ptr [rcx], al ; ret 0x5589
0x000000000040a6fc : add byte ptr [rcx], al ; ret 0x858b
0x0000000000409cf3 : add byte ptr [rcx], al ; ret 0xfa81
0x0000000000404713 : add byte ptr [rcx], ch ; ret 0x1489
0x0000000000403ccb : add byte ptr [rcx], ch ; ret 0x5589
0x000000000040fcc8 : add byte ptr [rdi], cl ; lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x000000000040bc58 : add byte ptr [rdi], cl ; test dword ptr [rip - 0x17000000], eax ; ret
0x0000000000406fab : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000403f66 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x00000000004096e0 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041363f : add byte ptr [rdx + rax*8 - 1], al ; jmp rsp
0x00000000004135bf : add byte ptr [rdx + rbp*4 - 1], ah ; jmp rsp
0x0000000000414173 : add byte ptr [rdx + rcx], ch ; add byte ptr [rax], al ; sbb byte ptr [rdx - 1], dl ; jmp qword ptr [rax]
0x0000000000412bdf : add byte ptr [rdx], ch ; rol dword ptr [rax], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x40d3
0x000000000041353f : add byte ptr [rsi - 1], dl ; jmp rsp
0x000000000040478e : add cl, ch ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040bc5e : add cl, ch ; ret
0x000000000040fcce : add cl, ch ; ret 2
0x000000000040dc09 : add dword ptr [rax - 0x77], ecx ; ret 0x8148
0x00000000004138ed : add dword ptr [rax], eax ; add al, dl ; idiv dh ; jmp rdx
0x000000000040cfdd : add dword ptr [rax], eax ; add byte ptr [rax], al ; add esi, eax ; mov eax, esi ; pop rbp ; ret
0x0000000000408d8f : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040d5ca : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000408a5f : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x00000000004058c8 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000041035d : add dword ptr [rax], ecx ; ret 0x840
0x000000000040ac62 : add dword ptr [rcx + 0x20], eax ; ret 0x845
0x000000000040ac48 : add dword ptr [rcx - 0x78], eax ; ret
0x0000000000406c86 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040646b : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403acf : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004029a4 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040560a : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041003a : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401ab4 : add eax, 0x2138be ; add ebx, esi ; ret
0x000000000040c8d5 : add eax, 0x6348ca01 ; ret 0x6948
0x000000000040bc5b : add eax, 0xe9000000 ; ret
0x000000000040fccb : add eax, 0xe9000000 ; ret 2
0x000000000040cec7 : add eax, ebp ; ret
0x0000000000401a7b : add eax, edx ; sar rax, 1 ; jne 0x401a8c ; pop rbp ; ret
0x0000000000401ab9 : add ebx, esi ; ret
0x000000000040cfe1 : add esi, eax ; mov eax, esi ; pop rbp ; ret
0x0000000000402eeb : add esp, 0x10 ; pop rbp ; ret
0x000000000040674d : add esp, 0x110 ; pop rbp ; ret
0x000000000040fffc : add esp, 0x130 ; pop rbp ; ret
0x00000000004058c5 : add esp, 0x178 ; pop rbx ; pop rbp ; ret
0x000000000040d8fc : add esp, 0x1a0 ; pop rbp ; ret
0x000000000040f43e : add esp, 0x1e0 ; pop rbp ; ret
0x0000000000402a55 : add esp, 0x20 ; pop rbp ; ret
0x00000000004042b6 : add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000040309d : add esp, 0x30 ; pop rbp ; ret
0x00000000004029a9 : add esp, 0x40 ; pop rbp ; ret
0x00000000004091ac : add esp, 0x50 ; pop rbp ; ret
0x000000000040560f : add esp, 0x60 ; pop rbp ; ret
0x0000000000407683 : add esp, 0x70 ; pop rbp ; ret
0x000000000040714b : add esp, 0x80 ; pop rbp ; ret
0x00000000004090ba : add esp, 0x90 ; pop rbp ; ret
0x000000000040ce5d : add esp, 0x908 ; pop rbx ; pop rbp ; ret
0x000000000040d793 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040e436 : add esp, 0xc0 ; pop rbp ; ret
0x000000000040ee5f : add esp, 0xd8 ; pop rbx ; pop rbp ; ret
0x0000000000401596 : add esp, 8 ; ret
0x0000000000401a7a : add rax, rdx ; sar rax, 1 ; jne 0x401a8d ; pop rbp ; ret
0x0000000000402eea : add rsp, 0x10 ; pop rbp ; ret
0x000000000040674c : add rsp, 0x110 ; pop rbp ; ret
0x000000000040fffb : add rsp, 0x130 ; pop rbp ; ret
0x00000000004058c4 : add rsp, 0x178 ; pop rbx ; pop rbp ; ret
0x000000000040d8fb : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000040f43d : add rsp, 0x1e0 ; pop rbp ; ret
0x0000000000402a54 : add rsp, 0x20 ; pop rbp ; ret
0x00000000004042b5 : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000040309c : add rsp, 0x30 ; pop rbp ; ret
0x00000000004029a8 : add rsp, 0x40 ; pop rbp ; ret
0x00000000004091ab : add rsp, 0x50 ; pop rbp ; ret
0x000000000040560e : add rsp, 0x60 ; pop rbp ; ret
0x0000000000407682 : add rsp, 0x70 ; pop rbp ; ret
0x000000000040714a : add rsp, 0x80 ; pop rbp ; ret
0x00000000004090b9 : add rsp, 0x90 ; pop rbp ; ret
0x000000000040ce5c : add rsp, 0x908 ; pop rbx ; pop rbp ; ret
0x000000000040d792 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040e435 : add rsp, 0xc0 ; pop rbp ; ret
0x000000000040ee5e : add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x0000000000401595 : add rsp, 8 ; ret
0x0000000000413c71 : and al, 0xffffffffffffffff ; call qword ptr [rax]
0x0000000000410039 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000413a6c : and al, 3 ; add byte ptr [rax], al ; push rax ; or al, 0xffffffffffffffff ; call rsi
0x0000000000413c6c : and al, 5 ; add byte ptr [rax], al ; shl byte ptr [rdi + rdi*8], 1 ; call qword ptr [rax]
0x00000000004107f1 : and al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4022
0x0000000000406d4a : and byte ptr [rcx], al ; jmp rcx
0x0000000000412a40 : and byte ptr [rdi + 0x40], bh ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000401ab7 : and dword ptr [rax], eax ; add ebx, esi ; ret
0x000000000040d00b : and dword ptr [rax], esp ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404afe : and eax, 0x615264 ; call rax
0x0000000000404da2 : and eax, 0x615424 ; pop rbp ; ret
0x000000000040676f : and eax, 0x615470 ; pop rbp ; ret
0x0000000000406793 : and eax, 0x615478 ; pop rbp ; ret
0x0000000000407746 : and eax, dword ptr [rcx] ; jmp rcx
0x000000000040c8c8 : call 0x20351f0
0x000000000040c90c : call 0x2035234
0x000000000040c955 : call 0x203527d
0x0000000000405746 : call 0x401952
0x000000000040577a : call 0x4019b2
0x0000000000404a49 : call 0x490ad39c
0x0000000000404a48 : call 0x490ad39d
0x0000000000405d83 : call 0x490ae6d6
0x0000000000405d82 : call 0x490ae6d7
0x00000000004039a0 : call 0xffffffffca69fc30
0x000000000040399f : call 0xffffffffca69fc31
0x0000000000405684 : call 0xffffffffca6a1914
0x0000000000405683 : call 0xffffffffca6a1915
0x0000000000408a99 : call 0xffffffffe90313e9
0x0000000000408a98 : call 0xffffffffe90313ea
0x0000000000404a57 : call 0xffffffffff7a086f
0x0000000000405d91 : call 0xffffffffff7a1ba9
0x00000000004105d9 : call qword ptr [r12 + rbx*8]
0x000000000040ca76 : call qword ptr [rax]
0x0000000000413ad3 : call qword ptr [rbx]
0x00000000004142db : call qword ptr [rdx]
0x0000000000413cf3 : call qword ptr [rsi]
0x00000000004105da : call qword ptr [rsp + rbx*8]
0x0000000000401add : call rax
0x00000000004087ec : call rbx
0x0000000000413f73 : call rdi
0x0000000000413a73 : call rsi
0x000000000040fffa : clc ; add rsp, 0x130 ; pop rbp ; ret
0x000000000040cee2 : clc ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004096f1 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406b98 : clc ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000407a69 : clc ; and eax, dword ptr [rcx] ; jmp rcx
0x0000000000401a7f : clc ; jne 0x401a88 ; pop rbp ; ret
0x0000000000406146 : clc ; mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000407535 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000041051f : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402be7 : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040970b : clc ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000040974b : clc ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000040972b : clc ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000403d7e : clc ; mov rcx, qword ptr [rbp - 0x18] ; mov dword ptr [rcx + 0x34], edx ; pop rbp ; ret
0x0000000000402beb : clc ; pop rbp ; ret
0x000000000040e4dc : cld ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000402fb7 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040f029 : cld ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040f5ce : cld ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000407149 : cld ; add rsp, 0x80 ; pop rbp ; ret
0x000000000040e434 : cld ; add rsp, 0xc0 ; pop rbp ; ret
0x000000000041051c : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040f4a3 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040f026 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040f5cb : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040e4e3 : cld ; pop rbp ; ret
0x000000000040c8d4 : cli ; add eax, 0x6348ca01 ; ret 0x6948
0x0000000000403398 : cmp al, 0x25 ; ret
0x0000000000401ab6 : cmp byte ptr [rcx], ah ; add byte ptr [rcx], al ; ret
0x000000000040f329 : cmp dword ptr [rdx - 0x76be63d5], ebx ; ret
0x000000000040a948 : cmp eax, 0x811851b4 ; ret 0x30
0x000000000040e986 : cmp eax, 0x8945c621 ; ret 0x8141
0x0000000000401a3d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401a50 ; pop rbp ; ret
0x000000000040d10c : cwde ; mov rcx, qword ptr [rax*8 + 0x412ba8] ; jmp rcx
0x0000000000407a64 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; clc ; and eax, dword ptr [rcx] ; jmp rcx
0x000000000040fd34 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x00000000004027f8 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040ca2f : dec dword ptr [rcx - 0x7628d639] ; ret 0xf229
0x00000000004081f2 : dec dword ptr [rcx - 0x77] ; ret 0x294d
0x000000000040c499 : dec dword ptr [rdi] ; pushfq ; ret 0xe280
0x0000000000403421 : enter 0x2d48, 1 ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x2948
0x0000000000408580 : enter 0x4b05, 0x34 ; fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x0000000000403483 : enter 0x6153, 0 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403b34 : enter 0x6405, -0x21 ; ret 0x8b47
0x000000000040ee61 : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004070e1 : fadd dword ptr [rcx - 0xa] ; jmp qword ptr [rcx]
0x0000000000404b61 : fadd qword ptr [rcx] ; ret 0xe981
0x00000000004060c8 : fiadd dword ptr [rcx - 0xe] ; jmp qword ptr [rcx]
0x0000000000408584 : fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x000000000040e361 : fild word ptr [rcx - 0x77] ; ret
0x00000000004105dc : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000402f89 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401a50 : hlt ; pop rbp ; mov edi, 0x615310 ; jmp rax
0x0000000000413650 : hlt ; ret 0xffff
0x00000000004138f1 : idiv dh ; jmp rdx
0x0000000000413644 : in al, 0x15 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xffff
0x0000000000406bfc : in al, 0x48 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000406138 : in al, dx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040ed9a : in eax, -0x4a ; loope 0x40edc3 ; ret 0x8941
0x000000000040c246 : inc dword ptr [rcx - 0x32c9d916] ; or dword ptr [rcx], eax ; ret 0xc281
0x000000000040880b : inc dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x000000000041364b : inc dword ptr [rsi + rdx] ; add byte ptr [rax], al ; hlt ; ret 0xffff
0x00000000004135fb : inc esp ; adc al, 0 ; add ah, ah ; mov dl, -1 ; jmp rsp
0x000000000041353b : inc esp ; adc dword ptr [rax], eax ; add byte ptr [rsi - 1], dl ; jmp rsp
0x00000000004135bb : inc esp ; adc eax, dword ptr [rax] ; add byte ptr [rdx + rbp*4 - 1], ah ; jmp rsp
0x000000000040d735 : int 0x80
0x0000000000401a43 : ja 0x401a4a ; pop rbp ; ret
0x0000000000401a4f : je 0x401a4d ; pop rbp ; mov edi, 0x615310 ; jmp rax
0x0000000000402be6 : jge 0x402be7 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000403eda : jge 0x403ebe ; call rax
0x000000000040970a : jge 0x40970b ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000040972a : jge 0x40972b ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000040974a : jge 0x40974b ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000409770 : jge 0x40976d ; pop rbp ; ret
0x00000000004016eb : jmp 0x4015a7
0x000000000040dc08 : jmp 0xffffffffc2ca2412
0x000000000041417b : jmp qword ptr [rax]
0x00000000004060ce : jmp qword ptr [rcx]
0x000000000041405b : jmp qword ptr [rdx]
0x0000000000401a57 : jmp rax
0x0000000000401d7f : jmp rcx
0x0000000000413933 : jmp rdi
0x0000000000401a97 : jmp rdx
0x0000000000413443 : jmp rsp
0x0000000000401a80 : jne 0x401a87 ; pop rbp ; ret
0x0000000000407685 : jo 0x4076e6 ; ret
0x0000000000408caf : jo 0x408d15 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000409354 : jo 0x4093b5 ; ret
0x000000000040948e : jo 0x4094ef ; ret
0x000000000040972f : jo 0x409790 ; ret
0x000000000040972e : jo 0x409791 ; ret
0x00000000004058c7 : js 0x4058d0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040fcca : lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000403391 : lea esp, dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x0000000000403555 : ljmp ptr [rcx] ; ret 0x1489
0x0000000000404ed5 : ljmp ptr [rcx] ; ret 0x5589
0x000000000040a6ef : ljmp ptr [rcx] ; ret 0x858b
0x000000000040ed9c : loope 0x40edc1 ; ret 0x8941
0x0000000000403ed3 : loopne 0x403f26 ; mov eax, dword ptr [rax + 0x18] ; mov rdi, qword ptr [rbp - 0x20] ; call rax
0x0000000000405cb8 : loopne 0x405d08 ; add esp, 0x40 ; pop rbp ; ret
0x0000000000405cb7 : loopne 0x405d09 ; add esp, 0x40 ; pop rbp ; ret
0x0000000000406a1b : loopne 0x406a6b ; add esp, 0x20 ; pop rbp ; ret
0x0000000000406a1a : loopne 0x406a6c ; add esp, 0x20 ; pop rbp ; ret
0x000000000040ed98 : loopne 0x40edb4 ; in eax, -0x4a ; loope 0x40edc5 ; ret 0x8941
0x000000000040f440 : loopne 0x40f448 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000405744 : mov al, 0 ; call 0x401954
0x0000000000405778 : mov al, 0 ; call 0x4019b4
0x000000000040922b : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004090b8 : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000410036 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000406791 : mov byte ptr [0x615478], al ; pop rbp ; ret
0x0000000000405d2d : mov byte ptr [r8 + rdi], cl ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405d2e : mov byte ptr [rax + rdi], cl ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040c8c5 : mov byte ptr [rax - 0x3f], cl ; call 0x20351f3
0x000000000040c909 : mov byte ptr [rax - 0x3f], cl ; call 0x2035237
0x000000000040c952 : mov byte ptr [rax - 0x3f], cl ; call 0x2035280
0x0000000000406147 : mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000401ab3 : mov byte ptr [rip + 0x2138be], 1 ; ret
0x000000000040cf0f : mov cs, word ptr [rsi] ; adc ecx, dword ptr [rax - 0x77] ; ret 0x148
0x0000000000406c88 : mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040646d : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004042b3 : mov dh, -0x40 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000403ad1 : mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004029a6 : mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040560c : mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041003c : mov dh, -0x40 ; pop rbp ; ret
0x000000000040cec5 : mov dh, 0x3c ; add eax, ebp ; ret
0x0000000000413601 : mov dl, -1 ; jmp rsp
0x0000000000404da0 : mov dword ptr [0x615424], edx ; pop rbp ; ret
0x000000000040676d : mov dword ptr [0x615470], edi ; pop rbp ; ret
0x0000000000407536 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040c8c2 : mov dword ptr [rax - 0x3eb77778], ecx ; call 0x20351f6
0x000000000040c906 : mov dword ptr [rax - 0x3eb77778], ecx ; call 0x203523a
0x000000000040c94f : mov dword ptr [rax - 0x3eb77778], ecx ; call 0x2035283
0x00000000004074f8 : mov dword ptr [rax], eax ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000402b60 : mov dword ptr [rax], ecx ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004073b4 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004074f7 : mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000406136 : mov dword ptr [rbp - 0x14], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402bd4 : mov dword ptr [rbp - 0x18], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404a55 : mov dword ptr [rbp - 0x18], edx ; movsx edi, byte ptr [rcx] ; call rax
0x0000000000406bfa : mov dword ptr [rbp - 0x1c], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406a19 : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403099 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402f87 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402fb5 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041051d : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402be5 : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040976f : mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x00000000004075ae : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403d83 : mov dword ptr [rcx + 0x34], edx ; pop rbp ; ret
0x0000000000403ed5 : mov eax, dword ptr [rax + 0x18] ; mov rdi, qword ptr [rbp - 0x20] ; call rax
0x0000000000407368 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040da1b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004069e3 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407365 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000409791 : mov eax, dword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004044fb : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040e548 : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040dd13 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040731d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004073ae : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000405cb6 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004074fa : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040767f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000409229 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040f4a4 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040f027 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040f5cc : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040e4e1 : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040cee0 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004096ef : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406b96 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000402be9 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040970d : mov eax, dword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000040974d : mov eax, dword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000040972d : mov eax, dword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000040cfe3 : mov eax, esi ; pop rbp ; ret
0x0000000000401adb : mov ebp, esp ; call rax
0x0000000000401a41 : mov ebp, esp ; ja 0x401a4c ; pop rbp ; ret
0x000000000040be7d : mov ebx, 0x81524f62 ; ret 7
0x000000000040d74d : mov ecx, 0x5b2a830a ; ret
0x0000000000401d78 : mov ecx, dword ptr [rax*8 + 0x410660] ; jmp rcx
0x0000000000406d46 : mov ecx, dword ptr [rax*8 + 0x412068] ; jmp rcx
0x0000000000407742 : mov ecx, dword ptr [rax*8 + 0x4123b0] ; jmp rcx
0x0000000000407a66 : mov ecx, dword ptr [rax*8 + 0x4123f8] ; jmp rcx
0x0000000000409dcd : mov ecx, dword ptr [rax*8 + 0x4128b8] ; jmp rcx
0x000000000040c99a : mov ecx, dword ptr [rax*8 + 0x412b68] ; jmp rcx
0x000000000040d10e : mov ecx, dword ptr [rax*8 + 0x412ba8] ; jmp rcx
0x000000000040e1d5 : mov ecx, dword ptr [rax*8 + 0x412f20] ; jmp rcx
0x000000000040e161 : mov ecx, dword ptr [rax*8 + 0x412f80] ; jmp rcx
0x000000000040ebfa : mov ecx, dword ptr [rax*8 + 0x4130b0] ; jmp rcx
0x000000000040eb7a : mov ecx, dword ptr [rax*8 + 0x413110] ; jmp rcx
0x00000000004073b1 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000403d80 : mov ecx, dword ptr [rbp - 0x18] ; mov dword ptr [rcx + 0x34], edx ; pop rbp ; ret
0x0000000000412a41 : mov edi, 0x40 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000040515d : mov edi, 0x48000004 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000401ad5 : mov edi, 0x614e20 ; mov rbp, rsp ; call rax
0x0000000000401a52 : mov edi, 0x615310 ; jmp rax
0x0000000000401a92 : mov edi, 0x615310 ; jmp rdx
0x0000000000403ed9 : mov edi, dword ptr [rbp - 0x20] ; call rax
0x0000000000409709 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000409749 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000409729 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x00000000004105d7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x00000000004105d6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000409795 : mov edx, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000405742 : mov edx, eax ; mov al, 0 ; call 0x401956
0x0000000000401ab5 : mov esi, 0x1002138 ; ret
0x0000000000413639 : mov esi, 0x15c4ffff ; add byte ptr [rax], al ; ret 0xffff
0x0000000000405776 : mov esi, eax ; mov al, 0 ; call 0x4019b6
0x0000000000401a90 : mov esi, eax ; mov edi, 0x615310 ; jmp rdx
0x000000000040676c : mov qword ptr [0x615470], rdi ; pop rbp ; ret
0x0000000000402bd3 : mov qword ptr [rbp - 0x18], rax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404a54 : mov qword ptr [rbp - 0x18], rdx ; movsx edi, byte ptr [rcx] ; call rax
0x0000000000402be4 : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040976e : mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x00000000004075ad : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040922a : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000403ed4 : mov rax, qword ptr [rax + 0x18] ; mov rdi, qword ptr [rbp - 0x20] ; call rax
0x000000000040da1a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004069e2 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407364 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000409790 : mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040693e : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040dd12 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040731c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040767e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000409228 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040cedf : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004096ee : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406b95 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000402be8 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040970c : mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000040974c : mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000040972c : mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000401ada : mov rbp, rsp ; call rax
0x0000000000401a40 : mov rbp, rsp ; ja 0x401a4d ; pop rbp ; ret
0x0000000000401d77 : mov rcx, qword ptr [rax*8 + 0x410660] ; jmp rcx
0x0000000000406d45 : mov rcx, qword ptr [rax*8 + 0x412068] ; jmp rcx
0x0000000000407741 : mov rcx, qword ptr [rax*8 + 0x4123b0] ; jmp rcx
0x0000000000407a65 : mov rcx, qword ptr [rax*8 + 0x4123f8] ; jmp rcx
0x0000000000409dcc : mov rcx, qword ptr [rax*8 + 0x4128b8] ; jmp rcx
0x000000000040c999 : mov rcx, qword ptr [rax*8 + 0x412b68] ; jmp rcx
0x000000000040d10d : mov rcx, qword ptr [rax*8 + 0x412ba8] ; jmp rcx
0x000000000040e1d4 : mov rcx, qword ptr [rax*8 + 0x412f20] ; jmp rcx
0x000000000040e160 : mov rcx, qword ptr [rax*8 + 0x412f80] ; jmp rcx
0x000000000040ebf9 : mov rcx, qword ptr [rax*8 + 0x4130b0] ; jmp rcx
0x000000000040eb79 : mov rcx, qword ptr [rax*8 + 0x413110] ; jmp rcx
0x0000000000403d7f : mov rcx, qword ptr [rbp - 0x18] ; mov dword ptr [rcx + 0x34], edx ; pop rbp ; ret
0x0000000000403ed8 : mov rdi, qword ptr [rbp - 0x20] ; call rax
0x0000000000409708 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000409748 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000409728 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000409794 : mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000405741 : mov rdx, rax ; mov al, 0 ; call 0x401957
0x0000000000405775 : mov rsi, rax ; mov al, 0 ; call 0x4019b7
0x0000000000401a8f : mov rsi, rax ; mov edi, 0x615310 ; jmp rdx
0x000000000040ac15 : mov word ptr [rax - 0x7f], cs ; ret 0x17
0x00000000004147d4 : mov word ptr [rax], ss ; add byte ptr [rax], al ; pop rax ; test al, -1 ; call qword ptr [rsi]
0x0000000000406d44 : movabs al, byte ptr [0x412068c50c8b48] ; jmp rcx
0x00000000004138ec : movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], eax ; add al, dl ; idiv dh ; jmp rdx
0x0000000000412a48 : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000413648 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xffff
0x0000000000404afb : movsx edi, byte ptr [0x615264] ; call rax
0x0000000000404a58 : movsx edi, byte ptr [rcx] ; call rax
0x0000000000406c87 : movzx eax, al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040646c : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004042b2 : movzx eax, al ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000403ad0 : movzx eax, al ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004029a5 : movzx eax, al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040560b : movzx eax, al ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041003b : movzx eax, al ; pop rbp ; ret
0x000000000040614a : movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x00000000004105f8 : nop dword ptr [rax + rax] ; ret
0x0000000000407dcd : or al, 0x18 ; ret 0x6451
0x0000000000403300 : or al, 0x25 ; push -0x76ff9eae ; ret 0xca29
0x0000000000405d2f : or al, 0x38 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407a67 : or al, 0xffffffffffffffc5 ; clc ; and eax, dword ptr [rcx] ; jmp rcx
0x0000000000413a71 : or al, 0xffffffffffffffff ; call rsi
0x00000000004139f1 : or bh, bh ; call rax
0x0000000000409854 : or byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040ce5f : or byte ptr [rcx], cl ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004139f0 : or dil, dil ; call rax
0x000000000040ce60 : or dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040c24c : or dword ptr [rcx], eax ; ret 0xc281
0x000000000040ee3b : or dword ptr [rsp + rax + 0x21], esp ; ret 0xd709
0x0000000000409411 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040a29d : out dx, al ; ret
0x000000000040555d : outsd dx, dword ptr [rsi] ; ret
0x00000000004105ec : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000408cb1 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004105ee : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000408cb3 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004105f0 : pop r14 ; pop r15 ; ret
0x0000000000408a63 : pop r14 ; pop rbp ; ret
0x0000000000408cb5 : pop r15 ; pop rbp ; ret
0x00000000004105f2 : pop r15 ; ret
0x00000000004147d8 : pop rax ; test al, -1 ; call qword ptr [rsi]
0x0000000000401ab2 : pop rbp ; mov byte ptr [rip + 0x2138be], 1 ; ret
0x0000000000401a51 : pop rbp ; mov edi, 0x615310 ; jmp rax
0x0000000000401a8e : pop rbp ; mov rsi, rax ; mov edi, 0x615310 ; jmp rdx
0x00000000004105eb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004105ef : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401a45 : pop rbp ; ret
0x0000000000408cb0 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040d5cd : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000408a62 : pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004042b9 : pop rbx ; pop rbp ; ret
0x000000000040d751 : pop rbx ; ret
0x0000000000408cb6 : pop rdi ; pop rbp ; ret
0x00000000004105f3 : pop rdi ; ret
0x0000000000408cb4 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004105f1 : pop rsi ; pop r15 ; ret
0x0000000000408a64 : pop rsi ; pop rbp ; ret
0x00000000004105ed : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000408cb2 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403302 : push -0x76ff9eae ; ret 0xca29
0x000000000040729b : push 0x48006153 ; add esp, 0x30 ; pop rbp ; ret
0x000000000040970e : push r8 ; pop rbp ; ret
0x0000000000413a70 : push rax ; or al, 0xffffffffffffffff ; call rsi
0x00000000004091ae : push rax ; pop rbp ; ret
0x0000000000404a56 : push rbp ; call 0xffffffffff7a0870
0x0000000000405d90 : push rbp ; call 0xffffffffff7a1baa
0x0000000000409796 : push rbp ; clc ; pop rbp ; ret
0x0000000000404b60 : push rbp ; fadd qword ptr [rcx] ; ret 0xe981
0x0000000000401ad4 : push rbp ; mov edi, 0x614e20 ; mov rbp, rsp ; call rax
0x0000000000403d84 : push rcx ; xor al, 0x5d ; ret
0x00000000004136c0 : push rsp ; sar bh, 1 ; jmp rsp
0x000000000040c49b : pushfq ; ret 0xe280
0x0000000000401599 : ret
0x000000000040ff02 : ret 0
0x0000000000403b31 : ret 0x147
0x000000000040cf14 : ret 0x148
0x0000000000403557 : ret 0x1489
0x000000000040ac18 : ret 0x17
0x0000000000408e4e : ret 0x1b2
0x00000000004018f2 : ret 0x2138
0x00000000004016f2 : ret 0x2139
0x0000000000406db3 : ret 0x27e8
0x0000000000401c5b : ret 0x2948
0x00000000004081d9 : ret 0x294c
0x00000000004081f5 : ret 0x294d
0x000000000040509c : ret 0x2a9a
0x0000000000405dd7 : ret 0x2e0e
0x000000000040a94d : ret 0x30
0x000000000040512a : ret 0x40
0x00000000004107f8 : ret 0x4022
0x0000000000412be8 : ret 0x40d3
0x00000000004036d4 : ret 0x5589
0x000000000040be88 : ret 0x62bb
0x0000000000407dcf : ret 0x6451
0x000000000040be76 : ret 0x66b0
0x0000000000401dc4 : ret 0x66e8
0x000000000040b812 : ret 0x6709
0x000000000040b792 : ret 0x68c1
0x000000000040c8da : ret 0x6948
0x0000000000403f2b : ret 0x8141
0x0000000000405a6f : ret 0x8148
0x000000000041035f : ret 0x840
0x000000000040ac65 : ret 0x845
0x000000000040a6f1 : ret 0x858b
0x0000000000406fae : ret 0x8840
0x000000000040d0c9 : ret 0x8844
0x000000000040ed9e : ret 0x8941
0x000000000040341e : ret 0x8948
0x00000000004081f8 : ret 0x8949
0x000000000040838c : ret 0x89a5
0x0000000000403b38 : ret 0x8b47
0x0000000000403a8a : ret 0x8b48
0x0000000000401df7 : ret 0x8b4c
0x000000000040c2a8 : ret 0x8d0f
0x000000000040f34f : ret 0x941
0x00000000004024fe : ret 0x9588
0x0000000000401e30 : ret 0xb0
0x000000000040a953 : ret 0xb43d
0x000000000040ff09 : ret 0xb849
0x000000000040e39a : ret 0xc131
0x0000000000401a75 : ret 0xc148
0x000000000040c24e : ret 0xc281
0x000000000040fc70 : ret 0xc2f6
0x000000000040c8cb : ret 0xca01
0x0000000000406ddb : ret 0xca21
0x0000000000402788 : ret 0xca29
0x000000000040820d : ret 0xcde8
0x00000000004096e3 : ret 0xd284
0x000000000040e416 : ret 0xd709
0x0000000000403f69 : ret 0xe280
0x000000000040c199 : ret 0xe309
0x000000000040beab : ret 0xe56c
0x0000000000404b63 : ret 0xe981
0x00000000004048ed : ret 0xea81
0x000000000040a29b : ret 0xee64
0x0000000000408a9c : ret 0xee8
0x0000000000408488 : ret 0xf180
0x000000000040ca35 : ret 0xf229
0x00000000004024f1 : ret 0xf280
0x0000000000406e3e : ret 0xf281
0x0000000000405fab : ret 0xfa29
0x0000000000409cf5 : ret 0xfa81
0x000000000040df2a : ret 0xff36
0x000000000040bae7 : ret 0xffe5
0x0000000000405748 : ret 0xffff
0x00000000004004c0 : ret 1
0x000000000040fcd0 : ret 2
0x000000000040be82 : ret 7
0x00000000004074f6 : rol byte ptr [rcx + rcx*4], 1 ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000412be1 : rol dword ptr [rax], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x40d3
0x000000000040d730 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000401c57 : ror byte ptr [r8 - 0x77], 1 ; ret 0x2948
0x0000000000407680 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x4076eb ; ret
0x0000000000401a7c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401a8b ; pop rbp ; ret
0x000000000040d731 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000401c58 : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x00000000004081d6 : ror byte ptr [rax - 0x77], 1 ; ret 0x294c
0x0000000000407681 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x4076ea ; ret
0x00000000004029a7 : ror byte ptr [rax - 0x7d], -0x3c ; pop rbp ; ret
0x00000000004042b4 : ror byte ptr [rax - 0x7d], -0x3c ; sub byte ptr [rbx + 0x5d], bl ; ret
0x000000000040a2a8 : ror dword ptr [rax - 0x46], 1 ; ret 0xee64
0x00000000004136c1 : sar bh, 1 ; jmp rsp
0x0000000000401a7e : sar eax, 1 ; jne 0x401a89 ; pop rbp ; ret
0x0000000000401a7d : sar rax, 1 ; jne 0x401a8a ; pop rbp ; ret
0x0000000000403ed7 : sbb byte ptr [rax - 0x75], cl ; jge 0x403ec1 ; call rax
0x0000000000403ed6 : sbb byte ptr [rax - 0x75], cl ; jge 0x403ec2 ; call rax
0x0000000000414178 : sbb byte ptr [rdx - 1], dl ; jmp qword ptr [rax]
0x0000000000413c70 : shl byte ptr [rdi + rdi*8], 1 ; call qword ptr [rax]
0x0000000000410038 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000414174 : sub al, 0xa ; add byte ptr [rax], al ; sbb byte ptr [rdx - 1], dl ; jmp qword ptr [rax]
0x0000000000413cf1 : sub bh, bh ; call qword ptr [rsi]
0x00000000004042b8 : sub byte ptr [rbx + 0x5d], bl ; ret
0x0000000000414298 : sub byte ptr [rbx - 1], dl ; jmp qword ptr [rdx]
0x0000000000409dd1 : sub byte ptr [rcx], al ; jmp rcx
0x000000000040e413 : sub byte ptr [rsi + 0x21], dl ; ret 0xd709
0x000000000040d74f : sub dword ptr [rdx], 0x5b ; ret
0x000000000040c99e : sub eax, dword ptr [rcx] ; jmp rcx
0x0000000000410641 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000410640 : sub rsp, 8 ; add rsp, 8 ; ret
0x00000000004147d9 : test al, -1 ; call qword ptr [rsi]
0x000000000040ee3a : test al, 9 ; add al, 0x21 ; ret 0xd709
0x00000000004105fa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040bc5a : test dword ptr [rip - 0x17000000], eax ; ret
0x0000000000406fad : xchg eax, ebp ; ret 0x8840
0x0000000000403f68 : xchg eax, ebp ; ret 0xe280
0x00000000004096e2 : xchg eax, esp ; ret 0xd284
0x0000000000403d85 : xor al, 0x5d ; ret
0x000000000040555b : xor al, ch ; outsd dx, dword ptr [rsi] ; ret
0x000000000040fffe : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040ebfe : xor byte ptr [rcx], al ; jmp rcx
0x000000000040eb7e : xor dword ptr [rcx], eax ; jmp rcx
0x00000000004091a7 : xor eax, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x00000000004074f5 : xor eax, edx ; mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040cf0e : xor ecx, dword ptr [rsi - 0x76b7ecf2] ; ret 0x148
0x000000000040cf0d : xor r9d, dword ptr [r14 - 0x76b7ecf2] ; ret 0x148
