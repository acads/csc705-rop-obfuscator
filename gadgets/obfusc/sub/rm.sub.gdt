0x000000000040fc78 : adc al, -0x75 ; hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000414cfd : adc al, byte ptr [rax] ; add al, dl ; mov bh, bh ; call qword ptr [rdx]
0x000000000040bc6c : adc al, byte ptr [rcx + 0x4f9] ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x0000000000413e50 : adc byte ptr [rdi + rdi*8], al ; call qword ptr [rsi]
0x000000000040af02 : adc dword ptr [rcx - 0xa], eax ; jmp qword ptr [rcx]
0x0000000000406589 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000413d8b : add ah, ah ; add al, byte ptr [rax] ; add byte ptr [rax], al ; add bh, bh ; call qword ptr [rax]
0x0000000000413977 : add ah, bh ; fdivr st(7) ; call rsp
0x00000000004134ff : add ah, bh ; sbb edi, edi ; jmp rsp
0x0000000000413a37 : add ah, cl ; loop 0x413a3e ; call rsp
0x0000000000413e51 : add al, -1 ; call qword ptr [rsi]
0x0000000000404f61 : add al, 0x25 ; ret 0x412d
0x000000000040dc7a : add al, 0x48 ; add eax, ecx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000413d8d : add al, byte ptr [rax] ; add byte ptr [rax], al ; add bh, bh ; call qword ptr [rax]
0x0000000000402b58 : add al, ch ; ret 0xffef
0x00000000004143b7 : add al, cl ; sub edi, edi ; jmp qword ptr [rdx]
0x0000000000414cff : add al, dl ; mov bh, bh ; call qword ptr [rdx]
0x0000000000413d91 : add bh, bh ; call qword ptr [rax]
0x000000000041171f : add bl, dh ; ret
0x0000000000402585 : add byte ptr [r8 - 0x77], cl ; ret 0x11e8
0x0000000000402558 : add byte ptr [r8 - 0x77], cl ; ret 0x3ee8
0x000000000040d4b4 : add byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000040a1a8 : add byte ptr [rax + 1], cl ; ret 0x8b48
0x0000000000413937 : add byte ptr [rax + rcx*8 - 1], cl ; call rsp
0x0000000000404f5e : add byte ptr [rax - 0x73], cl ; add al, 0x25 ; ret 0x412d
0x000000000040df8f : add byte ptr [rax - 0x75], cl ; fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x000000000040769d : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000402586 : add byte ptr [rax - 0x77], cl ; ret 0x11e8
0x0000000000402559 : add byte ptr [rax - 0x77], cl ; ret 0x3ee8
0x000000000041523f : add byte ptr [rax], ah ; mov dh, -1 ; call qword ptr [rsi]
0x0000000000413e4e : add byte ptr [rax], al ; adc byte ptr [rdi + rdi*8], al ; call qword ptr [rsi]
0x0000000000413d8f : add byte ptr [rax], al ; add bh, bh ; call qword ptr [rax]
0x000000000041171d : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040d4b2 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000040a1a6 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8b48
0x0000000000404f5c : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add al, 0x25 ; ret 0x412d
0x000000000040df8d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x000000000041171b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040e62d : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040a9a2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041171c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000408b26 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000402983 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b72f8b], cl ; ret 0xb0
0x0000000000402a6a : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7338b], cl ; ret 0xb0
0x000000000040854b : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x0000000000409018 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000407fe2 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0xf40
0x000000000040948b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000405c2e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000403149 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000402edb : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x0000000000402648 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040863f : add byte ptr [rax], al ; add cl, ch ; ret
0x000000000041016c : add byte ptr [rax], al ; add cl, ch ; ret 2
0x0000000000402328 : add byte ptr [rax], al ; add dh, al ; out dx, eax ; add cl, ch ; ret
0x0000000000406551 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406260 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040a9a4 : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000401733 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000413976 : add byte ptr [rax], al ; cld ; fdivr st(7) ; call rsp
0x00000000004134fe : add byte ptr [rax], al ; cld ; sbb edi, edi ; jmp rsp
0x0000000000401949 : add byte ptr [rax], al ; jmp 0x401749
0x0000000000404b22 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000413e4a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add eax, dword ptr [rax] ; add byte ptr [rax], dl ; add al, -1 ; call qword ptr [rsi]
0x0000000000414836 : add byte ptr [rax], al ; or byte ptr [rcx - 1], cl ; call qword ptr [rcx]
0x000000000040280d : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040753b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406220 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000408b27 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000414cfa : add byte ptr [rax], al ; push rsp ; adc al, byte ptr [rax] ; add al, dl ; mov bh, bh ; call qword ptr [rdx]
0x000000000041171e : add byte ptr [rax], al ; ret
0x0000000000414d3a : add byte ptr [rax], al ; xchg eax, esp ; adc al, byte ptr [rax] ; add al, dl ; mov bh, bh ; call qword ptr [rdx]
0x0000000000413e4f : add byte ptr [rax], dl ; add al, -1 ; call qword ptr [rsi]
0x000000000040853d : add byte ptr [rbp - 0x77], al ; ret 0x3145
0x00000000004094a0 : add byte ptr [rbp - 0x77], al ; ret 0x8141
0x000000000040753c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000406221 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000408b28 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000413877 : add byte ptr [rbx + rbp*4 - 1], bh ; call rsp
0x0000000000402985 : add byte ptr [rbx - 0x76b72f8b], cl ; ret 0xb0
0x0000000000402a6c : add byte ptr [rbx - 0x76b7338b], cl ; ret 0xb0
0x000000000040854d : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x000000000040901a : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x00000000004115bc : add byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x0000000000401c98 : add byte ptr [rcx], al ; ret
0x0000000000407fe4 : add byte ptr [rcx], bh ; ret 0xf40
0x0000000000410168 : add byte ptr [rdi], cl ; lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x000000000040948d : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000405c30 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x000000000040314b : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000402edd : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x000000000040264a : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000414d1b : add byte ptr [rdx + rdx], dh ; add al, dl ; mov bh, bh ; call qword ptr [rdx]
0x0000000000414cfb : add byte ptr [rdx + rdx], dl ; add al, dl ; mov bh, bh ; call qword ptr [rdx]
0x000000000040daed : add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x0000000000413777 : add byte ptr [rsp + rdx*4 - 1], cl ; call rsp
0x000000000040232e : add cl, ch ; ret
0x000000000041016e : add cl, ch ; ret 2
0x000000000040232a : add dh, al ; out dx, eax ; add cl, ch ; ret
0x000000000040fa32 : add dword ptr [rax + 0xf], eax ; mov dh, -0x39 ; pop rbp ; ret
0x000000000040d591 : add dword ptr [rax + 0xf], eax ; mov dh, -0x3a ; pop rbp ; ret
0x0000000000407bd9 : add dword ptr [rax - 0x77], ecx ; ret 0x8148
0x000000000040654f : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040753a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040621f : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040c06c : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004098e2 : add dword ptr [rax], ecx ; ret 0x840
0x000000000040fafb : add dword ptr [rdi + rcx - 0x4a], eax ; ret 0xee81
0x0000000000403ae0 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408000 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403159 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040c4ed : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004032a3 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x000000000040863b : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret
0x000000000040d0a4 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x5588
0x0000000000401c94 : add eax, 0x21469e ; add ebx, esi ; ret
0x000000000040863e : add eax, 0xe9000000 ; ret
0x000000000041016b : add eax, 0xe9000000 ; ret 2
0x000000000040bceb : add eax, 0xf000000 ; xchg eax, esp ; ret 0x9588
0x0000000000413e4d : add eax, dword ptr [rax] ; add byte ptr [rax], dl ; add al, -1 ; call qword ptr [rsi]
0x000000000040dc7c : add eax, ecx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401c5b : add eax, edx ; sar rax, 1 ; jne 0x401c6c ; pop rbp ; ret
0x0000000000401c99 : add ebx, esi ; ret
0x0000000000401e8b : add esp, 0x10 ; pop rbp ; ret
0x000000000040c069 : add esp, 0x108 ; pop rbx ; pop rbp ; ret
0x000000000041049c : add esp, 0x130 ; pop rbp ; ret
0x0000000000403835 : add esp, 0x160 ; pop rbp ; ret
0x000000000040786c : add esp, 0x1a0 ; pop rbp ; ret
0x000000000040d7bc : add esp, 0x1b0 ; pop rbp ; ret
0x0000000000410c6e : add esp, 0x1e0 ; pop rbp ; ret
0x0000000000403213 : add esp, 0x20 ; pop rbp ; ret
0x0000000000401f6d : add esp, 0x30 ; pop rbp ; ret
0x0000000000402a8a : add esp, 0x40 ; pop rbp ; ret
0x000000000040cbdc : add esp, 0x48 ; pop rbx ; pop rbp ; ret
0x0000000000403efa : add esp, 0x50 ; pop rbp ; ret
0x000000000040f2f7 : add esp, 0x60 ; pop rbp ; ret
0x0000000000404e43 : add esp, 0x70 ; pop rbp ; ret
0x000000000040e9e3 : add esp, 0x80 ; pop rbp ; ret
0x000000000040687a : add esp, 0x90 ; pop rbp ; ret
0x0000000000408b23 : add esp, 0x98 ; pop rbx ; pop rbp ; ret
0x0000000000406f28 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040f11c : add esp, 0xc0 ; pop rbp ; ret
0x0000000000403073 : add esp, 0xd0 ; pop rbp ; ret
0x0000000000402809 : add esp, 0xe0 ; pop rbp ; ret
0x0000000000403a9b : add esp, 0xf0 ; pop rbp ; ret
0x0000000000401736 : add esp, 8 ; ret
0x000000000040dc7b : add rax, rcx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401c5a : add rax, rdx ; sar rax, 1 ; jne 0x401c6d ; pop rbp ; ret
0x0000000000401e8a : add rsp, 0x10 ; pop rbp ; ret
0x000000000040c068 : add rsp, 0x108 ; pop rbx ; pop rbp ; ret
0x000000000041049b : add rsp, 0x130 ; pop rbp ; ret
0x0000000000403834 : add rsp, 0x160 ; pop rbp ; ret
0x000000000040786b : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000040d7bb : add rsp, 0x1b0 ; pop rbp ; ret
0x0000000000410c6d : add rsp, 0x1e0 ; pop rbp ; ret
0x0000000000403212 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000401f6c : add rsp, 0x30 ; pop rbp ; ret
0x0000000000402a89 : add rsp, 0x40 ; pop rbp ; ret
0x000000000040cbdb : add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x0000000000403ef9 : add rsp, 0x50 ; pop rbp ; ret
0x000000000040f2f6 : add rsp, 0x60 ; pop rbp ; ret
0x0000000000404e42 : add rsp, 0x70 ; pop rbp ; ret
0x000000000040e9e2 : add rsp, 0x80 ; pop rbp ; ret
0x0000000000406879 : add rsp, 0x90 ; pop rbp ; ret
0x0000000000408b22 : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x0000000000406f27 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040f11b : add rsp, 0xc0 ; pop rbp ; ret
0x0000000000403072 : add rsp, 0xd0 ; pop rbp ; ret
0x0000000000402808 : add rsp, 0xe0 ; pop rbp ; ret
0x0000000000403a9a : add rsp, 0xf0 ; pop rbp ; ret
0x0000000000401735 : add rsp, 8 ; ret
0x0000000000414139 : and al, 0xffffffffffffffff ; jmp rdx
0x00000000004032a2 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040fa30 : and bh, 1 ; movzx eax, dil ; pop rbp ; ret
0x00000000004095bb : and byte ptr [rbx + 0x41], bl ; pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040d58f : and dh, 1 ; movzx eax, sil ; pop rbp ; ret
0x000000000040fa2f : and dil, 1 ; movzx eax, dil ; pop rbp ; ret
0x0000000000413a35 : and dword ptr [rax], eax ; add ah, cl ; loop 0x413a40 ; call rsp
0x0000000000401c97 : and dword ptr [rax], eax ; add ebx, esi ; ret
0x0000000000401c96 : and dword ptr [rax], r8d ; add ebx, esi ; ret
0x000000000040e095 : and eax, 0x413340 ; mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x000000000040426f : and eax, 0x616350 ; pop rbp ; ret
0x00000000004043cf : and eax, 0x616358 ; pop rbp ; ret
0x00000000004043f3 : and eax, 0x616360 ; pop rbp ; ret
0x0000000000402acc : and eax, dword ptr [rcx] ; jmp rcx
0x0000000000410e99 : and eax, edx ; xor rdi, rdx ; or rax, rdi ; pop rbp ; ret
0x000000000041111e : and edx, eax ; mov al, dl ; movzx eax, al ; pop rbp ; ret
0x0000000000410ff8 : and edx, eax ; mov ax, dx ; movzx eax, ax ; pop rbp ; ret
0x0000000000410da7 : and edx, eax ; or r9d, edx ; mov eax, r9d ; pop rbp ; ret
0x00000000004110b3 : and edx, ebx ; mov al, dl ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000041111d : and edx, r8d ; mov al, dl ; movzx eax, al ; pop rbp ; ret
0x000000000040d58e : and sil, 1 ; movzx eax, sil ; pop rbp ; ret
0x0000000000406259 : call 0xffffffffe902eba9
0x0000000000406258 : call 0xffffffffe902ebaa
0x0000000000407081 : call 0xffffffffff40b1b7
0x000000000040e581 : call 0xffffffffff7a70d2
0x000000000040e580 : call 0xffffffffff7a70d3
0x000000000040e6bf : call 0xffffffffff7a7210
0x000000000040e6be : call 0xffffffffff7a7211
0x00000000004116f9 : call qword ptr [r12 + rbx*8]
0x0000000000413d93 : call qword ptr [rax]
0x000000000041483b : call qword ptr [rcx]
0x0000000000414aa3 : call qword ptr [rdx]
0x0000000000413e53 : call qword ptr [rsi]
0x00000000004116fa : call qword ptr [rsp + rbx*8]
0x0000000000401cbd : call rax
0x0000000000405fac : call rbx
0x0000000000414093 : call rdi
0x000000000041373b : call rsp
0x000000000040f92a : clc ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041049a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x00000000004048f6 : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404256 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004041a4 : clc ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000403ef8 : clc ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040f2f5 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040a832 : clc ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000406f26 : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x000000000040f820 : clc ; add rsp, 0xc0 ; pop rbp ; ret
0x0000000000406f84 : clc ; cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401c5f : clc ; jne 0x401c68 ; pop rbp ; ret
0x0000000000410f8a : clc ; mov ax, r8w ; movzx eax, ax ; pop rbp ; ret
0x000000000040fbba : clc ; mov byte ptr [rax + 0x1c], 0 ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000404cf5 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040faa8 : clc ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x000000000040cc7e : clc ; mov dword ptr [rcx + 0x18], eax ; pop rbp ; ret
0x000000000040c736 : clc ; mov dword ptr [rcx + 0x2c], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d3f7 : clc ; mov dword ptr [rdi + 0x18], 0x95f616 ; pop rbp ; ret
0x000000000041163f : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040f85e : clc ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x00000000004081b3 : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040d7db : clc ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040d7fb : clc ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040d81b : clc ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000410cbc : clc ; mov rax, r8 ; pop rbp ; ret
0x0000000000403b87 : clc ; pop rbp ; ret
0x0000000000408066 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403833 : cld ; add rsp, 0x160 ; pop rbp ; ret
0x0000000000403c84 : cld ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040828e : cld ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040989f : cld ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040f11a : cld ; add rsp, 0xc0 ; pop rbp ; ret
0x0000000000403071 : cld ; add rsp, 0xd0 ; pop rbp ; ret
0x000000000040acdc : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x0000000000403a99 : cld ; add rsp, 0xf0 ; pop rbp ; ret
0x0000000000413978 : cld ; fdivr st(7) ; call rsp
0x000000000041163c : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000408063 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403c81 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040828b : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000413500 : cld ; sbb edi, edi ; jmp rsp
0x000000000040df6a : cmp dword ptr [rax - 0x75], ecx ; jne 0x40df54 ; call rax
0x0000000000410b59 : cmp dword ptr [rdx - 0x76be63d5], ebx ; ret
0x0000000000401c1d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401c30 ; pop rbp ; ret
0x0000000000406f85 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004084ef : cmpsd dword ptr [rsi], dword ptr [rdi] ; cvttps2pi mm0, qword ptr [rcx - 0xe] ; jmp qword ptr [rcx]
0x00000000004084f0 : cvttps2pi mm0, qword ptr [rcx - 0xe] ; jmp qword ptr [rcx]
0x0000000000408b25 : cwde ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040707c : cwde ; mov rcx, qword ptr [rax*8 + 0x412de8] ; jmp rcx
0x000000000040af00 : cwde ; pop rdx ; adc dword ptr [rcx - 0xa], eax ; jmp qword ptr [rcx]
0x000000000040b1dc : cwde ; sbb byte ptr [rcx - 0xe], al ; jmp qword ptr [rcx]
0x0000000000403b83 : dec dword ptr [rax - 0x75] ; clc ; pop rbp ; ret
0x00000000004101d4 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000403647 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000403641 : dec dword ptr [rbx - 0x1174b] ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040374e : dec dword ptr [rbx - 0x12f4b] ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004059b2 : dec dword ptr [rcx - 0x77] ; ret 0x294d
0x000000000040cf40 : div dword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000040cf3f : div qword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000040df67 : enter -0x74b8, 0x39 ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x0000000000409fee : enter 0x41ed, -0x77 ; ret 0x8141
0x0000000000405d40 : enter 0x4b05, 0x34 ; fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x000000000040b645 : fadd dword ptr [rcx - 0xe] ; jmp qword ptr [rcx]
0x000000000040313a : fadd qword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040d0ac : fbld dword ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000040d0ad : fbld dword ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x00000000004139b9 : fdiv st(7), st(0) ; call rsp
0x0000000000413979 : fdivr st(7) ; call rsp
0x0000000000405d44 : fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x0000000000409492 : fild dword ptr [rdi + rcx + 0x44] ; ret 0x8941
0x0000000000401731 : fild dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000407dfe : fild word ptr [rbp - 0x76ba39df] ; ret 0x8141
0x00000000004110b4 : fimul dword ptr [rax - 0x3f49f030] ; pop rbx ; pop rbp ; ret
0x000000000040d983 : fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x000000000040d984 : fmul dword ptr [rax - 0x77] ; ret 0x2948
0x00000000004116fc : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000401e89 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040c1de : hlt ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040faa4 : hlt ; mov rcx, qword ptr [rbp - 8] ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x0000000000401c30 : hlt ; pop rbp ; mov edi, 0x6162e0 ; jmp rax
0x000000000040b3f2 : imul edx, dword ptr [rbx - 0xd7f], -1 ; jmp qword ptr [rcx]
0x0000000000402a88 : in al, dx ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040cf0d : in al, dx ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000040cf10 : in al, dx ; pop rbp ; ret
0x00000000004094aa : inc dword ptr [rcx - 0x77] ; ret
0x0000000000405fcb : inc dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x00000000004134fb : inc esp ; or al, 0 ; add ah, bh ; sbb edi, edi ; jmp rsp
0x00000000004076a5 : int 0x80
0x0000000000409bdf : int 0x81
0x0000000000401c23 : ja 0x401c2a ; pop rbp ; ret
0x000000000040f861 : ja 0x40f8ae ; pop rbp ; ret
0x0000000000413739 : jbe 0x41373c ; call rsp
0x0000000000401c2f : je 0x401c2d ; pop rbp ; mov edi, 0x6162e0 ; jmp rax
0x000000000040d7da : jge 0x40d7db ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040d7fa : jge 0x40d7fb ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040d81a : jge 0x40d81b ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000040dbd0 : jge 0x40dbc3 ; mov rcx, qword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040f1a0 : jge 0x40f193 ; mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040f85d : jge 0x40f85e ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040aa2f : jmp 0x372bb7
0x000000000040194b : jmp 0x401747
0x0000000000404f5a : jmp 0x404f68
0x0000000000406e85 : jmp 0x406eb7
0x000000000040e420 : jmp 0x49036d70
0x000000000040ee9e : jmp 0x490377ee
0x000000000040ef0b : jmp 0x4903785b
0x000000000040f69c : jmp 0x49037fec
0x000000000040f709 : jmp 0x49038059
0x0000000000407bd8 : jmp 0xffffffffc2c9c3e2
0x000000000041429b : jmp qword ptr [rax]
0x0000000000403508 : jmp qword ptr [rcx]
0x0000000000414f63 : jmp qword ptr [rdi]
0x000000000041417b : jmp qword ptr [rdx]
0x0000000000401c37 : jmp rax
0x0000000000413c13 : jmp rbx
0x00000000004021ea : jmp rcx
0x0000000000401c77 : jmp rdx
0x00000000004133c3 : jmp rsp
0x0000000000401c60 : jne 0x401c67 ; pop rbp ; ret
0x000000000040cab9 : jne 0x40ca9c ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x000000000040cf41 : jne 0x40cf39 ; mov rax, rdx ; pop rbp ; ret
0x000000000040d052 : jne 0x40d04a ; mov rax, rdx ; pop rbp ; ret
0x000000000040dc46 : jne 0x40dc31 ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000040df6d : jne 0x40df51 ; call rax
0x0000000000404e45 : jo 0x404ea6 ; ret
0x000000000040646f : jo 0x4064d5 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406b14 : jo 0x406b75 ; ret
0x0000000000406c4e : jo 0x406caf ; ret
0x000000000040a836 : jo 0x40a897 ; ret
0x000000000040bce8 : jo 0x40bc74 ; stc ; add eax, 0xf000000 ; xchg eax, esp ; ret 0x9588
0x0000000000413b31 : jrcxz 0x413b33 ; jmp rdx
0x000000000040a135 : lahf ; sub ah, byte ptr [rcx] ; ret 0x8941
0x000000000040a141 : lahf ; sub al, byte ptr [rcx - 0x77] ; ret 0x8141
0x000000000041016a : lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000407e07 : loop 0x407dc8 ; loopne 0x407df1 ; test dword ptr [rcx - 0x77], eax ; ret
0x0000000000413a39 : loop 0x413a3c ; call rsp
0x000000000040a13e : loope 0x40a118 ; mov edi, 0x89412a9f ; ret 0x8141
0x000000000040280b : loopne 0x402812 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000407e09 : loopne 0x407def ; test dword ptr [rcx - 0x77], eax ; ret
0x0000000000407e90 : loopne 0x407ee0 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000407e8f : loopne 0x407ee1 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040ace0 : loopne 0x40ace7 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040dc47 : loopne 0x40dc99 ; mov esi, eax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x0000000000410c70 : loopne 0x410c78 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000413974 : mov ah, 0x1e ; add byte ptr [rax], al ; cld ; fdivr st(7) ; call rsp
0x000000000040db4e : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040410a : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000406878 : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x000000000040d7be : mov al, 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000407f62 : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040d0ab : mov al, byte ptr [rbp - 0x21] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040329f : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000411156 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040fabc : mov al, byte ptr [rdi + 0x1c] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000411120 : mov al, dl ; movzx eax, al ; pop rbp ; ret
0x00000000004110b5 : mov al, dl ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x0000000000410ffa : mov ax, dx ; movzx eax, ax ; pop rbp ; ret
0x0000000000410f8b : mov ax, r8w ; movzx eax, ax ; pop rbp ; ret
0x0000000000410f90 : mov bh, -0x40 ; pop rbp ; ret
0x0000000000414d01 : mov bh, bh ; call qword ptr [rdx]
0x00000000004043f1 : mov byte ptr [0x616360], al ; pop rbp ; ret
0x000000000040fbbb : mov byte ptr [rax + 0x1c], 0 ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x00000000004026cc : mov byte ptr [rdx + 0x1a], 0 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401c93 : mov byte ptr [rip + 0x21469e], 1 ; ret
0x0000000000415221 : mov ch, -1 ; jmp rax
0x00000000004138b9 : mov cl, -1 ; call rsp
0x000000000040fa35 : mov dh, -0x39 ; pop rbp ; ret
0x000000000040d594 : mov dh, -0x3a ; pop rbp ; ret
0x0000000000403ae2 : mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408002 : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040315b : mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040c4ef : mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004032a5 : mov dh, -0x40 ; pop rbp ; ret
0x00000000004110b8 : mov dh, -0x40 ; pop rbx ; pop rbp ; ret
0x0000000000415241 : mov dh, -1 ; call qword ptr [rsi]
0x000000000040426d : mov dword ptr [0x616350], edi ; pop rbp ; ret
0x00000000004043cd : mov dword ptr [0x616358], edi ; pop rbp ; ret
0x0000000000404cf6 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000404cb8 : mov dword ptr [rax], eax ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000404b74 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000404cb7 : mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000402886 : mov dword ptr [rbp - 0x10], ecx ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040cf0b : mov dword ptr [rbp - 0x14], eax ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000040320f : mov dword ptr [rbp - 0x18], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401f69 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040db4c : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000404108 : mov dword ptr [rbp - 0x50], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401e87 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041163d : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040def5 : mov dword ptr [rbp - 8], eax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004081b1 : mov dword ptr [rbp - 8], edx ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040faa9 : mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x000000000040cc7f : mov dword ptr [rcx + 0x18], eax ; pop rbp ; ret
0x000000000040c737 : mov dword ptr [rcx + 0x2c], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404d6e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040c331 : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040e09a : mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x000000000040d3f8 : mov dword ptr [rdi + 0x18], 0x95f616 ; pop rbp ; ret
0x000000000040f860 : mov dword ptr [rdi + 0x48], esi ; pop rbp ; ret
0x0000000000404904 : mov eax, 0xffffffff ; pop rbp ; ret
0x0000000000404b28 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000403d82 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404643 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040cbd8 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x0000000000404b25 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040288a : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000402a86 : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040cf0e : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000407ce3 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404add : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404b6e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040d8f9 : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000407e8e : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040dc4c : mov eax, dword ptr [rbp - 0x20] ; call rax
0x000000000040f3ff : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040cabf : mov eax, dword ptr [rbp - 0x28] ; call rax
0x0000000000404cba : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000404e3f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004069e9 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040fc79 : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040c1dc : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000408064 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403c82 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040828c : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040989d : mov eax, dword ptr [rbp - 4] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040f928 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004048f4 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404254 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004041a2 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000403ef6 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040f2f3 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040a830 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000403b85 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040d7dd : mov eax, dword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040d7fd : mov eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040d81d : mov eax, dword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000410f8d : mov eax, eax ; movzx eax, ax ; pop rbp ; ret
0x0000000000410cbe : mov eax, eax ; pop rbp ; ret
0x0000000000408ba7 : mov eax, ecx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000410dad : mov eax, ecx ; pop rbp ; ret
0x000000000040e281 : mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000410ffb : mov eax, edx ; movzx eax, ax ; pop rbp ; ret
0x000000000040cf44 : mov eax, edx ; pop rbp ; ret
0x0000000000410f8c : mov eax, r8d ; movzx eax, ax ; pop rbp ; ret
0x0000000000410dac : mov eax, r9d ; pop rbp ; ret
0x0000000000401cbb : mov ebp, esp ; call rax
0x0000000000401c21 : mov ebp, esp ; ja 0x401c2c ; pop rbp ; ret
0x0000000000404902 : mov ebp, esp ; mov eax, 0xffffffff ; pop rbp ; ret
0x00000000004076bd : mov ecx, 0x5b2a830a ; ret
0x00000000004021e3 : mov ecx, dword ptr [rax*8 + 0x4117c0] ; jmp rcx
0x0000000000402ac8 : mov ecx, dword ptr [rax*8 + 0x412380] ; jmp rcx
0x0000000000404f02 : mov ecx, dword ptr [rax*8 + 0x4128e0] ; jmp rcx
0x0000000000405226 : mov ecx, dword ptr [rax*8 + 0x412928] ; jmp rcx
0x000000000040707e : mov ecx, dword ptr [rax*8 + 0x412de8] ; jmp rcx
0x000000000040cc14 : mov ecx, dword ptr [rax*8 + 0x4131b8] ; jmp rcx
0x0000000000404b71 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040e5e2 : mov ecx, dword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040e57f : mov ecx, dword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040dbd3 : mov ecx, dword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040f1a3 : mov ecx, dword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040faa6 : mov ecx, dword ptr [rbp - 8] ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x000000000040cc7c : mov ecx, dword ptr [rbp - 8] ; mov dword ptr [rcx + 0x18], eax ; pop rbp ; ret
0x000000000040f270 : mov ecx, dword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000401cb5 : mov edi, 0x615e20 ; mov rbp, rsp ; call rax
0x0000000000401c32 : mov edi, 0x6162e0 ; jmp rax
0x0000000000401c72 : mov edi, 0x6162e0 ; jmp rdx
0x000000000040a140 : mov edi, 0x89412a9f ; ret 0x8141
0x000000000040f85c : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040d7d9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040d7f9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040d819 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000040e583 : mov edi, dword ptr [rcx] ; call rax
0x000000000040df69 : mov edi, dword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x00000000004116f7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x00000000004116f6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000040df6c : mov esi, dword ptr [rbp - 0x20] ; call rax
0x000000000040dbd7 : mov esi, dword ptr [rcx] ; call rax
0x0000000000401c70 : mov esi, eax ; mov edi, 0x6162e0 ; jmp rdx
0x000000000040dc49 : mov esi, eax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000040cabc : mov esi, eax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x000000000040426c : mov qword ptr [0x616350], rdi ; pop rbp ; ret
0x00000000004043cc : mov qword ptr [0x616358], rdi ; pop rbp ; ret
0x0000000000402885 : mov qword ptr [rbp - 0x10], rcx ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040320e : mov qword ptr [rbp - 0x18], rax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040def4 : mov qword ptr [rbp - 8], rax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004081b0 : mov qword ptr [rbp - 8], rdx ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000404d6d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040c330 : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040f85f : mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040db4d : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000404109 : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000403d81 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404642 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404b24 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000402889 : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000407ce2 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404adc : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040d8f8 : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000407e8d : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040dc4b : mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000040f3fe : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040cabe : mov rax, qword ptr [rbp - 0x28] ; call rax
0x0000000000404e3e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004069e8 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040f927 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004048f3 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404253 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004041a1 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000403ef5 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040f2f2 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040a82f : mov rax, qword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000403b84 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040d7dc : mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040d7fc : mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040d81c : mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000410cbd : mov rax, r8 ; pop rbp ; ret
0x0000000000408ba6 : mov rax, rcx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040e280 : mov rax, rdx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040cf43 : mov rax, rdx ; pop rbp ; ret
0x0000000000401cba : mov rbp, rsp ; call rax
0x0000000000401c20 : mov rbp, rsp ; ja 0x401c2d ; pop rbp ; ret
0x0000000000404901 : mov rbp, rsp ; mov eax, 0xffffffff ; pop rbp ; ret
0x00000000004021e2 : mov rcx, qword ptr [rax*8 + 0x4117c0] ; jmp rcx
0x0000000000402ac7 : mov rcx, qword ptr [rax*8 + 0x412380] ; jmp rcx
0x0000000000404f01 : mov rcx, qword ptr [rax*8 + 0x4128e0] ; jmp rcx
0x0000000000405225 : mov rcx, qword ptr [rax*8 + 0x412928] ; jmp rcx
0x000000000040707d : mov rcx, qword ptr [rax*8 + 0x412de8] ; jmp rcx
0x000000000040cc13 : mov rcx, qword ptr [rax*8 + 0x4131b8] ; jmp rcx
0x000000000040e5e1 : mov rcx, qword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040e57e : mov rcx, qword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040dbd2 : mov rcx, qword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040f1a2 : mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040faa5 : mov rcx, qword ptr [rbp - 8] ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x000000000040cc7b : mov rcx, qword ptr [rbp - 8] ; mov dword ptr [rcx + 0x18], eax ; pop rbp ; ret
0x000000000040f26f : mov rcx, qword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040f85b : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040d7d8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040d7f8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040d818 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000040e582 : mov rdi, qword ptr [rcx] ; call rax
0x000000000040df68 : mov rdi, qword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x000000000040df6b : mov rsi, qword ptr [rbp - 0x20] ; call rax
0x000000000040dbd6 : mov rsi, qword ptr [rcx] ; call rax
0x0000000000401c6f : mov rsi, rax ; mov edi, 0x6162e0 ; jmp rdx
0x000000000040dc48 : mov rsi, rax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000040cabb : mov rsi, rax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x000000000040bae1 : movabs dword ptr [0xfffffff281f4f275], eax ; jmp qword ptr [rcx]
0x0000000000409e0d : movabs eax, dword ptr [0x21fffffffff281ee] ; ret 0xfa81
0x0000000000413e4c : movsb byte ptr [rdi], byte ptr [rsi] ; add eax, dword ptr [rax] ; add byte ptr [rax], dl ; add al, -1 ; call qword ptr [rsi]
0x0000000000403ae1 : movzx eax, al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408001 : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040315a : movzx eax, al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040c4ee : movzx eax, al ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004032a4 : movzx eax, al ; pop rbp ; ret
0x00000000004110b7 : movzx eax, al ; pop rbx ; pop rbp ; ret
0x0000000000410f8f : movzx eax, ax ; pop rbp ; ret
0x000000000040fa34 : movzx eax, bh ; pop rbp ; ret
0x000000000040d593 : movzx eax, dh ; pop rbp ; ret
0x000000000040fa33 : movzx eax, dil ; pop rbp ; ret
0x000000000040d592 : movzx eax, sil ; pop rbp ; ret
0x0000000000409135 : movzx eax, word ptr [rbp - 2] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040b7fa : mul dword ptr [rbp + 0x21] ; ret 0x8941
0x0000000000411718 : nop dword ptr [rax + rax] ; ret
0x00000000004134fd : or al, 0 ; add ah, bh ; sbb edi, edi ; jmp rsp
0x000000000040558d : or al, 0x18 ; ret 0x6451
0x000000000040707f : or al, 0xffffffffffffffc5 ; call 0xffffffffff40b1b9
0x000000000040853b : or byte ptr [rax], al ; add byte ptr [rbp - 0x77], al ; ret 0x3145
0x0000000000414838 : or byte ptr [rcx - 1], cl ; call qword ptr [rcx]
0x000000000040c06b : or byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004143b5 : or dword ptr [rax], eax ; add al, cl ; sub edi, edi ; jmp qword ptr [rdx]
0x000000000040949e : or dword ptr [rcx], eax ; add byte ptr [rbp - 0x77], al ; ret 0x8141
0x0000000000406bd1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000410cbb : or eax, edi ; mov rax, r8 ; pop rbp ; ret
0x0000000000410e9f : or eax, edi ; pop rbp ; ret
0x0000000000410daa : or ecx, edx ; mov eax, r9d ; pop rbp ; ret
0x0000000000413441 : or edi, edi ; jmp rsp
0x0000000000410cba : or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x0000000000410da9 : or r9d, edx ; mov eax, r9d ; pop rbp ; ret
0x0000000000410e9e : or rax, rdi ; pop rbp ; ret
0x000000000040d590 : out 1, al ; movzx eax, sil ; pop rbp ; ret
0x000000000040fa31 : out 1, eax ; movzx eax, dil ; pop rbp ; ret
0x0000000000408eaa : out dx, al ; rol byte ptr [rcx - 0xe], 1 ; jmp qword ptr [rcx]
0x000000000040232d : out dx, eax ; add cl, ch ; ret
0x0000000000407f64 : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040dad9 : outsb dx, byte ptr [rsi] ; ret 0x280f
0x000000000041170c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000406471 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041170e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000406473 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000411710 : pop r14 ; pop r15 ; ret
0x0000000000406223 : pop r14 ; pop rbp ; ret
0x0000000000406475 : pop r15 ; pop rbp ; ret
0x0000000000411712 : pop r15 ; ret
0x0000000000401c92 : pop rbp ; mov byte ptr [rip + 0x21469e], 1 ; ret
0x0000000000401c31 : pop rbp ; mov edi, 0x6162e0 ; jmp rax
0x0000000000401c6e : pop rbp ; mov rsi, rax ; mov edi, 0x6162e0 ; jmp rdx
0x000000000041170b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041170f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401c25 : pop rbp ; ret
0x0000000000406470 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040753d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406222 : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000408b29 : pop rbx ; pop rbp ; ret
0x00000000004076c1 : pop rbx ; ret
0x0000000000406476 : pop rdi ; pop rbp ; ret
0x0000000000411713 : pop rdi ; ret
0x000000000040af01 : pop rdx ; adc dword ptr [rcx - 0xa], eax ; jmp qword ptr [rcx]
0x00000000004084ee : pop rdx ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cvttps2pi mm0, qword ptr [rcx - 0xe] ; jmp qword ptr [rcx]
0x0000000000406474 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000411711 : pop rsi ; pop r15 ; ret
0x0000000000406224 : pop rsi ; pop rbp ; ret
0x000000000041170d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000406472 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040daf0 : pop rsp ; ret 0xf66
0x0000000000402583 : push 0x21 ; add byte ptr [r8 - 0x77], cl ; ret 0x11e8
0x0000000000403efc : push rax ; pop rbp ; ret
0x00000000004081b2 : push rbp ; clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000401cb4 : push rbp ; mov edi, 0x615e20 ; mov rbp, rsp ; call rax
0x000000000040a21b : push rbp ; ror byte ptr [rax - 0x75], 1 ; ror byte ptr [r8 - 0x77], 1 ; ret 0x8148
0x0000000000403f65 : push rbp ; ror byte ptr [rax - 0x77], 1 ; ret 0xc1e8
0x0000000000414cfc : push rsp ; adc al, byte ptr [rax] ; add al, dl ; mov bh, bh ; call qword ptr [rdx]
0x00000000004002e1 : ret
0x000000000040a6cc : ret 0
0x0000000000402589 : ret 0x11e8
0x000000000040ad4a : ret 0x134
0x000000000040cd06 : ret 0x148
0x000000000040660e : ret 0x1b2
0x0000000000401b52 : ret 0x2146
0x0000000000401952 : ret 0x2147
0x0000000000401742 : ret 0x2148
0x000000000040d755 : ret 0x26a8
0x000000000040dada : ret 0x280f
0x0000000000404625 : ret 0x2948
0x0000000000405999 : ret 0x294c
0x00000000004059b5 : ret 0x294d
0x0000000000408540 : ret 0x3145
0x000000000040fb03 : ret 0x3693
0x000000000040915a : ret 0x3948
0x000000000040255c : ret 0x3ee8
0x0000000000404f63 : ret 0x412d
0x000000000040d0a7 : ret 0x5588
0x0000000000404bf4 : ret 0x5589
0x000000000040c1cf : ret 0x60
0x000000000040558f : ret 0x6451
0x0000000000407e04 : ret 0x8141
0x0000000000407bdc : ret 0x8148
0x000000000040ac6f : ret 0x8341
0x000000000040e423 : ret 0x8348
0x00000000004098e4 : ret 0x840
0x000000000040901e : ret 0x8445
0x0000000000405c33 : ret 0x8840
0x0000000000407039 : ret 0x8844
0x0000000000408475 : ret 0x8941
0x000000000040cb4a : ret 0x8944
0x000000000040279e : ret 0x8948
0x00000000004059b8 : ret 0x8949
0x0000000000410ff9 : ret 0x8966
0x0000000000405b4c : ret 0x89a5
0x000000000040599c : ret 0x8b48
0x0000000000410b7f : ret 0x941
0x000000000040cb2d : ret 0x945
0x0000000000402ee0 : ret 0x9588
0x0000000000402438 : ret 0xb0
0x00000000004081a2 : ret 0xb848
0x00000000004103a9 : ret 0xb849
0x000000000040e4a6 : ret 0xb948
0x000000000040858b : ret 0xc121
0x0000000000401c55 : ret 0xc148
0x0000000000403f69 : ret 0xc1e8
0x00000000004085a3 : ret 0xc221
0x0000000000410110 : ret 0xc2f6
0x0000000000404670 : ret 0xca21
0x000000000041111f : ret 0xd088
0x000000000040264d : ret 0xd284
0x000000000040ac76 : ret 0xd4e8
0x000000000040291e : ret 0xd709
0x000000000040314e : ret 0xe280
0x0000000000402ab2 : ret 0xe883
0x000000000040fc53 : ret 0xea81
0x00000000004059cd : ret 0xede8
0x000000000040625c : ret 0xee8
0x000000000040faff : ret 0xee81
0x00000000004098eb : ret 0xf01
0x0000000000405c48 : ret 0xf180
0x00000000004098c8 : ret 0xf280
0x000000000040542e : ret 0xf281
0x0000000000407fe6 : ret 0xf40
0x000000000040daf1 : ret 0xf66
0x0000000000410ff4 : ret 0xfa31
0x000000000040350a : ret 0xfa81
0x0000000000410bba : ret 0xff0b
0x00000000004106ca : ret 0xff11
0x000000000040e79a : ret 0xff2f
0x000000000040eeb0 : ret 0xff3
0x0000000000402b5a : ret 0xffef
0x0000000000406614 : ret 1
0x0000000000410170 : ret 2
0x0000000000409284 : ret 8
0x00000000004106c5 : rol byte ptr [rax + rcx*4 - 0x40], -0x18 ; ret 0xff11
0x0000000000403075 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004110a3 : rol byte ptr [rbp + 9], 1 ; ret
0x0000000000404cb6 : rol byte ptr [rcx + rcx*4], 1 ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040fb99 : rol byte ptr [rcx - 0x77], 1 ; ret
0x0000000000408eab : rol byte ptr [rcx - 0xe], 1 ; jmp qword ptr [rcx]
0x0000000000410dab : rol dword ptr [rcx + rcx*4 - 0x38], 1 ; pop rbp ; ret
0x000000000040a884 : rol dword ptr [rcx - 0xf], cl ; jmp qword ptr [rcx]
0x00000000004076a0 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000040a21f : ror byte ptr [r8 - 0x77], 1 ; ret 0x8148
0x0000000000404e40 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x404eab ; ret
0x0000000000410e9a : ror byte ptr [rax + 0x31], 1 ; xlatb ; or rax, rdi ; pop rbp ; ret
0x0000000000401c5c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401c6b ; pop rbp ; ret
0x000000000040a21c : ror byte ptr [rax - 0x75], 1 ; ror byte ptr [r8 - 0x77], 1 ; ret 0x8148
0x00000000004076a1 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x000000000040598d : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000405996 : ror byte ptr [rax - 0x77], 1 ; ret 0x294c
0x000000000040a220 : ror byte ptr [rax - 0x77], 1 ; ret 0x8148
0x0000000000402988 : ror byte ptr [rax - 0x77], 1 ; ret 0xb0
0x0000000000403f66 : ror byte ptr [rax - 0x77], 1 ; ret 0xc1e8
0x0000000000404e41 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x404eaa ; ret
0x000000000040c4f0 : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x0000000000410ffc : ror byte ptr [rdi], 1 ; mov bh, -0x40 ; pop rbp ; ret
0x0000000000411121 : ror byte ptr [rdi], 1 ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004110b6 : ror byte ptr [rdi], 1 ; mov dh, -0x40 ; pop rbx ; pop rbp ; ret
0x0000000000408ba5 : ror dword ptr [rax - 0x77], -0x38 ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b754 : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x000000000040cf0a : ror dword ptr [rcx + 0x458bec45], -0x14 ; pop rbp ; ret
0x0000000000401c95 : sahf ; and dword ptr [rax], r8d ; add ebx, esi ; ret
0x000000000040c0b3 : sar byte ptr [rdi], cl ; test dword ptr [rcx - 0xe], eax ; jmp qword ptr [rcx]
0x000000000040a13f : sar dword ptr [rdi - 0x76bed561], 1 ; ret 0x8141
0x0000000000403146 : sar dword ptr [rip], 0xf ; xchg eax, ebp ; ret 0xe280
0x0000000000401c5e : sar eax, 1 ; jne 0x401c69 ; pop rbp ; ret
0x0000000000401c5d : sar rax, 1 ; jne 0x401c6a ; pop rbp ; ret
0x000000000040fbbd : sbb al, 0 ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000040fabe : sbb al, 0x24 ; add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000413875 : sbb al, byte ptr [rax] ; add byte ptr [rbx + rbp*4 - 1], bh ; call rsp
0x00000000004026ce : sbb al, byte ptr [rax] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040b1dd : sbb byte ptr [rcx - 0xe], al ; jmp qword ptr [rcx]
0x0000000000404845 : sbb dword ptr [rcx - 0xe], eax ; jmp qword ptr [rcx]
0x0000000000413501 : sbb edi, edi ; jmp rsp
0x000000000040cf7a : sete al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040cf7c : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000040a619 : shl byte ptr [rip - 0xd7f], -1 ; jmp qword ptr [rcx]
0x000000000040db0f : shl dword ptr [rsi + 0xf], 0x5c ; ret 0xf66
0x000000000040bcea : stc ; add eax, 0xf000000 ; xchg eax, esp ; ret 0x9588
0x0000000000411158 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040a136 : sub ah, byte ptr [rcx] ; ret 0x8941
0x000000000040c739 : sub al, 0x48 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000409fec : sub al, 0x7d ; enter 0x41ed, -0x77 ; ret 0x8141
0x000000000040a142 : sub al, byte ptr [rcx - 0x77] ; ret 0x8141
0x0000000000414299 : sub bh, bh ; jmp qword ptr [rax]
0x0000000000404f06 : sub byte ptr [rcx], al ; jmp rcx
0x000000000040522a : sub dword ptr [rcx], eax ; jmp rcx
0x0000000000402556 : sub dword ptr [rcx], esp ; add byte ptr [r8 - 0x77], cl ; ret 0x3ee8
0x00000000004076bf : sub dword ptr [rdx], 0x5b ; ret
0x00000000004143b9 : sub edi, edi ; jmp qword ptr [rdx]
0x0000000000411799 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000411798 : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000408dfe : test al, 0 ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041171a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000407e0b : test dword ptr [rcx - 0x77], eax ; ret
0x000000000040c0b5 : test dword ptr [rcx - 0xe], eax ; jmp qword ptr [rcx]
0x000000000040863d : test dword ptr [rip - 0x17000000], eax ; ret
0x0000000000408550 : xchg eax, ebp ; ret
0x000000000040901d : xchg eax, ebp ; ret 0x8445
0x0000000000405c32 : xchg eax, ebp ; ret 0x8840
0x000000000040314d : xchg eax, ebp ; ret 0xe280
0x0000000000414d3c : xchg eax, esp ; adc al, byte ptr [rax] ; add al, dl ; mov bh, bh ; call qword ptr [rdx]
0x000000000040d0a6 : xchg eax, esp ; ret 0x5588
0x0000000000402edf : xchg eax, esp ; ret 0x9588
0x000000000040264c : xchg eax, esp ; ret 0xd284
0x000000000040cf7b : xchg eax, esp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000414c81 : xchg edi, edi ; jmp qword ptr [rcx]
0x0000000000410cb9 : xlatb ; or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x0000000000410e9d : xlatb ; or rax, rdi ; pop rbp ; ret
0x0000000000402581 : xor al, 0x25 ; push 0x21 ; add byte ptr [r8 - 0x77], cl ; ret 0x11e8
0x0000000000402554 : xor al, 0x25 ; sub dword ptr [rcx], esp ; add byte ptr [r8 - 0x77], cl ; ret 0x3ee8
0x0000000000409960 : xor bl, byte ptr [rcx + rax*4 - 0xf] ; jmp qword ptr [rcx]
0x000000000041049e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040cc18 : xor dword ptr [rcx], eax ; jmp rcx
0x0000000000406967 : xor eax, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x000000000040e097 : xor eax, dword ptr [rcx] ; mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x0000000000404cb5 : xor eax, edx ; mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000410cb8 : xor edi, edx ; or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x0000000000410e9c : xor edi, edx ; or rax, rdi ; pop rbp ; ret
0x0000000000410e9b : xor rdi, rdx ; or rax, rdi ; pop rbp ; ret
