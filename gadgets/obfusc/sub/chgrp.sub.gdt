0x000000000040fb08 : adc al, -0x75 ; hlt ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004151c4 : adc al, 0x18 ; add byte ptr [rax], al ; clc ; ret 0xffff
0x000000000040bafc : adc al, byte ptr [rcx + 0x4f9] ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x00000000004149c5 : adc byte ptr [rax], al ; add al, bl ; mov edi, dr1 ; call qword ptr [rdx]
0x00000000004144c0 : adc byte ptr [rbx - 1], cl ; call qword ptr [rcx]
0x000000000040ad92 : adc dword ptr [rcx - 0xa], eax ; jmp qword ptr [rcx]
0x0000000000405fb9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000415310 : add ah, -1 ; call qword ptr [rax]
0x00000000004137ff : add ah, ch ; ret
0x00000000004134ef : add ah, cl ; xor al, 0xffffffffffffffff ; jmp rsp
0x0000000000413db5 : add al, 0 ; add al, cl ; or bh, bh ; call rdi
0x000000000040db0a : add al, 0x48 ; add eax, ecx ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004151c7 : add al, bh ; ret 0xffff
0x0000000000414987 : add al, bl ; mov edi, dr1 ; call qword ptr [rdx]
0x0000000000413bb5 : add al, byte ptr [rax] ; add byte ptr [rax], cl ; add edi, edi ; call qword ptr [rsi]
0x0000000000415227 : add al, ch ; ret
0x0000000000413db7 : add al, cl ; or bh, bh ; call rdi
0x000000000041435f : add al, dl ; xor edi, edi ; call rdi
0x000000000041173f : add bl, dh ; ret
0x00000000004028c0 : add byte ptr [r8], r8b ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040d344 : add byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000040a038 : add byte ptr [rax + 1], cl ; ret 0x8b48
0x0000000000415223 : add byte ptr [rax + rbx], dh ; add al, ch ; ret
0x00000000004151e3 : add byte ptr [rax + rbx], dh ; add byte ptr [rax], al ; pop rax ; ret
0x00000000004151c3 : add byte ptr [rax + rbx], dl ; add byte ptr [rax], al ; clc ; ret 0xffff
0x0000000000404369 : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x000000000040de1f : add byte ptr [rax - 0x75], cl ; fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x000000000040706d : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x00000000004023b1 : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x00000000004151c2 : add byte ptr [rax], al ; adc al, 0x18 ; add byte ptr [rax], al ; clc ; ret 0xffff
0x00000000004144be : add byte ptr [rax], al ; adc byte ptr [rbx - 1], cl ; call qword ptr [rcx]
0x000000000041530e : add byte ptr [rax], al ; add ah, -1 ; call qword ptr [rax]
0x000000000041173d : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040d342 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000040a036 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8b48
0x0000000000415221 : add byte ptr [rax], al ; add byte ptr [rax + rbx], dh ; add al, ch ; ret
0x00000000004151e1 : add byte ptr [rax], al ; add byte ptr [rax + rbx], dh ; add byte ptr [rax], al ; pop rax ; ret
0x00000000004151c1 : add byte ptr [rax], al ; add byte ptr [rax + rbx], dl ; add byte ptr [rax], al ; clc ; ret 0xffff
0x0000000000404367 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x000000000040de1d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x00000000004023af : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000041173b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040e4bd : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040a832 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000408059 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040433b : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040285a : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041173c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004089b6 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000402a35 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7478b], cl ; ret 0xb0
0x0000000000402ace : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b74b8b], cl ; ret 0xb0
0x00000000004083db : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x0000000000408ea8 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000040931b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x000000000040565e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x000000000040bb00 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x000000000040395b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004084cf : add byte ptr [rax], al ; add cl, ch ; ret
0x000000000040fffc : add byte ptr [rax], al ; add cl, ch ; ret 2
0x0000000000405f81 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405c90 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004028c1 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040a834 : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000401733 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004139f6 : add byte ptr [rax], al ; call 0xffffffffc44138e5
0x00000000004151c6 : add byte ptr [rax], al ; clc ; ret 0xffff
0x00000000004137fe : add byte ptr [rax], al ; in al, dx ; ret
0x0000000000401949 : add byte ptr [rax], al ; jmp 0x401749
0x000000000041435a : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; or dword ptr [rax], eax ; add al, dl ; xor edi, edi ; call rdi
0x00000000004137f6 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret
0x000000000040805b : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000404552 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040433d : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004144ba : add byte ptr [rax], al ; or al, 0xb ; add byte ptr [rax], al ; adc byte ptr [rbx - 1], cl ; call qword ptr [rcx]
0x00000000004151e6 : add byte ptr [rax], al ; pop rax ; ret
0x000000000040285c : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000406f0b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405c50 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004089b7 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000041346e : add byte ptr [rax], al ; pushfq ; xor bh, bh ; jmp rsp
0x000000000041173e : add byte ptr [rax], al ; ret
0x000000000041445e : add byte ptr [rax], al ; rol byte ptr [rsi - 1], 1 ; call qword ptr [rax]
0x00000000004151e2 : add byte ptr [rax], al ; xor al, 0x18 ; add byte ptr [rax], al ; pop rax ; ret
0x0000000000415187 : add byte ptr [rax], bl ; ret 0xffff
0x00000000004151a7 : add byte ptr [rax], ch ; ret 0xffff
0x0000000000413bb7 : add byte ptr [rax], cl ; add edi, edi ; call qword ptr [rsi]
0x0000000000415167 : add byte ptr [rax], cl ; ret 0xffff
0x00000000004083cd : add byte ptr [rbp - 0x77], al ; ret 0x3145
0x0000000000409330 : add byte ptr [rbp - 0x77], al ; ret 0x8141
0x0000000000406f0c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000405c51 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x00000000004089b8 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000041356f : add byte ptr [rbx + rax*2 - 1], cl ; jmp rsp
0x00000000004144bb : add byte ptr [rbx + rcx], cl ; add byte ptr [rax], al ; adc byte ptr [rbx - 1], cl ; call qword ptr [rcx]
0x0000000000402a37 : add byte ptr [rbx - 0x76b7478b], cl ; ret 0xb0
0x0000000000402ad0 : add byte ptr [rbx - 0x76b74b8b], cl ; ret 0xb0
0x00000000004083dd : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x0000000000408eaa : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x00000000004115dc : add byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x0000000000401ca8 : add byte ptr [rcx], al ; ret
0x000000000040fff8 : add byte ptr [rdi], cl ; lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x000000000040931d : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000405660 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x000000000040bb02 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x000000000040395d : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040d97d : add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x00000000004084d1 : add cl, ch ; ret
0x000000000040fffe : add cl, ch ; ret 2
0x000000000040f8c2 : add dword ptr [rax + 0xf], eax ; mov dh, -0x39 ; pop rbp ; ret
0x000000000040d421 : add dword ptr [rax + 0xf], eax ; mov dh, -0x3a ; pop rbp ; ret
0x0000000000407549 : add dword ptr [rax - 0x77], ecx ; ret 0x8148
0x0000000000405f7f : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406f0a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000405c4f : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040befc : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004034c6 : add dword ptr [rax], ecx ; ret 0x840
0x000000000040f98b : add dword ptr [rdi + rcx - 0x4a], eax ; ret 0xee81
0x00000000004092bf : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040d3a2 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000408b24 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040c37d : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000402ae6 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004078d6 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004084cb : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret
0x000000000040cf34 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x5588
0x0000000000401ca4 : add eax, 0x21468e ; add ebx, esi ; ret
0x00000000004084ce : add eax, 0xe9000000 ; ret
0x000000000040fffb : add eax, 0xe9000000 ; ret 2
0x000000000040bb7b : add eax, 0xf000000 ; xchg eax, esp ; ret 0x9588
0x000000000040db0c : add eax, ecx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401c6b : add eax, edx ; sar rax, 1 ; jne 0x401c7c ; pop rbp ; ret
0x0000000000401ca9 : add ebx, esi ; ret
0x0000000000413bb9 : add edi, edi ; call qword ptr [rsi]
0x0000000000401eeb : add esp, 0x10 ; pop rbp ; ret
0x000000000040bef9 : add esp, 0x108 ; pop rbx ; pop rbp ; ret
0x000000000041032c : add esp, 0x130 ; pop rbp ; ret
0x000000000040723c : add esp, 0x1a0 ; pop rbp ; ret
0x000000000040d64c : add esp, 0x1b0 ; pop rbp ; ret
0x0000000000410afe : add esp, 0x1e0 ; pop rbp ; ret
0x00000000004036b0 : add esp, 0x1f0 ; pop rbp ; ret
0x0000000000404147 : add esp, 0x20 ; pop rbp ; ret
0x0000000000401fcd : add esp, 0x30 ; pop rbp ; ret
0x0000000000409731 : add esp, 0x40 ; pop rbp ; ret
0x000000000040ca6c : add esp, 0x48 ; pop rbx ; pop rbp ; ret
0x000000000040639c : add esp, 0x50 ; pop rbp ; ret
0x0000000000402aeb : add esp, 0x60 ; pop rbp ; ret
0x0000000000404873 : add esp, 0x70 ; pop rbp ; ret
0x000000000040e873 : add esp, 0x80 ; pop rbp ; ret
0x00000000004062aa : add esp, 0x90 ; pop rbp ; ret
0x00000000004089b3 : add esp, 0x98 ; pop rbx ; pop rbp ; ret
0x0000000000406958 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040efac : add esp, 0xc0 ; pop rbp ; ret
0x0000000000403d7e : add esp, 0xd0 ; pop rbp ; ret
0x00000000004039cb : add esp, 0xe0 ; pop rbp ; ret
0x0000000000401736 : add esp, 8 ; ret
0x000000000040db0b : add rax, rcx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401c6a : add rax, rdx ; sar rax, 1 ; jne 0x401c7d ; pop rbp ; ret
0x0000000000401eea : add rsp, 0x10 ; pop rbp ; ret
0x000000000040bef8 : add rsp, 0x108 ; pop rbx ; pop rbp ; ret
0x000000000041032b : add rsp, 0x130 ; pop rbp ; ret
0x000000000040723b : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000040d64b : add rsp, 0x1b0 ; pop rbp ; ret
0x0000000000410afd : add rsp, 0x1e0 ; pop rbp ; ret
0x00000000004036af : add rsp, 0x1f0 ; pop rbp ; ret
0x0000000000404146 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000401fcc : add rsp, 0x30 ; pop rbp ; ret
0x0000000000409730 : add rsp, 0x40 ; pop rbp ; ret
0x000000000040ca6b : add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x000000000040639b : add rsp, 0x50 ; pop rbp ; ret
0x0000000000402aea : add rsp, 0x60 ; pop rbp ; ret
0x0000000000404872 : add rsp, 0x70 ; pop rbp ; ret
0x000000000040e872 : add rsp, 0x80 ; pop rbp ; ret
0x00000000004062a9 : add rsp, 0x90 ; pop rbp ; ret
0x00000000004089b2 : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x0000000000406957 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040efab : add rsp, 0xc0 ; pop rbp ; ret
0x0000000000403d7d : add rsp, 0xd0 ; pop rbp ; ret
0x00000000004039ca : add rsp, 0xe0 ; pop rbp ; ret
0x0000000000401735 : add rsp, 8 ; ret
0x0000000000413ea1 : and al, 0xffffffffffffffff ; jmp qword ptr [rdx]
0x00000000004078d5 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000402b6d : and al, byte ptr [rcx] ; jmp rcx
0x000000000040f8c0 : and bh, 1 ; movzx eax, dil ; pop rbp ; ret
0x0000000000403072 : and byte ptr [r15], cl ; xchg eax, esp ; ret 0x9588
0x000000000040944b : and byte ptr [rbx + 0x41], bl ; pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403073 : and byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x000000000040d41f : and dh, 1 ; movzx eax, sil ; pop rbp ; ret
0x000000000040f8bf : and dil, 1 ; movzx eax, dil ; pop rbp ; ret
0x0000000000401ca7 : and dword ptr [rax], eax ; add ebx, esi ; ret
0x0000000000401ca6 : and dword ptr [rax], r8d ; add ebx, esi ; ret
0x000000000040df25 : and eax, 0x4132d0 ; mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x0000000000403ecf : and eax, 0x616358 ; pop rbp ; ret
0x0000000000403ef3 : and eax, 0x616360 ; pop rbp ; ret
0x0000000000410eb9 : and eax, edx ; xor rdi, rdx ; or rax, rdi ; pop rbp ; ret
0x0000000000413e61 : and edi, edi ; jmp rdx
0x000000000041113e : and edx, eax ; mov al, dl ; movzx eax, al ; pop rbp ; ret
0x0000000000411018 : and edx, eax ; mov ax, dx ; movzx eax, ax ; pop rbp ; ret
0x0000000000410dc7 : and edx, eax ; or r9d, edx ; mov eax, r9d ; pop rbp ; ret
0x00000000004110d3 : and edx, ebx ; mov al, dl ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000041113d : and edx, r8d ; mov al, dl ; movzx eax, al ; pop rbp ; ret
0x000000000040d41e : and sil, 1 ; movzx eax, sil ; pop rbp ; ret
0x00000000004139f8 : call 0xffffffffc44138e3
0x0000000000405c89 : call 0xffffffffe902e5d9
0x0000000000405c88 : call 0xffffffffe902e5da
0x000000000040e411 : call 0xffffffffff7a6f62
0x000000000040e410 : call 0xffffffffff7a6f63
0x000000000040e54f : call 0xffffffffff7a70a0
0x000000000040e54e : call 0xffffffffff7a70a1
0x0000000000411719 : call qword ptr [r12 + rbx*8]
0x0000000000414463 : call qword ptr [rax]
0x0000000000413b5b : call qword ptr [rbx]
0x00000000004144c3 : call qword ptr [rcx]
0x000000000041472b : call qword ptr [rdx]
0x0000000000413bbb : call qword ptr [rsi]
0x000000000041171a : call qword ptr [rsp + rbx*8]
0x0000000000401ccd : call rax
0x00000000004059dc : call rbx
0x0000000000413dbb : call rdi
0x0000000000413a7b : call rsi
0x000000000040f7ba : clc ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041032a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x000000000040743f : clc ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004068e1 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040c904 : clc ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004091da : clc ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040f185 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040a6c2 : clc ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000406956 : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x000000000040f6b0 : clc ; add rsp, 0xc0 ; pop rbp ; ret
0x0000000000401c6f : clc ; jne 0x401c78 ; pop rbp ; ret
0x0000000000410faa : clc ; mov ax, r8w ; movzx eax, ax ; pop rbp ; ret
0x000000000040fa4a : clc ; mov byte ptr [rax + 0x1c], 0 ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000404725 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040f938 : clc ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x000000000040cb0e : clc ; mov dword ptr [rcx + 0x18], eax ; pop rbp ; ret
0x000000000040c5c6 : clc ; mov dword ptr [rcx + 0x2c], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d287 : clc ; mov dword ptr [rdi + 0x18], 0x95f616 ; pop rbp ; ret
0x000000000041165f : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040f6ee : clc ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040dd87 : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040d66b : clc ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040d68b : clc ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040d6ab : clc ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000410cdc : clc ; mov rax, r8 ; pop rbp ; ret
0x0000000000402867 : clc ; pop rbp ; ret
0x00000000004151c8 : clc ; ret 0xffff
0x0000000000408058 : cld ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000410b66 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040c652 : cld ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d08a : cld ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040972f : cld ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040efaa : cld ; add rsp, 0xc0 ; pop rbp ; ret
0x00000000004039c9 : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000041165c : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000410b63 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004105fb : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d087 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040805f : cld ; pop rbp ; ret
0x000000000040436c : cmp al, 0x25 ; ret
0x000000000040ddfa : cmp dword ptr [rax - 0x75], ecx ; jne 0x40dde4 ; call rax
0x00000000004109e9 : cmp dword ptr [rdx - 0x76be63d5], ebx ; ret
0x0000000000401c2d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401c40 ; pop rbp ; ret
0x000000000040837f : cmpsd dword ptr [rsi], dword ptr [rdi] ; cvttps2pi mm0, qword ptr [rcx - 0xe] ; jmp qword ptr [rcx]
0x0000000000408380 : cvttps2pi mm0, qword ptr [rcx - 0xe] ; jmp qword ptr [rcx]
0x00000000004089b5 : cwde ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000406a4c : cwde ; mov rcx, qword ptr [rax*8 + 0x412c18] ; jmp rcx
0x000000000040ad90 : cwde ; pop rdx ; adc dword ptr [rcx - 0xa], eax ; jmp qword ptr [rcx]
0x000000000040b06c : cwde ; sbb byte ptr [rcx - 0xe], al ; jmp qword ptr [rcx]
0x0000000000402b67 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; nop ; and al, byte ptr [rcx] ; jmp rcx
0x0000000000410064 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x00000000004053e2 : dec dword ptr [rcx - 0x77] ; ret 0x294d
0x00000000004137fb : dec dword ptr [rdx + rbx] ; add byte ptr [rax], al ; in al, dx ; ret
0x000000000040cdd0 : div dword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000040cdcf : div qword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000040ddf7 : enter -0x74b8, 0x39 ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x0000000000409e7e : enter 0x41ed, -0x77 ; ret 0x8141
0x0000000000405770 : enter 0x4b05, 0x34 ; fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x000000000040b4d5 : fadd dword ptr [rcx - 0xe] ; jmp qword ptr [rcx]
0x000000000040cf3c : fbld dword ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000040cf3d : fbld dword ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x0000000000405774 : fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x0000000000409322 : fild dword ptr [rdi + rcx + 0x44] ; ret 0x8941
0x0000000000401731 : fild dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000040776e : fild word ptr [rbp - 0x76ba39df] ; ret 0x8141
0x00000000004110d4 : fimul dword ptr [rax - 0x3f49f030] ; pop rbx ; pop rbp ; ret
0x000000000040d813 : fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x000000000040d814 : fmul dword ptr [rax - 0x77] ; ret 0x2948
0x000000000041171c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000401ee9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004027ff : hlt ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040f934 : hlt ; mov rcx, qword ptr [rbp - 8] ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x0000000000401c40 : hlt ; pop rbp ; mov edi, 0x6162e0 ; jmp rax
0x000000000040b282 : imul edx, dword ptr [rbx - 0xd7f], -1 ; jmp qword ptr [rcx]
0x0000000000413a39 : in al, -2 ; jmp rdx
0x000000000040811c : in al, dx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040cd9d : in al, dx ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000040cda0 : in al, dx ; pop rbp ; ret
0x0000000000413800 : in al, dx ; ret
0x0000000000402863 : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x000000000040933a : inc dword ptr [rcx - 0x77] ; ret
0x00000000004059fb : inc dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000407075 : int 0x80
0x0000000000409a6f : int 0x81
0x0000000000401c33 : ja 0x401c3a ; pop rbp ; ret
0x000000000040f6f1 : ja 0x40f73e ; pop rbp ; ret
0x00000000004002d6 : jbe 0x40027d ; xchg al, dh ; xchg eax, esi ; jl 0x400326 ; ret
0x0000000000401c3f : je 0x401c3d ; pop rbp ; mov edi, 0x6162e0 ; jmp rax
0x0000000000402866 : jge 0x402863 ; pop rbp ; ret
0x000000000040291f : jge 0x402977 ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040d66a : jge 0x40d66b ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040d68a : jge 0x40d68b ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040d6aa : jge 0x40d6ab ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000040da60 : jge 0x40da53 ; mov rcx, qword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040f030 : jge 0x40f023 ; mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040f6ed : jge 0x40f6ee ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x00000000004002db : jl 0x400321 ; ret
0x000000000040a8bf : jmp 0x372a47
0x000000000040194b : jmp 0x401747
0x000000000040e2b0 : jmp 0x49036c00
0x000000000040ed2e : jmp 0x4903767e
0x000000000040ed9b : jmp 0x490376eb
0x000000000040f52c : jmp 0x49037e7c
0x000000000040f599 : jmp 0x49037ee9
0x0000000000407548 : jmp 0xffffffffc2c9bd52
0x0000000000413fc3 : jmp qword ptr [rax]
0x0000000000403749 : jmp qword ptr [rcx]
0x0000000000414beb : jmp qword ptr [rdi]
0x0000000000413ea3 : jmp qword ptr [rdx]
0x0000000000401c47 : jmp rax
0x0000000000402275 : jmp rcx
0x0000000000401c87 : jmp rdx
0x0000000000413473 : jmp rsp
0x0000000000401c70 : jne 0x401c77 ; pop rbp ; ret
0x000000000040c949 : jne 0x40c92c ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x000000000040cdd1 : jne 0x40cdc9 ; mov rax, rdx ; pop rbp ; ret
0x000000000040cee2 : jne 0x40ceda ; mov rax, rdx ; pop rbp ; ret
0x000000000040dad6 : jne 0x40dac1 ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000040ddfd : jne 0x40dde1 ; call rax
0x0000000000404875 : jo 0x4048d6 ; ret
0x0000000000405e9f : jo 0x405f05 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406544 : jo 0x4065a5 ; ret
0x000000000040667e : jo 0x4066df ; ret
0x000000000040a6c6 : jo 0x40a727 ; ret
0x000000000040bb78 : jo 0x40bb04 ; stc ; add eax, 0xf000000 ; xchg eax, esp ; ret 0x9588
0x0000000000409fc5 : lahf ; sub ah, byte ptr [rcx] ; ret 0x8941
0x0000000000409fd1 : lahf ; sub al, byte ptr [rcx - 0x77] ; ret 0x8141
0x000000000040fffa : lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x000000000041435c : lodsb al, byte ptr [rsi] ; or dword ptr [rax], eax ; add al, dl ; xor edi, edi ; call rdi
0x00000000004137f8 : lodsb al, byte ptr [rsi] ; ret
0x0000000000407777 : loop 0x407738 ; loopne 0x407761 ; test dword ptr [rcx - 0x77], eax ; ret
0x0000000000409fce : loope 0x409fa8 ; mov edi, 0x89412a9f ; ret 0x8141
0x00000000004039cd : loopne 0x4039d4 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000407779 : loopne 0x40775f ; test dword ptr [rcx - 0x77], eax ; ret
0x0000000000407800 : loopne 0x407850 ; add esp, 0x20 ; pop rbp ; ret
0x00000000004077ff : loopne 0x407851 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000407ff7 : loopne 0x407ffe ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040ab70 : loopne 0x40ab77 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040dad7 : loopne 0x40db29 ; mov esi, eax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x0000000000410b00 : loopne 0x410b08 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040d9de : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040641b : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004062a8 : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x000000000040d64e : mov al, 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004078d2 : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040cf3b : mov al, byte ptr [rbp - 0x21] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040d8b7 : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000411176 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040f94c : mov al, byte ptr [rdi + 0x1c] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000411140 : mov al, dl ; movzx eax, al ; pop rbp ; ret
0x00000000004110d5 : mov al, dl ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000041101a : mov ax, dx ; movzx eax, ax ; pop rbp ; ret
0x0000000000410fab : mov ax, r8w ; movzx eax, ax ; pop rbp ; ret
0x0000000000410fb0 : mov bh, -0x40 ; pop rbp ; ret
0x0000000000414ea9 : mov bh, -1 ; jmp rax
0x0000000000403ef1 : mov byte ptr [0x616360], al ; pop rbp ; ret
0x000000000040fa4b : mov byte ptr [rax + 0x1c], 0 ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000401ca3 : mov byte ptr [rip + 0x21468e], 1 ; ret
0x000000000040f8c5 : mov dh, -0x39 ; pop rbp ; ret
0x000000000040d424 : mov dh, -0x3a ; pop rbp ; ret
0x00000000004092c1 : mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040d3a4 : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000408b26 : mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040c37f : mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000402ae8 : mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004078d8 : mov dh, -0x40 ; pop rbp ; ret
0x00000000004110d8 : mov dh, -0x40 ; pop rbx ; pop rbp ; ret
0x0000000000403ecd : mov dword ptr [0x616358], edi ; pop rbp ; ret
0x0000000000404726 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004046e8 : mov dword ptr [rax], eax ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004045a4 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004046e7 : mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040cd9b : mov dword ptr [rbp - 0x14], eax ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000401fc9 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040d9dc : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401ee7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041165d : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040dd85 : mov dword ptr [rbp - 8], eax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402865 : mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x000000000040f939 : mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x000000000040cb0f : mov dword ptr [rcx + 0x18], eax ; pop rbp ; ret
0x000000000040c5c7 : mov dword ptr [rcx + 0x2c], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040479e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040c1c1 : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040df2a : mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x000000000040d288 : mov dword ptr [rdi + 0x18], 0x95f616 ; pop rbp ; ret
0x0000000000402857 : mov dword ptr [rdi + 0x20], 0 ; pop rbp ; ret
0x000000000040f6f0 : mov dword ptr [rdi + 0x48], esi ; pop rbp ; ret
0x0000000000403070 : mov eax, 0xf20413b ; xchg eax, esp ; ret 0x9588
0x0000000000404558 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040735b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404143 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040ca68 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x0000000000404555 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040409f : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040811a : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040cd9e : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000407653 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403eb5 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040459e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000404340 : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004077fe : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040dadc : mov eax, dword ptr [rbp - 0x20] ; call rax
0x000000000040f28f : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040c94f : mov eax, dword ptr [rbp - 0x28] ; call rax
0x00000000004046ea : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040486f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000406419 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040fb09 : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004027fd : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000410b64 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040c650 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d088 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040972d : mov eax, dword ptr [rbp - 4] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040805d : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040f7b8 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040743d : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004068df : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040c902 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004091d8 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040f183 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040a6c0 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040dd89 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040d66d : mov eax, dword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040d68d : mov eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040d6ad : mov eax, dword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000410fad : mov eax, eax ; movzx eax, ax ; pop rbp ; ret
0x0000000000410cde : mov eax, eax ; pop rbp ; ret
0x0000000000408a37 : mov eax, ecx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000410dcd : mov eax, ecx ; pop rbp ; ret
0x000000000040e111 : mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041101b : mov eax, edx ; movzx eax, ax ; pop rbp ; ret
0x000000000040cdd4 : mov eax, edx ; pop rbp ; ret
0x0000000000410fac : mov eax, r8d ; movzx eax, ax ; pop rbp ; ret
0x0000000000410dcc : mov eax, r9d ; pop rbp ; ret
0x0000000000401ccb : mov ebp, esp ; call rax
0x0000000000401c31 : mov ebp, esp ; ja 0x401c3c ; pop rbp ; ret
0x0000000000402862 : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000040708d : mov ecx, 0x5b2a830a ; ret
0x000000000040226e : mov ecx, dword ptr [rax*8 + 0x4117e0] ; jmp rcx
0x0000000000402b69 : mov ecx, dword ptr [rax*8 + 0x412290] ; jmp rcx
0x00000000004032ee : mov ecx, dword ptr [rax*8 + 0x4122e0] ; jmp rcx
0x0000000000404932 : mov ecx, dword ptr [rax*8 + 0x412710] ; jmp rcx
0x0000000000404c56 : mov ecx, dword ptr [rax*8 + 0x412758] ; jmp rcx
0x0000000000406a4e : mov ecx, dword ptr [rax*8 + 0x412c18] ; jmp rcx
0x0000000000407d8e : mov ecx, dword ptr [rax*8 + 0x413008] ; jmp rcx
0x0000000000407d0e : mov ecx, dword ptr [rax*8 + 0x413068] ; jmp rcx
0x000000000040caa4 : mov ecx, dword ptr [rax*8 + 0x413150] ; jmp rcx
0x00000000004045a1 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040e472 : mov ecx, dword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040e40f : mov ecx, dword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040da63 : mov ecx, dword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040f033 : mov ecx, dword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040f936 : mov ecx, dword ptr [rbp - 8] ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x000000000040cb0c : mov ecx, dword ptr [rbp - 8] ; mov dword ptr [rcx + 0x18], eax ; pop rbp ; ret
0x000000000040f100 : mov ecx, dword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x00000000004137f1 : mov edi, 0x19ecffff ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret
0x0000000000401cc5 : mov edi, 0x615e20 ; mov rbp, rsp ; call rax
0x0000000000401c42 : mov edi, 0x6162e0 ; jmp rax
0x0000000000401c82 : mov edi, 0x6162e0 ; jmp rdx
0x0000000000409fd0 : mov edi, 0x89412a9f ; ret 0x8141
0x0000000000414989 : mov edi, dr1 ; call qword ptr [rdx]
0x000000000040f6ec : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040d669 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040d689 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040d6a9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000040e413 : mov edi, dword ptr [rcx] ; call rax
0x000000000040ddf9 : mov edi, dword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x0000000000411717 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000414909 : mov edi, edi ; jmp qword ptr [rcx]
0x0000000000411716 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000401ca5 : mov es, word ptr [rsi + 0x21] ; add byte ptr [rcx], al ; ret
0x000000000040ddfc : mov esi, dword ptr [rbp - 0x20] ; call rax
0x000000000040da67 : mov esi, dword ptr [rcx] ; call rax
0x0000000000401c80 : mov esi, eax ; mov edi, 0x6162e0 ; jmp rdx
0x000000000040dad9 : mov esi, eax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000040c94c : mov esi, eax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x0000000000403ecc : mov qword ptr [0x616358], rdi ; pop rbp ; ret
0x000000000040dd84 : mov qword ptr [rbp - 8], rax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402864 : mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000040479d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040c1c0 : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402856 : mov qword ptr [rdi + 0x20], 0 ; pop rbp ; ret
0x000000000040f6ef : mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040d9dd : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040641a : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040735a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404142 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404554 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040409e : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000407652 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403eb4 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040433f : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004077fd : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040dadb : mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000040f28e : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040c94e : mov rax, qword ptr [rbp - 0x28] ; call rax
0x000000000040486e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000406418 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040f7b7 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040743c : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004068de : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040c901 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004091d7 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040f182 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040a6bf : mov rax, qword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040dd88 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040d66c : mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040d68c : mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040d6ac : mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000410cdd : mov rax, r8 ; pop rbp ; ret
0x0000000000408a36 : mov rax, rcx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040e110 : mov rax, rdx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040cdd3 : mov rax, rdx ; pop rbp ; ret
0x0000000000401cca : mov rbp, rsp ; call rax
0x0000000000401c30 : mov rbp, rsp ; ja 0x401c3d ; pop rbp ; ret
0x0000000000402861 : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000040226d : mov rcx, qword ptr [rax*8 + 0x4117e0] ; jmp rcx
0x0000000000402b68 : mov rcx, qword ptr [rax*8 + 0x412290] ; jmp rcx
0x00000000004032ed : mov rcx, qword ptr [rax*8 + 0x4122e0] ; jmp rcx
0x0000000000404931 : mov rcx, qword ptr [rax*8 + 0x412710] ; jmp rcx
0x0000000000404c55 : mov rcx, qword ptr [rax*8 + 0x412758] ; jmp rcx
0x0000000000406a4d : mov rcx, qword ptr [rax*8 + 0x412c18] ; jmp rcx
0x0000000000407d8d : mov rcx, qword ptr [rax*8 + 0x413008] ; jmp rcx
0x0000000000407d0d : mov rcx, qword ptr [rax*8 + 0x413068] ; jmp rcx
0x000000000040caa3 : mov rcx, qword ptr [rax*8 + 0x413150] ; jmp rcx
0x000000000040e471 : mov rcx, qword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040e40e : mov rcx, qword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040da62 : mov rcx, qword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040f032 : mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040f935 : mov rcx, qword ptr [rbp - 8] ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x000000000040cb0b : mov rcx, qword ptr [rbp - 8] ; mov dword ptr [rcx + 0x18], eax ; pop rbp ; ret
0x000000000040f0ff : mov rcx, qword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040f6eb : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040d668 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040d688 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040d6a8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000040e412 : mov rdi, qword ptr [rcx] ; call rax
0x000000000040ddf8 : mov rdi, qword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x000000000040ddfb : mov rsi, qword ptr [rbp - 0x20] ; call rax
0x000000000040da66 : mov rsi, qword ptr [rcx] ; call rax
0x0000000000401c7f : mov rsi, rax ; mov edi, 0x6162e0 ; jmp rdx
0x000000000040dad8 : mov rsi, rax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000040c94b : mov rsi, rax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x00000000004137f0 : mov word ptr [rdi + 0x19ecffff], dr1 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret
0x00000000004080f0 : movabs dword ptr [0x941c90941f0213f], eax ; ret 0x3145
0x000000000040b971 : movabs dword ptr [0xfffffff281f4f275], eax ; jmp qword ptr [rcx]
0x0000000000409c9d : movabs eax, dword ptr [0x21fffffffff281ee] ; ret 0xfa81
0x00000000004092c0 : movzx eax, al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040d3a3 : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000408b25 : movzx eax, al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040c37e : movzx eax, al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000402ae7 : movzx eax, al ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004078d7 : movzx eax, al ; pop rbp ; ret
0x00000000004110d7 : movzx eax, al ; pop rbx ; pop rbp ; ret
0x0000000000410faf : movzx eax, ax ; pop rbp ; ret
0x000000000040f8c4 : movzx eax, bh ; pop rbp ; ret
0x000000000040d423 : movzx eax, dh ; pop rbp ; ret
0x000000000040f8c3 : movzx eax, dil ; pop rbp ; ret
0x000000000040d422 : movzx eax, sil ; pop rbp ; ret
0x0000000000408fc5 : movzx eax, word ptr [rbp - 2] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040b68a : mul dword ptr [rbp + 0x21] ; ret 0x8941
0x0000000000402b6c : nop ; and al, byte ptr [rcx] ; jmp rcx
0x0000000000411738 : nop dword ptr [rax + rax] ; ret
0x0000000000404fbd : or al, 0x18 ; ret 0x6451
0x00000000004137fc : or al, 0x1a ; add byte ptr [rax], al ; in al, dx ; ret
0x00000000004144bc : or al, 0xb ; add byte ptr [rax], al ; adc byte ptr [rbx - 1], cl ; call qword ptr [rcx]
0x0000000000402b6a : or al, 0xffffffffffffffc5 ; nop ; and al, byte ptr [rcx] ; jmp rcx
0x000000000040caa5 : or al, 0xffffffffffffffc5 ; push rax ; xor dword ptr [rcx], eax ; jmp rcx
0x0000000000413db9 : or bh, bh ; call rdi
0x00000000004083cb : or byte ptr [rax], al ; add byte ptr [rbp - 0x77], al ; ret 0x3145
0x000000000040befb : or byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000041435d : or dword ptr [rax], eax ; add al, dl ; xor edi, edi ; call rdi
0x000000000040932e : or dword ptr [rcx], eax ; add byte ptr [rbp - 0x77], al ; ret 0x8141
0x0000000000406601 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000410cdb : or eax, edi ; mov rax, r8 ; pop rbp ; ret
0x0000000000410ebf : or eax, edi ; pop rbp ; ret
0x0000000000410dca : or ecx, edx ; mov eax, r9d ; pop rbp ; ret
0x0000000000410cda : or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x0000000000410dc9 : or r9d, edx ; mov eax, r9d ; pop rbp ; ret
0x0000000000410ebe : or rax, rdi ; pop rbp ; ret
0x000000000040d420 : out 1, al ; movzx eax, sil ; pop rbp ; ret
0x000000000040f8c1 : out 1, eax ; movzx eax, dil ; pop rbp ; ret
0x0000000000408d3a : out dx, al ; rol byte ptr [rcx - 0xe], 1 ; jmp qword ptr [rcx]
0x00000000004078d4 : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040d969 : outsb dx, byte ptr [rsi] ; ret 0x280f
0x000000000041172c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405ea1 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041172e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405ea3 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000411730 : pop r14 ; pop r15 ; ret
0x0000000000405c53 : pop r14 ; pop rbp ; ret
0x0000000000405ea5 : pop r15 ; pop rbp ; ret
0x0000000000411732 : pop r15 ; ret
0x00000000004151e8 : pop rax ; ret
0x0000000000401ca2 : pop rbp ; mov byte ptr [rip + 0x21468e], 1 ; ret
0x0000000000401c41 : pop rbp ; mov edi, 0x6162e0 ; jmp rax
0x0000000000401c7e : pop rbp ; mov rsi, rax ; mov edi, 0x6162e0 ; jmp rdx
0x000000000041172b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041172f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401c35 : pop rbp ; ret
0x0000000000405ea0 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406f0d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405c52 : pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004089b9 : pop rbx ; pop rbp ; ret
0x0000000000407091 : pop rbx ; ret
0x0000000000405ea6 : pop rdi ; pop rbp ; ret
0x0000000000411733 : pop rdi ; ret
0x000000000040ad91 : pop rdx ; adc dword ptr [rcx - 0xa], eax ; jmp qword ptr [rcx]
0x000000000040837e : pop rdx ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cvttps2pi mm0, qword ptr [rcx - 0xe] ; jmp qword ptr [rcx]
0x0000000000405ea4 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000411731 : pop rsi ; pop r15 ; ret
0x0000000000405c54 : pop rsi ; pop rbp ; ret
0x000000000041172d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405ea2 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040d980 : pop rsp ; ret 0xf66
0x00000000004002d5 : push rax ; jbe 0x40027e ; xchg al, dh ; xchg eax, esi ; jl 0x400327 ; ret
0x000000000040639e : push rax ; pop rbp ; ret
0x000000000040caa7 : push rax ; xor dword ptr [rcx], eax ; jmp rcx
0x0000000000401cc4 : push rbp ; mov edi, 0x615e20 ; mov rbp, rsp ; call rax
0x0000000000402860 : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000040a0ab : push rbp ; ror byte ptr [rax - 0x75], 1 ; ror byte ptr [r8 - 0x77], 1 ; ret 0x8148
0x0000000000413470 : pushfq ; xor bh, bh ; jmp rsp
0x00000000004002dd : ret
0x000000000040a55c : ret 0
0x000000000040abda : ret 0x134
0x000000000040cb96 : ret 0x148
0x000000000040603e : ret 0x1b2
0x0000000000401b52 : ret 0x2146
0x0000000000401952 : ret 0x2147
0x0000000000401742 : ret 0x2148
0x000000000040d5e5 : ret 0x26a8
0x000000000040d96a : ret 0x280f
0x0000000000404125 : ret 0x2948
0x00000000004053c9 : ret 0x294c
0x00000000004053e5 : ret 0x294d
0x0000000000403570 : ret 0x3040
0x00000000004080f9 : ret 0x3145
0x000000000040f993 : ret 0x3693
0x0000000000408fea : ret 0x3948
0x00000000004053fd : ret 0x4de8
0x000000000040cf37 : ret 0x5588
0x0000000000404624 : ret 0x5589
0x000000000040c05f : ret 0x60
0x0000000000404fbf : ret 0x6451
0x0000000000407774 : ret 0x8141
0x000000000040754c : ret 0x8148
0x000000000040aaff : ret 0x8341
0x000000000040e2b3 : ret 0x8348
0x00000000004034c8 : ret 0x840
0x0000000000408eae : ret 0x8445
0x0000000000405663 : ret 0x8840
0x0000000000406a09 : ret 0x8844
0x0000000000402689 : ret 0x8941
0x000000000040c9da : ret 0x8944
0x0000000000407560 : ret 0x8948
0x00000000004053e8 : ret 0x8949
0x0000000000411019 : ret 0x8966
0x000000000040557c : ret 0x89a5
0x00000000004026e3 : ret 0x8b44
0x00000000004053cc : ret 0x8b48
0x0000000000410a0f : ret 0x941
0x000000000040c9bd : ret 0x945
0x0000000000403076 : ret 0x9588
0x00000000004023b4 : ret 0xb0
0x0000000000410239 : ret 0xb849
0x000000000040e336 : ret 0xb948
0x000000000040841b : ret 0xc121
0x0000000000407f59 : ret 0xc131
0x0000000000401c65 : ret 0xc148
0x0000000000408433 : ret 0xc221
0x000000000040ffa0 : ret 0xc2f6
0x0000000000404de4 : ret 0xca21
0x0000000000408092 : ret 0xca29
0x000000000041113f : ret 0xd088
0x0000000000403960 : ret 0xd284
0x000000000040ab06 : ret 0xd4e8
0x00000000004023fe : ret 0xd701
0x0000000000407fd5 : ret 0xd709
0x00000000004032cf : ret 0xe883
0x000000000040fae3 : ret 0xea81
0x0000000000405c8c : ret 0xee8
0x000000000040f98f : ret 0xee81
0x000000000040977b : ret 0xf01
0x0000000000405678 : ret 0xf180
0x00000000004034ac : ret 0xf280
0x0000000000404e5e : ret 0xf281
0x000000000040d981 : ret 0xf66
0x0000000000411014 : ret 0xfa31
0x000000000040374b : ret 0xfa81
0x000000000040ed40 : ret 0xff3
0x0000000000415169 : ret 0xffff
0x0000000000406044 : ret 1
0x0000000000410000 : ret 2
0x0000000000409114 : ret 8
0x0000000000403d80 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004110c3 : rol byte ptr [rbp + 9], 1 ; ret
0x00000000004046e6 : rol byte ptr [rcx + rcx*4], 1 ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040fa29 : rol byte ptr [rcx - 0x77], 1 ; ret
0x0000000000408d3b : rol byte ptr [rcx - 0xe], 1 ; jmp qword ptr [rcx]
0x0000000000414460 : rol byte ptr [rsi - 1], 1 ; call qword ptr [rax]
0x0000000000410dcb : rol dword ptr [rcx + rcx*4 - 0x38], 1 ; pop rbp ; ret
0x0000000000403743 : rol dword ptr [rcx - 0xe], 1 ; jmp qword ptr [rcx]
0x000000000040a714 : rol dword ptr [rcx - 0xf], cl ; jmp qword ptr [rcx]
0x0000000000407070 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000040a0af : ror byte ptr [r8 - 0x77], 1 ; ret 0x8148
0x0000000000404870 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x4048db ; ret
0x0000000000410eba : ror byte ptr [rax + 0x31], 1 ; xlatb ; or rax, rdi ; pop rbp ; ret
0x0000000000401c6c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401c7b ; pop rbp ; ret
0x000000000040a0ac : ror byte ptr [rax - 0x75], 1 ; ror byte ptr [r8 - 0x77], 1 ; ret 0x8148
0x0000000000407071 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x00000000004053bd : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x00000000004053c6 : ror byte ptr [rax - 0x77], 1 ; ret 0x294c
0x000000000040a0b0 : ror byte ptr [rax - 0x77], 1 ; ret 0x8148
0x0000000000404871 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x4048da ; ret
0x000000000040c380 : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x000000000041101c : ror byte ptr [rdi], 1 ; mov bh, -0x40 ; pop rbp ; ret
0x0000000000411141 : ror byte ptr [rdi], 1 ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004110d6 : ror byte ptr [rdi], 1 ; mov dh, -0x40 ; pop rbx ; pop rbp ; ret
0x0000000000408a35 : ror dword ptr [rax - 0x77], -0x38 ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b5e4 : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x000000000040cd9a : ror dword ptr [rcx + 0x458bec45], -0x14 ; pop rbp ; ret
0x00000000004002d7 : sahf ; xchg al, dh ; xchg eax, esi ; jl 0x400325 ; ret
0x000000000040bf43 : sar byte ptr [rdi], cl ; test dword ptr [rcx - 0xe], eax ; jmp qword ptr [rcx]
0x00000000004032cc : sar dh, -0x77 ; ret 0xe883
0x0000000000409fcf : sar dword ptr [rdi - 0x76bed561], 1 ; ret 0x8141
0x0000000000401c6e : sar eax, 1 ; jne 0x401c79 ; pop rbp ; ret
0x0000000000401c6d : sar rax, 1 ; jne 0x401c7a ; pop rbp ; ret
0x00000000004151c0 : sbb al, 0 ; add byte ptr [rax], al ; adc al, 0x18 ; add byte ptr [rax], al ; clc ; ret 0xffff
0x00000000004151e0 : sbb al, 0 ; add byte ptr [rax], al ; xor al, 0x18 ; add byte ptr [rax], al ; pop rax ; ret
0x000000000040fa4d : sbb al, 0 ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000040f94e : sbb al, 0x24 ; add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004137fd : sbb al, byte ptr [rax] ; add ah, ch ; ret
0x00000000004151c5 : sbb byte ptr [rax], al ; add al, bh ; ret 0xffff
0x0000000000415225 : sbb byte ptr [rax], al ; add al, ch ; ret
0x000000000040b06d : sbb byte ptr [rcx - 0xe], al ; jmp qword ptr [rcx]
0x000000000040ce0a : sete al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040ce0c : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000040a4a9 : shl byte ptr [rip - 0xd7f], -1 ; jmp qword ptr [rcx]
0x000000000040d99f : shl dword ptr [rsi + 0xf], 0x5c ; ret 0xf66
0x000000000040bb7a : stc ; add eax, 0xf000000 ; xchg eax, esp ; ret 0x9588
0x0000000000411178 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000409fc6 : sub ah, byte ptr [rcx] ; ret 0x8941
0x000000000040c5c9 : sub al, 0x48 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000409e7c : sub al, 0x7d ; enter 0x41ed, -0x77 ; ret 0x8141
0x0000000000409fd2 : sub al, byte ptr [rcx - 0x77] ; ret 0x8141
0x000000000040708f : sub dword ptr [rdx], 0x5b ; ret
0x00000000004117b9 : sub esp, 8 ; add rsp, 8 ; ret
0x00000000004117b8 : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000408c8e : test al, 0 ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041173a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000402fe3 : test dword ptr [rax - 0x17000002], edx ; ret
0x000000000040777b : test dword ptr [rcx - 0x77], eax ; ret
0x000000000040bf45 : test dword ptr [rcx - 0xe], eax ; jmp qword ptr [rcx]
0x00000000004084cd : test dword ptr [rip - 0x17000000], eax ; ret
0x00000000004002d8 : xchg al, dh ; xchg eax, esi ; jl 0x400324 ; ret
0x00000000004083e0 : xchg eax, ebp ; ret
0x0000000000408ead : xchg eax, ebp ; ret 0x8445
0x0000000000405662 : xchg eax, ebp ; ret 0x8840
0x00000000004002da : xchg eax, esi ; jl 0x400322 ; ret
0x000000000040cf36 : xchg eax, esp ; ret 0x5588
0x0000000000403075 : xchg eax, esp ; ret 0x9588
0x000000000040395f : xchg eax, esp ; ret 0xd284
0x000000000040ce0b : xchg eax, esp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000410cd9 : xlatb ; or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x0000000000410ebd : xlatb ; or rax, rdi ; pop rbp ; ret
0x00000000004151e4 : xor al, 0x18 ; add byte ptr [rax], al ; pop rax ; ret
0x00000000004134f1 : xor al, 0xffffffffffffffff ; jmp rsp
0x000000000040df27 : xor al, byte ptr [rcx] ; mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x0000000000413471 : xor bh, bh ; jmp rsp
0x00000000004097f0 : xor bl, byte ptr [rcx + rax*4 - 0xf] ; jmp qword ptr [rcx]
0x000000000041032e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000407d12 : xor byte ptr [rcx], al ; jmp rcx
0x000000000040caa8 : xor dword ptr [rcx], eax ; jmp rcx
0x0000000000406397 : xor eax, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x00000000004046e5 : xor eax, edx ; mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000414361 : xor edi, edi ; call rdi
0x0000000000410cd8 : xor edi, edx ; or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x0000000000410ebc : xor edi, edx ; or rax, rdi ; pop rbp ; ret
0x0000000000410ebb : xor rdi, rdx ; or rax, rdi ; pop rbp ; ret
