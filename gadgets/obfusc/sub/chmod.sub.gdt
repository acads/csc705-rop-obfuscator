0x000000000040fc38 : adc al, -0x75 ; hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403310 : adc al, 0x25 ; ret
0x00000000004144b4 : adc al, 0xf ; add byte ptr [rax], al ; call 0x22414452
0x000000000040bc2c : adc al, byte ptr [rcx + 0x4f9] ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x00000000004131ad : adc byte ptr [rax], al ; add byte ptr [rsp + rbx*2 - 1], bl ; call rsp
0x000000000040366a : adc byte ptr [rcx - 0xa], al ; jmp qword ptr [rcx]
0x0000000000402ece : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040aec2 : adc dword ptr [rcx - 0xa], eax ; jmp qword ptr [rcx]
0x0000000000406939 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000414955 : adc eax, dword ptr [rax] ; add byte ptr [rax], bl ; mov cl, -1 ; call qword ptr [rsi]
0x00000000004139c5 : add al, 0 ; add byte ptr [rax], bh ; sbb bh, bh ; call rdi
0x000000000040dc3a : add al, 0x48 ; add eax, ecx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000414af7 : add al, bl ; ret 0xffff
0x0000000000413805 : add al, byte ptr [rax] ; add al, ch ; add bh, bh ; call rcx
0x00000000004038a6 : add al, byte ptr [rax] ; add byte ptr [rcx + 0x21ca31c2], cl ; ret 0xfa81
0x0000000000413804 : add al, byte ptr fs:[rax] ; add al, ch ; add bh, bh ; call rcx
0x0000000000413807 : add al, ch ; add bh, bh ; call rcx
0x00000000004144b7 : add al, ch ; mov dr1, edi ; jmp qword ptr [rcx]
0x0000000000413aaf : add al, dl ; xor edi, edi ; jmp qword ptr [rdx]
0x0000000000413809 : add bh, bh ; call rcx
0x000000000041186f : add bl, dh ; ret
0x000000000040d3fc : add byte ptr [r8 - 0x73], cl ; xor al, 0x25 ; ret
0x000000000040d474 : add byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000040a168 : add byte ptr [rax + 1], cl ; ret 0x8b48
0x0000000000402156 : add byte ptr [rax - 0x47], cl ; sub ah, byte ptr [rcx - 0x73] ; ret 0x3a8f
0x0000000000401f00 : add byte ptr [rax - 0x48], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bl ; jmp qword ptr [rax]
0x000000000040330d : add byte ptr [rax - 0x73], cl ; adc al, 0x25 ; ret
0x000000000040d3fd : add byte ptr [rax - 0x73], cl ; xor al, 0x25 ; ret
0x000000000040df4f : add byte ptr [rax - 0x75], cl ; fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x00000000004079ed : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x00000000004144b2 : add byte ptr [rax], al ; adc al, 0xf ; add byte ptr [rax], al ; call 0x22414454
0x0000000000413802 : add byte ptr [rax], al ; add al, byte ptr fs:[rax] ; add al, ch ; add bh, bh ; call rcx
0x000000000041186d : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040d472 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000040a166 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8b48
0x0000000000402154 : add byte ptr [rax], al ; add byte ptr [rax - 0x47], cl ; sub ah, byte ptr [rcx - 0x73] ; ret 0x3a8f
0x000000000040330b : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; adc al, 0x25 ; ret
0x000000000040df4d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x000000000041186b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000401f03 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bl ; jmp qword ptr [rax]
0x0000000000403bb7 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040e5ed : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040a962 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041186c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000401f05 : add byte ptr [rax], al ; add byte ptr [rax], bl ; jmp qword ptr [rax]
0x0000000000414b11 : add byte ptr [rax], al ; add byte ptr [rbp + rdx], dh ; add byte ptr [rax], cl ; ret
0x0000000000414af1 : add byte ptr [rax], al ; add byte ptr [rbp + rdx], dl ; add al, bl ; ret 0xffff
0x00000000004047fb : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], al ; ret 0x3145
0x0000000000408ae6 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000402650 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7238b], cl ; ret 0xb0
0x00000000004026f0 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7278b], cl ; ret 0xb0
0x00000000004047e3 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x0000000000408fd8 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000403700 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret
0x0000000000403878 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0x3141
0x0000000000403c9e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0x5588
0x0000000000404179 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0x9588
0x000000000040944b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000405fde : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000403dd7 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x00000000004044fe : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x000000000040724e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004085ff : add byte ptr [rax], al ; add cl, ch ; ret
0x000000000041012c : add byte ptr [rax], al ; add cl, ch ; ret 2
0x00000000004021cf : add byte ptr [rax], al ; add dh, al ; salc ; add cl, ch ; ret 0
0x0000000000403bb9 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406610 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040a964 : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040159b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004144b6 : add byte ptr [rax], al ; call 0x22414450
0x0000000000413806 : add byte ptr [rax], al ; call 0xffffffffd2413714
0x0000000000414a56 : add byte ptr [rax], al ; call 0xffffffffe1414a1e
0x00000000004016d9 : add byte ptr [rax], al ; jmp 0x4015b9
0x00000000004133c6 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret
0x0000000000414a52 : add byte ptr [rax], al ; mov ah, 0x14 ; add byte ptr [rax], al ; call 0xffffffffe1414a22
0x0000000000404ed2 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000041316e : add byte ptr [rax], al ; mov word ptr [rax - 1], ss ; call rsp
0x0000000000402ed0 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040788b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004065d0 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000408ae7 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000041186e : add byte ptr [rax], al ; ret
0x0000000000413cee : add byte ptr [rax], al ; xor al, 0xffffffff ; jmp qword ptr [rdx]
0x0000000000414b37 : add byte ptr [rax], bh ; ret
0x00000000004139c7 : add byte ptr [rax], bh ; sbb bh, bh ; call rdi
0x0000000000401f07 : add byte ptr [rax], bl ; jmp qword ptr [rax]
0x0000000000414957 : add byte ptr [rax], bl ; mov cl, -1 ; call qword ptr [rsi]
0x0000000000414ad7 : add byte ptr [rax], bl ; ret 0xffff
0x0000000000414b17 : add byte ptr [rax], cl ; ret
0x0000000000413bcf : add byte ptr [rax], dh ; xor edi, edi ; jmp qword ptr [rax]
0x0000000000414b13 : add byte ptr [rbp + rdx], dh ; add byte ptr [rax], cl ; ret
0x0000000000414af3 : add byte ptr [rbp + rdx], dl ; add al, bl ; ret 0xffff
0x00000000004047fd : add byte ptr [rbp - 0x77], al ; ret 0x3145
0x0000000000409460 : add byte ptr [rbp - 0x77], al ; ret 0x8141
0x000000000040788c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004065d1 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000408ae8 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000402652 : add byte ptr [rbx - 0x76b7238b], cl ; ret 0xb0
0x00000000004026f2 : add byte ptr [rbx - 0x76b7278b], cl ; ret 0xb0
0x00000000004038a8 : add byte ptr [rcx + 0x21ca31c2], cl ; ret 0xfa81
0x00000000004047e5 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x0000000000408fda : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000403702 : add byte ptr [rcx - 0x77], al ; ret
0x000000000040387a : add byte ptr [rcx - 0x77], al ; ret 0x3141
0x00000000004047c0 : add byte ptr [rcx - 0x77], al ; ret 0x8141
0x000000000041170c : add byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x0000000000401aa8 : add byte ptr [rcx], al ; ret
0x00000000004144b3 : add byte ptr [rdi + rcx], dl ; add byte ptr [rax], al ; call 0x22414453
0x0000000000410128 : add byte ptr [rdi], cl ; lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000403ca0 : add byte ptr [rdi], cl ; pushfq ; ret 0x5588
0x000000000040417b : add byte ptr [rdi], cl ; pushfq ; ret 0x9588
0x000000000040944d : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000405fe0 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000403dd9 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x0000000000404500 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x0000000000407250 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000413803 : add byte ptr [rdx + rax], ah ; add al, ch ; add bh, bh ; call rcx
0x000000000040daad : add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x00000000004131af : add byte ptr [rsp + rbx*2 - 1], bl ; call rsp
0x0000000000408601 : add cl, ch ; ret
0x00000000004021d5 : add cl, ch ; ret 0
0x000000000041012e : add cl, ch ; ret 2
0x00000000004021d1 : add dh, al ; salc ; add cl, ch ; ret 0
0x000000000040f9f2 : add dword ptr [rax + 0xf], eax ; mov dh, -0x39 ; pop rbp ; ret
0x000000000040d551 : add dword ptr [rax + 0xf], eax ; mov dh, -0x3a ; pop rbp ; ret
0x0000000000407ec9 : add dword ptr [rax - 0x77], ecx ; ret 0x8148
0x00000000004068ff : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040788a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004065cf : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040c02c : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004047be : add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], al ; ret 0x8141
0x00000000004098a2 : add dword ptr [rax], ecx ; ret 0x840
0x000000000040fabb : add dword ptr [rdi + rcx - 0x4a], eax ; ret 0xee81
0x00000000004093ef : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040d4d2 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402708 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040c4ad : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000408256 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004085fb : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret
0x000000000040d064 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x5588
0x0000000000401aa4 : add eax, 0x21486e ; add ebx, esi ; ret
0x00000000004085fe : add eax, 0xe9000000 ; ret
0x000000000041012b : add eax, 0xe9000000 ; ret 2
0x000000000040bcab : add eax, 0xf000000 ; xchg eax, esp ; ret 0x9588
0x000000000040dc3c : add eax, ecx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401a6b : add eax, edx ; sar rax, 1 ; jne 0x401a7c ; pop rbp ; ret
0x0000000000401aa9 : add ebx, esi ; ret
0x0000000000413829 : add edi, edi ; call rcx
0x0000000000401c8b : add esp, 0x10 ; pop rbp ; ret
0x000000000040c029 : add esp, 0x108 ; pop rbx ; pop rbp ; ret
0x0000000000402ecc : add esp, 0x110 ; pop rbp ; ret
0x000000000041045c : add esp, 0x130 ; pop rbp ; ret
0x0000000000407bbc : add esp, 0x1a0 ; pop rbp ; ret
0x000000000040d77c : add esp, 0x1b0 ; pop rbp ; ret
0x0000000000410c2e : add esp, 0x1e0 ; pop rbp ; ret
0x00000000004034d7 : add esp, 0x20 ; pop rbp ; ret
0x0000000000401d6d : add esp, 0x30 ; pop rbp ; ret
0x0000000000409861 : add esp, 0x40 ; pop rbp ; ret
0x000000000040cb9c : add esp, 0x48 ; pop rbx ; pop rbp ; ret
0x0000000000406d1c : add esp, 0x50 ; pop rbp ; ret
0x000000000040f2b7 : add esp, 0x60 ; pop rbp ; ret
0x00000000004051f3 : add esp, 0x70 ; pop rbp ; ret
0x000000000040e9a3 : add esp, 0x80 ; pop rbp ; ret
0x0000000000403243 : add esp, 0x90 ; pop rbp ; ret
0x0000000000408ae3 : add esp, 0x98 ; pop rbx ; pop rbp ; ret
0x0000000000404680 : add esp, 0xa0 ; pop rbp ; ret
0x0000000000403020 : add esp, 0xc0 ; pop rbp ; ret
0x0000000000404599 : add esp, 0xe0 ; pop rbp ; ret
0x000000000040159e : add esp, 8 ; ret
0x000000000040dc3b : add rax, rcx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401a6a : add rax, rdx ; sar rax, 1 ; jne 0x401a7d ; pop rbp ; ret
0x0000000000401c8a : add rsp, 0x10 ; pop rbp ; ret
0x000000000040c028 : add rsp, 0x108 ; pop rbx ; pop rbp ; ret
0x0000000000402ecb : add rsp, 0x110 ; pop rbp ; ret
0x000000000041045b : add rsp, 0x130 ; pop rbp ; ret
0x0000000000407bbb : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000040d77b : add rsp, 0x1b0 ; pop rbp ; ret
0x0000000000410c2d : add rsp, 0x1e0 ; pop rbp ; ret
0x00000000004034d6 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000401d6c : add rsp, 0x30 ; pop rbp ; ret
0x0000000000409860 : add rsp, 0x40 ; pop rbp ; ret
0x000000000040cb9b : add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x0000000000406d1b : add rsp, 0x50 ; pop rbp ; ret
0x000000000040f2b6 : add rsp, 0x60 ; pop rbp ; ret
0x00000000004051f2 : add rsp, 0x70 ; pop rbp ; ret
0x000000000040e9a2 : add rsp, 0x80 ; pop rbp ; ret
0x0000000000403242 : add rsp, 0x90 ; pop rbp ; ret
0x0000000000408ae2 : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x000000000040467f : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040301f : add rsp, 0xc0 ; pop rbp ; ret
0x0000000000404598 : add rsp, 0xe0 ; pop rbp ; ret
0x000000000040159d : add rsp, 8 ; ret
0x0000000000408255 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040f9f0 : and bh, 1 ; movzx eax, dil ; pop rbp ; ret
0x000000000040957b : and byte ptr [rbx + 0x41], bl ; pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040d54f : and dh, 1 ; movzx eax, sil ; pop rbp ; ret
0x000000000040f9ef : and dil, 1 ; movzx eax, dil ; pop rbp ; ret
0x0000000000401aa7 : and dword ptr [rax], eax ; add ebx, esi ; ret
0x000000000040e055 : and eax, 0x412ed0 ; mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x000000000040325f : and eax, 0x616350 ; pop rbp ; ret
0x0000000000403283 : and eax, 0x616358 ; pop rbp ; ret
0x0000000000404aa4 : and eax, 0xffffff35 ; jmp qword ptr [rcx]
0x00000000004042b0 : and eax, dword ptr [rcx] ; jmp rcx
0x0000000000410fe9 : and eax, edx ; xor rdi, rdx ; or rax, rdi ; pop rbp ; ret
0x000000000041126e : and edx, eax ; mov al, dl ; movzx eax, al ; pop rbp ; ret
0x0000000000411148 : and edx, eax ; mov ax, dx ; movzx eax, ax ; pop rbp ; ret
0x0000000000410ef7 : and edx, eax ; or r9d, edx ; mov eax, r9d ; pop rbp ; ret
0x0000000000411203 : and edx, ebx ; mov al, dl ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000041126d : and edx, r8d ; mov al, dl ; movzx eax, al ; pop rbp ; ret
0x0000000000403668 : and esi, dword ptr [rcx] ; adc byte ptr [rcx - 0xa], al ; jmp qword ptr [rcx]
0x0000000000401aa6 : and qword ptr [rax], rax ; add ebx, esi ; ret
0x0000000000403667 : and r14d, dword ptr [r9] ; adc byte ptr [rcx - 0xa], al ; jmp qword ptr [rcx]
0x000000000040d54e : and sil, 1 ; movzx eax, sil ; pop rbp ; ret
0x00000000004144b8 : call 0x2241444e
0x0000000000405406 : call 0x4016b2
0x000000000040557b : call 0x4017c2
0x0000000000413808 : call 0xffffffffd2413712
0x0000000000414a58 : call 0xffffffffe1414a1c
0x0000000000406609 : call 0xffffffffe902ef59
0x0000000000406608 : call 0xffffffffe902ef5a
0x000000000040e541 : call 0xffffffffff7a7092
0x000000000040e540 : call 0xffffffffff7a7093
0x000000000040e67f : call 0xffffffffff7a71d0
0x000000000040e67e : call 0xffffffffff7a71d1
0x0000000000411849 : call qword ptr [r12 + rbx*8]
0x0000000000414013 : call qword ptr [rax]
0x0000000000414073 : call qword ptr [rcx]
0x00000000004142db : call qword ptr [rdx]
0x00000000004136eb : call qword ptr [rsi]
0x000000000041184a : call qword ptr [rsp + rbx*8]
0x0000000000401acd : call rax
0x000000000040635c : call rbx
0x000000000041380b : call rcx
0x00000000004139cb : call rdi
0x0000000000413073 : call rsp
0x000000000040f8ea : clc ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041045a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x0000000000407dbf : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407261 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040ca34 : clc ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040930a : clc ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040f2b5 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040a7f2 : clc ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040467e : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x000000000040f7e0 : clc ; add rsp, 0xc0 ; pop rbp ; ret
0x0000000000404597 : clc ; add rsp, 0xe0 ; pop rbp ; ret
0x0000000000401a6f : clc ; jne 0x401a78 ; pop rbp ; ret
0x00000000004110da : clc ; mov ax, r8w ; movzx eax, ax ; pop rbp ; ret
0x000000000040fb7a : clc ; mov byte ptr [rax + 0x1c], 0 ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x00000000004050a5 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040fa68 : clc ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x000000000040cc3e : clc ; mov dword ptr [rcx + 0x18], eax ; pop rbp ; ret
0x000000000040c6f6 : clc ; mov dword ptr [rcx + 0x2c], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d3b7 : clc ; mov dword ptr [rdi + 0x18], 0x95f616 ; pop rbp ; ret
0x000000000041178f : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040f81e : clc ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040deb7 : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040d79b : clc ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040d7bb : clc ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040d7db : clc ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000410e0c : clc ; mov rax, r8 ; pop rbp ; ret
0x000000000040debb : clc ; pop rbp ; ret
0x0000000000410c96 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040c782 : cld ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d1ba : cld ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040985f : cld ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040f0da : cld ; add rsp, 0xc0 ; pop rbp ; ret
0x000000000040ac9c : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000041178c : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000410c93 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041072b : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d1b7 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004045b6 : cld ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004045b9 : cld ; pop rbp ; ret
0x0000000000401c9a : cmp al, 0x25 ; ret
0x000000000040df2a : cmp dword ptr [rax - 0x75], ecx ; jne 0x40df14 ; call rax
0x0000000000410b19 : cmp dword ptr [rdx - 0x76be63d5], ebx ; ret
0x0000000000401a2d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401a40 ; pop rbp ; ret
0x00000000004084af : cmpsd dword ptr [rsi], dword ptr [rdi] ; cvttps2pi mm0, qword ptr [rcx - 0xe] ; jmp qword ptr [rcx]
0x00000000004084b0 : cvttps2pi mm0, qword ptr [rcx - 0xe] ; jmp qword ptr [rcx]
0x0000000000408ae5 : cwde ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004073cc : cwde ; mov rcx, qword ptr [rax*8 + 0x412958] ; jmp rcx
0x000000000040aec0 : cwde ; pop rdx ; adc dword ptr [rcx - 0xa], eax ; jmp qword ptr [rcx]
0x000000000040b19c : cwde ; sbb byte ptr [rcx - 0xe], al ; jmp qword ptr [rcx]
0x0000000000410194 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000402df0 : dec dword ptr [rcx + 0x21fa31c2] ; ret 0xfa81
0x0000000000405d62 : dec dword ptr [rcx - 0x77] ; ret 0x294d
0x0000000000404a81 : dec dword ptr [rcx] ; ret 0xf709
0x000000000040cf00 : div dword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000040ceff : div qword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000040df27 : enter -0x74b8, 0x39 ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x0000000000409fae : enter 0x41ed, -0x77 ; ret 0x8141
0x00000000004060f0 : enter 0x4b05, 0x34 ; fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x000000000040b605 : fadd dword ptr [rcx - 0xe] ; jmp qword ptr [rcx]
0x000000000040d06c : fbld dword ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000040d06d : fbld dword ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x00000000004036b8 : fiadd dword ptr [rcx - 0xa] ; jmp qword ptr [rcx]
0x0000000000404c8a : fiadd dword ptr [rcx - 0xf] ; jmp qword ptr [rcx]
0x00000000004060f4 : fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x0000000000409452 : fild dword ptr [rdi + rcx + 0x44] ; ret 0x8941
0x00000000004080ee : fild word ptr [rbp - 0x76ba39df] ; ret 0x8141
0x0000000000411204 : fimul dword ptr [rax - 0x3f49f030] ; pop rbx ; pop rbp ; ret
0x000000000040d943 : fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x000000000040d944 : fmul dword ptr [rax - 0x77] ; ret 0x2948
0x00000000004026f5 : fmul dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000404aae : fmul dword ptr [rcx + 0x31c621d6] ; ret 0xd609
0x0000000000402655 : fmul qword ptr [rax - 0x77] ; ret 0xb0
0x000000000041184c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000401c89 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040c19e : hlt ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040fa64 : hlt ; mov rcx, qword ptr [rbp - 8] ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x0000000000401a40 : hlt ; pop rbp ; mov edi, 0x6162b0 ; jmp rax
0x000000000040b3b2 : imul edx, dword ptr [rbx - 0xd7f], -1 ; jmp qword ptr [rcx]
0x000000000040488a : in al, 0x21 ; ret 0xd709
0x000000000040cecd : in al, dx ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000040ced0 : in al, dx ; pop rbp ; ret
0x0000000000401c96 : in al, dx ; xor byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x00000000004045b3 : in eax, -0x77 ; jge 0x4045bb ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040946a : inc dword ptr [rcx - 0x77] ; ret
0x0000000000404789 : inc dword ptr [rcx - 0x77] ; ret 0x8141
0x000000000040637b : inc dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x00000000004079f5 : int 0x80
0x0000000000409b9f : int 0x81
0x00000000004047f9 : int1 ; xchg eax, edx ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], al ; ret 0x3145
0x0000000000401a33 : ja 0x401a3a ; pop rbp ; ret
0x000000000040f821 : ja 0x40f86e ; pop rbp ; ret
0x000000000040315c : jb 0x4031a2 ; test byte ptr [rcx - 0xe], al ; jmp qword ptr [rcx]
0x00000000004002d6 : jbe 0x40027d ; xchg al, dh ; xchg eax, esi ; jl 0x400326 ; ret
0x0000000000404aa2 : jbe 0x404adc ; and eax, 0xffffff35 ; jmp qword ptr [rcx]
0x0000000000401a3f : je 0x401a3d ; pop rbp ; mov edi, 0x6162b0 ; jmp rax
0x00000000004045b5 : jge 0x4045b9 ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000404888 : jge 0x40483d ; in al, 0x21 ; ret 0xd709
0x0000000000405404 : jge 0x40539a ; call 0x4016b4
0x000000000040d79a : jge 0x40d79b ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040d7ba : jge 0x40d7bb ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040d7da : jge 0x40d7db ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000040db90 : jge 0x40db83 ; mov rcx, qword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040f160 : jge 0x40f153 ; mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040f81d : jge 0x40f81e ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x00000000004002db : jl 0x400321 ; ret
0x0000000000403f9c : jl 0x403fc1 ; ret 0xd709
0x0000000000403f9b : jl 0x403fc2 ; ret 0xd709
0x0000000000403f9a : jl 0x403fc3 ; ret 0xd709
0x000000000040a9ef : jmp 0x372b77
0x00000000004016db : jmp 0x4015b7
0x000000000040e3e0 : jmp 0x49036d30
0x000000000040ee5e : jmp 0x490377ae
0x000000000040eecb : jmp 0x4903781b
0x000000000040f65c : jmp 0x49037fac
0x000000000040f6c9 : jmp 0x49038019
0x0000000000407ec8 : jmp 0xffffffffc2c9c6d2
0x0000000000401f09 : jmp qword ptr [rax]
0x0000000000402b32 : jmp qword ptr [rcx]
0x000000000041479b : jmp qword ptr [rdi]
0x0000000000413ab3 : jmp qword ptr [rdx]
0x0000000000401a47 : jmp rax
0x0000000000401fc1 : jmp rcx
0x0000000000401a87 : jmp rdx
0x0000000000401a70 : jne 0x401a77 ; pop rbp ; ret
0x000000000040ca79 : jne 0x40ca5c ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x000000000040cf01 : jne 0x40cef9 ; mov rax, rdx ; pop rbp ; ret
0x000000000040d012 : jne 0x40d00a ; mov rax, rdx ; pop rbp ; ret
0x000000000040dc06 : jne 0x40dbf1 ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000040df2d : jne 0x40df11 ; call rax
0x0000000000404338 : jno 0x40435d ; ret 0xd709
0x00000000004051f5 : jo 0x405256 ; ret
0x000000000040681f : jo 0x406885 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406ec4 : jo 0x406f25 ; ret
0x0000000000406ffe : jo 0x40705f ; ret
0x000000000040a7f6 : jo 0x40a857 ; ret
0x000000000040bca8 : jo 0x40bc34 ; stc ; add eax, 0xf000000 ; xchg eax, esp ; ret 0x9588
0x000000000040a0f5 : lahf ; sub ah, byte ptr [rcx] ; ret 0x8941
0x000000000040a101 : lahf ; sub al, byte ptr [rcx - 0x77] ; ret 0x8141
0x00000000004133c3 : lcall ptr [rcx + rbx] ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret
0x000000000041012a : lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000404337 : lea esi, dword ptr [rcx + 0x21] ; ret 0xd709
0x000000000040315b : lodsb al, byte ptr [rsi] ; jb 0x4031a3 ; test byte ptr [rcx - 0xe], al ; jmp qword ptr [rcx]
0x00000000004133c8 : lodsb al, byte ptr [rsi] ; ret
0x0000000000404887 : lodsd eax, dword ptr [rsi] ; jge 0x40483e ; in al, 0x21 ; ret 0xd709
0x00000000004080f7 : loop 0x4080b8 ; loopne 0x4080e1 ; test dword ptr [rcx - 0x77], eax ; ret
0x000000000040a0fe : loope 0x40a0d8 ; mov edi, 0x89412a9f ; ret 0x8141
0x000000000040459b : loopne 0x4045a2 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004080f9 : loopne 0x4080df ; test dword ptr [rcx - 0x77], eax ; ret
0x0000000000408180 : loopne 0x4081d0 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040817f : loopne 0x4081d1 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040aca0 : loopne 0x40aca7 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040dc07 : loopne 0x40dc59 ; mov esi, eax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x0000000000410c30 : loopne 0x410c38 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004049a1 : mov ah, -0x75 ; ror byte ptr [r9 + 0x21ca31c2], 1 ; ret 0x458b
0x0000000000414a54 : mov ah, 0x14 ; add byte ptr [rax], al ; call 0xffffffffe1414a20
0x000000000040db0e : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000041316c : mov ah, 0xf ; add byte ptr [rax], al ; mov word ptr [rax - 1], ss ; call rsp
0x0000000000406d9b : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000406c28 : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x000000000040d77e : mov al, 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000408252 : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040d06b : mov al, byte ptr [rbp - 0x21] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040d9e7 : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004112a6 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040fa7c : mov al, byte ptr [rdi + 0x1c] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000411270 : mov al, dl ; movzx eax, al ; pop rbp ; ret
0x0000000000411205 : mov al, dl ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000041114a : mov ax, dx ; movzx eax, ax ; pop rbp ; ret
0x00000000004110db : mov ax, r8w ; movzx eax, ax ; pop rbp ; ret
0x00000000004110e0 : mov bh, -0x40 ; pop rbp ; ret
0x0000000000403281 : mov byte ptr [0x616358], al ; pop rbp ; ret
0x000000000040fb7b : mov byte ptr [rax + 0x1c], 0 ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000040277b : mov byte ptr [rax - 0x75], cl ; or al, 0xffffffffffffffc5 ; sbb qword ptr [rcx], rax ; jmp rcx
0x0000000000403adb : mov byte ptr [rbp - 1], 0x3f ; movsx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000403952 : mov byte ptr [rdx + 0xb], 0 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401aa3 : mov byte ptr [rip + 0x21486e], 1 ; ret
0x0000000000404336 : mov cl, -0x73 ; jno 0x40435f ; ret 0xd709
0x0000000000414959 : mov cl, -1 ; call qword ptr [rsi]
0x000000000040f9f5 : mov dh, -0x39 ; pop rbp ; ret
0x000000000040d554 : mov dh, -0x3a ; pop rbp ; ret
0x00000000004093f1 : mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040d4d4 : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040270a : mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040c4af : mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000408258 : mov dh, -0x40 ; pop rbp ; ret
0x0000000000411208 : mov dh, -0x40 ; pop rbx ; pop rbp ; ret
0x00000000004144b9 : mov dr1, edi ; jmp qword ptr [rcx]
0x000000000040325d : mov dword ptr [0x616350], edi ; pop rbp ; ret
0x00000000004050a6 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405068 : mov dword ptr [rax], eax ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000404f24 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000405067 : mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040cecb : mov dword ptr [rbp - 0x14], eax ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000401d69 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040db0c : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004053ff : mov dword ptr [rbp - 0x70], eax ; mov rdi, qword ptr [rbp - 0x70] ; call 0x4016b9
0x0000000000401c87 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004045b4 : mov dword ptr [rbp - 4], edi ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000041178d : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040deb5 : mov dword ptr [rbp - 8], eax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040fa69 : mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x000000000040cc3f : mov dword ptr [rcx + 0x18], eax ; pop rbp ; ret
0x000000000040c6f7 : mov dword ptr [rcx + 0x2c], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040511e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040c2f1 : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404cc3 : mov dword ptr [rcx], eax ; mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x000000000040e05a : mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x000000000040d3b8 : mov dword ptr [rdi + 0x18], 0x95f616 ; pop rbp ; ret
0x000000000040f820 : mov dword ptr [rdi + 0x48], esi ; pop rbp ; ret
0x0000000000401f02 : mov eax, 0 ; add byte ptr [rax], bl ; jmp qword ptr [rax]
0x0000000000404ed8 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040461b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004034d3 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040cb98 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x0000000000404ed5 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040342f : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040cece : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000407fd3 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404e8d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404f1e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040d8b9 : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040817e : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040dc0c : mov eax, dword ptr [rbp - 0x20] ; call rax
0x0000000000404cc5 : mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x000000000040f3bf : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040ca7f : mov eax, dword ptr [rbp - 0x28] ; call rax
0x000000000040506a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004051ef : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000406d99 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040fc39 : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040c19c : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000410c94 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040c780 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d1b8 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040985d : mov eax, dword ptr [rbp - 4] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004045b7 : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040f8e8 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407dbd : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040725f : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040ca32 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000409308 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040f2b3 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040a7f0 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040deb9 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040d79d : mov eax, dword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040d7bd : mov eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040d7dd : mov eax, dword ptr [rdi + 0x20] ; pop rbp ; ret
0x00000000004110dd : mov eax, eax ; movzx eax, ax ; pop rbp ; ret
0x0000000000410e0e : mov eax, eax ; pop rbp ; ret
0x0000000000408b67 : mov eax, ecx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000410efd : mov eax, ecx ; pop rbp ; ret
0x000000000040e241 : mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041114b : mov eax, edx ; movzx eax, ax ; pop rbp ; ret
0x000000000040cf04 : mov eax, edx ; pop rbp ; ret
0x00000000004110dc : mov eax, r8d ; movzx eax, ax ; pop rbp ; ret
0x0000000000410efc : mov eax, r9d ; pop rbp ; ret
0x0000000000401acb : mov ebp, esp ; call rax
0x0000000000401a31 : mov ebp, esp ; ja 0x401a3c ; pop rbp ; ret
0x00000000004045b2 : mov ebp, esp ; mov dword ptr [rbp - 4], edi ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000407a0d : mov ecx, 0x5b2a830a ; ret
0x0000000000401fba : mov ecx, dword ptr [rax*8 + 0x411910] ; jmp rcx
0x000000000040277d : mov ecx, dword ptr [rax*8 + 0x411948] ; jmp rcx
0x00000000004042ac : mov ecx, dword ptr [rax*8 + 0x4123d0] ; jmp rcx
0x00000000004052b2 : mov ecx, dword ptr [rax*8 + 0x412450] ; jmp rcx
0x00000000004055d6 : mov ecx, dword ptr [rax*8 + 0x412498] ; jmp rcx
0x00000000004073ce : mov ecx, dword ptr [rax*8 + 0x412958] ; jmp rcx
0x000000000040cbd4 : mov ecx, dword ptr [rax*8 + 0x412d48] ; jmp rcx
0x0000000000404f21 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040e5a2 : mov ecx, dword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040e53f : mov ecx, dword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000404cc0 : mov ecx, dword ptr [rbp - 0x20] ; mov dword ptr [rcx], eax ; mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x000000000040db93 : mov ecx, dword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040f163 : mov ecx, dword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040fa66 : mov ecx, dword ptr [rbp - 8] ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x000000000040cc3c : mov ecx, dword ptr [rbp - 8] ; mov dword ptr [rcx + 0x18], eax ; pop rbp ; ret
0x000000000040f230 : mov ecx, dword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000401ac5 : mov edi, 0x615e20 ; mov rbp, rsp ; call rax
0x0000000000401a42 : mov edi, 0x6162b0 ; jmp rax
0x0000000000401a82 : mov edi, 0x6162b0 ; jmp rdx
0x000000000040a100 : mov edi, 0x89412a9f ; ret 0x8141
0x0000000000405403 : mov edi, dword ptr [rbp - 0x70] ; call 0x4016b5
0x000000000040f81c : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040d799 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040d7b9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040d7d9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000040e543 : mov edi, dword ptr [rcx] ; call rax
0x000000000040df29 : mov edi, dword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x0000000000405579 : mov edi, eax ; call 0x4017c4
0x0000000000411847 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000411846 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000405575 : mov edx, dword ptr [rbp - 0x78] ; mov rdi, rax ; call 0x4017c8
0x000000000040df2c : mov esi, dword ptr [rbp - 0x20] ; call rax
0x000000000040db97 : mov esi, dword ptr [rcx] ; call rax
0x0000000000401a80 : mov esi, eax ; mov edi, 0x6162b0 ; jmp rdx
0x000000000040dc09 : mov esi, eax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000040ca7c : mov esi, eax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x000000000040439a : mov esp, 0x218264b0 ; ret 0xd709
0x000000000040325c : mov qword ptr [0x616350], rdi ; pop rbp ; ret
0x000000000040deb4 : mov qword ptr [rbp - 8], rax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040511d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040c2f0 : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040f81f : mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040db0d : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000406d9a : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040461a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004034d2 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404ed4 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040342e : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000407fd2 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404e8c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040d8b8 : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040817d : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040dc0b : mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000040f3be : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040ca7e : mov rax, qword ptr [rbp - 0x28] ; call rax
0x00000000004051ee : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000406d98 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040f8e7 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407dbc : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040725e : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040ca31 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000409307 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040f2b2 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040a7ef : mov rax, qword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040deb8 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040d79c : mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040d7bc : mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040d7dc : mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000410e0d : mov rax, r8 ; pop rbp ; ret
0x0000000000408b66 : mov rax, rcx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040e240 : mov rax, rdx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040cf03 : mov rax, rdx ; pop rbp ; ret
0x0000000000401aca : mov rbp, rsp ; call rax
0x0000000000401a30 : mov rbp, rsp ; ja 0x401a3d ; pop rbp ; ret
0x0000000000401fb9 : mov rcx, qword ptr [rax*8 + 0x411910] ; jmp rcx
0x000000000040277c : mov rcx, qword ptr [rax*8 + 0x411948] ; jmp rcx
0x00000000004042ab : mov rcx, qword ptr [rax*8 + 0x4123d0] ; jmp rcx
0x00000000004052b1 : mov rcx, qword ptr [rax*8 + 0x412450] ; jmp rcx
0x00000000004055d5 : mov rcx, qword ptr [rax*8 + 0x412498] ; jmp rcx
0x00000000004073cd : mov rcx, qword ptr [rax*8 + 0x412958] ; jmp rcx
0x000000000040cbd3 : mov rcx, qword ptr [rax*8 + 0x412d48] ; jmp rcx
0x000000000040e5a1 : mov rcx, qword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040e53e : mov rcx, qword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040db92 : mov rcx, qword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040f162 : mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040fa65 : mov rcx, qword ptr [rbp - 8] ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x000000000040cc3b : mov rcx, qword ptr [rbp - 8] ; mov dword ptr [rcx + 0x18], eax ; pop rbp ; ret
0x000000000040f22f : mov rcx, qword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000405402 : mov rdi, qword ptr [rbp - 0x70] ; call 0x4016b6
0x000000000040f81b : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040d798 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040d7b8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040d7d8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000040e542 : mov rdi, qword ptr [rcx] ; call rax
0x000000000040df28 : mov rdi, qword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x0000000000405578 : mov rdi, rax ; call 0x4017c5
0x0000000000405574 : mov rdx, qword ptr [rbp - 0x78] ; mov rdi, rax ; call 0x4017c9
0x000000000040df2b : mov rsi, qword ptr [rbp - 0x20] ; call rax
0x000000000040db96 : mov rsi, qword ptr [rcx] ; call rax
0x0000000000401a7f : mov rsi, rax ; mov edi, 0x6162b0 ; jmp rdx
0x000000000040dc08 : mov rsi, rax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000040ca7b : mov rsi, rax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x0000000000413170 : mov word ptr [rax - 1], ss ; call rsp
0x000000000040baa1 : movabs dword ptr [0xfffffff281f4f275], eax ; jmp qword ptr [rcx]
0x0000000000409dcd : movabs eax, dword ptr [0x21fffffffff281ee] ; ret 0xfa81
0x0000000000405407 : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xffff
0x0000000000403adf : movsx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x00000000004093f0 : movzx eax, al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040d4d3 : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402709 : movzx eax, al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040c4ae : movzx eax, al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000408257 : movzx eax, al ; pop rbp ; ret
0x0000000000411207 : movzx eax, al ; pop rbx ; pop rbp ; ret
0x00000000004110df : movzx eax, ax ; pop rbp ; ret
0x000000000040f9f4 : movzx eax, bh ; pop rbp ; ret
0x000000000040d553 : movzx eax, dh ; pop rbp ; ret
0x000000000040f9f3 : movzx eax, dil ; pop rbp ; ret
0x000000000040d552 : movzx eax, sil ; pop rbp ; ret
0x00000000004090f5 : movzx eax, word ptr [rbp - 2] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040b7ba : mul dword ptr [rbp + 0x21] ; ret 0x8941
0x0000000000405405 : nop ; call 0x4016b3
0x0000000000405401 : nop ; mov rdi, qword ptr [rbp - 0x70] ; call 0x4016b7
0x0000000000411868 : nop dword ptr [rax + rax] ; ret
0x000000000040593d : or al, 0x18 ; ret 0x6451
0x00000000004073cf : or al, 0xffffffffffffffc5 ; pop rax ; sub dword ptr [rcx], eax ; jmp rcx
0x000000000040277e : or al, 0xffffffffffffffc5 ; sbb qword ptr [rcx], rax ; jmp rcx
0x00000000004084fb : or byte ptr [rax], al ; add byte ptr [rbp - 0x77], al ; ret 0x3145
0x0000000000403dd3 : or byte ptr [rcx + 0x2df9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x00000000004044fa : or byte ptr [rcx + 0x2df9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x0000000000403c9a : or byte ptr [rcx + 0x38f9], al ; add byte ptr [rdi], cl ; pushfq ; ret 0x5588
0x0000000000404175 : or byte ptr [rcx + 0x38f9], al ; add byte ptr [rdi], cl ; pushfq ; ret 0x9588
0x000000000040c02b : or byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040945e : or dword ptr [rcx], eax ; add byte ptr [rbp - 0x77], al ; ret 0x8141
0x0000000000406f81 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403954 : or eax, dword ptr [rax] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000410e0b : or eax, edi ; mov rax, r8 ; pop rbp ; ret
0x0000000000410fef : or eax, edi ; pop rbp ; ret
0x0000000000410efa : or ecx, edx ; mov eax, r9d ; pop rbp ; ret
0x0000000000410e0a : or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x0000000000410ef9 : or r9d, edx ; mov eax, r9d ; pop rbp ; ret
0x0000000000410fee : or rax, rdi ; pop rbp ; ret
0x0000000000413629 : out -2, al ; jmp rdx
0x000000000040d550 : out 1, al ; movzx eax, sil ; pop rbp ; ret
0x000000000040f9f1 : out 1, eax ; movzx eax, dil ; pop rbp ; ret
0x0000000000408e6a : out dx, al ; rol byte ptr [rcx - 0xe], 1 ; jmp qword ptr [rcx]
0x0000000000408254 : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401aa5 : outsb dx, byte ptr [rsi] ; and qword ptr [rax], rax ; add ebx, esi ; ret
0x000000000040da99 : outsb dx, byte ptr [rsi] ; ret 0x280f
0x000000000041185c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000406821 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041185e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000406823 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000411860 : pop r14 ; pop r15 ; ret
0x00000000004065d3 : pop r14 ; pop rbp ; ret
0x0000000000406825 : pop r15 ; pop rbp ; ret
0x0000000000411862 : pop r15 ; ret
0x00000000004073d1 : pop rax ; sub dword ptr [rcx], eax ; jmp rcx
0x0000000000401aa2 : pop rbp ; mov byte ptr [rip + 0x21486e], 1 ; ret
0x0000000000401a41 : pop rbp ; mov edi, 0x6162b0 ; jmp rax
0x0000000000401a7e : pop rbp ; mov rsi, rax ; mov edi, 0x6162b0 ; jmp rdx
0x000000000041185b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041185f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401a35 : pop rbp ; ret
0x0000000000406820 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040788d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004065d2 : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000408ae9 : pop rbx ; pop rbp ; ret
0x0000000000407a11 : pop rbx ; ret
0x0000000000406826 : pop rdi ; pop rbp ; ret
0x0000000000411863 : pop rdi ; ret
0x000000000040aec1 : pop rdx ; adc dword ptr [rcx - 0xa], eax ; jmp qword ptr [rcx]
0x00000000004084ae : pop rdx ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cvttps2pi mm0, qword ptr [rcx - 0xe] ; jmp qword ptr [rcx]
0x0000000000406824 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000411861 : pop rsi ; pop r15 ; ret
0x00000000004065d4 : pop rsi ; pop rbp ; ret
0x000000000041185d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000406822 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040dab0 : pop rsp ; ret 0xf66
0x00000000004002d5 : push rax ; jbe 0x40027e ; xchg al, dh ; xchg eax, esi ; jl 0x400327 ; ret
0x0000000000406d1e : push rax ; pop rbp ; ret
0x0000000000404aad : push rbp ; fmul dword ptr [rcx + 0x31c621d6] ; ret 0xd609
0x0000000000401ac4 : push rbp ; mov edi, 0x615e20 ; mov rbp, rsp ; call rax
0x000000000040a1db : push rbp ; ror byte ptr [rax - 0x75], 1 ; ror byte ptr [r8 - 0x77], 1 ; ret 0x8148
0x0000000000403ca2 : pushfq ; ret 0x5588
0x000000000040417d : pushfq ; ret 0x9588
0x00000000004002dd : ret
0x00000000004021d7 : ret 0
0x000000000040ad0a : ret 0x134
0x0000000000404124 : ret 0x141
0x000000000040ccc6 : ret 0x148
0x00000000004069be : ret 0x1b2
0x00000000004018e2 : ret 0x2148
0x00000000004016e2 : ret 0x2149
0x000000000040d715 : ret 0x26a8
0x000000000040da9a : ret 0x280f
0x00000000004034b5 : ret 0x2948
0x0000000000405d49 : ret 0x294c
0x0000000000405d65 : ret 0x294d
0x000000000040387d : ret 0x3141
0x0000000000404800 : ret 0x3145
0x000000000040fac3 : ret 0x3693
0x000000000040911a : ret 0x3948
0x0000000000402149 : ret 0x3a8f
0x00000000004049aa : ret 0x458b
0x0000000000403ca3 : ret 0x5588
0x000000000040499b : ret 0x5589
0x000000000040c18f : ret 0x60
0x000000000040593f : ret 0x6451
0x0000000000402f15 : ret 0x6478
0x0000000000403883 : ret 0x8141
0x0000000000407ecc : ret 0x8148
0x000000000040ac2f : ret 0x8341
0x000000000040e3e3 : ret 0x8348
0x00000000004098a4 : ret 0x840
0x0000000000408fde : ret 0x8445
0x0000000000405fe3 : ret 0x8840
0x00000000004035b4 : ret 0x8844
0x0000000000404b53 : ret 0x8941
0x000000000040cb0a : ret 0x8944
0x00000000004043ff : ret 0x8948
0x0000000000405d68 : ret 0x8949
0x0000000000411149 : ret 0x8966
0x0000000000405efc : ret 0x89a5
0x0000000000405d4c : ret 0x8b48
0x000000000040490a : ret 0x941
0x000000000040caed : ret 0x945
0x000000000040417e : ret 0x9588
0x00000000004022d6 : ret 0xb0
0x0000000000410369 : ret 0xb849
0x000000000040e466 : ret 0xb948
0x00000000004046ec : ret 0xbe01
0x000000000040854b : ret 0xc121
0x0000000000401a65 : ret 0xc148
0x0000000000408563 : ret 0xc221
0x00000000004100d0 : ret 0xc2f6
0x0000000000403a1d : ret 0xca21
0x00000000004038aa : ret 0xca31
0x000000000041126f : ret 0xd088
0x0000000000407253 : ret 0xd284
0x00000000004049af : ret 0xd2f7
0x000000000040ac36 : ret 0xd4e8
0x0000000000404ab4 : ret 0xd609
0x0000000000403f9e : ret 0xd709
0x000000000040fc13 : ret 0xea81
0x000000000040660c : ret 0xee8
0x000000000040fabf : ret 0xee81
0x00000000004098ab : ret 0xf01
0x0000000000405ff8 : ret 0xf180
0x0000000000409888 : ret 0xf280
0x0000000000402d57 : ret 0xf281
0x000000000040dab1 : ret 0xf66
0x0000000000404a83 : ret 0xf709
0x0000000000402df2 : ret 0xfa31
0x0000000000402b34 : ret 0xfa81
0x0000000000405d7d : ret 0xfde8
0x000000000040ee70 : ret 0xff3
0x000000000040ad4a : ret 0xff6a
0x0000000000405408 : ret 0xffff
0x00000000004031d7 : ret 1
0x0000000000410130 : ret 2
0x0000000000409244 : ret 8
0x00000000004111f3 : rol byte ptr [rbp + 9], 1 ; ret
0x0000000000405066 : rol byte ptr [rcx + rcx*4], 1 ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040fb59 : rol byte ptr [rcx - 0x77], 1 ; ret
0x0000000000408e6b : rol byte ptr [rcx - 0xe], 1 ; jmp qword ptr [rcx]
0x0000000000403708 : rol dword ptr [rcx + 0x21], cl ; ret
0x0000000000410efb : rol dword ptr [rcx + rcx*4 - 0x38], 1 ; pop rbp ; ret
0x000000000040a844 : rol dword ptr [rcx - 0xf], cl ; jmp qword ptr [rcx]
0x0000000000403f99 : rol dword ptr [rdi + 0x4f], 1 ; jl 0x403fc4 ; ret 0xd709
0x00000000004079f0 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000040a1df : ror byte ptr [r8 - 0x77], 1 ; ret 0x8148
0x00000000004051f0 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x40525b ; ret
0x00000000004049a3 : ror byte ptr [r9 + 0x21ca31c2], 1 ; ret 0x458b
0x0000000000410fea : ror byte ptr [rax + 0x31], 1 ; xlatb ; or rax, rdi ; pop rbp ; ret
0x0000000000401a6c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401a7b ; pop rbp ; ret
0x000000000040a1dc : ror byte ptr [rax - 0x75], 1 ; ror byte ptr [r8 - 0x77], 1 ; ret 0x8148
0x00000000004079f1 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000405d3d : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000405d46 : ror byte ptr [rax - 0x77], 1 ; ret 0x294c
0x000000000040a1e0 : ror byte ptr [rax - 0x77], 1 ; ret 0x8148
0x00000000004051f1 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x40525a ; ret
0x000000000040c4b0 : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x0000000000402eca : ror byte ptr [rax - 0x7f], -0x3c ; adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004049a4 : ror byte ptr [rcx + 0x21ca31c2], 1 ; ret 0x458b
0x000000000041114c : ror byte ptr [rdi], 1 ; mov bh, -0x40 ; pop rbp ; ret
0x0000000000411271 : ror byte ptr [rdi], 1 ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000411206 : ror byte ptr [rdi], 1 ; mov dh, -0x40 ; pop rbx ; pop rbp ; ret
0x0000000000408b65 : ror dword ptr [rax - 0x77], -0x38 ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b714 : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x000000000040ceca : ror dword ptr [rcx + 0x458bec45], -0x14 ; pop rbp ; ret
0x0000000000404335 : sahf ; mov cl, -0x73 ; jno 0x404360 ; ret 0xd709
0x00000000004002d7 : sahf ; xchg al, dh ; xchg eax, esi ; jl 0x400325 ; ret
0x00000000004021d4 : salc ; add cl, ch ; ret 0
0x0000000000404aa1 : salc ; jbe 0x404add ; and eax, 0xffffff35 ; jmp qword ptr [rcx]
0x000000000040c073 : sar byte ptr [rdi], cl ; test dword ptr [rcx - 0xe], eax ; jmp qword ptr [rcx]
0x000000000040a0ff : sar dword ptr [rdi - 0x76bed561], 1 ; ret 0x8141
0x0000000000401a6e : sar eax, 1 ; jne 0x401a79 ; pop rbp ; ret
0x00000000004133c1 : sar edi, -1 ; sbb al, 0x19 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret
0x0000000000401a6d : sar rax, 1 ; jne 0x401a7a ; pop rbp ; ret
0x000000000040fb7d : sbb al, 0 ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x00000000004133c4 : sbb al, 0x19 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret
0x000000000040fa7e : sbb al, 0x24 ; add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004139c9 : sbb bh, bh ; call rdi
0x000000000040b19d : sbb byte ptr [rcx - 0xe], al ; jmp qword ptr [rcx]
0x0000000000401fbe : sbb dword ptr [rcx], eax ; jmp rcx
0x0000000000402780 : sbb qword ptr [rcx], rax ; jmp rcx
0x0000000000404889 : scasd eax, dword ptr [rdi] ; in al, 0x21 ; ret 0xd709
0x000000000040cf3a : sete al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040cf3c : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004049b1 : shl byte ptr [rcx], cl ; ret 0x5589
0x000000000040a5d9 : shl byte ptr [rip - 0xd7f], -1 ; jmp qword ptr [rcx]
0x000000000040dacf : shl dword ptr [rsi + 0xf], 0x5c ; ret 0xf66
0x00000000004144b5 : sldt word ptr [rax] ; call 0x22414451
0x000000000041316d : sldt word ptr [rax] ; mov word ptr [rax - 1], ss ; call rsp
0x000000000040bcaa : stc ; add eax, 0xf000000 ; xchg eax, esp ; ret 0x9588
0x0000000000403dd5 : stc ; sub eax, 0xf000000 ; xchg eax, esp ; ret 0x5588
0x00000000004044fc : stc ; sub eax, 0xf000000 ; xchg eax, esp ; ret 0x9588
0x00000000004112a8 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004036b7 : stosb byte ptr [rdi], al ; fiadd dword ptr [rcx - 0xa] ; jmp qword ptr [rcx]
0x000000000040d3fa : stosd dword ptr [rdi], eax ; sub eax, 0x8d480041 ; xor al, 0x25 ; ret
0x0000000000402146 : sub ah, byte ptr [rcx - 0x73] ; ret 0x3a8f
0x000000000040a0f6 : sub ah, byte ptr [rcx] ; ret 0x8941
0x000000000040c6f9 : sub al, 0x48 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000409fac : sub al, 0x7d ; enter 0x41ed, -0x77 ; ret 0x8141
0x000000000040a102 : sub al, byte ptr [rcx - 0x77] ; ret 0x8141
0x00000000004073d2 : sub dword ptr [rcx], eax ; jmp rcx
0x0000000000407a0f : sub dword ptr [rdx], 0x5b ; ret
0x000000000040d3fb : sub eax, 0x8d480041 ; xor al, 0x25 ; ret
0x0000000000403dd6 : sub eax, 0xf000000 ; xchg eax, esp ; ret 0x5588
0x00000000004044fd : sub eax, 0xf000000 ; xchg eax, esp ; ret 0x9588
0x00000000004118e9 : sub esp, 8 ; add rsp, 8 ; ret
0x00000000004118e8 : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000408dbe : test al, 0 ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041186a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040315e : test byte ptr [rcx - 0xe], al ; jmp qword ptr [rcx]
0x00000000004080fb : test dword ptr [rcx - 0x77], eax ; ret
0x000000000040c075 : test dword ptr [rcx - 0xe], eax ; jmp qword ptr [rcx]
0x00000000004085fd : test dword ptr [rip - 0x17000000], eax ; ret
0x00000000004002d8 : xchg al, dh ; xchg eax, esi ; jl 0x400324 ; ret
0x00000000004047e8 : xchg eax, ebp ; ret
0x0000000000408fdd : xchg eax, ebp ; ret 0x8445
0x0000000000405fe2 : xchg eax, ebp ; ret 0x8840
0x00000000004047fa : xchg eax, edx ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], al ; ret 0x3145
0x00000000004002da : xchg eax, esi ; jl 0x400322 ; ret
0x0000000000403ddb : xchg eax, esp ; ret 0x5588
0x0000000000404502 : xchg eax, esp ; ret 0x9588
0x0000000000407252 : xchg eax, esp ; ret 0xd284
0x000000000040cf3b : xchg eax, esp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000405400 : xchg eax, r8d ; mov rdi, qword ptr [rbp - 0x70] ; call 0x4016b8
0x00000000004142d9 : xchg edi, edi ; call qword ptr [rdx]
0x0000000000410e09 : xlatb ; or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x0000000000410fed : xlatb ; or rax, rdi ; pop rbp ; ret
0x000000000040d400 : xor al, 0x25 ; ret
0x0000000000413cf0 : xor al, 0xffffffff ; jmp qword ptr [rdx]
0x0000000000413cf1 : xor al, 0xffffffffffffffff ; jmp qword ptr [rdx]
0x0000000000409920 : xor bl, byte ptr [rcx + rax*4 - 0xf] ; jmp qword ptr [rcx]
0x0000000000401c97 : xor byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x000000000041045e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000404aa3 : xor dword ptr [rip - 0xcb], esp ; jmp qword ptr [rcx]
0x0000000000406d17 : xor eax, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x0000000000405065 : xor eax, edx ; mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000413bd1 : xor edi, edi ; jmp qword ptr [rax]
0x0000000000413ab1 : xor edi, edi ; jmp qword ptr [rdx]
0x0000000000410e08 : xor edi, edx ; or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x0000000000410fec : xor edi, edx ; or rax, rdi ; pop rbp ; ret
0x0000000000410feb : xor rdi, rdx ; or rax, rdi ; pop rbp ; ret
