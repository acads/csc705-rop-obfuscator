0x00000000004104d7 : adc al, ch ; ret
0x000000000041c96a : adc byte ptr [rax - 0x75], cl ; jge 0x41c934 ; call rax
0x000000000041c969 : adc byte ptr [rax - 0x75], cl ; jge 0x41c935 ; call rax
0x000000000041cafd : adc byte ptr [rax - 0x75], cl ; jge 0x41cac7 ; call rax
0x000000000041cafc : adc byte ptr [rax - 0x75], cl ; jge 0x41cac8 ; call rax
0x000000000040d448 : adc byte ptr [rbx - 0x3e7e13b3], cl ; ret 0x241b
0x000000000040f0ca : adc byte ptr [rcx - 0xa], al ; jmp qword ptr [rcx]
0x000000000041243e : adc byte ptr [rcx - 0xe], al ; jmp qword ptr [rcx]
0x000000000042601f : adc dword ptr [rax - 0x42], ecx ; ret
0x0000000000407c37 : adc dword ptr [rcx - 0xf], eax ; jmp qword ptr [rcx]
0x00000000004156a9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042a841 : adc esi, edi ; call qword ptr [rcx]
0x000000000042adbb : add ah, ch ; or eax, dword ptr [rax] ; add al, dh ; cmp dh, bh ; jmp rsp
0x000000000042bea3 : add ah, dl ; sbb al, 0 ; add al, ch ; mov bh, -2 ; call qword ptr [rdx]
0x0000000000416b4a : add al, -0x62 ; rol byte ptr [rcx - 0xf], cl ; jmp qword ptr [rcx]
0x000000000040b492 : add al, 0 ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000042cdd4 : add al, 0x2c ; add byte ptr [rax], al ; call 0x1142cd79
0x000000000040ffba : add al, 0x48 ; add eax, ecx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000417318 : add al, 0xf ; pushfq ; ret 0x5588
0x000000000040a114 : add al, 2 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000042abdf : add al, ah ; and esi, edi ; jmp rdi
0x000000000042ae1f : add al, ah ; cmp bh, dh ; call qword ptr [rcx]
0x0000000000429d2b : add al, ah ; fdiv st(6), st(0) ; jmp rax
0x0000000000429deb : add al, ah ; loopne 0x429df1 ; jmp rax
0x0000000000429ceb : add al, ah ; sar dh, cl ; jmp rax
0x000000000042972b : add al, al ; mov dl, -3 ; call rax
0x0000000000406506 : add al, bpl ; ret
0x0000000000402c07 : add al, bpl ; ret 0xfff8
0x000000000040f306 : add al, byte ptr [rax] ; add byte ptr [rcx + 0x21ca31c2], cl ; ret 0xfa81
0x00000000004259f3 : add al, byte ptr [rax] ; add byte ptr [rcx - 0xdf43], al ; call qword ptr [rax]
0x000000000040e1c7 : add al, byte ptr [rax] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040fe2a : add al, byte ptr [rdi + 0xf660001] ; pop rsp ; ret 0xf66
0x000000000040cc6e : add al, ch ; cmp al, -0x2a ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042be67 : add al, ch ; mov bh, -2 ; call qword ptr [rdx]
0x0000000000403647 : add al, ch ; ret
0x000000000040a138 : add al, ch ; ret 0x4a
0x000000000041c048 : add al, ch ; ret 0xfe68
0x0000000000404c48 : add al, ch ; ret 0xffdc
0x0000000000402c08 : add al, ch ; ret 0xfff8
0x000000000042a337 : add al, cl ; popfq ; std ; call rax
0x000000000042adbf : add al, dh ; cmp dh, bh ; jmp rsp
0x00000000004296bb : add al, dh ; xchg eax, edi ; std ; call qword ptr [rax]
0x0000000000429c1b : add al, dl ; ret
0x00000000004296ab : add al, dl ; xchg eax, esi ; std ; call rax
0x000000000042636f : add bl, dh ; ret
0x000000000041baac : add byte ptr [r8], r8b ; add byte ptr [rcx - 0x100f43], al ; jmp qword ptr [rsi]
0x0000000000410ef9 : add byte ptr [rax + 0x29], cl ; ret 0x8948
0x00000000004178c3 : add byte ptr [rax + 1], cl ; ret 0x3948
0x000000000040d16a : add byte ptr [rax + 1], cl ; ret 0x3b48
0x000000000040d1c5 : add byte ptr [rax + 1], cl ; ret 0x4a8b
0x000000000040d3f3 : add byte ptr [rax + 1], cl ; ret 0x8b48
0x00000000004226b4 : add byte ptr [rax + 1], cl ; ret 0xc148
0x000000000042a273 : add byte ptr [rax + rax - 0x74f80000], ah ; std ; jmp rdx
0x000000000041cbce : add byte ptr [rax + rax], 0 ; pop rbp ; ret
0x0000000000426033 : add byte ptr [rax - 0x42], cl ; ret
0x000000000042973b : add byte ptr [rax - 0x4b], al ; std ; call qword ptr [rax]
0x00000000004296fb : add byte ptr [rax - 0x53], dl ; std ; call qword ptr [rax]
0x00000000004296eb : add byte ptr [rax - 0x54], dl ; std ; call rax
0x000000000040d792 : add byte ptr [rax - 0x75], cl ; call 0x490360ea
0x000000000040e8cb : add byte ptr [rax - 0x75], cl ; call 0x49037223
0x0000000000422e85 : add byte ptr [rax - 0x75], cl ; clc ; mov rsp, rbp ; pop rbp ; ret
0x00000000004102cf : add byte ptr [rax - 0x75], cl ; fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x000000000041cb7b : add byte ptr [rax - 0x75], cl ; jge 0x41cb3d ; call rax
0x0000000000423632 : add byte ptr [rax - 0x75], cl ; loopne 0x42369b ; ret
0x000000000041ca0f : add byte ptr [rax - 0x75], cl ; mov ebp, 0xfffffba0 ; call rax
0x0000000000424539 : add byte ptr [rax - 0x75], cl ; push rbp ; call 0x2104c691
0x0000000000419bcd : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000405471 : add byte ptr [rax - 0x77], cl ; call 0x10028dc9
0x0000000000424f8f : add byte ptr [rax - 0x77], cl ; fsubr st(1) ; ret 0xffff
0x00000000004176bd : add byte ptr [rax - 0x77], cl ; jge 0x4176c0 ; pop rbp ; ret
0x0000000000404324 : add byte ptr [rax - 0x77], cl ; push rbp ; fmul dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000420707 : add byte ptr [rax - 0x77], cl ; ret 0x50e8
0x0000000000403642 : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000042079a : add byte ptr [rax - 0x77], cl ; ret 0xbde8
0x000000000042a777 : add byte ptr [rax - 0xb], cl ; std ; call rdx
0x00000000004297ab : add byte ptr [rax - 0xc], dh ; std ; call rax
0x00000000004297bb : add byte ptr [rax - 2], dl ; std ; call qword ptr [rax]
0x000000000042cdd2 : add byte ptr [rax], al ; add al, 0x2c ; add byte ptr [rax], al ; call 0x1142cd7b
0x000000000040cc6c : add byte ptr [rax], al ; add al, ch ; cmp al, -0x2a ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042636d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000410ef7 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8948
0x00000000004178c1 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x3948
0x000000000040d168 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x3b48
0x000000000040d1c3 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x4a8b
0x000000000040d3f1 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8b48
0x00000000004226b2 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0xc148
0x0000000000426031 : add byte ptr [rax], al ; add byte ptr [rax - 0x42], cl ; ret
0x000000000040d790 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; call 0x490360ec
0x000000000040e8c9 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; call 0x49037225
0x00000000004102cd : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x0000000000423630 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; loopne 0x42369d ; ret
0x0000000000424537 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbp ; call 0x2104c693
0x000000000040546f : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; call 0x10028dcb
0x0000000000424f8d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fsubr st(1) ; ret 0xffff
0x00000000004176bb : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jge 0x4176c2 ; pop rbp ; ret
0x0000000000403640 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000042636b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000400998 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x000000000040099a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x0000000000403e1a : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041096d : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000416990 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x000000000041aa69 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004176ba : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000042362f : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x20] ; pop rbp ; ret
0x000000000041694e : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042636c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040099c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x000000000042a275 : add byte ptr [rax], al ; add byte ptr [rax], cl ; mov edi, ebp ; jmp rdx
0x00000000004134bb : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], al ; ret 0x3145
0x000000000040c64a : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040b4db : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7038b], cl ; ret 0xb0
0x0000000000404995 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b72b8b], cl ; ret 0xb0
0x0000000000404a3d : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7378b], cl ; ret 0xb0
0x00000000004134a3 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x00000000004237e8 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x0000000000416a38 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000041baad : add byte ptr [rax], al ; add byte ptr [rcx - 0x100f43], al ; jmp qword ptr [rsi]
0x000000000040f160 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret
0x000000000040f2d8 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0x3141
0x000000000041abb2 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0xf40
0x0000000000412604 : add byte ptr [rax], al ; add byte ptr [rcx], cl ; ret 0x458b
0x000000000041295e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0x5588
0x0000000000412e39 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0x9588
0x0000000000414d4e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x000000000040a116 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000412a97 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x00000000004131be : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x0000000000415fbe : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040dce2 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000416623 : add byte ptr [rax], al ; add cl, ch ; ret
0x000000000041d2ec : add byte ptr [rax], al ; add cl, ch ; ret 2
0x0000000000429c6a : add byte ptr [rax], al ; add dh, -2 ; jmp rax
0x000000000042a332 : add byte ptr [rax], al ; add dword ptr fs:[rax], eax ; add al, cl ; popfq ; std ; call rax
0x0000000000403e1c : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041096f : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004048ac : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402293 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000042affe : add byte ptr [rax], al ; and byte ptr [rdx - 2], cl ; jmp rsi
0x0000000000429dfa : add byte ptr [rax], al ; and cl, 0xfe ; jmp qword ptr [rax]
0x000000000042cdd6 : add byte ptr [rax], al ; call 0x1142cd77
0x000000000042be66 : add byte ptr [rax], al ; call 0x1342bd29
0x000000000042be86 : add byte ptr [rax], al ; call 0x1342bd49
0x000000000042bea6 : add byte ptr [rax], al ; call 0x1342bd69
0x0000000000416026 : add byte ptr [rax], al ; call 0x402314
0x000000000042a776 : add byte ptr [rax], al ; cmc ; std ; call rdx
0x0000000000429d6a : add byte ptr [rax], al ; fdivp st(6) ; jmp rax
0x000000000042adba : add byte ptr [rax], al ; in al, dx ; or eax, dword ptr [rax] ; add al, dh ; cmp dh, bh ; jmp rsp
0x000000000042b13a : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; sldt word ptr [rax] ; xor byte ptr [rdi - 2], cl ; call rbx
0x00000000004023e9 : add byte ptr [rax], al ; jmp 0x4022a9
0x00000000004297aa : add byte ptr [rax], al ; jo 0x4297a7 ; std ; call rax
0x000000000042be82 : add byte ptr [rax], al ; mov ah, 0x1c ; add byte ptr [rax], al ; call 0x1342bd4d
0x000000000042973a : add byte ptr [rax], al ; mov bpl, -3 ; call qword ptr [rax]
0x0000000000416992 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x000000000041aa6b : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000041734a : add byte ptr [rax], al ; mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041747d : add byte ptr [rax], al ; mov eax, edi ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004175d9 : add byte ptr [rax], al ; mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040c93d : add byte ptr [rax], al ; mov eax, esi ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004173f1 : add byte ptr [rax], al ; mov eax, esi ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004176bc : add byte ptr [rax], al ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000413c42 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000423631 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x20] ; pop rbp ; ret
0x000000000042a272 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax], cl ; mov edi, ebp ; jmp rdx
0x000000000042a772 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add eax, 0xf5480000 ; std ; call rdx
0x000000000042b4fe : add byte ptr [rax], al ; nop ; jae 0x42b506 ; call rcx
0x000000000042ae1a : add byte ptr [rax], al ; or al, 0 ; add al, ah ; cmp bh, dh ; call qword ptr [rcx]
0x000000000040402c : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000419a6b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040b493 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000412886 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000042a83e : add byte ptr [rax], al ; push rax ; adc esi, edi ; call qword ptr [rcx]
0x00000000004296ea : add byte ptr [rax], al ; push rax ; lodsb al, byte ptr [rsi] ; std ; call rax
0x00000000004296fa : add byte ptr [rax], al ; push rax ; lodsd eax, dword ptr [rsi] ; std ; call qword ptr [rax]
0x000000000042bd22 : add byte ptr [rax], al ; push rsp ; sbb eax, dword ptr [rax] ; add byte ptr [rax], bh ; mov bh, -2 ; jmp qword ptr [rdi]
0x000000000042b27e : add byte ptr [rax], al ; rcl byte ptr [rbp - 2] ; jmp qword ptr [rdi]
0x000000000042636e : add byte ptr [rax], al ; ret
0x000000000040099e : add byte ptr [rax], al ; ret 3
0x000000000042977a : add byte ptr [rax], al ; rol cl, 1 ; std ; call qword ptr [rax]
0x000000000042c96e : add byte ptr [rax], al ; sbb dil, dil ; jmp rax
0x000000000042a93e : add byte ptr [rax], al ; sbb dil, sil ; call rdx
0x000000000042b4fa : add byte ptr [rax], al ; sub al, 0x13 ; add byte ptr [rax], al ; nop ; jae 0x42b50a ; call rcx
0x000000000042affa : add byte ptr [rax], al ; sub al, 0xe ; add byte ptr [rax], al ; and byte ptr [rdx - 2], cl ; jmp rsi
0x000000000042be62 : add byte ptr [rax], al ; xchg eax, esp ; sbb al, 0 ; add al, ch ; mov bh, -2 ; call qword ptr [rdx]
0x000000000042b13e : add byte ptr [rax], al ; xor byte ptr [rdi - 2], cl ; call rbx
0x000000000042bd27 : add byte ptr [rax], bh ; mov bh, -2 ; jmp qword ptr [rdi]
0x000000000042a277 : add byte ptr [rax], cl ; mov edi, ebp ; jmp rdx
0x0000000000429c03 : add byte ptr [rax], dh ; ret
0x000000000042ad5f : add byte ptr [rax], dl ; cmp dh, bh ; call qword ptr [rsi]
0x0000000000429dbb : add byte ptr [rax], dl ; loopne 0x429dc1 ; jmp qword ptr [rax]
0x000000000042a773 : add byte ptr [rbp + rax - 0xab80000], ah ; std ; call rdx
0x0000000000407afe : add byte ptr [rbp - 0x77], al ; ret 0x3141
0x00000000004134bd : add byte ptr [rbp - 0x77], al ; ret 0x3145
0x0000000000419a6c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040b494 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000412887 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000042bd23 : add byte ptr [rbx + rbx], dl ; add byte ptr [rax], bh ; mov bh, -2 ; jmp qword ptr [rdi]
0x000000000042b4fb : add byte ptr [rbx + rdx], ch ; add byte ptr [rax], al ; nop ; jae 0x42b509 ; call rcx
0x000000000040b4dd : add byte ptr [rbx - 0x76b7038b], cl ; ret 0xb0
0x0000000000404997 : add byte ptr [rbx - 0x76b72b8b], cl ; ret 0xb0
0x00000000004049f5 : add byte ptr [rbx - 0x76b7338b], cl ; ret 0xb0
0x0000000000404a3f : add byte ptr [rbx - 0x76b7378b], cl ; ret 0xb0
0x000000000040f308 : add byte ptr [rcx + 0x21ca31c2], cl ; ret 0xfa81
0x00000000004134a5 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x00000000004237ea : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x0000000000416a3a : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000042a333 : add byte ptr [rcx + rax], ah ; add al, cl ; popfq ; std ; call rax
0x000000000041baaf : add byte ptr [rcx - 0x100f43], al ; jmp qword ptr [rsi]
0x000000000040f162 : add byte ptr [rcx - 0x77], al ; ret
0x000000000040f2da : add byte ptr [rcx - 0x77], al ; ret 0x3141
0x0000000000413480 : add byte ptr [rcx - 0x77], al ; ret 0x8141
0x00000000004040a1 : add byte ptr [rcx - 0x78], al ; ret
0x00000000004259f5 : add byte ptr [rcx - 0xdf43], al ; call qword ptr [rax]
0x00000000004233cc : add byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x000000000041b8d9 : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000402b48 : add byte ptr [rcx], al ; ret
0x000000000041abb4 : add byte ptr [rcx], bh ; ret 0xf40
0x0000000000429df8 : add byte ptr [rcx], ch ; add byte ptr [rax], al ; and cl, 0xfe ; jmp qword ptr [rax]
0x0000000000412606 : add byte ptr [rcx], cl ; ret 0x458b
0x000000000041d2e8 : add byte ptr [rdi], cl ; lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x000000000041760a : add byte ptr [rdi], cl ; mov bh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000412960 : add byte ptr [rdi], cl ; pushfq ; ret 0x5588
0x0000000000412e3b : add byte ptr [rdi], cl ; pushfq ; ret 0x9588
0x0000000000414d50 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x000000000040a118 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000412a99 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x00000000004131c0 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x0000000000415fc0 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040dce4 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000040fe2d : add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x000000000042affb : add byte ptr [rsi + rcx], ch ; add byte ptr [rax], al ; and byte ptr [rdx - 2], cl ; jmp rsi
0x000000000042cdd3 : add byte ptr [rsp + rbp], al ; add byte ptr [rax], al ; call 0x1142cd7a
0x000000000042ae1b : add byte ptr [rsp + rcx], cl ; add al, ah ; cmp bh, dh ; call qword ptr [rcx]
0x0000000000429d69 : add byte ptr es:[rax], al ; fdivp st(6) ; jmp rax
0x000000000040e9cc : add cl, byte ptr [rax - 0x77] ; ret 0x148
0x0000000000416625 : add cl, ch ; ret
0x000000000041d2ee : add cl, ch ; ret 2
0x0000000000429c6c : add dh, -2 ; jmp rax
0x0000000000422695 : add dh, ch ; call 0x493427ec
0x0000000000411d72 : add dword ptr [rax + 0xf], eax ; mov dh, -0x39 ; pop rbp ; ret
0x000000000041a109 : add dword ptr [rax - 0x77], ecx ; ret 0x8148
0x000000000042a335 : add dword ptr [rax], eax ; add al, cl ; popfq ; std ; call rax
0x000000000041566f : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407afc : add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], al ; ret 0x3141
0x0000000000419a6a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040c371 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000412885 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004125d5 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x21ca31c2], cl ; ret 0xfa81
0x000000000041347e : add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], al ; ret 0x8141
0x0000000000425be2 : add dword ptr [rax], eax ; add byte ptr [rcx - 0xdf43], al ; call qword ptr [rax]
0x0000000000403757 : add dword ptr [rax], ecx ; ret 0x840
0x00000000004040ea : add dword ptr [rcx + 0xf], eax ; mov dh, -0x3f ; pop rbx ; pop rbp ; ret
0x000000000040cdb5 : add dword ptr [rcx + rax], esp ; movzx eax, al ; pop rbp ; ret
0x000000000040c9ab : add dword ptr [rdi], ecx ; mov dh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040c73d : add dword ptr [rdi], ecx ; mov dh, -0x3f ; pop rbp ; ret
0x0000000000405a0b : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004043bf : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404931 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040462f : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004047e8 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000404bb5 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000408adc : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000408b48 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x9588
0x0000000000409172 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xe280
0x000000000042a334 : add dword ptr fs:[rax], eax ; add al, cl ; popfq ; std ; call rax
0x0000000000402b44 : add eax, 0x22b9ce ; add ebx, esi ; ret
0x0000000000417111 : add eax, 0x48000000 ; add esp, 0x20 ; pop rbp ; ret
0x000000000041ec40 : add eax, 0x8301148b ; ret 0x89ee
0x000000000041d2eb : add eax, 0xe9000000 ; ret 2
0x000000000042a775 : add eax, 0xf5480000 ; std ; call rdx
0x000000000041e106 : add eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040ffbc : add eax, ecx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402b0b : add eax, edx ; sar rax, 1 ; jne 0x402b1c ; pop rbp ; ret
0x0000000000409fde : add ebx, dword ptr [rip - 0x76ba39df] ; ret 0x8141
0x0000000000402b49 : add ebx, esi ; ret
0x00000000004123b1 : add ecx, ebp ; ret 4
0x000000000040b742 : add edi, ebp ; sbb al, byte ptr [rcx - 0xa] ; jmp qword ptr [rcx]
0x000000000040bca3 : add esi, eax ; mov rax, rsi ; pop rbp ; ret
0x0000000000402d4b : add esp, 0x10 ; pop rbp ; ret
0x000000000041b8d7 : add esp, 0x100 ; pop rbp ; ret
0x000000000041bc6d : add esp, 0x1030 ; pop rbp ; ret
0x000000000040d59f : add esp, 0x1070 ; pop rbp ; ret
0x00000000004194b7 : add esp, 0x120 ; pop rbp ; ret
0x000000000041d61c : add esp, 0x130 ; pop rbp ; ret
0x0000000000412882 : add esp, 0x158 ; pop rbx ; pop rbp ; ret
0x00000000004162fc : add esp, 0x170 ; pop rbp ; ret
0x000000000042640b : add esp, 0x18 ; ret
0x000000000040542c : add esp, 0x180 ; pop rbp ; ret
0x00000000004092ec : add esp, 0x190 ; pop rbp ; ret
0x00000000004056af : add esp, 0x1a0 ; pop rbp ; ret
0x000000000040ee1c : add esp, 0x1b0 ; pop rbp ; ret
0x00000000004244e4 : add esp, 0x1b8 ; pop rbp ; ret
0x00000000004262f1 : add esp, 0x1c0 ; pop rbp ; ret
0x000000000041afee : add esp, 0x1e0 ; pop rbp ; ret
0x00000000004043c4 : add esp, 0x20 ; pop rbp ; ret
0x0000000000402e5d : add esp, 0x30 ; pop rbp ; ret
0x0000000000404634 : add esp, 0x40 ; pop rbp ; ret
0x0000000000404366 : add esp, 0x48 ; pop rbx ; pop rbp ; ret
0x000000000041cbcc : add esp, 0x480 ; pop rbp ; ret
0x00000000004047ed : add esp, 0x50 ; pop rbp ; ret
0x000000000040dad0 : add esp, 0x60 ; pop rbp ; ret
0x0000000000405844 : add esp, 0x68 ; pop rbx ; pop rbp ; ret
0x0000000000404bba : add esp, 0x70 ; pop rbp ; ret
0x000000000040974f : add esp, 0x80 ; pop rbp ; ret
0x000000000041bdf3 : add esp, 0x820 ; pop rbp ; ret
0x000000000040b965 : add esp, 0x90 ; pop rbp ; ret
0x0000000000413340 : add esp, 0xa0 ; pop rbp ; ret
0x00000000004167f3 : add esp, 0xb0 ; pop rbp ; ret
0x000000000040e02c : add esp, 0xc0 ; pop rbp ; ret
0x0000000000404582 : add esp, 0xd0 ; pop rbp ; ret
0x0000000000404028 : add esp, 0xe0 ; pop rbp ; ret
0x000000000041da68 : add esp, 0xf0 ; pop rbp ; ret
0x0000000000402296 : add esp, 8 ; ret
0x0000000000409798 : add esp, esi ; ret
0x000000000041e105 : add rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040ffbb : add rax, rcx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402b0a : add rax, rdx ; sar rax, 1 ; jne 0x402b1d ; pop rbp ; ret
0x000000000040bca2 : add rsi, rax ; mov rax, rsi ; pop rbp ; ret
0x0000000000402d4a : add rsp, 0x10 ; pop rbp ; ret
0x000000000041b8d6 : add rsp, 0x100 ; pop rbp ; ret
0x000000000041bc6c : add rsp, 0x1030 ; pop rbp ; ret
0x000000000040d59e : add rsp, 0x1070 ; pop rbp ; ret
0x00000000004194b6 : add rsp, 0x120 ; pop rbp ; ret
0x000000000041d61b : add rsp, 0x130 ; pop rbp ; ret
0x0000000000412881 : add rsp, 0x158 ; pop rbx ; pop rbp ; ret
0x00000000004162fb : add rsp, 0x170 ; pop rbp ; ret
0x000000000042640a : add rsp, 0x18 ; ret
0x000000000040542b : add rsp, 0x180 ; pop rbp ; ret
0x00000000004092eb : add rsp, 0x190 ; pop rbp ; ret
0x00000000004056ae : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000040ee1b : add rsp, 0x1b0 ; pop rbp ; ret
0x00000000004244e3 : add rsp, 0x1b8 ; pop rbp ; ret
0x00000000004262f0 : add rsp, 0x1c0 ; pop rbp ; ret
0x000000000041afed : add rsp, 0x1e0 ; pop rbp ; ret
0x00000000004043c3 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000402e5c : add rsp, 0x30 ; pop rbp ; ret
0x0000000000404633 : add rsp, 0x40 ; pop rbp ; ret
0x0000000000404365 : add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x000000000041cbcb : add rsp, 0x480 ; pop rbp ; ret
0x00000000004047ec : add rsp, 0x50 ; pop rbp ; ret
0x000000000040dacf : add rsp, 0x60 ; pop rbp ; ret
0x0000000000405843 : add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x0000000000404bb9 : add rsp, 0x70 ; pop rbp ; ret
0x000000000040974e : add rsp, 0x80 ; pop rbp ; ret
0x000000000041bdf2 : add rsp, 0x820 ; pop rbp ; ret
0x000000000040b964 : add rsp, 0x90 ; pop rbp ; ret
0x000000000041333f : add rsp, 0xa0 ; pop rbp ; ret
0x00000000004167f2 : add rsp, 0xb0 ; pop rbp ; ret
0x000000000040e02b : add rsp, 0xc0 ; pop rbp ; ret
0x0000000000404581 : add rsp, 0xd0 ; pop rbp ; ret
0x0000000000404027 : add rsp, 0xe0 ; pop rbp ; ret
0x000000000041da67 : add rsp, 0xf0 ; pop rbp ; ret
0x0000000000402295 : add rsp, 8 ; ret
0x0000000000429ce9 : and al, 0 ; add al, ah ; sar dh, cl ; jmp rax
0x0000000000412767 : and al, 0xffffffffffffffe8 ; ret
0x0000000000408adb : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000402b47 : and al, byte ptr [rax] ; add ebx, esi ; ret
0x000000000040d125 : and al, byte ptr [rcx - 0xa] ; jmp qword ptr [rcx]
0x0000000000411d70 : and bh, 1 ; movzx eax, dil ; pop rbp ; ret
0x000000000041bdf5 : and byte ptr [rax], cl ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000429c18 : and byte ptr [rcx], 0 ; add al, dl ; ret
0x00000000004194b9 : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042b000 : and byte ptr [rdx - 2], cl ; jmp rsi
0x0000000000429dfc : and cl, 0xfe ; jmp qword ptr [rax]
0x000000000040c73b : and cl, 1 ; movzx eax, cl ; pop rbp ; ret
0x00000000004040e8 : and cl, 1 ; movzx eax, r9b ; pop rbx ; pop rbp ; ret
0x0000000000411d6f : and dil, 1 ; movzx eax, dil ; pop rbp ; ret
0x0000000000429c19 : and dword ptr [rax], eax ; add al, dl ; ret
0x0000000000429c01 : and dword ptr [rax], eax ; add byte ptr [rax], dh ; ret
0x00000000004061e1 : and eax, 0x4279f7 ; call 0x4024d7
0x00000000004103d5 : and eax, 0x4285d0 ; mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x000000000040b4e7 : and eax, 0x48ffff74 ; add esp, 0x10 ; pop rbp ; ret
0x000000000040e41f : and eax, 0x630978 ; pop rbp ; ret
0x000000000040e57f : and eax, 0x630980 ; pop rbp ; ret
0x000000000040e5a3 : and eax, 0x630988 ; pop rbp ; ret
0x0000000000413764 : and eax, 0xffffff35 ; jmp qword ptr [rcx]
0x000000000041c529 : and eax, edx ; xor rdi, rdx ; or rax, rdi ; pop rbp ; ret
0x000000000041c7ae : and edx, eax ; mov al, dl ; movzx eax, al ; pop rbp ; ret
0x000000000041c688 : and edx, eax ; mov ax, dx ; movzx eax, ax ; pop rbp ; ret
0x000000000041e2ee : and edx, eax ; or r8d, edx ; mov dword ptr [rdi], r8d ; pop rbp ; ret
0x000000000041c437 : and edx, eax ; or r9d, edx ; mov eax, r9d ; pop rbp ; ret
0x000000000041c743 : and edx, ebx ; mov al, dl ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000041c7ad : and edx, r8d ; mov al, dl ; movzx eax, al ; pop rbp ; ret
0x000000000040f0c8 : and esi, dword ptr [rcx] ; adc byte ptr [rcx - 0xa], al ; jmp qword ptr [rcx]
0x000000000042ab81 : and esi, edi ; call qword ptr [rbx]
0x000000000042abe1 : and esi, edi ; jmp rdi
0x000000000040f0c7 : and r14d, dword ptr [r9] ; adc byte ptr [rcx - 0xa], al ; jmp qword ptr [rcx]
0x0000000000405475 : call 0x10028dc5
0x0000000000405474 : call 0x10028dc6
0x000000000042cdd8 : call 0x1142cd75
0x000000000042be68 : call 0x1342bd27
0x000000000042be88 : call 0x1342bd47
0x000000000042bea8 : call 0x1342bd67
0x000000000042453d : call 0x2104c68d
0x0000000000416028 : call 0x402312
0x00000000004087b2 : call 0x402319
0x00000000004061e6 : call 0x4024d2
0x0000000000406207 : call 0x4024f2
0x0000000000404a5f : call 0x403bed
0x0000000000404a5e : call 0x403bee
0x0000000000409c13 : call 0x415ea2
0x000000000040a1a7 : call 0x4263b2
0x000000000042601c : call 0x4853eb6f
0x000000000042601b : call 0x4853eb70
0x000000000040d796 : call 0x490360e6
0x000000000040d795 : call 0x490360e7
0x000000000040e8cf : call 0x4903721f
0x000000000040e8ce : call 0x49037220
0x0000000000422697 : call 0x493427ea
0x0000000000418f01 : call 0xffffffffca6b5191
0x0000000000418f00 : call 0xffffffffca6b5192
0x00000000004160b9 : call 0xffffffffe096ec0d
0x0000000000415379 : call 0xffffffffe903dcc9
0x0000000000415378 : call 0xffffffffe903dcca
0x00000000004124c8 : call 0xfffffffff1c2e486
0x00000000004108c1 : call 0xffffffffff7a9412
0x00000000004108c0 : call 0xffffffffff7a9413
0x00000000004109ff : call 0xffffffffff7a9550
0x00000000004109fe : call 0xffffffffff7a9551
0x00000000004044d6 : call 0xffffffffff7cfa6f
0x0000000000426349 : call qword ptr [r12 + rbx*8]
0x0000000000425904 : call qword ptr [rax]
0x0000000000425cb4 : call qword ptr [rbx]
0x0000000000425bdb : call qword ptr [rcx]
0x0000000000425c6c : call qword ptr [rdx]
0x0000000000425c1c : call qword ptr [rsi]
0x000000000042634a : call qword ptr [rsp + rbx*8]
0x000000000041255d : call r10
0x0000000000402b6d : call rax
0x00000000004150cc : call rbx
0x000000000042af63 : call rcx
0x000000000042b703 : call rdi
0x000000000041255e : call rdx
0x0000000000411c6a : clc ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041d61a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x000000000041005e : clc ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040cc13 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000410327 : clc ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041cbca : clc ; add rsp, 0x480 ; pop rbp ; ret
0x000000000041bfa8 : clc ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040dace : clc ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040d8fb : clc ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040f8c7 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x000000000041333e : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x00000000004167f1 : clc ; add rsp, 0xb0 ; pop rbp ; ret
0x0000000000411b60 : clc ; add rsp, 0xc0 ; pop rbp ; ret
0x0000000000413257 : clc ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000041bca8 : clc ; idiv edi ; call rax
0x0000000000402b0f : clc ; jne 0x402b18 ; pop rbp ; ret
0x000000000041c61a : clc ; mov ax, r8w ; movzx eax, ax ; pop rbp ; ret
0x0000000000413e15 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040b997 : clc ; mov dword ptr [rbp - 0xc], esi ; mov qword ptr [rbp - 0x18], rdx ; pop rbp ; ret
0x000000000041694b : clc ; mov dword ptr [rdi], 0 ; pop rbp ; ret
0x000000000041e05b : clc ; mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x000000000042344f : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000041708d : clc ; mov eax, dword ptr [rdx] ; jmp rcx
0x0000000000411b9e : clc ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000403e37 : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040fb1b : clc ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040fb3b : clc ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040fb5b : clc ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000041765b : clc ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000041769b : clc ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000041767b : clc ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000041c34c : clc ; mov rax, r8 ; pop rbp ; ret
0x0000000000422e89 : clc ; mov rsp, rbp ; pop rbp ; ret
0x0000000000403e3b : clc ; pop rbp ; ret
0x000000000041aa68 : cld ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000402d77 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041b8d5 : cld ; add rsp, 0x100 ; pop rbp ; ret
0x000000000041bc6b : cld ; add rsp, 0x1030 ; pop rbp ; ret
0x00000000004194b5 : cld ; add rsp, 0x120 ; pop rbp ; ret
0x0000000000418da6 : cld ; add rsp, 0x1b0 ; pop rbp ; ret
0x00000000004244e2 : cld ; add rsp, 0x1b8 ; pop rbp ; ret
0x00000000004262ef : cld ; add rsp, 0x1c0 ; pop rbp ; ret
0x000000000040c6a4 : cld ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041b27e : cld ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000417050 : cld ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041e042 : cld ; add rsp, 0x70 ; pop rbp ; ret
0x000000000041bdf1 : cld ; add rsp, 0x820 ; pop rbp ; ret
0x000000000040b963 : cld ; add rsp, 0x90 ; pop rbp ; ret
0x000000000040e02a : cld ; add rsp, 0xc0 ; pop rbp ; ret
0x000000000041aa03 : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000042344c : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000041b053 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040c6a1 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041b27b : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041b5df : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000413276 : cld ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000413279 : cld ; pop rbp ; ret
0x00000000004259f2 : cli ; add al, byte ptr [rax] ; add byte ptr [rcx - 0xdf43], al ; call qword ptr [rax]
0x000000000042a779 : cmc ; std ; call rdx
0x000000000040cc70 : cmp al, -0x2a ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004171ec : cmp al, -0x36 ; mov rdx, qword ptr [rbp - 0x20] ; call rax
0x0000000000406502 : cmp al, 0x25 ; jae 0x406587 ; add al, bpl ; ret
0x00000000004087b9 : cmp al, 0x25 ; ret 0x427d
0x000000000042ae21 : cmp bh, dh ; call qword ptr [rcx]
0x00000000004249e0 : cmp byte ptr [rcx - 0x77], al ; ret 0x8141
0x00000000004249d4 : cmp byte ptr [rcx], ah ; ret 0x8941
0x000000000042ad61 : cmp dh, bh ; call qword ptr [rsi]
0x000000000042adc1 : cmp dh, bh ; jmp rsp
0x00000000004102aa : cmp dword ptr [rax - 0x75], ecx ; jne 0x410294 ; call rax
0x0000000000425c9a : cmp dword ptr [rcx - 0xf], eax ; jmp qword ptr [rcx]
0x000000000041aed9 : cmp dword ptr [rdx - 0x76be63d5], ebx ; ret
0x0000000000402acd : cmp eax, 0xe ; mov rbp, rsp ; ja 0x402ae0 ; pop rbp ; ret
0x000000000041fe71 : cmp edi, dword ptr [rdx + 0x5a5335da] ; ret
0x0000000000409c12 : cwde ; call 0x415ea3
0x0000000000409c11 : cwde ; call 0x415ea4
0x0000000000407b58 : cwde ; jno 0x407b57 ; jmp qword ptr [rcx]
0x00000000004195ac : cwde ; mov rcx, qword ptr [rax*8 + 0x428d60] ; jmp rcx
0x000000000040d398 : dec byte ptr [rax + 0x29] ; ret 0x8948
0x00000000004183b8 : dec dword ptr [rax + 0x21] ; ret 0x6948
0x000000000041672a : dec dword ptr [rax + 0x29] ; ret 0x2948
0x000000000040ce7f : dec dword ptr [rax + 0x29] ; ret 0x8148
0x0000000000418b65 : dec dword ptr [rax + 0x3b] ; or byte ptr [r15], cl ; sahf ; ret 0xe280
0x0000000000418b7c : dec dword ptr [rax + 0x3b] ; sbb byte ptr [r15], cl ; sahf ; ret 0xe280
0x000000000041fe6e : dec dword ptr [rax - 0x46] ; cmp edi, dword ptr [rdx + 0x5a5335da] ; ret
0x00000000004087b6 : dec dword ptr [rax - 0x73] ; cmp al, 0x25 ; ret 0x427d
0x000000000040c8e9 : dec dword ptr [rax - 0x75] ; clc ; pop rbp ; ret
0x0000000000414344 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; enter 0x4286, 0 ; jmp rcx
0x0000000000420c64 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; enter 0x4293, 0 ; jmp rcx
0x0000000000403133 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; xor byte ptr [rdx + rax*2], ah ; jmp rcx
0x000000000042568b : dec dword ptr [rax - 0x75] ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 1
0x000000000040c436 : dec dword ptr [rax - 0x77] ; ret 0x1e8
0x000000000041675f : dec dword ptr [rax - 0x77] ; ret 0x2948
0x000000000041fa6f : dec dword ptr [rax - 0x77] ; ret 0x8148
0x00000000004044dc : dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000406c1d : dec dword ptr [rax - 0x77] ; ret 0xcae8
0x0000000000406fe8 : dec dword ptr [rax - 0x77] ; ret 0xffe8
0x000000000040a1a3 : dec dword ptr [rbx + 0x4e8947d] ; ret 1
0x000000000041257d : dec dword ptr [rcx + 0x21ca31c2] ; ret 0x8a44
0x000000000042563b : dec dword ptr [rcx + 0x31c621d6] ; ret 0xd609
0x0000000000403a24 : dec dword ptr [rcx - 0x76397639] ; ret 0x20e8
0x0000000000414ad2 : dec dword ptr [rcx - 0x77] ; ret 0x294d
0x0000000000413741 : dec dword ptr [rcx] ; ret 0xf709
0x000000000040cca0 : div dword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000040cc9f : div qword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000041b3d9 : enter -0x3577, -0x7f ; ret 0x8bd2
0x000000000041fe7e : enter -0x46b8, 0x3b ; mov edx, 0x5a5335da ; ret
0x00000000004102a7 : enter -0x74b8, 0x39 ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x00000000004104d3 : enter -0x74b8, 0x78 ; adc al, ch ; ret
0x0000000000405783 : enter -0x74b8, 0x7d ; fsubr st(0) ; ret
0x0000000000409884 : enter -0x7cb8, -0x3c ; pop rbp ; ret
0x000000000041e2cc : enter 0x4193, -0x77 ; ret 0x8141
0x0000000000414349 : enter 0x4286, 0 ; jmp rcx
0x0000000000420c69 : enter 0x4293, 0 ; jmp rcx
0x0000000000404062 : enter 0x44fd, 0x21 ; ret 0xf181
0x0000000000414e60 : enter 0x4b05, 0x34 ; fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x000000000040b69b : fcomp st(0), st(4) ; sti ; mov es, word ptr [rbp - 0x77] ; ret
0x000000000040a4da : fdiv qword ptr [rax + 0x2144d194] ; ret 0x941
0x000000000040a4b8 : fdiv qword ptr [rax - 0x76ba2e6c] ; ret
0x0000000000429d2d : fdiv st(6), st(0) ; jmp rax
0x0000000000429d7d : fdivp st(6) ; jmp qword ptr [rax]
0x0000000000429d6d : fdivp st(6) ; jmp rax
0x000000000040f118 : fiadd dword ptr [rcx - 0xa] ; jmp qword ptr [rcx]
0x000000000041394a : fiadd dword ptr [rcx - 0xf] ; jmp qword ptr [rcx]
0x0000000000414e64 : fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x000000000040b088 : fiadd word ptr [rcx - 0xf] ; jmp qword ptr [rcx]
0x000000000041c744 : fimul dword ptr [rax - 0x3f49f030] ; pop rbx ; pop rbp ; ret
0x0000000000417b65 : fimul word ptr [rax + 9] ; ret
0x0000000000402b67 : fisub word ptr [rdx] ; mov rbp, rsp ; call rax
0x0000000000408d9c : fld qword ptr [rcx - 0xa] ; jmp qword ptr [rcx]
0x0000000000408b44 : fmul dword ptr [r8 + 0x3b] ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x9588
0x000000000040fcc3 : fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x0000000000408b45 : fmul dword ptr [rax + 0x3b] ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x9588
0x000000000040fcc4 : fmul dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000404328 : fmul dword ptr [rax - 0x77] ; ret 0x8b48
0x00000000004048a3 : fmul dword ptr [rax - 0x77] ; ret 0xb0
0x000000000042568f : fmul dword ptr [rax - 0x7f] ; ret 1
0x0000000000408051 : fmul dword ptr [rbx - 0x74b4b] ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000041376e : fmul dword ptr [rcx + 0x31c621d6] ; ret 0xd609
0x000000000042634c : fmul qword ptr [rax - 0x7d] ; ret
0x000000000040b986 : fsub dword ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000040b987 : fsub dword ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x0000000000405787 : fsubr st(0) ; ret
0x0000000000406418 : fsubr st(0) ; ret 0x8a
0x0000000000424f93 : fsubr st(1) ; ret 0xffff
0x0000000000402d49 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040b99a : hlt ; mov qword ptr [rbp - 0x18], rdx ; pop rbp ; ret
0x0000000000402ae0 : hlt ; pop rbp ; mov edi, 0x62e4c0 ; jmp rax
0x0000000000416996 : hlt ; pop rbp ; ret
0x0000000000409799 : hlt ; ret
0x00000000004297ad : hlt ; std ; call rax
0x000000000041bca9 : idiv edi ; call rax
0x000000000040e9c8 : imul eax, dword ptr [rax - 0x77], 0x7a ; add cl, byte ptr [rax - 0x77] ; ret 0x148
0x000000000040ba55 : imul edi, edi, -1 ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041354a : in al, 0x21 ; ret 0xd709
0x0000000000404843 : in al, 0x48 ; add esp, 0x20 ; pop rbp ; ret
0x00000000004049f3 : in al, 0x62 ; add byte ptr [rbx - 0x76b7338b], cl ; ret 0xb0
0x000000000040b547 : in al, dx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041db93 : in al, dx ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042adbc : in al, dx ; or eax, dword ptr [rax] ; add al, dh ; cmp dh, bh ; jmp rsp
0x0000000000422e8c : in al, dx ; pop rbp ; ret
0x000000000040cdb3 : in eax, -0x50 ; add dword ptr [rcx + rax], esp ; movzx eax, al ; pop rbp ; ret
0x0000000000413273 : in eax, -0x77 ; jge 0x41327b ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000417363 : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x0000000000404322 : in eax, 0x62 ; add byte ptr [rax - 0x77], cl ; push rbp ; fmul dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000416a36 : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000429c17 : inc dword ptr [rax - 0x2fffffdf] ; ret
0x0000000000429db7 : inc dword ptr [rax] ; sub byte ptr [rax], al ; add byte ptr [rax], dl ; loopne 0x429dc5 ; jmp qword ptr [rax]
0x000000000040aac3 : inc dword ptr [rbp - 0x77] ; ret 0x8141
0x0000000000407af8 : inc dword ptr [rcx + 0x1fff1] ; add byte ptr [rbp - 0x77], al ; ret 0x3141
0x000000000041c944 : inc dword ptr [rcx - 0x46343] ; jmp qword ptr [rdx]
0x0000000000413449 : inc dword ptr [rcx - 0x77] ; ret 0x8141
0x00000000004150eb : inc dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000429d67 : inc eax ; add byte ptr es:[rax], al ; fdivp st(6) ; jmp rax
0x0000000000429ce7 : inc eax ; and al, 0 ; add al, ah ; sar dh, cl ; jmp rax
0x0000000000429de7 : inc eax ; sub byte ptr [rax], al ; add al, ah ; loopne 0x429df5 ; jmp rax
0x000000000042b13c : insb byte ptr [rdi], dx ; sldt word ptr [rax] ; xor byte ptr [rdi - 2], cl ; call rbx
0x0000000000409083 : insd dword ptr [rdi], dx ; sbb dword ptr [rcx - 0xe], eax ; jmp qword ptr [rcx]
0x0000000000419bd5 : int 0x80
0x000000000041603f : int 0xc2
0x0000000000407c36 : int1 ; adc dword ptr [rcx - 0xf], eax ; jmp qword ptr [rcx]
0x00000000004134b9 : int1 ; xchg eax, edx ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], al ; ret 0x3145
0x0000000000402ad3 : ja 0x402ada ; pop rbp ; ret
0x0000000000411ba1 : ja 0x411bee ; pop rbp ; ret
0x0000000000406504 : jae 0x406585 ; add al, bpl ; ret
0x000000000042b501 : jae 0x42b503 ; call rcx
0x0000000000407676 : jb 0x40769b ; ret 0x941
0x0000000000413762 : jbe 0x41379c ; and eax, 0xffffff35 ; jmp qword ptr [rcx]
0x0000000000402adf : je 0x402add ; pop rbp ; mov edi, 0x62e4c0 ; jmp rax
0x0000000000403e36 : jge 0x403e37 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000409c0d : jge 0x409bff ; mov qword ptr [rbp - 0x68], rax ; call 0x415ea8
0x000000000040a1a5 : jge 0x40a13f ; call 0x4263b4
0x000000000040fb1a : jge 0x40fb1b ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040fb3a : jge 0x40fb3b ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040fb5a : jge 0x40fb5b ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000040ff10 : jge 0x40ff03 ; mov rcx, qword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x00000000004114e0 : jge 0x4114d3 ; mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000411b9d : jge 0x411b9e ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000413275 : jge 0x413279 ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000413548 : jge 0x4134fd ; in al, 0x21 ; ret 0xd709
0x000000000041694a : jge 0x41694d ; mov dword ptr [rdi], 0 ; pop rbp ; ret
0x0000000000417366 : jge 0x417363 ; pop rbp ; ret
0x000000000041765a : jge 0x41765b ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000041767a : jge 0x41767b ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000041769a : jge 0x41769b ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x00000000004176c0 : jge 0x4176bd ; pop rbp ; ret
0x000000000041c96d : jge 0x41c931 ; call rax
0x000000000041caa3 : jge 0x41ca6e ; mov rsi, qword ptr [rbp - 0x460] ; call rax
0x000000000041cb00 : jge 0x41cac4 ; call rax
0x000000000041cb7e : jge 0x41cb3a ; call rax
0x000000000041cbb0 : jge 0x41cb6c ; call rax
0x000000000041e05a : jge 0x41e05d ; mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x0000000000412c5c : jl 0x412c81 ; ret 0xd709
0x0000000000412c5b : jl 0x412c82 ; ret 0xd709
0x0000000000412c5a : jl 0x412c83 ; ret 0xd709
0x000000000040cda4 : jle 0x40cdbd ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000423728 : jmp 0x33b836
0x00000000004023eb : jmp 0x4022a7
0x0000000000403959 : jmp 0x403967
0x0000000000423be4 : jmp 0x423c29
0x0000000000410760 : jmp 0x490390b0
0x00000000004111de : jmp 0x49039b2e
0x000000000041124b : jmp 0x49039b9b
0x00000000004119dc : jmp 0x4903a32c
0x0000000000411a49 : jmp 0x4903a399
0x0000000000416cd1 : jmp 0xffffffff8a03f5de
0x00000000004207c4 : jmp 0xffffffff8a0490dc
0x000000000041a108 : jmp 0xffffffffc2cae912
0x0000000000429bff : jmp qword ptr [rax]
0x000000000040857c : jmp qword ptr [rcx]
0x0000000000406fed : jmp qword ptr [rdi]
0x000000000041c94a : jmp qword ptr [rdx]
0x000000000041bab5 : jmp qword ptr [rsi]
0x0000000000402ae7 : jmp rax
0x000000000040313c : jmp rcx
0x000000000042abe3 : jmp rdi
0x0000000000402b27 : jmp rdx
0x000000000042b003 : jmp rsi
0x000000000042adc3 : jmp rsp
0x0000000000402b10 : jne 0x402b17 ; pop rbp ; ret
0x0000000000407c35 : jne 0x407c30 ; adc dword ptr [rcx - 0xf], eax ; jmp qword ptr [rcx]
0x000000000040b999 : jne 0x40b996 ; mov qword ptr [rbp - 0x18], rdx ; pop rbp ; ret
0x000000000040cca1 : jne 0x40cc99 ; mov rax, rdx ; pop rbp ; ret
0x000000000040ff86 : jne 0x40ff71 ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x00000000004102ad : jne 0x410291 ; call rax
0x0000000000411e52 : jne 0x411e4a ; mov rax, rdx ; pop rbp ; ret
0x000000000041213b : jne 0x41210b ; mov rdx, qword ptr [rbp - 0x28] ; call rax
0x0000000000416939 : jne 0x41691d ; mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x0000000000418601 : jne 0x4185f9 ; mov rax, rdx ; pop rbp ; ret
0x000000000041ce06 : jne 0x41cdfe ; mov rax, rdx ; pop rbp ; ret
0x0000000000407b59 : jno 0x407b56 ; jmp qword ptr [rcx]
0x0000000000412ff8 : jno 0x41301d ; ret 0xd709
0x0000000000404060 : jnp 0x404002 ; enter 0x44fd, 0x21 ; ret 0xf181
0x0000000000404bbc : jo 0x404c1d ; ret
0x0000000000409c47 : jo 0x409ca8 ; ret
0x000000000040d5a1 : jo 0x40d5b8 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040d8ff : jo 0x40d960 ; ret
0x0000000000413f65 : jo 0x413fc6 ; ret
0x000000000041558f : jo 0x4155f5 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000415c34 : jo 0x415c95 ; ret
0x0000000000415d6e : jo 0x415dcf ; ret
0x00000000004162fe : jo 0x416306 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041767f : jo 0x4176e0 ; ret
0x000000000041767e : jo 0x4176e1 ; ret
0x000000000041e046 : jo 0x41e0a7 ; ret
0x00000000004297ac : jo 0x4297a5 ; std ; call rax
0x0000000000406505 : jp 0x40654d ; add al, ch ; ret
0x0000000000408d9a : lea eax, dword ptr [rdi] ; fld qword ptr [rcx - 0xa] ; jmp qword ptr [rcx]
0x00000000004195b2 : lea eax, dword ptr [rdx] ; jmp rcx
0x000000000041d2ea : lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x00000000004061df : lea edi, dword ptr [0x4279f7] ; call 0x4024d9
0x0000000000412ff7 : lea esi, dword ptr [rcx + 0x21] ; ret 0xd709
0x0000000000408963 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000408962 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004073c0 : lock sub dword ptr [rcx - 0xf], eax ; jmp qword ptr [rcx]
0x0000000000408d99 : lodsb al, byte ptr [rsi] ; lea eax, dword ptr [rdi] ; fld qword ptr [rcx - 0xa] ; jmp qword ptr [rcx]
0x00000000004296ed : lodsb al, byte ptr [rsi] ; std ; call rax
0x0000000000413547 : lodsd eax, dword ptr [rsi] ; jge 0x4134fe ; in al, 0x21 ; ret 0xd709
0x00000000004296fd : lodsd eax, dword ptr [rsi] ; std ; call qword ptr [rax]
0x000000000040a4b7 : loop 0x40a49c ; mov al, -0x6c ; rol dword ptr [rbp - 0x77], 1 ; ret
0x00000000004040e9 : loope 0x4040f4 ; movzx eax, r9b ; pop rbx ; pop rbp ; ret
0x0000000000409fdb : loope 0x40a015 ; sub al, 3 ; sbb eax, 0x8945c621 ; ret 0x8141
0x000000000040c73c : loope 0x40c745 ; movzx eax, cl ; pop rbp ; ret
0x000000000041e2c9 : loope 0x41e324 ; enter 0x4193, -0x77 ; ret 0x8141
0x0000000000429dfd : loope 0x429dff ; jmp qword ptr [rax]
0x000000000040402a : loopne 0x404031 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000404ff9 : loopne 0x405000 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040d445 : loopne 0x40d3d9 ; adc byte ptr [rbx - 0x3e7e13b3], cl ; ret 0x241b
0x000000000040eb9b : loopne 0x40ebeb ; add esp, 0x20 ; pop rbp ; ret
0x000000000040eb9a : loopne 0x40ebec ; add esp, 0x20 ; pop rbp ; ret
0x000000000040f66f : loopne 0x40f6bf ; add esp, 0x20 ; pop rbp ; ret
0x000000000040f66e : loopne 0x40f6c0 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040fa0e : loopne 0x40fa5e ; add esp, 0x30 ; pop rbp ; ret
0x000000000040fa0d : loopne 0x40fa5f ; add esp, 0x30 ; pop rbp ; ret
0x000000000040faff : loopne 0x40fb4f ; add esp, 0x30 ; pop rbp ; ret
0x000000000040fafe : loopne 0x40fb50 ; add esp, 0x30 ; pop rbp ; ret
0x000000000040ff87 : loopne 0x40ffd9 ; mov esi, eax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000041325b : loopne 0x413262 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041953e : loopne 0x4194fa ; ret
0x000000000041aa07 : loopne 0x41aa0e ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041aff0 : loopne 0x41aff8 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000423636 : loopne 0x423697 ; ret
0x0000000000423635 : loopne 0x423698 ; ret
0x0000000000429dbd : loopne 0x429dbf ; jmp qword ptr [rax]
0x0000000000429ded : loopne 0x429def ; jmp rax
0x0000000000413661 : mov ah, -0x75 ; ror byte ptr [r9 + 0x21ca31c2], 1 ; ret 0x458b
0x0000000000418892 : mov ah, -0x77 ; ret 0xca29
0x000000000042be84 : mov ah, 0x1c ; add byte ptr [rax], al ; call 0x1342bd4b
0x000000000040fe8e : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040a4b9 : mov al, -0x6c ; rol dword ptr [rbp - 0x77], 1 ; ret
0x00000000004167f5 : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040c649 : mov al, 0 ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000406205 : mov al, 0 ; call 0x4024f4
0x0000000000415b0b : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000415998 : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x00000000004296e8 : mov al, 0xc ; add byte ptr [rax], al ; push rax ; lodsb al, byte ptr [rsi] ; std ; call rax
0x00000000004297a8 : mov al, 0xf ; add byte ptr [rax], al ; jo 0x4297a9 ; std ; call rax
0x000000000040ee1e : mov al, 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040cdb4 : mov al, 1 ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000408ad8 : mov al, byte ptr [rbp - 0xa] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004097e4 : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040c916 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040bc2e : mov al, byte ptr [rbp - 9] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041c7b0 : mov al, dl ; movzx eax, al ; pop rbp ; ret
0x000000000041c745 : mov al, dl ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000041c68a : mov ax, dx ; movzx eax, ax ; pop rbp ; ret
0x000000000041c61b : mov ax, r8w ; movzx eax, ax ; pop rbp ; ret
0x000000000041760c : mov bh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041c620 : mov bh, -0x40 ; pop rbp ; ret
0x000000000042be69 : mov bh, -2 ; call qword ptr [rdx]
0x000000000042bd29 : mov bh, -2 ; jmp qword ptr [rdi]
0x0000000000409081 : mov bh, 0x60 ; insd dword ptr [rdi], dx ; sbb dword ptr [rcx - 0xe], eax ; jmp qword ptr [rcx]
0x0000000000408bdc : mov bh, 0x68 ; sbb al, byte ptr [rcx - 0xa] ; jmp qword ptr [rcx]
0x000000000042973c : mov bpl, -3 ; call qword ptr [rax]
0x000000000040e5a1 : mov byte ptr [0x630988], al ; pop rbp ; ret
0x000000000040f53b : mov byte ptr [rbp - 1], 0x3f ; movsx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x00000000004089b7 : mov byte ptr [rdx + 0x19], cl ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040f3b2 : mov byte ptr [rdx + 0xb], 0 ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040e1c5 : mov byte ptr [rdx + rax], 0 ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000402b43 : mov byte ptr [rip + 0x22b9ce], 1 ; ret
0x000000000042973d : mov ch, -3 ; call qword ptr [rax]
0x000000000041f9ac : mov cl, -0x32 ; ret
0x0000000000412ff6 : mov cl, -0x73 ; jno 0x41301f ; ret 0xd709
0x0000000000411d75 : mov dh, -0x39 ; pop rbp ; ret
0x000000000040c9ad : mov dh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040c73f : mov dh, -0x3f ; pop rbp ; ret
0x00000000004040ed : mov dh, -0x3f ; pop rbx ; pop rbp ; ret
0x0000000000405a0d : mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004043c1 : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404933 : mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404631 : mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004047ea : mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000405841 : mov dh, -0x40 ; add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x0000000000404bb7 : mov dh, -0x40 ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000408ade : mov dh, -0x40 ; pop rbp ; ret
0x000000000041c748 : mov dh, -0x40 ; pop rbx ; pop rbp ; ret
0x0000000000416936 : mov dh, -0xe ; mov dword ptr [rbp - 0x24], esi ; mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x000000000042b701 : mov dh, bh ; call rdi
0x000000000042972d : mov dl, -3 ; call rax
0x000000000040e41d : mov dword ptr [0x630978], edi ; pop rbp ; ret
0x000000000040e57d : mov dword ptr [0x630980], edi ; pop rbp ; ret
0x0000000000413e16 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000413dd8 : mov dword ptr [rax], eax ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000413c94 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000413dd7 : mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000412557 : mov dword ptr [rbp - 0x12c], edx ; call r10
0x000000000040bb9f : mov dword ptr [rbp - 0x18], eax ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040b99c : mov dword ptr [rbp - 0x18], edx ; pop rbp ; ret
0x000000000041ccfa : mov dword ptr [rbp - 0x1c], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040eb99 : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000416938 : mov dword ptr [rbp - 0x24], esi ; mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x000000000040b985 : mov dword ptr [rbp - 0x28], eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000402e59 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000409882 : mov dword ptr [rbp - 0x38], eax ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040fe8c : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041c1b8 : mov dword ptr [rbp - 0x50], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000406237 : mov dword ptr [rbp - 0x510], esi ; call 0x4024d8
0x0000000000409c10 : mov dword ptr [rbp - 0x68], eax ; call 0x415ea5
0x0000000000402d47 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040b998 : mov dword ptr [rbp - 0xc], esi ; mov qword ptr [rbp - 0x18], rdx ; pop rbp ; ret
0x0000000000402d75 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000413274 : mov dword ptr [rbp - 4], edi ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000423838 : mov dword ptr [rbp - 4], edx ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000042344d : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040e401 : mov dword ptr [rbp - 8], eax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000403e35 : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000417365 : mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x000000000041b1a1 : mov dword ptr [rbp - 8], edx ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000413e8e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405705 : mov dword ptr [rcx + 0x38], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405755 : mov dword ptr [rcx + 0x40], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000413983 : mov dword ptr [rcx], eax ; mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x00000000004103da : mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x0000000000411ba0 : mov dword ptr [rdi + 0x48], esi ; pop rbp ; ret
0x000000000041694c : mov dword ptr [rdi], 0 ; pop rbp ; ret
0x000000000041e05c : mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x000000000041e2f4 : mov dword ptr [rdi], eax ; pop rbp ; ret
0x000000000041e2f3 : mov dword ptr [rdi], r8d ; pop rbp ; ret
0x000000000040cda3 : mov dword ptr [rsi + 0x10], edi ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004244e6 : mov eax, 0x5d000001 ; ret
0x000000000040916f : mov eax, 0xf013b48 ; xchg eax, esp ; ret 0xe280
0x000000000041c968 : mov eax, dword ptr [rax + 0x10] ; mov rdi, qword ptr [rbp - 0x40] ; call rax
0x000000000041cbab : mov eax, dword ptr [rax + 0x18] ; mov rdi, qword ptr [rbp - 0x48] ; call rax
0x000000000041ca0e : mov eax, dword ptr [rax] ; mov rdi, qword ptr [rbp - 0x460] ; call rax
0x000000000041cb7a : mov eax, dword ptr [rax] ; mov rdi, qword ptr [rbp - 0x48] ; call rax
0x0000000000413c48 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040e7cd : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040eb63 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040e78b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000413c45 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004176e1 : mov eax, dword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040eabf : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040b545 : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040e8f0 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000413bfd : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000413c8e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040bba3 : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000404841 : mov eax, dword ptr [rbp - 0x1c] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040f66d : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040fa0c : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040ff8c : mov eax, dword ptr [rbp - 0x20] ; call rax
0x0000000000423634 : mov eax, dword ptr [rbp - 0x20] ; pop rbp ; ret
0x000000000040d680 : mov eax, dword ptr [rbp - 0x24] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000413985 : mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x000000000041173f : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000416cb2 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000413dda : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004172e1 : mov eax, dword ptr [rbp - 0x2c] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040cb4b : mov eax, dword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000413f5f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000415b09 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000416994 : mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x000000000041b054 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040c6a2 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041b27c : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041704e : mov eax, dword ptr [rbp - 4] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041e040 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000413277 : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000411c68 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041005c : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040cc11 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000410325 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041bfa6 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040dacc : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040d8f9 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000422e87 : mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000403e39 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040fb1d : mov eax, dword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040fb3d : mov eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040fb5d : mov eax, dword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000041765d : mov eax, dword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000041769d : mov eax, dword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000041767d : mov eax, dword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000416bea : mov eax, dword ptr [rdx] ; jmp rcx
0x0000000000404363 : mov eax, eax ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x000000000041c61d : mov eax, eax ; movzx eax, ax ; pop rbp ; ret
0x000000000041c34e : mov eax, eax ; pop rbp ; ret
0x000000000041734c : mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041c43d : mov eax, ecx ; pop rbp ; ret
0x000000000041747f : mov eax, edi ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004105c1 : mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040baad : mov eax, edx ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041c68b : mov eax, edx ; movzx eax, ax ; pop rbp ; ret
0x000000000040cca4 : mov eax, edx ; pop rbp ; ret
0x000000000040c93f : mov eax, esi ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004173f3 : mov eax, esi ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040bca6 : mov eax, esi ; pop rbp ; ret
0x0000000000404362 : mov eax, r8d ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x000000000041c61c : mov eax, r8d ; movzx eax, ax ; pop rbp ; ret
0x000000000041c43c : mov eax, r9d ; pop rbp ; ret
0x000000000041ca12 : mov ebp, 0xfffffba0 ; call rax
0x0000000000402b6b : mov ebp, esp ; call rax
0x0000000000402ad1 : mov ebp, esp ; ja 0x402adc ; pop rbp ; ret
0x0000000000413272 : mov ebp, esp ; mov dword ptr [rbp - 4], edi ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000417362 : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000041fe80 : mov ecx, 0x35daba3b ; push rbx ; pop rdx ; ret
0x000000000041dc23 : mov ecx, 0x48fffe46 ; add esp, 0x10 ; pop rbp ; ret
0x0000000000419bed : mov ecx, 0x5b2a830a ; ret
0x0000000000402b46 : mov ecx, 0xf3010022 ; ret
0x0000000000403135 : mov ecx, dword ptr [rax*8 + 0x426430] ; jmp rcx
0x0000000000412f6c : mov ecx, dword ptr [rax*8 + 0x428600] ; jmp rcx
0x0000000000414022 : mov ecx, dword ptr [rax*8 + 0x428680] ; jmp rcx
0x0000000000414346 : mov ecx, dword ptr [rax*8 + 0x4286c8] ; jmp rcx
0x0000000000416be6 : mov ecx, dword ptr [rax*8 + 0x428ba8] ; jmp rcx
0x0000000000416e81 : mov ecx, dword ptr [rax*8 + 0x428bd0] ; jmp rcx
0x000000000041708a : mov ecx, dword ptr [rax*8 + 0x428bf8] ; jmp rcx
0x00000000004195ae : mov ecx, dword ptr [rax*8 + 0x428d60] ; jmp rcx
0x000000000041a79e : mov ecx, dword ptr [rax*8 + 0x4290d0] ; jmp rcx
0x000000000041a71e : mov ecx, dword ptr [rax*8 + 0x429130] ; jmp rcx
0x0000000000420c66 : mov ecx, dword ptr [rax*8 + 0x4293c8] ; jmp rcx
0x000000000041ec67 : mov ecx, dword ptr [rax*8 + 0x429450] ; jmp rcx
0x0000000000423897 : mov ecx, dword ptr [rax*8 + 0x4294a0] ; jmp rcx
0x00000000004258f6 : mov ecx, dword ptr [rax*8 + 0x429578] ; jmp rcx
0x0000000000413c91 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000410922 : mov ecx, dword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x00000000004108bf : mov ecx, dword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000413980 : mov ecx, dword ptr [rbp - 0x20] ; mov dword ptr [rcx], eax ; mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x000000000040ff13 : mov ecx, dword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x00000000004114e3 : mov ecx, dword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000041c91b : mov ecx, dword ptr [rbp - 0x48] ; call rax
0x00000000004115b0 : mov ecx, dword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000402b65 : mov edi, 0x62de20 ; mov rbp, rsp ; call rax
0x0000000000402ae2 : mov edi, 0x62e4c0 ; jmp rax
0x0000000000402b22 : mov edi, 0x62e4c0 ; jmp rdx
0x0000000000409c0c : mov edi, dword ptr [rbp - 0x18] ; mov qword ptr [rbp - 0x68], rax ; call 0x415ea9
0x000000000041c96c : mov edi, dword ptr [rbp - 0x40] ; call rax
0x000000000041ca11 : mov edi, dword ptr [rbp - 0x460] ; call rax
0x000000000041cb7d : mov edi, dword ptr [rbp - 0x48] ; call rax
0x000000000040a1a4 : mov edi, dword ptr [rbp - 0x6c] ; call 0x4263b5
0x0000000000411b9c : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040fb19 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040fb39 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040fb59 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000417659 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000417699 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000417679 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x00000000004108c3 : mov edi, dword ptr [rcx] ; call rax
0x00000000004102a9 : mov edi, dword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x00000000004171eb : mov edi, dword ptr [rdx + rcx*8] ; mov rdx, qword ptr [rbp - 0x20] ; call rax
0x000000000042a279 : mov edi, ebp ; jmp rdx
0x0000000000426347 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000426346 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000041fe70 : mov edx, 0x35daba3b ; push rbx ; pop rdx ; ret
0x000000000040f6ed : mov edx, 0x4fdaf5a1 ; ret
0x000000000041fe72 : mov edx, 0x5a5335da ; ret
0x00000000004171ef : mov edx, dword ptr [rbp - 0x20] ; call rax
0x000000000041213e : mov edx, dword ptr [rbp - 0x28] ; call rax
0x000000000041c917 : mov edx, dword ptr [rbp - 0x40] ; mov rcx, qword ptr [rbp - 0x48] ; call rax
0x00000000004176e5 : mov edx, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040b69e : mov es, word ptr [rbp - 0x77] ; ret
0x000000000040f6dd : mov esi, 0x4fdaf5a1 ; ret
0x00000000004102ac : mov esi, dword ptr [rbp - 0x20] ; call rax
0x000000000041213a : mov esi, dword ptr [rbp - 0x38] ; mov rdx, qword ptr [rbp - 0x28] ; call rax
0x000000000041caa6 : mov esi, dword ptr [rbp - 0x460] ; call rax
0x000000000040ff17 : mov esi, dword ptr [rcx] ; call rax
0x0000000000406203 : mov esi, eax ; mov al, 0 ; call 0x4024f6
0x0000000000402b20 : mov esi, eax ; mov edi, 0x62e4c0 ; jmp rdx
0x000000000040ff89 : mov esi, eax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000041305a : mov esp, 0x218264b0 ; ret 0xd709
0x0000000000422e8b : mov esp, ebp ; pop rbp ; ret
0x000000000040e41c : mov qword ptr [0x630978], rdi ; pop rbp ; ret
0x000000000040e57c : mov qword ptr [0x630980], rdi ; pop rbp ; ret
0x000000000040bb9e : mov qword ptr [rbp - 0x18], rax ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040b99b : mov qword ptr [rbp - 0x18], rdx ; pop rbp ; ret
0x0000000000409c0f : mov qword ptr [rbp - 0x68], rax ; call 0x415ea6
0x000000000040e400 : mov qword ptr [rbp - 8], rax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000403e34 : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000417364 : mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000041b1a0 : mov qword ptr [rbp - 8], rdx ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000413e8d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405704 : mov qword ptr [rcx + 0x38], rax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405754 : mov qword ptr [rcx + 0x40], rax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000411b9f : mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000418891 : mov r12b, -0x77 ; ret 0xca29
0x000000000040fe8d : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000415b0a : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000041c967 : mov rax, qword ptr [rax + 0x10] ; mov rdi, qword ptr [rbp - 0x40] ; call rax
0x000000000041cbaa : mov rax, qword ptr [rax + 0x18] ; mov rdi, qword ptr [rbp - 0x48] ; call rax
0x000000000041cb79 : mov rax, qword ptr [rax] ; mov rdi, qword ptr [rbp - 0x48] ; call rax
0x000000000040e7cc : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040eb62 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040e78a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000413c44 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004176e0 : mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040eabe : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040e8ef : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000413bfc : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040bba2 : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040f66c : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040fa0b : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040ff8b : mov rax, qword ptr [rbp - 0x20] ; call rax
0x0000000000423633 : mov rax, qword ptr [rbp - 0x20] ; pop rbp ; ret
0x000000000041173e : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040cb4a : mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000413f5e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000415b08 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000411c67 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041005b : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040cc10 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000410324 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041bfa5 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040dacb : mov rax, qword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040d8f8 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000422e86 : mov rax, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000403e38 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040fb1c : mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040fb3c : mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040fb5c : mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000041765c : mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000041769c : mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000041767c : mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000041c34d : mov rax, r8 ; pop rbp ; ret
0x00000000004105c0 : mov rax, rdx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040baac : mov rax, rdx ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040cca3 : mov rax, rdx ; pop rbp ; ret
0x000000000040bca5 : mov rax, rsi ; pop rbp ; ret
0x0000000000402b6a : mov rbp, rsp ; call rax
0x0000000000402ad0 : mov rbp, rsp ; ja 0x402add ; pop rbp ; ret
0x0000000000417361 : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000403134 : mov rcx, qword ptr [rax*8 + 0x426430] ; jmp rcx
0x0000000000412f6b : mov rcx, qword ptr [rax*8 + 0x428600] ; jmp rcx
0x0000000000414021 : mov rcx, qword ptr [rax*8 + 0x428680] ; jmp rcx
0x0000000000414345 : mov rcx, qword ptr [rax*8 + 0x4286c8] ; jmp rcx
0x0000000000416be5 : mov rcx, qword ptr [rax*8 + 0x428ba8] ; jmp rcx
0x0000000000416e80 : mov rcx, qword ptr [rax*8 + 0x428bd0] ; jmp rcx
0x0000000000417089 : mov rcx, qword ptr [rax*8 + 0x428bf8] ; jmp rcx
0x00000000004195ad : mov rcx, qword ptr [rax*8 + 0x428d60] ; jmp rcx
0x000000000041a79d : mov rcx, qword ptr [rax*8 + 0x4290d0] ; jmp rcx
0x000000000041a71d : mov rcx, qword ptr [rax*8 + 0x429130] ; jmp rcx
0x0000000000420c65 : mov rcx, qword ptr [rax*8 + 0x4293c8] ; jmp rcx
0x000000000041ec66 : mov rcx, qword ptr [rax*8 + 0x429450] ; jmp rcx
0x0000000000423896 : mov rcx, qword ptr [rax*8 + 0x4294a0] ; jmp rcx
0x00000000004258f5 : mov rcx, qword ptr [rax*8 + 0x429578] ; jmp rcx
0x0000000000410921 : mov rcx, qword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x00000000004108be : mov rcx, qword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040ff12 : mov rcx, qword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x00000000004114e2 : mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000041c91a : mov rcx, qword ptr [rbp - 0x48] ; call rax
0x00000000004115af : mov rcx, qword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000041c96b : mov rdi, qword ptr [rbp - 0x40] ; call rax
0x000000000041ca10 : mov rdi, qword ptr [rbp - 0x460] ; call rax
0x000000000041cb7c : mov rdi, qword ptr [rbp - 0x48] ; call rax
0x0000000000411b9b : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040fb18 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040fb38 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040fb58 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000417658 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000417698 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000417678 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x00000000004108c2 : mov rdi, qword ptr [rcx] ; call rax
0x00000000004102a8 : mov rdi, qword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x00000000004171ea : mov rdi, qword ptr [rdx + rcx*8] ; mov rdx, qword ptr [rbp - 0x20] ; call rax
0x00000000004171ee : mov rdx, qword ptr [rbp - 0x20] ; call rax
0x000000000041213d : mov rdx, qword ptr [rbp - 0x28] ; call rax
0x000000000041c916 : mov rdx, qword ptr [rbp - 0x40] ; mov rcx, qword ptr [rbp - 0x48] ; call rax
0x00000000004176e4 : mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004102ab : mov rsi, qword ptr [rbp - 0x20] ; call rax
0x0000000000412139 : mov rsi, qword ptr [rbp - 0x38] ; mov rdx, qword ptr [rbp - 0x28] ; call rax
0x000000000041caa5 : mov rsi, qword ptr [rbp - 0x460] ; call rax
0x000000000040ff16 : mov rsi, qword ptr [rcx] ; call rax
0x0000000000406202 : mov rsi, rax ; mov al, 0 ; call 0x4024f7
0x0000000000402b1f : mov rsi, rax ; mov edi, 0x62e4c0 ; jmp rdx
0x000000000040ff88 : mov rsi, rax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x0000000000422e8a : mov rsp, rbp ; pop rbp ; ret
0x0000000000417c6e : mov word ptr [rbx - 0x1874b], cs ; jmp qword ptr [rcx]
0x00000000004178bd : movabs al, byte ptr [0x148000000022d48] ; ret 0x3948
0x000000000040ce7c : movabs al, byte ptr [0x8148c22948ffffef] ; ret 0xffff
0x0000000000429c14 : movabs al, byte ptr [0xd000002180fffec3] ; ret
0x000000000040bbde : movabs al, byte ptr [0xfffffff2810a7f50] ; jmp qword ptr [rcx]
0x000000000041ab00 : movabs dword ptr [0x941c90941f0213f], eax ; ret 0x3145
0x000000000042a274 : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax], cl ; mov edi, ebp ; jmp rdx
0x000000000042a774 : movsb byte ptr [rdi], byte ptr [rsi] ; add eax, 0xf5480000 ; std ; call rdx
0x000000000040f53f : movsx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000422f2a : movsx eax, cl ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405a0c : movzx eax, al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004043c0 : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404932 : movzx eax, al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404630 : movzx eax, al ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004047e9 : movzx eax, al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000405840 : movzx eax, al ; add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x0000000000404bb6 : movzx eax, al ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000408add : movzx eax, al ; pop rbp ; ret
0x000000000041c747 : movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000041c61f : movzx eax, ax ; pop rbp ; ret
0x0000000000411d74 : movzx eax, bh ; pop rbp ; ret
0x000000000040c9ac : movzx eax, cl ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040c73e : movzx eax, cl ; pop rbp ; ret
0x00000000004040ec : movzx eax, cl ; pop rbx ; pop rbp ; ret
0x000000000041760b : movzx eax, cx ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000411d73 : movzx eax, dil ; pop rbp ; ret
0x00000000004040eb : movzx eax, r9b ; pop rbx ; pop rbp ; ret
0x0000000000408ad9 : mul byte ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x0000000000408ada : mul byte ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000040bc2f : mul dword ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000040bc30 : mul dword ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000042b500 : nop ; jae 0x42b504 ; call rcx
0x0000000000426368 : nop dword ptr [rax + rax] ; ret
0x000000000040d396 : or ah, bl ; dec byte ptr [rax + 0x29] ; ret 0x8948
0x000000000042ae1d : or al, 0 ; add al, ah ; cmp bh, dh ; call qword ptr [rcx]
0x00000000004296f9 : or al, 0 ; add byte ptr [rax - 0x53], dl ; std ; call qword ptr [rax]
0x00000000004296e9 : or al, 0 ; add byte ptr [rax - 0x54], dl ; std ; call rax
0x00000000004146ad : or al, 0x18 ; ret 0x6451
0x000000000041708b : or al, 0xffffffffffffffc5 ; clc ; mov eax, dword ptr [rdx] ; jmp rcx
0x0000000000414347 : or al, 0xffffffffffffffc5 ; enter 0x4286, 0 ; jmp rcx
0x0000000000420c67 : or al, 0xffffffffffffffc5 ; enter 0x4293, 0 ; jmp rcx
0x0000000000403136 : or al, 0xffffffffffffffc5 ; xor byte ptr [rdx + rax*2], ah ; jmp rcx
0x000000000042abdd : or al, byte ptr [rax] ; add al, ah ; and esi, edi ; jmp rdi
0x000000000040bbe1 : or al, byte ptr [rcx - 0xe] ; jmp qword ptr [rcx]
0x0000000000415618 : or al, ch ; ret 0xfecc
0x0000000000418b68 : or byte ptr [r15], cl ; sahf ; ret 0xe280
0x000000000041692d : or byte ptr [r15], cl ; xchg eax, edi ; ret 0xe280
0x000000000040ccf3 : or byte ptr [r15], cl ; xchg eax, esp ; ret 0x5588
0x0000000000412a93 : or byte ptr [rcx + 0x2df9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x00000000004131ba : or byte ptr [rcx + 0x2df9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x000000000041295a : or byte ptr [rcx + 0x38f9], al ; add byte ptr [rdi], cl ; pushfq ; ret 0x5588
0x0000000000412e35 : or byte ptr [rcx + 0x38f9], al ; add byte ptr [rdi], cl ; pushfq ; ret 0x9588
0x000000000040dcde : or byte ptr [rcx + 0x39f9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000418b69 : or byte ptr [rdi], cl ; sahf ; ret 0xe280
0x000000000041692e : or byte ptr [rdi], cl ; xchg eax, edi ; ret 0xe280
0x000000000040ccf4 : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x000000000040e421 : or dword ptr [rbx], esp ; pop rbp ; ret
0x0000000000429729 : or eax, 0xb2c00000 ; std ; call rax
0x0000000000429739 : or eax, 0xb5400000 ; std ; call qword ptr [rax]
0x000000000042adbd : or eax, dword ptr [rax] ; add al, dh ; cmp dh, bh ; jmp rsp
0x00000000004296b9 : or eax, dword ptr [rax] ; add al, dh ; xchg eax, edi ; std ; call qword ptr [rax]
0x00000000004296a9 : or eax, dword ptr [rax] ; add al, dl ; xchg eax, esi ; std ; call rax
0x0000000000415cf1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042ad5d : or eax, dword ptr [rax] ; add byte ptr [rax], dl ; cmp dh, bh ; call qword ptr [rsi]
0x000000000040f3b4 : or eax, dword ptr [rax] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041c34b : or eax, edi ; mov rax, r8 ; pop rbp ; ret
0x000000000041c52f : or eax, edi ; pop rbp ; ret
0x000000000041e2f1 : or eax, edx ; mov dword ptr [rdi], r8d ; pop rbp ; ret
0x000000000040629d : or ebp, dword ptr [rax] ; xchg eax, ebx ; rol byte ptr [rcx - 0xf], cl ; jmp qword ptr [rcx]
0x000000000041c43a : or ecx, edx ; mov eax, r9d ; pop rbp ; ret
0x000000000041c34a : or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x000000000041e2f0 : or r8d, edx ; mov dword ptr [rdi], r8d ; pop rbp ; ret
0x000000000041c439 : or r9d, edx ; mov eax, r9d ; pop rbp ; ret
0x000000000041c52e : or rax, rdi ; pop rbp ; ret
0x0000000000411d71 : out 1, eax ; movzx eax, dil ; pop rbp ; ret
0x0000000000422696 : out dx, al ; call 0x493427eb
0x000000000040fe19 : outsb dx, byte ptr [rsi] ; ret 0x280f
0x000000000040a088 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042635c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000415591 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040a08a : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042635e : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040a08c : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000426360 : pop r14 ; pop r15 ; ret
0x0000000000408967 : pop r14 ; pop rbp ; ret
0x000000000040a08e : pop r15 ; pop rbp ; ret
0x0000000000426362 : pop r15 ; ret
0x0000000000412884 : pop rax ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000402b42 : pop rbp ; mov byte ptr [rip + 0x22b9ce], 1 ; ret
0x0000000000402ae1 : pop rbp ; mov edi, 0x62e4c0 ; jmp rax
0x0000000000402b1e : pop rbp ; mov rsi, rax ; mov edi, 0x62e4c0 ; jmp rdx
0x000000000042635b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040a08b : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042635f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000402ad5 : pop rbp ; ret
0x0000000000415590 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000419a6d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000408966 : pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004040ef : pop rbx ; pop rbp ; ret
0x0000000000419bf1 : pop rbx ; ret
0x000000000040a08f : pop rdi ; pop rbp ; ret
0x0000000000426363 : pop rdi ; ret
0x000000000041fe76 : pop rdx ; ret
0x000000000040a08d : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000426361 : pop rsi ; pop r15 ; ret
0x0000000000408968 : pop rsi ; pop rbp ; ret
0x000000000040a089 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042635d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000415592 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040fe30 : pop rsp ; ret 0xf66
0x000000000042a339 : popfq ; std ; call rax
0x00000000004038fa : push -0x76000001 ; ret 0xca29
0x000000000040ba54 : push 0x48ffff6b ; add esp, 0x10 ; pop rbp ; ret
0x00000000004296e7 : push qword ptr [rax + 0x5000000c] ; lodsb al, byte ptr [rsi] ; std ; call rax
0x00000000004297a7 : push qword ptr [rax + 0x7000000f] ; hlt ; std ; call rax
0x00000000004296a7 : push qword ptr [rax - 0x2ffffff5] ; xchg eax, esi ; std ; call rax
0x0000000000429727 : push qword ptr [rax - 0x3ffffff3] ; mov dl, -3 ; call rax
0x000000000041765e : push r8 ; pop rbp ; ret
0x000000000042a840 : push rax ; adc esi, edi ; call qword ptr [rcx]
0x00000000004296ec : push rax ; lodsb al, byte ptr [rsi] ; std ; call rax
0x00000000004296fc : push rax ; lodsd eax, dword ptr [rsi] ; std ; call qword ptr [rax]
0x00000000004296f7 : push rax ; or al, 0 ; add byte ptr [rax - 0x53], dl ; std ; call qword ptr [rax]
0x0000000000429737 : push rax ; or eax, 0xb5400000 ; std ; call qword ptr [rax]
0x00000000004296b7 : push rax ; or eax, dword ptr [rax] ; add al, dh ; xchg eax, edi ; std ; call qword ptr [rax]
0x00000000004047ef : push rax ; pop rbp ; ret
0x000000000042453c : push rbp ; call 0x2104c68e
0x000000000041b1a2 : push rbp ; clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004176e6 : push rbp ; clc ; pop rbp ; ret
0x0000000000423839 : push rbp ; cld ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000404327 : push rbp ; fmul dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000042568e : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 1
0x000000000041376d : push rbp ; fmul dword ptr [rcx + 0x31c621d6] ; ret 0xd609
0x0000000000402b64 : push rbp ; mov edi, 0x62de20 ; mov rbp, rsp ; call rax
0x0000000000417360 : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000041c015 : push rbp ; ror byte ptr [rax - 0x77], 1 ; ret 0x31e8
0x000000000041fe75 : push rbx ; pop rdx ; ret
0x000000000041e2ca : push rdx ; enter 0x4193, -0x77 ; ret 0x8141
0x00000000004249df : push rsp ; cmp byte ptr [rcx - 0x77], al ; ret 0x8141
0x00000000004249d3 : push rsp ; cmp byte ptr [rcx], ah ; ret 0x8941
0x000000000042bd24 : push rsp ; sbb eax, dword ptr [rax] ; add byte ptr [rax], bh ; mov bh, -2 ; jmp qword ptr [rdi]
0x0000000000403954 : pushfq ; ret
0x0000000000412962 : pushfq ; ret 0x5588
0x0000000000412e3d : pushfq ; ret 0x9588
0x000000000042b280 : rcl byte ptr [rbp - 2] ; jmp qword ptr [rdi]
0x00000000004002da : ret
0x0000000000406554 : ret 0
0x0000000000423e41 : ret 0x10
0x000000000040dc57 : ret 0x13
0x0000000000412de4 : ret 0x141
0x000000000040e9cf : ret 0x148
0x000000000041572e : ret 0x1b2
0x000000000040c439 : ret 0x1e8
0x0000000000423b58 : ret 0x1fe4
0x0000000000424540 : ret 0x20
0x0000000000403a2a : ret 0x20e8
0x000000000040ac78 : ret 0x2145
0x0000000000411dff : ret 0x2148
0x00000000004029f2 : ret 0x22b9
0x00000000004027f2 : ret 0x22ba
0x00000000004025f2 : ret 0x22bb
0x00000000004023f2 : ret 0x22bc
0x000000000040d44e : ret 0x241b
0x000000000040edb5 : ret 0x26a8
0x000000000040fe1a : ret 0x280f
0x000000000040d799 : ret 0x2948
0x0000000000414ab9 : ret 0x294c
0x0000000000414ad5 : ret 0x294d
0x000000000040935a : ret 0x30e8
0x0000000000407b01 : ret 0x3141
0x00000000004134c0 : ret 0x3145
0x000000000041c019 : ret 0x31e8
0x00000000004178c6 : ret 0x3948
0x000000000040d16d : ret 0x3b48
0x0000000000423be3 : ret 0x3eeb
0x00000000004087bb : ret 0x427d
0x0000000000416cd4 : ret 0x4589
0x000000000040b2dd : ret 0x458b
0x000000000040a13a : ret 0x4a
0x000000000040d1c8 : ret 0x4a8b
0x000000000042070a : ret 0x50e8
0x0000000000404a70 : ret 0x5147
0x00000000004240d7 : ret 0x54c8
0x0000000000409436 : ret 0x54e8
0x000000000040ccf7 : ret 0x5588
0x000000000041365b : ret 0x5589
0x000000000040da03 : ret 0x57e8
0x00000000004238cb : ret 0x5ef2
0x00000000004146af : ret 0x6451
0x0000000000424034 : ret 0x651d
0x00000000004183bb : ret 0x6948
0x0000000000423c7c : ret 0x744a
0x00000000004237ee : ret 0x8041
0x0000000000407659 : ret 0x8141
0x000000000040ce82 : ret 0x8148
0x0000000000405478 : ret 0x830f
0x000000000042429a : ret 0x8334
0x0000000000410763 : ret 0x8348
0x0000000000403759 : ret 0x840
0x00000000004054a7 : ret 0x840f
0x0000000000416a3e : ret 0x8445
0x00000000004207c7 : ret 0x8589
0x0000000000408601 : ret 0x858b
0x000000000040d0a6 : ret 0x870f
0x0000000000414d53 : ret 0x8840
0x000000000040f014 : ret 0x8844
0x00000000004074cd : ret 0x8941
0x0000000000404361 : ret 0x8944
0x000000000040adc1 : ret 0x8948
0x0000000000414ad8 : ret 0x8949
0x000000000040adcf : ret 0x894d
0x000000000041c689 : ret 0x8966
0x0000000000414c6c : ret 0x89a5
0x000000000041ec45 : ret 0x89ee
0x000000000040641a : ret 0x8a
0x0000000000412583 : ret 0x8a44
0x0000000000407b07 : ret 0x8b44
0x000000000040432b : ret 0x8b48
0x000000000041b3dd : ret 0x8bd2
0x0000000000407a52 : ret 0x8d88
0x0000000000424744 : ret 0x9303
0x0000000000407678 : ret 0x941
0x0000000000405e1b : ret 0x9588
0x0000000000417afe : ret 0x9589
0x0000000000403645 : ret 0xb0
0x000000000040d38e : ret 0xb848
0x000000000041d529 : ret 0xb849
0x000000000040dfa2 : ret 0xb8e8
0x00000000004107e6 : ret 0xb948
0x000000000041cd8e : ret 0xb949
0x000000000042079d : ret 0xbde8
0x00000000004133ac : ret 0xbe01
0x000000000042420d : ret 0xc0c2
0x000000000041a969 : ret 0xc131
0x0000000000402b05 : ret 0xc148
0x000000000041d290 : ret 0xc2f6
0x0000000000404ed7 : ret 0xc3e8
0x000000000042421a : ret 0xc4c0
0x0000000000408580 : ret 0xc889
0x00000000004125a8 : ret 0xc981
0x0000000000424444 : ret 0xc996
0x00000000004183be : ret 0xca00
0x0000000000403f35 : ret 0xca21
0x00000000004038ff : ret 0xca29
0x000000000040f30a : ret 0xca31
0x0000000000406c20 : ret 0xcae8
0x000000000041c7af : ret 0xd088
0x000000000040b66e : ret 0xd089
0x0000000000415fc3 : ret 0xd284
0x000000000041366f : ret 0xd2f7
0x000000000040dd09 : ret 0xd366
0x0000000000407c1d : ret 0xd609
0x0000000000412205 : ret 0xd709
0x0000000000424ba0 : ret 0xd83a
0x000000000041e512 : ret 0xd8e8
0x00000000004085af : ret 0xdbe8
0x0000000000423e3b : ret 0xddeb
0x0000000000408ee6 : ret 0xe280
0x00000000004125fb : ret 0xe281
0x000000000040dff7 : ret 0xea80
0x000000000040d503 : ret 0xea81
0x000000000040b14c : ret 0xee8
0x000000000040c288 : ret 0xf01
0x0000000000414d68 : ret 0xf180
0x0000000000404066 : ret 0xf181
0x000000000040373d : ret 0xf280
0x0000000000403537 : ret 0xf281
0x000000000041abb6 : ret 0xf40
0x00000000004097a3 : ret 0xf401
0x000000000040fe31 : ret 0xf66
0x0000000000413743 : ret 0xf709
0x000000000041c684 : ret 0xfa31
0x0000000000406ad6 : ret 0xfa81
0x000000000040b290 : ret 0xfae8
0x0000000000414aed : ret 0xfde8
0x000000000041c04a : ret 0xfe68
0x000000000041561a : ret 0xfecc
0x00000000004111f0 : ret 0xff3
0x0000000000404c4a : ret 0xffdc
0x0000000000406feb : ret 0xffe8
0x0000000000402c0a : ret 0xfff8
0x000000000041602a : ret 0xfffe
0x00000000004061e8 : ret 0xffff
0x00000000004096cb : ret 1
0x000000000041d2f0 : ret 2
0x00000000004009a0 : ret 3
0x00000000004123b3 : ret 4
0x000000000040edaf : ret 8
0x000000000040e05a : ret 9
0x0000000000404584 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040435d : rol byte ptr [rbp + 0xf], 0x44 ; ret 0x8944
0x000000000041c733 : rol byte ptr [rbp + 9], 1 ; ret
0x000000000041e2f2 : rol byte ptr [rcx + rcx*4 + 7], 1 ; pop rbp ; ret
0x0000000000413dd6 : rol byte ptr [rcx + rcx*4], 1 ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004062a0 : rol byte ptr [rcx - 0xf], cl ; jmp qword ptr [rcx]
0x000000000042977c : rol cl, 1 ; std ; call qword ptr [rax]
0x000000000040c73a : rol dword ptr [rax - 0x49f0fe1f], -0x3f ; pop rbp ; ret
0x000000000040a4bb : rol dword ptr [rbp - 0x77], 1 ; ret
0x000000000040f168 : rol dword ptr [rcx + 0x21], cl ; ret
0x000000000041c43b : rol dword ptr [rcx + rcx*4 - 0x38], 1 ; pop rbp ; ret
0x0000000000412c59 : rol dword ptr [rdi + 0x4f], 1 ; jl 0x412c84 ; ret 0xd709
0x000000000041cb77 : ror byte ptr [r8 - 0x75], 1 ; add byte ptr [rax - 0x75], cl ; jge 0x41cb41 ; call rax
0x0000000000419bd0 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000413f60 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x413fcb ; ret
0x0000000000413663 : ror byte ptr [r9 + 0x21ca31c2], 1 ; ret 0x458b
0x000000000041c52a : ror byte ptr [rax + 0x31], 1 ; xlatb ; or rax, rdi ; pop rbp ; ret
0x0000000000402b0c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x402b1b ; pop rbp ; ret
0x000000000041c966 : ror byte ptr [rax - 0x75], 1 ; adc byte ptr [rax - 0x75], cl ; jge 0x41c938 ; call rax
0x000000000041caf9 : ror byte ptr [rax - 0x75], 1 ; adc byte ptr [rax - 0x75], cl ; jge 0x41cacb ; call rax
0x000000000041cb78 : ror byte ptr [rax - 0x75], 1 ; add byte ptr [rax - 0x75], cl ; jge 0x41cb40 ; call rax
0x000000000041cba9 : ror byte ptr [rax - 0x75], 1 ; sbb byte ptr [rax - 0x75], cl ; jge 0x41cb73 ; call rax
0x0000000000419bd1 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000414aad : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000414ab6 : ror byte ptr [rax - 0x77], 1 ; ret 0x294c
0x000000000041c016 : ror byte ptr [rax - 0x77], 1 ; ret 0x31e8
0x0000000000404bb8 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x404c21 ; ret
0x0000000000409c43 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x409cac ; ret
0x0000000000413f61 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x413fca ; ret
0x0000000000404632 : ror byte ptr [rax - 0x7d], -0x3c ; pop rbp ; ret
0x0000000000404364 : ror byte ptr [rax - 0x7d], -0x3c ; pop rbx ; pop rbp ; ret
0x00000000004047eb : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x000000000040d59d : ror byte ptr [rax - 0x7f], -0x3c ; jo 0x40d5bc ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004162fa : ror byte ptr [rax - 0x7f], -0x3c ; jo 0x41630a ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000404026 : ror byte ptr [rax - 0x7f], -0x3c ; loopne 0x404035 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000404580 : ror byte ptr [rax - 0x7f], -0x3c ; rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000413664 : ror byte ptr [rcx + 0x21ca31c2], 1 ; ret 0x458b
0x000000000041c68c : ror byte ptr [rdi], 1 ; mov bh, -0x40 ; pop rbp ; ret
0x000000000041c7b1 : ror byte ptr [rdi], 1 ; mov dh, -0x40 ; pop rbp ; ret
0x000000000041c746 : ror byte ptr [rdi], 1 ; mov dh, -0x40 ; pop rbx ; pop rbp ; ret
0x000000000041cd98 : ror dword ptr [rbp - 0x77], cl ; ret
0x000000000040a134 : ror dword ptr [rcx - 0x17ff4f32], 1 ; ret 0x4a
0x0000000000412ff5 : sahf ; mov cl, -0x73 ; jno 0x413020 ; ret 0xd709
0x0000000000418b6b : sahf ; ret 0xe280
0x0000000000416b4b : sahf ; rol byte ptr [rcx - 0xf], cl ; jmp qword ptr [rcx]
0x000000000040cc71 : salc ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000413761 : salc ; jbe 0x41379d ; and eax, 0xffffff35 ; jmp qword ptr [rcx]
0x0000000000407c34 : salc ; jne 0x407c31 ; adc dword ptr [rcx - 0xf], eax ; jmp qword ptr [rcx]
0x0000000000429ced : sar dh, cl ; jmp rax
0x0000000000402b0e : sar eax, 1 ; jne 0x402b19 ; pop rbp ; ret
0x0000000000402b0d : sar rax, 1 ; jne 0x402b1a ; pop rbp ; ret
0x000000000042be65 : sbb al, 0 ; add al, ch ; mov bh, -2 ; call qword ptr [rdx]
0x0000000000408bde : sbb al, byte ptr [rcx - 0xa] ; jmp qword ptr [rcx]
0x000000000042c971 : sbb bh, bh ; jmp rax
0x000000000042a941 : sbb bh, dh ; call rdx
0x0000000000418b7f : sbb byte ptr [r15], cl ; sahf ; ret 0xe280
0x000000000041cbad : sbb byte ptr [rax - 0x75], cl ; jge 0x41cb6f ; call rax
0x000000000041cbac : sbb byte ptr [rax - 0x75], cl ; jge 0x41cb70 ; call rax
0x0000000000418b80 : sbb byte ptr [rdi], cl ; sahf ; ret 0xe280
0x000000000042c970 : sbb dil, dil ; jmp rax
0x000000000042a940 : sbb dil, sil ; call rdx
0x0000000000409084 : sbb dword ptr [rcx - 0xe], eax ; jmp qword ptr [rcx]
0x0000000000424029 : sbb eax, 0x81d55b65 ; ret 8
0x0000000000409fdf : sbb eax, 0x8945c621 ; ret 0x8141
0x000000000042bd25 : sbb eax, dword ptr [rax] ; add byte ptr [rax], bh ; mov bh, -2 ; jmp qword ptr [rdi]
0x0000000000413549 : scasd eax, dword ptr [rdi] ; in al, 0x21 ; ret 0xd709
0x00000000004105e4 : sete al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040cd13 : setne al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040cd15 : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000413671 : shl byte ptr [rcx], cl ; ret 0x5589
0x0000000000429d28 : shl byte ptr [rip - 0x23200000], -2 ; jmp rax
0x000000000040fe4f : shl dword ptr [rsi + 0xf], 0x5c ; ret 0xf66
0x0000000000429de8 : shr byte ptr [rax], 0 ; add al, ah ; loopne 0x429df4 ; jmp rax
0x00000000004297a9 : sldt word ptr [rax] ; jo 0x4297a8 ; std ; call rax
0x000000000042b13d : sldt word ptr [rax] ; xor byte ptr [rdi - 2], cl ; call rbx
0x0000000000412a95 : stc ; sub eax, 0xf000000 ; xchg eax, esp ; ret 0x5588
0x00000000004131bc : stc ; sub eax, 0xf000000 ; xchg eax, esp ; ret 0x9588
0x00000000004296be : std ; call qword ptr [rax]
0x00000000004296ae : std ; call rax
0x000000000042a77a : std ; call rdx
0x000000000042a27a : std ; jmp rdx
0x00000000004296e6 : std ; push qword ptr [rax + 0x5000000c] ; lodsb al, byte ptr [rsi] ; std ; call rax
0x00000000004297a6 : std ; push qword ptr [rax + 0x7000000f] ; hlt ; std ; call rax
0x00000000004296a6 : std ; push qword ptr [rax - 0x2ffffff5] ; xchg eax, esi ; std ; call rax
0x0000000000429726 : std ; push qword ptr [rax - 0x3ffffff3] ; mov dl, -3 ; call rax
0x00000000004296f6 : std ; push rax ; or al, 0 ; add byte ptr [rax - 0x53], dl ; std ; call qword ptr [rax]
0x0000000000429736 : std ; push rax ; or eax, 0xb5400000 ; std ; call qword ptr [rax]
0x00000000004296b6 : std ; push rax ; or eax, dword ptr [rax] ; add al, dh ; xchg eax, edi ; std ; call qword ptr [rax]
0x000000000040b743 : std ; sbb al, byte ptr [rcx - 0xa] ; jmp qword ptr [rcx]
0x000000000040c918 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040b69d : sti ; mov es, word ptr [rbp - 0x77] ; ret
0x000000000040f117 : stosb byte ptr [rdi], al ; fiadd dword ptr [rcx - 0xa] ; jmp qword ptr [rcx]
0x000000000042b4fc : sub al, 0x13 ; add byte ptr [rax], al ; nop ; jae 0x42b508 ; call rcx
0x000000000042affc : sub al, 0xe ; add byte ptr [rax], al ; and byte ptr [rdx - 2], cl ; jmp rsi
0x0000000000409fdd : sub al, 3 ; sbb eax, 0x8945c621 ; ret 0x8141
0x0000000000429de9 : sub byte ptr [rax], al ; add al, ah ; loopne 0x429df3 ; jmp rax
0x0000000000429db9 : sub byte ptr [rax], al ; add byte ptr [rax], dl ; loopne 0x429dc3 ; jmp qword ptr [rax]
0x00000000004073c1 : sub dword ptr [rcx - 0xf], eax ; jmp qword ptr [rcx]
0x0000000000419bef : sub dword ptr [rdx], 0x5b ; ret
0x0000000000412a96 : sub eax, 0xf000000 ; xchg eax, esp ; ret 0x5588
0x00000000004131bd : sub eax, 0xf000000 ; xchg eax, esp ; ret 0x9588
0x000000000040bca0 : sub eax, edx ; add rsi, rax ; mov rax, rsi ; pop rbp ; ret
0x0000000000426411 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000426410 : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000409b74 : test al, -0x18 ; ret
0x000000000042636a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004103d7 : test dword ptr [rdx], eax ; mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x0000000000417d82 : test dword ptr [rsi + rdi*8 - 1], esp ; jmp qword ptr [rcx]
0x000000000041bca7 : test edi, eax ; idiv edi ; call rax
0x000000000042b601 : test edi, esi ; jmp qword ptr [rdi]
0x0000000000412f70 : xchg byte ptr [rdx], al ; jmp rcx
0x0000000000416b49 : xchg byte ptr [rsi + rbx*4], al ; rol byte ptr [rcx - 0xf], cl ; jmp qword ptr [rcx]
0x000000000040fe2b : xchg dword ptr [rcx], eax ; add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x00000000004134a8 : xchg eax, ebp ; ret
0x00000000004237ed : xchg eax, ebp ; ret 0x8041
0x0000000000416a3d : xchg eax, ebp ; ret 0x8445
0x0000000000414d52 : xchg eax, ebp ; ret 0x8840
0x000000000040cd14 : xchg eax, ebp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000422694 : xchg eax, ebx ; add dh, ch ; call 0x493427ed
0x000000000040629f : xchg eax, ebx ; rol byte ptr [rcx - 0xf], cl ; jmp qword ptr [rcx]
0x0000000000416930 : xchg eax, edi ; ret 0xe280
0x00000000004296bd : xchg eax, edi ; std ; call qword ptr [rax]
0x00000000004134ba : xchg eax, edx ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], al ; ret 0x3145
0x000000000040c739 : xchg eax, edx ; rol dword ptr [rax - 0x49f0fe1f], -0x3f ; pop rbp ; ret
0x00000000004296ad : xchg eax, esi ; std ; call rax
0x000000000040a1a6 : xchg eax, esp ; call 0x4263b3
0x000000000040a11a : xchg eax, esp ; ret
0x000000000040ccf6 : xchg eax, esp ; ret 0x5588
0x0000000000408b4a : xchg eax, esp ; ret 0x9588
0x0000000000415fc2 : xchg eax, esp ; ret 0xd284
0x0000000000409174 : xchg eax, esp ; ret 0xe280
0x000000000040a4ba : xchg eax, esp ; rol dword ptr [rbp - 0x77], 1 ; ret
0x000000000042be64 : xchg eax, esp ; sbb al, 0 ; add al, ch ; mov bh, -2 ; call qword ptr [rdx]
0x00000000004105e5 : xchg eax, esp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000041c349 : xlatb ; or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x000000000041c52d : xlatb ; or rax, rdi ; pop rbp ; ret
0x000000000040e9c6 : xor al, 0x6a ; imul eax, dword ptr [rax - 0x77], 0x7a ; add cl, byte ptr [rax - 0x77] ; ret 0x148
0x000000000041bc6f : xor byte ptr [rax], dl ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041d61e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042b140 : xor byte ptr [rdi - 2], cl ; call rbx
0x0000000000403138 : xor byte ptr [rdx + rax*2], ah ; jmp rcx
0x0000000000413763 : xor dword ptr [rip - 0xcb], esp ; jmp qword ptr [rcx]
0x0000000000415a87 : xor eax, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x0000000000413dd5 : xor eax, edx ; mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000041c348 : xor edi, edx ; or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x000000000041c52c : xor edi, edx ; or rax, rdi ; pop rbp ; ret
0x0000000000423836 : xor edx, eax ; mov dword ptr [rbp - 4], edx ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000407674 : xor esi, edi ; jb 0x40769d ; ret 0x941
0x000000000041c52b : xor rdi, rdx ; or rax, rdi ; pop rbp ; ret
