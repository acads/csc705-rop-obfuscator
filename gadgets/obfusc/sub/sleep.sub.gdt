0x00000000004018ac : adc al, 0x25 ; ret 0x406e
0x0000000000401bef : adc byte ptr [rbp - 8], al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000405a95 : adc cl, byte ptr [rax + 1] ; ret 0x8948
0x0000000000403d79 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405618 : add al, 0x25 ; ret 0x406e
0x00000000004087c7 : add al, bl ; fdiv st(7), st(0) ; jmp rax
0x0000000000404fae : add al, bpl ; sti ; ret 0xffff
0x0000000000404fc1 : add al, ch ; stc ; ret 0xffff
0x0000000000404faf : add al, ch ; sti ; ret 0xffff
0x0000000000406cff : add bl, dh ; ret
0x00000000004018a9 : add byte ptr [rax - 0x73], cl ; adc al, 0x25 ; ret 0x406e
0x0000000000405615 : add byte ptr [rax - 0x73], cl ; add al, 0x25 ; ret 0x406e
0x00000000004017e6 : add byte ptr [rax - 0x73], cl ; xor al, 0x25 ; ret 0x406e
0x000000000040553a : add byte ptr [rax - 0x75], cl ; loopne 0x405591 ; mov edi, dword ptr [rbp - 8] ; call rax
0x0000000000404dbd : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000406cfd : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000405613 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add al, 0x25 ; ret 0x406e
0x00000000004017e4 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; xor al, 0x25 ; ret 0x406e
0x0000000000406cfb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004006b0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000004006b2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000406cfc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004006b4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000004073bc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x402b
0x000000000040341e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x000000000040468e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040600c : add byte ptr [rax], al ; add cl, ch ; ret 2
0x0000000000403d41 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403a50 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401183 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004012f9 : add byte ptr [rax], al ; jmp 0x401199
0x0000000000408962 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; or eax, dword ptr [rax] ; add byte ptr [rax], ch ; loopne 0x408973 ; jmp rdx
0x0000000000402312 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000402108 : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000404c5b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403a10 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000406cfe : add byte ptr [rax], al ; ret
0x00000000004006b6 : add byte ptr [rax], al ; ret 0
0x00000000004073be : add byte ptr [rax], al ; ret 0x402b
0x0000000000408967 : add byte ptr [rax], ch ; loopne 0x40896e ; jmp rdx
0x0000000000407b23 : add byte ptr [rax], ch ; ret 0xffff
0x0000000000407b2b : add byte ptr [rax], cl ; ret
0x0000000000404c5c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000403a11 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000401a65 : add byte ptr [rbx - 0x8b4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000404fce : add byte ptr [rcx - 0x261703bb], cl ; ret 0xffff
0x0000000000404ff8 : add byte ptr [rcx - 0x501707bb], cl ; ret 0xffff
0x0000000000406b9c : add byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x00000000004015a8 : add byte ptr [rcx], al ; ret
0x0000000000406008 : add byte ptr [rdi], cl ; lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000403420 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000404690 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040600e : add cl, ch ; ret 2
0x0000000000405299 : add dword ptr [rax - 0x77], ecx ; ret 0x8148
0x0000000000403d3f : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404c5a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000403a0f : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000406a5d : add dword ptr [rax], ecx ; ret 0x840
0x00000000004055e4 : add dword ptr [rdi], ecx ; mov dh, -0x3f ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000401b72 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004015a4 : add eax, 0x207cd6 ; add ebx, esi ; ret
0x000000000040600b : add eax, 0xe9000000 ; ret 2
0x000000000040156b : add eax, edx ; sar rax, 1 ; jne 0x40157c ; pop rbp ; ret
0x00000000004015a9 : add ebx, esi ; ret
0x00000000004016bb : add esp, 0x10 ; pop rbp ; ret
0x000000000040633c : add esp, 0x130 ; pop rbp ; ret
0x0000000000404f8c : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000402104 : add esp, 0x1c0 ; pop rbp ; ret
0x0000000000401ed7 : add esp, 0x20 ; pop rbp ; ret
0x000000000040179d : add esp, 0x30 ; pop rbp ; ret
0x00000000004055e9 : add esp, 0x40 ; pop rbp ; ret
0x000000000040415c : add esp, 0x50 ; pop rbp ; ret
0x0000000000402633 : add esp, 0x70 ; pop rbp ; ret
0x000000000040406a : add esp, 0x90 ; pop rbp ; ret
0x0000000000404e23 : add esp, 0xa0 ; pop rbp ; ret
0x0000000000401186 : add esp, 8 ; ret
0x000000000040156a : add rax, rdx ; sar rax, 1 ; jne 0x40157d ; pop rbp ; ret
0x00000000004016ba : add rsp, 0x10 ; pop rbp ; ret
0x000000000040633b : add rsp, 0x130 ; pop rbp ; ret
0x0000000000404f8b : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000402103 : add rsp, 0x1c0 ; pop rbp ; ret
0x0000000000401ed6 : add rsp, 0x20 ; pop rbp ; ret
0x000000000040179c : add rsp, 0x30 ; pop rbp ; ret
0x00000000004055e8 : add rsp, 0x40 ; pop rbp ; ret
0x000000000040415b : add rsp, 0x50 ; pop rbp ; ret
0x0000000000402632 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000404069 : add rsp, 0x90 ; pop rbp ; ret
0x0000000000404e22 : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000401185 : add rsp, 8 ; ret
0x000000000040648c : addps xmm1, xmm2 ; movaps xmm0, xmm1 ; pop rbp ; ret
0x000000000040648b : addsd xmm1, xmm2 ; movaps xmm0, xmm1 ; pop rbp ; ret
0x0000000000401b71 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004015a7 : and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000404fab : and eax, 0x407935 ; call 0x4012b7
0x0000000000401c3f : and eax, 0x609288 ; pop rbp ; ret
0x0000000000401c5f : and eax, 0x609290 ; pop rbp ; ret
0x0000000000401c83 : and eax, 0x609298 ; pop rbp ; ret
0x0000000000405159 : call 0x33349
0x0000000000404fb0 : call 0x4012b2
0x0000000000404fc2 : call 0x4012c2
0x0000000000401624 : call 0x4012c9
0x0000000000405ee1 : call 0x401349
0x000000000040515a : call 0x401442
0x00000000004018a5 : call 0x401ee9
0x0000000000403a49 : call 0xffffffffe902c399
0x0000000000403a48 : call 0xffffffffe902c39a
0x0000000000406cd9 : call qword ptr [r12 + rbx*8]
0x0000000000407a7f : call qword ptr [rax]
0x0000000000407ee3 : call qword ptr [rsi]
0x0000000000406cda : call qword ptr [rsp + rbx*8]
0x00000000004015cd : call rax
0x000000000040379c : call rbx
0x00000000004080a3 : call rdi
0x000000000040633a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x000000000040518f : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401bf1 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000405b24 : clc ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000404ffb : clc ; call 0x4012b3
0x0000000000404ffa : clc ; call 0x4012b4
0x0000000000405542 : clc ; call rax
0x000000000040156f : clc ; jne 0x401578 ; pop rbp ; ret
0x0000000000405a92 : clc ; jo 0x405a43 ; adc cl, byte ptr [rax + 1] ; ret 0x8948
0x00000000004024e5 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000406c1f : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040637b : clc ; pop rbp ; ret
0x00000000004065d6 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405509 : cld ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040587a : cld ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004057ad : cld ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000404fd1 : cld ; call 0x4012b3
0x0000000000404fd0 : cld ; call 0x4012b4
0x0000000000406c1c : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004065d3 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406576 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405877 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004057aa : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040162b : cmp al, 0x25 ; ret
0x0000000000404faa : cmp al, 0x25 ; xor eax, 0xe8004079 ; sti ; ret 0xffff
0x000000000040152d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401540 ; pop rbp ; ret
0x0000000000401181 : cmp eax, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000040479c : cwde ; mov rcx, qword ptr [rax*8 + 0x407688] ; jmp rcx
0x0000000000401628 : dec dword ptr [rax - 0x73] ; cmp al, 0x25 ; ret
0x0000000000405ee5 : dec dword ptr [rax - 0x73] ; or al, 0x25 ; ret 0x406e
0x0000000000402a14 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; enter 0x4071, 0 ; jmp rcx
0x00000000004026f0 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; xor byte ptr [rcx + 0x40], 0 ; jmp rcx
0x0000000000406074 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000401a6b : dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004031a2 : dec dword ptr [rcx - 0x77] ; ret 0x294d
0x0000000000402a19 : enter 0x4071, 0 ; jmp rcx
0x0000000000403530 : enter 0x4b05, 0x34 ; fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x000000000040644f : enter 0x4d89, -0x14 ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000407b30 : fadd dword ptr [rsi] ; add byte ptr [rax], al ; ret
0x00000000004087c9 : fdiv st(7), st(0) ; jmp rax
0x0000000000403534 : fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x0000000000406cdc : fmul qword ptr [rax - 0x7d] ; ret
0x00000000004016b9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401540 : hlt ; pop rbp ; mov edi, 0x609238 ; jmp rax
0x0000000000406452 : in al, dx ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000406455 : in al, dx ; pop rbp ; ret
0x00000000004037bb : inc dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000404dc5 : int 0x80
0x0000000000401533 : ja 0x40153a ; pop rbp ; ret
0x000000000040153f : je 0x40153d ; pop rbp ; mov edi, 0x609238 ; jmp rax
0x0000000000404ff5 : je 0x405079 ; add byte ptr [rcx - 0x501707bb], cl ; ret 0xffff
0x0000000000405154 : jge 0x40514e ; mov rsi, qword ptr [rbp - 0x18] ; call 0x401448
0x0000000000405541 : jge 0x40553d ; call rax
0x00000000004015a6 : jl 0x4015cd ; add byte ptr [rcx], al ; ret
0x00000000004012fb : jmp 0x401197
0x0000000000405298 : jmp 0xffffffffc2c99aa2
0x0000000000407d77 : jmp qword ptr [rax]
0x0000000000402c36 : jmp qword ptr [rcx]
0x000000000040818b : jmp qword ptr [rdx]
0x0000000000401547 : jmp rax
0x00000000004026f9 : jmp rcx
0x0000000000401587 : jmp rdx
0x0000000000401570 : jne 0x401577 ; pop rbp ; ret
0x0000000000405158 : jne 0x405146 ; call 0x401444
0x0000000000404fad : jns 0x404ff4 ; add al, ch ; sti ; ret 0xffff
0x0000000000404fcc : jns 0x405016 ; add byte ptr [rcx - 0x261703bb], cl ; ret 0xffff
0x0000000000404ff6 : jns 0x405040 ; add byte ptr [rcx - 0x501707bb], cl ; ret 0xffff
0x0000000000402635 : jo 0x402696 ; ret
0x0000000000403c5f : jo 0x403cc5 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000404304 : jo 0x404365 ; ret
0x000000000040443e : jo 0x40449f ; ret
0x0000000000405a93 : jo 0x405a42 ; adc cl, byte ptr [rax + 1] ; ret 0x8948
0x000000000040600a : lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000404fa9 : lea edi, dword ptr [0x407935] ; call 0x4012b9
0x0000000000405ea6 : lea edx, dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add al, 0x25 ; ret 0x406e
0x0000000000405ac2 : leave ; ret 0xf8ca
0x0000000000408964 : lodsb al, byte ptr [rsi] ; or eax, dword ptr [rax] ; add byte ptr [rax], ch ; loopne 0x408971 ; jmp rdx
0x000000000040553e : loopne 0x40558d ; mov edi, dword ptr [rbp - 8] ; call rax
0x000000000040553d : loopne 0x40558e ; mov edi, dword ptr [rbp - 8] ; call rax
0x0000000000408969 : loopne 0x40896c ; jmp rdx
0x0000000000405a90 : mov ah, -0x17 ; clc ; jo 0x405a45 ; adc cl, byte ptr [rax + 1] ; ret 0x8948
0x0000000000405ee3 : mov ah, -1 ; dec dword ptr [rax - 0x73] ; or al, 0x25 ; ret 0x406e
0x0000000000404fc0 : mov al, 0 ; call 0x4012c4
0x00000000004041db : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000404068 : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000401b6e : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000406736 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401c81 : mov byte ptr [0x609298], al ; pop rbp ; ret
0x00000000004015a3 : mov byte ptr [rip + 0x207cd6], 1 ; ret
0x000000000040644e : mov dh, -0x38 ; mov dword ptr [rbp - 0x14], ecx ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x00000000004055e6 : mov dh, -0x3f ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000401b74 : mov dh, -0x40 ; pop rbp ; ret
0x0000000000401c5d : mov dword ptr [0x609290], edi ; pop rbp ; ret
0x00000000004024e6 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004024a8 : mov dword ptr [rax], eax ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000402364 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004024a7 : mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000406450 : mov dword ptr [rbp - 0x14], ecx ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x00000000004063ea : mov dword ptr [rbp - 0x24], eax ; mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x0000000000401799 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004016b7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404fcf : mov dword ptr [rbp - 4], eax ; call 0x4012b5
0x0000000000404ff9 : mov dword ptr [rbp - 8], eax ; call 0x4012b5
0x0000000000406c1d : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040255e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407b28 : mov eax, 0x8000006 ; ret
0x0000000000401c3d : mov eax, dword ptr [0x609288] ; pop rbp ; ret
0x0000000000402318 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004050ab : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401ed3 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402315 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000406375 : mov eax, dword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000401e2f : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000406453 : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x00000000004053a3 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004022cd : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040235e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040553c : mov eax, dword ptr [rbp - 0x20] ; mov rdi, qword ptr [rbp - 8] ; call rax
0x00000000004063ed : mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x00000000004024aa : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040262f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004041d9 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004065d4 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405507 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405878 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004057ab : mov eax, dword ptr [rbp - 4] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040518d : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040469f : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406c20 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004015cb : mov ebp, esp ; call rax
0x0000000000401531 : mov ebp, esp ; ja 0x40153c ; pop rbp ; ret
0x0000000000404ddd : mov ecx, 0x5b2a830a ; ret
0x0000000000405abd : mov ecx, 0x8d1c8842 ; leave ; ret 0xf8ca
0x00000000004026f2 : mov ecx, dword ptr [rax*8 + 0x407180] ; jmp rcx
0x0000000000402a16 : mov ecx, dword ptr [rax*8 + 0x4071c8] ; jmp rcx
0x000000000040479e : mov ecx, dword ptr [rax*8 + 0x407688] ; jmp rcx
0x0000000000402361 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004015c5 : mov edi, 0x608e20 ; mov rbp, rsp ; call rax
0x0000000000401542 : mov edi, 0x609238 ; jmp rax
0x0000000000401582 : mov edi, 0x609238 ; jmp rdx
0x0000000000405153 : mov edi, dword ptr [rbp - 0x10] ; mov rsi, qword ptr [rbp - 0x18] ; call 0x401449
0x0000000000405540 : mov edi, dword ptr [rbp - 8] ; call rax
0x0000000000404fbe : mov edi, eax ; mov al, 0 ; call 0x4012c6
0x0000000000406cd7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000406cd6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000405b22 : mov edx, dword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000406379 : mov edx, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000405157 : mov esi, dword ptr [rbp - 0x18] ; call 0x401445
0x0000000000401580 : mov esi, eax ; mov edi, 0x609238 ; jmp rdx
0x00000000004015c7 : mov fs, word ptr [rax] ; mov rbp, rsp ; call rax
0x0000000000401c5c : mov qword ptr [0x609290], rdi ; pop rbp ; ret
0x000000000040255d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004041da : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000401c3c : mov rax, qword ptr [0x609288] ; pop rbp ; ret
0x00000000004050aa : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401ed2 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402314 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000406374 : mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000401e2e : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004053a2 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004022cc : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040553b : mov rax, qword ptr [rbp - 0x20] ; mov rdi, qword ptr [rbp - 8] ; call rax
0x000000000040262e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004041d8 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040518c : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040469e : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004015ca : mov rbp, rsp ; call rax
0x0000000000401530 : mov rbp, rsp ; ja 0x40153d ; pop rbp ; ret
0x00000000004026f1 : mov rcx, qword ptr [rax*8 + 0x407180] ; jmp rcx
0x0000000000402a15 : mov rcx, qword ptr [rax*8 + 0x4071c8] ; jmp rcx
0x000000000040479d : mov rcx, qword ptr [rax*8 + 0x407688] ; jmp rcx
0x000000000040553f : mov rdi, qword ptr [rbp - 8] ; call rax
0x0000000000404fbd : mov rdi, rax ; mov al, 0 ; call 0x4012c7
0x0000000000405b21 : mov rdx, qword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000406378 : mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000405156 : mov rsi, qword ptr [rbp - 0x18] ; call 0x401446
0x000000000040157f : mov rsi, rax ; mov edi, 0x609238 ; jmp rdx
0x000000000040648f : movaps xmm0, xmm1 ; pop rbp ; ret
0x0000000000401bee : movups xmm0, xmmword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401b73 : movzx eax, al ; pop rbp ; ret
0x00000000004055e5 : movzx eax, cl ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000406cf8 : nop dword ptr [rax + rax] ; ret
0x0000000000402d7d : or al, 0x18 ; ret 0x6451
0x0000000000405ee8 : or al, 0x25 ; ret 0x406e
0x0000000000402a17 : or al, 0xffffffffffffffc5 ; enter 0x4071, 0 ; jmp rcx
0x00000000004026f3 : or al, 0xffffffffffffffc5 ; xor byte ptr [rcx + 0x40], 0 ; jmp rcx
0x00000000004087c5 : or al, byte ptr [rax] ; add al, bl ; fdiv st(7), st(0) ; jmp rax
0x0000000000403ce8 : or al, ch ; ret 0xffd4
0x00000000004043c1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000408965 : or eax, dword ptr [rax] ; add byte ptr [rax], ch ; loopne 0x408970 ; jmp rdx
0x0000000000406cec : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000403c61 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406cee : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000403c63 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406cf0 : pop r14 ; pop r15 ; ret
0x0000000000403a13 : pop r14 ; pop rbp ; ret
0x0000000000403c65 : pop r15 ; pop rbp ; ret
0x0000000000406cf2 : pop r15 ; ret
0x00000000004015a2 : pop rbp ; mov byte ptr [rip + 0x207cd6], 1 ; ret
0x0000000000401541 : pop rbp ; mov edi, 0x609238 ; jmp rax
0x000000000040157e : pop rbp ; mov rsi, rax ; mov edi, 0x609238 ; jmp rdx
0x0000000000406ceb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000406cef : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401535 : pop rbp ; ret
0x0000000000403c60 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000404c5d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403a12 : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000404de1 : pop rbx ; ret
0x0000000000403c66 : pop rdi ; pop rbp ; ret
0x000000000040500d : pop rdi ; ret
0x0000000000405ee2 : pop rdx ; mov ah, -1 ; dec dword ptr [rax - 0x73] ; or al, 0x25 ; ret 0x406e
0x0000000000403c64 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000406cf1 : pop rsi ; pop r15 ; ret
0x0000000000403a14 : pop rsi ; pop rbp ; ret
0x0000000000406ced : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000403c62 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040224b : push 0x48006092 ; add esp, 0x30 ; pop rbp ; ret
0x000000000040415e : push rax ; pop rbp ; ret
0x0000000000405b23 : push rbp ; clc ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040637a : push rbp ; clc ; pop rbp ; ret
0x00000000004015c4 : push rbp ; mov edi, 0x608e20 ; mov rbp, rsp ; call rax
0x0000000000401189 : ret
0x00000000004006b8 : ret 0
0x0000000000405a88 : ret 0x148
0x0000000000403dfe : ret 0x1b2
0x0000000000401302 : ret 0x207d
0x0000000000401eb5 : ret 0x2948
0x0000000000403189 : ret 0x294c
0x00000000004031a5 : ret 0x294d
0x00000000004031bd : ret 0x2de8
0x00000000004073c0 : ret 0x402b
0x00000000004017eb : ret 0x406e
0x00000000004023e4 : ret 0x5589
0x0000000000402d7f : ret 0x6451
0x000000000040529c : ret 0x8148
0x0000000000406a5f : ret 0x840
0x0000000000403423 : ret 0x8840
0x0000000000404759 : ret 0x8844
0x00000000004052b0 : ret 0x8948
0x00000000004031a8 : ret 0x8949
0x000000000040333c : ret 0x89a5
0x000000000040318c : ret 0x8b48
0x000000000040190a : ret 0xb0
0x000000000040576a : ret 0xb848
0x0000000000406249 : ret 0xb849
0x0000000000401565 : ret 0xc148
0x0000000000405fb0 : ret 0xc2f6
0x0000000000402ba4 : ret 0xca21
0x0000000000404693 : ret 0xd284
0x0000000000403a4c : ret 0xee8
0x0000000000403438 : ret 0xf180
0x0000000000405fa3 : ret 0xf280
0x0000000000402c1e : ret 0xf281
0x0000000000405ac3 : ret 0xf8ca
0x0000000000403cea : ret 0xffd4
0x0000000000404fb2 : ret 0xffff
0x0000000000403e04 : ret 1
0x0000000000406010 : ret 2
0x00000000004024a6 : rol byte ptr [rcx + rcx*4], 1 ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000404dc0 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000402630 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x40269b ; ret
0x000000000040156c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40157b ; pop rbp ; ret
0x0000000000404dc1 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x000000000040317d : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000403186 : ror byte ptr [rax - 0x77], 1 ; ret 0x294c
0x0000000000402631 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x40269a ; ret
0x00000000004055e7 : ror dword ptr [rax - 0x7d], -0x3c ; pop rbp ; ret
0x000000000040648a : sal dl, 1 ; addps xmm1, xmm2 ; movaps xmm0, xmm1 ; pop rbp ; ret
0x00000000004015a5 : salc ; jl 0x4015ce ; add byte ptr [rcx], al ; ret
0x000000000040156e : sar eax, 1 ; jne 0x401579 ; pop rbp ; ret
0x000000000040156d : sar rax, 1 ; jne 0x40157a ; pop rbp ; ret
0x0000000000405ac0 : sbb al, -0x73 ; leave ; ret 0xf8ca
0x0000000000404ffd : scasd eax, dword ptr [rdi] ; ret 0xffff
0x0000000000404fc3 : stc ; ret 0xffff
0x0000000000406738 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000404fb1 : sti ; ret 0xffff
0x0000000000406490 : sub cl, al ; pop rbp ; ret
0x0000000000404ddf : sub dword ptr [rdx], 0x5b ; ret
0x0000000000406d2d : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000406d2c : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000406cfa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000405e75 : test dword ptr [rcx], edx ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add al, 0x25 ; ret 0x406e
0x0000000000403422 : xchg eax, ebp ; ret 0x8840
0x0000000000404692 : xchg eax, esp ; ret 0xd284
0x00000000004017e9 : xor al, 0x25 ; ret 0x406e
0x00000000004026f5 : xor byte ptr [rcx + 0x40], 0 ; jmp rcx
0x000000000040633e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000404157 : xor eax, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x0000000000404fac : xor eax, 0xe8004079 ; sti ; ret 0xffff
0x00000000004024a5 : xor eax, edx ; mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
