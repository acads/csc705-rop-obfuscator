0x0000000000404af9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408bbb : add ah, cl ; add al, 0 ; add byte ptr [rax], dh ; ret
0x0000000000408b5d : add al, 0 ; add al, ah ; ret 0xffff
0x0000000000408b3d : add al, 0 ; add al, al ; ret 0xffff
0x0000000000408b7d : add al, 0 ; add al, dh ; ret 0xffff
0x0000000000406a49 : add al, 0 ; add byte ptr [rax - 0x73], cl ; xor al, 0x25 ; ret 0x4077
0x0000000000408b9d : add al, 0 ; add byte ptr [rax], al ; ret
0x0000000000408bbd : add al, 0 ; add byte ptr [rax], dh ; ret
0x0000000000408b5f : add al, ah ; ret 0xffff
0x0000000000408c1f : add al, al ; ret
0x0000000000408b3f : add al, al ; ret 0xffff
0x0000000000401777 : add al, ch ; ret
0x0000000000408b7f : add al, dh ; ret 0xffff
0x0000000000408c3f : add al, dl ; ret
0x00000000004074cf : add bl, dh ; ret
0x0000000000402aca : add byte ptr [rax - 0x73], cl ; xor al, 0x25 ; ret 0x4077
0x0000000000405b3d : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000401ce2 : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000040901f : add byte ptr [rax], ah ; sar bh, cl ; jmp rax
0x0000000000408bb9 : add byte ptr [rax], al ; add ah, cl ; add al, 0 ; add byte ptr [rax], dh ; ret
0x0000000000408b3a : add byte ptr [rax], al ; add al, 0 ; add al, al ; ret 0xffff
0x0000000000401775 : add byte ptr [rax], al ; add al, ch ; ret
0x00000000004074cd : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000402ac8 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; xor al, 0x25 ; ret 0x4077
0x0000000000401ce0 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x00000000004074cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004074cc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000408c39 : add byte ptr [rax], al ; add byte ptr [rbp + rax], cl ; add al, dl ; ret
0x0000000000402895 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7738b], cl ; ret 0xb0
0x000000000040295f : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b77b8b], cl ; ret 0xb0
0x0000000000401c39 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x6348
0x00000000004026e2 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x000000000040540e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000408b59 : add byte ptr [rax], al ; add byte ptr [rsp + rax], ch ; add al, ah ; ret 0xffff
0x0000000000408b39 : add byte ptr [rax], al ; add byte ptr [rsp + rax], cl ; add al, al ; ret 0xffff
0x0000000000406b9c : add byte ptr [rax], al ; add cl, ch ; ret 2
0x0000000000404ac1 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004047d0 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004020d0 : add byte ptr [rax], al ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004012bb : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000408876 : add byte ptr [rax], al ; call 0x11408824
0x0000000000408b5a : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; add al, 0 ; add al, ah ; ret 0xffff
0x00000000004013b9 : add byte ptr [rax], al ; jmp 0x4012d9
0x0000000000408b9a : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add al, 0 ; add byte ptr [rax], al ; ret
0x0000000000403092 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000408b7a : add byte ptr [rax], al ; mov word ptr [rax + rax], es ; add al, dh ; ret 0xffff
0x0000000000408bde : add byte ptr [rax], al ; nop ; ret
0x000000000040298b : add byte ptr [rax], al ; pop rbp ; ret
0x00000000004059db : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000404790 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004074ce : add byte ptr [rax], al ; ret
0x000000000040840b : add byte ptr [rax], al ; test al, -1 ; jmp qword ptr [rax]
0x0000000000408872 : add byte ptr [rax], al ; test byte ptr [rcx], al ; add byte ptr [rax], al ; call 0x11408828
0x000000000040847b : add byte ptr [rax], dh ; mov al, -1 ; jmp rax
0x0000000000408bbf : add byte ptr [rax], dh ; ret
0x0000000000408c3b : add byte ptr [rbp + rax], cl ; add al, dl ; ret
0x00000000004059dc : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000404791 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000402897 : add byte ptr [rbx - 0x76b7738b], cl ; ret 0xb0
0x0000000000402961 : add byte ptr [rbx - 0x76b77b8b], cl ; ret 0xb0
0x000000000040736c : add byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x0000000000401728 : add byte ptr [rcx], al ; ret
0x0000000000401c3b : add byte ptr [rcx], al ; ret 0x6348
0x0000000000406b98 : add byte ptr [rdi], cl ; lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000401771 : add byte ptr [rdi], cl ; test byte ptr [rdx], cl ; add byte ptr [rax], al ; add al, ch ; ret
0x00000000004026e4 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000405410 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000408b5b : add byte ptr [rsp + rax], ch ; add al, ah ; ret 0xffff
0x0000000000408b3b : add byte ptr [rsp + rax], cl ; add al, al ; ret 0xffff
0x0000000000406b9e : add cl, ch ; ret 2
0x0000000000406019 : add dword ptr [rax - 0x77], ecx ; ret 0x8148
0x0000000000404abf : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004059da : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040478f : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040722d : add dword ptr [rax], ecx ; ret 0x840
0x0000000000406f0a : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401724 : add eax, 0x208bae ; add ebx, esi ; ret
0x0000000000406b9b : add eax, 0xe9000000 ; ret 2
0x00000000004016eb : add eax, edx ; sar rax, 1 ; jne 0x4016fc ; pop rbp ; ret
0x0000000000401729 : add ebx, esi ; ret
0x000000000040187b : add esp, 0x10 ; pop rbp ; ret
0x0000000000406ecc : add esp, 0x130 ; pop rbp ; ret
0x0000000000405d0c : add esp, 0x1a0 ; pop rbp ; ret
0x000000000040234a : add esp, 0x20 ; pop rbp ; ret
0x000000000040198d : add esp, 0x30 ; pop rbp ; ret
0x0000000000404edc : add esp, 0x50 ; pop rbp ; ret
0x00000000004020d3 : add esp, 0x60 ; pop rbp ; ret
0x00000000004033b3 : add esp, 0x70 ; pop rbp ; ret
0x0000000000402987 : add esp, 0x80 ; pop rbp ; ret
0x0000000000404dea : add esp, 0x90 ; pop rbp ; ret
0x0000000000405ba3 : add esp, 0xa0 ; pop rbp ; ret
0x00000000004012be : add esp, 8 ; ret
0x00000000004016ea : add rax, rdx ; sar rax, 1 ; jne 0x4016fd ; pop rbp ; ret
0x000000000040187a : add rsp, 0x10 ; pop rbp ; ret
0x0000000000406ecb : add rsp, 0x130 ; pop rbp ; ret
0x0000000000405d0b : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000402349 : add rsp, 0x20 ; pop rbp ; ret
0x000000000040198c : add rsp, 0x30 ; pop rbp ; ret
0x0000000000404edb : add rsp, 0x50 ; pop rbp ; ret
0x00000000004020d2 : add rsp, 0x60 ; pop rbp ; ret
0x00000000004033b2 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000402986 : add rsp, 0x80 ; pop rbp ; ret
0x0000000000404de9 : add rsp, 0x90 ; pop rbp ; ret
0x0000000000405ba2 : add rsp, 0xa0 ; pop rbp ; ret
0x00000000004012bd : add rsp, 8 ; ret
0x0000000000406f09 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401727 : and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000402b7f : and eax, 0x60a328 ; pop rbp ; ret
0x0000000000402ba3 : and eax, 0x60a330 ; pop rbp ; ret
0x0000000000408878 : call 0x11408822
0x00000000004047c9 : call 0xffffffffe902d119
0x00000000004047c8 : call 0xffffffffe902d11a
0x00000000004074a9 : call qword ptr [r12 + rbx*8]
0x000000000040887b : call qword ptr [rax]
0x000000000040889b : call qword ptr [rsi]
0x00000000004074aa : call qword ptr [rsp + rbx*8]
0x000000000040174d : call rax
0x000000000040451c : call rbx
0x0000000000408a7b : call rdi
0x000000000040873b : call rsi
0x0000000000406eca : clc ; add rsp, 0x130 ; pop rbp ; ret
0x0000000000402b4f : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405421 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004016ef : clc ; jne 0x4016f8 ; pop rbp ; ret
0x0000000000402b66 : clc ; mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000403265 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004073ef : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004073f2 : clc ; pop rbp ; ret
0x00000000004018a7 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406319 : cld ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040649e : cld ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004073ec : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000406373 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406316 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040649b : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004016ad : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4016c0 ; pop rbp ; ret
0x000000000040551c : cwde ; mov rcx, qword ptr [rax*8 + 0x407fd8] ; jmp rcx
0x0000000000406c04 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000403f22 : dec dword ptr [rcx - 0x77] ; ret 0x294d
0x00000000004042b0 : enter 0x4b05, 0x34 ; fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x0000000000402fcb : enter 0x60a2, 0 ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004042b4 : fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x00000000004074ac : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000401879 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004016c0 : hlt ; pop rbp ; mov edi, 0x60a268 ; jmp rax
0x0000000000402548 : imul edx, ebx, 0xeb473547 ; ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x000000000040453b : inc dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000408b5c : insb byte ptr [rdi], dx ; add al, 0 ; add al, ah ; ret 0xffff
0x0000000000405b45 : int 0x80
0x00000000004016b3 : ja 0x4016ba ; pop rbp ; ret
0x00000000004016bf : je 0x4016bd ; pop rbp ; mov edi, 0x60a268 ; jmp rax
0x00000000004013bb : jmp 0x4012d7
0x0000000000402ac6 : jmp 0x402ae9
0x0000000000406a47 : jmp 0x406ebb
0x0000000000406018 : jmp 0xffffffffc2c9a822
0x00000000004083cf : jmp qword ptr [rax]
0x0000000000401ec0 : jmp qword ptr [rcx]
0x0000000000408b63 : jmp qword ptr [rdx]
0x00000000004016c7 : jmp rax
0x0000000000403479 : jmp rcx
0x0000000000401707 : jmp rdx
0x00000000004016f0 : jne 0x4016f7 ; pop rbp ; ret
0x00000000004033b5 : jo 0x403416 ; ret
0x00000000004049df : jo 0x404a45 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405084 : jo 0x4050e5 ; ret
0x00000000004051be : jo 0x40521f ; ret
0x0000000000406b9a : lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000408b9c : lodsb al, byte ptr [rsi] ; add al, 0 ; add byte ptr [rax], al ; ret
0x00000000004026e0 : loopne 0x4026e9 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000402e2b : loopne 0x402e7b ; add esp, 0x20 ; pop rbp ; ret
0x0000000000402e2a : loopne 0x402e7c ; add esp, 0x20 ; pop rbp ; ret
0x000000000040847d : mov al, -1 ; jmp rax
0x0000000000404f5b : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000404de8 : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000406f06 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000402ba1 : mov byte ptr [0x60a330], al ; pop rbp ; ret
0x0000000000402b67 : mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000401723 : mov byte ptr [rip + 0x208bae], 1 ; ret
0x0000000000406f0c : mov dh, -0x40 ; pop rbp ; ret
0x0000000000402b7d : mov dword ptr [0x60a328], edi ; pop rbp ; ret
0x0000000000403266 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000403228 : mov dword ptr [rax], eax ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004030e4 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000403227 : mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000402e29 : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401989 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401877 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004018a5 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004073ed : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004032de : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403098 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000405e2b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402df3 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403095 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000402d4f : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000406123 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040304d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004030de : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040322a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004033af : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000404f59 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000406374 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406317 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040649c : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402b4d : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040541f : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004073f0 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040174b : mov ebp, esp ; call rax
0x00000000004016b1 : mov ebp, esp ; ja 0x4016bc ; pop rbp ; ret
0x0000000000405b5d : mov ecx, 0x5b2a830a ; ret
0x0000000000403472 : mov ecx, dword ptr [rax*8 + 0x407ad0] ; jmp rcx
0x0000000000403796 : mov ecx, dword ptr [rax*8 + 0x407b18] ; jmp rcx
0x000000000040551e : mov ecx, dword ptr [rax*8 + 0x407fd8] ; jmp rcx
0x00000000004030e1 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401745 : mov edi, 0x609e20 ; mov rbp, rsp ; call rax
0x00000000004016c2 : mov edi, 0x60a268 ; jmp rax
0x0000000000401702 : mov edi, 0x60a268 ; jmp rdx
0x00000000004074a7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x00000000004074a6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000401700 : mov esi, eax ; mov edi, 0x60a268 ; jmp rdx
0x0000000000401726 : mov esp, dword ptr [rax] ; add byte ptr [rcx], al ; ret
0x0000000000402b7c : mov qword ptr [0x60a328], rdi ; pop rbp ; ret
0x00000000004032dd : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404f5a : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000405e2a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402df2 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403094 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000402d4e : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000406122 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040304c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004033ae : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000404f58 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000402b4c : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040541e : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040174a : mov rbp, rsp ; call rax
0x00000000004016b0 : mov rbp, rsp ; ja 0x4016bd ; pop rbp ; ret
0x0000000000403471 : mov rcx, qword ptr [rax*8 + 0x407ad0] ; jmp rcx
0x0000000000403795 : mov rcx, qword ptr [rax*8 + 0x407b18] ; jmp rcx
0x000000000040551d : mov rcx, qword ptr [rax*8 + 0x407fd8] ; jmp rcx
0x00000000004016ff : mov rsi, rax ; mov edi, 0x60a268 ; jmp rdx
0x0000000000408b7c : mov word ptr [rax + rax], es ; add al, dh ; ret 0xffff
0x000000000040289a : mov word ptr [rax - 0x77], cs ; ret 0xb0
0x0000000000406f0b : movzx eax, al ; pop rbp ; ret
0x0000000000402b6a : movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000408be0 : nop ; ret
0x00000000004074c8 : nop dword ptr [rax + rax] ; ret
0x0000000000403afd : or al, 0x18 ; ret 0x6451
0x000000000040901d : or dword ptr [rax], eax ; add byte ptr [rax], ah ; sar bh, cl ; jmp rax
0x0000000000405141 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004074bc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004049e1 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004074be : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004049e3 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004074c0 : pop r14 ; pop r15 ; ret
0x0000000000404793 : pop r14 ; pop rbp ; ret
0x00000000004049e5 : pop r15 ; pop rbp ; ret
0x00000000004074c2 : pop r15 ; ret
0x0000000000401722 : pop rbp ; mov byte ptr [rip + 0x208bae], 1 ; ret
0x00000000004016c1 : pop rbp ; mov edi, 0x60a268 ; jmp rax
0x00000000004016fe : pop rbp ; mov rsi, rax ; mov edi, 0x60a268 ; jmp rdx
0x00000000004074bb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004074bf : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004016b5 : pop rbp ; ret
0x00000000004049e0 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004059dd : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000404792 : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000405b61 : pop rbx ; ret
0x00000000004049e6 : pop rdi ; pop rbp ; ret
0x00000000004074c3 : pop rdi ; ret
0x00000000004049e4 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004074c1 : pop rsi ; pop r15 ; ret
0x0000000000404794 : pop rsi ; pop rbp ; ret
0x00000000004074bd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004049e2 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000404ede : push rax ; pop rbp ; ret
0x0000000000401744 : push rbp ; mov edi, 0x609e20 ; mov rbp, rsp ; call rax
0x00000000004012c1 : ret
0x0000000000406dd2 : ret 0
0x0000000000406de6 : ret 0x148
0x0000000000404b7e : ret 0x1b2
0x00000000004015c2 : ret 0x208b
0x00000000004013c2 : ret 0x208c
0x000000000040232c : ret 0x2948
0x0000000000403f09 : ret 0x294c
0x0000000000403f25 : ret 0x294d
0x0000000000402acf : ret 0x4077
0x0000000000403164 : ret 0x5589
0x0000000000401c3d : ret 0x6348
0x0000000000403aff : ret 0x6451
0x0000000000403f3d : ret 0x6de8
0x000000000040601c : ret 0x8148
0x000000000040722f : ret 0x840
0x00000000004026e7 : ret 0x8840
0x00000000004054d9 : ret 0x8844
0x0000000000406030 : ret 0x8948
0x0000000000403f28 : ret 0x8949
0x00000000004040bc : ret 0x89a5
0x0000000000403f0c : ret 0x8b48
0x0000000000401c92 : ret 0x9ebc
0x0000000000401ce5 : ret 0xb0
0x0000000000406dd9 : ret 0xb849
0x00000000004016e5 : ret 0xc148
0x0000000000406b40 : ret 0xc2f6
0x0000000000403924 : ret 0xca21
0x0000000000405413 : ret 0xd284
0x000000000040272a : ret 0xe280
0x00000000004047cc : ret 0xee8
0x00000000004041b8 : ret 0xf180
0x0000000000406b33 : ret 0xf280
0x000000000040399e : ret 0xf281
0x000000000040292a : ret 0xffe9
0x0000000000408b41 : ret 0xffff
0x0000000000402557 : ret 1
0x0000000000406ba0 : ret 2
0x000000000040274e : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000403226 : rol byte ptr [rcx + rcx*4], 1 ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000408438 : rol byte ptr [rip - 0x55000000], -1 ; jmp rax
0x0000000000408478 : rol byte ptr [rsi], 0 ; add byte ptr [rax], dh ; mov al, -1 ; jmp rax
0x0000000000405b40 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x00000000004033b0 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x40341b ; ret
0x00000000004016ec : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4016fb ; pop rbp ; ret
0x0000000000405b41 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000403efd : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000403f06 : ror byte ptr [rax - 0x77], 1 ; ret 0x294c
0x00000000004033b1 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x40341a ; ret
0x000000000040254e : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000409021 : sar bh, cl ; jmp rax
0x00000000004016ee : sar eax, 1 ; jne 0x4016f9 ; pop rbp ; ret
0x00000000004016ed : sar rax, 1 ; jne 0x4016fa ; pop rbp ; ret
0x0000000000408b38 : sbb al, 0 ; add byte ptr [rax], al ; add al, 0 ; add al, al ; ret 0xffff
0x0000000000408b58 : sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; add al, 0 ; add al, ah ; ret 0xffff
0x0000000000408b98 : sbb al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add al, 0 ; add byte ptr [rax], al ; ret
0x0000000000408b78 : sbb al, 0 ; add byte ptr [rax], al ; mov word ptr [rax + rax], es ; add al, dh ; ret 0xffff
0x0000000000401725 : scasb al, byte ptr [rdi] ; mov esp, dword ptr [rax] ; add byte ptr [rcx], al ; ret
0x0000000000406f08 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000405b5f : sub dword ptr [rdx], 0x5b ; ret
0x00000000004074fd : sub esp, 8 ; add rsp, 8 ; ret
0x00000000004074fc : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040840d : test al, -1 ; jmp qword ptr [rax]
0x0000000000402964 : test byte ptr [rax - 0x77], cl ; ret 0xb0
0x00000000004074ca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000408874 : test byte ptr [rcx], al ; add byte ptr [rax], al ; call 0x11408826
0x0000000000401773 : test byte ptr [rdx], cl ; add byte ptr [rax], al ; add al, ch ; ret
0x00000000004026e6 : xchg eax, ebp ; ret 0x8840
0x0000000000405412 : xchg eax, esp ; ret 0xd284
0x0000000000402acd : xor al, 0x25 ; ret 0x4077
0x0000000000406ece : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000404ed7 : xor eax, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x0000000000403225 : xor eax, edx ; mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
