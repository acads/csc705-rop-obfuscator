0x0000000000403d69 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407cdb : add ah, ch ; add eax, dword ptr [rax] ; add al, dl ; ret
0x0000000000407cfd : add al, 0 ; add al, ah ; ret
0x0000000000407d1d : add al, 0 ; add al, dh ; ret
0x0000000000407cff : add al, ah ; ret
0x0000000000404fdb : add al, ch ; lahf ; ret 0xffff
0x0000000000404fb1 : add al, ch ; leave ; ret 0xffff
0x0000000000401ba8 : add al, ch ; ret 0xfff8
0x0000000000407d1f : add al, dh ; ret
0x0000000000407cdf : add al, dl ; ret
0x000000000040673f : add bl, dh ; ret
0x0000000000404dad : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000407cd9 : add byte ptr [rax], al ; add ah, ch ; add eax, dword ptr [rax] ; add al, dl ; ret
0x0000000000401ba6 : add byte ptr [rax], al ; add al, ch ; ret 0xfff8
0x000000000040673d : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040673b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004003f8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400428 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000004003fa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040042a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000004003fc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040042c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000040340e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x00000000004020d4 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000040467e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000405b9c : add byte ptr [rax], al ; add cl, ch ; ret 2
0x0000000000403d31 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403a40 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401d1a : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040114b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000407cda : add byte ptr [rax], al ; in al, dx ; add eax, dword ptr [rax] ; add al, dl ; ret
0x0000000000401329 : add byte ptr [rax], al ; jmp 0x401169
0x0000000000402302 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040405e : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000404c4b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403a00 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004003fe : add byte ptr [rax], al ; ret
0x000000000040042e : add byte ptr [rax], al ; ret 0
0x0000000000404c4c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000403a01 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000404fe8 : add byte ptr [rcx + 0x7fe8f845], cl ; ret 0xffff
0x0000000000404fbe : add byte ptr [rcx - 0x561703bb], cl ; ret 0xffff
0x00000000004019ec : add byte ptr [rcx - 0x7629d63a], cl ; ret 0xea81
0x00000000004065dc : add byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x0000000000401568 : add byte ptr [rcx], al ; ret
0x0000000000405b98 : add byte ptr [rdi], cl ; lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000403410 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x00000000004020d6 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000404680 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000405b9e : add cl, ch ; ret 2
0x0000000000405289 : add dword ptr [rax - 0x77], ecx ; ret 0x8148
0x0000000000403d2f : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404c4a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004039ff : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040649d : add dword ptr [rax], ecx ; ret 0x840
0x00000000004020ec : add dword ptr [rdi], ecx ; mov dh, -0x3e ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040617a : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401564 : add eax, 0x207d2e ; add ebx, esi ; ret
0x0000000000405b9b : add eax, 0xe9000000 ; ret 2
0x0000000000407cdd : add eax, dword ptr [rax] ; add al, dl ; ret
0x000000000040152b : add eax, edx ; sar rax, 1 ; jne 0x40153c ; pop rbp ; ret
0x0000000000401569 : add ebx, esi ; ret
0x00000000004016fb : add esp, 0x10 ; pop rbp ; ret
0x0000000000405ecc : add esp, 0x130 ; pop rbp ; ret
0x0000000000404f7c : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000402077 : add esp, 0x20 ; pop rbp ; ret
0x000000000040180d : add esp, 0x30 ; pop rbp ; ret
0x0000000000401d1d : add esp, 0x40 ; pop rbp ; ret
0x000000000040414c : add esp, 0x50 ; pop rbp ; ret
0x0000000000402623 : add esp, 0x70 ; pop rbp ; ret
0x000000000040405a : add esp, 0x90 ; pop rbp ; ret
0x0000000000404e13 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040114e : add esp, 8 ; ret
0x000000000040152a : add rax, rdx ; sar rax, 1 ; jne 0x40153d ; pop rbp ; ret
0x00000000004016fa : add rsp, 0x10 ; pop rbp ; ret
0x0000000000405ecb : add rsp, 0x130 ; pop rbp ; ret
0x0000000000404f7b : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000402076 : add rsp, 0x20 ; pop rbp ; ret
0x000000000040180c : add rsp, 0x30 ; pop rbp ; ret
0x0000000000401d1c : add rsp, 0x40 ; pop rbp ; ret
0x000000000040414b : add rsp, 0x50 ; pop rbp ; ret
0x0000000000402622 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000404059 : add rsp, 0x90 ; pop rbp ; ret
0x0000000000404e12 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040114d : add rsp, 8 ; ret
0x0000000000406179 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401567 : and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000404f9b : and eax, 0x4074a5 ; call 0x401277
0x0000000000401d3f : and eax, 0x6092a0 ; pop rbp ; ret
0x0000000000401d63 : and eax, 0x6092a8 ; pop rbp ; ret
0x0000000000401149 : and eax, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000405149 : call 0x30339
0x0000000000404fa0 : call 0x401272
0x0000000000404fb2 : call 0x401282
0x000000000040514a : call 0x401402
0x0000000000403a39 : call 0xffffffffe902c389
0x0000000000403a38 : call 0xffffffffe902c38a
0x0000000000406719 : call qword ptr [r12 + rbx*8]
0x0000000000407a1b : call qword ptr [rsi]
0x000000000040671a : call qword ptr [rsp + rbx*8]
0x000000000040158d : call rax
0x000000000040378c : call rbx
0x0000000000407bfb : call rdi
0x00000000004079fb : call rdx
0x0000000000405eca : clc ; add rsp, 0x130 ; pop rbp ; ret
0x000000000040517f : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401f20 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404feb : clc ; call 0x401273
0x0000000000404fea : clc ; call 0x401274
0x000000000040152f : clc ; jne 0x401538 ; pop rbp ; ret
0x00000000004024d5 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040665f : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000406662 : clc ; pop rbp ; ret
0x0000000000401727 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004056ab : cld ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004055ea : cld ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404fc1 : cld ; call 0x401273
0x0000000000404fc0 : cld ; call 0x401274
0x000000000040665c : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000406013 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405fb6 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004055e7 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004014ed : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401500 ; pop rbp ; ret
0x000000000040478c : cwde ; mov rcx, qword ptr [rax*8 + 0x4071f8] ; jmp rcx
0x0000000000405c04 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000403192 : dec dword ptr [rcx - 0x77] ; ret 0x294d
0x0000000000403520 : enter 0x4b05, 0x34 ; fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x0000000000408241 : fdiv st(7), st(0) ; jmp rax
0x0000000000403524 : fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x000000000040671c : fmul qword ptr [rax - 0x7d] ; ret
0x00000000004016f9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401500 : hlt ; pop rbp ; mov edi, 0x609230 ; jmp rax
0x0000000000404fe5 : in al, 0x74 ; add byte ptr [rcx + 0x7fe8f845], cl ; ret 0xffff
0x0000000000407cdc : in al, dx ; add eax, dword ptr [rax] ; add al, dl ; ret
0x00000000004037ab : inc dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000404db5 : int 0x80
0x00000000004014f3 : ja 0x4014fa ; pop rbp ; ret
0x00000000004014ff : je 0x4014fd ; pop rbp ; mov edi, 0x609230 ; jmp rax
0x0000000000404fbc : je 0x405006 ; add byte ptr [rcx - 0x561703bb], cl ; ret 0xffff
0x0000000000404fe6 : je 0x405030 ; add byte ptr [rcx + 0x7fe8f845], cl ; ret 0xffff
0x0000000000401566 : jge 0x40158d ; add byte ptr [rcx], al ; ret
0x0000000000401565 : jge 0x40158e ; add byte ptr [rcx], al ; ret
0x0000000000405144 : jge 0x40513e ; mov rsi, qword ptr [rbp - 0x18] ; call 0x401408
0x000000000040132b : jmp 0x401167
0x0000000000405288 : jmp 0xffffffffc2c99a92
0x00000000004075f7 : jmp qword ptr [rax]
0x0000000000402c26 : jmp qword ptr [rcx]
0x0000000000407ce3 : jmp qword ptr [rdx]
0x0000000000401507 : jmp rax
0x00000000004026e9 : jmp rcx
0x0000000000401547 : jmp rdx
0x0000000000401530 : jne 0x401537 ; pop rbp ; ret
0x0000000000405148 : jne 0x405136 ; call 0x401404
0x0000000000402625 : jo 0x402686 ; ret
0x0000000000403c4f : jo 0x403cb5 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004042f4 : jo 0x404355 ; ret
0x000000000040442e : jo 0x40448f ; ret
0x0000000000404fdd : lahf ; ret 0xffff
0x0000000000405b9a : lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000404f99 : lea edi, dword ptr [0x4074a5] ; call 0x401279
0x0000000000404fb3 : leave ; ret 0xffff
0x0000000000404fb0 : mov al, 0 ; call 0x401284
0x00000000004041cb : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000404058 : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000406176 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401d61 : mov byte ptr [0x6092a8], al ; pop rbp ; ret
0x0000000000401d19 : mov byte ptr [rax], 0 ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000401563 : mov byte ptr [rip + 0x207d2e], 1 ; ret
0x00000000004020ee : mov dh, -0x3e ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040617c : mov dh, -0x40 ; pop rbp ; ret
0x0000000000401d3d : mov dword ptr [0x6092a0], edi ; pop rbp ; ret
0x00000000004024d6 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000402498 : mov dword ptr [rax], eax ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000402354 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000402497 : mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000401809 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004016f7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401725 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404fbf : mov dword ptr [rbp - 4], eax ; call 0x401275
0x0000000000404fe9 : mov dword ptr [rbp - 8], eax ; call 0x401275
0x000000000040665d : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040254e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402308 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040509b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402073 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402305 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000401fcf : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405393 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004022bd : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040234e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040249a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040261f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004041c9 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000406014 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004056a9 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004055e8 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040517d : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401f1e : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406660 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040158b : mov ebp, esp ; call rax
0x00000000004014f1 : mov ebp, esp ; ja 0x4014fc ; pop rbp ; ret
0x0000000000404dcd : mov ecx, 0x5b2a830a ; ret
0x00000000004026e2 : mov ecx, dword ptr [rax*8 + 0x406cf0] ; jmp rcx
0x0000000000402a06 : mov ecx, dword ptr [rax*8 + 0x406d38] ; jmp rcx
0x000000000040478e : mov ecx, dword ptr [rax*8 + 0x4071f8] ; jmp rcx
0x0000000000402351 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401585 : mov edi, 0x608e20 ; mov rbp, rsp ; call rax
0x0000000000401502 : mov edi, 0x609230 ; jmp rax
0x0000000000401542 : mov edi, 0x609230 ; jmp rdx
0x0000000000405143 : mov edi, dword ptr [rbp - 0x10] ; mov rsi, qword ptr [rbp - 0x18] ; call 0x401409
0x0000000000404fae : mov edi, eax ; mov al, 0 ; call 0x401286
0x0000000000406717 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000406716 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000405147 : mov esi, dword ptr [rbp - 0x18] ; call 0x401405
0x0000000000401540 : mov esi, eax ; mov edi, 0x609230 ; jmp rdx
0x0000000000401587 : mov fs, word ptr [rax] ; mov rbp, rsp ; call rax
0x0000000000401d3c : mov qword ptr [0x6092a0], rdi ; pop rbp ; ret
0x000000000040254d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004041ca : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040509a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402072 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402304 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000401fce : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405392 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004022bc : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040261e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004041c8 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040517c : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401f1d : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040158a : mov rbp, rsp ; call rax
0x00000000004014f0 : mov rbp, rsp ; ja 0x4014fd ; pop rbp ; ret
0x00000000004026e1 : mov rcx, qword ptr [rax*8 + 0x406cf0] ; jmp rcx
0x0000000000402a05 : mov rcx, qword ptr [rax*8 + 0x406d38] ; jmp rcx
0x000000000040478d : mov rcx, qword ptr [rax*8 + 0x4071f8] ; jmp rcx
0x0000000000404fad : mov rdi, rax ; mov al, 0 ; call 0x401287
0x0000000000405146 : mov rsi, qword ptr [rbp - 0x18] ; call 0x401406
0x000000000040153f : mov rsi, rax ; mov edi, 0x609230 ; jmp rdx
0x000000000040617b : movzx eax, al ; pop rbp ; ret
0x00000000004020ed : movzx eax, dl ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406738 : nop dword ptr [rax + rax] ; ret
0x0000000000402d6d : or al, 0x18 ; ret 0x6451
0x00000000004020d0 : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x00000000004043b1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040672c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000403c51 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040672e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000403c53 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406730 : pop r14 ; pop r15 ; ret
0x0000000000403a03 : pop r14 ; pop rbp ; ret
0x0000000000403c55 : pop r15 ; pop rbp ; ret
0x0000000000406732 : pop r15 ; ret
0x0000000000401562 : pop rbp ; mov byte ptr [rip + 0x207d2e], 1 ; ret
0x0000000000401501 : pop rbp ; mov edi, 0x609230 ; jmp rax
0x000000000040153e : pop rbp ; mov rsi, rax ; mov edi, 0x609230 ; jmp rdx
0x000000000040672b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040672f : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004014f5 : pop rbp ; ret
0x0000000000403c50 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000404c4d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403a02 : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000404dd1 : pop rbx ; ret
0x0000000000403c56 : pop rdi ; pop rbp ; ret
0x0000000000406733 : pop rdi ; ret
0x0000000000403c54 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000406731 : pop rsi ; pop r15 ; ret
0x0000000000403a04 : pop rsi ; pop rbp ; ret
0x000000000040672d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000403c52 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040414e : push rax ; pop rbp ; ret
0x0000000000401584 : push rbp ; mov edi, 0x608e20 ; mov rbp, rsp ; call rax
0x0000000000400400 : ret
0x0000000000400430 : ret 0
0x0000000000405de6 : ret 0x148
0x0000000000403dee : ret 0x1b2
0x0000000000401332 : ret 0x207d
0x0000000000402055 : ret 0x2948
0x0000000000403179 : ret 0x294c
0x0000000000403195 : ret 0x294d
0x00000000004023d4 : ret 0x5589
0x0000000000402d6f : ret 0x6451
0x000000000040528c : ret 0x8148
0x00000000004020ef : ret 0x8348
0x000000000040649f : ret 0x840
0x0000000000403413 : ret 0x8840
0x0000000000404749 : ret 0x8844
0x00000000004052a0 : ret 0x8948
0x0000000000403198 : ret 0x8949
0x000000000040332c : ret 0x89a5
0x000000000040317c : ret 0x8b48
0x0000000000401a1d : ret 0xb0
0x0000000000405dd9 : ret 0xb849
0x0000000000401525 : ret 0xc148
0x0000000000405b40 : ret 0xc2f6
0x0000000000402b94 : ret 0xca21
0x0000000000401b55 : ret 0xca29
0x0000000000404683 : ret 0xd284
0x00000000004020d9 : ret 0xe280
0x00000000004019f2 : ret 0xea81
0x0000000000403a3c : ret 0xee8
0x0000000000403428 : ret 0xf180
0x0000000000405b33 : ret 0xf280
0x0000000000402c0e : ret 0xf281
0x00000000004031ad : ret 0xfde8
0x0000000000401baa : ret 0xfff8
0x0000000000404fa2 : ret 0xffff
0x0000000000403df4 : ret 1
0x0000000000405ba0 : ret 2
0x0000000000402496 : rol byte ptr [rcx + rcx*4], 1 ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000407660 : rol byte ptr [rip - 0x51100000], -1 ; jmp rax
0x0000000000404db0 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000402620 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x40268b ; ret
0x000000000040152c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40153b ; pop rbp ; ret
0x0000000000404db1 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x000000000040316d : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000403176 : ror byte ptr [rax - 0x77], 1 ; ret 0x294c
0x0000000000402621 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x40268a ; ret
0x0000000000404fbb : sal byte ptr [rax + rax*2], 1 ; mov dword ptr [rbp - 4], eax ; call 0x401279
0x000000000040152e : sar eax, 1 ; jne 0x401539 ; pop rbp ; ret
0x000000000040152d : sar rax, 1 ; jne 0x40153a ; pop rbp ; ret
0x0000000000407cd8 : sbb al, 0 ; add byte ptr [rax], al ; in al, dx ; add eax, dword ptr [rax] ; add al, dl ; ret
0x0000000000406178 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000404dcf : sub dword ptr [rdx], 0x5b ; ret
0x000000000040676d : sub esp, 8 ; add rsp, 8 ; ret
0x000000000040676c : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040673a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000403412 : xchg eax, ebp ; ret 0x8840
0x00000000004020d8 : xchg eax, ebp ; ret 0xe280
0x0000000000404682 : xchg eax, esp ; ret 0xd284
0x0000000000405ece : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000404147 : xor eax, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x0000000000402495 : xor eax, edx ; mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
