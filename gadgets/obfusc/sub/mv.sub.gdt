0x000000000041efb8 : adc al, -0x75 ; hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041bc5c : adc al, byte ptr [rcx + 0x4f9] ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x000000000041e60a : adc byte ptr [rax - 0x75], cl ; jge 0x41e5d4 ; call rax
0x000000000041e609 : adc byte ptr [rax - 0x75], cl ; jge 0x41e5d5 ; call rax
0x000000000041e79d : adc byte ptr [rax - 0x75], cl ; jge 0x41e767 ; call rax
0x000000000041e79c : adc byte ptr [rax - 0x75], cl ; jge 0x41e768 ; call rax
0x00000000004267d0 : adc byte ptr [rbx - 1], dh ; call qword ptr [rax]
0x000000000040ebda : adc byte ptr [rcx - 0xa], al ; jmp qword ptr [rcx]
0x000000000041aef2 : adc dword ptr [rcx - 0xa], eax ; jmp qword ptr [rcx]
0x000000000040dd3b : adc dword ptr [rdi + rdi*8 - 1], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000413729 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000423c3d : adc edi, edi ; call qword ptr [rax]
0x0000000000423c2d : adc edi, edi ; call rax
0x000000000041f359 : add al, 0 ; add byte ptr [rax - 0x73], cl ; xor al, 0x25 ; ret
0x000000000040dd82 : add al, 0x25 ; clc ; mov byte ptr [rdx], ah ; pop rbp ; ret
0x000000000040c42a : add al, 0x25 ; nop ; ret 0x40
0x00000000004267cc : add al, 0x26 ; add byte ptr [rax], al ; adc byte ptr [rbx - 1], dh ; call qword ptr [rax]
0x000000000040f9da : add al, 0x48 ; add eax, ecx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000426a6f : add al, ah ; jg 0x426a76 ; jmp qword ptr [rcx]
0x0000000000423c3b : add al, bh ; adc edi, edi ; call qword ptr [rax]
0x0000000000424cf7 : add al, bh ; mov dr1, esi ; call qword ptr [rsi]
0x0000000000423603 : add al, bh ; std ; jmp qword ptr [rax]
0x0000000000424997 : add al, bl ; jne 0x42499d ; call qword ptr [rbx]
0x00000000004239b3 : add al, bl ; ret 0xfffe
0x0000000000426207 : add al, bl ; sbb edi, edi ; call qword ptr [rsi]
0x0000000000405f36 : add al, bpl ; ret
0x0000000000405f4f : add al, bpl ; stosb byte ptr [rdi], al ; ret
0x000000000040ee16 : add al, byte ptr [rax] ; add byte ptr [rcx + 0x21ca31c2], cl ; ret 0xfa81
0x000000000040d9a7 : add al, byte ptr [rax] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004241e7 : add al, ch ; fdivp st(5) ; jmp qword ptr [rax]
0x00000000004063bc : add al, ch ; out dx, al ; ret 0xffff
0x0000000000405f37 : add al, ch ; ret
0x000000000041dce8 : add al, ch ; ret 0xfe49
0x0000000000405f50 : add al, ch ; stosb byte ptr [rdi], al ; ret
0x0000000000423b2d : add bh, bh ; call rax
0x0000000000423645 : add bh, dh ; jmp qword ptr [rax]
0x0000000000420a0f : add bl, dh ; ret
0x000000000041d8cc : add byte ptr [r8], r8b ; add byte ptr [rcx - 0x100f43], al ; jmp qword ptr [rsi]
0x0000000000406e4d : add byte ptr [r9 - 0x77], r8b ; ret 0x8141
0x0000000000406e6d : add byte ptr [r9], r12b ; ret 0x941
0x0000000000410919 : add byte ptr [rax + 0x29], cl ; ret 0x8948
0x0000000000414f63 : add byte ptr [rax + 1], cl ; ret 0x3948
0x000000000040c95b : add byte ptr [rax + 1], cl ; ret 0x3b48
0x000000000040c9c2 : add byte ptr [rax + 1], cl ; ret 0x4a8b
0x000000000040cbf7 : add byte ptr [rax + 1], cl ; ret 0x8b48
0x000000000042426b : add byte ptr [rax + rax - 0x17b00000], ah ; std ; jmp rdx
0x000000000041e86e : add byte ptr [rax + rax], 0 ; pop rbp ; ret
0x00000000004241e3 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; call 0x21423fd3
0x00000000004249f3 : add byte ptr [rax + rcx], ch ; add byte ptr [rax], al ; or byte ptr [rdi - 2], dh ; jmp qword ptr [rdi]
0x000000000042426f : add byte ptr [rax - 0x18], dl ; std ; jmp rdx
0x000000000041dc87 : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x000000000041f35b : add byte ptr [rax - 0x73], cl ; xor al, 0x25 ; ret
0x000000000040cf72 : add byte ptr [rax - 0x75], cl ; call 0x490358ca
0x000000000040e0ab : add byte ptr [rax - 0x75], cl ; call 0x49036a03
0x000000000040fcef : add byte ptr [rax - 0x75], cl ; fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x000000000041e81b : add byte ptr [rax - 0x75], cl ; jge 0x41e7dd ; call rax
0x000000000041e6af : add byte ptr [rax - 0x75], cl ; mov ebp, 0xfffffba0 ; call rax
0x000000000041726d : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000414cfd : add byte ptr [rax - 0x77], cl ; jge 0x414d00 ; pop rbp ; ret
0x0000000000402f05 : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x00000000004267ce : add byte ptr [rax], al ; adc byte ptr [rbx - 1], dh ; call qword ptr [rax]
0x00000000004267ca : add byte ptr [rax], al ; add al, 0x26 ; add byte ptr [rax], al ; adc byte ptr [rbx - 1], dh ; call qword ptr [rax]
0x00000000004241e5 : add byte ptr [rax], al ; add al, ch ; fdivp st(5) ; jmp qword ptr [rax]
0x0000000000420a0d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000410917 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8948
0x0000000000414f61 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x3948
0x000000000040c959 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x3b48
0x000000000040c9c0 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x4a8b
0x000000000040cbf5 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8b48
0x000000000042426d : add byte ptr [rax], al ; add byte ptr [rax - 0x18], dl ; std ; jmp rdx
0x000000000041dc85 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x000000000040cf70 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; call 0x490358cc
0x000000000040e0a9 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; call 0x49036a05
0x000000000040fced : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x0000000000414cfb : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jge 0x414d02 ; pop rbp ; ret
0x0000000000402f03 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x0000000000420a0b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040364d : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041038d : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041a992 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000414cfa : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000420a0c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000409a99 : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], al ; ret
0x000000000040be2e : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000418b16 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040acfb : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7038b], cl ; ret 0xb0
0x0000000000403b43 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b72f8b], cl ; ret 0xb0
0x0000000000403c2a : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7338b], cl ; ret 0xb0
0x000000000041853b : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x0000000000419008 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000041d8cd : add byte ptr [rax], al ; add byte ptr [rcx - 0x100f43], al ; jmp qword ptr [rsi]
0x000000000040ec70 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret
0x000000000040ede8 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0x3141
0x0000000000417bb2 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0xf40
0x000000000041947b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000412dce : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000404309 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000040409b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x00000000004042fc : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040d4c2 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000414653 : add byte ptr [rax], al ; add cl, ch ; ret
0x000000000041f4ac : add byte ptr [rax], al ; add cl, ch ; ret 2
0x000000000040364f : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041038f : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040c288 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041a994 : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004020c3 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000423cba : add byte ptr [rax], al ; call 0x11423bdc
0x0000000000424df6 : add byte ptr [rax], al ; call 0x12424c94
0x00000000004241e6 : add byte ptr [rax], al ; call 0x21423fd0
0x0000000000424f76 : add byte ptr [rax], al ; call 0xffffffffd2424e22
0x00000000004261a6 : add byte ptr [rax], al ; call 0xffffffffd84260c9
0x0000000000423c3a : add byte ptr [rax], al ; clc ; adc edi, edi ; call qword ptr [rax]
0x0000000000424cf6 : add byte ptr [rax], al ; clc ; mov dr1, esi ; call qword ptr [rsi]
0x0000000000423602 : add byte ptr [rax], al ; clc ; std ; jmp qword ptr [rax]
0x0000000000424916 : add byte ptr [rax], al ; cmp byte ptr [rdx - 2], dh ; jmp rsi
0x000000000042403a : add byte ptr [rax], al ; cwde ; mov bh, -1 ; jmp qword ptr [rax]
0x0000000000423ffa : add byte ptr [rax], al ; cwde ; mov dl, -1 ; jmp qword ptr [rax]
0x00000000004239ba : add byte ptr [rax], al ; cwde ; ret
0x0000000000423732 : add byte ptr [rax], al ; fcomp dword ptr [rcx - 2] ; jmp rax
0x0000000000423e6a : add byte ptr [rax], al ; fcomp dword ptr [rdi - 1] ; jmp rax
0x00000000004261a2 : add byte ptr [rax], al ; fcomp qword ptr [rdi] ; add byte ptr [rax], al ; call 0xffffffffd84260cd
0x0000000000424996 : add byte ptr [rax], al ; fdiv dword ptr [rbp - 2] ; call qword ptr [rbx]
0x00000000004021b9 : add byte ptr [rax], al ; jmp 0x4020d9
0x00000000004256fe : add byte ptr [rax], al ; loopne 0x425706 ; jmp rdx
0x000000000042438e : add byte ptr [rax], al ; mov al, -2 ; std ; jmp rbx
0x000000000041498a : add byte ptr [rax], al ; mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000414abd : add byte ptr [rax], al ; mov eax, edi ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000414c19 : add byte ptr [rax], al ; mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040c11d : add byte ptr [rax], al ; mov eax, esi ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000414a31 : add byte ptr [rax], al ; mov eax, esi ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004002fa : add byte ptr [rax], al ; mov esp, 0x439e7650 ; ret
0x0000000000414cfc : add byte ptr [rax], al ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000411cc2 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000042426a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x18], dl ; std ; jmp rdx
0x0000000000426a6a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; sub byte ptr [rax], al ; add al, ah ; jg 0x426a7b ; jmp qword ptr [rcx]
0x000000000042585e : add byte ptr [rax], al ; nop ; in al, -2 ; jmp qword ptr [rax]
0x00000000004249f6 : add byte ptr [rax], al ; or byte ptr [rdi - 2], dh ; jmp qword ptr [rdi]
0x0000000000423b3a : add byte ptr [rax], al ; pop rax ; add edi, edi ; call qword ptr [rax]
0x0000000000423bba : add byte ptr [rax], al ; pop rax ; or bh, bh ; call qword ptr [rax]
0x000000000042413a : add byte ptr [rax], al ; pop rax ; sar bh, cl ; jmp qword ptr [rax]
0x0000000000403789 : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000409816 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040bb3d : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000418b17 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000420a0e : add byte ptr [rax], al ; ret
0x0000000000424072 : add byte ptr [rax], al ; ret 0xffff
0x00000000004241e2 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; call 0x21423fd4
0x0000000000424cf2 : add byte ptr [rax], al ; sub al, 0xb ; add byte ptr [rax], al ; clc ; mov dr1, esi ; call qword ptr [rsi]
0x0000000000424df2 : add byte ptr [rax], al ; sub al, 0xc ; add byte ptr [rax], al ; call 0x12424c98
0x00000000004249f2 : add byte ptr [rax], al ; sub al, 8 ; add byte ptr [rax], al ; or byte ptr [rdi - 2], dh ; jmp qword ptr [rdi]
0x00000000004256fa : add byte ptr [rax], al ; xor al, 0x15 ; add byte ptr [rax], al ; loopne 0x42570a ; jmp rdx
0x0000000000423b2b : add byte ptr [rax], bh ; add bh, bh ; call rax
0x0000000000424917 : add byte ptr [rax], bh ; jb 0x42491d ; jmp rsi
0x0000000000423cfb : add byte ptr [rax], bl ; sbb bh, bh ; call qword ptr [rax]
0x000000000042402b : add byte ptr [rax], ch ; mov dh, -1 ; jmp rax
0x00000000004249f7 : add byte ptr [rax], cl ; ja 0x4249fd ; jmp qword ptr [rdi]
0x000000000042406b : add byte ptr [rax], cl ; ret 0xffff
0x000000000042573f : add byte ptr [rax], dh ; jrcxz 0x425745 ; jmp qword ptr [rdx]
0x00000000004267cf : add byte ptr [rax], dl ; jae 0x4267d6 ; call qword ptr [rax]
0x000000000042573b : add byte ptr [rbp + rdx], dh ; add byte ptr [rax], dh ; jrcxz 0x425749 ; jmp qword ptr [rdx]
0x0000000000409a9b : add byte ptr [rbp - 0x77], al ; ret
0x000000000040730d : add byte ptr [rbp - 0x77], al ; ret 0x3141
0x000000000041852d : add byte ptr [rbp - 0x77], al ; ret 0x3145
0x0000000000419490 : add byte ptr [rbp - 0x77], al ; ret 0x8141
0x0000000000409817 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040bb3e : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040aca7 : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000418b18 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000424cf3 : add byte ptr [rbx + rcx], ch ; add byte ptr [rax], al ; clc ; mov dr1, esi ; call qword ptr [rsi]
0x000000000040acfd : add byte ptr [rbx - 0x76b7038b], cl ; ret 0xb0
0x0000000000403b45 : add byte ptr [rbx - 0x76b72f8b], cl ; ret 0xb0
0x0000000000403c2c : add byte ptr [rbx - 0x76b7338b], cl ; ret 0xb0
0x0000000000406ae6 : add byte ptr [rcx + 0x21ca31c2], cl ; ret 0x9589
0x000000000040ee18 : add byte ptr [rcx + 0x21ca31c2], cl ; ret 0xfa81
0x000000000041853d : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x000000000041900a : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000041d8cf : add byte ptr [rcx - 0x100f43], al ; jmp qword ptr [rsi]
0x000000000040ec72 : add byte ptr [rcx - 0x77], al ; ret
0x000000000040edea : add byte ptr [rcx - 0x77], al ; ret 0x3141
0x0000000000406e4e : add byte ptr [rcx - 0x77], al ; ret 0x8141
0x000000000040310a : add byte ptr [rcx - 0x78], al ; ret
0x00000000004208ac : add byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x0000000000406e6e : add byte ptr [rcx], ah ; ret 0x941
0x000000000041d6f9 : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004028a8 : add byte ptr [rcx], al ; ret
0x0000000000424138 : add byte ptr [rcx], bh ; add byte ptr [rax], al ; pop rax ; sar bh, cl ; jmp qword ptr [rax]
0x0000000000417bb4 : add byte ptr [rcx], bh ; ret 0xf40
0x0000000000424913 : add byte ptr [rdi + rax], cl ; add byte ptr [rax], bh ; jb 0x424921 ; jmp rsi
0x000000000041f4a8 : add byte ptr [rdi], cl ; lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000414c4a : add byte ptr [rdi], cl ; mov bh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041947d : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000412dd0 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x000000000040430b : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000040409d : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x00000000004042fe : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040d4c4 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000040f84d : add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x00000000004267cb : add byte ptr [rsi], al ; add byte ptr [rax], al ; adc byte ptr [rbx - 1], dh ; call qword ptr [rax]
0x0000000000424df3 : add byte ptr [rsp + rcx], ch ; add byte ptr [rax], al ; call 0x12424c97
0x000000000040c50e : add byte ptr ds:[rax], al ; pop rbp ; ret
0x00000000004267cd : add byte ptr es:[rax], al ; adc byte ptr [rbx - 1], dh ; call qword ptr [rax]
0x0000000000423cb9 : add byte ptr es:[rax], al ; call 0x11423bdd
0x000000000040e1ac : add cl, byte ptr [rax - 0x77] ; ret 0x148
0x0000000000408707 : add cl, byte ptr [rbp - 0x69] ; jmp 0x407999
0x0000000000414655 : add cl, ch ; ret
0x000000000041f4ae : add cl, ch ; ret 2
0x0000000000423635 : add dh, bh ; jmp rax
0x0000000000411792 : add dword ptr [rax + 0xf], eax ; mov dh, -0x39 ; pop rbp ; ret
0x000000000041ec01 : add dword ptr [rax + 0xf], eax ; mov dh, -0x3a ; pop rbp ; ret
0x00000000004177a9 : add dword ptr [rax - 0x77], ecx ; ret 0x8148
0x00000000004136ef : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040730b : add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], al ; ret 0x3141
0x0000000000409815 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040bb3c : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000041c05c : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000041164c : add dword ptr [rax], ecx ; ret 0x840
0x00000000004086b6 : add dword ptr [rax], ecx ; ret 0x844
0x0000000000409215 : add dword ptr [rax], esp ; ret 0x840
0x000000000040c595 : add dword ptr [rcx + rax], esp ; movzx eax, al ; pop rbp ; ret
0x000000000041ee3b : add dword ptr [rdi + rcx - 0x4a], eax ; ret 0xee81
0x000000000040e3bc : add dword ptr [rdi], ecx ; mov dh, -0x3e ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040c18b : add dword ptr [rdi], ecx ; mov dh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040bf1d : add dword ptr [rdi], ecx ; mov dh, -0x3f ; pop rbp ; ret
0x0000000000404ca0 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408daf : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404319 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403841 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000408c9d : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000403983 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004093fc : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000404463 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x000000000041862b : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret
0x000000000041d094 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x5588
0x0000000000408368 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x9588
0x0000000000408946 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xe280
0x00000000004028a4 : add eax, 0x225bee ; add ebx, esi ; ret
0x0000000000400335 : add eax, 0xd0a4f270 ; ret
0x000000000041862e : add eax, 0xe9000000 ; ret
0x000000000041f4ab : add eax, 0xe9000000 ; ret 2
0x000000000041bcdb : add eax, 0xf000000 ; xchg eax, esp ; ret 0x9588
0x000000000040028f : add eax, 0xf69991ff ; wait ; ret 0x3945
0x00000000004200b6 : add eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040f9dc : add eax, ecx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040286b : add eax, edx ; sar rax, 1 ; jne 0x40287c ; pop rbp ; ret
0x00000000004028a9 : add ebx, esi ; ret
0x0000000000423b3d : add edi, edi ; call qword ptr [rax]
0x000000000040b4a3 : add esi, eax ; mov rax, rsi ; pop rbp ; ret
0x0000000000402a8b : add esp, 0x10 ; pop rbp ; ret
0x000000000041d6f7 : add esp, 0x100 ; pop rbp ; ret
0x000000000041da8d : add esp, 0x1030 ; pop rbp ; ret
0x000000000040cd85 : add esp, 0x1070 ; pop rbp ; ret
0x000000000041c059 : add esp, 0x108 ; pop rbx ; pop rbp ; ret
0x0000000000416b57 : add esp, 0x120 ; pop rbp ; ret
0x000000000041f7dc : add esp, 0x130 ; pop rbp ; ret
0x00000000004049f5 : add esp, 0x160 ; pop rbp ; ret
0x000000000041432c : add esp, 0x170 ; pop rbp ; ret
0x0000000000420aab : add esp, 0x18 ; ret
0x0000000000408ad7 : add esp, 0x190 ; pop rbp ; ret
0x000000000041743c : add esp, 0x1a0 ; pop rbp ; ret
0x000000000040e67c : add esp, 0x1b0 ; pop rbp ; ret
0x0000000000417fee : add esp, 0x1e0 ; pop rbp ; ret
0x0000000000403a47 : add esp, 0x20 ; pop rbp ; ret
0x0000000000402b9d : add esp, 0x30 ; pop rbp ; ret
0x0000000000403846 : add esp, 0x40 ; pop rbp ; ret
0x000000000041cbcc : add esp, 0x48 ; pop rbx ; pop rbp ; ret
0x000000000041e86c : add esp, 0x480 ; pop rbp ; ret
0x0000000000408ca2 : add esp, 0x50 ; pop rbp ; ret
0x0000000000403988 : add esp, 0x60 ; pop rbp ; ret
0x00000000004050d4 : add esp, 0x68 ; pop rbx ; pop rbp ; ret
0x0000000000409401 : add esp, 0x70 ; pop rbp ; ret
0x0000000000408f28 : add esp, 0x80 ; pop rbp ; ret
0x000000000040b160 : add esp, 0x90 ; pop rbp ; ret
0x0000000000418b13 : add esp, 0x98 ; pop rbx ; pop rbp ; ret
0x00000000004140c8 : add esp, 0xa0 ; pop rbp ; ret
0x0000000000414823 : add esp, 0xb0 ; pop rbp ; ret
0x0000000000403785 : add esp, 0xc0 ; pop rbp ; ret
0x0000000000404233 : add esp, 0xd0 ; pop rbp ; ret
0x000000000041acce : add esp, 0xe0 ; pop rbp ; ret
0x0000000000404c5b : add esp, 0xf0 ; pop rbp ; ret
0x00000000004020c6 : add esp, 8 ; ret
0x00000000004200b5 : add rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040f9db : add rax, rcx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040286a : add rax, rdx ; sar rax, 1 ; jne 0x40287d ; pop rbp ; ret
0x000000000040b4a2 : add rsi, rax ; mov rax, rsi ; pop rbp ; ret
0x0000000000402a8a : add rsp, 0x10 ; pop rbp ; ret
0x000000000041d6f6 : add rsp, 0x100 ; pop rbp ; ret
0x000000000041da8c : add rsp, 0x1030 ; pop rbp ; ret
0x000000000040cd84 : add rsp, 0x1070 ; pop rbp ; ret
0x000000000041c058 : add rsp, 0x108 ; pop rbx ; pop rbp ; ret
0x0000000000416b56 : add rsp, 0x120 ; pop rbp ; ret
0x000000000041f7db : add rsp, 0x130 ; pop rbp ; ret
0x00000000004049f4 : add rsp, 0x160 ; pop rbp ; ret
0x000000000041432b : add rsp, 0x170 ; pop rbp ; ret
0x0000000000420aaa : add rsp, 0x18 ; ret
0x0000000000408ad6 : add rsp, 0x190 ; pop rbp ; ret
0x000000000041743b : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000040e67b : add rsp, 0x1b0 ; pop rbp ; ret
0x0000000000417fed : add rsp, 0x1e0 ; pop rbp ; ret
0x0000000000403a46 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000402b9c : add rsp, 0x30 ; pop rbp ; ret
0x0000000000403845 : add rsp, 0x40 ; pop rbp ; ret
0x000000000041cbcb : add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x000000000041e86b : add rsp, 0x480 ; pop rbp ; ret
0x0000000000408ca1 : add rsp, 0x50 ; pop rbp ; ret
0x0000000000403987 : add rsp, 0x60 ; pop rbp ; ret
0x00000000004050d3 : add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x0000000000409400 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000408f27 : add rsp, 0x80 ; pop rbp ; ret
0x000000000040b15f : add rsp, 0x90 ; pop rbp ; ret
0x0000000000418b12 : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x00000000004140c7 : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000414822 : add rsp, 0xb0 ; pop rbp ; ret
0x0000000000403784 : add rsp, 0xc0 ; pop rbp ; ret
0x0000000000404232 : add rsp, 0xd0 ; pop rbp ; ret
0x000000000041accd : add rsp, 0xe0 ; pop rbp ; ret
0x0000000000404c5a : add rsp, 0xf0 ; pop rbp ; ret
0x00000000004020c5 : add rsp, 8 ; ret
0x0000000000423c39 : and al, 0 ; add al, bh ; adc edi, edi ; call qword ptr [rax]
0x0000000000404462 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004028a7 : and al, byte ptr [rax] ; add ebx, esi ; ret
0x0000000000411790 : and bh, 1 ; movzx eax, dil ; pop rbp ; ret
0x0000000000426205 : and byte ptr [rax], al ; add al, bl ; sbb edi, edi ; call qword ptr [rsi]
0x0000000000423b29 : and byte ptr [rax], al ; add byte ptr [rax], bh ; add bh, bh ; call rax
0x00000000004195ab : and byte ptr [rbx + 0x41], bl ; pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000416b59 : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040bf1b : and cl, 1 ; movzx eax, cl ; pop rbp ; ret
0x000000000041ebff : and dh, 1 ; movzx eax, sil ; pop rbp ; ret
0x000000000041178f : and dil, 1 ; movzx eax, dil ; pop rbp ; ret
0x000000000040829d : and dword ptr [rdx], 0x48 ; add esp, 0x10 ; pop rbp ; ret
0x0000000000409cf7 : and eax, 0x2144ce03 ; ret 0x941
0x000000000040fdf5 : and eax, 0x4229c0 ; mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x000000000040dbff : and eax, 0x6288e8 ; pop rbp ; ret
0x000000000040dd5f : and eax, 0x6288f0 ; pop rbp ; ret
0x000000000040dd83 : and eax, 0x6288f8 ; pop rbp ; ret
0x0000000000409cd5 : and eax, 0x8945ce03 ; ret
0x0000000000405cf6 : and eax, dword ptr [rcx - 0xf] ; jmp qword ptr [rcx]
0x000000000041e1c9 : and eax, edx ; xor rdi, rdx ; or rax, rdi ; pop rbp ; ret
0x000000000041e44e : and edx, eax ; mov al, dl ; movzx eax, al ; pop rbp ; ret
0x000000000041e328 : and edx, eax ; mov ax, dx ; movzx eax, ax ; pop rbp ; ret
0x000000000041e0d7 : and edx, eax ; or r9d, edx ; mov eax, r9d ; pop rbp ; ret
0x000000000041e3e3 : and edx, ebx ; mov al, dl ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000041e44d : and edx, r8d ; mov al, dl ; movzx eax, al ; pop rbp ; ret
0x000000000040ebd8 : and esi, dword ptr [rcx] ; adc byte ptr [rcx - 0xa], al ; jmp qword ptr [rcx]
0x000000000040ebd7 : and r14d, dword ptr [r9] ; adc byte ptr [rcx - 0xa], al ; jmp qword ptr [rcx]
0x000000000041ebfe : and sil, 1 ; movzx eax, sil ; pop rbp ; ret
0x0000000000423cbc : call 0x11423bda
0x0000000000424df8 : call 0x12424c92
0x00000000004241e8 : call 0x21423fce
0x0000000000405ff0 : call 0x4022a2
0x00000000004097b2 : call 0x4022a8
0x00000000004060b1 : call 0x402302
0x00000000004063bd : call 0x4026b2
0x00000000004036ec : call 0x402878
0x000000000040cf76 : call 0x490358c6
0x000000000040cf75 : call 0x490358c7
0x000000000040e0af : call 0x490369ff
0x000000000040e0ae : call 0x49036a00
0x000000000040387c : call 0x6d28fb0c
0x000000000040387b : call 0x6d28fb0d
0x0000000000408988 : call 0xffffffff81ba95b5
0x00000000004165a1 : call 0xffffffffca6b2831
0x00000000004165a0 : call 0xffffffffca6b2832
0x0000000000424f78 : call 0xffffffffd2424e20
0x00000000004261a8 : call 0xffffffffd84260c7
0x00000000004133f9 : call 0xffffffffe903bd49
0x00000000004133f8 : call 0xffffffffe903bd4a
0x00000000004065e2 : call 0xfffffffff1c19c26
0x00000000004102e1 : call 0xffffffffff7a8e32
0x00000000004102e0 : call 0xffffffffff7a8e33
0x000000000041041f : call 0xffffffffff7a8f70
0x000000000041041e : call 0xffffffffff7a8f71
0x00000000004209e9 : call qword ptr [r12 + rbx*8]
0x0000000000423b3f : call qword ptr [rax]
0x000000000042499b : call qword ptr [rbx]
0x0000000000400290 : call qword ptr [rcx - 0x3d640967]
0x000000000042481b : call qword ptr [rcx]
0x000000000042501b : call qword ptr [rdx]
0x0000000000424cfb : call qword ptr [rsi]
0x00000000004209ea : call qword ptr [rsp + rbx*8]
0x00000000004028cd : call rax
0x000000000041314c : call rbx
0x0000000000424f7b : call rcx
0x000000000042565b : call rdi
0x0000000000423c3c : clc ; adc edi, edi ; call qword ptr [rax]
0x000000000041168a : clc ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041f7da : clc ; add rsp, 0x130 ; pop rbp ; ret
0x000000000040eaa6 : clc ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040c3f3 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040fd47 : clc ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041e86a : clc ; add rsp, 0x480 ; pop rbp ; ret
0x000000000041933a : clc ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040d2ae : clc ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040d0db : clc ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040f3d7 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x00000000004140c6 : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x0000000000414821 : clc ; add rsp, 0xb0 ; pop rbp ; ret
0x0000000000411580 : clc ; add rsp, 0xc0 ; pop rbp ; ret
0x000000000040286f : clc ; jne 0x402878 ; pop rbp ; ret
0x000000000041e2ba : clc ; mov ax, r8w ; movzx eax, ax ; pop rbp ; ret
0x000000000041eefa : clc ; mov byte ptr [rax + 0x1c], 0 ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000040dd84 : clc ; mov byte ptr [rdx], ah ; pop rbp ; ret
0x0000000000424cf8 : clc ; mov dr1, esi ; call qword ptr [rsi]
0x0000000000411e95 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040b197 : clc ; mov dword ptr [rbp - 0xc], esi ; mov qword ptr [rbp - 0x18], rdx ; pop rbp ; ret
0x000000000041ede8 : clc ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x000000000041cc6e : clc ; mov dword ptr [rcx + 0x18], eax ; pop rbp ; ret
0x000000000041c726 : clc ; mov dword ptr [rcx + 0x2c], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041ea67 : clc ; mov dword ptr [rdi + 0x18], 0x95f616 ; pop rbp ; ret
0x000000000042000b : clc ; mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x000000000042092f : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004115be : clc ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040dbe3 : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040f53b : clc ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040f55b : clc ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040f57b : clc ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000414c9b : clc ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000414cdb : clc ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000414cbb : clc ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000041dfec : clc ; mov rax, r8 ; pop rbp ; ret
0x0000000000404d47 : clc ; pop rbp ; ret
0x0000000000423604 : clc ; std ; jmp qword ptr [rax]
0x0000000000402ab7 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041d6f5 : cld ; add rsp, 0x100 ; pop rbp ; ret
0x000000000041da8b : cld ; add rsp, 0x1030 ; pop rbp ; ret
0x0000000000416b55 : cld ; add rsp, 0x120 ; pop rbp ; ret
0x00000000004049f3 : cld ; add rsp, 0x160 ; pop rbp ; ret
0x0000000000416446 : cld ; add rsp, 0x1b0 ; pop rbp ; ret
0x0000000000404e44 : cld ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041827e : cld ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041988f : cld ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041d402 : cld ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041fff2 : cld ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040b15e : cld ; add rsp, 0x90 ; pop rbp ; ret
0x000000000040d80a : cld ; add rsp, 0xc0 ; pop rbp ; ret
0x0000000000404231 : cld ; add rsp, 0xd0 ; pop rbp ; ret
0x000000000041accc : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x0000000000404c59 : cld ; add rsp, 0xf0 ; pop rbp ; ret
0x000000000042092c : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000418053 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404e41 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041827b : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041d3ff : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000407564 : cmove esp, dword ptr [rcx] ; ret 0x8941
0x0000000000405f32 : cmp al, 0x25 ; in eax, 0x1d ; add al, bpl ; ret
0x000000000041dc8a : cmp al, 0x25 ; ret
0x0000000000424918 : cmp byte ptr [rdx - 2], dh ; jmp rsi
0x000000000040fcca : cmp dword ptr [rax - 0x75], ecx ; jne 0x40fcb4 ; call rax
0x0000000000417ed9 : cmp dword ptr [rdx - 0x76be63d5], ebx ; ret
0x000000000040282d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x402840 ; pop rbp ; ret
0x0000000000406e4b : cmp edi, dword ptr [rdx + 0x4d] ; add byte ptr [rcx - 0x77], al ; ret 0x8141
0x0000000000406e6b : cmp edi, dword ptr [rdx + 0x4d] ; add byte ptr [rcx], ah ; ret 0x941
0x00000000004184df : cmpsd dword ptr [rsi], dword ptr [rdi] ; cvttps2pi mm0, qword ptr [rcx - 0xe] ; jmp qword ptr [rcx]
0x00000000004184e0 : cvttps2pi mm0, qword ptr [rcx - 0xe] ; jmp qword ptr [rcx]
0x0000000000418b15 : cwde ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000042403c : cwde ; mov bh, -1 ; jmp qword ptr [rax]
0x0000000000423ffc : cwde ; mov dl, -1 ; jmp qword ptr [rax]
0x0000000000416c4c : cwde ; mov rcx, qword ptr [rax*8 + 0x422f78] ; jmp rcx
0x000000000041aef0 : cwde ; pop rdx ; adc dword ptr [rcx - 0xa], eax ; jmp qword ptr [rcx]
0x00000000004239bc : cwde ; ret
0x000000000041b1cc : cwde ; sbb byte ptr [rcx - 0xe], al ; jmp qword ptr [rcx]
0x0000000000415a58 : dec dword ptr [rax + 0x21] ; ret 0x6948
0x000000000041475a : dec dword ptr [rax + 0x29] ; ret 0x2948
0x000000000040c666 : dec dword ptr [rax + 0x29] ; ret 0xb848
0x0000000000416205 : dec dword ptr [rax + 0x3b] ; or byte ptr [r15], cl ; sahf ; ret 0xe280
0x000000000041621c : dec dword ptr [rax + 0x3b] ; sbb byte ptr [r15], cl ; sahf ; ret 0xe280
0x000000000040a21f : dec dword ptr [rax - 0x46] ; sti ; ret 0xbbf3
0x0000000000404d43 : dec dword ptr [rax - 0x75] ; clc ; pop rbp ; ret
0x00000000004123c4 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; pop rax ; sub al, byte ptr [rdx] ; jmp rcx
0x000000000040a2e7 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x000000000040bc06 : dec dword ptr [rax - 0x77] ; ret 0x41e8
0x0000000000406460 : dec dword ptr [rax - 0x77] ; ret 0x57e8
0x0000000000406814 : dec dword ptr [rax - 0x77] ; ret 0xa3e8
0x0000000000404807 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040c65f : dec dword ptr [rax - 0x7f] ; ret 0xffff
0x0000000000404801 : dec dword ptr [rbx - 0x1174b] ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040490e : dec dword ptr [rbx - 0x12f4b] ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000412b52 : dec dword ptr [rcx - 0x77] ; ret 0x294d
0x0000000000407df8 : dec dword ptr [rcx] ; ret 0x941
0x00000000004235ff : dec eax ; or eax, dword ptr [rax] ; add al, bh ; std ; jmp qword ptr [rax]
0x00000000004239af : dec eax ; sbb al, byte ptr [rax] ; add al, bl ; ret 0xfffe
0x000000000040c480 : div dword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000040c47f : div qword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000041d1f9 : enter -0x3577, -0x7f ; ret 0x8bd2
0x000000000040a22f : enter -0x46b8, 0x4a ; sti ; ret 0xbbf3
0x000000000040fcc7 : enter -0x74b8, 0x39 ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x0000000000405013 : enter -0x74b8, 0x7d ; fsubr st(0) ; ret
0x0000000000409054 : enter -0x7cb8, -0x3c ; pop rbp ; ret
0x0000000000419fde : enter 0x41ed, -0x77 ; ret 0x8141
0x0000000000412ee0 : enter 0x4b05, 0x34 ; fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x0000000000423600 : enter 0xb, 0 ; clc ; std ; jmp qword ptr [rax]
0x0000000000403122 : fadd dword ptr [rcx + 0x30] ; ret 0x8041
0x000000000041b635 : fadd dword ptr [rcx - 0xe] ; jmp qword ptr [rcx]
0x00000000004042fa : fadd qword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041d09c : fbld dword ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000041d09d : fbld dword ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x0000000000423734 : fcomp dword ptr [rcx - 2] ; jmp rax
0x0000000000423e6c : fcomp dword ptr [rdi - 1] ; jmp rax
0x00000000004261a4 : fcomp qword ptr [rdi] ; add byte ptr [rax], al ; call 0xffffffffd84260cb
0x0000000000424998 : fdiv dword ptr [rbp - 2] ; call qword ptr [rbx]
0x00000000004241e9 : fdivp st(5) ; jmp qword ptr [rax]
0x000000000040ec28 : fiadd dword ptr [rcx - 0xa] ; jmp qword ptr [rcx]
0x0000000000412ee4 : fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x0000000000419482 : fild dword ptr [rdi + rcx + 0x44] ; ret 0x8941
0x00000000004179ce : fild word ptr [rbp - 0x76ba39df] ; ret 0x8141
0x000000000041e3e4 : fimul dword ptr [rax - 0x3f49f030] ; pop rbx ; pop rbp ; ret
0x0000000000415205 : fimul word ptr [rax + 9] ; ret
0x0000000000408364 : fmul dword ptr [r8 + 0x3b] ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x9588
0x000000000040f6e3 : fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x0000000000408365 : fmul dword ptr [rax + 0x3b] ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x9588
0x000000000040f6e4 : fmul dword ptr [rax - 0x77] ; ret 0x2948
0x000000000040789d : fmul dword ptr [rbx - 0x74b4b] ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004209ec : fmul qword ptr [rax - 0x7d] ; ret
0x000000000040b186 : fsub dword ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000040b187 : fsub dword ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x0000000000405017 : fsubr st(0) ; ret
0x0000000000402a89 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041c1ce : hlt ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040b19a : hlt ; mov qword ptr [rbp - 0x18], rdx ; pop rbp ; ret
0x000000000041ede4 : hlt ; mov rcx, qword ptr [rbp - 8] ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x0000000000402840 : hlt ; pop rbp ; mov edi, 0x628438 ; jmp rax
0x000000000040e1a8 : imul eax, dword ptr [rax - 0x77], 0x7a ; add cl, byte ptr [rax - 0x77] ; ret 0x148
0x000000000041b3e2 : imul edx, dword ptr [rbx - 0xd7f], -1 ; jmp qword ptr [rcx]
0x0000000000425861 : in al, -2 ; jmp qword ptr [rax]
0x000000000041ec6c : in al, 0x48 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040ad67 : in al, dx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403c48 : in al, dx ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041cefd : in al, dx ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000041fb43 : in al, dx ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041cf00 : in al, dx ; pop rbp ; ret
0x000000000040c593 : in eax, -0x50 ; add dword ptr [rcx + rax], esp ; movzx eax, al ; pop rbp ; ret
0x0000000000425981 : in eax, -2 ; jmp qword ptr [rdx]
0x0000000000405f34 : in eax, 0x1d ; add al, bpl ; ret
0x00000000004149a3 : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x000000000040a290 : inc dword ptr [rbp - 0x77] ; ret 0x8141
0x0000000000407307 : inc dword ptr [rcx + 0x1fff1] ; add byte ptr [rbp - 0x77], al ; ret 0x3141
0x000000000041e5e4 : inc dword ptr [rcx - 0x46343] ; jmp qword ptr [rdx]
0x000000000041949a : inc dword ptr [rcx - 0x77] ; ret
0x000000000040a453 : inc dword ptr [rcx - 0x77] ; ret 0x8141
0x000000000040c1d4 : inc dword ptr [rcx - 0xa] ; jmp qword ptr [rcx]
0x000000000041316b : inc dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000424027 : inc eax ; xor al, 0 ; add byte ptr [rax], ch ; mov dh, -1 ; jmp rax
0x0000000000417275 : int 0x80
0x00000000004087b1 : int 0x81
0x0000000000402833 : ja 0x40283a ; pop rbp ; ret
0x00000000004115c1 : ja 0x41160e ; pop rbp ; ret
0x00000000004249f9 : ja 0x4249fb ; jmp qword ptr [rdi]
0x00000000004267d1 : jae 0x4267d4 ; call qword ptr [rax]
0x0000000000424919 : jb 0x42491b ; jmp rsi
0x00000000004002fe : jbe 0x4002a1 ; ret
0x000000000040283f : je 0x40283d ; pop rbp ; mov edi, 0x628438 ; jmp rax
0x00000000004002f8 : jg 0x400303 ; add byte ptr [rax], al ; mov esp, 0x439e7650 ; ret
0x0000000000426a71 : jg 0x426a74 ; jmp qword ptr [rcx]
0x000000000040f53a : jge 0x40f53b ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040f55a : jge 0x40f55b ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040f57a : jge 0x40f57b ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000040f930 : jge 0x40f923 ; mov rcx, qword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000410f00 : jge 0x410ef3 ; mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x00000000004115bd : jge 0x4115be ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x00000000004149a6 : jge 0x4149a3 ; pop rbp ; ret
0x0000000000414c9a : jge 0x414c9b ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000414cba : jge 0x414cbb ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000414cda : jge 0x414cdb ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000414d00 : jge 0x414cfd ; pop rbp ; ret
0x000000000041e60d : jge 0x41e5d1 ; call rax
0x000000000041e743 : jge 0x41e70e ; mov rsi, qword ptr [rbp - 0x460] ; call rax
0x000000000041e7a0 : jge 0x41e764 ; call rax
0x000000000041e81e : jge 0x41e7da ; call rax
0x000000000041e850 : jge 0x41e80c ; call rax
0x000000000042000a : jge 0x42000d ; mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x000000000040c584 : jle 0x40c59d ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040ae9d : jmp 0x2830a7
0x000000000041aa1f : jmp 0x382ba7
0x00000000004021bb : jmp 0x4020d7
0x000000000040870a : jmp 0x407996
0x000000000040870a : jmp 0x407998
0x000000000041dc83 : jmp 0x41dca2
0x000000000041f357 : jmp 0x41f7cb
0x0000000000410180 : jmp 0x49038ad0
0x0000000000410bfe : jmp 0x4903954e
0x0000000000410c6b : jmp 0x490395bb
0x00000000004113fc : jmp 0x49039d4c
0x0000000000411469 : jmp 0x49039db9
0x00000000004177a8 : jmp 0xffffffffc2cabfb2
0x0000000000423607 : jmp qword ptr [rax]
0x0000000000407e69 : jmp qword ptr [rcx]
0x00000000004249fb : jmp qword ptr [rdi]
0x000000000041e5ea : jmp qword ptr [rdx]
0x000000000041d8d5 : jmp qword ptr [rsi]
0x0000000000402847 : jmp rax
0x0000000000424393 : jmp rbx
0x0000000000402e6b : jmp rcx
0x0000000000402887 : jmp rdx
0x000000000042491b : jmp rsi
0x0000000000424d9b : jmp rsp
0x0000000000402870 : jne 0x402877 ; pop rbp ; ret
0x000000000040b199 : jne 0x40b196 ; mov qword ptr [rbp - 0x18], rdx ; pop rbp ; ret
0x000000000040c481 : jne 0x40c479 ; mov rax, rdx ; pop rbp ; ret
0x000000000040f9a6 : jne 0x40f991 ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000040fccd : jne 0x40fcb1 ; call rax
0x0000000000411872 : jne 0x41186a ; mov rax, rdx ; pop rbp ; ret
0x0000000000414969 : jne 0x41494d ; mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x0000000000415ca1 : jne 0x415c99 ; mov rax, rdx ; pop rbp ; ret
0x000000000041caa9 : jne 0x41ca8c ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x000000000041cf31 : jne 0x41cf29 ; mov rax, rdx ; pop rbp ; ret
0x000000000041d042 : jne 0x41d03a ; mov rax, rdx ; pop rbp ; ret
0x000000000041ed76 : jne 0x41ed6e ; mov rax, rdx ; pop rbp ; ret
0x0000000000424999 : jne 0x42499b ; call qword ptr [rbx]
0x0000000000424b59 : jns 0x424b5b ; call qword ptr [rbx]
0x0000000000409403 : jo 0x409464 ; ret
0x000000000040cd87 : jo 0x40cd9e ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040d0df : jo 0x40d140 ; ret
0x0000000000411fe5 : jo 0x412046 ; ret
0x000000000041360f : jo 0x413675 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000413cb4 : jo 0x413d15 ; ret
0x0000000000413dee : jo 0x413e4f ; ret
0x000000000041432e : jo 0x414336 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000414cbf : jo 0x414d20 ; ret
0x0000000000414cbe : jo 0x414d21 ; ret
0x000000000041a826 : jo 0x41a887 ; ret
0x000000000041bcd8 : jo 0x41bc64 ; stc ; add eax, 0xf000000 ; xchg eax, esp ; ret 0x9588
0x000000000041fff6 : jo 0x420057 ; ret
0x0000000000406e4c : jp 0x406ea0 ; add byte ptr [rcx - 0x77], al ; ret 0x8141
0x0000000000406e6c : jp 0x406ebf ; add byte ptr [rcx], ah ; ret 0x941
0x0000000000425741 : jrcxz 0x425743 ; jmp qword ptr [rdx]
0x0000000000414df4 : js 0x414dbb ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000415d14 : js 0x415d96 ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041a125 : lahf ; sub ah, byte ptr [rcx] ; ret 0x8941
0x000000000041a131 : lahf ; sub al, byte ptr [rcx - 0x77] ; ret 0x8141
0x000000000041f4aa : lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000408186 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000408185 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000423b27 : ljmp ptr [rax + 0x38000020] ; add bh, bh ; call rax
0x0000000000423cb8 : lock add byte ptr es:[rax], al ; call 0x11423bde
0x0000000000407b70 : lodsb al, byte ptr [rsi] ; ret
0x0000000000409a8f : loop 0x409a66 ; mov word ptr [rcx - 0x77], es ; ret 0x8141
0x0000000000409abc : loop 0x409a92 ; mov word ptr [rcx], fs ; ret 0x941
0x0000000000409a97 : loop 0x409aa1 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], al ; ret
0x0000000000409cd3 : loop 0x409cc5 ; and eax, 0x8945ce03 ; ret
0x00000000004179d7 : loop 0x417998 ; loopne 0x4179c1 ; test dword ptr [rcx - 0x77], eax ; ret
0x0000000000406e4a : loope 0x406e8e ; jp 0x406ea2 ; add byte ptr [rcx - 0x77], al ; ret 0x8141
0x0000000000409a8d : loope 0x409a80 ; loop 0x409a68 ; mov word ptr [rcx - 0x77], es ; ret 0x8141
0x000000000040bf1c : loope 0x40bf25 ; movzx eax, cl ; pop rbp ; ret
0x000000000041a12e : loope 0x41a108 ; mov edi, 0x89412a9f ; ret 0x8141
0x000000000040e3fb : loopne 0x40e44b ; add esp, 0x20 ; pop rbp ; ret
0x000000000040e3fa : loopne 0x40e44c ; add esp, 0x20 ; pop rbp ; ret
0x000000000040f17f : loopne 0x40f1cf ; add esp, 0x20 ; pop rbp ; ret
0x000000000040f17e : loopne 0x40f1d0 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040f51f : loopne 0x40f56f ; add esp, 0x30 ; pop rbp ; ret
0x000000000040f51e : loopne 0x40f570 ; add esp, 0x30 ; pop rbp ; ret
0x000000000040f9a7 : loopne 0x40f9f9 ; mov esi, eax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x00000000004179d9 : loopne 0x4179bf ; test dword ptr [rcx - 0x77], eax ; ret
0x0000000000417a60 : loopne 0x417ab0 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000417a5f : loopne 0x417ab1 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000417ff0 : loopne 0x417ff8 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041acd0 : loopne 0x41acd7 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000424070 : loopne 0x4240ac ; add byte ptr [rax], al ; ret 0xffff
0x0000000000425701 : loopne 0x425703 ; jmp rdx
0x0000000000425700 : loopne 0x425704 ; jmp rdx
0x0000000000415f32 : mov ah, -0x77 ; ret 0xca29
0x000000000040f8ae : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000424390 : mov al, -2 ; std ; jmp rbx
0x0000000000414825 : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040be2d : mov al, 0 ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004063bb : mov al, 0 ; call 0x4026b4
0x0000000000413b8b : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000413a18 : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x000000000040e67e : mov al, 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040c594 : mov al, 1 ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000417b32 : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041d09b : mov al, byte ptr [rbp - 0x21] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004082f8 : mov al, byte ptr [rbp - 0xa] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040445f : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040c0f6 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040b42e : mov al, byte ptr [rbp - 9] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041edfc : mov al, byte ptr [rdi + 0x1c] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041e450 : mov al, dl ; movzx eax, al ; pop rbp ; ret
0x000000000041e3e5 : mov al, dl ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000041e32a : mov ax, dx ; movzx eax, ax ; pop rbp ; ret
0x000000000041e2bb : mov ax, r8w ; movzx eax, ax ; pop rbp ; ret
0x0000000000414c4c : mov bh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041e2c0 : mov bh, -0x40 ; pop rbp ; ret
0x000000000042403d : mov bh, -1 ; jmp qword ptr [rax]
0x0000000000423ead : mov bh, bh ; jmp rax
0x000000000040dd81 : mov byte ptr [0x6288f8], al ; pop rbp ; ret
0x000000000041eefb : mov byte ptr [rax + 0x1c], 0 ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000040f04b : mov byte ptr [rbp - 1], 0x3f ; movsx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x00000000004081d7 : mov byte ptr [rdx + 0x19], cl ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040eec2 : mov byte ptr [rdx + 0xb], 0 ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d9a5 : mov byte ptr [rdx + rax], 0 ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040dc01 : mov byte ptr [rdx], ah ; pop rbp ; ret
0x00000000004028a3 : mov byte ptr [rip + 0x225bee], 1 ; ret
0x0000000000411795 : mov dh, -0x39 ; pop rbp ; ret
0x000000000041ec04 : mov dh, -0x3a ; pop rbp ; ret
0x000000000040e3be : mov dh, -0x3e ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040c18d : mov dh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040bf1f : mov dh, -0x3f ; pop rbp ; ret
0x0000000000404ca2 : mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408db1 : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040431b : mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403843 : mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000408c9f : mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000403985 : mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004050d1 : mov dh, -0x40 ; add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x00000000004093fe : mov dh, -0x40 ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000404465 : mov dh, -0x40 ; pop rbp ; ret
0x000000000041e3e8 : mov dh, -0x40 ; pop rbx ; pop rbp ; ret
0x0000000000414966 : mov dh, -0xe ; mov dword ptr [rbp - 0x24], esi ; mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x000000000042402d : mov dh, -1 ; jmp rax
0x0000000000423ffd : mov dl, -1 ; jmp qword ptr [rax]
0x0000000000424cf9 : mov dr1, esi ; call qword ptr [rsi]
0x000000000040dbfd : mov dword ptr [0x6288e8], edi ; pop rbp ; ret
0x000000000040dd5d : mov dword ptr [0x6288f0], edi ; pop rbp ; ret
0x0000000000411e96 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000411e58 : mov dword ptr [rax], eax ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000411d14 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000411e57 : mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000041cefb : mov dword ptr [rbp - 0x14], eax ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x00000000004043cf : mov dword ptr [rbp - 0x18], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b39f : mov dword ptr [rbp - 0x18], eax ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040b19c : mov dword ptr [rbp - 0x18], edx ; pop rbp ; ret
0x000000000041ec6a : mov dword ptr [rbp - 0x1c], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040e3f9 : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000414968 : mov dword ptr [rbp - 0x24], esi ; mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x000000000040b185 : mov dword ptr [rbp - 0x28], eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000402b99 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000409052 : mov dword ptr [rbp - 0x38], eax ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040f8ac : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041de58 : mov dword ptr [rbp - 0x50], eax ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004060ab : mov dword ptr [rbp - 0x594], esi ; call 0x402308
0x0000000000402a87 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040b198 : mov dword ptr [rbp - 0xc], esi ; mov qword ptr [rbp - 0x18], rdx ; pop rbp ; ret
0x0000000000402ab5 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042092d : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040dbe1 : mov dword ptr [rbp - 8], eax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004149a5 : mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x00000000004181a1 : mov dword ptr [rbp - 8], edx ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000041ede9 : mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x000000000041cc6f : mov dword ptr [rcx + 0x18], eax ; pop rbp ; ret
0x000000000041c727 : mov dword ptr [rcx + 0x2c], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000411f0e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041c321 : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404f95 : mov dword ptr [rcx + 0x38], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404fe5 : mov dword ptr [rcx + 0x40], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040fdfa : mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x000000000041ea68 : mov dword ptr [rdi + 0x18], 0x95f616 ; pop rbp ; ret
0x00000000004115c0 : mov dword ptr [rdi + 0x48], esi ; pop rbp ; ret
0x000000000042000c : mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x000000000040c583 : mov dword ptr [rsi + 0x10], edi ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004239ac : mov eax, 0xc8fffec1 ; sbb al, byte ptr [rax] ; add al, bl ; ret 0xfffe
0x0000000000408943 : mov eax, 0xf013b48 ; xchg eax, esp ; ret 0xe280
0x00000000004119f4 : mov eax, 0xffffffff ; pop rbp ; ret
0x000000000041e608 : mov eax, dword ptr [rax + 0x10] ; mov rdi, qword ptr [rbp - 0x40] ; call rax
0x000000000041e84b : mov eax, dword ptr [rax + 0x18] ; mov rdi, qword ptr [rbp - 0x48] ; call rax
0x000000000041e6ae : mov eax, dword ptr [rax] ; mov rdi, qword ptr [rbp - 0x460] ; call rax
0x000000000041e81a : mov eax, dword ptr [rax] ; mov rdi, qword ptr [rbp - 0x48] ; call rax
0x0000000000411cc8 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000404f42 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040e343 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040df6b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041cbc8 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x0000000000411cc5 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000414d21 : mov eax, dword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040e29f : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040ad65 : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403c46 : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041cefe : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000040e0d0 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000411c7d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000411d0e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040b3a3 : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040f17d : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040f51d : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040f9ac : mov eax, dword ptr [rbp - 0x20] ; call rax
0x000000000040ce60 : mov eax, dword ptr [rbp - 0x24] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041496b : mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x000000000041115f : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041caaf : mov eax, dword ptr [rbp - 0x28] ; call rax
0x0000000000411e5a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040c32b : mov eax, dword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000411fdf : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000413b89 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041efb9 : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041c1cc : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000418054 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404e42 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041827c : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041988d : mov eax, dword ptr [rbp - 4] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041d400 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041fff0 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000411688 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040eaa4 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040c3f1 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040fd45 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000419338 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040d2ac : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040d0d9 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000404d45 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040f53d : mov eax, dword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040f55d : mov eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040f57d : mov eax, dword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000414c9d : mov eax, dword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000414cdd : mov eax, dword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000414cbd : mov eax, dword ptr [rdi + 0x70] ; pop rbp ; ret
0x00000000004063b9 : mov eax, eax ; mov al, 0 ; call 0x4026b6
0x000000000041e2bd : mov eax, eax ; movzx eax, ax ; pop rbp ; ret
0x000000000041dfee : mov eax, eax ; pop rbp ; ret
0x000000000041498c : mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000418b97 : mov eax, ecx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041e0dd : mov eax, ecx ; pop rbp ; ret
0x0000000000414abf : mov eax, edi ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040ffe1 : mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b2ad : mov eax, edx ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041e32b : mov eax, edx ; movzx eax, ax ; pop rbp ; ret
0x000000000040c484 : mov eax, edx ; pop rbp ; ret
0x000000000040c11f : mov eax, esi ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000414a33 : mov eax, esi ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b4a6 : mov eax, esi ; pop rbp ; ret
0x000000000041e2bc : mov eax, r8d ; movzx eax, ax ; pop rbp ; ret
0x000000000041e0dc : mov eax, r9d ; pop rbp ; ret
0x00000000004148ff : mov ebp, 0x48fffedb ; add esp, 0x20 ; pop rbp ; ret
0x000000000041e6b2 : mov ebp, 0xfffffba0 ; call rax
0x00000000004028cb : mov ebp, esp ; call rax
0x0000000000402831 : mov ebp, esp ; ja 0x40283c ; pop rbp ; ret
0x00000000004119f2 : mov ebp, esp ; mov eax, 0xffffffff ; pop rbp ; ret
0x00000000004149a2 : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000041728d : mov ecx, 0x5b2a830a ; ret
0x0000000000402e64 : mov ecx, dword ptr [rax*8 + 0x420ad0] ; jmp rcx
0x0000000000403c88 : mov ecx, dword ptr [rax*8 + 0x421850] ; jmp rcx
0x00000000004120a2 : mov ecx, dword ptr [rax*8 + 0x422a10] ; jmp rcx
0x00000000004123c6 : mov ecx, dword ptr [rax*8 + 0x422a58] ; jmp rcx
0x0000000000416c4e : mov ecx, dword ptr [rax*8 + 0x422f78] ; jmp rcx
0x000000000041cc04 : mov ecx, dword ptr [rax*8 + 0x423348] ; jmp rcx
0x0000000000411d11 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000410342 : mov ecx, dword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x00000000004102df : mov ecx, dword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040f933 : mov ecx, dword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000410f03 : mov ecx, dword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000041e5bb : mov ecx, dword ptr [rbp - 0x48] ; call rax
0x000000000041ede6 : mov ecx, dword ptr [rbp - 8] ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x000000000041cc6c : mov ecx, dword ptr [rbp - 8] ; mov dword ptr [rcx + 0x18], eax ; pop rbp ; ret
0x0000000000410fd0 : mov ecx, dword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x00000000004028c5 : mov edi, 0x627e20 ; mov rbp, rsp ; call rax
0x0000000000402842 : mov edi, 0x628438 ; jmp rax
0x0000000000402882 : mov edi, 0x628438 ; jmp rdx
0x000000000041a130 : mov edi, 0x89412a9f ; ret 0x8141
0x000000000041e60c : mov edi, dword ptr [rbp - 0x40] ; call rax
0x000000000041e6b1 : mov edi, dword ptr [rbp - 0x460] ; call rax
0x000000000041e81d : mov edi, dword ptr [rbp - 0x48] ; call rax
0x00000000004115bc : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040f539 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040f559 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040f579 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000414c99 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000414cd9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000414cb9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x00000000004102e3 : mov edi, dword ptr [rcx] ; call rax
0x000000000040fcc9 : mov edi, dword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x0000000000405fee : mov edi, eax ; call 0x4022a4
0x00000000004209e7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x00000000004209e6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000409779 : mov edx, 0x21372370 ; ret 0x941
0x000000000040f1fd : mov edx, 0x4fdaf5a1 ; ret
0x000000000041e5b7 : mov edx, dword ptr [rbp - 0x40] ; mov rcx, qword ptr [rbp - 0x48] ; call rax
0x0000000000414d25 : mov edx, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040f1ed : mov esi, 0x4fdaf5a1 ; ret
0x000000000040fccc : mov esi, dword ptr [rbp - 0x20] ; call rax
0x000000000041e746 : mov esi, dword ptr [rbp - 0x460] ; call rax
0x000000000040f937 : mov esi, dword ptr [rcx] ; call rax
0x0000000000402880 : mov esi, eax ; mov edi, 0x628438 ; jmp rdx
0x000000000040f9a9 : mov esi, eax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000041caac : mov esi, eax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x00000000004002fc : mov esp, 0x439e7650 ; ret
0x000000000040dbfc : mov qword ptr [0x6288e8], rdi ; pop rbp ; ret
0x000000000040dd5c : mov qword ptr [0x6288f0], rdi ; pop rbp ; ret
0x00000000004043ce : mov qword ptr [rbp - 0x18], rax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b39e : mov qword ptr [rbp - 0x18], rax ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040b19b : mov qword ptr [rbp - 0x18], rdx ; pop rbp ; ret
0x000000000040dbe0 : mov qword ptr [rbp - 8], rax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004149a4 : mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x00000000004181a0 : mov qword ptr [rbp - 8], rdx ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000411f0d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041c320 : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404f94 : mov qword ptr [rcx + 0x38], rax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404fe4 : mov qword ptr [rcx + 0x40], rax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004115bf : mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000415f31 : mov r12b, -0x77 ; ret 0xca29
0x000000000040f8ad : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004063b8 : mov r8, rax ; mov al, 0 ; call 0x4026b7
0x0000000000413b8a : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000041e607 : mov rax, qword ptr [rax + 0x10] ; mov rdi, qword ptr [rbp - 0x40] ; call rax
0x000000000041e84a : mov rax, qword ptr [rax + 0x18] ; mov rdi, qword ptr [rbp - 0x48] ; call rax
0x000000000041e819 : mov rax, qword ptr [rax] ; mov rdi, qword ptr [rbp - 0x48] ; call rax
0x0000000000404f41 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040e342 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040df6a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000411cc4 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000414d20 : mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040e29e : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040e0cf : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000411c7c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040b3a2 : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040f17c : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040f51c : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040f9ab : mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000041115e : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041caae : mov rax, qword ptr [rbp - 0x28] ; call rax
0x000000000040c32a : mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000411fde : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000413b88 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000411687 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040eaa3 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040c3f0 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040fd44 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000419337 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040d2ab : mov rax, qword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040d0d8 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000404d44 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040f53c : mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040f55c : mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040f57c : mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000414c9c : mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000414cdc : mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000414cbc : mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000041dfed : mov rax, r8 ; pop rbp ; ret
0x0000000000418b96 : mov rax, rcx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040ffe0 : mov rax, rdx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b2ac : mov rax, rdx ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040c483 : mov rax, rdx ; pop rbp ; ret
0x000000000040b4a5 : mov rax, rsi ; pop rbp ; ret
0x00000000004028ca : mov rbp, rsp ; call rax
0x0000000000402830 : mov rbp, rsp ; ja 0x40283d ; pop rbp ; ret
0x00000000004119f1 : mov rbp, rsp ; mov eax, 0xffffffff ; pop rbp ; ret
0x00000000004149a1 : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000402e63 : mov rcx, qword ptr [rax*8 + 0x420ad0] ; jmp rcx
0x0000000000403c87 : mov rcx, qword ptr [rax*8 + 0x421850] ; jmp rcx
0x00000000004120a1 : mov rcx, qword ptr [rax*8 + 0x422a10] ; jmp rcx
0x00000000004123c5 : mov rcx, qword ptr [rax*8 + 0x422a58] ; jmp rcx
0x0000000000416c4d : mov rcx, qword ptr [rax*8 + 0x422f78] ; jmp rcx
0x000000000041cc03 : mov rcx, qword ptr [rax*8 + 0x423348] ; jmp rcx
0x0000000000410341 : mov rcx, qword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x00000000004102de : mov rcx, qword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040f932 : mov rcx, qword ptr [rbp - 0x28] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000410f02 : mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000041e5ba : mov rcx, qword ptr [rbp - 0x48] ; call rax
0x000000000041ede5 : mov rcx, qword ptr [rbp - 8] ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x000000000041cc6b : mov rcx, qword ptr [rbp - 8] ; mov dword ptr [rcx + 0x18], eax ; pop rbp ; ret
0x0000000000410fcf : mov rcx, qword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000041e60b : mov rdi, qword ptr [rbp - 0x40] ; call rax
0x000000000041e6b0 : mov rdi, qword ptr [rbp - 0x460] ; call rax
0x000000000041e81c : mov rdi, qword ptr [rbp - 0x48] ; call rax
0x00000000004115bb : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040f538 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040f558 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040f578 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000414c98 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000414cd8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000414cb8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x00000000004102e2 : mov rdi, qword ptr [rcx] ; call rax
0x000000000040fcc8 : mov rdi, qword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x0000000000405fed : mov rdi, rax ; call 0x4022a5
0x000000000041e5b6 : mov rdx, qword ptr [rbp - 0x40] ; mov rcx, qword ptr [rbp - 0x48] ; call rax
0x0000000000414d24 : mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040fccb : mov rsi, qword ptr [rbp - 0x20] ; call rax
0x000000000041e745 : mov rsi, qword ptr [rbp - 0x460] ; call rax
0x000000000040f936 : mov rsi, qword ptr [rcx] ; call rax
0x000000000040287f : mov rsi, rax ; mov edi, 0x628438 ; jmp rdx
0x000000000040f9a8 : mov rsi, rax ; mov rax, qword ptr [rbp - 0x20] ; call rax
0x000000000041caab : mov rsi, rax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x000000000041530e : mov word ptr [rbx - 0x1874b], cs ; jmp qword ptr [rcx]
0x0000000000409a91 : mov word ptr [rcx - 0x77], es ; ret 0x8141
0x0000000000408421 : mov word ptr [rcx - 0xe], es ; jmp qword ptr [rcx]
0x0000000000409abe : mov word ptr [rcx], fs ; ret 0x941
0x0000000000414f5d : movabs al, byte ptr [0x148000000022d48] ; ret 0x3948
0x000000000041bad1 : movabs dword ptr [0xfffffff281f4f275], eax ; jmp qword ptr [rcx]
0x0000000000419dfd : movabs eax, dword ptr [0x21fffffffff281ee] ; ret 0xfa81
0x0000000000405d2c : movabs eax, dword ptr [0xfffffff181b28b53] ; jmp qword ptr [rcx]
0x000000000042426c : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x18], dl ; std ; jmp rdx
0x0000000000426a6c : movsb byte ptr [rdi], byte ptr [rsi] ; sub byte ptr [rax], al ; add al, ah ; jg 0x426a79 ; jmp qword ptr [rcx]
0x000000000040f04f : movsx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000404ca1 : movzx eax, al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408db0 : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040431a : movzx eax, al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403842 : movzx eax, al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000408c9e : movzx eax, al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000403984 : movzx eax, al ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004050d0 : movzx eax, al ; add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x00000000004093fd : movzx eax, al ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000404464 : movzx eax, al ; pop rbp ; ret
0x000000000041e3e7 : movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000041e2bf : movzx eax, ax ; pop rbp ; ret
0x0000000000411794 : movzx eax, bh ; pop rbp ; ret
0x000000000040c18c : movzx eax, cl ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040bf1e : movzx eax, cl ; pop rbp ; ret
0x0000000000414c4b : movzx eax, cx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041ec03 : movzx eax, dh ; pop rbp ; ret
0x0000000000411793 : movzx eax, dil ; pop rbp ; ret
0x000000000040e3bd : movzx eax, dl ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041ec02 : movzx eax, sil ; pop rbp ; ret
0x0000000000419125 : movzx eax, word ptr [rbp - 2] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004082f9 : mul byte ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x00000000004082fa : mul byte ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000040b42f : mul dword ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000041b7ea : mul dword ptr [rbp + 0x21] ; ret 0x8941
0x000000000040b430 : mul dword ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x00000000004097b1 : nop ; call 0x4022a9
0x0000000000425860 : nop ; in al, -2 ; jmp qword ptr [rax]
0x000000000040c42c : nop ; ret 0x40
0x0000000000420a08 : nop dword ptr [rax + rax] ; ret
0x000000000041272d : or al, 0x18 ; ret 0x6451
0x00000000004123c7 : or al, 0xffffffffffffffc5 ; pop rax ; sub al, byte ptr [rdx] ; jmp rcx
0x0000000000403c89 : or al, 0xffffffffffffffc5 ; push rax ; sbb byte ptr [rdx], al ; jmp rcx
0x000000000041cc05 : or al, 0xffffffffffffffc5 ; xor rax, qword ptr [rdx] ; jmp rcx
0x0000000000402e68 : or al, byte ptr [rdx] ; jmp rcx
0x0000000000423bbd : or bh, bh ; call qword ptr [rax]
0x0000000000423bed : or bh, bh ; call rax
0x0000000000416208 : or byte ptr [r15], cl ; sahf ; ret 0xe280
0x000000000041495d : or byte ptr [r15], cl ; xchg eax, edi ; ret 0xe280
0x000000000040c4d3 : or byte ptr [r15], cl ; xchg eax, esp ; ret 0x5588
0x00000000004249f5 : or byte ptr [rax], al ; add byte ptr [rax], cl ; ja 0x4249ff ; jmp qword ptr [rdi]
0x000000000041852b : or byte ptr [rax], al ; add byte ptr [rbp - 0x77], al ; ret 0x3145
0x000000000040d4be : or byte ptr [rcx + 0x39f9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000040e3a0 : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000041c05b : or byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004249f8 : or byte ptr [rdi - 2], dh ; jmp qword ptr [rdi]
0x0000000000416209 : or byte ptr [rdi], cl ; sahf ; ret 0xe280
0x000000000041495e : or byte ptr [rdi], cl ; xchg eax, edi ; ret 0xe280
0x000000000040c4d4 : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x000000000041948e : or dword ptr [rcx], eax ; add byte ptr [rbp - 0x77], al ; ret 0x8141
0x0000000000424cf5 : or eax, dword ptr [rax] ; add al, bh ; mov dr1, esi ; call qword ptr [rsi]
0x0000000000423601 : or eax, dword ptr [rax] ; add al, bh ; std ; jmp qword ptr [rax]
0x0000000000413d71 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040eec4 : or eax, dword ptr [rax] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041dfeb : or eax, edi ; mov rax, r8 ; pop rbp ; ret
0x000000000041e1cf : or eax, edi ; pop rbp ; ret
0x000000000041e0da : or ecx, edx ; mov eax, r9d ; pop rbp ; ret
0x0000000000423bfd : or edi, edi ; call qword ptr [rax]
0x000000000041dfea : or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x000000000041e0d9 : or r9d, edx ; mov eax, r9d ; pop rbp ; ret
0x000000000041e1ce : or rax, rdi ; pop rbp ; ret
0x000000000041ec00 : out 1, al ; movzx eax, sil ; pop rbp ; ret
0x0000000000411791 : out 1, eax ; movzx eax, dil ; pop rbp ; ret
0x00000000004028a5 : out dx, al ; pop rbx ; and al, byte ptr [rax] ; add ebx, esi ; ret
0x00000000004063be : out dx, al ; ret 0xffff
0x0000000000418e9a : out dx, al ; rol byte ptr [rcx - 0xe], 1 ; jmp qword ptr [rcx]
0x0000000000417b34 : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040f839 : outsb dx, byte ptr [rsi] ; ret 0x280f
0x0000000000415c71 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004209fc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040aca9 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000415c73 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004209fe : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000409819 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000420a00 : pop r14 ; pop r15 ; ret
0x000000000040818a : pop r14 ; pop rbp ; ret
0x000000000040981b : pop r15 ; pop rbp ; ret
0x0000000000420a02 : pop r15 ; ret
0x0000000000423b3c : pop rax ; add edi, edi ; call qword ptr [rax]
0x0000000000423bbc : pop rax ; or bh, bh ; call qword ptr [rax]
0x000000000042413c : pop rax ; sar bh, cl ; jmp qword ptr [rax]
0x00000000004123c9 : pop rax ; sub al, byte ptr [rdx] ; jmp rcx
0x00000000004028a2 : pop rbp ; mov byte ptr [rip + 0x225bee], 1 ; ret
0x0000000000402841 : pop rbp ; mov edi, 0x628438 ; jmp rax
0x000000000040287e : pop rbp ; mov rsi, rax ; mov edi, 0x628438 ; jmp rdx
0x00000000004209fb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000415c74 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004209ff : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000402835 : pop rbp ; ret
0x00000000004028a6 : pop rbx ; and al, byte ptr [rax] ; add ebx, esi ; ret
0x000000000040aca8 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000409818 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000408189 : pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004050d7 : pop rbx ; pop rbp ; ret
0x000000000040a87f : pop rbx ; pop rdx ; test byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x0000000000417291 : pop rbx ; ret
0x000000000040981c : pop rdi ; pop rbp ; ret
0x0000000000420a03 : pop rdi ; ret
0x000000000041aef1 : pop rdx ; adc dword ptr [rcx - 0xa], eax ; jmp qword ptr [rcx]
0x00000000004184de : pop rdx ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cvttps2pi mm0, qword ptr [rcx - 0xe] ; jmp qword ptr [rcx]
0x000000000040a880 : pop rdx ; test byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x000000000040981a : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000420a01 : pop rsi ; pop r15 ; ret
0x000000000040818b : pop rsi ; pop rbp ; ret
0x0000000000415c72 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004209fd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040acaa : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040f850 : pop rsp ; ret 0xf66
0x0000000000407fb7 : push -0x76000002 ; ret 0xca21
0x0000000000423be7 : push qword ptr [rax + 0x78000023] ; or bh, bh ; call rax
0x0000000000423c27 : push qword ptr [rax - 0x47ffffdc] ; adc edi, edi ; call rax
0x0000000000414c9e : push r8 ; pop rbp ; ret
0x0000000000423cb7 : push rax ; add byte ptr es:[rax], al ; call 0x11423bdf
0x0000000000423c37 : push rax ; and al, 0 ; add al, bh ; adc edi, edi ; call qword ptr [rax]
0x00000000004002fd : push rax ; jbe 0x4002a2 ; ret
0x0000000000408ca4 : push rax ; pop rbp ; ret
0x0000000000403c8b : push rax ; sbb byte ptr [rdx], al ; jmp rcx
0x00000000004181a2 : push rbp ; clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000414d26 : push rbp ; clc ; pop rbp ; ret
0x00000000004028c4 : push rbp ; mov edi, 0x627e20 ; mov rbp, rsp ; call rax
0x00000000004149a0 : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000041a20b : push rbp ; ror byte ptr [rax - 0x75], 1 ; ror byte ptr [r8 - 0x77], 1 ; ret 0x8148
0x000000000041dcb5 : push rbp ; ror byte ptr [rax - 0x77], 1 ; ret 0x11e8
0x0000000000400301 : ret
0x0000000000405dbb : ret 0
0x000000000041dcb9 : ret 0x11e8
0x000000000040d437 : ret 0x13
0x000000000041ad3a : ret 0x134
0x000000000040e1af : ret 0x148
0x00000000004137ae : ret 0x1b2
0x000000000041181f : ret 0x2148
0x00000000004027c2 : ret 0x225b
0x00000000004025c2 : ret 0x225c
0x00000000004023c2 : ret 0x225d
0x00000000004021c2 : ret 0x225e
0x000000000040e615 : ret 0x26a8
0x000000000040f83a : ret 0x280f
0x000000000040a2ea : ret 0x2948
0x0000000000412b39 : ret 0x294c
0x0000000000412b55 : ret 0x294d
0x0000000000407310 : ret 0x3141
0x0000000000418530 : ret 0x3145
0x000000000041ee43 : ret 0x3693
0x0000000000400295 : ret 0x3945
0x0000000000414f66 : ret 0x3948
0x000000000040c95e : ret 0x3b48
0x000000000040c42d : ret 0x40
0x000000000040bc09 : ret 0x41e8
0x000000000040aaf0 : ret 0x458b
0x000000000040c9c5 : ret 0x4a8b
0x000000000040c4d7 : ret 0x5588
0x0000000000411d94 : ret 0x5589
0x0000000000406463 : ret 0x57e8
0x0000000000408f73 : ret 0x5bd0
0x000000000041c1bf : ret 0x60
0x000000000041272f : ret 0x6451
0x0000000000415a5b : ret 0x6948
0x000000000040387e : ret 0x6ce8
0x0000000000408b3a : ret 0x70e8
0x0000000000403125 : ret 0x8041
0x0000000000406e51 : ret 0x8141
0x000000000040d993 : ret 0x8148
0x000000000041ac5f : ret 0x8341
0x000000000040e3bf : ret 0x8348
0x0000000000409217 : ret 0x840
0x00000000004086b8 : ret 0x844
0x000000000041900e : ret 0x8445
0x00000000004097ba : ret 0x846f
0x0000000000407e6d : ret 0x858b
0x000000000040c897 : ret 0x870f
0x0000000000412dd3 : ret 0x8840
0x000000000040eb24 : ret 0x8844
0x0000000000407567 : ret 0x8941
0x000000000041cb3a : ret 0x8944
0x0000000000406019 : ret 0x8948
0x0000000000412b58 : ret 0x8949
0x000000000040a5c8 : ret 0x894d
0x000000000041e329 : ret 0x8966
0x0000000000412cec : ret 0x89a5
0x0000000000407316 : ret 0x8b44
0x000000000040c676 : ret 0x8b48
0x000000000041d1fd : ret 0x8bd2
0x000000000040724a : ret 0x8d88
0x0000000000406e70 : ret 0x941
0x000000000041cb1d : ret 0x945
0x0000000000408c16 : ret 0x94e8
0x00000000004040a0 : ret 0x9588
0x0000000000406aec : ret 0x9589
0x0000000000412b6d : ret 0x9de8
0x0000000000406817 : ret 0xa3e8
0x0000000000402f08 : ret 0xb0
0x000000000040c669 : ret 0xb848
0x000000000040c7af : ret 0xb849
0x000000000040d782 : ret 0xb8e8
0x0000000000410206 : ret 0xb948
0x000000000041ecfe : ret 0xb949
0x000000000040a224 : ret 0xbbf3
0x000000000041857b : ret 0xc121
0x0000000000402865 : ret 0xc148
0x0000000000418593 : ret 0xc221
0x000000000041f450 : ret 0xc2f6
0x000000000040aaa3 : ret 0xc7e8
0x0000000000406b77 : ret 0xc981
0x0000000000415a5e : ret 0xca00
0x0000000000402f91 : ret 0xca21
0x000000000040ba29 : ret 0xca29
0x0000000000406ae8 : ret 0xca31
0x000000000041e44f : ret 0xd088
0x000000000040aeac : ret 0xd089
0x0000000000404301 : ret 0xd284
0x000000000040d4e9 : ret 0xd366
0x000000000041ac66 : ret 0xd4e8
0x0000000000406cfa : ret 0xd609
0x0000000000407fc2 : ret 0xd689
0x0000000000403ade : ret 0xd709
0x000000000040c7f0 : ret 0xdae8
0x000000000040430e : ret 0xe280
0x0000000000403c72 : ret 0xe883
0x000000000040d7d7 : ret 0xea80
0x000000000040ccea : ret 0xea81
0x00000000004133fc : ret 0xee8
0x000000000041ee3f : ret 0xee81
0x000000000040ba60 : ret 0xf01
0x0000000000412de8 : ret 0xf180
0x000000000040566f : ret 0xf280
0x00000000004036da : ret 0xf281
0x0000000000417bb6 : ret 0xf40
0x000000000040f851 : ret 0xf66
0x000000000041e324 : ret 0xfa31
0x00000000004046ca : ret 0xfa81
0x000000000041dcea : ret 0xfe49
0x000000000040f82a : ret 0xff2c
0x0000000000410c10 : ret 0xff3
0x000000000040742f : ret 0xff35
0x00000000004150fa : ret 0xffa7
0x000000000040ba64 : ret 0xfffa
0x00000000004239b5 : ret 0xfffe
0x0000000000405ff2 : ret 0xffff
0x0000000000408ea4 : ret 1
0x000000000041f4b0 : ret 2
0x000000000041fcfb : ret 3
0x000000000040a0c2 : ret 5
0x000000000040e60f : ret 8
0x000000000040d83a : ret 9
0x000000000040f824 : rol byte ptr [r8 + rcx*4 - 0x40], -0x18 ; ret 0xff2c
0x000000000040f825 : rol byte ptr [rax + rcx*4 - 0x40], -0x18 ; ret 0xff2c
0x0000000000404235 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041e3d3 : rol byte ptr [rbp + 9], 1 ; ret
0x0000000000411e56 : rol byte ptr [rcx + rcx*4], 1 ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000041eed9 : rol byte ptr [rcx - 0x77], 1 ; ret
0x0000000000418e9b : rol byte ptr [rcx - 0xe], 1 ; jmp qword ptr [rcx]
0x000000000040bf1a : rol dword ptr [rax - 0x49f0fe1f], -0x3f ; pop rbp ; ret
0x000000000040ec78 : rol dword ptr [rcx + 0x21], cl ; ret
0x000000000041e0db : rol dword ptr [rcx + rcx*4 - 0x38], 1 ; pop rbp ; ret
0x0000000000407df2 : rol dword ptr [rcx - 0x1a], cl ; dec dword ptr [rcx] ; ret 0x941
0x000000000041a874 : rol dword ptr [rcx - 0xf], cl ; jmp qword ptr [rcx]
0x0000000000407df1 : rol dword ptr ds:[rcx - 0x1a], cl ; dec dword ptr [rcx] ; ret 0x941
0x000000000041e817 : ror byte ptr [r8 - 0x75], 1 ; add byte ptr [rax - 0x75], cl ; jge 0x41e7e1 ; call rax
0x0000000000417270 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000041a20f : ror byte ptr [r8 - 0x77], 1 ; ret 0x8148
0x0000000000411fe0 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x41204b ; ret
0x000000000040a22c : ror byte ptr [rax + 0x29], 1 ; enter -0x46b8, 0x4a ; sti ; ret 0xbbf3
0x000000000041e1ca : ror byte ptr [rax + 0x31], 1 ; xlatb ; or rax, rdi ; pop rbp ; ret
0x000000000040286c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40287b ; pop rbp ; ret
0x000000000041e606 : ror byte ptr [rax - 0x75], 1 ; adc byte ptr [rax - 0x75], cl ; jge 0x41e5d8 ; call rax
0x000000000041e799 : ror byte ptr [rax - 0x75], 1 ; adc byte ptr [rax - 0x75], cl ; jge 0x41e76b ; call rax
0x000000000041e818 : ror byte ptr [rax - 0x75], 1 ; add byte ptr [rax - 0x75], cl ; jge 0x41e7e0 ; call rax
0x000000000041a20c : ror byte ptr [rax - 0x75], 1 ; ror byte ptr [r8 - 0x77], 1 ; ret 0x8148
0x000000000041e849 : ror byte ptr [rax - 0x75], 1 ; sbb byte ptr [rax - 0x75], cl ; jge 0x41e813 ; call rax
0x0000000000417271 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x000000000041dcb6 : ror byte ptr [rax - 0x77], 1 ; ret 0x11e8
0x0000000000412b2d : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000412b36 : ror byte ptr [rax - 0x77], 1 ; ret 0x294c
0x000000000041a210 : ror byte ptr [rax - 0x77], 1 ; ret 0x8148
0x0000000000403b48 : ror byte ptr [rax - 0x77], 1 ; ret 0xb0
0x00000000004093ff : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x409468 ; ret
0x0000000000411fe1 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x41204a ; ret
0x0000000000403844 : ror byte ptr [rax - 0x7d], -0x3c ; pop rbp ; ret
0x0000000000408ca0 : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x000000000040cd83 : ror byte ptr [rax - 0x7f], -0x3c ; jo 0x40cda2 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041432a : ror byte ptr [rax - 0x7f], -0x3c ; jo 0x41433a ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041e32c : ror byte ptr [rdi], 1 ; mov bh, -0x40 ; pop rbp ; ret
0x000000000041e451 : ror byte ptr [rdi], 1 ; mov dh, -0x40 ; pop rbp ; ret
0x000000000041e3e6 : ror byte ptr [rdi], 1 ; mov dh, -0x40 ; pop rbx ; pop rbp ; ret
0x0000000000423670 : ror byte ptr [rip + 0xdb80000], -2 ; jmp rax
0x0000000000418b95 : ror dword ptr [rax - 0x77], -0x38 ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041b744 : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x000000000041ed08 : ror dword ptr [rbp - 0x77], cl ; ret
0x000000000041cefa : ror dword ptr [rcx + 0x458bec45], -0x14 ; pop rbp ; ret
0x00000000004002ff : sahf ; ret
0x000000000041620b : sahf ; ret 0xe280
0x0000000000424068 : sal byte ptr [rip - 0x3df80000], -1 ; jmp rax
0x000000000042413d : sar bh, cl ; jmp qword ptr [rax]
0x000000000041c0a3 : sar byte ptr [rdi], cl ; test dword ptr [rcx - 0xe], eax ; jmp qword ptr [rcx]
0x000000000041a12f : sar dword ptr [rdi - 0x76bed561], 1 ; ret 0x8141
0x0000000000404306 : sar dword ptr [rip], 0xf ; xchg eax, ebp ; ret 0xe280
0x000000000040286e : sar eax, 1 ; jne 0x402879 ; pop rbp ; ret
0x000000000042412d : sar edi, 1 ; jmp rax
0x000000000040286d : sar rax, 1 ; jne 0x40287a ; pop rbp ; ret
0x00000000004241e4 : sbb al, 0 ; add byte ptr [rax], al ; call 0x21423fd2
0x000000000041eefd : sbb al, 0 ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000041edfe : sbb al, 0x24 ; add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004239b1 : sbb al, byte ptr [rax] ; add al, bl ; ret 0xfffe
0x0000000000423cfd : sbb bh, bh ; call qword ptr [rax]
0x000000000041621f : sbb byte ptr [r15], cl ; sahf ; ret 0xe280
0x000000000041e84d : sbb byte ptr [rax - 0x75], cl ; jge 0x41e80f ; call rax
0x000000000041e84c : sbb byte ptr [rax - 0x75], cl ; jge 0x41e810 ; call rax
0x000000000041b1cd : sbb byte ptr [rcx - 0xe], al ; jmp qword ptr [rcx]
0x0000000000416220 : sbb byte ptr [rdi], cl ; sahf ; ret 0xe280
0x0000000000403c8c : sbb byte ptr [rdx], al ; jmp rcx
0x00000000004236b5 : sbb dh, bh ; jmp rax
0x000000000040e9f5 : sbb dword ptr [rcx - 0xe], eax ; jmp qword ptr [rcx]
0x00000000004073bf : sbb dword ptr [rcx - 0xf], eax ; jmp qword ptr [rcx]
0x0000000000405f35 : sbb eax, 0xc3e80042 ; ret
0x0000000000426209 : sbb edi, edi ; call qword ptr [rsi]
0x00000000004236c5 : sbb esi, edi ; jmp qword ptr [rax]
0x00000000004073be : sbb qword ptr [rcx - 0xf], r8 ; jmp qword ptr [rcx]
0x0000000000410004 : sete al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040c4f3 : setne al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040c4f5 : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000041a609 : shl byte ptr [rip - 0xd7f], -1 ; jmp qword ptr [rcx]
0x000000000040f86f : shl dword ptr [rsi + 0xf], 0x5c ; ret 0xf66
0x000000000041bcda : stc ; add eax, 0xf000000 ; xchg eax, esp ; ret 0x9588
0x00000000004235fe : std ; dec eax ; or eax, dword ptr [rax] ; add al, bh ; std ; jmp qword ptr [rax]
0x0000000000423606 : std ; jmp qword ptr [rax]
0x0000000000424392 : std ; jmp rbx
0x0000000000424272 : std ; jmp rdx
0x0000000000400334 : sti ; add eax, 0xd0a4f270 ; ret
0x000000000040c0f8 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040a223 : sti ; ret 0xbbf3
0x000000000040ec27 : stosb byte ptr [rdi], al ; fiadd dword ptr [rcx - 0xa] ; jmp qword ptr [rcx]
0x0000000000405f52 : stosb byte ptr [rdi], al ; ret
0x0000000000405ff1 : stosd dword ptr [rdi], eax ; ret 0xffff
0x000000000041a126 : sub ah, byte ptr [rcx] ; ret 0x8941
0x000000000041c729 : sub al, 0x48 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000419fdc : sub al, 0x7d ; enter 0x41ed, -0x77 ; ret 0x8141
0x0000000000424cf4 : sub al, 0xb ; add byte ptr [rax], al ; clc ; mov dr1, esi ; call qword ptr [rsi]
0x0000000000424df4 : sub al, 0xc ; add byte ptr [rax], al ; call 0x12424c96
0x00000000004249f4 : sub al, 8 ; add byte ptr [rax], al ; or byte ptr [rdi - 2], dh ; jmp qword ptr [rdi]
0x000000000041a132 : sub al, byte ptr [rcx - 0x77] ; ret 0x8141
0x00000000004120a6 : sub al, byte ptr [rdx] ; jmp rcx
0x0000000000426a6d : sub byte ptr [rax], al ; add al, ah ; jg 0x426a78 ; jmp qword ptr [rcx]
0x000000000040c916 : sub byte ptr [rcx - 0xa], al ; jmp qword ptr [rcx]
0x000000000041728f : sub dword ptr [rdx], 0x5b ; ret
0x000000000040fdf7 : sub dword ptr [rdx], eax ; mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x000000000040028d : sub dword ptr [rsi], edi ; add eax, 0xf69991ff ; wait ; ret 0x3945
0x000000000040b4a0 : sub eax, edx ; add rsi, rax ; mov rax, rsi ; pop rbp ; ret
0x0000000000426309 : sub edi, edi ; call qword ptr [rax]
0x0000000000420ab1 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000420ab0 : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000414dc4 : test al, -0x44 ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000418dee : test al, 0 ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000420a0a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040a881 : test byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x0000000000411b4c : test byte ptr [rdx], ah ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402844 : test byte ptr [rdx], ah ; jmp rax
0x0000000000402884 : test byte ptr [rdx], ah ; jmp rdx
0x0000000000407b6a : test dword ptr [rax - 0x17000008], ebx ; lodsb al, byte ptr [rsi] ; ret
0x00000000004179db : test dword ptr [rcx - 0x77], eax ; ret
0x000000000041c0a5 : test dword ptr [rcx - 0xe], eax ; jmp qword ptr [rcx]
0x000000000041862d : test dword ptr [rip - 0x17000000], eax ; ret
0x0000000000415422 : test dword ptr [rsi + rdi*8 - 1], esp ; jmp qword ptr [rcx]
0x0000000000417bad : test eax, 0xbafffe ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0xf40
0x0000000000416c50 : vcomiss xmm8, xmmword ptr [rdx] ; jmp rcx
0x0000000000400294 : wait ; ret 0x3945
0x0000000000406d14 : xchg byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x000000000040e736 : xchg byte ptr [rdx], dh ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000418540 : xchg eax, ebp ; ret
0x000000000041900d : xchg eax, ebp ; ret 0x8445
0x0000000000412dd2 : xchg eax, ebp ; ret 0x8840
0x000000000040430d : xchg eax, ebp ; ret 0xe280
0x000000000040c4f4 : xchg eax, ebp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000408420 : xchg eax, ebx ; mov word ptr [rcx - 0xe], es ; jmp qword ptr [rcx]
0x0000000000408709 : xchg eax, edi ; jmp 0x407997
0x0000000000408709 : xchg eax, edi ; jmp 0x407999
0x0000000000414960 : xchg eax, edi ; ret 0xe280
0x000000000040bf19 : xchg eax, edx ; rol dword ptr [rax - 0x49f0fe1f], -0x3f ; pop rbp ; ret
0x0000000000400333 : xchg eax, edx ; sti ; add eax, 0xd0a4f270 ; ret
0x000000000040c4d6 : xchg eax, esp ; ret 0x5588
0x000000000040409f : xchg eax, esp ; ret 0x9588
0x0000000000404300 : xchg eax, esp ; ret 0xd284
0x0000000000408948 : xchg eax, esp ; ret 0xe280
0x0000000000410005 : xchg eax, esp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000040841f : xchg eax, r11d ; mov word ptr [rcx - 0xe], es ; jmp qword ptr [rcx]
0x0000000000408708 : xchg rax, r15 ; jmp 0x407998
0x000000000041dfe9 : xlatb ; or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x000000000041e1cd : xlatb ; or rax, rdi ; pop rbp ; ret
0x0000000000424029 : xor al, 0 ; add byte ptr [rax], ch ; mov dh, -1 ; jmp rax
0x00000000004256fc : xor al, 0x15 ; add byte ptr [rax], al ; loopne 0x425708 ; jmp rdx
0x000000000041f35e : xor al, 0x25 ; ret
0x000000000040e1a6 : xor al, 0x6a ; imul eax, dword ptr [rax - 0x77], 0x7a ; add cl, byte ptr [rax - 0x77] ; ret 0x148
0x0000000000419950 : xor bl, byte ptr [rcx + rax*4 - 0xf] ; jmp qword ptr [rcx]
0x000000000041da8f : xor byte ptr [rax], dl ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041f7de : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040f84b : xor byte ptr [rcx], al ; add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x0000000000413b07 : xor eax, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x000000000041cc08 : xor eax, dword ptr [rdx] ; jmp rcx
0x0000000000411e55 : xor eax, edx ; mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000041dfe8 : xor edi, edx ; or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x000000000041e1cc : xor edi, edx ; or rax, rdi ; pop rbp ; ret
0x000000000041cc07 : xor rax, qword ptr [rdx] ; jmp rcx
0x000000000041e1cb : xor rdi, rdx ; or rax, rdi ; pop rbp ; ret
