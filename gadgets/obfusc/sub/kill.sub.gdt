0x0000000000401b60 : adc byte ptr [rax + rax*2], dh ; jmp rcx
0x0000000000404569 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040879b : add al, ah ; ret 0xffff
0x0000000000408a77 : add al, bl ; mov dr1, edi ; jmp rdx
0x00000000004052d6 : add al, ch ; ret 0xffff
0x00000000004087b3 : add al, dl ; ret
0x0000000000404f94 : add bh, bh ; loope 0x404f85 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004073bf : add bl, dh ; ret
0x00000000004055ad : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000408a75 : add byte ptr [rax], al ; add al, bl ; mov dr1, edi ; jmp rdx
0x00000000004073bd : add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004073bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000400320 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x0000000000400322 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000004073bc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400324 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x0000000000402125 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xfa81
0x00000000004024af : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8840
0x0000000000403c0e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000404e7e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040681c : add byte ptr [rax], al ; add cl, ch ; ret 2
0x0000000000404531 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404240 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004012f3 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000040935f : add byte ptr [rax], al ; fdivr st(7) ; jmp rax
0x0000000000401389 : add byte ptr [rax], al ; jmp 0x401309
0x0000000000402b02 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000408a72 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add al, bl ; mov dr1, edi ; jmp rdx
0x0000000000408792 : add byte ptr [rax], al ; nop ; ret 0xffff
0x000000000040485e : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040544b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000404200 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004073be : add byte ptr [rax], al ; ret
0x0000000000400326 : add byte ptr [rax], al ; ret 1
0x0000000000408783 : add byte ptr [rax], dh ; ret 0xffff
0x000000000040544c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000404201 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040725c : add byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x0000000000401778 : add byte ptr [rcx], al ; ret
0x0000000000402127 : add byte ptr [rcx], al ; ret 0xfa81
0x00000000004024b1 : add byte ptr [rcx], ch ; ret 0x8840
0x0000000000406818 : add byte ptr [rdi], cl ; lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000403c10 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000404e80 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040681e : add cl, ch ; ret 2
0x0000000000404f93 : add dil, dil ; loope 0x404f86 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000405a89 : add dword ptr [rax - 0x77], ecx ; ret 0x8148
0x000000000040452f : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040544a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004041ff : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040711d : add dword ptr [rax], ecx ; ret 0x840
0x0000000000406dfa : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401774 : add eax, 0x208cfe ; add ebx, esi ; ret
0x000000000040681b : add eax, 0xe9000000 ; ret 2
0x000000000040173b : add eax, edx ; sar rax, 1 ; jne 0x40174c ; pop rbp ; ret
0x0000000000401779 : add ebx, esi ; ret
0x000000000040191b : add esp, 0x10 ; pop rbp ; ret
0x0000000000406b4c : add esp, 0x130 ; pop rbp ; ret
0x000000000040577c : add esp, 0x1a0 ; pop rbp ; ret
0x00000000004028f7 : add esp, 0x20 ; pop rbp ; ret
0x0000000000401a2d : add esp, 0x30 ; pop rbp ; ret
0x0000000000402323 : add esp, 0x40 ; pop rbp ; ret
0x00000000004021df : add esp, 0x50 ; pop rbp ; ret
0x0000000000402662 : add esp, 0x60 ; pop rbp ; ret
0x0000000000402e23 : add esp, 0x70 ; pop rbp ; ret
0x000000000040485a : add esp, 0x90 ; pop rbp ; ret
0x0000000000405613 : add esp, 0xa0 ; pop rbp ; ret
0x00000000004012f6 : add esp, 8 ; ret
0x000000000040173a : add rax, rdx ; sar rax, 1 ; jne 0x40174d ; pop rbp ; ret
0x000000000040191a : add rsp, 0x10 ; pop rbp ; ret
0x0000000000406b4b : add rsp, 0x130 ; pop rbp ; ret
0x000000000040577b : add rsp, 0x1a0 ; pop rbp ; ret
0x00000000004028f6 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000401a2c : add rsp, 0x30 ; pop rbp ; ret
0x0000000000402322 : add rsp, 0x40 ; pop rbp ; ret
0x00000000004021de : add rsp, 0x50 ; pop rbp ; ret
0x0000000000402661 : add rsp, 0x60 ; pop rbp ; ret
0x0000000000402e22 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000404859 : add rsp, 0x90 ; pop rbp ; ret
0x0000000000405612 : add rsp, 0xa0 ; pop rbp ; ret
0x00000000004012f5 : add rsp, 8 ; ret
0x000000000040522e : and al, 0x10 ; mov al, 0 ; call 0x401526
0x00000000004052d3 : and al, 0x18 ; mov al, 0 ; call 0x401526
0x0000000000406df9 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401777 : and byte ptr [rax], al ; add ebx, esi ; ret
0x000000000040267f : and eax, 0x60a480 ; pop rbp ; ret
0x00000000004026a3 : and eax, 0x60a488 ; pop rbp ; ret
0x0000000000405132 : call 0x401432
0x0000000000405232 : call 0x401522
0x0000000000404239 : call 0xffffffffe902cb89
0x0000000000404238 : call 0xffffffffe902cb8a
0x0000000000407399 : call qword ptr [r12 + rbx*8]
0x00000000004086bf : call qword ptr [rax]
0x0000000000408b3b : call qword ptr [rsi]
0x000000000040739a : call qword ptr [rsp + rbx*8]
0x000000000040179d : call rax
0x0000000000403f8c : call rbx
0x0000000000408cdb : call rdi
0x0000000000406b4a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x000000000040597f : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404e91 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040173f : clc ; jne 0x401748 ; pop rbp ; ret
0x0000000000402cd5 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004072df : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004072e2 : clc ; pop rbp ; ret
0x0000000000401947 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040632b : cld ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040626a : cld ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000405fdb : cld ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000402660 : cld ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004072dc : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000406c93 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406c36 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406267 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040265d : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004016fd : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401710 ; pop rbp ; ret
0x00000000004012f1 : cmp eax, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000401b5b : cwde ; mov rcx, qword ptr [rax*8 + 0x407410] ; jmp rcx
0x0000000000404f8c : cwde ; mov rcx, qword ptr [rax*8 + 0x4082b8] ; jmp rcx
0x0000000000401bfa : dec dword ptr [rax - 0x75] ; push rbp ; mov byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000406884 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000403992 : dec dword ptr [rcx - 0x77] ; ret 0x294d
0x0000000000403d20 : enter 0x4b05, 0x34 ; fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x0000000000409361 : fdivr st(7) ; jmp rax
0x0000000000403d24 : fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x000000000040739c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000401919 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401710 : hlt ; pop rbp ; mov edi, 0x60a418 ; jmp rax
0x0000000000402321 : in al, dx ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000403fab : inc dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x00000000004055b5 : int 0x80
0x0000000000401703 : ja 0x40170a ; pop rbp ; ret
0x000000000040170f : je 0x40170d ; pop rbp ; mov edi, 0x60a418 ; jmp rax
0x000000000040138b : jmp 0x401307
0x0000000000405a88 : jmp 0xffffffffc2c9a292
0x0000000000408ee3 : jmp qword ptr [rax]
0x00000000004024aa : jmp qword ptr [rcx]
0x0000000000408dc3 : jmp qword ptr [rdx]
0x0000000000401717 : jmp rax
0x0000000000404f95 : jmp rcx
0x0000000000401757 : jmp rdx
0x0000000000408abb : jmp rsp
0x0000000000401740 : jne 0x401747 ; pop rbp ; ret
0x0000000000402e25 : jo 0x402e86 ; ret
0x000000000040444f : jo 0x4044b5 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000404af4 : jo 0x404b55 ; ret
0x0000000000404c2e : jo 0x404c8f ; ret
0x000000000040879f : lcall ptr [rax + 0x60000007] ; ret
0x000000000040878f : lcall ptr [rax + 7] ; add byte ptr [rax], al ; nop ; ret 0xffff
0x000000000040681a : lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000404f96 : loope 0x404f83 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000405230 : mov al, 0 ; call 0x401524
0x00000000004049cb : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000404858 : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000406df6 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004026a1 : mov byte ptr [0x60a488], al ; pop rbp ; ret
0x0000000000401bfe : mov byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000401773 : mov byte ptr [rip + 0x208cfe], 1 ; ret
0x0000000000406dfc : mov dh, -0x40 ; pop rbp ; ret
0x0000000000408a79 : mov dr1, edi ; jmp rdx
0x000000000040267d : mov dword ptr [0x60a480], edi ; pop rbp ; ret
0x0000000000402cd6 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000402c98 : mov dword ptr [rax], eax ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000402b54 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000402c97 : mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000401a29 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004023ba : mov dword ptr [rbp - 0x44], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401917 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040512c : mov dword ptr [rbp - 0xd0], eax ; call 0x401438
0x00000000004051b7 : mov dword ptr [rbp - 0xf0], eax ; call 0x401438
0x0000000000401945 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004072dd : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402d4e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040522c : mov dword ptr [rsp + 0x10], edx ; mov al, 0 ; call 0x401528
0x00000000004052d1 : mov dword ptr [rsp + 0x18], ebx ; mov al, 0 ; call 0x401528
0x00000000004087a8 : mov eax, 0xa0000007 ; ret
0x0000000000404f91 : mov eax, 0xff004082 ; loope 0x404f88 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000402b08 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040589b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004028f3 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402b05 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040284f : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040231f : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000405b93 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402abd : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004021db : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000402b4e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000402c9a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000402e1f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004049c9 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000406c94 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406329 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406268 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000405fd9 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040265e : mov eax, dword ptr [rbp - 4] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040597d : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404e8f : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004072e0 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000405d2d : mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040179b : mov ebp, esp ; call rax
0x0000000000401701 : mov ebp, esp ; ja 0x40170c ; pop rbp ; ret
0x00000000004055cd : mov ecx, 0x5b2a830a ; ret
0x0000000000401b5d : mov ecx, dword ptr [rax*8 + 0x407410] ; jmp rcx
0x0000000000402ee2 : mov ecx, dword ptr [rax*8 + 0x407db0] ; jmp rcx
0x0000000000403206 : mov ecx, dword ptr [rax*8 + 0x407df8] ; jmp rcx
0x0000000000404f8e : mov ecx, dword ptr [rax*8 + 0x4082b8] ; jmp rcx
0x0000000000402b51 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401795 : mov edi, 0x609e20 ; mov rbp, rsp ; call rax
0x0000000000401712 : mov edi, 0x60a418 ; jmp rax
0x0000000000401752 : mov edi, 0x60a418 ; jmp rdx
0x0000000000407397 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000407396 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000401750 : mov esi, eax ; mov edi, 0x60a418 ; jmp rdx
0x00000000004023bc : mov esp, 0x50c48348 ; pop rbp ; ret
0x000000000040267c : mov qword ptr [0x60a480], rdi ; pop rbp ; ret
0x000000000040512b : mov qword ptr [rbp - 0xd0], rax ; call 0x401439
0x00000000004051b6 : mov qword ptr [rbp - 0xf0], rax ; call 0x401439
0x0000000000402d4d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040522b : mov qword ptr [rsp + 0x10], r10 ; mov al, 0 ; call 0x401529
0x00000000004052d0 : mov qword ptr [rsp + 0x18], r11 ; mov al, 0 ; call 0x401529
0x00000000004023bb : mov r12d, 0x50c48348 ; pop rbp ; ret
0x00000000004049ca : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040589a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004028f2 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402b04 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040284e : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405b92 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402abc : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402e1e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004049c8 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040597c : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404e8e : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040179a : mov rbp, rsp ; call rax
0x0000000000401700 : mov rbp, rsp ; ja 0x40170d ; pop rbp ; ret
0x0000000000401b5c : mov rcx, qword ptr [rax*8 + 0x407410] ; jmp rcx
0x0000000000402ee1 : mov rcx, qword ptr [rax*8 + 0x407db0] ; jmp rcx
0x0000000000403205 : mov rcx, qword ptr [rax*8 + 0x407df8] ; jmp rcx
0x0000000000404f8d : mov rcx, qword ptr [rax*8 + 0x4082b8] ; jmp rcx
0x000000000040174f : mov rsi, rax ; mov edi, 0x60a418 ; jmp rdx
0x0000000000401776 : mov word ptr [rax], fs ; add byte ptr [rcx], al ; ret
0x00000000004087ac : movabs al, byte ptr [0xd0000007d8ffffc3] ; ret
0x0000000000408a74 : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add al, bl ; mov dr1, edi ; jmp rdx
0x0000000000404f98 : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000406dfb : movzx eax, al ; pop rbp ; ret
0x0000000000408794 : nop ; ret 0xffff
0x00000000004073b8 : nop dword ptr [rax + rax] ; ret
0x000000000040356d : or al, 0x18 ; ret 0x6451
0x0000000000401b5e : or al, 0xffffffffffffffc5 ; adc byte ptr [rax + rax*2], dh ; jmp rcx
0x000000000040935d : or dword ptr [rax], eax ; add byte ptr [rax], al ; fdivr st(7) ; jmp rax
0x0000000000404bb1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004051be : outsb dx, byte ptr [rsi] ; ret 0xffff
0x00000000004073ac : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000404451 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004073ae : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000404453 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004073b0 : pop r14 ; pop r15 ; ret
0x0000000000404203 : pop r14 ; pop rbp ; ret
0x0000000000404455 : pop r15 ; pop rbp ; ret
0x00000000004073b2 : pop r15 ; ret
0x0000000000401772 : pop rbp ; mov byte ptr [rip + 0x208cfe], 1 ; ret
0x0000000000401711 : pop rbp ; mov edi, 0x60a418 ; jmp rax
0x000000000040174e : pop rbp ; mov rsi, rax ; mov edi, 0x60a418 ; jmp rdx
0x00000000004073ab : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004073af : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401705 : pop rbp ; ret
0x0000000000404450 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040544d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000404202 : pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004055d1 : pop rbx ; ret
0x0000000000404456 : pop rdi ; pop rbp ; ret
0x00000000004073b3 : pop rdi ; ret
0x0000000000404454 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004073b1 : pop rsi ; pop r15 ; ret
0x0000000000404204 : pop rsi ; pop rbp ; ret
0x00000000004052d2 : pop rsp ; and al, 0x18 ; mov al, 0 ; call 0x401527
0x00000000004073ad : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000404452 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000402a3b : push 0x480060a4 ; add esp, 0x30 ; pop rbp ; ret
0x00000000004021e1 : push rax ; pop rbp ; ret
0x0000000000401bfd : push rbp ; mov byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000401794 : push rbp ; mov edi, 0x609e20 ; mov rbp, rsp ; call rax
0x0000000000401c60 : push rbp ; test byte ptr [rax - 0x77], cl ; ret 0x4d8b
0x000000000040522d : push rsp ; and al, 0x10 ; mov al, 0 ; call 0x401527
0x00000000004012f9 : ret
0x0000000000406a52 : ret 0
0x0000000000406a66 : ret 0x148
0x00000000004045ee : ret 0x1b2
0x0000000000401592 : ret 0x208b
0x0000000000401392 : ret 0x208c
0x00000000004028d5 : ret 0x2948
0x0000000000403979 : ret 0x294c
0x0000000000403995 : ret 0x294d
0x0000000000401c64 : ret 0x4d8b
0x0000000000402237 : ret 0x5589
0x000000000040356f : ret 0x6451
0x0000000000405a8c : ret 0x8148
0x000000000040711f : ret 0x840
0x00000000004024b3 : ret 0x8840
0x0000000000404f49 : ret 0x8844
0x0000000000401c01 : ret 0x8948
0x0000000000403998 : ret 0x8949
0x0000000000403b2c : ret 0x89a5
0x0000000000401cc4 : ret 0x8b48
0x0000000000401d33 : ret 0xb0
0x0000000000406a59 : ret 0xb849
0x00000000004039ad : ret 0xbde8
0x0000000000401735 : ret 0xc148
0x00000000004067c0 : ret 0xc2f6
0x00000000004024df : ret 0xca21
0x0000000000406081 : ret 0xca29
0x0000000000406106 : ret 0xd101
0x0000000000404e83 : ret 0xd284
0x000000000040423c : ret 0xee8
0x0000000000403c28 : ret 0xf180
0x00000000004067b3 : ret 0xf280
0x000000000040340e : ret 0xf281
0x0000000000402129 : ret 0xfa81
0x0000000000405134 : ret 0xffff
0x0000000000400328 : ret 1
0x0000000000401c38 : ret 2
0x0000000000402c96 : rol byte ptr [rcx + rcx*4], 1 ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004055b0 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000402e20 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x402e8b ; ret
0x000000000040173c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40174b ; pop rbp ; ret
0x00000000004055b1 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x000000000040396d : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000403976 : ror byte ptr [rax - 0x77], 1 ; ret 0x294c
0x0000000000402e21 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x402e8a ; ret
0x0000000000402294 : ror byte ptr [rcx + 0x48ce89cf], -0x77 ; ret 0x8b48
0x000000000040173e : sar eax, 1 ; jne 0x401749 ; pop rbp ; ret
0x000000000040173d : sar rax, 1 ; jne 0x40174a ; pop rbp ; ret
0x0000000000405133 : stc ; ret 0xffff
0x0000000000406df8 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004055cf : sub dword ptr [rdx], 0x5b ; ret
0x00000000004073ed : sub esp, 8 ; add rsp, 8 ; ret
0x00000000004073ec : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000401c61 : test byte ptr [rax - 0x77], cl ; ret 0x4d8b
0x00000000004073ba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000403c12 : xchg eax, ebp ; ret 0x8840
0x0000000000404e82 : xchg eax, esp ; ret 0xd284
0x0000000000406b4e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000404947 : xor eax, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x0000000000402c95 : xor eax, edx ; mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
