0x0000000000404659 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040522b : add al, 0x24 ; mov al, 0 ; call 0x4014a6
0x00000000004091ef : add al, ah ; fdivp st(7) ; jmp rdx
0x00000000004083db : add al, ah ; test al, -1 ; jmp qword ptr [rax]
0x000000000040522e : add al, ch ; insb byte ptr [rdi], dx ; ret 0xffff
0x0000000000401ab7 : add al, ch ; ret
0x000000000040743f : add bl, dh ; ret
0x000000000040266e : add byte ptr [rax + 1], cl ; ret 0x8b48
0x00000000004056cd : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x00000000004083cb : add byte ptr [rax], ah ; test al, -1 ; jmp rax
0x000000000040743d : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040266c : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8b48
0x000000000040743b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040743c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000403cfe : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000401aeb : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000404f6e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040689c : add byte ptr [rax], al ; add cl, ch ; ret 2
0x000000000040218d : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404330 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040125b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004091ea : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; or eax, dword ptr [rax] ; add al, ah ; fdivp st(7) ; jmp rdx
0x0000000000401419 : add byte ptr [rax], al ; jmp 0x401279
0x0000000000402bf2 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040275d : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040556b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004042f0 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040842a : add byte ptr [rax], al ; push rax ; ret
0x0000000000408d6e : add byte ptr [rax], al ; push rax ; ret 0xffff
0x000000000040743e : add byte ptr [rax], al ; ret
0x0000000000408d4e : add byte ptr [rax], al ; ret 0xffff
0x000000000040841b : add byte ptr [rax], dh ; ret 0xffff
0x0000000000408423 : add byte ptr [rax], dl ; ret
0x000000000040556c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004042f1 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x00000000004091eb : add byte ptr [rbx + rcx], ch ; add al, ah ; fdivp st(7) ; jmp rdx
0x0000000000401b8c : add byte ptr [rbx - 0x9f4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004072dc : add byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x00000000004016c8 : add byte ptr [rcx], al ; ret
0x0000000000406898 : add byte ptr [rdi], cl ; lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000403d00 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000401aed : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000404f70 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040689e : add cl, ch ; ret 2
0x0000000000405ba9 : add dword ptr [rax - 0x77], ecx ; ret 0x8148
0x000000000040461f : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040556a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004042ef : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040719d : add dword ptr [rax], ecx ; ret 0x840
0x0000000000406e7a : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004016c4 : add eax, 0x208bd6 ; add ebx, esi ; ret
0x00000000004022c7 : add eax, 0x48fffff0 ; add esp, 0x10 ; pop rbp ; ret
0x000000000040689b : add eax, 0xe9000000 ; ret 2
0x000000000040168b : add eax, edx ; sar rax, 1 ; jne 0x40169c ; pop rbp ; ret
0x00000000004016c9 : add ebx, esi ; ret
0x000000000040183b : add esp, 0x10 ; pop rbp ; ret
0x0000000000406bcc : add esp, 0x130 ; pop rbp ; ret
0x000000000040589c : add esp, 0x1a0 ; pop rbp ; ret
0x00000000004029e4 : add esp, 0x1c0 ; pop rbp ; ret
0x000000000040619e : add esp, 0x1e0 ; pop rbp ; ret
0x0000000000402164 : add esp, 0x20 ; pop rbp ; ret
0x000000000040191d : add esp, 0x30 ; pop rbp ; ret
0x0000000000404a3c : add esp, 0x50 ; pop rbp ; ret
0x0000000000402f13 : add esp, 0x70 ; pop rbp ; ret
0x0000000000402759 : add esp, 0x80 ; pop rbp ; ret
0x000000000040494a : add esp, 0x90 ; pop rbp ; ret
0x0000000000405733 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040125e : add esp, 8 ; ret
0x000000000040168a : add rax, rdx ; sar rax, 1 ; jne 0x40169d ; pop rbp ; ret
0x000000000040183a : add rsp, 0x10 ; pop rbp ; ret
0x0000000000406bcb : add rsp, 0x130 ; pop rbp ; ret
0x000000000040589b : add rsp, 0x1a0 ; pop rbp ; ret
0x00000000004029e3 : add rsp, 0x1c0 ; pop rbp ; ret
0x000000000040619d : add rsp, 0x1e0 ; pop rbp ; ret
0x0000000000402163 : add rsp, 0x20 ; pop rbp ; ret
0x000000000040191c : add rsp, 0x30 ; pop rbp ; ret
0x0000000000404a3b : add rsp, 0x50 ; pop rbp ; ret
0x0000000000402f12 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000402758 : add rsp, 0x80 ; pop rbp ; ret
0x0000000000404949 : add rsp, 0x90 ; pop rbp ; ret
0x0000000000405732 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040125d : add rsp, 8 ; ret
0x000000000040522c : and al, 0xffffffffffffffb0 ; add al, ch ; insb byte ptr [rdi], dx ; ret 0xffff
0x0000000000406e79 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004016c7 : and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000402089 : and eax, 0x60a1f8 ; pop rbp ; ret
0x00000000004021af : and eax, 0x60a2a8 ; pop rbp ; ret
0x00000000004021d3 : and eax, 0x60a2b0 ; pop rbp ; ret
0x00000000004050cc : call 0x4013a2
0x00000000004051bf : call 0x4014a2
0x0000000000404329 : call 0xffffffffe902cc79
0x0000000000404328 : call 0xffffffffe902cc7a
0x0000000000407419 : call qword ptr [r12 + rbx*8]
0x00000000004087ab : call qword ptr [rsi]
0x000000000040741a : call qword ptr [rsp + rbx*8]
0x00000000004016ed : call rax
0x000000000040407c : call rbx
0x00000000004089eb : call rdi
0x0000000000406bca : clc ; add rsp, 0x130 ; pop rbp ; ret
0x0000000000405a9f : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404f81 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402757 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x000000000040168f : clc ; jne 0x401698 ; pop rbp ; ret
0x0000000000402dc5 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040735f : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004027ae : clc ; pop rbp ; ret
0x0000000000406d16 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402162 : cld ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004024b8 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402086 : cld ; mov dword ptr [0x60a1f8], eax ; pop rbp ; ret
0x000000000040735c : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000406d13 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406cb6 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004024b5 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406089 : cmp dword ptr [rdx - 0x76be63d5], ebx ; ret
0x000000000040164d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401660 ; pop rbp ; ret
0x00000000004050ac : cwde ; mov rcx, qword ptr [rax*8 + 0x407f68] ; jmp rcx
0x0000000000408427 : dec dword ptr [rax + 7] ; add byte ptr [rax], al ; push rax ; ret
0x00000000004027aa : dec dword ptr [rax - 0x75] ; clc ; pop rbp ; ret
0x0000000000405228 : dec dword ptr [rax - 0x77] ; add al, 0x24 ; mov al, 0 ; call 0x4014a9
0x0000000000406904 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000401b92 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000401eaf : dec dword ptr [rbx - 0xdf4b] ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000401f3c : dec dword ptr [rbx - 0xe74b] ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000403a82 : dec dword ptr [rcx - 0x77] ; ret 0x294d
0x0000000000403e10 : enter 0x4b05, 0x34 ; fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x00000000004091f1 : fdivp st(7) ; jmp rdx
0x0000000000403e14 : fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x000000000040741c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000401839 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401660 : hlt ; pop rbp ; mov edi, 0x60a258 ; jmp rax
0x000000000040409b : inc dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x00000000004091ec : insb byte ptr [rdi], dx ; or eax, dword ptr [rax] ; add al, ah ; fdivp st(7) ; jmp rdx
0x0000000000405230 : insb byte ptr [rdi], dx ; ret 0xffff
0x00000000004056d5 : int 0x80
0x0000000000401653 : ja 0x40165a ; pop rbp ; ret
0x000000000040165f : je 0x40165d ; pop rbp ; mov edi, 0x60a258 ; jmp rax
0x000000000040141b : jmp 0x401277
0x0000000000405ba8 : jmp 0xffffffffc2c9a3b2
0x000000000040835f : jmp qword ptr [rax]
0x0000000000401c38 : jmp qword ptr [rcx]
0x0000000000408ad3 : jmp qword ptr [rdx]
0x0000000000401667 : jmp rax
0x0000000000402fd9 : jmp rcx
0x00000000004016a7 : jmp rdx
0x0000000000401690 : jne 0x401697 ; pop rbp ; ret
0x0000000000402f15 : jo 0x402f76 ; ret
0x000000000040453f : jo 0x4045a5 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000404be4 : jo 0x404c45 ; ret
0x0000000000404d1e : jo 0x404d7f ; ret
0x000000000040689a : lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000404fab : loope 0x404fc3 ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004024ff : loopne 0x40254f ; add esp, 0x20 ; pop rbp ; ret
0x00000000004024fe : loopne 0x402550 ; add esp, 0x20 ; pop rbp ; ret
0x00000000004050c7 : loopne 0x405118 ; mov dword ptr [rbp - 0x78], eax ; call 0x4013a7
0x00000000004050c6 : loopne 0x405119 ; mov dword ptr [rbp - 0x78], eax ; call 0x4013a8
0x00000000004061a0 : loopne 0x4061a8 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004051bd : mov al, 0 ; call 0x4014a4
0x0000000000404abb : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000404948 : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000406e76 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004021d1 : mov byte ptr [0x60a2b0], al ; pop rbp ; ret
0x00000000004016c3 : mov byte ptr [rip + 0x208bd6], 1 ; ret
0x0000000000406e7c : mov dh, -0x40 ; pop rbp ; ret
0x0000000000402087 : mov dword ptr [0x60a1f8], eax ; pop rbp ; ret
0x00000000004021ad : mov dword ptr [0x60a2a8], edi ; pop rbp ; ret
0x0000000000402dc6 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000402d88 : mov dword ptr [rax], eax ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000402c44 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000402d87 : mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000401919 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004050c9 : mov dword ptr [rbp - 0x78], eax ; call 0x4013a5
0x00000000004050fb : mov dword ptr [rbp - 0x88], eax ; call 0x4013a8
0x000000000040513e : mov dword ptr [rbp - 0x98], eax ; call 0x4013a8
0x0000000000405189 : mov dword ptr [rbp - 0xa8], eax ; call 0x4013a8
0x0000000000401837 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040735d : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402e3e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040522a : mov dword ptr [rsp], eax ; mov al, 0 ; call 0x4014a7
0x0000000000402bf8 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004059bb : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402423 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402bf5 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040237f : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405cb3 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402bad : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402c3e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004024fd : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004050c5 : mov eax, dword ptr [rbp - 0x20] ; mov qword ptr [rbp - 0x78], rax ; call 0x4013a9
0x0000000000402d8a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000402f0f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000404ab9 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000406d14 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402160 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004024b6 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000405a9d : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404f7f : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004027ac : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004016eb : mov ebp, esp ; call rax
0x0000000000401651 : mov ebp, esp ; ja 0x40165c ; pop rbp ; ret
0x00000000004056ed : mov ecx, 0x5b2a830a ; ret
0x0000000000402fd2 : mov ecx, dword ptr [rax*8 + 0x407a60] ; jmp rcx
0x00000000004032f6 : mov ecx, dword ptr [rax*8 + 0x407aa8] ; jmp rcx
0x00000000004050ae : mov ecx, dword ptr [rax*8 + 0x407f68] ; jmp rcx
0x0000000000402c41 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004016e5 : mov edi, 0x609e20 ; mov rbp, rsp ; call rax
0x0000000000401662 : mov edi, 0x60a258 ; jmp rax
0x00000000004016a2 : mov edi, 0x60a258 ; jmp rdx
0x0000000000407417 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000407416 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000040257d : mov edx, 0x4fdaf5a1 ; ret
0x000000000040256d : mov esi, 0x4fdaf5a1 ; ret
0x00000000004051bb : mov esi, eax ; mov al, 0 ; call 0x4014a6
0x00000000004016a0 : mov esi, eax ; mov edi, 0x60a258 ; jmp rdx
0x00000000004016c6 : mov esp, dword ptr [rax] ; add byte ptr [rcx], al ; ret
0x00000000004021ac : mov qword ptr [0x60a2a8], rdi ; pop rbp ; ret
0x00000000004050c8 : mov qword ptr [rbp - 0x78], rax ; call 0x4013a6
0x00000000004050fa : mov qword ptr [rbp - 0x88], rax ; call 0x4013a9
0x000000000040513d : mov qword ptr [rbp - 0x98], rax ; call 0x4013a9
0x0000000000405188 : mov qword ptr [rbp - 0xa8], rax ; call 0x4013a9
0x0000000000402e3d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405229 : mov qword ptr [rsp], rax ; mov al, 0 ; call 0x4014a8
0x0000000000404aba : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004059ba : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402422 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402bf4 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040237e : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405cb2 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402bac : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004024fc : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402f0e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000404ab8 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000405a9c : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404f7e : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004027ab : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004016ea : mov rbp, rsp ; call rax
0x0000000000401650 : mov rbp, rsp ; ja 0x40165d ; pop rbp ; ret
0x0000000000402fd1 : mov rcx, qword ptr [rax*8 + 0x407a60] ; jmp rcx
0x00000000004032f5 : mov rcx, qword ptr [rax*8 + 0x407aa8] ; jmp rcx
0x00000000004050ad : mov rcx, qword ptr [rax*8 + 0x407f68] ; jmp rcx
0x00000000004051ba : mov rsi, rax ; mov al, 0 ; call 0x4014a7
0x000000000040169f : mov rsi, rax ; mov edi, 0x60a258 ; jmp rdx
0x0000000000406e7b : movzx eax, al ; pop rbp ; ret
0x0000000000407438 : nop dword ptr [rax + rax] ; ret
0x000000000040365d : or al, 0x18 ; ret 0x6451
0x00000000004045c8 : or al, ch ; ret 0xffcc
0x00000000004091ed : or eax, dword ptr [rax] ; add al, ah ; fdivp st(7) ; jmp rdx
0x0000000000404ca1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040742c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000404541 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040742e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000404543 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000407430 : pop r14 ; pop r15 ; ret
0x00000000004042f3 : pop r14 ; pop rbp ; ret
0x0000000000404545 : pop r15 ; pop rbp ; ret
0x0000000000407432 : pop r15 ; ret
0x00000000004016c2 : pop rbp ; mov byte ptr [rip + 0x208bd6], 1 ; ret
0x0000000000401661 : pop rbp ; mov edi, 0x60a258 ; jmp rax
0x000000000040169e : pop rbp ; mov rsi, rax ; mov edi, 0x60a258 ; jmp rdx
0x000000000040742b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040742f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401655 : pop rbp ; ret
0x0000000000404540 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040556d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004042f2 : pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004056f1 : pop rbx ; ret
0x0000000000404546 : pop rdi ; pop rbp ; ret
0x0000000000407433 : pop rdi ; ret
0x0000000000404544 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000407431 : pop rsi ; pop r15 ; ret
0x00000000004042f4 : pop rsi ; pop rbp ; ret
0x000000000040742d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000404542 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405140 : push -0x17000001 ; push rdi ; ret 0xffff
0x0000000000404a3e : push rax ; pop rbp ; ret
0x000000000040842c : push rax ; ret
0x0000000000408d70 : push rax ; ret 0xffff
0x00000000004016e4 : push rbp ; mov edi, 0x609e20 ; mov rbp, rsp ; call rax
0x0000000000405145 : push rdi ; ret 0xffff
0x0000000000401261 : ret
0x0000000000406ad2 : ret 0
0x0000000000406ae6 : ret 0x148
0x00000000004046de : ret 0x1b2
0x0000000000401422 : ret 0x208c
0x0000000000402405 : ret 0x2948
0x0000000000403a69 : ret 0x294c
0x0000000000403a85 : ret 0x294d
0x0000000000402cc4 : ret 0x5589
0x000000000040365f : ret 0x6451
0x0000000000406085 : ret 0x8141
0x0000000000405bac : ret 0x8148
0x000000000040719f : ret 0x840
0x0000000000403d03 : ret 0x8840
0x0000000000405069 : ret 0x8844
0x00000000004026c6 : ret 0x8948
0x0000000000403a88 : ret 0x8949
0x0000000000403c1c : ret 0x89a5
0x0000000000402664 : ret 0x8b48
0x00000000004060af : ret 0x941
0x0000000000401ab5 : ret 0xb0
0x0000000000406ad9 : ret 0xb849
0x0000000000401685 : ret 0xc148
0x0000000000406840 : ret 0xc2f6
0x0000000000403484 : ret 0xca21
0x0000000000404f73 : ret 0xd284
0x0000000000401c3a : ret 0xd609
0x0000000000403a9d : ret 0xde8
0x0000000000401af0 : ret 0xe280
0x000000000040432c : ret 0xee8
0x0000000000403d18 : ret 0xf180
0x0000000000406833 : ret 0xf280
0x00000000004020fb : ret 0xf281
0x00000000004060ea : ret 0xffb1
0x00000000004045ca : ret 0xffcc
0x000000000040198a : ret 0xfff9
0x00000000004050ce : ret 0xffff
0x00000000004046e4 : ret 1
0x00000000004068a0 : ret 2
0x0000000000402d86 : rol byte ptr [rcx + rcx*4], 1 ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004083c8 : rol byte ptr [rip - 0x57e00000], -1 ; jmp rax
0x00000000004056d0 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000402f10 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x402f7b ; ret
0x000000000040168c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40169b ; pop rbp ; ret
0x00000000004056d1 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000403a5d : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000403a66 : ror byte ptr [rax - 0x77], 1 ; ret 0x294c
0x0000000000402f11 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x402f7a ; ret
0x00000000004016c5 : salc ; mov esp, dword ptr [rax] ; add byte ptr [rcx], al ; ret
0x000000000040168e : sar eax, 1 ; jne 0x401699 ; pop rbp ; ret
0x000000000040168d : sar rax, 1 ; jne 0x40169a ; pop rbp ; ret
0x0000000000406e78 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004056ef : sub dword ptr [rdx], 0x5b ; ret
0x000000000040746d : sub esp, 8 ; add rsp, 8 ; ret
0x000000000040746c : sub rsp, 8 ; add rsp, 8 ; ret
0x00000000004083dd : test al, -1 ; jmp qword ptr [rax]
0x00000000004083cd : test al, -1 ; jmp rax
0x000000000040743a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000403d02 : xchg eax, ebp ; ret 0x8840
0x0000000000401aef : xchg eax, ebp ; ret 0xe280
0x0000000000404f72 : xchg eax, esp ; ret 0xd284
0x0000000000406bce : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000404a37 : xor eax, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x0000000000402d85 : xor eax, edx ; mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
