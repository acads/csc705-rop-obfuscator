0x0000000000402e19 : adc al, -0x7f ; ret 0xa
0x0000000000402b4d : adc al, 0x25 ; mov eax, 0x81006156 ; ret 0x26cd
0x0000000000410f08 : adc al, 0x48 ; add esp, 0x10 ; pop rbp ; ret
0x000000000040e119 : adc al, 1 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402cca : adc al, byte ptr [rcx] ; jmp rcx
0x0000000000412dcc : adc byte ptr [rdx - 1], cl ; call rax
0x0000000000413910 : adc byte ptr [rsi - 1], ch ; jmp rdx
0x0000000000410eec : adc dh, dh ; ret 0xf01
0x000000000040228d : adc dword ptr [rcx], eax ; jmp rcx
0x0000000000407b67 : adc eax, 0x48ffff9d ; add esp, 0x10 ; pop rbp ; ret
0x000000000040a709 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004134a3 : add ah, al ; add al, byte ptr [rax] ; add al, ch ; cmp edi, edi ; call qword ptr [rax]
0x0000000000412d1d : add al, -1 ; call qword ptr [rax]
0x00000000004141cf : add al, ah ; ret 0xffff
0x00000000004134a5 : add al, byte ptr [rax] ; add al, ch ; cmp edi, edi ; call qword ptr [rax]
0x00000000004134a7 : add al, ch ; cmp edi, edi ; call qword ptr [rax]
0x000000000040df48 : add al, ch ; ret 0xff3a
0x0000000000407778 : add al, ch ; ret 0xffa4
0x00000000004062d8 : add al, ch ; ret 7
0x00000000004110ff : add bl, dh ; ret
0x0000000000402e0e : add byte ptr [r8], al ; add byte ptr [rcx], al ; ret 0xc281
0x0000000000403609 : add byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000040b299 : add byte ptr [rax + 1], cl ; ret 0x3948
0x000000000040efd7 : add byte ptr [rax + 1], cl ; ret 0x4a3b
0x0000000000407fca : add byte ptr [rax - 0x73], cl ; xor al, 0x25 ; ret 0x4121
0x0000000000411026 : add byte ptr [rax - 0x75], cl ; call 0x4903997e
0x000000000040c1bd : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000040439c : add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000412e8b : add byte ptr [rax], ah ; ja 0x412e92 ; call rax
0x0000000000412dca : add byte ptr [rax], al ; adc byte ptr [rdx - 1], cl ; call rax
0x000000000041390e : add byte ptr [rax], al ; adc byte ptr [rsi - 1], ch ; jmp rdx
0x00000000004110fd : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000403607 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000040b297 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x3948
0x000000000040efd5 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x4a3b
0x0000000000407fc8 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; xor al, 0x25 ; ret 0x4121
0x0000000000411024 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; call 0x49039980
0x00000000004110fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004002f0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400710 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x00000000004002f2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400712 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x0000000000410de1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040d119 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004002f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400714 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x00000000004131fd : add byte ptr [rax], al ; add byte ptr [rax], dl ; out -2, al ; call qword ptr [rax]
0x00000000004043d6 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000407071 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7038b], cl ; ret 0xb0
0x000000000041394e : add byte ptr [rax], al ; add byte ptr [rcx - 1], dh ; jmp qword ptr [rdx]
0x0000000000402e0f : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xc281
0x00000000004034ee : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5588
0x0000000000409dae : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000410e32 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000406c55 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040db4c : add byte ptr [rax], al ; add cl, ch ; ret 2
0x0000000000413342 : add byte ptr [rax], al ; add dword ptr fs:[rax], eax ; add byte ptr [rax], ch ; add edi, edi ; call qword ptr [rax]
0x000000000040a6d1 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004033b7 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000040a3e0 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000410de3 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040493c : add byte ptr [rax], al ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000004017fb : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000412e8a : add byte ptr [rax], al ; and byte ptr [rdi - 1], dh ; call rax
0x00000000004134a6 : add byte ptr [rax], al ; call 0x114133ed
0x0000000000401879 : add byte ptr [rax], al ; jmp 0x401819
0x000000000041394f : add byte ptr [rax], al ; jno 0x413956 ; jmp qword ptr [rdx]
0x000000000040d11b : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000408ca2 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000413566 : add byte ptr [rax], al ; or byte ptr [rax - 1], al ; call qword ptr [rax]
0x000000000040317a : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040c05b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040a3a0 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004043d7 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004002f6 : add byte ptr [rax], al ; ret
0x0000000000400716 : add byte ptr [rax], al ; ret 2
0x000000000041390a : add byte ptr [rax], al ; sub al, 7 ; add byte ptr [rax], al ; adc byte ptr [rsi - 1], ch ; jmp rdx
0x0000000000413562 : add byte ptr [rax], al ; test byte ptr [rbx], al ; add byte ptr [rax], al ; or byte ptr [rax - 1], al ; call qword ptr [rax]
0x0000000000412e5a : add byte ptr [rax], al ; xor byte ptr [rax - 1], ah ; call qword ptr [rax]
0x0000000000413347 : add byte ptr [rax], ch ; add edi, edi ; call qword ptr [rax]
0x0000000000413193 : add byte ptr [rax], dh ; in al, -1 ; jmp qword ptr [rax]
0x00000000004131ff : add byte ptr [rax], dl ; out -2, al ; call qword ptr [rax]
0x000000000040c05c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040a3a1 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x00000000004043d8 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000407073 : add byte ptr [rbx - 0x76b7038b], cl ; ret 0xb0
0x0000000000402b52 : add byte ptr [rcx + 0x826cdc2], al ; jl 0x402ae3 ; ret 1
0x0000000000413343 : add byte ptr [rcx + rax], ah ; add byte ptr [rax], ch ; add edi, edi ; call qword ptr [rax]
0x0000000000410b2c : add byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x0000000000413950 : add byte ptr [rcx - 1], dh ; jmp qword ptr [rdx]
0x000000000040b410 : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401dd8 : add byte ptr [rcx], al ; ret
0x0000000000402e11 : add byte ptr [rcx], al ; ret 0xc281
0x000000000041390b : add byte ptr [rdi + rax], ch ; add byte ptr [rax], al ; adc byte ptr [rsi - 1], ch ; jmp rdx
0x000000000041394b : add byte ptr [rdi + rax], ch ; add byte ptr [rax], al ; jno 0x41395a ; jmp qword ptr [rdx]
0x000000000040db48 : add byte ptr [rdi], cl ; lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x00000000004034f0 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5588
0x0000000000409db0 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000410e34 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000406c57 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040db4e : add cl, ch ; ret 2
0x0000000000403f82 : add dword ptr [rax - 0x77], ecx ; ret 0x2948
0x000000000040c699 : add dword ptr [rax - 0x77], ecx ; ret 0x8148
0x000000000040a6cf : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000413345 : add dword ptr [rax], eax ; add byte ptr [rax], ch ; add edi, edi ; call qword ptr [rax]
0x000000000040c05a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040a39f : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000408414 : add dword ptr [rax], ecx ; ret 0x840
0x0000000000404872 : add dword ptr [rcx - 0x78f04fbb], ecx ; ret 0
0x0000000000407f16 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040f562 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x00000000004106ca : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000413344 : add dword ptr fs:[rax], eax ; add byte ptr [rax], ch ; add edi, edi ; call qword ptr [rax]
0x0000000000401dd4 : add eax, 0x2135be ; add ebx, esi ; ret
0x000000000040db4b : add eax, 0xe9000000 ; ret 2
0x00000000004017f9 : add eax, dword ptr [rbx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000401d9b : add eax, edx ; sar rax, 1 ; jne 0x401dac ; pop rbp ; ret
0x000000000040fb59 : add eax, esi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x0000000000401dd9 : add ebx, esi ; ret
0x000000000040e15b : add edi, eax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x0000000000413349 : add edi, edi ; call qword ptr [rax]
0x0000000000401fab : add esp, 0x10 ; pop rbp ; ret
0x000000000040b40e : add esp, 0x100 ; pop rbp ; ret
0x000000000041001c : add esp, 0x10e0 ; pop rbp ; ret
0x0000000000405ea9 : add esp, 0x130 ; pop rbp ; ret
0x00000000004087b5 : add esp, 0x170 ; pop rbp ; ret
0x00000000004033ba : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000040c38c : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000403467 : add esp, 0x20 ; pop rbp ; ret
0x000000000040ed16 : add esp, 0x250 ; pop rbp ; ret
0x00000000004020bd : add esp, 0x30 ; pop rbp ; ret
0x000000000040365c : add esp, 0x40 ; pop rbp ; ret
0x000000000040493f : add esp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000004076da : add esp, 0x50 ; pop rbp ; ret
0x0000000000406a92 : add esp, 0x60 ; pop rbp ; ret
0x00000000004065ae : add esp, 0x70 ; pop rbp ; ret
0x0000000000403176 : add esp, 0x80 ; pop rbp ; ret
0x000000000040a9fa : add esp, 0x90 ; pop rbp ; ret
0x000000000040c223 : add esp, 0xa0 ; pop rbp ; ret
0x0000000000408bda : add esp, 0xb0 ; pop rbp ; ret
0x000000000041049d : add esp, 0xc0 ; pop rbp ; ret
0x000000000040d0b5 : add esp, 0xe0 ; pop rbp ; ret
0x0000000000407041 : add esp, 0xf0 ; pop rbp ; ret
0x00000000004043d3 : add esp, 0xf8 ; pop rbx ; pop rbp ; ret
0x00000000004017fe : add esp, 8 ; ret
0x000000000040df47 : add r8b, bpl ; ret 0xff3a
0x0000000000401d9a : add rax, rdx ; sar rax, 1 ; jne 0x401dad ; pop rbp ; ret
0x000000000040fb58 : add rax, rsi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x000000000040e15a : add rdi, rax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x0000000000401faa : add rsp, 0x10 ; pop rbp ; ret
0x000000000040b40d : add rsp, 0x100 ; pop rbp ; ret
0x000000000041001b : add rsp, 0x10e0 ; pop rbp ; ret
0x0000000000405ea8 : add rsp, 0x130 ; pop rbp ; ret
0x00000000004087b4 : add rsp, 0x170 ; pop rbp ; ret
0x00000000004033b9 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000040c38b : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000403466 : add rsp, 0x20 ; pop rbp ; ret
0x000000000040ed15 : add rsp, 0x250 ; pop rbp ; ret
0x00000000004020bc : add rsp, 0x30 ; pop rbp ; ret
0x000000000040365b : add rsp, 0x40 ; pop rbp ; ret
0x000000000040493e : add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000004076d9 : add rsp, 0x50 ; pop rbp ; ret
0x0000000000406a91 : add rsp, 0x60 ; pop rbp ; ret
0x00000000004065ad : add rsp, 0x70 ; pop rbp ; ret
0x0000000000403175 : add rsp, 0x80 ; pop rbp ; ret
0x000000000040a9f9 : add rsp, 0x90 ; pop rbp ; ret
0x000000000040c222 : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000408bd9 : add rsp, 0xb0 ; pop rbp ; ret
0x000000000041049c : add rsp, 0xc0 ; pop rbp ; ret
0x000000000040d0b4 : add rsp, 0xe0 ; pop rbp ; ret
0x0000000000407040 : add rsp, 0xf0 ; pop rbp ; ret
0x00000000004043d2 : add rsp, 0xf8 ; pop rbx ; pop rbp ; ret
0x00000000004017fd : add rsp, 8 ; ret
0x000000000040f561 : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004106c9 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004093aa : and al, byte ptr [rcx] ; jmp rcx
0x0000000000412e8c : and byte ptr [rdi - 1], dh ; call rax
0x0000000000401dd7 : and dword ptr [rax], eax ; add ebx, esi ; ret
0x0000000000409086 : and dword ptr [rcx], eax ; jmp rcx
0x0000000000407a4f : and eax, 0x615a88 ; pop rbp ; ret
0x0000000000407a73 : and eax, 0x615a90 ; pop rbp ; ret
0x0000000000403d12 : and eax, ebp ; ret
0x00000000004052e0 : bsf eax, dword ptr [rcx - 0xe] ; jmp qword ptr [rcx]
0x00000000004134a8 : call 0x114133eb
0x000000000040eb24 : call 0x36c74
0x0000000000401ee8 : call 0x3ae1d7
0x0000000000401ee7 : call 0x3ae1d8
0x00000000004055db : call 0x401852
0x000000000040c874 : call 0x401c46
0x0000000000403b57 : call 0x490264ab
0x0000000000403b56 : call 0x490264ac
0x000000000041102a : call 0x4903997a
0x0000000000411029 : call 0x4903997b
0x0000000000404871 : call 0xffffffffb085d17e
0x0000000000402b89 : call 0xffffffffca69ee19
0x0000000000402b88 : call 0xffffffffca69ee1a
0x000000000040a3d9 : call 0xffffffffe9032d29
0x000000000040a3d8 : call 0xffffffffe9032d2a
0x000000000040f9e3 : call 0xffffffffe9038333
0x00000000004110d9 : call qword ptr [r12 + rbx*8]
0x0000000000412d1f : call qword ptr [rax]
0x000000000041352b : call qword ptr [rdx]
0x000000000041362b : call qword ptr [rsi]
0x00000000004110da : call qword ptr [rsp + rbx*8]
0x0000000000401dfd : call rax
0x000000000040a12c : call rbx
0x000000000041344b : call rdi
0x0000000000413bd3 : call rsi
0x00000000004043d5 : clc ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040b40c : clc ; add rsp, 0x100 ; pop rbp ; ret
0x000000000040de7a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x000000000040c58f : clc ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040ed14 : clc ; add rsp, 0x250 ; pop rbp ; ret
0x0000000000407a36 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000407984 : clc ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004076d8 : clc ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041107a : clc ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000408bd8 : clc ; add rsp, 0xb0 ; pop rbp ; ret
0x000000000041049b : clc ; add rsp, 0xc0 ; pop rbp ; ret
0x0000000000401d9f : clc ; jne 0x401da8 ; pop rbp ; ret
0x0000000000407096 : clc ; mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000410f05 : clc ; mov dword ptr [rax + 0x14], ecx ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408e75 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000410baf : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000410bb2 : clc ; pop rbp ; ret
0x000000000040d118 : cld ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000401fd7 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041001a : cld ; add rsp, 0x10e0 ; pop rbp ; ret
0x000000000040d2c9 : cld ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407340 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040745b : cld ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040d0b3 : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x0000000000410bac : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040d323 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040d2c6 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040733d : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040d11f : cld ; pop rbp ; ret
0x0000000000401d5d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401d70 ; pop rbp ; ret
0x00000000004134a9 : cmp edi, edi ; call qword ptr [rax]
0x000000000040bb9c : cwde ; mov rcx, qword ptr [rax*8 + 0x4126f0] ; jmp rcx
0x0000000000405d81 : dec dword ptr [rax + 1] ; ret 0x8948
0x0000000000409080 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; lock and dword ptr [rcx], eax ; jmp rcx
0x000000000040eb20 : dec dword ptr [rax - 0x75] ; push rbp ; call 0x36c78
0x000000000040b2ba : dec dword ptr [rax - 0x77] ; ret 0x2948
0x000000000040b9cc : dec dword ptr [rax - 0x77] ; ret 0x5be8
0x000000000040b6c9 : dec dword ptr [rax - 0x77] ; ret 0x5ee8
0x000000000040eb56 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000409b32 : dec dword ptr [rcx - 0x77] ; ret 0x294d
0x000000000040f6f4 : enter -0x76b8, 0xc ; ret 0x59e9
0x0000000000409ec0 : enter 0x4b05, 0x34 ; fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x0000000000409ec4 : fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x000000000041023e : fmul dword ptr [r8 - 0x77] ; ret 0x8148
0x000000000040810b : fmul dword ptr [rax + 0x29] ; ret 0x148
0x000000000041023f : fmul dword ptr [rax - 0x77] ; ret 0x8148
0x00000000004110dc : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000401fa9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000410e3f : hlt ; mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401d70 : hlt ; pop rbp ; mov edi, 0x615338 ; jmp rax
0x0000000000402e17 : hlt ; sub edx, dword ptr [rcx + rax*4] ; ret 0xa
0x0000000000406c54 : imul eax, dword ptr [rax], 0x940f0000 ; ret 0xd284
0x0000000000413195 : in al, -1 ; jmp qword ptr [rax]
0x0000000000406c53 : in al, 0x69 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040d1dc : in al, dx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040f568 : in al, dx ; pop rbp ; ret
0x000000000040a14b : inc dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x000000000040c1c5 : int 0x80
0x000000000040e85c : int 0xfd
0x0000000000401d63 : ja 0x401d6a ; pop rbp ; ret
0x0000000000412e8d : ja 0x412e90 ; call rax
0x0000000000413b91 : jae 0x413b94 ; jmp qword ptr [rdx]
0x0000000000411c02 : jb 0x411c68 ; outsb dx, byte ptr [rsi] ; ret
0x0000000000411c01 : jb 0x411c69 ; outsb dx, byte ptr [rsi] ; ret
0x0000000000413a71 : jb 0x413a74 ; jmp qword ptr [rax]
0x0000000000401d6f : je 0x401d6d ; pop rbp ; mov edi, 0x615338 ; jmp rax
0x0000000000413bd1 : je 0x413bd4 ; call rsi
0x0000000000406c52 : jge 0x406c40 ; imul eax, dword ptr [rax], 0x940f0000 ; ret 0xd284
0x0000000000406c8f : jge 0x406c7d ; imul eax, dword ptr [rax], 0x940f0000 ; ret 0xd284
0x0000000000406ccc : jge 0x406cba ; imul eax, dword ptr [rax], 0x940f0000 ; ret 0xd284
0x0000000000406d09 : jge 0x406cf7 ; imul eax, dword ptr [rax], 0x940f0000 ; ret 0xd284
0x0000000000406d46 : jge 0x406d34 ; imul eax, dword ptr [rax], 0x940f0000 ; ret 0xd284
0x0000000000402b58 : jl 0x402add ; ret 1
0x000000000040187b : jmp 0x401817
0x000000000040c698 : jmp 0xffffffffc2ca0ea2
0x0000000000413197 : jmp qword ptr [rax]
0x0000000000402d6a : jmp qword ptr [rcx]
0x000000000041376b : jmp qword ptr [rdx]
0x0000000000401d77 : jmp rax
0x0000000000402290 : jmp rcx
0x0000000000401db7 : jmp rdx
0x0000000000401da0 : jne 0x401da7 ; pop rbp ; ret
0x0000000000413951 : jno 0x413954 ; jmp qword ptr [rdx]
0x00000000004065b0 : jo 0x406611 ; ret
0x00000000004087b7 : jo 0x4087bf ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000408fc5 : jo 0x409026 ; ret
0x000000000040a5ef : jo 0x40a655 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040ac94 : jo 0x40acf5 ; ret
0x000000000040adce : jo 0x40ae2f ; ret
0x000000000040db4a : lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000409085 : lock and dword ptr [rcx], eax ; jmp rcx
0x0000000000402f6e : loopne 0x402efb ; ret 0xca29
0x0000000000402f6d : loopne 0x402efc ; ret 0xca29
0x0000000000407269 : loopne 0x4071f6 ; ret 0xca29
0x0000000000407268 : loopne 0x4071f7 ; ret 0xca29
0x000000000040c990 : loopne 0x40c9e0 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040c98f : loopne 0x40c9e1 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040d0b7 : loopne 0x40d0be ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041001e : loopne 0x410035 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000408bdc : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040c872 : mov al, 0 ; call 0x401c48
0x00000000004078ea : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040a9f8 : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000412e88 : mov al, 0xb ; add byte ptr [rax], al ; and byte ptr [rdi - 1], dh ; call rax
0x0000000000412dc8 : mov al, 8 ; add byte ptr [rax], al ; adc byte ptr [rdx - 1], cl ; call rax
0x00000000004106c6 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000404a41 : mov bl, -0x6f ; ret
0x0000000000407a71 : mov byte ptr [0x615a90], al ; pop rbp ; ret
0x000000000040e117 : mov byte ptr [rax + 0x14], 1 ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040fb2b : mov byte ptr [rax + 0xc], 1 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407097 : mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000401dd3 : mov byte ptr [rip + 0x2135be], 1 ; ret
0x0000000000407f18 : mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040f564 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x00000000004106cc : mov dh, -0x40 ; pop rbp ; ret
0x0000000000404d8f : mov ds, edx ; xor eax, dword ptr [rcx - 0xe] ; jmp qword ptr [rcx]
0x0000000000407a4d : mov dword ptr [0x615a88], edi ; pop rbp ; ret
0x0000000000410f06 : mov dword ptr [rax + 0x14], ecx ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408e76 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000408e38 : mov dword ptr [rax], eax ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000408cf4 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000408e37 : mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004020b9 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004067b6 : mov dword ptr [rbp - 0x3c], eax ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004078e8 : mov dword ptr [rbp - 0x50], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000406a8e : mov dword ptr [rbp - 0x5c], eax ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004065aa : mov dword ptr [rbp - 0x70], eax ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000401fa7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401fd5 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000410bad : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000408eee : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403777 : mov dword ptr [rcx + 8], eax ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040fb5c : mov dword ptr [rdi + 0x10], eax ; pop rbp ; ret
0x000000000040e15e : mov dword ptr [rsi], edi ; pop rbp ; ret
0x0000000000402b4f : mov eax, 0x81006156 ; ret 0x26cd
0x0000000000403d99 : mov eax, 0x89006156 ; ret 0xca29
0x0000000000408ca8 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040c4ab : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407cc3 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000408ca5 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000407c1f : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040d1da : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040c7a3 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000408c5d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000407ea4 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000408cee : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040c98e : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000408e3a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040c8db : mov eax, dword ptr [rbp - 0x2c] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000408fbf : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040ab69 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000410e40 : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004055d5 : mov eax, dword ptr [rbp - 0xd8] ; call 0x401858
0x000000000040d324 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040d2c7 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040733e : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000407459 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040d11d : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040c58d : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407a34 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000407982 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004076d6 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000411078 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000410bb0 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402d64 : mov eax, dword ptr [rcx - 0xe] ; jmp qword ptr [rcx]
0x000000000040716a : mov eax, ecx ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401dfb : mov ebp, esp ; call rax
0x0000000000401d61 : mov ebp, esp ; ja 0x401d6c ; pop rbp ; ret
0x000000000040c1dd : mov ecx, 0x5b2a830a ; ret
0x0000000000404a3d : mov ecx, 0xb3de5542 ; xchg eax, ecx ; ret
0x00000000004022fd : mov ecx, dword ptr [rax*8 + 0x411160] ; jmp rcx
0x0000000000402289 : mov ecx, dword ptr [rax*8 + 0x4111d8] ; jmp rcx
0x0000000000402cec : mov ecx, dword ptr [rax*8 + 0x411230] ; jmp rcx
0x0000000000402cc6 : mov ecx, dword ptr [rax*8 + 0x411288] ; jmp rcx
0x0000000000406b41 : mov ecx, dword ptr [rax*8 + 0x4112b8] ; jmp rcx
0x0000000000409082 : mov ecx, dword ptr [rax*8 + 0x4121f0] ; jmp rcx
0x00000000004093a6 : mov ecx, dword ptr [rax*8 + 0x412238] ; jmp rcx
0x000000000040bb9e : mov ecx, dword ptr [rax*8 + 0x4126f0] ; jmp rcx
0x000000000040ce4e : mov ecx, dword ptr [rax*8 + 0x412a60] ; jmp rcx
0x000000000040cdce : mov ecx, dword ptr [rax*8 + 0x412ac0] ; jmp rcx
0x0000000000408cf1 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000407168 : mov ecx, eax ; mov eax, ecx ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401df5 : mov edi, 0x614e20 ; mov rbp, rsp ; call rax
0x0000000000401d72 : mov edi, 0x615338 ; jmp rax
0x0000000000401db2 : mov edi, 0x615338 ; jmp rdx
0x000000000040e158 : mov edi, dword ptr [rsi] ; add rdi, rax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x00000000004110d7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x00000000004110d6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000401dd5 : mov esi, 0x1002135 ; ret
0x0000000000401db0 : mov esi, eax ; mov edi, 0x615338 ; jmp rdx
0x0000000000404df6 : mov esp, 0x81006156 ; ret 0xa6d4
0x000000000040f567 : mov esp, ebp ; pop rbp ; ret
0x0000000000407a4c : mov qword ptr [0x615a88], rdi ; pop rbp ; ret
0x0000000000408eed : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403776 : mov qword ptr [rcx + 8], rax ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040fb5b : mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x000000000040e15d : mov qword ptr [rsi], rdi ; pop rbp ; ret
0x00000000004055d4 : mov r8, qword ptr [rbp - 0xd8] ; call 0x401859
0x00000000004078e9 : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040c4aa : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407cc2 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000408ca4 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000407c1e : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040c7a2 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000408c5c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000407ea3 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040c98d : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000408fbe : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040ab68 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040c58c : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407a33 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000407981 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004076d5 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000411077 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000401dfa : mov rbp, rsp ; call rax
0x0000000000401d60 : mov rbp, rsp ; ja 0x401d6d ; pop rbp ; ret
0x00000000004022fc : mov rcx, qword ptr [rax*8 + 0x411160] ; jmp rcx
0x0000000000402288 : mov rcx, qword ptr [rax*8 + 0x4111d8] ; jmp rcx
0x0000000000402ceb : mov rcx, qword ptr [rax*8 + 0x411230] ; jmp rcx
0x0000000000402cc5 : mov rcx, qword ptr [rax*8 + 0x411288] ; jmp rcx
0x0000000000406b40 : mov rcx, qword ptr [rax*8 + 0x4112b8] ; jmp rcx
0x0000000000409081 : mov rcx, qword ptr [rax*8 + 0x4121f0] ; jmp rcx
0x00000000004093a5 : mov rcx, qword ptr [rax*8 + 0x412238] ; jmp rcx
0x000000000040bb9d : mov rcx, qword ptr [rax*8 + 0x4126f0] ; jmp rcx
0x000000000040ce4d : mov rcx, qword ptr [rax*8 + 0x412a60] ; jmp rcx
0x000000000040cdcd : mov rcx, qword ptr [rax*8 + 0x412ac0] ; jmp rcx
0x0000000000401daf : mov rsi, rax ; mov edi, 0x615338 ; jmp rdx
0x000000000040f566 : mov rsp, rbp ; pop rbp ; ret
0x0000000000407fc6 : mov word ptr [rax + rax], dr1 ; add byte ptr [rax - 0x73], cl ; xor al, 0x25 ; ret 0x4121
0x000000000040d1b0 : movabs dword ptr [0x941c90941f0213f], eax ; ret 0x3145
0x0000000000406a90 : movsb byte ptr [rdi], byte ptr [rsi] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000407f17 : movzx eax, al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040f563 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004106cb : movzx eax, al ; pop rbp ; ret
0x000000000040709a : movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x00000000004065ac : nop ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004110f8 : nop dword ptr [rax + rax] ; ret
0x000000000040970d : or al, 0x18 ; ret 0x6451
0x0000000000403d97 : or al, 0x25 ; mov eax, 0x89006156 ; ret 0xca29
0x000000000040df43 : or al, 0x25 ; or ch, byte ptr [rcx + rax*2] ; add al, ch ; ret 0xff3a
0x0000000000409083 : or al, 0xffffffffffffffc5 ; lock and dword ptr [rcx], eax ; jmp rcx
0x000000000040fb2d : or al, 1 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000413568 : or byte ptr [rax - 1], al ; call qword ptr [rax]
0x00000000004034ea : or byte ptr [rcx + 0xaf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5588
0x000000000040df45 : or ch, byte ptr [rcx + rax*2] ; add al, ch ; ret 0xff3a
0x0000000000412e89 : or eax, dword ptr [rax] ; add byte ptr [rax], ah ; ja 0x412e94 ; call rax
0x000000000040b441 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040ad51 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000413201 : out -2, al ; call qword ptr [rax]
0x0000000000411c04 : outsb dx, byte ptr [rsi] ; ret
0x00000000004052df : outsd dx, dword ptr [rsi] ; bsf eax, dword ptr [rcx - 0xe] ; jmp qword ptr [rcx]
0x0000000000402d63 : outsd dx, dword ptr [rsi] ; mov eax, dword ptr [rcx - 0xe] ; jmp qword ptr [rcx]
0x00000000004110ec : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040a5f1 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004110ee : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040a5f3 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004110f0 : pop r14 ; pop r15 ; ret
0x000000000040a3a3 : pop r14 ; pop rbp ; ret
0x000000000040a5f5 : pop r15 ; pop rbp ; ret
0x00000000004110f2 : pop r15 ; ret
0x0000000000401dd2 : pop rbp ; mov byte ptr [rip + 0x2135be], 1 ; ret
0x0000000000401d71 : pop rbp ; mov edi, 0x615338 ; jmp rax
0x0000000000401dae : pop rbp ; mov rsi, rax ; mov edi, 0x615338 ; jmp rdx
0x00000000004110eb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004110ef : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401d65 : pop rbp ; ret
0x000000000040a5f0 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040c05d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040a3a2 : pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004033bd : pop rbx ; pop rbp ; ret
0x000000000040c1e1 : pop rbx ; ret
0x000000000040a5f6 : pop rdi ; pop rbp ; ret
0x00000000004110f3 : pop rdi ; ret
0x000000000040a5f4 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004110f1 : pop rsi ; pop r15 ; ret
0x000000000040a3a4 : pop rsi ; pop rbp ; ret
0x00000000004110ed : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040a5f2 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000404d8e : popfq ; mov ds, edx ; xor eax, dword ptr [rcx - 0xe] ; jmp qword ptr [rcx]
0x0000000000412e87 : push qword ptr [rax + 0x2000000b] ; ja 0x412e96 ; call rax
0x00000000004076dc : push rax ; pop rbp ; ret
0x000000000040eb23 : push rbp ; call 0x36c75
0x000000000040f6f3 : push rbp ; enter -0x76b8, 0xc ; ret 0x59e9
0x000000000040810a : push rbp ; fmul dword ptr [rax + 0x29] ; ret 0x148
0x0000000000401df4 : push rbp ; mov edi, 0x614e20 ; mov rbp, rsp ; call rax
0x0000000000407745 : push rbp ; ror byte ptr [rax - 0x77], 1 ; ret 0x61e8
0x00000000004002f8 : ret
0x0000000000404878 : ret 0
0x000000000040fbf5 : ret 0x10
0x0000000000403b5a : ret 0x148
0x000000000040460d : ret 0x1489
0x000000000040e205 : ret 0x18
0x000000000040a78e : ret 0x1b2
0x0000000000401c82 : ret 0x2135
0x0000000000401a82 : ret 0x2136
0x0000000000401882 : ret 0x2137
0x000000000040fda6 : ret 0x24e8
0x0000000000402b54 : ret 0x26cd
0x0000000000404e39 : ret 0x27a2
0x0000000000403f85 : ret 0x2948
0x0000000000409b19 : ret 0x294c
0x0000000000409b35 : ret 0x294d
0x000000000040d1b9 : ret 0x3145
0x0000000000410299 : ret 0x31e8
0x0000000000407374 : ret 0x3678
0x000000000040b29c : ret 0x3948
0x0000000000404459 : ret 0x4033
0x0000000000407fcf : ret 0x4121
0x000000000040efda : ret 0x4a3b
0x000000000040ff76 : ret 0x54e8
0x00000000004034f3 : ret 0x5588
0x00000000004044d1 : ret 0x5589
0x00000000004039a1 : ret 0x58de
0x000000000040f6f8 : ret 0x59e9
0x000000000040b9cf : ret 0x5be8
0x000000000040b6cc : ret 0x5ee8
0x0000000000407749 : ret 0x61e8
0x000000000040970f : ret 0x6451
0x000000000040f9e6 : ret 0x74e8
0x000000000040cfd9 : ret 0x8141
0x000000000040459a : ret 0x8148
0x0000000000403aa7 : ret 0x816d
0x0000000000408416 : ret 0x840
0x0000000000409db3 : ret 0x8840
0x000000000040bb59 : ret 0x8844
0x000000000040360c : ret 0x8948
0x0000000000409b38 : ret 0x8949
0x0000000000409ccc : ret 0x89a5
0x00000000004039d5 : ret 0x8b44
0x0000000000409b1c : ret 0x8b48
0x0000000000403a9f : ret 0x96d
0x0000000000402e1b : ret 0xa
0x0000000000404dfb : ret 0xa6d4
0x00000000004039a9 : ret 0xa722
0x0000000000407079 : ret 0xb0
0x000000000040540f : ret 0xb848
0x000000000040dd89 : ret 0xb849
0x00000000004048f5 : ret 0xbe0f
0x000000000040dfa0 : ret 0xc
0x000000000040d019 : ret 0xc131
0x0000000000401d95 : ret 0xc148
0x0000000000402e13 : ret 0xc281
0x00000000004082ac : ret 0xc2f6
0x0000000000409534 : ret 0xca21
0x00000000004027eb : ret 0xca29
0x0000000000406c5a : ret 0xd284
0x000000000040d095 : ret 0xd709
0x0000000000409b4d : ret 0xde8
0x0000000000405cce : ret 0xea81
0x000000000040a3dc : ret 0xee8
0x000000000040841d : ret 0xf01
0x0000000000409dc8 : ret 0xf180
0x000000000040829f : ret 0xf280
0x00000000004095ae : ret 0xf281
0x000000000040df4a : ret 0xff3a
0x000000000040c87a : ret 0xff4f
0x0000000000407e9a : ret 0xff99
0x000000000040777a : ret 0xffa4
0x0000000000401eea : ret 0xfffa
0x00000000004055dd : ret 0xffff
0x0000000000402b5a : ret 1
0x0000000000400718 : ret 2
0x00000000004062da : ret 7
0x0000000000408e36 : rol byte ptr [rcx + rcx*4], 1 ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004057e7 : rol dword ptr [rcx - 0xe], cl ; jmp qword ptr [rcx]
0x000000000040f6ef : ror byte ptr [r8 - 0x75], 0x55 ; enter -0x76b8, 0xc ; ret 0x59e9
0x000000000040c1c0 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000408fc0 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x40902b ; ret
0x0000000000401d9c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401dab ; pop rbp ; ret
0x000000000040f6f0 : ror byte ptr [rax - 0x75], 0x55 ; enter -0x76b8, 0xc ; ret 0x59e9
0x000000000040f565 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x000000000040c1c1 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000409b0d : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000409b16 : ror byte ptr [rax - 0x77], 1 ; ret 0x294c
0x0000000000407746 : ror byte ptr [rax - 0x77], 1 ; ret 0x61e8
0x0000000000408fc1 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x40902a ; ret
0x00000000004087b3 : ror byte ptr [rax - 0x7f], -0x3c ; jo 0x4087c3 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041065f : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000407169 : ror dword ptr [rcx - 0x3b7cb738], 0x30 ; pop rbp ; ret
0x0000000000401d9e : sar eax, 1 ; jne 0x401da9 ; pop rbp ; ret
0x0000000000401d9d : sar rax, 1 ; jne 0x401daa ; pop rbp ; ret
0x00000000004033bc : sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000004062d5 : sbb byte ptr [rdi + 0x61], dl ; add al, ch ; ret 7
0x0000000000410f68 : setne al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000410f6a : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004106c8 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000402d61 : sub al, 0x17 ; outsd dx, dword ptr [rsi] ; mov eax, dword ptr [rcx - 0xe] ; jmp qword ptr [rcx]
0x000000000040df46 : sub al, 0x41 ; add al, ch ; ret 0xff3a
0x000000000041390c : sub al, 7 ; add byte ptr [rax], al ; adc byte ptr [rsi - 1], ch ; jmp rdx
0x000000000040cdd2 : sub al, byte ptr [rcx] ; jmp rcx
0x000000000040c1df : sub dword ptr [rdx], 0x5b ; ret
0x0000000000402e18 : sub edx, dword ptr [rcx + rax*4] ; ret 0xa
0x0000000000411141 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000411140 : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000402cea : test al, 0x48 ; mov ecx, dword ptr [rax*8 + 0x411230] ; jmp rcx
0x00000000004110fa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000413564 : test byte ptr [rbx], al ; add byte ptr [rax], al ; or byte ptr [rax - 1], al ; call qword ptr [rax]
0x0000000000402cc8 : vmovlps xmm0, xmm14, qword ptr [rcx] ; jmp rcx
0x0000000000406b43 : vmovlps xmm0, xmm8, qword ptr [rcx] ; jmp rcx
0x0000000000402cee : vmovlps xmm8, xmm9, qword ptr [rcx] ; jmp rcx
0x00000000004034f2 : xchg eax, ebp ; ret 0x5588
0x0000000000409db2 : xchg eax, ebp ; ret 0x8840
0x0000000000410e36 : xchg eax, ebp ; ret 0xd284
0x0000000000410f69 : xchg eax, ebp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000404a42 : xchg eax, ecx ; ret
0x0000000000406c59 : xchg eax, esp ; ret 0xd284
0x00000000004065ab : xchg eax, r8d ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000404df4 : xor al, 0x25 ; mov esp, 0x81006156 ; ret 0xa6d4
0x0000000000407fcd : xor al, 0x25 ; ret 0x4121
0x00000000004062d3 : xor al, 0x25 ; sbb byte ptr [rdi + 0x61], dl ; add al, ch ; ret 7
0x0000000000412e5c : xor byte ptr [rax - 1], ah ; call qword ptr [rax]
0x0000000000405eab : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040aae7 : xor eax, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x0000000000401dd6 : xor eax, 0xf3010021 ; ret
0x0000000000404d91 : xor eax, dword ptr [rcx - 0xe] ; jmp qword ptr [rcx]
0x0000000000408e35 : xor eax, edx ; mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000413449 : xor edi, edi ; call rdi
