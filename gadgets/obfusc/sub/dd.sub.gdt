0x0000000000403174 : adc al, 0x25 ; ret 0x410e
0x000000000041263d : adc al, byte ptr [rax] ; add ah, al ; mov dl, -1 ; call rsp
0x0000000000405059 : adc al, byte ptr [rcx - 0xa] ; jmp qword ptr [rcx]
0x0000000000407b88 : adc byte ptr [r14], r13b ; or dword ptr [rax + 1], ecx ; ret 0x8948
0x0000000000413825 : adc byte ptr [rax], al ; add al, ch ; mov al, -1 ; call qword ptr [rax]
0x0000000000407571 : adc byte ptr [rsi + 0x61], al ; add byte ptr [rax - 0x46], cl ; ret
0x0000000000407b89 : adc byte ptr [rsi], ch ; or dword ptr [rax + 1], ecx ; ret 0x8948
0x00000000004090d9 : adc dword ptr [rcx - 0xa], eax ; jmp qword ptr [rcx]
0x00000000004090d8 : adc dword ptr cs:[rcx - 0xa], eax ; jmp qword ptr [rcx]
0x000000000040c299 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041263f : add ah, al ; mov dl, -1 ; call rsp
0x0000000000412347 : add ah, dh ; cmp bh, bh ; jmp rsp
0x000000000040f239 : add al, 0 ; add byte ptr [rax - 0x73], cl ; xor al, 0x25 ; call qword ptr [rsi]
0x000000000040e0ed : add al, 0x21 ; ret 0xd709
0x0000000000408039 : add al, 0x25 ; or byte ptr [rsi + 0x61], al ; add byte ptr [rcx], al ; pop rbp ; ret
0x0000000000412df4 : add al, 6 ; add byte ptr [rax], al ; cmp byte ptr [rcx - 1], bl ; call qword ptr [rsi]
0x000000000041317f : add al, ah ; jns 0x413186 ; call rdi
0x0000000000412a37 : add al, bh ; cmp bh, bh ; call rbx
0x0000000000412997 : add al, bh ; xor edi, edi ; jmp qword ptr [rdx]
0x0000000000412a35 : add al, byte ptr [rax] ; add al, bh ; cmp bh, bh ; call rbx
0x0000000000406f60 : add al, byte ptr [rax] ; add byte ptr [rax - 0x73], cl ; or al, 0x25 ; ret
0x0000000000413827 : add al, ch ; mov al, -1 ; call qword ptr [rax]
0x00000000004084f7 : add al, ch ; ret
0x0000000000407d88 : add al, ch ; ret 0xff9b
0x0000000000402e78 : add al, ch ; ret 0xffe9
0x000000000040fcbf : add bl, dh ; ret
0x0000000000403170 : add byte ptr [r8 - 0x73], cl ; adc al, 0x25 ; ret 0x410e
0x0000000000405fe4 : add byte ptr [r8 - 0x77], cl ; ret 0x72e8
0x0000000000405f4f : add byte ptr [r8 - 0x77], cl ; ret 0x7e8
0x00000000004084d4 : add byte ptr [r8 - 0x77], cl ; ret 0x82e8
0x00000000004056e3 : add byte ptr [rax + 0x29], cl ; ret 0x2948
0x00000000004064ab : add byte ptr [rax + 0x39], cl ; ret 0x8f0f
0x00000000004099d8 : add byte ptr [rax + 1], cl ; ret 0x8948
0x00000000004123c7 : add byte ptr [rax + rbx*2 - 1], dh ; jmp rsp
0x0000000000413823 : add byte ptr [rax + rdx], dh ; add byte ptr [rax], al ; call 0x114137e5
0x0000000000404bdd : add byte ptr [rax - 0x41], cl ; sal byte ptr [rdi], -0x24 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xcdab
0x0000000000407574 : add byte ptr [rax - 0x46], cl ; ret
0x0000000000403485 : add byte ptr [rax - 0x48], cl ; jne 0x40345d ; or al, 0xffffffffffffffbb ; ret 0x6bd6
0x0000000000403171 : add byte ptr [rax - 0x73], cl ; adc al, 0x25 ; ret 0x410e
0x000000000040424e : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x410f
0x0000000000406f62 : add byte ptr [rax - 0x73], cl ; or al, 0x25 ; ret
0x000000000040f23b : add byte ptr [rax - 0x73], cl ; xor al, 0x25 ; call qword ptr [rsi]
0x0000000000402167 : add byte ptr [rax - 0x73], cl ; xor al, 0x25 ; ret
0x0000000000407727 : add byte ptr [rax - 0x75], cl ; call 0x4903007f
0x0000000000407af6 : add byte ptr [rax - 0x75], cl ; push rbp ; ror byte ptr [rax + 0x29], 1 ; ret 0x2948
0x000000000040d2dd : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000040515e : add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000405fe5 : add byte ptr [rax - 0x77], cl ; ret 0x72e8
0x0000000000405f50 : add byte ptr [rax - 0x77], cl ; ret 0x7e8
0x00000000004084d5 : add byte ptr [rax - 0x77], cl ; ret 0x82e8
0x000000000040409c : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x0000000000412df2 : add byte ptr [rax], al ; add al, 6 ; add byte ptr [rax], al ; cmp byte ptr [rcx - 1], bl ; call qword ptr [rsi]
0x0000000000402e76 : add byte ptr [rax], al ; add al, ch ; ret 0xffe9
0x000000000040fcbd : add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004064a9 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x8f0f
0x00000000004099d6 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000407589 : add byte ptr [rax], al ; add byte ptr [rax - 0x46], cl ; ret
0x0000000000403483 : add byte ptr [rax], al ; add byte ptr [rax - 0x48], cl ; jne 0x40345f ; or al, 0xffffffffffffffbb ; ret 0x6bd6
0x000000000040424c : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x410f
0x0000000000402165 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; xor al, 0x25 ; ret
0x0000000000407725 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; call 0x49030081
0x000000000040409a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000040fcbb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004064a7 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x8f0f
0x00000000004064a5 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x8f0f
0x000000000040455c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407c67 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040e179 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000402e7f : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040fcbc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004118fc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x40b3
0x0000000000402458 : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], al ; ret
0x000000000040434b : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040e112 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000403cac : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x00000000004025f3 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000402c75 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000405d71 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000040634f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040f38c : add byte ptr [rax], al ; add cl, ch ; ret 2
0x0000000000412a32 : add byte ptr [rax], al ; add r8b, byte ptr [rax] ; add al, bh ; cmp bh, bh ; call rbx
0x0000000000407e73 : add byte ptr [rax], al ; add rsi, rax ; mov rax, rsi ; pop rbp ; ret
0x000000000040455e : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407c69 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004017a3 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000413826 : add byte ptr [rax], al ; call 0x114137e2
0x00000000004134a6 : add byte ptr [rax], al ; call 0x23413447
0x0000000000413a66 : add byte ptr [rax], al ; call 0xffffffffe3413a30
0x0000000000412a36 : add byte ptr [rax], al ; clc ; cmp bh, bh ; call rbx
0x0000000000412996 : add byte ptr [rax], al ; clc ; xor edi, edi ; jmp qword ptr [rdx]
0x0000000000412df6 : add byte ptr [rax], al ; cmp byte ptr [rcx - 1], bl ; call qword ptr [rsi]
0x0000000000412346 : add byte ptr [rax], al ; hlt ; cmp bh, bh ; jmp rsp
0x0000000000413a62 : add byte ptr [rax], al ; je 0x413a81 ; add byte ptr [rax], al ; call 0xffffffffe3413a34
0x00000000004018d9 : add byte ptr [rax], al ; jmp 0x4017b9
0x00000000004134a2 : add byte ptr [rax], al ; mov ah, 0xc ; add byte ptr [rax], al ; call 0x2341344b
0x0000000000412d96 : add byte ptr [rax], al ; mov byte ptr [rax - 1], bl ; jmp qword ptr [rbx]
0x000000000040e17b : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004074da : add byte ptr [rax], al ; mov qword ptr [rbp - 0x18], rax ; pop rbp ; ret
0x000000000040a832 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000412992 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], eax ; add al, bh ; xor edi, edi ; jmp qword ptr [rdx]
0x0000000000402e3a : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040434c : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040bf30 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000405ae4 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040fcbe : add byte ptr [rax], al ; ret
0x00000000004118fe : add byte ptr [rax], al ; ret 0x40b3
0x0000000000412406 : add byte ptr [rax], al ; test byte ptr [rbp - 1], bl ; jmp rsp
0x0000000000412446 : add byte ptr [rax], al ; test byte ptr [rbx - 1], ah ; jmp rsp
0x0000000000412486 : add byte ptr [rax], al ; test byte ptr [rdi - 1], ah ; jmp rsp
0x0000000000413822 : add byte ptr [rax], al ; xor al, 0x10 ; add byte ptr [rax], al ; call 0x114137e6
0x000000000040245a : add byte ptr [rbp - 0x77], al ; ret
0x000000000040434d : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040bf31 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000409d96 : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405ae5 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000041257f : add byte ptr [rbx - 1], dh ; call rsp
0x0000000000403cae : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x000000000040fb5c : add byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x00000000004072d4 : add byte ptr [rcx], al ; pop rbp ; ret
0x0000000000401d68 : add byte ptr [rcx], al ; ret
0x000000000040f388 : add byte ptr [rdi], cl ; lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x00000000004025f5 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000402c77 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000405d73 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000406351 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000412a33 : add byte ptr [rdx + rax], al ; add al, bh ; cmp bh, bh ; call rbx
0x0000000000412df3 : add byte ptr [rsi + rax], al ; add byte ptr [rax], al ; cmp byte ptr [rcx - 1], bl ; call qword ptr [rsi]
0x000000000040f38e : add cl, ch ; ret 2
0x00000000004032d4 : add dword ptr [rax - 0x77], ecx ; ret 0x8148
0x0000000000412995 : add dword ptr [rax], eax ; add al, bh ; xor edi, edi ; jmp qword ptr [rdx]
0x000000000040c25f : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004074d8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rbp - 0x18], rax ; pop rbp ; ret
0x000000000040d17a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040bf2f : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000405ae3 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040fa1d : add dword ptr [rax], ecx ; ret 0x840
0x00000000004053fe : add dword ptr [rcx - 0xf], eax ; jmp qword ptr [rcx]
0x000000000040856f : add dword ptr [rdi], ecx ; mov dh, -0x3e ; pop rbp ; ret
0x0000000000407f0d : add dword ptr [rdi], ecx ; mov dh, -0x3f ; pop rbp ; ret
0x0000000000408073 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405d81 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040727f : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000407fcd : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004053fd : add dword ptr cs:[rcx - 0xf], eax ; jmp qword ptr [rcx]
0x0000000000401d64 : add eax, 0x212616 ; add ebx, esi ; ret
0x000000000040f38b : add eax, 0xe9000000 ; ret 2
0x0000000000401d2b : add eax, edx ; sar rax, 1 ; jne 0x401d3c ; pop rbp ; ret
0x0000000000401d69 : add ebx, esi ; ret
0x0000000000407e76 : add esi, eax ; mov rax, rsi ; pop rbp ; ret
0x000000000040210b : add esp, 0x10 ; pop rbp ; ret
0x000000000040f6bc : add esp, 0x130 ; pop rbp ; ret
0x0000000000406962 : add esp, 0x160 ; pop rbp ; ret
0x000000000040d4ac : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000405ae0 : add esp, 0x1b8 ; pop rbx ; pop rbp ; ret
0x000000000040a624 : add esp, 0x1c0 ; pop rbp ; ret
0x000000000040e6ee : add esp, 0x1e0 ; pop rbp ; ret
0x0000000000405e6f : add esp, 0x20 ; pop rbp ; ret
0x00000000004021ed : add esp, 0x30 ; pop rbp ; ret
0x00000000004061a2 : add esp, 0x320 ; pop rbp ; ret
0x0000000000407284 : add esp, 0x40 ; pop rbp ; ret
0x0000000000406ca0 : add esp, 0x50 ; pop rbp ; ret
0x000000000040ab53 : add esp, 0x70 ; pop rbp ; ret
0x000000000040a005 : add esp, 0x90 ; pop rbp ; ret
0x00000000004062b0 : add esp, 0xa0 ; pop rbp ; ret
0x00000000004047fa : add esp, 0xc0 ; pop rbp ; ret
0x0000000000402e36 : add esp, 0xd0 ; pop rbp ; ret
0x000000000040e10f : add esp, 0xd8 ; pop rbx ; pop rbp ; ret
0x00000000004017a6 : add esp, 8 ; ret
0x0000000000407d87 : add r8b, bpl ; ret 0xff9b
0x0000000000412a34 : add r8b, byte ptr [rax] ; add al, bh ; cmp bh, bh ; call rbx
0x0000000000401d2a : add rax, rdx ; sar rax, 1 ; jne 0x401d3d ; pop rbp ; ret
0x0000000000407e75 : add rsi, rax ; mov rax, rsi ; pop rbp ; ret
0x000000000040210a : add rsp, 0x10 ; pop rbp ; ret
0x000000000040f6bb : add rsp, 0x130 ; pop rbp ; ret
0x0000000000406961 : add rsp, 0x160 ; pop rbp ; ret
0x000000000040d4ab : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000405adf : add rsp, 0x1b8 ; pop rbx ; pop rbp ; ret
0x000000000040a623 : add rsp, 0x1c0 ; pop rbp ; ret
0x000000000040e6ed : add rsp, 0x1e0 ; pop rbp ; ret
0x0000000000405e6e : add rsp, 0x20 ; pop rbp ; ret
0x00000000004021ec : add rsp, 0x30 ; pop rbp ; ret
0x00000000004061a1 : add rsp, 0x320 ; pop rbp ; ret
0x0000000000407283 : add rsp, 0x40 ; pop rbp ; ret
0x0000000000406c9f : add rsp, 0x50 ; pop rbp ; ret
0x000000000040ab52 : add rsp, 0x70 ; pop rbp ; ret
0x000000000040a004 : add rsp, 0x90 ; pop rbp ; ret
0x00000000004062af : add rsp, 0xa0 ; pop rbp ; ret
0x00000000004047f9 : add rsp, 0xc0 ; pop rbp ; ret
0x0000000000402e35 : add rsp, 0xd0 ; pop rbp ; ret
0x000000000040e10e : add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x00000000004017a5 : add rsp, 8 ; ret
0x0000000000402804 : and al, 0x21 ; ret 0x941
0x0000000000407fcc : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004061a4 : and byte ptr [rbx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004029e3 : and byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x000000000040deae : and byte ptr [rcx], al ; jmp rcx
0x0000000000407f0b : and cl, 1 ; movzx eax, cl ; pop rbp ; ret
0x000000000040856d : and dl, 1 ; movzx eax, dl ; pop rbp ; ret
0x0000000000401d67 : and dword ptr [rax], eax ; add ebx, esi ; ret
0x000000000040de2e : and dword ptr [rcx], eax ; jmp rcx
0x0000000000401d66 : and dword ptr es:[rax], eax ; add ebx, esi ; ret
0x0000000000404db6 : and eax, 0x6144f0 ; call rax
0x000000000040865c : and eax, 0x6144fc ; pop rbp ; ret
0x000000000040863c : and eax, 0x614500 ; pop rbp ; ret
0x0000000000404dde : and eax, 0x6145e0 ; call rax
0x000000000040873f : and eax, 0x6148d8 ; pop rbp ; ret
0x0000000000408763 : and eax, 0x6148e0 ; pop rbp ; ret
0x0000000000413828 : call 0x114137e0
0x00000000004134a8 : call 0x23413445
0x000000000040574a : call 0x401952
0x000000000040f358 : call 0x401b59
0x00000000004058fe : call 0x401bc2
0x00000000004044cc : call 0x403658
0x00000000004044cb : call 0x403659
0x0000000000404640 : call 0x4037ce
0x000000000040463f : call 0x4037cf
0x000000000040772b : call 0x4903007b
0x000000000040772a : call 0x4903007c
0x0000000000413a68 : call 0xffffffffe3413a2e
0x000000000040bf69 : call 0xffffffffe90348b9
0x000000000040bf68 : call 0xffffffffe90348ba
0x000000000040fc99 : call qword ptr [r12 + rbx*8]
0x0000000000408e13 : call qword ptr [rax]
0x0000000000412dbb : call qword ptr [rbx]
0x000000000040f240 : call qword ptr [rsi]
0x000000000040fc9a : call qword ptr [rsp + rbx*8]
0x0000000000401d8d : call rax
0x000000000040bcbc : call rbx
0x0000000000405e95 : call rcx
0x0000000000413183 : call rdi
0x0000000000412583 : call rsp
0x0000000000408b0e : cdq ; mov rdi, qword ptr [rbp - 0x10] ; idiv rdi ; pop rbp ; ret
0x000000000040904b : cdq ; ret 0xb60f
0x000000000040f6ba : clc ; add rsp, 0x130 ; pop rbp ; ret
0x0000000000406960 : clc ; add rsp, 0x160 ; pop rbp ; ret
0x000000000040d6af : clc ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004083c5 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004082e1 : clc ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040ea78 : clc ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000412a38 : clc ; cmp bh, bh ; call rbx
0x0000000000401d2f : clc ; jne 0x401d38 ; pop rbp ; ret
0x0000000000407c86 : clc ; mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x000000000040aa05 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040fbdf : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040fbe2 : clc ; pop rbp ; ret
0x0000000000412998 : clc ; xor edi, edi ; jmp qword ptr [rdx]
0x000000000040e178 : cld ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040e756 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040871b : cld ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000408a48 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040a3c7 : cld ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000408659 : cld ; mov dword ptr [0x6144fc], edi ; pop rbp ; ret
0x000000000040fbdc : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040e753 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040e2d6 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000408a45 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040e17f : cld ; pop rbp ; ret
0x000000000040a3f8 : cmove ecx, edx ; movsxd rax, ecx ; pop rbp ; ret
0x00000000004033ab : cmp ah, dh ; ret
0x0000000000407d83 : cmp al, 0x25 ; out 0xc, al ; add r8b, bpl ; ret 0xff9b
0x0000000000404251 : cmp al, 0x25 ; ret 0x410f
0x0000000000404d37 : cmp al, byte ptr [rcx - 0xa] ; jmp qword ptr [rcx]
0x0000000000412a39 : cmp bh, bh ; call rbx
0x0000000000412349 : cmp bh, bh ; jmp rsp
0x0000000000404cac : cmp byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x0000000000412df8 : cmp byte ptr [rcx - 1], bl ; call qword ptr [rsi]
0x000000000040e5d9 : cmp dword ptr [rdx - 0x76be63d5], ebx ; ret
0x0000000000407039 : cmp eax, 0x894596ca ; ret 0x8141
0x000000000040dc36 : cmp eax, 0x8945c621 ; ret 0x8141
0x0000000000401ced : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401d00 ; pop rbp ; ret
0x00000000004053fb : cmpsb byte ptr [rsi], byte ptr [rdi] ; mov ch, 0x2e ; add dword ptr [rcx - 0xf], eax ; jmp qword ptr [rcx]
0x0000000000404be3 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xcdab
0x000000000040ccbc : cwde ; mov rcx, qword ptr [rax*8 + 0x411d78] ; jmp rcx
0x000000000040743f : dec dword ptr [rax + 0x29] ; ret 0x8948
0x0000000000403347 : dec dword ptr [rax + 0x39] ; ror dword ptr [rdi], -0x6a ; ret 0x5588
0x00000000004034fe : dec dword ptr [rax + 0x39] ; ror dword ptr [rdi], -0x6a ; ret 0x9588
0x0000000000408f64 : dec dword ptr [rax + 0x69] ; ret 0xa
0x000000000040f35c : dec dword ptr [rax - 0x73] ; xor al, 0x25 ; ret 0x4122
0x000000000040dea8 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; lock and byte ptr [rcx], al ; jmp rcx
0x000000000040de28 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; push rax ; and dword ptr [rcx], eax ; jmp rcx
0x000000000040f3f4 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x00000000004073ea : dec dword ptr [rax - 0x77] ; ret 0x8148
0x00000000004067ad : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000404a4d : dec dword ptr [rax - 0x77] ; ret 0x9ae8
0x00000000004069eb : dec dword ptr [rcx + 0x21ca31c2] ; ret 0xb0
0x000000000040b6c2 : dec dword ptr [rcx - 0x77] ; ret 0x294d
0x0000000000409049 : dec dword ptr [rdi] ; cdq ; ret 0xb60f
0x0000000000405d66 : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd284
0x0000000000409005 : dec dword ptr [rdi] ; xchg eax, edx ; ret 0xe280
0x000000000040ba50 : enter 0x4b05, 0x34 ; fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x00000000004099d2 : enter 0x548, 0 ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8948
0x00000000004084f5 : enter 0xb0, -0x18 ; ret
0x000000000040e111 : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000409eb5 : faddp st(1) ; fstp xword ptr [rbp - 0x20] ; fld xword ptr [rbp - 0x20] ; pop rbp ; ret
0x000000000040ba54 : fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x00000000004033bc : fiadd word ptr [rcx - 0x7f] ; out 0x50, al ; cmp ah, dh ; ret
0x0000000000402784 : ficom word ptr [rcx + rbp*8 + 0x21] ; ret 0x941
0x00000000004050e8 : fild word ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000409eba : fld xword ptr [rbp - 0x20] ; pop rbp ; ret
0x000000000040fc9c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000409eb7 : fstp xword ptr [rbp - 0x20] ; fld xword ptr [rbp - 0x20] ; pop rbp ; ret
0x0000000000402109 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000412348 : hlt ; cmp bh, bh ; jmp rsp
0x0000000000401d00 : hlt ; pop rbp ; mov edi, 0x614330 ; jmp rax
0x0000000000408bf4 : idiv edi ; mov rax, rdx ; pop rbp ; ret
0x0000000000408b14 : idiv edi ; pop rbp ; ret
0x0000000000408bf3 : idiv rdi ; mov rax, rdx ; pop rbp ; ret
0x0000000000408b13 : idiv rdi ; pop rbp ; ret
0x00000000004090d7 : imul byte ptr [rsi] ; adc dword ptr [rcx - 0xa], eax ; jmp qword ptr [rcx]
0x00000000004041f4 : imul esp, dword ptr [rdx - 0xe7f], -1 ; jmp qword ptr [rcx]
0x0000000000408ccc : in al, 0x48 ; add esp, 0x20 ; pop rbp ; ret
0x00000000004081e3 : in al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040e1ea : in al, dx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040e04a : in eax, -0x4a ; loope 0x40e073 ; ret 0x8941
0x0000000000408565 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000040339d : inc dword ptr [rbp - 0x77] ; ret
0x0000000000403c82 : inc dword ptr [rbp - 0x77] ; ret 0x8141
0x00000000004033a7 : inc dword ptr [rcx - 0x19c5af0f] ; ret
0x00000000004033d9 : inc dword ptr [rcx - 0x19c5af37] ; ret
0x0000000000403001 : inc dword ptr [rcx - 0x77] ; ret 0x8141
0x000000000040bcdb : inc dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000405e8f : inc edi ; test dword ptr [rbp + rdi*8 - 1], ebp ; call rcx
0x00000000004123c3 : inc esp ; or byte ptr [rax], al ; add byte ptr [rax + rbx*2 - 1], dh ; jmp rsp
0x0000000000409ebb : insd dword ptr [rdi], dx ; loopne 0x409f1e ; ret
0x000000000040d2e5 : int 0x80
0x00000000004033a9 : int1 ; push rax ; cmp ah, dh ; ret
0x0000000000405453 : int1 ; test byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x0000000000401cf3 : ja 0x401cfa ; pop rbp ; ret
0x0000000000402756 : jb 0x40273c ; push rsp ; jmp 0x4202b0a5
0x0000000000402783 : jb 0x402768 ; push rsp ; jmp 0x981e9b1
0x00000000004090d6 : jbe 0x4090d7 ; adc dword ptr cs:[rcx - 0xa], eax ; jmp qword ptr [rcx]
0x0000000000401cff : je 0x401cfd ; pop rbp ; mov edi, 0x614330 ; jmp rax
0x0000000000413a64 : je 0x413a7f ; add byte ptr [rax], al ; call 0xffffffffe3413a32
0x0000000000408b11 : jge 0x408b09 ; idiv rdi ; pop rbp ; ret
0x0000000000408bf1 : jge 0x408bec ; idiv rdi ; mov rax, rdx ; pop rbp ; ret
0x0000000000409eb8 : jge 0x409ea0 ; fld xword ptr [rbp - 0x20] ; pop rbp ; ret
0x00000000004112c0 : jl 0x411285 ; ret 0xc4c3
0x00000000004113c0 : jl 0x411385 ; ret 0xc4c3
0x00000000004112bd : jle 0x411332 ; outsd dx, dword ptr [rsi] ; jl 0x411288 ; ret 0xc4c3
0x00000000004112bc : jle 0x411333 ; outsd dx, dword ptr [rsi] ; jl 0x411289 ; ret 0xc4c3
0x00000000004113bd : jle 0x411432 ; outsd dx, dword ptr [rsi] ; jl 0x411388 ; ret 0xc4c3
0x00000000004113bc : jle 0x411433 ; outsd dx, dword ptr [rsi] ; jl 0x411389 ; ret 0xc4c3
0x00000000004018db : jmp 0x4017b7
0x000000000040424a : jmp 0x404279
0x0000000000408539 : jmp 0x408546
0x000000000040f237 : jmp 0x40f6ab
0x0000000000402759 : jmp 0x4202b0a2
0x0000000000402786 : jmp 0x981e9ae
0x000000000040d7b8 : jmp 0xffffffffc2ca1fc2
0x0000000000405057 : jmp 0xfffffffff6c16267
0x000000000041338b : jmp qword ptr [rax]
0x0000000000412d9b : jmp qword ptr [rbx]
0x0000000000402702 : jmp qword ptr [rcx]
0x000000000041283b : jmp qword ptr [rdi]
0x000000000041299b : jmp qword ptr [rdx]
0x0000000000401d07 : jmp rax
0x000000000040ac19 : jmp rcx
0x0000000000401d47 : jmp rdx
0x000000000041230b : jmp rsp
0x0000000000401d30 : jne 0x401d37 ; pop rbp ; ret
0x0000000000403488 : jne 0x40345a ; or al, 0xffffffffffffffbb ; ret 0x6bd6
0x00000000004034c4 : jne 0x403496 ; or al, 0xffffffffffffffbb ; ret 0x6bd6
0x0000000000413181 : jns 0x413184 ; call rdi
0x000000000040ab55 : jo 0x40abb6 ; ret
0x000000000040c17f : jo 0x40c1e5 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040c824 : jo 0x40c885 ; ret
0x000000000040c95e : jo 0x40c9bf ; ret
0x00000000004112ba : jp 0x411322 ; jle 0x411335 ; outsd dx, dword ptr [rsi] ; jl 0x41128b ; ret 0xc4c3
0x00000000004113ba : jp 0x411422 ; jle 0x411435 ; outsd dx, dword ptr [rsi] ; jl 0x41138b ; ret 0xc4c3
0x00000000004033b2 : jrcxz 0x403408 ; cmp ah, dh ; ret
0x000000000040f38a : lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000409097 : lea edi, dword ptr [rax + 0xffffffe] ; cdq ; ret 0xb60f
0x0000000000409045 : lea esi, dword ptr [rax + 0xffffffe] ; cdq ; ret 0xb60f
0x00000000004033db : leave ; push rax ; cmp ah, dh ; ret
0x000000000040a306 : leave ; test dword ptr [rcx], esp ; ret 0xd709
0x000000000040dead : lock and byte ptr [rcx], al ; jmp rcx
0x0000000000402456 : loop 0x40245f ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], al ; ret
0x000000000040275f : loop 0x40276a ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], al ; ret
0x00000000004027dd : loop 0x4027e7 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], al ; ret
0x000000000040856e : loop 0x408575 ; movzx eax, dl ; pop rbp ; ret
0x000000000040856e : loop 0x408577 ; movzx eax, dl ; pop rbp ; ret
0x00000000004027d3 : loope 0x4027ea ; mov ebp, 0x89412497 ; ret 0x8141
0x0000000000407f0c : loope 0x407f15 ; movzx eax, cl ; pop rbp ; ret
0x000000000040e04c : loope 0x40e071 ; ret 0x8941
0x0000000000406c9e : loopne 0x406cee ; add esp, 0x50 ; pop rbp ; ret
0x0000000000406c9d : loopne 0x406cef ; add esp, 0x50 ; pop rbp ; ret
0x0000000000408514 : loopne 0x408564 ; add esp, 0x40 ; pop rbp ; ret
0x0000000000408513 : loopne 0x408565 ; add esp, 0x40 ; pop rbp ; ret
0x0000000000409eb9 : loopne 0x409e9b ; insd dword ptr [rdi], dx ; loopne 0x409f20 ; ret
0x0000000000409ebc : loopne 0x409f1d ; ret
0x000000000040e048 : loopne 0x40e064 ; in eax, -0x4a ; loope 0x40e075 ; ret 0x8941
0x000000000040e6f0 : loopne 0x40e6f8 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004134a4 : mov ah, 0xc ; add byte ptr [rax], al ; call 0x23413449
0x0000000000413829 : mov al, -1 ; call qword ptr [rax]
0x00000000004058fc : mov al, 0 ; call 0x401bc4
0x000000000040c6fb : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040c588 : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x000000000040860d : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040f6f6 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000407fc9 : mov al, byte ptr [rbp - 9] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004072ce : mov byte ptr [0x6145e8], 1 ; pop rbp ; ret
0x0000000000408038 : mov byte ptr [0x614608], 1 ; pop rbp ; ret
0x0000000000408761 : mov byte ptr [0x6148e0], al ; pop rbp ; ret
0x0000000000412d98 : mov byte ptr [rax - 1], bl ; jmp qword ptr [rbx]
0x0000000000407c87 : mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000406f5f : mov byte ptr [rdx], 0 ; add byte ptr [rax - 0x73], cl ; or al, 0x25 ; ret
0x0000000000401d63 : mov byte ptr [rip + 0x212616], 1 ; ret
0x000000000040a304 : mov ch, 0x1c ; leave ; test dword ptr [rcx], esp ; ret 0xd709
0x00000000004053fc : mov ch, 0x2e ; add dword ptr [rcx - 0xf], eax ; jmp qword ptr [rcx]
0x0000000000408571 : mov dh, -0x3e ; pop rbp ; ret
0x0000000000407f0f : mov dh, -0x3f ; pop rbp ; ret
0x0000000000408075 : mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405d83 : mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000407281 : mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000407fcf : mov dh, -0x40 ; pop rbp ; ret
0x0000000000412681 : mov dh, -1 ; call rsp
0x0000000000412641 : mov dl, -1 ; call rsp
0x000000000040865a : mov dword ptr [0x6144fc], edi ; pop rbp ; ret
0x000000000040863a : mov dword ptr [0x614500], edi ; pop rbp ; ret
0x000000000040873d : mov dword ptr [0x6148d8], edi ; pop rbp ; ret
0x000000000040aa06 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040a9c8 : mov dword ptr [rax], eax ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040a884 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040a9c7 : mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004063fa : mov dword ptr [rbp - 0x10], eax ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000406326 : mov dword ptr [rbp - 0x10], ecx ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405744 : mov dword ptr [rbp - 0x16c], esi ; call 0x401958
0x00000000004074dd : mov dword ptr [rbp - 0x18], eax ; pop rbp ; ret
0x0000000000408cca : mov dword ptr [rbp - 0x1c], eax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004021e9 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040ec88 : mov dword ptr [rbp - 0x50], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000402107 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040fbdd : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040aa7e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405ae2 : mov eax, 0x5b000001 ; pop rbp ; ret
0x0000000000403487 : mov eax, 0xbb0ccc75 ; ret 0x6bd6
0x0000000000409098 : mov eax, 0xffffffe ; cdq ; ret 0xb60f
0x000000000040a838 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040d5cb : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004089b3 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040a835 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040632a : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004067b2 : mov eax, dword ptr [rbp - 0x120] ; call rax
0x000000000040e1e8 : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000408bc4 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040a7ed : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040a87e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040a0ac : mov eax, dword ptr [rbp - 0x1c] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004081e1 : mov eax, dword ptr [rbp - 0x1c] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000408512 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000406c9c : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040a9ca : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040ab4f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040c6f9 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040e754 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408719 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000408a46 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040a3c5 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040e17d : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040d6ad : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004083c3 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004082df : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040ea76 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040fbe0 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004058fa : mov eax, eax ; mov al, 0 ; call 0x401bc6
0x0000000000408bf7 : mov eax, edx ; pop rbp ; ret
0x0000000000407e79 : mov eax, esi ; pop rbp ; ret
0x00000000004027d5 : mov ebp, 0x89412497 ; ret 0x8141
0x00000000004111f3 : mov ebp, 0xc1c0bfbe ; ret 0x3a60
0x0000000000401d8b : mov ebp, esp ; call rax
0x0000000000401cf1 : mov ebp, esp ; ja 0x401cfc ; pop rbp ; ret
0x000000000040d2fd : mov ecx, 0x5b2a830a ; ret
0x00000000004034c3 : mov ecx, 0xbb0ccc75 ; ret 0x6bd6
0x000000000040ac12 : mov ecx, dword ptr [rax*8 + 0x411870] ; jmp rcx
0x000000000040af36 : mov ecx, dword ptr [rax*8 + 0x4118b8] ; jmp rcx
0x000000000040ccbe : mov ecx, dword ptr [rax*8 + 0x411d78] ; jmp rcx
0x000000000040deaa : mov ecx, dword ptr [rax*8 + 0x4120f0] ; jmp rcx
0x000000000040de2a : mov ecx, dword ptr [rax*8 + 0x412150] ; jmp rcx
0x000000000040a881 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401d85 : mov edi, 0x613e20 ; mov rbp, rsp ; call rax
0x0000000000401d02 : mov edi, 0x614330 ; jmp rax
0x0000000000401d42 : mov edi, 0x614330 ; jmp rdx
0x0000000000404bdf : mov edi, 0xa6dc37c0 ; ret 0xcdab
0x0000000000408b10 : mov edi, dword ptr [rbp - 0x10] ; idiv rdi ; pop rbp ; ret
0x000000000040fc97 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000040fc96 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000404db4 : mov edx, dword ptr [0x6144f0] ; call rax
0x0000000000404ddc : mov edx, dword ptr [0x6145e0] ; call rax
0x00000000004067af : mov edx, eax ; mov rax, qword ptr [rbp - 0x120] ; call rax
0x0000000000404bef : mov esi, 0xa6dc37c0 ; ret 0xcdab
0x0000000000401d40 : mov esi, eax ; mov edi, 0x614330 ; jmp rdx
0x000000000040873c : mov qword ptr [0x6148d8], rdi ; pop rbp ; ret
0x00000000004063f9 : mov qword ptr [rbp - 0x10], rax ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000406325 : mov qword ptr [rbp - 0x10], rcx ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004074dc : mov qword ptr [rbp - 0x18], rax ; pop rbp ; ret
0x000000000040aa7d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004058f9 : mov r8, rax ; mov al, 0 ; call 0x401bc7
0x000000000040c6fa : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040d5ca : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004089b2 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040a834 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000406329 : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004067b1 : mov rax, qword ptr [rbp - 0x120] ; call rax
0x0000000000408bc3 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040a7ec : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000408511 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000406c9b : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040ab4e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040c6f8 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040d6ac : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004083c2 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004082de : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040ea75 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000408bf6 : mov rax, rdx ; pop rbp ; ret
0x0000000000407e78 : mov rax, rsi ; pop rbp ; ret
0x0000000000401d8a : mov rbp, rsp ; call rax
0x0000000000401cf0 : mov rbp, rsp ; ja 0x401cfd ; pop rbp ; ret
0x000000000040ac11 : mov rcx, qword ptr [rax*8 + 0x411870] ; jmp rcx
0x000000000040af35 : mov rcx, qword ptr [rax*8 + 0x4118b8] ; jmp rcx
0x000000000040ccbd : mov rcx, qword ptr [rax*8 + 0x411d78] ; jmp rcx
0x000000000040dea9 : mov rcx, qword ptr [rax*8 + 0x4120f0] ; jmp rcx
0x000000000040de29 : mov rcx, qword ptr [rax*8 + 0x412150] ; jmp rcx
0x0000000000408b0f : mov rdi, qword ptr [rbp - 0x10] ; idiv rdi ; pop rbp ; ret
0x0000000000404db3 : mov rdx, qword ptr [0x6144f0] ; call rax
0x0000000000404ddb : mov rdx, qword ptr [0x6145e0] ; call rax
0x0000000000401d3f : mov rsi, rax ; mov edi, 0x614330 ; jmp rdx
0x000000000040eb1a : movabs byte ptr [0x5d40c48348ffff30], al ; ret
0x0000000000404eec : movabs dword ptr [0xfffffff18195f129], eax ; jmp qword ptr [rcx]
0x0000000000404d34 : movabs dword ptr [0xfffffff6813a536e], eax ; jmp qword ptr [rcx]
0x00000000004044c9 : movabs eax, dword ptr [0xfffffff181e86584] ; jmp qword ptr [rcx]
0x0000000000412994 : movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], eax ; add al, bh ; xor edi, edi ; jmp qword ptr [rdx]
0x000000000040a3fc : movsxd rax, ecx ; pop rbp ; ret
0x0000000000412449 : movsxd rdi, edi ; jmp rsp
0x0000000000408074 : movzx eax, al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405d82 : movzx eax, al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000407280 : movzx eax, al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000407fce : movzx eax, al ; pop rbp ; ret
0x0000000000407c8a : movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000407f0e : movzx eax, cl ; pop rbp ; ret
0x0000000000408570 : movzx eax, dl ; pop rbp ; ret
0x0000000000407fca : mul dword ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x0000000000407fcb : mul dword ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000040fcb8 : nop dword ptr [rax + rax] ; ret
0x000000000040b29d : or al, 0x18 ; ret 0x6451
0x000000000040756f : or al, 0x25 ; adc byte ptr [rsi + 0x61], al ; add byte ptr [rax - 0x46], cl ; ret
0x0000000000406f65 : or al, 0x25 ; ret
0x0000000000407d86 : or al, 0x41 ; add al, ch ; ret 0xff9b
0x000000000040348a : or al, 0xffffffffffffffbb ; ret 0x6bd6
0x000000000040deab : or al, 0xffffffffffffffc5 ; lock and byte ptr [rcx], al ; jmp rcx
0x000000000040de2b : or al, 0xffffffffffffffc5 ; push rax ; and dword ptr [rcx], eax ; jmp rcx
0x00000000004123c5 : or byte ptr [rax], al ; add byte ptr [rax + rbx*2 - 1], dh ; jmp rsp
0x000000000040803b : or byte ptr [rsi + 0x61], al ; add byte ptr [rcx], al ; pop rbp ; ret
0x0000000000407b8b : or dword ptr [rax + 1], ecx ; ret 0x8948
0x000000000041317d : or dword ptr [rax], eax ; add al, ah ; jns 0x413188 ; call rdi
0x000000000040e0eb : or dword ptr [rsp + rax + 0x21], esp ; ret 0xd709
0x0000000000407b8a : or dword ptr cs:[rax + 1], ecx ; ret 0x8948
0x000000000040c8e1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407b87 : or ecx, dword ptr [rbp + 0x10] ; or dword ptr cs:[rax + 1], ecx ; ret 0x8948
0x0000000000412309 : or edi, edi ; jmp rsp
0x00000000004033bf : out 0x50, al ; cmp ah, dh ; ret
0x0000000000407d85 : out 0xc, al ; add r8b, bpl ; ret 0xff9b
0x00000000004112be : outsb dx, byte ptr [rsi] ; outsd dx, dword ptr [rsi] ; jl 0x411287 ; ret 0xc4c3
0x00000000004113be : outsb dx, byte ptr [rsi] ; outsd dx, dword ptr [rsi] ; jl 0x411387 ; ret 0xc4c3
0x0000000000404d35 : outsb dx, byte ptr [rsi] ; push rbx ; cmp al, byte ptr [rcx - 0xa] ; jmp qword ptr [rcx]
0x00000000004112bf : outsd dx, dword ptr [rsi] ; jl 0x411286 ; ret 0xc4c3
0x00000000004113bf : outsd dx, dword ptr [rsi] ; jl 0x411386 ; ret 0xc4c3
0x000000000040fcac : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000409d98 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040fcae : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040434f : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040fcb0 : pop r14 ; pop r15 ; ret
0x000000000040bf33 : pop r14 ; pop rbp ; ret
0x0000000000404351 : pop r15 ; pop rbp ; ret
0x000000000040fcb2 : pop r15 ; ret
0x0000000000401d62 : pop rbp ; mov byte ptr [rip + 0x212616], 1 ; ret
0x0000000000401d01 : pop rbp ; mov edi, 0x614330 ; jmp rax
0x0000000000401d3e : pop rbp ; mov rsi, rax ; mov edi, 0x614330 ; jmp rdx
0x000000000040fcab : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040fcaf : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401cf5 : pop rbp ; ret
0x0000000000409d97 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040434e : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040bf32 : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000405ae6 : pop rbx ; pop rbp ; ret
0x000000000040d301 : pop rbx ; ret
0x0000000000404352 : pop rdi ; pop rbp ; ret
0x000000000040fcb3 : pop rdi ; ret
0x00000000004112bb : pop rsi ; jle 0x411334 ; outsd dx, dword ptr [rsi] ; jl 0x41128a ; ret 0xc4c3
0x00000000004113bb : pop rsi ; jle 0x411434 ; outsd dx, dword ptr [rsi] ; jl 0x41138a ; ret 0xc4c3
0x0000000000404350 : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040fcb1 : pop rsi ; pop r15 ; ret
0x000000000040bf34 : pop rsi ; pop rbp ; ret
0x000000000040fcad : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000409d99 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040a76b : push 0x48006143 ; add esp, 0x30 ; pop rbp ; ret
0x000000000040de2d : push rax ; and dword ptr [rcx], eax ; jmp rcx
0x00000000004033aa : push rax ; cmp ah, dh ; ret
0x0000000000406ca2 : push rax ; pop rbp ; ret
0x0000000000402164 : push rbp ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; xor al, 0x25 ; ret
0x0000000000401d84 : push rbp ; mov edi, 0x613e20 ; mov rbp, rsp ; call rax
0x0000000000407ad0 : push rbp ; ror byte ptr [rax + 0x29], 1 ; ret 0x148
0x0000000000407af9 : push rbp ; ror byte ptr [rax + 0x29], 1 ; ret 0x2948
0x000000000040eae5 : push rbp ; ror byte ptr [rax - 0x77], 1 ; ret 0x51e8
0x0000000000404d36 : push rbx ; cmp al, byte ptr [rcx - 0xa] ; jmp qword ptr [rcx]
0x0000000000402758 : push rsp ; jmp 0x4202b0a3
0x0000000000402785 : push rsp ; jmp 0x981e9af
0x000000000040316e : rcl byte ptr [rsi], 0x41 ; add byte ptr [rax - 0x73], cl ; adc al, 0x25 ; ret 0x410e
0x0000000000409eb6 : rcr ebx, 0x7d ; loopne 0x409e9e ; insd dword ptr [rdi], dx ; loopne 0x409f23 ; ret
0x00000000004017a9 : ret
0x00000000004094e9 : ret 0
0x0000000000407ad4 : ret 0x148
0x000000000040c31e : ret 0x1b2
0x0000000000401ae2 : ret 0x2126
0x00000000004018e2 : ret 0x2127
0x0000000000405161 : ret 0x2948
0x000000000040b6a9 : ret 0x294c
0x000000000040b6c5 : ret 0x294d
0x00000000004111f8 : ret 0x3a60
0x0000000000411900 : ret 0x40b3
0x0000000000403176 : ret 0x410e
0x0000000000404253 : ret 0x410f
0x000000000040f361 : ret 0x4122
0x00000000004046cb : ret 0x439a
0x0000000000405867 : ret 0x43e8
0x000000000040eae9 : ret 0x51e8
0x000000000040334d : ret 0x5588
0x000000000040a904 : ret 0x5589
0x000000000040b29f : ret 0x6451
0x000000000040348c : ret 0x6bd6
0x0000000000405fe8 : ret 0x72e8
0x0000000000405f53 : ret 0x7e8
0x00000000004098b2 : ret 0x8041
0x00000000004029d9 : ret 0x8118
0x000000000040267a : ret 0x8141
0x00000000004032d7 : ret 0x8148
0x00000000004084d8 : ret 0x82e8
0x000000000040fa1f : ret 0x840
0x00000000004095fc : ret 0x8589
0x0000000000402c7a : ret 0x8840
0x000000000040cc79 : ret 0x8844
0x000000000040e04e : ret 0x8941
0x00000000004051dd : ret 0x8948
0x000000000040b6c8 : ret 0x8949
0x000000000040b85c : ret 0x89a5
0x0000000000406029 : ret 0x8b48
0x00000000004064ae : ret 0x8f0f
0x000000000040a18b : ret 0x8fe8
0x0000000000402788 : ret 0x941
0x0000000000403504 : ret 0x9588
0x0000000000404a50 : ret 0x9ae8
0x0000000000408f67 : ret 0xa
0x0000000000407fa3 : ret 0xa946
0x000000000040b6dd : ret 0xade8
0x000000000040292e : ret 0xb0
0x000000000040904c : ret 0xb60f
0x00000000004051d0 : ret 0xb848
0x000000000040f5c9 : ret 0xb849
0x00000000004096e1 : ret 0xbeb6
0x0000000000401d25 : ret 0xc148
0x000000000040f330 : ret 0xc2f6
0x0000000000408572 : ret 0xc35d
0x00000000004112c2 : ret 0xc4c3
0x00000000004026d4 : ret 0xca21
0x0000000000403a04 : ret 0xca29
0x00000000004069ed : ret 0xca31
0x0000000000404be4 : ret 0xcdab
0x0000000000405d69 : ret 0xd284
0x0000000000405a1e : ret 0xd709
0x0000000000405d76 : ret 0xe280
0x000000000040bf6c : ret 0xee8
0x000000000040b958 : ret 0xf180
0x000000000040f323 : ret 0xf280
0x000000000040273a : ret 0xf281
0x00000000004084b0 : ret 0xfa81
0x0000000000407d8a : ret 0xff9b
0x0000000000402e7a : ret 0xffe9
0x000000000040574c : ret 0xffff
0x000000000040a162 : ret 1
0x000000000040f390 : ret 2
0x0000000000402e38 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040a9c6 : rol byte ptr [rcx + rcx*4], 1 ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000407f0a : rol dword ptr [rax - 0x49f0fe1f], -0x3f ; pop rbp ; ret
0x00000000004033b0 : rol dword ptr [rcx - 0x19c5af1d], cl ; ret
0x000000000040d2e0 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000040ab50 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x40abbb ; ret
0x0000000000407ad1 : ror byte ptr [rax + 0x29], 1 ; ret 0x148
0x0000000000407afa : ror byte ptr [rax + 0x29], 1 ; ret 0x2948
0x0000000000401d2c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401d3b ; pop rbp ; ret
0x000000000040d2e1 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x000000000040b69d : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x000000000040b6a6 : ror byte ptr [rax - 0x77], 1 ; ret 0x294c
0x000000000040eae6 : ror byte ptr [rax - 0x77], 1 ; ret 0x51e8
0x000000000040ab51 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x40abba ; ret
0x0000000000407282 : ror byte ptr [rax - 0x7d], -0x3c ; pop rbp ; ret
0x000000000040334a : ror dword ptr [rdi], -0x6a ; ret 0x5588
0x0000000000403501 : ror dword ptr [rdi], -0x6a ; ret 0x9588
0x0000000000404be0 : sal byte ptr [rdi], -0x24 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xcdab
0x0000000000409073 : sar dh, -1 ; dec dword ptr [rdi] ; cdq ; ret 0xb60f
0x0000000000405d6e : sar dword ptr [rip], 0xf ; xchg eax, ebp ; ret 0xe280
0x0000000000401d2e : sar eax, 1 ; jne 0x401d39 ; pop rbp ; ret
0x0000000000401d2d : sar rax, 1 ; jne 0x401d3a ; pop rbp ; ret
0x000000000040a305 : sbb al, -0x37 ; test dword ptr [rcx], esp ; ret 0xd709
0x00000000004029da : sbb byte ptr [rcx + 0xdd10920], al ; ret 0x8118
0x000000000040ac16 : sbb byte ptr [rcx], al ; jmp rcx
0x000000000040856a : setne dl ; and dl, 1 ; movzx eax, dl ; pop rbp ; ret
0x00000000004112b9 : stc ; jp 0x411323 ; jle 0x411336 ; outsd dx, dword ptr [rsi] ; jl 0x41128c ; ret 0xc4c3
0x00000000004113b9 : stc ; jp 0x411423 ; jle 0x411436 ; outsd dx, dword ptr [rsi] ; jl 0x41138c ; ret 0xc4c3
0x000000000040f6f8 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040a386 : sub ah, byte ptr [rcx] ; ret 0xd709
0x000000000040d2ff : sub dword ptr [rdx], 0x5b ; ret
0x00000000004017a1 : sub eax, dword ptr [rbx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000040fd01 : sub esp, 8 ; add rsp, 8 ; ret
0x000000000040fd00 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040e0ea : test al, 9 ; add al, 0x21 ; ret 0xd709
0x000000000040fcba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000412408 : test byte ptr [rbp - 1], bl ; jmp rsp
0x0000000000412448 : test byte ptr [rbx - 1], ah ; jmp rsp
0x0000000000405454 : test byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x0000000000412488 : test byte ptr [rdi - 1], ah ; jmp rsp
0x000000000040a3f6 : test dh, dh ; cmove ecx, edx ; movsxd rax, ecx ; pop rbp ; ret
0x0000000000405e91 : test dword ptr [rbp + rdi*8 - 1], ebp ; call rcx
0x000000000040a307 : test dword ptr [rcx], esp ; ret 0xd709
0x0000000000409c1c : test eax, 0x2140e457 ; ret 0x941
0x00000000004025f7 : xchg eax, ebp ; ret
0x0000000000402c79 : xchg eax, ebp ; ret 0x8840
0x0000000000405d68 : xchg eax, ebp ; ret 0xd284
0x0000000000405d75 : xchg eax, ebp ; ret 0xe280
0x0000000000402803 : xchg eax, edi ; and al, 0x21 ; ret 0x941
0x00000000004098b1 : xchg eax, edx ; ret 0x8041
0x0000000000409007 : xchg eax, edx ; ret 0xe280
0x0000000000407f09 : xchg eax, edx ; rol dword ptr [rax - 0x49f0fe1f], -0x3f ; pop rbp ; ret
0x000000000040334c : xchg eax, esi ; ret 0x5588
0x0000000000403503 : xchg eax, esi ; ret 0x9588
0x0000000000406353 : xchg eax, esp ; ret 0xd284
0x0000000000413824 : xor al, 0x10 ; add byte ptr [rax], al ; call 0x114137e4
0x000000000040f23e : xor al, 0x25 ; call qword ptr [rsi]
0x000000000040216a : xor al, 0x25 ; ret
0x000000000040f35f : xor al, 0x25 ; ret 0x4122
0x000000000040f6be : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040c677 : xor eax, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x000000000040a9c5 : xor eax, edx ; mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000412999 : xor edi, edi ; jmp qword ptr [rdx]
