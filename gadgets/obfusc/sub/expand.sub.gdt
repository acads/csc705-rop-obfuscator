0x0000000000404729 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040874b : add ah, cl ; add al, 0 ; add al, dl ; ret
0x000000000040874d : add al, 0 ; add al, dl ; ret
0x0000000000408baf : add al, al ; sar bh, cl ; jmp rax
0x00000000004051c0 : add al, ch ; cli ; ret 0xffff
0x000000000040525e : add al, ch ; pop rsp ; ret 0xffff
0x000000000040520b : add al, ch ; scasd eax, dword ptr [rdi] ; ret 0xffff
0x000000000040800b : add al, dl ; mov al, -1 ; jmp rax
0x000000000040874f : add al, dl ; ret
0x00000000004086f0 : add bl, -1 ; jmp qword ptr [rdx]
0x00000000004070ff : add bl, dh ; ret
0x000000000040576d : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000401f9a : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x0000000000408749 : add byte ptr [rax], al ; add ah, cl ; add al, 0 ; add al, dl ; ret
0x00000000004086ee : add byte ptr [rax], al ; add bl, -1 ; jmp qword ptr [rdx]
0x00000000004070fd : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000401f98 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x00000000004070fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004070fc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040227b : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b74b8b], cl ; ret 0xb0
0x00000000004024ef : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b75b8b], cl ; ret 0xb0
0x00000000004022ba : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x000000000040503e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004067cc : add byte ptr [rax], al ; add cl, ch ; ret 2
0x00000000004046f1 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404400 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401f33 : add byte ptr [rax], al ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040127b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000408606 : add byte ptr [rax], al ; call 0xffffffffd84085bb
0x00000000004013f9 : add byte ptr [rax], al ; jmp 0x401299
0x0000000000402cc2 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040870e : add byte ptr [rax], al ; nop ; ret
0x0000000000404a1e : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040560b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004043c0 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000408bae : add byte ptr [rax], al ; rcl dl, -1 ; jmp rax
0x00000000004070fe : add byte ptr [rax], al ; ret
0x0000000000408baa : add byte ptr [rax], al ; sub al, 9 ; add byte ptr [rax], al ; rcl dl, -1 ; jmp rax
0x0000000000408602 : add byte ptr [rax], al ; test byte ptr [rbx], al ; add byte ptr [rax], al ; call 0xffffffffd84085bf
0x000000000040560c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004043c1 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040227d : add byte ptr [rbx - 0x76b74b8b], cl ; ret 0xb0
0x00000000004024f1 : add byte ptr [rbx - 0x76b75b8b], cl ; ret 0xb0
0x0000000000408bab : add byte ptr [rcx + rcx], ch ; add byte ptr [rax], al ; rcl dl, -1 ; jmp rax
0x0000000000405116 : add byte ptr [rcx - 0x5bba7631], cl ; call 0x4013b8
0x0000000000405115 : add byte ptr [rcx - 0x5bba7631], cl ; call 0x4013b9
0x0000000000406f9c : add byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x00000000004016d8 : add byte ptr [rcx], al ; ret
0x00000000004067c8 : add byte ptr [rdi], cl ; lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x00000000004022bc : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000405040 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004067ce : add cl, ch ; ret 2
0x0000000000405c49 : add dword ptr [rax - 0x77], ecx ; ret 0x8148
0x00000000004046ef : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040560a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004043bf : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000406e5d : add dword ptr [rax], ecx ; ret 0x840
0x0000000000406b3a : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004016d4 : add eax, 0x208bfe ; add ebx, esi ; ret
0x00000000004067cb : add eax, 0xe9000000 ; ret 2
0x000000000040169b : add eax, edx ; sar rax, 1 ; jne 0x4016ac ; pop rbp ; ret
0x00000000004016d9 : add ebx, esi ; ret
0x000000000040184b : add esp, 0x10 ; pop rbp ; ret
0x0000000000406afc : add esp, 0x130 ; pop rbp ; ret
0x000000000040593c : add esp, 0x1a0 ; pop rbp ; ret
0x000000000040201a : add esp, 0x20 ; pop rbp ; ret
0x000000000040195d : add esp, 0x30 ; pop rbp ; ret
0x0000000000404b0c : add esp, 0x50 ; pop rbp ; ret
0x0000000000402517 : add esp, 0x58 ; pop rbx ; pop rbp ; ret
0x0000000000401f36 : add esp, 0x60 ; pop rbp ; ret
0x0000000000402fe3 : add esp, 0x70 ; pop rbp ; ret
0x0000000000404a1a : add esp, 0x90 ; pop rbp ; ret
0x00000000004057d3 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040127e : add esp, 8 ; ret
0x000000000040169a : add rax, rdx ; sar rax, 1 ; jne 0x4016ad ; pop rbp ; ret
0x000000000040184a : add rsp, 0x10 ; pop rbp ; ret
0x0000000000406afb : add rsp, 0x130 ; pop rbp ; ret
0x000000000040593b : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000402019 : add rsp, 0x20 ; pop rbp ; ret
0x000000000040195c : add rsp, 0x30 ; pop rbp ; ret
0x0000000000404b0b : add rsp, 0x50 ; pop rbp ; ret
0x0000000000402516 : add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x0000000000401f35 : add rsp, 0x60 ; pop rbp ; ret
0x0000000000402fe2 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000404a19 : add rsp, 0x90 ; pop rbp ; ret
0x00000000004057d2 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040127d : add rsp, 8 ; ret
0x0000000000406b39 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004016d7 : and byte ptr [rax], al ; add ebx, esi ; ret
0x00000000004028c7 : and eax, 0x48ffffea ; add esp, 0x10 ; pop rbp ; ret
0x00000000004027af : and eax, 0x60a320 ; pop rbp ; ret
0x00000000004027d3 : and eax, 0x60a328 ; pop rbp ; ret
0x00000000004050ed : call 0x4013b2
0x00000000004051c1 : call 0x4014c2
0x0000000000408608 : call 0xffffffffd84085b9
0x00000000004043f9 : call 0xffffffffe902cd49
0x00000000004043f8 : call 0xffffffffe902cd4a
0x00000000004070d9 : call qword ptr [r12 + rbx*8]
0x00000000004083eb : call qword ptr [rax]
0x000000000040842b : call qword ptr [rsi]
0x00000000004070da : call qword ptr [rsp + rbx*8]
0x00000000004016fd : call rax
0x000000000040414c : call rbx
0x000000000040860b : call rdi
0x0000000000406afa : clc ; add rsp, 0x130 ; pop rbp ; ret
0x00000000004026df : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405051 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040169f : clc ; jne 0x4016a8 ; pop rbp ; ret
0x00000000004026f6 : clc ; mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000402e95 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040701f : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000407022 : clc ; pop rbp ; ret
0x0000000000401877 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405f49 : cld ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004060ce : cld ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040701c : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000405fa3 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405f46 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004060cb : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004051c2 : cli ; ret 0xffff
0x000000000040165d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401670 ; pop rbp ; ret
0x000000000040514c : cwde ; mov rcx, qword ptr [rax*8 + 0x407b68] ; jmp rcx
0x00000000004016d5 : dec byte ptr [rbx - 0xcfeffe0] ; ret
0x0000000000406834 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000403b52 : dec dword ptr [rcx - 0x77] ; ret 0x294d
0x0000000000403ee0 : enter 0x4b05, 0x34 ; fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x0000000000402bfb : enter 0x60a2, 0 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402333 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000403ee4 : fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x00000000004070dc : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000401849 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401670 : hlt ; pop rbp ; mov edi, 0x60a268 ; jmp rax
0x000000000040416b : inc dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000405775 : int 0x80
0x00000000004050ec : iretd ; call 0x4013b3
0x0000000000405118 : iretd ; mov dword ptr [rbp - 0x5c], eax ; call 0x4013b6
0x0000000000401663 : ja 0x40166a ; pop rbp ; ret
0x000000000040166f : je 0x40166d ; pop rbp ; mov edi, 0x60a268 ; jmp rax
0x00000000004050e8 : jge 0x405099 ; mov rdi, rcx ; call 0x4013b7
0x00000000004013fb : jmp 0x401297
0x0000000000405c48 : jmp 0xffffffffc2c9a452
0x0000000000407f5f : jmp qword ptr [rax]
0x0000000000401d20 : jmp qword ptr [rcx]
0x00000000004086f3 : jmp qword ptr [rdx]
0x0000000000401677 : jmp rax
0x00000000004030a9 : jmp rcx
0x00000000004016b7 : jmp rdx
0x00000000004016a0 : jne 0x4016a7 ; pop rbp ; ret
0x0000000000402fe5 : jo 0x403046 ; ret
0x000000000040460f : jo 0x404675 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000404cb4 : jo 0x404d15 ; ret
0x0000000000404dee : jo 0x404e4f ; ret
0x00000000004067ca : lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x00000000004022b8 : loopne 0x4022c1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000402a5b : loopne 0x402aab ; add esp, 0x20 ; pop rbp ; ret
0x0000000000402a5a : loopne 0x402aac ; add esp, 0x20 ; pop rbp ; ret
0x0000000000405167 : loopne 0x4051b8 ; mov dword ptr [rbp - 0x78], eax ; call 0x4013b7
0x0000000000405166 : loopne 0x4051b9 ; mov dword ptr [rbp - 0x78], eax ; call 0x4013b8
0x000000000040800d : mov al, -1 ; jmp rax
0x00000000004051bf : mov al, 0 ; call 0x4014c4
0x0000000000404b8b : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000404a18 : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000406b36 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004027d1 : mov byte ptr [0x60a328], al ; pop rbp ; ret
0x00000000004026f7 : mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x00000000004016d3 : mov byte ptr [rip + 0x208bfe], 1 ; ret
0x0000000000406b3c : mov dh, -0x40 ; pop rbp ; ret
0x00000000004027ad : mov dword ptr [0x60a320], edi ; pop rbp ; ret
0x0000000000402e96 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000402789 : mov dword ptr [rax + rdx*8], ecx ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402e58 : mov dword ptr [rax], eax ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000402d14 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000402e57 : mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000402a59 : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401959 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004050e7 : mov dword ptr [rbp - 0x58], edi ; mov rdi, rcx ; call 0x4013b8
0x0000000000405119 : mov dword ptr [rbp - 0x5c], eax ; call 0x4013b5
0x0000000000405169 : mov dword ptr [rbp - 0x78], eax ; call 0x4013b5
0x000000000040519b : mov dword ptr [rbp - 0x88], eax ; call 0x4013b8
0x0000000000401847 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401875 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040701d : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402f0e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402cc8 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000405a5b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402a23 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402cc5 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040297f : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405d53 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402c7d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402d0e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000405165 : mov eax, dword ptr [rbp - 0x20] ; mov qword ptr [rbp - 0x78], rax ; call 0x4013b9
0x0000000000402e5a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000402fdf : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000404b89 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000405fa4 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405f47 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004060cc : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004026dd : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040504f : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000407020 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004016fb : mov ebp, esp ; call rax
0x0000000000401661 : mov ebp, esp ; ja 0x40166c ; pop rbp ; ret
0x000000000040578d : mov ecx, 0x5b2a830a ; ret
0x00000000004030a2 : mov ecx, dword ptr [rax*8 + 0x407660] ; jmp rcx
0x00000000004033c6 : mov ecx, dword ptr [rax*8 + 0x4076a8] ; jmp rcx
0x000000000040514e : mov ecx, dword ptr [rax*8 + 0x407b68] ; jmp rcx
0x0000000000402d11 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004016f5 : mov edi, 0x609e20 ; mov rbp, rsp ; call rax
0x0000000000401672 : mov edi, 0x60a268 ; jmp rax
0x00000000004016b2 : mov edi, 0x60a268 ; jmp rdx
0x00000000004050eb : mov edi, ecx ; call 0x4013b4
0x0000000000405117 : mov edi, ecx ; mov dword ptr [rbp - 0x5c], eax ; call 0x4013b7
0x00000000004070d7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x00000000004070d6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000040213b : mov esi, 0x2948181f ; ret 0x8948
0x00000000004051bd : mov esi, eax ; mov al, 0 ; call 0x4014c6
0x00000000004016b0 : mov esi, eax ; mov edi, 0x60a268 ; jmp rdx
0x00000000004016d6 : mov esp, dword ptr [rax] ; add byte ptr [rcx], al ; ret
0x00000000004027ac : mov qword ptr [0x60a320], rdi ; pop rbp ; ret
0x0000000000402788 : mov qword ptr [rax + rdx*8], rcx ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004050e6 : mov qword ptr [rbp - 0x58], rdi ; mov rdi, rcx ; call 0x4013b9
0x0000000000405168 : mov qword ptr [rbp - 0x78], rax ; call 0x4013b6
0x000000000040519a : mov qword ptr [rbp - 0x88], rax ; call 0x4013b9
0x0000000000402f0d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404b8a : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000405a5a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402a22 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402cc4 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040297e : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405d52 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402c7c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402fde : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000404b88 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004026dc : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040504e : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004016fa : mov rbp, rsp ; call rax
0x0000000000401660 : mov rbp, rsp ; ja 0x40166d ; pop rbp ; ret
0x00000000004030a1 : mov rcx, qword ptr [rax*8 + 0x407660] ; jmp rcx
0x00000000004033c5 : mov rcx, qword ptr [rax*8 + 0x4076a8] ; jmp rcx
0x000000000040514d : mov rcx, qword ptr [rax*8 + 0x407b68] ; jmp rcx
0x00000000004050ea : mov rdi, rcx ; call 0x4013b5
0x00000000004051bc : mov rsi, rax ; mov al, 0 ; call 0x4014c7
0x00000000004016af : mov rsi, rax ; mov edi, 0x60a268 ; jmp rdx
0x000000000040511b : movsb byte ptr [rdi], byte ptr [rsi] ; call 0x4013b3
0x000000000040511a : movsb byte ptr [rdi], byte ptr [rsi] ; call 0x4013b4
0x0000000000400284 : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000406b3b : movzx eax, al ; pop rbp ; ret
0x00000000004026fa : movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000408710 : nop ; ret
0x00000000004070f8 : nop dword ptr [rax + rax] ; ret
0x000000000040372d : or al, 0x18 ; ret 0x6451
0x000000000040278a : or al, 0xffffffffffffffd0 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408bad : or dword ptr [rax], eax ; add al, al ; sar bh, cl ; jmp rax
0x0000000000404d71 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004070ec : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000404611 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004070ee : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000404613 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004070f0 : pop r14 ; pop r15 ; ret
0x00000000004043c3 : pop r14 ; pop rbp ; ret
0x0000000000404615 : pop r15 ; pop rbp ; ret
0x00000000004070f2 : pop r15 ; ret
0x0000000000402519 : pop rax ; pop rbx ; pop rbp ; ret
0x00000000004016d2 : pop rbp ; mov byte ptr [rip + 0x208bfe], 1 ; ret
0x0000000000401671 : pop rbp ; mov edi, 0x60a268 ; jmp rax
0x00000000004016ae : pop rbp ; mov rsi, rax ; mov edi, 0x60a268 ; jmp rdx
0x00000000004070eb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004070ef : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401665 : pop rbp ; ret
0x0000000000404610 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040560d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004043c2 : pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040251a : pop rbx ; pop rbp ; ret
0x0000000000405791 : pop rbx ; ret
0x0000000000404616 : pop rdi ; pop rbp ; ret
0x00000000004070f3 : pop rdi ; ret
0x0000000000404614 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004070f1 : pop rsi ; pop r15 ; ret
0x00000000004043c4 : pop rsi ; pop rbp ; ret
0x00000000004070ed : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000404612 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405260 : pop rsp ; ret 0xffff
0x0000000000404b0e : push rax ; pop rbp ; ret
0x00000000004016f4 : push rbp ; mov edi, 0x609e20 ; mov rbp, rsp ; call rax
0x0000000000405129 : push rbx ; ret
0x0000000000408bb0 : rcl dl, -1 ; jmp rax
0x0000000000400285 : ret
0x0000000000406a02 : ret 0
0x0000000000402130 : ret 0x148
0x00000000004047ae : ret 0x1b2
0x0000000000401602 : ret 0x208b
0x0000000000401402 : ret 0x208c
0x0000000000401ffc : ret 0x2948
0x0000000000403b39 : ret 0x294c
0x0000000000403b55 : ret 0x294d
0x0000000000402d94 : ret 0x5589
0x000000000040372f : ret 0x6451
0x0000000000403b6d : ret 0x6de8
0x0000000000405c4c : ret 0x8148
0x0000000000406e5f : ret 0x840
0x00000000004022bf : ret 0x8840
0x0000000000405109 : ret 0x8844
0x0000000000402140 : ret 0x8948
0x0000000000403b58 : ret 0x8949
0x0000000000403cec : ret 0x89a5
0x0000000000403b3c : ret 0x8b48
0x0000000000401f9d : ret 0xb0
0x0000000000406a09 : ret 0xb849
0x0000000000401695 : ret 0xc148
0x0000000000406770 : ret 0xc2f6
0x0000000000403554 : ret 0xca21
0x0000000000405043 : ret 0xd284
0x0000000000402317 : ret 0xe280
0x00000000004043fc : ret 0xee8
0x0000000000403de8 : ret 0xf180
0x0000000000406763 : ret 0xf280
0x00000000004035ce : ret 0xf281
0x00000000004050ef : ret 0xffff
0x0000000000402197 : ret 1
0x00000000004067d0 : ret 2
0x0000000000402e56 : rol byte ptr [rcx + rcx*4], 1 ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000407fc8 : rol byte ptr [rip - 0x54600000], -1 ; jmp rax
0x0000000000408008 : rol byte ptr [rsi], 0 ; add al, dl ; mov al, -1 ; jmp rax
0x0000000000405770 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000402fe0 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x40304b ; ret
0x000000000040169c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4016ab ; pop rbp ; ret
0x0000000000405771 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000403b2d : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000403b36 : ror byte ptr [rax - 0x77], 1 ; ret 0x294c
0x0000000000402fe1 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x40304a ; ret
0x0000000000408bb1 : sar bh, cl ; jmp rax
0x000000000040169e : sar eax, 1 ; jne 0x4016a9 ; pop rbp ; ret
0x000000000040169d : sar rax, 1 ; jne 0x4016aa ; pop rbp ; ret
0x000000000040213d : sbb byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000040510e : scasb al, byte ptr [rdi] ; ret
0x000000000040520d : scasd eax, dword ptr [rdi] ; ret 0xffff
0x000000000040510c : shr al, -0x52 ; ret
0x0000000000406b38 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000408bac : sub al, 9 ; add byte ptr [rax], al ; rcl dl, -1 ; jmp rax
0x000000000040578f : sub dword ptr [rdx], 0x5b ; ret
0x000000000040712d : sub esp, 8 ; add rsp, 8 ; ret
0x000000000040712c : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000407f9d : test al, -1 ; jmp qword ptr [rax]
0x00000000004050e9 : test al, 0x48 ; mov edi, ecx ; call 0x4013b6
0x00000000004070fa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000408604 : test byte ptr [rbx], al ; add byte ptr [rax], al ; call 0xffffffffd84085bd
0x00000000004022be : xchg eax, ebp ; ret 0x8840
0x0000000000405042 : xchg eax, esp ; ret 0xd284
0x0000000000406afe : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000404b07 : xor eax, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x0000000000402e55 : xor eax, edx ; mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
