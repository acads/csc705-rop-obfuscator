0x00000000004049a8 : adc al, 0x48 ; add esp, 0x10 ; pop rbp ; ret
0x000000000040498c : adc dh, dh ; ret 0xf01
0x0000000000406889 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040b423 : add ah, al ; add byte ptr [rax], al ; add al, ch ; jne 0x40b432 ; jmp rdi
0x000000000040afc9 : add al, 0 ; add byte ptr [rax], al ; jle 0x40afd4 ; jmp rax
0x000000000040b90f : add al, al ; mov dl, -1 ; jmp qword ptr [rdx]
0x000000000040b427 : add al, ch ; jne 0x40b42e ; jmp rdi
0x0000000000401bc7 : add al, ch ; ret
0x000000000040b0cb : add al, dh ; mov ch, -1 ; jmp rax
0x0000000000409d6f : add bl, dh ; ret
0x00000000004040d0 : add byte ptr [r8], al ; pop rbp ; ret
0x000000000040547c : add byte ptr [rax - 0x75], cl ; jge 0x405458 ; call 0x401737
0x000000000040841d : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000403524 : add byte ptr [rax - 0x77], cl ; ret 0xf3e8
0x00000000004032ba : add byte ptr [rax - 0x7af10000], al ; ret
0x000000000040ba2f : add byte ptr [rax], ah ; mov ah, -1 ; jmp qword ptr [rax]
0x000000000040b425 : add byte ptr [rax], al ; add al, ch ; jne 0x40b430 ; jmp rdi
0x0000000000401bc5 : add byte ptr [rax], al ; add al, ch ; ret
0x0000000000409d6d : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040547a : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jge 0x40545a ; call 0x401739
0x0000000000403522 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xf3e8
0x0000000000409d6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000402d71 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000040487b : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000409d6c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000405f2e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x00000000004048d2 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040719e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040afca : add byte ptr [rax], al ; add byte ptr [rsi - 1], bh ; jmp rax
0x000000000040943c : add byte ptr [rax], al ; add cl, ch ; ret 2
0x000000000040b4c2 : add byte ptr [rax], al ; add dword ptr fs:[rax], eax ; add byte ptr [rax], bl ; mov edi, dr1 ; call qword ptr [rax]
0x0000000000406851 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406560 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401623 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000040b482 : add byte ptr [rax], al ; and al, 1 ; add byte ptr [rax], al ; or byte ptr [rdx - 1], bh ; call qword ptr [rdi]
0x00000000004053d8 : add byte ptr [rax], al ; call 0x401664
0x000000000040b3e6 : add byte ptr [rax], al ; call 0xffffffffe340b35a
0x000000000040b426 : add byte ptr [rax], al ; call 0xffffffffe840b3a7
0x000000000040afcb : add byte ptr [rax], al ; jle 0x40afd2 ; jmp rax
0x0000000000401659 : add byte ptr [rax], al ; jmp 0x401639
0x0000000000402d73 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000404e22 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040487d : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040547b : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x30] ; call 0x401738
0x000000000040b486 : add byte ptr [rax], al ; or byte ptr [rdx - 1], bh ; call qword ptr [rdi]
0x00000000004030a3 : add byte ptr [rax], al ; pop rbp ; ret
0x00000000004082bb : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406520 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000409d6e : add byte ptr [rax], al ; ret
0x000000000040b192 : add byte ptr [rax], al ; ret 0xffff
0x000000000040b3e2 : add byte ptr [rax], al ; test byte ptr [rax], al ; add byte ptr [rax], al ; call 0xffffffffe340b35e
0x000000000040b4c7 : add byte ptr [rax], bl ; mov edi, dr1 ; call qword ptr [rax]
0x000000000040b487 : add byte ptr [rax], cl ; jp 0x40b48e ; call qword ptr [rdi]
0x000000000040bb4f : add byte ptr [rax], dh ; mov ch, -1 ; jmp qword ptr [rdx]
0x00000000004082bc : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000406521 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040b483 : add byte ptr [rcx + rax], ah ; add byte ptr [rax], al ; or byte ptr [rdx - 1], bh ; call qword ptr [rdi]
0x000000000040b4c3 : add byte ptr [rcx + rax], ah ; add byte ptr [rax], bl ; mov edi, dr1 ; call qword ptr [rax]
0x0000000000409c0c : add byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x0000000000401b78 : add byte ptr [rcx], al ; ret
0x0000000000409438 : add byte ptr [rdi], cl ; lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000401bc1 : add byte ptr [rdi], cl ; test byte ptr [rdx], cl ; add byte ptr [rax], al ; add al, ch ; ret
0x0000000000405f30 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x00000000004048d4 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004071a0 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000404ba9 : add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x000000000040afcc : add byte ptr [rsi - 1], bh ; jmp rax
0x00000000004034dc : add cl, ch ; ret
0x000000000040943e : add cl, ch ; ret 2
0x00000000004088f9 : add dword ptr [rax - 0x77], ecx ; ret 0x8148
0x000000000040684f : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040b4c5 : add dword ptr [rax], eax ; add byte ptr [rax], bl ; mov edi, dr1 ; call qword ptr [rax]
0x000000000040b485 : add dword ptr [rax], eax ; add byte ptr [rax], cl ; jp 0x40b490 ; call qword ptr [rdi]
0x00000000004082ba : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040651f : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000409acd : add dword ptr [rax], ecx ; ret 0x840
0x0000000000402e81 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404a0c : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x000000000040b4c4 : add dword ptr fs:[rax], eax ; add byte ptr [rax], bl ; mov edi, dr1 ; call qword ptr [rax]
0x0000000000401b74 : add eax, 0x20b7be ; add ebx, esi ; ret
0x000000000040943b : add eax, 0xe9000000 ; ret 2
0x0000000000401b3b : add eax, edx ; sar rax, 1 ; jne 0x401b4c ; pop rbp ; ret
0x0000000000401b79 : add ebx, esi ; ret
0x0000000000401ccb : add esp, 0x10 ; pop rbp ; ret
0x000000000040976c : add esp, 0x130 ; pop rbp ; ret
0x00000000004085ec : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000402e86 : add esp, 0x20 ; pop rbp ; ret
0x0000000000401dad : add esp, 0x30 ; pop rbp ; ret
0x00000000004073b7 : add esp, 0x40 ; pop rbp ; ret
0x00000000004040cd : add esp, 0x4130 ; pop rbp ; ret
0x0000000000406c6c : add esp, 0x50 ; pop rbp ; ret
0x0000000000405143 : add esp, 0x70 ; pop rbp ; ret
0x0000000000404af9 : add esp, 0x90 ; pop rbp ; ret
0x0000000000408483 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040309f : add esp, 0xb0 ; pop rbp ; ret
0x0000000000401626 : add esp, 8 ; ret
0x0000000000401b3a : add rax, rdx ; sar rax, 1 ; jne 0x401b4d ; pop rbp ; ret
0x0000000000401cca : add rsp, 0x10 ; pop rbp ; ret
0x000000000040976b : add rsp, 0x130 ; pop rbp ; ret
0x00000000004085eb : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000402e85 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000401dac : add rsp, 0x30 ; pop rbp ; ret
0x00000000004073b6 : add rsp, 0x40 ; pop rbp ; ret
0x00000000004040cc : add rsp, 0x4130 ; pop rbp ; ret
0x0000000000406c6b : add rsp, 0x50 ; pop rbp ; ret
0x0000000000405142 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000404af8 : add rsp, 0x90 ; pop rbp ; ret
0x0000000000408482 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040309e : add rsp, 0xb0 ; pop rbp ; ret
0x0000000000401625 : add rsp, 8 ; ret
0x000000000040b484 : and al, 1 ; add byte ptr [rax], al ; or byte ptr [rdx - 1], bh ; call qword ptr [rdi]
0x0000000000404a0b : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401b77 : and byte ptr [rax], al ; add ebx, esi ; ret
0x00000000004043ff : and eax, 0x60d380 ; pop rbp ; ret
0x0000000000404423 : and eax, 0x60d388 ; pop rbp ; ret
0x00000000004053da : call 0x401662
0x0000000000405481 : call 0x401732
0x000000000040b3e8 : call 0xffffffffe340b358
0x000000000040b428 : call 0xffffffffe840b3a5
0x0000000000406559 : call 0xffffffffe902eea9
0x0000000000406558 : call 0xffffffffe902eeaa
0x0000000000409d49 : call qword ptr [r12 + rbx*8]
0x000000000040b30f : call qword ptr [rax]
0x000000000040b48b : call qword ptr [rdi]
0x000000000040b58b : call qword ptr [rsi]
0x0000000000409d4a : call qword ptr [rsp + rbx*8]
0x0000000000401b9d : call rax
0x00000000004062ac : call rbx
0x000000000040b82b : call rdi
0x000000000040976a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x000000000040415b : clc ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040433c : clc ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404af7 : clc ; add rsp, 0x90 ; pop rbp ; ret
0x0000000000401b3f : clc ; jne 0x401b48 ; pop rbp ; ret
0x00000000004040e6 : clc ; mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x00000000004049a5 : clc ; mov dword ptr [rax + 0x14], ecx ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404ff5 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000409c8f : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000409c92 : clc ; pop rbp ; ret
0x0000000000408c16 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408bb9 : cld ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000408d3e : cld ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000409c8c : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000408c13 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408bb6 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000408d3b : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401afd : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401b10 ; pop rbp ; ret
0x0000000000407dfc : cwde ; mov rcx, qword ptr [rax*8 + 0x40abc8] ; jmp rcx
0x00000000004037d3 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x000000000040220c : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040b197 : dec dword ptr [rax] ; or al, 0 ; add byte ptr [rax], al ; ret
0x0000000000402ff1 : dec dword ptr [rbx - 0x8b4b] ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000403050 : dec dword ptr [rbx - 0x9b4b] ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000405cb2 : dec dword ptr [rcx - 0x77] ; ret 0x294d
0x0000000000407e01 : enter 0x40ab, 0 ; jmp rcx
0x0000000000406040 : enter 0x4b05, 0x34 ; fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x000000000040c091 : fcos ; jmp rdx
0x00000000004037d0 : fdivr dword ptr [rdi - 0x76b70001] ; ret 0x2948
0x0000000000406044 : fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x0000000000409d4c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000401cc9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004048df : hlt ; mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401b10 : hlt ; pop rbp ; mov edi, 0x60d2d0 ; jmp rax
0x000000000040726e : in al, dx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402d77 : in al, dx ; pop rbp ; ret
0x00000000004062cb : inc dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x000000000040afc7 : inc eax ; add al, 0 ; add byte ptr [rax], al ; jle 0x40afd6 ; jmp rax
0x000000000040b0c7 : inc eax ; or byte ptr [rax], al ; add al, dh ; mov ch, -1 ; jmp rax
0x0000000000408425 : int 0x80
0x0000000000401b03 : ja 0x401b0a ; pop rbp ; ret
0x0000000000401b0f : je 0x401b0d ; pop rbp ; mov edi, 0x60d2d0 ; jmp rax
0x000000000040547f : jge 0x405455 ; call 0x401734
0x000000000040afcd : jle 0x40afd0 ; jmp rax
0x000000000040165b : jmp 0x401637
0x00000000004088f8 : jmp 0xffffffffc2c9d102
0x0000000000407a05 : jmp qword ptr [rax]
0x0000000000405746 : jmp qword ptr [rcx]
0x000000000040b913 : jmp qword ptr [rdx]
0x0000000000401b17 : jmp rax
0x000000000040bbf3 : jmp rbx
0x00000000004038ec : jmp rcx
0x000000000040b42b : jmp rdi
0x0000000000401b57 : jmp rdx
0x0000000000401b40 : jne 0x401b47 ; pop rbp ; ret
0x000000000040b429 : jne 0x40b42c ; jmp rdi
0x0000000000405145 : jo 0x4051a6 ; ret
0x000000000040676f : jo 0x4067d5 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406e14 : jo 0x406e75 ; ret
0x0000000000406f4e : jo 0x406faf ; ret
0x0000000000407c40 : jo 0x407ca1 ; ret
0x000000000040b489 : jp 0x40b48c ; call qword ptr [rdi]
0x000000000040943a : lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000403dc1 : lea esi, dword ptr [rax] ; mov edi, 0x8948ffff ; ret 0x2948
0x00000000004046ab : loopne 0x4046fb ; add esp, 0x20 ; pop rbp ; ret
0x00000000004046aa : loopne 0x4046fc ; add esp, 0x20 ; pop rbp ; ret
0x000000000040ba31 : mov ah, -1 ; jmp qword ptr [rax]
0x00000000004030a1 : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000406ceb : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000406b78 : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x00000000004097a6 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401b76 : mov bh, 0x20 ; add byte ptr [rcx], al ; ret
0x0000000000404421 : mov byte ptr [0x60d388], al ; pop rbp ; ret
0x00000000004040e7 : mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000402f98 : mov byte ptr [rbx - 0x76b77b8b], cl ; ret 0xb0
0x0000000000401b73 : mov byte ptr [rip + 0x20b7be], 1 ; ret
0x000000000040bb51 : mov ch, -1 ; jmp qword ptr [rdx]
0x000000000040b0cd : mov ch, -1 ; jmp rax
0x0000000000402e83 : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404a0e : mov dh, -0x40 ; pop rbp ; ret
0x000000000040b911 : mov dl, -1 ; jmp qword ptr [rdx]
0x000000000040b589 : mov dr1, edi ; call qword ptr [rsi]
0x00000000004043fd : mov dword ptr [0x60d380], edi ; pop rbp ; ret
0x00000000004049a6 : mov dword ptr [rax + 0x14], ecx ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404ff6 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000404fb8 : mov dword ptr [rax], eax ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000407c3b : mov dword ptr [rax], ecx ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000404e74 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000404fb7 : mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040439f : mov dword ptr [rbp - 0x10], ecx ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040726c : mov dword ptr [rbp - 0x14], eax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004046a9 : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401da9 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401cc7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000409c8d : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040506e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404e28 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040870b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404673 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404e25 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004043a3 : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000402d75 : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000408a03 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402bee : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404e6e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000404880 : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000404fba : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040513f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000406ce9 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004048e0 : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408c14 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408bb7 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000408d3c : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404159 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040433a : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000409c90 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000401b9b : mov ebp, esp ; call rax
0x0000000000401b01 : mov ebp, esp ; ja 0x401b0c ; pop rbp ; ret
0x000000000040843d : mov ecx, 0x5b2a830a ; ret
0x0000000000403ccd : mov ecx, dword ptr [rax*8 + 0x409de0] ; jmp rcx
0x00000000004038e5 : mov ecx, dword ptr [rax*8 + 0x409e08] ; jmp rcx
0x0000000000405202 : mov ecx, dword ptr [rax*8 + 0x40a6c0] ; jmp rcx
0x0000000000405526 : mov ecx, dword ptr [rax*8 + 0x40a708] ; jmp rcx
0x0000000000407dfe : mov ecx, dword ptr [rax*8 + 0x40abc8] ; jmp rcx
0x0000000000404e71 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401b95 : mov edi, 0x60ce20 ; mov rbp, rsp ; call rax
0x0000000000401b12 : mov edi, 0x60d2d0 ; jmp rax
0x0000000000401b52 : mov edi, 0x60d2d0 ; jmp rdx
0x00000000004037d1 : mov edi, 0x8948ffff ; ret 0x2948
0x000000000040b4c9 : mov edi, dr1 ; call qword ptr [rax]
0x000000000040547e : mov edi, dword ptr [rbp - 0x30] ; call 0x401735
0x0000000000409d47 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000409d46 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000401b75 : mov esi, 0x10020b7 ; ret
0x0000000000401b50 : mov esi, eax ; mov edi, 0x60d2d0 ; jmp rdx
0x00000000004043fc : mov qword ptr [0x60d380], rdi ; pop rbp ; ret
0x0000000000407c3a : mov qword ptr [rax], rcx ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040439e : mov qword ptr [rbp - 0x10], rcx ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040506d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406cea : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040870a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404672 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404e24 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004043a2 : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000408a02 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402bed : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040487f : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040513e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000406ce8 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000404158 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404339 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401b9a : mov rbp, rsp ; call rax
0x0000000000401b00 : mov rbp, rsp ; ja 0x401b0d ; pop rbp ; ret
0x0000000000403ccc : mov rcx, qword ptr [rax*8 + 0x409de0] ; jmp rcx
0x00000000004038e4 : mov rcx, qword ptr [rax*8 + 0x409e08] ; jmp rcx
0x0000000000405201 : mov rcx, qword ptr [rax*8 + 0x40a6c0] ; jmp rcx
0x0000000000405525 : mov rcx, qword ptr [rax*8 + 0x40a708] ; jmp rcx
0x0000000000407dfd : mov rcx, qword ptr [rax*8 + 0x40abc8] ; jmp rcx
0x000000000040547d : mov rdi, qword ptr [rbp - 0x30] ; call 0x401736
0x0000000000401b4f : mov rsi, rax ; mov edi, 0x60d2d0 ; jmp rdx
0x0000000000402e82 : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404a0d : movzx eax, al ; pop rbp ; ret
0x00000000004040ea : movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000409d68 : nop dword ptr [rax + rax] ; ret
0x000000000040b199 : or al, 0 ; add byte ptr [rax], al ; ret
0x000000000040588d : or al, 0x18 ; ret 0x6451
0x0000000000407dff : or al, 0xffffffffffffffc5 ; enter 0x40ab, 0 ; jmp rcx
0x000000000040b198 : or byte ptr [rax + rax], cl ; add byte ptr [rax], al ; ret
0x000000000040b0c9 : or byte ptr [rax], al ; add al, dh ; mov ch, -1 ; jmp rax
0x000000000040b488 : or byte ptr [rdx - 1], bh ; call qword ptr [rdi]
0x0000000000406ed1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004077b7 : out 0x20, al ; ret 0x8841
0x0000000000409d5c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000406771 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000409d5e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000406773 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000409d60 : pop r14 ; pop r15 ; ret
0x0000000000406523 : pop r14 ; pop rbp ; ret
0x0000000000406775 : pop r15 ; pop rbp ; ret
0x0000000000409d62 : pop r15 ; ret
0x0000000000401b72 : pop rbp ; mov byte ptr [rip + 0x20b7be], 1 ; ret
0x0000000000401b11 : pop rbp ; mov edi, 0x60d2d0 ; jmp rax
0x0000000000401b4e : pop rbp ; mov rsi, rax ; mov edi, 0x60d2d0 ; jmp rdx
0x0000000000409d5b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000409d5f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401b05 : pop rbp ; ret
0x0000000000406770 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004082bd : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406522 : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000408441 : pop rbx ; ret
0x0000000000406776 : pop rdi ; pop rbp ; ret
0x0000000000409d63 : pop rdi ; ret
0x0000000000406774 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000409d61 : pop rsi ; pop r15 ; ret
0x0000000000406524 : pop rsi ; pop rbp ; ret
0x0000000000402347 : pop rsi ; ret 0xf66
0x0000000000409d5d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000406772 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000404bac : pop rsp ; ret 0xf66
0x0000000000406c6e : push rax ; pop rbp ; ret
0x0000000000401b94 : push rbp ; mov edi, 0x60ce20 ; mov rbp, rsp ; call rax
0x0000000000401629 : ret
0x0000000000409672 : ret 0
0x0000000000402ab2 : ret 0x12ab
0x0000000000409686 : ret 0x148
0x000000000040690e : ret 0x1b2
0x000000000040362d : ret 0x1de8
0x0000000000401a62 : ret 0x20b7
0x0000000000401862 : ret 0x20b8
0x0000000000401662 : ret 0x20b9
0x0000000000402841 : ret 0x2145
0x00000000004037d6 : ret 0x2948
0x0000000000405c99 : ret 0x294c
0x0000000000405cb5 : ret 0x294d
0x0000000000402acd : ret 0x4248
0x000000000040322a : ret 0x50e8
0x0000000000404ef4 : ret 0x5589
0x0000000000402a9f : ret 0x6429
0x000000000040588f : ret 0x6451
0x0000000000407212 : ret 0x68e8
0x0000000000405ccd : ret 0x7de8
0x00000000004077c3 : ret 0x8041
0x00000000004079b0 : ret 0x8139
0x00000000004042c3 : ret 0x8148
0x0000000000409acf : ret 0x840
0x0000000000405f33 : ret 0x8840
0x00000000004077b9 : ret 0x8841
0x0000000000407db9 : ret 0x8844
0x0000000000403598 : ret 0x8948
0x0000000000405cb8 : ret 0x8949
0x0000000000405e4c : ret 0x89a5
0x0000000000405c9c : ret 0x8b48
0x000000000040220f : ret 0xb0
0x0000000000409679 : ret 0xb849
0x0000000000401b35 : ret 0xc148
0x00000000004093e0 : ret 0xc2f6
0x0000000000402302 : ret 0xca21
0x0000000000407a07 : ret 0xd088
0x00000000004048d7 : ret 0xd284
0x000000000040339e : ret 0xdce8
0x000000000040655c : ret 0xee8
0x000000000040498e : ret 0xf01
0x0000000000405f48 : ret 0xf180
0x0000000000402aec : ret 0xf229
0x00000000004093d3 : ret 0xf280
0x000000000040572e : ret 0xf281
0x0000000000403527 : ret 0xf3e8
0x0000000000402348 : ret 0xf66
0x00000000004053dc : ret 0xffff
0x0000000000406914 : ret 1
0x0000000000409440 : ret 2
0x0000000000404329 : ret 8
0x000000000040afc8 : rol byte ptr [rax + rax], 0 ; add byte ptr [rsi - 1], bh ; jmp rax
0x0000000000404fb6 : rol byte ptr [rcx + rcx*4], 1 ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040b008 : rol byte ptr [rip - 0x6bd00000], -1 ; jmp rax
0x0000000000408420 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000405140 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x4051ab ; ret
0x0000000000401b3c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401b4b ; pop rbp ; ret
0x0000000000408421 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000405c8d : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000405c96 : ror byte ptr [rax - 0x77], 1 ; ret 0x294c
0x0000000000405141 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x4051aa ; ret
0x000000000040b0c8 : ror byte ptr [rax], 0 ; add al, dh ; mov ch, -1 ; jmp rax
0x0000000000403915 : sar byte ptr [rdi - 0x76b70001], 1 ; ret 0x2948
0x0000000000401b3e : sar eax, 1 ; jne 0x401b49 ; pop rbp ; ret
0x0000000000401b3d : sar rax, 1 ; jne 0x401b4a ; pop rbp ; ret
0x0000000000404a08 : setne al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401b14 : shl byte ptr [rax], cl ; jmp rax
0x0000000000401b54 : shl byte ptr [rax], cl ; jmp rdx
0x0000000000404a0a : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000404d5c : shl dword ptr [rax], cl ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404401 : shl dword ptr [rax], cl ; pop rbp ; ret
0x0000000000404bbf : shl dword ptr [rsi + 0xf], 0x5c ; ret 0xf66
0x0000000000405480 : shr al, 1 ; stosb byte ptr [rdi], al ; ret 0xffff
0x00000000004097a8 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000405482 : stosb byte ptr [rdi], al ; ret 0xffff
0x000000000040843f : sub dword ptr [rdx], 0x5b ; ret
0x0000000000409dc1 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000409dc0 : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000402f9b : test byte ptr [rax - 0x77], cl ; ret 0xb0
0x0000000000409d6a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040b3e4 : test byte ptr [rax], al ; add byte ptr [rax], al ; call 0xffffffffe340b35c
0x0000000000401bc3 : test byte ptr [rdx], cl ; add byte ptr [rax], al ; add al, ch ; ret
0x0000000000405f32 : xchg eax, ebp ; ret 0x8840
0x00000000004048d6 : xchg eax, ebp ; ret 0xd284
0x0000000000404a09 : xchg eax, ebp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004071a2 : xchg eax, esp ; ret 0xd284
0x000000000040976e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000403dc2 : xor byte ptr [rdi - 0x76b70001], bh ; ret 0x2948
0x0000000000406c67 : xor eax, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x0000000000404fb5 : xor eax, edx ; mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
