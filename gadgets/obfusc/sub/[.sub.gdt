0x0000000000403791 : adc byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004065c9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004042a3 : add al, 0x25 ; pushfq ; shl byte ptr [rax], cl ; pop rbp ; ret
0x000000000040bea4 : add al, 3 ; add byte ptr [rax], al ; clc ; test edi, edi ; call qword ptr [rax]
0x000000000040c0a4 : add al, 5 ; add byte ptr [rax], al ; call 0xffffffffd840c041
0x000000000040c2af : add al, ah ; test al, -1 ; jmp qword ptr [rax]
0x000000000040bea7 : add al, bh ; test edi, edi ; call qword ptr [rax]
0x000000000040c7cf : add al, dl ; ret 0xffff
0x0000000000409dbf : add bl, dh ; ret
0x000000000040846d : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000406f6d : add byte ptr [rax - 0x77], cl ; jge 0x406f70 ; pop rbp ; ret
0x000000000040c80f : add byte ptr [rax], ah ; ret
0x000000000040bea2 : add byte ptr [rax], al ; add al, 3 ; add byte ptr [rax], al ; clc ; test edi, edi ; call qword ptr [rax]
0x000000000040c0a2 : add byte ptr [rax], al ; add al, 5 ; add byte ptr [rax], al ; call 0xffffffffd840c043
0x0000000000409dbd : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000406f6b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jge 0x406f72 ; pop rbp ; ret
0x0000000000409dbb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000400630 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000400632 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000407bf9 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000406f6a : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000040494b : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000409dbc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400634 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000409fa4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4038
0x000000000040234f : add byte ptr [rax], al ; add byte ptr [rcx + rax], ah ; movzx eax, al ; pop rbp ; ret
0x00000000004043bf : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xfa81
0x000000000040304a : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ror dword ptr [rdi], -0x61 ; ret 0xe280
0x0000000000405c6e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x00000000004041ca : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x9588
0x000000000040770d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x5588
0x0000000000406ede : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040435f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000040c809 : add byte ptr [rax], al ; add byte ptr [rsp + rcx], ch ; add byte ptr [rax], ah ; ret
0x000000000040c7e9 : add byte ptr [rax], al ; add byte ptr [rsp + rcx], cl ; add byte ptr [rax], al ; ret
0x000000000040921c : add byte ptr [rax], al ; add cl, ch ; ret 2
0x0000000000402324 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004062a0 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401233 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000402350 : add byte ptr [rax], al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040c0a6 : add byte ptr [rax], al ; call 0xffffffffd840c03f
0x000000000040bea6 : add byte ptr [rax], al ; clc ; test edi, edi ; call qword ptr [rax]
0x000000000040bc26 : add byte ptr [rax], al ; cmp byte ptr [rbp - 1], bl ; jmp rdx
0x000000000040c80a : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; or al, 0 ; add byte ptr [rax], ah ; ret
0x0000000000401449 : add byte ptr [rax], al ; jmp 0x401249
0x0000000000407bfb : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000406f6c : add byte ptr [rax], al ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000404b62 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040494d : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040bb5a : add byte ptr [rax], al ; nop ; out -1, al ; jmp qword ptr [rax]
0x000000000040c78e : add byte ptr [rax], al ; nop ; ret 0xffff
0x000000000040c7ea : add byte ptr [rax], al ; or al, 0 ; add byte ptr [rax], al ; ret
0x0000000000403793 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040830b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406260 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040b822 : add byte ptr [rax], al ; push rax ; mov edi, edi ; jmp qword ptr [rax]
0x0000000000409dbe : add byte ptr [rax], al ; ret
0x0000000000400636 : add byte ptr [rax], al ; ret 0
0x0000000000409fa6 : add byte ptr [rax], al ; ret 0x4038
0x000000000040ca4f : add byte ptr [rax], al ; sar bh, 1 ; jmp rdx
0x000000000040b7d2 : add byte ptr [rax], al ; shr byte ptr [rbx - 1], 1 ; jmp rax
0x000000000040bc22 : add byte ptr [rax], al ; test byte ptr [rax], al ; add byte ptr [rax], al ; cmp byte ptr [rbp - 1], bl ; jmp rdx
0x000000000040b9d3 : add byte ptr [rax], dl ; ret 0xffff
0x000000000040830c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000406261 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040bea3 : add byte ptr [rbx + rax], al ; add byte ptr [rax], al ; clc ; test edi, edi ; call qword ptr [rax]
0x0000000000402351 : add byte ptr [rcx + rax], ah ; movzx eax, al ; pop rbp ; ret
0x0000000000409c5c : add byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x00000000004016a8 : add byte ptr [rcx], al ; ret
0x00000000004043c1 : add byte ptr [rcx], al ; ret 0xfa81
0x000000000040304c : add byte ptr [rcx], bh ; ror dword ptr [rdi], -0x61 ; ret 0xe280
0x000000000040b820 : add byte ptr [rdi], al ; add byte ptr [rax], al ; push rax ; mov edi, edi ; jmp qword ptr [rax]
0x0000000000409218 : add byte ptr [rdi], cl ; lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000405c70 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x00000000004041cc : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x9588
0x000000000040770f : add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x5588
0x0000000000406ee0 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000404361 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000040c80b : add byte ptr [rsp + rcx], ch ; add byte ptr [rax], ah ; ret
0x000000000040c7eb : add byte ptr [rsp + rcx], cl ; add byte ptr [rax], al ; ret
0x000000000040921e : add cl, ch ; ret 2
0x0000000000409e3f : add dl, cl ; sbb eax, 0x40 ; add byte ptr [rax], al ; ret
0x0000000000408949 : add dword ptr [rax - 0x77], ecx ; ret 0x8148
0x000000000040658f : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040830a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040625f : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000401e21 : add dword ptr [rax], ecx ; ret 0x840
0x0000000000401f3e : add dword ptr [rcx + 0xf], eax ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000402a63 : add dword ptr [rdi], ecx ; mov dh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040209e : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401ee8 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402353 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004016a4 : add eax, 0x20bbde ; add ebx, esi ; ret
0x000000000040921b : add eax, 0xe9000000 ; ret 2
0x000000000040bea5 : add eax, dword ptr [rax] ; add al, bh ; test edi, edi ; call qword ptr [rax]
0x000000000040166b : add eax, edx ; sar rax, 1 ; jne 0x40167c ; pop rbp ; ret
0x00000000004016a9 : add ebx, esi ; ret
0x000000000040195b : add esp, 0x10 ; pop rbp ; ret
0x000000000040954c : add esp, 0x130 ; pop rbp ; ret
0x000000000040863c : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000401eed : add esp, 0x20 ; pop rbp ; ret
0x000000000040378f : add esp, 0x210 ; pop rbp ; ret
0x0000000000401a3d : add esp, 0x30 ; pop rbp ; ret
0x00000000004069ac : add esp, 0x50 ; pop rbp ; ret
0x0000000000404e83 : add esp, 0x70 ; pop rbp ; ret
0x00000000004068ba : add esp, 0x90 ; pop rbp ; ret
0x00000000004084d3 : add esp, 0xa0 ; pop rbp ; ret
0x0000000000404541 : add esp, 0xc0 ; pop rbp ; ret
0x0000000000404270 : add esp, 0xe0 ; pop rbp ; ret
0x0000000000401236 : add esp, 8 ; ret
0x000000000040166a : add rax, rdx ; sar rax, 1 ; jne 0x40167d ; pop rbp ; ret
0x000000000040195a : add rsp, 0x10 ; pop rbp ; ret
0x000000000040954b : add rsp, 0x130 ; pop rbp ; ret
0x000000000040863b : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000401eec : add rsp, 0x20 ; pop rbp ; ret
0x000000000040378e : add rsp, 0x210 ; pop rbp ; ret
0x0000000000401a3c : add rsp, 0x30 ; pop rbp ; ret
0x00000000004069ab : add rsp, 0x50 ; pop rbp ; ret
0x0000000000404e82 : add rsp, 0x70 ; pop rbp ; ret
0x00000000004068b9 : add rsp, 0x90 ; pop rbp ; ret
0x00000000004084d2 : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000404540 : add rsp, 0xc0 ; pop rbp ; ret
0x000000000040426f : add rsp, 0xe0 ; pop rbp ; ret
0x0000000000401235 : add rsp, 8 ; ret
0x0000000000407d4c : addps xmm1, xmm2 ; movaps xmm0, xmm1 ; pop rbp ; ret
0x0000000000407d4b : addsd xmm1, xmm2 ; movaps xmm0, xmm1 ; pop rbp ; ret
0x0000000000402352 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401f3c : and al, 1 ; movzx eax, r8b ; pop rbp ; ret
0x00000000004016a7 : and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000403eb2 : and ch, dl ; xor al, byte ptr [rcx - 0xf] ; jmp qword ptr [rcx]
0x0000000000404677 : and eax, 0x48ffffcc ; add esp, 0x10 ; pop rbp ; ret
0x0000000000401cd9 : and eax, 0x60d200 ; pop rbp ; ret
0x00000000004042a4 : and eax, 0x60d29c ; pop rbp ; ret
0x000000000040455f : and eax, 0x60d2a0 ; pop rbp ; ret
0x0000000000404583 : and eax, 0x60d2a8 ; pop rbp ; ret
0x0000000000401f3b : and r8b, 1 ; movzx eax, r8b ; pop rbp ; ret
0x0000000000407a69 : call 0x29723884
0x0000000000407a68 : call 0x29723885
0x0000000000405096 : call 0x401332
0x000000000040c0a8 : call 0xffffffffd840c03d
0x0000000000406299 : call 0xffffffffe902ebe9
0x0000000000406298 : call 0xffffffffe902ebea
0x0000000000405269 : call 0xffffffffff409320
0x0000000000409d99 : call qword ptr [r12 + rbx*8]
0x000000000040beab : call qword ptr [rax]
0x000000000040c413 : call qword ptr [rdx]
0x000000000040beeb : call qword ptr [rsi]
0x0000000000409d9a : call qword ptr [rsp + rbx*8]
0x00000000004016cd : call rax
0x0000000000405fec : call rbx
0x000000000040bdeb : call rdi
0x000000000040954a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x000000000040883f : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406ef1 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040166f : clc ; jne 0x401678 ; pop rbp ; ret
0x00000000004044a6 : clc ; mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x00000000004042a1 : clc ; mov dword ptr [0x60d29c], eax ; pop rbp ; ret
0x0000000000404d35 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000409cdf : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000406f0b : clc ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000406f4b : clc ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000406f2b : clc ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000406f71 : clc ; pop rbp ; ret
0x000000000040bea8 : clc ; test edi, edi ; call qword ptr [rax]
0x0000000000407bf8 : cld ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000409696 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408d2b : cld ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000408c6a : cld ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040795c : cld ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401cd6 : cld ; mov dword ptr [0x60d200], eax ; pop rbp ; ret
0x0000000000409cdc : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000409693 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000409636 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000408c67 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000407959 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000407bff : cld ; pop rbp ; ret
0x0000000000402322 : cmp al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000409fa1 : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4038
0x000000000040bc28 : cmp byte ptr [rbp - 1], bl ; jmp rdx
0x000000000040162d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401640 ; pop rbp ; ret
0x0000000000401231 : cmp eax, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000407e4c : cwde ; mov rcx, qword ptr [rax*8 + 0x40b3a8] ; jmp rcx
0x0000000000405264 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; call 0xffffffffff409325
0x0000000000409284 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x00000000004059f2 : dec dword ptr [rcx - 0x77] ; ret 0x294d
0x0000000000405d80 : enter 0x4b05, 0x34 ; fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x0000000000407d0f : enter 0x4d89, -0x14 ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000040442e : fiadd dword ptr [rcx - 0xe] ; jmp qword ptr [rcx]
0x0000000000403c07 : fiadd dword ptr [rcx - 0xf] ; jmp qword ptr [rcx]
0x0000000000405d84 : fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x00000000004016a5 : fidivr word ptr [rbx - 0xcfeffe0] ; ret
0x0000000000409d9c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000401959 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403c06 : hlt ; fiadd dword ptr [rcx - 0xf] ; jmp qword ptr [rcx]
0x0000000000401640 : hlt ; pop rbp ; mov edi, 0x60d260 ; jmp rax
0x0000000000408ff7 : imul eax ; ret
0x0000000000407d12 : in al, dx ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000407d15 : in al, dx ; pop rbp ; ret
0x00000000004024ce : inc dword ptr [rcx - 0x3475c10f] ; ret
0x000000000040600b : inc dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x000000000040c80c : insb byte ptr [rdi], dx ; or al, 0 ; add byte ptr [rax], ah ; ret
0x0000000000409fa0 : insd dword ptr [rdi], dx ; cmp byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4038
0x0000000000408475 : int 0x80
0x00000000004024d0 : int1 ; mov cl, bl ; ret
0x0000000000401633 : ja 0x40163a ; pop rbp ; ret
0x000000000040163f : je 0x40163d ; pop rbp ; mov edi, 0x60d260 ; jmp rax
0x0000000000405094 : jge 0x40502a ; call 0x401334
0x0000000000406f0a : jge 0x406f0b ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000406f2a : jge 0x406f2b ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000406f4a : jge 0x406f4b ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000406f70 : jge 0x406f6d ; pop rbp ; ret
0x000000000040144b : jmp 0x401247
0x0000000000408948 : jmp 0xffffffffc2c9d152
0x000000000040b7a7 : jmp qword ptr [rax]
0x000000000040c533 : jmp qword ptr [rbx]
0x00000000004024e2 : jmp qword ptr [rcx]
0x000000000040c193 : jmp qword ptr [rdx]
0x0000000000401647 : jmp rax
0x0000000000401d9b : jmp rcx
0x0000000000401687 : jmp rdx
0x0000000000401670 : jne 0x401677 ; pop rbp ; ret
0x0000000000402a3a : jnp 0x402a5f ; ret 0x8941
0x0000000000404e85 : jo 0x404ee6 ; ret
0x00000000004064af : jo 0x406515 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406b54 : jo 0x406bb5 ; ret
0x0000000000406c8e : jo 0x406cef ; ret
0x0000000000406f2f : jo 0x406f90 ; ret
0x0000000000406f2e : jo 0x406f91 ; ret
0x0000000000403c05 : jp 0x403c03 ; fiadd dword ptr [rcx - 0xf] ; jmp qword ptr [rcx]
0x0000000000403050 : lahf ; ret 0xe280
0x000000000040921a : lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x00000000004024d8 : leave ; mov cl, bl ; ret
0x0000000000401f3d : loopne 0x401f47 ; movzx eax, r8b ; pop rbp ; ret
0x0000000000404272 : loopne 0x404279 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000406a2b : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004068b8 : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x000000000040380a : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004097f6 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000404581 : mov byte ptr [0x60d2a8], al ; pop rbp ; ret
0x00000000004044a7 : mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x00000000004016a3 : mov byte ptr [rip + 0x20bbde], 1 ; ret
0x00000000004024d2 : mov cl, bl ; ret
0x0000000000407d0e : mov dh, -0x38 ; mov dword ptr [rbp - 0x14], ecx ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000402a65 : mov dh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004020a0 : mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401eea : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401f41 : mov dh, -0x40 ; pop rbp ; ret
0x0000000000401cd7 : mov dword ptr [0x60d200], eax ; pop rbp ; ret
0x00000000004042a2 : mov dword ptr [0x60d29c], eax ; pop rbp ; ret
0x000000000040455d : mov dword ptr [0x60d2a0], edi ; pop rbp ; ret
0x0000000000404d36 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000404cf8 : mov dword ptr [rax], eax ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000404bb4 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000404cf7 : mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000407d10 : mov dword ptr [rbp - 0x14], ecx ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000407caa : mov dword ptr [rbp - 0x24], eax ; mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x0000000000401a39 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040508f : mov dword ptr [rbp - 0x70], eax ; mov rdi, qword ptr [rbp - 0x70] ; call 0x401339
0x0000000000401957 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000409cdd : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000406f6f : mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x0000000000404dae : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404b68 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040875b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004047d3 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404b65 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000406f91 : mov eax, dword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040472f : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000407d13 : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000408a53 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404464 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404bae : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000404950 : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000407cad : mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x0000000000404cfa : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000404e7f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000406a29 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000409694 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408d29 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000408c68 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040795a : mov eax, dword ptr [rbp - 4] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000407bfd : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040883d : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406eef : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000409ce0 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000406f0d : mov eax, dword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000406f4d : mov eax, dword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000406f2d : mov eax, dword ptr [rdi + 0x70] ; pop rbp ; ret
0x00000000004016cb : mov ebp, esp ; call rax
0x0000000000401631 : mov ebp, esp ; ja 0x40163c ; pop rbp ; ret
0x00000000004016a6 : mov ebx, 0xf3010020 ; ret
0x000000000040848d : mov ecx, 0x5b2a830a ; ret
0x0000000000401d94 : mov ecx, dword ptr [rax*8 + 0x409e28] ; jmp rcx
0x0000000000403864 : mov ecx, dword ptr [rax*8 + 0x409e50] ; jmp rcx
0x0000000000404f42 : mov ecx, dword ptr [rax*8 + 0x40aea0] ; jmp rcx
0x0000000000405266 : mov ecx, dword ptr [rax*8 + 0x40aee8] ; jmp rcx
0x0000000000407e4e : mov ecx, dword ptr [rax*8 + 0x40b3a8] ; jmp rcx
0x0000000000404bb1 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004016c5 : mov edi, 0x60ce20 ; mov rbp, rsp ; call rax
0x0000000000401642 : mov edi, 0x60d260 ; jmp rax
0x0000000000401682 : mov edi, 0x60d260 ; jmp rdx
0x0000000000405093 : mov edi, dword ptr [rbp - 0x70] ; call 0x401335
0x0000000000406f09 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000406f49 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000406f29 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000409d97 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000040b825 : mov edi, edi ; jmp qword ptr [rax]
0x0000000000409d96 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000406f95 : mov edx, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000407a6b : mov esi, 0x1f02931 ; ret 0x5589
0x0000000000401680 : mov esi, eax ; mov edi, 0x60d260 ; jmp rdx
0x000000000040455c : mov qword ptr [0x60d2a0], rdi ; pop rbp ; ret
0x0000000000406f6e : mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000404dad : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406a2a : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040875a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004047d2 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404b64 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000406f90 : mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040472e : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000408a52 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404463 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040494f : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000404e7e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000406a28 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040883c : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406eee : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406f0c : mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000406f4c : mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000406f2c : mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x00000000004016ca : mov rbp, rsp ; call rax
0x0000000000401630 : mov rbp, rsp ; ja 0x40163d ; pop rbp ; ret
0x0000000000401d93 : mov rcx, qword ptr [rax*8 + 0x409e28] ; jmp rcx
0x0000000000403863 : mov rcx, qword ptr [rax*8 + 0x409e50] ; jmp rcx
0x0000000000404f41 : mov rcx, qword ptr [rax*8 + 0x40aea0] ; jmp rcx
0x0000000000405265 : mov rcx, qword ptr [rax*8 + 0x40aee8] ; jmp rcx
0x0000000000407e4d : mov rcx, qword ptr [rax*8 + 0x40b3a8] ; jmp rcx
0x0000000000405092 : mov rdi, qword ptr [rbp - 0x70] ; call 0x401336
0x0000000000406f08 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000406f48 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000406f28 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000406f94 : mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040167f : mov rsi, rax ; mov edi, 0x60d260 ; jmp rdx
0x0000000000407d4f : movaps xmm0, xmm1 ; pop rbp ; ret
0x000000000040209f : movzx eax, al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401ee9 : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401f40 : movzx eax, al ; pop rbp ; ret
0x00000000004044aa : movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000402a64 : movzx eax, cl ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401f3f : movzx eax, r8b ; pop rbp ; ret
0x0000000000405095 : nop ; call 0x401333
0x0000000000405091 : nop ; mov rdi, qword ptr [rbp - 0x70] ; call 0x401337
0x000000000040bb5c : nop ; out -1, al ; jmp qword ptr [rax]
0x000000000040c790 : nop ; ret 0xffff
0x0000000000409db8 : nop dword ptr [rax + rax] ; ret
0x000000000040c7cd : or al, 0 ; add al, dl ; ret 0xffff
0x000000000040c80d : or al, 0 ; add byte ptr [rax], ah ; ret
0x000000000040c7ed : or al, 0 ; add byte ptr [rax], al ; ret
0x00000000004055cd : or al, 0x18 ; ret 0x6451
0x0000000000405267 : or al, 0xffffffffffffffc5 ; call 0xffffffffff409322
0x0000000000407032 : or al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040435b : or byte ptr [rcx + 0x2df9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000406c11 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040bb5d : out -1, al ; jmp qword ptr [rax]
0x0000000000409dac : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004064b1 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000409dae : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004064b3 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000409db0 : pop r14 ; pop r15 ; ret
0x0000000000406263 : pop r14 ; pop rbp ; ret
0x00000000004064b5 : pop r15 ; pop rbp ; ret
0x0000000000409db2 : pop r15 ; ret
0x00000000004016a2 : pop rbp ; mov byte ptr [rip + 0x20bbde], 1 ; ret
0x0000000000401641 : pop rbp ; mov edi, 0x60d260 ; jmp rax
0x000000000040167e : pop rbp ; mov rsi, rax ; mov edi, 0x60d260 ; jmp rdx
0x0000000000409dab : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000409daf : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401635 : pop rbp ; ret
0x00000000004064b0 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040830d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406262 : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000408491 : pop rbx ; ret
0x00000000004064b6 : pop rdi ; pop rbp ; ret
0x0000000000409db3 : pop rdi ; ret
0x00000000004064b4 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000409db1 : pop rsi ; pop r15 ; ret
0x0000000000406264 : pop rsi ; pop rbp ; ret
0x0000000000409dad : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004064b2 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403c04 : popfq ; jp 0x403c04 ; fiadd dword ptr [rcx - 0xf] ; jmp qword ptr [rcx]
0x0000000000406f0e : push r8 ; pop rbp ; ret
0x000000000040b824 : push rax ; mov edi, edi ; jmp qword ptr [rax]
0x00000000004069ae : push rax ; pop rbp ; ret
0x000000000040442b : push rax ; sub al, -0x1d ; fiadd dword ptr [rcx - 0xe] ; jmp qword ptr [rcx]
0x0000000000406f96 : push rbp ; clc ; pop rbp ; ret
0x00000000004016c4 : push rbp ; mov edi, 0x60ce20 ; mov rbp, rsp ; call rax
0x00000000004042a5 : pushfq ; shl byte ptr [rax], cl ; pop rbp ; ret
0x000000000040028f : ret
0x0000000000400638 : ret 0
0x0000000000409466 : ret 0x148
0x0000000000401f18 : ret 0x1489
0x0000000000407864 : ret 0x1a46
0x00000000004075a6 : ret 0x1a8
0x000000000040664e : ret 0x1b2
0x0000000000405a0d : ret 0x1de8
0x0000000000401452 : ret 0x20bc
0x0000000000401242 : ret 0x20bd
0x00000000004047b5 : ret 0x2948
0x00000000004059d9 : ret 0x294c
0x00000000004059f5 : ret 0x294d
0x0000000000403332 : ret 0x2d7b
0x0000000000409fa8 : ret 0x4038
0x00000000004075a3 : ret 0x458a
0x000000000040333c : ret 0x487b
0x000000000040438f : ret 0x48c4
0x0000000000407712 : ret 0x5588
0x0000000000404c34 : ret 0x5589
0x00000000004055cf : ret 0x6451
0x0000000000402409 : ret 0x8141
0x000000000040894c : ret 0x8148
0x0000000000401e23 : ret 0x840
0x0000000000407590 : ret 0x840f
0x0000000000403057 : ret 0x8589
0x0000000000405c73 : ret 0x8840
0x0000000000407e09 : ret 0x8844
0x0000000000402a3c : ret 0x8941
0x0000000000408960 : ret 0x8948
0x00000000004059f8 : ret 0x8949
0x0000000000405b8c : ret 0x89a5
0x0000000000403842 : ret 0x89b9
0x00000000004059dc : ret 0x8b48
0x00000000004041cf : ret 0x9588
0x0000000000407bb5 : ret 0xaa60
0x0000000000409459 : ret 0xb849
0x0000000000401665 : ret 0xc148
0x000000000040702e : ret 0xc189
0x00000000004091c0 : ret 0xc2f6
0x0000000000403d91 : ret 0xca21
0x0000000000402191 : ret 0xca29
0x0000000000406ee3 : ret 0xd284
0x000000000040214d : ret 0xe280
0x00000000004071d3 : ret 0xea81
0x000000000040629c : ret 0xee8
0x0000000000405c88 : ret 0xf180
0x0000000000401e07 : ret 0xf280
0x0000000000403b5f : ret 0xf281
0x00000000004043c3 : ret 0xfa81
0x0000000000405098 : ret 0xffff
0x0000000000406654 : ret 1
0x0000000000409220 : ret 2
0x0000000000404cf6 : rol byte ptr [rcx + rcx*4], 1 ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040b7d0 : rol byte ptr [rip + 0x6bd00000], -1 ; jmp rax
0x0000000000408470 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000404e80 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x404eeb ; ret
0x000000000040166c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40167b ; pop rbp ; ret
0x0000000000408471 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x00000000004059cd : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x00000000004059d6 : ror byte ptr [rax - 0x77], 1 ; ret 0x294c
0x0000000000404e81 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x404eea ; ret
0x000000000040378d : ror byte ptr [rax - 0x7f], -0x3c ; adc byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040426e : ror byte ptr [rax - 0x7f], -0x3c ; loopne 0x40427d ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040304e : ror dword ptr [rdi], -0x61 ; ret 0xe280
0x0000000000407862 : sahf ; ret 0x1a46
0x0000000000407d4a : sal dl, 1 ; addps xmm1, xmm2 ; movaps xmm0, xmm1 ; pop rbp ; ret
0x000000000040ca51 : sar bh, 1 ; jmp rdx
0x000000000040cb89 : sar bh, cl ; call qword ptr [rax]
0x000000000040166e : sar eax, 1 ; jne 0x401679 ; pop rbp ; ret
0x000000000040166d : sar rax, 1 ; jne 0x40167a ; pop rbp ; ret
0x000000000040c808 : sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; or al, 0 ; add byte ptr [rax], ah ; ret
0x000000000040c7e8 : sbb al, 0 ; add byte ptr [rax], al ; or al, 0 ; add byte ptr [rax], al ; ret
0x0000000000409e41 : sbb eax, 0x40 ; add byte ptr [rax], al ; ret
0x0000000000404a9c : shl byte ptr [rax], cl ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401644 : shl byte ptr [rax], cl ; jmp rax
0x0000000000401684 : shl byte ptr [rax], cl ; jmp rdx
0x0000000000401cdb : shl byte ptr [rax], cl ; pop rbp ; ret
0x000000000040b7d4 : shr byte ptr [rbx - 1], 1 ; jmp rax
0x000000000040435d : stc ; sub eax, 0xf000000 ; xchg eax, esp ; ret 0xe280
0x00000000004097f8 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040442c : sub al, -0x1d ; fiadd dword ptr [rcx - 0xe] ; jmp qword ptr [rcx]
0x0000000000407d50 : sub cl, al ; pop rbp ; ret
0x000000000040848f : sub dword ptr [rdx], 0x5b ; ret
0x000000000040435e : sub eax, 0xf000000 ; xchg eax, esp ; ret 0xe280
0x0000000000409e11 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000409e10 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040c2b1 : test al, -1 ; jmp qword ptr [rax]
0x0000000000409dba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040bc24 : test byte ptr [rax], al ; add byte ptr [rax], al ; cmp byte ptr [rbp - 1], bl ; jmp rdx
0x000000000040bea9 : test edi, edi ; call qword ptr [rax]
0x000000000040bee9 : xchg bh, bh ; call qword ptr [rsi]
0x0000000000405c72 : xchg eax, ebp ; ret 0x8840
0x00000000004041ce : xchg eax, ebp ; ret 0x9588
0x0000000000405097 : xchg eax, ebp ; ret 0xffff
0x0000000000407711 : xchg eax, esi ; ret 0x5588
0x0000000000406ee2 : xchg eax, esp ; ret 0xd284
0x0000000000404363 : xchg eax, esp ; ret 0xe280
0x0000000000405090 : xchg eax, r8d ; mov rdi, qword ptr [rbp - 0x70] ; call 0x401338
0x0000000000403eb4 : xor al, byte ptr [rcx - 0xf] ; jmp qword ptr [rcx]
0x000000000040954e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004069a7 : xor eax, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x0000000000404cf5 : xor eax, edx ; mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
