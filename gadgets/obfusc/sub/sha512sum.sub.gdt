0x0000000000421cbe : adc ah, byte ptr [rcx + rbx*2] ; ret
0x0000000000402c5d : adc al, 0x43 ; add byte ptr [rax - 0x77], cl ; ret 0x98e8
0x0000000000402c09 : adc al, 0x43 ; add byte ptr [rax - 0x77], cl ; ret 0xece8
0x0000000000432609 : adc byte ptr [rax], al ; add al, dh ; jrcxz 0x432614 ; call qword ptr [rax]
0x00000000004325f9 : adc byte ptr [rax], al ; add al, dh ; loop 0x432604 ; call rax
0x000000000042404e : adc byte ptr [rbx], cl ; ret 0x8948
0x000000000042403e : adc byte ptr [rbx], cl ; ret 0x8949
0x000000000042409c : adc byte ptr [rbx], cl ; ret 0x949
0x0000000000417cd4 : adc byte ptr [rip + 0x4c3b7001], 0x21 ; ret 0xb849
0x0000000000405ca5 : adc byte ptr [rsi + 0x4c0a7478], -0x77 ; ret
0x000000000042814e : adc byte ptr [rsp + rbx*2 + 0x49], 0x29 ; ret
0x000000000042815e : adc byte ptr [rsp + rbx*2 + 0x49], 1 ; ret
0x0000000000402cb1 : adc eax, 0x89480043 ; ret 0x44e8
0x0000000000425c52 : adc eax, 0x894c9a7e ; ret
0x000000000042dd89 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004328c1 : adc ebp, edi ; call qword ptr [rsi]
0x0000000000418c6e : adc esp, dword ptr [rdi - 0x76b33f94] ; ret
0x000000000043299b : add ah, ah ; add al, byte ptr [rax] ; add byte ptr [rax + 0x15], ah ; std ; jmp rsi
0x0000000000432fb3 : add ah, bh ; or byte ptr [rax], al ; add al, cl ; mov ch, -1 ; jmp qword ptr [rdx]
0x0000000000401d8b : add al, 0x25 ; ret
0x0000000000401d38 : add al, 0x25 ; ret 0x6342
0x00000000004328bc : add al, 2 ; add byte ptr [rax], al ; push rax ; adc ebp, edi ; call qword ptr [rsi]
0x0000000000432503 : add al, al ; ret 0xffff
0x00000000004328bd : add al, byte ptr [rax] ; add byte ptr [rax + 0x11], dl ; std ; call qword ptr [rsi]
0x000000000043299d : add al, byte ptr [rax] ; add byte ptr [rax + 0x15], ah ; std ; jmp rsi
0x0000000000401f81 : add al, ch ; mov ecx, 0xf6fffff8 ; add al, 0x25 ; ret 0x6342
0x000000000042ebd8 : add al, ch ; ret 0xfd29
0x0000000000432fb7 : add al, cl ; mov ch, -1 ; jmp qword ptr [rdx]
0x000000000043260b : add al, dh ; jrcxz 0x432612 ; call qword ptr [rax]
0x00000000004325fb : add al, dh ; loop 0x432602 ; call rax
0x000000000043250b : add al, dh ; ret 0xffff
0x0000000000430b6f : add bl, dh ; ret
0x0000000000402cb2 : add byte ptr [r8 - 0x77], cl ; ret 0x44e8
0x0000000000402c5e : add byte ptr [r8 - 0x77], cl ; ret 0x98e8
0x0000000000402c0a : add byte ptr [r8 - 0x77], cl ; ret 0xece8
0x0000000000402a2a : add byte ptr [r8], r8b ; add dh, dh ; add al, 0x25 ; ret 0x6342
0x00000000004328bf : add byte ptr [rax + 0x11], dl ; std ; call qword ptr [rsi]
0x000000000043299f : add byte ptr [rax + 0x15], ah ; std ; jmp rsi
0x0000000000402d2c : add byte ptr [rax + 0x2504f601], dh ; ret
0x000000000043273b : add byte ptr [rax + rax - 0xd500000], al ; cld ; jmp rdx
0x00000000004326d3 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; cwde ; in al, dx ; cld ; jmp rax
0x00000000004049a7 : add byte ptr [rax - 0x46], cl ; mov ebx, 0xd0fb93d9 ; ret 0x68c2
0x000000000042bb2a : add byte ptr [rax - 0x75], cl ; push rbp ; call 0x59053c82
0x000000000042edfd : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000402cb3 : add byte ptr [rax - 0x77], cl ; ret 0x44e8
0x0000000000402c5f : add byte ptr [rax - 0x77], cl ; ret 0x98e8
0x0000000000402c0b : add byte ptr [rax - 0x77], cl ; ret 0xece8
0x000000000042bb35 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000004324eb : add byte ptr [rax], ah ; ret 0xffff
0x00000000004328ba : add byte ptr [rax], al ; add al, 2 ; add byte ptr [rax], al ; push rax ; adc ebp, edi ; call qword ptr [rsi]
0x0000000000430b6d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000402d2a : add byte ptr [rax], al ; add byte ptr [rax + 0x2504f601], dh ; ret
0x000000000042bb28 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbp ; call 0x59053c84
0x000000000042bb33 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000430b6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000403c07 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000430b6c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040511e : add byte ptr [rax], al ; add byte ptr [rcx - 0x11b43], al ; call qword ptr [rax]
0x0000000000402ab8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000402308 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042e69e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004024c9 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000043023c : add byte ptr [rax], al ; add cl, ch ; ret 2
0x0000000000401d87 : add byte ptr [rax], al ; add dh, al ; add al, 0x25 ; ret
0x0000000000402a2b : add byte ptr [rax], al ; add dh, dh ; add al, 0x25 ; ret 0x6342
0x0000000000402443 : add byte ptr [rax], al ; add rsi, rax ; mov rax, rsi ; pop rbp ; ret
0x000000000042dd51 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042da60 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040135b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000432fb2 : add byte ptr [rax], al ; cld ; or byte ptr [rax], al ; add al, cl ; mov ch, -1 ; jmp qword ptr [rdx]
0x00000000004326d6 : add byte ptr [rax], al ; cwde ; in al, dx ; cld ; jmp rax
0x000000000043263a : add byte ptr [rax], al ; in eax, -1 ; call rax
0x00000000004322c6 : add byte ptr [rax], al ; ja 0x4322d3 ; add byte ptr [rax], al ; mov al, -0x10 ; cld ; call qword ptr [rax]
0x0000000000401519 : add byte ptr [rax], al ; jmp 0x401379
0x00000000004322ca : add byte ptr [rax], al ; mov al, -0x10 ; cld ; call qword ptr [rax]
0x000000000043273e : add byte ptr [rax], al ; mov al, -0xe ; cld ; jmp rdx
0x0000000000432d72 : add byte ptr [rax], al ; mov esp, 0x58000006 ; mov bl, -1 ; jmp qword ptr [rdx]
0x000000000042c322 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004325ca : add byte ptr [rax], al ; nop ; fdivr st(7) ; call qword ptr [rax]
0x00000000004322d2 : add byte ptr [rax], al ; nop ; hlt ; cld ; jmp rax
0x00000000004324fa : add byte ptr [rax], al ; nop ; ret 0xffff
0x0000000000432d76 : add byte ptr [rax], al ; pop rax ; mov bl, -1 ; jmp qword ptr [rdx]
0x0000000000402d78 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000042ec9b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042da20 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004328be : add byte ptr [rax], al ; push rax ; adc ebp, edi ; call qword ptr [rsi]
0x0000000000430b6e : add byte ptr [rax], al ; ret
0x00000000004326d2 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; cwde ; in al, dx ; cld ; jmp rax
0x000000000043273a : add byte ptr [rax], al ; test byte ptr [rax], al ; add byte ptr [rax], al ; mov al, -0xe ; cld ; jmp rdx
0x00000000004331f7 : add byte ptr [rax], bh ; ret 0xffff
0x00000000004331d7 : add byte ptr [rax], bl ; ret 0xffff
0x000000000043258b : add byte ptr [rax], dh ; sar edi, 1 ; call qword ptr [rax]
0x000000000042ec9c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000042da21 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x00000000004023c2 : add byte ptr [rbx - 0x1234b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000405120 : add byte ptr [rcx - 0x11b43], al ; call qword ptr [rax]
0x0000000000430a0c : add byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x0000000000401808 : add byte ptr [rcx], al ; ret
0x0000000000430238 : add byte ptr [rdi], cl ; lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000402aba : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x000000000040230a : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042e6a0 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004024cb : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x00000000004322c7 : add byte ptr [rdi], dh ; add byte ptr [rax], al ; mov al, -0x10 ; cld ; call qword ptr [rax]
0x00000000004017a3 : add byte ptr [rdx + 0x63], 0 ; jmp rax
0x00000000004017e3 : add byte ptr [rdx + 0x63], 0 ; jmp rdx
0x00000000004328bb : add byte ptr [rdx + rax], al ; add byte ptr [rax], al ; push rax ; adc ebp, edi ; call qword ptr [rsi]
0x0000000000416f92 : add cl, byte ptr [rbp + 9] ; ret 0x8148
0x0000000000414a35 : add cl, byte ptr [rcx + 0x21] ; fisttp dword ptr [rax - 0x45] ; cmp byte ptr [rax], ch ; jmp 0x414a0b
0x0000000000425209 : add cl, byte ptr [rcx + 0x29] ; ret 0x149
0x000000000041b4ac : add cl, byte ptr [rcx + 1] ; ret 0x8b48
0x000000000043023e : add cl, ch ; ret 2
0x0000000000401d89 : add dh, al ; add al, 0x25 ; ret
0x0000000000401d36 : add dh, al ; add al, 0x25 ; ret 0x6342
0x0000000000402a2d : add dh, dh ; add al, 0x25 ; ret 0x6342
0x00000000004028f4 : add dword ptr [rax - 0x77], ecx ; ret 0x2948
0x000000000042f2d9 : add dword ptr [rax - 0x77], ecx ; ret 0x8148
0x000000000042dd4f : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042ec9a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000042da1f : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x00000000004308cd : add dword ptr [rax], ecx ; ret 0x840
0x0000000000403544 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402ee4 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040346b : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004305aa : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401804 : add eax, 0x232aae ; add ebx, esi ; ret
0x000000000043023b : add eax, 0xe9000000 ; ret 2
0x0000000000404a92 : add eax, 0xecae37b7 ; sbb byte ptr [rcx - 0x77], cl ; ret
0x00000000004017cb : add eax, edx ; sar rax, 1 ; jne 0x4017dc ; pop rbp ; ret
0x0000000000401809 : add ebx, esi ; ret
0x0000000000407a65 : add ecx, dword ptr [rbp + 9] ; ret 0x8148
0x000000000042597c : add ecx, dword ptr [rcx + 0x29] ; ret 0xb848
0x0000000000401d84 : add ecx, ebp ; wait ; add byte ptr [rax], al ; add dh, al ; add al, 0x25 ; ret
0x0000000000401d5f : add esi, eax ; add al, 0x25 ; ret 0x6342
0x0000000000402446 : add esi, eax ; mov rax, rsi ; pop rbp ; ret
0x0000000000402d2e : add esi, esi ; add al, 0x25 ; ret
0x00000000004019eb : add esp, 0x10 ; pop rbp ; ret
0x000000000043056c : add esp, 0x130 ; pop rbp ; ret
0x0000000000402d74 : add esp, 0x150 ; pop rbp ; ret
0x000000000042bdab : add esp, 0x170 ; pop rbp ; ret
0x0000000000404f95 : add esp, 0x1a0 ; pop rbp ; ret
0x000000000042f9ae : add esp, 0x1e0 ; pop rbp ; ret
0x0000000000403549 : add esp, 0x20 ; pop rbp ; ret
0x00000000004042dc : add esp, 0x28 ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000401acd : add esp, 0x30 ; pop rbp ; ret
0x0000000000402ee9 : add esp, 0x40 ; pop rbp ; ret
0x000000000042e16c : add esp, 0x50 ; pop rbp ; ret
0x0000000000403470 : add esp, 0x60 ; pop rbp ; ret
0x000000000042c643 : add esp, 0x70 ; pop rbp ; ret
0x000000000042e07a : add esp, 0x90 ; pop rbp ; ret
0x000000000042ee63 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040135e : add esp, 8 ; ret
0x00000000004017ca : add rax, rdx ; sar rax, 1 ; jne 0x4017dd ; pop rbp ; ret
0x0000000000402445 : add rsi, rax ; mov rax, rsi ; pop rbp ; ret
0x00000000004019ea : add rsp, 0x10 ; pop rbp ; ret
0x000000000043056b : add rsp, 0x130 ; pop rbp ; ret
0x0000000000402d73 : add rsp, 0x150 ; pop rbp ; ret
0x000000000042bdaa : add rsp, 0x170 ; pop rbp ; ret
0x0000000000404f94 : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000042f9ad : add rsp, 0x1e0 ; pop rbp ; ret
0x0000000000403548 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000401acc : add rsp, 0x30 ; pop rbp ; ret
0x0000000000402ee8 : add rsp, 0x40 ; pop rbp ; ret
0x000000000042e16b : add rsp, 0x50 ; pop rbp ; ret
0x000000000040346f : add rsp, 0x60 ; pop rbp ; ret
0x000000000042c642 : add rsp, 0x70 ; pop rbp ; ret
0x000000000042e079 : add rsp, 0x90 ; pop rbp ; ret
0x000000000042ee62 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040135d : add rsp, 8 ; ret
0x0000000000421cbf : and al, 0x59 ; ret
0x00000000004305a9 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000416498 : and byte ptr [rax - 0x25], bh ; push rcx ; psrad mm6, qword ptr [rcx + rcx*2 + 0x29] ; ret 0x8b48
0x0000000000416488 : and byte ptr [rax - 0x25], bh ; push rcx ; psrad mm6, qword ptr [rcx + rcx*2 + 1] ; ret 0x149
0x0000000000404d73 : and byte ptr [rbx + 0x41], bl ; pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000416f8f : and byte ptr [rbx + 0x94d0248], bl ; ret 0x8148
0x0000000000429bfc : and byte ptr [rcx + 0x29], cl ; ret 0xb848
0x0000000000429bec : and byte ptr [rcx + 1], cl ; ret 0x149
0x0000000000425c4f : and byte ptr [rdx - 0x51], al ; adc eax, 0x894c9a7e ; ret
0x00000000004031bc : and cl, byte ptr [r8 + 0x29] ; ret 0x8b48
0x00000000004031ac : and cl, byte ptr [r8 + 1] ; ret 0x2948
0x00000000004031bd : and cl, byte ptr [rax + 0x29] ; ret 0x8b48
0x00000000004031ad : and cl, byte ptr [rax + 1] ; ret 0x2948
0x0000000000410066 : and cl, byte ptr [rcx + 0x29] ; ror dword ptr [rax - 0x48], 0x3e ; mov ah, 0x28 ; ret 0x294c
0x000000000040359a : and dword ptr [rax + 0x29], ecx ; ret 0x8148
0x00000000004035ae : and dword ptr [rax + 1], ecx ; ret 0x8948
0x0000000000420cd6 : and dword ptr [rbx + 0x6a], 0x894ce4d2 ; ret
0x0000000000418e91 : and dword ptr [rdi], edx ; stosb byte ptr [rdi], al ; call 0xffffffffc2965c96
0x0000000000418ea1 : and dword ptr [rdi], edx ; stosb byte ptr [rdi], al ; call 0xffffffffc2965ca6
0x0000000000418eb4 : and dword ptr [rdi], edx ; stosb byte ptr [rdi], al ; call 0xffffffffc2965cb9
0x0000000000418eda : and dword ptr [rdi], edx ; stosb byte ptr [rdi], al ; call 0xffffffffc2965cdf
0x0000000000403a5b : and eax, 0x634290 ; call 0x42fca7
0x0000000000401d31 : and eax, 0x6342c1 ; add dh, al ; add al, 0x25 ; ret 0x6342
0x0000000000401d5a : and eax, 0x6342c1 ; add esi, eax ; add al, 0x25 ; ret 0x6342
0x0000000000403a1f : and eax, 0x6342e0 ; pop rbp ; ret
0x0000000000403a43 : and eax, 0x6342e8 ; pop rbp ; ret
0x000000000040a241 : and eax, 0x894c034b ; ret
0x0000000000401807 : and eax, dword ptr [rax] ; add ebx, esi ; ret
0x000000000040b60b : and ebp, edx ; ret 0xb18a
0x0000000000416aa8 : and ecx, dword ptr [rcx + 0x29] ; ret
0x0000000000416ab8 : and ecx, dword ptr [rcx + 1] ; ret
0x0000000000401f82 : call 0x401848
0x0000000000403a60 : call 0x42fca2
0x0000000000425611 : call 0x4a2a18a8
0x0000000000425604 : call 0x4d2a189b
0x000000000042562e : call 0x4e2a18c5
0x000000000042b853 : call 0x590539a3
0x000000000042ba85 : call 0x59053bd5
0x000000000042bb2e : call 0x59053c7e
0x0000000000414382 : call 0xffffffffc2428c38
0x0000000000414392 : call 0xffffffffc26a8c48
0x0000000000418e94 : call 0xffffffffc2965c93
0x0000000000418ea4 : call 0xffffffffc2965ca3
0x0000000000418eb7 : call 0xffffffffc2965cb6
0x0000000000418edd : call 0xffffffffc2965cdc
0x0000000000404855 : call 0xffffffffc2c99086
0x000000000040bedb : call 0xffffffffc3ca0821
0x0000000000415942 : call 0xffffffffc3caa288
0x0000000000416188 : call 0xffffffffc3caaace
0x000000000041791f : call 0xffffffffc3cac265
0x0000000000425ea0 : call 0xffffffffc3cba7e6
0x0000000000426dc4 : call 0xffffffffc3cbb70a
0x0000000000429a65 : call 0xffffffffc3cbe276
0x0000000000429a0f : call 0xffffffffc4115661
0x000000000042da59 : call 0xffffffffe90563a9
0x000000000042da58 : call 0xffffffffe90563aa
0x0000000000430b49 : call qword ptr [r12 + rbx*8]
0x0000000000405126 : call qword ptr [rax]
0x000000000041f859 : call qword ptr [rdx]
0x00000000004328c3 : call qword ptr [rsi]
0x0000000000430b4a : call qword ptr [rsp + rbx*8]
0x000000000040182d : call rax
0x000000000040c828 : call rbx
0x0000000000432c93 : call rdi
0x000000000040b238 : call rdx
0x0000000000414dca : cdq ; mov ecx, 0x894cfef8 ; ret
0x000000000043056a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x000000000042f1cf : clc ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042e6b1 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x000000000042c118 : clc ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000416ba7 : clc ; idiv bh ; dec dword ptr [rax + 0x29] ; ret 0x8b48
0x0000000000413b60 : clc ; idiv edi ; dec dword ptr [rax + 0x29] ; ret 0x8b48
0x00000000004017cf : clc ; jne 0x4017d8 ; pop rbp ; ret
0x000000000040f93c : clc ; lea edi, dword ptr ds:[rbx + 0x1498392] ; ret 0x149
0x000000000040f94c : clc ; lea edi, dword ptr ds:[rbx + 0x29498392] ; ret 0x8b48
0x000000000042c4f5 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000430a8f : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402457 : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000403eef : clc ; mov rdi, qword ptr [rbp - 0x10] ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x000000000040245b : clc ; pop rbp ; ret
0x0000000000431802 : clc ; sal byte ptr [rax - 0x75], 1 ; ret 0xbe30
0x000000000042fa16 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404f93 : cld ; add rsp, 0x1a0 ; pop rbp ; ret
0x000000000042f599 : cld ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042fb3e : cld ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004322ce : cld ; call qword ptr [rax]
0x0000000000427e3f : cld ; dec byte ptr [rbp + 9] ; ret 0x8148
0x000000000041b53b : cld ; fisttp word ptr [rax + 0x29] ; ret 0x14c
0x000000000041b54b : cld ; fisttp word ptr [rax + 1] ; ret 0x8948
0x00000000004322d6 : cld ; jmp rax
0x0000000000432742 : cld ; jmp rdx
0x0000000000430a8c : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000042fa13 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042f596 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042fb3b : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000432fb4 : cld ; or byte ptr [rax], al ; add al, cl ; mov ch, -1 ; jmp qword ptr [rdx]
0x0000000000427e3d : cld ; or esp, edi ; dec byte ptr [rbp + 9] ; ret 0x8148
0x00000000004041e4 : cld ; pop rbx ; out 3, al ; jmp 0xffffffffc3c98a99
0x000000000041b4a6 : cli ; or al, 0xffffffffffffffc0 ; xchg eax, ecx ; out -0x32, eax ; add cl, byte ptr [rcx + 1] ; ret 0x8b48
0x0000000000427344 : cli ; ret
0x0000000000415867 : cmovge ecx, dword ptr [rcx] ; ret 0x8148
0x00000000004171ef : cmp ah, dh ; ret 0x7b6a
0x0000000000414a2e : cmp byte ptr [rax], ch ; jmp 0x4149f8
0x0000000000414a3b : cmp byte ptr [rax], ch ; jmp 0x414a05
0x0000000000414a55 : cmp byte ptr [rax], ch ; jmp 0x414a1f
0x000000000042f899 : cmp dword ptr [rdx - 0x76be63d5], ebx ; ret
0x00000000004199f5 : cmp dword ptr [rsi], eax ; mov ah, byte ptr [rax + rsi*8 - 0x7e] ; hlt ; ret
0x000000000041e2a8 : cmp eax, 0x894c30a4 ; ret
0x000000000040178d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4017a0 ; pop rbp ; ret
0x0000000000418b9f : cmp ecx, dword ptr [rax + 0x29] ; ret 0x8948
0x0000000000418b8f : cmp ecx, dword ptr [rax + 1] ; ret 0x14c
0x0000000000402cb0 : cmp edx, dword ptr [rip - 0x76b7ffbd] ; ret 0x44e8
0x0000000000415c6b : cmpsb byte ptr [rsi], byte ptr [rdi] ; mov dl, -0x4d ; push rbx ; mov edx, 0x894c087e ; ret
0x0000000000427cc8 : cwde ; hlt ; jae 0x427d20 ; ret 0x23f8
0x0000000000427cd8 : cwde ; hlt ; jae 0x427d30 ; ret 0x23f8
0x0000000000427ceb : cwde ; hlt ; jae 0x427d43 ; ret 0x23f8
0x0000000000427d11 : cwde ; hlt ; jae 0x427d69 ; ret 0x23f8
0x0000000000414b59 : cwde ; idiv edi ; dec dword ptr [rax + 0x29] ; ret 0x8b48
0x00000000004326d8 : cwde ; in al, dx ; cld ; jmp rax
0x000000000042e7dc : cwde ; mov rcx, qword ptr [rax*8 + 0x431f08] ; jmp rcx
0x000000000040e5f1 : dec byte ptr [rax - 0x41] ; ret 0x7483
0x000000000040b23e : dec byte ptr [rax - 0x41] ; xor dh, byte ptr [rcx] ; xchg eax, ebp ; call rdx
0x0000000000412c8e : dec byte ptr [rax - 0x77] ; ret 0x2948
0x0000000000427e40 : dec byte ptr [rbp + 9] ; ret 0x8148
0x000000000040494b : dec byte ptr [rbp - 0x77] ; ret
0x000000000040db6d : dec dword ptr [rax + 0x21] ; ret
0x00000000004052f7 : dec dword ptr [rax + 0x21] ; ret 0x8b48
0x000000000041311d : dec dword ptr [rax + 0x29] ; ret
0x0000000000420168 : dec dword ptr [rax + 0x29] ; ret 0x8948
0x000000000040b8f2 : dec dword ptr [rax + 0x29] ; ret 0x8b48
0x00000000004181e6 : dec dword ptr [rax + 9] ; ret
0x0000000000412916 : dec dword ptr [rax - 0x3f] ; jmp 0xffffffffc3ca712d
0x000000000042491a : dec dword ptr [rax - 0x3f] ; jmp 0xffffffffc3cb9231
0x000000000040e5e4 : dec dword ptr [rax - 0x41] ; ret 0x7483
0x000000000040b231 : dec dword ptr [rax - 0x41] ; xor dh, byte ptr [rcx] ; xchg eax, ebp ; call rdx
0x0000000000421d04 : dec dword ptr [rax - 0x42] ; adc ah, byte ptr [rcx + rbx*2] ; ret
0x0000000000427341 : dec dword ptr [rax - 0x42] ; cli ; ret
0x000000000041d923 : dec dword ptr [rax - 0x42] ; jmp qword ptr [rax]
0x00000000004054b4 : dec dword ptr [rax - 0x42] ; jrcxz 0x40545c ; ret
0x000000000042a64a : dec dword ptr [rax - 0x42] ; mov ebp, 0x8087b8f ; ret
0x000000000040698b : dec dword ptr [rax - 0x42] ; ret
0x0000000000420180 : dec dword ptr [rax - 0x42] ; ret 0x3cfb
0x0000000000427ba6 : dec dword ptr [rax - 0x42] ; ret 0xe54b
0x0000000000427d0d : dec dword ptr [rax - 0x42] ; test al, -0x68 ; hlt ; jae 0x427d6d ; ret 0x23f8
0x000000000041761e : dec dword ptr [rax - 0x42] ; xor al, 0xffffffffffffffb7 ; ret
0x0000000000421cbb : dec dword ptr [rax - 0x45] ; adc ah, byte ptr [rcx + rbx*2] ; ret
0x000000000040b608 : dec dword ptr [rax - 0x45] ; and ebp, edx ; ret 0xb18a
0x0000000000414a2b : dec dword ptr [rax - 0x45] ; cmp byte ptr [rax], ch ; jmp 0x4149fb
0x000000000041fdfa : dec dword ptr [rax - 0x45] ; jns 0x41fe10 ; test al, 0x6f ; ret
0x000000000042a601 : dec dword ptr [rax - 0x45] ; mov ebp, 0x8087b8f ; ret
0x000000000041a20b : dec dword ptr [rax - 0x45] ; outsd dx, dword ptr [rsi] ; ret 0x9f22
0x00000000004203ce : dec dword ptr [rax - 0x45] ; ret
0x0000000000427b5d : dec dword ptr [rax - 0x45] ; ret 0xe54b
0x00000000004239a7 : dec dword ptr [rax - 0x45] ; stosd dword ptr [rdi], eax ; xchg eax, edi ; ret
0x00000000004175d5 : dec dword ptr [rax - 0x45] ; xor al, 0xffffffffffffffb7 ; ret
0x00000000004193aa : dec dword ptr [rax - 0x46] ; mov dh, -0x40 ; movsb byte ptr [rdi], byte ptr [rsi] ; leave ; ret
0x000000000040666f : dec dword ptr [rax - 0x46] ; ret
0x0000000000415ca0 : dec dword ptr [rax - 0x46] ; ret 0xb2a6
0x000000000040e3b7 : dec dword ptr [rax - 0x46] ; ret 0xb604
0x000000000041bd40 : dec dword ptr [rax - 0x46] ; ret 0xca0d
0x0000000000417221 : dec dword ptr [rax - 0x48] ; mov ebp, 0xe63a2580 ; ret 0x7b6a
0x0000000000417075 : dec dword ptr [rax - 0x48] ; ret 0x64f0
0x0000000000416160 : dec dword ptr [rax - 0x48] ; ret 0xfee1
0x00000000004247f4 : dec dword ptr [rax - 0x48] ; xchg eax, ebp ; out -0x4b, al ; ret
0x000000000042ca24 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; sbb al, byte ptr [rbx] ; jmp rcx
0x000000000040d32b : dec dword ptr [rax - 0x77] ; ret
0x00000000004022c0 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x00000000004051a5 : dec dword ptr [rax - 0x77] ; ret 0x8148
0x0000000000402c27 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x00000000004023c8 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040c1a6 : dec dword ptr [rbp + 0x29] ; ret
0x0000000000410733 : dec dword ptr [rbp - 0x77] ; fimul dword ptr [rcx + 0x21] ; ret 0x8149
0x000000000040569e : dec dword ptr [rbp - 0x77] ; ret
0x00000000004160c4 : dec dword ptr [rbp - 0x77] ; ret 0x2149
0x000000000040556f : dec dword ptr [rbp - 0x77] ; ret 0x214d
0x0000000000404719 : dec dword ptr [rbp - 0x77] ; ret 0x8149
0x0000000000414164 : dec dword ptr [rbp - 0x77] ; ror dword ptr [rcx + 0x21], cl ; ret
0x000000000040da39 : dec dword ptr [rcx + 0x21] ; ret
0x0000000000410039 : dec dword ptr [rcx + 0x29] ; ret
0x0000000000410812 : dec dword ptr [rcx + 0x29] ; ret 0x14c
0x000000000040cab6 : dec dword ptr [rcx + 0x29] ; ret 0x8b48
0x00000000004200cc : dec dword ptr [rcx + 0x29] ; ret 0xb848
0x000000000040aef8 : dec dword ptr [rcx + 1] ; ret
0x000000000041bcd0 : dec dword ptr [rcx + 1] ; ret 0x149
0x000000000040ae6d : dec dword ptr [rcx + 9] ; ret
0x00000000004289a6 : dec dword ptr [rcx + 9] ; ret 0x214d
0x000000000040bed8 : dec dword ptr [rcx - 0x3f] ; call 0xffffffffc3ca0824
0x000000000041593f : dec dword ptr [rcx - 0x3f] ; call 0xffffffffc3caa28b
0x0000000000416185 : dec dword ptr [rcx - 0x3f] ; call 0xffffffffc3caaad1
0x000000000041791c : dec dword ptr [rcx - 0x3f] ; call 0xffffffffc3cac268
0x0000000000425e9d : dec dword ptr [rcx - 0x3f] ; call 0xffffffffc3cba7e9
0x0000000000426dc1 : dec dword ptr [rcx - 0x3f] ; call 0xffffffffc3cbb70d
0x000000000040f68f : dec dword ptr [rcx - 0x3f] ; jmp 0xffffffffc3ca3fdb
0x000000000040feee : dec dword ptr [rcx - 0x3f] ; jmp 0xffffffffc3ca483a
0x0000000000415166 : dec dword ptr [rcx - 0x3f] ; jmp 0xffffffffc3ca9ab2
0x000000000041c265 : dec dword ptr [rcx - 0x3f] ; jmp 0xffffffffc3cb0bb1
0x0000000000420f73 : dec dword ptr [rcx - 0x3f] ; jmp 0xffffffffc3cb58bf
0x0000000000424f9c : dec dword ptr [rcx - 0x3f] ; jmp 0xffffffffc3cb98e8
0x000000000040b632 : dec dword ptr [rcx - 0x41] ; and ebp, edx ; ret 0xb18a
0x0000000000414a52 : dec dword ptr [rcx - 0x41] ; cmp byte ptr [rax], ch ; jmp 0x414a22
0x00000000004171e9 : dec dword ptr [rcx - 0x41] ; mov ebp, 0xe63a2580 ; ret 0x7b6a
0x0000000000423820 : dec dword ptr [rcx - 0x41] ; ret
0x0000000000417025 : dec dword ptr [rcx - 0x41] ; ret 0x64f0
0x0000000000416110 : dec dword ptr [rcx - 0x41] ; ret 0xfee1
0x00000000004239d5 : dec dword ptr [rcx - 0x41] ; stosd dword ptr [rdi], eax ; xchg eax, edi ; ret
0x000000000041cb08 : dec dword ptr [rcx - 0x41] ; xor dword ptr [rsi], edi ; ret 0x93b3
0x000000000042479d : dec dword ptr [rcx - 0x42] ; xchg eax, ebp ; out -0x4b, al ; ret
0x000000000040e60e : dec dword ptr [rcx - 0x45] ; ret 0x7483
0x0000000000427cc4 : dec dword ptr [rcx - 0x45] ; test al, -0x68 ; hlt ; jae 0x427d24 ; ret 0x23f8
0x000000000041cade : dec dword ptr [rcx - 0x45] ; xor dword ptr [rsi], edi ; ret 0x93b3
0x0000000000425627 : dec dword ptr [rcx - 0x46] ; fsub dword ptr [rdi] ; xchg eax, edx ; push rax ; call 0x4e2a18cc
0x0000000000423cce : dec dword ptr [rcx - 0x46] ; hlt ; ret
0x0000000000419ebb : dec dword ptr [rcx - 0x46] ; ja 0x419e46 ; ret 0x29a8
0x000000000041fdd0 : dec dword ptr [rcx - 0x46] ; jns 0x41fde6 ; test al, 0x6f ; ret
0x000000000041a1e1 : dec dword ptr [rcx - 0x46] ; outsd dx, dword ptr [rsi] ; ret 0x9f22
0x0000000000406942 : dec dword ptr [rcx - 0x46] ; ret
0x0000000000415c57 : dec dword ptr [rcx - 0x46] ; ret 0xb2a6
0x000000000040e36e : dec dword ptr [rcx - 0x46] ; ret 0xb604
0x00000000004054de : dec dword ptr [rcx - 0x47] ; jrcxz 0x405486 ; ret
0x0000000000419361 : dec dword ptr [rcx - 0x47] ; mov dh, -0x40 ; movsb byte ptr [rdi], byte ptr [rsi] ; leave ; ret
0x0000000000406082 : dec dword ptr [rcx - 0x47] ; ret
0x000000000040b25b : dec dword ptr [rcx - 0x47] ; xor dh, byte ptr [rcx] ; xchg eax, ebp ; call rdx
0x00000000004255fd : dec dword ptr [rcx - 0x48] ; fsub dword ptr [rdi] ; xchg eax, edx ; push rax ; call 0x4d2a18a2
0x0000000000423ca4 : dec dword ptr [rcx - 0x48] ; hlt ; ret
0x0000000000419e91 : dec dword ptr [rcx - 0x48] ; ja 0x419e1c ; ret 0x29a8
0x000000000042a106 : dec dword ptr [rcx - 0x48] ; ret
0x000000000040ad68 : dec dword ptr [rcx - 0x77] ; ret
0x000000000040e12d : dec dword ptr [rcx - 0x77] ; ret 0x2149
0x000000000042d1b2 : dec dword ptr [rcx - 0x77] ; ret 0x294d
0x000000000042781c : enter -0x46b8, -0x54 ; ret
0x0000000000410079 : enter -0x47b8, 0x3e ; mov ah, 0x28 ; ret 0x294c
0x0000000000418b9e : enter 0x483b, 0x29 ; ret 0x8948
0x0000000000418b8e : enter 0x483b, 1 ; ret 0x14c
0x000000000040afb0 : enter 0x48a1, 0x29 ; ret 0x148
0x000000000040afc0 : enter 0x48a1, 1 ; ret 0x8948
0x000000000042d540 : enter 0x4b05, 0x34 ; fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x000000000040e6d2 : fcmove st(0), st(6) ; movsb byte ptr [rdi], byte ptr [rsi] ; push 0x94deb4a ; ret 0x8148
0x0000000000421b94 : fdiv dword ptr [rdx - 0x76b30258] ; ret
0x00000000004325cd : fdivr st(7) ; call qword ptr [rax]
0x000000000042d544 : fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x000000000042784d : ficom dword ptr [rbx - 0x3a] ; mov ah, byte ptr [rcx + 0x7a] ; or dword ptr [rcx + 0x29], ecx ; ret
0x000000000042783d : ficom dword ptr [rbx - 0x3a] ; mov ah, byte ptr [rcx + 0x7a] ; or dword ptr [rcx + 1], ecx ; ret
0x0000000000422947 : ficomp word ptr [rcx + 0x294916cd] ; ret 0xb848
0x000000000040b645 : fimul dword ptr [rax + 9] ; ret
0x0000000000416e68 : fimul dword ptr [rax + 9] ; ror dword ptr [rax - 0x77], cl ; ret 0x2948
0x000000000040b615 : fimul dword ptr [rax - 0x45] ; and ebp, edx ; ret 0xb18a
0x0000000000410736 : fimul dword ptr [rcx + 0x21] ; ret 0x8149
0x00000000004110d9 : fimul dword ptr [rcx + 0x29] ; ret 0xb848
0x00000000004110c9 : fimul dword ptr [rcx + 1] ; ret 0x149
0x0000000000415c7a : fimul dword ptr [rcx - 0x46] ; ret 0xb2a6
0x000000000040e391 : fimul dword ptr [rcx - 0x46] ; ret 0xb604
0x0000000000421ccb : fimul word ptr [rax - 0x45] ; adc ah, byte ptr [rcx + rbx*2] ; ret
0x000000000042a611 : fimul word ptr [rax - 0x45] ; mov ebp, 0x8087b8f ; ret
0x00000000004203de : fimul word ptr [rax - 0x45] ; ret
0x0000000000427b6d : fimul word ptr [rax - 0x45] ; ret 0xe54b
0x00000000004175e5 : fimul word ptr [rax - 0x45] ; xor al, 0xffffffffffffffb7 ; ret
0x00000000004047fc : fimul word ptr [rax - 0x76b35f6f] ; ret
0x00000000004047d9 : fimul word ptr [rax - 0x76b65f6f] ; ret 0x314d
0x000000000040b521 : fimul word ptr [rbp - 0x77] ; ret 0x8149
0x0000000000427ce7 : fimul word ptr [rcx - 0x45] ; test al, -0x68 ; hlt ; jae 0x427d47 ; ret 0x23f8
0x0000000000406965 : fimul word ptr [rcx - 0x46] ; ret
0x0000000000425a30 : fisttp dword ptr [rax + 0x29] ; ret 0x148
0x0000000000425a40 : fisttp dword ptr [rax + 1] ; ret 0x8948
0x0000000000414a38 : fisttp dword ptr [rax - 0x45] ; cmp byte ptr [rax], ch ; jmp 0x414a08
0x00000000004239b4 : fisttp dword ptr [rax - 0x45] ; stosd dword ptr [rdi], eax ; xchg eax, edi ; ret
0x000000000040bfd8 : fisttp dword ptr [rcx + 0x21] ; fisttp qword ptr [rbp - 0x77] ; ret
0x000000000040bf8c : fisttp dword ptr [rcx + 0x21] ; fmul qword ptr [rcx - 0x77] ; ret
0x0000000000427cd4 : fisttp dword ptr [rcx - 0x45] ; test al, -0x68 ; hlt ; jae 0x427d34 ; ret 0x23f8
0x000000000040bfdb : fisttp qword ptr [rbp - 0x77] ; ret
0x000000000041b53c : fisttp word ptr [rax + 0x29] ; ret 0x14c
0x000000000041b54c : fisttp word ptr [rax + 1] ; ret 0x8948
0x0000000000410dfc : fisttp word ptr [rbp - 0x77] ; ret 0x8149
0x000000000042a119 : fisttp word ptr [rcx - 0x48] ; ret
0x0000000000404a91 : fld dword ptr [rip - 0x1351c849] ; sbb byte ptr [rcx - 0x77], cl ; ret
0x000000000040db49 : fmul dword ptr [rax + 9] ; ret
0x00000000004049b8 : fmul dword ptr [rax - 0x7f] ; ret 0x58
0x0000000000412990 : fmul dword ptr [rcx + 0x29] ; ret 0x8b48
0x000000000040e8d4 : fmul dword ptr [rcx + 0x29] ; ret 0xb848
0x000000000041caeb : fmul dword ptr [rcx - 0x45] ; xor dword ptr [rsi], edi ; ret 0x93b3
0x0000000000430b4c : fmul qword ptr [rax - 0x7d] ; ret
0x000000000040bf8f : fmul qword ptr [rcx - 0x77] ; ret
0x000000000042560d : fsub dword ptr [rdi] ; xchg eax, edx ; push rax ; call 0x4a2a18ac
0x0000000000425600 : fsub dword ptr [rdi] ; xchg eax, edx ; push rax ; call 0x4d2a189f
0x000000000042562a : fsub dword ptr [rdi] ; xchg eax, edx ; push rax ; call 0x4e2a18c9
0x00000000004019e9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004322d5 : hlt ; cld ; jmp rax
0x0000000000427cc9 : hlt ; jae 0x427d1f ; ret 0x23f8
0x0000000000427cd9 : hlt ; jae 0x427d2f ; ret 0x23f8
0x0000000000427cec : hlt ; jae 0x427d42 ; ret 0x23f8
0x0000000000427d12 : hlt ; jae 0x427d68 ; ret 0x23f8
0x00000000004017a0 : hlt ; pop rbp ; mov edi, 0x634280 ; jmp rax
0x00000000004199fb : hlt ; ret
0x00000000004227aa : hlt ; ret 0x49ea
0x00000000004227d4 : hlt ; ret 0x4cea
0x0000000000417aaa : idiv bh ; dec dword ptr [rax + 0x29] ; ret
0x0000000000416ba8 : idiv bh ; dec dword ptr [rax + 0x29] ; ret 0x8b48
0x00000000004181e4 : idiv bh ; dec dword ptr [rax + 9] ; ret
0x000000000041732d : idiv bh ; dec dword ptr [rcx + 0x29] ; ret 0x8b48
0x0000000000418b99 : idiv byte ptr [rsi - 0x372fa0ce] ; cmp ecx, dword ptr [rax + 0x29] ; ret 0x8948
0x0000000000418b89 : idiv byte ptr [rsi - 0x372fa0ce] ; cmp ecx, dword ptr [rax + 1] ; ret 0x14c
0x0000000000413b61 : idiv edi ; dec dword ptr [rax + 0x29] ; ret 0x8b48
0x000000000041642d : idiv edi ; dec dword ptr [rbp + 0x29] ; ret
0x0000000000414a96 : idiv edi ; dec dword ptr [rcx + 0x29] ; ret
0x00000000004138e3 : idiv edi ; dec dword ptr [rcx + 9] ; ret
0x0000000000425979 : imul edi, esi, -0x7d ; add ecx, dword ptr [rcx + 0x29] ; ret 0xb848
0x0000000000431788 : in al, 0xe ; out dx, eax ; mov esi, 0xbf597fc7 ; ret 0xa88f
0x00000000004326d9 : in al, dx ; cld ; jmp rax
0x0000000000404a96 : in al, dx ; sbb byte ptr [rcx - 0x77], cl ; ret
0x0000000000404155 : in eax, -0x55 ; mov cl, byte ptr [rbp + 9] ; ret 0x8148
0x0000000000404142 : in eax, -0x55 ; mov cl, byte ptr [rcx - 0x77] ; ret 0x314d
0x000000000043263d : in eax, -1 ; call rax
0x00000000004221a5 : in eax, 0x22 ; ret 0x73ea
0x000000000040afbb : in eax, 0x7a ; out dx, al ; or byte ptr [rsi + 0x148a1c8], cl ; ret 0x8948
0x000000000040afab : in eax, 0x7a ; out dx, al ; or byte ptr [rsi + 0x2948a1c8], cl ; ret 0x148
0x000000000040494a : in eax, dx ; dec byte ptr [rbp - 0x77] ; ret
0x00000000004317e2 : in eax, dx ; leave ; ret 0x3b81
0x0000000000402306 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042d7cb : inc dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x00000000004227a8 : inc esp ; hlt ; ret 0x49ea
0x00000000004227d2 : inc esp ; hlt ; ret 0x4cea
0x000000000042949f : insb byte ptr [rdi], dx ; xchg eax, edi ; outsd dx, dword ptr [rsi] ; ret 0x34c0
0x0000000000429be9 : insd dword ptr [rdi], dx ; js 0x429ba5 ; and byte ptr [rcx + 1], cl ; ret 0x149
0x0000000000429bf9 : insd dword ptr [rdi], dx ; js 0x429bb5 ; and byte ptr [rcx + 0x29], cl ; ret 0xb848
0x00000000004182a6 : int 0x45
0x000000000042ee05 : int 0x80
0x000000000041c1f5 : int 0xc5
0x000000000041b537 : int1 ; push rsi ; sbb al, 0x7b ; cld ; fisttp word ptr [rax + 0x29] ; ret 0x14c
0x000000000041b547 : int1 ; push rsi ; sbb al, 0x7b ; cld ; fisttp word ptr [rax + 1] ; ret 0x8948
0x0000000000401793 : ja 0x40179a ; pop rbp ; ret
0x0000000000419e94 : ja 0x419e19 ; ret 0x29a8
0x0000000000419ea1 : ja 0x419e26 ; ret 0x29a8
0x0000000000419ebe : ja 0x419e43 ; ret 0x29a8
0x00000000004322c8 : ja 0x4322d1 ; add byte ptr [rax], al ; mov al, -0x10 ; cld ; call qword ptr [rax]
0x0000000000427cca : jae 0x427d1e ; ret 0x23f8
0x0000000000427cda : jae 0x427d2e ; ret 0x23f8
0x0000000000427ced : jae 0x427d41 ; ret 0x23f8
0x0000000000427d13 : jae 0x427d67 ; ret 0x23f8
0x00000000004317df : jbe 0x4317ce ; scasb al, byte ptr [rdi] ; in eax, dx ; leave ; ret 0x3b81
0x000000000040179f : je 0x40179d ; pop rbp ; mov edi, 0x634280 ; jmp rax
0x00000000004222ab : je 0x4222da ; mov bl, byte ptr [rip + 0x29482714] ; ret 0x14c
0x00000000004222bb : je 0x4222ea ; mov bl, byte ptr [rip + 0x1482714] ; ret 0x8948
0x0000000000422945 : je 0x422904 ; ficomp word ptr [rcx + 0x294916cd] ; ret 0xb848
0x0000000000402456 : jge 0x402457 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000403ef2 : jge 0x403eea ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x0000000000405ca3 : jle 0x405d11 ; adc byte ptr [rsi + 0x4c0a7478], -0x77 ; ret
0x00000000004282f5 : jmp 0x1045eda3
0x000000000040151b : jmp 0x401377
0x0000000000401d85 : jmp 0x401e2d
0x0000000000402a29 : jmp 0x402a83
0x000000000040f0d7 : jmp 0x40f08d
0x000000000040f0e7 : jmp 0x40f09d
0x0000000000414a30 : jmp 0x4149f6
0x0000000000414a3d : jmp 0x414a03
0x0000000000414a57 : jmp 0x414a1d
0x000000000041bb83 : jmp 0x41bbd3
0x000000000042f2d8 : jmp 0xffffffffc2cc3ae2
0x00000000004041e8 : jmp 0xffffffffc3c98a95
0x000000000040f692 : jmp 0xffffffffc3ca3fd8
0x000000000040fef1 : jmp 0xffffffffc3ca4837
0x000000000040ffdb : jmp 0xffffffffc3ca48ec
0x0000000000412919 : jmp 0xffffffffc3ca712a
0x0000000000412ee1 : jmp 0xffffffffc3ca7827
0x0000000000415169 : jmp 0xffffffffc3ca9aaf
0x00000000004190f8 : jmp 0xffffffffc3cada3e
0x000000000041c268 : jmp 0xffffffffc3cb0bae
0x0000000000420f76 : jmp 0xffffffffc3cb58bc
0x0000000000422f45 : jmp 0xffffffffc3cb788b
0x000000000042491d : jmp 0xffffffffc3cb922e
0x0000000000424f9f : jmp 0xffffffffc3cb98e5
0x000000000042b183 : jmp 0xffffffffc3cbfac9
0x00000000004032b7 : jmp qword ptr [rax]
0x0000000000402114 : jmp qword ptr [rcx]
0x0000000000432d7b : jmp qword ptr [rdx]
0x0000000000422cf3 : jmp qword ptr [rip - 0x3c76b3bd]
0x00000000004017a7 : jmp rax
0x0000000000401d10 : jmp rcx
0x00000000004017e7 : jmp rdx
0x00000000004329a3 : jmp rsi
0x00000000004017d0 : jne 0x4017d7 ; pop rbp ; ret
0x0000000000419743 : jno 0x419778 ; mov word ptr [rax], cs ; mov cl, -0x79 ; ret
0x0000000000419753 : jno 0x419788 ; mov word ptr [rax], cs ; mov cl, -0x79 ; ret
0x0000000000419766 : jno 0x41979b ; mov word ptr [rax], cs ; mov cl, -0x79 ; ret
0x000000000041978c : jno 0x4197c1 ; mov word ptr [rax], cs ; mov cl, -0x79 ; ret
0x0000000000425207 : jno 0x425225 ; add cl, byte ptr [rcx + 0x29] ; ret 0x149
0x0000000000425217 : jno 0x425235 ; add cl, byte ptr [rcx + 1] ; ret 0x8b48
0x000000000041b53a : jnp 0x41b53d ; fisttp word ptr [rax + 0x29] ; ret 0x14c
0x000000000041b54a : jnp 0x41b54d ; fisttp word ptr [rax + 1] ; ret 0x8948
0x000000000040413e : jns 0x4041a1 ; loop 0x40411a ; in eax, -0x55 ; mov cl, byte ptr [rcx - 0x77] ; ret 0x314d
0x0000000000404151 : jns 0x4041b4 ; loop 0x40412d ; in eax, -0x55 ; mov cl, byte ptr [rbp + 9] ; ret 0x8148
0x0000000000419742 : jns 0x4197bc ; sub eax, 0x87b1088c ; ret
0x0000000000419752 : jns 0x4197cc ; sub eax, 0x87b1088c ; ret
0x0000000000419765 : jns 0x4197df ; sub eax, 0x87b1088c ; ret
0x000000000041978b : jns 0x419805 ; sub eax, 0x87b1088c ; ret
0x000000000041c004 : jns 0x41bfa4 ; or edi, dword ptr [rdx - 0x76b361cc] ; ret
0x000000000041fdd3 : jns 0x41fde3 ; test al, 0x6f ; ret
0x000000000041fde0 : jns 0x41fdf0 ; test al, 0x6f ; ret
0x000000000041fdfd : jns 0x41fe0d ; test al, 0x6f ; ret
0x0000000000419c9f : jo 0x419ca0 ; ret
0x0000000000419caf : jo 0x419cb0 ; ret
0x000000000042bdad : jo 0x42bdb5 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042be0d : jo 0x42be15 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042c645 : jo 0x42c6a6 ; ret
0x000000000042dc6f : jo 0x42dcd5 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042e314 : jo 0x42e375 ; ret
0x000000000042e44e : jo 0x42e4af ; ret
0x0000000000431804 : jo 0x431794 ; ret 0xbe30
0x000000000040afac : jp 0x40afa4 ; or byte ptr [rsi + 0x2948a1c8], cl ; ret 0x148
0x000000000040afbc : jp 0x40afb4 ; or byte ptr [rsi + 0x148a1c8], cl ; ret 0x8948
0x00000000004054b7 : jrcxz 0x405459 ; ret
0x00000000004054c4 : jrcxz 0x405466 ; ret
0x00000000004054e1 : jrcxz 0x405483 ; ret
0x000000000043260d : jrcxz 0x432610 ; call qword ptr [rax]
0x0000000000416489 : js 0x41646e ; push rcx ; psrad mm6, qword ptr [rcx + rcx*2 + 1] ; ret 0x149
0x0000000000416499 : js 0x41647e ; push rcx ; psrad mm6, qword ptr [rcx + rcx*2 + 0x29] ; ret 0x8b48
0x0000000000429bea : js 0x429ba4 ; and byte ptr [rcx + 1], cl ; ret 0x149
0x0000000000429bfa : js 0x429bb4 ; and byte ptr [rcx + 0x29], cl ; ret 0xb848
0x0000000000419271 : lahf ; ret 0x9371
0x000000000043023a : lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x000000000041a7a5 : lea ebx, dword ptr [rax + rcx*2 + 0x14cf229] ; ret 0xbe48
0x000000000040f93f : lea edi, dword ptr [rbx + 0x1498392] ; ret 0x149
0x000000000040f94f : lea edi, dword ptr [rbx + 0x29498392] ; ret 0x8b48
0x000000000040f93e : lea edi, dword ptr ds:[rbx + 0x1498392] ; ret 0x149
0x000000000040f94e : lea edi, dword ptr ds:[rbx + 0x29498392] ; ret 0x8b48
0x0000000000419367 : leave ; ret
0x00000000004317e5 : leave ; ret 0x3b81
0x0000000000432608 : lock adc byte ptr [rax], al ; add al, dh ; jrcxz 0x432615 ; call qword ptr [rax]
0x000000000042781f : lodsb al, byte ptr [rsi] ; ret
0x0000000000402c5c : loop 0x402c78 ; add byte ptr [r8 - 0x77], cl ; ret 0x98e8
0x0000000000404140 : loop 0x404118 ; in eax, -0x55 ; mov cl, byte ptr [rcx - 0x77] ; ret 0x314d
0x0000000000404153 : loop 0x40412b ; in eax, -0x55 ; mov cl, byte ptr [rbp + 9] ; ret 0x8148
0x00000000004325fd : loop 0x432600 ; call rax
0x0000000000414dc7 : loope 0x414d97 ; cdq ; mov ecx, 0x894cfef8 ; ret
0x0000000000400292 : loopne 0x400311 ; ret
0x0000000000429be6 : loopne 0x429bb2 ; pop rdx ; insd dword ptr [rdi], dx ; js 0x429ba8 ; and byte ptr [rcx + 1], cl ; ret 0x149
0x0000000000429bf6 : loopne 0x429bc2 ; pop rdx ; insd dword ptr [rdi], dx ; js 0x429bb8 ; and byte ptr [rcx + 0x29], cl ; ret 0xb848
0x000000000042bf9b : loopne 0x42bfeb ; add esp, 0x20 ; pop rbp ; ret
0x000000000042bf9a : loopne 0x42bfec ; add esp, 0x20 ; pop rbp ; ret
0x000000000042f9b0 : loopne 0x42f9b8 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004031a8 : mov ah, -0x70 ; ret 0x43d8
0x0000000000432e99 : mov ah, -1 ; jmp qword ptr [rax]
0x000000000041006d : mov ah, 0x28 ; ret 0x294c
0x00000000004199f7 : mov ah, byte ptr [rax + rsi*8 - 0x7e] ; hlt ; ret
0x000000000041b7b2 : mov ah, byte ptr [rax - 0x76b39254] ; ret
0x0000000000427850 : mov ah, byte ptr [rcx + 0x7a] ; or dword ptr [rcx + 0x29], ecx ; ret
0x0000000000427840 : mov ah, byte ptr [rcx + 0x7a] ; or dword ptr [rcx + 1], ecx ; ret
0x000000000040a240 : mov ah, byte ptr [rip - 0x76b3fcb5] ; ret
0x00000000004322cc : mov al, -0x10 ; cld ; call qword ptr [rax]
0x0000000000432740 : mov al, -0xe ; cld ; jmp rdx
0x0000000000432d39 : mov al, -1 ; jmp rdx
0x0000000000432638 : mov al, 0x11 ; add byte ptr [rax], al ; in eax, -1 ; call rax
0x000000000042e1eb : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000042e078 : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x00000000004324f8 : mov al, 0xc ; add byte ptr [rax], al ; nop ; ret 0xffff
0x00000000004305a6 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000404a93 : mov bh, 0x37 ; scasb al, byte ptr [rdi] ; in al, dx ; sbb byte ptr [rcx - 0x77], cl ; ret
0x0000000000415b6e : mov bh, byte ptr [rcx] ; push rsi ; ret 0xc95a
0x0000000000432d79 : mov bl, -1 ; jmp qword ptr [rdx]
0x0000000000415c6d : mov bl, 0x53 ; mov edx, 0x894c087e ; ret
0x00000000004222bd : mov bl, byte ptr [rip + 0x1482714] ; ret 0x8948
0x00000000004222ad : mov bl, byte ptr [rip + 0x29482714] ; ret 0x14c
0x0000000000403a41 : mov byte ptr [0x6342e8], al ; pop rbp ; ret
0x000000000040ffd7 : mov byte ptr [r8 - 0x3f], r9b ; jmp 0xffffffffc3ca48f0
0x000000000040ffd8 : mov byte ptr [rax - 0x3f], cl ; jmp 0xffffffffc3ca48ef
0x000000000041e116 : mov byte ptr [rax - 0x70], ch ; mov ecx, 0x214ca6c0 ; ret 0xb849
0x00000000004194ef : mov byte ptr [rcx + 0x4ccf214c], 0x21 ; ret 0x94c
0x000000000040406a : mov byte ptr [rcx - 0x77], cl ; ret
0x0000000000401803 : mov byte ptr [rip + 0x232aae], 1 ; ret
0x0000000000432fb9 : mov ch, -1 ; jmp qword ptr [rdx]
0x00000000004316d1 : mov ch, 0x48 ; pop rbx ; ret 0x3956
0x0000000000419270 : mov cl, -0x61 ; ret 0x9371
0x0000000000419747 : mov cl, -0x79 ; ret
0x000000000041114f : mov cl, 0x38 ; ret
0x0000000000404157 : mov cl, byte ptr [rbp + 9] ; ret 0x8148
0x0000000000404144 : mov cl, byte ptr [rcx - 0x77] ; ret 0x314d
0x0000000000403546 : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402ee6 : mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040346d : mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000419364 : mov dh, -0x40 ; movsb byte ptr [rdi], byte ptr [rsi] ; leave ; ret
0x00000000004305ac : mov dh, -0x40 ; pop rbp ; ret
0x0000000000415c6c : mov dl, -0x4d ; push rbx ; mov edx, 0x894c087e ; ret
0x0000000000403a1d : mov dword ptr [0x6342e0], edi ; pop rbp ; ret
0x0000000000403c04 : mov dword ptr [rax + 0x50], 0 ; pop rbp ; ret
0x000000000042c4f6 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000042c4b8 : mov dword ptr [rax], eax ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000042c374 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000042c4b7 : mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004035b3 : mov dword ptr [rbp - 0x10], edx ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000042bf99 : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401ac9 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004019e7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000430a8d : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004039ff : mov dword ptr [rbp - 8], eax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402455 : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000042c56e : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042bb5d : mov dword ptr [rcx + 0x50], eax ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000403ef5 : mov dword ptr [rsi], edi ; pop rbp ; ret
0x00000000004182a4 : mov eax, 0x3245cd06 ; sahf ; ret 0x4f8e
0x000000000042560c : mov eax, 0x509227d8 ; call 0x4a2a18ad
0x00000000004255ff : mov eax, 0x509227d8 ; call 0x4d2a18a0
0x0000000000415b6c : mov eax, 0x56398a50 ; ret 0xc95a
0x000000000042949d : mov eax, 0x6f976c84 ; ret 0x34c0
0x000000000041f854 : mov eax, 0x7e105ad5 ; call qword ptr [rdx]
0x0000000000421a77 : mov eax, 0x7ed5f6e0 ; ret 0x5c45
0x0000000000428997 : mov eax, 0x8356e323 ; ret 0x21f9
0x00000000004031a5 : mov eax, 0x90b4c62d ; ret 0x43d8
0x0000000000419c9a : mov eax, 0xf94ed648 ; jo 0x419ca5 ; ret
0x0000000000419caa : mov eax, 0xf94ed648 ; jo 0x419cb5 ; ret
0x000000000040c1dc : mov eax, 0xfff5b637 ; ret
0x000000000042c328 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000042f0eb : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403ed4 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042c325 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004035b7 : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000042f3e3 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042c2dd : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000042c36e : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000042c4ba : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000042c63f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000042e1e9 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000042fa14 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042f597 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042fb3c : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000042f1cd : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042e6af : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000042c116 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000402459 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402449 : mov eax, esi ; pop rbp ; ret
0x000000000042a604 : mov ebp, 0x8087b8f ; ret
0x0000000000428924 : mov ebp, 0x8356e323 ; ret 0x21f9
0x00000000004171ec : mov ebp, 0xe63a2580 ; ret 0x7b6a
0x000000000040182b : mov ebp, esp ; call rax
0x0000000000401791 : mov ebp, esp ; ja 0x40179c ; pop rbp ; ret
0x000000000040f940 : mov ebx, 0x1498392 ; ret 0x149
0x000000000040f950 : mov ebx, 0x29498392 ; ret 0x8b48
0x000000000041fdfc : mov ebx, 0x6fa80a79 ; ret
0x0000000000427cc6 : mov ebx, 0x73f498a8 ; push rax ; ret 0x23f8
0x0000000000404996 : mov ebx, 0xd0fb93d9 ; ret 0x68c2
0x00000000004227a6 : mov ebx, 0xf4c4ffdf ; ret 0x49ea
0x000000000041e119 : mov ecx, 0x214ca6c0 ; ret 0xb849
0x0000000000427976 : mov ecx, 0x4b1bfb31 ; ret
0x000000000042ee1d : mov ecx, 0x5b2a830a ; ret
0x00000000004045f2 : mov ecx, 0x8949975a ; ret 0x314d
0x0000000000418418 : mov ecx, 0x894c7e85 ; ret
0x0000000000414dcb : mov ecx, 0x894cfef8 ; ret
0x000000000040b25d : mov ecx, 0x95213432 ; call rdx
0x00000000004072d3 : mov ecx, 0xbb4d51d7 ; sti ; jmp rcx
0x0000000000419363 : mov ecx, 0xc9a4c0b6 ; ret
0x0000000000401f83 : mov ecx, 0xf6fffff8 ; add al, 0x25 ; ret 0x6342
0x0000000000401d09 : mov ecx, dword ptr [rax*8 + 0x430bc0] ; jmp rcx
0x000000000042c702 : mov ecx, dword ptr [rax*8 + 0x431a00] ; jmp rcx
0x000000000042ca26 : mov ecx, dword ptr [rax*8 + 0x431a48] ; jmp rcx
0x000000000042e7de : mov ecx, dword ptr [rax*8 + 0x431f08] ; jmp rcx
0x000000000042c371 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000428e8d : mov ecx, dword ptr [rsi - 0x76b39411] ; ret
0x000000000040e295 : mov edi, 0x1484959 ; ret 0x8948
0x000000000040e285 : mov edi, 0x29484959 ; ret 0x14c
0x0000000000401825 : mov edi, 0x633e20 ; mov rbp, rsp ; call rax
0x00000000004017a2 : mov edi, 0x634280 ; jmp rax
0x00000000004017e2 : mov edi, 0x634280 ; jmp rdx
0x000000000040b233 : mov edi, 0x95213432 ; call rdx
0x00000000004072a9 : mov edi, 0xbb4d51d7 ; sti ; jmp rcx
0x00000000004227d0 : mov edi, 0xf4c4ffdf ; ret 0x4cea
0x0000000000403a59 : mov edi, dword ptr [0x634290] ; call 0x42fca9
0x0000000000403ef1 : mov edi, dword ptr [rbp - 0x10] ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x0000000000430b47 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000430b46 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000404312 : mov edx, 0x48fffff9 ; add esp, 0x10 ; pop rbp ; ret
0x00000000004279bf : mov edx, 0x4b1bfb31 ; ret
0x0000000000425629 : mov edx, 0x509227d8 ; call 0x4e2a18ca
0x000000000041fdd2 : mov edx, 0x6fa80a79 ; ret
0x0000000000415c6f : mov edx, 0x894c087e ; ret
0x000000000041c007 : mov edx, 0x894c9e34 ; ret
0x00000000004193ac : mov edx, 0xc9a4c0b6 ; ret
0x0000000000418e90 : mov edx, 0xe8aa1721 ; test ch, 0x54 ; ret 0x8949
0x0000000000418ea0 : mov edx, 0xe8aa1721 ; test ch, 0x54 ; ret 0x894c
0x0000000000418eb3 : mov edx, 0xe8aa1721 ; test ch, 0x54 ; ret 0x894d
0x0000000000402c08 : mov edx, dword ptr [rbx + rax*2] ; add byte ptr [rax - 0x77], cl ; ret 0xece8
0x0000000000427d0f : mov esi, 0x73f498a8 ; push rax ; ret 0x23f8
0x000000000043178b : mov esi, 0xbf597fc7 ; ret 0xa88f
0x0000000000418b9a : mov esi, 0xc8d05f32 ; cmp ecx, dword ptr [rax + 0x29] ; ret 0x8948
0x0000000000418b8a : mov esi, 0xc8d05f32 ; cmp ecx, dword ptr [rax + 1] ; ret 0x14c
0x0000000000418ed9 : mov esi, 0xe8aa1721 ; test ch, 0x54 ; ret 0x949
0x00000000004017e0 : mov esi, eax ; mov edi, 0x634280 ; jmp rdx
0x000000000042816b : mov esp, 0x14905f0 ; ret 0x14d
0x000000000042817b : mov esp, 0x294905f0 ; ret 0xb848
0x0000000000432d74 : mov esp, 0x58000006 ; mov bl, -1 ; jmp qword ptr [rdx]
0x000000000041124e : mov esp, 0x894c10ec ; ret
0x0000000000403a1c : mov qword ptr [0x6342e0], rdi ; pop rbp ; ret
0x0000000000403c03 : mov qword ptr [rax + 0x50], 0 ; pop rbp ; ret
0x00000000004035b2 : mov qword ptr [rbp - 0x10], rdx ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004039fe : mov qword ptr [rbp - 8], rax ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402454 : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000042c56d : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042bb5c : mov qword ptr [rcx + 0x50], rax ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000403ef4 : mov qword ptr [rsi], rdi ; pop rbp ; ret
0x000000000042e1ea : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000042f0ea : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403ed3 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042c324 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004035b6 : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000042f3e2 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042c2dc : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000042c63e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000042e1e8 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000042f1cc : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042e6ae : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000042c115 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000402458 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402448 : mov rax, rsi ; pop rbp ; ret
0x000000000040182a : mov rbp, rsp ; call rax
0x0000000000401790 : mov rbp, rsp ; ja 0x40179d ; pop rbp ; ret
0x0000000000401d08 : mov rcx, qword ptr [rax*8 + 0x430bc0] ; jmp rcx
0x000000000042c701 : mov rcx, qword ptr [rax*8 + 0x431a00] ; jmp rcx
0x000000000042ca25 : mov rcx, qword ptr [rax*8 + 0x431a48] ; jmp rcx
0x000000000042e7dd : mov rcx, qword ptr [rax*8 + 0x431f08] ; jmp rcx
0x0000000000403ef0 : mov rdi, qword ptr [rbp - 0x10] ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x00000000004017df : mov rsi, rax ; mov edi, 0x634280 ; jmp rdx
0x0000000000419745 : mov word ptr [rax], cs ; mov cl, -0x79 ; ret
0x00000000004239b0 : mov word ptr [rcx + rcx*2 - 0x44b724df], gs ; stosd dword ptr [rdi], eax ; xchg eax, edi ; ret
0x00000000004253a1 : mov word ptr [rdx + rax*2 + 0x28], dr1 ; ret
0x00000000004100ed : movabs al, byte ptr [0x2948c82948fffff8] ; ret 0x8948
0x000000000041782e : movabs byte ptr [0x314dca8949d14b51], al ; ret 0x948
0x0000000000424aff : movabs eax, dword ptr [0x894c5c1ee864f1bb] ; ret
0x0000000000406630 : movabs eax, dword ptr [0xb949ca314dca8949] ; ret
0x00000000004047fb : movsb byte ptr [rdi], byte ptr [rsi] ; fimul word ptr [rax - 0x76b35f6f] ; ret
0x00000000004047d8 : movsb byte ptr [rdi], byte ptr [rsi] ; fimul word ptr [rax - 0x76b65f6f] ; ret 0x314d
0x0000000000419366 : movsb byte ptr [rdi], byte ptr [rsi] ; leave ; ret
0x000000000040e6d5 : movsb byte ptr [rdi], byte ptr [rsi] ; push 0x94deb4a ; ret 0x8148
0x00000000004047fa : movsb byte ptr [rdi], byte ptr gs:[rsi] ; fimul word ptr [rax - 0x76b35f6f] ; ret
0x00000000004047d7 : movsb byte ptr [rdi], byte ptr gs:[rsi] ; fimul word ptr [rax - 0x76b65f6f] ; ret 0x314d
0x000000000041658e : movsxd r9, dword ptr [r10 - 0x799a8508] ; ret
0x0000000000403545 : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402ee5 : movzx eax, al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040346c : movzx eax, al ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004305ab : movzx eax, al ; pop rbp ; ret
0x00000000004325cc : nop ; fdivr st(7) ; call qword ptr [rax]
0x00000000004322d4 : nop ; hlt ; cld ; jmp rax
0x000000000041e118 : nop ; mov ecx, 0x214ca6c0 ; ret 0xb849
0x00000000004031a9 : nop ; ret 0x43d8
0x0000000000425612 : nop ; ret 0x49e7
0x0000000000425605 : nop ; ret 0x4ce7
0x000000000042562f : nop ; ret 0x4de7
0x00000000004324fc : nop ; ret 0xffff
0x0000000000430b68 : nop dword ptr [rax + rax] ; ret
0x000000000042aba1 : or ah, byte ptr [rdx + 2] ; ror byte ptr [rcx + 0x29], cl ; ret 0x149
0x000000000042abb1 : or ah, byte ptr [rdx + 2] ; ror byte ptr [rcx + 1], cl ; ret 0xb848
0x0000000000432501 : or al, 0 ; add al, al ; ret 0xffff
0x0000000000432509 : or al, 0 ; add al, dh ; ret 0xffff
0x00000000004324e9 : or al, 0 ; add byte ptr [rax], ah ; ret 0xffff
0x000000000042cd8d : or al, 0x18 ; ret 0x6451
0x0000000000401fcc : or al, 0x25 ; ret
0x000000000041b4a7 : or al, 0xffffffffffffffc0 ; xchg eax, ecx ; out -0x32, eax ; add cl, byte ptr [rcx + 1] ; ret 0x8b48
0x000000000042ca27 : or al, 0xffffffffffffffc5 ; sbb al, byte ptr [rbx] ; jmp rcx
0x000000000040c0b3 : or byte ptr [rax - 0x77], cl ; ret
0x0000000000432fb5 : or byte ptr [rax], al ; add al, cl ; mov ch, -1 ; jmp qword ptr [rdx]
0x000000000042a607 : or byte ptr [rax], cl ; ret
0x0000000000403530 : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000417a17 : or byte ptr [rcx - 0x3f], 0xeb ; or byte ptr [rax - 0x77], cl ; ret
0x000000000040ffdc : or byte ptr [rcx - 0x77], cl ; ret
0x000000000042a120 : or byte ptr [rdi + 0x94d5981], cl ; ret 0x8148
0x000000000040afbe : or byte ptr [rsi + 0x148a1c8], cl ; ret 0x8948
0x000000000040afae : or byte ptr [rsi + 0x2948a1c8], cl ; ret 0x148
0x00000000004317dd : or ch, byte ptr [rdx + 0x76] ; out -0x52, al ; in eax, dx ; leave ; ret 0x3b81
0x0000000000427853 : or dword ptr [rcx + 0x29], ecx ; ret
0x0000000000427843 : or dword ptr [rcx + 1], ecx ; ret
0x0000000000414381 : or eax, 0x148ade8 ; ret 0x148
0x0000000000414391 : or eax, 0x2948ade8 ; ret 0x8948
0x000000000041783f : or eax, 0x4b51a295 ; ror dword ptr [rbp + 9], 1 ; ret 0x8148
0x0000000000407748 : or eax, 0x894c682a ; ret
0x00000000004254ba : or eax, 0x894c6a58 ; ret
0x000000000042e3d1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004331f5 : or eax, dword ptr [rax] ; add byte ptr [rax], bh ; ret 0xffff
0x00000000004331d5 : or eax, dword ptr [rax] ; add byte ptr [rax], bl ; ret 0xffff
0x0000000000401d0d : or eax, dword ptr [rbx] ; jmp rcx
0x000000000041833c : or ecx, dword ptr [rax + 0x29] ; ret 0x8948
0x000000000041832c : or ecx, dword ptr [rax + 1] ; ret 0x148
0x000000000041c006 : or edi, dword ptr [rdx - 0x76b361cc] ; ret
0x0000000000427e3e : or esp, edi ; dec byte ptr [rbp + 9] ; ret 0x8148
0x000000000041b4aa : out -0x32, eax ; add cl, byte ptr [rcx + 1] ; ret 0x8b48
0x00000000004247a3 : out -0x4b, al ; ret
0x00000000004317e0 : out -0x52, al ; in eax, dx ; leave ; ret 0x3b81
0x000000000043264d : out -1, al ; call qword ptr [rax]
0x00000000004041e6 : out 3, al ; jmp 0xffffffffc3c98a97
0x000000000040afbd : out dx, al ; or byte ptr [rsi + 0x148a1c8], cl ; ret 0x8948
0x000000000040afad : out dx, al ; or byte ptr [rsi + 0x2948a1c8], cl ; ret 0x148
0x000000000043178a : out dx, eax ; mov esi, 0xbf597fc7 ; ret 0xa88f
0x0000000000407746 : outsb dx, byte ptr [rsi] ; pop rbp ; or eax, 0x894c682a ; ret
0x000000000041d3aa : outsd dx, dword ptr [rsi] ; ret
0x00000000004294a1 : outsd dx, dword ptr [rsi] ; ret 0x34c0
0x000000000041a1e4 : outsd dx, dword ptr [rsi] ; ret 0x9f22
0x000000000042b6c7 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000430b5c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000404d75 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042b6c9 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000430b5e : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004042e0 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000430b60 : pop r14 ; pop r15 ; ret
0x000000000042da23 : pop r14 ; pop rbp ; ret
0x00000000004042e2 : pop r15 ; pop rbp ; ret
0x0000000000430b62 : pop r15 ; ret
0x000000000042bb32 : pop rax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000040413f : pop rax ; loop 0x404119 ; in eax, -0x55 ; mov cl, byte ptr [rcx - 0x77] ; ret 0x314d
0x0000000000404152 : pop rax ; loop 0x40412c ; in eax, -0x55 ; mov cl, byte ptr [rbp + 9] ; ret 0x8148
0x0000000000432d78 : pop rax ; mov bl, -1 ; jmp qword ptr [rdx]
0x0000000000401802 : pop rbp ; mov byte ptr [rip + 0x232aae], 1 ; ret
0x00000000004017a1 : pop rbp ; mov edi, 0x634280 ; jmp rax
0x00000000004017de : pop rbp ; mov rsi, rax ; mov edi, 0x634280 ; jmp rdx
0x0000000000417a16 : pop rbp ; or byte ptr [rcx - 0x3f], 0xeb ; or byte ptr [rax - 0x77], cl ; ret
0x0000000000407747 : pop rbp ; or eax, 0x894c682a ; ret
0x0000000000430b5b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000042b6ca : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000430b5f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401795 : pop rbp ; ret
0x00000000004041e5 : pop rbx ; out 3, al ; jmp 0xffffffffc3c98a98
0x0000000000404d74 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004042df : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042da22 : pop rbx ; pop r14 ; pop rbp ; ret
0x000000000042ee21 : pop rbx ; ret
0x00000000004316d4 : pop rbx ; ret 0x3956
0x0000000000404069 : pop rcx ; mov byte ptr [rcx - 0x77], cl ; ret
0x0000000000421cc0 : pop rcx ; ret
0x00000000004042e3 : pop rdi ; pop rbp ; ret
0x0000000000430b63 : pop rdi ; ret
0x0000000000418b9c : pop rdi ; ror al, 1 ; cmp ecx, dword ptr [rax + 0x29] ; ret 0x8948
0x0000000000418b8c : pop rdi ; ror al, 1 ; cmp ecx, dword ptr [rax + 1] ; ret 0x14c
0x0000000000429be8 : pop rdx ; insd dword ptr [rdi], dx ; js 0x429ba6 ; and byte ptr [rcx + 1], cl ; ret 0x149
0x0000000000429bf8 : pop rdx ; insd dword ptr [rdi], dx ; js 0x429bb6 ; and byte ptr [rcx + 0x29], cl ; ret 0xb848
0x0000000000428a3b : pop rdx ; rsqrtps xmm1, xmmword ptr [rcx + 1] ; ret 0xb848
0x00000000004042e1 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000430b61 : pop rsi ; pop r15 ; ret
0x000000000042da24 : pop rsi ; pop rbp ; ret
0x000000000042b6c8 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000430b5d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000404d76 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040ae69 : popfq ; sar cl, -1 ; dec dword ptr [rcx + 9] ; ret
0x0000000000414a09 : popfq ; xor bh, 0xff ; dec dword ptr [rcx + 9] ; ret
0x000000000041649c : psrad mm6, qword ptr [rcx + rcx*2 + 0x29] ; ret 0x8b48
0x000000000041648c : psrad mm6, qword ptr [rcx + rcx*2 + 1] ; ret 0x149
0x00000000004317de : push 0x76 ; out -0x52, al ; in eax, dx ; leave ; ret 0x3b81
0x000000000040e6d6 : push 0x94deb4a ; ret 0x8148
0x0000000000401fc8 : push qword ptr [rax + 0x250c8a01] ; ret
0x0000000000432637 : push qword ptr [rax + 0x40000011] ; in eax, -1 ; call rax
0x0000000000432577 : push qword ptr [rax - 0x4ffffff2] ; sar bh, 1 ; call rax
0x00000000004324f7 : push qword ptr [rax - 0x6ffffff4] ; ret 0xffff
0x00000000004325f7 : push qword ptr [rax - 0xffffff0] ; loop 0x432606 ; call rax
0x000000000042bb5e : push r8 ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000432607 : push rax ; adc byte ptr [rax], al ; add al, dh ; jrcxz 0x432616 ; call qword ptr [rax]
0x00000000004328c0 : push rax ; adc ebp, edi ; call qword ptr [rsi]
0x0000000000403c06 : push rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042bb5f : push rax ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000425610 : push rax ; call 0x4a2a18a9
0x0000000000425603 : push rax ; call 0x4d2a189c
0x000000000042562d : push rax ; call 0x4e2a18c6
0x0000000000415b6d : push rax ; mov bh, byte ptr [rcx] ; push rsi ; ret 0xc95a
0x0000000000432507 : push rax ; or al, 0 ; add al, dh ; ret 0xffff
0x000000000042e16e : push rax ; pop rbp ; ret
0x000000000040dfba : push rax ; ret
0x0000000000427ccb : push rax ; ret 0x23f8
0x00000000004325c7 : push rax ; sldt word ptr [rax] ; nop ; fdivr st(7) ; call qword ptr [rax]
0x000000000042b852 : push rbp ; call 0x590539a4
0x000000000042ba84 : push rbp ; call 0x59053bd6
0x000000000042bb2d : push rbp ; call 0x59053c7f
0x00000000004049b7 : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x58
0x0000000000422cf2 : push rbp ; jmp qword ptr [rip - 0x3c76b3bd]
0x0000000000401824 : push rbp ; mov edi, 0x633e20 ; mov rbp, rsp ; call rax
0x000000000042a11f : push rbp ; or byte ptr [rdi + 0x94d5981], cl ; ret 0x8148
0x0000000000415c6e : push rbx ; mov edx, 0x894c087e ; ret
0x000000000041649b : push rcx ; psrad mm6, qword ptr [rcx + rcx*2 + 0x29] ; ret 0x8b48
0x000000000041648b : push rcx ; psrad mm6, qword ptr [rcx + rcx*2 + 1] ; ret 0x149
0x0000000000417842 : push rcx ; ror qword ptr [r13 + 9], 1 ; ret 0x8148
0x0000000000401f86 : push rsi ; add al, 0x25 ; ret 0x6342
0x0000000000415b70 : push rsi ; ret 0xc95a
0x000000000041b538 : push rsi ; sbb al, 0x7b ; cld ; fisttp word ptr [rax + 0x29] ; ret 0x14c
0x000000000041b548 : push rsi ; sbb al, 0x7b ; cld ; fisttp word ptr [rax + 1] ; ret 0x8948
0x0000000000418e97 : push rsp ; ret 0x8949
0x0000000000418ea7 : push rsp ; ret 0x894c
0x0000000000418eba : push rsp ; ret 0x894d
0x0000000000418ee0 : push rsp ; ret 0x949
0x000000000041a464 : push rsp ; test byte ptr [rcx + 1], cl ; ret
0x000000000041b4a8 : rcl byte ptr [rcx + 0x4902cee7], 1 ; ret 0x8b48
0x0000000000400294 : ret
0x0000000000430472 : ret 0
0x000000000042b495 : ret 0x148
0x000000000040c204 : ret 0x149
0x000000000040e28a : ret 0x14c
0x0000000000428170 : ret 0x14d
0x000000000042de0e : ret 0x1b2
0x0000000000412c76 : ret 0x2148
0x000000000040e130 : ret 0x2149
0x0000000000404b1d : ret 0x214c
0x0000000000405572 : ret 0x214d
0x00000000004318b9 : ret 0x21c0
0x0000000000428929 : ret 0x21f9
0x0000000000401722 : ret 0x232a
0x0000000000401522 : ret 0x232b
0x0000000000427ccc : ret 0x23f8
0x00000000004022c3 : ret 0x2948
0x0000000000405e68 : ret 0x294c
0x000000000042d1b5 : ret 0x294d
0x0000000000419e96 : ret 0x29a8
0x0000000000405323 : ret 0x3148
0x0000000000407f82 : ret 0x314c
0x000000000040402b : ret 0x314d
0x00000000004294a2 : ret 0x34c0
0x0000000000403259 : ret 0x3948
0x00000000004316d5 : ret 0x3956
0x0000000000416d6d : ret 0x3b35
0x00000000004317e6 : ret 0x3b81
0x0000000000420183 : ret 0x3cfb
0x00000000004035a0 : ret 0x4240
0x0000000000426e79 : ret 0x42b5
0x00000000004031aa : ret 0x43d8
0x0000000000402cb6 : ret 0x44e8
0x000000000041f23b : ret 0x486d
0x0000000000426777 : ret 0x48ab
0x0000000000408b07 : ret 0x4942
0x000000000041f248 : ret 0x496d
0x000000000042676a : ret 0x49ab
0x0000000000425613 : ret 0x49e7
0x00000000004227ad : ret 0x49ea
0x0000000000408b31 : ret 0x4c42
0x000000000041f265 : ret 0x4c6d
0x0000000000426791 : ret 0x4cab
0x0000000000425606 : ret 0x4ce7
0x00000000004227d7 : ret 0x4cea
0x0000000000425630 : ret 0x4de7
0x00000000004182aa : ret 0x4f8e
0x000000000041c1f8 : ret 0x5546
0x000000000042c3f4 : ret 0x5589
0x00000000004049bb : ret 0x58
0x00000000004237fe : ret 0x59b1
0x0000000000421a7c : ret 0x5c45
0x0000000000401d3a : ret 0x6342
0x000000000042cd8f : ret 0x6451
0x0000000000417028 : ret 0x64f0
0x000000000040499b : ret 0x68c2
0x00000000004221a7 : ret 0x73ea
0x000000000040e5e7 : ret 0x7483
0x00000000004171f1 : ret 0x7b6a
0x000000000042d1cd : ret 0x7de8
0x000000000042bb38 : ret 0x80
0x000000000042f895 : ret 0x8141
0x000000000040359d : ret 0x8148
0x000000000040471c : ret 0x8149
0x00000000004308cf : ret 0x840
0x0000000000402abd : ret 0x8840
0x000000000042e799 : ret 0x8844
0x00000000004033cb : ret 0x8948
0x0000000000418e98 : ret 0x8949
0x0000000000418ea8 : ret 0x894c
0x0000000000418ebb : ret 0x894d
0x000000000042d34c : ret 0x89a5
0x0000000000402779 : ret 0x8b48
0x0000000000419272 : ret 0x9371
0x000000000041cae3 : ret 0x93b3
0x000000000042f8bf : ret 0x941
0x0000000000403d50 : ret 0x948
0x0000000000404977 : ret 0x949
0x000000000040402e : ret 0x94c
0x0000000000402c62 : ret 0x98e8
0x000000000041a1e6 : ret 0x9f22
0x000000000041e1a9 : ret 0xa567
0x0000000000431790 : ret 0xa88f
0x0000000000401e71 : ret 0xb0
0x000000000040b60d : ret 0xb18a
0x0000000000415c5a : ret 0xb2a6
0x000000000040e371 : ret 0xb604
0x000000000042597f : ret 0xb848
0x0000000000404cbc : ret 0xb849
0x000000000040427b : ret 0xb949
0x000000000040b0fd : ret 0xbd1a
0x0000000000431807 : ret 0xbe30
0x000000000040bc19 : ret 0xbe48
0x000000000040520e : ret 0xbf48
0x00000000004017c5 : ret 0xc148
0x00000000004301e0 : ret 0xc2f6
0x000000000042b48b : ret 0xc366
0x000000000041b989 : ret 0xc72d
0x0000000000415b71 : ret 0xc95a
0x000000000041bd43 : ret 0xca0d
0x000000000042cbb4 : ret 0xca21
0x0000000000402363 : ret 0xca29
0x000000000041ac81 : ret 0xcc6d
0x000000000040230d : ret 0xd284
0x000000000041d582 : ret 0xdc36
0x00000000004024ce : ret 0xe280
0x0000000000427b60 : ret 0xe54b
0x0000000000402c0e : ret 0xece8
0x000000000042da5c : ret 0xee8
0x000000000041a630 : ret 0xf14b
0x000000000042d448 : ret 0xf180
0x00000000004301d3 : ret 0xf280
0x000000000042cc2e : ret 0xf281
0x000000000042ebda : ret 0xfd29
0x0000000000416114 : ret 0xfee1
0x000000000041f446 : ret 0xffbe
0x00000000004324ed : ret 0xffff
0x00000000004036ea : ret 1
0x0000000000403a62 : ret 2
0x000000000042c4b6 : rol byte ptr [rcx + rcx*4], 1 ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000432504 : rol dl, -1 ; push rax ; or al, 0 ; add al, dh ; ret 0xffff
0x0000000000401d32 : rol dword ptr [rdx + 0x63], 0 ; add dh, al ; add al, 0x25 ; ret 0x6342
0x0000000000401d5b : rol dword ptr [rdx + 0x63], 0 ; add esi, eax ; add al, 0x25 ; ret 0x6342
0x0000000000418b9d : ror al, 1 ; cmp ecx, dword ptr [rax + 0x29] ; ret 0x8948
0x0000000000418b8d : ror al, 1 ; cmp ecx, dword ptr [rax + 1] ; ret 0x14c
0x000000000042ba80 : ror byte ptr [r8 - 0x75], 1 ; push rbp ; call 0x59053bda
0x0000000000404d15 : ror byte ptr [r8 - 0x75], 1 ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x58
0x000000000042ee00 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000042c640 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x42c6ab ; ret
0x0000000000414235 : ror byte ptr [rax + 9], 1 ; ret
0x0000000000432500 : ror byte ptr [rax + rax], 1 ; add al, al ; ret 0xffff
0x00000000004017cc : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4017db ; pop rbp ; ret
0x0000000000420190 : ror byte ptr [rax - 0x46], 1 ; ret 0x3cfb
0x0000000000425a09 : ror byte ptr [rax - 0x48], -0x19 ; ret
0x000000000042949b : ror byte ptr [rax - 0x48], -0x7c ; insb byte ptr [rdi], dx ; xchg eax, edi ; outsd dx, dword ptr [rsi] ; ret 0x34c0
0x000000000042ba81 : ror byte ptr [rax - 0x75], 1 ; push rbp ; call 0x59053bd9
0x0000000000404d16 : ror byte ptr [rax - 0x75], 1 ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x58
0x000000000042ee01 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x00000000004055bf : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000405e65 : ror byte ptr [rax - 0x77], 1 ; ret 0x294c
0x0000000000404447 : ror byte ptr [rax - 0x77], 1 ; ret 0x8148
0x000000000042c641 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x42c6aa ; ret
0x0000000000402ee7 : ror byte ptr [rax - 0x7d], -0x3c ; pop rbp ; ret
0x000000000042aba4 : ror byte ptr [rcx + 0x29], cl ; ret 0x149
0x000000000042abb4 : ror byte ptr [rcx + 1], cl ; ret 0xb848
0x000000000040b5f3 : ror byte ptr [rcx + 9], 1 ; ret
0x0000000000404852 : ror byte ptr [rcx - 0x3f], 1 ; call 0xffffffffc2c99089
0x000000000041fddd : ror byte ptr [rcx - 0x46], 1 ; jns 0x41fdf3 ; test al, 0x6f ; ret
0x0000000000423803 : ror byte ptr [rcx - 0x46], 1 ; ret
0x0000000000419384 : ror byte ptr [rcx - 0x47], cl ; mov dh, -0x40 ; movsb byte ptr [rdi], byte ptr [rsi] ; leave ; ret
0x0000000000406649 : ror byte ptr [rcx - 0x47], cl ; ret
0x0000000000426e80 : ror byte ptr [rcx - 0x48], -0x47 ; stc ; ret 0x42b5
0x000000000041114b : ror dword ptr [rax - 0x48], -0x52 ; mov cl, 0x38 ; ret
0x000000000042782c : ror dword ptr [rax - 0x48], -0x54 ; ret
0x0000000000410069 : ror dword ptr [rax - 0x48], 0x3e ; mov ah, 0x28 ; ret 0x294c
0x0000000000415b6a : ror dword ptr [rax - 0x48], 0x50 ; mov bh, byte ptr [rcx] ; push rsi ; ret 0xc95a
0x00000000004182a2 : ror dword ptr [rax - 0x48], 6 ; int 0x45
0x000000000041430d : ror dword ptr [rax - 0x48], cl ; stosb byte ptr [rdi], al ; ret
0x00000000004049b4 : ror dword ptr [rax - 0x75], 1 ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x58
0x0000000000405bc2 : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000409c62 : ror dword ptr [rax - 0x77], 1 ; ret 0x294c
0x0000000000416e6b : ror dword ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000417844 : ror dword ptr [rbp + 9], 1 ; ret 0x8148
0x0000000000414167 : ror dword ptr [rcx + 0x21], cl ; ret
0x000000000041a1ee : ror dword ptr [rcx - 0x46], 1 ; outsd dx, dword ptr [rsi] ; ret 0x9f22
0x0000000000406952 : ror dword ptr [rcx - 0x46], cl ; ret
0x0000000000415c67 : ror dword ptr [rcx - 0x46], cl ; ret 0xb2a6
0x000000000040e37e : ror dword ptr [rcx - 0x46], cl ; ret 0xb604
0x0000000000417843 : ror qword ptr [r13 + 9], 1 ; ret 0x8148
0x0000000000428a3c : rsqrtps xmm1, xmmword ptr [rcx + 1] ; ret 0xb848
0x000000000041b536 : sahf ; int1 ; push rsi ; sbb al, 0x7b ; cld ; fisttp word ptr [rax + 0x29] ; ret 0x14c
0x000000000041b546 : sahf ; int1 ; push rsi ; sbb al, 0x7b ; cld ; fisttp word ptr [rax + 1] ; ret 0x8948
0x00000000004222aa : sahf ; je 0x4222db ; mov bl, byte ptr [rip + 0x29482714] ; ret 0x14c
0x00000000004222ba : sahf ; je 0x4222eb ; mov bl, byte ptr [rip + 0x1482714] ; ret 0x8948
0x00000000004054b8 : sahf ; ret
0x00000000004182a9 : sahf ; ret 0x4f8e
0x0000000000431803 : sal byte ptr [rax - 0x75], 1 ; ret 0xbe30
0x000000000040179e : sal byte ptr [rsp + rsi*8 + 0x5d], -0x41 ; add byte ptr [rdx + 0x63], 0 ; jmp rax
0x0000000000419c9c : salc ; stc ; jo 0x419ca3 ; ret
0x0000000000419c9b : salc ; stc ; jo 0x419ca4 ; ret
0x0000000000419cac : salc ; stc ; jo 0x419cb3 ; ret
0x0000000000419cab : salc ; stc ; jo 0x419cb4 ; ret
0x00000000004041e3 : sar ah, 1 ; pop rbx ; out 3, al ; jmp 0xffffffffc3c98a9a
0x000000000043257d : sar bh, 1 ; call rax
0x000000000041bd3d : sar bl, -1 ; dec dword ptr [rax - 0x46] ; ret 0xca0d
0x000000000040ae6a : sar cl, -1 ; dec dword ptr [rcx + 9] ; ret
0x0000000000402c78 : sar dh, -1 ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x00000000004017ce : sar eax, 1 ; jne 0x4017d9 ; pop rbp ; ret
0x000000000043258d : sar edi, 1 ; call qword ptr [rax]
0x0000000000433499 : sar edi, cl ; jmp rdx
0x00000000004017cd : sar rax, 1 ; jne 0x4017da ; pop rbp ; ret
0x000000000041466b : sbb al, -0x44 ; test dword ptr [rsi - 0x76b3e015], edx ; ret
0x00000000004326d4 : sbb al, 0 ; add byte ptr [rax], al ; cwde ; in al, dx ; cld ; jmp rax
0x0000000000425a2e : sbb al, 0x73 ; fisttp dword ptr [rax + 0x29] ; ret 0x148
0x0000000000425a3e : sbb al, 0x73 ; fisttp dword ptr [rax + 1] ; ret 0x8948
0x000000000041b539 : sbb al, 0x7b ; cld ; fisttp word ptr [rax + 0x29] ; ret 0x14c
0x000000000041b549 : sbb al, 0x7b ; cld ; fisttp word ptr [rax + 1] ; ret 0x8948
0x000000000042c706 : sbb al, byte ptr [rbx] ; jmp rcx
0x0000000000428e8b : sbb byte ptr [rbx], ch ; mov ecx, dword ptr [rsi - 0x76b39411] ; ret
0x0000000000404a97 : sbb byte ptr [rcx - 0x77], cl ; ret
0x00000000004317fe : sbb ch, byte ptr [rax - 0x2f07686f] ; jo 0x43179a ; ret 0xbe30
0x000000000040b612 : sbb cl, byte ptr [rcx + 0x21] ; fimul dword ptr [rax - 0x45] ; and ebp, edx ; ret 0xb18a
0x000000000042a10f : sbb dword ptr [rcx + 0x49], 0x314dca89 ; ret 0x948
0x000000000040a23d : sbb dword ptr [rsi - 0xa], esp ; mov ah, byte ptr [rip - 0x76b3fcb5] ; ret
0x00000000004222be : sbb eax, 0x1482714 ; ret 0x8948
0x00000000004222ae : sbb eax, 0x29482714 ; ret 0x14c
0x000000000042ab9f : sbb ecx, dword ptr [rax] ; or ah, byte ptr [rdx + 2] ; ror byte ptr [rcx + 0x29], cl ; ret 0x149
0x000000000042abaf : sbb ecx, dword ptr [rax] ; or ah, byte ptr [rdx + 2] ; ror byte ptr [rcx + 1], cl ; ret 0xb848
0x0000000000404a95 : scasb al, byte ptr [rdi] ; in al, dx ; sbb byte ptr [rcx - 0x77], cl ; ret
0x00000000004317e1 : scasb al, byte ptr [rdi] ; in eax, dx ; leave ; ret 0x3b81
0x000000000041114e : scasb al, byte ptr [rdi] ; mov cl, 0x38 ; ret
0x0000000000401805 : scasb al, byte ptr [rdi] ; sub ah, byte ptr [rbx] ; add byte ptr [rcx], al ; ret
0x00000000004254b6 : scasb al, byte ptr [rdi] ; test byte ptr fs:[rdi], bl ; or eax, 0x894c6a58 ; ret
0x0000000000425c51 : scasd eax, dword ptr [rdi] ; adc eax, 0x894c9a7e ; ret
0x00000000004325c9 : sldt word ptr [rax] ; nop ; fdivr st(7) ; call qword ptr [rax]
0x0000000000419c9e : stc ; jo 0x419ca1 ; ret
0x0000000000419c9d : stc ; jo 0x419ca2 ; ret
0x0000000000419cae : stc ; jo 0x419cb1 ; ret
0x0000000000419cad : stc ; jo 0x419cb2 ; ret
0x0000000000426e78 : stc ; ret 0x42b5
0x00000000004328c2 : std ; call qword ptr [rsi]
0x00000000004329a2 : std ; jmp rsi
0x0000000000419ca0 : std ; ret
0x00000000004305a8 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004072ae : sti ; jmp rcx
0x0000000000418e93 : stosb byte ptr [rdi], al ; call 0xffffffffc2965c94
0x0000000000418ea3 : stosb byte ptr [rdi], al ; call 0xffffffffc2965ca4
0x0000000000418eb6 : stosb byte ptr [rdi], al ; call 0xffffffffc2965cb7
0x0000000000418edc : stosb byte ptr [rdi], al ; call 0xffffffffc2965cdd
0x00000000004194ee : stosb byte ptr [rdi], al ; mov byte ptr [rcx + 0x4ccf214c], 0x21 ; ret 0x94c
0x0000000000414300 : stosb byte ptr [rdi], al ; ret
0x0000000000404156 : stosd dword ptr [rdi], eax ; mov cl, byte ptr [rbp + 9] ; ret 0x8148
0x0000000000404143 : stosd dword ptr [rdi], eax ; mov cl, byte ptr [rcx - 0x77] ; ret 0x314d
0x00000000004239aa : stosd dword ptr [rdi], eax ; xchg eax, edi ; ret
0x0000000000401806 : sub ah, byte ptr [rbx] ; add byte ptr [rcx], al ; ret
0x0000000000414a2f : sub bl, ch ; ret
0x0000000000404856 : sub byte ptr [rax - 0x77], cl ; ret 0x8148
0x00000000004042de : sub byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000042ee1f : sub dword ptr [rdx], 0x5b ; ret
0x000000000042a4a1 : sub eax, 0x14848e2 ; ret 0x8948
0x0000000000416b57 : sub eax, 0x148fd4d ; ret 0x8948
0x000000000042a491 : sub eax, 0x294848e2 ; ret 0x14c
0x0000000000416b47 : sub eax, 0x2948fd4d ; ret 0x148
0x0000000000419744 : sub eax, 0x87b1088c ; ret
0x0000000000430b9d : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000430b9c : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000427cc7 : test al, -0x68 ; hlt ; jae 0x427d21 ; ret 0x23f8
0x0000000000427cd7 : test al, -0x68 ; hlt ; jae 0x427d31 ; ret 0x23f8
0x0000000000427cea : test al, -0x68 ; hlt ; jae 0x427d44 ; ret 0x23f8
0x0000000000427d10 : test al, -0x68 ; hlt ; jae 0x427d6a ; ret 0x23f8
0x00000000004317ff : test al, -0x6f ; xchg eax, edi ; clc ; sal byte ptr [rax - 0x75], 1 ; ret 0xbe30
0x000000000041fdd5 : test al, 0x6f ; ret
0x000000000042815d : test byte ptr [rax + 0x1495c54], al ; ret
0x000000000042814d : test byte ptr [rax + 0x29495c54], al ; ret
0x0000000000421cde : test byte ptr [rax - 0x45], 0x12 ; and al, 0x59 ; ret
0x00000000004203f1 : test byte ptr [rax - 0x45], 0x4f ; ret
0x0000000000430b6a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000043273c : test byte ptr [rax], al ; add byte ptr [rax], al ; mov al, -0xe ; cld ; jmp rdx
0x000000000041a465 : test byte ptr [rcx + 1], cl ; ret
0x000000000042949e : test byte ptr [rdi + rdx*4 + 0x6f], ch ; ret 0x34c0
0x00000000004254b8 : test byte ptr [rdi], bl ; or eax, 0x894c6a58 ; ret
0x000000000040a23f : test byte ptr [rdx + 0x4c034b25], -0x77 ; ret
0x00000000004254b7 : test byte ptr fs:[rdi], bl ; or eax, 0x894c6a58 ; ret
0x0000000000418e95 : test ch, 0x54 ; ret 0x8949
0x0000000000418ea5 : test ch, 0x54 ; ret 0x894c
0x0000000000418eb8 : test ch, 0x54 ; ret 0x894d
0x0000000000418ede : test ch, 0x54 ; ret 0x949
0x000000000041466d : test dword ptr [rsi - 0x76b3e015], edx ; ret
0x0000000000428a37 : test eax, 0x5accf3a0 ; rsqrtps xmm1, xmmword ptr [rcx + 1] ; ret 0xb848
0x0000000000401d86 : wait ; add byte ptr [rax], al ; add dh, al ; add al, 0x25 ; ret
0x0000000000416f90 : wait ; add cl, byte ptr [rbp + 9] ; ret 0x8148
0x0000000000416f8e : wait ; and byte ptr [rbx + 0x94d0248], bl ; ret 0x8148
0x0000000000407745 : wait ; outsb dx, byte ptr [rsi] ; pop rbp ; or eax, 0x894c682a ; ret
0x000000000040b237 : xchg eax, ebp ; call rdx
0x0000000000416ba6 : xchg eax, ebp ; clc ; idiv bh ; dec dword ptr [rax + 0x29] ; ret 0x8b48
0x0000000000413b5f : xchg eax, ebp ; clc ; idiv edi ; dec dword ptr [rax + 0x29] ; ret 0x8b48
0x0000000000414b58 : xchg eax, ebp ; cwde ; idiv edi ; dec dword ptr [rax + 0x29] ; ret 0x8b48
0x00000000004247a2 : xchg eax, ebp ; out -0x4b, al ; ret
0x0000000000402abc : xchg eax, ebp ; ret 0x8840
0x000000000040230c : xchg eax, ebp ; ret 0xd284
0x0000000000402c77 : xchg eax, ebp ; sar dh, -1 ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x00000000004278da : xchg eax, ebp ; xor dl, 0xff ; dec dword ptr [rax + 0x29] ; ret 0x8b48
0x00000000004047f9 : xchg eax, ecx ; movsb byte ptr [rdi], byte ptr gs:[rsi] ; fimul word ptr [rax - 0x76b35f6f] ; ret
0x00000000004047d6 : xchg eax, ecx ; movsb byte ptr [rdi], byte ptr gs:[rsi] ; fimul word ptr [rax - 0x76b65f6f] ; ret 0x314d
0x000000000041b4a9 : xchg eax, ecx ; out -0x32, eax ; add cl, byte ptr [rcx + 1] ; ret 0x8b48
0x0000000000431800 : xchg eax, ecx ; xchg eax, edi ; clc ; sal byte ptr [rax - 0x75], 1 ; ret 0xbe30
0x0000000000431801 : xchg eax, edi ; clc ; sal byte ptr [rax - 0x75], 1 ; ret 0xbe30
0x00000000004294a0 : xchg eax, edi ; outsd dx, dword ptr [rsi] ; ret 0x34c0
0x00000000004239ab : xchg eax, edi ; ret
0x00000000004221a4 : xchg eax, edx ; in eax, 0x22 ; ret 0x73ea
0x000000000042560f : xchg eax, edx ; push rax ; call 0x4a2a18aa
0x0000000000425602 : xchg eax, edx ; push rax ; call 0x4d2a189d
0x000000000042562c : xchg eax, edx ; push rax ; call 0x4e2a18c7
0x000000000041c005 : xchg eax, esi ; or edi, dword ptr [rdx - 0x76b361cc] ; ret
0x000000000042e6a2 : xchg eax, esp ; ret 0xd284
0x00000000004024cd : xchg eax, esp ; ret 0xe280
0x000000000040b235 : xor al, 0x21 ; xchg eax, ebp ; call rdx
0x0000000000402cae : xor al, 0x25 ; cmp edx, dword ptr [rip - 0x76b7ffbd] ; ret 0x44e8
0x0000000000402c5a : xor al, 0x25 ; loop 0x402c7a ; add byte ptr [r8 - 0x77], cl ; ret 0x98e8
0x0000000000402c06 : xor al, 0x25 ; mov edx, dword ptr [rbx + rax*2] ; add byte ptr [rax - 0x77], cl ; ret 0xece8
0x00000000004175d8 : xor al, 0xffffffffffffffb7 ; ret
0x0000000000414a0a : xor bh, 0xff ; dec dword ptr [rcx + 9] ; ret
0x0000000000418b9b : xor bl, byte ptr [rdi - 0x30] ; enter 0x483b, 0x29 ; ret 0x8948
0x0000000000418b8b : xor bl, byte ptr [rdi - 0x30] ; enter 0x483b, 1 ; ret 0x14c
0x000000000043056e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040b234 : xor dh, byte ptr [rcx] ; xchg eax, ebp ; call rdx
0x00000000004278db : xor dl, 0xff ; dec dword ptr [rax + 0x29] ; ret 0x8b48
0x0000000000418417 : xor dword ptr [rcx - 0x76b3817b], edi ; ret
0x000000000041cae1 : xor dword ptr [rsi], edi ; ret 0x93b3
0x000000000042e167 : xor eax, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x000000000042c4b5 : xor eax, edx ; mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
