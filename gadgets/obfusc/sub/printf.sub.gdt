0x0000000000411e54 : adc byte ptr [rbp - 1], dl ; call rax
0x00000000004121b0 : adc byte ptr [rcx], -1 ; call qword ptr [rax]
0x0000000000404046 : adc byte ptr [rcx], al ; jmp rcx
0x000000000041026f : adc dword ptr [rax - 0x42], ecx ; ret
0x00000000004056c9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004121b1 : adc edi, edi ; call qword ptr [rax]
0x00000000004121d1 : adc edi, edi ; jmp rcx
0x0000000000412513 : add ah, cl ; add al, 0 ; add al, bh ; xor al, 0xffffffffffffffff ; jmp qword ptr [rdx]
0x0000000000412515 : add al, 0 ; add al, bh ; xor al, 0xffffffffffffffff ; jmp qword ptr [rdx]
0x00000000004124d5 : add al, 0 ; add byte ptr [rax], cl ; xor bh, bh ; jmp rdx
0x0000000000403802 : add al, 0x25 ; enter 0x6142, 0 ; pop rbp ; ret
0x00000000004037be : add al, 0x25 ; mov eax, 0x5d006142 ; ret
0x0000000000412517 : add al, bh ; xor al, 0xffffffffffffffff ; jmp qword ptr [rdx]
0x000000000040fc43 : add al, byte ptr [rax] ; add byte ptr [rcx - 0xdf43], al ; call qword ptr [rax]
0x0000000000411f23 : add al, dl ; push -1 ; call qword ptr [rax]
0x000000000041077f : add bh, al ; xor eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; sysenter
0x0000000000410677 : add bl, al ; sub al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040361f : add bl, bl ; insd dword ptr [rdi], dx ; loopne 0x403675 ; add esp, 0x30 ; pop rbp ; ret
0x00000000004107af : add bl, ch ; xor eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; sysenter
0x00000000004105bf : add bl, dh ; ret
0x000000000040ca14 : add byte ptr [rax + 1], cl ; ret 0xc148
0x0000000000410283 : add byte ptr [rax - 0x42], cl ; ret
0x000000000040d1e5 : add byte ptr [rax - 0x75], cl ; clc ; mov rsp, rbp ; pop rbp ; ret
0x000000000040d882 : add byte ptr [rax - 0x75], cl ; loopne 0x40d8eb ; ret
0x000000000040e789 : add byte ptr [rax - 0x75], cl ; push rbp ; call 0x210368e1
0x0000000000406ecd : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000040f1df : add byte ptr [rax - 0x77], cl ; fsubr st(1) ; ret 0xffff
0x000000000040aafa : add byte ptr [rax - 0x77], cl ; ret 0x4de8
0x0000000000402e60 : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000040aa67 : add byte ptr [rax - 0x77], cl ; ret 0xe0e8
0x0000000000411f13 : add byte ptr [rax], ah ; push -1 ; call rax
0x0000000000411e52 : add byte ptr [rax], al ; adc byte ptr [rbp - 1], dl ; call rax
0x00000000004121ae : add byte ptr [rax], al ; adc byte ptr [rcx], -1 ; call qword ptr [rax]
0x00000000004105bd : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040ca12 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0xc148
0x0000000000410281 : add byte ptr [rax], al ; add byte ptr [rax - 0x42], cl ; ret
0x000000000040d880 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; loopne 0x40d8ed ; ret
0x000000000040e787 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbp ; call 0x210368e3
0x000000000040f1dd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fsubr st(1) ; ret 0xffff
0x0000000000402e5e : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x00000000004105bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004119f3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0x0000000000403704 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d87f : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x20] ; pop rbp ; ret
0x00000000004105bc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000041072c : add byte ptr [rax], al ; add byte ptr [rax], al ; sysenter
0x0000000000402c73 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004063d5 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b703b3], cl ; ret 0xb0
0x000000000040da38 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x000000000040324c : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000401c25 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x5589
0x0000000000402315 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xfa81
0x00000000004119f5 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0x0000000000403165 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x5589
0x0000000000404d6e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000402ec1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x0000000000402401 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x0000000000405fde : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000411dd2 : add byte ptr [rax], al ; add byte ptr [rdx - 1], al ; call rax
0x000000000040821c : add byte ptr [rax], al ; add cl, ch ; ret 2
0x0000000000405691 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403706 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004012db : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000411f12 : add byte ptr [rax], al ; and byte ptr [rdx - 1], ch ; call rax
0x0000000000412516 : add byte ptr [rax], al ; clc ; xor al, 0xffffffffffffffff ; jmp qword ptr [rdx]
0x0000000000401399 : add byte ptr [rax], al ; jmp 0x4012f9
0x0000000000412bd6 : add byte ptr [rax], al ; mov byte ptr [rcx - 1], bl ; jmp rax
0x0000000000403c62 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040d881 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x20] ; pop rbp ; ret
0x00000000004124d2 : add byte ptr [rax], al ; mov word ptr [rax + rax], es ; add byte ptr [rax], cl ; xor bh, bh ; jmp rdx
0x0000000000412bd2 : add byte ptr [rax], al ; mov word ptr [rbx], cs ; add byte ptr [rax], al ; mov byte ptr [rcx - 1], bl ; jmp rax
0x0000000000402610 : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000406d6b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405360 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000402c74 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004105be : add byte ptr [rax], al ; ret
0x0000000000411d92 : add byte ptr [rax], al ; sar byte ptr [rdi], -1 ; call rax
0x0000000000411f22 : add byte ptr [rax], al ; shr byte ptr [rdx - 1], 1 ; call qword ptr [rax]
0x000000000041072e : add byte ptr [rax], al ; sysenter
0x00000000004124d7 : add byte ptr [rax], cl ; xor bh, bh ; jmp rdx
0x0000000000406d6c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000405361 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000402c75 : add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004063d7 : add byte ptr [rbx - 0x76b703b3], cl ; ret 0xb0
0x000000000040da3a : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x000000000040324e : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000040fc45 : add byte ptr [rcx - 0xdf43], al ; call qword ptr [rax]
0x000000000040d72c : add byte ptr [rcx - 0xf], al ; jmp qword ptr [rcx]
0x0000000000401788 : add byte ptr [rcx], al ; ret
0x0000000000401c27 : add byte ptr [rcx], al ; ret 0x5589
0x0000000000402317 : add byte ptr [rcx], al ; ret 0xfa81
0x00000000004119f7 : add byte ptr [rcx], bh ; ret
0x0000000000403167 : add byte ptr [rcx], ch ; ret 0x5589
0x0000000000408218 : add byte ptr [rdi], cl ; lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000404d70 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000402ec3 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x0000000000402403 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x0000000000405fe0 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000411dd4 : add byte ptr [rdx - 1], al ; call rax
0x000000000041079f : add cl, bl ; xor eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; sysenter
0x000000000040821e : add cl, ch ; ret 2
0x000000000040c9f5 : add dh, ch ; call 0x4932cb4c
0x00000000004073a9 : add dword ptr [rax - 0x77], ecx ; ret 0x8148
0x000000000040568f : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406d6a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040535f : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040fe32 : add dword ptr [rax], eax ; add byte ptr [rcx - 0xdf43], al ; call qword ptr [rax]
0x000000000040d5ed : add dword ptr [rax], ecx ; ret 0x840
0x000000000040d234 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040d2ca : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401784 : add eax, 0x212b1e ; add ebx, esi ; ret
0x0000000000408fa0 : add eax, 0x8301148b ; ret 0x89ee
0x000000000040821b : add eax, 0xe9000000 ; ret 2
0x000000000040174b : add eax, edx ; sar rax, 1 ; jne 0x40175c ; pop rbp ; ret
0x0000000000401789 : add ebx, esi ; ret
0x000000000040195b : add esp, 0x10 ; pop rbp ; ret
0x000000000040854c : add esp, 0x130 ; pop rbp ; ret
0x00000000004076e9 : add esp, 0x190 ; pop rbp ; ret
0x000000000040709c : add esp, 0x1a0 ; pop rbp ; ret
0x000000000040e734 : add esp, 0x1b8 ; pop rbp ; ret
0x0000000000410541 : add esp, 0x1c0 ; pop rbp ; ret
0x000000000040260c : add esp, 0x1f0 ; pop rbp ; ret
0x0000000000403709 : add esp, 0x20 ; pop rbp ; ret
0x0000000000401a3d : add esp, 0x30 ; pop rbp ; ret
0x000000000040341c : add esp, 0x40 ; pop rbp ; ret
0x0000000000405aac : add esp, 0x50 ; pop rbp ; ret
0x0000000000403321 : add esp, 0x70 ; pop rbp ; ret
0x0000000000407b73 : add esp, 0x820 ; pop rbp ; ret
0x00000000004059ba : add esp, 0x90 ; pop rbp ; ret
0x00000000004062d1 : add esp, 0xa0 ; pop rbp ; ret
0x0000000000402c70 : add esp, 0xf8 ; pop rbx ; pop rbp ; ret
0x00000000004012de : add esp, 8 ; ret
0x000000000040174a : add rax, rdx ; sar rax, 1 ; jne 0x40175d ; pop rbp ; ret
0x000000000040195a : add rsp, 0x10 ; pop rbp ; ret
0x000000000040854b : add rsp, 0x130 ; pop rbp ; ret
0x00000000004076e8 : add rsp, 0x190 ; pop rbp ; ret
0x000000000040709b : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000040e733 : add rsp, 0x1b8 ; pop rbp ; ret
0x0000000000410540 : add rsp, 0x1c0 ; pop rbp ; ret
0x000000000040260b : add rsp, 0x1f0 ; pop rbp ; ret
0x0000000000403708 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000401a3c : add rsp, 0x30 ; pop rbp ; ret
0x000000000040341b : add rsp, 0x40 ; pop rbp ; ret
0x0000000000405aab : add rsp, 0x50 ; pop rbp ; ret
0x0000000000403320 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000407b72 : add rsp, 0x820 ; pop rbp ; ret
0x00000000004059b9 : add rsp, 0x90 ; pop rbp ; ret
0x00000000004062d0 : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000402c6f : add rsp, 0xf8 ; pop rbx ; pop rbp ; ret
0x00000000004012dd : add rsp, 8 ; ret
0x000000000040d2c9 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000407b75 : and byte ptr [rax], cl ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000411f14 : and byte ptr [rdx - 1], ch ; call rax
0x0000000000401787 : and dword ptr [rax], eax ; add ebx, esi ; ret
0x00000000004037bf : and eax, 0x6142b8 ; pop rbp ; ret
0x00000000004037df : and eax, 0x6142c0 ; pop rbp ; ret
0x0000000000403803 : and eax, 0x6142c8 ; pop rbp ; ret
0x0000000000403162 : and eax, 0xa2d ; add byte ptr [rcx], ch ; ret 0x5589
0x000000000040882e : and edx, eax ; or r8d, edx ; mov dword ptr [rdi], r8d ; pop rbp ; ret
0x0000000000402e2c : call 0x202af7c
0x0000000000403025 : call 0x202b175
0x000000000040e78d : call 0x210368dd
0x000000000041026c : call 0x48528dbf
0x000000000041026b : call 0x48528dc0
0x0000000000402532 : call 0x490aae85
0x0000000000402531 : call 0x490aae86
0x000000000040c9f7 : call 0x4932cb4a
0x0000000000402111 : call 0xffffffff8a3476aa
0x0000000000405399 : call 0xffffffffe902dce9
0x0000000000405398 : call 0xffffffffe902dcea
0x0000000000410599 : call qword ptr [r12 + rbx*8]
0x000000000040fb54 : call qword ptr [rax]
0x000000000040ff04 : call qword ptr [rbx]
0x000000000040fe2b : call qword ptr [rcx]
0x000000000040febc : call qword ptr [rdx]
0x000000000040fe6c : call qword ptr [rsi]
0x000000000041059a : call qword ptr [rsp + rbx*8]
0x00000000004017ad : call rax
0x00000000004050ec : call rbx
0x00000000004062ab : call rcx
0x0000000000412433 : call rdi
0x0000000000410728 : cdq ; xor eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; sysenter
0x0000000000402c72 : clc ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040854a : clc ; add rsp, 0x130 ; pop rbp ; ret
0x000000000040729f : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405ff1 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004062cf : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x0000000000407a28 : clc ; idiv edi ; call rax
0x000000000040174f : clc ; jne 0x401758 ; pop rbp ; ret
0x0000000000403336 : clc ; mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000403e35 : clc ; mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040d7af : clc ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040d1e9 : clc ; mov rsp, rbp ; pop rbp ; ret
0x000000000040d7b2 : clc ; pop rbp ; ret
0x0000000000412518 : clc ; xor al, 0xffffffffffffffff ; jmp qword ptr [rdx]
0x0000000000408696 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040e732 : cld ; add rsp, 0x1b8 ; pop rbp ; ret
0x000000000041053f : cld ; add rsp, 0x1c0 ; pop rbp ; ret
0x0000000000407d2b : cld ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407c6a : cld ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000407b71 : cld ; add rsp, 0x820 ; pop rbp ; ret
0x000000000040d7ac : cld ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000408693 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408636 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407c67 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040da8a : cld ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004067af : cld ; pop rbp ; ret
0x000000000040fc42 : cli ; add al, byte ptr [rax] ; add byte ptr [rcx - 0xdf43], al ; call qword ptr [rax]
0x00000000004037de : cmp al, 0x25 ; rol byte ptr [rdx + 0x61], 0 ; pop rbp ; ret
0x000000000040ec30 : cmp byte ptr [rcx - 0x77], al ; ret 0x8141
0x000000000040ec24 : cmp byte ptr [rcx], ah ; ret 0x8941
0x000000000040feea : cmp dword ptr [rcx - 0xf], eax ; jmp qword ptr [rcx]
0x000000000040170d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401720 ; pop rbp ; ret
0x000000000040a1d1 : cmp edi, dword ptr [rdx + 0x5a5335da] ; ret
0x00000000004068ac : cwde ; mov rcx, qword ptr [rax*8 + 0x4115b8] ; jmp rcx
0x000000000040a1ce : dec dword ptr [rax - 0x46] ; cmp edi, dword ptr [rdx + 0x5a5335da] ; ret
0x0000000000404364 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; pop rax ; adc byte ptr [rcx], al ; jmp rcx
0x000000000040f8db : dec dword ptr [rax - 0x75] ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 1
0x0000000000408284 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000409dcf : dec dword ptr [rax - 0x77] ; ret 0x8148
0x0000000000407959 : dec dword ptr [rbx + 0x758be07d] ; fmul qword ptr [rax - 0x77] ; ret 0xb0
0x000000000040f88b : dec dword ptr [rcx + 0x31c621d6] ; ret 0xd609
0x0000000000404af2 : dec dword ptr [rcx - 0x77] ; ret 0x294d
0x000000000040a1de : enter -0x46b8, 0x3b ; mov edx, 0x5a5335da ; ret
0x000000000040341a : enter -0x7cb8, -0x3c ; pop rbp ; ret
0x000000000040880c : enter 0x4193, -0x77 ; ret 0x8141
0x0000000000404e80 : enter 0x4b05, 0x34 ; fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x0000000000403804 : enter 0x6142, 0 ; pop rbp ; ret
0x0000000000404e84 : fiadd dword ptr [rdx - 0x78] ; ret 0x8b48
0x00000000004119f0 : fld st(1) ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0x0000000000403773 : fld xword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000403620 : fld xword ptr [rbp - 0x20] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040325b : fmul dword ptr [r8 - 0x77] ; ret 0x4d89
0x000000000040325c : fmul dword ptr [rax - 0x77] ; ret 0x4d89
0x000000000040f8df : fmul dword ptr [rax - 0x7f] ; ret 1
0x000000000040795f : fmul qword ptr [rax - 0x77] ; ret 0xb0
0x000000000041059c : fmul qword ptr [rax - 0x7d] ; ret
0x00000000004025b7 : fsubr st(0) ; ret
0x000000000040f1e3 : fsubr st(1) ; ret 0xffff
0x0000000000401959 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406125 : hlt ; mov rdx, qword ptr [rbp - 0x28] ; call rax
0x0000000000401720 : hlt ; pop rbp ; mov edi, 0x614278 ; jmp rax
0x0000000000407a29 : idiv edi ; call rax
0x000000000040796c : in al, 0x48 ; add esp, 0x30 ; pop rbp ; ret
0x0000000000407778 : in al, dx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d1ec : in al, dx ; pop rbp ; ret
0x000000000040510b : inc dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000403621 : insd dword ptr [rdi], dx ; loopne 0x403673 ; add esp, 0x30 ; pop rbp ; ret
0x0000000000406ed5 : int 0x80
0x0000000000401713 : ja 0x40171a ; pop rbp ; ret
0x000000000040171f : je 0x40171d ; pop rbp ; mov edi, 0x614278 ; jmp rax
0x0000000000406124 : jge 0x406120 ; mov rdx, qword ptr [rbp - 0x28] ; call rax
0x0000000000406168 : jge 0x406164 ; mov rdx, qword ptr [rbp - 0x28] ; call rax
0x00000000004061fc : jge 0x4061f8 ; mov rdx, qword ptr [rbp - 0x28] ; call rax
0x0000000000406259 : jge 0x406255 ; mov rdx, qword ptr [rbp - 0x28] ; call rax
0x000000000040d978 : jmp 0x325a86
0x000000000040139b : jmp 0x4012f7
0x000000000040de34 : jmp 0x40de79
0x000000000040ab24 : jmp 0xffffffff8a03343c
0x00000000004073a8 : jmp 0xffffffffc2c9bbb2
0x000000000041263b : jmp qword ptr [rax]
0x000000000040308a : jmp qword ptr [rcx]
0x000000000041251b : jmp qword ptr [rdx]
0x0000000000401727 : jmp rax
0x0000000000401f5a : jmp rcx
0x0000000000401767 : jmp rdx
0x0000000000401750 : jne 0x401757 ; pop rbp ; ret
0x00000000004062c0 : jne 0x406294 ; mov rdx, qword ptr [rbp - 0x28] ; call rax
0x0000000000403323 : jo 0x403384 ; ret
0x0000000000403f85 : jo 0x403fe6 ; ret
0x00000000004055af : jo 0x405615 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405c54 : jo 0x405cb5 ; ret
0x0000000000405d8e : jo 0x405def ; ret
0x000000000040821a : lea eax, dword ptr [rip - 0x17000000] ; ret 2
0x0000000000408809 : loope 0x408864 ; enter 0x4193, -0x77 ; ret 0x8141
0x0000000000403622 : loopne 0x403672 ; add esp, 0x30 ; pop rbp ; ret
0x0000000000406122 : loopne 0x4060b7 ; jge 0x406122 ; mov rdx, qword ptr [rbp - 0x28] ; call rax
0x0000000000406121 : loopne 0x4060b8 ; jge 0x406123 ; mov rdx, qword ptr [rbp - 0x28] ; call rax
0x0000000000406166 : loopne 0x4060fb ; jge 0x406166 ; mov rdx, qword ptr [rbp - 0x28] ; call rax
0x0000000000406165 : loopne 0x4060fc ; jge 0x406167 ; mov rdx, qword ptr [rbp - 0x28] ; call rax
0x00000000004061fa : loopne 0x40618f ; jge 0x4061fa ; mov rdx, qword ptr [rbp - 0x28] ; call rax
0x00000000004061f9 : loopne 0x406190 ; jge 0x4061fb ; mov rdx, qword ptr [rbp - 0x28] ; call rax
0x0000000000406257 : loopne 0x4061ec ; jge 0x406257 ; mov rdx, qword ptr [rbp - 0x28] ; call rax
0x0000000000406256 : loopne 0x4061ed ; jge 0x406258 ; mov rdx, qword ptr [rbp - 0x28] ; call rax
0x000000000040d886 : loopne 0x40d8e7 ; ret
0x000000000040d885 : loopne 0x40d8e8 ; ret
0x0000000000405b2b : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004059b8 : mov al, 0x48 ; add esp, 0x90 ; pop rbp ; ret
0x0000000000411dd0 : mov al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdx - 1], al ; call rax
0x0000000000411e50 : mov al, 0xc ; add byte ptr [rax], al ; adc byte ptr [rbp - 1], dl ; call rax
0x0000000000411f10 : mov al, 0xf ; add byte ptr [rax], al ; and byte ptr [rdx - 1], ch ; call rax
0x0000000000411d90 : mov al, 9 ; add byte ptr [rax], al ; sar byte ptr [rdi], -1 ; call rax
0x000000000040d2c6 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000411f65 : mov bh, -1 ; call qword ptr [rax]
0x0000000000403801 : mov byte ptr [0x6142c8], al ; pop rbp ; ret
0x0000000000403337 : mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000412bd8 : mov byte ptr [rcx - 1], bl ; jmp rax
0x0000000000401783 : mov byte ptr [rip + 0x212b1e], 1 ; ret
0x0000000000409d0c : mov cl, -0x32 ; ret
0x000000000040d236 : mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040d2cc : mov dh, -0x40 ; pop rbp ; ret
0x0000000000411f55 : mov dh, -1 ; call rax
0x00000000004066cc : mov dl, -0x10 ; xchg eax, esp ; test byte ptr [rcx], ah ; ret 0xd709
0x00000000004037dd : mov dword ptr [0x6142c0], edi ; pop rbp ; ret
0x0000000000403e36 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000403df8 : mov dword ptr [rax], eax ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000403cb4 : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000403df7 : mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000406392 : mov dword ptr [rbp - 0x18], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d94c : mov dword ptr [rbp - 0x18], eax ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000401a39 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403418 : mov dword ptr [rbp - 0x38], eax ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000401957 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040da88 : mov dword ptr [rbp - 4], edx ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040d7ad : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000403eae : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000408834 : mov dword ptr [rdi], eax ; pop rbp ; ret
0x0000000000408833 : mov dword ptr [rdi], r8d ; pop rbp ; ret
0x000000000040e736 : mov eax, 0x5d000001 ; ret
0x00000000004037c0 : mov eax, 0x5d006142 ; ret
0x00000000004037bd : mov eax, dword ptr [0x6142b8] ; pop rbp ; ret
0x0000000000403c68 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004071bb : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403a53 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403c65 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004039af : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000407776 : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004074b3 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402797 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403cae : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040d950 : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040796a : mov eax, dword ptr [rbp - 0x1c] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040d884 : mov eax, dword ptr [rbp - 0x20] ; pop rbp ; ret
0x0000000000403dfa : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000403f7f : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000405b29 : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000408694 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407d29 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407c68 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004067ad : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040729d : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405fef : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040d1e7 : mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040d7b0 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000406329 : mov eax, ecx ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040331e : mov eax, esi ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004017ab : mov ebp, esp ; call rax
0x0000000000401711 : mov ebp, esp ; ja 0x40171c ; pop rbp ; ret
0x000000000040a1e0 : mov ecx, 0x35daba3b ; push rbx ; pop rdx ; ret
0x0000000000406eed : mov ecx, 0x5b2a830a ; ret
0x0000000000401f53 : mov ecx, dword ptr [rax*8 + 0x410608] ; jmp rcx
0x0000000000402972 : mov ecx, dword ptr [rax*8 + 0x410658] ; jmp rcx
0x000000000040336c : mov ecx, dword ptr [rax*8 + 0x410718] ; jmp rcx
0x0000000000404042 : mov ecx, dword ptr [rax*8 + 0x411010] ; jmp rcx
0x0000000000404366 : mov ecx, dword ptr [rax*8 + 0x411058] ; jmp rcx
0x00000000004068ae : mov ecx, dword ptr [rax*8 + 0x4115b8] ; jmp rcx
0x000000000040afc6 : mov ecx, dword ptr [rax*8 + 0x411988] ; jmp rcx
0x0000000000408fc7 : mov ecx, dword ptr [rax*8 + 0x411a10] ; jmp rcx
0x000000000040dae7 : mov ecx, dword ptr [rax*8 + 0x411a40] ; jmp rcx
0x000000000040fb46 : mov ecx, dword ptr [rax*8 + 0x411b18] ; jmp rcx
0x0000000000403cb1 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004017a5 : mov edi, 0x613e20 ; mov rbp, rsp ; call rax
0x0000000000401722 : mov edi, 0x614278 ; jmp rax
0x0000000000401762 : mov edi, 0x614278 ; jmp rdx
0x0000000000406123 : mov edi, dword ptr [rbp - 0xc] ; mov rdx, qword ptr [rbp - 0x28] ; call rax
0x0000000000410597 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000410596 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000040a1d0 : mov edx, 0x35daba3b ; push rbx ; pop rdx ; ret
0x000000000040a1d2 : mov edx, 0x5a5335da ; ret
0x0000000000406127 : mov edx, dword ptr [rbp - 0x28] ; call rax
0x00000000004062a5 : mov edx, dword ptr [rbp - 0x98] ; call rcx
0x00000000004030f3 : mov esi, 0x82c28111 ; xlatb ; jmp rcx
0x000000000040331c : mov esi, eax ; mov eax, esi ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000401760 : mov esi, eax ; mov edi, 0x614278 ; jmp rdx
0x00000000004062a2 : mov esi, edx ; mov rdx, qword ptr [rbp - 0x98] ; call rcx
0x000000000040d1eb : mov esp, ebp ; pop rbp ; ret
0x00000000004037dc : mov qword ptr [0x6142c0], rdi ; pop rbp ; ret
0x0000000000406391 : mov qword ptr [rbp - 0x18], rax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d94b : mov qword ptr [rbp - 0x18], rax ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000403ead : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405b2a : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004037bc : mov rax, qword ptr [0x6142b8] ; pop rbp ; ret
0x00000000004071ba : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403a52 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403c64 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004039ae : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004074b2 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402796 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040d94f : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040d883 : mov rax, qword ptr [rbp - 0x20] ; pop rbp ; ret
0x0000000000403f7e : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000405b28 : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040729c : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405fee : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040d1e6 : mov rax, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000406328 : mov rax, rcx ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004017aa : mov rbp, rsp ; call rax
0x0000000000401710 : mov rbp, rsp ; ja 0x40171d ; pop rbp ; ret
0x0000000000401f52 : mov rcx, qword ptr [rax*8 + 0x410608] ; jmp rcx
0x0000000000402971 : mov rcx, qword ptr [rax*8 + 0x410658] ; jmp rcx
0x000000000040336b : mov rcx, qword ptr [rax*8 + 0x410718] ; jmp rcx
0x0000000000404041 : mov rcx, qword ptr [rax*8 + 0x411010] ; jmp rcx
0x0000000000404365 : mov rcx, qword ptr [rax*8 + 0x411058] ; jmp rcx
0x00000000004068ad : mov rcx, qword ptr [rax*8 + 0x4115b8] ; jmp rcx
0x000000000040afc5 : mov rcx, qword ptr [rax*8 + 0x411988] ; jmp rcx
0x0000000000408fc6 : mov rcx, qword ptr [rax*8 + 0x411a10] ; jmp rcx
0x000000000040dae6 : mov rcx, qword ptr [rax*8 + 0x411a40] ; jmp rcx
0x000000000040fb45 : mov rcx, qword ptr [rax*8 + 0x411b18] ; jmp rcx
0x0000000000406126 : mov rdx, qword ptr [rbp - 0x28] ; call rax
0x00000000004062a4 : mov rdx, qword ptr [rbp - 0x98] ; call rcx
0x000000000040175f : mov rsi, rax ; mov edi, 0x614278 ; jmp rdx
0x000000000040d1ea : mov rsp, rbp ; pop rbp ; ret
0x00000000004124d4 : mov word ptr [rax + rax], es ; add byte ptr [rax], cl ; xor bh, bh ; jmp rdx
0x0000000000412bd4 : mov word ptr [rbx], cs ; add byte ptr [rax], al ; mov byte ptr [rcx - 1], bl ; jmp rax
0x000000000040d28a : movsx eax, cl ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004062be : movsxd rsi, dword ptr [rbp - 0x34] ; mov rdx, qword ptr [rbp - 0x28] ; call rax
0x000000000040d235 : movzx eax, al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040d2cb : movzx eax, al ; pop rbp ; ret
0x000000000040333a : movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x00000000004105b8 : nop dword ptr [rax + rax] ; ret
0x00000000004046cd : or al, 0x18 ; ret 0x6451
0x0000000000404367 : or al, 0xffffffffffffffc5 ; pop rax ; adc byte ptr [rcx], al ; jmp rcx
0x000000000040dae8 : or al, 0xffffffffffffffc5 ; sbb al, byte ptr [rcx] ; jmp rcx
0x0000000000402ebd : or byte ptr [rcx + 0x30f9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x00000000004023fd : or byte ptr [rcx + 0x7af9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x00000000004020f3 : or dword ptr [rax - 0x77], ecx ; ret 0xb0
0x0000000000405d11 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000408831 : or eax, edx ; mov dword ptr [rdi], r8d ; pop rbp ; ret
0x0000000000408830 : or r8d, edx ; mov dword ptr [rdi], r8d ; pop rbp ; ret
0x000000000040c9f6 : out dx, al ; call 0x4932cb4b
0x00000000004105ac : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004055b1 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004105ae : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004055b3 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004105b0 : pop r14 ; pop r15 ; ret
0x0000000000405363 : pop r14 ; pop rbp ; ret
0x00000000004055b5 : pop r15 ; pop rbp ; ret
0x00000000004105b2 : pop r15 ; ret
0x0000000000404369 : pop rax ; adc byte ptr [rcx], al ; jmp rcx
0x0000000000401782 : pop rbp ; mov byte ptr [rip + 0x212b1e], 1 ; ret
0x0000000000401721 : pop rbp ; mov edi, 0x614278 ; jmp rax
0x000000000040175e : pop rbp ; mov rsi, rax ; mov edi, 0x614278 ; jmp rdx
0x00000000004105ab : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004105af : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401715 : pop rbp ; ret
0x00000000004055b0 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406d6d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405362 : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000402c76 : pop rbx ; pop rbp ; ret
0x0000000000406ef1 : pop rbx ; ret
0x00000000004055b6 : pop rdi ; pop rbp ; ret
0x00000000004105b3 : pop rdi ; ret
0x000000000040a1d6 : pop rdx ; ret
0x00000000004055b4 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004105b1 : pop rsi ; pop r15 ; ret
0x0000000000405364 : pop rsi ; pop rbp ; ret
0x00000000004105ad : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004055b2 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000411f25 : push -1 ; call qword ptr [rax]
0x0000000000411f15 : push -1 ; call rax
0x0000000000403160 : push 0xa2d256a ; add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x5589
0x0000000000411f0f : push qword ptr [rax + 0x2000000f] ; push -1 ; call rax
0x0000000000411f4f : push qword ptr [rax - 0x4ffffff0] ; mov dh, -1 ; call rax
0x0000000000405aae : push rax ; pop rbp ; ret
0x0000000000411f1f : push rax ; sldt word ptr [rax] ; shr byte ptr [rdx - 1], 1 ; call qword ptr [rax]
0x0000000000402e2b : push rbp ; call 0x202af7d
0x0000000000403024 : push rbp ; call 0x202b176
0x000000000040e78c : push rbp ; call 0x210368de
0x000000000040da89 : push rbp ; cld ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040f8de : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 1
0x00000000004017a4 : push rbp ; mov edi, 0x613e20 ; mov rbp, rsp ; call rax
0x000000000040a1d5 : push rbx ; pop rdx ; ret
0x000000000040880a : push rdx ; enter 0x4193, -0x77 ; ret 0x8141
0x000000000040ec2f : push rsp ; cmp byte ptr [rcx - 0x77], al ; ret 0x8141
0x000000000040ec23 : push rsp ; cmp byte ptr [rcx], ah ; ret 0x8941
0x00000000004012e1 : ret
0x0000000000408452 : ret 0
0x000000000040e091 : ret 0x10
0x0000000000408466 : ret 0x148
0x000000000040574e : ret 0x1b2
0x000000000040dda8 : ret 0x1fe4
0x000000000040e790 : ret 0x20
0x00000000004015a2 : ret 0x212b
0x00000000004013a2 : ret 0x212c
0x0000000000402065 : ret 0x2948
0x0000000000404ad9 : ret 0x294c
0x0000000000404af5 : ret 0x294d
0x0000000000402db2 : ret 0x34d1
0x000000000040de33 : ret 0x3eeb
0x000000000040da46 : ret 0x4589
0x000000000040325f : ret 0x4d89
0x000000000040aafd : ret 0x4de8
0x000000000040e327 : ret 0x54c8
0x0000000000402ec6 : ret 0x5588
0x0000000000401c29 : ret 0x5589
0x000000000040622c : ret 0x5ee8
0x000000000040db1b : ret 0x5ef2
0x00000000004046cf : ret 0x6451
0x000000000040e284 : ret 0x651d
0x0000000000403152 : ret 0x686e
0x0000000000404b0d : ret 0x6de8
0x000000000040decc : ret 0x744a
0x000000000040da3e : ret 0x8041
0x0000000000408810 : ret 0x8141
0x00000000004073ac : ret 0x8148
0x000000000040e4ea : ret 0x8334
0x000000000040d5ef : ret 0x840
0x0000000000403252 : ret 0x8445
0x000000000040ab27 : ret 0x8589
0x0000000000404d73 : ret 0x8840
0x0000000000406869 : ret 0x8844
0x000000000040da0c : ret 0x8941
0x00000000004024a2 : ret 0x8944
0x00000000004073c0 : ret 0x8948
0x0000000000404af8 : ret 0x8949
0x0000000000404c8c : ret 0x89a5
0x0000000000408fa5 : ret 0x89ee
0x0000000000402757 : ret 0x8b48
0x000000000040678e : ret 0x8b4c
0x000000000040e994 : ret 0x9303
0x000000000040882f : ret 0x941
0x0000000000402406 : ret 0x9588
0x0000000000401bfd : ret 0xb0
0x0000000000408459 : ret 0xb849
0x0000000000406285 : ret 0xbe48
0x000000000040e45d : ret 0xc0c2
0x0000000000401745 : ret 0xc148
0x00000000004081c0 : ret 0xc2f6
0x000000000040e46a : ret 0xc4c0
0x0000000000408872 : ret 0xc8e8
0x000000000040e694 : ret 0xc996
0x00000000004044f4 : ret 0xca21
0x000000000040f951 : ret 0xca29
0x0000000000405fe3 : ret 0xd284
0x000000000040f891 : ret 0xd609
0x00000000004066d1 : ret 0xd709
0x00000000004030f6 : ret 0xd782
0x000000000040edf0 : ret 0xd83a
0x000000000040e08b : ret 0xddeb
0x000000000040aa6a : ret 0xe0e8
0x000000000040211a : ret 0xea81
0x000000000040539c : ret 0xee8
0x0000000000404d88 : ret 0xf180
0x00000000004081b3 : ret 0xf280
0x000000000040456e : ret 0xf281
0x0000000000402319 : ret 0xfa81
0x000000000040e8fa : ret 0xffff
0x0000000000402e2f : ret 1
0x0000000000408220 : ret 2
0x0000000000401bcf : ret 8
0x0000000000408832 : rol byte ptr [rcx + rcx*4 + 7], 1 ; pop rbp ; ret
0x0000000000403df6 : rol byte ptr [rcx + rcx*4], 1 ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004037e0 : rol byte ptr [rdx + 0x61], 0 ; pop rbp ; ret
0x00000000004119f1 : rol dword ptr [rax], 0 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0x0000000000406ed0 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000040249e : ror byte ptr [r8 - 0x77], 1 ; ret 0x8944
0x0000000000403f80 : ror byte ptr [r8 - 0x7d], -0x3c ; jo 0x403feb ; ret
0x000000000040174c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40175b ; pop rbp ; ret
0x000000000040dae5 : ror byte ptr [rax - 0x75], 1 ; or al, 0xffffffffffffffc5 ; sbb al, byte ptr [rcx] ; jmp rcx
0x0000000000406ed1 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000404acd : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000404ad6 : ror byte ptr [rax - 0x77], 1 ; ret 0x294c
0x000000000040249f : ror byte ptr [rax - 0x77], 1 ; ret 0x8944
0x0000000000403f81 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x403fea ; ret
0x00000000004062a3 : salc ; mov rdx, qword ptr [rbp - 0x98] ; call rcx
0x0000000000411d94 : sar byte ptr [rdi], -1 ; call rax
0x000000000040174e : sar eax, 1 ; jne 0x401759 ; pop rbp ; ret
0x000000000040174d : sar rax, 1 ; jne 0x40175a ; pop rbp ; ret
0x0000000000408fcb : sbb al, byte ptr [rcx] ; jmp rcx
0x000000000040afca : sbb dword ptr [rcx], eax ; jmp rcx
0x000000000040e279 : sbb eax, 0x81d55b65 ; ret 8
0x000000000040fb4a : sbb eax, dword ptr [rcx] ; jmp rcx
0x0000000000412431 : sbb edi, edi ; call rdi
0x0000000000411f24 : shr byte ptr [rdx - 1], 1 ; call qword ptr [rax]
0x0000000000411f11 : sldt word ptr [rax] ; and byte ptr [rdx - 1], ch ; call rax
0x0000000000411f21 : sldt word ptr [rax] ; shr byte ptr [rdx - 1], 1 ; call qword ptr [rax]
0x000000000040d2c8 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000410679 : sub al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000410671 : sub dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000406eef : sub dword ptr [rdx], 0x5b ; ret
0x00000000004105ed : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000401786 : sub esp, dword ptr [rcx] ; add byte ptr [rcx], al ; ret
0x00000000004105ec : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000410730 : sysenter
0x00000000004105ba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004066cf : test byte ptr [rcx], ah ; ret 0xd709
0x0000000000407a27 : test edi, eax ; idiv edi ; call rax
0x00000000004068b0 : vunpckhps xmm0, xmm8, xmmword ptr [rcx] ; jmp rcx
0x000000000040da3d : xchg eax, ebp ; ret 0x8041
0x0000000000404d72 : xchg eax, ebp ; ret 0x8840
0x000000000040c9f4 : xchg eax, ebx ; add dh, ch ; call 0x4932cb4d
0x0000000000402ec5 : xchg eax, esp ; ret 0x5588
0x0000000000403251 : xchg eax, esp ; ret 0x8445
0x0000000000402405 : xchg eax, esp ; ret 0x9588
0x0000000000405fe2 : xchg eax, esp ; ret 0xd284
0x00000000004066ce : xchg eax, esp ; test byte ptr [rcx], ah ; ret 0xd709
0x00000000004030f8 : xlatb ; jmp rcx
0x0000000000412519 : xor al, 0xffffffffffffffff ; jmp qword ptr [rdx]
0x00000000004124d9 : xor bh, bh ; jmp rdx
0x000000000040854e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000405aa7 : xor eax, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x0000000000410729 : xor eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; sysenter
0x0000000000403df5 : xor eax, edx ; mov dword ptr [rax], r8d ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040da86 : xor edx, eax ; mov dword ptr [rbp - 4], edx ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
