0x0000000000470778 : adc al, -0x5e ; std ; jmp rsp
0x000000000042b88b : adc al, -0x77 ; test edi, esp ; ret 0xffff
0x00000000004712b9 : adc al, -1 ; jmp qword ptr [rbx]
0x00000000004712b4 : adc al, 8 ; add byte ptr [rax], al ; cmp byte ptr [rdi + rdi*8], dl ; jmp qword ptr [rbx]
0x00000000004709ad : adc al, byte ptr [rax] ; add ah, ah ; jbe 0x4709b8 ; jmp rsp
0x000000000042f224 : adc al, byte ptr [rax] ; add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp qword ptr [rdi]
0x000000000042d2af : adc bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; call qword ptr [rax]
0x000000000044260f : adc byte ptr [rax - 0x7d], cl ; ret 0x48fc
0x00000000004408ba : adc byte ptr [rdx - 0x47], bl ; sbb dword ptr [rdi], -0x3f ; ret
0x0000000000447e4f : adc ch, byte ptr [rcx + rdx - 0x4d] ; push 0x948a459 ; ret
0x000000000045d73e : adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x000000000044a00d : adc cl, byte ptr [rax - 0x7d] ; ret 0x480c
0x00000000004501d8 : adc cl, byte ptr [rax - 0x7d] ; ret 0x4cfc
0x0000000000408a45 : adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x0000000000471129 : adc dh, bh ; call qword ptr [rdx]
0x000000000044794e : adc dword ptr [rax], eax ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], ebx ; call qword ptr [rdx]
0x0000000000465cfb : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000042f79b : adc dword ptr [rcx], esp ; std ; inc edi ; test dword ptr [rcx + rdi*8 - 1], esi ; call rsi
0x000000000045e23b : adc eax, 0x558abda1 ; ret
0x0000000000438054 : adc eax, 0xf000001 ; xchg eax, esi ; ret 0xd284
0x00000000004709ed : adc eax, dword ptr [rax] ; add ah, dl ; test edi, edi ; jmp rsp
0x000000000044024b : adc eax, dword ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; jmp rsp
0x0000000000461819 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000044bbf5 : adc eax, dword ptr [rax] ; add cl, ch ; ret
0x0000000000408d1b : adc eax, ebp ; js 0x408d0c ; ret
0x000000000040916f : adc ebp, ecx ; ret 0
0x000000000042fb6a : adc esi, edi ; mov eax, 0x81f2296f ; ret 0xf713
0x00000000004709af : add ah, ah ; jbe 0x4709b6 ; jmp rsp
0x000000000047063f : add ah, ah ; sbb bh, cl ; jmp rsp
0x0000000000470737 : add ah, al ; sbb ch, bh ; call rsp
0x00000000004706f7 : add ah, dl ; add edi, esp ; call rsp
0x00000000004709ef : add ah, dl ; test edi, edi ; jmp rsp
0x00000000004285a8 : add al, -0x6d ; std ; inc edi ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp rbx
0x000000000047063d : add al, 0 ; add ah, ah ; sbb bh, cl ; jmp rsp
0x0000000000470f15 : add al, 0 ; add byte ptr [rax], bh ; sbb bh, ch ; call qword ptr [rbx]
0x000000000044bd3f : add al, 0 ; add byte ptr [rbx - 0x46d263bb], cl ; ret 0x22e6
0x0000000000408548 : add al, 0 ; add cl, ch ; ret 1
0x000000000046d53a : add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x00000000004710a4 : add al, 6 ; add byte ptr [rax], al ; pop rax ; stc ; std ; jmp rax
0x0000000000471437 : add al, bl ; sbb bh, bh ; call qword ptr [rbx]
0x00000000004412ff : add al, byte ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rcx]
0x0000000000470ce5 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7a], ch ; stc ; call qword ptr [rcx]
0x00000000004420b2 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x792dd445], cl ; ret
0x00000000004305f6 : add al, byte ptr [rax] ; add cl, ch ; ret 0
0x000000000044d56f : add al, byte ptr [rax] ; add cl, ch ; ret 1
0x00000000004076ab : add al, byte ptr [rax] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405476 : add al, ch ; xchg eax, esp ; ret
0x0000000000405475 : add al, r13b ; xchg eax, esp ; ret
0x000000000044297a : add bh, al ; in al, -0x28 ; ret 0x8948
0x0000000000406f7f : add bh, al ; mov r12b, -0x4c ; ret
0x000000000044892e : add bh, al ; test dword ptr [rbx + rdi*8 - 1], ebx ; call qword ptr [rbx]
0x000000000044873f : add bh, al ; test dword ptr [rbx + rdi*8 - 1], ebx ; call qword ptr [rcx]
0x00000000004480dc : add bh, al ; test dword ptr [rbx + rdi*8 - 1], ebx ; call qword ptr [rdi]
0x0000000000447950 : add bh, al ; test dword ptr [rbx + rdi*8 - 1], ebx ; call qword ptr [rdx]
0x0000000000446309 : add bh, al ; test dword ptr [rbx + rdi*8 - 1], ebx ; call rdi
0x0000000000446589 : add bh, al ; test dword ptr [rbx + rdi*8 - 1], ebx ; jmp qword ptr [rdi]
0x000000000044893d : add bh, al ; test dword ptr [rbx + rdi*8 - 1], ebx ; jmp qword ptr [rdx]
0x0000000000425b13 : add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; call qword ptr [rax]
0x00000000004246a2 : add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; call qword ptr [rbx]
0x000000000042ed59 : add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; call qword ptr [rcx]
0x0000000000427d47 : add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; call qword ptr [rdx]
0x0000000000428538 : add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; call qword ptr [rsi]
0x0000000000428002 : add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; call rbx
0x000000000042dd81 : add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; call rcx
0x000000000042bcd8 : add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; call rdi
0x00000000004287b7 : add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; call rdx
0x0000000000428d90 : add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; call rsp
0x000000000042c9f1 : add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; inc dword ptr [rsi - 0x1d] ; ret
0x0000000000426910 : add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp qword ptr [rax]
0x000000000042bb59 : add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp qword ptr [rbx]
0x0000000000421fd1 : add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp qword ptr [rcx]
0x0000000000429bbb : add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp qword ptr [rdi]
0x000000000042f7fd : add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp qword ptr [rsi]
0x0000000000425439 : add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp rbx
0x0000000000426245 : add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp rcx
0x000000000042e9b3 : add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp rdi
0x000000000042a8e9 : add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp rdx
0x000000000042d34c : add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp rsi
0x0000000000424926 : add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp rsp
0x000000000042bc0f : add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; push qword ptr [rax] ; ret
0x0000000000441301 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rcx]
0x000000000043fff5 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; jmp rcx
0x000000000044024d : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; jmp rsp
0x00000000004659d4 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000045e079 : add bh, al ; test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x000000000043d482 : add bh, al ; test dword ptr [rsp + rsi*8 - 1], edx ; jmp qword ptr [rax]
0x000000000043bf26 : add bh, al ; test dword ptr [rsp + rsi*8 - 1], edx ; jmp qword ptr [rcx]
0x0000000000437f74 : add bh, al ; test dword ptr [rsp + rsi*8 - 1], edx ; jmp rax
0x000000000046d92f : add bl, dh ; ret
0x0000000000404de6 : add byte ptr [eax - 0x77], cl ; ret 0xb0e8
0x0000000000469e52 : add byte ptr [r8], al ; add byte ptr [rcx], al ; ret 0xea81
0x000000000046a0b4 : add byte ptr [r8], al ; add byte ptr [rcx], ch ; ret 0x5589
0x000000000044939d : add byte ptr [r8], r8b ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000439bce : add byte ptr [rax + 0x29], cl ; ret 0x8948
0x0000000000437c3a : add byte ptr [rax + 1], cl ; ret 0x8948
0x00000000004712b3 : add byte ptr [rax + rcx], dl ; add byte ptr [rax], al ; cmp byte ptr [rdi + rdi*8], dl ; jmp qword ptr [rbx]
0x000000000043c995 : add byte ptr [rax - 0x47], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; insd dword ptr [rdi], dx ; jmp rsi
0x0000000000470fdb : add byte ptr [rax - 0x6e900000], bh ; std ; call rcx
0x0000000000470fdf : add byte ptr [rax - 0x6f], dh ; std ; call rcx
0x0000000000464e2a : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x4703
0x00000000004627db : add byte ptr [rax - 0x75], cl ; clc ; mov rsp, rbp ; pop rbp ; ret
0x00000000004091cb : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000040562c : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x0000000000404de7 : add byte ptr [rax - 0x77], cl ; ret 0xb0e8
0x0000000000470ce7 : add byte ptr [rax - 0x7a], ch ; stc ; call qword ptr [rcx]
0x00000000004710a7 : add byte ptr [rax - 7], bl ; std ; jmp rax
0x0000000000430d3e : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000470776 : add byte ptr [rax], al ; adc al, -0x5e ; std ; jmp rsp
0x00000000004712b2 : add byte ptr [rax], al ; adc al, 8 ; add byte ptr [rax], al ; cmp byte ptr [rdi + rdi*8], dl ; jmp qword ptr [rbx]
0x00000000004710a2 : add byte ptr [rax], al ; add al, 6 ; add byte ptr [rax], al ; pop rax ; stc ; std ; jmp rax
0x0000000000442978 : add byte ptr [rax], al ; add bh, al ; in al, -0x28 ; ret 0x8948
0x00000000004246a0 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; call qword ptr [rbx]
0x0000000000427d45 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; call qword ptr [rdx]
0x0000000000428000 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; call rbx
0x000000000042ef11 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; call rsp
0x000000000042ea22 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp qword ptr [rax]
0x000000000042e9b1 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp rdi
0x00000000004659d2 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000043d480 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rsp + rsi*8 - 1], edx ; jmp qword ptr [rax]
0x000000000046d92d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000439bcc : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8948
0x0000000000437c38 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8948
0x000000000043c993 : add byte ptr [rax], al ; add byte ptr [rax - 0x47], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; insd dword ptr [rdi], dx ; jmp rsi
0x0000000000409319 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000040562a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000046d92b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000463e2a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000400710 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000400920 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x0000000000400712 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000400922 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x0000000000463e2b : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000046d92c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400714 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000400924 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x00000000004092ae : add byte ptr [rax], al ; add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x0000000000461282 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000044ac73 : add byte ptr [rax], al ; add byte ptr [rbx + 0x782d9c45], cl ; ret
0x00000000004420f7 : add byte ptr [rax], al ; add byte ptr [rbx + 0x7a2dd445], cl ; ret
0x0000000000463c42 : add byte ptr [rax], al ; add byte ptr [rbx + 0x7a2de445], cl ; ret
0x0000000000464193 : add byte ptr [rax], al ; add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x000000000044d66e : add byte ptr [rax], al ; add byte ptr [rbx - 0x47d22fbb], cl ; ret
0x000000000044af61 : add byte ptr [rax], al ; add byte ptr [rbx - 0x47d263bb], cl ; ret 0x22e6
0x000000000044d34e : add byte ptr [rax], al ; add byte ptr [rbx - 0x48d22fbb], cl ; ret
0x0000000000406802 : add byte ptr [rax], al ; add byte ptr [rbx - 0x4bd263bb], cl ; ret
0x000000000046709c : add byte ptr [rax], al ; add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x0000000000466af9 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x00000000004476f0 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret
0x0000000000447852 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x000000000045033e : add byte ptr [rax], al ; add byte ptr [rcx - 0x7f], al ; ret 0x3368
0x0000000000441ecc : add byte ptr [rax], al ; add byte ptr [rcx], al ; pop rbp ; ret
0x00000000004216f9 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x8b48
0x0000000000469e53 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xea81
0x000000000046a0b5 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x5589
0x0000000000465940 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8b48
0x000000000042ba34 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x9589
0x0000000000426a62 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; lahf ; ret 0xd284
0x0000000000469221 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000440aa5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0x8b48
0x0000000000440786 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000430119 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xe280
0x000000000043bd60 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000450403 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000438222 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000046cab5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x00000000004658ca : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000407fb7 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000448421 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000470ce2 : add byte ptr [rax], al ; add r8b, byte ptr [rax] ; add byte ptr [rax - 0x7a], ch ; stc ; call qword ptr [rcx]
0x000000000046181b : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000460ea0 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004309dd : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000465cfd : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000402200 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401693 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000470fda : add byte ptr [rax], al ; cmp al, 5 ; add byte ptr [rax], al ; jo 0x470f7c ; std ; call rcx
0x00000000004712b6 : add byte ptr [rax], al ; cmp byte ptr [rdi + rdi*8], dl ; jmp qword ptr [rbx]
0x0000000000470f16 : add byte ptr [rax], al ; cmp byte ptr [rdx], bl ; std ; call qword ptr [rbx]
0x000000000047063e : add byte ptr [rax], al ; in al, 0x1a ; stc ; jmp rsp
0x0000000000470f12 : add byte ptr [rax], al ; je 0x470f23 ; add byte ptr [rax], al ; cmp byte ptr [rdx], bl ; std ; call qword ptr [rbx]
0x00000000004017e9 : add byte ptr [rax], al ; jmp 0x4016a9
0x0000000000470fde : add byte ptr [rax], al ; jo 0x470f78 ; std ; call rcx
0x0000000000469e98 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x000000000047165a : add byte ptr [rax], al ; mov esp, 0x9000000b ; sub bh, bh ; jmp rsi
0x000000000040931a : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000047067e : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; jo 0x470681 ; jmp rsp
0x00000000004707b6 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; sbb dh, bh ; jmp rsp
0x000000000047165e : add byte ptr [rax], al ; nop ; sub bh, bh ; jmp rsi
0x00000000004710a6 : add byte ptr [rax], al ; pop rax ; stc ; std ; jmp rax
0x00000000004020dd : add byte ptr [rax], al ; pop rbp ; ret
0x000000000043c935 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004706be : add byte ptr [rax], al ; push rsp ; mov dr1, ecx ; jmp rsp
0x00000000004714fe : add byte ptr [rax], al ; rcr byte ptr [rdi], -1 ; jmp qword ptr [rbx]
0x000000000046d92e : add byte ptr [rax], al ; ret
0x0000000000400716 : add byte ptr [rax], al ; ret 0
0x0000000000400926 : add byte ptr [rax], al ; ret 2
0x0000000000471766 : add byte ptr [rax], al ; sub byte ptr [rcx - 1], cl ; call qword ptr [rdx]
0x0000000000470be6 : add byte ptr [rax], al ; test al, 0x6a ; stc ; jmp qword ptr [rbx]
0x0000000000471022 : add byte ptr [rax], al ; test byte ptr [rip - 0x3f480000], al ; std ; call qword ptr [rax]
0x0000000000471432 : add byte ptr [rax], al ; xchg eax, esp ; or dword ptr [rax], eax ; add al, bl ; sbb bh, bh ; call qword ptr [rbx]
0x00000000004712b7 : add byte ptr [rax], bh ; adc al, -1 ; jmp qword ptr [rbx]
0x0000000000471127 : add byte ptr [rax], bh ; adc dh, bh ; call qword ptr [rdx]
0x0000000000470f17 : add byte ptr [rax], bh ; sbb bh, ch ; call qword ptr [rbx]
0x0000000000471417 : add byte ptr [rax], bl ; sbb edi, edi ; call rdx
0x0000000000471023 : add byte ptr [rbp + rax - 0x3f480000], al ; std ; call qword ptr [rax]
0x0000000000404ed8 : add byte ptr [rbp - 0x77], al ; ret 0xb841
0x0000000000404ed7 : add byte ptr [rbp - 0x77], r8b ; ret 0xb841
0x00000000004092b0 : add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x000000000043c936 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000044a7e2 : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000044ac75 : add byte ptr [rbx + 0x782d9c45], cl ; ret
0x000000000044c02f : add byte ptr [rbx + 0x792d9c45], cl ; ret
0x00000000004420b4 : add byte ptr [rbx + 0x792dd445], cl ; ret
0x00000000004420f9 : add byte ptr [rbx + 0x7a2dd445], cl ; ret
0x0000000000463c44 : add byte ptr [rbx + 0x7a2de445], cl ; ret
0x0000000000464195 : add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x000000000046414a : add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x0000000000442a30 : add byte ptr [rbx - 0x27d243bb], cl ; ret 0x4589
0x00000000004429ee : add byte ptr [rbx - 0x28d243bb], cl ; ret 0x4589
0x000000000044bd41 : add byte ptr [rbx - 0x46d263bb], cl ; ret 0x22e6
0x000000000044d670 : add byte ptr [rbx - 0x47d22fbb], cl ; ret
0x000000000044af63 : add byte ptr [rbx - 0x47d263bb], cl ; ret 0x22e6
0x000000000044d350 : add byte ptr [rbx - 0x48d22fbb], cl ; ret
0x0000000000406804 : add byte ptr [rbx - 0x4bd263bb], cl ; ret
0x00000000004067b9 : add byte ptr [rbx - 0x4cd263bb], cl ; ret
0x000000000046709e : add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x0000000000405dd4 : add byte ptr [rbx - 0x64f4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000469e99 : add byte ptr [rbx - 0x76b71fbb], cl ; in al, dx ; pop rbp ; ret
0x0000000000466afb : add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x00000000004476f2 : add byte ptr [rcx + 0xf], al ; pushfq ; ret
0x00000000004269cb : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x0000000000471413 : add byte ptr [rcx + rcx], dh ; add byte ptr [rax], bl ; sbb edi, edi ; call rdx
0x0000000000404ed2 : add byte ptr [rcx - 0x48], al ; xor dh, ch ; add byte ptr [rbp - 0x77], r8b ; ret 0xb841
0x0000000000450340 : add byte ptr [rcx - 0x7f], al ; ret 0x3368
0x0000000000465a3e : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000441ece : add byte ptr [rcx], al ; pop rbp ; ret
0x0000000000401c08 : add byte ptr [rcx], al ; ret
0x00000000004216fb : add byte ptr [rcx], al ; ret 0x8b48
0x0000000000469e55 : add byte ptr [rcx], al ; ret 0xea81
0x000000000046a0b7 : add byte ptr [rcx], ch ; ret 0x5589
0x0000000000465942 : add byte ptr [rcx], ch ; ret 0x8b48
0x000000000042ba36 : add byte ptr [rcx], ch ; ret 0x9589
0x000000000046fa27 : add byte ptr [rcx], dl ; add dword ptr [rax], eax ; add byte ptr [rdi + rdi*8 - 1], cl ; jmp qword ptr [rsi]
0x000000000046fa2b : add byte ptr [rdi + rdi*8 - 1], cl ; jmp qword ptr [rsi]
0x0000000000426a64 : add byte ptr [rdi], cl ; lahf ; ret 0xd284
0x0000000000469223 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000440aa7 : add byte ptr [rdi], cl ; pushfq ; ret 0x8b48
0x0000000000440788 : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000043011b : add byte ptr [rdi], cl ; pushfq ; ret 0xe280
0x000000000043bd62 : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000450405 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000438224 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000046cab7 : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x00000000004658cc : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000438057 : add byte ptr [rdi], cl ; xchg eax, esi ; ret 0xd284
0x0000000000407fb9 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000448423 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000470ce3 : add byte ptr [rdx + rax], al ; add byte ptr [rax - 0x7a], ch ; stc ; call qword ptr [rcx]
0x0000000000470777 : add byte ptr [rdx], dl ; std ; jmp rsp
0x00000000004710a3 : add byte ptr [rsi + rax], al ; add byte ptr [rax], al ; pop rax ; stc ; std ; jmp rax
0x00000000004706bf : add byte ptr [rsi + rcx*4 - 7], dl ; jmp rsp
0x0000000000470f13 : add byte ptr [rsp + rax], dh ; add byte ptr [rax], bh ; sbb bh, ch ; call qword ptr [rbx]
0x000000000044c45f : add byte ptr cs:[rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x00000000004269ca : add byte ptr ds:[rcx + 0xf], al ; xchg eax, ebp ; ret
0x000000000042ba33 : add byte ptr fs:[rax], al ; add byte ptr [rcx], ch ; ret 0x9589
0x000000000042a635 : add cl, byte ptr [rax + 1] ; ret 0x8b48
0x000000000045e1ac : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x000000000044bbf7 : add cl, ch ; ret
0x00000000004305f8 : add cl, ch ; ret 0
0x00000000004069da : add cl, ch ; ret 1
0x000000000043c833 : add dword ptr [rax + 1], ecx ; ret 0x8948
0x000000000044892c : add dword ptr [rax], eax ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], ebx ; call qword ptr [rbx]
0x000000000044893b : add dword ptr [rax], eax ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], ebx ; jmp qword ptr [rdx]
0x000000000044c02d : add dword ptr [rax], eax ; add byte ptr [rbx + 0x792d9c45], cl ; ret
0x000000000046fa29 : add dword ptr [rax], eax ; add byte ptr [rdi + rdi*8 - 1], cl ; jmp qword ptr [rsi]
0x0000000000438055 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0xd284
0x00000000004408b8 : add dword ptr [rax], esi ; adc byte ptr [rdx - 0x47], bl ; sbb dword ptr [rdi], -0x3f ; ret
0x000000000042b8a5 : add dword ptr [rcx + 0x308b70c2], eax ; jo 0x42b8b6 ; ret 0xea81
0x00000000004693a2 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x0000000000407168 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x00000000004683de : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004257bd : add dword ptr [rdi], ecx ; pushfq ; ret 0xe280
0x0000000000401c04 : add eax, 0x27074e ; add ebx, esi ; ret
0x000000000047067d : add eax, 0x70a40000 ; stc ; jmp rsp
0x0000000000470fdd : add eax, 0x91700000 ; std ; call rcx
0x000000000044cb24 : add eax, 0xb9b80000 ; ret 0x22e6
0x0000000000471025 : add eax, 0xc0b80000 ; std ; call qword ptr [rax]
0x0000000000406f7d : add eax, dword ptr [rax] ; add bh, al ; mov r12b, -0x4c ; ret
0x000000000044873d : add eax, dword ptr [rax] ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], ebx ; call qword ptr [rcx]
0x00000000004067b7 : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x4cd263bb], cl ; ret
0x000000000044c45c : add eax, dword ptr [rcx + 0x2ef9] ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000401bcb : add eax, edx ; sar rax, 1 ; jne 0x401bdc ; pop rbp ; ret
0x000000000045082a : add ebp, ecx ; ret
0x0000000000401c09 : add ebx, esi ; ret
0x0000000000424741 : add edi, eax ; test dword ptr [rcx + rdi*8 - 1], esi ; call qword ptr [rbx]
0x000000000042e75c : add edi, eax ; test dword ptr [rcx + rdi*8 - 1], esi ; call qword ptr [rcx]
0x0000000000427de6 : add edi, eax ; test dword ptr [rcx + rdi*8 - 1], esi ; call qword ptr [rdx]
0x00000000004280f1 : add edi, eax ; test dword ptr [rcx + rdi*8 - 1], esi ; call rbx
0x000000000042fba1 : add edi, eax ; test dword ptr [rcx + rdi*8 - 1], esi ; call rsp
0x000000000042e3f6 : add edi, eax ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp rsi
0x000000000042a10c : add edi, eax ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp rsp
0x00000000004507a9 : add edi, eax ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rcx]
0x0000000000414aeb : add edi, ebp ; ret
0x00000000004706f9 : add edi, esp ; call rsp
0x0000000000430a72 : add esi, 0xa2ed707 ; mov eax, esi ; pop rbp ; ret
0x0000000000402279 : add esp, 0x10 ; pop rbp ; ret
0x0000000000465a3c : add esp, 0x100 ; pop rbp ; ret
0x000000000044da8a : add esp, 0x150 ; pop rbp ; ret
0x0000000000408160 : add esp, 0x190 ; pop rbp ; ret
0x0000000000465bac : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000460ea3 : add esp, 0x20 ; pop rbp ; ret
0x00000000004309e0 : add esp, 0x30 ; pop rbp ; ret
0x0000000000465d00 : add esp, 0x40 ; pop rbp ; ret
0x000000000046d739 : add esp, 0x440 ; pop rbp ; ret
0x000000000044cf22 : add esp, 0x4d0 ; pop rbp ; ret
0x0000000000402203 : add esp, 0x50 ; pop rbp ; ret
0x0000000000466c20 : add esp, 0x60 ; pop rbp ; ret
0x00000000004411bc : add esp, 0x690 ; pop rbp ; ret
0x0000000000462b92 : add esp, 0x70 ; pop rbp ; ret
0x00000000004024f1 : add esp, 0x80 ; pop rbp ; ret
0x0000000000408daa : add esp, 0x90 ; pop rbp ; ret
0x00000000004020d9 : add esp, 0xa0 ; pop rbp ; ret
0x00000000004427dd : add esp, 0xb0 ; pop rbp ; ret
0x0000000000451b2a : add esp, 0xd0 ; pop rbp ; ret
0x000000000040765e : add esp, 0xe0 ; pop rbp ; ret
0x000000000046ab3f : add esp, 0xf0 ; pop rbp ; ret
0x0000000000452133 : add esp, 8 ; pop rbp ; ret
0x0000000000401696 : add esp, 8 ; ret
0x000000000044893a : add qword ptr [r8], rax ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], ebx ; jmp qword ptr [rdx]
0x0000000000470ce4 : add r8b, byte ptr [rax] ; add byte ptr [rax - 0x7a], ch ; stc ; call qword ptr [rcx]
0x000000000044873c : add rax, qword ptr [r8] ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], ebx ; call qword ptr [rcx]
0x0000000000401bca : add rax, rdx ; sar rax, 1 ; jne 0x401bdd ; pop rbp ; ret
0x0000000000402278 : add rsp, 0x10 ; pop rbp ; ret
0x0000000000465a3b : add rsp, 0x100 ; pop rbp ; ret
0x000000000044da89 : add rsp, 0x150 ; pop rbp ; ret
0x000000000040815f : add rsp, 0x190 ; pop rbp ; ret
0x0000000000465bab : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000460ea2 : add rsp, 0x20 ; pop rbp ; ret
0x00000000004309df : add rsp, 0x30 ; pop rbp ; ret
0x0000000000465cff : add rsp, 0x40 ; pop rbp ; ret
0x000000000046d738 : add rsp, 0x440 ; pop rbp ; ret
0x000000000044cf21 : add rsp, 0x4d0 ; pop rbp ; ret
0x0000000000402202 : add rsp, 0x50 ; pop rbp ; ret
0x0000000000466c1f : add rsp, 0x60 ; pop rbp ; ret
0x00000000004411bb : add rsp, 0x690 ; pop rbp ; ret
0x0000000000462b91 : add rsp, 0x70 ; pop rbp ; ret
0x00000000004024f0 : add rsp, 0x80 ; pop rbp ; ret
0x0000000000408da9 : add rsp, 0x90 ; pop rbp ; ret
0x00000000004020d8 : add rsp, 0xa0 ; pop rbp ; ret
0x00000000004427dc : add rsp, 0xb0 ; pop rbp ; ret
0x0000000000451b29 : add rsp, 0xd0 ; pop rbp ; ret
0x000000000040765d : add rsp, 0xe0 ; pop rbp ; ret
0x000000000046ab3e : add rsp, 0xf0 ; pop rbp ; ret
0x0000000000452132 : add rsp, 8 ; pop rbp ; ret
0x0000000000401695 : add rsp, 8 ; ret
0x0000000000401ba4 : and ah, byte ptr [rdi] ; jmp rax
0x0000000000401be4 : and ah, byte ptr [rdi] ; jmp rdx
0x0000000000446587 : and al, 0 ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], ebx ; jmp qword ptr [rdi]
0x0000000000469e5d : and al, 0xffffffffffffff81 ; ret 0x61
0x0000000000407167 : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004683dd : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000470831 : and bh, bh ; call rsp
0x0000000000404de4 : and byte ptr [rdx], 0x67 ; add byte ptr [rax - 0x77], cl ; ret 0xb0e8
0x000000000046682b : and byte ptr [rsi + 0x58], ah ; jb 0x466862 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000043833f : and ch, byte ptr [rdi - 0x47] ; ret
0x000000000042bb56 : and cl, byte ptr [rcx] ; add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp qword ptr [rbx]
0x000000000040554a : and eax, 0x46eaf9 ; call 0x401817
0x000000000045d3e1 : and eax, 0x75b4b9d3 ; ret
0x000000000042f79c : and ebp, edi ; inc edi ; test dword ptr [rcx + rdi*8 - 1], esi ; call rsi
0x000000000042f704 : and ebp, edi ; inc edi ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp rsi
0x0000000000405db6 : call 0x4016f9
0x000000000040554f : call 0x401812
0x0000000000466d14 : call 0x401a86
0x0000000000466c25 : call 0x466ce9
0x000000000042c423 : call 0xffffffff8a42c3f1
0x00000000004420b1 : call 0xffffffff8b4420c1
0x000000000042b8a0 : call 0xffffffff8c42b8a8
0x000000000046763d : call 0xffffffffaca73871
0x000000000046763c : call 0xffffffffaca73872
0x00000000004491f8 : call 0xffffffffb8449206
0x00000000004473c0 : call 0xffffffffc2cdb7e9
0x0000000000460e99 : call 0xffffffffe90897e9
0x0000000000460e98 : call 0xffffffffe90897ea
0x0000000000442564 : call 0xfffffffffb056db0
0x000000000044272e : call 0xfffffffffb056f7a
0x0000000000401ba3 : call 0xffffffffff4082ce
0x0000000000401be3 : call 0xffffffffff40830e
0x000000000046d909 : call qword ptr [r12 + rbx*8]
0x00000000004051d8 : call qword ptr [rax]
0x00000000004246a8 : call qword ptr [rbx]
0x000000000042e762 : call qword ptr [rcx]
0x000000000042e839 : call qword ptr [rdi]
0x0000000000427d4d : call qword ptr [rdx]
0x000000000042853e : call qword ptr [rsi]
0x000000000046d90a : call qword ptr [rsp + rbx*8]
0x0000000000401c2d : call rax
0x000000000040588d : call rbx
0x000000000042dd87 : call rcx
0x000000000044630f : call rdi
0x0000000000408d75 : call rdx
0x0000000000413e04 : call rsi
0x0000000000448347 : call rsp
0x00000000004108ae : cdq ; ret 0
0x000000000044937c : clc ; add rsp, 0x30 ; pop rbp ; ret
0x000000000046d737 : clc ; add rsp, 0x440 ; pop rbp ; ret
0x0000000000463bdc : clc ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000465f87 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x0000000000468029 : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x0000000000401bcf : clc ; jne 0x401bd8 ; pop rbp ; ret
0x0000000000441ec8 : clc ; mov byte ptr [rax + 0xa9], 1 ; pop rbp ; ret
0x000000000044d0e6 : clc ; mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x000000000044295c : clc ; mov qword ptr [rbp - 0x10], rsi ; pop rbp ; ret
0x00000000004415c3 : clc ; mov qword ptr [rdx + 0x68], rcx ; pop rbp ; ret
0x00000000004063d7 : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000463d3b : clc ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000463d1b : clc ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x00000000004627df : clc ; mov rsp, rbp ; pop rbp ; ret
0x00000000004063db : clc ; pop rbp ; ret
0x000000000045070b : clc ; pop rbx ; pop rbp ; ret
0x0000000000424180 : clc ; ret 0
0x000000000045396d : clc ; ret 0x77a8
0x000000000042b995 : clc ; ret 0xffff
0x0000000000402277 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004411ba : cld ; add rsp, 0x690 ; pop rbp ; ret
0x0000000000467c7e : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000046ab3d : cld ; add rsp, 0xf0 ; pop rbp ; ret
0x00000000004706fa : cld ; call rsp
0x000000000043c919 : cld ; inc edi ; test dword ptr [rsp + rsi*8 - 1], edx ; jmp rsp
0x00000000004092df : cld ; jmp 0x40934c
0x00000000004092de : cld ; jmp 0x40934d
0x000000000042afc6 : cld ; mov cl, 0x78 ; jnp 0x42af5b ; test dword ptr [rax], esi ; ret
0x00000000004706f2 : cld ; push qword ptr [rdi + rax + 0x3d40000] ; cld ; call rsp
0x0000000000427e80 : cld ; ret
0x000000000041e4be : cld ; ret 0
0x000000000042b88e : cld ; ret 0xffff
0x000000000042a634 : cli ; add cl, byte ptr [rax + 1] ; ret 0x8b48
0x0000000000466830 : cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004425fb : cli ; or ecx, dword ptr [rax + 1] ; ret 0x8b48
0x0000000000469e5c : cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x000000000041cd3a : cmc ; ret
0x000000000046574b : cmc ; ret 0x4f0b
0x0000000000427e7d : cmp al, -0x77 ; test edi, esp ; ret
0x0000000000405471 : cmp al, 0x25 ; mov edx, 0xe80046ea ; xchg eax, esp ; ret
0x0000000000405dbd : cmp al, 0x25 ; ret
0x0000000000464e2d : cmp al, 0x25 ; ret 0x4703
0x0000000000470fdc : cmp al, 5 ; add byte ptr [rax], al ; jo 0x470f7a ; std ; call rcx
0x000000000040b742 : cmp al, dl ; ret
0x00000000004267fd : cmp bl, -1 ; dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x000000000042b47d : cmp byte ptr [rcx + 0x108589d2], dl ; ret
0x00000000004712b8 : cmp byte ptr [rdi + rdi*8], dl ; jmp qword ptr [rbx]
0x000000000042b74c : cmp byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000470f18 : cmp byte ptr [rdx], bl ; std ; call qword ptr [rbx]
0x0000000000437b0f : cmp cl, byte ptr [rax - 0x7d] ; ret 0x4837
0x00000000004658e1 : cmp cl, byte ptr [rsi - 0x946182f] ; ret 0x4f0b
0x000000000043d066 : cmp dl, -1 ; inc edi ; test dword ptr [rsp + rsi*8 - 1], edx ; jmp rdx
0x0000000000430117 : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xe280
0x0000000000447d5a : cmp dword ptr [rcx + 0x68], edx ; fisttp dword ptr [rcx - 0x77] ; ret
0x0000000000447d59 : cmp dword ptr ss:[rcx + 0x68], edx ; fisttp dword ptr [rcx - 0x77] ; ret
0x000000000042603b : cmp eax, 0xb80000a4 ; xchg eax, ebx ; ret 0x16c4
0x0000000000401b8d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401ba0 ; pop rbp ; ret
0x000000000042085a : cmp eax, edx ; ret
0x000000000042dcec : cmp edi, ebp ; inc edi ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp rbx
0x000000000045e237 : cmp esp, dword ptr [rbp - 0x47] ; push -0x75425eeb ; push rbp ; ret
0x00000000004058a0 : cmpsb byte ptr [rsi], byte ptr [rdi] ; jmp 0x4063ca
0x000000000044dca1 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x000000000042e43f : cmpsb byte ptr [rsi], byte ptr [rdi] ; sbb al, byte ptr [rsi + 0x48858948] ; ret 0xffff
0x000000000042ad5a : cmpsd dword ptr [rsi], dword ptr [rdi] ; fmul qword ptr [rsp + rsi*2 - 0x35] ; ret
0x000000000043a1e0 : cwde ; in eax, -1 ; dec dword ptr [rax + 1] ; ret 0x8b48
0x0000000000429ad7 : cwde ; ret
0x000000000042dcb5 : cwde ; ret 0xffff
0x0000000000442597 : dec dword ptr [rax + 1] ; ret 0x8948
0x000000000043a1e3 : dec dword ptr [rax + 1] ; ret 0x8b48
0x00000000004463bd : dec dword ptr [rax - 0x16653d47] ; ret 0x26
0x0000000000405dba : dec dword ptr [rax - 0x73] ; cmp al, 0x25 ; ret
0x000000000045d73b : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x0000000000426800 : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x0000000000421e56 : dec dword ptr [rax - 0x75] ; or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x000000000043a828 : dec dword ptr [rax - 0x75] ; ror byte ptr [r8 - 0x77], 1 ; ret 0x2948
0x000000000042473e : dec dword ptr [rax - 0x77] ; add edi, eax ; test dword ptr [rcx + rdi*8 - 1], esi ; call qword ptr [rbx]
0x000000000042e759 : dec dword ptr [rax - 0x77] ; add edi, eax ; test dword ptr [rcx + rdi*8 - 1], esi ; call qword ptr [rcx]
0x0000000000427de3 : dec dword ptr [rax - 0x77] ; add edi, eax ; test dword ptr [rcx + rdi*8 - 1], esi ; call qword ptr [rdx]
0x00000000004280ee : dec dword ptr [rax - 0x77] ; add edi, eax ; test dword ptr [rcx + rdi*8 - 1], esi ; call rbx
0x000000000042e3f3 : dec dword ptr [rax - 0x77] ; add edi, eax ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp rsi
0x000000000042a109 : dec dword ptr [rax - 0x77] ; add edi, eax ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp rsp
0x00000000004507a6 : dec dword ptr [rax - 0x77] ; add edi, eax ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rcx]
0x0000000000408a84 : dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000042e56c : dec dword ptr [rax - 0x77] ; lea esp, dword ptr [rax] ; ret 0xffff
0x000000000042ed47 : dec dword ptr [rax - 0x77] ; or bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp rsi
0x0000000000447230 : dec dword ptr [rax - 0x77] ; ret 0x17e8
0x000000000044633e : dec dword ptr [rax - 0x77] ; ret 0x2948
0x000000000046d296 : dec dword ptr [rax - 0x77] ; ret 0x8148
0x0000000000405dda : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000042dcb1 : dec dword ptr [rax - 0x77] ; xchg eax, ebp ; cwde ; ret 0xffff
0x000000000042aa57 : dec dword ptr [rax - 0x77] ; xchg eax, ebp ; pop rax ; ret
0x000000000042ab5a : dec dword ptr [rax - 0x77] ; xchg eax, ebp ; push rax ; ret
0x000000000042ae69 : dec dword ptr [rax - 0x77] ; xchg eax, ebp ; ret
0x0000000000425d13 : dec dword ptr [rax - 0x7f] ; ret 0x17
0x000000000044640c : dec dword ptr [rax - 0x7f] ; ret 0x76c
0x0000000000445db7 : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000044690a : dec dword ptr [rbp - 0x77] ; ret
0x00000000004468ed : dec dword ptr [rbp - 0x77] ; ret 0x214d
0x0000000000446981 : dec dword ptr [rbp - 0x77] ; ret 0x8149
0x000000000042b5f4 : dec dword ptr [rbx + 0x885893e] ; ret
0x000000000042cf54 : dec dword ptr [rbx - 0x437a76ef] ; ret 0xffff
0x0000000000429ad2 : dec dword ptr [rbx - 0x677a76ef] ; ret
0x000000000042bb86 : dec dword ptr [rbx - 0xb7a76ce] ; ret 0xffff
0x0000000000447154 : dec dword ptr [rbx - 0xb936b] ; dec dword ptr [rdi] ; ret 0x8589
0x000000000042b426 : dec dword ptr [rcx + 0x149589f8] ; ret
0x000000000042b3bd : dec dword ptr [rcx + 0x1c9589f8] ; ret
0x000000000042b5fc : dec dword ptr [rcx + 0x49589f8] ; ret
0x000000000042b891 : dec dword ptr [rcx - 0x4a746630] ; cld ; ret 0xffff
0x0000000000429ada : dec dword ptr [rcx - 0x4a746630] ; cwde ; ret
0x0000000000465746 : dec dword ptr [rcx - 0xa167e3f] ; ret 0x4f0b
0x0000000000428d20 : dec dword ptr [rdi + rbp*2] ; mov ebp, 0xbc858984 ; ret
0x00000000004296f6 : dec dword ptr [rdi] ; pushfq ; ret 0xe280
0x000000000044715a : dec dword ptr [rdi] ; ret 0x8589
0x000000000041e57f : dec dword ptr [rdi] ; test ah, ch ; ret
0x000000000041e4bb : dec dword ptr [rdi] ; test bh, ah ; ret 0
0x000000000044d56b : dec dword ptr [rdi] ; test byte ptr [rax], ch ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000450f04 : dec dword ptr [rdi] ; test byte ptr [rbp - 0x16fffffa], bl ; ret 1
0x00000000004069d4 : dec dword ptr [rdi] ; test byte ptr [rcx - 0x16fffff9], cl ; ret 1
0x000000000045364a : dec dword ptr [rdi] ; test byte ptr [rcx], ch ; ret 0
0x000000000044bff2 : dec dword ptr [rdi] ; test byte ptr [rdi - 0x16fffff4], bh ; ret 1
0x0000000000408544 : dec dword ptr [rdi] ; test byte ptr [rdi], bh ; add al, 0 ; add cl, ch ; ret 1
0x000000000040d447 : dec dword ptr [rdi] ; test cl, ah ; ret
0x000000000041cd37 : dec dword ptr [rdi] ; test dh, ch ; ret
0x000000000044bbf1 : dec dword ptr [rdi] ; test dl, dh ; adc eax, dword ptr [rax] ; add cl, ch ; ret
0x000000000043c6a3 : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd284
0x0000000000437f94 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x00000000004266af : dec dword ptr [rdx] ; neg dword ptr [rdi] ; xor ch, cl ; ret
0x00000000004414ae : dec dword ptr [rip - 0x16b3c858] ; ret
0x000000000042e43d : dec ecx ; cmpsb byte ptr [rsi], byte ptr [rdi] ; sbb al, byte ptr [rsi + 0x48858948] ; ret 0xffff
0x0000000000441151 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000046cd19 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000427e7b : enter 0x3ce8, -0x77 ; test edi, esp ; ret
0x0000000000451949 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000407fb5 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000442a35 : fadd dword ptr [rsi + 0x26] ; ret 0x4589
0x000000000044297e : fadd dword ptr [rsi + 0x26] ; ret 0x8948
0x000000000042e4a5 : fiadd dword ptr [rcx + 0x38858948] ; ret 0xffff
0x0000000000445e7e : fidiv word ptr [rdx + 0x7c] ; ret 0x2eb9
0x0000000000443e86 : fidiv word ptr [rdx + 0x7c] ; ret 0x8589
0x0000000000447f90 : fimul dword ptr [rax + 0x21] ; ret 0x3149
0x000000000042ccac : fistp word ptr [rax] ; jmp 0x430484
0x0000000000447d5d : fisttp dword ptr [rcx - 0x77] ; ret
0x000000000044eff6 : fisubr dword ptr [rcx + 0x3f] ; ret 0x8589
0x0000000000468418 : fld qword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000450258 : fld xword ptr [rcx + 0x3f] ; ret 0x67b9
0x000000000044f33e : fld xword ptr [rcx + 0x3f] ; ret 0x8589
0x000000000044260a : fmul dword ptr [r8 - 0x75] ; push rax ; adc byte ptr [rax - 0x7d], cl ; ret 0x48fc
0x0000000000466d87 : fmul dword ptr [r9 - 0x57167e3f] ; ret
0x000000000044260b : fmul dword ptr [rax - 0x75] ; push rax ; adc byte ptr [rax - 0x7d], cl ; ret 0x48fc
0x0000000000466d88 : fmul dword ptr [rcx - 0x57167e3f] ; ret
0x000000000046d90c : fmul qword ptr [rax - 0x7d] ; ret
0x000000000042ad5b : fmul qword ptr [rsp + rsi*2 - 0x35] ; ret
0x0000000000443e32 : fnsave dword ptr [rdx + 0x7c] ; ret 0x8589
0x0000000000465c33 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004672ec : hlt ; add rsp, 0xe0 ; pop rbp ; ret
0x0000000000452131 : hlt ; add rsp, 8 ; pop rbp ; ret
0x0000000000401ba0 : hlt ; pop rbp ; mov edi, 0x6722e8 ; jmp rax
0x000000000042bb8b : hlt ; ret 0xffff
0x000000000042fb6b : idiv dword ptr [rax - 0x7e0dd691] ; ret 0xf713
0x000000000046695b : idiv edi ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000044fdb3 : imul eax, dword ptr [rsi - 0x7f], 0xfffffff7 ; jmp qword ptr [rcx]
0x000000000042a2cb : imul edx, dword ptr [rdx], 0xbda6b9e9 ; ret 0x4869
0x0000000000442bf3 : in al, -0x17 ; ret
0x000000000044297d : in al, -0x28 ; ret 0x8948
0x0000000000421fcf : in al, 0 ; add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp qword ptr [rcx]
0x0000000000470640 : in al, 0x1a ; stc ; jmp rsp
0x000000000046a481 : in al, 0x48 ; add esp, 0xb0 ; pop rbp ; ret
0x00000000004676fc : in al, dx ; jmp 0x467779
0x00000000004676fb : in al, dx ; jmp 0x46777a
0x0000000000450707 : in al, dx ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040716e : in al, dx ; pop rbp ; ret
0x00000000004070d0 : in al, dx ; ret
0x000000000042bf29 : in al, dx ; ret 0xffff
0x000000000042e64d : in al, dx ; test eax, 0x858948 ; ret 0xffff
0x000000000043a1e1 : in eax, -1 ; dec dword ptr [rax + 1] ; ret 0x8b48
0x0000000000439d20 : in eax, -1 ; inc dword ptr [rcx + 0xf] ; ret
0x0000000000408d1a : in eax, dx ; adc eax, ebp ; js 0x408d0d ; ret
0x0000000000421d2a : in eax, dx ; jmp 0x430483
0x000000000046541f : in eax, dx ; ret
0x00000000004269c8 : inc dword ptr [rax + 0xf41003e] ; xchg eax, ebp ; ret
0x00000000004476ee : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret
0x0000000000447850 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x0000000000438220 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000044e2b8 : inc dword ptr [rbp - 0x77] ; ret
0x000000000044a6eb : inc dword ptr [rbp - 0x77] ; ret 0x2145
0x00000000004465a8 : inc dword ptr [rbx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000430115 : inc dword ptr [rcx + 0x39] ; add byte ptr [rdi], cl ; pushfq ; ret 0xe280
0x000000000042b749 : inc dword ptr [rcx + 0x3b] ; cmp byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000426a5e : inc dword ptr [rcx + 0x3e] ; add byte ptr [rdi], cl ; lahf ; ret 0xd284
0x00000000004476db : inc dword ptr [rcx + 0xf] ; pushfq ; ret
0x0000000000439d22 : inc dword ptr [rcx + 0xf] ; ret
0x00000000004049fb : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8445
0x0000000000437a18 : inc dword ptr [rcx + 0xf] ; xchg eax, esi ; ret 0x8445
0x000000000042db1f : inc dword ptr [rcx + rcx*4 - 0x7b] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xffff
0x0000000000429e92 : inc dword ptr [rcx + rcx*4 - 0x7b] ; xchg eax, esp ; ret
0x000000000042c9f7 : inc dword ptr [rsi - 0x1d] ; ret
0x0000000000448730 : inc edi ; test dword ptr [rbx + rdi*8 - 1], ebx ; call rsi
0x0000000000448341 : inc edi ; test dword ptr [rbx + rdi*8 - 1], ebx ; call rsp
0x000000000044672e : inc edi ; test dword ptr [rbx + rdi*8 - 1], ebx ; jmp qword ptr [rdi]
0x0000000000448876 : inc edi ; test dword ptr [rbx + rdi*8 - 1], ebx ; jmp rsp
0x0000000000426317 : inc edi ; test dword ptr [rcx + rdi*8 - 1], esi ; call qword ptr [rbx]
0x000000000042edd4 : inc edi ; test dword ptr [rcx + rdi*8 - 1], esi ; call qword ptr [rcx]
0x000000000042e833 : inc edi ; test dword ptr [rcx + rdi*8 - 1], esi ; call qword ptr [rdi]
0x000000000042edf8 : inc edi ; test dword ptr [rcx + rdi*8 - 1], esi ; call rax
0x000000000042fafa : inc edi ; test dword ptr [rcx + rdi*8 - 1], esi ; call rbx
0x0000000000428337 : inc edi ; test dword ptr [rcx + rdi*8 - 1], esi ; call rdi
0x000000000042f054 : inc edi ; test dword ptr [rcx + rdi*8 - 1], esi ; call rdx
0x00000000004273da : inc edi ; test dword ptr [rcx + rdi*8 - 1], esi ; call rsi
0x000000000042e94e : inc edi ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp qword ptr [rax]
0x000000000042fe01 : inc edi ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp qword ptr [rbx]
0x000000000042f91e : inc edi ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp qword ptr [rcx]
0x0000000000422700 : inc edi ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp qword ptr [rdx]
0x000000000042fc0e : inc edi ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp rax
0x00000000004285ab : inc edi ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp rbx
0x000000000042ee7a : inc edi ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp rcx
0x000000000042f706 : inc edi ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp rsi
0x0000000000424df5 : inc edi ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp rsp
0x000000000042febd : inc edi ; test dword ptr [rcx + rdi*8 - 1], esi ; push qword ptr [rcx] ; ret 0x5b8b
0x000000000043d069 : inc edi ; test dword ptr [rsp + rsi*8 - 1], edx ; jmp rdx
0x000000000043c91a : inc edi ; test dword ptr [rsp + rsi*8 - 1], edx ; jmp rsp
0x0000000000441212 : inc esi ; movsd dword ptr [rdi], dword ptr [rsi] ; insb byte ptr [rdi], dx ; ret
0x00000000004709ab : inc esp ; adc al, byte ptr [rax] ; add ah, ah ; jbe 0x4709ba ; jmp rsp
0x00000000004709eb : inc esp ; adc eax, dword ptr [rax] ; add ah, dl ; test edi, edi ; jmp rsp
0x000000000047063b : inc esp ; add al, 0 ; add ah, ah ; sbb bh, cl ; jmp rsp
0x000000000047067b : inc esp ; add eax, 0x70a40000 ; stc ; jmp rsp
0x0000000000414b08 : insb byte ptr [rdi], dx ; ret
0x000000000043c999 : insd dword ptr [rdi], dx ; jmp rsi
0x000000000041dca6 : insd dword ptr [rdi], dx ; ret
0x0000000000463347 : int 0x5b
0x0000000000401b93 : ja 0x401b9a ; pop rbp ; ret
0x000000000040589e : ja 0x405839 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; jmp 0x4063cc
0x0000000000447bc3 : ja 0x447b62 ; push rdx ; ret
0x0000000000447bd3 : ja 0x447b72 ; push rdx ; ret
0x000000000042e64b : jae 0x42e621 ; in al, dx ; test eax, 0x858948 ; ret 0xffff
0x000000000042e34b : jb 0x42e3b4 ; mov ebx, 0x60858948 ; ret 0xffff
0x0000000000443e33 : jb 0x443eb3 ; ret 0x8589
0x0000000000443e87 : jb 0x443f07 ; ret 0x8589
0x0000000000445e7f : jb 0x445eff ; ret 0x2eb9
0x000000000046682e : jb 0x46685f ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000428d8e : jbe 0x428d98 ; add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; call rsp
0x00000000004709b1 : jbe 0x4709b4 ; jmp rsp
0x0000000000401b9f : je 0x401b9d ; pop rbp ; mov edi, 0x6722e8 ; jmp rax
0x00000000004285b5 : je 0x428544 ; test ebp, eax ; ret
0x000000000042ad5d : je 0x42ad2c ; ret
0x000000000042ad5c : je 0x42ad2d ; ret
0x000000000042ad70 : je 0x42ad3f ; ret
0x000000000042ad6f : je 0x42ad40 ; ret
0x0000000000470f14 : je 0x470f21 ; add byte ptr [rax], al ; cmp byte ptr [rdx], bl ; std ; call qword ptr [rbx]
0x0000000000428536 : jg 0x428540 ; add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; call qword ptr [rsi]
0x0000000000428535 : jg 0x428541 ; add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; call qword ptr [rsi]
0x00000000004063d6 : jge 0x4063d7 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000438052 : jge 0x438018 ; adc eax, 0xf000001 ; xchg eax, esi ; ret 0xd284
0x000000000043bec6 : jge 0x43be8c ; adc eax, 0xf000001 ; xchg eax, esi ; ret 0xd284
0x000000000043c6c2 : jge 0x43c688 ; adc eax, 0xf000001 ; xchg eax, esi ; ret 0xd284
0x000000000044295b : jge 0x44295c ; mov qword ptr [rbp - 0x10], rsi ; pop rbp ; ret
0x000000000044939b : jge 0x449385 ; add byte ptr [r8], r8b ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000045c7d6 : jge 0x45c75b ; ret 0xffd5
0x000000000045d2a0 : jge 0x45d280 ; shr cl, cl ; ret 0x3b
0x0000000000463d1a : jge 0x463d1b ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000463d3a : jge 0x463d3b ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x00000000004287b5 : jl 0x4287bf ; add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; call rdx
0x000000000042e4c0 : jl 0x42e48e ; sbb byte ptr [rip + 0x30858948], bl ; ret 0xffff
0x000000000044833e : jle 0x4482dc ; sti ; inc edi ; test dword ptr [rbx + rdi*8 - 1], ebx ; call rsp
0x00000000004017eb : jmp 0x4016a7
0x00000000004058a1 : jmp 0x4063c9
0x0000000000404f89 : jmp 0x4063ca
0x0000000000406f7b : jmp 0x4072ab
0x00000000004092e0 : jmp 0x40934b
0x000000000042417f : jmp 0x43047e
0x00000000004243cb : jmp 0x430482
0x00000000004221b5 : jmp 0x430483
0x0000000000422f46 : jmp 0x430484
0x00000000004399d6 : jmp 0x43d50f
0x000000000043c075 : jmp 0x43d510
0x0000000000437e63 : jmp 0x43d511
0x0000000000437e62 : jmp 0x43d512
0x000000000044262e : jmp 0x44294b
0x00000000004479dc : jmp 0x448a8f
0x00000000004502fa : jmp 0x4509f9
0x000000000045d9f0 : jmp 0x460e70
0x000000000045b8f4 : jmp 0x460e71
0x000000000045ccc1 : jmp 0x460e72
0x0000000000464b6b : jmp 0x4655d7
0x0000000000464aa8 : jmp 0x4655d9
0x0000000000464e26 : jmp 0x4655da
0x0000000000466bd3 : jmp 0x466c38
0x00000000004676fd : jmp 0x467778
0x000000000046d5d6 : jmp 0x46d8b8
0x0000000000440971 : jmp 0x493632c4
0x000000000046574a : jmp 0x4f521a46
0x000000000042a2cd : jmp 0xffffffffc300498f
0x0000000000426916 : jmp qword ptr [rax]
0x000000000042a0c9 : jmp qword ptr [rbp + rbx*2 - 0x65]
0x0000000000404d81 : jmp qword ptr [rbx]
0x0000000000421fd7 : jmp qword ptr [rcx]
0x0000000000429bc1 : jmp qword ptr [rdi]
0x0000000000422706 : jmp qword ptr [rdx]
0x000000000040589c : jmp qword ptr [rsi]
0x0000000000401ba7 : jmp rax
0x000000000042543f : jmp rbx
0x000000000042624b : jmp rcx
0x000000000042e9b9 : jmp rdi
0x0000000000401be7 : jmp rdx
0x000000000042d352 : jmp rsi
0x0000000000408e00 : jmp rsp
0x0000000000401bd0 : jne 0x401bd7 ; pop rbp ; ret
0x00000000004241e2 : jne 0x42424b ; push rdi ; jmp 0x430481
0x000000000044295f : jne 0x442954 ; pop rbp ; ret
0x00000000004298a1 : jno 0x429830 ; xchg eax, ebp ; ret
0x000000000042afc9 : jnp 0x42af58 ; test dword ptr [rax], esi ; ret
0x000000000042b8a8 : jo 0x42b83a ; xor byte ptr [rax + 1], dh ; ret 0xea81
0x000000000042b8ab : jo 0x42b8b0 ; ret 0xea81
0x00000000004566ee : jo 0x4566fa ; ret
0x000000000045835e : jo 0x45836a ; ret
0x000000000045b8ad : jo 0x45b8b9 ; ret
0x0000000000462b94 : jo 0x462bf5 ; ret
0x0000000000463be0 : jo 0x463c41 ; ret
0x0000000000463d1f : jo 0x463d80 ; ret
0x0000000000463d1e : jo 0x463d81 ; ret
0x0000000000470681 : jo 0x47067e ; jmp rsp
0x0000000000470fe0 : jo 0x470f76 ; std ; call rcx
0x0000000000451270 : jp 0x45122d ; ret
0x0000000000447bbf : jrcxz 0x447b63 ; test eax, 0x529a77a3 ; ret
0x0000000000447bcf : jrcxz 0x447b73 ; test eax, 0x529a77a3 ; ret
0x0000000000408d1d : js 0x408d0a ; ret
0x0000000000426a66 : lahf ; ret 0xd284
0x00000000004289da : lcall ptr [rbp + 3] ; std ; ret
0x00000000004240c7 : lcall ptr [rbp - 0x1601ce42] ; stosd dword ptr [rdi], eax ; ret
0x000000000045d29e : lcall ptr [rbx - 0x162d2583] ; ret 0x3b
0x000000000045e39e : lcall ptr [rsi] ; pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x0000000000409ae6 : lea eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000405548 : lea edi, dword ptr [0x46eaf9] ; call 0x401819
0x000000000042aed2 : lea edi, dword ptr [rax] ; ret
0x000000000042e56f : lea esp, dword ptr [rax] ; ret 0xffff
0x0000000000405ef5 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000044e6a0 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000450709 : lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000405ef4 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000450708 : lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000042e43e : leave ; cmpsb byte ptr [rsi], byte ptr [rdi] ; sbb al, byte ptr [rsi + 0x48858948] ; ret 0xffff
0x000000000045bbfe : ljmp ptr [rdi] ; ret 0x23da
0x000000000042ea88 : lock sbb dword ptr [rax], eax ; add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; call rdx
0x0000000000439d1f : lodsb al, byte ptr [rsi] ; in eax, -1 ; inc dword ptr [rcx + 0xf] ; ret
0x00000000004480d9 : lodsb al, byte ptr [rsi] ; or dword ptr [rax], eax ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], ebx ; call qword ptr [rdi]
0x0000000000437353 : loop 0x4372dc ; ret 0x8969
0x000000000043ad5d : loop 0x43ace6 ; ret 0xb969
0x000000000043d070 : loop 0x43cff9 ; ret 0xe969
0x0000000000431e03 : loope 0x431d8c ; ret 0x8969
0x000000000045ec05 : loope 0x45ebd3 ; jmp 0x460e73
0x0000000000404f87 : loopne 0x404fb3 ; jmp 0x4063cc
0x0000000000407660 : loopne 0x407667 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042b63a : loopne 0x42b5f7 ; ret
0x0000000000448f16 : loopne 0x448f1d ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000044939c : loopne 0x4493ea ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000044cf20 : loopne 0x44cf73 ; add esp, 0x4d0 ; pop rbp ; ret
0x0000000000452fe3 : loopne 0x453036 ; lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000046258d : loopne 0x4625f3 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000463974 : loopne 0x4639c7 ; add esp, 0xa0 ; pop rbp ; ret
0x0000000000466293 : loopne 0x46629c ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000466c1e : loopne 0x466c6e ; add esp, 0x60 ; pop rbp ; ret
0x0000000000466c1d : loopne 0x466c6f ; add esp, 0x60 ; pop rbp ; ret
0x00000000004672f0 : loopne 0x4672f7 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000467c82 : loopne 0x467c89 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000469e9c : loopne 0x469eeb ; mov esp, ebp ; pop rbp ; ret
0x0000000000469e9b : loopne 0x469eec ; mov esp, ebp ; pop rbp ; ret
0x000000000046a0ec : loopne 0x46a13b ; mov esp, ebp ; pop rbp ; ret
0x000000000046a0eb : loopne 0x46a13c ; mov esp, ebp ; pop rbp ; ret
0x0000000000408d19 : mov ah, -0x13 ; adc eax, ebp ; js 0x408d0e ; ret
0x0000000000413e02 : mov ah, -0x4c ; call rsi
0x0000000000406f82 : mov ah, -0x4c ; ret
0x000000000045c7cd : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000045c8a7 : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000045a855 : mov ah, 0x75 ; ret
0x0000000000405112 : mov al, -0x47 ; ret
0x000000000044a090 : mov al, -0x75 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000425437 : mov al, 0 ; add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp rbx
0x000000000046cd9f : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004427df : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000466d12 : mov al, 0 ; call 0x401a88
0x000000000046870d : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004683da : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000046863d : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004541f5 : mov bl, 0x75 ; ret
0x0000000000441ec9 : mov byte ptr [rax + 0xa9], 1 ; pop rbp ; ret
0x00000000004286d6 : mov byte ptr [rax - 0x1b7a760b], ah ; ret
0x000000000044d0e7 : mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000401c03 : mov byte ptr [rip + 0x27074e], 1 ; ret
0x000000000042bc68 : mov ch, -0x10 ; ret 0xffff
0x000000000042bf28 : mov ch, -0x14 ; ret 0xffff
0x000000000042cf61 : mov ch, -0x44 ; ret 0xffff
0x00000000004195f2 : mov ch, -0x4c ; call rsi
0x000000000042955d : mov ch, -0x5c ; ret
0x000000000042988e : mov ch, -0x60 ; ret
0x000000000042994b : mov ch, -0x64 ; ret
0x0000000000429adf : mov ch, -0x68 ; ret
0x000000000042b896 : mov ch, -4 ; ret 0xffff
0x000000000042b994 : mov ch, -8 ; ret 0xffff
0x000000000042b6a4 : mov ch, 0 ; ret
0x000000000042b48a : mov ch, 0x10 ; ret
0x000000000042faf7 : mov ch, 0x1d ; std ; inc edi ; test dword ptr [rcx + rdi*8 - 1], esi ; call rbx
0x000000000042b24e : mov ch, 0x24 ; ret
0x000000000042b10e : mov ch, 0x28 ; ret
0x000000000042a84b : mov ch, 0x64 ; ret
0x000000000042a45f : mov ch, 0x74 ; ret
0x000000000042b5ae : mov ch, 0xc ; ret
0x000000000045c04f : mov ch, byte ptr [rdx - 0x47] ; pop rbp ; pop rcx ; ret 0x1b2
0x000000000042afc7 : mov cl, 0x78 ; jnp 0x42af5a ; test dword ptr [rax], esi ; ret
0x000000000044680d : mov cs, word ptr [rbp + 0x54cba35] ; ret 0x3d3b
0x00000000004693a4 : mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x000000000040716a : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x00000000004683e0 : mov dh, -0x40 ; pop rbp ; ret
0x0000000000469e5a : mov dl, -0x34 ; cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x00000000004706c1 : mov dr1, ecx ; jmp rsp
0x00000000004690d1 : mov dr1, word ptr [rcx + rcx*4 - 0x7bf05bbb] ; ret 2
0x0000000000452769 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000045233f : mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x000000000044295e : mov dword ptr [rbp - 0x10], esi ; pop rbp ; ret
0x00000000004676fa : mov dword ptr [rbp - 0x14], eax ; jmp 0x46777b
0x000000000046551e : mov dword ptr [rbp - 0x378], eax ; call 0x401818
0x0000000000424232 : mov dword ptr [rbp - 0x3b04], esi ; jmp 0x430484
0x0000000000424179 : mov dword ptr [rbp - 0x68c], eax ; jmp 0x430484
0x0000000000464b68 : mov dword ptr [rbp - 0x6c], eax ; jmp 0x4655da
0x0000000000465c31 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402275 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000044295a : mov dword ptr [rbp - 8], edi ; mov qword ptr [rbp - 0x10], rsi ; pop rbp ; ret
0x00000000004063d5 : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000452a46 : mov dword ptr [rcx + 0x30], eax ; mov rsp, rbp ; pop rbp ; ret
0x00000000004415c5 : mov dword ptr [rdx + 0x68], ecx ; pop rbp ; ret
0x000000000042b3b3 : mov dword ptr [rdx + 0x73], 0x208589fd ; ret
0x00000000004525ed : mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000042fb6c : mov eax, 0x81f2296f ; ret 0xf713
0x000000000046541a : mov eax, 0xe8fffffc ; in eax, dx ; ret
0x00000000004091ca : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000466a9b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000463e71 : mov eax, dword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000450705 : mov eax, dword ptr [rbp - 0x14] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000466c6e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040a0ee : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000467575 : mov eax, dword ptr [rbp - 0x18] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000045276c : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000466c1c : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000469e9a : mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004525ef : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000045152d : mov eax, dword ptr [rbp - 0x40] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000044a08e : mov eax, dword ptr [rbp - 0x50] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000045212f : mov eax, dword ptr [rbp - 0xc] ; add rsp, 8 ; pop rbp ; ret
0x000000000044937a : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000463bda : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004627dd : mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004063d9 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000463d3d : mov eax, dword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000463d1d : mov eax, dword ptr [rdi + 0x70] ; pop rbp ; ret
0x00000000004525ee : mov eax, dword ptr ds:[rbp - 0x38] ; pop rbp ; ret
0x0000000000430a78 : mov eax, esi ; pop rbp ; ret
0x000000000042bfe7 : mov ebp, 0x8106f120 ; ret 0x76c
0x000000000042d1bb : mov ebp, 0xb8000032 ; mov ch, -0x4c ; call rsi
0x0000000000428d23 : mov ebp, 0xbc858984 ; ret
0x000000000045f008 : mov ebp, 0xe19c53ba ; ret
0x0000000000401c2b : mov ebp, esp ; call rax
0x0000000000401b91 : mov ebp, esp ; ja 0x401b9c ; pop rbp ; ret
0x0000000000401691 : mov ebx, 0x48000002 ; add esp, 8 ; ret
0x000000000042e34d : mov ebx, 0x60858948 ; ret 0xffff
0x0000000000447bbe : mov ebx, 0xa3a99be3 ; ja 0x447b67 ; push rdx ; ret
0x0000000000405db8 : mov ecx, 0x8d48ffff ; cmp al, 0x25 ; ret
0x000000000042ad57 : mov ecx, 0xdca78659 ; je 0x42ad32 ; ret
0x000000000042ad6a : mov ecx, 0xdca78659 ; je 0x42ad45 ; ret
0x000000000042e598 : mov ecx, dword ptr [rax - 0x77] ; test dword ptr [rax], ebx ; ret 0xffff
0x000000000045233c : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x0000000000401c25 : mov edi, 0x671e20 ; mov rbp, rsp ; call rax
0x0000000000401ba2 : mov edi, 0x6722e8 ; jmp rax
0x0000000000401be2 : mov edi, 0x6722e8 ; jmp rdx
0x000000000045b8a7 : mov edi, 0xb8000055 ; wait ; jo 0x45b8bf ; ret
0x000000000042b4c9 : mov edi, 0xc7fffff8 ; test dword ptr [rcx + rdi*8 - 1], esi ; call rsi
0x000000000044bff5 : mov edi, 0xe900000c ; ret 1
0x0000000000463d39 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000463d19 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000046d907 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000046d906 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000046d54e : mov edx, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000045c06b : mov edx, 0x595db993 ; ret 0x8b48
0x0000000000447bce : mov edx, 0xa3a99be3 ; ja 0x447b77 ; push rdx ; ret
0x0000000000405473 : mov edx, 0xe80046ea ; xchg eax, esp ; ret
0x0000000000408d72 : mov edx, dword ptr [rbp - 0x40] ; call rdx
0x00000000004415c1 : mov edx, dword ptr [rbp - 8] ; mov qword ptr [rdx + 0x68], rcx ; pop rbp ; ret
0x0000000000463e75 : mov edx, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000424264 : mov esi, 0x10e9fe31 ; ret 0
0x000000000045cee2 : mov esi, 0x39443e04 ; ret 0xf41
0x000000000046d537 : mov esi, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x00000000004240c9 : mov esi, 0xabe9fe31 ; ret
0x000000000042418b : mov esi, 0xe9e9fe31 ; ret 0
0x000000000042b8a9 : mov esi, dword ptr [rax] ; jo 0x42b8b2 ; ret 0xea81
0x0000000000401be0 : mov esi, eax ; mov edi, 0x6722e8 ; jmp rdx
0x00000000004429f1 : mov esp, 0x2646d72d ; ret 0x4589
0x0000000000442a33 : mov esp, 0x2646d82d ; ret 0x4589
0x000000000047165c : mov esp, 0x9000000b ; sub bh, bh ; jmp rsi
0x000000000042c33a : mov esp, 0xfdbcb9a6 ; ret
0x000000000040716d : mov esp, ebp ; pop rbp ; ret
0x000000000044295d : mov qword ptr [rbp - 0x10], rsi ; pop rbp ; ret
0x000000000046551d : mov qword ptr [rbp - 0x378], rax ; call 0x401819
0x0000000000442959 : mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; pop rbp ; ret
0x00000000004063d4 : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000452a45 : mov qword ptr [rcx + 0x30], rax ; mov rsp, rbp ; pop rbp ; ret
0x00000000004415c4 : mov qword ptr [rdx + 0x68], rcx ; pop rbp ; ret
0x0000000000408d18 : mov r12b, -0x13 ; adc eax, ebp ; js 0x408d0f ; ret
0x0000000000406f81 : mov r12b, -0x4c ; ret
0x00000000004429f0 : mov r12d, 0x2646d72d ; ret 0x4589
0x0000000000442a32 : mov r12d, 0x2646d82d ; ret 0x4589
0x000000000044a08f : mov r8b, -0x75 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004091c9 : mov rax, qword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000466a9a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000463e70 : mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000466c6d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040a0ed : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000466c1b : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000449379 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004627dc : mov rax, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004063d8 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000463d3c : mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000463d1c : mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000401c2a : mov rbp, rsp ; call rax
0x0000000000401b90 : mov rbp, rsp ; ja 0x401b9d ; pop rbp ; ret
0x0000000000463d38 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000463d18 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000408d71 : mov rdx, qword ptr [rbp - 0x40] ; call rdx
0x00000000004415c0 : mov rdx, qword ptr [rbp - 8] ; mov qword ptr [rdx + 0x68], rcx ; pop rbp ; ret
0x0000000000463e74 : mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000401bdf : mov rsi, rax ; mov edi, 0x6722e8 ; jmp rdx
0x000000000040716c : mov rsp, rbp ; pop rbp ; ret
0x0000000000466831 : mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000425e63 : movabs al, byte ptr [0x8100000030c2814d] ; ret 0x7e58
0x000000000042d1b9 : movabs al, byte ptr [0xb4b5b8000032bde9] ; call rsi
0x000000000045136a : movabs al, byte ptr [0xbc45c7144889cd95] ; ret
0x0000000000457b48 : movabs byte ptr [0x840ffffff3c48589], al ; ret 0x4b
0x000000000042bcd5 : movabs dword ptr [0xfff97485c7000047], eax ; call rdi
0x0000000000439db9 : movsb byte ptr [rdi], byte ptr [rsi] ; in eax, -1 ; inc dword ptr [rcx + 0xf] ; ret
0x0000000000414b07 : movsb byte ptr [rdi], byte ptr [rsi] ; insb byte ptr [rdi], dx ; ret
0x0000000000470680 : movsb byte ptr [rdi], byte ptr [rsi] ; jo 0x47067f ; jmp rsp
0x000000000042955e : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000045ad95 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x6a8a
0x000000000042db23 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xffff
0x00000000004707b8 : movsb byte ptr [rdi], byte ptr [rsi] ; sbb dh, bh ; jmp rsp
0x00000000004273d8 : movsb byte ptr [rdi], byte ptr [rsi] ; std ; inc edi ; test dword ptr [rcx + rdi*8 - 1], esi ; call rsi
0x000000000043c917 : movsd dword ptr [rdi], dword ptr [rsi] ; cld ; inc edi ; test dword ptr [rsp + rsi*8 - 1], edx ; jmp rsp
0x000000000043e392 : movsd dword ptr [rdi], dword ptr [rsi] ; insb byte ptr [rdi], dx ; ret
0x000000000043c998 : movsd dword ptr [rdi], dword ptr [rsi] ; insd dword ptr [rdi], dx ; jmp rsi
0x00000000004693a3 : movzx eax, al ; add rsp, 8 ; pop rbp ; ret
0x0000000000407169 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004683df : movzx eax, al ; pop rbp ; ret
0x000000000044d0ea : movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x000000000046d348 : neg byte ptr [rsi + 0x2948e012] ; ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x00000000004266b1 : neg dword ptr [rdi] ; xor ch, cl ; ret
0x0000000000447d57 : neg dword ptr [rsi + 0x36] ; cmp dword ptr [rcx + 0x68], edx ; fisttp dword ptr [rcx - 0x77] ; ret
0x000000000044c02c : nop ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x792d9c45], cl ; ret
0x000000000040589f : nop ; cmpsb byte ptr [rsi], byte ptr [rdi] ; jmp 0x4063cb
0x0000000000429f55 : nop ; ret
0x0000000000462442 : nop ; ret 0x148
0x0000000000462456 : nop ; ret 0x2948
0x000000000042df19 : nop ; ret 0xffff
0x0000000000471660 : nop ; sub bh, bh ; jmp rsi
0x000000000046d928 : nop dword ptr [rax + rax] ; ret
0x000000000042f7fb : or al, 0 ; add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp qword ptr [rsi]
0x000000000044bff6 : or al, 0 ; add cl, ch ; ret 1
0x0000000000404de2 : or al, 0x25 ; and byte ptr [rdx], 0x67 ; add byte ptr [rax - 0x77], cl ; ret 0xb0e8
0x000000000045c7ca : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000045c8a4 : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000428d21 : or al, 0x6f ; mov ebp, 0xbc858984 ; ret
0x000000000043ca0d : or al, byte ptr [rax] ; add bh, al ; test dword ptr [rsp + rsi*8 - 1], edx ; jmp rax
0x000000000042ed4a : or bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp rsi
0x0000000000425b04 : or bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp rsp
0x0000000000452340 : or byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000470735 : or byte ptr [rax], al ; add ah, al ; sbb ch, bh ; call rsp
0x00000000004712b5 : or byte ptr [rax], al ; add byte ptr [rax], bh ; adc al, -1 ; jmp qword ptr [rbx]
0x0000000000464148 : or byte ptr [rax], al ; add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x000000000044841d : or byte ptr [rcx + 0x5cf9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000421e59 : or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x00000000004508f4 : or dword ptr [rax - 0x77], ecx ; ret 0x3e8
0x0000000000452a44 : or dword ptr [rax - 0x77], ecx ; xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000471435 : or dword ptr [rax], eax ; add al, bl ; sbb bh, bh ; call qword ptr [rbx]
0x00000000004480da : or dword ptr [rax], eax ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], ebx ; call qword ptr [rdi]
0x0000000000471415 : or dword ptr [rax], eax ; add byte ptr [rax], bl ; sbb edi, edi ; call rdx
0x0000000000470775 : or dword ptr [rax], eax ; add byte ptr [rdx], dl ; std ; jmp rsp
0x000000000042b888 : or dword ptr [rbx - 0x7a76ebaf], ecx ; cld ; ret 0xffff
0x00000000004298a0 : or dword ptr [rcx - 0x76], esi ; xchg eax, ebp ; ret
0x00000000004414af : or eax, 0xe94c37a8 ; ret
0x00000000004425fc : or ecx, dword ptr [rax + 1] ; ret 0x8b48
0x00000000004525eb : or edi, eax ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000404ed6 : out dx, al ; add byte ptr [rbp - 0x77], r8b ; ret 0xb841
0x000000000045e1ab : out dx, al ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x00000000004683dc : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000046870f : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000463362 : out dx, eax ; mov al, -0x47 ; ret
0x000000000046d539 : outsb dx, byte ptr [rsi] ; add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000045f295 : outsb dx, byte ptr [rsi] ; ret 0x4861
0x0000000000453ee6 : outsb dx, byte ptr [rsi] ; ret 0x8961
0x000000000045f2e0 : outsb dx, byte ptr [rsi] ; ret 0xe961
0x00000000004659d1 : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000428d22 : outsd dx, dword ptr [rsi] ; mov ebp, 0xbc858984 ; ret
0x000000000046d53c : outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000045126d : outsd dx, dword ptr [rsi] ; sal dword ptr [rcx + 0x7a], -0x47 ; ret
0x000000000046682c : pop ax ; jb 0x466861 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000043085f : pop qword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040a5dc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000046d91c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000044a7e4 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040a5de : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000046d91e : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040a5e0 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000046d920 : pop r14 ; pop r15 ; ret
0x0000000000405ef9 : pop r14 ; pop rbp ; ret
0x000000000040a5e2 : pop r15 ; pop rbp ; ret
0x000000000046d922 : pop r15 ; ret
0x000000000046682d : pop rax ; jb 0x466860 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000042aa5b : pop rax ; ret
0x000000000042e358 : pop rax ; ret 0xffff
0x00000000004710a8 : pop rax ; stc ; std ; jmp rax
0x000000000041890a : pop rbp ; add edi, ebp ; ret
0x0000000000401c02 : pop rbp ; mov byte ptr [rip + 0x27074e], 1 ; ret
0x0000000000401ba1 : pop rbp ; mov edi, 0x6722e8 ; jmp rax
0x0000000000401bde : pop rbp ; mov rsi, rax ; mov edi, 0x6722e8 ; jmp rdx
0x000000000046d91b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040a5df : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000046d91f : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000045c052 : pop rbp ; pop rcx ; ret 0x1b2
0x0000000000458325 : pop rbp ; pop rcx ; ret 0x8589
0x000000000045c06e : pop rbp ; pop rcx ; ret 0x8b48
0x0000000000401b95 : pop rbp ; ret
0x000000000044a7e3 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000043c937 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405ef8 : pop rbx ; pop r14 ; pop rbp ; ret
0x000000000045070c : pop rbx ; pop rbp ; ret
0x0000000000464150 : pop rbx ; ret
0x000000000045c053 : pop rcx ; ret 0x1b2
0x0000000000456726 : pop rcx ; ret 0x8589
0x000000000045c06f : pop rcx ; ret 0x8b48
0x000000000045e3a0 : pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x000000000042ad58 : pop rcx ; xchg byte ptr [rdi - 0x348bb324], ah ; ret
0x000000000040a5e3 : pop rdi ; pop rbp ; ret
0x000000000046d923 : pop rdi ; ret
0x000000000044892b : pop rdx ; add dword ptr [rax], eax ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], ebx ; call qword ptr [rbx]
0x0000000000447d58 : pop rsi ; cmp dword ptr ss:[rcx + 0x68], edx ; fisttp dword ptr [rcx - 0x77] ; ret
0x000000000040a5e1 : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000046d921 : pop rsi ; pop r15 ; ret
0x0000000000405efa : pop rsi ; pop rbp ; ret
0x0000000000448420 : pop rsp ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000414aea : pop rsp ; add edi, ebp ; ret
0x000000000040a5dd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000046d91d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000044a7e5 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000456725 : pop rsp ; pop rcx ; ret 0x8589
0x0000000000432ce4 : pop rsp ; ret
0x000000000044dcf4 : popfq ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x0000000000439d1e : popfq ; lodsb al, byte ptr [rsi] ; in eax, -1 ; inc dword ptr [rcx + 0xf] ; ret
0x0000000000424263 : popfq ; mov esi, 0x10e9fe31 ; ret 0
0x00000000004240c8 : popfq ; mov esi, 0xabe9fe31 ; ret
0x000000000042418a : popfq ; mov esi, 0xe9e9fe31 ; ret 0
0x0000000000439db8 : popfq ; movsb byte ptr [rdi], byte ptr [rsi] ; in eax, -1 ; inc dword ptr [rcx + 0xf] ; ret
0x0000000000469225 : popfq ; ret 0xd284
0x0000000000425b10 : push -0x38ffff57 ; test dword ptr [rcx + rdi*8 - 1], esi ; call qword ptr [rax]
0x000000000045c050 : push -0x47 ; pop rbp ; pop rcx ; ret 0x1b2
0x000000000045e23a : push -0x75425eeb ; push rbp ; ret
0x000000000045ad98 : push -0x77 ; test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x0000000000470c09 : push -7 ; call qword ptr [rax]
0x0000000000470be9 : push -7 ; jmp qword ptr [rbx]
0x000000000044dcef : push 0x2dffffff ; popfq ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x000000000044dc9b : push 0x2dffffff ; pushfq ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x0000000000447e53 : push 0x948a459 ; ret
0x0000000000470733 : push qword ptr [rax + rcx + 0x18c40000] ; std ; call rsp
0x000000000042bc15 : push qword ptr [rax] ; ret
0x00000000004239b0 : push qword ptr [rbx - 0x1638b049] ; ret 0xca
0x000000000042e64a : push qword ptr [rbx - 0x34] ; in al, dx ; test eax, 0x858948 ; ret 0xffff
0x000000000042fec3 : push qword ptr [rcx] ; ret 0x5b8b
0x00000000004706f3 : push qword ptr [rdi + rax + 0x3d40000] ; cld ; call rsp
0x0000000000421d28 : push r14 ; in eax, dx ; jmp 0x430485
0x000000000044260e : push rax ; adc byte ptr [rax - 0x7d], cl ; ret 0x48fc
0x0000000000402205 : push rax ; pop rbp ; ret
0x000000000040c852 : push rax ; ret
0x000000000042f223 : push rbp ; adc al, byte ptr [rax] ; add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp qword ptr [rdi]
0x00000000004415c2 : push rbp ; clc ; mov qword ptr [rdx + 0x68], rcx ; pop rbp ; ret
0x0000000000463e76 : push rbp ; clc ; pop rbp ; ret
0x0000000000401c24 : push rbp ; mov edi, 0x671e20 ; mov rbp, rsp ; call rax
0x000000000045e23f : push rbp ; ret
0x000000000045e1d6 : push rbp ; ret 0xd284
0x000000000045c7cf : push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000045c8a9 : push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000417eb2 : push rbx ; ret 0
0x000000000042b88a : push rcx ; adc al, -0x77 ; test edi, esp ; ret 0xffff
0x00000000004305f5 : push rcx ; add al, byte ptr [rax] ; add cl, ch ; ret 0
0x000000000042a2ca : push rcx ; imul edx, dword ptr [rdx], 0xbda6b9e9 ; ret 0x4869
0x000000000042989f : push rcx ; or dword ptr [rcx - 0x76], esi ; xchg eax, ebp ; ret
0x000000000041f74a : push rcx ; ret
0x00000000004241e4 : push rdi ; jmp 0x43047f
0x000000000046d53b : push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x00000000004181fa : push rdi ; ret
0x0000000000447bc5 : push rdx ; ret
0x0000000000421d29 : push rsi ; in eax, dx ; jmp 0x430484
0x0000000000425436 : push rsi ; mov al, 0 ; add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp rbx
0x00000000004706c0 : push rsp ; mov dr1, ecx ; jmp rsp
0x000000000042e3d4 : push rsp ; ret 0xffff
0x000000000044dca0 : pushfq ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x000000000042994c : pushfq ; ret
0x0000000000440aa9 : pushfq ; ret 0x8b48
0x000000000044078a : pushfq ; ret 0xd284
0x00000000004257bf : pushfq ; ret 0xe280
0x0000000000471500 : rcr byte ptr [rdi], -1 ; jmp qword ptr [rbx]
0x000000000042a673 : rcr dword ptr [rip + 0xdb90e85] ; ret
0x0000000000401699 : ret
0x0000000000400718 : ret 0
0x000000000041ddf6 : ret 0x110
0x0000000000404ffd : ret 0x13
0x000000000044f20a : ret 0x1425
0x00000000004244b5 : ret 0x148
0x00000000004174be : ret 0x14c
0x000000000041141f : ret 0x16c4
0x0000000000425d16 : ret 0x17
0x0000000000447233 : ret 0x17e8
0x000000000040dfe2 : ret 0x182
0x00000000004365df : ret 0x1912
0x000000000045f3a4 : ret 0x1a
0x000000000045461d : ret 0x1add
0x000000000045c055 : ret 0x1b2
0x000000000042bff2 : ret 0x20bd
0x000000000044a6ee : ret 0x2145
0x00000000004468f0 : ret 0x214d
0x000000000040a8de : ret 0x223
0x000000000044af69 : ret 0x22e6
0x0000000000410967 : ret 0x233b
0x0000000000454f6a : ret 0x23da
0x000000000042dfb6 : ret 0x24
0x00000000004463c3 : ret 0x26
0x00000000004019f2 : ret 0x2707
0x00000000004017f2 : ret 0x2708
0x0000000000461c68 : ret 0x279e
0x0000000000403615 : ret 0x28ae
0x000000000042dab6 : ret 0x29
0x0000000000421e5c : ret 0x2948
0x0000000000447cb8 : ret 0x294d
0x000000000045e3a4 : ret 0x2a
0x000000000042d68d : ret 0x2c24
0x0000000000410267 : ret 0x2c7c
0x000000000045c7d2 : ret 0x2d50
0x000000000041c762 : ret 0x2da8
0x0000000000445e81 : ret 0x2eb9
0x0000000000425e66 : ret 0x30
0x000000000046d09e : ret 0x3040
0x0000000000422488 : ret 0x3097
0x000000000041aa66 : ret 0x30f
0x000000000044a74a : ret 0x3145
0x0000000000447f93 : ret 0x3149
0x000000000043658b : ret 0x316
0x0000000000450343 : ret 0x3368
0x00000000004420e5 : ret 0x3479
0x00000000004317ff : ret 0x349a
0x000000000042b47b : ret 0x38df
0x0000000000417ec2 : ret 0x3970
0x000000000045d2a4 : ret 0x3b
0x0000000000446813 : ret 0x3d3b
0x000000000045a305 : ret 0x3e
0x00000000004508f7 : ret 0x3e8
0x000000000040bbbe : ret 0x43fc
0x00000000004429f6 : ret 0x4589
0x0000000000464e2f : ret 0x4703
0x000000000045d741 : ret 0x4802
0x000000000044a010 : ret 0x480c
0x00000000004400d1 : ret 0x480f
0x000000000044c698 : ret 0x4810
0x000000000046d53e : ret 0x4815
0x0000000000437b12 : ret 0x4837
0x000000000045f296 : ret 0x4861
0x000000000044256f : ret 0x4864
0x000000000042a2d1 : ret 0x4869
0x0000000000446382 : ret 0x489a
0x000000000044e062 : ret 0x48c0
0x000000000042d63a : ret 0x48d4
0x000000000044fa43 : ret 0x48e0
0x000000000043be3a : ret 0x48e4
0x000000000042442d : ret 0x48ea
0x000000000040476a : ret 0x48f0
0x0000000000442612 : ret 0x48fc
0x000000000045158b : ret 0x4ae9
0x0000000000457b51 : ret 0x4b
0x0000000000413b62 : ret 0x4c1e
0x0000000000463167 : ret 0x4cc0
0x0000000000405f5c : ret 0x4cf0
0x00000000004501db : ret 0x4cfc
0x000000000043fd30 : ret 0x4e1c
0x000000000046574c : ret 0x4f0b
0x000000000042fb83 : ret 0x4ff2
0x000000000043413b : ret 0x5078
0x0000000000450bc2 : ret 0x51e0
0x0000000000438043 : ret 0x54
0x0000000000440751 : ret 0x5589
0x000000000045ca5a : ret 0x5966
0x000000000041beda : ret 0x5aaf
0x0000000000449200 : ret 0x5ab9
0x00000000004082f0 : ret 0x5ae8
0x000000000040ca83 : ret 0x5b8b
0x00000000004643a7 : ret 0x5bc6
0x000000000040afee : ret 0x5c4c
0x000000000041517a : ret 0x5db8
0x0000000000469e5f : ret 0x61
0x000000000040f9fa : ret 0x628d
0x000000000042bd85 : ret 0x634c
0x000000000045025b : ret 0x67b9
0x00000000004348e3 : ret 0x6a3f
0x0000000000453cb6 : ret 0x6a8a
0x000000000044256c : ret 0x6b48
0x000000000041f10e : ret 0x6e9b
0x000000000041d0ae : ret 0x6eb4
0x0000000000446313 : ret 0x70e9
0x000000000042b099 : ret 0x71c4
0x00000000004024ba : ret 0x76
0x000000000042bfec : ret 0x76c
0x000000000045396e : ret 0x77a8
0x000000000040b743 : ret 0x79c3
0x0000000000454ad1 : ret 0x7a8a
0x000000000045b74b : ret 0x7b7f
0x0000000000425e6c : ret 0x7e58
0x00000000004316cc : ret 0x7f1a
0x00000000004620fa : ret 0x8041
0x00000000004400c5 : ret 0x810f
0x000000000044a733 : ret 0x8141
0x00000000004428da : ret 0x8148
0x0000000000446984 : ret 0x8149
0x000000000045d664 : ret 0x822d
0x000000000043ff6b : ret 0x83d0
0x00000000004049ff : ret 0x8445
0x00000000004473a3 : ret 0x8465
0x0000000000420572 : ret 0x85
0x0000000000443dfd : ret 0x8589
0x00000000004052e3 : ret 0x858a
0x00000000004111d4 : ret 0x8919
0x000000000044513c : ret 0x893b
0x00000000004546e3 : ret 0x8940
0x00000000004473c4 : ret 0x8941
0x000000000040a0cb : ret 0x8948
0x000000000046bb5f : ret 0x894a
0x0000000000447caf : ret 0x894c
0x0000000000453ee7 : ret 0x8961
0x000000000040c090 : ret 0x8969
0x0000000000431a69 : ret 0x8979
0x000000000040a928 : ret 0x8981
0x00000000004438f4 : ret 0x899a
0x000000000044f0bc : ret 0x899e
0x0000000000433a05 : ret 0x89a1
0x0000000000415374 : ret 0x89b5
0x0000000000434a35 : ret 0x89c9
0x0000000000413f8c : ret 0x89d4
0x000000000041349c : ret 0x89e4
0x000000000041303c : ret 0x89ea
0x000000000046d158 : ret 0x8a44
0x000000000046d055 : ret 0x8a4a
0x0000000000408a48 : ret 0x8b48
0x000000000043c76d : ret 0x8b4c
0x000000000042b8a7 : ret 0x8b70
0x0000000000438bab : ret 0x8b79
0x0000000000438bd3 : ret 0x8bc9
0x000000000041b882 : ret 0x8d3f
0x0000000000451432 : ret 0x9282
0x0000000000440676 : ret 0x9336
0x000000000044a6cf : ret 0x944
0x0000000000448015 : ret 0x949
0x000000000042ba38 : ret 0x9589
0x000000000042eade : ret 0x95ad
0x0000000000443492 : ret 0x9af9
0x000000000045c8ac : ret 0xa30b
0x000000000040e4a6 : ret 0xa31
0x00000000004510db : ret 0xa4b9
0x0000000000420a96 : ret 0xaa
0x000000000046763f : ret 0xac60
0x000000000043f865 : ret 0xb
0x000000000040540f : ret 0xb0
0x0000000000404dea : ret 0xb0e8
0x000000000042a2b5 : ret 0xb269
0x000000000042d61e : ret 0xb2d4
0x000000000041c982 : ret 0xb7
0x000000000045e1b0 : ret 0xb740
0x0000000000404edb : ret 0xb841
0x0000000000466827 : ret 0xb848
0x00000000004300a4 : ret 0xb8fc
0x00000000004294ec : ret 0xb919
0x000000000045c3e0 : ret 0xb940
0x000000000046cfe2 : ret 0xb94a
0x000000000043ad5f : ret 0xb969
0x00000000004506de : ret 0xb99e
0x000000000043920e : ret 0xb9a1
0x000000000042af4a : ret 0xb9e4
0x000000000042d29a : ret 0xbc10
0x000000000045e82c : ret 0xbf48
0x0000000000401bc5 : ret 0xc148
0x00000000004184d2 : ret 0xc2
0x0000000000418082 : ret 0xc2d7
0x000000000046d798 : ret 0xc2e8
0x00000000004193c2 : ret 0xc3b9
0x000000000046a0a2 : ret 0xc493
0x0000000000418606 : ret 0xc6
0x00000000004239b6 : ret 0xca
0x0000000000447b6e : ret 0xca00
0x0000000000468399 : ret 0xca21
0x0000000000441381 : ret 0xca29
0x00000000004238b6 : ret 0xcb
0x0000000000469e65 : ret 0xccb2
0x0000000000434b14 : ret 0xccfd
0x0000000000407fbc : ret 0xd284
0x000000000043e2ea : ret 0xd374
0x000000000046b7a5 : ret 0xd618
0x00000000004406b8 : ret 0xd9af
0x00000000004453be : ret 0xdf31
0x0000000000403391 : ret 0xe0c
0x00000000004221b6 : ret 0xe2
0x00000000004257c0 : ret 0xe280
0x000000000045e082 : ret 0xe940
0x0000000000425183 : ret 0xe948
0x000000000045f2e1 : ret 0xe961
0x000000000043d072 : ret 0xe969
0x00000000004251f3 : ret 0xe981
0x00000000004463c0 : ret 0xe99a
0x000000000042fb18 : ret 0xe9e4
0x000000000045510d : ret 0xea51
0x000000000042b8ad : ret 0xea81
0x0000000000460e9c : ret 0xee8
0x000000000041bcc6 : ret 0xeefc
0x0000000000419962 : ret 0xef
0x00000000004525d5 : ret 0xf281
0x000000000045cee7 : ret 0xf41
0x0000000000410832 : ret 0xf692
0x000000000042fb71 : ret 0xf713
0x000000000045ee35 : ret 0xf7f3
0x0000000000466d1a : ret 0xf9a9
0x000000000046201a : ret 0xf9f6
0x000000000042b2f7 : ret 0xfa29
0x000000000043ce9a : ret 0xfc4a
0x000000000045d5be : ret 0xfc75
0x0000000000425726 : ret 0xfe89
0x000000000040481c : ret 0xff70
0x000000000045ee2f : ret 0xffa5
0x000000000045d5b8 : ret 0xffc4
0x0000000000437e15 : ret 0xffc8
0x000000000045c7d8 : ret 0xffd5
0x000000000045c8b2 : ret 0xffd8
0x000000000045d66a : ret 0xffd9
0x000000000045ca54 : ret 0xffe0
0x0000000000465526 : ret 0xfff9
0x000000000045b745 : ret 0xfffa
0x0000000000429549 : ret 0xfffe
0x0000000000405551 : ret 0xffff
0x000000000040567b : ret 1
0x0000000000400928 : ret 2
0x0000000000449d77 : ret 3
0x00000000004086a5 : ret 4
0x000000000044b2f8 : ret 6
0x000000000042fb7d : ret 7
0x00000000004605a4 : ret 8
0x000000000043bf3b : retf 0x15 ; add bh, al ; test dword ptr [rsp + rsi*8 - 1], edx ; jmp qword ptr [rcx]
0x000000000042ecae : retf 0x17 ; add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp rdx
0x000000000046d51d : rol byte ptr [rax + 0x48f22948], -0x7f ; ret 1
0x0000000000467f9c : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000451b2c : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000046d51c : rol byte ptr ds:[rax + 0x48f22948], -0x7f ; ret 1
0x000000000044a5c4 : rol dword ptr [rbp + 9], 1 ; ret
0x000000000045152e : ror byte ptr [r11 - 0x1376b800], 0x5d ; ret
0x00000000004091c7 : ror byte ptr [r8 - 0x75], 1 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000043a82b : ror byte ptr [r8 - 0x77], 1 ; ret 0x2948
0x0000000000466824 : ror byte ptr [rax + 1], cl ; ret 0xb848
0x0000000000401bcc : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401bdb ; pop rbp ; ret
0x00000000004091c8 : ror byte ptr [rax - 0x75], 1 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000040716b : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x000000000043a82c : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000439e52 : ror byte ptr [rax - 0x77], 1 ; ret 0x8948
0x000000000040765c : ror byte ptr [rax - 0x7f], -0x3c ; loopne 0x40766b ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000447602 : ror byte ptr [rbp + 9], 1 ; ret
0x000000000045152f : ror byte ptr [rbx - 0x1376b800], 0x5d ; ret
0x0000000000447cb5 : ror byte ptr [rcx + 1], 1 ; ret 0x294d
0x0000000000447d9b : ror byte ptr [rcx + 9], 1 ; ret
0x00000000004525ea : ror byte ptr [rcx], -0x39 ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000046d34e : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000424178 : ror dword ptr [rcx - 0x68b7b], -1 ; jmp 0x430485
0x0000000000463020 : ror dword ptr [rcx - 0x7d], cl ; ret
0x000000000042b74e : sahf ; ret 0xd284
0x0000000000401b9e : sal byte ptr [rsp + rsi*8 + 0x5d], -0x41 ; call 0xffffffffff4082d3
0x000000000045126e : sal dword ptr [rcx + 0x7a], -0x47 ; ret
0x000000000044bbf4 : salc ; adc eax, dword ptr [rax] ; add cl, ch ; ret
0x000000000042753a : sar bl, -1 ; dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x000000000042efa4 : sar bl, -1 ; dec dword ptr [rax - 0x75] ; or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x000000000042dceb : sar dword ptr [rbx], -3 ; inc edi ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp rbx
0x0000000000401bce : sar eax, 1 ; jne 0x401bd9 ; pop rbp ; ret
0x000000000045e3a1 : sar ebp, -0x17 ; ret 0x2a
0x0000000000401bcd : sar rax, 1 ; jne 0x401bda ; pop rbp ; ret
0x00000000004376ef : sbb al, -0x25 ; ret 0x8979
0x0000000000438ba9 : sbb al, -0x25 ; ret 0x8b79
0x0000000000463360 : sbb al, 0x41 ; out dx, eax ; mov al, -0x47 ; ret
0x000000000042e440 : sbb al, byte ptr [rsi + 0x48858948] ; ret 0xffff
0x0000000000471439 : sbb bh, bh ; call qword ptr [rbx]
0x0000000000470f19 : sbb bh, ch ; call qword ptr [rbx]
0x0000000000470641 : sbb bh, cl ; jmp rsp
0x000000000042e4c2 : sbb byte ptr [rip + 0x30858948], bl ; ret 0xffff
0x0000000000470739 : sbb ch, bh ; call rsp
0x000000000045e2a1 : sbb cl, ch ; ret
0x00000000004707b9 : sbb dh, bh ; jmp rsp
0x000000000040e72a : sbb dl, byte ptr [rdx] ; ret
0x000000000042ea89 : sbb dword ptr [rax], eax ; add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; call rdx
0x000000000042eaa7 : sbb dword ptr [rax], eax ; add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp rdx
0x0000000000466073 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000043eed5 : sbb dword ptr [rdi], -0x3f ; ret
0x000000000042e4c3 : sbb eax, 0x30858948 ; ret 0xffff
0x00000000004058a2 : sbb eax, 0xb800000b ; ret
0x0000000000427f16 : sbb eax, 0xb99be670 ; ret
0x000000000042a674 : sbb eax, 0xdb90e85 ; ret
0x000000000043c934 : sbb eax, dword ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000431a67 : sbb ebx, ebx ; ret 0x8979
0x00000000004623b0 : sbb ecx, dword ptr [rax - 0x7f] ; ret
0x0000000000471419 : sbb edi, edi ; call rdx
0x000000000041ecca : sbb edx, dword ptr [rdx] ; ret
0x000000000044cb23 : scasd eax, dword ptr [rdi] ; add eax, 0xb9b80000 ; ret 0x22e6
0x0000000000405758 : shr al, 0x22 ; ret
0x000000000045d2a2 : shr cl, cl ; ret 0x3b
0x0000000000443e6a : shr ecx, cl ; ret
0x000000000044c45e : stc ; add byte ptr cs:[rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000470c0a : stc ; call qword ptr [rax]
0x0000000000470cea : stc ; call qword ptr [rcx]
0x000000000047063a : stc ; inc esp ; add al, 0 ; add ah, ah ; sbb bh, cl ; jmp rsp
0x000000000047067a : stc ; inc esp ; add eax, 0x70a40000 ; stc ; jmp rsp
0x0000000000470bea : stc ; jmp qword ptr [rbx]
0x0000000000470642 : stc ; jmp rsp
0x000000000043ca0c : stc ; or al, byte ptr [rax] ; add bh, al ; test dword ptr [rsp + rsi*8 - 1], edx ; jmp rax
0x000000000044841f : stc ; pop rsp ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000045b0dd : stc ; ret 0x77a8
0x00000000004710a9 : stc ; std ; jmp rax
0x000000000047102a : std ; call qword ptr [rax]
0x0000000000470f1a : std ; call qword ptr [rbx]
0x0000000000470fe2 : std ; call rcx
0x000000000047073a : std ; call rsp
0x000000000042faf9 : std ; inc edi ; test dword ptr [rcx + rdi*8 - 1], esi ; call rbx
0x00000000004273d9 : std ; inc edi ; test dword ptr [rcx + rdi*8 - 1], esi ; call rsi
0x00000000004285aa : std ; inc edi ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp rbx
0x000000000042f705 : std ; inc edi ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp rsi
0x00000000004710aa : std ; jmp rax
0x000000000047077a : std ; jmp rsp
0x0000000000470732 : std ; push qword ptr [rax + rcx + 0x18c40000] ; std ; call rsp
0x0000000000414aec : std ; ret
0x0000000000461c67 : std ; ret 0x279e
0x0000000000448340 : sti ; inc edi ; test dword ptr [rbx + rdi*8 - 1], ebx ; call rsp
0x0000000000448875 : sti ; inc edi ; test dword ptr [rbx + rdi*8 - 1], ebx ; jmp rsp
0x0000000000421fce : stosb byte ptr [rdi], al ; in al, 0 ; add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp qword ptr [rcx]
0x000000000042e34a : stosd dword ptr [rdi], eax ; jb 0x42e3b5 ; mov ebx, 0x60858948 ; ret 0xffff
0x00000000004240cd : stosd dword ptr [rdi], eax ; ret
0x0000000000418622 : stosd dword ptr [rdi], eax ; ret 0
0x000000000040942e : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000471661 : sub bh, bh ; jmp rsi
0x0000000000467746 : sub byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000409318 : sub byte ptr [rax], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000045c7d5 : sub byte ptr [rbp - 0x7f], bh ; ret 0xffd5
0x0000000000441eca : sub byte ptr [rcx + 0x1000000], 0x5d ; ret
0x0000000000471768 : sub byte ptr [rcx - 1], cl ; call qword ptr [rdx]
0x000000000045c7cb : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000045c8a5 : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000045d665 : sub eax, 0x81268e82 ; ret 0xffd9
0x000000000044024a : sub eax, 0xc7000013 ; test dword ptr [rdi + rdi*8 - 1], ebx ; jmp rsp
0x000000000046682f : sub edx, edi ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000046d971 : sub esp, 8 ; add rsp, 8 ; ret
0x000000000046d970 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000041e581 : test ah, ch ; ret
0x000000000044cb21 : test al, -0x17 ; scasd eax, dword ptr [rdi] ; add eax, 0xb9b80000 ; ret 0x22e6
0x000000000045c7d0 : test al, -0x7f ; ret 0x2d50
0x000000000045c8aa : test al, -0x7f ; ret 0xa30b
0x000000000046cdf3 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000462a3e : test al, 0x48 ; add esp, 0x80 ; pop rbp ; ret
0x000000000045f006 : test al, 0x48 ; mov ebp, 0xe19c53ba ; ret
0x0000000000470be8 : test al, 0x6a ; stc ; jmp qword ptr [rbx]
0x00000000004658c8 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000041e4bd : test bh, ah ; ret 0
0x000000000046d92a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000044d56d : test byte ptr [rax], ch ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000450f06 : test byte ptr [rbp - 0x16fffffa], bl ; ret 1
0x00000000004069d6 : test byte ptr [rcx - 0x16fffff9], cl ; ret 1
0x000000000045364c : test byte ptr [rcx], ch ; ret 0
0x000000000044bff4 : test byte ptr [rdi - 0x16fffff4], bh ; ret 1
0x0000000000408546 : test byte ptr [rdi], bh ; add al, 0 ; add cl, ch ; ret 1
0x0000000000471024 : test byte ptr [rip - 0x3f480000], al ; std ; call qword ptr [rax]
0x000000000040d449 : test cl, ah ; ret
0x000000000041cd39 : test dh, ch ; ret
0x000000000044bbf3 : test dl, dh ; adc eax, dword ptr [rax] ; add cl, ch ; ret
0x0000000000453646 : test dword ptr [rax + 0xffffffd], esp ; test byte ptr [rcx], ch ; ret 0
0x00000000004184cb : test dword ptr [rax + rbx*8 - 0x7bf00001], ebp ; ret 0xc2
0x000000000042dfb0 : test dword ptr [rax - 0x1600003e], eax ; ret 0x24
0x0000000000465473 : test dword ptr [rax - 0x17000004], ebp ; xchg eax, ebx ; ret
0x0000000000465419 : test dword ptr [rax - 0x17000004], edi ; in eax, dx ; ret
0x000000000042e651 : test dword ptr [rax], eax ; ret 0xffff
0x000000000042e568 : test dword ptr [rax], ebp ; ret 0xffff
0x000000000042b422 : test dword ptr [rax], ebx ; ret
0x000000000042e59b : test dword ptr [rax], ebx ; ret 0xffff
0x000000000042b5f8 : test dword ptr [rax], ecx ; ret
0x000000000042e625 : test dword ptr [rax], ecx ; ret 0xffff
0x000000000042e4a9 : test dword ptr [rax], edi ; ret 0xffff
0x000000000042b481 : test dword ptr [rax], edx ; ret
0x000000000042e5c7 : test dword ptr [rax], edx ; ret 0xffff
0x000000000042afcb : test dword ptr [rax], esi ; ret
0x000000000042e4c6 : test dword ptr [rax], esi ; ret 0xffff
0x000000000042b3b9 : test dword ptr [rax], esp ; ret
0x000000000041995b : test dword ptr [rbp + rdx*8 - 0x7bf00001], edi ; ret 0xef
0x0000000000448930 : test dword ptr [rbx + rdi*8 - 1], ebx ; call qword ptr [rbx]
0x0000000000448741 : test dword ptr [rbx + rdi*8 - 1], ebx ; call qword ptr [rcx]
0x00000000004480de : test dword ptr [rbx + rdi*8 - 1], ebx ; call qword ptr [rdi]
0x0000000000447952 : test dword ptr [rbx + rdi*8 - 1], ebx ; call qword ptr [rdx]
0x000000000044630b : test dword ptr [rbx + rdi*8 - 1], ebx ; call rdi
0x0000000000448732 : test dword ptr [rbx + rdi*8 - 1], ebx ; call rsi
0x0000000000448343 : test dword ptr [rbx + rdi*8 - 1], ebx ; call rsp
0x000000000044658b : test dword ptr [rbx + rdi*8 - 1], ebx ; jmp qword ptr [rdi]
0x000000000044893f : test dword ptr [rbx + rdi*8 - 1], ebx ; jmp qword ptr [rdx]
0x0000000000448878 : test dword ptr [rbx + rdi*8 - 1], ebx ; jmp rsp
0x0000000000417eab : test dword ptr [rcx + rbx*8 - 0x7bf00001], ecx ; push rbx ; ret 0
0x0000000000425b15 : test dword ptr [rcx + rdi*8 - 1], esi ; call qword ptr [rax]
0x00000000004246a4 : test dword ptr [rcx + rdi*8 - 1], esi ; call qword ptr [rbx]
0x000000000042e75e : test dword ptr [rcx + rdi*8 - 1], esi ; call qword ptr [rcx]
0x000000000042e835 : test dword ptr [rcx + rdi*8 - 1], esi ; call qword ptr [rdi]
0x0000000000427d49 : test dword ptr [rcx + rdi*8 - 1], esi ; call qword ptr [rdx]
0x000000000042853a : test dword ptr [rcx + rdi*8 - 1], esi ; call qword ptr [rsi]
0x000000000042edfa : test dword ptr [rcx + rdi*8 - 1], esi ; call rax
0x0000000000428004 : test dword ptr [rcx + rdi*8 - 1], esi ; call rbx
0x000000000042dd83 : test dword ptr [rcx + rdi*8 - 1], esi ; call rcx
0x0000000000428339 : test dword ptr [rcx + rdi*8 - 1], esi ; call rdi
0x00000000004287b9 : test dword ptr [rcx + rdi*8 - 1], esi ; call rdx
0x00000000004273dc : test dword ptr [rcx + rdi*8 - 1], esi ; call rsi
0x0000000000428d92 : test dword ptr [rcx + rdi*8 - 1], esi ; call rsp
0x000000000042dcad : test dword ptr [rcx + rdi*8 - 1], esi ; dec dword ptr [rax - 0x77] ; xchg eax, ebp ; cwde ; ret 0xffff
0x000000000042aa53 : test dword ptr [rcx + rdi*8 - 1], esi ; dec dword ptr [rax - 0x77] ; xchg eax, ebp ; pop rax ; ret
0x000000000042ab56 : test dword ptr [rcx + rdi*8 - 1], esi ; dec dword ptr [rax - 0x77] ; xchg eax, ebp ; push rax ; ret
0x000000000042ae65 : test dword ptr [rcx + rdi*8 - 1], esi ; dec dword ptr [rax - 0x77] ; xchg eax, ebp ; ret
0x000000000042db1b : test dword ptr [rcx + rdi*8 - 1], esi ; inc dword ptr [rcx + rcx*4 - 0x7b] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xffff
0x0000000000429e8e : test dword ptr [rcx + rdi*8 - 1], esi ; inc dword ptr [rcx + rcx*4 - 0x7b] ; xchg eax, esp ; ret
0x000000000042c9f3 : test dword ptr [rcx + rdi*8 - 1], esi ; inc dword ptr [rsi - 0x1d] ; ret
0x0000000000426912 : test dword ptr [rcx + rdi*8 - 1], esi ; jmp qword ptr [rax]
0x000000000042bb5b : test dword ptr [rcx + rdi*8 - 1], esi ; jmp qword ptr [rbx]
0x0000000000421fd3 : test dword ptr [rcx + rdi*8 - 1], esi ; jmp qword ptr [rcx]
0x0000000000429bbd : test dword ptr [rcx + rdi*8 - 1], esi ; jmp qword ptr [rdi]
0x0000000000422702 : test dword ptr [rcx + rdi*8 - 1], esi ; jmp qword ptr [rdx]
0x000000000042f7ff : test dword ptr [rcx + rdi*8 - 1], esi ; jmp qword ptr [rsi]
0x000000000042fc10 : test dword ptr [rcx + rdi*8 - 1], esi ; jmp rax
0x000000000042543b : test dword ptr [rcx + rdi*8 - 1], esi ; jmp rbx
0x0000000000426247 : test dword ptr [rcx + rdi*8 - 1], esi ; jmp rcx
0x000000000042e9b5 : test dword ptr [rcx + rdi*8 - 1], esi ; jmp rdi
0x000000000042a8eb : test dword ptr [rcx + rdi*8 - 1], esi ; jmp rdx
0x000000000042d34e : test dword ptr [rcx + rdi*8 - 1], esi ; jmp rsi
0x0000000000424928 : test dword ptr [rcx + rdi*8 - 1], esi ; jmp rsp
0x00000000004289d6 : test dword ptr [rcx + rdi*8 - 1], esi ; lcall ptr [rbp + 3] ; std ; ret
0x000000000042bc11 : test dword ptr [rcx + rdi*8 - 1], esi ; push qword ptr [rax] ; ret
0x000000000042febf : test dword ptr [rcx + rdi*8 - 1], esi ; push qword ptr [rcx] ; ret 0x5b8b
0x00000000004507ab : test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rcx]
0x0000000000441303 : test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rcx]
0x00000000004411c5 : test dword ptr [rdi + rdi*8 - 1], ebx ; call rbx
0x000000000044120e : test dword ptr [rdi + rdi*8 - 1], ebx ; inc esi ; movsd dword ptr [rdi], dword ptr [rsi] ; insb byte ptr [rdi], dx ; ret
0x0000000000441563 : test dword ptr [rdi + rdi*8 - 1], ebx ; jmp rax
0x000000000043fff7 : test dword ptr [rdi + rdi*8 - 1], ebx ; jmp rcx
0x000000000044024f : test dword ptr [rdi + rdi*8 - 1], ebx ; jmp rsp
0x00000000004659d6 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000046265a : test dword ptr [rdi + rdi*8 - 1], esp ; call qword ptr [rbx]
0x000000000041cd33 : test dword ptr [rsi + rcx*8 - 1], edx ; dec dword ptr [rdi] ; test dh, ch ; ret
0x000000000045e07b : test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x000000000045f2da : test dword ptr [rsi + rdi*8 + 0x6e94ffff], esp ; ret 0xe961
0x000000000045ad9a : test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x0000000000437fb9 : test dword ptr [rsp + rsi*8 - 1], edx ; call qword ptr [rdi]
0x000000000043d484 : test dword ptr [rsp + rsi*8 - 1], edx ; jmp qword ptr [rax]
0x000000000043bf28 : test dword ptr [rsp + rsi*8 - 1], edx ; jmp qword ptr [rcx]
0x0000000000437f76 : test dword ptr [rsp + rsi*8 - 1], edx ; jmp rax
0x000000000043d06b : test dword ptr [rsp + rsi*8 - 1], edx ; jmp rdx
0x000000000043c91c : test dword ptr [rsp + rsi*8 - 1], edx ; jmp rsp
0x0000000000441ecb : test eax, 0x1000000 ; pop rbp ; ret
0x0000000000447bc1 : test eax, 0x529a77a3 ; ret
0x000000000042e64e : test eax, 0x858948 ; ret 0xffff
0x000000000045f28f : test eax, 0xb9dd5cac ; xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x000000000042f703 : test eax, 0xc7fffd21 ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp rsi
0x000000000042cbd7 : test eax, eax ; ret 0xffff
0x00000000004285b7 : test ebp, eax ; ret
0x000000000042c422 : test ebp, eax ; ret 0xffff
0x00000000004280b4 : test ebp, esp ; ret
0x00000000004287ae : test ebx, eax ; ret
0x000000000042cb08 : test ecx, esp ; ret 0xffff
0x00000000004709f1 : test edi, edi ; jmp rsp
0x0000000000427e7f : test edi, esp ; ret
0x000000000042b88d : test edi, esp ; ret 0xffff
0x000000000042c9a5 : test edx, eax ; ret 0xffff
0x000000000042c884 : test edx, esp ; ret 0xffff
0x000000000042bb8a : test esi, esp ; ret 0xffff
0x0000000000428782 : test esp, eax ; ret
0x00000000004286da : test esp, esp ; ret
0x000000000042c458 : test esp, esp ; ret 0xffff
0x000000000045d29f : wait ; jge 0x45d281 ; shr cl, cl ; ret 0x3b
0x000000000045835d : wait ; jo 0x45836b ; ret
0x000000000045b8ac : wait ; jo 0x45b8ba ; ret
0x0000000000447bc0 : wait ; test eax, 0x529a77a3 ; ret
0x000000000042ad59 : xchg byte ptr [rdi - 0x348bb324], ah ; ret
0x0000000000470ce9 : xchg cl, bh ; call qword ptr [rcx]
0x000000000046d538 : xchg dword ptr [rsi + 4], ebp ; push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000043a1df : xchg eax, ebp ; cwde ; in eax, -1 ; dec dword ptr [rax + 1] ; ret 0x8b48
0x000000000042dcb4 : xchg eax, ebp ; cwde ; ret 0xffff
0x000000000042aa5a : xchg eax, ebp ; pop rax ; ret
0x000000000042ab5d : xchg eax, ebp ; push rax ; ret
0x00000000004269ce : xchg eax, ebp ; ret
0x00000000004049fe : xchg eax, ebp ; ret 0x8445
0x00000000004111d3 : xchg eax, ebp ; ret 0x8919
0x00000000004294eb : xchg eax, ebp ; ret 0xb919
0x0000000000438226 : xchg eax, ebp ; ret 0xd284
0x0000000000429572 : xchg eax, ebp ; ret 0xfffe
0x0000000000453ee5 : xchg eax, ebx ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x000000000045a7e5 : xchg eax, ebx ; ret
0x000000000041bfd6 : xchg eax, ebx ; ret 0x16c4
0x00000000004285a9 : xchg eax, ebx ; std ; inc edi ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp rbx
0x000000000044833f : xchg eax, ebx ; sti ; inc edi ; test dword ptr [rbx + rdi*8 - 1], ebx ; call rsp
0x000000000045aa15 : xchg eax, ecx ; ret
0x0000000000470fe1 : xchg eax, ecx ; std ; call rcx
0x00000000004076aa : xchg eax, edi ; add al, byte ptr [rax] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000046cab9 : xchg eax, edi ; ret 0xd284
0x00000000004286d5 : xchg eax, edx ; mov byte ptr [rax - 0x1b7a760b], ah ; ret
0x0000000000454265 : xchg eax, edx ; ret
0x00000000004241e6 : xchg eax, edx ; ret 0
0x000000000041141e : xchg eax, edx ; ret 0x16c4
0x000000000046210f : xchg eax, edx ; ret 0x8445
0x00000000004658ce : xchg eax, edx ; ret 0xd284
0x0000000000437a1b : xchg eax, esi ; ret 0x8445
0x0000000000438059 : xchg eax, esi ; ret 0xd284
0x0000000000464b6a : xchg eax, esp ; jmp 0x4655d8
0x0000000000464aa7 : xchg eax, esp ; jmp 0x4655da
0x0000000000471434 : xchg eax, esp ; or dword ptr [rax], eax ; add al, bl ; sbb bh, bh ; call qword ptr [rbx]
0x000000000045f294 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x000000000045ab65 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x000000000045f2df : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0xe961
0x0000000000405478 : xchg eax, esp ; ret
0x00000000004620f9 : xchg eax, esp ; ret 0x8041
0x000000000045e1ae : xchg eax, esp ; ret 0xb740
0x0000000000407fbb : xchg eax, esp ; ret 0xd284
0x0000000000448425 : xchg eax, esp ; ret 0xe280
0x000000000042dcfb : xchg eax, esp ; ret 0xffff
0x0000000000464b69 : xchg eax, r12d ; jmp 0x4655d9
0x00000000004429f3 : xlatb ; ret 0x4589
0x0000000000415373 : xlatb ; ret 0x89b5
0x0000000000446fcd : xor ah, 0xff ; dec dword ptr [rax + 1] ; ret 0x8948
0x000000000042d19e : xor al, byte ptr [rax] ; add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; call qword ptr [rax]
0x000000000045e1a9 : xor al, byte ptr [rbx - 0x6bf0fd12] ; ret 0xb740
0x0000000000452a47 : xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000042b8aa : xor byte ptr [rax + 1], dh ; ret 0xea81
0x0000000000452a48 : xor byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000042d3fe : xor byte ptr [rax], al ; add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; call qword ptr [rax]
0x00000000004266b3 : xor ch, cl ; ret
0x0000000000404ed5 : xor dh, ch ; add byte ptr [rbp - 0x77], r8b ; ret 0xb841
0x000000000042d34a : xor dword ptr [rax], eax ; add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp rsi
0x0000000000463c8e : xor eax, 0x7ab99ca8 ; ret
0x000000000042418c : xor esi, edi ; jmp 0x430480
0x0000000000424265 : xor esi, edi ; jmp 0x430484
