0x00000000004c9720 : adc ah, ah ; std ; jmp rsp
0x0000000000463fb5 : adc ah, al ; ret 0x1b2
0x0000000000461cf2 : adc ah, al ; ret 0x8589
0x0000000000463fd1 : adc ah, al ; ret 0x958a
0x000000000040bf8d : adc al, -0x47 ; ror dl, cl ; scasd eax, dword ptr [rdi] ; ret 0x1b2
0x00000000004427ab : adc al, -0x77 ; test edi, esp ; ret 0xffff
0x00000000004c7151 : adc al, 0 ; add byte ptr [rax + 0x43], al ; clc ; jmp rax
0x00000000004c8d0d : adc al, 0 ; add byte ptr [rax], ah ; hlt ; cli ; jmp qword ptr [rbx]
0x00000000004c7121 : adc al, 0 ; add byte ptr [rax], al ; and al, 0xfffffffffffffff8 ; jmp qword ptr [rax]
0x00000000004c70d1 : adc al, byte ptr [rax] ; add al, al ; movsb byte ptr [rdi], byte ptr [rsi] ; cmc ; call rax
0x0000000000446144 : adc al, byte ptr [rax] ; add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp qword ptr [rdi]
0x00000000004441cf : adc bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; call qword ptr [rax]
0x0000000000489488 : adc bl, byte ptr [rdi - 0x4f415069] ; ret 0xdc02
0x000000000041fee9 : adc byte ptr [rax + 0x63], cl ; ret 0x8948
0x000000000045f09c : adc byte ptr [rax + 1], cl ; ret 0x8948
0x00000000004ae763 : adc byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000479293 : adc byte ptr [rbp - 8], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040d0f7 : adc byte ptr [rbx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041c725 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004b8c92 : adc byte ptr [rdi], ch ; ret
0x0000000000463e40 : adc byte ptr [rdx], bl ; sbb ah, byte ptr [rdx - 0x47] ; and ebx, ebp ; ret 0x8bb1
0x0000000000460dcb : adc byte ptr [rip - 0x1376b800], al ; pop rbp ; ret
0x00000000004c7444 : adc byte ptr [rsi - 5], ch ; call rax
0x000000000048a7e2 : adc cl, byte ptr [rax + 0x29] ; rol byte ptr [rcx + 0xf], 1 ; xchg eax, edx ; ret
0x00000000004b74cc : adc cl, byte ptr [rax + 1] ; ret 0x8b48
0x00000000004c44fe : adc cl, byte ptr [rax - 0x77] ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x48f0
0x00000000004546cc : adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x0000000000411469 : adc cl, byte ptr [rax - 0x7d] ; ret 0x480a
0x000000000044997d : adc cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x00000000004b388a : adc cl, byte ptr [rax - 0x7d] ; ret 0x4818
0x00000000004104ae : adc cl, byte ptr [rax - 0x7d] ; ret 0x4c78
0x0000000000460dbb : adc cl, byte ptr [rax - 0x7f] ; ret 0x10
0x00000000004b3976 : adc cl, byte ptr [rax - 0x7f] ; ret 0x18
0x00000000004b2eaf : adc cl, byte ptr [rax - 0x7f] ; ret 0xc
0x00000000004141d5 : adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x0000000000420522 : adc dword ptr [rax - 0x75], ecx ; or byte ptr [r8 - 0x75], 9 ; call rax
0x0000000000412008 : adc dword ptr [rax - 0x7f], ecx ; ret 0x78
0x00000000004c70a1 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x63], ah ; cmc ; call qword ptr [rax]
0x000000000047df5b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004ae731 : adc dword ptr [rcx - 0x7629d63a], ecx ; ret 0xea81
0x00000000004b8f32 : adc dword ptr [rdi], ebp ; ret
0x00000000004c7161 : adc eax, 0x51300000 ; clc ; jmp qword ptr [rax]
0x00000000004191a5 : adc eax, 0x54b8ccb9 ; ret
0x0000000000472eab : adc eax, 0x558abda1 ; ret
0x00000000004c7191 : adc eax, 0x68f00000 ; clc ; jmp rax
0x00000000004a1ae7 : adc eax, 0x85c70000 ; call 0x184a1af7
0x00000000004984f1 : adc eax, 0xb8000016 ; cmp dword ptr [rbx], edx ; ret
0x00000000004c8e4d : adc eax, 0xfab00000 ; cli ; call qword ptr [rcx]
0x00000000004c8e8d : adc eax, 0xfcc00000 ; cli ; jmp rsp
0x00000000004c7111 : adc eax, dword ptr [rax] ; add al, al ; and edi, eax ; jmp rax
0x0000000000452d23 : adc eax, dword ptr [rax] ; add bh, al ; xchg eax, r12d ; int 6
0x00000000004c8c25 : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x13], bh ; cli ; call rdx
0x0000000000476489 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004c8c45 : adc eax, dword ptr [rax] ; add byte ptr [rax], bh ; out dx, eax ; cli ; call qword ptr [rbx]
0x00000000004144ab : adc eax, ebp ; js 0x41449c ; ret
0x00000000004148ff : adc ebp, ecx ; ret 0
0x0000000000446a8a : adc esi, edi ; mov eax, 0x81f2296f ; ret 0xf713
0x00000000004c7eab : add ah, ah ; add eax, 0x6a00000 ; cmc ; jmp rdx
0x00000000004c9cab : add ah, ah ; and eax, dword ptr [rax] ; add byte ptr [rax], al ; or al, 0xffffffffffffffff ; call rbx
0x00000000004c8e8b : add ah, al ; adc eax, 0xfcc00000 ; cli ; jmp rsp
0x00000000004195e4 : add al, -0x47 ; ret
0x00000000004c731d : add al, -5 ; jmp qword ptr [rax]
0x000000000048baf6 : add al, -8 ; ret 0x898d
0x00000000004bba91 : add al, 0 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rsi
0x000000000048e951 : add al, 0 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rdx]
0x000000000042011b : add al, 0 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; call rbx
0x0000000000492bdf : add al, 0 ; add byte ptr [rbx + 0x5f2d9445], cl ; ret
0x000000000044c030 : add al, 0 ; add byte ptr [rbx - 0x3dd247bb], cl ; ret
0x0000000000413cd8 : add al, 0 ; add cl, ch ; ret 1
0x000000000045ba73 : add al, 0x25 ; loopne 0x45ba9c ; add al, bpl ; ret 0xff10
0x00000000004b186a : add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x00000000004c71a3 : add al, ah ; je 0x4c71a3 ; jmp qword ptr [rax]
0x00000000004c7b6f : add al, ah ; mov dl, -0xc ; call qword ptr [rax]
0x00000000004c731b : add al, al ; add al, -5 ; jmp qword ptr [rax]
0x00000000004c7113 : add al, al ; and edi, eax ; jmp rax
0x00000000004c8e8f : add al, al ; cld ; cli ; jmp rsp
0x00000000004c6eb3 : add al, al ; mov dh, -0xd ; call qword ptr [rax]
0x00000000004c70d3 : add al, al ; movsb byte ptr [rdi], byte ptr [rsi] ; cmc ; call rax
0x00000000004c734b : add al, al ; or bl, bh ; jmp rax
0x00000000004c9017 : add al, bl ; push rdx ; sti ; call qword ptr [rdx]
0x000000000045ba77 : add al, bpl ; ret 0xff10
0x00000000004c7b6d : add al, byte ptr [rax] ; add al, ah ; mov dl, -0xc ; call qword ptr [rax]
0x0000000000457197 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7f], cl ; ret 0xfffd
0x0000000000486fbb : add al, byte ptr [rax] ; add byte ptr [rbx + 0x4b2db445], cl ; ret 0x37ac
0x000000000048fd22 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x57d253bb], cl ; ret
0x0000000000486f89 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x6ad24bbb], cl ; ret
0x0000000000447516 : add al, byte ptr [rax] ; add cl, ch ; ret 0
0x000000000041a588 : add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000421143 : add al, byte ptr [rax] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000048fd21 : add al, byte ptr es:[rax] ; add byte ptr [rbx - 0x57d253bb], cl ; ret
0x00000000004609fb : add al, ch ; call qword ptr [rsi]
0x0000000000491cca : add al, ch ; push rax ; ret 1
0x0000000000499a68 : add al, ch ; ret 0xf684
0x000000000045ba78 : add al, ch ; ret 0xff10
0x00000000004c7def : add al, dh ; in al, dx ; hlt ; jmp rdi
0x00000000004c72cb : add al, dl ; add edi, edx ; call rax
0x00000000004c79cf : add al, dl ; mov bl, -0xd ; jmp rsi
0x00000000004c721b : add al, dl ; sub bh, cl ; call qword ptr [rax]
0x00000000004609fa : add al, r13b ; call qword ptr [rsi]
0x000000000044d988 : add ax, word ptr [rax] ; add cl, ch ; ret 1
0x0000000000492136 : add bh, al ; in al, -6 ; mov cl, 0x37 ; ret 0xd3e9
0x00000000004a7afb : add bh, al ; in al, 0x3e ; ret
0x00000000004546e8 : add bh, al ; in al, dx ; ret 0xe8ff
0x000000000041c57f : add bh, al ; les r11d, ptr [r13 - 0x16c5b765] ; ret 1
0x000000000045c1aa : add bh, al ; les r8d, ptr [r8 + 0x13] ; ret
0x000000000041be32 : add bh, al ; mov r12b, 0x75 ; push rbp ; ret 0xe910
0x0000000000482b36 : add bh, al ; mov word ptr [r14 - 0x16bee9bd], dr1 ; ret 0
0x000000000041b3ce : add bh, al ; test al, -0x7d ; sbb ebp, esi ; ret 0x28e9
0x000000000043ca33 : add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; call qword ptr [rax]
0x000000000043b5c2 : add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; call qword ptr [rbx]
0x0000000000445c79 : add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; call qword ptr [rcx]
0x000000000043ec67 : add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; call qword ptr [rdx]
0x000000000043f458 : add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; call qword ptr [rsi]
0x000000000043ef22 : add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; call rbx
0x0000000000444ca1 : add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; call rcx
0x0000000000442bf8 : add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; call rdi
0x000000000043f6d7 : add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; call rdx
0x000000000043fcb0 : add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; call rsp
0x0000000000443911 : add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; inc dword ptr [rsi - 0x1d] ; ret
0x000000000043d830 : add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp qword ptr [rax]
0x0000000000442a79 : add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp qword ptr [rbx]
0x0000000000438ef1 : add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp qword ptr [rcx]
0x0000000000440adb : add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp qword ptr [rdi]
0x000000000044671d : add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp qword ptr [rsi]
0x000000000043c359 : add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp rbx
0x000000000043d165 : add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp rcx
0x00000000004458d3 : add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp rdi
0x0000000000441809 : add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp rdx
0x000000000044426c : add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp rsi
0x000000000043b846 : add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp rsp
0x0000000000442b2f : add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; push qword ptr [rax] ; ret
0x00000000004c18f5 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call rdi
0x0000000000486711 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rax]
0x00000000004866d0 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rcx]
0x00000000004bb87a : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rbx
0x00000000004bba93 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rsi
0x000000000048e1d2 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rdx]
0x000000000048ed4f : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rsi]
0x000000000048ec2b : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call rsp
0x000000000048df59 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; jmp qword ptr [rdx]
0x000000000048ebe7 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; jmp rdx
0x000000000047dc34 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000040c058 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; call qword ptr [rdi]
0x000000000041ff41 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; call rbx
0x0000000000465e1a : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp qword ptr [rbx]
0x0000000000465d7b : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp rdi
0x00000000004501ef : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x000000000048a4b3 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; jmp rsp
0x000000000047b20c : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; call rax
0x000000000047b4f3 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; call rsi
0x000000000047bf81 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; jmp qword ptr [rcx]
0x0000000000472ce9 : add bh, al ; test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x0000000000459032 : add bh, al ; test dword ptr [rsi + rdi*8 - 0x41e90001], edx ; ret 0xe9a5
0x0000000000452d25 : add bh, al ; xchg eax, r12d ; int 6
0x00000000004c4b8f : add bl, dh ; ret
0x000000000044caf4 : add byte ptr [r8], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004a7773 : add byte ptr [r8], al ; add byte ptr [rbx + 0x602de045], cl ; ret
0x00000000004c3732 : add byte ptr [r8], al ; add byte ptr [rcx], al ; ret 0xea81
0x00000000004c3994 : add byte ptr [r8], al ; add byte ptr [rcx], ch ; ret 0x5589
0x000000000040c055 : add byte ptr [r8], r8b ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; call qword ptr [rdi]
0x000000000045121d : add byte ptr [rax + 0x29], cl ; ret 0x8948
0x00000000004c8f0f : add byte ptr [rax + 0x32], al ; sti ; jmp rsi
0x00000000004c7153 : add byte ptr [rax + 0x43], al ; clc ; jmp rax
0x00000000004c724b : add byte ptr [rax + 0x51], ah ; stc ; call rax
0x00000000004c804f : add byte ptr [rax + 0x68], al ; cmc ; call rsi
0x00000000004c7493 : add byte ptr [rax + 0x7e], dh ; sti ; call qword ptr [rax]
0x000000000045a48d : add byte ptr [rax + 1], cl ; ret 0x8b48
0x00000000004c72db : add byte ptr [rax + 8], ah ; cli ; call qword ptr [rax]
0x00000000004c735b : add byte ptr [rax + 9], dh ; sti ; jmp qword ptr [rax]
0x00000000004c7318 : add byte ptr [rax + rax], bl ; add al, al ; add al, -5 ; jmp qword ptr [rax]
0x00000000004c7120 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; and al, 0xfffffffffffffff8 ; jmp qword ptr [rax]
0x00000000004c7124 : add byte ptr [rax + rdi*8], ah ; jmp qword ptr [rax]
0x00000000004c7deb : add byte ptr [rax - 0x13100000], ah ; hlt ; jmp rdi
0x00000000004c8c27 : add byte ptr [rax - 0x13], bh ; cli ; call rdx
0x00000000004a1054 : add byte ptr [rax - 0x47], cl ; stosb byte ptr [rdi], al ; ret 0x919d
0x00000000004c921f : add byte ptr [rax - 0x62], al ; sti ; jmp rcx
0x00000000004c70a3 : add byte ptr [rax - 0x63], ah ; cmc ; call qword ptr [rax]
0x00000000004186a7 : add byte ptr [rax - 0x73], cl ; clc ; pop rbx ; pop rbp ; ret
0x00000000004c80d7 : add byte ptr [rax - 0x75], ch ; cmc ; call rcx
0x00000000004548cb : add byte ptr [rax - 0x75], cl ; call 0x4907d223
0x000000000040b868 : add byte ptr [rax - 0x75], cl ; clc ; mov rsp, rbp ; pop rbp ; ret
0x00000000004c4a01 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; ret 0x2948
0x000000000040d58d : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000040b29b : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x00000000004c8837 : add byte ptr [rax - 0x7e], ch ; stc ; jmp qword ptr [rcx]
0x0000000000457199 : add byte ptr [rax - 0x7f], cl ; ret 0xfffd
0x00000000004c7454 : add byte ptr [rax - 5], dh ; call qword ptr [rax]
0x00000000004a7af8 : add byte ptr [rax], ah ; add bh, al ; in al, 0x3e ; ret
0x00000000004c8d0f : add byte ptr [rax], ah ; hlt ; cli ; jmp qword ptr [rbx]
0x00000000004c971e : add byte ptr [rax], al ; adc ah, ah ; std ; jmp rsp
0x00000000004c8d0a : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], ah ; hlt ; cli ; jmp qword ptr [rbx]
0x00000000004c7442 : add byte ptr [rax], al ; adc byte ptr [rsi - 5], ch ; call rax
0x0000000000499a66 : add byte ptr [rax], al ; add al, ch ; ret 0xf684
0x0000000000492134 : add byte ptr [rax], al ; add bh, al ; in al, -6 ; mov cl, 0x37 ; ret 0xd3e9
0x00000000004546e6 : add byte ptr [rax], al ; add bh, al ; in al, dx ; ret 0xe8ff
0x000000000041b3cc : add byte ptr [rax], al ; add bh, al ; test al, -0x7d ; sbb ebp, esi ; ret 0x28e9
0x000000000043b5c0 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; call qword ptr [rbx]
0x000000000043ec65 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; call qword ptr [rdx]
0x000000000043ef20 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; call rbx
0x0000000000445e31 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; call rsp
0x0000000000445942 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp qword ptr [rax]
0x00000000004458d1 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp rdi
0x00000000004c18f3 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call rdi
0x000000000048670f : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rax]
0x00000000004bb878 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rbx
0x000000000048e1d0 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rdx]
0x000000000048ed4d : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rsi]
0x000000000048ec29 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call rsp
0x000000000048ebe5 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; jmp rdx
0x000000000047dc32 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000040c056 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; call qword ptr [rdi]
0x000000000048a4b1 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; jmp rsp
0x00000000004c4b8d : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000045121b : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000045a48b : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8b48
0x00000000004c7122 : add byte ptr [rax], al ; add byte ptr [rax + rdi*8], ah ; jmp qword ptr [rax]
0x00000000004a1052 : add byte ptr [rax], al ; add byte ptr [rax - 0x47], cl ; stosb byte ptr [rdi], al ; ret 0x919d
0x00000000004186a5 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; clc ; pop rbx ; pop rbp ; ret
0x00000000004548c9 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; call 0x4907d225
0x00000000004c49ff : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; ret 0x2948
0x000000000040d58b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000040b299 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x00000000004c7452 : add byte ptr [rax], al ; add byte ptr [rax - 5], dh ; call qword ptr [rax]
0x00000000004c4b8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000047883a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000400d52 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000004c63ba : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4c58
0x00000000004c635a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4c5d
0x000000000041141e : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x00000000004098de : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000408e35 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000044ed5b : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004c4b8c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400d54 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000004c63bc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4c58
0x00000000004c635c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4c5d
0x00000000004b2174 : add byte ptr [rax], al ; add byte ptr [rbp + 0x21], al ; ret 0x8845
0x00000000004ab942 : add byte ptr [rax], al ; add byte ptr [rbp + 0x29], al ; ret 0x8844
0x000000000041c37d : add byte ptr [rax], al ; add byte ptr [rbx + 0x182dc045], cl ; ret 0x236e
0x00000000004b25d7 : add byte ptr [rax], al ; add byte ptr [rbx + 0x1c2ddc45], cl ; ret 0xbe70
0x000000000045426b : add byte ptr [rax], al ; add byte ptr [rbx + 0x252ddc45], cl ; ret 0xe8ff
0x0000000000454409 : add byte ptr [rax], al ; add byte ptr [rbx + 0x262ddc45], cl ; ret 0xe8ff
0x00000000004155ee : add byte ptr [rax], al ; add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x00000000004a77a6 : add byte ptr [rax], al ; add byte ptr [rbx + 0x3e2de045], cl ; ret
0x0000000000475ef2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000491c93 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000044b3a2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x432dc845], cl ; ret 0x3504
0x000000000044b4ce : add byte ptr [rax], al ; add byte ptr [rbx + 0x442dc845], cl ; ret 0x3504
0x00000000004870b5 : add byte ptr [rax], al ; add byte ptr [rbx + 0x4c2db445], cl ; ret 0x37ac
0x000000000041623a : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000492603 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5e2d9445], cl ; ret
0x00000000004a72c2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5f2de045], cl ; ret
0x000000000041d586 : add byte ptr [rax], al ; add byte ptr [rbx + 0x602d8845], cl ; ret 0x451e
0x00000000004a7774 : add byte ptr [rax], al ; add byte ptr [rbx + 0x602de045], cl ; ret
0x000000000041b866 : add byte ptr [rax], al ; add byte ptr [rbx + 0x752db045], cl ; push rbp ; ret 0x8910
0x0000000000478652 : add byte ptr [rax], al ; add byte ptr [rbx + 0x7a2de445], cl ; ret
0x0000000000492874 : add byte ptr [rax], al ; add byte ptr [rbx + 0xd2d9445], cl ; ret
0x00000000004b2541 : add byte ptr [rax], al ; add byte ptr [rbx - 0x1cd223bb], cl ; ret
0x0000000000416ce3 : add byte ptr [rax], al ; add byte ptr [rbx - 0x23d24bbb], cl ; ret
0x000000000047c3f3 : add byte ptr [rax], al ; add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x000000000048fee4 : add byte ptr [rax], al ; add byte ptr [rbx - 0x30d253bb], cl ; ret 0x6fcb
0x000000000048f664 : add byte ptr [rax], al ; add byte ptr [rbx - 0x31d253bb], cl ; ret 0x6fcb
0x00000000004ac548 : add byte ptr [rax], al ; add byte ptr [rbx - 0x36d253bb], cl ; ret 0x86f8
0x00000000004ac506 : add byte ptr [rax], al ; add byte ptr [rbx - 0x37d253bb], cl ; ret 0x86f8
0x000000000044c4ee : add byte ptr [rax], al ; add byte ptr [rbx - 0x3cd247bb], cl ; ret
0x000000000041d77a : add byte ptr [rax], al ; add byte ptr [rbx - 0x42d277bb], cl ; xchg eax, edx ; ret
0x000000000048ad5c : add byte ptr [rax], al ; add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x000000000048f9d0 : add byte ptr [rax], al ; add byte ptr [rbx - 0x58d253bb], cl ; ret
0x00000000004a64a9 : add byte ptr [rax], al ; add byte ptr [rbx - 0x5d237bb], cl ; ret
0x0000000000480121 : add byte ptr [rax], al ; add byte ptr [rbx - 0x62d237bb], cl ; push rcx ; ret 0x8929
0x0000000000480071 : add byte ptr [rax], al ; add byte ptr [rbx - 0x63d237bb], cl ; push rcx ; ret 0x8929
0x00000000004ae908 : add byte ptr [rax], al ; add byte ptr [rbx - 0x68d257bb], cl ; scasd eax, dword ptr [rdi] ; ret 0x898c
0x0000000000486fd4 : add byte ptr [rax], al ; add byte ptr [rbx - 0x69d24bbb], cl ; ret
0x000000000047ed59 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x00000000004c725a : add byte ptr [rax], al ; add byte ptr [rbx - 7], dl ; call qword ptr [rax]
0x0000000000412d4f : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x000000000041a385 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x000000000041ff2a : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000041a3ad : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000408b87 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000045b26c : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret
0x0000000000438619 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x8b48
0x00000000004c3733 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xea81
0x00000000004c3995 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x5589
0x000000000047dba0 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8b48
0x0000000000442954 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x9589
0x00000000004c9cae : add byte ptr [rax], al ; add byte ptr [rdi + rdi*8], cl ; call rbx
0x000000000043d982 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; lahf ; ret 0xd284
0x00000000004c2b01 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000458878 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000447039 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xe280
0x0000000000481ccd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x00000000004916aa : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000417bc3 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8841
0x00000000004098e0 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000419718 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000041dbd1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x00000000004580b6 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000408e37 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004ab278 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x00000000004c7482 : add byte ptr [rax], al ; add byte ptr [rsi - 5], bh ; call rax
0x00000000004c931e : add byte ptr [rax], al ; add byte ptr [rsi], dl ; cld ; jmp rcx
0x0000000000460c63 : add byte ptr [rax], al ; add cl, ch ; ret
0x000000000048a742 : add byte ptr [rax], al ; add cl, ch ; ret 1
0x000000000041ec3a : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000475b10 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402a14 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000047df5d : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000048b408 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000493baf : add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000401eb3 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004c8d0e : add byte ptr [rax], al ; and ah, dh ; cli ; jmp qword ptr [rbx]
0x00000000004c7123 : add byte ptr [rax], al ; and al, 0xfffffffffffffff8 ; jmp qword ptr [rax]
0x000000000041beb2 : add byte ptr [rax], al ; and byte ptr [rbp - 0x77], al ; ret 0x3145
0x00000000004c8b26 : add byte ptr [rax], al ; call 0xffffffffd84c861b
0x00000000004c7152 : add byte ptr [rax], al ; clc ; jmp rax
0x00000000004c8c46 : add byte ptr [rax], al ; cmp bh, ch ; cli ; call qword ptr [rbx]
0x00000000004c7a0e : add byte ptr [rax], al ; cmp byte ptr [rsi], -0xc ; call qword ptr [rbx]
0x00000000004c8936 : add byte ptr [rax], al ; cwde ; in al, -7 ; call qword ptr [rdx]
0x00000000004c9016 : add byte ptr [rax], al ; fcom dword ptr [rdx - 5] ; call qword ptr [rdx]
0x00000000004c8286 : add byte ptr [rax], al ; fmul dword ptr [rdi] ; clc ; call qword ptr [rdx]
0x00000000004c82a2 : add byte ptr [rax], al ; fmul qword ptr [rcx] ; add byte ptr [rax], al ; fmul dword ptr [rdi] ; clc ; call qword ptr [rdx]
0x00000000004c9caa : add byte ptr [rax], al ; in al, 0x23 ; add byte ptr [rax], al ; add byte ptr [rdi + rdi*8], cl ; call rbx
0x00000000004c806f : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmc ; call qword ptr [rcx]
0x00000000004c983a : add byte ptr [rax], al ; je 0x4c9866 ; add byte ptr [rax], al ; nop ; add esi, edi ; call qword ptr [rsi]
0x00000000004c8c42 : add byte ptr [rax], al ; jl 0x4c8c62 ; add byte ptr [rax], al ; cmp bh, ch ; cli ; call qword ptr [rbx]
0x00000000004c7483 : add byte ptr [rax], al ; jle 0x4c7486 ; call rax
0x0000000000401fc9 : add byte ptr [rax], al ; jmp 0x401ec9
0x0000000000460c5f : add byte ptr [rax], al ; jmp 0x460c6e
0x00000000004869d7 : add byte ptr [rax], al ; jmp 0x4869e6
0x000000000048a73e : add byte ptr [rax], al ; jmp 0x48a74d
0x00000000004a77c0 : add byte ptr [rax], al ; jmp 0x4a7b32
0x00000000004ab8d3 : add byte ptr [rax], al ; jmp 0x4ab8e2
0x00000000004aba35 : add byte ptr [rax], al ; jmp 0x4aba44
0x00000000004abca3 : add byte ptr [rax], al ; jmp 0x4abcb2
0x00000000004c735a : add byte ptr [rax], al ; jo 0x4c736c ; sti ; jmp qword ptr [rax]
0x00000000004c7453 : add byte ptr [rax], al ; jo 0x4c7456 ; call qword ptr [rax]
0x00000000004c7492 : add byte ptr [rax], al ; jo 0x4c7519 ; sti ; call qword ptr [rax]
0x00000000004c8c26 : add byte ptr [rax], al ; js 0x4c8c1c ; cli ; call rdx
0x00000000004186a6 : add byte ptr [rax], al ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x00000000004c71a2 : add byte ptr [rax], al ; loopne 0x4c721f ; clc ; jmp qword ptr [rax]
0x00000000004c7b6e : add byte ptr [rax], al ; loopne 0x4c7b29 ; hlt ; call qword ptr [rax]
0x00000000004c71e2 : add byte ptr [rax], al ; mov al, -0x3f ; clc ; jmp qword ptr [rax]
0x00000000004c8e4e : add byte ptr [rax], al ; mov al, -6 ; cli ; call qword ptr [rcx]
0x00000000004c8d6e : add byte ptr [rax], al ; mov al, -7 ; cli ; call qword ptr [rdx]
0x00000000004c74c3 : add byte ptr [rax], al ; mov bh, bl ; call rax
0x0000000000486a7f : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x00000000004c3778 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000478d28 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x44] ; pop rbp ; ret
0x000000000045a862 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004accd5 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000041a98c : add byte ptr [rax], al ; mov edx, dword ptr [rbp - 0x1c] ; mov rsi, rcx ; call rax
0x000000000044c9df : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004153d1 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x30] ; pop rbp ; ret
0x000000000040d58c : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004c7b6a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add al, byte ptr [rax] ; add al, ah ; mov dl, -0xc ; call qword ptr [rax]
0x00000000004c983e : add byte ptr [rax], al ; nop ; add esi, edi ; call qword ptr [rsi]
0x00000000004c9caf : add byte ptr [rax], al ; or al, 0xffffffffffffffff ; call rbx
0x00000000004c9ae6 : add byte ptr [rax], al ; or byte ptr [rdx - 2], cl ; call rax
0x000000000040c037 : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000475ef3 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000049059a : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000041623b : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004c8c22 : add byte ptr [rax], al ; pop rsp ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x13], bh ; cli ; call rdx
0x00000000004c8422 : add byte ptr [rax], al ; pop rsp ; or eax, dword ptr [rax] ; add byte ptr [rax], bl ; clc ; jmp rbx
0x00000000004c725b : add byte ptr [rax], al ; push rbx ; stc ; call qword ptr [rax]
0x00000000004c921a : add byte ptr [rax], al ; push rsp ; sbb dword ptr [rax], eax ; add byte ptr [rax - 0x62], al ; sti ; jmp rcx
0x00000000004c4b8e : add byte ptr [rax], al ; ret
0x0000000000400d56 : add byte ptr [rax], al ; ret 0
0x00000000004c63be : add byte ptr [rax], al ; ret 0x4c58
0x00000000004c635e : add byte ptr [rax], al ; ret 0x4c5d
0x00000000004c72ca : add byte ptr [rax], al ; rol byte ptr [rbx], 1 ; cli ; call rax
0x00000000004c734a : add byte ptr [rax], al ; ror byte ptr [rax], -5 ; jmp rax
0x00000000004c921e : add byte ptr [rax], al ; sahf ; sti ; jmp rcx
0x00000000004c8e8e : add byte ptr [rax], al ; sar ah, -6 ; jmp rsp
0x00000000004c9ae2 : add byte ptr [rax], al ; sbb al, 0x22 ; add byte ptr [rax], al ; or byte ptr [rdx - 2], cl ; call rax
0x00000000004c8426 : add byte ptr [rax], al ; sbb byte ptr [rdi - 8], al ; jmp rbx
0x00000000004c8ff6 : add byte ptr [rax], al ; sbb byte ptr [rdx - 5], dl ; call rdx
0x00000000004c7112 : add byte ptr [rax], al ; shl byte ptr [rbx], -8 ; jmp rax
0x00000000004c721a : add byte ptr [rax], al ; shr byte ptr [rdx], 1 ; stc ; call qword ptr [rax]
0x00000000004c8ff2 : add byte ptr [rax], al ; sub al, 0x17 ; add byte ptr [rax], al ; sbb byte ptr [rdx - 5], dl ; call rdx
0x00000000004c8e4a : add byte ptr [rax], al ; test byte ptr [rip - 0x5500000], dl ; cli ; call qword ptr [rcx]
0x00000000004c7162 : add byte ptr [rax], al ; xor byte ptr [rcx - 8], dl ; jmp qword ptr [rax]
0x00000000004c8f0e : add byte ptr [rax], al ; xor dil, bl ; jmp rsi
0x00000000004c8c47 : add byte ptr [rax], bh ; out dx, eax ; cli ; call qword ptr [rbx]
0x00000000004c8427 : add byte ptr [rax], bl ; clc ; jmp rbx
0x00000000004c8ff7 : add byte ptr [rax], bl ; push rdx ; sti ; call rdx
0x00000000004c8667 : add byte ptr [rax], ch ; ret
0x00000000004c7163 : add byte ptr [rax], dh ; push rcx ; clc ; jmp qword ptr [rax]
0x00000000004c971f : add byte ptr [rax], dl ; in al, -3 ; jmp rsp
0x00000000004c7443 : add byte ptr [rax], dl ; outsb dx, byte ptr [rsi] ; sti ; call rax
0x00000000004c75db : add byte ptr [rax], dl ; ret 0xfffd
0x00000000004128a2 : add byte ptr [rax], r8b ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004b2176 : add byte ptr [rbp + 0x21], al ; ret 0x8845
0x00000000004ab944 : add byte ptr [rbp + 0x29], al ; ret 0x8844
0x00000000004c8e4b : add byte ptr [rbp + rdx - 0x5500000], al ; cli ; call qword ptr [rcx]
0x00000000004b216c : add byte ptr [rbp - 0x77], al ; ret 0x8141
0x0000000000409361 : add byte ptr [rbp - 0x77], al ; ret 0xb841
0x00000000004b216b : add byte ptr [rbp - 0x77], r8b ; ret 0x8141
0x0000000000409360 : add byte ptr [rbp - 0x77], r8b ; ret 0xb841
0x000000000041c334 : add byte ptr [rbx + 0x172dc045], cl ; ret 0x236e
0x000000000041c37f : add byte ptr [rbx + 0x182dc045], cl ; ret 0x236e
0x00000000004b258e : add byte ptr [rbx + 0x1b2ddc45], cl ; ret 0xbe70
0x0000000000492718 : add byte ptr [rbx + 0x1c2d9445], cl ; xchg eax, r11d ; ret
0x00000000004b25d9 : add byte ptr [rbx + 0x1c2ddc45], cl ; ret 0xbe70
0x0000000000492ace : add byte ptr [rbx + 0x1d2d9445], cl ; xchg eax, r11d ; ret
0x000000000045426d : add byte ptr [rbx + 0x252ddc45], cl ; ret 0xe8ff
0x000000000045440b : add byte ptr [rbx + 0x262ddc45], cl ; ret 0xe8ff
0x00000000004155f0 : add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x00000000004a7298 : add byte ptr [rbx + 0x3d2de045], cl ; ret
0x00000000004a77a8 : add byte ptr [rbx + 0x3e2de045], cl ; ret
0x0000000000475ef4 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000049059b : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000458d5e : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000044b3a4 : add byte ptr [rbx + 0x432dc845], cl ; ret 0x3504
0x000000000044b4d0 : add byte ptr [rbx + 0x442dc845], cl ; ret 0x3504
0x000000000048f2ef : add byte ptr [rbx + 0x462dc045], cl ; jns 0x48f2a6 ; ret
0x0000000000492731 : add byte ptr [rbx + 0x472d9445], cl ; xor dh, dh ; ret 0x8589
0x0000000000492ab5 : add byte ptr [rbx + 0x482d9445], cl ; xor dh, dh ; ret 0x8589
0x0000000000486fbd : add byte ptr [rbx + 0x4b2db445], cl ; ret 0x37ac
0x00000000004870b7 : add byte ptr [rbx + 0x4c2db445], cl ; ret 0x37ac
0x000000000041623c : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000492605 : add byte ptr [rbx + 0x5e2d9445], cl ; ret
0x0000000000492be1 : add byte ptr [rbx + 0x5f2d9445], cl ; ret
0x00000000004a72c4 : add byte ptr [rbx + 0x5f2de045], cl ; ret
0x000000000041d588 : add byte ptr [rbx + 0x602d8845], cl ; ret 0x451e
0x00000000004a7776 : add byte ptr [rbx + 0x602de045], cl ; ret
0x000000000041d7ae : add byte ptr [rbx + 0x612d8845], cl ; ret 0x451e
0x000000000041b81d : add byte ptr [rbx + 0x742db045], cl ; push rbp ; ret 0x8910
0x000000000041b868 : add byte ptr [rbx + 0x752db045], cl ; push rbp ; ret 0x8910
0x0000000000478654 : add byte ptr [rbx + 0x7a2de445], cl ; ret
0x0000000000492876 : add byte ptr [rbx + 0xd2d9445], cl ; ret
0x0000000000492970 : add byte ptr [rbx + 0xe2d9445], cl ; ret
0x00000000004c945b : add byte ptr [rbx + rbx + 0x61800000], dl ; cld ; jmp qword ptr [rdi]
0x00000000004c8423 : add byte ptr [rbx + rcx], bl ; add byte ptr [rax], bl ; clc ; jmp rbx
0x00000000004c8c43 : add byte ptr [rbx + rdx], bh ; add byte ptr [rax], bh ; out dx, eax ; cli ; call qword ptr [rbx]
0x00000000004c8c23 : add byte ptr [rbx + rdx], bl ; add byte ptr [rax - 0x13], bh ; cli ; call rdx
0x000000000040c846 : add byte ptr [rbx - 0x11f4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004b2543 : add byte ptr [rbx - 0x1cd223bb], cl ; ret
0x000000000040c32e : add byte ptr [rbx - 0x1cd247bb], cl ; xlatb ; ret 0x8589
0x00000000004b24f8 : add byte ptr [rbx - 0x1dd223bb], cl ; ret
0x000000000040c234 : add byte ptr [rbx - 0x1dd247bb], cl ; xlatb ; ret 0x8589
0x0000000000416ce5 : add byte ptr [rbx - 0x23d24bbb], cl ; ret
0x000000000047c3f5 : add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x000000000047c3aa : add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x000000000048fee6 : add byte ptr [rbx - 0x30d253bb], cl ; ret 0x6fcb
0x000000000048f666 : add byte ptr [rbx - 0x31d253bb], cl ; ret 0x6fcb
0x00000000004ac54a : add byte ptr [rbx - 0x36d253bb], cl ; ret 0x86f8
0x00000000004ac508 : add byte ptr [rbx - 0x37d253bb], cl ; ret 0x86f8
0x000000000044c4f0 : add byte ptr [rbx - 0x3cd247bb], cl ; ret
0x0000000000451735 : add byte ptr [rbx - 0x3d27bbb], cl ; stc ; in al, dx ; ret 0x8589
0x000000000044c032 : add byte ptr [rbx - 0x3dd247bb], cl ; ret
0x000000000045bb69 : add byte ptr [rbx - 0x3ed24bbb], cl ; outsb dx, byte ptr [rsi] ; ret 0x89e7
0x000000000041d77c : add byte ptr [rbx - 0x42d277bb], cl ; xchg eax, edx ; ret
0x0000000000451573 : add byte ptr [rbx - 0x4d27bbb], cl ; stc ; in al, dx ; ret 0x8589
0x000000000048ad5e : add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x000000000048fd24 : add byte ptr [rbx - 0x57d253bb], cl ; ret
0x000000000048f9d2 : add byte ptr [rbx - 0x58d253bb], cl ; ret
0x0000000000491e39 : add byte ptr [rbx - 0x5d22bbb], cl ; mov cl, 0x37 ; ret 0x4589
0x00000000004a64ab : add byte ptr [rbx - 0x5d237bb], cl ; ret
0x0000000000480123 : add byte ptr [rbx - 0x62d237bb], cl ; push rcx ; ret 0x8929
0x0000000000480073 : add byte ptr [rbx - 0x63d237bb], cl ; push rcx ; ret 0x8929
0x00000000004ae90a : add byte ptr [rbx - 0x68d257bb], cl ; scasd eax, dword ptr [rdi] ; ret 0x898c
0x0000000000486fd6 : add byte ptr [rbx - 0x69d24bbb], cl ; ret
0x0000000000486f8b : add byte ptr [rbx - 0x6ad24bbb], cl ; ret
0x0000000000491df7 : add byte ptr [rbx - 0x6d22bbb], cl ; mov cl, 0x37 ; ret 0x4589
0x00000000004a6460 : add byte ptr [rbx - 0x6d237bb], cl ; ret
0x0000000000447cf7 : add byte ptr [rbx - 0x6dd237bb], cl ; jge 0x447cda ; ret
0x0000000000447cac : add byte ptr [rbx - 0x6ed237bb], cl ; jge 0x447c8f ; ret
0x000000000045a863 : add byte ptr [rbx - 0x76b703bb], cl ; in al, dx ; pop rbp ; ret
0x00000000004accd6 : add byte ptr [rbx - 0x76b707bb], cl ; in al, dx ; pop rbp ; ret
0x00000000004c3779 : add byte ptr [rbx - 0x76b71fbb], cl ; in al, dx ; pop rbp ; ret
0x000000000047ed5b : add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x000000000041aba0 : add byte ptr [rbx - 0x7cd25fbb], cl ; sbb ebp, esi ; ret 0x8589
0x000000000041ab55 : add byte ptr [rbx - 0x7dd25fbb], cl ; sbb ebp, esi ; ret 0x8589
0x00000000004c725c : add byte ptr [rbx - 7], dl ; call qword ptr [rax]
0x00000000004c6357 : add byte ptr [rbx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4c5d
0x0000000000412d51 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x000000000041a387 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x000000000041ff2c : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000041a3af : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000408b89 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x00000000004c921b : add byte ptr [rcx + rbx], dl ; add byte ptr [rax - 0x62], al ; sti ; jmp rcx
0x00000000004c8283 : add byte ptr [rcx + rcx + 0xfd80000], bh ; clc ; call qword ptr [rdx]
0x000000000040935b : add byte ptr [rcx - 0x48], al ; shl byte ptr [rax + 0x4c], 1 ; add byte ptr [rbp - 0x77], al ; ret 0xb841
0x00000000004ae760 : add byte ptr [rcx - 0x76b7efb8], cl ; in al, dx ; pop rbp ; ret
0x000000000045b26e : add byte ptr [rcx - 0x77], al ; ret
0x00000000004a2de4 : add byte ptr [rcx - 0x78], al ; ret 0x8041
0x000000000041be2f : add byte ptr [rcx], 0 ; add bh, al ; mov r12b, 0x75 ; push rbp ; ret 0xe910
0x000000000044a96b : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000402618 : add byte ptr [rcx], al ; ret
0x000000000043861b : add byte ptr [rcx], al ; ret 0x8b48
0x00000000004c3735 : add byte ptr [rcx], al ; ret 0xea81
0x00000000004c3997 : add byte ptr [rcx], ch ; ret 0x5589
0x000000000047dba2 : add byte ptr [rcx], ch ; ret 0x8b48
0x0000000000442956 : add byte ptr [rcx], ch ; ret 0x9589
0x000000000049970b : add byte ptr [rcx], cl ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004c804b : add byte ptr [rdi + rax + 0x68400000], al ; cmc ; call rsi
0x00000000004c806b : add byte ptr [rdi + rax + 0x6c000000], ah ; cmc ; call qword ptr [rcx]
0x00000000004c8833 : add byte ptr [rdi + rcx], ch ; add byte ptr [rax - 0x7e], ch ; stc ; jmp qword ptr [rcx]
0x00000000004c9cb0 : add byte ptr [rdi + rdi*8], cl ; call rbx
0x00000000004c8ff3 : add byte ptr [rdi + rdx], ch ; add byte ptr [rax], al ; sbb byte ptr [rdx - 5], dl ; call rdx
0x00000000004c9013 : add byte ptr [rdi + rdx], cl ; add al, bl ; push rdx ; sti ; call qword ptr [rdx]
0x000000000043d984 : add byte ptr [rdi], cl ; lahf ; ret 0xd284
0x00000000004c2b03 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000045887a : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000044703b : add byte ptr [rdi], cl ; pushfq ; ret 0xe280
0x0000000000481ccf : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x00000000004916ac : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000004209a3 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000417bc5 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8841
0x00000000004098e2 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041971a : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000041dbd3 : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x00000000004580b8 : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000408e39 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004ab27a : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x00000000004c71e0 : add byte ptr [rdi], dl ; add byte ptr [rax], al ; mov al, -0x3f ; clc ; jmp qword ptr [rax]
0x00000000004c7b6b : add byte ptr [rdx + rax - 0x4d200000], ah ; hlt ; call qword ptr [rax]
0x00000000004112df : add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004bc325 : add byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004c9ae3 : add byte ptr [rdx], bl ; add byte ptr [rax], al ; or byte ptr [rdx - 2], cl ; call rax
0x00000000004c7160 : add byte ptr [rip + 0x51300000], dl ; clc ; jmp qword ptr [rax]
0x00000000004c7358 : add byte ptr [rip + 0x9700000], bl ; sti ; jmp qword ptr [rax]
0x00000000004a44cd : add byte ptr [rip - 0x3a480000], 0x63 ; ret 0xb9f5
0x000000000044a2ad : add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x00000000004c971b : add byte ptr [rsi + rbx], dl ; add byte ptr [rax], dl ; in al, -3 ; jmp rsp
0x00000000004c8f0b : add byte ptr [rsi + rdx], al ; add byte ptr [rax + 0x32], al ; sti ; jmp rsi
0x00000000004c7484 : add byte ptr [rsi - 5], bh ; call rax
0x00000000004c71a0 : add byte ptr [rsi], dl ; add byte ptr [rax], al ; loopne 0x4c7221 ; clc ; jmp qword ptr [rax]
0x00000000004c9320 : add byte ptr [rsi], dl ; cld ; jmp rcx
0x00000000004c8d6b : add byte ptr [rsp + rdx - 0x6500000], ah ; cli ; call qword ptr [rdx]
0x00000000004c8d0b : add byte ptr [rsp + rdx], al ; add byte ptr [rax], ah ; hlt ; cli ; jmp qword ptr [rbx]
0x000000000043d8ea : add byte ptr ds:[rcx + 0xf], al ; xchg eax, ebp ; ret
0x000000000048fee3 : add byte ptr fs:[rax], al ; add byte ptr [rbx - 0x30d253bb], cl ; ret 0x6fcb
0x0000000000442953 : add byte ptr fs:[rax], al ; add byte ptr [rcx], ch ; ret 0x9589
0x00000000004a0398 : add ch, byte ptr [rip + 0x2b80000] ; mov cl, 0x7d ; ret
0x0000000000441555 : add cl, byte ptr [rax + 1] ; ret 0x8b48
0x0000000000472e1c : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x000000000044813e : add cl, ch ; ret
0x0000000000447518 : add cl, ch ; ret 0
0x000000000040c310 : add cl, ch ; ret 1
0x000000000049b969 : add cl, ch ; ret 2
0x000000000045f96a : add cl, ch ; ret 9
0x0000000000460dca : add dl, byte ptr [rax] ; add eax, 0xec894800 ; pop rbp ; ret
0x000000000041d7ab : add dword ptr [r8], r8d ; add byte ptr [rbx + 0x612d8845], cl ; ret 0x451e
0x0000000000454981 : add dword ptr [rax + 0xf], eax ; mov dh, -0x39 ; pop rbp ; ret
0x00000000004adf0e : add dword ptr [rax + 0xf], eax ; mov dh, -0x3a ; pop rbp ; ret
0x00000000004c79cd : add dword ptr [rax], eax ; add al, dl ; mov bl, -0xd ; jmp rsi
0x000000000045c1a8 : add dword ptr [rax], eax ; add bh, al ; les r8d, ptr [r8 + 0x13] ; ret
0x000000000041be30 : add dword ptr [rax], eax ; add bh, al ; mov r12b, 0x75 ; push rbp ; ret 0xe910
0x00000000004866ce : add dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rcx]
0x00000000004666a3 : add dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp rdi
0x000000000045061e : add dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x000000000047bf7f : add dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; jmp qword ptr [rcx]
0x000000000046097c : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000041c332 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x172dc045], cl ; ret 0x236e
0x0000000000490599 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000041bf50 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000041d7ac : add dword ptr [rax], eax ; add byte ptr [rbx + 0x612d8845], cl ; ret 0x451e
0x000000000045bb67 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x3ed24bbb], cl ; outsb dx, byte ptr [rsi] ; ret 0x89e7
0x000000000040c30e : add dword ptr [rax], eax ; add cl, ch ; ret 1
0x00000000004acdfd : add dword ptr [rax], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000045462f : add dword ptr [rax], ecx ; ret 0x840
0x00000000004209b3 : add dword ptr [rax], esp ; ret 0x840
0x000000000049bc91 : add dword ptr [rax], esp ; ret 0xd108
0x00000000004427c5 : add dword ptr [rcx + 0x308b70c2], eax ; jo 0x4427d6 ; ret 0xea81
0x00000000004a79a4 : add dword ptr [rcx], 0x3eb80000 ; ret
0x0000000000421327 : add dword ptr [rdi], ecx ; mov dh, -0x3f ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040c87e : add dword ptr [rdi], ecx ; mov dh, -0x3f ; mov rsp, rbp ; pop rbp ; ret
0x00000000004125d7 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041b570 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x000000000048f238 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004c2c82 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x0000000000411f78 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000044d788 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x000000000043c6dd : add dword ptr [rdi], ecx ; pushfq ; ret 0xe280
0x0000000000402614 : add eax, 0x2c8e3e ; add ebx, esi ; ret
0x0000000000486633 : add eax, 0x5d5b0000 ; ret
0x00000000004c7ead : add eax, 0x6a00000 ; cmc ; jmp rdx
0x00000000004488b8 : add eax, 0x92b80000 ; jge 0x448899 ; ret
0x00000000004488b7 : add eax, 0x92b80000 ; jge 0x44889a ; ret
0x000000000047b63c : add eax, 0xc700000b ; test dword ptr [rdi + rdi*8 - 1], esp ; call rsi
0x0000000000460dcc : add eax, 0xec894800 ; pop rbp ; ret
0x00000000004c7ded : add eax, 0xecf00000 ; hlt ; jmp rdi
0x0000000000466425 : add eax, dword ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp qword ptr [rbx]
0x00000000004ab59d : add eax, dword ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004bfa45 : add eax, dword ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000041b81b : add eax, dword ptr [rax] ; add byte ptr [rbx + 0x742db045], cl ; push rbp ; ret 0x8910
0x00000000004a645e : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x6d237bb], cl ; ret
0x0000000000418fd2 : add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x00000000004025db : add eax, edx ; sar rax, 1 ; jne 0x4025ec ; pop rbp ; ret
0x0000000000460ab9 : add eax, esi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x0000000000402619 : add ebx, esi ; ret
0x00000000004a2cfe : add ecx, eax ; mov rsi, rcx ; call 0x48f007
0x000000000043b661 : add edi, eax ; test dword ptr [rcx + rdi*8 - 1], esi ; call qword ptr [rbx]
0x000000000044567c : add edi, eax ; test dword ptr [rcx + rdi*8 - 1], esi ; call qword ptr [rcx]
0x000000000043ed06 : add edi, eax ; test dword ptr [rcx + rdi*8 - 1], esi ; call qword ptr [rdx]
0x000000000043f011 : add edi, eax ; test dword ptr [rcx + rdi*8 - 1], esi ; call rbx
0x0000000000446ac1 : add edi, eax ; test dword ptr [rcx + rdi*8 - 1], esi ; call rsp
0x0000000000445316 : add edi, eax ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp rsi
0x000000000044102c : add edi, eax ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp rsp
0x0000000000450499 : add edi, eax ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x000000000045f31f : add edi, eax ; test dword ptr [rdi + rdi*8 - 1], esi ; jmp rax
0x000000000042ba0b : add edi, ebp ; ret
0x00000000004c72cd : add edi, edx ; call rax
0x000000000040c829 : add edx, dword ptr [rdi - 1] ; dec dword ptr [rax - 0x73] ; cmp al, 0x25 ; ret
0x0000000000447992 : add esi, 0xa2ed707 ; mov eax, esi ; pop rbp ; ret
0x00000000004c9841 : add esi, edi ; call qword ptr [rsi]
0x000000000040292b : add esp, 0x10 ; pop rbp ; ret
0x000000000044a969 : add esp, 0x100 ; pop rbp ; ret
0x000000000041c723 : add esp, 0x110 ; pop rbp ; ret
0x00000000004210f1 : add esp, 0x120 ; pop rbp ; ret
0x00000000004a52a9 : add esp, 0x130 ; pop rbp ; ret
0x00000000004bdcda : add esp, 0x1360 ; pop rbp ; ret
0x000000000044c798 : add esp, 0x140 ; pop rbp ; ret
0x000000000041bf4d : add esp, 0x158 ; pop rbx ; pop rbp ; ret
0x000000000041b3b5 : add esp, 0x160 ; pop rbp ; ret
0x000000000040c033 : add esp, 0x170 ; pop rbp ; ret
0x00000000004a8e7a : add esp, 0x18 ; pop rbp ; ret
0x000000000044f9b8 : add esp, 0x180 ; pop rbp ; ret
0x00000000004138f0 : add esp, 0x190 ; pop rbp ; ret
0x0000000000452db5 : add esp, 0x1a0 ; pop rbp ; ret
0x000000000045b5ea : add esp, 0x1a8 ; pop rbx ; pop rbp ; ret
0x0000000000450639 : add esp, 0x1c0 ; pop rbp ; ret
0x000000000045408f : add esp, 0x1d0 ; pop rbp ; ret
0x0000000000421146 : add esp, 0x20 ; pop rbp ; ret
0x00000000004bc323 : add esp, 0x200 ; pop rbp ; ret
0x00000000004ae48e : add esp, 0x230 ; pop rbp ; ret
0x0000000000448d48 : add esp, 0x280 ; pop rbp ; ret
0x000000000041e275 : add esp, 0x2d0 ; pop rbp ; ret
0x0000000000402a17 : add esp, 0x30 ; pop rbp ; ret
0x000000000040d0f5 : add esp, 0x310 ; pop rbp ; ret
0x000000000049baf1 : add esp, 0x390 ; pop rbp ; ret
0x00000000004bfa42 : add esp, 0x3a8 ; pop rbx ; pop rbp ; ret
0x00000000004665c6 : add esp, 0x3e0 ; pop rbp ; ret
0x00000000004125dc : add esp, 0x40 ; pop rbp ; ret
0x00000000004b1a69 : add esp, 0x440 ; pop rbp ; ret
0x0000000000482b23 : add esp, 0x470 ; pop rbp ; ret
0x000000000048a44e : add esp, 0x4f0 ; pop rbp ; ret
0x000000000041555c : add esp, 0x50 ; pop rbp ; ret
0x000000000048ebcd : add esp, 0x590 ; pop rbp ; ret
0x0000000000486630 : add esp, 0x598 ; pop rbx ; pop rbp ; ret
0x000000000047beac : add esp, 0x5b0 ; pop rbp ; ret
0x00000000004028de : add esp, 0x60 ; pop rbp ; ret
0x0000000000464644 : add esp, 0x650 ; pop rbp ; ret
0x0000000000477802 : add esp, 0x70 ; pop rbp ; ret
0x0000000000413ab6 : add esp, 0x80 ; pop rbp ; ret
0x000000000044a16f : add esp, 0x88 ; pop rbp ; ret
0x000000000041453a : add esp, 0x90 ; pop rbp ; ret
0x0000000000499709 : add esp, 0x900 ; pop rbp ; ret
0x00000000004a7aed : add esp, 0x98 ; pop rbp ; ret
0x0000000000416237 : add esp, 0x98 ; pop rbx ; pop rbp ; ret
0x00000000004785e6 : add esp, 0xa0 ; pop rbp ; ret
0x000000000041a320 : add esp, 0xb0 ; pop rbp ; ret
0x00000000004915e7 : add esp, 0xb8 ; pop rbx ; pop rbp ; ret
0x00000000004a293b : add esp, 0xbb0 ; pop rbp ; ret
0x0000000000419d6c : add esp, 0xc0 ; pop rbp ; ret
0x000000000044b19d : add esp, 0xd0 ; pop rbp ; ret
0x000000000044b798 : add esp, 0xe0 ; pop rbp ; ret
0x000000000041a953 : add esp, 0xf0 ; pop rbp ; ret
0x0000000000466da3 : add esp, 8 ; pop rbp ; ret
0x0000000000401eb6 : add esp, 8 ; ret
0x00000000004025da : add rax, rdx ; sar rax, 1 ; jne 0x4025ed ; pop rbp ; ret
0x0000000000460ab8 : add rax, rsi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x00000000004a2cfd : add rcx, rax ; mov rsi, rcx ; call 0x48f008
0x000000000040292a : add rsp, 0x10 ; pop rbp ; ret
0x000000000044a968 : add rsp, 0x100 ; pop rbp ; ret
0x000000000041c722 : add rsp, 0x110 ; pop rbp ; ret
0x00000000004210f0 : add rsp, 0x120 ; pop rbp ; ret
0x00000000004a52a8 : add rsp, 0x130 ; pop rbp ; ret
0x00000000004bdcd9 : add rsp, 0x1360 ; pop rbp ; ret
0x000000000044c797 : add rsp, 0x140 ; pop rbp ; ret
0x000000000041bf4c : add rsp, 0x158 ; pop rbx ; pop rbp ; ret
0x000000000041b3b4 : add rsp, 0x160 ; pop rbp ; ret
0x000000000040c032 : add rsp, 0x170 ; pop rbp ; ret
0x00000000004a8e79 : add rsp, 0x18 ; pop rbp ; ret
0x000000000044f9b7 : add rsp, 0x180 ; pop rbp ; ret
0x00000000004138ef : add rsp, 0x190 ; pop rbp ; ret
0x0000000000452db4 : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000045b5e9 : add rsp, 0x1a8 ; pop rbx ; pop rbp ; ret
0x0000000000450638 : add rsp, 0x1c0 ; pop rbp ; ret
0x000000000045408e : add rsp, 0x1d0 ; pop rbp ; ret
0x0000000000421145 : add rsp, 0x20 ; pop rbp ; ret
0x00000000004bc322 : add rsp, 0x200 ; pop rbp ; ret
0x00000000004ae48d : add rsp, 0x230 ; pop rbp ; ret
0x0000000000448d47 : add rsp, 0x280 ; pop rbp ; ret
0x000000000041e274 : add rsp, 0x2d0 ; pop rbp ; ret
0x0000000000402a16 : add rsp, 0x30 ; pop rbp ; ret
0x000000000040d0f4 : add rsp, 0x310 ; pop rbp ; ret
0x000000000049baf0 : add rsp, 0x390 ; pop rbp ; ret
0x00000000004bfa41 : add rsp, 0x3a8 ; pop rbx ; pop rbp ; ret
0x00000000004665c5 : add rsp, 0x3e0 ; pop rbp ; ret
0x00000000004125db : add rsp, 0x40 ; pop rbp ; ret
0x00000000004b1a68 : add rsp, 0x440 ; pop rbp ; ret
0x0000000000482b22 : add rsp, 0x470 ; pop rbp ; ret
0x000000000048a44d : add rsp, 0x4f0 ; pop rbp ; ret
0x000000000041555b : add rsp, 0x50 ; pop rbp ; ret
0x000000000048ebcc : add rsp, 0x590 ; pop rbp ; ret
0x000000000048662f : add rsp, 0x598 ; pop rbx ; pop rbp ; ret
0x000000000047beab : add rsp, 0x5b0 ; pop rbp ; ret
0x00000000004028dd : add rsp, 0x60 ; pop rbp ; ret
0x0000000000464643 : add rsp, 0x650 ; pop rbp ; ret
0x0000000000477801 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000413ab5 : add rsp, 0x80 ; pop rbp ; ret
0x000000000044a16e : add rsp, 0x88 ; pop rbp ; ret
0x0000000000414539 : add rsp, 0x90 ; pop rbp ; ret
0x0000000000499708 : add rsp, 0x900 ; pop rbp ; ret
0x00000000004a7aec : add rsp, 0x98 ; pop rbp ; ret
0x0000000000416236 : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x00000000004785e5 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000041a31f : add rsp, 0xb0 ; pop rbp ; ret
0x00000000004915e6 : add rsp, 0xb8 ; pop rbx ; pop rbp ; ret
0x00000000004a293a : add rsp, 0xbb0 ; pop rbp ; ret
0x0000000000419d6b : add rsp, 0xc0 ; pop rbp ; ret
0x000000000044b19c : add rsp, 0xd0 ; pop rbp ; ret
0x000000000044b797 : add rsp, 0xe0 ; pop rbp ; ret
0x000000000041a952 : add rsp, 0xf0 ; pop rbp ; ret
0x0000000000466da2 : add rsp, 8 ; pop rbp ; ret
0x0000000000401eb5 : add rsp, 8 ; ret
0x00000000004c8d10 : and ah, dh ; cli ; jmp qword ptr [rbx]
0x0000000000493bad : and al, 0 ; add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004c373d : and al, 0xffffffffffffff81 ; ret 0x61
0x00000000004c7125 : and al, 0xfffffffffffffff8 ; jmp qword ptr [rax]
0x0000000000411f77 : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000044d787 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004c74c1 : and al, byte ptr [rax] ; add byte ptr [rax], al ; mov bh, bl ; call rax
0x000000000045497f : and bh, 1 ; movzx eax, dil ; pop rbp ; ret
0x0000000000461b69 : and bl, ch ; ret 0x89b1
0x000000000044ed5a : and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004c7451 : and byte ptr [rax], al ; add byte ptr [rax], al ; jo 0x4c7458 ; call qword ptr [rax]
0x00000000004c7441 : and byte ptr [rax], al ; add byte ptr [rax], dl ; outsb dx, byte ptr [rsi] ; sti ; call rax
0x00000000004a6836 : and byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004a6a26 : and byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041beb4 : and byte ptr [rbp - 0x77], al ; ret 0x3145
0x00000000004210f3 : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000047ea8b : and byte ptr [rsi + 0x58], ah ; jb 0x47eac2 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000045c9af : and ch, byte ptr [rdi + 0x39] ; ret 0x10ba
0x000000000045c996 : and ch, byte ptr [rdi + 0x39] ; ret 0x1b2
0x000000000045c5d6 : and ch, byte ptr [rdi + 0x39] ; ret 0x8589
0x0000000000442a76 : and cl, byte ptr [rcx] ; add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp qword ptr [rbx]
0x00000000004adf0c : and dh, 1 ; movzx eax, sil ; pop rbp ; ret
0x000000000045497e : and dil, 1 ; movzx eax, dil ; pop rbp ; ret
0x00000000004c7491 : and dword ptr [rax], eax ; add byte ptr [rax + 0x7e], dh ; sti ; call qword ptr [rax]
0x00000000004c7481 : and dword ptr [rax], eax ; add byte ptr [rax], al ; jle 0x4c7488 ; call rax
0x00000000004acdfb : and dword ptr [rax], edi ; add dword ptr [rax], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000045c478 : and dword ptr [rdi + 0x39], ebp ; ret 0x8589
0x000000000041ec38 : and eax, 0x48000000 ; add esp, 0x10 ; pop rbp ; ret
0x000000000040921d : and eax, 0x69b80000 ; stosb byte ptr [rdi], al ; ret 0xb915
0x0000000000472051 : and eax, 0x75b4b9d3 ; ret
0x0000000000486a7d : and eax, 0x8b000000 ; in al, dx ; pop rbp ; ret
0x0000000000492052 : and eax, 0xdab0b9fa ; ret
0x00000000004c9cad : and eax, dword ptr [rax] ; add byte ptr [rax], al ; or al, 0xffffffffffffffff ; call rbx
0x000000000041f9ae : and eax, dword ptr [rbp + 0x71b9d733] ; je 0x41f993 ; ret
0x00000000004ac028 : and eax, edi ; mov al, r8b ; movzx eax, al ; pop rbp ; ret
0x00000000004abb3f : and eax, edi ; xor esi, edi ; or eax, esi ; pop rbp ; ret
0x0000000000461bbd : and ebx, ebp ; ret 0x89b1
0x0000000000463e45 : and ebx, ebp ; ret 0x8bb1
0x0000000000463e29 : and ebx, ebp ; ret 0xb2b1
0x000000000040be57 : and ebx, esi ; xchg eax, ebp ; ret 0x1b2
0x000000000040bb9b : and ebx, esi ; xchg eax, ebp ; ret 0x8589
0x000000000040be73 : and ebx, esi ; xchg eax, ebp ; ret 0x8b48
0x00000000004c7115 : and edi, eax ; jmp rax
0x00000000004ac0ea : and edx, ebx ; mov al, dl ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x0000000000482ae2 : and esp, dword ptr [rcx] ; ret 0xd709
0x00000000004adf0b : and sil, 1 ; movzx eax, sil ; pop rbp ; ret
0x00000000004a3015 : call 0x124a301b
0x00000000004a1aec : call 0x184a1af2
0x00000000004a3087 : call 0x224a308d
0x00000000004a2ebe : call 0x284a2ec4
0x0000000000465c68 : call 0x401ee2
0x00000000004932d5 : call 0x401ee8
0x0000000000415c53 : call 0x401f32
0x000000000040c828 : call 0x401f39
0x0000000000466706 : call 0x402047
0x0000000000465fc8 : call 0x402212
0x0000000000421264 : call 0x45d522
0x00000000004637aa : call 0x45f826
0x000000000047ee85 : call 0x47ef49
0x000000000045b315 : call 0x487532
0x00000000004a2d03 : call 0x48f002
0x00000000004548cf : call 0x4907d21f
0x00000000004548ce : call 0x4907d220
0x000000000045491d : call 0x4907d26d
0x000000000045491c : call 0x4907d26e
0x000000000040c802 : call 0x492156
0x0000000000499123 : call 0x4a5352
0x0000000000499122 : call 0x4a5353
0x00000000004a7af7 : call 0x4adb05
0x0000000000491ccb : call 0x4adf22
0x00000000004ae3c2 : call 0xffffffff8a2b395b
0x0000000000443343 : call 0xffffffff8a443311
0x00000000004427c0 : call 0xffffffff8c4427c8
0x000000000048b2fd : call 0xffffffffaca97531
0x000000000048b2fc : call 0xffffffffaca97532
0x00000000004c8b28 : call 0xffffffffd84c8619
0x0000000000457d33 : call 0xffffffffe10836f9
0x0000000000457d32 : call 0xffffffffe10836fa
0x00000000004a2e0e : call 0xffffffffe34a2e14
0x00000000004a3096 : call 0xffffffffe54a309c
0x0000000000475b09 : call 0xffffffffe909e459
0x0000000000475b08 : call 0xffffffffe909e45a
0x00000000004bdb44 : call 0xfffffffff7849e04
0x00000000004025b3 : call 0xffffffffff40926f
0x00000000004025f3 : call 0xffffffffff4092af
0x00000000004c4b69 : call qword ptr [r12 + rbx*8]
0x00000000004121c3 : call qword ptr [rax]
0x000000000043b5c8 : call qword ptr [rbx]
0x00000000004ba71c : call qword ptr [rcx]
0x000000000040c05e : call qword ptr [rdi]
0x000000000040b196 : call qword ptr [rdx]
0x0000000000459038 : call qword ptr [rsi]
0x00000000004c4b6a : call qword ptr [rsp + rbx*8]
0x00000000004201b8 : call r8
0x000000000041a8e6 : call r9
0x000000000040263d : call rax
0x000000000041ff47 : call rbx
0x000000000041a3a9 : call rcx
0x0000000000430b6a : call rdi
0x000000000040597d : call rdx
0x000000000040b3be : call rsi
0x000000000041559b : call rsp
0x00000000004277ce : cdq ; ret 0
0x00000000004c0368 : clc ; add rsp, 0x120 ; pop rbp ; ret
0x000000000044d68b : clc ; add rsp, 0x190 ; pop rbp ; ret
0x0000000000448d46 : clc ; add rsp, 0x280 ; pop rbp ; ret
0x00000000004665c4 : clc ; add rsp, 0x3e0 ; pop rbp ; ret
0x00000000004b1a67 : clc ; add rsp, 0x440 ; pop rbp ; ret
0x000000000047beaa : clc ; add rsp, 0x5b0 ; pop rbp ; ret
0x00000000004801e7 : clc ; add rsp, 0x70 ; pop rbp ; ret
0x000000000047e1e7 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x000000000044ac3b : clc ; add rsp, 0x90 ; pop rbp ; ret
0x00000000004a9989 : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x000000000047f451 : clc ; add rsp, 0xc0 ; pop rbp ; ret
0x00000000004c4aeb : clc ; add rsp, 0xf0 ; pop rbp ; ret
0x00000000004c828a : clc ; call qword ptr [rdx]
0x00000000004c711e : clc ; inc dword ptr [rax] ; adc al, 0 ; add byte ptr [rax], al ; and al, 0xfffffffffffffff8 ; jmp qword ptr [rax]
0x00000000004c715e : clc ; inc dword ptr [rax] ; adc eax, 0x51300000 ; clc ; jmp qword ptr [rax]
0x00000000004c714e : clc ; inc eax ; adc al, 0 ; add byte ptr [rax + 0x43], al ; clc ; jmp rax
0x00000000004c718e : clc ; inc eax ; adc eax, 0x68f00000 ; clc ; jmp rax
0x00000000004c710e : clc ; inc eax ; adc eax, dword ptr [rax] ; add al, al ; and edi, eax ; jmp rax
0x00000000004c70e6 : clc ; jmp qword ptr [rax]
0x00000000004c7116 : clc ; jmp rax
0x00000000004c842a : clc ; jmp rbx
0x00000000004025df : clc ; jne 0x4025e8 ; pop rbp ; ret
0x00000000004ac029 : clc ; mov al, r8b ; movzx eax, al ; pop rbp ; ret
0x00000000004abdf3 : clc ; mov ax, r8w ; movzx eax, ax ; pop rbp ; ret
0x00000000004ad527 : clc ; mov dword ptr [rdi + 0x18], 0x95f616 ; pop rbp ; ret
0x0000000000486cde : clc ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000045414e : clc ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000044926b : clc ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000044928b : clc ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000047874b : clc ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000047872b : clc ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x00000000004ab841 : clc ; mov rax, r8 ; pop rbp ; ret
0x0000000000420c29 : clc ; mov rsi, qword ptr [rbp - 0x10] ; mov edx, dword ptr [rbp - 0x14] ; call rcx
0x000000000040b86c : clc ; mov rsp, rbp ; pop rbp ; ret
0x0000000000478887 : clc ; pop rbp ; ret
0x00000000004186ab : clc ; pop rbx ; pop rbp ; ret
0x0000000000404983 : clc ; push rdx ; ret
0x000000000043b0a0 : clc ; ret 0
0x00000000004685dd : clc ; ret 0x77a8
0x000000000048baf7 : clc ; ret 0x898d
0x000000000048d9a7 : clc ; ret 0xb28d
0x00000000004a2d04 : clc ; ret 0xfffe
0x00000000004428b5 : clc ; ret 0xffff
0x00000000004abb40 : clc ; xor esi, edi ; or eax, esi ; pop rbp ; ret
0x0000000000402ab7 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004bdcd8 : cld ; add rsp, 0x1360 ; pop rbp ; ret
0x00000000004a8e78 : cld ; add rsp, 0x18 ; pop rbp ; ret
0x0000000000417c59 : cld ; add rsp, 0x90 ; pop rbp ; ret
0x000000000048b93e : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x00000000004ad4ad : cld ; add rsp, 0xf0 ; pop rbp ; ret
0x0000000000482ae1 : cld ; and esp, dword ptr [rcx] ; ret 0xd709
0x00000000004c8e91 : cld ; cli ; jmp rsp
0x0000000000458f76 : cld ; idiv edi ; ljmp ptr [rcx] ; ret 0xd701
0x000000000043e2f9 : cld ; inc edi ; test dword ptr [rcx + rdi*8 - 1], esi ; call rsi
0x000000000043f4ca : cld ; inc edi ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp rbx
0x000000000041561f : cld ; jmp 0x41568c
0x000000000041561e : cld ; jmp 0x41568d
0x00000000004c9462 : cld ; jmp qword ptr [rdi]
0x00000000004c9322 : cld ; jmp rcx
0x0000000000441ee6 : cld ; mov cl, 0x78 ; jnp 0x441e7b ; test dword ptr [rax], esi ; ret
0x000000000045a866 : cld ; mov rsp, rbp ; pop rbp ; ret
0x000000000043eda0 : cld ; ret
0x00000000004353de : cld ; ret 0
0x0000000000480f5f : cld ; ret 0x281b
0x00000000004427ae : cld ; ret 0xffff
0x000000000045173a : cld ; stc ; in al, dx ; ret 0x8589
0x0000000000451e8b : cld ; stc ; in al, dx ; ret 0xff3
0x0000000000461d2a : cld ; stc ; ret
0x0000000000498a35 : cli ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000441554 : cli ; add cl, byte ptr [rax + 1] ; ret 0x8b48
0x00000000004c72de : cli ; call qword ptr [rax]
0x00000000004c8c4a : cli ; call qword ptr [rbx]
0x00000000004c8e52 : cli ; call qword ptr [rcx]
0x00000000004c8d72 : cli ; call qword ptr [rdx]
0x00000000004c72ce : cli ; call rax
0x00000000004c8b2a : cli ; call rdi
0x00000000004c8c2a : cli ; call rdx
0x00000000004c8e51 : cli ; cli ; call qword ptr [rcx]
0x00000000004c8aca : cli ; jmp qword ptr [rbx]
0x00000000004c8e92 : cli ; jmp rsp
0x0000000000491e3e : cli ; mov cl, 0x37 ; ret 0x4589
0x00000000004920ca : cli ; mov cl, 0x37 ; ret 0x94b9
0x000000000049213a : cli ; mov cl, 0x37 ; ret 0xd3e9
0x000000000047ea90 : cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004c72c6 : cli ; push qword ptr [rax - 0x2fffffe6] ; add edi, edx ; call rax
0x00000000004c72d6 : cli ; push rax ; sbb al, byte ptr [rax] ; add byte ptr [rax + 8], ah ; cli ; call qword ptr [rax]
0x00000000004a64b0 : cli ; ret
0x00000000004c373c : cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x00000000004c70a6 : cmc ; call qword ptr [rax]
0x00000000004c8072 : cmc ; call qword ptr [rcx]
0x00000000004c70d6 : cmc ; call rax
0x00000000004c80da : cmc ; call rcx
0x00000000004c8052 : cmc ; call rsi
0x0000000000497956 : cmc ; jmp 0x499b12
0x00000000004c7eb2 : cmc ; jmp rdx
0x00000000004c70ce : cmc ; push qword ptr [rax - 0x3fffffee] ; movsb byte ptr [rdi], byte ptr [rsi] ; cmc ; call rax
0x00000000004c709e : cmc ; push rax ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x63], ah ; cmc ; call qword ptr [rax]
0x0000000000433c5a : cmc ; ret
0x000000000041b3d4 : cmc ; ret 0x28e9
0x000000000047d9ab : cmc ; ret 0x4f0b
0x000000000041ab5c : cmc ; ret 0x8589
0x000000000041b2a7 : cmc ; ret 0xd3b9
0x0000000000409988 : cmc ; sbb eax, 0xf9b80000 ; push rdx ; ret
0x000000000045b6b8 : cmove ecx, edx ; movsxd rax, ecx ; pop rbp ; ret
0x000000000043ed9d : cmp al, -0x77 ; test edi, esp ; ret
0x000000000040c82f : cmp al, 0x25 ; ret
0x0000000000499097 : cmp al, byte ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000422662 : cmp al, dl ; ret
0x00000000004c8c48 : cmp bh, ch ; cli ; call qword ptr [rbx]
0x00000000004c9a69 : cmp bh, dh ; jmp qword ptr [rcx]
0x000000000043d71d : cmp bl, -1 ; dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x000000000041c585 : cmp bpl, cl ; ret 1
0x0000000000409bf0 : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000495bd8 : cmp byte ptr [rbx], dl ; ret
0x000000000044239d : cmp byte ptr [rcx + 0x108589d2], dl ; ret
0x000000000044266c : cmp byte ptr [rdi], cl ; sahf ; ret 0xd284
0x00000000004662ba : cmp byte ptr [rsi + rdx*4 - 0x1b14630], bh ; ret
0x00000000004c7a10 : cmp byte ptr [rsi], -0xc ; call qword ptr [rbx]
0x00000000004ac388 : cmp ch, al ; ret 0x171
0x0000000000479d65 : cmp ch, byte ptr [rbx - 0x66] ; ret
0x000000000041c586 : cmp ch, cl ; ret 1
0x000000000047db41 : cmp cl, byte ptr [rsi - 0x946182f] ; ret 0x4f0b
0x00000000004839e7 : cmp dl, al ; ret
0x000000000044c7c2 : cmp dword ptr [rax - 0x75], ecx ; jne 0x44c7a4 ; call rax
0x0000000000447037 : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xe280
0x0000000000493f06 : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000479d11 : cmp dword ptr [rbx - 0x66], ebp ; ret
0x00000000004965e8 : cmp dword ptr [rbx], edx ; ret
0x000000000047eff2 : cmp eax, 0x8945c621 ; ret 0x8141
0x0000000000460ced : cmp eax, 0xb8000001 ; ret
0x000000000043cf5b : cmp eax, 0xb80000a4 ; xchg eax, ebx ; ret 0x16c4
0x0000000000485ab9 : cmp eax, 0xb95a1a7d ; salc ; jmp qword ptr [rdi]
0x000000000040259d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4025b0 ; pop rbp ; ret
0x000000000047f79f : cmp eax, dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x000000000043777a : cmp eax, edx ; ret
0x00000000004195e1 : cmp ebp, dword ptr [rax - 0x70] ; add al, -0x47 ; ret
0x0000000000493505 : cmp ecx, ebp ; ret 3
0x0000000000472ea7 : cmp esp, dword ptr [rbp - 0x47] ; push -0x75425eeb ; push rbp ; ret
0x000000000040028f : cmpsb byte ptr [rsi], byte ptr [rdi] ; push rsp ; ret 0x9116
0x00000000004056a3 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xc984
0x000000000044535f : cmpsb byte ptr [rsi], byte ptr [rdi] ; sbb al, byte ptr [rsi + 0x48858948] ; ret 0xffff
0x0000000000417716 : cmpsb byte ptr [rsi], byte ptr [rdi] ; sub al, -0x47 ; ret 0x34f0
0x0000000000441c7a : cmpsd dword ptr [rsi], dword ptr [rdi] ; fmul qword ptr [rsp + rsi*2 - 0x35] ; ret
0x00000000004037e7 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x00000000004056f7 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xc984
0x0000000000416239 : cwde ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000486632 : cwde ; add eax, 0x5d5b0000 ; ret
0x00000000004210ef : cwde ; add rsp, 0x120 ; pop rbp ; ret
0x0000000000492050 : cwde ; and eax, 0xdab0b9fa ; ret
0x00000000004c8938 : cwde ; in al, -7 ; call qword ptr [rdx]
0x000000000049911f : cwde ; mov esi, dword ptr [rax + 0x44] ; call 0x4a5356
0x000000000049911e : cwde ; mov esi, dword ptr [rax + 0x44] ; call 0x4a5357
0x00000000004409f7 : cwde ; ret
0x0000000000444bd5 : cwde ; ret 0xffff
0x00000000004540e7 : dec dword ptr [rax + 0x29] ; ret 0x8948
0x00000000004c3e1a : dec dword ptr [rax + 0x29] ; ret 0x8b48
0x0000000000482ea2 : dec dword ptr [rax + 0x29] ; ret 0x9c0f
0x0000000000457398 : dec dword ptr [rax + 0x69] ; ret 0xa
0x0000000000464374 : dec dword ptr [rax + 1] ; ret 0x8948
0x000000000046670a : dec dword ptr [rax - 0x41] ; ret 0x7f0f
0x000000000040c82c : dec dword ptr [rax - 0x73] ; cmp al, 0x25 ; ret
0x00000000004723ab : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x0000000000411466 : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 0x7d] ; ret 0x480a
0x00000000004104ab : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4c78
0x000000000043d720 : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x0000000000412284 : dec dword ptr [rax - 0x75] ; or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x00000000004b6772 : dec dword ptr [rax - 0x75] ; push rcx ; adc byte ptr [rax + 1], cl ; ret 0x8948
0x000000000043b65e : dec dword ptr [rax - 0x77] ; add edi, eax ; test dword ptr [rcx + rdi*8 - 1], esi ; call qword ptr [rbx]
0x0000000000445679 : dec dword ptr [rax - 0x77] ; add edi, eax ; test dword ptr [rcx + rdi*8 - 1], esi ; call qword ptr [rcx]
0x000000000043ed03 : dec dword ptr [rax - 0x77] ; add edi, eax ; test dword ptr [rcx + rdi*8 - 1], esi ; call qword ptr [rdx]
0x000000000043f00e : dec dword ptr [rax - 0x77] ; add edi, eax ; test dword ptr [rcx + rdi*8 - 1], esi ; call rbx
0x0000000000445313 : dec dword ptr [rax - 0x77] ; add edi, eax ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp rsi
0x0000000000441029 : dec dword ptr [rax - 0x77] ; add edi, eax ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp rsp
0x000000000040cdfb : dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x00000000004ab6fd : dec dword ptr [rax - 0x77] ; jge 0x4ab700 ; pop rbp ; ret
0x000000000044548c : dec dword ptr [rax - 0x77] ; lea esp, dword ptr [rax] ; ret 0xffff
0x0000000000445c67 : dec dword ptr [rax - 0x77] ; or bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp rsi
0x000000000047c0e7 : dec dword ptr [rax - 0x77] ; ret 0x10e8
0x0000000000459052 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x00000000004b6c2b : dec dword ptr [rax - 0x77] ; ret 0x2ce8
0x00000000004b765d : dec dword ptr [rax - 0x77] ; ret 0x4ae8
0x00000000004605f9 : dec dword ptr [rax - 0x77] ; ret 0x5ee8
0x000000000047b28f : dec dword ptr [rax - 0x77] ; ret 0x68e8
0x00000000004586f4 : dec dword ptr [rax - 0x77] ; ret 0x8148
0x0000000000487476 : dec dword ptr [rax - 0x77] ; ret 0x8844
0x000000000040a183 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004b7fbe : dec dword ptr [rax - 0x77] ; ret 0xe9e8
0x000000000047bbe9 : dec dword ptr [rax - 0x77] ; ret 0xee8
0x00000000004a045f : dec dword ptr [rax - 0x77] ; sbb byte ptr [r15], cl ; xchg eax, esp ; ret
0x0000000000444bd1 : dec dword ptr [rax - 0x77] ; xchg eax, ebp ; cwde ; ret 0xffff
0x0000000000441977 : dec dword ptr [rax - 0x77] ; xchg eax, ebp ; pop rax ; ret
0x0000000000441a7a : dec dword ptr [rax - 0x77] ; xchg eax, ebp ; push rax ; ret
0x0000000000441d89 : dec dword ptr [rax - 0x77] ; xchg eax, ebp ; ret
0x00000000004a12ec : dec dword ptr [rax - 0x7d] ; ret 0x4813
0x0000000000458ebb : dec dword ptr [rax - 0x7f] ; ret 0
0x000000000043cc33 : dec dword ptr [rax - 0x7f] ; ret 0x17
0x00000000004bbc2d : dec dword ptr [rax - 0x7f] ; ret 1
0x00000000004b7c59 : dec dword ptr [rax - 0x7f] ; ret 4
0x000000000045805d : dec dword ptr [rax - 1] ; ret 0x8948
0x0000000000442514 : dec dword ptr [rbx + 0x885893e] ; ret
0x000000000045f66d : dec dword ptr [rbx - 0x1376b800] ; pop rbp ; ret
0x000000000045b32e : dec dword ptr [rbx - 0x1a36b] ; dec dword ptr [rdi] ; ret 0x4589
0x00000000004b3189 : dec dword ptr [rbx - 0x1eb6b] ; dec dword ptr [rdi] ; ret 0x4589
0x0000000000460526 : dec dword ptr [rbx - 0x1f36b] ; dec dword ptr [rdi] ; ret 0x4589
0x00000000004201c6 : dec dword ptr [rbx - 0x2e36b] ; dec dword ptr [rdi] ; ret 0x8589
0x0000000000443e74 : dec dword ptr [rbx - 0x437a76ef] ; ret 0xffff
0x00000000004409f2 : dec dword ptr [rbx - 0x677a76ef] ; ret
0x0000000000499381 : dec dword ptr [rbx - 0x8d36b] ; dec dword ptr [rdi] ; ret 0x8589
0x00000000004a0ae3 : dec dword ptr [rbx - 0xadb6b] ; dec dword ptr [rdi] ; ret 0x8589
0x000000000047f3a5 : dec dword ptr [rbx - 0xaf6b] ; dec dword ptr [rdi] ; ret 0x4589
0x00000000004a243e : dec dword ptr [rbx - 0xb636b] ; dec dword ptr [rdi] ; ret 0x8589
0x0000000000442aa6 : dec dword ptr [rbx - 0xb7a76ce] ; ret 0xffff
0x0000000000408daa : dec dword ptr [rbx - 0xccb6b] ; dec dword ptr [rdi] ; ret 0x8589
0x0000000000442346 : dec dword ptr [rcx + 0x149589f8] ; ret
0x00000000004422dd : dec dword ptr [rcx + 0x1c9589f8] ; ret
0x000000000044251c : dec dword ptr [rcx + 0x49589f8] ; ret
0x00000000004427b1 : dec dword ptr [rcx - 0x4a746630] ; cld ; ret 0xffff
0x00000000004409fa : dec dword ptr [rcx - 0x4a746630] ; cwde ; ret
0x0000000000402d32 : dec dword ptr [rcx - 0x76b773bb] ; in al, dx ; pop rbp ; ret
0x000000000047d9a6 : dec dword ptr [rcx - 0xa167e3f] ; ret 0x4f0b
0x000000000043fc40 : dec dword ptr [rdi + rbp*2] ; mov ebp, 0xbc858984 ; ret
0x0000000000440616 : dec dword ptr [rdi] ; pushfq ; ret 0xe280
0x000000000045b334 : dec dword ptr [rdi] ; ret 0x4589
0x0000000000408db0 : dec dword ptr [rdi] ; ret 0x8589
0x000000000043549f : dec dword ptr [rdi] ; test ah, ch ; ret
0x0000000000492a2d : dec dword ptr [rdi] ; test ah, cl ; or al, 0 ; add cl, ch ; ret
0x000000000044a591 : dec dword ptr [rdi] ; test ah, dh ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x00000000004353db : dec dword ptr [rdi] ; test bh, ah ; ret 0
0x000000000044f40b : dec dword ptr [rdi] ; test bl, dh ; add al, 0 ; add cl, ch ; ret 1
0x00000000004b2a7e : dec dword ptr [rdi] ; test byte ptr [rax - 0x16fffff9], cl ; ret 1
0x0000000000492e2e : dec dword ptr [rdi] ; test byte ptr [rax], ah ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x00000000004a8050 : dec dword ptr [rdi] ; test byte ptr [rbp - 0x16fffffc], ah ; ret 1
0x0000000000449d2a : dec dword ptr [rdi] ; test byte ptr [rbp - 0x16fffffd], ch ; ret 1
0x000000000041c2c5 : dec dword ptr [rdi] ; test byte ptr [rbx + rax], bl ; add cl, ch ; ret 1
0x000000000041a584 : dec dword ptr [rdi] ; test byte ptr [rcx], bh ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x00000000004a75f4 : dec dword ptr [rdi] ; test byte ptr [rcx], bl ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x00000000004682ba : dec dword ptr [rdi] ; test byte ptr [rcx], ch ; ret 0
0x000000000048fd7d : dec dword ptr [rdi] ; test byte ptr [rdi + rax], al ; add cl, ch ; ret 1
0x0000000000413cd4 : dec dword ptr [rdi] ; test byte ptr [rdi], bh ; add al, 0 ; add cl, ch ; ret 1
0x000000000045c65c : dec dword ptr [rdi] ; test byte ptr [rip - 0x16fffffb], bl ; ret 1
0x00000000004a622f : dec dword ptr [rdi] ; test byte ptr [rsi], cl ; or al, 0 ; add cl, ch ; ret
0x000000000040c30a : dec dword ptr [rdi] ; test cl, ah ; add dword ptr [rax], eax ; add cl, ch ; ret 1
0x0000000000424367 : dec dword ptr [rdi] ; test cl, ah ; ret
0x0000000000448138 : dec dword ptr [rdi] ; test cl, al ; or eax, dword ptr [rax] ; add cl, ch ; ret
0x0000000000418fce : dec dword ptr [rdi] ; test dh, bl ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x0000000000433c57 : dec dword ptr [rdi] ; test dh, ch ; ret
0x00000000004a3403 : dec dword ptr [rdi] ; test dh, dl ; add al, 0 ; add cl, ch ; ret 1
0x0000000000452805 : dec dword ptr [rdi] ; test dh, dl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x00000000004ad94f : dec dword ptr [rdi] ; test dl, bl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000457464 : dec dword ptr [rdi] ; xchg eax, edx ; ret 0xe280
0x00000000004c161e : dec dword ptr [rdi] ; xchg eax, esp ; ret
0x00000000004b13f3 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x00000000004580b4 : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000043d5cf : dec dword ptr [rdx] ; neg dword ptr [rdi] ; xor ch, cl ; ret
0x000000000044535d : dec ecx ; cmpsb byte ptr [rsi], byte ptr [rdi] ; sbb al, byte ptr [rsi + 0x48858948] ; ret 0xffff
0x000000000047bf78 : dec esi ; sbb al, -0x73 ; sbb ecx, ebp ; ret
0x0000000000416434 : div dword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000045bf1f : div dword ptr [rcx] ; mov rax, rdx ; mov rsp, rbp ; pop rbp ; ret
0x0000000000416433 : div qword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x0000000000418ec9 : enter -0x29d3, 0x27 ; ret 0x890d
0x0000000000418a4b : enter -0x2ad3, 0x27 ; ret 0x890d
0x0000000000418d07 : enter -0x33d3, -0x48 ; push rsp ; ret
0x0000000000418cbc : enter -0x34d3, -0x48 ; push rsp ; ret
0x0000000000480126 : enter -0x62d3, 0x51 ; ret 0x8929
0x0000000000480076 : enter -0x63d3, 0x51 ; ret 0x8929
0x000000000044a9a0 : enter -0x74b8, 0x31 ; call rax
0x000000000048efee : enter -0x7cb8, -0x3c ; push rax ; pop rbp ; ret
0x000000000041c564 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004b1049 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000043ed9b : enter 0x3ce8, -0x77 ; test edi, esp ; ret
0x000000000045a164 : enter 0x4c42, 0x29 ; ret 0x2948
0x000000000045a487 : enter 0x548, 0 ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8b48
0x0000000000491cc5 : enter 0x758b, -0x3c ; mov al, 0 ; call 0x4adf28
0x00000000004b79d0 : enter 0xf41, -0x6b ; ret 0x8445
0x00000000004ab965 : enter 0xf41, 0x44 ; ret 0x4589
0x000000000042099e : fadd dword ptr [r8 + 0xf000179] ; xchg eax, ebp ; ret 0x8840
0x000000000042099f : fadd dword ptr [rax + 0xf000179] ; xchg eax, ebp ; ret 0x8840
0x000000000048e950 : fadd dword ptr [rax + rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rdx]
0x0000000000448cd0 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000413745 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004a5e09 : fadd qword ptr [rbx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004a5dc7 : fadd qword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004a5de8 : fadd qword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000045a0ee : fadd st(7), st(0) ; or cl, ch ; ret
0x00000000004c1600 : fbld dword ptr [rcx] ; ret 0x941
0x00000000004c9018 : fcom dword ptr [rdx - 5] ; call qword ptr [rdx]
0x00000000004abc1b : fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000049472c : fcomp st(3) ; ret
0x0000000000488535 : fdiv dword ptr [rbp + 0x77] ; ret 0x8589
0x00000000004453c5 : fiadd dword ptr [rcx + 0x38858948] ; ret 0xffff
0x00000000004a119a : fiadd dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x000000000044f40e : fiadd word ptr [rax + rax] ; add cl, ch ; ret 1
0x00000000004916b1 : fild dword ptr [rdi + rcx + 0x44] ; ret 0x8945
0x00000000004c15df : fild word ptr [rcx - 0x77] ; ret
0x00000000004990ef : fild word ptr [rcx - 9] ; jmp qword ptr [rcx]
0x00000000004990ee : fild word ptr cs:[rcx - 9] ; jmp qword ptr [rcx]
0x00000000004ac0eb : fimul dword ptr [rax - 0x3f49f030] ; pop rbx ; pop rbp ; ret
0x000000000045b278 : fimul dword ptr [rdi] ; sahf ; ret
0x0000000000443bcc : fistp word ptr [rax] ; jmp 0x4473a4
0x000000000048689b : fisttp dword ptr [rbp - 0x77] ; sbb al, bh ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rbx]
0x00000000004910f5 : fld qword ptr [rcx - 0xf] ; jmp qword ptr [rcx]
0x00000000004c1cf8 : fld qword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x000000000041522d : fmul dword ptr [r8 - 0x75] ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000048aa47 : fmul dword ptr [r9 - 0x57167e3f] ; ret
0x00000000004598a0 : fmul dword ptr [rax + 0xf] ; ret 0x8b48
0x000000000041522e : fmul dword ptr [rax - 0x75] ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000044a99c : fmul dword ptr [rax - 0x75] ; enter -0x74b8, 0x31 ; call rax
0x000000000045b254 : fmul dword ptr [rax - 0x77] ; ret 0x3e8
0x00000000004c4502 : fmul dword ptr [rax - 0x7d] ; ret 0x48f0
0x000000000044b6dd : fmul dword ptr [rax - 0x7f] ; ret 0x10
0x000000000045b21f : fmul dword ptr [rax - 0x7f] ; ret 1
0x0000000000449fc9 : fmul dword ptr [rax - 1] ; ret 0x8948
0x000000000048aa48 : fmul dword ptr [rcx - 0x57167e3f] ; ret
0x00000000004c8288 : fmul dword ptr [rdi] ; clc ; call qword ptr [rdx]
0x00000000004c4b6c : fmul qword ptr [rax - 0x7d] ; ret
0x00000000004c82a4 : fmul qword ptr [rcx] ; add byte ptr [rax], al ; fmul dword ptr [rdi] ; clc ; call qword ptr [rdx]
0x0000000000441c7b : fmul qword ptr [rsp + rsi*2 - 0x35] ; ret
0x00000000004886bd : fnstenv dword ptr [rbp + 0x77] ; ret 0x8589
0x0000000000489cd7 : fnstenv dword ptr [rbp + 0x77] ; ret 0xedb9
0x000000000045a15f : fstp st(7), st(0) ; or esi, esi ; enter 0x4c42, 0x29 ; ret 0x2948
0x0000000000496fa4 : fstpnce st(3), st(0) ; ret
0x00000000004872f2 : fsubr qword ptr [rdi - 0x6946a2c4] ; ret
0x00000000004b78f4 : fsubr st(1) ; ret
0x00000000004c7cf1 : fxtract ; call qword ptr [rcx]
0x0000000000402929 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004937a7 : hlt ; add rsp, 0x310 ; pop rbp ; ret
0x00000000004a5f39 : hlt ; add rsp, 0xc0 ; pop rbp ; ret
0x000000000048afac : hlt ; add rsp, 0xe0 ; pop rbp ; ret
0x0000000000420ba9 : hlt ; add rsp, 0xf0 ; pop rbp ; ret
0x0000000000466da1 : hlt ; add rsp, 8 ; pop rbp ; ret
0x00000000004c7b72 : hlt ; call qword ptr [rax]
0x00000000004c7a12 : hlt ; call qword ptr [rbx]
0x00000000004c7cf2 : hlt ; call qword ptr [rcx]
0x00000000004c8d11 : hlt ; cli ; jmp qword ptr [rbx]
0x00000000004c7df2 : hlt ; jmp rdi
0x00000000004025b0 : hlt ; pop rbp ; mov edi, 0x6cb3e8 ; jmp rax
0x000000000049de58 : hlt ; ret
0x0000000000442aab : hlt ; ret 0xffff
0x0000000000446a8b : idiv dword ptr [rax - 0x7e0dd691] ; ret 0xf713
0x000000000047ebbb : idiv edi ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x0000000000499385 : idiv edi ; dec dword ptr [rdi] ; ret 0x8589
0x0000000000458f77 : idiv edi ; ljmp ptr [rcx] ; ret 0xd701
0x0000000000400289 : imul eax, edi, 0x9ac522b3 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; push rsp ; ret 0x9116
0x000000000047b871 : imul edi, dword ptr [rip], 0xf ; xchg eax, ebp ; ret 0xd284
0x00000000004411eb : imul edx, dword ptr [rdx], 0xbda6b9e9 ; ret 0x4869
0x000000000047f2f0 : imul esp, dword ptr [rbx + 0x7f], 0x88419ab9 ; ret 0x8b48
0x00000000004a79a2 : in al, -0x17 ; add dword ptr [rcx], 0x3eb80000 ; ret
0x0000000000460ceb : in al, -0x17 ; cmp eax, 0xb8000001 ; ret
0x000000000041a273 : in al, -0x17 ; ret 0
0x00000000004c9721 : in al, -3 ; jmp rsp
0x0000000000492139 : in al, -6 ; mov cl, 0x37 ; ret 0xd3e9
0x00000000004c8939 : in al, -7 ; call qword ptr [rdx]
0x0000000000438eef : in al, 0 ; add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp qword ptr [rcx]
0x00000000004b3276 : in al, 0 ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004a6834 : in al, 0 ; and byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004a6a24 : in al, 0 ; and byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004c9cac : in al, 0x23 ; add byte ptr [rax], al ; add byte ptr [rdi + rdi*8], cl ; call rbx
0x00000000004a7afe : in al, 0x3e ; ret
0x000000000049baef : in al, 0x48 ; add esp, 0x390 ; pop rbp ; ret
0x00000000004b1db2 : in al, 0x48 ; add esp, 0x60 ; pop rbp ; ret
0x00000000004ac471 : in al, 0x48 ; add esp, 0xb0 ; pop rbp ; ret
0x000000000041a990 : in al, 0x48 ; mov esi, ecx ; call rax
0x0000000000483135 : in al, dx ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004aeea8 : in al, dx ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000420c30 : in al, dx ; call rcx
0x00000000004c7df1 : in al, dx ; hlt ; jmp rdi
0x00000000004545b1 : in al, dx ; jmp 0x45477d
0x00000000004545b0 : in al, dx ; jmp 0x45477e
0x000000000048b3bc : in al, dx ; jmp 0x48b439
0x000000000048b3bb : in al, dx ; jmp 0x48b43a
0x00000000004b2d26 : in al, dx ; jmp 0x4b3366
0x00000000004b2d25 : in al, dx ; jmp 0x4b3367
0x00000000004abad5 : in al, dx ; lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000402d38 : in al, dx ; pop rbp ; ret
0x000000000043efd5 : in al, dx ; ret
0x000000000045157a : in al, dx ; ret 0x8589
0x0000000000454594 : in al, dx ; ret 0xe8ff
0x0000000000451e8d : in al, dx ; ret 0xff3
0x0000000000442e49 : in al, dx ; ret 0xffff
0x000000000044556d : in al, dx ; test eax, 0x858948 ; ret 0xffff
0x00000000004144aa : in eax, dx ; adc eax, ebp ; js 0x41449d ; ret
0x00000000004c8c29 : in eax, dx ; cli ; call rdx
0x000000000047be1f : in eax, dx ; jge 0x47bdc6 ; sub eax, 0x9a6b3ab9 ; ret
0x0000000000438c4a : in eax, dx ; jmp 0x4473a3
0x000000000040be6e : in eax, dx ; mov ebp, 0x21b9a2b5 ; xchg eax, ebp ; ret 0x8b48
0x000000000043d8e8 : inc dword ptr [rax + 0xf41003e] ; xchg eax, ebp ; ret
0x00000000004c711f : inc dword ptr [rax] ; adc al, 0 ; add byte ptr [rax], al ; and al, 0xfffffffffffffff8 ; jmp qword ptr [rax]
0x00000000004c715f : inc dword ptr [rax] ; adc eax, 0x51300000 ; clc ; jmp qword ptr [rax]
0x000000000048ddf3 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x000000000041db92 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x0000000000458876 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004580db : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004ba345 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000047b454 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004c7317 : inc dword ptr [rax] ; sbb al, 0 ; add al, al ; add al, -5 ; jmp qword ptr [rax]
0x00000000004c7357 : inc dword ptr [rax] ; sbb eax, 0x9700000 ; sti ; jmp qword ptr [rax]
0x000000000049034d : inc dword ptr [rbp + 0x21] ; ret
0x000000000046635e : inc dword ptr [rbp + 0xf] ; ret 0x8944
0x000000000045f46d : inc dword ptr [rbp - 0x77] ; ret 0x8141
0x0000000000447035 : inc dword ptr [rcx + 0x39] ; add byte ptr [rdi], cl ; pushfq ; ret 0xe280
0x0000000000442669 : inc dword ptr [rcx + 0x3b] ; cmp byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000043d97e : inc dword ptr [rcx + 0x3e] ; add byte ptr [rdi], cl ; lahf ; ret 0xd284
0x00000000004bd40a : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret
0x0000000000408067 : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x8445
0x0000000000444a3f : inc dword ptr [rcx + rcx*4 - 0x7b] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xffff
0x0000000000440db2 : inc dword ptr [rcx + rcx*4 - 0x7b] ; xchg eax, esp ; ret
0x00000000004bd5c7 : inc dword ptr [rcx - 0x47] ; xchg eax, esi ; mov ecx, 0xba41a9ee ; ret
0x00000000004916d8 : inc dword ptr [rcx - 0x77] ; ret 0x8141
0x0000000000457e7b : inc dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000049b965 : inc dword ptr [rdx + rcx + 0x71] ; add cl, ch ; ret 2
0x000000000047b82b : inc dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000443917 : inc dword ptr [rsi - 0x1d] ; ret
0x00000000004c714f : inc eax ; adc al, 0 ; add byte ptr [rax + 0x43], al ; clc ; jmp rax
0x00000000004c718f : inc eax ; adc eax, 0x68f00000 ; clc ; jmp rax
0x00000000004c710f : inc eax ; adc eax, dword ptr [rax] ; add al, al ; and edi, eax ; jmp rax
0x00000000004c7347 : inc eax ; sbb al, 0 ; add al, al ; or bl, bh ; jmp rax
0x000000000043d237 : inc edi ; test dword ptr [rcx + rdi*8 - 1], esi ; call qword ptr [rbx]
0x0000000000445cf4 : inc edi ; test dword ptr [rcx + rdi*8 - 1], esi ; call qword ptr [rcx]
0x0000000000445753 : inc edi ; test dword ptr [rcx + rdi*8 - 1], esi ; call qword ptr [rdi]
0x0000000000445d18 : inc edi ; test dword ptr [rcx + rdi*8 - 1], esi ; call rax
0x0000000000446a1a : inc edi ; test dword ptr [rcx + rdi*8 - 1], esi ; call rbx
0x000000000043f257 : inc edi ; test dword ptr [rcx + rdi*8 - 1], esi ; call rdi
0x0000000000445f74 : inc edi ; test dword ptr [rcx + rdi*8 - 1], esi ; call rdx
0x000000000043e2fa : inc edi ; test dword ptr [rcx + rdi*8 - 1], esi ; call rsi
0x000000000044586e : inc edi ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp qword ptr [rax]
0x0000000000446d21 : inc edi ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp qword ptr [rbx]
0x000000000044683e : inc edi ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp qword ptr [rcx]
0x0000000000439620 : inc edi ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp qword ptr [rdx]
0x0000000000446b2e : inc edi ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp rax
0x000000000043f4cb : inc edi ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp rbx
0x0000000000445d9a : inc edi ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp rcx
0x0000000000446626 : inc edi ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp rsi
0x000000000043bd15 : inc edi ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp rsp
0x0000000000446ddd : inc edi ; test dword ptr [rcx + rdi*8 - 1], esi ; push qword ptr [rcx] ; ret 0x5b8b
0x0000000000486769 : inc edi ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rbx]
0x00000000004667ad : inc edi ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp rbx
0x000000000041141d : insb byte ptr [rdi], dx ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x00000000004098dd : insb byte ptr [rdi], dx ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000408e34 : insb byte ptr [rdi], dx ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004112de : insb byte ptr [rdi], dx ; add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004c8071 : insb byte ptr [rdi], dx ; cmc ; call qword ptr [rcx]
0x000000000042ba28 : insb byte ptr [rdi], dx ; ret
0x00000000004834a6 : insb byte ptr [rdi], dx ; ret 0x9e6d
0x0000000000434bc6 : insd dword ptr [rdi], dx ; ret
0x00000000004834fa : insd dword ptr [rdi], dx ; ret 0x9e6d
0x0000000000457dc6 : insd dword ptr [rdi], dx ; xor ebx, dword ptr [rdi] ; jle 0x457d5b ; int 0x80
0x0000000000477fb7 : int 0x5b
0x000000000049046b : int 0x73
0x0000000000457dcc : int 0x80
0x000000000045c446 : int 0xcc
0x00000000004525a4 : int 6
0x00000000004a0e3c : int 7
0x0000000000479055 : iretd ; test al, -0x47 ; call rsi
0x00000000004025a3 : ja 0x4025aa ; pop rbp ; ret
0x0000000000454151 : ja 0x45419e ; pop rbp ; ret
0x00000000004609f8 : ja 0x460a65 ; add al, r13b ; call qword ptr [rsi]
0x00000000004649d7 : ja 0x4649be ; ret 0x8974
0x000000000044556b : jae 0x445541 ; in al, dx ; test eax, 0x858948 ; ret 0xffff
0x0000000000493cdc : jae 0x493cb2 ; ret 0x89e0
0x00000000004a1538 : jae 0x4a156e ; xor esp, dword ptr [rcx] ; ret 0x8941
0x00000000004a1544 : jae 0x4a157b ; xor eax, dword ptr [rcx - 0x77] ; ret 0x8141
0x000000000044526b : jb 0x4452d4 ; mov ebx, 0x60858948 ; ret 0xffff
0x000000000046454e : jb 0x464582 ; jl 0x46450f ; ret 0x8237
0x000000000047ea8e : jb 0x47eabf ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000040535c : jbe 0x40539f ; ret 0x8589
0x00000000004053b0 : jbe 0x4053f3 ; ret 0x8589
0x000000000040824c : jbe 0x40828f ; ret 0x20b9
0x00000000004117a5 : jbe 0x411764 ; push -3 ; ret
0x000000000043fcae : jbe 0x43fcb8 ; add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; call rsp
0x00000000004b5fad : jbe 0x4b5f6c ; push rcx ; jmp rsp
0x00000000004b5fac : jbe 0x4b5f6d ; push rcx ; jmp rsp
0x00000000004025af : je 0x4025ad ; pop rbp ; mov edi, 0x6cb3e8 ; jmp rax
0x000000000041b822 : je 0x41b87b ; ret 0x8910
0x000000000041f0f0 : je 0x41f0c9 ; ret
0x000000000041f144 : je 0x41f11d ; ret
0x000000000041f998 : je 0x41f971 ; ret
0x000000000041f9b4 : je 0x41f98d ; ret
0x000000000043f4d5 : je 0x43f464 ; test ebp, eax ; ret
0x0000000000441c7d : je 0x441c4c ; ret
0x0000000000441c7c : je 0x441c4d ; ret
0x0000000000441c90 : je 0x441c5f ; ret
0x0000000000441c8f : je 0x441c60 ; ret
0x0000000000493d1e : je 0x493cf4 ; ret 0x89e0
0x0000000000493de9 : je 0x493dbf ; ret 0xb9e0
0x00000000004a2cfc : je 0x4a2d4f ; add ecx, eax ; mov rsi, rcx ; call 0x48f009
0x00000000004c63b8 : je 0x4c63c2 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4c58
0x00000000004c71a5 : je 0x4c71a1 ; jmp qword ptr [rax]
0x00000000004c983c : je 0x4c9864 ; add byte ptr [rax], al ; nop ; add esi, edi ; call qword ptr [rsi]
0x000000000043f456 : jg 0x43f460 ; add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; call qword ptr [rsi]
0x000000000043f455 : jg 0x43f461 ; add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; call qword ptr [rsi]
0x00000000004a0491 : jg 0x4a0420 ; push rbp ; ret
0x0000000000419571 : jge 0x4194f6 ; ret 0xffd8
0x0000000000419571 : jge 0x4194fc ; ret 0xffd8
0x0000000000420c28 : jge 0x420c2b ; mov rsi, qword ptr [rbp - 0x10] ; mov edx, dword ptr [rbp - 0x14] ; call rcx
0x0000000000447cb2 : jge 0x447c89 ; ret
0x0000000000447cfd : jge 0x447cd4 ; ret
0x00000000004488bd : jge 0x448894 ; ret
0x0000000000448d70 : jge 0x448d47 ; ret
0x000000000044926a : jge 0x44926b ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000044928a : jge 0x44928b ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000044a99b : jge 0x44a97e ; mov rcx, qword ptr [rbp - 0x38] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000045414d : jge 0x45414e ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000461d29 : jge 0x461d2a ; stc ; ret
0x00000000004637a8 : jge 0x463732 ; call 0x45f828
0x0000000000471446 : jge 0x4713cb ; ret 0xffd5
0x0000000000471f10 : jge 0x471ef0 ; shr cl, cl ; ret 0x3b
0x000000000047872a : jge 0x47872b ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000047874a : jge 0x47874b ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000047be20 : jge 0x47bdc5 ; sub eax, 0x9a6b3ab9 ; ret
0x0000000000491cc4 : jge 0x491c97 ; mov esi, dword ptr [rbp - 0x3c] ; mov al, 0 ; call 0x4adf29
0x00000000004ab700 : jge 0x4ab6fd ; pop rbp ; ret
0x000000000043f6d5 : jl 0x43f6df ; add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; call rdx
0x00000000004453e0 : jl 0x4453ae ; sbb byte ptr [rip + 0x30858948], bl ; ret 0xffff
0x0000000000464550 : jl 0x46450d ; ret 0x8237
0x000000000046454f : jl 0x46450e ; ret 0x8237
0x00000000004be3b7 : jl 0x4be381 ; ret
0x00000000004bf180 : jl 0x4bf14a ; ret
0x00000000004c8c44 : jl 0x4c8c60 ; add byte ptr [rax], al ; cmp bh, ch ; cli ; call qword ptr [rbx]
0x00000000004512d8 : jle 0x45126c ; test byte ptr [r9 - 0x70f07fb3], r9b ; ret 6
0x0000000000457dc9 : jle 0x457d58 ; int 0x80
0x0000000000461d7d : jle 0x461d7e ; stc ; ret
0x00000000004640e1 : jle 0x4640e2 ; stc ; ret
0x00000000004c7485 : jle 0x4c7484 ; call rax
0x00000000004c7495 : jle 0x4c7494 ; call qword ptr [rax]
0x0000000000401fcb : jmp 0x401ec7
0x000000000040a8a9 : jmp 0x40a8cd
0x000000000040862d : jmp 0x40b787
0x000000000040ae8b : jmp 0x40b788
0x0000000000409987 : jmp 0x40b789
0x000000000041098b : jmp 0x412514
0x0000000000414fbd : jmp 0x4152ac
0x0000000000415620 : jmp 0x41568b
0x0000000000416f0c : jmp 0x4172ca
0x000000000041b1a0 : jmp 0x41b409
0x000000000041e14a : jmp 0x41e3af
0x000000000043b09f : jmp 0x44739e
0x000000000043b2eb : jmp 0x4473a2
0x00000000004390d5 : jmp 0x4473a3
0x0000000000439e66 : jmp 0x4473a4
0x0000000000449fa4 : jmp 0x44a200
0x000000000044a839 : jmp 0x44a9c5
0x000000000044c6ca : jmp 0x44c80e
0x000000000044c6c9 : jmp 0x44c80f
0x000000000044c6c9 : jmp 0x44c810
0x00000000004545b2 : jmp 0x45477c
0x0000000000457769 : jmp 0x4591fb
0x0000000000457b06 : jmp 0x4591fc
0x000000000045a0f1 : jmp 0x45a4bf
0x000000000045b9f2 : jmp 0x45baa6
0x0000000000460c61 : jmp 0x460c6c
0x0000000000460cec : jmp 0x460e34
0x00000000004642f8 : jmp 0x4648e2
0x0000000000472660 : jmp 0x475ae0
0x0000000000470564 : jmp 0x475ae1
0x0000000000471931 : jmp 0x475ae2
0x000000000047cdcb : jmp 0x47d837
0x000000000047cd08 : jmp 0x47d839
0x000000000047ee33 : jmp 0x47ee98
0x0000000000482963 : jmp 0x482c0b
0x00000000004822dd : jmp 0x482c0c
0x000000000048576b : jmp 0x4868b0
0x0000000000486186 : jmp 0x4868b1
0x00000000004869d9 : jmp 0x4869e4
0x00000000004894e6 : jmp 0x48a5a9
0x0000000000489303 : jmp 0x48a5aa
0x000000000048a740 : jmp 0x48a74b
0x000000000048b3bd : jmp 0x48b438
0x000000000048df6f : jmp 0x48ee32
0x0000000000451c0f : jmp 0x4907a55f
0x0000000000451d5b : jmp 0x4907a6ab
0x0000000000451e2d : jmp 0x4907a77d
0x0000000000451eae : jmp 0x4907a7fe
0x0000000000453e54 : jmp 0x4907c7a4
0x0000000000453ecf : jmp 0x4907c81f
0x000000000049354a : jmp 0x4938d4
0x0000000000497a68 : jmp 0x497a27
0x00000000004984b7 : jmp 0x499b10
0x0000000000497957 : jmp 0x499b11
0x0000000000497b71 : jmp 0x499b12
0x000000000049a177 : jmp 0x49a1c4
0x000000000049b31a : jmp 0x49bc39
0x000000000049ffa5 : jmp 0x4a30a4
0x00000000004a6c2d : jmp 0x4a6e83
0x00000000004a77c2 : jmp 0x4a7b30
0x00000000004a787b : jmp 0x4a7b31
0x00000000004aaee9 : jmp 0x4ab6e9
0x00000000004ab8d5 : jmp 0x4ab8e0
0x00000000004aba37 : jmp 0x4aba42
0x00000000004abca5 : jmp 0x4abcb0
0x00000000004b1906 : jmp 0x4b1be8
0x00000000004b2d27 : jmp 0x4b3365
0x00000000004b32a3 : jmp 0x4b3367
0x00000000004b372b : jmp 0x4b36c1
0x00000000004bd6b8 : jmp 0x4bde43
0x00000000004bf5fe : jmp 0x4bfc71
0x00000000004bf17a : jmp 0x4bfc73
0x00000000004c4523 : jmp 0x4c45fc
0x000000000047d9aa : jmp 0x4f539ca6
0x00000000004411ed : jmp 0xffffffffc301b8af
0x00000000004c13cf : jmp 0xffffffffc4104a96
0x000000000043d836 : jmp qword ptr [rax]
0x0000000000440fe9 : jmp qword ptr [rbp + rbx*2 - 0x65]
0x000000000040b72f : jmp qword ptr [rbx]
0x000000000041093b : jmp qword ptr [rcx]
0x0000000000440ae1 : jmp qword ptr [rdi]
0x0000000000439626 : jmp qword ptr [rdx]
0x000000000041173b : jmp qword ptr [rsi]
0x00000000004025b7 : jmp rax
0x000000000043c35f : jmp rbx
0x000000000043d16b : jmp rcx
0x000000000040b62c : jmp rdi
0x00000000004025f7 : jmp rdx
0x0000000000444272 : jmp rsi
0x0000000000414590 : jmp rsp
0x00000000004025e0 : jne 0x4025e7 ; pop rbp ; ret
0x0000000000416435 : jne 0x41642d ; mov rax, rdx ; pop rbp ; ret
0x0000000000417c86 : jne 0x417c7e ; mov rax, rdx ; pop rbp ; ret
0x000000000041a3a1 : jne 0x41a393 ; mov edx, dword ptr [rbp - 0x1c] ; mov dword ptr [rbp - 0x40], eax ; call rcx
0x000000000041b86d : jne 0x41b8c6 ; ret 0x8910
0x000000000041be36 : jne 0x41be8f ; ret 0xe910
0x0000000000420c2c : jne 0x420c23 ; mov edx, dword ptr [rbp - 0x14] ; call rcx
0x000000000043b102 : jne 0x43b16b ; push rdi ; jmp 0x4473a1
0x000000000044a9f9 : jne 0x44a9c4 ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x40] ; call rax
0x000000000044c7c5 : jne 0x44c7a1 ; call rax
0x0000000000488536 : jne 0x4885b1 ; ret 0x8589
0x00000000004886be : jne 0x488739 ; ret 0x8589
0x0000000000489cd8 : jne 0x489d53 ; ret 0xedb9
0x0000000000489f30 : jne 0x489fab ; ret 0xedb9
0x0000000000491cc7 : jne 0x491c93 ; mov al, 0 ; call 0x4adf26
0x00000000004a6ec9 : jne 0x4a6eac ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x00000000004a8ed1 : jne 0x4a8ec9 ; mov rax, rdx ; pop rbp ; ret
0x00000000004a94a2 : jne 0x4a949a ; mov rax, rdx ; pop rbp ; ret
0x00000000004407c1 : jno 0x440750 ; xchg eax, ebp ; ret
0x00000000004191a3 : jnp 0x419136 ; adc eax, 0x54b8ccb9 ; ret
0x0000000000441ee9 : jnp 0x441e78 ; test dword ptr [rax], esi ; ret
0x00000000004be363 : jnp 0x4be32d ; ret
0x00000000004209a1 : jns 0x4209a9 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000446623 : jns 0x4465e9 ; sti ; inc edi ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp rsi
0x000000000048f2a5 : jns 0x48f250 ; ret
0x000000000048f2a4 : jns 0x48f251 ; ret
0x000000000048f2f5 : jns 0x48f2a0 ; ret
0x000000000048f2f4 : jns 0x48f2a1 ; ret
0x00000000004987c8 : jns 0x498785 ; ret 0xcaed
0x000000000040c035 : jo 0x40c03d ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004427c8 : jo 0x44275a ; xor byte ptr [rax + 1], dh ; ret 0xea81
0x00000000004427cb : jo 0x4427d0 ; ret 0xea81
0x0000000000458554 : jo 0x4584e9 ; xchg eax, ebp ; push -1 ; ret 0x9589
0x000000000046b35e : jo 0x46b36a ; ret
0x000000000046cfce : jo 0x46cfda ; ret
0x000000000047051d : jo 0x470529 ; ret
0x0000000000477804 : jo 0x477865 ; ret
0x000000000047872f : jo 0x478790 ; ret
0x000000000047872e : jo 0x478791 ; ret
0x00000000004801eb : jo 0x48024c ; ret
0x0000000000482b25 : jo 0x482b30 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000048ed9f : jo 0x48ed6e ; test dword ptr [rdi + rdi*8 - 1], ebx ; call rsp
0x000000000048ed9e : jo 0x48ed6f ; test dword ptr [rdi + rdi*8 - 1], ebx ; call rsp
0x000000000048f23f : jo 0x48f2a0 ; ret
0x000000000049105b : jo 0x491063 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000493bb4 : jo 0x493c15 ; ret
0x0000000000499121 : jo 0x49916b ; call 0x4a5354
0x00000000004b206c : jo 0x4b20cd ; ret
0x00000000004c735c : jo 0x4c736a ; sti ; jmp qword ptr [rax]
0x00000000004c7455 : jo 0x4c7454 ; call qword ptr [rax]
0x00000000004c7494 : jo 0x4c7517 ; sti ; call qword ptr [rax]
0x00000000004c7715 : jo 0x4c7717 ; jmp qword ptr [rax]
0x0000000000409db1 : jrcxz 0x409d6e ; ret 0x3ae
0x000000000040c333 : jrcxz 0x40c30f ; ret 0x8589
0x000000000040c6ab : jrcxz 0x40c687 ; ret 0x558a
0x000000000040c76d : jrcxz 0x40c749 ; ret 0xe0e9
0x000000000041eb98 : jrcxz 0x41eb85 ; ret
0x000000000041eb97 : jrcxz 0x41eb86 ; ret
0x000000000049b6b5 : jrcxz 0x49b65f ; rol dword ptr [rcx - 9], 1 ; jmp qword ptr [rcx]
0x00000000004144ad : js 0x41449a ; ret
0x00000000004486f5 : js 0x448689 ; test dword ptr [rbp + rdi*8 - 0x7bf00001], esp ; ret
0x0000000000463e27 : js 0x463de6 ; and ebx, ebp ; ret 0xb2b1
0x0000000000465ae7 : js 0x465ace ; ret 0x8974
0x00000000004661e6 : js 0x4661cd ; ret 0x8a74
0x000000000046620c : js 0x4661f3 ; ret 0xe974
0x00000000004c8c28 : js 0x4c8c1a ; cli ; call rdx
0x000000000049a176 : lahf ; jmp 0x49a1c5
0x000000000043d986 : lahf ; ret 0xd284
0x00000000004c728d : lahf ; stc ; call rax
0x000000000043f8fa : lcall ptr [rbp + 3] ; std ; ret
0x000000000043afe7 : lcall ptr [rbp - 0x1601ce42] ; stosd dword ptr [rdi], eax ; ret
0x0000000000471f0e : lcall ptr [rbx - 0x162d2583] ; ret 0x3b
0x00000000004b7121 : lcall ptr [rsi - 7] ; ret 0xe980
0x0000000000458ef1 : lcall ptr [rsi] ; jmp qword ptr [rdx]
0x000000000047300e : lcall ptr [rsi] ; pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x00000000004b6164 : lea eax, dword ptr [rax - 0x17000007] ; ret 0xf4be
0x0000000000415e26 : lea eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000465fc3 : lea ecx, dword ptr [rax - 0x17000004] ; ret 0xfff9
0x0000000000441df2 : lea edi, dword ptr [rax] ; ret
0x00000000004637a7 : lea edi, dword ptr [rbp - 0x80] ; call 0x45f829
0x00000000004adcf4 : lea esi, dword ptr [rdx] ; ret
0x000000000044548f : lea esp, dword ptr [rax] ; ret 0xffff
0x000000000041272a : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040afe2 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004186a9 : lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000412729 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004186a8 : lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000044535e : leave ; cmpsb byte ptr [rsi], byte ptr [rdi] ; sbb al, byte ptr [rsi + 0x48858948] ; ret 0xffff
0x00000000004ac54f : leave ; ret 0x86f8
0x0000000000411c29 : les edx, ptr [rbp + 0x182cc6b9] ; ret
0x000000000041c581 : les r11d, ptr [r13 - 0x16c5b765] ; ret 1
0x000000000041c72c : les r11d, ptr [r8] ; ret 0x236e
0x000000000048f2a2 : les r8d, ptr [r14 + 0x79] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x000000000045c1ac : les r8d, ptr [r8 + 0x13] ; ret
0x000000000040b35e : ljmp ptr [rcx - 0x56] ; ret 0xe915
0x0000000000458f79 : ljmp ptr [rcx] ; ret 0xd701
0x0000000000457c1a : ljmp ptr [rcx] ; ror byte ptr [rdi], 1 ; xchg eax, edx ; ret
0x00000000004bbdb1 : ljmp ptr [rdi - 0x26] ; sbb al, -0x17 ; ret
0x000000000047086e : ljmp ptr [rdi] ; ret 0x23da
0x00000000004c70a0 : lock adc dword ptr [rax], eax ; add byte ptr [rax - 0x63], ah ; cmc ; call qword ptr [rax]
0x00000000004c7450 : lock and byte ptr [rax], al ; add byte ptr [rax], al ; jo 0x4c7459 ; call qword ptr [rax]
0x00000000004c7490 : lock and dword ptr [rax], eax ; add byte ptr [rax + 0x7e], dh ; sti ; call qword ptr [rax]
0x00000000004c7258 : lock sbb byte ptr [rax], al ; add byte ptr [rax], al ; push rbx ; stc ; call qword ptr [rax]
0x00000000004459a8 : lock sbb dword ptr [rax], eax ; add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; call rdx
0x0000000000449d2d : lodsd eax, dword ptr [rsi] ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x00000000004079bf : loop 0x4079e9 ; ret 0x896e
0x0000000000408bef : loop 0x408c19 ; ret 0xe96e
0x0000000000408c43 : loop 0x408c6d ; ret 0xe96e
0x000000000040c239 : loop 0x40c215 ; ret 0x8589
0x0000000000449370 : loop 0x449365 ; xchg eax, esp ; xor byte ptr [rcx - 0x70f05fbb], cl ; ret 2
0x000000000047f87e : loop 0x47f8ab ; add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x000000000047f87d : loop 0x47f8ac ; add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004abbd2 : loop 0x4abb85 ; sar dword ptr [rcx], cl ; xor byte ptr [rbp - 0x77], cl ; ret
0x000000000040334f : loope 0x403379 ; ret 0x896e
0x00000000004059cf : loope 0x4059a1 ; call rdx
0x0000000000408160 : loope 0x408132 ; call rdx
0x000000000040c87d : loope 0x40c889 ; movzx eax, cl ; mov rsp, rbp ; pop rbp ; ret
0x00000000004198a0 : loope 0x4198ac ; movzx eax, cl ; mov rsp, rbp ; pop rbp ; ret
0x000000000041cadc : loope 0x41cae8 ; movzx eax, cl ; mov rsp, rbp ; pop rbp ; ret
0x00000000004466bb : loope 0x446680 ; sti ; inc edi ; test dword ptr [rcx + rdi*8 - 1], esi ; call rsi
0x000000000044a0ae : loope 0x44a069 ; xchg eax, ebp ; jmp 0x44a203
0x0000000000473875 : loope 0x473843 ; jmp 0x475ae3
0x00000000004a1542 : loope 0x4a1516 ; jae 0x4a157d ; xor eax, dword ptr [rcx - 0x77] ; ret 0x8141
0x00000000004a6a6b : loope 0x4a6a5c ; out dx, eax ; pop qword ptr [rcx - 0x77] ; ret 0x8141
0x00000000004a8abc : loope 0x4a8ac8 ; movzx eax, cl ; mov rsp, rbp ; pop rbp ; ret
0x000000000040597b : loopne 0x40594d ; call rdx
0x00000000004178fb : loopne 0x41794d ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004178fa : loopne 0x41794e ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000041e318 : loopne 0x41e304 ; ret 0x60b
0x00000000004202e9 : loopne 0x42034f ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000044255a : loopne 0x442517 ; ret
0x000000000044b79a : loopne 0x44b7a1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000044edee : loopne 0x44ee3f ; mov ecx, dword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000044eded : loopne 0x44ee40 ; mov ecx, dword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000045408d : loopne 0x4540e0 ; add esp, 0x1d0 ; pop rbp ; ret
0x00000000004597d2 : loopne 0x459838 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000045ba75 : loopne 0x45ba9a ; add al, bpl ; ret 0xff10
0x00000000004665c8 : loopne 0x4665d2 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000467c53 : loopne 0x467ca6 ; lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004771fd : loopne 0x477263 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004785e4 : loopne 0x478637 ; add esp, 0xa0 ; pop rbp ; ret
0x000000000047e4f3 : loopne 0x47e4fc ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000047ee7e : loopne 0x47eece ; add esp, 0x60 ; pop rbp ; ret
0x000000000047ee7d : loopne 0x47eecf ; add esp, 0x60 ; pop rbp ; ret
0x0000000000482b21 : loopne 0x482b74 ; add esp, 0x470 ; pop rbp ; ret
0x0000000000482fec : loopne 0x482f80 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000482feb : loopne 0x482f81 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000048a8af : loopne 0x48a843 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000048a8ae : loopne 0x48a844 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000048afb0 : loopne 0x48afb7 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000048b942 : loopne 0x48b949 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000491c92 : loopne 0x491c9c ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004a1536 : loopne 0x4a1509 ; jae 0x4a1570 ; xor esp, dword ptr [rcx] ; ret 0x8941
0x00000000004a72c7 : loopne 0x4a72f9 ; pop rdi ; ret
0x00000000004a72c6 : loopne 0x4a72fa ; pop rdi ; ret
0x00000000004a77ab : loopne 0x4a77dd ; ret
0x00000000004a77aa : loopne 0x4a77de ; ret
0x00000000004c05fc : loopne 0x4c0590 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004c05fb : loopne 0x4c0591 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004c377c : loopne 0x4c37cb ; mov esp, ebp ; pop rbp ; ret
0x00000000004c377b : loopne 0x4c37cc ; mov esp, ebp ; pop rbp ; ret
0x00000000004c39cc : loopne 0x4c3a1b ; mov esp, ebp ; pop rbp ; ret
0x00000000004c39cb : loopne 0x4c3a1c ; mov esp, ebp ; pop rbp ; ret
0x00000000004c4575 : loopne 0x4c457c ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004c71a4 : loopne 0x4c721d ; clc ; jmp qword ptr [rax]
0x00000000004c7b70 : loopne 0x4c7b27 ; hlt ; call qword ptr [rax]
0x00000000004144a9 : mov ah, -0x13 ; adc eax, ebp ; js 0x41449e ; ret
0x000000000041bdeb : mov ah, -0x17 ; ret 1
0x00000000004abbd1 : mov ah, -0x1e ; stosb byte ptr [rdi], al ; sar dword ptr [rcx], cl ; xor byte ptr [rbp - 0x77], cl ; ret
0x000000000042ad22 : mov ah, -0x4c ; call rsi
0x000000000047143d : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000471517 : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x00000000004a03cc : mov ah, -0x76 ; ret 0x124
0x0000000000416b44 : mov ah, 0x2d ; ret
0x0000000000486fc0 : mov ah, 0x2d ; ret 0x37ac
0x000000000045bbae : mov ah, 0x2d ; ret 0xc26e
0x0000000000486f8e : mov ah, 0x2d ; xchg eax, ebp ; ret
0x0000000000486fd9 : mov ah, 0x2d ; xchg eax, esi ; ret
0x000000000044a30e : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000409ac8 : mov ah, 0x6c ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000408e33 : mov ah, 0x6c ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004112dd : mov ah, 0x6c ; add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041be35 : mov ah, 0x75 ; push rbp ; ret 0xe910
0x000000000046f4c5 : mov ah, 0x75 ; ret
0x0000000000491f39 : mov al, -0x26 ; ret
0x00000000004c71e4 : mov al, -0x3f ; clc ; jmp qword ptr [rax]
0x0000000000477fd3 : mov al, -0x47 ; ret
0x000000000044a0af : mov al, -0x6b ; jmp 0x44a202
0x00000000004c8e50 : mov al, -6 ; cli ; call qword ptr [rcx]
0x00000000004c8d70 : mov al, -7 ; cli ; call qword ptr [rdx]
0x000000000043c357 : mov al, 0 ; add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp rbx
0x00000000004b10cf : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000041b248 : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000048e126 : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041a322 : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000491cc9 : mov al, 0 ; call 0x4adf24
0x00000000004c72c8 : mov al, 0x1a ; add byte ptr [rax], al ; rol byte ptr [rbx], 1 ; cli ; call rax
0x00000000004c7440 : mov al, 0x20 ; add byte ptr [rax], al ; adc byte ptr [rsi - 5], ch ; call rax
0x00000000004c7480 : mov al, 0x21 ; add byte ptr [rax], al ; add byte ptr [rsi - 5], bh ; call rax
0x000000000041b820 : mov al, 0x2d ; je 0x41b87d ; ret 0x8910
0x000000000041b86b : mov al, 0x2d ; jne 0x41b8c8 ; ret 0x8910
0x0000000000499c7a : mov al, 0x2d ; ret
0x0000000000499f36 : mov al, 0x2d ; ret 0x24cc
0x0000000000453490 : mov al, 0x48 ; add esp, 0xd0 ; pop rbp ; ret
0x00000000004a293d : mov al, 0xb ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000047beae : mov al, 5 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004ac02b : mov al, al ; movzx eax, al ; pop rbp ; ret
0x00000000004c1fed : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004c1cba : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000047f87c : mov al, byte ptr [rbp - 0x1e] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004a9648 : mov al, byte ptr [rbp - 0x3d] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004c1f1d : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004ac0ec : mov al, dl ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x00000000004ac02a : mov al, r8b ; movzx eax, al ; pop rbp ; ret
0x00000000004abdf4 : mov ax, r8w ; movzx eax, ax ; pop rbp ; ret
0x00000000004abdf9 : mov bh, -0x40 ; pop rbp ; ret
0x0000000000446a18 : mov bh, -5 ; inc edi ; test dword ptr [rcx + rdi*8 - 1], esi ; call rbx
0x00000000004667ab : mov bh, -7 ; inc edi ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp rbx
0x00000000004b38d5 : mov bh, 0 ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000491788 : mov bh, 0x60 ; or eax, dword ptr [rcx - 0xf] ; jmp qword ptr [rcx]
0x000000000048ecf5 : mov bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call rdx
0x00000000004c74c5 : mov bh, bl ; call rax
0x00000000004c79d1 : mov bl, -0xd ; jmp rsi
0x00000000004a8658 : mov bl, 0 ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000499095 : mov bl, 0x1e ; cmp al, byte ptr [rcx - 9] ; jmp qword ptr [rcx]
0x00000000004117a3 : mov bl, 0x54 ; jbe 0x411766 ; push -3 ; ret
0x00000000004098dc : mov bl, 0x6c ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000468e65 : mov bl, 0x75 ; ret
0x000000000043f5f6 : mov byte ptr [rax - 0x1b7a760b], ah ; ret
0x000000000045730b : mov byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000044a171 : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000402613 : mov byte ptr [rip + 0x2c8e3e], 1 ; ret
0x0000000000442b88 : mov ch, -0x10 ; ret 0xffff
0x0000000000442e48 : mov ch, -0x14 ; ret 0xffff
0x0000000000443e81 : mov ch, -0x44 ; ret 0xffff
0x0000000000430512 : mov ch, -0x4c ; call rsi
0x000000000044047d : mov ch, -0x5c ; ret
0x00000000004407ae : mov ch, -0x60 ; ret
0x000000000044086b : mov ch, -0x64 ; ret
0x00000000004409ff : mov ch, -0x68 ; ret
0x00000000004427b6 : mov ch, -4 ; ret 0xffff
0x00000000004428b4 : mov ch, -8 ; ret 0xffff
0x00000000004425c4 : mov ch, 0 ; ret
0x00000000004423aa : mov ch, 0x10 ; ret
0x000000000044216e : mov ch, 0x24 ; ret
0x000000000044202e : mov ch, 0x28 ; ret
0x000000000044176b : mov ch, 0x64 ; ret
0x000000000044137f : mov ch, 0x74 ; ret
0x00000000004424ce : mov ch, 0xc ; ret
0x0000000000470cbf : mov ch, byte ptr [rdx - 0x47] ; pop rbp ; pop rcx ; ret 0x1b2
0x0000000000491dfd : mov cl, 0x37 ; ret 0x4589
0x00000000004920cb : mov cl, 0x37 ; ret 0x94b9
0x000000000049213b : mov cl, 0x37 ; ret 0xd3e9
0x0000000000441ee7 : mov cl, 0x78 ; jnp 0x441e7a ; test dword ptr [rax], esi ; ret
0x000000000049de1f : mov cl, 0x7d ; ret
0x0000000000454984 : mov dh, -0x39 ; pop rbp ; ret
0x00000000004adf11 : mov dh, -0x3a ; pop rbp ; ret
0x0000000000421329 : mov dh, -0x3f ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004a48e8 : mov dh, -0x3f ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040c880 : mov dh, -0x3f ; mov rsp, rbp ; pop rbp ; ret
0x00000000004125d9 : mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041b572 : mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x000000000048f23a : mov dh, -0x40 ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004c2c84 : mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x0000000000411f7a : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000044d78a : mov dh, -0x40 ; pop rbp ; ret
0x00000000004ac0ef : mov dh, -0x40 ; pop rbx ; pop rbp ; ret
0x000000000049b1b2 : mov dh, -0x47 ; ret 0x9214
0x00000000004c6eb5 : mov dh, -0xd ; call qword ptr [rax]
0x00000000004c373a : mov dl, -0x34 ; cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x00000000004c7b71 : mov dl, -0xc ; call qword ptr [rax]
0x00000000004191a4 : mov dl, byte ptr [rip + 0x54b8ccb9] ; ret
0x00000000004c29b1 : mov dr1, word ptr [rcx + rcx*4 - 0x7bf05bbb] ; ret 2
0x00000000004ae761 : mov dword ptr [rax + 0x10], ecx ; mov rsp, rbp ; pop rbp ; ret
0x00000000004673d9 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000466faf : mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x000000000044c645 : mov dword ptr [rbp - 0x130], ecx ; call rdx
0x000000000044ec89 : mov dword ptr [rbp - 0x140], ecx ; call rdx
0x00000000004545af : mov dword ptr [rbp - 0x14], eax ; jmp 0x45477f
0x000000000048b3ba : mov dword ptr [rbp - 0x14], eax ; jmp 0x48b43b
0x0000000000452a5d : mov dword ptr [rbp - 0x18c], ecx ; call rdx
0x0000000000452c90 : mov dword ptr [rbp - 0x194], ecx ; call rdx
0x000000000045b30f : mov dword ptr [rbp - 0x1a8], eax ; call 0x487538
0x0000000000460ce9 : mov dword ptr [rbp - 0x1c], eax ; jmp 0x460e37
0x0000000000414fba : mov dword ptr [rbp - 0x2c], eax ; jmp 0x4152af
0x00000000004201b2 : mov dword ptr [rbp - 0x2e8], eax ; call r8
0x0000000000449fa1 : mov dword ptr [rbp - 0x34], eax ; jmp 0x44a203
0x000000000042125e : mov dword ptr [rbp - 0x34], eax ; mov dword ptr [rbp - 0x38], ecx ; call 0x45d528
0x0000000000465fc2 : mov dword ptr [rbp - 0x378], ecx ; call 0x402218
0x0000000000421261 : mov dword ptr [rbp - 0x38], ecx ; call 0x45d525
0x000000000043b152 : mov dword ptr [rbp - 0x3b04], esi ; jmp 0x4473a4
0x000000000044a836 : mov dword ptr [rbp - 0x3c], eax ; jmp 0x44a9c8
0x000000000044a8c1 : mov dword ptr [rbp - 0x3c], ecx ; jmp 0x44a9c8
0x000000000041a3a6 : mov dword ptr [rbp - 0x40], eax ; call rcx
0x000000000044a30c : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041b19d : mov dword ptr [rbp - 0x58], ecx ; jmp 0x41b40c
0x000000000043b099 : mov dword ptr [rbp - 0x68c], eax ; jmp 0x4473a4
0x000000000047cdc8 : mov dword ptr [rbp - 0x6c], eax ; jmp 0x47d83a
0x0000000000402d33 : mov dword ptr [rbp - 0x74], eax ; mov rsp, rbp ; pop rbp ; ret
0x0000000000402927 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000415c4d : mov dword ptr [rbp - 0xcc], ecx ; call 0x401f38
0x0000000000415d01 : mov dword ptr [rbp - 0xd8], ecx ; call 0x401f38
0x000000000041a8e0 : mov dword ptr [rbp - 0xf0], ecx ; call r9
0x000000000044a8a1 : mov dword ptr [rbp - 0xf4], ecx ; call rdx
0x0000000000402ab5 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004ab6ff : mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x00000000004676b6 : mov dword ptr [rcx + 0x30], eax ; mov rsp, rbp ; pop rbp ; ret
0x0000000000460abc : mov dword ptr [rdi + 0x10], eax ; pop rbp ; ret
0x00000000004ad528 : mov dword ptr [rdi + 0x18], 0x95f616 ; pop rbp ; ret
0x0000000000454150 : mov dword ptr [rdi + 0x48], esi ; pop rbp ; ret
0x00000000004422d3 : mov dword ptr [rdx + 0x73], 0x208589fd ; ret
0x000000000046725d : mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000040c237 : mov eax, 0x26d7e22d ; ret 0x8589
0x000000000040c331 : mov eax, 0x26d7e32d ; ret 0x8589
0x00000000004915e9 : mov eax, 0x5b000000 ; pop rbp ; ret
0x0000000000446a8c : mov eax, 0x81f2296f ; ret 0xf713
0x0000000000452dfb : mov eax, 0x8498b48 ; mov rsi, qword ptr [rcx] ; call rax
0x000000000048df70 : mov eax, 0xb800000e ; ret 0x4dbf
0x00000000004894e7 : mov eax, 0xb8000010 ; ret
0x00000000004ae75f : mov eax, dword ptr [rax] ; mov dword ptr [rax + 0x10], ecx ; mov rsp, rbp ; pop rbp ; ret
0x000000000041495a : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000047ecfb : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000414d25 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000414ba5 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000478881 : mov eax, dword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004b7b25 : mov eax, dword ptr [rbp - 0x10] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000483133 : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004aeea6 : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000486a81 : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000047eece : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004181fe : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000048b235 : mov eax, dword ptr [rbp - 0x18] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000044c9e2 : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004b1db0 : mov eax, dword ptr [rbp - 0x1c] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000047ee7c : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000482fea : mov eax, dword ptr [rbp - 0x20] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004c377a : mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004a6ecf : mov eax, dword ptr [rbp - 0x28] ; call rax
0x0000000000416a44 : mov eax, dword ptr [rbp - 0x30] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004153d4 : mov eax, dword ptr [rbp - 0x30] ; pop rbp ; ret
0x000000000046725f : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000044a9ff : mov eax, dword ptr [rbp - 0x40] ; call rax
0x0000000000478d2a : mov eax, dword ptr [rbp - 0x44] ; pop rbp ; ret
0x0000000000452227 : mov eax, dword ptr [rbp - 0x58] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000049911d : mov eax, dword ptr [rbp - 0x68] ; mov esi, dword ptr [rax + 0x44] ; call 0x4a5358
0x0000000000466d9f : mov eax, dword ptr [rbp - 0xc] ; add rsp, 8 ; pop rbp ; ret
0x00000000004a8e76 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x18 ; pop rbp ; ret
0x000000000045a864 : mov eax, dword ptr [rbp - 4] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004801e5 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000486cdc : mov eax, dword ptr [rbp - 8] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040b86a : mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000044926d : mov eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000044928d : mov eax, dword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000047874d : mov eax, dword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000047872d : mov eax, dword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000046725e : mov eax, dword ptr ds:[rbp - 0x38] ; pop rbp ; ret
0x00000000004abdf6 : mov eax, eax ; movzx eax, ax ; pop rbp ; ret
0x00000000004ab843 : mov eax, eax ; pop rbp ; ret
0x00000000004abc1a : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000044d761 : mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000045bf22 : mov eax, edx ; mov rsp, rbp ; pop rbp ; ret
0x0000000000416438 : mov eax, edx ; pop rbp ; ret
0x00000000004abb3d : mov eax, esi ; and eax, edi ; xor esi, edi ; or eax, esi ; pop rbp ; ret
0x0000000000447998 : mov eax, esi ; pop rbp ; ret
0x00000000004abdf5 : mov eax, r8d ; movzx eax, ax ; pop rbp ; ret
0x000000000040be6f : mov ebp, 0x21b9a2b5 ; xchg eax, ebp ; ret 0x8b48
0x000000000040be53 : mov ebp, 0x21b9f909 ; xchg eax, ebp ; ret 0x1b2
0x0000000000442f07 : mov ebp, 0x8106f120 ; ret 0x76c
0x00000000004440db : mov ebp, 0xb8000032 ; mov ch, -0x4c ; call rsi
0x000000000043fc43 : mov ebp, 0xbc858984 ; ret
0x0000000000473c78 : mov ebp, 0xe19c53ba ; ret
0x0000000000465c63 : mov ebp, 0xffffff60 ; call 0x401ee7
0x000000000040263b : mov ebp, esp ; call rax
0x00000000004025a1 : mov ebp, esp ; ja 0x4025ac ; pop rbp ; ret
0x000000000044526d : mov ebx, 0x60858948 ; ret 0xffff
0x0000000000465e17 : mov ebx, 0xc7000009 ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp qword ptr [rbx]
0x00000000004bd5cb : mov ecx, 0xba41a9ee ; ret
0x0000000000466708 : mov ecx, 0xbf48fff9 ; ret 0x7f0f
0x000000000048e56f : mov ecx, 0xc7000008 ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rdx]
0x0000000000441c77 : mov ecx, 0xdca78659 ; je 0x441c52 ; ret
0x0000000000441c8a : mov ecx, 0xdca78659 ; je 0x441c65 ; ret
0x00000000004454b8 : mov ecx, dword ptr [rax - 0x77] ; test dword ptr [rax], ebx ; ret 0xffff
0x0000000000466fac : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x000000000044eb9b : mov ecx, dword ptr [rbp - 0x18] ; mov rcx, qword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000044edec : mov ecx, dword ptr [rbp - 0x20] ; mov rcx, qword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000044f706 : mov ecx, dword ptr [rbp - 0x28] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000044a99e : mov ecx, dword ptr [rbp - 0x38] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000420524 : mov ecx, dword ptr [rbp - 0x80] ; mov rcx, qword ptr [rcx] ; call rax
0x0000000000452dfd : mov ecx, dword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000420528 : mov ecx, dword ptr [rcx] ; call rax
0x000000000044eb9f : mov ecx, dword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000048203c : mov ecx, gs ; ret
0x00000000004b5f8f : mov edi, 0x51b94936 ; jmp rsp
0x0000000000402635 : mov edi, 0x6cae20 ; mov rbp, rsp ; call rax
0x00000000004025b2 : mov edi, 0x6cb3e8 ; jmp rax
0x00000000004025f2 : mov edi, 0x6cb3e8 ; jmp rdx
0x000000000040a8ac : mov edi, 0x8213d1b9 ; ret 0x1b2
0x00000000004545b3 : mov edi, 0xb8000001 ; ret
0x00000000004855e6 : mov edi, 0xb8000012 ; insd dword ptr [rdi], dx ; ret 0x9e6d
0x0000000000470517 : mov edi, 0xb8000055 ; wait ; jo 0x47052f ; ret
0x00000000004423e9 : mov edi, 0xc7fffff8 ; test dword ptr [rcx + rdi*8 - 1], esi ; call rsi
0x000000000040c800 : mov edi, dword ptr [rax] ; call 0x492158
0x0000000000465c62 : mov edi, dword ptr [rbp - 0xa0] ; call 0x401ee8
0x000000000045414c : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000449269 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000449289 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000478749 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000478729 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000044eba2 : mov edi, dword ptr [rcx] ; call rax
0x000000000044c7c1 : mov edi, dword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x28] ; call rax
0x00000000004c4b67 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x00000000004c4b66 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x00000000004adcf1 : mov edx, 0x328dfe07 ; ret
0x00000000004b187e : mov edx, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000470cdb : mov edx, 0x595db993 ; ret 0x8b48
0x000000000041512a : mov edx, 0x62dcc748 ; ret 0x6c82
0x0000000000420c2e : mov edx, dword ptr [rbp - 0x14] ; call rcx
0x000000000041a3a3 : mov edx, dword ptr [rbp - 0x1c] ; mov dword ptr [rbp - 0x40], eax ; call rcx
0x000000000041a98e : mov edx, dword ptr [rbp - 0x1c] ; mov rsi, rcx ; call rax
0x0000000000414502 : mov edx, dword ptr [rbp - 0x40] ; call rdx
0x0000000000478885 : mov edx, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000420521 : mov edx, dword ptr [rcx] ; mov rcx, qword ptr [rbp - 0x80] ; mov rcx, qword ptr [rcx] ; call rax
0x000000000043b184 : mov esi, 0x10e9fe31 ; ret 0
0x0000000000471b52 : mov esi, 0x39443e04 ; ret 0xf41
0x00000000004b1867 : mov esi, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000043afe9 : mov esi, 0xabe9fe31 ; ret
0x0000000000482b3a : mov esi, 0xe9411643 ; ret 0
0x000000000043b0ab : mov esi, 0xe9e9fe31 ; ret 0
0x0000000000499120 : mov esi, dword ptr [rax + 0x44] ; call 0x4a5355
0x00000000004427c9 : mov esi, dword ptr [rax] ; jo 0x4427d2 ; ret 0xea81
0x0000000000420c2b : mov esi, dword ptr [rbp - 0x10] ; mov edx, dword ptr [rbp - 0x14] ; call rcx
0x000000000041a3a0 : mov esi, dword ptr [rbp - 0x18] ; mov edx, dword ptr [rbp - 0x1c] ; mov dword ptr [rbp - 0x40], eax ; call rcx
0x000000000044c7c4 : mov esi, dword ptr [rbp - 0x28] ; call rax
0x0000000000491cc6 : mov esi, dword ptr [rbp - 0x3c] ; mov al, 0 ; call 0x4adf27
0x000000000044a9a2 : mov esi, dword ptr [rcx] ; call rax
0x00000000004025f0 : mov esi, eax ; mov edi, 0x6cb3e8 ; jmp rdx
0x00000000004a6ecc : mov esi, eax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x000000000044a9fc : mov esi, eax ; mov rax, qword ptr [rbp - 0x40] ; call rax
0x00000000004c80d9 : mov esi, ebp ; call rcx
0x00000000004a2d01 : mov esi, ecx ; call 0x48f004
0x000000000041a992 : mov esi, ecx ; call rax
0x00000000004b8c77 : mov esi, es ; ret
0x00000000004191be : mov esp, 0x54b8ccb9 ; ret
0x000000000044325a : mov esp, 0xfdbcb9a6 ; ret
0x0000000000402d37 : mov esp, ebp ; pop rbp ; ret
0x0000000000402616 : mov gs, word ptr [rax + rax] ; add ebx, esi ; ret
0x0000000000402615 : mov gs, word ptr ds:[rax + rax] ; add ebx, esi ; ret
0x00000000004ab6fe : mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x00000000004676b5 : mov qword ptr [rcx + 0x30], rax ; mov rsp, rbp ; pop rbp ; ret
0x0000000000460abb : mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x000000000045414f : mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x00000000004144a8 : mov r12b, -0x13 ; adc eax, ebp ; js 0x41449f ; ret
0x000000000041bdea : mov r12b, -0x17 ; ret 1
0x0000000000416b43 : mov r12b, 0x2d ; ret
0x0000000000486fbf : mov r12b, 0x2d ; ret 0x37ac
0x000000000045bbad : mov r12b, 0x2d ; ret 0xc26e
0x0000000000486f8d : mov r12b, 0x2d ; xchg eax, ebp ; ret
0x0000000000486fd8 : mov r12b, 0x2d ; xchg eax, esi ; ret
0x000000000044a30d : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000041be34 : mov r12b, 0x75 ; push rbp ; ret 0xe910
0x000000000048ecf4 : mov r15b, r8b ; test dword ptr [rdi + rdi*8 - 1], ebx ; call rdx
0x000000000041b81f : mov r8b, 0x2d ; je 0x41b87e ; ret 0x8910
0x000000000041b86a : mov r8b, 0x2d ; jne 0x41b8c9 ; ret 0x8910
0x0000000000499c79 : mov r8b, 0x2d ; ret
0x0000000000499f35 : mov r8b, 0x2d ; ret 0x24cc
0x000000000040c236 : mov r8d, 0x26d7e22d ; ret 0x8589
0x000000000040c330 : mov r8d, 0x26d7e32d ; ret 0x8589
0x000000000048203b : mov r9d, gs ; ret
0x0000000000414959 : mov rax, qword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000047ecfa : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000414d24 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000414ba4 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000478880 : mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004b7b24 : mov rax, qword ptr [rbp - 0x10] ; mov rsp, rbp ; pop rbp ; ret
0x000000000047eecd : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004181fd : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000044c9e1 : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000047ee7b : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004a6ece : mov rax, qword ptr [rbp - 0x28] ; call rax
0x00000000004153d3 : mov rax, qword ptr [rbp - 0x30] ; pop rbp ; ret
0x000000000044a9fe : mov rax, qword ptr [rbp - 0x40] ; call rax
0x000000000049911c : mov rax, qword ptr [rbp - 0x68] ; mov esi, dword ptr [rax + 0x44] ; call 0x4a5359
0x00000000004801e4 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040b869 : mov rax, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000044926c : mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000044928c : mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000047874c : mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x000000000047872c : mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x00000000004abc19 : mov rax, r11 ; pop rbx ; pop rbp ; ret
0x00000000004ab842 : mov rax, r8 ; pop rbp ; ret
0x000000000044d760 : mov rax, rdx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000045bf21 : mov rax, rdx ; mov rsp, rbp ; pop rbp ; ret
0x0000000000416437 : mov rax, rdx ; pop rbp ; ret
0x000000000040263a : mov rbp, rsp ; call rax
0x00000000004025a0 : mov rbp, rsp ; ja 0x4025ad ; pop rbp ; ret
0x000000000044f705 : mov rcx, qword ptr [rbp - 0x28] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000044a99d : mov rcx, qword ptr [rbp - 0x38] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000420523 : mov rcx, qword ptr [rbp - 0x80] ; mov rcx, qword ptr [rcx] ; call rax
0x0000000000452dfc : mov rcx, qword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000420527 : mov rcx, qword ptr [rcx] ; call rax
0x000000000044eb9e : mov rcx, qword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040c7ff : mov rdi, qword ptr [rax] ; call 0x492159
0x0000000000465c61 : mov rdi, qword ptr [rbp - 0xa0] ; call 0x401ee9
0x000000000045414b : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000449268 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000449288 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000478748 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0x0000000000478728 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000044eba1 : mov rdi, qword ptr [rcx] ; call rax
0x000000000044c7c0 : mov rdi, qword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x28] ; call rax
0x0000000000414501 : mov rdx, qword ptr [rbp - 0x40] ; call rdx
0x0000000000478884 : mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000420c2a : mov rsi, qword ptr [rbp - 0x10] ; mov edx, dword ptr [rbp - 0x14] ; call rcx
0x000000000044c7c3 : mov rsi, qword ptr [rbp - 0x28] ; call rax
0x000000000044a9a1 : mov rsi, qword ptr [rcx] ; call rax
0x00000000004025ef : mov rsi, rax ; mov edi, 0x6cb3e8 ; jmp rdx
0x00000000004a6ecb : mov rsi, rax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x000000000044a9fb : mov rsi, rax ; mov rax, qword ptr [rbp - 0x40] ; call rax
0x00000000004a2d00 : mov rsi, rcx ; call 0x48f005
0x000000000041a991 : mov rsi, rcx ; call rax
0x0000000000402d36 : mov rsp, rbp ; pop rbp ; ret
0x000000000040bf8b : mov ss, word ptr [r9 + rdi*4] ; ror dl, cl ; scasd eax, dword ptr [rdi] ; ret 0x1b2
0x000000000040bf8c : mov ss, word ptr [rcx + rdi*4] ; ror dl, cl ; scasd eax, dword ptr [rdi] ; ret 0x1b2
0x0000000000482b38 : mov word ptr [r14 - 0x16bee9bd], dr1 ; ret 0
0x0000000000402d34 : mov word ptr [r8 - 0x77], cs ; in al, dx ; pop rbp ; ret
0x000000000047ea91 : mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000402d35 : mov word ptr [rax - 0x77], cs ; in al, dx ; pop rbp ; ret
0x0000000000482b39 : mov word ptr [rsi - 0x16bee9bd], dr1 ; ret 0
0x00000000004c75d4 : movabs al, byte ptr [0x1000002718fffd4d] ; ret 0xfffd
0x000000000045c1a7 : movabs al, byte ptr [0x1340c445c7000001] ; ret
0x000000000043cd83 : movabs al, byte ptr [0x8100000030c2814d] ; ret 0x7e58
0x000000000045b268 : movabs al, byte ptr [0x894100000000ba41] ; ret
0x00000000004440d9 : movabs al, byte ptr [0xb4b5b8000032bde9] ; call rsi
0x00000000004c1271 : movabs al, byte ptr [0xe9ffffff38858948] ; ret 6
0x00000000004bf78b : movabs byte ptr [0x7eb8000004d9e994], al ; ret 0x1d90
0x000000000046c7b8 : movabs byte ptr [0x840ffffff3c48589], al ; ret 0x4b
0x0000000000442bf5 : movabs dword ptr [0xfff97485c7000047], eax ; call rdi
0x000000000046468b : movabs eax, dword ptr [0xfffec085c7fff9d9] ; call rsp
0x00000000004a07bd : movsb byte ptr [edi], byte ptr [esi] ; fild word ptr [rcx - 9] ; jmp qword ptr [rcx]
0x00000000004c7b6c : movsb byte ptr [rdi], byte ptr [rsi] ; add al, byte ptr [rax] ; add al, ah ; mov dl, -0xc ; call qword ptr [rax]
0x0000000000451e8a : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; stc ; in al, dx ; ret 0xff3
0x00000000004c70d5 : movsb byte ptr [rdi], byte ptr [rsi] ; cmc ; call rax
0x00000000004a07be : movsb byte ptr [rdi], byte ptr [rsi] ; fild word ptr [rcx - 9] ; jmp qword ptr [rcx]
0x000000000042ba27 : movsb byte ptr [rdi], byte ptr [rsi] ; insb byte ptr [rdi], dx ; ret
0x000000000044047e : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000046fa05 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x6a8a
0x0000000000444a43 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xffff
0x0000000000479053 : movsb byte ptr [rdi], byte ptr [rsi] ; scasd eax, dword ptr [rdi] ; iretd ; test al, -0x47 ; call rsi
0x00000000004a8053 : movsd dword ptr [rdi], dword ptr [rsi] ; add al, 0 ; add cl, ch ; ret 1
0x000000000043e2f7 : movsd dword ptr [rdi], dword ptr [rsi] ; cld ; inc edi ; test dword ptr [rcx + rdi*8 - 1], esi ; call rsi
0x00000000004b5fab : movsd dword ptr [rdi], dword ptr [rsi] ; jbe 0x4b5f6e ; push rcx ; jmp rsp
0x0000000000479ca2 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000462366 : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x89f4
0x0000000000463a85 : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xb9f4
0x0000000000479291 : movsd xmm0, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000045b6bc : movsxd rax, ecx ; pop rbp ; ret
0x00000000004910f3 : movsxd rsp, esi ; fld qword ptr [rcx - 0xf] ; jmp qword ptr [rcx]
0x0000000000479292 : movups xmm0, xmmword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004125d8 : movzx eax, al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041b571 : movzx eax, al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000048f239 : movzx eax, al ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004c2c83 : movzx eax, al ; add rsp, 8 ; pop rbp ; ret
0x0000000000411f79 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000044d789 : movzx eax, al ; pop rbp ; ret
0x00000000004ac0ee : movzx eax, al ; pop rbx ; pop rbp ; ret
0x00000000004abdf8 : movzx eax, ax ; pop rbp ; ret
0x0000000000454983 : movzx eax, bh ; pop rbp ; ret
0x0000000000421328 : movzx eax, cl ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004a48e7 : movzx eax, cl ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040c87f : movzx eax, cl ; mov rsp, rbp ; pop rbp ; ret
0x00000000004adf10 : movzx eax, dh ; pop rbp ; ret
0x0000000000454982 : movzx eax, dil ; pop rbp ; ret
0x00000000004adf0f : movzx eax, sil ; pop rbp ; ret
0x00000000004b1678 : neg byte ptr [rsi + 0x2948e012] ; ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x000000000043d5d1 : neg dword ptr [rdi] ; xor ch, cl ; ret
0x00000000004195e3 : nop ; add al, -0x47 ; ret
0x00000000004c9840 : nop ; add esi, edi ; call qword ptr [rsi]
0x000000000041e149 : nop ; jmp 0x41e3b0
0x0000000000440e75 : nop ; ret
0x00000000004770b2 : nop ; ret 0x148
0x00000000004770c6 : nop ; ret 0x2948
0x0000000000444e39 : nop ; ret 0xffff
0x00000000004c4b88 : nop dword ptr [rax + rax] ; ret
0x000000000044671b : or al, 0 ; add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp qword ptr [rsi]
0x000000000047b4f1 : or al, 0 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; call rsi
0x0000000000492a31 : or al, 0 ; add cl, ch ; ret
0x00000000004609f6 : or al, 0x25 ; ja 0x460a67 ; add al, r13b ; call qword ptr [rsi]
0x000000000047143a : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000471514 : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000043fc41 : or al, 0x6f ; mov ebp, 0xbc858984 ; ret
0x00000000004b2167 : or al, 0xffffffffffffff95 ; outsb dx, byte ptr [rsi] ; add byte ptr [rbp - 0x77], r8b ; ret 0x8141
0x00000000004c9cb1 : or al, 0xffffffffffffffff ; call rbx
0x00000000004c6eb1 : or al, byte ptr [rax] ; add al, al ; mov dh, -0xd ; call qword ptr [rax]
0x0000000000465d79 : or al, byte ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp rdi
0x000000000047b735 : or al, byte ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; call rsi
0x00000000004a7c53 : or al, byte ptr [rax] ; add cl, ch ; ret
0x00000000004b79cd : or al, byte ptr [rbp + 0x39] ; enter 0xf41, -0x6b ; ret 0x8445
0x0000000000454591 : or bh, al ; in al, dx ; ret 0xe8ff
0x0000000000445c6a : or bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp rsi
0x000000000043ca24 : or bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp rsp
0x00000000004c1935 : or bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x00000000004c734d : or bl, bh ; jmp rax
0x00000000004512dd : or byte ptr [r15], 0x8f ; ret 6
0x00000000004b6d97 : or byte ptr [r8 - 0x75], 0x51 ; adc byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000420525 : or byte ptr [r8 - 0x75], 9 ; call rax
0x00000000004c3e0c : or byte ptr [rax + 0x69], cl ; ret 0x101
0x00000000004b6d98 : or byte ptr [rax - 0x75], 0x51 ; adc byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000420526 : or byte ptr [rax - 0x75], 9 ; call rax
0x0000000000466fb0 : or byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000048e570 : or byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rdx]
0x00000000004c80d5 : or byte ptr [rax], al ; add byte ptr [rax - 0x75], ch ; cmc ; call rcx
0x0000000000400d50 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000047c3a8 : or byte ptr [rax], al ; add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x00000000004916e0 : or byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret
0x0000000000419714 : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x00000000004512de : or byte ptr [rdi], 0x8f ; ret 6
0x00000000004c9ae8 : or byte ptr [rdx - 2], cl ; call rax
0x000000000046155c : or byte ptr [rsi + 0x48e28948], 0x83 ; ret 0x48f0
0x000000000048dfa8 : or byte ptr [rsi], 0 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; jmp qword ptr [rdx]
0x000000000045a0f0 : or cl, ch ; ret
0x00000000004b1fbc : or cl, ch ; ret 0
0x0000000000411dfa : or dh, byte ptr [rdi + 0x294c80ad] ; ret 0x2948
0x00000000004c1934 : or dil, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x00000000004c72dd : or dl, bh ; call qword ptr [rax]
0x0000000000412287 : or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x00000000004676b4 : or dword ptr [rax - 0x77], ecx ; xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000465e18 : or dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp qword ptr [rbx]
0x00000000004427a8 : or dword ptr [rbx - 0x7a76ebaf], ecx ; cld ; ret 0xffff
0x00000000004407c0 : or dword ptr [rcx - 0x76], esi ; xchg eax, ebp ; ret
0x000000000047b734 : or eax, 0xc700000a ; test dword ptr [rdi + rdi*8 - 1], esp ; call rsi
0x0000000000463bd5 : or eax, 0xc8b80000 ; ret 0xdbca
0x000000000047b3b0 : or eax, 0xd8b80000 ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x000000000047b63d : or eax, dword ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; call rsi
0x00000000004c8425 : or eax, dword ptr [rax] ; add byte ptr [rax], bl ; clc ; jmp rbx
0x000000000044813c : or eax, dword ptr [rax] ; add cl, ch ; ret
0x000000000049178a : or eax, dword ptr [rcx - 0xf] ; jmp qword ptr [rcx]
0x00000000004ab840 : or eax, edi ; mov rax, r8 ; pop rbp ; ret
0x00000000004abb43 : or eax, esi ; pop rbp ; ret
0x00000000004abc17 : or ebx, eax ; mov rax, r11 ; pop rbx ; pop rbp ; ret
0x00000000004c735d : or ebx, edi ; jmp qword ptr [rax]
0x000000000046725b : or edi, eax ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x00000000004117a2 : or esi, dword ptr [rbx + 0x6ab97654] ; std ; ret
0x000000000045a161 : or esi, esi ; enter 0x4c42, 0x29 ; ret 0x2948
0x00000000004abc16 : or r11, r8 ; mov rax, r11 ; pop rbx ; pop rbp ; ret
0x00000000004ab83f : or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x00000000004adf0d : out 1, al ; movzx eax, sil ; pop rbp ; ret
0x0000000000454980 : out 1, eax ; movzx eax, dil ; pop rbp ; ret
0x0000000000472e1b : out dx, al ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x00000000004c1cbc : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000450319 : out dx, eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x000000000048a4b0 : out dx, eax ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; jmp rsp
0x0000000000450498 : out dx, eax ; add edi, eax ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x00000000004c1fef : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004c8c49 : out dx, eax ; cli ; call qword ptr [rbx]
0x0000000000477fd2 : out dx, eax ; mov al, -0x47 ; ret
0x00000000004a6a6e : out dx, eax ; pop qword ptr [rcx - 0x77] ; ret 0x8141
0x00000000004b1869 : outsb dx, byte ptr [rsi] ; add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x00000000004b216a : outsb dx, byte ptr [rsi] ; add byte ptr [rbp - 0x77], r8b ; ret 0x8141
0x000000000044a299 : outsb dx, byte ptr [rsi] ; ret 0x280f
0x0000000000473f05 : outsb dx, byte ptr [rsi] ; ret 0x4861
0x0000000000468b56 : outsb dx, byte ptr [rsi] ; ret 0x8961
0x000000000045bb6f : outsb dx, byte ptr [rsi] ; ret 0x89e7
0x0000000000473f50 : outsb dx, byte ptr [rsi] ; ret 0xe961
0x00000000004c7445 : outsb dx, byte ptr [rsi] ; sti ; call rax
0x000000000047dc31 : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x00000000004990ed : outsd dx, dword ptr [rsi] ; fild word ptr cs:[rcx - 9] ; jmp qword ptr [rcx]
0x00000000004191a2 : outsd dx, dword ptr [rsi] ; jnp 0x419137 ; adc eax, 0x54b8ccb9 ; ret
0x000000000043fc42 : outsd dx, dword ptr [rsi] ; mov ebp, 0xbc858984 ; ret
0x00000000004b186c : outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000047ea8c : pop ax ; jb 0x47eac1 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000044777f : pop qword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004a6a6f : pop qword ptr [rcx - 0x77] ; ret 0x8141
0x00000000004214fc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004c4b7c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004202eb : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004214fe : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004c4b7e : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040afe6 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004c4b80 : pop r14 ; pop r15 ; ret
0x000000000041272e : pop r14 ; pop rbp ; ret
0x000000000040afe8 : pop r15 ; pop rbp ; ret
0x00000000004c4b82 : pop r15 ; ret
0x000000000041bf4f : pop rax ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004a4de3 : pop rax ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x000000000047ea8d : pop rax ; jb 0x47eac0 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000044197b : pop rax ; ret
0x0000000000445278 : pop rax ; ret 0xffff
0x000000000042f82a : pop rbp ; add edi, ebp ; ret
0x0000000000402612 : pop rbp ; mov byte ptr [rip + 0x2c8e3e], 1 ; ret
0x00000000004025b1 : pop rbp ; mov edi, 0x6cb3e8 ; jmp rax
0x00000000004025ee : pop rbp ; mov rsi, rax ; mov edi, 0x6cb3e8 ; jmp rdx
0x00000000004c4b7b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004214ff : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004c4b7f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000470cc2 : pop rbp ; pop rcx ; ret 0x1b2
0x000000000046cf95 : pop rbp ; pop rcx ; ret 0x8589
0x0000000000470cde : pop rbp ; pop rcx ; ret 0x8b48
0x00000000004025a5 : pop rbp ; ret
0x000000000044a2bf : pop rbp ; ret 7
0x00000000004b4763 : pop rbp ; stc ; ret 0x8980
0x00000000004202ea : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040afe5 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041272d : pop rbx ; pop r14 ; pop rbp ; ret
0x000000000041623d : pop rbx ; pop rbp ; ret
0x000000000047c3b0 : pop rbx ; ret
0x0000000000470cc3 : pop rcx ; ret 0x1b2
0x000000000046b396 : pop rcx ; ret 0x8589
0x0000000000470cdf : pop rcx ; ret 0x8b48
0x0000000000473010 : pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x0000000000441c78 : pop rcx ; xchg byte ptr [rdi - 0x348bb324], ah ; ret
0x000000000047f2ef : pop rdi ; imul esp, dword ptr [rbx + 0x7f], 0x88419ab9 ; ret 0x8b48
0x000000000040afe9 : pop rdi ; pop rbp ; ret
0x0000000000492be6 : pop rdi ; ret
0x0000000000465d78 : pop rdx ; or al, byte ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp rdi
0x000000000042011a : pop rsi ; add al, 0 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; call rbx
0x000000000041c331 : pop rsi ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x172dc045], cl ; ret 0x236e
0x000000000040afe7 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004c4b81 : pop rsi ; pop r15 ; ret
0x000000000041272f : pop rsi ; pop rbp ; ret
0x000000000049260a : pop rsi ; ret
0x000000000044a29e : pop rsi ; ret 7
0x00000000004b47b7 : pop rsi ; stc ; ret 0x8980
0x00000000004b7122 : pop rsi ; stc ; ret 0xe980
0x00000000004c8c24 : pop rsp ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x13], bh ; cli ; call rdx
0x000000000041c2c8 : pop rsp ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x000000000042ba0a : pop rsp ; add edi, ebp ; ret
0x00000000004c8424 : pop rsp ; or eax, dword ptr [rax] ; add byte ptr [rax], bl ; clc ; jmp rbx
0x00000000004214fd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004c4b7d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004202ec : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000046b395 : pop rsp ; pop rcx ; ret 0x8589
0x000000000044a2b0 : pop rsp ; ret 0xf66
0x00000000004a645d : popfq ; add eax, dword ptr [rax] ; add byte ptr [rbx - 0x6d237bb], cl ; ret
0x00000000004c70a5 : popfq ; cmc ; call qword ptr [rax]
0x000000000043b183 : popfq ; mov esi, 0x10e9fe31 ; ret 0
0x000000000043afe8 : popfq ; mov esi, 0xabe9fe31 ; ret
0x000000000043b0aa : popfq ; mov esi, 0xe9e9fe31 ; ret 0
0x0000000000480128 : popfq ; push rcx ; ret 0x8929
0x0000000000480156 : popfq ; push rcx ; ret 0xb929
0x00000000004c2b05 : popfq ; ret 0xd284
0x000000000041c583 : popfq ; wait ; cmp bpl, cl ; ret 1
0x000000000043ca30 : push -0x38ffff57 ; test dword ptr [rcx + rdi*8 - 1], esi ; call qword ptr [rax]
0x0000000000450265 : push -0x38fffffb ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x0000000000470cc0 : push -0x47 ; pop rbp ; pop rcx ; ret 0x1b2
0x00000000004bf5ff : push -0x47fffffa ; ret
0x0000000000472eaa : push -0x75425eeb ; push rbp ; ret
0x000000000045916c : push -0x76000001 ; ret 0xca29
0x000000000046fa08 : push -0x77 ; test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x0000000000458557 : push -1 ; ret 0x9589
0x000000000040f9bb : push -3 ; ret
0x00000000004c7828 : push 0x60000030 ; ret
0x00000000004c743f : push qword ptr [rax + 0x10000020] ; outsb dx, byte ptr [rsi] ; sti ; call rax
0x00000000004c747f : push qword ptr [rax + 0x21] ; jle 0x4c748a ; call rax
0x00000000004c74bf : push qword ptr [rax + 0x22] ; mov bh, bl ; call rax
0x00000000004c7247 : push qword ptr [rax + 0x60000018] ; push rcx ; stc ; call rax
0x00000000004c72c7 : push qword ptr [rax - 0x2fffffe6] ; add edi, edx ; call rax
0x00000000004c70cf : push qword ptr [rax - 0x3fffffee] ; movsb byte ptr [rdi], byte ptr [rsi] ; cmc ; call rax
0x00000000004c7287 : push qword ptr [rax - 0x5fffffe7] ; lahf ; stc ; call rax
0x0000000000442b35 : push qword ptr [rax] ; ret
0x000000000043a8d0 : push qword ptr [rbx - 0x1638b049] ; ret 0xca
0x000000000044556a : push qword ptr [rbx - 0x34] ; in al, dx ; test eax, 0x858948 ; ret 0xffff
0x0000000000446de3 : push qword ptr [rcx] ; ret 0x5b8b
0x00000000004b78f0 : push qword ptr [rsi] ; stosd dword ptr [rdi], eax ; fsubr st(1) ; ret
0x0000000000438c48 : push r14 ; in eax, dx ; jmp 0x4473a5
0x00000000004c709f : push rax ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x63], ah ; cmc ; call qword ptr [rax]
0x00000000004c744f : push rax ; and byte ptr [rax], al ; add byte ptr [rax], al ; jo 0x4c745a ; call qword ptr [rax]
0x00000000004c748f : push rax ; and dword ptr [rax], eax ; add byte ptr [rax + 0x7e], dh ; sti ; call qword ptr [rax]
0x00000000004b4517 : push rax ; jmp rsp
0x000000000041555e : push rax ; pop rbp ; ret
0x0000000000423772 : push rax ; ret
0x0000000000491ccc : push rax ; ret 1
0x00000000004c72d7 : push rax ; sbb al, byte ptr [rax] ; add byte ptr [rax + 8], ah ; cli ; call qword ptr [rax]
0x00000000004c7257 : push rax ; sbb byte ptr [rax], al ; add byte ptr [rax], al ; push rbx ; stc ; call qword ptr [rax]
0x0000000000446143 : push rbp ; adc al, byte ptr [rax] ; add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp qword ptr [rdi]
0x000000000041d729 : push rbp ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x0000000000478886 : push rbp ; clc ; pop rbp ; ret
0x00000000004ab964 : push rbp ; enter 0xf41, 0x44 ; ret 0x4589
0x00000000004c4501 : push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x48f0
0x000000000044b6dc : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x10
0x000000000045b21e : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 1
0x0000000000449fc8 : push rbp ; fmul dword ptr [rax - 1] ; ret 0x8948
0x000000000041a98f : push rbp ; in al, 0x48 ; mov esi, ecx ; call rax
0x0000000000420c2f : push rbp ; in al, dx ; call rcx
0x0000000000402634 : push rbp ; mov edi, 0x6cae20 ; mov rbp, rsp ; call rax
0x0000000000457c4c : push rbp ; ret
0x00000000004a03af : push rbp ; ret 0x1b2
0x000000000041b823 : push rbp ; ret 0x8910
0x000000000045786e : push rbp ; ret 0xd284
0x000000000041be37 : push rbp ; ret 0xe910
0x000000000041da15 : push rbp ; ror byte ptr [rax - 0x75], 1 ; push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 0x10
0x000000000041da19 : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 0x10
0x00000000004a38af : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 0x60
0x00000000004ac384 : push rbp ; ror byte ptr [rdi], -0x4a ; cmp ch, al ; ret 0x171
0x0000000000452006 : push rbp ; shr al, 1 ; ret
0x000000000047143f : push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000471519 : push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000048faba : push rbx ; ret
0x000000000042edd2 : push rbx ; ret 0
0x000000000040b5a3 : push rbx ; ret 0x48c5
0x00000000004c725d : push rbx ; stc ; call qword ptr [rax]
0x00000000004427aa : push rcx ; adc al, -0x77 ; test edi, esp ; ret 0xffff
0x000000000045f09b : push rcx ; adc byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000447515 : push rcx ; add al, byte ptr [rax] ; add cl, ch ; ret 0
0x00000000004c7165 : push rcx ; clc ; jmp qword ptr [rax]
0x000000000047b870 : push rcx ; imul edi, dword ptr [rip], 0xf ; xchg eax, ebp ; ret 0xd284
0x00000000004411ea : push rcx ; imul edx, dword ptr [rdx], 0xbda6b9e9 ; ret 0x4869
0x00000000004b542f : push rcx ; jmp rsp
0x000000000047b4f0 : push rcx ; or al, 0 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; call rsi
0x00000000004407bf : push rcx ; or dword ptr [rcx - 0x76], esi ; xchg eax, ebp ; ret
0x000000000043666a : push rcx ; ret
0x0000000000480079 : push rcx ; ret 0x8929
0x0000000000480157 : push rcx ; ret 0xb929
0x00000000004b3453 : push rcx ; sbb byte ptr [rbp + 1], cl ; ret 0x894d
0x00000000004c724d : push rcx ; stc ; call rax
0x000000000043b104 : push rdi ; jmp 0x44739f
0x00000000004b186b : push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000042f11a : push rdi ; ret
0x000000000048e9d6 : push rdx ; add al, 0 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rdx]
0x0000000000404984 : push rdx ; ret
0x00000000004c9019 : push rdx ; sti ; call qword ptr [rdx]
0x00000000004c8ff9 : push rdx ; sti ; call rdx
0x0000000000438c49 : push rsi ; in eax, dx ; jmp 0x4473a4
0x000000000043c356 : push rsi ; mov al, 0 ; add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp rbx
0x00000000004117a4 : push rsp ; jbe 0x411765 ; push -3 ; ret
0x0000000000418cc0 : push rsp ; ret
0x0000000000400290 : push rsp ; ret 0x9116
0x00000000004452f4 : push rsp ; ret 0xffff
0x00000000004c921c : push rsp ; sbb dword ptr [rax], eax ; add byte ptr [rax - 0x62], al ; sti ; jmp rcx
0x0000000000480078 : pushfq ; push rcx ; ret 0x8929
0x000000000044086c : pushfq ; ret
0x0000000000412d54 : pushfq ; ret 0x8445
0x000000000045887c : pushfq ; ret 0xd284
0x000000000043c6df : pushfq ; ret 0xe280
0x000000000047be21 : pushfq ; sub eax, 0x9a6b3ab9 ; ret
0x00000000004c7150 : rcl byte ptr [rax + rax], 0 ; clc ; jmp rax
0x00000000004c7110 : rcl byte ptr [rbx], 0 ; add al, al ; and edi, eax ; jmp rax
0x00000000004c7190 : rcl byte ptr [rip + 0x68f00000], -8 ; jmp rax
0x0000000000458c5f : rcl dword ptr [rdi - 0x97f], -1 ; jmp qword ptr [rcx]
0x00000000004c7348 : rcr byte ptr [rax + rax], 0 ; ror byte ptr [rax], -5 ; jmp rax
0x0000000000441593 : rcr dword ptr [rip + 0xdb90e85] ; ret
0x00000000004002e5 : ret
0x0000000000400d58 : ret 0
0x000000000041da1d : ret 0x10
0x00000000004bafd9 : ret 0x1002
0x00000000004c3e0f : ret 0x101
0x000000000048e5aa : ret 0x108
0x000000000045c9b2 : ret 0x10ba
0x000000000047c0ea : ret 0x10e8
0x000000000041f06f : ret 0x11
0x0000000000434d16 : ret 0x110
0x0000000000496850 : ret 0x1111
0x00000000004bc771 : ret 0x12
0x00000000004a03cf : ret 0x124
0x00000000004baea5 : ret 0x1252
0x000000000043b3d5 : ret 0x148
0x000000000042e3de : ret 0x14c
0x00000000004102db : ret 0x15
0x000000000042833f : ret 0x16c4
0x000000000043cc36 : ret 0x17
0x00000000004ac38a : ret 0x171
0x00000000004b3979 : ret 0x18
0x0000000000424f02 : ret 0x182
0x0000000000498144 : ret 0x19
0x0000000000474014 : ret 0x1a
0x000000000046928d : ret 0x1add
0x0000000000497448 : ret 0x1b
0x000000000040a8b1 : ret 0x1b2
0x0000000000449cbd : ret 0x1cdd
0x00000000004a12d8 : ret 0x1d
0x00000000004bfba0 : ret 0x1d90
0x0000000000449be5 : ret 0x1e1
0x0000000000480d83 : ret 0x1e6f
0x00000000004123c3 : ret 0x20
0x000000000040f673 : ret 0x201f
0x000000000040824e : ret 0x20b9
0x0000000000442f12 : ret 0x20bd
0x0000000000498a2f : ret 0x2145
0x00000000004217fe : ret 0x223
0x0000000000497744 : ret 0x23
0x0000000000427887 : ret 0x233b
0x000000000041c33a : ret 0x236e
0x0000000000469bda : ret 0x23da
0x0000000000444ed6 : ret 0x24
0x0000000000499f38 : ret 0x24cc
0x000000000049f8be : ret 0x25
0x00000000004768d8 : ret 0x279e
0x000000000044a29a : ret 0x280f
0x0000000000480f60 : ret 0x281b
0x0000000000457195 : ret 0x28b
0x000000000041a30d : ret 0x28e9
0x0000000000408dbb : ret 0x29
0x00000000004aeb11 : ret 0x2941
0x0000000000411e00 : ret 0x2948
0x0000000000473014 : ret 0x2a
0x000000000041f6a0 : ret 0x2a4b
0x00000000004a1320 : ret 0x2ae8
0x000000000049d77e : ret 0x2b
0x00000000004445ad : ret 0x2c24
0x0000000000427187 : ret 0x2c7c
0x00000000004023d2 : ret 0x2c8e
0x00000000004021d2 : ret 0x2c8f
0x0000000000401fd2 : ret 0x2c90
0x00000000004b6c2e : ret 0x2ce8
0x0000000000471442 : ret 0x2d50
0x0000000000433682 : ret 0x2da8
0x0000000000419579 : ret 0x2e7e
0x000000000043cd86 : ret 0x30
0x000000000045eb47 : ret 0x3040
0x00000000004aaa8d : ret 0x3045
0x00000000004393a8 : ret 0x3097
0x0000000000431986 : ret 0x30f
0x00000000004589db : ret 0x3144
0x000000000041beb7 : ret 0x3145
0x0000000000459bc4 : ret 0x3252
0x000000000049f01a : ret 0x33
0x000000000041a301 : ret 0x34e9
0x000000000041738e : ret 0x34f0
0x000000000044b3aa : ret 0x3504
0x0000000000486fc3 : ret 0x37ac
0x0000000000407683 : ret 0x38
0x000000000044239b : ret 0x38df
0x000000000042ede2 : ret 0x3970
0x0000000000407bb7 : ret 0x3ae
0x0000000000413a80 : ret 0x3ae8
0x0000000000471f14 : ret 0x3b
0x000000000046304d : ret 0x3c58
0x000000000045c8fd : ret 0x3cb9
0x0000000000498f90 : ret 0x3d94
0x000000000046ef75 : ret 0x3e
0x000000000045b257 : ret 0x3e8
0x000000000045818c : ret 0x4030
0x00000000004c4241 : ret 0x43dd
0x0000000000422ade : ret 0x43fc
0x0000000000460b20 : ret 0x4449
0x000000000041d58e : ret 0x451e
0x0000000000419f79 : ret 0x4589
0x0000000000462d06 : ret 0x4777
0x00000000004546cf : ret 0x4802
0x000000000041dde7 : ret 0x4808
0x000000000041146c : ret 0x480a
0x0000000000449980 : ret 0x4810
0x00000000004a12ef : ret 0x4813
0x00000000004b186e : ret 0x4815
0x00000000004b388d : ret 0x4818
0x0000000000473f06 : ret 0x4861
0x00000000004411f1 : ret 0x4869
0x00000000004a5001 : ret 0x4878
0x00000000004bc941 : ret 0x48c
0x000000000045e905 : ret 0x48c0
0x000000000044c037 : ret 0x48c3
0x000000000040b5a6 : ret 0x48c5
0x000000000044455a : ret 0x48d4
0x000000000040d3c9 : ret 0x48e0
0x000000000043b34d : ret 0x48ea
0x0000000000402bf7 : ret 0x48f0
0x00000000004b7660 : ret 0x4ae8
0x000000000040f833 : ret 0x4aef
0x000000000046c7c1 : ret 0x4b
0x000000000042aa82 : ret 0x4c1e
0x00000000004c63c0 : ret 0x4c58
0x00000000004c6360 : ret 0x4c5d
0x00000000004104b1 : ret 0x4c78
0x0000000000477dd7 : ret 0x4cc0
0x000000000040b035 : ret 0x4cf0
0x000000000048be22 : ret 0x4dbf
0x000000000041a2e8 : ret 0x4de9
0x000000000047d9ac : ret 0x4f0b
0x0000000000446aa3 : ret 0x4ff2
0x00000000004997c6 : ret 0x5189
0x00000000004be8f7 : ret 0x5452
0x000000000041a9ff : ret 0x5589
0x000000000040c6ae : ret 0x558a
0x00000000004a35df : ret 0x558b
0x00000000004b3ce4 : ret 0x581e
0x00000000004716ca : ret 0x5966
0x0000000000479746 : ret 0x5aa2
0x0000000000432dfa : ret 0x5aaf
0x000000000045a400 : ret 0x5ae8
0x00000000004239a3 : ret 0x5b8b
0x000000000047c607 : ret 0x5bc6
0x0000000000421f0e : ret 0x5c4c
0x000000000042c09a : ret 0x5db8
0x00000000004605fc : ret 0x5ee8
0x000000000049b9eb : ret 0x5fe8
0x00000000004a38b3 : ret 0x60
0x00000000004bd351 : ret 0x6044
0x000000000041e31a : ret 0x60b
0x00000000004c373f : ret 0x61
0x0000000000457cc0 : ret 0x6271
0x000000000042691a : ret 0x628d
0x0000000000442ca5 : ret 0x634c
0x000000000041f8ec : ret 0x6363
0x00000000004943ad : ret 0x6809
0x000000000047b292 : ret 0x68e8
0x0000000000468926 : ret 0x6a8a
0x000000000041512f : ret 0x6c82
0x000000000043602e : ret 0x6e9b
0x000000000048c55a : ret 0x6ea5
0x0000000000433fce : ret 0x6eb4
0x000000000048f66c : ret 0x6fcb
0x00000000004be888 : ret 0x701
0x0000000000441fb9 : ret 0x71c4
0x000000000045b85f : ret 0x75d8
0x0000000000442f0c : ret 0x76c
0x00000000004685de : ret 0x77a8
0x000000000041af42 : ret 0x77e9
0x000000000041200b : ret 0x78
0x0000000000422663 : ret 0x79c3
0x0000000000469741 : ret 0x7a8a
0x00000000004703bb : ret 0x7b7f
0x000000000043cd8c : ret 0x7e58
0x000000000046670d : ret 0x7f0f
0x0000000000476d6a : ret 0x8041
0x000000000041bebd : ret 0x8141
0x00000000004123c0 : ret 0x8148
0x00000000004722d4 : ret 0x822d
0x0000000000463491 : ret 0x8237
0x000000000049b9e4 : ret 0x8341
0x0000000000451c12 : ret 0x8348
0x00000000004209b5 : ret 0x840
0x0000000000417c00 : ret 0x844
0x000000000040806b : ret 0x8445
0x0000000000437492 : ret 0x85
0x000000000040535e : ret 0x8589
0x0000000000408ed0 : ret 0x858a
0x00000000004bb9d0 : ret 0x85c7
0x00000000004189d0 : ret 0x861
0x000000000044a669 : ret 0x86a5
0x00000000004ac50e : ret 0x86f8
0x00000000004209a6 : ret 0x8840
0x0000000000417bc8 : ret 0x8841
0x000000000040995b : ret 0x8844
0x00000000004aaa93 : ret 0x8845
0x0000000000489b69 : ret 0x8902
0x00000000004be8a5 : ret 0x8904
0x0000000000418a4f : ret 0x890d
0x000000000041b824 : ret 0x8910
0x00000000004044ed : ret 0x8915
0x00000000004280f4 : ret 0x8919
0x0000000000404231 : ret 0x8927
0x000000000048007a : ret 0x8929
0x0000000000456a50 : ret 0x8931
0x0000000000454246 : ret 0x8938
0x0000000000469353 : ret 0x8940
0x000000000048210d : ret 0x8941
0x0000000000466362 : ret 0x8944
0x00000000004916b5 : ret 0x8945
0x000000000040c739 : ret 0x8948
0x00000000004afe8f : ret 0x894a
0x00000000004b3457 : ret 0x894d
0x00000000004a9cf1 : ret 0x895e
0x0000000000468b57 : ret 0x8961
0x0000000000422fb0 : ret 0x8969
0x0000000000403351 : ret 0x896e
0x00000000004649d9 : ret 0x8974
0x00000000004b4765 : ret 0x8980
0x0000000000421848 : ret 0x8981
0x000000000045a970 : ret 0x8989
0x00000000004ae911 : ret 0x898c
0x000000000048baf8 : ret 0x898d
0x0000000000494b1e : ret 0x8994
0x00000000004ae0bc : ret 0x899a
0x000000000045c4f7 : ret 0x899d
0x0000000000454f84 : ret 0x89a5
0x0000000000461b6b : ret 0x89b1
0x000000000042c294 : ret 0x89b5
0x0000000000405405 : ret 0x89c5
0x000000000042aeac : ret 0x89d4
0x0000000000493cde : ret 0x89e0
0x000000000042a3bc : ret 0x89e4
0x000000000045bb70 : ret 0x89e7
0x0000000000429f5c : ret 0x89ea
0x0000000000484008 : ret 0x89f1
0x0000000000462367 : ret 0x89f4
0x00000000004a416a : ret 0x89f5
0x00000000004b1488 : ret 0x8a44
0x00000000004b1385 : ret 0x8a4a
0x00000000004661e8 : ret 0x8a74
0x000000000040be76 : ret 0x8b48
0x0000000000412c1a : ret 0x8b4c
0x00000000004427c7 : ret 0x8b70
0x0000000000463e47 : ret 0x8bb1
0x00000000004327a2 : ret 0x8d3f
0x0000000000400291 : ret 0x9116
0x00000000004a1045 : ret 0x919d
0x000000000049af48 : ret 0x9214
0x000000000040781b : ret 0x928a
0x00000000004b1ac8 : ret 0x92e8
0x00000000004bf4f7 : ret 0x93e8
0x000000000045e98e : ret 0x940f
0x00000000004c1602 : ret 0x941
0x00000000004abbf2 : ret 0x949
0x00000000004920cd : ret 0x94b9
0x0000000000442958 : ret 0x9589
0x0000000000463fd3 : ret 0x958a
0x00000000004459fe : ret 0x95ad
0x0000000000406123 : ret 0x95af
0x0000000000412c35 : ret 0x960f
0x0000000000458351 : ret 0x9c0f
0x00000000004834a7 : ret 0x9e6d
0x000000000045739b : ret 0xa
0x00000000004621f9 : ret 0xa2bc
0x000000000047151c : ret 0xa30b
0x00000000004253c6 : ret 0xa31
0x0000000000493179 : ret 0xa8b9
0x00000000004379b6 : ret 0xaa
0x0000000000404d04 : ret 0xaa0f
0x000000000048b2ff : ret 0xac60
0x000000000047b57f : ret 0xb
0x000000000040970b : ret 0xb0
0x0000000000457839 : ret 0xb041
0x00000000004411d5 : ret 0xb269
0x000000000048d9a8 : ret 0xb28d
0x0000000000463e2b : ret 0xb2b1
0x000000000044453e : ret 0xb2d4
0x00000000004b1d82 : ret 0xb60f
0x00000000004338a2 : ret 0xb7
0x0000000000472e20 : ret 0xb740
0x0000000000409364 : ret 0xb841
0x000000000047ea87 : ret 0xb848
0x0000000000446fc4 : ret 0xb8fc
0x00000000004bf7b1 : ret 0xb904
0x0000000000409223 : ret 0xb915
0x000000000044040c : ret 0xb919
0x0000000000408f28 : ret 0xb927
0x0000000000480158 : ret 0xb929
0x0000000000457b71 : ret 0xb931
0x0000000000471050 : ret 0xb940
0x00000000004a3c8a : ret 0xb941
0x000000000044e34b : ret 0xb948
0x00000000004b1312 : ret 0xb94a
0x00000000004aacd6 : ret 0xb95e
0x000000000045b0f2 : ret 0xb989
0x00000000004aeac0 : ret 0xb98c
0x00000000004ae310 : ret 0xb99a
0x000000000045ca0b : ret 0xb99d
0x0000000000457fb2 : ret 0xb9a5
0x000000000040a2c0 : ret 0xb9c5
0x0000000000493deb : ret 0xb9e0
0x0000000000441e6a : ret 0xb9e4
0x0000000000485e96 : ret 0xb9f1
0x0000000000463a86 : ret 0xb9f4
0x00000000004a44d4 : ret 0xb9f5
0x000000000041965b : ret 0xba0d
0x000000000045b126 : ret 0xba89
0x00000000004441ba : ret 0xbc10
0x00000000004b2594 : ret 0xbe70
0x000000000047349c : ret 0xbf48
0x00000000004aaa1b : ret 0xc
0x00000000004025d5 : ret 0xc148
0x000000000042f3f2 : ret 0xc2
0x000000000045bbb0 : ret 0xc26e
0x000000000042efa2 : ret 0xc2d7
0x00000000004302e2 : ret 0xc3b9
0x00000000004c3982 : ret 0xc493
0x000000000042f526 : ret 0xc6
0x0000000000454e16 : ret 0xc6e0
0x00000000004a2a35 : ret 0xc731
0x00000000004bd5c2 : ret 0xc8e8
0x00000000004056a4 : ret 0xc984
0x000000000043a8d6 : ret 0xca
0x00000000004ab746 : ret 0xca20
0x000000000041b439 : ret 0xca21
0x0000000000459014 : ret 0xca29
0x00000000004964d0 : ret 0xcaed
0x000000000043a7d6 : ret 0xcb
0x00000000004c3745 : ret 0xccb2
0x00000000004937f7 : ret 0xd0e9
0x000000000049bc93 : ret 0xd108
0x0000000000408e3c : ret 0xd284
0x000000000041b2a8 : ret 0xd3b9
0x000000000049213d : ret 0xd3e9
0x0000000000487d55 : ret 0xd5f3
0x00000000004afad5 : ret 0xd618
0x0000000000458f7b : ret 0xd701
0x0000000000482ae4 : ret 0xd709
0x000000000041f2b0 : ret 0xda94
0x00000000004620fe : ret 0xdbca
0x000000000048833e : ret 0xdc02
0x00000000004bdaae : ret 0xdce8
0x00000000004a1b7f : ret 0xe083
0x000000000040c770 : ret 0xe0e9
0x00000000004390d6 : ret 0xe2
0x000000000041971d : ret 0xe280
0x000000000047b8d5 : ret 0xe2b9
0x000000000049e5ff : ret 0xe721
0x0000000000482121 : ret 0xe783
0x0000000000454273 : ret 0xe8ff
0x000000000041be38 : ret 0xe910
0x000000000040b361 : ret 0xe915
0x0000000000472cf2 : ret 0xe940
0x00000000004a3d05 : ret 0xe941
0x000000000043c0a3 : ret 0xe948
0x0000000000473f51 : ret 0xe961
0x0000000000408bf1 : ret 0xe96e
0x000000000046620e : ret 0xe974
0x00000000004b7124 : ret 0xe980
0x000000000043c113 : ret 0xe981
0x0000000000498fdc : ret 0xe994
0x00000000004ae4bf : ret 0xe99a
0x000000000045903b : ret 0xe9a5
0x0000000000446a38 : ret 0xe9e4
0x00000000004b7fc1 : ret 0xe9e8
0x0000000000469d7d : ret 0xea51
0x00000000004427cd : ret 0xea81
0x0000000000489cda : ret 0xedb9
0x0000000000475b0c : ret 0xee8
0x0000000000432be6 : ret 0xeefc
0x0000000000430882 : ret 0xef
0x000000000049e7a2 : ret 0xef52
0x00000000004812c4 : ret 0xefa6
0x0000000000455682 : ret 0xf1f5
0x0000000000417be3 : ret 0xf280
0x0000000000467245 : ret 0xf281
0x000000000047c04c : ret 0xf3e9
0x0000000000471b57 : ret 0xf41
0x00000000004057bb : ret 0xf49a
0x00000000004b616a : ret 0xf4be
0x0000000000452d2c : ret 0xf4e9
0x00000000004a171a : ret 0xf607
0x00000000004bc6d9 : ret 0xf62a
0x000000000044a2b1 : ret 0xf66
0x0000000000499a6a : ret 0xf684
0x0000000000427752 : ret 0xf692
0x00000000004967c4 : ret 0xf6bd
0x0000000000446a91 : ret 0xf713
0x00000000004bd041 : ret 0xf738
0x0000000000457211 : ret 0xf748
0x00000000004859ea : ret 0xf7c6
0x00000000004b88be : ret 0xf7c7
0x0000000000473aa5 : ret 0xf7f3
0x000000000046487a : ret 0xf9d7
0x0000000000442217 : ret 0xfa29
0x00000000004a2a31 : ret 0xfa89
0x00000000004aa540 : ret 0xfc3d
0x000000000047222e : ret 0xfc75
0x00000000004805bf : ret 0xfe11
0x000000000043c646 : ret 0xfe89
0x000000000045ba7a : ret 0xff10
0x0000000000451e3f : ret 0xff3
0x0000000000473a9f : ret 0xffa5
0x00000000004932e3 : ret 0xffbe
0x0000000000472228 : ret 0xffc4
0x0000000000471448 : ret 0xffd5
0x0000000000419573 : ret 0xffd8
0x00000000004722da : ret 0xffd9
0x00000000004716c4 : ret 0xffe0
0x000000000046472d : ret 0xfff9
0x00000000004703b5 : ret 0xfffa
0x00000000004c74f5 : ret 0xfffb
0x000000000045719c : ret 0xfffd
0x0000000000415c55 : ret 0xfffe
0x00000000004427af : ret 0xffff
0x000000000040c312 : ret 1
0x0000000000449379 : ret 2
0x0000000000421266 : ret 3
0x0000000000413e35 : ret 4
0x000000000041b879 : ret 5
0x000000000041892d : ret 6
0x0000000000446a9d : ret 7
0x000000000041528c : ret 8
0x000000000041d9e1 : ret 9
0x0000000000445bce : retf 0x17 ; add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp rdx
0x000000000048f2a0 : rol bh, 1 ; les r8d, ptr [r14 + 0x79] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x00000000004b184d : rol byte ptr [rax + 0x48f22948], -0x7f ; ret 1
0x00000000004a03aa : rol byte ptr [rax + 0x558801e2], cl ; ret 0x1b2
0x0000000000450e94 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004a98fc : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000044b19f : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004ac0da : rol byte ptr [rbp + 9], 1 ; ret
0x00000000004c72cc : rol byte ptr [rbx], 1 ; cli ; call rax
0x000000000048a7e5 : rol byte ptr [rcx + 0xf], 1 ; xchg eax, edx ; ret
0x0000000000454091 : rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000490598 : rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000049016a : rol byte ptr [rdi - 0x30469c88], cl ; ret 0x6fcb
0x000000000041e277 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004b184c : rol byte ptr ds:[rax + 0x48f22948], -0x7f ; ret 1
0x000000000041d9d2 : rol dword ptr [rcx + 0xf], -0x6c ; ret 0x8445
0x000000000049b6b7 : rol dword ptr [rcx - 9], 1 ; jmp qword ptr [rcx]
0x0000000000464723 : rol dword ptr [rdi - 0x78], -0x7b ; ret
0x000000000048f29f : rol r15b, 1 ; les r8d, ptr [r14 + 0x79] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x0000000000416a45 : ror byte ptr [r11 - 0x1376b800], 1 ; pop rbp ; ret
0x000000000044bf10 : ror byte ptr [r8 - 0x75], 0 ; mov rsp, rbp ; pop rbp ; ret
0x000000000044c7be : ror byte ptr [r8 - 0x75], 0x39 ; mov rsi, qword ptr [rbp - 0x28] ; call rax
0x000000000045b21a : ror byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax - 0x7f] ; ret 1
0x0000000000414957 : ror byte ptr [r8 - 0x75], 1 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004c4a04 : ror byte ptr [r8 - 0x77], 1 ; ret 0x2948
0x000000000047ea84 : ror byte ptr [rax + 1], cl ; ret 0xb848
0x00000000004025dc : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4025eb ; pop rbp ; ret
0x000000000044bf11 : ror byte ptr [rax - 0x75], 0 ; mov rsp, rbp ; pop rbp ; ret
0x000000000044c7bf : ror byte ptr [rax - 0x75], 0x39 ; mov rsi, qword ptr [rbp - 0x28] ; call rax
0x000000000045b21b : ror byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax - 0x7f] ; ret 1
0x0000000000414958 : ror byte ptr [rax - 0x75], 1 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000041da16 : ror byte ptr [rax - 0x75], 1 ; push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 0x10
0x0000000000411f7b : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x000000000044a9fa : ror byte ptr [rax - 0x77], -0x3a ; mov rax, qword ptr [rbp - 0x40] ; call rax
0x000000000045bf23 : ror byte ptr [rax - 0x77], 1 ; in al, dx ; pop rbp ; ret
0x00000000004c4a05 : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000464871 : ror byte ptr [rax - 0x77], 1 ; test dword ptr [rax - 0x17000007], esi ; ret 0xf9d7
0x000000000048f23b : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x48f2a4 ; ret
0x00000000004125da : ror byte ptr [rax - 0x7d], -0x3c ; pop rbp ; ret
0x000000000041b573 : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x000000000041c721 : ror byte ptr [rax - 0x7f], -0x3c ; adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004a9450 : ror byte ptr [rax - 0x7f], -0x3c ; and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000044a16d : ror byte ptr [rax - 0x7f], -0x3c ; mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004a52a7 : ror byte ptr [rax - 0x7f], -0x3c ; xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041da1a : ror byte ptr [rax - 0x7f], 1 ; ret 0x10
0x00000000004a38b0 : ror byte ptr [rax - 0x7f], 1 ; ret 0x60
0x00000000004c734c : ror byte ptr [rax], -5 ; jmp rax
0x00000000004abc15 : ror byte ptr [rbp + 9], -0x3d ; mov rax, r11 ; pop rbx ; pop rbp ; ret
0x0000000000416a46 : ror byte ptr [rbx - 0x1376b800], 1 ; pop rbp ; ret
0x000000000046725a : ror byte ptr [rcx], -0x39 ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x00000000004ac385 : ror byte ptr [rdi], -0x4a ; cmp ch, al ; ret 0x171
0x00000000004b1d7f : ror byte ptr [rdi], -0x6c ; ret 0xb60f
0x00000000004a2a2e : ror byte ptr [rdi], 0x44 ; ret 0xfa89
0x00000000004ac0ed : ror byte ptr [rdi], 1 ; mov dh, -0x40 ; pop rbx ; pop rbp ; ret
0x0000000000457c1c : ror byte ptr [rdi], 1 ; xchg eax, edx ; ret
0x000000000040bf73 : ror dl, cl ; scasd eax, dword ptr [rdi] ; ret 0x1b2
0x000000000040bbb7 : ror dl, cl ; scasd eax, dword ptr [rdi] ; ret 0x8589
0x00000000004abbef : ror dword ptr [rax + 0x21], cl ; ret 0x949
0x00000000004a48e9 : ror dword ptr [rax - 0x73], 0x65 ; clc ; pop rbx ; pop rbp ; ret
0x000000000040c881 : ror dword ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x00000000004a2cff : ror dword ptr [rax - 0x77], -0x32 ; call 0x48f006
0x00000000004b167e : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x000000000043b098 : ror dword ptr [rcx - 0x68b7b], -1 ; jmp 0x4473a5
0x0000000000477c90 : ror dword ptr [rcx - 0x7d], cl ; ret
0x000000000045b27a : sahf ; ret
0x000000000044266e : sahf ; ret 0xd284
0x00000000004c9221 : sahf ; sti ; jmp rcx
0x00000000004025ae : sal byte ptr [rsp + rsi*8 + 0x5d], -0x41 ; call 0xffffffffff409274
0x0000000000463fb4 : salc ; adc ah, al ; ret 0x1b2
0x0000000000461d45 : salc ; adc ah, al ; ret 0x8589
0x0000000000463fd0 : salc ; adc ah, al ; ret 0x958a
0x00000000004840ca : salc ; jmp qword ptr [rdi]
0x000000000042125d : salc ; mov dword ptr [rbp - 0x34], eax ; mov dword ptr [rbp - 0x38], ecx ; call 0x45d529
0x0000000000484006 : salc ; sti ; ret 0x89f1
0x00000000004c8e90 : sar ah, -6 ; jmp rsp
0x00000000004c7825 : sar bh, -1 ; push 0x60000030 ; ret
0x000000000043e45a : sar bl, -1 ; dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x0000000000445ec4 : sar bl, -1 ; dec dword ptr [rax - 0x75] ; or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x000000000046471d : sar dh, -1 ; call rdi
0x000000000046477e : sar dh, -1 ; call rdx
0x0000000000464691 : sar dh, -1 ; call rsp
0x0000000000463f5a : sar dh, -1 ; jmp qword ptr [rsi]
0x00000000004abbd4 : sar dword ptr [rcx], cl ; xor byte ptr [rbp - 0x77], cl ; ret
0x00000000004025de : sar eax, 1 ; jne 0x4025e9 ; pop rbp ; ret
0x0000000000473011 : sar ebp, -0x17 ; ret 0x2a
0x00000000004025dd : sar rax, 1 ; jne 0x4025ea ; pop rbp ; ret
0x0000000000463e42 : sbb ah, byte ptr [rdx - 0x47] ; and ebx, ebp ; ret 0x8bb1
0x00000000004bbdb4 : sbb al, -0x17 ; ret
0x000000000047bf7a : sbb al, -0x73 ; sbb ecx, ebp ; ret
0x00000000004c7319 : sbb al, 0 ; add al, al ; add al, -5 ; jmp qword ptr [rax]
0x00000000004c7349 : sbb al, 0 ; add al, al ; or bl, bh ; jmp rax
0x00000000004c9ae4 : sbb al, 0x22 ; add byte ptr [rax], al ; or byte ptr [rdx - 2], cl ; call rax
0x0000000000477fd0 : sbb al, 0x41 ; out dx, eax ; mov al, -0x47 ; ret
0x000000000049271d : sbb al, 0x41 ; xchg eax, ebx ; ret
0x000000000046097b : sbb al, 1 ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000048689e : sbb al, bh ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rbx]
0x00000000004c72c9 : sbb al, byte ptr [rax] ; add al, dl ; add edi, edx ; call rax
0x00000000004c72d9 : sbb al, byte ptr [rax] ; add byte ptr [rax + 8], ah ; cli ; call qword ptr [rax]
0x0000000000445360 : sbb al, byte ptr [rsi + 0x48858948] ; ret 0xffff
0x0000000000485abb : sbb bl, byte ptr [rdx - 0x47] ; salc ; jmp qword ptr [rdi]
0x00000000004a0462 : sbb byte ptr [r15], cl ; xchg eax, esp ; ret
0x00000000004c7249 : sbb byte ptr [rax], al ; add byte ptr [rax + 0x51], ah ; stc ; call rax
0x00000000004c7259 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; push rbx ; stc ; call qword ptr [rax]
0x000000000045c9aa : sbb byte ptr [rbp + 0xe], ch ; test eax, 0x396f22b9 ; ret 0x10ba
0x00000000004b3454 : sbb byte ptr [rbp + 1], cl ; ret 0x894d
0x00000000004c8428 : sbb byte ptr [rdi - 8], al ; jmp rbx
0x00000000004a0463 : sbb byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004c8ff8 : sbb byte ptr [rdx - 5], dl ; call rdx
0x00000000004453e2 : sbb byte ptr [rip + 0x30858948], bl ; ret 0xffff
0x0000000000472f11 : sbb cl, ch ; ret
0x000000000042564a : sbb dl, byte ptr [rdx] ; ret
0x00000000004459a9 : sbb dword ptr [rax], eax ; add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; call rdx
0x00000000004459c7 : sbb dword ptr [rax], eax ; add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp rdx
0x00000000004c921d : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x62], al ; sti ; jmp rcx
0x000000000047e2d3 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041b3d2 : sbb dword ptr [rcx], -0xb ; ret 0x28e9
0x000000000041aba5 : sbb dword ptr [rcx], -0xb ; ret 0x8589
0x000000000041b2a5 : sbb dword ptr [rcx], -0xb ; ret 0xd3b9
0x00000000004453e3 : sbb eax, 0x30858948 ; ret 0xffff
0x00000000004c7359 : sbb eax, 0x9700000 ; sti ; jmp qword ptr [rax]
0x000000000043ee36 : sbb eax, 0xb99be670 ; ret
0x0000000000441594 : sbb eax, 0xdb90e85 ; ret
0x000000000045c65f : sbb eax, 0xe9000005 ; ret 1
0x0000000000409989 : sbb eax, 0xf9b80000 ; push rdx ; ret
0x00000000004b2065 : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x000000000044c9dd : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000041b3d3 : sbb ebp, esi ; ret 0x28e9
0x000000000041ab5b : sbb ebp, esi ; ret 0x8589
0x000000000041b2a6 : sbb ebp, esi ; ret 0xd3b9
0x0000000000477020 : sbb ecx, dword ptr [rax - 0x7f] ; ret
0x000000000047bf7c : sbb ecx, ebp ; ret
0x0000000000435bea : sbb edx, dword ptr [rdx] ; ret
0x0000000000466424 : scasb al, byte ptr [rdi] ; add eax, dword ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp qword ptr [rbx]
0x00000000004952fc : scasb al, byte ptr [rdi] ; ret
0x0000000000479054 : scasd eax, dword ptr [rdi] ; iretd ; test al, -0x47 ; call rsi
0x0000000000495350 : scasd eax, dword ptr [rdi] ; ret
0x000000000040bf75 : scasd eax, dword ptr [rdi] ; ret 0x1b2
0x000000000040bbb9 : scasd eax, dword ptr [rdi] ; ret 0x8589
0x00000000004ae910 : scasd eax, dword ptr [rdi] ; ret 0x898c
0x00000000004aeabf : scasd eax, dword ptr [rdi] ; ret 0xb98c
0x000000000048833d : scasd eax, dword ptr [rdi] ; ret 0xdc02
0x000000000044d784 : sete al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040935e : shl byte ptr [rax + 0x4c], 1 ; add byte ptr [rbp - 0x77], al ; ret 0xb841
0x00000000004c7114 : shl byte ptr [rbx], -8 ; jmp rax
0x000000000044d786 : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000044a2cf : shl dword ptr [rsi + 0xf], 0x5c ; ret 0xf66
0x0000000000452007 : shr al, 1 ; ret
0x00000000004c721c : shr byte ptr [rdx], 1 ; stc ; call qword ptr [rax]
0x0000000000471f12 : shr cl, cl ; ret 0x3b
0x00000000004c721e : stc ; call qword ptr [rax]
0x00000000004c893a : stc ; call qword ptr [rdx]
0x00000000004c724e : stc ; call rax
0x00000000004c8d71 : stc ; cli ; call qword ptr [rdx]
0x0000000000466709 : stc ; dec dword ptr [rax - 0x41] ; ret 0x7f0f
0x0000000000451579 : stc ; in al, dx ; ret 0x8589
0x0000000000451e8c : stc ; in al, dx ; ret 0xff3
0x00000000004667ac : stc ; inc edi ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp rbx
0x00000000004c883a : stc ; jmp qword ptr [rcx]
0x0000000000491dfc : stc ; mov cl, 0x37 ; ret 0x4589
0x00000000004c7246 : stc ; push qword ptr [rax + 0x60000018] ; push rcx ; stc ; call rax
0x00000000004c7286 : stc ; push qword ptr [rax - 0x5fffffe7] ; lahf ; stc ; call rax
0x00000000004c7256 : stc ; push rax ; sbb byte ptr [rax], al ; add byte ptr [rax], al ; push rbx ; stc ; call qword ptr [rax]
0x0000000000406903 : stc ; push rdx ; ret
0x0000000000461d2b : stc ; ret
0x000000000046fd4d : stc ; ret 0x77a8
0x00000000004b4764 : stc ; ret 0x8980
0x00000000004b7123 : stc ; ret 0xe980
0x0000000000463e25 : stc ; xor eax, 0xeb21b978 ; ret 0xb2b1
0x00000000004c9722 : std ; jmp rsp
0x000000000040e1ac : std ; ret
0x00000000004768d7 : std ; ret 0x279e
0x0000000000481937 : std ; ret 0x281b
0x00000000004c7456 : sti ; call qword ptr [rax]
0x00000000004c901a : sti ; call qword ptr [rdx]
0x00000000004c7446 : sti ; call rax
0x00000000004c8ffa : sti ; call rdx
0x00000000004c7316 : sti ; inc dword ptr [rax] ; sbb al, 0 ; add al, al ; add al, -5 ; jmp qword ptr [rax]
0x00000000004c7356 : sti ; inc dword ptr [rax] ; sbb eax, 0x9700000 ; sti ; jmp qword ptr [rax]
0x00000000004c7346 : sti ; inc eax ; sbb al, 0 ; add al, al ; or bl, bh ; jmp rax
0x0000000000446a19 : sti ; inc edi ; test dword ptr [rcx + rdi*8 - 1], esi ; call rbx
0x00000000004466bd : sti ; inc edi ; test dword ptr [rcx + rdi*8 - 1], esi ; call rsi
0x0000000000444c0d : sti ; inc edi ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp rbx
0x0000000000446625 : sti ; inc edi ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp rsi
0x00000000004c731e : sti ; jmp qword ptr [rax]
0x00000000004c734e : sti ; jmp rax
0x00000000004c9222 : sti ; jmp rcx
0x00000000004c8f12 : sti ; jmp rsi
0x00000000004c743e : sti ; push qword ptr [rax + 0x10000020] ; outsb dx, byte ptr [rsi] ; sti ; call rax
0x00000000004c747e : sti ; push qword ptr [rax + 0x21] ; jle 0x4c748b ; call rax
0x00000000004c74be : sti ; push qword ptr [rax + 0x22] ; mov bh, bl ; call rax
0x00000000004c744e : sti ; push rax ; and byte ptr [rax], al ; add byte ptr [rax], al ; jo 0x4c745b ; call qword ptr [rax]
0x00000000004c748e : sti ; push rax ; and dword ptr [rax], eax ; add byte ptr [rax + 0x7e], dh ; sti ; call qword ptr [rax]
0x0000000000484007 : sti ; ret 0x89f1
0x0000000000485e95 : sti ; ret 0xb9f1
0x0000000000451578 : sti ; stc ; in al, dx ; ret 0x8589
0x0000000000438eee : stosb byte ptr [rdi], al ; in al, 0 ; add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp qword ptr [rcx]
0x00000000004044ec : stosb byte ptr [rdi], al ; ret 0x8915
0x00000000004a1044 : stosb byte ptr [rdi], al ; ret 0x919d
0x0000000000409222 : stosb byte ptr [rdi], al ; ret 0xb915
0x000000000040b360 : stosb byte ptr [rdi], al ; ret 0xe915
0x00000000004abbd3 : stosb byte ptr [rdi], al ; sar dword ptr [rcx], cl ; xor byte ptr [rbp - 0x77], cl ; ret
0x000000000048efeb : stosb byte ptr [rdi], al ; sub rax, rcx ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004b78f2 : stosd dword ptr [rdi], eax ; fsubr st(1) ; ret
0x000000000044526a : stosd dword ptr [rdi], eax ; jb 0x4452d5 ; mov ebx, 0x60858948 ; ret 0xffff
0x000000000043afed : stosd dword ptr [rdi], eax ; ret
0x000000000042f542 : stosd dword ptr [rdi], eax ; ret 0
0x0000000000417717 : sub al, -0x47 ; ret 0x34f0
0x000000000043f4c9 : sub al, -4 ; inc edi ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp rbx
0x0000000000402617 : sub al, 0 ; add ebx, esi ; ret
0x00000000004c8ff4 : sub al, 0x17 ; add byte ptr [rax], al ; sbb byte ptr [rdx - 5], dl ; call rdx
0x000000000040e954 : sub al, 0x18 ; ret
0x00000000004a3afc : sub al, 0x35 ; ret 0x8941
0x00000000004a3c88 : sub al, 0x35 ; ret 0xb941
0x00000000004a3d03 : sub al, 0x35 ; ret 0xe941
0x00000000004a5a61 : sub al, 0x48 ; add esp, 0x100 ; pop rbp ; ret
0x000000000047efef : sub al, ah ; test byte ptr [rip - 0x76ba39df], bh ; ret 0x8141
0x000000000041576e : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004c721d : sub bh, cl ; call qword ptr [rax]
0x000000000048b406 : sub byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000415658 : sub byte ptr [rax], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000471445 : sub byte ptr [rbp - 0x7f], bh ; ret 0xffd5
0x000000000047143b : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000471515 : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x00000000004a0399 : sub eax, 0x2b80000 ; mov cl, 0x7d ; ret
0x0000000000402a12 : sub eax, 0x48000000 ; add esp, 0x30 ; pop rbp ; ret
0x000000000048d9be : sub eax, 0x5b9e061 ; clc ; ret 0x898d
0x00000000004722d5 : sub eax, 0x81268e82 ; ret 0xffd9
0x000000000047be22 : sub eax, 0x9a6b3ab9 ; ret
0x000000000040bf8a : sub eax, 0xb9148e45 ; ror dl, cl ; scasd eax, dword ptr [rdi] ; ret 0x1b2
0x000000000048efed : sub eax, ecx ; add rsp, 0x50 ; pop rbp ; ret
0x000000000047ea8f : sub edx, edi ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004c4c09 : sub esp, 8 ; add rsp, 8 ; ret
0x000000000048efec : sub rax, rcx ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004c4c08 : sub rsp, 8 ; add rsp, 8 ; ret
0x00000000004354a1 : test ah, ch ; ret
0x0000000000492a2f : test ah, cl ; or al, 0 ; add cl, ch ; ret
0x000000000044a593 : test ah, dh ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x00000000004859e8 : test al, -0x18 ; ret 0xf7c6
0x0000000000479056 : test al, -0x47 ; call rsi
0x0000000000452229 : test al, -0x75 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000041b3d1 : test al, -0x7d ; sbb ebp, esi ; ret 0x28e9
0x0000000000471440 : test al, -0x7f ; ret 0x2d50
0x000000000047151a : test al, -0x7f ; ret 0xa30b
0x0000000000453fc7 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041dbcf : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x00000000004b1123 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000048f5c7 : test al, 0 ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004ae90d : test al, 0x2d ; xchg eax, edi ; scasd eax, dword ptr [rdi] ; ret 0x898c
0x00000000004776ae : test al, 0x48 ; add esp, 0x80 ; pop rbp ; ret
0x0000000000473c76 : test al, 0x48 ; mov ebp, 0xe19c53ba ; ret
0x000000000047db28 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000045b5ec : test al, 1 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004bfa44 : test al, 3 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004353dd : test bh, ah ; ret 0
0x000000000044f40d : test bl, dh ; add al, 0 ; add cl, ch ; ret 1
0x00000000004512da : test byte ptr [r9 - 0x70f07fb3], r9b ; ret 6
0x00000000004b2a80 : test byte ptr [rax - 0x16fffff9], cl ; ret 1
0x0000000000492e30 : test byte ptr [rax], ah ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x00000000004c4b8a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004a8052 : test byte ptr [rbp - 0x16fffffc], ah ; ret 1
0x0000000000449d2c : test byte ptr [rbp - 0x16fffffd], ch ; ret 1
0x000000000041c2c7 : test byte ptr [rbx + rax], bl ; add cl, ch ; ret 1
0x00000000004512db : test byte ptr [rcx - 0x70f07fb3], cl ; ret 6
0x000000000041a586 : test byte ptr [rcx], bh ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x00000000004a75f6 : test byte ptr [rcx], bl ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x00000000004682bc : test byte ptr [rcx], ch ; ret 0
0x000000000048fd7f : test byte ptr [rdi + rax], al ; add cl, ch ; ret 1
0x000000000045f966 : test byte ptr [rdi - 0x16fffff1], ah ; ret 9
0x0000000000413cd6 : test byte ptr [rdi], bh ; add al, 0 ; add cl, ch ; ret 1
0x000000000045c65e : test byte ptr [rip - 0x16fffffb], bl ; ret 1
0x00000000004c8e4c : test byte ptr [rip - 0x5500000], dl ; cli ; call qword ptr [rcx]
0x000000000047eff1 : test byte ptr [rip - 0x76ba39df], bh ; ret 0x8141
0x00000000004a6231 : test byte ptr [rsi], cl ; or al, 0 ; add cl, ch ; ret
0x000000000040c30c : test cl, ah ; add dword ptr [rax], eax ; add cl, ch ; ret 1
0x0000000000424369 : test cl, ah ; ret
0x000000000044813a : test cl, al ; or eax, dword ptr [rax] ; add cl, ch ; ret
0x0000000000418fd0 : test dh, bl ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x0000000000433c59 : test dh, ch ; ret
0x000000000045b6b6 : test dh, dh ; cmove ecx, edx ; movsxd rax, ecx ; pop rbp ; ret
0x00000000004a3405 : test dh, dl ; add al, 0 ; add cl, ch ; ret 1
0x0000000000452807 : test dh, dl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x00000000004ad951 : test dl, bl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x00000000004682b6 : test dword ptr [rax + 0xffffffd], esp ; test byte ptr [rcx], ch ; ret 0
0x000000000042f3eb : test dword ptr [rax + rbx*8 - 0x7bf00001], ebp ; ret 0xc2
0x0000000000444ed0 : test dword ptr [rax - 0x1600003e], eax ; ret 0x24
0x0000000000464874 : test dword ptr [rax - 0x17000007], esi ; ret 0xf9d7
0x0000000000445571 : test dword ptr [rax], eax ; ret 0xffff
0x0000000000445488 : test dword ptr [rax], ebp ; ret 0xffff
0x0000000000442342 : test dword ptr [rax], ebx ; ret
0x00000000004454bb : test dword ptr [rax], ebx ; ret 0xffff
0x0000000000442518 : test dword ptr [rax], ecx ; ret
0x0000000000445545 : test dword ptr [rax], ecx ; ret 0xffff
0x00000000004453c9 : test dword ptr [rax], edi ; ret 0xffff
0x00000000004423a1 : test dword ptr [rax], edx ; ret
0x00000000004454e7 : test dword ptr [rax], edx ; ret 0xffff
0x0000000000441eeb : test dword ptr [rax], esi ; ret
0x00000000004453e6 : test dword ptr [rax], esi ; ret 0xffff
0x00000000004422d9 : test dword ptr [rax], esp ; ret
0x0000000000494bad : test dword ptr [rbp + rdi*8 - 0x7bf00001], ebx ; ret 0x3e
0x00000000004486f7 : test dword ptr [rbp + rdi*8 - 0x7bf00001], esp ; ret
0x000000000043087b : test dword ptr [rbp + rdx*8 - 0x7bf00001], edi ; ret 0xef
0x000000000042edcb : test dword ptr [rcx + rbx*8 - 0x7bf00001], ecx ; push rbx ; ret 0
0x000000000043ca35 : test dword ptr [rcx + rdi*8 - 1], esi ; call qword ptr [rax]
0x000000000043b5c4 : test dword ptr [rcx + rdi*8 - 1], esi ; call qword ptr [rbx]
0x000000000044567e : test dword ptr [rcx + rdi*8 - 1], esi ; call qword ptr [rcx]
0x0000000000445755 : test dword ptr [rcx + rdi*8 - 1], esi ; call qword ptr [rdi]
0x000000000043ec69 : test dword ptr [rcx + rdi*8 - 1], esi ; call qword ptr [rdx]
0x000000000043f45a : test dword ptr [rcx + rdi*8 - 1], esi ; call qword ptr [rsi]
0x0000000000445d1a : test dword ptr [rcx + rdi*8 - 1], esi ; call rax
0x000000000043ef24 : test dword ptr [rcx + rdi*8 - 1], esi ; call rbx
0x0000000000444ca3 : test dword ptr [rcx + rdi*8 - 1], esi ; call rcx
0x000000000043f259 : test dword ptr [rcx + rdi*8 - 1], esi ; call rdi
0x000000000043f6d9 : test dword ptr [rcx + rdi*8 - 1], esi ; call rdx
0x000000000043e2fc : test dword ptr [rcx + rdi*8 - 1], esi ; call rsi
0x000000000043fcb2 : test dword ptr [rcx + rdi*8 - 1], esi ; call rsp
0x0000000000444bcd : test dword ptr [rcx + rdi*8 - 1], esi ; dec dword ptr [rax - 0x77] ; xchg eax, ebp ; cwde ; ret 0xffff
0x0000000000441973 : test dword ptr [rcx + rdi*8 - 1], esi ; dec dword ptr [rax - 0x77] ; xchg eax, ebp ; pop rax ; ret
0x0000000000441a76 : test dword ptr [rcx + rdi*8 - 1], esi ; dec dword ptr [rax - 0x77] ; xchg eax, ebp ; push rax ; ret
0x0000000000441d85 : test dword ptr [rcx + rdi*8 - 1], esi ; dec dword ptr [rax - 0x77] ; xchg eax, ebp ; ret
0x0000000000444a3b : test dword ptr [rcx + rdi*8 - 1], esi ; inc dword ptr [rcx + rcx*4 - 0x7b] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xffff
0x0000000000440dae : test dword ptr [rcx + rdi*8 - 1], esi ; inc dword ptr [rcx + rcx*4 - 0x7b] ; xchg eax, esp ; ret
0x0000000000443913 : test dword ptr [rcx + rdi*8 - 1], esi ; inc dword ptr [rsi - 0x1d] ; ret
0x000000000043d832 : test dword ptr [rcx + rdi*8 - 1], esi ; jmp qword ptr [rax]
0x0000000000442a7b : test dword ptr [rcx + rdi*8 - 1], esi ; jmp qword ptr [rbx]
0x0000000000438ef3 : test dword ptr [rcx + rdi*8 - 1], esi ; jmp qword ptr [rcx]
0x0000000000440add : test dword ptr [rcx + rdi*8 - 1], esi ; jmp qword ptr [rdi]
0x0000000000439622 : test dword ptr [rcx + rdi*8 - 1], esi ; jmp qword ptr [rdx]
0x000000000044671f : test dword ptr [rcx + rdi*8 - 1], esi ; jmp qword ptr [rsi]
0x0000000000446b30 : test dword ptr [rcx + rdi*8 - 1], esi ; jmp rax
0x000000000043c35b : test dword ptr [rcx + rdi*8 - 1], esi ; jmp rbx
0x000000000043d167 : test dword ptr [rcx + rdi*8 - 1], esi ; jmp rcx
0x00000000004458d5 : test dword ptr [rcx + rdi*8 - 1], esi ; jmp rdi
0x000000000044180b : test dword ptr [rcx + rdi*8 - 1], esi ; jmp rdx
0x000000000044426e : test dword ptr [rcx + rdi*8 - 1], esi ; jmp rsi
0x000000000043b848 : test dword ptr [rcx + rdi*8 - 1], esi ; jmp rsp
0x000000000043f8f6 : test dword ptr [rcx + rdi*8 - 1], esi ; lcall ptr [rbp + 3] ; std ; ret
0x0000000000442b31 : test dword ptr [rcx + rdi*8 - 1], esi ; push qword ptr [rax] ; ret
0x0000000000446ddf : test dword ptr [rcx + rdi*8 - 1], esi ; push qword ptr [rcx] ; ret 0x5b8b
0x00000000004c1937 : test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x0000000000457bc6 : test dword ptr [rdi + rdi*8 - 1], eax ; call rcx
0x00000000004c18f7 : test dword ptr [rdi + rdi*8 - 1], eax ; call rdi
0x00000000004c1872 : test dword ptr [rdi + rdi*8 - 1], eax ; jmp rcx
0x0000000000486713 : test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rax]
0x000000000048676b : test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rbx]
0x00000000004866d2 : test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rcx]
0x00000000004bb87c : test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rbx
0x00000000004bba95 : test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rsi
0x000000000048e1d4 : test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rdx]
0x000000000048ed51 : test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rsi]
0x000000000048ecf7 : test dword ptr [rdi + rdi*8 - 1], ebx ; call rdx
0x000000000048ec2d : test dword ptr [rdi + rdi*8 - 1], ebx ; call rsp
0x000000000048df5b : test dword ptr [rdi + rdi*8 - 1], ebx ; jmp qword ptr [rdx]
0x000000000048ebe9 : test dword ptr [rdi + rdi*8 - 1], ebx ; jmp rdx
0x000000000047dc36 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000040c05a : test dword ptr [rdi + rdi*8 - 1], edx ; call qword ptr [rdi]
0x000000000041ff43 : test dword ptr [rdi + rdi*8 - 1], edx ; call rbx
0x0000000000465e1c : test dword ptr [rdi + rdi*8 - 1], edx ; jmp qword ptr [rbx]
0x00000000004667af : test dword ptr [rdi + rdi*8 - 1], edx ; jmp rbx
0x0000000000465d7d : test dword ptr [rdi + rdi*8 - 1], edx ; jmp rdi
0x00000000004501f1 : test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x000000000045f321 : test dword ptr [rdi + rdi*8 - 1], esi ; jmp rax
0x000000000045f6e5 : test dword ptr [rdi + rdi*8 - 1], esi ; jmp rcx
0x000000000048a4b5 : test dword ptr [rdi + rdi*8 - 1], esi ; jmp rsp
0x00000000004772ca : test dword ptr [rdi + rdi*8 - 1], esp ; call qword ptr [rbx]
0x000000000047b20e : test dword ptr [rdi + rdi*8 - 1], esp ; call rax
0x000000000047b4f5 : test dword ptr [rdi + rdi*8 - 1], esp ; call rsi
0x000000000047bf83 : test dword ptr [rdi + rdi*8 - 1], esp ; jmp qword ptr [rcx]
0x000000000049aef9 : test dword ptr [rdi*8 - 0x7bf00001], esi ; ret
0x0000000000409daf : test dword ptr [rdi], ebx ; jrcxz 0x409d70 ; ret 0x3ae
0x0000000000482961 : test dword ptr [rdx], esp ; jmp 0x482c0d
0x0000000000433c53 : test dword ptr [rsi + rcx*8 - 1], edx ; dec dword ptr [rdi] ; test dh, ch ; ret
0x0000000000472ceb : test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x00000000004ba718 : test dword ptr [rsi + rdi*8 + 0x2f11ffff], edx ; ret
0x000000000046235f : test dword ptr [rsi + rdi*8 + 0x612dffff], esi ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x89f4
0x00000000004623b3 : test dword ptr [rsi + rdi*8 + 0x622dffff], esi ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x89f4
0x0000000000473f4a : test dword ptr [rsi + rdi*8 + 0x6e94ffff], esp ; ret 0xe961
0x0000000000461d23 : test dword ptr [rsi + rdi*8 + 0x7d2dffff], esi ; cld ; stc ; ret
0x0000000000461d77 : test dword ptr [rsi + rdi*8 + 0x7e2dffff], esi ; cld ; stc ; ret
0x0000000000461d3f : test dword ptr [rsi + rdi*8 - 0x29d20001], esi ; adc ah, al ; ret 0x8589
0x0000000000461ceb : test dword ptr [rsi + rdi*8 - 0x2ad20001], esi ; adc ah, al ; ret 0x8589
0x000000000046214b : test dword ptr [rsi + rdi*8 - 0x37d20001], esi ; ret 0xdbca
0x00000000004620f7 : test dword ptr [rsi + rdi*8 - 0x38d20001], esi ; ret 0xdbca
0x0000000000462d53 : test dword ptr [rsi + rdi*8 - 0x3ad20001], esi ; ret 0x4777
0x0000000000462cff : test dword ptr [rsi + rdi*8 - 0x3bd20001], esi ; ret 0x4777
0x0000000000459034 : test dword ptr [rsi + rdi*8 - 0x41e90001], edx ; ret 0xe9a5
0x000000000041f068 : test dword ptr [rsi + rdi*8 - 0x7bf00001], ebx ; ret 0x11
0x000000000045feef : test dword ptr [rsi + rdi*8 - 0x7bf00001], edi ; ret
0x000000000046fa0a : test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x000000000046273e : test dword ptr [rsp + rdi*8 - 0x7bf00001], eax ; ret
0x000000000045c9ad : test eax, 0x396f22b9 ; ret 0x10ba
0x000000000044556e : test eax, 0x858948 ; ret 0xffff
0x000000000045b9f3 : test eax, 0xb8000000 ; ret 0x75d8
0x0000000000473eff : test eax, 0xb9dd5cac ; xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x0000000000443af7 : test eax, eax ; ret 0xffff
0x000000000043f4d7 : test ebp, eax ; ret
0x0000000000443342 : test ebp, eax ; ret 0xffff
0x000000000043efd4 : test ebp, esp ; ret
0x000000000043f6ce : test ebx, eax ; ret
0x0000000000443a28 : test ecx, esp ; ret 0xffff
0x000000000043ed9f : test edi, esp ; ret
0x00000000004427ad : test edi, esp ; ret 0xffff
0x00000000004438c5 : test edx, eax ; ret 0xffff
0x00000000004437a4 : test edx, esp ; ret 0xffff
0x000000000049de57 : test esi, esp ; ret
0x0000000000442aaa : test esi, esp ; ret 0xffff
0x000000000043f6a2 : test esp, eax ; ret
0x000000000043f5fa : test esp, esp ; ret
0x0000000000443378 : test esp, esp ; ret 0xffff
0x000000000045bb01 : vxorps ymm9, ymm8, ymmword ptr [rcx - 0x70f057bb] ; ret 1
0x000000000041c584 : wait ; cmp bpl, cl ; ret 1
0x0000000000471f0f : wait ; jge 0x471ef1 ; shr cl, cl ; ret 0x3b
0x000000000046cfcd : wait ; jo 0x46cfdb ; ret
0x000000000047051c : wait ; jo 0x47052a ; ret
0x00000000004a07bc : wait ; movsb byte ptr [edi], byte ptr [esi] ; fild word ptr [rcx - 9] ; jmp qword ptr [rcx]
0x000000000040ae89 : xchg bl, bl ; jmp 0x40b78a
0x0000000000441c79 : xchg byte ptr [rdi - 0x348bb324], ah ; ret
0x0000000000412dbe : xchg dword ptr [rax], eax ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004b1868 : xchg dword ptr [rsi + 4], ebp ; push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000458f75 : xchg eax, ebp ; cld ; idiv edi ; ljmp ptr [rcx] ; ret 0xd701
0x0000000000444bd4 : xchg eax, ebp ; cwde ; ret 0xffff
0x000000000044a0b0 : xchg eax, ebp ; jmp 0x44a201
0x00000000004b2168 : xchg eax, ebp ; outsb dx, byte ptr [rsi] ; add byte ptr [rbp - 0x77], r8b ; ret 0x8141
0x000000000044197a : xchg eax, ebp ; pop rax ; ret
0x0000000000458556 : xchg eax, ebp ; push -1 ; ret 0x9589
0x0000000000441a7d : xchg eax, ebp ; push rax ; ret
0x000000000041a38a : xchg eax, ebp ; ret
0x000000000040be59 : xchg eax, ebp ; ret 0x1b2
0x000000000041ff2f : xchg eax, ebp ; ret 0x8445
0x000000000040bb9d : xchg eax, ebp ; ret 0x8589
0x00000000004209a5 : xchg eax, ebp ; ret 0x8840
0x0000000000417bc7 : xchg eax, ebp ; ret 0x8841
0x00000000004280f3 : xchg eax, ebp ; ret 0x8919
0x000000000040be75 : xchg eax, ebp ; ret 0x8b48
0x000000000044040b : xchg eax, ebp ; ret 0xb919
0x00000000004098e4 : xchg eax, ebp ; ret 0xd284
0x000000000041971c : xchg eax, ebp ; ret 0xe280
0x0000000000440492 : xchg eax, ebp ; ret 0xfffe
0x0000000000468b55 : xchg eax, ebx ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x000000000046f455 : xchg eax, ebx ; ret
0x0000000000432ef6 : xchg eax, ebx ; ret 0x16c4
0x0000000000447cb1 : xchg eax, ecx ; jge 0x447c8a ; ret
0x000000000046f685 : xchg eax, ecx ; ret
0x000000000041dbd5 : xchg eax, edi ; ret 0xd284
0x00000000004ae90f : xchg eax, edi ; scasd eax, dword ptr [rdi] ; ret 0x898c
0x00000000004aeabe : xchg eax, edi ; scasd eax, dword ptr [rdi] ; ret 0xb98c
0x0000000000447cfc : xchg eax, edx ; jge 0x447cd5 ; ret
0x00000000004488bc : xchg eax, edx ; jge 0x448895 ; ret
0x0000000000448d6f : xchg eax, edx ; jge 0x448d48 ; ret
0x000000000043f5f5 : xchg eax, edx ; mov byte ptr [rax - 0x1b7a760b], ah ; ret
0x000000000047b3af : xchg eax, edx ; or eax, 0xd8b80000 ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x000000000041d782 : xchg eax, edx ; ret
0x000000000043b106 : xchg eax, edx ; ret 0
0x000000000042833e : xchg eax, edx ; ret 0x16c4
0x0000000000476d7f : xchg eax, edx ; ret 0x8445
0x00000000004580ba : xchg eax, edx ; ret 0xd284
0x0000000000457466 : xchg eax, edx ; ret 0xe280
0x00000000004bd5ca : xchg eax, esi ; mov ecx, 0xba41a9ee ; ret
0x0000000000486fdb : xchg eax, esi ; ret
0x0000000000452d28 : xchg eax, esp ; int 6
0x000000000047cdca : xchg eax, esp ; jmp 0x47d838
0x000000000047cd07 : xchg eax, esp ; jmp 0x47d83a
0x0000000000473f04 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x000000000046f7d5 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x0000000000473f4f : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0xe961
0x000000000041a3b2 : xchg eax, esp ; ret
0x0000000000476d69 : xchg eax, esp ; ret 0x8041
0x000000000040806a : xchg eax, esp ; ret 0x8445
0x00000000004b1d81 : xchg eax, esp ; ret 0xb60f
0x0000000000472e1e : xchg eax, esp ; ret 0xb740
0x0000000000408e3b : xchg eax, esp ; ret 0xd284
0x00000000004ab27c : xchg eax, esp ; ret 0xe280
0x0000000000444c1b : xchg eax, esp ; ret 0xffff
0x000000000044d785 : xchg eax, esp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000449372 : xchg eax, esp ; xor byte ptr [rcx - 0x70f05fbb], cl ; ret 2
0x000000000048cb7a : xchg eax, r11d ; ret
0x0000000000452d27 : xchg eax, r12d ; int 6
0x000000000047cdc9 : xchg eax, r12d ; jmp 0x47d839
0x000000000044c02f : xlatb ; add al, 0 ; add byte ptr [rbx - 0x3dd247bb], cl ; ret
0x0000000000479ca1 : xlatb ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x000000000045a160 : xlatb ; or esi, esi ; enter 0x4c42, 0x29 ; ret 0x2948
0x00000000004ab83e : xlatb ; or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x000000000040c6ac : xlatb ; ret 0x558a
0x000000000040c23a : xlatb ; ret 0x8589
0x000000000042c293 : xlatb ; ret 0x89b5
0x000000000040c76e : xlatb ; ret 0xe0e9
0x000000000048405a : xlatb ; sti ; ret 0x89f1
0x0000000000485e94 : xlatb ; sti ; ret 0xb9f1
0x00000000004081a6 : xlatb ; xor eax, 0xab80000 ; ret 0xaa0f
0x000000000046454d : xor al, 0x72 ; jl 0x464510 ; ret 0x8237
0x000000000045be5a : xor al, 0xffffffffffffffb9 ; ret 0xc26e
0x00000000004440be : xor al, byte ptr [rax] ; add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; call qword ptr [rax]
0x0000000000472e19 : xor al, byte ptr [rbx - 0x6bf0fd12] ; ret 0xb740
0x00000000004c8f11 : xor bh, bl ; jmp rsi
0x00000000004676b7 : xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004427ca : xor byte ptr [rax + 1], dh ; ret 0xea81
0x0000000000452003 : xor byte ptr [rax - 0x75], cl ; push rbp ; shr al, 1 ; ret
0x00000000004676b8 : xor byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000044431e : xor byte ptr [rax], al ; add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; call qword ptr [rax]
0x00000000004abbd6 : xor byte ptr [rbp - 0x77], cl ; ret
0x0000000000449373 : xor byte ptr [rcx - 0x70f05fbb], cl ; ret 2
0x00000000004c7164 : xor byte ptr [rcx - 8], dl ; jmp qword ptr [rax]
0x00000000004a52ab : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004ae490 : xor byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000043d5d3 : xor ch, cl ; ret
0x0000000000492737 : xor dh, dh ; ret 0x8589
0x00000000004932e1 : xor dh, dh ; ret 0xffbe
0x00000000004c8f10 : xor dil, bl ; jmp rsi
0x000000000045bf20 : xor dword ptr [rax - 0x77], ecx ; ror byte ptr [rax - 0x77], 1 ; in al, dx ; pop rbp ; ret
0x000000000044426a : xor dword ptr [rax], eax ; add bh, al ; test dword ptr [rcx + rdi*8 - 1], esi ; jmp rsi
0x0000000000408247 : xor eax, 0x1db80000 ; jbe 0x408294 ; ret 0x20b9
0x000000000047869e : xor eax, 0x7ab99ca8 ; ret
0x00000000004081a7 : xor eax, 0xab80000 ; ret 0xaa0f
0x0000000000463e26 : xor eax, 0xeb21b978 ; ret 0xb2b1
0x00000000004a1546 : xor eax, dword ptr [rcx - 0x77] ; ret 0x8141
0x0000000000457dc7 : xor ebx, dword ptr [rdi] ; jle 0x457d5a ; int 0x80
0x00000000004ab83d : xor edi, edx ; or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x000000000043b0ac : xor esi, edi ; jmp 0x4473a0
0x000000000043b185 : xor esi, edi ; jmp 0x4473a4
0x00000000004abb41 : xor esi, edi ; or eax, esi ; pop rbp ; ret
0x00000000004a153a : xor esp, dword ptr [rcx] ; ret 0x8941
0x0000000000492736 : xor r14b, r14b ; ret 0x8589
0x0000000000492aba : xor sil, sil ; ret 0x8589
0x00000000004932e0 : xor sil, sil ; ret 0xffbe
