0x000000000043b334 : adc ah, dl ; std ; call qword ptr [rax]
0x000000000043b559 : adc al, byte ptr [rax] ; add byte ptr [rax], dh ; ret 0xffff
0x000000000043b4d9 : adc byte ptr [rax], al ; add al, al ; and edi, edi ; call rax
0x000000000043b4e9 : adc byte ptr [rax], al ; add al, dl ; and edi, edi ; call qword ptr [rax]
0x0000000000403145 : adc byte ptr [rbx], dh ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x8589
0x00000000004103b0 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042419e : adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x000000000040d6f7 : adc cl, byte ptr [rax - 0x7d] ; ret 0xbe08
0x0000000000423b11 : adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x000000000042c23b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000403199 : adc dword ptr [rbx], esi ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x8589
0x00000000004052bc : adc dword ptr [rbx], esi ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xb1b9
0x0000000000424c9b : adc eax, 0x558abda1 ; ret
0x0000000000405821 : adc eax, 0x6bb80000 ; ret 0x5c54
0x0000000000428279 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000043bc13 : add ah, ah ; add eax, 0xcfa80000 ; std ; call qword ptr [rdx]
0x000000000043ba13 : add ah, ah ; add eax, dword ptr [rax] ; add byte ptr [rax], ch ; xchg eax, edi ; std ; call qword ptr [rcx]
0x000000000043c159 : add al, -1 ; call qword ptr [rdx]
0x000000000043b1f1 : add al, 0 ; add byte ptr [rax + 0x6f], dl ; cld ; call qword ptr [rax]
0x000000000043b1e1 : add al, 0 ; add byte ptr [rax], dh ; insb byte ptr [rdi], dx ; cld ; call rax
0x0000000000417b08 : add al, 0 ; add cl, ch ; ret
0x00000000004173e9 : add al, 0 ; add cl, ch ; ret 1
0x0000000000436bfa : add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000043c04f : add al, ah ; jrcxz 0x43c055 ; jmp rsi
0x000000000043b4db : add al, al ; and edi, edi ; call rax
0x0000000000412fad : add al, byte ptr [rax] ; add byte ptr [rbx + 0x152dc445], cl ; ret
0x000000000043751d : add al, byte ptr [rax] ; add byte ptr [rbx + 0x292db445], cl ; ret 0x12e1
0x000000000041422a : add al, byte ptr [rax] ; add cl, ch ; ret
0x0000000000406da7 : add al, ch ; ret
0x000000000040552e : add al, ch ; ret 0xffff
0x000000000043b3b3 : add al, dh ; loopne 0x43b3b9 ; jmp qword ptr [rax]
0x000000000043b4eb : add al, dl ; and edi, edi ; call qword ptr [rax]
0x0000000000432a45 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call rdi
0x0000000000430b51 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rax]
0x0000000000430b10 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rcx]
0x000000000042bf14 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000424ad9 : add bh, al ; test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x0000000000439f2f : add bl, dh ; ret
0x0000000000439c02 : add byte ptr [r8], al ; add byte ptr [rcx], al ; ret 0xea81
0x0000000000439e64 : add byte ptr [r8], al ; add byte ptr [rcx], ch ; ret 0x5589
0x000000000043b263 : add byte ptr [rax + 0x55], ah ; std ; call rax
0x000000000043b1f3 : add byte ptr [rax + 0x6f], dl ; cld ; call qword ptr [rax]
0x000000000043b3b0 : add byte ptr [rax + rax], cl ; add al, dh ; loopne 0x43b3bc ; jmp qword ptr [rax]
0x000000000043b2f3 : add byte ptr [rax - 0x4d], al ; std ; call qword ptr [rax]
0x000000000043b2e3 : add byte ptr [rax - 0x50], dh ; std ; call rax
0x000000000041466d : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x43a9
0x0000000000410b6c : add byte ptr [rax - 0x75], cl ; clc ; mov rsp, rbp ; pop rbp ; ret
0x0000000000407b26 : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000040566d : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000043b2a3 : add byte ptr [rax - 0x7d], dh ; std ; call rax
0x000000000043b332 : add byte ptr [rax], al ; adc ah, dl ; std ; call qword ptr [rax]
0x0000000000406da5 : add byte ptr [rax], al ; add al, ch ; ret
0x0000000000432a43 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call rdi
0x0000000000430b4f : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rax]
0x000000000042bf12 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000439f2d : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000041466b : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x43a9
0x0000000000407b24 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000040566b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x0000000000439f2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000410325 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000411b44 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004055f0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040d147 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000439f2c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000412fef : add byte ptr [rax], al ; add byte ptr [rbx + 0x162dc445], cl ; ret
0x000000000043762d : add byte ptr [rax], al ; add byte ptr [rbx + 0x2a2db445], cl ; ret 0x12e1
0x000000000041509e : add byte ptr [rax], al ; add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x000000000041076a : add byte ptr [rax], al ; add byte ptr [rbx + 0x3c2de845], cl ; ret 0xf857
0x00000000004107c2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x3d2de845], cl ; ret 0xf857
0x0000000000427ce2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040dfb8 : add byte ptr [rax], al ; add byte ptr [rbx - 0x15d27bbb], cl ; ret
0x0000000000414b56 : add byte ptr [rax], al ; add byte ptr [rbx - 0x1bd233bb], cl ; ret
0x0000000000414930 : add byte ptr [rax], al ; add byte ptr [rbx - 0x1cd233bb], cl ; ret
0x000000000042a6d3 : add byte ptr [rax], al ; add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x0000000000410f22 : add byte ptr [rax], al ; add byte ptr [rbx - 0x38d247bb], cl ; ret 0xb488
0x00000000004314cc : add byte ptr [rax], al ; add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x000000000042d3b3 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b72b8b], cl ; ret 0xb0
0x000000000042d039 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x000000000040bc15 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x000000000040bf54 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x000000000040544a : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x00000000004085c3 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x00000000004373a9 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75bb3bbb], cl ; ret
0x000000000040fc13 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x6348
0x0000000000439c03 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xea81
0x0000000000439e65 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x5589
0x000000000042be80 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8b48
0x000000000040bcbd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; lahf ; ret 0xd284
0x0000000000438fd1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000406304 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004168b2 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x00000000004054e2 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000436175 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000406f07 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000405555 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000430e1b : add byte ptr [rax], al ; add cl, ch ; ret
0x000000000043bb92 : add byte ptr [rax], al ; add eax, 0xbeb80000 ; std ; jmp rdi
0x0000000000416e80 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000427900 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406fb5 : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000432ea8 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004164a9 : add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040141b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000043c452 : add byte ptr [rax], al ; and al, 0xe ; add byte ptr [rax], al ; mov rdi, rdi ; call rdi
0x000000000043b3e2 : add byte ptr [rax], al ; in al, -2 ; jmp rax
0x000000000043bc12 : add byte ptr [rax], al ; in al, 5 ; add byte ptr [rax], al ; test al, -0x31 ; std ; call qword ptr [rdx]
0x0000000000401459 : add byte ptr [rax], al ; jmp 0x401439
0x0000000000414c1f : add byte ptr [rax], al ; jmp 0x41502f
0x0000000000430e17 : add byte ptr [rax], al ; jmp 0x430e26
0x000000000043b2a2 : add byte ptr [rax], al ; jo 0x43b22e ; std ; call rax
0x000000000043b2e2 : add byte ptr [rax], al ; jo 0x43b29b ; std ; call rax
0x000000000043b2f2 : add byte ptr [rax], al ; mov bl, -3 ; call qword ptr [rax]
0x0000000000430ebf : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000439c48 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x000000000043c456 : add byte ptr [rax], al ; mov rdi, rdi ; call rdi
0x0000000000407b25 : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000043b5aa : add byte ptr [rax], al ; nop ; fcos ; call qword ptr [rax]
0x000000000043b45a : add byte ptr [rax], al ; nop ; or bh, bh ; call rax
0x0000000000401ca9 : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000427ce3 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406a12 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000430a74 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000043b51a : add byte ptr [rax], al ; push rax ; jnp 0x43b523 ; call rax
0x000000000043b1f2 : add byte ptr [rax], al ; push rax ; outsd dx, dword ptr [rsi] ; cld ; call qword ptr [rax]
0x0000000000439f2e : add byte ptr [rax], al ; ret
0x000000000043b776 : add byte ptr [rax], al ; sbb ah, al ; cld ; call qword ptr [rdi]
0x000000000043b4da : add byte ptr [rax], al ; shl byte ptr [rcx], -1 ; call rax
0x000000000043bc16 : add byte ptr [rax], al ; test al, -0x31 ; std ; call qword ptr [rdx]
0x000000000043b362 : add byte ptr [rax], al ; xor bl, ah ; std ; call rax
0x000000000043ba17 : add byte ptr [rax], ch ; xchg eax, edi ; std ; call qword ptr [rcx]
0x000000000043b1e3 : add byte ptr [rax], dh ; insb byte ptr [rdi], dx ; cld ; call rax
0x000000000043b363 : add byte ptr [rax], dh ; jrcxz 0x43b368 ; call rax
0x000000000043b55b : add byte ptr [rax], dh ; ret 0xffff
0x00000000004134d7 : add byte ptr [rax], r8b ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000412faf : add byte ptr [rbx + 0x152dc445], cl ; ret
0x0000000000412ff1 : add byte ptr [rbx + 0x162dc445], cl ; ret
0x000000000043751f : add byte ptr [rbx + 0x292db445], cl ; ret 0x12e1
0x000000000043762f : add byte ptr [rbx + 0x2a2db445], cl ; ret 0x12e1
0x00000000004150a0 : add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x000000000041076c : add byte ptr [rbx + 0x3c2de845], cl ; ret 0xf857
0x00000000004107c4 : add byte ptr [rbx + 0x3d2de845], cl ; ret 0xf857
0x0000000000427ce4 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000406a13 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000430a75 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040dcfe : add byte ptr [rbx + 0x6f2d8445], cl ; test al, 0x34 ; ret
0x000000000040dd49 : add byte ptr [rbx + 0x702d8445], cl ; test al, 0x34 ; ret
0x000000000040e0e6 : add byte ptr [rbx - 0x14d27bbb], cl ; ret
0x000000000040dfba : add byte ptr [rbx - 0x15d27bbb], cl ; ret
0x0000000000414b58 : add byte ptr [rbx - 0x1bd233bb], cl ; ret
0x0000000000414932 : add byte ptr [rbx - 0x1cd233bb], cl ; ret
0x000000000042a6d5 : add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x000000000042a68a : add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x000000000040fdfd : add byte ptr [rbx - 0x32d247bb], cl ; mul dword ptr [rdi] ; ret 0x8589
0x000000000040fdb2 : add byte ptr [rbx - 0x33d247bb], cl ; mul dword ptr [rdi] ; ret 0x8589
0x0000000000410f24 : add byte ptr [rbx - 0x38d247bb], cl ; ret 0xb488
0x0000000000410ed9 : add byte ptr [rbx - 0x39d247bb], cl ; ret 0xb488
0x00000000004314ce : add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x0000000000439c49 : add byte ptr [rbx - 0x76b71fbb], cl ; in al, dx ; pop rbp ; ret
0x000000000042d3b5 : add byte ptr [rbx - 0x76b72b8b], cl ; ret 0xb0
0x000000000042d03b : add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x0000000000406d88 : add byte ptr [rbx - 0x81b4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000410231 : add byte ptr [rbx - 0xff4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040da99 : add byte ptr [rcx + 0x45c7d445], cl ; xchg eax, esp ; jmp 0x40da6d
0x000000000040bc17 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x000000000040bf56 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x000000000040544c : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x00000000004085c5 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x00000000004372a4 : add byte ptr [rcx - 0x75bb3bbb], cl ; pop rbp ; ret
0x00000000004373ab : add byte ptr [rcx - 0x75bb3bbb], cl ; ret
0x00000000004127b5 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004146ae : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004018e8 : add byte ptr [rcx], al ; ret
0x000000000040fc15 : add byte ptr [rcx], al ; ret 0x6348
0x0000000000439c05 : add byte ptr [rcx], al ; ret 0xea81
0x0000000000439e67 : add byte ptr [rcx], ch ; ret 0x5589
0x000000000042be82 : add byte ptr [rcx], ch ; ret 0x8b48
0x000000000040bcbf : add byte ptr [rdi], cl ; lahf ; ret 0xd284
0x0000000000438fd3 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000406306 : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004168b4 : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x00000000004054e4 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000436177 : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000406f09 : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000405557 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040c57a : add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004119a4 : add byte ptr [rdx], cl ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000043c453 : add byte ptr [rsi + rcx], ah ; add byte ptr [rax], al ; mov rdi, rdi ; call rdi
0x0000000000410250 : add ch, dh ; mov ah, -0x47 ; ret 0x66b4
0x0000000000424c0c : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x000000000040dc95 : add cl, ch ; ret
0x0000000000407fea : add cl, ch ; ret 1
0x0000000000430b0e : add dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rcx]
0x000000000040e0e4 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x14d27bbb], cl ; ret
0x00000000004372a2 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75bb3bbb], cl ; pop rbp ; ret
0x000000000041024f : add dword ptr [rax], eax ; cmc ; mov ah, -0x47 ; ret 0x66b4
0x000000000040e816 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000439152 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x000000000040d93b : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000043818e : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x000000000043b231 : add eax, 0x1f900000 ; std ; call qword ptr [rax]
0x00000000004018e4 : add eax, 0x23ba2e ; add ebx, esi ; ret
0x0000000000430a73 : add eax, 0x5d5b0000 ; ret
0x000000000043bb95 : add eax, 0xbeb80000 ; std ; jmp rdi
0x000000000043bc15 : add eax, 0xcfa80000 ; std ; call qword ptr [rdx]
0x000000000043b221 : add eax, 0xd4f00000 ; cld ; call rax
0x000000000043ba15 : add eax, dword ptr [rax] ; add byte ptr [rax], ch ; xchg eax, edi ; std ; call qword ptr [rcx]
0x0000000000432974 : add eax, dword ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000417c09 : add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x00000000004018ab : add eax, edx ; sar rax, 1 ; jne 0x4018bc ; pop rbp ; ret
0x00000000004018e9 : add ebx, esi ; ret
0x000000000043c139 : add edi, edi ; call rdx
0x0000000000401e2b : add esp, 0x10 ; pop rbp ; ret
0x00000000004146ac : add esp, 0x100 ; pop rbp ; ret
0x00000000004103ae : add esp, 0x110 ; pop rbp ; ret
0x00000000004085ef : add esp, 0x180 ; pop rbp ; ret
0x0000000000417974 : add esp, 0x190 ; pop rbp ; ret
0x000000000042c0ec : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000412bfc : add esp, 0x1c0 ; pop rbp ; ret
0x000000000040e6ce : add esp, 0x1e0 ; pop rbp ; ret
0x000000000041625d : add esp, 0x20 ; pop rbp ; ret
0x000000000040faea : add esp, 0x290 ; pop rbp ; ret
0x0000000000412029 : add esp, 0x2c0 ; pop rbp ; ret
0x0000000000406fb8 : add esp, 0x40 ; pop rbp ; ret
0x0000000000436df9 : add esp, 0x440 ; pop rbp ; ret
0x000000000040713a : add esp, 0x50 ; pop rbp ; ret
0x0000000000430a70 : add esp, 0x598 ; pop rbx ; pop rbp ; ret
0x000000000042d160 : add esp, 0x60 ; pop rbp ; ret
0x00000000004164ac : add esp, 0x70 ; pop rbp ; ret
0x000000000041620f : add esp, 0x80 ; pop rbp ; ret
0x0000000000416e0d : add esp, 0x90 ; pop rbp ; ret
0x000000000042a3d6 : add esp, 0xa0 ; pop rbp ; ret
0x0000000000401ca5 : add esp, 0xb0 ; pop rbp ; ret
0x000000000041858a : add esp, 0xd0 ; pop rbp ; ret
0x0000000000407722 : add esp, 0xe0 ; pop rbp ; ret
0x0000000000416a7e : add esp, 0xf0 ; pop rbp ; ret
0x0000000000418b93 : add esp, 8 ; pop rbp ; ret
0x000000000040141e : add esp, 8 ; ret
0x00000000004018aa : add rax, rdx ; sar rax, 1 ; jne 0x4018bd ; pop rbp ; ret
0x0000000000401e2a : add rsp, 0x10 ; pop rbp ; ret
0x00000000004146ab : add rsp, 0x100 ; pop rbp ; ret
0x00000000004103ad : add rsp, 0x110 ; pop rbp ; ret
0x00000000004085ee : add rsp, 0x180 ; pop rbp ; ret
0x0000000000417973 : add rsp, 0x190 ; pop rbp ; ret
0x000000000042c0eb : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000412bfb : add rsp, 0x1c0 ; pop rbp ; ret
0x000000000040e6cd : add rsp, 0x1e0 ; pop rbp ; ret
0x000000000041625c : add rsp, 0x20 ; pop rbp ; ret
0x000000000040fae9 : add rsp, 0x290 ; pop rbp ; ret
0x0000000000412028 : add rsp, 0x2c0 ; pop rbp ; ret
0x0000000000406fb7 : add rsp, 0x40 ; pop rbp ; ret
0x0000000000436df8 : add rsp, 0x440 ; pop rbp ; ret
0x0000000000407139 : add rsp, 0x50 ; pop rbp ; ret
0x0000000000430a6f : add rsp, 0x598 ; pop rbx ; pop rbp ; ret
0x000000000042d15f : add rsp, 0x60 ; pop rbp ; ret
0x00000000004164ab : add rsp, 0x70 ; pop rbp ; ret
0x000000000041620e : add rsp, 0x80 ; pop rbp ; ret
0x0000000000416e0c : add rsp, 0x90 ; pop rbp ; ret
0x000000000042a3d5 : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000401ca4 : add rsp, 0xb0 ; pop rbp ; ret
0x0000000000418589 : add rsp, 0xd0 ; pop rbp ; ret
0x0000000000407721 : add rsp, 0xe0 ; pop rbp ; ret
0x0000000000416a7d : add rsp, 0xf0 ; pop rbp ; ret
0x0000000000418b92 : add rsp, 8 ; pop rbp ; ret
0x000000000040141d : add rsp, 8 ; ret
0x000000000043c454 : and al, 0xe ; add byte ptr [rax], al ; mov rdi, rdi ; call rdi
0x0000000000439c0d : and al, 0xffffffffffffff81 ; ret 0x61
0x000000000040d93a : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000043818d : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000406a10 : and byte ptr [rax], cl ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000042cd6b : and byte ptr [rsi + 0x58], ah ; jb 0x42cda2 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000423e41 : and eax, 0x75b4b9d3 ; ret
0x0000000000430ebd : and eax, 0x8b000000 ; in al, dx ; pop rbp ; ret
0x000000000040d41b : and eax, 0xe9000005 ; ret 1
0x00000000004018e7 : and eax, dword ptr [rax] ; add ebx, esi ; ret
0x000000000043b4ed : and edi, edi ; call qword ptr [rax]
0x000000000043b4dd : and edi, edi ; call rax
0x000000000040552f : call 0x401782
0x000000000042d165 : call 0x42d229
0x00000000004070e6 : call 0x4902fa36
0x00000000004070e5 : call 0x4902fa37
0x0000000000432d9d : call 0xffffffffaca3efd1
0x0000000000432d9c : call 0xffffffffaca3efd2
0x00000000004278f9 : call 0xffffffffe9050249
0x00000000004278f8 : call 0xffffffffe905024a
0x0000000000439f09 : call qword ptr [r12 + rbx*8]
0x0000000000430b57 : call qword ptr [rax]
0x000000000040c419 : call qword ptr [rbx]
0x000000000040cd9c : call qword ptr [rcx]
0x0000000000405604 : call qword ptr [rdi]
0x000000000040d084 : call qword ptr [rdx]
0x000000000040ad3a : call qword ptr [rsi]
0x0000000000439f0a : call qword ptr [rsp + rbx*8]
0x000000000040190d : call rax
0x000000000040f7cd : call rcx
0x000000000040fb8a : call rdi
0x00000000004261f5 : call rdx
0x0000000000406c58 : call rsi
0x0000000000406bff : call rsp
0x0000000000436df7 : clc ; add rsp, 0x440 ; pop rbp ; ret
0x000000000042c4c7 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x0000000000433789 : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x0000000000407720 : clc ; add rsp, 0xe0 ; pop rbp ; ret
0x0000000000417f8c : clc ; add rsp, 0xf0 ; pop rbp ; ret
0x00000000004018af : clc ; jne 0x4018b8 ; pop rbp ; ret
0x000000000043111e : clc ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000410b70 : clc ; mov rsp, rbp ; pop rbp ; ret
0x000000000041a3cd : clc ; ret 0x77a8
0x000000000040fae8 : cld ; add rsp, 0x290 ; pop rbp ; ret
0x000000000043732f : cld ; add rsp, 0xb0 ; pop rbp ; ret
0x00000000004333de : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x00000000004341fd : cld ; add rsp, 0xf0 ; pop rbp ; ret
0x000000000043b1f6 : cld ; call qword ptr [rax]
0x000000000043b77a : cld ; call qword ptr [rdi]
0x000000000043b1e6 : cld ; call rax
0x00000000004150cf : cld ; jmp 0x41513c
0x00000000004150ce : cld ; jmp 0x41513d
0x000000000043b1de : cld ; push qword ptr [rax + 0x30000004] ; insb byte ptr [rdi], dx ; cld ; call rax
0x000000000043b1ee : cld ; push rax ; add al, 0 ; add byte ptr [rax + 0x6f], dl ; cld ; call qword ptr [rax]
0x000000000042cd70 : cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000439c0c : cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x0000000000414dc8 : cmc ; jmp 0x41502f
0x0000000000414dc7 : cmc ; jmp 0x415030
0x0000000000410251 : cmc ; mov ah, -0x47 ; ret 0x66b4
0x000000000042bc8b : cmc ; ret 0x4f0b
0x0000000000414670 : cmp al, 0x25 ; ret 0x43a9
0x00000000004251de : cmp al, ch ; ret
0x0000000000433a58 : cmp ch, al ; ret 0x5f
0x000000000042be21 : cmp cl, byte ptr [rsi - 0x946182f] ; ret 0x4f0b
0x000000000042de27 : cmp dl, al ; ret
0x000000000042fef9 : cmp eax, 0xb95a1a7d ; salc ; jmp qword ptr [rdi]
0x000000000040186d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401880 ; pop rbp ; ret
0x0000000000424c97 : cmp esp, dword ptr [rbp - 0x47] ; push -0x75425eeb ; push rbp ; ret
0x0000000000403147 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x8589
0x00000000004052be : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xb1b9
0x0000000000430a72 : cwde ; add eax, 0x5d5b0000 ; ret
0x0000000000412eac : dec dword ptr [r15] ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000042419b : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x0000000000423b0e : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x00000000004251db : dec dword ptr [rax - 0x75] ; cmp al, ch ; ret
0x0000000000424313 : dec dword ptr [rax - 0x75] ; or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x000000000042ce9d : dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000040cf06 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000436956 : dec dword ptr [rax - 0x77] ; ret 0x8148
0x0000000000406803 : dec dword ptr [rax - 0x77] ; ret 0x858a
0x0000000000412b9a : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000406d8e : dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004067fd : dec dword ptr [rax - 0x7fc6b] ; dec dword ptr [rax - 0x77] ; ret 0x858a
0x000000000040c04a : dec dword ptr [rax - 1] ; ret 0x8948
0x0000000000414db0 : dec dword ptr [rbx - 0x1076b] ; dec dword ptr [rdi] ; ret 0x4589
0x0000000000405f80 : dec dword ptr [rbx - 0x7a363] ; dec dword ptr [rdi] ; ret
0x00000000004020a2 : dec dword ptr [rcx - 0x76b773bb] ; in al, dx ; pop rbp ; ret
0x000000000042bc86 : dec dword ptr [rcx - 0xa167e3f] ; ret 0x4f0b
0x0000000000412ead : dec dword ptr [rdi] ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000405f86 : dec dword ptr [rdi] ; ret
0x0000000000414db6 : dec dword ptr [rdi] ; ret 0x4589
0x000000000041a0aa : dec dword ptr [rdi] ; test byte ptr [rcx], ch ; ret 0
0x000000000040d418 : dec dword ptr [rdi] ; test byte ptr [rip - 0x16fffffb], ah ; ret 1
0x000000000043276e : dec dword ptr [rdi] ; xchg eax, esp ; ret
0x0000000000406455 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x00000000004168dc : enter 0, 0 ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000041016f : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004363d9 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004183a9 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000043798c : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000432750 : fbld dword ptr [rcx] ; ret 0x941
0x000000000043b5ad : fcos ; call qword ptr [rax]
0x000000000043bf09 : fdivr st(6) ; call rdx
0x00000000004063ba : fild qword ptr [rsi] ; loop 0x40637b ; ret 0x9d55
0x00000000004063b9 : fild qword ptr [rsi] ; loop 0x40637c ; ret 0x9d55
0x000000000043272f : fild word ptr [rcx - 0x77] ; ret
0x0000000000430cdb : fisttp dword ptr [rbp - 0x77] ; sbb al, bh ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rbx]
0x0000000000413fe0 : fld qword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004381c8 : fld qword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000437381 : fmul dword ptr [r8 - 0x77] ; ret 0x8148
0x0000000000407116 : fmul dword ptr [r8 - 0x77] ; ret 0xb0
0x00000000004311b7 : fmul dword ptr [r9 - 0x57167e3f] ; ret
0x0000000000437382 : fmul dword ptr [rax - 0x77] ; ret 0x8148
0x0000000000407117 : fmul dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000411c17 : fmul dword ptr [rax - 0x7f] ; ret 1
0x0000000000417f20 : fmul dword ptr [rax - 1] ; ret 0x8948
0x00000000004311b8 : fmul dword ptr [rcx - 0x57167e3f] ; ret
0x0000000000439f0c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000416d67 : fsub st(1), st(0) ; mov ebx, 0xb8000000 ; ret 0xebc8
0x000000000042d2b7 : fsubr st(0) ; ret
0x0000000000401e29 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000043171c : hlt ; add rsp, 0xe0 ; pop rbp ; ret
0x0000000000418b91 : hlt ; add rsp, 8 ; pop rbp ; ret
0x0000000000401880 : hlt ; pop rbp ; mov edi, 0x63d2a8 ; jmp rax
0x000000000042ce9b : idiv edi ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x0000000000406d8c : idiv edi ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000043b3e5 : in al, -2 ; jmp rax
0x00000000004162d8 : in al, 0x2d ; ret 0xc226
0x0000000000433b41 : in al, 0x48 ; add esp, 0xb0 ; pop rbp ; ret
0x000000000040930a : in al, 0x68 ; ret
0x000000000043bc14 : in al, 5 ; add byte ptr [rax], al ; test al, -0x31 ; std ; call qword ptr [rdx]
0x0000000000437dc8 : in al, dx ; add rsp, 0xb0 ; pop rbp ; ret
0x0000000000432e5c : in al, dx ; jmp 0x432ed9
0x0000000000432e5b : in al, dx ; jmp 0x432eda
0x00000000004020a8 : in al, dx ; pop rbp ; ret
0x000000000043b3f5 : in eax, -2 ; jmp qword ptr [rax]
0x000000000040bc13 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x000000000040bcbb : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; lahf ; ret 0xd284
0x000000000040b51d : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040f63e : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000043b3af : inc dword ptr [rax] ; or al, 0 ; add al, dh ; loopne 0x43b3bd ; jmp qword ptr [rax]
0x0000000000412962 : inc dword ptr [rcx + 0xf] ; ret 0x4589
0x0000000000404eed : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8445
0x0000000000405553 : inc dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000406302 : inc dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004054e0 : inc dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000430ba9 : inc edi ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rbx]
0x000000000043b1e5 : insb byte ptr [rdi], dx ; cld ; call rax
0x000000000042d8e6 : insb byte ptr [rdi], dx ; ret 0x9e6d
0x0000000000403a76 : insd dword ptr [rdi], dx ; ret 0x89ec
0x000000000042d93a : insd dword ptr [rdi], dx ; ret 0x9e6d
0x0000000000405d55 : insd dword ptr [rdi], dx ; ret 0xb9ec
0x0000000000429da7 : int 0x5b
0x000000000040f687 : int 0xe0
0x000000000040fe02 : int 0xf7
0x0000000000414f32 : int1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000043bc19 : iretd ; std ; call qword ptr [rdx]
0x0000000000401873 : ja 0x40187a ; pop rbp ; ret
0x0000000000401419 : jae 0x401425 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000042cd6e : jb 0x42cd9f ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000040187f : je 0x40187d ; pop rbp ; mov edi, 0x63d2a8 ; jmp rax
0x0000000000423236 : jge 0x4231bb ; ret 0xffd5
0x0000000000423d00 : jge 0x423ce0 ; shr cl, cl ; ret 0x3b
0x000000000040145b : jmp 0x401437
0x0000000000406da3 : jmp 0x406e0d
0x000000000040ca6c : jmp 0x40d120
0x000000000040daa0 : jmp 0x40da66
0x000000000040e0eb : jmp 0x40e0b1
0x0000000000412984 : jmp 0x412c66
0x0000000000413283 : jmp 0x413528
0x0000000000414451 : jmp 0x41473f
0x0000000000414669 : jmp 0x414740
0x0000000000414cd4 : jmp 0x41502d
0x0000000000414dc9 : jmp 0x41502e
0x00000000004150d0 : jmp 0x41513b
0x0000000000416d4e : jmp 0x416e2e
0x0000000000424450 : jmp 0x4278d0
0x0000000000422354 : jmp 0x4278d1
0x0000000000423721 : jmp 0x4278d2
0x000000000042b0ab : jmp 0x42bb17
0x000000000042afe8 : jmp 0x42bb19
0x000000000042d113 : jmp 0x42d178
0x000000000042fbab : jmp 0x430cf0
0x00000000004305c6 : jmp 0x430cf1
0x0000000000430e19 : jmp 0x430e24
0x0000000000432e5d : jmp 0x432ed8
0x0000000000436c96 : jmp 0x436f78
0x00000000004371f8 : jmp 0x4373e8
0x000000000043780e : jmp 0x437a89
0x000000000042bc8a : jmp 0x4f4e7f86
0x0000000000416294 : jmp 0xffffffffb603895d
0x0000000000410a59 : jmp 0xffffffffc321f78f
0x000000000043251f : jmp 0xffffffffc4075be6
0x0000000000427225 : jmp qword ptr [rax]
0x000000000043bdab : jmp qword ptr [rbx]
0x0000000000419022 : jmp qword ptr [rcx]
0x0000000000406384 : jmp qword ptr [rdi]
0x000000000042bf1a : jmp qword ptr [rdx]
0x0000000000401887 : jmp rax
0x0000000000423828 : jmp rbx
0x0000000000411200 : jmp rcx
0x0000000000423882 : jmp rdi
0x00000000004018c7 : jmp rdx
0x000000000043c053 : jmp rsi
0x0000000000406d51 : jmp rsp
0x00000000004018b0 : jne 0x4018b7 ; pop rbp ; ret
0x0000000000414395 : jnp 0x4143b3 ; ret
0x0000000000414457 : jnp 0x414475 ; ret
0x000000000043b51d : jnp 0x43b520 ; call rax
0x00000000004164ae : jo 0x41650f ; ret
0x000000000041d14e : jo 0x41d15a ; ret
0x000000000041edbe : jo 0x41edca ; ret
0x000000000042230d : jo 0x422319 ; ret
0x00000000004295f4 : jo 0x429655 ; ret
0x000000000043b2a4 : jo 0x43b22c ; std ; call rax
0x000000000043b2e4 : jo 0x43b299 ; std ; call rax
0x00000000004092b6 : jrcxz 0x409322 ; ret
0x000000000043b365 : jrcxz 0x43b366 ; call rax
0x000000000043c051 : jrcxz 0x43c053 ; jmp rsi
0x000000000040bcc1 : lahf ; ret 0xd284
0x0000000000423cfe : lcall ptr [rbx - 0x162d2583] ; ret 0x3b
0x0000000000424dfe : lcall ptr [rsi] ; pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x00000000004158d6 : lea eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000419a45 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004298e9 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000419a44 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000041466a : leave ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x43a9
0x00000000004373ad : les r8d, ptr [r10 + rcx*4 + 0x4d] ; ret
0x00000000004372a6 : les r8d, ptr [r10 + rcx*4 + 0x5d] ; ret
0x0000000000408654 : ljmp ptr [rcx] ; ret 0x5189
0x000000000042265e : ljmp ptr [rdi] ; ret 0x23da
0x000000000043b4e8 : lock adc byte ptr [rax], al ; add al, dl ; and edi, edi ; call qword ptr [rax]
0x000000000043b2f0 : lock or byte ptr [rax], al ; add byte ptr [rax - 0x4d], al ; std ; call qword ptr [rax]
0x00000000004063bc : loop 0x406379 ; ret 0x9d55
0x00000000004063bb : loop 0x40637a ; ret 0x9d55
0x0000000000425665 : loope 0x425633 ; jmp 0x4278d3
0x0000000000407724 : loopne 0x40772b ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040e6d0 : loopne 0x40e6d8 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041625b : loopne 0x4162ab ; add esp, 0x20 ; pop rbp ; ret
0x000000000041625a : loopne 0x4162ac ; add esp, 0x20 ; pop rbp ; ret
0x0000000000419a43 : loopne 0x419a96 ; lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000428fed : loopne 0x429053 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042a3d4 : loopne 0x42a427 ; add esp, 0xa0 ; pop rbp ; ret
0x000000000042c7d3 : loopne 0x42c7dc ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042d15e : loopne 0x42d1ae ; add esp, 0x60 ; pop rbp ; ret
0x000000000042d15d : loopne 0x42d1af ; add esp, 0x60 ; pop rbp ; ret
0x0000000000431720 : loopne 0x431727 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004333e2 : loopne 0x4333e9 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000439c4c : loopne 0x439c9b ; mov esp, ebp ; pop rbp ; ret
0x0000000000439c4b : loopne 0x439c9c ; mov esp, ebp ; pop rbp ; ret
0x0000000000439e9c : loopne 0x439eeb ; mov esp, ebp ; pop rbp ; ret
0x0000000000439e9b : loopne 0x439eec ; mov esp, ebp ; pop rbp ; ret
0x000000000043b3b5 : loopne 0x43b3b7 ; jmp qword ptr [rax]
0x0000000000410252 : mov ah, -0x47 ; ret 0x66b4
0x000000000042322d : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000423307 : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000043745c : mov ah, 0x2d ; ret
0x00000000004212b5 : mov ah, 0x75 ; ret
0x0000000000429dc3 : mov al, -0x47 ; ret
0x000000000043b2e5 : mov al, -3 ; call rax
0x000000000043645f : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000401ca7 : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040552d : mov al, 0 ; call 0x401784
0x000000000043b4d8 : mov al, 0x10 ; add byte ptr [rax], al ; shl byte ptr [rcx], -1 ; call rax
0x000000000043b518 : mov al, 0x11 ; add byte ptr [rax], al ; push rax ; jnp 0x43b525 ; call rax
0x000000000040d1f9 : mov al, 0x2d ; ret
0x000000000043b360 : mov al, 0xa ; add byte ptr [rax], al ; xor bl, ah ; std ; call rax
0x000000000043b458 : mov al, 0xe ; add byte ptr [rax], al ; nop ; or bh, bh ; call rax
0x000000000043b2a0 : mov al, 7 ; add byte ptr [rax], al ; jo 0x43b230 ; std ; call rax
0x000000000043b2e0 : mov al, 8 ; add byte ptr [rax], al ; jo 0x43b29d ; std ; call rax
0x00000000004384bd : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000043818a : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004383ed : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000043b2f5 : mov bl, -3 ; call qword ptr [rax]
0x000000000041ac55 : mov bl, 0x75 ; ret
0x0000000000410769 : mov byte ptr [rax], 0 ; add byte ptr [rbx + 0x3c2de845], cl ; ret 0xf857
0x000000000043780b : mov byte ptr [rbp - 0x45], cl ; jmp 0x437a8c
0x00000000004018e3 : mov byte ptr [rip + 0x23ba2e], 1 ; ret
0x0000000000406d8a : mov ch, -0x1c ; idiv edi ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000422aaf : mov ch, byte ptr [rdx - 0x47] ; pop rbp ; pop rcx ; ret 0x1b2
0x0000000000417f1c : mov cs, word ptr [rax - 0x75] ; push rbp ; fmul dword ptr [rax - 1] ; ret 0x8948
0x000000000040e818 : mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000439154 : mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x000000000040d93d : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000438190 : mov dh, -0x40 ; pop rbp ; ret
0x0000000000439c0a : mov dl, -0x34 ; cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x000000000040c2f4 : mov dl, -0x5c ; ret
0x0000000000438e81 : mov dr1, word ptr [rcx + rcx*4 - 0x7bf05bbb] ; ret 2
0x00000000004191c9 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000418d9f : mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x0000000000432e5a : mov dword ptr [rbp - 0x14], eax ; jmp 0x432edb
0x0000000000416259 : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000414cd1 : mov dword ptr [rbp - 0x24], eax ; jmp 0x415030
0x0000000000416d4b : mov dword ptr [rbp - 0x24], eax ; jmp 0x416e31
0x000000000042b0a8 : mov dword ptr [rbp - 0x6c], eax ; jmp 0x42bb1a
0x00000000004020a3 : mov dword ptr [rbp - 0x74], eax ; mov rsp, rbp ; pop rbp ; ret
0x0000000000401e27 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000412db9 : mov dword ptr [rcx + 0x18], eax ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004194a6 : mov dword ptr [rcx + 0x30], eax ; mov rsp, rbp ; pop rbp ; ret
0x0000000000407137 : mov dword ptr [rcx], eax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040d144 : mov dword ptr [rdi + 0x10], 0 ; pop rbp ; ret
0x000000000041904d : mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000040fdb5 : mov eax, 0x27f7cc2d ; ret 0x8589
0x000000000040fe00 : mov eax, 0x27f7cd2d ; ret 0x8589
0x00000000004188c9 : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042cfdb : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000430ec1 : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000042d1ae : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000415ede : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000432cd5 : mov eax, dword ptr [rbp - 0x18] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004191cc : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000042d15c : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000439c4a : mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042d371 : mov eax, dword ptr [rbp - 0x2c] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041904f : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000418b8f : mov eax, dword ptr [rbp - 0xc] ; add rsp, 8 ; pop rbp ; ret
0x000000000043111c : mov eax, dword ptr [rbp - 8] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000410b6e : mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000041904e : mov eax, dword ptr ds:[rbp - 0x38] ; pop rbp ; ret
0x0000000000425a68 : mov ebp, 0xe19c53ba ; ret
0x0000000000406da2 : mov ebp, ecx ; pop rdi ; add byte ptr [rax], al ; add al, ch ; ret
0x000000000040190b : mov ebp, esp ; call rax
0x0000000000401871 : mov ebp, esp ; ja 0x40187c ; pop rbp ; ret
0x0000000000416d69 : mov ebx, 0xb8000000 ; ret 0xebc8
0x0000000000418d9c : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x000000000040552b : mov ecx, eax ; mov al, 0 ; call 0x401786
0x0000000000401905 : mov edi, 0x63ce20 ; mov rbp, rsp ; call rax
0x0000000000401882 : mov edi, 0x63d2a8 ; jmp rax
0x00000000004018c2 : mov edi, 0x63d2a8 ; jmp rdx
0x000000000042fa26 : mov edi, 0xb8000012 ; insd dword ptr [rdi], dx ; ret 0x9e6d
0x0000000000422307 : mov edi, 0xb8000055 ; wait ; jo 0x42231f ; ret
0x0000000000439f07 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000043c459 : mov edi, edi ; call rdi
0x0000000000439f06 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000436c0e : mov edx, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000422acb : mov edx, 0x595db993 ; ret 0x8b48
0x00000000004018e6 : mov edx, 0xf3010023 ; ret
0x0000000000423942 : mov esi, 0x39443e04 ; ret 0xf41
0x0000000000436bf7 : mov esi, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x00000000004018c0 : mov esi, eax ; mov edi, 0x63d2a8 ; jmp rdx
0x0000000000404f47 : mov esp, 0xb800001e ; ret 0xab63
0x0000000000437414 : mov esp, 0xe981c189 ; ret 0x6b4f
0x00000000004020a7 : mov esp, ebp ; pop rbp ; ret
0x0000000000412db8 : mov qword ptr [rcx + 0x18], rax ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004194a5 : mov qword ptr [rcx + 0x30], rax ; mov rsp, rbp ; pop rbp ; ret
0x0000000000407136 : mov qword ptr [rcx], rax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040d143 : mov qword ptr [rdi + 0x10], 0 ; pop rbp ; ret
0x000000000043745b : mov r12b, 0x2d ; ret
0x0000000000437413 : mov r12d, 0xe981c189 ; ret 0x6b4f
0x000000000040d1f8 : mov r8b, 0x2d ; ret
0x000000000040fdb4 : mov r8d, 0x27f7cc2d ; ret 0x8589
0x000000000040fdff : mov r8d, 0x27f7cd2d ; ret 0x8589
0x00000000004188c8 : mov rax, qword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042cfda : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042d1ad : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000415edd : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000042d15b : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000410b6d : mov rax, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040190a : mov rbp, rsp ; call rax
0x0000000000401870 : mov rbp, rsp ; ja 0x40187d ; pop rbp ; ret
0x000000000040552a : mov rcx, rax ; mov al, 0 ; call 0x401787
0x000000000043c458 : mov rdi, rdi ; call rdi
0x00000000004018bf : mov rsi, rax ; mov edi, 0x63d2a8 ; jmp rdx
0x00000000004020a6 : mov rsp, rbp ; pop rbp ; ret
0x00000000004020a4 : mov word ptr [r8 - 0x77], cs ; in al, dx ; pop rbp ; ret
0x000000000042cd71 : mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004020a5 : mov word ptr [rax - 0x77], cs ; in al, dx ; pop rbp ; ret
0x00000000004323c1 : movabs al, byte ptr [0xe9ffffff38858948] ; ret 6
0x000000000041e5a8 : movabs byte ptr [0x840ffffff3c48589], al ; ret 0x4b
0x0000000000412983 : movsb byte ptr [rdi], byte ptr [rsi] ; jmp 0x412c67
0x000000000040c2f5 : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004217f5 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x6a8a
0x000000000040e817 : movzx eax, al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000439153 : movzx eax, al ; add rsp, 8 ; pop rbp ; ret
0x000000000040d93c : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000043818f : movzx eax, al ; pop rbp ; ret
0x00000000004101ce : mul dword ptr [rdi] ; ret 0x3d48
0x000000000040fdb8 : mul dword ptr [rdi] ; ret 0x8589
0x0000000000436a08 : neg byte ptr [rsi + 0x2948e012] ; ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x000000000043b5ac : nop ; fcos ; call qword ptr [rax]
0x000000000043b45c : nop ; or bh, bh ; call rax
0x000000000041aa95 : nop ; ret
0x0000000000428ea2 : nop ; ret 0x148
0x0000000000428eb6 : nop ; ret 0x2948
0x0000000000439f28 : nop dword ptr [rax + rax] ; ret
0x000000000043b3b1 : or al, 0 ; add al, dh ; loopne 0x43b3bb ; jmp qword ptr [rax]
0x000000000042322a : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000423304 : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000043c04d : or al, byte ptr [rax] ; add al, ah ; jrcxz 0x43c057 ; jmp rsi
0x000000000043b361 : or al, byte ptr [rax] ; add byte ptr [rax], dh ; jrcxz 0x43b36a ; call rax
0x00000000004373be : or al, byte ptr [rdx + rcx*4 + 0x4d] ; ret 0x8b48
0x00000000004372b7 : or al, byte ptr [rdx + rcx*4 + 0x5d] ; ret 0x8b48
0x0000000000432a85 : or bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x000000000043b45d : or bh, bh ; call rax
0x0000000000418da0 : or byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000043b2f1 : or byte ptr [rax], al ; add byte ptr [rax - 0x4d], al ; std ; call qword ptr [rax]
0x000000000043b2e1 : or byte ptr [rax], al ; add byte ptr [rax - 0x50], dh ; std ; call rax
0x0000000000406a11 : or byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000042a688 : or byte ptr [rax], al ; add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x0000000000432a84 : or dil, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x0000000000413ec0 : or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x00000000004070d1 : or dword ptr [rax - 0x77], ecx ; ret 0x8148
0x00000000004194a4 : or dword ptr [rax - 0x77], ecx ; xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000410ed7 : or dword ptr [rax], eax ; add byte ptr [rbx - 0x39d247bb], cl ; ret 0xb488
0x000000000041904b : or edi, eax ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000437920 : or esp, 0x1481f65 ; ret 0x8948
0x000000000041231a : out 0x3c, al ; ret
0x0000000000412365 : out 0x3c, eax ; ret
0x0000000000424c0b : out dx, al ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x000000000043818c : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004384bf : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000429dc2 : out dx, eax ; mov al, -0x47 ; ret
0x0000000000436bf9 : outsb dx, byte ptr [rsi] ; add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000425cf5 : outsb dx, byte ptr [rsi] ; ret 0x4861
0x000000000041a946 : outsb dx, byte ptr [rsi] ; ret 0x8961
0x0000000000425d40 : outsb dx, byte ptr [rsi] ; ret 0xe961
0x000000000042bf11 : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000043b1f5 : outsd dx, dword ptr [rsi] ; cld ; call qword ptr [rax]
0x0000000000436bfc : outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000040dd03 : outsd dx, dword ptr [rsi] ; test al, 0x34 ; ret
0x000000000042cd6c : pop ax ; jb 0x42cda1 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000426ba9 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000439f1c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000428fef : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000426bab : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000439f1e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000426bad : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000439f20 : pop r14 ; pop r15 ; ret
0x0000000000406a15 : pop r14 ; pop rbp ; ret
0x0000000000426baf : pop r15 ; pop rbp ; ret
0x0000000000439f22 : pop r15 ; ret
0x000000000042cd6d : pop rax ; jb 0x42cda0 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000043b275 : pop rax ; std ; call qword ptr [rax]
0x00000000004018e2 : pop rbp ; mov byte ptr [rip + 0x23ba2e], 1 ; ret
0x0000000000401881 : pop rbp ; mov edi, 0x63d2a8 ; jmp rax
0x00000000004018be : pop rbp ; mov rsi, rax ; mov edi, 0x63d2a8 ; jmp rdx
0x0000000000439f1b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000426bac : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000439f1f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000422ab2 : pop rbp ; pop rcx ; ret 0x1b2
0x000000000041ed85 : pop rbp ; pop rcx ; ret 0x8589
0x0000000000422ace : pop rbp ; pop rcx ; ret 0x8b48
0x0000000000401875 : pop rbp ; ret
0x000000000040309e : pop rbp ; ret 0x89bd
0x00000000004372ba : pop rbp ; ret 0x8b48
0x0000000000404f2a : pop rbp ; ret 0x8bbd
0x00000000004173e8 : pop rbx ; add al, 0 ; add cl, ch ; ret 1
0x0000000000428fee : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000427ce5 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406a14 : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000430a76 : pop rbx ; pop rbp ; ret
0x000000000042a690 : pop rbx ; ret
0x0000000000422ab3 : pop rcx ; ret 0x1b2
0x000000000041d186 : pop rcx ; ret 0x8589
0x0000000000422acf : pop rcx ; ret 0x8b48
0x0000000000424e00 : pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x0000000000406da4 : pop rdi ; add byte ptr [rax], al ; add al, ch ; ret
0x0000000000407b23 : pop rdi ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000426bb0 : pop rdi ; pop rbp ; ret
0x0000000000439f23 : pop rdi ; ret
0x0000000000426bae : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000439f21 : pop rsi ; pop r15 ; ret
0x0000000000406a16 : pop rsi ; pop rbp ; ret
0x0000000000426baa : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000439f1d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000428ff0 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041d185 : pop rsp ; pop rcx ; ret 0x8589
0x0000000000438fd5 : popfq ; ret 0xd284
0x0000000000422ab0 : push -0x47 ; pop rbp ; pop rcx ; ret 0x1b2
0x0000000000424c9a : push -0x75425eeb ; push rbp ; ret
0x00000000004217f8 : push -0x77 ; test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x000000000043b1df : push qword ptr [rax + 0x30000004] ; insb byte ptr [rdi], dx ; cld ; call rax
0x000000000043b35f : push qword ptr [rax + 0x3000000a] ; jrcxz 0x43b36c ; call rax
0x000000000043b557 : push qword ptr [rax + 0x30000012] ; ret 0xffff
0x000000000043b517 : push qword ptr [rax + 0x50000011] ; jnp 0x43b526 ; call rax
0x000000000043b25f : push qword ptr [rax + 0x60000006] ; push rbp ; std ; call rax
0x000000000043b2df : push qword ptr [rax + 0x70000008] ; mov al, -3 ; call rax
0x000000000043b4d7 : push qword ptr [rax - 0x3ffffff0] ; and edi, edi ; call rax
0x000000000043b457 : push qword ptr [rax - 0x6ffffff2] ; or bh, bh ; call rax
0x000000000043b4e7 : push rax ; adc byte ptr [rax], al ; add al, dl ; and edi, edi ; call qword ptr [rax]
0x000000000043b1ef : push rax ; add al, 0 ; add byte ptr [rax + 0x6f], dl ; cld ; call qword ptr [rax]
0x000000000043b22f : push rax ; add eax, 0x1f900000 ; std ; call qword ptr [rax]
0x000000000043b51c : push rax ; jnp 0x43b521 ; call rax
0x000000000043b2ef : push rax ; or byte ptr [rax], al ; add byte ptr [rax - 0x4d], al ; std ; call qword ptr [rax]
0x000000000043b1f4 : push rax ; outsd dx, dword ptr [rsi] ; cld ; call qword ptr [rax]
0x000000000040713c : push rax ; pop rbp ; ret
0x0000000000411c16 : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 1
0x0000000000417f1f : push rbp ; fmul dword ptr [rax - 1] ; ret 0x8948
0x0000000000401904 : push rbp ; mov edi, 0x63ce20 ; mov rbp, rsp ; call rax
0x0000000000424c9f : push rbp ; ret
0x0000000000424c36 : push rbp ; ret 0xd284
0x0000000000433a54 : push rbp ; ror byte ptr [rdi], -0x4a ; cmp ch, al ; ret 0x5f
0x000000000043b265 : push rbp ; std ; call rax
0x000000000042322f : push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000423309 : push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000436bfb : push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000040bc1a : pushfq ; ret 0x8445
0x0000000000406308 : pushfq ; ret 0xd284
0x0000000000401421 : ret
0x000000000041a0ae : ret 0
0x00000000004040bd : ret 0x12
0x0000000000437525 : ret 0x12e1
0x0000000000428ea3 : ret 0x148
0x0000000000425e04 : ret 0x1a
0x000000000041b07d : ret 0x1add
0x0000000000422ab5 : ret 0x1b2
0x00000000004036a2 : ret 0x201a
0x0000000000401662 : ret 0x23ba
0x0000000000401462 : ret 0x23bb
0x000000000041b9ca : ret 0x23da
0x000000000041442d : ret 0x254
0x000000000040a78a : ret 0x26
0x00000000004286c8 : ret 0x279e
0x00000000004070e9 : ret 0x2948
0x0000000000424e04 : ret 0x2a
0x0000000000402565 : ret 0x2b
0x0000000000423232 : ret 0x2d50
0x000000000043675e : ret 0x3040
0x0000000000409626 : ret 0x32
0x0000000000423d04 : ret 0x3b
0x00000000004101d0 : ret 0x3d48
0x0000000000420d65 : ret 0x3e
0x0000000000436e58 : ret 0x42e8
0x0000000000414672 : ret 0x43a9
0x0000000000410a5d : ret 0x4589
0x00000000004241a1 : ret 0x4802
0x0000000000436bfe : ret 0x4815
0x0000000000425cf6 : ret 0x4861
0x0000000000401f67 : ret 0x48f0
0x000000000041e5b1 : ret 0x4b
0x0000000000429bc7 : ret 0x4cc0
0x0000000000426c08 : ret 0x4cf0
0x000000000042bc8c : ret 0x4f0b
0x0000000000408656 : ret 0x5189
0x0000000000412016 : ret 0x54e8
0x0000000000418ffb : ret 0x5589
0x00000000004234ba : ret 0x5966
0x000000000042a8e7 : ret 0x5bc6
0x0000000000402bea : ret 0x5c54
0x0000000000433a5a : ret 0x5f
0x0000000000439c0f : ret 0x61
0x000000000040fc17 : ret 0x6348
0x000000000040ff47 : ret 0x66b4
0x000000000041a716 : ret 0x6a8a
0x0000000000437419 : ret 0x6b4f
0x000000000041a3ce : ret 0x77a8
0x000000000041b531 : ret 0x7a8a
0x00000000004221ab : ret 0x7b7f
0x0000000000428b5a : ret 0x8041
0x0000000000411dea : ret 0x80e8
0x0000000000428da2 : ret 0x8141
0x00000000004070d4 : ret 0x8148
0x00000000004240c4 : ret 0x822d
0x0000000000404ef1 : ret 0x8445
0x0000000000403148 : ret 0x8589
0x0000000000405dfa : ret 0x858a
0x000000000041b143 : ret 0x8940
0x0000000000430c9d : ret 0x8941
0x000000000040c04d : ret 0x8948
0x000000000043521f : ret 0x894a
0x000000000041a947 : ret 0x8961
0x0000000000416297 : ret 0x89b5
0x000000000040309f : ret 0x89bd
0x000000000040a320 : ret 0x89da
0x0000000000403a77 : ret 0x89ec
0x000000000042e448 : ret 0x89f1
0x0000000000436818 : ret 0x8a44
0x0000000000436715 : ret 0x8a4a
0x000000000040c8f4 : ret 0x8ada
0x0000000000405905 : ret 0x8b44
0x0000000000412b9d : ret 0x8b48
0x000000000042d567 : ret 0x8b4c
0x0000000000404f2b : ret 0x8bbd
0x0000000000408a83 : ret 0x8d9e
0x000000000040c8c8 : ret 0x8eb9
0x0000000000432752 : ret 0x941
0x0000000000430045 : ret 0x9589
0x0000000000404db5 : ret 0x9d55
0x000000000042d8e7 : ret 0x9e6d
0x000000000042330c : ret 0xa30b
0x0000000000402d39 : ret 0xab63
0x0000000000432d9f : ret 0xac60
0x0000000000410ae9 : ret 0xadb9
0x0000000000405670 : ret 0xb0
0x0000000000413223 : ret 0xb0ff
0x00000000004052bf : ret 0xb1b9
0x0000000000410edf : ret 0xb488
0x0000000000424c10 : ret 0xb740
0x0000000000412a15 : ret 0xb7b9
0x000000000042cd67 : ret 0xb848
0x0000000000422e40 : ret 0xb940
0x00000000004366a2 : ret 0xb94a
0x0000000000405d56 : ret 0xb9ec
0x00000000004302d6 : ret 0xb9f1
0x000000000040d6fa : ret 0xbe08
0x000000000042528c : ret 0xbf48
0x00000000004018a5 : ret 0xc148
0x000000000040ba1b : ret 0xc189
0x00000000004162da : ret 0xc226
0x0000000000439e52 : ret 0xc493
0x0000000000437098 : ret 0xc82e
0x0000000000438149 : ret 0xca21
0x0000000000430b95 : ret 0xca29
0x0000000000439c15 : ret 0xccb2
0x0000000000404635 : ret 0xd
0x00000000004054e7 : ret 0xd284
0x0000000000414bda : ret 0xd4a5
0x0000000000434e65 : ret 0xd618
0x0000000000403be2 : ret 0xdf31
0x00000000004390fb : ret 0xe280
0x0000000000424ae2 : ret 0xe940
0x0000000000425d41 : ret 0xe961
0x000000000041bb6d : ret 0xea51
0x0000000000439c07 : ret 0xea81
0x0000000000416ca3 : ret 0xebc8
0x00000000004147e7 : ret 0xee0e
0x00000000004278fc : ret 0xee8
0x0000000000419035 : ret 0xf281
0x00000000004132e6 : ret 0xf41
0x0000000000425895 : ret 0xf7f3
0x0000000000410772 : ret 0xf857
0x0000000000406ad0 : ret 0xfa6a
0x000000000042401e : ret 0xfc75
0x000000000042b69a : ret 0xfd5e
0x000000000042588f : ret 0xffa5
0x00000000004064aa : ret 0xffb1
0x0000000000424018 : ret 0xffc4
0x0000000000414433 : ret 0xffcf
0x0000000000423238 : ret 0xffd5
0x0000000000423312 : ret 0xffd8
0x00000000004240ca : ret 0xffd9
0x00000000004234b4 : ret 0xffe0
0x00000000004221a5 : ret 0xfffa
0x0000000000405531 : ret 0xffff
0x0000000000406aca : ret 1
0x000000000040d4ca : ret 2
0x00000000004082dc : ret 3
0x000000000040db66 : ret 6
0x0000000000427004 : ret 8
0x0000000000411e02 : rol byte ptr [r9 + 0xf], 1 ; xchg eax, esp ; ret 0x8445
0x00000000004095c6 : rol byte ptr [rax + 0x44], cl ; ret 0x8589
0x0000000000436bdd : rol byte ptr [rax + 0x48f22948], -0x7f ; ret 1
0x00000000004336fc : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041858c : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000411e03 : rol byte ptr [rcx + 0xf], 1 ; xchg eax, esp ; ret 0x8445
0x000000000040cd55 : rol byte ptr [rdi], 1 ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000436bdc : rol byte ptr ds:[rax + 0x48f22948], -0x7f ; ret 1
0x000000000040961a : rol dword ptr [rax + 0x44], cl ; ret 0x8589
0x000000000040c8c5 : rol dword ptr [rax + 0x44], cl ; ret 0x8eb9
0x0000000000411dfe : ror byte ptr [r8 + 0x3b], 0x45 ; rol byte ptr [rcx + 0xf], 1 ; xchg eax, esp ; ret 0x8445
0x0000000000411dff : ror byte ptr [rax + 0x3b], 0x45 ; rol byte ptr [rcx + 0xf], 1 ; xchg eax, esp ; ret 0x8445
0x000000000042cd64 : ror byte ptr [rax + 1], cl ; ret 0xb848
0x000000000043b3e0 : ror byte ptr [rax + rax], 0 ; in al, -2 ; jmp rax
0x00000000004018ac : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4018bb ; pop rbp ; ret
0x000000000040d93e : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x000000000040e819 : ror byte ptr [rax - 0x7d], -0x3c ; pop rbp ; ret
0x00000000004103ac : ror byte ptr [rax - 0x7f], -0x3c ; adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041904a : ror byte ptr [rcx], -0x39 ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000433a55 : ror byte ptr [rdi], -0x4a ; cmp ch, al ; ret 0x5f
0x000000000040c2f1 : ror byte ptr [rsi], -0x7d ; mov dl, -0x5c ; ret
0x0000000000436a0e : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000429a80 : ror dword ptr [rcx - 0x7d], cl ; ret
0x00000000004168b6 : sahf ; ret 0xd284
0x000000000042e50a : salc ; jmp qword ptr [rdi]
0x000000000042e446 : salc ; sti ; ret 0x89f1
0x000000000043b554 : sar byte ptr [rbp + 0x12b0ffff], 0 ; add byte ptr [rax], dh ; ret 0xffff
0x00000000004251d8 : sar dh, -1 ; dec dword ptr [rax - 0x75] ; cmp al, ch ; ret
0x00000000004018ae : sar eax, 1 ; jne 0x4018b9 ; pop rbp ; ret
0x0000000000424e01 : sar ebp, -0x17 ; ret 0x2a
0x000000000043bda9 : sar esi, cl ; jmp qword ptr [rbx]
0x00000000004018ad : sar rax, 1 ; jne 0x4018ba ; pop rbp ; ret
0x000000000043b778 : sbb ah, al ; cld ; call qword ptr [rdi]
0x0000000000429dc0 : sbb al, 0x41 ; out dx, eax ; mov al, -0x47 ; ret
0x000000000040a62e : sbb al, 2 ; ret 0x89da
0x000000000040c8f2 : sbb al, 2 ; ret 0x8ada
0x0000000000430cde : sbb al, bh ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rbx]
0x000000000042fefb : sbb bl, byte ptr [rdx - 0x47] ; salc ; jmp qword ptr [rdi]
0x0000000000424d01 : sbb cl, ch ; ret
0x000000000042c5b3 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040a31e : sbb eax, dword ptr [rdx] ; ret 0x89da
0x0000000000428e10 : sbb ecx, dword ptr [rax - 0x7f] ; ret
0x0000000000401884 : shl byte ptr [rbx], cl ; jmp rax
0x00000000004018c4 : shl byte ptr [rbx], cl ; jmp rdx
0x000000000043b4dc : shl byte ptr [rcx], -1 ; call rax
0x0000000000423d02 : shr cl, cl ; ret 0x3b
0x0000000000421b3d : stc ; ret 0x77a8
0x000000000043b236 : std ; call qword ptr [rax]
0x000000000043ba1a : std ; call qword ptr [rcx]
0x000000000043bc1a : std ; call qword ptr [rdx]
0x000000000043b266 : std ; call rax
0x000000000043bb9a : std ; jmp rdi
0x000000000043b35e : std ; push qword ptr [rax + 0x3000000a] ; jrcxz 0x43b36d ; call rax
0x000000000043b25e : std ; push qword ptr [rax + 0x60000006] ; push rbp ; std ; call rax
0x000000000043b2de : std ; push qword ptr [rax + 0x70000008] ; mov al, -3 ; call rax
0x000000000043b22e : std ; push rax ; add eax, 0x1f900000 ; std ; call qword ptr [rax]
0x000000000043b2ee : std ; push rax ; or byte ptr [rax], al ; add byte ptr [rax - 0x4d], al ; std ; call qword ptr [rax]
0x00000000004286c7 : std ; ret 0x279e
0x000000000042e447 : sti ; ret 0x89f1
0x00000000004302d5 : sti ; ret 0xb9f1
0x000000000041521e : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000432ea6 : sub byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000410a09 : sub byte ptr [rax], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000423235 : sub byte ptr [rbp - 0x7f], bh ; ret 0xffd5
0x000000000042322b : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000423305 : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x00000000004106e0 : sub dword ptr [rax], eax ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004240c5 : sub eax, 0x81268e82 ; ret 0xffd9
0x000000000042cd6f : sub edx, edi ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000439f5d : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000439f5c : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000043bc18 : test al, -0x31 ; std ; call qword ptr [rdx]
0x0000000000406da1 : test al, -0x75 ; jmp 0x406e0f
0x0000000000423230 : test al, -0x7f ; ret 0x2d50
0x000000000042330a : test al, -0x7f ; ret 0xa30b
0x000000000042fab2 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004364b3 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040dd04 : test al, 0x34 ; ret
0x000000000042949e : test al, 0x48 ; add esp, 0x80 ; pop rbp ; ret
0x0000000000425a66 : test al, 0x48 ; mov ebp, 0xe19c53ba ; ret
0x000000000040309d : test al, 0x5d ; ret 0x89bd
0x000000000042be08 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000439f2a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000410ed6 : test byte ptr [rcx], 0 ; add byte ptr [rbx - 0x39d247bb], cl ; ret 0xb488
0x000000000041a0ac : test byte ptr [rcx], ch ; ret 0
0x000000000040d41a : test byte ptr [rip - 0x16fffffb], ah ; ret 1
0x0000000000417b06 : test dh, dl ; add al, 0 ; add cl, ch ; ret
0x000000000041a0a6 : test dword ptr [rax + 0xffffffd], esp ; test byte ptr [rcx], ch ; ret 0
0x0000000000411c12 : test dword ptr [rax + rcx*2 - 0x75], edx ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 1
0x0000000000432a87 : test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x0000000000432a47 : test dword ptr [rdi + rdi*8 - 1], eax ; call rdi
0x00000000004329c2 : test dword ptr [rdi + rdi*8 - 1], eax ; jmp rcx
0x0000000000430b53 : test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rax]
0x0000000000430bab : test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rbx]
0x0000000000430b12 : test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rcx]
0x000000000042bf16 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x00000000004290ba : test dword ptr [rdi + rdi*8 - 1], esp ; call qword ptr [rbx]
0x0000000000424adb : test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x0000000000425d3a : test dword ptr [rsi + rdi*8 + 0x6e94ffff], esp ; ret 0xe961
0x000000000040255e : test dword ptr [rsi + rdi*8 - 0x7bf00001], ebp ; ret 0x2b
0x00000000004217fa : test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x0000000000425cef : test eax, 0xb9dd5cac ; xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x0000000000423cff : wait ; jge 0x423ce1 ; shr cl, cl ; ret 0x3b
0x000000000041edbd : wait ; jo 0x41edcb ; ret
0x000000000042230c : wait ; jo 0x42231a ; ret
0x0000000000436bf8 : xchg dword ptr [rsi + 4], ebp ; push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000040bf59 : xchg eax, ebp ; ret
0x0000000000404ef0 : xchg eax, ebp ; ret 0x8445
0x00000000004054e6 : xchg eax, ebp ; ret 0xd284
0x000000000043b2b5 : xchg eax, ebp ; std ; call qword ptr [rax]
0x000000000041a945 : xchg eax, ebx ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x0000000000421245 : xchg eax, ebx ; ret
0x0000000000421475 : xchg eax, ecx ; ret
0x0000000000436179 : xchg eax, edi ; ret 0xd284
0x000000000043ba19 : xchg eax, edi ; std ; call qword ptr [rcx]
0x000000000041acc5 : xchg eax, edx ; ret
0x0000000000428b6f : xchg eax, edx ; ret 0x8445
0x0000000000406f0b : xchg eax, edx ; ret 0xd284
0x000000000040da9f : xchg eax, esp ; jmp 0x40da67
0x000000000042b0aa : xchg eax, esp ; jmp 0x42bb18
0x000000000042afe7 : xchg eax, esp ; jmp 0x42bb1a
0x0000000000425cf4 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x00000000004215c5 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x0000000000425d3f : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0xe961
0x00000000004085c8 : xchg eax, esp ; ret
0x0000000000428b59 : xchg eax, esp ; ret 0x8041
0x0000000000411e06 : xchg eax, esp ; ret 0x8445
0x0000000000424c0e : xchg eax, esp ; ret 0xb740
0x0000000000405559 : xchg eax, esp ; ret 0xd284
0x000000000040da9e : xchg eax, r12d ; jmp 0x40da68
0x000000000042b0a9 : xchg eax, r12d ; jmp 0x42bb19
0x000000000042e49a : xlatb ; sti ; ret 0x89f1
0x00000000004302d4 : xlatb ; sti ; ret 0xb9f1
0x0000000000424c09 : xor al, byte ptr [rbx - 0x6bf0fd12] ; ret 0xb740
0x000000000043b364 : xor bl, ah ; std ; call rax
0x00000000004194a7 : xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004194a8 : xor byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000043791d : xor byte ptr [rcx - 0x1b], ah ; or esp, 0x1481f65 ; ret 0x8948
0x000000000040eff2 : xor byte ptr [rdi], 0x2d ; ret
