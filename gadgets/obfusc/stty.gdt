0x0000000000475595 : adc al, 0 ; add ah, al ; ret
0x000000000041362e : adc al, 0x21 ; enter -0x5847, 0x14 ; ret 0xb2e1
0x0000000000411d04 : adc al, byte ptr [rax] ; add byte ptr [rbx + 0x342da045], cl ; ret
0x0000000000451532 : adc al, byte ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000458239 : adc bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; call rsp
0x0000000000416a9c : adc byte ptr [r8 - 0x77], cl ; ret 0x2148
0x0000000000416a9d : adc byte ptr [rax - 0x77], cl ; ret 0x2148
0x00000000004749c9 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x0000000000409885 : adc byte ptr [rax], al ; add byte ptr [rbx + 0x362dac45], cl ; insd dword ptr [rdi], dx ; ret 0x890d
0x000000000041496a : adc byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000040db8c : adc byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000044c984 : adc cl, byte ptr [rax + 0x29] ; ret 0xf41
0x00000000004242ce : adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x00000000004103c0 : adc cl, byte ptr [rax - 0x7f] ; ret 0x11
0x0000000000410473 : adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x0000000000475269 : adc dl, bh ; jmp rsp
0x0000000000414f9f : adc dword ptr [rax - 0x75], ecx ; push rbp ; call 0x49044ef7
0x000000000042c33b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000042fbe3 : adc dword ptr [rcx - 0x7629d63a], ecx ; ret 0xea81
0x0000000000462802 : adc dword ptr [rdx - 0x2b], edi ; jno 0x4627c7 ; ror dword ptr [rcx], 1 ; ret
0x0000000000424dcb : adc eax, 0x558abda1 ; ret
0x0000000000458999 : adc eax, dword ptr [rax] ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rax]
0x00000000004283a9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040ac60 : adc eax, dword ptr [rcx - 0x77] ; ret 0x8141
0x0000000000458357 : adc eax, edi ; test dword ptr [rbx + rdi*8 - 1], esp ; call rdx
0x000000000040ac80 : adc esp, dword ptr [rcx] ; ret 0x941
0x000000000040ac7f : adc r12d, dword ptr [rcx] ; ret 0x941
0x000000000040ac5f : adc r8d, dword ptr [rcx - 0x77] ; ret 0x8141
0x0000000000475ac3 : add ah, ah ; add al, 0 ; add byte ptr [rax], ch ; xor bh, dl ; call qword ptr [rdx]
0x0000000000475fc3 : add ah, ah ; or dword ptr [rax], eax ; add byte ptr [rax], ch ; sti ; call rdx
0x00000000004758a3 : add ah, al ; add al, byte ptr [rax] ; add al, cl ; ret
0x0000000000475597 : add ah, al ; ret
0x0000000000475edb : add ah, bh ; or byte ptr [rax], al ; add byte ptr [rax + 0x46], dl ; sti ; jmp rsi
0x00000000004751e7 : add ah, dl ; mov dr1, ecx ; jmp rsp
0x000000000040b8e5 : add al, -0x77 ; ret 0xe281
0x0000000000475ac5 : add al, 0 ; add byte ptr [rax], ch ; xor bh, dl ; call qword ptr [rdx]
0x0000000000475181 : add al, 0 ; add byte ptr [rbp + 0x24000000], al ; ret
0x0000000000412a85 : add al, 0 ; add byte ptr [rbx - 0x44d25fbb], cl ; ret
0x0000000000412b4d : add al, 0 ; add byte ptr [rbx - 0x6bd25fbb], cl ; ret 0x212b
0x0000000000406005 : add al, 0x25 ; sysenter
0x0000000000475320 : add al, 0x41 ; sti ; call rsp
0x000000000043989a : add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000475fe4 : add al, 0xa ; add byte ptr [rax], al ; call 0x13475b5a
0x00000000004597a9 : add al, bh ; test dword ptr [rbx + rdi*8 - 1], esp ; call qword ptr [rax]
0x0000000000453e19 : add al, bh ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rcx
0x0000000000475687 : add al, bl ; sar al, 1 ; call rsi
0x00000000004758a5 : add al, byte ptr [rax] ; add al, cl ; ret
0x0000000000430714 : add al, byte ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; call rdx
0x00000000004117c5 : add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000040bc07 : add al, byte ptr [rcx - 0xe] ; jmp qword ptr [rcx]
0x000000000040e5c8 : add al, ch ; ret 0xff30
0x0000000000475fe7 : add al, ch ; sti ; call qword ptr [rdx]
0x0000000000475dd7 : add al, cl ; cmp al, -5 ; call qword ptr [rbx]
0x0000000000475967 : add al, cl ; or dl, bh ; call qword ptr [rax]
0x00000000004758a7 : add al, cl ; ret
0x00000000004755cf : add al, dh ; ret 0xfff8
0x0000000000413b5b : add bh, al ; mov r8b, -0x44 ; ret
0x0000000000413b26 : add bh, al ; mov r8b, -0x69 ; lodsb al, byte ptr [rsi] ; ret
0x00000000004133f3 : add bh, al ; mov r8b, 0x35 ; ret
0x000000000045105d : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; call qword ptr [rax]
0x000000000044fde5 : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; call rax
0x00000000004555e4 : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; call rcx
0x00000000004584c3 : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; call rdi
0x00000000004599b3 : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; call rsi
0x000000000045899b : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rax]
0x000000000044c426 : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x0000000000452270 : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rsi]
0x000000000044eee2 : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rax
0x0000000000456ad7 : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rbx
0x0000000000453f07 : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rcx
0x0000000000450dbe : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rdi
0x0000000000458f0f : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rsi
0x000000000044f3a9 : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; lcall ptr [rdx] ; ret 0x4fab
0x0000000000435d15 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call rdi
0x0000000000434411 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rax]
0x00000000004343d0 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rcx]
0x000000000042c014 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000043079a : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; call qword ptr [rbx]
0x00000000004305d9 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; call qword ptr [rdi]
0x0000000000430716 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; call rdx
0x000000000042fbb0 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; call rsi
0x000000000042fa57 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp qword ptr [rax]
0x0000000000424c09 : add bh, al ; test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x00000000004715af : add bl, dh ; ret
0x000000000045bf02 : add byte ptr [r8], al ; add byte ptr [rcx], al ; ret 0xea81
0x000000000045c164 : add byte ptr [r8], al ; add byte ptr [rcx], ch ; ret 0x5589
0x00000000004567d0 : add byte ptr [rax + 0x29], cl ; ret 0xb848
0x0000000000475cb7 : add byte ptr [rax + 0x37], bh ; sti ; call rdi
0x0000000000475edf : add byte ptr [rax + 0x46], dl ; sti ; jmp rsi
0x0000000000475683 : add byte ptr [rax + rax - 0x2f280000], ah ; clc ; call rsi
0x0000000000475e9b : add byte ptr [rax + rcx + 0x41b00000], bh ; sti ; jmp qword ptr [rbx]
0x00000000004148e2 : add byte ptr [rax - 0x73], cl ; or al, 0x25 ; ret 0x4736
0x000000000042936b : add byte ptr [rax - 0x75], cl ; clc ; mov rsp, rbp ; pop rbp ; ret
0x000000000045c39a : add byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x0000000000408241 : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000413070 : add byte ptr [rax - 0x77], cl ; ret 0x148
0x000000000045180f : add byte ptr [rax - 0x77], cl ; ret 0x28e8
0x0000000000458913 : add byte ptr [rax - 0x77], cl ; ret 0x8148
0x0000000000458ea7 : add byte ptr [rax - 0x77], cl ; ret 0x90e8
0x0000000000405fba : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x00000000004758a1 : add byte ptr [rax], al ; add ah, al ; add al, byte ptr [rax] ; add al, cl ; ret
0x000000000047531e : add byte ptr [rax], al ; add al, 0x41 ; sti ; call rsp
0x0000000000475fe2 : add byte ptr [rax], al ; add al, 0xa ; add byte ptr [rax], al ; call 0x13475b5c
0x0000000000475685 : add byte ptr [rax], al ; add al, bl ; sar al, 1 ; call rsi
0x00000000004755cd : add byte ptr [rax], al ; add al, dh ; ret 0xfff8
0x0000000000413b24 : add byte ptr [rax], al ; add bh, al ; mov r8b, -0x69 ; lodsb al, byte ptr [rsi] ; ret
0x0000000000435d13 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call rdi
0x000000000043440f : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rax]
0x000000000042c012 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000430798 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; call qword ptr [rbx]
0x00000000004715ad : add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004567ce : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0xb848
0x000000000045c398 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x000000000040ee54 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000041306e : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x148
0x0000000000405fb8 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x00000000004715ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000047492a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004749cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000004715ac : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004749cd : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000004511eb : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], al ; ret 0x3141
0x0000000000416e4e : add byte ptr [rax], al ; add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x0000000000411d46 : add byte ptr [rax], al ; add byte ptr [rbx + 0x352da045], cl ; ret
0x00000000004098d0 : add byte ptr [rax], al ; add byte ptr [rbx + 0x372dac45], cl ; insd dword ptr [rdi], dx ; ret 0x890d
0x0000000000427e12 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000408cb4 : add byte ptr [rax], al ; add byte ptr [rbx + 0x552dac45], cl ; jmp qword ptr [rax]
0x00000000004027d5 : add byte ptr [rax], al ; add byte ptr [rbx + 0x612ddc45], cl ; pop rsi ; ret 0x8959
0x000000000040298d : add byte ptr [rax], al ; add byte ptr [rbx + 0x622ddc45], cl ; pop rsi ; ret 0x8959
0x00000000004091c8 : add byte ptr [rax], al ; add byte ptr [rbx + 0x672dac45], cl ; ret 0xd67d
0x0000000000414dc2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x82ddc45], cl ; ret 0x8000
0x0000000000409290 : add byte ptr [rax], al ; add byte ptr [rbx - 0x17d253bb], cl ; ret 0xdb6a
0x000000000042a7d3 : add byte ptr [rax], al ; add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x0000000000412ad0 : add byte ptr [rax], al ; add byte ptr [rbx - 0x43d25fbb], cl ; ret
0x0000000000439f6c : add byte ptr [rax], al ; add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x000000000045c67c : add byte ptr [rax], al ; add byte ptr [rbx - 0x5ed243bb], cl ; ret
0x000000000045c5cc : add byte ptr [rax], al ; add byte ptr [rbx - 0x5fd243bb], cl ; ret
0x000000000041245e : add byte ptr [rax], al ; add byte ptr [rbx - 0x68d25fbb], cl ; lodsb al, byte ptr [rsi] ; ret
0x0000000000412b98 : add byte ptr [rax], al ; add byte ptr [rbx - 0x6ad25fbb], cl ; ret 0x212b
0x000000000042d139 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x0000000000462b91 : add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; ret
0x000000000044f5f4 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x0000000000414748 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000040816c : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000462e2b : add byte ptr [rax], al ; add byte ptr [rcx - 0x7f], al ; ret
0x000000000045cbc9 : add byte ptr [rax], al ; add byte ptr [rcx], ah ; ret 0xd609
0x000000000046ca65 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x6348
0x000000000045bf03 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xea81
0x0000000000462d6e : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret
0x000000000045c165 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x5589
0x0000000000458b44 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8840
0x0000000000411c55 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8b48
0x000000000040c7fe : add byte ptr [rax], al ; add byte ptr [rcx], cl ; ret 0x1189
0x000000000040b8f0 : add byte ptr [rax], al ; add byte ptr [rcx], cl ; ret 0x5189
0x000000000040acf6 : add byte ptr [rax], al ; add byte ptr [rcx], cl ; ret 0x8b48
0x000000000040e551 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x00000000004180f3 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000433027 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000045044c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x000000000040627d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000438e15 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000042bf0a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000040defd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000456680 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000040a951 : add byte ptr [rax], al ; add cl, ch ; ret
0x00000000004283ab : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000427a30 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042c33d : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004026e0 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040148b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000475702 : add byte ptr [rax], al ; and al, 1 ; add byte ptr [rax], al ; cmp byte ptr [rdi], ch ; stc ; jmp rcx
0x0000000000475fe6 : add byte ptr [rax], al ; call 0x13475b58
0x0000000000475eda : add byte ptr [rax], al ; cld ; or byte ptr [rax], al ; add byte ptr [rax + 0x46], dl ; sti ; jmp rsi
0x00000000004752e6 : add byte ptr [rax], al ; cli ; jmp rsp
0x0000000000475706 : add byte ptr [rax], al ; cmp byte ptr [rdi], ch ; stc ; jmp rcx
0x0000000000475686 : add byte ptr [rax], al ; fcom st(0) ; clc ; call rsi
0x0000000000475ac2 : add byte ptr [rax], al ; in al, 4 ; add byte ptr [rax], al ; sub byte ptr [rdx], dh ; cli ; call qword ptr [rdx]
0x0000000000475fc2 : add byte ptr [rax], al ; in al, 9 ; add byte ptr [rax], al ; sub byte ptr [rsi - 5], ah ; call rdx
0x0000000000475c52 : add byte ptr [rax], al ; je 0x475c65 ; add byte ptr [rax], al ; sub byte ptr [rsi], dh ; sti ; jmp qword ptr [rbx]
0x00000000004015e9 : add byte ptr [rax], al ; jmp 0x4014a9
0x00000000004029ba : add byte ptr [rax], al ; jmp 0x402c39
0x000000000040a94d : add byte ptr [rax], al ; jmp 0x40a95c
0x00000000004346d7 : add byte ptr [rax], al ; jmp 0x4346e6
0x000000000043f8ec : add byte ptr [rax], al ; jmp 0x44bb37
0x0000000000475cb6 : add byte ptr [rax], al ; js 0x475cf6 ; sti ; call rdi
0x00000000004751a6 : add byte ptr [rax], al ; mov ah, -0x2b ; clc ; jmp rsp
0x0000000000475266 : add byte ptr [rax], al ; mov ah, 0x10 ; cli ; jmp rsp
0x000000000047535e : add byte ptr [rax], al ; mov ah, 0x45 ; sti ; call rsp
0x000000000047628e : add byte ptr [rax], al ; mov al, 0x17 ; cld ; call rdi
0x0000000000475e9e : add byte ptr [rax], al ; mov al, 0x41 ; sti ; jmp qword ptr [rbx]
0x0000000000430b79 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000045bf48 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000475e9a : add byte ptr [rax], al ; mov esp, 0xb0000008 ; sti ; jmp qword ptr [rbx]
0x000000000045c741 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x40] ; pop rbp ; ret
0x000000000045c399 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040ee55 : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000475682 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add al, bl ; sar al, 1 ; call rsi
0x0000000000475db6 : add byte ptr [rax], al ; or byte ptr [rbx], bh ; sti ; call rdx
0x00000000004020fb : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000427e13 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000434334 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000475ede : add byte ptr [rax], al ; push rax ; sti ; jmp rsi
0x00000000004715ae : add byte ptr [rax], al ; ret
0x00000000004749cf : add byte ptr [rax], al ; ret 1
0x0000000000475ac6 : add byte ptr [rax], al ; sub byte ptr [rdx], dh ; cli ; call qword ptr [rdx]
0x0000000000475fc6 : add byte ptr [rax], al ; sub byte ptr [rsi - 5], ah ; call rdx
0x0000000000475c56 : add byte ptr [rax], al ; sub byte ptr [rsi], dh ; sti ; jmp qword ptr [rbx]
0x00000000004753de : add byte ptr [rax], al ; test byte ptr [rax - 5], dh ; jmp rsp
0x000000000047541e : add byte ptr [rax], al ; xor al, 0x7f ; sti ; jmp rsp
0x0000000000475fc7 : add byte ptr [rax], ch ; sti ; call rdx
0x0000000000475c57 : add byte ptr [rax], ch ; sti ; jmp qword ptr [rbx]
0x0000000000475ac7 : add byte ptr [rax], ch ; xor bh, dl ; call qword ptr [rdx]
0x0000000000475db7 : add byte ptr [rax], cl ; cmp edi, ebx ; call rdx
0x0000000000475183 : add byte ptr [rbp + 0x24000000], al ; ret
0x00000000004511ed : add byte ptr [rbp - 0x77], al ; ret 0x3141
0x0000000000416e50 : add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x0000000000411d06 : add byte ptr [rbx + 0x342da045], cl ; ret
0x0000000000411d48 : add byte ptr [rbx + 0x352da045], cl ; ret
0x0000000000409887 : add byte ptr [rbx + 0x362dac45], cl ; insd dword ptr [rdi], dx ; ret 0x890d
0x00000000004098d2 : add byte ptr [rbx + 0x372dac45], cl ; insd dword ptr [rdi], dx ; ret 0x890d
0x0000000000427e14 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000408c6b : add byte ptr [rbx + 0x542dac45], cl ; jmp qword ptr [rax]
0x0000000000408cb6 : add byte ptr [rbx + 0x552dac45], cl ; jmp qword ptr [rax]
0x0000000000434335 : add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004027d7 : add byte ptr [rbx + 0x612ddc45], cl ; pop rsi ; ret 0x8959
0x000000000040298f : add byte ptr [rbx + 0x622ddc45], cl ; pop rsi ; ret 0x8959
0x000000000040917f : add byte ptr [rbx + 0x662dac45], cl ; ret 0xd67d
0x00000000004091ca : add byte ptr [rbx + 0x672dac45], cl ; ret 0xd67d
0x0000000000414dc4 : add byte ptr [rbx + 0x82ddc45], cl ; ret 0x8000
0x0000000000475963 : add byte ptr [rbx + rax + 0x8c80000], al ; cli ; call qword ptr [rax]
0x00000000004752e7 : add byte ptr [rbx + rcx*2 - 6], al ; jmp rsp
0x0000000000409292 : add byte ptr [rbx - 0x17d253bb], cl ; ret 0xdb6a
0x0000000000409247 : add byte ptr [rbx - 0x18d253bb], cl ; ret 0xdb6a
0x000000000042a7d5 : add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x000000000042a78a : add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x0000000000413f04 : add byte ptr [rbx - 0x3ed24fbb], cl ; add cl, bl ; ret
0x0000000000413eb9 : add byte ptr [rbx - 0x3fd24fbb], cl ; add cl, bl ; ret
0x0000000000412ad2 : add byte ptr [rbx - 0x43d25fbb], cl ; ret
0x0000000000412a87 : add byte ptr [rbx - 0x44d25fbb], cl ; ret
0x0000000000439f6e : add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x000000000045c67e : add byte ptr [rbx - 0x5ed243bb], cl ; ret
0x000000000045c5ce : add byte ptr [rbx - 0x5fd243bb], cl ; ret
0x0000000000412460 : add byte ptr [rbx - 0x68d25fbb], cl ; lodsb al, byte ptr [rsi] ; ret
0x0000000000412415 : add byte ptr [rbx - 0x69d25fbb], cl ; lodsb al, byte ptr [rsi] ; ret
0x0000000000412b9a : add byte ptr [rbx - 0x6ad25fbb], cl ; ret 0x212b
0x0000000000412b4f : add byte ptr [rbx - 0x6bd25fbb], cl ; ret 0x212b
0x000000000045bf49 : add byte ptr [rbx - 0x76b71fbb], cl ; in al, dx ; pop rbp ; ret
0x000000000042d13b : add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x0000000000462b93 : add byte ptr [rcx + 0x29], al ; ret
0x000000000044f5f6 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x000000000041474a : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000044c4d5 : add byte ptr [rcx + 0xf], al ; xchg eax, edx ; ret 0x8844
0x000000000040816e : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000047531f : add byte ptr [rcx + rax*2], al ; sti ; call rsp
0x0000000000475703 : add byte ptr [rcx + rax], ah ; add byte ptr [rax], al ; cmp byte ptr [rdi], ch ; stc ; jmp rcx
0x0000000000462e2d : add byte ptr [rcx - 0x7f], al ; ret
0x000000000045cbcb : add byte ptr [rcx], ah ; ret 0xd609
0x000000000041619a : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401978 : add byte ptr [rcx], al ; ret
0x000000000046ca67 : add byte ptr [rcx], al ; ret 0x6348
0x000000000045bf05 : add byte ptr [rcx], al ; ret 0xea81
0x0000000000462d70 : add byte ptr [rcx], ch ; ret
0x000000000045c167 : add byte ptr [rcx], ch ; ret 0x5589
0x0000000000458b46 : add byte ptr [rcx], ch ; ret 0x8840
0x0000000000411c57 : add byte ptr [rcx], ch ; ret 0x8b48
0x000000000040c800 : add byte ptr [rcx], cl ; ret 0x1189
0x000000000040b8f2 : add byte ptr [rcx], cl ; ret 0x5189
0x000000000040acf8 : add byte ptr [rcx], cl ; ret 0x8b48
0x000000000047541f : add byte ptr [rdi + rdi*2], dh ; sti ; jmp rsp
0x000000000040e553 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x00000000004180f5 : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000433029 : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000045044e : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x000000000040627f : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000438e17 : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000042bf0c : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000040deff : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000456682 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000475fe3 : add byte ptr [rdx + rcx], al ; add byte ptr [rax], al ; call 0x13475b5b
0x0000000000475c53 : add byte ptr [rsi + rax], dh ; add byte ptr [rax], ch ; sti ; jmp qword ptr [rbx]
0x000000000047628b : add byte ptr [rsp + rcx + 0x17b00000], ch ; cld ; call rdi
0x0000000000413ebf : add cl, bl ; ret
0x0000000000424d3c : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x000000000043f79d : add cl, ch ; nop ; ret
0x000000000043f7d5 : add cl, ch ; pop rax ; ret
0x000000000040a953 : add cl, ch ; ret
0x000000000043f8ed : add cl, ch ; ret 0
0x0000000000408e8c : add cl, ch ; ret 0x1a
0x000000000040a78c : add cl, ch ; ret 1
0x00000000004343ce : add dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rcx]
0x000000000040f5f9 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000040c7dc : add dword ptr [rax], eax ; add byte ptr [rcx], cl ; ret 0x8b48
0x000000000043f844 : add dword ptr [rax], eax ; jmp 0x44bb37
0x0000000000453cbf : add dword ptr [rbp + 0x48b97d43], ebp ; ret
0x000000000040ac5d : add dword ptr [rcx + 0x44], ecx ; adc eax, dword ptr [rcx - 0x77] ; ret 0x8141
0x000000000040ac7d : add dword ptr [rcx + 0x44], ecx ; adc esp, dword ptr [rcx] ; ret 0x941
0x000000000040c7ba : add dword ptr [rcx - 0xe], eax ; jmp qword ptr [rcx]
0x000000000040c4e4 : add dword ptr [rdi], ecx ; mov dh, -0x3f ; mov rsp, rbp ; pop rbp ; ret
0x000000000045b452 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x0000000000459efa : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000045a48e : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000407754 : add eax, 0x22b80000 ; out dx, eax ; ret
0x0000000000401974 : add eax, 0x275986 ; add ebx, esi ; ret
0x0000000000434333 : add eax, 0x5d5b0000 ; ret
0x0000000000430b77 : add eax, 0x8b000000 ; in al, dx ; pop rbp ; ret
0x00000000004751e5 : add eax, 0x8ed40000 ; stc ; jmp rsp
0x0000000000475965 : add eax, dword ptr [rax] ; add al, cl ; or dl, bh ; call qword ptr [rax]
0x00000000004599b1 : add eax, dword ptr [rax] ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; call rsi
0x00000000004305d7 : add eax, dword ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; call qword ptr [rdi]
0x0000000000435c44 : add eax, dword ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040fec0 : add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x000000000040193b : add eax, edx ; sar rax, 1 ; jne 0x40194c ; pop rbp ; ret
0x0000000000401979 : add ebx, esi ; ret
0x0000000000453db5 : add edi, eax ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rcx
0x0000000000450628 : add edi, eax ; test dword ptr [rbx + rdi*8 - 1], esp ; lcall ptr [rbx + 0x47] ; ret
0x0000000000402759 : add esp, 0x10 ; pop rbp ; ret
0x0000000000416198 : add esp, 0x100 ; pop rbp ; ret
0x0000000000416d3f : add esp, 0x120 ; pop rbp ; ret
0x0000000000470bb1 : add esp, 0x1750 ; pop rbp ; ret
0x00000000004020f7 : add esp, 0x190 ; pop rbp ; ret
0x000000000042c1ec : add esp, 0x1a0 ; pop rbp ; ret
0x000000000041156d : add esp, 0x1f0 ; pop rbp ; ret
0x0000000000416229 : add esp, 0x20 ; pop rbp ; ret
0x000000000040db8a : add esp, 0x210 ; pop rbp ; ret
0x00000000004139e5 : add esp, 0x3d0 ; pop rbp ; ret
0x000000000042c340 : add esp, 0x40 ; pop rbp ; ret
0x0000000000439a99 : add esp, 0x440 ; pop rbp ; ret
0x00000000004026e3 : add esp, 0x50 ; pop rbp ; ret
0x0000000000434330 : add esp, 0x598 ; pop rbx ; pop rbp ; ret
0x0000000000418161 : add esp, 0x60 ; pop rbp ; ret
0x0000000000429722 : add esp, 0x70 ; pop rbp ; ret
0x000000000040fac7 : add esp, 0x80 ; pop rbp ; ret
0x0000000000407a03 : add esp, 0x8f0 ; pop rbp ; ret
0x0000000000408615 : add esp, 0x90 ; pop rbp ; ret
0x00000000004159e7 : add esp, 0x98 ; pop rbp ; ret
0x000000000040e016 : add esp, 0xa0 ; pop rbp ; ret
0x000000000042830b : add esp, 0xb0 ; pop rbp ; ret
0x000000000040e61b : add esp, 0xd0 ; pop rbp ; ret
0x0000000000402b9a : add esp, 0xe0 ; pop rbp ; ret
0x0000000000436e9f : add esp, 0xf0 ; pop rbp ; ret
0x0000000000418cc3 : add esp, 8 ; pop rbp ; ret
0x000000000040148e : add esp, 8 ; ret
0x000000000040193a : add rax, rdx ; sar rax, 1 ; jne 0x40194d ; pop rbp ; ret
0x0000000000402758 : add rsp, 0x10 ; pop rbp ; ret
0x0000000000416197 : add rsp, 0x100 ; pop rbp ; ret
0x0000000000416d3e : add rsp, 0x120 ; pop rbp ; ret
0x0000000000470bb0 : add rsp, 0x1750 ; pop rbp ; ret
0x00000000004020f6 : add rsp, 0x190 ; pop rbp ; ret
0x000000000042c1eb : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000041156c : add rsp, 0x1f0 ; pop rbp ; ret
0x0000000000416228 : add rsp, 0x20 ; pop rbp ; ret
0x000000000040db89 : add rsp, 0x210 ; pop rbp ; ret
0x00000000004139e4 : add rsp, 0x3d0 ; pop rbp ; ret
0x000000000042c33f : add rsp, 0x40 ; pop rbp ; ret
0x0000000000439a98 : add rsp, 0x440 ; pop rbp ; ret
0x00000000004026e2 : add rsp, 0x50 ; pop rbp ; ret
0x000000000043432f : add rsp, 0x598 ; pop rbx ; pop rbp ; ret
0x0000000000418160 : add rsp, 0x60 ; pop rbp ; ret
0x0000000000429721 : add rsp, 0x70 ; pop rbp ; ret
0x000000000040fac6 : add rsp, 0x80 ; pop rbp ; ret
0x0000000000407a02 : add rsp, 0x8f0 ; pop rbp ; ret
0x0000000000408614 : add rsp, 0x90 ; pop rbp ; ret
0x00000000004159e6 : add rsp, 0x98 ; pop rbp ; ret
0x000000000040e015 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000042830a : add rsp, 0xb0 ; pop rbp ; ret
0x000000000040e61a : add rsp, 0xd0 ; pop rbp ; ret
0x0000000000402b99 : add rsp, 0xe0 ; pop rbp ; ret
0x0000000000436e9e : add rsp, 0xf0 ; pop rbp ; ret
0x0000000000418cc2 : add rsp, 8 ; pop rbp ; ret
0x000000000040148d : add rsp, 8 ; ret
0x000000000043f842 : and al, 0x32 ; add dword ptr [rax], eax ; jmp 0x44bb39
0x000000000045bf0d : and al, 0xffffffffffffff81 ; ret 0x61
0x00000000004036fd : and al, 0xffffffffffffffa3 ; ret
0x0000000000475704 : and al, 1 ; add byte ptr [rax], al ; cmp byte ptr [rdi], ch ; stc ; jmp rcx
0x0000000000459ef9 : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000045a48d : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040c860 : and byte ptr [rcx - 0xe], al ; jmp qword ptr [rcx]
0x0000000000416d41 : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042ce6b : and byte ptr [rsi + 0x58], ah ; jb 0x42cea2 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000403c75 : and ch, bh ; ret
0x0000000000454607 : and dl, byte ptr [rdi] ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rcx
0x00000000004119b0 : and dword ptr [rbp + 0x7f1259b9], esi ; ret
0x000000000040bfbd : and dword ptr [rcx - 0x77], eax ; ret 0x8141
0x000000000040bfb1 : and dword ptr [rcx], esp ; ret 0x8941
0x000000000040b7f6 : and eax, 0x55b9698f ; jmp qword ptr [rax]
0x000000000042f570 : and eax, 0x5ab9f05d ; jmp rdi
0x0000000000423f71 : and eax, 0x75b4b9d3 ; ret
0x000000000043477d : and eax, 0x8b000000 ; in al, dx ; pop rbp ; ret
0x0000000000453f04 : and eax, 0xc700005e ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rcx
0x0000000000457c97 : and eax, 0xc7fffa98 ; test dword ptr [rbx + rdi*8 - 1], esp ; call rax
0x000000000040ae34 : and eax, dword ptr [rcx - 0x77] ; ret 0x8141
0x000000000045e10c : and ebx, dword ptr [rbx + 0x6a] ; ret 0x8589
0x0000000000403c21 : and edi, ebp ; ret
0x000000000040ae54 : and esp, dword ptr [rcx] ; ret 0x941
0x0000000000475fe8 : call 0x13475b56
0x000000000042530f : call 0x4015b2
0x000000000042d265 : call 0x42d329
0x000000000046fefd : call 0x45c1c2
0x0000000000414fa3 : call 0x49044ef3
0x000000000043a50d : call 0xffffffffaca46741
0x000000000043a50c : call 0xffffffffaca46742
0x0000000000430e20 : call 0xffffffffca6cd0b0
0x0000000000430e1f : call 0xffffffffca6cd0b1
0x0000000000427a29 : call 0xffffffffe9050379
0x0000000000427a28 : call 0xffffffffe905037a
0x000000000040c9e3 : call 0xfffffffff2c2aea3
0x0000000000471589 : call qword ptr [r12 + rbx*8]
0x0000000000434417 : call qword ptr [rax]
0x00000000004291ee : call qword ptr [rbx]
0x0000000000439b3c : call qword ptr [rcx]
0x0000000000426eb4 : call qword ptr [rdi]
0x0000000000422e9b : call qword ptr [rdx]
0x000000000046f9e3 : call qword ptr [rsi]
0x000000000047158a : call qword ptr [rsp + rbx*8]
0x000000000040199d : call rax
0x000000000046e68d : call rbx
0x000000000042511b : call rcx
0x0000000000426af4 : call rdi
0x0000000000426325 : call rdx
0x000000000042fbb6 : call rsi
0x000000000045823f : call rsp
0x0000000000439a97 : clc ; add rsp, 0x440 ; pop rbp ; ret
0x000000000042c5c7 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x0000000000436099 : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x000000000047568a : clc ; call rsi
0x0000000000475602 : clc ; jmp qword ptr [rax]
0x00000000004751aa : clc ; jmp rsp
0x000000000040193f : clc ; jne 0x401948 ; pop rbp ; ret
0x0000000000416236 : clc ; mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x00000000004349de : clc ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042936f : clc ; mov rsp, rbp ; pop rbp ; ret
0x000000000045c39e : clc ; pop rbp ; ret
0x000000000045c4f3 : clc ; pop rbx ; pop rbp ; ret
0x000000000041a4fd : clc ; ret 0x77a8
0x000000000040ae9c : clc ; rol dword ptr [rcx - 0xe], cl ; jmp qword ptr [rcx]
0x0000000000402757 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000430e12 : cld ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040fac5 : cld ; add rsp, 0x80 ; pop rbp ; ret
0x0000000000411108 : cld ; add rsp, 0xd0 ; pop rbp ; ret
0x000000000043ab4e : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x0000000000436e9d : cld ; add rsp, 0xf0 ; pop rbp ; ret
0x0000000000476292 : cld ; call rdi
0x0000000000416e7f : cld ; jmp 0x416eec
0x0000000000416e7e : cld ; jmp 0x416eed
0x0000000000475edc : cld ; or byte ptr [rax], al ; add byte ptr [rax + 0x46], dl ; sti ; jmp rsi
0x000000000041362d : cli ; adc al, 0x21 ; enter -0x5847, 0x14 ; ret 0xb2e1
0x000000000047596a : cli ; call qword ptr [rax]
0x00000000004759ca : cli ; call qword ptr [rcx]
0x0000000000475aca : cli ; call qword ptr [rdx]
0x0000000000457c99 : cli ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; call rax
0x00000000004564ec : cli ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; call rdi
0x00000000004578f4 : cli ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rax]
0x0000000000452d66 : cli ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x00000000004523e8 : cli ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rdi
0x00000000004752e2 : cli ; inc esp ; or dword ptr [rax], eax ; add byte ptr [rbx + rcx*2 - 6], al ; jmp rsp
0x000000000047526a : cli ; jmp rsp
0x000000000042ce70 : cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000045bf0c : cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x000000000042bd8b : cmc ; ret 0x4f0b
0x00000000004060e6 : cmp al, -0x47 ; and al, 0xffffffffffffffa3 ; ret
0x0000000000475dd9 : cmp al, -5 ; call qword ptr [rbx]
0x000000000042530e : cmp al, ch ; pushfq ; ret 0xfffd
0x000000000046f337 : cmp byte ptr [rcx - 0x1f743], al ; call qword ptr [rax]
0x0000000000475708 : cmp byte ptr [rdi], ch ; stc ; jmp rcx
0x000000000042bf21 : cmp cl, byte ptr [rsi - 0x946182f] ; ret 0x4f0b
0x00000000004316e7 : cmp dl, al ; ret
0x000000000040bfbb : cmp eax, 0x894121d6 ; ret 0x8141
0x0000000000460aab : cmp eax, 0xb8000025 ; mov ebp, ecx ; ret
0x00000000004337b9 : cmp eax, 0xb95a1a7d ; salc ; jmp qword ptr [rdi]
0x00000000004018fd : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401910 ; pop rbp ; ret
0x000000000046fb61 : cmp eax, 0xe9b845c2 ; ret
0x000000000046113f : cmp edi, ebp ; cwde ; jmp 0x462ff5
0x0000000000475db9 : cmp edi, ebx ; call rdx
0x0000000000424dc7 : cmp esp, dword ptr [rbp - 0x47] ; push -0x75425eeb ; push rbp ; ret
0x000000000044148a : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xcc39
0x00000000004414de : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xcc39
0x000000000040ae9a : cmpsd dword ptr [rsi], dword ptr [rdi] ; sbb al, bh ; rol dword ptr [rcx - 0xe], cl ; jmp qword ptr [rcx]
0x0000000000434332 : cwde ; add eax, 0x5d5b0000 ; ret
0x0000000000457c98 : cwde ; cli ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; call rax
0x0000000000461141 : cwde ; jmp 0x462ff3
0x0000000000460aa9 : cwde ; jmp 0x462ff5
0x0000000000454ed5 : cwde ; ret 0x2eb9
0x00000000004405e4 : cwde ; ret 0x8589
0x0000000000404455 : cwde ; ret 0x89f5
0x0000000000405ef9 : cwde ; ret 0xb9f5
0x000000000044c981 : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax + 0x29] ; ret 0xf41
0x00000000004242cb : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x0000000000423c3e : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x0000000000458910 : dec dword ptr [rax - 0x75] ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000042530b : dec dword ptr [rax - 0x75] ; cmp al, ch ; pushfq ; ret 0xfffd
0x0000000000424443 : dec dword ptr [rax - 0x75] ; or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x0000000000458354 : dec dword ptr [rax - 0x77] ; adc eax, edi ; test dword ptr [rbx + rdi*8 - 1], esp ; call rdx
0x000000000042cf9d : dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x0000000000470eb1 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x00000000004395f6 : dec dword ptr [rax - 0x77] ; ret 0x8148
0x00000000004145cd : dec dword ptr [rax - 0x77] ; ret 0x8844
0x0000000000406429 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004630a0 : dec dword ptr [rax - 0x7f] ; ret 0x10
0x000000000046306e : dec dword ptr [rax - 0x7f] ; ret 0x20
0x000000000046bb11 : dec dword ptr [rax - 0x7f] ; ret 0xffff
0x000000000046d63e : dec dword ptr [rax - 0x7f] ; ret 1
0x0000000000461668 : dec dword ptr [rax - 0x7f] ; ret 4
0x000000000046bd23 : dec dword ptr [rax - 1] ; ret 0x8948
0x000000000046f17c : dec dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000041361a : dec dword ptr [rbx - 0x3936b] ; dec dword ptr [rdi] ; ret 0x4589
0x0000000000406371 : dec dword ptr [rbx - 0x7a36b] ; dec dword ptr [rdi] ; ret 0x4589
0x00000000004612db : dec dword ptr [rcx - 0x7628d639] ; ret 0xea81
0x000000000046e6ee : dec dword ptr [rcx - 0x7f] ; ret
0x000000000046e79e : dec dword ptr [rcx - 0x7f] ; ret 1
0x000000000042bd86 : dec dword ptr [rcx - 0xa167e3f] ; ret 0x4f0b
0x0000000000406377 : dec dword ptr [rdi] ; ret 0x4589
0x000000000043f797 : dec dword ptr [rdi] ; test ah, al ; or al, 1 ; add cl, ch ; nop ; ret
0x0000000000448cc7 : dec dword ptr [rdi] ; test al, bl ; ret
0x00000000004631d2 : dec dword ptr [rdi] ; test bl, ch ; ret
0x000000000043f8e7 : dec dword ptr [rdi] ; test byte ptr [rbx - 0x16ffff1b], dl ; ret 0
0x000000000044b24b : dec dword ptr [rdi] ; test byte ptr [rcx], ch ; ret
0x000000000041a1da : dec dword ptr [rdi] ; test byte ptr [rcx], ch ; ret 0
0x000000000043f83f : dec dword ptr [rdi] ; test byte ptr [rdx + rsi], ah ; add dword ptr [rax], eax ; jmp 0x44bb3c
0x0000000000416616 : dec dword ptr [rdi] ; test byte ptr [rdx - 0x16fffffe], dl ; ret 1
0x00000000004117c1 : dec dword ptr [rdi] ; test ch, bh ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000040a786 : dec dword ptr [rdi] ; test ch, cl ; sbb dword ptr [rax], eax ; add cl, ch ; ret 1
0x0000000000443b9f : dec dword ptr [rdi] ; test dl, cl ; ret 0
0x00000000004704cf : dec dword ptr [rdi] ; xchg eax, ebx ; ret 0xd284
0x0000000000435a3e : dec dword ptr [rdi] ; xchg eax, esp ; ret
0x0000000000439423 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x0000000000458749 : dec ebp ; or ch, dh ; ret 0xdae9
0x0000000000413630 : enter -0x5847, 0x14 ; ret 0xb2e1
0x0000000000454c9a : enter -6, -0x39 ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x0000000000439079 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040cdcc : enter 0x582d, -0x28 ; ret 0x898b
0x000000000040ce11 : enter 0x592d, -0x28 ; ret 0x898b
0x000000000041303b : enter 0xf41, -0x6c ; ret 0x8445
0x00000000004184d9 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004180f1 : fadd qword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000430922 : fadd qword ptr [rcx - 0x77] ; ret
0x000000000040ca9a : fadd st(7) ; les r14d, ptr [r15] ; insd dword ptr [rdi], dx ; ret 0x480d
0x0000000000435a20 : fbld dword ptr [rcx] ; ret 0x941
0x000000000040c15f : fbstp dword ptr [rdi + 0x7299b96d] ; ret
0x0000000000475688 : fcom st(0) ; clc ; call rsi
0x0000000000453614 : fdivp st(2) ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x0000000000453bfd : fdivr st(2) ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x000000000040ac2d : fiadd dword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000462c3d : fild dword ptr [rcx - 0x7f] ; ret 8
0x00000000004359ff : fild word ptr [rcx - 0x77] ; ret
0x000000000043459b : fisttp dword ptr [rbp - 0x77] ; sbb al, bh ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rbx]
0x000000000046f326 : fisttp word ptr [rcx] ; or ebp, ecx ; jmp qword ptr [rcx]
0x000000000044c424 : fld dword ptr [rax] ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x000000000045a4c8 : fld qword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x000000000040823e : fmul dword ptr [r11 - 0x1376b800] ; pop rbp ; ret
0x0000000000439c57 : fmul dword ptr [r9 - 0x57167e3f] ; ret
0x0000000000407369 : fmul dword ptr [rax + 0x3b] ; mov byte ptr [r9 + 0xf], r8b ; xchg eax, ebp ; ret 0x8445
0x0000000000410470 : fmul dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x000000000040823f : fmul dword ptr [rbx - 0x1376b800] ; pop rbp ; ret
0x0000000000439c58 : fmul dword ptr [rcx - 0x57167e3f] ; ret
0x0000000000459ed2 : fmul dword ptr [rdi] ; wait ; ror dword ptr [rdi], -0x6c ; ret 0xca20
0x000000000046711d : fmul dword ptr [rdx - 0x6a] ; ret
0x000000000047158c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000452ff0 : fsubr st(4), st(0) ; cli ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x000000000042c273 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041815f : hlt ; add rsp, 0x60 ; pop rbp ; ret
0x000000000043642c : hlt ; add rsp, 0xa0 ; pop rbp ; ret
0x000000000043a1bc : hlt ; add rsp, 0xe0 ; pop rbp ; ret
0x0000000000418cc1 : hlt ; add rsp, 8 ; pop rbp ; ret
0x0000000000401910 : hlt ; pop rbp ; mov edi, 0x677298 ; jmp rax
0x0000000000457362 : idiv byte ptr [rcx + rsi*8 - 0x17] ; ret
0x000000000042cf9b : idiv edi ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x00000000004519a8 : in al, -0x7f ; ret 0xfff7
0x0000000000452ff1 : in al, -6 ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x000000000040f7c7 : in al, 0x2d ; ret
0x0000000000407a01 : in al, 0x48 ; add esp, 0x8f0 ; pop rbp ; ret
0x00000000004367e1 : in al, 0x48 ; add esp, 0xb0 ; pop rbp ; ret
0x0000000000475ac4 : in al, 4 ; add byte ptr [rax], al ; sub byte ptr [rdx], dh ; cli ; call qword ptr [rdx]
0x000000000041506a : in al, 8 ; ret 0x8000
0x0000000000475fc4 : in al, 9 ; add byte ptr [rax], al ; sub byte ptr [rsi - 5], ah ; call rdx
0x0000000000407753 : in al, dx ; add eax, 0x22b80000 ; out dx, eax ; ret
0x0000000000416227 : in al, dx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000043a5cc : in al, dx ; jmp 0x43a649
0x000000000043a5cb : in al, dx ; jmp 0x43a64a
0x0000000000416224 : in al, dx ; mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000408244 : in al, dx ; pop rbp ; ret
0x000000000042e623 : in al, dx ; ret 0x89c5
0x000000000042f3e2 : in al, dx ; ret 0xb2c5
0x0000000000443b9d : in eax, -1 ; dec dword ptr [rdi] ; test dl, cl ; ret 0
0x000000000043f8eb : in eax, 0 ; add cl, ch ; ret 0
0x000000000044da3c : in eax, dx ; ret 0
0x000000000046caf2 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000458d93 : inc dword ptr [rax] ; ret
0x000000000044c4f4 : inc dword ptr [rbp + 0xf] ; ret
0x000000000045417b : inc dword ptr [rcx + 0xf] ; ret 0x8589
0x0000000000405daa : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret
0x00000000004519a2 : inc dword ptr [rcx - 0x1cb46e16] ; in al, -0x7f ; ret 0xfff7
0x0000000000462c36 : inc dword ptr [rcx - 0x7f] ; ret 0xc350
0x0000000000415067 : inc edi ; in al, 8 ; ret 0x8000
0x0000000000407cec : inc edi ; test byte ptr [r10], r12b ; out dx, eax ; ret
0x0000000000457c9a : inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; call rax
0x00000000004564ed : inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; call rdi
0x0000000000458056 : inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; call rdx
0x000000000045303e : inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; call rsp
0x0000000000458d8d : inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; inc dword ptr [rax] ; ret
0x00000000004578f5 : inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rax]
0x0000000000452d67 : inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x00000000004585f5 : inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rax
0x0000000000450d69 : inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rdi
0x0000000000458d45 : inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rsi
0x00000000004506ae : inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; lcall ptr [rbx + 0x47] ; ret
0x0000000000434469 : inc edi ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rbx]
0x00000000004751e3 : inc esp ; add eax, 0x8ed40000 ; stc ; jmp rsp
0x00000000004752e3 : inc esp ; or dword ptr [rax], eax ; add byte ptr [rbx + rcx*2 - 6], al ; jmp rsp
0x00000000004753db : inc esp ; or eax, 0x70840000 ; sti ; jmp rsp
0x00000000004311a6 : insb byte ptr [rdi], dx ; ret 0x9e6d
0x000000000040ca9f : insd dword ptr [rdi], dx ; ret 0x480d
0x000000000040988d : insd dword ptr [rdi], dx ; ret 0x890d
0x00000000004311fa : insd dword ptr [rdi], dx ; ret 0x9e6d
0x000000000040bb80 : insd dword ptr [rdi], dx ; ret 0xb90d
0x000000000040b7f5 : int 0x25
0x0000000000429ed7 : int 0x5b
0x000000000040c85f : int1 ; and byte ptr [rcx - 0xe], al ; jmp qword ptr [rcx]
0x000000000046a9e1 : int1 ; ret 0x43ce
0x00000000004701a5 : int1 ; ret 0x81e9
0x00000000004670af : int1 ; ret 0x8589
0x000000000047013f : int1 ; ret 0x8b48
0x0000000000469fd1 : int1 ; xchg eax, esp ; ret
0x000000000045105a : iretd ; mov word ptr [rax], es ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; call qword ptr [rax]
0x0000000000401903 : ja 0x40190a ; pop rbp ; ret
0x000000000042ce6e : jb 0x42ce9f ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004405ab : jbe 0x4405ef ; ret 0x8589
0x00000000004405ff : jbe 0x440643 ; ret 0x8589
0x000000000044ff5b : jbe 0x44ff9f ; ret 0x1db9
0x0000000000458ac5 : jbe 0x458b09 ; ret 0x8948
0x000000000040190f : je 0x40190d ; pop rbp ; mov edi, 0x677298 ; jmp rax
0x000000000043f8e8 : je 0x44de89 ; jmp 0x44bb3b
0x000000000043f840 : je 0x452a72 ; jmp 0x44bb3b
0x000000000043f920 : je 0x4550c4 ; jmp 0x44bb3b
0x000000000043f878 : je 0x45763e ; jmp 0x44bb3b
0x000000000043f8b0 : je 0x458493 ; jmp 0x44bb3b
0x0000000000475c54 : je 0x475c63 ; add byte ptr [rax], al ; sub byte ptr [rsi], dh ; sti ; jmp qword ptr [rbx]
0x00000000004363a1 : jg 0x4363b5 ; xchg eax, edi ; ret 0xd284
0x00000000004590d4 : jg 0x4590a3 ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rcx]
0x00000000004594e3 : jg 0x4594e7 ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rdi
0x0000000000475421 : jg 0x475420 ; jmp rsp
0x0000000000423366 : jge 0x4232eb ; ret 0xffd5
0x0000000000423e30 : jge 0x423e10 ; shr cl, cl ; ret 0x3b
0x0000000000453cc2 : jge 0x453c80 ; ret
0x0000000000453cc1 : jge 0x453c81 ; ret
0x00000000004670ad : jge 0x46704c ; int1 ; ret 0x8589
0x000000000040ee53 : jle 0x40ee5d ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000467101 : jle 0x4670a0 ; int1 ; ret 0x8589
0x000000000047013d : jle 0x4700dc ; int1 ; ret 0x8b48
0x00000000004701a3 : jle 0x470142 ; int1 ; ret 0x81e9
0x00000000004015eb : jmp 0x4014a7
0x00000000004029bc : jmp 0x402c37
0x0000000000406eca : jmp 0x407d49
0x0000000000405e84 : jmp 0x407d4a
0x00000000004076c3 : jmp 0x407d4b
0x000000000040a94f : jmp 0x40a95a
0x000000000040c1eb : jmp 0x40cc22
0x0000000000412fd6 : jmp 0x413bbe
0x0000000000413809 : jmp 0x413bbf
0x000000000041336d : jmp 0x413bc0
0x0000000000413797 : jmp 0x413bc1
0x0000000000416e80 : jmp 0x416eeb
0x0000000000424580 : jmp 0x427a00
0x0000000000422484 : jmp 0x427a01
0x0000000000423851 : jmp 0x427a02
0x000000000042b1ab : jmp 0x42bc17
0x000000000042b0e8 : jmp 0x42bc19
0x000000000042d213 : jmp 0x42d278
0x000000000042fee9 : jmp 0x430995
0x000000000043346b : jmp 0x4345b0
0x0000000000433e86 : jmp 0x4345b1
0x00000000004346d9 : jmp 0x4346e4
0x0000000000439936 : jmp 0x439c18
0x000000000043a5cd : jmp 0x43a648
0x000000000043f846 : jmp 0x44bb35
0x000000000044da3b : jmp 0x459d2f
0x000000000045030d : jmp 0x459d33
0x000000000044cebb : jmp 0x459d34
0x000000000044dca2 : jmp 0x459d35
0x000000000045c707 : jmp 0x45c758
0x0000000000461142 : jmp 0x462ff2
0x0000000000460214 : jmp 0x462ff3
0x0000000000460aaa : jmp 0x462ff4
0x000000000046e62e : jmp 0x471534
0x000000000046d720 : jmp 0x471535
0x000000000042bd8a : jmp 0x4f4e8086
0x00000000004357ef : jmp 0xffffffffc4078eb6
0x000000000040bc05 : jmp 0xfffffffff2c1bea8
0x0000000000458546 : jmp 0xfffffffff6c6fb55
0x0000000000458545 : jmp 0xfffffffff6c6fb56
0x0000000000408c71 : jmp qword ptr [rax]
0x0000000000458bb4 : jmp qword ptr [rbx]
0x00000000004063d4 : jmp qword ptr [rcx]
0x0000000000425007 : jmp qword ptr [rdi]
0x000000000042c01a : jmp qword ptr [rdx]
0x0000000000452276 : jmp qword ptr [rsi]
0x0000000000401917 : jmp rax
0x0000000000423958 : jmp rbx
0x000000000042438a : jmp rcx
0x000000000040bbf4 : jmp rdi
0x0000000000401957 : jmp rdx
0x0000000000458d4b : jmp rsi
0x0000000000423c68 : jmp rsp
0x0000000000401940 : jne 0x401947 ; pop rbp ; ret
0x0000000000406ce5 : jno 0x406d0a ; mov byte ptr [rsi - 0x3faa75], bl ; ret 0x5589
0x0000000000430592 : jno 0x4305b7 ; ret 0x8941
0x0000000000462805 : jno 0x4627c4 ; ror dword ptr [rcx], 1 ; ret
0x000000000041d27e : jo 0x41d28a ; ret
0x000000000041eeee : jo 0x41eefa ; ret
0x000000000042243d : jo 0x422449 ; ret
0x0000000000429724 : jo 0x429785 ; ret
0x00000000004753e1 : jo 0x4753e0 ; jmp rsp
0x000000000045226e : jp 0x452278 ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rsi]
0x0000000000462803 : jp 0x4627e0 ; jno 0x4627c6 ; ror dword ptr [rcx], 1 ; ret
0x000000000040c85e : js 0x40c859 ; and byte ptr [rcx - 0xe], al ; jmp qword ptr [rcx]
0x000000000040c920 : js 0x40c945 ; ret 0x8941
0x0000000000475cb8 : js 0x475cf4 ; sti ; call rdi
0x000000000045062e : lcall ptr [rbx + 0x47] ; ret
0x0000000000423e2e : lcall ptr [rbx - 0x162d2583] ; ret 0x3b
0x000000000044f3af : lcall ptr [rdx] ; ret 0x4fab
0x0000000000424f2e : lcall ptr [rsi] ; pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x0000000000417686 : lea eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000410b6a : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000429a19 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000045c4f1 : lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000410b69 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000045c4f0 : lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040ca9c : les r14d, ptr [r15] ; insd dword ptr [rdi], dx ; ret 0x480d
0x000000000040864f : les r9d, ptr [r8 - 0x7763661c] ; ret
0x0000000000458ac3 : ljmp ptr [rcx] ; jbe 0x458b0b ; ret 0x8948
0x000000000042278e : ljmp ptr [rdi] ; ret 0x23da
0x0000000000475594 : lodsb al, byte ptr [rsi] ; adc al, 0 ; add ah, al ; ret
0x000000000041241b : lodsb al, byte ptr [rsi] ; ret
0x0000000000453cc0 : lodsd eax, dword ptr [rsi] ; jge 0x453c82 ; ret
0x000000000043091e : loop 0x4308c9 ; xor dl, ch ; fadd qword ptr [rcx - 0x77] ; ret
0x00000000004532ea : loop 0x4532d6 ; cli ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x000000000040ac5c : loope 0x40ac66 ; adc r8d, dword ptr [rcx - 0x77] ; ret 0x8141
0x000000000040b8af : loope 0x40b84b ; test eax, 0x89414761 ; ret 0x8141
0x000000000040bfb9 : loope 0x40bf6c ; cmp eax, 0x894121d6 ; ret 0x8141
0x000000000040c4e3 : loope 0x40c4ef ; movzx eax, cl ; mov rsp, rbp ; pop rbp ; ret
0x00000000004104b5 : loope 0x4104c1 ; movzx eax, cl ; mov rsp, rbp ; pop rbp ; ret
0x0000000000425795 : loope 0x425763 ; jmp 0x427a03
0x00000000004532eb : loope 0x4532ef ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x0000000000402b9c : loopne 0x402ba3 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040af35 : loopne 0x40af48 ; mov ebx, 0x8941549f ; ret 0x8141
0x000000000040c91c : loopne 0x40c90e ; mov ch, 0x1b ; js 0x40c949 ; ret 0x8941
0x000000000040e7d1 : loopne 0x40e821 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040e7d0 : loopne 0x40e822 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000411bb7 : loopne 0x411c09 ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000411bb6 : loopne 0x411c0a ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000419b73 : loopne 0x419bc6 ; lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000042911d : loopne 0x429183 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042a504 : loopne 0x42a557 ; add esp, 0xa0 ; pop rbp ; ret
0x000000000042c8d3 : loopne 0x42c8dc ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042d25e : loopne 0x42d2ae ; add esp, 0x60 ; pop rbp ; ret
0x000000000042d25d : loopne 0x42d2af ; add esp, 0x60 ; pop rbp ; ret
0x0000000000430661 : loopne 0x4306c7 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000043a1c0 : loopne 0x43a1c7 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000043ab52 : loopne 0x43ab59 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000045bf4c : loopne 0x45bf9b ; mov esp, ebp ; pop rbp ; ret
0x000000000045bf4b : loopne 0x45bf9c ; mov esp, ebp ; pop rbp ; ret
0x000000000045c19c : loopne 0x45c1eb ; mov esp, ebp ; pop rbp ; ret
0x000000000045c19b : loopne 0x45c1ec ; mov esp, ebp ; pop rbp ; ret
0x000000000045cb3f : loopne 0x45cad3 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000045cb3e : loopne 0x45cad4 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004751a8 : mov ah, -0x2b ; clc ; jmp rsp
0x000000000044ef60 : mov ah, -0x50 ; out -0x47, eax ; scasd eax, dword ptr [rdi] ; mov bl, -0x2e ; ret 0x1b2
0x000000000042335d : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000423437 : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000475268 : mov ah, 0x10 ; cli ; jmp rsp
0x0000000000475360 : mov ah, 0x45 ; sti ; call rsp
0x00000000004213e5 : mov ah, 0x75 ; ret
0x000000000047531c : mov ah, 0xa ; add byte ptr [rax], al ; add al, 0x41 ; sti ; call rsp
0x000000000047535c : mov ah, 0xb ; add byte ptr [rax], al ; mov ah, 0x45 ; sti ; call rsp
0x0000000000412fef : mov al, -0x17 ; ret
0x0000000000413b5e : mov al, -0x44 ; ret
0x0000000000429ef3 : mov al, -0x47 ; ret
0x0000000000413b29 : mov al, -0x69 ; lodsb al, byte ptr [rsi] ; ret
0x000000000042fbe1 : mov al, -0x75 ; adc dword ptr [rcx - 0x7629d63a], ecx ; ret 0xea81
0x00000000004390ff : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000040627b : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042830d : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000476290 : mov al, 0x17 ; cld ; call rdi
0x000000000046c200 : mov al, 0x21 ; ret 0x8941
0x0000000000413ebc : mov al, 0x2d ; rol byte ptr [rdx], -0x35 ; ret
0x0000000000413f07 : mov al, 0x2d ; rol dword ptr [rdx], -0x35 ; ret
0x00000000004133f6 : mov al, 0x35 ; ret
0x0000000000475ea0 : mov al, 0x41 ; sti ; jmp qword ptr [rbx]
0x000000000045a7bd : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000045a48a : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000045a6ed : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040ae01 : mov al, byte ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000460212 : mov bh, -0x6d ; jmp 0x462ff5
0x000000000044ef65 : mov bl, -0x2e ; ret 0x1b2
0x000000000044061b : mov bl, -0x2e ; ret 0x8589
0x000000000044ef81 : mov bl, -0x2e ; ret 0x8b48
0x000000000041ad85 : mov bl, 0x75 ; ret
0x000000000040736c : mov byte ptr [r9 + 0xf], r8b ; xchg eax, ebp ; ret 0x8445
0x0000000000407351 : mov byte ptr [r9 - 0x78], r8b ; ret 0x8844
0x0000000000416237 : mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x000000000040736d : mov byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000407352 : mov byte ptr [rcx - 0x78], al ; ret 0x8844
0x0000000000401973 : mov byte ptr [rip + 0x275986], 1 ; ret
0x000000000042f3f8 : mov byte ptr [rsi + rsi - 0x13a04619], cl ; ret 0xb2c5
0x0000000000406ce7 : mov byte ptr [rsi - 0x3faa75], bl ; ret 0x5589
0x000000000040c91e : mov ch, 0x1b ; js 0x40c947 ; ret 0x8941
0x0000000000422bdf : mov ch, byte ptr [rdx - 0x47] ; pop rbp ; pop rcx ; ret 0x1b2
0x000000000045cfc4 : mov ch, cl ; ret
0x000000000045461b : mov cl, -0x32 ; cli ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x000000000044ceb9 : mov cl, 0x13 ; jmp 0x459d36
0x0000000000461eca : mov cl, 0x13 ; ret 0x1ab9
0x0000000000462ce3 : mov cl, 0x13 ; ret 0x1e9
0x000000000045e129 : mov cl, 0x13 ; ret 0x8589
0x000000000040c17a : mov cx, 0x7299 ; ret
0x000000000040c4e6 : mov dh, -0x3f ; mov rsp, rbp ; pop rbp ; ret
0x000000000045b454 : mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x0000000000459efc : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000045a490 : mov dh, -0x40 ; pop rbp ; ret
0x0000000000413036 : mov dh, 0x4a ; or byte ptr [rbp + 0x39], al ; enter 0xf41, -0x6c ; ret 0x8445
0x000000000045bf0a : mov dl, -0x34 ; cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x00000000004751e9 : mov dr1, ecx ; jmp rsp
0x000000000045b181 : mov dr1, word ptr [rcx + rcx*4 - 0x7bf05bbb] ; ret 2
0x00000000004192f9 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000418ecf : mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x000000000043a5ca : mov dword ptr [rbp - 0x14], eax ; jmp 0x43a64b
0x000000000040c1e8 : mov dword ptr [rbp - 0x3c], eax ; jmp 0x40cc25
0x000000000044da68 : mov dword ptr [rbp - 0x49c], eax ; jmp 0x459d35
0x0000000000412fd3 : mov dword ptr [rbp - 0x50], eax ; jmp 0x413bc1
0x000000000042b1a8 : mov dword ptr [rbp - 0x6c], eax ; jmp 0x42bc1a
0x0000000000406ec7 : mov dword ptr [rbp - 0x7c], eax ; jmp 0x407d4c
0x000000000042c271 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402755 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004195d6 : mov dword ptr [rcx + 0x30], eax ; mov rsp, rbp ; pop rbp ; ret
0x000000000041917d : mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000408240 : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042d0db : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000045c4ed : mov eax, dword ptr [rbp - 0x10] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000416225 : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000430b7b : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000042d2ae : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000417c8e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000043a445 : mov eax, dword ptr [rbp - 0x18] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004192fc : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040e7cf : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000042d25c : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000045cb3d : mov eax, dword ptr [rbp - 0x20] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000045bf4a : mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040823d : mov eax, dword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000041917f : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000045c744 : mov eax, dword ptr [rbp - 0x40] ; pop rbp ; ret
0x000000000041815d : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000418cbf : mov eax, dword ptr [rbp - 0xc] ; add rsp, 8 ; pop rbp ; ret
0x0000000000430e10 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004349dc : mov eax, dword ptr [rbp - 8] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042936d : mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000045c39c : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004078b1 : mov eax, dword ptr [rcx - 0xa] ; jmp qword ptr [rcx]
0x000000000041917e : mov eax, dword ptr ds:[rbp - 0x38] ; pop rbp ; ret
0x0000000000425b98 : mov ebp, 0xe19c53ba ; ret
0x000000000046fef8 : mov ebp, 0xfffffe00 ; call 0x45c1c7
0x000000000045fd7c : mov ebp, ecx ; ret
0x000000000040199b : mov ebp, esp ; call rax
0x0000000000401901 : mov ebp, esp ; ja 0x40190c ; pop rbp ; ret
0x000000000046c322 : mov ebx, 0x214efb6f ; ret 0x8941
0x000000000046efee : mov ebx, 0x81ffffff ; ret 0x8ae1
0x000000000040af37 : mov ebx, 0x8941549f ; ret 0x8141
0x0000000000453613 : mov ecx, 0xc7fffade ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x0000000000418ecc : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x0000000000401995 : mov edi, 0x676e20 ; mov rbp, rsp ; call rax
0x0000000000401912 : mov edi, 0x677298 ; jmp rax
0x0000000000401952 : mov edi, 0x677298 ; jmp rdx
0x00000000004332e6 : mov edi, 0xb8000012 ; insd dword ptr [rdi], dx ; ret 0x9e6d
0x0000000000422437 : mov edi, 0xb8000055 ; wait ; jo 0x42244f ; ret
0x000000000042530d : mov edi, dword ptr [rax] ; call 0x4015b4
0x000000000046fef7 : mov edi, dword ptr [rbp - 0x200] ; call 0x45c1c8
0x0000000000471587 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000471586 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000470d4c : mov edx, 0x2144b57b ; ret 0x8941
0x00000000004398ae : mov edx, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000422bfb : mov edx, 0x595db993 ; ret 0x8b48
0x0000000000470f61 : mov edx, 0xe9b9f505 ; ret
0x0000000000423a72 : mov esi, 0x39443e04 ; ret 0xf41
0x0000000000439897 : mov esi, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000401950 : mov esi, eax ; mov edi, 0x677298 ; jmp rdx
0x0000000000475e9c : mov esp, 0xb0000008 ; sti ; jmp qword ptr [rbx]
0x000000000045c63f : mov esp, 0xb898e02d ; ret
0x0000000000413213 : mov esp, 0xb9b84b03 ; xchg eax, ebp ; ret 0x212b
0x000000000045226d : mov esp, 0xc700007a ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rsi]
0x0000000000408243 : mov esp, ebp ; pop rbp ; ret
0x00000000004195d5 : mov qword ptr [rcx + 0x30], rax ; mov rsp, rbp ; pop rbp ; ret
0x000000000045c63e : mov r12d, 0xb898e02d ; ret
0x0000000000412fee : mov r8b, -0x17 ; ret
0x0000000000413b5d : mov r8b, -0x44 ; ret
0x0000000000413b28 : mov r8b, -0x69 ; lodsb al, byte ptr [rsi] ; ret
0x000000000042fbe0 : mov r8b, -0x75 ; adc dword ptr [rcx - 0x7629d63a], ecx ; ret 0xea81
0x0000000000413ebb : mov r8b, 0x2d ; rol byte ptr [rdx], -0x35 ; ret
0x0000000000413f06 : mov r8b, 0x2d ; rol dword ptr [rdx], -0x35 ; ret
0x00000000004133f5 : mov r8b, 0x35 ; ret
0x0000000000411bb8 : mov rax, qword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042d0da : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042d2ad : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000417c8d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040e7ce : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000042d25b : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000045c743 : mov rax, qword ptr [rbp - 0x40] ; pop rbp ; ret
0x000000000042936c : mov rax, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000045c39b : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040199a : mov rbp, rsp ; call rax
0x0000000000401900 : mov rbp, rsp ; ja 0x40190d ; pop rbp ; ret
0x000000000042530c : mov rdi, qword ptr [rax] ; call 0x4015b5
0x000000000046fef6 : mov rdi, qword ptr [rbp - 0x200] ; call 0x45c1c9
0x000000000040194f : mov rsi, rax ; mov edi, 0x677298 ; jmp rdx
0x0000000000408242 : mov rsp, rbp ; pop rbp ; ret
0x000000000042ce71 : mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000045105b : mov word ptr [rax], es ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; call qword ptr [rax]
0x000000000042f3f9 : mov word ptr [rsi], dr0 ; out -0x47, eax ; pop rdi ; in al, dx ; ret 0xb2c5
0x000000000044bbe8 : movabs al, byte ptr [0x8348e28948fffffb] ; ret 0x48f0
0x000000000044be0b : movabs al, byte ptr [0x8348e28948fffffc] ; ret 0x48f0
0x000000000044c02b : movabs al, byte ptr [0x8348e28948fffffd] ; ret 0x48f0
0x0000000000435691 : movabs al, byte ptr [0xe9ffffff38858948] ; ret 6
0x000000000041e6d8 : movabs byte ptr [0x840ffffff3c48589], al ; ret 0x4b
0x0000000000475684 : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add al, bl ; sar al, 1 ; call rsi
0x000000000044074e : movsb byte ptr [rdi], byte ptr [rsi] ; movsxd rbx, esp ; ret
0x0000000000421925 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x6a8a
0x0000000000446d93 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x8923
0x0000000000451261 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xb923
0x000000000045a101 : movsx eax, al ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004406fb : movsxd rbx, esp ; ret
0x000000000045b453 : movzx eax, al ; add rsp, 8 ; pop rbp ; ret
0x0000000000459efb : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000045a48f : movzx eax, al ; pop rbp ; ret
0x000000000041623a : movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x000000000040c4e5 : movzx eax, cl ; mov rsp, rbp ; pop rbp ; ret
0x00000000004396a8 : neg byte ptr [rsi + 0x2948e012] ; ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x000000000041abc5 : nop ; ret
0x0000000000428fd2 : nop ; ret 0x148
0x0000000000428fe6 : nop ; ret 0x2948
0x00000000004715a8 : nop dword ptr [rax + rax] ; ret
0x0000000000462e23 : not byte ptr [rdx - 0x7ebe5362] ; ret
0x00000000004148e5 : or al, 0x25 ; ret 0x4736
0x000000000042335a : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000423434 : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000444df6 : or al, 0x7a ; ret 0x8909
0x000000000044c9bd : or al, 0x7a ; ret 0xb909
0x000000000040b900 : or al, 0xffffff89 ; ret 0xe281
0x000000000040b901 : or al, 0xffffffffffffff89 ; ret 0xe281
0x000000000043f79b : or al, 1 ; add cl, ch ; nop ; ret
0x0000000000475fe5 : or al, byte ptr [rax] ; add al, ch ; sti ; call qword ptr [rdx]
0x000000000047531d : or al, byte ptr [rax] ; add byte ptr [rcx + rax*2], al ; sti ; call rsp
0x0000000000435d55 : or bh, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x000000000040af36 : or bh, byte ptr [rbx - 0x76beab61] ; ret 0x8141
0x0000000000418ed0 : or byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000046d063 : or byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000475edd : or byte ptr [rax], al ; add byte ptr [rax + 0x46], dl ; sti ; jmp rsi
0x000000000042a788 : or byte ptr [rax], al ; add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x0000000000414330 : or byte ptr [rax], al ; add cl, ch ; ret 1
0x000000000041432f : or byte ptr [rax], r8b ; add cl, ch ; ret 1
0x0000000000413038 : or byte ptr [rbp + 0x39], al ; enter 0xf41, -0x6c ; ret 0x8445
0x0000000000475db8 : or byte ptr [rbx], bh ; sti ; call rdx
0x0000000000440653 : or ch, dh ; ret 0x8589
0x000000000044f31b : or ch, dh ; ret 0xa2b9
0x000000000045874b : or ch, dh ; ret 0xdae9
0x0000000000435d54 : or dil, al ; test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x0000000000475969 : or dl, bh ; call qword ptr [rax]
0x0000000000424446 : or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x000000000040ed59 : or dword ptr [rax - 0x77], ecx ; ret 0xb0
0x00000000004195d4 : or dword ptr [rax - 0x77], ecx ; xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000475fc5 : or dword ptr [rax], eax ; add byte ptr [rax], ch ; sti ; call rdx
0x00000000004752e5 : or dword ptr [rax], eax ; add byte ptr [rbx + rcx*2 - 6], al ; jmp rsp
0x000000000045c73f : or eax, 0x48000000 ; mov eax, dword ptr [rbp - 0x40] ; pop rbp ; ret
0x000000000045c397 : or eax, 0x48000000 ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004753dd : or eax, 0x70840000 ; sti ; jmp rsp
0x0000000000412413 : or eax, dword ptr [rax] ; add byte ptr [rbx - 0x69d25fbb], cl ; lodsb al, byte ptr [rsi] ; ret
0x000000000042e5ea : or ebp, dword ptr [rax - 0x10] ; ret
0x000000000046f328 : or ebp, ecx ; jmp qword ptr [rcx]
0x000000000044da38 : or ecx, edx ; stosd dword ptr [rdi], eax ; jmp 0x459d32
0x000000000041917b : or edi, eax ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000462821 : out -0x47, al ; ror dword ptr [rcx], 1 ; ret
0x000000000042f3fb : out -0x47, eax ; pop rdi ; in al, dx ; ret 0xb2c5
0x000000000044ef62 : out -0x47, eax ; scasd eax, dword ptr [rdi] ; mov bl, -0x2e ; ret 0x1b2
0x0000000000452d65 : out -6, eax ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x0000000000424d3b : out dx, al ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x000000000045a48c : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000440654 : out dx, al ; ret 0x8589
0x000000000043d17e : out dx, al ; ret 0x895e
0x000000000044f31c : out dx, al ; ret 0xa2b9
0x000000000045874c : out dx, al ; ret 0xdae9
0x00000000004117c4 : out dx, eax ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000045a7bf : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000429ef2 : out dx, eax ; mov al, -0x47 ; ret
0x0000000000403c22 : out dx, eax ; ret
0x000000000044a966 : out dx, eax ; ret 0x895e
0x000000000044ec74 : out dx, eax ; ret 0xe95e
0x0000000000439899 : outsb dx, byte ptr [rsi] ; add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000450dbb : outsb dx, byte ptr [rsi] ; pop qword ptr [rax] ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rdi
0x0000000000425e25 : outsb dx, byte ptr [rsi] ; ret 0x4861
0x000000000041aa76 : outsb dx, byte ptr [rsi] ; ret 0x8961
0x0000000000425e70 : outsb dx, byte ptr [rsi] ; ret 0xe961
0x000000000042c011 : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000044b73a : outsd dx, dword ptr [rsi] ; ret 0
0x000000000043989c : outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000042ce6c : pop ax ; jb 0x42cea1 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000450dbc : pop qword ptr [rax] ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rdi
0x0000000000426cd9 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000047159c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000042911f : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000426cdb : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000047159e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000426cdd : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004715a0 : pop r14 ; pop r15 ; ret
0x0000000000410b6e : pop r14 ; pop rbp ; ret
0x0000000000426cdf : pop r15 ; pop rbp ; ret
0x00000000004715a2 : pop r15 ; ret
0x000000000042ce6d : pop rax ; jb 0x42cea0 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000043f7d7 : pop rax ; ret
0x000000000040ae33 : pop rbp ; and eax, dword ptr [rcx - 0x77] ; ret 0x8141
0x000000000040ae53 : pop rbp ; and esp, dword ptr [rcx] ; ret 0x941
0x0000000000401972 : pop rbp ; mov byte ptr [rip + 0x275986], 1 ; ret
0x0000000000401911 : pop rbp ; mov edi, 0x677298 ; jmp rax
0x000000000040194e : pop rbp ; mov rsi, rax ; mov edi, 0x677298 ; jmp rdx
0x000000000047159b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000426cdc : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000047159f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000422be2 : pop rbp ; pop rcx ; ret 0x1b2
0x000000000041eeb5 : pop rbp ; pop rcx ; ret 0x8589
0x0000000000422bfe : pop rbp ; pop rcx ; ret 0x8b48
0x0000000000401905 : pop rbp ; ret
0x000000000042911e : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000427e15 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000410b6d : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000434336 : pop rbx ; pop rbp ; ret
0x000000000042a790 : pop rbx ; ret
0x000000000040bc04 : pop rcx ; jmp 0xfffffffff2c1bea9
0x000000000042e65a : pop rcx ; jmp rdi
0x0000000000422be3 : pop rcx ; ret 0x1b2
0x000000000041d2b6 : pop rcx ; ret 0x8589
0x0000000000422bff : pop rcx ; ret 0x8b48
0x0000000000424f30 : pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x000000000042e676 : pop rdi ; in al, dx ; ret 0x89c5
0x000000000042f3e1 : pop rdi ; in al, dx ; ret 0xb2c5
0x0000000000426ce0 : pop rdi ; pop rbp ; ret
0x00000000004715a3 : pop rdi ; ret
0x000000000042e6ae : pop rdx ; jmp rdi
0x000000000043ad12 : pop rdx ; ret
0x000000000042e622 : pop rsi ; in al, dx ; ret 0x89c5
0x0000000000426cde : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004715a1 : pop rsi ; pop r15 ; ret
0x0000000000410b6f : pop rsi ; pop rbp ; ret
0x00000000004027dd : pop rsi ; ret 0x8959
0x0000000000402a84 : pop rsi ; ret 0xb959
0x0000000000426cda : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000047159d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000429120 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041d2b5 : pop rsp ; pop rcx ; ret 0x8589
0x000000000040e555 : popfq ; ret 0xd284
0x000000000046e6ea : popfq ; sar dh, -1 ; dec dword ptr [rcx - 0x7f] ; ret
0x0000000000452d64 : push -0x38000519 ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x0000000000422be0 : push -0x47 ; pop rbp ; pop rcx ; ret 0x1b2
0x0000000000424dca : push -0x75425eeb ; push rbp ; ret
0x0000000000421928 : push -0x77 ; test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x0000000000414f9d : push 0x2b ; adc dword ptr [rax - 0x75], ecx ; push rbp ; call 0x49044ef9
0x000000000047535b : push qword ptr [rbx + rcx + 0x45b40000] ; sti ; call rsp
0x000000000047531b : push qword ptr [rdx + rcx + 0x41040000] ; sti ; call rsp
0x0000000000457360 : push qword ptr [rdx - 0x160e830a] ; ret
0x0000000000458b43 : push rax ; add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8840
0x00000000004026e5 : push rax ; pop rbp ; ret
0x000000000044d9d9 : push rax ; ret
0x0000000000475ee0 : push rax ; sti ; jmp rsi
0x0000000000414fa2 : push rbp ; call 0x49044ef4
0x000000000041046f : push rbp ; fmul dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x0000000000408cbb : push rbp ; jmp qword ptr [rax]
0x000000000045e128 : push rbp ; mov cl, 0x13 ; ret 0x8589
0x0000000000401994 : push rbp ; mov edi, 0x676e20 ; mov rbp, rsp ; call rax
0x0000000000424dcf : push rbp ; ret
0x0000000000424d66 : push rbp ; ret 0xd284
0x000000000042335f : push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000423439 : push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000456ad4 : push rbp ; xor al, byte ptr [rax] ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rbx
0x000000000043f923 : push rdi ; add dword ptr [rax], eax ; jmp 0x44bb38
0x0000000000446de6 : push rdi ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x8923
0x0000000000451260 : push rdi ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xb923
0x000000000043989b : push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000443d56 : push rdi ; ret
0x000000000040f5f8 : push rdx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004523e6 : push rsi ; cli ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rdi
0x00000000004060e5 : push rsi ; cmp al, -0x47 ; and al, 0xffffffffffffffa3 ; ret
0x0000000000461ec9 : push rsi ; mov cl, 0x13 ; ret 0x1ab9
0x0000000000462ce2 : push rsi ; mov cl, 0x13 ; ret 0x1e9
0x000000000045ed30 : push rsi ; mov cl, 0x13 ; ret 0x8589
0x0000000000446d92 : push rsi ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x8923
0x0000000000443d02 : push rsi ; ret
0x0000000000408c70 : push rsp ; jmp qword ptr [rax]
0x000000000044dad5 : push rsp ; ret 0
0x000000000046f325 : pushfq ; fisttp word ptr [rcx] ; or ebp, ecx ; jmp qword ptr [rcx]
0x00000000004180f7 : pushfq ; ret 0xd284
0x0000000000425310 : pushfq ; ret 0xfffd
0x0000000000454b1b : pushfq ; sar edi, 1 ; inc dword ptr [rcx + 0xf] ; ret 0x8589
0x000000000042f3dc : rcl byte ptr [rsi + 0x5fb91b3f], cl ; in al, dx ; ret 0xb2c5
0x0000000000453bfc : rcr al ; cli ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x0000000000401491 : ret
0x000000000041a1de : ret 0
0x00000000004630a3 : ret 0x10
0x000000000044219a : ret 0x103
0x00000000004103c3 : ret 0x11
0x000000000043ec02 : ret 0x111
0x000000000040b4e9 : ret 0x1189
0x00000000004439e2 : ret 0x135
0x0000000000413073 : ret 0x148
0x000000000046edd1 : ret 0x14e9
0x0000000000405c39 : ret 0x15
0x000000000040b256 : ret 0x19
0x0000000000408e8e : ret 0x1a
0x0000000000461ecc : ret 0x1ab9
0x000000000041b1ad : ret 0x1add
0x0000000000422be5 : ret 0x1b2
0x000000000045d7c1 : ret 0x1dad
0x000000000044ff5d : ret 0x1db9
0x000000000045ed04 : ret 0x1e
0x0000000000462ce5 : ret 0x1e9
0x000000000046f567 : ret 0x1f
0x0000000000463071 : ret 0x20
0x0000000000412b55 : ret 0x212b
0x0000000000416aa0 : ret 0x2148
0x000000000041bafa : ret 0x23da
0x0000000000465b59 : ret 0x273b
0x00000000004017f2 : ret 0x2759
0x00000000004015f2 : ret 0x275a
0x00000000004287f8 : ret 0x279e
0x0000000000451812 : ret 0x28e8
0x0000000000424449 : ret 0x2948
0x0000000000424f34 : ret 0x2a
0x0000000000423362 : ret 0x2d50
0x0000000000454ed6 : ret 0x2eb9
0x000000000040f784 : ret 0x2f8e
0x000000000042e382 : ret 0x2fb6
0x00000000004393fe : ret 0x3040
0x00000000004511f0 : ret 0x3141
0x0000000000430dae : ret 0x3145
0x000000000046a9ed : ret 0x33
0x0000000000423e34 : ret 0x3b
0x0000000000420e95 : ret 0x3e
0x000000000041588a : ret 0x40
0x000000000040ac22 : ret 0x409a
0x0000000000405105 : ret 0x409b
0x0000000000439af8 : ret 0x42e8
0x0000000000464232 : ret 0x43ce
0x000000000040637a : ret 0x4589
0x00000000004148e7 : ret 0x4736
0x00000000004242d1 : ret 0x4802
0x00000000004160b5 : ret 0x4804
0x0000000000416101 : ret 0x480c
0x000000000040caa0 : ret 0x480d
0x000000000046177e : ret 0x4810
0x000000000043989e : ret 0x4815
0x0000000000425e26 : ret 0x4861
0x000000000040802e : ret 0x48f0
0x000000000041e6e1 : ret 0x4b
0x00000000004519b0 : ret 0x4b91
0x0000000000429cf7 : ret 0x4cc0
0x0000000000426d38 : ret 0x4cf0
0x000000000042bd8c : ret 0x4f0b
0x00000000004498e3 : ret 0x4fab
0x000000000040b8f4 : ret 0x5189
0x000000000046b339 : ret 0x54
0x0000000000406ced : ret 0x5589
0x0000000000415872 : ret 0x5674
0x00000000004235ea : ret 0x5966
0x000000000046b569 : ret 0x5b
0x000000000042a9e7 : ret 0x5bc6
0x000000000045bf0f : ret 0x61
0x00000000004114b8 : ret 0x629e
0x000000000046ca69 : ret 0x6348
0x000000000045e3ac : ret 0x6620
0x0000000000402952 : ret 0x68be
0x000000000041a846 : ret 0x6a8a
0x000000000041a4fe : ret 0x77a8
0x000000000041b661 : ret 0x7a8a
0x00000000004222db : ret 0x7b7f
0x0000000000407203 : ret 0x7fb9
0x0000000000414dca : ret 0x8000
0x0000000000428c8a : ret 0x8041
0x000000000040ac63 : ret 0x8141
0x00000000004395f9 : ret 0x8148
0x00000000004701a6 : ret 0x81e9
0x00000000004241f4 : ret 0x822d
0x0000000000407371 : ret 0x8445
0x000000000044edcb : ret 0x8548
0x0000000000403bec : ret 0x8589
0x0000000000407978 : ret 0x858a
0x0000000000458b48 : ret 0x8840
0x0000000000407355 : ret 0x8844
0x0000000000444da4 : ret 0x8909
0x000000000040988e : ret 0x890d
0x0000000000446d94 : ret 0x8923
0x0000000000446ffc : ret 0x8925
0x000000000041b273 : ret 0x8940
0x000000000040b8a9 : ret 0x8941
0x0000000000401c03 : ret 0x8948
0x0000000000437ebf : ret 0x894a
0x00000000004027de : ret 0x8959
0x000000000043d180 : ret 0x895e
0x000000000041aa77 : ret 0x8961
0x00000000004639ab : ret 0x8962
0x0000000000463797 : ret 0x896c
0x0000000000405c67 : ret 0x8976
0x000000000040cdd0 : ret 0x898b
0x000000000042e624 : ret 0x89c5
0x0000000000412674 : ret 0x89e1
0x00000000004093ac : ret 0x89e5
0x0000000000431d08 : ret 0x89f1
0x0000000000404403 : ret 0x89f5
0x00000000004096cc : ret 0x89fe
0x00000000004394b8 : ret 0x8a44
0x00000000004393b5 : ret 0x8a4a
0x000000000046eff3 : ret 0x8ae1
0x000000000040acfa : ret 0x8b48
0x000000000043b7e6 : ret 0x8cbc
0x0000000000458eaa : ret 0x90e8
0x0000000000409da0 : ret 0x9142
0x000000000040ac82 : ret 0x941
0x000000000042e0ab : ret 0x957f
0x0000000000433905 : ret 0x9589
0x0000000000450667 : ret 0x96
0x00000000004311a7 : ret 0x9e6d
0x0000000000459267 : ret 0xa
0x0000000000415884 : ret 0xa159
0x000000000044f31d : ret 0xa2b9
0x000000000042343c : ret 0xa30b
0x00000000004124e2 : ret 0xaa3d
0x000000000043a50f : ret 0xac60
0x0000000000462937 : ret 0xafe9
0x0000000000405fbd : ret 0xb0
0x000000000042f3e3 : ret 0xb2c5
0x0000000000413634 : ret 0xb2e1
0x000000000045f970 : ret 0xb38e
0x0000000000424d40 : ret 0xb740
0x000000000044e467 : ret 0xb8
0x000000000046fb62 : ret 0xb845
0x000000000042ce67 : ret 0xb848
0x000000000044c9bf : ret 0xb909
0x000000000040bb81 : ret 0xb90d
0x0000000000451262 : ret 0xb923
0x0000000000454b40 : ret 0xb925
0x0000000000422f70 : ret 0xb940
0x0000000000439342 : ret 0xb94a
0x0000000000402a85 : ret 0xb959
0x000000000046c8c7 : ret 0xb962
0x000000000046c2cc : ret 0xb96c
0x0000000000405e1d : ret 0xb976
0x000000000040d9c0 : ret 0xb98b
0x000000000040b08a : ret 0xb9e5
0x0000000000433b96 : ret 0xb9f1
0x0000000000405efb : ret 0xb9f5
0x000000000040bd31 : ret 0xb9fe
0x0000000000404941 : ret 0xbb46
0x00000000004253bc : ret 0xbf48
0x0000000000401935 : ret 0xc148
0x0000000000462c39 : ret 0xc350
0x00000000004406c3 : ret 0xc3d7
0x000000000045c152 : ret 0xc493
0x0000000000441063 : ret 0xc8c6
0x0000000000459ed8 : ret 0xca20
0x000000000045a449 : ret 0xca21
0x0000000000406f85 : ret 0xca29
0x000000000042ecce : ret 0xcb92
0x000000000044148b : ret 0xcc39
0x000000000045da28 : ret 0xcc41
0x000000000045bf15 : ret 0xccb2
0x000000000040479d : ret 0xcf63
0x000000000040c7c2 : ret 0xd089
0x0000000000406282 : ret 0xd284
0x0000000000445193 : ret 0xd4d
0x000000000045cbcd : ret 0xd609
0x0000000000437b05 : ret 0xd618
0x0000000000409185 : ret 0xd67d
0x000000000040af5b : ret 0xd709
0x0000000000416aa9 : ret 0xd789
0x000000000043f312 : ret 0xd803
0x000000000045874d : ret 0xdae9
0x000000000040924d : ret 0xdb6a
0x0000000000457e1e : ret 0xdce8
0x00000000004500f4 : ret 0xdf79
0x0000000000456685 : ret 0xe280
0x000000000040aced : ret 0xe281
0x000000000045965b : ret 0xe925
0x0000000000424c12 : ret 0xe940
0x000000000044ec76 : ret 0xe95e
0x0000000000425e71 : ret 0xe961
0x0000000000470e20 : ret 0xe962
0x000000000040dbfe : ret 0xe98b
0x000000000040c73a : ret 0xe9e5
0x000000000041bc9d : ret 0xea51
0x000000000042fbe9 : ret 0xea81
0x0000000000427a2c : ret 0xee8
0x000000000040c6a9 : ret 0xf221
0x00000000004063bc : ret 0xf281
0x0000000000423a77 : ret 0xf41
0x0000000000409b93 : ret 0xf74b
0x00000000004259c5 : ret 0xf7f3
0x000000000042414e : ret 0xfc75
0x000000000044bd67 : ret 0xfd40
0x000000000044bbb8 : ret 0xfd70
0x0000000000460a48 : ret 0xfdb9
0x000000000044bbcc : ret 0xff10
0x000000000040e5ca : ret 0xff30
0x000000000046edd7 : ret 0xff9b
0x00000000004259bf : ret 0xffa5
0x000000000046efed : ret 0xffbb
0x0000000000424148 : ret 0xffc4
0x0000000000423368 : ret 0xffd5
0x0000000000423442 : ret 0xffd8
0x00000000004241fa : ret 0xffd9
0x00000000004235e4 : ret 0xffe0
0x00000000004519aa : ret 0xfff7
0x00000000004755d1 : ret 0xfff8
0x00000000004222d5 : ret 0xfffa
0x0000000000425311 : ret 0xfffd
0x000000000046feff : ret 0xfffe
0x000000000046bb14 : ret 0xffff
0x000000000040a78e : ret 1
0x0000000000410e4c : ret 2
0x0000000000471167 : ret 3
0x000000000046166b : ret 4
0x000000000043569a : ret 6
0x0000000000427134 : ret 8
0x00000000004578f2 : retf -0x565 ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rax]
0x0000000000453f5f : retf 0x5d ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x000000000043987d : rol byte ptr [rax + 0x48f22948], -0x7f ; ret 1
0x000000000043600c : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040e61d : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004511f3 : rol byte ptr [rbp + 0x21], cl ; ret 0x8141
0x00000000004139e7 : rol byte ptr [rbx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000413ebe : rol byte ptr [rdx], -0x35 ; ret
0x000000000043987c : rol byte ptr ds:[rax + 0x48f22948], -0x7f ; ret 1
0x000000000040ae9d : rol dword ptr [rcx - 0xe], cl ; jmp qword ptr [rcx]
0x0000000000413f09 : rol dword ptr [rdx], -0x35 ; ret
0x0000000000440b5a : rol ebp, cl ; ret
0x000000000042ce64 : ror byte ptr [rax + 1], cl ; ret 0xb848
0x000000000040193c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40194b ; pop rbp ; ret
0x0000000000459efd : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x000000000041917a : ror byte ptr [rcx], -0x39 ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000045d654 : ror byte ptr [rcx], 1 ; ret
0x0000000000416a99 : ror dword ptr [rax - 0x75], 1 ; adc byte ptr [r8 - 0x77], cl ; ret 0x2148
0x000000000040c4e7 : ror dword ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x00000000004396ae : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x000000000044da67 : ror dword ptr [rcx - 0x49b7b], -1 ; jmp 0x459d36
0x0000000000429bb0 : ror dword ptr [rcx - 0x7d], cl ; ret
0x000000000045f804 : ror dword ptr [rcx], 1 ; ret
0x0000000000459ed5 : ror dword ptr [rdi], -0x6c ; ret 0xca20
0x000000000043302b : sahf ; ret 0xd284
0x000000000040bfbc : salc ; and dword ptr [rcx - 0x77], eax ; ret 0x8141
0x000000000040bfb0 : salc ; and dword ptr [rcx], esp ; ret 0x8941
0x0000000000431dca : salc ; jmp qword ptr [rdi]
0x000000000042e0fe : salc ; ret 0x957f
0x0000000000431d06 : salc ; sti ; ret 0x89f1
0x0000000000475689 : sar al, 1 ; call rsi
0x0000000000425308 : sar dh, -1 ; dec dword ptr [rax - 0x75] ; cmp al, ch ; pushfq ; ret 0xfffd
0x000000000040f722 : sar dh, -1 ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000046bb0e : sar dh, -1 ; dec dword ptr [rax - 0x7f] ; ret 0xffff
0x000000000046d63b : sar dh, -1 ; dec dword ptr [rax - 0x7f] ; ret 1
0x000000000046c4e9 : sar dh, -1 ; dec dword ptr [rax - 1] ; ret 0x8948
0x000000000046e6eb : sar dh, -1 ; dec dword ptr [rcx - 0x7f] ; ret
0x000000000046e79b : sar dh, -1 ; dec dword ptr [rcx - 0x7f] ; ret 1
0x000000000040193e : sar eax, 1 ; jne 0x401949 ; pop rbp ; ret
0x0000000000424f31 : sar ebp, -0x17 ; ret 0x2a
0x0000000000454179 : sar edi, 1 ; inc dword ptr [rcx + 0xf] ; ret 0x8589
0x000000000044c4f2 : sar edi, cl ; inc dword ptr [rbp + 0xf] ; ret
0x000000000040193d : sar rax, 1 ; jne 0x40194a ; pop rbp ; ret
0x00000000004093aa : sbb al, -0x76 ; ret 0x89e5
0x0000000000408c69 : sbb al, 0 ; add byte ptr [rbx + 0x542dac45], cl ; jmp qword ptr [rax]
0x0000000000429ef0 : sbb al, 0x41 ; out dx, eax ; mov al, -0x47 ; ret
0x000000000040ae9b : sbb al, bh ; rol dword ptr [rcx - 0xe], cl ; jmp qword ptr [rcx]
0x000000000043459e : sbb al, bh ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rbx]
0x0000000000412b4c : sbb al, byte ptr [rax + rax] ; add byte ptr [rbx - 0x6bd25fbb], cl ; ret 0x212b
0x00000000004337bb : sbb bl, byte ptr [rdx - 0x47] ; salc ; jmp qword ptr [rdi]
0x00000000004584c1 : sbb byte ptr [rax], al ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; call rdi
0x0000000000424e31 : sbb cl, ch ; ret
0x00000000004583ae : sbb dword ptr [rax], eax ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; call rcx
0x000000000042c6b3 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040a78a : sbb dword ptr [rax], eax ; add cl, ch ; ret 1
0x0000000000458f0c : sbb eax, 0xc700000e ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rsi
0x000000000042f999 : sbb eax, dword ptr [rcx - 0x77] ; ret
0x0000000000454fb3 : sbb ebp, eax ; cli ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x0000000000428f40 : sbb ecx, dword ptr [rax - 0x7f] ; ret
0x000000000040c91f : sbb edi, dword ptr [rax + 0x21] ; ret 0x8941
0x000000000044061a : scasb al, byte ptr [rdi] ; mov bl, -0x2e ; ret 0x8589
0x00000000004564eb : scasd eax, dword ptr [rdi] ; cli ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; call rdi
0x000000000044ef64 : scasd eax, dword ptr [rdi] ; mov bl, -0x2e ; ret 0x1b2
0x000000000044066e : scasd eax, dword ptr [rdi] ; mov bl, -0x2e ; ret 0x8589
0x000000000044ef80 : scasd eax, dword ptr [rdi] ; mov bl, -0x2e ; ret 0x8b48
0x0000000000423e32 : shr cl, cl ; ret 0x3b
0x0000000000460215 : shr dword ptr [rip - 0x21480000], cl ; ret
0x00000000004751e2 : stc ; inc esp ; add eax, 0x8ed40000 ; stc ; jmp rsp
0x000000000047570a : stc ; jmp rcx
0x00000000004751ea : stc ; jmp rsp
0x0000000000421c6d : stc ; ret 0x77a8
0x0000000000461140 : std ; cwde ; jmp 0x462ff4
0x00000000004287f7 : std ; ret 0x279e
0x0000000000475dda : sti ; call qword ptr [rbx]
0x0000000000475fea : sti ; call qword ptr [rdx]
0x0000000000475cba : sti ; call rdi
0x0000000000475dba : sti ; call rdx
0x0000000000475322 : sti ; call rsp
0x00000000004753da : sti ; inc esp ; or eax, 0x70840000 ; sti ; jmp rsp
0x0000000000475c5a : sti ; jmp qword ptr [rbx]
0x0000000000475ee2 : sti ; jmp rsi
0x00000000004753e2 : sti ; jmp rsp
0x000000000045a100 : sti ; movsx eax, al ; add rsp, 0x60 ; pop rbp ; ret
0x000000000047535a : sti ; push qword ptr [rbx + rcx + 0x45b40000] ; sti ; call rsp
0x000000000047531a : sti ; push qword ptr [rdx + rcx + 0x41040000] ; sti ; call rsp
0x0000000000431d07 : sti ; ret 0x89f1
0x0000000000433b95 : sti ; ret 0xb9f1
0x000000000040bfba : stosb byte ptr [rdi], al ; cmp eax, 0x894121d6 ; ret 0x8141
0x000000000044da3a : stosd dword ptr [rdi], eax ; jmp 0x459d30
0x0000000000416fce : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040acc9 : sub al, byte ptr [rcx - 0xe] ; jmp qword ptr [rcx]
0x000000000043a616 : sub byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000416eb8 : sub byte ptr [rax], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000423365 : sub byte ptr [rbp - 0x7f], bh ; ret 0xffd5
0x0000000000475ac8 : sub byte ptr [rdx], dh ; cli ; call qword ptr [rdx]
0x00000000004405aa : sub byte ptr [rsi + 0x40], dh ; ret 0x8589
0x0000000000475fc8 : sub byte ptr [rsi - 5], ah ; call rdx
0x0000000000475c58 : sub byte ptr [rsi], dh ; sti ; jmp qword ptr [rbx]
0x000000000042335b : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000423435 : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000044ff5a : sub dword ptr [rsi + 0x40], esi ; ret 0x1db9
0x00000000004405fe : sub dword ptr [rsi + 0x40], esi ; ret 0x8589
0x0000000000458ac4 : sub dword ptr [rsi + 0x40], esi ; ret 0x8948
0x00000000004241f5 : sub eax, 0x81268e82 ; ret 0xffd9
0x00000000004552fc : sub eax, 0xc700004a ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x0000000000460216 : sub eax, 0xdeb80000 ; ret
0x000000000040667a : sub ebp, ecx ; ret
0x000000000042ce6f : sub edx, edi ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004715dd : sub esp, 8 ; add rsp, 8 ; ret
0x00000000004715dc : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000406007 : sysenter
0x000000000043f799 : test ah, al ; or al, 1 ; add cl, ch ; nop ; ret
0x0000000000423360 : test al, -0x7f ; ret 0x2d50
0x000000000042343a : test al, -0x7f ; ret 0xa30b
0x0000000000433372 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000439153 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004295ce : test al, 0x48 ; add esp, 0x80 ; pop rbp ; ret
0x0000000000425b96 : test al, 0x48 ; mov ebp, 0xe19c53ba ; ret
0x000000000042bf08 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000448cc9 : test al, bl ; ret
0x00000000004631d4 : test bl, ch ; ret
0x0000000000407cee : test byte ptr [r10], r12b ; out dx, eax ; ret
0x00000000004753e0 : test byte ptr [rax - 5], dh ; jmp rsp
0x00000000004715aa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000043f8e9 : test byte ptr [rbx - 0x16ffff1b], dl ; ret 0
0x000000000044b24d : test byte ptr [rcx], ch ; ret
0x000000000041a1dc : test byte ptr [rcx], ch ; ret 0
0x000000000043f841 : test byte ptr [rdx + rsi], ah ; add dword ptr [rax], eax ; jmp 0x44bb3a
0x0000000000416618 : test byte ptr [rdx - 0x16fffffe], dl ; ret 1
0x0000000000407cef : test byte ptr [rdx], ah ; out dx, eax ; ret
0x00000000004117c3 : test ch, bh ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000040657a : test ch, cl ; ret
0x000000000040a788 : test ch, cl ; sbb dword ptr [rax], eax ; add cl, ch ; ret 1
0x0000000000443ba1 : test dl, cl ; ret 0
0x000000000041a1d6 : test dword ptr [rax + 0xffffffd], esp ; test byte ptr [rcx], ch ; ret 0
0x000000000042e5b3 : test dword ptr [rax], ebp ; ret
0x000000000045105f : test dword ptr [rbx + rdi*8 - 1], esp ; call qword ptr [rax]
0x000000000044fde7 : test dword ptr [rbx + rdi*8 - 1], esp ; call rax
0x00000000004555e6 : test dword ptr [rbx + rdi*8 - 1], esp ; call rcx
0x00000000004564ef : test dword ptr [rbx + rdi*8 - 1], esp ; call rdi
0x0000000000458058 : test dword ptr [rbx + rdi*8 - 1], esp ; call rdx
0x00000000004599b5 : test dword ptr [rbx + rdi*8 - 1], esp ; call rsi
0x000000000045823b : test dword ptr [rbx + rdi*8 - 1], esp ; call rsp
0x0000000000458745 : test dword ptr [rbx + rdi*8 - 1], esp ; dec ebp ; or ch, dh ; ret 0xdae9
0x0000000000458d8f : test dword ptr [rbx + rdi*8 - 1], esp ; inc dword ptr [rax] ; ret
0x000000000044f6fd : test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rax]
0x0000000000458bb0 : test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rbx]
0x00000000004590d6 : test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rcx]
0x000000000044c428 : test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x0000000000452272 : test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rsi]
0x000000000044eee4 : test dword ptr [rbx + rdi*8 - 1], esp ; jmp rax
0x0000000000456abf : test dword ptr [rbx + rdi*8 - 1], esp ; jmp rbx
0x0000000000453db7 : test dword ptr [rbx + rdi*8 - 1], esp ; jmp rcx
0x0000000000450d6b : test dword ptr [rbx + rdi*8 - 1], esp ; jmp rdi
0x0000000000458d47 : test dword ptr [rbx + rdi*8 - 1], esp ; jmp rsi
0x000000000045062a : test dword ptr [rbx + rdi*8 - 1], esp ; lcall ptr [rbx + 0x47] ; ret
0x000000000044f3ab : test dword ptr [rbx + rdi*8 - 1], esp ; lcall ptr [rdx] ; ret 0x4fab
0x0000000000458abf : test dword ptr [rbx + rdi*8 - 1], esp ; ljmp ptr [rcx] ; jbe 0x458b0f ; ret 0x8948
0x00000000004674f6 : test dword ptr [rbx + rsi*8 - 0x7bf00001], ebx ; ret
0x0000000000464d26 : test dword ptr [rcx + rdi*8 - 1], ecx ; dec dword ptr [rdi] ; test dl, cl ; ret 0
0x0000000000435d57 : test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rbx]
0x0000000000435d17 : test dword ptr [rdi + rdi*8 - 1], eax ; call rdi
0x0000000000435c92 : test dword ptr [rdi + rdi*8 - 1], eax ; jmp rcx
0x0000000000434413 : test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rax]
0x000000000043446b : test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rbx]
0x00000000004343d2 : test dword ptr [rdi + rdi*8 - 1], ebp ; jmp qword ptr [rcx]
0x000000000042c016 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000043079c : test dword ptr [rdi + rdi*8 - 1], edx ; call qword ptr [rbx]
0x00000000004305db : test dword ptr [rdi + rdi*8 - 1], edx ; call qword ptr [rdi]
0x0000000000430718 : test dword ptr [rdi + rdi*8 - 1], edx ; call rdx
0x000000000042fbb2 : test dword ptr [rdi + rdi*8 - 1], edx ; call rsi
0x000000000042fa59 : test dword ptr [rdi + rdi*8 - 1], edx ; jmp qword ptr [rax]
0x00000000004291ea : test dword ptr [rdi + rdi*8 - 1], esp ; call qword ptr [rbx]
0x0000000000424c0b : test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x0000000000425e6a : test dword ptr [rsi + rdi*8 + 0x6e94ffff], esp ; ret 0xe961
0x000000000042192a : test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x000000000040b8b1 : test eax, 0x89414761 ; ret 0x8141
0x0000000000425e1f : test eax, 0xb9dd5cac ; xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x00000000004406c2 : test eax, edx ; xlatb ; ret
0x0000000000443b9b : test esp, eax ; in eax, -1 ; dec dword ptr [rdi] ; test dl, cl ; ret 0
0x000000000042e5b2 : test qword ptr [r8], rbp ; ret
0x000000000042e606 : test qword ptr [rax], rbp ; ret
0x0000000000406579 : test r13b, r9b ; ret
0x000000000040acc6 : ucomiss xmm4, dword ptr [rcx] ; sub al, byte ptr [rcx - 0xe] ; jmp qword ptr [rcx]
0x00000000004578f3 : wait ; cli ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rax]
0x0000000000423e2f : wait ; jge 0x423e11 ; shr cl, cl ; ret 0x3b
0x000000000041eeed : wait ; jo 0x41eefb ; ret
0x000000000042243c : wait ; jo 0x42244a ; ret
0x0000000000459ed4 : wait ; ror dword ptr [rdi], -0x6c ; ret 0xca20
0x000000000040c85d : xchg byte ptr [rax - 0xf], bh ; and byte ptr [rcx - 0xe], al ; jmp qword ptr [rcx]
0x0000000000401975 : xchg byte ptr [rcx + 0x27], bl ; add byte ptr [rcx], al ; ret
0x000000000040adfe : xchg byte ptr [rdx], dh ; mov al, byte ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000440716 : xchg dl, al ; xlatb ; ret
0x000000000046f89d : xchg dword ptr [rdi - 0xe46c4ed], ebp ; xchg eax, esp ; ret
0x0000000000439898 : xchg dword ptr [rsi + 4], ebp ; push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000454b1a : xchg eax, ebp ; pushfq ; sar edi, 1 ; inc dword ptr [rcx + 0xf] ; ret 0x8589
0x0000000000405c82 : xchg eax, ebp ; ret
0x0000000000412b9f : xchg eax, ebp ; ret 0x212b
0x0000000000407370 : xchg eax, ebp ; ret 0x8445
0x0000000000406281 : xchg eax, ebp ; ret 0xd284
0x000000000046bb0d : xchg eax, ebp ; sar dh, -1 ; dec dword ptr [rax - 0x7f] ; ret 0xffff
0x000000000046d63a : xchg eax, ebp ; sar dh, -1 ; dec dword ptr [rax - 0x7f] ; ret 1
0x000000000046c4e8 : xchg eax, ebp ; sar dh, -1 ; dec dword ptr [rax - 1] ; ret 0x8948
0x000000000046e79a : xchg eax, ebp ; sar dh, -1 ; dec dword ptr [rcx - 0x7f] ; ret 1
0x000000000043f8ea : xchg eax, ebx ; in eax, 0 ; add cl, ch ; ret 0
0x0000000000460213 : xchg eax, ebx ; jmp 0x462ff4
0x000000000041aa75 : xchg eax, ebx ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x0000000000421375 : xchg eax, ebx ; ret
0x00000000004704d1 : xchg eax, ebx ; ret 0xd284
0x000000000040b8b0 : xchg eax, ebx ; test eax, 0x89414761 ; ret 0x8141
0x0000000000458998 : xchg eax, ecx ; adc eax, dword ptr [rax] ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rax]
0x0000000000413b23 : xchg eax, ecx ; add byte ptr [rax], al ; add bh, al ; mov r8b, -0x69 ; lodsb al, byte ptr [rsi] ; ret
0x00000000004215a5 : xchg eax, ecx ; ret
0x0000000000412465 : xchg eax, edi ; lodsb al, byte ptr [rsi] ; ret
0x0000000000404401 : xchg eax, edi ; ret 0x89f5
0x00000000004363a3 : xchg eax, edi ; ret 0xd284
0x0000000000416619 : xchg eax, edx ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000041adf5 : xchg eax, edx ; ret
0x0000000000428c9f : xchg eax, edx ; ret 0x8445
0x000000000044c4d8 : xchg eax, edx ; ret 0x8844
0x000000000042bf0e : xchg eax, edx ; ret 0xd284
0x000000000040bc06 : xchg eax, esi ; add al, byte ptr [rcx - 0xe] ; jmp qword ptr [rcx]
0x000000000041241a : xchg eax, esi ; lodsb al, byte ptr [rsi] ; ret
0x000000000043f922 : xchg eax, esi ; push rdi ; add dword ptr [rax], eax ; jmp 0x44bb39
0x000000000046711f : xchg eax, esi ; ret
0x000000000042b1aa : xchg eax, esp ; jmp 0x42bc18
0x000000000042b0e7 : xchg eax, esp ; jmp 0x42bc1a
0x0000000000425e24 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x00000000004216f5 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x0000000000425e6f : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0xe961
0x0000000000435a40 : xchg eax, esp ; ret
0x0000000000412b54 : xchg eax, esp ; ret 0x212b
0x0000000000428c89 : xchg eax, esp ; ret 0x8041
0x0000000000408171 : xchg eax, esp ; ret 0x8445
0x0000000000424d3e : xchg eax, esp ; ret 0xb740
0x0000000000459ed7 : xchg eax, esp ; ret 0xca20
0x000000000040df01 : xchg eax, esp ; ret 0xd284
0x0000000000456684 : xchg eax, esp ; ret 0xe280
0x000000000042b1a9 : xchg eax, r12d ; jmp 0x42bc19
0x000000000046711e : xchg rax, rsi ; ret
0x00000000004406c4 : xlatb ; ret
0x0000000000431d5a : xlatb ; sti ; ret 0x89f1
0x0000000000433b94 : xlatb ; sti ; ret 0xb9f1
0x0000000000411d0b : xor al, 0x3e ; ret
0x0000000000475420 : xor al, 0x7f ; sti ; jmp rsp
0x0000000000456ad5 : xor al, byte ptr [rax] ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rbx
0x0000000000424d39 : xor al, byte ptr [rbx - 0x6bf0fd12] ; ret 0xb740
0x000000000044f6fb : xor bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rax]
0x0000000000458bae : xor bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rbx]
0x0000000000475ac9 : xor bh, dl ; call qword ptr [rdx]
0x00000000004195d7 : xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000475180 : xor byte ptr [rax + rax], al ; add byte ptr [rbp + 0x24000000], al ; ret
0x00000000004195d8 : xor byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000408e8a : xor byte ptr [rax], al ; add cl, ch ; ret 0x1a
0x000000000040adff : xor dh, dl ; mov al, byte ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000430920 : xor dl, ch ; fadd qword ptr [rcx - 0x77] ; ret
0x0000000000454c99 : xor ecx, eax ; cli ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
