0x000000000040ce25 : adc ah, al ; ret 0x1b2
0x000000000040ab62 : adc ah, al ; ret 0x8589
0x000000000040ce41 : adc ah, al ; ret 0x958a
0x0000000000406b27 : adc al, -0x65 ; ret
0x0000000000432ae6 : adc byte ptr [rax + 1], cl ; ret 0x8948
0x00000000004059e3 : adc byte ptr [rdi], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000435002 : adc byte ptr [rdi], ch ; ret
0x000000000040ccb0 : adc byte ptr [rdx], bl ; sbb ah, byte ptr [rdx - 0x47] ; and ebx, ebp ; ret 0x8bb1
0x000000000043383c : adc cl, byte ptr [rax + 1] ; ret 0x8b48
0x000000000044171e : adc cl, byte ptr [rax - 0x77] ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x48f0
0x000000000041b21e : adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x0000000000440feb : adc cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x000000000042fbfa : adc cl, byte ptr [rax - 0x7d] ; ret 0x4818
0x000000000043989b : adc cl, byte ptr [rax - 0x7f] ; ret 0x10
0x000000000042fce6 : adc cl, byte ptr [rax - 0x7f] ; ret 0x18
0x000000000042f21f : adc cl, byte ptr [rax - 0x7f] ; ret 0xc
0x000000000041ab91 : adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x000000000042611b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004435d1 : adc dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000004352a2 : adc dword ptr [rdi], ebp ; ret
0x000000000041bd1b : adc eax, 0x558abda1 ; ret
0x000000000041f2f9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004435dc : add ah, -1 ; jmp rax
0x0000000000443c9b : add ah, dh ; add eax, 0xcd500000 ; std ; call qword ptr [rbx]
0x0000000000443c7b : add ah, dl ; add eax, 0xcb900000 ; std ; call rdx
0x0000000000443281 : add al, 0 ; add al, ah ; out -5, al ; jmp qword ptr [rax]
0x0000000000437e01 : add al, 0 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rsi
0x000000000042e1ba : add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000443363 : add al, ah ; mov dh, -3 ; jmp rax
0x0000000000443283 : add al, ah ; out -5, al ; jmp qword ptr [rax]
0x0000000000443323 : add al, ah ; ret
0x00000000004434eb : add al, al ; jbe 0x4434f1 ; jmp qword ptr [rax]
0x000000000044390d : add al, byte ptr [rax] ; add byte ptr [rax], ah ; insd dword ptr [rdi], dx ; cld ; jmp qword ptr [rcx]
0x000000000044390c : add al, byte ptr fs:[rax] ; add byte ptr [rax], ah ; insd dword ptr [rdi], dx ; cld ; jmp qword ptr [rcx]
0x000000000042547e : add al, ch ; in al, dx ; ret 0xfffd
0x0000000000405554 : add al, ch ; ret
0x00000000004295d8 : add al, ch ; ret 0xfd80
0x000000000042551d : add al, ch ; ret 0xfffd
0x0000000000443b80 : add al, cl ; std ; call rdi
0x000000000044351b : add al, dl ; mov dl, -2 ; jmp rax
0x00000000004295d7 : add al, r13b ; ret 0xfd80
0x000000000042a406 : add bh, al ; mov word ptr [r14 - 0x16bee9bd], dr1 ; ret 0
0x0000000000437bea : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rbx
0x0000000000437e03 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rsi
0x0000000000425df4 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000040ec8a : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp qword ptr [rbx]
0x000000000040ebeb : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp rdi
0x00000000004233cc : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; call rax
0x00000000004236b3 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; call rsi
0x0000000000424141 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; jmp qword ptr [rcx]
0x000000000041bb59 : add bh, al ; test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x000000000044238f : add bl, dh ; ret
0x0000000000440952 : add byte ptr [r8], al ; add byte ptr [rcx], al ; ret 0xea81
0x0000000000440bb4 : add byte ptr [r8], al ; add byte ptr [rcx], ch ; ret 0x5589
0x00000000004437af : add byte ptr [rax + 0x25], dl ; cld ; call qword ptr [rax]
0x000000000044384f : add byte ptr [rax + 0x53], dh ; cld ; call qword ptr [rcx]
0x000000000044342b : add byte ptr [rax - 0x22], ah ; std ; call qword ptr [rax]
0x0000000000443c9f : add byte ptr [rax - 0x33], dl ; std ; call qword ptr [rbx]
0x0000000000424e0f : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x00000000004202bb : add byte ptr [rax - 0x75], cl ; clc ; mov rsp, rbp ; pop rbp ; ret
0x0000000000442201 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; ret 0x2948
0x0000000000408b8b : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000404cda : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x0000000000404740 : add byte ptr [rax - 1], cl ; ret 0x8948
0x000000000044390f : add byte ptr [rax], ah ; insd dword ptr [rdi], dx ; cld ; jmp qword ptr [rcx]
0x00000000004435da : add byte ptr [rax], al ; add ah, -1 ; jmp rax
0x000000000044390a : add byte ptr [rax], al ; add al, byte ptr fs:[rax] ; add byte ptr [rax], ah ; insd dword ptr [rdi], dx ; cld ; jmp qword ptr [rcx]
0x0000000000443b7e : add byte ptr [rax], al ; add al, cl ; std ; call rdi
0x0000000000437be8 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rbx
0x0000000000425df2 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000044238d : add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004421ff : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; ret 0x2948
0x0000000000408b89 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000404cd8 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000044238b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000404f31 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000044238c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000441da4 : add byte ptr [rax], al ; add byte ptr [rbp + 0x21], al ; ret 0x8845
0x000000000042e947 : add byte ptr [rax], al ; add byte ptr [rbx + 0x1c2ddc45], cl ; ret 0xbe70
0x0000000000408b1e : add byte ptr [rax], al ; add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x000000000041ed62 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000042e8b1 : add byte ptr [rax], al ; add byte ptr [rbx - 0x1cd223bb], cl ; ret
0x00000000004245b3 : add byte ptr [rax], al ; add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x000000000043df0c : add byte ptr [rax], al ; add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x00000000004279f1 : add byte ptr [rax], al ; add byte ptr [rbx - 0x62d237bb], cl ; push rcx ; ret 0x8929
0x0000000000427941 : add byte ptr [rax], al ; add byte ptr [rbx - 0x63d237bb], cl ; push rcx ; ret 0x8929
0x0000000000426f19 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x00000000004046fc : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000440953 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xea81
0x0000000000440bb5 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x5589
0x0000000000425d60 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8b48
0x000000000043fd21 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x00000000004054fa : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000042959d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000404f33 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042d735 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000425cea : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000404c89 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000044341a : add byte ptr [rax], al ; add ch, bl ; std ; call rax
0x0000000000439743 : add byte ptr [rax], al ; add cl, ch ; ret
0x000000000041f2fb : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041e980 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401e94 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000042611d : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000043e5b8 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000441c97 : add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004014f3 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000044390e : add byte ptr [rax], al ; and byte ptr [rbp - 4], ch ; jmp qword ptr [rcx]
0x0000000000443d66 : add byte ptr [rax], al ; cmp dl, dl ; std ; jmp qword ptr [rbx]
0x0000000000443c9a : add byte ptr [rax], al ; hlt ; add eax, 0xcd500000 ; std ; call qword ptr [rbx]
0x000000000044398a : add byte ptr [rax], al ; in al, 2 ; add byte ptr [rax], al ; mov al, -0x3e ; cld ; call qword ptr [rdx]
0x0000000000443b1a : add byte ptr [rax], al ; je 0x443b2b ; add byte ptr [rax], al ; mov al, -0x3a ; std ; jmp qword ptr [rbx]
0x0000000000401589 : add byte ptr [rax], al ; jmp 0x401509
0x000000000043973f : add byte ptr [rax], al ; jmp 0x43974e
0x000000000044384e : add byte ptr [rax], al ; jo 0x4438aa ; cld ; call qword ptr [rcx]
0x0000000000443282 : add byte ptr [rax], al ; loopne 0x443271 ; sti ; jmp qword ptr [rax]
0x0000000000443362 : add byte ptr [rax], al ; loopne 0x443321 ; std ; jmp rax
0x0000000000443b1e : add byte ptr [rax], al ; mov al, -0x3a ; std ; jmp qword ptr [rbx]
0x000000000044398e : add byte ptr [rax], al ; mov al, -0x3e ; cld ; call qword ptr [rdx]
0x0000000000440998 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000443d62 : add byte ptr [rax], al ; mov esp, 0x38000006 ; sar ch, cl ; jmp qword ptr [rbx]
0x0000000000408b8a : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000044384a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rax + 0x53], dh ; cld ; call qword ptr [rcx]
0x000000000044355a : add byte ptr [rax], al ; movsxd rdi, edi ; jmp rax
0x0000000000443c7e : add byte ptr [rax], al ; nop ; retf ; std ; call rdx
0x00000000004441f2 : add byte ptr [rax], al ; or r8, qword ptr [rax] ; add byte ptr [rax], ch ; sub bh, bh ; call rbx
0x0000000000444516 : add byte ptr [rax], al ; pop rax ; ret 0xffff
0x0000000000402215 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000041ed63 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000043d036 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000044238e : add byte ptr [rax], al ; ret
0x0000000000443d67 : add byte ptr [rax], bh ; sar ch, cl ; jmp qword ptr [rbx]
0x00000000004441f7 : add byte ptr [rax], ch ; sub bh, bh ; call rbx
0x000000000042f7ea : add byte ptr [rax], r8b ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000441da6 : add byte ptr [rbp + 0x21], al ; ret 0x8845
0x0000000000441d9c : add byte ptr [rbp - 0x77], al ; ret 0x8141
0x0000000000441d9b : add byte ptr [rbp - 0x77], r8b ; ret 0x8141
0x000000000042e8fe : add byte ptr [rbx + 0x1b2ddc45], cl ; ret 0xbe70
0x000000000042e949 : add byte ptr [rbx + 0x1c2ddc45], cl ; ret 0xbe70
0x0000000000408b20 : add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x000000000041ed64 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000043d037 : add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004441f3 : add byte ptr [rbx + rcx], cl ; add byte ptr [rax], ch ; sub bh, bh ; call rbx
0x000000000042e8b3 : add byte ptr [rbx - 0x1cd223bb], cl ; ret
0x000000000042e868 : add byte ptr [rbx - 0x1dd223bb], cl ; ret
0x00000000004245b5 : add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x000000000042456a : add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x000000000043df0e : add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x00000000004279f3 : add byte ptr [rbx - 0x62d237bb], cl ; push rcx ; ret 0x8929
0x0000000000427943 : add byte ptr [rbx - 0x63d237bb], cl ; push rcx ; ret 0x8929
0x0000000000440999 : add byte ptr [rbx - 0x76b71fbb], cl ; in al, dx ; pop rbp ; ret
0x0000000000426f1b : add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x000000000042a350 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x00000000004046fe : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000044384b : add byte ptr [rcx + rax + 0x53700000], ah ; cld ; call qword ptr [rcx]
0x0000000000405c77 : add byte ptr [rcx - 0x4f], al ; add dword ptr [rcx - 0x78], eax ; ret 0x8041
0x0000000000425e5e : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401a08 : add byte ptr [rcx], al ; ret
0x0000000000440955 : add byte ptr [rcx], al ; ret 0xea81
0x0000000000440bb7 : add byte ptr [rcx], ch ; ret 0x5589
0x0000000000425d62 : add byte ptr [rcx], ch ; ret 0x8b48
0x000000000043fd23 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x00000000004054fc : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000042959f : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000404f35 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042d737 : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000425cec : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000404c8b : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000044390b : add byte ptr [rdx + rax], ah ; add byte ptr [rax], ah ; insd dword ptr [rdi], dx ; cld ; jmp qword ptr [rcx]
0x0000000000443d63 : add byte ptr [rsi + rax - 0x2dc80000], bh ; std ; jmp qword ptr [rbx]
0x0000000000404f30 : add byte ptr fs:[rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000044341c : add ch, bl ; std ; call rax
0x000000000041bc8c : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x00000000004247bd : add cl, ch ; ret
0x000000000042edf4 : add cl, ch ; ret 1
0x000000000043844a : add cl, ch ; ret 9
0x00000000004398ab : add dword ptr [rax], 0xec894800 ; pop rbp ; ret
0x000000000040f513 : add dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp rdi
0x000000000042413f : add dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; jmp qword ptr [rcx]
0x00000000004437ad : add dword ptr [rax], eax ; add byte ptr [rax + 0x25], dl ; cld ; call qword ptr [rax]
0x000000000044384d : add dword ptr [rax], eax ; add byte ptr [rax + 0x53], dh ; cld ; call qword ptr [rcx]
0x000000000043945c : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000405c7a : add dword ptr [rcx - 0x78], eax ; ret 0x8041
0x000000000043fea2 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x0000000000436989 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000040630c : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401a04 : add eax, 0x24390e ; add ebx, esi ; ret
0x00000000004237fc : add eax, 0xc700000b ; test dword ptr [rdi + rdi*8 - 1], esp ; call rsi
0x0000000000443c7d : add eax, 0xcb900000 ; std ; call rdx
0x0000000000443c9d : add eax, 0xcd500000 ; std ; call qword ptr [rbx]
0x00000000004083d9 : add eax, 0xf000000 ; xchg eax, esp ; ret 0xd284
0x000000000040f295 : add eax, dword ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp qword ptr [rbx]
0x000000000043d035 : add eax, dword ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004019cb : add eax, edx ; sar rax, 1 ; jne 0x4019dc ; pop rbp ; ret
0x0000000000439599 : add eax, esi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x0000000000401a09 : add ebx, esi ; ret
0x0000000000401d7b : add esp, 0x10 ; pop rbp ; ret
0x0000000000425e5c : add esp, 0x100 ; pop rbp ; ret
0x000000000043d95a : add esp, 0x120 ; pop rbp ; ret
0x000000000043b2ca : add esp, 0x1360 ; pop rbp ; ret
0x0000000000425fcc : add esp, 0x1a0 ; pop rbp ; ret
0x000000000041e983 : add esp, 0x20 ; pop rbp ; ret
0x0000000000401e97 : add esp, 0x30 ; pop rbp ; ret
0x000000000043d032 : add esp, 0x3a8 ; pop rbx ; pop rbp ; ret
0x000000000040f436 : add esp, 0x3e0 ; pop rbp ; ret
0x0000000000426120 : add esp, 0x40 ; pop rbp ; ret
0x000000000042e3b9 : add esp, 0x440 ; pop rbp ; ret
0x000000000042a3f3 : add esp, 0x470 ; pop rbp ; ret
0x0000000000409962 : add esp, 0x50 ; pop rbp ; ret
0x0000000000408821 : add esp, 0x560 ; pop rbp ; ret
0x000000000042406c : add esp, 0x5b0 ; pop rbp ; ret
0x0000000000427040 : add esp, 0x60 ; pop rbp ; ret
0x000000000040d4b4 : add esp, 0x650 ; pop rbp ; ret
0x0000000000401d1b : add esp, 0x70 ; pop rbp ; ret
0x00000000004059e1 : add esp, 0x710 ; pop rbp ; ret
0x0000000000409c8f : add esp, 0x80 ; pop rbp ; ret
0x000000000042679d : add esp, 0x90 ; pop rbp ; ret
0x0000000000421456 : add esp, 0xa0 ; pop rbp ; ret
0x0000000000402211 : add esp, 0xb0 ; pop rbp ; ret
0x000000000040a1fa : add esp, 0xd0 ; pop rbp ; ret
0x000000000043e15e : add esp, 0xe0 ; pop rbp ; ret
0x000000000042b7bf : add esp, 0xf0 ; pop rbp ; ret
0x000000000040fc13 : add esp, 8 ; pop rbp ; ret
0x00000000004014f6 : add esp, 8 ; ret
0x00000000004019ca : add rax, rdx ; sar rax, 1 ; jne 0x4019dd ; pop rbp ; ret
0x0000000000439598 : add rax, rsi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x0000000000401d7a : add rsp, 0x10 ; pop rbp ; ret
0x0000000000425e5b : add rsp, 0x100 ; pop rbp ; ret
0x000000000043d959 : add rsp, 0x120 ; pop rbp ; ret
0x000000000043b2c9 : add rsp, 0x1360 ; pop rbp ; ret
0x0000000000425fcb : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000041e982 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000401e96 : add rsp, 0x30 ; pop rbp ; ret
0x000000000043d031 : add rsp, 0x3a8 ; pop rbx ; pop rbp ; ret
0x000000000040f435 : add rsp, 0x3e0 ; pop rbp ; ret
0x000000000042611f : add rsp, 0x40 ; pop rbp ; ret
0x000000000042e3b8 : add rsp, 0x440 ; pop rbp ; ret
0x000000000042a3f2 : add rsp, 0x470 ; pop rbp ; ret
0x0000000000409961 : add rsp, 0x50 ; pop rbp ; ret
0x0000000000408820 : add rsp, 0x560 ; pop rbp ; ret
0x000000000042406b : add rsp, 0x5b0 ; pop rbp ; ret
0x000000000042703f : add rsp, 0x60 ; pop rbp ; ret
0x000000000040d4b3 : add rsp, 0x650 ; pop rbp ; ret
0x0000000000401d1a : add rsp, 0x70 ; pop rbp ; ret
0x00000000004059e0 : add rsp, 0x710 ; pop rbp ; ret
0x0000000000409c8e : add rsp, 0x80 ; pop rbp ; ret
0x000000000042679c : add rsp, 0x90 ; pop rbp ; ret
0x0000000000421455 : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000402210 : add rsp, 0xb0 ; pop rbp ; ret
0x000000000040a1f9 : add rsp, 0xd0 ; pop rbp ; ret
0x000000000043e15d : add rsp, 0xe0 ; pop rbp ; ret
0x000000000042b7be : add rsp, 0xf0 ; pop rbp ; ret
0x000000000040fc12 : add rsp, 8 ; pop rbp ; ret
0x00000000004014f5 : add rsp, 8 ; ret
0x0000000000401a07 : and al, 0 ; add ebx, esi ; ret
0x000000000042551a : and al, 0x10 ; mov al, 0 ; call 0x401776
0x000000000044095d : and al, 0xffffffffffffff81 ; ret 0x61
0x0000000000436988 : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040630b : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042547b : and al, 8 ; mov al, 0 ; call 0x401776
0x000000000040f578 : and bh, bh ; dec dword ptr [rax - 0x41] ; ret 0x7f0f
0x000000000040a9d9 : and bl, ch ; ret 0x89b1
0x0000000000443910 : and byte ptr [rbp - 4], ch ; jmp qword ptr [rcx]
0x000000000043d95c : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000426c4b : and byte ptr [rsi + 0x58], ah ; jb 0x426c82 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000041aec1 : and eax, 0x75b4b9d3 ; ret
0x000000000040aa2d : and ebx, ebp ; ret 0x89b1
0x000000000040ccb5 : and ebx, ebp ; ret 0x8bb1
0x000000000040cc99 : and ebx, ebp ; ret 0xb2b1
0x000000000042a3b2 : and esp, dword ptr [rcx] ; ret 0xd709
0x000000000040f576 : call 0x401617
0x00000000004253a0 : call 0x401642
0x00000000004053be : call 0x401692
0x000000000042547f : call 0x401772
0x0000000000427045 : call 0x427109
0x000000000040c61a : call 0x438306
0x000000000043e4ad : call 0xffffffffaca4a6e1
0x000000000043e4ac : call 0xffffffffaca4a6e2
0x000000000041e979 : call 0xffffffffe90472c9
0x000000000041e978 : call 0xffffffffe90472ca
0x000000000043b134 : call 0xfffffffff77c73f4
0x0000000000442369 : call qword ptr [r12 + rbx*8]
0x0000000000407f71 : call qword ptr [rax]
0x000000000042013e : call qword ptr [rbx]
0x0000000000436a8c : call qword ptr [rcx]
0x0000000000403ab9 : call qword ptr [rdi]
0x0000000000419deb : call qword ptr [rdx]
0x000000000043b3ca : call qword ptr [rsi]
0x000000000044236a : call qword ptr [rsp + rbx*8]
0x0000000000401a2d : call rax
0x00000000004032b1 : call rbx
0x000000000041c06b : call rcx
0x000000000040d590 : call rdi
0x0000000000407066 : call rdx
0x000000000040555f : call rsi
0x0000000000408acb : call rsp
0x000000000043d958 : clc ; add rsp, 0x120 ; pop rbp ; ret
0x000000000040f434 : clc ; add rsp, 0x3e0 ; pop rbp ; ret
0x000000000042e3b7 : clc ; add rsp, 0x440 ; pop rbp ; ret
0x000000000042406a : clc ; add rsp, 0x5b0 ; pop rbp ; ret
0x0000000000427ab7 : clc ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004263a7 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x000000000042ad49 : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x00000000004422eb : clc ; add rsp, 0xf0 ; pop rbp ; ret
0x00000000004019cf : clc ; jne 0x4019d8 ; pop rbp ; ret
0x0000000000405d06 : clc ; mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x00000000004202bf : clc ; mov rsp, rbp ; pop rbp ; ret
0x000000000041144d : clc ; ret 0x77a8
0x0000000000401da7 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000043b2c8 : cld ; add rsp, 0x1360 ; pop rbp ; ret
0x00000000004059df : cld ; add rsp, 0x710 ; pop rbp ; ret
0x000000000043eaee : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000042b7bd : cld ; add rsp, 0xf0 ; pop rbp ; ret
0x000000000042a3b1 : cld ; and esp, dword ptr [rcx] ; ret 0xd709
0x00000000004437b2 : cld ; call qword ptr [rax]
0x0000000000443852 : cld ; call qword ptr [rcx]
0x0000000000443992 : cld ; call qword ptr [rdx]
0x0000000000408b4f : cld ; jmp 0x408bbc
0x0000000000408b4e : cld ; jmp 0x408bbd
0x0000000000443912 : cld ; jmp qword ptr [rcx]
0x000000000042882f : cld ; ret 0x281b
0x000000000040ab9a : cld ; stc ; ret
0x0000000000426c50 : cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000044095c : cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x0000000000425b6b : cmc ; ret 0x4f0b
0x0000000000424e12 : cmp al, 0x25 ; ret
0x000000000040f12a : cmp byte ptr [rsi + rdx*4 - 0x1b14630], bh ; ret
0x0000000000421f25 : cmp ch, byte ptr [rbx - 0x66] ; ret
0x0000000000425d01 : cmp cl, byte ptr [rsi - 0x946182f] ; ret 0x4f0b
0x0000000000443d68 : cmp dl, dl ; std ; jmp qword ptr [rbx]
0x0000000000401a06 : cmp dword ptr [rax + rax], esp ; add ebx, esi ; ret
0x0000000000421ed1 : cmp dword ptr [rbx - 0x66], ebp ; ret
0x0000000000407bc9 : cmp dword ptr [rdx], -0x47 ; ret 0x6f27
0x00000000004397cd : cmp eax, 0xb8000001 ; ret
0x000000000040198d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4019a0 ; pop rbp ; ret
0x000000000041bd17 : cmp esp, dword ptr [rbp - 0x47] ; push -0x75425eeb ; push rbp ; ret
0x0000000000441631 : dec dword ptr [rax + 0x29] ; ret 0x8948
0x000000000044103a : dec dword ptr [rax + 0x29] ; ret 0x8b48
0x000000000042a772 : dec dword ptr [rax + 0x29] ; ret 0x9c0f
0x000000000040d1e4 : dec dword ptr [rax + 1] ; ret 0x8948
0x000000000040f57a : dec dword ptr [rax - 0x41] ; ret 0x7f0f
0x000000000041b21b : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x000000000041ab8e : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x000000000041b393 : dec dword ptr [rax - 0x75] ; or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x0000000000432ae2 : dec dword ptr [rax - 0x75] ; push rcx ; adc byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000426d7d : dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x0000000000436228 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x000000000042344f : dec dword ptr [rax - 0x77] ; ret 0x38e8
0x00000000004390d9 : dec dword ptr [rax - 0x77] ; ret 0x3ee8
0x00000000004339cd : dec dword ptr [rax - 0x77] ; ret 0x4ae8
0x000000000042df16 : dec dword ptr [rax - 0x77] ; ret 0x8148
0x0000000000424e3b : dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000423da9 : dec dword ptr [rax - 0x77] ; ret 0xdee8
0x00000000004242a7 : dec dword ptr [rax - 0x77] ; ret 0xe0e8
0x000000000043432e : dec dword ptr [rax - 0x77] ; ret 0xe9e8
0x0000000000432f9b : dec dword ptr [rax - 0x77] ; ret 0xece8
0x0000000000437f9d : dec dword ptr [rax - 0x7f] ; ret 1
0x0000000000433fc9 : dec dword ptr [rax - 0x7f] ; ret 4
0x0000000000438096 : dec dword ptr [rax - 1] ; ret 0x8948
0x000000000042f4f9 : dec dword ptr [rbx - 0x1eb6b] ; dec dword ptr [rdi] ; ret 0x4589
0x0000000000439006 : dec dword ptr [rbx - 0x1f36b] ; dec dword ptr [rdi] ; ret 0x4589
0x0000000000425b66 : dec dword ptr [rcx - 0xa167e3f] ; ret 0x4f0b
0x000000000042f4ff : dec dword ptr [rdi] ; ret 0x4589
0x000000000042edee : dec dword ptr [rdi] ; test byte ptr [rax - 0x16fffff9], cl ; ret 1
0x000000000041112a : dec dword ptr [rdi] ; test byte ptr [rcx], ch ; ret 0
0x000000000040871b : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x0000000000424138 : dec esi ; sbb al, -0x73 ; sbb ecx, ebp ; ret
0x00000000004279f6 : enter -0x62d3, 0x51 ; ret 0x8929
0x0000000000427946 : enter -0x63d3, 0x51 ; ret 0x8929
0x0000000000404cac : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000433d40 : enter 0xf41, -0x6b ; ret 0x8445
0x000000000040a019 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040605e : fadd qword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000406148 : fadd qword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000044361d : fcos ; jmp rax
0x000000000044342d : fdivp st(5) ; call qword ptr [rax]
0x000000000043ef18 : fld qword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x000000000040a5d1 : fmul dword ptr [r8 - 0x75] ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000043dbf7 : fmul dword ptr [r9 - 0x57167e3f] ; ret
0x000000000040a5d2 : fmul dword ptr [rax - 0x75] ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000441722 : fmul dword ptr [rax - 0x7d] ; ret 0x48f0
0x000000000043dbf8 : fmul dword ptr [rcx - 0x57167e3f] ; ret
0x000000000044236c : fmul qword ptr [rax - 0x7d] ; ret
0x000000000043a9d7 : fsubr st(0) ; ret
0x0000000000433c64 : fsubr st(1) ; ret
0x0000000000443c9c : hlt ; add eax, 0xcd500000 ; std ; call qword ptr [rbx]
0x0000000000401d79 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406126 : hlt ; add rsp, 0xb0 ; pop rbp ; ret
0x000000000043e15c : hlt ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000040fc11 : hlt ; add rsp, 8 ; pop rbp ; ret
0x00000000004019a0 : hlt ; pop rbp ; mov edi, 0x6452b0 ; jmp rax
0x0000000000426d7b : idiv edi ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x0000000000423a31 : imul edi, dword ptr [rip], 0xf ; xchg eax, ebp ; ret 0xd284
0x00000000004397cb : in al, -0x17 ; cmp eax, 0xb8000001 ; ret
0x000000000042f5e6 : in al, 0 ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004419e2 : in al, 0x48 ; add esp, 0x60 ; pop rbp ; ret
0x000000000042b101 : in al, 0x48 ; add esp, 0xb0 ; pop rbp ; ret
0x000000000044398c : in al, 2 ; add byte ptr [rax], al ; mov al, -0x3e ; cld ; call qword ptr [rdx]
0x000000000042aa05 : in al, dx ; add rsp, 0x30 ; pop rbp ; ret
0x000000000042f096 : in al, dx ; jmp 0x42f6d6
0x000000000042f095 : in al, dx ; jmp 0x42f6d7
0x000000000043e56c : in al, dx ; jmp 0x43e5e9
0x000000000043e56b : in al, dx ; jmp 0x43e5ea
0x0000000000408b8e : in al, dx ; pop rbp ; ret
0x0000000000425480 : in al, dx ; ret 0xfffd
0x000000000044362d : in eax, -1 ; jmp qword ptr [rax]
0x0000000000423fdf : in eax, dx ; jge 0x423f86 ; sub eax, 0x9a6b3ab9 ; ret
0x00000000004054f8 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004366b5 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000423614 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040f1ce : inc dword ptr [rbp + 0xf] ; ret 0x8944
0x000000000040444e : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8445
0x000000000043a9fa : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret
0x000000000042f265 : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x8445
0x0000000000404926 : inc dword ptr [rcx - 0x16577a34] ; ret 0x13
0x000000000043abb7 : inc dword ptr [rcx - 0x47] ; xchg eax, esi ; mov ecx, 0xba41a9ee ; ret
0x00000000004239eb : inc dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000443557 : inc eax ; sldt word ptr [rax] ; movsxd rdi, edi ; jmp rax
0x000000000040f61d : inc edi ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp rbx
0x0000000000443911 : insd dword ptr [rdi], dx ; cld ; jmp qword ptr [rcx]
0x0000000000420e27 : int 0x5b
0x00000000004053bf : int 0xc2
0x000000000040524b : int1 ; ret
0x0000000000401993 : ja 0x40199a ; pop rbp ; ret
0x000000000040d847 : ja 0x40d82e ; ret 0x8974
0x000000000040d3be : jb 0x40d3f2 ; jl 0x40d37f ; ret 0x8237
0x0000000000426c4e : jb 0x426c7f ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004427b6 : jb 0x44281f ; jns 0x4427c1 ; push rax ; ret
0x00000000004427b5 : jb 0x442820 ; jns 0x4427c2 ; push rax ; ret
0x000000000043231d : jbe 0x4322dc ; push rcx ; jmp rsp
0x000000000043231c : jbe 0x4322dd ; push rcx ; jmp rsp
0x00000000004434ed : jbe 0x4434ef ; jmp qword ptr [rax]
0x000000000040199f : je 0x40199d ; pop rbp ; mov edi, 0x6452b0 ; jmp rax
0x0000000000443b1c : je 0x443b29 ; add byte ptr [rax], al ; mov al, -0x3a ; std ; jmp qword ptr [rbx]
0x00000000004083d7 : jge 0x408375 ; add eax, 0xf000000 ; xchg eax, esp ; ret 0xd284
0x000000000040ab99 : jge 0x40ab9a ; stc ; ret
0x000000000040c618 : jge 0x40c5a2 ; call 0x438308
0x000000000041a2b6 : jge 0x41a23b ; ret 0xffd5
0x000000000041ad80 : jge 0x41ad60 ; shr cl, cl ; ret 0x3b
0x0000000000423fe0 : jge 0x423f85 ; sub eax, 0x9a6b3ab9 ; ret
0x000000000040d3c0 : jl 0x40d37d ; ret 0x8237
0x000000000040d3bf : jl 0x40d37e ; ret 0x8237
0x000000000043b9a7 : jl 0x43b971 ; ret
0x000000000043c770 : jl 0x43c73a ; ret
0x000000000040abed : jle 0x40abee ; stc ; ret
0x000000000040cf51 : jle 0x40cf52 ; stc ; ret
0x000000000040158b : jmp 0x401507
0x0000000000402cae : jmp 0x402c74
0x0000000000402d02 : jmp 0x402cc8
0x0000000000404e98 : jmp 0x404e5e
0x0000000000404ae1 : jmp 0x405cf8
0x0000000000407b0b : jmp 0x408aa7
0x0000000000408b50 : jmp 0x408bbb
0x000000000040d168 : jmp 0x40d752
0x000000000041b4d0 : jmp 0x41e950
0x00000000004193d4 : jmp 0x41e951
0x000000000041a7a1 : jmp 0x41e952
0x0000000000424f8b : jmp 0x4259f7
0x0000000000424ec8 : jmp 0x4259f9
0x0000000000424e0b : jmp 0x4259fa
0x0000000000426ff3 : jmp 0x427058
0x000000000042a233 : jmp 0x42a4db
0x0000000000429bad : jmp 0x42a4dc
0x000000000042e256 : jmp 0x42e538
0x000000000042f097 : jmp 0x42f6d5
0x000000000042f613 : jmp 0x42f6d7
0x000000000042fa9b : jmp 0x42fa31
0x0000000000439741 : jmp 0x43974c
0x00000000004397cc : jmp 0x439914
0x000000000043aca8 : jmp 0x43b433
0x000000000043cbee : jmp 0x43d261
0x000000000043c76a : jmp 0x43d263
0x000000000043e56d : jmp 0x43e5e8
0x0000000000441743 : jmp 0x44181c
0x0000000000425b6a : jmp 0x4f4e1e66
0x000000000041e2a5 : jmp qword ptr [rax]
0x000000000040ec90 : jmp qword ptr [rbx]
0x00000000004100a2 : jmp qword ptr [rcx]
0x000000000041bf57 : jmp qword ptr [rdi]
0x0000000000405ced : jmp qword ptr [rdx]
0x0000000000404b7c : jmp qword ptr [rsi]
0x00000000004019a7 : jmp rax
0x0000000000408938 : jmp rbx
0x000000000041b2da : jmp rcx
0x000000000040ebf1 : jmp rdi
0x00000000004019e7 : jmp rdx
0x000000000040634d : jmp rsi
0x000000000041abb8 : jmp rsp
0x00000000004019d0 : jne 0x4019d7 ; pop rbp ; ret
0x0000000000444299 : jno 0x44429c ; jmp qword ptr [rax]
0x000000000043b953 : jnp 0x43b91d ; ret
0x00000000004427b9 : jns 0x4427be ; push rax ; ret
0x00000000004427b8 : jns 0x4427bf ; push rax ; ret
0x0000000000401d1d : jo 0x401d7e ; ret
0x000000000040725e : jo 0x407277 ; wait ; ret
0x00000000004083f1 : jo 0x40840a ; wait ; ret
0x0000000000408a14 : jo 0x408a2d ; wait ; ret
0x00000000004141ce : jo 0x4141da ; ret
0x0000000000415e3e : jo 0x415e4a ; ret
0x000000000041938d : jo 0x419399 ; ret
0x0000000000420674 : jo 0x4206d5 ; ret
0x0000000000427abb : jo 0x427b1c ; ret
0x000000000042a3f5 : jo 0x42a400 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000441c9c : jo 0x441cfd ; ret
0x0000000000443850 : jo 0x4438a8 ; cld ; call qword ptr [rcx]
0x000000000040cc97 : js 0x40cc56 ; and ebx, ebp ; ret 0xb2b1
0x000000000040e957 : js 0x40e93e ; ret 0x8974
0x000000000040f056 : js 0x40f03d ; ret 0x8a74
0x000000000040f07c : js 0x40f063 ; ret 0xe974
0x000000000041ad7e : lcall ptr [rbx - 0x162d2583] ; ret 0x3b
0x0000000000433491 : lcall ptr [rsi - 7] ; ret 0xe980
0x000000000041be7e : lcall ptr [rsi] ; pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x0000000000409356 : lea eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040c617 : lea edi, dword ptr [rbp - 0x80] ; call 0x438309
0x0000000000410ac5 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000420969 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000410ac4 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000438121 : ljmp ptr [rdi - 0x26] ; sbb al, -0x17 ; ret
0x00000000004196de : ljmp ptr [rdi] ; ret 0x23da
0x000000000041c6e5 : loope 0x41c6b3 ; jmp 0x41e953
0x000000000040f438 : loopne 0x40f442 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000410ac3 : loopne 0x410b16 ; lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000042006d : loopne 0x4200d3 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000421454 : loopne 0x4214a7 ; add esp, 0xa0 ; pop rbp ; ret
0x00000000004266b3 : loopne 0x4266bc ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042703e : loopne 0x42708e ; add esp, 0x60 ; pop rbp ; ret
0x000000000042703d : loopne 0x42708f ; add esp, 0x60 ; pop rbp ; ret
0x000000000042a3f1 : loopne 0x42a444 ; add esp, 0x470 ; pop rbp ; ret
0x000000000042a8bc : loopne 0x42a850 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000042a8bb : loopne 0x42a851 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000043e160 : loopne 0x43e167 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000043eaf2 : loopne 0x43eaf9 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000044099c : loopne 0x4409eb ; mov esp, ebp ; pop rbp ; ret
0x000000000044099b : loopne 0x4409ec ; mov esp, ebp ; pop rbp ; ret
0x0000000000440bec : loopne 0x440c3b ; mov esp, ebp ; pop rbp ; ret
0x0000000000440beb : loopne 0x440c3c ; mov esp, ebp ; pop rbp ; ret
0x0000000000441795 : loopne 0x44179c ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000443284 : loopne 0x44326f ; sti ; jmp qword ptr [rax]
0x0000000000443364 : loopne 0x44331f ; std ; jmp rax
0x000000000041a2ad : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000041a387 : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000418335 : mov ah, 0x75 ; ret
0x0000000000443b20 : mov al, -0x3a ; std ; jmp qword ptr [rbx]
0x0000000000443990 : mov al, -0x3e ; cld ; call qword ptr [rdx]
0x0000000000420e43 : mov al, -0x47 ; ret
0x000000000042da1f : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000402213 : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042547d : mov al, 0 ; call 0x401774
0x0000000000443418 : mov al, 0xa ; add byte ptr [rax], al ; add ch, bl ; std ; call rax
0x000000000042406e : mov al, 5 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000043f20d : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000043eeda : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000406308 : mov al, byte ptr [rbp - 0x15] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000043f13d : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042fc45 : mov bh, 0 ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000044359d : mov bl, -1 ; jmp rax
0x0000000000411cd5 : mov bl, 0x75 ; ret
0x000000000040ed0f : mov byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000405d07 : mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000401a03 : mov byte ptr [rip + 0x24390e], 1 ; ret
0x0000000000419b2f : mov ch, byte ptr [rdx - 0x47] ; pop rbp ; pop rcx ; ret 0x1b2
0x000000000043fea4 : mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x000000000043698b : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000040630e : mov dh, -0x40 ; pop rbp ; ret
0x0000000000443365 : mov dh, -3 ; jmp rax
0x000000000044095a : mov dl, -0x34 ; cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x000000000044351d : mov dl, -2 ; jmp rax
0x000000000043fbd1 : mov dr1, word ptr [rcx + rcx*4 - 0x7bf05bbb] ; ret 2
0x0000000000410249 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040fe1f : mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x000000000043e56a : mov dword ptr [rbp - 0x14], eax ; jmp 0x43e5eb
0x00000000004397c9 : mov dword ptr [rbp - 0x1c], eax ; jmp 0x439917
0x000000000042539a : mov dword ptr [rbp - 0x290], eax ; call 0x401648
0x0000000000425411 : mov dword ptr [rbp - 0x2a8], eax ; call 0x401648
0x00000000004053b8 : mov dword ptr [rbp - 0x69c], ecx ; call 0x401698
0x0000000000424f88 : mov dword ptr [rbp - 0x6c], eax ; jmp 0x4259fa
0x0000000000401d77 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401da5 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000410526 : mov dword ptr [rcx + 0x30], eax ; mov rsp, rbp ; pop rbp ; ret
0x000000000043959c : mov dword ptr [rdi + 0x10], eax ; pop rbp ; ret
0x00000000004100cd : mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000425518 : mov dword ptr [rsp + 0x10], edx ; mov al, 0 ; call 0x401778
0x0000000000425479 : mov dword ptr [rsp + 8], ebx ; mov al, 0 ; call 0x401778
0x0000000000443320 : mov eax, 0xe0000006 ; ret
0x0000000000443360 : mov eax, 0xe0000007 ; mov dh, -3 ; jmp rax
0x0000000000404449 : mov eax, 0xffffff3d ; inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8445
0x000000000040a5d4 : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000426ebb : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000043db94 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000433e95 : mov eax, dword ptr [rbp - 0x10] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042aa03 : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000042708e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040995e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000043e3e5 : mov eax, dword ptr [rbp - 0x18] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000041024c : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004419e0 : mov eax, dword ptr [rbp - 0x1c] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000042703c : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000042a8ba : mov eax, dword ptr [rbp - 0x20] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000044099a : mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004100cf : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000040fc0f : mov eax, dword ptr [rbp - 0xc] ; add rsp, 8 ; pop rbp ; ret
0x0000000000427ab5 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004202bd : mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004014f1 : mov eax, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004100ce : mov eax, dword ptr ds:[rbp - 0x38] ; pop rbp ; ret
0x000000000041cae8 : mov ebp, 0xe19c53ba ; ret
0x0000000000401a2b : mov ebp, esp ; call rax
0x0000000000401991 : mov ebp, esp ; ja 0x40199c ; pop rbp ; ret
0x000000000040ec87 : mov ebx, 0xc7000009 ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp qword ptr [rbx]
0x000000000043abbb : mov ecx, 0xba41a9ee ; ret
0x000000000040fe1c : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x000000000042990c : mov ecx, gs ; ret
0x00000000004322ff : mov edi, 0x51b94936 ; jmp rsp
0x0000000000401a25 : mov edi, 0x644e20 ; mov rbp, rsp ; call rax
0x00000000004019a2 : mov edi, 0x6452b0 ; jmp rax
0x00000000004019e2 : mov edi, 0x6452b0 ; jmp rdx
0x0000000000419387 : mov edi, 0xb8000055 ; wait ; jo 0x41939f ; ret
0x0000000000442367 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000442366 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000042e1ce : mov edx, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000419b4b : mov edx, 0x595db993 ; ret 0x8b48
0x000000000041a9c2 : mov esi, 0x39443e04 ; ret 0xf41
0x000000000042e1b7 : mov esi, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000042a40a : mov esi, 0xe9411643 ; ret 0
0x00000000004019e0 : mov esi, eax ; mov edi, 0x6452b0 ; jmp rdx
0x0000000000434fe7 : mov esi, es ; ret
0x0000000000443d64 : mov esp, 0x38000006 ; sar ch, cl ; jmp qword ptr [rbx]
0x0000000000408b8d : mov esp, ebp ; pop rbp ; ret
0x0000000000425399 : mov qword ptr [rbp - 0x290], rax ; call 0x401649
0x0000000000425410 : mov qword ptr [rbp - 0x2a8], rax ; call 0x401649
0x0000000000410525 : mov qword ptr [rcx + 0x30], rax ; mov rsp, rbp ; pop rbp ; ret
0x000000000043959b : mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x0000000000425517 : mov qword ptr [rsp + 0x10], r10 ; mov al, 0 ; call 0x401779
0x0000000000425478 : mov qword ptr [rsp + 8], r11 ; mov al, 0 ; call 0x401779
0x000000000042990b : mov r9d, gs ; ret
0x000000000040a5d3 : mov rax, qword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000426eba : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000043db93 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000433e94 : mov rax, qword ptr [rbp - 0x10] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042708d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040995d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000042703b : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000427ab4 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004202bc : mov rax, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000401a2a : mov rbp, rsp ; call rax
0x0000000000401990 : mov rbp, rsp ; ja 0x40199d ; pop rbp ; ret
0x00000000004019df : mov rsi, rax ; mov edi, 0x6452b0 ; jmp rdx
0x0000000000408b8c : mov rsp, rbp ; pop rbp ; ret
0x000000000042a408 : mov word ptr [r14 - 0x16bee9bd], dr1 ; ret 0
0x0000000000426c51 : mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000042a409 : mov word ptr [rsi - 0x16bee9bd], dr1 ; ret 0
0x000000000043cd7b : movabs byte ptr [0x7eb8000004d9e994], al ; ret 0x1d90
0x0000000000415628 : movabs byte ptr [0x840ffffff3c48589], al ; ret 0x4b
0x000000000044384c : movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rax + 0x53], dh ; cld ; call qword ptr [rcx]
0x0000000000418875 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x6a8a
0x000000000043231b : movsd dword ptr [rdi], dword ptr [rsi] ; jbe 0x4322de ; push rcx ; jmp rsp
0x0000000000421e62 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x000000000040b1d6 : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x89f4
0x000000000040c8f5 : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xb9f4
0x000000000044355d : movsxd rdi, edi ; jmp rax
0x000000000043fea3 : movzx eax, al ; add rsp, 8 ; pop rbp ; ret
0x000000000043698a : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040630d : movzx eax, al ; pop rbp ; ret
0x0000000000405d0a : movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x000000000042dfc8 : neg byte ptr [rsi + 0x2948e012] ; ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000411b15 : nop ; ret
0x000000000041ff22 : nop ; ret 0x148
0x000000000041ff36 : nop ; ret 0x2948
0x0000000000443c80 : nop ; retf ; std ; call rdx
0x0000000000442388 : nop dword ptr [rax + rax] ; ret
0x00000000004236b1 : or al, 0 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; call rsi
0x000000000042e9f1 : or al, 0 ; add cl, ch ; ret
0x000000000041a2aa : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000041a384 : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000402cad : or al, 0xffffffffffffffeb ; ret
0x000000000040ebe9 : or al, byte ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp rdi
0x00000000004238f5 : or al, byte ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; call rsi
0x0000000000443429 : or al, byte ptr [rax] ; add byte ptr [rax - 0x22], ah ; std ; call qword ptr [rax]
0x0000000000433d3d : or al, byte ptr [rbp + 0x39] ; enter 0xf41, -0x6b ; ret 0x8445
0x0000000000433107 : or byte ptr [r8 - 0x75], 0x51 ; adc byte ptr [rax + 1], cl ; ret 0x8948
0x000000000044102c : or byte ptr [rax + 0x69], cl ; ret 0x101
0x0000000000433108 : or byte ptr [rax - 0x75], 0x51 ; adc byte ptr [rax + 1], cl ; ret 0x8948
0x000000000040fe20 : or byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000424568 : or byte ptr [rax], al ; add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x000000000040a3cc : or byte ptr [rsi + 0x48e28948], 0x83 ; ret 0x48f0
0x0000000000441bec : or cl, ch ; ret 0
0x000000000041b396 : or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x0000000000410524 : or dword ptr [rax - 0x77], ecx ; xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000040ec88 : or dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp qword ptr [rbx]
0x00000000004238f4 : or eax, 0xc700000a ; test dword ptr [rdi + rdi*8 - 1], esp ; call rsi
0x000000000040ca45 : or eax, 0xc8b80000 ; ret 0xdbca
0x0000000000423570 : or eax, 0xd8b80000 ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000000004237fd : or eax, dword ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; call rsi
0x0000000000424e0d : or eax, dword ptr [rax] ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x00000000004441f5 : or eax, dword ptr [rax] ; add byte ptr [rax], ch ; sub bh, bh ; call rbx
0x00000000004100cb : or edi, eax ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x00000000004441f4 : or r8, qword ptr [rax] ; add byte ptr [rax], ch ; sub bh, bh ; call rbx
0x0000000000443285 : out -5, al ; jmp qword ptr [rax]
0x000000000041bc8b : out dx, al ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x000000000043eedc : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000043f20f : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000420e42 : out dx, eax ; mov al, -0x47 ; ret
0x000000000042e1b9 : outsb dx, byte ptr [rsi] ; add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000041cd75 : outsb dx, byte ptr [rsi] ; ret 0x4861
0x00000000004119c6 : outsb dx, byte ptr [rsi] ; ret 0x8961
0x000000000041cdc0 : outsb dx, byte ptr [rsi] ; ret 0xe961
0x0000000000406b26 : outsd dx, dword ptr [rsi] ; adc al, -0x65 ; ret
0x0000000000425df1 : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000042e1bc : outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000426c4c : pop ax ; jb 0x426c81 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000041dc29 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000044237c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000042006f : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041dc2b : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000044237e : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041dc2d : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000442380 : pop r14 ; pop r15 ; ret
0x0000000000410ac9 : pop r14 ; pop rbp ; ret
0x000000000041dc2f : pop r15 ; pop rbp ; ret
0x0000000000442382 : pop r15 ; ret
0x0000000000426c4d : pop rax ; jb 0x426c80 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000444518 : pop rax ; ret 0xffff
0x0000000000401a02 : pop rbp ; mov byte ptr [rip + 0x24390e], 1 ; ret
0x00000000004019a1 : pop rbp ; mov edi, 0x6452b0 ; jmp rax
0x00000000004019de : pop rbp ; mov rsi, rax ; mov edi, 0x6452b0 ; jmp rdx
0x000000000044237b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041dc2c : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000044237f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000419b32 : pop rbp ; pop rcx ; ret 0x1b2
0x0000000000415e05 : pop rbp ; pop rcx ; ret 0x8589
0x0000000000419b4e : pop rbp ; pop rcx ; ret 0x8b48
0x0000000000401995 : pop rbp ; ret
0x0000000000430ad3 : pop rbp ; stc ; ret 0x8980
0x000000000042006e : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041ed65 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000410ac8 : pop rbx ; pop r14 ; pop rbp ; ret
0x000000000043d038 : pop rbx ; pop rbp ; ret
0x0000000000424570 : pop rbx ; ret
0x0000000000419b33 : pop rcx ; ret 0x1b2
0x0000000000414206 : pop rcx ; ret 0x8589
0x0000000000419b4f : pop rcx ; ret 0x8b48
0x000000000041be80 : pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x000000000041dc30 : pop rdi ; pop rbp ; ret
0x0000000000442383 : pop rdi ; ret
0x000000000040ebe8 : pop rdx ; or al, byte ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp rdi
0x000000000041dc2e : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000442381 : pop rsi ; pop r15 ; ret
0x0000000000410aca : pop rsi ; pop rbp ; ret
0x000000000043a64d : pop rsi ; ret
0x0000000000430b27 : pop rsi ; stc ; ret 0x8980
0x0000000000433492 : pop rsi ; stc ; ret 0xe980
0x000000000042547a : pop rsp ; and al, 8 ; mov al, 0 ; call 0x401777
0x000000000041dc2a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000044237d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000420070 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000414205 : pop rsp ; pop rcx ; ret 0x8589
0x00000000004279f8 : popfq ; push rcx ; ret 0x8929
0x0000000000427a26 : popfq ; push rcx ; ret 0xb929
0x000000000043fd25 : popfq ; ret 0xd284
0x0000000000419b30 : push -0x47 ; pop rbp ; pop rcx ; ret 0x1b2
0x000000000043cbef : push -0x47fffffa ; ret
0x000000000041bd1a : push -0x75425eeb ; push rbp ; ret
0x0000000000418878 : push -0x77 ; test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x0000000000408a13 : push qword ptr [rax + 0x14] ; wait ; ret
0x0000000000433c60 : push qword ptr [rsi] ; stosd dword ptr [rdi], eax ; fsubr st(1) ; ret
0x0000000000443280 : push rax ; add al, 0 ; add al, ah ; out -5, al ; jmp qword ptr [rax]
0x0000000000430887 : push rax ; jmp rsp
0x0000000000443427 : push rax ; or al, byte ptr [rax] ; add byte ptr [rax - 0x22], ah ; std ; call qword ptr [rax]
0x0000000000409964 : push rax ; pop rbp ; ret
0x00000000004427bb : push rax ; ret
0x0000000000441721 : push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x48f0
0x0000000000401a24 : push rbp ; mov edi, 0x644e20 ; mov rbp, rsp ; call rax
0x00000000004029f1 : push rbp ; ret
0x000000000041bcb6 : push rbp ; ret 0xd284
0x000000000041a2af : push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000041a389 : push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000404f2f : push rbx ; add byte ptr fs:[rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000443851 : push rbx ; cld ; call qword ptr [rcx]
0x0000000000432ae5 : push rcx ; adc byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000423a30 : push rcx ; imul edi, dword ptr [rip], 0xf ; xchg eax, ebp ; ret 0xd284
0x000000000043179f : push rcx ; jmp rsp
0x00000000004236b0 : push rcx ; or al, 0 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; call rsi
0x0000000000427949 : push rcx ; ret 0x8929
0x0000000000427a27 : push rcx ; ret 0xb929
0x000000000042f7c3 : push rcx ; sbb byte ptr [rbp + 1], cl ; ret 0x894d
0x000000000042e1bb : push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x00000000004398aa : push rdx ; add dword ptr [rax], 0xec894800 ; pop rbp ; ret
0x0000000000425519 : push rsp ; and al, 0x10 ; mov al, 0 ; call 0x401777
0x000000000040299d : push rsp ; ret
0x0000000000427948 : pushfq ; push rcx ; ret 0x8929
0x00000000004054fe : pushfq ; ret 0xd284
0x0000000000423fe1 : pushfq ; sub eax, 0x9a6b3ab9 ; ret
0x00000000004014f9 : ret
0x000000000041112e : ret 0
0x0000000000404c2c : ret 0x10
0x0000000000437349 : ret 0x1002
0x000000000044102f : ret 0x101
0x000000000040692f : ret 0x115
0x0000000000439d61 : ret 0x12
0x0000000000437215 : ret 0x1252
0x000000000040492c : ret 0x13
0x000000000041ff23 : ret 0x148
0x000000000040472c : ret 0x15
0x000000000042fce9 : ret 0x18
0x000000000041ce84 : ret 0x1a
0x00000000004120fd : ret 0x1add
0x000000000040ce27 : ret 0x1b2
0x00000000004036f5 : ret 0x1d33
0x000000000043d190 : ret 0x1d90
0x0000000000428653 : ret 0x1e6f
0x0000000000412a4a : ret 0x23da
0x0000000000401792 : ret 0x2439
0x0000000000401592 : ret 0x243a
0x000000000041f748 : ret 0x279e
0x0000000000428830 : ret 0x281b
0x000000000040851d : ret 0x2948
0x000000000041be84 : ret 0x2a
0x000000000041a2b2 : ret 0x2d50
0x000000000040c6a3 : ret 0x3040
0x00000000004034e2 : ret 0x3587
0x0000000000423452 : ret 0x38e8
0x000000000041ad84 : ret 0x3b
0x000000000040bebd : ret 0x3c58
0x0000000000417de5 : ret 0x3e
0x00000000004390dc : ret 0x3ee8
0x0000000000441461 : ret 0x43dd
0x0000000000439600 : ret 0x4449
0x000000000042f502 : ret 0x4589
0x000000000040bb76 : ret 0x4777
0x000000000041b221 : ret 0x4802
0x0000000000440fee : ret 0x4810
0x000000000042e1be : ret 0x4815
0x000000000042fbfd : ret 0x4818
0x000000000041cd76 : ret 0x4861
0x0000000000439f31 : ret 0x48c
0x000000000043235b : ret 0x48c0
0x00000000004090d8 : ret 0x48f0
0x00000000004339d0 : ret 0x4ae8
0x0000000000415631 : ret 0x4b
0x0000000000420c47 : ret 0x4cc0
0x000000000041dc88 : ret 0x4cf0
0x0000000000425b6c : ret 0x4f0b
0x000000000043bee7 : ret 0x5452
0x000000000041007b : ret 0x5589
0x0000000000430054 : ret 0x581e
0x000000000041a53a : ret 0x5966
0x0000000000421906 : ret 0x5aa2
0x00000000004247c7 : ret 0x5bc6
0x000000000043a941 : ret 0x6044
0x000000000044095f : ret 0x61
0x0000000000406736 : ret 0x61d2
0x0000000000411796 : ret 0x6a8a
0x0000000000406497 : ret 0x6f27
0x000000000043be78 : ret 0x701
0x000000000042e418 : ret 0x72e8
0x000000000041144e : ret 0x77a8
0x00000000004125b1 : ret 0x7a8a
0x000000000041922b : ret 0x7b7f
0x00000000004044ce : ret 0x7db9
0x000000000040f57d : ret 0x7f0f
0x0000000000405c7d : ret 0x8041
0x000000000041fe22 : ret 0x8141
0x000000000042df19 : ret 0x8148
0x000000000041b144 : ret 0x822d
0x000000000040c301 : ret 0x8237
0x0000000000404452 : ret 0x8445
0x0000000000402ea8 : ret 0x8589
0x0000000000437d40 : ret 0x85c7
0x0000000000441da9 : ret 0x8845
0x000000000043be95 : ret 0x8904
0x000000000042794a : ret 0x8929
0x00000000004121c3 : ret 0x8940
0x00000000004299dd : ret 0x8941
0x000000000040f1d2 : ret 0x8944
0x0000000000404743 : ret 0x8948
0x000000000042c7df : ret 0x894a
0x000000000042f7c7 : ret 0x894d
0x00000000004119c7 : ret 0x8961
0x000000000040d849 : ret 0x8974
0x0000000000430ad5 : ret 0x8980
0x000000000040a9db : ret 0x89b1
0x000000000040b1d7 : ret 0x89f4
0x000000000042ddd8 : ret 0x8a44
0x000000000042dcd5 : ret 0x8a4a
0x000000000040f058 : ret 0x8a74
0x0000000000419b51 : ret 0x8b48
0x000000000040ccb7 : ret 0x8bb1
0x000000000040ce43 : ret 0x958a
0x000000000042a775 : ret 0x9c0f
0x000000000040b069 : ret 0xa2bc
0x000000000041a38c : ret 0xa30b
0x000000000043e4af : ret 0xac60
0x000000000042373f : ret 0xb
0x0000000000404b5e : ret 0xb0
0x000000000040cc9b : ret 0xb2b1
0x000000000043cae7 : ret 0xb3e8
0x00000000004419b2 : ret 0xb60f
0x000000000041bc90 : ret 0xb740
0x0000000000426c47 : ret 0xb848
0x000000000043cda1 : ret 0xb904
0x0000000000427a28 : ret 0xb929
0x0000000000419ec0 : ret 0xb940
0x000000000042dc62 : ret 0xb94a
0x000000000040c8f6 : ret 0xb9f4
0x000000000042e904 : ret 0xbe70
0x000000000041c30c : ret 0xbf48
0x000000000042f222 : ret 0xc
0x00000000004019c5 : ret 0xc148
0x0000000000440ba2 : ret 0xc493
0x000000000040619c : ret 0xca21
0x0000000000440965 : ret 0xccb2
0x0000000000404c8e : ret 0xd284
0x000000000042c425 : ret 0xd618
0x00000000004062d9 : ret 0xd701
0x000000000042a3b4 : ret 0xd709
0x000000000040af6e : ret 0xdbca
0x0000000000423dac : ret 0xdee8
0x00000000004242aa : ret 0xe0e8
0x000000000043fe4b : ret 0xe280
0x0000000000423a95 : ret 0xe2b9
0x00000000004299f1 : ret 0xe783
0x000000000043abb2 : ret 0xe8e8
0x000000000041bb62 : ret 0xe940
0x000000000041cdc1 : ret 0xe961
0x000000000040f07e : ret 0xe974
0x0000000000433494 : ret 0xe980
0x0000000000434331 : ret 0xe9e8
0x0000000000412bed : ret 0xea51
0x0000000000440957 : ret 0xea81
0x0000000000432f9e : ret 0xece8
0x000000000041e97c : ret 0xee8
0x0000000000428b94 : ret 0xefa6
0x0000000000407adb : ret 0xf
0x00000000004100b5 : ret 0xf281
0x000000000042420c : ret 0xf3e9
0x000000000041a9c7 : ret 0xf41
0x0000000000439cc9 : ret 0xf62a
0x000000000043a631 : ret 0xf738
0x0000000000408394 : ret 0xf748
0x0000000000434c2e : ret 0xf7c7
0x000000000041c915 : ret 0xf7f3
0x000000000043e9ca : ret 0xfc2c
0x000000000041b09e : ret 0xfc75
0x000000000043b09e : ret 0xfce8
0x00000000004295da : ret 0xfd80
0x000000000042557a : ret 0xfdc0
0x0000000000427e8f : ret 0xfe11
0x000000000041c90f : ret 0xffa5
0x000000000041b098 : ret 0xffc4
0x000000000041a2b8 : ret 0xffd5
0x000000000041a392 : ret 0xffd8
0x000000000041b14a : ret 0xffd9
0x000000000041a534 : ret 0xffe0
0x000000000040d59d : ret 0xfff9
0x0000000000419225 : ret 0xfffa
0x0000000000443991 : ret 0xfffc
0x00000000004253a2 : ret 0xfffd
0x00000000004053c0 : ret 0xffff
0x000000000041aa00 : ret 1
0x000000000041af30 : ret 2
0x0000000000433fcc : ret 4
0x00000000004292f3 : ret 6
0x000000000041e084 : ret 8
0x000000000043844c : ret 9
0x0000000000443c81 : retf ; std ; call rdx
0x000000000042e19d : rol byte ptr [rax + 0x48f22948], -0x7f ; ret 1
0x00000000004295f7 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042acbc : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040a1fc : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042e19c : rol byte ptr ds:[rax + 0x48f22948], -0x7f ; ret 1
0x000000000040d593 : rol dword ptr [rdi - 0x78], -0x7b ; ret
0x0000000000442204 : ror byte ptr [r8 - 0x77], 1 ; ret 0x2948
0x0000000000426c44 : ror byte ptr [rax + 1], cl ; ret 0xb848
0x00000000004019cc : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4019db ; pop rbp ; ret
0x000000000043698c : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x0000000000442205 : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x00000000004100ca : ror byte ptr [rcx], -0x39 ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x00000000004419af : ror byte ptr [rdi], -0x6c ; ret 0xb60f
0x00000000004434d8 : ror byte ptr [rip + 0x48600000], -2 ; jmp rax
0x0000000000443518 : ror byte ptr [rsi], 0 ; add al, dl ; mov dl, -2 ; jmp rax
0x000000000042dfce : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000420b00 : ror dword ptr [rcx - 0x7d], cl ; ret
0x00000000004295a1 : sahf ; ret 0xd284
0x000000000040ce24 : salc ; adc ah, al ; ret 0x1b2
0x000000000040abb5 : salc ; adc ah, al ; ret 0x8589
0x000000000040ce40 : salc ; adc ah, al ; ret 0x958a
0x0000000000444599 : sar bh, cl ; jmp rax
0x0000000000443d69 : sar ch, cl ; jmp qword ptr [rbx]
0x000000000040d58d : sar dh, -1 ; call rdi
0x000000000040d5ee : sar dh, -1 ; call rdx
0x000000000040d501 : sar dh, -1 ; call rsp
0x000000000040cdca : sar dh, -1 ; jmp qword ptr [rsi]
0x00000000004019ce : sar eax, 1 ; jne 0x4019d9 ; pop rbp ; ret
0x000000000041be81 : sar ebp, -0x17 ; ret 0x2a
0x00000000004019cd : sar rax, 1 ; jne 0x4019da ; pop rbp ; ret
0x000000000040ccb2 : sbb ah, byte ptr [rdx - 0x47] ; and ebx, ebp ; ret 0x8bb1
0x0000000000438124 : sbb al, -0x17 ; ret
0x000000000042413a : sbb al, -0x73 ; sbb ecx, ebp ; ret
0x0000000000420e40 : sbb al, 0x41 ; out dx, eax ; mov al, -0x47 ; ret
0x000000000043945b : sbb al, 1 ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000042f7c4 : sbb byte ptr [rbp + 1], cl ; ret 0x894d
0x000000000041bd81 : sbb cl, ch ; ret
0x0000000000426493 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000441c95 : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x000000000041fe90 : sbb ecx, dword ptr [rax - 0x7f] ; ret
0x000000000042413c : sbb ecx, ebp ; ret
0x000000000040727a : sbb edx, -9 ; ret
0x000000000040f294 : scasb al, byte ptr [rdi] ; add eax, dword ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp qword ptr [rbx]
0x000000000041ad82 : shr cl, cl ; ret 0x3b
0x0000000000443559 : sldt word ptr [rax] ; movsxd rdi, edi ; jmp rax
0x000000000040ab9b : stc ; ret
0x0000000000418bbd : stc ; ret 0x77a8
0x0000000000430ad4 : stc ; ret 0x8980
0x0000000000433493 : stc ; ret 0xe980
0x000000000040cc95 : stc ; xor eax, 0xeb21b978 ; ret 0xb2b1
0x000000000044342e : std ; call qword ptr [rax]
0x0000000000443ca2 : std ; call qword ptr [rbx]
0x000000000044341e : std ; call rax
0x0000000000443b82 : std ; call rdi
0x0000000000443c82 : std ; call rdx
0x0000000000443376 : std ; jmp qword ptr [rax]
0x0000000000443b22 : std ; jmp qword ptr [rbx]
0x0000000000443366 : std ; jmp rax
0x0000000000443426 : std ; push rax ; or al, byte ptr [rax] ; add byte ptr [rax - 0x22], ah ; std ; call qword ptr [rax]
0x000000000041f747 : std ; ret 0x279e
0x0000000000429207 : std ; ret 0x281b
0x0000000000443286 : sti ; jmp qword ptr [rax]
0x0000000000401abc : stosb byte ptr [rdi], al ; ret
0x0000000000433c62 : stosd dword ptr [rdi], eax ; fsubr st(1) ; ret
0x0000000000408c9e : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004441f9 : sub bh, bh ; call rbx
0x000000000043e5b6 : sub byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000408b88 : sub byte ptr [rax], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000041a2b5 : sub byte ptr [rbp - 0x7f], bh ; ret 0xffd5
0x000000000041a2ab : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000041a385 : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000401e92 : sub eax, 0x48000000 ; add esp, 0x30 ; pop rbp ; ret
0x000000000041b145 : sub eax, 0x81268e82 ; ret 0xffd9
0x0000000000423fe2 : sub eax, 0x9a6b3ab9 ; ret
0x0000000000426c4f : sub edx, edi ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004423e1 : sub esp, 8 ; add rsp, 8 ; ret
0x00000000004423e0 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040492a : test al, -0x17 ; ret 0x13
0x000000000041a2b0 : test al, -0x7f ; ret 0x2d50
0x000000000041a38a : test al, -0x7f ; ret 0xa30b
0x000000000042da73 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000042051e : test al, 0x48 ; add esp, 0x80 ; pop rbp ; ret
0x000000000041cae6 : test al, 0x48 ; mov ebp, 0xe19c53ba ; ret
0x0000000000425ce8 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000043d034 : test al, 3 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000042edf0 : test byte ptr [rax - 0x16fffff9], cl ; ret 1
0x000000000044238a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000041112c : test byte ptr [rcx], ch ; ret 0
0x0000000000438446 : test byte ptr [rdi - 0x16fffff1], ah ; ret 9
0x0000000000411126 : test dword ptr [rax + 0xffffffd], esp ; test byte ptr [rcx], ch ; ret 0
0x00000000004252a3 : test dword ptr [rax - 0x17000003], ebx ; xchg eax, ebx ; ret
0x0000000000437bec : test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rbx
0x0000000000437e05 : test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rsi
0x0000000000425df6 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000040ec8c : test dword ptr [rdi + rdi*8 - 1], edx ; jmp qword ptr [rbx]
0x000000000040f61f : test dword ptr [rdi + rdi*8 - 1], edx ; jmp rbx
0x000000000040ebed : test dword ptr [rdi + rdi*8 - 1], edx ; jmp rdi
0x000000000042013a : test dword ptr [rdi + rdi*8 - 1], esp ; call qword ptr [rbx]
0x00000000004233ce : test dword ptr [rdi + rdi*8 - 1], esp ; call rax
0x00000000004236b5 : test dword ptr [rdi + rdi*8 - 1], esp ; call rsi
0x0000000000424143 : test dword ptr [rdi + rdi*8 - 1], esp ; jmp qword ptr [rcx]
0x000000000042a231 : test dword ptr [rdx], esp ; jmp 0x42a4dd
0x000000000041bb5b : test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x0000000000406928 : test dword ptr [rsi + rdi*8 + 0x2e2dffff], esi ; ret 0x115
0x0000000000436a88 : test dword ptr [rsi + rdi*8 + 0x2f11ffff], edx ; ret
0x0000000000407450 : test dword ptr [rsi + rdi*8 + 0x2f2dffff], esi ; ret 0x115
0x0000000000406490 : test dword ptr [rsi + rdi*8 + 0x4b2dffff], esi ; ret 0x6f27
0x00000000004078e8 : test dword ptr [rsi + rdi*8 + 0x4c2dffff], esi ; ret 0x6f27
0x000000000040b1cf : test dword ptr [rsi + rdi*8 + 0x612dffff], esi ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x89f4
0x000000000040b223 : test dword ptr [rsi + rdi*8 + 0x622dffff], esi ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x89f4
0x000000000041cdba : test dword ptr [rsi + rdi*8 + 0x6e94ffff], esp ; ret 0xe961
0x0000000000406b20 : test dword ptr [rsi + rdi*8 + 0x6f2dffff], esi ; adc al, -0x65 ; ret
0x0000000000407258 : test dword ptr [rsi + rdi*8 + 0x702dffff], esi ; adc al, -0x65 ; ret
0x000000000040ab93 : test dword ptr [rsi + rdi*8 + 0x7d2dffff], esi ; cld ; stc ; ret
0x000000000040abe7 : test dword ptr [rsi + rdi*8 + 0x7e2dffff], esi ; cld ; stc ; ret
0x000000000040abaf : test dword ptr [rsi + rdi*8 - 0x29d20001], esi ; adc ah, al ; ret 0x8589
0x000000000040ab5b : test dword ptr [rsi + rdi*8 - 0x2ad20001], esi ; adc ah, al ; ret 0x8589
0x000000000040afbb : test dword ptr [rsi + rdi*8 - 0x37d20001], esi ; ret 0xdbca
0x000000000040af67 : test dword ptr [rsi + rdi*8 - 0x38d20001], esi ; ret 0xdbca
0x000000000040bbc3 : test dword ptr [rsi + rdi*8 - 0x3ad20001], esi ; ret 0x4777
0x000000000040bb6f : test dword ptr [rsi + rdi*8 - 0x3bd20001], esi ; ret 0x4777
0x00000000004389cf : test dword ptr [rsi + rdi*8 - 0x7bf00001], edi ; ret
0x000000000041887a : test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x000000000040b5ae : test dword ptr [rsp + rdi*8 - 0x7bf00001], eax ; ret
0x000000000041cd6f : test eax, 0xb9dd5cac ; xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x000000000041ad7f : wait ; jge 0x41ad61 ; shr cl, cl ; ret 0x3b
0x0000000000415e3d : wait ; jo 0x415e4b ; ret
0x000000000041938c : wait ; jo 0x41939a ; ret
0x0000000000406b28 : wait ; ret
0x00000000004253a1 : wait ; ret 0xfffd
0x0000000000407af6 : xchg dword ptr [rbp + 0x3d], edx ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042e1b8 : xchg dword ptr [rsi + 4], ebp ; push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000040f577 : xchg eax, ebp ; and bh, bh ; dec dword ptr [rax - 0x41] ; ret 0x7f0f
0x000000000042a353 : xchg eax, ebp ; ret
0x0000000000404451 : xchg eax, ebp ; ret 0x8445
0x0000000000404f37 : xchg eax, ebp ; ret 0xd284
0x00000000004119c5 : xchg eax, ebx ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x00000000004182c5 : xchg eax, ebx ; ret
0x00000000004184f5 : xchg eax, ecx ; ret
0x000000000042d739 : xchg eax, edi ; ret 0xd284
0x000000000042356f : xchg eax, edx ; or eax, 0xd8b80000 ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000411d45 : xchg eax, edx ; ret
0x000000000041fbef : xchg eax, edx ; ret 0x8445
0x0000000000425cee : xchg eax, edx ; ret 0xd284
0x000000000043abba : xchg eax, esi ; mov ecx, 0xba41a9ee ; ret
0x00000000004083d8 : xchg eax, esp ; add eax, 0xf000000 ; xchg eax, esp ; ret 0xd284
0x0000000000424f8a : xchg eax, esp ; jmp 0x4259f8
0x0000000000424ec7 : xchg eax, esp ; jmp 0x4259fa
0x000000000041cd74 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x0000000000418645 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x000000000041cdbf : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0xe961
0x000000000043a9fd : xchg eax, esp ; ret
0x000000000041fbd9 : xchg eax, esp ; ret 0x8041
0x000000000042f268 : xchg eax, esp ; ret 0x8445
0x00000000004419b1 : xchg eax, esp ; ret 0xb60f
0x000000000041bc8e : xchg eax, esp ; ret 0xb740
0x0000000000404c8d : xchg eax, esp ; ret 0xd284
0x0000000000424f89 : xchg eax, r12d ; jmp 0x4259f9
0x0000000000421e61 : xlatb ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x000000000040d3bd : xor al, 0x72 ; jl 0x40d380 ; ret 0x8237
0x000000000041bc89 : xor al, byte ptr [rbx - 0x6bf0fd12] ; ret 0xb740
0x0000000000410527 : xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000410528 : xor byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004295d6 : xor dword ptr [rax + rax - 0x18], eax ; ret 0xfd80
0x000000000040cc96 : xor eax, 0xeb21b978 ; ret 0xb2b1
