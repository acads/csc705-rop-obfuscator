0x0000000000460500 : adc al, 0x1b ; cli ; jmp rsp
0x0000000000441612 : adc al, byte ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000448319 : adc bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; call rsp
0x0000000000461955 : adc byte ptr [rax], al ; add al, cl ; fdiv st(7), st(0) ; call qword ptr [rax]
0x0000000000402e44 : adc byte ptr [rax], al ; add cl, ch ; ret
0x0000000000461954 : adc byte ptr [rax], r8b ; add al, cl ; fdiv st(7), st(0) ; call qword ptr [rax]
0x0000000000406934 : adc byte ptr [rbx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000426168 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000043ca64 : adc cl, byte ptr [rax + 0x29] ; ret 0xf41
0x000000000041b96e : adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x00000000004092c1 : adc cl, byte ptr [rax - 0x7f] ; ret 8
0x000000000041b2e1 : adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x0000000000408ec9 : adc dword ptr [rax - 0x7f], ecx ; ret 8
0x00000000004239db : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000450842 : adc dword ptr [rdx - 0x2b], edi ; jno 0x450807 ; ror dword ptr [rcx], 1 ; ret
0x000000000041c46b : adc eax, 0x558abda1 ; ret
0x0000000000447d77 : adc eax, 0xc7fffb98 ; test dword ptr [rbx + rdi*8 - 1], esp ; call rax
0x0000000000448a79 : adc eax, dword ptr [rax] ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rax]
0x000000000040d499 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000448437 : adc eax, edi ; test dword ptr [rbx + rdi*8 - 1], esp ; call rdx
0x0000000000400dd8 : adc ebp, dword ptr [rcx + 0x69] ; or eax, 0x40000 ; ret
0x0000000000460959 : adc edx, edi ; jmp qword ptr [rax]
0x00000000004616fb : add ah, ch ; or eax, 0x64200000 ; cld ; call rdi
0x00000000004606b8 : add al, -0x10 ; sti ; call rsp
0x0000000000401fe8 : add al, 0 ; add bh, al ; les r10d, ptr [r8] ; ret
0x0000000000460dbd : add al, 0 ; add byte ptr [rax], ah ; ret 0xfffa
0x00000000004604fd : add al, 0 ; add byte ptr [rbx + rbx], dl ; cli ; jmp rsp
0x0000000000400dde : add al, 0 ; ret
0x0000000000460778 : add al, 0x17 ; cld ; jmp rsp
0x000000000040a3aa : add al, 0x25 ; ret 0x45fb
0x0000000000421b3b : add al, 0x25 ; ret 0x4600
0x000000000042997a : add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000449889 : add al, bh ; test dword ptr [rbx + rdi*8 - 1], esp ; call qword ptr [rax]
0x0000000000443ef9 : add al, bh ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rcx
0x0000000000460b55 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], bh ; cli ; jmp qword ptr [rcx]
0x0000000000460b9d : add al, byte ptr [rax] ; add byte ptr [rax], dl ; sahf ; cli ; jmp qword ptr [rbx]
0x0000000000461957 : add al, cl ; fdiv st(7), st(0) ; call qword ptr [rax]
0x0000000000460f9f : add al, dh ; cli ; call qword ptr [rdx]
0x000000000046112f : add al, dh ; idiv ebx ; jmp qword ptr [rbx]
0x000000000046128f : add al, dl ; cld ; sti ; call rdx
0x0000000000401fea : add bh, al ; les r10d, ptr [r8] ; ret
0x000000000044113d : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; call qword ptr [rax]
0x000000000043fec5 : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; call rax
0x00000000004456c4 : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; call rcx
0x00000000004485a3 : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; call rdi
0x0000000000449a93 : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; call rsi
0x0000000000448a7b : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rax]
0x000000000043c506 : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x0000000000442350 : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rsi]
0x000000000043efc2 : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rax
0x0000000000446bb7 : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rbx
0x0000000000443fe7 : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rcx
0x0000000000440e9e : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rdi
0x0000000000448fef : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rsi
0x000000000043f489 : add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; lcall ptr [rdx] ; ret 0x4fab
0x00000000004236b4 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000041c2a9 : add bh, al ; test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x000000000045f5ef : add bl, dh ; ret
0x00000000004033c0 : add byte ptr [r8], al ; add byte ptr [rbx + 0x102db445], cl ; ret
0x000000000040d1c2 : add byte ptr [r8], al ; add byte ptr [rcx], al ; ret 0xea81
0x000000000040d424 : add byte ptr [r8], al ; add byte ptr [rcx], ch ; ret 0x5589
0x0000000000460957 : add byte ptr [rax + 0x11], bh ; cli ; jmp qword ptr [rax]
0x00000000004468b0 : add byte ptr [rax + 0x29], cl ; ret 0xb848
0x0000000000461377 : add byte ptr [rax + 3], bh ; cld ; jmp qword ptr [rbx]
0x0000000000401fe7 : add byte ptr [rax + rax], al ; add bh, al ; les r10d, ptr [r8] ; ret
0x0000000000460953 : add byte ptr [rax + rax], al ; add byte ptr [rax + 0x11], bh ; cli ; jmp qword ptr [rax]
0x0000000000400ddd : add byte ptr [rax + rax], al ; ret
0x000000000046118b : add byte ptr [rax + rcx], bh ; add byte ptr [rax - 7], al ; sti ; call rdi
0x0000000000461953 : add byte ptr [rax + rdx], al ; add al, cl ; fdiv st(7), st(0) ; call qword ptr [rax]
0x00000000004606b7 : add byte ptr [rax + rsi*8], al ; sti ; call rsp
0x000000000040a3a7 : add byte ptr [rax - 0x73], cl ; add al, 0x25 ; ret 0x45fb
0x0000000000421b38 : add byte ptr [rax - 0x73], cl ; add al, 0x25 ; ret 0x4600
0x0000000000420a0b : add byte ptr [rax - 0x75], cl ; clc ; mov rsp, rbp ; pop rbp ; ret
0x000000000044a3da : add byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x0000000000460b57 : add byte ptr [rax - 0x77], bh ; cli ; jmp qword ptr [rcx]
0x0000000000404172 : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004418ef : add byte ptr [rax - 0x77], cl ; ret 0x28e8
0x00000000004489f3 : add byte ptr [rax - 0x77], cl ; ret 0x8148
0x0000000000448f87 : add byte ptr [rax - 0x77], cl ; ret 0x90e8
0x000000000040b0e9 : add byte ptr [rax - 0x7f], cl ; ret 0xae80
0x000000000046118f : add byte ptr [rax - 7], al ; sti ; call rdi
0x00000000004616ff : add byte ptr [rax], ah ; cld ; call rdi
0x0000000000460dbf : add byte ptr [rax], ah ; ret 0xfffa
0x00000000004604fe : add byte ptr [rax], al ; adc al, 0x1b ; cli ; jmp rsp
0x0000000000461952 : add byte ptr [rax], al ; adc byte ptr [rax], r8b ; add al, cl ; fdiv st(7), st(0) ; call qword ptr [rax]
0x00000000004606b6 : add byte ptr [rax], al ; add al, -0x10 ; sti ; call rsp
0x0000000000400ddc : add byte ptr [rax], al ; add al, 0 ; ret
0x0000000000460776 : add byte ptr [rax], al ; add al, 0x17 ; cld ; jmp rsp
0x00000000004236b2 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000045f5ed : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000460955 : add byte ptr [rax], al ; add byte ptr [rax + 0x11], bh ; cli ; jmp qword ptr [rax]
0x00000000004468ae : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0xb848
0x0000000000421b36 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add al, 0x25 ; ret 0x4600
0x000000000044a3d8 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x00000000004047ed : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000045f5eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000400330 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x0000000000400332 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x000000000045f5ec : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400334 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x0000000000460952 : add byte ptr [rax], al ; add byte ptr [rax], r8b ; add byte ptr [rax + 0x11], bh ; cli ; jmp qword ptr [rax]
0x00000000004412cb : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], al ; ret 0x3141
0x00000000004033c1 : add byte ptr [rax], al ; add byte ptr [rbx + 0x102db445], cl ; ret
0x000000000040dbbe : add byte ptr [rax], al ; add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x0000000000402b42 : add byte ptr [rax], al ; add byte ptr [rbx + 0x3c2db445], cl ; ret
0x000000000041f4b2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000402165 : add byte ptr [rax], al ; add byte ptr [rbx + 0xf2db445], cl ; ret
0x0000000000421e73 : add byte ptr [rax], al ; add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x000000000042a04c : add byte ptr [rax], al ; add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x000000000044a6bc : add byte ptr [rax], al ; add byte ptr [rbx - 0x5ed243bb], cl ; ret
0x000000000044a60c : add byte ptr [rax], al ; add byte ptr [rbx - 0x5fd243bb], cl ; ret
0x00000000004247d9 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x0000000000450bd1 : add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; ret
0x000000000043f6d4 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x0000000000450e6b : add byte ptr [rax], al ; add byte ptr [rcx - 0x7f], al ; ret
0x000000000044ac09 : add byte ptr [rax], al ; add byte ptr [rcx], ah ; ret 0xd609
0x000000000045aaa5 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x6348
0x000000000040d1c3 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xea81
0x0000000000450dae : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret
0x000000000040d425 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x5589
0x0000000000448c24 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8840
0x0000000000423620 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8b48
0x000000000040c591 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x00000000004291e1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000040b6a8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000044052c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x000000000040619a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000428ef5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x00000000004080b2 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000040c888 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000446760 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000460dfe : add byte ptr [rax], al ; add dh, -6 ; jmp qword ptr [rbx]
0x0000000000460b52 : add byte ptr [rax], al ; add r8b, byte ptr [rax] ; add byte ptr [rax - 0x77], bh ; cli ; jmp qword ptr [rcx]
0x000000000040a9cb : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041f0d0 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000408b56 : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000042a6f8 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000406af6 : add byte ptr [rax], al ; add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x0000000000401ddc : add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000401553 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000460f9e : add byte ptr [rax], al ; cli ; call qword ptr [rdx]
0x00000000004616fa : add byte ptr [rax], al ; in al, dx ; or eax, 0x64200000 ; cld ; call rdi
0x0000000000460e7a : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; add eax, 0xcde00000 ; cli ; call qword ptr [rcx]
0x000000000046118a : add byte ptr [rax], al ; jl 0x46119f ; add byte ptr [rax], al ; stc ; sti ; call rdi
0x000000000046128a : add byte ptr [rax], al ; jl 0x4612a0 ; add byte ptr [rax], al ; sar ah, 1 ; sti ; call rdx
0x0000000000401729 : add byte ptr [rax], al ; jmp 0x401569
0x000000000042f9cc : add byte ptr [rax], al ; jmp 0x43bc17
0x0000000000460956 : add byte ptr [rax], al ; js 0x460970 ; cli ; jmp qword ptr [rax]
0x0000000000460b56 : add byte ptr [rax], al ; js 0x460ae8 ; cli ; jmp qword ptr [rcx]
0x0000000000461376 : add byte ptr [rax], al ; js 0x461382 ; cld ; jmp qword ptr [rbx]
0x0000000000460dba : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add al, 0 ; add byte ptr [rax], ah ; ret 0xfffa
0x0000000000460e7e : add byte ptr [rax], al ; loopne 0x460e54 ; cli ; call qword ptr [rcx]
0x00000000004614be : add byte ptr [rax], al ; mov al, 0x28 ; cld ; call qword ptr [rdx]
0x000000000040d208 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040abfc : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000044a781 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x40] ; pop rbp ; ret
0x000000000044a3d9 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004047ee : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000460f9a : add byte ptr [rax], al ; mov word ptr [rsi], es ; add byte ptr [rax], al ; cli ; call qword ptr [rdx]
0x00000000004613b2 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; or al, byte ptr [rax] ; add byte ptr [rax], bl ; or ah, bh ; jmp rsi
0x0000000000461372 : add byte ptr [rax], al ; or al, byte ptr fs:[rax] ; add byte ptr [rax + 3], bh ; cld ; jmp qword ptr [rbx]
0x0000000000406936 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000041f4b3 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004082c2 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000045f5ee : add byte ptr [rax], al ; ret
0x0000000000400336 : add byte ptr [rax], al ; ret 1
0x000000000046128e : add byte ptr [rax], al ; sar ah, 1 ; sti ; call rdx
0x00000000004613b6 : add byte ptr [rax], al ; sbb byte ptr [rax], cl ; cld ; jmp rsi
0x000000000046118e : add byte ptr [rax], al ; stc ; sti ; call rdi
0x000000000046053e : add byte ptr [rax], al ; xchg eax, esp ; xchg dl, bh ; jmp rsp
0x00000000004613b7 : add byte ptr [rax], bl ; or ah, bh ; jmp rsi
0x0000000000460b9f : add byte ptr [rax], dl ; sahf ; cli ; jmp qword ptr [rbx]
0x0000000000460954 : add byte ptr [rax], r8b ; add byte ptr [rax + 0x11], bh ; cli ; jmp qword ptr [rax]
0x000000000040a9ca : add byte ptr [rax], r8b ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004412cd : add byte ptr [rbp - 0x77], al ; ret 0x3141
0x00000000004033c3 : add byte ptr [rbx + 0x102db445], cl ; ret
0x000000000040dbc0 : add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x0000000000402af9 : add byte ptr [rbx + 0x3b2db445], cl ; ret
0x0000000000402b44 : add byte ptr [rbx + 0x3c2db445], cl ; ret
0x000000000041f4b4 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004082c3 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000402167 : add byte ptr [rbx + 0xf2db445], cl ; ret
0x00000000004604ff : add byte ptr [rbx + rbx], dl ; cli ; jmp rsp
0x000000000046149b : add byte ptr [rbx + rcx + 0x27f00000], cl ; cld ; call rdx
0x00000000004614bb : add byte ptr [rbx + rcx + 0x28b00000], ch ; cld ; call qword ptr [rdx]
0x0000000000421e75 : add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x0000000000421e2a : add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x000000000042a04e : add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x000000000044a6be : add byte ptr [rbx - 0x5ed243bb], cl ; ret
0x000000000044a60e : add byte ptr [rbx - 0x5fd243bb], cl ; ret
0x000000000040d209 : add byte ptr [rbx - 0x76b71fbb], cl ; in al, dx ; pop rbp ; ret
0x00000000004247db : add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x0000000000400dd7 : add byte ptr [rbx], dl ; imul ebp, dword ptr [rcx + 0xd], 0x40000 ; ret
0x0000000000450bd3 : add byte ptr [rcx + 0x29], al ; ret
0x000000000043f6d6 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x000000000043c5b5 : add byte ptr [rcx + 0xf], al ; xchg eax, edx ; ret 0x8844
0x00000000004612ab : add byte ptr [rcx + rcx - 0x1700000], bl ; sti ; call qword ptr [rbx]
0x000000000046128b : add byte ptr [rcx + rcx], bh ; add al, dl ; cld ; sti ; call rdx
0x0000000000450e6d : add byte ptr [rcx - 0x7f], al ; ret
0x000000000044ac0b : add byte ptr [rcx], ah ; ret 0xd609
0x00000000004080b0 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000042371e : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401a98 : add byte ptr [rcx], al ; ret
0x000000000045aaa7 : add byte ptr [rcx], al ; ret 0x6348
0x000000000040d1c5 : add byte ptr [rcx], al ; ret 0xea81
0x0000000000450db0 : add byte ptr [rcx], ch ; ret
0x000000000040d427 : add byte ptr [rcx], ch ; ret 0x5589
0x0000000000448c26 : add byte ptr [rcx], ch ; ret 0x8840
0x0000000000423622 : add byte ptr [rcx], ch ; ret 0x8b48
0x0000000000460777 : add byte ptr [rdi + rdx], al ; cld ; jmp rsp
0x000000000040c593 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x00000000004291e3 : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000040b6aa : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000044052e : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x000000000040619c : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000428ef7 : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x00000000004080b4 : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000040c88a : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000446762 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000460b9b : add byte ptr [rdx + rax - 0x61f00000], cl ; cli ; jmp qword ptr [rbx]
0x0000000000460b53 : add byte ptr [rdx + rax], al ; add byte ptr [rax - 0x77], bh ; cli ; jmp qword ptr [rcx]
0x00000000004613b3 : add byte ptr [rdx + rcx + 0x8180000], ah ; cld ; jmp rsi
0x0000000000461373 : add byte ptr [rdx + rcx], ah ; add byte ptr [rax + 3], bh ; cld ; jmp qword ptr [rbx]
0x0000000000460f9b : add byte ptr [rsi + rax - 0xc100000], cl ; cli ; call qword ptr [rdx]
0x0000000000401a97 : add byte ptr es:[rcx], al ; ret
0x000000000041c3dc : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x000000000042f87d : add cl, ch ; nop ; ret
0x000000000042f8b5 : add cl, ch ; pop rax ; ret
0x0000000000402e46 : add cl, ch ; ret
0x000000000042f9cd : add cl, ch ; ret 0
0x0000000000403247 : add cl, ch ; ret 1
0x0000000000460e00 : add dh, -6 ; jmp qword ptr [rbx]
0x000000000040ac3c : add dword ptr [rax + 0xf], eax ; mov dh, -0x3a ; pop rbp ; ret
0x0000000000408e4d : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000404a3a : add dword ptr [rax], eax ; add cl, ch ; ret 1
0x000000000042f924 : add dword ptr [rax], eax ; jmp 0x43bc17
0x0000000000443d9f : add dword ptr [rbp + 0x48b97d43], ebp ; ret
0x000000000040c712 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x000000000040b564 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000040b74e : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401a94 : add eax, 0x26087e ; add ebx, esi ; ret
0x00000000004082c1 : add eax, 0x415b0000 ; pop rsi ; pop rbp ; ret
0x000000000046053d : add eax, 0x86940000 ; cli ; jmp rsp
0x0000000000460e7d : add eax, 0xcde00000 ; cli ; call qword ptr [rcx]
0x0000000000449a91 : add eax, dword ptr [rax] ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; call rsi
0x000000000040a3a5 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x73], cl ; add al, 0x25 ; ret 0x45fb
0x0000000000401a5b : add eax, edx ; sar rax, 1 ; jne 0x401a6c ; pop rbp ; ret
0x0000000000401a99 : add ebx, esi ; ret
0x0000000000443e95 : add edi, eax ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rcx
0x0000000000440708 : add edi, eax ; test dword ptr [rbx + rdi*8 - 1], esp ; lcall ptr [rbx + 0x47] ; ret
0x0000000000461379 : add edi, esp ; jmp qword ptr [rbx]
0x0000000000401e2b : add esp, 0x10 ; pop rbp ; ret
0x000000000042371c : add esp, 0x100 ; pop rbp ; ret
0x0000000000426166 : add esp, 0x110 ; pop rbp ; ret
0x000000000040b342 : add esp, 0x120 ; pop rbp ; ret
0x0000000000408a9c : add esp, 0x160 ; pop rbp ; ret
0x000000000045ebf1 : add esp, 0x1750 ; pop rbp ; ret
0x000000000042388c : add esp, 0x1a0 ; pop rbp ; ret
0x000000000041f0d3 : add esp, 0x20 ; pop rbp ; ret
0x00000000004094ca : add esp, 0x30 ; pop rbp ; ret
0x0000000000406932 : add esp, 0x310 ; pop rbp ; ret
0x0000000000408b59 : add esp, 0x40 ; pop rbp ; ret
0x0000000000429b79 : add esp, 0x440 ; pop rbp ; ret
0x0000000000401fd2 : add esp, 0x50 ; pop rbp ; ret
0x0000000000406af9 : add esp, 0x58 ; pop rbx ; pop rbp ; ret
0x0000000000408c82 : add esp, 0x60 ; pop rbp ; ret
0x0000000000401ddf : add esp, 0x70 ; pop rbp ; ret
0x000000000040ed2f : add esp, 0x80 ; pop rbp ; ret
0x000000000040f09d : add esp, 0x90 ; pop rbp ; ret
0x0000000000421ba6 : add esp, 0xa0 ; pop rbp ; ret
0x000000000041f9ab : add esp, 0xb0 ; pop rbp ; ret
0x00000000004254ed : add esp, 0xc0 ; pop rbp ; ret
0x000000000040fd5a : add esp, 0xd0 ; pop rbp ; ret
0x000000000042a29e : add esp, 0xe0 ; pop rbp ; ret
0x000000000040da1b : add esp, 0xf0 ; pop rbp ; ret
0x000000000040c717 : add esp, 8 ; pop rbp ; ret
0x0000000000401556 : add esp, 8 ; ret
0x0000000000460b54 : add r8b, byte ptr [rax] ; add byte ptr [rax - 0x77], bh ; cli ; jmp qword ptr [rcx]
0x000000000040a3a4 : add r8d, dword ptr [rax] ; add byte ptr [rax - 0x73], cl ; add al, 0x25 ; ret 0x45fb
0x0000000000401a5a : add rax, rdx ; sar rax, 1 ; jne 0x401a6d ; pop rbp ; ret
0x0000000000401e2a : add rsp, 0x10 ; pop rbp ; ret
0x000000000042371b : add rsp, 0x100 ; pop rbp ; ret
0x0000000000426165 : add rsp, 0x110 ; pop rbp ; ret
0x000000000040b341 : add rsp, 0x120 ; pop rbp ; ret
0x0000000000408a9b : add rsp, 0x160 ; pop rbp ; ret
0x000000000045ebf0 : add rsp, 0x1750 ; pop rbp ; ret
0x000000000042388b : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000041f0d2 : add rsp, 0x20 ; pop rbp ; ret
0x00000000004094c9 : add rsp, 0x30 ; pop rbp ; ret
0x0000000000406931 : add rsp, 0x310 ; pop rbp ; ret
0x0000000000408b58 : add rsp, 0x40 ; pop rbp ; ret
0x0000000000429b78 : add rsp, 0x440 ; pop rbp ; ret
0x0000000000401fd1 : add rsp, 0x50 ; pop rbp ; ret
0x0000000000406af8 : add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x0000000000408c81 : add rsp, 0x60 ; pop rbp ; ret
0x0000000000401dde : add rsp, 0x70 ; pop rbp ; ret
0x000000000040ed2e : add rsp, 0x80 ; pop rbp ; ret
0x000000000040f09c : add rsp, 0x90 ; pop rbp ; ret
0x0000000000421ba5 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000041f9aa : add rsp, 0xb0 ; pop rbp ; ret
0x00000000004254ec : add rsp, 0xc0 ; pop rbp ; ret
0x000000000040fd59 : add rsp, 0xd0 ; pop rbp ; ret
0x000000000042a29d : add rsp, 0xe0 ; pop rbp ; ret
0x000000000040da1a : add rsp, 0xf0 ; pop rbp ; ret
0x000000000040c716 : add rsp, 8 ; pop rbp ; ret
0x0000000000401555 : add rsp, 8 ; ret
0x0000000000401a34 : and ah, byte ptr [rsi] ; jmp rax
0x0000000000401a74 : and ah, byte ptr [rsi] ; jmp rdx
0x000000000042f922 : and al, 0x32 ; add dword ptr [rax], eax ; jmp 0x43bc19
0x000000000040d1cd : and al, 0xffffffffffffff81 ; ret 0x61
0x000000000040b563 : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040b74d : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040b344 : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004082c0 : and byte ptr [rip + 0x415b0000], al ; pop rsi ; pop rbp ; ret
0x000000000042450b : and byte ptr [rsi + 0x58], ah ; jb 0x424542 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000040ac3a : and dh, 1 ; movzx eax, sil ; pop rbp ; ret
0x00000000004446e7 : and dl, byte ptr [rdi] ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rcx
0x000000000041b611 : and eax, 0x75b4b9d3 ; ret
0x0000000000443fe4 : and eax, 0xc700005e ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rcx
0x000000000044c14c : and ebx, dword ptr [rbx + 0x6a] ; ret 0x8589
0x000000000040ac39 : and sil, 1 ; movzx eax, sil ; pop rbp ; ret
0x000000000042555e : call 0x4017f2
0x0000000000424905 : call 0x4249c9
0x000000000045df3d : call 0x44a202
0x000000000042a5ed : call 0xffffffffaca36821
0x000000000042a5ec : call 0xffffffffaca36822
0x0000000000409f4f : call 0xffffffffc2d2ae5f
0x000000000041f0c9 : call 0xffffffffe9047a19
0x000000000041f0c8 : call 0xffffffffe9047a1a
0x000000000045f5c9 : call qword ptr [r12 + rbx*8]
0x0000000000441143 : call qword ptr [rax]
0x000000000042088e : call qword ptr [rbx]
0x0000000000429c1c : call qword ptr [rcx]
0x000000000041e554 : call qword ptr [rdi]
0x000000000040a2a9 : call qword ptr [rdx]
0x000000000045da23 : call qword ptr [rsi]
0x000000000045f5ca : call qword ptr [rsp + rbx*8]
0x0000000000401abd : call rax
0x000000000045c6cd : call rbx
0x000000000041c7bb : call rcx
0x000000000041e194 : call rdi
0x000000000041d9c5 : call rdx
0x0000000000408095 : call rsi
0x000000000044831f : call rsp
0x000000000040b340 : clc ; add rsp, 0x120 ; pop rbp ; ret
0x000000000040db28 : clc ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000429b77 : clc ; add rsp, 0x440 ; pop rbp ; ret
0x0000000000423c67 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x00000000004250a9 : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x00000000004254eb : clc ; add rsp, 0xc0 ; pop rbp ; ret
0x0000000000401a5f : clc ; jne 0x401a68 ; pop rbp ; ret
0x0000000000420a0f : clc ; mov rsp, rbp ; pop rbp ; ret
0x000000000044a3de : clc ; pop rbp ; ret
0x000000000044a533 : clc ; pop rbx ; pop rbp ; ret
0x0000000000411b9d : clc ; ret 0x77a8
0x000000000042ac2e : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x0000000000426f7d : cld ; add rsp, 0xf0 ; pop rbp ; ret
0x00000000004614c2 : cld ; call qword ptr [rdx]
0x0000000000461702 : cld ; call rdi
0x00000000004614a2 : cld ; call rdx
0x000000000040dbef : cld ; jmp 0x40dc5c
0x000000000040dbee : cld ; jmp 0x40dc5d
0x000000000046137a : cld ; jmp qword ptr [rbx]
0x00000000004613ba : cld ; jmp rsi
0x000000000046077a : cld ; jmp rsp
0x0000000000461291 : cld ; sti ; call rdx
0x0000000000460e82 : cli ; call qword ptr [rcx]
0x0000000000460fa2 : cli ; call qword ptr [rdx]
0x00000000004604fa : cli ; inc esp ; add al, 0 ; add byte ptr [rbx + rbx], dl ; cli ; jmp rsp
0x000000000046053a : cli ; inc esp ; add eax, 0x86940000 ; cli ; jmp rsp
0x000000000046095a : cli ; jmp qword ptr [rax]
0x0000000000460ba2 : cli ; jmp qword ptr [rbx]
0x0000000000460b5a : cli ; jmp qword ptr [rcx]
0x0000000000460afa : cli ; jmp rbx
0x0000000000460502 : cli ; jmp rsp
0x0000000000424510 : cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000425c8b : cmc ; add dword ptr [rax], eax ; add cl, ch ; ret 1
0x000000000040d1cc : cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x000000000042342b : cmc ; ret 0x4f0b
0x000000000045d377 : cmp byte ptr [rcx - 0x1f743], al ; call qword ptr [rax]
0x00000000004235c1 : cmp cl, byte ptr [rsi - 0x946182f] ; ret 0x4f0b
0x000000000044eaeb : cmp eax, 0xb8000025 ; mov ebp, ecx ; ret
0x0000000000401a1d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401a30 ; pop rbp ; ret
0x000000000045dba1 : cmp eax, 0xe9b845c2 ; ret
0x000000000044f17f : cmp edi, ebp ; cwde ; jmp 0x451035
0x000000000041c467 : cmp esp, dword ptr [rbp - 0x47] ; push -0x75425eeb ; push rbp ; ret
0x000000000043156a : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xcc39
0x00000000004315be : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xcc39
0x000000000044f181 : cwde ; jmp 0x451033
0x000000000044eae9 : cwde ; jmp 0x451035
0x0000000000444fb5 : cwde ; ret 0x2eb9
0x00000000004306c4 : cwde ; ret 0x8589
0x0000000000447d78 : cwde ; sti ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; call rax
0x0000000000407d74 : dec dword ptr [rax + 0x29] ; ret 0x148
0x000000000040a196 : dec dword ptr [rax + 0x39] ; ret 0xf40
0x0000000000407ee2 : dec dword ptr [rax + 0x39] ; ret 0xf41
0x000000000043ca61 : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax + 0x29] ; ret 0xf41
0x000000000041b96b : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x000000000041b2de : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x00000000004489f0 : dec dword ptr [rax - 0x75] ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000041bae3 : dec dword ptr [rax - 0x75] ; or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x0000000000448434 : dec dword ptr [rax - 0x77] ; adc eax, edi ; test dword ptr [rbx + rdi*8 - 1], esp ; call rdx
0x000000000042463d : dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000045eef1 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x00000000004296d6 : dec dword ptr [rax - 0x77] ; ret 0x8148
0x0000000000408812 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000409f4c : dec dword ptr [rax - 0x7d] ; call 0xffffffffc2d2ae62
0x00000000004510e0 : dec dword ptr [rax - 0x7f] ; ret 0x10
0x00000000004510ae : dec dword ptr [rax - 0x7f] ; ret 0x20
0x0000000000459b51 : dec dword ptr [rax - 0x7f] ; ret 0xffff
0x000000000045b67e : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000044f6a8 : dec dword ptr [rax - 0x7f] ; ret 4
0x0000000000459d63 : dec dword ptr [rax - 1] ; ret 0x8948
0x000000000045d1bc : dec dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000042555a : dec dword ptr [rcx - 0x72174fbb] ; ret 0xfffd
0x000000000044f31b : dec dword ptr [rcx - 0x7628d639] ; ret 0xea81
0x000000000045c72e : dec dword ptr [rcx - 0x7f] ; ret
0x000000000045c7de : dec dword ptr [rcx - 0x7f] ; ret 1
0x0000000000423426 : dec dword ptr [rcx - 0xa167e3f] ; ret 0x4f0b
0x000000000042f877 : dec dword ptr [rdi] ; test ah, al ; or al, 1 ; add cl, ch ; nop ; ret
0x0000000000404a36 : dec dword ptr [rdi] ; test ah, ch ; add dword ptr [rax], eax ; add cl, ch ; ret 1
0x0000000000438da7 : dec dword ptr [rdi] ; test al, bl ; ret
0x0000000000451212 : dec dword ptr [rdi] ; test bl, ch ; ret
0x000000000042f9c7 : dec dword ptr [rdi] ; test byte ptr [rbx - 0x16ffff1b], dl ; ret 0
0x000000000043b32b : dec dword ptr [rdi] ; test byte ptr [rcx], ch ; ret
0x000000000041187a : dec dword ptr [rdi] ; test byte ptr [rcx], ch ; ret 0
0x000000000042f91f : dec dword ptr [rdi] ; test byte ptr [rdx + rsi], ah ; add dword ptr [rax], eax ; jmp 0x43bc1c
0x0000000000425c88 : dec dword ptr [rdi] ; test dh, ch ; add dword ptr [rax], eax ; add cl, ch ; ret 1
0x0000000000433c7f : dec dword ptr [rdi] ; test dl, cl ; ret 0
0x000000000045e50f : dec dword ptr [rdi] ; xchg eax, ebx ; ret 0xd284
0x0000000000429503 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x000000000040a1c2 : dec dword ptr [rdx] ; ret 0xb37f
0x0000000000448829 : dec ebp ; or ch, dh ; ret 0xdae9
0x0000000000444d7a : enter -5, -0x39 ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x0000000000429159 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000404170 : enter 0x8b, 0x48 ; mov esp, ebp ; pop rbp ; ret
0x000000000040fb79 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000461959 : fdiv st(7), st(0) ; call qword ptr [rax]
0x00000000004436f4 : fdivp st(3) ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x0000000000443cdd : fdivr st(3) ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x0000000000450c7d : fild dword ptr [rcx - 0x7f] ; ret 8
0x000000000040a283 : fimul word ptr [rax - 0x75] ; push rbp ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4802
0x000000000045d366 : fisttp word ptr [rcx] ; or ebp, ecx ; jmp qword ptr [rcx]
0x000000000043c504 : fld dword ptr [rax] ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x000000000040b788 : fld qword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000429d37 : fmul dword ptr [r9 - 0x57167e3f] ; ret
0x0000000000429d38 : fmul dword ptr [rcx - 0x57167e3f] ; ret
0x0000000000449fb2 : fmul dword ptr [rdi] ; wait ; ror dword ptr [rdi], -0x6c ; ret 0xca20
0x000000000045515d : fmul dword ptr [rdx - 0x6a] ; ret
0x000000000045f5cc : fmul qword ptr [rax - 0x7d] ; ret
0x000000000040eff7 : fsub st(1), st(0) ; mov ebx, 0xb8000000 ; ret 0xebc8
0x00000000004430d0 : fsubr st(4), st(0) ; sti ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x0000000000401e29 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042650c : hlt ; add rsp, 0xa0 ; pop rbp ; ret
0x000000000042a29c : hlt ; add rsp, 0xe0 ; pop rbp ; ret
0x0000000000410361 : hlt ; add rsp, 8 ; pop rbp ; ret
0x0000000000401a30 : hlt ; pop rbp ; mov edi, 0x6622d8 ; jmp rax
0x0000000000447442 : idiv byte ptr [rcx + rsi*8 - 0x17] ; ret
0x0000000000461131 : idiv ebx ; jmp qword ptr [rbx]
0x000000000042463b : idiv edi ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x0000000000400dd9 : imul ebp, dword ptr [rcx + 0xd], 0x40000 ; ret
0x0000000000441a88 : in al, -0x7f ; ret 0xfff7
0x00000000004430d1 : in al, -5 ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x00000000004268c1 : in al, 0x48 ; add esp, 0xb0 ; pop rbp ; ret
0x0000000000401fe6 : in al, dx ; add byte ptr [rax + rax], al ; add bh, al ; les r10d, ptr [r8] ; ret
0x000000000042a6ac : in al, dx ; jmp 0x42a729
0x000000000042a6ab : in al, dx ; jmp 0x42a72a
0x0000000000424cd5 : in al, dx ; lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004616fc : in al, dx ; or eax, 0x64200000 ; cld ; call rdi
0x0000000000404175 : in al, dx ; pop rbp ; ret
0x0000000000433c7d : in eax, -1 ; dec dword ptr [rdi] ; test dl, cl ; ret 0
0x000000000042f9cb : in eax, 0 ; add cl, ch ; ret 0
0x000000000043db1c : in eax, dx ; ret 0
0x00000000004079ea : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000045ab32 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000448e73 : inc dword ptr [rax] ; ret
0x0000000000407e63 : inc dword ptr [rbp + 0xf] ; ret
0x00000000004035c3 : inc dword ptr [rcx + 0xf] ; ret
0x000000000044425b : inc dword ptr [rcx + 0xf] ; ret 0x8589
0x0000000000441a82 : inc dword ptr [rcx - 0x1cb46e16] ; in al, -0x7f ; ret 0xfff7
0x0000000000450c76 : inc dword ptr [rcx - 0x7f] ; ret 0xc350
0x0000000000447d7a : inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; call rax
0x00000000004465cd : inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; call rdi
0x0000000000448136 : inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; call rdx
0x000000000044311e : inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; call rsp
0x0000000000448e6d : inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; inc dword ptr [rax] ; ret
0x00000000004479d5 : inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rax]
0x0000000000442e47 : inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x00000000004486d5 : inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rax
0x0000000000440e49 : inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rdi
0x0000000000448e25 : inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rsi
0x000000000044078e : inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; lcall ptr [rbx + 0x47] ; ret
0x00000000004604fb : inc esp ; add al, 0 ; add byte ptr [rbx + rbx], dl ; cli ; jmp rsp
0x000000000046053b : inc esp ; add eax, 0x86940000 ; cli ; jmp rsp
0x0000000000460e7c : insb byte ptr [rdi], dx ; add eax, 0xcde00000 ; cli ; call qword ptr [rcx]
0x0000000000421577 : int 0x5b
0x0000000000458a21 : int1 ; ret 0x43ce
0x000000000045e1e5 : int1 ; ret 0x81e9
0x00000000004550ef : int1 ; ret 0x8589
0x000000000045e17f : int1 ; ret 0x8b48
0x0000000000458011 : int1 ; xchg eax, esp ; ret
0x000000000044113a : iretd ; mov word ptr [rax], es ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; call qword ptr [rax]
0x0000000000401a23 : ja 0x401a2a ; pop rbp ; ret
0x0000000000409f4a : ja 0x409f54 ; dec dword ptr [rax - 0x7d] ; call 0xffffffffc2d2ae64
0x000000000042450e : jb 0x42453f ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000043068b : jbe 0x4306cf ; ret 0x8589
0x00000000004306df : jbe 0x430723 ; ret 0x8589
0x000000000044003b : jbe 0x44007f ; ret 0x1db9
0x0000000000448ba5 : jbe 0x448be9 ; ret 0x8948
0x0000000000401a2f : je 0x401a2d ; pop rbp ; mov edi, 0x6622d8 ; jmp rax
0x000000000042f9c8 : je 0x43df69 ; jmp 0x43bc1b
0x000000000042f920 : je 0x442b52 ; jmp 0x43bc1b
0x000000000042fa00 : je 0x4451a4 ; jmp 0x43bc1b
0x000000000042f958 : je 0x44771e ; jmp 0x43bc1b
0x000000000042f990 : je 0x448573 ; jmp 0x43bc1b
0x0000000000426481 : jg 0x426495 ; xchg eax, edi ; ret 0xd284
0x00000000004491b4 : jg 0x449183 ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rcx]
0x00000000004495c3 : jg 0x4495c8 ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rdi
0x000000000041aa06 : jge 0x41a98b ; ret 0xffd5
0x000000000041b4d0 : jge 0x41b4b0 ; shr cl, cl ; ret 0x3b
0x0000000000443da2 : jge 0x443d60 ; ret
0x0000000000443da1 : jge 0x443d61 ; ret
0x00000000004550ed : jge 0x45508c ; int1 ; ret 0x8589
0x000000000046118c : jl 0x46119d ; add byte ptr [rax], al ; stc ; sti ; call rdi
0x000000000046128c : jl 0x46129e ; add byte ptr [rax], al ; sar ah, 1 ; sti ; call rdx
0x0000000000401a95 : jle 0x401aa5 ; add byte ptr es:[rcx], al ; ret
0x0000000000455141 : jle 0x4550e0 ; int1 ; ret 0x8589
0x000000000045e17d : jle 0x45e11c ; int1 ; ret 0x8b48
0x000000000045e1e3 : jle 0x45e182 ; int1 ; ret 0x81e9
0x000000000040172b : jmp 0x401567
0x000000000040355d : jmp 0x404353
0x00000000004046eb : jmp 0x404893
0x0000000000406542 : jmp 0x406a39
0x00000000004078ee : jmp 0x4083fc
0x000000000040a3a3 : jmp 0x40a6f5
0x000000000040dbf0 : jmp 0x40dc5b
0x000000000040efde : jmp 0x40f0be
0x0000000000419ed6 : jmp 0x419edb
0x000000000041bc20 : jmp 0x41f0a0
0x0000000000419b24 : jmp 0x41f0a1
0x000000000041aef1 : jmp 0x41f0a2
0x0000000000421b34 : jmp 0x421bc7
0x000000000042284b : jmp 0x4232b7
0x0000000000422788 : jmp 0x4232b9
0x00000000004248b3 : jmp 0x424918
0x0000000000429a16 : jmp 0x429cf8
0x000000000042a6ad : jmp 0x42a728
0x000000000042f926 : jmp 0x43bc15
0x000000000043db1b : jmp 0x449e0f
0x00000000004403ed : jmp 0x449e13
0x000000000043cf9b : jmp 0x449e14
0x000000000043dd82 : jmp 0x449e15
0x000000000044a747 : jmp 0x44a798
0x000000000044f182 : jmp 0x451032
0x000000000044e254 : jmp 0x451033
0x000000000044eaea : jmp 0x451034
0x000000000045c66e : jmp 0x45f574
0x000000000045b760 : jmp 0x45f575
0x000000000042342a : jmp 0x4f4df726
0x0000000000448626 : jmp 0xfffffffff6c5fc35
0x0000000000448625 : jmp 0xfffffffff6c5fc36
0x000000000040a571 : jmp qword ptr [rax]
0x0000000000448c94 : jmp qword ptr [rbx]
0x000000000040b78e : jmp qword ptr [rcx]
0x000000000041c6a7 : jmp qword ptr [rdi]
0x00000000004236ba : jmp qword ptr [rdx]
0x0000000000442356 : jmp qword ptr [rsi]
0x0000000000401a37 : jmp rax
0x000000000041aff8 : jmp rbx
0x000000000041ba2a : jmp rcx
0x000000000041b052 : jmp rdi
0x0000000000401a77 : jmp rdx
0x0000000000448e2b : jmp rsi
0x000000000041b308 : jmp rsp
0x0000000000401a60 : jne 0x401a67 ; pop rbp ; ret
0x000000000040b0e7 : jno 0x40b113 ; add byte ptr [rax - 0x7f], cl ; ret 0xae80
0x0000000000450845 : jno 0x450804 ; ror dword ptr [rcx], 1 ; ret
0x0000000000401de1 : jo 0x401e42 ; ret
0x000000000041491e : jo 0x41492a ; ret
0x000000000041658e : jo 0x41659a ; ret
0x0000000000419add : jo 0x419ae9 ; ret
0x0000000000420dc4 : jo 0x420e25 ; ret
0x000000000044234e : jp 0x442358 ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rsi]
0x0000000000450843 : jp 0x450820 ; jno 0x450806 ; ror dword ptr [rcx], 1 ; ret
0x0000000000408b54 : js 0x408b68 ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000460958 : js 0x46096e ; cli ; jmp qword ptr [rax]
0x0000000000460b58 : js 0x460ae6 ; cli ; jmp qword ptr [rcx]
0x0000000000461378 : js 0x461380 ; cld ; jmp qword ptr [rbx]
0x000000000044070e : lcall ptr [rbx + 0x47] ; ret
0x000000000041b4ce : lcall ptr [rbx - 0x162d2583] ; ret 0x3b
0x000000000043f48f : lcall ptr [rdx] ; ret 0x4fab
0x000000000041c5ce : lcall ptr [rsi] ; pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x000000000040e3f6 : lea eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000419ed4 : lea ebp, dword ptr [rax - 0x17000015] ; ret 0xfe77
0x0000000000409370 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004210b9 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000044a531 : lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040936f : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000044a530 : lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000401fec : les r10d, ptr [r8] ; ret
0x0000000000448ba3 : ljmp ptr [rcx] ; jbe 0x448beb ; ret 0x8948
0x0000000000419e2e : ljmp ptr [rdi] ; ret 0x23da
0x0000000000460dbc : lodsb al, byte ptr [rsi] ; add al, 0 ; add byte ptr [rax], ah ; ret 0xfffa
0x0000000000443da0 : lodsd eax, dword ptr [rsi] ; jge 0x443d62 ; ret
0x00000000004433ca : loop 0x4433b6 ; sti ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x000000000041ce35 : loope 0x41ce03 ; jmp 0x41f0a3
0x00000000004433cb : loope 0x4433d0 ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x0000000000406198 : loopne 0x4061a1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040a949 : loopne 0x40a99b ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040a948 : loopne 0x40a99c ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040d20c : loopne 0x40d25b ; mov esp, ebp ; pop rbp ; ret
0x000000000040d20b : loopne 0x40d25c ; mov esp, ebp ; pop rbp ; ret
0x000000000040d45c : loopne 0x40d4ab ; mov esp, ebp ; pop rbp ; ret
0x000000000040d45b : loopne 0x40d4ac ; mov esp, ebp ; pop rbp ; ret
0x0000000000411213 : loopne 0x411266 ; lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004207bd : loopne 0x420823 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000421ba4 : loopne 0x421bf7 ; add esp, 0xa0 ; pop rbp ; ret
0x0000000000423f73 : loopne 0x423f7c ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004248fe : loopne 0x42494e ; add esp, 0x60 ; pop rbp ; ret
0x00000000004248fd : loopne 0x42494f ; add esp, 0x60 ; pop rbp ; ret
0x000000000042a2a0 : loopne 0x42a2a7 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042ac32 : loopne 0x42ac39 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000044ab7f : loopne 0x44ab13 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000044ab7e : loopne 0x44ab14 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000460e80 : loopne 0x460e52 ; cli ; call qword ptr [rcx]
0x000000000043f040 : mov ah, -0x50 ; out -0x47, eax ; scasd eax, dword ptr [rdi] ; mov bl, -0x2e ; ret 0x1b2
0x000000000041a9fd : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000041aad7 : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000401fd0 : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000418a85 : mov ah, 0x75 ; ret
0x00000000004606b4 : mov ah, 0xb ; add byte ptr [rax], al ; add al, -0x10 ; sti ; call rsp
0x0000000000421593 : mov al, -0x47 ; ret
0x00000000004291df : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000041f9ad : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000045a240 : mov al, 0x21 ; ret 0x8941
0x00000000004614c0 : mov al, 0x28 ; cld ; call qword ptr [rdx]
0x000000000040ba7d : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040b74a : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040b9ad : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000044e252 : mov bh, -0x6d ; jmp 0x451035
0x000000000043f045 : mov bl, -0x2e ; ret 0x1b2
0x00000000004306fb : mov bl, -0x2e ; ret 0x8589
0x000000000043f061 : mov bl, -0x2e ; ret 0x8b48
0x0000000000412425 : mov bl, 0x75 ; ret
0x000000000040abfb : mov byte ptr [rax], 0 ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000401a93 : mov byte ptr [rip + 0x26087e], 1 ; ret
0x000000000041a27f : mov ch, byte ptr [rdx - 0x47] ; pop rbp ; pop rcx ; ret 0x1b2
0x000000000044b004 : mov ch, cl ; ret
0x00000000004446fb : mov cl, -0x32 ; sti ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x000000000043cf99 : mov cl, 0x13 ; jmp 0x449e16
0x000000000044ff0a : mov cl, 0x13 ; ret 0x1ab9
0x0000000000450d23 : mov cl, 0x13 ; ret 0x1e9
0x000000000044c169 : mov cl, 0x13 ; ret 0x8589
0x000000000040ac3f : mov dh, -0x3a ; pop rbp ; ret
0x000000000040c714 : mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x000000000040b566 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000040b750 : mov dh, -0x40 ; pop rbp ; ret
0x000000000040d1ca : mov dl, -0x34 ; cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x0000000000404ef1 : mov dl, 0 ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040c441 : mov dr1, word ptr [rcx + rcx*4 - 0x7bf05bbb] ; ret 2
0x0000000000410999 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000041056f : mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x000000000042a6aa : mov dword ptr [rbp - 0x14], eax ; jmp 0x42a72b
0x000000000040efdb : mov dword ptr [rbp - 0x24], eax ; jmp 0x40f0c1
0x000000000043db48 : mov dword ptr [rbp - 0x49c], eax ; jmp 0x449e15
0x0000000000401fce : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000042555b : mov dword ptr [rbp - 0x50], eax ; call 0x4017f5
0x0000000000422848 : mov dword ptr [rbp - 0x6c], eax ; jmp 0x4232ba
0x0000000000401e27 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000410c76 : mov dword ptr [rcx + 0x30], eax ; mov rsp, rbp ; pop rbp ; ret
0x000000000041081d : mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000404171 : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042477b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000044a52d : mov eax, dword ptr [rbp - 0x10] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040abff : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000042494e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040e9fe : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000042a525 : mov eax, dword ptr [rbp - 0x18] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000041099c : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004248fc : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000044ab7d : mov eax, dword ptr [rbp - 0x20] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040d20a : mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040416e : mov eax, dword ptr [rbp - 0x38] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000041081f : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000044a784 : mov eax, dword ptr [rbp - 0x40] ; pop rbp ; ret
0x000000000041035f : mov eax, dword ptr [rbp - 0xc] ; add rsp, 8 ; pop rbp ; ret
0x000000000040db26 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000420a0d : mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000044a3dc : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000041081e : mov eax, dword ptr ds:[rbp - 0x38] ; pop rbp ; ret
0x00000000004094c7 : mov eax, edx ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041d238 : mov ebp, 0xe19c53ba ; ret
0x000000000045df38 : mov ebp, 0xfffffe00 ; call 0x44a207
0x000000000044ddbc : mov ebp, ecx ; ret
0x0000000000401abb : mov ebp, esp ; call rax
0x0000000000401a21 : mov ebp, esp ; ja 0x401a2c ; pop rbp ; ret
0x000000000045a362 : mov ebx, 0x214efb6f ; ret 0x8941
0x0000000000401551 : mov ebx, 0x48000002 ; add esp, 8 ; ret
0x000000000045d02e : mov ebx, 0x81ffffff ; ret 0x8ae1
0x000000000040eff9 : mov ebx, 0xb8000000 ; ret 0xebc8
0x00000000004436f3 : mov ecx, 0xc7fffbde ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x000000000041056c : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x0000000000401ab5 : mov edi, 0x661e20 ; mov rbp, rsp ; call rax
0x0000000000401a32 : mov edi, 0x6622d8 ; jmp rax
0x0000000000401a72 : mov edi, 0x6622d8 ; jmp rdx
0x0000000000419ad7 : mov edi, 0xb8000055 ; wait ; jo 0x419aef ; ret
0x000000000045df37 : mov edi, dword ptr [rbp - 0x200] ; call 0x44a208
0x000000000045f5c7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000045f5c6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000045ed8c : mov edx, 0x2144b57b ; ret 0x8941
0x000000000042998e : mov edx, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000041a29b : mov edx, 0x595db993 ; ret 0x8b48
0x00000000004479d2 : mov edx, 0xc7fffb9b ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rax]
0x000000000045efa1 : mov edx, 0xe9b9f505 ; ret
0x0000000000460b59 : mov edx, edi ; jmp qword ptr [rcx]
0x000000000041b112 : mov esi, 0x39443e04 ; ret 0xf41
0x0000000000429977 : mov esi, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000401a70 : mov esi, eax ; mov edi, 0x6622d8 ; jmp rdx
0x000000000044a67f : mov esp, 0xb898e02d ; ret
0x000000000044234d : mov esp, 0xc700007a ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rsi]
0x0000000000404174 : mov esp, ebp ; pop rbp ; ret
0x0000000000410c75 : mov qword ptr [rcx + 0x30], rax ; mov rsp, rbp ; pop rbp ; ret
0x0000000000401fcf : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000044a67e : mov r12d, 0xb898e02d ; ret
0x000000000040a94a : mov rax, qword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042477a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040abfe : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000042494d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040e9fd : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004248fb : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000044a783 : mov rax, qword ptr [rbp - 0x40] ; pop rbp ; ret
0x000000000040db25 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000420a0c : mov rax, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000044a3db : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004094c6 : mov rax, rdx ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401aba : mov rbp, rsp ; call rax
0x0000000000401a20 : mov rbp, rsp ; ja 0x401a2d ; pop rbp ; ret
0x000000000045df36 : mov rdi, qword ptr [rbp - 0x200] ; call 0x44a209
0x0000000000401a6f : mov rsi, rax ; mov edi, 0x6622d8 ; jmp rdx
0x0000000000404173 : mov rsp, rbp ; pop rbp ; ret
0x0000000000424511 : mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000044113b : mov word ptr [rax], es ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; call qword ptr [rax]
0x0000000000460f9c : mov word ptr [rsi], es ; add byte ptr [rax], al ; cli ; call qword ptr [rdx]
0x000000000043bcc8 : movabs al, byte ptr [0x8348e28948fffffb] ; ret 0x48f0
0x000000000043beeb : movabs al, byte ptr [0x8348e28948fffffc] ; ret 0x48f0
0x000000000043c10b : movabs al, byte ptr [0x8348e28948fffffd] ; ret 0x48f0
0x0000000000415d78 : movabs byte ptr [0x840ffffff3c48589], al ; ret 0x4b
0x000000000043082e : movsb byte ptr [rdi], byte ptr [rsi] ; movsxd rbx, esp ; ret
0x00000000004613b4 : movsb byte ptr [rdi], byte ptr [rsi] ; or al, byte ptr [rax] ; add byte ptr [rax], bl ; or ah, bh ; jmp rsi
0x0000000000418fc5 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x6a8a
0x0000000000436e73 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x8923
0x0000000000441341 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xb923
0x000000000044a1e1 : movsx eax, al ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004307db : movsxd rbx, esp ; ret
0x000000000040c713 : movzx eax, al ; add rsp, 8 ; pop rbp ; ret
0x000000000040b565 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040b74f : movzx eax, al ; pop rbp ; ret
0x000000000040ac3e : movzx eax, dh ; pop rbp ; ret
0x000000000040ac3d : movzx eax, sil ; pop rbp ; ret
0x0000000000429788 : neg byte ptr [rsi + 0x2948e012] ; ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000412265 : nop ; ret
0x0000000000420672 : nop ; ret 0x148
0x0000000000420686 : nop ; ret 0x2948
0x000000000045f5e8 : nop dword ptr [rax + rax] ; ret
0x0000000000450e63 : not byte ptr [rdx - 0x7ebe5362] ; ret
0x00000000004613b9 : or ah, bh ; jmp rsi
0x00000000004046e9 : or al, 0x21 ; jmp 0x404895
0x000000000041a9fa : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000041aad4 : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000434ed6 : or al, 0x7a ; ret 0x8909
0x000000000043ca9d : or al, 0x7a ; ret 0xb909
0x000000000042f87b : or al, 1 ; add cl, ch ; nop ; ret
0x0000000000461375 : or al, byte ptr [rax] ; add byte ptr [rax + 3], bh ; cld ; jmp qword ptr [rbx]
0x00000000004613b5 : or al, byte ptr [rax] ; add byte ptr [rax], bl ; or ah, bh ; jmp rsi
0x0000000000461374 : or al, byte ptr fs:[rax] ; add byte ptr [rax + 3], bh ; cld ; jmp qword ptr [rbx]
0x0000000000405f2a : or byte ptr [r8], al ; add cl, ch ; ret 1
0x0000000000410570 : or byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000045b0a3 : or byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000046112d : or byte ptr [rax], al ; add al, dh ; idiv ebx ; jmp qword ptr [rbx]
0x000000000046118d : or byte ptr [rax], al ; add byte ptr [rax - 7], al ; sti ; call rdi
0x0000000000421e28 : or byte ptr [rax], al ; add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x0000000000405f2b : or byte ptr [rax], al ; add cl, ch ; ret 1
0x0000000000408bc4 : or byte ptr [rcx], cl ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000401a96 : or byte ptr [rsi], ah ; add byte ptr [rcx], al ; ret
0x0000000000430733 : or ch, dh ; ret 0x8589
0x000000000043f3fb : or ch, dh ; ret 0xa2b9
0x000000000044882b : or ch, dh ; ret 0xdae9
0x000000000041bae6 : or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x0000000000410c74 : or dword ptr [rax - 0x77], ecx ; xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000046128d : or dword ptr [rax], eax ; add al, dl ; cld ; sti ; call rdx
0x0000000000402af7 : or dword ptr [rax], eax ; add byte ptr [rbx + 0x3b2db445], cl ; ret
0x000000000040355f : or eax, 0x3cb80000 ; ret
0x0000000000400ddb : or eax, 0x40000 ; ret
0x0000000000401dda : or eax, 0x48000000 ; add esp, 0x70 ; pop rbp ; ret
0x000000000044a77f : or eax, 0x48000000 ; mov eax, dword ptr [rbp - 0x40] ; pop rbp ; ret
0x000000000044a3d7 : or eax, 0x48000000 ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004616fd : or eax, 0x64200000 ; cld ; call rdi
0x00000000004606b5 : or eax, dword ptr [rax] ; add byte ptr [rax + rsi*8], al ; sti ; call rsp
0x000000000045d368 : or ebp, ecx ; jmp qword ptr [rcx]
0x000000000043db18 : or ecx, edx ; stosd dword ptr [rdi], eax ; jmp 0x449e12
0x000000000041081b : or edi, eax ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000450861 : out -0x47, al ; ror dword ptr [rcx], 1 ; ret
0x000000000043f042 : out -0x47, eax ; scasd eax, dword ptr [rdi] ; mov bl, -0x2e ; ret 0x1b2
0x0000000000442e45 : out -5, eax ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x000000000040ac3b : out 1, al ; movzx eax, sil ; pop rbp ; ret
0x000000000041c3db : out dx, al ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x000000000040b74c : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000430734 : out dx, al ; ret 0x8589
0x000000000042d25e : out dx, al ; ret 0x895e
0x000000000043f3fc : out dx, al ; ret 0xa2b9
0x000000000044882c : out dx, al ; ret 0xdae9
0x000000000040ba7f : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000421592 : out dx, eax ; mov al, -0x47 ; ret
0x000000000043aa46 : out dx, eax ; ret 0x895e
0x000000000043ed54 : out dx, eax ; ret 0xe95e
0x0000000000429979 : outsb dx, byte ptr [rsi] ; add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000440e9b : outsb dx, byte ptr [rsi] ; pop qword ptr [rax] ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rdi
0x000000000041d4c5 : outsb dx, byte ptr [rsi] ; ret 0x4861
0x0000000000412116 : outsb dx, byte ptr [rsi] ; ret 0x8961
0x000000000041d510 : outsb dx, byte ptr [rsi] ; ret 0xe961
0x00000000004236b1 : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000043b81a : outsd dx, dword ptr [rsi] ; ret 0
0x000000000042997c : outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000042450c : pop ax ; jb 0x424541 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000440e9c : pop qword ptr [rax] ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rdi
0x000000000040a5d7 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000045f5dc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004207bf : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040a5d9 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000045f5de : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040a5db : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000045f5e0 : pop r14 ; pop r15 ; ret
0x00000000004082c5 : pop r14 ; pop rbp ; ret
0x000000000040a5dd : pop r15 ; pop rbp ; ret
0x000000000045f5e2 : pop r15 ; ret
0x000000000042450d : pop rax ; jb 0x424540 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000406afb : pop rax ; pop rbx ; pop rbp ; ret
0x000000000042f8b7 : pop rax ; ret
0x0000000000401a92 : pop rbp ; mov byte ptr [rip + 0x26087e], 1 ; ret
0x0000000000401a31 : pop rbp ; mov edi, 0x6622d8 ; jmp rax
0x0000000000401a6e : pop rbp ; mov rsi, rax ; mov edi, 0x6622d8 ; jmp rdx
0x000000000045f5db : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040a5da : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000045f5df : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000041a282 : pop rbp ; pop rcx ; ret 0x1b2
0x0000000000416555 : pop rbp ; pop rcx ; ret 0x8589
0x000000000041a29e : pop rbp ; pop rcx ; ret 0x8b48
0x0000000000401a25 : pop rbp ; ret
0x00000000004207be : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041f4b5 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004082c4 : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000406afc : pop rbx ; pop rbp ; ret
0x0000000000421e30 : pop rbx ; ret
0x000000000041a283 : pop rcx ; ret 0x1b2
0x0000000000414956 : pop rcx ; ret 0x8589
0x000000000041a29f : pop rcx ; ret 0x8b48
0x000000000041c5d0 : pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x000000000040a5de : pop rdi ; pop rbp ; ret
0x000000000045f5e3 : pop rdi ; ret
0x000000000042adf2 : pop rdx ; ret
0x000000000040a5dc : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000045f5e1 : pop rsi ; pop r15 ; ret
0x00000000004082c6 : pop rsi ; pop rbp ; ret
0x000000000040a5d8 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000045f5dd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004207c0 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000414955 : pop rsp ; pop rcx ; ret 0x8589
0x00000000004047ec : popfq ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000040c595 : popfq ; ret 0xd284
0x000000000045c72a : popfq ; sar dh, -1 ; dec dword ptr [rcx - 0x7f] ; ret
0x0000000000442e44 : push -0x38000419 ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x000000000041a280 : push -0x47 ; pop rbp ; pop rcx ; ret 0x1b2
0x000000000041c46a : push -0x75425eeb ; push rbp ; ret
0x0000000000418fc8 : push -0x77 ; test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x00000000004606b3 : push qword ptr [rbx + rcx - 0xffc0000] ; sti ; call rsp
0x0000000000447440 : push qword ptr [rdx - 0x160e830a] ; ret
0x0000000000448c23 : push rax ; add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8840
0x0000000000401fd4 : push rax ; pop rbp ; ret
0x000000000043dab9 : push rax ; ret
0x000000000044c168 : push rbp ; mov cl, 0x13 ; ret 0x8589
0x0000000000401ab4 : push rbp ; mov edi, 0x661e20 ; mov rbp, rsp ; call rax
0x000000000041c46f : push rbp ; ret
0x000000000041c406 : push rbp ; ret 0xd284
0x00000000004092bd : push rbp ; ror byte ptr [rax - 0x75], 1 ; adc cl, byte ptr [rax - 0x7f] ; ret 8
0x000000000040a286 : push rbp ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4802
0x000000000041a9ff : push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000041aad9 : push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000446bb4 : push rbp ; xor al, byte ptr [rax] ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rbx
0x00000000004034b9 : push rbx ; ret
0x000000000042fa03 : push rdi ; add dword ptr [rax], eax ; jmp 0x43bc18
0x0000000000436ec6 : push rdi ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x8923
0x0000000000441340 : push rdi ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xb923
0x000000000042997b : push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000433e36 : push rdi ; ret
0x000000000044ff09 : push rsi ; mov cl, 0x13 ; ret 0x1ab9
0x0000000000450d22 : push rsi ; mov cl, 0x13 ; ret 0x1e9
0x000000000044cd70 : push rsi ; mov cl, 0x13 ; ret 0x8589
0x0000000000436e72 : push rsi ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x8923
0x0000000000433de2 : push rsi ; ret
0x00000000004424c6 : push rsi ; sti ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rdi
0x000000000043dbb5 : push rsp ; ret 0
0x000000000045d365 : pushfq ; fisttp word ptr [rcx] ; or ebp, ecx ; jmp qword ptr [rcx]
0x00000000004291e5 : pushfq ; ret 0xd284
0x0000000000444bfb : pushfq ; sar edi, 1 ; inc dword ptr [rcx + 0xf] ; ret 0x8589
0x0000000000443cdc : rcr al ; sti ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x0000000000400de0 : ret
0x000000000041187e : ret 0
0x00000000004510e3 : ret 0x10
0x000000000043227a : ret 0x103
0x000000000042ece2 : ret 0x111
0x0000000000433ac2 : ret 0x135
0x0000000000407d77 : ret 0x148
0x000000000045ce11 : ret 0x14e9
0x000000000041d5d4 : ret 0x1a
0x000000000040922a : ret 0x1a7
0x000000000044ff0c : ret 0x1ab9
0x000000000041284d : ret 0x1add
0x000000000041a285 : ret 0x1b2
0x000000000044b801 : ret 0x1dad
0x000000000044003d : ret 0x1db9
0x000000000044cd44 : ret 0x1e
0x0000000000450d25 : ret 0x1e9
0x000000000045d5a7 : ret 0x1f
0x00000000004510b1 : ret 0x20
0x000000000041319a : ret 0x23da
0x0000000000401932 : ret 0x2608
0x0000000000401732 : ret 0x2609
0x0000000000453b99 : ret 0x273b
0x000000000041fe98 : ret 0x279e
0x00000000004094a9 : ret 0x28
0x00000000004418f2 : ret 0x28e8
0x000000000040697c : ret 0x2948
0x000000000041c5d4 : ret 0x2a
0x000000000041aa02 : ret 0x2d50
0x0000000000444fb6 : ret 0x2eb9
0x00000000004294de : ret 0x3040
0x00000000004412d0 : ret 0x3141
0x0000000000458a2d : ret 0x33
0x000000000041b4d4 : ret 0x3b
0x0000000000447efe : ret 0x3ce8
0x0000000000418535 : ret 0x3e
0x0000000000429bd8 : ret 0x42e8
0x0000000000452272 : ret 0x43ce
0x0000000000404436 : ret 0x4589
0x000000000040a3ac : ret 0x45fb
0x0000000000421b3d : ret 0x4600
0x000000000040a28a : ret 0x4802
0x0000000000406220 : ret 0x4805
0x000000000044f7be : ret 0x4810
0x000000000042997e : ret 0x4815
0x000000000041d4c6 : ret 0x4861
0x0000000000424cf8 : ret 0x48e0
0x000000000040343c : ret 0x48f0
0x0000000000415d81 : ret 0x4b
0x0000000000441a90 : ret 0x4b91
0x0000000000421397 : ret 0x4cc0
0x000000000041e3d8 : ret 0x4cf0
0x000000000042342c : ret 0x4f0b
0x00000000004399c3 : ret 0x4fab
0x0000000000459379 : ret 0x54
0x0000000000409f53 : ret 0x5588
0x000000000040d429 : ret 0x5589
0x000000000041ac8a : ret 0x5966
0x00000000004595a9 : ret 0x5b
0x0000000000422087 : ret 0x5bc6
0x000000000040d1cf : ret 0x61
0x000000000040b24e : ret 0x6348
0x000000000044c3ec : ret 0x6620
0x0000000000411ee6 : ret 0x6a8a
0x0000000000411b9e : ret 0x77a8
0x0000000000412d01 : ret 0x7a8a
0x000000000041997b : ret 0x7b7f
0x000000000042032a : ret 0x8041
0x0000000000420572 : ret 0x8141
0x00000000004296d9 : ret 0x8148
0x000000000045e1e6 : ret 0x81e9
0x000000000041b894 : ret 0x822d
0x0000000000420340 : ret 0x8445
0x000000000043eeab : ret 0x8548
0x0000000000407048 : ret 0x8589
0x0000000000448c28 : ret 0x8840
0x000000000043c5b9 : ret 0x8844
0x0000000000434e84 : ret 0x8909
0x0000000000436e74 : ret 0x8923
0x00000000004370dc : ret 0x8925
0x0000000000412913 : ret 0x8940
0x0000000000441d10 : ret 0x8941
0x0000000000407e27 : ret 0x8948
0x0000000000427f9f : ret 0x894a
0x000000000042d260 : ret 0x895e
0x0000000000412117 : ret 0x8961
0x00000000004519eb : ret 0x8962
0x00000000004517d7 : ret 0x896c
0x0000000000429598 : ret 0x8a44
0x0000000000429495 : ret 0x8a4a
0x000000000045d033 : ret 0x8ae1
0x000000000041a2a1 : ret 0x8b48
0x000000000042b8c6 : ret 0x8cbc
0x0000000000448f8a : ret 0x90e8
0x000000000044aae5 : ret 0x941
0x0000000000440747 : ret 0x96
0x0000000000449347 : ret 0xa
0x000000000043f3fd : ret 0xa2b9
0x000000000041aadc : ret 0xa30b
0x00000000004043db : ret 0xa86a
0x000000000042a5ef : ret 0xac60
0x000000000040b0ec : ret 0xae80
0x0000000000450977 : ret 0xafe9
0x0000000000408815 : ret 0xb0
0x0000000000409a5b : ret 0xb37f
0x000000000044d9b0 : ret 0xb38e
0x0000000000408951 : ret 0xb589
0x000000000041c3e0 : ret 0xb740
0x000000000043e547 : ret 0xb8
0x0000000000403581 : ret 0xb841
0x000000000045dba2 : ret 0xb845
0x0000000000424507 : ret 0xb848
0x000000000043ca9f : ret 0xb909
0x0000000000441342 : ret 0xb923
0x0000000000444c20 : ret 0xb925
0x000000000041a610 : ret 0xb940
0x0000000000429422 : ret 0xb94a
0x000000000045a907 : ret 0xb962
0x000000000045a30c : ret 0xb96c
0x000000000041ca5c : ret 0xbf48
0x0000000000401a55 : ret 0xc148
0x0000000000407c8a : ret 0xc1b9
0x0000000000450c79 : ret 0xc350
0x00000000004307a3 : ret 0xc3d7
0x000000000040d412 : ret 0xc493
0x0000000000431143 : ret 0xc8c6
0x0000000000449fb8 : ret 0xca20
0x000000000040ac2c : ret 0xca21
0x000000000045c9c6 : ret 0xca29
0x000000000043156b : ret 0xcc39
0x000000000044ba68 : ret 0xcc41
0x000000000040d1d5 : ret 0xccb2
0x000000000040619f : ret 0xd284
0x0000000000435273 : ret 0xd4d
0x000000000044ac0d : ret 0xd609
0x0000000000427be5 : ret 0xd618
0x000000000045c7cf : ret 0xd709
0x000000000042f3f2 : ret 0xd803
0x000000000044882d : ret 0xdae9
0x00000000004401d4 : ret 0xdf79
0x000000000040c6bb : ret 0xe280
0x000000000040488c : ret 0xe7e9
0x000000000044973b : ret 0xe925
0x000000000041c2b2 : ret 0xe940
0x000000000043ed56 : ret 0xe95e
0x000000000041d511 : ret 0xe961
0x000000000045ee60 : ret 0xe962
0x0000000000406be5 : ret 0xea2c
0x000000000041333d : ret 0xea51
0x000000000040d1c7 : ret 0xea81
0x000000000040b265 : ret 0xeac1
0x000000000040ef33 : ret 0xebc8
0x000000000040479c : ret 0xedb9
0x000000000041f0cc : ret 0xee8
0x000000000040c63d : ret 0xf281
0x000000000040a199 : ret 0xf40
0x0000000000407ee5 : ret 0xf41
0x000000000041d065 : ret 0xf7f3
0x00000000004465ca : ret 0xfbaf
0x000000000041b7ee : ret 0xfc75
0x000000000043be47 : ret 0xfd40
0x000000000043bc98 : ret 0xfd70
0x000000000044ea88 : ret 0xfdb9
0x000000000041f8ca : ret 0xfe1c
0x0000000000419eda : ret 0xfe77
0x000000000043bcac : ret 0xff10
0x000000000045ce17 : ret 0xff9b
0x000000000041d05f : ret 0xffa5
0x000000000045d02d : ret 0xffbb
0x000000000041b7e8 : ret 0xffc4
0x000000000041aa08 : ret 0xffd5
0x000000000041aae2 : ret 0xffd8
0x000000000041b89a : ret 0xffd9
0x000000000041ac84 : ret 0xffe0
0x0000000000441a8a : ret 0xfff7
0x0000000000419975 : ret 0xfffa
0x0000000000425560 : ret 0xfffd
0x000000000045df3f : ret 0xfffe
0x0000000000459b54 : ret 0xffff
0x0000000000400338 : ret 1
0x000000000040c448 : ret 2
0x000000000045f1a7 : ret 3
0x000000000044f6ab : ret 4
0x0000000000402961 : ret 6
0x0000000000408c0a : ret 8
0x000000000044403f : retf 0x5d ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x000000000042995d : rol byte ptr [rax + 0x48f22948], -0x7f ; ret 1
0x000000000042501c : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040fd5c : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004412d3 : rol byte ptr [rbp + 0x21], cl ; ret 0x8141
0x000000000042995c : rol byte ptr ds:[rax + 0x48f22948], -0x7f ; ret 1
0x0000000000430c3a : rol ebp, cl ; ret
0x0000000000424504 : ror byte ptr [rax + 1], cl ; ret 0xb848
0x0000000000401a5c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401a6b ; pop rbp ; ret
0x00000000004092be : ror byte ptr [rax - 0x75], 1 ; adc cl, byte ptr [rax - 0x7f] ; ret 8
0x000000000040b567 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x000000000040a287 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4802
0x0000000000426164 : ror byte ptr [rax - 0x7f], -0x3c ; adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041081a : ror byte ptr [rcx], -0x39 ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000044b694 : ror byte ptr [rcx], 1 ; ret
0x000000000042978e : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x000000000043db47 : ror dword ptr [rcx - 0x49b7b], -1 ; jmp 0x449e16
0x0000000000421250 : ror dword ptr [rcx - 0x7d], cl ; ret
0x000000000044d844 : ror dword ptr [rcx], 1 ; ret
0x0000000000449fb5 : ror dword ptr [rdi], -0x6c ; ret 0xca20
0x0000000000460ba1 : sahf ; cli ; jmp qword ptr [rbx]
0x000000000040b6ac : sahf ; ret 0xd284
0x0000000000461290 : sar ah, 1 ; sti ; call rdx
0x0000000000425558 : sar ch, -1 ; mov dword ptr [rbp - 0x50], eax ; call 0x4017f8
0x0000000000459b4e : sar dh, -1 ; dec dword ptr [rax - 0x7f] ; ret 0xffff
0x000000000045b67b : sar dh, -1 ; dec dword ptr [rax - 0x7f] ; ret 1
0x000000000045a529 : sar dh, -1 ; dec dword ptr [rax - 1] ; ret 0x8948
0x000000000045c72b : sar dh, -1 ; dec dword ptr [rcx - 0x7f] ; ret
0x000000000045c7db : sar dh, -1 ; dec dword ptr [rcx - 0x7f] ; ret 1
0x0000000000401a5e : sar eax, 1 ; jne 0x401a69 ; pop rbp ; ret
0x000000000041c5d1 : sar ebp, -0x17 ; ret 0x2a
0x0000000000444259 : sar edi, 1 ; inc dword ptr [rcx + 0xf] ; ret 0x8589
0x000000000043c5d2 : sar edi, cl ; inc dword ptr [rbp + 0xf] ; ret
0x0000000000401a5d : sar rax, 1 ; jne 0x401a6a ; pop rbp ; ret
0x0000000000460db8 : sbb al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add al, 0 ; add byte ptr [rax], ah ; ret 0xfffa
0x0000000000421590 : sbb al, 0x41 ; out dx, eax ; mov al, -0x47 ; ret
0x00000000004485a1 : sbb byte ptr [rax], al ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; call rdi
0x00000000004613b8 : sbb byte ptr [rax], cl ; cld ; jmp rsi
0x000000000041c4d1 : sbb cl, ch ; ret
0x000000000044848e : sbb dword ptr [rax], eax ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; call rcx
0x0000000000423d53 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000448fec : sbb eax, 0xc700000e ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rsi
0x0000000000445093 : sbb ebp, eax ; sti ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x00000000004205e0 : sbb ecx, dword ptr [rax - 0x7f] ; ret
0x0000000000460501 : sbb edi, edx ; jmp rsp
0x00000000004306fa : scasb al, byte ptr [rdi] ; mov bl, -0x2e ; ret 0x8589
0x000000000043f044 : scasd eax, dword ptr [rdi] ; mov bl, -0x2e ; ret 0x1b2
0x000000000043074e : scasd eax, dword ptr [rdi] ; mov bl, -0x2e ; ret 0x8589
0x000000000043f060 : scasd eax, dword ptr [rdi] ; mov bl, -0x2e ; ret 0x8b48
0x00000000004465cb : scasd eax, dword ptr [rdi] ; sti ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; call rdi
0x000000000041b4d2 : shr cl, cl ; ret 0x3b
0x000000000044e255 : shr dword ptr [rip - 0x21480000], cl ; ret
0x000000000041930d : stc ; ret 0x77a8
0x0000000000461191 : stc ; sti ; call rdi
0x000000000044f180 : std ; cwde ; jmp 0x451034
0x0000000000425559 : std ; dec dword ptr [rcx - 0x72174fbb] ; ret 0xfffd
0x000000000041fe97 : std ; ret 0x279e
0x00000000004612b2 : sti ; call qword ptr [rbx]
0x0000000000461192 : sti ; call rdi
0x0000000000461292 : sti ; call rdx
0x00000000004606ba : sti ; call rsp
0x0000000000447d79 : sti ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; call rax
0x00000000004465cc : sti ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; call rdi
0x00000000004479d4 : sti ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rax]
0x0000000000442e46 : sti ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x00000000004424c8 : sti ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rdi
0x0000000000461132 : sti ; jmp qword ptr [rbx]
0x000000000044a1e0 : sti ; movsx eax, al ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004606b2 : sti ; push qword ptr [rbx + rcx - 0xffc0000] ; sti ; call rsp
0x000000000043db1a : stosd dword ptr [rdi], eax ; jmp 0x449e10
0x00000000004614c1 : sub ah, bh ; call qword ptr [rdx]
0x000000000040dd3e : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000042a6f6 : sub byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040dc28 : sub byte ptr [rax], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000041aa05 : sub byte ptr [rbp - 0x7f], bh ; ret 0xffd5
0x000000000043068a : sub byte ptr [rsi + 0x40], dh ; ret 0x8589
0x000000000041a9fb : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000041aad5 : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000044003a : sub dword ptr [rsi + 0x40], esi ; ret 0x1db9
0x00000000004306de : sub dword ptr [rsi + 0x40], esi ; ret 0x8589
0x0000000000448ba4 : sub dword ptr [rsi + 0x40], esi ; ret 0x8948
0x000000000041b895 : sub eax, 0x81268e82 ; ret 0xffd9
0x00000000004453dc : sub eax, 0xc700004a ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x000000000044e256 : sub eax, 0xdeb80000 ; ret
0x000000000042450f : sub edx, edi ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000045f631 : sub esp, 8 ; add rsp, 8 ; ret
0x000000000045f630 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000042f879 : test ah, al ; or al, 1 ; add cl, ch ; nop ; ret
0x0000000000404a38 : test ah, ch ; add dword ptr [rax], eax ; add cl, ch ; ret 1
0x000000000041aa00 : test al, -0x7f ; ret 0x2d50
0x000000000041aada : test al, -0x7f ; ret 0xa30b
0x0000000000429233 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000420c6e : test al, 0x48 ; add esp, 0x80 ; pop rbp ; ret
0x000000000041d236 : test al, 0x48 ; mov ebp, 0xe19c53ba ; ret
0x00000000004235a8 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000438da9 : test al, bl ; ret
0x0000000000451214 : test bl, ch ; ret
0x000000000045f5ea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000042f9c9 : test byte ptr [rbx - 0x16ffff1b], dl ; ret 0
0x000000000043b32d : test byte ptr [rcx], ch ; ret
0x000000000041187c : test byte ptr [rcx], ch ; ret 0
0x000000000042f921 : test byte ptr [rdx + rsi], ah ; add dword ptr [rax], eax ; jmp 0x43bc1a
0x0000000000425c8a : test dh, ch ; add dword ptr [rax], eax ; add cl, ch ; ret 1
0x0000000000433c81 : test dl, cl ; ret 0
0x00000000004077af : test dword ptr [rax + 0x2dfffffd], ecx ; ret
0x0000000000406bdf : test dword ptr [rax + 0x2dfffffd], ecx ; ret 0xea2c
0x0000000000411876 : test dword ptr [rax + 0xffffffd], esp ; test byte ptr [rcx], ch ; ret 0
0x000000000044113f : test dword ptr [rbx + rdi*8 - 1], esp ; call qword ptr [rax]
0x000000000043fec7 : test dword ptr [rbx + rdi*8 - 1], esp ; call rax
0x00000000004456c6 : test dword ptr [rbx + rdi*8 - 1], esp ; call rcx
0x00000000004465cf : test dword ptr [rbx + rdi*8 - 1], esp ; call rdi
0x0000000000448138 : test dword ptr [rbx + rdi*8 - 1], esp ; call rdx
0x0000000000449a95 : test dword ptr [rbx + rdi*8 - 1], esp ; call rsi
0x000000000044831b : test dword ptr [rbx + rdi*8 - 1], esp ; call rsp
0x0000000000448825 : test dword ptr [rbx + rdi*8 - 1], esp ; dec ebp ; or ch, dh ; ret 0xdae9
0x0000000000448e6f : test dword ptr [rbx + rdi*8 - 1], esp ; inc dword ptr [rax] ; ret
0x000000000043f7dd : test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rax]
0x0000000000448c90 : test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rbx]
0x00000000004491b6 : test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rcx]
0x000000000043c508 : test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
0x0000000000442352 : test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rsi]
0x000000000043efc4 : test dword ptr [rbx + rdi*8 - 1], esp ; jmp rax
0x0000000000446b9f : test dword ptr [rbx + rdi*8 - 1], esp ; jmp rbx
0x0000000000443e97 : test dword ptr [rbx + rdi*8 - 1], esp ; jmp rcx
0x0000000000440e4b : test dword ptr [rbx + rdi*8 - 1], esp ; jmp rdi
0x0000000000448e27 : test dword ptr [rbx + rdi*8 - 1], esp ; jmp rsi
0x000000000044070a : test dword ptr [rbx + rdi*8 - 1], esp ; lcall ptr [rbx + 0x47] ; ret
0x000000000043f48b : test dword ptr [rbx + rdi*8 - 1], esp ; lcall ptr [rdx] ; ret 0x4fab
0x0000000000448b9f : test dword ptr [rbx + rdi*8 - 1], esp ; ljmp ptr [rcx] ; jbe 0x448bef ; ret 0x8948
0x0000000000455536 : test dword ptr [rbx + rsi*8 - 0x7bf00001], ebx ; ret
0x0000000000452d66 : test dword ptr [rcx + rdi*8 - 1], ecx ; dec dword ptr [rdi] ; test dl, cl ; ret 0
0x00000000004236b6 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000042088a : test dword ptr [rdi + rdi*8 - 1], esp ; call qword ptr [rbx]
0x000000000041c2ab : test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x000000000041d50a : test dword ptr [rsi + rdi*8 + 0x6e94ffff], esp ; ret 0xe961
0x0000000000418fca : test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x000000000041d4bf : test eax, 0xb9dd5cac ; xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x00000000004307a2 : test eax, edx ; xlatb ; ret
0x0000000000433c7b : test esp, eax ; in eax, -1 ; dec dword ptr [rdi] ; test dl, cl ; ret 0
0x000000000041b4cf : wait ; jge 0x41b4b1 ; shr cl, cl ; ret 0x3b
0x000000000041658d : wait ; jo 0x41659b ; ret
0x0000000000419adc : wait ; jo 0x419aea ; ret
0x0000000000449fb4 : wait ; ror dword ptr [rdi], -0x6c ; ret 0xca20
0x00000000004479d3 : wait ; sti ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rax]
0x0000000000405460 : xchg byte ptr [rbx], cl ; ret
0x00000000004307f6 : xchg dl, al ; xlatb ; ret
0x0000000000460541 : xchg dl, bh ; jmp rsp
0x0000000000405df2 : xchg dword ptr [rbx], ecx ; ret
0x000000000045d8dd : xchg dword ptr [rdi - 0xe46c4ed], ebp ; xchg eax, esp ; ret
0x0000000000429978 : xchg dword ptr [rsi + 4], ebp ; push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000444bfa : xchg eax, ebp ; pushfq ; sar edi, 1 ; inc dword ptr [rcx + 0xf] ; ret 0x8589
0x000000000043f6d9 : xchg eax, ebp ; ret
0x000000000040619e : xchg eax, ebp ; ret 0xd284
0x0000000000459b4d : xchg eax, ebp ; sar dh, -1 ; dec dword ptr [rax - 0x7f] ; ret 0xffff
0x000000000045b67a : xchg eax, ebp ; sar dh, -1 ; dec dword ptr [rax - 0x7f] ; ret 1
0x000000000045a528 : xchg eax, ebp ; sar dh, -1 ; dec dword ptr [rax - 1] ; ret 0x8948
0x000000000045c7da : xchg eax, ebp ; sar dh, -1 ; dec dword ptr [rcx - 0x7f] ; ret 1
0x000000000042f9ca : xchg eax, ebx ; in eax, 0 ; add cl, ch ; ret 0
0x000000000044e253 : xchg eax, ebx ; jmp 0x451034
0x0000000000412115 : xchg eax, ebx ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x0000000000418a15 : xchg eax, ebx ; ret
0x000000000045e511 : xchg eax, ebx ; ret 0xd284
0x0000000000448a78 : xchg eax, ecx ; adc eax, dword ptr [rax] ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rax]
0x0000000000418c45 : xchg eax, ecx ; ret
0x0000000000426483 : xchg eax, edi ; ret 0xd284
0x0000000000412495 : xchg eax, edx ; ret
0x0000000000409f52 : xchg eax, edx ; ret 0x5588
0x000000000042033f : xchg eax, edx ; ret 0x8445
0x000000000043c5b8 : xchg eax, edx ; ret 0x8844
0x00000000004080b6 : xchg eax, edx ; ret 0xd284
0x000000000042fa02 : xchg eax, esi ; push rdi ; add dword ptr [rax], eax ; jmp 0x43bc19
0x000000000045515f : xchg eax, esi ; ret
0x000000000042284a : xchg eax, esp ; jmp 0x4232b8
0x0000000000422787 : xchg eax, esp ; jmp 0x4232ba
0x000000000041d4c4 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x0000000000418d95 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x000000000041d50f : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0xe961
0x0000000000457fbe : xchg eax, esp ; ret
0x0000000000420329 : xchg eax, esp ; ret 0x8041
0x000000000041c3de : xchg eax, esp ; ret 0xb740
0x0000000000449fb7 : xchg eax, esp ; ret 0xca20
0x000000000040c88c : xchg eax, esp ; ret 0xd284
0x0000000000446764 : xchg eax, esp ; ret 0xe280
0x0000000000460540 : xchg eax, esp ; xchg dl, bh ; jmp rsp
0x0000000000422849 : xchg eax, r12d ; jmp 0x4232b9
0x000000000045515e : xchg rax, rsi ; ret
0x00000000004307a4 : xlatb ; ret
0x0000000000446bb5 : xor al, byte ptr [rax] ; add bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp rbx
0x000000000041c3d9 : xor al, byte ptr [rbx - 0x6bf0fd12] ; ret 0xb740
0x000000000043f7db : xor bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rax]
0x0000000000448c8e : xor bh, al ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rbx]
0x0000000000410c77 : xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000410c78 : xor byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000444d79 : xor ecx, eax ; sti ; inc edi ; test dword ptr [rbx + rdi*8 - 1], esp ; jmp qword ptr [rdx]
