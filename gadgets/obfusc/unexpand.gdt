0x000000000041667e : adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x0000000000415ff1 : adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x000000000041e6eb : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004019d1 : adc eax, 0x48000000 ; add esp, 0x60 ; pop rbp ; ret
0x000000000041717b : adc eax, 0x558abda1 ; ret
0x000000000041a759 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000427593 : add ah, ah ; add al, byte ptr [rax] ; add byte ptr [rax], cl ; cmp edi, esi ; call qword ptr [rdx]
0x0000000000427473 : add ah, al ; add dword ptr [rax], eax ; add al, ch ; sbb al, -2 ; call qword ptr [rcx]
0x0000000000426f89 : add al, 0 ; add al, ah ; scasb al, byte ptr [rdi] ; std ; jmp qword ptr [rax]
0x0000000000426fb9 : add al, 0 ; add al, dh ; and dh, bh ; jmp rax
0x000000000040811e : add al, 0 ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000404c18 : add al, 0 ; add byte ptr [rbx - 0x7fd263bb], cl ; ret 0x899d
0x000000000042408a : add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000426f8b : add al, ah ; scasb al, byte ptr [rdi] ; std ; jmp qword ptr [rax]
0x0000000000426f7b : add al, ah ; stosb byte ptr [rdi], al ; std ; jmp rax
0x0000000000427183 : add al, ah ; xchg bh, bh ; jmp qword ptr [rax]
0x000000000040884d : add al, byte ptr [r8] ; add cl, ch ; ret 1
0x0000000000427595 : add al, byte ptr [rax] ; add byte ptr [rax], cl ; cmp edi, esi ; call qword ptr [rdx]
0x0000000000404219 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x682db445], cl ; ret 0xfb4f
0x000000000040884e : add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000427477 : add al, ch ; sbb al, -2 ; call qword ptr [rcx]
0x0000000000426fbb : add al, dh ; and dh, bh ; jmp rax
0x0000000000405525 : add bh, al ; mov r12b, -0x7f ; ret 0xe99d
0x0000000000405180 : add bh, al ; mov r12b, 0x4c ; ret
0x000000000041e3c4 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000416fb9 : add bh, al ; test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x000000000042651f : add bl, dh ; ret
0x00000000004261f2 : add byte ptr [r8], al ; add byte ptr [rcx], al ; ret 0xea81
0x0000000000426454 : add byte ptr [r8], al ; add byte ptr [rcx], ch ; ret 0x5589
0x0000000000426f88 : add byte ptr [rax + rax], al ; add al, ah ; scasb al, byte ptr [rdi] ; std ; jmp qword ptr [rax]
0x0000000000427180 : add byte ptr [rax + rax], cl ; add al, ah ; xchg bh, bh ; jmp qword ptr [rax]
0x000000000040793e : add byte ptr [rax - 0x42], cl ; mov dr0, word ptr [rsi] ; ret
0x000000000041b71b : add byte ptr [rax - 0x75], cl ; clc ; mov rsp, rbp ; pop rbp ; ret
0x00000000004059fa : add byte ptr [rax - 0x75], cl ; fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x0000000000408f21 : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000403668 : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x0000000000405523 : add byte ptr [rax], al ; add bh, al ; mov r12b, -0x7f ; ret 0xe99d
0x000000000041e3c2 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000042651d : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040793c : add byte ptr [rax], al ; add byte ptr [rax - 0x42], cl ; mov dr0, word ptr [rsi] ; ret
0x00000000004059f8 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x0000000000409129 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000403666 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000042651b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004075ac : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004037d0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000042651c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004090be : add byte ptr [rax], al ; add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x000000000041a1c2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000405096 : add byte ptr [rax], al ; add byte ptr [rbx + 0x4c2d9c45], cl ; ret
0x0000000000405583 : add byte ptr [rax], al ; add byte ptr [rbx + 0x652dd045], cl ; ret
0x0000000000403e63 : add byte ptr [rax], al ; add byte ptr [rbx + 0x672db445], cl ; ret 0xfb4f
0x000000000041cb83 : add byte ptr [rax], al ; add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x000000000041fc8c : add byte ptr [rax], al ; add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x0000000000403cba : add byte ptr [rax], al ; add byte ptr [rbx - 0x5fd24bbb], cl ; ret
0x000000000041f4e9 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x0000000000404c63 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7ed263bb], cl ; ret 0x899d
0x0000000000407510 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x00000000004261f3 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xea81
0x0000000000426455 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x5589
0x000000000041e330 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8b48
0x00000000004255c1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000407fb9 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004246d8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000040363f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000407d27 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000041e2ba : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x00000000004037d2 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041a75b : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000419de0 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041e6ed : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000420338 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004019d3 : add byte ptr [rax], al ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040a4c9 : add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004012bb : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000042703a : add byte ptr [rax], al ; and byte ptr [rcx - 2], dl ; jmp rax
0x0000000000427476 : add byte ptr [rax], al ; call 0x1242729e
0x0000000000427886 : add byte ptr [rax], al ; call 0xffffffffd34277d5
0x0000000000427a92 : add byte ptr [rax], al ; in al, 7 ; add byte ptr [rax], al ; or byte ptr [rdi - 1], ch ; call rdx
0x00000000004013b9 : add byte ptr [rax], al ; jmp 0x4012d9
0x0000000000426f7a : add byte ptr [rax], al ; loopne 0x426f2d ; std ; jmp rax
0x0000000000426f8a : add byte ptr [rax], al ; loopne 0x426f41 ; std ; jmp qword ptr [rax]
0x0000000000426238 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040912a : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000427a96 : add byte ptr [rax], al ; or byte ptr [rdi - 1], ch ; call rdx
0x0000000000427436 : add byte ptr [rax], al ; or byte ptr [rsi + rdi*8], bl ; call qword ptr [rax]
0x00000000004049f4 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040811f : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004039a6 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000042651e : add byte ptr [rax], al ; ret
0x0000000000427432 : add byte ptr [rax], al ; test byte ptr [rcx], al ; add byte ptr [rax], al ; or byte ptr [rsi + rdi*8], bl ; call qword ptr [rax]
0x00000000004279ae : add byte ptr [rax], al ; xor byte ptr [rdi - 1], cl ; jmp rsi
0x0000000000427597 : add byte ptr [rax], cl ; cmp edi, esi ; call qword ptr [rdx]
0x0000000000427437 : add byte ptr [rax], cl ; sbb al, -2 ; call qword ptr [rax]
0x0000000000426fcb : add byte ptr [rax], dl ; and bh, dh ; jmp qword ptr [rax]
0x0000000000427173 : add byte ptr [rax], dl ; test edi, edi ; jmp rax
0x00000000004090c0 : add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x0000000000408120 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000404e0e : add byte ptr [rbx + 0x4b2d9c45], cl ; ret
0x0000000000405098 : add byte ptr [rbx + 0x4c2d9c45], cl ; ret
0x0000000000404d78 : add byte ptr [rbx + 0x522d9c45], cl ; or al, bl ; ret
0x0000000000404dc3 : add byte ptr [rbx + 0x532d9c45], cl ; or al, bl ; ret
0x00000000004039a7 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000405585 : add byte ptr [rbx + 0x652dd045], cl ; ret
0x0000000000403e65 : add byte ptr [rbx + 0x672db445], cl ; ret 0xfb4f
0x000000000040421b : add byte ptr [rbx + 0x682db445], cl ; ret 0xfb4f
0x000000000041f7ca : add byte ptr [rbx - 0x10d22bbb], cl ; jl 0x41f7e9 ; ret
0x000000000041cb85 : add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x000000000041cb3a : add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x0000000000407e85 : add byte ptr [rbx - 0x4334b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000408080 : add byte ptr [rbx - 0x43f4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000041fc8e : add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x00000000004042fc : add byte ptr [rbx - 0x5ed24bbb], cl ; ret
0x0000000000403cbc : add byte ptr [rbx - 0x5fd24bbb], cl ; ret
0x0000000000426239 : add byte ptr [rbx - 0x76b71fbb], cl ; in al, dx ; pop rbp ; ret
0x000000000041f4eb : add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x0000000000404c65 : add byte ptr [rbx - 0x7ed263bb], cl ; ret 0x899d
0x0000000000404c1a : add byte ptr [rbx - 0x7fd263bb], cl ; ret 0x899d
0x0000000000407512 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x000000000040381a : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041e42e : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401728 : add byte ptr [rcx], al ; ret
0x00000000004261f5 : add byte ptr [rcx], al ; ret 0xea81
0x0000000000426457 : add byte ptr [rcx], ch ; ret 0x5589
0x000000000041e332 : add byte ptr [rcx], ch ; ret 0x8b48
0x00000000004255c3 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000407fbb : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004246da : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000403641 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000407d29 : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000041e2bc : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x00000000004037d4 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004049f2 : add byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004170ec : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x0000000000402a36 : add cl, ch ; ret
0x0000000000402e37 : add cl, ch ; ret 1
0x0000000000427475 : add dword ptr [rax], eax ; add al, ch ; sbb al, -2 ; call qword ptr [rcx]
0x0000000000427435 : add dword ptr [rax], eax ; add byte ptr [rax], cl ; sbb al, -2 ; call qword ptr [rax]
0x00000000004042fa : add dword ptr [rax], eax ; add byte ptr [rbx - 0x5ed24bbb], cl ; ret
0x0000000000425742 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x0000000000424594 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000042477e : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401724 : add eax, 0x227bae ; add ebx, esi ; ret
0x0000000000426f79 : add eax, dword ptr [rax] ; add al, ah ; stosb byte ptr [rdi], al ; std ; jmp rax
0x000000000040517e : add eax, dword ptr [rax] ; add bh, al ; mov r12b, 0x4c ; ret
0x0000000000404e0c : add eax, dword ptr [rax] ; add byte ptr [rbx + 0x4b2d9c45], cl ; ret
0x00000000004039a5 : add eax, dword ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000405670 : add eax, dword ptr [rax] ; add cl, ch ; ret
0x00000000004042aa : add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x00000000004016eb : add eax, edx ; sar rax, 1 ; jne 0x4016fc ; pop rbp ; ret
0x0000000000401729 : add ebx, esi ; ret
0x0000000000401a2b : add esp, 0x10 ; pop rbp ; ret
0x000000000041e42c : add esp, 0x100 ; pop rbp ; ret
0x00000000004054ad : add esp, 0x170 ; pop rbp ; ret
0x000000000041e59c : add esp, 0x1a0 ; pop rbp ; ret
0x000000000040a27d : add esp, 0x20 ; pop rbp ; ret
0x00000000004049f0 : add esp, 0x200 ; pop rbp ; ret
0x00000000004039a2 : add esp, 0x368 ; pop rbx ; pop rbp ; ret
0x000000000041e6f0 : add esp, 0x40 ; pop rbp ; ret
0x0000000000424289 : add esp, 0x440 ; pop rbp ; ret
0x0000000000409f02 : add esp, 0x50 ; pop rbp ; ret
0x00000000004019d6 : add esp, 0x60 ; pop rbp ; ret
0x000000000040a4cc : add esp, 0x70 ; pop rbp ; ret
0x000000000040a22f : add esp, 0x80 ; pop rbp ; ret
0x000000000041ed6d : add esp, 0x90 ; pop rbp ; ret
0x000000000041c8b6 : add esp, 0xa0 ; pop rbp ; ret
0x000000000041a6bb : add esp, 0xb0 ; pop rbp ; ret
0x0000000000405a26 : add esp, 0xc0 ; pop rbp ; ret
0x000000000040aa6a : add esp, 0xd0 ; pop rbp ; ret
0x000000000041fede : add esp, 0xe0 ; pop rbp ; ret
0x000000000042168f : add esp, 0xf0 ; pop rbp ; ret
0x000000000040b073 : add esp, 8 ; pop rbp ; ret
0x00000000004012be : add esp, 8 ; ret
0x000000000040566f : add r8d, dword ptr [r8] ; add cl, ch ; ret
0x00000000004016ea : add rax, rdx ; sar rax, 1 ; jne 0x4016fd ; pop rbp ; ret
0x0000000000401a2a : add rsp, 0x10 ; pop rbp ; ret
0x000000000041e42b : add rsp, 0x100 ; pop rbp ; ret
0x00000000004054ac : add rsp, 0x170 ; pop rbp ; ret
0x000000000041e59b : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000040a27c : add rsp, 0x20 ; pop rbp ; ret
0x00000000004049ef : add rsp, 0x200 ; pop rbp ; ret
0x00000000004039a1 : add rsp, 0x368 ; pop rbx ; pop rbp ; ret
0x000000000041e6ef : add rsp, 0x40 ; pop rbp ; ret
0x0000000000424288 : add rsp, 0x440 ; pop rbp ; ret
0x0000000000409f01 : add rsp, 0x50 ; pop rbp ; ret
0x00000000004019d5 : add rsp, 0x60 ; pop rbp ; ret
0x000000000040a4cb : add rsp, 0x70 ; pop rbp ; ret
0x000000000040a22e : add rsp, 0x80 ; pop rbp ; ret
0x000000000041ed6c : add rsp, 0x90 ; pop rbp ; ret
0x000000000041c8b5 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000041a6ba : add rsp, 0xb0 ; pop rbp ; ret
0x0000000000405a25 : add rsp, 0xc0 ; pop rbp ; ret
0x000000000040aa69 : add rsp, 0xd0 ; pop rbp ; ret
0x000000000041fedd : add rsp, 0xe0 ; pop rbp ; ret
0x000000000042168e : add rsp, 0xf0 ; pop rbp ; ret
0x000000000040b072 : add rsp, 8 ; pop rbp ; ret
0x00000000004012bd : add rsp, 8 ; ret
0x00000000004261fd : and al, 0xffffffffffffff81 ; ret 0x61
0x0000000000424593 : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000042477d : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401727 : and al, byte ptr [rax] ; add ebx, esi ; ret
0x0000000000426fcd : and bh, dh ; jmp qword ptr [rax]
0x000000000042703c : and byte ptr [rcx - 2], dl ; jmp rax
0x000000000041f21b : and byte ptr [rsi + 0x58], ah ; jb 0x41f252 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000426fbd : and dh, bh ; jmp rax
0x0000000000416321 : and eax, 0x75b4b9d3 ; ret
0x0000000000407cdb : and eax, 0xe9ed99cb ; ret
0x0000000000427478 : call 0x1242729c
0x00000000004049ff : call 0x409048
0x000000000041f615 : call 0x41f6d9
0x000000000042022d : call 0xffffffffaca2c461
0x000000000042022c : call 0xffffffffaca2c462
0x0000000000427888 : call 0xffffffffd34277d3
0x0000000000419dd9 : call 0xffffffffe9042729
0x0000000000419dd8 : call 0xffffffffe904272a
0x00000000004264f9 : call qword ptr [r12 + rbx*8]
0x0000000000427087 : call qword ptr [rax]
0x000000000041b59e : call qword ptr [rbx]
0x000000000042432c : call qword ptr [rcx]
0x0000000000419264 : call qword ptr [rdi]
0x000000000041524b : call qword ptr [rdx]
0x00000000004264fa : call qword ptr [rsp + rbx*8]
0x000000000040174d : call rax
0x00000000004174cb : call rcx
0x0000000000418ea4 : call rdi
0x00000000004186d5 : call rdx
0x000000000040906b : call rsp
0x0000000000424287 : clc ; add rsp, 0x440 ; pop rbp ; ret
0x000000000041e977 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x0000000000420c19 : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x00000000004016ef : clc ; jne 0x4016f8 ; pop rbp ; ret
0x0000000000409046 : clc ; mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x000000000041b71f : clc ; mov rsp, rbp ; pop rbp ; ret
0x000000000040c8ad : clc ; ret 0x77a8
0x0000000000401a57 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042086e : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000042168d : cld ; add rsp, 0xf0 ; pop rbp ; ret
0x00000000004090ef : cld ; jmp 0x40915c
0x00000000004090ee : cld ; jmp 0x40915d
0x000000000041f220 : cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004261fc : cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x000000000041e13b : cmc ; ret 0x4f0b
0x000000000041e2d1 : cmp cl, byte ptr [rsi - 0x946182f] ; ret 0x4f0b
0x00000000004016ad : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4016c0 ; pop rbp ; ret
0x0000000000427599 : cmp edi, esi ; call qword ptr [rdx]
0x0000000000417177 : cmp esp, dword ptr [rbp - 0x47] ; push -0x75425eeb ; push rbp ; ret
0x0000000000407617 : dec dword ptr [rax + 0x29] ; ret 0x148
0x000000000041667b : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x0000000000415fee : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x00000000004167f3 : dec dword ptr [rax - 0x75] ; or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x0000000000401d9e : dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x0000000000423de6 : dec dword ptr [rax - 0x77] ; ret 0x8148
0x0000000000407e8b : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000041e136 : dec dword ptr [rcx - 0xa167e3f] ; ret 0x4f0b
0x00000000004042a6 : dec dword ptr [rdi] ; test byte ptr [rcx], ah ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x000000000040c58a : dec dword ptr [rdi] ; test byte ptr [rcx], ch ; ret 0
0x0000000000402e31 : dec dword ptr [rdi] ; test byte ptr [rdi - 0x16fffff4], bl ; ret 1
0x0000000000423c13 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x0000000000405168 : enter -0x76b8, 0x45 ; fadd st(7) ; mov r12b, 0x4c ; ret
0x0000000000423869 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040a889 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040516c : fadd st(7) ; mov r12b, 0x4c ; ret
0x0000000000405865 : fist dword ptr [rax + 0x65b99186] ; ret
0x00000000004247b8 : fld qword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x00000000004059fd : fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x000000000041f977 : fmul dword ptr [r9 - 0x57167e3f] ; ret
0x00000000004059fe : fmul dword ptr [rax - 0x77] ; ret 0x2948
0x000000000041f978 : fmul dword ptr [rcx - 0x57167e3f] ; ret
0x00000000004264fc : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000401a29 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041fedc : hlt ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000040b071 : hlt ; add rsp, 8 ; pop rbp ; ret
0x00000000004016c0 : hlt ; pop rbp ; mov edi, 0x629268 ; jmp rax
0x000000000041f34b : idiv edi ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000040a2f8 : in al, 0x2d ; ret 0xc226
0x0000000000420fd1 : in al, 0x48 ; add esp, 0xb0 ; pop rbp ; ret
0x0000000000427a94 : in al, 7 ; add byte ptr [rax], al ; or byte ptr [rdi - 1], ch ; call rdx
0x00000000004202ec : in al, dx ; jmp 0x420369
0x00000000004202eb : in al, dx ; jmp 0x42036a
0x000000000041f74a : in al, dx ; out dx, eax ; jl 0x41f761 ; ret
0x000000000041f749 : in al, dx ; out dx, eax ; jl 0x41f762 ; ret
0x0000000000401da1 : in al, dx ; pop rbp ; ret
0x0000000000426f87 : inc dword ptr [rax] ; add al, 0 ; add al, ah ; scasb al, byte ptr [rdi] ; std ; jmp qword ptr [rax]
0x000000000042717f : inc dword ptr [rax] ; or al, 0 ; add al, ah ; xchg bh, bh ; jmp qword ptr [rax]
0x0000000000407e32 : inc dword ptr [rbp + 0xf] ; ret
0x0000000000403071 : inc dword ptr [rcx + 0xf] ; ret
0x0000000000426fb7 : inc eax ; add al, 0 ; add al, dh ; and dh, bh ; jmp rax
0x0000000000426f77 : inc eax ; add eax, dword ptr [rax] ; add al, ah ; stosb byte ptr [rdi], al ; std ; jmp rax
0x000000000042716f : inc eax ; or eax, dword ptr [rax] ; add byte ptr [rax], dl ; test edi, edi ; jmp rax
0x0000000000408252 : inc edi ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp qword ptr [rdx]
0x000000000041c287 : int 0x5b
0x00000000004016b3 : ja 0x4016ba ; pop rbp ; ret
0x0000000000427145 : ja 0x427148 ; jmp qword ptr [rax]
0x000000000041f21e : jb 0x41f24f ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000427135 : jbe 0x427138 ; jmp rax
0x00000000004016bf : je 0x4016bd ; pop rbp ; mov edi, 0x629268 ; jmp rax
0x0000000000415716 : jge 0x41569b ; ret 0xffd5
0x00000000004161e0 : jge 0x4161c0 ; shr cl, cl ; ret 0x3b
0x000000000041f74c : jl 0x41f75f ; ret
0x000000000041f7d0 : jl 0x41f7e3 ; ret
0x00000000004013bb : jmp 0x4012d7
0x00000000004044c0 : jmp 0x404b35
0x0000000000405443 : jmp 0x405535
0x000000000040517c : jmp 0x405536
0x0000000000407b0b : jmp 0x4082ad
0x00000000004090f0 : jmp 0x40915b
0x0000000000415166 : jmp 0x41516c
0x0000000000416930 : jmp 0x419db0
0x0000000000414834 : jmp 0x419db1
0x0000000000415c01 : jmp 0x419db2
0x000000000041d55b : jmp 0x41dfc7
0x000000000041d498 : jmp 0x41dfc9
0x000000000041f5c3 : jmp 0x41f628
0x00000000004202ed : jmp 0x420368
0x0000000000424126 : jmp 0x424408
0x000000000041e13a : jmp 0x4f4da436
0x000000000040a2b4 : jmp 0xffffffffb602c97d
0x0000000000419705 : jmp qword ptr [rax]
0x000000000042772b : jmp qword ptr [rbx]
0x0000000000407f8a : jmp qword ptr [rcx]
0x00000000004173b7 : jmp qword ptr [rdi]
0x0000000000408258 : jmp qword ptr [rdx]
0x0000000000408276 : jmp qword ptr [rsi]
0x00000000004016c7 : jmp rax
0x0000000000415d08 : jmp rbx
0x000000000041673a : jmp rcx
0x0000000000415d62 : jmp rdi
0x0000000000401707 : jmp rdx
0x0000000000405ac0 : jmp rsi
0x0000000000416018 : jmp rsp
0x00000000004016f0 : jne 0x4016f7 ; pop rbp ; ret
0x0000000000401726 : jnp 0x40174f ; add byte ptr [rcx], al ; ret
0x00000000004054af : jo 0x4054b7 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040a4ce : jo 0x40a52f ; ret
0x000000000040f62e : jo 0x40f63a ; ret
0x000000000041129e : jo 0x4112aa ; ret
0x00000000004147ed : jo 0x4147f9 ; ret
0x000000000041bad4 : jo 0x41bb35 ; ret
0x0000000000427235 : jrcxz 0x427238 ; jmp rax
0x0000000000402e34 : lahf ; or al, 0 ; add cl, ch ; ret 1
0x00000000004161de : lcall ptr [rbx - 0x162d2583] ; ret 0x3b
0x00000000004172de : lcall ptr [rsi] ; pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x00000000004098f6 : lea eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000407f84 : lea eax, dword ptr [rcx - 0xa] ; jmp qword ptr [rcx]
0x0000000000415164 : lea ecx, dword ptr [rax - 0x17000015] ; ret
0x000000000040bf25 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000041bdc9 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040bf24 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000414b3e : ljmp ptr [rdi] ; ret 0x23da
0x000000000040517d : lodsb al, byte ptr [rsi] ; add eax, dword ptr [rax] ; add bh, al ; mov r12b, 0x4c ; ret
0x0000000000417b45 : loope 0x417b13 ; jmp 0x419db3
0x0000000000408f1e : loopne 0x408f70 ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000408f1d : loopne 0x408f71 ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040a27b : loopne 0x40a2cb ; add esp, 0x20 ; pop rbp ; ret
0x000000000040a27a : loopne 0x40a2cc ; add esp, 0x20 ; pop rbp ; ret
0x000000000040bf23 : loopne 0x40bf76 ; lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000041b4cd : loopne 0x41b533 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041c8b4 : loopne 0x41c907 ; add esp, 0xa0 ; pop rbp ; ret
0x000000000041ec83 : loopne 0x41ec8c ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041f60e : loopne 0x41f65e ; add esp, 0x60 ; pop rbp ; ret
0x000000000041f60d : loopne 0x41f65f ; add esp, 0x60 ; pop rbp ; ret
0x000000000041fee0 : loopne 0x41fee7 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000420872 : loopne 0x420879 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042623c : loopne 0x42628b ; mov esp, ebp ; pop rbp ; ret
0x000000000042623b : loopne 0x42628c ; mov esp, ebp ; pop rbp ; ret
0x000000000042648c : loopne 0x4264db ; mov esp, ebp ; pop rbp ; ret
0x000000000042648b : loopne 0x4264dc ; mov esp, ebp ; pop rbp ; ret
0x0000000000426f7c : loopne 0x426f2b ; std ; jmp rax
0x0000000000426f8c : loopne 0x426f3f ; std ; jmp qword ptr [rax]
0x000000000041570d : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x00000000004157e7 : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000405528 : mov ah, -0x7f ; ret 0xe99d
0x00000000004043e0 : mov ah, 0x2d ; ret
0x0000000000403bf0 : mov ah, 0x2d ; ret 0x38c4
0x0000000000403e68 : mov ah, 0x2d ; ret 0xfb4f
0x000000000040516f : mov ah, 0x4c ; ret
0x0000000000413795 : mov ah, 0x75 ; ret
0x000000000041c2a3 : mov al, -0x47 ; ret
0x00000000004238ef : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000040363d : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041a6bd : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000424aad : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042477a : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004249dd : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040d135 : mov bl, 0x75 ; ret
0x0000000000409047 : mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x00000000004049be : mov byte ptr [rdi - 0x5e46a29c], ah ; ret
0x0000000000402a33 : mov byte ptr [rdi], 0 ; add cl, ch ; ret
0x0000000000401723 : mov byte ptr [rip + 0x227bae], 1 ; ret
0x0000000000414f8f : mov ch, byte ptr [rdx - 0x47] ; pop rbp ; pop rcx ; ret 0x1b2
0x0000000000407b09 : mov cl, 0x31 ; jmp 0x4082af
0x0000000000425744 : mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x0000000000424596 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000424780 : mov dh, -0x40 ; pop rbp ; ret
0x00000000004261fa : mov dl, -0x34 ; cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x000000000040792d : mov dr0, word ptr [rsi] ; ret
0x0000000000425471 : mov dr1, word ptr [rcx + rcx*4 - 0x7bf05bbb] ; ret 2
0x000000000040b6a9 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040b27f : mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x00000000004202ea : mov dword ptr [rbp - 0x14], eax ; jmp 0x42036b
0x000000000040a279 : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004044bd : mov dword ptr [rbp - 0x44], eax ; jmp 0x404b38
0x000000000041d558 : mov dword ptr [rbp - 0x6c], eax ; jmp 0x41dfca
0x0000000000401a27 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401a55 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040b986 : mov dword ptr [rcx + 0x30], eax ; mov rsp, rbp ; pop rbp ; ret
0x000000000040b52d : mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000408f20 : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000041f48b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041f65e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000409efe : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000420165 : mov eax, dword ptr [rbp - 0x18] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040b6ac : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000041f60c : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000042623a : mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040b52f : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000040b06f : mov eax, dword ptr [rbp - 0xc] ; add rsp, 8 ; pop rbp ; ret
0x000000000041b71d : mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040b52e : mov eax, dword ptr ds:[rbp - 0x38] ; pop rbp ; ret
0x0000000000417f48 : mov ebp, 0xe19c53ba ; ret
0x000000000040174b : mov ebp, esp ; call rax
0x00000000004016b1 : mov ebp, esp ; ja 0x4016bc ; pop rbp ; ret
0x000000000040b27c : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x0000000000401745 : mov edi, 0x628e20 ; mov rbp, rsp ; call rax
0x00000000004016c2 : mov edi, 0x629268 ; jmp rax
0x0000000000401702 : mov edi, 0x629268 ; jmp rdx
0x00000000004147e7 : mov edi, 0xb8000055 ; wait ; jo 0x4147ff ; ret
0x00000000004264f7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x00000000004264f6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000403592 : mov edx, 0x14c3e75 ; ret 0x148
0x000000000042409e : mov edx, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000414fab : mov edx, 0x595db993 ; ret 0x8b48
0x00000000004080b1 : mov esi, 0x31b982a5 ; ret 0x6477
0x0000000000415e22 : mov esi, 0x39443e04 ; ret 0xf41
0x0000000000424087 : mov esi, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x00000000004066dd : mov esi, dr0 ; ret 0x89e4
0x0000000000401700 : mov esi, eax ; mov edi, 0x629268 ; jmp rdx
0x0000000000401da0 : mov esp, ebp ; pop rbp ; ret
0x0000000000401747 : mov fs, word ptr [rdx] ; mov rbp, rsp ; call rax
0x000000000040b985 : mov qword ptr [rcx + 0x30], rax ; mov rsp, rbp ; pop rbp ; ret
0x0000000000405527 : mov r12b, -0x7f ; ret 0xe99d
0x00000000004043df : mov r12b, 0x2d ; ret
0x0000000000403bef : mov r12b, 0x2d ; ret 0x38c4
0x0000000000403e67 : mov r12b, 0x2d ; ret 0xfb4f
0x000000000040516e : mov r12b, 0x4c ; ret
0x0000000000408f1f : mov rax, qword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000041f48a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041f65d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000409efd : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041f60b : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041b71c : mov rax, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040174a : mov rbp, rsp ; call rax
0x00000000004016b0 : mov rbp, rsp ; ja 0x4016bd ; pop rbp ; ret
0x00000000004016ff : mov rsi, rax ; mov edi, 0x629268 ; jmp rdx
0x0000000000401d9f : mov rsp, rbp ; pop rbp ; ret
0x000000000041f221 : mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000407c17 : movabs al, byte ptr [0x2a1eff8fc2d4bb49] ; ret
0x0000000000410a88 : movabs byte ptr [0x840ffffff3c48589], al ; ret 0x4b
0x0000000000413cd5 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x6a8a
0x0000000000425743 : movzx eax, al ; add rsp, 8 ; pop rbp ; ret
0x0000000000424595 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000042477f : movzx eax, al ; pop rbp ; ret
0x000000000040904a : movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000423e98 : neg byte ptr [rsi + 0x2948e012] ; ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x000000000040cf75 : nop ; ret
0x000000000041b382 : nop ; ret 0x148
0x000000000041b396 : nop ; ret 0x2948
0x0000000000426518 : nop dword ptr [rax + rax] ; ret
0x0000000000427181 : or al, 0 ; add al, ah ; xchg bh, bh ; jmp qword ptr [rax]
0x0000000000402e35 : or al, 0 ; add cl, ch ; ret 1
0x000000000041570a : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x00000000004157e4 : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000404d7e : or al, bl ; ret
0x000000000040b280 : or byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000041cb38 : or byte ptr [rax], al ; add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x0000000000427a98 : or byte ptr [rdi - 1], ch ; call rdx
0x0000000000427438 : or byte ptr [rsi + rdi*8], bl ; call qword ptr [rax]
0x00000000004167f6 : or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x000000000040b984 : or dword ptr [rax - 0x77], ecx ; xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000427171 : or eax, dword ptr [rax] ; add byte ptr [rax], dl ; test edi, edi ; jmp rax
0x000000000040b52b : or edi, eax ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x00000000004078fe : or edi, eax ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp rsi
0x00000000004170eb : out dx, al ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x000000000042477c : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000424aaf : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041f74b : out dx, eax ; jl 0x41f760 ; ret
0x000000000041f7cf : out dx, eax ; jl 0x41f7e4 ; ret
0x000000000041c2a2 : out dx, eax ; mov al, -0x47 ; ret
0x0000000000424089 : outsb dx, byte ptr [rsi] ; add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x00000000004181d5 : outsb dx, byte ptr [rsi] ; ret 0x4861
0x000000000040ce26 : outsb dx, byte ptr [rsi] ; ret 0x8961
0x0000000000418220 : outsb dx, byte ptr [rsi] ; ret 0xe961
0x000000000041e3c1 : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000042408c : outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000041f21c : pop ax ; jb 0x41f251 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000419089 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042650c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041b4cf : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041908b : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042650e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000408122 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000426510 : pop r14 ; pop r15 ; ret
0x000000000040bf29 : pop r14 ; pop rbp ; ret
0x0000000000408124 : pop r15 ; pop rbp ; ret
0x0000000000426512 : pop r15 ; ret
0x0000000000404218 : pop rax ; add al, byte ptr [rax] ; add byte ptr [rbx + 0x682db445], cl ; ret 0xfb4f
0x000000000041f21d : pop rax ; jb 0x41f250 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000401722 : pop rbp ; mov byte ptr [rip + 0x227bae], 1 ; ret
0x00000000004016c1 : pop rbp ; mov edi, 0x629268 ; jmp rax
0x00000000004016fe : pop rbp ; mov rsi, rax ; mov edi, 0x629268 ; jmp rdx
0x000000000042650b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041908c : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042650f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000414f92 : pop rbp ; pop rcx ; ret 0x1b2
0x0000000000411265 : pop rbp ; pop rcx ; ret 0x8589
0x0000000000414fae : pop rbp ; pop rcx ; ret 0x8b48
0x00000000004016b5 : pop rbp ; ret
0x000000000041b4ce : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000408121 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040bf28 : pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004039a8 : pop rbx ; pop rbp ; ret
0x000000000041cb40 : pop rbx ; ret
0x0000000000414f93 : pop rcx ; ret 0x1b2
0x000000000040f666 : pop rcx ; ret 0x8589
0x0000000000414faf : pop rcx ; ret 0x8b48
0x00000000004172e0 : pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x0000000000408125 : pop rdi ; pop rbp ; ret
0x0000000000426513 : pop rdi ; ret
0x0000000000408123 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000426511 : pop rsi ; pop r15 ; ret
0x000000000040bf2a : pop rsi ; pop rbp ; ret
0x000000000041908a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042650d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041b4d0 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040f665 : pop rsp ; pop rcx ; ret 0x8589
0x00000000004255c5 : popfq ; ret 0xd284
0x0000000000414f90 : push -0x47 ; pop rbp ; pop rcx ; ret 0x1b2
0x000000000041717a : push -0x75425eeb ; push rbp ; ret
0x0000000000413cd8 : push -0x77 ; test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x00000000004039a4 : push 0x5b000003 ; pop rbp ; ret
0x0000000000409f04 : push rax ; pop rbp ; ret
0x0000000000401744 : push rbp ; mov edi, 0x628e20 ; mov rbp, rsp ; call rax
0x000000000041717f : push rbp ; ret
0x0000000000417116 : push rbp ; ret 0xd284
0x000000000041570f : push rbp ; test al, -0x7f ; ret 0x2d50
0x00000000004157e9 : push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000404dc8 : push rbx ; or al, bl ; ret
0x000000000042408b : push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000404d7d : push rdx ; or al, bl ; ret
0x0000000000407fbd : pushfq ; ret 0xd284
0x00000000004012c1 : ret
0x000000000040c58e : ret 0
0x0000000000403597 : ret 0x148
0x0000000000402024 : ret 0x16
0x00000000004182e4 : ret 0x1a
0x000000000040d55d : ret 0x1add
0x0000000000414f95 : ret 0x1b2
0x00000000004015c2 : ret 0x227b
0x00000000004013c2 : ret 0x227c
0x000000000040deaa : ret 0x23da
0x000000000041aba8 : ret 0x279e
0x0000000000405a01 : ret 0x2948
0x00000000004172e4 : ret 0x2a
0x0000000000415712 : ret 0x2d50
0x0000000000423bee : ret 0x3040
0x00000000004242e8 : ret 0x32e8
0x0000000000403bf2 : ret 0x38c4
0x00000000004161e4 : ret 0x3b
0x0000000000413245 : ret 0x3e
0x0000000000401ce6 : ret 0x4589
0x0000000000416681 : ret 0x4802
0x000000000042408e : ret 0x4815
0x00000000004181d6 : ret 0x4861
0x0000000000401c1b : ret 0x48f0
0x0000000000410a91 : ret 0x4b
0x000000000041c0a7 : ret 0x4cc0
0x00000000004190e8 : ret 0x4cf0
0x000000000041e13c : ret 0x4f0b
0x000000000040b4db : ret 0x5589
0x000000000041599a : ret 0x5966
0x000000000041cd97 : ret 0x5bc6
0x00000000004261ff : ret 0x61
0x0000000000405fa6 : ret 0x6477
0x0000000000403aa1 : ret 0x66df
0x000000000040cbf6 : ret 0x6a8a
0x000000000040c8ae : ret 0x77a8
0x000000000040da11 : ret 0x7a8a
0x000000000041468b : ret 0x7b7f
0x000000000041b03a : ret 0x8041
0x000000000041b282 : ret 0x8141
0x0000000000423de9 : ret 0x8148
0x00000000004165a4 : ret 0x822d
0x0000000000404734 : ret 0x8445
0x0000000000404d4e : ret 0x8589
0x00000000004053fc : ret 0x858a
0x0000000000401e5a : ret 0x86
0x000000000040d623 : ret 0x8940
0x0000000000404948 : ret 0x8948
0x00000000004226af : ret 0x894a
0x000000000040ce27 : ret 0x8961
0x0000000000404c21 : ret 0x899d
0x000000000040a2b7 : ret 0x89b5
0x00000000004066df : ret 0x89e4
0x0000000000423ca8 : ret 0x8a44
0x0000000000423ba5 : ret 0x8a4a
0x0000000000414fb1 : ret 0x8b48
0x00000000004157ec : ret 0xa30b
0x000000000042022f : ret 0xac60
0x000000000040366b : ret 0xb0
0x00000000004170f0 : ret 0xb740
0x000000000041f217 : ret 0xb848
0x0000000000415320 : ret 0xb940
0x0000000000423b32 : ret 0xb94a
0x000000000040547d : ret 0xb99d
0x0000000000407fae : ret 0xb9e4
0x000000000041776c : ret 0xbf48
0x00000000004016e5 : ret 0xc148
0x000000000040a2fa : ret 0xc226
0x0000000000426442 : ret 0xc493
0x0000000000424739 : ret 0xca21
0x0000000000426205 : ret 0xccb2
0x0000000000403644 : ret 0xd284
0x00000000004222f5 : ret 0xd618
0x00000000004256eb : ret 0xe280
0x000000000040682d : ret 0xe6f4
0x0000000000416fc2 : ret 0xe940
0x0000000000418221 : ret 0xe961
0x000000000040552b : ret 0xe99d
0x000000000040e04d : ret 0xea51
0x00000000004261f7 : ret 0xea81
0x0000000000419ddc : ret 0xee8
0x00000000004063cd : ret 0xef6
0x0000000000405396 : ret 0xefb9
0x000000000040b515 : ret 0xf281
0x0000000000415e27 : ret 0xf41
0x0000000000417d75 : ret 0xf7f3
0x0000000000403e6b : ret 0xfb4f
0x00000000004164fe : ret 0xfc75
0x000000000041ecea : ret 0xfe28
0x0000000000407c1b : ret 0xff8f
0x0000000000417d6f : ret 0xffa5
0x00000000004164f8 : ret 0xffc4
0x0000000000415718 : ret 0xffd5
0x00000000004157f2 : ret 0xffd8
0x00000000004165aa : ret 0xffd9
0x0000000000415994 : ret 0xffe0
0x0000000000414685 : ret 0xfffa
0x000000000040180f : ret 1
0x0000000000416390 : ret 2
0x000000000040417d : ret 5
0x0000000000402632 : ret 6
0x00000000004194e4 : ret 8
0x0000000000405aba : rol bh, 1 ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp rsi
0x000000000042406d : rol byte ptr [rax + 0x48f22948], -0x7f ; ret 1
0x0000000000420b8c : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040aa6c : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000426f78 : rol byte ptr [rbx], 0 ; add al, ah ; stosb byte ptr [rdi], al ; std ; jmp rax
0x0000000000426ff8 : rol byte ptr [rip + 0x35d00000], -2 ; jmp rax
0x000000000042406c : rol byte ptr ds:[rax + 0x48f22948], -0x7f ; ret 1
0x00000000004078fb : rol dh, 0 ; or edi, eax ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp rsi
0x0000000000405ab9 : rol r15b, 1 ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp rsi
0x000000000041f214 : ror byte ptr [rax + 1], cl ; ret 0xb848
0x00000000004016ec : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4016fb ; pop rbp ; ret
0x0000000000424597 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x0000000000427170 : ror byte ptr [rbx], 0 ; add byte ptr [rax], dl ; test edi, edi ; jmp rax
0x000000000040b52a : ror byte ptr [rcx], -0x39 ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x00000000004271f0 : ror byte ptr [rip - 0x29900000], -1 ; jmp rax
0x0000000000423e9e : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x000000000041bf60 : ror dword ptr [rcx - 0x7d], cl ; ret
0x00000000004246dc : sahf ; ret 0xd284
0x0000000000408083 : sar bl, -1 ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004016ee : sar eax, 1 ; jne 0x4016f9 ; pop rbp ; ret
0x00000000004172e1 : sar ebp, -0x17 ; ret 0x2a
0x00000000004016ed : sar rax, 1 ; jne 0x4016fa ; pop rbp ; ret
0x0000000000427439 : sbb al, -2 ; call qword ptr [rax]
0x0000000000427479 : sbb al, -2 ; call qword ptr [rcx]
0x000000000041c2a0 : sbb al, 0x41 ; out dx, eax ; mov al, -0x47 ; ret
0x00000000004171e1 : sbb cl, ch ; ret
0x000000000041ea63 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041b2f0 : sbb ecx, dword ptr [rax - 0x7f] ; ret
0x0000000000401725 : scasb al, byte ptr [rdi] ; jnp 0x401750 ; add byte ptr [rcx], al ; ret
0x0000000000426f8d : scasb al, byte ptr [rdi] ; std ; jmp qword ptr [rax]
0x00000000004161e2 : shr cl, cl ; ret 0x3b
0x000000000041401d : stc ; ret 0x77a8
0x0000000000426f86 : std ; inc dword ptr [rax] ; add al, 0 ; add al, ah ; scasb al, byte ptr [rdi] ; std ; jmp qword ptr [rax]
0x0000000000426f76 : std ; inc eax ; add eax, dword ptr [rax] ; add al, ah ; stosb byte ptr [rdi], al ; std ; jmp rax
0x0000000000426f8e : std ; jmp qword ptr [rax]
0x0000000000426f7e : std ; jmp rax
0x000000000041aba7 : std ; ret 0x279e
0x0000000000426f7d : stosb byte ptr [rdi], al ; std ; jmp rax
0x000000000040923e : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000420336 : sub byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000409128 : sub byte ptr [rax], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000415715 : sub byte ptr [rbp - 0x7f], bh ; ret 0xffd5
0x000000000041570b : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x00000000004157e5 : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x00000000004165a5 : sub eax, 0x81268e82 ; ret 0xffd9
0x000000000041f21f : sub edx, edi ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000042654d : sub esp, 8 ; add rsp, 8 ; ret
0x000000000042654c : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000415710 : test al, -0x7f ; ret 0x2d50
0x00000000004157ea : test al, -0x7f ; ret 0xa30b
0x0000000000423943 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041b97e : test al, 0x48 ; add esp, 0x80 ; pop rbp ; ret
0x0000000000417f46 : test al, 0x48 ; mov ebp, 0xe19c53ba ; ret
0x0000000000407f82 : test al, 0x74 ; lea eax, dword ptr [rcx - 0xa] ; jmp qword ptr [rcx]
0x000000000041e2b8 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000042651a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004042a8 : test byte ptr [rcx], ah ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x0000000000427434 : test byte ptr [rcx], al ; add byte ptr [rax], al ; or byte ptr [rsi + rdi*8], bl ; call qword ptr [rax]
0x000000000040c58c : test byte ptr [rcx], ch ; ret 0
0x0000000000402e33 : test byte ptr [rdi - 0x16fffff4], bl ; ret 1
0x000000000040c586 : test dword ptr [rax + 0xffffffd], esp ; test byte ptr [rcx], ch ; ret 0
0x0000000000401d9a : test dword ptr [rdi + rdi*8 - 1], ebp ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000041e3c6 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000408254 : test dword ptr [rdi + rdi*8 - 1], edi ; jmp qword ptr [rdx]
0x0000000000408272 : test dword ptr [rdi + rdi*8 - 1], edi ; jmp qword ptr [rsi]
0x0000000000405abc : test dword ptr [rdi + rdi*8 - 1], edi ; jmp rsi
0x000000000041b59a : test dword ptr [rdi + rdi*8 - 1], esp ; call qword ptr [rbx]
0x0000000000416fbb : test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x000000000041821a : test dword ptr [rsi + rdi*8 + 0x6e94ffff], esp ; ret 0xe961
0x0000000000413cda : test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x00000000004181cf : test eax, 0xb9dd5cac ; xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x0000000000427175 : test edi, edi ; jmp rax
0x00000000004161df : wait ; jge 0x4161c1 ; shr cl, cl ; ret 0x3b
0x000000000041129d : wait ; jo 0x4112ab ; ret
0x00000000004147ec : wait ; jo 0x4147fa ; ret
0x0000000000427185 : xchg bh, bh ; jmp qword ptr [rax]
0x0000000000424088 : xchg dword ptr [rsi + 4], ebp ; push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000407515 : xchg eax, ebp ; ret
0x0000000000403643 : xchg eax, ebp ; ret 0xd284
0x000000000040ce25 : xchg eax, ebx ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x0000000000413725 : xchg eax, ebx ; ret
0x0000000000413955 : xchg eax, ecx ; ret
0x0000000000407d2b : xchg eax, edi ; ret 0xd284
0x000000000040d1a5 : xchg eax, edx ; ret
0x0000000000404733 : xchg eax, edx ; ret 0x8445
0x000000000041e2be : xchg eax, edx ; ret 0xd284
0x000000000041d55a : xchg eax, esp ; jmp 0x41dfc8
0x000000000041d497 : xchg eax, esp ; jmp 0x41dfca
0x00000000004181d4 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x0000000000413aa5 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x000000000041821f : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0xe961
0x000000000041b039 : xchg eax, esp ; ret 0x8041
0x00000000004170ee : xchg eax, esp ; ret 0xb740
0x00000000004037d6 : xchg eax, esp ; ret 0xd284
0x000000000041d559 : xchg eax, r12d ; jmp 0x41dfc9
0x00000000004170e9 : xor al, byte ptr [rbx - 0x6bf0fd12] ; ret 0xb740
0x000000000040b987 : xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000040b988 : xor byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004279b0 : xor byte ptr [rdi - 1], cl ; jmp rsi
