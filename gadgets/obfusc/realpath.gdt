0x000000000041e5f5 : adc ah, al ; ret 0x1b2
0x000000000041c332 : adc ah, al ; ret 0x8589
0x000000000041e611 : adc ah, al ; ret 0x958a
0x000000000045588c : adc al, 0xa ; add byte ptr [rax], al ; rol dl, -3 ; call rdi
0x000000000045608d : adc al, byte ptr [rax] ; add al, ah ; mov bl, -2 ; jmp qword ptr [rdx]
0x000000000045616d : adc al, byte ptr [rax] ; add byte ptr [rax], dh ; push -1 ; jmp qword ptr [rax]
0x00000000004559b0 : adc al, cl ; std ; call qword ptr [rbx]
0x0000000000444246 : adc byte ptr [rax + 1], cl ; ret 0x8948
0x000000000040315d : adc byte ptr [rax], al ; add cl, ch ; ret
0x0000000000454c7c : adc byte ptr [rbp - 2], ah ; jmp rax
0x0000000000446762 : adc byte ptr [rdi], ch ; ret
0x000000000041e480 : adc byte ptr [rdx], bl ; sbb ah, byte ptr [rdx - 0x47] ; and ebx, ebp ; ret 0x8bb1
0x0000000000454890 : adc byte ptr [rsi], al ; add byte ptr [rax], al ; jo 0x45486e ; cli ; jmp rax
0x000000000040cbaa : adc ch, cl ; ret
0x0000000000444f9c : adc cl, byte ptr [rax + 1] ; ret 0x8b48
0x0000000000452e7e : adc cl, byte ptr [rax - 0x77] ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x48f0
0x000000000041a74c : adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x000000000040f9fd : adc cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x000000000044135a : adc cl, byte ptr [rax - 0x7d] ; ret 0x4818
0x000000000044affb : adc cl, byte ptr [rax - 0x7f] ; ret 0x10
0x0000000000441446 : adc cl, byte ptr [rax - 0x7f] ; ret 0x18
0x000000000044097f : adc cl, byte ptr [rax - 0x7f] ; ret 0xc
0x000000000042c361 : adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x00000000004082ee : adc dword ptr [rax + 1], ecx ; ret 0x8948
0x0000000000454b79 : adc dword ptr [rax], eax ; add al, al ; fdivp st(5) ; call rax
0x0000000000454b89 : adc dword ptr [rax], eax ; add byte ptr [rax], ah ; loopne 0x454b92 ; call qword ptr [rax]
0x00000000004380eb : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000446a02 : adc dword ptr [rdi], ebp ; ret
0x000000000042d4eb : adc eax, 0x558abda1 ; ret
0x0000000000418da3 : adc eax, dword ptr [rax] ; add bh, al ; xchg eax, r12d ; int 6
0x0000000000430ac9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004023e8 : adc eax, dword ptr [rax] ; add byte ptr [rbx - 0x3ed26fbb], cl ; cli ; ret
0x000000000045616b : add ah, dh ; adc al, byte ptr [rax] ; add byte ptr [rax], dh ; push -1 ; jmp qword ptr [rax]
0x00000000004552fd : add al, 0 ; add al, al ; fdivr st(3) ; jmp rbx
0x0000000000449561 : add al, 0 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rsi
0x00000000004120b0 : add al, 0 ; add byte ptr [rbx - 0x3dd247bb], cl ; ret
0x0000000000411ac8 : add al, 0 ; add cl, ch ; ret 1
0x000000000043f91a : add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000045561f : add al, ah ; cld ; jmp qword ptr [rcx]
0x000000000045608f : add al, ah ; mov bl, -2 ; jmp qword ptr [rdx]
0x0000000000454b7b : add al, al ; fdivp st(5) ; call rax
0x00000000004552ff : add al, al ; fdivr st(3) ; jmp rbx
0x000000000045588f : add al, al ; ret 0xfffd
0x0000000000406efc : add al, byte ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000405091 : add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000401c48 : add al, ch ; ret 1
0x0000000000413a08 : add ax, word ptr [rax] ; add cl, ch ; ret 1
0x000000000041a768 : add bh, al ; in al, dx ; ret 0xe8ff
0x000000000044934a : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rbx
0x0000000000449563 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rsi
0x0000000000437dc4 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000042045a : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp qword ptr [rbx]
0x00000000004203bb : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp rdi
0x000000000041626f : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x000000000043539c : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; call rax
0x0000000000435683 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; call rsi
0x0000000000436111 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; jmp qword ptr [rcx]
0x000000000042d329 : add bh, al ; test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x0000000000418da5 : add bh, al ; xchg eax, r12d ; int 6
0x0000000000453aef : add bl, dh ; ret
0x00000000004534fb : add byte ptr [r13 - 0x77], r8b ; ret 0x8141
0x0000000000412b74 : add byte ptr [r8], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004520b2 : add byte ptr [r8], al ; add byte ptr [rcx], al ; ret 0xea81
0x0000000000452314 : add byte ptr [r8], al ; add byte ptr [rcx], ch ; ret 0x5589
0x000000000041729d : add byte ptr [rax + 0x29], cl ; ret 0x8948
0x0000000000454f1b : add byte ptr [rax + rax - 0x2cc00000], ah ; cli ; jmp rbx
0x000000000045569b : add byte ptr [rax + rcx], ah ; add byte ptr [rax], al ; jo 0x455667 ; cld ; call qword ptr [rdx]
0x0000000000454f1f : add byte ptr [rax - 0x2d], al ; cli ; jmp rbx
0x0000000000454893 : add byte ptr [rax - 0x2f], dh ; cli ; jmp rax
0x000000000045598f : add byte ptr [rax - 0x3a], dl ; std ; call rdx
0x000000000045582f : add byte ptr [rax - 0x3f], dh ; std ; jmp qword ptr [rbx]
0x000000000045569f : add byte ptr [rax - 0x43], dh ; cld ; call qword ptr [rdx]
0x00000000004408f8 : add byte ptr [rax - 0x73], cl ; or al, 0x25 ; ret
0x000000000041a94b : add byte ptr [rax - 0x75], cl ; call 0x490432a3
0x000000000040f2ac : add byte ptr [rax - 0x75], cl ; clc ; mov rsp, rbp ; pop rbp ; ret
0x0000000000453961 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; ret 0x2948
0x00000000004021a6 : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000405cc9 : add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000454b8b : add byte ptr [rax], ah ; loopne 0x454b90 ; call qword ptr [rax]
0x0000000000454adb : add byte ptr [rax], ah ; ret 0xfffd
0x000000000045588a : add byte ptr [rax], al ; adc al, 0xa ; add byte ptr [rax], al ; rol dl, -3 ; call rdi
0x00000000004559ae : add byte ptr [rax], al ; adc al, cl ; std ; call qword ptr [rbx]
0x0000000000454c7a : add byte ptr [rax], al ; adc byte ptr [rbp - 2], ah ; jmp rax
0x000000000041a766 : add byte ptr [rax], al ; add bh, al ; in al, dx ; ret 0xe8ff
0x0000000000449348 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rbx
0x0000000000437dc2 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000453aed : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000041729b : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8948
0x0000000000454f1d : add byte ptr [rax], al ; add byte ptr [rax - 0x2d], al ; cli ; jmp rbx
0x00000000004408f6 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; or al, 0x25 ; ret
0x000000000041a949 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; call 0x490432a5
0x000000000045395f : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; ret 0x2948
0x00000000004021a4 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000453aeb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000400710 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x0000000000400712 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x0000000000405c4b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000414ddb : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000453aec : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400714 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x0000000000453504 : add byte ptr [rax], al ; add byte ptr [rbp + 0x21], al ; ret 0x8845
0x000000000043ab82 : add byte ptr [rax], al ; add byte ptr [rbp + 0x29], al ; ret 0x8844
0x0000000000402c1c : add byte ptr [rax], al ; add byte ptr [rbx + 0x12d9045], cl ; ret 0x4844
0x00000000004400a7 : add byte ptr [rax], al ; add byte ptr [rbx + 0x1c2ddc45], cl ; ret 0xbe70
0x000000000041a2eb : add byte ptr [rax], al ; add byte ptr [rbx + 0x252ddc45], cl ; ret 0xe8ff
0x000000000041a489 : add byte ptr [rax], al ; add byte ptr [rbx + 0x262ddc45], cl ; ret 0xe8ff
0x000000000040d75e : add byte ptr [rax], al ; add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x0000000000430532 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000411422 : add byte ptr [rax], al ; add byte ptr [rbx + 0x432dc845], cl ; ret 0x3504
0x000000000041154e : add byte ptr [rax], al ; add byte ptr [rbx + 0x442dc845], cl ; ret 0x3504
0x000000000040d690 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004047db : add byte ptr [rax], al ; add byte ptr [rbx + 0x6f2dc845], cl ; ret 0x9d87
0x0000000000440011 : add byte ptr [rax], al ; add byte ptr [rbx - 0x1cd223bb], cl ; ret
0x0000000000436583 : add byte ptr [rax], al ; add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x000000000041256e : add byte ptr [rax], al ; add byte ptr [rbx - 0x3cd247bb], cl ; ret
0x0000000000402433 : add byte ptr [rax], al ; add byte ptr [rbx - 0x3dd26fbb], cl ; cli ; ret
0x000000000044f66c : add byte ptr [rax], al ; add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x0000000000439bd1 : add byte ptr [rax], al ; add byte ptr [rbx - 0x62d237bb], cl ; push rcx ; ret 0x8929
0x0000000000439b21 : add byte ptr [rax], al ; add byte ptr [rbx - 0x63d237bb], cl ; push rcx ; ret 0x8929
0x0000000000438ee9 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x000000000041ea7a : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x00000000004520b3 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xea81
0x00000000004084ec : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xf281
0x0000000000452315 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x5589
0x0000000000437d30 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8b48
0x0000000000451481 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000043f181 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000450598 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000403eda : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040528a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000043ee95 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000437cba : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000040b2ed : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040536b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000045488a : add byte ptr [rax], al ; add ch, cl ; cli ; call qword ptr [rax]
0x000000000043ab17 : add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000430acb : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000430150 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004380ed : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000044fd18 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004533f7 : add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040156b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000045569a : add byte ptr [rax], al ; and al, 8 ; add byte ptr [rax], al ; jo 0x455668 ; cld ; call qword ptr [rdx]
0x0000000000454b8a : add byte ptr [rax], al ; and al, ah ; std ; call qword ptr [rax]
0x0000000000454c3a : add byte ptr [rax], al ; and byte ptr [rsi - 2], cl ; jmp rax
0x0000000000455af6 : add byte ptr [rax], al ; call 0xffffffffe7455909
0x000000000045616a : add byte ptr [rax], al ; hlt ; adc al, byte ptr [rax] ; add byte ptr [rax], dh ; push -1 ; jmp qword ptr [rax]
0x0000000000455af2 : add byte ptr [rax], al ; jl 0x455b0b ; add byte ptr [rax], al ; call 0xffffffffe745590d
0x0000000000401709 : add byte ptr [rax], al ; jmp 0x401589
0x000000000043ab13 : add byte ptr [rax], al ; jmp 0x43ab22
0x000000000043ac75 : add byte ptr [rax], al ; jmp 0x43ac84
0x000000000043aee3 : add byte ptr [rax], al ; jmp 0x43aef2
0x000000000044ae9f : add byte ptr [rax], al ; jmp 0x44aeae
0x0000000000454892 : add byte ptr [rax], al ; jo 0x45486c ; cli ; jmp rax
0x000000000045569e : add byte ptr [rax], al ; jo 0x455664 ; cld ; call qword ptr [rdx]
0x000000000045582e : add byte ptr [rax], al ; jo 0x4557f8 ; std ; jmp qword ptr [rbx]
0x000000000045561e : add byte ptr [rax], al ; loopne 0x45568e ; cld ; jmp qword ptr [rcx]
0x000000000045582a : add byte ptr [rax], al ; mov ah, 9 ; add byte ptr [rax], al ; jo 0x4557fc ; std ; jmp qword ptr [rbx]
0x0000000000454886 : add byte ptr [rax], al ; mov bh, 0 ; add byte ptr [rax], al ; add ch, cl ; cli ; call qword ptr [rax]
0x00000000004520f8 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000435658 : add byte ptr [rax], al ; mov edi, dword ptr [rbp - 0x54] ; call 0x401927
0x0000000000412a5f : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004021a5 : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000454f1a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x2d], al ; cli ; jmp rbx
0x000000000045586e : add byte ptr [rax], al ; nop ; ret 0xfffd
0x0000000000401d56 : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000430533 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406efd : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040d691 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004552fe : add byte ptr [rax], al ; rcr al, -5 ; jmp rbx
0x0000000000454b7a : add byte ptr [rax], al ; rcr dh, -3 ; call rax
0x0000000000453aee : add byte ptr [rax], al ; ret
0x0000000000400716 : add byte ptr [rax], al ; ret 1
0x000000000045588e : add byte ptr [rax], al ; rol dl, -3 ; call rdi
0x000000000045610e : add byte ptr [rax], al ; ror byte ptr [rbx - 1], 1 ; jmp qword ptr [rcx]
0x0000000000454f1e : add byte ptr [rax], al ; sar edx, cl ; jmp rbx
0x0000000000455bde : add byte ptr [rax], al ; shl byte ptr [rdi], -2 ; call rdx
0x0000000000455bfe : add byte ptr [rax], al ; sub byte ptr [rax], -2 ; call qword ptr [rdx]
0x00000000004552fa : add byte ptr [rax], al ; test byte ptr [rax + rax], al ; add al, al ; fdivr st(3) ; jmp rbx
0x00000000004556fa : add byte ptr [rax], al ; test byte ptr [rax], cl ; add byte ptr [rax], al ; ret
0x00000000004559aa : add byte ptr [rax], al ; xor al, 0xb ; add byte ptr [rax], al ; adc al, cl ; std ; call qword ptr [rbx]
0x000000000045614e : add byte ptr [rax], al ; xor byte ptr [rdi - 1], cl ; call qword ptr [rdx]
0x000000000045616e : add byte ptr [rax], al ; xor byte ptr [rdx - 1], ch ; jmp qword ptr [rax]
0x000000000045616f : add byte ptr [rax], dh ; push -1 ; jmp qword ptr [rax]
0x0000000000440f4a : add byte ptr [rax], r8b ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000453506 : add byte ptr [rbp + 0x21], al ; ret 0x8845
0x000000000043ab84 : add byte ptr [rbp + 0x29], al ; ret 0x8844
0x00000000004534fc : add byte ptr [rbp - 0x77], al ; ret 0x8141
0x0000000000402c1e : add byte ptr [rbx + 0x12d9045], cl ; ret 0x4844
0x000000000044005e : add byte ptr [rbx + 0x1b2ddc45], cl ; ret 0xbe70
0x00000000004400a9 : add byte ptr [rbx + 0x1c2ddc45], cl ; ret 0xbe70
0x000000000040354c : add byte ptr [rbx + 0x22d9045], cl ; ret 0x4844
0x000000000041a2ed : add byte ptr [rbx + 0x252ddc45], cl ; ret 0xe8ff
0x000000000041a48b : add byte ptr [rbx + 0x262ddc45], cl ; ret 0xe8ff
0x000000000040d760 : add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x0000000000430534 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000406efe : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000411424 : add byte ptr [rbx + 0x432dc845], cl ; ret 0x3504
0x0000000000411550 : add byte ptr [rbx + 0x442dc845], cl ; ret 0x3504
0x000000000040d692 : add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004047dd : add byte ptr [rbx + 0x6f2dc845], cl ; ret 0x9d87
0x00000000004559ab : add byte ptr [rbx + rcx], dh ; add byte ptr [rax], al ; adc al, cl ; std ; call qword ptr [rbx]
0x0000000000440013 : add byte ptr [rbx - 0x1cd223bb], cl ; ret
0x000000000043ffc8 : add byte ptr [rbx - 0x1dd223bb], cl ; ret
0x0000000000436585 : add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x000000000043653a : add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x0000000000412570 : add byte ptr [rbx - 0x3cd247bb], cl ; ret
0x00000000004177b5 : add byte ptr [rbx - 0x3d27bbb], cl ; stc ; in al, dx ; ret 0x8589
0x00000000004120b2 : add byte ptr [rbx - 0x3dd247bb], cl ; ret
0x0000000000402435 : add byte ptr [rbx - 0x3dd26fbb], cl ; cli ; ret
0x00000000004023ea : add byte ptr [rbx - 0x3ed26fbb], cl ; cli ; ret
0x0000000000435659 : add byte ptr [rbx - 0x41175383], cl ; ret 0xfffc
0x00000000004175f3 : add byte ptr [rbx - 0x4d27bbb], cl ; stc ; in al, dx ; ret 0x8589
0x000000000044f66e : add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x0000000000439bd3 : add byte ptr [rbx - 0x62d237bb], cl ; push rcx ; ret 0x8929
0x0000000000439b23 : add byte ptr [rbx - 0x63d237bb], cl ; push rcx ; ret 0x8929
0x00000000004520f9 : add byte ptr [rbx - 0x76b71fbb], cl ; in al, dx ; pop rbp ; ret
0x0000000000438eeb : add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x000000000041ea7c : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000045582b : add byte ptr [rcx + rcx - 0x3e900000], dh ; std ; jmp qword ptr [rbx]
0x0000000000407dd7 : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401aa8 : add byte ptr [rcx], al ; ret
0x00000000004520b5 : add byte ptr [rcx], al ; ret 0xea81
0x00000000004084ee : add byte ptr [rcx], al ; ret 0xf281
0x0000000000452317 : add byte ptr [rcx], ch ; ret 0x5589
0x0000000000437d32 : add byte ptr [rcx], ch ; ret 0x8b48
0x000000000045561b : add byte ptr [rdi + rax + 0x67e00000], ah ; cld ; jmp qword ptr [rcx]
0x0000000000451483 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000043f183 : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000045059a : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000405588 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8840
0x0000000000403edc : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040528c : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000043ee97 : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000437cbc : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000040b2ef : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040536d : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000045588b : add byte ptr [rdx + rcx], dl ; add byte ptr [rax], al ; rol dl, -3 ; call rdi
0x0000000000405269 : add byte ptr [rdx - 0x57f07ab], cl ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041032d : add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x00000000004552fb : add byte ptr [rsp + rax - 0x27400000], al ; sti ; jmp rbx
0x0000000000405cc8 : add byte ptr gs:[rax - 0x77], cl ; ret 0x8948
0x0000000000405c4a : add byte ptr gs:[rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000045488c : add ch, cl ; cli ; call qword ptr [rax]
0x000000000042d45c : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x000000000040315f : add cl, ch ; ret
0x0000000000403560 : add cl, ch ; ret 1
0x0000000000449baa : add cl, ch ; ret 9
0x000000000041aa01 : add dword ptr [rax + 0xf], eax ; mov dh, -0x39 ; pop rbp ; ret
0x0000000000403f85 : add dword ptr [rax + rcx*4 + 0x45], eax ; ret
0x000000000044b00b : add dword ptr [rax], 0xec894800 ; pop rbp ; ret
0x0000000000401c46 : add dword ptr [rax], eax ; add al, ch ; ret 1
0x0000000000420ce3 : add dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp rdi
0x000000000041669e : add dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x000000000043610f : add dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; jmp qword ptr [rcx]
0x000000000044abbc : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000040354a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x22d9045], cl ; ret 0x4844
0x000000000040f5a4 : add dword ptr [rax], eax ; add cl, ch ; ret 1
0x000000000041a6af : add dword ptr [rax], ecx ; ret 0x840
0x0000000000405598 : add dword ptr [rax], esp ; ret 0x840
0x0000000000405d60 : add dword ptr [rdi], ecx ; mov dh, -0x3f ; mov rsp, rbp ; pop rbp ; ret
0x0000000000413e60 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000451602 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x000000000040839e : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000413808 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401aa4 : add eax, 0x25588e ; add ebx, esi ; ret
0x00000000004357cc : add eax, 0xc700000b ; test dword ptr [rdi + rdi*8 - 1], esp ; call rsi
0x0000000000420a65 : add eax, dword ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp qword ptr [rbx]
0x000000000044e795 : add eax, dword ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040fdae : add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x0000000000401a6b : add eax, edx ; sar rax, 1 ; jne 0x401a7c ; pop rbp ; ret
0x000000000044acf9 : add eax, esi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x0000000000401aa9 : add ebx, esi ; ret
0x000000000040429e : add ecx, dword ptr [rdx + rcx*4] ; push rbp ; ret
0x0000000000416519 : add edi, eax ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x0000000000401e4b : add esp, 0x10 ; pop rbp ; ret
0x0000000000407dd5 : add esp, 0x100 ; pop rbp ; ret
0x000000000044f0ba : add esp, 0x120 ; pop rbp ; ret
0x000000000044ca2a : add esp, 0x1360 ; pop rbp ; ret
0x0000000000412818 : add esp, 0x140 ; pop rbp ; ret
0x0000000000417273 : add esp, 0x160 ; pop rbp ; ret
0x0000000000415a38 : add esp, 0x180 ; pop rbp ; ret
0x000000000041370d : add esp, 0x190 ; pop rbp ; ret
0x0000000000418e35 : add esp, 0x1a0 ; pop rbp ; ret
0x00000000004166b9 : add esp, 0x1c0 ; pop rbp ; ret
0x000000000041a10f : add esp, 0x1d0 ; pop rbp ; ret
0x00000000004137e4 : add esp, 0x20 ; pop rbp ; ret
0x00000000004333dd : add esp, 0x240 ; pop rbp ; ret
0x000000000043be76 : add esp, 0x30 ; pop rbp ; ret
0x000000000044e792 : add esp, 0x3a8 ; pop rbx ; pop rbp ; ret
0x0000000000420c06 : add esp, 0x3e0 ; pop rbp ; ret
0x00000000004380f0 : add esp, 0x40 ; pop rbp ; ret
0x0000000000404548 : add esp, 0x430 ; pop rbp ; ret
0x000000000043fb19 : add esp, 0x440 ; pop rbp ; ret
0x000000000040e5a2 : add esp, 0x50 ; pop rbp ; ret
0x000000000043603c : add esp, 0x5b0 ; pop rbp ; ret
0x00000000004048bd : add esp, 0x60 ; pop rbp ; ret
0x000000000041ec84 : add esp, 0x650 ; pop rbp ; ret
0x0000000000431e42 : add esp, 0x70 ; pop rbp ; ret
0x0000000000401d52 : add esp, 0x80 ; pop rbp ; ret
0x00000000004101ef : add esp, 0x88 ; pop rbp ; ret
0x000000000040cebd : add esp, 0x8b0 ; pop rbp ; ret
0x0000000000410cbd : add esp, 0x90 ; pop rbp ; ret
0x000000000040f12b : add esp, 0xa0 ; pop rbp ; ret
0x0000000000430a2b : add esp, 0xb0 ; pop rbp ; ret
0x000000000040d68d : add esp, 0xb8 ; pop rbx ; pop rbp ; ret
0x000000000041121d : add esp, 0xd0 ; pop rbp ; ret
0x0000000000404ae6 : add esp, 0xe0 ; pop rbp ; ret
0x000000000043bd6f : add esp, 0xf0 ; pop rbp ; ret
0x00000000004213e3 : add esp, 8 ; pop rbp ; ret
0x000000000040156e : add esp, 8 ; ret
0x0000000000401a6a : add rax, rdx ; sar rax, 1 ; jne 0x401a7d ; pop rbp ; ret
0x000000000044acf8 : add rax, rsi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x0000000000401e4a : add rsp, 0x10 ; pop rbp ; ret
0x0000000000407dd4 : add rsp, 0x100 ; pop rbp ; ret
0x000000000044f0b9 : add rsp, 0x120 ; pop rbp ; ret
0x000000000044ca29 : add rsp, 0x1360 ; pop rbp ; ret
0x0000000000412817 : add rsp, 0x140 ; pop rbp ; ret
0x0000000000417272 : add rsp, 0x160 ; pop rbp ; ret
0x0000000000415a37 : add rsp, 0x180 ; pop rbp ; ret
0x000000000041370c : add rsp, 0x190 ; pop rbp ; ret
0x0000000000418e34 : add rsp, 0x1a0 ; pop rbp ; ret
0x00000000004166b8 : add rsp, 0x1c0 ; pop rbp ; ret
0x000000000041a10e : add rsp, 0x1d0 ; pop rbp ; ret
0x00000000004137e3 : add rsp, 0x20 ; pop rbp ; ret
0x00000000004333dc : add rsp, 0x240 ; pop rbp ; ret
0x000000000043be75 : add rsp, 0x30 ; pop rbp ; ret
0x000000000044e791 : add rsp, 0x3a8 ; pop rbx ; pop rbp ; ret
0x0000000000420c05 : add rsp, 0x3e0 ; pop rbp ; ret
0x00000000004380ef : add rsp, 0x40 ; pop rbp ; ret
0x0000000000404547 : add rsp, 0x430 ; pop rbp ; ret
0x000000000043fb18 : add rsp, 0x440 ; pop rbp ; ret
0x000000000040e5a1 : add rsp, 0x50 ; pop rbp ; ret
0x000000000043603b : add rsp, 0x5b0 ; pop rbp ; ret
0x00000000004048bc : add rsp, 0x60 ; pop rbp ; ret
0x000000000041ec83 : add rsp, 0x650 ; pop rbp ; ret
0x0000000000431e41 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000401d51 : add rsp, 0x80 ; pop rbp ; ret
0x00000000004101ee : add rsp, 0x88 ; pop rbp ; ret
0x000000000040cebc : add rsp, 0x8b0 ; pop rbp ; ret
0x0000000000410cbc : add rsp, 0x90 ; pop rbp ; ret
0x000000000040f12a : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000430a2a : add rsp, 0xb0 ; pop rbp ; ret
0x000000000040d68c : add rsp, 0xb8 ; pop rbx ; pop rbp ; ret
0x000000000041121c : add rsp, 0xd0 ; pop rbp ; ret
0x0000000000404ae5 : add rsp, 0xe0 ; pop rbp ; ret
0x000000000043bd6e : add rsp, 0xf0 ; pop rbp ; ret
0x00000000004213e2 : add rsp, 8 ; pop rbp ; ret
0x000000000040156d : add rsp, 8 ; ret
0x00000000004520bd : and al, 0xffffffffffffff81 ; ret 0x61
0x000000000040a791 : and al, 0xffffffffffffff89 ; test dword ptr [rcx + rdi*8 - 0x7bf00001], eax ; ret 0x22
0x000000000040839d : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000413807 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000045569c : and al, 8 ; add byte ptr [rax], al ; jo 0x455666 ; cld ; call qword ptr [rdx]
0x0000000000454b8c : and al, ah ; std ; call qword ptr [rax]
0x000000000041a9ff : and bh, 1 ; movzx eax, dil ; pop rbp ; ret
0x00000000004560d1 : and bh, bh ; call rbx
0x000000000041c1a9 : and bl, ch ; ret 0x89b1
0x0000000000414dda : and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000043cf00 : and byte ptr [rbp + rcx*2 - 0x77], al ; ret
0x000000000044f0bc : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000438c1b : and byte ptr [rsi + 0x58], ah ; jb 0x438c52 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000454c3c : and byte ptr [rsi - 2], cl ; jmp rax
0x000000000041a9fe : and dil, 1 ; movzx eax, dil ; pop rbp ; ret
0x000000000042c691 : and eax, 0x75b4b9d3 ; ret
0x000000000043b268 : and eax, edi ; mov al, r8b ; movzx eax, al ; pop rbp ; ret
0x000000000043ad7f : and eax, edi ; xor esi, edi ; or eax, esi ; pop rbp ; ret
0x000000000041c1fd : and ebx, ebp ; ret 0x89b1
0x000000000041e485 : and ebx, ebp ; ret 0x8bb1
0x000000000041e469 : and ebx, ebp ; ret 0xb2b1
0x000000000043b32a : and edx, ebx ; mov al, dl ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x00000000004353fc : call 0x401692
0x0000000000420d46 : call 0x401697
0x00000000004354d7 : call 0x401742
0x0000000000401cbf : call 0x4017d6
0x0000000000401d94 : call 0x4017d9
0x000000000043565d : call 0x401922
0x0000000000439015 : call 0x4390d9
0x000000000041ddea : call 0x449a66
0x00000000004054c3 : call 0x49035413
0x000000000041a94f : call 0x4904329f
0x000000000041a94e : call 0x490432a0
0x000000000041a99d : call 0x490432ed
0x000000000041a99c : call 0x490432ee
0x000000000044fc0d : call 0xffffffffaca5be41
0x000000000044fc0c : call 0xffffffffaca5be42
0x0000000000455af8 : call 0xffffffffe7455907
0x0000000000430149 : call 0xffffffffe9058a99
0x0000000000430148 : call 0xffffffffe9058a9a
0x000000000044c894 : call 0xfffffffff77d8b54
0x000000000043a73b : call 0xffffffffffb42d0d
0x000000000043a73a : call 0xffffffffffb42d0e
0x0000000000453ac9 : call qword ptr [r12 + rbx*8]
0x000000000045488f : call qword ptr [rax]
0x000000000043190e : call qword ptr [rbx]
0x00000000004481ec : call qword ptr [rcx]
0x00000000004076d3 : call qword ptr [rdi]
0x000000000042b5bb : call qword ptr [rdx]
0x000000000044cb2a : call qword ptr [rsi]
0x0000000000453aca : call qword ptr [rsp + rbx*8]
0x0000000000401acd : call rax
0x00000000004560d3 : call rbx
0x000000000042d83b : call rcx
0x000000000040b7fb : call rdi
0x0000000000410927 : call rdx
0x000000000040bfdf : call rsi
0x000000000040b2d4 : call rsp
0x000000000044f0b8 : clc ; add rsp, 0x120 ; pop rbp ; ret
0x000000000041370b : clc ; add rsp, 0x190 ; pop rbp ; ret
0x0000000000420c04 : clc ; add rsp, 0x3e0 ; pop rbp ; ret
0x000000000043fb17 : clc ; add rsp, 0x440 ; pop rbp ; ret
0x000000000043603a : clc ; add rsp, 0x5b0 ; pop rbp ; ret
0x0000000000439c97 : clc ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000438377 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x0000000000410cbb : clc ; add rsp, 0x90 ; pop rbp ; ret
0x0000000000439fd9 : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x0000000000453a4b : clc ; add rsp, 0xf0 ; pop rbp ; ret
0x0000000000401a6f : clc ; jne 0x401a78 ; pop rbp ; ret
0x000000000043b269 : clc ; mov al, r8b ; movzx eax, al ; pop rbp ; ret
0x000000000043b033 : clc ; mov ax, r8w ; movzx eax, ax ; pop rbp ; ret
0x000000000041a1ce : clc ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040f2eb : clc ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040f30b : clc ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000043aa81 : clc ; mov rax, r8 ; pop rbp ; ret
0x000000000040f2b0 : clc ; mov rsp, rbp ; pop rbp ; ret
0x000000000043ce4f : clc ; pop rbx ; pop rbp ; ret
0x0000000000422c1d : clc ; ret 0x77a8
0x000000000043ad80 : clc ; xor esi, edi ; or eax, esi ; pop rbp ; ret
0x0000000000407dd3 : cld ; add rsp, 0x100 ; pop rbp ; ret
0x000000000044ca28 : cld ; add rsp, 0x1360 ; pop rbp ; ret
0x000000000045024e : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000043bd6d : cld ; add rsp, 0xf0 ; pop rbp ; ret
0x00000000004556a2 : cld ; call qword ptr [rdx]
0x000000000040d78f : cld ; jmp 0x40d7fc
0x000000000040d78e : cld ; jmp 0x40d7fd
0x0000000000455622 : cld ; jmp qword ptr [rcx]
0x00000000004177ba : cld ; stc ; in al, dx ; ret 0x8589
0x0000000000417f0b : cld ; stc ; in al, dx ; ret 0xff3
0x000000000041c36a : cld ; stc ; ret
0x000000000040526e : cli ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000045488e : cli ; call qword ptr [rax]
0x0000000000454896 : cli ; jmp rax
0x0000000000454f22 : cli ; jmp rbx
0x0000000000438c20 : cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004023f0 : cli ; ret
0x00000000004520bc : cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x0000000000437b3b : cmc ; ret 0x4f0b
0x0000000000401d9b : cmp al, 0x25 ; ret 0x453b
0x00000000004208fa : cmp byte ptr [rsi + rdx*4 - 0x1b14630], bh ; ret
0x0000000000433ef5 : cmp ch, byte ptr [rbx - 0x66] ; ret
0x000000000043cefe : cmp cl, byte ptr [rdx] ; and byte ptr [rbp + rcx*2 - 0x77], al ; ret
0x0000000000437cd1 : cmp cl, byte ptr [rsi - 0x946182f] ; ret 0x4f0b
0x0000000000412842 : cmp dword ptr [rax - 0x75], ecx ; jne 0x412824 ; call rax
0x0000000000433ea1 : cmp dword ptr [rbx - 0x66], ebp ; ret
0x000000000043c829 : cmp eax, 0x45c6a0d8 ; ret
0x000000000044af2d : cmp eax, 0xb8000001 ; ret
0x0000000000401a2d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401a40 ; pop rbp ; ret
0x000000000042d4e7 : cmp esp, dword ptr [rbp - 0x47] ; push -0x75425eeb ; push rbp ; ret
0x000000000041a167 : dec dword ptr [rax + 0x29] ; ret 0x8948
0x000000000045279a : dec dword ptr [rax + 0x29] ; ret 0x8b48
0x000000000041e9b4 : dec dword ptr [rax + 1] ; ret 0x8948
0x0000000000420d4a : dec dword ptr [rax - 0x41] ; ret 0x7f0f
0x0000000000401d98 : dec dword ptr [rax - 0x73] ; cmp al, 0x25 ; ret 0x453b
0x000000000042c9eb : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x000000000042c35e : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x000000000042cb63 : dec dword ptr [rax - 0x75] ; or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x0000000000444242 : dec dword ptr [rax - 0x75] ; push rcx ; adc byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000438d4d : dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x0000000000447988 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x00000000004446fb : dec dword ptr [rax - 0x77] ; ret 0x2ce8
0x000000000044512d : dec dword ptr [rax - 0x77] ; ret 0x4ae8
0x000000000044a839 : dec dword ptr [rax - 0x77] ; ret 0x6ee8
0x000000000043f676 : dec dword ptr [rax - 0x77] ; ret 0x8148
0x000000000043541f : dec dword ptr [rax - 0x77] ; ret 0x8e8
0x0000000000435d79 : dec dword ptr [rax - 0x77] ; ret 0xaee8
0x0000000000436e0b : dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000436277 : dec dword ptr [rax - 0x77] ; ret 0xb0e8
0x0000000000445a8e : dec dword ptr [rax - 0x77] ; ret 0xe9e8
0x00000000004496fd : dec dword ptr [rax - 0x7f] ; ret 1
0x0000000000445729 : dec dword ptr [rax - 0x7f] ; ret 4
0x00000000004497f6 : dec dword ptr [rax - 1] ; ret 0x8948
0x0000000000440c59 : dec dword ptr [rbx - 0x1eb6b] ; dec dword ptr [rdi] ; ret 0x4589
0x000000000044a766 : dec dword ptr [rbx - 0x1f36b] ; dec dword ptr [rdi] ; ret 0x4589
0x0000000000404901 : dec dword ptr [rcx - 0x71167e3f] ; xchg eax, esp ; ret 0x8589
0x0000000000437b36 : dec dword ptr [rcx - 0xa167e3f] ; ret 0x4f0b
0x0000000000440c5f : dec dword ptr [rdi] ; ret 0x4589
0x0000000000410611 : dec dword ptr [rdi] ; test ah, dh ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000041548b : dec dword ptr [rdi] ; test bl, dh ; add al, 0 ; add cl, ch ; ret 1
0x000000000044054e : dec dword ptr [rdi] ; test byte ptr [rax - 0x16fffff9], cl ; ret 1
0x000000000040fdaa : dec dword ptr [rdi] ; test byte ptr [rbp - 0x16fffffd], ch ; ret 1
0x00000000004228fa : dec dword ptr [rdi] ; test byte ptr [rcx], ch ; ret 0
0x000000000040355a : dec dword ptr [rdi] ; test byte ptr [rdi - 0x16fffff2], ah ; ret 1
0x000000000040508d : dec dword ptr [rdi] ; test byte ptr [rdi], ah ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000403159 : dec dword ptr [rdi] ; test byte ptr [rip - 0x16fffff0], ch ; ret
0x000000000040f5a0 : dec dword ptr [rdi] ; test cl, ah ; add dword ptr [rax], eax ; add cl, ch ; ret 1
0x0000000000407405 : dec dword ptr [rdi] ; test dh, al ; or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000418885 : dec dword ptr [rdi] ; test dh, dl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000043f4a3 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x0000000000436108 : dec esi ; sbb al, -0x73 ; sbb ecx, ebp ; ret
0x000000000041ac21 : div dword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000041ac20 : div qword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x0000000000439bd6 : enter -0x62d3, 0x51 ; ret 0x8929
0x0000000000439b26 : enter -0x63d3, 0x51 ; ret 0x8929
0x0000000000410a20 : enter -0x74b8, 0x31 ; call rax
0x0000000000403ed8 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000043f0f9 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000401a43 : enter 0x6572, 0 ; jmp rax
0x0000000000401a83 : enter 0x6572, 0 ; jmp rdx
0x00000000004454a0 : enter 0xf41, -0x6b ; ret 0x8445
0x000000000043aba5 : enter 0xf41, 0x44 ; ret 0x4589
0x000000000040484c : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000043ae5b : fcomp dword ptr [rbx + 0x5d] ; ret
0x0000000000454b7d : fdivp st(5) ; call rax
0x0000000000455301 : fdivr st(3) ; jmp rbx
0x000000000041548e : fiadd word ptr [rax + rax] ; add cl, ch ; ret 1
0x000000000043b32b : fimul dword ptr [rax - 0x3f49f030] ; pop rbx ; pop rbp ; ret
0x0000000000450678 : fld qword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x000000000041436e : fmul dword ptr [r8 - 0x75] ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000044f357 : fmul dword ptr [r9 - 0x57167e3f] ; ret
0x000000000043cf46 : fmul dword ptr [rax + 0x29] ; ret 0x8b48
0x000000000041436f : fmul dword ptr [rax - 0x75] ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000410a1c : fmul dword ptr [rax - 0x75] ; enter -0x74b8, 0x31 ; call rax
0x0000000000452e82 : fmul dword ptr [rax - 0x7d] ; ret 0x48f0
0x000000000041175d : fmul dword ptr [rax - 0x7f] ; ret 0x10
0x0000000000410049 : fmul dword ptr [rax - 1] ; ret 0x8948
0x000000000044f358 : fmul dword ptr [rcx - 0x57167e3f] ; ret
0x0000000000453acc : fmul qword ptr [rax - 0x7d] ; ret
0x00000000004453c4 : fsubr st(1) ; ret
0x000000000045616c : hlt ; adc al, byte ptr [rax] ; add byte ptr [rax], dh ; push -1 ; jmp qword ptr [rax]
0x0000000000401e49 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000044f8bc : hlt ; add rsp, 0xe0 ; pop rbp ; ret
0x00000000004213e1 : hlt ; add rsp, 8 ; pop rbp ; ret
0x0000000000401c43 : hlt ; jmp 0x401e0f
0x0000000000401c42 : hlt ; jmp 0x401e10
0x0000000000401a40 : hlt ; pop rbp ; mov edi, 0x6572c8 ; jmp rax
0x0000000000438d4b : idiv edi ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000040c928 : imul eax, dword ptr [rbp + 0x2c], -0x47 ; push rsp ; ret 0x8be9
0x0000000000435a01 : imul edi, dword ptr [rip], 0xf ; xchg eax, ebp ; ret 0xd284
0x000000000044af2b : in al, -0x17 ; cmp eax, 0xb8000001 ; ret
0x0000000000440d46 : in al, 0 ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000453142 : in al, 0x48 ; add esp, 0x60 ; pop rbp ; ret
0x000000000043b6b1 : in al, 0x48 ; add esp, 0xb0 ; pop rbp ; ret
0x000000000040c944 : in al, 7 ; jb 0x40c906 ; push rsp ; ret 0x8be9
0x000000000041a631 : in al, dx ; jmp 0x41a7fd
0x000000000041a630 : in al, dx ; jmp 0x41a7fe
0x00000000004407f6 : in al, dx ; jmp 0x440e36
0x00000000004407f5 : in al, dx ; jmp 0x440e37
0x000000000044fccc : in al, dx ; jmp 0x44fd49
0x000000000044fccb : in al, dx ; jmp 0x44fd4a
0x000000000043ad15 : in al, dx ; lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004021a9 : in al, dx ; pop rbp ; ret
0x00000000004175fa : in al, dx ; ret 0x8589
0x000000000041a614 : in al, dx ; ret 0xe8ff
0x0000000000417f0d : in al, dx ; ret 0xff3
0x000000000040429d : in eax, 3 ; or al, 0xffffffffffffff8a ; push rbp ; ret
0x0000000000435faf : in eax, dx ; jge 0x435f56 ; sub eax, 0x9a6b3ab9 ; ret
0x000000000040c439 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000447e15 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x00000000004355e4 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000042099e : inc dword ptr [rbp + 0xf] ; ret 0x8944
0x0000000000406f50 : inc dword ptr [rbp - 0x77] ; ret
0x000000000040379a : inc dword ptr [rcx + 0xf] ; ret
0x000000000044c15a : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret
0x00000000004409c5 : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x8445
0x000000000044c317 : inc dword ptr [rcx - 0x47] ; xchg eax, esi ; mov ecx, 0xba41a9ee ; ret
0x00000000004359bb : inc dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000420ded : inc edi ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp rbx
0x00000000004325f7 : int 0x5b
0x0000000000418624 : int 6
0x0000000000401a33 : ja 0x401a3a ; pop rbp ; ret
0x000000000041a1d1 : ja 0x41a21e ; pop rbp ; ret
0x000000000041f017 : ja 0x41effe ; ret 0x8974
0x0000000000405c49 : jae 0x405cb9 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000405c9a : jae 0x405d0a ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000405cc7 : jae 0x405d33 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000405cc6 : jae 0x405d34 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000040c946 : jb 0x40c904 ; push rsp ; ret 0x8be9
0x000000000041eb8e : jb 0x41ebc2 ; jl 0x41eb4f ; ret 0x8237
0x0000000000438c1e : jb 0x438c4f ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000453ecf : jb 0x453f38 ; jns 0x453eda ; push rax ; ret
0x0000000000453ece : jb 0x453f39 ; jns 0x453edb ; push rax ; ret
0x0000000000443a7d : jbe 0x443a3c ; push rcx ; jmp rsp
0x0000000000443a7c : jbe 0x443a3d ; push rcx ; jmp rsp
0x0000000000401a3f : je 0x401a3d ; pop rbp ; mov edi, 0x6572c8 ; jmp rax
0x000000000040f2ea : jge 0x40f2eb ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040f30a : jge 0x40f30b ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000410a1b : jge 0x4109fe ; mov rcx, qword ptr [rbp - 0x38] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000041a1cd : jge 0x41a1ce ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000041c369 : jge 0x41c36a ; stc ; ret
0x000000000041dde8 : jge 0x41dd72 ; call 0x449a68
0x000000000042ba86 : jge 0x42ba0b ; ret 0xffd5
0x000000000042c550 : jge 0x42c530 ; shr cl, cl ; ret 0x3b
0x000000000043565b : jge 0x43560d ; call 0x401924
0x0000000000435fb0 : jge 0x435f55 ; sub eax, 0x9a6b3ab9 ; ret
0x000000000043a425 : jge 0x43a47c ; ret 0x89b9
0x000000000043a8a5 : jge 0x43a8fc ; ret 0xb2b9
0x000000000043a8c1 : jge 0x43a918 ; ret 0x48b9
0x000000000041eb90 : jl 0x41eb4d ; ret 0x8237
0x000000000041eb8f : jl 0x41eb4e ; ret 0x8237
0x000000000043a2f1 : jl 0x43a348 ; ret 0x89b9
0x000000000044d107 : jl 0x44d0d1 ; ret
0x000000000044ded0 : jl 0x44de9a ; ret
0x0000000000455af4 : jl 0x455b09 ; add byte ptr [rax], al ; call 0xffffffffe745590b
0x0000000000417358 : jle 0x4172ec ; test byte ptr [r9 - 0x70f07fb3], r9b ; ret 6
0x000000000041c3bd : jle 0x41c3be ; stc ; ret
0x000000000041e721 : jle 0x41e722 ; stc ; ret
0x0000000000403b0e : jmp 0x31bcd1
0x0000000000403b0d : jmp 0x31bcd2
0x000000000040170b : jmp 0x401587
0x0000000000401c44 : jmp 0x401e0e
0x0000000000404440 : jmp 0x404744
0x0000000000404440 : jmp 0x404746
0x000000000040c8a4 : jmp 0x40d279
0x000000000040d790 : jmp 0x40d7fb
0x0000000000410024 : jmp 0x410280
0x00000000004108b9 : jmp 0x410a45
0x000000000041274a : jmp 0x41288e
0x0000000000412749 : jmp 0x41288f
0x0000000000412749 : jmp 0x412890
0x000000000041a632 : jmp 0x41a7fc
0x000000000041e938 : jmp 0x41ef22
0x000000000042cca0 : jmp 0x430120
0x000000000042aba4 : jmp 0x430121
0x000000000042bf71 : jmp 0x430122
0x0000000000436f5b : jmp 0x4379c7
0x0000000000436e98 : jmp 0x4379c9
0x0000000000438fc3 : jmp 0x439028
0x000000000043a89a : jmp 0x43aa43
0x000000000043ab15 : jmp 0x43ab20
0x000000000043ac77 : jmp 0x43ac82
0x000000000043aee5 : jmp 0x43aef0
0x000000000043f9b6 : jmp 0x43fc98
0x00000000004407f7 : jmp 0x440e35
0x0000000000440d73 : jmp 0x440e37
0x00000000004411fb : jmp 0x441191
0x000000000044aea1 : jmp 0x44aeac
0x000000000044af2c : jmp 0x44b074
0x000000000044c408 : jmp 0x44cb93
0x000000000044e34e : jmp 0x44e9c1
0x000000000044deca : jmp 0x44e9c3
0x000000000044fccd : jmp 0x44fd48
0x0000000000452ea3 : jmp 0x452f7c
0x0000000000417c8f : jmp 0x490405df
0x0000000000417ddb : jmp 0x4904072b
0x0000000000417ead : jmp 0x490407fd
0x0000000000417f2e : jmp 0x4904087e
0x0000000000419ed4 : jmp 0x49042824
0x0000000000419f4f : jmp 0x4904289f
0x0000000000437b3a : jmp 0x4f4f3e36
0x0000000000404905 : jmp 0xffffffffc284dd9c
0x000000000042fa75 : jmp qword ptr [rax]
0x0000000000420460 : jmp qword ptr [rbx]
0x0000000000403b15 : jmp qword ptr [rcx]
0x000000000040cf67 : jmp qword ptr [rdi]
0x0000000000437dca : jmp qword ptr [rdx]
0x000000000041e59d : jmp qword ptr [rsi]
0x0000000000401a47 : jmp rax
0x0000000000401e82 : jmp rbx
0x0000000000405e65 : jmp rcx
0x00000000004203c1 : jmp rdi
0x0000000000401a87 : jmp rdx
0x0000000000449569 : jmp rsi
0x000000000042c388 : jmp rsp
0x0000000000401a70 : jne 0x401a77 ; pop rbp ; ret
0x0000000000410a79 : jne 0x410a44 ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x40] ; call rax
0x0000000000412845 : jne 0x412821 ; call rax
0x000000000041ac22 : jne 0x41ac1a ; mov rax, rdx ; pop rbp ; ret
0x0000000000435656 : jnp 0x43566d ; add byte ptr [rax], al ; mov edi, dword ptr [rbp - 0x54] ; call 0x401929
0x000000000044d0b3 : jnp 0x44d07d ; ret
0x0000000000453ed2 : jns 0x453ed7 ; push rax ; ret
0x0000000000453ed1 : jns 0x453ed8 ; push rax ; ret
0x0000000000409db6 : jo 0x409d3b ; ret 0x890c
0x000000000040c100 : jo 0x40c085 ; ret 0xba0c
0x000000000040c17c : jo 0x40c101 ; ret 0xb90c
0x000000000042599e : jo 0x4259aa ; ret
0x000000000042760e : jo 0x42761a ; ret
0x000000000042ab5d : jo 0x42ab69 ; ret
0x0000000000431e44 : jo 0x431ea5 ; ret
0x0000000000439c9b : jo 0x439cfc ; ret
0x00000000004533fc : jo 0x45345d ; ret
0x0000000000454894 : jo 0x45486a ; cli ; jmp rax
0x00000000004556a0 : jo 0x455662 ; cld ; call qword ptr [rdx]
0x0000000000455830 : jo 0x4557f6 ; std ; jmp qword ptr [rbx]
0x0000000000456011 : jp 0x456013 ; call rdi
0x000000000041e467 : js 0x41e426 ; and ebx, ebp ; ret 0xb2b1
0x0000000000420127 : js 0x42010e ; ret 0x8974
0x0000000000420826 : js 0x42080d ; ret 0x8a74
0x000000000042084c : js 0x420833 ; ret 0xe974
0x000000000042c54e : lcall ptr [rbx - 0x162d2583] ; ret 0x3b
0x0000000000444bf1 : lcall ptr [rsi - 7] ; ret 0xe980
0x000000000042d64e : lcall ptr [rsi] ; pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x000000000040df96 : lea eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000420314 : lea ebx, dword ptr [rax - 0x17000004] ; ret 0xfe13
0x000000000041dde7 : lea edi, dword ptr [rbp - 0x80] ; call 0x449a69
0x000000000041ab91 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000432139 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000043ce4d : lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000041ab90 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000043ce4c : lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040d134 : ljmp ptr [rdi + 0x53] ; ret 0x899e
0x0000000000449881 : ljmp ptr [rdi - 0x26] ; sbb al, -0x17 ; ret
0x000000000042aeae : ljmp ptr [rdi] ; ret 0x23da
0x0000000000454b88 : lock adc dword ptr [rax], eax ; add byte ptr [rax], ah ; loopne 0x454b93 ; call qword ptr [rax]
0x0000000000407408 : lock or dword ptr [rax], eax ; add cl, ch ; ret
0x00000000004021a3 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000043565c : lodsb al, byte ptr [rsi] ; call 0x401923
0x000000000040fdad : lodsd eax, dword ptr [rsi] ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x000000000040f3f0 : loop 0x40f3e5 ; xchg eax, esp ; xor byte ptr [rcx - 0x70f05fbb], cl ; ret 2
0x000000000043ae12 : loop 0x43adc5 ; sar dword ptr [rcx], cl ; xor byte ptr [rbp - 0x77], cl ; ret
0x0000000000405d5f : loope 0x405d6b ; movzx eax, cl ; mov rsp, rbp ; pop rbp ; ret
0x000000000041012e : loope 0x4100e9 ; xchg eax, ebp ; jmp 0x410283
0x000000000042deb5 : loope 0x42de83 ; jmp 0x430123
0x0000000000404ae8 : loopne 0x404aef ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000405625 : loopne 0x40562c ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041181a : loopne 0x411821 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000414e6e : loopne 0x414ebf ; mov ecx, dword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000414e6d : loopne 0x414ec0 ; mov ecx, dword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000041a10d : loopne 0x41a160 ; add esp, 0x1d0 ; pop rbp ; ret
0x0000000000420c08 : loopne 0x420c12 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000422293 : loopne 0x4222e6 ; lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000043183d : loopne 0x4318a3 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000432c24 : loopne 0x432c77 ; add esp, 0xa0 ; pop rbp ; ret
0x0000000000438683 : loopne 0x43868c ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000043900e : loopne 0x43905e ; add esp, 0x60 ; pop rbp ; ret
0x000000000043900d : loopne 0x43905f ; add esp, 0x60 ; pop rbp ; ret
0x000000000044f8c0 : loopne 0x44f8c7 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000450252 : loopne 0x450259 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004520fc : loopne 0x45214b ; mov esp, ebp ; pop rbp ; ret
0x00000000004520fb : loopne 0x45214c ; mov esp, ebp ; pop rbp ; ret
0x000000000045234c : loopne 0x45239b ; mov esp, ebp ; pop rbp ; ret
0x000000000045234b : loopne 0x45239c ; mov esp, ebp ; pop rbp ; ret
0x0000000000452ef5 : loopne 0x452efc ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000454b8d : loopne 0x454b8e ; call qword ptr [rax]
0x0000000000455620 : loopne 0x45568c ; cld ; jmp qword ptr [rcx]
0x0000000000404075 : mov ah, -0x17 ; ret
0x0000000000403976 : mov ah, -0x17 ; ret 0xd
0x000000000043ae11 : mov ah, -0x1e ; stosb byte ptr [rdi], al ; sar dword ptr [rcx], cl ; xor byte ptr [rbp - 0x77], cl ; ret
0x000000000042ba7d : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000042bb57 : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000041038e : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000429b05 : mov ah, 0x75 ; ret
0x000000000045582c : mov ah, 9 ; add byte ptr [rax], al ; jo 0x4557fa ; std ; jmp qword ptr [rbx]
0x0000000000432613 : mov al, -0x47 ; ret
0x000000000041012f : mov al, -0x6b ; jmp 0x410282
0x000000000043f17f : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000040b2eb : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000430a2d : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000454b78 : mov al, 0x11 ; add byte ptr [rax], al ; rcr dh, -3 ; call rax
0x0000000000419510 : mov al, 0x48 ; add esp, 0xd0 ; pop rbp ; ret
0x000000000043603e : mov al, 5 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040cebf : mov al, 8 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000043b26b : mov al, al ; movzx eax, al ; pop rbp ; ret
0x000000000045096d : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000045063a : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000045089d : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000043b32c : mov al, dl ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000043b26a : mov al, r8b ; movzx eax, al ; pop rbp ; ret
0x000000000043b034 : mov ax, r8w ; movzx eax, ax ; pop rbp ; ret
0x000000000043b039 : mov bh, -0x40 ; pop rbp ; ret
0x0000000000454888 : mov bh, 0 ; add byte ptr [rax], al ; add ch, cl ; cli ; call qword ptr [rax]
0x00000000004413a5 : mov bh, 0 ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000456091 : mov bl, -2 ; jmp qword ptr [rdx]
0x00000000004234a5 : mov bl, 0x75 ; ret
0x0000000000401569 : mov bl, 2 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000040b75c : mov byte ptr [rax - 1], cl ; ret 0x8948
0x00000000004204df : mov byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004101f1 : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401aa3 : mov byte ptr [rip + 0x25588e], 1 ; ret
0x000000000042b2ff : mov ch, byte ptr [rdx - 0x47] ; pop rbp ; pop rcx ; ret 0x1b2
0x000000000041aa04 : mov dh, -0x39 ; pop rbp ; ret
0x0000000000405d62 : mov dh, -0x3f ; mov rsp, rbp ; pop rbp ; ret
0x0000000000413e62 : mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000451604 : mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x00000000004083a0 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000041380a : mov dh, -0x40 ; pop rbp ; ret
0x000000000043b32f : mov dh, -0x40 ; pop rbx ; pop rbp ; ret
0x00000000004520ba : mov dl, -0x34 ; cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x0000000000451331 : mov dr1, word ptr [rcx + rcx*4 - 0x7bf05bbb] ; ret 2
0x0000000000401aa5 : mov ds, word ptr [rax + 0x25] ; add byte ptr [rcx], al ; ret
0x0000000000421a19 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004215ef : mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x00000000004126c5 : mov dword ptr [rbp - 0x130], ecx ; call rdx
0x0000000000414d09 : mov dword ptr [rbp - 0x140], ecx ; call rdx
0x000000000041a62f : mov dword ptr [rbp - 0x14], eax ; jmp 0x41a7ff
0x000000000044fcca : mov dword ptr [rbp - 0x14], eax ; jmp 0x44fd4b
0x0000000000418add : mov dword ptr [rbp - 0x18c], ecx ; call rdx
0x0000000000418d10 : mov dword ptr [rbp - 0x194], ecx ; call rdx
0x000000000044af29 : mov dword ptr [rbp - 0x1c], eax ; jmp 0x44b077
0x0000000000410021 : mov dword ptr [rbp - 0x34], eax ; jmp 0x410283
0x00000000004108b6 : mov dword ptr [rbp - 0x3c], eax ; jmp 0x410a48
0x0000000000410941 : mov dword ptr [rbp - 0x3c], ecx ; jmp 0x410a48
0x000000000041038c : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040443d : mov dword ptr [rbp - 0x4c], eax ; jmp 0x404747
0x00000000004353f6 : mov dword ptr [rbp - 0x4f0], esi ; call 0x401698
0x0000000000436f58 : mov dword ptr [rbp - 0x6c], eax ; jmp 0x4379ca
0x0000000000401e47 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401c41 : mov dword ptr [rbp - 0xc], eax ; jmp 0x401e11
0x0000000000410921 : mov dword ptr [rbp - 0xf4], ecx ; call rdx
0x0000000000421cf6 : mov dword ptr [rcx + 0x30], eax ; mov rsp, rbp ; pop rbp ; ret
0x000000000044acfc : mov dword ptr [rdi + 0x10], eax ; pop rbp ; ret
0x000000000041a1d0 : mov dword ptr [rdi + 0x48], esi ; pop rbp ; ret
0x000000000042189d : mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000040d68f : mov eax, 0x5b000000 ; pop rbp ; ret
0x0000000000418e7b : mov eax, 0x8498b48 ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040fa2b : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000438e8b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004048b9 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000043ce49 : mov eax, dword ptr [rbp - 0x10] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x00000000004455f5 : mov eax, dword ptr [rbp - 0x10] ; mov rsp, rbp ; pop rbp ; ret
0x000000000043905e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000043be72 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040e59e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000044fb45 : mov eax, dword ptr [rbp - 0x18] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000412a62 : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000453140 : mov eax, dword ptr [rbp - 0x1c] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000043900c : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004520fa : mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042189f : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000410a7f : mov eax, dword ptr [rbp - 0x40] ; call rax
0x00000000004182a7 : mov eax, dword ptr [rbp - 0x58] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004213df : mov eax, dword ptr [rbp - 0xc] ; add rsp, 8 ; pop rbp ; ret
0x0000000000439c95 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040f2ae : mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040f2ed : mov eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040f30d : mov eax, dword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000042189e : mov eax, dword ptr ds:[rbp - 0x38] ; pop rbp ; ret
0x000000000043b036 : mov eax, eax ; movzx eax, ax ; pop rbp ; ret
0x000000000043aa83 : mov eax, eax ; pop rbp ; ret
0x000000000043ae5a : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x00000000004137e1 : mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041ac25 : mov eax, edx ; pop rbp ; ret
0x000000000043ad7d : mov eax, esi ; and eax, edi ; xor esi, edi ; or eax, esi ; pop rbp ; ret
0x000000000043b035 : mov eax, r8d ; movzx eax, ax ; pop rbp ; ret
0x000000000042e2b8 : mov ebp, 0xe19c53ba ; ret
0x0000000000401acb : mov ebp, esp ; call rax
0x0000000000401a31 : mov ebp, esp ; ja 0x401a3c ; pop rbp ; ret
0x0000000000420457 : mov ebx, 0xc7000009 ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp qword ptr [rbx]
0x000000000044c31b : mov ecx, 0xba41a9ee ; ret
0x00000000004215ec : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x0000000000414c1b : mov ecx, dword ptr [rbp - 0x18] ; mov rcx, qword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000414e6c : mov ecx, dword ptr [rbp - 0x20] ; mov rcx, qword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000415786 : mov ecx, dword ptr [rbp - 0x28] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000410a1e : mov ecx, dword ptr [rbp - 0x38] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000418e7d : mov ecx, dword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000414c1f : mov ecx, dword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000443a5f : mov edi, 0x51b94936 ; jmp rsp
0x0000000000401ac5 : mov edi, 0x656e20 ; mov rbp, rsp ; call rax
0x0000000000401a42 : mov edi, 0x6572c8 ; jmp rax
0x0000000000401a82 : mov edi, 0x6572c8 ; jmp rdx
0x000000000041a633 : mov edi, 0xb8000001 ; ret
0x000000000042ab57 : mov edi, 0xb8000055 ; wait ; jo 0x42ab6f ; ret
0x0000000000401c45 : mov edi, 0xe8000001 ; ret 1
0x000000000043565a : mov edi, dword ptr [rbp - 0x54] ; call 0x401925
0x000000000041a1cc : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040f2e9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040f309 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000414c22 : mov edi, dword ptr [rcx] ; call rax
0x0000000000412841 : mov edi, dword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x28] ; call rax
0x0000000000401cbd : mov edi, eax ; call 0x4017d8
0x0000000000453ac7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000453ac6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000043f92e : mov edx, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000042b31b : mov edx, 0x595db993 ; ret 0x8b48
0x00000000004354d1 : mov edx, dword ptr [rbp - 0x500] ; call 0x401748
0x000000000042c192 : mov esi, 0x39443e04 ; ret 0xf41
0x000000000043f917 : mov esi, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000412844 : mov esi, dword ptr [rbp - 0x28] ; call rax
0x0000000000410a22 : mov esi, dword ptr [rcx] ; call rax
0x0000000000401a80 : mov esi, eax ; mov edi, 0x6572c8 ; jmp rdx
0x0000000000410a7c : mov esi, eax ; mov rax, qword ptr [rbp - 0x40] ; call rax
0x0000000000446747 : mov esi, es ; ret
0x000000000043cb45 : mov esp, 0x5ba9942d ; ret
0x000000000043cb87 : mov esp, 0x5ba9952d ; ret
0x00000000004021a8 : mov esp, ebp ; pop rbp ; ret
0x00000000004353f5 : mov qword ptr [rbp - 0x4f0], rsi ; call 0x401699
0x0000000000421cf5 : mov qword ptr [rcx + 0x30], rax ; mov rsp, rbp ; pop rbp ; ret
0x000000000044acfb : mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x000000000041a1cf : mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000404074 : mov r12b, -0x17 ; ret
0x0000000000403975 : mov r12b, -0x17 ; ret 0xd
0x000000000041038d : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000043cb44 : mov r12d, 0x5ba9942d ; ret
0x000000000043cb86 : mov r12d, 0x5ba9952d ; ret
0x000000000040fa2a : mov rax, qword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000438e8a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004048b8 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004455f4 : mov rax, qword ptr [rbp - 0x10] ; mov rsp, rbp ; pop rbp ; ret
0x000000000043905d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000043be71 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040e59d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000412a61 : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000043900b : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000410a7e : mov rax, qword ptr [rbp - 0x40] ; call rax
0x0000000000439c94 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040f2ad : mov rax, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040f2ec : mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040f30c : mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000043ae59 : mov rax, r11 ; pop rbx ; pop rbp ; ret
0x000000000043aa82 : mov rax, r8 ; pop rbp ; ret
0x00000000004137e0 : mov rax, rdx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041ac24 : mov rax, rdx ; pop rbp ; ret
0x0000000000401aca : mov rbp, rsp ; call rax
0x0000000000401a30 : mov rbp, rsp ; ja 0x401a3d ; pop rbp ; ret
0x0000000000415785 : mov rcx, qword ptr [rbp - 0x28] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000410a1d : mov rcx, qword ptr [rbp - 0x38] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000418e7c : mov rcx, qword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000414c1e : mov rcx, qword ptr [rcx] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000041a1cb : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040f2e8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040f308 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000414c21 : mov rdi, qword ptr [rcx] ; call rax
0x0000000000412840 : mov rdi, qword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x28] ; call rax
0x0000000000401cbc : mov rdi, rax ; call 0x4017d9
0x00000000004354d0 : mov rdx, qword ptr [rbp - 0x500] ; call 0x401749
0x0000000000412843 : mov rsi, qword ptr [rbp - 0x28] ; call rax
0x0000000000410a21 : mov rsi, qword ptr [rcx] ; call rax
0x0000000000401a7f : mov rsi, rax ; mov edi, 0x6572c8 ; jmp rdx
0x0000000000410a7b : mov rsi, rax ; mov rax, qword ptr [rbp - 0x40] ; call rax
0x00000000004021a7 : mov rsp, rbp ; pop rbp ; ret
0x0000000000438c21 : mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000044e4db : movabs byte ptr [0x7eb8000004d9e994], al ; ret 0x1d90
0x0000000000426df8 : movabs byte ptr [0x840ffffff3c48589], al ; ret 0x4b
0x0000000000454f1c : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x2d], al ; cli ; jmp rbx
0x0000000000417f0a : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; stc ; in al, dx ; ret 0xff3
0x000000000042a045 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x6a8a
0x0000000000443a7b : movsd dword ptr [rdi], dword ptr [rsi] ; jbe 0x443a3e ; push rcx ; jmp rsp
0x0000000000433e32 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x000000000041c9a6 : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x89f4
0x000000000041e0c5 : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xb9f4
0x0000000000413e61 : movzx eax, al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000451603 : movzx eax, al ; add rsp, 8 ; pop rbp ; ret
0x000000000040839f : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000413809 : movzx eax, al ; pop rbp ; ret
0x000000000043b32e : movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000043b038 : movzx eax, ax ; pop rbp ; ret
0x000000000041aa03 : movzx eax, bh ; pop rbp ; ret
0x0000000000405d61 : movzx eax, cl ; mov rsp, rbp ; pop rbp ; ret
0x000000000041aa02 : movzx eax, dil ; pop rbp ; ret
0x000000000043f728 : neg byte ptr [rsi + 0x2948e012] ; ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x00000000004232e5 : nop ; ret
0x00000000004316f2 : nop ; ret 0x148
0x0000000000431706 : nop ; ret 0x2948
0x0000000000455870 : nop ; ret 0xfffd
0x0000000000453ae8 : nop dword ptr [rax + rax] ; ret
0x0000000000435681 : or al, 0 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; call rsi
0x0000000000435657 : or al, 0 ; add byte ptr [rbx - 0x41175383], cl ; ret 0xfffc
0x0000000000440151 : or al, 0 ; add cl, ch ; ret
0x00000000004408fb : or al, 0x25 ; ret
0x000000000042ba7a : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000042bb54 : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000040429f : or al, 0xffffffffffffff8a ; push rbp ; ret
0x0000000000406f18 : or al, 0xffffffffffffffe9 ; ret
0x000000000045588d : or al, byte ptr [rax] ; add al, al ; ret 0xfffd
0x00000000004203b9 : or al, byte ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp rdi
0x00000000004358c5 : or al, byte ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; call rsi
0x000000000044549d : or al, byte ptr [rbp + 0x39] ; enter 0xf41, -0x6b ; ret 0x8445
0x000000000041a611 : or bh, al ; in al, dx ; ret 0xe8ff
0x000000000041735d : or byte ptr [r15], 0x8f ; ret 6
0x0000000000444867 : or byte ptr [r8 - 0x75], 0x51 ; adc byte ptr [rax + 1], cl ; ret 0x8948
0x000000000045278c : or byte ptr [rax + 0x69], cl ; ret 0x101
0x0000000000444868 : or byte ptr [rax - 0x75], 0x51 ; adc byte ptr [rax + 1], cl ; ret 0x8948
0x00000000004215f0 : or byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000045569d : or byte ptr [rax], al ; add byte ptr [rax - 0x43], dh ; cld ; call qword ptr [rdx]
0x0000000000436538 : or byte ptr [rax], al ; add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x000000000040c927 : or byte ptr [rbx + 0x45], ch ; sub al, -0x47 ; push rsp ; ret 0x8be9
0x0000000000405286 : or byte ptr [rcx + 0x2ff9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000405367 : or byte ptr [rcx + 0x2ff9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x00000000004053f4 : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000041735e : or byte ptr [rdi], 0x8f ; ret 6
0x000000000041bb9c : or byte ptr [rsi + 0x48e28948], 0x83 ; ret 0x48f0
0x000000000045334c : or cl, ch ; ret 0
0x00000000004082eb : or dword ptr [rax - 0x75], ecx ; adc dword ptr [rax + 1], ecx ; ret 0x8948
0x00000000004082b5 : or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x0000000000421cf4 : or dword ptr [rax - 0x77], ecx ; xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000420458 : or dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp qword ptr [rbx]
0x000000000045582d : or dword ptr [rax], eax ; add byte ptr [rax - 0x3f], dh ; std ; jmp qword ptr [rbx]
0x0000000000407409 : or dword ptr [rax], eax ; add cl, ch ; ret
0x00000000004358c4 : or eax, 0xc700000a ; test dword ptr [rdi + rdi*8 - 1], esp ; call rsi
0x000000000041e215 : or eax, 0xc8b80000 ; ret 0xdbca
0x0000000000435540 : or eax, 0xd8b80000 ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000000004357cd : or eax, dword ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; call rsi
0x000000000045598d : or eax, dword ptr [rax] ; add byte ptr [rax - 0x3a], dl ; std ; call rdx
0x000000000043aa80 : or eax, edi ; mov rax, r8 ; pop rbp ; ret
0x000000000043ad83 : or eax, esi ; pop rbp ; ret
0x000000000043ae57 : or ebx, eax ; mov rax, r11 ; pop rbx ; pop rbp ; ret
0x000000000042189b : or edi, eax ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000420d48 : or esi, edi ; dec dword ptr [rax - 0x41] ; ret 0x7f0f
0x000000000043ae56 : or r11, r8 ; mov rax, r11 ; pop rbx ; pop rbp ; ret
0x0000000000420d47 : or r14d, r15d ; dec dword ptr [rax - 0x41] ; ret 0x7f0f
0x000000000043aa7f : or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x000000000041aa00 : out 1, eax ; movzx eax, dil ; pop rbp ; ret
0x000000000042d45b : out dx, al ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x000000000045063c : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000416399 : out dx, eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x0000000000416518 : out dx, eax ; add edi, eax ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x000000000045096f : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000432612 : out dx, eax ; mov al, -0x47 ; ret
0x000000000043f919 : outsb dx, byte ptr [rsi] ; add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000408a92 : outsb dx, byte ptr [rsi] ; push rbx ; ret 0x899e
0x0000000000410319 : outsb dx, byte ptr [rsi] ; ret 0x280f
0x000000000042e545 : outsb dx, byte ptr [rsi] ; ret 0x4861
0x0000000000423196 : outsb dx, byte ptr [rsi] ; ret 0x8961
0x000000000042e590 : outsb dx, byte ptr [rsi] ; ret 0xe961
0x0000000000437dc1 : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000408ae6 : outsd dx, dword ptr [rsi] ; push rbx ; ret 0x899e
0x000000000040c01e : outsd dx, dword ptr [rsi] ; push rbx ; ret 0xb99e
0x000000000043f91c : outsd dx, dword ptr [rsi] ; ret 0x4815
0x00000000004047e2 : outsd dx, dword ptr [rsi] ; ret 0x9d87
0x0000000000438c1c : pop ax ; jb 0x438c51 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000042f3f9 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000453adc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000043183f : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042f3fb : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000453ade : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000042f3fd : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000453ae0 : pop r14 ; pop r15 ; ret
0x0000000000406f00 : pop r14 ; pop rbp ; ret
0x000000000042f3ff : pop r15 ; pop rbp ; ret
0x0000000000453ae2 : pop r15 ; ret
0x0000000000438c1d : pop rax ; jb 0x438c50 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000401aa2 : pop rbp ; mov byte ptr [rip + 0x25588e], 1 ; ret
0x0000000000401a41 : pop rbp ; mov edi, 0x6572c8 ; jmp rax
0x0000000000401a7e : pop rbp ; mov rsi, rax ; mov edi, 0x6572c8 ; jmp rdx
0x0000000000453adb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000042f3fc : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000453adf : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000042b302 : pop rbp ; pop rcx ; ret 0x1b2
0x00000000004275d5 : pop rbp ; pop rcx ; ret 0x8589
0x000000000042b31e : pop rbp ; pop rcx ; ret 0x8b48
0x0000000000401a35 : pop rbp ; ret
0x0000000000442233 : pop rbp ; stc ; ret 0x8980
0x000000000043183e : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000430535 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406eff : pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040d693 : pop rbx ; pop rbp ; ret
0x0000000000436540 : pop rbx ; ret
0x000000000042b303 : pop rcx ; ret 0x1b2
0x00000000004259d6 : pop rcx ; ret 0x8589
0x000000000042b31f : pop rcx ; ret 0x8b48
0x000000000042d650 : pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x000000000042f400 : pop rdi ; pop rbp ; ret
0x0000000000453ae3 : pop rdi ; ret
0x00000000004203b8 : pop rdx ; or al, byte ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp rdi
0x000000000042f3fe : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000453ae1 : pop rsi ; pop r15 ; ret
0x0000000000406f01 : pop rsi ; pop rbp ; ret
0x000000000044bdad : pop rsi ; ret
0x0000000000442287 : pop rsi ; stc ; ret 0x8980
0x0000000000444bf2 : pop rsi ; stc ; ret 0xe980
0x000000000042f3fa : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000453add : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000431840 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004259d5 : pop rsp ; pop rcx ; ret 0x8589
0x0000000000410330 : pop rsp ; ret 0xf66
0x0000000000439bd8 : popfq ; push rcx ; ret 0x8929
0x0000000000439c06 : popfq ; push rcx ; ret 0xb929
0x0000000000451485 : popfq ; ret 0xd284
0x00000000004162e5 : push -0x38fffffb ; test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x000000000042b300 : push -0x47 ; pop rbp ; pop rcx ; ret 0x1b2
0x000000000044e34f : push -0x47fffffa ; ret
0x000000000042d4ea : push -0x75425eeb ; push rbp ; ret
0x000000000042a048 : push -0x77 ; test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x0000000000456171 : push -1 ; jmp qword ptr [rax]
0x0000000000454b77 : push qword ptr [rax - 0x3fffffef] ; fdivp st(5) ; call rax
0x00000000004453c0 : push qword ptr [rsi] ; stosd dword ptr [rdi], eax ; fsubr st(1) ; ret
0x0000000000454b87 : push rax ; adc dword ptr [rax], eax ; add byte ptr [rax], ah ; loopne 0x454b94 ; call qword ptr [rax]
0x0000000000441fe7 : push rax ; jmp rsp
0x000000000040e5a4 : push rax ; pop rbp ; ret
0x0000000000453ed4 : push rax ; ret
0x00000000004054c2 : push rbp ; call 0x49035414
0x000000000043aba4 : push rbp ; enter 0xf41, 0x44 ; ret 0x4589
0x0000000000452e81 : push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x48f0
0x000000000041175c : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x10
0x0000000000410048 : push rbp ; fmul dword ptr [rax - 1] ; ret 0x8948
0x000000000040b75b : push rbp ; mov byte ptr [rax - 1], cl ; ret 0x8948
0x0000000000401ac4 : push rbp ; mov edi, 0x656e20 ; mov rbp, rsp ; call rax
0x000000000040406c : push rbp ; ret
0x000000000042d486 : push rbp ; ret 0xd284
0x0000000000418086 : push rbp ; shr al, 1 ; ret
0x000000000042ba7f : push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000042bb59 : push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000043a8c2 : push rbx ; ret 0x48b9
0x0000000000408a93 : push rbx ; ret 0x899e
0x000000000043a2f2 : push rbx ; ret 0x89b9
0x00000000004087ba : push rbx ; ret 0x8be9
0x000000000043a8a6 : push rbx ; ret 0xb2b9
0x000000000040c01f : push rbx ; ret 0xb99e
0x0000000000444245 : push rcx ; adc byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000435a00 : push rcx ; imul edi, dword ptr [rip], 0xf ; xchg eax, ebp ; ret 0xd284
0x0000000000442eff : push rcx ; jmp rsp
0x0000000000435680 : push rcx ; or al, 0 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; call rsi
0x0000000000439b29 : push rcx ; ret 0x8929
0x0000000000439c07 : push rcx ; ret 0xb929
0x0000000000440f23 : push rcx ; sbb byte ptr [rbp + 1], cl ; ret 0x894d
0x000000000043f91b : push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000044b00a : push rdx ; add dword ptr [rax], 0xec894800 ; pop rbp ; ret
0x000000000040880e : push rsp ; ret 0x8be9
0x0000000000439b28 : pushfq ; push rcx ; ret 0x8929
0x000000000043f185 : pushfq ; ret 0xd284
0x0000000000435fb1 : pushfq ; sub eax, 0x9a6b3ab9 ; ret
0x0000000000454c78 : rcl byte ptr [rip + 0x65100000], -2 ; jmp rax
0x0000000000455300 : rcr al, -5 ; jmp rbx
0x0000000000454b7c : rcr dh, -3 ; call rax
0x0000000000401571 : ret
0x0000000000401fbf : ret 0
0x0000000000411760 : ret 0x10
0x0000000000448aa9 : ret 0x1002
0x000000000045278f : ret 0x101
0x000000000044b4c1 : ret 0x12
0x0000000000448975 : ret 0x1252
0x00000000004316f3 : ret 0x148
0x0000000000441449 : ret 0x18
0x000000000042e654 : ret 0x1a
0x00000000004238cd : ret 0x1add
0x000000000041e5f7 : ret 0x1b2
0x000000000040fd3d : ret 0x1cdd
0x000000000044e8f0 : ret 0x1d90
0x000000000040fc65 : ret 0x1e1
0x000000000040a79a : ret 0x22
0x000000000042421a : ret 0x23da
0x0000000000401912 : ret 0x2558
0x0000000000401712 : ret 0x2559
0x0000000000430f18 : ret 0x279e
0x000000000041031a : ret 0x280f
0x00000000004082b8 : ret 0x2948
0x000000000042d654 : ret 0x2a
0x00000000004446fe : ret 0x2ce8
0x000000000042ba82 : ret 0x2d50
0x000000000041de73 : ret 0x3040
0x000000000041142a : ret 0x3504
0x000000000042c554 : ret 0x3b
0x000000000041d68d : ret 0x3c58
0x00000000004295b5 : ret 0x3e
0x0000000000407479 : ret 0x3e99
0x000000000040a152 : ret 0x42f
0x0000000000452bc1 : ret 0x43dd
0x000000000044ad60 : ret 0x4449
0x0000000000401cc5 : ret 0x453b
0x000000000043aba9 : ret 0x4589
0x000000000041d346 : ret 0x4777
0x000000000041a74f : ret 0x4802
0x000000000040fa00 : ret 0x4810
0x000000000043f91e : ret 0x4815
0x000000000044135d : ret 0x4818
0x0000000000402c24 : ret 0x4844
0x000000000042e546 : ret 0x4861
0x0000000000403ed3 : ret 0x486c
0x000000000043a8c3 : ret 0x48b9
0x000000000044b691 : ret 0x48c
0x0000000000443abb : ret 0x48c0
0x00000000004120b7 : ret 0x48c3
0x000000000040200b : ret 0x48f0
0x0000000000445130 : ret 0x4ae8
0x0000000000426e01 : ret 0x4b
0x0000000000432417 : ret 0x4cc0
0x000000000042f458 : ret 0x4cf0
0x0000000000437b3c : ret 0x4f0b
0x000000000044d647 : ret 0x5452
0x000000000042184b : ret 0x5589
0x000000000040c9d7 : ret 0x558a
0x00000000004417b4 : ret 0x581e
0x000000000042bd0a : ret 0x5966
0x00000000004338d6 : ret 0x5aa2
0x0000000000436797 : ret 0x5bc6
0x000000000044c0a1 : ret 0x6044
0x00000000004520bf : ret 0x61
0x0000000000422f66 : ret 0x6a8a
0x000000000044a83c : ret 0x6ee8
0x000000000040c9ef : ret 0x6fb9
0x000000000044d5d8 : ret 0x701
0x0000000000422c1e : ret 0x77a8
0x0000000000423d81 : ret 0x7a8a
0x000000000042a9fb : ret 0x7b7f
0x0000000000420d4d : ret 0x7f0f
0x00000000004313aa : ret 0x8041
0x00000000004315f2 : ret 0x8141
0x0000000000418263 : ret 0x8148
0x000000000042c914 : ret 0x822d
0x000000000041dad1 : ret 0x8237
0x0000000000417c92 : ret 0x8348
0x000000000040559a : ret 0x840
0x000000000041ea80 : ret 0x8445
0x0000000000409e0a : ret 0x84d8
0x0000000000404909 : ret 0x8589
0x00000000004048fb : ret 0x858b
0x00000000004494a0 : ret 0x85c7
0x00000000004106e9 : ret 0x86a5
0x000000000040558b : ret 0x8840
0x000000000043ab87 : ret 0x8844
0x0000000000453509 : ret 0x8845
0x000000000044d5f5 : ret 0x8904
0x0000000000409d64 : ret 0x890c
0x0000000000439b2a : ret 0x8929
0x000000000041a2c6 : ret 0x8938
0x0000000000423993 : ret 0x8940
0x00000000004209a2 : ret 0x8944
0x00000000004054c6 : ret 0x8948
0x000000000043df3f : ret 0x894a
0x0000000000440f27 : ret 0x894d
0x0000000000423197 : ret 0x8961
0x0000000000402b2b : ret 0x896c
0x000000000041f019 : ret 0x8974
0x0000000000442235 : ret 0x8980
0x0000000000408a94 : ret 0x899e
0x000000000041c1ab : ret 0x89b1
0x000000000043a2f3 : ret 0x89b9
0x000000000041c9a7 : ret 0x89f4
0x000000000043f538 : ret 0x8a44
0x000000000043f435 : ret 0x8a4a
0x0000000000420828 : ret 0x8a74
0x0000000000413c66 : ret 0x8b48
0x000000000041e487 : ret 0x8bb1
0x00000000004087bb : ret 0x8be9
0x0000000000435422 : ret 0x8e8
0x000000000043ae32 : ret 0x949
0x000000000041e613 : ret 0x958a
0x00000000004047e3 : ret 0x9d87
0x0000000000455404 : ret 0xa
0x000000000041c839 : ret 0xa2bc
0x000000000042bb5c : ret 0xa30b
0x000000000044fc0f : ret 0xac60
0x0000000000435d7c : ret 0xaee8
0x000000000043570f : ret 0xb
0x0000000000403eb9 : ret 0xb0
0x000000000043627a : ret 0xb0e8
0x000000000041e46b : ret 0xb2b1
0x000000000043a8a7 : ret 0xb2b9
0x000000000043fb78 : ret 0xb2e8
0x0000000000453112 : ret 0xb60f
0x000000000042d460 : ret 0xb740
0x0000000000438c17 : ret 0xb848
0x000000000044e501 : ret 0xb904
0x000000000040c17e : ret 0xb90c
0x0000000000439c08 : ret 0xb929
0x000000000042b690 : ret 0xb940
0x00000000004143cb : ret 0xb948
0x000000000043f3c2 : ret 0xb94a
0x0000000000403f2f : ret 0xb96c
0x000000000040c020 : ret 0xb99e
0x000000000041e0c6 : ret 0xb9f4
0x000000000040c102 : ret 0xba0c
0x000000000040c623 : ret 0xbe48
0x0000000000440064 : ret 0xbe70
0x000000000042dadc : ret 0xbf48
0x0000000000440982 : ret 0xc
0x0000000000401a65 : ret 0xc148
0x000000000044e247 : ret 0xc3e8
0x000000000040243a : ret 0xc3fa
0x0000000000452302 : ret 0xc493
0x0000000000404871 : ret 0xca21
0x0000000000404509 : ret 0xca29
0x00000000004520c5 : ret 0xccb2
0x000000000044c7fe : ret 0xce8
0x0000000000403978 : ret 0xd
0x0000000000403edf : ret 0xd284
0x000000000043db85 : ret 0xd618
0x0000000000403baa : ret 0xd709
0x000000000041c73e : ret 0xdbca
0x000000000040528f : ret 0xe280
0x0000000000435a65 : ret 0xe2b9
0x000000000040c747 : ret 0xe3e8
0x000000000041a2f3 : ret 0xe8ff
0x000000000042d332 : ret 0xe940
0x000000000042e591 : ret 0xe961
0x0000000000403f53 : ret 0xe96c
0x000000000042084e : ret 0xe974
0x0000000000444bf4 : ret 0xe980
0x0000000000445a91 : ret 0xe9e8
0x00000000004243bd : ret 0xea51
0x00000000004520b7 : ret 0xea81
0x000000000043014c : ret 0xee8
0x000000000041a695 : ret 0xf280
0x0000000000403afd : ret 0xf281
0x00000000004361dc : ret 0xf3e9
0x000000000042c197 : ret 0xf41
0x0000000000418dac : ret 0xf4e9
0x000000000044b429 : ret 0xf62a
0x0000000000410331 : ret 0xf66
0x000000000044bd91 : ret 0xf738
0x000000000043ce29 : ret 0xf748
0x000000000044638e : ret 0xf7c7
0x000000000042e0e5 : ret 0xf7f3
0x000000000044c312 : ret 0xf8e8
0x000000000042c86e : ret 0xfc75
0x000000000042031a : ret 0xfe13
0x0000000000417ebf : ret 0xff3
0x000000000042e0df : ret 0xffa5
0x000000000042c868 : ret 0xffc4
0x000000000042ba88 : ret 0xffd5
0x000000000042bb62 : ret 0xffd8
0x000000000042c91a : ret 0xffd9
0x000000000042bd04 : ret 0xffe0
0x000000000041ed6d : ret 0xfff9
0x000000000042a9f5 : ret 0xfffa
0x00000000004353fe : ret 0xfffc
0x0000000000454add : ret 0xfffd
0x0000000000454d9d : ret 0xffff
0x0000000000400718 : ret 1
0x000000000040f3f9 : ret 2
0x0000000000418012 : ret 3
0x000000000044572c : ret 4
0x0000000000402d5b : ret 6
0x000000000042f854 : ret 8
0x0000000000449bac : ret 9
0x000000000043f8fd : rol byte ptr [rax + 0x48f22948], -0x7f ; ret 1
0x0000000000416f14 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000439f4c : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041121f : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000043b31a : rol byte ptr [rbp + 9], 1 ; ret
0x0000000000403f81 : rol byte ptr [rcx - 0x80], -0x20 ; add dword ptr [rax + rcx*4 + 0x45], eax ; ret
0x000000000041a111 : rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000043f8fc : rol byte ptr ds:[rax + 0x48f22948], -0x7f ; ret 1
0x0000000000455890 : rol dl, -3 ; call rdi
0x000000000041ed63 : rol dword ptr [rdi - 0x78], -0x7b ; ret
0x0000000000411f90 : ror byte ptr [r8 - 0x75], 0 ; mov rsp, rbp ; pop rbp ; ret
0x000000000041283e : ror byte ptr [r8 - 0x75], 0x39 ; mov rsi, qword ptr [rbp - 0x28] ; call rax
0x0000000000453964 : ror byte ptr [r8 - 0x77], 1 ; ret 0x2948
0x0000000000438c14 : ror byte ptr [rax + 1], cl ; ret 0xb848
0x0000000000401a6c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401a7b ; pop rbp ; ret
0x0000000000411f91 : ror byte ptr [rax - 0x75], 0 ; mov rsp, rbp ; pop rbp ; ret
0x000000000041283f : ror byte ptr [rax - 0x75], 0x39 ; mov rsi, qword ptr [rbp - 0x28] ; call rax
0x00000000004083a1 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x0000000000410a7a : ror byte ptr [rax - 0x77], -0x3a ; mov rax, qword ptr [rbp - 0x40] ; call rax
0x0000000000453965 : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000413e63 : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x0000000000404ae4 : ror byte ptr [rax - 0x7f], -0x3c ; loopne 0x404af3 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000405621 : ror byte ptr [rax - 0x7f], -0x3c ; loopne 0x405630 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004101ed : ror byte ptr [rax - 0x7f], -0x3c ; mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000043ae55 : ror byte ptr [rbp + 9], -0x3d ; mov rax, r11 ; pop rbx ; pop rbp ; ret
0x0000000000456110 : ror byte ptr [rbx - 1], 1 ; jmp qword ptr [rcx]
0x000000000042189a : ror byte ptr [rcx], -0x39 ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000045310f : ror byte ptr [rdi], -0x6c ; ret 0xb60f
0x000000000043b32d : ror byte ptr [rdi], 1 ; mov dh, -0x40 ; pop rbx ; pop rbp ; ret
0x000000000043ae2f : ror dword ptr [rax + 0x21], cl ; ret 0x949
0x0000000000405d63 : ror dword ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x000000000043f72e : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x00000000004322d0 : ror dword ptr [rcx - 0x7d], cl ; ret
0x0000000000403ba6 : ror esi, cl ; xor dword ptr [rcx], esp ; ret 0xd709
0x0000000000403ba5 : ror r14, cl ; xor dword ptr [rcx], esp ; ret 0xd709
0x000000000045059c : sahf ; ret 0xd284
0x0000000000401a3e : sal byte ptr [rsp + rsi*8 + 0x5d], -0x41 ; enter 0x6572, 0 ; jmp rax
0x000000000041e5f4 : salc ; adc ah, al ; ret 0x1b2
0x000000000041c385 : salc ; adc ah, al ; ret 0x8589
0x000000000041e610 : salc ; adc ah, al ; ret 0x958a
0x0000000000454ad4 : sar byte ptr [rbp + rdi*8 + 0xf20ff], 1 ; add byte ptr [rax], ah ; ret 0xfffd
0x000000000041ed5d : sar dh, -1 ; call rdi
0x000000000041edbe : sar dh, -1 ; call rdx
0x000000000041ecd1 : sar dh, -1 ; call rsp
0x000000000041e59a : sar dh, -1 ; jmp qword ptr [rsi]
0x000000000043ae14 : sar dword ptr [rcx], cl ; xor byte ptr [rbp - 0x77], cl ; ret
0x000000000043c828 : sar dword ptr [rip + 0x45c6a0d8], 1 ; ret
0x0000000000401a6e : sar eax, 1 ; jne 0x401a79 ; pop rbp ; ret
0x000000000042d651 : sar ebp, -0x17 ; ret 0x2a
0x0000000000454895 : sar edx, 1 ; jmp rax
0x0000000000454f21 : sar edx, cl ; jmp rbx
0x0000000000401a6d : sar rax, 1 ; jne 0x401a7a ; pop rbp ; ret
0x000000000041e482 : sbb ah, byte ptr [rdx - 0x47] ; and ebx, ebp ; ret 0x8bb1
0x0000000000449884 : sbb al, -0x17 ; ret
0x000000000043610a : sbb al, -0x73 ; sbb ecx, ebp ; ret
0x00000000004556f8 : sbb al, 0 ; add byte ptr [rax], al ; test byte ptr [rax], cl ; add byte ptr [rax], al ; ret
0x0000000000432610 : sbb al, 0x41 ; out dx, eax ; mov al, -0x47 ; ret
0x000000000044abbb : sbb al, 1 ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000440f24 : sbb byte ptr [rbp + 1], cl ; ret 0x894d
0x000000000042d551 : sbb cl, ch ; ret
0x0000000000438463 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004533f5 : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000412a5d : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000431660 : sbb ecx, dword ptr [rax - 0x7f] ; ret
0x000000000043610c : sbb ecx, ebp ; ret
0x0000000000420a64 : scasb al, byte ptr [rdi] ; add eax, dword ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp qword ptr [rbx]
0x0000000000413804 : sete al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000413806 : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000455be0 : shl byte ptr [rdi], -2 ; call rdx
0x000000000041034f : shl dword ptr [rsi + 0xf], 0x5c ; ret 0xf66
0x0000000000418087 : shr al, 1 ; ret
0x000000000042c552 : shr cl, cl ; ret 0x3b
0x00000000004175f9 : stc ; in al, dx ; ret 0x8589
0x0000000000417f0c : stc ; in al, dx ; ret 0xff3
0x000000000041c36b : stc ; ret
0x000000000042a38d : stc ; ret 0x77a8
0x0000000000442234 : stc ; ret 0x8980
0x0000000000444bf3 : stc ; ret 0xe980
0x000000000041e465 : stc ; xor eax, 0xeb21b978 ; ret 0xb2b1
0x0000000000454b8e : std ; call qword ptr [rax]
0x00000000004559b2 : std ; call qword ptr [rbx]
0x0000000000454b7e : std ; call rax
0x0000000000455892 : std ; call rdi
0x0000000000455992 : std ; call rdx
0x0000000000454ad6 : std ; jmp qword ptr [rax]
0x0000000000455832 : std ; jmp qword ptr [rbx]
0x0000000000454ac6 : std ; jmp rax
0x0000000000454b76 : std ; push qword ptr [rax - 0x3fffffef] ; fdivp st(5) ; call rax
0x0000000000454b86 : std ; push rax ; adc dword ptr [rax], eax ; add byte ptr [rax], ah ; loopne 0x454b95 ; call qword ptr [rax]
0x0000000000430f17 : std ; ret 0x279e
0x0000000000455082 : sti ; call qword ptr [rcx]
0x0000000000455162 : sti ; call qword ptr [rdx]
0x0000000000455302 : sti ; jmp rbx
0x00000000004175f8 : sti ; stc ; in al, dx ; ret 0x8589
0x0000000000440dff : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; or al, 0x25 ; ret
0x000000000043ae13 : stosb byte ptr [rdi], al ; sar dword ptr [rcx], cl ; xor byte ptr [rbp - 0x77], cl ; ret
0x00000000004453c2 : stosd dword ptr [rdi], eax ; fsubr st(1) ; ret
0x000000000040c92a : sub al, -0x47 ; push rsp ; ret 0x8be9
0x000000000040d8de : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000455c00 : sub byte ptr [rax], -2 ; call qword ptr [rdx]
0x000000000044fd16 : sub byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040d7c8 : sub byte ptr [rax], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000042ba85 : sub byte ptr [rbp - 0x7f], bh ; ret 0xffd5
0x0000000000455c01 : sub dh, bh ; call qword ptr [rdx]
0x000000000042ba7b : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000042bb55 : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000042c915 : sub eax, 0x81268e82 ; ret 0xffd9
0x0000000000435fb2 : sub eax, 0x9a6b3ab9 ; ret
0x000000000040315c : sub eax, 0xe9000010 ; ret
0x000000000043a8bc : sub ebx, dword ptr [rdi + 0x7db91865] ; push rbx ; ret 0x48b9
0x0000000000438c1f : sub edx, edi ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000453b41 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000453b40 : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000410613 : test ah, dh ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x00000000004182a9 : test al, -0x75 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000042ba80 : test al, -0x7f ; ret 0x2d50
0x000000000042bb5a : test al, -0x7f ; ret 0xa30b
0x000000000041a047 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000043f1d3 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000431cee : test al, 0x48 ; add esp, 0x80 ; pop rbp ; ret
0x000000000042e2b6 : test al, 0x48 ; mov ebp, 0xe19c53ba ; ret
0x0000000000437cb8 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000044e794 : test al, 3 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000041548d : test bl, dh ; add al, 0 ; add cl, ch ; ret 1
0x000000000041735a : test byte ptr [r9 - 0x70f07fb3], r9b ; ret 6
0x00000000004552fc : test byte ptr [rax + rax], al ; add al, al ; fdivr st(3) ; jmp rbx
0x0000000000440550 : test byte ptr [rax - 0x16fffff9], cl ; ret 1
0x0000000000453aea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004556fc : test byte ptr [rax], cl ; add byte ptr [rax], al ; ret
0x000000000040fdac : test byte ptr [rbp - 0x16fffffd], ch ; ret 1
0x000000000041735b : test byte ptr [rcx - 0x70f07fb3], cl ; ret 6
0x00000000004228fc : test byte ptr [rcx], ch ; ret 0
0x0000000000449ba6 : test byte ptr [rdi - 0x16fffff1], ah ; ret 9
0x000000000040355c : test byte ptr [rdi - 0x16fffff2], ah ; ret 1
0x000000000040508f : test byte ptr [rdi], ah ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000040315b : test byte ptr [rip - 0x16fffff0], ch ; ret
0x000000000040f5a2 : test cl, ah ; add dword ptr [rax], eax ; add cl, ch ; ret 1
0x0000000000407407 : test dh, al ; or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000418887 : test dh, dl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x00000000004228f6 : test dword ptr [rax + 0xffffffd], esp ; test byte ptr [rcx], ch ; ret 0
0x000000000040a793 : test dword ptr [rcx + rdi*8 - 0x7bf00001], eax ; ret 0x22
0x000000000044934c : test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rbx
0x0000000000449565 : test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rsi
0x0000000000437dc6 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000042045c : test dword ptr [rdi + rdi*8 - 1], edx ; jmp qword ptr [rbx]
0x0000000000420def : test dword ptr [rdi + rdi*8 - 1], edx ; jmp rbx
0x00000000004203bd : test dword ptr [rdi + rdi*8 - 1], edx ; jmp rdi
0x0000000000416271 : test dword ptr [rdi + rdi*8 - 1], esi ; call qword ptr [rax]
0x000000000043190a : test dword ptr [rdi + rdi*8 - 1], esp ; call qword ptr [rbx]
0x000000000043539e : test dword ptr [rdi + rdi*8 - 1], esp ; call rax
0x0000000000435685 : test dword ptr [rdi + rdi*8 - 1], esp ; call rsi
0x0000000000436113 : test dword ptr [rdi + rdi*8 - 1], esp ; jmp qword ptr [rcx]
0x000000000042d32b : test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x00000000004481e8 : test dword ptr [rsi + rdi*8 + 0x2f11ffff], edx ; ret
0x000000000040d130 : test dword ptr [rsi + rdi*8 + 0x536fffff], eax ; ret 0x899e
0x000000000041c99f : test dword ptr [rsi + rdi*8 + 0x612dffff], esi ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x89f4
0x000000000041c9f3 : test dword ptr [rsi + rdi*8 + 0x622dffff], esi ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x89f4
0x000000000042e58a : test dword ptr [rsi + rdi*8 + 0x6e94ffff], esp ; ret 0xe961
0x000000000041c363 : test dword ptr [rsi + rdi*8 + 0x7d2dffff], esi ; cld ; stc ; ret
0x000000000041c3b7 : test dword ptr [rsi + rdi*8 + 0x7e2dffff], esi ; cld ; stc ; ret
0x000000000041c37f : test dword ptr [rsi + rdi*8 - 0x29d20001], esi ; adc ah, al ; ret 0x8589
0x000000000041c32b : test dword ptr [rsi + rdi*8 - 0x2ad20001], esi ; adc ah, al ; ret 0x8589
0x000000000041c78b : test dword ptr [rsi + rdi*8 - 0x37d20001], esi ; ret 0xdbca
0x000000000041c737 : test dword ptr [rsi + rdi*8 - 0x38d20001], esi ; ret 0xdbca
0x000000000041d393 : test dword ptr [rsi + rdi*8 - 0x3ad20001], esi ; ret 0x4777
0x000000000041d33f : test dword ptr [rsi + rdi*8 - 0x3bd20001], esi ; ret 0x4777
0x000000000044a12f : test dword ptr [rsi + rdi*8 - 0x7bf00001], edi ; ret
0x000000000042a04a : test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x000000000041cd7e : test dword ptr [rsp + rdi*8 - 0x7bf00001], eax ; ret
0x000000000042e53f : test eax, 0xb9dd5cac ; xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x000000000042c54f : wait ; jge 0x42c531 ; shr cl, cl ; ret 0x3b
0x0000000000403b0c : wait ; jmp 0x31bcd3
0x000000000042760d : wait ; jo 0x42761b ; ret
0x000000000042ab5c : wait ; jo 0x42ab6a ; ret
0x000000000043f918 : xchg dword ptr [rsi + 4], ebp ; push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000410130 : xchg eax, ebp ; jmp 0x410281
0x000000000041ea7f : xchg eax, ebp ; ret 0x8445
0x000000000040558a : xchg eax, ebp ; ret 0x8840
0x0000000000403ede : xchg eax, ebp ; ret 0xd284
0x000000000040528e : xchg eax, ebp ; ret 0xe280
0x0000000000423195 : xchg eax, ebx ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x0000000000429a95 : xchg eax, ebx ; ret
0x0000000000429cc5 : xchg eax, ecx ; ret
0x000000000043ee99 : xchg eax, edi ; ret 0xd284
0x000000000043553f : xchg eax, edx ; or eax, 0xd8b80000 ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000423515 : xchg eax, edx ; ret
0x00000000004313bf : xchg eax, edx ; ret 0x8445
0x0000000000437cbe : xchg eax, edx ; ret 0xd284
0x000000000044c31a : xchg eax, esi ; mov ecx, 0xba41a9ee ; ret
0x000000000043a95e : xchg eax, esi ; ret 0xd284
0x0000000000418da8 : xchg eax, esp ; int 6
0x0000000000436f5a : xchg eax, esp ; jmp 0x4379c8
0x0000000000436e97 : xchg eax, esp ; jmp 0x4379ca
0x000000000042e544 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x0000000000429e15 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x000000000042e58f : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0xe961
0x000000000044c15d : xchg eax, esp ; ret
0x00000000004313a9 : xchg eax, esp ; ret 0x8041
0x00000000004409c8 : xchg eax, esp ; ret 0x8445
0x0000000000404907 : xchg eax, esp ; ret 0x8589
0x00000000004048f9 : xchg eax, esp ; ret 0x858b
0x0000000000453111 : xchg eax, esp ; ret 0xb60f
0x000000000042d45e : xchg eax, esp ; ret 0xb740
0x000000000040b2f1 : xchg eax, esp ; ret 0xd284
0x000000000040536f : xchg eax, esp ; ret 0xe280
0x0000000000403f80 : xchg eax, esp ; rol byte ptr [rcx - 0x80], -0x20 ; add dword ptr [rax + rcx*4 + 0x45], eax ; ret
0x0000000000413805 : xchg eax, esp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000040f3f2 : xchg eax, esp ; xor byte ptr [rcx - 0x70f05fbb], cl ; ret 2
0x0000000000418da7 : xchg eax, r12d ; int 6
0x0000000000436f59 : xchg eax, r12d ; jmp 0x4379c9
0x0000000000455081 : xchg ebx, edi ; call qword ptr [rcx]
0x00000000004120af : xlatb ; add al, 0 ; add byte ptr [rbx - 0x3dd247bb], cl ; ret
0x0000000000433e31 : xlatb ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x000000000043aa7e : xlatb ; or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x0000000000405cc4 : xor al, 0x25 ; jae 0x405d36 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000041eb8d : xor al, 0x72 ; jl 0x41eb50 ; ret 0x8237
0x00000000004559ac : xor al, 0xb ; add byte ptr [rax], al ; adc al, cl ; std ; call qword ptr [rbx]
0x000000000042d459 : xor al, byte ptr [rbx - 0x6bf0fd12] ; ret 0xb740
0x0000000000421cf7 : xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000418083 : xor byte ptr [rax - 0x75], cl ; push rbp ; shr al, 1 ; ret
0x0000000000421cf8 : xor byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000043ae16 : xor byte ptr [rbp - 0x77], cl ; ret
0x000000000040f3f3 : xor byte ptr [rcx - 0x70f05fbb], cl ; ret 2
0x0000000000456150 : xor byte ptr [rdi - 1], cl ; call qword ptr [rdx]
0x0000000000456170 : xor byte ptr [rdx - 1], ch ; jmp qword ptr [rax]
0x0000000000403ba8 : xor dword ptr [rcx], esp ; ret 0xd709
0x000000000041e466 : xor eax, 0xeb21b978 ; ret 0xb2b1
0x000000000043aa7d : xor edi, edx ; or r8, rdi ; mov rax, r8 ; pop rbp ; ret
0x000000000043ad81 : xor esi, edi ; or eax, esi ; pop rbp ; ret
