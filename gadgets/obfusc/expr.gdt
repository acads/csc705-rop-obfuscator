0x0000000000435db0 : adc bl, dl ; cld ; jmp qword ptr [rdi]
0x0000000000423f57 : adc byte ptr [rax], al ; add byte ptr [rbx + 0x6a2d9c45], cl ; ret 0x1ac3
0x000000000040708c : adc cl, byte ptr [rax - 0x7d] ; ret 0x3108
0x000000000041bbce : adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x000000000040496f : adc cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x0000000000406ab1 : adc cl, byte ptr [rax - 0x7f] ; ret 8
0x000000000041b541 : adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x0000000000429cdb : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000435b6d : adc dword ptr [rax], eax ; add byte ptr [rbx + rax*4 - 1], bh ; call rsp
0x000000000040223c : adc dword ptr [rcx - 0x7629d63a], ecx ; ret 0xea81
0x000000000041c6cb : adc eax, 0x558abda1 ; ret
0x0000000000409f02 : adc eax, 0x63b9ea35 ; ret 0xe48b
0x000000000041fca9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040262f : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004358b7 : add ah, bh ; or bh, ch ; call rsp
0x0000000000435837 : add ah, ch ; ret
0x0000000000435e4b : add ah, cl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x19], ah ; cld ; call rbx
0x0000000000435835 : add al, 0 ; add ah, ch ; ret
0x0000000000405540 : add al, 0 ; add byte ptr [rbx - 0xad22bbb], cl ; ret
0x0000000000402b09 : add al, 0 ; add cl, ch ; ret 1
0x000000000043141a : add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x00000000004275d8 : add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000407fc1 : add al, ch ; leave ; ret 0xffff
0x0000000000436bcf : add al, dl ; ret
0x0000000000426299 : add bh, al ; lodsb al, byte ptr [rsi] ; and al, r12b ; shr cl, 1 ; ret
0x000000000042d666 : add bh, al ; mov word ptr [r14 - 0x16bee9bd], dr1 ; ret 0
0x00000000004299b4 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000041c509 : add bh, al ; test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x000000000043485f : add bl, dh ; ret
0x0000000000421d6d : add byte ptr [r8 - 0x75], cl ; jge 0x421d3b ; call 0x42dff8
0x0000000000434532 : add byte ptr [r8], al ; add byte ptr [rcx], al ; ret 0xea81
0x0000000000434794 : add byte ptr [r8], al ; add byte ptr [rcx], ch ; ret 0x5589
0x0000000000421ce8 : add byte ptr [r9 - 0x3876b732], cl ; call 0x42dff9
0x000000000043618b : add byte ptr [rax + 0x76600000], cl ; std ; call qword ptr [rcx]
0x000000000043618f : add byte ptr [rax + 0x76], ah ; std ; call qword ptr [rcx]
0x00000000004364fb : add byte ptr [rax + rcx], bh ; add byte ptr [rax], dh ; test al, -2 ; call rdi
0x0000000000435e4f : add byte ptr [rax - 0x19], ah ; cld ; call rbx
0x0000000000405b45 : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x0000000000407784 : add byte ptr [rax - 0x75], cl ; clc ; mov rsp, rbp ; pop rbp ; ret
0x0000000000408378 : add byte ptr [rax - 0x75], cl ; jge 0x408354 ; call 0x4045b7
0x0000000000421d6e : add byte ptr [rax - 0x75], cl ; jge 0x421d3a ; call 0x42dff7
0x0000000000408340 : add byte ptr [rax - 0x75], cl ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 8
0x00000000004034eb : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004071e3 : add byte ptr [rax - 0x77], cl ; ret 0x64e8
0x000000000040c9d3 : add byte ptr [rax - 0x77], cl ; ret 0x8844
0x000000000040345c : add byte ptr [rax - 0x77], cl ; ret 0xabe8
0x00000000004030da : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x0000000000435dae : add byte ptr [rax], al ; adc bl, dl ; cld ; jmp qword ptr [rdi]
0x00000000004299b2 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000043485d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000408376 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jge 0x408356 ; call 0x4045b9
0x000000000040833e : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 8
0x00000000004034e9 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004071e1 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x64e8
0x000000000040c9d1 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8844
0x000000000040345a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xabe8
0x00000000004030d8 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000043485b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000400470 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400472 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040f8ba : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x38] ; call qword ptr [rax]
0x0000000000400474 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000435fce : add byte ptr [rax], al ; add byte ptr [rax], dh ; std ; jmp rsp
0x0000000000435c9d : add byte ptr [rax], al ; add byte ptr [rax], dl ; mov bh, -4 ; jmp rax
0x000000000040d8ce : add byte ptr [rax], al ; add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x0000000000403f16 : add byte ptr [rax], al ; add byte ptr [rbx + 0x352dd445], cl ; ret 0x7c3c
0x0000000000426e58 : add byte ptr [rax], al ; add byte ptr [rbx + 0x382dcc45], cl ; ret
0x000000000041f712 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000409c9f : add byte ptr [rax], al ; add byte ptr [rbx + 0x622dbc45], cl ; ret 0xe48b
0x0000000000409ccb : add byte ptr [rax], al ; add byte ptr [rbx + 0x632dbc45], cl ; ret 0xe48b
0x0000000000423fa2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x6b2d9c45], cl ; ret 0x1ac3
0x0000000000423962 : add byte ptr [rax], al ; add byte ptr [rbx + 0x6e2d9c45], cl ; ret
0x0000000000424af6 : add byte ptr [rax], al ; add byte ptr [rbx - 0x15d263bb], cl ; ret
0x0000000000406612 : add byte ptr [rax], al ; add byte ptr [rbx - 0x1ed233bb], cl ; ret
0x0000000000428173 : add byte ptr [rax], al ; add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x0000000000431aec : add byte ptr [rax], al ; add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x000000000040cb31 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7038b], cl ; ret 0xb0
0x000000000042aad9 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x00000000004054dc : add byte ptr [rax], al ; add byte ptr [rbx - 0xbd22bbb], cl ; ret
0x0000000000409260 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x00000000004257ee : add byte ptr [rax], al ; add byte ptr [rcx - 0x608c783e], al ; ret
0x0000000000434533 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xea81
0x0000000000427c39 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xfa81
0x0000000000427ea0 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; enter 0x7b2d, -0x6e ; ret 0x89a8
0x0000000000434795 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x5589
0x0000000000429920 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8b48
0x0000000000436ba9 : add byte ptr [rax], al ; add byte ptr [rdi + rcx], ch ; add byte ptr [rax], al ; push rax ; ret 0xffff
0x0000000000436bc9 : add byte ptr [rax], al ; add byte ptr [rdi + rcx], cl ; add al, dl ; ret
0x0000000000433901 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000430c81 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000042c7fd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000408205 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040c8b5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x00000000004298aa : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000425ffb : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0xe280
0x00000000004082cf : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004039f3 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000435fca : add byte ptr [rax], al ; add r8, qword ptr [rax] ; add byte ptr [rax], al ; xor ch, bh ; jmp rsp
0x0000000000409210 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041f330 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000429cdd : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000432198 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004013a3 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004358b6 : add byte ptr [rax], al ; cld ; or bh, ch ; call rsp
0x00000000004359b6 : add byte ptr [rax], al ; cmp al, -0x55 ; std ; call rsp
0x0000000000435836 : add byte ptr [rax], al ; in al, dx ; ret
0x00000000004361ea : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; add eax, 0x77800000 ; std ; call qword ptr [rcx]
0x0000000000435ab6 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret 0xfffe
0x00000000004014d9 : add byte ptr [rax], al ; jmp 0x4013b9
0x00000000004358f6 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; cmp ebp, edi ; call rsp
0x000000000043630e : add byte ptr [rax], al ; loopne 0x4362b9 ; std ; call qword ptr [rdx]
0x0000000000434578 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040981a : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x20] ; pop rbp ; ret
0x000000000040f8bc : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x38] ; call qword ptr [rax]
0x0000000000408377 : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x30] ; call 0x4045b8
0x00000000004034ea : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000043630a : add byte ptr [rax], al ; mov word ptr [rsi], es ; add byte ptr [rax], al ; loopne 0x4362bd ; std ; call qword ptr [rdx]
0x0000000000435936 : add byte ptr [rax], al ; or al, 0x67 ; std ; call rsp
0x0000000000435876 : add byte ptr [rax], al ; or al, 0xffffffffffffffdd ; cld ; call rsp
0x0000000000402631 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000041f713 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000436bae : add byte ptr [rax], al ; push rax ; ret 0xffff
0x0000000000400476 : add byte ptr [rax], al ; ret
0x0000000000436baa : add byte ptr [rax], al ; sub al, 0xf ; add byte ptr [rax], al ; push rax ; ret 0xffff
0x0000000000435daa : add byte ptr [rax], al ; sub al, 1 ; add byte ptr [rax], al ; adc bl, dl ; cld ; jmp qword ptr [rdi]
0x0000000000435fcf : add byte ptr [rax], al ; xor ch, bh ; jmp rsp
0x0000000000436a8f : add byte ptr [rax], dh ; mov edi, edi ; call rdi
0x0000000000435fd0 : add byte ptr [rax], dh ; std ; jmp rsp
0x00000000004364ff : add byte ptr [rax], dh ; test al, -2 ; call rdi
0x0000000000435c9f : add byte ptr [rax], dl ; mov bh, -4 ; jmp rax
0x0000000000435daf : add byte ptr [rax], dl ; sar esp, cl ; jmp qword ptr [rdi]
0x00000000004085b7 : add byte ptr [rbx + 0x292dcc45], cl ; pop rbx ; pop rax ; ret
0x0000000000408776 : add byte ptr [rbx + 0x2a2dcc45], cl ; pop rbx ; pop rax ; ret
0x000000000040d8d0 : add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x0000000000403b69 : add byte ptr [rbx + 0x342dd445], cl ; ret 0x7c3c
0x0000000000403f18 : add byte ptr [rbx + 0x352dd445], cl ; ret 0x7c3c
0x0000000000426e5a : add byte ptr [rbx + 0x382dcc45], cl ; ret
0x000000000042749a : add byte ptr [rbx + 0x392dcc45], cl ; ret
0x000000000041f714 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000409ca1 : add byte ptr [rbx + 0x622dbc45], cl ; ret 0xe48b
0x0000000000409ccd : add byte ptr [rbx + 0x632dbc45], cl ; ret 0xe48b
0x0000000000423f59 : add byte ptr [rbx + 0x6a2d9c45], cl ; ret 0x1ac3
0x0000000000423fa4 : add byte ptr [rbx + 0x6b2d9c45], cl ; ret 0x1ac3
0x0000000000423919 : add byte ptr [rbx + 0x6d2d9c45], cl ; ret
0x0000000000423964 : add byte ptr [rbx + 0x6e2d9c45], cl ; ret
0x0000000000435b6f : add byte ptr [rbx + rax*4 - 1], bh ; call rsp
0x0000000000435fcb : add byte ptr [rbx + rax], cl ; add byte ptr [rax], al ; xor ch, bh ; jmp rsp
0x00000000004359b7 : add byte ptr [rbx + rbp*4], bh ; std ; call rsp
0x0000000000424af8 : add byte ptr [rbx - 0x15d263bb], cl ; ret
0x0000000000424aad : add byte ptr [rbx - 0x16d263bb], cl ; ret
0x0000000000406678 : add byte ptr [rbx - 0x1dd233bb], cl ; ret
0x0000000000406614 : add byte ptr [rbx - 0x1ed233bb], cl ; ret
0x0000000000428175 : add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x000000000042812a : add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x0000000000405e59 : add byte ptr [rbx - 0x2a34b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000042728d : add byte ptr [rbx - 0x45d233bb], cl ; loopne 0x4272f9 ; ret
0x0000000000427067 : add byte ptr [rbx - 0x46d233bb], cl ; loopne 0x4270d3 ; ret
0x0000000000431aee : add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x0000000000405047 : add byte ptr [rbx - 0x64d22bbb], cl ; pop rsp ; ret 0x8589
0x0000000000404ffc : add byte ptr [rbx - 0x65d22bbb], cl ; pop rsp ; ret 0x8589
0x000000000040cb33 : add byte ptr [rbx - 0x76b7038b], cl ; ret 0xb0
0x0000000000434579 : add byte ptr [rbx - 0x76b71fbb], cl ; in al, dx ; pop rbp ; ret
0x000000000042aadb : add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x0000000000405542 : add byte ptr [rbx - 0xad22bbb], cl ; ret
0x00000000004054de : add byte ptr [rbx - 0xbd22bbb], cl ; ret
0x000000000042d5b0 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x0000000000409262 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000435977 : add byte ptr [rcx + rax*4 - 3], bl ; call rsp
0x0000000000435dab : add byte ptr [rcx + rax], ch ; add byte ptr [rax], al ; adc bl, dl ; cld ; jmp qword ptr [rdi]
0x0000000000421ce9 : add byte ptr [rcx - 0x3876b732], cl ; call 0x42dff8
0x00000000004257f0 : add byte ptr [rcx - 0x608c783e], al ; ret
0x0000000000429a1e : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401848 : add byte ptr [rcx], al ; ret
0x0000000000434535 : add byte ptr [rcx], al ; ret 0xea81
0x0000000000427c3b : add byte ptr [rcx], al ; ret 0xfa81
0x0000000000427ea2 : add byte ptr [rcx], ch ; enter 0x7b2d, -0x6e ; ret 0x89a8
0x0000000000434797 : add byte ptr [rcx], ch ; ret 0x5589
0x0000000000429922 : add byte ptr [rcx], ch ; ret 0x8b48
0x0000000000436bab : add byte ptr [rdi + rcx], ch ; add byte ptr [rax], al ; push rax ; ret 0xffff
0x0000000000436bcb : add byte ptr [rdi + rcx], cl ; add al, dl ; ret
0x0000000000433903 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000430c83 : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000042c7ff : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000435937 : add byte ptr [rdi], cl ; std ; call rsp
0x0000000000408207 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040c8b7 : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x00000000004298ac : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000425ffd : add byte ptr [rdi], cl ; xchg eax, esi ; ret 0xe280
0x00000000004082d1 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004039f5 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000043630b : add byte ptr [rsi + rax - 0x5d200000], cl ; std ; call qword ptr [rdx]
0x000000000041c63c : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x000000000040797e : add cl, ch ; ret
0x0000000000402b0b : add cl, ch ; ret 1
0x000000000042539e : add dword ptr [rax + 0x45c7c655], ecx ; lodsb al, byte ptr [rsi] ; outsb dx, byte ptr [rsi] ; ret
0x0000000000409f54 : add dword ptr [rax - 0x77], ecx ; in al, dx ; pop rbp ; ret
0x0000000000435e4d : add dword ptr [rax], eax ; add byte ptr [rax - 0x19], ah ; cld ; call rbx
0x0000000000435dad : add dword ptr [rax], eax ; add byte ptr [rax], dl ; sar esp, cl ; jmp qword ptr [rdi]
0x0000000000406676 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x1dd233bb], cl ; ret
0x000000000040d84c : add dword ptr [rdi], ecx ; mov dh, -0x3f ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000408c4a : add dword ptr [rdi], ecx ; mov dh, -0x3f ; mov rsp, rbp ; pop rbp ; ret
0x00000000004030b8 : add dword ptr [rdi], ecx ; mov dh, -0x3f ; pop rbp ; ret
0x0000000000407618 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x000000000040d7c0 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000432abe : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004097fd : add dword ptr [rdi], ecx ; pushfq ; ret 0xe280
0x0000000000401844 : add eax, 0x235a86 ; add ebx, esi ; ret
0x000000000043618d : add eax, 0x76600000 ; std ; call qword ptr [rcx]
0x00000000004361ed : add eax, 0x77800000 ; std ; call qword ptr [rcx]
0x0000000000409818 : add eax, 0x8b000000 ; loopne 0x409885 ; ret
0x0000000000435875 : add eax, 0xdd0c0000 ; cld ; call rsp
0x0000000000435fcd : add eax, dword ptr [rax] ; add byte ptr [rax], al ; xor ch, bh ; jmp rsp
0x0000000000403b67 : add eax, dword ptr [rax] ; add byte ptr [rbx + 0x342dd445], cl ; ret 0x7c3c
0x0000000000427498 : add eax, dword ptr [rax] ; add byte ptr [rbx + 0x392dcc45], cl ; ret
0x000000000040180b : add eax, edx ; sar rax, 1 ; jne 0x40181c ; pop rbp ; ret
0x0000000000401849 : add ebx, esi ; ret
0x0000000000408c80 : add edi, eax ; fsubr qword ptr [r10] ; pop rbx ; pop rax ; ret
0x0000000000401c3b : add esp, 0x10 ; pop rbp ; ret
0x0000000000429a1c : add esp, 0x100 ; pop rbp ; ret
0x0000000000402fb3 : add esp, 0x160 ; pop rbp ; ret
0x0000000000408032 : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000427daf : add esp, 0x1c0 ; pop rbp ; ret
0x0000000000409271 : add esp, 0x20 ; pop rbp ; ret
0x0000000000405c22 : add esp, 0x2c0 ; pop rbp ; ret
0x000000000040cb0b : add esp, 0x2e0 ; pop rbp ; ret
0x000000000040d851 : add esp, 0x30 ; pop rbp ; ret
0x0000000000429ce0 : add esp, 0x40 ; pop rbp ; ret
0x0000000000431619 : add esp, 0x440 ; pop rbp ; ret
0x000000000042d653 : add esp, 0x470 ; pop rbp ; ret
0x0000000000401de2 : add esp, 0x50 ; pop rbp ; ret
0x000000000042ac00 : add esp, 0x60 ; pop rbp ; ret
0x0000000000409199 : add esp, 0x70 ; pop rbp ; ret
0x000000000040453b : add esp, 0x80 ; pop rbp ; ret
0x000000000042688e : add esp, 0x890 ; pop rbp ; ret
0x0000000000409b41 : add esp, 0x90 ; pop rbp ; ret
0x0000000000421e06 : add esp, 0xa0 ; pop rbp ; ret
0x00000000004096a2 : add esp, 0xb0 ; pop rbp ; ret
0x0000000000403af2 : add esp, 0xd0 ; pop rbp ; ret
0x0000000000431d3e : add esp, 0xe0 ; pop rbp ; ret
0x000000000042ea1f : add esp, 0xf0 ; pop rbp ; ret
0x000000000040761d : add esp, 8 ; pop rbp ; ret
0x00000000004013a6 : add esp, 8 ; ret
0x0000000000435fcc : add r8, qword ptr [rax] ; add byte ptr [rax], al ; xor ch, bh ; jmp rsp
0x0000000000407fc0 : add r8b, bpl ; leave ; ret 0xffff
0x000000000040180a : add rax, rdx ; sar rax, 1 ; jne 0x40181d ; pop rbp ; ret
0x0000000000401c3a : add rsp, 0x10 ; pop rbp ; ret
0x0000000000429a1b : add rsp, 0x100 ; pop rbp ; ret
0x0000000000402fb2 : add rsp, 0x160 ; pop rbp ; ret
0x0000000000408031 : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000427dae : add rsp, 0x1c0 ; pop rbp ; ret
0x0000000000409270 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000405c21 : add rsp, 0x2c0 ; pop rbp ; ret
0x000000000040cb0a : add rsp, 0x2e0 ; pop rbp ; ret
0x000000000040d850 : add rsp, 0x30 ; pop rbp ; ret
0x0000000000429cdf : add rsp, 0x40 ; pop rbp ; ret
0x0000000000431618 : add rsp, 0x440 ; pop rbp ; ret
0x000000000042d652 : add rsp, 0x470 ; pop rbp ; ret
0x0000000000401de1 : add rsp, 0x50 ; pop rbp ; ret
0x000000000042abff : add rsp, 0x60 ; pop rbp ; ret
0x0000000000409198 : add rsp, 0x70 ; pop rbp ; ret
0x000000000040453a : add rsp, 0x80 ; pop rbp ; ret
0x000000000042688d : add rsp, 0x890 ; pop rbp ; ret
0x0000000000409b40 : add rsp, 0x90 ; pop rbp ; ret
0x0000000000421e05 : add rsp, 0xa0 ; pop rbp ; ret
0x00000000004096a1 : add rsp, 0xb0 ; pop rbp ; ret
0x0000000000403af1 : add rsp, 0xd0 ; pop rbp ; ret
0x0000000000431d3d : add rsp, 0xe0 ; pop rbp ; ret
0x000000000042ea1e : add rsp, 0xf0 ; pop rbp ; ret
0x000000000040761c : add rsp, 8 ; pop rbp ; ret
0x00000000004013a5 : add rsp, 8 ; ret
0x000000000043453d : and al, 0xffffffffffffff81 ; ret 0x61
0x000000000040d7bf : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000432abd : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042629e : and al, ah ; shr cl, 1 ; ret
0x000000000042629d : and al, r12b ; shr cl, 1 ; ret
0x000000000042a80b : and byte ptr [rsi + 0x58], ah ; jb 0x42a842 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004030b6 : and cl, 1 ; movzx eax, cl ; pop rbp ; ret
0x0000000000407fbd : and eax, 0x43514e ; call 0x404297
0x000000000041b871 : and eax, 0x75b4b9d3 ; ret
0x0000000000401847 : and eax, dword ptr [rax] ; add ebx, esi ; ret
0x000000000042d612 : and esp, dword ptr [rcx] ; ret 0xd709
0x0000000000407fc2 : call 0x404292
0x000000000040837d : call 0x4045b2
0x0000000000405d65 : call 0x407257
0x0000000000406966 : call 0x408417
0x000000000042ac05 : call 0x42acc9
0x0000000000421cef : call 0x42dff2
0x000000000043208d : call 0xffffffffaca3e2c1
0x000000000043208c : call 0xffffffffaca3e2c2
0x000000000041f329 : call 0xffffffffe9047c79
0x000000000041f328 : call 0xffffffffe9047c7a
0x0000000000434839 : call qword ptr [r12 + rbx*8]
0x000000000040f8c2 : call qword ptr [rax]
0x0000000000420aee : call qword ptr [rbx]
0x00000000004316bc : call qword ptr [rcx]
0x000000000041e7b4 : call qword ptr [rdi]
0x000000000041a79b : call qword ptr [rdx]
0x000000000043483a : call qword ptr [rsp + rbx*8]
0x000000000040186d : call rax
0x0000000000435e53 : call rbx
0x000000000041ca1b : call rcx
0x000000000041e3f4 : call rdi
0x000000000041dc25 : call rdx
0x000000000040d87b : call rsp
0x000000000040c35e : cdq ; ret 0xd6a8
0x0000000000431617 : clc ; add rsp, 0x440 ; pop rbp ; ret
0x0000000000429f67 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x000000000042dfa9 : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x000000000040180f : clc ; jne 0x401818 ; pop rbp ; ret
0x0000000000404af3 : clc ; mov qword ptr [rdi], rsi ; pop rbp ; ret
0x000000000040d7fb : clc ; mov rax, qword ptr [rdi] ; pop rbp ; ret
0x000000000040d7f7 : clc ; mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi] ; pop rbp ; ret
0x0000000000407788 : clc ; mov rsp, rbp ; pop rbp ; ret
0x0000000000404b07 : clc ; pop rbp ; ret
0x0000000000411dfd : clc ; ret 0x77a8
0x00000000004326ce : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000042ea1d : cld ; add rsp, 0xf0 ; pop rbp ; ret
0x000000000042d611 : cld ; and esp, dword ptr [rcx] ; ret 0xd709
0x0000000000435e52 : cld ; call rbx
0x000000000043587a : cld ; call rsp
0x000000000040d8ff : cld ; jmp 0x40d96c
0x000000000040d8fe : cld ; jmp 0x40d96d
0x0000000000435db2 : cld ; jmp qword ptr [rdi]
0x0000000000435ca2 : cld ; jmp rax
0x00000000004358b8 : cld ; or bh, ch ; call rsp
0x0000000000435872 : cld ; push qword ptr [rbp + rax - 0x22f40000] ; cld ; call rsp
0x00000000004358b2 : cld ; push qword ptr [rsi + rax + 0xafc0000] ; std ; call rsp
0x0000000000421cf0 : cld ; ret 0
0x000000000042ba8f : cld ; ret 0x281b
0x000000000042a810 : cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000043453c : cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x0000000000405547 : cmc ; ret
0x000000000042972b : cmc ; ret 0x4f0b
0x00000000004359b8 : cmp al, -0x55 ; std ; call rsp
0x0000000000407fbc : cmp al, 0x25 ; push rcx ; add r8b, bpl ; leave ; ret 0xffff
0x0000000000405b48 : cmp al, 0x25 ; ret
0x00000000004298c1 : cmp cl, byte ptr [rsi - 0x946182f] ; ret 0x4f0b
0x00000000004017cd : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4017e0 ; pop rbp ; ret
0x00000000004358f9 : cmp ebp, edi ; call rsp
0x000000000041c6c7 : cmp esp, dword ptr [rbp - 0x47] ; push -0x75425eeb ; push rbp ; ret
0x000000000042d9d2 : dec dword ptr [rax + 0x29] ; ret 0x9c0f
0x000000000041bbcb : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x000000000041b53e : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x000000000041bd43 : dec dword ptr [rax - 0x75] ; or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x0000000000401bd2 : dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x0000000000431176 : dec dword ptr [rax - 0x77] ; ret 0x8148
0x0000000000405e5f : dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000429726 : dec dword ptr [rcx - 0xa167e3f] ; ret 0x4f0b
0x0000000000411ada : dec dword ptr [rdi] ; test byte ptr [rcx], ch ; ret 0
0x0000000000407978 : dec dword ptr [rdi] ; test byte ptr [rdi], cl ; or al, byte ptr [rax] ; add cl, ch ; ret
0x00000000004275d4 : dec dword ptr [rdi] ; test byte ptr [rdx], dh ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000040a108 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x000000000040a104 : enter -1, -1 ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x0000000000430bf9 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000427ea4 : enter 0x7b2d, -0x6e ; ret 0x89a8
0x000000000040fdd9 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000435bf1 : fcos ; call rsp
0x0000000000432af8 : fld qword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x00000000004317d7 : fmul dword ptr [r9 - 0x57167e3f] ; ret
0x0000000000408344 : fmul dword ptr [rax - 0x7f] ; ret 8
0x00000000004317d8 : fmul dword ptr [rcx - 0x57167e3f] ; ret
0x000000000043483c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000408c82 : fsubr qword ptr [r10] ; pop rbx ; pop rax ; ret
0x0000000000408c83 : fsubr qword ptr [rdx] ; pop rbx ; pop rax ; ret
0x0000000000405b34 : fsubr st(1) ; ret 7
0x0000000000409c9e : hlt ; add byte ptr [rax], al ; add byte ptr [rbx + 0x622dbc45], cl ; ret 0xe48b
0x0000000000401c39 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000431d3c : hlt ; add rsp, 0xe0 ; pop rbp ; ret
0x00000000004105c1 : hlt ; add rsp, 8 ; pop rbp ; ret
0x00000000004017e0 : hlt ; pop rbp ; mov edi, 0x637270 ; jmp rax
0x00000000004054e3 : hlt ; ret
0x000000000042a93b : idiv edi ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000042e361 : in al, 0x48 ; add esp, 0xb0 ; pop rbp ; ret
0x0000000000427dad : in al, dx ; add rsp, 0x1c0 ; pop rbp ; ret
0x000000000042dc65 : in al, dx ; add rsp, 0x30 ; pop rbp ; ret
0x000000000043214c : in al, dx ; jmp 0x4321c9
0x000000000043214b : in al, dx ; jmp 0x4321ca
0x0000000000401bd5 : in al, dx ; pop rbp ; ret
0x0000000000435838 : in al, dx ; ret
0x0000000000404b03 : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x000000000040c791 : inc dword ptr [rcx + 0xf] ; sahf ; ret
0x000000000040f821 : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8445
0x00000000004361ec : insb byte ptr [rdi], dx ; add eax, 0x77800000 ; std ; call qword ptr [rcx]
0x0000000000435ab8 : insb byte ptr [rdi], dx ; ret 0xfffe
0x0000000000435830 : insb byte ptr [rdi], dx ; sar ah, -1 ; lodsb al, byte ptr [rsi] ; add al, 0 ; add ah, ch ; ret
0x000000000042391e : insd dword ptr [rdi], dx ; ret
0x00000000004217d7 : int 0x5b
0x00000000004017d3 : ja 0x4017da ; pop rbp ; ret
0x00000000004361f1 : ja 0x4361f2 ; call qword ptr [rcx]
0x00000000004257e8 : jae 0x42578b ; ret
0x00000000004257f4 : jae 0x425797 ; ret
0x000000000042a80e : jb 0x42a83f ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000436191 : jbe 0x436192 ; call qword ptr [rcx]
0x00000000004017df : je 0x4017dd ; pop rbp ; mov edi, 0x637270 ; jmp rax
0x0000000000404af2 : jge 0x404af2 ; mov qword ptr [rdi], rsi ; pop rbp ; ret
0x0000000000404b06 : jge 0x404b03 ; pop rbp ; ret
0x000000000040837b : jge 0x408351 ; call 0x4045b4
0x000000000040d7fa : jge 0x40d7fa ; mov rax, qword ptr [rdi] ; pop rbp ; ret
0x000000000041ac66 : jge 0x41abeb ; ret 0xffd5
0x000000000041b730 : jge 0x41b710 ; shr cl, cl ; ret 0x3b
0x0000000000421d71 : jge 0x421d37 ; call 0x42dff4
0x00000000004014db : jmp 0x4013b7
0x0000000000405b41 : jmp 0x406305
0x00000000004067a5 : jmp 0x406bc4
0x000000000040d900 : jmp 0x40d96b
0x000000000041be80 : jmp 0x41f300
0x0000000000419d84 : jmp 0x41f301
0x000000000041b151 : jmp 0x41f302
0x0000000000425356 : jmp 0x426b6f
0x0000000000425bf4 : jmp 0x426b70
0x0000000000425e6d : jmp 0x426b71
0x0000000000428b4b : jmp 0x4295b7
0x0000000000428a88 : jmp 0x4295b9
0x000000000042abb3 : jmp 0x42ac18
0x000000000042d493 : jmp 0x42d73b
0x000000000042ce0d : jmp 0x42d73c
0x00000000004314b6 : jmp 0x431798
0x000000000043214d : jmp 0x4321c8
0x000000000042972a : jmp 0x4f4e5a26
0x000000000041ec55 : jmp qword ptr [rax]
0x00000000004364a3 : jmp qword ptr [rbx]
0x0000000000410a52 : jmp qword ptr [rcx]
0x000000000041c907 : jmp qword ptr [rdi]
0x00000000004299ba : jmp qword ptr [rdx]
0x00000000004017e7 : jmp rax
0x000000000041b258 : jmp rbx
0x000000000041bc8a : jmp rcx
0x000000000041b2b2 : jmp rdi
0x0000000000401827 : jmp rdx
0x000000000043678b : jmp rsi
0x000000000041b568 : jmp rsp
0x0000000000401810 : jne 0x401817 ; pop rbp ; ret
0x0000000000404a05 : jne 0x404a0f ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004369f1 : jno 0x4369f4 ; jmp rcx
0x00000000004013a1 : jnp 0x4013ad ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000427e74 : jnp 0x427e0a ; ret 0xb9a8
0x0000000000427ea6 : jnp 0x427e3c ; ret 0x89a8
0x000000000040919b : jo 0x4091fc ; ret
0x0000000000414b7e : jo 0x414b8a ; ret
0x00000000004167ee : jo 0x4167fa ; ret
0x0000000000419d3d : jo 0x419d49 ; ret
0x0000000000421024 : jo 0x421085 ; ret
0x000000000042d655 : jo 0x42d660 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000405d63 : js 0x405d76 ; call 0x407259
0x00000000004257e9 : lahf ; ret
0x000000000041b72e : lcall ptr [rbx - 0x162d2583] ; ret 0x3b
0x000000000041c82e : lcall ptr [rsi] ; pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x000000000040e106 : lea eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000407fbb : lea edi, dword ptr [0x43514e] ; call 0x404299
0x000000000040f993 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000408f3a : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040f992 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000407fc3 : leave ; ret 0xffff
0x000000000041a08e : ljmp ptr [rdi] ; ret 0x23da
0x0000000000435834 : lodsb al, byte ptr [rsi] ; add al, 0 ; add ah, ch ; ret
0x000000000042629c : lodsb al, byte ptr [rsi] ; and al, r12b ; shr cl, 1 ; ret
0x00000000004358f8 : lodsb al, byte ptr [rsi] ; cmp ebp, edi ; call rsp
0x00000000004253a4 : lodsb al, byte ptr [rsi] ; outsb dx, byte ptr [rsi] ; ret
0x00000000004030b7 : loope 0x4030c0 ; movzx eax, cl ; pop rbp ; ret
0x0000000000408c49 : loope 0x408c55 ; movzx eax, cl ; mov rsp, rbp ; pop rbp ; ret
0x000000000041d095 : loope 0x41d063 ; jmp 0x41f303
0x0000000000402d58 : loopne 0x402d44 ; ret 7
0x00000000004068bd : loopne 0x40690f ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004068bc : loopne 0x406910 ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040981e : loopne 0x40987f ; ret
0x000000000040981d : loopne 0x409880 ; ret
0x000000000040cb0d : loopne 0x40cb16 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040d138 : loopne 0x40d18a ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040d137 : loopne 0x40d18b ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000411473 : loopne 0x4114c6 ; lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000420a1d : loopne 0x420a83 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000421e04 : loopne 0x421e57 ; add esp, 0xa0 ; pop rbp ; ret
0x000000000042688c : loopne 0x4268df ; add esp, 0x890 ; pop rbp ; ret
0x000000000042706d : loopne 0x4270cd ; ret
0x0000000000427293 : loopne 0x4272f3 ; ret
0x0000000000427834 : loopne 0x427894 ; ret
0x0000000000427de3 : loopne 0x427e43 ; ret
0x000000000042a273 : loopne 0x42a27c ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042abfe : loopne 0x42ac4e ; add esp, 0x60 ; pop rbp ; ret
0x000000000042abfd : loopne 0x42ac4f ; add esp, 0x60 ; pop rbp ; ret
0x000000000042d651 : loopne 0x42d6a4 ; add esp, 0x470 ; pop rbp ; ret
0x000000000042db1c : loopne 0x42dab0 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000042db1b : loopne 0x42dab1 ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000431d40 : loopne 0x431d47 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004326d2 : loopne 0x4326d9 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000043457c : loopne 0x4345cb ; mov esp, ebp ; pop rbp ; ret
0x000000000043457b : loopne 0x4345cc ; mov esp, ebp ; pop rbp ; ret
0x00000000004347cc : loopne 0x43481b ; mov esp, ebp ; pop rbp ; ret
0x00000000004347cb : loopne 0x43481c ; mov esp, ebp ; pop rbp ; ret
0x0000000000436310 : loopne 0x4362b7 ; std ; call qword ptr [rdx]
0x000000000041ac5d : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000041ad37 : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000401de0 : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000418ce5 : mov ah, 0x75 ; ret
0x00000000004359b4 : mov ah, 0xa ; add byte ptr [rax], al ; cmp al, -0x55 ; std ; call rsp
0x0000000000435874 : mov ah, 5 ; add byte ptr [rax], al ; or al, 0xffffffffffffffdd ; cld ; call rsp
0x00000000004358b4 : mov ah, 6 ; add byte ptr [rax], al ; cld ; or bh, ch ; call rsp
0x00000000004358f4 : mov ah, 7 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; cmp ebp, edi ; call rsp
0x0000000000435934 : mov ah, 8 ; add byte ptr [rax], al ; or al, 0x67 ; std ; call rsp
0x00000000004217f3 : mov al, -0x47 ; ret
0x0000000000430c7f : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004096a4 : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000432ded : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000432aba : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000432d1d : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000435ca1 : mov bh, -4 ; jmp rax
0x00000000004253a1 : mov bh, 0x45 ; lodsb al, byte ptr [rsi] ; outsb dx, byte ptr [rsi] ; ret
0x0000000000412685 : mov bl, 0x75 ; ret
0x0000000000401843 : mov byte ptr [rip + 0x235a86], 1 ; ret
0x0000000000435a39 : mov ch, -2 ; jmp rsp
0x000000000041a4df : mov ch, byte ptr [rdx - 0x47] ; pop rbp ; pop rcx ; ret 0x1b2
0x000000000040d84e : mov dh, -0x3f ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000408c4c : mov dh, -0x3f ; mov rsp, rbp ; pop rbp ; ret
0x00000000004030ba : mov dh, -0x3f ; pop rbp ; ret
0x000000000040761a : mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x000000000040d7c2 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000432ac0 : mov dh, -0x40 ; pop rbp ; ret
0x000000000043453a : mov dl, -0x34 ; cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x00000000004366e9 : mov dl, -2 ; jmp qword ptr [rbx]
0x00000000004337b1 : mov dr1, word ptr [rcx + rcx*4 - 0x7bf05bbb] ; ret 2
0x0000000000410bf9 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004107cf : mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x000000000043214a : mov dword ptr [rbp - 0x14], eax ; jmp 0x4321cb
0x0000000000401dde : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000428b48 : mov dword ptr [rbp - 0x6c], eax ; jmp 0x4295ba
0x0000000000401c37 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404b05 : mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x0000000000410ed6 : mov dword ptr [rcx + 0x30], eax ; mov rsp, rbp ; pop rbp ; ret
0x0000000000409196 : mov dword ptr [rcx], eax ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000409f53 : mov dword ptr [rcx], eax ; mov rsp, rbp ; pop rbp ; ret
0x000000000040a158 : mov dword ptr [rcx], eax ; pop rbp ; ret
0x0000000000404af5 : mov dword ptr [rdi], esi ; pop rbp ; ret
0x0000000000410a7d : mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000040a152 : mov eax, 0xe84d8b48 ; mov qword ptr [rcx], rax ; pop rbp ; ret
0x00000000004041e4 : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000404ad3 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040bc79 : mov eax, dword ptr [rbp - 0x10] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042dc63 : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000042ac4e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040e70e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000431fc5 : mov eax, dword ptr [rbp - 0x18] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000410bfc : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000042abfc : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000042db1a : mov eax, dword ptr [rbp - 0x20] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000043457a : mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040981c : mov eax, dword ptr [rbp - 0x20] ; pop rbp ; ret
0x000000000040f8bf : mov eax, dword ptr [rbp - 0x38] ; call qword ptr [rax]
0x0000000000410a7f : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x00000000004105bf : mov eax, dword ptr [rbp - 0xc] ; add rsp, 8 ; pop rbp ; ret
0x0000000000407786 : mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040d7fd : mov eax, dword ptr [rdi] ; pop rbp ; ret
0x0000000000410a7e : mov eax, dword ptr ds:[rbp - 0x38] ; pop rbp ; ret
0x000000000040926e : mov eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041d498 : mov ebp, 0xe19c53ba ; ret
0x000000000040186b : mov ebp, esp ; call rax
0x00000000004017d1 : mov ebp, esp ; ja 0x4017dc ; pop rbp ; ret
0x0000000000404b02 : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x00000000004107cc : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x000000000040a154 : mov ecx, dword ptr [rbp - 0x18] ; mov qword ptr [rcx], rax ; pop rbp ; ret
0x0000000000409f50 : mov ecx, dword ptr [rcx] ; mov qword ptr [rcx], rax ; mov rsp, rbp ; pop rbp ; ret
0x000000000042cb6c : mov ecx, gs ; ret
0x000000000040f8b9 : mov edi, 0 ; mov rax, qword ptr [rbp - 0x38] ; call qword ptr [rax]
0x0000000000401865 : mov edi, 0x636e20 ; mov rbp, rsp ; call rax
0x00000000004017e2 : mov edi, 0x637270 ; jmp rax
0x0000000000401822 : mov edi, 0x637270 ; jmp rdx
0x0000000000419d37 : mov edi, 0xb8000055 ; wait ; jo 0x419d4f ; ret
0x0000000000406964 : mov edi, dword ptr [rax] ; call 0x408419
0x000000000040837a : mov edi, dword ptr [rbp - 0x30] ; call 0x4045b5
0x0000000000421d70 : mov edi, dword ptr [rbp - 0x40] ; call 0x42dff5
0x0000000000404af1 : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi], rsi ; pop rbp ; ret
0x000000000040d7f9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi] ; pop rbp ; ret
0x0000000000421ced : mov edi, eax ; call 0x42dff4
0x0000000000434837 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000436a91 : mov edi, edi ; call rdi
0x0000000000434836 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000043142e : mov edx, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000041a4fb : mov edx, 0x595db993 ; ret 0x8b48
0x0000000000406ad5 : mov edx, dword ptr [rbp - 0x120] ; call rax
0x0000000000408365 : mov edx, dword ptr [rbp - 0x190] ; call rax
0x000000000041b372 : mov esi, 0x39443e04 ; ret 0xf41
0x0000000000431417 : mov esi, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000042d66a : mov esi, 0xe9411643 ; ret 0
0x0000000000401820 : mov esi, eax ; mov edi, 0x637270 ; jmp rdx
0x0000000000421cea : mov esi, ecx ; mov rdi, rax ; call 0x42dff7
0x0000000000406ad2 : mov esi, edx ; mov rdx, qword ptr [rbp - 0x120] ; call rax
0x0000000000408362 : mov esi, edx ; mov rdx, qword ptr [rbp - 0x190] ; call rax
0x0000000000401bd4 : mov esp, ebp ; pop rbp ; ret
0x0000000000404b04 : mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000410ed5 : mov qword ptr [rcx + 0x30], rax ; mov rsp, rbp ; pop rbp ; ret
0x0000000000409195 : mov qword ptr [rcx], rax ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000409f52 : mov qword ptr [rcx], rax ; mov rsp, rbp ; pop rbp ; ret
0x000000000040a157 : mov qword ptr [rcx], rax ; pop rbp ; ret
0x0000000000404af4 : mov qword ptr [rdi], rsi ; pop rbp ; ret
0x0000000000401ddf : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000042cb6b : mov r9d, gs ; ret
0x00000000004041e3 : mov rax, qword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000404ad2 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040bc78 : mov rax, qword ptr [rbp - 0x10] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042ac4d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040e70d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000042abfb : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040f8be : mov rax, qword ptr [rbp - 0x38] ; call qword ptr [rax]
0x0000000000407785 : mov rax, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040d7fc : mov rax, qword ptr [rdi] ; pop rbp ; ret
0x000000000040186a : mov rbp, rsp ; call rax
0x00000000004017d0 : mov rbp, rsp ; ja 0x4017dd ; pop rbp ; ret
0x0000000000404b01 : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000040a153 : mov rcx, qword ptr [rbp - 0x18] ; mov qword ptr [rcx], rax ; pop rbp ; ret
0x0000000000408379 : mov rdi, qword ptr [rbp - 0x30] ; call 0x4045b6
0x0000000000421d6f : mov rdi, qword ptr [rbp - 0x40] ; call 0x42dff6
0x0000000000404af0 : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi], rsi ; pop rbp ; ret
0x000000000040d7f8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi] ; pop rbp ; ret
0x0000000000421cec : mov rdi, rax ; call 0x42dff5
0x0000000000406ad4 : mov rdx, qword ptr [rbp - 0x120] ; call rax
0x0000000000408364 : mov rdx, qword ptr [rbp - 0x190] ; call rax
0x000000000040181f : mov rsi, rax ; mov edi, 0x637270 ; jmp rdx
0x0000000000401bd3 : mov rsp, rbp ; pop rbp ; ret
0x000000000042d668 : mov word ptr [r14 - 0x16bee9bd], dr1 ; ret 0
0x000000000042a811 : mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000042d669 : mov word ptr [rsi - 0x16bee9bd], dr1 ; ret 0
0x000000000043630c : mov word ptr [rsi], es ; add byte ptr [rax], al ; loopne 0x4362bb ; std ; call qword ptr [rdx]
0x000000000040f6b5 : movabs byte ptr [0x8348e2894853b517], al ; ret 0x48f0
0x0000000000415fd8 : movabs byte ptr [0x840ffffff3c48589], al ; ret 0x4b
0x0000000000419225 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x6a8a
0x00000000004071a2 : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000407619 : movzx eax, al ; add rsp, 8 ; pop rbp ; ret
0x000000000040d7c1 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000432abf : movzx eax, al ; pop rbp ; ret
0x000000000040d84d : movzx eax, cl ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000408c4b : movzx eax, cl ; mov rsp, rbp ; pop rbp ; ret
0x00000000004030b9 : movzx eax, cl ; pop rbp ; ret
0x0000000000431228 : neg byte ptr [rsi + 0x2948e012] ; ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x00000000004124c5 : nop ; ret
0x00000000004208d2 : nop ; ret 0x148
0x00000000004208e6 : nop ; ret 0x2948
0x0000000000434858 : nop dword ptr [rax + rax] ; ret
0x000000000041ac5a : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000041ad34 : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000435938 : or al, 0x67 ; std ; call rsp
0x0000000000435878 : or al, 0xffffffffffffffdd ; cld ; call rsp
0x0000000000421e52 : or al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004359b5 : or al, byte ptr [rax] ; add byte ptr [rbx + rbp*4], bh ; std ; call rsp
0x000000000040797c : or al, byte ptr [rax] ; add cl, ch ; ret
0x00000000004358b9 : or bh, ch ; call rsp
0x00000000004107d0 : or byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004364fd : or byte ptr [rax], al ; add byte ptr [rax], dh ; test al, -2 ; call rdi
0x0000000000428128 : or byte ptr [rax], al ; add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x0000000000435935 : or byte ptr [rax], al ; add byte ptr [rdi], cl ; std ; call rsp
0x00000000004271d7 : or byte ptr [rax], al ; add cl, ch ; ret
0x00000000004271d6 : or byte ptr [rax], r8b ; add cl, ch ; ret
0x00000000004039ef : or byte ptr [rcx + 0x2df9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000409f51 : or dword ptr [rax - 0x77], ecx ; add dword ptr [rax - 0x77], ecx ; in al, dx ; pop rbp ; ret
0x000000000041bd46 : or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x0000000000410ed4 : or dword ptr [rax - 0x77], ecx ; xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000435975 : or dword ptr [rax], eax ; add byte ptr [rcx + rax*4 - 3], bl ; call rsp
0x0000000000410a7b : or edi, eax ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000435e51 : out -4, eax ; call rbx
0x000000000041c63b : out dx, al ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x0000000000432abc : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000425e6c : out dx, al ; jmp 0x426b72
0x0000000000432def : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004217f2 : out dx, eax ; mov al, -0x47 ; ret
0x0000000000431419 : outsb dx, byte ptr [rsi] ; add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000423969 : outsb dx, byte ptr [rsi] ; ret
0x000000000041d725 : outsb dx, byte ptr [rsi] ; ret 0x4861
0x0000000000412376 : outsb dx, byte ptr [rsi] ; ret 0x8961
0x000000000041d770 : outsb dx, byte ptr [rsi] ; ret 0xe961
0x00000000004299b1 : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000043141c : outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000042a80c : pop ax ; jb 0x42a841 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000402344 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000043484c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000420a1f : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000402346 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000043484e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000402348 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000434850 : pop r14 ; pop r15 ; ret
0x000000000040f997 : pop r14 ; pop rbp ; ret
0x000000000040234a : pop r15 ; pop rbp ; ret
0x0000000000434852 : pop r15 ; ret
0x000000000042a80d : pop rax ; jb 0x42a840 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004085be : pop rax ; ret
0x0000000000401842 : pop rbp ; mov byte ptr [rip + 0x235a86], 1 ; ret
0x00000000004017e1 : pop rbp ; mov edi, 0x637270 ; jmp rax
0x000000000040181e : pop rbp ; mov rsi, rax ; mov edi, 0x637270 ; jmp rdx
0x000000000043484b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000402347 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000043484f : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000041a4e2 : pop rbp ; pop rcx ; ret 0x1b2
0x00000000004167b5 : pop rbp ; pop rcx ; ret 0x8589
0x000000000041a4fe : pop rbp ; pop rcx ; ret 0x8b48
0x00000000004017d5 : pop rbp ; ret
0x0000000000420a1e : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000408f3d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040f996 : pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004085bd : pop rbx ; pop rax ; ret
0x0000000000428130 : pop rbx ; ret
0x000000000041a4e3 : pop rcx ; ret 0x1b2
0x0000000000414bb6 : pop rcx ; ret 0x8589
0x000000000041a4ff : pop rcx ; ret 0x8b48
0x000000000041c830 : pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x000000000040234b : pop rdi ; pop rbp ; ret
0x0000000000434853 : pop rdi ; ret
0x0000000000401846 : pop rdx ; and eax, dword ptr [rax] ; add ebx, esi ; ret
0x0000000000402349 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000434851 : pop rsi ; pop r15 ; ret
0x000000000040f998 : pop rsi ; pop rbp ; ret
0x0000000000402345 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000043484d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000420a20 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000414bb5 : pop rsp ; pop rcx ; ret 0x8589
0x000000000042706e : pop rsp ; ret
0x0000000000405003 : pop rsp ; ret 0x8589
0x0000000000405b92 : pop rsp ; ret 0xc084
0x0000000000433905 : popfq ; ret 0xd284
0x0000000000423f5e : push -0x3e ; ret
0x000000000041a4e0 : push -0x47 ; pop rbp ; pop rcx ; ret 0x1b2
0x000000000041c6ca : push -0x75425eeb ; push rbp ; ret
0x0000000000419228 : push -0x77 ; test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x0000000000435933 : push qword ptr [rax + rcx + 0x670c0000] ; std ; call rsp
0x0000000000435873 : push qword ptr [rbp + rax - 0x22f40000] ; cld ; call rsp
0x0000000000435973 : push qword ptr [rcx + rcx - 0x7ea40000] ; std ; call rsp
0x00000000004358f3 : push qword ptr [rdi + rax + 0x39ac0000] ; std ; call rsp
0x00000000004359b3 : push qword ptr [rdx + rcx - 0x54c40000] ; std ; call rsp
0x00000000004358b3 : push qword ptr [rsi + rax + 0xafc0000] ; std ; call rsp
0x000000000042539d : push rax ; add dword ptr [rax + 0x45c7c655], ecx ; lodsb al, byte ptr [rsi] ; outsb dx, byte ptr [rsi] ; ret
0x0000000000401de4 : push rax ; pop rbp ; ret
0x0000000000436bb0 : push rax ; ret 0xffff
0x0000000000408343 : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 8
0x00000000004253a0 : push rbp ; mov bh, 0x45 ; lodsb al, byte ptr [rsi] ; outsb dx, byte ptr [rsi] ; ret
0x0000000000401864 : push rbp ; mov edi, 0x636e20 ; mov rbp, rsp ; call rax
0x0000000000404b00 : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000041c6cf : push rbp ; ret
0x000000000041c666 : push rbp ; ret 0xd284
0x000000000040823d : push rbp ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4808
0x000000000041ac5f : push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000041ad39 : push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000421d6c : push rbx ; add byte ptr [r8 - 0x75], cl ; jge 0x421d3c ; call 0x42dff9
0x0000000000407fbf : push rcx ; add r8b, bpl ; leave ; ret 0xffff
0x000000000043141b : push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000423141 : push rdx ; sub al, 0 ; add cl, ch ; ret
0x0000000000408ed2 : pushfq ; ret
0x0000000000430c85 : pushfq ; ret 0xd284
0x00000000004097ff : pushfq ; ret 0xe280
0x0000000000400478 : ret
0x00000000004041b7 : ret 0
0x00000000004208d3 : ret 0x148
0x000000000041d834 : ret 0x1a
0x0000000000423f5f : ret 0x1ac3
0x0000000000412aad : ret 0x1add
0x000000000041a4e5 : ret 0x1b2
0x000000000042b8b3 : ret 0x1e6f
0x00000000004016e2 : ret 0x235a
0x00000000004014e2 : ret 0x235b
0x00000000004133fa : ret 0x23da
0x00000000004200f8 : ret 0x279e
0x000000000042ba90 : ret 0x281b
0x000000000041bd49 : ret 0x2948
0x000000000041c834 : ret 0x2a
0x0000000000422532 : ret 0x2b80
0x000000000041ac62 : ret 0x2d50
0x0000000000430f7e : ret 0x3040
0x000000000040708f : ret 0x3108
0x000000000040b977 : ret 0x3948
0x000000000041b734 : ret 0x3b
0x0000000000418795 : ret 0x3e
0x0000000000426006 : ret 0x4589
0x000000000041bbd1 : ret 0x4802
0x0000000000404972 : ret 0x4808
0x000000000043141e : ret 0x4815
0x000000000040f2c2 : ret 0x485b
0x000000000041d726 : ret 0x4861
0x000000000040f72e : ret 0x48e0
0x00000000004019e6 : ret 0x48f0
0x0000000000415fe1 : ret 0x4b
0x00000000004215f7 : ret 0x4cc0
0x000000000041e638 : ret 0x4cf0
0x0000000000400287 : ret 0x4ec8
0x000000000042972c : ret 0x4f0b
0x0000000000410a2b : ret 0x5589
0x000000000041aeea : ret 0x5966
0x0000000000425797 : ret 0x5a85
0x000000000042656e : ret 0x5a9c
0x0000000000428387 : ret 0x5bc6
0x000000000043453f : ret 0x61
0x00000000004071e6 : ret 0x64e8
0x0000000000412146 : ret 0x6a8a
0x00000000004257f2 : ret 0x7387
0x0000000000411dfe : ret 0x77a8
0x0000000000412f61 : ret 0x7a8a
0x0000000000419bdb : ret 0x7b7f
0x0000000000403b6f : ret 0x7c3c
0x000000000042058a : ret 0x8041
0x0000000000409a64 : ret 0x8141
0x0000000000431179 : ret 0x8148
0x000000000041baf4 : ret 0x822d
0x0000000000425207 : ret 0x83d0
0x0000000000409266 : ret 0x8445
0x0000000000405004 : ret 0x8589
0x0000000000406a45 : ret 0x858a
0x000000000040c9d6 : ret 0x8844
0x0000000000412b73 : ret 0x8940
0x000000000042cc3d : ret 0x8941
0x000000000040e6eb : ret 0x8948
0x0000000000408fbc : ret 0x8949
0x000000000042fa3f : ret 0x894a
0x0000000000412377 : ret 0x8961
0x0000000000427ea8 : ret 0x89a8
0x0000000000406e0b : ret 0x89db
0x0000000000431038 : ret 0x8a44
0x0000000000430f35 : ret 0x8a4a
0x000000000041a501 : ret 0x8b48
0x0000000000409a92 : ret 0x945
0x000000000042d9d5 : ret 0x9c0f
0x0000000000403ca2 : ret 0xa0d6
0x000000000041ad3c : ret 0xa30b
0x0000000000426566 : ret 0xa564
0x000000000040345f : ret 0xabe8
0x000000000043208f : ret 0xac60
0x000000000042487f : ret 0xb
0x00000000004022b2 : ret 0xb0
0x0000000000431678 : ret 0xb2e8
0x000000000041f63a : ret 0xb3
0x000000000041c640 : ret 0xb740
0x000000000042a807 : ret 0xb848
0x000000000041a870 : ret 0xb940
0x0000000000430ec2 : ret 0xb94a
0x0000000000427e76 : ret 0xb9a8
0x000000000040701c : ret 0xb9db
0x000000000041ccbc : ret 0xbf48
0x0000000000405b93 : ret 0xc084
0x0000000000401805 : ret 0xc148
0x0000000000421e4e : ret 0xc189
0x0000000000434782 : ret 0xc493
0x0000000000432a79 : ret 0xca21
0x0000000000434545 : ret 0xccb2
0x000000000040820a : ret 0xd284
0x000000000042f685 : ret 0xd618
0x000000000040c35f : ret 0xd6a8
0x000000000042d614 : ret 0xd709
0x00000000004039f8 : ret 0xe280
0x0000000000409ca7 : ret 0xe48b
0x000000000042cc51 : ret 0xe783
0x000000000041c512 : ret 0xe940
0x000000000041d771 : ret 0xe961
0x000000000041359d : ret 0xea51
0x0000000000402242 : ret 0xea81
0x000000000041f32c : ret 0xee8
0x000000000042bdf4 : ret 0xefa6
0x0000000000410a65 : ret 0xf281
0x000000000041b377 : ret 0xf41
0x000000000041d2c5 : ret 0xf7f3
0x0000000000427c3d : ret 0xfa81
0x000000000041ba4e : ret 0xfc75
0x000000000042913a : ret 0xfd83
0x000000000042b0ef : ret 0xfe11
0x000000000041d2bf : ret 0xffa5
0x000000000041ba48 : ret 0xffc4
0x000000000041ac68 : ret 0xffd5
0x000000000041ad42 : ret 0xffd8
0x000000000041bafa : ret 0xffd9
0x000000000041aee4 : ret 0xffe0
0x0000000000419bd5 : ret 0xfffa
0x0000000000435ab9 : ret 0xfffe
0x0000000000407fc4 : ret 0xffff
0x0000000000402b0d : ret 1
0x000000000041b8e0 : ret 2
0x000000000042742e : ret 3
0x0000000000408723 : ret 5
0x00000000004051b6 : ret 6
0x0000000000402d5a : ret 7
0x0000000000406ab4 : ret 8
0x00000000004313fd : rol byte ptr [rax + 0x48f22948], -0x7f ; ret 1
0x000000000042c857 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000409a02 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000403af4 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004313fc : rol byte ptr ds:[rax + 0x48f22948], -0x7f ; ret 1
0x00000000004030b5 : rol dword ptr [rax - 0x49f0fe1f], -0x3f ; pop rbp ; ret
0x0000000000409a8f : rol dword ptr [rbp + 9], 1 ; ret 0x945
0x000000000042a804 : ror byte ptr [rax + 1], cl ; ret 0xb848
0x000000000040180c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40181b ; pop rbp ; ret
0x000000000040d7c3 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x000000000040823e : ror byte ptr [rax - 0x7d], 1 ; ret 0x4808
0x0000000000403af0 : ror byte ptr [rax - 0x7f], -0x3c ; rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000410a7a : ror byte ptr [rcx], -0x39 ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000408c4d : ror dword ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x000000000043122e : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x00000000004214b0 : ror dword ptr [rcx - 0x7d], cl ; ret
0x000000000040c794 : sahf ; ret
0x000000000042c801 : sahf ; ret 0xd284
0x0000000000406ad3 : salc ; mov rdx, qword ptr [rbp - 0x120] ; call rax
0x0000000000408363 : salc ; mov rdx, qword ptr [rbp - 0x190] ; call rax
0x0000000000408239 : salc ; sub byte ptr [rax - 0x75], cl ; push rbp ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4808
0x0000000000435831 : sar ah, -1 ; lodsb al, byte ptr [rsi] ; add al, 0 ; add ah, ch ; ret
0x000000000040180e : sar eax, 1 ; jne 0x401819 ; pop rbp ; ret
0x000000000041c831 : sar ebp, -0x17 ; ret 0x2a
0x0000000000435db1 : sar esp, cl ; jmp qword ptr [rdi]
0x000000000040180d : sar rax, 1 ; jne 0x40181a ; pop rbp ; ret
0x0000000000436ba8 : sbb al, 0 ; add byte ptr [rax], al ; sub al, 0xf ; add byte ptr [rax], al ; push rax ; ret 0xffff
0x00000000004217f0 : sbb al, 0x41 ; out dx, eax ; mov al, -0x47 ; ret
0x000000000041c731 : sbb cl, ch ; ret
0x000000000042a053 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000420840 : sbb ecx, dword ptr [rax - 0x7f] ; ret
0x0000000000421d72 : shr al, 0x78 ; ret 0
0x000000000040837c : shr al, 1 ; ret 0xffff
0x00000000004262a0 : shr cl, 1 ; ret
0x0000000000427af8 : shr cl, 1 ; ret 3
0x000000000041b732 : shr cl, cl ; ret 0x3b
0x0000000000427af7 : shr r9b, 1 ; ret 3
0x0000000000436bad : sldt word ptr [rax] ; push rax ; ret 0xffff
0x000000000041956d : stc ; ret 0x77a8
0x00000000004039f1 : stc ; sub eax, 0xf000000 ; xchg eax, esp ; ret 0xe280
0x0000000000436192 : std ; call qword ptr [rcx]
0x0000000000436312 : std ; call qword ptr [rdx]
0x00000000004358ba : std ; call rsp
0x0000000000435fd2 : std ; jmp rsp
0x0000000000435932 : std ; push qword ptr [rax + rcx + 0x670c0000] ; std ; call rsp
0x0000000000435972 : std ; push qword ptr [rcx + rcx - 0x7ea40000] ; std ; call rsp
0x00000000004358f2 : std ; push qword ptr [rdi + rax + 0x39ac0000] ; std ; call rsp
0x00000000004359b2 : std ; push qword ptr [rdx + rcx - 0x54c40000] ; std ; call rsp
0x00000000004200f7 : std ; ret 0x279e
0x000000000042c467 : std ; ret 0x281b
0x00000000004359b9 : stosd dword ptr [rdi], eax ; std ; call rsp
0x0000000000423142 : sub al, 0 ; add cl, ch ; ret
0x0000000000436bac : sub al, 0xf ; add byte ptr [rax], al ; push rax ; ret 0xffff
0x0000000000435dac : sub al, 1 ; add byte ptr [rax], al ; adc bl, dl ; cld ; jmp qword ptr [rdi]
0x000000000040da4e : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040877b : sub bl, byte ptr [rbx + 0x58] ; ret
0x000000000040823a : sub byte ptr [rax - 0x75], cl ; push rbp ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4808
0x0000000000432196 : sub byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040d938 : sub byte ptr [rax], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000041ac65 : sub byte ptr [rbp - 0x7f], bh ; ret 0xffd5
0x000000000041ac5b : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000041ad35 : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x00000000004034e8 : sub dword ptr [rax], eax ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004085bc : sub dword ptr [rbx + 0x58], ebx ; ret
0x000000000041baf5 : sub eax, 0x81268e82 ; ret 0xffd9
0x00000000004039f2 : sub eax, 0xf000000 ; xchg eax, esp ; ret 0xe280
0x000000000042a80f : sub edx, edi ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000408238 : sub esi, edx ; sub byte ptr [rax - 0x75], cl ; push rbp ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4808
0x000000000043488d : sub esp, 8 ; add rsp, 8 ; ret
0x000000000043488c : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000041ac60 : test al, -0x7f ; ret 0x2d50
0x000000000041ad3a : test al, -0x7f ; ret 0xa30b
0x0000000000436501 : test al, -2 ; call rdi
0x0000000000430cd3 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000420ece : test al, 0x48 ; add esp, 0x80 ; pop rbp ; ret
0x000000000041d496 : test al, 0x48 ; mov ebp, 0xe19c53ba ; ret
0x00000000004298a8 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000043485a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000411adc : test byte ptr [rcx], ch ; ret 0
0x000000000040797a : test byte ptr [rdi], cl ; or al, byte ptr [rax] ; add cl, ch ; ret
0x00000000004275d6 : test byte ptr [rdx], dh ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000411ad6 : test dword ptr [rax + 0xffffffd], esp ; test byte ptr [rcx], ch ; ret 0
0x0000000000425e6e : test dword ptr [rax + rax], 0xc26bb800 ; ret
0x00000000004299b6 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000420aea : test dword ptr [rdi + rdi*8 - 1], esp ; call qword ptr [rbx]
0x000000000042d491 : test dword ptr [rdx], esp ; jmp 0x42d73d
0x000000000041c50b : test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x000000000041d76a : test dword ptr [rsi + rdi*8 + 0x6e94ffff], esp ; ret 0xe961
0x000000000041922a : test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x000000000041d71f : test eax, 0xb9dd5cac ; xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x000000000041b72f : wait ; jge 0x41b711 ; shr cl, cl ; ret 0x3b
0x00000000004167ed : wait ; jo 0x4167fb ; ret
0x0000000000419d3c : wait ; jo 0x419d4a ; ret
0x000000000040504c : wait ; pop rsp ; ret 0x8589
0x0000000000405b90 : wait ; pop rsp ; ret 0xc084
0x0000000000401845 : xchg byte ptr [rdx + 0x23], bl ; add byte ptr [rcx], al ; ret
0x00000000004257e7 : xchg dword ptr [rbx - 0x61], esi ; ret
0x0000000000431418 : xchg dword ptr [rsi + 4], ebp ; push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000042d5b3 : xchg eax, ebp ; ret
0x000000000040f824 : xchg eax, ebp ; ret 0x8445
0x0000000000408209 : xchg eax, ebp ; ret 0xd284
0x0000000000412375 : xchg eax, ebx ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x0000000000418c75 : xchg eax, ebx ; ret
0x0000000000418ea5 : xchg eax, ecx ; ret
0x000000000040c8b9 : xchg eax, edi ; ret 0xd284
0x00000000004126f5 : xchg eax, edx ; ret
0x000000000040b97d : xchg eax, edx ; ret 0x8445
0x0000000000427ea7 : xchg eax, edx ; ret 0x89a8
0x0000000000427e75 : xchg eax, edx ; ret 0xb9a8
0x00000000004298ae : xchg eax, edx ; ret 0xd284
0x0000000000425fff : xchg eax, esi ; ret 0xe280
0x0000000000428b4a : xchg eax, esp ; jmp 0x4295b8
0x0000000000428a87 : xchg eax, esp ; jmp 0x4295ba
0x000000000041d724 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x0000000000418ff5 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x000000000041d76f : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0xe961
0x0000000000420589 : xchg eax, esp ; ret 0x8041
0x0000000000409265 : xchg eax, esp ; ret 0x8445
0x000000000041c63e : xchg eax, esp ; ret 0xb740
0x00000000004082d3 : xchg eax, esp ; ret 0xd284
0x00000000004039f7 : xchg eax, esp ; ret 0xe280
0x00000000004030b4 : xchg eax, esp ; rol dword ptr [rax - 0x49f0fe1f], -0x3f ; pop rbp ; ret
0x0000000000428b49 : xchg eax, r12d ; jmp 0x4295b9
0x000000000041c639 : xor al, byte ptr [rbx - 0x6bf0fd12] ; ret 0xb740
0x0000000000410ed7 : xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000410ed8 : xor byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000435fd1 : xor ch, bh ; jmp rsp
