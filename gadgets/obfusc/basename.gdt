0x0000000000411d6e : adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x00000000004116e1 : adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x0000000000422635 : adc dh, bh ; jmp qword ptr [rax]
0x0000000000419ddb : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041286b : adc eax, 0x558abda1 ; ret
0x0000000000415e49 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000422634 : adc sil, dil ; jmp qword ptr [rax]
0x0000000000422661 : add al, 0 ; add byte ptr [rax], ah ; sub bh, dh ; jmp rax
0x000000000041e7ca : add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000422623 : add al, ah ; std ; jmp rax
0x0000000000422673 : add al, ah ; xor bh, dh ; jmp qword ptr [rax]
0x0000000000422b97 : add al, bh ; cmp edi, esi ; call qword ptr [rdx]
0x00000000004229d7 : add al, bh ; out dx, al ; std ; call rsi
0x0000000000422b95 : add al, byte ptr [rax] ; add al, bh ; cmp edi, esi ; call qword ptr [rdx]
0x00000000004034ef : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000422b94 : add al, byte ptr fs:[rax] ; add al, bh ; cmp edi, esi ; call qword ptr [rdx]
0x00000000004034a8 : add al, ch ; ret 0xffdf
0x000000000042279b : add al, dl ; jo 0x4227a2 ; jmp rax
0x0000000000419ab4 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x00000000004126a9 : add bh, al ; test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x0000000000421c0f : add bl, dh ; ret
0x00000000004218e2 : add byte ptr [r8], al ; add byte ptr [rcx], al ; ret 0xea81
0x0000000000421b44 : add byte ptr [r8], al ; add byte ptr [rcx], ch ; ret 0x5589
0x00000000004229d3 : add byte ptr [rax + rax - 0x11080000], ah ; std ; call rsi
0x0000000000416e0b : add byte ptr [rax - 0x75], cl ; clc ; mov rsp, rbp ; pop rbp ; ret
0x0000000000404f2f : add byte ptr [rax - 0x75], cl ; fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x00000000004041aa : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000422663 : add byte ptr [rax], ah ; sub bh, dh ; jmp rax
0x0000000000422632 : add byte ptr [rax], al ; adc sil, dil ; jmp qword ptr [rax]
0x00000000004229d5 : add byte ptr [rax], al ; add al, bh ; out dx, al ; std ; call rsi
0x0000000000422b92 : add byte ptr [rax], al ; add al, byte ptr fs:[rax] ; add al, bh ; cmp edi, esi ; call qword ptr [rdx]
0x00000000004034a6 : add byte ptr [rax], al ; add al, ch ; ret 0xffdf
0x0000000000419ab2 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000421c0d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000404f2d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x00000000004043d9 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000421c0b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004003f8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400428 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000004003fa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040042a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000004003fc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040042c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000040436e : add byte ptr [rax], al ; add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x00000000004158b2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000418273 : add byte ptr [rax], al ; add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x000000000041ee9c : add byte ptr [rax], al ; add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x000000000041abd9 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x000000000042271a : add byte ptr [rax], al ; add byte ptr [rbx - 1], cl ; call rax
0x00000000004218e3 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xea81
0x0000000000421b45 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x5589
0x0000000000419a20 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8b48
0x0000000000420cb1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000041e031 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000041fdc8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000405f7b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041dd45 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x00000000004199aa : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000417f85 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000415e4b : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004154d0 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000419ddd : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041f548 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401849 : add byte ptr [rax], al ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040114b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000422fae : add byte ptr [rax], al ; and byte ptr [rax - 1], dl ; jmp rsi
0x0000000000422b96 : add byte ptr [rax], al ; clc ; cmp edi, esi ; call qword ptr [rdx]
0x00000000004229d6 : add byte ptr [rax], al ; clc ; out dx, al ; std ; call rsi
0x0000000000422a76 : add byte ptr [rax], al ; cwde ; sbb esi, edi ; call qword ptr [rcx]
0x0000000000422faa : add byte ptr [rax], al ; jl 0x422fbd ; add byte ptr [rax], al ; and byte ptr [rax - 1], dl ; jmp rsi
0x0000000000401329 : add byte ptr [rax], al ; jmp 0x401169
0x00000000004227aa : add byte ptr [rax], al ; jne 0x4227b3 ; jmp qword ptr [rax]
0x00000000004228aa : add byte ptr [rax], al ; loop 0x4228b3 ; jmp qword ptr [rax]
0x0000000000422622 : add byte ptr [rax], al ; loopne 0x42261d ; std ; jmp rax
0x000000000042281a : add byte ptr [rax], al ; mov dil, dil ; jmp rax
0x0000000000421928 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004041a9 : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004229d2 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add al, bh ; out dx, al ; std ; call rsi
0x0000000000401d0e : add byte ptr [rax], al ; pop rbp ; ret
0x00000000004158b3 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004034f0 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004003fe : add byte ptr [rax], al ; ret
0x000000000040042e : add byte ptr [rax], al ; ret 0
0x00000000004226b2 : add byte ptr [rax], al ; ror byte ptr [rdx - 2], 1 ; jmp qword ptr [rax]
0x000000000042285a : add byte ptr [rax], al ; ror ch, -1 ; jmp rax
0x000000000042279a : add byte ptr [rax], al ; sal byte ptr [rax - 1], 1 ; jmp rax
0x00000000004227eb : add byte ptr [rax], dh ; test edi, edi ; jmp qword ptr [rax]
0x0000000000404370 : add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x00000000004158b4 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004034f1 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000041aeba : add byte ptr [rbx - 0x10d22bbb], cl ; jl 0x41aed9 ; ret
0x0000000000418275 : add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x000000000041822a : add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x000000000041ee9e : add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x0000000000421929 : add byte ptr [rbx - 0x76b71fbb], cl ; in al, dx ; pop rbp ; ret
0x000000000041abdb : add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x000000000042271c : add byte ptr [rbx - 1], cl ; call rax
0x0000000000419b1e : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401568 : add byte ptr [rcx], al ; ret
0x00000000004218e5 : add byte ptr [rcx], al ; ret 0xea81
0x0000000000421b47 : add byte ptr [rcx], ch ; ret 0x5589
0x0000000000419a22 : add byte ptr [rcx], ch ; ret 0x8b48
0x0000000000420cb3 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000041e033 : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000041fdca : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000404e57 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041dd47 : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x00000000004199ac : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000417f87 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000422b93 : add byte ptr [rdx + rax], ah ; add al, bh ; cmp edi, esi ; call qword ptr [rdx]
0x00000000004227a8 : add byte ptr [rdx], cl ; add byte ptr [rax], al ; jne 0x4227b5 ; jmp qword ptr [rax]
0x00000000004226b0 : add byte ptr [rsi], al ; add byte ptr [rax], al ; ror byte ptr [rdx - 2], 1 ; jmp qword ptr [rax]
0x00000000004228a8 : add byte ptr [rsi], cl ; add byte ptr [rax], al ; loop 0x4228b5 ; jmp qword ptr [rax]
0x00000000004127dc : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x000000000041847d : add cl, ch ; ret
0x0000000000405baa : add dword ptr [rax + 0xf], eax ; mov dh, -0x3a ; mov rsp, rbp ; pop rbp ; ret
0x00000000004041a8 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004041a7 : add dword ptr [rax], r8d ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000420e32 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x000000000041fc84 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000041fe6e : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000403fe2 : add dword ptr [rdi], ecx ; xchg eax, edi ; ret 0xe280
0x0000000000401564 : add eax, 0x222d2e ; add ebx, esi ; ret
0x0000000000422621 : add eax, dword ptr [rax] ; add al, ah ; std ; jmp rax
0x000000000040152b : add eax, edx ; sar rax, 1 ; jne 0x40153c ; pop rbp ; ret
0x0000000000401569 : add ebx, esi ; ret
0x000000000040189b : add esp, 0x10 ; pop rbp ; ret
0x0000000000419b1c : add esp, 0x100 ; pop rbp ; ret
0x0000000000419c8c : add esp, 0x1a0 ; pop rbp ; ret
0x00000000004154d3 : add esp, 0x20 ; pop rbp ; ret
0x00000000004034ec : add esp, 0x2e8 ; pop rbx ; pop rbp ; ret
0x0000000000419de0 : add esp, 0x40 ; pop rbp ; ret
0x000000000041e9c9 : add esp, 0x440 ; pop rbp ; ret
0x0000000000405582 : add esp, 0x50 ; pop rbp ; ret
0x000000000040184c : add esp, 0x60 ; pop rbp ; ret
0x00000000004171c2 : add esp, 0x70 ; pop rbp ; ret
0x00000000004058af : add esp, 0x80 ; pop rbp ; ret
0x000000000041a45d : add esp, 0x90 ; pop rbp ; ret
0x0000000000417fa6 : add esp, 0xa0 ; pop rbp ; ret
0x0000000000404fc8 : add esp, 0xb0 ; pop rbp ; ret
0x000000000040615a : add esp, 0xd0 ; pop rbp ; ret
0x0000000000401d0a : add esp, 0xe0 ; pop rbp ; ret
0x000000000041bdcf : add esp, 0xf0 ; pop rbp ; ret
0x0000000000406763 : add esp, 8 ; pop rbp ; ret
0x000000000040114e : add esp, 8 ; ret
0x000000000040152a : add rax, rdx ; sar rax, 1 ; jne 0x40153d ; pop rbp ; ret
0x000000000040189a : add rsp, 0x10 ; pop rbp ; ret
0x0000000000419b1b : add rsp, 0x100 ; pop rbp ; ret
0x0000000000419c8b : add rsp, 0x1a0 ; pop rbp ; ret
0x00000000004154d2 : add rsp, 0x20 ; pop rbp ; ret
0x00000000004034eb : add rsp, 0x2e8 ; pop rbx ; pop rbp ; ret
0x0000000000419ddf : add rsp, 0x40 ; pop rbp ; ret
0x000000000041e9c8 : add rsp, 0x440 ; pop rbp ; ret
0x0000000000405581 : add rsp, 0x50 ; pop rbp ; ret
0x000000000040184b : add rsp, 0x60 ; pop rbp ; ret
0x00000000004171c1 : add rsp, 0x70 ; pop rbp ; ret
0x00000000004058ae : add rsp, 0x80 ; pop rbp ; ret
0x000000000041a45c : add rsp, 0x90 ; pop rbp ; ret
0x0000000000417fa5 : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000404fc7 : add rsp, 0xb0 ; pop rbp ; ret
0x0000000000406159 : add rsp, 0xd0 ; pop rbp ; ret
0x0000000000401d09 : add rsp, 0xe0 ; pop rbp ; ret
0x000000000041bdce : add rsp, 0xf0 ; pop rbp ; ret
0x0000000000406762 : add rsp, 8 ; pop rbp ; ret
0x000000000040114d : add rsp, 8 ; ret
0x00000000004218ed : and al, 0xffffffffffffff81 ; ret 0x61
0x000000000041fc83 : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000041fe6d : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401567 : and al, byte ptr [rax] ; add ebx, esi ; ret
0x0000000000422fb0 : and byte ptr [rax - 1], dl ; jmp rsi
0x000000000041a90b : and byte ptr [rsi + 0x58], ah ; jb 0x41a942 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000411a11 : and eax, 0x75b4b9d3 ; ret
0x0000000000401149 : and eax, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000041ad05 : call 0x41adc9
0x000000000041f43d : call 0xffffffffaca2b671
0x000000000041f43c : call 0xffffffffaca2b672
0x00000000004154c9 : call 0xffffffffe903de19
0x00000000004154c8 : call 0xffffffffe903de1a
0x00000000004226e8 : call 0xfffffffff04226fa
0x0000000000421be9 : call qword ptr [r12 + rbx*8]
0x00000000004226ef : call qword ptr [rax]
0x0000000000416c8e : call qword ptr [rbx]
0x000000000041ea6c : call qword ptr [rcx]
0x0000000000414954 : call qword ptr [rdi]
0x000000000041093b : call qword ptr [rdx]
0x0000000000421bea : call qword ptr [rsp + rbx*8]
0x000000000040158d : call rax
0x0000000000412bbb : call rcx
0x0000000000414594 : call rdi
0x0000000000413dc5 : call rdx
0x00000000004229db : call rsi
0x000000000040431b : call rsp
0x000000000041e9c7 : clc ; add rsp, 0x440 ; pop rbp ; ret
0x000000000041a067 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x000000000041b359 : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x0000000000422b98 : clc ; cmp edi, esi ; call qword ptr [rdx]
0x000000000040152f : clc ; jne 0x401538 ; pop rbp ; ret
0x0000000000416e0f : clc ; mov rsp, rbp ; pop rbp ; ret
0x00000000004229d8 : clc ; out dx, al ; std ; call rsi
0x0000000000407f9d : clc ; ret 0x77a8
0x00000000004018c7 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041fa7e : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000041bdcd : cld ; add rsp, 0xf0 ; pop rbp ; ret
0x000000000040439f : cld ; jmp 0x40440c
0x000000000040439e : cld ; jmp 0x40440d
0x0000000000404e56 : cli ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041a910 : cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004218ec : cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x000000000041982b : cmc ; ret 0x4f0b
0x00000000004199c1 : cmp cl, byte ptr [rsi - 0x946182f] ; ret 0x4f0b
0x00000000004014ed : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401500 ; pop rbp ; ret
0x0000000000422b99 : cmp edi, esi ; call qword ptr [rdx]
0x0000000000412867 : cmp esp, dword ptr [rbp - 0x47] ; push -0x75425eeb ; push rbp ; ret
0x0000000000422a78 : cwde ; sbb esi, edi ; call qword ptr [rcx]
0x0000000000403f02 : dec dword ptr [rax + 1] ; ret 0x8b48
0x0000000000411d6b : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x00000000004116de : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x0000000000411ee3 : dec dword ptr [rax - 0x75] ; or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x00000000004038bf : dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000041e526 : dec dword ptr [rax - 0x77] ; ret 0x8148
0x0000000000418afb : dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000419826 : dec dword ptr [rcx - 0xa167e3f] ; ret 0x4f0b
0x0000000000407c7a : dec dword ptr [rdi] ; test byte ptr [rcx], ch ; ret 0
0x000000000041e353 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x000000000041dfa9 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000405f79 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004038bd : fdivr st(7) ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000041fea8 : fld qword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000404f32 : fmul dword ptr [r8 - 0x77] ; ret 0x2948
0x000000000041eb87 : fmul dword ptr [r9 - 0x57167e3f] ; ret
0x0000000000404f33 : fmul dword ptr [rax - 0x77] ; ret 0x2948
0x000000000041eb88 : fmul dword ptr [rcx - 0x57167e3f] ; ret
0x0000000000421bec : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000401899 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041f0ec : hlt ; add rsp, 0xe0 ; pop rbp ; ret
0x0000000000406761 : hlt ; add rsp, 8 ; pop rbp ; ret
0x0000000000401500 : hlt ; pop rbp ; mov edi, 0x624230 ; jmp rax
0x000000000041aa3b : idiv edi ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000041b711 : in al, 0x48 ; add esp, 0xb0 ; pop rbp ; ret
0x000000000041f4fc : in al, dx ; jmp 0x41f579
0x000000000041f4fb : in al, dx ; jmp 0x41f57a
0x000000000041ae3a : in al, dx ; out dx, eax ; jl 0x41ae51 ; ret
0x000000000041ae39 : in al, dx ; out dx, eax ; jl 0x41ae52 ; ret
0x00000000004038c2 : in al, dx ; pop rbp ; ret
0x0000000000404e54 : inc byte ptr [rax - 0x6af0ff06] ; ret 0xd284
0x00000000004227e7 : inc dword ptr [rax] ; or eax, dword ptr [rax] ; add byte ptr [rax], dh ; test edi, edi ; jmp qword ptr [rax]
0x0000000000402db4 : inc dword ptr [rcx + 0xf] ; ret
0x000000000042265f : inc eax ; add al, 0 ; add byte ptr [rax], ah ; sub bh, dh ; jmp rax
0x000000000042261f : inc eax ; add eax, dword ptr [rax] ; add al, ah ; std ; jmp rax
0x000000000041e7ff : int 0x29
0x0000000000417977 : int 0x5b
0x00000000004014f3 : ja 0x4014fa ; pop rbp ; ret
0x00000000004033ba : jae 0x403377 ; ret 0x6f38
0x000000000041a90e : jb 0x41a93f ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004014ff : je 0x4014fd ; pop rbp ; mov edi, 0x624230 ; jmp rax
0x0000000000410e06 : jge 0x410d8b ; ret 0xffd5
0x00000000004118d0 : jge 0x4118b0 ; shr cl, cl ; ret 0x3b
0x000000000041ae3c : jl 0x41ae4f ; ret
0x000000000041aec0 : jl 0x41aed3 ; ret
0x0000000000422fac : jl 0x422fbb ; add byte ptr [rax], al ; and byte ptr [rax - 1], dl ; jmp rsi
0x00000000004227dd : jle 0x4227e0 ; jmp rax
0x000000000040132b : jmp 0x401167
0x00000000004043a0 : jmp 0x40440b
0x0000000000412020 : jmp 0x4154a0
0x000000000040ff24 : jmp 0x4154a1
0x00000000004112f1 : jmp 0x4154a2
0x0000000000418c4b : jmp 0x4196b7
0x0000000000418b88 : jmp 0x4196b9
0x000000000041acb3 : jmp 0x41ad18
0x000000000041e866 : jmp 0x41eb48
0x000000000041f4fd : jmp 0x41f578
0x000000000041982a : jmp 0x4f4d5b26
0x0000000000401932 : jmp 0xffffffffc2d73154
0x0000000000414df5 : jmp qword ptr [rax]
0x0000000000422d2b : jmp qword ptr [rbx]
0x0000000000406bf2 : jmp qword ptr [rcx]
0x0000000000412aa7 : jmp qword ptr [rdi]
0x00000000004033d0 : jmp qword ptr [rdx + 0x70]
0x0000000000419aba : jmp qword ptr [rdx]
0x0000000000401507 : jmp rax
0x00000000004113f8 : jmp rbx
0x0000000000411e2a : jmp rcx
0x0000000000411452 : jmp rdi
0x0000000000401547 : jmp rdx
0x0000000000422fb3 : jmp rsi
0x0000000000411708 : jmp rsp
0x0000000000401530 : jne 0x401537 ; pop rbp ; ret
0x00000000004227ad : jne 0x4227b0 ; jmp qword ptr [rax]
0x00000000004227ac : jne 0x4227b1 ; jmp qword ptr [rax]
0x000000000040ad1e : jo 0x40ad2a ; ret
0x000000000040c98e : jo 0x40c99a ; ret
0x000000000040fedd : jo 0x40fee9 ; ret
0x00000000004171c4 : jo 0x417225 ; ret
0x000000000042279d : jo 0x4227a0 ; jmp rax
0x00000000004230b9 : jo 0x4230bc ; call qword ptr [rdx]
0x00000000004118ce : lcall ptr [rbx - 0x162d2583] ; ret 0x3b
0x00000000004129ce : lcall ptr [rsi] ; pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x0000000000404ba6 : lea eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000407615 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004174b9 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000407614 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000041022e : ljmp ptr [rdi] ; ret 0x23da
0x00000000004228ad : loop 0x4228b0 ; jmp qword ptr [rax]
0x00000000004228ac : loop 0x4228b1 ; jmp qword ptr [rax]
0x0000000000413235 : loope 0x413203 ; jmp 0x4154a3
0x0000000000401d0c : loopne 0x401d13 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000407613 : loopne 0x407666 ; lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000416bbd : loopne 0x416c23 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000417fa4 : loopne 0x417ff7 ; add esp, 0xa0 ; pop rbp ; ret
0x000000000041a373 : loopne 0x41a37c ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041acfe : loopne 0x41ad4e ; add esp, 0x60 ; pop rbp ; ret
0x000000000041acfd : loopne 0x41ad4f ; add esp, 0x60 ; pop rbp ; ret
0x000000000041f0f0 : loopne 0x41f0f7 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041fa82 : loopne 0x41fa89 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042192c : loopne 0x42197b ; mov esp, ebp ; pop rbp ; ret
0x000000000042192b : loopne 0x42197c ; mov esp, ebp ; pop rbp ; ret
0x0000000000421b7c : loopne 0x421bcb ; mov esp, ebp ; pop rbp ; ret
0x0000000000421b7b : loopne 0x421bcc ; mov esp, ebp ; pop rbp ; ret
0x0000000000422624 : loopne 0x42261b ; std ; jmp rax
0x0000000000410dfd : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000410ed7 : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000040ee85 : mov ah, 0x75 ; ret
0x0000000000417993 : mov al, -0x47 ; ret
0x000000000041e02f : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000404fca : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000422718 : mov al, 7 ; add byte ptr [rax], al ; add byte ptr [rbx - 1], cl ; call rax
0x000000000042019d : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041fe6a : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004200cd : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042281d : mov bh, bh ; jmp rax
0x0000000000408825 : mov bl, 0x75 ; ret
0x0000000000401563 : mov byte ptr [rip + 0x222d2e], 1 ; ret
0x000000000041067f : mov ch, byte ptr [rdx - 0x47] ; pop rbp ; pop rcx ; ret 0x1b2
0x0000000000405bad : mov dh, -0x3a ; mov rsp, rbp ; pop rbp ; ret
0x0000000000420e34 : mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x000000000041fc86 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000041fe70 : mov dh, -0x40 ; pop rbp ; ret
0x000000000042281c : mov dil, dil ; jmp rax
0x00000000004218ea : mov dl, -0x34 ; cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x0000000000420b61 : mov dr1, word ptr [rcx + rcx*4 - 0x7bf05bbb] ; ret 2
0x0000000000406d99 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040696f : mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x000000000041f4fa : mov dword ptr [rbp - 0x14], eax ; jmp 0x41f57b
0x0000000000418c48 : mov dword ptr [rbp - 0x6c], eax ; jmp 0x4196ba
0x0000000000401897 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004018c5 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407076 : mov dword ptr [rcx + 0x30], eax ; mov rsp, rbp ; pop rbp ; ret
0x0000000000406c1d : mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000422798 : mov eax, 0xd0000009 ; jo 0x4227a5 ; jmp rax
0x0000000000406499 : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000041ab7b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041ad4e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040557e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041f375 : mov eax, dword ptr [rbp - 0x18] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000406d9c : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000041acfc : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000042192a : mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000406c1f : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000040675f : mov eax, dword ptr [rbp - 0xc] ; add rsp, 8 ; pop rbp ; ret
0x0000000000416e0d : mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000406c1e : mov eax, dword ptr ds:[rbp - 0x38] ; pop rbp ; ret
0x0000000000413638 : mov ebp, 0xe19c53ba ; ret
0x000000000040158b : mov ebp, esp ; call rax
0x00000000004014f1 : mov ebp, esp ; ja 0x4014fc ; pop rbp ; ret
0x000000000040696c : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x0000000000401585 : mov edi, 0x623e20 ; mov rbp, rsp ; call rax
0x0000000000401502 : mov edi, 0x624230 ; jmp rax
0x0000000000401542 : mov edi, 0x624230 ; jmp rdx
0x000000000040fed7 : mov edi, 0xb8000055 ; wait ; jo 0x40feef ; ret
0x0000000000421be7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000421be6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000041e7de : mov edx, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000041069b : mov edx, 0x595db993 ; ret 0x8b48
0x0000000000401bc2 : mov esi, 0x181ab95a ; xchg eax, edi ; ret 0x558a
0x0000000000411512 : mov esi, 0x39443e04 ; ret 0xf41
0x000000000041e7c7 : mov esi, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000401540 : mov esi, eax ; mov edi, 0x624230 ; jmp rdx
0x00000000004038c1 : mov esp, ebp ; pop rbp ; ret
0x0000000000407075 : mov qword ptr [rcx + 0x30], rax ; mov rsp, rbp ; pop rbp ; ret
0x0000000000406498 : mov rax, qword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000041ab7a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041ad4d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040557d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041acfb : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000416e0c : mov rax, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040158a : mov rbp, rsp ; call rax
0x00000000004014f0 : mov rbp, rsp ; ja 0x4014fd ; pop rbp ; ret
0x000000000040153f : mov rsi, rax ; mov edi, 0x624230 ; jmp rdx
0x00000000004038c0 : mov rsp, rbp ; pop rbp ; ret
0x000000000041a911 : mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000040c178 : movabs byte ptr [0x840ffffff3c48589], al ; ret 0x4b
0x00000000004229d4 : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add al, bh ; out dx, al ; std ; call rsi
0x000000000040f3c5 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x6a8a
0x0000000000420e33 : movzx eax, al ; add rsp, 8 ; pop rbp ; ret
0x000000000041fc85 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000041fe6f : movzx eax, al ; pop rbp ; ret
0x0000000000405bac : movzx eax, dh ; mov rsp, rbp ; pop rbp ; ret
0x0000000000405bab : movzx eax, sil ; mov rsp, rbp ; pop rbp ; ret
0x000000000041e5d8 : neg byte ptr [rsi + 0x2948e012] ; ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000408665 : nop ; ret
0x0000000000416a72 : nop ; ret 0x148
0x0000000000416a86 : nop ; ret 0x2948
0x0000000000421c08 : nop dword ptr [rax + rax] ; ret
0x0000000000410dfa : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000410ed4 : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000406970 : or byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000418228 : or byte ptr [rax], al ; add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x0000000000411ee6 : or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x0000000000407074 : or dword ptr [rax - 0x77], ecx ; xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000422799 : or dword ptr [rax], eax ; add al, dl ; jo 0x4227a4 ; jmp rax
0x0000000000401847 : or eax, 0x48000000 ; add esp, 0x60 ; pop rbp ; ret
0x00000000004227e9 : or eax, dword ptr [rax] ; add byte ptr [rax], dh ; test edi, edi ; jmp qword ptr [rax]
0x0000000000406c1b : or edi, eax ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x00000000004127db : out dx, al ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x000000000041fe6c : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004229d9 : out dx, al ; std ; call rsi
0x000000000042019f : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041ae3b : out dx, eax ; jl 0x41ae50 ; ret
0x000000000041aebf : out dx, eax ; jl 0x41aed4 ; ret
0x0000000000417992 : out dx, eax ; mov al, -0x47 ; ret
0x000000000041e7c9 : outsb dx, byte ptr [rsi] ; add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x00000000004138c5 : outsb dx, byte ptr [rsi] ; ret 0x4861
0x0000000000408516 : outsb dx, byte ptr [rsi] ; ret 0x8961
0x0000000000413910 : outsb dx, byte ptr [rsi] ; ret 0xe961
0x0000000000419ab1 : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000041e7cc : outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000041a90c : pop ax ; jb 0x41a941 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000414779 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000421bfc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000416bbf : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041477b : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000421bfe : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041477d : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000421c00 : pop r14 ; pop r15 ; ret
0x0000000000407619 : pop r14 ; pop rbp ; ret
0x000000000041477f : pop r15 ; pop rbp ; ret
0x0000000000421c02 : pop r15 ; ret
0x000000000041a90d : pop rax ; jb 0x41a940 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000401562 : pop rbp ; mov byte ptr [rip + 0x222d2e], 1 ; ret
0x0000000000401501 : pop rbp ; mov edi, 0x624230 ; jmp rax
0x000000000040153e : pop rbp ; mov rsi, rax ; mov edi, 0x624230 ; jmp rdx
0x0000000000421bfb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041477c : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000421bff : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000410682 : pop rbp ; pop rcx ; ret 0x1b2
0x000000000040c955 : pop rbp ; pop rcx ; ret 0x8589
0x000000000041069e : pop rbp ; pop rcx ; ret 0x8b48
0x00000000004014f5 : pop rbp ; ret
0x0000000000416bbe : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004158b5 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000407618 : pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004034f2 : pop rbx ; pop rbp ; ret
0x0000000000418230 : pop rbx ; ret
0x0000000000410683 : pop rcx ; ret 0x1b2
0x000000000040ad56 : pop rcx ; ret 0x8589
0x000000000041069f : pop rcx ; ret 0x8b48
0x00000000004129d0 : pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x0000000000414780 : pop rdi ; pop rbp ; ret
0x0000000000421c03 : pop rdi ; ret
0x0000000000414f62 : pop rdx ; ret
0x000000000041477e : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000421c01 : pop rsi ; pop r15 ; ret
0x000000000040761a : pop rsi ; pop rbp ; ret
0x000000000041477a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000421bfd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000416bc0 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040ad55 : pop rsp ; pop rcx ; ret 0x8589
0x0000000000420cb5 : popfq ; ret 0xd284
0x0000000000410680 : push -0x47 ; pop rbp ; pop rcx ; ret 0x1b2
0x000000000041286a : push -0x75425eeb ; push rbp ; ret
0x000000000040f3c8 : push -0x77 ; test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x0000000000405584 : push rax ; pop rbp ; ret
0x0000000000404e53 : push rbp ; inc byte ptr [rax - 0x6af0ff06] ; ret 0xd284
0x0000000000401584 : push rbp ; mov edi, 0x623e20 ; mov rbp, rsp ; call rax
0x000000000041286f : push rbp ; ret
0x0000000000412806 : push rbp ; ret 0xd284
0x0000000000410dff : push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000410ed9 : push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000041e7cb : push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000041e035 : pushfq ; ret 0xd284
0x00000000004038bc : rcr al, -1 ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x0000000000400400 : ret
0x0000000000400430 : ret 0
0x0000000000416a73 : ret 0x148
0x00000000004139d4 : ret 0x1a
0x0000000000408c4d : ret 0x1add
0x0000000000410685 : ret 0x1b2
0x0000000000401332 : ret 0x222d
0x000000000040959a : ret 0x23da
0x0000000000416298 : ret 0x279e
0x0000000000404f36 : ret 0x2948
0x00000000004129d4 : ret 0x2a
0x0000000000401c71 : ret 0x2ae9
0x0000000000410e02 : ret 0x2d50
0x000000000041e32e : ret 0x3040
0x00000000004118d4 : ret 0x3b
0x000000000040e935 : ret 0x3e
0x0000000000401936 : ret 0x4589
0x0000000000411d71 : ret 0x4802
0x000000000041e7ce : ret 0x4815
0x00000000004138c6 : ret 0x4861
0x00000000004038de : ret 0x48f0
0x00000000004031d4 : ret 0x4991
0x000000000040c181 : ret 0x4b
0x0000000000417797 : ret 0x4cc0
0x00000000004147d8 : ret 0x4cf0
0x000000000041982c : ret 0x4f0b
0x000000000041ea28 : ret 0x52e8
0x0000000000406bcb : ret 0x5589
0x0000000000401bc8 : ret 0x558a
0x000000000041108a : ret 0x5966
0x0000000000418487 : ret 0x5bc6
0x00000000004218ef : ret 0x61
0x00000000004082e6 : ret 0x6a8a
0x0000000000402125 : ret 0x6f38
0x0000000000407f9e : ret 0x77a8
0x0000000000409101 : ret 0x7a8a
0x000000000040fd7b : ret 0x7b7f
0x000000000041672a : ret 0x8041
0x0000000000416972 : ret 0x8141
0x000000000041e529 : ret 0x8148
0x0000000000411c94 : ret 0x822d
0x0000000000416740 : ret 0x8445
0x0000000000403314 : ret 0x8589
0x0000000000408d13 : ret 0x8940
0x000000000040555b : ret 0x8948
0x000000000041cdef : ret 0x894a
0x0000000000408517 : ret 0x8961
0x000000000041e3e8 : ret 0x8a44
0x000000000041e2e5 : ret 0x8a4a
0x0000000000401b3a : ret 0x8b48
0x0000000000410edc : ret 0xa30b
0x000000000041f43f : ret 0xac60
0x000000000040318a : ret 0xb0
0x00000000004127e0 : ret 0xb740
0x000000000041a907 : ret 0xb848
0x0000000000410a10 : ret 0xb940
0x000000000041e272 : ret 0xb94a
0x0000000000412e5c : ret 0xbf48
0x0000000000401525 : ret 0xc148
0x0000000000421b32 : ret 0xc493
0x000000000041fe29 : ret 0xca21
0x00000000004218f5 : ret 0xccb2
0x0000000000404e5a : ret 0xd284
0x000000000041ca35 : ret 0xd618
0x0000000000403fe5 : ret 0xe280
0x00000000004126b2 : ret 0xe940
0x0000000000413911 : ret 0xe961
0x000000000040973d : ret 0xea51
0x00000000004218e7 : ret 0xea81
0x00000000004154cc : ret 0xee8
0x0000000000406c05 : ret 0xf281
0x0000000000411517 : ret 0xf41
0x0000000000413465 : ret 0xf7f3
0x0000000000411bee : ret 0xfc75
0x000000000041345f : ret 0xffa5
0x0000000000411be8 : ret 0xffc4
0x0000000000410e08 : ret 0xffd5
0x0000000000410ee2 : ret 0xffd8
0x0000000000411c9a : ret 0xffd9
0x00000000004034aa : ret 0xffdf
0x0000000000411084 : ret 0xffe0
0x000000000040fd75 : ret 0xfffa
0x000000000040175a : ret 0xfffb
0x00000000004232f9 : ret 0xffff
0x0000000000411550 : ret 1
0x00000000004031ce : ret 2
0x0000000000414bd4 : ret 8
0x000000000041e7ad : rol byte ptr [rax + 0x48f22948], -0x7f ; ret 1
0x000000000041b2cc : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040615c : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000422620 : rol byte ptr [rbx], 0 ; add al, ah ; std ; jmp rax
0x00000000004226a0 : rol byte ptr [rip + 0x46400000], -2 ; jmp rax
0x000000000041e7ac : rol byte ptr ds:[rax + 0x48f22948], -0x7f ; ret 1
0x000000000041a904 : ror byte ptr [rax + 1], cl ; ret 0xb848
0x0000000000422858 : ror byte ptr [rax + rax], 0 ; ror ch, -1 ; jmp rax
0x000000000040152c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40153b ; pop rbp ; ret
0x000000000041fc87 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x0000000000406c1a : ror byte ptr [rcx], -0x39 ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x00000000004226b4 : ror byte ptr [rdx - 2], 1 ; jmp qword ptr [rax]
0x0000000000422898 : ror byte ptr [rip - 0x20f00000], -1 ; jmp rax
0x000000000042285c : ror ch, -1 ; jmp rax
0x000000000041e5de : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000417650 : ror dword ptr [rcx - 0x7d], cl ; ret
0x000000000041fdcc : sahf ; ret 0xd284
0x000000000042279c : sal byte ptr [rax - 1], 1 ; jmp rax
0x000000000040152e : sar eax, 1 ; jne 0x401539 ; pop rbp ; ret
0x00000000004129d1 : sar ebp, -0x17 ; ret 0x2a
0x000000000040152d : sar rax, 1 ; jne 0x40153a ; pop rbp ; ret
0x0000000000417990 : sbb al, 0x41 ; out dx, eax ; mov al, -0x47 ; ret
0x0000000000401c6e : sbb bl, byte ptr [rax] ; xchg eax, edi ; ret 0x2ae9
0x0000000000401978 : sbb bl, byte ptr [rax] ; xchg eax, edi ; ret 0x4589
0x0000000000401bc5 : sbb bl, byte ptr [rax] ; xchg eax, edi ; ret 0x558a
0x0000000000401b37 : sbb bl, byte ptr [rax] ; xchg eax, edi ; ret 0x8b48
0x0000000000404e51 : sbb byte ptr [rdx - 0x57f01ab], cl ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004128d1 : sbb cl, ch ; ret
0x000000000041a153 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000401933 : sbb dword ptr [rax], ebx ; xchg eax, edi ; ret 0x4589
0x00000000004169e0 : sbb ecx, dword ptr [rax - 0x7f] ; ret
0x0000000000422a79 : sbb esi, edi ; call qword ptr [rcx]
0x00000000004118d2 : shr cl, cl ; ret 0x3b
0x000000000040f70d : stc ; ret 0x77a8
0x00000000004229da : std ; call rsi
0x000000000042261e : std ; inc eax ; add eax, dword ptr [rax] ; add al, ah ; std ; jmp rax
0x0000000000422626 : std ; jmp rax
0x0000000000416297 : std ; ret 0x279e
0x00000000004044ee : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000422665 : sub bh, dh ; jmp rax
0x000000000041f546 : sub byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004043d8 : sub byte ptr [rax], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000410e05 : sub byte ptr [rbp - 0x7f], bh ; ret 0xffd5
0x0000000000410dfb : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000410ed5 : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000411c95 : sub eax, 0x81268e82 ; ret 0xffd9
0x0000000000401566 : sub eax, 0xf3010022 ; ret
0x000000000041a90f : sub edx, edi ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000421c3d : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000421c3c : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000410e00 : test al, -0x7f ; ret 0x2d50
0x0000000000410eda : test al, -0x7f ; ret 0xa30b
0x000000000041e083 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041706e : test al, 0x48 ; add esp, 0x80 ; pop rbp ; ret
0x0000000000413636 : test al, 0x48 ; mov ebp, 0xe19c53ba ; ret
0x00000000004199a8 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000421c0a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000407c7c : test byte ptr [rcx], ch ; ret 0
0x0000000000407c76 : test dword ptr [rax + 0xffffffd], esp ; test byte ptr [rcx], ch ; ret 0
0x0000000000419ab6 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000416c8a : test dword ptr [rdi + rdi*8 - 1], esp ; call qword ptr [rbx]
0x00000000004126ab : test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x000000000041390a : test dword ptr [rsi + rdi*8 + 0x6e94ffff], esp ; ret 0xe961
0x000000000040f3ca : test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x00000000004138bf : test eax, 0xb9dd5cac ; xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x00000000004227ed : test edi, edi ; jmp qword ptr [rax]
0x00000000004118cf : wait ; jge 0x4118b1 ; shr cl, cl ; ret 0x3b
0x000000000040c98d : wait ; jo 0x40c99b ; ret
0x000000000040fedc : wait ; jo 0x40feea ; ret
0x000000000041e7c8 : xchg dword ptr [rsi + 4], ebp ; push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000404e59 : xchg eax, ebp ; ret 0xd284
0x0000000000408515 : xchg eax, ebx ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x000000000040ee15 : xchg eax, ebx ; ret
0x000000000040f045 : xchg eax, ecx ; ret
0x0000000000401c70 : xchg eax, edi ; ret 0x2ae9
0x0000000000401935 : xchg eax, edi ; ret 0x4589
0x0000000000401bc7 : xchg eax, edi ; ret 0x558a
0x0000000000401b39 : xchg eax, edi ; ret 0x8b48
0x000000000041dd49 : xchg eax, edi ; ret 0xd284
0x0000000000403fe4 : xchg eax, edi ; ret 0xe280
0x0000000000408895 : xchg eax, edx ; ret
0x000000000041673f : xchg eax, edx ; ret 0x8445
0x00000000004199ae : xchg eax, edx ; ret 0xd284
0x0000000000418c4a : xchg eax, esp ; jmp 0x4196b8
0x0000000000418b87 : xchg eax, esp ; jmp 0x4196ba
0x00000000004138c4 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x000000000040f195 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x000000000041390f : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0xe961
0x0000000000416729 : xchg eax, esp ; ret 0x8041
0x00000000004127de : xchg eax, esp ; ret 0xb740
0x0000000000417f89 : xchg eax, esp ; ret 0xd284
0x0000000000418c49 : xchg eax, r12d ; jmp 0x4196b9
0x00000000004127d9 : xor al, byte ptr [rbx - 0x6bf0fd12] ; ret 0xb740
0x0000000000422675 : xor bh, dh ; jmp qword ptr [rax]
0x0000000000407077 : xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000407078 : xor byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
