0x0000000000426e1e : adc al, -0x75 ; hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042d1fd : adc al, 0 ; add byte ptr [rsp + rbx - 1], cl ; jmp rsp
0x000000000042e524 : adc al, 0x10 ; add byte ptr [rax], al ; mov byte ptr [rdi + rdi*8], bl ; call qword ptr [rdx]
0x000000000041a95f : adc al, byte ptr [rcx + 0x4f9] ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x000000000041a822 : adc al, byte ptr [rcx + 0x4f9] ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf280
0x000000000041e212 : adc byte ptr [rax - 0x7f], cl ; ret 0x108
0x000000000041e58f : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x00000000004047fa : adc dword ptr [rax - 0x7f], ecx ; ret 0x78
0x000000000042d13d : adc dword ptr [rax], eax ; add byte ptr [rax + rsi*2 - 2], ch ; call rsp
0x000000000042d049 : adc esi, edi ; jmp rsp
0x0000000000401c44 : add ah, byte ptr [rbx] ; jmp rax
0x0000000000401c84 : add ah, byte ptr [rbx] ; jmp rdx
0x000000000041066e : add al, 0x63 ; add byte ptr [rbp - 0x77], al ; ret
0x0000000000403e23 : add al, 0x63 ; add byte ptr [rbp - 0x77], al ; ret 0x8141
0x0000000000406bf0 : add al, 0x63 ; add byte ptr [rcx - 0x77], al ; ret
0x0000000000408dc0 : add al, 0x63 ; add byte ptr [rcx - 0x77], al ; ret 0x8141
0x000000000042d7af : add al, ah ; cmpsd dword ptr [rsi], dword ptr [rdi] ; std ; call qword ptr [rax]
0x000000000042d7ad : add al, byte ptr [rax] ; add al, ah ; cmpsd dword ptr [rsi], dword ptr [rdi] ; std ; call qword ptr [rax]
0x000000000042d72d : add al, byte ptr [rax] ; add byte ptr [rax - 0x5c], al ; std ; call qword ptr [rsi]
0x0000000000405428 : add al, ch ; push rdx ; ret
0x00000000004038c7 : add al, ch ; ret
0x000000000042d1c1 : add bh, bh ; jmp rsp
0x000000000042b29f : add bl, dh ; ret
0x000000000042a0cb : add byte ptr [r8], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x000000000041fd9b : add byte ptr [rax + 0x21], cl ; ret 0x8148
0x000000000042cf47 : add byte ptr [rax + rdi*4 - 3], bl ; call rsp
0x000000000042d42f : add byte ptr [rax + rdx*8 - 1], bl ; call rsp
0x000000000042e543 : add byte ptr [rax + rdx], dh ; add byte ptr [rax], al ; mov byte ptr [rdi + rdi*8], bl ; call qword ptr [rdx]
0x000000000042e523 : add byte ptr [rax + rdx], dl ; add byte ptr [rax], al ; mov byte ptr [rdi + rdi*8], bl ; call qword ptr [rdx]
0x000000000042d13f : add byte ptr [rax + rsi*2 - 2], ch ; call rsp
0x000000000042d72f : add byte ptr [rax - 0x5c], al ; std ; call qword ptr [rsi]
0x000000000040650e : add byte ptr [rax - 0x6bf10000], al ; ret 0xc8b
0x000000000040e4ec : add byte ptr [rax - 0x73], cl ; clc ; pop rbx ; pop rbp ; ret
0x0000000000408575 : add byte ptr [rax - 0x73], cl ; xor al, 0x25 ; pop rbx ; ret 0x42
0x0000000000421cc7 : add byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x000000000040f370 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000413392 : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000420679 : add byte ptr [rax - 0x77], cl ; or cl, ch ; ret
0x0000000000402872 : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000042db57 : add byte ptr [rax - 2], ch ; std ; call qword ptr [rdi]
0x000000000042eccf : add byte ptr [rax], ah ; mov bh, -1 ; call rax
0x000000000042e522 : add byte ptr [rax], al ; adc al, 0x10 ; add byte ptr [rax], al ; mov byte ptr [rdi + rdi*8], bl ; call qword ptr [rdx]
0x0000000000405426 : add byte ptr [rax], al ; add al, ch ; push rdx ; ret
0x00000000004038c5 : add byte ptr [rax], al ; add al, ch ; ret
0x000000000042b29d : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000041fd99 : add byte ptr [rax], al ; add byte ptr [rax + 0x21], cl ; ret 0x8148
0x0000000000421cc5 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x0000000000413390 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000420677 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; or cl, ch ; ret
0x0000000000402870 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000042b29b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000418378 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000042b139 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000411b59 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004082de : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000421cc4 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004033aa : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042b29c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000410678 : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x0000000000403e2d : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x8141
0x000000000040d2d8 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004253bb : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000403784 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7478b], cl ; ret 0xb0
0x00000000004038e1 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b74b8b], cl ; ret 0xb0
0x00000000004039f1 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7538b], cl ; ret 0xb0
0x000000000040209d : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret
0x00000000004029de : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x844
0x0000000000401d75 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x0000000000406bfa : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x0000000000408dca : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x125
0x000000000041f7af : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x0000000000413934 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000403e3f : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000041395e : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x48b
0x0000000000402092 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x0000000000405115 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xf981
0x0000000000419a02 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xfa81
0x000000000042e75e : add byte ptr [rax], al ; add byte ptr [rcx - 1], al ; call rcx
0x00000000004170bd : add byte ptr [rax], al ; add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x000000000040d278 : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x51], al ; ret
0x000000000041e3f4 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000042a0cc : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x0000000000403e4a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret
0x000000000040dc86 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x000000000042aac2 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x000000000042a182 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x000000000041f81c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret
0x0000000000401cfb : add byte ptr [rax], al ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x125
0x0000000000423c3a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000401d40 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x00000000004135c8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x48b
0x00000000004107d5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5588
0x000000000040fa3e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x0000000000412520 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x9588
0x000000000041856b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x000000000040f171 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x0000000000406c08 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000404754 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x0000000000409d31 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x000000000041a963 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x0000000000402a69 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x00000000004157f9 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x00000000004068d9 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041a826 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf280
0x0000000000426bee : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xfe81
0x0000000000418b41 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xff81
0x00000000004190e6 : add byte ptr [rax], al ; add cl, ch ; jmp qword ptr [rdi]
0x00000000004046e9 : add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000410dca : add byte ptr [rax], al ; add cl, ch ; ret 0
0x000000000040b2a1 : add byte ptr [rax], al ; add cl, ch ; ret 0x13
0x0000000000409ab3 : add byte ptr [rax], al ; add cl, ch ; ret 0x2a
0x000000000042746a : add byte ptr [rax], al ; add cl, ch ; ret 0xb
0x000000000040ab9e : add byte ptr [rax], al ; add cl, ch ; ret 1
0x0000000000402ed2 : add byte ptr [rax], al ; add cl, ch ; ret 2
0x0000000000414b78 : add byte ptr [rax], al ; add cl, ch ; ret 5
0x0000000000407d1f : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408d6f : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403411 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041c39e : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041837a : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401733 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004054a8 : add byte ptr [rax], al ; call 0x401794
0x000000000042d13e : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jo 0x42d146 ; call rsp
0x000000000042d88a : add byte ptr [rax], al ; jl 0x42d89a ; add byte ptr [rax], al ; nop ; scasd eax, dword ptr [rdi] ; std ; call rbx
0x0000000000401949 : add byte ptr [rax], al ; jmp 0x401749
0x0000000000406120 : add byte ptr [rax], al ; jmp 0x404f62
0x000000000041a9b9 : add byte ptr [rax], al ; jmp 0x41bb34
0x000000000042cece : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; std ; jmp rsp
0x000000000042d7ae : add byte ptr [rax], al ; loopne 0x42d75e ; std ; call qword ptr [rax]
0x000000000042ddc2 : add byte ptr [rax], al ; mov ah, 8 ; add byte ptr [rax], al ; pop rax ; sbb bh, dh ; jmp rcx
0x0000000000429ebc : add byte ptr [rax], al ; mov al, sil ; movzx eax, al ; pop rbp ; ret
0x0000000000429d0d : add byte ptr [rax], al ; mov ax, si ; movzx eax, ax ; pop rbp ; ret
0x000000000042e526 : add byte ptr [rax], al ; mov byte ptr [rdi + rdi*8], bl ; call qword ptr [rdx]
0x0000000000408ba2 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000426ca8 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000042b13b : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000411b5b : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000042ecca : add byte ptr [rax], al ; mov esp, 0x20000017 ; mov bh, -1 ; call rax
0x0000000000408812 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004082e0 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004220f9 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000421cc6 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000413391 : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000042d72e : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; std ; call qword ptr [rsi]
0x000000000042d88e : add byte ptr [rax], al ; nop ; scasd eax, dword ptr [rdi] ; std ; call rbx
0x000000000042ddc6 : add byte ptr [rax], al ; pop rax ; sbb bh, dh ; jmp rcx
0x00000000004033ac : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040d2d9 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000427ff5 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040c501 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000042d42e : add byte ptr [rax], al ; pop rsp ; sar bh, 1 ; call rsp
0x000000000042d32e : add byte ptr [rax], al ; pop rsp ; xchg bh, bh ; call rsp
0x000000000042e8ae : add byte ptr [rax], al ; push rax ; je 0x42e8b7 ; call qword ptr [rdx]
0x000000000042ec0e : add byte ptr [rax], al ; push rax ; mov cl, -1 ; jmp qword ptr [rbx]
0x000000000042de62 : add byte ptr [rax], al ; push rsp ; or dword ptr [rax], eax ; add byte ptr [rax], bl ; and edi, esi ; call rcx
0x000000000042d7aa : add byte ptr [rax], al ; pushfq ; add al, byte ptr [rax] ; add al, ah ; cmpsd dword ptr [rsi], dword ptr [rdi] ; std ; call qword ptr [rax]
0x000000000042b29e : add byte ptr [rax], al ; ret
0x000000000042cf06 : add byte ptr [rax], al ; sbb al, -0x53 ; std ; call rsp
0x000000000042d1fe : add byte ptr [rax], al ; sbb al, -1 ; jmp rsp
0x000000000042d72a : add byte ptr [rax], al ; sbb al, 2 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; std ; call qword ptr [rsi]
0x000000000042e542 : add byte ptr [rax], al ; xor al, 0x10 ; add byte ptr [rax], al ; mov byte ptr [rdi + rdi*8], bl ; call qword ptr [rdx]
0x000000000042de67 : add byte ptr [rax], bl ; and edi, esi ; call rcx
0x000000000042df47 : add byte ptr [rax], ch ; cmp edi, esi ; call qword ptr [rax]
0x000000000041067a : add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x0000000000403e2f : add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x8141
0x0000000000410670 : add byte ptr [rbp - 0x77], al ; ret
0x0000000000403e25 : add byte ptr [rbp - 0x77], al ; ret 0x8141
0x000000000040d2da : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000427ff6 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040c502 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000042d36f : add byte ptr [rbx + rbx*4 - 1], bl ; call rsp
0x0000000000403786 : add byte ptr [rbx - 0x76b7478b], cl ; ret 0xb0
0x00000000004038e3 : add byte ptr [rbx - 0x76b74b8b], cl ; ret 0xb0
0x00000000004039f3 : add byte ptr [rbx - 0x76b7538b], cl ; ret 0xb0
0x000000000040650b : add byte ptr [rcx + 0x8000f9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x000000000041251c : add byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x9588
0x0000000000418567 : add byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x0000000000426bea : add byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xfe81
0x0000000000406c14 : add byte ptr [rcx + 0xf], al ; pushfq ; mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x000000000040209f : add byte ptr [rcx + 0xf], al ; pushfq ; ret
0x00000000004029e0 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x844
0x0000000000401d77 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x0000000000406bfc : add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x0000000000408dcc : add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x125
0x000000000041f7b1 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x0000000000413936 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000403e41 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000413960 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x48b
0x0000000000402094 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x0000000000405117 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xf981
0x0000000000419a04 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xfa81
0x000000000040d64c : add byte ptr [rcx + 0xfe], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040de88 : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000409d2d : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x0000000000402a65 : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x000000000042de63 : add byte ptr [rcx + rcx], dl ; add byte ptr [rax], bl ; and edi, esi ; call rcx
0x000000000042d3af : add byte ptr [rcx + rdi*4 - 1], ch ; call rsp
0x0000000000406bf2 : add byte ptr [rcx - 0x77], al ; ret
0x0000000000408dc2 : add byte ptr [rcx - 0x77], al ; ret 0x8141
0x000000000042e760 : add byte ptr [rcx - 1], al ; call rcx
0x00000000004170bf : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x0000000000401ca8 : add byte ptr [rcx], al ; ret
0x000000000040d27a : add byte ptr [rdi + rcx - 0x51], al ; ret
0x000000000041e3f6 : add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000042a0ce : add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x0000000000403e4c : add byte ptr [rdi], cl ; pushfq ; ret
0x000000000040dc88 : add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x000000000042aac4 : add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x000000000042a184 : add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x000000000041f81e : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret
0x0000000000401cfd : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x125
0x00000000004038c1 : add byte ptr [rdi], cl ; test byte ptr [rip - 0x18000000], ch ; ret
0x0000000000423c3c : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000401d42 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x00000000004135ca : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x48b
0x00000000004107d7 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5588
0x000000000040fa40 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x0000000000412522 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x9588
0x000000000041856d : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x000000000040f173 : add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x0000000000406c0a : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000404756 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x0000000000409d33 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x000000000041a965 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x0000000000402a6b : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x0000000000406511 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x00000000004068db : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041a828 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf280
0x0000000000426bf0 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xfe81
0x0000000000418b43 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xff81
0x000000000042d7ab : add byte ptr [rdx + rax - 0x58200000], bl ; std ; call qword ptr [rax]
0x000000000042d72b : add byte ptr [rdx + rax], bl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; std ; call qword ptr [rsi]
0x0000000000420bbf : add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x000000000042d32f : add byte ptr [rsi + rax*4 - 1], bl ; call rsp
0x000000000042db53 : add byte ptr [rsi + rax], al ; add byte ptr [rax - 2], ch ; std ; call qword ptr [rdi]
0x000000000042d1ff : add byte ptr [rsp + rbx - 1], cl ; jmp rsp
0x000000000041395d : add byte ptr cs:[rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x48b
0x0000000000405423 : add cl, ch ; add eax, 0xe8000000 ; push rdx ; ret
0x00000000004054a4 : add cl, ch ; and cl, byte ptr [rip - 0x1e180000] ; ret 0xffff
0x00000000004190e8 : add cl, ch ; jmp qword ptr [rdi]
0x00000000004046eb : add cl, ch ; ret
0x0000000000410dcc : add cl, ch ; ret 0
0x000000000040b2a3 : add cl, ch ; ret 0x13
0x0000000000409ab5 : add cl, ch ; ret 0x2a
0x000000000042746c : add cl, ch ; ret 0xb
0x000000000040aba0 : add cl, ch ; ret 1
0x0000000000402ed4 : add cl, ch ; ret 2
0x0000000000414b7a : add cl, ch ; ret 5
0x000000000040de5a : add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x000000000040defc : add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x0000000000408573 : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; xor al, 0x25 ; pop rbx ; ret 0x42
0x0000000000412f75 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000427ff4 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040c500 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000405422 : add dword ptr [rax], eax ; jmp 0x405437
0x000000000041fced : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004130dc : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041cc43 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000403987 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041fdfc : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000041eb1e : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000422a08 : add dword ptr [rdi], ecx ; ror dword ptr cs:[rdi], -0x69 ; ret 0x348b
0x00000000004190e2 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; jmp qword ptr [rdi]
0x0000000000406674 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret
0x0000000000410dc6 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0
0x000000000040b29d : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x0000000000409aaf : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x0000000000427466 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0xb
0x000000000040ab9a : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 1
0x00000000004182e4 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x348b
0x000000000041ee64 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x5588
0x0000000000401ca4 : add eax, 0x22e68e ; add ebx, esi ; ret
0x0000000000405425 : add eax, 0xe8000000 ; push rdx ; ret
0x00000000004190e5 : add eax, 0xe9000000 ; jmp qword ptr [rdi]
0x00000000004046e8 : add eax, 0xe9000000 ; ret
0x0000000000410dc9 : add eax, 0xe9000000 ; ret 0
0x000000000040b2a0 : add eax, 0xe9000000 ; ret 0x13
0x0000000000409ab2 : add eax, 0xe9000000 ; ret 0x2a
0x0000000000427469 : add eax, 0xe9000000 ; ret 0xb
0x000000000040ab9d : add eax, 0xe9000000 ; ret 1
0x0000000000402ed1 : add eax, 0xe9000000 ; ret 2
0x0000000000414b77 : add eax, 0xe9000000 ; ret 5
0x000000000041ab58 : add eax, 0xf000000 ; xchg eax, esp ; ret 0xc8b
0x0000000000401c6b : add eax, edx ; sar rax, 1 ; jne 0x401c7c ; pop rbp ; ret
0x0000000000401ca9 : add ebx, esi ; ret
0x0000000000401fab : add esp, 0x10 ; pop rbp ; ret
0x000000000041b8c8 : add esp, 0x168 ; pop rbx ; pop rbp ; ret
0x000000000040c4fd : add esp, 0x178 ; pop rbx ; pop rbp ; ret
0x000000000041445e : add esp, 0x18 ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040f55c : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000420160 : add esp, 0x1b8 ; pop rbx ; pop rbp ; ret
0x0000000000429280 : add esp, 0x1e0 ; pop rbp ; ret
0x00000000004286fd : add esp, 0x1e8 ; pop rbx ; pop rbp ; ret
0x0000000000408088 : add esp, 0x20 ; pop rbp ; ret
0x000000000040331e : add esp, 0x30 ; pop rbp ; ret
0x00000000004021b8 : add esp, 0x40 ; pop rbp ; ret
0x000000000040f09f : add esp, 0x40 ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040d56c : add esp, 0x50 ; pop rbp ; ret
0x000000000041426d : add esp, 0x58 ; pop rbx ; pop rbp ; ret
0x000000000040398c : add esp, 0x60 ; pop rbp ; ret
0x000000000040d892 : add esp, 0x70 ; pop rbp ; ret
0x000000000040c91e : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000412df4 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040f3bc : add esp, 0xb0 ; pop rbp ; ret
0x0000000000426557 : add esp, 0xc0 ; pop rbp ; ret
0x00000000004253b8 : add esp, 0xd8 ; pop rbx ; pop rbp ; ret
0x0000000000406ae2 : add esp, 0xe0 ; pop rbp ; ret
0x0000000000411987 : add esp, 0xf0 ; pop rbp ; ret
0x0000000000401736 : add esp, 8 ; ret
0x000000000040868d : add esp, dword ptr [rbx] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000407b81 : add esp, dword ptr [rbx] ; pop rbp ; ret
0x0000000000401c6a : add rax, rdx ; sar rax, 1 ; jne 0x401c7d ; pop rbp ; ret
0x0000000000401faa : add rsp, 0x10 ; pop rbp ; ret
0x000000000041b8c7 : add rsp, 0x168 ; pop rbx ; pop rbp ; ret
0x000000000040c4fc : add rsp, 0x178 ; pop rbx ; pop rbp ; ret
0x000000000040f55b : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000042015f : add rsp, 0x1b8 ; pop rbx ; pop rbp ; ret
0x000000000042927f : add rsp, 0x1e0 ; pop rbp ; ret
0x00000000004286fc : add rsp, 0x1e8 ; pop rbx ; pop rbp ; ret
0x0000000000408087 : add rsp, 0x20 ; pop rbp ; ret
0x000000000040331d : add rsp, 0x30 ; pop rbp ; ret
0x00000000004021b7 : add rsp, 0x40 ; pop rbp ; ret
0x000000000040f09e : add rsp, 0x40 ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040d56b : add rsp, 0x50 ; pop rbp ; ret
0x000000000041426c : add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x000000000040398b : add rsp, 0x60 ; pop rbp ; ret
0x000000000040d891 : add rsp, 0x70 ; pop rbp ; ret
0x000000000040c91d : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000412df3 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040f3bb : add rsp, 0xb0 ; pop rbp ; ret
0x0000000000426556 : add rsp, 0xc0 ; pop rbp ; ret
0x00000000004253b7 : add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x0000000000406ae1 : add rsp, 0xe0 ; pop rbp ; ret
0x0000000000411986 : add rsp, 0xf0 ; pop rbp ; ret
0x0000000000401735 : add rsp, 8 ; ret
0x000000000041fdfb : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000041eb1d : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401ca7 : and al, byte ptr [rax] ; add ebx, esi ; ret
0x00000000004208d1 : and byte ptr [r15], cl ; xchg eax, esp ; ret 0x348b
0x00000000004208d2 : and byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x00000000004054a6 : and cl, byte ptr [rip - 0x1e180000] ; ret 0xffff
0x0000000000422175 : and eax, 0x42ce30 ; mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x000000000040df87 : and eax, 0x48ffffee ; add esp, 0x20 ; pop rbp ; ret
0x0000000000407b7f : and eax, 0x630358 ; pop rbp ; ret
0x0000000000407ba3 : and eax, 0x630360 ; pop rbp ; ret
0x000000000042de69 : and edi, esi ; call rcx
0x0000000000413f36 : call 0x38827a8a
0x0000000000413f35 : call 0x38827a8b
0x00000000004054aa : call 0x401792
0x000000000040829c : call 0x49030bec
0x000000000040829b : call 0x49030bed
0x000000000040829c : call 0x49030bef
0x000000000040829b : call 0x49030bf0
0x00000000004145b7 : call 0xffffffff8c03e3ce
0x00000000004145b6 : call 0xffffffff8c03e3cf
0x000000000040c799 : call 0xffffffffe90350e9
0x000000000040c798 : call 0xffffffffe90350ea
0x0000000000422ff4 : call 0xffffffffff7bbb45
0x0000000000422ff3 : call 0xffffffffff7bbb46
0x000000000042b279 : call qword ptr [r12 + rbx*8]
0x000000000042d7b3 : call qword ptr [rax]
0x000000000042db5b : call qword ptr [rdi]
0x000000000042cf7b : call qword ptr [rdx + rcx - 0x3cb40000]
0x000000000042e52b : call qword ptr [rdx]
0x000000000042d733 : call qword ptr [rsi]
0x000000000042b27a : call qword ptr [rsp + rbx*8]
0x00000000004212fd : call r8
0x0000000000401ccd : call rax
0x000000000042d893 : call rbx
0x00000000004210fe : call rcx
0x000000000042e63b : call rdx
0x000000000042cf0b : call rsp
0x0000000000426828 : clc ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004215b6 : clc ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004131e9 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000421ee0 : clc ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041ddc5 : clc ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004259f2 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000412df2 : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x0000000000426555 : clc ; add rsp, 0xc0 ; pop rbp ; ret
0x0000000000401c6f : clc ; jne 0x401c78 ; pop rbp ; ret
0x0000000000426abc : clc ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x000000000041d04e : clc ; mov dword ptr [rcx + 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041fac7 : clc ; mov dword ptr [rdi + 0x18], 0x95f616 ; pop rbp ; ret
0x00000000004265ee : clc ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x00000000004201bb : clc ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x00000000004201db : clc ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x00000000004201fb : clc ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x00000000004033b7 : clc ; pop rbp ; ret
0x000000000040cd63 : clc ; pop rbx ; pop rbp ; ret
0x000000000041f6bd : cld ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406ae0 : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x0000000000418c3d : cld ; add rsp, 0xf0 ; pop rbp ; ret
0x000000000042b216 : cld ; mov dword ptr [rbp - 0xc], eax ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000411b5f : cld ; pop rbp ; ret
0x000000000042ae26 : cli ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000407b7e : cmp al, 0x25 ; pop rax ; add esp, dword ptr [rbx] ; pop rbp ; ret
0x000000000041efc9 : cmp al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000042a2ae : cmp byte ptr [rax], ah ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x0000000000401d3e : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x0000000000420fad : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000429ffe : cmp byte ptr [rax], dh ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000042a6ee : cmp byte ptr [rcx], ah ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x0000000000421df5 : cmp dword ptr [rax - 0x75], ecx ; jne 0x421ddf ; call rax
0x0000000000423c38 : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x000000000040fa3c : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x000000000040cc2d : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406cc6 : cmp dword ptr [rcx], eax ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000405667 : cmp dword ptr [rdx], eax ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x0000000000404752 : cmp dword ptr [rdx], eax ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x0000000000401c2d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401c40 ; pop rbp ; ret
0x000000000042df49 : cmp edi, esi ; call qword ptr [rax]
0x000000000042d7b1 : cmpsd dword ptr [rsi], dword ptr [rdi] ; std ; call qword ptr [rax]
0x0000000000402cba : dec byte ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x0000000000408ebf : dec byte ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret
0x00000000004047f7 : dec dword ptr [rax - 0x75] ; adc dword ptr [rax - 0x7f], ecx ; ret 0x78
0x0000000000411395 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; enter 0x42cb, 0 ; jmp rcx
0x00000000004147f3 : dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000040e786 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000427d64 : dec dword ptr [rax - 0x7f] ; ret 1
0x00000000004046e5 : dec dword ptr [rdi] ; test dword ptr [rip - 0x17000000], eax ; ret
0x000000000042857a : dec dword ptr [rdi] ; test dword ptr [rip - 0x17000000], eax ; ret 1
0x0000000000402ece : dec dword ptr [rdi] ; test dword ptr [rip - 0x17000000], eax ; ret 2
0x00000000004029dc : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x844
0x0000000000401d73 : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x000000000041eae0 : div dword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000041eadf : div qword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000040c84b : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000423524 : enter -0x74b8, 0x32 ; mov rdi, qword ptr [rsi] ; call rcx
0x0000000000421df2 : enter -0x74b8, 0x39 ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x0000000000407b55 : enter -0x7cb8, -0x3c ; pop rbp ; ret
0x000000000041139a : enter 0x42cb, 0 ; jmp rcx
0x00000000004253ba : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004269b9 : fbld dword ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x00000000004269ba : fbld dword ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000042d471 : fcos ; call rsp
0x0000000000404b49 : fiadd dword ptr [rcx - 0xa] ; ret 0x4001
0x0000000000405128 : fiadd dword ptr [rcx - 0xa] ; ret 0x4401
0x000000000040da7f : fiadd dword ptr [rcx - 0xa] ; ret 0x4801
0x00000000004020a6 : fiadd dword ptr [rcx - 0xa] ; ret 0x8801
0x000000000040e7f7 : fiadd dword ptr [rcx - 0xa] ; ret 0x8901
0x000000000041012e : fiadd dword ptr [rcx - 0xa] ; ret 0xf01
0x0000000000403e52 : fild dword ptr [rcx - 0xa] ; ret
0x0000000000401731 : fild dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000041eefa : fisub word ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000041eefb : fisub word ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000040aeb8 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000413ef8 : fmul dword ptr [rax - 0x77] ; ret 0x3948
0x000000000042b27c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000401fa9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040331c : hlt ; add rsp, 0x30 ; pop rbp ; ret
0x000000000042b219 : hlt ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000426ab8 : hlt ; mov rcx, qword ptr [rbp - 8] ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x0000000000401c40 : hlt ; pop rbp ; mov edi, 0x6302e0 ; jmp rax
0x000000000042b13f : hlt ; pop rbp ; ret
0x0000000000408ba6 : in al, dx ; pop rbp ; ret
0x00000000004033b3 : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x000000000041c523 : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000410118 : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x000000000040d64e : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040cd33 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000405aa0 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x000000000040de8a : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000409d2f : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x0000000000402a67 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x000000000042a0c8 : inc dword ptr [rcx + 0x41f9] ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x000000000042aabe : inc dword ptr [rcx + 0x5af9] ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x000000000042a17e : inc dword ptr [rcx + 0x5af9] ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x000000000042d1fb : inc esp ; adc al, 0 ; add byte ptr [rsp + rbx - 1], cl ; jmp rsp
0x000000000042d140 : insb byte ptr [rdi], dx ; jo 0x42d144 ; call rsp
0x000000000040f378 : int 0x80
0x0000000000401c33 : ja 0x401c3a ; pop rbp ; ret
0x00000000004265f1 : ja 0x42663e ; pop rbp ; ret
0x000000000042ccaa : jb 0x42ccd2 ; sub ch, byte ptr [rcx] ; add byte ptr [rax], al ; ret
0x00000000004002d6 : jbe 0x40027d ; xchg al, dh ; xchg eax, esi ; jl 0x400326 ; ret
0x0000000000401c3f : je 0x401c3d ; pop rbp ; mov edi, 0x6302e0 ; jmp rax
0x000000000042e8b1 : je 0x42e8b4 ; call qword ptr [rdx]
0x00000000004033b6 : jge 0x4033b3 ; pop rbp ; ret
0x00000000004201ba : jge 0x4201bb ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x00000000004201da : jge 0x4201db ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x00000000004201fa : jge 0x4201fb ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000425540 : jge 0x425533 ; mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x00000000004265ed : jge 0x4265ee ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x00000000004002db : jl 0x400321 ; ret
0x000000000042d88c : jl 0x42d898 ; add byte ptr [rax], al ; nop ; scasd eax, dword ptr [rdi] ; std ; call rbx
0x000000000040194b : jmp 0x401747
0x0000000000406122 : jmp 0x404f60
0x0000000000405424 : jmp 0x405435
0x000000000041bb26 : jmp 0x41a88d
0x000000000041a9bb : jmp 0x41bb32
0x000000000041e769 : jmp 0x41e58b
0x0000000000422cb3 : jmp 0x4904b603
0x0000000000422df5 : jmp 0x4904b745
0x0000000000424df0 : jmp 0x4904d740
0x0000000000424e5d : jmp 0x4904d7ad
0x000000000042612a : jmp 0x4904ea7a
0x0000000000426197 : jmp 0x4904eae7
0x000000000042ec13 : jmp qword ptr [rbx]
0x000000000042e4ab : jmp qword ptr [rcx]
0x00000000004190ea : jmp qword ptr [rdi]
0x000000000042e15b : jmp qword ptr [rsi]
0x0000000000401c47 : jmp rax
0x000000000042d813 : jmp rbx
0x00000000004025f1 : jmp rcx
0x000000000042e0b3 : jmp rdi
0x0000000000401c87 : jmp rdx
0x00000000004185dd : jmp rsp
0x0000000000401c70 : jne 0x401c77 ; pop rbp ; ret
0x000000000041dbe9 : jne 0x41dbcc ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x000000000041eae1 : jne 0x41ead9 ; mov rax, rdx ; pop rbp ; ret
0x00000000004210f6 : jne 0x4210c0 ; mov r8, qword ptr [rsi] ; mov rsi, qword ptr [r8] ; call rcx
0x0000000000421df8 : jne 0x421ddc ; call rax
0x000000000040d894 : jo 0x40d8f5 ; ret
0x000000000041ab55 : jo 0x41aae1 ; stc ; add eax, 0xf000000 ; xchg eax, esp ; ret 0xc8b
0x00000000004213df : jo 0x4213f8 ; mov qword ptr [rbp - 0x48], rdx ; call r8
0x000000000042d141 : jo 0x42d143 ; call rsp
0x000000000040c4ff : js 0x40c508 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040c920 : js 0x40c980 ; pop rbp ; ret
0x000000000040d735 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000411d5f : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040cd61 : lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040d734 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040cd60 : lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000042d13c : lodsb al, byte ptr [rsi] ; adc dword ptr [rax], eax ; add byte ptr [rax + rsi*2 - 2], ch ; call rsp
0x000000000042ced0 : lodsb al, byte ptr [rsi] ; std ; jmp rsp
0x000000000042cf09 : lodsd eax, dword ptr [rsi] ; std ; call rsp
0x0000000000429af9 : loop 0x429b4b ; or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x0000000000429cd1 : loop 0x429d23 ; or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x0000000000406ae4 : loopne 0x406aeb ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040cd5f : loopne 0x40cdb0 ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040cd5e : loopne 0x40cdb1 ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000410245 : loopne 0x410295 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000410244 : loopne 0x410296 ; add esp, 0x20 ; pop rbp ; ret
0x000000000041058b : loopne 0x4105db ; add esp, 0x20 ; pop rbp ; ret
0x000000000041058a : loopne 0x4105dc ; add esp, 0x20 ; pop rbp ; ret
0x000000000041edd9 : loopne 0x41ee2a ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000041edd8 : loopne 0x41ee2b ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000422be9 : loopne 0x422c4f ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000429282 : loopne 0x42928a ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042d7b0 : loopne 0x42d75c ; std ; call qword ptr [rax]
0x000000000042d32c : mov ah, 0x19 ; add byte ptr [rax], al ; pop rsp ; xchg bh, bh ; call rsp
0x000000000042d42c : mov ah, 0x1d ; add byte ptr [rax], al ; pop rsp ; sar bh, 1 ; call rsp
0x000000000042ddc4 : mov ah, 8 ; add byte ptr [rax], al ; pop rax ; sbb bh, dh ; jmp rcx
0x000000000042cf04 : mov ah, 8 ; add byte ptr [rax], al ; sbb al, -0x53 ; std ; call rsp
0x000000000040f3be : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004269b8 : mov al, byte ptr [rbp - 0x21] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041eef9 : mov al, byte ptr [rbp - 0x22] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004209cc : mov al, byte ptr [rbp - 0x33] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000429f89 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042ae24 : mov al, byte ptr [rbp - 6] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000426aec : mov al, byte ptr [rdi + 0x1c] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000429ebf : mov al, dh ; movzx eax, al ; pop rbp ; ret
0x0000000000429ebe : mov al, sil ; movzx eax, al ; pop rbp ; ret
0x0000000000429d0f : mov ax, si ; movzx eax, ax ; pop rbp ; ret
0x0000000000429d13 : mov bh, -0x40 ; pop rbp ; ret
0x000000000042ecd1 : mov bh, -1 ; call rax
0x0000000000407ba1 : mov byte ptr [0x630360], al ; pop rbp ; ret
0x0000000000406c18 : mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x000000000040611f : mov byte ptr [rax], 0 ; jmp 0x404f63
0x00000000004190e1 : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; jmp qword ptr [rdi]
0x0000000000406673 : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret
0x000000000040b29c : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x0000000000409aae : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x000000000040ca86 : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 1
0x000000000042e528 : mov byte ptr [rdi + rdi*8], bl ; call qword ptr [rdx]
0x0000000000401ca3 : mov byte ptr [rip + 0x22e68e], 1 ; ret
0x000000000042ec11 : mov cl, -1 ; jmp qword ptr [rbx]
0x000000000041fcef : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004130de : mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041cc45 : mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000403989 : mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000429e57 : mov dh, -0x40 ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000041fdfe : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000041eb20 : mov dh, -0x40 ; pop rbp ; ret
0x0000000000407b7d : mov dword ptr [0x630358], edi ; pop rbp ; ret
0x000000000041a9aa : mov dword ptr [rax - 0xa], 0x858801c7 ; ret 0xfffe
0x00000000004088ea : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000408a38 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004021b4 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004212f6 : mov dword ptr [rbp - 0x30], eax ; mov qword ptr [rbp - 0x38], rdx ; call r8
0x00000000004212fa : mov dword ptr [rbp - 0x38], edx ; call r8
0x00000000004213e2 : mov dword ptr [rbp - 0x48], edx ; call r8
0x0000000000401fa7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042b217 : mov dword ptr [rbp - 0xc], eax ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x00000000004033b5 : mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x0000000000426abd : mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x000000000041d04f : mov dword ptr [rcx + 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x000000000042217a : mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x000000000041fac8 : mov dword ptr [rdi + 0x18], 0x95f616 ; pop rbp ; ret
0x00000000004033a7 : mov dword ptr [rdi + 0x20], 0 ; pop rbp ; ret
0x00000000004265f0 : mov dword ptr [rdi + 0x48], esi ; pop rbp ; ret
0x000000000041db3a : mov eax, 0x50c48348 ; pop rbp ; ret
0x0000000000420162 : mov eax, 0x5b000001 ; pop rbp ; ret
0x000000000040c91c : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x000000000040fc85 : mov eax, 0xf0658d48 ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040e4eb : mov eax, dword ptr [rax] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000429481 : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000408818 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040f7b1 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408084 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000414269 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x000000000042947e : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000408815 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040d4ca : mov eax, dword ptr [rbp - 0x10] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000407f73 : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000408ba4 : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000040f6bf : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004087cd : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004088e4 : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040da94 : mov eax, dword ptr [rbp - 0x18] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004082e3 : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000410243 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040cd5d : mov eax, dword ptr [rbp - 0x20] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000428bc8 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000425e04 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041dbef : mov eax, dword ptr [rbp - 0x28] ; call rax
0x0000000000408a3a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000041f4d2 : mov eax, dword ptr [rbp - 0x30] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004227e8 : mov eax, dword ptr [rbp - 0x30] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000407b53 : mov eax, dword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004150fd : mov eax, dword ptr [rbp - 0x44] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041db38 : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040c91a : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000426e1f : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040331a : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000042b13d : mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x000000000041f6bb : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000411b5d : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000426826 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004215b4 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004131e7 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000421ede : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041ddc3 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004259f0 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000421cc9 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004201bd : mov eax, dword ptr [rdi + 0x10] ; pop rbp ; ret
0x00000000004201dd : mov eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0x00000000004201fd : mov eax, dword ptr [rdi + 0x20] ; pop rbp ; ret
0x00000000004210f9 : mov eax, dword ptr [rsi] ; mov rsi, qword ptr [r8] ; call rcx
0x0000000000429afe : mov eax, edi ; pop rbp ; ret
0x000000000041eae4 : mov eax, edx ; pop rbp ; ret
0x0000000000429d10 : mov eax, esi ; movzx eax, ax ; pop rbp ; ret
0x0000000000429b33 : mov eax, esi ; pop rbp ; ret
0x0000000000401ccb : mov ebp, esp ; call rax
0x0000000000401c31 : mov ebp, esp ; ja 0x401c3c ; pop rbp ; ret
0x00000000004033b2 : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000413a36 : mov ecx, 0x10a ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x000000000041338e : mov ecx, 0xa8 ; mov rsp, rbp ; pop rbp ; ret
0x00000000004025ea : mov ecx, dword ptr [rax*8 + 0x42b340] ; jmp rcx
0x0000000000403cdb : mov ecx, dword ptr [rax*8 + 0x42bdf0] ; jmp rcx
0x0000000000405322 : mov ecx, dword ptr [rax*8 + 0x42be40] ; jmp rcx
0x0000000000409267 : mov ecx, dword ptr [rax*8 + 0x42c270] ; jmp rcx
0x0000000000409d81 : mov ecx, dword ptr [rax*8 + 0x42c2b8] ; jmp rcx
0x000000000040e842 : mov ecx, dword ptr [rax*8 + 0x42c778] ; jmp rcx
0x0000000000411417 : mov ecx, dword ptr [rax*8 + 0x42cb68] ; jmp rcx
0x0000000000411397 : mov ecx, dword ptr [rax*8 + 0x42cbc8] ; jmp rcx
0x000000000041df05 : mov ecx, dword ptr [rax*8 + 0x42ccb0] ; jmp rcx
0x00000000004088e7 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004230e2 : mov ecx, dword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000422ff2 : mov ecx, dword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000425543 : mov ecx, dword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000426aba : mov ecx, dword ptr [rbp - 8] ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x000000000042580a : mov ecx, dword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000429b5d : mov ecx, eax ; shl edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000429b2d : mov ecx, eax ; shr edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000401cc5 : mov edi, 0x62fe20 ; mov rbp, rsp ; call rax
0x0000000000401c42 : mov edi, 0x6302e0 ; jmp rax
0x0000000000401c82 : mov edi, 0x6302e0 ; jmp rdx
0x000000000042cf79 : mov edi, 0xa94fffd ; add byte ptr [rax], al ; ret
0x0000000000420e3e : mov edi, 0xf660000 ; pop rsp ; ret 0xf66
0x00000000004265ec : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x00000000004201b9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x00000000004201d9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x00000000004201f9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000422ff6 : mov edi, dword ptr [rcx] ; call rax
0x0000000000421df4 : mov edi, dword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x0000000000423529 : mov edi, dword ptr [rsi] ; call rcx
0x000000000042b277 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000042b276 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000423522 : mov edx, dword ptr [rbp - 0x38] ; mov rsi, qword ptr [rdx] ; mov rdi, qword ptr [rsi] ; call rcx
0x00000000004213de : mov esi, dword ptr [rax + 0x10] ; mov qword ptr [rbp - 0x48], rdx ; call r8
0x00000000004210fc : mov esi, dword ptr [rax] ; call rcx
0x0000000000421df7 : mov esi, dword ptr [rbp - 0x20] ; call rax
0x00000000004210f5 : mov esi, dword ptr [rbp - 0x40] ; mov r8, qword ptr [rsi] ; mov rsi, qword ptr [r8] ; call rcx
0x0000000000425547 : mov esi, dword ptr [rcx] ; call rax
0x0000000000423526 : mov esi, dword ptr [rdx] ; mov rdi, qword ptr [rsi] ; call rcx
0x0000000000401c80 : mov esi, eax ; mov edi, 0x6302e0 ; jmp rdx
0x000000000041dbec : mov esi, eax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x000000000042eccc : mov esp, 0x20000017 ; mov bh, -1 ; call rax
0x00000000004150ff : mov esp, 0x50c48348 ; pop rbp ; ret
0x000000000040d4ce : mov esp, ebp ; pop rbp ; ret
0x0000000000401ca5 : mov fs, esi ; and al, byte ptr [rax] ; add ebx, esi ; ret
0x0000000000407b7c : mov qword ptr [0x630358], rdi ; pop rbp ; ret
0x00000000004212f5 : mov qword ptr [rbp - 0x30], rax ; mov qword ptr [rbp - 0x38], rdx ; call r8
0x00000000004212f9 : mov qword ptr [rbp - 0x38], rdx ; call r8
0x00000000004213e1 : mov qword ptr [rbp - 0x48], rdx ; call r8
0x00000000004033b4 : mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x00000000004033a6 : mov qword ptr [rdi + 0x20], 0 ; pop rbp ; ret
0x00000000004265ef : mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x00000000004150fe : mov r12d, 0x50c48348 ; pop rbp ; ret
0x00000000004210f8 : mov r8, qword ptr [rsi] ; mov rsi, qword ptr [r8] ; call rcx
0x000000000041db39 : mov r8d, 0x50c48348 ; pop rbp ; ret
0x000000000040c91b : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x000000000040e4ea : mov rax, qword ptr [rax] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040f7b0 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408083 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000408814 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040d4c9 : mov rax, qword ptr [rbp - 0x10] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000407f72 : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040f6be : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004087cc : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040da93 : mov rax, qword ptr [rbp - 0x18] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004082e2 : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000410242 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000425e03 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041dbee : mov rax, qword ptr [rbp - 0x28] ; call rax
0x00000000004220fb : mov rax, qword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000407b52 : mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041db37 : mov rax, qword ptr [rbp - 0x48] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000426825 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004215b3 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004131e6 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000421edd : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041ddc2 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004259ef : mov rax, qword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000421cc8 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004201bc : mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x00000000004201dc : mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x00000000004201fc : mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000429afd : mov rax, rdi ; pop rbp ; ret
0x000000000041eae3 : mov rax, rdx ; pop rbp ; ret
0x0000000000401cca : mov rbp, rsp ; call rax
0x0000000000401c30 : mov rbp, rsp ; ja 0x401c3d ; pop rbp ; ret
0x00000000004033b1 : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x00000000004025e9 : mov rcx, qword ptr [rax*8 + 0x42b340] ; jmp rcx
0x0000000000403cda : mov rcx, qword ptr [rax*8 + 0x42bdf0] ; jmp rcx
0x0000000000405321 : mov rcx, qword ptr [rax*8 + 0x42be40] ; jmp rcx
0x0000000000409266 : mov rcx, qword ptr [rax*8 + 0x42c270] ; jmp rcx
0x0000000000409d80 : mov rcx, qword ptr [rax*8 + 0x42c2b8] ; jmp rcx
0x000000000040e841 : mov rcx, qword ptr [rax*8 + 0x42c778] ; jmp rcx
0x0000000000411416 : mov rcx, qword ptr [rax*8 + 0x42cb68] ; jmp rcx
0x0000000000411396 : mov rcx, qword ptr [rax*8 + 0x42cbc8] ; jmp rcx
0x000000000041df04 : mov rcx, qword ptr [rax*8 + 0x42ccb0] ; jmp rcx
0x00000000004230e1 : mov rcx, qword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000422ff1 : mov rcx, qword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000425542 : mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000426ab9 : mov rcx, qword ptr [rbp - 8] ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x0000000000425809 : mov rcx, qword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x00000000004265eb : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x00000000004201b8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x00000000004201d8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x00000000004201f8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000422ff5 : mov rdi, qword ptr [rcx] ; call rax
0x0000000000421df3 : mov rdi, qword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x0000000000423528 : mov rdi, qword ptr [rsi] ; call rcx
0x00000000004210fb : mov rsi, qword ptr [r8] ; call rcx
0x00000000004213dd : mov rsi, qword ptr [rax + 0x10] ; mov qword ptr [rbp - 0x48], rdx ; call r8
0x0000000000421df6 : mov rsi, qword ptr [rbp - 0x20] ; call rax
0x0000000000425546 : mov rsi, qword ptr [rcx] ; call rax
0x0000000000423525 : mov rsi, qword ptr [rdx] ; mov rdi, qword ptr [rsi] ; call rcx
0x0000000000401c7f : mov rsi, rax ; mov edi, 0x6302e0 ; jmp rdx
0x000000000041dbeb : mov rsi, rax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x000000000040d4cd : mov rsp, rbp ; pop rbp ; ret
0x000000000042d731 : movsb byte ptr [rdi], byte ptr [rsi] ; std ; call qword ptr [rsi]
0x000000000041fcee : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004130dd : movzx eax, al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041cc44 : movzx eax, al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000403988 : movzx eax, al ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000429e56 : movzx eax, al ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000041fdfd : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000041eb1f : movzx eax, al ; pop rbp ; ret
0x0000000000429d12 : movzx eax, ax ; pop rbp ; ret
0x000000000042d890 : nop ; scasd eax, dword ptr [rdi] ; std ; call rbx
0x000000000042b298 : nop dword ptr [rax + rax] ; ret
0x0000000000411398 : or al, 0xffffffffffffffc5 ; enter 0x42cb, 0 ; jmp rcx
0x000000000042df45 : or al, byte ptr [rax] ; add byte ptr [rax], ch ; cmp edi, esi ; call qword ptr [rax]
0x0000000000413a37 : or al, byte ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x000000000040cae9 : or byte ptr [r15], cl ; xchg eax, ebp ; ret 0x348b
0x0000000000421510 : or byte ptr [r15], cl ; xchg eax, edx ; ret 0x348b
0x0000000000425753 : or byte ptr [r8 + 0x3b], cl ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x348b
0x000000000040aeb3 : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000425754 : or byte ptr [rax + 0x3b], cl ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x348b
0x000000000040aeb4 : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000042a2ac : or byte ptr [rcx + 0x2038], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x000000000042a6ec : or byte ptr [rcx + 0x2138], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x0000000000405665 : or byte ptr [rcx + 0x239], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x0000000000404750 : or byte ptr [rcx + 0x239], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x000000000040f16d : or byte ptr [rcx + 0x28f9], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x00000000004157f5 : or byte ptr [rcx + 0x2f9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x0000000000429ffc : or byte ptr [rcx + 0x3038], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x0000000000401d3c : or byte ptr [rcx + 0x38], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x000000000042a5ec : or byte ptr [rcx + 0x6138], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x0000000000426ee2 : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x000000000040caea : or byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x0000000000421511 : or byte ptr [rdi], cl ; xchg eax, edx ; ret 0x348b
0x000000000040de5d : or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x000000000040deff : or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x000000000042067c : or cl, ch ; ret
0x000000000042cf45 : or dword ptr [rax], eax ; add byte ptr [rax + rdi*4 - 3], bl ; call rsp
0x000000000042de65 : or dword ptr [rax], eax ; add byte ptr [rax], bl ; and edi, esi ; call rcx
0x000000000040ff0f : or eax, 0x48fffff9 ; add esp, 0x30 ; pop rbp ; ret
0x00000000004054a7 : or eax, 0xe1e80000 ; ret 0xffff
0x0000000000408d6d : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000429afb : or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x0000000000429b31 : or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000429afa : or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x0000000000401ca6 : out 0x22, al ; add byte ptr [rcx], al ; ret
0x0000000000429b30 : out dx, eax ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000405f00 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042b28c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000422beb : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405f02 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042b28e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405f04 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042b290 : pop r14 ; pop r15 ; ret
0x000000000040d739 : pop r14 ; pop rbp ; ret
0x0000000000405f06 : pop r15 ; pop rbp ; ret
0x000000000042b292 : pop r15 ; ret
0x0000000000407b80 : pop rax ; add esp, dword ptr [rbx] ; pop rbp ; ret
0x000000000041426f : pop rax ; pop rbx ; pop rbp ; ret
0x000000000042ddc8 : pop rax ; sbb bh, dh ; jmp rcx
0x0000000000401ca2 : pop rbp ; mov byte ptr [rip + 0x22e68e], 1 ; ret
0x0000000000401c41 : pop rbp ; mov edi, 0x6302e0 ; jmp rax
0x0000000000401c7e : pop rbp ; mov rsi, rax ; mov edi, 0x6302e0 ; jmp rdx
0x000000000042b28b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405f03 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042b28f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401c35 : pop rbp ; ret
0x0000000000422bea : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040d2db : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040d738 : pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040c503 : pop rbx ; pop rbp ; ret
0x000000000040857a : pop rbx ; ret 0x42
0x0000000000405f07 : pop rdi ; pop rbp ; ret
0x000000000042b293 : pop rdi ; ret
0x000000000042aac1 : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x000000000042a181 : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x0000000000405f05 : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000042b291 : pop rsi ; pop r15 ; ret
0x000000000040d73a : pop rsi ; pop rbp ; ret
0x0000000000422a07 : pop rsp ; add dword ptr [rdi], ecx ; ror dword ptr cs:[rdi], -0x69 ; ret 0x348b
0x0000000000405f01 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042b28d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000422bec : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000420bc2 : pop rsp ; ret 0xf66
0x000000000042d430 : pop rsp ; sar bh, 1 ; call rsp
0x000000000042d330 : pop rsp ; xchg bh, bh ; call rsp
0x000000000041e3f8 : popfq ; ret 0x348b
0x000000000042a0d0 : popfq ; ret 0xc8b
0x000000000041b8ca : push 0x5b000001 ; pop rbp ; ret
0x000000000042cf03 : push qword ptr [rax + rcx - 0x52e40000] ; std ; call rsp
0x000000000042cf43 : push qword ptr [rcx + rcx - 0x47a40000] ; std ; call rsp
0x0000000000427ff3 : push rax ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x00000000004002d5 : push rax ; jbe 0x40027e ; xchg al, dh ; xchg eax, esi ; jl 0x400327 ; ret
0x000000000042e8b0 : push rax ; je 0x42e8b5 ; call qword ptr [rdx]
0x000000000042ec10 : push rax ; mov cl, -1 ; jmp qword ptr [rbx]
0x000000000040d56e : push rax ; pop rbp ; ret
0x0000000000423523 : push rbp ; enter -0x74b8, 0x32 ; mov rdi, qword ptr [rsi] ; call rcx
0x000000000040aeb7 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000413ef7 : push rbp ; fmul dword ptr [rax - 0x77] ; ret 0x3948
0x0000000000401cc4 : push rbp ; mov edi, 0x62fe20 ; mov rbp, rsp ; call rax
0x00000000004033b0 : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000040c84e : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000040542a : push rdx ; ret
0x000000000042de64 : push rsp ; or dword ptr [rax], eax ; add byte ptr [rax], bl ; and edi, esi ; call rcx
0x000000000042d7ac : pushfq ; add al, byte ptr [rax] ; add al, ah ; cmpsd dword ptr [rsi], dword ptr [rdi] ; std ; call qword ptr [rax]
0x0000000000406c17 : pushfq ; mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x00000000004020a2 : pushfq ; ret
0x00000000004029e3 : pushfq ; ret 0x844
0x0000000000401d7a : pushfq ; ret 0x845
0x000000000040dc8a : pushfq ; ret 0xd108
0x0000000000429b2e : rcl ebx, -0x11 ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000429b5e : rcl ebx, -0x19 ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x00000000004002dd : ret
0x0000000000410dce : ret 0
0x000000000041e215 : ret 0x108
0x000000000041311a : ret 0x110
0x0000000000401d00 : ret 0x125
0x000000000040b2a5 : ret 0x13
0x0000000000401b52 : ret 0x22e6
0x0000000000401952 : ret 0x22e7
0x0000000000401742 : ret 0x22e8
0x0000000000409ab7 : ret 0x2a
0x0000000000408291 : ret 0x30
0x0000000000416bda : ret 0x30e8
0x0000000000401d45 : ret 0x348b
0x0000000000413efb : ret 0x3948
0x000000000040aed0 : ret 0x3ae8
0x0000000000404b4c : ret 0x4001
0x0000000000402f0c : ret 0x42
0x000000000040512b : ret 0x4401
0x000000000040da82 : ret 0x4801
0x00000000004135cd : ret 0x48b
0x000000000042419c : ret 0x48b0
0x0000000000402277 : ret 0x48f0
0x000000000040dbd7 : ret 0x4cc0
0x00000000004022a9 : ret 0x4cd0
0x0000000000403ae9 : ret 0x4cf0
0x00000000004107da : ret 0x5588
0x0000000000414516 : ret 0x5589
0x000000000041c024 : ret 0x60
0x00000000004047fd : ret 0x78
0x000000000040de60 : ret 0x7ae8
0x000000000041f7b5 : ret 0x8041
0x0000000000402098 : ret 0x8141
0x000000000040829f : ret 0x8148
0x0000000000422cb6 : ret 0x8348
0x00000000004029e4 : ret 0x844
0x000000000041393a : ret 0x8445
0x0000000000401d7b : ret 0x845
0x00000000004020a9 : ret 0x8801
0x0000000000409d46 : ret 0x8901
0x0000000000402f73 : ret 0x8941
0x000000000040fdc5 : ret 0x8948
0x000000000040b22c : ret 0x89a5
0x000000000040fa43 : ret 0x8b44
0x000000000040aebb : ret 0x8b48
0x0000000000412525 : ret 0x9588
0x00000000004065dd : ret 0x9e0f
0x0000000000402a6e : ret 0xa3d
0x000000000042746e : ret 0xb
0x0000000000402875 : ret 0xb0
0x0000000000422d8e : ret 0xb948
0x0000000000417f50 : ret 0xbae8
0x0000000000401c65 : ret 0xc148
0x0000000000426c00 : ret 0xc2f6
0x0000000000406514 : ret 0xc8b
0x000000000040dc8b : ret 0xd108
0x00000000004068de : ret 0xd284
0x000000000040df02 : ret 0xd8e8
0x0000000000401cf7 : ret 0xea81
0x000000000040c79c : ret 0xee8
0x0000000000402a7c : ret 0xf01
0x000000000041a82b : ret 0xf280
0x0000000000420bc3 : ret 0xf66
0x000000000041ed82 : ret 0xf748
0x000000000040511b : ret 0xf981
0x0000000000419a08 : ret 0xfa81
0x0000000000426bf3 : ret 0xfe81
0x0000000000422e07 : ret 0xff3
0x000000000040e3a1 : ret 0xff70
0x0000000000418b46 : ret 0xff81
0x0000000000406128 : ret 0xffee
0x000000000041a9b1 : ret 0xfffe
0x00000000004054ac : ret 0xffff
0x000000000040aba2 : ret 1
0x0000000000402ed6 : ret 2
0x0000000000414b7c : ret 5
0x000000000040c852 : ret 8
0x00000000004227e9 : ror byte ptr [r8 - 0x73], 1 ; clc ; pop rbx ; pop rbp ; ret
0x000000000040f373 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000401c6c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401c7b ; pop rbp ; ret
0x0000000000429e58 : ror byte ptr [rax - 0x73], 0x65 ; clc ; pop rbx ; pop rbp ; ret
0x00000000004227ea : ror byte ptr [rax - 0x73], 1 ; clc ; pop rbx ; pop rbp ; ret
0x000000000041fdff : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x000000000040f374 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x000000000041cc46 : ror byte ptr [rax - 0x7d], -0x3c ; pop rbp ; ret
0x00000000004210f7 : ror byte ptr [rbx + rcx*4 + 6], 0x49 ; mov esi, dword ptr [rax] ; call rcx
0x000000000040c84f : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000420aad : ror dword ptr [rcx - 0x7d], cl ; ret
0x0000000000422a0b : ror dword ptr [rdi], -0x69 ; ret 0x348b
0x0000000000422a0a : ror dword ptr cs:[rdi], -0x69 ; ret 0x348b
0x00000000004145b9 : sahf ; ret 0x48b
0x000000000042aac6 : sahf ; ret 0x5588
0x000000000042a186 : sahf ; ret 0xc8b
0x00000000004002d7 : sahf ; xchg al, dh ; xchg eax, esi ; jl 0x400325 ; ret
0x0000000000409d44 : sal dh, cl ; ret 0x8901
0x000000000042d431 : sar bh, 1 ; call rsp
0x0000000000401c6e : sar eax, 1 ; jne 0x401c79 ; pop rbp ; ret
0x0000000000401c6d : sar rax, 1 ; jne 0x401c7a ; pop rbp ; ret
0x000000000042cf08 : sbb al, -0x53 ; std ; call rsp
0x000000000042e529 : sbb al, -1 ; call qword ptr [rdx]
0x000000000042d201 : sbb al, -1 ; jmp rsp
0x0000000000426aee : sbb al, 0x24 ; add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x000000000042d72c : sbb al, 2 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; std ; call qword ptr [rsi]
0x000000000042d36d : sbb al, byte ptr [rax] ; add byte ptr [rbx + rbx*4 - 1], bl ; call rsp
0x000000000042ddc9 : sbb bh, dh ; jmp rcx
0x0000000000414460 : sbb byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000406cc4 : sbb byte ptr [rcx + 0x139], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000041348d : sbb cl, byte ptr [rax - 0x7f] ; ret
0x0000000000408fe0 : sbb cl, byte ptr [rcx - 0x7f] ; ret
0x000000000042d32d : sbb dword ptr [rax], eax ; add byte ptr [rsi + rax*4 - 1], bl ; call rsp
0x0000000000429637 : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000042d3ad : sbb eax, dword ptr [rax] ; add byte ptr [rcx + rdi*4 - 1], ch ; call rsp
0x000000000042dd89 : sbb esi, edi ; call rsp
0x0000000000406bff : scasd eax, dword ptr [rdi] ; ret
0x0000000000401cff : scasd eax, dword ptr [rdi] ; ret 0x125
0x0000000000403e32 : scasd eax, dword ptr [rdi] ; ret 0x8141
0x000000000042d891 : scasd eax, dword ptr [rdi] ; std ; call rbx
0x000000000041eb1a : sete al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041eb1c : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000420be6 : shl dword ptr [rsi + 0xf], 0x5c ; ret 0xf66
0x0000000000429b5f : shl edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000429af8 : shl edx, cl ; or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x0000000000403337 : shr al, 1 ; ret
0x0000000000429b2f : shr edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000403336 : shr r8b, 1 ; ret
0x000000000042a0ca : stc ; add byte ptr [r8], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x000000000040650d : stc ; add byte ptr [rax - 0x6bf10000], al ; ret 0xc8b
0x000000000041ab57 : stc ; add eax, 0xf000000 ; xchg eax, esp ; ret 0xc8b
0x000000000042aac0 : stc ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x000000000042a180 : stc ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x000000000042d7b2 : std ; call qword ptr [rax]
0x000000000042db5a : std ; call qword ptr [rdi]
0x000000000042cf7a : std ; call qword ptr [rdx + rcx - 0x3cb40000]
0x000000000042d732 : std ; call qword ptr [rsi]
0x000000000042d892 : std ; call rbx
0x000000000042cf0a : std ; call rsp
0x000000000042d812 : std ; jmp rbx
0x000000000042ced2 : std ; jmp rsp
0x000000000042cf02 : std ; push qword ptr [rax + rcx - 0x52e40000] ; std ; call rsp
0x000000000042cf42 : std ; push qword ptr [rcx + rcx - 0x47a40000] ; std ; call rsp
0x0000000000429f8b : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042cf78 : sub al, -0x41 ; std ; call qword ptr [rdx + rcx - 0x3cb40000]
0x000000000041d051 : sub al, 0x48 ; add esp, 0x30 ; pop rbp ; ret
0x000000000042ccac : sub ch, byte ptr [rcx] ; add byte ptr [rax], al ; ret
0x000000000040346f : sub eax, 0x480000ce ; add esp, 0x30 ; pop rbp ; ret
0x00000000004038c4 : sub eax, 0xe8000000 ; ret
0x000000000042b319 : sub esp, 8 ; add rsp, 8 ; ret
0x000000000042b318 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000041338f : test al, 0 ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000042b29a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004038c3 : test byte ptr [rip - 0x18000000], ch ; ret
0x00000000004190e4 : test dword ptr [rip - 0x17000000], eax ; jmp qword ptr [rdi]
0x00000000004046e7 : test dword ptr [rip - 0x17000000], eax ; ret
0x0000000000410dc8 : test dword ptr [rip - 0x17000000], eax ; ret 0
0x000000000040b29f : test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x0000000000409ab1 : test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x0000000000427468 : test dword ptr [rip - 0x17000000], eax ; ret 0xb
0x000000000040ab9c : test dword ptr [rip - 0x17000000], eax ; ret 1
0x0000000000402ed0 : test dword ptr [rip - 0x17000000], eax ; ret 2
0x0000000000414b76 : test dword ptr [rip - 0x17000000], eax ; ret 5
0x0000000000410063 : test eax, 0x48fffffc ; add esp, 0x10 ; pop rbp ; ret
0x00000000004002d8 : xchg al, dh ; xchg eax, esi ; jl 0x400324 ; ret
0x000000000042d331 : xchg bh, bh ; call rsp
0x000000000041f6ec : xchg eax, ebp ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041a96a : xchg eax, ebp ; ret
0x0000000000401d44 : xchg eax, ebp ; ret 0x348b
0x00000000004135cc : xchg eax, ebp ; ret 0x48b
0x00000000004107d9 : xchg eax, ebp ; ret 0x5588
0x000000000041f7b4 : xchg eax, ebp ; ret 0x8041
0x0000000000413939 : xchg eax, ebp ; ret 0x8445
0x000000000040fa42 : xchg eax, ebp ; ret 0x8b44
0x0000000000412524 : xchg eax, ebp ; ret 0x9588
0x000000000041856f : xchg eax, ebp ; ret 0xc8b
0x0000000000422a0d : xchg eax, edi ; ret 0x348b
0x0000000000421513 : xchg eax, edx ; ret 0x348b
0x00000000004002da : xchg eax, esi ; jl 0x400322 ; ret
0x0000000000409b97 : xchg eax, esi ; ret 0x348b
0x0000000000403e44 : xchg eax, esp ; ret
0x0000000000404758 : xchg eax, esp ; ret 0x348b
0x0000000000413963 : xchg eax, esp ; ret 0x48b
0x000000000041ee66 : xchg eax, esp ; ret 0x5588
0x0000000000402097 : xchg eax, esp ; ret 0x8141
0x00000000004228fc : xchg eax, esp ; ret 0x8b44
0x000000000041a967 : xchg eax, esp ; ret 0x9588
0x0000000000402a6d : xchg eax, esp ; ret 0xa3d
0x0000000000406513 : xchg eax, esp ; ret 0xc8b
0x00000000004068dd : xchg eax, esp ; ret 0xd284
0x000000000041a82a : xchg eax, esp ; ret 0xf280
0x000000000040511a : xchg eax, esp ; ret 0xf981
0x0000000000419a07 : xchg eax, esp ; ret 0xfa81
0x0000000000426bf2 : xchg eax, esp ; ret 0xfe81
0x0000000000418b45 : xchg eax, esp ; ret 0xff81
0x000000000041eb1b : xchg eax, esp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000429afc : xlatb ; mov rax, rdi ; pop rbp ; ret
0x000000000042e544 : xor al, 0x10 ; add byte ptr [rax], al ; mov byte ptr [rdi + rdi*8], bl ; call qword ptr [rdx]
0x0000000000408578 : xor al, 0x25 ; pop rbx ; ret 0x42
0x000000000041e20e : xor byte ptr [r8 - 0x75], cl ; adc byte ptr [rax - 0x7f], cl ; ret 0x108
0x000000000041e20f : xor byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7f], cl ; ret 0x108
0x000000000040de57 : xor byte ptr [rax - 0x75], cl ; add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x000000000040def9 : xor byte ptr [rax - 0x75], cl ; add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x0000000000426ca6 : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000423527 : xor cl, byte ptr [rax - 0x75] ; call rcx
0x0000000000413e07 : xor eax, ebp ; ret
0x0000000000408a36 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
