0x000000000042590e : adc al, -0x75 ; hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042cec5 : adc al, 0 ; add byte ptr [rax], cl ; xchg edi, edi ; call qword ptr [rsi]
0x000000000042cee5 : adc al, 0 ; add byte ptr [rax], cl ; xchg edi, edi ; jmp rdi
0x000000000041066b : adc al, 0x25 ; shl ah, 0x62 ; add byte ptr [rbp - 0x77], al ; ret
0x000000000040e56d : adc al, 0x25 ; shl ah, 0x62 ; add byte ptr [rcx - 0x77], al ; ret
0x0000000000414915 : adc al, 0x25 ; shl ah, 0x62 ; add byte ptr [rcx - 0x77], al ; ret 0x8141
0x000000000042b745 : adc al, byte ptr [rax] ; add byte ptr [rbx + rsi*8 - 2], bl ; call rsp
0x000000000041944f : adc al, byte ptr [rcx + 0x4f9] ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x0000000000419312 : adc al, byte ptr [rcx + 0x4f9] ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf280
0x000000000041cd02 : adc byte ptr [rax - 0x7f], cl ; ret 0x108
0x000000000041d07f : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x000000000042c4c0 : adc byte ptr [rcx - 2], al ; jmp rsp
0x000000000042ce05 : adc eax, dword ptr [rax] ; add al, ch ; jns 0x42ce10 ; call qword ptr [rdx]
0x000000000042b551 : adc edi, esi ; call rsp
0x000000000042ce04 : adc r8d, dword ptr [rax] ; add al, ch ; jns 0x42ce11 ; call qword ptr [rdx]
0x000000000042bc83 : add ah, al ; add dword ptr [rax], eax ; add al, cl ; xchg eax, ebp ; std ; call qword ptr [rax]
0x000000000042b58f : add ah, bh ; and dh, bh ; call rsp
0x000000000042be47 : add al, bl ; leave ; std ; call rbx
0x000000000042bd45 : add al, byte ptr [rax] ; add byte ptr [rax - 0x5f], bh ; std ; jmp rsi
0x000000000042ce07 : add al, ch ; jns 0x42ce0e ; call qword ptr [rdx]
0x000000000042d167 : add al, ch ; mov dh, -1 ; jmp qword ptr [rbx]
0x0000000000415c17 : add al, ch ; ret
0x000000000042bc87 : add al, cl ; xchg eax, ebp ; std ; call qword ptr [rax]
0x0000000000429d8f : add bl, dh ; ret
0x0000000000428bbb : add byte ptr [r8], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x000000000041e88b : add byte ptr [rax + 0x21], cl ; ret 0x8148
0x00000000004039ae : add byte ptr [rax + 0x3b], cl ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x348b
0x0000000000403a67 : add byte ptr [rax + 0x3b], cl ; or byte ptr [r15], cl ; xchg eax, esp ; ret 0x348b
0x00000000004022f6 : add byte ptr [rax - 0x48], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bl ; jmp qword ptr [rax]
0x000000000042bd47 : add byte ptr [rax - 0x5f], bh ; std ; jmp rsi
0x000000000040789a : add byte ptr [rax - 0x73], cl ; clc ; pop rbx ; pop rbp ; ret
0x00000000004207b7 : add byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x000000000040f370 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000406c99 : add byte ptr [rax - 0x77], cl ; fsubr st(1) ; ret
0x00000000004020c6 : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000041f169 : add byte ptr [rax - 0x77], cl ; or cl, ch ; ret
0x000000000042ca7f : add byte ptr [rax], ah ; and bh, bh ; call qword ptr [rdx]
0x000000000042c4be : add byte ptr [rax], al ; adc byte ptr [rcx - 2], al ; jmp rsp
0x000000000042ce02 : add byte ptr [rax], al ; adc r8d, dword ptr [rax] ; add al, ch ; jns 0x42ce13 ; call qword ptr [rdx]
0x0000000000415c15 : add byte ptr [rax], al ; add al, ch ; ret
0x0000000000429d8d : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000041e889 : add byte ptr [rax], al ; add byte ptr [rax + 0x21], cl ; ret 0x8148
0x00000000004207b5 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x0000000000406c97 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fsubr st(1) ; ret
0x00000000004020c4 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000041f167 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; or cl, ch ; ret
0x0000000000429d8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004022f9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bl ; jmp qword ptr [rax]
0x0000000000405e89 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000416e68 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000429c29 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x00000000004207b4 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000429d8c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000042b2ac : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x41ca
0x00000000004022fb : add byte ptr [rax], al ; add byte ptr [rax], bl ; jmp qword ptr [rax]
0x0000000000410678 : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x000000000040cfac : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x8141
0x000000000040d2d8 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000423eab : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040302b : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7278b], cl ; ret 0xb0
0x000000000040316d : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b72b8b], cl ; ret 0xb0
0x00000000004031ad : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b72f8b], cl ; ret 0xb0
0x0000000000401e4b : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret
0x0000000000403c89 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x844
0x0000000000401b75 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x000000000040e57a : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x000000000040779a : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x125
0x000000000041e29f : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x0000000000412424 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x00000000004077a8 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000041244e : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x48b
0x0000000000401e40 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x0000000000404359 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xfa81
0x00000000004156c5 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x3e], cl ; call 0x401948
0x0000000000415bad : add byte ptr [rax], al ; add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x000000000040027d : add byte ptr [rax], al ; add byte ptr [rdi + 0x4e], al ; push rbp ; add byte ptr [rsi], bl ; ret
0x000000000040d278 : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x51], al ; ret
0x000000000041cee4 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x0000000000428bbc : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x0000000000402787 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret
0x0000000000406240 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0x5588
0x0000000000406af1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0x9588
0x000000000040dc86 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x00000000004295b2 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x0000000000428c72 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x000000000041e30c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret
0x0000000000401afb : add byte ptr [rax], al ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x125
0x000000000042272a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000401b40 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x00000000004120b8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x48b
0x00000000004107d5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5588
0x000000000040fa3e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x0000000000411010 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x9588
0x0000000000403d25 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x0000000000404b4a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000040f171 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x000000000040d650 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004157d4 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x0000000000409d31 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x000000000040721a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x000000000040280b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x0000000000406500 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x000000000040e277 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000403d15 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000419316 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf280
0x00000000004256de : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xfe81
0x0000000000406458 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xff81
0x0000000000417bd6 : add byte ptr [rax], al ; add cl, ch ; jmp qword ptr [rdi]
0x000000000040506d : add byte ptr [rax], al ; add cl, ch ; ret
0x000000000040b2a1 : add byte ptr [rax], al ; add cl, ch ; ret 0x13
0x0000000000409ab3 : add byte ptr [rax], al ; add cl, ch ; ret 0x2a
0x0000000000425f5a : add byte ptr [rax], al ; add cl, ch ; ret 0xb
0x000000000040ab9e : add byte ptr [rax], al ; add cl, ch ; ret 1
0x0000000000413668 : add byte ptr [rax], al ; add cl, ch ; ret 5
0x000000000042bc02 : add byte ptr [rax], al ; add dword ptr [rax], r8d ; add byte ptr [rax], ch ; xchg eax, edx ; std ; call qword ptr [rsi]
0x0000000000404fdf : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401e65 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040586e : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041ae8e : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000416e6a : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040159b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000042ce06 : add byte ptr [rax], al ; call 0x1342cd8b
0x000000000042d166 : add byte ptr [rax], al ; call 0x2442d128
0x000000000042b58e : add byte ptr [rax], al ; cld ; and dh, bh ; call rsp
0x000000000042d3fa : add byte ptr [rax], al ; cmp al, 0x19 ; add byte ptr [rax], al ; ror cl, -1 ; call qword ptr [rax]
0x000000000042be46 : add byte ptr [rax], al ; fmul st(1) ; std ; call rbx
0x000000000042d0a2 : add byte ptr [rax], al ; in al, 0x15 ; add byte ptr [rax], al ; pop rax ; mov ch, -1 ; jmp qword ptr [rdi]
0x00000000004016d9 : add byte ptr [rax], al ; jmp 0x4015b9
0x0000000000415c11 : add byte ptr [rax], al ; jmp 0x415c20
0x00000000004194a9 : add byte ptr [rax], al ; jmp 0x41a624
0x000000000042bd46 : add byte ptr [rax], al ; js 0x42bcf0 ; std ; jmp rsi
0x0000000000405b9f : add byte ptr [rax], al ; mov al, byte ptr [rbp - 0xa] ; movsx eax, al ; pop rbp ; ret
0x00000000004289ac : add byte ptr [rax], al ; mov al, sil ; movzx eax, al ; pop rbp ; ret
0x00000000004287fd : add byte ptr [rax], al ; mov ax, si ; movzx eax, ax ; pop rbp ; ret
0x0000000000405443 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x14] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000408ba2 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000425798 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000429c2b : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000407655 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042ca7a : add byte ptr [rax], al ; mov esp, 0x2000000f ; and bh, bh ; call qword ptr [rdx]
0x000000000042c37a : add byte ptr [rax], al ; mov esp, 0xa0000008 ; xor al, 0xfffffffffffffffe ; jmp rcx
0x0000000000408812 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000420be9 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004207b6 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004156c6 : add byte ptr [rax], al ; mov rdx, r8 ; call 0x401947
0x00000000004020c5 : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000042b8be : add byte ptr [rax], al ; mov word ptr [rcx - 1], gs ; jmp rsp
0x000000000042d0a6 : add byte ptr [rax], al ; pop rax ; mov ch, -1 ; jmp qword ptr [rdi]
0x0000000000404573 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040d2d9 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000426ae5 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040c501 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040027e : add byte ptr [rax], al ; push rbp ; add byte ptr [rsi], bl ; ret
0x000000000042b73e : add byte ptr [rax], al ; pushfq ; ret
0x000000000042b806 : add byte ptr [rax], al ; pushfq ; xor edi, edi ; jmp rsp
0x0000000000429d8e : add byte ptr [rax], al ; ret
0x000000000042b2ae : add byte ptr [rax], al ; ret 0x41ca
0x000000000042b4ee : add byte ptr [rax], al ; ret 0xfffd
0x000000000042d3fe : add byte ptr [rax], al ; ror cl, -1 ; call qword ptr [rax]
0x000000000042c606 : add byte ptr [rax], al ; sub byte ptr [rbx - 2], ch ; jmp rdi
0x000000000042be42 : add byte ptr [rax], al ; test byte ptr [rbx], al ; add byte ptr [rax], al ; fmul st(1) ; std ; call rbx
0x000000000042bd42 : add byte ptr [rax], al ; test byte ptr [rdx], al ; add byte ptr [rax], al ; js 0x42bcf4 ; std ; jmp rsi
0x00000000004022fd : add byte ptr [rax], bl ; jmp qword ptr [rax]
0x000000000042bc07 : add byte ptr [rax], ch ; xchg eax, edx ; std ; call qword ptr [rsi]
0x000000000042cec7 : add byte ptr [rax], cl ; xchg edi, edi ; call qword ptr [rsi]
0x000000000042cee7 : add byte ptr [rax], cl ; xchg edi, edi ; jmp rdi
0x000000000041067a : add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x000000000040cfae : add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x8141
0x000000000042b68f : add byte ptr [rbp + rcx*2 - 2], cl ; jmp rsp
0x0000000000410670 : add byte ptr [rbp - 0x77], al ; ret
0x000000000040cfa4 : add byte ptr [rbp - 0x77], al ; ret 0x8141
0x000000000040d2da : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000426ae6 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040c502 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000042be43 : add byte ptr [rbx + rax - 0x36280000], al ; std ; call rbx
0x000000000042ce03 : add byte ptr [rbx + rdx], al ; add al, ch ; jns 0x42ce12 ; call qword ptr [rdx]
0x000000000042b747 : add byte ptr [rbx + rsi*8 - 2], bl ; call rsp
0x0000000000407656 : add byte ptr [rbx - 0x76b707bb], cl ; in al, dx ; pop rbp ; ret
0x0000000000405444 : add byte ptr [rbx - 0x76b713bb], cl ; in al, dx ; pop rbp ; ret
0x000000000040302d : add byte ptr [rbx - 0x76b7278b], cl ; ret 0xb0
0x000000000040316f : add byte ptr [rbx - 0x76b72b8b], cl ; ret 0xb0
0x00000000004031af : add byte ptr [rbx - 0x76b72f8b], cl ; ret 0xb0
0x0000000000403d12 : add byte ptr [rcx + 0x4000f9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000041100c : add byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x9588
0x0000000000417057 : add byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x00000000004256da : add byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xfe81
0x000000000040d65c : add byte ptr [rcx + 0xf], al ; pushfq ; mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x0000000000401e4d : add byte ptr [rcx + 0xf], al ; pushfq ; ret
0x0000000000403c8b : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x844
0x0000000000401b77 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x000000000040e57c : add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x000000000040779c : add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x125
0x000000000041e2a1 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x0000000000412426 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x00000000004077aa : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000412450 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x48b
0x0000000000401e42 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x000000000040435b : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xfa81
0x000000000040d64c : add byte ptr [rcx + 0xfe], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000406454 : add byte ptr [rcx + 0xfe], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xff81
0x000000000040de88 : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000409d2d : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x0000000000402807 : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x000000000042bc03 : add byte ptr [rcx + rax], al ; add byte ptr [rax], ch ; xchg eax, edx ; std ; call qword ptr [rsi]
0x000000000042d3fb : add byte ptr [rcx + rbx], bh ; add byte ptr [rax], al ; ror cl, -1 ; call qword ptr [rax]
0x00000000004156c7 : add byte ptr [rcx + rcx*4 - 0x3e], cl ; call 0x401946
0x000000000040e572 : add byte ptr [rcx - 0x77], al ; ret
0x0000000000407792 : add byte ptr [rcx - 0x77], al ; ret 0x8141
0x0000000000415baf : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x0000000000401aa8 : add byte ptr [rcx], al ; ret
0x000000000040027f : add byte ptr [rdi + 0x4e], al ; push rbp ; add byte ptr [rsi], bl ; ret
0x000000000040d27a : add byte ptr [rdi + rcx - 0x51], al ; ret
0x000000000041cee6 : add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x0000000000428bbe : add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x0000000000402789 : add byte ptr [rdi], cl ; pushfq ; ret
0x0000000000406242 : add byte ptr [rdi], cl ; pushfq ; ret 0x5588
0x0000000000406af3 : add byte ptr [rdi], cl ; pushfq ; ret 0x9588
0x000000000040dc88 : add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x00000000004295b4 : add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x0000000000428c74 : add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x000000000041e30e : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret
0x0000000000401afd : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x125
0x000000000042272c : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000401b42 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x00000000004120ba : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x48b
0x00000000004107d7 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5588
0x000000000040fa40 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x0000000000411012 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x9588
0x0000000000403d27 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x0000000000404b4c : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000040f173 : add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x000000000040d652 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004157d6 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x0000000000409d33 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x000000000040721c : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x000000000040280d : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x0000000000406502 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x000000000040e279 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000403d18 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000419318 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf280
0x00000000004256e0 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xfe81
0x000000000040645a : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xff81
0x000000000042bd43 : add byte ptr [rdx + rax - 0x5e880000], al ; std ; jmp rsi
0x000000000041f6af : add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x0000000000400283 : add byte ptr [rsi], bl ; ret
0x000000000041244d : add byte ptr cs:[rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x48b
0x0000000000417bd8 : add cl, ch ; jmp qword ptr [rdi]
0x000000000040506f : add cl, ch ; ret
0x000000000040b2a3 : add cl, ch ; ret 0x13
0x0000000000409ab5 : add cl, ch ; ret 0x2a
0x0000000000425f5c : add cl, ch ; ret 0xb
0x000000000040aba0 : add cl, ch ; ret 1
0x000000000041366a : add cl, ch ; ret 5
0x000000000040de5a : add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x000000000040defc : add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x000000000042bc85 : add dword ptr [rax], eax ; add al, cl ; xchg eax, ebp ; std ; call qword ptr [rax]
0x0000000000411a65 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004156c4 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdx, r8 ; call 0x401949
0x000000000042bc05 : add dword ptr [rax], eax ; add byte ptr [rax], ch ; xchg eax, edx ; std ; call qword ptr [rsi]
0x0000000000426ae4 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040c500 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000042bc04 : add dword ptr [rax], r8d ; add byte ptr [rax], ch ; xchg eax, edx ; std ; call qword ptr [rsi]
0x0000000000407977 : add dword ptr [rcx + 0xf9], eax ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x000000000041e7dd : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403185 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041b733 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000423370 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041e8ec : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000041d60e : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004214f8 : add dword ptr [rdi], ecx ; ror dword ptr cs:[rdi], -0x69 ; ret 0x348b
0x0000000000417bd2 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; jmp qword ptr [rdi]
0x0000000000405069 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret
0x000000000040b29d : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x0000000000409aaf : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x0000000000425f56 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0xb
0x000000000040ab9a : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 1
0x00000000004039b1 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x348b
0x000000000041d954 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x5588
0x0000000000401aa4 : add eax, 0x22c86e ; add ebx, esi ; ret
0x0000000000417bd5 : add eax, 0xe9000000 ; jmp qword ptr [rdi]
0x000000000040506c : add eax, 0xe9000000 ; ret
0x000000000040b2a0 : add eax, 0xe9000000 ; ret 0x13
0x0000000000409ab2 : add eax, 0xe9000000 ; ret 0x2a
0x0000000000425f59 : add eax, 0xe9000000 ; ret 0xb
0x000000000040ab9d : add eax, 0xe9000000 ; ret 1
0x0000000000413667 : add eax, 0xe9000000 ; ret 5
0x0000000000419648 : add eax, 0xf000000 ; xchg eax, esp ; ret 0xc8b
0x000000000042be45 : add eax, dword ptr [rax] ; add al, bl ; leave ; std ; call rbx
0x0000000000401a6b : add eax, edx ; sar rax, 1 ; jne 0x401a7c ; pop rbp ; ret
0x0000000000401aa9 : add ebx, esi ; ret
0x0000000000404fe2 : add esp, 0x10 ; pop rbp ; ret
0x000000000041a3b8 : add esp, 0x168 ; pop rbx ; pop rbp ; ret
0x000000000040456f : add esp, 0x170 ; pop rbp ; ret
0x000000000040c4fd : add esp, 0x178 ; pop rbx ; pop rbp ; ret
0x0000000000412f4e : add esp, 0x18 ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040f55c : add esp, 0x1a0 ; pop rbp ; ret
0x000000000041ec50 : add esp, 0x1b8 ; pop rbx ; pop rbp ; ret
0x0000000000427d70 : add esp, 0x1e0 ; pop rbp ; ret
0x00000000004271ed : add esp, 0x1e8 ; pop rbx ; pop rbp ; ret
0x0000000000401e68 : add esp, 0x20 ; pop rbp ; ret
0x000000000040318a : add esp, 0x30 ; pop rbp ; ret
0x0000000000408691 : add esp, 0x40 ; pop rbp ; ret
0x000000000040f09f : add esp, 0x40 ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040d56c : add esp, 0x50 ; pop rbp ; ret
0x0000000000412d5d : add esp, 0x58 ; pop rbx ; pop rbp ; ret
0x0000000000423375 : add esp, 0x60 ; pop rbp ; ret
0x000000000040d892 : add esp, 0x70 ; pop rbp ; ret
0x000000000040c91e : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000404e14 : add esp, 0x90 ; pop rbp ; ret
0x00000000004118e4 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040f3bc : add esp, 0xb0 ; pop rbp ; ret
0x0000000000425047 : add esp, 0xc0 ; pop rbp ; ret
0x0000000000404af9 : add esp, 0xd0 ; pop rbp ; ret
0x0000000000423ea8 : add esp, 0xd8 ; pop rbx ; pop rbp ; ret
0x0000000000407466 : add esp, 0xf0 ; pop rbp ; ret
0x000000000040159e : add esp, 8 ; ret
0x0000000000401a6a : add rax, rdx ; sar rax, 1 ; jne 0x401a7d ; pop rbp ; ret
0x0000000000404fe1 : add rsp, 0x10 ; pop rbp ; ret
0x000000000041a3b7 : add rsp, 0x168 ; pop rbx ; pop rbp ; ret
0x000000000040456e : add rsp, 0x170 ; pop rbp ; ret
0x000000000040c4fc : add rsp, 0x178 ; pop rbx ; pop rbp ; ret
0x000000000040f55b : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000041ec4f : add rsp, 0x1b8 ; pop rbx ; pop rbp ; ret
0x0000000000427d6f : add rsp, 0x1e0 ; pop rbp ; ret
0x00000000004271ec : add rsp, 0x1e8 ; pop rbx ; pop rbp ; ret
0x0000000000401e67 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000403189 : add rsp, 0x30 ; pop rbp ; ret
0x0000000000408690 : add rsp, 0x40 ; pop rbp ; ret
0x000000000040f09e : add rsp, 0x40 ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040d56b : add rsp, 0x50 ; pop rbp ; ret
0x0000000000412d5c : add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x0000000000423374 : add rsp, 0x60 ; pop rbp ; ret
0x000000000040d891 : add rsp, 0x70 ; pop rbp ; ret
0x000000000040c91d : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000404e13 : add rsp, 0x90 ; pop rbp ; ret
0x00000000004118e3 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040f3bb : add rsp, 0xb0 ; pop rbp ; ret
0x0000000000425046 : add rsp, 0xc0 ; pop rbp ; ret
0x0000000000404af8 : add rsp, 0xd0 ; pop rbp ; ret
0x0000000000423ea7 : add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x0000000000407465 : add rsp, 0xf0 ; pop rbp ; ret
0x000000000040159d : add rsp, 8 ; ret
0x000000000041e8eb : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000041d60d : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401aa7 : and al, byte ptr [rax] ; add ebx, esi ; ret
0x000000000042ca81 : and bh, bh ; call qword ptr [rdx]
0x000000000041f3c1 : and byte ptr [r15], cl ; xchg eax, esp ; ret 0x348b
0x000000000041f3c2 : and byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x000000000042b591 : and dh, bh ; call rsp
0x0000000000420c65 : and eax, 0x42b3f0 ; mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x000000000040df87 : and eax, 0x48ffffee ; add esp, 0x20 ; pop rbp ; ret
0x0000000000404e3f : and eax, 0x62e350 ; pop rbp ; ret
0x0000000000404e63 : and eax, 0x62e358 ; pop rbp ; ret
0x000000000042ce08 : call 0x1342cd89
0x00000000004044c8 : call 0x1b707b7
0x000000000042d168 : call 0x2442d126
0x0000000000412a26 : call 0x3882657a
0x0000000000412a25 : call 0x3882657b
0x00000000004156cb : call 0x401942
0x00000000004130a7 : call 0xffffffff8c03cebe
0x00000000004130a6 : call 0xffffffff8c03cebf
0x000000000040c799 : call 0xffffffffe90350e9
0x000000000040c798 : call 0xffffffffe90350ea
0x0000000000421ae4 : call 0xffffffffff7ba635
0x0000000000421ae3 : call 0xffffffffff7ba636
0x0000000000429d69 : call qword ptr [r12 + rbx*8]
0x000000000042bbcb : call qword ptr [rax]
0x000000000042c113 : call qword ptr [rdi]
0x000000000042b73b : call qword ptr [rdx + rdx - 0x3c640000]
0x000000000042ca83 : call qword ptr [rdx]
0x000000000042bc0b : call qword ptr [rsi]
0x0000000000429d6a : call qword ptr [rsp + rbx*8]
0x000000000041fded : call r8
0x0000000000401acd : call rax
0x000000000042be4b : call rbx
0x000000000041fbee : call rcx
0x000000000042cb93 : call rdx
0x000000000042b553 : call rsp
0x0000000000425318 : clc ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004200a6 : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000411cd9 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004209d0 : clc ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041c8b5 : clc ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004244e2 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004118e2 : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x0000000000425045 : clc ; add rsp, 0xc0 ; pop rbp ; ret
0x0000000000407464 : clc ; add rsp, 0xf0 ; pop rbp ; ret
0x0000000000401a6f : clc ; jne 0x401a78 ; pop rbp ; ret
0x00000000004255ac : clc ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x000000000041bb3e : clc ; mov dword ptr [rcx + 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041e5b7 : clc ; mov dword ptr [rdi + 0x18], 0x95f616 ; pop rbp ; ret
0x00000000004250de : clc ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000041ecab : clc ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000041eccb : clc ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000041eceb : clc ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000407659 : clc ; mov rsp, rbp ; pop rbp ; ret
0x00000000004207bb : clc ; pop rbp ; ret
0x000000000040789e : clc ; pop rbx ; pop rbp ; ret
0x000000000041e1ad : cld ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041772d : cld ; add rsp, 0xf0 ; pop rbp ; ret
0x000000000042b590 : cld ; and dh, bh ; call rsp
0x0000000000429d06 : cld ; mov dword ptr [rbp - 0xc], eax ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000429916 : cli ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042d3fc : cmp al, 0x19 ; add byte ptr [rax], al ; ror cl, -1 ; call qword ptr [rax]
0x000000000041dab9 : cmp al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000428d9e : cmp byte ptr [rax], ah ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x0000000000401b3e : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x000000000041fa9d : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000428aee : cmp byte ptr [rax], dh ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x00000000004291de : cmp byte ptr [rcx], ah ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x00000000004208e5 : cmp dword ptr [rax - 0x75], ecx ; jne 0x4208cf ; call rax
0x0000000000422728 : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x000000000040fa3c : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x000000000040cc2d : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401a2d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401a40 ; pop rbp ; ret
0x0000000000407187 : cmp eax, 0xf000000 ; xchg eax, esp ; ret 0xc8b
0x000000000040c9e2 : dec byte ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x0000000000408ebf : dec byte ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret
0x00000000004132e3 : dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000040e786 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000426854 : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000042706a : dec dword ptr [rdi] ; test dword ptr [rip - 0x17000000], eax ; ret 1
0x0000000000403c87 : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x844
0x0000000000401b73 : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x000000000041d5d0 : div dword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000041d5cf : div qword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000040c84b : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000422014 : enter -0x74b8, 0x32 ; mov rdi, qword ptr [rsi] ; call rcx
0x00000000004208e2 : enter -0x74b8, 0x39 ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x000000000040e31a : enter -0x7cb8, -0x3c ; pop rbp ; ret
0x0000000000401aa6 : enter 0x22, 1 ; ret
0x0000000000423eaa : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004254a9 : fbld dword ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x00000000004254aa : fbld dword ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x0000000000408552 : fiadd dword ptr [rcx - 0xa] ; ret 0x4001
0x000000000040436c : fiadd dword ptr [rcx - 0xa] ; ret 0x4401
0x000000000040da7f : fiadd dword ptr [rcx - 0xa] ; ret 0x4801
0x0000000000401f92 : fiadd dword ptr [rcx - 0xa] ; ret 0x8801
0x0000000000401e54 : fiadd dword ptr [rcx - 0xa] ; ret 0x8901
0x000000000041012e : fiadd dword ptr [rcx - 0xa] ; ret 0xf01
0x00000000004077bb : fild dword ptr [rcx - 0xa] ; ret
0x000000000041d9ea : fisub word ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000041d9eb : fisub word ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x0000000000401ac7 : fisub word ptr [rdx] ; mov rbp, rsp ; call rax
0x000000000040aeb8 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x00000000004129e8 : fmul dword ptr [rax - 0x77] ; ret 0x3948
0x0000000000403030 : fmul dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000429d6c : fmul qword ptr [rax - 0x7d] ; ret
0x000000000042be48 : fmul st(1) ; std ; call rbx
0x0000000000406c9d : fsubr st(1) ; ret
0x000000000040f5e3 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000429d09 : hlt ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x00000000004255a8 : hlt ; mov rcx, qword ptr [rbp - 8] ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x0000000000401a40 : hlt ; pop rbp ; mov edi, 0x62e2b0 ; jmp rax
0x0000000000429c2f : hlt ; pop rbp ; ret
0x000000000042d0a4 : in al, 0x15 ; add byte ptr [rax], al ; pop rax ; mov ch, -1 ; jmp qword ptr [rdi]
0x000000000041066e : in al, 0x62 ; add byte ptr [rbp - 0x77], al ; ret
0x000000000040cfa2 : in al, 0x62 ; add byte ptr [rbp - 0x77], al ; ret 0x8141
0x000000000040e570 : in al, 0x62 ; add byte ptr [rcx - 0x77], al ; ret
0x0000000000407790 : in al, 0x62 ; add byte ptr [rcx - 0x77], al ; ret 0x8141
0x0000000000405447 : in al, dx ; mov rsp, rbp ; pop rbp ; ret
0x00000000004020c9 : in al, dx ; pop rbp ; ret
0x000000000041b013 : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000410118 : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x000000000040d64e : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000406456 : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xff81
0x000000000040cd33 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000401f7c : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x000000000040de8a : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000409d2f : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x0000000000402809 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x0000000000428bb8 : inc dword ptr [rcx + 0x41f9] ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x00000000004295ae : inc dword ptr [rcx + 0x5af9] ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x0000000000428c6e : inc dword ptr [rcx + 0x5af9] ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x000000000042b738 : insb byte ptr [rdi], dx ; mov edx, 0x1294fffe ; add byte ptr [rax], al ; pushfq ; ret
0x000000000040f378 : int 0x80
0x0000000000401a33 : ja 0x401a3a ; pop rbp ; ret
0x00000000004250e1 : ja 0x42512e ; pop rbp ; ret
0x00000000004002d6 : jbe 0x40027d ; xchg al, dh ; xchg eax, esi ; jl 0x400326 ; ret
0x0000000000401a3f : je 0x401a3d ; pop rbp ; mov edi, 0x62e2b0 ; jmp rax
0x000000000041ecaa : jge 0x41ecab ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000041ecca : jge 0x41eccb ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000041ecea : jge 0x41eceb ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000424030 : jge 0x424023 ; mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x00000000004250dd : jge 0x4250de ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x00000000004002db : jl 0x400321 ; ret
0x000000000042b4e8 : jl 0x42b4b4 ; std ; ljmp ptr [rcx + rcx] ; add byte ptr [rax], al ; ret 0xfffd
0x00000000004016db : jmp 0x4015b7
0x00000000004045d3 : jmp 0x4038fe
0x0000000000415c13 : jmp 0x415c1e
0x000000000041a616 : jmp 0x41937d
0x00000000004194ab : jmp 0x41a622
0x000000000041d259 : jmp 0x41d07b
0x00000000004217a3 : jmp 0x4904a0f3
0x00000000004218e5 : jmp 0x4904a235
0x00000000004238e0 : jmp 0x4904c230
0x000000000042394d : jmp 0x4904c29d
0x0000000000424c1a : jmp 0x4904d56a
0x0000000000424c87 : jmp 0x4904d5d7
0x00000000004022ff : jmp qword ptr [rax]
0x000000000042d16b : jmp qword ptr [rbx]
0x000000000040432d : jmp qword ptr [rcx]
0x0000000000417bda : jmp qword ptr [rdi]
0x000000000042c6b3 : jmp qword ptr [rsi]
0x0000000000401a47 : jmp rax
0x00000000004023c9 : jmp rcx
0x000000000042c60b : jmp rdi
0x0000000000401a87 : jmp rdx
0x000000000042bd4b : jmp rsi
0x00000000004170cd : jmp rsp
0x0000000000401a70 : jne 0x401a77 ; pop rbp ; ret
0x000000000041c6d9 : jne 0x41c6bc ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x000000000041d5d1 : jne 0x41d5c9 ; mov rax, rdx ; pop rbp ; ret
0x000000000041fbe6 : jne 0x41fbb0 ; mov r8, qword ptr [rsi] ; mov rsi, qword ptr [r8] ; call rcx
0x00000000004208e8 : jne 0x4208cc ; call rax
0x000000000042ce09 : jns 0x42ce0c ; call qword ptr [rdx]
0x0000000000404571 : jo 0x404579 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040d894 : jo 0x40d8f5 ; ret
0x0000000000419645 : jo 0x4195d1 ; stc ; add eax, 0xf000000 ; xchg eax, esp ; ret 0xc8b
0x000000000041fecf : jo 0x41fee8 ; mov qword ptr [rbp - 0x48], rdx ; call r8
0x00000000004039ac : jrcxz 0x403a18 ; add byte ptr [rax + 0x3b], cl ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x348b
0x00000000004039ab : jrcxz 0x403a19 ; add byte ptr [rax + 0x3b], cl ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x348b
0x0000000000403a65 : jrcxz 0x403ad2 ; add byte ptr [rax + 0x3b], cl ; or byte ptr [r15], cl ; xchg eax, esp ; ret 0x348b
0x000000000040c4ff : js 0x40c508 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040c920 : js 0x40c980 ; pop rbp ; ret
0x000000000042bd48 : js 0x42bcee ; std ; jmp rsi
0x000000000040d735 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000041be50 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040789c : lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040d734 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040789b : lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000042be49 : leave ; std ; call rbx
0x000000000042b4eb : ljmp ptr [rcx + rcx] ; add byte ptr [rax], al ; ret 0xfffd
0x00000000004285e9 : loop 0x42863b ; or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x00000000004287c1 : loop 0x428813 ; or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x000000000040cd5f : loopne 0x40cdb0 ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040cd5e : loopne 0x40cdb1 ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000410245 : loopne 0x410295 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000410244 : loopne 0x410296 ; add esp, 0x20 ; pop rbp ; ret
0x000000000041058b : loopne 0x4105db ; add esp, 0x20 ; pop rbp ; ret
0x000000000041058a : loopne 0x4105dc ; add esp, 0x20 ; pop rbp ; ret
0x000000000041d8c9 : loopne 0x41d91a ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000041d8c8 : loopne 0x41d91b ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x00000000004216d9 : loopne 0x42173f ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000427d72 : loopne 0x427d7a ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042b58c : mov ah, 0xb ; add byte ptr [rax], al ; cld ; and dh, bh ; call rsp
0x000000000040f3be : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004254a8 : mov al, byte ptr [rbp - 0x21] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041d9e9 : mov al, byte ptr [rbp - 0x22] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041f4bc : mov al, byte ptr [rbp - 0x33] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000405ba1 : mov al, byte ptr [rbp - 0xa] ; movsx eax, al ; pop rbp ; ret
0x0000000000428a79 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000429914 : mov al, byte ptr [rbp - 6] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004255dc : mov al, byte ptr [rdi + 0x1c] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004289af : mov al, dh ; movzx eax, al ; pop rbp ; ret
0x00000000004289ae : mov al, sil ; movzx eax, al ; pop rbp ; ret
0x00000000004287ff : mov ax, si ; movzx eax, ax ; pop rbp ; ret
0x0000000000428803 : mov bh, -0x40 ; pop rbp ; ret
0x0000000000404e61 : mov byte ptr [0x62e358], al ; pop rbp ; ret
0x000000000040d660 : mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x0000000000417bd1 : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; jmp qword ptr [rdi]
0x0000000000405068 : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret
0x000000000040b29c : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x0000000000409aae : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x000000000040ca86 : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 1
0x0000000000401aa3 : mov byte ptr [rip + 0x22c86e], 1 ; ret
0x000000000042d0a9 : mov ch, -1 ; jmp qword ptr [rdi]
0x000000000041e7df : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403187 : mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041b735 : mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000423372 : mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000428947 : mov dh, -0x40 ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000041e8ee : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000041d610 : mov dh, -0x40 ; pop rbp ; ret
0x000000000042d169 : mov dh, -1 ; jmp qword ptr [rbx]
0x0000000000404e3d : mov dword ptr [0x62e350], edi ; pop rbp ; ret
0x000000000041949a : mov dword ptr [rax - 0xa], 0x858801c7 ; ret 0xfffe
0x00000000004088ea : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000408a38 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000041fde6 : mov dword ptr [rbp - 0x30], eax ; mov qword ptr [rbp - 0x38], rdx ; call r8
0x000000000041fdea : mov dword ptr [rbp - 0x38], edx ; call r8
0x000000000041fed2 : mov dword ptr [rbp - 0x48], edx ; call r8
0x000000000040f5e1 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000429d07 : mov dword ptr [rbp - 0xc], eax ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x00000000004255ad : mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x000000000041bb3f : mov dword ptr [rcx + 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004081cb : mov dword ptr [rcx], eax ; mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x0000000000420c6a : mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x000000000041e5b8 : mov dword ptr [rdi + 0x18], 0x95f616 ; pop rbp ; ret
0x00000000004250e0 : mov dword ptr [rdi + 0x48], esi ; pop rbp ; ret
0x00000000004022f8 : mov eax, 0 ; add byte ptr [rax], bl ; jmp qword ptr [rax]
0x000000000041c62a : mov eax, 0x50c48348 ; pop rbp ; ret
0x000000000041ec52 : mov eax, 0x5b000001 ; pop rbp ; ret
0x000000000040c91c : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x000000000040fc85 : mov eax, 0xf0658d48 ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000407899 : mov eax, dword ptr [rax] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000427f71 : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000408818 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004076db : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405344 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000412d59 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x0000000000427f6e : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000408815 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040d4ca : mov eax, dword ptr [rbp - 0x10] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000405233 : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405445 : mov eax, dword ptr [rbp - 0x14] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000408ba4 : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000040f6bf : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004087cd : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004088e4 : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040da94 : mov eax, dword ptr [rbp - 0x18] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042579a : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000410243 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040cd5d : mov eax, dword ptr [rbp - 0x20] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x00000000004081cd : mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x00000000004276b8 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004248f4 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041c6df : mov eax, dword ptr [rbp - 0x28] ; call rax
0x0000000000408a3a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000041dfc2 : mov eax, dword ptr [rbp - 0x30] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004212d8 : mov eax, dword ptr [rbp - 0x30] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040e318 : mov eax, dword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000413bed : mov eax, dword ptr [rbp - 0x44] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041c628 : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040c91a : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000042590f : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000429c2d : mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x000000000041e1ab : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000425316 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004200a4 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000411cd7 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004209ce : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041c8b3 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004244e0 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000407657 : mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004207b9 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000041ecad : mov eax, dword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000041eccd : mov eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000041eced : mov eax, dword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000041fbe9 : mov eax, dword ptr [rsi] ; mov rsi, qword ptr [r8] ; call rcx
0x00000000004285ee : mov eax, edi ; pop rbp ; ret
0x000000000041d5d4 : mov eax, edx ; pop rbp ; ret
0x0000000000428800 : mov eax, esi ; movzx eax, ax ; pop rbp ; ret
0x0000000000428623 : mov eax, esi ; pop rbp ; ret
0x0000000000401acb : mov ebp, esp ; call rax
0x0000000000401a31 : mov ebp, esp ; ja 0x401a3c ; pop rbp ; ret
0x0000000000412526 : mov ecx, 0x10a ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x0000000000411e7e : mov ecx, 0xa8 ; mov rsp, rbp ; pop rbp ; ret
0x00000000004023c2 : mov ecx, dword ptr [rax*8 + 0x429e30] ; jmp rcx
0x000000000040322d : mov ecx, dword ptr [rax*8 + 0x429e68] ; jmp rcx
0x0000000000406dd4 : mov ecx, dword ptr [rax*8 + 0x42a8f0] ; jmp rcx
0x0000000000409267 : mov ecx, dword ptr [rax*8 + 0x42a970] ; jmp rcx
0x0000000000409d81 : mov ecx, dword ptr [rax*8 + 0x42a9b8] ; jmp rcx
0x000000000040e842 : mov ecx, dword ptr [rax*8 + 0x42ae78] ; jmp rcx
0x000000000041c9f5 : mov ecx, dword ptr [rax*8 + 0x42b268] ; jmp rcx
0x00000000004088e7 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000421bd2 : mov ecx, dword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000421ae2 : mov ecx, dword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x00000000004081c8 : mov ecx, dword ptr [rbp - 0x20] ; mov dword ptr [rcx], eax ; mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x0000000000424033 : mov ecx, dword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x00000000004255aa : mov ecx, dword ptr [rbp - 8] ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x00000000004242fa : mov ecx, dword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000042864d : mov ecx, eax ; shl edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000042861d : mov ecx, eax ; shr edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000401ac5 : mov edi, 0x62de20 ; mov rbp, rsp ; call rax
0x0000000000401a42 : mov edi, 0x62e2b0 ; jmp rax
0x0000000000401a82 : mov edi, 0x62e2b0 ; jmp rdx
0x00000000004250dc : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000041eca9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000041ecc9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000041ece9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000421ae6 : mov edi, dword ptr [rcx] ; call rax
0x00000000004208e4 : mov edi, dword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x0000000000422019 : mov edi, dword ptr [rsi] ; call rcx
0x000000000042bbc9 : mov edi, ebp ; call qword ptr [rax]
0x0000000000429d67 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000429d66 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000042b739 : mov edx, 0x1294fffe ; add byte ptr [rax], al ; pushfq ; ret
0x000000000041f92e : mov edx, 0xf660000 ; pop rsp ; ret 0xf66
0x0000000000422012 : mov edx, dword ptr [rbp - 0x38] ; mov rsi, qword ptr [rdx] ; mov rdi, qword ptr [rsi] ; call rcx
0x00000000004156c9 : mov edx, eax ; call 0x401944
0x000000000041fece : mov esi, dword ptr [rax + 0x10] ; mov qword ptr [rbp - 0x48], rdx ; call r8
0x000000000041fbec : mov esi, dword ptr [rax] ; call rcx
0x00000000004208e7 : mov esi, dword ptr [rbp - 0x20] ; call rax
0x000000000041fbe5 : mov esi, dword ptr [rbp - 0x40] ; mov r8, qword ptr [rsi] ; mov rsi, qword ptr [r8] ; call rcx
0x0000000000424037 : mov esi, dword ptr [rcx] ; call rax
0x0000000000422016 : mov esi, dword ptr [rdx] ; mov rdi, qword ptr [rsi] ; call rcx
0x0000000000401a80 : mov esi, eax ; mov edi, 0x62e2b0 ; jmp rdx
0x000000000041c6dc : mov esi, eax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x000000000042ca7c : mov esp, 0x2000000f ; and bh, bh ; call qword ptr [rdx]
0x0000000000413bef : mov esp, 0x50c48348 ; pop rbp ; ret
0x000000000042c37c : mov esp, 0xa0000008 ; xor al, 0xfffffffffffffffe ; jmp rcx
0x000000000041f6ad : mov esp, 0xf660000 ; pop rsp ; ret 0xf66
0x00000000004020c8 : mov esp, ebp ; pop rbp ; ret
0x0000000000404e3c : mov qword ptr [0x62e350], rdi ; pop rbp ; ret
0x000000000041fde5 : mov qword ptr [rbp - 0x30], rax ; mov qword ptr [rbp - 0x38], rdx ; call r8
0x000000000041fde9 : mov qword ptr [rbp - 0x38], rdx ; call r8
0x000000000041fed1 : mov qword ptr [rbp - 0x48], rdx ; call r8
0x00000000004250df : mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000413bee : mov r12d, 0x50c48348 ; pop rbp ; ret
0x000000000041fbe8 : mov r8, qword ptr [rsi] ; mov rsi, qword ptr [r8] ; call rcx
0x000000000041c629 : mov r8d, 0x50c48348 ; pop rbp ; ret
0x000000000040c91b : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000407898 : mov rax, qword ptr [rax] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x00000000004076da : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405343 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000408814 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040d4c9 : mov rax, qword ptr [rbp - 0x10] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000405232 : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040f6be : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004087cc : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040da93 : mov rax, qword ptr [rbp - 0x18] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000410242 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004248f3 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041c6de : mov rax, qword ptr [rbp - 0x28] ; call rax
0x0000000000420beb : mov rax, qword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040e317 : mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041c627 : mov rax, qword ptr [rbp - 0x48] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000425315 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004200a3 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000411cd6 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004209cd : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041c8b2 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004244df : mov rax, qword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004207b8 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000041ecac : mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000041eccc : mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000041ecec : mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x00000000004285ed : mov rax, rdi ; pop rbp ; ret
0x000000000041d5d3 : mov rax, rdx ; pop rbp ; ret
0x0000000000401aca : mov rbp, rsp ; call rax
0x0000000000401a30 : mov rbp, rsp ; ja 0x401a3d ; pop rbp ; ret
0x00000000004023c1 : mov rcx, qword ptr [rax*8 + 0x429e30] ; jmp rcx
0x000000000040322c : mov rcx, qword ptr [rax*8 + 0x429e68] ; jmp rcx
0x0000000000406dd3 : mov rcx, qword ptr [rax*8 + 0x42a8f0] ; jmp rcx
0x0000000000409266 : mov rcx, qword ptr [rax*8 + 0x42a970] ; jmp rcx
0x0000000000409d80 : mov rcx, qword ptr [rax*8 + 0x42a9b8] ; jmp rcx
0x000000000040e841 : mov rcx, qword ptr [rax*8 + 0x42ae78] ; jmp rcx
0x000000000041c9f4 : mov rcx, qword ptr [rax*8 + 0x42b268] ; jmp rcx
0x0000000000421bd1 : mov rcx, qword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000421ae1 : mov rcx, qword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000424032 : mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x00000000004255a9 : mov rcx, qword ptr [rbp - 8] ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x00000000004242f9 : mov rcx, qword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x00000000004250db : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000041eca8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000041ecc8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000041ece8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000421ae5 : mov rdi, qword ptr [rcx] ; call rax
0x00000000004208e3 : mov rdi, qword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x0000000000422018 : mov rdi, qword ptr [rsi] ; call rcx
0x00000000004156c8 : mov rdx, r8 ; call 0x401945
0x000000000041fbeb : mov rsi, qword ptr [r8] ; call rcx
0x000000000041fecd : mov rsi, qword ptr [rax + 0x10] ; mov qword ptr [rbp - 0x48], rdx ; call r8
0x00000000004208e6 : mov rsi, qword ptr [rbp - 0x20] ; call rax
0x0000000000424036 : mov rsi, qword ptr [rcx] ; call rax
0x0000000000422015 : mov rsi, qword ptr [rdx] ; mov rdi, qword ptr [rsi] ; call rcx
0x0000000000401a7f : mov rsi, rax ; mov edi, 0x62e2b0 ; jmp rdx
0x000000000041c6db : mov rsi, rax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x00000000004020c7 : mov rsp, rbp ; pop rbp ; ret
0x000000000042b8c0 : mov word ptr [rcx - 1], gs ; jmp rsp
0x0000000000405ba4 : movsx eax, al ; pop rbp ; ret
0x000000000041e7de : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403186 : movzx eax, al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041b734 : movzx eax, al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000423371 : movzx eax, al ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000428946 : movzx eax, al ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000041e8ed : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000041d60f : movzx eax, al ; pop rbp ; ret
0x0000000000428802 : movzx eax, ax ; pop rbp ; ret
0x0000000000429d88 : nop dword ptr [rax + rax] ; ret
0x000000000040cf9f : or al, 0x25 ; shl ah, 0x62 ; add byte ptr [rbp - 0x77], al ; ret 0x8141
0x000000000040778d : or al, 0x25 ; shl ah, 0x62 ; add byte ptr [rcx - 0x77], al ; ret 0x8141
0x0000000000412527 : or al, byte ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x000000000040cae9 : or byte ptr [r15], cl ; xchg eax, ebp ; ret 0x348b
0x0000000000420000 : or byte ptr [r15], cl ; xchg eax, edx ; ret 0x348b
0x0000000000403a6a : or byte ptr [r15], cl ; xchg eax, esp ; ret 0x348b
0x0000000000424243 : or byte ptr [r8 + 0x3b], cl ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x348b
0x000000000040aeb3 : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000424244 : or byte ptr [rax + 0x3b], cl ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x348b
0x000000000040aeb4 : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000428d9c : or byte ptr [rcx + 0x2038], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x00000000004291dc : or byte ptr [rcx + 0x2138], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000040f16d : or byte ptr [rcx + 0x28f9], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x00000000004064fc : or byte ptr [rcx + 0x2bf9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x000000000040727d : or byte ptr [rcx + 0x2cf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x0000000000407216 : or byte ptr [rcx + 0x2df9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x00000000004065ad : or byte ptr [rcx + 0x2df9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x00000000004142e5 : or byte ptr [rcx + 0x2f9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x0000000000428aec : or byte ptr [rcx + 0x3038], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x0000000000401b3c : or byte ptr [rcx + 0x38], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x000000000040623c : or byte ptr [rcx + 0x38f9], al ; add byte ptr [rdi], cl ; pushfq ; ret 0x5588
0x0000000000406aed : or byte ptr [rcx + 0x38f9], al ; add byte ptr [rdi], cl ; pushfq ; ret 0x9588
0x0000000000407184 : or byte ptr [rcx + 0x3df9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x00000000004290dc : or byte ptr [rcx + 0x6138], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x0000000000406b61 : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x000000000040caea : or byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x0000000000420001 : or byte ptr [rdi], cl ; xchg eax, edx ; ret 0x348b
0x0000000000403a6b : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x000000000040de5d : or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x000000000040deff : or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x000000000041f16c : or cl, ch ; ret
0x000000000040ff0f : or eax, 0x48fffff9 ; add esp, 0x30 ; pop rbp ; ret
0x000000000042b58d : or eax, dword ptr [rax] ; add ah, bh ; and dh, bh ; call rsp
0x0000000000408d6d : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040586c : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004285eb : or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x0000000000428621 : or esi, edi ; mov eax, esi ; pop rbp ; ret
0x00000000004285ea : or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x0000000000428620 : out dx, eax ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000401aa5 : outsb dx, byte ptr [rsi] ; enter 0x22, 1 ; ret
0x00000000004090a4 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000429d7c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004216db : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004090a6 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000429d7e : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004090a8 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000429d80 : pop r14 ; pop r15 ; ret
0x000000000040d739 : pop r14 ; pop rbp ; ret
0x00000000004090aa : pop r15 ; pop rbp ; ret
0x0000000000429d82 : pop r15 ; ret
0x000000000042d0a8 : pop rax ; mov ch, -1 ; jmp qword ptr [rdi]
0x0000000000412d5f : pop rax ; pop rbx ; pop rbp ; ret
0x00000000004020c3 : pop rbp ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000401aa2 : pop rbp ; mov byte ptr [rip + 0x22c86e], 1 ; ret
0x0000000000401a41 : pop rbp ; mov edi, 0x62e2b0 ; jmp rax
0x0000000000401a7e : pop rbp ; mov rsi, rax ; mov edi, 0x62e2b0 ; jmp rdx
0x0000000000429d7b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004090a7 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000429d7f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401a35 : pop rbp ; ret
0x00000000004216da : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040d2db : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040d738 : pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040789f : pop rbx ; pop rbp ; ret
0x00000000004090ab : pop rdi ; pop rbp ; ret
0x0000000000429d83 : pop rdi ; ret
0x00000000004295b1 : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x0000000000428c71 : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x00000000004090a9 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000429d81 : pop rsi ; pop r15 ; ret
0x000000000040d73a : pop rsi ; pop rbp ; ret
0x00000000004214f7 : pop rsp ; add dword ptr [rdi], ecx ; ror dword ptr cs:[rdi], -0x69 ; ret 0x348b
0x00000000004090a5 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000429d7d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004216dc : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041f6b2 : pop rsp ; ret 0xf66
0x000000000041cee8 : popfq ; ret 0x348b
0x0000000000428bc0 : popfq ; ret 0xc8b
0x000000000041a3ba : push 0x5b000001 ; pop rbp ; ret
0x0000000000426ae3 : push rax ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x00000000004002d5 : push rax ; jbe 0x40027e ; xchg al, dh ; xchg eax, esi ; jl 0x400327 ; ret
0x000000000040d56e : push rax ; pop rbp ; ret
0x0000000000400282 : push rbp ; add byte ptr [rsi], bl ; ret
0x0000000000422013 : push rbp ; enter -0x74b8, 0x32 ; mov rdi, qword ptr [rsi] ; call rcx
0x000000000040aeb7 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x00000000004129e7 : push rbp ; fmul dword ptr [rax - 0x77] ; ret 0x3948
0x0000000000401ac4 : push rbp ; mov edi, 0x62de20 ; mov rbp, rsp ; call rax
0x000000000040c84e : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000040d65f : pushfq ; mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x0000000000401e50 : pushfq ; ret
0x0000000000406244 : pushfq ; ret 0x5588
0x0000000000403c8e : pushfq ; ret 0x844
0x0000000000401b7a : pushfq ; ret 0x845
0x0000000000406af5 : pushfq ; ret 0x9588
0x000000000040dc8a : pushfq ; ret 0xd108
0x000000000042b808 : pushfq ; xor edi, edi ; jmp rsp
0x000000000042861e : rcl ebx, -0x11 ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000042864e : rcl ebx, -0x19 ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000400286 : ret
0x0000000000412b21 : ret 0
0x000000000041cd05 : ret 0x108
0x0000000000411c0a : ret 0x110
0x0000000000401b00 : ret 0x125
0x000000000040b2a5 : ret 0x13
0x00000000004044ca : ret 0x176
0x00000000004018e2 : ret 0x22c8
0x00000000004016e2 : ret 0x22c9
0x0000000000409ab7 : ret 0x2a
0x000000000040aed0 : ret 0x2ae8
0x0000000000401b45 : ret 0x348b
0x00000000004129eb : ret 0x3948
0x0000000000408555 : ret 0x4001
0x000000000042b2b0 : ret 0x41ca
0x000000000040436f : ret 0x4401
0x000000000040da82 : ret 0x4801
0x00000000004120bd : ret 0x48b
0x0000000000422c8c : ret 0x48b0
0x00000000004053cc : ret 0x48f0
0x000000000040dbd7 : ret 0x4cc0
0x0000000000408e5a : ret 0x4cf0
0x0000000000406245 : ret 0x5588
0x0000000000413006 : ret 0x5589
0x000000000041ab14 : ret 0x60
0x00000000004156ca : ret 0x70e8
0x000000000040de60 : ret 0x7ae8
0x000000000041e2a5 : ret 0x8041
0x0000000000401e46 : ret 0x8141
0x000000000041e88e : ret 0x8148
0x00000000004217a6 : ret 0x8348
0x0000000000403c8f : ret 0x844
0x000000000041242a : ret 0x8445
0x0000000000401b7b : ret 0x845
0x0000000000401f95 : ret 0x8801
0x0000000000401e57 : ret 0x8901
0x000000000040fdc5 : ret 0x8948
0x000000000040b22c : ret 0x89a5
0x000000000040fa43 : ret 0x8b44
0x0000000000404312 : ret 0x8b48
0x0000000000406af6 : ret 0x9588
0x0000000000402810 : ret 0xa3d
0x0000000000425f5e : ret 0xb
0x00000000004028ea : ret 0xb0
0x000000000042187e : ret 0xb948
0x0000000000401a65 : ret 0xc148
0x000000000040646a : ret 0xc2f6
0x0000000000403d2a : ret 0xc8b
0x000000000040dc8b : ret 0xd108
0x000000000040e27c : ret 0xd284
0x000000000040df02 : ret 0xd8e8
0x0000000000403d1b : ret 0xe280
0x0000000000401af7 : ret 0xea81
0x000000000040c79c : ret 0xee8
0x000000000040281e : ret 0xf01
0x000000000041931b : ret 0xf280
0x000000000041f6b3 : ret 0xf66
0x000000000041d872 : ret 0xf748
0x000000000040435f : ret 0xfa81
0x0000000000416a40 : ret 0xfae8
0x00000000004256e3 : ret 0xfe81
0x00000000004218f7 : ret 0xff3
0x0000000000407759 : ret 0xff70
0x000000000040645d : ret 0xff81
0x00000000004045d9 : ret 0xfff3
0x000000000042b4f1 : ret 0xfffd
0x00000000004156cd : ret 0xfffe
0x0000000000415a3b : ret 0xffff
0x0000000000407491 : ret 1
0x000000000041366c : ret 5
0x000000000040c852 : ret 8
0x0000000000404afb : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004212d9 : ror byte ptr [r8 - 0x73], 1 ; clc ; pop rbx ; pop rbp ; ret
0x000000000040f373 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000401a6c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401a7b ; pop rbp ; ret
0x0000000000428948 : ror byte ptr [rax - 0x73], 0x65 ; clc ; pop rbx ; pop rbp ; ret
0x00000000004212da : ror byte ptr [rax - 0x73], 1 ; clc ; pop rbx ; pop rbp ; ret
0x000000000041e8ef : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x000000000040f374 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x00000000004031b2 : ror byte ptr [rax - 0x77], 1 ; ret 0xb0
0x000000000041b736 : ror byte ptr [rax - 0x7d], -0x3c ; pop rbp ; ret
0x000000000040456d : ror byte ptr [rax - 0x7f], -0x3c ; jo 0x40457d ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000404af7 : ror byte ptr [rax - 0x7f], -0x3c ; rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041fbe7 : ror byte ptr [rbx + rcx*4 + 6], 0x49 ; mov esi, dword ptr [rax] ; call rcx
0x000000000040c84f : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000042d400 : ror cl, -1 ; call qword ptr [rax]
0x000000000041f59d : ror dword ptr [rcx - 0x7d], cl ; ret
0x00000000004214fb : ror dword ptr [rdi], -0x69 ; ret 0x348b
0x00000000004214fa : ror dword ptr cs:[rdi], -0x69 ; ret 0x348b
0x00000000004130a9 : sahf ; ret 0x48b
0x00000000004295b6 : sahf ; ret 0x5588
0x0000000000428c76 : sahf ; ret 0xc8b
0x00000000004002d7 : sahf ; xchg al, dh ; xchg eax, esi ; jl 0x400325 ; ret
0x0000000000409d44 : sal dh, cl ; ret 0x8901
0x0000000000401a6e : sar eax, 1 ; jne 0x401a79 ; pop rbp ; ret
0x000000000042b4e9 : sar ebp, -1 ; sub al, 9 ; add byte ptr [rax], al ; ret 0xfffd
0x0000000000401a6d : sar rax, 1 ; jne 0x401a7a ; pop rbp ; ret
0x0000000000400284 : sbb al, -0x1a ; ret
0x00000000004255de : sbb al, 0x24 ; add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000412f50 : sbb byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000411f7d : sbb cl, byte ptr [rax - 0x7f] ; ret
0x0000000000408fe0 : sbb cl, byte ptr [rcx - 0x7f] ; ret
0x000000000042c111 : sbb dh, bh ; call qword ptr [rdi]
0x0000000000428127 : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000042ca01 : sbb edi, edi ; jmp qword ptr [rcx]
0x000000000040d27d : scasd eax, dword ptr [rdi] ; ret
0x0000000000401aff : scasd eax, dword ptr [rdi] ; ret 0x125
0x000000000040cfb1 : scasd eax, dword ptr [rdi] ; ret 0x8141
0x000000000041d60a : sete al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041066d : shl ah, 0x62 ; add byte ptr [rbp - 0x77], al ; ret
0x000000000040cfa1 : shl ah, 0x62 ; add byte ptr [rbp - 0x77], al ; ret 0x8141
0x000000000040e56f : shl ah, 0x62 ; add byte ptr [rcx - 0x77], al ; ret
0x000000000040778f : shl ah, 0x62 ; add byte ptr [rcx - 0x77], al ; ret 0x8141
0x000000000041d60c : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000041f6d6 : shl dword ptr [rsi + 0xf], 0x5c ; ret 0xf66
0x000000000042864f : shl edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x00000000004285e8 : shl edx, cl ; or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x000000000042861f : shr edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000428bba : stc ; add byte ptr [r8], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x0000000000403d14 : stc ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000419647 : stc ; add eax, 0xf000000 ; xchg eax, esp ; ret 0xc8b
0x0000000000407186 : stc ; cmp eax, 0xf000000 ; xchg eax, esp ; ret 0xc8b
0x00000000004295b0 : stc ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x0000000000428c70 : stc ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x0000000000407218 : stc ; sub eax, 0xf000000 ; xchg eax, esp ; ret 0x9588
0x00000000004065af : stc ; sub eax, 0xf000000 ; xchg eax, esp ; ret 0xc8b
0x000000000042bbca : std ; call qword ptr [rax]
0x000000000042bc0a : std ; call qword ptr [rsi]
0x000000000042be4a : std ; call rbx
0x000000000042bd4a : std ; jmp rsi
0x000000000042b4ea : std ; ljmp ptr [rcx + rcx] ; add byte ptr [rax], al ; ret 0xfffd
0x0000000000428a7b : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041bb41 : sub al, 0x48 ; add esp, 0x30 ; pop rbp ; ret
0x000000000042b4ec : sub al, 9 ; add byte ptr [rax], al ; ret 0xfffd
0x000000000042c608 : sub byte ptr [rbx - 2], ch ; jmp rdi
0x0000000000407219 : sub eax, 0xf000000 ; xchg eax, esp ; ret 0x9588
0x00000000004065b0 : sub eax, 0xf000000 ; xchg eax, esp ; ret 0xc8b
0x0000000000429e09 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000429e08 : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000411e7f : test al, 0 ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000429d8a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000042be44 : test byte ptr [rbx], al ; add byte ptr [rax], al ; fmul st(1) ; std ; call rbx
0x000000000042bd44 : test byte ptr [rdx], al ; add byte ptr [rax], al ; js 0x42bcf2 ; std ; jmp rsi
0x0000000000417bd4 : test dword ptr [rip - 0x17000000], eax ; jmp qword ptr [rdi]
0x000000000040506b : test dword ptr [rip - 0x17000000], eax ; ret
0x000000000040b29f : test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x0000000000409ab1 : test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x0000000000425f58 : test dword ptr [rip - 0x17000000], eax ; ret 0xb
0x000000000040ab9c : test dword ptr [rip - 0x17000000], eax ; ret 1
0x0000000000413666 : test dword ptr [rip - 0x17000000], eax ; ret 5
0x0000000000410063 : test eax, 0x48fffffc ; add esp, 0x10 ; pop rbp ; ret
0x00000000004002d8 : xchg al, dh ; xchg eax, esi ; jl 0x400324 ; ret
0x000000000041e1dc : xchg eax, ebp ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041945a : xchg eax, ebp ; ret
0x0000000000401b44 : xchg eax, ebp ; ret 0x348b
0x00000000004120bc : xchg eax, ebp ; ret 0x48b
0x00000000004107d9 : xchg eax, ebp ; ret 0x5588
0x000000000041e2a4 : xchg eax, ebp ; ret 0x8041
0x0000000000412429 : xchg eax, ebp ; ret 0x8445
0x000000000040fa42 : xchg eax, ebp ; ret 0x8b44
0x0000000000411014 : xchg eax, ebp ; ret 0x9588
0x0000000000403d29 : xchg eax, ebp ; ret 0xc8b
0x0000000000404b4e : xchg eax, ebp ; ret 0xe280
0x000000000042bc89 : xchg eax, ebp ; std ; call qword ptr [rax]
0x00000000004214fd : xchg eax, edi ; ret 0x348b
0x0000000000420003 : xchg eax, edx ; ret 0x348b
0x000000000042bc09 : xchg eax, edx ; std ; call qword ptr [rsi]
0x00000000004002da : xchg eax, esi ; jl 0x400322 ; ret
0x0000000000409b97 : xchg eax, esi ; ret 0x348b
0x00000000004077ad : xchg eax, esp ; ret
0x00000000004039b3 : xchg eax, esp ; ret 0x348b
0x0000000000412453 : xchg eax, esp ; ret 0x48b
0x000000000041d956 : xchg eax, esp ; ret 0x5588
0x0000000000401e45 : xchg eax, esp ; ret 0x8141
0x00000000004213ec : xchg eax, esp ; ret 0x8b44
0x000000000040721e : xchg eax, esp ; ret 0x9588
0x000000000040280f : xchg eax, esp ; ret 0xa3d
0x0000000000406504 : xchg eax, esp ; ret 0xc8b
0x000000000040e27b : xchg eax, esp ; ret 0xd284
0x0000000000403d1a : xchg eax, esp ; ret 0xe280
0x000000000041931a : xchg eax, esp ; ret 0xf280
0x000000000040435e : xchg eax, esp ; ret 0xfa81
0x00000000004256e2 : xchg eax, esp ; ret 0xfe81
0x000000000040645c : xchg eax, esp ; ret 0xff81
0x000000000041d60b : xchg eax, esp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000042cec9 : xchg edi, edi ; call qword ptr [rsi]
0x000000000042cee9 : xchg edi, edi ; jmp rdi
0x00000000004285ec : xlatb ; mov rax, rdi ; pop rbp ; ret
0x000000000042c381 : xor al, 0xfffffffffffffffe ; jmp rcx
0x000000000041ccfe : xor byte ptr [r8 - 0x75], cl ; adc byte ptr [rax - 0x7f], cl ; ret 0x108
0x000000000041ccff : xor byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7f], cl ; ret 0x108
0x000000000040de57 : xor byte ptr [rax - 0x75], cl ; add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x000000000040def9 : xor byte ptr [rax - 0x75], cl ; add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x0000000000425796 : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000422017 : xor cl, byte ptr [rax - 0x75] ; call rcx
0x00000000004128f7 : xor eax, ebp ; ret
0x000000000042cb91 : xor edi, edi ; call rdx
0x000000000042b809 : xor edi, edi ; jmp rsp
0x000000000042c341 : xor edi, esi ; call rsp
0x0000000000408a36 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
