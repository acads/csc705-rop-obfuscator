0x000000000000155c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000000d7c : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret
0x0000000000000ab0 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x0000000000000d71 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x0000000000001009 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xfa81
0x0000000000000a85 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x318b
0x0000000000000b7c : add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000000c3a : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000000823 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000000859 : add byte ptr [rax], al ; jmp 0x839
0x000000000000155e : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000000011c1 : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000000d7e : add byte ptr [rcx + 0xf], al ; pushfq ; ret
0x0000000000000ab2 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x0000000000000d73 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x000000000000100b : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xfa81
0x000000000000097e : add byte ptr [rcx], al ; ret
0x0000000000000a87 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x318b
0x0000000000000b7e : add cl, ch ; ret
0x0000000000000b78 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret
0x000000000000097a : add eax, 0x2016f0 ; add ebx, esi ; ret
0x0000000000000b7b : add eax, 0xe9000000 ; ret
0x0000000000000931 : add eax, edx ; sar rax, 1 ; jne 0x942 ; pop rbp ; ret
0x000000000000097f : add ebx, esi ; ret
0x0000000000000928 : add ecx, dword ptr [rax - 0x77] ; ret 0xc148
0x0000000000000c3d : add esp, 0x20 ; pop rbp ; ret
0x00000000000011bd : add esp, 0x90 ; pop rbp ; ret
0x0000000000000826 : add esp, 8 ; ret
0x0000000000000930 : add rax, rdx ; sar rax, 1 ; jne 0x943 ; pop rbp ; ret
0x0000000000000c3c : add rsp, 0x20 ; pop rbp ; ret
0x00000000000011bc : add rsp, 0x90 ; pop rbp ; ret
0x0000000000000825 : add rsp, 8 ; ret
0x000000000000097d : and byte ptr [rax], al ; add ebx, esi ; ret
0x00000000000009ac : and byte ptr [rax], al ; mov rbp, rsp ; call rax
0x0000000000000902 : and byte ptr [rax], al ; test rax, rax ; je 0x903 ; pop rbp ; jmp rax
0x0000000000000c38 : and eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000000009b1 : call rax
0x0000000000000927 : clc ; add ecx, dword ptr [rax - 0x77] ; ret 0xc148
0x0000000000000935 : clc ; jne 0x93e ; pop rbp ; ret
0x00000000000009a9 : cmp eax, 0x20143a ; mov rbp, rsp ; call rax
0x00000000000008f6 : cmp eax, 0xe ; ja 0x903 ; pop rbp ; ret
0x00000000000008f5 : cmp rax, 0xe ; ja 0x904 ; pop rbp ; ret
0x0000000000001252 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000000aae : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x000000000000101c : fiadd dword ptr [rcx - 0xa] ; ret 0x4401
0x0000000000000d85 : fiadd dword ptr [rcx - 0xa] ; ret 0x8801
0x0000000000001115 : fiadd dword ptr [rcx - 0xa] ; ret 0xf01
0x00000000000008f4 : in eax, 0x48 ; cmp eax, 0xe ; ja 0x905 ; pop rbp ; ret
0x00000000000008f9 : ja 0x900 ; pop rbp ; ret
0x0000000000000907 : je 0x8fe ; pop rbp ; jmp rax
0x0000000000000944 : je 0x93e ; pop rbp ; mov rsi, rax ; jmp rdx
0x000000000000085b : jmp 0x837
0x000000000000171b : jmp qword ptr [rsi]
0x000000000000090a : jmp rax
0x000000000000094a : jmp rdx
0x0000000000000936 : jne 0x93d ; pop rbp ; ret
0x00000000000009a8 : lea edi, dword ptr [rip + 0x20143a] ; mov rbp, rsp ; call rax
0x0000000000000979 : mov byte ptr [rip + 0x2016f0], 1 ; ret
0x0000000000001561 : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000000009af : mov ebp, esp ; call rax
0x00000000000008f3 : mov ebp, esp ; cmp rax, 0xe ; ja 0x906 ; pop rbp ; ret
0x0000000000000948 : mov esi, eax ; jmp rdx
0x0000000000001560 : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000000009ae : mov rbp, rsp ; call rax
0x0000000000000947 : mov rsi, rax ; jmp rdx
0x0000000000000909 : pop rbp ; jmp rax
0x0000000000000978 : pop rbp ; mov byte ptr [rip + 0x2016f0], 1 ; ret
0x0000000000000946 : pop rbp ; mov rsi, rax ; jmp rdx
0x00000000000008fb : pop rbp ; ret
0x0000000000000d81 : pushfq ; ret
0x0000000000000ab5 : pushfq ; ret 0x845
0x0000000000000829 : ret
0x0000000000000862 : ret 0x2017
0x0000000000000a8a : ret 0x318b
0x000000000000101f : ret 0x4401
0x0000000000000d77 : ret 0x8141
0x0000000000000ab6 : ret 0x845
0x0000000000000d88 : ret 0x8801
0x00000000000010c5 : ret 0xb0
0x000000000000092b : ret 0xc148
0x0000000000001118 : ret 0xf01
0x000000000000100f : ret 0xfa81
0x0000000000000b77 : rol dword ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret
0x0000000000000932 : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x941 ; pop rbp ; ret
0x0000000000000943 : sal byte ptr [rdx + rsi*8 + 0x5d], cl ; mov rsi, rax ; jmp rdx
0x0000000000000934 : sar eax, 1 ; jne 0x93f ; pop rbp ; ret
0x0000000000000933 : sar rax, 1 ; jne 0x940 ; pop rbp ; ret
0x00000000000015a9 : sub esp, 8 ; add rsp, 8 ; ret
0x00000000000015a8 : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000000b7a : test dword ptr [rip - 0x17000000], eax ; ret
0x0000000000000905 : test eax, eax ; je 0x900 ; pop rbp ; jmp rax
0x0000000000000942 : test edx, edx ; je 0x940 ; pop rbp ; mov rsi, rax ; jmp rdx
0x0000000000000904 : test rax, rax ; je 0x901 ; pop rbp ; jmp rax
0x0000000000000941 : test rdx, rdx ; je 0x941 ; pop rbp ; mov rsi, rax ; jmp rdx
0x0000000000000a89 : xchg eax, ebp ; ret 0x318b
0x0000000000000d76 : xchg eax, esp ; ret 0x8141
0x000000000000100e : xchg eax, esp ; ret 0xfa81
