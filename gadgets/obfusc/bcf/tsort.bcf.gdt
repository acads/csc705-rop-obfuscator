0x000000000040cfbe : adc al, -8 ; pop rbp ; ret
0x00000000004146e3 : add ah, ch ; or dword ptr [rax], eax ; add byte ptr [rax], bh ; test al, -1 ; call rcx
0x0000000000402af5 : add al, 0x25 ; mov eax, 0xe9006152 ; ret
0x000000000040ada7 : add al, ch ; ret
0x000000000040ae98 : add al, ch ; ret 0x42
0x0000000000413bdb : add al, dh ; mov dh, -1 ; call rax
0x0000000000412c2f : add bl, dh ; ret
0x0000000000411a5b : add byte ptr [r8], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x000000000040401f : add byte ptr [rax + 0xf012400], dh ; mov dh, -0x40 ; pop rbp ; ret
0x000000000040e110 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000040f612 : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000041434f : add byte ptr [rax], ah ; jbe 0x414356 ; call qword ptr [rdi]
0x000000000040ada5 : add byte ptr [rax], al ; add al, ch ; ret
0x000000000040ae96 : add byte ptr [rax], al ; add al, ch ; ret 0x42
0x0000000000412c2d : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040f7c8 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000412c2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004135ac : add byte ptr [rax], al ; add byte ptr [rax], al ; call rsi
0x0000000000412ac9 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x000000000040c2fb : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000412c2c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000402c3f : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x8141
0x000000000040b288 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000401959 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret
0x0000000000407ceb : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x844
0x0000000000403084 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x0000000000403cee : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x0000000000405f82 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x125
0x00000000004101cf : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x0000000000402c51 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000040194e : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x000000000040b228 : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x51], al ; ret
0x0000000000411990 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x0000000000411a5c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x0000000000402c5c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret
0x0000000000405465 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x0000000000412452 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x0000000000411b12 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x000000000041023c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret
0x00000000004016e5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x125
0x000000000040dc97 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x000000000040e7de : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x0000000000410556 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x000000000040df11 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x0000000000403cfc : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000411c40 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x0000000000407ce1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x0000000000401e9a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x000000000040c227 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000401db3 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000040cc88 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf981
0x00000000004055dd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xfe81
0x000000000040ae91 : add byte ptr [rax], al ; add cl, ch ; add eax, 0xe8000000 ; ret 0x42
0x0000000000404d6d : add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000409251 : add byte ptr [rax], al ; add cl, ch ; ret 0x13
0x0000000000407a63 : add byte ptr [rax], al ; add cl, ch ; ret 0x2a
0x0000000000403036 : add byte ptr [rax], al ; add cl, ch ; ret 0xa
0x0000000000410ada : add byte ptr [rax], al ; add cl, ch ; ret 0xb
0x0000000000408b4e : add byte ptr [rax], al ; add cl, ch ; ret 1
0x0000000000404cdf : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406d1f : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040122b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000041434e : add byte ptr [rax], al ; and byte ptr [rsi - 1], dh ; call qword ptr [rdi]
0x00000000004135ae : add byte ptr [rax], al ; call rsi
0x0000000000413eda : add byte ptr [rax], al ; in al, 1 ; add byte ptr [rax], al ; push rax ; or al, 0xffffffffffffffff ; call qword ptr [rsi]
0x00000000004146e2 : add byte ptr [rax], al ; in al, dx ; or dword ptr [rax], eax ; add byte ptr [rax], bh ; test al, -1 ; call rcx
0x0000000000414496 : add byte ptr [rax], al ; jle 0x41449f ; jmp qword ptr [rcx]
0x0000000000401449 : add byte ptr [rax], al ; jmp 0x401249
0x0000000000403682 : add byte ptr [rax], al ; jmp 0x403b93
0x000000000040ae92 : add byte ptr [rax], al ; jmp 0x40aea6
0x0000000000406b52 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000412acb : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x00000000004067c2 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040f7c9 : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000414a4e : add byte ptr [rax], al ; nop ; loopne 0x414a57 ; call rsp
0x0000000000402a24 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040b289 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000411665 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040621e : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000413ede : add byte ptr [rax], al ; push rax ; or al, 0xffffffffffffffff ; call qword ptr [rsi]
0x0000000000413b32 : add byte ptr [rax], al ; push rax ; xchg edi, edi ; jmp qword ptr [rax]
0x0000000000412c2e : add byte ptr [rax], al ; ret
0x00000000004146e7 : add byte ptr [rax], bh ; test al, -1 ; call rcx
0x0000000000413b23 : add byte ptr [rax], dh ; xchg bh, bh ; jmp rax
0x0000000000402c41 : add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x8141
0x0000000000402c37 : add byte ptr [rbp - 0x77], al ; ret 0x8141
0x000000000040b28a : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000411666 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040621f : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000413b30 : add byte ptr [rbx], cl ; add byte ptr [rax], al ; push rax ; xchg edi, edi ; jmp qword ptr [rax]
0x0000000000403d08 : add byte ptr [rcx + 0xf], al ; pushfq ; mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x000000000040195b : add byte ptr [rcx + 0xf], al ; pushfq ; ret
0x0000000000407ced : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x844
0x0000000000403086 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x0000000000403cf0 : add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x0000000000405f84 : add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x125
0x00000000004101d1 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x0000000000402c53 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000401950 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x000000000040b5fc : add byte ptr [rcx + 0xfe], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000401e96 : add byte ptr [rcx + 0xfe], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x000000000040be38 : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000407cdd : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x00000000004060fa : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x0000000000403f20 : add byte ptr [rcx + rax], ah ; movzx eax, al ; pop rbp ; ret
0x0000000000403ce6 : add byte ptr [rcx - 0x77], al ; ret
0x0000000000405f7a : add byte ptr [rcx - 0x77], al ; ret 0x8141
0x0000000000401678 : add byte ptr [rcx], al ; ret
0x000000000040b22a : add byte ptr [rdi + rcx - 0x51], al ; ret
0x000000000040ada1 : add byte ptr [rdi], cl ; lea eax, dword ptr [rip - 0x18000000] ; ret
0x0000000000411992 : add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x0000000000411a5e : add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x0000000000402c5e : add byte ptr [rdi], cl ; pushfq ; ret
0x0000000000405467 : add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x0000000000412454 : add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x0000000000411b14 : add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x000000000041023e : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret
0x00000000004016e7 : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x125
0x000000000040dc99 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x000000000040e7e0 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x0000000000410558 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x000000000040df13 : add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x0000000000403cfe : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000411c42 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x0000000000407ce3 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x0000000000401e9c : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x000000000040c229 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000401db5 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000040cc8a : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf981
0x00000000004055df : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xfe81
0x000000000041434b : add byte ptr [rsi + rax], dl ; add byte ptr [rax], ah ; jbe 0x41435a ; call qword ptr [rdi]
0x000000000040ae93 : add cl, ch ; add eax, 0xe8000000 ; ret 0x42
0x0000000000402afa : add cl, ch ; ret
0x0000000000409253 : add cl, ch ; ret 0x13
0x0000000000407a65 : add cl, ch ; ret 0x2a
0x0000000000403038 : add cl, ch ; ret 0xa
0x0000000000410adc : add cl, ch ; ret 0xb
0x0000000000408b50 : add cl, ch ; ret 1
0x0000000000403688 : add cl, ch ; ret 2
0x0000000000402d01 : add dword ptr [rax - 0x73], ecx ; clc ; pop rbx ; pop rbp ; ret
0x000000000040be0a : add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x000000000040beac : add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x0000000000411664 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040621d : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040d010 : add dword ptr [rdi], ecx ; mov dh, -0x3f ; pop rbp ; ret
0x0000000000404af4 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004045be : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000411b75 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000403f22 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000404d69 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret
0x000000000040924d : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x0000000000407a5f : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x0000000000403032 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0xa
0x0000000000410ad6 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0xb
0x0000000000408b4a : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 1
0x0000000000401674 : add eax, 0x213c26 ; add ebx, esi ; ret
0x000000000040ada4 : add eax, 0xe8000000 ; ret
0x000000000040ae95 : add eax, 0xe8000000 ; ret 0x42
0x0000000000404d6c : add eax, 0xe9000000 ; ret
0x0000000000409250 : add eax, 0xe9000000 ; ret 0x13
0x0000000000407a62 : add eax, 0xe9000000 ; ret 0x2a
0x0000000000403035 : add eax, 0xe9000000 ; ret 0xa
0x0000000000410ad9 : add eax, 0xe9000000 ; ret 0xb
0x0000000000408b4d : add eax, 0xe9000000 ; ret 1
0x000000000040163b : add eax, edx ; sar rax, 1 ; jne 0x40164c ; pop rbp ; ret
0x0000000000401679 : add ebx, esi ; ret
0x000000000040187b : add esp, 0x10 ; pop rbp ; ret
0x000000000040a4ad : add esp, 0x178 ; pop rbx ; pop rbp ; ret
0x000000000040e2fc : add esp, 0x1a0 ; pop rbp ; ret
0x000000000040621a : add esp, 0x1c8 ; pop rbx ; pop rbp ; ret
0x0000000000404af9 : add esp, 0x20 ; pop rbp ; ret
0x00000000004045c3 : add esp, 0x30 ; pop rbp ; ret
0x0000000000406641 : add esp, 0x40 ; pop rbp ; ret
0x000000000040de3f : add esp, 0x40 ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000403ad4 : add esp, 0x50 ; pop rbp ; ret
0x000000000040b842 : add esp, 0x70 ; pop rbp ; ret
0x000000000040a8ce : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040d2bd : add esp, 0x90 ; pop rbp ; ret
0x0000000000402a20 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040e15c : add esp, 0xb0 ; pop rbp ; ret
0x000000000040122e : add esp, 8 ; ret
0x000000000040163a : add rax, rdx ; sar rax, 1 ; jne 0x40164d ; pop rbp ; ret
0x000000000040187a : add rsp, 0x10 ; pop rbp ; ret
0x000000000040a4ac : add rsp, 0x178 ; pop rbx ; pop rbp ; ret
0x000000000040e2fb : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000406219 : add rsp, 0x1c8 ; pop rbx ; pop rbp ; ret
0x0000000000404af8 : add rsp, 0x20 ; pop rbp ; ret
0x00000000004045c2 : add rsp, 0x30 ; pop rbp ; ret
0x0000000000406640 : add rsp, 0x40 ; pop rbp ; ret
0x000000000040de3e : add rsp, 0x40 ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000403ad3 : add rsp, 0x50 ; pop rbp ; ret
0x000000000040b841 : add rsp, 0x70 ; pop rbp ; ret
0x000000000040a8cd : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040d2bc : add rsp, 0x90 ; pop rbp ; ret
0x0000000000402a1f : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040e15b : add rsp, 0xb0 ; pop rbp ; ret
0x000000000040122d : add rsp, 8 ; ret
0x0000000000411b74 : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000403f21 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040f86a : and byte ptr [r15], cl ; xchg eax, esp ; ret 0x348b
0x0000000000403d46 : and byte ptr [rax - 0x7f], cl ; ret 1
0x000000000040f86b : and byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x0000000000414350 : and byte ptr [rsi - 1], dh ; call qword ptr [rdi]
0x000000000040d00e : and cl, 1 ; movzx eax, cl ; pop rbp ; ret
0x0000000000401677 : and dword ptr [rax], eax ; add ebx, esi ; ret
0x000000000040bf37 : and eax, 0x48ffffee ; add esp, 0x20 ; pop rbp ; ret
0x0000000000404b3f : and eax, 0x6152c8 ; pop rbp ; ret
0x0000000000404b63 : and eax, 0x6152d0 ; pop rbp ; ret
0x00000000004018e1 : call 0x401369
0x0000000000405124 : call 0x401412
0x0000000000413b68 : call 0xffffffffd0413b7f
0x000000000040a749 : call 0xffffffffe9033099
0x000000000040a748 : call 0xffffffffe903309a
0x0000000000412c09 : call qword ptr [r12 + rbx*8]
0x0000000000413a37 : call qword ptr [rax]
0x0000000000414353 : call qword ptr [rdi]
0x0000000000413ee3 : call qword ptr [rsi]
0x0000000000412c0a : call qword ptr [rsp + rbx*8]
0x000000000040169d : call rax
0x000000000041408b : call rbx
0x00000000004146eb : call rcx
0x00000000004135b0 : call rsi
0x000000000041460b : call rsp
0x0000000000410714 : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403ad2 : clc ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040163f : clc ; jne 0x401648 ; pop rbp ; ret
0x000000000040cfb8 : clc ; or rdx, rsi ; mov qword ptr [rax + rdi*8], rdx ; pop rbp ; ret
0x000000000040cfbf : clc ; pop rbp ; ret
0x0000000000402d05 : clc ; pop rbx ; pop rbp ; ret
0x0000000000412ba6 : cld ; mov dword ptr [rbp - 0xc], eax ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x00000000004127b6 : cli ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401676 : cmp al, 0x21 ; add byte ptr [rcx], al ; ret
0x0000000000404b3e : cmp al, 0x25 ; enter 0x6152, 0 ; pop rbp ; ret
0x000000000040fbf9 : cmp al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000402c8e : cmp al, ch ; lodsb al, byte ptr [rsi] ; ret
0x0000000000411c3e : cmp byte ptr [rax], ah ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x000000000041198e : cmp byte ptr [rax], dh ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000041207e : cmp byte ptr [rcx], ah ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000040e7dc : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x000000000040abdd : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004015fd : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401610 ; pop rbp ; ret
0x000000000040d2bb : cwde ; add rsp, 0x90 ; pop rbp ; ret
0x0000000000403082 : dec byte ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x0000000000406e6f : dec byte ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret
0x0000000000405304 : dec dword ptr [rax - 0x73] ; clc ; pop rbx ; pop rbp ; ret
0x00000000004018e5 : dec dword ptr [rax - 0x73] ; xor al, 0x25 ; ret
0x0000000000407215 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; nop ; xor byte ptr [rcx], al ; jmp rcx
0x000000000040d526 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004113d4 : dec dword ptr [rax - 0x7f] ; ret 1
0x0000000000401aa3 : dec dword ptr [rcx - 0x76b72bbb] ; in al, dx ; pop rbp ; ret
0x0000000000405a52 : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x0000000000405f98 : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret
0x000000000040511e : enter -0x2077, 0x48 ; mov esi, eax ; call 0x401418
0x000000000040a7fb : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000040c2ca : enter -0x7cb8, -0x3c ; pop rbp ; ret
0x0000000000404b40 : enter 0x6152, 0 ; pop rbp ; ret
0x000000000040621c : enter 1, 0 ; pop rbx ; pop rbp ; ret
0x0000000000406502 : fiadd dword ptr [rcx - 0xa] ; ret 0x4001
0x00000000004050a5 : fiadd dword ptr [rcx - 0xa] ; ret 0x4801
0x0000000000401962 : fiadd dword ptr [rcx - 0xa] ; ret 0x8801
0x000000000040d597 : fiadd dword ptr [rcx - 0xa] ; ret 0x8901
0x000000000040c999 : fiadd dword ptr [rcx - 0xa] ; ret 0xf01
0x0000000000402c64 : fild dword ptr [rcx - 0xa] ; ret
0x0000000000408e68 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000412c0c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000401879 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000412ba9 : hlt ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000401610 : hlt ; pop rbp ; mov edi, 0x615248 ; jmp rax
0x0000000000412acf : hlt ; pop rbp ; ret
0x0000000000413edc : in al, 1 ; add byte ptr [rax], al ; push rax ; or al, 0xffffffffffffffff ; call qword ptr [rsi]
0x00000000004146e4 : in al, dx ; or dword ptr [rax], eax ; add byte ptr [rax], bh ; test al, -1 ; call rcx
0x0000000000401aa9 : in al, dx ; pop rbp ; ret
0x000000000040eeb8 : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x000000000040b5fe : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000401e98 : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x00000000004061d7 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000040194c : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x000000000040be3a : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000407cdf : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x00000000004060fc : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x0000000000411a58 : inc dword ptr [rcx + 0x41f9] ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x000000000041244e : inc dword ptr [rcx + 0x5af9] ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x0000000000411b0e : inc dword ptr [rcx + 0x5af9] ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x0000000000413b1f : inc eax ; or al, byte ptr [rax] ; add byte ptr [rax], dh ; xchg bh, bh ; jmp rax
0x000000000040e118 : int 0x80
0x0000000000401603 : ja 0x40160a ; pop rbp ; ret
0x0000000000414351 : jbe 0x414354 ; call qword ptr [rdi]
0x000000000040160f : je 0x40160d ; pop rbp ; mov edi, 0x615248 ; jmp rax
0x000000000040466a : jge 0x40465e ; call rax
0x0000000000404860 : jge 0x404854 ; call rax
0x000000000040511d : jge 0x4050f0 ; mov edi, ebx ; mov rsi, rax ; call 0x401419
0x00000000004051d7 : jge 0x4051a2 ; mov edi, ebx ; mov rsi, rax ; call 0x401419
0x0000000000414499 : jle 0x41449c ; jmp qword ptr [rcx]
0x0000000000414498 : jle 0x41449d ; jmp qword ptr [rcx]
0x000000000040144b : jmp 0x401247
0x0000000000403684 : jmp 0x403b91
0x000000000040ae94 : jmp 0x40aea4
0x0000000000413b37 : jmp qword ptr [rax]
0x000000000041449b : jmp qword ptr [rcx]
0x0000000000401617 : jmp rax
0x000000000040721e : jmp rcx
0x0000000000401657 : jmp rdx
0x0000000000401640 : jne 0x401647 ; pop rbp ; ret
0x000000000040b844 : jo 0x40b8a5 ; ret
0x000000000040a4af : js 0x40a4b8 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040a8d0 : js 0x40a930 ; pop rbp ; ret
0x000000000040ada3 : lea eax, dword ptr [rip - 0x18000000] ; ret
0x0000000000403d88 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000405173 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000402d03 : lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000403d87 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000402d02 : lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000402c90 : lodsb al, byte ptr [rsi] ; ret
0x000000000040d00f : loope 0x40d018 ; movzx eax, cl ; pop rbp ; ret
0x000000000040ad0f : loopne 0x40ad60 ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040ad0e : loopne 0x40ad61 ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040efe5 : loopne 0x40f035 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040efe4 : loopne 0x40f036 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000414a51 : loopne 0x414a54 ; call rsp
0x000000000040e15e : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000404020 : mov al, 0 ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000411919 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004127b4 : mov al, byte ptr [rbp - 6] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000404b61 : mov byte ptr [0x6152d0], al ; pop rbp ; ret
0x0000000000403d0c : mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x0000000000404d68 : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret
0x000000000040924c : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x0000000000407a5e : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x0000000000403031 : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 0xa
0x000000000040aa36 : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 1
0x0000000000401673 : mov byte ptr [rip + 0x213c26], 1 ; ret
0x0000000000413bad : mov cl, -1 ; call qword ptr [rax]
0x000000000040d012 : mov dh, -0x3f ; pop rbp ; ret
0x0000000000404af6 : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004045c0 : mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000411b77 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000403f24 : mov dh, -0x40 ; pop rbp ; ret
0x0000000000413bdd : mov dh, -1 ; call rax
0x0000000000404b3d : mov dword ptr [0x6152c8], edi ; pop rbp ; ret
0x000000000040cfbd : mov dword ptr [rax + rdi*8], edx ; pop rbp ; ret
0x000000000040689a : mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004069e8 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000401aa4 : mov dword ptr [rbp - 0x2c], eax ; mov rsp, rbp ; pop rbp ; ret
0x0000000000401877 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000412ba7 : mov dword ptr [rbp - 0xc], eax ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x000000000040c2f8 : mov dword ptr [rdi + 8], 0 ; pop rbp ; ret
0x000000000040a8cc : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000402af7 : mov eax, 0xe9006152 ; ret
0x000000000040ea25 : mov eax, 0xf0658d48 ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040f611 : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004067c8 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040e551 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405044 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040f60e : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004067c5 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040b47a : mov eax, dword ptr [rbp - 0x10] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000404f33 : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000406b54 : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000040e45f : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040677d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406894 : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000404665 : mov eax, dword ptr [rbp - 0x18] ; mov rdi, qword ptr [rbp - 0x10] ; call rax
0x000000000040ba44 : mov eax, dword ptr [rbp - 0x18] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040efe3 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040ad0d : mov eax, dword ptr [rbp - 0x20] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040f428 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004069ea : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040fafb : mov eax, dword ptr [rbp - 0x30] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040c2c8 : mov eax, dword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040a8ca : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000412acd : mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000410712 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403ad0 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000402d00 : mov eax, dword ptr [rcx] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040169b : mov ebp, esp ; call rax
0x0000000000401601 : mov ebp, esp ; ja 0x40160c ; pop rbp ; ret
0x0000000000407217 : mov ecx, dword ptr [rax*8 + 0x413090] ; jmp rcx
0x0000000000407d31 : mov ecx, dword ptr [rax*8 + 0x4130d8] ; jmp rcx
0x000000000040d5e2 : mov ecx, dword ptr [rax*8 + 0x413598] ; jmp rcx
0x0000000000406897 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401695 : mov edi, 0x614e20 ; mov rbp, rsp ; call rax
0x0000000000401612 : mov edi, 0x615248 ; jmp rax
0x0000000000401652 : mov edi, 0x615248 ; jmp rdx
0x0000000000404669 : mov edi, dword ptr [rbp - 0x10] ; call rax
0x000000000040511f : mov edi, ebx ; mov rsi, rax ; call 0x401417
0x0000000000412c07 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000412c06 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000405122 : mov esi, eax ; call 0x401414
0x0000000000401650 : mov esi, eax ; mov edi, 0x615248 ; jmp rdx
0x0000000000401aa8 : mov esp, ebp ; pop rbp ; ret
0x0000000000404b3c : mov qword ptr [0x6152c8], rdi ; pop rbp ; ret
0x000000000040cfbc : mov qword ptr [rax + rdi*8], rdx ; pop rbp ; ret
0x000000000040c2f7 : mov qword ptr [rdi + 8], 0 ; pop rbp ; ret
0x000000000040a8cb : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x000000000040e550 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405043 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004067c4 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040b479 : mov rax, qword ptr [rbp - 0x10] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000404f32 : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040e45e : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040677c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404664 : mov rax, qword ptr [rbp - 0x18] ; mov rdi, qword ptr [rbp - 0x10] ; call rax
0x000000000040ba43 : mov rax, qword ptr [rbp - 0x18] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040efe2 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040c2c7 : mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000410711 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403acf : mov rax, qword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000402cff : mov rax, qword ptr [rcx] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040169a : mov rbp, rsp ; call rax
0x0000000000401600 : mov rbp, rsp ; ja 0x40160d ; pop rbp ; ret
0x0000000000407216 : mov rcx, qword ptr [rax*8 + 0x413090] ; jmp rcx
0x0000000000407d30 : mov rcx, qword ptr [rax*8 + 0x4130d8] ; jmp rcx
0x000000000040d5e1 : mov rcx, qword ptr [rax*8 + 0x413598] ; jmp rcx
0x0000000000404668 : mov rdi, qword ptr [rbp - 0x10] ; call rax
0x0000000000405121 : mov rsi, rax ; call 0x401415
0x000000000040164f : mov rsi, rax ; mov edi, 0x615248 ; jmp rdx
0x0000000000401aa7 : mov rsp, rbp ; pop rbp ; ret
0x0000000000404af5 : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004045bf : movzx eax, al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000411b76 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000403f23 : movzx eax, al ; pop rbp ; ret
0x000000000040d011 : movzx eax, cl ; pop rbp ; ret
0x0000000000414a50 : nop ; loopne 0x414a55 ; call rsp
0x000000000040721a : nop ; xor byte ptr [rcx], al ; jmp rcx
0x0000000000412c28 : nop dword ptr [rax + rax] ; ret
0x0000000000407218 : or al, 0xffffffffffffffc5 ; nop ; xor byte ptr [rcx], al ; jmp rcx
0x0000000000413ee1 : or al, 0xffffffffffffffff ; call qword ptr [rsi]
0x0000000000413b21 : or al, byte ptr [rax] ; add byte ptr [rax], dh ; xchg bh, bh ; jmp rax
0x000000000040aa99 : or byte ptr [r15], cl ; xchg eax, ebp ; ret 0x348b
0x0000000000408e63 : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000408e64 : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000403d42 : or byte ptr [rax - 0x75], cl ; push rcx ; and byte ptr [rax - 0x7f], cl ; ret 1
0x0000000000411c3c : or byte ptr [rcx + 0x2038], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x000000000041207c : or byte ptr [rcx + 0x2138], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000040df0d : or byte ptr [rcx + 0x28f9], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x000000000041198c : or byte ptr [rcx + 0x3038], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x0000000000411f7c : or byte ptr [rcx + 0x6138], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x0000000000410552 : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x000000000040aa9a : or byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x000000000040be0d : or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x000000000040beaf : or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x00000000004146e5 : or dword ptr [rax], eax ; add byte ptr [rax], bh ; test al, -1 ; call rcx
0x000000000040ecaf : or eax, 0x48fffff9 ; add esp, 0x30 ; pop rbp ; ret
0x0000000000406d1d : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040cfba : or edx, esi ; mov qword ptr [rax + rdi*8], rdx ; pop rbp ; ret
0x000000000040cfb9 : or rdx, rsi ; mov qword ptr [rax + rdi*8], rdx ; pop rbp ; ret
0x0000000000405b94 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000412c1c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405b96 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000412c1e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405177 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000412c20 : pop r14 ; pop r15 ; ret
0x0000000000403d8c : pop r14 ; pop rbp ; ret
0x0000000000405179 : pop r15 ; pop rbp ; ret
0x0000000000412c22 : pop r15 ; ret
0x0000000000401672 : pop rbp ; mov byte ptr [rip + 0x213c26], 1 ; ret
0x0000000000401611 : pop rbp ; mov edi, 0x615248 ; jmp rax
0x000000000040164e : pop rbp ; mov rsi, rax ; mov edi, 0x615248 ; jmp rdx
0x0000000000412c1b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405b97 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000412c1f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401605 : pop rbp ; ret
0x0000000000405176 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403d8b : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000402d06 : pop rbx ; pop rbp ; ret
0x000000000040517a : pop rdi ; pop rbp ; ret
0x0000000000412c23 : pop rdi ; ret
0x0000000000412451 : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x0000000000411b11 : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x0000000000405178 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000412c21 : pop rsi ; pop r15 ; ret
0x0000000000403d8d : pop rsi ; pop rbp ; ret
0x0000000000405b95 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000412c1d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000411994 : popfq ; ret 0x348b
0x0000000000411a60 : popfq ; ret 0xc8b
0x0000000000413a1f : push qword ptr [rax + 0x70000006] ; sub edi, edi ; call rax
0x0000000000413bd7 : push qword ptr [rax - 0xffffff3] ; mov dh, -1 ; call rax
0x0000000000411663 : push rax ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000413ee0 : push rax ; or al, 0xffffffffffffffff ; call qword ptr [rsi]
0x0000000000403ad6 : push rax ; pop rbp ; ret
0x0000000000413b34 : push rax ; xchg edi, edi ; jmp qword ptr [rax]
0x0000000000408e67 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000401694 : push rbp ; mov edi, 0x614e20 ; mov rbp, rsp ; call rax
0x000000000040a7fe : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000403d45 : push rcx ; and byte ptr [rax - 0x7f], cl ; ret 1
0x0000000000403575 : push rcx ; sbb byte ptr [rcx], al ; ret 0x5189
0x0000000000403d0b : pushfq ; mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x000000000040195e : pushfq ; ret
0x0000000000407cf0 : pushfq ; ret 0x844
0x0000000000403089 : pushfq ; ret 0x845
0x0000000000405469 : pushfq ; ret 0xd108
0x0000000000401231 : ret
0x000000000040c818 : ret 0
0x00000000004016ea : ret 0x125
0x0000000000409255 : ret 0x13
0x0000000000401452 : ret 0x213c
0x0000000000401242 : ret 0x213d
0x0000000000407a67 : ret 0x2a
0x0000000000407b48 : ret 0x348b
0x0000000000406505 : ret 0x4001
0x000000000040ae9a : ret 0x42
0x00000000004050a8 : ret 0x4801
0x0000000000403c9f : ret 0x48f0
0x000000000040bb87 : ret 0x4cc0
0x000000000040cdfb : ret 0x4ce0
0x0000000000406e0a : ret 0x4cf0
0x0000000000403578 : ret 0x5189
0x0000000000412457 : ret 0x5588
0x000000000040be10 : ret 0x7ae8
0x00000000004101d5 : ret 0x8041
0x0000000000401954 : ret 0x8141
0x0000000000407cf1 : ret 0x844
0x000000000040308a : ret 0x845
0x0000000000403566 : ret 0x850f
0x0000000000401965 : ret 0x8801
0x0000000000407cf6 : ret 0x8901
0x000000000040eb65 : ret 0x8948
0x00000000004091dc : ret 0x89a5
0x000000000040e7e3 : ret 0x8b44
0x0000000000402756 : ret 0x8b48
0x000000000040303a : ret 0xa
0x0000000000401e9f : ret 0xa3d
0x0000000000410ade : ret 0xb
0x0000000000402220 : ret 0xb0
0x0000000000408e80 : ret 0xbae8
0x0000000000401635 : ret 0xc148
0x0000000000401eab : ret 0xc2f6
0x000000000040381a : ret 0xc8b
0x000000000040546a : ret 0xd108
0x000000000040c22c : ret 0xd284
0x000000000040beb2 : ret 0xd8e8
0x0000000000401db8 : ret 0xe280
0x00000000004016e1 : ret 0xea81
0x000000000040a74c : ret 0xee8
0x0000000000406111 : ret 0xf01
0x00000000004038da : ret 0xf40
0x000000000040cc8d : ret 0xf981
0x00000000004055e2 : ret 0xfe81
0x0000000000405126 : ret 0xffff
0x0000000000403d49 : ret 1
0x000000000040368a : ret 2
0x000000000040a802 : ret 8
0x000000000040d00d : rol dword ptr [rax - 0x49f0fe1f], -0x3f ; pop rbp ; ret
0x000000000040e113 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000040163c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40164b ; pop rbp ; ret
0x0000000000411b78 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x000000000040e114 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x000000000040a7ff : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000413b20 : ror byte ptr [rdx], 0 ; add byte ptr [rax], dh ; xchg bh, bh ; jmp rax
0x0000000000412456 : sahf ; ret 0x5588
0x0000000000411b16 : sahf ; ret 0xc8b
0x0000000000407cf4 : sal dh, cl ; ret 0x8901
0x000000000040163e : sar eax, 1 ; jne 0x401649 ; pop rbp ; ret
0x000000000040163d : sar rax, 1 ; jne 0x40164a ; pop rbp ; ret
0x0000000000403576 : sbb byte ptr [rcx], al ; ret 0x5189
0x0000000000406f90 : sbb cl, byte ptr [rcx - 0x7f] ; ret
0x000000000040f7c7 : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000403cf3 : scasd eax, dword ptr [rdi] ; ret
0x00000000004016e9 : scasd eax, dword ptr [rdi] ; ret 0x125
0x0000000000402c44 : scasd eax, dword ptr [rdi] ; ret 0x8141
0x0000000000411a5a : stc ; add byte ptr [r8], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x0000000000412450 : stc ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x0000000000411b10 : stc ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x000000000041191b : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000413a25 : sub edi, edi ; call rax
0x0000000000412c5d : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000412c5c : sub rsp, 8 ; add rsp, 8 ; ret
0x00000000004146e9 : test al, -1 ; call rcx
0x0000000000412c2a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000404d6b : test dword ptr [rip - 0x17000000], eax ; ret
0x000000000040924f : test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x0000000000407a61 : test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x0000000000403034 : test dword ptr [rip - 0x17000000], eax ; ret 0xa
0x0000000000410ad8 : test dword ptr [rip - 0x17000000], eax ; ret 0xb
0x0000000000408b4c : test dword ptr [rip - 0x17000000], eax ; ret 1
0x000000000040ee03 : test eax, 0x48fffffc ; add esp, 0x10 ; pop rbp ; ret
0x0000000000413b25 : xchg bh, bh ; jmp rax
0x000000000040aa9c : xchg eax, ebp ; ret 0x348b
0x00000000004101d4 : xchg eax, ebp ; ret 0x8041
0x000000000040e7e2 : xchg eax, ebp ; ret 0x8b44
0x000000000041055a : xchg eax, ebp ; ret 0xc8b
0x000000000040d00c : xchg eax, ebp ; rol dword ptr [rax - 0x49f0fe1f], -0x3f ; pop rbp ; ret
0x0000000000407b47 : xchg eax, esi ; ret 0x348b
0x0000000000402c56 : xchg eax, esp ; ret
0x000000000040f86d : xchg eax, esp ; ret 0x348b
0x0000000000401953 : xchg eax, esp ; ret 0x8141
0x0000000000401e9e : xchg eax, esp ; ret 0xa3d
0x0000000000403819 : xchg eax, esp ; ret 0xc8b
0x000000000040c22b : xchg eax, esp ; ret 0xd284
0x0000000000401db7 : xchg eax, esp ; ret 0xe280
0x000000000040cc8c : xchg eax, esp ; ret 0xf981
0x00000000004055e1 : xchg eax, esp ; ret 0xfe81
0x0000000000413b35 : xchg edi, edi ; jmp qword ptr [rax]
0x00000000004018e8 : xor al, 0x25 ; ret
0x000000000040e344 : xor bh, bh ; dec dword ptr [rax - 0x73] ; xor al, 0x25 ; ret
0x000000000040be07 : xor byte ptr [rax - 0x75], cl ; add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x000000000040bea9 : xor byte ptr [rax - 0x75], cl ; add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x000000000040721b : xor byte ptr [rcx], al ; jmp rcx
0x00000000004069e6 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
