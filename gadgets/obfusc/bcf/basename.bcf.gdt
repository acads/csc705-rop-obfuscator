0x000000000040363d : adc ah, byte ptr [rcx] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000401504 : adc ah, byte ptr [rcx] ; jmp rax
0x0000000000401544 : adc ah, byte ptr [rcx] ; jmp rdx
0x00000000004028a1 : adc ah, byte ptr [rcx] ; pop rbp ; ret
0x0000000000407f52 : adc al, 0x61 ; add byte ptr [rbp - 0x77], al ; ret 0x8141
0x0000000000409300 : adc al, 0x61 ; add byte ptr [rcx - 0x77], al ; ret
0x0000000000403d70 : adc al, 0x61 ; add byte ptr [rcx - 0x77], al ; ret 0x8141
0x0000000000401787 : adc byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x40f0
0x000000000041062f : add al, ah ; test al, -1 ; call rcx
0x000000000040fd23 : add al, dh ; ret 0xffff
0x000000000040fd3b : add al, dl ; fdivr st(7) ; jmp rax
0x000000000040ec5f : add bl, dh ; ret
0x000000000040da8b : add byte ptr [r8], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x000000000040a100 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000401aa1 : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000040ec5d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000401a9f : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000040ec5b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004003f8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400428 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000004003fa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040042a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000040eaf9 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x00000000004003fc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040042c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000407f5c : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x8141
0x0000000000408288 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004018c9 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret
0x0000000000404ceb : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x844
0x0000000000401635 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x000000000040930a : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x0000000000403d7a : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x125
0x000000000040b85f : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x0000000000403d88 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x00000000004018be : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x0000000000408228 : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x51], al ; ret
0x000000000040d9c0 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000040da8c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x0000000000403d93 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret
0x0000000000408c36 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x000000000040e482 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x000000000040db42 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x000000000040b8cc : add byte ptr [rax], al ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret
0x00000000004015bb : add byte ptr [rax], al ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x125
0x0000000000401600 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x000000000040a7ce : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x000000000040bbe6 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x0000000000403204 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000409f01 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x0000000000402b23 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040dc70 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x0000000000404ce1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x0000000000409227 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000402b41 : add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000406251 : add byte ptr [rax], al ; add cl, ch ; ret 0x13
0x0000000000404a63 : add byte ptr [rax], al ; add cl, ch ; ret 0x2a
0x000000000040c16a : add byte ptr [rax], al ; add cl, ch ; ret 0xb
0x00000000004018dd : add byte ptr [rax], al ; add cl, ch ; ret 1
0x0000000000402a3f : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403d1f : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040114b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000040fd7a : add byte ptr [rax], al ; and ah, 0xff ; jmp rax
0x000000000040ff32 : add byte ptr [rax], al ; and al, 1 ; add byte ptr [rax], al ; pop rax ; sub edi, edi ; call qword ptr [rsi]
0x000000000040fd8a : add byte ptr [rax], al ; and dh, 0xff ; jmp qword ptr [rax]
0x0000000000401329 : add byte ptr [rax], al ; jmp 0x401169
0x0000000000403b52 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000040eafb : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x00000000004037c2 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000401aa0 : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004109b6 : add byte ptr [rax], al ; pop rax ; loope 0x4109bf ; call rsp
0x000000000040ff36 : add byte ptr [rax], al ; pop rax ; sub edi, edi ; call qword ptr [rsi]
0x000000000040a150 : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000408289 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040ccf5 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004074b1 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040fd4a : add byte ptr [rax], al ; rcr ch, -1 ; jmp qword ptr [rax]
0x00000000004003fe : add byte ptr [rax], al ; ret
0x000000000040042e : add byte ptr [rax], al ; ret 0
0x000000000041033f : add byte ptr [rax], dh ; xchg bh, bh ; call qword ptr [rdi]
0x0000000000407f5e : add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x8141
0x0000000000407f54 : add byte ptr [rbp - 0x77], al ; ret 0x8141
0x000000000040828a : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040ccf6 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x00000000004074b2 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000402b2f : add byte ptr [rcx + 0xf], al ; pushfq ; mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x00000000004018cb : add byte ptr [rcx + 0xf], al ; pushfq ; ret
0x0000000000404ced : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x844
0x0000000000401637 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x000000000040930c : add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x0000000000403d7c : add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x125
0x000000000040b861 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x0000000000403d8a : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x00000000004018c0 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x00000000004085fc : add byte ptr [rcx + 0xfe], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000408e38 : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000404cdd : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x000000000040ff33 : add byte ptr [rcx + rax], ah ; add byte ptr [rax], al ; pop rax ; sub edi, edi ; call qword ptr [rsi]
0x0000000000409302 : add byte ptr [rcx - 0x77], al ; ret
0x0000000000403d72 : add byte ptr [rcx - 0x77], al ; ret 0x8141
0x0000000000401568 : add byte ptr [rcx], al ; ret
0x000000000040822a : add byte ptr [rdi + rcx - 0x51], al ; ret
0x000000000040d9c2 : add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000040da8e : add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x0000000000403d95 : add byte ptr [rdi], cl ; pushfq ; ret
0x0000000000408c38 : add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x000000000040e484 : add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x000000000040db44 : add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x000000000040b8ce : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret
0x00000000004015bd : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x125
0x0000000000401602 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x000000000040a7d0 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x000000000040bbe8 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x0000000000403206 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000409f03 : add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x0000000000402b25 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040dc72 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x0000000000404ce3 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x0000000000409229 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040fd88 : add byte ptr [rsi], cl ; add byte ptr [rax], al ; and dh, 0xff ; jmp qword ptr [rax]
0x0000000000402b43 : add cl, ch ; ret
0x0000000000406253 : add cl, ch ; ret 0x13
0x0000000000404a65 : add cl, ch ; ret 0x2a
0x000000000040c16c : add cl, ch ; ret 0xb
0x00000000004018df : add cl, ch ; ret 1
0x0000000000408e0a : add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x0000000000408eac : add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x000000000040ccf4 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x00000000004074b0 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000403269 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040dba5 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000040d94d : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000402de9 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret
0x000000000040624d : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x0000000000404a5f : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x000000000040c166 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0xb
0x0000000000405b4a : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 1
0x0000000000401564 : add eax, 0x20fd2e ; add ebx, esi ; ret
0x0000000000402b40 : add eax, 0xe9000000 ; ret
0x0000000000406250 : add eax, 0xe9000000 ; ret 0x13
0x0000000000404a62 : add eax, 0xe9000000 ; ret 0x2a
0x000000000040c169 : add eax, 0xe9000000 ; ret 0xb
0x00000000004018dc : add eax, 0xe9000000 ; ret 1
0x000000000040152b : add eax, edx ; sar rax, 1 ; jne 0x40153c ; pop rbp ; ret
0x0000000000401569 : add ebx, esi ; ret
0x00000000004017bb : add esp, 0x10 ; pop rbp ; ret
0x00000000004074ad : add esp, 0x178 ; pop rbx ; pop rbp ; ret
0x000000000040a2ec : add esp, 0x1a0 ; pop rbp ; ret
0x00000000004030c8 : add esp, 0x20 ; pop rbp ; ret
0x0000000000403781 : add esp, 0x30 ; pop rbp ; ret
0x000000000040326e : add esp, 0x40 ; pop rbp ; ret
0x0000000000409e2f : add esp, 0x40 ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040851c : add esp, 0x50 ; pop rbp ; ret
0x0000000000408842 : add esp, 0x70 ; pop rbp ; ret
0x00000000004078ce : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040a14c : add esp, 0xb0 ; pop rbp ; ret
0x000000000040114e : add esp, 8 ; ret
0x000000000040152a : add rax, rdx ; sar rax, 1 ; jne 0x40153d ; pop rbp ; ret
0x00000000004017ba : add rsp, 0x10 ; pop rbp ; ret
0x00000000004074ac : add rsp, 0x178 ; pop rbx ; pop rbp ; ret
0x000000000040a2eb : add rsp, 0x1a0 ; pop rbp ; ret
0x00000000004030c7 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000403780 : add rsp, 0x30 ; pop rbp ; ret
0x000000000040326d : add rsp, 0x40 ; pop rbp ; ret
0x0000000000409e2e : add rsp, 0x40 ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040851b : add rsp, 0x50 ; pop rbp ; ret
0x0000000000408841 : add rsp, 0x70 ; pop rbp ; ret
0x00000000004078cd : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040a14b : add rsp, 0xb0 ; pop rbp ; ret
0x000000000040114d : add rsp, 8 ; ret
0x000000000040fd7c : and ah, 0xff ; jmp rax
0x000000000040ff34 : and al, 1 ; add byte ptr [rax], al ; pop rax ; sub edi, edi ; call qword ptr [rsi]
0x000000000040dba4 : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040d94c : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040fef9 : and bh, bh ; jmp rbx
0x000000000040d5ba : and byte ptr [r15], cl ; xchg eax, esp ; ret 0x348b
0x0000000000401567 : and byte ptr [rax], al ; add ebx, esi ; ret
0x000000000040d5bb : and byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x000000000040fd8c : and dh, 0xff ; jmp qword ptr [rax]
0x0000000000408f37 : and eax, 0x48ffffee ; add esp, 0x20 ; pop rbp ; ret
0x000000000040289f : and eax, 0x6112a0 ; pop rbp ; ret
0x00000000004028c3 : and eax, 0x6112a8 ; pop rbp ; ret
0x0000000000401149 : and eax, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000040c6e3 : call 0x4013e9
0x0000000000407749 : call 0xffffffffe9030099
0x0000000000407748 : call 0xffffffffe903009a
0x000000000040ec39 : call qword ptr [r12 + rbx*8]
0x000000000040fc4f : call qword ptr [rax]
0x0000000000410343 : call qword ptr [rdi]
0x000000000040ff3b : call qword ptr [rsi]
0x000000000040ec3a : call qword ptr [rsp + rbx*8]
0x000000000040158d : call rax
0x000000000041007b : call rbx
0x0000000000410633 : call rcx
0x0000000000410553 : call rsp
0x000000000040bda4 : clc ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040152f : clc ; jne 0x401538 ; pop rbp ; ret
0x0000000000407d13 : clc ; pop rbx ; pop rbp ; ret
0x00000000004017e7 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040ebd6 : cld ; mov dword ptr [rbp - 0xc], eax ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x000000000040e7e6 : cli ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040178a : cmp al, 0x25 ; ret 0x40f0
0x000000000040b289 : cmp al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040dc6e : cmp byte ptr [rax], ah ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x00000000004015fe : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x000000000040d9be : cmp byte ptr [rax], dh ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000040e0ae : cmp byte ptr [rcx], ah ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000040a7cc : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x0000000000407bdd : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004014ed : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401500 ; pop rbp ; ret
0x0000000000403247 : dec byte ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x0000000000403e6f : dec byte ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret
0x000000000040c6e7 : dec dword ptr [rax - 0x73] ; xor al, 0x25 ; ret
0x0000000000409516 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040ca64 : dec dword ptr [rax - 0x7f] ; ret 1
0x0000000000401633 : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x00000000004077fb : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x00000000004092ca : enter -0x7cb8, -0x3c ; pop rbp ; ret
0x000000000040fd3d : fdivr st(7) ; jmp rax
0x000000000040261c : fiadd dword ptr [rcx - 0xa] ; ret 0x4001
0x0000000000402042 : fiadd dword ptr [rcx - 0xa] ; ret 0x4801
0x00000000004018d2 : fiadd dword ptr [rcx - 0xa] ; ret 0x8801
0x0000000000409587 : fiadd dword ptr [rcx - 0xa] ; ret 0x8901
0x000000000040aebe : fiadd dword ptr [rcx - 0xa] ; ret 0xf01
0x0000000000403d9b : fild dword ptr [rcx - 0xa] ; ret
0x0000000000405e68 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040ec3c : fmul qword ptr [rax - 0x7d] ; ret
0x00000000004017b9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040ebd9 : hlt ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000401500 : hlt ; pop rbp ; mov edi, 0x611230 ; jmp rax
0x000000000040eaff : hlt ; pop rbp ; ret
0x000000000040fd7d : in al, -1 ; jmp rax
0x0000000000401786 : in al, dx ; adc byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x40f0
0x0000000000401aa4 : in al, dx ; pop rbp ; ret
0x000000000040aea8 : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x00000000004085fe : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000407ce3 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x00000000004018bc : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x0000000000408e3a : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000404cdf : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x000000000040da88 : inc dword ptr [rcx + 0x41f9] ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x000000000040e47e : inc dword ptr [rcx + 0x5af9] ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x000000000040db3e : inc dword ptr [rcx + 0x5af9] ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x000000000040fd37 : inc eax ; or al, 0 ; add al, dl ; fdivr st(7) ; jmp rax
0x000000000040a108 : int 0x80
0x00000000004014f3 : ja 0x4014fa ; pop rbp ; ret
0x00000000004014ff : je 0x4014fd ; pop rbp ; mov edi, 0x611230 ; jmp rax
0x000000000040132b : jmp 0x401167
0x000000000040fb17 : jmp qword ptr [rax]
0x000000000040ff1b : jmp qword ptr [rdi]
0x0000000000401507 : jmp rax
0x000000000040fefb : jmp rbx
0x000000000040421e : jmp rcx
0x0000000000401547 : jmp rdx
0x0000000000401530 : jne 0x401537 ; pop rbp ; ret
0x0000000000408844 : jo 0x4088a5 ; ret
0x00000000004074af : js 0x4074b8 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004078d0 : js 0x407930 ; pop rbp ; ret
0x0000000000402d04 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040239c : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000407d11 : lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000402d03 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000407d10 : lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x00000000004109b9 : loope 0x4109bc ; call rsp
0x0000000000407d0f : loopne 0x407d60 ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000407d0e : loopne 0x407d61 ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040afd5 : loopne 0x40b025 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040afd4 : loopne 0x40b026 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040a14e : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000402d02 : mov al, 0x48 ; lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040d949 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040e7e4 : mov al, byte ptr [rbp - 6] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004028c1 : mov byte ptr [0x6112a8], al ; pop rbp ; ret
0x0000000000402b33 : mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x0000000000402de8 : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret
0x000000000040624c : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x0000000000404a5e : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x0000000000407a36 : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 1
0x0000000000401563 : mov byte ptr [rip + 0x20fd2e], 1 ; ret
0x000000000040326b : mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040dba7 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000040d94f : mov dh, -0x40 ; pop rbp ; ret
0x000000000040289d : mov dword ptr [0x6112a0], edi ; pop rbp ; ret
0x000000000040389a : mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004039e8 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004017b7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040ebd7 : mov dword ptr [rbp - 0xc], eax ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x00000000004017e5 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004078cc : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x000000000040aa15 : mov eax, 0xf0658d48 ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040d361 : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004037c8 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040a541 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004030c4 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d35e : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004037c5 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040847a : mov eax, dword ptr [rbp - 0x10] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000402fb3 : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000403b54 : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000040a44f : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040377d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403894 : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000408a44 : mov eax, dword ptr [rbp - 0x18] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040afd3 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407d0d : mov eax, dword ptr [rbp - 0x20] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040d178 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004039ea : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040b792 : mov eax, dword ptr [rbp - 0x30] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004092c8 : mov eax, dword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004078ca : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040eafd : mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x000000000040bda2 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040158b : mov ebp, esp ; call rax
0x00000000004014f1 : mov ebp, esp ; ja 0x4014fc ; pop rbp ; ret
0x0000000000404217 : mov ecx, dword ptr [rax*8 + 0x40f210] ; jmp rcx
0x0000000000404d31 : mov ecx, dword ptr [rax*8 + 0x40f258] ; jmp rcx
0x00000000004095d2 : mov ecx, dword ptr [rax*8 + 0x40f718] ; jmp rcx
0x0000000000403897 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401585 : mov edi, 0x610e20 ; mov rbp, rsp ; call rax
0x0000000000401502 : mov edi, 0x611230 ; jmp rax
0x0000000000401542 : mov edi, 0x611230 ; jmp rdx
0x000000000040ec37 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000040ec36 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000401540 : mov esi, eax ; mov edi, 0x611230 ; jmp rdx
0x0000000000401aa3 : mov esp, ebp ; pop rbp ; ret
0x000000000040289c : mov qword ptr [0x6112a0], rdi ; pop rbp ; ret
0x00000000004078cb : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x000000000040a540 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004030c3 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004037c4 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000408479 : mov rax, qword ptr [rbp - 0x10] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000402fb2 : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040a44e : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040377c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000408a43 : mov rax, qword ptr [rbp - 0x18] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040afd2 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004092c7 : mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040bda1 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040158a : mov rbp, rsp ; call rax
0x00000000004014f0 : mov rbp, rsp ; ja 0x4014fd ; pop rbp ; ret
0x0000000000404216 : mov rcx, qword ptr [rax*8 + 0x40f210] ; jmp rcx
0x0000000000404d30 : mov rcx, qword ptr [rax*8 + 0x40f258] ; jmp rcx
0x00000000004095d1 : mov rcx, qword ptr [rax*8 + 0x40f718] ; jmp rcx
0x000000000040153f : mov rsi, rax ; mov edi, 0x611230 ; jmp rdx
0x0000000000401aa2 : mov rsp, rbp ; pop rbp ; ret
0x000000000040326a : movzx eax, al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040dba6 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040d94e : movzx eax, al ; pop rbp ; ret
0x000000000040ec58 : nop dword ptr [rax + rax] ; ret
0x000000000040fd21 : or al, 0 ; add al, dh ; ret 0xffff
0x000000000040fd39 : or al, 0 ; add al, dl ; fdivr st(7) ; jmp rax
0x0000000000407a99 : or byte ptr [r15], cl ; xchg eax, ebp ; ret 0x348b
0x0000000000405e63 : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000405e64 : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000041062d : or byte ptr [rax], al ; add al, ah ; test al, -1 ; call rcx
0x000000000040dc6c : or byte ptr [rcx + 0x2038], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x000000000040e0ac : or byte ptr [rcx + 0x2138], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x0000000000409efd : or byte ptr [rcx + 0x28f9], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x000000000040d9bc : or byte ptr [rcx + 0x3038], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x00000000004015fc : or byte ptr [rcx + 0x38], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x000000000040dfac : or byte ptr [rcx + 0x6138], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000040bbe2 : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x0000000000403200 : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000407a9a : or byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x0000000000408e0d : or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x0000000000408eaf : or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x000000000040ac9f : or eax, 0x48fffff9 ; add esp, 0x30 ; pop rbp ; ret
0x0000000000403d1d : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040fd8d : out -1, al ; jmp qword ptr [rax]
0x0000000000404054 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040ec4c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000404056 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040ec4e : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004023a0 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040ec50 : pop r14 ; pop r15 ; ret
0x0000000000402d08 : pop r14 ; pop rbp ; ret
0x00000000004023a2 : pop r15 ; pop rbp ; ret
0x000000000040ec52 : pop r15 ; ret
0x00000000004109b8 : pop rax ; loope 0x4109bd ; call rsp
0x000000000040ff38 : pop rax ; sub edi, edi ; call qword ptr [rsi]
0x0000000000401562 : pop rbp ; mov byte ptr [rip + 0x20fd2e], 1 ; ret
0x0000000000401501 : pop rbp ; mov edi, 0x611230 ; jmp rax
0x000000000040153e : pop rbp ; mov rsi, rax ; mov edi, 0x611230 ; jmp rdx
0x000000000040ec4b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000404057 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040ec4f : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004014f5 : pop rbp ; ret
0x000000000040239f : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000402d07 : pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004074b3 : pop rbx ; pop rbp ; ret
0x00000000004023a3 : pop rdi ; pop rbp ; ret
0x000000000040ec53 : pop rdi ; ret
0x000000000040e481 : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x000000000040db41 : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x00000000004023a1 : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040ec51 : pop rsi ; pop r15 ; ret
0x0000000000402d09 : pop rsi ; pop rbp ; ret
0x0000000000404055 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040ec4d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040d9c4 : popfq ; ret 0x348b
0x000000000040da90 : popfq ; ret 0xc8b
0x000000000040ccf3 : push rax ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040851e : push rax ; pop rbp ; ret
0x0000000000405e67 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000401584 : push rbp ; mov edi, 0x610e20 ; mov rbp, rsp ; call rax
0x00000000004077fe : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000402b32 : pushfq ; mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x00000000004018ce : pushfq ; ret
0x0000000000404cf0 : pushfq ; ret 0x844
0x000000000040163a : pushfq ; ret 0x845
0x0000000000408c3a : pushfq ; ret 0xd108
0x000000000040fd4c : rcr ch, -1 ; jmp qword ptr [rax]
0x0000000000400400 : ret
0x0000000000400430 : ret 0
0x00000000004015c0 : ret 0x125
0x0000000000406255 : ret 0x13
0x0000000000401332 : ret 0x20fd
0x0000000000404a67 : ret 0x2a
0x0000000000401605 : ret 0x348b
0x000000000040261f : ret 0x4001
0x000000000040178c : ret 0x40f0
0x0000000000402045 : ret 0x4801
0x00000000004021eb : ret 0x48f0
0x0000000000405e80 : ret 0x4ae8
0x0000000000408b87 : ret 0x4cc0
0x0000000000403e0a : ret 0x4cf0
0x000000000040e487 : ret 0x5588
0x0000000000408e10 : ret 0x7ae8
0x000000000040b865 : ret 0x8041
0x00000000004018c4 : ret 0x8141
0x0000000000404cf1 : ret 0x844
0x000000000040163b : ret 0x845
0x00000000004018d5 : ret 0x8801
0x0000000000404cf6 : ret 0x8901
0x000000000040ab55 : ret 0x8948
0x00000000004061dc : ret 0x89a5
0x000000000040a7d3 : ret 0x8b44
0x0000000000405e6b : ret 0x8b48
0x000000000040c16e : ret 0xb
0x0000000000401db7 : ret 0xb0
0x0000000000401525 : ret 0xc148
0x000000000040bbeb : ret 0xc8b
0x0000000000408c3b : ret 0xd108
0x000000000040922c : ret 0xd284
0x0000000000408eb2 : ret 0xd8e8
0x0000000000403209 : ret 0xe280
0x00000000004015b7 : ret 0xea81
0x000000000040774c : ret 0xee8
0x000000000040aec1 : ret 0xf01
0x0000000000402706 : ret 0xffff
0x00000000004018e1 : ret 1
0x0000000000401ffc : ret 2
0x0000000000407802 : ret 8
0x000000000040fb80 : rol byte ptr [rip + 0x3f300000], -1 ; jmp rax
0x000000000040a103 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000040152c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40153b ; pop rbp ; ret
0x000000000040dba8 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x000000000040a104 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x000000000040326c : ror byte ptr [rax - 0x7d], -0x3c ; pop rbp ; ret
0x00000000004077ff : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000040fd78 : ror byte ptr [rip - 0x1b800000], -1 ; jmp rax
0x000000000040e486 : sahf ; ret 0x5588
0x000000000040db46 : sahf ; ret 0xc8b
0x0000000000404cf4 : sal dh, cl ; ret 0x8901
0x000000000040152e : sar eax, 1 ; jne 0x401539 ; pop rbp ; ret
0x000000000040152d : sar rax, 1 ; jne 0x40153a ; pop rbp ; ret
0x0000000000403f90 : sbb cl, byte ptr [rcx - 0x7f] ; ret
0x000000000040d517 : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040822d : scasd eax, dword ptr [rdi] ; ret
0x00000000004015bf : scasd eax, dword ptr [rdi] ; ret 0x125
0x0000000000407f61 : scasd eax, dword ptr [rdi] ; ret 0x8141
0x000000000040da8a : stc ; add byte ptr [r8], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x000000000040e480 : stc ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x000000000040db40 : stc ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x0000000000401566 : std ; and byte ptr [rax], al ; add ebx, esi ; ret
0x000000000040d94b : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040ff39 : sub edi, edi ; call qword ptr [rsi]
0x000000000040ec8d : sub esp, 8 ; add rsp, 8 ; ret
0x000000000040ec8c : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000410631 : test al, -1 ; call rcx
0x000000000040ec5a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000402b3f : test dword ptr [rip - 0x17000000], eax ; ret
0x000000000040624f : test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x0000000000404a61 : test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x000000000040c168 : test dword ptr [rip - 0x17000000], eax ; ret 0xb
0x00000000004018db : test dword ptr [rip - 0x17000000], eax ; ret 1
0x000000000040adf3 : test eax, 0x48fffffc ; add esp, 0x10 ; pop rbp ; ret
0x0000000000410341 : xchg bh, bh ; call qword ptr [rdi]
0x0000000000401604 : xchg eax, ebp ; ret 0x348b
0x000000000040b864 : xchg eax, ebp ; ret 0x8041
0x000000000040a7d2 : xchg eax, ebp ; ret 0x8b44
0x000000000040bbea : xchg eax, ebp ; ret 0xc8b
0x0000000000403208 : xchg eax, ebp ; ret 0xe280
0x0000000000404b47 : xchg eax, esi ; ret 0x348b
0x0000000000402b27 : xchg eax, esp ; ret
0x000000000040d5bd : xchg eax, esp ; ret 0x348b
0x00000000004018c3 : xchg eax, esp ; ret 0x8141
0x000000000040922b : xchg eax, esp ; ret 0xd284
0x000000000040c6ea : xor al, 0x25 ; ret
0x000000000040fb45 : xor bh, bh ; jmp rax
0x0000000000408e07 : xor byte ptr [rax - 0x75], cl ; add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x0000000000408ea9 : xor byte ptr [rax - 0x75], cl ; add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x00000000004039e6 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
