0x0000000000429809 : adc al, -2 ; call rcx
0x000000000042a79d : adc al, 0 ; add byte ptr [rax], dl ; mov bh, -1 ; call rax
0x000000000042960c : adc al, 3 ; add byte ptr [rax], al ; adc al, dh ; std ; call qword ptr [rdx]
0x000000000042a5dd : adc al, byte ptr [rax] ; add al, ah ; xchg edi, edi ; jmp qword ptr [rcx]
0x00000000004295d0 : adc al, dh ; std ; call qword ptr [rdx]
0x0000000000428e0d : adc bh, dh ; jmp qword ptr [rax]
0x000000000042a315 : adc byte ptr [rax], al ; add al, bh ; sbb bh, bh ; jmp qword ptr [rdi]
0x0000000000423af0 : adc byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000406379 : adc byte ptr [rax], al ; add byte ptr [rdi], cl ; lahf ; ret 0x348b
0x0000000000428ff1 : adc dword ptr [rax], eax ; add al, ah ; loope 0x428ffb ; jmp rax
0x000000000042a5db : add ah, ah ; adc al, byte ptr [rax] ; add al, ah ; xchg edi, edi ; jmp qword ptr [rcx]
0x000000000042a2f3 : add ah, bh ; sldt word ptr [rax] ; call 0x2842a21d
0x00000000004294eb : add ah, dh ; add dword ptr [rax], eax ; add al, dl ; out -3, eax ; call qword ptr [rsi]
0x0000000000428ff3 : add al, ah ; loope 0x428ff9 ; jmp rax
0x000000000042a5df : add al, ah ; xchg edi, edi ; jmp qword ptr [rcx]
0x0000000000428d53 : add al, al ; stosb byte ptr [rdi], al ; std ; jmp qword ptr [rax]
0x000000000042a317 : add al, bh ; sbb bh, bh ; jmp qword ptr [rdi]
0x000000000042aa37 : add al, bl ; sar bh, 1 ; call qword ptr [rax]
0x000000000042956d : add al, byte ptr [rax] ; add byte ptr [rax - 0x15], dh ; std ; call qword ptr [rax]
0x0000000000420a43 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040313b : add al, ch ; jmp rdi
0x0000000000405368 : add al, ch ; push rdx ; ret 0xffff
0x000000000041b057 : add al, ch ; ret
0x000000000042a2f7 : add al, ch ; sbb bh, bh ; jmp qword ptr [rdi]
0x0000000000428d13 : add al, dh ; mov ebp, dr1 ; jmp rax
0x000000000042a8ff : add al, dh ; ret
0x00000000004291d3 : add al, dh ; ret 0xffff
0x00000000004294ef : add al, dl ; out -3, eax ; call qword ptr [rsi]
0x000000000042aa4f : add al, dl ; sar bh, 1 ; call qword ptr [rax]
0x0000000000427adf : add bl, dh ; ret
0x0000000000425b8b : add byte ptr [r8], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x00000000004213f1 : add byte ptr [rax + 1], cl ; ret 0x4a3b
0x0000000000429b53 : add byte ptr [rax + rcx], bl ; add byte ptr [rax], cl ; jl 0x429b61 ; call rbx
0x000000000042a313 : add byte ptr [rax + rdx], bl ; add byte ptr [rax], al ; clc ; sbb bh, bh ; jmp qword ptr [rdi]
0x000000000042956f : add byte ptr [rax - 0x15], dh ; std ; call qword ptr [rax]
0x0000000000428d43 : add byte ptr [rax - 0x5b], al ; std ; jmp rax
0x000000000040dfb3 : add byte ptr [rax - 0x73], cl ; clc ; pop rbx ; pop rbp ; ret
0x000000000040a0f7 : add byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x000000000040268b : add byte ptr [rax - 0x75], cl ; mov r8b, 0x3b ; add dword ptr [rdi], ecx ; popfq ; ret 0x48b
0x00000000004198d0 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000040f377 : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000408aa9 : add byte ptr [rax - 0x77], cl ; or cl, ch ; ret
0x0000000000403b21 : add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000042960a : add byte ptr [rax], al ; adc al, 3 ; add byte ptr [rax], al ; adc al, dh ; std ; call qword ptr [rdx]
0x00000000004295ce : add byte ptr [rax], al ; adc al, dh ; std ; call qword ptr [rdx]
0x000000000041b055 : add byte ptr [rax], al ; add al, ch ; ret
0x0000000000427add : add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004213ef : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x4a3b
0x000000000040a0f5 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x000000000040f375 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000408aa7 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; or cl, ch ; ret
0x0000000000427adb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000400710 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x0000000000400712 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000004084cc : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000426bf9 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x000000000040a0f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000427adc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400714 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x0000000000403b44 : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x8141
0x0000000000416218 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000411502 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040d7eb : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000402c79 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret
0x0000000000402f8d : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x844
0x0000000000401e4c : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x0000000000418ada : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x0000000000411d0a : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x125
0x0000000000424e3d : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x000000000041c22f : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x0000000000403b56 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000402c6e : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x000000000041af9e : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8b44
0x000000000041ecb3 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xfb81
0x00000000004161b8 : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x51], al ; ret
0x0000000000425ac0 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x0000000000425b8c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x0000000000403b61 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret
0x0000000000402148 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x0000000000426582 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x0000000000425c42 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x000000000041bb34 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret
0x0000000000401b15 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x125
0x0000000000404f71 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000402c42 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x00000000004047be : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5588
0x0000000000419f9e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x00000000004034d4 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x00000000004272e0 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000403311 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x00000000004085bd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf280
0x00000000004196d1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x0000000000406592 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000405e82 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x0000000000412c71 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x0000000000403e3e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x00000000004171b7 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000402926 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000403c30 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf981
0x00000000004033be : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xfe81
0x000000000041fedb : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xff81
0x000000000041b050 : add byte ptr [rax], al ; add cl, ch ; mov edx, 0xe8000000 ; ret
0x0000000000407efd : add byte ptr [rax], al ; add cl, ch ; ret
0x000000000040695c : add byte ptr [rax], al ; add cl, ch ; ret 0
0x00000000004141e1 : add byte ptr [rax], al ; add cl, ch ; ret 0x13
0x00000000004129f3 : add byte ptr [rax], al ; add cl, ch ; ret 0x2a
0x000000000041d69a : add byte ptr [rax], al ; add cl, ch ; ret 0xb
0x0000000000413ade : add byte ptr [rax], al ; add cl, ch ; ret 1
0x0000000000403829 : add byte ptr [rax], al ; add cl, ch ; ret 4
0x0000000000403e2c : add byte ptr [rax], al ; add cl, ch ; ret 6
0x0000000000410c79 : add byte ptr [rax], al ; add cl, ch ; ret 8
0x0000000000407e6f : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000427623 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000411caf : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004084ce : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004270f1 : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000401f25 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040156b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000042a2f6 : add byte ptr [rax], al ; call 0x2842a21a
0x0000000000405367 : add byte ptr [rax], al ; call 0x4015c4
0x000000000042a316 : add byte ptr [rax], al ; clc ; sbb bh, bh ; jmp qword ptr [rdi]
0x000000000042a2f2 : add byte ptr [rax], al ; cld ; sldt word ptr [rax] ; call 0x2842a21e
0x0000000000429956 : add byte ptr [rax], al ; fadd dword ptr [rdi - 2] ; call qword ptr [rdx]
0x00000000004294ea : add byte ptr [rax], al ; hlt ; add dword ptr [rax], eax ; add al, dl ; out -3, eax ; call qword ptr [rsi]
0x00000000004296da : add byte ptr [rax], al ; in al, 3 ; add byte ptr [rax], al ; push rax ; add esi, edi ; call rdx
0x000000000042956a : add byte ptr [rax], al ; je 0x429579 ; add byte ptr [rax], al ; jo 0x429566 ; std ; call qword ptr [rax]
0x0000000000429a72 : add byte ptr [rax], al ; jl 0x429a86 ; add byte ptr [rax], al ; sub byte ptr [rax - 2], bl ; jmp qword ptr [rcx]
0x0000000000401709 : add byte ptr [rax], al ; jmp 0x401589
0x000000000041b051 : add byte ptr [rax], al ; jmp 0x41b11a
0x000000000042956e : add byte ptr [rax], al ; jo 0x429562 ; std ; call qword ptr [rax]
0x0000000000429002 : add byte ptr [rax], al ; loop 0x42900a ; jmp qword ptr [rax]
0x000000000041bf8c : add byte ptr [rax], al ; mov al, sil ; movzx eax, al ; pop rbp ; ret
0x000000000041bddd : add byte ptr [rax], al ; mov ax, si ; movzx eax, ax ; pop rbp ; ret
0x0000000000429806 : add byte ptr [rax], al ; mov byte ptr [rsi + rdi*8], dl ; call rcx
0x0000000000411ae2 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000404e63 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x2c] ; pop rbp ; ret
0x0000000000426bfb : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x000000000042a3b2 : add byte ptr [rax], al ; mov esp, 0x78000010 ; sbb bh, bh ; jmp qword ptr [rbx]
0x0000000000411752 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040a529 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040a0f6 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040f376 : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000042a79a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; adc al, 0 ; add byte ptr [rax], dl ; mov bh, -1 ; call rax
0x0000000000428d42 : add byte ptr [rax], al ; movsd dword ptr [rdi], dword ptr [rsi] ; std ; jmp rax
0x0000000000429802 : add byte ptr [rax], al ; or al, 5 ; add byte ptr [rax], al ; mov byte ptr [rsi + rdi*8], dl ; call rcx
0x00000000004032cb : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000416219 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040783d : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040d7ec : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000429b52 : add byte ptr [rax], al ; pop rsp ; or byte ptr [rax], al ; add byte ptr [rax], cl ; jl 0x429b62 ; call rbx
0x00000000004296de : add byte ptr [rax], al ; push rax ; add esi, edi ; call rdx
0x0000000000427ade : add byte ptr [rax], al ; ret
0x0000000000400716 : add byte ptr [rax], al ; ret 1
0x000000000042a312 : add byte ptr [rax], al ; sbb al, 0x10 ; add byte ptr [rax], al ; clc ; sbb bh, bh ; jmp qword ptr [rdi]
0x00000000004294ee : add byte ptr [rax], al ; shl bh, 1 ; std ; call qword ptr [rsi]
0x0000000000429a76 : add byte ptr [rax], al ; sub byte ptr [rax - 2], bl ; jmp qword ptr [rcx]
0x0000000000429b57 : add byte ptr [rax], cl ; jl 0x429b5d ; call rbx
0x000000000042a8df : add byte ptr [rax], dh ; ret
0x0000000000428e0b : add byte ptr [rax], dl ; adc bh, dh ; jmp qword ptr [rax]
0x000000000042a79f : add byte ptr [rax], dl ; mov bh, -1 ; call rax
0x0000000000428f03 : add byte ptr [rax], dl ; mov esi, edi ; call qword ptr [rax]
0x0000000000403b46 : add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x8141
0x0000000000403b3c : add byte ptr [rbp - 0x77], al ; ret 0x8141
0x000000000041621a : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040783e : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040d7ed : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000042960b : add byte ptr [rbx + rax], dl ; add byte ptr [rax], al ; adc al, dh ; std ; call qword ptr [rdx]
0x0000000000402922 : add byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x00000000004033ba : add byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xfe81
0x000000000040659e : add byte ptr [rcx + 0xf], al ; pushfq ; mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x0000000000402c7b : add byte ptr [rcx + 0xf], al ; pushfq ; ret
0x0000000000402f8f : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x844
0x0000000000401e4e : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x000000000041fee6 : add byte ptr [rcx + 0xf], al ; pushfq ; rol dword ptr [rax + rcx - 0x36], -0xa ; ret 0xf01
0x0000000000418adc : add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x0000000000411d0c : add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x125
0x0000000000424e3f : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x000000000041c231 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x0000000000403b58 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000402c70 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x000000000041afa0 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8b44
0x000000000041ecb5 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xfb81
0x000000000041658c : add byte ptr [rcx + 0xfe], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000041fed7 : add byte ptr [rcx + 0xfe], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xff81
0x0000000000416dc8 : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000412c6d : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x0000000000418ad2 : add byte ptr [rcx - 0x77], al ; ret
0x0000000000411d02 : add byte ptr [rcx - 0x77], al ; ret 0x8141
0x0000000000401aa8 : add byte ptr [rcx], al ; ret
0x00000000004161ba : add byte ptr [rdi + rcx - 0x51], al ; ret
0x000000000042aa4b : add byte ptr [rdi + rdx], dl ; add al, dl ; sar bh, 1 ; call qword ptr [rax]
0x0000000000428d07 : add byte ptr [rdi - 0x80000000], dh ; mov ch, bh ; call qword ptr [rax]
0x000000000040637b : add byte ptr [rdi], cl ; lahf ; ret 0x348b
0x0000000000425ac2 : add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x0000000000425b8e : add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x0000000000403b63 : add byte ptr [rdi], cl ; pushfq ; ret
0x000000000040214a : add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x0000000000426584 : add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x0000000000425c44 : add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x000000000041bb36 : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret
0x0000000000401b17 : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x125
0x0000000000404f73 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000402c44 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x00000000004047c0 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5588
0x0000000000419fa0 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x00000000004034d6 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x00000000004272e2 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000403313 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x00000000004085bf : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf280
0x00000000004196d3 : add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x0000000000406594 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000405e84 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x0000000000412c73 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x0000000000403e40 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x00000000004171b9 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000402928 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000403c32 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf981
0x00000000004033c0 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xfe81
0x000000000041fedd : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xff81
0x000000000042956b : add byte ptr [rdx + rax], dh ; add byte ptr [rax - 0x15], dh ; std ; call qword ptr [rax]
0x0000000000429000 : add byte ptr [rdx], dl ; add byte ptr [rax], al ; loop 0x42900c ; jmp qword ptr [rax]
0x0000000000408fef : add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x0000000000405f35 : add byte ptr cs:[rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x000000000041b052 : add cl, ch ; mov edx, 0xe8000000 ; ret
0x0000000000407eff : add cl, ch ; ret
0x000000000040695e : add cl, ch ; ret 0
0x00000000004141e3 : add cl, ch ; ret 0x13
0x00000000004129f5 : add cl, ch ; ret 0x2a
0x000000000041d69c : add cl, ch ; ret 0xb
0x0000000000413ae0 : add cl, ch ; ret 1
0x000000000040382b : add cl, ch ; ret 4
0x0000000000403e2e : add cl, ch ; ret 6
0x0000000000410c7b : add cl, ch ; ret 8
0x0000000000416d9a : add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x0000000000416e3c : add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x00000000004294ed : add dword ptr [rax], eax ; add al, dl ; out -3, eax ; call qword ptr [rsi]
0x000000000040783c : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000410725 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000407ca6 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004085d3 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004044ec : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x000000000042257b : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000403780 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000402691 : add dword ptr [rdi], ecx ; popfq ; ret 0x48b
0x000000000040ae38 : add dword ptr [rdi], ecx ; ror dword ptr cs:[rdi], -0x69 ; ret 0x348b
0x00000000004225f3 : add dword ptr [rdi], ecx ; test byte ptr [rip - 0x17000000], al ; ret
0x0000000000407ef9 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret
0x0000000000406958 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0
0x00000000004141dd : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x00000000004129ef : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x000000000041d696 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0xb
0x0000000000413ada : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 1
0x0000000000403825 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 4
0x0000000000403e28 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 6
0x000000000040db87 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x348b
0x0000000000401aa4 : add eax, 0x22988e ; add ebx, esi ; ret
0x000000000040f374 : add eax, 0x48000000 ; mov esp, ebp ; pop rbp ; ret
0x0000000000407efc : add eax, 0xe9000000 ; ret
0x000000000040695b : add eax, 0xe9000000 ; ret 0
0x00000000004141e0 : add eax, 0xe9000000 ; ret 0x13
0x00000000004129f2 : add eax, 0xe9000000 ; ret 0x2a
0x000000000041d699 : add eax, 0xe9000000 ; ret 0xb
0x0000000000413add : add eax, 0xe9000000 ; ret 1
0x0000000000403828 : add eax, 0xe9000000 ; ret 4
0x0000000000403e2b : add eax, 0xe9000000 ; ret 6
0x0000000000410c78 : add eax, 0xe9000000 ; ret 8
0x0000000000409047 : add eax, ebp ; ret
0x0000000000401a6b : add eax, edx ; sar rax, 1 ; jne 0x401a7c ; pop rbp ; ret
0x0000000000422dd9 : add eax, esi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x0000000000401aa9 : add ebx, esi ; ret
0x000000000041ebdb : add edi, eax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x00000000004296e1 : add esi, edi ; call rdx
0x0000000000401d2b : add esp, 0x10 ; pop rbp ; ret
0x00000000004175ec : add esp, 0x170 ; pop rbp ; ret
0x000000000041543d : add esp, 0x178 ; pop rbx ; pop rbp ; ret
0x0000000000427626 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000410722 : add esp, 0x198 ; pop rbx ; pop rbp ; ret
0x0000000000419abc : add esp, 0x1a0 ; pop rbp ; ret
0x00000000004081d8 : add esp, 0x20 ; pop rbp ; ret
0x000000000041eae7 : add esp, 0x20 ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000420a40 : add esp, 0x2a8 ; pop rbx ; pop rbp ; ret
0x0000000000403239 : add esp, 0x30 ; pop rbp ; ret
0x00000000004085d8 : add esp, 0x40 ; pop rbp ; ret
0x00000000004195ff : add esp, 0x40 ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000403ced : add esp, 0x48 ; pop rbx ; pop rbp ; ret
0x0000000000401f28 : add esp, 0x50 ; pop rbp ; ret
0x00000000004044f1 : add esp, 0x60 ; pop rbp ; ret
0x00000000004167d2 : add esp, 0x70 ; pop rbp ; ret
0x000000000041585e : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004032c7 : add esp, 0xb0 ; pop rbp ; ret
0x000000000040e987 : add esp, 0xc0 ; pop rbp ; ret
0x000000000040d7e8 : add esp, 0xd8 ; pop rbx ; pop rbp ; ret
0x000000000040156e : add esp, 8 ; ret
0x0000000000401a6a : add rax, rdx ; sar rax, 1 ; jne 0x401a7d ; pop rbp ; ret
0x0000000000422dd8 : add rax, rsi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x000000000041ebda : add rdi, rax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x0000000000401d2a : add rsp, 0x10 ; pop rbp ; ret
0x00000000004175eb : add rsp, 0x170 ; pop rbp ; ret
0x000000000041543c : add rsp, 0x178 ; pop rbx ; pop rbp ; ret
0x0000000000427625 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000410721 : add rsp, 0x198 ; pop rbx ; pop rbp ; ret
0x0000000000419abb : add rsp, 0x1a0 ; pop rbp ; ret
0x00000000004081d7 : add rsp, 0x20 ; pop rbp ; ret
0x000000000041eae6 : add rsp, 0x20 ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000420a3f : add rsp, 0x2a8 ; pop rbx ; pop rbp ; ret
0x0000000000403238 : add rsp, 0x30 ; pop rbp ; ret
0x00000000004085d7 : add rsp, 0x40 ; pop rbp ; ret
0x00000000004195fe : add rsp, 0x40 ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000403cec : add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x0000000000401f27 : add rsp, 0x50 ; pop rbp ; ret
0x00000000004044f0 : add rsp, 0x60 ; pop rbp ; ret
0x00000000004167d1 : add rsp, 0x70 ; pop rbp ; ret
0x000000000041585d : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004032c6 : add rsp, 0xb0 ; pop rbp ; ret
0x000000000040e986 : add rsp, 0xc0 ; pop rbp ; ret
0x000000000040d7e7 : add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x000000000040156d : add rsp, 8 ; ret
0x0000000000405366 : and al, 0 ; add al, ch ; push rdx ; ret 0xffff
0x000000000042257a : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040377f : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401aa7 : and al, byte ptr [rax] ; add ebx, esi ; ret
0x0000000000408d01 : and byte ptr [r15], cl ; xchg eax, esp ; ret 0x348b
0x000000000041eae9 : and byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000408d02 : and byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x000000000040a5a5 : and eax, 0x428300 ; mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x0000000000416ec7 : and eax, 0x48ffffee ; add esp, 0x20 ; pop rbp ; ret
0x0000000000407ccf : and eax, 0x62b358 ; pop rbp ; ret
0x0000000000407cf3 : and eax, 0x62b360 ; pop rbp ; ret
0x000000000042a2f8 : call 0x2842a218
0x0000000000405369 : call 0x4015c2
0x000000000041e559 : call 0xd0466a9
0x000000000041eb1c : call 0xd046c6c
0x00000000004156d9 : call 0xffffffffe903e029
0x00000000004156d8 : call 0xffffffffe903e02a
0x000000000040b424 : call 0xffffffffff7a3f75
0x000000000040b423 : call 0xffffffffff7a3f76
0x0000000000427ab9 : call qword ptr [r12 + rbx*8]
0x0000000000428d0f : call qword ptr [rax]
0x0000000000429e23 : call qword ptr [rdi]
0x00000000004295d3 : call qword ptr [rdx]
0x00000000004294f3 : call qword ptr [rsi]
0x0000000000427aba : call qword ptr [rsp + rbx*8]
0x000000000040972d : call r8
0x0000000000401acd : call rax
0x0000000000429b5b : call rbx
0x000000000040952e : call rcx
0x00000000004296e3 : call rdx
0x000000000042a07b : call rsp
0x000000000040ec58 : clc ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004099e6 : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403237 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040a310 : clc ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040de22 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040e985 : clc ; add rsp, 0xc0 ; pop rbp ; ret
0x0000000000401a6f : clc ; jne 0x401a78 ; pop rbp ; ret
0x000000000040ea1e : clc ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x00000000004085eb : clc ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040860b : clc ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040862b : clc ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000428e08 : clc ; or dword ptr [rax], eax ; add byte ptr [rax], dl ; adc bh, dh ; jmp qword ptr [rax]
0x000000000040a0fb : clc ; pop rbp ; ret
0x000000000040ac1e : clc ; pop rbx ; pop rbp ; ret
0x000000000042a318 : clc ; sbb bh, bh ; jmp qword ptr [rdi]
0x0000000000426cd6 : cld ; mov dword ptr [rbp - 0xc], eax ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x000000000042a2f4 : cld ; sldt word ptr [rax] ; call 0x2842a21c
0x00000000004268e6 : cli ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041b1d9 : cmp al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000401f23 : cmp al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000425d6e : cmp byte ptr [rax], ah ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x00000000004093dd : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000425abe : cmp byte ptr [rax], dh ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x00000000004261ae : cmp byte ptr [rcx], ah ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000040a225 : cmp dword ptr [rax - 0x75], ecx ; jne 0x40a20f ; call rax
0x0000000000424e3b : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x000000000041af9c : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8b44
0x000000000040c068 : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000402c40 : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x0000000000419f9c : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x0000000000415b6d : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401a2d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401a40 ; pop rbp ; ret
0x0000000000404f6f : cmp eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000410724 : cwde ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000427a43 : cwde ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000401aa6 : cwde ; and al, byte ptr [rax] ; add ebx, esi ; ret
0x00000000004059bb : dec byte ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x0000000000411dff : dec byte ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret
0x0000000000424370 : dec dword ptr [rax + 0x3b] ; ror byte ptr [r15], -0x69 ; ret 0x348b
0x0000000000421a45 : dec dword ptr [rax + 0x3b] ; ror byte ptr [r15], 1 ; xchg eax, esp ; ret 0x348b
0x0000000000418623 : dec dword ptr [rax - 0x77] ; ret 0x4e8
0x0000000000420368 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000418a7a : dec dword ptr [rax - 0x77] ; ret 0xade8
0x0000000000418ce6 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000417a4b : dec dword ptr [rax - 0x77] ; ret 0xdce8
0x000000000041df94 : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000041f35b : dec dword ptr [rdi] ; test dword ptr [rip - 0x17000000], eax ; ret
0x0000000000410c75 : dec dword ptr [rdi] ; test dword ptr [rip - 0x17000000], eax ; ret 8
0x00000000004028f7 : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x000000000041578b : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000040b954 : enter -0x74b8, 0x32 ; mov rdi, qword ptr [rsi] ; call rcx
0x000000000040a222 : enter -0x74b8, 0x39 ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x000000000041725a : enter -0x7cb8, -0x3c ; pop rbp ; ret
0x0000000000405e7e : enter 0x3d48, 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x0000000000401a43 : enter 0x62b2, 0 ; jmp rax
0x0000000000401a83 : enter 0x62b2, 0 ; jmp rdx
0x000000000040d7ea : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000429958 : fadd dword ptr [rdi - 2] ; call qword ptr [rdx]
0x000000000040ede9 : fbld dword ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000040edea : fbld dword ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x00000000004062d4 : fiadd dword ptr [rcx - 0xa] ; ret 0x4001
0x00000000004169bf : fiadd dword ptr [rcx - 0xa] ; ret 0x4801
0x0000000000402c82 : fiadd dword ptr [rcx - 0xa] ; ret 0x8801
0x0000000000418d57 : fiadd dword ptr [rcx - 0xa] ; ret 0x8901
0x000000000040c3e8 : fiadd dword ptr [rcx - 0xa] ; ret 0xf01
0x0000000000403b69 : fild dword ptr [rcx - 0xa] ; ret
0x0000000000413df8 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x00000000004272ef : fmul qword ptr [r8 - 0x77] ; in al, dx ; pop rbp ; ret
0x00000000004272f0 : fmul qword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x0000000000427abc : fmul qword ptr [rax - 0x7d] ; ret
0x00000000004272ed : fmul qword ptr [rbx - 0x76b723bb] ; in al, dx ; pop rbp ; ret
0x00000000004294ec : hlt ; add dword ptr [rax], eax ; add al, dl ; out -3, eax ; call qword ptr [rsi]
0x0000000000401d29 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000426cd9 : hlt ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000401a40 : hlt ; pop rbp ; mov edi, 0x62b2c8 ; jmp rax
0x0000000000426bff : hlt ; pop rbp ; ret
0x00000000004296dc : in al, 3 ; add byte ptr [rax], al ; push rax ; add esi, edi ; call rdx
0x000000000040f37a : in al, dx ; pop rbp ; ret
0x000000000040abee : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000402c6c : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x000000000041658e : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000041fed9 : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xff81
0x0000000000415c73 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x00000000004062be : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x0000000000416dca : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000412c6f : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x0000000000406133 : inc dword ptr [rcx + 0x2ff9] ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x0000000000425b88 : inc dword ptr [rcx + 0x41f9] ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x000000000042657e : inc dword ptr [rcx + 0x5af9] ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x0000000000425c3e : inc dword ptr [rcx + 0x5af9] ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x0000000000428fef : inc eax ; adc dword ptr [rax], eax ; add al, ah ; loope 0x428ffd ; jmp rax
0x00000000004198d8 : int 0x80
0x0000000000401a33 : ja 0x401a3a ; pop rbp ; ret
0x000000000040ea21 : ja 0x40ea6e ; pop rbp ; ret
0x0000000000427ebf : jb 0x427f28 ; jns 0x427eca ; push rax ; ret
0x0000000000427ebe : jb 0x427f29 ; jns 0x427ecb ; push rax ; ret
0x0000000000401a3f : je 0x401a3d ; pop rbp ; mov edi, 0x62b2c8 ; jmp rax
0x000000000042956c : je 0x429577 ; add byte ptr [rax], al ; jo 0x429564 ; std ; call qword ptr [rax]
0x00000000004085ea : jge 0x4085eb ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040860a : jge 0x40860b ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040862a : jge 0x40862b ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000040d970 : jge 0x40d963 ; mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040ea1d : jge 0x40ea1e ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x00000000004272ec : jge 0x4272d3 ; mov eax, dword ptr [rbp - 0x24] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000429a74 : jl 0x429a84 ; add byte ptr [rax], al ; sub byte ptr [rax - 2], bl ; jmp qword ptr [rcx]
0x0000000000429b59 : jl 0x429b5b ; call rbx
0x000000000040170b : jmp 0x401587
0x000000000041b053 : jmp 0x41b118
0x0000000000421e9c : jmp 0x420dd2
0x000000000040b0e3 : jmp 0x49033a33
0x000000000040b225 : jmp 0x49033b75
0x000000000040d220 : jmp 0x49035b70
0x000000000040d28d : jmp 0x49035bdd
0x000000000040e55a : jmp 0x49036eaa
0x000000000040e5c7 : jmp 0x49036f17
0x0000000000428d57 : jmp qword ptr [rax]
0x000000000042a3bb : jmp qword ptr [rbx]
0x0000000000429a7b : jmp qword ptr [rcx]
0x000000000042a2fb : jmp qword ptr [rdi]
0x0000000000401a47 : jmp rax
0x000000000042a923 : jmp rbx
0x00000000004121ae : jmp rcx
0x000000000040313d : jmp rdi
0x0000000000401a87 : jmp rdx
0x0000000000401a70 : jne 0x401a77 ; pop rbp ; ret
0x0000000000409526 : jne 0x4094f0 ; mov r8, qword ptr [rsi] ; mov rsi, qword ptr [r8] ; call rcx
0x000000000040a228 : jne 0x40a20c ; call rax
0x0000000000427ec2 : jns 0x427ec7 ; push rax ; ret
0x0000000000427ec1 : jns 0x427ec8 ; push rax ; ret
0x000000000040980f : jo 0x409828 ; mov qword ptr [rbp - 0x48], rdx ; call r8
0x00000000004167d4 : jo 0x416835 ; ret
0x00000000004175ee : jo 0x4175f6 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000422d44 : jo 0x422d4f ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000424d37 : jo 0x424d98 ; ret
0x0000000000427a47 : jo 0x427aa8 ; ret
0x0000000000429570 : jo 0x429560 ; std ; call qword ptr [rax]
0x000000000041543f : js 0x415448 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000415860 : js 0x4158c0 ; pop rbp ; ret
0x000000000040637d : lahf ; ret 0x348b
0x000000000040e0d0 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000408a3a : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040ac1c : lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040e0cf : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040ac1b : lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000041bbc9 : loop 0x41bc1b ; or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x000000000041bda1 : loop 0x41bdf3 ; or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x0000000000429005 : loop 0x429007 ; jmp qword ptr [rax]
0x0000000000429004 : loop 0x429008 ; jmp qword ptr [rax]
0x000000000040377e : loope 0x4037ab ; add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x000000000040377d : loope 0x4037ac ; add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000428ff5 : loope 0x428ff7 ; jmp rax
0x000000000040b019 : loopne 0x40b07f ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040f079 : loopne 0x40f0ca ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040f078 : loopne 0x40f0cb ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000415c9f : loopne 0x415cf0 ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000415c9e : loopne 0x415cf1 ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000041a7a5 : loopne 0x41a7f5 ; add esp, 0x20 ; pop rbp ; ret
0x000000000041a7a4 : loopne 0x41a7f6 ; add esp, 0x20 ; pop rbp ; ret
0x000000000041b0aa : loopne 0x41b110 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041cd7a : loopne 0x41cde0 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004032c9 : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040268f : mov al, 0x3b ; add dword ptr [rdi], ecx ; popfq ; ret 0x48b
0x000000000040783b : mov al, 1 ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040377c : mov al, byte ptr [rbp - 0x1f] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040ede8 : mov al, byte ptr [rbp - 0x21] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000408dfc : mov al, byte ptr [rbp - 0x33] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000425a49 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004268e4 : mov al, byte ptr [rbp - 6] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041bf8f : mov al, dh ; movzx eax, al ; pop rbp ; ret
0x000000000041bf8e : mov al, sil ; movzx eax, al ; pop rbp ; ret
0x000000000041bddf : mov ax, si ; movzx eax, ax ; pop rbp ; ret
0x000000000041bde3 : mov bh, -0x40 ; pop rbp ; ret
0x000000000042a7a1 : mov bh, -1 ; call rax
0x0000000000403b1f : mov bl, 0x62 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000401569 : mov bl, 2 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000407cf1 : mov byte ptr [0x62b360], al ; pop rbp ; ret
0x00000000004065a2 : mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x0000000000407ef8 : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret
0x0000000000417546 : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 0
0x00000000004141dc : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x00000000004129ee : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x00000000004159c6 : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 1
0x0000000000403824 : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 4
0x0000000000403e27 : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 6
0x0000000000418da6 : mov byte ptr [rdx], al ; jmp rcx
0x0000000000401aa3 : mov byte ptr [rip + 0x22988e], 1 ; ret
0x0000000000429808 : mov byte ptr [rsi + rdi*8], dl ; call rcx
0x0000000000428d0d : mov ch, bh ; call qword ptr [rax]
0x0000000000407ca8 : mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004085d5 : mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000403cea : mov dh, -0x40 ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000004044ee : mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041bf27 : mov dh, -0x40 ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000042257d : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000403782 : mov dh, -0x40 ; pop rbp ; ret
0x0000000000401aa5 : mov ds, word ptr [rax - 0xcfeffde] ; ret
0x0000000000407ccd : mov dword ptr [0x62b358], edi ; pop rbp ; ret
0x0000000000403cd1 : mov dword ptr [rax - 0xa], 0x458801c7 ; ret
0x000000000041182a : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000411978 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000409726 : mov dword ptr [rbp - 0x30], eax ; mov qword ptr [rbp - 0x38], rdx ; call r8
0x000000000040972a : mov dword ptr [rbp - 0x38], edx ; call r8
0x0000000000409812 : mov dword ptr [rbp - 0x48], edx ; call r8
0x0000000000401d27 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000426cd7 : mov dword ptr [rbp - 0xc], eax ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000422ddc : mov dword ptr [rdi + 0x10], eax ; pop rbp ; ret
0x000000000040a5aa : mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x000000000040ea20 : mov dword ptr [rdi + 0x48], esi ; pop rbp ; ret
0x000000000041ebde : mov dword ptr [rsi], edi ; pop rbp ; ret
0x000000000041585c : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x000000000040ef75 : mov eax, 0xe8c68948 ; ret 0xde
0x000000000041a1e5 : mov eax, 0xf0658d48 ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040dfb2 : mov eax, dword ptr [rax] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000425461 : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000411758 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000419d11 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004081d4 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042545e : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000411755 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000041640a : mov eax, dword ptr [rbp - 0x10] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004080c3 : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000411ae4 : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000419c1f : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041170d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000411824 : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004169d4 : mov eax, dword ptr [rbp - 0x18] ; mov rsp, rbp ; pop rbp ; ret
0x000000000041a7a3 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040f077 : mov eax, dword ptr [rbp - 0x20] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x00000000004272ee : mov eax, dword ptr [rbp - 0x24] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000425278 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040e234 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040a52c : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000404e65 : mov eax, dword ptr [rbp - 0x2c] ; pop rbp ; ret
0x000000000041c162 : mov eax, dword ptr [rbp - 0x30] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040ac18 : mov eax, dword ptr [rbp - 0x30] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000417258 : mov eax, dword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041585a : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000424d31 : mov eax, dword ptr [rbp - 0x60] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000427a41 : mov eax, dword ptr [rbp - 0x68] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000426bfd : mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x000000000040ec56 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004099e4 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403235 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040a30e : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040de20 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040a0f9 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004085ed : mov eax, dword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040860d : mov eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040862d : mov eax, dword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000409529 : mov eax, dword ptr [rsi] ; mov rsi, qword ptr [r8] ; call rcx
0x000000000041bbce : mov eax, edi ; pop rbp ; ret
0x000000000041bde0 : mov eax, esi ; movzx eax, ax ; pop rbp ; ret
0x000000000041bc03 : mov eax, esi ; pop rbp ; ret
0x0000000000428d15 : mov ebp, dr1 ; jmp rax
0x0000000000401acb : mov ebp, esp ; call rax
0x0000000000401a31 : mov ebp, esp ; ja 0x401a3c ; pop rbp ; ret
0x00000000004121a7 : mov ecx, dword ptr [rax*8 + 0x428370] ; jmp rcx
0x0000000000412cc1 : mov ecx, dword ptr [rax*8 + 0x4283b8] ; jmp rcx
0x0000000000418da2 : mov ecx, dword ptr [rax*8 + 0x428870] ; jmp rcx
0x0000000000411827 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040b512 : mov ecx, dword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040b422 : mov ecx, dword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040d973 : mov ecx, dword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040dc3a : mov ecx, dword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000041bc2d : mov ecx, eax ; shl edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000041bbfd : mov ecx, eax ; shr edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000401ac5 : mov edi, 0x62ae20 ; mov rbp, rsp ; call rax
0x0000000000401a42 : mov edi, 0x62b2c8 ; jmp rax
0x0000000000401a82 : mov edi, 0x62b2c8 ; jmp rdx
0x000000000040ea1c : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x00000000004085e9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000408609 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000408629 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000040b426 : mov edi, dword ptr [rcx] ; call rax
0x000000000040a224 : mov edi, dword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x000000000041ebd8 : mov edi, dword ptr [rsi] ; add rdi, rax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x000000000040b959 : mov edi, dword ptr [rsi] ; call rcx
0x0000000000427ab7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000427ab6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000041b054 : mov edx, 0xe8000000 ; ret
0x000000000040b952 : mov edx, dword ptr [rbp - 0x38] ; mov rsi, qword ptr [rdx] ; mov rdi, qword ptr [rsi] ; call rcx
0x000000000040980e : mov esi, dword ptr [rax + 0x10] ; mov qword ptr [rbp - 0x48], rdx ; call r8
0x000000000040952c : mov esi, dword ptr [rax] ; call rcx
0x000000000040a227 : mov esi, dword ptr [rbp - 0x20] ; call rax
0x0000000000409525 : mov esi, dword ptr [rbp - 0x40] ; mov r8, qword ptr [rsi] ; mov rsi, qword ptr [r8] ; call rcx
0x000000000040d977 : mov esi, dword ptr [rcx] ; call rax
0x000000000040b956 : mov esi, dword ptr [rdx] ; mov rdi, qword ptr [rsi] ; call rcx
0x0000000000401a80 : mov esi, eax ; mov edi, 0x62b2c8 ; jmp rdx
0x0000000000428f05 : mov esi, edi ; call qword ptr [rax]
0x000000000042a3b4 : mov esp, 0x78000010 ; sbb bh, bh ; jmp qword ptr [rbx]
0x0000000000418ad0 : mov esp, 0x89410062 ; ret
0x0000000000411d00 : mov esp, 0x89410062 ; ret 0x8141
0x00000000004161af : mov esp, 0x89440062 ; ret
0x0000000000403b3a : mov esp, 0x89450062 ; ret 0x8141
0x000000000040f379 : mov esp, ebp ; pop rbp ; ret
0x0000000000407ccc : mov qword ptr [0x62b358], rdi ; pop rbp ; ret
0x0000000000409725 : mov qword ptr [rbp - 0x30], rax ; mov qword ptr [rbp - 0x38], rdx ; call r8
0x0000000000409729 : mov qword ptr [rbp - 0x38], rdx ; call r8
0x0000000000409811 : mov qword ptr [rbp - 0x48], rdx ; call r8
0x0000000000422ddb : mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x000000000040ea1f : mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000041ebdd : mov qword ptr [rsi], rdi ; pop rbp ; ret
0x0000000000409528 : mov r8, qword ptr [rsi] ; mov rsi, qword ptr [r8] ; call rcx
0x000000000040268e : mov r8b, 0x3b ; add dword ptr [rdi], ecx ; popfq ; ret 0x48b
0x000000000041585b : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x000000000040dfb1 : mov rax, qword ptr [rax] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000419d10 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004081d3 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000411754 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000416409 : mov rax, qword ptr [rbp - 0x10] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004080c2 : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000419c1e : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041170c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004169d3 : mov rax, qword ptr [rbp - 0x18] ; mov rsp, rbp ; pop rbp ; ret
0x000000000041a7a2 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040e233 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040a52b : mov rax, qword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000417257 : mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000424d30 : mov rax, qword ptr [rbp - 0x60] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000427a40 : mov rax, qword ptr [rbp - 0x68] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040ec55 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004099e3 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403234 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040a30d : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040de1f : mov rax, qword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040a0f8 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004085ec : mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040860c : mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000040862c : mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000041bbcd : mov rax, rdi ; pop rbp ; ret
0x0000000000401aca : mov rbp, rsp ; call rax
0x0000000000401a30 : mov rbp, rsp ; ja 0x401a3d ; pop rbp ; ret
0x00000000004121a6 : mov rcx, qword ptr [rax*8 + 0x428370] ; jmp rcx
0x0000000000412cc0 : mov rcx, qword ptr [rax*8 + 0x4283b8] ; jmp rcx
0x0000000000418da1 : mov rcx, qword ptr [rax*8 + 0x428870] ; jmp rcx
0x000000000040b511 : mov rcx, qword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040b421 : mov rcx, qword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040d972 : mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040dc39 : mov rcx, qword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040ea1b : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x00000000004085e8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000408608 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000408628 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000040b425 : mov rdi, qword ptr [rcx] ; call rax
0x000000000040a223 : mov rdi, qword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x000000000040b958 : mov rdi, qword ptr [rsi] ; call rcx
0x000000000040952b : mov rsi, qword ptr [r8] ; call rcx
0x000000000040980d : mov rsi, qword ptr [rax + 0x10] ; mov qword ptr [rbp - 0x48], rdx ; call r8
0x000000000040a226 : mov rsi, qword ptr [rbp - 0x20] ; call rax
0x000000000040d976 : mov rsi, qword ptr [rcx] ; call rax
0x000000000040b955 : mov rsi, qword ptr [rdx] ; mov rdi, qword ptr [rsi] ; call rcx
0x0000000000401a7f : mov rsi, rax ; mov edi, 0x62b2c8 ; jmp rdx
0x000000000040f378 : mov rsp, rbp ; pop rbp ; ret
0x0000000000421ea9 : movabs al, byte ptr [0xe9b8458948fffffe] ; ret 0xfff0
0x000000000042a79c : movsb byte ptr [rdi], byte ptr [rsi] ; adc al, 0 ; add byte ptr [rax], dl ; mov bh, -1 ; call rax
0x0000000000428d45 : movsd dword ptr [rdi], dword ptr [rsi] ; std ; jmp rax
0x0000000000407ca7 : movzx eax, al ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004085d4 : movzx eax, al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000403ce9 : movzx eax, al ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000004044ed : movzx eax, al ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041bf26 : movzx eax, al ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000042257c : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000403781 : movzx eax, al ; pop rbp ; ret
0x000000000041bde2 : movzx eax, ax ; pop rbp ; ret
0x0000000000427ad8 : nop dword ptr [rax + rax] ; ret
0x000000000042903d : or al, 0xffffffffffffffff ; call qword ptr [rax]
0x0000000000429804 : or al, 5 ; add byte ptr [rax], al ; mov byte ptr [rsi + rdi*8], dl ; call rcx
0x0000000000415a29 : or byte ptr [r15], cl ; xchg eax, ebp ; ret 0x348b
0x0000000000409940 : or byte ptr [r15], cl ; xchg eax, edx ; ret 0x348b
0x000000000040db83 : or byte ptr [r8 + 0x3b], cl ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x348b
0x0000000000413df3 : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040db84 : or byte ptr [rax + 0x3b], cl ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x348b
0x000000000041cf7e : or byte ptr [rax - 0x6af0ffc7], al ; ret 0x348b
0x0000000000413df4 : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000429b55 : or byte ptr [rax], al ; add byte ptr [rax], cl ; jl 0x429b5f ; call rbx
0x0000000000425d6c : or byte ptr [rcx + 0x2038], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x00000000004261ac : or byte ptr [rcx + 0x2138], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x00000000004196cd : or byte ptr [rcx + 0x28f9], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x0000000000405f32 : or byte ptr [rcx + 0x2ef9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x000000000040330d : or byte ptr [rcx + 0x2ff9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000403e3a : or byte ptr [rcx + 0x2ff9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x000000000040338c : or byte ptr [rcx + 0x2ff9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000425abc : or byte ptr [rcx + 0x3038], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x00000000004260ac : or byte ptr [rcx + 0x6138], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x00000000004047ba : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5588
0x00000000004034d0 : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x00000000004054d3 : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x0000000000415a2a : or byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x0000000000409941 : or byte ptr [rdi], cl ; xchg eax, edx ; ret 0x348b
0x0000000000416d9d : or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x0000000000416e3f : or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x0000000000408aac : or cl, ch ; ret
0x0000000000428e09 : or dword ptr [rax], eax ; add byte ptr [rax], dl ; adc bh, dh ; jmp qword ptr [rax]
0x000000000041a46f : or eax, 0x48fffff9 ; add esp, 0x30 ; pop rbp ; ret
0x0000000000411cad : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041bbcb : or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x000000000041bc01 : or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000041bbca : or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x00000000004294f1 : out -3, eax ; call qword ptr [rsi]
0x000000000041bc00 : out dx, eax ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000405244 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000427acc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040b01b : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405246 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000427ace : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405248 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000427ad0 : pop r14 ; pop r15 ; ret
0x0000000000407840 : pop r14 ; pop rbp ; ret
0x000000000040524a : pop r15 ; pop rbp ; ret
0x0000000000427ad2 : pop r15 ; ret
0x0000000000401aa2 : pop rbp ; mov byte ptr [rip + 0x22988e], 1 ; ret
0x0000000000401a41 : pop rbp ; mov edi, 0x62b2c8 ; jmp rax
0x0000000000401a7e : pop rbp ; mov rsi, rax ; mov edi, 0x62b2c8 ; jmp rdx
0x0000000000427acb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405247 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000427acf : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401a35 : pop rbp ; ret
0x000000000040b01a : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000408a3d : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040783f : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000403cf0 : pop rbx ; pop rbp ; ret
0x000000000040524b : pop rdi ; pop rbp ; ret
0x0000000000427ad3 : pop rdi ; ret
0x0000000000426581 : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x0000000000425c41 : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x0000000000405249 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000427ad1 : pop rsi ; pop r15 ; ret
0x0000000000407841 : pop rsi ; pop rbp ; ret
0x000000000040ae37 : pop rsp ; add dword ptr [rdi], ecx ; ror dword ptr cs:[rdi], -0x69 ; ret 0x348b
0x0000000000429b54 : pop rsp ; or byte ptr [rax], al ; add byte ptr [rax], cl ; jl 0x429b60 ; call rbx
0x0000000000405245 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000427acd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040b01c : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000408ff2 : pop rsp ; ret 0xf66
0x0000000000425ac4 : popfq ; ret 0x348b
0x0000000000402693 : popfq ; ret 0x48b
0x0000000000425b90 : popfq ; ret 0xc8b
0x00000000004290a7 : push qword ptr [rax + 0x60000014] ; sbb al, -1 ; call rax
0x000000000042911f : push qword ptr [rax + 0x60000016] ; xor bh, bh ; call rax
0x000000000041e223 : push rax ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x00000000004296e0 : push rax ; add esi, edi ; call rdx
0x0000000000401f2a : push rax ; pop rbp ; ret
0x0000000000427ec4 : push rax ; ret
0x000000000041e558 : push rbp ; call 0xd0466aa
0x000000000041eb1b : push rbp ; call 0xd046c6d
0x000000000040b953 : push rbp ; enter -0x74b8, 0x32 ; mov rdi, qword ptr [rsi] ; call rcx
0x0000000000413df7 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000401ac4 : push rbp ; mov edi, 0x62ae20 ; mov rbp, rsp ; call rax
0x000000000041578e : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000040536a : push rdx ; ret 0xffff
0x00000000004065a1 : pushfq ; mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x0000000000402c7e : pushfq ; ret
0x0000000000402f92 : pushfq ; ret 0x844
0x0000000000401e51 : pushfq ; ret 0x845
0x000000000040214c : pushfq ; ret 0xd108
0x000000000041fee9 : pushfq ; rol dword ptr [rax + rcx - 0x36], -0xa ; ret 0xf01
0x0000000000428ff0 : rcl byte ptr [rcx], 0 ; add al, ah ; loope 0x428ffc ; jmp rax
0x000000000041bbfe : rcl ebx, -0x11 ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000041bc2e : rcl ebx, -0x19 ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000401571 : ret
0x0000000000406960 : ret 0
0x0000000000422fd0 : ret 0x10
0x0000000000423bfa : ret 0x10e8
0x0000000000401b1a : ret 0x125
0x00000000004141e5 : ret 0x13
0x0000000000401912 : ret 0x2298
0x0000000000401712 : ret 0x2299
0x00000000004129f7 : ret 0x2a
0x0000000000422818 : ret 0x2e8
0x00000000004242d7 : ret 0x33e8
0x0000000000402c47 : ret 0x348b
0x00000000004062d7 : ret 0x4001
0x00000000004169c2 : ret 0x4801
0x0000000000402694 : ret 0x48b
0x000000000040c5cc : ret 0x48b0
0x0000000000402017 : ret 0x48f0
0x00000000004213f4 : ret 0x4a3b
0x0000000000416b17 : ret 0x4cc0
0x0000000000402049 : ret 0x4cf0
0x0000000000418626 : ret 0x4e8
0x00000000004047c3 : ret 0x5588
0x00000000004050c6 : ret 0x64e8
0x0000000000416da0 : ret 0x7ae8
0x000000000041c235 : ret 0x8041
0x0000000000402c74 : ret 0x8141
0x000000000040b0e6 : ret 0x8348
0x0000000000402f93 : ret 0x844
0x0000000000401e52 : ret 0x845
0x0000000000402c85 : ret 0x8801
0x0000000000412c86 : ret 0x8901
0x0000000000403b24 : ret 0x8948
0x000000000041416c : ret 0x89a5
0x000000000040ad2d : ret 0x8b44
0x0000000000402f2f : ret 0x8b48
0x000000000042337e : ret 0x8ce8
0x0000000000418a7d : ret 0xade8
0x0000000000413e10 : ret 0xae8
0x000000000041d69e : ret 0xb
0x0000000000402709 : ret 0xb0
0x000000000040b1be : ret 0xb948
0x000000000041e55c : ret 0xc
0x0000000000401a65 : ret 0xc148
0x00000000004033d0 : ret 0xc2f6
0x0000000000423945 : ret 0xc5e8
0x00000000004034d9 : ret 0xc8b
0x0000000000423b3e : ret 0xcce8
0x000000000040214d : ret 0xd108
0x00000000004171bc : ret 0xd284
0x0000000000416e42 : ret 0xd8e8
0x0000000000403d2e : ret 0xd8e9
0x0000000000406f50 : ret 0xdae8
0x0000000000417a4e : ret 0xdce8
0x000000000040ef7a : ret 0xde
0x000000000040292b : ret 0xe280
0x0000000000424fb4 : ret 0xe6e8
0x0000000000401b11 : ret 0xea81
0x00000000004156dc : ret 0xee8
0x000000000040c3eb : ret 0xf01
0x00000000004085c2 : ret 0xf280
0x0000000000408ff3 : ret 0xf66
0x000000000040f022 : ret 0xf748
0x0000000000403c35 : ret 0xf981
0x000000000041ecb9 : ret 0xfb81
0x00000000004033c3 : ret 0xfe81
0x000000000040b237 : ret 0xff3
0x000000000041fee0 : ret 0xff81
0x0000000000421ea2 : ret 0xffef
0x0000000000421eb2 : ret 0xfff0
0x000000000040536b : ret 0xffff
0x0000000000400718 : ret 1
0x000000000040382d : ret 4
0x0000000000403e30 : ret 6
0x0000000000410c7d : ret 8
0x0000000000411501 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000428d40 : rol byte ptr [rsi], 0 ; add byte ptr [rax - 0x5b], al ; std ; jmp rax
0x000000000041feea : rol dword ptr [rax + rcx - 0x36], -0xa ; ret 0xf01
0x0000000000424373 : ror byte ptr [r15], -0x69 ; ret 0x348b
0x0000000000421a48 : ror byte ptr [r15], 1 ; xchg eax, esp ; ret 0x348b
0x000000000040ac19 : ror byte ptr [r8 - 0x73], 1 ; clc ; pop rbx ; pop rbp ; ret
0x00000000004198d3 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000401a6c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401a7b ; pop rbp ; ret
0x000000000041bf28 : ror byte ptr [rax - 0x73], 0x65 ; clc ; pop rbx ; pop rbp ; ret
0x000000000040ac1a : ror byte ptr [rax - 0x73], 1 ; clc ; pop rbx ; pop rbp ; ret
0x000000000041cf7b : ror byte ptr [rax - 0x75], 1 ; or byte ptr [rax - 0x6af0ffc7], al ; ret 0x348b
0x000000000042257e : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x00000000004198d4 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x00000000004085d6 : ror byte ptr [rax - 0x7d], -0x3c ; pop rbp ; ret
0x0000000000403ceb : ror byte ptr [rax - 0x7d], -0x3c ; pop rbx ; pop rbp ; ret
0x00000000004175ea : ror byte ptr [rax - 0x7f], -0x3c ; jo 0x4175fa ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000409527 : ror byte ptr [rbx + rcx*4 + 6], 0x49 ; mov esi, dword ptr [rax] ; call rcx
0x000000000041578f : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000424374 : ror byte ptr [rdi], -0x69 ; ret 0x348b
0x0000000000421a49 : ror byte ptr [rdi], 1 ; xchg eax, esp ; ret 0x348b
0x000000000041e555 : ror dword ptr [rax - 0x75], 1 ; push rbp ; call 0xd0466ad
0x000000000041eb18 : ror dword ptr [rax - 0x75], 1 ; push rbp ; call 0xd046c70
0x00000000004032c5 : ror dword ptr [rax - 0x7f], -0x3c ; mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000408edd : ror dword ptr [rcx - 0x7d], cl ; ret
0x000000000040ae3b : ror dword ptr [rdi], -0x69 ; ret 0x348b
0x000000000040ae3a : ror dword ptr cs:[rdi], -0x69 ; ret 0x348b
0x0000000000426586 : sahf ; ret 0x5588
0x0000000000425c46 : sahf ; ret 0xc8b
0x0000000000401a3e : sal byte ptr [rsp + rsi*8 + 0x5d], -0x41 ; enter 0x62b2, 0 ; jmp rax
0x0000000000412c84 : sal dh, cl ; ret 0x8901
0x000000000042aa39 : sar bh, 1 ; call qword ptr [rax]
0x0000000000401a6e : sar eax, 1 ; jne 0x401a79 ; pop rbp ; ret
0x0000000000401a6d : sar rax, 1 ; jne 0x401a7a ; pop rbp ; ret
0x00000000004290ad : sbb al, -1 ; call rax
0x000000000042a314 : sbb al, 0x10 ; add byte ptr [rax], al ; clc ; sbb bh, bh ; jmp qword ptr [rdi]
0x000000000042907d : sbb bh, bh ; call qword ptr [rax]
0x000000000042a3b9 : sbb bh, bh ; jmp qword ptr [rbx]
0x000000000042a2f9 : sbb bh, bh ; jmp qword ptr [rdi]
0x0000000000427628 : sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000411f20 : sbb cl, byte ptr [rcx - 0x7f] ; ret
0x00000000004291d1 : sbb dword ptr [rax], eax ; add al, dh ; ret 0xffff
0x0000000000425617 : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004161bd : scasd eax, dword ptr [rdi] ; ret
0x0000000000401b19 : scasd eax, dword ptr [rdi] ; ret 0x125
0x0000000000403b49 : scasd eax, dword ptr [rdi] ; ret 0x8141
0x000000000040ac84 : sete al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004294f0 : shl bh, 1 ; std ; call qword ptr [rsi]
0x000000000040ac86 : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000409016 : shl dword ptr [rsi + 0xf], 0x5c ; ret 0xf66
0x000000000041bc2f : shl edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000041bbc8 : shl edx, cl ; or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x000000000041bbff : shr edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000042a2f5 : sldt word ptr [rax] ; call 0x2842a21b
0x0000000000425b8a : stc ; add byte ptr [r8], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x0000000000405f34 : stc ; add byte ptr cs:[rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x0000000000426580 : stc ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x0000000000425c40 : stc ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x0000000000428d0e : std ; call qword ptr [rax]
0x00000000004295d2 : std ; call qword ptr [rdx]
0x00000000004294f2 : std ; call qword ptr [rsi]
0x0000000000428d56 : std ; jmp qword ptr [rax]
0x0000000000428d16 : std ; jmp rax
0x0000000000425a4b : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000428d55 : stosb byte ptr [rdi], al ; std ; jmp qword ptr [rax]
0x0000000000429a78 : sub byte ptr [rax - 2], bl ; jmp qword ptr [rcx]
0x0000000000427b31 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000427b30 : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000420a42 : test al, 2 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000427ada : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004225f5 : test byte ptr [rip - 0x17000000], al ; ret
0x0000000000407efb : test dword ptr [rip - 0x17000000], eax ; ret
0x000000000040695a : test dword ptr [rip - 0x17000000], eax ; ret 0
0x00000000004141df : test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x00000000004129f1 : test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x000000000041d698 : test dword ptr [rip - 0x17000000], eax ; ret 0xb
0x0000000000413adc : test dword ptr [rip - 0x17000000], eax ; ret 1
0x0000000000403827 : test dword ptr [rip - 0x17000000], eax ; ret 4
0x0000000000403e2a : test dword ptr [rip - 0x17000000], eax ; ret 6
0x0000000000410c77 : test dword ptr [rip - 0x17000000], eax ; ret 8
0x000000000041a5c3 : test eax, 0x48fffffc ; add esp, 0x10 ; pop rbp ; ret
0x0000000000404f75 : xchg eax, ebp ; ret
0x0000000000402c46 : xchg eax, ebp ; ret 0x348b
0x00000000004047c2 : xchg eax, ebp ; ret 0x5588
0x000000000041c234 : xchg eax, ebp ; ret 0x8041
0x0000000000419fa2 : xchg eax, ebp ; ret 0x8b44
0x00000000004034d8 : xchg eax, ebp ; ret 0xc8b
0x00000000004272e4 : xchg eax, ebp ; ret 0xd284
0x0000000000403315 : xchg eax, ebp ; ret 0xe280
0x00000000004085c1 : xchg eax, ebp ; ret 0xf280
0x00000000004200b8 : xchg eax, ebx ; ret 0x348b
0x000000000040748b : xchg eax, edi ; ret 0x348b
0x0000000000409943 : xchg eax, edx ; ret 0x348b
0x0000000000412ad7 : xchg eax, esi ; ret 0x348b
0x0000000000403b5b : xchg eax, esp ; ret
0x0000000000405e86 : xchg eax, esp ; ret 0x348b
0x0000000000402c73 : xchg eax, esp ; ret 0x8141
0x000000000040ad2c : xchg eax, esp ; ret 0x8b44
0x0000000000403e42 : xchg eax, esp ; ret 0xc8b
0x00000000004171bb : xchg eax, esp ; ret 0xd284
0x000000000040292a : xchg eax, esp ; ret 0xe280
0x0000000000403c34 : xchg eax, esp ; ret 0xf981
0x000000000041ecb8 : xchg eax, esp ; ret 0xfb81
0x00000000004033c2 : xchg eax, esp ; ret 0xfe81
0x000000000041fedf : xchg eax, esp ; ret 0xff81
0x000000000040ac85 : xchg eax, esp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000042a5e1 : xchg edi, edi ; jmp qword ptr [rcx]
0x000000000041bbcc : xlatb ; mov rax, rdi ; pop rbp ; ret
0x0000000000403b1c : xor al, 0x25 ; mov bl, 0x62 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000429135 : xor al, 0xffffffffffffffff ; call qword ptr [rax]
0x0000000000429125 : xor bh, bh ; call rax
0x0000000000416d97 : xor byte ptr [rax - 0x75], cl ; add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x0000000000416e39 : xor byte ptr [rax - 0x75], cl ; add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x000000000040b957 : xor cl, byte ptr [rax - 0x75] ; call rcx
0x0000000000411976 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
