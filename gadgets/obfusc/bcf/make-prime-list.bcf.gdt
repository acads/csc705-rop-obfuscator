0x0000000000401e1f : add bl, dh ; ret
0x0000000000401e1d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000401e1b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000401e1c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040098c : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret
0x0000000000401ca6 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x0000000000400981 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x0000000000400906 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x125
0x0000000000400a39 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x000000000040191a : add byte ptr [rax], al ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004006e3 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000400799 : add byte ptr [rax], al ; jmp 0x4006f9
0x0000000000401d60 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000401e1e : add byte ptr [rax], al ; ret
0x000000000040098e : add byte ptr [rcx + 0xf], al ; pushfq ; ret
0x0000000000401ca8 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x0000000000400983 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x0000000000400a35 : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x0000000000400898 : add byte ptr [rcx], al ; ret
0x0000000000400908 : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x125
0x0000000000400a3b : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x0000000000400894 : add eax, 0x202816 ; add ebx, esi ; ret
0x000000000040085b : add eax, edx ; sar rax, 1 ; jne 0x40086c ; pop rbp ; ret
0x0000000000400899 : add ebx, esi ; ret
0x000000000040107c : add esp, 0x20 ; pop rbp ; ret
0x0000000000401bc0 : add esp, 0x40 ; pop rbp ; ret
0x000000000040191d : add esp, 0x60 ; pop rbp ; ret
0x0000000000400f95 : add esp, 0x70 ; pop rbp ; ret
0x00000000004006e6 : add esp, 8 ; ret
0x000000000040085a : add rax, rdx ; sar rax, 1 ; jne 0x40086d ; pop rbp ; ret
0x000000000040107b : add rsp, 0x20 ; pop rbp ; ret
0x0000000000401bbf : add rsp, 0x40 ; pop rbp ; ret
0x000000000040191c : add rsp, 0x60 ; pop rbp ; ret
0x0000000000400f94 : add rsp, 0x70 ; pop rbp ; ret
0x00000000004006e5 : add rsp, 8 ; ret
0x0000000000400897 : and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000401df9 : call qword ptr [r12 + rbx*8]
0x0000000000401dfa : call qword ptr [rsp + rbx*8]
0x00000000004008bd : call rax
0x0000000000401fbb : call rsp
0x000000000040085f : clc ; jne 0x400868 ; pop rbp ; ret
0x000000000040081d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x400830 ; pop rbp ; ret
0x0000000000401d5e : cmp eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000400f93 : cwde ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000400833 : cwde ; xor byte ptr [rax], ah ; jmp rax
0x0000000000400873 : cwde ; xor byte ptr [rax], ah ; jmp rdx
0x0000000000401ca4 : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x0000000000401bbe : enter -0x7cb8, -0x3c ; pop rbp ; ret
0x0000000000401715 : fiadd dword ptr [rcx - 0xa] ; ret 0x4001
0x0000000000400995 : fiadd dword ptr [rcx - 0xa] ; ret 0x8901
0x0000000000401dfc : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000400830 : hlt ; pop rbp ; mov edi, 0x603098 ; jmp rax
0x0000000000400a37 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x0000000000400823 : ja 0x40082a ; pop rbp ; ret
0x000000000040082f : je 0x40082d ; pop rbp ; mov edi, 0x603098 ; jmp rax
0x000000000040079b : jmp 0x4006f7
0x0000000000400837 : jmp rax
0x0000000000400877 : jmp rdx
0x0000000000400860 : jne 0x400867 ; pop rbp ; ret
0x0000000000400f97 : jo 0x400ff8 ; ret
0x0000000000400893 : mov byte ptr [rip + 0x202816], 1 ; ret
0x0000000000401bbc : mov dword ptr [rbp - 0x38], eax ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004010f7 : mov dword ptr [rdx + 0x10], eax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004008fd : mov eax, 0x89006030 ; ret 0xea81
0x0000000000401078 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401d63 : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000400f91 : mov eax, dword ptr [rbp - 0x68] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004008bb : mov ebp, esp ; call rax
0x0000000000400821 : mov ebp, esp ; ja 0x40082c ; pop rbp ; ret
0x00000000004008b5 : mov edi, 0x602e20 ; mov rbp, rsp ; call rax
0x0000000000400832 : mov edi, 0x603098 ; jmp rax
0x0000000000400872 : mov edi, 0x603098 ; jmp rdx
0x0000000000401df7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000401df6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000400870 : mov esi, eax ; mov edi, 0x603098 ; jmp rdx
0x00000000004010f6 : mov qword ptr [rdx + 0x10], rax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401077 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401d62 : mov rax, qword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004008ba : mov rbp, rsp ; call rax
0x0000000000400820 : mov rbp, rsp ; ja 0x40082d ; pop rbp ; ret
0x000000000040086f : mov rsi, rax ; mov edi, 0x603098 ; jmp rdx
0x0000000000401e18 : nop dword ptr [rax + rax] ; ret
0x00000000004008fb : or al, 0x25 ; mov eax, 0x89006030 ; ret 0xea81
0x0000000000401e0c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000401e0e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000401e10 : pop r14 ; pop r15 ; ret
0x0000000000401e12 : pop r15 ; ret
0x0000000000400892 : pop rbp ; mov byte ptr [rip + 0x202816], 1 ; ret
0x0000000000400831 : pop rbp ; mov edi, 0x603098 ; jmp rax
0x000000000040086e : pop rbp ; mov rsi, rax ; mov edi, 0x603098 ; jmp rdx
0x0000000000401e0b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000401e0f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000400825 : pop rbp ; ret
0x0000000000401e13 : pop rdi ; ret
0x0000000000401e11 : pop rsi ; pop r15 ; ret
0x0000000000401e0d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004008b4 : push rbp ; mov edi, 0x602e20 ; mov rbp, rsp ; call rax
0x0000000000400991 : pushfq ; ret
0x0000000000401cab : pushfq ; ret 0x845
0x00000000004006e9 : ret
0x000000000040090b : ret 0x125
0x00000000004007a2 : ret 0x2028
0x0000000000401c76 : ret 0x348b
0x0000000000401718 : ret 0x4001
0x0000000000400987 : ret 0x8141
0x0000000000401cac : ret 0x845
0x0000000000400998 : ret 0x8901
0x00000000004016ae : ret 0x8b48
0x0000000000400a3e : ret 0xa3d
0x0000000000400ee5 : ret 0xb0
0x0000000000400855 : ret 0xc148
0x0000000000400902 : ret 0xea81
0x0000000000400a4c : ret 0xf01
0x0000000000400c6e : ret 1
0x0000000000400c66 : ror byte ptr [r11 - 0x35763bb3], -0x7f ; ret 1
0x000000000040085c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40086b ; pop rbp ; ret
0x0000000000400c67 : ror byte ptr [rbx - 0x35763bb3], -0x7f ; ret 1
0x000000000040082e : sal byte ptr [rsp + rsi*8 + 0x5d], -0x41 ; cwde ; xor byte ptr [rax], ah ; jmp rax
0x000000000040085e : sar eax, 1 ; jne 0x400869 ; pop rbp ; ret
0x000000000040085d : sar rax, 1 ; jne 0x40086a ; pop rbp ; ret
0x000000000040090a : scasd eax, dword ptr [rdi] ; ret 0x125
0x0000000000400896 : sub byte ptr [rax], ah ; add byte ptr [rcx], al ; ret
0x0000000000401e25 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000401e24 : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000401e1a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000401c75 : xchg eax, esp ; ret 0x348b
0x0000000000400986 : xchg eax, esp ; ret 0x8141
0x0000000000400a3d : xchg eax, esp ; ret 0xa3d
0x0000000000400834 : xor byte ptr [rax], ah ; jmp rax
0x0000000000400874 : xor byte ptr [rax], ah ; jmp rdx
