0x0000000000454375 : adc al, -3 ; jmp qword ptr [rax]
0x0000000000454289 : adc al, 0 ; add al, ah ; ret
0x00000000004542a1 : adc al, 0 ; add byte ptr [rax - 0x33], al ; cld ; call rax
0x0000000000454279 : adc al, 0 ; add byte ptr [rax - 0x46], al ; cld ; jmp qword ptr [rax]
0x0000000000456cfc : adc al, 0x22 ; add byte ptr [rax], al ; ret
0x00000000004194a1 : adc al, 0x25 ; or al, 0xffffffffffffff93 ; add byte ptr gs:[rbp - 0x77], al ; ret
0x000000000040749d : adc al, 0x25 ; or al, 0xffffffffffffff93 ; add byte ptr gs:[rcx - 0x77], al ; ret
0x0000000000422aee : adc al, 0x25 ; ret
0x0000000000455d7d : adc al, byte ptr [rax] ; add byte ptr [rax + 0x6d], dh ; std ; jmp qword ptr [rcx]
0x000000000041e030 : adc byte ptr [r8 + 0x39], r9b ; ret 0x870f
0x000000000041e5d1 : adc byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000041e031 : adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x0000000000443923 : adc byte ptr [rax - 0x75], cl ; jge 0x4438ed ; call rax
0x0000000000443922 : adc byte ptr [rax - 0x75], cl ; jge 0x4438ee ; call rax
0x0000000000443f05 : adc byte ptr [rax - 0x75], cl ; jge 0x443ecf ; call rax
0x0000000000443f04 : adc byte ptr [rax - 0x75], cl ; jge 0x443ed0 ; call rax
0x0000000000444163 : adc byte ptr [rax - 0x75], cl ; jge 0x44412d ; call rax
0x0000000000444162 : adc byte ptr [rax - 0x75], cl ; jge 0x44412e ; call rax
0x0000000000455b0d : adc byte ptr [rax], al ; add al, dl ; sub ebp, edi ; call rcx
0x000000000044b6b0 : adc byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000454614 : adc byte ptr [rbx], -2 ; jmp rax
0x0000000000455610 : adc dh, -4 ; call qword ptr [rsi]
0x000000000041c10f : adc dword ptr [rax + 1], ecx ; ret 0x8948
0x00000000004541f9 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x6e], dh ; cld ; call qword ptr [rax]
0x00000000004541e9 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x6f], ah ; cld ; call rax
0x0000000000455c5d : adc dword ptr [rax], eax ; add byte ptr [rax], ah ; pop rbp ; std ; call qword ptr [rdx]
0x0000000000408460 : adc dword ptr [rcx], esp ; ret 0x1189
0x0000000000455e65 : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x6e], bh ; std ; jmp qword ptr [rdi]
0x0000000000454615 : adc edi, esi ; jmp rax
0x00000000004555cb : add ah, ah ; or al, byte ptr [rax] ; add al, ah ; sar ah, cl ; call qword ptr [rsi]
0x0000000000454fab : add ah, al ; add al, 0 ; add al, dl ; cld ; call qword ptr [rsi]
0x00000000004558d3 : add ah, ch ; or eax, 0x5580000 ; std ; call qword ptr [rdx]
0x0000000000456cdb : add ah, dh ; and dword ptr [rax], eax ; add byte ptr [rax], dh ; ret
0x0000000000456cbb : add ah, dl ; and dword ptr [rax], eax ; add byte ptr [rax], dl ; ret
0x0000000000454fad : add al, 0 ; add al, dl ; cld ; call qword ptr [rsi]
0x0000000000422cc2 : add al, 0x25 ; push 0x5d006589 ; ret
0x0000000000416774 : add al, 2 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000456a0f : add al, ah ; jle 0x456a15 ; call rcx
0x0000000000454b8f : add al, ah ; loope 0x454b91 ; jmp rdx
0x000000000045428b : add al, ah ; ret
0x00000000004555cf : add al, ah ; sar ah, cl ; call qword ptr [rsi]
0x0000000000454133 : add al, al ; sbb ah, bh ; call rax
0x0000000000457287 : add al, bl ; jbe 0x45728e ; call rax
0x0000000000457447 : add al, bl ; xchg bh, bh ; jmp rbx
0x0000000000434db5 : add al, byte ptr [rax] ; add al, ch ; ret
0x0000000000454d35 : add al, byte ptr [rax] ; add byte ptr [rax + 0x4e], cl ; sti ; call rdi
0x00000000004482d3 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000041d8d2 : add al, byte ptr [rax] ; pop rbp ; ret
0x000000000041dacb : add al, ch ; jg 0x41da8a ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041daca : add al, ch ; jg 0x41da8b ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000445fec : add al, ch ; out dx, al ; ret
0x000000000040eeb7 : add al, ch ; ret
0x0000000000414898 : add al, ch ; ret 0xfedc
0x0000000000455017 : add al, cl ; push rax ; cld ; jmp rcx
0x00000000004543b3 : add al, dh ; and bh, ch ; jmp qword ptr [rax]
0x0000000000454a0b : add al, dh ; mov al, -1 ; call qword ptr [rax]
0x0000000000454faf : add al, dl ; cld ; call qword ptr [rsi]
0x00000000004546d3 : add al, dl ; sub al, -2 ; jmp rax
0x0000000000455b0f : add al, dl ; sub ebp, edi ; call rcx
0x0000000000454a84 : add bh, -1 ; call qword ptr [rax]
0x00000000004564d9 : add bh, dh ; jmp qword ptr [rdi]
0x000000000045079f : add bl, dh ; ret
0x0000000000403f5f : add byte ptr [r8 - 0x73], r9b ; xor al, 0x25 ; ret
0x000000000040eeb4 : add byte ptr [r8], al ; add al, ch ; ret
0x000000000044e63b : add byte ptr [r8], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x0000000000454373 : add byte ptr [rax + 0x14], al ; std ; jmp qword ptr [rax]
0x00000000004543a3 : add byte ptr [rax + 0x1e], al ; std ; jmp rax
0x0000000000454d37 : add byte ptr [rax + 0x4e], cl ; sti ; call rdi
0x0000000000455013 : add byte ptr [rax + 0x50c80000], ch ; cld ; jmp rcx
0x0000000000455d7f : add byte ptr [rax + 0x6d], dh ; std ; jmp qword ptr [rcx]
0x000000000041dbd9 : add byte ptr [rax + 0xf012401], dh ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000448c81 : add byte ptr [rax + 1], cl ; ret 0x4a3b
0x000000000041e6b0 : add byte ptr [rax + 1], cl ; ret 0x4a8b
0x000000000041e668 : add byte ptr [rax + 1], cl ; ret 0x8b48
0x00000000004558d7 : add byte ptr [rax + 5], bl ; std ; call qword ptr [rdx]
0x0000000000454b8b : add byte ptr [rax + rax - 0x1e200000], ah ; cli ; jmp rdx
0x0000000000454278 : add byte ptr [rax + rax], dl ; add byte ptr [rax - 0x46], al ; cld ; jmp qword ptr [rax]
0x0000000000455343 : add byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x79], bh ; cld ; call qword ptr [rbx]
0x0000000000455b0b : add byte ptr [rax + rdx], ah ; add byte ptr [rax], al ; shr byte ptr [rcx], 1 ; std ; call rcx
0x000000000045618f : add byte ptr [rax - 0x1e], dh ; std ; call qword ptr [rdi]
0x00000000004542a3 : add byte ptr [rax - 0x33], al ; cld ; call rax
0x000000000045427b : add byte ptr [rax - 0x46], al ; cld ; jmp qword ptr [rax]
0x0000000000455507 : add byte ptr [rax - 0x48], ch ; cld ; call qword ptr [rdx]
0x0000000000454513 : add byte ptr [rax - 0x4c], ah ; std ; call rax
0x0000000000455e67 : add byte ptr [rax - 0x6e], bh ; std ; jmp qword ptr [rdi]
0x00000000004541fb : add byte ptr [rax - 0x6e], dh ; cld ; call qword ptr [rax]
0x00000000004541eb : add byte ptr [rax - 0x6f], ah ; cld ; call rax
0x0000000000422aeb : add byte ptr [rax - 0x73], cl ; adc al, 0x25 ; ret
0x000000000041a096 : add byte ptr [rax - 0x73], cl ; clc ; pop rbx ; pop rbp ; ret
0x0000000000403f60 : add byte ptr [rax - 0x73], cl ; xor al, 0x25 ; ret
0x0000000000427947 : add byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x0000000000443f83 : add byte ptr [rax - 0x75], cl ; jge 0x443f45 ; call rax
0x000000000041a5e1 : add byte ptr [rax - 0x75], cl ; loopne 0x41a64a ; ret
0x0000000000425b57 : add byte ptr [rax - 0x75], cl ; loopne 0x425bae ; mov esp, ebp ; pop rbp ; ret
0x0000000000443b62 : add byte ptr [rax - 0x75], cl ; mov ebp, 0xfffffba0 ; call rax
0x0000000000403f42 : add byte ptr [rax - 0x75], cl ; push rbp ; mov byte ptr [rax - 0x77], cl ; or ch, cl ; ret
0x000000000043d9e0 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000422870 : add byte ptr [rax - 0x75], cl ; xchg eax, r8d ; pop rbp ; ret
0x0000000000411ebb : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000436d0d : add byte ptr [rax - 0x77], cl ; jge 0x436d10 ; pop rbp ; ret
0x00000000004262f9 : add byte ptr [rax - 0x77], cl ; or cl, ch ; ret
0x0000000000421d7f : add byte ptr [rax - 0x77], cl ; ret 0x28e8
0x0000000000421a45 : add byte ptr [rax - 0x77], cl ; ret 0x62e8
0x0000000000403ba2 : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x0000000000455347 : add byte ptr [rax - 0x79], bh ; cld ; call qword ptr [rbx]
0x0000000000454653 : add byte ptr [rax], ah ; and edi, esi ; jmp rax
0x000000000045696f : add byte ptr [rax], ah ; jbe 0x456975 ; jmp rcx
0x0000000000455c5f : add byte ptr [rax], ah ; pop rbp ; std ; call qword ptr [rdx]
0x0000000000454372 : add byte ptr [rax], al ; adc al, -3 ; jmp qword ptr [rax]
0x0000000000456cfa : add byte ptr [rax], al ; adc al, 0x22 ; add byte ptr [rax], al ; ret
0x0000000000454612 : add byte ptr [rax], al ; adc byte ptr [rbx], -2 ; jmp rax
0x000000000045560e : add byte ptr [rax], al ; adc dh, -4 ; call qword ptr [rsi]
0x0000000000456cd9 : add byte ptr [rax], al ; add ah, dh ; and dword ptr [rax], eax ; add byte ptr [rax], dh ; ret
0x0000000000456cb9 : add byte ptr [rax], al ; add ah, dl ; and dword ptr [rax], eax ; add byte ptr [rax], dl ; ret
0x0000000000454b8d : add byte ptr [rax], al ; add al, ah ; loope 0x454b93 ; jmp rdx
0x000000000040eeb5 : add byte ptr [rax], al ; add al, ch ; ret
0x0000000000454a82 : add byte ptr [rax], al ; add bh, -1 ; call qword ptr [rax]
0x000000000045079d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000448c7f : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x4a3b
0x000000000041e6ae : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x4a8b
0x000000000041e666 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8b48
0x0000000000422ae9 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; adc al, 0x25 ; ret
0x000000000041a094 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; clc ; pop rbx ; pop rbp ; ret
0x0000000000427945 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x000000000041a5df : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; loopne 0x41a64c ; ret
0x000000000042286e : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; xchg eax, r8d ; pop rbp ; ret
0x0000000000411eb9 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000436d0b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jge 0x436d12 ; pop rbp ; ret
0x00000000004262f7 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; or cl, ch ; ret
0x0000000000421d7d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x28e8
0x0000000000421a43 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x62e8
0x0000000000403ba0 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000045079b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004007b8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x00000000004007ba : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x0000000000405098 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042496c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000044f6a9 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000436d0a : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000041a5de : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x20] ; pop rbp ; ret
0x0000000000427944 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000045079c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004007bc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x00000000004194ae : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x0000000000406334 : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x8141
0x0000000000433d18 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000041c3f9 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000421cb4 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000041939e : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7038b], cl ; ret 0xb0
0x0000000000419414 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7078b], cl ; ret 0xb0
0x00000000004068b4 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret
0x0000000000408016 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x844
0x0000000000402d27 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x00000000004074aa : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x0000000000411e8b : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x125
0x000000000041f3f9 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x00000000004442df : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x0000000000414b3c : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8b44
0x000000000040566c : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x00000000004068a9 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x0000000000423709 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8b44
0x000000000040b1ad : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xf981
0x0000000000416fab : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xfa81
0x0000000000446543 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xfb81
0x0000000000416bd0 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xfe81
0x00000000004181b0 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xff81
0x0000000000433cb8 : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x51], al ; ret
0x000000000044e570 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000044e63c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x0000000000405677 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret
0x0000000000415ef5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x000000000044f032 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x000000000042150c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x0000000000442f64 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret
0x0000000000402cab : add byte ptr [rax], al ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x125
0x00000000004298ba : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000409be4 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x0000000000440a74 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x3c8b
0x00000000004109dd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x48b
0x000000000043e1ae : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x00000000004173ff : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x000000000044ffa0 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000407abe : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000424a5d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf280
0x000000000042294a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0x348b
0x0000000000409cbd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x00000000004051cf : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000409da7 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x00000000004063f0 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x48b
0x0000000000407151 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x0000000000430771 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x0000000000405bfc : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x00000000004089f9 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x0000000000434cb7 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004215c2 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000041791b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xfe81
0x000000000044776b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xff81
0x0000000000456d19 : add byte ptr [rax], al ; add byte ptr [rdx], dh ; add byte ptr [rax], al ; push rax ; ret
0x0000000000456cf9 : add byte ptr [rax], al ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; ret
0x0000000000454322 : add byte ptr [rax], al ; add ch, bh ; cld ; jmp rax
0x000000000045403a : add byte ptr [rax], al ; add cl, ah ; cli ; call rax
0x000000000040eeb0 : add byte ptr [rax], al ; add cl, ch ; add byte ptr [r8], al ; add al, ch ; ret
0x00000000004178d1 : add byte ptr [rax], al ; add cl, ch ; call qword ptr [rsi]
0x0000000000443f6b : add byte ptr [rax], al ; add cl, ch ; cwde ; add dword ptr [rax], eax ; add cl, ch ; ret 0
0x000000000040af65 : add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000409622 : add byte ptr [rax], al ; add cl, ch ; ret 0
0x0000000000431ce1 : add byte ptr [rax], al ; add cl, ch ; ret 0x13
0x00000000004304f3 : add byte ptr [rax], al ; add cl, ch ; ret 0x2a
0x0000000000444f2a : add byte ptr [rax], al ; add cl, ch ; ret 0xb
0x00000000004315de : add byte ptr [rax], al ; add cl, ch ; ret 1
0x00000000004403c2 : add byte ptr [rax], al ; add cl, ch ; ret 3
0x000000000041335f : add byte ptr [rax], al ; add cl, ch ; ret 8
0x00000000004564d6 : add byte ptr [rax], al ; add dil, sil ; jmp qword ptr [rdi]
0x0000000000454036 : add byte ptr [rax], al ; add qword ptr [r8], r8 ; add byte ptr [rax], al ; loope 0x454042 ; call rax
0x0000000000454d32 : add byte ptr [rax], al ; add r8b, byte ptr [rax] ; add byte ptr [rax + 0x4e], cl ; sti ; call rdi
0x0000000000402d41 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004502e3 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000042ee87 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041d448 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000044fdb1 : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000402123 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000455b0a : add byte ptr [rax], al ; and al, 0x10 ; add byte ptr [rax], al ; shr byte ptr [rcx], 1 ; std ; call rcx
0x000000000045560a : add byte ptr [rax], al ; and al, 0xb ; add byte ptr [rax], al ; adc dh, -4 ; call qword ptr [rsi]
0x0000000000455c5e : add byte ptr [rax], al ; and byte ptr [rbp - 3], bl ; call qword ptr [rdx]
0x000000000045696e : add byte ptr [rax], al ; and byte ptr [rsi - 2], dh ; jmp rcx
0x0000000000454362 : add byte ptr [rax], al ; and byte ptr [rsi], cl ; std ; jmp rax
0x0000000000456676 : add byte ptr [rax], al ; call 0x11456488
0x0000000000415f65 : add byte ptr [rax], al ; call 0x402184
0x0000000000455ec6 : add byte ptr [rax], al ; cwde ; xchg eax, ebx ; std ; call rbx
0x0000000000455ec2 : add byte ptr [rax], al ; fcom qword ptr [rbx] ; add byte ptr [rax], al ; cwde ; xchg eax, ebx ; std ; call rbx
0x0000000000457286 : add byte ptr [rax], al ; fdiv dword ptr [rsi - 1] ; call rax
0x0000000000456cda : add byte ptr [rax], al ; hlt ; and dword ptr [rax], eax ; add byte ptr [rax], dh ; ret
0x00000000004555ca : add byte ptr [rax], al ; in al, 0xa ; add byte ptr [rax], al ; loopne 0x4555ad ; cld ; call qword ptr [rsi]
0x00000000004558d2 : add byte ptr [rax], al ; in al, dx ; or eax, 0x5580000 ; std ; call qword ptr [rdx]
0x0000000000455c5a : add byte ptr [rax], al ; je 0x455c78 ; add byte ptr [rax], al ; and byte ptr [rbp - 3], bl ; call qword ptr [rdx]
0x0000000000455e62 : add byte ptr [rax], al ; jl 0x455e82 ; add byte ptr [rax], al ; js 0x455e05 ; std ; jmp qword ptr [rdi]
0x0000000000402159 : add byte ptr [rax], al ; jmp 0x402139
0x00000000004116a4 : add byte ptr [rax], al ; jmp 0x40c279
0x000000000040eeb1 : add byte ptr [rax], al ; jmp 0x40ef0b
0x000000000040b2b9 : add byte ptr [rax], al ; jmp 0x411585
0x000000000040b4be : add byte ptr [rax], al ; jmp 0x4115b2
0x0000000000443f6c : add byte ptr [rax], al ; jmp 0x444113
0x00000000004541fa : add byte ptr [rax], al ; jo 0x454195 ; cld ; call qword ptr [rax]
0x0000000000455d7e : add byte ptr [rax], al ; jo 0x455df4 ; std ; jmp qword ptr [rcx]
0x000000000045618e : add byte ptr [rax], al ; jo 0x456179 ; std ; call qword ptr [rdi]
0x0000000000455346 : add byte ptr [rax], al ; js 0x4552d6 ; cld ; call qword ptr [rbx]
0x0000000000455e66 : add byte ptr [rax], al ; js 0x455e01 ; std ; jmp qword ptr [rdi]
0x000000000041a095 : add byte ptr [rax], al ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000045403b : add byte ptr [rax], al ; loope 0x45403d ; call rax
0x0000000000454b8e : add byte ptr [rax], al ; loopne 0x454b78 ; cli ; jmp rdx
0x00000000004555ce : add byte ptr [rax], al ; loopne 0x4555a9 ; cld ; call qword ptr [rsi]
0x0000000000456d9a : add byte ptr [rax], al ; mov ah, 0x22 ; add byte ptr [rax], al ; rol ah, -2 ; jmp qword ptr [rbx]
0x0000000000454522 : add byte ptr [rax], al ; mov al, -0x49 ; std ; call qword ptr [rax]
0x000000000045422a : add byte ptr [rax], al ; mov al, -0x68 ; cld ; call rax
0x0000000000454172 : add byte ptr [rax], al ; mov al, 0x60 ; cld ; jmp rax
0x000000000042514f : add byte ptr [rax], al ; mov al, byte ptr [rbp - 0xa] ; movsx eax, al ; pop rbp ; ret
0x00000000004433bc : add byte ptr [rax], al ; mov al, sil ; movzx eax, al ; pop rbp ; ret
0x000000000044320d : add byte ptr [rax], al ; mov ax, si ; movzx eax, ax ; pop rbp ; ret
0x0000000000454d96 : add byte ptr [rax], al ; mov cl, dl ; sti ; call qword ptr [rsi]
0x000000000042f5e2 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000044f6ab : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x000000000043621a : add byte ptr [rax], al ; mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000043673d : add byte ptr [rax], al ; mov eax, edi ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000436d0c : add byte ptr [rax], al ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000042f252 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000041a5e0 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x20] ; pop rbp ; ret
0x0000000000427d79 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000042286f : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x70] ; pop rbp ; ret
0x0000000000427946 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000411eba : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000456672 : add byte ptr [rax], al ; mov word ptr [rbx], ds ; add byte ptr [rax], al ; call 0x1145648c
0x0000000000454b8a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add al, ah ; loope 0x454b96 ; jmp rdx
0x0000000000436ab2 : add byte ptr [rax], al ; movzx eax, ax ; mov rsp, rbp ; pop rbp ; ret
0x000000000045475a : add byte ptr [rax], al ; nop ; mov edi, esi ; call qword ptr [rax]
0x0000000000455432 : add byte ptr [rax], al ; or qword ptr [rax], r8 ; add byte ptr [rax], ch ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; call qword ptr [rax]
0x0000000000414099 : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000433d19 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000418dfd : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000421cb5 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000455342 : add byte ptr [rax], al ; pop rsp ; or byte ptr [rax], al ; add byte ptr [rax - 0x79], bh ; cld ; call qword ptr [rbx]
0x0000000000457442 : add byte ptr [rax], al ; pop rsp ; sub dword ptr [rax], eax ; add al, bl ; xchg bh, bh ; jmp rbx
0x0000000000454a62 : add byte ptr [rax], al ; push rax ; ret
0x0000000000454132 : add byte ptr [rax], al ; rcr byte ptr [rax], -4 ; call rax
0x000000000045079e : add byte ptr [rax], al ; ret
0x00000000004007be : add byte ptr [rax], al ; ret 2
0x0000000000456d9e : add byte ptr [rax], al ; rol ah, -2 ; jmp qword ptr [rbx]
0x0000000000455716 : add byte ptr [rax], al ; sbb dh, ah ; cld ; call qword ptr [rax]
0x0000000000454182 : add byte ptr [rax], al ; shl byte ptr [rcx - 4], 1 ; jmp qword ptr [rax]
0x0000000000455b0e : add byte ptr [rax], al ; shr byte ptr [rcx], 1 ; std ; call rcx
0x00000000004546d2 : add byte ptr [rax], al ; shr byte ptr [rsi + rdi*8], 1 ; jmp rax
0x0000000000454323 : add byte ptr [rax], al ; std ; cld ; jmp rax
0x0000000000454d36 : add byte ptr [rax], al ; sti ; call rdi
0x0000000000455712 : add byte ptr [rax], al ; sub al, 0xc ; add byte ptr [rax], al ; sbb dh, ah ; cld ; call qword ptr [rax]
0x0000000000454693 : add byte ptr [rax], al ; sub dh, bh ; jmp rax
0x000000000045696a : add byte ptr [rax], al ; test byte ptr [rsi], bl ; add byte ptr [rax], al ; and byte ptr [rsi - 2], dh ; jmp rcx
0x0000000000455d7a : add byte ptr [rax], al ; xchg eax, esp ; adc al, byte ptr [rax] ; add byte ptr [rax + 0x6d], dh ; std ; jmp qword ptr [rcx]
0x0000000000456d1a : add byte ptr [rax], al ; xor al, 0x22 ; add byte ptr [rax], al ; push rax ; ret
0x000000000045692e : add byte ptr [rax], al ; xor byte ptr [rbp - 2], dh ; call rsp
0x00000000004540ca : add byte ptr [rax], al ; xor byte ptr [rcx - 5], ah ; jmp qword ptr [rax]
0x00000000004543da : add byte ptr [rax], al ; xor byte ptr [rdx], dh ; std ; call rax
0x0000000000454370 : add byte ptr [rax], bl ; add byte ptr [rax], al ; adc al, -3 ; jmp qword ptr [rax]
0x0000000000455717 : add byte ptr [rax], bl ; out -4, al ; call qword ptr [rax]
0x0000000000455437 : add byte ptr [rax], ch ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; call qword ptr [rax]
0x0000000000454623 : add byte ptr [rax], dh ; and esi, edi ; jmp qword ptr [rax]
0x000000000045692f : add byte ptr [rax], dh ; jne 0x456935 ; call rsp
0x00000000004545d3 : add byte ptr [rax], dh ; or esi, edi ; jmp rax
0x0000000000454833 : add byte ptr [rax], dh ; ret
0x00000000004543db : add byte ptr [rax], dh ; xor bh, ch ; call rax
0x0000000000454180 : add byte ptr [rax], dl ; add byte ptr [rax], al ; shl byte ptr [rcx - 4], 1 ; jmp qword ptr [rax]
0x0000000000456cbf : add byte ptr [rax], dl ; ret
0x0000000000456c9f : add byte ptr [rax], dl ; ret 0xfffe
0x00000000004194b0 : add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x0000000000406336 : add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x8141
0x00000000004194a6 : add byte ptr [rbp - 0x77], al ; ret
0x000000000040632c : add byte ptr [rbp - 0x77], al ; ret 0x8141
0x0000000000433d1a : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000418dfe : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000409abd : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000421cb6 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000045560b : add byte ptr [rbx + rcx], ah ; add byte ptr [rax], al ; adc dh, -4 ; call qword ptr [rsi]
0x0000000000455e63 : add byte ptr [rbx + rdx], bh ; add byte ptr [rax - 0x6e], bh ; std ; jmp qword ptr [rdi]
0x00000000004193a0 : add byte ptr [rbx - 0x76b7038b], cl ; ret 0xb0
0x0000000000419416 : add byte ptr [rbx - 0x76b7078b], cl ; ret 0xb0
0x00000000004085b8 : add byte ptr [rcx + 0x1c0f9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x000000000040714e : add byte ptr [rcx + 0x4000f9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x00000000004089f6 : add byte ptr [rcx + 0x4000f9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x00000000004215fa : add byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xfe81
0x00000000004074c4 : add byte ptr [rcx + 0xf], al ; pushfq ; mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x00000000004068b6 : add byte ptr [rcx + 0xf], al ; pushfq ; ret
0x0000000000408018 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x844
0x0000000000402d29 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x0000000000447776 : add byte ptr [rcx + 0xf], al ; pushfq ; rol dword ptr [rax + rcx - 0x36], -0xa ; ret 0xf01
0x00000000004074ac : add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x0000000000411e8d : add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x125
0x000000000041f3fb : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x00000000004442e1 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x0000000000414b3e : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8b44
0x000000000040566e : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x00000000004068ab : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x000000000042370b : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8b44
0x000000000040b1af : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xf981
0x0000000000416fad : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xfa81
0x0000000000446545 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xfb81
0x0000000000416bd2 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xfe81
0x00000000004181b2 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xff81
0x000000000041805f : add byte ptr [rcx + 0xfe], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000447767 : add byte ptr [rcx + 0xfe], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xff81
0x00000000004348c8 : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000043076d : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x0000000000405bf8 : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x0000000000457443 : add byte ptr [rcx + rbp], bl ; add al, bl ; xchg bh, bh ; jmp rbx
0x0000000000455433 : add byte ptr [rcx + rcx], cl ; add byte ptr [rax], ch ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; call qword ptr [rax]
0x0000000000455c5b : add byte ptr [rcx + rdx], dh ; add byte ptr [rax], ah ; pop rbp ; std ; call qword ptr [rdx]
0x00000000004074a2 : add byte ptr [rcx - 0x77], al ; ret
0x0000000000411e83 : add byte ptr [rcx - 0x77], al ; ret 0x8141
0x0000000000441d8d : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000402968 : add byte ptr [rcx], al ; ret
0x0000000000454037 : add byte ptr [rdi + 1], cl ; add byte ptr [rax], al ; add cl, ah ; cli ; call rax
0x0000000000455283 : add byte ptr [rdi + rax - 0x7e380000], bl ; cld ; jmp qword ptr [rdx]
0x0000000000433cba : add byte ptr [rdi + rcx - 0x51], al ; ret
0x0000000000436ab3 : add byte ptr [rdi], cl ; mov bh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000044e572 : add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000044e63e : add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x0000000000405679 : add byte ptr [rdi], cl ; pushfq ; ret
0x0000000000415ef7 : add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x000000000044f034 : add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x000000000042150e : add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x0000000000442f66 : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret
0x0000000000402cad : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x125
0x00000000004298bc : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000409be6 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x0000000000440a76 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x3c8b
0x00000000004109df : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x48b
0x000000000043e1b0 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x00000000004085be : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x000000000044ffa2 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000407ac0 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000424a5f : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf280
0x000000000042294c : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0x348b
0x0000000000409cbf : add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x00000000004051d1 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000409da9 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x00000000004063f2 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x48b
0x0000000000407154 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x0000000000430773 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x0000000000405bfe : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x00000000004089fc : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x0000000000434cb9 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004215c4 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000041791d : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xfe81
0x000000000044776d : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xff81
0x0000000000454d93 : add byte ptr [rdx + rax - 0x2e780000], ch ; sti ; call qword ptr [rsi]
0x0000000000454d33 : add byte ptr [rdx + rax], cl ; add byte ptr [rax + 0x4e], cl ; sti ; call rdi
0x0000000000455d7b : add byte ptr [rdx + rdx + 0x6d700000], dl ; std ; jmp qword ptr [rcx]
0x0000000000439af2 : add byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000456d1b : add byte ptr [rdx], dh ; add byte ptr [rax], al ; push rax ; ret
0x0000000000456cfb : add byte ptr [rdx], dl ; add byte ptr [rax], al ; ret
0x00000000004540c8 : add byte ptr [rip + 0x61300000], cl ; sti ; jmp qword ptr [rax]
0x000000000042683f : add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x000000000045692b : add byte ptr [rsi + rbx], al ; add byte ptr [rax], dh ; jne 0x456939 ; call rsp
0x000000000045618b : add byte ptr [rsi + rdx - 0x1d900000], ah ; std ; call qword ptr [rdi]
0x0000000000455713 : add byte ptr [rsp + rcx], ch ; add byte ptr [rax], al ; sbb dh, ah ; cld ; call qword ptr [rax]
0x00000000004194a5 : add byte ptr gs:[rbp - 0x77], al ; ret
0x000000000040632b : add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x00000000004074a1 : add byte ptr gs:[rcx - 0x77], al ; ret
0x0000000000411e82 : add byte ptr gs:[rcx - 0x77], al ; ret 0x8141
0x0000000000454324 : add ch, bh ; cld ; jmp rax
0x000000000045403c : add cl, ah ; cli ; call rax
0x000000000040eeb2 : add cl, ch ; add byte ptr [r8], al ; add al, ch ; ret
0x00000000004178d3 : add cl, ch ; call qword ptr [rsi]
0x0000000000443f6d : add cl, ch ; cwde ; add dword ptr [rax], eax ; add cl, ch ; ret 0
0x000000000040af67 : add cl, ch ; ret
0x0000000000409624 : add cl, ch ; ret 0
0x0000000000431ce3 : add cl, ch ; ret 0x13
0x00000000004304f5 : add cl, ch ; ret 0x2a
0x0000000000444f2c : add cl, ch ; ret 0xb
0x00000000004315e0 : add cl, ch ; ret 1
0x00000000004403c4 : add cl, ch ; ret 3
0x0000000000413361 : add cl, ch ; ret 8
0x00000000004564d8 : add dil, sil ; jmp qword ptr [rdi]
0x000000000043489a : add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x000000000043493c : add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x0000000000454039 : add dword ptr [rax], eax ; add byte ptr [rax], al ; loope 0x45403f ; call rax
0x0000000000445ab4 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000424643 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004085bc : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x0000000000443f70 : add dword ptr [rax], eax ; add cl, ch ; ret 0
0x0000000000422025 : add dword ptr [rax], eax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041dbdb : add dword ptr [rcx + rax], esp ; movzx eax, al ; pop rbp ; ret
0x000000000041d28b : add dword ptr [rdi], ecx ; mov dh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041a1b2 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000414399 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042c998 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000415007 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000407406 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x000000000042a500 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x000000000043c0d4 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000409637 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000412208 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000428688 : add dword ptr [rdi], ecx ; ror dword ptr cs:[rdi], -0x69 ; ret 0x348b
0x0000000000449e83 : add dword ptr [rdi], ecx ; test byte ptr [rip - 0x17000000], al ; ret
0x00000000004178cd : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; call qword ptr [rsi]
0x000000000040af61 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret
0x000000000040961e : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0
0x0000000000431cdd : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x00000000004304ef : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x0000000000444f26 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0xb
0x00000000004315da : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 1
0x000000000041335b : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 8
0x000000000044ce17 : add dword ptr [rdi], ecx ; xchg eax, esi ; ret 0x348b
0x000000000042b3d7 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x348b
0x0000000000402964 : add eax, 0x255b6e ; add ebx, esi ; ret
0x0000000000418dfc : add eax, 0x415b0000 ; pop rsi ; pop rbp ; ret
0x000000000041525d : add eax, 0x458a0000 ; ret
0x0000000000411eb8 : add eax, 0x48000000 ; mov esp, ebp ; pop rbp ; ret
0x0000000000455015 : add eax, 0x50c80000 ; cld ; jmp rcx
0x00000000004178d0 : add eax, 0xe9000000 ; call qword ptr [rsi]
0x000000000040af64 : add eax, 0xe9000000 ; ret
0x0000000000409621 : add eax, 0xe9000000 ; ret 0
0x0000000000431ce0 : add eax, 0xe9000000 ; ret 0x13
0x00000000004304f2 : add eax, 0xe9000000 ; ret 0x2a
0x0000000000444f29 : add eax, 0xe9000000 ; ret 0xb
0x00000000004315dd : add eax, 0xe9000000 ; ret 1
0x00000000004403c1 : add eax, 0xe9000000 ; ret 3
0x000000000041335e : add eax, 0xe9000000 ; ret 8
0x000000000044dc56 : add eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000426897 : add eax, ebp ; ret
0x000000000040292b : add eax, edx ; sar rax, 1 ; jne 0x40293c ; pop rbp ; ret
0x000000000044a669 : add eax, esi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x0000000000402969 : add ebx, esi ; ret
0x0000000000413c77 : add ecx, ebp ; ret 0xfffc
0x000000000044646b : add edi, eax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x000000000041a6c0 : add esi, eax ; mov rax, rsi ; pop rbp ; ret
0x0000000000402c8b : add esp, 0x10 ; pop rbp ; ret
0x0000000000441d8b : add esp, 0x100 ; pop rbp ; ret
0x000000000041ec9c : add esp, 0x1090 ; pop rbp ; ret
0x000000000043537c : add esp, 0x170 ; pop rbp ; ret
0x0000000000432f3d : add esp, 0x178 ; pop rbx ; pop rbp ; ret
0x00000000004502e6 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000045083b : add esp, 0x18 ; ret
0x000000000042df72 : add esp, 0x198 ; pop rbx ; pop rbp ; ret
0x000000000043dbcc : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000424640 : add esp, 0x1b8 ; pop rbx ; pop rbp ; ret
0x000000000043b1fa : add esp, 0x1e0 ; pop rbp ; ret
0x000000000041439e : add esp, 0x20 ; pop rbp ; ret
0x0000000000446377 : add esp, 0x20 ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000439af0 : add esp, 0x200 ; pop rbp ; ret
0x00000000004482d0 : add esp, 0x2a8 ; pop rbx ; pop rbp ; ret
0x0000000000402e4d : add esp, 0x30 ; pop rbp ; ret
0x000000000041500c : add esp, 0x40 ; pop rbp ; ret
0x000000000043d70f : add esp, 0x40 ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000444110 : add esp, 0x490 ; pop rbp ; ret
0x000000000040740b : add esp, 0x50 ; pop rbp ; ret
0x000000000042a505 : add esp, 0x60 ; pop rbp ; ret
0x00000000004342d2 : add esp, 0x70 ; pop rbp ; ret
0x0000000000420683 : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000414095 : add esp, 0x80 ; pop rbp ; ret
0x0000000000415813 : add esp, 0x90 ; pop rbp ; ret
0x000000000043da2c : add esp, 0xb0 ; pop rbp ; ret
0x0000000000421cb1 : add esp, 0xb8 ; pop rbx ; pop rbp ; ret
0x000000000042c1d7 : add esp, 0xc0 ; pop rbp ; ret
0x000000000042b038 : add esp, 0xd8 ; pop rbx ; pop rbp ; ret
0x0000000000402126 : add esp, 8 ; ret
0x0000000000454038 : add qword ptr [r8], r8 ; add byte ptr [rax], al ; loope 0x454040 ; call rax
0x0000000000454d34 : add r8b, byte ptr [rax] ; add byte ptr [rax + 0x4e], cl ; sti ; call rdi
0x0000000000445feb : add r8b, r13b ; out dx, al ; ret
0x000000000044dc55 : add rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040292a : add rax, rdx ; sar rax, 1 ; jne 0x40293d ; pop rbp ; ret
0x000000000044a668 : add rax, rsi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x000000000044646a : add rdi, rax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x000000000041a6bf : add rsi, rax ; mov rax, rsi ; pop rbp ; ret
0x0000000000402c8a : add rsp, 0x10 ; pop rbp ; ret
0x0000000000441d8a : add rsp, 0x100 ; pop rbp ; ret
0x000000000041ec9b : add rsp, 0x1090 ; pop rbp ; ret
0x000000000043537b : add rsp, 0x170 ; pop rbp ; ret
0x0000000000432f3c : add rsp, 0x178 ; pop rbx ; pop rbp ; ret
0x00000000004502e5 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000045083a : add rsp, 0x18 ; ret
0x000000000042df71 : add rsp, 0x198 ; pop rbx ; pop rbp ; ret
0x000000000043dbcb : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000042463f : add rsp, 0x1b8 ; pop rbx ; pop rbp ; ret
0x000000000043b1f9 : add rsp, 0x1e0 ; pop rbp ; ret
0x000000000041439d : add rsp, 0x20 ; pop rbp ; ret
0x0000000000446376 : add rsp, 0x20 ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000439aef : add rsp, 0x200 ; pop rbp ; ret
0x00000000004482cf : add rsp, 0x2a8 ; pop rbx ; pop rbp ; ret
0x0000000000402e4c : add rsp, 0x30 ; pop rbp ; ret
0x000000000041500b : add rsp, 0x40 ; pop rbp ; ret
0x000000000043d70e : add rsp, 0x40 ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000044410f : add rsp, 0x490 ; pop rbp ; ret
0x000000000040740a : add rsp, 0x50 ; pop rbp ; ret
0x000000000042a504 : add rsp, 0x60 ; pop rbp ; ret
0x00000000004342d1 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000420682 : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000414094 : add rsp, 0x80 ; pop rbp ; ret
0x0000000000415812 : add rsp, 0x90 ; pop rbp ; ret
0x000000000043da2b : add rsp, 0xb0 ; pop rbp ; ret
0x0000000000421cb0 : add rsp, 0xb8 ; pop rbx ; pop rbp ; ret
0x000000000042c1d6 : add rsp, 0xc0 ; pop rbp ; ret
0x000000000042b037 : add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x0000000000402125 : add rsp, 8 ; ret
0x0000000000454691 : and al, 0 ; add byte ptr [rax], al ; sub dh, bh ; jmp rax
0x0000000000455b0c : and al, 0x10 ; add byte ptr [rax], al ; shr byte ptr [rcx], 1 ; std ; call rcx
0x000000000045560c : and al, 0xb ; add byte ptr [rax], al ; adc dh, -4 ; call qword ptr [rsi]
0x0000000000454665 : and al, 0xfffffffffffffffe ; jmp qword ptr [rax]
0x0000000000409636 : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000412207 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004543b5 : and bh, ch ; jmp qword ptr [rax]
0x0000000000426551 : and byte ptr [r15], cl ; xchg eax, esp ; ret 0x348b
0x0000000000455c60 : and byte ptr [rbp - 3], bl ; call qword ptr [rdx]
0x0000000000446379 : and byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000426552 : and byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x0000000000456970 : and byte ptr [rsi - 2], dh ; jmp rcx
0x0000000000454364 : and byte ptr [rsi], cl ; std ; jmp rax
0x00000000004545d1 : and dword ptr [rax], eax ; add byte ptr [rax], dh ; or esi, edi ; jmp rax
0x0000000000456cdd : and dword ptr [rax], eax ; add byte ptr [rax], dh ; ret
0x0000000000456cbd : and dword ptr [rax], eax ; add byte ptr [rax], dl ; ret
0x0000000000456c9d : and dword ptr [rax], eax ; add byte ptr [rax], dl ; ret 0xfffe
0x000000000041207d : and dword ptr [rbp], 0x48 ; add esp, 0x10 ; pop rbp ; ret
0x0000000000427df5 : and eax, 0x453490 ; mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x00000000004460ed : and eax, 0x453e33 ; call 0x4023e7
0x00000000004349c7 : and eax, 0x48ffffee ; add esp, 0x20 ; pop rbp ; ret
0x00000000004228bf : and eax, 0x658958 ; pop rbp ; ret
0x0000000000422c9f : and eax, 0x658960 ; pop rbp ; ret
0x0000000000422cc3 : and eax, 0x658968 ; pop rbp ; ret
0x0000000000454651 : and eax, dword ptr [rax] ; add byte ptr [rax], ah ; and edi, esi ; jmp rax
0x0000000000454621 : and eax, dword ptr [rax] ; add byte ptr [rax], dh ; and esi, edi ; jmp qword ptr [rax]
0x0000000000454655 : and edi, esi ; jmp rax
0x0000000000454625 : and esi, edi ; jmp qword ptr [rax]
0x0000000000456678 : call 0x11456486
0x0000000000415f67 : call 0x402182
0x0000000000435f47 : call 0x402212
0x00000000004460f2 : call 0x4023e2
0x00000000004062fa : call 0x4025b2
0x000000000041117b : call 0x41d3f2
0x0000000000408758 : call 0x434a42
0x000000000040feef : call 0x43c162
0x0000000000445de9 : call 0xd06df39
0x00000000004463ac : call 0xd06e4fc
0x00000000004331d9 : call 0xffffffffe905bb29
0x00000000004331d8 : call 0xffffffffe905bb2a
0x0000000000428c74 : call 0xffffffffff7c17c5
0x0000000000428c73 : call 0xffffffffff7c17c6
0x0000000000450779 : call qword ptr [r12 + rbx*8]
0x000000000042095d : call qword ptr [rax]
0x000000000045534b : call qword ptr [rbx]
0x0000000000456193 : call qword ptr [rdi]
0x000000000045550b : call qword ptr [rdx]
0x00000000004178d5 : call qword ptr [rsi]
0x000000000045077a : call qword ptr [rsp + rbx*8]
0x0000000000426f7d : call r8
0x000000000040298d : call rax
0x0000000000455ecb : call rbx
0x0000000000426d7e : call rcx
0x0000000000454d3b : call rdi
0x00000000004559eb : call rdx
0x0000000000456933 : call rsp
0x0000000000425de3 : cdq ; ret
0x000000000042c4a8 : clc ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000427236 : clc ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041d85e : clc ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000427b60 : clc ; add rsp, 0x40 ; pop rbp ; ret
0x000000000044410e : clc ; add rsp, 0x490 ; pop rbp ; ret
0x000000000042b672 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x000000000044e3be : clc ; add rsp, 0x80 ; pop rbp ; ret
0x000000000042c1d5 : clc ; add rsp, 0xc0 ; pop rbp ; ret
0x0000000000434db2 : clc ; jmp 0x434fd9
0x0000000000434db1 : clc ; jmp 0x434fda
0x000000000040292f : clc ; jne 0x402938 ; pop rbp ; ret
0x000000000044d9db : clc ; mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x000000000042c26e : clc ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000425e3b : clc ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000425e5b : clc ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000425e7b : clc ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000436bfb : clc ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000436c1b : clc ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000041cf2d : clc ; pop rbp ; ret
0x0000000000415c0f : clc ; pop rbx ; pop rbp ; ret
0x000000000044ac22 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041c4c4 : cld ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000439aee : cld ; add rsp, 0x200 ; pop rbp ; ret
0x00000000004541fe : cld ; call qword ptr [rax]
0x000000000045534a : cld ; call qword ptr [rbx]
0x000000000045550a : cld ; call qword ptr [rdx]
0x0000000000454fb2 : cld ; call qword ptr [rsi]
0x0000000000454136 : cld ; call rax
0x0000000000454276 : cld ; inc dword ptr [rax] ; adc al, 0 ; add byte ptr [rax - 0x46], al ; cld ; jmp qword ptr [rax]
0x000000000045416e : cld ; inc eax ; sldt word ptr [rax] ; mov al, 0x60 ; cld ; jmp rax
0x0000000000454186 : cld ; jmp qword ptr [rax]
0x000000000045528a : cld ; jmp qword ptr [rdx]
0x0000000000454176 : cld ; jmp rax
0x000000000045501a : cld ; jmp rcx
0x000000000044f786 : cld ; mov dword ptr [rbp - 0xc], eax ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x000000000044ac1f : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041c4c1 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004541e6 : cld ; push qword ptr [rax + 0x60000011] ; xchg eax, ecx ; cld ; call rax
0x000000000045412e : cld ; push qword ptr [rax - 0x3ffffff2] ; sbb ah, bh ; call rax
0x0000000000454226 : cld ; push qword ptr [rax - 0x4fffffee] ; cwde ; cld ; call rax
0x00000000004541f6 : cld ; push rax ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x6e], dh ; cld ; call qword ptr [rax]
0x000000000041d246 : cli ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000045403e : cli ; call rax
0x0000000000454b92 : cli ; jmp rdx
0x00000000004228be : cmp al, 0x25 ; pop rax ; mov dword ptr [rbp], esp ; pop rbp ; ret
0x0000000000441359 : cmp al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000042286d : cmp al, byte ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x70] ; pop rbp ; ret
0x000000000043ceb6 : cmp al, byte ptr [rbp] ; jmp rcx
0x000000000041a3b3 : cmp byte ptr [r15], cl ; xchg eax, esi ; ret 0x348b
0x000000000044e81e : cmp byte ptr [rax], ah ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x0000000000409be2 : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x0000000000426c2d : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000044e56e : cmp byte ptr [rax], dh ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000044ec5e : cmp byte ptr [rcx], ah ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x0000000000411f8a : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x000000000041a3b4 : cmp byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x0000000000427a75 : cmp dword ptr [rax - 0x75], ecx ; jne 0x427a5f ; call rax
0x000000000041f3f7 : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x0000000000414b3a : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8b44
0x0000000000423707 : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8b44
0x00000000004298b8 : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x000000000043e1ac : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x000000000043366d : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000409cbb : cmp dword ptr [rbx], eax ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x00000000004028ed : cmp eax, 0xe ; mov rbp, rsp ; ja 0x402900 ; pop rbp ; ret
0x0000000000455439 : cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; call qword ptr [rax]
0x000000000042df74 : cwde ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000443f6f : cwde ; add dword ptr [rax], eax ; add cl, ch ; ret 0
0x0000000000450703 : cwde ; add rsp, 0x70 ; pop rbp ; ret
0x000000000045422d : cwde ; cld ; call rax
0x00000000004112e7 : cwde ; idiv edi ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000455ec8 : cwde ; xchg eax, ebx ; std ; call rbx
0x0000000000416bd8 : dec byte ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret
0x0000000000408419 : dec byte ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x000000000042f8ff : dec byte ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret
0x000000000041eff0 : dec byte ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x000000000041ed41 : dec dword ptr [rax + 0x29] ; ret 0x8b48
0x000000000043ab97 : dec dword ptr [rax + 0x3b] ; or byte ptr [r15], cl ; sahf ; ret 0xe280
0x000000000044bf30 : dec dword ptr [rax + 0x3b] ; ror byte ptr [r15], -0x69 ; ret 0x348b
0x00000000004492d5 : dec dword ptr [rax + 0x3b] ; ror byte ptr [r15], 1 ; xchg eax, esp ; ret 0x348b
0x000000000043abae : dec dword ptr [rax + 0x3b] ; sbb byte ptr [r15], cl ; sahf ; ret 0xe280
0x00000000004242c4 : dec dword ptr [rax - 0x73] ; clc ; pop rbx ; pop rbp ; ret
0x000000000041cf29 : dec dword ptr [rax - 0x75] ; clc ; pop rbp ; ret
0x000000000040feea : dec dword ptr [rax - 0x75] ; jge 0x40fec6 ; call 0x43c167
0x000000000043ceb0 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; pop rax ; cmp al, byte ptr [rbp] ; jmp rcx
0x000000000041d159 : dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x00000000004382fa : dec dword ptr [rax - 0x77] ; ret 0x4de8
0x00000000004372cb : dec dword ptr [rax - 0x77] ; ret 0x7ce8
0x0000000000447bf8 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000437ea3 : dec dword ptr [rax - 0x77] ; ret 0xa4e8
0x000000000040f4d8 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000445824 : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000040804b : dec dword ptr [rbx - 0x14b73] ; jmp qword ptr [rcx]
0x00000000004109c7 : dec dword ptr [rbx - 0x19f73] ; jmp qword ptr [rcx]
0x000000000040db6a : dec dword ptr [rbx - 0x70b73] ; jmp qword ptr [rcx]
0x0000000000446beb : dec dword ptr [rdi] ; test dword ptr [rip - 0x17000000], eax ; ret
0x000000000042e4c5 : dec dword ptr [rdi] ; test dword ptr [rip - 0x17000000], eax ; ret 8
0x000000000042031f : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret
0x000000000040d64f : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x844
0x0000000000405f6f : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x0000000000439ccd : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret
0x0000000000415ef3 : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x000000000041d900 : div dword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000041d8ff : div qword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000043328b : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x00000000004291a4 : enter -0x74b8, 0x32 ; mov rdi, qword ptr [rsi] ; call rcx
0x0000000000427a72 : enter -0x74b8, 0x39 ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x0000000000425ddb : enter -0x7cb8, -0x3c ; pop rbp ; ret
0x0000000000418b7b : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x48b
0x000000000042cf9c : enter 0x6584, 0 ; add rsp, 0x40 ; pop rbp ; ret
0x000000000042b03a : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000042c639 : fbld dword ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000042c63a : fbld dword ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x0000000000455ec4 : fcom qword ptr [rbx] ; add byte ptr [rax], al ; cwde ; xchg eax, ebx ; std ; call rbx
0x0000000000457288 : fdiv dword ptr [rsi - 1] ; call rax
0x0000000000412fc4 : fiadd dword ptr [rcx - 0xa] ; ret 0x4001
0x000000000040b1c0 : fiadd dword ptr [rcx - 0xa] ; ret 0x4401
0x0000000000424065 : fiadd dword ptr [rcx - 0xa] ; ret 0x4801
0x00000000004368d8 : fiadd dword ptr [rcx - 0xa] ; ret 0x6601
0x0000000000407b0a : fiadd dword ptr [rcx - 0xa] ; ret 0x8801
0x000000000043ce67 : fiadd dword ptr [rcx - 0xa] ; ret 0x8901
0x00000000004068bd : fiadd dword ptr [rcx - 0xa] ; ret 0xf01
0x000000000040567f : fild dword ptr [rcx - 0xa] ; ret
0x000000000041d9da : fimul word ptr [rdi] ; test dword ptr [rip - 0x17000000], eax ; ret 0
0x00000000004318f8 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000439ceb : fmul qword ptr [r8 - 0x73] ; clc ; pop rbx ; pop rbp ; ret
0x000000000044ffaf : fmul qword ptr [r8 - 0x77] ; in al, dx ; pop rbp ; ret
0x0000000000439cec : fmul qword ptr [rax - 0x73] ; clc ; pop rbx ; pop rbp ; ret
0x000000000044ffb0 : fmul qword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000045077c : fmul qword ptr [rax - 0x7d] ; ret
0x000000000044ffad : fmul qword ptr [rbx - 0x76b723bb] ; in al, dx ; pop rbp ; ret
0x0000000000419fb6 : fsub dword ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x0000000000419fb7 : fsub dword ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000041da9f : fsub qword ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000041daa0 : fsub qword ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x0000000000436088 : fsubr st(0) ; ret 0xfcc0
0x0000000000402c89 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000456cdc : hlt ; and dword ptr [rax], eax ; add byte ptr [rax], dh ; ret
0x000000000044f789 : hlt ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000402900 : hlt ; pop rbp ; mov edi, 0x658468 ; jmp rax
0x000000000044f6af : hlt ; pop rbp ; ret
0x00000000004112e8 : idiv edi ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000402121 : imul eax, dword ptr [rax + rax], 0 ; add rsp, 8 ; ret
0x00000000004555cc : in al, 0xa ; add byte ptr [rax], al ; loopne 0x4555ab ; cld ; call qword ptr [rsi]
0x0000000000419477 : in al, dx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000414a45 : in al, dx ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004558d4 : in al, dx ; or eax, 0x5580000 ; std ; call qword ptr [rdx]
0x0000000000405612 : in al, dx ; pop rbp ; ret
0x0000000000436233 : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x000000000042843e : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x00000000004068a7 : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x00000000004181ae : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xff81
0x000000000043abda : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x00000000004051cd : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000447769 : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xff81
0x000000000043abd8 : inc byte ptr [rcx + 0xfe] ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x0000000000454277 : inc dword ptr [rax] ; adc al, 0 ; add byte ptr [rax - 0x46], al ; cld ; jmp qword ptr [rax]
0x000000000041d349 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000412fae : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x00000000004109db : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x48b
0x00000000004348ca : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000043076f : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x0000000000405bfa : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x000000000045461f : inc dword ptr [rax] ; and eax, dword ptr [rax] ; add byte ptr [rax], dh ; and esi, edi ; jmp qword ptr [rax]
0x00000000004540c7 : inc dword ptr [rax] ; or eax, 0x61300000 ; sti ; jmp qword ptr [rax]
0x000000000045436f : inc dword ptr [rax] ; sbb byte ptr [rax], al ; add byte ptr [rax + 0x14], al ; std ; jmp qword ptr [rax]
0x00000000004543af : inc dword ptr [rax] ; sbb dword ptr [rax], eax ; add al, dh ; and bh, ch ; jmp qword ptr [rax]
0x0000000000411f88 : inc dword ptr [rcx + 0x138] ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x000000000044e638 : inc dword ptr [rcx + 0x41f9] ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x000000000044f02e : inc dword ptr [rcx + 0x5af9] ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x000000000044e6ee : inc dword ptr [rcx + 0x5af9] ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x000000000042ef31 : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8b44
0x0000000000420117 : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x8b44
0x00000000004437c1 : inc dword ptr [rcx - 0x46343] ; jmp qword ptr [rdx]
0x000000000040ddd0 : inc dword ptr [rcx - 0xf] ; jmp qword ptr [rcx]
0x000000000045468f : inc eax ; and al, 0 ; add byte ptr [rax], al ; sub dh, bh ; jmp rax
0x00000000004545cf : inc eax ; and dword ptr [rax], eax ; add byte ptr [rax], dh ; or esi, edi ; jmp rax
0x000000000045464f : inc eax ; and eax, dword ptr [rax] ; add byte ptr [rax], ah ; and edi, esi ; jmp rax
0x000000000045439f : inc eax ; sbb byte ptr [rax], al ; add byte ptr [rax + 0x1e], al ; std ; jmp rax
0x000000000045416f : inc eax ; sldt word ptr [rax] ; mov al, 0x60 ; cld ; jmp rax
0x000000000040fef0 : insb byte ptr [rdi], dx ; ret 2
0x0000000000455d81 : insd dword ptr [rdi], dx ; std ; jmp qword ptr [rcx]
0x000000000043d9e8 : int 0x80
0x0000000000435e8b : int1 ; ret 0xfffc
0x00000000004028f3 : ja 0x4028fa ; pop rbp ; ret
0x000000000042c271 : ja 0x42c2be ; pop rbp ; ret
0x000000000043916c : ja 0x439180 ; xchg eax, esp ; ret 0xe280
0x0000000000456971 : jbe 0x456973 ; jmp rcx
0x0000000000457289 : jbe 0x45728c ; call rax
0x00000000004028ff : je 0x4028fd ; pop rbp ; mov edi, 0x658468 ; jmp rax
0x0000000000455c5c : je 0x455c76 ; add byte ptr [rax], al ; and byte ptr [rbp - 3], bl ; call qword ptr [rdx]
0x000000000041dacd : jg 0x41da88 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040feed : jge 0x40fec3 ; call 0x43c164
0x0000000000425e3a : jge 0x425e3b ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000425e5a : jge 0x425e5b ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000425e7a : jge 0x425e7b ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000042b1c0 : jge 0x42b1b3 ; mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000042c26d : jge 0x42c26e ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000436236 : jge 0x436233 ; pop rbp ; ret
0x0000000000436bfa : jge 0x436bfb ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000436c1a : jge 0x436c1b ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000436d10 : jge 0x436d0d ; pop rbp ; ret
0x0000000000443926 : jge 0x4438ea ; call rax
0x0000000000443dbe : jge 0x443d89 ; mov rsi, qword ptr [rbp - 0x460] ; call rax
0x0000000000443f08 : jge 0x443ecc ; call rax
0x0000000000443f86 : jge 0x443f42 ; call rax
0x00000000004440f4 : jge 0x4440b0 ; call rax
0x0000000000444166 : jge 0x44412a ; call rax
0x00000000004441fd : jge 0x4441c8 ; mov rsi, qword ptr [rbp - 0x460] ; call rax
0x000000000044d9da : jge 0x44d9dd ; mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x000000000044ffac : jge 0x44ff93 ; mov eax, dword ptr [rbp - 0x24] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000455e64 : jl 0x455e80 ; add byte ptr [rax], al ; js 0x455e03 ; std ; jmp qword ptr [rdi]
0x000000000041db44 : jle 0x41db5d ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000456a11 : jle 0x456a13 ; call rcx
0x000000000040215b : jmp 0x402137
0x00000000004116a6 : jmp 0x40c277
0x000000000041197d : jmp 0x40dbfc
0x000000000041197d : jmp 0x40dc01
0x000000000040eeb3 : jmp 0x40ef09
0x000000000040b2bb : jmp 0x411583
0x000000000040b4c0 : jmp 0x4115b0
0x0000000000434db3 : jmp 0x434fd8
0x0000000000443f6e : jmp 0x444111
0x000000000044972c : jmp 0x448662
0x0000000000428933 : jmp 0x49051283
0x0000000000428a75 : jmp 0x490513c5
0x000000000042aa70 : jmp 0x490533c0
0x000000000042aadd : jmp 0x4905342d
0x000000000042bdaa : jmp 0x490546fa
0x000000000042be17 : jmp 0x49054767
0x00000000004540cf : jmp qword ptr [rax]
0x0000000000456da3 : jmp qword ptr [rbx]
0x0000000000408051 : jmp qword ptr [rcx]
0x0000000000455e6b : jmp qword ptr [rdi]
0x00000000004437c7 : jmp qword ptr [rdx]
0x0000000000402907 : jmp rax
0x000000000045744b : jmp rbx
0x00000000004031f0 : jmp rcx
0x0000000000402947 : jmp rdx
0x0000000000456b03 : jmp rsi
0x0000000000402930 : jne 0x402937 ; pop rbp ; ret
0x000000000041d901 : jne 0x41d8f9 ; mov rax, rdx ; pop rbp ; ret
0x0000000000426d76 : jne 0x426d40 ; mov r8, qword ptr [rsi] ; mov rsi, qword ptr [r8] ; call rcx
0x0000000000427a78 : jne 0x427a5c ; call rax
0x00000000004361f9 : jne 0x4361dd ; mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x0000000000439bb1 : jne 0x439ba9 ; mov rax, rdx ; pop rbp ; ret
0x0000000000456931 : jne 0x456933 ; call rsp
0x000000000042705f : jo 0x427078 ; mov qword ptr [rbp - 0x48], rdx ; call r8
0x00000000004342d4 : jo 0x434335 ; ret
0x000000000043537e : jo 0x435386 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000436c1f : jo 0x436c80 ; ret
0x0000000000436c1e : jo 0x436c81 ; ret
0x000000000043c0db : jo 0x43c13c ; ret
0x000000000044a5d4 : jo 0x44a5df ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000044c8f7 : jo 0x44c958 ; ret
0x0000000000450707 : jo 0x450768 ; ret
0x00000000004541fc : jo 0x454193 ; cld ; call qword ptr [rax]
0x0000000000455d80 : jo 0x455df2 ; std ; jmp qword ptr [rcx]
0x0000000000456190 : jo 0x456177 ; std ; call qword ptr [rdi]
0x0000000000420685 : js 0x4206e5 ; pop rbp ; ret
0x0000000000432f3f : js 0x432f48 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000433360 : js 0x4333c0 ; pop rbp ; ret
0x0000000000455348 : js 0x4552d4 ; cld ; call qword ptr [rbx]
0x0000000000455e68 : js 0x455dff ; std ; jmp qword ptr [rdi]
0x00000000004460eb : lea ecx, dword ptr [0x453e33] ; call 0x4023e9
0x000000000041a308 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000409842 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000415c0d : lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000041a307 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000415c0c : lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x00000000004541f8 : lock adc dword ptr [rax], eax ; add byte ptr [rax - 0x6e], dh ; cld ; call qword ptr [rax]
0x0000000000442ff9 : loop 0x44304b ; or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x00000000004431d1 : loop 0x443223 ; or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x0000000000456191 : loop 0x456192 ; call qword ptr [rdi]
0x000000000045403d : loope 0x45403b ; call rax
0x0000000000454b91 : loope 0x454b8f ; jmp rdx
0x0000000000414cfb : loopne 0x414d61 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041a5e5 : loopne 0x41a646 ; ret
0x000000000041a5e4 : loopne 0x41a647 ; ret
0x000000000042033b : loopne 0x4203a1 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000423a0a : loopne 0x423a70 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000425b5b : loopne 0x425baa ; mov esp, ebp ; pop rbp ; ret
0x0000000000425b5a : loopne 0x425bab ; mov esp, ebp ; pop rbp ; ret
0x0000000000428869 : loopne 0x4288cf ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042c8c9 : loopne 0x42c91a ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000042c8c8 : loopne 0x42c91b ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000042f06d : loopne 0x42f0d3 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000043379f : loopne 0x4337f0 ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000043379e : loopne 0x4337f1 ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000043b1fc : loopne 0x43b204 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000043ba9e : loopne 0x43baee ; add esp, 0x20 ; pop rbp ; ret
0x000000000043ba9d : loopne 0x43baef ; add esp, 0x20 ; pop rbp ; ret
0x000000000043e9b5 : loopne 0x43ea05 ; add esp, 0x20 ; pop rbp ; ret
0x000000000043e9b4 : loopne 0x43ea06 ; add esp, 0x20 ; pop rbp ; ret
0x000000000043f0ea : loopne 0x43f150 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000043f9d2 : loopne 0x43f9da ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000044dbec : loopne 0x44dc3c ; add esp, 0x20 ; pop rbp ; ret
0x000000000044dbeb : loopne 0x44dc3d ; add esp, 0x20 ; pop rbp ; ret
0x0000000000454b90 : loopne 0x454b76 ; cli ; jmp rdx
0x00000000004555d0 : loopne 0x4555a7 ; cld ; call qword ptr [rsi]
0x0000000000454515 : mov ah, -3 ; call rax
0x0000000000456d9c : mov ah, 0x22 ; add byte ptr [rax], al ; rol ah, -2 ; jmp qword ptr [rbx]
0x0000000000454524 : mov al, -0x49 ; std ; call qword ptr [rax]
0x000000000045422c : mov al, -0x68 ; cld ; call rax
0x0000000000454a0d : mov al, -1 ; call qword ptr [rax]
0x000000000043da2e : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000454228 : mov al, 0x12 ; add byte ptr [rax], al ; mov al, -0x68 ; cld ; call rax
0x00000000004543d8 : mov al, 0x19 ; add byte ptr [rax], al ; xor byte ptr [rdx], dh ; std ; call rax
0x0000000000420031 : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000454174 : mov al, 0x60 ; cld ; jmp rax
0x0000000000454130 : mov al, 0xe ; add byte ptr [rax], al ; rcr byte ptr [rax], -4 ; call rax
0x000000000041dbda : mov al, 1 ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000414a43 : mov al, byte ptr [rbp - 0x14] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042c638 : mov al, byte ptr [rbp - 0x21] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041da9e : mov al, byte ptr [rbp - 0x24] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042664c : mov al, byte ptr [rbp - 0x33] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000412204 : mov al, byte ptr [rbp - 0xa] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000425151 : mov al, byte ptr [rbp - 0xa] ; movsx eax, al ; pop rbp ; ret
0x000000000044e4f9 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041d244 : mov al, byte ptr [rbp - 6] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041d077 : mov al, byte ptr [rbp - 7] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041a65b : mov al, byte ptr [rbp - 9] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004433bf : mov al, dh ; movzx eax, al ; pop rbp ; ret
0x00000000004433be : mov al, sil ; movzx eax, al ; pop rbp ; ret
0x000000000044320f : mov ax, si ; movzx eax, ax ; pop rbp ; ret
0x0000000000436ab5 : mov bh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000443213 : mov bh, -0x40 ; pop rbp ; ret
0x0000000000454525 : mov bh, -3 ; call qword ptr [rax]
0x0000000000422cc1 : mov byte ptr [0x658968], al ; pop rbp ; ret
0x00000000004074c8 : mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x0000000000403f46 : mov byte ptr [rax - 0x77], cl ; or ch, cl ; ret
0x0000000000414d69 : mov byte ptr [rax - 0x77], cl ; ret 0xb0
0x00000000004178cc : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; call qword ptr [rsi]
0x000000000040f3b0 : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret
0x00000000004352d6 : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 0
0x0000000000431cdc : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x00000000004304ee : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x00000000004334c6 : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 1
0x000000000041335a : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 8
0x0000000000402963 : mov byte ptr [rip + 0x255b6e], 1 ; ret
0x00000000004112e6 : mov ch, -0x68 ; idiv edi ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000403f5d : mov cl, 0x21 ; add byte ptr [r8 - 0x73], r9b ; xor al, 0x25 ; ret
0x0000000000454d98 : mov cl, dl ; sti ; call qword ptr [rsi]
0x000000000041d28d : mov dh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000415c0a : mov dh, -0x3f ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000041a1b4 : mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041439b : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042c99a : mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000415009 : mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000407408 : mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x000000000042a502 : mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x000000000043c0d6 : mov dh, -0x40 ; add rsp, 0x70 ; pop rbp ; ret
0x000000000041d3c0 : mov dh, -0x40 ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000409639 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000041220a : mov dh, -0x40 ; pop rbp ; ret
0x00000000004361f6 : mov dh, -0xe ; mov dword ptr [rbp - 0x24], esi ; mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x00000000004228bd : mov dword ptr [0x658958], edi ; pop rbp ; ret
0x0000000000422c9d : mov dword ptr [0x658960], edi ; pop rbp ; ret
0x000000000042f32a : mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000042f478 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000408752 : mov dword ptr [rbp - 0x188], eax ; call 0x434a48
0x0000000000408808 : mov dword ptr [rbp - 0x190], eax ; call 0x434a48
0x00000000004062f4 : mov dword ptr [rbp - 0x1a0], ecx ; call 0x4025b8
0x00000000004361f8 : mov dword ptr [rbp - 0x24], esi ; mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x0000000000419fb5 : mov dword ptr [rbp - 0x28], eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000402e49 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000426f76 : mov dword ptr [rbp - 0x30], eax ; mov qword ptr [rbp - 0x38], rdx ; call r8
0x0000000000426f7a : mov dword ptr [rbp - 0x38], edx ; call r8
0x0000000000427062 : mov dword ptr [rbp - 0x48], edx ; call r8
0x000000000042067f : mov dword ptr [rbp - 0x58], eax ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000402c87 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000044f787 : mov dword ptr [rbp - 0xc], eax ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000434db0 : mov dword ptr [rbp - 8], eax ; jmp 0x434fdb
0x0000000000436235 : mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x00000000004228c1 : mov dword ptr [rbp], esp ; pop rbp ; ret
0x0000000000409745 : mov dword ptr [rcx + 0x38], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000044a66c : mov dword ptr [rdi + 0x10], eax ; pop rbp ; ret
0x0000000000427dfa : mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x000000000042c270 : mov dword ptr [rdi + 0x48], esi ; pop rbp ; ret
0x000000000044d9dc : mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x000000000041db43 : mov dword ptr [rsi + 0x10], edi ; add rsp, 0x10 ; pop rbp ; ret
0x000000000044646e : mov dword ptr [rsi], edi ; pop rbp ; ret
0x0000000000421cb3 : mov eax, 0x5b000000 ; pop rbp ; ret
0x0000000000424642 : mov eax, 0x5b000001 ; pop rbp ; ret
0x000000000043335c : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x000000000043e3f5 : mov eax, 0xf0658d48 ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000041d155 : mov eax, 0xffffffff ; mov rsp, rbp ; pop rbp ; ret
0x0000000000443921 : mov eax, dword ptr [rax + 0x10] ; mov rdi, qword ptr [rbp - 0x40] ; call rax
0x00000000004440ef : mov eax, dword ptr [rax + 0x18] ; mov rdi, qword ptr [rbp - 0x48] ; call rax
0x00000000004232b3 : mov eax, dword ptr [rax] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000443b61 : mov eax, dword ptr [rax] ; mov rdi, qword ptr [rbp - 0x460] ; call rax
0x0000000000443f82 : mov eax, dword ptr [rax] ; mov rdi, qword ptr [rbp - 0x48] ; call rax
0x000000000043fbd1 : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042f258 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000043df21 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000423e24 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042316f : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000043fbce : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042f255 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000436d31 : mov eax, dword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040560d : mov eax, dword ptr [rbp - 0x10] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000423d13 : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000419475 : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042f5e4 : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000043de2f : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004235f2 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000042f324 : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004344d4 : mov eax, dword ptr [rbp - 0x18] ; mov rsp, rbp ; pop rbp ; ret
0x000000000043ba9c : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042c8c7 : mov eax, dword ptr [rbp - 0x20] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000425b59 : mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x000000000041a5e3 : mov eax, dword ptr [rbp - 0x20] ; pop rbp ; ret
0x0000000000439cea : mov eax, dword ptr [rbp - 0x24] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000044ffae : mov eax, dword ptr [rbp - 0x24] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004361fb : mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x000000000042553d : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000042ba84 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000427d7c : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000044031b : mov eax, dword ptr [rbp - 0x30] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000428468 : mov eax, dword ptr [rbp - 0x30] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000425dd9 : mov eax, dword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041d701 : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000043335a : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000042002f : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000044c8f1 : mov eax, dword ptr [rbp - 0x60] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000450701 : mov eax, dword ptr [rbp - 0x68] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000422872 : mov eax, dword ptr [rbp - 0x70] ; pop rbp ; ret
0x0000000000420957 : mov eax, dword ptr [rbp - 0x88] ; call qword ptr [rax]
0x000000000044f6ad : mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x000000000044ac20 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041c4c2 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042c4a6 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000427234 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041d85c : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000427b5e : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000042b670 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041cf2b : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000425e3d : mov eax, dword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000425e5d : mov eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000425e7d : mov eax, dword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000436bfd : mov eax, dword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000436c1d : mov eax, dword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000426d79 : mov eax, dword ptr [rsi] ; mov rsi, qword ptr [r8] ; call rcx
0x000000000043621c : mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000043673f : mov eax, edi ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000442ffe : mov eax, edi ; pop rbp ; ret
0x000000000041d904 : mov eax, edx ; pop rbp ; ret
0x0000000000443210 : mov eax, esi ; movzx eax, ax ; pop rbp ; ret
0x000000000041a6c3 : mov eax, esi ; pop rbp ; ret
0x0000000000443b65 : mov ebp, 0xfffffba0 ; call rax
0x000000000040298b : mov ebp, esp ; call rax
0x00000000004028f1 : mov ebp, esp ; ja 0x4028fc ; pop rbp ; ret
0x0000000000436232 : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x00000000004031e9 : mov ecx, dword ptr [rax*8 + 0x450860] ; jmp rcx
0x0000000000405341 : mov ecx, dword ptr [rax*8 + 0x450a68] ; jmp rcx
0x000000000042fca7 : mov ecx, dword ptr [rax*8 + 0x453500] ; jmp rcx
0x00000000004307c1 : mov ecx, dword ptr [rax*8 + 0x453548] ; jmp rcx
0x000000000043ceb2 : mov ecx, dword ptr [rax*8 + 0x453a58] ; jmp rcx
0x000000000042f327 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000428d62 : mov ecx, dword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000428c72 : mov ecx, dword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000042b1c3 : mov ecx, dword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000443755 : mov ecx, dword ptr [rbp - 0x48] ; call rax
0x0000000000435f41 : mov ecx, dword ptr [rbp - 0x60] ; mov rdi, rax ; call 0x402218
0x000000000042b48a : mov ecx, dword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000044305d : mov ecx, eax ; shl edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000044302d : mov ecx, eax ; shr edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000454a5d : mov edi, 0x3450ffff ; add byte ptr [rax], al ; push rax ; ret
0x0000000000402985 : mov edi, 0x657e20 ; mov rbp, rsp ; call rax
0x0000000000402902 : mov edi, 0x658468 ; jmp rax
0x0000000000402942 : mov edi, 0x658468 ; jmp rdx
0x000000000040feec : mov edi, dword ptr [rbp - 0x30] ; call 0x43c165
0x0000000000443925 : mov edi, dword ptr [rbp - 0x40] ; call rax
0x0000000000443b64 : mov edi, dword ptr [rbp - 0x460] ; call rax
0x0000000000443f85 : mov edi, dword ptr [rbp - 0x48] ; call rax
0x000000000042c26c : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000425e39 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000425e59 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000425e79 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000436bf9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000436c19 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000428c76 : mov edi, dword ptr [rcx] ; call rax
0x0000000000427a74 : mov edi, dword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x0000000000446468 : mov edi, dword ptr [rsi] ; add rdi, rax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x00000000004291a9 : mov edi, dword ptr [rsi] ; call rcx
0x0000000000435f45 : mov edi, eax ; call 0x402214
0x0000000000450777 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000045475d : mov edi, esi ; call qword ptr [rax]
0x0000000000450776 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000436e36 : mov edx, dword ptr [rbp - 0x18] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004291a2 : mov edx, dword ptr [rbp - 0x38] ; mov rsi, qword ptr [rdx] ; mov rdi, qword ptr [rsi] ; call rcx
0x0000000000443751 : mov edx, dword ptr [rbp - 0x40] ; mov rcx, qword ptr [rbp - 0x48] ; call rax
0x0000000000436d35 : mov edx, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000042705e : mov esi, dword ptr [rax + 0x10] ; mov qword ptr [rbp - 0x48], rdx ; call r8
0x0000000000426d7c : mov esi, dword ptr [rax] ; call rcx
0x0000000000411175 : mov esi, dword ptr [rbp - 0x100] ; call 0x41d3f8
0x0000000000427a77 : mov esi, dword ptr [rbp - 0x20] ; call rax
0x0000000000426d75 : mov esi, dword ptr [rbp - 0x40] ; mov r8, qword ptr [rsi] ; mov rsi, qword ptr [r8] ; call rcx
0x0000000000443dc1 : mov esi, dword ptr [rbp - 0x460] ; call rax
0x000000000042b1c7 : mov esi, dword ptr [rcx] ; call rax
0x00000000004291a6 : mov esi, dword ptr [rdx] ; mov rdi, qword ptr [rsi] ; call rcx
0x0000000000402940 : mov esi, eax ; mov edi, 0x658468 ; jmp rdx
0x0000000000405611 : mov esp, ebp ; pop rbp ; ret
0x00000000004228bc : mov qword ptr [0x658958], rdi ; pop rbp ; ret
0x0000000000422c9c : mov qword ptr [0x658960], rdi ; pop rbp ; ret
0x0000000000408751 : mov qword ptr [rbp - 0x188], rax ; call 0x434a49
0x0000000000408807 : mov qword ptr [rbp - 0x190], rax ; call 0x434a49
0x00000000004062f3 : mov qword ptr [rbp - 0x1a0], rcx ; call 0x4025b9
0x0000000000426f75 : mov qword ptr [rbp - 0x30], rax ; mov qword ptr [rbp - 0x38], rdx ; call r8
0x0000000000426f79 : mov qword ptr [rbp - 0x38], rdx ; call r8
0x0000000000427061 : mov qword ptr [rbp - 0x48], rdx ; call r8
0x0000000000436234 : mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000409744 : mov qword ptr [rcx + 0x38], rax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000044a66b : mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x000000000042c26f : mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000044646d : mov qword ptr [rsi], rdi ; pop rbp ; ret
0x0000000000426d78 : mov r8, qword ptr [rsi] ; mov rsi, qword ptr [r8] ; call rcx
0x0000000000420030 : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000043335b : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000443920 : mov rax, qword ptr [rax + 0x10] ; mov rdi, qword ptr [rbp - 0x40] ; call rax
0x00000000004440ee : mov rax, qword ptr [rax + 0x18] ; mov rdi, qword ptr [rbp - 0x48] ; call rax
0x00000000004232b2 : mov rax, qword ptr [rax] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000443f81 : mov rax, qword ptr [rax] ; mov rdi, qword ptr [rbp - 0x48] ; call rax
0x000000000043df20 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000423e23 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042316e : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000042f254 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000436d30 : mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040560c : mov rax, qword ptr [rbp - 0x10] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000423d12 : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000043de2e : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004235f1 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004344d3 : mov rax, qword ptr [rbp - 0x18] ; mov rsp, rbp ; pop rbp ; ret
0x000000000043e9b2 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000425b58 : mov rax, qword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x000000000041a5e2 : mov rax, qword ptr [rbp - 0x20] ; pop rbp ; ret
0x000000000042553c : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000042ba83 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000427d7b : mov rax, qword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000425dd8 : mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041d700 : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000042002e : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000044c8f0 : mov rax, qword ptr [rbp - 0x60] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000450700 : mov rax, qword ptr [rbp - 0x68] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000422871 : mov rax, qword ptr [rbp - 0x70] ; pop rbp ; ret
0x0000000000420956 : mov rax, qword ptr [rbp - 0x88] ; call qword ptr [rax]
0x000000000042c4a5 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000427233 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041d85b : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000427b5d : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000042b66f : mov rax, qword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041cf2a : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000425e3c : mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000425e5c : mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000425e7c : mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000436bfc : mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000436c1c : mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000442ffd : mov rax, rdi ; pop rbp ; ret
0x000000000041d903 : mov rax, rdx ; pop rbp ; ret
0x000000000041a6c2 : mov rax, rsi ; pop rbp ; ret
0x000000000040298a : mov rbp, rsp ; call rax
0x00000000004028f0 : mov rbp, rsp ; ja 0x4028fd ; pop rbp ; ret
0x0000000000436231 : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x00000000004031e8 : mov rcx, qword ptr [rax*8 + 0x450860] ; jmp rcx
0x0000000000405340 : mov rcx, qword ptr [rax*8 + 0x450a68] ; jmp rcx
0x000000000042fca6 : mov rcx, qword ptr [rax*8 + 0x453500] ; jmp rcx
0x00000000004307c0 : mov rcx, qword ptr [rax*8 + 0x453548] ; jmp rcx
0x000000000043ceb1 : mov rcx, qword ptr [rax*8 + 0x453a58] ; jmp rcx
0x0000000000428d61 : mov rcx, qword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000428c71 : mov rcx, qword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000042b1c2 : mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000443754 : mov rcx, qword ptr [rbp - 0x48] ; call rax
0x0000000000435f40 : mov rcx, qword ptr [rbp - 0x60] ; mov rdi, rax ; call 0x402219
0x000000000042b489 : mov rcx, qword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040feeb : mov rdi, qword ptr [rbp - 0x30] ; call 0x43c166
0x0000000000443924 : mov rdi, qword ptr [rbp - 0x40] ; call rax
0x0000000000443b63 : mov rdi, qword ptr [rbp - 0x460] ; call rax
0x0000000000443f84 : mov rdi, qword ptr [rbp - 0x48] ; call rax
0x000000000042c26b : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000425e38 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000425e58 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000425e78 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000436bf8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000436c18 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000428c75 : mov rdi, qword ptr [rcx] ; call rax
0x0000000000427a73 : mov rdi, qword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x00000000004291a8 : mov rdi, qword ptr [rsi] ; call rcx
0x0000000000435f44 : mov rdi, rax ; call 0x402215
0x0000000000436e35 : mov rdx, qword ptr [rbp - 0x18] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000443750 : mov rdx, qword ptr [rbp - 0x40] ; mov rcx, qword ptr [rbp - 0x48] ; call rax
0x0000000000436d34 : mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000426d7b : mov rsi, qword ptr [r8] ; call rcx
0x000000000042705d : mov rsi, qword ptr [rax + 0x10] ; mov qword ptr [rbp - 0x48], rdx ; call r8
0x0000000000411174 : mov rsi, qword ptr [rbp - 0x100] ; call 0x41d3f9
0x0000000000427a76 : mov rsi, qword ptr [rbp - 0x20] ; call rax
0x0000000000443dc0 : mov rsi, qword ptr [rbp - 0x460] ; call rax
0x000000000042b1c6 : mov rsi, qword ptr [rcx] ; call rax
0x00000000004291a5 : mov rsi, qword ptr [rdx] ; mov rdi, qword ptr [rsi] ; call rcx
0x000000000040293f : mov rsi, rax ; mov edi, 0x658468 ; jmp rdx
0x0000000000405610 : mov rsp, rbp ; pop rbp ; ret
0x0000000000456674 : mov word ptr [rbx], ds ; add byte ptr [rax], al ; call 0x1145648a
0x000000000041c745 : movabs al, byte ptr [0x8148ca8948088b48] ; ret 1
0x0000000000443aef : movabs al, byte ptr [0x8148ca8948fffffb] ; ret 1
0x0000000000449739 : movabs al, byte ptr [0xe9b8458948fffffe] ; ret 0xfff0
0x0000000000454b8c : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add al, ah ; loope 0x454b94 ; jmp rdx
0x0000000000425154 : movsx eax, al ; pop rbp ; ret
0x000000000041a1b3 : movzx eax, al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041439a : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042c999 : movzx eax, al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000415008 : movzx eax, al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000407407 : movzx eax, al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000042a501 : movzx eax, al ; add rsp, 0x60 ; pop rbp ; ret
0x000000000043c0d5 : movzx eax, al ; add rsp, 0x70 ; pop rbp ; ret
0x000000000041d3bf : movzx eax, al ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000409638 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000412209 : movzx eax, al ; pop rbp ; ret
0x0000000000436ab4 : movzx eax, ax ; mov rsp, rbp ; pop rbp ; ret
0x0000000000443212 : movzx eax, ax ; pop rbp ; ret
0x000000000041d28c : movzx eax, cl ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000415c09 : movzx eax, cl ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000412205 : mul byte ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x0000000000412206 : mul byte ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000041a65c : mul dword ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000041a65d : mul dword ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000045475c : nop ; mov edi, esi ; call qword ptr [rax]
0x0000000000422874 : nop ; pop rbp ; ret
0x0000000000450798 : nop dword ptr [rax + rax] ; ret
0x0000000000455715 : or al, 0 ; add byte ptr [rax], bl ; out -4, al ; call qword ptr [rax]
0x0000000000406327 : or al, 0x25 ; or al, 0xffffffffffffff93 ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x000000000041eeda : or al, 0x25 ; or al, 0xffffffffffffff93 ; add byte ptr gs:[rcx - 0x77], al ; ret 0x8141
0x0000000000445fe7 : or al, 0x25 ; xor edi, dword ptr [rsi] ; add r8b, r13b ; out dx, al ; ret
0x00000000004194a3 : or al, 0xffffffffffffff93 ; add byte ptr gs:[rbp - 0x77], al ; ret
0x0000000000406329 : or al, 0xffffffffffffff93 ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x000000000040749f : or al, 0xffffffffffffff93 ; add byte ptr gs:[rcx - 0x77], al ; ret
0x0000000000411e80 : or al, 0xffffffffffffff93 ; add byte ptr gs:[rcx - 0x77], al ; ret 0x8141
0x000000000043ceb3 : or al, 0xffffffffffffffc5 ; pop rax ; cmp al, byte ptr [rbp] ; jmp rcx
0x0000000000409da5 : or al, 2 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x00000000004555cd : or al, byte ptr [rax] ; add al, ah ; sar ah, cl ; call qword ptr [rsi]
0x0000000000455505 : or al, byte ptr [rax] ; add byte ptr [rax - 0x48], ch ; cld ; call qword ptr [rdx]
0x0000000000405345 : or al, byte ptr [rbp] ; jmp rcx
0x000000000040806c : or al, byte ptr [rcx - 0xf] ; jmp qword ptr [rcx]
0x0000000000442ea2 : or al, byte ptr [rdi] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000043b5a4 : or byte ptr [r15], cl ; sahf ; ret 0x348b
0x000000000043ab9a : or byte ptr [r15], cl ; sahf ; ret 0xe280
0x0000000000433529 : or byte ptr [r15], cl ; xchg eax, ebp ; ret 0x348b
0x00000000004361ed : or byte ptr [r15], cl ; xchg eax, edi ; ret 0xe280
0x0000000000427190 : or byte ptr [r15], cl ; xchg eax, edx ; ret 0x348b
0x000000000041d996 : or byte ptr [r15], cl ; xchg eax, esp ; ret 0x348b
0x000000000042b3d3 : or byte ptr [r8 + 0x3b], cl ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x348b
0x00000000004318f3 : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000042b3d4 : or byte ptr [rax + 0x3b], cl ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x348b
0x000000000044480e : or byte ptr [rax - 0x6af0ffc7], al ; ret 0x348b
0x00000000004318f4 : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000455345 : or byte ptr [rax], al ; add byte ptr [rax - 0x79], bh ; cld ; call qword ptr [rbx]
0x00000000004031ed : or byte ptr [rbp], al ; jmp rcx
0x000000000044e81c : or byte ptr [rcx + 0x2038], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x000000000044ec5c : or byte ptr [rcx + 0x2138], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000043d7dd : or byte ptr [rcx + 0x28f9], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x000000000044e56c : or byte ptr [rcx + 0x3038], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x0000000000409cb9 : or byte ptr [rcx + 0x339], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x0000000000421508 : or byte ptr [rcx + 0x39f9], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x00000000004215be : or byte ptr [rcx + 0x39f9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000044eb5c : or byte ptr [rcx + 0x6138], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x00000000004173fb : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x0000000000423f60 : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000447ad4 : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x000000000043b5a5 : or byte ptr [rdi], cl ; sahf ; ret 0x348b
0x000000000043ab9b : or byte ptr [rdi], cl ; sahf ; ret 0xe280
0x000000000043352a : or byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x00000000004361ee : or byte ptr [rdi], cl ; xchg eax, edi ; ret 0xe280
0x0000000000427191 : or byte ptr [rdi], cl ; xchg eax, edx ; ret 0x348b
0x000000000041d997 : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x0000000000403f49 : or ch, cl ; ret
0x000000000043489d : or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x000000000043493f : or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x00000000004262fc : or cl, ch ; ret
0x0000000000455435 : or dword ptr [rax], eax ; add byte ptr [rax], ch ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; call qword ptr [rax]
0x000000000043e67f : or eax, 0x48fffff9 ; add esp, 0x30 ; pop rbp ; ret
0x00000000004558d5 : or eax, 0x5580000 ; std ; call qword ptr [rdx]
0x00000000004540c9 : or eax, 0x61300000 ; sti ; jmp qword ptr [rax]
0x000000000042f7ad : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000424e1c : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000442ffb : or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x00000000004545e5 : or esi, edi ; jmp qword ptr [rax]
0x00000000004545d5 : or esi, edi ; jmp rax
0x0000000000443031 : or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000455434 : or qword ptr [rax], r8 ; add byte ptr [rax], ch ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; call qword ptr [rax]
0x0000000000442ffa : or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x0000000000455719 : out -4, al ; call qword ptr [rax]
0x0000000000445fee : out dx, al ; ret
0x0000000000443030 : out dx, eax ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x00000000004054ae : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000045078c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000409abf : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004054b0 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000045078e : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004054b2 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000450790 : pop r14 ; pop r15 ; ret
0x0000000000418e00 : pop r14 ; pop rbp ; ret
0x00000000004054b4 : pop r15 ; pop rbp ; ret
0x0000000000450792 : pop r15 ; ret
0x000000000043ceb5 : pop rax ; cmp al, byte ptr [rbp] ; jmp rcx
0x00000000004228c0 : pop rax ; mov dword ptr [rbp], esp ; pop rbp ; ret
0x0000000000402962 : pop rbp ; mov byte ptr [rip + 0x255b6e], 1 ; ret
0x0000000000402901 : pop rbp ; mov edi, 0x658468 ; jmp rax
0x000000000040293e : pop rbp ; mov rsi, rax ; mov edi, 0x658468 ; jmp rdx
0x000000000045078b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004054b1 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000045078f : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004028f5 : pop rbp ; ret
0x0000000000455c61 : pop rbp ; std ; call qword ptr [rdx]
0x0000000000409abe : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000409845 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000418dff : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000415c10 : pop rbx ; pop rbp ; ret
0x00000000004054b5 : pop rdi ; pop rbp ; ret
0x0000000000450793 : pop rdi ; ret
0x000000000044f031 : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x000000000044e6f1 : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x00000000004054b3 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000450791 : pop rsi ; pop r15 ; ret
0x0000000000418e01 : pop rsi ; pop rbp ; ret
0x0000000000428687 : pop rsp ; add dword ptr [rdi], ecx ; ror dword ptr cs:[rdi], -0x69 ; ret 0x348b
0x0000000000455344 : pop rsp ; or byte ptr [rax], al ; add byte ptr [rax - 0x79], bh ; cld ; call qword ptr [rbx]
0x00000000004054af : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000045078d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000409ac0 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000426842 : pop rsp ; ret 0xf66
0x0000000000457444 : pop rsp ; sub dword ptr [rax], eax ; add al, bl ; xchg bh, bh ; jmp rbx
0x000000000043618f : popfq ; ret
0x000000000044e574 : popfq ; ret 0x348b
0x000000000044e640 : popfq ; ret 0xc8b
0x0000000000454830 : push 0x3000002b ; ret
0x0000000000422cc4 : push 0x5d006589 ; ret
0x00000000004543d7 : push qword ptr [rax + 0x30000019] ; xor bh, ch ; call rax
0x00000000004541e7 : push qword ptr [rax + 0x60000011] ; xchg eax, ecx ; cld ; call rax
0x000000000045450f : push qword ptr [rax + 0x6000001e] ; mov ah, -3 ; call rax
0x000000000045412f : push qword ptr [rax - 0x3ffffff2] ; sbb ah, bh ; call rax
0x0000000000454227 : push qword ptr [rax - 0x4fffffee] ; cwde ; cld ; call rax
0x0000000000436bfe : push r8 ; pop rbp ; ret
0x00000000004541f7 : push rax ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x6e], dh ; cld ; call qword ptr [rax]
0x0000000000445ab3 : push rax ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000455019 : push rax ; cld ; jmp rcx
0x000000000040740d : push rax ; pop rbp ; ret
0x0000000000454a64 : push rax ; ret
0x0000000000454a07 : push rax ; xor al, byte ptr [rax] ; add al, dh ; mov al, -1 ; call qword ptr [rax]
0x0000000000445de8 : push rbp ; call 0xd06df3a
0x00000000004463ab : push rbp ; call 0xd06e4fd
0x0000000000436d36 : push rbp ; clc ; pop rbp ; ret
0x00000000004291a3 : push rbp ; enter -0x74b8, 0x32 ; mov rdi, qword ptr [rsi] ; call rcx
0x000000000041d9d9 : push rbp ; fimul word ptr [rdi] ; test dword ptr [rip - 0x17000000], eax ; ret 0
0x00000000004318f7 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000403f45 : push rbp ; mov byte ptr [rax - 0x77], cl ; or ch, cl ; ret
0x0000000000402984 : push rbp ; mov edi, 0x657e20 ; mov rbp, rsp ; call rax
0x0000000000436230 : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000043328e : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000041e5d0 : push rsi ; adc byte ptr [rax + 0x29], cl ; ret 0x8948
0x00000000004074c7 : pushfq ; mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x000000000040567b : pushfq ; ret
0x000000000040801b : pushfq ; ret 0x844
0x0000000000402d2c : pushfq ; ret 0x845
0x0000000000415ef9 : pushfq ; ret 0xd108
0x0000000000447779 : pushfq ; rol dword ptr [rax + rcx - 0x36], -0xa ; ret 0xf01
0x0000000000454320 : rcl byte ptr [rsi], 0 ; add byte ptr [rax], al ; std ; cld ; jmp rax
0x000000000044302e : rcl ebx, -0x11 ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000044305e : rcl ebx, -0x19 ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000454134 : rcr byte ptr [rax], -4 ; call rax
0x00000000004543a0 : rcr byte ptr [rax], 0 ; add byte ptr [rax + 0x1e], al ; std ; jmp rax
0x00000000004002da : ret
0x0000000000407f80 : ret 0
0x000000000044a860 : ret 0x10
0x0000000000408462 : ret 0x1189
0x0000000000402cb0 : ret 0x125
0x0000000000431ce5 : ret 0x13
0x0000000000402762 : ret 0x255b
0x0000000000402562 : ret 0x255c
0x0000000000402362 : ret 0x255d
0x0000000000402162 : ret 0x255e
0x0000000000421d82 : ret 0x28e8
0x000000000040b94a : ret 0x290
0x00000000004304f7 : ret 0x2a
0x000000000044b7ba : ret 0x30e8
0x0000000000409be9 : ret 0x348b
0x000000000044cb74 : ret 0x36e8
0x0000000000440a79 : ret 0x3c8b
0x0000000000412fc7 : ret 0x4001
0x0000000000418afa : ret 0x40e8
0x000000000040b1c3 : ret 0x4401
0x0000000000424068 : ret 0x4801
0x00000000004063f5 : ret 0x48b
0x0000000000429e1c : ret 0x48b0
0x0000000000402ed7 : ret 0x48f0
0x0000000000448c84 : ret 0x4a3b
0x000000000041e6b3 : ret 0x4a8b
0x0000000000434617 : ret 0x4cc0
0x0000000000402f09 : ret 0x4cf0
0x00000000004382fd : ret 0x4de8
0x000000000044be97 : ret 0x53e8
0x0000000000407157 : ret 0x5588
0x0000000000421a48 : ret 0x62e8
0x00000000004368db : ret 0x6601
0x000000000040d1ca : ret 0x6a
0x0000000000413ced : ret 0x6de8
0x0000000000406698 : ret 0x72e8
0x00000000004348a0 : ret 0x7ae8
0x00000000004372ce : ret 0x7ce8
0x00000000004442e5 : ret 0x8041
0x000000000040632f : ret 0x8141
0x0000000000428936 : ret 0x8348
0x000000000040801c : ret 0x844
0x0000000000402d2d : ret 0x845
0x000000000041e034 : ret 0x870f
0x0000000000407b0d : ret 0x8801
0x0000000000430786 : ret 0x8901
0x00000000004077d4 : ret 0x8948
0x0000000000418156 : ret 0x894d
0x0000000000431c6c : ret 0x89a5
0x0000000000431910 : ret 0x8ae8
0x0000000000414b42 : ret 0x8b44
0x000000000041e66b : ret 0x8b48
0x0000000000417ffd : ret 0x8b4c
0x000000000040e9c6 : ret 0x8d88
0x0000000000405c01 : ret 0xa3d
0x0000000000437ea6 : ret 0xa4e8
0x000000000044af3e : ret 0xace8
0x0000000000444f2e : ret 0xb
0x0000000000403ba5 : ret 0xb0
0x0000000000428a0e : ret 0xb948
0x0000000000445dec : ret 0xc
0x0000000000402925 : ret 0xc148
0x000000000041792d : ret 0xc2f6
0x00000000004085c1 : ret 0xc8b
0x0000000000420fe0 : ret 0xcae8
0x0000000000415efa : ret 0xd108
0x0000000000434cbc : ret 0xd284
0x000000000043f334 : ret 0xd6e8
0x0000000000434942 : ret 0xd8e8
0x0000000000407ac3 : ret 0xe280
0x0000000000413f75 : ret 0xe5e8
0x0000000000402ca7 : ret 0xea81
0x000000000044b6fe : ret 0xece8
0x00000000004331dc : ret 0xee8
0x000000000041094c : ret 0xeee8
0x0000000000405c0f : ret 0xf01
0x0000000000424a62 : ret 0xf280
0x000000000044a0a8 : ret 0xf2e8
0x0000000000426843 : ret 0xf66
0x0000000000418984 : ret 0xf6e8
0x000000000042c872 : ret 0xf748
0x000000000040b1b3 : ret 0xf981
0x0000000000416fb1 : ret 0xfa81
0x0000000000446549 : ret 0xfb81
0x000000000043608a : ret 0xfcc0
0x0000000000416bd6 : ret 0xfe81
0x000000000041489a : ret 0xfedc
0x0000000000428a87 : ret 0xff3
0x000000000040753d : ret 0xff70
0x00000000004181b6 : ret 0xff81
0x0000000000449732 : ret 0xffef
0x0000000000449742 : ret 0xfff0
0x000000000040b4b6 : ret 0xfffa
0x00000000004460f4 : ret 0xfffb
0x0000000000413c79 : ret 0xfffc
0x0000000000415f69 : ret 0xfffe
0x000000000041197f : ret 0xffff
0x00000000004052c2 : ret 1
0x00000000004007c0 : ret 2
0x00000000004403c6 : ret 3
0x0000000000413363 : ret 8
0x0000000000456da0 : rol ah, -2 ; jmp qword ptr [rbx]
0x000000000041c3f8 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000415250 : rol byte ptr [rcx], -0x78 ; ret
0x00000000004085bb : rol byte ptr [rcx], 0 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x000000000044777a : rol dword ptr [rax + rcx - 0x36], -0xa ; ret 0xf01
0x0000000000440483 : rol dword ptr [rcx - 0xa], cl ; ret
0x000000000044bf33 : ror byte ptr [r15], -0x69 ; ret 0x348b
0x00000000004492d8 : ror byte ptr [r15], 1 ; xchg eax, esp ; ret 0x348b
0x0000000000428469 : ror byte ptr [r8 - 0x73], 1 ; clc ; pop rbx ; pop rbp ; ret
0x0000000000443f7f : ror byte ptr [r8 - 0x75], 1 ; add byte ptr [rax - 0x75], cl ; jge 0x443f49 ; call rax
0x000000000043d9e3 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000041d702 : ror byte ptr [r8 - 0x7d], -0x3c ; pop rbp ; ret
0x000000000040292c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40293b ; pop rbp ; ret
0x000000000041d3c1 : ror byte ptr [rax - 0x73], 0x65 ; clc ; pop rbx ; pop rbp ; ret
0x000000000042846a : ror byte ptr [rax - 0x73], 1 ; clc ; pop rbx ; pop rbp ; ret
0x000000000044391f : ror byte ptr [rax - 0x75], 1 ; adc byte ptr [rax - 0x75], cl ; jge 0x4438f1 ; call rax
0x0000000000443f01 : ror byte ptr [rax - 0x75], 1 ; adc byte ptr [rax - 0x75], cl ; jge 0x443ed3 ; call rax
0x000000000044415f : ror byte ptr [rax - 0x75], 1 ; adc byte ptr [rax - 0x75], cl ; jge 0x444131 ; call rax
0x0000000000443f80 : ror byte ptr [rax - 0x75], 1 ; add byte ptr [rax - 0x75], cl ; jge 0x443f48 ; call rax
0x000000000044480b : ror byte ptr [rax - 0x75], 1 ; or byte ptr [rax - 0x6af0ffc7], al ; ret 0x348b
0x00000000004440ed : ror byte ptr [rax - 0x75], 1 ; sbb byte ptr [rax - 0x75], cl ; jge 0x4440b7 ; call rax
0x000000000040963a : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x000000000043d9e4 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x000000000040d140 : ror byte ptr [rax - 0x77], 1 ; test dword ptr [rax - 0x17000007], eax ; ret
0x000000000043c0d7 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x43c140 ; ret
0x000000000041500a : ror byte ptr [rax - 0x7d], -0x3c ; pop rbp ; ret
0x0000000000407409 : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x000000000043537a : ror byte ptr [rax - 0x7f], -0x3c ; jo 0x43538a ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000426d77 : ror byte ptr [rbx + rcx*4 + 6], 0x49 ; mov esi, dword ptr [rax] ; call rcx
0x000000000040f4d2 : ror byte ptr [rbx - 0x7df4b], 1 ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000043328f : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000044bf34 : ror byte ptr [rdi], -0x69 ; ret 0x348b
0x00000000004492d9 : ror byte ptr [rdi], 1 ; xchg eax, esp ; ret 0x348b
0x0000000000415c0b : ror dword ptr [rax - 0x73], 0x65 ; clc ; pop rbx ; pop rbp ; ret
0x0000000000445de5 : ror dword ptr [rax - 0x75], 1 ; push rbp ; call 0xd06df3d
0x00000000004463a8 : ror dword ptr [rax - 0x75], 1 ; push rbp ; call 0xd06e500
0x000000000042672d : ror dword ptr [rcx - 0x7d], cl ; ret
0x000000000042868b : ror dword ptr [rdi], -0x69 ; ret 0x348b
0x000000000042868a : ror dword ptr cs:[rdi], -0x69 ; ret 0x348b
0x000000000043b5a7 : sahf ; ret 0x348b
0x000000000044f036 : sahf ; ret 0x5588
0x0000000000421510 : sahf ; ret 0xc8b
0x000000000043ab9d : sahf ; ret 0xe280
0x0000000000430784 : sal dh, cl ; ret 0x8901
0x0000000000455611 : salc ; cld ; call qword ptr [rsi]
0x0000000000454285 : sar ah, -1 ; adc al, 0 ; add al, ah ; ret
0x00000000004555d1 : sar ah, cl ; call qword ptr [rsi]
0x0000000000411979 : sar di, -1 ; jmp 0x40dc00
0x000000000040292e : sar eax, 1 ; jne 0x402939 ; pop rbp ; ret
0x0000000000454d99 : sar ebx, 1 ; call qword ptr [rsi]
0x000000000041197a : sar edi, -1 ; jmp 0x40dbff
0x000000000040292d : sar rax, 1 ; jne 0x40293a ; pop rbp ; ret
0x0000000000454284 : sar spl, -1 ; adc al, 0 ; add al, ah ; ret
0x0000000000454135 : sbb ah, bh ; call rax
0x0000000000456cf8 : sbb al, 0 ; add byte ptr [rax], al ; adc al, 0x22 ; add byte ptr [rax], al ; ret
0x0000000000456cd8 : sbb al, 0 ; add byte ptr [rax], al ; hlt ; and dword ptr [rax], eax ; add byte ptr [rax], dh ; ret
0x0000000000456d18 : sbb al, 0 ; add byte ptr [rax], al ; xor al, 0x22 ; add byte ptr [rax], al ; push rax ; ret
0x000000000043abb1 : sbb byte ptr [r15], cl ; sahf ; ret 0xe280
0x00000000004440f1 : sbb byte ptr [rax - 0x75], cl ; jge 0x4440b3 ; call rax
0x00000000004440f0 : sbb byte ptr [rax - 0x75], cl ; jge 0x4440b4 ; call rax
0x0000000000454371 : sbb byte ptr [rax], al ; add byte ptr [rax + 0x14], al ; std ; jmp qword ptr [rax]
0x00000000004543a1 : sbb byte ptr [rax], al ; add byte ptr [rax + 0x1e], al ; std ; jmp rax
0x000000000043ffe0 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004502e8 : sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000004083d9 : sbb byte ptr [rcx - 0xa], al ; jmp qword ptr [rcx]
0x000000000043abb2 : sbb byte ptr [rdi], cl ; sahf ; ret 0xe280
0x000000000042fa20 : sbb cl, byte ptr [rcx - 0x7f] ; ret
0x0000000000455718 : sbb dh, ah ; cld ; call qword ptr [rax]
0x00000000004543b1 : sbb dword ptr [rax], eax ; add al, dh ; and bh, ch ; jmp qword ptr [rax]
0x00000000004543d9 : sbb dword ptr [rax], eax ; add byte ptr [rax], dh ; xor bh, ch ; call rax
0x000000000043fd87 : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004074af : scasd eax, dword ptr [rdi] ; ret
0x0000000000402caf : scasd eax, dword ptr [rdi] ; ret 0x125
0x0000000000406339 : scasd eax, dword ptr [rdi] ; ret 0x8141
0x00000000004284d4 : sete al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000454650 : shl byte ptr [rbx], 0 ; add byte ptr [rax], ah ; and edi, esi ; jmp rax
0x00000000004284d6 : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000454184 : shl byte ptr [rcx - 4], 1 ; jmp qword ptr [rax]
0x00000000004545d0 : shl byte ptr [rcx], 0 ; add byte ptr [rax], dh ; or esi, edi ; jmp rax
0x00000000004546d0 : shl byte ptr [rip + 0x2cd00000], -2 ; jmp rax
0x0000000000426866 : shl dword ptr [rsi + 0xf], 0x5c ; ret 0xf66
0x000000000044305f : shl edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000442ff8 : shl edx, cl ; or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x000000000040feee : shr al, 1 ; insb byte ptr [rdi], dx ; ret 2
0x0000000000455b10 : shr byte ptr [rcx], 1 ; std ; call rcx
0x00000000004546d4 : shr byte ptr [rsi + rdi*8], 1 ; jmp rax
0x000000000044302f : shr edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000454171 : sldt word ptr [rax] ; mov al, 0x60 ; cld ; jmp rax
0x000000000044e63a : stc ; add byte ptr [r8], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x0000000000407150 : stc ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x00000000004089f8 : stc ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x000000000041d079 : stc ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000044f030 : stc ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x000000000044e6f0 : stc ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x00000000004085ba : stc ; rol byte ptr [rcx], 0 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x0000000000454526 : std ; call qword ptr [rax]
0x0000000000456192 : std ; call qword ptr [rdi]
0x00000000004558da : std ; call qword ptr [rdx]
0x00000000004543de : std ; call rax
0x0000000000455eca : std ; call rbx
0x0000000000455b12 : std ; call rcx
0x00000000004559ea : std ; call rdx
0x0000000000454325 : std ; cld ; jmp rax
0x000000000045436e : std ; inc dword ptr [rax] ; sbb byte ptr [rax], al ; add byte ptr [rax + 0x14], al ; std ; jmp qword ptr [rax]
0x00000000004543ae : std ; inc dword ptr [rax] ; sbb dword ptr [rax], eax ; add al, dh ; and bh, ch ; jmp qword ptr [rax]
0x000000000045439e : std ; inc eax ; sbb byte ptr [rax], al ; add byte ptr [rax + 0x1e], al ; std ; jmp rax
0x0000000000454376 : std ; jmp qword ptr [rax]
0x0000000000455d82 : std ; jmp qword ptr [rcx]
0x0000000000455e6a : std ; jmp qword ptr [rdi]
0x0000000000454366 : std ; jmp rax
0x00000000004543d6 : std ; push qword ptr [rax + 0x30000019] ; xor bh, ch ; call rax
0x000000000045450e : std ; push qword ptr [rax + 0x6000001e] ; mov ah, -3 ; call rax
0x000000000044e4fb : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000454d9a : sti ; call qword ptr [rsi]
0x0000000000454d3a : sti ; call rdi
0x00000000004540c6 : sti ; inc dword ptr [rax] ; or eax, 0x61300000 ; sti ; jmp qword ptr [rax]
0x00000000004540ce : sti ; jmp qword ptr [rax]
0x00000000004546d5 : sub al, -2 ; jmp rax
0x0000000000455714 : sub al, 0xc ; add byte ptr [rax], al ; sbb dh, ah ; cld ; call qword ptr [rax]
0x00000000004546a5 : sub dh, bh ; jmp qword ptr [rax]
0x0000000000454695 : sub dh, bh ; jmp rax
0x0000000000457445 : sub dword ptr [rax], eax ; add al, bl ; xchg bh, bh ; jmp rbx
0x0000000000422c59 : sub eax, 0x48000000 ; mov esp, ebp ; pop rbp ; ret
0x0000000000454831 : sub eax, dword ptr [rax] ; add byte ptr [rax], dh ; ret
0x000000000041a6bd : sub eax, edx ; add rsi, rax ; mov rax, rsi ; pop rbp ; ret
0x0000000000455b11 : sub ebp, edi ; call rcx
0x0000000000450841 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000450840 : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000420681 : test al, 0x48 ; add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004482d2 : test al, 2 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000045079a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000042cf9d : test byte ptr [rbp], ah ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000402904 : test byte ptr [rbp], ah ; jmp rax
0x0000000000402944 : test byte ptr [rbp], ah ; jmp rdx
0x0000000000449e85 : test byte ptr [rip - 0x17000000], al ; ret
0x000000000045696c : test byte ptr [rsi], bl ; add byte ptr [rax], al ; and byte ptr [rsi - 2], dh ; jmp rcx
0x000000000041e02d : test dword ptr [rax + 0x2b], 0x39481047 ; ret 0x870f
0x0000000000407f7a : test dword ptr [rax - 0x16000002], esi ; ret 0
0x000000000040d143 : test dword ptr [rax - 0x17000007], eax ; ret
0x00000000004178cf : test dword ptr [rip - 0x17000000], eax ; call qword ptr [rsi]
0x000000000040af63 : test dword ptr [rip - 0x17000000], eax ; ret
0x0000000000409620 : test dword ptr [rip - 0x17000000], eax ; ret 0
0x0000000000431cdf : test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x00000000004304f1 : test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x0000000000444f28 : test dword ptr [rip - 0x17000000], eax ; ret 0xb
0x00000000004315dc : test dword ptr [rip - 0x17000000], eax ; ret 1
0x00000000004403c0 : test dword ptr [rip - 0x17000000], eax ; ret 3
0x000000000041335d : test dword ptr [rip - 0x17000000], eax ; ret 8
0x000000000043e7d3 : test eax, 0x48fffffc ; add esp, 0x10 ; pop rbp ; ret
0x0000000000457449 : xchg bh, bh ; jmp rbx
0x0000000000456b01 : xchg dh, bh ; jmp rsi
0x000000000041f3fe : xchg eax, ebp ; ret
0x0000000000409be8 : xchg eax, ebp ; ret 0x348b
0x0000000000440a78 : xchg eax, ebp ; ret 0x3c8b
0x00000000004109e1 : xchg eax, ebp ; ret 0x48b
0x00000000004442e4 : xchg eax, ebp ; ret 0x8041
0x0000000000414b41 : xchg eax, ebp ; ret 0x8b44
0x00000000004085c0 : xchg eax, ebp ; ret 0xc8b
0x000000000044ffa4 : xchg eax, ebp ; ret 0xd284
0x0000000000407ac2 : xchg eax, ebp ; ret 0xe280
0x0000000000424a61 : xchg eax, ebp ; ret 0xf280
0x00000000004194a4 : xchg eax, ebx ; add byte ptr gs:[rbp - 0x77], al ; ret
0x000000000040632a : xchg eax, ebx ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x00000000004074a0 : xchg eax, ebx ; add byte ptr gs:[rcx - 0x77], al ; ret
0x0000000000411e81 : xchg eax, ebx ; add byte ptr gs:[rcx - 0x77], al ; ret 0x8141
0x0000000000447948 : xchg eax, ebx ; ret 0x348b
0x0000000000455ec9 : xchg eax, ebx ; std ; call rbx
0x00000000004541ed : xchg eax, ecx ; cld ; call rax
0x000000000042294e : xchg eax, edi ; ret 0x348b
0x00000000004361f0 : xchg eax, edi ; ret 0xe280
0x00000000004541fd : xchg eax, edx ; cld ; call qword ptr [rax]
0x0000000000427193 : xchg eax, edx ; ret 0x348b
0x0000000000455e69 : xchg eax, edx ; std ; jmp qword ptr [rdi]
0x0000000000409cc1 : xchg eax, esi ; ret 0x348b
0x0000000000455d7c : xchg eax, esp ; adc al, byte ptr [rax] ; add byte ptr [rax + 0x6d], dh ; std ; jmp qword ptr [rcx]
0x00000000004051d3 : xchg eax, esp ; ret
0x0000000000409dab : xchg eax, esp ; ret 0x348b
0x00000000004063f4 : xchg eax, esp ; ret 0x48b
0x0000000000407156 : xchg eax, esp ; ret 0x5588
0x00000000004068ae : xchg eax, esp ; ret 0x8141
0x000000000042011a : xchg eax, esp ; ret 0x8b44
0x0000000000405c00 : xchg eax, esp ; ret 0xa3d
0x00000000004089fe : xchg eax, esp ; ret 0xc8b
0x0000000000434cbb : xchg eax, esp ; ret 0xd284
0x00000000004215c6 : xchg eax, esp ; ret 0xe280
0x000000000040b1b2 : xchg eax, esp ; ret 0xf981
0x0000000000416fb0 : xchg eax, esp ; ret 0xfa81
0x0000000000446548 : xchg eax, esp ; ret 0xfb81
0x0000000000416bd5 : xchg eax, esp ; ret 0xfe81
0x00000000004181b5 : xchg eax, esp ; ret 0xff81
0x00000000004284d5 : xchg eax, esp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000422873 : xchg eax, r8d ; pop rbp ; ret
0x0000000000455349 : xchg esp, edi ; call qword ptr [rbx]
0x0000000000442ffc : xlatb ; mov rax, rdi ; pop rbp ; ret
0x0000000000456d1c : xor al, 0x22 ; add byte ptr [rax], al ; push rax ; ret
0x0000000000411e7e : xor al, 0x25 ; or al, 0xffffffffffffff93 ; add byte ptr gs:[rcx - 0x77], al ; ret 0x8141
0x0000000000403f63 : xor al, 0x25 ; ret
0x0000000000454a09 : xor al, byte ptr [rax] ; add al, dh ; mov al, -1 ; call qword ptr [rax]
0x00000000004543dd : xor bh, ch ; call rax
0x0000000000434897 : xor byte ptr [rax - 0x75], cl ; add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x0000000000434939 : xor byte ptr [rax - 0x75], cl ; add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x0000000000456930 : xor byte ptr [rbp - 2], dh ; call rsp
0x00000000004540cc : xor byte ptr [rcx - 5], ah ; jmp qword ptr [rax]
0x00000000004543dc : xor byte ptr [rdx], dh ; std ; call rax
0x00000000004291a7 : xor cl, byte ptr [rax - 0x75] ; call rcx
0x0000000000445fe9 : xor edi, dword ptr [rsi] ; add r8b, r13b ; out dx, al ; ret
0x000000000042f476 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
