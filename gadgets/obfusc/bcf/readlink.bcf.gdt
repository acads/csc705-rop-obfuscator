0x000000000041b19d : adc al, -1 ; jmp rax
0x000000000041c324 : adc al, 0xe ; add byte ptr [rax], al ; call 0x2841c2c8
0x0000000000403e09 : adc byte ptr [rax], al ; add byte ptr [rdi], cl ; lahf ; ret 0x348b
0x000000000041b3a1 : adc eax, dword ptr [rax] ; add byte ptr [rax], ah ; test al, -1 ; jmp qword ptr [rax]
0x000000000041bbc9 : adc edi, edi ; jmp qword ptr [rcx]
0x0000000000401737 : add al, ch ; ret
0x0000000000402df8 : add al, ch ; ret 0xffe4
0x0000000000419dbf : add bl, dh ; ret
0x0000000000418beb : add byte ptr [r8], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x000000000040ba43 : add byte ptr [rax - 0x73], cl ; clc ; pop rbx ; pop rbp ; ret
0x0000000000407b87 : add byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x0000000000414050 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000040ce07 : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000406539 : add byte ptr [rax - 0x77], cl ; or cl, ch ; ret
0x000000000041b2e3 : add byte ptr [rax], ah ; jl 0x41b2ea ; call qword ptr [rax]
0x000000000041b11b : add byte ptr [rax], ah ; sar dh, 1 ; call rax
0x000000000041b3a3 : add byte ptr [rax], ah ; test al, -1 ; jmp qword ptr [rax]
0x000000000041c322 : add byte ptr [rax], al ; adc al, 0xe ; add byte ptr [rax], al ; call 0x2841c2ca
0x0000000000401735 : add byte ptr [rax], al ; add al, ch ; ret
0x0000000000419dbd : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000407b85 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x000000000040ce05 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000406537 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; or cl, ch ; ret
0x0000000000419dbb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000400600 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000400602 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000405f5c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000419c59 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000407b84 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000419dbc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400604 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000041a7ac : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x40f8
0x000000000040773d : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x8141
0x0000000000411e28 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040b27b : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000041b2d2 : add byte ptr [rax], al ; add byte ptr [rbx - 1], bh ; call rax
0x0000000000401aab : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret
0x000000000040e88b : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x844
0x0000000000401c2c : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x000000000041325a : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x000000000040d91a : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x125
0x0000000000415e5f : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x000000000040774f : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000401aa0 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x00000000004166a9 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8b44
0x0000000000411dc8 : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x51], al ; ret
0x0000000000418b20 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x0000000000418bec : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x000000000040775a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret
0x00000000004127d6 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x00000000004195e2 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x0000000000418ca2 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x0000000000415764 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret
0x0000000000401755 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x125
0x0000000000409afa : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000413bd7 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x000000000041471e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x00000000004036f2 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x000000000040604d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf280
0x0000000000413e51 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x0000000000404022 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000403912 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x000000000040e881 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x0000000000401901 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x0000000000402f67 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x0000000000412dc7 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041bf0e : add byte ptr [rax], al ; add byte ptr [rsi - 1], ah ; call qword ptr [rdi]
0x000000000040598d : add byte ptr [rax], al ; add cl, ch ; ret
0x00000000004043ec : add byte ptr [rax], al ; add cl, ch ; ret 0
0x000000000040fdf1 : add byte ptr [rax], al ; add cl, ch ; ret 0x13
0x000000000040e603 : add byte ptr [rax], al ; add cl, ch ; ret 0x2a
0x00000000004172ca : add byte ptr [rax], al ; add cl, ch ; ret 0xb
0x000000000040f6ee : add byte ptr [rax], al ; add cl, ch ; ret 1
0x00000000004058ff : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401ac5 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405f5e : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401d05 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040126b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000041b1db : add byte ptr [rax], al ; and bh, bh ; jmp rax
0x000000000041c806 : add byte ptr [rax], al ; call 0x1141c7e7
0x000000000041c326 : add byte ptr [rax], al ; call 0x2841c2c6
0x0000000000401409 : add byte ptr [rax], al ; jmp 0x401289
0x0000000000402df2 : add byte ptr [rax], al ; jmp 0x4052dc
0x000000000041b2d3 : add byte ptr [rax], al ; jnp 0x41b2da ; call rax
0x0000000000415bbc : add byte ptr [rax], al ; mov al, sil ; movzx eax, al ; pop rbp ; ret
0x0000000000415a0d : add byte ptr [rax], al ; mov ax, si ; movzx eax, ax ; pop rbp ; ret
0x000000000040d6f2 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000419c5b : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x000000000041c21e : add byte ptr [rax], al ; mov edi, dr1 ; call rcx
0x000000000040d362 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000407fb9 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000407b86 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040ce06 : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000041c21a : add byte ptr [rax], al ; or al, 0xd ; add byte ptr [rax], al ; mov edi, dr1 ; call rcx
0x000000000040c41b : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000411e29 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004052cd : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040b27c : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000041b1ea : add byte ptr [rax], al ; push rax ; and edi, edi ; jmp qword ptr [rax]
0x0000000000419dbe : add byte ptr [rax], al ; ret
0x0000000000400606 : add byte ptr [rax], al ; ret 0
0x000000000041a7ae : add byte ptr [rax], al ; ret 0x40f8
0x000000000041baa7 : add byte ptr [rax], bl ; add edi, edi ; call qword ptr [rdx]
0x000000000041b897 : add byte ptr [rax], bl ; ret
0x000000000040773f : add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x8141
0x0000000000407735 : add byte ptr [rbp - 0x77], al ; ret 0x8141
0x0000000000411e2a : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004052ce : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040b27d : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000041b2d4 : add byte ptr [rbx - 1], bh ; call rax
0x000000000040402e : add byte ptr [rcx + 0xf], al ; pushfq ; mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x0000000000401aad : add byte ptr [rcx + 0xf], al ; pushfq ; ret
0x000000000040e88d : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x844
0x0000000000401c2e : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x000000000041325c : add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x000000000040d91c : add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x125
0x0000000000415e61 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x0000000000407751 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000401aa2 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x00000000004166ab : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8b44
0x000000000041219c : add byte ptr [rcx + 0xfe], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004129d8 : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040e87d : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x00000000004018fd : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x0000000000413252 : add byte ptr [rcx - 0x77], al ; ret
0x000000000040d912 : add byte ptr [rcx - 0x77], al ; ret 0x8141
0x00000000004150b6 : add byte ptr [rcx - 0xe1703bb], cl ; ret 0xfffe
0x00000000004016e8 : add byte ptr [rcx], al ; ret
0x0000000000411dca : add byte ptr [rdi + rcx - 0x51], al ; ret
0x0000000000403e0b : add byte ptr [rdi], cl ; lahf ; ret 0x348b
0x0000000000418b22 : add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x0000000000418bee : add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x000000000040775c : add byte ptr [rdi], cl ; pushfq ; ret
0x00000000004127d8 : add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x00000000004195e4 : add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x0000000000418ca4 : add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x0000000000415766 : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret
0x0000000000401757 : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x125
0x0000000000401731 : add byte ptr [rdi], cl ; test byte ptr [rdx], cl ; add byte ptr [rax], al ; add al, ch ; ret
0x0000000000409afc : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000413bd9 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x0000000000414720 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x00000000004036f4 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x000000000040604f : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf280
0x0000000000413e53 : add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x0000000000404024 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000403914 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x000000000040e883 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x0000000000401903 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x0000000000402f69 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x0000000000412dc9 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000406a7f : add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x000000000041c323 : add byte ptr [rsi + rcx], dl ; add byte ptr [rax], al ; call 0x2841c2c9
0x000000000041bf10 : add byte ptr [rsi - 1], ah ; call qword ptr [rdi]
0x00000000004039c5 : add byte ptr cs:[rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x000000000040598f : add cl, ch ; ret
0x00000000004043ee : add cl, ch ; ret 0
0x000000000040fdf3 : add cl, ch ; ret 0x13
0x000000000040e605 : add cl, ch ; ret 0x2a
0x00000000004172cc : add cl, ch ; ret 0xb
0x000000000040f6f0 : add cl, ch ; ret 1
0x00000000004129aa : add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x0000000000412a4c : add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x00000000004052cc : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000411050 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000405736 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406063 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040a740 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000418d05 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000406890 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004088c8 : add dword ptr [rdi], ecx ; ror dword ptr cs:[rdi], -0x69 ; ret 0x348b
0x0000000000405989 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret
0x00000000004043e8 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0
0x000000000040fded : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x000000000040e5ff : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x00000000004172c6 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0xb
0x000000000040f6ea : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 1
0x000000000040b617 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x348b
0x00000000004016e4 : add eax, 0x21bbae ; add ebx, esi ; ret
0x000000000040ce04 : add eax, 0x48000000 ; mov esp, ebp ; pop rbp ; ret
0x000000000040598c : add eax, 0xe9000000 ; ret
0x00000000004043eb : add eax, 0xe9000000 ; ret 0
0x000000000040fdf0 : add eax, 0xe9000000 ; ret 0x13
0x000000000040e602 : add eax, 0xe9000000 ; ret 0x2a
0x00000000004172c9 : add eax, 0xe9000000 ; ret 0xb
0x000000000040f6ed : add eax, 0xe9000000 ; ret 1
0x000000000041b895 : add eax, dword ptr [rax] ; add byte ptr [rax], bl ; ret
0x00000000004016ab : add eax, edx ; sar rax, 1 ; jne 0x4016bc ; pop rbp ; ret
0x00000000004016e9 : add ebx, esi ; ret
0x000000000041baa9 : add edi, edi ; call qword ptr [rdx]
0x000000000041b16d : add edi, edi ; jmp qword ptr [rax]
0x0000000000405902 : add esp, 0x10 ; pop rbp ; ret
0x00000000004131fc : add esp, 0x170 ; pop rbp ; ret
0x000000000041104d : add esp, 0x178 ; pop rbx ; pop rbp ; ret
0x000000000041423c : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000401ac8 : add esp, 0x20 ; pop rbp ; ret
0x000000000040573b : add esp, 0x30 ; pop rbp ; ret
0x0000000000406068 : add esp, 0x40 ; pop rbp ; ret
0x0000000000413d7f : add esp, 0x40 ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000401d08 : add esp, 0x50 ; pop rbp ; ret
0x000000000040a745 : add esp, 0x60 ; pop rbp ; ret
0x00000000004123e2 : add esp, 0x70 ; pop rbp ; ret
0x000000000041146e : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000041409c : add esp, 0xb0 ; pop rbp ; ret
0x000000000040c417 : add esp, 0xc0 ; pop rbp ; ret
0x000000000040b278 : add esp, 0xd8 ; pop rbx ; pop rbp ; ret
0x000000000040126e : add esp, 8 ; ret
0x00000000004016aa : add rax, rdx ; sar rax, 1 ; jne 0x4016bd ; pop rbp ; ret
0x0000000000405901 : add rsp, 0x10 ; pop rbp ; ret
0x00000000004131fb : add rsp, 0x170 ; pop rbp ; ret
0x000000000041104c : add rsp, 0x178 ; pop rbx ; pop rbp ; ret
0x000000000041423b : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000401ac7 : add rsp, 0x20 ; pop rbp ; ret
0x000000000040573a : add rsp, 0x30 ; pop rbp ; ret
0x0000000000406067 : add rsp, 0x40 ; pop rbp ; ret
0x0000000000413d7e : add rsp, 0x40 ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000401d07 : add rsp, 0x50 ; pop rbp ; ret
0x000000000040a744 : add rsp, 0x60 ; pop rbp ; ret
0x00000000004123e1 : add rsp, 0x70 ; pop rbp ; ret
0x000000000041146d : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000041409b : add rsp, 0xb0 ; pop rbp ; ret
0x000000000040c416 : add rsp, 0xc0 ; pop rbp ; ret
0x000000000040b277 : add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x000000000040126d : add rsp, 8 ; ret
0x0000000000402df6 : and al, 0 ; add al, ch ; ret 0xffe4
0x0000000000418d04 : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040688f : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041b1dd : and bh, bh ; jmp rax
0x0000000000406791 : and byte ptr [r15], cl ; xchg eax, esp ; ret 0x348b
0x0000000000406792 : and byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x00000000004016e7 : and dword ptr [rax], eax ; add ebx, esi ; ret
0x0000000000408035 : and eax, 0x41a710 ; mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x0000000000412ad7 : and eax, 0x48ffffee ; add esp, 0x20 ; pop rbp ; ret
0x000000000040575f : and eax, 0x61d2a0 ; pop rbp ; ret
0x0000000000405783 : and eax, 0x61d2a8 ; pop rbp ; ret
0x000000000041b1ed : and edi, edi ; jmp qword ptr [rax]
0x000000000041c808 : call 0x1141c7e5
0x000000000041c328 : call 0x2841c2c4
0x0000000000415079 : call 0x401372
0x00000000004150ba : call 0x4013b2
0x000000000041514a : call 0x401432
0x00000000004112e9 : call 0xffffffffe9039c39
0x00000000004112e8 : call 0xffffffffe9039c3a
0x0000000000408eb4 : call 0xffffffffff7a1a05
0x0000000000408eb3 : call 0xffffffffff7a1a06
0x0000000000419d99 : call qword ptr [r12 + rbx*8]
0x000000000041b12f : call qword ptr [rax]
0x000000000041bf13 : call qword ptr [rdi]
0x000000000041b723 : call qword ptr [rdx]
0x000000000041b643 : call qword ptr [rsi]
0x0000000000419d9a : call qword ptr [rsp + rbx*8]
0x00000000004071bd : call r8
0x000000000040170d : call rax
0x000000000041bc4b : call rbx
0x0000000000406fbe : call rcx
0x000000000041b833 : call rdx
0x000000000041c143 : call rsp
0x000000000040c6e8 : clc ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407476 : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407da0 : clc ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040b8b2 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040c415 : clc ; add rsp, 0xc0 ; pop rbp ; ret
0x00000000004016af : clc ; jne 0x4016b8 ; pop rbp ; ret
0x000000000040c4ae : clc ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040607b : clc ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040609b : clc ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x00000000004060bb : clc ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000407b8b : clc ; pop rbp ; ret
0x00000000004086ae : clc ; pop rbx ; pop rbp ; ret
0x00000000004150b9 : cld ; call 0x4013b3
0x00000000004150b8 : cld ; call 0x4013b4
0x0000000000419d36 : cld ; mov dword ptr [rbp - 0xc], eax ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000419946 : cli ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000415369 : cmp al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000401d03 : cmp al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000418dce : cmp byte ptr [rax], ah ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x0000000000406e6d : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000418b1e : cmp byte ptr [rax], dh ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000041920e : cmp byte ptr [rcx], ah ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x0000000000407cb5 : cmp dword ptr [rax - 0x75], ecx ; jne 0x407c9f ; call rax
0x00000000004166a7 : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8b44
0x0000000000409af8 : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x000000000041471c : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x000000000041177d : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406cfe : cmp dword ptr [rcx], eax ; add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x000000000040166d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401680 ; pop rbp ; ret
0x0000000000406a7d : cmp eax, dword ptr [rcx] ; add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x0000000000402a74 : dec byte ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x000000000040da0f : dec byte ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret
0x0000000000413466 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000417bc4 : dec dword ptr [rax - 0x7f] ; ret 1
0x0000000000403945 : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x000000000041139b : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x00000000004093e4 : enter -0x74b8, 0x32 ; mov rdi, qword ptr [rsi] ; call rcx
0x0000000000407cb2 : enter -0x74b8, 0x39 ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x0000000000412e6a : enter -0x7cb8, -0x3c ; pop rbp ; ret
0x000000000040390e : enter 0x3d48, 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x000000000040b27a : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040c879 : fbld dword ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000040c87a : fbld dword ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x0000000000403d64 : fiadd dword ptr [rcx - 0xa] ; ret 0x4001
0x00000000004125cf : fiadd dword ptr [rcx - 0xa] ; ret 0x4801
0x0000000000405e0b : fiadd dword ptr [rcx - 0xa] ; ret 0x8801
0x0000000000401ab4 : fiadd dword ptr [rcx - 0xa] ; ret 0x8901
0x0000000000409e78 : fiadd dword ptr [rcx - 0xa] ; ret 0xf01
0x0000000000407762 : fild dword ptr [rcx - 0xa] ; ret
0x000000000040fa08 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000419d9c : fmul qword ptr [rax - 0x7d] ; ret
0x00000000004142c3 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000419d39 : hlt ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000401680 : hlt ; pop rbp ; mov edi, 0x61d260 ; jmp rax
0x0000000000419c5f : hlt ; pop rbp ; ret
0x000000000040ce0a : in al, dx ; pop rbp ; ret
0x000000000040867e : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000409e62 : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x000000000041219e : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000041b39f : inc dword ptr [rax] ; adc eax, dword ptr [rax] ; add byte ptr [rax], ah ; test al, -1 ; jmp qword ptr [rax]
0x0000000000411883 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000403d4e : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x00000000004129da : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040e87f : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x00000000004018ff : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x0000000000403bc3 : inc dword ptr [rcx + 0x2ff9] ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x0000000000418be8 : inc dword ptr [rcx + 0x41f9] ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x00000000004195de : inc dword ptr [rcx + 0x5af9] ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x0000000000418c9e : inc dword ptr [rcx + 0x5af9] ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x000000000041b1d7 : inc eax ; or eax, dword ptr [rax] ; add byte ptr [rax], al ; and bh, bh ; jmp rax
0x0000000000414058 : int 0x80
0x00000000004150bb : int1 ; ret 0xfffe
0x0000000000401673 : ja 0x40167a ; pop rbp ; ret
0x000000000040c4b1 : ja 0x40c4fe ; pop rbp ; ret
0x000000000040167f : je 0x40167d ; pop rbp ; mov edi, 0x61d260 ; jmp rax
0x000000000040607a : jge 0x40607b ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040609a : jge 0x40609b ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x00000000004060ba : jge 0x4060bb ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000040b400 : jge 0x40b3f3 ; mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040c4ad : jge 0x40c4ae ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000415074 : jge 0x41505d ; mov rdi, rax ; call 0x401377
0x000000000041b2e5 : jl 0x41b2e8 ; call qword ptr [rax]
0x000000000040140b : jmp 0x401287
0x0000000000402df4 : jmp 0x4052da
0x0000000000408b73 : jmp 0x490314c3
0x0000000000408cb5 : jmp 0x49031605
0x000000000040acb0 : jmp 0x49033600
0x000000000040ad1d : jmp 0x4903366d
0x000000000040bfea : jmp 0x4903493a
0x000000000040c057 : jmp 0x490349a7
0x000000000041b16f : jmp qword ptr [rax]
0x000000000041c3eb : jmp qword ptr [rbx]
0x000000000041bbcb : jmp qword ptr [rcx]
0x000000000041c32b : jmp qword ptr [rdi]
0x0000000000401687 : jmp rax
0x0000000000401ee3 : jmp rcx
0x00000000004016c7 : jmp rdx
0x00000000004016b0 : jne 0x4016b7 ; pop rbp ; ret
0x0000000000406fb6 : jne 0x406f80 ; mov r8, qword ptr [rsi] ; mov rsi, qword ptr [r8] ; call rcx
0x0000000000407cb8 : jne 0x407c9c ; call rax
0x000000000041b2d5 : jnp 0x41b2d8 ; call rax
0x000000000040729f : jo 0x4072b8 ; mov qword ptr [rbp - 0x48], rdx ; call r8
0x00000000004123e4 : jo 0x412445 ; ret
0x00000000004131fe : jo 0x413206 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041104f : js 0x411058 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000411470 : js 0x4114d0 ; pop rbp ; ret
0x0000000000403e0d : lahf ; ret 0x348b
0x000000000040bb60 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004064ca : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004086ac : lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040bb5f : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004086ab : lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x00000000004157f9 : loop 0x41584b ; or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x00000000004159d1 : loop 0x415a23 ; or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x0000000000408aa9 : loopne 0x408b0f ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040cb09 : loopne 0x40cb5a ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040cb08 : loopne 0x40cb5b ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x00000000004118af : loopne 0x411900 ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x00000000004118ae : loopne 0x411901 ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000414f25 : loopne 0x414f75 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000414f24 : loopne 0x414f76 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000415075 : loopne 0x4150c5 ; mov edi, eax ; call 0x401376
0x00000000004169aa : loopne 0x416a10 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041409e : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041b2d0 : mov al, 0xf ; add byte ptr [rax], al ; add byte ptr [rbx - 1], bh ; call rax
0x00000000004052cb : mov al, 1 ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040c878 : mov al, byte ptr [rbp - 0x21] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040688c : mov al, byte ptr [rbp - 0x33] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000418aa9 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000419944 : mov al, byte ptr [rbp - 6] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000415bbf : mov al, dh ; movzx eax, al ; pop rbp ; ret
0x0000000000415bbe : mov al, sil ; movzx eax, al ; pop rbp ; ret
0x0000000000415a0f : mov ax, si ; movzx eax, ax ; pop rbp ; ret
0x0000000000415a13 : mov bh, -0x40 ; pop rbp ; ret
0x0000000000405781 : mov byte ptr [0x61d2a8], al ; pop rbp ; ret
0x0000000000404032 : mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x0000000000405988 : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret
0x0000000000413156 : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 0
0x000000000040fdec : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x000000000040e5fe : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x00000000004115d6 : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 1
0x00000000004016e3 : mov byte ptr [rip + 0x21bbae], 1 ; ret
0x0000000000405738 : mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406065 : mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040a742 : mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000415b57 : mov dh, -0x40 ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000418d07 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000406892 : mov dh, -0x40 ; pop rbp ; ret
0x000000000040575d : mov dword ptr [0x61d2a0], edi ; pop rbp ; ret
0x000000000040d43a : mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040d588 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000415147 : mov dword ptr [rbp - 0x10], ecx ; call 0x401435
0x0000000000415073 : mov dword ptr [rbp - 0x20], edi ; mov rdi, rax ; call 0x401378
0x00000000004071b6 : mov dword ptr [rbp - 0x30], eax ; mov qword ptr [rbp - 0x38], rdx ; call r8
0x00000000004071ba : mov dword ptr [rbp - 0x38], edx ; call r8
0x00000000004072a2 : mov dword ptr [rbp - 0x48], edx ; call r8
0x00000000004142c1 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000419d37 : mov dword ptr [rbp - 0xc], eax ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x00000000004150b7 : mov dword ptr [rbp - 4], eax ; call 0x4013b5
0x000000000040803a : mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x000000000040c4b0 : mov dword ptr [rdi + 0x48], esi ; pop rbp ; ret
0x000000000041146c : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000414965 : mov eax, 0xf0658d48 ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040ba42 : mov eax, dword ptr [rax] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x00000000004184c1 : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040d368 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000414491 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405c64 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004184be : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040d365 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000041201a : mov eax, dword ptr [rbp - 0x10] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000405b53 : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040d6f4 : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000041439f : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d31d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040d434 : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004125e4 : mov eax, dword ptr [rbp - 0x18] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000414f23 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040cb07 : mov eax, dword ptr [rbp - 0x20] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x00000000004182d8 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040bcc4 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000407fbc : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000415d92 : mov eax, dword ptr [rbp - 0x30] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004086a8 : mov eax, dword ptr [rbp - 0x30] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000412e68 : mov eax, dword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041146a : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000419c5d : mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x000000000040c6e6 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407474 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407d9e : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040b8b0 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000407b89 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040607d : mov eax, dword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040609d : mov eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0x00000000004060bd : mov eax, dword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000406fb9 : mov eax, dword ptr [rsi] ; mov rsi, qword ptr [r8] ; call rcx
0x00000000004157fe : mov eax, edi ; pop rbp ; ret
0x0000000000415a10 : mov eax, esi ; movzx eax, ax ; pop rbp ; ret
0x0000000000415833 : mov eax, esi ; pop rbp ; ret
0x000000000040170b : mov ebp, esp ; call rax
0x0000000000401671 : mov ebp, esp ; ja 0x40167c ; pop rbp ; ret
0x00000000004016e6 : mov ebx, 0xf3010021 ; ret
0x0000000000401edc : mov ecx, dword ptr [rax*8 + 0x419e30] ; jmp rcx
0x000000000040ddb7 : mov ecx, dword ptr [rax*8 + 0x41a760] ; jmp rcx
0x000000000040e8d1 : mov ecx, dword ptr [rax*8 + 0x41a7a8] ; jmp rcx
0x0000000000413522 : mov ecx, dword ptr [rax*8 + 0x41ac68] ; jmp rcx
0x000000000040d437 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000408fa2 : mov ecx, dword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000408eb2 : mov ecx, dword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040b403 : mov ecx, dword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040b6ca : mov ecx, dword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000041585d : mov ecx, eax ; shl edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000041582d : mov ecx, eax ; shr edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000401705 : mov edi, 0x61ce20 ; mov rbp, rsp ; call rax
0x0000000000401682 : mov edi, 0x61d260 ; jmp rax
0x00000000004016c2 : mov edi, 0x61d260 ; jmp rdx
0x000000000041c221 : mov edi, dr1 ; call rcx
0x000000000040c4ac : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000406079 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000406099 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x00000000004060b9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000408eb6 : mov edi, dword ptr [rcx] ; call rax
0x0000000000407cb4 : mov edi, dword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x00000000004093e9 : mov edi, dword ptr [rsi] ; call rcx
0x0000000000415077 : mov edi, eax ; call 0x401374
0x0000000000419d97 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000419d96 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x00000000004093e2 : mov edx, dword ptr [rbp - 0x38] ; mov rsi, qword ptr [rdx] ; mov rdi, qword ptr [rsi] ; call rcx
0x000000000040729e : mov esi, dword ptr [rax + 0x10] ; mov qword ptr [rbp - 0x48], rdx ; call r8
0x0000000000406fbc : mov esi, dword ptr [rax] ; call rcx
0x0000000000407cb7 : mov esi, dword ptr [rbp - 0x20] ; call rax
0x0000000000406fb5 : mov esi, dword ptr [rbp - 0x40] ; mov r8, qword ptr [rsi] ; mov rsi, qword ptr [r8] ; call rcx
0x000000000040b407 : mov esi, dword ptr [rcx] ; call rax
0x00000000004093e6 : mov esi, dword ptr [rdx] ; mov rdi, qword ptr [rsi] ; call rcx
0x00000000004016c0 : mov esi, eax ; mov edi, 0x61d260 ; jmp rdx
0x0000000000415144 : mov esi, eax ; mov qword ptr [rbp - 0x10], rcx ; call 0x401438
0x000000000040ce09 : mov esp, ebp ; pop rbp ; ret
0x000000000040575c : mov qword ptr [0x61d2a0], rdi ; pop rbp ; ret
0x0000000000415146 : mov qword ptr [rbp - 0x10], rcx ; call 0x401436
0x0000000000415072 : mov qword ptr [rbp - 0x20], rdi ; mov rdi, rax ; call 0x401379
0x00000000004071b5 : mov qword ptr [rbp - 0x30], rax ; mov qword ptr [rbp - 0x38], rdx ; call r8
0x00000000004071b9 : mov qword ptr [rbp - 0x38], rdx ; call r8
0x00000000004072a1 : mov qword ptr [rbp - 0x48], rdx ; call r8
0x000000000040c4af : mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000406fb8 : mov r8, qword ptr [rsi] ; mov rsi, qword ptr [r8] ; call rcx
0x000000000041146b : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x000000000040ba41 : mov rax, qword ptr [rax] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000414490 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405c63 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d364 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000412019 : mov rax, qword ptr [rbp - 0x10] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000405b52 : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000041439e : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d31c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004125e3 : mov rax, qword ptr [rbp - 0x18] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000414f22 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040bcc3 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000407fbb : mov rax, qword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000412e67 : mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040c6e5 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407473 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407d9d : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040b8af : mov rax, qword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000407b88 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040607c : mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000040609c : mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x00000000004060bc : mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x00000000004157fd : mov rax, rdi ; pop rbp ; ret
0x000000000040170a : mov rbp, rsp ; call rax
0x0000000000401670 : mov rbp, rsp ; ja 0x40167d ; pop rbp ; ret
0x0000000000401edb : mov rcx, qword ptr [rax*8 + 0x419e30] ; jmp rcx
0x000000000040ddb6 : mov rcx, qword ptr [rax*8 + 0x41a760] ; jmp rcx
0x000000000040e8d0 : mov rcx, qword ptr [rax*8 + 0x41a7a8] ; jmp rcx
0x0000000000413521 : mov rcx, qword ptr [rax*8 + 0x41ac68] ; jmp rcx
0x0000000000408fa1 : mov rcx, qword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000408eb1 : mov rcx, qword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000040b402 : mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040b6c9 : mov rcx, qword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040c4ab : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000406078 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000406098 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x00000000004060b8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000408eb5 : mov rdi, qword ptr [rcx] ; call rax
0x0000000000407cb3 : mov rdi, qword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x00000000004093e8 : mov rdi, qword ptr [rsi] ; call rcx
0x0000000000415076 : mov rdi, rax ; call 0x401375
0x0000000000406fbb : mov rsi, qword ptr [r8] ; call rcx
0x000000000040729d : mov rsi, qword ptr [rax + 0x10] ; mov qword ptr [rbp - 0x48], rdx ; call r8
0x0000000000407cb6 : mov rsi, qword ptr [rbp - 0x20] ; call rax
0x000000000040b406 : mov rsi, qword ptr [rcx] ; call rax
0x00000000004093e5 : mov rsi, qword ptr [rdx] ; mov rdi, qword ptr [rsi] ; call rcx
0x00000000004016bf : mov rsi, rax ; mov edi, 0x61d260 ; jmp rdx
0x0000000000415143 : mov rsi, rax ; mov qword ptr [rbp - 0x10], rcx ; call 0x401439
0x000000000040ce08 : mov rsp, rbp ; pop rbp ; ret
0x0000000000405737 : movzx eax, al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406064 : movzx eax, al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040a741 : movzx eax, al ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000415b56 : movzx eax, al ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000418d06 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000406891 : movzx eax, al ; pop rbp ; ret
0x0000000000415a12 : movzx eax, ax ; pop rbp ; ret
0x0000000000401eda : nop ; mov rcx, qword ptr [rax*8 + 0x419e30] ; jmp rcx
0x0000000000419db8 : nop dword ptr [rax + rax] ; ret
0x000000000041c21c : or al, 0xd ; add byte ptr [rax], al ; mov edi, dr1 ; call rcx
0x0000000000411639 : or byte ptr [r15], cl ; xchg eax, ebp ; ret 0x348b
0x00000000004073d0 : or byte ptr [r15], cl ; xchg eax, edx ; ret 0x348b
0x000000000040b613 : or byte ptr [r8 + 0x3b], cl ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x348b
0x000000000040fa03 : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040b614 : or byte ptr [rax + 0x3b], cl ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x348b
0x0000000000416bae : or byte ptr [rax - 0x6af0ffc7], al ; ret 0x348b
0x000000000040fa04 : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000041b119 : or byte ptr [rax], al ; add byte ptr [rax], ah ; sar dh, 1 ; call rax
0x0000000000418dcc : or byte ptr [rcx + 0x2038], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x000000000041920c : or byte ptr [rcx + 0x2138], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x0000000000413e4d : or byte ptr [rcx + 0x28f9], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x00000000004039c2 : or byte ptr [rcx + 0x2ef9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x0000000000403034 : or byte ptr [rcx + 0x2ff9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x0000000000418b1c : or byte ptr [rcx + 0x3038], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000041910c : or byte ptr [rcx + 0x6138], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x00000000004036ee : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x0000000000402f63 : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x000000000041163a : or byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x00000000004073d1 : or byte ptr [rdi], cl ; xchg eax, edx ; ret 0x348b
0x00000000004129ad : or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x0000000000412a4f : or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x000000000040653c : or cl, ch ; ret
0x0000000000414bef : or eax, 0x48fffff9 ; add esp, 0x30 ; pop rbp ; ret
0x000000000040d8bd : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041b1d9 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; and bh, bh ; jmp rax
0x00000000004157fb : or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x0000000000415831 : or esi, edi ; mov eax, esi ; pop rbp ; ret
0x00000000004157fa : or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x0000000000415830 : out dx, eax ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000406cfd : outsd dx, dword ptr [rsi] ; cmp dword ptr [rcx], eax ; add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x0000000000402caf : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000419dac : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000408aab : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000402cb1 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000419dae : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000402cb3 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000419db0 : pop r14 ; pop r15 ; ret
0x00000000004052d0 : pop r14 ; pop rbp ; ret
0x0000000000402cb5 : pop r15 ; pop rbp ; ret
0x0000000000419db2 : pop r15 ; ret
0x00000000004016e2 : pop rbp ; mov byte ptr [rip + 0x21bbae], 1 ; ret
0x0000000000401681 : pop rbp ; mov edi, 0x61d260 ; jmp rax
0x00000000004016be : pop rbp ; mov rsi, rax ; mov edi, 0x61d260 ; jmp rdx
0x0000000000419dab : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000402cb2 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000419daf : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401675 : pop rbp ; ret
0x0000000000408aaa : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004064cd : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004052cf : pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004086af : pop rbx ; pop rbp ; ret
0x0000000000402cb6 : pop rdi ; pop rbp ; ret
0x0000000000419db3 : pop rdi ; ret
0x00000000004195e1 : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x0000000000418ca1 : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x0000000000402cb4 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000419db1 : pop rsi ; pop r15 ; ret
0x00000000004052d1 : pop rsi ; pop rbp ; ret
0x00000000004088c7 : pop rsp ; add dword ptr [rdi], ecx ; ror dword ptr cs:[rdi], -0x69 ; ret 0x348b
0x0000000000402cb0 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000419dad : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000408aac : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406a82 : pop rsp ; ret 0xf66
0x0000000000418b24 : popfq ; ret 0x348b
0x0000000000418bf0 : popfq ; ret 0xc8b
0x000000000041b117 : push qword ptr [rax + 0x20000008] ; sar dh, 1 ; call rax
0x000000000041b2cf : push qword ptr [rax + 0xf] ; jnp 0x41b2de ; call rax
0x0000000000417e53 : push rax ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000041b1ec : push rax ; and edi, edi ; jmp qword ptr [rax]
0x0000000000401d0a : push rax ; pop rbp ; ret
0x00000000004093e3 : push rbp ; enter -0x74b8, 0x32 ; mov rdi, qword ptr [rsi] ; call rcx
0x000000000040fa07 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000401704 : push rbp ; mov edi, 0x61ce20 ; mov rbp, rsp ; call rax
0x000000000041139e : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000404031 : pushfq ; mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x0000000000401ab0 : pushfq ; ret
0x000000000040e890 : pushfq ; ret 0x844
0x0000000000401c31 : pushfq ; ret 0x845
0x00000000004127da : pushfq ; ret 0xd108
0x000000000041582e : rcl ebx, -0x11 ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000041585e : rcl ebx, -0x19 ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000401271 : ret
0x0000000000400608 : ret 0
0x000000000040175a : ret 0x125
0x000000000040fdf5 : ret 0x13
0x0000000000401612 : ret 0x21bb
0x0000000000401412 : ret 0x21bc
0x000000000040e607 : ret 0x2a
0x0000000000403917 : ret 0x348b
0x0000000000403d67 : ret 0x4001
0x000000000041a7b0 : ret 0x40f8
0x00000000004125d2 : ret 0x4801
0x000000000040a05c : ret 0x48b0
0x0000000000402858 : ret 0x48f0
0x0000000000412727 : ret 0x4cc0
0x000000000040288a : ret 0x4cf0
0x00000000004195e7 : ret 0x5588
0x00000000004129b0 : ret 0x7ae8
0x0000000000415e65 : ret 0x8041
0x0000000000401aa6 : ret 0x8141
0x0000000000408b76 : ret 0x8348
0x000000000040e891 : ret 0x844
0x0000000000401c32 : ret 0x845
0x0000000000405e0e : ret 0x8801
0x0000000000401ab7 : ret 0x8901
0x0000000000414aa5 : ret 0x8948
0x000000000040fd7c : ret 0x89a5
0x000000000040fa20 : ret 0x8ae8
0x00000000004087bd : ret 0x8b44
0x000000000040fa0b : ret 0x8b48
0x0000000000401906 : ret 0xa3d
0x00000000004172ce : ret 0xb
0x000000000040214f : ret 0xb0
0x0000000000408c4e : ret 0xb948
0x00000000004049e0 : ret 0xbae8
0x00000000004016a5 : ret 0xc148
0x0000000000402f6c : ret 0xc8b
0x00000000004127db : ret 0xd108
0x0000000000412dcc : ret 0xd284
0x0000000000412a52 : ret 0xd8e8
0x0000000000401751 : ret 0xea81
0x00000000004112ec : ret 0xee8
0x0000000000401914 : ret 0xf01
0x0000000000406052 : ret 0xf280
0x0000000000406a83 : ret 0xf66
0x000000000040cab2 : ret 0xf748
0x0000000000408cc7 : ret 0xff3
0x0000000000402dfa : ret 0xffe4
0x000000000041507b : ret 0xfffe
0x0000000000407ab4 : ret 1
0x00000000004113a2 : ret 8
0x00000000004086a9 : ror byte ptr [r8 - 0x73], 1 ; clc ; pop rbx ; pop rbp ; ret
0x0000000000414053 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x00000000004016ac : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4016bb ; pop rbp ; ret
0x0000000000415b58 : ror byte ptr [rax - 0x73], 0x65 ; clc ; pop rbx ; pop rbp ; ret
0x00000000004086aa : ror byte ptr [rax - 0x73], 1 ; clc ; pop rbx ; pop rbp ; ret
0x0000000000416bab : ror byte ptr [rax - 0x75], 1 ; or byte ptr [rax - 0x6af0ffc7], al ; ret 0x348b
0x0000000000418d08 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x0000000000414054 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000406066 : ror byte ptr [rax - 0x7d], -0x3c ; pop rbp ; ret
0x00000000004131fa : ror byte ptr [rax - 0x7f], -0x3c ; jo 0x41320a ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000406fb7 : ror byte ptr [rbx + rcx*4 + 6], 0x49 ; mov esi, dword ptr [rax] ; call rcx
0x000000000041b1d8 : ror byte ptr [rbx], 0 ; add byte ptr [rax], al ; and bh, bh ; jmp rax
0x000000000041139f : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000040696d : ror dword ptr [rcx - 0x7d], cl ; ret
0x00000000004088cb : ror dword ptr [rdi], -0x69 ; ret 0x348b
0x00000000004088ca : ror dword ptr cs:[rdi], -0x69 ; ret 0x348b
0x00000000004195e6 : sahf ; ret 0x5588
0x0000000000418ca6 : sahf ; ret 0xc8b
0x000000000040e894 : sal dh, cl ; ret 0x8901
0x000000000041b11d : sar dh, 1 ; call rax
0x00000000004016ae : sar eax, 1 ; jne 0x4016b9 ; pop rbp ; ret
0x00000000004016ad : sar rax, 1 ; jne 0x4016ba ; pop rbp ; ret
0x000000000041b1ad : sbb bh, bh ; jmp qword ptr [rax]
0x000000000040db30 : sbb cl, byte ptr [rcx - 0x7f] ; ret
0x0000000000418677 : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004016e5 : scasb al, byte ptr [rdi] ; mov ebx, 0xf3010021 ; ret
0x0000000000411dcd : scasd eax, dword ptr [rdi] ; ret
0x0000000000401759 : scasd eax, dword ptr [rdi] ; ret 0x125
0x0000000000407742 : scasd eax, dword ptr [rdi] ; ret 0x8141
0x0000000000408714 : sete al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000408716 : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000040d1dd : shl byte ptr [rcx], cl ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000401684 : shl byte ptr [rcx], cl ; jmp rax
0x00000000004016c4 : shl byte ptr [rcx], cl ; jmp rdx
0x00000000004150b4 : shl byte ptr [rcx], cl ; mov dword ptr [rbp - 4], eax ; call 0x4013b8
0x0000000000405761 : shl byte ptr [rcx], cl ; pop rbp ; ret
0x0000000000406aa6 : shl dword ptr [rsi + 0xf], 0x5c ; ret 0xf66
0x000000000041585f : shl edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x00000000004157f8 : shl edx, cl ; or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x000000000041582f : shr edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000041b2d1 : sldt word ptr [rax] ; add byte ptr [rbx - 1], bh ; call rax
0x0000000000418bea : stc ; add byte ptr [r8], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x00000000004039c4 : stc ; add byte ptr cs:[rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x00000000004195e0 : stc ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x0000000000418ca0 : stc ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x0000000000418aab : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000419e11 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000419e10 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000041b3a5 : test al, -1 ; jmp qword ptr [rax]
0x0000000000419dba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000401733 : test byte ptr [rdx], cl ; add byte ptr [rax], al ; add al, ch ; ret
0x000000000040598b : test dword ptr [rip - 0x17000000], eax ; ret
0x00000000004043ea : test dword ptr [rip - 0x17000000], eax ; ret 0
0x000000000040fdef : test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x000000000040e601 : test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x00000000004172c8 : test dword ptr [rip - 0x17000000], eax ; ret 0xb
0x000000000040f6ec : test dword ptr [rip - 0x17000000], eax ; ret 1
0x0000000000414d43 : test eax, 0x48fffffc ; add esp, 0x10 ; pop rbp ; ret
0x0000000000409afe : xchg eax, ebp ; ret
0x000000000041163c : xchg eax, ebp ; ret 0x348b
0x0000000000415e64 : xchg eax, ebp ; ret 0x8041
0x0000000000414722 : xchg eax, ebp ; ret 0x8b44
0x00000000004036f6 : xchg eax, ebp ; ret 0xc8b
0x0000000000406051 : xchg eax, ebp ; ret 0xf280
0x0000000000404f1b : xchg eax, edi ; ret 0x348b
0x00000000004073d3 : xchg eax, edx ; ret 0x348b
0x000000000040e6e7 : xchg eax, esi ; ret 0x348b
0x0000000000404026 : xchg eax, esp ; ret
0x0000000000403916 : xchg eax, esp ; ret 0x348b
0x0000000000401aa5 : xchg eax, esp ; ret 0x8141
0x00000000004087bc : xchg eax, esp ; ret 0x8b44
0x0000000000401905 : xchg eax, esp ; ret 0xa3d
0x0000000000402f6b : xchg eax, esp ; ret 0xc8b
0x0000000000412dcb : xchg eax, esp ; ret 0xd284
0x0000000000408715 : xchg eax, esp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004157fc : xlatb ; mov rax, rdi ; pop rbp ; ret
0x00000000004129a7 : xor byte ptr [rax - 0x75], cl ; add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x0000000000412a49 : xor byte ptr [rax - 0x75], cl ; add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x00000000004093e7 : xor cl, byte ptr [rax - 0x75] ; call rcx
0x000000000040d586 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
