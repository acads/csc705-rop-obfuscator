0x0000000000401ba4 : adc ah, byte ptr [rbx] ; jmp rax
0x0000000000401be4 : adc ah, byte ptr [rbx] ; jmp rdx
0x0000000000426e8e : adc al, -0x75 ; hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000417ecf : adc al, byte ptr [rcx + 0x4f9] ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x0000000000417d92 : adc al, byte ptr [rcx + 0x4f9] ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf280
0x000000000041b782 : adc byte ptr [rax - 0x7f], cl ; ret 0x108
0x000000000041baff : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x000000000043005d : adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 0xfffe
0x000000000043007d : adc byte ptr [rax], al ; add byte ptr [rax], dl ; ret
0x000000000042ec64 : adc byte ptr [rbx], -1 ; jmp qword ptr [rax]
0x00000000004048a8 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000043009d : adc dword ptr [rax], eax ; add al, ah ; ret
0x000000000042ea69 : adc dword ptr [rax], eax ; add byte ptr [rax], dh ; int1 ; std ; call qword ptr [rax]
0x000000000040cff0 : adc eax, 0x89410063 ; ret
0x0000000000402467 : adc eax, 0x89410063 ; ret 0x8141
0x000000000040aedf : adc eax, 0x89440063 ; ret
0x000000000040f0ee : adc eax, 0x89450063 ; ret
0x000000000040ac12 : adc eax, 0x89450063 ; ret 0x8141
0x0000000000430365 : adc eax, dword ptr [rax] ; add byte ptr [rax], cl ; adc edi, edi ; call rdx
0x0000000000430369 : adc edi, edi ; call rdx
0x000000000042ec65 : adc edi, edi ; jmp qword ptr [rax]
0x00000000004062fd : adc esp, dword ptr [rbx] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000405a61 : adc esp, dword ptr [rbx] ; pop rbp ; ret
0x0000000000430363 : add ah, ah ; adc eax, dword ptr [rax] ; add byte ptr [rax], cl ; adc edi, edi ; call rdx
0x000000000043007b : add ah, bh ; adc byte ptr [rax], al ; add byte ptr [rax], dl ; ret
0x000000000043005b : add ah, bl ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 0xfffe
0x0000000000405a82 : add al, 0x25 ; cwde ; adc esp, dword ptr [rbx] ; pop rbp ; ret
0x000000000042fa84 : add al, 0xb ; add byte ptr [rax], al ; call 0xffffffffd542f87a
0x000000000042f18f : add al, ah ; insb byte ptr [rdi], dx ; std ; call qword ptr [rax]
0x000000000042ee13 : add al, ah ; mov ch, -1 ; call qword ptr [rax]
0x000000000043009f : add al, ah ; ret
0x0000000000430b87 : add al, bl ; mov cl, -1 ; call rax
0x000000000042fac7 : add al, bl ; out -3, eax ; jmp rcx
0x0000000000402157 : add al, bpl ; ret 0xfff6
0x000000000042f18d : add al, byte ptr [rax] ; add al, ah ; insb byte ptr [rdi], dx ; std ; call qword ptr [rax]
0x000000000042fa87 : add al, ch ; out -3, al ; call rsp
0x0000000000402158 : add al, ch ; ret 0xfff6
0x000000000040534f : add al, ch ; stosd dword ptr [rdi], eax ; ret
0x000000000042ef13 : add al, dl ; jrcxz 0x42ef1a ; call qword ptr [rax]
0x000000000042cc0f : add bl, dh ; ret
0x00000000004118e5 : add byte ptr [r8 - 0x73], cl ; or al, 0x25 ; nop ; ret
0x000000000042ba3b : add byte ptr [r8], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x000000000041cab9 : add byte ptr [r8], r8b ; add byte ptr [rcx - 0xfff43], al ; jmp qword ptr [rsi]
0x000000000041fe0b : add byte ptr [rax + 0x21], cl ; ret 0x8148
0x000000000042f10f : add byte ptr [rax + 0x69], al ; std ; call qword ptr [rsi]
0x000000000042e923 : add byte ptr [rax - 0x33], dh ; std ; jmp rax
0x000000000042f4d7 : add byte ptr [rax - 0x3f], bl ; std ; call qword ptr [rdi]
0x000000000042e8b3 : add byte ptr [rax - 0x44], dl ; std ; jmp qword ptr [rax]
0x000000000040c15c : add byte ptr [rax - 0x73], cl ; clc ; pop rbx ; pop rbp ; ret
0x00000000004118e6 : add byte ptr [rax - 0x73], cl ; or al, 0x25 ; nop ; ret
0x0000000000421d37 : add byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x000000000040ddf0 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000402286 : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004206e9 : add byte ptr [rax - 0x77], cl ; or cl, ch ; ret
0x0000000000402e55 : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000042e8a3 : add byte ptr [rax - 0x7a], ah ; std ; jmp rax
0x000000000042fc07 : add byte ptr [rax - 0xc], cl ; std ; jmp rsp
0x000000000042e823 : add byte ptr [rax], ah ; push rbx ; std ; call rax
0x000000000042f8df : add byte ptr [rax], ah ; sar ch, cl ; jmp qword ptr [rdi]
0x000000000042e7f3 : add byte ptr [rax], ah ; std ; call qword ptr [rax]
0x000000000042ec62 : add byte ptr [rax], al ; adc byte ptr [rbx], -1 ; jmp qword ptr [rax]
0x0000000000430079 : add byte ptr [rax], al ; add ah, bh ; adc byte ptr [rax], al ; add byte ptr [rax], dl ; ret
0x0000000000430059 : add byte ptr [rax], al ; add ah, bl ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 0xfffe
0x000000000042fa82 : add byte ptr [rax], al ; add al, 0xb ; add byte ptr [rax], al ; call 0xffffffffd542f87c
0x000000000040534d : add byte ptr [rax], al ; add al, ch ; stosd dword ptr [rdi], eax ; ret
0x000000000042cc0d : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000041fe09 : add byte ptr [rax], al ; add byte ptr [rax + 0x21], cl ; ret 0x8148
0x0000000000429f63 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; clc ; pop rbx ; pop rbp ; ret
0x0000000000421d35 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x0000000000402284 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004206e7 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; or cl, ch ; ret
0x0000000000402e53 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000042cc0b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040c2a2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004003b8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004003ba : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004158e8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000042caa9 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000421d34 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040c2a3 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004003bc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040f0f8 : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x000000000040ac1c : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x8141
0x000000000040af48 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000042542b : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000403902 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7238b], cl ; ret 0xb0
0x00000000004039ba : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7278b], cl ; ret 0xb0
0x0000000000403aca : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b72f8b], cl ; ret 0xb0
0x0000000000401e9b : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret
0x00000000004058c8 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x844
0x0000000000401f97 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x000000000040cffa : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x0000000000402471 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x125
0x000000000041f81f : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x0000000000410ea4 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000040247f : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000410ece : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x48b
0x0000000000401e90 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x000000000040332a : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xf981
0x0000000000416f72 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xfa81
0x000000000041caba : add byte ptr [rax], al ; add byte ptr [rcx - 0xfff43], al ; jmp qword ptr [rsi]
0x000000000041462d : add byte ptr [rax], al ; add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x000000000040aee8 : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x51], al ; ret
0x000000000041b964 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000042ba3c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x0000000000402489 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret
0x000000000040b8f6 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x000000000042c432 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x000000000042baf2 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x000000000041f88c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret
0x0000000000401e0b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x125
0x0000000000423caa : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x000000000040d977 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x0000000000410b38 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x48b
0x000000000040f255 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5588
0x000000000040e4be : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x000000000040fa90 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x9588
0x0000000000415adb : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x0000000000429e9c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000040dbf1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x0000000000404b5a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000414254 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x00000000004079a1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x0000000000417ed3 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x0000000000402bfb : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x000000000040425d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x000000000040bee7 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000417d96 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf280
0x0000000000426c5e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xfe81
0x00000000004160b1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xff81
0x000000000042f6be : add byte ptr [rax], al ; add ch, cl ; std ; jmp qword ptr [rdi]
0x0000000000416656 : add byte ptr [rax], al ; add cl, ch ; jmp qword ptr [rdi]
0x0000000000405c8d : add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000408f11 : add byte ptr [rax], al ; add cl, ch ; ret 0x13
0x0000000000407723 : add byte ptr [rax], al ; add cl, ch ; ret 0x2a
0x00000000004274da : add byte ptr [rax], al ; add cl, ch ; ret 0xb
0x000000000040880e : add byte ptr [rax], al ; add cl, ch ; ret 1
0x00000000004120e8 : add byte ptr [rax], al ; add cl, ch ; ret 5
0x000000000041d429 : add byte ptr [rax], al ; add cl, ch ; ret 9
0x0000000000401fb1 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401eb5 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004232b4 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041990e : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004158ea : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004016b3 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000043048e : add byte ptr [rax], al ; and al, 0xffffffff ; call rcx
0x000000000042e822 : add byte ptr [rax], al ; and byte ptr [rbx - 3], dl ; call rax
0x000000000042eb6a : add byte ptr [rax], al ; and byte ptr [rsi - 2], ch ; jmp qword ptr [rax]
0x000000000042e7f2 : add byte ptr [rax], al ; and byte ptr [rsi], dh ; std ; call qword ptr [rax]
0x000000000042ef02 : add byte ptr [rax], al ; and cl, 0xff ; call rax
0x000000000042e8f2 : add byte ptr [rax], al ; and dl, cl ; std ; jmp qword ptr [rax]
0x000000000042f8de : add byte ptr [rax], al ; and dl, dl ; std ; jmp qword ptr [rdi]
0x00000000004054df : add byte ptr [rax], al ; call 0x401704
0x000000000042fa86 : add byte ptr [rax], al ; call 0xffffffffd542f878
0x000000000043007a : add byte ptr [rax], al ; cld ; adc byte ptr [rax], al ; add byte ptr [rax], dl ; ret
0x000000000042f6ba : add byte ptr [rax], al ; cmp al, 7 ; add byte ptr [rax], al ; add ch, cl ; std ; jmp qword ptr [rdi]
0x000000000042ea9a : add byte ptr [rax], al ; cmp dl, -3 ; call rax
0x000000000042fac6 : add byte ptr [rax], al ; fsub st(7) ; std ; jmp rcx
0x000000000042fc06 : add byte ptr [rax], al ; hlt ; std ; jmp rsp
0x000000000042f4f2 : add byte ptr [rax], al ; je 0x42f502 ; add byte ptr [rax], al ; pop rax ; ret 0xfffd
0x00000000004017c9 : add byte ptr [rax], al ; jmp 0x4016c9
0x0000000000417f29 : add byte ptr [rax], al ; jmp 0x4190a4
0x000000000042e922 : add byte ptr [rax], al ; jo 0x42e8f8 ; std ; jmp rax
0x0000000000429f64 : add byte ptr [rax], al ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000042f18e : add byte ptr [rax], al ; loopne 0x42f203 ; std ; call qword ptr [rax]
0x000000000042b82c : add byte ptr [rax], al ; mov al, sil ; movzx eax, al ; pop rbp ; ret
0x000000000042b67d : add byte ptr [rax], al ; mov ax, si ; movzx eax, ax ; pop rbp ; ret
0x0000000000406812 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000426d18 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000042caab : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x000000000040c1da : add byte ptr [rax], al ; mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040c3ad : add byte ptr [rax], al ; mov eax, edi ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406482 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000422169 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000421d36 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402285 : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040ce92 : add byte ptr [rax], al ; movzx eax, ax ; mov rsp, rbp ; pop rbp ; ret
0x000000000042ee02 : add byte ptr [rax], al ; nop ; mov ch, -1 ; call rax
0x000000000043048a : add byte ptr [rax], al ; or al, 0x15 ; add byte ptr [rax], al ; and al, 0xffffffff ; call rcx
0x000000000042f18a : add byte ptr [rax], al ; or al, 2 ; add byte ptr [rax], al ; loopne 0x42f207 ; std ; call qword ptr [rax]
0x000000000042e932 : add byte ptr [rax], al ; or bh, 0xfd ; jmp qword ptr [rax]
0x000000000042fac2 : add byte ptr [rax], al ; or r8d, dword ptr [rax] ; add al, bl ; out -3, eax ; jmp rcx
0x000000000042f4f6 : add byte ptr [rax], al ; pop rax ; ret 0xfffd
0x00000000004048aa : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040af49 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000428065 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040a171 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000042f8da : add byte ptr [rax], al ; pop rsp ; or dword ptr [rax], eax ; add byte ptr [rax], ah ; sar ch, cl ; jmp qword ptr [rdi]
0x000000000042e8ca : add byte ptr [rax], al ; push rax ; ret 0xfffd
0x000000000042f4d2 : add byte ptr [rax], al ; push rsp ; add eax, 0xc1580000 ; std ; call qword ptr [rdi]
0x00000000004003be : add byte ptr [rax], al ; ret
0x000000000043005f : add byte ptr [rax], al ; ret 0xfffe
0x000000000042ee82 : add byte ptr [rax], al ; ror dh, -1 ; call rax
0x000000000042eaaa : add byte ptr [rax], al ; sar bh, -3 ; call qword ptr [rax]
0x000000000042fc02 : add byte ptr [rax], al ; test byte ptr [rax + rax], cl ; add byte ptr [rax - 0xc], cl ; std ; jmp rsp
0x000000000042ea6a : add byte ptr [rax], al ; xor cl, dh ; std ; call qword ptr [rax]
0x0000000000430367 : add byte ptr [rax], cl ; adc edi, edi ; call rdx
0x000000000042eed3 : add byte ptr [rax], dh ; fdivr st(7) ; call qword ptr [rax]
0x000000000042ea6b : add byte ptr [rax], dh ; int1 ; std ; call qword ptr [rax]
0x000000000042ee93 : add byte ptr [rax], dh ; sar bh, 1 ; call qword ptr [rax]
0x000000000042ec23 : add byte ptr [rax], dl ; out -2, eax ; call qword ptr [rax]
0x000000000043007f : add byte ptr [rax], dl ; ret
0x000000000040534c : add byte ptr [rax], r8b ; add al, ch ; stosd dword ptr [rdi], eax ; ret
0x000000000040f0fa : add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x000000000040ac1e : add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x8141
0x000000000042f4d3 : add byte ptr [rbp + rax], dl ; add byte ptr [rax - 0x3f], bl ; std ; call qword ptr [rdi]
0x000000000040f0f0 : add byte ptr [rbp - 0x77], al ; ret
0x000000000040ac14 : add byte ptr [rbp - 0x77], al ; ret 0x8141
0x000000000040af4a : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000428066 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040a172 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000042fac3 : add byte ptr [rbx + rcx], al ; add al, bl ; out -3, eax ; jmp rcx
0x000000000042fa83 : add byte ptr [rbx + rcx], al ; add byte ptr [rax], al ; call 0xffffffffd542f87b
0x0000000000403904 : add byte ptr [rbx - 0x76b7238b], cl ; ret 0xb0
0x00000000004039bc : add byte ptr [rbx - 0x76b7278b], cl ; ret 0xb0
0x0000000000403acc : add byte ptr [rbx - 0x76b72f8b], cl ; ret 0xb0
0x000000000040fa8c : add byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x9588
0x0000000000415ad7 : add byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x0000000000426c5a : add byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xfe81
0x0000000000404b66 : add byte ptr [rcx + 0xf], al ; pushfq ; mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x0000000000401e9d : add byte ptr [rcx + 0xf], al ; pushfq ; ret
0x00000000004058ca : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x844
0x0000000000401f99 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x000000000040cffc : add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x0000000000402473 : add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x125
0x000000000041f821 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x0000000000410ea6 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000402481 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000410ed0 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x48b
0x0000000000401e92 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x000000000040332c : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xf981
0x0000000000416f74 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xfa81
0x000000000040b2bc : add byte ptr [rcx + 0xfe], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040baf8 : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040799d : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x0000000000402bf7 : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x000000000042f10b : add byte ptr [rcx + rax + 0x69400000], cl ; std ; call qword ptr [rsi]
0x000000000042f8db : add byte ptr [rcx + rcx], bl ; add byte ptr [rax], ah ; sar ch, cl ; jmp qword ptr [rdi]
0x000000000040cff2 : add byte ptr [rcx - 0x77], al ; ret
0x0000000000402469 : add byte ptr [rcx - 0x77], al ; ret 0x8141
0x000000000041cabc : add byte ptr [rcx - 0xfff43], al ; jmp qword ptr [rsi]
0x000000000041462f : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x0000000000401c08 : add byte ptr [rcx], al ; ret
0x000000000042f6bb : add byte ptr [rdi + rax], bh ; add byte ptr [rax], al ; add ch, cl ; std ; jmp qword ptr [rdi]
0x000000000040aeea : add byte ptr [rdi + rcx - 0x51], al ; ret
0x000000000040ce93 : add byte ptr [rdi], cl ; mov bh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000041b966 : add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000042ba3e : add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x000000000040248b : add byte ptr [rdi], cl ; pushfq ; ret
0x000000000040b8f8 : add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x000000000042c434 : add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x000000000042baf4 : add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x000000000041f88e : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret
0x0000000000401e0d : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x125
0x00000000004054da : add byte ptr [rdi], cl ; test byte ptr [rdx], cl ; add byte ptr [rax], al ; call 0x401709
0x0000000000423cac : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x000000000040d979 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x0000000000410b3a : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x48b
0x000000000040f257 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5588
0x000000000040e4c0 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x000000000040fa92 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x9588
0x0000000000415add : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x0000000000429e9e : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000040dbf3 : add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x0000000000404b5c : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000414256 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x00000000004079a3 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x0000000000417ed5 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x0000000000402bfd : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x000000000040425f : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x000000000040bee9 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000417d98 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf280
0x0000000000426c60 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xfe81
0x00000000004160b3 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xff81
0x000000000042f20b : add byte ptr [rdx + rax + 0x72800000], cl ; std ; call rbx
0x000000000042f18b : add byte ptr [rdx + rax], cl ; add byte ptr [rax], al ; loopne 0x42f206 ; std ; call qword ptr [rax]
0x000000000042ec60 : add byte ptr [rdx], bl ; add byte ptr [rax], al ; adc byte ptr [rbx], -1 ; jmp qword ptr [rax]
0x000000000042e930 : add byte ptr [rip - 0x30800000], cl ; std ; jmp qword ptr [rax]
0x0000000000420c2f : add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x000000000042fc03 : add byte ptr [rsp + rcx - 0xbb80000], al ; std ; jmp rsp
0x0000000000410ecd : add byte ptr cs:[rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x48b
0x000000000042f6c0 : add ch, cl ; std ; jmp qword ptr [rdi]
0x0000000000416658 : add cl, ch ; jmp qword ptr [rdi]
0x0000000000405c8f : add cl, ch ; ret
0x0000000000408f13 : add cl, ch ; ret 0x13
0x0000000000407725 : add cl, ch ; ret 0x2a
0x00000000004274dc : add cl, ch ; ret 0xb
0x0000000000408810 : add cl, ch ; ret 1
0x00000000004120ea : add cl, ch ; ret 5
0x000000000041d42b : add cl, ch ; ret 9
0x000000000040baca : add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x000000000040bb6c : add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x000000000042f10d : add dword ptr [rax], eax ; add byte ptr [rax + 0x69], al ; std ; call qword ptr [rsi]
0x00000000004104e5 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000428064 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040a170 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000041d979 : add dword ptr [rcx - 0xc7], eax ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0x48b
0x000000000041fd5d : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403aa7 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041a1b3 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004248f0 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041fe6c : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000041c08e : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000422a78 : add dword ptr [rdi], ecx ; ror dword ptr cs:[rdi], -0x69 ; ret 0x348b
0x0000000000416652 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; jmp qword ptr [rdi]
0x0000000000405c89 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret
0x0000000000408f0d : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x000000000040771f : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x00000000004274d6 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0xb
0x000000000040880a : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 1
0x000000000041d425 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 9
0x0000000000428f47 : add dword ptr [rdi], ecx ; xchg eax, esi ; ret 0x348b
0x0000000000415854 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x348b
0x000000000041c3d4 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x5588
0x0000000000401c04 : add eax, 0x22f72e ; add ebx, esi ; ret
0x000000000040c36e : add eax, 0x48000000 ; mov esp, ebp ; pop rbp ; ret
0x000000000042f4d5 : add eax, 0xc1580000 ; std ; call qword ptr [rdi]
0x0000000000416655 : add eax, 0xe9000000 ; jmp qword ptr [rdi]
0x0000000000405c8c : add eax, 0xe9000000 ; ret
0x0000000000408f10 : add eax, 0xe9000000 ; ret 0x13
0x0000000000407722 : add eax, 0xe9000000 ; ret 0x2a
0x00000000004274d9 : add eax, 0xe9000000 ; ret 0xb
0x000000000040880d : add eax, 0xe9000000 ; ret 1
0x00000000004120e7 : add eax, 0xe9000000 ; ret 5
0x000000000041d428 : add eax, 0xe9000000 ; ret 9
0x00000000004180c8 : add eax, 0xf000000 ; xchg eax, esp ; ret 0xc8b
0x0000000000429d86 : add eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401bcb : add eax, edx ; sar rax, 1 ; jne 0x401bdc ; pop rbp ; ret
0x0000000000401c09 : add ebx, esi ; ret
0x0000000000401fb4 : add esp, 0x10 ; pop rbp ; ret
0x000000000041ce7e : add esp, 0x1020 ; pop rbp ; ret
0x000000000041e71a : add esp, 0x1030 ; pop rbp ; ret
0x00000000004048a6 : add esp, 0x110 ; pop rbp ; ret
0x0000000000418e38 : add esp, 0x168 ; pop rbx ; pop rbp ; ret
0x000000000040a16d : add esp, 0x178 ; pop rbx ; pop rbp ; ret
0x00000000004119ce : add esp, 0x18 ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040dfdc : add esp, 0x1a0 ; pop rbp ; ret
0x00000000004201d0 : add esp, 0x1b8 ; pop rbx ; pop rbp ; ret
0x000000000042a8d0 : add esp, 0x1e0 ; pop rbp ; ret
0x00000000004288cd : add esp, 0x1e8 ; pop rbx ; pop rbp ; ret
0x0000000000401eb8 : add esp, 0x20 ; pop rbp ; ret
0x0000000000403aac : add esp, 0x30 ; pop rbp ; ret
0x0000000000406301 : add esp, 0x40 ; pop rbp ; ret
0x000000000040db1f : add esp, 0x40 ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040b1dc : add esp, 0x50 ; pop rbp ; ret
0x00000000004117dd : add esp, 0x58 ; pop rbx ; pop rbp ; ret
0x00000000004248f5 : add esp, 0x60 ; pop rbp ; ret
0x000000000040b502 : add esp, 0x70 ; pop rbp ; ret
0x000000000040a58e : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004059c0 : add esp, 0x80 ; pop rbp ; ret
0x0000000000410364 : add esp, 0xa0 ; pop rbp ; ret
0x000000000040de3c : add esp, 0xb0 ; pop rbp ; ret
0x00000000004265c7 : add esp, 0xc0 ; pop rbp ; ret
0x0000000000425428 : add esp, 0xd8 ; pop rbx ; pop rbp ; ret
0x00000000004161af : add esp, 0xf0 ; pop rbp ; ret
0x00000000004016b6 : add esp, 8 ; ret
0x0000000000429d85 : add rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401bca : add rax, rdx ; sar rax, 1 ; jne 0x401bdd ; pop rbp ; ret
0x0000000000401fb3 : add rsp, 0x10 ; pop rbp ; ret
0x000000000041ce7d : add rsp, 0x1020 ; pop rbp ; ret
0x000000000041e719 : add rsp, 0x1030 ; pop rbp ; ret
0x00000000004048a5 : add rsp, 0x110 ; pop rbp ; ret
0x0000000000418e37 : add rsp, 0x168 ; pop rbx ; pop rbp ; ret
0x000000000040a16c : add rsp, 0x178 ; pop rbx ; pop rbp ; ret
0x000000000040dfdb : add rsp, 0x1a0 ; pop rbp ; ret
0x00000000004201cf : add rsp, 0x1b8 ; pop rbx ; pop rbp ; ret
0x000000000042a8cf : add rsp, 0x1e0 ; pop rbp ; ret
0x00000000004288cc : add rsp, 0x1e8 ; pop rbx ; pop rbp ; ret
0x0000000000401eb7 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000403aab : add rsp, 0x30 ; pop rbp ; ret
0x0000000000406300 : add rsp, 0x40 ; pop rbp ; ret
0x000000000040db1e : add rsp, 0x40 ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040b1db : add rsp, 0x50 ; pop rbp ; ret
0x00000000004117dc : add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x00000000004248f4 : add rsp, 0x60 ; pop rbp ; ret
0x000000000040b501 : add rsp, 0x70 ; pop rbp ; ret
0x000000000040a58d : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004059bf : add rsp, 0x80 ; pop rbp ; ret
0x0000000000410363 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000040de3b : add rsp, 0xb0 ; pop rbp ; ret
0x00000000004265c6 : add rsp, 0xc0 ; pop rbp ; ret
0x0000000000425427 : add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x00000000004161ae : add rsp, 0xf0 ; pop rbp ; ret
0x00000000004016b5 : add rsp, 8 ; ret
0x000000000042ef11 : and al, 0 ; add al, dl ; jrcxz 0x42ef1c ; call qword ptr [rax]
0x0000000000430490 : and al, 0xffffffff ; call rcx
0x0000000000430491 : and al, 0xffffffffffffffff ; call rcx
0x000000000041fe6b : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000041c08d : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042ee91 : and al, byte ptr [rax] ; add byte ptr [rax], dh ; sar bh, 1 ; call qword ptr [rax]
0x0000000000401c07 : and al, byte ptr [rax] ; add ebx, esi ; ret
0x000000000042eca5 : and bh, bh ; jmp qword ptr [rax]
0x0000000000420941 : and byte ptr [r15], cl ; xchg eax, esp ; ret 0x348b
0x000000000042ee11 : and byte ptr [rax], al ; add al, ah ; mov ch, -1 ; call qword ptr [rax]
0x000000000041ce80 : and byte ptr [rax], dl ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042e824 : and byte ptr [rbx - 3], dl ; call rax
0x0000000000420942 : and byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x000000000042eb6c : and byte ptr [rsi - 2], ch ; jmp qword ptr [rax]
0x000000000042e7f4 : and byte ptr [rsi], dh ; std ; call qword ptr [rax]
0x000000000042ef04 : and cl, 0xff ; call rax
0x000000000042e8f4 : and dl, cl ; std ; jmp qword ptr [rax]
0x000000000042f8e0 : and dl, dl ; std ; jmp qword ptr [rdi]
0x00000000004221e5 : and eax, 0x42e670 ; mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x000000000040bbf7 : and eax, 0x48ffffee ; add esp, 0x20 ; pop rbp ; ret
0x0000000000405a5f : and eax, 0x631390 ; pop rbp ; ret
0x0000000000405a83 : and eax, 0x631398 ; pop rbp ; ret
0x000000000042eed1 : and eax, dword ptr [rax] ; add byte ptr [rax], dh ; fdivr st(7) ; call qword ptr [rax]
0x00000000004114a6 : call 0x38824ffa
0x00000000004114a5 : call 0x38824ffb
0x00000000004054e1 : call 0x401702
0x0000000000411b27 : call 0xffffffff8c03b93e
0x0000000000411b26 : call 0xffffffff8c03b93f
0x000000000042fa88 : call 0xffffffffd542f876
0x000000000040a409 : call 0xffffffffe9032d59
0x000000000040a408 : call 0xffffffffe9032d5a
0x000000000041b478 : call 0xffffffffff41f765
0x0000000000423064 : call 0xffffffffff7bbbb5
0x0000000000423063 : call 0xffffffffff7bbbb6
0x000000000042cbe9 : call qword ptr [r12 + rbx*8]
0x000000000042e7f7 : call qword ptr [rax]
0x000000000042f4db : call qword ptr [rdi]
0x000000000043025b : call qword ptr [rdx]
0x000000000042f113 : call qword ptr [rsi]
0x000000000042cbea : call qword ptr [rsp + rbx*8]
0x000000000042136d : call r8
0x0000000000401c2d : call rax
0x000000000042f213 : call rbx
0x000000000042116e : call rcx
0x000000000043036b : call rdx
0x000000000042fa8b : call rsp
0x000000000040c3b0 : clc ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000421626 : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000410759 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000421f50 : clc ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041b335 : clc ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000425a62 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x000000000042b29e : clc ; add rsp, 0x80 ; pop rbp ; ret
0x0000000000410362 : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x00000000004265c5 : clc ; add rsp, 0xc0 ; pop rbp ; ret
0x0000000000401bcf : clc ; jne 0x401bd8 ; pop rbp ; ret
0x0000000000426b2c : clc ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x000000000041a5be : clc ; mov dword ptr [rcx + 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041fb37 : clc ; mov dword ptr [rdi + 0x18], 0x95f616 ; pop rbp ; ret
0x0000000000429b0b : clc ; mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x000000000042665e : clc ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000403887 : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000042022b : clc ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000042024b : clc ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000042026b : clc ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000040388b : clc ; pop rbp ; ret
0x000000000040a9d3 : clc ; pop rbx ; pop rbp ; ret
0x000000000043007c : cld ; adc byte ptr [rax], al ; add byte ptr [rax], dl ; ret
0x0000000000428b02 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041ce7c : cld ; add rsp, 0x1020 ; pop rbp ; ret
0x000000000041e718 : cld ; add rsp, 0x1030 ; pop rbp ; ret
0x000000000041f72d : cld ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004059be : cld ; add rsp, 0x80 ; pop rbp ; ret
0x00000000004161ad : cld ; add rsp, 0xf0 ; pop rbp ; ret
0x000000000042cb86 : cld ; mov dword ptr [rbp - 0xc], eax ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000428aff : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042c796 : cli ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042ea9d : cli ; std ; call rax
0x0000000000405a5e : cmp al, 0x25 ; nop ; adc esp, dword ptr [rbx] ; pop rbp ; ret
0x000000000042f6bc : cmp al, 7 ; add byte ptr [rax], al ; add ch, cl ; std ; jmp qword ptr [rdi]
0x000000000041c539 : cmp al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000405247 : cmp al, ch ; ret
0x000000000042bc1e : cmp byte ptr [rax], ah ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x000000000042101d : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000042b96e : cmp byte ptr [rax], dh ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000042c05e : cmp byte ptr [rcx], ah ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000042ea9c : cmp dl, -3 ; call rax
0x0000000000421e65 : cmp dword ptr [rax - 0x75], ecx ; jne 0x421e4f ; call rax
0x0000000000423ca8 : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x000000000040e4bc : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x000000000040a89d : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401b8d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401ba0 ; pop rbp ; ret
0x0000000000405a84 : cwde ; adc esp, dword ptr [rbx] ; pop rbp ; ret
0x000000000040a652 : dec byte ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x0000000000406b2f : dec byte ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret
0x000000000040c4b6 : dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x0000000000405181 : dec dword ptr [rax - 0x77] ; ret 0x56e8
0x0000000000405138 : dec dword ptr [rax - 0x77] ; ret 0x6fe8
0x000000000040d206 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000427dd4 : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000042874a : dec dword ptr [rdi] ; test dword ptr [rip - 0x17000000], eax ; ret 1
0x000000000041d97f : dec dword ptr [rdi] ; xchg eax, esp ; ret 0x48b
0x00000000004058c6 : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x844
0x0000000000403014 : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x0000000000402487 : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret
0x0000000000428e36 : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x000000000041c050 : div dword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000041c04f : div qword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000040a4bb : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000423594 : enter -0x74b8, 0x32 ; mov rdi, qword ptr [rsi] ; call rcx
0x0000000000421e62 : enter -0x74b8, 0x39 ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x000000000040bf8a : enter -0x7cb8, -0x3c ; pop rbp ; ret
0x000000000042542a : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004079f5 : fadd qword ptr [rdx] ; jmp rcx
0x0000000000426a29 : fbld dword ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x0000000000426a2a : fbld dword ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000042eed5 : fdivr st(7) ; call qword ptr [rax]
0x00000000004061c2 : fiadd dword ptr [rcx - 0xa] ; ret 0x4001
0x000000000040333d : fiadd dword ptr [rcx - 0xa] ; ret 0x4401
0x000000000040b6ef : fiadd dword ptr [rcx - 0xa] ; ret 0x4801
0x000000000040ccb8 : fiadd dword ptr [rcx - 0xa] ; ret 0x6601
0x00000000004020c2 : fiadd dword ptr [rcx - 0xa] ; ret 0x8801
0x0000000000401ea4 : fiadd dword ptr [rcx - 0xa] ; ret 0x8901
0x000000000040c7ff : fiadd dword ptr [rcx - 0xa] ; ret 0xf01
0x0000000000402491 : fild dword ptr [rcx - 0xa] ; ret
0x0000000000406edb : fild dword ptr [rdx] ; jmp rcx
0x000000000041c46a : fisub word ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000041c46b : fisub word ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x0000000000420c2d : fld dword ptr [rax] ; add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x0000000000408b28 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000411468 : fmul dword ptr [rax - 0x77] ; ret 0x3948
0x00000000004039bf : fmul dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000403907 : fmul qword ptr [rax - 0x77] ; ret 0xb0
0x000000000042cbec : fmul qword ptr [rax - 0x7d] ; ret
0x000000000042fac8 : fsub st(7) ; std ; jmp rcx
0x000000000040e063 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042cb89 : hlt ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000426b28 : hlt ; mov rcx, qword ptr [rbp - 8] ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x0000000000401ba0 : hlt ; pop rbp ; mov edi, 0x6312d0 ; jmp rax
0x000000000042caaf : hlt ; pop rbp ; ret
0x000000000042fc09 : hlt ; std ; jmp rsp
0x000000000042ef45 : in al, -1 ; call rax
0x0000000000402289 : in al, dx ; pop rbp ; ret
0x000000000040c613 : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x0000000000419a93 : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000040eb98 : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x000000000040b2be : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040a9a3 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x00000000004020ac : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x000000000040bafa : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040799f : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x0000000000402bf9 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x000000000042e92f : inc dword ptr [rax] ; or eax, 0xcf800000 ; std ; jmp qword ptr [rax]
0x000000000042e8af : inc dword ptr [rax] ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x44], dl ; std ; jmp qword ptr [rax]
0x000000000042ba38 : inc dword ptr [rcx + 0x41f9] ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x000000000042c42e : inc dword ptr [rcx + 0x5af9] ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x000000000042baee : inc dword ptr [rcx + 0x5af9] ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x000000000042e91f : inc eax ; or al, 0 ; add byte ptr [rax - 0x33], dh ; std ; jmp rax
0x000000000042f191 : insb byte ptr [rdi], dx ; std ; call qword ptr [rax]
0x000000000040ddf8 : int 0x80
0x000000000042ea6d : int1 ; std ; call qword ptr [rax]
0x000000000041f75b : int1 ; stosb byte ptr [rdi], al ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042e935 : iretd ; std ; jmp qword ptr [rax]
0x0000000000401b93 : ja 0x401b9a ; pop rbp ; ret
0x0000000000426661 : ja 0x4266ae ; pop rbp ; ret
0x000000000042f211 : jb 0x42f212 ; call rbx
0x00000000004002d6 : jbe 0x40027d ; xchg al, dh ; xchg eax, esi ; jl 0x400326 ; ret
0x0000000000401b9f : je 0x401b9d ; pop rbp ; mov edi, 0x6312d0 ; jmp rax
0x00000000004054db : je 0x405533 ; call 0x401708
0x000000000042f4f4 : je 0x42f500 ; add byte ptr [rax], al ; pop rax ; ret 0xfffd
0x0000000000403886 : jge 0x403887 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040c616 : jge 0x40c613 ; pop rbp ; ret
0x000000000042022a : jge 0x42022b ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000042024a : jge 0x42024b ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000042026a : jge 0x42026b ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x00000000004255b0 : jge 0x4255a3 ; mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000042665d : jge 0x42665e ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000429b0a : jge 0x429b0d ; mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x00000000004002db : jl 0x400321 ; ret
0x00000000004017cb : jmp 0x4016c7
0x0000000000419096 : jmp 0x417dfd
0x0000000000417f2b : jmp 0x4190a2
0x000000000041bcd9 : jmp 0x41bafb
0x0000000000422d23 : jmp 0x4904b673
0x0000000000422e65 : jmp 0x4904b7b5
0x0000000000424e60 : jmp 0x4904d7b0
0x0000000000424ecd : jmp 0x4904d81d
0x000000000042619a : jmp 0x4904eaea
0x0000000000426207 : jmp 0x4904eb57
0x000000000042e8b7 : jmp qword ptr [rax]
0x0000000000430acb : jmp qword ptr [rbx]
0x00000000004301db : jmp qword ptr [rcx]
0x000000000041665a : jmp qword ptr [rdi]
0x000000000041cac2 : jmp qword ptr [rsi]
0x0000000000401ba7 : jmp rax
0x0000000000402645 : jmp rcx
0x000000000042fd53 : jmp rdi
0x0000000000401be7 : jmp rdx
0x000000000042fc0b : jmp rsp
0x0000000000401bd0 : jne 0x401bd7 ; pop rbp ; ret
0x000000000041b159 : jne 0x41b13c ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x000000000041c051 : jne 0x41c049 ; mov rax, rdx ; pop rbp ; ret
0x0000000000421166 : jne 0x421130 ; mov r8, qword ptr [rsi] ; mov rsi, qword ptr [r8] ; call rcx
0x0000000000421e68 : jne 0x421e4c ; call rax
0x000000000040b504 : jo 0x40b565 ; ret
0x00000000004180c5 : jo 0x418051 ; stc ; add eax, 0xf000000 ; xchg eax, esp ; ret 0xc8b
0x000000000042144f : jo 0x421468 ; mov qword ptr [rbp - 0x48], rdx ; call r8
0x000000000042e924 : jo 0x42e8f6 ; std ; jmp rax
0x000000000042ee30 : jo 0x42ee58 ; add byte ptr [rax], al ; ret
0x000000000042ef15 : jrcxz 0x42ef18 ; call qword ptr [rax]
0x000000000040a16f : js 0x40a178 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040a590 : js 0x40a5f0 ; pop rbp ; ret
0x000000000040b3a5 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000041a8d0 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040a9d1 : lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040b3a4 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040a9d0 : lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000042e8e5 : leave ; std ; jmp rax
0x000000000042ee10 : lock and byte ptr [rax], al ; add al, ah ; mov ch, -1 ; call qword ptr [rax]
0x000000000042ec20 : lock sbb byte ptr [rax], al ; add byte ptr [rax], dl ; out -2, eax ; call qword ptr [rax]
0x000000000042b469 : loop 0x42b4bb ; or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x000000000042b641 : loop 0x42b693 ; or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x0000000000428b6b : loope 0x428b8c ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042ef05 : loope 0x42ef08 ; call rax
0x000000000040a9cf : loopne 0x40aa20 ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040a9ce : loopne 0x40aa21 ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040ecc5 : loopne 0x40ed15 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040ecc4 : loopne 0x40ed16 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040f00b : loopne 0x40f05b ; add esp, 0x20 ; pop rbp ; ret
0x000000000040f00a : loopne 0x40f05c ; add esp, 0x20 ; pop rbp ; ret
0x000000000041c349 : loopne 0x41c39a ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000041c348 : loopne 0x41c39b ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000422c59 : loopne 0x422cbf ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000429d1c : loopne 0x429d6c ; add esp, 0x20 ; pop rbp ; ret
0x0000000000429d1b : loopne 0x429d6d ; add esp, 0x20 ; pop rbp ; ret
0x000000000042a8d2 : loopne 0x42a8da ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042f190 : loopne 0x42f201 ; std ; call qword ptr [rax]
0x000000000040de3e : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042ea98 : mov al, 0x12 ; add byte ptr [rax], al ; cmp dl, -3 ; call rax
0x000000000042ee00 : mov al, 0x20 ; add byte ptr [rax], al ; nop ; mov ch, -1 ; call rax
0x000000000042ee80 : mov al, 0x22 ; add byte ptr [rax], al ; ror dh, -1 ; call rax
0x000000000042ef00 : mov al, 0x24 ; add byte ptr [rax], al ; and cl, 0xff ; call rax
0x000000000042e820 : mov al, 8 ; add byte ptr [rax], al ; and byte ptr [rbx - 3], dl ; call rax
0x0000000000426a28 : mov al, byte ptr [rbp - 0x21] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041c469 : mov al, byte ptr [rbp - 0x22] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000420a3c : mov al, byte ptr [rbp - 0x33] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042b8f9 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042c794 : mov al, byte ptr [rbp - 6] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000426b5c : mov al, byte ptr [rdi + 0x1c] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042b82f : mov al, dh ; movzx eax, al ; pop rbp ; ret
0x000000000042b82e : mov al, sil ; movzx eax, al ; pop rbp ; ret
0x000000000042b67f : mov ax, si ; movzx eax, ax ; pop rbp ; ret
0x000000000040ce95 : mov bh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000042b683 : mov bh, -0x40 ; pop rbp ; ret
0x0000000000405a81 : mov byte ptr [0x631398], al ; pop rbp ; ret
0x0000000000404b6a : mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x0000000000416651 : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; jmp qword ptr [rdi]
0x0000000000405c88 : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret
0x0000000000408f0c : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x000000000040771e : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x000000000040a6f6 : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 1
0x0000000000401c03 : mov byte ptr [rip + 0x22f72e], 1 ; ret
0x000000000042ee15 : mov ch, -1 ; call qword ptr [rax]
0x000000000042ee05 : mov ch, -1 ; call rax
0x0000000000430b89 : mov cl, -1 ; call rax
0x000000000041fd5f : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403aa9 : mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041a1b5 : mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004248f2 : mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x000000000042b7c7 : mov dh, -0x40 ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000041fe6e : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000041c090 : mov dh, -0x40 ; pop rbp ; ret
0x0000000000405a5d : mov dword ptr [0x631390], edi ; pop rbp ; ret
0x0000000000417f1a : mov dword ptr [rax - 0xa], 0x858801c7 ; ret 0xfffe
0x000000000040655a : mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004066a8 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000429da3 : mov dword ptr [rbp + rdi*8 - 1], edi ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000421366 : mov dword ptr [rbp - 0x30], eax ; mov qword ptr [rbp - 0x38], rdx ; call r8
0x000000000042136a : mov dword ptr [rbp - 0x38], edx ; call r8
0x0000000000421452 : mov dword ptr [rbp - 0x48], edx ; call r8
0x000000000040e061 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042cb87 : mov dword ptr [rbp - 0xc], eax ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000403885 : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040c615 : mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x0000000000426b2d : mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x000000000041a5bf : mov dword ptr [rcx + 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004221ea : mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x000000000041fb38 : mov dword ptr [rdi + 0x18], 0x95f616 ; pop rbp ; ret
0x0000000000426660 : mov dword ptr [rdi + 0x48], esi ; pop rbp ; ret
0x0000000000429b0c : mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x000000000041b0aa : mov eax, 0x50c48348 ; pop rbp ; ret
0x00000000004201d2 : mov eax, 0x5b000001 ; pop rbp ; ret
0x000000000042e8a0 : mov eax, 0x6000000a ; xchg ch, bh ; jmp rax
0x000000000040a58c : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x000000000042ef40 : mov eax, 0xa0000025 ; in al, -1 ; call rax
0x000000000040e705 : mov eax, 0xf0658d48 ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040c4b2 : mov eax, 0xffffffff ; mov rsp, rbp ; pop rbp ; ret
0x000000000040c15b : mov eax, dword ptr [rax] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000042aad1 : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000406488 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040e231 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405f64 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004117d9 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x000000000042aace : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000406485 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040b13a : mov eax, dword ptr [rbp - 0x10] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000405e53 : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000406814 : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000040e13f : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040643d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406554 : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040b704 : mov eax, dword ptr [rbp - 0x18] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000426d1a : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040ecc3 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040a9cd : mov eax, dword ptr [rbp - 0x20] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000042a218 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000425e74 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041b15f : mov eax, dword ptr [rbp - 0x28] ; call rax
0x00000000004066aa : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000041f542 : mov eax, dword ptr [rbp - 0x30] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000422858 : mov eax, dword ptr [rbp - 0x30] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040bf88 : mov eax, dword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041266d : mov eax, dword ptr [rbp - 0x44] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041b0a8 : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040a58a : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000426e8f : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042caad : mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000428b00 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041f72b : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000426896 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000421624 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000410757 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000421f4e : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041b333 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000425a60 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000403889 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000042022d : mov eax, dword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000042024d : mov eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000042026d : mov eax, dword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000421169 : mov eax, dword ptr [rsi] ; mov rsi, qword ptr [r8] ; call rcx
0x000000000040c1dc : mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040c3af : mov eax, edi ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042b46e : mov eax, edi ; pop rbp ; ret
0x000000000041c054 : mov eax, edx ; pop rbp ; ret
0x000000000042b680 : mov eax, esi ; movzx eax, ax ; pop rbp ; ret
0x000000000042b4a3 : mov eax, esi ; pop rbp ; ret
0x0000000000401c2b : mov ebp, esp ; call rax
0x0000000000401b91 : mov ebp, esp ; ja 0x401b9c ; pop rbp ; ret
0x000000000040c612 : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000410fa6 : mov ecx, 0x10a ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x00000000004108fe : mov ecx, 0xa8 ; mov rsp, rbp ; pop rbp ; ret
0x000000000040266d : mov ecx, dword ptr [rax*8 + 0x42ccb0] ; jmp rcx
0x000000000040263e : mov ecx, dword ptr [rax*8 + 0x42ccd0] ; jmp rcx
0x0000000000403b48 : mov ecx, dword ptr [rax*8 + 0x42cd58] ; jmp rcx
0x0000000000406ed7 : mov ecx, dword ptr [rax*8 + 0x42dbf0] ; jmp rcx
0x00000000004079f1 : mov ecx, dword ptr [rax*8 + 0x42dc38] ; jmp rcx
0x000000000040d2c2 : mov ecx, dword ptr [rax*8 + 0x42e0f8] ; jmp rcx
0x000000000041b475 : mov ecx, dword ptr [rax*8 + 0x42e4e8] ; jmp rcx
0x0000000000406557 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000423152 : mov ecx, dword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000423062 : mov ecx, dword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x00000000004255b3 : mov ecx, dword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000426b2a : mov ecx, dword ptr [rbp - 8] ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x000000000042587a : mov ecx, dword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000042b4cd : mov ecx, eax ; shl edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000042b49d : mov ecx, eax ; shr edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000401c25 : mov edi, 0x630e20 ; mov rbp, rsp ; call rax
0x0000000000401ba2 : mov edi, 0x6312d0 ; jmp rax
0x0000000000401be2 : mov edi, 0x6312d0 ; jmp rdx
0x000000000042665c : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000420229 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000420249 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000420269 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000423066 : mov edi, dword ptr [rcx] ; call rax
0x0000000000421e64 : mov edi, dword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x0000000000423599 : mov edi, dword ptr [rsi] ; call rcx
0x000000000042cbe7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000042cbe6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000423592 : mov edx, dword ptr [rbp - 0x38] ; mov rsi, qword ptr [rdx] ; mov rdi, qword ptr [rsi] ; call rcx
0x000000000042144e : mov esi, dword ptr [rax + 0x10] ; mov qword ptr [rbp - 0x48], rdx ; call r8
0x000000000042116c : mov esi, dword ptr [rax] ; call rcx
0x0000000000421e67 : mov esi, dword ptr [rbp - 0x20] ; call rax
0x0000000000421165 : mov esi, dword ptr [rbp - 0x40] ; mov r8, qword ptr [rsi] ; mov rsi, qword ptr [r8] ; call rcx
0x00000000004255b7 : mov esi, dword ptr [rcx] ; call rax
0x0000000000423596 : mov esi, dword ptr [rdx] ; mov rdi, qword ptr [rsi] ; call rcx
0x0000000000401be0 : mov esi, eax ; mov edi, 0x6312d0 ; jmp rdx
0x000000000041b15c : mov esi, eax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x000000000041266f : mov esp, 0x50c48348 ; pop rbp ; ret
0x0000000000402288 : mov esp, ebp ; pop rbp ; ret
0x0000000000405a5c : mov qword ptr [0x631390], rdi ; pop rbp ; ret
0x0000000000421365 : mov qword ptr [rbp - 0x30], rax ; mov qword ptr [rbp - 0x38], rdx ; call r8
0x0000000000421369 : mov qword ptr [rbp - 0x38], rdx ; call r8
0x0000000000421451 : mov qword ptr [rbp - 0x48], rdx ; call r8
0x0000000000403884 : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040c614 : mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000042665f : mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000041266e : mov r12d, 0x50c48348 ; pop rbp ; ret
0x0000000000421168 : mov r8, qword ptr [rsi] ; mov rsi, qword ptr [r8] ; call rcx
0x000000000041b0a9 : mov r8d, 0x50c48348 ; pop rbp ; ret
0x000000000040a58b : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x000000000040c15a : mov rax, qword ptr [rax] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040e230 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405f63 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406484 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040b139 : mov rax, qword ptr [rbp - 0x10] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000405e52 : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040e13e : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040643c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040b703 : mov rax, qword ptr [rbp - 0x18] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040ecc2 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000425e73 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041b15e : mov rax, qword ptr [rbp - 0x28] ; call rax
0x000000000042216b : mov rax, qword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040bf87 : mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041b0a7 : mov rax, qword ptr [rbp - 0x48] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000426895 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000421623 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000410756 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000421f4d : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041b332 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000425a5f : mov rax, qword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000403888 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000042022c : mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000042024c : mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000042026c : mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000040c540 : mov rax, rcx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042b46d : mov rax, rdi ; pop rbp ; ret
0x000000000041c053 : mov rax, rdx ; pop rbp ; ret
0x0000000000401c2a : mov rbp, rsp ; call rax
0x0000000000401b90 : mov rbp, rsp ; ja 0x401b9d ; pop rbp ; ret
0x000000000040c611 : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000040266c : mov rcx, qword ptr [rax*8 + 0x42ccb0] ; jmp rcx
0x000000000040263d : mov rcx, qword ptr [rax*8 + 0x42ccd0] ; jmp rcx
0x0000000000403b47 : mov rcx, qword ptr [rax*8 + 0x42cd58] ; jmp rcx
0x0000000000406ed6 : mov rcx, qword ptr [rax*8 + 0x42dbf0] ; jmp rcx
0x00000000004079f0 : mov rcx, qword ptr [rax*8 + 0x42dc38] ; jmp rcx
0x000000000040d2c1 : mov rcx, qword ptr [rax*8 + 0x42e0f8] ; jmp rcx
0x000000000041b474 : mov rcx, qword ptr [rax*8 + 0x42e4e8] ; jmp rcx
0x0000000000423151 : mov rcx, qword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000423061 : mov rcx, qword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x00000000004255b2 : mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000426b29 : mov rcx, qword ptr [rbp - 8] ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x0000000000425879 : mov rcx, qword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000042665b : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000420228 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000420248 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000420268 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000423065 : mov rdi, qword ptr [rcx] ; call rax
0x0000000000421e63 : mov rdi, qword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x0000000000423598 : mov rdi, qword ptr [rsi] ; call rcx
0x000000000042116b : mov rsi, qword ptr [r8] ; call rcx
0x000000000042144d : mov rsi, qword ptr [rax + 0x10] ; mov qword ptr [rbp - 0x48], rdx ; call r8
0x0000000000421e66 : mov rsi, qword ptr [rbp - 0x20] ; call rax
0x00000000004255b6 : mov rsi, qword ptr [rcx] ; call rax
0x0000000000423595 : mov rsi, qword ptr [rdx] ; mov rdi, qword ptr [rsi] ; call rcx
0x0000000000401bdf : mov rsi, rax ; mov edi, 0x6312d0 ; jmp rdx
0x000000000041b15b : mov rsi, rax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x0000000000402287 : mov rsp, rbp ; pop rbp ; ret
0x000000000041fd5e : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403aa8 : movzx eax, al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041a1b4 : movzx eax, al ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004248f1 : movzx eax, al ; add rsp, 0x60 ; pop rbp ; ret
0x000000000042b7c6 : movzx eax, al ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000041fe6d : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000041c08f : movzx eax, al ; pop rbp ; ret
0x000000000040ce94 : movzx eax, ax ; mov rsp, rbp ; pop rbp ; ret
0x000000000042b682 : movzx eax, ax ; pop rbp ; ret
0x0000000000401c06 : mul dword ptr [rdx] ; add byte ptr [rcx], al ; ret
0x0000000000401c05 : mul dword ptr cs:[rdx] ; add byte ptr [rcx], al ; ret
0x0000000000405a60 : nop ; adc esp, dword ptr [rbx] ; pop rbp ; ret
0x000000000042ee04 : nop ; mov ch, -1 ; call rax
0x00000000004118eb : nop ; ret
0x000000000042cc08 : nop dword ptr [rax + rax] ; ret
0x000000000042e921 : or al, 0 ; add byte ptr [rax - 0x33], dh ; std ; jmp rax
0x000000000042fc05 : or al, 0 ; add byte ptr [rax - 0xc], cl ; std ; jmp rsp
0x000000000043048c : or al, 0x15 ; add byte ptr [rax], al ; and al, 0xffffffff ; call rcx
0x00000000004118e9 : or al, 0x25 ; nop ; ret
0x000000000041b476 : or al, 0xffffffffffffffc5 ; call 0xffffffffff41f767
0x000000000042f18c : or al, 2 ; add byte ptr [rax], al ; loopne 0x42f205 ; std ; call qword ptr [rax]
0x000000000042e8a1 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7a], ah ; std ; jmp rax
0x0000000000410fa7 : or al, byte ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x000000000042e934 : or bh, 0xfd ; jmp qword ptr [rax]
0x000000000040a759 : or byte ptr [r15], cl ; xchg eax, ebp ; ret 0x348b
0x0000000000421580 : or byte ptr [r15], cl ; xchg eax, edx ; ret 0x348b
0x00000000004257c3 : or byte ptr [r8 + 0x3b], cl ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x348b
0x0000000000408b23 : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x00000000004257c4 : or byte ptr [rax + 0x3b], cl ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x348b
0x0000000000408b24 : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000042e821 : or byte ptr [rax], al ; add byte ptr [rax], ah ; push rbx ; std ; call rax
0x000000000042bc1c : or byte ptr [rcx + 0x2038], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x000000000042c05c : or byte ptr [rcx + 0x2138], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000040dbed : or byte ptr [rcx + 0x28f9], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x0000000000412d65 : or byte ptr [rcx + 0x2f9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x000000000042b96c : or byte ptr [rcx + 0x3038], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000042bf5c : or byte ptr [rcx + 0x6138], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x0000000000426f52 : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x000000000040a75a : or byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x0000000000421581 : or byte ptr [rdi], cl ; xchg eax, edx ; ret 0x348b
0x000000000040bacd : or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x000000000040bb6f : or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x00000000004206ec : or cl, ch ; ret
0x000000000042f8dd : or dword ptr [rax], eax ; add byte ptr [rax], ah ; sar ch, cl ; jmp qword ptr [rdi]
0x000000000040e98f : or eax, 0x48fffff9 ; add esp, 0x30 ; pop rbp ; ret
0x000000000042e931 : or eax, 0xcf800000 ; std ; jmp qword ptr [rax]
0x000000000042fac5 : or eax, dword ptr [rax] ; add al, bl ; out -3, eax ; jmp rcx
0x000000000042fa85 : or eax, dword ptr [rax] ; add al, ch ; out -3, al ; call rsp
0x000000000042e8b1 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x44], dl ; std ; jmp qword ptr [rax]
0x00000000004069dd : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042b46b : or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x000000000042b4a1 : or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000042fac4 : or r8d, dword ptr [rax] ; add al, bl ; out -3, eax ; jmp rcx
0x000000000042b46a : or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x000000000042ec25 : out -2, eax ; call qword ptr [rax]
0x000000000042fa89 : out -3, al ; call rsp
0x000000000042fac9 : out -3, eax ; jmp rcx
0x000000000042b4a0 : out dx, eax ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000405264 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042cbfc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000422c5b : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405266 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042cbfe : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405268 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042cc00 : pop r14 ; pop r15 ; ret
0x000000000040b3a9 : pop r14 ; pop rbp ; ret
0x000000000040526a : pop r15 ; pop rbp ; ret
0x000000000042cc02 : pop r15 ; ret
0x00000000004117df : pop rax ; pop rbx ; pop rbp ; ret
0x000000000042f4f8 : pop rax ; ret 0xfffd
0x0000000000401c02 : pop rbp ; mov byte ptr [rip + 0x22f72e], 1 ; ret
0x0000000000401ba1 : pop rbp ; mov edi, 0x6312d0 ; jmp rax
0x0000000000401bde : pop rbp ; mov rsi, rax ; mov edi, 0x6312d0 ; jmp rdx
0x000000000042cbfb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405267 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042cbff : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401b95 : pop rbp ; ret
0x0000000000422c5a : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040af4b : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040b3a8 : pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040a173 : pop rbx ; pop rbp ; ret
0x000000000040526b : pop rdi ; pop rbp ; ret
0x000000000042cc03 : pop rdi ; ret
0x000000000042c431 : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x000000000042baf1 : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x0000000000405269 : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000042cc01 : pop rsi ; pop r15 ; ret
0x000000000040b3aa : pop rsi ; pop rbp ; ret
0x0000000000422a77 : pop rsp ; add dword ptr [rdi], ecx ; ror dword ptr cs:[rdi], -0x69 ; ret 0x348b
0x000000000042f8dc : pop rsp ; or dword ptr [rax], eax ; add byte ptr [rax], ah ; sar ch, cl ; jmp qword ptr [rdi]
0x0000000000405265 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042cbfd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000422c5c : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000420c32 : pop rsp ; ret 0xf66
0x000000000041b968 : popfq ; ret 0x348b
0x000000000042ba40 : popfq ; ret 0xc8b
0x0000000000418e3a : push 0x5b000001 ; pop rbp ; ret
0x000000000042e81f : push qword ptr [rax + 0x20000008] ; push rbx ; std ; call rax
0x000000000042ee2f : push qword ptr [rax + 0x21] ; add byte ptr [rax], al ; ret
0x000000000042edff : push qword ptr [rax - 0x6fffffe0] ; mov ch, -1 ; call rax
0x000000000042eeff : push qword ptr [rax - 0x7fffffdc] ; loope 0x42ef0e ; call rax
0x000000000042ea97 : push qword ptr [rax - 0x7fffffee] ; cli ; std ; call rax
0x0000000000428063 : push rax ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000042ef0f : push rax ; and al, 0 ; add al, dl ; jrcxz 0x42ef1e ; call qword ptr [rax]
0x000000000042ee8f : push rax ; and al, byte ptr [rax] ; add byte ptr [rax], dh ; sar bh, 1 ; call qword ptr [rax]
0x000000000042ee0f : push rax ; and byte ptr [rax], al ; add al, ah ; mov ch, -1 ; call qword ptr [rax]
0x000000000042eecf : push rax ; and eax, dword ptr [rax] ; add byte ptr [rax], dh ; fdivr st(7) ; call qword ptr [rax]
0x00000000004002d5 : push rax ; jbe 0x40027e ; xchg al, dh ; xchg eax, esi ; jl 0x400327 ; ret
0x000000000040b1de : push rax ; pop rbp ; ret
0x000000000042e8cc : push rax ; ret 0xfffd
0x000000000042ee2c : push rax ; sar edi, -1 ; jo 0x42ee5c ; add byte ptr [rax], al ; ret
0x000000000042ec1f : push rax ; sbb byte ptr [rax], al ; add byte ptr [rax], dl ; out -2, eax ; call qword ptr [rax]
0x0000000000423593 : push rbp ; enter -0x74b8, 0x32 ; mov rdi, qword ptr [rsi] ; call rcx
0x0000000000408b27 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000411467 : push rbp ; fmul dword ptr [rax - 0x77] ; ret 0x3948
0x0000000000401c24 : push rbp ; mov edi, 0x630e20 ; mov rbp, rsp ; call rax
0x000000000040c610 : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000040a4be : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000042e825 : push rbx ; std ; call rax
0x000000000042f4d4 : push rsp ; add eax, 0xc1580000 ; std ; call qword ptr [rdi]
0x0000000000404b69 : pushfq ; mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x0000000000401ea0 : pushfq ; ret
0x00000000004058cd : pushfq ; ret 0x844
0x0000000000401f9c : pushfq ; ret 0x845
0x000000000040b8fa : pushfq ; ret 0xd108
0x000000000042b49e : rcl ebx, -0x11 ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000042b4ce : rcl ebx, -0x19 ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x00000000004002dd : ret
0x00000000004115a1 : ret 0
0x000000000041b785 : ret 0x108
0x000000000041068a : ret 0x110
0x0000000000401e10 : ret 0x125
0x0000000000408f15 : ret 0x13
0x000000000041414a : ret 0x20e8
0x00000000004019d2 : ret 0x22f7
0x00000000004017d2 : ret 0x22f8
0x0000000000407727 : ret 0x2a
0x0000000000407808 : ret 0x348b
0x000000000041146b : ret 0x3948
0x0000000000408b40 : ret 0x3ae8
0x00000000004061c5 : ret 0x4001
0x00000000004118e4 : ret 0x41
0x0000000000403340 : ret 0x4401
0x000000000040b6f2 : ret 0x4801
0x0000000000410b3d : ret 0x48b
0x000000000042420c : ret 0x48b0
0x0000000000404ac7 : ret 0x48f0
0x000000000040b847 : ret 0x4cc0
0x0000000000404af9 : ret 0x4cf0
0x000000000040f25a : ret 0x5588
0x0000000000411a86 : ret 0x5589
0x0000000000405184 : ret 0x56e8
0x0000000000419594 : ret 0x60
0x000000000040ccbb : ret 0x6601
0x000000000040513b : ret 0x6fe8
0x000000000040bad0 : ret 0x7ae8
0x000000000041f825 : ret 0x8041
0x0000000000401e96 : ret 0x8141
0x000000000041fe0e : ret 0x8148
0x0000000000422d26 : ret 0x8348
0x00000000004058ce : ret 0x844
0x0000000000410eaa : ret 0x8445
0x0000000000401f9d : ret 0x845
0x00000000004020c5 : ret 0x8801
0x0000000000401ea7 : ret 0x8901
0x000000000040e845 : ret 0x8948
0x0000000000408e9c : ret 0x89a5
0x000000000040e4c3 : ret 0x8b44
0x0000000000408b2b : ret 0x8b48
0x000000000040fa95 : ret 0x9588
0x0000000000402c00 : ret 0xa3d
0x00000000004154c0 : ret 0xaae8
0x00000000004274de : ret 0xb
0x0000000000402e58 : ret 0xb0
0x0000000000422dfe : ret 0xb948
0x0000000000401bc5 : ret 0xc148
0x0000000000426c70 : ret 0xc2f6
0x0000000000404262 : ret 0xc8b
0x000000000040b8fb : ret 0xd108
0x000000000040beec : ret 0xd284
0x000000000040bb72 : ret 0xd8e8
0x0000000000429ea1 : ret 0xe280
0x0000000000401e07 : ret 0xea81
0x000000000040a40c : ret 0xee8
0x0000000000402c0e : ret 0xf01
0x000000000041cf90 : ret 0xf040
0x0000000000417d9b : ret 0xf280
0x0000000000420c33 : ret 0xf66
0x000000000041c2f2 : ret 0xf748
0x0000000000403330 : ret 0xf981
0x0000000000416f78 : ret 0xfa81
0x000000000042b0ea : ret 0xfd69
0x0000000000426c63 : ret 0xfe81
0x0000000000422e77 : ret 0xff3
0x000000000040c011 : ret 0xff70
0x00000000004160b6 : ret 0xff81
0x000000000040215a : ret 0xfff6
0x000000000042e8cd : ret 0xfffd
0x0000000000415445 : ret 0xfffe
0x00000000004054e3 : ret 0xffff
0x0000000000408812 : ret 1
0x00000000004120ec : ret 5
0x000000000040a4c2 : ret 8
0x000000000041d42d : ret 9
0x000000000041d424 : rol byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 9
0x0000000000422859 : ror byte ptr [r8 - 0x73], 1 ; clc ; pop rbx ; pop rbp ; ret
0x000000000040ddf3 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000042e920 : ror byte ptr [rax + rax], 0 ; jo 0x42e8fa ; std ; jmp rax
0x0000000000401bcc : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401bdb ; pop rbp ; ret
0x000000000042b7c8 : ror byte ptr [rax - 0x73], 0x65 ; clc ; pop rbx ; pop rbp ; ret
0x000000000042285a : ror byte ptr [rax - 0x73], 1 ; clc ; pop rbx ; pop rbp ; ret
0x000000000040ce96 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x000000000040ddf4 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000403acf : ror byte ptr [rax - 0x77], 1 ; ret 0xb0
0x000000000041a1b6 : ror byte ptr [rax - 0x7d], -0x3c ; pop rbp ; ret
0x00000000004048a4 : ror byte ptr [rax - 0x7f], -0x3c ; adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000421167 : ror byte ptr [rbx + rcx*4 + 6], 0x49 ; mov esi, dword ptr [rax] ; call rcx
0x000000000040a4bf : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000042ee84 : ror dh, -1 ; call rax
0x0000000000420b1d : ror dword ptr [rcx - 0x7d], cl ; ret
0x0000000000422a7b : ror dword ptr [rdi], -0x69 ; ret 0x348b
0x0000000000422a7a : ror dword ptr cs:[rdi], -0x69 ; ret 0x348b
0x0000000000411b29 : sahf ; ret 0x48b
0x000000000042c436 : sahf ; ret 0x5588
0x000000000042baf6 : sahf ; ret 0xc8b
0x00000000004002d7 : sahf ; xchg al, dh ; xchg eax, esi ; jl 0x400325 ; ret
0x00000000004079b4 : sal dh, cl ; ret 0x8901
0x000000000042eaac : sar bh, -3 ; call qword ptr [rax]
0x000000000042ee95 : sar bh, 1 ; call qword ptr [rax]
0x000000000042f8e1 : sar ch, cl ; jmp qword ptr [rdi]
0x0000000000401bce : sar eax, 1 ; jne 0x401bd9 ; pop rbp ; ret
0x000000000042ee2d : sar edi, -1 ; jo 0x42ee5b ; add byte ptr [rax], al ; ret
0x0000000000401bcd : sar rax, 1 ; jne 0x401bda ; pop rbp ; ret
0x0000000000430b85 : sbb al, 0 ; add al, bl ; mov cl, -1 ; call rax
0x0000000000430078 : sbb al, 0 ; add byte ptr [rax], al ; cld ; adc byte ptr [rax], al ; add byte ptr [rax], dl ; ret
0x000000000042f4f0 : sbb al, 0 ; add byte ptr [rax], al ; je 0x42f504 ; add byte ptr [rax], al ; pop rax ; ret 0xfffd
0x0000000000426b5e : sbb al, 0x24 ; add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x000000000042ec95 : sbb bh, bh ; jmp rax
0x000000000042ec21 : sbb byte ptr [rax], al ; add byte ptr [rax], dl ; out -2, eax ; call qword ptr [rax]
0x00000000004119d0 : sbb byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004109fd : sbb cl, byte ptr [rax - 0x7f] ; ret
0x0000000000406c50 : sbb cl, byte ptr [rcx - 0x7f] ; ret
0x000000000042ac87 : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040aeed : scasd eax, dword ptr [rdi] ; ret
0x0000000000401e0f : scasd eax, dword ptr [rdi] ; ret 0x125
0x000000000040ac21 : scasd eax, dword ptr [rdi] ; ret 0x8141
0x000000000041c08a : sete al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041c08c : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000420c56 : shl dword ptr [rsi + 0xf], 0x5c ; ret 0xf66
0x000000000042b4cf : shl edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000042b468 : shl edx, cl ; or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x000000000042b49f : shr edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000042ba3a : stc ; add byte ptr [r8], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x00000000004180c7 : stc ; add eax, 0xf000000 ; xchg eax, esp ; ret 0xc8b
0x000000000042c430 : stc ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x000000000042baf0 : stc ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x000000000042e7f6 : std ; call qword ptr [rax]
0x000000000042f4da : std ; call qword ptr [rdi]
0x000000000042f112 : std ; call qword ptr [rsi]
0x000000000042e826 : std ; call rax
0x000000000042f212 : std ; call rbx
0x000000000042fb6a : std ; call rcx
0x000000000042fa8a : std ; call rsp
0x000000000042e92e : std ; inc dword ptr [rax] ; or eax, 0xcf800000 ; std ; jmp qword ptr [rax]
0x000000000042e8ae : std ; inc dword ptr [rax] ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x44], dl ; std ; jmp qword ptr [rax]
0x000000000042e91e : std ; inc eax ; or al, 0 ; add byte ptr [rax - 0x33], dh ; std ; jmp rax
0x000000000042e8b6 : std ; jmp qword ptr [rax]
0x000000000042f6a2 : std ; jmp qword ptr [rdi]
0x000000000042e8a6 : std ; jmp rax
0x000000000042faca : std ; jmp rcx
0x000000000042fc0a : std ; jmp rsp
0x000000000042e81e : std ; push qword ptr [rax + 0x20000008] ; push rbx ; std ; call rax
0x000000000042ea96 : std ; push qword ptr [rax - 0x7fffffee] ; cli ; std ; call rax
0x000000000042b8fb : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041f75c : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405351 : stosd dword ptr [rdi], eax ; ret
0x000000000041a5c1 : sub al, 0x48 ; add esp, 0x30 ; pop rbp ; ret
0x000000000042cc89 : sub esp, 8 ; add rsp, 8 ; ret
0x000000000042cc88 : sub rsp, 8 ; add rsp, 8 ; ret
0x00000000004108ff : test al, 0 ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000042fc04 : test byte ptr [rax + rax], cl ; add byte ptr [rax - 0xc], cl ; std ; jmp rsp
0x000000000042cc0a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004054dc : test byte ptr [rdx], cl ; add byte ptr [rax], al ; call 0x401707
0x0000000000416654 : test dword ptr [rip - 0x17000000], eax ; jmp qword ptr [rdi]
0x0000000000405c8b : test dword ptr [rip - 0x17000000], eax ; ret
0x0000000000408f0f : test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x0000000000407721 : test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x00000000004274d8 : test dword ptr [rip - 0x17000000], eax ; ret 0xb
0x000000000040880c : test dword ptr [rip - 0x17000000], eax ; ret 1
0x00000000004120e6 : test dword ptr [rip - 0x17000000], eax ; ret 5
0x000000000041d427 : test dword ptr [rip - 0x17000000], eax ; ret 9
0x000000000040eae3 : test eax, 0x48fffffc ; add esp, 0x10 ; pop rbp ; ret
0x00000000004002d8 : xchg al, dh ; xchg eax, esi ; jl 0x400324 ; ret
0x000000000042e8a5 : xchg ch, bh ; jmp rax
0x0000000000417eda : xchg eax, ebp ; ret
0x000000000040a75c : xchg eax, ebp ; ret 0x348b
0x0000000000410b3c : xchg eax, ebp ; ret 0x48b
0x000000000040f259 : xchg eax, ebp ; ret 0x5588
0x000000000041f824 : xchg eax, ebp ; ret 0x8041
0x0000000000410ea9 : xchg eax, ebp ; ret 0x8445
0x000000000040e4c2 : xchg eax, ebp ; ret 0x8b44
0x000000000040fa94 : xchg eax, ebp ; ret 0x9588
0x0000000000415adf : xchg eax, ebp ; ret 0xc8b
0x0000000000429ea0 : xchg eax, ebp ; ret 0xe280
0x0000000000402283 : xchg eax, ecx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000422a7d : xchg eax, edi ; ret 0x348b
0x0000000000421583 : xchg eax, edx ; ret 0x348b
0x00000000004002da : xchg eax, esi ; jl 0x400322 ; ret
0x0000000000407807 : xchg eax, esi ; ret 0x348b
0x0000000000402484 : xchg eax, esp ; ret
0x0000000000414258 : xchg eax, esp ; ret 0x348b
0x0000000000410ed3 : xchg eax, esp ; ret 0x48b
0x000000000041c3d6 : xchg eax, esp ; ret 0x5588
0x0000000000401e95 : xchg eax, esp ; ret 0x8141
0x000000000042296c : xchg eax, esp ; ret 0x8b44
0x0000000000417ed7 : xchg eax, esp ; ret 0x9588
0x0000000000402bff : xchg eax, esp ; ret 0xa3d
0x0000000000404261 : xchg eax, esp ; ret 0xc8b
0x000000000040beeb : xchg eax, esp ; ret 0xd284
0x0000000000417d9a : xchg eax, esp ; ret 0xf280
0x000000000040332f : xchg eax, esp ; ret 0xf981
0x0000000000416f77 : xchg eax, esp ; ret 0xfa81
0x0000000000426c62 : xchg eax, esp ; ret 0xfe81
0x00000000004160b5 : xchg eax, esp ; ret 0xff81
0x000000000041c08b : xchg eax, esp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000042b46c : xlatb ; mov rax, rdi ; pop rbp ; ret
0x000000000041b77e : xor byte ptr [r8 - 0x75], cl ; adc byte ptr [rax - 0x7f], cl ; ret 0x108
0x000000000041b77f : xor byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7f], cl ; ret 0x108
0x000000000040bac7 : xor byte ptr [rax - 0x75], cl ; add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x000000000040bb69 : xor byte ptr [rax - 0x75], cl ; add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x0000000000426d16 : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000041e71c : xor byte ptr [rax], dl ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004054ef : xor byte ptr [rcx + 0x28e8b875], cl ; ret
0x0000000000423597 : xor cl, byte ptr [rax - 0x75] ; call rcx
0x000000000042ea6c : xor cl, dh ; std ; call qword ptr [rax]
0x0000000000411377 : xor eax, ebp ; ret
0x00000000004066a6 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
