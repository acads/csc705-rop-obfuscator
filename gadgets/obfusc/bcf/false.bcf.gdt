0x000000000040f28b : add ah, al ; or al, byte ptr [rax] ; add al, dl ; in al, -1 ; call rsp
0x00000000004022cd : add ah, byte ptr [rcx] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004013a4 : add ah, byte ptr [rcx] ; jmp rax
0x00000000004013e4 : add ah, byte ptr [rcx] ; jmp rdx
0x0000000000401a31 : add ah, byte ptr [rcx] ; pop rbp ; ret
0x000000000040ec35 : add al, 0 ; add al, cl ; mov edi, edi ; call qword ptr [rdi]
0x0000000000401a52 : add al, 0x25 ; pop rax ; add ah, byte ptr [rcx] ; pop rbp ; ret
0x000000000040ec37 : add al, cl ; mov edi, edi ; call qword ptr [rdi]
0x000000000040e96f : add al, dh ; cmp bh, bh ; call rbx
0x000000000040e6d3 : add al, dh ; ret 0xffff
0x000000000040f28f : add al, dl ; in al, -1 ; call rsp
0x000000000040d8af : add bl, dh ; ret
0x000000000040c6db : add byte ptr [r8], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x000000000040e7e3 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; sub dil, dil ; jmp qword ptr [rax]
0x0000000000408d90 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000040bfb2 : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000040d8ad : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040c168 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000040d8ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040d749 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x000000000040d8ac : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000406bec : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x8141
0x0000000000406f18 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000402189 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret
0x000000000040397b : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x844
0x000000000040179c : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x0000000000407f9a : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x0000000000402a0a : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x125
0x000000000040a4af : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x0000000000402a18 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000040217e : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x0000000000406eb8 : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x51], al ; ret
0x000000000040c610 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000040c6dc : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x0000000000402a23 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret
0x00000000004078c6 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x000000000040d0d2 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x000000000040c792 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x000000000040a51c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret
0x000000000040145b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x125
0x0000000000408917 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x000000000040945e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x000000000040a836 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x0000000000408b91 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x0000000000407290 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040c8c0 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x0000000000403971 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x0000000000407eb7 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000401c5d : add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000404ee1 : add byte ptr [rax], al ; add cl, ch ; ret 0x13
0x00000000004036f3 : add byte ptr [rax], al ; add cl, ch ; ret 0x2a
0x000000000040adba : add byte ptr [rax], al ; add cl, ch ; ret 0xb
0x00000000004047de : add byte ptr [rax], al ; add cl, ch ; ret 1
0x0000000000401bcf : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004029af : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040101b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000040ec32 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; add al, 0 ; add al, cl ; mov edi, edi ; call qword ptr [rdi]
0x0000000000401059 : add byte ptr [rax], al ; jmp 0x401039
0x00000000004027e2 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000040d74b : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000402452 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040c169 : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040e96a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], eax ; add al, dh ; cmp bh, bh ; call rbx
0x0000000000408de0 : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000406f19 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040b945 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000406141 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040e58a : add byte ptr [rax], al ; push rax ; mov edi, edi ; call qword ptr [rax]
0x000000000040d8ae : add byte ptr [rax], al ; ret
0x000000000040e7e2 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub dil, dil ; jmp qword ptr [rax]
0x000000000040e7e6 : add byte ptr [rax], al ; sub dil, dil ; jmp qword ptr [rax]
0x000000000040e57b : add byte ptr [rax], al ; test bh, bh ; call rax
0x0000000000406bee : add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x8141
0x0000000000406be4 : add byte ptr [rbp - 0x77], al ; ret 0x8141
0x0000000000406f1a : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040b946 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000406142 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040729c : add byte ptr [rcx + 0xf], al ; pushfq ; mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x000000000040218b : add byte ptr [rcx + 0xf], al ; pushfq ; ret
0x000000000040397d : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x844
0x000000000040179e : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x0000000000407f9c : add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x0000000000402a0c : add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x125
0x000000000040a4b1 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x0000000000402a1a : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000402180 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x000000000040728c : add byte ptr [rcx + 0xfe], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000407ac8 : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040396d : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x0000000000407f92 : add byte ptr [rcx - 0x77], al ; ret
0x0000000000402a02 : add byte ptr [rcx - 0x77], al ; ret 0x8141
0x0000000000401408 : add byte ptr [rcx], al ; ret
0x0000000000406eba : add byte ptr [rdi + rcx - 0x51], al ; ret
0x000000000040c612 : add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000040c6de : add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x0000000000402a25 : add byte ptr [rdi], cl ; pushfq ; ret
0x00000000004078c8 : add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x000000000040d0d4 : add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x000000000040c794 : add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x000000000040a51e : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret
0x000000000040145d : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x125
0x0000000000408919 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x0000000000409460 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x000000000040a838 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x0000000000408b93 : add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x0000000000407292 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040c8c2 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x0000000000403973 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x0000000000407eb9 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040ec33 : add byte ptr [rsp + rax], ch ; add al, cl ; mov edi, edi ; call qword ptr [rdi]
0x0000000000401c5f : add cl, ch ; ret
0x0000000000404ee3 : add cl, ch ; ret 0x13
0x00000000004036f5 : add cl, ch ; ret 0x2a
0x000000000040adbc : add cl, ch ; ret 0xb
0x00000000004047e0 : add cl, ch ; ret 1
0x0000000000407a9a : add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x0000000000407b3c : add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x000000000040e96d : add dword ptr [rax], eax ; add al, dh ; cmp bh, bh ; call rbx
0x000000000040b944 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000406140 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040c7f5 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000040c59d : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401c59 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret
0x0000000000404edd : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x00000000004036ef : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x000000000040adb6 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0xb
0x00000000004047da : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 1
0x0000000000401404 : add eax, 0x20ee3e ; add ebx, esi ; ret
0x0000000000401c5c : add eax, 0xe9000000 ; ret
0x0000000000404ee0 : add eax, 0xe9000000 ; ret 0x13
0x00000000004036f2 : add eax, 0xe9000000 ; ret 0x2a
0x000000000040adb9 : add eax, 0xe9000000 ; ret 0xb
0x00000000004047dd : add eax, 0xe9000000 ; ret 1
0x0000000000401019 : add eax, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004013cb : add eax, edx ; sar rax, 1 ; jne 0x4013dc ; pop rbp ; ret
0x0000000000401409 : add ebx, esi ; ret
0x0000000000401bd2 : add esp, 0x10 ; pop rbp ; ret
0x000000000040613d : add esp, 0x178 ; pop rbx ; pop rbp ; ret
0x0000000000408f7c : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000401f38 : add esp, 0x20 ; pop rbp ; ret
0x0000000000402411 : add esp, 0x30 ; pop rbp ; ret
0x00000000004017ed : add esp, 0x40 ; pop rbp ; ret
0x0000000000408abf : add esp, 0x40 ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004071ac : add esp, 0x50 ; pop rbp ; ret
0x00000000004074d2 : add esp, 0x70 ; pop rbp ; ret
0x000000000040655e : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000408ddc : add esp, 0xb0 ; pop rbp ; ret
0x000000000040101e : add esp, 8 ; ret
0x00000000004013ca : add rax, rdx ; sar rax, 1 ; jne 0x4013dd ; pop rbp ; ret
0x0000000000401bd1 : add rsp, 0x10 ; pop rbp ; ret
0x000000000040613c : add rsp, 0x178 ; pop rbx ; pop rbp ; ret
0x0000000000408f7b : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000401f37 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000402410 : add rsp, 0x30 ; pop rbp ; ret
0x00000000004017ec : add rsp, 0x40 ; pop rbp ; ret
0x0000000000408abe : add rsp, 0x40 ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004071ab : add rsp, 0x50 ; pop rbp ; ret
0x00000000004074d1 : add rsp, 0x70 ; pop rbp ; ret
0x000000000040655d : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000408ddb : add rsp, 0xb0 ; pop rbp ; ret
0x000000000040101d : add rsp, 8 ; ret
0x000000000040c7f4 : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040c59c : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040c20a : and byte ptr [r15], cl ; xchg eax, esp ; ret 0x348b
0x0000000000401407 : and byte ptr [rax], al ; add ebx, esi ; ret
0x000000000040c20b : and byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x0000000000407bc7 : and eax, 0x48ffffee ; add esp, 0x20 ; pop rbp ; ret
0x0000000000401a2f : and eax, 0x610250 ; pop rbp ; ret
0x0000000000401a53 : and eax, 0x610258 ; pop rbp ; ret
0x00000000004063d9 : call 0xffffffffe902ed29
0x00000000004063d8 : call 0xffffffffe902ed2a
0x000000000040d889 : call qword ptr [r12 + rbx*8]
0x000000000040e58f : call qword ptr [rax]
0x000000000040ec3b : call qword ptr [rdi]
0x000000000040e873 : call qword ptr [rsi]
0x000000000040d88a : call qword ptr [rsp + rbx*8]
0x000000000040142d : call rax
0x000000000040e973 : call rbx
0x000000000040ef2b : call rcx
0x000000000040ee4b : call rsp
0x000000000040a9f4 : clc ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004013cf : clc ; jne 0x4013d8 ; pop rbp ; ret
0x00000000004069a3 : clc ; pop rbx ; pop rbp ; ret
0x000000000040d826 : cld ; mov dword ptr [rbp - 0xc], eax ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x000000000040d436 : cli ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401a2e : cmp al, 0x25 ; push rax ; add ah, byte ptr [rcx] ; pop rbp ; ret
0x0000000000409ed9 : cmp al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040e971 : cmp bh, bh ; call rbx
0x000000000040c8be : cmp byte ptr [rax], ah ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x000000000040c60e : cmp byte ptr [rax], dh ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000040ccfe : cmp byte ptr [rcx], ah ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000040945c : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x000000000040686d : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040138d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4013a0 ; pop rbp ; ret
0x0000000000406622 : dec byte ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x0000000000402aff : dec byte ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret
0x00000000004039bf : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; fadd qword ptr [rax] ; jmp rcx
0x00000000004081a6 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040b6b4 : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000040358a : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x000000000040648b : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000407f5a : enter -0x7cb8, -0x3c ; pop rbp ; ret
0x0000000000402eab : fadd qword ptr [rax] ; jmp rcx
0x000000000040f151 : fdivr st(7) ; call rax
0x0000000000402192 : fiadd dword ptr [rcx - 0xa] ; ret 0x4001
0x00000000004076bf : fiadd dword ptr [rcx - 0xa] ; ret 0x4801
0x000000000040ac48 : fiadd dword ptr [rcx - 0xa] ; ret 0x8801
0x0000000000408217 : fiadd dword ptr [rcx - 0xa] ; ret 0x8901
0x0000000000409b4e : fiadd dword ptr [rcx - 0xa] ; ret 0xf01
0x0000000000402a2b : fild dword ptr [rcx - 0xa] ; ret
0x0000000000404af8 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040d88c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000409003 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040d829 : hlt ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x00000000004013a0 : hlt ; pop rbp ; mov edi, 0x610218 ; jmp rax
0x000000000040d74f : hlt ; pop rbp ; ret
0x000000000040f291 : in al, -1 ; call rsp
0x00000000004027e6 : in al, dx ; pop rbp ; ret
0x0000000000409b38 : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x000000000040728e : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000406973 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000040217c : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x0000000000407aca : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040396f : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x000000000040c6d8 : inc dword ptr [rcx + 0x41f9] ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x000000000040d0ce : inc dword ptr [rcx + 0x5af9] ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x000000000040c78e : inc dword ptr [rcx + 0x5af9] ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x000000000040ec34 : insb byte ptr [rdi], dx ; add al, 0 ; add al, cl ; mov edi, edi ; call qword ptr [rdi]
0x0000000000408d98 : int 0x80
0x0000000000401393 : ja 0x40139a ; pop rbp ; ret
0x000000000040139f : je 0x40139d ; pop rbp ; mov edi, 0x610218 ; jmp rax
0x000000000040105b : jmp 0x401037
0x000000000040e4cf : jmp qword ptr [rax]
0x00000000004013a7 : jmp rax
0x0000000000402c6d : jmp rbx
0x0000000000402eae : jmp rcx
0x00000000004013e7 : jmp rdx
0x00000000004013d0 : jne 0x4013d7 ; pop rbp ; ret
0x00000000004074d4 : jo 0x407535 ; ret
0x000000000040613f : js 0x406148 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000406560 : js 0x4065c0 ; pop rbp ; ret
0x0000000000407375 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040a6f0 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004069a1 : lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000407374 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004069a0 : lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040e6cf : ljmp ptr [rax] ; or eax, dword ptr [rax] ; add al, dh ; ret 0xffff
0x000000000040699f : loopne 0x4069f0 ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040699e : loopne 0x4069f1 ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000409c65 : loopne 0x409cb5 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000409c64 : loopne 0x409cb6 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000408dde : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040c599 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040d434 : mov al, byte ptr [rbp - 6] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401a51 : mov byte ptr [0x610258], al ; pop rbp ; ret
0x00000000004072a0 : mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x0000000000401c58 : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret
0x0000000000404edc : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x00000000004036ee : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x00000000004066c6 : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 1
0x0000000000401403 : mov byte ptr [rip + 0x20ee3e], 1 ; ret
0x000000000040e68d : mov ch, -1 ; jmp qword ptr [rax]
0x000000000040c7f7 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000040c59f : mov dh, -0x40 ; pop rbp ; ret
0x000000000040e67d : mov dl, -1 ; jmp rax
0x0000000000401a2d : mov dword ptr [0x610250], edi ; pop rbp ; ret
0x000000000040252a : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000402678 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004017e9 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000409001 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040d827 : mov dword ptr [rbp - 0xc], eax ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x000000000040655c : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x00000000004096a5 : mov eax, 0xf0658d48 ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040bfb1 : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000402458 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004091d1 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401f34 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040bfae : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000402455 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040710a : mov eax, dword ptr [rbp - 0x10] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000401e23 : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004027e4 : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x00000000004090df : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040240d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402524 : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004076d4 : mov eax, dword ptr [rbp - 0x18] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000409c63 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040699d : mov eax, dword ptr [rbp - 0x20] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040bdc8 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040267a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040a3e2 : mov eax, dword ptr [rbp - 0x30] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000407f58 : mov eax, dword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040655a : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040d74d : mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x000000000040a9f2 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040142b : mov ebp, esp ; call rax
0x0000000000401391 : mov ebp, esp ; ja 0x40139c ; pop rbp ; ret
0x0000000000402ea7 : mov ecx, dword ptr [rax*8 + 0x40dc00] ; jmp rcx
0x00000000004039c1 : mov ecx, dword ptr [rax*8 + 0x40dc48] ; jmp rcx
0x0000000000408262 : mov ecx, dword ptr [rax*8 + 0x40e108] ; jmp rcx
0x0000000000402527 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401425 : mov edi, 0x60fe20 ; mov rbp, rsp ; call rax
0x00000000004013a2 : mov edi, 0x610218 ; jmp rax
0x00000000004013e2 : mov edi, 0x610218 ; jmp rdx
0x000000000040d887 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000040e58d : mov edi, edi ; call qword ptr [rax]
0x000000000040ec39 : mov edi, edi ; call qword ptr [rdi]
0x000000000040d886 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x00000000004013e0 : mov esi, eax ; mov edi, 0x610218 ; jmp rdx
0x000000000040a513 : mov esp, 0x89006103 ; ret
0x0000000000401452 : mov esp, 0x89006103 ; ret 0xea81
0x000000000040710e : mov esp, ebp ; pop rbp ; ret
0x0000000000401a2c : mov qword ptr [0x610250], rdi ; pop rbp ; ret
0x000000000040655b : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x00000000004091d0 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401f33 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402454 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000407109 : mov rax, qword ptr [rbp - 0x10] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000401e22 : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004090de : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040240c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004076d3 : mov rax, qword ptr [rbp - 0x18] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000409c62 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407f57 : mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040a9f1 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040142a : mov rbp, rsp ; call rax
0x0000000000401390 : mov rbp, rsp ; ja 0x40139d ; pop rbp ; ret
0x0000000000402ea6 : mov rcx, qword ptr [rax*8 + 0x40dc00] ; jmp rcx
0x00000000004039c0 : mov rcx, qword ptr [rax*8 + 0x40dc48] ; jmp rcx
0x0000000000408261 : mov rcx, qword ptr [rax*8 + 0x40e108] ; jmp rcx
0x00000000004013df : mov rsi, rax ; mov edi, 0x610218 ; jmp rdx
0x000000000040710d : mov rsp, rbp ; pop rbp ; ret
0x000000000040e96c : movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], eax ; add al, dh ; cmp bh, bh ; call rbx
0x000000000040c7f6 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040c59e : movzx eax, al ; pop rbp ; ret
0x000000000040d8a8 : nop dword ptr [rax + rax] ; ret
0x0000000000401450 : or al, 0x25 ; mov esp, 0x89006103 ; ret 0xea81
0x00000000004039c2 : or al, 0xffffffffffffffc5 ; fadd qword ptr [rax] ; jmp rcx
0x000000000040f28d : or al, byte ptr [rax] ; add al, dl ; in al, -1 ; call rsp
0x0000000000406729 : or byte ptr [r15], cl ; xchg eax, ebp ; ret 0x348b
0x0000000000404af3 : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000404af4 : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040c8bc : or byte ptr [rcx + 0x2038], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x000000000040ccfc : or byte ptr [rcx + 0x2138], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x0000000000408b8d : or byte ptr [rcx + 0x28f9], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x000000000040c60c : or byte ptr [rcx + 0x3038], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000040cbfc : or byte ptr [rcx + 0x6138], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000040a832 : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x000000000040672a : or byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x0000000000407a9d : or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x0000000000407b3f : or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x000000000040992f : or eax, 0x48fffff9 ; add esp, 0x30 ; pop rbp ; ret
0x000000000040e6d1 : or eax, dword ptr [rax] ; add al, dh ; ret 0xffff
0x00000000004029ad : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401406 : out dx, al ; and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000402ce4 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040d89c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000402ce6 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040d89e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000402ce8 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040d8a0 : pop r14 ; pop r15 ; ret
0x0000000000407379 : pop r14 ; pop rbp ; ret
0x0000000000402cea : pop r15 ; pop rbp ; ret
0x000000000040d8a2 : pop r15 ; ret
0x0000000000401a54 : pop rax ; add ah, byte ptr [rcx] ; pop rbp ; ret
0x0000000000401402 : pop rbp ; mov byte ptr [rip + 0x20ee3e], 1 ; ret
0x00000000004013a1 : pop rbp ; mov edi, 0x610218 ; jmp rax
0x00000000004013de : pop rbp ; mov rsi, rax ; mov edi, 0x610218 ; jmp rdx
0x000000000040d89b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000402ce7 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040d89f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401395 : pop rbp ; ret
0x0000000000406f1b : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000407378 : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000406143 : pop rbx ; pop rbp ; ret
0x0000000000402ceb : pop rdi ; pop rbp ; ret
0x000000000040d8a3 : pop rdi ; ret
0x000000000040d0d1 : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x000000000040c791 : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x0000000000402ce9 : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040d8a1 : pop rsi ; pop r15 ; ret
0x000000000040737a : pop rsi ; pop rbp ; ret
0x0000000000402ce5 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040d89d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040c614 : popfq ; ret 0x348b
0x000000000040c6e0 : popfq ; ret 0xc8b
0x000000000040e577 : push qword ptr [rax + 5] ; test bh, bh ; call rax
0x0000000000401a30 : push rax ; add ah, byte ptr [rcx] ; pop rbp ; ret
0x000000000040b943 : push rax ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040e58c : push rax ; mov edi, edi ; call qword ptr [rax]
0x00000000004071ae : push rax ; pop rbp ; ret
0x0000000000404af7 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000401424 : push rbp ; mov edi, 0x60fe20 ; mov rbp, rsp ; call rax
0x000000000040648e : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000040729f : pushfq ; mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x000000000040218e : pushfq ; ret
0x0000000000403980 : pushfq ; ret 0x844
0x00000000004017a1 : pushfq ; ret 0x845
0x00000000004078ca : pushfq ; ret 0xd108
0x0000000000401021 : ret
0x0000000000401460 : ret 0x125
0x0000000000404ee5 : ret 0x13
0x0000000000401262 : ret 0x20ee
0x0000000000401062 : ret 0x20ef
0x00000000004036f7 : ret 0x2a
0x00000000004037d8 : ret 0x348b
0x0000000000402195 : ret 0x4001
0x00000000004076c2 : ret 0x4801
0x0000000000402a68 : ret 0x48f0
0x0000000000407817 : ret 0x4cc0
0x0000000000402a9a : ret 0x4cf0
0x000000000040d0d7 : ret 0x5588
0x0000000000407aa0 : ret 0x7ae8
0x000000000040a4b5 : ret 0x8041
0x0000000000402184 : ret 0x8141
0x0000000000403981 : ret 0x844
0x00000000004017a2 : ret 0x845
0x000000000040ac4b : ret 0x8801
0x0000000000403986 : ret 0x8901
0x00000000004097e5 : ret 0x8948
0x0000000000404e6c : ret 0x89a5
0x0000000000409463 : ret 0x8b44
0x0000000000404afb : ret 0x8b48
0x0000000000404b10 : ret 0xae8
0x000000000040adbe : ret 0xb
0x00000000004081a9 : ret 0xb0
0x00000000004013c5 : ret 0xc148
0x000000000040a83b : ret 0xc8b
0x00000000004078cb : ret 0xd108
0x0000000000407ebc : ret 0xd284
0x0000000000407b42 : ret 0xd8e8
0x0000000000401457 : ret 0xea81
0x00000000004063dc : ret 0xee8
0x0000000000409b51 : ret 0xf01
0x000000000040b96a : ret 0xff58
0x000000000040e6d5 : ret 0xffff
0x00000000004047e2 : ret 1
0x0000000000406492 : ret 8
0x0000000000408d93 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x00000000004013cc : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4013db ; pop rbp ; ret
0x000000000040c7f8 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x0000000000408d94 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x000000000040648f : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000040d0d6 : sahf ; ret 0x5588
0x000000000040c796 : sahf ; ret 0xc8b
0x0000000000403984 : sal dh, cl ; ret 0x8901
0x00000000004013ce : sar eax, 1 ; jne 0x4013d9 ; pop rbp ; ret
0x00000000004013cd : sar rax, 1 ; jne 0x4013da ; pop rbp ; ret
0x000000000040e7e4 : sbb al, 0 ; add byte ptr [rax], al ; sub dil, dil ; jmp qword ptr [rax]
0x000000000040a511 : sbb al, 0x25 ; mov esp, 0x89006103 ; ret
0x0000000000402c20 : sbb cl, byte ptr [rcx - 0x7f] ; ret
0x000000000040c167 : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000406ebd : scasd eax, dword ptr [rdi] ; ret
0x000000000040145f : scasd eax, dword ptr [rdi] ; ret 0x125
0x0000000000406bf1 : scasd eax, dword ptr [rdi] ; ret 0x8141
0x000000000040c6da : stc ; add byte ptr [r8], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x000000000040d0d0 : stc ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x000000000040c790 : stc ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x000000000040c59b : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040e7e9 : sub bh, bh ; jmp qword ptr [rax]
0x000000000040e7e8 : sub dil, dil ; jmp qword ptr [rax]
0x000000000040e4cd : sub edi, edi ; jmp qword ptr [rax]
0x000000000040d8dd : sub esp, 8 ; add rsp, 8 ; ret
0x000000000040d8dc : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040e57d : test bh, bh ; call rax
0x000000000040d8aa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000401c5b : test dword ptr [rip - 0x17000000], eax ; ret
0x0000000000404edf : test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x00000000004036f1 : test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x000000000040adb8 : test dword ptr [rip - 0x17000000], eax ; ret 0xb
0x00000000004047dc : test dword ptr [rip - 0x17000000], eax ; ret 1
0x0000000000409a83 : test eax, 0x48fffffc ; add esp, 0x10 ; pop rbp ; ret
0x000000000040672c : xchg eax, ebp ; ret 0x348b
0x000000000040a4b4 : xchg eax, ebp ; ret 0x8041
0x0000000000409462 : xchg eax, ebp ; ret 0x8b44
0x000000000040a83a : xchg eax, ebp ; ret 0xc8b
0x00000000004037d7 : xchg eax, esi ; ret 0x348b
0x0000000000402a1d : xchg eax, esp ; ret
0x000000000040c20d : xchg eax, esp ; ret 0x348b
0x0000000000402183 : xchg eax, esp ; ret 0x8141
0x0000000000407ebb : xchg eax, esp ; ret 0xd284
0x0000000000407a97 : xor byte ptr [rax - 0x75], cl ; add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x0000000000407b39 : xor byte ptr [rax - 0x75], cl ; add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x000000000040e871 : xor edi, edi ; call qword ptr [rsi]
0x0000000000402676 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
