0x00000000004147a3 : adc byte ptr [rax - 0x75], cl ; jge 0x41476d ; call rax
0x00000000004147a2 : adc byte ptr [rax - 0x75], cl ; jge 0x41476e ; call rax
0x0000000000414d85 : adc byte ptr [rax - 0x75], cl ; jge 0x414d4f ; call rax
0x0000000000414d84 : adc byte ptr [rax - 0x75], cl ; jge 0x414d50 ; call rax
0x0000000000414fe3 : adc byte ptr [rax - 0x75], cl ; jge 0x414fad ; call rax
0x0000000000414fe2 : adc byte ptr [rax - 0x75], cl ; jge 0x414fae ; call rax
0x000000000042f970 : adc byte ptr [rax - 0x7f], cl ; ret 0x10
0x00000000004335af : adc byte ptr [rax - 0x7f], cl ; ret 0x20
0x0000000000435be9 : adc byte ptr [rax], al ; add al, ah ; ret
0x0000000000435bd9 : adc byte ptr [rax], al ; add al, al ; ret 0xfffd
0x0000000000435be1 : adc byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000041bec0 : adc byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004370d0 : adc cl, -1 ; call qword ptr [rax]
0x000000000042da2d : adc dword ptr [rax - 0x7f], ecx ; ret 0x20
0x0000000000428fcd : adc dword ptr [rax - 0x7f], ecx ; ret 1
0x0000000000435a25 : adc ebp, edi ; call rax
0x00000000004368b3 : add ah, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x59], cl ; std ; jmp rcx
0x00000000004358f9 : add al, 0 ; add byte ptr [rax], ah ; ret
0x00000000004370cc : add al, 0x13 ; add byte ptr [rax], al ; adc cl, -1 ; call qword ptr [rax]
0x00000000004054d2 : add al, 0x25 ; cwde ; and dword ptr [rbx], 0x5d ; ret
0x0000000000435beb : add al, ah ; ret
0x0000000000435a63 : add al, ah ; std ; call rax
0x0000000000435bdb : add al, al ; ret 0xfffd
0x0000000000435fed : add al, byte ptr [rax] ; add byte ptr [rax - 0x1a], dh ; cld ; call rax
0x0000000000418e13 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000415301 : add al, ch ; cdq ; ret
0x0000000000415374 : add al, ch ; ret
0x0000000000425ac8 : add al, ch ; ret 0xfdbb
0x000000000043663f : add al, dh ; js 0x436644 ; call qword ptr [rdi]
0x0000000000435b6b : add al, dh ; scasd eax, dword ptr [rdi] ; std ; call qword ptr [rax]
0x0000000000435be4 : add bl, al ; std ; push rax ; adc byte ptr [rax], al ; add al, ah ; ret
0x000000000043421f : add bl, dh ; ret
0x000000000040433b : add byte ptr [r8], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x0000000000427cad : add byte ptr [rax + 0x39], cl ; ror dword ptr [rdi], -0x6b ; ret 0x348b
0x00000000004197c1 : add byte ptr [rax + 1], cl ; ret 0x4a3b
0x0000000000435e6b : add byte ptr [rax + rax - 0x3f400000], ah ; cld ; jmp rdx
0x000000000043663b : add byte ptr [rax + rcx], dh ; add al, dh ; js 0x436648 ; call qword ptr [rdi]
0x0000000000435fef : add byte ptr [rax - 0x1a], dh ; cld ; call rax
0x0000000000435bab : add byte ptr [rax - 0x42], ah ; std ; call qword ptr [rax]
0x00000000004368b7 : add byte ptr [rax - 0x59], cl ; std ; jmp rcx
0x0000000000436877 : add byte ptr [rax - 0x5a], bl ; std ; call rsp
0x0000000000405754 : add byte ptr [rax - 0x73], cl ; clc ; pop rbx ; pop rbp ; ret
0x000000000040ff37 : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x0000000000414e03 : add byte ptr [rax - 0x75], cl ; jge 0x414dc5 ; call rax
0x00000000004069c7 : add byte ptr [rax - 0x75], cl ; loopne 0x406a1e ; mov esp, ebp ; pop rbp ; ret
0x00000000004149e2 : add byte ptr [rax - 0x75], cl ; mov ebp, 0xfffffba0 ; call rax
0x0000000000410b50 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000402f11 : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000433d43 : add byte ptr [rax - 0x77], cl ; or cl, ch ; salc ; ret 0xffff
0x000000000042a600 : add byte ptr [rax - 0x77], cl ; xor cl, ch ; jmp rax
0x000000000043614f : add byte ptr [rax - 0xd], dl ; cld ; call qword ptr [rsi]
0x0000000000435a23 : add byte ptr [rax], ah ; adc ebp, edi ; call rax
0x0000000000435b9b : add byte ptr [rax], ah ; mov bh, -3 ; call rax
0x00000000004358fb : add byte ptr [rax], ah ; ret
0x0000000000436b5f : add byte ptr [rax], ah ; salc ; std ; call rax
0x00000000004370ce : add byte ptr [rax], al ; adc cl, -1 ; call qword ptr [rax]
0x00000000004370ca : add byte ptr [rax], al ; add al, 0x13 ; add byte ptr [rax], al ; adc cl, -1 ; call qword ptr [rax]
0x0000000000415372 : add byte ptr [rax], al ; add al, ch ; ret
0x000000000043421d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000427cab : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ror dword ptr [rdi], -0x6b ; ret 0x348b
0x00000000004197bf : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x4a3b
0x000000000041d9e8 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000433d41 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; or cl, ch ; salc ; ret 0xffff
0x000000000042a5fe : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; xor cl, ch ; jmp rax
0x000000000043421b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000403acd : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004053a9 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x00000000004135e1 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000043421c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004214d0 : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x0000000000405700 : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x8141
0x000000000040d848 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000408b32 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000401e9b : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret
0x000000000040a2ab : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x844
0x0000000000402ed5 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x000000000040fd5a : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x000000000040212d : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x125
0x000000000041d20d : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x000000000041515f : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x000000000040213b : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000401e90 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x0000000000405ba9 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8b44
0x000000000042530a : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xf981
0x0000000000417083 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xfb81
0x000000000040d7e8 : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x51], al ; ret
0x0000000000435d22 : add byte ptr [rax], al ; add byte ptr [rdi - 1], dl ; jmp qword ptr [rax]
0x0000000000404270 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000040433c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x0000000000402145 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret
0x000000000042161f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0x348b
0x00000000004216e1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xc8b
0x000000000040e1f6 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x0000000000404d32 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x00000000004043f2 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x00000000004151cc : add byte ptr [rax], al ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret
0x0000000000401c2b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x125
0x000000000040e980 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000402ea0 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x000000000041121e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x0000000000406f09 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x000000000042af90 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042bb3b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000410951 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x0000000000408656 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000404520 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x000000000040a2a1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x0000000000402766 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x00000000004024b4 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x0000000000403289 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000412ebe : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xfe81
0x00000000004182ab : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xff81
0x0000000000414deb : add byte ptr [rax], al ; add cl, ch ; cwde ; add dword ptr [rax], eax ; add cl, ch ; ret 0
0x0000000000427d76 : add byte ptr [rax], al ; add cl, ch ; jmp qword ptr [rdi]
0x0000000000405fed : add byte ptr [rax], al ; add cl, ch ; ret
0x000000000040b811 : add byte ptr [rax], al ; add cl, ch ; ret 0x13
0x000000000040a023 : add byte ptr [rax], al ; add cl, ch ; ret 0x2a
0x00000000004276e0 : add byte ptr [rax], al ; add cl, ch ; ret 0x2d
0x0000000000415a6a : add byte ptr [rax], al ; add cl, ch ; ret 0xb
0x00000000004330da : add byte ptr [rax], al ; add cl, ch ; ret 0xf
0x000000000040b10e : add byte ptr [rax], al ; add cl, ch ; ret 1
0x00000000004082a9 : add byte ptr [rax], al ; add cl, ch ; ret 8
0x0000000000433d57 : add byte ptr [rax], al ; add cl, ch ; salc ; ret
0x000000000040564f : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042b2d3 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000401eb5 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403acf : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000042ada1 : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000401653 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000435fea : add byte ptr [rax], al ; and al, 2 ; add byte ptr [rax], al ; jo 0x435fe1 ; cld ; call rax
0x0000000000435a22 : add byte ptr [rax], al ; and byte ptr [rcx], dl ; std ; call rax
0x0000000000436b5e : add byte ptr [rax], al ; and dh, dl ; std ; call rax
0x0000000000425482 : add byte ptr [rax], al ; call 0x401694
0x0000000000436ec6 : add byte ptr [rax], al ; cmp al, -1 ; jmp rbx
0x00000000004368b6 : add byte ptr [rax], al ; cmpsq qword ptr [rsi], qword ptr [rdi] ; std ; jmp rcx
0x00000000004368b2 : add byte ptr [rax], al ; in al, dx ; or al, byte ptr [rax] ; add byte ptr [rax - 0x59], cl ; std ; jmp rcx
0x0000000000401829 : add byte ptr [rax], al ; jmp 0x401669
0x0000000000414dec : add byte ptr [rax], al ; jmp 0x414f93
0x00000000004152fb : add byte ptr [rax], al ; jmp 0x415463
0x0000000000425ac2 : add byte ptr [rax], al ; jmp 0x42a0b6
0x0000000000426740 : add byte ptr [rax], al ; jmp 0x42a2c8
0x0000000000435fee : add byte ptr [rax], al ; jo 0x435fdd ; cld ; call rax
0x0000000000436372 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add eax, 0x2a180000 ; std ; call rbx
0x0000000000436872 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; or al, byte ptr [rax] ; add byte ptr [rax - 0x5a], bl ; std ; call rsp
0x0000000000435a62 : add byte ptr [rax], al ; loopne 0x435aa1 ; std ; call rax
0x0000000000435bea : add byte ptr [rax], al ; loopne 0x435bb6 ; std ; call qword ptr [rax]
0x0000000000435b22 : add byte ptr [rax], al ; mov al, -0x75 ; std ; jmp rax
0x0000000000435a32 : add byte ptr [rax], al ; mov al, 0x15 ; std ; call qword ptr [rax]
0x0000000000409112 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x00000000004053ab : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x00000000004135e3 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004030a8 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000433d42 : add byte ptr [rax], al ; mov qword ptr [rax], rcx ; jmp 0x430029
0x0000000000408d82 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000041d9e9 : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000043612e : add byte ptr [rax], al ; nop ; cld ; call rsp
0x0000000000436fe6 : add byte ptr [rax], al ; or byte ptr [rdx - 1], cl ; call rbx
0x0000000000436876 : add byte ptr [rax], al ; pop rax ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; call rsp
0x0000000000406721 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040d849 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000408b33 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000404097 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000043614e : add byte ptr [rax], al ; push rax ; cld ; call qword ptr [rsi]
0x000000000043421e : add byte ptr [rax], al ; ret
0x0000000000435e6e : add byte ptr [rax], al ; rol al, -4 ; jmp rdx
0x0000000000435bda : add byte ptr [rax], al ; rol dl, -3 ; call rax
0x0000000000436fe2 : add byte ptr [rax], al ; sbb al, 0x12 ; add byte ptr [rax], al ; or byte ptr [rdx - 1], cl ; call rbx
0x0000000000436376 : add byte ptr [rax], al ; sbb byte ptr [rdx], ch ; std ; call rbx
0x0000000000435d52 : add byte ptr [rax], al ; shl byte ptr [rax - 1], 1 ; jmp rax
0x000000000043614a : add byte ptr [rax], al ; test byte ptr [rbx], al ; add byte ptr [rax], al ; push rax ; cld ; call qword ptr [rsi]
0x0000000000436b5a : add byte ptr [rax], al ; xchg eax, esp ; or eax, 0xd6200000 ; std ; call rax
0x0000000000435d12 : add byte ptr [rax], al ; xor byte ptr [rdx - 1], dl ; jmp rax
0x0000000000435a72 : add byte ptr [rax], al ; xor byte ptr [rdx], bh ; std ; call qword ptr [rax]
0x00000000004358f2 : add byte ptr [rax], al ; xor dl, al ; cld ; call rax
0x0000000000436377 : add byte ptr [rax], bl ; sub bh, ch ; call rbx
0x0000000000436957 : add byte ptr [rax], cl ; mov al, -3 ; call rcx
0x0000000000435a73 : add byte ptr [rax], dh ; cmp bh, ch ; call qword ptr [rax]
0x0000000000435b33 : add byte ptr [rax], dh ; mov ebp, dr1 ; jmp qword ptr [rax]
0x00000000004358f3 : add byte ptr [rax], dh ; ret 0xfffc
0x00000000004024b3 : add byte ptr [rax], r8b ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x00000000004214d2 : add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x0000000000405702 : add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x8141
0x0000000000436373 : add byte ptr [rbp + rax + 0x2a180000], ch ; std ; call rbx
0x0000000000436b5b : add byte ptr [rbp + rcx - 0x29e00000], dl ; std ; call rax
0x00000000004214c8 : add byte ptr [rbp - 0x77], al ; ret
0x00000000004056f8 : add byte ptr [rbp - 0x77], al ; ret 0x8141
0x000000000040d84a : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000408b34 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000404098 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000043614b : add byte ptr [rbx + rax - 0xcb00000], al ; cld ; call qword ptr [rsi]
0x0000000000436953 : add byte ptr [rbx + rcx - 0x4ff80000], cl ; std ; call rcx
0x00000000004370cb : add byte ptr [rbx + rdx], al ; add byte ptr [rax], al ; adc cl, -1 ; call qword ptr [rax]
0x0000000000423b55 : add byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x0000000000408662 : add byte ptr [rcx + 0xf], al ; pushfq ; mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x0000000000401e9d : add byte ptr [rcx + 0xf], al ; pushfq ; ret
0x000000000040a2ad : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x844
0x0000000000402ed7 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x00000000004182b6 : add byte ptr [rcx + 0xf], al ; pushfq ; rol dword ptr [rax + rcx - 0x36], -0xa ; ret 0xf01
0x000000000040fd5c : add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x000000000040212f : add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x125
0x000000000041d20f : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x0000000000415161 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x000000000040213d : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000401e92 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x0000000000405bab : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8b44
0x000000000042530c : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xf981
0x0000000000417085 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xfb81
0x000000000040dbbc : add byte ptr [rcx + 0xfe], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004182a7 : add byte ptr [rcx + 0xfe], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xff81
0x000000000040e3f8 : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040a29d : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x0000000000402762 : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x000000000040fd52 : add byte ptr [rcx - 0x77], al ; ret
0x0000000000402125 : add byte ptr [rcx - 0x77], al ; ret 0x8141
0x0000000000401bc8 : add byte ptr [rcx], al ; ret
0x000000000040d7ea : add byte ptr [rdi + rcx - 0x51], al ; ret
0x0000000000435d24 : add byte ptr [rdi - 1], dl ; jmp qword ptr [rax]
0x0000000000404272 : add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000040433e : add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x0000000000402147 : add byte ptr [rdi], cl ; pushfq ; ret
0x0000000000421621 : add byte ptr [rdi], cl ; pushfq ; ret 0x348b
0x00000000004216e3 : add byte ptr [rdi], cl ; pushfq ; ret 0xc8b
0x000000000040e1f8 : add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x0000000000404d34 : add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x00000000004043f4 : add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x00000000004151ce : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret
0x0000000000401c2d : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x125
0x000000000040e982 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000402ea2 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x0000000000411220 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x0000000000406f0b : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x000000000042af92 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042bb3d : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000410953 : add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x0000000000408658 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000404522 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x000000000040a2a3 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x0000000000402768 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x00000000004024b6 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x000000000040328b : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000412ec0 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xfe81
0x00000000004182ad : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xff81
0x0000000000435feb : add byte ptr [rdx + rax], ah ; add byte ptr [rax], al ; jo 0x435fe0 ; cld ; call rax
0x0000000000436873 : add byte ptr [rdx + rcx - 0x59a80000], ch ; std ; call rsp
0x0000000000436fe3 : add byte ptr [rdx + rdx], bl ; add byte ptr [rax], al ; or byte ptr [rdx - 1], cl ; call rbx
0x0000000000402f0e : add byte ptr [rdx - 0x76b7ff9d], -0x14 ; pop rbp ; ret
0x0000000000433d55 : add byte ptr [rdx], al ; add byte ptr [rax], al ; add cl, ch ; salc ; ret
0x00000000004358f0 : add byte ptr [rip - 0x3dd00000], al ; cld ; call rax
0x0000000000435d20 : add byte ptr [rsi], dl ; add byte ptr [rax], al ; add byte ptr [rdi - 1], dl ; jmp qword ptr [rax]
0x0000000000414ded : add cl, ch ; cwde ; add dword ptr [rax], eax ; add cl, ch ; ret 0
0x0000000000427d78 : add cl, ch ; jmp qword ptr [rdi]
0x00000000004152fc : add cl, ch ; pop rax ; add dword ptr [rax], eax ; add al, ch ; cdq ; ret
0x0000000000405fef : add cl, ch ; ret
0x0000000000414df2 : add cl, ch ; ret 0
0x000000000040b813 : add cl, ch ; ret 0x13
0x000000000040a025 : add cl, ch ; ret 0x2a
0x00000000004276e2 : add cl, ch ; ret 0x2d
0x0000000000415a6c : add cl, ch ; ret 0xb
0x00000000004330dc : add cl, ch ; ret 0xf
0x000000000040b110 : add cl, ch ; ret 1
0x00000000004082ab : add cl, ch ; ret 8
0x0000000000433d59 : add cl, ch ; salc ; ret
0x000000000040e3ca : add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x000000000040e46c : add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x00000000004152ff : add dword ptr [rax], eax ; add al, ch ; cdq ; ret
0x00000000004030a6 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000433d40 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rax], rcx ; jmp 0x43002b
0x00000000004165f4 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000404096 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000414df0 : add dword ptr [rax], eax ; add cl, ch ; ret 0
0x0000000000403613 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000404455 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x00000000004041fd : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x000000000041a9c3 : add dword ptr [rdi], ecx ; test byte ptr [rip - 0x17000000], al ; ret
0x000000000041536e : add dword ptr [rdi], ecx ; test dword ptr [rbx], ecx ; add byte ptr [rax], al ; add al, ch ; ret
0x0000000000427d72 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; jmp qword ptr [rdi]
0x0000000000405fe9 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret
0x000000000040b80d : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x000000000040a01f : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x00000000004276dc : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0x2d
0x0000000000415a66 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0xb
0x00000000004330d6 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0xf
0x000000000040b10a : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 1
0x000000000041ece4 : add dword ptr [rdi], ecx ; xchg eax, esi ; ret 0x348b
0x0000000000401bc4 : add eax, 0x23676e ; add ebx, esi ; ret
0x0000000000436375 : add eax, 0x2a180000 ; std ; call rbx
0x00000000004358f1 : add eax, 0xc2300000 ; cld ; call rax
0x0000000000427d75 : add eax, 0xe9000000 ; jmp qword ptr [rdi]
0x0000000000405fec : add eax, 0xe9000000 ; ret
0x000000000040b810 : add eax, 0xe9000000 ; ret 0x13
0x000000000040a022 : add eax, 0xe9000000 ; ret 0x2a
0x00000000004276df : add eax, 0xe9000000 ; ret 0x2d
0x0000000000415a69 : add eax, 0xe9000000 ; ret 0xb
0x00000000004330d9 : add eax, 0xe9000000 ; ret 0xf
0x000000000040b10d : add eax, 0xe9000000 ; ret 1
0x00000000004082a8 : add eax, 0xe9000000 ; ret 8
0x000000000043614d : add eax, dword ptr [rax] ; add byte ptr [rax - 0xd], dl ; cld ; call qword ptr [rsi]
0x00000000004074e7 : add eax, ebp ; ret
0x0000000000401b8b : add eax, edx ; sar rax, 1 ; jne 0x401b9c ; pop rbp ; ret
0x000000000041b1a9 : add eax, esi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x0000000000401bc9 : add ebx, esi ; ret
0x000000000042a30a : add ecx, ebp ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000416fab : add edi, eax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x0000000000401f29 : add esp, 0x10 ; pop rbp ; ret
0x0000000000404093 : add esp, 0x108 ; pop rbx ; pop rbp ; ret
0x000000000040ca6d : add esp, 0x178 ; pop rbx ; pop rbp ; ret
0x000000000042b2d6 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000407d52 : add esp, 0x198 ; pop rbx ; pop rbp ; ret
0x0000000000410d3c : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000401eb8 : add esp, 0x20 ; pop rbp ; ret
0x0000000000416eb7 : add esp, 0x20 ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000418e10 : add esp, 0x2a8 ; pop rbx ; pop rbp ; ret
0x000000000040200d : add esp, 0x30 ; pop rbp ; ret
0x0000000000403618 : add esp, 0x40 ; pop rbp ; ret
0x000000000041087f : add esp, 0x40 ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000414f90 : add esp, 0x490 ; pop rbp ; ret
0x000000000040dadc : add esp, 0x50 ; pop rbp ; ret
0x000000000040de02 : add esp, 0x70 ; pop rbp ; ret
0x000000000040ce8e : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040671d : add esp, 0x80 ; pop rbp ; ret
0x0000000000410b9c : add esp, 0xb0 ; pop rbp ; ret
0x000000000041336f : add esp, 0xf0 ; pop rbp ; ret
0x0000000000401656 : add esp, 8 ; ret
0x0000000000401b8a : add rax, rdx ; sar rax, 1 ; jne 0x401b9d ; pop rbp ; ret
0x000000000041b1a8 : add rax, rsi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x0000000000416faa : add rdi, rax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x0000000000401f28 : add rsp, 0x10 ; pop rbp ; ret
0x0000000000404092 : add rsp, 0x108 ; pop rbx ; pop rbp ; ret
0x000000000040ca6c : add rsp, 0x178 ; pop rbx ; pop rbp ; ret
0x000000000042b2d5 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000407d51 : add rsp, 0x198 ; pop rbx ; pop rbp ; ret
0x0000000000410d3b : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000401eb7 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000416eb6 : add rsp, 0x20 ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000418e0f : add rsp, 0x2a8 ; pop rbx ; pop rbp ; ret
0x000000000040200c : add rsp, 0x30 ; pop rbp ; ret
0x0000000000403617 : add rsp, 0x40 ; pop rbp ; ret
0x000000000041087e : add rsp, 0x40 ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000414f8f : add rsp, 0x490 ; pop rbp ; ret
0x000000000040dadb : add rsp, 0x50 ; pop rbp ; ret
0x000000000040de01 : add rsp, 0x70 ; pop rbp ; ret
0x000000000040ce8d : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040671c : add rsp, 0x80 ; pop rbp ; ret
0x0000000000410b9b : add rsp, 0xb0 ; pop rbp ; ret
0x000000000041336e : add rsp, 0xf0 ; pop rbp ; ret
0x0000000000401655 : add rsp, 8 ; ret
0x0000000000427415 : and al, 0xffffffffffffffb0 ; add al, ch ; ret
0x0000000000404454 : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004041fc : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000435fec : and al, 2 ; add byte ptr [rax], al ; jo 0x435fdf ; cld ; call rax
0x000000000041da8a : and byte ptr [r15], cl ; xchg eax, esp ; ret 0x348b
0x0000000000416eb9 : and byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000435a24 : and byte ptr [rcx], dl ; std ; call rax
0x000000000041da8b : and byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x0000000000436b60 : and dh, dl ; std ; call rax
0x0000000000406d7d : and dword ptr [rbx], 0x48 ; add esp, 0x40 ; pop rbp ; ret
0x00000000004054b1 : and dword ptr [rbx], 0x5d ; ret
0x0000000000405522 : and eax, 0x434ae5 ; call 0x4017b7
0x000000000040e4f7 : and eax, 0x48ffffee ; add esp, 0x20 ; pop rbp ; ret
0x0000000000402f0d : and eax, 0x638280 ; mov rsp, rbp ; pop rbp ; ret
0x00000000004054af : and eax, 0x638390 ; pop rbp ; ret
0x00000000004054d3 : and eax, 0x638398 ; pop rbp ; ret
0x0000000000401bc6 : and eax, dword ptr [eax] ; add ebx, esi ; ret
0x0000000000401bc7 : and eax, dword ptr [rax] ; add ebx, esi ; ret
0x0000000000425484 : call 0x401692
0x00000000004153f6 : call 0x4016e2
0x0000000000405527 : call 0x4017b2
0x000000000041f436 : call 0x42b722
0x0000000000416929 : call 0xd03ea79
0x0000000000416eec : call 0xd03f03c
0x000000000040cd09 : call 0xffffffffe9035659
0x000000000040cd08 : call 0xffffffffe903565a
0x00000000004341f9 : call qword ptr [r12 + rbx*8]
0x0000000000435a37 : call qword ptr [rax]
0x0000000000436643 : call qword ptr [rdi]
0x0000000000436153 : call qword ptr [rsi]
0x00000000004341fa : call qword ptr [rsp + rbx*8]
0x0000000000401bed : call rax
0x000000000043637b : call rbx
0x000000000043695b : call rcx
0x0000000000436133 : call rsp
0x0000000000415303 : cdq ; ret
0x00000000004030a5 : clc ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004156a4 : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406e7e : clc ; add rsp, 0x30 ; pop rbp ; ret
0x000000000042aaf3 : clc ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000414f8e : clc ; add rsp, 0x490 ; pop rbp ; ret
0x0000000000401b8f : clc ; jne 0x401b98 ; pop rbp ; ret
0x00000000004030ac : clc ; pop rbp ; ret
0x0000000000405758 : clc ; pop rbx ; pop rbp ; ret
0x0000000000401f27 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004032aa : cld ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041336d : cld ; add rsp, 0xf0 ; pop rbp ; ret
0x000000000043623a : cld ; call qword ptr [rax]
0x0000000000436152 : cld ; call qword ptr [rsi]
0x00000000004358f6 : cld ; call rax
0x0000000000436132 : cld ; call rsp
0x00000000004358ee : cld ; inc dword ptr [rax] ; add eax, 0xc2300000 ; cld ; call rax
0x0000000000435e72 : cld ; jmp rdx
0x0000000000435e12 : cld ; jmp rsi
0x0000000000405486 : cld ; mov dword ptr [rbp - 0xc], eax ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x00000000004135e7 : cld ; pop rbp ; ret
0x0000000000405096 : cli ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000436ec9 : cmp al, -1 ; jmp rbx
0x00000000004054ae : cmp al, 0x25 ; nop ; and dword ptr [rbx], 0x5d ; ret
0x000000000040ff3a : cmp al, 0x25 ; ret
0x0000000000413a49 : cmp al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004292b7 : cmp al, ch ; ret
0x0000000000435a75 : cmp bh, ch ; call qword ptr [rax]
0x000000000040451e : cmp byte ptr [rax], ah ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x000000000040426e : cmp byte ptr [rax], dh ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x00000000004358ec : cmp byte ptr [rbp + 0x500fffc], 0 ; add byte ptr [rax], dh ; ret 0xfffc
0x000000000040495e : cmp byte ptr [rcx], ah ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x0000000000402e9e : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x000000000041d20b : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x0000000000405ba7 : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8b44
0x000000000040e97e : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x000000000041121c : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x000000000042fa20 : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x000000000040d19d : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401b4d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401b60 ; pop rbp ; ret
0x0000000000426744 : cmp eax, dword ptr [rax] ; add cl, ch ; ret
0x0000000000436879 : cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; call rsp
0x00000000004368b9 : cmpsd dword ptr [rsi], dword ptr [rdi] ; std ; jmp rcx
0x00000000004368b8 : cmpsq qword ptr [rsi], qword ptr [rdi] ; std ; jmp rcx
0x0000000000407d54 : cwde ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000414def : cwde ; add dword ptr [rax], eax ; add cl, ch ; ret 0
0x000000000042b6f3 : cwde ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004054d4 : cwde ; and dword ptr [rbx], 0x5d ; ret
0x00000000004153f1 : cwde ; mov qword ptr [rbp - 0x70], rsi ; call 0x4016e7
0x000000000042bdba : cwde ; mov rcx, qword ptr [rax*8 + 0x435700] ; jmp rcx
0x000000000040cf52 : dec byte ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x000000000040942f : dec byte ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret
0x0000000000430691 : dec dword ptr [rax + 0x39] ; add dword ptr [rdi], ecx ; xchg eax, esi ; ret 0x348b
0x000000000041c740 : dec dword ptr [rax + 0x3b] ; ror byte ptr [r15], -0x69 ; ret 0x348b
0x0000000000419e15 : dec dword ptr [rax + 0x3b] ; ror byte ptr [r15], 1 ; xchg eax, esp ; ret 0x348b
0x00000000004105ea : dec dword ptr [rax - 0x73] ; cmp al, 0x25 ; ret
0x00000000004292b4 : dec dword ptr [rax - 0x75] ; cmp al, ch ; ret
0x0000000000412d8b : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; xor byte ptr [rbx + rax*2], dl ; jmp rcx
0x000000000040eccb : dec dword ptr [rax - 0x77] ; ret 0x3ce8
0x000000000040f8a3 : dec dword ptr [rax - 0x77] ; ret 0x64e8
0x0000000000418738 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000040ff66 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040fcfa : dec dword ptr [rax - 0x77] ; ret 0xde8
0x0000000000416364 : dec dword ptr [rax - 0x7f] ; ret 1
0x0000000000427411 : dec dword ptr [rcx + rcx*4 + 0x1c] ; and al, 0xffffffffffffffb0 ; add al, ch ; ret
0x000000000041772b : dec dword ptr [rdi] ; test dword ptr [rip - 0x17000000], eax ; ret
0x00000000004082a5 : dec dword ptr [rdi] ; test dword ptr [rip - 0x17000000], eax ; ret 8
0x000000000041faf6 : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0x348b
0x0000000000423fd3 : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0x8b44
0x000000000041e91c : dec dword ptr [rdi] ; xchg eax, esp ; ret 0x348b
0x00000000004025c8 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0x48b
0x0000000000402ed3 : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x0000000000402143 : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret
0x000000000041e442 : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x000000000040cdbb : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000040e88a : enter -0x7cb8, -0x3c ; pop rbp ; ret
0x0000000000403287 : fadd qword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000406513 : fiadd dword ptr [rcx - 0xa] ; ret 0x4001
0x000000000040dfef : fiadd dword ptr [rcx - 0xa] ; ret 0x4801
0x0000000000402604 : fiadd dword ptr [rcx - 0xa] ; ret 0x8801
0x0000000000401ea4 : fiadd dword ptr [rcx - 0xa] ; ret 0x8901
0x000000000040588d : fiadd dword ptr [rcx - 0xa] ; ret 0xf01
0x000000000040214d : fild dword ptr [rcx - 0xa] ; ret
0x000000000040b428 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000421a28 : fmul dword ptr [rdi] ; wait ; ror dword ptr [rdi], -0x6c ; ret 0xca20
0x000000000042af9f : fmul qword ptr [r8 - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000042afa0 : fmul qword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x00000000004341fc : fmul qword ptr [rax - 0x7d] ; ret
0x000000000042af9d : fmul qword ptr [rbx - 0x76b723bb] ; in al, dx ; pop rbp ; ret
0x0000000000410dc3 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405489 : hlt ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000401b60 : hlt ; pop rbp ; mov edi, 0x6382e0 ; jmp rax
0x00000000004053af : hlt ; pop rbp ; ret
0x00000000004105e8 : idiv edi ; dec dword ptr [rax - 0x73] ; cmp al, 0x25 ; ret
0x000000000041366d : in al, dx ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004368b4 : in al, dx ; or al, byte ptr [rax] ; add byte ptr [rax - 0x59], cl ; std ; jmp rcx
0x0000000000402f14 : in al, dx ; pop rbp ; ret
0x00000000004076e1 : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000405877 : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x000000000040dbbe : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004182a9 : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xff81
0x000000000040d2a3 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000405dc7 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x000000000040e3fa : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040a29f : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x0000000000402764 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x00000000004358ef : inc dword ptr [rax] ; add eax, 0xc2300000 ; cld ; call rax
0x0000000000404338 : inc dword ptr [rcx + 0x41f9] ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x0000000000404d2e : inc dword ptr [rcx + 0x5af9] ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x00000000004043ee : inc dword ptr [rcx + 0x5af9] ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x0000000000414641 : inc dword ptr [rcx - 0x46343] ; jmp qword ptr [rdx]
0x0000000000435b1f : inc eax ; or eax, 0x8bb00000 ; std ; jmp rax
0x0000000000410b58 : int 0x80
0x0000000000401b53 : ja 0x401b5a ; pop rbp ; ret
0x0000000000434789 : jb 0x4347f2 ; jns 0x434794 ; push rax ; ret
0x0000000000434788 : jb 0x4347f3 ; jns 0x434795 ; push rax ; ret
0x0000000000401b5f : je 0x401b5d ; pop rbp ; mov edi, 0x6382e0 ; jmp rax
0x00000000004147a6 : jge 0x41476a ; call rax
0x0000000000414c3e : jge 0x414c09 ; mov rsi, qword ptr [rbp - 0x460] ; call rax
0x0000000000414d88 : jge 0x414d4c ; call rax
0x0000000000414e06 : jge 0x414dc2 ; call rax
0x0000000000414f74 : jge 0x414f30 ; call rax
0x0000000000414fe6 : jge 0x414faa ; call rax
0x000000000041507d : jge 0x415048 ; mov rsi, qword ptr [rbp - 0x460] ; call rax
0x000000000042af9c : jge 0x42af83 ; mov eax, dword ptr [rbp - 0x24] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040182b : jmp 0x401667
0x00000000004105e6 : jmp 0x40fdab
0x000000000040ff33 : jmp 0x4105f4
0x0000000000414dee : jmp 0x414f91
0x00000000004152fd : jmp 0x415461
0x000000000041a26c : jmp 0x4191a2
0x000000000042a2b6 : jmp 0x42651e
0x000000000042a2bb : jmp 0x4265a9
0x000000000042a596 : jmp 0x428260
0x0000000000425ac4 : jmp 0x42a0b4
0x0000000000426742 : jmp 0x42a2c6
0x0000000000433d2e : jmp 0x42ff68
0x0000000000433d47 : jmp 0x430024
0x0000000000435b37 : jmp qword ptr [rax]
0x0000000000436d03 : jmp qword ptr [rcx]
0x0000000000427d7a : jmp qword ptr [rdi]
0x0000000000414647 : jmp qword ptr [rdx]
0x0000000000401b67 : jmp rax
0x0000000000436ecb : jmp rbx
0x00000000004097de : jmp rcx
0x0000000000401ba7 : jmp rdx
0x0000000000435e13 : jmp rsi
0x0000000000401b90 : jne 0x401b97 ; pop rbp ; ret
0x00000000004153f4 : jne 0x41538a ; call 0x4016e4
0x000000000043478c : jns 0x434791 ; push rax ; ret
0x000000000043478b : jns 0x434792 ; push rax ; ret
0x000000000040de04 : jo 0x40de65 ; ret
0x000000000041b114 : jo 0x41b11f ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041d107 : jo 0x41d168 ; ret
0x000000000042b6f7 : jo 0x42b758 ; ret
0x0000000000435ff0 : jo 0x435fdb ; cld ; call rax
0x000000000040ca6f : js 0x40ca78 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040ce90 : js 0x40cef0 ; pop rbp ; ret
0x0000000000436641 : js 0x436642 ; call qword ptr [rdi]
0x0000000000405520 : lea edi, dword ptr [0x434ae5] ; call 0x4017b9
0x000000000040dca5 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004153a0 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405756 : lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040dca4 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000405755 : lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000435be8 : lock adc byte ptr [rax], al ; add al, ah ; ret
0x0000000000436374 : lodsb al, byte ptr [rsi] ; add eax, 0x2a180000 ; std ; call rbx
0x0000000000436874 : lodsb al, byte ptr [rsi] ; or al, byte ptr [rax] ; add byte ptr [rax - 0x5a], bl ; std ; call rsp
0x0000000000433d2a : lodsd eax, dword ptr [rsi] ; sar edi, -1 ; jmp 0x42ff6c
0x0000000000405eaa : loopne 0x405f10 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004069cb : loopne 0x406a1a ; mov esp, ebp ; pop rbp ; ret
0x00000000004069ca : loopne 0x406a1b ; mov esp, ebp ; pop rbp ; ret
0x000000000040d2cf : loopne 0x40d320 ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040d2ce : loopne 0x40d321 ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000411a25 : loopne 0x411a75 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000411a24 : loopne 0x411a76 ; add esp, 0x20 ; pop rbp ; ret
0x000000000041223a : loopne 0x4122a0 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004138e9 : loopne 0x41394f ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042da50 : loopne 0x42dab6 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000435a64 : loopne 0x435a9f ; std ; call rax
0x0000000000435bec : loopne 0x435bb4 ; std ; call qword ptr [rax]
0x0000000000435b24 : mov al, -0x75 ; std ; jmp rax
0x0000000000436959 : mov al, -3 ; call rcx
0x0000000000410b9e : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000435bd8 : mov al, 0x10 ; add byte ptr [rax], al ; rol dl, -3 ; call rax
0x0000000000435a34 : mov al, 0x15 ; std ; call qword ptr [rax]
0x0000000000435a60 : mov al, 0xa ; add byte ptr [rax], al ; loopne 0x435aa3 ; std ; call rax
0x0000000000435a20 : mov al, 9 ; add byte ptr [rax], al ; and byte ptr [rcx], dl ; std ; call rax
0x00000000004041f9 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000405094 : mov al, byte ptr [rbp - 6] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000435b9d : mov bh, -3 ; call rax
0x0000000000414175 : mov bh, 2 ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004054d1 : mov byte ptr [0x638398], al ; pop rbp ; ret
0x0000000000408666 : mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x0000000000427d71 : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; jmp qword ptr [rdi]
0x0000000000405fe8 : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret
0x000000000040b80c : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x000000000040a01e : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x000000000040cff6 : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 1
0x0000000000401bc3 : mov byte ptr [rip + 0x23676e], 1 ; ret
0x0000000000403615 : mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041a263 : mov dh, -0x40 ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000404457 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x00000000004041ff : mov dh, -0x40 ; pop rbp ; ret
0x00000000004054ad : mov dword ptr [0x638390], edi ; pop rbp ; ret
0x0000000000433d45 : mov dword ptr [rax], ecx ; jmp 0x430026
0x0000000000408e5a : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000408fa8 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000042b9dc : mov dword ptr [rbp - 0x18], eax ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000402009 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004153ef : mov dword ptr [rbp - 0x68], edx ; mov qword ptr [rbp - 0x70], rsi ; call 0x4016e9
0x00000000004153f3 : mov dword ptr [rbp - 0x70], esi ; call 0x4016e5
0x0000000000410dc1 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405487 : mov dword ptr [rbp - 0xc], eax ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000401f25 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041b1ac : mov dword ptr [rdi + 0x10], eax ; pop rbp ; ret
0x0000000000416fae : mov dword ptr [rsi], edi ; pop rbp ; ret
0x000000000040ce8c : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000411465 : mov eax, 0xf0658d48 ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004147a1 : mov eax, dword ptr [rax + 0x10] ; mov rdi, qword ptr [rbp - 0x40] ; call rax
0x0000000000414f6f : mov eax, dword ptr [rax + 0x18] ; mov rdi, qword ptr [rbp - 0x48] ; call rax
0x0000000000405753 : mov eax, dword ptr [rax] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x00000000004149e1 : mov eax, dword ptr [rax] ; mov rdi, qword ptr [rbp - 0x460] ; call rax
0x0000000000414e02 : mov eax, dword ptr [rax] ; mov rdi, qword ptr [rbp - 0x48] ; call rax
0x000000000041d831 : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000408d88 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000410f91 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004062c4 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041d82e : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000408d85 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040da3a : mov eax, dword ptr [rbp - 0x10] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004061b3 : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000041366b : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000409114 : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000410e9f : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405a92 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000408e54 : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040e004 : mov eax, dword ptr [rbp - 0x18] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042b9e0 : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000411a23 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d2cd : mov eax, dword ptr [rbp - 0x20] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x00000000004069c9 : mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042af9e : mov eax, dword ptr [rbp - 0x24] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004063ad : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000408faa : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000414412 : mov eax, dword ptr [rbp - 0x30] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040e888 : mov eax, dword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040ce8a : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000041d101 : mov eax, dword ptr [rbp - 0x60] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000042b6f1 : mov eax, dword ptr [rbp - 0x68] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000041f430 : mov eax, dword ptr [rbp - 0x70] ; mov rdi, qword ptr [rax] ; call 0x42b728
0x00000000004053ad : mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x00000000004032a8 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004135e5 : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004156a2 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406e7c : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000042aaf1 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004030aa : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004149e5 : mov ebp, 0xfffffba0 ; call rax
0x0000000000435b35 : mov ebp, dr1 ; jmp qword ptr [rax]
0x0000000000401beb : mov ebp, esp ; call rax
0x0000000000401b51 : mov ebp, esp ; ja 0x401b5c ; pop rbp ; ret
0x00000000004097d7 : mov ecx, dword ptr [rax*8 + 0x434b60] ; jmp rcx
0x000000000040a2f1 : mov ecx, dword ptr [rax*8 + 0x434ba8] ; jmp rcx
0x0000000000410022 : mov ecx, dword ptr [rax*8 + 0x435060] ; jmp rcx
0x0000000000412e0d : mov ecx, dword ptr [rax*8 + 0x4353d0] ; jmp rcx
0x0000000000412d8d : mov ecx, dword ptr [rax*8 + 0x435430] ; jmp rcx
0x0000000000424c5f : mov ecx, dword ptr [rax*8 + 0x435610] ; jmp rcx
0x000000000041fbbd : mov ecx, dword ptr [rax*8 + 0x435698] ; jmp rcx
0x000000000042bdbc : mov ecx, dword ptr [rax*8 + 0x435700] ; jmp rcx
0x0000000000431d5c : mov ecx, dword ptr [rax*8 + 0x4357d8] ; jmp rcx
0x0000000000408e57 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004145d5 : mov ecx, dword ptr [rbp - 0x48] ; call rax
0x0000000000401be5 : mov edi, 0x637e20 ; mov rbp, rsp ; call rax
0x0000000000401b62 : mov edi, 0x6382e0 ; jmp rax
0x0000000000401ba2 : mov edi, 0x6382e0 ; jmp rdx
0x000000000042a597 : mov edi, 0xe9ffffdc ; ret
0x000000000041f434 : mov edi, dword ptr [rax] ; call 0x42b724
0x00000000004147a5 : mov edi, dword ptr [rbp - 0x40] ; call rax
0x00000000004149e4 : mov edi, dword ptr [rbp - 0x460] ; call rax
0x0000000000414e05 : mov edi, dword ptr [rbp - 0x48] ; call rax
0x0000000000416fa8 : mov edi, dword ptr [rsi] ; add rdi, rax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x0000000000435b25 : mov edi, ebp ; jmp rax
0x00000000004341f7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x00000000004341f6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x00000000004145d1 : mov edx, dword ptr [rbp - 0x40] ; mov rcx, qword ptr [rbp - 0x48] ; call rax
0x0000000000414c41 : mov esi, dword ptr [rbp - 0x460] ; call rax
0x0000000000401ba0 : mov esi, eax ; mov edi, 0x6382e0 ; jmp rdx
0x0000000000402f13 : mov esp, ebp ; pop rbp ; ret
0x00000000004054ac : mov qword ptr [0x638390], rdi ; pop rbp ; ret
0x0000000000433d44 : mov qword ptr [rax], rcx ; jmp 0x430027
0x000000000042b9db : mov qword ptr [rbp - 0x18], rax ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004153f2 : mov qword ptr [rbp - 0x70], rsi ; call 0x4016e6
0x000000000041b1ab : mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x0000000000416fad : mov qword ptr [rsi], rdi ; pop rbp ; ret
0x000000000040ce8b : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x00000000004147a0 : mov rax, qword ptr [rax + 0x10] ; mov rdi, qword ptr [rbp - 0x40] ; call rax
0x0000000000414f6e : mov rax, qword ptr [rax + 0x18] ; mov rdi, qword ptr [rbp - 0x48] ; call rax
0x0000000000405752 : mov rax, qword ptr [rax] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000414e01 : mov rax, qword ptr [rax] ; mov rdi, qword ptr [rbp - 0x48] ; call rax
0x0000000000410f90 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004062c3 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000408d84 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040da39 : mov rax, qword ptr [rbp - 0x10] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004061b2 : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000410e9e : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405a91 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040e003 : mov rax, qword ptr [rbp - 0x18] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042b9df : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000411a22 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004069c8 : mov rax, qword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004063ac : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040e887 : mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041d100 : mov rax, qword ptr [rbp - 0x60] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000042b6f0 : mov rax, qword ptr [rbp - 0x68] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000041f42f : mov rax, qword ptr [rbp - 0x70] ; mov rdi, qword ptr [rax] ; call 0x42b729
0x00000000004156a1 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406e7b : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000042aaf0 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000401bea : mov rbp, rsp ; call rax
0x0000000000401b50 : mov rbp, rsp ; ja 0x401b5d ; pop rbp ; ret
0x00000000004097d6 : mov rcx, qword ptr [rax*8 + 0x434b60] ; jmp rcx
0x000000000040a2f0 : mov rcx, qword ptr [rax*8 + 0x434ba8] ; jmp rcx
0x0000000000410021 : mov rcx, qword ptr [rax*8 + 0x435060] ; jmp rcx
0x0000000000412e0c : mov rcx, qword ptr [rax*8 + 0x4353d0] ; jmp rcx
0x0000000000412d8c : mov rcx, qword ptr [rax*8 + 0x435430] ; jmp rcx
0x0000000000424c5e : mov rcx, qword ptr [rax*8 + 0x435610] ; jmp rcx
0x000000000041fbbc : mov rcx, qword ptr [rax*8 + 0x435698] ; jmp rcx
0x000000000042bdbb : mov rcx, qword ptr [rax*8 + 0x435700] ; jmp rcx
0x0000000000431d5b : mov rcx, qword ptr [rax*8 + 0x4357d8] ; jmp rcx
0x00000000004145d4 : mov rcx, qword ptr [rbp - 0x48] ; call rax
0x000000000041f433 : mov rdi, qword ptr [rax] ; call 0x42b725
0x00000000004147a4 : mov rdi, qword ptr [rbp - 0x40] ; call rax
0x00000000004149e3 : mov rdi, qword ptr [rbp - 0x460] ; call rax
0x0000000000414e04 : mov rdi, qword ptr [rbp - 0x48] ; call rax
0x00000000004145d0 : mov rdx, qword ptr [rbp - 0x40] ; mov rcx, qword ptr [rbp - 0x48] ; call rax
0x0000000000414c40 : mov rsi, qword ptr [rbp - 0x460] ; call rax
0x0000000000401b9f : mov rsi, rax ; mov edi, 0x6382e0 ; jmp rdx
0x0000000000402f12 : mov rsp, rbp ; pop rbp ; ret
0x000000000041496f : movabs al, byte ptr [0x8148ca8948fffffb] ; ret 1
0x0000000000435bd4 : movabs al, byte ptr [0xc0000010b0fffdc1] ; ret 0xfffd
0x000000000041a279 : movabs al, byte ptr [0xe9b8458948fffffe] ; ret 0xfff0
0x000000000042a30c : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x000000000042a97e : movsx eax, cl ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403614 : movzx eax, al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041a262 : movzx eax, al ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000404456 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004041fe : movzx eax, al ; pop rbp ; ret
0x00000000004054b0 : nop ; and dword ptr [rbx], 0x5d ; ret
0x00000000004153f5 : nop ; call 0x4016e3
0x0000000000436130 : nop ; cld ; call rsp
0x000000000041f432 : nop ; mov rdi, qword ptr [rax] ; call 0x42b726
0x0000000000434218 : nop dword ptr [rax + rax] ; ret
0x0000000000412d8e : or al, 0xffffffffffffffc5 ; xor byte ptr [rbx + rax*2], dl ; jmp rcx
0x0000000000435a61 : or al, byte ptr [rax] ; add al, ah ; std ; call rax
0x00000000004368b5 : or al, byte ptr [rax] ; add byte ptr [rax - 0x59], cl ; std ; jmp rcx
0x0000000000436875 : or al, byte ptr [rax] ; add byte ptr [rax - 0x5a], bl ; std ; call rsp
0x0000000000435a71 : or al, byte ptr [rax] ; add byte ptr [rax], dh ; cmp bh, ch ; call qword ptr [rax]
0x000000000040d059 : or byte ptr [r15], cl ; xchg eax, ebp ; ret 0x348b
0x000000000040b423 : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000042f96c : or byte ptr [r8 - 0x75], cl ; adc byte ptr [rax - 0x7f], cl ; ret 0x10
0x00000000004335ab : or byte ptr [r8 - 0x75], cl ; adc byte ptr [rax - 0x7f], cl ; ret 0x20
0x000000000040b424 : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000042f96d : or byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7f], cl ; ret 0x10
0x00000000004335ac : or byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7f], cl ; ret 0x20
0x000000000042cc08 : or byte ptr [rax - 0x75], cl ; push rcx ; or byte ptr [rax - 0x7d], cl ; ret 0x480f
0x000000000042cc0c : or byte ptr [rax - 0x7d], cl ; ret 0x480f
0x000000000043663d : or byte ptr [rax], al ; add al, dh ; js 0x436646 ; call qword ptr [rdi]
0x0000000000402e9c : or byte ptr [rcx + 0x138], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x000000000040451c : or byte ptr [rcx + 0x2038], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x000000000040495c : or byte ptr [rcx + 0x2138], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000041094d : or byte ptr [rcx + 0x28f9], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x000000000040426c : or byte ptr [rcx + 0x3038], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x00000000004024b0 : or byte ptr [rcx + 0x4cf9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x000000000040485c : or byte ptr [rcx + 0x6138], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x0000000000406f05 : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x000000000042bb37 : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000418614 : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x0000000000404095 : or byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040d05a : or byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x0000000000436fe8 : or byte ptr [rdx - 1], cl ; call rbx
0x000000000040e3cd : or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x000000000040e46f : or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x0000000000433d46 : or cl, ch ; salc ; ret 0xffff
0x0000000000435a21 : or dword ptr [rax], eax ; add byte ptr [rax], ah ; adc ebp, edi ; call rax
0x00000000004116ef : or eax, 0x48fffff9 ; add esp, 0x30 ; pop rbp ; ret
0x0000000000435b21 : or eax, 0x8bb00000 ; std ; jmp rax
0x0000000000436b5d : or eax, 0xd6200000 ; std ; call rax
0x00000000004092dd : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000436955 : or eax, dword ptr [rax] ; add byte ptr [rax], cl ; mov al, -3 ; call rcx
0x0000000000435ff1 : out -4, al ; call rax
0x0000000000401bc5 : outsb dx, byte ptr [rsi] ; and eax, dword ptr [eax] ; add ebx, esi ; ret
0x0000000000409614 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000043420c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405eac : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000409616 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000043420e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405eae : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000434210 : pop r14 ; pop r15 ; ret
0x0000000000408b36 : pop r14 ; pop rbp ; ret
0x0000000000405eb0 : pop r15 ; pop rbp ; ret
0x0000000000434212 : pop r15 ; ret
0x000000000042a5fd : pop rax ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; xor cl, ch ; jmp rax
0x00000000004152fe : pop rax ; add dword ptr [rax], eax ; add al, ch ; cdq ; ret
0x0000000000436878 : pop rax ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; call rsp
0x0000000000401bc2 : pop rbp ; mov byte ptr [rip + 0x23676e], 1 ; ret
0x0000000000401b61 : pop rbp ; mov edi, 0x6382e0 ; jmp rax
0x0000000000401b9e : pop rbp ; mov rsi, rax ; mov edi, 0x6382e0 ; jmp rdx
0x000000000043420b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000409617 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000043420f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401b55 : pop rbp ; ret
0x0000000000405eab : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040d84b : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000408b35 : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000404099 : pop rbx ; pop rbp ; ret
0x0000000000405eb1 : pop rdi ; pop rbp ; ret
0x0000000000434213 : pop rdi ; ret
0x0000000000404d31 : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x00000000004043f1 : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x0000000000405eaf : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000434211 : pop rsi ; pop r15 ; ret
0x0000000000408b37 : pop rsi ; pop rbp ; ret
0x0000000000409615 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000043420d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405ead : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000404274 : popfq ; ret 0x348b
0x0000000000404340 : popfq ; ret 0xc8b
0x0000000000435a1f : push qword ptr [rax + 0x20000009] ; adc ebp, edi ; call rax
0x0000000000435b97 : push qword ptr [rax + 0x2000000f] ; mov bh, -3 ; call rax
0x0000000000435a5f : push qword ptr [rax - 0x1ffffff6] ; std ; call rax
0x0000000000435bd7 : push qword ptr [rax - 0x3ffffff0] ; ret 0xfffd
0x0000000000435be7 : push rax ; adc byte ptr [rax], al ; add al, ah ; ret
0x00000000004165f3 : push rax ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000436150 : push rax ; cld ; call qword ptr [rsi]
0x0000000000435a6f : push rax ; or al, byte ptr [rax] ; add byte ptr [rax], dh ; cmp bh, ch ; call qword ptr [rax]
0x000000000040dade : push rax ; pop rbp ; ret
0x000000000043478e : push rax ; ret
0x0000000000416928 : push rbp ; call 0xd03ea7a
0x0000000000416eeb : push rbp ; call 0xd03f03d
0x00000000004153f0 : push rbp ; cwde ; mov qword ptr [rbp - 0x70], rsi ; call 0x4016e8
0x000000000040b427 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000401be4 : push rbp ; mov edi, 0x637e20 ; mov rbp, rsp ; call rax
0x000000000040cdbe : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000042cc0b : push rcx ; or byte ptr [rax - 0x7d], cl ; ret 0x480f
0x0000000000408665 : pushfq ; mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x0000000000401ea0 : pushfq ; ret
0x0000000000421623 : pushfq ; ret 0x348b
0x000000000040a2b0 : pushfq ; ret 0x844
0x0000000000402eda : pushfq ; ret 0x845
0x00000000004216e5 : pushfq ; ret 0xc8b
0x000000000040e1fa : pushfq ; ret 0xd108
0x00000000004182b9 : pushfq ; rol dword ptr [rax + rcx - 0x36], -0xa ; ret 0xf01
0x0000000000435d10 : rcl byte ptr [rip + 0x52300000], -1 ; jmp rax
0x0000000000400293 : ret
0x0000000000414df4 : ret 0
0x000000000041b3a0 : ret 0x10
0x0000000000401c30 : ret 0x125
0x000000000040b815 : ret 0x13
0x00000000004319c2 : ret 0x1689
0x000000000042da30 : ret 0x20
0x0000000000401a32 : ret 0x2367
0x0000000000401832 : ret 0x2368
0x000000000040a027 : ret 0x2a
0x00000000004276e4 : ret 0x2d
0x000000000041bfca : ret 0x30e8
0x0000000000402ea5 : ret 0x348b
0x000000000040ecce : ret 0x3ce8
0x0000000000406516 : ret 0x4001
0x0000000000435719 : ret 0x42
0x000000000040dff2 : ret 0x4801
0x000000000042cc0f : ret 0x480f
0x00000000004025cb : ret 0x48b
0x0000000000413812 : ret 0x48e0
0x0000000000405b5f : ret 0x48f0
0x00000000004197c4 : ret 0x4a3b
0x000000000040b440 : ret 0x4ae8
0x000000000040e147 : ret 0x4cc0
0x00000000004093ca : ret 0x4cf0
0x000000000042272d : ret 0x50
0x000000000041c6a7 : ret 0x53e8
0x0000000000404d37 : ret 0x5588
0x000000000040f8a6 : ret 0x64e8
0x000000000040e3d0 : ret 0x7ae8
0x0000000000415165 : ret 0x8041
0x0000000000401e96 : ret 0x8141
0x000000000040a2b1 : ret 0x844
0x0000000000402edb : ret 0x845
0x0000000000402607 : ret 0x8801
0x0000000000401ea7 : ret 0x8901
0x000000000040656a : ret 0x8948
0x000000000040b79c : ret 0x89a5
0x0000000000405baf : ret 0x8b44
0x000000000040b42b : ret 0x8b48
0x00000000004214aa : ret 0x8b4c
0x0000000000423e72 : ret 0x98e8
0x000000000041abe8 : ret 0xa2e8
0x000000000040276b : ret 0xa3d
0x000000000041b74e : ret 0xace8
0x0000000000415a6e : ret 0xb
0x000000000040252a : ret 0xb0
0x00000000004296fd : ret 0xbde8
0x000000000041692c : ret 0xc
0x0000000000401b85 : ret 0xc148
0x0000000000412ed0 : ret 0xc2f6
0x00000000004024b9 : ret 0xc8b
0x0000000000421a2e : ret 0xca20
0x000000000040e1fb : ret 0xd108
0x000000000040328e : ret 0xd284
0x000000000040e472 : ret 0xd8e8
0x000000000040fcfd : ret 0xde8
0x000000000042bb40 : ret 0xe280
0x000000000041bd15 : ret 0xe5e8
0x000000000041d384 : ret 0xe6e8
0x0000000000401c27 : ret 0xea81
0x000000000041bf0e : ret 0xece8
0x000000000040cd0c : ret 0xee8
0x00000000004330de : ret 0xf
0x0000000000402779 : ret 0xf01
0x0000000000425310 : ret 0xf981
0x0000000000417089 : ret 0xfb81
0x0000000000425aca : ret 0xfdbb
0x0000000000423dfb : ret 0xfe8
0x0000000000412ec3 : ret 0xfe81
0x00000000004182b0 : ret 0xff81
0x000000000041a272 : ret 0xffef
0x000000000041a282 : ret 0xfff0
0x00000000004358f5 : ret 0xfffc
0x0000000000425486 : ret 0xfffd
0x00000000004153f8 : ret 0xfffe
0x0000000000405529 : ret 0xffff
0x0000000000405d90 : ret 1
0x0000000000427fe0 : ret 2
0x000000000042ca2c : ret 4
0x00000000004082ad : ret 8
0x0000000000435e70 : rol al, -4 ; jmp rdx
0x00000000004358f8 : rol byte ptr [rax + rax], 1 ; add byte ptr [rax], ah ; ret
0x0000000000408b31 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000435bdc : rol dl, -3 ; call rax
0x00000000004182ba : rol dword ptr [rax + rcx - 0x36], -0xa ; ret 0xf01
0x000000000041c743 : ror byte ptr [r15], -0x69 ; ret 0x348b
0x0000000000419e18 : ror byte ptr [r15], 1 ; xchg eax, esp ; ret 0x348b
0x0000000000414dff : ror byte ptr [r8 - 0x75], 1 ; add byte ptr [rax - 0x75], cl ; jge 0x414dc9 ; call rax
0x0000000000410b53 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000401b8c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401b9b ; pop rbp ; ret
0x000000000041a264 : ror byte ptr [rax - 0x73], 0x65 ; clc ; pop rbx ; pop rbp ; ret
0x000000000041479f : ror byte ptr [rax - 0x75], 1 ; adc byte ptr [rax - 0x75], cl ; jge 0x414771 ; call rax
0x0000000000414d81 : ror byte ptr [rax - 0x75], 1 ; adc byte ptr [rax - 0x75], cl ; jge 0x414d53 ; call rax
0x0000000000414fdf : ror byte ptr [rax - 0x75], 1 ; adc byte ptr [rax - 0x75], cl ; jge 0x414fb1 ; call rax
0x0000000000414e00 : ror byte ptr [rax - 0x75], 1 ; add byte ptr [rax - 0x75], cl ; jge 0x414dc8 ; call rax
0x0000000000414f6d : ror byte ptr [rax - 0x75], 1 ; sbb byte ptr [rax - 0x75], cl ; jge 0x414f37 ; call rax
0x0000000000404458 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x0000000000410b54 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000403616 : ror byte ptr [rax - 0x7d], -0x3c ; pop rbp ; ret
0x000000000040cdbf : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000041c744 : ror byte ptr [rdi], -0x69 ; ret 0x348b
0x0000000000419e19 : ror byte ptr [rdi], 1 ; xchg eax, esp ; ret 0x348b
0x0000000000435b20 : ror byte ptr [rip - 0x74500000], -3 ; jmp rax
0x0000000000416925 : ror dword ptr [rax - 0x75], 1 ; push rbp ; call 0xd03ea7d
0x0000000000416ee8 : ror dword ptr [rax - 0x75], 1 ; push rbp ; call 0xd03f040
0x0000000000427cb0 : ror dword ptr [rdi], -0x6b ; ret 0x348b
0x0000000000421a2b : ror dword ptr [rdi], -0x6c ; ret 0xca20
0x0000000000404d36 : sahf ; ret 0x5588
0x00000000004043f6 : sahf ; ret 0xc8b
0x000000000040a2b4 : sal dh, cl ; ret 0x8901
0x0000000000433d5b : salc ; ret
0x0000000000433d48 : salc ; ret 0xffff
0x0000000000436b61 : salc ; std ; call rax
0x0000000000401b8e : sar eax, 1 ; jne 0x401b99 ; pop rbp ; ret
0x0000000000433d2b : sar edi, -1 ; jmp 0x42ff6b
0x00000000004370d1 : sar edi, 1 ; call qword ptr [rax]
0x0000000000401b8d : sar rax, 1 ; jne 0x401b9a ; pop rbp ; ret
0x0000000000436fe4 : sbb al, 0x12 ; add byte ptr [rax], al ; or byte ptr [rdx - 1], cl ; call rbx
0x0000000000414f71 : sbb byte ptr [rax - 0x75], cl ; jge 0x414f33 ; call rax
0x0000000000414f70 : sbb byte ptr [rax - 0x75], cl ; jge 0x414f34 ; call rax
0x000000000042b2d8 : sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000436378 : sbb byte ptr [rdx], ch ; std ; call rbx
0x0000000000409550 : sbb cl, byte ptr [rcx - 0x7f] ; ret
0x000000000041d9e7 : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040d7ed : scasd eax, dword ptr [rdi] ; ret
0x0000000000401c2f : scasd eax, dword ptr [rdi] ; ret 0x125
0x0000000000405705 : scasd eax, dword ptr [rdi] ; ret 0x8141
0x0000000000435b6d : scasd eax, dword ptr [rdi] ; std ; call qword ptr [rax]
0x0000000000435d54 : shl byte ptr [rax - 1], 1 ; jmp rax
0x000000000040433a : stc ; add byte ptr [r8], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x00000000004024b2 : stc ; add byte ptr [rax], r8b ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x0000000000404d30 : stc ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x00000000004043f0 : stc ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x0000000000435a36 : std ; call qword ptr [rax]
0x0000000000436642 : std ; call qword ptr [rdi]
0x0000000000435a26 : std ; call rax
0x000000000043637a : std ; call rbx
0x000000000043695a : std ; call rcx
0x000000000043687a : std ; call rsp
0x0000000000435b1e : std ; inc eax ; or eax, 0x8bb00000 ; std ; jmp rax
0x0000000000435b36 : std ; jmp qword ptr [rax]
0x0000000000435b26 : std ; jmp rax
0x00000000004368ba : std ; jmp rcx
0x0000000000435a1e : std ; push qword ptr [rax + 0x20000009] ; adc ebp, edi ; call rax
0x0000000000435b96 : std ; push qword ptr [rax + 0x2000000f] ; mov bh, -3 ; call rax
0x0000000000435a5e : std ; push qword ptr [rax - 0x1ffffff6] ; std ; call rax
0x0000000000435bd6 : std ; push qword ptr [rax - 0x3ffffff0] ; ret 0xfffd
0x0000000000435be6 : std ; push rax ; adc byte ptr [rax], al ; add al, ah ; ret
0x0000000000435a6e : std ; push rax ; or al, byte ptr [rax] ; add byte ptr [rax], dh ; cmp bh, ch ; call qword ptr [rax]
0x00000000004041fb : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000400291 : sub bh, al ; ret
0x0000000000436379 : sub bh, ch ; call rbx
0x0000000000434261 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000434260 : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000418e12 : test al, 2 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000043421a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000043614c : test byte ptr [rbx], al ; add byte ptr [rax], al ; push rax ; cld ; call qword ptr [rsi]
0x000000000041a9c5 : test byte ptr [rip - 0x17000000], al ; ret
0x0000000000415370 : test dword ptr [rbx], ecx ; add byte ptr [rax], al ; add al, ch ; ret
0x0000000000427d74 : test dword ptr [rip - 0x17000000], eax ; jmp qword ptr [rdi]
0x0000000000405feb : test dword ptr [rip - 0x17000000], eax ; ret
0x000000000040b80f : test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x000000000040a021 : test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x00000000004276de : test dword ptr [rip - 0x17000000], eax ; ret 0x2d
0x0000000000415a68 : test dword ptr [rip - 0x17000000], eax ; ret 0xb
0x00000000004330d8 : test dword ptr [rip - 0x17000000], eax ; ret 0xf
0x000000000040b10c : test dword ptr [rip - 0x17000000], eax ; ret 1
0x00000000004082a7 : test dword ptr [rip - 0x17000000], eax ; ret 8
0x0000000000411843 : test eax, 0x48fffffc ; add esp, 0x10 ; pop rbp ; ret
0x0000000000412d8f : vandps xmm8, xmm9, xmmword ptr [rbx] ; jmp rcx
0x000000000041fbbf : vorps xmm0, xmm12, xmmword ptr [rbx] ; jmp rcx
0x0000000000424c61 : vorps xmm8, xmm13, xmmword ptr [rbx] ; jmp rcx
0x0000000000431d5e : vxorps xmm0, xmm4, xmmword ptr [rbx] ; jmp rcx
0x000000000042bdbe : vxorps xmm8, xmm15, xmmword ptr [rbx] ; jmp rcx
0x0000000000421a2a : wait ; ror dword ptr [rdi], -0x6c ; ret 0xca20
0x000000000040e984 : xchg eax, ebp ; ret
0x0000000000402ea4 : xchg eax, ebp ; ret 0x348b
0x0000000000415164 : xchg eax, ebp ; ret 0x8041
0x0000000000411222 : xchg eax, ebp ; ret 0x8b44
0x0000000000406f0d : xchg eax, ebp ; ret 0xc8b
0x000000000042af94 : xchg eax, ebp ; ret 0xd284
0x000000000042bb3f : xchg eax, ebp ; ret 0xe280
0x0000000000418488 : xchg eax, ebx ; ret 0x348b
0x000000000041c746 : xchg eax, edi ; ret 0x348b
0x00000000004231e6 : xchg eax, edi ; ret 0x8b44
0x000000000040a107 : xchg eax, esi ; ret 0x348b
0x0000000000436b5c : xchg eax, esp ; or eax, 0xd6200000 ; std ; call rax
0x0000000000402140 : xchg eax, esp ; ret
0x0000000000404524 : xchg eax, esp ; ret 0x348b
0x00000000004025ca : xchg eax, esp ; ret 0x48b
0x0000000000401e95 : xchg eax, esp ; ret 0x8141
0x0000000000405bae : xchg eax, esp ; ret 0x8b44
0x000000000040276a : xchg eax, esp ; ret 0xa3d
0x00000000004024b8 : xchg eax, esp ; ret 0xc8b
0x0000000000421a2d : xchg eax, esp ; ret 0xca20
0x000000000040328d : xchg eax, esp ; ret 0xd284
0x000000000042530f : xchg eax, esp ; ret 0xf981
0x0000000000417088 : xchg eax, esp ; ret 0xfb81
0x0000000000412ec2 : xchg eax, esp ; ret 0xfe81
0x00000000004182af : xchg eax, esp ; ret 0xff81
0x000000000041f431 : xchg eax, r8d ; mov rdi, qword ptr [rax] ; call 0x42b727
0x000000000040e3c7 : xor byte ptr [rax - 0x75], cl ; add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x000000000040e469 : xor byte ptr [rax - 0x75], cl ; add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x0000000000412d90 : xor byte ptr [rbx + rax*2], dl ; jmp rcx
0x0000000000435d14 : xor byte ptr [rdx - 1], dl ; jmp rax
0x0000000000435a74 : xor byte ptr [rdx], bh ; std ; call qword ptr [rax]
0x000000000042a603 : xor cl, ch ; jmp rax
0x00000000004358f4 : xor dl, al ; cld ; call rax
0x0000000000408fa6 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
