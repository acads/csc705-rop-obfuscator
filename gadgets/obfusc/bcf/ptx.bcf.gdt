0x0000000000403b65 : adc al, 0x25 ; mov eax, 0x810062e6 ; ret 1
0x000000000042d8b5 : adc al, byte ptr [rax] ; add al, ch ; ret 0xffff
0x0000000000426ee0 : adc byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000041a085 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000406286 : adc cl, byte ptr [rbp + 0x29] ; rol byte ptr [rbp - 0x77], 1 ; ret
0x0000000000406a39 : adc dword ptr [rax - 0x7f], ecx ; ret 1
0x000000000042d715 : adc dword ptr [rax], eax ; add al, ch ; mov cl, -1 ; call rax
0x000000000042d714 : add al, 0x11 ; add byte ptr [rax], al ; call 0xffffffffd142d6d5
0x000000000042c62f : add al, ah ; push rcx ; std ; call qword ptr [rax]
0x000000000042c513 : add al, ah ; ret 0xffff
0x000000000042c1fb : add al, al ; cmp al, -2 ; jmp rax
0x000000000042d5d7 : add al, bl ; mov edi, edi ; jmp qword ptr [rcx]
0x00000000004022e6 : add al, bpl ; ret
0x0000000000423e33 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000042d717 : add al, ch ; mov cl, -1 ; call rax
0x00000000004022e7 : add al, ch ; ret
0x000000000042d8b7 : add al, ch ; ret 0xffff
0x000000000042cc1f : add al, dl ; jno 0x42cc25 ; call rbx
0x000000000042a52f : add bl, dh ; ret
0x00000000004285db : add byte ptr [r8], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x00000000004247e1 : add byte ptr [rax + 1], cl ; ret 0x4a3b
0x000000000042c62b : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; loopne 0x42c68b ; std ; call qword ptr [rax]
0x000000000040e35b : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x42b0
0x000000000041c5c0 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000420717 : add byte ptr [rax - 0x77], cl ; fsubr st(0) ; call qword ptr [rax]
0x000000000041f5c2 : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000042d712 : add byte ptr [rax], al ; add al, 0x11 ; add byte ptr [rax], al ; call 0xffffffffd142d6d7
0x000000000042c62d : add byte ptr [rax], al ; add al, ah ; push rcx ; std ; call qword ptr [rax]
0x0000000000409d35 : add byte ptr [rax], al ; add al, ch ; ret
0x000000000042a52d : add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004247df : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x4a3b
0x000000000040e359 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x42b0
0x000000000041f778 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000042a52b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004002f0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400710 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x00000000004002f2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400712 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x00000000004082f8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0x48b
0x00000000004052d6 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408a69 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000429649 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x000000000041eed9 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004002f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000042a5fc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4029
0x0000000000400714 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x000000000040c1f9 : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x8141
0x00000000004188a8 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000413b92 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040cdc1 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040ec21 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7038b], cl ; ret 0xb0
0x00000000004057e8 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret
0x000000000041530b : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x844
0x0000000000401ea5 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x000000000041049a : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x0000000000402a4e : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x125
0x000000000042822d : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x000000000042017f : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x0000000000402a5c : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x00000000004057dd : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x000000000041dabe : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8b44
0x000000000040f547 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xf981
0x00000000004220a3 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xfb81
0x0000000000418848 : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x51], al ; ret
0x0000000000428510 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x00000000004285dc : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x0000000000402a66 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret
0x00000000004082fa : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0x48b
0x00000000004105e4 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x0000000000428fd2 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x0000000000404115 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x00000000004201ec : add byte ptr [rax], al ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret
0x0000000000401e2b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x125
0x000000000041a3f0 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000401e70 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x0000000000403f6d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x3c8b
0x000000000041a1f9 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x48b
0x00000000004055a7 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5588
0x000000000041cc8e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x0000000000405f3e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x9588
0x0000000000411f69 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x0000000000429d30 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000405e03 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf280
0x000000000041c3c1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x00000000004034b3 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004287c0 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x0000000000415301 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x0000000000402f40 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x0000000000423638 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x0000000000419847 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041128d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xfe81
0x0000000000404ab4 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xff81
0x0000000000409d30 : add byte ptr [rax], al ; add cl, ch ; add eax, 0xe8000000 ; ret
0x0000000000406632 : add byte ptr [rax], al ; add cl, ch ; call qword ptr [rbx]
0x0000000000402806 : add byte ptr [rax], al ; add cl, ch ; ret
0x000000000041e14a : add byte ptr [rax], al ; add cl, ch ; ret 0
0x0000000000416871 : add byte ptr [rax], al ; add cl, ch ; ret 0x13
0x0000000000405ff1 : add byte ptr [rax], al ; add cl, ch ; ret 0x19
0x0000000000415083 : add byte ptr [rax], al ; add cl, ch ; ret 0x2a
0x0000000000420a8a : add byte ptr [rax], al ; add cl, ch ; ret 0xb
0x000000000041616e : add byte ptr [rax], al ; add cl, ch ; ret 1
0x0000000000413309 : add byte ptr [rax], al ; add cl, ch ; ret 8
0x00000000004021c1 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042a073 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000041433f : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000426136 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402355 : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000408a6b : add byte ptr [rax], al ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004017fb : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000042c906 : add byte ptr [rax], al ; and rdi, rsi ; jmp rax
0x000000000042caf6 : add byte ptr [rax], al ; call 0x1142c945
0x000000000042d716 : add byte ptr [rax], al ; call 0xffffffffd142d6d3
0x000000000042caf2 : add byte ptr [rax], al ; in al, 4 ; add byte ptr [rax], al ; call 0x1142c949
0x0000000000401879 : add byte ptr [rax], al ; jmp 0x401819
0x0000000000403c6c : add byte ptr [rax], al ; jmp 0x402dab
0x0000000000409d31 : add byte ptr [rax], al ; jmp 0x409d45
0x000000000040e0aa : add byte ptr [rax], al ; jmp 0x40ea9d
0x000000000042c62e : add byte ptr [rax], al ; loopne 0x42c688 ; std ; call qword ptr [rax]
0x0000000000414172 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000042964b : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x000000000041eedb : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000413de2 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000041f779 : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000042d8b2 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; adc al, byte ptr [rax] ; add al, ch ; ret 0xffff
0x000000000042cc1a : add byte ptr [rax], al ; or al, 6 ; add byte ptr [rax], al ; sal byte ptr [rcx - 2], 1 ; call rbx
0x000000000042c8e6 : add byte ptr [rax], al ; pop rax ; and edi, esi ; call qword ptr [rax]
0x0000000000404ba2 : add byte ptr [rax], al ; pop rbp ; ret
0x00000000004188a9 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000413b93 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040bcc6 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000042d27e : add byte ptr [rax], al ; push rax ; add edi, edi ; call rcx
0x000000000042c572 : add byte ptr [rax], al ; push rax ; sar bh, cl ; call qword ptr [rax]
0x00000000004002f6 : add byte ptr [rax], al ; ret
0x000000000042a5fe : add byte ptr [rax], al ; ret 0x4029
0x0000000000400716 : add byte ptr [rax], al ; ret 2
0x000000000042c562 : add byte ptr [rax], al ; ror bh, -1 ; call rax
0x000000000042cc1e : add byte ptr [rax], al ; sal byte ptr [rcx - 2], 1 ; call rbx
0x000000000042c5a2 : add byte ptr [rax], al ; sbb ah, -1 ; call rax
0x000000000042c62a : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; loopne 0x42c68c ; std ; call qword ptr [rax]
0x000000000042c1ba : add byte ptr [rax], al ; sub edi, esi ; jmp rax
0x000000000042c1ca : add byte ptr [rax], al ; xor byte ptr [rsi + rdi*8], ch ; jmp qword ptr [rax]
0x000000000042c797 : add byte ptr [rax], bh ; xchg eax, esp ; std ; jmp rsi
0x000000000042c1c8 : add byte ptr [rax], cl ; add byte ptr [rax], al ; xor byte ptr [rsi + rdi*8], ch ; jmp qword ptr [rax]
0x000000000042c1cb : add byte ptr [rax], dh ; sub al, -2 ; jmp qword ptr [rax]
0x000000000042c5b3 : add byte ptr [rax], dl ; loope 0x42c5ba ; call qword ptr [rax]
0x000000000042c14b : add byte ptr [rax], dl ; mov ebp, dr1 ; call qword ptr [rax]
0x0000000000404114 : add byte ptr [rax], r8b ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x000000000040c1fb : add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x8141
0x000000000040c1f1 : add byte ptr [rbp - 0x77], al ; ret 0x8141
0x00000000004188aa : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000413b94 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040bcc7 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040ec23 : add byte ptr [rbx - 0x76b7038b], cl ; ret 0xb0
0x00000000004034bf : add byte ptr [rcx + 0xf], al ; pushfq ; mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x00000000004057ea : add byte ptr [rcx + 0xf], al ; pushfq ; ret
0x000000000041530d : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x844
0x0000000000401ea7 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x0000000000404abf : add byte ptr [rcx + 0xf], al ; pushfq ; rol dword ptr [rax + rcx - 0x36], -0xa ; ret 0xf01
0x000000000041049c : add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x0000000000402a50 : add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x125
0x000000000042822f : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x0000000000420181 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x0000000000402a5e : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x00000000004057df : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x000000000041dac0 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8b44
0x000000000040f549 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xf981
0x00000000004220a5 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xfb81
0x0000000000418c1c : add byte ptr [rcx + 0xfe], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000404ab0 : add byte ptr [rcx + 0xfe], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xff81
0x0000000000403f69 : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x3c8b
0x000000000040954b : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5588
0x0000000000405f3a : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x9588
0x0000000000405dff : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf280
0x0000000000419458 : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004152fd : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x0000000000402f3c : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x000000000042c793 : add byte ptr [rcx + rax - 0x6bc80000], al ; std ; jmp rsi
0x000000000042d713 : add byte ptr [rcx + rdx], al ; add byte ptr [rax], al ; call 0xffffffffd142d6d6
0x0000000000410492 : add byte ptr [rcx - 0x77], al ; ret
0x0000000000402a46 : add byte ptr [rcx - 0x77], al ; ret 0x8141
0x0000000000401dd8 : add byte ptr [rcx], al ; ret
0x000000000041884a : add byte ptr [rdi + rcx - 0x51], al ; ret
0x0000000000428512 : add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x00000000004285de : add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x0000000000402a68 : add byte ptr [rdi], cl ; pushfq ; ret
0x00000000004082fc : add byte ptr [rdi], cl ; pushfq ; ret 0x48b
0x00000000004105e6 : add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x0000000000428fd4 : add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x0000000000404117 : add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x00000000004201ee : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret
0x0000000000401e2d : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x125
0x000000000041a3f2 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000401e72 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x0000000000403f6f : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x3c8b
0x000000000041a1fb : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x48b
0x00000000004055a9 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5588
0x000000000041cc90 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x0000000000405f40 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x9588
0x0000000000411f6b : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x0000000000429d32 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000405e05 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf280
0x0000000000409b30 : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0x348b
0x000000000041c3c3 : add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x00000000004034b5 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004287c2 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x0000000000415303 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x0000000000402f42 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x000000000042363a : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x0000000000419849 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041128f : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xfe81
0x0000000000404ab6 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xff81
0x000000000042cc1b : add byte ptr [rsi + rax], cl ; add byte ptr [rax], al ; sal byte ptr [rcx - 2], 1 ; call rbx
0x000000000042a5f7 : add cl, bh ; and eax, 0x40 ; add byte ptr [rax], al ; ret 0x4029
0x0000000000409d32 : add cl, ch ; add eax, 0xe8000000 ; ret
0x0000000000406634 : add cl, ch ; call qword ptr [rbx]
0x0000000000402808 : add cl, ch ; ret
0x000000000041e14c : add cl, ch ; ret 0
0x0000000000416873 : add cl, ch ; ret 0x13
0x0000000000405ff3 : add cl, ch ; ret 0x19
0x0000000000415085 : add cl, ch ; ret 0x2a
0x0000000000420a8c : add cl, ch ; ret 0xb
0x0000000000416170 : add cl, ch ; ret 1
0x000000000041330b : add cl, ch ; ret 8
0x000000000041942a : add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x00000000004194cc : add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x000000000042c795 : add dword ptr [rax], eax ; add byte ptr [rax], bh ; xchg eax, esp ; std ; jmp rsi
0x0000000000421614 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040bcc5 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000411a4c : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042596b : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000042849d : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004259e3 : add dword ptr [rdi], ecx ; test byte ptr [rip - 0x17000000], al ; ret
0x0000000000408913 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret
0x000000000041e146 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0
0x000000000041686d : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x0000000000405fed : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0x19
0x000000000041507f : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x0000000000420a86 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0xb
0x000000000041616a : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 1
0x0000000000401dd4 : add eax, 0x22c5be ; add ebx, esi ; ret
0x000000000042c139 : add eax, 0x62a00000 ; std ; call rax
0x000000000042c149 : add eax, 0x8c100000 ; std ; call qword ptr [rax]
0x0000000000409d34 : add eax, 0xe8000000 ; ret
0x0000000000406631 : add eax, 0xe9000000 ; call qword ptr [rbx]
0x0000000000402805 : add eax, 0xe9000000 ; ret
0x000000000041e149 : add eax, 0xe9000000 ; ret 0
0x0000000000416870 : add eax, 0xe9000000 ; ret 0x13
0x0000000000405ff0 : add eax, 0xe9000000 ; ret 0x19
0x0000000000415082 : add eax, 0xe9000000 ; ret 0x2a
0x0000000000420a89 : add eax, 0xe9000000 ; ret 0xb
0x000000000041616d : add eax, 0xe9000000 ; ret 1
0x0000000000413308 : add eax, 0xe9000000 ; ret 8
0x00000000004017f9 : add eax, dword ptr [rbx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000401d9b : add eax, edx ; sar rax, 1 ; jne 0x401dac ; pop rbp ; ret
0x00000000004261c9 : add eax, esi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x0000000000401dd9 : add ebx, esi ; ret
0x0000000000421fcb : add edi, eax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x000000000042d281 : add edi, edi ; call rcx
0x000000000040210b : add esp, 0x10 ; pop rbp ; ret
0x000000000041a083 : add esp, 0x110 ; pop rbp ; ret
0x000000000040bcc2 : add esp, 0x138 ; pop rbx ; pop rbp ; ret
0x0000000000417acd : add esp, 0x178 ; pop rbx ; pop rbp ; ret
0x000000000042a076 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000412db2 : add esp, 0x198 ; pop rbx ; pop rbp ; ret
0x000000000041c7ac : add esp, 0x1a0 ; pop rbp ; ret
0x000000000040546f : add esp, 0x20 ; pop rbp ; ret
0x0000000000421ed7 : add esp, 0x20 ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000423e30 : add esp, 0x2a8 ; pop rbx ; pop rbp ; ret
0x0000000000405bc1 : add esp, 0x30 ; pop rbp ; ret
0x0000000000402358 : add esp, 0x40 ; pop rbp ; ret
0x000000000041c2ef : add esp, 0x40 ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040f3ad : add esp, 0x50 ; pop rbp ; ret
0x0000000000408a6e : add esp, 0x60 ; pop rbp ; ret
0x0000000000418e62 : add esp, 0x70 ; pop rbp ; ret
0x00000000004103d3 : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000404b9e : add esp, 0x90 ; pop rbp ; ret
0x000000000040cdbe : add esp, 0xa8 ; pop rbx ; pop rbp ; ret
0x000000000041c60c : add esp, 0xb0 ; pop rbp ; ret
0x000000000041ed07 : add esp, 0xf0 ; pop rbp ; ret
0x00000000004017fe : add esp, 8 ; ret
0x0000000000401d9a : add rax, rdx ; sar rax, 1 ; jne 0x401dad ; pop rbp ; ret
0x00000000004261c8 : add rax, rsi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x0000000000421fca : add rdi, rax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x000000000040210a : add rsp, 0x10 ; pop rbp ; ret
0x000000000041a082 : add rsp, 0x110 ; pop rbp ; ret
0x000000000040bcc1 : add rsp, 0x138 ; pop rbx ; pop rbp ; ret
0x0000000000417acc : add rsp, 0x178 ; pop rbx ; pop rbp ; ret
0x000000000042a075 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000412db1 : add rsp, 0x198 ; pop rbx ; pop rbp ; ret
0x000000000041c7ab : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000040546e : add rsp, 0x20 ; pop rbp ; ret
0x0000000000421ed6 : add rsp, 0x20 ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000423e2f : add rsp, 0x2a8 ; pop rbx ; pop rbp ; ret
0x0000000000405bc0 : add rsp, 0x30 ; pop rbp ; ret
0x0000000000402357 : add rsp, 0x40 ; pop rbp ; ret
0x000000000041c2ee : add rsp, 0x40 ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040f3ac : add rsp, 0x50 ; pop rbp ; ret
0x0000000000408a6d : add rsp, 0x60 ; pop rbp ; ret
0x0000000000418e61 : add rsp, 0x70 ; pop rbp ; ret
0x00000000004103d2 : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000404b9d : add rsp, 0x90 ; pop rbp ; ret
0x000000000040cdbd : add rsp, 0xa8 ; pop rbx ; pop rbp ; ret
0x000000000041c60b : add rsp, 0xb0 ; pop rbp ; ret
0x000000000041ed06 : add rsp, 0xf0 ; pop rbp ; ret
0x00000000004017fd : add rsp, 8 ; ret
0x000000000042596a : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000042849c : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401dd7 : and al, byte ptr [rax] ; add ebx, esi ; ret
0x000000000041f81a : and byte ptr [r15], cl ; xchg eax, esp ; ret 0x348b
0x0000000000421ed9 : and byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000041f81b : and byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x000000000042a5f9 : and eax, 0x40 ; add byte ptr [rax], al ; ret 0x4029
0x0000000000419557 : and eax, 0x48ffffee ; add esp, 0x20 ; pop rbp ; ret
0x0000000000410acf : and eax, 0x62ea88 ; pop rbp ; ret
0x0000000000410af3 : and eax, 0x62ea90 ; pop rbp ; ret
0x000000000042c8e9 : and edi, esi ; call qword ptr [rax]
0x000000000042c909 : and edi, esi ; jmp rax
0x000000000042c908 : and rdi, rsi ; jmp rax
0x000000000042caf8 : call 0x1142c943
0x0000000000405468 : call 0x41757
0x0000000000421949 : call 0xd049a99
0x0000000000421f0c : call 0xd04a05c
0x000000000042d718 : call 0xffffffffd142d6d1
0x0000000000417d69 : call 0xffffffffe90406b9
0x0000000000417d68 : call 0xffffffffe90406ba
0x000000000040dcb1 : call 0xffffffffff411f60
0x000000000042a509 : call qword ptr [r12 + rbx*8]
0x00000000004106ad : call qword ptr [rax]
0x0000000000406636 : call qword ptr [rbx]
0x000000000042ceeb : call qword ptr [rdi]
0x000000000042ca7b : call qword ptr [rsi]
0x000000000042a50a : call qword ptr [rsp + rbx*8]
0x0000000000401dfd : call rax
0x000000000042cc23 : call rbx
0x000000000042d283 : call rcx
0x000000000042d1a3 : call rsp
0x000000000041a081 : clc ; add rsp, 0x110 ; pop rbp ; ret
0x00000000004206c4 : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000411ede : clc ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041a2a1 : clc ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000401d9f : clc ; jne 0x401da8 ; pop rbp ; ret
0x000000000040ec46 : clc ; mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000418333 : clc ; pop rbx ; pop rbp ; ret
0x000000000040f650 : cld ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000429726 : cld ; mov dword ptr [rbp - 0xc], eax ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x000000000041eedf : cld ; pop rbp ; ret
0x0000000000429336 : cli ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042c1fd : cmp al, -2 ; jmp rax
0x000000000040e35e : cmp al, 0x25 ; ret 0x42b0
0x000000000041fba9 : cmp al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004287be : cmp byte ptr [rax], ah ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x0000000000401e6e : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x000000000042850e : cmp byte ptr [rax], dh ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x0000000000428bfe : cmp byte ptr [rcx], ah ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000040bcc4 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000042822b : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x000000000041dabc : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8b44
0x000000000041a3ee : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x000000000041cc8c : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x00000000004181fd : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040da16 : cmp eax, 0x62e830 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x0000000000401d5d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401d70 ; pop rbp ; ret
0x0000000000406a77 : cmp eax, ebp ; ret
0x00000000004079b5 : cmp ecx, ebp ; ret
0x0000000000412db4 : cwde ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000042a493 : cwde ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040dcac : cwde ; mov rcx, qword ptr [rax*8 + 0x42a6e8] ; jmp rcx
0x0000000000402d2c : dec byte ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x000000000041448f : dec byte ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret
0x0000000000427760 : dec dword ptr [rax + 0x3b] ; ror byte ptr [r15], -0x69 ; ret 0x348b
0x0000000000424e35 : dec dword ptr [rax + 0x3b] ; ror byte ptr [r15], 1 ; xchg eax, esp ; ret 0x348b
0x000000000040b9a5 : dec dword ptr [rax + 1] ; ret 0x8948
0x000000000041b313 : dec dword ptr [rax - 0x77] ; ret 0x14e8
0x0000000000423758 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000041b9d6 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000041b76a : dec dword ptr [rax - 0x77] ; ret 0xbde8
0x000000000041a73b : dec dword ptr [rax - 0x77] ; ret 0xece8
0x0000000000421384 : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000040662e : dec dword ptr [rdi] ; test dword ptr [rip - 0x17000000], eax ; call qword ptr [rbx]
0x0000000000402802 : dec dword ptr [rdi] ; test dword ptr [rip - 0x17000000], eax ; ret
0x0000000000413305 : dec dword ptr [rdi] ; test dword ptr [rip - 0x17000000], eax ; ret 8
0x000000000041006f : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret
0x0000000000401ea3 : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x00000000004105e2 : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x0000000000417e1b : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x00000000004198ea : enter -0x7cb8, -0x3c ; pop rbp ; ret
0x000000000042c5a5 : fdiv st(7), st(0) ; call rax
0x0000000000406ba4 : fiadd dword ptr [rcx - 0xa] ; ret 0x4001
0x000000000040f55a : fiadd dword ptr [rcx - 0xa] ; ret 0x4401
0x000000000040c5ec : fiadd dword ptr [rcx - 0xa] ; ret 0x4801
0x000000000040da59 : fiadd dword ptr [rcx - 0xa] ; ret 0x8801
0x000000000040d076 : fiadd dword ptr [rcx - 0xa] ; ret 0x8901
0x00000000004057f1 : fiadd dword ptr [rcx - 0xa] ; ret 0xf01
0x0000000000402a6e : fild dword ptr [rcx - 0xa] ; ret
0x0000000000401df7 : fisub word ptr [rdx] ; mov rbp, rsp ; call rax
0x0000000000416488 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000429d3f : fmul qword ptr [r8 - 0x77] ; in al, dx ; pop rbp ; ret
0x0000000000429d40 : fmul qword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000042a50c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000429d3d : fmul qword ptr [rbx - 0x76b723bb] ; in al, dx ; pop rbp ; ret
0x0000000000420714 : fnstsw dword ptr [rdi - 0x76b7ffbe] ; fsubr st(0) ; call qword ptr [rax]
0x000000000042071b : fsubr st(0) ; call qword ptr [rax]
0x0000000000402109 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000429729 : hlt ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000401d70 : hlt ; pop rbp ; mov edi, 0x62e338 ; jmp rax
0x000000000042964f : hlt ; pop rbp ; ret
0x000000000042c3ad : idiv dh ; call rax
0x000000000042d1a1 : idiv esi ; call rsp
0x000000000042caf4 : in al, 4 ; add byte ptr [rax], al ; call 0x1142c947
0x0000000000414176 : in al, dx ; pop rbp ; ret
0x0000000000412741 : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000040da43 : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x0000000000418c1e : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000404ab2 : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xff81
0x0000000000418303 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000405ebb : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x0000000000403f6b : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x3c8b
0x000000000040954d : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5588
0x0000000000405f3c : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x9588
0x0000000000405e01 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf280
0x000000000041945a : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004152ff : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x0000000000402f3e : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x000000000042c1c7 : inc dword ptr [rax] ; or byte ptr [rax], al ; add byte ptr [rax], dh ; sub al, -2 ; jmp qword ptr [rax]
0x00000000004285d8 : inc dword ptr [rcx + 0x41f9] ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x0000000000428fce : inc dword ptr [rcx + 0x5af9] ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x000000000042868e : inc dword ptr [rcx + 0x5af9] ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x0000000000409cd7 : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x48b
0x000000000040fe67 : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x8b44
0x000000000042c1f7 : inc eax ; or byte ptr [rax], al ; add al, al ; cmp al, -2 ; jmp rax
0x000000000041c5c8 : int 0x80
0x0000000000401d63 : ja 0x401d6a ; pop rbp ; ret
0x000000000042b032 : jb 0x42b098 ; outsb dx, byte ptr [rsi] ; ret
0x000000000042b031 : jb 0x42b099 ; outsb dx, byte ptr [rsi] ; ret
0x0000000000401d6f : je 0x401d6d ; pop rbp ; mov edi, 0x62e338 ; jmp rax
0x0000000000429d3c : jge 0x429d23 ; mov eax, dword ptr [rbp - 0x24] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040187b : jmp 0x401817
0x0000000000403c6e : jmp 0x402da9
0x0000000000409d33 : jmp 0x409d43
0x000000000040e357 : jmp 0x40e422
0x000000000040e0ac : jmp 0x40ea9b
0x000000000042528c : jmp 0x4241c2
0x000000000042c1cf : jmp qword ptr [rax]
0x000000000042d5db : jmp qword ptr [rcx]
0x000000000042c803 : jmp qword ptr [rsi]
0x0000000000401d77 : jmp rax
0x000000000042d89b : jmp rbx
0x000000000040256c : jmp rcx
0x0000000000401db7 : jmp rdx
0x000000000042c79b : jmp rsi
0x0000000000401da0 : jne 0x401da7 ; pop rbp ; ret
0x000000000042cc21 : jno 0x42cc23 ; call rbx
0x0000000000418e64 : jo 0x418ec5 ; ret
0x0000000000426134 : jo 0x42613f ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000428127 : jo 0x428188 ; ret
0x000000000042a497 : jo 0x42a4f8 ; ret
0x00000000004103d5 : js 0x410435 ; pop rbp ; ret
0x0000000000417acf : js 0x417ad8 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000417ef0 : js 0x417f50 ; pop rbp ; ret
0x0000000000418d05 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040d798 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000418331 : lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000418d04 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000418330 : lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000042c3a7 : ljmp ptr [rax - 0x5ffffff1] ; idiv dh ; call rax
0x000000000042c5b5 : loope 0x42c5b8 ; call qword ptr [rax]
0x000000000040e9a7 : loopne 0x40ea0d ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041008b : loopne 0x4100f1 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041832f : loopne 0x418380 ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000041832e : loopne 0x418381 ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000041d495 : loopne 0x41d4e5 ; add esp, 0x20 ; pop rbp ; ret
0x000000000041d494 : loopne 0x41d4e6 ; add esp, 0x20 ; pop rbp ; ret
0x000000000041dbca : loopne 0x41dc30 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042c630 : loopne 0x42c686 ; std ; call qword ptr [rax]
0x000000000041c60e : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042c560 : mov al, 0x16 ; add byte ptr [rax], al ; ror bh, -1 ; call rax
0x000000000042c5a0 : mov al, 0x17 ; add byte ptr [rax], al ; sbb ah, -1 ; call rax
0x000000000040fd81 : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000403ec7 : mov al, 0x48 ; mov ecx, dword ptr [rax*8 + 0x42a660] ; jmp rcx
0x0000000000428499 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000429334 : mov al, byte ptr [rbp - 6] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000410af1 : mov byte ptr [0x62ea90], al ; pop rbp ; ret
0x0000000000406a35 : mov byte ptr [r8 - 0x75], r9b ; adc dword ptr [rax - 0x7f], ecx ; ret 1
0x00000000004034c3 : mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x0000000000406a36 : mov byte ptr [rax - 0x75], cl ; adc dword ptr [rax - 0x7f], ecx ; ret 1
0x000000000040ec47 : mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000410cf8 : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret
0x000000000041686c : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x0000000000405fec : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 0x19
0x000000000041507e : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x0000000000418056 : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 1
0x0000000000401dd3 : mov byte ptr [rip + 0x22c5be], 1 ; ret
0x000000000042d719 : mov cl, -1 ; call rax
0x0000000000411a4e : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000425283 : mov dh, -0x40 ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000042596d : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000042849f : mov dh, -0x40 ; pop rbp ; ret
0x00000000004022e5 : mov dl, 0x42 ; add al, ch ; ret
0x0000000000410acd : mov dword ptr [0x62ea88], edi ; pop rbp ; ret
0x0000000000413eba : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000414008 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040f7a6 : mov dword ptr [rbp - 0x3c], eax ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040d299 : mov dword ptr [rbp - 0x48], eax ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004103cf : mov dword ptr [rbp - 0x58], eax ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000402107 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000429727 : mov dword ptr [rbp - 0xc], eax ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000405bbd : mov dword ptr [rcx + 8], eax ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004261cc : mov dword ptr [rdi + 0x10], eax ; pop rbp ; ret
0x0000000000421fce : mov dword ptr [rsi], edi ; pop rbp ; ret
0x000000000040d29b : mov eax, 0x60c48348 ; pop rbp ; ret
0x0000000000417eec : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000403b67 : mov eax, 0x810062e6 ; ret 1
0x000000000041ced5 : mov eax, 0xf0658d48 ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000041f5c1 : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000413de8 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000041ca01 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000410fd4 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041f5be : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000413de5 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000418a9a : mov eax, dword ptr [rbp - 0x10] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000410ec3 : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000414174 : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000041c90f : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000413d9d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000413eb4 : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000419064 : mov eax, dword ptr [rbp - 0x18] ; mov rsp, rbp ; pop rbp ; ret
0x000000000041d493 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041832d : mov eax, dword ptr [rbp - 0x20] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000429d3e : mov eax, dword ptr [rbp - 0x24] ; mov rsp, rbp ; pop rbp ; ret
0x000000000041f3d8 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041400a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000041faab : mov eax, dword ptr [rbp - 0x30] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004198e8 : mov eax, dword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000410a8a : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040f3a9 : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000417eea : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040fd7f : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000428121 : mov eax, dword ptr [rbp - 0x60] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000042a491 : mov eax, dword ptr [rbp - 0x68] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004106a7 : mov eax, dword ptr [rbp - 0x88] ; call qword ptr [rax]
0x000000000042964d : mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x000000000040f64e : mov eax, dword ptr [rbp - 4] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041eedd : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004206c2 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000411edc : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041a29f : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040ee20 : mov eax, ecx ; add rsp, 0x30 ; pop rbp ; ret
0x000000000042c14d : mov ebp, dr1 ; call qword ptr [rax]
0x0000000000401dfb : mov ebp, esp ; call rax
0x0000000000401d61 : mov ebp, esp ; ja 0x401d6c ; pop rbp ; ret
0x00000000004025d9 : mov ecx, dword ptr [rax*8 + 0x42a590] ; jmp rcx
0x0000000000402565 : mov ecx, dword ptr [rax*8 + 0x42a608] ; jmp rcx
0x0000000000403ec9 : mov ecx, dword ptr [rax*8 + 0x42a660] ; jmp rcx
0x0000000000403ea3 : mov ecx, dword ptr [rax*8 + 0x42a6b8] ; jmp rcx
0x000000000040dcae : mov ecx, dword ptr [rax*8 + 0x42a6e8] ; jmp rcx
0x0000000000414837 : mov ecx, dword ptr [rax*8 + 0x42b620] ; jmp rcx
0x0000000000415351 : mov ecx, dword ptr [rax*8 + 0x42b668] ; jmp rcx
0x000000000041ba92 : mov ecx, dword ptr [rax*8 + 0x42bb20] ; jmp rcx
0x000000000041e797 : mov ecx, dword ptr [rax*8 + 0x42be90] ; jmp rcx
0x000000000041e717 : mov ecx, dword ptr [rax*8 + 0x42bef0] ; jmp rcx
0x0000000000413eb7 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040ee1e : mov ecx, eax ; mov eax, ecx ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401df5 : mov edi, 0x62de20 ; mov rbp, rsp ; call rax
0x0000000000401d72 : mov edi, 0x62e338 ; jmp rax
0x0000000000401db2 : mov edi, 0x62e338 ; jmp rdx
0x0000000000420715 : mov edi, 0x89480042 ; fsubr st(0) ; call qword ptr [rax]
0x0000000000406926 : mov edi, 0x8b480852 ; xor byte ptr [rbp + 0x63], cl ; ret 0x14c
0x0000000000421fc8 : mov edi, dword ptr [rsi] ; add rdi, rax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x000000000042a507 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000042d5d9 : mov edi, edi ; jmp qword ptr [rcx]
0x000000000042a506 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000401dd5 : mov esi, 0x10022c5 ; ret
0x0000000000401db0 : mov esi, eax ; mov edi, 0x62e338 ; jmp rdx
0x0000000000418a9e : mov esp, ebp ; pop rbp ; ret
0x0000000000410acc : mov qword ptr [0x62ea88], rdi ; pop rbp ; ret
0x0000000000405bbc : mov qword ptr [rcx + 8], rax ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004261cb : mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x0000000000421fcd : mov qword ptr [rsi], rdi ; pop rbp ; ret
0x000000000040fd80 : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040d29a : mov r8d, 0x60c48348 ; pop rbp ; ret
0x0000000000417eeb : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x000000000041ca00 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000410fd3 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000413de4 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000418a99 : mov rax, qword ptr [rbp - 0x10] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000410ec2 : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000041c90e : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000413d9c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000419063 : mov rax, qword ptr [rbp - 0x18] ; mov rsp, rbp ; pop rbp ; ret
0x000000000041d492 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004198e7 : mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000410a89 : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040fd7e : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000428120 : mov rax, qword ptr [rbp - 0x60] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000042a490 : mov rax, qword ptr [rbp - 0x68] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004106a6 : mov rax, qword ptr [rbp - 0x88] ; call qword ptr [rax]
0x00000000004206c1 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000411edb : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041a29e : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000401dfa : mov rbp, rsp ; call rax
0x0000000000401d60 : mov rbp, rsp ; ja 0x401d6d ; pop rbp ; ret
0x00000000004025d8 : mov rcx, qword ptr [rax*8 + 0x42a590] ; jmp rcx
0x0000000000402564 : mov rcx, qword ptr [rax*8 + 0x42a608] ; jmp rcx
0x0000000000403ec8 : mov rcx, qword ptr [rax*8 + 0x42a660] ; jmp rcx
0x0000000000403ea2 : mov rcx, qword ptr [rax*8 + 0x42a6b8] ; jmp rcx
0x000000000040dcad : mov rcx, qword ptr [rax*8 + 0x42a6e8] ; jmp rcx
0x0000000000414836 : mov rcx, qword ptr [rax*8 + 0x42b620] ; jmp rcx
0x0000000000415350 : mov rcx, qword ptr [rax*8 + 0x42b668] ; jmp rcx
0x000000000041ba91 : mov rcx, qword ptr [rax*8 + 0x42bb20] ; jmp rcx
0x000000000041e796 : mov rcx, qword ptr [rax*8 + 0x42be90] ; jmp rcx
0x000000000041e716 : mov rcx, qword ptr [rax*8 + 0x42bef0] ; jmp rcx
0x0000000000401daf : mov rsi, rax ; mov edi, 0x62e338 ; jmp rdx
0x0000000000418a9d : mov rsp, rbp ; pop rbp ; ret
0x0000000000425299 : movabs al, byte ptr [0xe9b8458948fffffe] ; ret 0xfff0
0x000000000042d8b4 : movsb byte ptr [rdi], byte ptr [rsi] ; adc al, byte ptr [rax] ; add al, ch ; ret 0xffff
0x0000000000411a4d : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000425282 : movzx eax, al ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000042596c : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000042849e : movzx eax, al ; pop rbp ; ret
0x000000000040ec4a : movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x000000000042a528 : nop dword ptr [rax + rax] ; ret
0x000000000040dcaf : or al, 0xffffffffffffffc5 ; call 0xffffffffff411f62
0x000000000042cc1c : or al, 6 ; add byte ptr [rax], al ; sal byte ptr [rcx - 2], 1 ; call rbx
0x000000000040d6d7 : or al, ch ; ret
0x00000000004180b9 : or byte ptr [r15], cl ; xchg eax, ebp ; ret 0x348b
0x000000000040564a : or byte ptr [r15], cl ; xchg eax, edx ; ret 0x348b
0x0000000000416483 : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000416484 : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000406928 : or byte ptr [rax - 0x75], cl ; xor byte ptr [rbp + 0x63], cl ; ret 0x14c
0x000000000042c1f9 : or byte ptr [rax], al ; add al, al ; cmp al, -2 ; jmp rax
0x000000000042c1c9 : or byte ptr [rax], al ; add byte ptr [rax], dh ; sub al, -2 ; jmp qword ptr [rax]
0x00000000004287bc : or byte ptr [rcx + 0x2038], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x0000000000428bfc : or byte ptr [rcx + 0x2138], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000041c3bd : or byte ptr [rcx + 0x28f9], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x000000000042850c : or byte ptr [rcx + 0x3038], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x0000000000401e6c : or byte ptr [rcx + 0x38], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x0000000000404111 : or byte ptr [rcx + 0x46f9], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x0000000000428afc : or byte ptr [rcx + 0x6138], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x00000000004055a3 : or byte ptr [rcx + 0xaf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5588
0x0000000000411f65 : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x0000000000423634 : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x00000000004180ba : or byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x000000000040564b : or byte ptr [rdi], cl ; xchg eax, edx ; ret 0x348b
0x000000000041942d : or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x00000000004194cf : or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x000000000041d15f : or eax, 0x48fffff9 ; add esp, 0x30 ; pop rbp ; ret
0x000000000041a141 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041433d : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000409b2e : out 0x62, eax ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0x348b
0x000000000042b034 : outsb dx, byte ptr [rsi] ; ret
0x00000000004078d1 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042a51c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040e9a9 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004078d3 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042a51e : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004078d5 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042a520 : pop r14 ; pop r15 ; ret
0x0000000000413b96 : pop r14 ; pop rbp ; ret
0x00000000004078d7 : pop r15 ; pop rbp ; ret
0x000000000042a522 : pop r15 ; ret
0x000000000042c8e8 : pop rax ; and edi, esi ; call qword ptr [rax]
0x0000000000401dd2 : pop rbp ; mov byte ptr [rip + 0x22c5be], 1 ; ret
0x0000000000401d71 : pop rbp ; mov edi, 0x62e338 ; jmp rax
0x0000000000401dae : pop rbp ; mov rsi, rax ; mov edi, 0x62e338 ; jmp rdx
0x000000000042a51b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004078d4 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042a51f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401d65 : pop rbp ; ret
0x000000000040e9a8 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040d79b : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000413b95 : pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040bcc8 : pop rbx ; pop rbp ; ret
0x00000000004078d8 : pop rdi ; pop rbp ; ret
0x000000000042a523 : pop rdi ; ret
0x0000000000428fd1 : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x0000000000428691 : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x00000000004078d6 : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000042a521 : pop rsi ; pop r15 ; ret
0x0000000000413b97 : pop rsi ; pop rbp ; ret
0x00000000004078d2 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042a51d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040e9aa : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000428514 : popfq ; ret 0x348b
0x00000000004285e0 : popfq ; ret 0xc8b
0x0000000000407d14 : push -0x76000064 ; ret 0x5589
0x000000000042c59f : push qword ptr [rax - 0x7fffffe9] ; fdiv st(7), st(0) ; call rax
0x0000000000421613 : push rax ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000042c147 : push rax ; add eax, 0x8c100000 ; std ; call qword ptr [rax]
0x000000000042d280 : push rax ; add edi, edi ; call rcx
0x000000000040f3af : push rax ; pop rbp ; ret
0x000000000042c574 : push rax ; sar bh, cl ; call qword ptr [rax]
0x0000000000421948 : push rbp ; call 0xd049a9a
0x0000000000421f0b : push rbp ; call 0xd04a05d
0x0000000000416487 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000401df4 : push rbp ; mov edi, 0x62de20 ; mov rbp, rsp ; call rax
0x0000000000417e1e : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000042c631 : push rcx ; std ; call qword ptr [rax]
0x0000000000406927 : push rdx ; or byte ptr [rax - 0x75], cl ; xor byte ptr [rbp + 0x63], cl ; ret 0x14c
0x00000000004034c2 : pushfq ; mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x0000000000402a6a : pushfq ; ret
0x00000000004082fe : pushfq ; ret 0x48b
0x0000000000415310 : pushfq ; ret 0x844
0x0000000000401eaa : pushfq ; ret 0x845
0x00000000004105e8 : pushfq ; ret 0xd108
0x0000000000404ac2 : pushfq ; rol dword ptr [rax + rcx - 0x36], -0xa ; ret 0xf01
0x00000000004002f8 : ret
0x000000000041e14e : ret 0
0x00000000004263c0 : ret 0x10
0x0000000000401e30 : ret 0x125
0x0000000000416875 : ret 0x13
0x000000000040692e : ret 0x14c
0x000000000041b316 : ret 0x14e8
0x0000000000405ff5 : ret 0x19
0x0000000000401c82 : ret 0x22c5
0x0000000000401a82 : ret 0x22c6
0x0000000000401882 : ret 0x22c7
0x0000000000415087 : ret 0x2a
0x0000000000401e75 : ret 0x348b
0x0000000000403f72 : ret 0x3c8b
0x00000000004276c7 : ret 0x3e8
0x0000000000406ba7 : ret 0x4001
0x000000000042a600 : ret 0x4029
0x000000000040e360 : ret 0x42b0
0x000000000040f55d : ret 0x4401
0x000000000040c5ef : ret 0x4801
0x00000000004082ff : ret 0x48b
0x0000000000405c44 : ret 0x48f0
0x00000000004247e4 : ret 0x4a3b
0x00000000004164a0 : ret 0x4ae8
0x00000000004191a7 : ret 0x4cc0
0x0000000000405c76 : ret 0x4cf0
0x00000000004055ac : ret 0x5588
0x0000000000407d19 : ret 0x5589
0x000000000042676e : ret 0x5ce8
0x0000000000419430 : ret 0x7ae8
0x0000000000420185 : ret 0x8041
0x0000000000402a49 : ret 0x8141
0x0000000000415311 : ret 0x844
0x0000000000401eab : ret 0x845
0x000000000040da5c : ret 0x8801
0x000000000040d079 : ret 0x8901
0x000000000040b9a8 : ret 0x8948
0x00000000004167fc : ret 0x89a5
0x000000000040fe6b : ret 0x8b44
0x000000000041648b : ret 0x8b48
0x0000000000405f43 : ret 0x9588
0x0000000000426d35 : ret 0x95e8
0x0000000000426f2e : ret 0x9ce8
0x0000000000402f45 : ret 0xa3d
0x0000000000420a8e : ret 0xb
0x000000000040ec29 : ret 0xb0
0x000000000041b76d : ret 0xbde8
0x0000000000408928 : ret 0xbe0f
0x000000000042194c : ret 0xc
0x0000000000401d95 : ret 0xc148
0x000000000041129f : ret 0xc2f6
0x000000000040411a : ret 0xc8b
0x00000000004105e9 : ret 0xd108
0x000000000041984c : ret 0xd284
0x00000000004283a4 : ret 0xd6e8
0x00000000004194d2 : ret 0xd8e8
0x0000000000426fea : ret 0xe0e8
0x0000000000425c08 : ret 0xe2e8
0x0000000000401e27 : ret 0xea81
0x000000000041a73e : ret 0xece8
0x0000000000417d6c : ret 0xee8
0x0000000000402f53 : ret 0xf01
0x0000000000405e08 : ret 0xf280
0x000000000040f54d : ret 0xf981
0x00000000004220a9 : ret 0xfb81
0x0000000000411292 : ret 0xfe81
0x0000000000404ab9 : ret 0xff81
0x000000000040546a : ret 0xffc3
0x0000000000425292 : ret 0xffef
0x00000000004252a2 : ret 0xfff0
0x0000000000403c74 : ret 0xfff1
0x000000000042c2d5 : ret 0xfffe
0x000000000041f04d : ret 0xffff
0x0000000000403b6c : ret 1
0x0000000000400718 : ret 2
0x000000000041330d : ret 8
0x0000000000413b91 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000406289 : rol byte ptr [rbp - 0x77], 1 ; ret
0x0000000000404ac3 : rol dword ptr [rax + rcx - 0x36], -0xa ; ret 0xf01
0x000000000042c564 : ror bh, -1 ; call rax
0x0000000000427763 : ror byte ptr [r15], -0x69 ; ret 0x348b
0x0000000000424e38 : ror byte ptr [r15], 1 ; xchg eax, esp ; ret 0x348b
0x000000000041c5c3 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000410a8b : ror byte ptr [r8 - 0x7d], -0x3c ; pop rbp ; ret
0x000000000040f3aa : ror byte ptr [r8 - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x0000000000401d9c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401dab ; pop rbp ; ret
0x0000000000425284 : ror byte ptr [rax - 0x73], 0x65 ; clc ; pop rbx ; pop rbp ; ret
0x000000000042596e : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x000000000041c5c4 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000410a8c : ror byte ptr [rax - 0x7d], -0x3c ; pop rbp ; ret
0x000000000040f3ab : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x000000000042c1f8 : ror byte ptr [rax], 0 ; add al, al ; cmp al, -2 ; jmp rax
0x0000000000417e1f : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000427764 : ror byte ptr [rdi], -0x69 ; ret 0x348b
0x0000000000424e39 : ror byte ptr [rdi], 1 ; xchg eax, esp ; ret 0x348b
0x000000000042c330 : ror byte ptr [rip - 0x31700000], -2 ; jmp rax
0x0000000000421945 : ror dword ptr [rax - 0x75], 1 ; push rbp ; call 0xd049a9d
0x0000000000421f08 : ror dword ptr [rax - 0x75], 1 ; push rbp ; call 0xd04a060
0x000000000040ee1f : ror dword ptr [rcx - 0x3b7cb738], 0x30 ; pop rbp ; ret
0x0000000000428fd6 : sahf ; ret 0x5588
0x0000000000404119 : sahf ; ret 0xc8b
0x000000000042cc20 : sal byte ptr [rcx - 2], 1 ; call rbx
0x0000000000415314 : sal dh, cl ; ret 0x8901
0x000000000042c575 : sar bh, cl ; call qword ptr [rax]
0x0000000000401d9e : sar eax, 1 ; jne 0x401da9 ; pop rbp ; ret
0x0000000000401d9d : sar rax, 1 ; jne 0x401daa ; pop rbp ; ret
0x000000000042c5a4 : sbb ah, -1 ; call rax
0x000000000042c62c : sbb al, 0 ; add byte ptr [rax], al ; loopne 0x42c68a ; std ; call qword ptr [rax]
0x000000000042d8b0 : sbb al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; adc al, byte ptr [rax] ; add al, ch ; ret 0xffff
0x000000000042d391 : sbb bh, bh ; call qword ptr [rax]
0x000000000042c43d : sbb bh, bh ; jmp qword ptr [rax]
0x000000000042a078 : sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000004145b0 : sbb cl, byte ptr [rcx - 0x7f] ; ret
0x000000000041f777 : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000041049f : scasd eax, dword ptr [rdi] ; ret
0x0000000000401e2f : scasd eax, dword ptr [rdi] ; ret 0x125
0x000000000040c1fe : scasd eax, dword ptr [rdi] ; ret 0x8141
0x00000000004285da : stc ; add byte ptr [r8], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x0000000000404113 : stc ; add byte ptr [rax], r8b ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x000000000042a5f8 : stc ; and eax, 0x40 ; add byte ptr [rax], al ; ret 0x4029
0x0000000000428fd0 : stc ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x0000000000428690 : stc ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x000000000042c14e : std ; call qword ptr [rax]
0x000000000042c13e : std ; call rax
0x000000000042c802 : std ; jmp qword ptr [rsi]
0x000000000042c79a : std ; jmp rsi
0x000000000042c146 : std ; push rax ; add eax, 0x8c100000 ; std ; call qword ptr [rax]
0x000000000042849b : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042c1cd : sub al, -2 ; jmp qword ptr [rax]
0x000000000042c1bd : sub edi, esi ; jmp rax
0x000000000042a571 : sub esp, 8 ; add rsp, 8 ; ret
0x000000000042a570 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040cdc0 : test al, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004103d1 : test al, 0x48 ; add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000423e32 : test al, 2 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000042a52a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004259e5 : test byte ptr [rip - 0x17000000], al ; ret
0x0000000000406630 : test dword ptr [rip - 0x17000000], eax ; call qword ptr [rbx]
0x0000000000402804 : test dword ptr [rip - 0x17000000], eax ; ret
0x000000000041e148 : test dword ptr [rip - 0x17000000], eax ; ret 0
0x000000000041686f : test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x0000000000405fef : test dword ptr [rip - 0x17000000], eax ; ret 0x19
0x0000000000415081 : test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x0000000000420a88 : test dword ptr [rip - 0x17000000], eax ; ret 0xb
0x000000000041616c : test dword ptr [rip - 0x17000000], eax ; ret 1
0x0000000000413307 : test dword ptr [rip - 0x17000000], eax ; ret 8
0x000000000041d2b3 : test eax, 0x48fffffc ; add esp, 0x10 ; pop rbp ; ret
0x000000000041a3f4 : xchg eax, ebp ; ret
0x0000000000401e74 : xchg eax, ebp ; ret 0x348b
0x0000000000403f71 : xchg eax, ebp ; ret 0x3c8b
0x000000000041a1fd : xchg eax, ebp ; ret 0x48b
0x00000000004055ab : xchg eax, ebp ; ret 0x5588
0x0000000000420184 : xchg eax, ebp ; ret 0x8041
0x000000000041cc92 : xchg eax, ebp ; ret 0x8b44
0x0000000000405f42 : xchg eax, ebp ; ret 0x9588
0x0000000000411f6d : xchg eax, ebp ; ret 0xc8b
0x0000000000429d34 : xchg eax, ebp ; ret 0xd284
0x0000000000405e07 : xchg eax, ebp ; ret 0xf280
0x00000000004234a8 : xchg eax, ebx ; ret 0x348b
0x0000000000427766 : xchg eax, edi ; ret 0x348b
0x000000000040564d : xchg eax, edx ; ret 0x348b
0x0000000000415167 : xchg eax, esi ; ret 0x348b
0x0000000000402a61 : xchg eax, esp ; ret
0x000000000040f88c : xchg eax, esp ; ret 0x348b
0x0000000000409cda : xchg eax, esp ; ret 0x48b
0x00000000004057e2 : xchg eax, esp ; ret 0x8141
0x000000000040fe6a : xchg eax, esp ; ret 0x8b44
0x0000000000402f44 : xchg eax, esp ; ret 0xa3d
0x000000000042363c : xchg eax, esp ; ret 0xc8b
0x000000000041984b : xchg eax, esp ; ret 0xd284
0x000000000040f54c : xchg eax, esp ; ret 0xf981
0x00000000004220a8 : xchg eax, esp ; ret 0xfb81
0x0000000000411291 : xchg eax, esp ; ret 0xfe81
0x0000000000404ab8 : xchg eax, esp ; ret 0xff81
0x000000000042c799 : xchg eax, esp ; std ; jmp rsi
0x0000000000419427 : xor byte ptr [rax - 0x75], cl ; add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x00000000004194c9 : xor byte ptr [rax - 0x75], cl ; add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x000000000040692b : xor byte ptr [rbp + 0x63], cl ; ret 0x14c
0x000000000042c1cc : xor byte ptr [rsi + rdi*8], ch ; jmp qword ptr [rax]
0x0000000000414006 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
