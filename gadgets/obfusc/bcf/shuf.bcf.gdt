0x000000000040fb46 : adc al, -9 ; pop rbp ; ret
0x000000000041393a : adc al, 0x25 ; ret 0x422f
0x0000000000413937 : adc byte ptr [rax - 0x73], cl ; adc al, 0x25 ; ret 0x422f
0x0000000000413895 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000412570 : adc dword ptr [rax + 0x31], ecx ; ret 0x8948
0x00000000004202ab : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401689 : adc eax, dword ptr [rbx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000400286 : adc edi, ebp ; xor eax, 0x3ac4b012 ; ret 0x2409
0x0000000000423b4f : add ah, ch ; loope 0x423b56 ; jmp rsp
0x000000000042362f : add ah, ch ; xor al, 0xfffffffffffffffe ; jmp rsp
0x00000000004047ad : add al, -0x36 ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040fa81 : add al, -0x36 ; add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x0000000000406a82 : add al, 0x25 ; movsxd rsp, dword ptr [rdx] ; pop rbp ; ret
0x00000000004249f7 : add al, bh ; add edi, edi ; jmp rcx
0x0000000000424847 : add al, bl ; fsin ; jmp rsp
0x0000000000423e4d : add al, byte ptr [rax] ; add byte ptr [rax], al ; sub al, -2 ; call qword ptr [rsi]
0x000000000042227f : add bl, dh ; ret
0x00000000004053a9 : add byte ptr [r8], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x00000000004210ab : add byte ptr [r8], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x000000000041e0b3 : add byte ptr [rax - 0x73], cl ; clc ; pop rbx ; pop rbp ; ret
0x0000000000403589 : add byte ptr [rax - 0x73], cl ; xor al, 0x25 ; ret 0x422f
0x000000000041a1f7 : add byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x0000000000414940 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000040ed10 : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000418ba9 : add byte ptr [rax - 0x77], cl ; or cl, ch ; ret
0x00000000004024fe : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x00000000004245ef : add byte ptr [rax], ah ; mov dl, -2 ; jmp rsi
0x000000000042534f : add byte ptr [rax], ah ; ret
0x000000000042227d : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000041a1f5 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x0000000000417508 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000418ba7 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; or cl, ch ; ret
0x00000000004024fc : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000042227b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004004a8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004004aa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000042238a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4228
0x0000000000422119 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000416c69 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000041a1f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004004ac : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000042238c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4228
0x00000000004035c6 : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x8141
0x000000000040d248 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000405770 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004049b4 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7538b], cl ; ret 0xb0
0x0000000000401edb : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret
0x0000000000409cab : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x844
0x0000000000401cd5 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x0000000000413b4a : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x0000000000402772 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x125
0x0000000000417f0f : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x0000000000402780 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000401ed0 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x000000000040fd9e : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8b44
0x000000000040d1e8 : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x51], al ; ret
0x0000000000425349 : add byte ptr [rax], al ; add byte ptr [rdi + rdx], dh ; add byte ptr [rax], ah ; ret
0x0000000000420fe0 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x00000000004210ac : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x000000000040278a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret
0x0000000000407385 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x0000000000421aa2 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x0000000000421162 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x0000000000417f7c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret
0x0000000000401c5b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x125
0x000000000041c16a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000401ca0 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x0000000000413a09 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x48b
0x000000000040f9e4 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x000000000040532b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x9588
0x000000000041ef86 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x0000000000414741 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x0000000000405caf : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040efbc : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x00000000004034d4 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x48b
0x0000000000409ca1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x000000000040e1e7 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004074fd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xfe81
0x0000000000423e4e : add byte ptr [rax], al ; add byte ptr [rsi + rdi*8], ch ; call qword ptr [rsi]
0x0000000000403e76 : add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000415eda : add byte ptr [rax], al ; add cl, ch ; ret 0
0x000000000040b211 : add byte ptr [rax], al ; add cl, ch ; ret 0x13
0x0000000000409a23 : add byte ptr [rax], al ; add cl, ch ; ret 0x2a
0x000000000041f50a : add byte ptr [rax], al ; add cl, ch ; ret 0xb
0x000000000040ab0e : add byte ptr [rax], al ; add cl, ch ; ret 1
0x000000000041087a : add byte ptr [rax], al ; add cl, ch ; ret 6
0x0000000000406bff : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401ef5 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041b774 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402170 : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040168b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000424b36 : add byte ptr [rax], al ; and dil, dil ; call qword ptr [rax]
0x00000000004249f6 : add byte ptr [rax], al ; clc ; add edi, edi ; jmp rcx
0x0000000000424056 : add byte ptr [rax], al ; cmp byte ptr [rdi - 2], al ; call rbx
0x0000000000424eba : add byte ptr [rax], al ; in al, 0x12 ; add byte ptr [rax], al ; rcr byte ptr [rsi - 1] ; call rcx
0x0000000000423b4e : add byte ptr [rax], al ; in al, dx ; loope 0x423b57 ; jmp rsp
0x000000000042362e : add byte ptr [rax], al ; in al, dx ; xor al, 0xfffffffffffffffe ; jmp rsp
0x0000000000424842 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; or al, 0 ; add al, bl ; fsin ; jmp rsp
0x0000000000423e4a : add byte ptr [rax], al ; je 0x423e59 ; add byte ptr [rax], al ; add byte ptr [rsi + rdi*8], ch ; call qword ptr [rsi]
0x0000000000424052 : add byte ptr [rax], al ; jl 0x424063 ; add byte ptr [rax], al ; cmp byte ptr [rdi - 2], al ; call rbx
0x00000000004017e9 : add byte ptr [rax], al ; jmp 0x4016a9
0x0000000000423a8e : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; mov ch, -1 ; jmp rsp
0x0000000000420e9c : add byte ptr [rax], al ; mov al, sil ; movzx eax, al ; pop rbp ; ret
0x0000000000420ced : add byte ptr [rax], al ; mov ax, si ; movzx eax, ax ; pop rbp ; ret
0x0000000000408b12 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000042211b : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000416c6b : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000424a92 : add byte ptr [rax], al ; mov esp, 0xb800000e ; or al, 0xffffffffffffffff ; call rcx
0x0000000000408782 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000041a629 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000041a1f6 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040585c : add byte ptr [rax], al ; mov rdx, rax ; mov al, 0 ; call 0x401a99
0x0000000000417509 : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000424c86 : add byte ptr [rax], al ; pop rax ; cmp bh, bh ; call qword ptr [rdx]
0x0000000000404942 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040d249 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000420095 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000405771 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000424b32 : add byte ptr [rax], al ; pop rsp ; sldt word ptr [rax] ; and dil, dil ; call qword ptr [rax]
0x0000000000424ebe : add byte ptr [rax], al ; rcr byte ptr [rsi - 1] ; call rcx
0x00000000004004ae : add byte ptr [rax], al ; ret
0x000000000042238e : add byte ptr [rax], al ; ret 0x4228
0x000000000042532e : add byte ptr [rax], al ; ret 0xffff
0x00000000004249f2 : add byte ptr [rax], al ; sbb al, 0xe ; add byte ptr [rax], al ; clc ; add edi, edi ; jmp rcx
0x0000000000423e4f : add byte ptr [rax], al ; sub al, -2 ; call qword ptr [rsi]
0x00000000004249b7 : add byte ptr [rax], cl ; add edi, edi ; call rsp
0x00000000004035c8 : add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x8141
0x0000000000423acf : add byte ptr [rbp + rdx*8 - 1], ch ; jmp rsp
0x00000000004035be : add byte ptr [rbp - 0x77], al ; ret 0x8141
0x000000000040d24a : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000420096 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000405772 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000403c40 : add byte ptr [rbx - 0x1b34b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004042c0 : add byte ptr [rbx - 0x1c34b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004049b6 : add byte ptr [rbx - 0x76b7538b], cl ; ret 0xb0
0x0000000000405507 : add byte ptr [rbx - 0x8f4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000405899 : add byte ptr [rbx - 0xbb4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000405cbb : add byte ptr [rcx + 0xf], al ; pushfq ; mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x0000000000401edd : add byte ptr [rcx + 0xf], al ; pushfq ; ret
0x0000000000409cad : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x844
0x0000000000401cd7 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x0000000000413b4c : add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x0000000000402774 : add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x125
0x0000000000417f11 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x0000000000402782 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000401ed2 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x000000000040fda0 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8b44
0x000000000040d5bc : add byte ptr [rcx + 0xfe], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040ddf8 : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000409c9d : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x0000000000413b42 : add byte ptr [rcx - 0x77], al ; ret
0x000000000040276a : add byte ptr [rcx - 0x77], al ; ret 0x8141
0x0000000000423727 : add byte ptr [rcx - 2], ch ; call rsp
0x0000000000401c08 : add byte ptr [rcx], al ; ret
0x000000000040d1ea : add byte ptr [rdi + rcx - 0x51], al ; ret
0x000000000042534b : add byte ptr [rdi + rdx], dh ; add byte ptr [rax], ah ; ret
0x0000000000420fe2 : add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x00000000004210ae : add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x000000000040278c : add byte ptr [rdi], cl ; pushfq ; ret
0x0000000000407387 : add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x0000000000421aa4 : add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x0000000000421164 : add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x0000000000417f7e : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret
0x0000000000401c5d : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x125
0x000000000041c16c : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000401ca2 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x0000000000413a0b : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x48b
0x000000000040f9e6 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x000000000040532d : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x9588
0x000000000041ef88 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x0000000000414743 : add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x0000000000405cb1 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040efbe : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x00000000004034d6 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x48b
0x0000000000409ca3 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x000000000040e1e9 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004074ff : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xfe81
0x0000000000423e4b : add byte ptr [rdx + rax], dh ; add byte ptr [rax], al ; sub al, -2 ; call qword ptr [rsi]
0x00000000004190ef : add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x00000000004249f3 : add byte ptr [rsi + rcx], bl ; add byte ptr [rax], al ; clc ; add edi, edi ; jmp rcx
0x0000000000423e50 : add byte ptr [rsi + rdi*8], ch ; call qword ptr [rsi]
0x0000000000422387 : add byte ptr [rsi], ch ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4228
0x0000000000424843 : add byte ptr [rsp + rcx], ch ; add al, bl ; fsin ; jmp rsp
0x0000000000403e78 : add cl, ch ; ret
0x0000000000415edc : add cl, ch ; ret 0
0x000000000040b213 : add cl, ch ; ret 0x13
0x0000000000409a25 : add cl, ch ; ret 0x2a
0x000000000041f50c : add cl, ch ; ret 0xb
0x000000000040ab10 : add cl, ch ; ret 1
0x000000000041087c : add cl, ch ; ret 6
0x000000000040ddca : add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x000000000040de6c : add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x0000000000406931 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000420094 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040c470 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000423584 : add dword ptr [rbx], ebx ; add edi, dword ptr [rbx] ; and byte ptr [rsi], al ; add byte ptr [rax], al ; ret
0x0000000000407cbc : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041cdb0 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004211c5 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000406a3f : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x000000000041af38 : add dword ptr [rdi], ecx ; ror dword ptr cs:[rdi], -0x69 ; ret 0x348b
0x0000000000403e72 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret
0x0000000000415ed6 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0
0x000000000040b20d : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x0000000000409a1f : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x000000000041f506 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0xb
0x000000000040ab0a : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 1
0x0000000000410876 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 6
0x000000000041dc87 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x348b
0x0000000000401c04 : add eax, 0x22472e ; add ebx, esi ; ret
0x0000000000403e75 : add eax, 0xe9000000 ; ret
0x0000000000415ed9 : add eax, 0xe9000000 ; ret 0
0x000000000040b210 : add eax, 0xe9000000 ; ret 0x13
0x0000000000409a22 : add eax, 0xe9000000 ; ret 0x2a
0x000000000041f509 : add eax, 0xe9000000 ; ret 0xb
0x000000000040ab0d : add eax, 0xe9000000 ; ret 1
0x0000000000410879 : add eax, 0xe9000000 ; ret 6
0x0000000000401bcb : add eax, edx ; sar rax, 1 ; jne 0x401bdc ; pop rbp ; ret
0x0000000000401c09 : add ebx, esi ; ret
0x0000000000423586 : add edi, dword ptr [rbx] ; and byte ptr [rsi], al ; add byte ptr [rax], al ; ret
0x00000000004249b9 : add edi, edi ; call rsp
0x00000000004249f9 : add edi, edi ; jmp rcx
0x0000000000400285 : add edx, dword ptr [rbx] ; std ; xor eax, 0x3ac4b012 ; ret 0x2409
0x0000000000401f69 : add esp, 0x10 ; pop rbp ; ret
0x0000000000413893 : add esp, 0x110 ; pop rbp ; ret
0x0000000000410eef : add esp, 0x140 ; pop rbp ; ret
0x000000000040c46d : add esp, 0x178 ; pop rbx ; pop rbp ; ret
0x0000000000414b2c : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000420940 : add esp, 0x1e0 ; pop rbp ; ret
0x0000000000401ef8 : add esp, 0x20 ; pop rbp ; ret
0x00000000004047b0 : add esp, 0x30 ; pop rbp ; ret
0x0000000000402173 : add esp, 0x40 ; pop rbp ; ret
0x000000000041466f : add esp, 0x40 ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004081e2 : add esp, 0x50 ; pop rbp ; ret
0x000000000040673d : add esp, 0x50 ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000404dd5 : add esp, 0x60 ; pop rbp ; ret
0x000000000040fa84 : add esp, 0x68 ; pop rbx ; pop rbp ; ret
0x000000000040d802 : add esp, 0x70 ; pop rbp ; ret
0x000000000040c88e : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040e940 : add esp, 0x80 ; pop rbp ; ret
0x000000000040493e : add esp, 0xb0 ; pop rbp ; ret
0x000000000040576d : add esp, 0xb8 ; pop rbx ; pop rbp ; ret
0x000000000041ea87 : add esp, 0xc0 ; pop rbp ; ret
0x000000000041d8e8 : add esp, 0xd8 ; pop rbx ; pop rbp ; ret
0x0000000000412022 : add esp, 0xe0 ; pop rbp ; ret
0x0000000000416a97 : add esp, 0xf0 ; pop rbp ; ret
0x000000000040168e : add esp, 8 ; ret
0x0000000000401bca : add rax, rdx ; sar rax, 1 ; jne 0x401bdd ; pop rbp ; ret
0x0000000000401f68 : add rsp, 0x10 ; pop rbp ; ret
0x0000000000413892 : add rsp, 0x110 ; pop rbp ; ret
0x0000000000410eee : add rsp, 0x140 ; pop rbp ; ret
0x000000000040c46c : add rsp, 0x178 ; pop rbx ; pop rbp ; ret
0x0000000000414b2b : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000042093f : add rsp, 0x1e0 ; pop rbp ; ret
0x0000000000401ef7 : add rsp, 0x20 ; pop rbp ; ret
0x00000000004047af : add rsp, 0x30 ; pop rbp ; ret
0x0000000000402172 : add rsp, 0x40 ; pop rbp ; ret
0x000000000041466e : add rsp, 0x40 ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004081e1 : add rsp, 0x50 ; pop rbp ; ret
0x000000000040673c : add rsp, 0x50 ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000404dd4 : add rsp, 0x60 ; pop rbp ; ret
0x000000000040fa83 : add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x000000000040d801 : add rsp, 0x70 ; pop rbp ; ret
0x000000000040c88d : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040e93f : add rsp, 0x80 ; pop rbp ; ret
0x000000000040493d : add rsp, 0xb0 ; pop rbp ; ret
0x000000000040576c : add rsp, 0xb8 ; pop rbx ; pop rbp ; ret
0x000000000041ea86 : add rsp, 0xc0 ; pop rbp ; ret
0x000000000041d8e7 : add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x0000000000412021 : add rsp, 0xe0 ; pop rbp ; ret
0x0000000000416a96 : add rsp, 0xf0 ; pop rbp ; ret
0x000000000040168d : add rsp, 8 ; ret
0x00000000004211c4 : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000406a3e : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401c07 : and al, byte ptr [rax] ; add ebx, esi ; ret
0x00000000004023c7 : and al, byte ptr [rdx] ; jmp rcx
0x0000000000424b39 : and bh, bh ; call qword ptr [rax]
0x0000000000423d91 : and bh, dh ; jmp rax
0x00000000004175aa : and byte ptr [r15], cl ; xchg eax, esp ; ret 0x348b
0x00000000004175ab : and byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x0000000000423588 : and byte ptr [rsi], al ; add byte ptr [rax], al ; ret
0x0000000000424b38 : and dil, dil ; call qword ptr [rax]
0x000000000041a6a5 : and eax, 0x423540 ; mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x000000000040def7 : and eax, 0x48ffffee ; add esp, 0x20 ; pop rbp ; ret
0x0000000000406a5f : and eax, 0x626340 ; pop rbp ; ret
0x0000000000406a83 : and eax, 0x626348 ; pop rbp ; ret
0x0000000000412215 : and edi, dword ptr [rbp - 0x10] ; mov rax, rdi ; pop rbp ; ret
0x0000000000401c06 : and r8b, byte ptr [r8] ; add ebx, esi ; ret
0x0000000000401c05 : and r8b, byte ptr cs:[r8] ; add ebx, esi ; ret
0x0000000000412214 : and rdi, qword ptr [rbp - 0x10] ; mov rax, rdi ; pop rbp ; ret
0x0000000000415768 : call 0x401972
0x0000000000405863 : call 0x401a92
0x000000000040c709 : call 0xffffffffe9035059
0x000000000040c708 : call 0xffffffffe903505a
0x000000000041b524 : call 0xffffffffff7b4075
0x000000000041b523 : call 0xffffffffff7b4076
0x0000000000422259 : call qword ptr [r12 + rbx*8]
0x0000000000423ed3 : call qword ptr [rax]
0x00000000004244ab : call qword ptr [rcx]
0x0000000000424323 : call qword ptr [rdi]
0x0000000000424c8b : call qword ptr [rdx]
0x0000000000423e53 : call qword ptr [rsi]
0x000000000042225a : call qword ptr [rsp + rbx*8]
0x000000000041982d : call r8
0x0000000000401c2d : call rax
0x000000000042405b : call rbx
0x000000000041962e : call rcx
0x0000000000411392 : call rdx
0x00000000004235b3 : call rsp
0x00000000004249f8 : clc ; add edi, edi ; jmp rcx
0x000000000041ed58 : clc ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000413891 : clc ; add rsp, 0x110 ; pop rbp ; ret
0x0000000000419ae6 : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000413ab1 : clc ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041df22 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040e93e : clc ; add rsp, 0x80 ; pop rbp ; ret
0x000000000040493c : clc ; add rsp, 0xb0 ; pop rbp ; ret
0x000000000041ea85 : clc ; add rsp, 0xc0 ; pop rbp ; ret
0x0000000000412213 : clc ; and rdi, qword ptr [rbp - 0x10] ; mov rax, rdi ; pop rbp ; ret
0x0000000000401bcf : clc ; jne 0x401bd8 ; pop rbp ; ret
0x0000000000410fa3 : clc ; mov qword ptr [rdi + 0x10], rsi ; pop rbp ; ret
0x000000000041eb1e : clc ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000410f83 : clc ; mov qword ptr [rdi + 8], rsi ; pop rbp ; ret
0x000000000040fb43 : clc ; mov qword ptr [rdi + rsi*8], rdx ; pop rbp ; ret
0x00000000004186eb : clc ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000041870b : clc ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000041872b : clc ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000040e5bb : clc ; mov rax, qword ptr [rdi] ; pop rbp ; ret
0x000000000040e5b7 : clc ; mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi] ; pop rbp ; ret
0x0000000000415763 : clc ; mov rsi, qword ptr [rbp - 0x10] ; call 0x401977
0x000000000041f563 : clc ; or dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; xor al, 0x25 ; ret 0x422f
0x000000000040e9c2 : clc ; pop rbp ; ret
0x00000000004068b1 : clc ; pop rbx ; pop rbp ; ret
0x000000000040e9bb : clc ; shl rdi, 8 ; mov rax, rdi ; pop rbp ; ret
0x0000000000401f67 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004061c8 : cld ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004221f6 : cld ; mov dword ptr [rbp - 0xc], eax ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000416c6f : cld ; pop rbp ; ret
0x0000000000421e06 : cli ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040fd9c : cmp al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8b44
0x0000000000417939 : cmp al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000424c89 : cmp bh, bh ; call qword ptr [rdx]
0x000000000042128e : cmp byte ptr [rax], ah ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x0000000000401c9e : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x00000000004194dd : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000420fde : cmp byte ptr [rax], dh ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x00000000004216ce : cmp byte ptr [rcx], ah ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x0000000000424058 : cmp byte ptr [rdi - 2], al ; call rbx
0x000000000041a325 : cmp dword ptr [rax - 0x75], ecx ; jne 0x41a30f ; call rax
0x000000000041c168 : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x000000000041500c : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x000000000040efba : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x000000000040cb9d : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401b8d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401ba0 ; pop rbp ; ret
0x0000000000404a5e : dec byte ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x0000000000405a06 : dec byte ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret
0x0000000000407224 : dec dword ptr [rax - 0x73] ; clc ; pop rbx ; pop rbp ; ret
0x0000000000404493 : dec dword ptr [rax - 0x73] ; xor al, 0x25 ; ret 0x422f
0x00000000004126c6 : dec dword ptr [rax - 0x75] ; adc dword ptr [rax + 0x31], ecx ; ret 0x8948
0x0000000000413e10 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; enter 0x422f, 0 ; jmp rcx
0x00000000004091d5 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; nop ; sub al, byte ptr [rdx] ; jmp rcx
0x0000000000416525 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; xor eax, dword ptr [rdx] ; jmp rcx
0x0000000000403c46 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000041fe04 : dec dword ptr [rax - 0x7f] ; ret 1
0x0000000000401cd3 : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x000000000040fb90 : div dword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000040fb8f : div qword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000040c7bb : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000041ba54 : enter -0x74b8, 0x32 ; mov rdi, qword ptr [rsi] ; call rcx
0x000000000041a322 : enter -0x74b8, 0x39 ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x000000000040e28a : enter -0x7cb8, -0x3c ; pop rbp ; ret
0x0000000000405327 : enter 0x3d48, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x9588
0x0000000000413e15 : enter 0x422f, 0 ; jmp rcx
0x000000000041d8ea : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000041eee9 : fbld dword ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000041eeea : fbld dword ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x0000000000423b11 : fcos ; jmp rsp
0x00000000004084c2 : fiadd dword ptr [rcx - 0xa] ; ret 0x4001
0x0000000000405be9 : fiadd dword ptr [rcx - 0xa] ; ret 0x4801
0x0000000000402066 : fiadd dword ptr [rcx - 0xa] ; ret 0x8801
0x0000000000401ee4 : fiadd dword ptr [rcx - 0xa] ; ret 0x8901
0x0000000000403fd3 : fiadd dword ptr [rcx - 0xa] ; ret 0xf01
0x0000000000402792 : fild dword ptr [rcx - 0xa] ; ret
0x000000000040ae28 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000042225c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000424849 : fsin ; jmp rsp
0x0000000000414bb3 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004221f9 : hlt ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000401ba0 : hlt ; pop rbp ; mov edi, 0x6262e0 ; jmp rax
0x000000000042211f : hlt ; pop rbp ; ret
0x0000000000424ebc : in al, 0x12 ; add byte ptr [rax], al ; rcr byte ptr [rsi - 1] ; call rcx
0x0000000000413936 : in al, dx ; adc byte ptr [rax - 0x73], cl ; adc al, 0x25 ; ret 0x422f
0x0000000000423b50 : in al, dx ; loope 0x423b55 ; jmp rsp
0x0000000000408b16 : in al, dx ; pop rbp ; ret
0x0000000000423630 : in al, dx ; xor al, 0xfffffffffffffffe ; jmp rsp
0x000000000041acee : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000404b69 : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x000000000040d5be : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040cca3 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x00000000004084ac : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x000000000040ddfa : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000409c9f : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x00000000004210a8 : inc dword ptr [rcx + 0x41f9] ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x0000000000421a9e : inc dword ptr [rcx + 0x5af9] ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x000000000042115e : inc dword ptr [rcx + 0x5af9] ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x000000000042362b : inc esp ; or byte ptr [rax], al ; add ah, ch ; xor al, 0xfffffffffffffffe ; jmp rsp
0x0000000000423acb : inc esp ; sbb eax, dword ptr [rax] ; add byte ptr [rbp + rdx*8 - 1], ch ; jmp rsp
0x0000000000424844 : insb byte ptr [rdi], dx ; or al, 0 ; add al, bl ; fsin ; jmp rsp
0x0000000000414948 : int 0x80
0x0000000000401b93 : ja 0x401b9a ; pop rbp ; ret
0x0000000000410f86 : ja 0x410f93 ; pop rbp ; ret
0x0000000000410fa6 : ja 0x410fbb ; pop rbp ; ret
0x000000000041eb21 : ja 0x41eb6e ; pop rbp ; ret
0x0000000000401b9f : je 0x401b9d ; pop rbp ; mov edi, 0x6262e0 ; jmp rax
0x0000000000423e4c : je 0x423e57 ; add byte ptr [rax], al ; add byte ptr [rsi + rdi*8], ch ; call qword ptr [rsi]
0x000000000040e5ba : jge 0x40e5ba ; mov rax, qword ptr [rdi] ; pop rbp ; ret
0x000000000040fb42 : jge 0x40fb43 ; mov qword ptr [rdi + rsi*8], rdx ; pop rbp ; ret
0x0000000000410f82 : jge 0x410f83 ; mov qword ptr [rdi + 8], rsi ; pop rbp ; ret
0x0000000000410fa2 : jge 0x410fa3 ; mov qword ptr [rdi + 0x10], rsi ; pop rbp ; ret
0x0000000000412216 : jge 0x41220e ; mov rax, rdi ; pop rbp ; ret
0x0000000000415762 : jge 0x415764 ; mov rsi, qword ptr [rbp - 0x10] ; call 0x401978
0x00000000004186ea : jge 0x4186eb ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000041870a : jge 0x41870b ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000041872a : jge 0x41872b ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000041da70 : jge 0x41da63 ; mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000041eb1d : jge 0x41eb1e ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000424054 : jl 0x424061 ; add byte ptr [rax], al ; cmp byte ptr [rdi - 2], al ; call rbx
0x0000000000411390 : jle 0x4113a4 ; call rdx
0x00000000004017eb : jmp 0x4016a7
0x000000000040448f : jmp 0x4034c8
0x0000000000404564 : jmp 0x403f83
0x0000000000403585 : jmp 0x40449d
0x000000000041f562 : jmp 0x41ff68
0x000000000041b1e3 : jmp 0x49043b33
0x000000000041b325 : jmp 0x49043c75
0x000000000041d320 : jmp 0x49045c70
0x000000000041d38d : jmp 0x49045cdd
0x000000000041e65a : jmp 0x49046faa
0x000000000041e6c7 : jmp 0x49047017
0x0000000000425233 : jmp qword ptr [rbx]
0x00000000004041ad : jmp qword ptr [rcx]
0x0000000000425173 : jmp qword ptr [rdi]
0x0000000000401ba7 : jmp rax
0x00000000004023ca : jmp rcx
0x0000000000401be7 : jmp rdx
0x00000000004245f3 : jmp rsi
0x0000000000423633 : jmp rsp
0x0000000000401bd0 : jne 0x401bd7 ; pop rbp ; ret
0x000000000040fb91 : jne 0x40fb89 ; mov rax, rdx ; pop rbp ; ret
0x0000000000415766 : jne 0x41575c ; call 0x401974
0x0000000000419626 : jne 0x4195f0 ; mov r8, qword ptr [rsi] ; mov rsi, qword ptr [r8] ; call rcx
0x000000000041a328 : jne 0x41a30c ; call rax
0x0000000000423a11 : jno 0x423a14 ; call rsp
0x000000000040d804 : jo 0x40d865 ; ret
0x000000000041990f : jo 0x419928 ; mov qword ptr [rbp - 0x48], rdx ; call r8
0x000000000040c46f : js 0x40c478 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040c890 : js 0x40c8f0 ; pop rbp ; ret
0x000000000040d6a5 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000407093 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004068af : lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040d6a4 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004068ae : lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000423a90 : lodsb al, byte ptr [rsi] ; mov ch, -1 ; jmp rsp
0x0000000000420ad9 : loop 0x420b2b ; or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x0000000000420cb1 : loop 0x420d03 ; or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x0000000000423b51 : loope 0x423b54 ; jmp rsp
0x00000000004068ad : loopne 0x4068fe ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x00000000004068ac : loopne 0x4068ff ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040cccf : loopne 0x40cd20 ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040ccce : loopne 0x40cd21 ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040f7bf : loopne 0x40f812 ; lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004100d0 : loopne 0x410136 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041139c : loopne 0x411402 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000412024 : loopne 0x41202b ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000412175 : loopne 0x4121db ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000415815 : loopne 0x415865 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000415814 : loopne 0x415866 ; add esp, 0x20 ; pop rbp ; ret
0x000000000041b119 : loopne 0x41b17f ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000420942 : loopne 0x42094a ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000404940 : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000405861 : mov al, 0 ; call 0x401a94
0x00000000004081e0 : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040673b : mov al, 0x48 ; add esp, 0x50 ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000041eee8 : mov al, byte ptr [rbp - 0x21] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000418efc : mov al, byte ptr [rbp - 0x33] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000406a3b : mov al, byte ptr [rbp - 0xa] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000420f69 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000421e04 : mov al, byte ptr [rbp - 6] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000420e9f : mov al, dh ; movzx eax, al ; pop rbp ; ret
0x0000000000420e9e : mov al, sil ; movzx eax, al ; pop rbp ; ret
0x0000000000420cef : mov ax, si ; movzx eax, ax ; pop rbp ; ret
0x0000000000420cf3 : mov bh, -0x40 ; pop rbp ; ret
0x0000000000406a81 : mov byte ptr [0x626348], al ; pop rbp ; ret
0x0000000000405cbf : mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x0000000000403e71 : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret
0x000000000040b20c : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x0000000000409a1e : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x000000000040c9f6 : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 1
0x0000000000410875 : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 6
0x0000000000401c03 : mov byte ptr [rip + 0x22472e], 1 ; ret
0x0000000000423a91 : mov ch, -1 ; jmp rsp
0x0000000000407cbe : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041cdb2 : mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000420e37 : mov dh, -0x40 ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x00000000004211c7 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000406a41 : mov dh, -0x40 ; pop rbp ; ret
0x00000000004245f1 : mov dl, -2 ; jmp rsi
0x0000000000406a5d : mov dword ptr [0x626340], edi ; pop rbp ; ret
0x000000000040885a : mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004089a8 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000419826 : mov dword ptr [rbp - 0x30], eax ; mov qword ptr [rbp - 0x38], rdx ; call r8
0x000000000041982a : mov dword ptr [rbp - 0x38], edx ; call r8
0x0000000000419912 : mov dword ptr [rbp - 0x48], edx ; call r8
0x0000000000414bb1 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004221f7 : mov dword ptr [rbp - 0xc], eax ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000401f65 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041a6aa : mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x0000000000410fa5 : mov dword ptr [rdi + 0x10], esi ; pop rbp ; ret
0x000000000041eb20 : mov dword ptr [rdi + 0x48], esi ; pop rbp ; ret
0x0000000000410f85 : mov dword ptr [rdi + 8], esi ; pop rbp ; ret
0x000000000040fb45 : mov dword ptr [rdi + rsi*8], edx ; pop rbp ; ret
0x00000000004047ac : mov dword ptr [rdx + rcx*8], eax ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040fa80 : mov dword ptr [rdx + rcx*8], eax ; add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x000000000040576f : mov eax, 0x5b000000 ; pop rbp ; ret
0x000000000040c88c : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x000000000040e53d : mov eax, 0xf0658d48 ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000041e0b2 : mov eax, dword ptr [rax] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040ed0f : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000408788 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040e2e6 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406f64 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041734e : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000408785 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040d43a : mov eax, dword ptr [rbp - 0x10] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000406e53 : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000408b14 : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000041017e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040873d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000408854 : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040da04 : mov eax, dword ptr [rbp - 0x18] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000415813 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004068ab : mov eax, dword ptr [rbp - 0x20] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040ebf3 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041e334 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004089aa : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000041783b : mov eax, dword ptr [rbp - 0x30] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041ad18 : mov eax, dword ptr [rbp - 0x30] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040e288 : mov eax, dword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040c88a : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004081de : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000404dd1 : mov eax, dword ptr [rbp - 0x60] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000042211d : mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x00000000004061c6 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000416c6d : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000041ed56 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000419ae4 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000413aaf : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041df20 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041a1f9 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004186ed : mov eax, dword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000041870d : mov eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000041872d : mov eax, dword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000040e5bd : mov eax, dword ptr [rdi] ; pop rbp ; ret
0x0000000000419629 : mov eax, dword ptr [rsi] ; mov rsi, qword ptr [r8] ; call rcx
0x000000000040e9c1 : mov eax, edi ; pop rbp ; ret
0x000000000040fb94 : mov eax, edx ; pop rbp ; ret
0x0000000000420cf0 : mov eax, esi ; movzx eax, ax ; pop rbp ; ret
0x0000000000420b13 : mov eax, esi ; pop rbp ; ret
0x0000000000401c2b : mov ebp, esp ; call rax
0x0000000000401b91 : mov ebp, esp ; ja 0x401b9c ; pop rbp ; ret
0x00000000004023c3 : mov ecx, dword ptr [rax*8 + 0x4222e0] ; jmp rcx
0x00000000004091d7 : mov ecx, dword ptr [rax*8 + 0x422a90] ; jmp rcx
0x0000000000409cf1 : mov ecx, dword ptr [rax*8 + 0x422ad8] ; jmp rcx
0x0000000000413e12 : mov ecx, dword ptr [rax*8 + 0x422fc8] ; jmp rcx
0x0000000000416527 : mov ecx, dword ptr [rax*8 + 0x423340] ; jmp rcx
0x00000000004164a7 : mov ecx, dword ptr [rax*8 + 0x4233a0] ; jmp rcx
0x0000000000408857 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000041b612 : mov ecx, dword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000041b522 : mov ecx, dword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000041da73 : mov ecx, dword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000041dd3a : mov ecx, dword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000420b3d : mov ecx, eax ; shl edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000420b0d : mov ecx, eax ; shr edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000401c25 : mov edi, 0x625e20 ; mov rbp, rsp ; call rax
0x0000000000401ba2 : mov edi, 0x6262e0 ; jmp rax
0x0000000000401be2 : mov edi, 0x6262e0 ; jmp rdx
0x0000000000410fa1 : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x10], rsi ; pop rbp ; ret
0x000000000041eb1c : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000410f81 : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 8], rsi ; pop rbp ; ret
0x000000000040fb41 : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + rsi*8], rdx ; pop rbp ; ret
0x00000000004186e9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000418709 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000418729 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000040e5b9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi] ; pop rbp ; ret
0x0000000000415761 : mov edi, dword ptr [rbp - 8] ; mov rsi, qword ptr [rbp - 0x10] ; call 0x401979
0x000000000041b526 : mov edi, dword ptr [rcx] ; call rax
0x000000000041a324 : mov edi, dword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x000000000041138f : mov edi, dword ptr [rsi + 0x10] ; call rdx
0x000000000041ba59 : mov edi, dword ptr [rsi] ; call rcx
0x0000000000422257 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000422256 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000041ba52 : mov edx, dword ptr [rbp - 0x38] ; mov rsi, qword ptr [rdx] ; mov rdi, qword ptr [rsi] ; call rcx
0x000000000040585f : mov edx, eax ; mov al, 0 ; call 0x401a96
0x000000000041990e : mov esi, dword ptr [rax + 0x10] ; mov qword ptr [rbp - 0x48], rdx ; call r8
0x000000000041962c : mov esi, dword ptr [rax] ; call rcx
0x000000000041138c : mov esi, dword ptr [rax] ; mov rdi, qword ptr [rsi + 0x10] ; call rdx
0x0000000000415765 : mov esi, dword ptr [rbp - 0x10] ; call 0x401975
0x000000000041a327 : mov esi, dword ptr [rbp - 0x20] ; call rax
0x0000000000419625 : mov esi, dword ptr [rbp - 0x40] ; mov r8, qword ptr [rsi] ; mov rsi, qword ptr [r8] ; call rcx
0x000000000041da77 : mov esi, dword ptr [rcx] ; call rax
0x000000000041ba56 : mov esi, dword ptr [rdx] ; mov rdi, qword ptr [rsi] ; call rcx
0x0000000000401be0 : mov esi, eax ; mov edi, 0x6262e0 ; jmp rdx
0x0000000000424a94 : mov esp, 0xb800000e ; or al, 0xffffffffffffffff ; call rcx
0x000000000040d43e : mov esp, ebp ; pop rbp ; ret
0x0000000000406a5c : mov qword ptr [0x626340], rdi ; pop rbp ; ret
0x0000000000419825 : mov qword ptr [rbp - 0x30], rax ; mov qword ptr [rbp - 0x38], rdx ; call r8
0x0000000000419829 : mov qword ptr [rbp - 0x38], rdx ; call r8
0x0000000000419911 : mov qword ptr [rbp - 0x48], rdx ; call r8
0x0000000000410fa4 : mov qword ptr [rdi + 0x10], rsi ; pop rbp ; ret
0x000000000041eb1f : mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000410f84 : mov qword ptr [rdi + 8], rsi ; pop rbp ; ret
0x000000000040fb44 : mov qword ptr [rdi + rsi*8], rdx ; pop rbp ; ret
0x00000000004047ab : mov qword ptr [rdx + rcx*8], rax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000419628 : mov r8, qword ptr [rsi] ; mov rsi, qword ptr [r8] ; call rcx
0x00000000004081df : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000040c88b : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x000000000041e0b1 : mov rax, qword ptr [rax] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040ed0e : mov rax, qword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040e2e5 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406f63 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000408784 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040d439 : mov rax, qword ptr [rbp - 0x10] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000406e52 : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000041017d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040873c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040da03 : mov rax, qword ptr [rbp - 0x18] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000415812 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040ebf2 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041e333 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041a62b : mov rax, qword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040e287 : mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004081dd : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000404dd0 : mov rax, qword ptr [rbp - 0x60] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041ed55 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000419ae3 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000413aae : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041df1f : mov rax, qword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041a1f8 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004186ec : mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000041870c : mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000041872c : mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000040e5bc : mov rax, qword ptr [rdi] ; pop rbp ; ret
0x000000000040e9c0 : mov rax, rdi ; pop rbp ; ret
0x000000000040fb93 : mov rax, rdx ; pop rbp ; ret
0x0000000000401c2a : mov rbp, rsp ; call rax
0x0000000000401b90 : mov rbp, rsp ; ja 0x401b9d ; pop rbp ; ret
0x00000000004023c2 : mov rcx, qword ptr [rax*8 + 0x4222e0] ; jmp rcx
0x00000000004091d6 : mov rcx, qword ptr [rax*8 + 0x422a90] ; jmp rcx
0x0000000000409cf0 : mov rcx, qword ptr [rax*8 + 0x422ad8] ; jmp rcx
0x0000000000413e11 : mov rcx, qword ptr [rax*8 + 0x422fc8] ; jmp rcx
0x0000000000416526 : mov rcx, qword ptr [rax*8 + 0x423340] ; jmp rcx
0x00000000004164a6 : mov rcx, qword ptr [rax*8 + 0x4233a0] ; jmp rcx
0x000000000041b611 : mov rcx, qword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000041b521 : mov rcx, qword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x000000000041da72 : mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000041dd39 : mov rcx, qword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000410fa0 : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x10], rsi ; pop rbp ; ret
0x000000000041eb1b : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000410f80 : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 8], rsi ; pop rbp ; ret
0x000000000040fb40 : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + rsi*8], rdx ; pop rbp ; ret
0x00000000004186e8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000418708 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000418728 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000040e5b8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi] ; pop rbp ; ret
0x000000000041b525 : mov rdi, qword ptr [rcx] ; call rax
0x000000000041a323 : mov rdi, qword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x000000000041138e : mov rdi, qword ptr [rsi + 0x10] ; call rdx
0x000000000041ba58 : mov rdi, qword ptr [rsi] ; call rcx
0x000000000040585e : mov rdx, rax ; mov al, 0 ; call 0x401a97
0x000000000041962b : mov rsi, qword ptr [r8] ; call rcx
0x000000000041990d : mov rsi, qword ptr [rax + 0x10] ; mov qword ptr [rbp - 0x48], rdx ; call r8
0x000000000041138b : mov rsi, qword ptr [rax] ; mov rdi, qword ptr [rsi + 0x10] ; call rdx
0x0000000000415764 : mov rsi, qword ptr [rbp - 0x10] ; call 0x401976
0x000000000041a326 : mov rsi, qword ptr [rbp - 0x20] ; call rax
0x000000000041da76 : mov rsi, qword ptr [rcx] ; call rax
0x000000000041ba55 : mov rsi, qword ptr [rdx] ; mov rdi, qword ptr [rsi] ; call rcx
0x0000000000401bdf : mov rsi, rax ; mov edi, 0x6262e0 ; jmp rdx
0x000000000040d43d : mov rsp, rbp ; pop rbp ; ret
0x0000000000406a84 : movsxd rsp, dword ptr [rdx] ; pop rbp ; ret
0x0000000000407cbd : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041cdb1 : movzx eax, al ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000420e36 : movzx eax, al ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x00000000004211c6 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000406a40 : movzx eax, al ; pop rbp ; ret
0x0000000000420cf2 : movzx eax, ax ; pop rbp ; ret
0x0000000000406a3c : mul byte ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x0000000000406a3d : mul byte ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x00000000004091da : nop ; sub al, byte ptr [rdx] ; jmp rcx
0x0000000000422278 : nop dword ptr [rax + rax] ; ret
0x0000000000424845 : or al, 0 ; add al, bl ; fsin ; jmp rsp
0x0000000000423725 : or al, 0 ; add byte ptr [rcx - 2], ch ; call rsp
0x0000000000413e13 : or al, 0xffffffffffffffc5 ; enter 0x422f, 0 ; jmp rcx
0x00000000004091d8 : or al, 0xffffffffffffffc5 ; nop ; sub al, byte ptr [rdx] ; jmp rcx
0x0000000000416528 : or al, 0xffffffffffffffc5 ; xor eax, dword ptr [rdx] ; jmp rcx
0x0000000000424a99 : or al, 0xffffffffffffffff ; call rcx
0x00000000004245ed : or al, byte ptr [rax] ; add byte ptr [rax], ah ; mov dl, -2 ; jmp rsi
0x000000000040ca59 : or byte ptr [r15], cl ; xchg eax, ebp ; ret 0x348b
0x0000000000419a40 : or byte ptr [r15], cl ; xchg eax, edx ; ret 0x348b
0x000000000041dc83 : or byte ptr [r8 + 0x3b], cl ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x348b
0x000000000040ae23 : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000041dc84 : or byte ptr [rax + 0x3b], cl ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x348b
0x000000000040ae24 : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x00000000004041a4 : or byte ptr [rax - 0x75], 0x95 ; push -0x17000001 ; jmp qword ptr [rcx]
0x000000000041138a : or byte ptr [rax - 0x75], cl ; xor byte ptr [rax - 0x75], cl ; jle 0x4113aa ; call rdx
0x000000000040e9bf : or byte ptr [rax - 0x77], cl ; clc ; pop rbp ; ret
0x000000000042362d : or byte ptr [rax], al ; add ah, ch ; xor al, 0xfffffffffffffffe ; jmp rsp
0x000000000042128c : or byte ptr [rcx + 0x2038], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x00000000004216cc : or byte ptr [rcx + 0x2138], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000041473d : or byte ptr [rcx + 0x28f9], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x0000000000420fdc : or byte ptr [rcx + 0x3038], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x0000000000401c9c : or byte ptr [rcx + 0x38], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x00000000004215cc : or byte ptr [rcx + 0x6138], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000041ef82 : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x000000000040ca5a : or byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x0000000000419a41 : or byte ptr [rdi], cl ; xchg eax, edx ; ret 0x348b
0x000000000040ddcd : or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x000000000040de6f : or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x0000000000418bac : or cl, ch ; ret
0x000000000041f564 : or dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; xor al, 0x25 ; ret 0x422f
0x00000000004154df : or eax, 0x48fffff9 ; add esp, 0x30 ; pop rbp ; ret
0x0000000000413951 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408cdd : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040216e : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000420adb : or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x0000000000420b11 : or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000420ada : or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x000000000040e9be : out 8, eax ; mov rax, rdi ; pop rbp ; ret
0x0000000000420b10 : out dx, eax ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000405afa : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042226c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004100d2 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405afc : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042226e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405afe : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000422270 : pop r14 ; pop r15 ; ret
0x0000000000406741 : pop r14 ; pop rbp ; ret
0x0000000000405b00 : pop r15 ; pop rbp ; ret
0x0000000000422272 : pop r15 ; ret
0x0000000000424c88 : pop rax ; cmp bh, bh ; call qword ptr [rdx]
0x0000000000401c02 : pop rbp ; mov byte ptr [rip + 0x22472e], 1 ; ret
0x0000000000401ba1 : pop rbp ; mov edi, 0x6262e0 ; jmp rax
0x0000000000401bde : pop rbp ; mov rsi, rax ; mov edi, 0x6262e0 ; jmp rdx
0x000000000042226b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405afd : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042226f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401b95 : pop rbp ; ret
0x00000000004100d1 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000407096 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406740 : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000405773 : pop rbx ; pop rbp ; ret
0x0000000000405b01 : pop rdi ; pop rbp ; ret
0x0000000000422273 : pop rdi ; ret
0x0000000000421aa1 : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x0000000000421161 : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x0000000000405aff : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000422271 : pop rsi ; pop r15 ; ret
0x0000000000406742 : pop rsi ; pop rbp ; ret
0x000000000041af37 : pop rsp ; add dword ptr [rdi], ecx ; ror dword ptr cs:[rdi], -0x69 ; ret 0x348b
0x0000000000405afb : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042226d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004100d3 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004190f2 : pop rsp ; ret 0xf66
0x0000000000424b34 : pop rsp ; sldt word ptr [rax] ; and dil, dil ; call qword ptr [rax]
0x0000000000420fe4 : popfq ; ret 0x348b
0x00000000004210b0 : popfq ; ret 0xc8b
0x00000000004041a8 : push -0x17000001 ; jmp qword ptr [rcx]
0x00000000004235ab : push qword ptr [rsi + rax - 0x16440000] ; std ; call rsp
0x0000000000420093 : push rax ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x00000000004081e4 : push rax ; pop rbp ; ret
0x000000000040673f : push rax ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000041ba53 : push rbp ; enter -0x74b8, 0x32 ; mov rdi, qword ptr [rsi] ; call rcx
0x000000000040ae27 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000401c24 : push rbp ; mov edi, 0x625e20 ; mov rbp, rsp ; call rax
0x000000000040c7be : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000411389 : push rdx ; or byte ptr [rax - 0x75], cl ; xor byte ptr [rax - 0x75], cl ; jle 0x4113ab ; call rdx
0x0000000000405cbe : pushfq ; mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x0000000000401ee0 : pushfq ; ret
0x0000000000409cb0 : pushfq ; ret 0x844
0x0000000000401cda : pushfq ; ret 0x845
0x0000000000407389 : pushfq ; ret 0xd108
0x0000000000420b0e : rcl ebx, -0x11 ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000420b3e : rcl ebx, -0x19 ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000424ec0 : rcr byte ptr [rsi - 1] ; call rcx
0x00000000004004b0 : ret
0x0000000000415ede : ret 0
0x0000000000401c60 : ret 0x125
0x000000000040b215 : ret 0x13
0x00000000004019f2 : ret 0x2247
0x00000000004017f2 : ret 0x2248
0x000000000040028d : ret 0x2409
0x0000000000409a27 : ret 0x2a
0x0000000000401ca5 : ret 0x348b
0x000000000040ae40 : ret 0x3ae8
0x00000000004084c5 : ret 0x4001
0x0000000000422390 : ret 0x4228
0x000000000040358e : ret 0x422f
0x0000000000405bec : ret 0x4801
0x00000000004034d9 : ret 0x48b
0x000000000041c6cc : ret 0x48b0
0x000000000040595c : ret 0x48f0
0x000000000040db47 : ret 0x4cc0
0x000000000040598e : ret 0x4cf0
0x0000000000421aa7 : ret 0x5588
0x000000000040ddd0 : ret 0x7ae8
0x0000000000417f15 : ret 0x8041
0x0000000000401ed6 : ret 0x8141
0x000000000041b1e6 : ret 0x8348
0x0000000000409cb1 : ret 0x844
0x0000000000401cdb : ret 0x845
0x0000000000402069 : ret 0x8801
0x0000000000401ee7 : ret 0x8901
0x0000000000412573 : ret 0x8948
0x000000000040b19c : ret 0x89a5
0x000000000040f9e9 : ret 0x8b44
0x000000000040ae2b : ret 0x8b48
0x0000000000405330 : ret 0x9588
0x000000000041f50e : ret 0xb
0x0000000000402501 : ret 0xb0
0x000000000041b2be : ret 0xb948
0x0000000000401bc5 : ret 0xc148
0x000000000040750f : ret 0xc2f6
0x000000000041ef8b : ret 0xc8b
0x000000000040738a : ret 0xd108
0x000000000040e1ec : ret 0xd284
0x000000000040de72 : ret 0xd8e8
0x0000000000401c57 : ret 0xea81
0x000000000040c70c : ret 0xee8
0x0000000000403fd6 : ret 0xf01
0x00000000004190f3 : ret 0xf66
0x0000000000407502 : ret 0xfe81
0x000000000041b337 : ret 0xff3
0x000000000040456a : ret 0xfffa
0x000000000041576a : ret 0xfffe
0x0000000000405865 : ret 0xffff
0x0000000000404a99 : ret 1
0x0000000000423d04 : ret 4
0x000000000041087e : ret 6
0x000000000040c7c2 : ret 8
0x000000000041ad19 : ror byte ptr [r8 - 0x73], 1 ; clc ; pop rbx ; pop rbp ; ret
0x0000000000414943 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000401bcc : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401bdb ; pop rbp ; ret
0x0000000000420e38 : ror byte ptr [rax - 0x73], 0x65 ; clc ; pop rbx ; pop rbp ; ret
0x000000000041ad1a : ror byte ptr [rax - 0x73], 1 ; clc ; pop rbx ; pop rbp ; ret
0x00000000004211c8 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x0000000000414944 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000419627 : ror byte ptr [rbx + rcx*4 + 6], 0x49 ; mov esi, dword ptr [rax] ; call rcx
0x000000000040c7bf : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000418fdd : ror dword ptr [rcx - 0x7d], cl ; ret
0x000000000041af3b : ror dword ptr [rdi], -0x69 ; ret 0x348b
0x000000000041af3a : ror dword ptr cs:[rdi], -0x69 ; ret 0x348b
0x0000000000421aa6 : sahf ; ret 0x5588
0x0000000000421166 : sahf ; ret 0xc8b
0x0000000000409cb4 : sal dh, cl ; ret 0x8901
0x0000000000401bce : sar eax, 1 ; jne 0x401bd9 ; pop rbp ; ret
0x0000000000401bcd : sar rax, 1 ; jne 0x401bda ; pop rbp ; ret
0x00000000004249f4 : sbb al, 0xe ; add byte ptr [rax], al ; clc ; add edi, edi ; jmp rcx
0x0000000000408f50 : sbb cl, byte ptr [rcx - 0x7f] ; ret
0x0000000000417507 : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000423acd : sbb eax, dword ptr [rax] ; add byte ptr [rbp + rdx*8 - 1], ch ; jmp rsp
0x000000000040d1ed : scasd eax, dword ptr [rdi] ; ret
0x0000000000401c5f : scasd eax, dword ptr [rdi] ; ret 0x125
0x00000000004035cb : scasd eax, dword ptr [rdi] ; ret 0x8141
0x000000000041ad84 : sete al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041ad86 : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000419116 : shl dword ptr [rsi + 0xf], 0x5c ; ret 0xf66
0x000000000040e9bd : shl edi, 8 ; mov rax, rdi ; pop rbp ; ret
0x0000000000420b3f : shl edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000420ad8 : shl edx, cl ; or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x000000000040e9bc : shl rdi, 8 ; mov rax, rdi ; pop rbp ; ret
0x000000000040e9fc : shr byte ptr [rdi + rdi*8], -1 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000420b0f : shr edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000424b35 : sldt word ptr [rax] ; and dil, dil ; call qword ptr [rax]
0x00000000004210aa : stc ; add byte ptr [r8], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x0000000000421aa0 : stc ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x0000000000421160 : stc ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x00000000004235b2 : std ; call rsp
0x00000000004235aa : std ; push qword ptr [rsi + rax - 0x16440000] ; std ; call rsp
0x0000000000400287 : std ; xor eax, 0x3ac4b012 ; ret 0x2409
0x0000000000420f6b : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000423e51 : sub al, -2 ; call qword ptr [rsi]
0x00000000004091db : sub al, byte ptr [rdx] ; jmp rcx
0x00000000004222c1 : sub esp, 8 ; add rsp, 8 ; ret
0x00000000004222c0 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000042227a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000403e74 : test dword ptr [rip - 0x17000000], eax ; ret
0x0000000000415ed8 : test dword ptr [rip - 0x17000000], eax ; ret 0
0x000000000040b20f : test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x0000000000409a21 : test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x000000000041f508 : test dword ptr [rip - 0x17000000], eax ; ret 0xb
0x000000000040ab0c : test dword ptr [rip - 0x17000000], eax ; ret 1
0x0000000000410878 : test dword ptr [rip - 0x17000000], eax ; ret 6
0x0000000000415633 : test eax, 0x48fffffc ; add esp, 0x10 ; pop rbp ; ret
0x00000000004041a7 : xchg eax, ebp ; push -0x17000001 ; jmp qword ptr [rcx]
0x000000000041c16e : xchg eax, ebp ; ret
0x0000000000401ca4 : xchg eax, ebp ; ret 0x348b
0x0000000000413a0d : xchg eax, ebp ; ret 0x48b
0x0000000000417f14 : xchg eax, ebp ; ret 0x8041
0x000000000040f9e8 : xchg eax, ebp ; ret 0x8b44
0x000000000040532f : xchg eax, ebp ; ret 0x9588
0x000000000041ef8a : xchg eax, ebp ; ret 0xc8b
0x000000000041af3d : xchg eax, edi ; ret 0x348b
0x00000000004055b6 : xchg eax, edx ; ret 0x348b
0x0000000000409b07 : xchg eax, esi ; ret 0x348b
0x0000000000402785 : xchg eax, esp ; ret
0x000000000040efc0 : xchg eax, esp ; ret 0x348b
0x00000000004034d8 : xchg eax, esp ; ret 0x48b
0x0000000000401ed5 : xchg eax, esp ; ret 0x8141
0x000000000040fda3 : xchg eax, esp ; ret 0x8b44
0x000000000040e1eb : xchg eax, esp ; ret 0xd284
0x0000000000407501 : xchg eax, esp ; ret 0xfe81
0x000000000041ad85 : xchg eax, esp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000420adc : xlatb ; mov rax, rdi ; pop rbp ; ret
0x000000000040358c : xor al, 0x25 ; ret 0x422f
0x0000000000423631 : xor al, 0xfffffffffffffffe ; jmp rsp
0x000000000040ddc7 : xor byte ptr [rax - 0x75], cl ; add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x000000000040de69 : xor byte ptr [rax - 0x75], cl ; add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x000000000041138d : xor byte ptr [rax - 0x75], cl ; jle 0x4113a7 ; call rdx
0x000000000041ba57 : xor cl, byte ptr [rax - 0x75] ; call rcx
0x0000000000400288 : xor eax, 0x3ac4b012 ; ret 0x2409
0x00000000004164ab : xor eax, dword ptr [rdx] ; jmp rcx
0x00000000004089a6 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
