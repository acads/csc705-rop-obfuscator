0x0000000000402a1d : add ah, byte ptr [rcx] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004014b4 : add ah, byte ptr [rcx] ; jmp rax
0x00000000004014f4 : add ah, byte ptr [rcx] ; jmp rdx
0x0000000000401c71 : add ah, byte ptr [rcx] ; pop rbp ; ret
0x0000000000401c92 : add al, 0x25 ; nop ; add ah, byte ptr [rcx] ; pop rbp ; ret
0x000000000040fa1c : add al, 0xb ; add byte ptr [rax], al ; nop ; in al, -1 ; call rsp
0x0000000000407187 : add al, ch ; ret
0x000000000040edf3 : add al, dl ; mov bh, -1 ; call rax
0x000000000040dfff : add bl, dh ; ret
0x000000000040ce2b : add byte ptr [r8], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x00000000004094e0 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000040c702 : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000040f05f : add byte ptr [rax], ah ; xor bh, bh ; call qword ptr [rax]
0x000000000040fa1a : add byte ptr [rax], al ; add al, 0xb ; add byte ptr [rax], al ; nop ; in al, -1 ; call rsp
0x0000000000407185 : add byte ptr [rax], al ; add al, ch ; ret
0x000000000040dffd : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040c8b8 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000040dffb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040de99 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x000000000040dffc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040733c : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x8141
0x0000000000407668 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004028d9 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret
0x00000000004040cb : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x844
0x00000000004017fc : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x00000000004086ea : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x0000000000402362 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x125
0x000000000040abff : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x0000000000402370 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x00000000004028ce : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x0000000000407608 : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x51], al ; ret
0x000000000040cd60 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000040ce2c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x000000000040237a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret
0x0000000000408016 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x000000000040d822 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x000000000040cee2 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x000000000040ac6c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret
0x0000000000401614 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x125
0x0000000000409067 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x0000000000409bae : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x000000000040af86 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x00000000004092e1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x00000000004079e0 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040d010 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x00000000004040c1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x000000000040166e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x0000000000408607 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000401e9d : add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000405631 : add byte ptr [rax], al ; add cl, ch ; ret 0x13
0x0000000000403e43 : add byte ptr [rax], al ; add cl, ch ; ret 0x2a
0x000000000040b50a : add byte ptr [rax], al ; add cl, ch ; ret 0xb
0x0000000000404f2e : add byte ptr [rax], al ; add cl, ch ; ret 1
0x000000000040f05a : add byte ptr [rax], al ; add dword ptr [rax], r8d ; add byte ptr [rax], ah ; xor bh, bh ; call qword ptr [rax]
0x0000000000401e0f : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004030ff : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004018d5 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040110b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000040ecba : add byte ptr [rax], al ; jg 0x40ecc3 ; jmp rax
0x0000000000401169 : add byte ptr [rax], al ; jmp 0x401129
0x0000000000402f32 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000040de9b : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000402ba2 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040c8b9 : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040fa1e : add byte ptr [rax], al ; nop ; in al, -1 ; call rsp
0x0000000000409530 : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000407669 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040c095 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004025fe : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040dffe : add byte ptr [rax], al ; ret
0x000000000040eccb : add byte ptr [rax], dl ; test bh, bh ; jmp qword ptr [rax]
0x000000000040733e : add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x8141
0x0000000000407334 : add byte ptr [rbp - 0x77], al ; ret 0x8141
0x000000000040766a : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040c096 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x00000000004025ff : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040fa1b : add byte ptr [rbx + rcx], al ; add byte ptr [rax], al ; nop ; in al, -1 ; call rsp
0x00000000004079ec : add byte ptr [rcx + 0xf], al ; pushfq ; mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x00000000004028db : add byte ptr [rcx + 0xf], al ; pushfq ; ret
0x00000000004040cd : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x844
0x00000000004017fe : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x00000000004086ec : add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x0000000000402364 : add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x125
0x000000000040ac01 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x0000000000402372 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x00000000004028d0 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x00000000004079dc : add byte ptr [rcx + 0xfe], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000408218 : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004040bd : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x000000000040166a : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x000000000040f05b : add byte ptr [rcx + rax], al ; add byte ptr [rax], ah ; xor bh, bh ; call qword ptr [rax]
0x00000000004086e2 : add byte ptr [rcx - 0x77], al ; ret
0x000000000040235a : add byte ptr [rcx - 0x77], al ; ret 0x8141
0x0000000000401518 : add byte ptr [rcx], al ; ret
0x000000000040760a : add byte ptr [rdi + rcx - 0x51], al ; ret
0x0000000000407181 : add byte ptr [rdi], cl ; lea eax, dword ptr [rip - 0x18000000] ; ret
0x000000000040cd62 : add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000040ce2e : add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x000000000040237c : add byte ptr [rdi], cl ; pushfq ; ret
0x0000000000408018 : add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x000000000040d824 : add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x000000000040cee4 : add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x000000000040ac6e : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret
0x0000000000401616 : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x125
0x0000000000409069 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x0000000000409bb0 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x000000000040af88 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x00000000004092e3 : add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x00000000004079e2 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040d012 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x00000000004040c3 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x0000000000401670 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x0000000000408609 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000401e9f : add cl, ch ; ret
0x0000000000405633 : add cl, ch ; ret 0x13
0x0000000000403e45 : add cl, ch ; ret 0x2a
0x000000000040b50c : add cl, ch ; ret 0xb
0x0000000000404f30 : add cl, ch ; ret 1
0x00000000004081ea : add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x000000000040828c : add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x000000000040f05d : add dword ptr [rax], eax ; add byte ptr [rax], ah ; xor bh, bh ; call qword ptr [rax]
0x000000000040c094 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x00000000004025fd : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040f05c : add dword ptr [rax], r8d ; add byte ptr [rax], ah ; xor bh, bh ; call qword ptr [rax]
0x000000000040cf45 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000040cced : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401e99 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret
0x000000000040562d : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x0000000000403e3f : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x000000000040b506 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0xb
0x0000000000404f2a : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 1
0x0000000000401514 : add eax, 0x20ed66 ; add ebx, esi ; ret
0x0000000000407184 : add eax, 0xe8000000 ; ret
0x0000000000401e9c : add eax, 0xe9000000 ; ret
0x0000000000405630 : add eax, 0xe9000000 ; ret 0x13
0x0000000000403e42 : add eax, 0xe9000000 ; ret 0x2a
0x000000000040b509 : add eax, 0xe9000000 ; ret 0xb
0x0000000000404f2d : add eax, 0xe9000000 ; ret 1
0x00000000004014db : add eax, edx ; sar rax, 1 ; jne 0x4014ec ; pop rbp ; ret
0x0000000000401519 : add ebx, esi ; ret
0x00000000004016db : add esp, 0x10 ; pop rbp ; ret
0x000000000040688d : add esp, 0x178 ; pop rbx ; pop rbp ; ret
0x00000000004096cc : add esp, 0x1a0 ; pop rbp ; ret
0x00000000004025fa : add esp, 0x1c8 ; pop rbx ; pop rbp ; ret
0x0000000000402178 : add esp, 0x20 ; pop rbp ; ret
0x0000000000402b61 : add esp, 0x30 ; pop rbp ; ret
0x0000000000402a21 : add esp, 0x40 ; pop rbp ; ret
0x000000000040920f : add esp, 0x40 ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004018d8 : add esp, 0x50 ; pop rbp ; ret
0x0000000000407c22 : add esp, 0x70 ; pop rbp ; ret
0x0000000000406cae : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040952c : add esp, 0xb0 ; pop rbp ; ret
0x000000000040110e : add esp, 8 ; ret
0x00000000004014da : add rax, rdx ; sar rax, 1 ; jne 0x4014ed ; pop rbp ; ret
0x00000000004016da : add rsp, 0x10 ; pop rbp ; ret
0x000000000040688c : add rsp, 0x178 ; pop rbx ; pop rbp ; ret
0x00000000004096cb : add rsp, 0x1a0 ; pop rbp ; ret
0x00000000004025f9 : add rsp, 0x1c8 ; pop rbx ; pop rbp ; ret
0x0000000000402177 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000402b60 : add rsp, 0x30 ; pop rbp ; ret
0x0000000000402a20 : add rsp, 0x40 ; pop rbp ; ret
0x000000000040920e : add rsp, 0x40 ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004018d7 : add rsp, 0x50 ; pop rbp ; ret
0x0000000000407c21 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000406cad : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040952b : add rsp, 0xb0 ; pop rbp ; ret
0x000000000040110d : add rsp, 8 ; ret
0x000000000040cf44 : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040ccec : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040c95a : and byte ptr [r15], cl ; xchg eax, esp ; ret 0x348b
0x0000000000401517 : and byte ptr [rax], al ; add ebx, esi ; ret
0x000000000040c95b : and byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x0000000000408317 : and eax, 0x48ffffee ; add esp, 0x20 ; pop rbp ; ret
0x0000000000401c6f : and eax, 0x610288 ; pop rbp ; ret
0x0000000000401c93 : and eax, 0x610290 ; pop rbp ; ret
0x0000000000401109 : and eax, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004089b6 : call 0xffffffffe23f89fe
0x00000000004089b5 : call 0xffffffffe23f89ff
0x0000000000406b29 : call 0xffffffffe902f479
0x0000000000406b28 : call 0xffffffffe902f47a
0x000000000040dfd9 : call qword ptr [r12 + rbx*8]
0x000000000040edc7 : call qword ptr [rax]
0x000000000040f3cb : call qword ptr [rdi]
0x000000000040efe3 : call qword ptr [rsi]
0x000000000040dfda : call qword ptr [rsp + rbx*8]
0x000000000040153d : call rax
0x000000000040f103 : call rbx
0x000000000040f6bb : call rcx
0x000000000040f5db : call rsp
0x000000000040b144 : clc ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004014df : clc ; jne 0x4014e8 ; pop rbp ; ret
0x00000000004070f3 : clc ; pop rbx ; pop rbp ; ret
0x000000000040df76 : cld ; mov dword ptr [rbp - 0xc], eax ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x000000000040db86 : cli ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040a629 : cmp al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004018d3 : cmp al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040f101 : cmp bh, bh ; call rbx
0x000000000040d00e : cmp byte ptr [rax], ah ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x000000000040cd5e : cmp byte ptr [rax], dh ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000040d44e : cmp byte ptr [rcx], ah ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x0000000000409bac : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x0000000000406fbd : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040149d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4014b0 ; pop rbp ; ret
0x0000000000406d72 : dec byte ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x000000000040324f : dec byte ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret
0x00000000004089b0 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; call 0xffffffffe23f8a04
0x00000000004088f6 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040be04 : dec dword ptr [rax - 0x7f] ; ret 1
0x0000000000403cda : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x0000000000402378 : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret
0x0000000000406bdb : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x00000000004086aa : enter -0x7cb8, -0x3c ; pop rbp ; ret
0x00000000004025fc : enter 1, 0 ; pop rbx ; pop rbp ; ret
0x000000000040f8e1 : fdivr st(7) ; call rax
0x00000000004028e2 : fiadd dword ptr [rcx - 0xa] ; ret 0x4001
0x0000000000407e0f : fiadd dword ptr [rcx - 0xa] ; ret 0x4801
0x000000000040b398 : fiadd dword ptr [rcx - 0xa] ; ret 0x8801
0x0000000000408967 : fiadd dword ptr [rcx - 0xa] ; ret 0x8901
0x000000000040a29e : fiadd dword ptr [rcx - 0xa] ; ret 0xf01
0x0000000000402382 : fild dword ptr [rcx - 0xa] ; ret
0x0000000000405248 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040dfdc : fmul qword ptr [rax - 0x7d] ; ret
0x00000000004016d9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040df79 : hlt ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x00000000004014b0 : hlt ; pop rbp ; mov edi, 0x610228 ; jmp rax
0x000000000040de9f : hlt ; pop rbp ; ret
0x000000000040fa21 : in al, -1 ; call rsp
0x0000000000402f36 : in al, dx ; pop rbp ; ret
0x0000000000401515 : in ax, dx ; and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000401516 : in eax, dx ; and byte ptr [rax], al ; add ebx, esi ; ret
0x000000000040a288 : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x00000000004079de : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004025b7 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x00000000004028cc : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x000000000040821a : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004040bf : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x000000000040166c : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x000000000040ce28 : inc dword ptr [rcx + 0x41f9] ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x000000000040d81e : inc dword ptr [rcx + 0x5af9] ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x000000000040cede : inc dword ptr [rcx + 0x5af9] ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x00000000004094e8 : int 0x80
0x00000000004014a3 : ja 0x4014aa ; pop rbp ; ret
0x00000000004014af : je 0x4014ad ; pop rbp ; mov edi, 0x610228 ; jmp rax
0x000000000040ecbd : jg 0x40ecc0 ; jmp rax
0x000000000040ecbc : jg 0x40ecc1 ; jmp rax
0x000000000040116b : jmp 0x401127
0x000000000040eccf : jmp qword ptr [rax]
0x00000000004014b7 : jmp rax
0x00000000004035fe : jmp rcx
0x00000000004014f7 : jmp rdx
0x00000000004014e0 : jne 0x4014e7 ; pop rbp ; ret
0x0000000000407c24 : jo 0x407c85 ; ret
0x000000000040688f : js 0x406898 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000406cb0 : js 0x406d10 ; pop rbp ; ret
0x0000000000407183 : lea eax, dword ptr [rip - 0x18000000] ; ret
0x0000000000407ac5 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040ae40 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004070f1 : lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000407ac4 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004070f0 : lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x00000000004070ef : loopne 0x407140 ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x00000000004070ee : loopne 0x407141 ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040a3b5 : loopne 0x40a405 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040a3b4 : loopne 0x40a406 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040952e : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040cce9 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040db84 : mov al, byte ptr [rbp - 6] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040edf5 : mov bh, -1 ; call rax
0x0000000000401c91 : mov byte ptr [0x610290], al ; pop rbp ; ret
0x00000000004079f0 : mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x0000000000401e98 : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret
0x000000000040562c : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x0000000000403e3e : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x0000000000406e16 : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 1
0x0000000000401513 : mov byte ptr [rip + 0x20ed66], 1 ; ret
0x000000000040cf47 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000040ccef : mov dh, -0x40 ; pop rbp ; ret
0x0000000000401c6d : mov dword ptr [0x610288], edi ; pop rbp ; ret
0x0000000000402c7a : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000402dc8 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004016d7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040df77 : mov dword ptr [rbp - 0xc], eax ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000406cac : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000409df5 : mov eax, 0xf0658d48 ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040c701 : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000402ba8 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000409921 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402174 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040c6fe : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000402ba5 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040785a : mov eax, dword ptr [rbp - 0x10] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000402063 : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000402f34 : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000040982f : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402b5d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402c74 : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000407e24 : mov eax, dword ptr [rbp - 0x18] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040a3b3 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004070ed : mov eax, dword ptr [rbp - 0x20] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040c518 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402dca : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040ab32 : mov eax, dword ptr [rbp - 0x30] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004086a8 : mov eax, dword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000406caa : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040de9d : mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x000000000040b142 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040153b : mov ebp, esp ; call rax
0x00000000004014a1 : mov ebp, esp ; ja 0x4014ac ; pop rbp ; ret
0x00000000004035f7 : mov ecx, dword ptr [rax*8 + 0x40e340] ; jmp rcx
0x0000000000404111 : mov ecx, dword ptr [rax*8 + 0x40e388] ; jmp rcx
0x00000000004089b2 : mov ecx, dword ptr [rax*8 + 0x40e848] ; jmp rcx
0x0000000000402c77 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401535 : mov edi, 0x60fe20 ; mov rbp, rsp ; call rax
0x00000000004014b2 : mov edi, 0x610228 ; jmp rax
0x00000000004014f2 : mov edi, 0x610228 ; jmp rdx
0x000000000040dfd7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000040f3c9 : mov edi, edi ; call qword ptr [rdi]
0x000000000040dfd6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x00000000004014f0 : mov esi, eax ; mov edi, 0x610228 ; jmp rdx
0x000000000040785e : mov esp, ebp ; pop rbp ; ret
0x0000000000401c6c : mov qword ptr [0x610288], rdi ; pop rbp ; ret
0x0000000000406cab : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000409920 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402173 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402ba4 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000407859 : mov rax, qword ptr [rbp - 0x10] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000402062 : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040982e : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402b5c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000407e23 : mov rax, qword ptr [rbp - 0x18] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040a3b2 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004086a7 : mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040b141 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040153a : mov rbp, rsp ; call rax
0x00000000004014a0 : mov rbp, rsp ; ja 0x4014ad ; pop rbp ; ret
0x00000000004035f6 : mov rcx, qword ptr [rax*8 + 0x40e340] ; jmp rcx
0x0000000000404110 : mov rcx, qword ptr [rax*8 + 0x40e388] ; jmp rcx
0x00000000004089b1 : mov rcx, qword ptr [rax*8 + 0x40e848] ; jmp rcx
0x00000000004014ef : mov rsi, rax ; mov edi, 0x610228 ; jmp rdx
0x000000000040785d : mov rsp, rbp ; pop rbp ; ret
0x000000000040cf46 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040ccee : movzx eax, al ; pop rbp ; ret
0x0000000000401c94 : nop ; add ah, byte ptr [rcx] ; pop rbp ; ret
0x000000000040fa20 : nop ; in al, -1 ; call rsp
0x000000000040dff8 : nop dword ptr [rax + rax] ; ret
0x00000000004089b3 : or al, 0xffffffffffffffc5 ; call 0xffffffffe23f8a01
0x000000000040edf1 : or al, byte ptr [rax] ; add al, dl ; mov bh, -1 ; call rax
0x0000000000406e79 : or byte ptr [r15], cl ; xchg eax, ebp ; ret 0x348b
0x0000000000405243 : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000405244 : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040d00c : or byte ptr [rcx + 0x2038], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x000000000040d44c : or byte ptr [rcx + 0x2138], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x00000000004092dd : or byte ptr [rcx + 0x28f9], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x000000000040cd5c : or byte ptr [rcx + 0x3038], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000040d34c : or byte ptr [rcx + 0x6138], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000040af82 : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x0000000000406e7a : or byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x00000000004081ed : or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x000000000040828f : or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x000000000040a07f : or eax, 0x48fffff9 ; add esp, 0x30 ; pop rbp ; ret
0x00000000004030fd : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040ee21 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000403434 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040dfec : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000403436 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040dfee : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000403438 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040dff0 : pop r14 ; pop r15 ; ret
0x0000000000407ac9 : pop r14 ; pop rbp ; ret
0x000000000040343a : pop r15 ; pop rbp ; ret
0x000000000040dff2 : pop r15 ; ret
0x0000000000401512 : pop rbp ; mov byte ptr [rip + 0x20ed66], 1 ; ret
0x00000000004014b1 : pop rbp ; mov edi, 0x610228 ; jmp rax
0x00000000004014ee : pop rbp ; mov rsi, rax ; mov edi, 0x610228 ; jmp rdx
0x000000000040dfeb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000403437 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040dfef : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004014a5 : pop rbp ; ret
0x000000000040766b : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000407ac8 : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000402600 : pop rbx ; pop rbp ; ret
0x000000000040343b : pop rdi ; pop rbp ; ret
0x000000000040dff3 : pop rdi ; ret
0x000000000040d821 : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x000000000040cee1 : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x0000000000403439 : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040dff1 : pop rsi ; pop r15 ; ret
0x0000000000407aca : pop rsi ; pop rbp ; ret
0x0000000000403435 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040dfed : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040cd64 : popfq ; ret 0x348b
0x000000000040ce30 : popfq ; ret 0xc8b
0x0000000000402a1c : push 0x48006102 ; add esp, 0x40 ; pop rbp ; ret
0x000000000040edef : push qword ptr [rax - 0x2ffffff6] ; mov bh, -1 ; call rax
0x000000000040c093 : push rax ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x00000000004018da : push rax ; pop rbp ; ret
0x0000000000405247 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000401534 : push rbp ; mov edi, 0x60fe20 ; mov rbp, rsp ; call rax
0x0000000000406bde : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x00000000004079ef : pushfq ; mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x000000000040237e : pushfq ; ret
0x00000000004040d0 : pushfq ; ret 0x844
0x0000000000401801 : pushfq ; ret 0x845
0x000000000040801a : pushfq ; ret 0xd108
0x0000000000401111 : ret
0x0000000000401619 : ret 0x125
0x0000000000405635 : ret 0x13
0x0000000000401372 : ret 0x20ed
0x0000000000401172 : ret 0x20ee
0x0000000000403e47 : ret 0x2a
0x0000000000403f28 : ret 0x348b
0x00000000004028e5 : ret 0x4001
0x0000000000407e12 : ret 0x4801
0x00000000004031b8 : ret 0x48f0
0x0000000000407f67 : ret 0x4cc0
0x00000000004031ea : ret 0x4cf0
0x000000000040d827 : ret 0x5588
0x00000000004081f0 : ret 0x7ae8
0x000000000040ac05 : ret 0x8041
0x000000000040235d : ret 0x8141
0x00000000004040d1 : ret 0x844
0x0000000000401802 : ret 0x845
0x000000000040b39b : ret 0x8801
0x00000000004040d6 : ret 0x8901
0x0000000000409f35 : ret 0x8948
0x00000000004055bc : ret 0x89a5
0x0000000000409bb3 : ret 0x8b44
0x000000000040524b : ret 0x8b48
0x0000000000401673 : ret 0xa3d
0x0000000000405260 : ret 0xae8
0x000000000040b50e : ret 0xb
0x0000000000401a93 : ret 0xb0
0x00000000004014d5 : ret 0xc148
0x000000000040af8b : ret 0xc8b
0x000000000040801b : ret 0xd108
0x000000000040860c : ret 0xd284
0x0000000000408292 : ret 0xd8e8
0x0000000000401610 : ret 0xea81
0x0000000000406b2c : ret 0xee8
0x0000000000401681 : ret 0xf01
0x0000000000404f32 : ret 1
0x0000000000406be2 : ret 8
0x000000000040ecb8 : rol byte ptr [rip + 0x7f400000], -1 ; jmp rax
0x00000000004094e3 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x00000000004014dc : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4014eb ; pop rbp ; ret
0x000000000040cf48 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x00000000004094e4 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000406bdf : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000040d826 : sahf ; ret 0x5588
0x000000000040cee6 : sahf ; ret 0xc8b
0x00000000004040d4 : sal dh, cl ; ret 0x8901
0x00000000004014de : sar eax, 1 ; jne 0x4014e9 ; pop rbp ; ret
0x00000000004014dd : sar rax, 1 ; jne 0x4014ea ; pop rbp ; ret
0x0000000000403370 : sbb cl, byte ptr [rcx - 0x7f] ; ret
0x000000000040c8b7 : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040760d : scasd eax, dword ptr [rdi] ; ret
0x0000000000401618 : scasd eax, dword ptr [rdi] ; ret 0x125
0x0000000000407341 : scasd eax, dword ptr [rdi] ; ret 0x8141
0x000000000040ce2a : stc ; add byte ptr [r8], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x000000000040d820 : stc ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x000000000040cee0 : stc ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x000000000040cceb : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040efe1 : sub al, -1 ; call qword ptr [rsi]
0x000000000040e02d : sub esp, 8 ; add rsp, 8 ; ret
0x000000000040e02c : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040eccd : test bh, bh ; jmp qword ptr [rax]
0x000000000040dffa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000401e9b : test dword ptr [rip - 0x17000000], eax ; ret
0x000000000040562f : test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x0000000000403e41 : test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x000000000040b508 : test dword ptr [rip - 0x17000000], eax ; ret 0xb
0x0000000000404f2c : test dword ptr [rip - 0x17000000], eax ; ret 1
0x000000000040a1d3 : test eax, 0x48fffffc ; add esp, 0x10 ; pop rbp ; ret
0x0000000000406e7c : xchg eax, ebp ; ret 0x348b
0x000000000040ac04 : xchg eax, ebp ; ret 0x8041
0x0000000000409bb2 : xchg eax, ebp ; ret 0x8b44
0x000000000040af8a : xchg eax, ebp ; ret 0xc8b
0x0000000000403f27 : xchg eax, esi ; ret 0x348b
0x0000000000402375 : xchg eax, esp ; ret
0x000000000040c95d : xchg eax, esp ; ret 0x348b
0x00000000004028d3 : xchg eax, esp ; ret 0x8141
0x0000000000401672 : xchg eax, esp ; ret 0xa3d
0x000000000040860b : xchg eax, esp ; ret 0xd284
0x000000000040f061 : xor bh, bh ; call qword ptr [rax]
0x00000000004081e7 : xor byte ptr [rax - 0x75], cl ; add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x0000000000408289 : xor byte ptr [rax - 0x75], cl ; add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x0000000000402dc6 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
