0x0000000000419d70 : adc byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000403621 : adc byte ptr [rax], al ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040de0d : adc byte ptr [rbp - 0x18], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000405115 : adc byte ptr [rbp - 8], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041f3f5 : adc edi, edi ; call qword ptr [rax]
0x000000000041f3e5 : adc edi, edi ; call rax
0x000000000041fa03 : add ah, ah ; add eax, dword ptr [rax] ; add byte ptr [rax], cl ; test edi, esi ; call rbx
0x000000000041ff89 : add al, -1 ; call rsp
0x000000000041f3e3 : add al, ah ; adc edi, edi ; call rax
0x000000000041fccf : add al, ah ; sar esi, cl ; call qword ptr [rdi]
0x000000000041f3f3 : add al, al ; adc edi, edi ; call qword ptr [rax]
0x000000000041f36b : add al, al ; in al, -2 ; jmp rax
0x000000000041fe57 : add al, bh ; fdiv st(6), st(0) ; call rdi
0x0000000000416cc3 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000041ff87 : add al, ch ; add al, -1 ; call rsp
0x0000000000403ba8 : add al, ch ; ret 0xffde
0x000000000042036f : add al, dl ; mov edi, dr1 ; jmp qword ptr [rcx]
0x000000000041dd5f : add bl, dh ; ret
0x000000000041be0b : add byte ptr [r8], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x0000000000417671 : add byte ptr [rax + 1], cl ; ret 0x4a3b
0x000000000041f378 : add byte ptr [rax + rax], cl ; add byte ptr [rax], dh ; in eax, -2 ; jmp qword ptr [rax]
0x000000000041fe53 : add byte ptr [rax + rcx], dh ; add byte ptr [rax], al ; clc ; fdiv st(6), st(0) ; call rdi
0x0000000000403622 : add byte ptr [rax - 0x73], cl ; clc ; pop rbx ; pop rbp ; ret
0x00000000004100f0 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000403467 : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000403ba6 : add byte ptr [rax], al ; add al, ch ; ret 0xffde
0x000000000041dd5d : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000041766f : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x4a3b
0x0000000000403465 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000041dd5b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000041ce79 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x000000000041dd5c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000403538 : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x8141
0x000000000040c9c8 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000407cb2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x00000000004040b6 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b70f8b], cl ; ret 0xb0
0x0000000000404163 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7178b], cl ; ret 0xb0
0x0000000000403a64 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7578b], cl ; ret 0xb0
0x0000000000403c16 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7638b], cl ; ret 0xb0
0x0000000000403ec9 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7738b], cl ; ret 0xb0
0x000000000040238b : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret
0x000000000040942b : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x844
0x00000000004020f5 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x000000000040f2fa : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x00000000004084ba : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x125
0x000000000041b0bd : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x000000000041300f : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x000000000040354a : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000402380 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x00000000004115ee : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8b44
0x0000000000402a38 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xf981
0x0000000000414f33 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xfb81
0x0000000000403a05 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xfe81
0x000000000040c968 : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x51], al ; ret
0x000000000041bd40 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000041be0c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x0000000000403555 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret
0x000000000040d376 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x000000000041c802 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x000000000041bec2 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x000000000041307c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret
0x000000000040207b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x125
0x000000000040df20 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000004020c0 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x00000000004107be : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x0000000000406089 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x000000000041d560 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000412b12 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0x48b
0x000000000040fef1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x00000000004077d6 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000041bff0 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x0000000000409421 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x00000000004164c8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x000000000040d967 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000403f92 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xfe81
0x0000000000404471 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xff81
0x000000000040548d : add byte ptr [rax], al ; add cl, ch ; ret
0x000000000040a991 : add byte ptr [rax], al ; add cl, ch ; ret 0x13
0x00000000004091a3 : add byte ptr [rax], al ; add cl, ch ; ret 0x2a
0x000000000041391a : add byte ptr [rax], al ; add cl, ch ; ret 0xb
0x000000000040a28e : add byte ptr [rax], al ; add cl, ch ; ret 1
0x0000000000407429 : add byte ptr [rax], al ; add cl, ch ; ret 8
0x00000000004053ff : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041d8a3 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004023a5 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404619 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041d371 : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004019fb : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000041ff86 : add byte ptr [rax], al ; call 0xffffffffd541fe96
0x000000000041fe56 : add byte ptr [rax], al ; clc ; fdiv st(6), st(0) ; call rdi
0x0000000000401a79 : add byte ptr [rax], al ; jmp 0x401a19
0x0000000000403ba2 : add byte ptr [rax], al ; jmp 0x403c75
0x0000000000408292 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000040db39 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x2c] ; pop rbp ; ret
0x000000000041ce7b : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000407f02 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000403466 : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000041face : add byte ptr [rax], al ; nop ; ret
0x000000000041ff82 : add byte ptr [rax], al ; or dword ptr fs:[rax], eax ; add al, ch ; add al, -1 ; call rsp
0x0000000000403e7e : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040c9c9 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000407cb3 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000406ed6 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000041f3f2 : add byte ptr [rax], al ; rcl byte ptr [rbx], -1 ; call qword ptr [rax]
0x000000000041dd5e : add byte ptr [rax], al ; ret
0x000000000041f36a : add byte ptr [rax], al ; shl ah, -2 ; jmp rax
0x000000000041fe52 : add byte ptr [rax], al ; xor al, 8 ; add byte ptr [rax], al ; clc ; fdiv st(6), st(0) ; call rdi
0x000000000041f27a : add byte ptr [rax], al ; xor byte ptr [rsi - 2], bh ; call qword ptr [rax]
0x000000000041fa07 : add byte ptr [rax], cl ; test edi, esi ; call rbx
0x000000000041f37b : add byte ptr [rax], dh ; in eax, -2 ; jmp qword ptr [rax]
0x000000000041f27b : add byte ptr [rax], dh ; jle 0x41f281 ; call qword ptr [rax]
0x000000000040353a : add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x8141
0x000000000042036b : add byte ptr [rbp + rcx], cl ; add al, dl ; mov edi, dr1 ; jmp qword ptr [rcx]
0x0000000000403530 : add byte ptr [rbp - 0x77], al ; ret 0x8141
0x000000000040c9ca : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000407cb4 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000406ed7 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000402dc1 : add byte ptr [rbx - 0x1074b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004040b8 : add byte ptr [rbx - 0x76b70f8b], cl ; ret 0xb0
0x0000000000404165 : add byte ptr [rbx - 0x76b7178b], cl ; ret 0xb0
0x0000000000403a66 : add byte ptr [rbx - 0x76b7578b], cl ; ret 0xb0
0x0000000000403c18 : add byte ptr [rbx - 0x76b7638b], cl ; ret 0xb0
0x0000000000403ecb : add byte ptr [rbx - 0x76b7738b], cl ; ret 0xb0
0x00000000004041fc : add byte ptr [rbx - 0x934b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000402b21 : add byte ptr [rbx - 0xdb4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004077e2 : add byte ptr [rcx + 0xf], al ; pushfq ; mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x000000000040238d : add byte ptr [rcx + 0xf], al ; pushfq ; ret
0x000000000040942d : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x844
0x00000000004020f7 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x0000000000416166 : add byte ptr [rcx + 0xf], al ; pushfq ; rol dword ptr [rax + rcx - 0x36], -0xa ; ret 0xf01
0x000000000040f2fc : add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x00000000004084bc : add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x125
0x000000000041b0bf : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x0000000000413011 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x000000000040354c : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000402382 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x00000000004115f0 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8b44
0x0000000000402a3a : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xf981
0x0000000000414f35 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xfb81
0x0000000000403a07 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xfe81
0x000000000040cd3c : add byte ptr [rcx + 0xfe], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040446d : add byte ptr [rcx + 0xfe], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xff81
0x000000000040d578 : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040941d : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x000000000041ff83 : add byte ptr [rcx + rcx], ah ; add al, ch ; add al, -1 ; call rsp
0x000000000040f2f2 : add byte ptr [rcx - 0x77], al ; ret
0x00000000004084b2 : add byte ptr [rcx - 0x77], al ; ret 0x8141
0x0000000000402028 : add byte ptr [rcx], al ; ret
0x000000000040c96a : add byte ptr [rdi + rcx - 0x51], al ; ret
0x000000000041bd42 : add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000041be0e : add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x0000000000403557 : add byte ptr [rdi], cl ; pushfq ; ret
0x000000000040d378 : add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x000000000041c804 : add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x000000000041bec4 : add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x000000000041307e : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret
0x000000000040207d : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x125
0x000000000040df22 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000004020c2 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x00000000004107c0 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x000000000040608b : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x000000000041d562 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000412b14 : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0x48b
0x000000000040fef3 : add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x00000000004077d8 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000041bff2 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x0000000000409423 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x00000000004164ca : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x000000000040d969 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000403f94 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xfe81
0x0000000000404473 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xff81
0x000000000040548f : add cl, ch ; ret
0x000000000040a993 : add cl, ch ; ret 0x13
0x00000000004091a5 : add cl, ch ; ret 0x2a
0x000000000041391c : add cl, ch ; ret 0xb
0x000000000040a290 : add cl, ch ; ret 1
0x000000000040742b : add cl, ch ; ret 8
0x000000000040d54a : add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x000000000040d5ec : add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x00000000004144a4 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000406ed5 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040411c : add dword ptr [rdi], ecx ; mov dh, -0x3f ; mov rsp, rbp ; pop rbp ; ret
0x00000000004187fb : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x00000000004049ad : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004125e4 : add dword ptr [rdi], ecx ; pushfq ; ret 0x48b
0x000000000041246d : add dword ptr [rdi], ecx ; sahf ; ret 0x348b
0x0000000000418873 : add dword ptr [rdi], ecx ; test byte ptr [rip - 0x17000000], al ; ret
0x0000000000405489 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret
0x000000000040a98d : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x000000000040919f : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x0000000000413916 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0xb
0x000000000040a28a : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 1
0x0000000000402024 : add eax, 0x21f52e ; add ebx, esi ; ret
0x00000000004037f5 : add eax, 0x48000000 ; mov esp, ebp ; pop rbp ; ret
0x000000000040548c : add eax, 0xe9000000 ; ret
0x000000000040a990 : add eax, 0xe9000000 ; ret 0x13
0x00000000004091a2 : add eax, 0xe9000000 ; ret 0x2a
0x0000000000413919 : add eax, 0xe9000000 ; ret 0xb
0x000000000040a28d : add eax, 0xe9000000 ; ret 1
0x0000000000407428 : add eax, 0xe9000000 ; ret 8
0x000000000041fa05 : add eax, dword ptr [rax] ; add byte ptr [rax], cl ; test edi, esi ; call rbx
0x0000000000401feb : add eax, edx ; sar rax, 1 ; jne 0x401ffc ; pop rbp ; ret
0x0000000000419059 : add eax, esi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x0000000000402029 : add ebx, esi ; ret
0x0000000000414e5b : add edi, eax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x0000000000402419 : add esp, 0x10 ; pop rbp ; ret
0x000000000040bbed : add esp, 0x178 ; pop rbx ; pop rbp ; ret
0x000000000041d8a6 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000406ed2 : add esp, 0x198 ; pop rbx ; pop rbp ; ret
0x00000000004102dc : add esp, 0x1a0 ; pop rbp ; ret
0x00000000004023a8 : add esp, 0x20 ; pop rbp ; ret
0x0000000000414d67 : add esp, 0x20 ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000416cc0 : add esp, 0x2a8 ; pop rbx ; pop rbp ; ret
0x000000000040461c : add esp, 0x30 ; pop rbp ; ret
0x000000000040258d : add esp, 0x40 ; pop rbp ; ret
0x000000000040fe1f : add esp, 0x40 ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040cc5c : add esp, 0x50 ; pop rbp ; ret
0x0000000000412d4a : add esp, 0x60 ; pop rbp ; ret
0x0000000000405abc : add esp, 0x68 ; pop rbx ; pop rbp ; ret
0x000000000040cf82 : add esp, 0x70 ; pop rbp ; ret
0x000000000040c00e : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000403e7a : add esp, 0x80 ; pop rbp ; ret
0x000000000040420e : add esp, 0xa0 ; pop rbp ; ret
0x000000000041013c : add esp, 0xb0 ; pop rbp ; ret
0x00000000004019fe : add esp, 8 ; ret
0x0000000000401fea : add rax, rdx ; sar rax, 1 ; jne 0x401ffd ; pop rbp ; ret
0x0000000000419058 : add rax, rsi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x0000000000414e5a : add rdi, rax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x0000000000402418 : add rsp, 0x10 ; pop rbp ; ret
0x000000000040bbec : add rsp, 0x178 ; pop rbx ; pop rbp ; ret
0x000000000041d8a5 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000406ed1 : add rsp, 0x198 ; pop rbx ; pop rbp ; ret
0x00000000004102db : add rsp, 0x1a0 ; pop rbp ; ret
0x00000000004023a7 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000414d66 : add rsp, 0x20 ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000416cbf : add rsp, 0x2a8 ; pop rbx ; pop rbp ; ret
0x000000000040461b : add rsp, 0x30 ; pop rbp ; ret
0x000000000040258c : add rsp, 0x40 ; pop rbp ; ret
0x000000000040fe1e : add rsp, 0x40 ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040cc5b : add rsp, 0x50 ; pop rbp ; ret
0x0000000000412d49 : add rsp, 0x60 ; pop rbp ; ret
0x0000000000405abb : add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x000000000040cf81 : add rsp, 0x70 ; pop rbp ; ret
0x000000000040c00d : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000403e79 : add rsp, 0x80 ; pop rbp ; ret
0x000000000040420d : add rsp, 0xa0 ; pop rbp ; ret
0x000000000041013b : add rsp, 0xb0 ; pop rbp ; ret
0x00000000004019fd : add rsp, 8 ; ret
0x00000000004187fa : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004049ac : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041b93a : and byte ptr [r15], cl ; xchg eax, esp ; ret 0x348b
0x0000000000414d69 : and byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000041b93b : and byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x0000000000402027 : and dword ptr [rax], eax ; add ebx, esi ; ret
0x000000000040d677 : and eax, 0x48ffffee ; add esp, 0x20 ; pop rbp ; ret
0x000000000040521f : and eax, 0x621578 ; pop rbp ; ret
0x000000000040525f : and eax, 0x621580 ; pop rbp ; ret
0x0000000000405283 : and eax, 0x621588 ; pop rbp ; ret
0x000000000040285e : call 0x402069
0x00000000004147d9 : call 0xd03c929
0x0000000000414d9c : call 0xd03ceec
0x000000000041f468 : call 0xffffffff9041f483
0x0000000000404168 : call 0xffffffffb102cab8
0x000000000041ff88 : call 0xffffffffd541fe94
0x0000000000409475 : call 0xffffffffe23f94be
0x000000000040be89 : call 0xffffffffe90347d9
0x000000000040be88 : call 0xffffffffe90347da
0x0000000000401fc3 : call 0xffffffffff4081e0
0x0000000000402003 : call 0xffffffffff408220
0x000000000041dd39 : call qword ptr [r12 + rbx*8]
0x000000000041f1bf : call qword ptr [rax]
0x000000000041fcd3 : call qword ptr [rdi]
0x000000000041f88b : call qword ptr [rsi]
0x000000000041dd3a : call qword ptr [rsp + rbx*8]
0x000000000040204d : call rax
0x000000000041fa0b : call rbx
0x000000000041187b : call rcx
0x000000000041f72b : call rdi
0x000000000041ff8b : call rsp
0x0000000000413554 : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405117 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041d0c3 : clc ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041fe58 : clc ; fdiv st(6), st(0) ; call rdi
0x0000000000401fef : clc ; jne 0x401ff8 ; pop rbp ; ret
0x000000000040da4b : clc ; pop rbp ; ret
0x0000000000403626 : clc ; pop rbx ; pop rbp ; ret
0x0000000000402417 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000412d48 : cld ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000404f1a : cld ; add rsp, 0x80 ; pop rbp ; ret
0x000000000041cf56 : cld ; mov dword ptr [rbp - 0xc], eax ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x000000000041cb66 : cli ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000402026 : cmc ; and dword ptr [rax], eax ; add ebx, esi ; ret
0x0000000000402865 : cmp al, 0x25 ; ret 0x41e3
0x0000000000411bd9 : cmp al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000041bfee : cmp byte ptr [rax], ah ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x00000000004020be : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x000000000041bd3e : cmp byte ptr [rax], dh ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000041c42e : cmp byte ptr [rcx], ah ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000040336e : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x0000000000411876 : cmp cl, byte ptr [rax - 0x75] ; jne 0x411808 ; call rcx
0x000000000041b0bb : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x00000000004115ec : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8b44
0x000000000040df1e : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000004107bc : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x000000000040c31d : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401fad : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401fc0 ; pop rbp ; ret
0x0000000000406ed4 : cwde ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000405aba : cwde ; add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x000000000041dcc3 : cwde ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000403a0d : dec byte ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret
0x000000000040c0d2 : dec byte ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x00000000004085af : dec byte ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret
0x000000000041a5f0 : dec dword ptr [rax + 0x3b] ; ror byte ptr [r15], -0x69 ; ret 0x348b
0x0000000000417cc5 : dec dword ptr [rax + 0x3b] ; ror byte ptr [r15], 1 ; xchg eax, esp ; ret 0x348b
0x0000000000402862 : dec dword ptr [rax - 0x73] ; cmp al, 0x25 ; ret 0x41e3
0x000000000040f29a : dec dword ptr [rax - 0x77] ; ret 0x6de8
0x00000000004165e8 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x00000000004031cd : dec dword ptr [rax - 0x77] ; ret 0x8d8b
0x000000000040e26b : dec dword ptr [rax - 0x77] ; ret 0x9ce8
0x0000000000402b27 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040ee43 : dec dword ptr [rax - 0x77] ; ret 0xc4e8
0x0000000000414214 : dec dword ptr [rax - 0x7f] ; ret 1
0x00000000004155db : dec dword ptr [rdi] ; test dword ptr [rip - 0x17000000], eax ; ret
0x0000000000407425 : dec dword ptr [rdi] ; test dword ptr [rip - 0x17000000], eax ; ret 8
0x00000000004020f3 : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x000000000040bf3b : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000413683 : enter -0x74b8, 0x7d ; fsubr st(0) ; ret
0x000000000040da0a : enter -0x7cb8, -0x3c ; pop rbp ; ret
0x000000000041fe59 : fdiv st(6), st(0) ; call rdi
0x0000000000405dc2 : fiadd dword ptr [rcx - 0xa] ; ret 0x4001
0x0000000000402a4b : fiadd dword ptr [rcx - 0xa] ; ret 0x4401
0x000000000040d16f : fiadd dword ptr [rcx - 0xa] ; ret 0x4801
0x0000000000412317 : fiadd dword ptr [rcx - 0xa] ; ret 0x8801
0x0000000000402394 : fiadd dword ptr [rcx - 0xa] ; ret 0x8901
0x0000000000405862 : fiadd dword ptr [rcx - 0xa] ; ret 0xf01
0x000000000040355d : fild dword ptr [rcx - 0xa] ; ret
0x000000000040a5a8 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000041d56f : fmul qword ptr [r8 - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000041d570 : fmul qword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000041dd3c : fmul qword ptr [rax - 0x7d] ; ret
0x000000000041d56d : fmul qword ptr [rbx - 0x76b723bb] ; in al, dx ; pop rbp ; ret
0x0000000000413687 : fsubr st(0) ; ret
0x0000000000410363 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041cf59 : hlt ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000401fc0 : hlt ; pop rbp ; mov edi, 0x6214e8 ; jmp rax
0x000000000041ce7f : hlt ; pop rbp ; ret
0x0000000000402860 : idiv edi ; dec dword ptr [rax - 0x73] ; cmp al, 0x25 ; ret 0x41e3
0x000000000041f36d : in al, -2 ; jmp rax
0x0000000000404777 : in al, dx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040346a : in al, dx ; pop rbp ; ret
0x000000000041f37d : in eax, -2 ; jmp qword ptr [rax]
0x00000000004059b1 : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000040e195 : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x000000000040cd3e : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040446f : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xff81
0x000000000040c423 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x00000000004037d0 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x000000000040d57a : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040941f : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x000000000041f377 : inc dword ptr [rax] ; or al, 0 ; add byte ptr [rax], dh ; in eax, -2 ; jmp qword ptr [rax]
0x000000000041be08 : inc dword ptr [rcx + 0x41f9] ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x000000000041c7fe : inc dword ptr [rcx + 0x5af9] ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x000000000041bebe : inc dword ptr [rcx + 0x5af9] ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x000000000041f367 : inc eax ; or eax, dword ptr [rax] ; add al, al ; in al, -2 ; jmp rax
0x00000000004100f8 : int 0x80
0x0000000000401fb3 : ja 0x401fba ; pop rbp ; ret
0x000000000041e3cb : jb 0x41e434 ; jns 0x41e3d6 ; push rax ; ret
0x000000000041e3ca : jb 0x41e435 ; jns 0x41e3d7 ; push rax ; ret
0x0000000000401fbf : je 0x401fbd ; pop rbp ; mov edi, 0x6214e8 ; jmp rax
0x000000000041d56c : jge 0x41d553 ; mov eax, dword ptr [rbp - 0x24] ; mov rsp, rbp ; pop rbp ; ret
0x000000000041f27d : jle 0x41f27f ; call qword ptr [rax]
0x0000000000401a7b : jmp 0x401a17
0x0000000000403ba4 : jmp 0x403c73
0x000000000041811c : jmp 0x417052
0x000000000041f37f : jmp qword ptr [rax]
0x0000000000420373 : jmp qword ptr [rcx]
0x0000000000401fc7 : jmp rax
0x00000000004206b3 : jmp rbx
0x000000000040895e : jmp rcx
0x0000000000402007 : jmp rdx
0x0000000000401ff0 : jne 0x401ff7 ; pop rbp ; ret
0x0000000000411879 : jne 0x411805 ; call rcx
0x000000000041e3ce : jns 0x41e3d3 ; push rax ; ret
0x000000000041e3cd : jns 0x41e3d4 ; push rax ; ret
0x000000000040cf84 : jo 0x40cfe5 ; ret
0x0000000000418fc4 : jo 0x418fcf ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041afb7 : jo 0x41b018 ; ret
0x000000000041dcc7 : jo 0x41dd28 ; ret
0x000000000040bbef : js 0x40bbf8 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040c010 : js 0x40c070 ; pop rbp ; ret
0x000000000041f50f : lcall ptr [rax - 0x5fffffee] ; ret
0x000000000040ce25 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000413250 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403624 : lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040ce24 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000403623 : lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040411b : loope 0x404127 ; movzx eax, cl ; mov rsp, rbp ; pop rbp ; ret
0x000000000040c44f : loopne 0x40c4a0 ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040c44e : loopne 0x40c4a1 ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040dcfb : loopne 0x40dc90 ; loopne 0x40dd50 ; mov esp, ebp ; pop rbp ; ret
0x000000000040dcfa : loopne 0x40dc91 ; loopne 0x40dd51 ; mov esp, ebp ; pop rbp ; ret
0x000000000040dcfe : loopne 0x40dd4d ; mov esp, ebp ; pop rbp ; ret
0x000000000040dcfd : loopne 0x40dd4e ; mov esp, ebp ; pop rbp ; ret
0x0000000000410fc5 : loopne 0x411015 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000410fc4 : loopne 0x411016 ; add esp, 0x20 ; pop rbp ; ret
0x00000000004116fa : loopne 0x411760 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041013e : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000411873 : mov al, 0x48 ; mov edi, dword ptr [rdx] ; mov rsi, qword ptr [rbp - 0x78] ; call rcx
0x00000000004049a9 : mov al, byte ptr [rbp - 0x35] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041bcc9 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041cb64 : mov al, byte ptr [rbp - 6] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000405281 : mov byte ptr [0x621588], al ; pop rbp ; ret
0x0000000000412469 : mov byte ptr [r8 + 0x3b], r9b ; add dword ptr [rdi], ecx ; sahf ; ret 0x348b
0x000000000041246a : mov byte ptr [rax + 0x3b], cl ; add dword ptr [rdi], ecx ; sahf ; ret 0x348b
0x00000000004077e6 : mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x0000000000405488 : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret
0x000000000040a98c : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x000000000040919e : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x000000000040c176 : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 1
0x0000000000402023 : mov byte ptr [rip + 0x21f52e], 1 ; ret
0x000000000040411e : mov dh, -0x3f ; mov rsp, rbp ; pop rbp ; ret
0x0000000000418113 : mov dh, -0x40 ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x00000000004187fd : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x00000000004049af : mov dh, -0x40 ; pop rbp ; ret
0x000000000040525d : mov dword ptr [0x621580], edi ; pop rbp ; ret
0x0000000000407fda : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000408128 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000402589 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000410361 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041cf57 : mov dword ptr [rbp - 0xc], eax ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000402415 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041905c : mov dword ptr [rdi + 0x10], eax ; pop rbp ; ret
0x0000000000414e5e : mov dword ptr [rsi], edi ; pop rbp ; ret
0x000000000040c00c : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000410a05 : mov eax, 0xf0658d48 ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040521d : mov eax, dword ptr [0x621578] ; pop rbp ; ret
0x000000000041b6e1 : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000407f08 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000410531 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405764 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041b6de : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000407f05 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040da45 : mov eax, dword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040cbba : mov eax, dword ptr [rbp - 0x10] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000405653 : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000404775 : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000408294 : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000041043f : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407ebd : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000407fd4 : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040d184 : mov eax, dword ptr [rbp - 0x18] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000410fc3 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040c44d : mov eax, dword ptr [rbp - 0x20] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040dcfc : mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x000000000041d56e : mov eax, dword ptr [rbp - 0x24] ; mov rsp, rbp ; pop rbp ; ret
0x000000000041b4f8 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040812a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040db3b : mov eax, dword ptr [rbp - 0x2c] ; pop rbp ; ret
0x0000000000412f42 : mov eax, dword ptr [rbp - 0x30] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040da08 : mov eax, dword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040c00a : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000041afb1 : mov eax, dword ptr [rbp - 0x60] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000041dcc1 : mov eax, dword ptr [rbp - 0x68] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000041ce7d : mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000412d46 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000413552 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405ffc : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041d0c1 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000411f5d : mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040204b : mov ebp, esp ; call rax
0x0000000000401fb1 : mov ebp, esp ; ja 0x401fbc ; pop rbp ; ret
0x0000000000408957 : mov ecx, dword ptr [rax*8 + 0x41e7f0] ; jmp rcx
0x0000000000409471 : mov ecx, dword ptr [rax*8 + 0x41e838] ; jmp rcx
0x000000000040f5c2 : mov ecx, dword ptr [rax*8 + 0x41ecf0] ; jmp rcx
0x0000000000407fd7 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000402045 : mov edi, 0x620e00 ; mov rbp, rsp ; call rax
0x0000000000401fc2 : mov edi, 0x6214e8 ; jmp rax
0x0000000000402002 : mov edi, 0x6214e8 ; jmp rdx
0x0000000000420371 : mov edi, dr1 ; jmp qword ptr [rcx]
0x0000000000411875 : mov edi, dword ptr [rdx] ; mov rsi, qword ptr [rbp - 0x78] ; call rcx
0x0000000000411af3 : mov edi, dword ptr [rdx] ; mov rsi, qword ptr [rbp - 0xa8] ; call rcx
0x0000000000414e58 : mov edi, dword ptr [rsi] ; add rdi, rax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x000000000041dd37 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000041dd36 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000405ab8 : mov edx, dword ptr [rbp - 0x68] ; add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x000000000040da49 : mov edx, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000411878 : mov esi, dword ptr [rbp - 0x78] ; call rcx
0x0000000000411af6 : mov esi, dword ptr [rbp - 0xa8] ; call rcx
0x0000000000402000 : mov esi, eax ; mov edi, 0x6214e8 ; jmp rdx
0x0000000000403469 : mov esp, ebp ; pop rbp ; ret
0x000000000040525c : mov qword ptr [0x621580], rdi ; pop rbp ; ret
0x000000000041905b : mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x0000000000414e5d : mov qword ptr [rsi], rdi ; pop rbp ; ret
0x000000000040c00b : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x000000000040521c : mov rax, qword ptr [0x621578] ; pop rbp ; ret
0x0000000000410530 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405763 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407f04 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040da44 : mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040cbb9 : mov rax, qword ptr [rbp - 0x10] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000405652 : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000041043e : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407ebc : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040d183 : mov rax, qword ptr [rbp - 0x18] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000410fc2 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040da07 : mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041afb0 : mov rax, qword ptr [rbp - 0x60] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000041dcc0 : mov rax, qword ptr [rbp - 0x68] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000413551 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405ffb : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041d0c0 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040204a : mov rbp, rsp ; call rax
0x0000000000401fb0 : mov rbp, rsp ; ja 0x401fbd ; pop rbp ; ret
0x0000000000408956 : mov rcx, qword ptr [rax*8 + 0x41e7f0] ; jmp rcx
0x0000000000409470 : mov rcx, qword ptr [rax*8 + 0x41e838] ; jmp rcx
0x000000000040f5c1 : mov rcx, qword ptr [rax*8 + 0x41ecf0] ; jmp rcx
0x0000000000411874 : mov rdi, qword ptr [rdx] ; mov rsi, qword ptr [rbp - 0x78] ; call rcx
0x000000000040da48 : mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000411877 : mov rsi, qword ptr [rbp - 0x78] ; call rcx
0x0000000000411af5 : mov rsi, qword ptr [rbp - 0xa8] ; call rcx
0x0000000000401fff : mov rsi, rax ; mov edi, 0x6214e8 ; jmp rdx
0x0000000000403468 : mov rsp, rbp ; pop rbp ; ret
0x0000000000403ece : mov word ptr [rax - 0x77], cs ; ret 0xb0
0x0000000000418129 : movabs al, byte ptr [0xe9b8458948fffffe] ; ret 0xfff0
0x000000000040de0b : movsd xmm0, qword ptr [rbp - 0x18] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000403620 : movups xmm0, xmmword ptr [rax] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040de0c : movups xmm0, xmmword ptr [rbp - 0x18] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000405114 : movups xmm0, xmmword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000418112 : movzx eax, al ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x00000000004187fc : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004049ae : movzx eax, al ; pop rbp ; ret
0x000000000040411d : movzx eax, cl ; mov rsp, rbp ; pop rbp ; ret
0x000000000041fad0 : nop ; ret
0x000000000041dd58 : nop dword ptr [rax + rax] ; ret
0x000000000041f379 : or al, 0 ; add byte ptr [rax], dh ; in eax, -2 ; jmp qword ptr [rax]
0x000000000040c1d9 : or byte ptr [r15], cl ; xchg eax, ebp ; ret 0x348b
0x000000000040a5a3 : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040a5a4 : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000041fe55 : or byte ptr [rax], al ; add al, bh ; fdiv st(6), st(0) ; call rdi
0x000000000040336c : or byte ptr [rcx + 0x138], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x000000000041bfec : or byte ptr [rcx + 0x2038], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x000000000041c42c : or byte ptr [rcx + 0x2138], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000040feed : or byte ptr [rcx + 0x28f9], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x000000000041bd3c : or byte ptr [rcx + 0x3038], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x00000000004020bc : or byte ptr [rcx + 0x38], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x000000000041c32c : or byte ptr [rcx + 0x6138], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x0000000000406085 : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x00000000004164c4 : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x000000000040c1da : or byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x000000000040d54d : or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x000000000040d5ef : or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x000000000041ff85 : or dword ptr [rax], eax ; add al, ch ; add al, -1 ; call rsp
0x000000000041ff84 : or dword ptr fs:[rax], eax ; add al, ch ; add al, -1 ; call rsp
0x0000000000410c8f : or eax, 0x48fffff9 ; add esp, 0x30 ; pop rbp ; ret
0x000000000041f369 : or eax, dword ptr [rax] ; add al, al ; in al, -2 ; jmp rax
0x000000000040845d : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000408794 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041dd4c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004116fc : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000408796 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041dd4e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000408798 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041dd50 : pop r14 ; pop r15 ; ret
0x0000000000407cb6 : pop r14 ; pop rbp ; ret
0x000000000040879a : pop r15 ; pop rbp ; ret
0x000000000041dd52 : pop r15 ; ret
0x0000000000402022 : pop rbp ; mov byte ptr [rip + 0x21f52e], 1 ; ret
0x0000000000401fc1 : pop rbp ; mov edi, 0x6214e8 ; jmp rax
0x0000000000401ffe : pop rbp ; mov rsi, rax ; mov edi, 0x6214e8 ; jmp rdx
0x000000000041dd4b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000408797 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041dd4f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401fb5 : pop rbp ; ret
0x00000000004116fb : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040c9cb : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000407cb5 : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000403627 : pop rbx ; pop rbp ; ret
0x000000000040879b : pop rdi ; pop rbp ; ret
0x000000000041dd53 : pop rdi ; ret
0x000000000041c801 : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x000000000041bec1 : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x0000000000408799 : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000041dd51 : pop rsi ; pop r15 ; ret
0x0000000000407cb7 : pop rsi ; pop rbp ; ret
0x0000000000408795 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041dd4d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004116fd : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041bd44 : popfq ; ret 0x348b
0x000000000041be10 : popfq ; ret 0xc8b
0x000000000041f3df : push qword ptr [rax - 0x1ffffff3] ; adc edi, edi ; call rax
0x00000000004144a3 : push rax ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040cc5e : push rax ; pop rbp ; ret
0x000000000041e3d0 : push rax ; ret
0x00000000004147d8 : push rbp ; call 0xd03c92a
0x0000000000414d9b : push rbp ; call 0xd03ceed
0x000000000040da4a : push rbp ; clc ; pop rbp ; ret
0x0000000000405ab9 : push rbp ; cwde ; add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x000000000040a5a7 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000411872 : push rbp ; mov al, 0x48 ; mov edi, dword ptr [rdx] ; mov rsi, qword ptr [rbp - 0x78] ; call rcx
0x0000000000402044 : push rbp ; mov edi, 0x620e00 ; mov rbp, rsp ; call rax
0x000000000040bf3e : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x00000000004077e5 : pushfq ; mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x0000000000402390 : pushfq ; ret
0x00000000004125e6 : pushfq ; ret 0x48b
0x0000000000409430 : pushfq ; ret 0x844
0x00000000004020fa : pushfq ; ret 0x845
0x000000000040d37a : pushfq ; ret 0xd108
0x0000000000416169 : pushfq ; rol dword ptr [rax + rcx - 0x36], -0xa ; ret 0xf01
0x000000000041f3f4 : rcl byte ptr [rbx], -1 ; call qword ptr [rax]
0x0000000000401a01 : ret
0x0000000000419250 : ret 0x10
0x0000000000402080 : ret 0x125
0x000000000040a995 : ret 0x13
0x000000000041b234 : ret 0x16e8
0x0000000000401e82 : ret 0x21f3
0x0000000000401c82 : ret 0x21f4
0x0000000000401a82 : ret 0x21f5
0x00000000004091a7 : ret 0x2a
0x00000000004020c5 : ret 0x348b
0x0000000000405dc5 : ret 0x4001
0x0000000000419e7a : ret 0x40e8
0x0000000000402867 : ret 0x41e3
0x0000000000402a4e : ret 0x4401
0x000000000040d172 : ret 0x4801
0x00000000004125e7 : ret 0x48b
0x00000000004034f7 : ret 0x48f0
0x0000000000417674 : ret 0x4a3b
0x000000000040d2c7 : ret 0x4cc0
0x000000000040854a : ret 0x4cf0
0x000000000041c807 : ret 0x5588
0x0000000000404a30 : ret 0x5589
0x000000000040a5c0 : ret 0x5ae8
0x000000000041a557 : ret 0x63e8
0x000000000040f29d : ret 0x6de8
0x000000000040d550 : ret 0x7ae8
0x0000000000413015 : ret 0x8041
0x0000000000402386 : ret 0x8141
0x0000000000418a98 : ret 0x82e8
0x0000000000409431 : ret 0x844
0x00000000004020fb : ret 0x845
0x000000000041231a : ret 0x8801
0x0000000000402397 : ret 0x8901
0x000000000040596f : ret 0x8948
0x000000000040a91c : ret 0x89a5
0x00000000004107c3 : ret 0x8b44
0x0000000000404efa : ret 0x8b48
0x00000000004031d0 : ret 0x8d8b
0x000000000040e26e : ret 0x9ce8
0x000000000041391e : ret 0xb
0x0000000000402b2a : ret 0xb0
0x00000000004195fe : ret 0xbce8
0x00000000004147dc : ret 0xc
0x0000000000401fe5 : ret 0xc148
0x0000000000403fa4 : ret 0xc2f6
0x000000000040ee46 : ret 0xc4e8
0x000000000040608e : ret 0xc8b
0x0000000000411982 : ret 0xca08
0x000000000040d37b : ret 0xd108
0x0000000000412c35 : ret 0xd139
0x000000000040d96c : ret 0xd284
0x000000000040d5f2 : ret 0xd8e8
0x0000000000405940 : ret 0xe280
0x0000000000402077 : ret 0xea81
0x000000000040be8c : ret 0xee8
0x0000000000405865 : ret 0xf01
0x0000000000419bc5 : ret 0xf5e8
0x0000000000402a3e : ret 0xf981
0x0000000000414f39 : ret 0xfb81
0x0000000000419dbe : ret 0xfce8
0x0000000000403a0b : ret 0xfe81
0x0000000000404476 : ret 0xff81
0x0000000000403baa : ret 0xffde
0x0000000000403e9a : ret 0xffdf
0x0000000000418122 : ret 0xffef
0x0000000000418132 : ret 0xfff0
0x00000000004165b9 : ret 0xffff
0x000000000040a292 : ret 1
0x00000000004043ea : ret 2
0x000000000040742d : ret 8
0x0000000000407cb1 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000041616a : rol dword ptr [rax + rcx - 0x36], -0xa ; ret 0xf01
0x000000000041a5f3 : ror byte ptr [r15], -0x69 ; ret 0x348b
0x0000000000417cc8 : ror byte ptr [r15], 1 ; xchg eax, esp ; ret 0x348b
0x00000000004100f3 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000401fec : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401ffb ; pop rbp ; ret
0x0000000000418114 : ror byte ptr [rax - 0x73], 0x65 ; clc ; pop rbx ; pop rbp ; ret
0x00000000004187fe : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x00000000004100f4 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x000000000041f368 : ror byte ptr [rbx], 0 ; add al, al ; in al, -2 ; jmp rax
0x000000000040bf3f : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000041a5f4 : ror byte ptr [rdi], -0x69 ; ret 0x348b
0x0000000000417cc9 : ror byte ptr [rdi], 1 ; xchg eax, esp ; ret 0x348b
0x00000000004147d5 : ror dword ptr [rax - 0x75], 1 ; push rbp ; call 0xd03c92d
0x0000000000414d98 : ror dword ptr [rax - 0x75], 1 ; push rbp ; call 0xd03cef0
0x000000000040411f : ror dword ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x000000000041197f : ror dword ptr [rdi], -0x66 ; ret 0xca08
0x000000000041246f : sahf ; ret 0x348b
0x000000000041c806 : sahf ; ret 0x5588
0x000000000041bec6 : sahf ; ret 0xc8b
0x0000000000401fbe : sal byte ptr [rsp + rsi*8 + 0x5d], -0x41 ; call 0xffffffffff4081e5
0x0000000000409434 : sal dh, cl ; ret 0x8901
0x0000000000401fee : sar eax, 1 ; jne 0x401ff9 ; pop rbp ; ret
0x000000000041fcd1 : sar esi, cl ; call qword ptr [rdi]
0x0000000000401fed : sar rax, 1 ; jne 0x401ffa ; pop rbp ; ret
0x000000000041d8a8 : sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000004086d0 : sbb cl, byte ptr [rcx - 0x7f] ; ret
0x0000000000403464 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000041b897 : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040c96d : scasd eax, dword ptr [rdi] ; ret
0x000000000040207f : scasd eax, dword ptr [rdi] ; ret 0x125
0x000000000040353d : scasd eax, dword ptr [rdi] ; ret 0x8141
0x000000000041f36c : shl ah, -2 ; jmp rax
0x000000000041be0a : stc ; add byte ptr [r8], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x000000000041c800 : stc ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x000000000041bec0 : stc ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x000000000040285f : std ; idiv edi ; dec dword ptr [rax - 0x73] ; cmp al, 0x25 ; ret 0x41e3
0x000000000041bccb : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041dd8d : sub esp, 8 ; add rsp, 8 ; ret
0x000000000041dd8c : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000416cc2 : test al, 2 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000041dd5a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000418875 : test byte ptr [rip - 0x17000000], al ; ret
0x000000000040548b : test dword ptr [rip - 0x17000000], eax ; ret
0x000000000040a98f : test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x00000000004091a1 : test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x0000000000413918 : test dword ptr [rip - 0x17000000], eax ; ret 0xb
0x000000000040a28c : test dword ptr [rip - 0x17000000], eax ; ret 1
0x0000000000407427 : test dword ptr [rip - 0x17000000], eax ; ret 8
0x0000000000410de3 : test eax, 0x48fffffc ; add esp, 0x10 ; pop rbp ; ret
0x000000000041fa09 : test edi, esi ; call rbx
0x000000000040df24 : xchg eax, ebp ; ret
0x00000000004020c4 : xchg eax, ebp ; ret 0x348b
0x0000000000413014 : xchg eax, ebp ; ret 0x8041
0x00000000004107c2 : xchg eax, ebp ; ret 0x8b44
0x000000000040608d : xchg eax, ebp ; ret 0xc8b
0x000000000041d564 : xchg eax, ebp ; ret 0xd284
0x000000000041197e : xchg eax, ebp ; ror dword ptr [rdi], -0x66 ; ret 0xca08
0x0000000000416338 : xchg eax, ebx ; ret 0x348b
0x000000000041a5f6 : xchg eax, edi ; ret 0x348b
0x000000000040593f : xchg eax, edi ; ret 0xe280
0x0000000000412b16 : xchg eax, edx ; ret 0x48b
0x0000000000409287 : xchg eax, esi ; ret 0x348b
0x000000000040354f : xchg eax, esp ; ret
0x0000000000417ccb : xchg eax, esp ; ret 0x348b
0x0000000000402385 : xchg eax, esp ; ret 0x8141
0x00000000004115f3 : xchg eax, esp ; ret 0x8b44
0x00000000004164cc : xchg eax, esp ; ret 0xc8b
0x000000000040d96b : xchg eax, esp ; ret 0xd284
0x0000000000402a3d : xchg eax, esp ; ret 0xf981
0x0000000000414f38 : xchg eax, esp ; ret 0xfb81
0x0000000000403a0a : xchg eax, esp ; ret 0xfe81
0x0000000000404475 : xchg eax, esp ; ret 0xff81
0x000000000041fe54 : xor al, 8 ; add byte ptr [rax], al ; clc ; fdiv st(6), st(0) ; call rdi
0x000000000041f1bd : xor bh, dh ; call qword ptr [rax]
0x000000000040d547 : xor byte ptr [rax - 0x75], cl ; add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x000000000040d5e9 : xor byte ptr [rax - 0x75], cl ; add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x000000000041ea28 : xor byte ptr [rcx + 0x40], ah ; add byte ptr [rax], al ; ret
0x000000000041f27c : xor byte ptr [rsi - 2], bh ; call qword ptr [rax]
0x0000000000408126 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
