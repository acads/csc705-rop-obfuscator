0x0000000000448002 : adc al, -0x7f ; ret 0x76c
0x000000000045b77d : adc al, 0 ; add byte ptr [rax], ah ; ret 0xfffc
0x0000000000415392 : adc al, 0x25 ; cmp al, ch ; add byte ptr gs:[rax + 1], cl ; ret 0x8948
0x0000000000421d63 : adc al, 0x25 ; sub al, -0xd ; add byte ptr gs:[rbp - 0x77], al ; ret
0x000000000041467d : adc al, 0x25 ; sub al, -0xd ; add byte ptr gs:[rcx - 0x77], al ; ret
0x0000000000404ac0 : adc al, 0x25 ; sub al, -0xd ; add byte ptr gs:[rcx - 0x77], al ; ret 0x8141
0x000000000045af84 : adc al, 0xc ; add byte ptr [rax], al ; cld ; jmp rax
0x000000000045aa84 : adc al, 7 ; add byte ptr [rax], al ; js 0x45aa92 ; cld ; jmp rsp
0x000000000045ac84 : adc al, 9 ; add byte ptr [rax], al ; js 0x45acab ; cld ; jmp rcx
0x000000000041ae9c : adc byte ptr [rax + rax], ch ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000420a22 : adc byte ptr [rax - 0x7f], cl ; ret 0x10
0x0000000000432258 : adc byte ptr [rax - 0x7f], cl ; ret 1
0x00000000004148ef : adc byte ptr [rax - 0x7f], cl ; ret 2
0x000000000045b41d : adc byte ptr [rax], al ; add byte ptr [rax + 0x7c], dl ; cld ; jmp rsi
0x0000000000416385 : adc byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x000000000044ae4d : adc byte ptr [rbp - 0x18], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000045a390 : adc byte ptr [rbx - 6], bh ; call rax
0x00000000004197f4 : adc byte ptr [rbx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041efbc : adc byte ptr [rdi], bl ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000045c090 : adc cl, ah ; std ; call rbx
0x0000000000423d89 : adc dword ptr [rax + 0x29], ecx ; ret 0x8148
0x00000000004291df : adc dword ptr [rax - 0x7f], ecx ; ret 1
0x0000000000423dd0 : adc dword ptr [rax - 0x7f], ecx ; ret 5
0x000000000045999d : adc dword ptr [rax], eax ; add byte ptr [rax + rdi*8], ch ; sti ; call rsp
0x0000000000413990 : adc eax, 0x5d5b0000 ; ret
0x000000000045b905 : adc eax, 0xf4180000 ; cld ; call qword ptr [rdx]
0x000000000045b695 : adc eax, dword ptr [rax] ; add al, bh ; mov ch, -4 ; call qword ptr [rsi]
0x000000000045cb29 : adc edi, edi ; call qword ptr [rax]
0x000000000045be53 : add ah, ah ; sbb al, byte ptr [rax] ; add byte ptr [rax - 0x62], ch ; std ; call rax
0x000000000045cd33 : add ah, al ; sub dword ptr [rax], eax ; add byte ptr [rax], bl ; xor al, 0xffffffffffffffff ; jmp qword ptr [rbx]
0x000000000045a64b : add ah, bl ; add al, byte ptr [rax] ; add al, dl ; push rbp ; sti ; jmp rsp
0x00000000004598e7 : add ah, ch ; jo 0x4598ea ; jmp rsp
0x0000000000459dc7 : add ah, ch ; xor al, 0xfffffffffffffffd ; call rsp
0x0000000000459bd7 : add ah, cl ; test bh, ah ; call rsp
0x0000000000459c17 : add ah, cl ; xchg eax, ebp ; cld ; call rsp
0x000000000045b943 : add ah, dl ; adc eax, 0xf4180000 ; cld ; call qword ptr [rdx]
0x000000000045a80d : add al, 0 ; add byte ptr [rax], dl ; cwde ; sti ; jmp rdi
0x0000000000409037 : add al, 0x25 ; call 0xffffffffc39d90ab
0x0000000000413051 : add al, 0x25 ; push rax ; out 0x65, al ; add byte ptr [rax + 0x2d], cl ; lodsb al, byte ptr [rsi] ; ret 0xf0
0x000000000042954e : add al, 0x25 ; sub al, -0xd ; add byte ptr gs:[rcx - 0x77], al ; ret 0x8141
0x000000000045c030 : add al, ah ; std ; call qword ptr [rbx]
0x000000000045bc8f : add al, ah ; std ; call qword ptr [rdx]
0x000000000045a62f : add al, al ; push rbp ; sti ; jmp qword ptr [rdi]
0x0000000000458af7 : add al, al ; ret
0x000000000045af07 : add al, bh ; cmp edi, esp ; jmp rdi
0x000000000045a507 : add al, bh ; in eax, dx ; cli ; jmp qword ptr [rdi]
0x000000000045b697 : add al, bh ; mov ch, -4 ; call qword ptr [rsi]
0x000000000045a62d : add al, byte ptr [rax] ; add al, al ; push rbp ; sti ; jmp qword ptr [rdi]
0x000000000045a64d : add al, byte ptr [rax] ; add al, dl ; push rbp ; sti ; jmp rsp
0x000000000041acd9 : add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004078f6 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004110dd : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040cd4a : add al, byte ptr [rax] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000418ee8 : add al, ch ; and al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000434dab : add al, ch ; call rax
0x000000000045cdf7 : add al, ch ; cmp edi, edi ; call rax
0x0000000000410117 : add al, ch ; ret
0x00000000004116e8 : add al, ch ; ret 0xff0b
0x0000000000416b88 : add al, ch ; ret 0xff21
0x000000000042620d : add al, ch ; ret 0xfffd
0x000000000040fc0f : add al, ch ; sti ; xchg eax, edx ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000045b087 : add al, cl ; cld ; call qword ptr [rcx]
0x000000000045c5df : add al, dh ; cmp edi, esi ; jmp qword ptr [rdi]
0x000000000045c89f : add al, dh ; loop 0x45c8a5 ; call rdi
0x000000000045a64f : add al, dl ; push rbp ; sti ; jmp rsp
0x000000000045ca89 : add bh, bh ; call rcx
0x0000000000458dcf : add bl, ah ; ret 0x43
0x000000000045bfc0 : add bl, cl ; std ; call qword ptr [rax]
0x000000000045394f : add bl, dh ; ret
0x000000000041b2bd : add byte ptr [eax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000458af2 : add byte ptr [r8], al ; add byte ptr [rax], al ; add al, al ; ret
0x0000000000458dca : add byte ptr [r8], al ; add byte ptr [rax], al ; add bl, ah ; ret 0x43
0x0000000000454212 : add byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; ret 0x41
0x0000000000458b0a : add byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rdx], ah ; ret
0x00000000004504bb : add byte ptr [r8], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x000000000041d4cd : add byte ptr [r8], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000045ac87 : add byte ptr [rax + 0x1a], bh ; cld ; jmp rcx
0x0000000000413056 : add byte ptr [rax + 0x2d], cl ; lodsb al, byte ptr [rsi] ; ret 0xf0
0x000000000045af87 : add byte ptr [rax + 0x40], cl ; cld ; jmp rax
0x000000000045b41f : add byte ptr [rax + 0x7c], dl ; cld ; jmp rsi
0x0000000000421cb9 : add byte ptr [rax + 0xf012400], dh ; mov dh, -0x40 ; pop rbp ; ret
0x000000000045aa87 : add byte ptr [rax + 1], bh ; cld ; jmp rsp
0x0000000000415397 : add byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000414655 : add byte ptr [rax + 1], cl ; xlatb ; mov rax, rdi ; pop rbp ; ret
0x000000000045ba17 : add byte ptr [rax + 5], bl ; std ; call rdx
0x000000000045a3f3 : add byte ptr [rax + rax - 0x5dd80000], al ; cli ; jmp rcx
0x000000000045a38b : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; adc byte ptr [rbx - 6], bh ; call rax
0x000000000045999f : add byte ptr [rax + rdi*8], ch ; sti ; call rsp
0x000000000045b41b : add byte ptr [rax + rdx + 0x7c500000], ch ; cld ; jmp rsi
0x000000000045a9bf : add byte ptr [rax - 0x1b], dl ; sti ; call qword ptr [rdi]
0x0000000000416943 : add byte ptr [rax - 0x49f0fe1e], al ; ret 0x4589
0x000000000045bef7 : add byte ptr [rax - 0x4a], bl ; std ; jmp rax
0x000000000045be57 : add byte ptr [rax - 0x62], ch ; std ; call rax
0x000000000040af16 : add byte ptr [rax - 0x6bf10000], ah ; ret 0xc8b
0x0000000000415db6 : add byte ptr [rax - 0x6bf10000], al ; ret 0xc8b
0x000000000040cd4b : add byte ptr [rax - 0x73], cl ; clc ; pop rbx ; pop rbp ; ret
0x000000000042c837 : add byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x0000000000428a77 : add byte ptr [rax - 0x75], cl ; loopne 0x428ace ; mov esp, ebp ; pop rbp ; ret
0x000000000041a050 : add byte ptr [rax - 0x75], cl ; push rbp ; call 0x4103d9a8
0x000000000044bca0 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000040911a : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004407bd : add byte ptr [rax - 0x77], cl ; jge 0x4407c0 ; pop rbp ; ret
0x000000000042b1e9 : add byte ptr [rax - 0x77], cl ; or cl, ch ; ret
0x000000000040bc1f : add byte ptr [rax], ah ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x0000000000454217 : add byte ptr [rax], ah ; ret 0x41
0x000000000045b77f : add byte ptr [rax], ah ; ret 0xfffc
0x000000000045af82 : add byte ptr [rax], al ; adc al, 0xc ; add byte ptr [rax], al ; cld ; jmp rax
0x000000000045aa82 : add byte ptr [rax], al ; adc al, 7 ; add byte ptr [rax], al ; js 0x45aa94 ; cld ; jmp rsp
0x000000000045ac82 : add byte ptr [rax], al ; adc al, 9 ; add byte ptr [rax], al ; js 0x45acad ; cld ; jmp rcx
0x000000000045a38e : add byte ptr [rax], al ; adc byte ptr [rbx - 6], bh ; call rax
0x000000000045c08e : add byte ptr [rax], al ; adc cl, ah ; std ; call rbx
0x000000000045c02e : add byte ptr [rax], al ; add al, ah ; std ; call qword ptr [rbx]
0x0000000000458af5 : add byte ptr [rax], al ; add al, al ; ret
0x0000000000418ee6 : add byte ptr [rax], al ; add al, ch ; and al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004116e6 : add byte ptr [rax], al ; add al, ch ; ret 0xff0b
0x0000000000416b86 : add byte ptr [rax], al ; add al, ch ; ret 0xff21
0x000000000040fc0d : add byte ptr [rax], al ; add al, ch ; sti ; xchg eax, edx ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000458dcd : add byte ptr [rax], al ; add bl, ah ; ret 0x43
0x000000000045bfbe : add byte ptr [rax], al ; add bl, cl ; std ; call qword ptr [rax]
0x000000000045394d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000416941 : add byte ptr [rax], al ; add byte ptr [rax - 0x49f0fe1e], al ; ret 0x4589
0x000000000042c835 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x0000000000453568 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004407bb : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jge 0x4407c2 ; pop rbp ; ret
0x000000000042b1e7 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; or cl, ch ; ret
0x0000000000454215 : add byte ptr [rax], al ; add byte ptr [rax], ah ; ret 0x41
0x0000000000458af3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, al ; ret
0x0000000000458dcb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, ah ; ret 0x43
0x000000000045394b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000454213 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; ret 0x41
0x00000000004008e0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400778 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x000000000040adef : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x00000000004008e2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040077a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x000000000040adf1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000458b0b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdx], ah ; ret
0x00000000004094e8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000422ab6 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000451529 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x000000000044dfc9 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004407ba : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000436362 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000042c834 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000420eb9 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004008e4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000453ba4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4051
0x0000000000453bdc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4052
0x000000000045564c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x457c
0x000000000040077c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x000000000045a38d : add byte ptr [rax], al ; add byte ptr [rax], dl ; jnp 0x45a393 ; call rax
0x0000000000421d70 : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x000000000040657d : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x8141
0x000000000043ec58 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004344af : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000042ff2b : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040611a : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret
0x000000000040ddd5 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x844
0x0000000000404ca5 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x000000000041468a : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x0000000000404acd : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x125
0x0000000000432289 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x0000000000404adb : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000434629 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x48b
0x000000000040610f : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x0000000000427269 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8b44
0x000000000040bfdc : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xfa81
0x000000000044e34d : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xfe81
0x00000000004208a6 : add byte ptr [rax], al ; add byte ptr [rcx], cl ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x000000000043ebf8 : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x51], al ; ret
0x000000000044150e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; lahf ; ret 0xc8b
0x00000000004503f0 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x00000000004504bc : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x0000000000404ae5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret
0x000000000040dcff : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x000000000040abdb : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xe280
0x0000000000450eb2 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x0000000000434b15 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x0000000000432fe0 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret
0x0000000000402758 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x125
0x000000000042e7aa : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x000000000040ae25 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x000000000041835a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x3c8b
0x000000000044c36e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x0000000000415e95 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x0000000000404f98 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040adf3 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000044a82c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0x348b
0x000000000044baa1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x00000000004140dd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040a8aa : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x0000000000421eb0 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x000000000043b6b1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x0000000000404434 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x0000000000406ed7 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x0000000000406445 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040a1ba : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf280
0x000000000040a7f9 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf981
0x0000000000443986 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xfe81
0x0000000000407365 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xff81
0x0000000000458b0d : add byte ptr [rax], al ; add byte ptr [rdx], ah ; ret
0x000000000041acd5 : add byte ptr [rax], al ; add cl, ch ; add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000420eb5 : add byte ptr [rax], al ; add cl, ch ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042227d : add byte ptr [rax], al ; add cl, ch ; or al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000403fdc : add byte ptr [rax], al ; add cl, ch ; ret
0x000000000044d23a : add byte ptr [rax], al ; add cl, ch ; ret 0
0x000000000043cc21 : add byte ptr [rax], al ; add cl, ch ; ret 0x13
0x000000000043b433 : add byte ptr [rax], al ; add cl, ch ; ret 0x2a
0x000000000044407d : add byte ptr [rax], al ; add cl, ch ; ret 0x5c
0x0000000000440b31 : add byte ptr [rax], al ; add cl, ch ; ret 0x92
0x00000000004521ba : add byte ptr [rax], al ; add cl, ch ; ret 0xb
0x000000000041b0bc : add byte ptr [rax], al ; add cl, ch ; ret 1
0x0000000000413744 : add byte ptr [rax], al ; add cl, ch ; ret 5
0x00000000004170f9 : add byte ptr [rax], al ; add cl, ch ; ret 8
0x000000000044705a : add byte ptr [rax], al ; add cl, ch ; sysenter
0x000000000045a8b2 : add byte ptr [rax], al ; add eax, 0xa2b80000 ; sti ; call qword ptr [rdx]
0x0000000000414654 : add byte ptr [rax], al ; add rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x00000000004094ea : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000418fef : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000414017 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d828 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000410a55 : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040d3d0 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401e93 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000045b692 : add byte ptr [rax], al ; and al, 0x13 ; add byte ptr [rax], al ; clc ; mov ch, -4 ; call qword ptr [rsi]
0x000000000045cc92 : add byte ptr [rax], al ; and al, 0x29 ; add byte ptr [rax], al ; cwde ; xor bh, bh ; jmp qword ptr [rdi]
0x000000000045c356 : add byte ptr [rax], al ; call 0x1845c191
0x000000000040d4d6 : add byte ptr [rax], al ; call 0x4111c8
0x000000000045cdf6 : add byte ptr [rax], al ; call 0xffffffffd145cd3b
0x000000000045af06 : add byte ptr [rax], al ; clc ; cmp edi, esp ; jmp rdi
0x000000000045a506 : add byte ptr [rax], al ; clc ; in eax, dx ; cli ; jmp qword ptr [rdi]
0x000000000045b696 : add byte ptr [rax], al ; clc ; mov ch, -4 ; call qword ptr [rsi]
0x000000000045af86 : add byte ptr [rax], al ; cld ; jmp rax
0x000000000045a4a6 : add byte ptr [rax], al ; cwde ; in al, dx ; cli ; jmp qword ptr [rdi]
0x000000000045cc96 : add byte ptr [rax], al ; cwde ; xor bh, bh ; jmp qword ptr [rdi]
0x000000000045a64a : add byte ptr [rax], al ; fadd qword ptr [rdx] ; add byte ptr [rax], al ; rcl byte ptr [rbp - 5] ; jmp rsp
0x000000000045c352 : add byte ptr [rax], al ; in al, 0x1f ; add byte ptr [rax], al ; call 0x1845c195
0x00000000004598e6 : add byte ptr [rax], al ; in al, dx ; jo 0x4598eb ; jmp rsp
0x0000000000459dc6 : add byte ptr [rax], al ; in al, dx ; xor al, 0xfffffffffffffffd ; call rsp
0x000000000045c5da : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; and al, byte ptr [rax] ; add al, dh ; cmp edi, esi ; jmp qword ptr [rdi]
0x0000000000459e46 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jns 0x459e4d ; jmp rsp
0x0000000000401fe9 : add byte ptr [rax], al ; jmp 0x401ea9
0x000000000045aa86 : add byte ptr [rax], al ; js 0x45aa90 ; cld ; jmp rsp
0x000000000045ac86 : add byte ptr [rax], al ; js 0x45aca9 ; cld ; jmp rcx
0x000000000045b41a : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; adc byte ptr [rax], al ; add byte ptr [rax + 0x7c], dl ; cld ; jmp rsi
0x000000000045bc8e : add byte ptr [rax], al ; loopne 0x45bce2 ; std ; call qword ptr [rdx]
0x000000000045c02f : add byte ptr [rax], al ; loopne 0x45c034 ; call qword ptr [rbx]
0x000000000045b922 : add byte ptr [rax], al ; mov ah, 0x15 ; add byte ptr [rax], al ; sbb ah, dh ; cld ; call qword ptr [rdx]
0x000000000042806f : add byte ptr [rax], al ; mov al, byte ptr [rbp - 0xa] ; movsx eax, al ; pop rbp ; ret
0x00000000004502ac : add byte ptr [rax], al ; mov al, sil ; movzx eax, al ; pop rbp ; ret
0x00000000004500fd : add byte ptr [rax], al ; mov ax, si ; movzx eax, ax ; pop rbp ; ret
0x000000000043a522 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000044ab79 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x2c] ; pop rbp ; ret
0x000000000045152b : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x000000000044dfcb : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000043fcca : add byte ptr [rax], al ; mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004401ed : add byte ptr [rax], al ; mov eax, edi ; add rsp, 0x10 ; pop rbp ; ret
0x000000000044aa4f : add byte ptr [rax], al ; mov eax, esi ; pop rbp ; ret
0x0000000000459d0e : add byte ptr [rax], al ; mov ebx, gs ; cld ; call rsp
0x000000000045c02a : add byte ptr [rax], al ; mov esp, 0x1c ; loopne 0x45c039 ; call qword ptr [rbx]
0x000000000045a62a : add byte ptr [rax], al ; mov esp, 0xc0000002 ; push rbp ; sti ; jmp qword ptr [rdi]
0x00000000004407bc : add byte ptr [rax], al ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000043a192 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000436364 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000042cc69 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000042c836 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000422f4d : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000440562 : add byte ptr [rax], al ; movzx eax, ax ; mov rsp, rbp ; pop rbp ; ret
0x000000000045a70e : add byte ptr [rax], al ; nop ; movsxd rdi, ebx ; call qword ptr [rcx]
0x000000000045bb3e : add byte ptr [rax], al ; nop ; sbb ch, bh ; call rcx
0x000000000045cf36 : add byte ptr [rax], al ; or byte ptr [rsi - 1], al ; call rsp
0x000000000045bef6 : add byte ptr [rax], al ; pop rax ; mov dh, -3 ; jmp rax
0x000000000040fc13 : add byte ptr [rax], al ; pop rbp ; ret
0x00000000004078f7 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004344b0 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004110de : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000045a9be : add byte ptr [rax], al ; push rax ; in eax, -5 ; call qword ptr [rdi]
0x000000000045b41e : add byte ptr [rax], al ; push rax ; jl 0x45b424 ; jmp rsi
0x000000000045a80a : add byte ptr [rax], al ; pushfq ; add al, 0 ; add byte ptr [rax], dl ; cwde ; sti ; jmp rdi
0x0000000000459926 : add byte ptr [rax], al ; pushfq ; cmpsd dword ptr [rsi], dword ptr [rdi] ; sti ; jmp rsp
0x000000000045a0f6 : add byte ptr [rax], al ; pushfq ; jno 0x45a0fe ; call rsp
0x0000000000459e06 : add byte ptr [rax], al ; pushfq ; push rsi ; std ; jmp rsp
0x000000000045a64e : add byte ptr [rax], al ; rcl byte ptr [rbp - 5] ; jmp rsp
0x00000000004008e6 : add byte ptr [rax], al ; ret
0x0000000000453ba6 : add byte ptr [rax], al ; ret 0x4051
0x0000000000453bde : add byte ptr [rax], al ; ret 0x4052
0x000000000045564e : add byte ptr [rax], al ; ret 0x457c
0x000000000040077e : add byte ptr [rax], al ; ret 3
0x000000000045bfbf : add byte ptr [rax], al ; retf ; std ; call qword ptr [rax]
0x000000000045b906 : add byte ptr [rax], al ; sbb ah, dh ; cld ; call qword ptr [rdx]
0x000000000045a38a : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; adc byte ptr [rbx - 6], bh ; call rax
0x000000000045bfba : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; retf ; std ; call qword ptr [rax]
0x000000000045bc8a : add byte ptr [rax], al ; sbb al, 0x19 ; add byte ptr [rax], al ; loopne 0x45bce6 ; std ; call qword ptr [rdx]
0x000000000045c08a : add byte ptr [rax], al ; sbb al, 0x1d ; add byte ptr [rax], al ; adc cl, ah ; std ; call rbx
0x000000000045cd36 : add byte ptr [rax], al ; sbb byte ptr [rdi + rdi*8], dh ; jmp qword ptr [rbx]
0x000000000045999e : add byte ptr [rax], al ; sub al, -8 ; sti ; call rsp
0x000000000045ab06 : add byte ptr [rax], al ; test al, 3 ; cld ; jmp rax
0x000000000045bef2 : add byte ptr [rax], al ; test byte ptr [rbx], bl ; add byte ptr [rax], al ; pop rax ; mov dh, -3 ; jmp rax
0x000000000045cdf2 : add byte ptr [rax], al ; test byte ptr [rdx], ch ; add byte ptr [rax], al ; call 0xffffffffd145cd3f
0x000000000045b902 : add byte ptr [rax], al ; xchg eax, esp ; adc eax, 0xf4180000 ; cld ; call qword ptr [rdx]
0x000000000045a502 : add byte ptr [rax], al ; xchg eax, esp ; add dword ptr [rax], eax ; add al, bh ; in eax, dx ; cli ; jmp qword ptr [rdi]
0x000000000045af02 : add byte ptr [rax], al ; xchg eax, esp ; or eax, dword ptr [rax] ; add al, bh ; cmp edi, esp ; jmp rdi
0x000000000045a4a2 : add byte ptr [rax], al ; xor al, 1 ; add byte ptr [rax], al ; cwde ; in al, dx ; cli ; jmp qword ptr [rdi]
0x000000000045b75e : add byte ptr [rax], al ; xor cl, al ; cld ; call qword ptr [rax]
0x000000000045b907 : add byte ptr [rax], bl ; hlt ; cld ; call qword ptr [rdx]
0x000000000045cd37 : add byte ptr [rax], bl ; xor al, 0xffffffffffffffff ; jmp qword ptr [rbx]
0x000000000045ca87 : add byte ptr [rax], ch ; add bh, bh ; call rcx
0x000000000045be97 : add byte ptr [rax], ch ; movsd dword ptr [rdi], dword ptr [rsi] ; std ; jmp rbx
0x000000000045a80f : add byte ptr [rax], dl ; cwde ; sti ; jmp rdi
0x000000000045a38f : add byte ptr [rax], dl ; jnp 0x45a391 ; call rax
0x000000000045c08f : add byte ptr [rax], dl ; loope 0x45c094 ; call rbx
0x0000000000421d72 : add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x000000000040657f : add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x8141
0x0000000000459f3f : add byte ptr [rbp + rcx - 2], bl ; jmp rsp
0x000000000045b923 : add byte ptr [rbp + rdx - 0xbe80000], dh ; cld ; call qword ptr [rdx]
0x000000000045b903 : add byte ptr [rbp + rdx - 0xbe80000], dl ; cld ; call qword ptr [rdx]
0x0000000000438a1b : add byte ptr [rbp - 0x3d], bl ; jmp 0x437fd1
0x0000000000421d68 : add byte ptr [rbp - 0x77], al ; ret
0x0000000000406575 : add byte ptr [rbp - 0x77], al ; ret 0x8141
0x00000000004078f8 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004344b1 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x00000000004110df : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000045a70b : add byte ptr [rbx + rax + 0x63900000], bl ; sti ; call qword ptr [rcx]
0x000000000045bef3 : add byte ptr [rbx + rbx - 0x49a80000], al ; std ; jmp rax
0x000000000045af03 : add byte ptr [rbx + rcx + 0x3bf80000], dl ; cld ; jmp rdi
0x000000000045b693 : add byte ptr [rbx + rdx], ah ; add byte ptr [rax], al ; clc ; mov ch, -4 ; call qword ptr [rsi]
0x000000000045c08b : add byte ptr [rbx - 0x1ef00000], bl ; std ; call rbx
0x0000000000410bed : add byte ptr [rbx - 0x2bf4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000410e25 : add byte ptr [rbx - 0x2cb4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004415df : add byte ptr [rbx - 0xc36b], cl ; inc dword ptr [rcx] ; ret 0x9589
0x0000000000416381 : add byte ptr [rcx + 0x1000f9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x00000000004126f6 : add byte ptr [rcx + 0x2000f9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x0000000000415fee : add byte ptr [rcx + 0x4000f9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x000000000040a1b7 : add byte ptr [rcx + 0x4000f9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf280
0x000000000045b083 : add byte ptr [rcx + 0x4ac80000], dl ; cld ; call qword ptr [rcx]
0x000000000040bc1c : add byte ptr [rcx + 0x6000f9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x000000000044150a : add byte ptr [rcx + 0x7f9], al ; add byte ptr [rdi], cl ; lahf ; ret 0xc8b
0x0000000000415db3 : add byte ptr [rcx + 0x8000f9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x000000000040af13 : add byte ptr [rcx + 0xa000f9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x0000000000415e91 : add byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x0000000000431c32 : add byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000443982 : add byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xfe81
0x00000000004140e9 : add byte ptr [rcx + 0xf], al ; pushfq ; mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x000000000040611c : add byte ptr [rcx + 0xf], al ; pushfq ; ret
0x000000000040ddd7 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x844
0x0000000000404ca7 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x000000000040a804 : add byte ptr [rcx + 0xf], al ; pushfq ; rol dword ptr [rax + rcx - 0x36], -0xa ; ret 0xf01
0x000000000041468c : add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x0000000000404acf : add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x125
0x000000000043228b : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x0000000000404add : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000043462b : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x48b
0x0000000000406111 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x000000000042726b : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8b44
0x000000000040bfde : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xfa81
0x000000000044e34f : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xfe81
0x000000000043efcc : add byte ptr [rcx + 0xfe], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000404748 : add byte ptr [rcx + 0xfe], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x0000000000417d70 : add byte ptr [rcx + 0xfe], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xff81
0x0000000000418356 : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x3c8b
0x000000000043f808 : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000043b6ad : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x0000000000404430 : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x000000000045a503 : add byte ptr [rcx + rax - 0x12080000], dl ; cli ; jmp qword ptr [rdi]
0x0000000000421cbb : add byte ptr [rcx + rax], ah ; movzx eax, al ; pop rbp ; ret
0x000000000045a4a3 : add byte ptr [rcx + rax], dh ; add byte ptr [rax], al ; cwde ; in al, dx ; cli ; jmp qword ptr [rdi]
0x000000000045cc93 : add byte ptr [rcx + rbp], ah ; add byte ptr [rax], al ; cwde ; xor bh, bh ; jmp qword ptr [rdi]
0x000000000045bc8b : add byte ptr [rcx + rbx], bl ; add byte ptr [rax], al ; loopne 0x45bce5 ; std ; call qword ptr [rdx]
0x000000000045ac83 : add byte ptr [rcx + rcx], dl ; add byte ptr [rax], al ; js 0x45acac ; cld ; jmp rcx
0x0000000000459e47 : add byte ptr [rcx + rdi*2 - 3], ch ; jmp rsp
0x0000000000414682 : add byte ptr [rcx - 0x77], al ; ret
0x0000000000404ac5 : add byte ptr [rcx - 0x77], al ; ret 0x8141
0x000000000040ebb1 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000402628 : add byte ptr [rcx], al ; ret
0x00000000004208a8 : add byte ptr [rcx], cl ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x000000000045ab03 : add byte ptr [rdi + rax + 0x3a80000], dl ; cld ; jmp rax
0x000000000045aa83 : add byte ptr [rdi + rax], dl ; add byte ptr [rax], al ; js 0x45aa93 ; cld ; jmp rsp
0x000000000043ebfa : add byte ptr [rdi + rcx - 0x51], al ; ret
0x0000000000441510 : add byte ptr [rdi], cl ; lahf ; ret 0xc8b
0x0000000000440563 : add byte ptr [rdi], cl ; mov bh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x00000000004503f2 : add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x00000000004504be : add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x0000000000404ae7 : add byte ptr [rdi], cl ; pushfq ; ret
0x000000000040dd01 : add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x000000000040abdd : add byte ptr [rdi], cl ; pushfq ; ret 0xe280
0x0000000000450eb4 : add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x0000000000434b17 : add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x0000000000432fe2 : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret
0x000000000040275a : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x125
0x000000000042e7ac : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000004083dc : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x000000000041835c : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x3c8b
0x000000000044c370 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x0000000000415e97 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x0000000000404f9a : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040adf5 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000044a82e : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0x348b
0x000000000041a263 : add byte ptr [rdi], cl ; xchg eax, edx ; ret
0x000000000044baa3 : add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x00000000004140df : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040a8ac : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x0000000000421eb2 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x000000000043b6b3 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x0000000000404436 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x0000000000406ed9 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x0000000000406447 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040a1bd : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf280
0x000000000040a7fb : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf981
0x0000000000443988 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xfe81
0x0000000000407367 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xff81
0x000000000045a62b : add byte ptr [rdx + rax + 0x55c00000], bh ; sti ; jmp qword ptr [rdi]
0x0000000000458b0f : add byte ptr [rdx], ah ; ret
0x0000000000423546 : add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x0000000000406443 : add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000045c5db : add byte ptr [rdx], ch ; add al, dh ; cmp edi, esi ; jmp qword ptr [rdi]
0x000000000042b72f : add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x000000000045a9bb : add byte ptr [rsi + rax], cl ; add byte ptr [rax - 0x1b], dl ; sti ; call qword ptr [rdi]
0x000000000045ba13 : add byte ptr [rsi + rdx + 0x5580000], ah ; std ; call rdx
0x000000000045a137 : add byte ptr [rsi + rdx - 1], bh ; call rsp
0x000000000045a80b : add byte ptr [rsp + rax - 0x67f00000], bl ; sti ; jmp rdi
0x000000000045c02b : add byte ptr [rsp + rbx - 0x20000000], bh ; std ; call qword ptr [rbx]
0x000000000045bfbb : add byte ptr [rsp + rbx], cl ; add byte ptr [rax], al ; retf ; std ; call qword ptr [rax]
0x000000000045af83 : add byte ptr [rsp + rcx], dl ; add byte ptr [rax], al ; cld ; jmp rax
0x000000000041e45d : add byte ptr cs:[rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000413055 : add byte ptr gs:[rax + 0x2d], cl ; lodsb al, byte ptr [rsi] ; ret 0xf0
0x0000000000415396 : add byte ptr gs:[rax + 1], cl ; ret 0x8948
0x000000000041a04f : add byte ptr gs:[rax - 0x75], cl ; push rbp ; call 0x4103d9a9
0x0000000000409119 : add byte ptr gs:[rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000041b57d : add byte ptr gs:[rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000421d67 : add byte ptr gs:[rbp - 0x77], al ; ret
0x0000000000406574 : add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x0000000000414681 : add byte ptr gs:[rcx - 0x77], al ; ret
0x0000000000404ac4 : add byte ptr gs:[rcx - 0x77], al ; ret 0x8141
0x000000000040ebb0 : add byte ptr gs:[rcx], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000041a262 : add byte ptr gs:[rdi], cl ; xchg eax, edx ; ret
0x0000000000423545 : add byte ptr gs:[rdx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x0000000000406442 : add byte ptr gs:[rdx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041acd7 : add cl, ch ; add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000420eb7 : add cl, ch ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042227f : add cl, ch ; or al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000403fde : add cl, ch ; ret
0x000000000044d23c : add cl, ch ; ret 0
0x000000000043cc23 : add cl, ch ; ret 0x13
0x000000000043b435 : add cl, ch ; ret 0x2a
0x000000000044407f : add cl, ch ; ret 0x5c
0x0000000000440b33 : add cl, ch ; ret 0x92
0x00000000004521bc : add cl, ch ; ret 0xb
0x000000000041b0be : add cl, ch ; ret 1
0x000000000040d4dc : add cl, ch ; ret 2
0x0000000000413746 : add cl, ch ; ret 5
0x00000000004170fb : add cl, ch ; ret 8
0x000000000044705c : add cl, ch ; sysenter
0x000000000043f7da : add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x000000000043f87c : add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x000000000045a505 : add dword ptr [rax], eax ; add al, bh ; in eax, dx ; cli ; jmp qword ptr [rdi]
0x0000000000422f4c : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000044aa4d : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, esi ; pop rbp ; ret
0x0000000000452d44 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000043de80 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004327c4 : add dword ptr [rcx], eax ; ret 0x8b4c
0x000000000042337b : add dword ptr [rdi], ecx ; mov dh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000421b03 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000422415 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000423423 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x000000000042f3f0 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x000000000042090a : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x00000000004092d7 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x000000000042d578 : add dword ptr [rdi], ecx ; ror dword ptr cs:[rdi], -0x69 ; ret 0x348b
0x0000000000403fd8 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret
0x000000000044d236 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0
0x000000000043cc1d : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x000000000043b42f : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x0000000000440b2d : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0x92
0x00000000004521b6 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0xb
0x000000000041b0b8 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 1
0x0000000000413740 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 5
0x00000000004170f5 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 8
0x0000000000447056 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; sysenter
0x00000000004368d7 : add dword ptr [rdi], ecx ; xchg eax, edi ; ret 0x348b
0x0000000000431d94 : add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0xe280
0x00000000004302c7 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x348b
0x0000000000402624 : add eax, 0x25c00e ; add ebx, esi ; ret
0x0000000000448e43 : add eax, 0x6348ca01 ; ret 0x6948
0x000000000045a8b5 : add eax, 0xa2b80000 ; sti ; call qword ptr [rdx]
0x0000000000403fdb : add eax, 0xe9000000 ; ret
0x000000000044d239 : add eax, 0xe9000000 ; ret 0
0x000000000043cc20 : add eax, 0xe9000000 ; ret 0x13
0x000000000043b432 : add eax, 0xe9000000 ; ret 0x2a
0x0000000000440b30 : add eax, 0xe9000000 ; ret 0x92
0x00000000004521b9 : add eax, 0xe9000000 ; ret 0xb
0x000000000041b0bb : add eax, 0xe9000000 ; ret 1
0x0000000000413743 : add eax, 0xe9000000 ; ret 5
0x00000000004170f8 : add eax, 0xe9000000 ; ret 8
0x0000000000447059 : add eax, 0xe9000000 ; sysenter
0x00000000004025eb : add eax, edx ; sar rax, 1 ; jne 0x4025fc ; pop rbp ; ret
0x0000000000402629 : add ebx, esi ; ret
0x0000000000438aa7 : add ecx, dword ptr [rax + 1] ; ret 0x8b48
0x0000000000414657 : add edi, edx ; mov rax, rdi ; pop rbp ; ret
0x000000000045ab09 : add edi, esp ; jmp rax
0x00000000004092f6 : add esp, 0x10 ; pop rbp ; ret
0x000000000041398d : add esp, 0x15c8 ; pop rbx ; pop rbp ; ret
0x000000000043de7d : add esp, 0x178 ; pop rbx ; pop rbp ; ret
0x0000000000418ff2 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000044be8c : add esp, 0x1a0 ; pop rbp ; ret
0x000000000041401a : add esp, 0x20 ; pop rbp ; ret
0x00000000004110da : add esp, 0x2f8 ; pop rbx ; pop rbp ; ret
0x000000000040c7f0 : add esp, 0x30 ; pop rbp ; ret
0x00000000004197f2 : add esp, 0x310 ; pop rbp ; ret
0x0000000000410a58 : add esp, 0x40 ; pop rbp ; ret
0x000000000044b9cf : add esp, 0x40 ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000414b3c : add esp, 0x410 ; pop rbp ; ret
0x000000000040d3d3 : add esp, 0x50 ; pop rbp ; ret
0x000000000040da80 : add esp, 0x60 ; pop rbp ; ret
0x0000000000417953 : add esp, 0x68 ; pop rbx ; pop rbp ; ret
0x000000000040ff64 : add esp, 0x70 ; pop rbp ; ret
0x00000000004265a3 : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004287cd : add esp, 0x80 ; pop rbp ; ret
0x0000000000419f59 : add esp, 0x90 ; pop rbp ; ret
0x0000000000438a16 : add esp, 0xa0 ; pop rbp ; ret
0x0000000000449de2 : add esp, 0xa68 ; pop rbx ; pop rbp ; ret
0x000000000044bcec : add esp, 0xb0 ; pop rbp ; ret
0x0000000000418d3d : add esp, 0xc0 ; pop rbp ; ret
0x0000000000424d8f : add esp, 0xd0 ; pop rbp ; ret
0x000000000042ff28 : add esp, 0xd8 ; pop rbx ; pop rbp ; ret
0x000000000044ddf7 : add esp, 0xf0 ; pop rbp ; ret
0x0000000000401e96 : add esp, 8 ; ret
0x000000000045aa89 : add esp, edi ; jmp rsp
0x0000000000434daa : add r8b, r13b ; call rax
0x00000000004025ea : add rax, rdx ; sar rax, 1 ; jne 0x4025fd ; pop rbp ; ret
0x0000000000414656 : add rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x00000000004092f5 : add rsp, 0x10 ; pop rbp ; ret
0x000000000041398c : add rsp, 0x15c8 ; pop rbx ; pop rbp ; ret
0x000000000043de7c : add rsp, 0x178 ; pop rbx ; pop rbp ; ret
0x0000000000418ff1 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000044be8b : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000414019 : add rsp, 0x20 ; pop rbp ; ret
0x00000000004110d9 : add rsp, 0x2f8 ; pop rbx ; pop rbp ; ret
0x000000000040c7ef : add rsp, 0x30 ; pop rbp ; ret
0x00000000004197f1 : add rsp, 0x310 ; pop rbp ; ret
0x0000000000410a57 : add rsp, 0x40 ; pop rbp ; ret
0x000000000044b9ce : add rsp, 0x40 ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000414b3b : add rsp, 0x410 ; pop rbp ; ret
0x000000000040d3d2 : add rsp, 0x50 ; pop rbp ; ret
0x000000000040da7f : add rsp, 0x60 ; pop rbp ; ret
0x0000000000417952 : add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x000000000040ff63 : add rsp, 0x70 ; pop rbp ; ret
0x00000000004265a2 : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004287cc : add rsp, 0x80 ; pop rbp ; ret
0x0000000000419f58 : add rsp, 0x90 ; pop rbp ; ret
0x0000000000438a15 : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000449de1 : add rsp, 0xa68 ; pop rbx ; pop rbp ; ret
0x000000000044bceb : add rsp, 0xb0 ; pop rbp ; ret
0x0000000000418d3c : add rsp, 0xc0 ; pop rbp ; ret
0x0000000000424d8e : add rsp, 0xd0 ; pop rbp ; ret
0x000000000042ff27 : add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x000000000044ddf6 : add rsp, 0xf0 ; pop rbp ; ret
0x0000000000401e95 : add rsp, 8 ; ret
0x0000000000459e45 : and al, 0 ; add byte ptr [rcx + rdi*2 - 3], ch ; jmp rsp
0x000000000045b694 : and al, 0x13 ; add byte ptr [rax], al ; clc ; mov ch, -4 ; call qword ptr [rsi]
0x000000000045cc94 : and al, 0x29 ; add byte ptr [rax], al ; cwde ; xor bh, bh ; jmp qword ptr [rdi]
0x0000000000420909 : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004092d6 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000458b10 : and al, bl ; add byte ptr [r8], al ; add byte ptr [rax], al ; add al, al ; ret
0x0000000000459dc5 : and al, byte ptr [rax] ; add ah, ch ; xor al, 0xfffffffffffffffd ; call rsp
0x000000000045c5dd : and al, byte ptr [rax] ; add al, dh ; cmp edi, esi ; jmp qword ptr [rdi]
0x0000000000418eea : and al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042b441 : and byte ptr [r15], cl ; xchg eax, esp ; ret 0x348b
0x00000000004126fa : and byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x000000000042b442 : and byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x0000000000422f4b : and dword ptr [rcx], eax ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000042cce5 : and eax, 0x4585d0 ; mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x000000000043f907 : and eax, 0x48ffffee ; add esp, 0x20 ; pop rbp ; ret
0x0000000000404619 : and eax, 0x65e578 ; pop rbp ; ret
0x0000000000409038 : and eax, 0x65e844 ; pop rbp ; ret
0x0000000000409116 : and eax, 0x65e848 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000426c9f : and eax, 0x65f1a0 ; pop rbp ; ret
0x0000000000426cc3 : and eax, 0x65f1a8 ; pop rbp ; ret
0x000000000045c358 : call 0x1845c18f
0x0000000000448e36 : call 0x207175e
0x0000000000448e7a : call 0x20717a2
0x0000000000448ec3 : call 0x20717eb
0x0000000000435c81 : call 0x401f42
0x0000000000435c80 : call 0x401f43
0x0000000000436047 : call 0x4022a2
0x000000000042620e : call 0x402462
0x000000000041a054 : call 0x4103d9a4
0x000000000040d4d8 : call 0x4111c6
0x000000000043629a : call 0x4905ebea
0x0000000000436299 : call 0x4905ebeb
0x000000000043629a : call 0x4905ebed
0x0000000000436299 : call 0x4905ebee
0x000000000043653c : call 0x4905ee8c
0x000000000043653b : call 0x4905ee8d
0x000000000043653c : call 0x4905ee8f
0x000000000043653b : call 0x4905ee90
0x00000000004145bd : call 0xffffffff8389462f
0x000000000040903a : call 0xffffffffc39d90a8
0x0000000000409039 : call 0xffffffffc39d90a9
0x000000000045cdf8 : call 0xffffffffd145cd39
0x000000000043e119 : call 0xffffffffe9066a69
0x000000000043e118 : call 0xffffffffe9066a6a
0x0000000000408156 : call 0xffffffffff40c69b
0x000000000042db64 : call 0xffffffffff7c66b5
0x000000000042db63 : call 0xffffffffff7c66b6
0x0000000000453929 : call qword ptr [r12 + rbx*8]
0x000000000042687d : call qword ptr [rax]
0x000000000045c033 : call qword ptr [rbx]
0x000000000045a713 : call qword ptr [rcx]
0x000000000045a9c3 : call qword ptr [rdi]
0x000000000045a8bb : call qword ptr [rdx]
0x000000000045b69b : call qword ptr [rsi]
0x000000000045392a : call qword ptr [rsp + rbx*8]
0x000000000042be6d : call r8
0x000000000040264d : call rax
0x000000000045c093 : call rbx
0x0000000000420bb9 : call rcx
0x000000000045c8a3 : call rdi
0x0000000000421ad6 : call rdx
0x00000000004599a3 : call rsp
0x0000000000431fbd : cdq ; ret 0xb60f
0x00000000004110dc : clc ; add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004327c3 : clc ; add dword ptr [rcx], eax ; ret 0x8b4c
0x0000000000431398 : clc ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042c126 : clc ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042ca50 : clc ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000430562 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004310c5 : clc ; add rsp, 0xc0 ; pop rbp ; ret
0x000000000045af08 : clc ; cmp edi, esp ; jmp rdi
0x000000000045a508 : clc ; in eax, dx ; cli ; jmp qword ptr [rdi]
0x00000000004025ef : clc ; jne 0x4025f8 ; pop rbp ; ret
0x00000000004378cd : clc ; mov byte ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000045b698 : clc ; mov ch, -4 ; call qword ptr [rsi]
0x000000000043b704 : clc ; mov dword ptr [rbp], eax ; jmp rcx
0x000000000043a03c : clc ; mov qword ptr [rbp - 0x10], rsi ; pop rbp ; ret
0x000000000043115e : clc ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000424f37 : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000042ad2b : clc ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000042ad4b : clc ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000042ad6b : clc ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x00000000004406ab : clc ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x00000000004406cb : clc ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000041465b : clc ; pop rbp ; ret
0x000000000040922c : clc ; pop rbx ; pop rbp ; ret
0x00000000004599a1 : clc ; sti ; call rsp
0x00000000004108b7 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041ae58 : cld ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000422744 : cld ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000423217 : cld ; add rsp, 0x50 ; pop rbp ; ret
0x000000000042a88d : cld ; add rsp, 0x60 ; pop rbp ; ret
0x000000000044f68d : cld ; add rsp, 0xf0 ; pop rbp ; ret
0x000000000045b5ca : cld ; call qword ptr [rax]
0x000000000045b08a : cld ; call qword ptr [rcx]
0x000000000045b90a : cld ; call qword ptr [rdx]
0x000000000045b69a : cld ; call qword ptr [rsi]
0x0000000000459bda : cld ; call rsp
0x000000000045ab0a : cld ; jmp rax
0x000000000045ac8a : cld ; jmp rcx
0x000000000045af0a : cld ; jmp rdi
0x000000000045b422 : cld ; jmp rsi
0x000000000045aa8a : cld ; jmp rsp
0x0000000000404616 : cld ; mov dword ptr [0x65e578], eax ; pop rbp ; ret
0x0000000000451606 : cld ; mov dword ptr [rbp - 0xc], eax ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x000000000042aae9 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041ae55 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000422741 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000044dfcf : cld ; pop rbp ; ret
0x0000000000459c12 : cld ; push qword ptr [rbx + rbx - 0x6a340000] ; cld ; call rsp
0x0000000000459d0a : cld ; push qword ptr [rdi + rbx - 0x14740000] ; cld ; call rsp
0x0000000000459bd2 : cld ; push qword ptr [rdx + rbx - 0x7b340000] ; cld ; call rsp
0x0000000000459c52 : cld ; push qword ptr [rsp + rbx - 0x60440000] ; cld ; call rsp
0x0000000000448e42 : cli ; add eax, 0x6348ca01 ; ret 0x6948
0x0000000000451216 : cli ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000045a392 : cli ; call rax
0x000000000045a3da : cli ; jmp qword ptr [rax]
0x000000000045a4aa : cli ; jmp qword ptr [rdi]
0x000000000045a3fa : cli ; jmp rcx
0x0000000000419857 : cmc ; ret
0x0000000000434dc8 : cmove ecx, edx ; movsxd rax, ecx ; pop rbp ; ret
0x000000000040d4da : cmp al, 0 ; add cl, ch ; ret 2
0x0000000000434da6 : cmp al, 0x25 ; or al, 0xffffffffffffff86 ; add r8b, r13b ; call rax
0x0000000000408dfc : cmp al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000044fa59 : cmp al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000455648 : cmp al, byte ptr [rdx + 0x45] ; add byte ptr [rax], al ; ret 0x457c
0x0000000000415394 : cmp al, ch ; add byte ptr gs:[rax + 1], cl ; ret 0x8948
0x000000000045069e : cmp byte ptr [rax], ah ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x000000000042bb1d : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004503ee : cmp byte ptr [rax], dh ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x0000000000450ade : cmp byte ptr [rcx], ah ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x0000000000439039 : cmp cl, byte ptr [rax - 0x75] ; jne 0x438fd6 ; mov rsi, qword ptr [rsi] ; call rcx
0x000000000042c965 : cmp dword ptr [rax - 0x75], ecx ; jne 0x42c94f ; call rax
0x0000000000427267 : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8b44
0x000000000042e7a8 : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x000000000040e572 : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x000000000044c36c : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x000000000043e5ad : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404e86 : cmp dword ptr [rbp], eax ; jmp rcx
0x00000000004025ad : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4025c0 ; pop rbp ; ret
0x000000000045cdf9 : cmp edi, edi ; call rax
0x000000000045c5e1 : cmp edi, esi ; jmp qword ptr [rdi]
0x000000000045af09 : cmp edi, esp ; jmp rdi
0x0000000000459929 : cmpsd dword ptr [rsi], dword ptr [rdi] ; sti ; jmp rsp
0x000000000045a4a8 : cwde ; in al, dx ; cli ; jmp qword ptr [rdi]
0x0000000000438032 : cwde ; mov rcx, qword ptr [rax*8 + 0x458670] ; jmp rcx
0x000000000045a811 : cwde ; sti ; jmp rdi
0x000000000045cc98 : cwde ; xor bh, bh ; jmp qword ptr [rdi]
0x00000000004190e0 : dec byte ptr [r15] ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x00000000004190e1 : dec byte ptr [rdi] ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x00000000004061df : dec byte ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x00000000004159c0 : dec byte ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret
0x0000000000431902 : dec byte ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x0000000000417dda : dec dword ptr [rax + 0x29] ; ror byte ptr [rax - 0x77], 1 ; ret 0xbae8
0x00000000004156cc : dec dword ptr [rax + 0x39] ; ret 0x840f
0x0000000000431d91 : dec dword ptr [rax + 0x3b] ; add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0xe280
0x00000000004120f2 : dec dword ptr [rax + 1] ; ret 0x8948
0x0000000000420cb9 : dec dword ptr [rax - 0x75] ; adc byte ptr [rax - 0x7f], cl ; ret 0x10
0x0000000000432255 : dec dword ptr [rax - 0x75] ; adc byte ptr [rax - 0x7f], cl ; ret 1
0x00000000004148ec : dec dword ptr [rax - 0x75] ; adc byte ptr [rax - 0x7f], cl ; ret 2
0x0000000000439705 : dec dword ptr [rax - 0x75] ; call rcx
0x0000000000436042 : dec dword ptr [rax - 0x75] ; jge 0x43603e ; call 0x4022a7
0x0000000000408151 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; call 0xffffffffff40c6a0
0x000000000043b6ff : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; clc ; mov dword ptr [rbp], eax ; jmp rcx
0x00000000004073ae : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; enter 0x453c, 0 ; jmp rcx
0x00000000004187a5 : dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x00000000004371aa : dec dword ptr [rax - 0x77] ; ret 0x8de8
0x0000000000410bf3 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000407178 : dec dword ptr [rax - 0x77] ; ret 0xfe8
0x0000000000452ab4 : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000040bd00 : dec dword ptr [rdi] ; pushfq ; ret 0xc8b
0x0000000000440d77 : dec dword ptr [rdi] ; xchg eax, edx ; ret 0x348b
0x000000000041a299 : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret
0x0000000000404ca3 : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x000000000040dcfd : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x000000000043e1cb : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000042e094 : enter -0x74b8, 0x32 ; mov rdi, qword ptr [rsi] ; call rcx
0x000000000042c962 : enter -0x74b8, 0x39 ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x000000000043fc9a : enter -0x7cb8, -0x3c ; pop rbp ; ret
0x000000000041398f : enter 0x15, 0 ; pop rbx ; pop rbp ; ret
0x00000000004073b3 : enter 0x453c, 0 ; jmp rcx
0x000000000042ff2a : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000045a64c : fadd qword ptr [rdx] ; add byte ptr [rax], al ; rcl byte ptr [rbp - 5] ; jmp rsp
0x00000000004340e2 : faddp st(1) ; fstp xword ptr [rbp - 0x20] ; fld xword ptr [rbp - 0x20] ; pop rbp ; ret
0x0000000000431529 : fbld dword ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000043152a : fbld dword ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x0000000000408877 : fiadd dword ptr [rcx - 0xa] ; ret 0x4001
0x000000000040bfef : fiadd dword ptr [rcx - 0xa] ; ret 0x4401
0x0000000000419b50 : fiadd dword ptr [rcx - 0xa] ; ret 0x4801
0x0000000000440388 : fiadd dword ptr [rcx - 0xa] ; ret 0x6601
0x0000000000406123 : fiadd dword ptr [rcx - 0xa] ; ret 0x8801
0x000000000040fe77 : fiadd dword ptr [rcx - 0xa] ; ret 0x8901
0x0000000000408b11 : fiadd dword ptr [rcx - 0xa] ; ret 0xf01
0x0000000000404aed : fild dword ptr [rcx - 0xa] ; ret
0x0000000000402647 : fisub word ptr [rbp] ; mov rbp, rsp ; call rax
0x00000000004340e7 : fld xword ptr [rbp - 0x20] ; pop rbp ; ret
0x000000000043808a : fmul dword ptr [rax + 0x29] ; ror byte ptr [rax - 0x77], 1 ; ret 0xae8
0x000000000043c838 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000045392c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000414397 : fmul qword ptr [rdi] ; lahf ; ret 0x48b
0x00000000004340e4 : fstp xword ptr [rbp - 0x20] ; fld xword ptr [rbp - 0x20] ; pop rbp ; ret
0x0000000000410889 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000045b909 : hlt ; cld ; call qword ptr [rdx]
0x0000000000451609 : hlt ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x00000000004025c0 : hlt ; pop rbp ; mov edi, 0x65e5d8 ; jmp rax
0x000000000045152f : hlt ; pop rbp ; ret
0x000000000045c9a9 : idiv dh ; call rsp
0x000000000045c9e9 : idiv esi ; jmp rcx
0x000000000045c354 : in al, 0x1f ; add byte ptr [rax], al ; call 0x1845c193
0x0000000000423050 : in al, 0x48 ; add esp, 0x20 ; pop rbp ; ret
0x000000000041ba50 : in al, 0x48 ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000044f98d : in al, dx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000420ddf : in al, dx ; add rsp, 0x30 ; pop rbp ; ret
0x000000000045a4a9 : in al, dx ; cli ; jmp qword ptr [rdi]
0x00000000004598e8 : in al, dx ; jo 0x4598e9 ; jmp rsp
0x000000000040911d : in al, dx ; pop rbp ; ret
0x0000000000459dc8 : in al, dx ; xor al, 0xfffffffffffffffd ; call rsp
0x000000000045a9c1 : in eax, -5 ; call qword ptr [rdi]
0x000000000043fce3 : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x0000000000406441 : in eax, 0x65 ; add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000045a509 : in eax, dx ; cli ; jmp qword ptr [rdi]
0x0000000000458b20 : in eax, dx ; mov byte ptr [rbx], 0 ; add byte ptr [rax], al ; add al, al ; ret
0x0000000000458dc8 : in eax, dx ; mov byte ptr [rbx], 0 ; add byte ptr [rax], al ; add bl, ah ; ret 0x43
0x00000000004096aa : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000408861 : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x0000000000437a15 : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040474a : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x0000000000417d72 : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xff81
0x0000000000432356 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000418b77 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x0000000000418358 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x3c8b
0x000000000040ae0f : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000043f80a : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000043b6af : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x0000000000404432 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x00000000004504b8 : inc dword ptr [rcx + 0x41f9] ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x0000000000450eae : inc dword ptr [rcx + 0x5af9] ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x000000000045056e : inc dword ptr [rcx + 0x5af9] ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x000000000040a8a6 : inc dword ptr [rcx + 0x5f38] ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x0000000000426037 : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x8b44
0x00000000004415e5 : inc dword ptr [rcx] ; ret 0x9589
0x0000000000411ecf : inc esi ; jmp qword ptr [rax]
0x0000000000459e43 : inc esp ; and al, 0 ; add byte ptr [rcx + rdi*2 - 3], ch ; jmp rsp
0x0000000000459923 : inc esp ; sldt word ptr [rax] ; pushfq ; cmpsd dword ptr [rsi], dword ptr [rdi] ; sti ; jmp rsp
0x0000000000459f3b : inc esp ; sub byte ptr [rax], al ; add byte ptr [rbp + rcx - 2], bl ; jmp rsp
0x000000000041ae9d : insb byte ptr [rdi], dx ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000045c5dc : insb byte ptr [rdi], dx ; and al, byte ptr [rax] ; add al, dh ; cmp edi, esi ; jmp qword ptr [rdi]
0x0000000000459e48 : insb byte ptr [rdi], dx ; jns 0x459e4b ; jmp rsp
0x0000000000455730 : insb byte ptr [rdi], dx ; mov es, word ptr [rbp] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000041ad1d : insd dword ptr [rdi], dx ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004340e8 : insd dword ptr [rdi], dx ; loopne 0x43414b ; ret
0x000000000044bca8 : int 0x80
0x0000000000423544 : int1 ; add byte ptr gs:[rdx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x00000000004025b3 : ja 0x4025ba ; pop rbp ; ret
0x0000000000431161 : ja 0x4311ae ; pop rbp ; ret
0x00000000004025bf : je 0x4025bd ; pop rbp ; mov edi, 0x65e5d8 ; jmp rax
0x000000000042188e : jge 0x421851 ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x38] ; call rax
0x0000000000424f36 : jge 0x424f37 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000042ad2a : jge 0x42ad2b ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000042ad4a : jge 0x42ad4b ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000042ad6a : jge 0x42ad6b ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x00000000004300b0 : jge 0x4300a3 ; mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000043115d : jge 0x43115e ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x00000000004340e5 : jge 0x4340cd ; fld xword ptr [rbp - 0x20] ; pop rbp ; ret
0x0000000000436045 : jge 0x43603b ; call 0x4022a4
0x000000000043a03b : jge 0x43a03c ; mov qword ptr [rbp - 0x10], rsi ; pop rbp ; ret
0x000000000043fce6 : jge 0x43fce3 ; pop rbp ; ret
0x00000000004406aa : jge 0x4406ab ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x00000000004406ca : jge 0x4406cb ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x00000000004407c0 : jge 0x4407bd ; pop rbp ; ret
0x000000000045b421 : jl 0x45b421 ; jmp rsi
0x0000000000401feb : jmp 0x401ea7
0x00000000004092f1 : jmp 0x409287
0x00000000004179e3 : jmp 0x4174e0
0x00000000004188f6 : jmp 0x418414
0x000000000041e088 : jmp 0x41de9d
0x0000000000437300 : jmp 0x4367f1
0x0000000000438a1e : jmp 0x437fce
0x000000000044a42c : jmp 0x446706
0x000000000044a42c : jmp 0x44670b
0x000000000042d823 : jmp 0x49056173
0x000000000042d965 : jmp 0x490562b5
0x000000000042f960 : jmp 0x490582b0
0x000000000042f9cd : jmp 0x4905831d
0x0000000000430c9a : jmp 0x490595ea
0x0000000000430d07 : jmp 0x49059657
0x0000000000411ed2 : jmp qword ptr [rax]
0x000000000045cd3b : jmp qword ptr [rbx]
0x000000000045a4ab : jmp qword ptr [rdi]
0x00000000004025c7 : jmp rax
0x000000000045be9b : jmp rbx
0x0000000000404e89 : jmp rcx
0x000000000045a813 : jmp rdi
0x0000000000402607 : jmp rdx
0x000000000045b423 : jmp rsi
0x00000000004598eb : jmp rsp
0x00000000004025f0 : jne 0x4025f7 ; pop rbp ; ret
0x0000000000420bb1 : jne 0x420b63 ; mov r8, qword ptr [rsi] ; mov rsi, qword ptr [r8] ; call rcx
0x0000000000420d1a : jne 0x420ccc ; mov r8, qword ptr [rsi] ; mov rsi, qword ptr [r8] ; call rcx
0x000000000042110b : jne 0x4210bd ; mov r8, qword ptr [rsi] ; mov rsi, qword ptr [r8] ; call rcx
0x000000000042144d : jne 0x4213ff ; mov r8, qword ptr [rsi] ; mov rsi, qword ptr [r8] ; call rcx
0x0000000000421ad1 : jne 0x421ac8 ; mov rsi, qword ptr [rsi] ; call rdx
0x000000000042bc66 : jne 0x42bc30 ; mov r8, qword ptr [rsi] ; mov rsi, qword ptr [r8] ; call rcx
0x000000000042c968 : jne 0x42c94c ; call rax
0x0000000000435c7c : jne 0x435c3d ; mov rsi, qword ptr [rsi] ; call 0x401f47
0x000000000043903c : jne 0x438fd3 ; mov rsi, qword ptr [rsi] ; call rcx
0x000000000043a03f : jne 0x43a034 ; pop rbp ; ret
0x000000000045a0f9 : jno 0x45a0fb ; call rsp
0x0000000000458b30 : jnp 0x458aff ; add byte ptr [r8], al ; add byte ptr [rax], al ; add al, al ; ret
0x000000000045a391 : jnp 0x45a38f ; call rax
0x0000000000459e49 : jns 0x459e4a ; jmp rsp
0x000000000040ff66 : jo 0x40ffc7 ; ret
0x000000000041144b : jo 0x4114ac ; ret
0x0000000000421a85 : jo 0x421ae6 ; ret
0x000000000042bf4f : jo 0x42bf68 ; mov qword ptr [rbp - 0x48], rdx ; call r8
0x000000000043f214 : jo 0x43f275 ; ret
0x00000000004406cf : jo 0x440730 ; ret
0x00000000004406ce : jo 0x440731 ; ret
0x00000000004598e9 : jo 0x4598e8 ; jmp rsp
0x0000000000458dd0 : jrcxz 0x458d9d ; add byte ptr [r8], al ; add byte ptr [rax], al ; add al, al ; ret
0x0000000000458de0 : jrcxz 0x458dad ; add byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rdx], ah ; ret
0x00000000004265a5 : js 0x426605 ; pop rbp ; ret
0x000000000043de7f : js 0x43de88 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000043e2a0 : js 0x43e300 ; pop rbp ; ret
0x000000000045aa88 : js 0x45aa8e ; cld ; jmp rsp
0x000000000045ac88 : js 0x45aca7 ; cld ; jmp rcx
0x0000000000459c59 : lahf ; cld ; call rsp
0x0000000000414399 : lahf ; ret 0x48b
0x0000000000441512 : lahf ; ret 0xc8b
0x0000000000421658 : lahf ; ret 0xe280
0x0000000000442829 : lea ebx, dword ptr [rax + 0xffffffa] ; xchg eax, edx ; ret 0x348b
0x00000000004142a6 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000416751 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040922a : lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x00000000004142a5 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000409229 : lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000041b2bc : lock add byte ptr [eax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041cb1c : lock add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041a04e : lock add byte ptr gs:[rax - 0x75], cl ; push rbp ; call 0x4103d9aa
0x000000000045b41c : lodsb al, byte ptr [rsi] ; adc byte ptr [rax], al ; add byte ptr [rax + 0x7c], dl ; cld ; jmp rsi
0x0000000000413059 : lodsb al, byte ptr [rsi] ; ret 0xf0
0x000000000044fee9 : loop 0x44ff3b ; or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x00000000004500c1 : loop 0x450113 ; or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x000000000045c8a1 : loop 0x45c8a3 ; call rdi
0x000000000045c091 : loope 0x45c092 ; call rbx
0x0000000000408f99 : loopne 0x408fff ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000409228 : loopne 0x409279 ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000409227 : loopne 0x40927a ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000414c44 : loopne 0x414c95 ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000414c43 : loopne 0x414c96 ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000041b51a : loopne 0x41b56a ; add esp, 0x20 ; pop rbp ; ret
0x000000000041b519 : loopne 0x41b56b ; add esp, 0x20 ; pop rbp ; ret
0x000000000041e6b6 : loopne 0x41e706 ; add esp, 0x20 ; pop rbp ; ret
0x000000000041e6b5 : loopne 0x41e707 ; add esp, 0x20 ; pop rbp ; ret
0x000000000041f5d6 : loopne 0x41f626 ; add esp, 0x20 ; pop rbp ; ret
0x000000000041f5d5 : loopne 0x41f627 ; add esp, 0x20 ; pop rbp ; ret
0x000000000041f808 : loopne 0x41f858 ; add esp, 0x20 ; pop rbp ; ret
0x000000000041f807 : loopne 0x41f859 ; add esp, 0x20 ; pop rbp ; ret
0x000000000041f84c : loopne 0x41f867 ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004234d0 : loopne 0x423523 ; mov dword ptr [rdx], ecx ; add rsp, 0x40 ; pop rbp ; ret
0x000000000042625b : loopne 0x4262c1 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042756a : loopne 0x4275d0 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000428a7b : loopne 0x428aca ; mov esp, ebp ; pop rbp ; ret
0x0000000000428a7a : loopne 0x428acb ; mov esp, ebp ; pop rbp ; ret
0x000000000042d759 : loopne 0x42d7bf ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004340e6 : loopne 0x4340c8 ; insd dword ptr [rdi], dx ; loopne 0x43414d ; ret
0x00000000004340e9 : loopne 0x43414a ; ret
0x000000000043e6df : loopne 0x43e730 ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000043e6de : loopne 0x43e731 ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000044ad3b : loopne 0x44acd0 ; loopne 0x44ad90 ; mov esp, ebp ; pop rbp ; ret
0x000000000044ad3a : loopne 0x44acd1 ; loopne 0x44ad91 ; mov esp, ebp ; pop rbp ; ret
0x000000000044ad3e : loopne 0x44ad8d ; mov esp, ebp ; pop rbp ; ret
0x000000000044ad3d : loopne 0x44ad8e ; mov esp, ebp ; pop rbp ; ret
0x000000000044cb75 : loopne 0x44cbc5 ; add esp, 0x20 ; pop rbp ; ret
0x000000000044cb74 : loopne 0x44cbc6 ; add esp, 0x20 ; pop rbp ; ret
0x000000000045bc90 : loopne 0x45bce0 ; std ; call qword ptr [rdx]
0x000000000045c031 : loopne 0x45c032 ; call qword ptr [rbx]
0x000000000045999c : mov ah, 0x11 ; add byte ptr [rax], al ; sub al, -8 ; sti ; call rsp
0x000000000045b924 : mov ah, 0x15 ; add byte ptr [rax], al ; sbb ah, dh ; cld ; call qword ptr [rdx]
0x0000000000459d0c : mov ah, 0x1f ; add byte ptr [rax], al ; mov ebx, gs ; cld ; call rsp
0x0000000000459dc4 : mov ah, 0x22 ; add byte ptr [rax], al ; in al, dx ; xor al, 0xfffffffffffffffd ; call rsp
0x000000000045a0f4 : mov ah, 0x2f ; add byte ptr [rax], al ; pushfq ; jno 0x45a100 ; call rsp
0x000000000044bcee : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004344ae : mov al, 0 ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000421cba : mov al, 0 ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042620c : mov al, 0 ; call 0x402464
0x000000000041ed1c : mov al, 0x21 ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041eaec : mov al, 0x27 ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000425f51 : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000423ee1 : mov al, 0x48 ; mov ecx, dword ptr [rax*8 + 0x4540a8] ; jmp rcx
0x0000000000431528 : mov al, byte ptr [rbp - 0x21] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042b53c : mov al, byte ptr [rbp - 0x33] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000428071 : mov al, byte ptr [rbp - 0xa] ; movsx eax, al ; pop rbp ; ret
0x0000000000423343 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000451214 : mov al, byte ptr [rbp - 6] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004502af : mov al, dh ; movzx eax, al ; pop rbp ; ret
0x00000000004502ae : mov al, sil ; movzx eax, al ; pop rbp ; ret
0x00000000004500ff : mov ax, si ; movzx eax, ax ; pop rbp ; ret
0x0000000000440565 : mov bh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000450103 : mov bh, -0x40 ; pop rbp ; ret
0x0000000000426cc1 : mov byte ptr [0x65f1a8], al ; pop rbp ; ret
0x00000000004140ed : mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x0000000000448e33 : mov byte ptr [rax - 0x3f], cl ; call 0x2071761
0x0000000000448e77 : mov byte ptr [rax - 0x3f], cl ; call 0x20717a5
0x0000000000448ec0 : mov byte ptr [rax - 0x3f], cl ; call 0x20717ee
0x00000000004378ce : mov byte ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000458af1 : mov byte ptr [rbx], 0 ; add byte ptr [rax], al ; add al, al ; ret
0x0000000000458dc9 : mov byte ptr [rbx], 0 ; add byte ptr [rax], al ; add bl, ah ; ret 0x43
0x000000000041da54 : mov byte ptr [rbx], bh ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403fd7 : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret
0x000000000043cc1c : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x000000000043b42e : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x0000000000440b2c : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 0x92
0x000000000041b0b7 : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 1
0x000000000041373f : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 5
0x00000000004170f4 : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 8
0x0000000000447055 : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; sysenter
0x0000000000402623 : mov byte ptr [rip + 0x25c00e], 1 ; ret
0x000000000045b699 : mov ch, -4 ; call qword ptr [rsi]
0x000000000042337d : mov dh, -0x3f ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000423e31 : mov dh, -0x3f ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000421b05 : mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000422417 : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000423425 : mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x000000000042f3f2 : mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000417950 : mov dh, -0x40 ; add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x0000000000415bca : mov dh, -0x40 ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x00000000004190e3 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x00000000004092d9 : mov dh, -0x40 ; pop rbp ; ret
0x000000000045bef9 : mov dh, -3 ; jmp rax
0x0000000000404617 : mov dword ptr [0x65e578], eax ; pop rbp ; ret
0x0000000000409036 : mov dword ptr [0x65e844], eax ; pop rbp ; ret
0x0000000000426c9d : mov dword ptr [0x65f1a0], edi ; pop rbp ; ret
0x0000000000448e30 : mov dword ptr [rax - 0x3eb77778], ecx ; call 0x2071764
0x0000000000448e74 : mov dword ptr [rax - 0x3eb77778], ecx ; call 0x20717a8
0x0000000000448ebd : mov dword ptr [rax - 0x3eb77778], ecx ; call 0x20717f1
0x0000000000408f7b : mov dword ptr [rax - 0xa], 0x458801c7 ; ret
0x000000000043a26a : mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000043a3b8 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000043a03e : mov dword ptr [rbp - 0x10], esi ; pop rbp ; ret
0x000000000042be66 : mov dword ptr [rbp - 0x30], eax ; mov qword ptr [rbp - 0x38], rdx ; call r8
0x000000000042be6a : mov dword ptr [rbp - 0x38], edx ; call r8
0x00000000004116ee : mov dword ptr [rbp - 0x3c], eax ; add rsp, 0x40 ; pop rbp ; ret
0x000000000042bf52 : mov dword ptr [rbp - 0x48], edx ; call r8
0x000000000042659f : mov dword ptr [rbp - 0x58], eax ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004372fd : mov dword ptr [rbp - 0x58], ecx ; jmp 0x4367f4
0x00000000004115ef : mov dword ptr [rbp - 0x5c], eax ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040ff60 : mov dword ptr [rbp - 0x60], eax ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000410887 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000451607 : mov dword ptr [rbp - 0xc], eax ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x00000000004108b5 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000043a03a : mov dword ptr [rbp - 8], edi ; mov qword ptr [rbp - 0x10], rsi ; pop rbp ; ret
0x0000000000424f35 : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000043fce5 : mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x000000000043abeb : mov dword ptr [rbp], eax ; jmp rcx
0x000000000042ccea : mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x0000000000431160 : mov dword ptr [rdi + 0x48], esi ; pop rbp ; ret
0x00000000004234d2 : mov dword ptr [rdx], ecx ; add rsp, 0x40 ; pop rbp ; ret
0x000000000042188f : mov eax, 0x48c68948 ; mov eax, dword ptr [rbp - 0x38] ; call rax
0x0000000000422da4 : mov eax, 0x50c48348 ; pop rbp ; ret
0x000000000043e29c : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x000000000044c5b5 : mov eax, 0xf0658d48 ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000043fdd0 : mov eax, 0xffffffff ; mov rsp, rbp ; pop rbp ; ret
0x00000000004306f2 : mov eax, dword ptr [rax] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000429d56 : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000043a198 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000044c0e1 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000427984 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040c259 : mov eax, dword ptr [rbp - 0x10] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x00000000004533ae : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000043a195 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004407e1 : mov eax, dword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000043ee4a : mov eax, dword ptr [rbp - 0x10] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000427873 : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000044f98b : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000420ddd : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000043a524 : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000437700 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000427152 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000043a264 : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000043f414 : mov eax, dword ptr [rbp - 0x18] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000436367 : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000042304e : mov eax, dword ptr [rbp - 0x1c] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041ba4e : mov eax, dword ptr [rbp - 0x1c] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000041b518 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000409226 : mov eax, dword ptr [rbp - 0x20] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000428a79 : mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x000000000041be02 : mov eax, dword ptr [rbp - 0x24] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000042845d : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000430974 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000042cc6c : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000044ab7b : mov eax, dword ptr [rbp - 0x2c] ; pop rbp ; ret
0x00000000004217c6 : mov eax, dword ptr [rbp - 0x30] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000413f6f : mov eax, dword ptr [rbp - 0x30] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000042d358 : mov eax, dword ptr [rbp - 0x30] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000043fc98 : mov eax, dword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000421894 : mov eax, dword ptr [rbp - 0x38] ; call rax
0x0000000000426c5a : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000422da2 : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000043e29a : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000425f4f : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004253ea : mov eax, dword ptr [rbp - 0x58] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000421a7f : mov eax, dword ptr [rbp - 0x60] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000426877 : mov eax, dword ptr [rbp - 0x88] ; call qword ptr [rax]
0x000000000045152d : mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000438d92 : mov eax, dword ptr [rbp - 0xd8] ; call r8
0x000000000042aaea : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041ae56 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000422742 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000423215 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000042a88b : mov eax, dword ptr [rbp - 4] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000044dfcd : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000431396 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042c124 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042ca4e : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000430560 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000424f39 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000042ad2d : mov eax, dword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000042ad4d : mov eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000042ad6d : mov eax, dword ptr [rdi + 0x20] ; pop rbp ; ret
0x00000000004406ad : mov eax, dword ptr [rdi + 0x50] ; pop rbp ; ret
0x00000000004406cd : mov eax, dword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000420bb4 : mov eax, dword ptr [rsi] ; mov rsi, qword ptr [r8] ; call rcx
0x000000000042620a : mov eax, eax ; mov al, 0 ; call 0x402466
0x000000000043fccc : mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004401ef : mov eax, edi ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041465a : mov eax, edi ; pop rbp ; ret
0x0000000000450100 : mov eax, esi ; movzx eax, ax ; pop rbp ; ret
0x000000000044aa51 : mov eax, esi ; pop rbp ; ret
0x000000000040cd49 : mov ebp, 0x8d480002 ; clc ; pop rbx ; pop rbp ; ret
0x000000000040264b : mov ebp, esp ; call rax
0x00000000004025b1 : mov ebp, esp ; ja 0x4025bc ; pop rbp ; ret
0x000000000043fce2 : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000459d10 : mov ebx, gs ; cld ; call rsp
0x0000000000404e82 : mov ecx, dword ptr [rax*8 + 0x4539d0] ; jmp rcx
0x00000000004073b0 : mov ecx, dword ptr [rax*8 + 0x453cc8] ; jmp rcx
0x0000000000408153 : mov ecx, dword ptr [rax*8 + 0x453ce8] ; jmp rcx
0x000000000040d46a : mov ecx, dword ptr [rax*8 + 0x453d18] ; jmp rcx
0x000000000040e97b : mov ecx, dword ptr [rax*8 + 0x453d40] ; jmp rcx
0x0000000000417cbb : mov ecx, dword ptr [rax*8 + 0x453db0] ; jmp rcx
0x0000000000423ee3 : mov ecx, dword ptr [rax*8 + 0x4540a8] ; jmp rcx
0x00000000004242cb : mov ecx, dword ptr [rax*8 + 0x4540d0] ; jmp rcx
0x000000000042429c : mov ecx, dword ptr [rax*8 + 0x454128] ; jmp rcx
0x0000000000438034 : mov ecx, dword ptr [rax*8 + 0x458670] ; jmp rcx
0x000000000043abe7 : mov ecx, dword ptr [rax*8 + 0x4589b0] ; jmp rcx
0x000000000043b701 : mov ecx, dword ptr [rax*8 + 0x4589f8] ; jmp rcx
0x0000000000441840 : mov ecx, dword ptr [rax*8 + 0x458ea8] ; jmp rcx
0x0000000000448f08 : mov ecx, dword ptr [rax*8 + 0x459158] ; jmp rcx
0x000000000044b172 : mov ecx, dword ptr [rax*8 + 0x459198] ; jmp rcx
0x000000000044d887 : mov ecx, dword ptr [rax*8 + 0x459510] ; jmp rcx
0x000000000044d807 : mov ecx, dword ptr [rax*8 + 0x459570] ; jmp rcx
0x000000000044f12d : mov ecx, dword ptr [rax*8 + 0x4596b8] ; jmp rcx
0x000000000044f0ad : mov ecx, dword ptr [rax*8 + 0x459718] ; jmp rcx
0x000000000043a267 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000042dc52 : mov ecx, dword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x00000000004217bb : mov ecx, dword ptr [rbp - 0x10] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000042db62 : mov ecx, dword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x00000000004300b3 : mov ecx, dword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000043037a : mov ecx, dword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000044ff4d : mov ecx, eax ; shl edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000044ff1d : mov ecx, eax ; shr edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000402645 : mov edi, 0x65de20 ; mov rbp, rsp ; call rax
0x00000000004025c2 : mov edi, 0x65e5d8 ; jmp rax
0x0000000000402602 : mov edi, 0x65e5d8 ; jmp rdx
0x0000000000436044 : mov edi, dword ptr [rbp - 0x10] ; call 0x4022a5
0x000000000043115c : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000042ad29 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000042ad49 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000042ad69 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x00000000004406a9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x00000000004406c9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000042db66 : mov edi, dword ptr [rcx] ; call rax
0x00000000004217b8 : mov edi, dword ptr [rcx] ; mov rcx, qword ptr [rbp - 0x10] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000042c964 : mov edi, dword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x0000000000439038 : mov edi, dword ptr [rdx] ; mov rsi, qword ptr [rbp - 0x70] ; mov rsi, qword ptr [rsi] ; call rcx
0x000000000042e099 : mov edi, dword ptr [rsi] ; call rcx
0x0000000000421acd : mov edi, dword ptr [rsi] ; mov rsi, qword ptr [rbp - 0x10] ; mov rsi, qword ptr [rsi] ; call rdx
0x0000000000453927 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000453926 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x00000000004408e6 : mov edx, dword ptr [rbp - 0x18] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042e092 : mov edx, dword ptr [rbp - 0x38] ; mov rsi, qword ptr [rdx] ; mov rdi, qword ptr [rsi] ; call rcx
0x000000000040da7c : mov edx, dword ptr [rbp - 0x58] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004407e5 : mov edx, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000455731 : mov es, word ptr [rbp] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000441844 : mov es, word ptr [rbp] ; jmp rcx
0x000000000042bf4e : mov esi, dword ptr [rax + 0x10] ; mov qword ptr [rbp - 0x48], rdx ; call r8
0x0000000000420bb7 : mov esi, dword ptr [rax] ; call rcx
0x0000000000421ad0 : mov esi, dword ptr [rbp - 0x10] ; mov rsi, qword ptr [rsi] ; call rdx
0x000000000042c967 : mov esi, dword ptr [rbp - 0x20] ; call rax
0x000000000042bc65 : mov esi, dword ptr [rbp - 0x40] ; mov r8, qword ptr [rsi] ; mov rsi, qword ptr [r8] ; call rcx
0x0000000000435c7b : mov esi, dword ptr [rbp - 0x48] ; mov rsi, qword ptr [rsi] ; call 0x401f48
0x0000000000420bb0 : mov esi, dword ptr [rbp - 0x58] ; mov r8, qword ptr [rsi] ; mov rsi, qword ptr [r8] ; call rcx
0x000000000043903b : mov esi, dword ptr [rbp - 0x70] ; mov rsi, qword ptr [rsi] ; call rcx
0x0000000000439700 : mov esi, dword ptr [rbp - 0x88] ; mov rsi, qword ptr [rsi] ; call rcx
0x00000000004217bf : mov esi, dword ptr [rcx] ; call rax
0x000000000042e096 : mov esi, dword ptr [rdx] ; mov rdi, qword ptr [rsi] ; call rcx
0x0000000000435c7f : mov esi, dword ptr [rsi] ; call 0x401f44
0x000000000043903f : mov esi, dword ptr [rsi] ; call rcx
0x0000000000421ad4 : mov esi, dword ptr [rsi] ; call rdx
0x0000000000402600 : mov esi, eax ; mov edi, 0x65e5d8 ; jmp rdx
0x0000000000421891 : mov esi, eax ; mov rax, qword ptr [rbp - 0x38] ; call rax
0x000000000045c02c : mov esp, 0x1c ; loopne 0x45c037 ; call qword ptr [rbx]
0x0000000000459e04 : mov esp, 0x9c000023 ; push rsi ; std ; jmp rsp
0x000000000045a62c : mov esp, 0xc0000002 ; push rbp ; sti ; jmp qword ptr [rdi]
0x000000000040911c : mov esp, ebp ; pop rbp ; ret
0x0000000000426c9c : mov qword ptr [0x65f1a0], rdi ; pop rbp ; ret
0x000000000043a03d : mov qword ptr [rbp - 0x10], rsi ; pop rbp ; ret
0x000000000042be65 : mov qword ptr [rbp - 0x30], rax ; mov qword ptr [rbp - 0x38], rdx ; call r8
0x000000000042be69 : mov qword ptr [rbp - 0x38], rdx ; call r8
0x000000000042bf51 : mov qword ptr [rbp - 0x48], rdx ; call r8
0x000000000043a039 : mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; pop rbp ; ret
0x0000000000424f34 : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000043fce4 : mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000043115f : mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x00000000004234d1 : mov qword ptr [rdx], rcx ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000438d91 : mov r8, qword ptr [rbp - 0xd8] ; call r8
0x0000000000420bb3 : mov r8, qword ptr [rsi] ; mov rsi, qword ptr [r8] ; call rcx
0x0000000000426209 : mov r8, rax ; mov al, 0 ; call 0x402467
0x0000000000425f50 : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000422da3 : mov r8d, 0x50c48348 ; pop rbp ; ret
0x000000000043e29b : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x00000000004306f1 : mov rax, qword ptr [rax] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000429d55 : mov rax, qword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000044c0e0 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000427983 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000043a194 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004407e0 : mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000043ee49 : mov rax, qword ptr [rbp - 0x10] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000427872 : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004376ff : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000427151 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000043f413 : mov rax, qword ptr [rbp - 0x18] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000436366 : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000044cb72 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000428a78 : mov rax, qword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042845c : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000430973 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000042cc6b : mov rax, qword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000413f6e : mov rax, qword ptr [rbp - 0x30] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000043fc97 : mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000421893 : mov rax, qword ptr [rbp - 0x38] ; call rax
0x0000000000426c59 : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000422da1 : mov rax, qword ptr [rbp - 0x48] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000425f4e : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004253e9 : mov rax, qword ptr [rbp - 0x58] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000426876 : mov rax, qword ptr [rbp - 0x88] ; call qword ptr [rax]
0x0000000000431395 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042c123 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042ca4d : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000043055f : mov rax, qword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000424f38 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000042ad2c : mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000042ad4c : mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000042ad6c : mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x00000000004406ac : mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x00000000004406cc : mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000414659 : mov rax, rdi ; pop rbp ; ret
0x000000000040264a : mov rbp, rsp ; call rax
0x00000000004025b0 : mov rbp, rsp ; ja 0x4025bd ; pop rbp ; ret
0x000000000043fce1 : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000404e81 : mov rcx, qword ptr [rax*8 + 0x4539d0] ; jmp rcx
0x00000000004073af : mov rcx, qword ptr [rax*8 + 0x453cc8] ; jmp rcx
0x0000000000408152 : mov rcx, qword ptr [rax*8 + 0x453ce8] ; jmp rcx
0x000000000040d469 : mov rcx, qword ptr [rax*8 + 0x453d18] ; jmp rcx
0x000000000040e97a : mov rcx, qword ptr [rax*8 + 0x453d40] ; jmp rcx
0x0000000000417cba : mov rcx, qword ptr [rax*8 + 0x453db0] ; jmp rcx
0x0000000000423ee2 : mov rcx, qword ptr [rax*8 + 0x4540a8] ; jmp rcx
0x00000000004242ca : mov rcx, qword ptr [rax*8 + 0x4540d0] ; jmp rcx
0x000000000042429b : mov rcx, qword ptr [rax*8 + 0x454128] ; jmp rcx
0x0000000000438033 : mov rcx, qword ptr [rax*8 + 0x458670] ; jmp rcx
0x000000000043abe6 : mov rcx, qword ptr [rax*8 + 0x4589b0] ; jmp rcx
0x000000000043b700 : mov rcx, qword ptr [rax*8 + 0x4589f8] ; jmp rcx
0x000000000044183f : mov rcx, qword ptr [rax*8 + 0x458ea8] ; jmp rcx
0x0000000000448f07 : mov rcx, qword ptr [rax*8 + 0x459158] ; jmp rcx
0x000000000044b171 : mov rcx, qword ptr [rax*8 + 0x459198] ; jmp rcx
0x000000000044d886 : mov rcx, qword ptr [rax*8 + 0x459510] ; jmp rcx
0x000000000044d806 : mov rcx, qword ptr [rax*8 + 0x459570] ; jmp rcx
0x000000000044f12c : mov rcx, qword ptr [rax*8 + 0x4596b8] ; jmp rcx
0x000000000044f0ac : mov rcx, qword ptr [rax*8 + 0x459718] ; jmp rcx
0x000000000042dc51 : mov rcx, qword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x00000000004217ba : mov rcx, qword ptr [rbp - 0x10] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000042db61 : mov rcx, qword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x00000000004300b2 : mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000430379 : mov rcx, qword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000436043 : mov rdi, qword ptr [rbp - 0x10] ; call 0x4022a6
0x000000000043115b : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000042ad28 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000042ad48 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000042ad68 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x00000000004406a8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x00000000004406c8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000042db65 : mov rdi, qword ptr [rcx] ; call rax
0x000000000042c963 : mov rdi, qword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x000000000042e098 : mov rdi, qword ptr [rsi] ; call rcx
0x00000000004408e5 : mov rdx, qword ptr [rbp - 0x18] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040da7b : mov rdx, qword ptr [rbp - 0x58] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004407e4 : mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000420bb6 : mov rsi, qword ptr [r8] ; call rcx
0x000000000042bf4d : mov rsi, qword ptr [rax + 0x10] ; mov qword ptr [rbp - 0x48], rdx ; call r8
0x0000000000421acf : mov rsi, qword ptr [rbp - 0x10] ; mov rsi, qword ptr [rsi] ; call rdx
0x000000000042c966 : mov rsi, qword ptr [rbp - 0x20] ; call rax
0x0000000000435c7a : mov rsi, qword ptr [rbp - 0x48] ; mov rsi, qword ptr [rsi] ; call 0x401f49
0x000000000043903a : mov rsi, qword ptr [rbp - 0x70] ; mov rsi, qword ptr [rsi] ; call rcx
0x00000000004217be : mov rsi, qword ptr [rcx] ; call rax
0x000000000042e095 : mov rsi, qword ptr [rdx] ; mov rdi, qword ptr [rsi] ; call rcx
0x0000000000435c7e : mov rsi, qword ptr [rsi] ; call 0x401f45
0x000000000043903e : mov rsi, qword ptr [rsi] ; call rcx
0x0000000000421ad3 : mov rsi, qword ptr [rsi] ; call rdx
0x0000000000421ace : mov rsi, qword ptr ds:[rbp - 0x10] ; mov rsi, qword ptr [rsi] ; call rdx
0x00000000004025ff : mov rsi, rax ; mov edi, 0x65e5d8 ; jmp rdx
0x0000000000421890 : mov rsi, rax ; mov rax, qword ptr [rbp - 0x38] ; call rax
0x000000000040911b : mov rsp, rbp ; pop rbp ; ret
0x0000000000428cae : movabs al, byte ptr [0x950f003980088b48] ; ret 0x348b
0x00000000004115f1 : movsb byte ptr [rdi], byte ptr [rsi] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000045be99 : movsd dword ptr [rdi], dword ptr [rsi] ; std ; jmp rbx
0x000000000044ae4b : movsd xmm0, qword ptr [rbp - 0x18] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000428074 : movsx eax, al ; pop rbp ; ret
0x0000000000434dcc : movsxd rax, ecx ; pop rbp ; ret
0x000000000045a711 : movsxd rdi, ebx ; call qword ptr [rcx]
0x000000000044ae4c : movups xmm0, xmmword ptr [rbp - 0x18] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000421b04 : movzx eax, al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000422416 : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000423424 : movzx eax, al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000042f3f1 : movzx eax, al ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041794f : movzx eax, al ; add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x0000000000415bc9 : movzx eax, al ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x00000000004190e2 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004092d8 : movzx eax, al ; pop rbp ; ret
0x0000000000440564 : movzx eax, ax ; mov rsp, rbp ; pop rbp ; ret
0x0000000000450102 : movzx eax, ax ; pop rbp ; ret
0x000000000042337c : movzx eax, cl ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000423e30 : movzx eax, cl ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000041ad1c : nop ; insd dword ptr [rdi], dx ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000043903d : nop ; mov rsi, qword ptr [rsi] ; call rcx
0x000000000045a710 : nop ; movsxd rdi, ebx ; call qword ptr [rcx]
0x000000000045bb40 : nop ; sbb ch, bh ; call rcx
0x0000000000453948 : nop dword ptr [rax + rax] ; ret
0x000000000045af85 : or al, 0 ; add byte ptr [rax + 0x40], cl ; cld ; jmp rax
0x0000000000438ab0 : or al, 0 ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000422281 : or al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000406570 : or al, 0x25 ; sub al, -0xd ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x0000000000412fea : or al, 0x25 ; sub al, -0xd ; add byte ptr gs:[rcx - 0x77], al ; ret 0x8141
0x0000000000434da8 : or al, 0xffffffffffffff86 ; add r8b, r13b ; call rax
0x0000000000408154 : or al, 0xffffffffffffffc5 ; call 0xffffffffff40c69d
0x000000000043b702 : or al, 0xffffffffffffffc5 ; clc ; mov dword ptr [rbp], eax ; jmp rcx
0x00000000004073b1 : or al, 0xffffffffffffffc5 ; enter 0x453c, 0 ; jmp rcx
0x0000000000449de5 : or al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000043e469 : or byte ptr [r15], cl ; xchg eax, ebp ; ret 0x348b
0x000000000042c080 : or byte ptr [r15], cl ; xchg eax, edx ; ret 0x348b
0x00000000004092b3 : or byte ptr [r15], cl ; xchg eax, esp ; ret 0x5588
0x00000000004302c3 : or byte ptr [r8 + 0x3b], cl ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x348b
0x000000000043c833 : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000426207 : or byte ptr [r9 - 0x77], 0xc0 ; mov al, 0 ; call 0x402469
0x00000000004302c4 : or byte ptr [rax + 0x3b], cl ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x348b
0x00000000004083d9 : or byte ptr [rax - 0x6af0ffc7], al ; ret 0x348b
0x000000000043c834 : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000429d3e : or byte ptr [rax - 0x75], cl ; adc dword ptr [rax - 0x7f], ecx ; ret 1
0x0000000000440994 : or byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000045069c : or byte ptr [rcx + 0x2038], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x0000000000450adc : or byte ptr [rcx + 0x2138], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000044ba9d : or byte ptr [rcx + 0x28f9], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x0000000000406ed3 : or byte ptr [rcx + 0x2bf9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x0000000000421eac : or byte ptr [rcx + 0x2ff9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x000000000040d024 : or byte ptr [rcx + 0x2ff9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x00000000004503ec : or byte ptr [rcx + 0x3038], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x0000000000434b11 : or byte ptr [rcx + 0x39f9], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x00000000004509dc : or byte ptr [rcx + 0x6138], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x0000000000440c21 : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x0000000000409f87 : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x0000000000426208 : or byte ptr [rcx - 0x77], 0xc0 ; mov al, 0 ; call 0x402468
0x000000000043e46a : or byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x000000000042c081 : or byte ptr [rdi], cl ; xchg eax, edx ; ret 0x348b
0x00000000004092b4 : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x000000000045cf38 : or byte ptr [rsi - 1], al ; call rsp
0x000000000043f7dd : or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x000000000043f87f : or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x000000000042b1ec : or cl, ch ; ret
0x000000000045ac85 : or dword ptr [rax], eax ; add byte ptr [rax + 0x1a], bh ; cld ; jmp rcx
0x000000000044c83f : or eax, 0x48fffff9 ; add esp, 0x30 ; pop rbp ; ret
0x000000000045b085 : or eax, 0x4ac80000 ; cld ; call qword ptr [rcx]
0x000000000045af05 : or eax, dword ptr [rax] ; add al, bh ; cmp edi, esp ; jmp rdi
0x000000000043a6ed : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041a196 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000044feeb : or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x000000000044ff21 : or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000044feea : or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x000000000041cebb : out -0x17, al ; ret 0xfffc
0x0000000000413054 : out 0x65, al ; add byte ptr [rax + 0x2d], cl ; lodsb al, byte ptr [rsi] ; ret 0xf0
0x000000000044aa4c : out dx, al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, esi ; pop rbp ; ret
0x000000000044ff20 : out dx, eax ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000408b77 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000045393c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000408f9b : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000408b79 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000045393e : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004078fa : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000453940 : pop r14 ; pop r15 ; ret
0x00000000004142aa : pop r14 ; pop rbp ; ret
0x00000000004078fc : pop r15 ; pop rbp ; ret
0x0000000000453942 : pop r15 ; ret
0x000000000045bef8 : pop rax ; mov dh, -3 ; jmp rax
0x0000000000402622 : pop rbp ; mov byte ptr [rip + 0x25c00e], 1 ; ret
0x00000000004025c1 : pop rbp ; mov edi, 0x65e5d8 ; jmp rax
0x00000000004025fe : pop rbp ; mov rsi, rax ; mov edi, 0x65e5d8 ; jmp rdx
0x000000000045393b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000408b7a : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000045393f : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004025b5 : pop rbp ; ret
0x0000000000408f9a : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004078f9 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004142a9 : pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040922d : pop rbx ; pop rbp ; ret
0x000000000041be5d : pop rcx ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040a8a9 : pop rdi ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x00000000004078fd : pop rdi ; pop rbp ; ret
0x0000000000453943 : pop rdi ; ret
0x0000000000450eb1 : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x0000000000450571 : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x00000000004078fb : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000453941 : pop rsi ; pop r15 ; ret
0x00000000004142ab : pop rsi ; pop rbp ; ret
0x000000000042d577 : pop rsp ; add dword ptr [rdi], ecx ; ror dword ptr cs:[rdi], -0x69 ; ret 0x348b
0x0000000000408b78 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000045393d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000408f9c : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042b732 : pop rsp ; ret 0xf66
0x00000000004503f4 : popfq ; ret 0x348b
0x00000000004504c0 : popfq ; ret 0xc8b
0x0000000000428d48 : push 0x39ffffff ; ret 0x850f
0x0000000000449de4 : push 0x5b00000a ; pop rbp ; ret
0x0000000000459c13 : push qword ptr [rbx + rbx - 0x6a340000] ; cld ; call rsp
0x000000000045999b : push qword ptr [rcx + rdx - 0x7d40000] ; sti ; call rsp
0x0000000000459d0b : push qword ptr [rdi + rbx - 0x14740000] ; cld ; call rsp
0x0000000000459dc3 : push qword ptr [rdx + 0x34ec0000] ; std ; call rsp
0x0000000000459bd3 : push qword ptr [rdx + rbx - 0x7b340000] ; cld ; call rsp
0x0000000000459c53 : push qword ptr [rsp + rbx - 0x60440000] ; cld ; call rsp
0x00000000004406ae : push r8 ; pop rbp ; ret
0x0000000000448001 : push rax ; adc al, -0x7f ; ret 0x76c
0x000000000041c6ed : push rax ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000452d43 : push rax ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000045a9c0 : push rax ; in eax, -5 ; call qword ptr [rdi]
0x000000000045b420 : push rax ; jl 0x45b422 ; jmp rsi
0x0000000000413053 : push rax ; out 0x65, al ; add byte ptr [rax + 0x2d], cl ; lodsb al, byte ptr [rsi] ; ret 0xf0
0x000000000040d3d5 : push rax ; pop rbp ; ret
0x0000000000446148 : push rax ; sbb al, -0x7f ; ret 1
0x000000000041a053 : push rbp ; call 0x4103d9a5
0x00000000004407e6 : push rbp ; clc ; pop rbp ; ret
0x000000000042e093 : push rbp ; enter -0x74b8, 0x32 ; mov rdi, qword ptr [rsi] ; call rcx
0x0000000000438089 : push rbp ; fmul dword ptr [rax + 0x29] ; ror byte ptr [rax - 0x77], 1 ; ret 0xae8
0x000000000043c837 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000402644 : push rbp ; mov edi, 0x65de20 ; mov rbp, rsp ; call rax
0x000000000043fce0 : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000043e1ce : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000045a631 : push rbp ; sti ; jmp qword ptr [rdi]
0x000000000045a651 : push rbp ; sti ; jmp rsp
0x000000000040da7d : push rbp ; test al, 0x48 ; add esp, 0x60 ; pop rbp ; ret
0x0000000000459e09 : push rsi ; std ; jmp rsp
0x0000000000436048 : push rsp ; ret 0xfffc
0x000000000045a80c : pushfq ; add al, 0 ; add byte ptr [rax], dl ; cwde ; sti ; jmp rdi
0x0000000000459928 : pushfq ; cmpsd dword ptr [rsi], dword ptr [rdi] ; sti ; jmp rsp
0x000000000045a0f8 : pushfq ; jno 0x45a0fc ; call rsp
0x00000000004140ec : pushfq ; mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x0000000000459e08 : pushfq ; push rsi ; std ; jmp rsp
0x0000000000404ae9 : pushfq ; ret
0x000000000040ddda : pushfq ; ret 0x844
0x0000000000404caa : pushfq ; ret 0x845
0x000000000040bd02 : pushfq ; ret 0xc8b
0x000000000040dd03 : pushfq ; ret 0xd108
0x000000000040abdf : pushfq ; ret 0xe280
0x000000000040a807 : pushfq ; rol dword ptr [rax + rcx - 0x36], -0xa ; ret 0xf01
0x000000000045a650 : rcl byte ptr [rbp - 5] ; jmp rsp
0x000000000044ff1e : rcl ebx, -0x11 ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000044ff4e : rcl ebx, -0x19 ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000417dd7 : rcr bh, -1 ; dec dword ptr [rax + 0x29] ; ror byte ptr [rax - 0x77], 1 ; ret 0xbae8
0x00000000004340e3 : rcr ebx, 0x7d ; loopne 0x4340cb ; insd dword ptr [rdi], dx ; loopne 0x434150 ; ret
0x00000000004008e8 : ret
0x000000000040e1ef : ret 0
0x0000000000420a25 : ret 0x10
0x000000000040275d : ret 0x125
0x000000000043cc25 : ret 0x13
0x0000000000408ddc : ret 0x14d
0x0000000000435c5a : ret 0x163
0x000000000043565a : ret 0x169
0x0000000000414f3a : ret 0x18
0x00000000004023f2 : ret 0x25be
0x00000000004021f2 : ret 0x25bf
0x0000000000401ff2 : ret 0x25c0
0x000000000043b437 : ret 0x2a
0x0000000000432d8f : ret 0x30
0x00000000004083df : ret 0x348b
0x0000000000404cf3 : ret 0x3948
0x000000000041835f : ret 0x3c8b
0x000000000040887a : ret 0x4001
0x0000000000453ba8 : ret 0x4051
0x0000000000453be0 : ret 0x4052
0x0000000000454219 : ret 0x41
0x0000000000458dd1 : ret 0x43
0x000000000040bff2 : ret 0x4401
0x0000000000455650 : ret 0x457c
0x000000000040abe6 : ret 0x4589
0x0000000000419b53 : ret 0x4801
0x000000000041439a : ret 0x48b
0x000000000042ed0c : ret 0x48b0
0x0000000000407e88 : ret 0x48f0
0x000000000043c850 : ret 0x4ae8
0x000000000043f557 : ret 0x4cc0
0x0000000000407eb0 : ret 0x4cf0
0x00000000004092b7 : ret 0x5588
0x0000000000444081 : ret 0x5c
0x000000000040339d : ret 0x5de8
0x0000000000436668 : ret 0x62e8
0x000000000043229b : ret 0x634d
0x000000000044038b : ret 0x6601
0x0000000000448e48 : ret 0x6948
0x0000000000403086 : ret 0x74e8
0x0000000000448004 : ret 0x76c
0x000000000043f7e0 : ret 0x7ae8
0x000000000043228f : ret 0x8041
0x0000000000404ac8 : ret 0x8141
0x0000000000423d8c : ret 0x8148
0x000000000042d826 : ret 0x8348
0x00000000004156cf : ret 0x840f
0x000000000040dddb : ret 0x844
0x0000000000404cab : ret 0x845
0x0000000000428d4d : ret 0x850f
0x0000000000406126 : ret 0x8801
0x000000000040fe7a : ret 0x8901
0x00000000004120f5 : ret 0x8948
0x0000000000432dc4 : ret 0x894c
0x000000000043cbac : ret 0x89a5
0x000000000042603b : ret 0x8b44
0x000000000041ac43 : ret 0x8b48
0x000000000041979c : ret 0x8b4c
0x0000000000447aca : ret 0x8d0f
0x00000000004371ad : ret 0x8de8
0x0000000000440b35 : ret 0x92
0x00000000004415e7 : ret 0x9589
0x0000000000404881 : ret 0x9e8
0x0000000000431d10 : ret 0xa
0x0000000000404439 : ret 0xa3d
0x0000000000438090 : ret 0xae8
0x00000000004521be : ret 0xb
0x00000000004078d3 : ret 0xb0
0x0000000000403c76 : ret 0xb60f
0x000000000042d8fe : ret 0xb948
0x0000000000417de0 : ret 0xbae8
0x00000000004025e5 : ret 0xc148
0x000000000040475d : ret 0xc2f6
0x0000000000406edc : ret 0xc8b
0x0000000000448e39 : ret 0xca01
0x000000000040cd15 : ret 0xd089
0x000000000040dd04 : ret 0xd108
0x0000000000404f9d : ret 0xd284
0x00000000004369f3 : ret 0xd7e8
0x000000000043f882 : ret 0xd8e8
0x000000000040abe0 : ret 0xe280
0x00000000004349a7 : ret 0xe3e8
0x0000000000402754 : ret 0xea81
0x000000000043e11c : ret 0xee8
0x000000000041305a : ret 0xf0
0x0000000000404447 : ret 0xf01
0x000000000040a1c0 : ret 0xf280
0x0000000000433408 : ret 0xf2e8
0x000000000041a057 : ret 0xf40
0x0000000000428e53 : ret 0xf41
0x000000000042b733 : ret 0xf66
0x00000000004091d1 : ret 0xf748
0x000000000040a7fe : ret 0xf981
0x000000000040bfe2 : ret 0xfa81
0x000000000042ac5a : ret 0xfd75
0x000000000040717b : ret 0xfe8
0x000000000044398b : ret 0xfe81
0x000000000041471d : ret 0xfef0
0x00000000004116ea : ret 0xff0b
0x0000000000416b8a : ret 0xff21
0x000000000042d977 : ret 0xff3
0x000000000040db1a : ret 0xff43
0x000000000040736a : ret 0xff81
0x000000000044a4e5 : ret 0xffd3
0x00000000004188fc : ret 0xfffb
0x000000000041cebd : ret 0xfffc
0x0000000000426210 : ret 0xfffd
0x000000000041e08e : ret 0xfffe
0x000000000044a42e : ret 0xffff
0x000000000040836f : ret 1
0x000000000040d4de : ret 2
0x0000000000400780 : ret 3
0x0000000000413748 : ret 5
0x0000000000447590 : ret 7
0x00000000004170fd : ret 8
0x000000000045bfc1 : retf ; std ; call qword ptr [rax]
0x0000000000458af8 : rol bl, 0x43 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, al ; ret
0x0000000000458dd8 : rol bl, 0x43 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, ah ; ret 0x43
0x0000000000458b08 : rol bl, 0x43 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdx], ah ; ret
0x0000000000424d91 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000454211 : rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; add byte ptr [rax], ah ; ret 0x41
0x000000000040a808 : rol dword ptr [rax + rcx - 0x36], -0xa ; ret 0xf01
0x0000000000432fb8 : rol dword ptr [rcx + 0xf], -0x6e ; ret
0x0000000000431fba : ror byte ptr [r15], -0x67 ; ret 0xb60f
0x0000000000431fea : ror byte ptr [r15], 1 ; cdq ; ret 0xb60f
0x000000000042d359 : ror byte ptr [r8 - 0x73], 1 ; clc ; pop rbx ; pop rbp ; ret
0x000000000044bca3 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000426c5b : ror byte ptr [r8 - 0x7d], -0x3c ; pop rbp ; ret
0x00000000004025ec : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4025fb ; pop rbp ; ret
0x0000000000415bcb : ror byte ptr [rax - 0x73], 0x65 ; clc ; pop rbx ; pop rbp ; ret
0x000000000042d35a : ror byte ptr [rax - 0x73], 1 ; clc ; pop rbx ; pop rbp ; ret
0x00000000004190e4 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x000000000044bca4 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x000000000043808d : ror byte ptr [rax - 0x77], 1 ; ret 0xae8
0x0000000000417ddd : ror byte ptr [rax - 0x77], 1 ; ret 0xbae8
0x0000000000426c5c : ror byte ptr [rax - 0x7d], -0x3c ; pop rbp ; ret
0x0000000000424d8d : ror byte ptr [rax - 0x7f], -0x3c ; rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042bc67 : ror byte ptr [rbx + rcx*4 + 6], 0x49 ; mov esi, dword ptr [rax] ; call rcx
0x000000000043e1cf : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000431fbb : ror byte ptr [rdi], -0x67 ; ret 0xb60f
0x0000000000431feb : ror byte ptr [rdi], 1 ; cdq ; ret 0xb60f
0x0000000000423e32 : ror dword ptr [rax - 0x73], 0x65 ; clc ; pop rbx ; pop rbp ; ret
0x000000000042b61d : ror dword ptr [rcx - 0x7d], cl ; ret
0x000000000043836d : ror dword ptr [rdi], -0x61 ; ret 0x48b
0x000000000042d57b : ror dword ptr [rdi], -0x69 ; ret 0x348b
0x000000000042d57a : ror dword ptr cs:[rdi], -0x69 ; ret 0x348b
0x0000000000450eb6 : sahf ; ret 0x5588
0x0000000000434b19 : sahf ; ret 0xc8b
0x000000000045be59 : sahf ; std ; call rax
0x000000000043b6c4 : sal dh, cl ; ret 0x8901
0x00000000004025ee : sar eax, 1 ; jne 0x4025f9 ; pop rbp ; ret
0x000000000044a429 : sar edi, -1 ; jmp 0x446709
0x00000000004025ed : sar rax, 1 ; jne 0x4025fa ; pop rbp ; ret
0x000000000045b908 : sbb ah, dh ; cld ; call qword ptr [rdx]
0x0000000000446149 : sbb al, -0x7f ; ret 1
0x000000000045a38c : sbb al, 0 ; add byte ptr [rax], al ; adc byte ptr [rbx - 6], bh ; call rax
0x000000000045c02d : sbb al, 0 ; add byte ptr [rax], al ; loopne 0x45c036 ; call qword ptr [rbx]
0x000000000045bfbd : sbb al, 0 ; add byte ptr [rax], al ; retf ; std ; call qword ptr [rax]
0x000000000045bc8c : sbb al, 0x19 ; add byte ptr [rax], al ; loopne 0x45bce4 ; std ; call qword ptr [rdx]
0x000000000045c08c : sbb al, 0x1d ; add byte ptr [rax], al ; adc cl, ah ; std ; call rbx
0x000000000041a25e : sbb al, 0x25 ; xor al, ch ; add byte ptr gs:[rdi], cl ; xchg eax, edx ; ret
0x0000000000459bd5 : sbb al, byte ptr [rax] ; add ah, cl ; test bh, ah ; call rsp
0x000000000045be55 : sbb al, byte ptr [rax] ; add byte ptr [rax - 0x62], ch ; std ; call rax
0x000000000045ac89 : sbb bh, ah ; jmp rcx
0x0000000000418ff4 : sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000041be5c : sbb byte ptr [rcx], 0 ; add rsp, 0x20 ; pop rbp ; ret
0x000000000045cd38 : sbb byte ptr [rdi + rdi*8], dh ; jmp qword ptr [rbx]
0x000000000045bb41 : sbb ch, bh ; call rcx
0x00000000004209e6 : sbb cl, byte ptr [rax - 0x75] ; sbb dword ptr [rax - 0x7f], ecx ; ret
0x000000000043a960 : sbb cl, byte ptr [rcx - 0x7f] ; ret
0x00000000004209e9 : sbb dword ptr [rax - 0x7f], ecx ; ret
0x000000000045bc8d : sbb dword ptr [rax], eax ; add al, ah ; std ; call qword ptr [rdx]
0x000000000045c08d : sbb eax, 0xe1100000 ; std ; call rbx
0x0000000000459c15 : sbb eax, dword ptr [rax] ; add ah, cl ; xchg eax, ebp ; cld ; call rsp
0x000000000045bef5 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x4a], bl ; std ; jmp rax
0x0000000000453567 : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000045be95 : sbb eax, dword ptr [rax] ; add byte ptr [rax], ch ; movsd dword ptr [rdi], dword ptr [rsi] ; std ; jmp rbx
0x0000000000403c72 : sbb ebx, dword ptr [rbx + 0xf] ; xchg eax, ebp ; ret 0xb60f
0x000000000041468f : scasd eax, dword ptr [rdi] ; ret
0x000000000040275c : scasd eax, dword ptr [rdi] ; ret 0x125
0x0000000000406582 : scasd eax, dword ptr [rdi] ; ret 0x8141
0x000000000042d3c4 : sete al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004092d3 : setne al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004092d5 : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000042b756 : shl dword ptr [rsi + 0xf], 0x5c ; ret 0xf66
0x000000000044ff4f : shl edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000044fee8 : shl edx, cl ; or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x000000000044ff1f : shr edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000459925 : sldt word ptr [rax] ; pushfq ; cmpsd dword ptr [rsi], dword ptr [rdi] ; sti ; jmp rsp
0x00000000004504ba : stc ; add byte ptr [r8], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x000000000040af15 : stc ; add byte ptr [rax - 0x6bf10000], ah ; ret 0xc8b
0x0000000000415db5 : stc ; add byte ptr [rax - 0x6bf10000], al ; ret 0xc8b
0x000000000040bc1e : stc ; add byte ptr [rax], ah ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x0000000000415ff0 : stc ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x000000000040a1b9 : stc ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf280
0x0000000000450eb0 : stc ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x0000000000450570 : stc ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x000000000045bfc2 : std ; call qword ptr [rax]
0x000000000045c032 : std ; call qword ptr [rbx]
0x000000000045bc92 : std ; call qword ptr [rdx]
0x000000000045be5a : std ; call rax
0x000000000045c092 : std ; call rbx
0x000000000045bb42 : std ; call rcx
0x000000000045ba1a : std ; call rdx
0x0000000000459dca : std ; call rsp
0x0000000000459e42 : std ; inc esp ; and al, 0 ; add byte ptr [rcx + rdi*2 - 3], ch ; jmp rsp
0x000000000045befa : std ; jmp rax
0x000000000045be9a : std ; jmp rbx
0x0000000000459e0a : std ; jmp rsp
0x0000000000459dc2 : std ; push qword ptr [rdx + 0x34ec0000] ; std ; call rsp
0x0000000000423345 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000045a712 : sti ; call qword ptr [rcx]
0x000000000045a9c2 : sti ; call qword ptr [rdi]
0x000000000045a8ba : sti ; call qword ptr [rdx]
0x00000000004599a2 : sti ; call rsp
0x0000000000459922 : sti ; inc esp ; sldt word ptr [rax] ; pushfq ; cmpsd dword ptr [rsi], dword ptr [rdi] ; sti ; jmp rsp
0x000000000045a632 : sti ; jmp qword ptr [rdi]
0x000000000045a812 : sti ; jmp rdi
0x00000000004598ea : sti ; jmp rsp
0x000000000045999a : sti ; push qword ptr [rcx + rdx - 0x7d40000] ; sti ; call rsp
0x000000000040fc11 : sti ; xchg eax, edx ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000421d65 : sub al, -0xd ; add byte ptr gs:[rbp - 0x77], al ; ret
0x0000000000406572 : sub al, -0xd ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x000000000041467f : sub al, -0xd ; add byte ptr gs:[rcx - 0x77], al ; ret
0x0000000000404ac2 : sub al, -0xd ; add byte ptr gs:[rcx - 0x77], al ; ret 0x8141
0x00000000004599a0 : sub al, -8 ; sti ; call rsp
0x000000000045cdf5 : sub al, byte ptr [rax] ; add al, ch ; cmp edi, edi ; call rax
0x0000000000459f3d : sub byte ptr [rax], al ; add byte ptr [rbp + rcx - 2], bl ; jmp rsp
0x000000000045cd35 : sub dword ptr [rax], eax ; add byte ptr [rax], bl ; xor al, 0xffffffffffffffff ; jmp qword ptr [rbx]
0x0000000000403c70 : sub ecx, 0x950f5b1b ; ret 0xb60f
0x000000000044aa4b : sub esi, 1 ; mov eax, esi ; pop rbp ; ret
0x00000000004539b1 : sub esp, 8 ; add rsp, 8 ; ret
0x00000000004539b0 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000044705e : sysenter
0x000000000040ae23 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x000000000040da7e : test al, 0x48 ; add esp, 0x60 ; pop rbp ; ret
0x00000000004265a1 : test al, 0x48 ; add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000420bb2 : test al, 0x4c ; mov eax, dword ptr [rsi] ; mov rsi, qword ptr [r8] ; call rcx
0x000000000045ab08 : test al, 3 ; cld ; jmp rax
0x0000000000459bd9 : test bh, ah ; call rsp
0x000000000045394a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000045bef4 : test byte ptr [rbx], bl ; add byte ptr [rax], al ; pop rax ; mov dh, -3 ; jmp rax
0x000000000045cdf4 : test byte ptr [rdx], ch ; add byte ptr [rax], al ; call 0xffffffffd145cd3d
0x0000000000434dc6 : test dh, dh ; cmove ecx, edx ; movsxd rax, ecx ; pop rbp ; ret
0x0000000000411ecb : test dword ptr [rax - 0x3900000f], edx ; jmp qword ptr [rax]
0x000000000042cce7 : test dword ptr [rbp], eax ; mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x0000000000403fda : test dword ptr [rip - 0x17000000], eax ; ret
0x000000000044d238 : test dword ptr [rip - 0x17000000], eax ; ret 0
0x000000000043cc1f : test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x000000000043b431 : test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x0000000000440b2f : test dword ptr [rip - 0x17000000], eax ; ret 0x92
0x00000000004521b8 : test dword ptr [rip - 0x17000000], eax ; ret 0xb
0x000000000041b0ba : test dword ptr [rip - 0x17000000], eax ; ret 1
0x0000000000413742 : test dword ptr [rip - 0x17000000], eax ; ret 5
0x00000000004170f7 : test dword ptr [rip - 0x17000000], eax ; ret 8
0x0000000000447058 : test dword ptr [rip - 0x17000000], eax ; sysenter
0x000000000044c993 : test eax, 0x48fffffc ; add esp, 0x10 ; pop rbp ; ret
0x0000000000438038 : xchg byte ptr [rbp], al ; jmp rcx
0x0000000000459c19 : xchg eax, ebp ; cld ; call rsp
0x0000000000428d47 : xchg eax, ebp ; push 0x39ffffff ; ret 0x850f
0x000000000042e7ae : xchg eax, ebp ; ret
0x00000000004083de : xchg eax, ebp ; ret 0x348b
0x000000000041835e : xchg eax, ebp ; ret 0x3c8b
0x000000000043228e : xchg eax, ebp ; ret 0x8041
0x000000000044c372 : xchg eax, ebp ; ret 0x8b44
0x0000000000403c75 : xchg eax, ebp ; ret 0xb60f
0x0000000000415e99 : xchg eax, ebp ; ret 0xc8b
0x0000000000404f9c : xchg eax, ebp ; ret 0xd284
0x000000000040adf7 : xchg eax, ebp ; ret 0xe280
0x00000000004092d4 : xchg eax, ebp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000042d57d : xchg eax, edi ; ret 0x348b
0x000000000040fc12 : xchg eax, edx ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041a265 : xchg eax, edx ; ret
0x000000000042c083 : xchg eax, edx ; ret 0x348b
0x0000000000431d96 : xchg eax, edx ; ret 0xe280
0x000000000043b517 : xchg eax, esi ; ret 0x348b
0x000000000045b904 : xchg eax, esp ; adc eax, 0xf4180000 ; cld ; call qword ptr [rdx]
0x000000000045a504 : xchg eax, esp ; add dword ptr [rax], eax ; add al, bh ; in eax, dx ; cli ; jmp qword ptr [rdi]
0x000000000045af04 : xchg eax, esp ; or eax, dword ptr [rax] ; add al, bh ; cmp edi, esp ; jmp rdi
0x0000000000404ae0 : xchg eax, esp ; ret
0x000000000040a8ae : xchg eax, esp ; ret 0x348b
0x000000000043462e : xchg eax, esp ; ret 0x48b
0x00000000004092b6 : xchg eax, esp ; ret 0x5588
0x0000000000406114 : xchg eax, esp ; ret 0x8141
0x000000000042603a : xchg eax, esp ; ret 0x8b44
0x0000000000404438 : xchg eax, esp ; ret 0xa3d
0x0000000000406edb : xchg eax, esp ; ret 0xc8b
0x0000000000406449 : xchg eax, esp ; ret 0xd284
0x000000000040a1bf : xchg eax, esp ; ret 0xf280
0x000000000040a7fd : xchg eax, esp ; ret 0xf981
0x000000000040bfe1 : xchg eax, esp ; ret 0xfa81
0x000000000044398a : xchg eax, esp ; ret 0xfe81
0x0000000000407369 : xchg eax, esp ; ret 0xff81
0x000000000042d3c5 : xchg eax, esp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000414658 : xlatb ; mov rax, rdi ; pop rbp ; ret
0x0000000000459dc9 : xor al, 0xfffffffffffffffd ; call rsp
0x000000000045cd39 : xor al, 0xffffffffffffffff ; jmp qword ptr [rbx]
0x000000000045a4a4 : xor al, 1 ; add byte ptr [rax], al ; cwde ; in al, dx ; cli ; jmp qword ptr [rdi]
0x000000000041a260 : xor al, ch ; add byte ptr gs:[rdi], cl ; xchg eax, edx ; ret
0x000000000045cc79 : xor bh, bh ; jmp qword ptr [rdi]
0x000000000043f7d7 : xor byte ptr [rax - 0x75], cl ; add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x000000000043f879 : xor byte ptr [rax - 0x75], cl ; add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x000000000045a135 : xor byte ptr [rax], al ; add byte ptr [rsi + rdx - 1], bh ; call rsp
0x000000000045b760 : xor cl, al ; cld ; call qword ptr [rax]
0x000000000042e097 : xor cl, byte ptr [rax - 0x75] ; call rcx
0x000000000043a3b6 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
