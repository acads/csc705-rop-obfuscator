0x000000000041c995 : adc al, byte ptr [rax] ; add byte ptr [rdx + rdi*2 - 1], dh ; call rsp
0x0000000000408cbc : adc byte ptr [rax - 0x7f], cl ; ret 1
0x000000000041d1d0 : adc dh, -2 ; jmp rbx
0x000000000041c95d : adc dword ptr [rax], eax ; add byte ptr [rcx - 1], dl ; jmp rsp
0x000000000041c9d5 : adc eax, dword ptr [rax] ; add byte ptr [rax + rbp*4 - 1], al ; call rsp
0x000000000041c89f : add ah, ah ; cmp edi, edi ; call rsp
0x000000000041c767 : add ah, al ; ret
0x000000000041d517 : add al, bl ; sub edi, edi ; call qword ptr [rdi]
0x00000000004083f4 : add al, byte ptr [rcx + 0xf] ; xchg eax, edi ; ret
0x0000000000405735 : add al, ch ; cmc ; ret 0xffff
0x0000000000405607 : add al, ch ; ret 0xffff
0x000000000041d05f : add al, dh ; ret
0x0000000000411553 : add bh, bh ; dec dword ptr [rax - 0x73] ; xor al, 0x25 ; ret 0x41
0x000000000041acff : add bl, dh ; ret
0x0000000000412d17 : add byte ptr [r8 - 0x73], cl ; xor al, 0x25 ; push rsi ; ret
0x0000000000419b2b : add byte ptr [r8], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x000000000041c9d7 : add byte ptr [rax + rbp*4 - 1], al ; call rsp
0x0000000000407534 : add byte ptr [rax - 0x73], cl ; clc ; pop rbx ; pop rbp ; ret
0x0000000000412d25 : add byte ptr [rax - 0x73], cl ; or al, 0x25 ; ret
0x0000000000412d18 : add byte ptr [rax - 0x73], cl ; xor al, 0x25 ; push rsi ; ret
0x0000000000409033 : add byte ptr [rax - 0x75], cl ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004090cf : add byte ptr [rax - 0x75], cl ; call 0xffffffffb1031a27
0x0000000000406c1d : add byte ptr [rax - 0x75], cl ; push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x00000000004120f0 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x75], 1 ; cmp al, ch ; ret
0x0000000000411aa0 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000409036 : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000402036 : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000041d1ce : add byte ptr [rax], al ; adc dh, -2 ; jmp rbx
0x000000000041acfd : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000407532 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; clc ; pop rbx ; pop rbp ; ret
0x0000000000412d23 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; or al, 0x25 ; ret
0x00000000004090cd : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; call 0xffffffffb1031a29
0x0000000000409d61 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000403047 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000041acfb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000400680 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004005a8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000400682 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004005aa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000041ba93 : add byte ptr [rax], al ; add byte ptr [rax], al ; add dl, al ; int 0x40
0x000000000040611f : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041ab99 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000415559 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000040aa0e : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004076e7 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000400684 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004005ac : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000041ba94 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x40cd
0x0000000000407500 : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x8141
0x000000000041d059 : add byte ptr [rax], al ; add byte ptr [rbp + rax], bh ; add al, dh ; ret
0x000000000040fa08 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000407b68 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7078b], cl ; ret 0xb0
0x0000000000406869 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7238b], cl ; ret 0xb0
0x000000000040265e : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret
0x000000000040382f : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x844
0x00000000004035f1 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x0000000000410caa : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x000000000040b4fa : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x125
0x000000000041829f : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x0000000000409bfc : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x00000000004048fd : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000402653 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x000000000040f9a8 : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x51], al ; ret
0x0000000000419a60 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x0000000000419b2c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x0000000000404907 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret
0x00000000004103b6 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x000000000041a522 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x0000000000419be2 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x000000000041830c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret
0x0000000000401ee2 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x125
0x000000000040950f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000411627 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x000000000041216e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x0000000000415f35 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x00000000004118a1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x0000000000406fff : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000419d10 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x000000000040c461 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x000000000040221d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x0000000000402ed2 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x00000000004109a7 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004163de : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xfe81
0x0000000000409ffd : add byte ptr [rax], al ; add cl, ch ; ret
0x00000000004147ca : add byte ptr [rax], al ; add cl, ch ; ret 0
0x000000000040d9d1 : add byte ptr [rax], al ; add cl, ch ; ret 0x13
0x000000000040c1e3 : add byte ptr [rax], al ; add cl, ch ; ret 0x2a
0x0000000000418baa : add byte ptr [rax], al ; add cl, ch ; ret 0xb
0x000000000040d2ce : add byte ptr [rax], al ; add cl, ch ; ret 1
0x0000000000409119 : add byte ptr [rax], al ; add cl, ch ; ret 2
0x000000000041ba95 : add byte ptr [rax], al ; add dl, al ; int 0x40
0x0000000000409f6f : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403f2a : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404125 : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000404af2 : add byte ptr [rax], al ; add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x000000000040166b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000041d0a6 : add byte ptr [rax], al ; call 0xffffffffe841cf79
0x000000000041d936 : add byte ptr [rax], al ; cmp byte ptr [rbx - 1], bh ; call qword ptr [rax]
0x0000000000401809 : add byte ptr [rax], al ; jmp 0x401689
0x0000000000407533 : add byte ptr [rax], al ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000041cf8e : add byte ptr [rax], al ; mov cl, -2 ; jmp qword ptr [rbx]
0x000000000040b2d2 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000041ab9b : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x000000000041555b : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000041db9a : add byte ptr [rax], al ; mov esp, 0xb0000010 ; ret 0xffff
0x0000000000409032 : add byte ptr [rax], al ; mov rax, qword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040af42 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040aa10 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000409d62 : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000041ccea : add byte ptr [rax], al ; or al, 2 ; add byte ptr [rax], al ; push rax ; test bh, dh ; jmp rsi
0x000000000041cb46 : add byte ptr [rax], al ; or byte ptr [rcx - 2], dl ; call qword ptr [rbx]
0x0000000000403b51 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040fa09 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000419735 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040ec31 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000041ccee : add byte ptr [rax], al ; push rax ; test bh, dh ; jmp rsi
0x0000000000400686 : add byte ptr [rax], al ; ret
0x00000000004005ae : add byte ptr [rax], al ; ret 0
0x000000000041ba96 : add byte ptr [rax], al ; ret 0x40cd
0x000000000041c9d6 : add byte ptr [rax], al ; test al, -1 ; call rsp
0x000000000041d937 : add byte ptr [rax], bh ; jnp 0x41d93e ; call qword ptr [rax]
0x00000000004093db : add byte ptr [rbp + 0x48], bh ; add esp, 0x40 ; pop rbp ; ret
0x0000000000407502 : add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x8141
0x000000000041d05b : add byte ptr [rbp + rax], bh ; add al, dh ; ret
0x00000000004074f8 : add byte ptr [rbp - 0x77], al ; ret 0x8141
0x000000000040fa0a : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000419736 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040ec32 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000402a2d : add byte ptr [rbx - 0x1734b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000402bbd : add byte ptr [rbx - 0x18f4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000407b6a : add byte ptr [rbx - 0x76b7078b], cl ; ret 0xb0
0x000000000040686b : add byte ptr [rbx - 0x76b7238b], cl ; ret 0xb0
0x000000000040700b : add byte ptr [rcx + 0xf], al ; pushfq ; mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x0000000000402660 : add byte ptr [rcx + 0xf], al ; pushfq ; ret
0x0000000000403831 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x844
0x00000000004035f3 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x0000000000410cac : add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x000000000040b4fc : add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x125
0x00000000004182a1 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x0000000000409bfe : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x00000000004048ff : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000402655 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x000000000040fd7c : add byte ptr [rcx + 0xfe], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004105b8 : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040c45d : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x0000000000402219 : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x0000000000410ca2 : add byte ptr [rcx - 0x77], al ; ret
0x000000000040b4f2 : add byte ptr [rcx - 0x77], al ; ret 0x8141
0x000000000041c95f : add byte ptr [rcx - 1], dl ; jmp rsp
0x0000000000401bd8 : add byte ptr [rcx], al ; ret
0x000000000040f9aa : add byte ptr [rdi + rcx - 0x51], al ; ret
0x0000000000419a62 : add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x0000000000419b2e : add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x0000000000404909 : add byte ptr [rdi], cl ; pushfq ; ret
0x00000000004103b8 : add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x000000000041a524 : add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x0000000000419be4 : add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x000000000041830e : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret
0x0000000000401ee4 : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x125
0x0000000000409511 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000411629 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x0000000000412170 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x0000000000415f37 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x00000000004118a3 : add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x0000000000407001 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000408eb4 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x000000000040c463 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x000000000040221f : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x0000000000402ed4 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x00000000004109a9 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004163e0 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xfe81
0x000000000041cceb : add byte ptr [rdx + rax], cl ; add byte ptr [rax], al ; push rax ; test bh, dh ; jmp rsi
0x000000000041c997 : add byte ptr [rdx + rdi*2 - 1], dh ; call rsp
0x000000000041d933 : add byte ptr [rsi + rcx], dl ; add byte ptr [rax], bh ; jnp 0x41d942 ; call qword ptr [rax]
0x0000000000408bc8 : add cl, byte ptr [rax - 0x77] ; ret 0xb0
0x0000000000409fff : add cl, ch ; ret
0x00000000004147cc : add cl, ch ; ret 0
0x000000000040d9d3 : add cl, ch ; ret 0x13
0x000000000040c1e5 : add cl, ch ; ret 0x2a
0x0000000000418bac : add cl, ch ; ret 0xb
0x000000000040d2d0 : add cl, ch ; ret 1
0x000000000040911b : add cl, ch ; ret 2
0x000000000041ba97 : add dl, al ; int 0x40
0x00000000004053d3 : add dword ptr [rax + 0x14e8ff4d], ecx ; ret
0x0000000000409856 : add dword ptr [rax - 0x75], ecx ; loopne 0x4098bf ; ret
0x000000000041058a : add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x000000000041062c : add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x0000000000419734 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040ec30 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000404a2f : add dword ptr [rdi + rcx - 0x4a], eax ; ret 0x7589
0x00000000004078f5 : add dword ptr [rdi], ecx ; mov dh, -0x3f ; pop rbp ; ret
0x0000000000406641 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000419c45 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x00000000004199ed : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000409ff9 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret
0x00000000004147c6 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0
0x000000000040d9cd : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x000000000040c1df : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x0000000000418ba6 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0xb
0x000000000040d2ca : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 1
0x0000000000409115 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 2
0x0000000000401bd4 : add eax, 0x21c75e ; add ebx, esi ; ret
0x0000000000409d60 : add eax, 0x48000000 ; mov esp, ebp ; pop rbp ; ret
0x0000000000409ffc : add eax, 0xe9000000 ; ret
0x00000000004147c9 : add eax, 0xe9000000 ; ret 0
0x000000000040d9d0 : add eax, 0xe9000000 ; ret 0x13
0x000000000040c1e2 : add eax, 0xe9000000 ; ret 0x2a
0x0000000000418ba9 : add eax, 0xe9000000 ; ret 0xb
0x000000000040d2cd : add eax, 0xe9000000 ; ret 1
0x0000000000409118 : add eax, 0xe9000000 ; ret 2
0x0000000000406eb1 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x0000000000401b9b : add eax, edx ; sar rax, 1 ; jne 0x401bac ; pop rbp ; ret
0x0000000000401bd9 : add ebx, esi ; ret
0x0000000000403f8b : add esp, 0x10 ; pop rbp ; ret
0x000000000040ec2d : add esp, 0x178 ; pop rbx ; pop rbp ; ret
0x0000000000411c8c : add esp, 0x1a0 ; pop rbp ; ret
0x00000000004174e0 : add esp, 0x1e0 ; pop rbp ; ret
0x0000000000403441 : add esp, 0x20 ; pop rbp ; ret
0x0000000000403371 : add esp, 0x30 ; pop rbp ; ret
0x0000000000404128 : add esp, 0x40 ; pop rbp ; ret
0x00000000004117cf : add esp, 0x40 ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004078b3 : add esp, 0x50 ; pop rbp ; ret
0x0000000000404af5 : add esp, 0x68 ; pop rbx ; pop rbp ; ret
0x000000000040ffc2 : add esp, 0x70 ; pop rbp ; ret
0x000000000040f04e : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000403b4d : add esp, 0x80 ; pop rbp ; ret
0x000000000040536e : add esp, 0xa0 ; pop rbp ; ret
0x0000000000411aec : add esp, 0xb0 ; pop rbp ; ret
0x0000000000405b21 : add esp, 0xe0 ; pop rbp ; ret
0x0000000000415387 : add esp, 0xf0 ; pop rbp ; ret
0x000000000040166e : add esp, 8 ; ret
0x0000000000401b9a : add rax, rdx ; sar rax, 1 ; jne 0x401bad ; pop rbp ; ret
0x0000000000403f8a : add rsp, 0x10 ; pop rbp ; ret
0x000000000040ec2c : add rsp, 0x178 ; pop rbx ; pop rbp ; ret
0x0000000000411c8b : add rsp, 0x1a0 ; pop rbp ; ret
0x00000000004174df : add rsp, 0x1e0 ; pop rbp ; ret
0x0000000000403440 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000403370 : add rsp, 0x30 ; pop rbp ; ret
0x0000000000404127 : add rsp, 0x40 ; pop rbp ; ret
0x00000000004117ce : add rsp, 0x40 ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004078b2 : add rsp, 0x50 ; pop rbp ; ret
0x0000000000404af4 : add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x000000000040ffc1 : add rsp, 0x70 ; pop rbp ; ret
0x000000000040f04d : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000403b4c : add rsp, 0x80 ; pop rbp ; ret
0x000000000040536d : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000411aeb : add rsp, 0xb0 ; pop rbp ; ret
0x0000000000405b20 : add rsp, 0xe0 ; pop rbp ; ret
0x0000000000415386 : add rsp, 0xf0 ; pop rbp ; ret
0x000000000040166d : add rsp, 8 ; ret
0x0000000000419c44 : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004199ec : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041793a : and byte ptr [r15], cl ; xchg eax, esp ; ret 0x348b
0x000000000041793b : and byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x00000000004078f3 : and cl, 1 ; movzx eax, cl ; pop rbp ; ret
0x0000000000401bd7 : and dword ptr [rax], eax ; add ebx, esi ; ret
0x00000000004106b7 : and eax, 0x48ffffee ; add esp, 0x20 ; pop rbp ; ret
0x0000000000405603 : and eax, 0x61e400 ; call 0x401907
0x000000000040572f : and eax, 0x61e408 ; mov al, 0 ; call 0x401a39
0x0000000000405411 : and eax, 0x61e418 ; call 0x4016a7
0x0000000000409dcf : and eax, 0x61e468 ; pop rbp ; ret
0x0000000000409df3 : and eax, 0x61e470 ; pop rbp ; ret
0x0000000000402ed1 : and eax, 0xf000000 ; xchg eax, esp ; ret 0xc8b
0x0000000000405416 : call 0x4016a2
0x0000000000405608 : call 0x401902
0x0000000000405736 : call 0x401a32
0x000000000040a9cc : call 0x4903331c
0x000000000040a9cb : call 0x4903331d
0x000000000040a9cc : call 0x4903331f
0x000000000040a9cb : call 0x49033320
0x00000000004090d3 : call 0xffffffffb1031a23
0x00000000004090d2 : call 0xffffffffb1031a24
0x000000000041d0a8 : call 0xffffffffe841cf77
0x000000000040eec9 : call 0xffffffffe9037819
0x000000000040eec8 : call 0xffffffffe903781a
0x000000000041acd9 : call qword ptr [r12 + rbx*8]
0x000000000041d16b : call qword ptr [rax]
0x000000000041cb4b : call qword ptr [rbx]
0x000000000041d51b : call qword ptr [rdi]
0x000000000041d0eb : call qword ptr [rsi]
0x000000000041acda : call qword ptr [rsp + rbx*8]
0x0000000000401bfd : call rax
0x000000000041d043 : call rbx
0x000000000041d84b : call rcx
0x000000000041cdf3 : call rdi
0x000000000041c76b : call rsp
0x00000000004187e4 : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406916 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406e85 : clc ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000401b9f : clc ; jne 0x401ba8 ; pop rbp ; ret
0x0000000000407538 : clc ; pop rbx ; pop rbp ; ret
0x0000000000403fb7 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040a378 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041688d : cld ; add rsp, 0xf0 ; pop rbp ; ret
0x000000000041ac76 : cld ; mov dword ptr [rbp - 0xc], eax ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x000000000040a375 : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041555f : cld ; pop rbp ; ret
0x000000000041a886 : cli ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000405737 : cmc ; ret 0xffff
0x0000000000409dce : cmp al, 0x25 ; push 0x5d0061e4 ; ret
0x0000000000417cc9 : cmp al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004120f7 : cmp al, ch ; ret
0x0000000000419d0e : cmp byte ptr [rax], ah ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x0000000000419a5e : cmp byte ptr [rax], dh ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000041d938 : cmp byte ptr [rbx - 1], bh ; call qword ptr [rax]
0x000000000041a14e : cmp byte ptr [rcx], ah ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x00000000004182d7 : cmp ch, al ; ret
0x000000000041216c : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x0000000000408af6 : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040f35d : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401b5d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401b70 ; pop rbp ; ret
0x000000000041c8a1 : cmp edi, edi ; call rsp
0x00000000004047a6 : dec byte ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x000000000040b5ef : dec byte ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret
0x0000000000410ea2 : dec dword ptr [rax - 0x73] ; xor al, 0x25 ; ret 0x41
0x0000000000409093 : dec dword ptr [rax - 0x75] ; push rbp ; ror byte ptr [rax + 1], 1 ; ret 0x8148
0x0000000000405583 : dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x00000000004085fb : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000402a33 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004194a4 : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000040382d : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x844
0x00000000004035ef : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x000000000040ef7b : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000410a4a : enter -0x7cb8, -0x3c ; pop rbp ; ret
0x00000000004048d4 : enter -2, -1 ; inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x48b
0x00000000004093d9 : fadd st(6) ; add byte ptr [rbp + 0x48], bh ; add esp, 0x40 ; pop rbp ; ret
0x0000000000403e1f : fiadd dword ptr [rcx - 0xa] ; ret 0x4001
0x00000000004101af : fiadd dword ptr [rcx - 0xa] ; ret 0x4801
0x0000000000415c66 : fiadd dword ptr [rcx - 0xa] ; ret 0x8801
0x0000000000402667 : fiadd dword ptr [rcx - 0xa] ; ret 0x8901
0x0000000000408fbe : fiadd dword ptr [rcx - 0xa] ; ret 0xf01
0x000000000040490f : fild dword ptr [rcx - 0xa] ; ret
0x0000000000401bf7 : fisub word ptr [rcx] ; mov rbp, rsp ; call rax
0x000000000040d5e8 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040686e : fmul qword ptr [rax - 0x77] ; ret 0xb0
0x000000000041acdc : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000403f89 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041ac79 : hlt ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000401b70 : hlt ; pop rbp ; mov edi, 0x61e2e0 ; jmp rax
0x000000000041ab9f : hlt ; pop rbp ; ret
0x0000000000405605 : in al, 0x61 ; add al, ch ; ret 0xffff
0x0000000000408eb2 : in al, 0x61 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x0000000000403c87 : in al, dx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405586 : in al, dx ; pop rbp ; ret
0x00000000004074f6 : in eax, 0x61 ; add byte ptr [rbp - 0x77], al ; ret 0x8141
0x0000000000410ca0 : in eax, 0x61 ; add byte ptr [rcx - 0x77], al ; ret
0x000000000040b4f0 : in eax, 0x61 ; add byte ptr [rcx - 0x77], al ; ret 0x8141
0x0000000000412848 : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x000000000040fd7e : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040f463 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000402651 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x00000000004105ba : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040c45f : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x000000000040221b : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x0000000000419b28 : inc dword ptr [rcx + 0x41f9] ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x000000000041a51e : inc dword ptr [rcx + 0x5af9] ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x0000000000419bde : inc dword ptr [rcx + 0x5af9] ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x00000000004048d8 : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x48b
0x000000000041c95b : inc esp ; adc dword ptr [rax], eax ; add byte ptr [rcx - 1], dl ; jmp rsp
0x0000000000411aa8 : int 0x80
0x0000000000401b63 : ja 0x401b6a ; pop rbp ; ret
0x000000000041c671 : jbe 0x41c673 ; jmp rsp
0x0000000000401b6f : je 0x401b6d ; pop rbp ; mov edi, 0x61e2e0 ; jmp rax
0x0000000000403f28 : je 0x403f49 ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004093dc : jge 0x40942c ; add esp, 0x40 ; pop rbp ; ret
0x000000000040180b : jmp 0x401687
0x000000000041d023 : jmp qword ptr [rax]
0x000000000041cf93 : jmp qword ptr [rbx]
0x0000000000409bb0 : jmp qword ptr [rcx]
0x0000000000401b77 : jmp rax
0x000000000041d1d3 : jmp rbx
0x0000000000401e97 : jmp rcx
0x000000000041d0ab : jmp rdi
0x0000000000401bb7 : jmp rdx
0x000000000041ccf3 : jmp rsi
0x000000000041c673 : jmp rsp
0x0000000000401ba0 : jne 0x401ba7 ; pop rbp ; ret
0x000000000041d939 : jnp 0x41d93c ; call qword ptr [rax]
0x000000000040ffc4 : jo 0x410025 ; ret
0x000000000041c999 : jp 0x41c99c ; call rsp
0x0000000000402034 : jrcxz 0x40209c ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x0000000000402ac0 : jrcxz 0x402b28 ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000040ec2f : js 0x40ec38 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040f050 : js 0x40f0b0 ; pop rbp ; ret
0x000000000040723b : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000414263 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000407536 : lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040723a : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000407535 : lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000041c994 : lodsb al, byte ptr [rsi] ; adc al, byte ptr [rax] ; add byte ptr [rdx + rdi*2 - 1], dh ; call rsp
0x00000000004078f4 : loope 0x4078fd ; movzx eax, cl ; pop rbp ; ret
0x0000000000405b23 : loopne 0x405b2a ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040961f : loopne 0x409685 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040985a : loopne 0x4098bb ; ret
0x0000000000409859 : loopne 0x4098bc ; ret
0x000000000040f48f : loopne 0x40f4e0 ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040f48e : loopne 0x40f4e1 ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000412975 : loopne 0x4129c5 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000412974 : loopne 0x4129c6 ; add esp, 0x20 ; pop rbp ; ret
0x00000000004174e2 : loopne 0x4174ea ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041c9d4 : mov ah, 0x13 ; add byte ptr [rax], al ; test al, -1 ; call rsp
0x0000000000411aee : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000405734 : mov al, 0 ; call 0x401a34
0x00000000004199e9 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041a884 : mov al, byte ptr [rbp - 6] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000409df1 : mov byte ptr [0x61e470], al ; pop rbp ; ret
0x000000000040700f : mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x00000000004093da : mov byte ptr [rax], 0x7d ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000409ff8 : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret
0x000000000040d9cc : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x000000000040c1de : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x000000000040f1b6 : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 1
0x0000000000409114 : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 2
0x0000000000401bd3 : mov byte ptr [rip + 0x21c75e], 1 ; ret
0x000000000041cf91 : mov cl, -2 ; jmp qword ptr [rbx]
0x00000000004078f7 : mov dh, -0x3f ; pop rbp ; ret
0x0000000000406643 : mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000419c47 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x00000000004199ef : mov dh, -0x40 ; pop rbp ; ret
0x000000000040540f : mov dword ptr [0x61e418], ecx ; call 0x4016a9
0x0000000000409dcd : mov dword ptr [0x61e468], edi ; pop rbp ; ret
0x0000000000407423 : mov dword ptr [rax + 8], ecx ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040b01a : mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040b168 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040609d : mov dword ptr [rbp - 0x10], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403c85 : mov dword ptr [rbp - 0x14], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403f87 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041ac77 : mov dword ptr [rbp - 0xc], eax ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000403fb5 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000409855 : mov dword ptr [rcx], eax ; mov rax, qword ptr [rbp - 0x20] ; pop rbp ; ret
0x00000000004076e4 : mov dword ptr [rdi + 0x10], 0 ; pop rbp ; ret
0x000000000040f04c : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x00000000004123b5 : mov eax, 0xf0658d48 ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000407b81 : mov eax, dword ptr [rax + 0x18] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000409035 : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040af48 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000407750 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406757 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004176de : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040af45 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000407676 : mov eax, dword ptr [rbp - 0x10] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040a1c3 : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000416b8b : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b2d4 : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000411def : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040aefd : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040b014 : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004101c4 : mov eax, dword ptr [rbp - 0x18] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040aa13 : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000412973 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040f48d : mov eax, dword ptr [rbp - 0x20] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000409858 : mov eax, dword ptr [rbp - 0x20] ; pop rbp ; ret
0x0000000000405ff2 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040b16a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040336d : mov eax, dword ptr [rbp - 0x30] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000410a48 : mov eax, dword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004078af : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040f04a : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000041ab9d : mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x000000000040a376 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041555d : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004187e2 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406914 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406e83 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000401bfb : mov ebp, esp ; call rax
0x0000000000401b61 : mov ebp, esp ; ja 0x401b6c ; pop rbp ; ret
0x0000000000401e90 : mov ecx, dword ptr [rax*8 + 0x41ad50] ; jmp rcx
0x000000000040b997 : mov ecx, dword ptr [rax*8 + 0x41ba00] ; jmp rcx
0x000000000040c4b1 : mov ecx, dword ptr [rax*8 + 0x41ba48] ; jmp rcx
0x0000000000410f72 : mov ecx, dword ptr [rax*8 + 0x41bf08] ; jmp rcx
0x000000000041365f : mov ecx, dword ptr [rax*8 + 0x41c270] ; jmp rcx
0x00000000004135df : mov ecx, dword ptr [rax*8 + 0x41c2d0] ; jmp rcx
0x0000000000414e17 : mov ecx, dword ptr [rax*8 + 0x41c3b8] ; jmp rcx
0x0000000000414d97 : mov ecx, dword ptr [rax*8 + 0x41c418] ; jmp rcx
0x000000000041632d : mov ecx, dword ptr [rax*8 + 0x41c4d0] ; jmp rcx
0x00000000004162ad : mov ecx, dword ptr [rax*8 + 0x41c530] ; jmp rcx
0x000000000040b017 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401bf5 : mov edi, 0x61de20 ; mov rbp, rsp ; call rax
0x0000000000401b72 : mov edi, 0x61e2e0 ; jmp rax
0x0000000000401bb2 : mov edi, 0x61e2e0 ; jmp rdx
0x0000000000405601 : mov edi, dword ptr [0x61e400] ; call 0x401909
0x000000000041acd7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000041acd6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000401bb0 : mov esi, eax ; mov edi, 0x61e2e0 ; jmp rdx
0x000000000041db9c : mov esp, 0xb0000010 ; ret 0xffff
0x0000000000405585 : mov esp, ebp ; pop rbp ; ret
0x0000000000409dcc : mov qword ptr [0x61e468], rdi ; pop rbp ; ret
0x0000000000407422 : mov qword ptr [rax + 8], rcx ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040609c : mov qword ptr [rbp - 0x10], rax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004076e3 : mov qword ptr [rdi + 0x10], 0 ; pop rbp ; ret
0x000000000040f04b : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000407b80 : mov rax, qword ptr [rax + 0x18] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000409034 : mov rax, qword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040774f : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406756 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040af44 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000407675 : mov rax, qword ptr [rbp - 0x10] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040a1c2 : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000411dee : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040aefc : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004101c3 : mov rax, qword ptr [rbp - 0x18] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040aa12 : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000412972 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000409857 : mov rax, qword ptr [rbp - 0x20] ; pop rbp ; ret
0x0000000000405ff1 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040336c : mov rax, qword ptr [rbp - 0x30] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000410a47 : mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004078ae : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004187e1 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406913 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406e82 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000401bfa : mov rbp, rsp ; call rax
0x0000000000401b60 : mov rbp, rsp ; ja 0x401b6d ; pop rbp ; ret
0x0000000000401e8f : mov rcx, qword ptr [rax*8 + 0x41ad50] ; jmp rcx
0x000000000040b996 : mov rcx, qword ptr [rax*8 + 0x41ba00] ; jmp rcx
0x000000000040c4b0 : mov rcx, qword ptr [rax*8 + 0x41ba48] ; jmp rcx
0x0000000000410f71 : mov rcx, qword ptr [rax*8 + 0x41bf08] ; jmp rcx
0x000000000041365e : mov rcx, qword ptr [rax*8 + 0x41c270] ; jmp rcx
0x00000000004135de : mov rcx, qword ptr [rax*8 + 0x41c2d0] ; jmp rcx
0x0000000000414e16 : mov rcx, qword ptr [rax*8 + 0x41c3b8] ; jmp rcx
0x0000000000414d96 : mov rcx, qword ptr [rax*8 + 0x41c418] ; jmp rcx
0x000000000041632c : mov rcx, qword ptr [rax*8 + 0x41c4d0] ; jmp rcx
0x00000000004162ac : mov rcx, qword ptr [rax*8 + 0x41c530] ; jmp rcx
0x0000000000401baf : mov rsi, rax ; mov edi, 0x61e2e0 ; jmp rdx
0x0000000000405584 : mov rsp, rbp ; pop rbp ; ret
0x0000000000406642 : movzx eax, al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000419c46 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004199ee : movzx eax, al ; pop rbp ; ret
0x00000000004078f6 : movzx eax, cl ; pop rbp ; ret
0x000000000041acf8 : nop dword ptr [rax + rax] ; ret
0x0000000000412d28 : or al, 0x25 ; ret
0x000000000041ccec : or al, 2 ; add byte ptr [rax], al ; push rax ; test bh, dh ; jmp rsi
0x000000000041d515 : or al, byte ptr [rax] ; add al, bl ; sub edi, edi ; call qword ptr [rdi]
0x000000000040f219 : or byte ptr [r15], cl ; xchg eax, ebp ; ret 0x348b
0x000000000040d5e3 : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040d5e4 : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000419d0c : or byte ptr [rcx + 0x2038], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x000000000041a14c : or byte ptr [rcx + 0x2138], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x0000000000402ece : or byte ptr [rcx + 0x25f9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x000000000041189d : or byte ptr [rcx + 0x28f9], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x0000000000419a5c : or byte ptr [rcx + 0x3038], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000041a04c : or byte ptr [rcx + 0x6138], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x0000000000415f31 : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x000000000041cb48 : or byte ptr [rcx - 2], dl ; call qword ptr [rbx]
0x000000000040f21a : or byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x000000000041058d : or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x000000000041062f : or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x000000000040958b : or dword ptr [rax - 0x77], ecx ; ret 0xb0
0x000000000041c765 : or dword ptr [rax], eax ; add ah, al ; ret
0x000000000041263f : or eax, 0x48fffff9 ; add esp, 0x30 ; pop rbp ; ret
0x000000000040b49d : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000410ea0 : or edi, edi ; dec dword ptr [rax - 0x73] ; xor al, 0x25 ; ret 0x41
0x0000000000410e9f : or r15, r15 ; dec dword ptr [rax - 0x73] ; xor al, 0x25 ; ret 0x41
0x00000000004050a2 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041acec : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000409621 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004050a4 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041acee : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004050a6 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041acf0 : pop r14 ; pop r15 ; ret
0x000000000040723f : pop r14 ; pop rbp ; ret
0x00000000004050a8 : pop r15 ; pop rbp ; ret
0x000000000041acf2 : pop r15 ; ret
0x0000000000401bd2 : pop rbp ; mov byte ptr [rip + 0x21c75e], 1 ; ret
0x0000000000401b71 : pop rbp ; mov edi, 0x61e2e0 ; jmp rax
0x0000000000401bae : pop rbp ; mov rsi, rax ; mov edi, 0x61e2e0 ; jmp rdx
0x000000000041aceb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004050a5 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041acef : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401b65 : pop rbp ; ret
0x0000000000409620 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040fa0b : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040723e : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000404af8 : pop rbx ; pop rbp ; ret
0x00000000004050a9 : pop rdi ; pop rbp ; ret
0x000000000041acf3 : pop rdi ; ret
0x000000000041a521 : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x0000000000419be1 : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x00000000004050a7 : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000041acf1 : pop rsi ; pop r15 ; ret
0x0000000000407240 : pop rsi ; pop rbp ; ret
0x00000000004050a3 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041aced : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000409622 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000419a64 : popfq ; ret 0x348b
0x0000000000419b30 : popfq ; ret 0xc8b
0x0000000000409dd0 : push 0x5d0061e4 ; ret
0x0000000000419733 : push rax ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x00000000004078b5 : push rax ; pop rbp ; ret
0x000000000041ccf0 : push rax ; test bh, dh ; jmp rsi
0x000000000040d5e7 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000401bf4 : push rbp ; mov edi, 0x61de20 ; mov rbp, rsp ; call rax
0x0000000000409096 : push rbp ; ror byte ptr [rax + 1], 1 ; ret 0x8148
0x0000000000406c20 : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000040ef7e : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000412d1d : push rsi ; ret
0x000000000040700e : pushfq ; mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x0000000000402663 : pushfq ; ret
0x0000000000403834 : pushfq ; ret 0x844
0x00000000004035f6 : pushfq ; ret 0x845
0x00000000004103ba : pushfq ; ret 0xd108
0x0000000000400688 : ret
0x00000000004005b0 : ret 0
0x0000000000401ee7 : ret 0x125
0x000000000040d9d5 : ret 0x13
0x00000000004073d1 : ret 0x18
0x0000000000401be4 : ret 0x21
0x0000000000401a12 : ret 0x21c7
0x0000000000401812 : ret 0x21c8
0x000000000040c1e7 : ret 0x2a
0x000000000040a9c1 : ret 0x30
0x0000000000408eb7 : ret 0x348b
0x0000000000403e22 : ret 0x4001
0x000000000041ba98 : ret 0x40cd
0x0000000000410ea8 : ret 0x41
0x00000000004101b2 : ret 0x4801
0x00000000004048dc : ret 0x48b
0x0000000000404c45 : ret 0x48f0
0x0000000000410307 : ret 0x4cc0
0x0000000000408a91 : ret 0x4cf0
0x000000000041a527 : ret 0x5588
0x0000000000404a33 : ret 0x7589
0x0000000000410590 : ret 0x7ae8
0x00000000004182a5 : ret 0x8041
0x0000000000402659 : ret 0x8141
0x000000000040909a : ret 0x8148
0x0000000000403835 : ret 0x844
0x0000000000409c02 : ret 0x8445
0x00000000004035f7 : ret 0x845
0x0000000000415c69 : ret 0x8801
0x000000000040266a : ret 0x8901
0x00000000004124f5 : ret 0x8948
0x000000000040d95c : ret 0x89a5
0x0000000000412173 : ret 0x8b44
0x0000000000408486 : ret 0x8b48
0x0000000000402222 : ret 0xa3d
0x000000000040d600 : ret 0xae8
0x0000000000418bae : ret 0xb
0x0000000000402039 : ret 0xb0
0x0000000000401b95 : ret 0xc148
0x00000000004033f3 : ret 0xc189
0x00000000004163f0 : ret 0xc2f6
0x0000000000402ed7 : ret 0xc8b
0x00000000004103bb : ret 0xd108
0x00000000004109ac : ret 0xd284
0x0000000000410632 : ret 0xd8e8
0x0000000000408d6f : ret 0xdbe8
0x000000000040258a : ret 0xe
0x0000000000401ede : ret 0xea81
0x000000000040eecc : ret 0xee8
0x0000000000402230 : ret 0xf01
0x00000000004163e3 : ret 0xfe81
0x0000000000409cda : ret 0xffb8
0x0000000000405418 : ret 0xffff
0x000000000040255f : ret 1
0x000000000040911d : ret 2
0x000000000041d1ac : ret 4
0x000000000040ef82 : ret 8
0x00000000004078f2 : rol dword ptr [rax - 0x49f0fe1f], -0x3f ; pop rbp ; ret
0x0000000000413ea5 : rol dword ptr [rcx + 0xf], -0x64 ; ret
0x00000000004120f3 : ror byte ptr [r8 - 0x75], 1 ; cmp al, ch ; ret
0x0000000000411aa3 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x00000000004078b0 : ror byte ptr [r8 - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x0000000000409097 : ror byte ptr [rax + 1], 1 ; ret 0x8148
0x0000000000401b9c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401bab ; pop rbp ; ret
0x00000000004120f4 : ror byte ptr [rax - 0x75], 1 ; cmp al, ch ; ret
0x0000000000419c48 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x0000000000411aa4 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000406644 : ror byte ptr [rax - 0x7d], -0x3c ; pop rbp ; ret
0x00000000004078b1 : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x0000000000406c21 : ror byte ptr [rax - 0x7f], 1 ; ret 1
0x000000000040ef7f : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000041a526 : sahf ; ret 0x5588
0x0000000000419be6 : sahf ; ret 0xc8b
0x000000000040c474 : sal dh, cl ; ret 0x8901
0x000000000041d169 : sar dh, 1 ; call qword ptr [rax]
0x0000000000401b9e : sar eax, 1 ; jne 0x401ba9 ; pop rbp ; ret
0x0000000000401b9d : sar rax, 1 ; jne 0x401baa ; pop rbp ; ret
0x000000000041db98 : sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0xb0000010 ; ret 0xffff
0x000000000040b710 : sbb cl, byte ptr [rcx - 0x7f] ; ret
0x0000000000404c75 : sbb dword ptr [rcx - 0x7f], ecx ; ret
0x0000000000417897 : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040f9ad : scasd eax, dword ptr [rdi] ; ret
0x0000000000401ee6 : scasd eax, dword ptr [rdi] ; ret 0x125
0x0000000000407505 : scasd eax, dword ptr [rdi] ; ret 0x8141
0x0000000000419b2a : stc ; add byte ptr [r8], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x0000000000402ed0 : stc ; and eax, 0xf000000 ; xchg eax, esp ; ret 0xc8b
0x000000000041a520 : stc ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x0000000000419be0 : stc ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x00000000004199eb : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041d519 : sub edi, edi ; call qword ptr [rdi]
0x000000000041ad2d : sub esp, 8 ; add rsp, 8 ; ret
0x000000000041ad2c : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000041c9d9 : test al, -1 ; call rsp
0x000000000041ccf1 : test bh, dh ; jmp rsi
0x000000000041acfa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000409ffb : test dword ptr [rip - 0x17000000], eax ; ret
0x00000000004147c8 : test dword ptr [rip - 0x17000000], eax ; ret 0
0x000000000040d9cf : test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x000000000040c1e1 : test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x0000000000418ba8 : test dword ptr [rip - 0x17000000], eax ; ret 0xb
0x000000000040d2cc : test dword ptr [rip - 0x17000000], eax ; ret 1
0x0000000000409117 : test dword ptr [rip - 0x17000000], eax ; ret 2
0x0000000000412793 : test eax, 0x48fffffc ; add esp, 0x10 ; pop rbp ; ret
0x0000000000409513 : xchg eax, ebp ; ret
0x000000000040f21c : xchg eax, ebp ; ret 0x348b
0x00000000004182a4 : xchg eax, ebp ; ret 0x8041
0x0000000000409c01 : xchg eax, ebp ; ret 0x8445
0x0000000000412172 : xchg eax, ebp ; ret 0x8b44
0x0000000000415f39 : xchg eax, ebp ; ret 0xc8b
0x00000000004083f7 : xchg eax, edi ; ret
0x00000000004087cb : xchg eax, edx ; ret 0x48b
0x000000000040c2c7 : xchg eax, esi ; ret 0x348b
0x0000000000404902 : xchg eax, esp ; ret
0x0000000000408eb6 : xchg eax, esp ; ret 0x348b
0x00000000004048db : xchg eax, esp ; ret 0x48b
0x0000000000402658 : xchg eax, esp ; ret 0x8141
0x0000000000402221 : xchg eax, esp ; ret 0xa3d
0x0000000000402ed6 : xchg eax, esp ; ret 0xc8b
0x00000000004109ab : xchg eax, esp ; ret 0xd284
0x00000000004163e2 : xchg eax, esp ; ret 0xfe81
0x00000000004078f1 : xchg eax, esp ; rol dword ptr [rax - 0x49f0fe1f], -0x3f ; pop rbp ; ret
0x0000000000409091 : xchg edi, edi ; dec dword ptr [rax - 0x75] ; push rbp ; ror byte ptr [rax + 1], 1 ; ret 0x8148
0x0000000000412d1b : xor al, 0x25 ; push rsi ; ret
0x0000000000410ea5 : xor al, 0x25 ; ret 0x41
0x00000000004089a4 : xor al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000412d15 : xor bl, al ; add byte ptr [r8 - 0x73], cl ; xor al, 0x25 ; push rsi ; ret
0x0000000000410587 : xor byte ptr [rax - 0x75], cl ; add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x0000000000410629 : xor byte ptr [rax - 0x75], cl ; add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x00000000004141c8 : xor ecx, ebp ; ret
0x000000000040b166 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
