0x000000000040a4bd : adc al, 0x25 ; mov word ptr [rcx], fs ; add byte ptr [rcx - 0x77], al ; ret
0x0000000000410ee3 : add al, ah ; fdivp st(7) ; jmp rax
0x000000000041154f : add al, ah ; test edi, edi ; call qword ptr [rdi]
0x00000000004017f8 : add al, ch ; ret 0xfffb
0x0000000000410c6b : add al, dl ; or al, 0xffffffffffffffff ; jmp rax
0x000000000040fe1f : add bl, dh ; ret
0x000000000040ec4b : add byte ptr [r8], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x000000000040b2c0 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000040c802 : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000403c1a : add byte ptr [rax - 0x77], cl ; or al, 0xffffffffffffffd6 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000402a35 : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000040fe1d : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040c9b8 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000402a33 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000040fe1b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040fcb9 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x000000000040fe1c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004043c5 : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x8141
0x0000000000409448 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000403241 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7478b], cl ; ret 0xb0
0x00000000004033a4 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b75b8b], cl ; ret 0xb0
0x0000000000401a2d : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret
0x00000000004026a9 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x844
0x00000000004017a5 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x000000000040a4ca : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x0000000000404f3a : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x125
0x000000000040d3bf : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x00000000004043d7 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000401a22 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x00000000004093e8 : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x51], al ; ret
0x000000000040eb80 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000040ec4c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x00000000004043e2 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret
0x0000000000409df6 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x000000000040f642 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x000000000040ed02 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x000000000040d42c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret
0x000000000040172b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x125
0x0000000000401770 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x000000000040b98e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x000000000040d746 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x000000000040b0c1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x00000000004097c0 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004029be : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x0000000000405ea1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x0000000000401e23 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x0000000000402341 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x000000000040a3e7 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000403ead : add byte ptr [rax], al ; add cl, ch ; ret
0x00000000004026c2 : add byte ptr [rax], al ; add cl, ch ; ret 0
0x0000000000407411 : add byte ptr [rax], al ; add cl, ch ; ret 0x13
0x0000000000405c23 : add byte ptr [rax], al ; add cl, ch ; ret 0x2a
0x000000000040dcca : add byte ptr [rax], al ; add cl, ch ; ret 0xb
0x0000000000406d0e : add byte ptr [rax], al ; add cl, ch ; ret 1
0x0000000000403e1f : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404edf : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040127b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000411a86 : add byte ptr [rax], al ; call 0xffffffffd1411a66
0x0000000000410cea : add byte ptr [rax], al ; cmp dil, dil ; jmp rax
0x0000000000411a82 : add byte ptr [rax], al ; in al, 0xa ; add byte ptr [rax], al ; call 0xffffffffd1411a6a
0x00000000004013f9 : add byte ptr [rax], al ; jmp 0x401299
0x00000000004026be : add byte ptr [rax], al ; jmp 0x4026cd
0x0000000000404d12 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000040fcbb : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000404982 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040c9b9 : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000411142 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rax], ch ; sub edi, edi ; call qword ptr [rsi]
0x0000000000410ef2 : add byte ptr [rax], al ; nop ; loope 0x410efb ; jmp qword ptr [rax]
0x000000000041183e : add byte ptr [rax], al ; nop ; test al, -1 ; call rcx
0x0000000000402869 : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000409449 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040e855 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000408671 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000410cba : add byte ptr [rax], al ; push rax ; xor bh, bh ; jmp qword ptr [rax]
0x000000000040fe1e : add byte ptr [rax], al ; ret
0x0000000000410c6a : add byte ptr [rax], al ; ror byte ptr [rdi + rdi*8], 1 ; jmp rax
0x0000000000411147 : add byte ptr [rax], ch ; sub edi, edi ; call qword ptr [rsi]
0x0000000000411bc7 : add byte ptr [rax], cl ; loope 0x411bce ; call rsp
0x00000000004043c7 : add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x8141
0x00000000004043bd : add byte ptr [rbp - 0x77], al ; ret 0x8141
0x000000000040944a : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040e856 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000408672 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000403243 : add byte ptr [rbx - 0x76b7478b], cl ; ret 0xb0
0x00000000004033a6 : add byte ptr [rbx - 0x76b75b8b], cl ; ret 0xb0
0x00000000004097cc : add byte ptr [rcx + 0xf], al ; pushfq ; mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x0000000000401a2f : add byte ptr [rcx + 0xf], al ; pushfq ; ret
0x00000000004026ab : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x844
0x00000000004017a7 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x000000000040a4cc : add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x0000000000404f3c : add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x125
0x000000000040d3c1 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x00000000004043d9 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000401a24 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x00000000004097bc : add byte ptr [rcx + 0xfe], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000409ff8 : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000405e9d : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x0000000000401e1f : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x000000000040a4c2 : add byte ptr [rcx - 0x77], al ; ret
0x0000000000404f32 : add byte ptr [rcx - 0x77], al ; ret 0x8141
0x00000000004016d8 : add byte ptr [rcx], al ; ret
0x00000000004093ea : add byte ptr [rdi + rcx - 0x51], al ; ret
0x000000000040eb82 : add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000040ec4e : add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x00000000004043e4 : add byte ptr [rdi], cl ; pushfq ; ret
0x0000000000409df8 : add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x000000000040f644 : add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x000000000040ed04 : add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x000000000040d42e : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret
0x000000000040172d : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x125
0x0000000000401772 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x000000000040b990 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x000000000040d748 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x000000000040b0c3 : add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x00000000004097c2 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004029c0 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x0000000000405ea3 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x0000000000401e25 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x0000000000402343 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x000000000040a3e9 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000410ef0 : add byte ptr [rsi], cl ; add byte ptr [rax], al ; nop ; loope 0x410efd ; jmp qword ptr [rax]
0x0000000000403eaf : add cl, ch ; ret
0x00000000004026c4 : add cl, ch ; ret 0
0x0000000000407413 : add cl, ch ; ret 0x13
0x0000000000405c25 : add cl, ch ; ret 0x2a
0x000000000040dccc : add cl, ch ; ret 0xb
0x0000000000406d10 : add cl, ch ; ret 1
0x0000000000409fca : add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x000000000040a06c : add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x0000000000411145 : add dword ptr [rax], eax ; add byte ptr [rax], ch ; sub edi, edi ; call qword ptr [rsi]
0x000000000040e854 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000408670 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040ed65 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000040eb0d : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000403ea9 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret
0x000000000040740d : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x0000000000405c1f : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x000000000040dcc6 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0xb
0x0000000000406d0a : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 1
0x00000000004016d4 : add eax, 0x210bfe ; add ebx, esi ; ret
0x0000000000403eac : add eax, 0xe9000000 ; ret
0x0000000000407410 : add eax, 0xe9000000 ; ret 0x13
0x0000000000405c22 : add eax, 0xe9000000 ; ret 0x2a
0x000000000040dcc9 : add eax, 0xe9000000 ; ret 0xb
0x0000000000406d0d : add eax, 0xe9000000 ; ret 1
0x0000000000410c69 : add eax, dword ptr [rax] ; add al, dl ; or al, 0xffffffffffffffff ; jmp rax
0x00000000004053db : add eax, dword ptr [rcx] ; jmp rcx
0x000000000040169b : add eax, edx ; sar rax, 1 ; jne 0x4016ac ; pop rbp ; ret
0x00000000004016d9 : add ebx, esi ; ret
0x000000000040190b : add esp, 0x10 ; pop rbp ; ret
0x000000000040866d : add esp, 0x178 ; pop rbx ; pop rbp ; ret
0x000000000040b4ac : add esp, 0x1a0 ; pop rbp ; ret
0x000000000040392a : add esp, 0x20 ; pop rbp ; ret
0x0000000000401ab8 : add esp, 0x30 ; pop rbp ; ret
0x0000000000404801 : add esp, 0x40 ; pop rbp ; ret
0x000000000040afef : add esp, 0x40 ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004096dc : add esp, 0x50 ; pop rbp ; ret
0x0000000000403464 : add esp, 0x70 ; pop rbp ; ret
0x0000000000408a8e : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000402865 : add esp, 0x80 ; pop rbp ; ret
0x000000000040b30c : add esp, 0xb0 ; pop rbp ; ret
0x000000000040127e : add esp, 8 ; ret
0x000000000040169a : add rax, rdx ; sar rax, 1 ; jne 0x4016ad ; pop rbp ; ret
0x000000000040190a : add rsp, 0x10 ; pop rbp ; ret
0x000000000040866c : add rsp, 0x178 ; pop rbx ; pop rbp ; ret
0x000000000040b4ab : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000403929 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000401ab7 : add rsp, 0x30 ; pop rbp ; ret
0x0000000000404800 : add rsp, 0x40 ; pop rbp ; ret
0x000000000040afee : add rsp, 0x40 ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004096db : add rsp, 0x50 ; pop rbp ; ret
0x0000000000403463 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000408a8d : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000402864 : add rsp, 0x80 ; pop rbp ; ret
0x000000000040b30b : add rsp, 0xb0 ; pop rbp ; ret
0x000000000040127d : add rsp, 8 ; ret
0x00000000004047fd : and ah, byte ptr [rcx] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000401674 : and ah, byte ptr [rcx] ; jmp rax
0x00000000004016b4 : and ah, byte ptr [rcx] ; jmp rdx
0x00000000004043bb : and al, 0x61 ; add byte ptr [rbp - 0x77], al ; ret 0x8141
0x000000000040a4c0 : and al, 0x61 ; add byte ptr [rcx - 0x77], al ; ret
0x0000000000404f30 : and al, 0x61 ; add byte ptr [rcx - 0x77], al ; ret 0x8141
0x000000000040ed64 : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040eb0c : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040ca5a : and byte ptr [r15], cl ; xchg eax, esp ; ret 0x348b
0x000000000040ca5b : and byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x00000000004016d7 : and dword ptr [rax], eax ; add ebx, esi ; ret
0x000000000040a0f7 : and eax, 0x48ffffee ; add esp, 0x20 ; pop rbp ; ret
0x0000000000403c7f : and eax, 0x612320 ; pop rbp ; ret
0x0000000000403ca3 : and eax, 0x612328 ; pop rbp ; ret
0x0000000000403c81 : and esp, dword ptr [rcx] ; pop rbp ; ret
0x000000000040185e : call 0x401489
0x0000000000411a88 : call 0xffffffffd1411a64
0x0000000000408909 : call 0xffffffffe9031259
0x0000000000408908 : call 0xffffffffe903125a
0x000000000040fdf9 : call qword ptr [r12 + rbx*8]
0x0000000000410df7 : call qword ptr [rax]
0x0000000000411553 : call qword ptr [rdi]
0x000000000041114b : call qword ptr [rsi]
0x000000000040fdfa : call qword ptr [rsp + rbx*8]
0x00000000004016fd : call rax
0x000000000041128b : call rbx
0x0000000000411843 : call rcx
0x0000000000411763 : call rsp
0x000000000040d904 : clc ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040169f : clc ; jne 0x4016a8 ; pop rbp ; ret
0x0000000000404448 : clc ; pop rbx ; pop rbp ; ret
0x0000000000401937 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040fd96 : cld ; mov dword ptr [rbp - 0xc], eax ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x000000000040f9a6 : cli ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401865 : cmp al, 0x25 ; ret 0x40ff
0x000000000040cde9 : cmp al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000410ced : cmp bh, bh ; jmp rax
0x000000000040ee2e : cmp byte ptr [rax], ah ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x000000000040176e : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x000000000040eb7e : cmp byte ptr [rax], dh ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000040f26e : cmp byte ptr [rcx], ah ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x0000000000410cec : cmp dil, dil ; jmp rax
0x000000000040b98c : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x0000000000408d9d : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040165d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401670 ; pop rbp ; ret
0x0000000000403a40 : dec byte ptr [r15] ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x00000000004016d5 : dec byte ptr [rbx] ; and dword ptr [rax], eax ; add ebx, esi ; ret
0x0000000000403a41 : dec byte ptr [rdi] ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000408b52 : dec byte ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x000000000040502f : dec byte ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret
0x0000000000404444 : dec dword ptr [rax - 0x73] ; clc ; pop rbx ; pop rbp ; ret
0x0000000000401862 : dec dword ptr [rax - 0x73] ; cmp al, 0x25 ; ret 0x40ff
0x0000000000405eef : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; enter 0x4103, 0 ; jmp rcx
0x000000000040a6d6 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040e5c4 : dec dword ptr [rax - 0x7f] ; ret 1
0x00000000004017a3 : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x00000000004089bb : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000040a48a : enter -0x7cb8, -0x3c ; pop rbp ; ret
0x0000000000405ef4 : enter 0x4103, 0 ; jmp rcx
0x00000000004047fc : enter 0x6122, 0 ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000410ee5 : fdivp st(7) ; jmp rax
0x00000000004046c2 : fiadd dword ptr [rcx - 0xa] ; ret 0x4001
0x0000000000403b0e : fiadd dword ptr [rcx - 0xa] ; ret 0x4801
0x0000000000401a36 : fiadd dword ptr [rcx - 0xa] ; ret 0x8801
0x000000000040a747 : fiadd dword ptr [rcx - 0xa] ; ret 0x8901
0x0000000000403bdd : fiadd dword ptr [rcx - 0xa] ; ret 0xf01
0x00000000004043ea : fild dword ptr [rcx - 0xa] ; ret
0x0000000000407028 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040fdfc : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000401909 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040fd99 : hlt ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000401670 : hlt ; pop rbp ; mov edi, 0x612268 ; jmp rax
0x000000000040fcbf : hlt ; pop rbp ; ret
0x0000000000411a84 : in al, 0xa ; add byte ptr [rax], al ; call 0xffffffffd1411a68
0x0000000000403a47 : in al, dx ; pop rbp ; ret
0x000000000040c068 : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x00000000004097be : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000408ea3 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000403af8 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x0000000000409ffa : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000405e9f : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x0000000000401e21 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x000000000040ec48 : inc dword ptr [rcx + 0x41f9] ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x000000000040f63e : inc dword ptr [rcx + 0x5af9] ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x000000000040ecfe : inc dword ptr [rcx + 0x5af9] ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x0000000000410c67 : inc eax ; add eax, dword ptr [rax] ; add al, dl ; or al, 0xffffffffffffffff ; jmp rax
0x000000000040b2c8 : int 0x80
0x0000000000401663 : ja 0x40166a ; pop rbp ; ret
0x000000000040166f : je 0x40166d ; pop rbp ; mov edi, 0x612268 ; jmp rax
0x00000000004013fb : jmp 0x401297
0x00000000004026c0 : jmp 0x4026cb
0x0000000000403473 : jmp 0x402d53
0x0000000000410c7f : jmp qword ptr [rax]
0x0000000000401677 : jmp rax
0x00000000004053de : jmp rcx
0x00000000004016b7 : jmp rdx
0x00000000004016a0 : jne 0x4016a7 ; pop rbp ; ret
0x0000000000403466 : jo 0x4034c7 ; ret
0x0000000000409a04 : jo 0x409a65 ; ret
0x000000000040866f : js 0x408678 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000408a90 : js 0x408af0 ; pop rbp ; ret
0x00000000004098a5 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004042b3 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000404446 : lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x00000000004098a4 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000404445 : lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000410ef5 : loope 0x410ef8 ; jmp qword ptr [rax]
0x0000000000411bc9 : loope 0x411bcc ; call rsp
0x0000000000403928 : loopne 0x403978 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000403927 : loopne 0x403979 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000408ecf : loopne 0x408f20 ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000408ece : loopne 0x408f21 ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040c195 : loopne 0x40c1e5 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040c194 : loopne 0x40c1e6 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040b30e : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040eb09 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040f9a4 : mov al, byte ptr [rbp - 6] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000403ca1 : mov byte ptr [0x612328], al ; pop rbp ; ret
0x00000000004097d0 : mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x0000000000403ea8 : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret
0x000000000040740c : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x0000000000405c1e : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x0000000000408bf6 : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 1
0x00000000004016d3 : mov byte ptr [rip + 0x210bfe], 1 ; ret
0x0000000000403a43 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000040eb0f : mov dh, -0x40 ; pop rbp ; ret
0x0000000000403c7d : mov dword ptr [0x612320], edi ; pop rbp ; ret
0x0000000000404a5a : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000404ba8 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000401ab4 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401907 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040fd97 : mov dword ptr [rbp - 0xc], eax ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000401935 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403c1c : mov dword ptr [rsi + rdx*8], ecx ; mov rsp, rbp ; pop rbp ; ret
0x0000000000408a8c : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x000000000040bbd5 : mov eax, 0xf0658d48 ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040c801 : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000404988 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040b701 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404184 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040c7fe : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000404985 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040963a : mov eax, dword ptr [rbp - 0x10] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000404073 : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000404d14 : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000040b60f : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040493d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404a54 : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000409c04 : mov eax, dword ptr [rbp - 0x18] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000403926 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000408ecd : mov eax, dword ptr [rbp - 0x20] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040c618 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404baa : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040cceb : mov eax, dword ptr [rbp - 0x30] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040a488 : mov eax, dword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000408a8a : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040fcbd : mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x000000000040d902 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004016fb : mov ebp, esp ; call rax
0x0000000000401661 : mov ebp, esp ; ja 0x40166c ; pop rbp ; ret
0x00000000004053d7 : mov ecx, dword ptr [rax*8 + 0x410380] ; jmp rcx
0x0000000000405ef1 : mov ecx, dword ptr [rax*8 + 0x4103c8] ; jmp rcx
0x000000000040a792 : mov ecx, dword ptr [rax*8 + 0x410888] ; jmp rcx
0x0000000000404a57 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004016f5 : mov edi, 0x611e20 ; mov rbp, rsp ; call rax
0x0000000000401672 : mov edi, 0x612268 ; jmp rax
0x00000000004016b2 : mov edi, 0x612268 ; jmp rdx
0x000000000040fdf7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000040fdf6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x00000000004016b0 : mov esi, eax ; mov edi, 0x612268 ; jmp rdx
0x0000000000403a46 : mov esp, ebp ; pop rbp ; ret
0x0000000000403c7c : mov qword ptr [0x612320], rdi ; pop rbp ; ret
0x0000000000403c1b : mov qword ptr [rsi + rdx*8], rcx ; mov rsp, rbp ; pop rbp ; ret
0x0000000000408a8b : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x000000000040b700 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404183 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404984 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000409639 : mov rax, qword ptr [rbp - 0x10] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000404072 : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040b60e : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040493c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000409c03 : mov rax, qword ptr [rbp - 0x18] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000403925 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040a487 : mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040d901 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004016fa : mov rbp, rsp ; call rax
0x0000000000401660 : mov rbp, rsp ; ja 0x40166d ; pop rbp ; ret
0x00000000004053d6 : mov rcx, qword ptr [rax*8 + 0x410380] ; jmp rcx
0x0000000000405ef0 : mov rcx, qword ptr [rax*8 + 0x4103c8] ; jmp rcx
0x000000000040a791 : mov rcx, qword ptr [rax*8 + 0x410888] ; jmp rcx
0x00000000004016af : mov rsi, rax ; mov edi, 0x612268 ; jmp rdx
0x0000000000403a45 : mov rsp, rbp ; pop rbp ; ret
0x00000000004043ba : mov word ptr [rcx], fs ; add byte ptr [rbp - 0x77], al ; ret 0x8141
0x000000000040a4bf : mov word ptr [rcx], fs ; add byte ptr [rcx - 0x77], al ; ret
0x0000000000404f2f : mov word ptr [rcx], fs ; add byte ptr [rcx - 0x77], al ; ret 0x8141
0x0000000000411144 : movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rax], ch ; sub edi, edi ; call qword ptr [rsi]
0x0000000000403a42 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040eb0e : movzx eax, al ; pop rbp ; ret
0x0000000000410ef4 : nop ; loope 0x410ef9 ; jmp qword ptr [rax]
0x0000000000411840 : nop ; test al, -1 ; call rcx
0x000000000040fe18 : nop dword ptr [rax + rax] ; ret
0x0000000000411bc5 : or al, 0 ; add byte ptr [rax], cl ; loope 0x411bd0 ; call rsp
0x00000000004043b8 : or al, 0x25 ; mov word ptr [rcx], fs ; add byte ptr [rbp - 0x77], al ; ret 0x8141
0x0000000000404f2d : or al, 0x25 ; mov word ptr [rcx], fs ; add byte ptr [rcx - 0x77], al ; ret 0x8141
0x0000000000405ef2 : or al, 0xffffffffffffffc5 ; enter 0x4103, 0 ; jmp rcx
0x0000000000403c1d : or al, 0xffffffffffffffd6 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000410c6d : or al, 0xffffffffffffffff ; jmp rax
0x0000000000408c59 : or byte ptr [r15], cl ; xchg eax, ebp ; ret 0x348b
0x0000000000407023 : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000407024 : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040ee2c : or byte ptr [rcx + 0x2038], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x000000000040f26c : or byte ptr [rcx + 0x2138], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000040b0bd : or byte ptr [rcx + 0x28f9], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x000000000040233d : or byte ptr [rcx + 0x2cf9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x000000000040eb7c : or byte ptr [rcx + 0x3038], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000040176c : or byte ptr [rcx + 0x38], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x000000000040f16c : or byte ptr [rcx + 0x6138], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000040d742 : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x000000000040a796 : or byte ptr [rcx], al ; jmp rcx
0x0000000000408c5a : or byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x0000000000409fcd : or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x000000000040a06f : or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x000000000040be5f : or eax, 0x48fffff9 ; add esp, 0x30 ; pop rbp ; ret
0x0000000000404edd : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004016d6 : or esp, dword ptr [rcx] ; add byte ptr [rcx], al ; ret
0x0000000000410f25 : out -1, eax ; jmp rax
0x0000000000405214 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040fe0c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405216 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040fe0e : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004042b7 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040fe10 : pop r14 ; pop r15 ; ret
0x00000000004098a9 : pop r14 ; pop rbp ; ret
0x00000000004042b9 : pop r15 ; pop rbp ; ret
0x000000000040fe12 : pop r15 ; ret
0x00000000004016d2 : pop rbp ; mov byte ptr [rip + 0x210bfe], 1 ; ret
0x0000000000401671 : pop rbp ; mov edi, 0x612268 ; jmp rax
0x00000000004016ae : pop rbp ; mov rsi, rax ; mov edi, 0x612268 ; jmp rdx
0x000000000040fe0b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405217 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040fe0f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401665 : pop rbp ; ret
0x00000000004042b6 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004098a8 : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000404449 : pop rbx ; pop rbp ; ret
0x00000000004042ba : pop rdi ; pop rbp ; ret
0x000000000040fe13 : pop rdi ; ret
0x000000000040f641 : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x000000000040ed01 : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x00000000004042b8 : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040fe11 : pop rsi ; pop r15 ; ret
0x00000000004098aa : pop rsi ; pop rbp ; ret
0x0000000000405215 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040fe0d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040eb84 : popfq ; ret 0x348b
0x000000000040ec50 : popfq ; ret 0xc8b
0x000000000040e853 : push rax ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x00000000004096de : push rax ; pop rbp ; ret
0x0000000000410cbc : push rax ; xor bh, bh ; jmp qword ptr [rax]
0x0000000000407027 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x00000000004016f4 : push rbp ; mov edi, 0x611e20 ; mov rbp, rsp ; call rax
0x00000000004089be : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x00000000004097cf : pushfq ; mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x0000000000401a32 : pushfq ; ret
0x00000000004026ae : pushfq ; ret 0x844
0x00000000004017aa : pushfq ; ret 0x845
0x0000000000409dfa : pushfq ; ret 0xd108
0x0000000000401281 : ret
0x00000000004026c6 : ret 0
0x0000000000400284 : ret 0x124
0x0000000000401730 : ret 0x125
0x0000000000407415 : ret 0x13
0x0000000000401602 : ret 0x210b
0x0000000000401402 : ret 0x210c
0x0000000000405c27 : ret 0x2a
0x0000000000401775 : ret 0x348b
0x00000000004046c5 : ret 0x4001
0x0000000000401867 : ret 0x40ff
0x0000000000403b11 : ret 0x4801
0x000000000040421c : ret 0x48f0
0x0000000000409d47 : ret 0x4cc0
0x0000000000404fca : ret 0x4cf0
0x000000000040f647 : ret 0x5588
0x0000000000409fd0 : ret 0x7ae8
0x000000000040d3c5 : ret 0x8041
0x0000000000401a28 : ret 0x8141
0x00000000004026af : ret 0x844
0x00000000004017ab : ret 0x845
0x0000000000401a39 : ret 0x8801
0x0000000000405eb6 : ret 0x8901
0x000000000040bd15 : ret 0x8948
0x000000000040739c : ret 0x89a5
0x000000000040b993 : ret 0x8b44
0x000000000040702b : ret 0x8b48
0x0000000000401e28 : ret 0xa3d
0x000000000040dcce : ret 0xb
0x0000000000402a38 : ret 0xb0
0x0000000000401695 : ret 0xc148
0x0000000000402346 : ret 0xc8b
0x0000000000409dfb : ret 0xd108
0x000000000040a3ec : ret 0xd284
0x000000000040a072 : ret 0xd8e8
0x0000000000401727 : ret 0xea81
0x0000000000407040 : ret 0xeae8
0x000000000040890c : ret 0xee8
0x0000000000401e36 : ret 0xf01
0x0000000000403479 : ret 0xfff9
0x00000000004017fa : ret 0xfffb
0x0000000000406d12 : ret 1
0x00000000004089c2 : ret 8
0x0000000000410c68 : rol byte ptr [rbx], 0 ; add al, dl ; or al, 0xffffffffffffffff ; jmp rax
0x0000000000410ce8 : rol byte ptr [rip + 0x38400000], -1 ; jmp rax
0x000000000040b2c3 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000040169c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4016ab ; pop rbp ; ret
0x0000000000403a44 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x000000000040b2c4 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x00000000004089bf : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000410c6c : ror byte ptr [rdi + rdi*8], 1 ; jmp rax
0x0000000000410ee0 : ror byte ptr [rip - 0x21200000], -1 ; jmp rax
0x000000000040f646 : sahf ; ret 0x5588
0x000000000040ed06 : sahf ; ret 0xc8b
0x0000000000405eb4 : sal dh, cl ; ret 0x8901
0x0000000000403c1e : salc ; mov rsp, rbp ; pop rbp ; ret
0x000000000040169e : sar eax, 1 ; jne 0x4016a9 ; pop rbp ; ret
0x000000000040169d : sar rax, 1 ; jne 0x4016aa ; pop rbp ; ret
0x0000000000405150 : sbb cl, byte ptr [rcx - 0x7f] ; ret
0x000000000040c9b7 : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004093ed : scasd eax, dword ptr [rdi] ; ret
0x000000000040172f : scasd eax, dword ptr [rdi] ; ret 0x125
0x00000000004043ca : scasd eax, dword ptr [rdi] ; ret 0x8141
0x000000000040ec4a : stc ; add byte ptr [r8], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x000000000040f640 : stc ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x000000000040ed00 : stc ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x000000000040eb0b : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000411149 : sub edi, edi ; call qword ptr [rsi]
0x000000000040fe4d : sub esp, 8 ; add rsp, 8 ; ret
0x000000000040fe4c : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000411841 : test al, -1 ; call rcx
0x000000000040fe1a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000403eab : test dword ptr [rip - 0x17000000], eax ; ret
0x000000000040740f : test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x0000000000405c21 : test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x000000000040dcc8 : test dword ptr [rip - 0x17000000], eax ; ret 0xb
0x0000000000406d0c : test dword ptr [rip - 0x17000000], eax ; ret 1
0x000000000040bfb3 : test eax, 0x48fffffc ; add esp, 0x10 ; pop rbp ; ret
0x0000000000411551 : test edi, edi ; call qword ptr [rdi]
0x0000000000401774 : xchg eax, ebp ; ret 0x348b
0x000000000040d3c4 : xchg eax, ebp ; ret 0x8041
0x000000000040b992 : xchg eax, ebp ; ret 0x8b44
0x000000000040d74a : xchg eax, ebp ; ret 0xc8b
0x0000000000405d07 : xchg eax, esi ; ret 0x348b
0x00000000004043dc : xchg eax, esp ; ret
0x00000000004029c2 : xchg eax, esp ; ret 0x348b
0x0000000000401a27 : xchg eax, esp ; ret 0x8141
0x0000000000401e27 : xchg eax, esp ; ret 0xa3d
0x0000000000402345 : xchg eax, esp ; ret 0xc8b
0x000000000040a3eb : xchg eax, esp ; ret 0xd284
0x0000000000410cbd : xor bh, bh ; jmp qword ptr [rax]
0x0000000000409fc7 : xor byte ptr [rax - 0x75], cl ; add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x000000000040a069 : xor byte ptr [rax - 0x75], cl ; add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x0000000000404ba6 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
