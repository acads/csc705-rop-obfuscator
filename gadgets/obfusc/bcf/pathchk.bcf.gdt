0x00000000004040de : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x20] ; pop rbp ; ret
0x0000000000411333 : add ah, ch ; add dword ptr [rax], eax ; add al, ch ; xor edi, edi ; call qword ptr [rax]
0x0000000000410e79 : add al, 0 ; add al, al ; xor al, 0xffffffffffffffff ; call qword ptr [rax]
0x0000000000410e69 : add al, 0 ; add byte ptr [rax], ah ; xor edi, edi ; call rax
0x0000000000410e7b : add al, al ; xor al, 0xffffffffffffffff ; call qword ptr [rax]
0x00000000004032b7 : add al, ch ; ret
0x0000000000411337 : add al, ch ; xor edi, edi ; call qword ptr [rax]
0x00000000004110b3 : add al, dl ; in eax, -1 ; call qword ptr [rax]
0x000000000040ffdf : add bl, dh ; ret
0x000000000040ee0b : add byte ptr [r8], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x00000000004040e1 : add byte ptr [rax - 0x75], cl ; loopne 0x40414a ; ret
0x000000000040b470 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000040e6e2 : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000410e6b : add byte ptr [rax], ah ; xor edi, edi ; call rax
0x000000000040ffdd : add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004040df : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; loopne 0x40414c ; ret
0x000000000040e898 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000040ffdb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040fe79 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x000000000040ffdc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000041069c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x406c
0x00000000004037d2 : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x8141
0x00000000004095f8 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000402409 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret
0x000000000040605b : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x844
0x0000000000401685 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x000000000040a67a : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x00000000004050ea : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x125
0x000000000040cbdf : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x00000000004037e4 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x00000000004023fe : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x0000000000410eba : add byte ptr [rax], al ; add byte ptr [rcx - 1], al ; call qword ptr [rax]
0x0000000000409598 : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x51], al ; ret
0x000000000040ed40 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000040ee0c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x00000000004037ef : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret
0x0000000000402186 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x000000000040f802 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x000000000040eec2 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x0000000000402bfe : add byte ptr [rax], al ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret
0x000000000040160b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x125
0x0000000000401650 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x000000000040bb3e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x000000000040cf66 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x000000000040b271 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x0000000000409970 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040eff0 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x0000000000406051 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x0000000000401c7a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x000000000040a597 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000401e59 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf981
0x0000000000404022 : add byte ptr [rax], al ; add cl, ch ; ret
0x00000000004075c1 : add byte ptr [rax], al ; add cl, ch ; ret 0x13
0x0000000000405dd3 : add byte ptr [rax], al ; add cl, ch ; ret 0x2a
0x000000000040d4ea : add byte ptr [rax], al ; add cl, ch ; ret 0xb
0x0000000000406ebe : add byte ptr [rax], al ; add cl, ch ; ret 1
0x00000000004042af : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040508f : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040117b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000411d8e : add byte ptr [rax], al ; and dl, 0xff ; call qword ptr [rax]
0x0000000000411336 : add byte ptr [rax], al ; call 0x11411273
0x0000000000411cf6 : add byte ptr [rax], al ; cwde ; loope 0x411cff ; call rsp
0x00000000004110a3 : add byte ptr [rax], al ; in al, -1 ; call rax
0x0000000000411332 : add byte ptr [rax], al ; in al, dx ; add dword ptr [rax], eax ; add al, ch ; xor edi, edi ; call qword ptr [rax]
0x00000000004012f9 : add byte ptr [rax], al ; jmp 0x401199
0x0000000000404ec2 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000040fe7b : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000404b32 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000403e94 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004040e0 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x20] ; pop rbp ; ret
0x000000000040e899 : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040b4c0 : add byte ptr [rax], al ; pop rbp ; ret
0x00000000004095f9 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040e075 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000408821 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000411072 : add byte ptr [rax], al ; rcr dl, -1 ; call qword ptr [rax]
0x000000000040ffde : add byte ptr [rax], al ; ret
0x000000000041069e : add byte ptr [rax], al ; ret 0x406c
0x00000000004037d4 : add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x8141
0x00000000004037ca : add byte ptr [rbp - 0x77], al ; ret 0x8141
0x00000000004095fa : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040e076 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000408822 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040997c : add byte ptr [rcx + 0xf], al ; pushfq ; mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x000000000040240b : add byte ptr [rcx + 0xf], al ; pushfq ; ret
0x000000000040605d : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x844
0x0000000000401687 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x000000000040a67c : add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x00000000004050ec : add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x125
0x000000000040cbe1 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x00000000004037e6 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000402400 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x000000000040996c : add byte ptr [rcx + 0xfe], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040a1a8 : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040604d : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x0000000000401c76 : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x000000000040a672 : add byte ptr [rcx - 0x77], al ; ret
0x00000000004050e2 : add byte ptr [rcx - 0x77], al ; ret 0x8141
0x0000000000410ebc : add byte ptr [rcx - 1], al ; call qword ptr [rax]
0x00000000004015b8 : add byte ptr [rcx], al ; ret
0x000000000040959a : add byte ptr [rdi + rcx - 0x51], al ; ret
0x000000000040ed42 : add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000040ee0e : add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x00000000004037f1 : add byte ptr [rdi], cl ; pushfq ; ret
0x0000000000402188 : add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x000000000040f804 : add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x000000000040eec4 : add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x0000000000402c00 : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret
0x000000000040160d : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x125
0x0000000000401652 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x000000000040bb40 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x000000000040cf68 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x000000000040b273 : add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x0000000000409972 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040eff2 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x0000000000406053 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x0000000000401c7c : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x000000000040a599 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000401e5b : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf981
0x0000000000404024 : add cl, ch ; ret
0x00000000004075c3 : add cl, ch ; ret 0x13
0x0000000000405dd5 : add cl, ch ; ret 0x2a
0x000000000040d4ec : add cl, ch ; ret 0xb
0x0000000000406ec0 : add cl, ch ; ret 1
0x000000000040a17a : add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x000000000040a21c : add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x0000000000411335 : add dword ptr [rax], eax ; add al, ch ; xor edi, edi ; call qword ptr [rax]
0x000000000040e074 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000408820 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000401d91 : add dword ptr [rdi + rcx - 0x4a], eax ; ret 0x8840
0x0000000000403d40 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040ef25 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000040eccd : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000404339 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret
0x00000000004075bd : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x0000000000405dcf : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x000000000040d4e6 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0xb
0x0000000000406eba : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 1
0x00000000004015b4 : add eax, 0x210cbe ; add ebx, esi ; ret
0x0000000000404021 : add eax, 0xe9000000 ; ret
0x00000000004075c0 : add eax, 0xe9000000 ; ret 0x13
0x0000000000405dd2 : add eax, 0xe9000000 ; ret 0x2a
0x000000000040d4e9 : add eax, 0xe9000000 ; ret 0xb
0x0000000000406ebd : add eax, 0xe9000000 ; ret 1
0x000000000040157b : add eax, edx ; sar rax, 1 ; jne 0x40158c ; pop rbp ; ret
0x00000000004015b9 : add ebx, esi ; ret
0x000000000040183b : add esp, 0x10 ; pop rbp ; ret
0x000000000040881d : add esp, 0x178 ; pop rbx ; pop rbp ; ret
0x000000000040b65c : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000404618 : add esp, 0x20 ; pop rbp ; ret
0x000000000040191d : add esp, 0x30 ; pop rbp ; ret
0x00000000004049b1 : add esp, 0x40 ; pop rbp ; ret
0x000000000040b19f : add esp, 0x40 ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040988c : add esp, 0x50 ; pop rbp ; ret
0x0000000000403d45 : add esp, 0x70 ; pop rbp ; ret
0x0000000000408c3e : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040b4bc : add esp, 0xb0 ; pop rbp ; ret
0x000000000040117e : add esp, 8 ; ret
0x000000000040157a : add rax, rdx ; sar rax, 1 ; jne 0x40158d ; pop rbp ; ret
0x000000000040183a : add rsp, 0x10 ; pop rbp ; ret
0x000000000040881c : add rsp, 0x178 ; pop rbx ; pop rbp ; ret
0x000000000040b65b : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000404617 : add rsp, 0x20 ; pop rbp ; ret
0x000000000040191c : add rsp, 0x30 ; pop rbp ; ret
0x00000000004049b0 : add rsp, 0x40 ; pop rbp ; ret
0x000000000040b19e : add rsp, 0x40 ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040988b : add rsp, 0x50 ; pop rbp ; ret
0x0000000000403d44 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000408c3d : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040b4bb : add rsp, 0xb0 ; pop rbp ; ret
0x000000000040117d : add rsp, 8 ; ret
0x00000000004049ad : and ah, byte ptr [rcx] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000401554 : and ah, byte ptr [rcx] ; jmp rax
0x0000000000401594 : and ah, byte ptr [rcx] ; jmp rdx
0x0000000000404111 : and ah, byte ptr [rcx] ; pop rbp ; ret
0x000000000040ef24 : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040eccc : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040e93a : and byte ptr [r15], cl ; xchg eax, esp ; ret 0x348b
0x000000000040e93b : and byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x0000000000411d90 : and dl, 0xff ; call qword ptr [rax]
0x00000000004015b7 : and dword ptr [rax], eax ; add ebx, esi ; ret
0x000000000040a2a7 : and eax, 0x48ffffee ; add esp, 0x20 ; pop rbp ; ret
0x000000000040410f : and eax, 0x612280 ; pop rbp ; ret
0x0000000000404133 : and eax, 0x612288 ; pop rbp ; ret
0x0000000000401553 : and spl, byte ptr [rcx] ; jmp rax
0x0000000000401593 : and spl, byte ptr [rcx] ; jmp rdx
0x0000000000411338 : call 0x11411271
0x000000000040198a : call 0x401269
0x0000000000401971 : call 0x401479
0x000000000040c4f4 : call 0x401486
0x0000000000408ab9 : call 0xffffffffe9031409
0x0000000000408ab8 : call 0xffffffffe903140a
0x000000000040ffb9 : call qword ptr [r12 + rbx*8]
0x0000000000410e7f : call qword ptr [rax]
0x0000000000411683 : call qword ptr [rdi]
0x00000000004112bb : call qword ptr [rsi]
0x000000000040ffba : call qword ptr [rsp + rbx*8]
0x00000000004015dd : call rax
0x00000000004113bb : call rbx
0x0000000000411973 : call rcx
0x0000000000411893 : call rsp
0x000000000040d124 : clc ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040157f : clc ; jne 0x401588 ; pop rbp ; ret
0x0000000000403b23 : clc ; pop rbx ; pop rbp ; ret
0x000000000040ff56 : cld ; mov dword ptr [rbp - 0xc], eax ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x000000000040fb66 : cli ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401978 : cmp al, 0x25 ; ret 0x4101
0x000000000040c609 : cmp al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040efee : cmp byte ptr [rax], ah ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x000000000040164e : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x000000000040ed3e : cmp byte ptr [rax], dh ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000040f42e : cmp byte ptr [rcx], ah ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000040bb3c : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x0000000000408f4d : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040153d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401550 ; pop rbp ; ret
0x0000000000411cf8 : cwde ; loope 0x411cfd ; call rsp
0x0000000000401f76 : dec byte ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x00000000004051df : dec byte ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret
0x0000000000401975 : dec dword ptr [rax - 0x73] ; cmp al, 0x25 ; ret 0x4101
0x000000000040a940 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; or al, byte ptr [rcx] ; jmp rcx
0x000000000040282c : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040dde4 : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000040330f : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret
0x0000000000401683 : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x0000000000402184 : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x0000000000408b6b : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000040a63a : enter -0x7cb8, -0x3c ; pop rbp ; ret
0x0000000000404872 : fiadd dword ptr [rcx - 0xa] ; ret 0x4001
0x0000000000409d9f : fiadd dword ptr [rcx - 0xa] ; ret 0x4801
0x0000000000402412 : fiadd dword ptr [rcx - 0xa] ; ret 0x8801
0x000000000040a8f7 : fiadd dword ptr [rcx - 0xa] ; ret 0x8901
0x00000000004033c1 : fiadd dword ptr [rcx - 0xa] ; ret 0xf01
0x00000000004037f7 : fild dword ptr [rcx - 0xa] ; ret
0x00000000004071d8 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040ffbc : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000401839 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040ff59 : hlt ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000401550 : hlt ; pop rbp ; mov edi, 0x612240 ; jmp rax
0x000000000040fe7f : hlt ; pop rbp ; ret
0x00000000004110a5 : in al, -1 ; call rax
0x0000000000411334 : in al, dx ; add dword ptr [rax], eax ; add al, ch ; xor edi, edi ; call qword ptr [rax]
0x0000000000404ec6 : in al, dx ; pop rbp ; ret
0x00000000004110b5 : in eax, -1 ; call qword ptr [rax]
0x000000000040c218 : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x000000000040996e : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000409053 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x00000000004033ab : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x000000000040a1aa : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040604f : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x0000000000401c78 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x000000000040ee08 : inc dword ptr [rcx + 0x41f9] ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x000000000040f7fe : inc dword ptr [rcx + 0x5af9] ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x000000000040eebe : inc dword ptr [rcx + 0x5af9] ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x000000000040b478 : int 0x80
0x0000000000401543 : ja 0x40154a ; pop rbp ; ret
0x000000000040154f : je 0x40154d ; pop rbp ; mov edi, 0x612240 ; jmp rax
0x00000000004012fb : jmp 0x401197
0x0000000000410f7f : jmp qword ptr [rax]
0x0000000000401557 : jmp rax
0x000000000040558e : jmp rcx
0x0000000000401597 : jmp rdx
0x0000000000401580 : jne 0x401587 ; pop rbp ; ret
0x0000000000403d47 : jo 0x403da8 ; ret
0x0000000000409bb4 : jo 0x409c15 ; ret
0x0000000000411050 : jo 0x411063 ; add byte ptr [rax], al ; ret
0x000000000040881f : js 0x408828 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000408c40 : js 0x408ca0 ; pop rbp ; ret
0x0000000000409a55 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040ce20 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403b21 : lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000409a54 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000403b20 : lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000411d91 : loop 0x411d94 ; call qword ptr [rax]
0x0000000000411cf9 : loope 0x411cfc ; call rsp
0x00000000004040e5 : loopne 0x404146 ; ret
0x00000000004040e4 : loopne 0x404147 ; ret
0x000000000040907f : loopne 0x4090d0 ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040907e : loopne 0x4090d1 ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040c345 : loopne 0x40c395 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040c344 : loopne 0x40c396 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040b4be : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040c4f2 : mov al, 0 ; call 0x401488
0x000000000040ecc9 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040fb64 : mov al, byte ptr [rbp - 6] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000404131 : mov byte ptr [0x612288], al ; pop rbp ; ret
0x0000000000409980 : mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x0000000000404338 : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret
0x00000000004075bc : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x0000000000405dce : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x0000000000408da6 : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 1
0x00000000004015b3 : mov byte ptr [rip + 0x210cbe], 1 ; ret
0x0000000000403d42 : mov dh, -0x40 ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000403b1e : mov dh, -0x40 ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040ef27 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000040eccf : mov dh, -0x40 ; pop rbp ; ret
0x000000000040410d : mov dword ptr [0x612280], edi ; pop rbp ; ret
0x0000000000404c0a : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000404d58 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000401919 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401837 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040ff57 : mov dword ptr [rbp - 0xc], eax ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000408c3c : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x000000000040bd85 : mov eax, 0xf0658d48 ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040e6e1 : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000404b38 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040b8b1 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404614 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040e6de : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000404b35 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004097ea : mov eax, dword ptr [rbp - 0x10] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000403e97 : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000404ec4 : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000040b7bf : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404aed : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404c04 : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000409db4 : mov eax, dword ptr [rbp - 0x18] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040c343 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040907d : mov eax, dword ptr [rbp - 0x20] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x00000000004040e3 : mov eax, dword ptr [rbp - 0x20] ; pop rbp ; ret
0x000000000040e4f8 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404d5a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040cb12 : mov eax, dword ptr [rbp - 0x30] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040a638 : mov eax, dword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000408c3a : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040fe7d : mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x000000000040d122 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004015db : mov ebp, esp ; call rax
0x0000000000401541 : mov ebp, esp ; ja 0x40154c ; pop rbp ; ret
0x0000000000405587 : mov ecx, dword ptr [rax*8 + 0x410540] ; jmp rcx
0x00000000004060a1 : mov ecx, dword ptr [rax*8 + 0x410588] ; jmp rcx
0x000000000040a942 : mov ecx, dword ptr [rax*8 + 0x410a48] ; jmp rcx
0x0000000000404c07 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004015d5 : mov edi, 0x611e20 ; mov rbp, rsp ; call rax
0x0000000000401552 : mov edi, 0x612240 ; jmp rax
0x0000000000401592 : mov edi, 0x612240 ; jmp rdx
0x000000000040ffb7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000040ffb6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x00000000004015b5 : mov esi, 0x100210c ; ret
0x0000000000401590 : mov esi, eax ; mov edi, 0x612240 ; jmp rdx
0x00000000004097ee : mov esp, ebp ; pop rbp ; ret
0x000000000040410c : mov qword ptr [0x612280], rdi ; pop rbp ; ret
0x0000000000408c3b : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x000000000040b8b0 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404613 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404b34 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004097e9 : mov rax, qword ptr [rbp - 0x10] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000403e96 : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040b7be : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404aec : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000409db3 : mov rax, qword ptr [rbp - 0x18] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040c342 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004040e2 : mov rax, qword ptr [rbp - 0x20] ; pop rbp ; ret
0x000000000040a637 : mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040d121 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004015da : mov rbp, rsp ; call rax
0x0000000000401540 : mov rbp, rsp ; ja 0x40154d ; pop rbp ; ret
0x0000000000405586 : mov rcx, qword ptr [rax*8 + 0x410540] ; jmp rcx
0x00000000004060a0 : mov rcx, qword ptr [rax*8 + 0x410588] ; jmp rcx
0x000000000040a941 : mov rcx, qword ptr [rax*8 + 0x410a48] ; jmp rcx
0x000000000040158f : mov rsi, rax ; mov edi, 0x612240 ; jmp rdx
0x00000000004097ed : mov rsp, rbp ; pop rbp ; ret
0x0000000000403d41 : movzx eax, al ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000403b1d : movzx eax, al ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040ef26 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040ecce : movzx eax, al ; pop rbp ; ret
0x000000000040ffd8 : nop dword ptr [rax + rax] ; ret
0x00000000004015b6 : or al, 0x21 ; add byte ptr [rcx], al ; ret
0x000000000040a943 : or al, 0xffffffffffffffc5 ; or al, byte ptr [rcx] ; jmp rcx
0x000000000040a946 : or al, byte ptr [rcx] ; jmp rcx
0x0000000000408e09 : or byte ptr [r15], cl ; xchg eax, ebp ; ret 0x348b
0x00000000004071d3 : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x00000000004071d4 : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040efec : or byte ptr [rcx + 0x2038], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x000000000040f42c : or byte ptr [rcx + 0x2138], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000040b26d : or byte ptr [rcx + 0x28f9], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x000000000040ed3c : or byte ptr [rcx + 0x3038], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000040164c : or byte ptr [rcx + 0x38], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x000000000040f32c : or byte ptr [rcx + 0x6138], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000040cf62 : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x0000000000408e0a : or byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x000000000040a17d : or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x000000000040a21f : or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x0000000000402826 : or dword ptr [rbx - 0x1034b], ecx ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040c00f : or eax, 0x48fffff9 ; add esp, 0x30 ; pop rbp ; ret
0x000000000040508d : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403480 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040ffcc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000403482 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040ffce : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000403484 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040ffd0 : pop r14 ; pop r15 ; ret
0x0000000000409a59 : pop r14 ; pop rbp ; ret
0x0000000000403486 : pop r15 ; pop rbp ; ret
0x000000000040ffd2 : pop r15 ; ret
0x00000000004015b2 : pop rbp ; mov byte ptr [rip + 0x210cbe], 1 ; ret
0x0000000000401551 : pop rbp ; mov edi, 0x612240 ; jmp rax
0x000000000040158e : pop rbp ; mov rsi, rax ; mov edi, 0x612240 ; jmp rdx
0x000000000040ffcb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000403483 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040ffcf : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401545 : pop rbp ; ret
0x00000000004095fb : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000409a58 : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000403b24 : pop rbx ; pop rbp ; ret
0x0000000000403487 : pop rdi ; pop rbp ; ret
0x000000000040ffd3 : pop rdi ; ret
0x000000000040f801 : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x000000000040eec1 : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x0000000000403485 : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040ffd1 : pop rsi ; pop r15 ; ret
0x0000000000409a5a : pop rsi ; pop rbp ; ret
0x0000000000403481 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040ffcd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040ed44 : popfq ; ret 0x348b
0x000000000040ee10 : popfq ; ret 0xc8b
0x00000000004049ac : push 0x48006122 ; add esp, 0x40 ; pop rbp ; ret
0x0000000000410e67 : push qword ptr [rax + 0x20000004] ; xor edi, edi ; call rax
0x000000000041104f : push qword ptr [rax + 0xc] ; add byte ptr [rax], al ; ret
0x000000000041109f : push qword ptr [rax + 0xd] ; in al, -1 ; call rax
0x0000000000410e77 : push rax ; add al, 0 ; add al, al ; xor al, 0xffffffffffffffff ; call qword ptr [rax]
0x000000000040e073 : push rax ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040988e : push rax ; pop rbp ; ret
0x00000000004071d7 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x00000000004015d4 : push rbp ; mov edi, 0x611e20 ; mov rbp, rsp ; call rax
0x0000000000408b6e : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000040997f : pushfq ; mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x000000000040240e : pushfq ; ret
0x0000000000406060 : pushfq ; ret 0x844
0x000000000040168a : pushfq ; ret 0x845
0x000000000040218a : pushfq ; ret 0xd108
0x0000000000411074 : rcr dl, -1 ; call qword ptr [rax]
0x0000000000401181 : ret
0x0000000000401610 : ret 0x125
0x00000000004075c5 : ret 0x13
0x0000000000401302 : ret 0x210d
0x0000000000405dd7 : ret 0x2a
0x0000000000401655 : ret 0x348b
0x0000000000404875 : ret 0x4001
0x00000000004106a0 : ret 0x406c
0x000000000040197a : ret 0x4101
0x0000000000409da2 : ret 0x4801
0x0000000000401fb4 : ret 0x48f0
0x0000000000409ef7 : ret 0x4cc0
0x0000000000401fe6 : ret 0x4cf0
0x000000000040f807 : ret 0x5588
0x00000000004071f0 : ret 0x5ae8
0x000000000040a180 : ret 0x7ae8
0x000000000040cbe5 : ret 0x8041
0x0000000000402404 : ret 0x8141
0x0000000000406061 : ret 0x844
0x000000000040168b : ret 0x845
0x0000000000402415 : ret 0x8801
0x0000000000401d95 : ret 0x8840
0x0000000000406066 : ret 0x8901
0x000000000040bec5 : ret 0x8948
0x000000000040754c : ret 0x89a5
0x000000000040bb43 : ret 0x8b44
0x00000000004071db : ret 0x8b48
0x0000000000401c7f : ret 0xa3d
0x000000000040d4ee : ret 0xb
0x0000000000401cc7 : ret 0xb0
0x0000000000401575 : ret 0xc148
0x000000000040cf6b : ret 0xc8b
0x000000000040218b : ret 0xd108
0x000000000040a59c : ret 0xd284
0x000000000040a222 : ret 0xd8e8
0x0000000000401607 : ret 0xea81
0x0000000000408abc : ret 0xee8
0x0000000000401c8d : ret 0xf01
0x0000000000401e5e : ret 0xf981
0x000000000040c4fa : ret 0xff4c
0x0000000000406ec2 : ret 1
0x0000000000408b72 : ret 8
0x000000000040b473 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000040157c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40158b ; pop rbp ; ret
0x0000000000403b1f : ror byte ptr [rax - 0x73], 0x65 ; clc ; pop rbx ; pop rbp ; ret
0x000000000040ef28 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x000000000040b474 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000403d43 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x403dac ; ret
0x0000000000408b6f : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000040f806 : sahf ; ret 0x5588
0x000000000040eec6 : sahf ; ret 0xc8b
0x000000000040154e : sal byte ptr [rsp + rsi*8 + 0x5d], -0x41 ; and spl, byte ptr [rcx] ; jmp rax
0x0000000000406064 : sal dh, cl ; ret 0x8901
0x000000000041104d : sar bh, -1 ; jo 0x411066 ; add byte ptr [rax], al ; ret
0x000000000040157e : sar eax, 1 ; jne 0x401589 ; pop rbp ; ret
0x000000000040157d : sar rax, 1 ; jne 0x40158a ; pop rbp ; ret
0x0000000000405300 : sbb cl, byte ptr [rcx - 0x7f] ; ret
0x0000000000403e92 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040e897 : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000402c02 : scasd eax, dword ptr [rdi] ; ret
0x000000000040160f : scasd eax, dword ptr [rdi] ; ret 0x125
0x00000000004037d7 : scasd eax, dword ptr [rdi] ; ret 0x8141
0x000000000040ee0a : stc ; add byte ptr [r8], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x000000000040f800 : stc ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x000000000040eec0 : stc ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x000000000040eccb : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000410021 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000410020 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040ffda : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000404020 : test dword ptr [rip - 0x17000000], eax ; ret
0x00000000004075bf : test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x0000000000405dd1 : test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x000000000040d4e8 : test dword ptr [rip - 0x17000000], eax ; ret 0xb
0x0000000000406ebc : test dword ptr [rip - 0x17000000], eax ; ret 1
0x000000000040c163 : test eax, 0x48fffffc ; add esp, 0x10 ; pop rbp ; ret
0x0000000000411681 : xchg bh, bh ; call qword ptr [rdi]
0x0000000000401654 : xchg eax, ebp ; ret 0x348b
0x000000000040cbe4 : xchg eax, ebp ; ret 0x8041
0x000000000040bb42 : xchg eax, ebp ; ret 0x8b44
0x000000000040cf6a : xchg eax, ebp ; ret 0xc8b
0x0000000000405eb7 : xchg eax, esi ; ret 0x348b
0x00000000004037e9 : xchg eax, esp ; ret
0x000000000040e93d : xchg eax, esp ; ret 0x348b
0x0000000000402403 : xchg eax, esp ; ret 0x8141
0x0000000000401c7e : xchg eax, esp ; ret 0xa3d
0x000000000040a59b : xchg eax, esp ; ret 0xd284
0x0000000000401e5d : xchg eax, esp ; ret 0xf981
0x0000000000410e7d : xor al, 0xffffffffffffffff ; call qword ptr [rax]
0x000000000040a177 : xor byte ptr [rax - 0x75], cl ; add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x000000000040a219 : xor byte ptr [rax - 0x75], cl ; add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x0000000000411339 : xor edi, edi ; call qword ptr [rax]
0x0000000000410e6d : xor edi, edi ; call rax
0x0000000000404d56 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
