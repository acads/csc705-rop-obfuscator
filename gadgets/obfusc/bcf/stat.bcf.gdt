0x000000000041e252 : adc al, -0x7f ; ret 0x76c
0x0000000000407626 : adc byte ptr [rax + 1], cl ; ret 0x8949
0x000000000043baa0 : adc byte ptr [rax - 0x7f], cl ; ret 0x10
0x000000000043f6df : adc byte ptr [rax - 0x7f], cl ; ret 0x20
0x0000000000444175 : adc byte ptr [rax], al ; add byte ptr [rax - 0x19], ch ; std ; call rcx
0x0000000000444174 : adc byte ptr [rax], r8b ; add byte ptr [rax - 0x19], ch ; std ; call rcx
0x0000000000405929 : adc byte ptr [rbx], al ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000439b5d : adc dword ptr [rax - 0x7f], ecx ; ret 0x20
0x000000000043614d : adc dword ptr [rax - 0x7f], ecx ; ret 1
0x0000000000442ea1 : adc eax, 0xed600000 ; std ; jmp qword ptr [rax]
0x0000000000442ed1 : adc eax, 0xf4900000 ; std ; jmp rax
0x0000000000442b35 : add ah, bh ; jmp qword ptr [rax]
0x0000000000443e2b : add ah, bh ; or al, 0 ; add al, al ; sub bh, ch ; call qword ptr [rdx]
0x0000000000443595 : add al, 0 ; add byte ptr [rax], bh ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; call qword ptr [rsi]
0x000000000040dc02 : add al, 0x25 ; cmp byte ptr [rsp], dl ; pop rbp ; ret
0x000000000040be13 : add al, 0x25 ; ret
0x0000000000410de0 : add al, 0x25 ; ret 0x4420
0x0000000000442ce3 : add al, ah ; and bh, ch ; call qword ptr [rax]
0x00000000004434cf : add al, ah ; pop rdx ; cld ; call qword ptr [rax]
0x000000000044371f : add al, al ; ret 0xfffc
0x0000000000443e2f : add al, al ; sub bh, ch ; call qword ptr [rdx]
0x0000000000433168 : add al, ch ; ret 0xfce9
0x00000000004150c8 : add al, ch ; ret 0xfec8
0x0000000000442b63 : add al, dh ; xor ah, bh ; jmp rax
0x0000000000442f9b : add al, dh ; xor bh, dh ; call qword ptr [rax]
0x000000000044300b : add al, dl ; jo 0x443011 ; jmp rax
0x0000000000442c2b : add al, dl ; mov bl, -4 ; jmp qword ptr [rax]
0x0000000000442d13 : add al, dl ; std ; call rax
0x0000000000443d4f : add al, dl ; std ; jmp qword ptr [rdi]
0x0000000000442ee3 : add al, dl ; sti ; std ; jmp qword ptr [rax]
0x0000000000442f25 : add bh, dh ; jmp qword ptr [rax]
0x000000000044230f : add bl, al ; ret 0x41
0x000000000044034f : add bl, dh ; ret
0x000000000044230a : add byte ptr [r8], al ; add byte ptr [rax], al ; add bl, al ; ret 0x41
0x00000000004040cd : add byte ptr [r8], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x0000000000443a67 : add byte ptr [rax + 0x19], bl ; std ; call qword ptr [rdi]
0x0000000000443eef : add byte ptr [rax + 0x2b], dh ; std ; call qword ptr [rax]
0x0000000000434e2d : add byte ptr [rax + 0x39], cl ; ror dword ptr [rdi], -0x6b ; ret 0x348b
0x000000000044348f : add byte ptr [rax + 0x53], al ; cld ; jmp qword ptr [rbx]
0x00000000004431d3 : add byte ptr [rax + rax - 0xe980000], ah ; sti ; jmp rdx
0x0000000000443058 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; jge 0x443064 ; jmp qword ptr [rax]
0x0000000000444173 : add byte ptr [rax + rdx], al ; add byte ptr [rax - 0x19], ch ; std ; call rcx
0x0000000000442ea3 : add byte ptr [rax - 0x13], ah ; std ; jmp qword ptr [rax]
0x0000000000444177 : add byte ptr [rax - 0x19], ch ; std ; call rcx
0x0000000000405fcb : add byte ptr [rax - 0x6bf10000], ah ; ret 0xc8b
0x000000000040be10 : add byte ptr [rax - 0x73], cl ; add al, 0x25 ; ret
0x0000000000410ddd : add byte ptr [rax - 0x73], cl ; add al, 0x25 ; ret 0x4420
0x000000000040de84 : add byte ptr [rax - 0x73], cl ; clc ; pop rbx ; pop rbp ; ret
0x0000000000421ad0 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x00000000004023d2 : add byte ptr [rax - 0x77], cl ; call 0x102e8ca
0x0000000000402401 : add byte ptr [rax - 0x77], cl ; fsubr st(0) ; xchg eax, ebp ; ret 0
0x0000000000405ef9 : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000416a0d : add byte ptr [rax - 0x77], cl ; jge 0x416a10 ; pop rbp ; ret
0x000000000043fe73 : add byte ptr [rax - 0x77], cl ; or cl, ch ; salc ; ret 0xffff
0x0000000000437780 : add byte ptr [rax - 0x77], cl ; xor cl, ch ; jmp rax
0x00000000004431d7 : add byte ptr [rax - 0xf], ch ; sti ; jmp rdx
0x0000000000442b23 : add byte ptr [rax - 8], dl ; sti ; jmp rax
0x0000000000442c1b : add byte ptr [rax], ah ; mov cl, -4 ; jmp rax
0x0000000000444172 : add byte ptr [rax], al ; adc byte ptr [rax], r8b ; add byte ptr [rax - 0x19], ch ; std ; call rcx
0x0000000000443592 : add byte ptr [rax], al ; add al, 0 ; add byte ptr [rax], bh ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; call qword ptr [rsi]
0x00000000004150c6 : add byte ptr [rax], al ; add al, ch ; ret 0xfec8
0x000000000044230d : add byte ptr [rax], al ; add bl, al ; ret 0x41
0x000000000044034d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000434e2b : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ror dword ptr [rdi], -0x6b ; ret 0x348b
0x0000000000410ddb : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add al, 0x25 ; ret 0x4420
0x0000000000424123 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; clc ; pop rbx ; pop rbp ; ret
0x0000000000429158 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000416a0b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jge 0x416a12 ; pop rbp ; ret
0x000000000043fe71 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; or cl, ch ; salc ; ret 0xffff
0x000000000043777e : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; xor cl, ch ; jmp rax
0x00000000004431d5 : add byte ptr [rax], al ; add byte ptr [rax - 0xf], ch ; sti ; jmp rdx
0x000000000044230b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, al ; ret 0x41
0x000000000044034b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004009e0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004009e2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040f9a9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042aae9 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000416a0a : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000040fcb2 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004009e4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000044288c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x432e
0x000000000042e650 : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x0000000000402f66 : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x8141
0x000000000044305a : add byte ptr [rax], al ; add byte ptr [rbp - 2], bh ; jmp qword ptr [rax]
0x0000000000414cd8 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004430c2 : add byte ptr [rax], al ; add byte ptr [rbx - 1], dh ; call rax
0x0000000000403936 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret
0x000000000040fb53 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x844
0x0000000000402025 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x0000000000420cda : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x00000000004067fa : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x125
0x00000000004075f3 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x0000000000425adf : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x0000000000402f78 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000040392b : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x000000000040e2d9 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8b44
0x000000000043248a : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xf981
0x0000000000424db8 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xfe81
0x0000000000414c78 : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x51], al ; ret
0x000000000041775e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; lahf ; ret 0xc8b
0x00000000004299b0 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x0000000000403e30 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x0000000000402f83 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret
0x000000000042e79f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0x348b
0x000000000042e861 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xc8b
0x0000000000406aa8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x000000000042a472 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x0000000000403fff : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x0000000000425b4c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret
0x0000000000401fab : add byte ptr [rax], al ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x125
0x0000000000401ff0 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x000000000042219e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x0000000000416e75 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x000000000042405c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000420a7c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0x348b
0x00000000004218d1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x0000000000402c81 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040eb45 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x00000000004247eb : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x48b
0x0000000000424f99 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x0000000000411731 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x00000000004038ff : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x0000000000415c77 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000402b07 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf981
0x0000000000419bd6 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xfe81
0x0000000000420b61 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xff81
0x0000000000434ef6 : add byte ptr [rax], al ; add cl, ch ; jmp qword ptr [rdi]
0x0000000000408953 : add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000412ca1 : add byte ptr [rax], al ; add cl, ch ; ret 0x13
0x00000000004114b3 : add byte ptr [rax], al ; add cl, ch ; ret 0x2a
0x0000000000434860 : add byte ptr [rax], al ; add cl, ch ; ret 0x2d
0x000000000041a2cd : add byte ptr [rax], al ; add cl, ch ; ret 0x5c
0x0000000000416d81 : add byte ptr [rax], al ; add cl, ch ; ret 0x92
0x000000000042677a : add byte ptr [rax], al ; add cl, ch ; ret 0xb
0x000000000043f20a : add byte ptr [rax], al ; add cl, ch ; ret 0xf
0x000000000041259e : add byte ptr [rax], al ; add cl, ch ; ret 1
0x0000000000401fd6 : add byte ptr [rax], al ; add cl, ch ; ret 2
0x000000000043fe87 : add byte ptr [rax], al ; add cl, ch ; salc ; ret
0x000000000041d2aa : add byte ptr [rax], al ; add cl, ch ; sysenter
0x00000000004150c1 : add byte ptr [rax], al ; add cl, ch ; test eax, 0xe8000000 ; ret 0xfec8
0x0000000000442f22 : add byte ptr [rax], al ; add dil, sil ; jmp qword ptr [rax]
0x000000000044367a : add byte ptr [rax], al ; add rax, -0x4d800000 ; cld ; call qword ptr [rax]
0x00000000004087eb : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041076f : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040f38e : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040876a : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040192b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000443e2a : add byte ptr [rax], al ; cld ; or al, 0 ; add al, al ; sub bh, ch ; call qword ptr [rdx]
0x0000000000444612 : add byte ptr [rax], al ; in al, 0x14 ; add byte ptr [rax], al ; mov byte ptr [rdi - 2], dl ; call rax
0x00000000004430c3 : add byte ptr [rax], al ; jae 0x4430ca ; call rax
0x000000000044305b : add byte ptr [rax], al ; jge 0x443061 ; jmp qword ptr [rax]
0x0000000000401b49 : add byte ptr [rax], al ; jmp 0x401949
0x00000000004150c2 : add byte ptr [rax], al ; jmp 0x41517a
0x00000000004338c0 : add byte ptr [rax], al ; jmp 0x437448
0x0000000000443eee : add byte ptr [rax], al ; jo 0x443f22 ; std ; call qword ptr [rax]
0x0000000000424124 : add byte ptr [rax], al ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000442ce2 : add byte ptr [rax], al ; loopne 0x442d0d ; std ; call qword ptr [rax]
0x00000000004434ce : add byte ptr [rax], al ; loopne 0x443531 ; cld ; call qword ptr [rax]
0x0000000000442b32 : add byte ptr [rax], al ; mov al, 0 ; cld ; jmp qword ptr [rax]
0x000000000040f6bf : add byte ptr [rax], al ; mov al, byte ptr [rbp - 0xa] ; movsx eax, al ; pop rbp ; ret
0x0000000000444616 : add byte ptr [rax], al ; mov byte ptr [rdi - 2], dl ; call rax
0x00000000004105a2 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000042aaeb : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000415f1a : add byte ptr [rax], al ; mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041643d : add byte ptr [rax], al ; mov eax, edi ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000420c9f : add byte ptr [rax], al ; mov eax, esi ; pop rbp ; ret
0x0000000000443eea : add byte ptr [rax], al ; mov esp, 0x7000000d ; sub edi, ebp ; call qword ptr [rax]
0x000000000043fe72 : add byte ptr [rax], al ; mov qword ptr [rax], rcx ; jmp 0x43c159
0x0000000000416a0c : add byte ptr [rax], al ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000410212 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040fcb4 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000429159 : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004431d2 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0xf], ch ; sti ; jmp rdx
0x00000000004440d2 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; sldt word ptr [rax] ; test al, -0x22 ; std ; jmp rcx
0x00000000004167b2 : add byte ptr [rax], al ; movzx eax, ax ; mov rsp, rbp ; pop rbp ; ret
0x0000000000442ed2 : add byte ptr [rax], al ; nop ; hlt ; std ; jmp rax
0x0000000000442cd2 : add byte ptr [rax], al ; nop ; sbb edi, ebp ; call rax
0x0000000000442b72 : add byte ptr [rax], al ; nop ; xor esp, edi ; jmp qword ptr [rax]
0x000000000044379e : add byte ptr [rax], al ; or dl, 0xfc ; call rbx
0x0000000000443a66 : add byte ptr [rax], al ; pop rax ; sbb ebp, edi ; call qword ptr [rdi]
0x0000000000403256 : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000414cd9 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040592b : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000413f01 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000044348a : add byte ptr [rax], al ; pop rsp ; add eax, dword ptr [rax] ; add byte ptr [rax + 0x53], al ; cld ; jmp qword ptr [rbx]
0x0000000000442b22 : add byte ptr [rax], al ; push rax ; clc ; sti ; jmp rax
0x000000000044348e : add byte ptr [rax], al ; push rbx ; cld ; jmp qword ptr [rbx]
0x00000000004434ca : add byte ptr [rax], al ; pushfq ; add eax, dword ptr [rax] ; add al, ah ; pop rdx ; cld ; call qword ptr [rax]
0x00000000004009e6 : add byte ptr [rax], al ; ret
0x000000000044288e : add byte ptr [rax], al ; ret 0x432e
0x000000000044300a : add byte ptr [rax], al ; sal byte ptr [rax - 2], 1 ; jmp rax
0x0000000000442ee2 : add byte ptr [rax], al ; sar bl, 1 ; std ; jmp qword ptr [rax]
0x0000000000443d4a : add byte ptr [rax], al ; sbb al, 0xc ; add byte ptr [rax], al ; shl byte ptr [rsi], 1 ; std ; jmp qword ptr [rdi]
0x0000000000443e4a : add byte ptr [rax], al ; sbb al, 0xd ; add byte ptr [rax], al ; shr byte ptr [rdx], -3 ; call qword ptr [rdx]
0x0000000000442d12 : add byte ptr [rax], al ; shl byte ptr [rsi], 1 ; std ; call rax
0x0000000000443d4e : add byte ptr [rax], al ; shl byte ptr [rsi], 1 ; std ; jmp qword ptr [rdi]
0x0000000000443e2e : add byte ptr [rax], al ; shr byte ptr [rdx], -3 ; call qword ptr [rdx]
0x00000000004440d6 : add byte ptr [rax], al ; test al, -0x22 ; std ; jmp rcx
0x0000000000443a62 : add byte ptr [rax], al ; xor al, 9 ; add byte ptr [rax], al ; pop rax ; sbb ebp, edi ; call qword ptr [rdi]
0x0000000000442d22 : add byte ptr [rax], al ; xor byte ptr [rdi], ah ; std ; call qword ptr [rax]
0x0000000000443597 : add byte ptr [rax], bh ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; call qword ptr [rsi]
0x0000000000442b70 : add byte ptr [rax], cl ; add byte ptr [rax], al ; nop ; xor esp, edi ; jmp qword ptr [rax]
0x0000000000442f13 : add byte ptr [rax], dh ; add dh, bh ; jmp rax
0x000000000042e652 : add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x0000000000402f68 : add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x8141
0x0000000000443eeb : add byte ptr [rbp + rcx + 0x2b700000], bh ; std ; call qword ptr [rax]
0x000000000042e648 : add byte ptr [rbp - 0x77], al ; ret
0x0000000000402f5e : add byte ptr [rbp - 0x77], al ; ret 0x8141
0x000000000044305c : add byte ptr [rbp - 2], bh ; jmp qword ptr [rax]
0x0000000000414cda : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040592c : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000413f02 : add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004434cb : add byte ptr [rbx + rax + 0x5ae00000], bl ; cld ; call qword ptr [rax]
0x000000000044348b : add byte ptr [rbx + rax], bl ; add byte ptr [rax + 0x53], al ; cld ; jmp qword ptr [rbx]
0x000000000040cf16 : add byte ptr [rbx - 0x1874b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040d53f : add byte ptr [rbx - 0x1e34b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040d5a4 : add byte ptr [rbx - 0x1eb4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000041782f : add byte ptr [rbx - 0xc36b], cl ; inc dword ptr [rcx] ; ret 0x9589
0x0000000000403433 : add byte ptr [rbx - 0xcb4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040370e : add byte ptr [rbx - 0xeb4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004430c4 : add byte ptr [rbx - 1], dh ; call rax
0x0000000000443e4b : add byte ptr [rcx + 0x2ac00000], bl ; std ; call qword ptr [rdx]
0x000000000041775a : add byte ptr [rcx + 0x7f9], al ; add byte ptr [rdi], cl ; lahf ; ret 0xc8b
0x0000000000405fc8 : add byte ptr [rcx + 0xa000f9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x0000000000430cd5 : add byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x0000000000419bd2 : add byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xfe81
0x0000000000402c8d : add byte ptr [rcx + 0xf], al ; pushfq ; mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x0000000000403938 : add byte ptr [rcx + 0xf], al ; pushfq ; ret
0x000000000040fb55 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x844
0x0000000000402027 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x0000000000420b6c : add byte ptr [rcx + 0xf], al ; pushfq ; rol dword ptr [rax + rcx - 0x36], -0xa ; ret 0xf01
0x0000000000420cdc : add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x00000000004067fc : add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x125
0x00000000004075f5 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x0000000000425ae1 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x0000000000402f7a : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000040392d : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x000000000040e2db : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8b44
0x000000000043248c : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xf981
0x0000000000424dba : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xfe81
0x0000000000407837 : add byte ptr [rcx + 0xfe], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000415888 : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000041172d : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x0000000000443a63 : add byte ptr [rcx + rcx], dh ; add byte ptr [rax], al ; pop rax ; sbb ebp, edi ; call qword ptr [rdi]
0x0000000000420cd2 : add byte ptr [rcx - 0x77], al ; ret
0x00000000004067f2 : add byte ptr [rcx - 0x77], al ; ret 0x8141
0x00000000004045de : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401f58 : add byte ptr [rcx], al ; ret
0x00000000004440d3 : add byte ptr [rdi + rcx - 0x21580000], ah ; std ; jmp rcx
0x0000000000414c7a : add byte ptr [rdi + rcx - 0x51], al ; ret
0x0000000000442b30 : add byte ptr [rdi], al ; add byte ptr [rax], al ; mov al, 0 ; cld ; jmp qword ptr [rax]
0x0000000000417760 : add byte ptr [rdi], cl ; lahf ; ret 0xc8b
0x00000000004167b3 : add byte ptr [rdi], cl ; mov bh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x00000000004299b2 : add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x0000000000403e32 : add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x0000000000402f85 : add byte ptr [rdi], cl ; pushfq ; ret
0x000000000042e7a1 : add byte ptr [rdi], cl ; pushfq ; ret 0x348b
0x000000000042e863 : add byte ptr [rdi], cl ; pushfq ; ret 0xc8b
0x0000000000406aaa : add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x000000000042a474 : add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x0000000000404001 : add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x0000000000425b4e : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret
0x0000000000401fad : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x125
0x0000000000401ff2 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x00000000004221a0 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x0000000000416e77 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x000000000042405e : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000420a7e : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0x348b
0x00000000004218d3 : add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x0000000000402c83 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040eb47 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x00000000004247ed : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x48b
0x0000000000424f9b : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x0000000000411733 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x0000000000403901 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x0000000000415c79 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000402b09 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf981
0x0000000000419bd8 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xfe81
0x0000000000420b63 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xff81
0x0000000000442f20 : add byte ptr [rdi], dl ; add byte ptr [rax], al ; add dil, sil ; jmp qword ptr [rax]
0x000000000043fe85 : add byte ptr [rdx], al ; add byte ptr [rax], al ; add cl, ch ; salc ; ret
0x0000000000442ea0 : add byte ptr [rip - 0x12a00000], dl ; std ; jmp qword ptr [rax]
0x0000000000442ee0 : add byte ptr [rsi], dl ; add byte ptr [rax], al ; sar bl, 1 ; std ; jmp qword ptr [rax]
0x0000000000443593 : add byte ptr [rsp + rax], ah ; add byte ptr [rax], bh ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; call qword ptr [rsi]
0x0000000000443d4b : add byte ptr [rsp + rcx], bl ; add byte ptr [rax], al ; shl byte ptr [rsi], 1 ; std ; jmp qword ptr [rdi]
0x00000000004038fe : add byte ptr cs:[rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x00000000004023d1 : add byte ptr fs:[rax - 0x77], cl ; call 0x102e8cb
0x0000000000402400 : add byte ptr fs:[rax - 0x77], cl ; fsubr st(0) ; xchg eax, ebp ; ret 0
0x0000000000405ef8 : add byte ptr fs:[rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000042e647 : add byte ptr fs:[rbp - 0x77], al ; ret
0x0000000000402f5d : add byte ptr fs:[rbp - 0x77], al ; ret 0x8141
0x0000000000420cd1 : add byte ptr fs:[rcx - 0x77], al ; ret
0x00000000004067f1 : add byte ptr fs:[rcx - 0x77], al ; ret 0x8141
0x0000000000434ef8 : add cl, ch ; jmp qword ptr [rdi]
0x0000000000408955 : add cl, ch ; ret
0x0000000000412ca3 : add cl, ch ; ret 0x13
0x00000000004114b5 : add cl, ch ; ret 0x2a
0x0000000000434862 : add cl, ch ; ret 0x2d
0x000000000041a2cf : add cl, ch ; ret 0x5c
0x0000000000416d83 : add cl, ch ; ret 0x92
0x000000000042677c : add cl, ch ; ret 0xb
0x000000000043f20c : add cl, ch ; ret 0xf
0x00000000004125a0 : add cl, ch ; ret 1
0x0000000000401fd8 : add cl, ch ; ret 2
0x000000000043fe89 : add cl, ch ; salc ; ret
0x000000000041d2ac : add cl, ch ; sysenter
0x00000000004150c3 : add cl, ch ; test eax, 0xe8000000 ; ret 0xfec8
0x0000000000442f15 : add dh, bh ; jmp rax
0x0000000000442f24 : add dil, sil ; jmp qword ptr [rax]
0x000000000041585a : add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x00000000004158fc : add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x0000000000424841 : add dword ptr [rax - 0x7af045bb], ecx ; ret
0x0000000000420c9d : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, esi ; pop rbp ; ret
0x000000000043fe70 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rax], rcx ; jmp 0x43c15b
0x0000000000427304 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000413f00 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000424e5d : add dword ptr [rcx + 0x2ff9], eax ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x0000000000403e2c : add dword ptr [rcx + 0x61f9], eax ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x000000000040830f : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000429b95 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000042993d : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000434ef2 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; jmp qword ptr [rdi]
0x000000000040894f : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret
0x0000000000412c9d : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x00000000004114af : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x000000000043485c : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0x2d
0x0000000000416d7d : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0x92
0x0000000000426776 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0xb
0x000000000043f206 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0xf
0x000000000041259a : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 1
0x000000000041d2a6 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; sysenter
0x0000000000423107 : add dword ptr [rdi], ecx ; xchg eax, esi ; ret 0x348b
0x0000000000401f54 : add eax, 0x24343e ; add ebx, esi ; ret
0x000000000041f093 : add eax, 0x6348ca01 ; ret 0x6948
0x000000000044367d : add eax, 0xb2800000 ; cld ; call qword ptr [rax]
0x0000000000434ef5 : add eax, 0xe9000000 ; jmp qword ptr [rdi]
0x0000000000408952 : add eax, 0xe9000000 ; ret
0x0000000000412ca0 : add eax, 0xe9000000 ; ret 0x13
0x00000000004114b2 : add eax, 0xe9000000 ; ret 0x2a
0x000000000043485f : add eax, 0xe9000000 ; ret 0x2d
0x0000000000416d80 : add eax, 0xe9000000 ; ret 0x92
0x0000000000426779 : add eax, 0xe9000000 ; ret 0xb
0x000000000043f209 : add eax, 0xe9000000 ; ret 0xf
0x000000000041259d : add eax, 0xe9000000 ; ret 1
0x0000000000401fd5 : add eax, 0xe9000000 ; ret 2
0x000000000041d2a9 : add eax, 0xe9000000 ; sysenter
0x00000000004434cd : add eax, dword ptr [rax] ; add al, ah ; pop rdx ; cld ; call qword ptr [rax]
0x000000000044348d : add eax, dword ptr [rax] ; add byte ptr [rax + 0x53], al ; cld ; jmp qword ptr [rbx]
0x000000000040592a : add eax, dword ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000423f46 : add eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000420b2b : add eax, ebp ; mov edi, 0x88fffe0e ; ret 0x8b48
0x0000000000401f1b : add eax, edx ; sar rax, 1 ; jne 0x401f2c ; pop rbp ; ret
0x0000000000401f59 : add ebx, esi ; ret
0x000000000043748a : add ecx, ebp ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x000000000040230b : add esp, 0x10 ; pop rbp ; ret
0x00000000004045dc : add esp, 0x100 ; pop rbp ; ret
0x0000000000408eff : add esp, 0x160 ; pop rbp ; ret
0x0000000000413efd : add esp, 0x178 ; pop rbx ; pop rbp ; ret
0x0000000000422e8a : add esp, 0x190 ; pop rbp ; ret
0x0000000000421cbc : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000426120 : add esp, 0x1b8 ; pop rbx ; pop rbp ; ret
0x0000000000428da0 : add esp, 0x1e0 ; pop rbp ; ret
0x0000000000405bd7 : add esp, 0x20 ; pop rbp ; ret
0x000000000040241d : add esp, 0x30 ; pop rbp ; ret
0x0000000000406684 : add esp, 0x40 ; pop rbp ; ret
0x00000000004217ff : add esp, 0x40 ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040876d : add esp, 0x50 ; pop rbp ; ret
0x000000000040cbd1 : add esp, 0x630 ; pop rbp ; ret
0x0000000000408314 : add esp, 0x70 ; pop rbp ; ret
0x000000000041431e : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040644d : add esp, 0xa0 ; pop rbp ; ret
0x0000000000420032 : add esp, 0xa68 ; pop rbx ; pop rbp ; ret
0x0000000000421b1c : add esp, 0xb0 ; pop rbp ; ret
0x0000000000403252 : add esp, 0xc0 ; pop rbp ; ret
0x00000000004036ce : add esp, 0xf0 ; pop rbp ; ret
0x000000000040192e : add esp, 8 ; ret
0x000000000044367c : add rax, -0x4d800000 ; cld ; call qword ptr [rax]
0x0000000000423f45 : add rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401f1a : add rax, rdx ; sar rax, 1 ; jne 0x401f2d ; pop rbp ; ret
0x000000000040230a : add rsp, 0x10 ; pop rbp ; ret
0x00000000004045db : add rsp, 0x100 ; pop rbp ; ret
0x0000000000408efe : add rsp, 0x160 ; pop rbp ; ret
0x0000000000413efc : add rsp, 0x178 ; pop rbx ; pop rbp ; ret
0x0000000000422e89 : add rsp, 0x190 ; pop rbp ; ret
0x0000000000421cbb : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000042611f : add rsp, 0x1b8 ; pop rbx ; pop rbp ; ret
0x0000000000428d9f : add rsp, 0x1e0 ; pop rbp ; ret
0x0000000000405bd6 : add rsp, 0x20 ; pop rbp ; ret
0x000000000040241c : add rsp, 0x30 ; pop rbp ; ret
0x0000000000406683 : add rsp, 0x40 ; pop rbp ; ret
0x00000000004217fe : add rsp, 0x40 ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040876c : add rsp, 0x50 ; pop rbp ; ret
0x000000000040cbd0 : add rsp, 0x630 ; pop rbp ; ret
0x0000000000408313 : add rsp, 0x70 ; pop rbp ; ret
0x000000000041431d : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040644c : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000420031 : add rsp, 0xa68 ; pop rbx ; pop rbp ; ret
0x0000000000421b1b : add rsp, 0xb0 ; pop rbp ; ret
0x0000000000403251 : add rsp, 0xc0 ; pop rbp ; ret
0x00000000004036cd : add rsp, 0xf0 ; pop rbp ; ret
0x000000000040192d : add rsp, 8 ; ret
0x0000000000401f57 : and al, 0 ; add ebx, esi ; ret
0x0000000000429b94 : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000042993c : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000442ce5 : and bh, ch ; call qword ptr [rax]
0x00000000004291fa : and byte ptr [r15], cl ; xchg eax, esp ; ret 0x348b
0x00000000004291fb : and byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x0000000000415987 : and eax, 0x48ffffee ; add esp, 0x20 ; pop rbp ; ret
0x0000000000405ef5 : and eax, 0x6453f9 ; mov rsp, rbp ; pop rbp ; ret
0x000000000040dbdf : and eax, 0x645430 ; pop rbp ; ret
0x000000000040dc03 : and eax, 0x645438 ; pop rbp ; ret
0x00000000004023d6 : call 0x102e8c6
0x00000000004023d5 : call 0x102e8c7
0x000000000041f086 : call 0x20479ae
0x000000000041f0ca : call 0x20479f2
0x000000000041f113 : call 0x2047a3b
0x00000000004048ae : call 0x4019a9
0x000000000040217e : call 0x401c19
0x0000000000409938 : call 0x405be2
0x00000000004023d7 : call 0x40e6a2
0x000000000040fbea : call 0x4903853a
0x000000000040fbe9 : call 0x4903853b
0x000000000040fbea : call 0x4903853d
0x000000000040fbe9 : call 0x4903853e
0x0000000000414199 : call 0xffffffffe903cae9
0x0000000000414198 : call 0xffffffffe903caea
0x0000000000409058 : call 0xffffffffff40d466
0x0000000000417a93 : call 0xffffffffff41bebc
0x000000000043de8f : call 0xffffffffff4422c1
0x0000000000440329 : call qword ptr [r12 + rbx*8]
0x000000000041f323 : call qword ptr [rax]
0x0000000000443a6b : call qword ptr [rdi]
0x0000000000443e33 : call qword ptr [rdx]
0x000000000044359b : call qword ptr [rsi]
0x000000000044032a : call qword ptr [rsp + rbx*8]
0x0000000000401f7d : call rax
0x00000000004437a3 : call rbx
0x0000000000424a3d : call rcx
0x000000000044409b : call rsp
0x0000000000416440 : clc ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408efd : clc ; add rsp, 0x160 ; pop rbp ; ret
0x0000000000420a08 : clc ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004067a6 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406682 : clc ; add rsp, 0x40 ; pop rbp ; ret
0x000000000042523c : clc ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000401f1f : clc ; jne 0x401f28 ; pop rbp ; ret
0x0000000000408fb6 : clc ; mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000423ccb : clc ; mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x000000000040d57c : clc ; mov rax, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004168fb : clc ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000041691b : clc ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000040d580 : clc ; mov rsp, rbp ; pop rbp ; ret
0x0000000000415f37 : clc ; pop rbp ; ret
0x000000000040de88 : clc ; pop rbx ; pop rbp ; ret
0x0000000000442b25 : clc ; sti ; jmp rax
0x0000000000402337 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004259ed : cld ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004434d2 : cld ; call qword ptr [rax]
0x000000000044359a : cld ; call qword ptr [rsi]
0x0000000000442b9e : cld ; call rax
0x00000000004437a2 : cld ; call rbx
0x0000000000442c26 : cld ; inc dword ptr [rax] ; or eax, dword ptr [rax] ; add al, dl ; mov bl, -4 ; jmp qword ptr [rax]
0x0000000000442c16 : cld ; inc eax ; or al, byte ptr [rax] ; add byte ptr [rax], ah ; mov cl, -4 ; jmp rax
0x0000000000442b36 : cld ; jmp qword ptr [rax]
0x0000000000443492 : cld ; jmp qword ptr [rbx]
0x0000000000442b66 : cld ; jmp rax
0x000000000042abc6 : cld ; mov dword ptr [rbp - 0xc], eax ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000415eaf : cld ; mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000443e2c : cld ; or al, 0 ; add al, al ; sub bh, ch ; call qword ptr [rdx]
0x0000000000442b96 : cld ; push qword ptr [rax - 0x5ffffff8] ; cmp edi, esp ; call rax
0x000000000041f092 : cli ; add eax, 0x6348ca01 ; ret 0x6948
0x000000000042a7d6 : cli ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004048b5 : cmp al, 0x25 ; ret
0x0000000000402185 : cmp al, 0x25 ; ret 0x440d
0x000000000040dbde : cmp al, 0x25 ; xor byte ptr [rsp], dl ; pop rbp ; ret
0x0000000000424209 : cmp al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000405159 : cmp byte ptr [r15], cl ; xchg eax, esi ; ret 0x348b
0x0000000000429c5e : cmp byte ptr [rax], ah ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x000000000040762f : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000401fee : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x00000000004299ae : cmp byte ptr [rax], dh ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000042a09e : cmp byte ptr [rcx], ah ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000040515a : cmp byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x000000000040dc04 : cmp byte ptr [rsp], dl ; pop rbp ; ret
0x00000000004255fe : cmp cl, byte ptr [rax - 0x77] ; fsubr st(0) ; pop rax ; ret
0x0000000000404e7b : cmp dh, -1 ; dec dword ptr [rax - 0x77] ; ret 0x9e8
0x000000000040e2d7 : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8b44
0x000000000042219c : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x000000000043bb50 : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x000000000041462d : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401edd : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401ef0 ; pop rbp ; ret
0x00000000004338c4 : cmp eax, dword ptr [rax] ; add cl, ch ; ret
0x0000000000442b9d : cmp edi, esp ; call rax
0x0000000000443599 : cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; call qword ptr [rsi]
0x0000000000437eea : cwde ; mov rcx, qword ptr [rax*8 + 0x442910] ; jmp rcx
0x0000000000424dc0 : dec byte ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret
0x0000000000402bdd : dec byte ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x00000000004108bf : dec byte ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret
0x0000000000406aa6 : dec byte ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x000000000043c7c1 : dec dword ptr [rax + 0x39] ; add dword ptr [rdi], ecx ; xchg eax, esi ; ret 0x348b
0x000000000040cd0a : dec dword ptr [rax - 0x73] ; add al, 0x25 ; ret
0x00000000004255e0 : dec dword ptr [rax - 0x73] ; clc ; pop rbx ; pop rbp ; ret
0x00000000004048b2 : dec dword ptr [rax - 0x73] ; cmp al, 0x25 ; ret
0x0000000000402182 : dec dword ptr [rax - 0x73] ; cmp al, 0x25 ; ret 0x440d
0x0000000000417a8e : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; call 0xffffffffff41bec1
0x000000000043de8a : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; call 0xffffffffff4422c6
0x0000000000416024 : dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x0000000000404b74 : dec dword ptr [rax - 0x77] ; ret 0x13e8
0x0000000000404869 : dec dword ptr [rax - 0x77] ; ret 0x1ee8
0x0000000000405564 : dec dword ptr [rax - 0x77] ; ret 0x23e8
0x0000000000405293 : dec dword ptr [rax - 0x77] ; ret 0x44e8
0x0000000000404941 : dec dword ptr [rax - 0x77] ; ret 0x46e8
0x0000000000404f1c : dec dword ptr [rax - 0x77] ; ret 0x6be8
0x0000000000409613 : dec dword ptr [rax - 0x77] ; ret 0x74e8
0x0000000000405b07 : dec dword ptr [rax - 0x77] ; ret 0x80e8
0x0000000000405702 : dec dword ptr [rax - 0x77] ; ret 0x85e8
0x0000000000404e7e : dec dword ptr [rax - 0x77] ; ret 0x9e8
0x0000000000403439 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000404ad2 : dec dword ptr [rax - 0x77] ; ret 0xb5e8
0x00000000004057c8 : dec dword ptr [rax - 0x77] ; ret 0xbfe8
0x0000000000409ab0 : dec dword ptr [rax - 0x77] ; ret 0xd7e8
0x00000000004053a6 : dec dword ptr [rax - 0x77] ; ret 0xe1e8
0x0000000000405996 : dec dword ptr [rax - 0x77] ; ret 0xf1e8
0x0000000000427074 : dec dword ptr [rax - 0x7f] ; ret 1
0x0000000000408c91 : dec dword ptr [rdi] ; test dword ptr [rip - 0x17000000], eax ; ret 2
0x000000000042cc76 : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0x348b
0x0000000000431153 : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0x8b44
0x0000000000416fc7 : dec dword ptr [rdi] ; xchg eax, edx ; ret 0x348b
0x000000000042ba9c : dec dword ptr [rdi] ; xchg eax, esp ; ret 0x348b
0x0000000000402023 : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x0000000000422ff6 : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x000000000041424b : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000415d1a : enter -0x7cb8, -0x3c ; pop rbp ; ret
0x00000000004440d9 : fdivp st(5) ; jmp rcx
0x00000000004071c0 : fiadd dword ptr [rcx - 0xa] ; ret 0x4001
0x0000000000424dcb : fiadd dword ptr [rcx - 0xa] ; ret 0x4401
0x0000000000404cf0 : fiadd dword ptr [rcx - 0xa] ; ret 0x4801
0x00000000004165d8 : fiadd dword ptr [rcx - 0xa] ; ret 0x6601
0x000000000040393f : fiadd dword ptr [rcx - 0xa] ; ret 0x8801
0x00000000004045b4 : fiadd dword ptr [rcx - 0xa] ; ret 0x8901
0x0000000000404b15 : fiadd dword ptr [rcx - 0xa] ; ret 0xf01
0x0000000000402f8b : fild dword ptr [rcx - 0xa] ; ret
0x0000000000407620 : fisttp dword ptr [rax + 0x63] ; ret
0x0000000000408593 : fmul dword ptr [r8 - 0x77] ; ret 0x8148
0x00000000004128b8 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000409053 : fmul dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; call 0xffffffffff40d46b
0x0000000000408594 : fmul dword ptr [rax - 0x77] ; ret 0x8148
0x000000000042eba8 : fmul dword ptr [rdi] ; wait ; ror dword ptr [rdi], -0x6c ; ret 0xca20
0x000000000044032c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000425602 : fsubr st(0) ; pop rax ; ret
0x0000000000402405 : fsubr st(0) ; xchg eax, ebp ; ret 0
0x0000000000442309 : hlt ; add byte ptr [r8], al ; add byte ptr [rax], al ; add bl, al ; ret 0x41
0x0000000000402309 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042abc9 : hlt ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000401ef0 : hlt ; pop rbp ; mov edi, 0x645340 ; jmp rax
0x000000000042aaef : hlt ; pop rbp ; ret
0x0000000000442ed5 : hlt ; std ; jmp rax
0x0000000000444614 : in al, 0x14 ; add byte ptr [rax], al ; mov byte ptr [rdi - 2], dl ; call rax
0x0000000000405bd5 : in al, 0x48 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000405efc : in al, dx ; pop rbp ; ret
0x0000000000415f33 : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x00000000004048af : in eax, dx ; sar bh, 1 ; dec dword ptr [rax - 0x73] ; cmp al, 0x25 ; ret
0x0000000000442ea5 : in eax, dx ; std ; jmp qword ptr [rax]
0x0000000000423275 : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000040dfa7 : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x0000000000407839 : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000442e9f : inc dword ptr [rax] ; adc eax, 0xed600000 ; std ; jmp qword ptr [rax]
0x000000000040eab5 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000407103 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x000000000041588a : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000041172f : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x0000000000442c27 : inc dword ptr [rax] ; or eax, dword ptr [rax] ; add al, dl ; mov bl, -4 ; jmp qword ptr [rax]
0x0000000000443057 : inc dword ptr [rax] ; sbb al, 0 ; add byte ptr [rax], al ; jge 0x443065 ; jmp qword ptr [rax]
0x0000000000429a78 : inc dword ptr [rcx + 0x41f9] ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x000000000042a46e : inc dword ptr [rcx + 0x5af9] ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x0000000000429b2e : inc dword ptr [rcx + 0x5af9] ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x0000000000417835 : inc dword ptr [rcx] ; ret 0x9589
0x0000000000442ecf : inc eax ; adc eax, 0xf4900000 ; std ; jmp rax
0x0000000000442c17 : inc eax ; or al, byte ptr [rax] ; add byte ptr [rax], ah ; mov cl, -4 ; jmp rax
0x0000000000443007 : inc eax ; sbb al, byte ptr [rax] ; add al, dl ; jo 0x443015 ; jmp rax
0x0000000000421ad8 : int 0x80
0x00000000004431d9 : int1 ; sti ; jmp rdx
0x0000000000401ee3 : ja 0x401eea ; pop rbp ; ret
0x00000000004430c5 : jae 0x4430c8 ; call rax
0x000000000044301d : jb 0x44301f ; jmp qword ptr [rax]
0x0000000000401eef : je 0x401eed ; pop rbp ; mov edi, 0x645340 ; jmp rax
0x0000000000415f36 : jge 0x415f33 ; pop rbp ; ret
0x00000000004168fa : jge 0x4168fb ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000041691a : jge 0x41691b ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000416a10 : jge 0x416a0d ; pop rbp ; ret
0x0000000000423cca : jge 0x423ccd ; mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x000000000044305d : jge 0x44305f ; jmp qword ptr [rax]
0x0000000000401b4b : jmp 0x401947
0x000000000040cd06 : jmp 0x40bd81
0x000000000040be0c : jmp 0x40cd14
0x0000000000410dd9 : jmp 0x410de7
0x00000000004150c4 : jmp 0x415178
0x0000000000415c5e : jmp 0x415c90
0x000000000042067c : jmp 0x41c956
0x000000000042067c : jmp 0x41c95b
0x0000000000437436 : jmp 0x43369e
0x000000000043743b : jmp 0x433729
0x0000000000437716 : jmp 0x4353e0
0x00000000004338c2 : jmp 0x437446
0x000000000043fe5e : jmp 0x43c098
0x000000000043fe77 : jmp 0x43c154
0x0000000000442b37 : jmp qword ptr [rax]
0x000000000040a1d7 : jmp qword ptr [rbx - 0x3d]
0x0000000000443493 : jmp qword ptr [rbx]
0x0000000000434efa : jmp qword ptr [rdi]
0x0000000000401ef7 : jmp rax
0x0000000000404799 : jmp rcx
0x0000000000401f37 : jmp rdx
0x0000000000401f20 : jne 0x401f27 ; pop rbp ; ret
0x0000000000408316 : jo 0x408377 ; ret
0x0000000000415294 : jo 0x4152f5 ; ret
0x000000000041691f : jo 0x416980 ; ret
0x000000000041691e : jo 0x416981 ; ret
0x0000000000425240 : jo 0x4252a1 ; ret
0x000000000044300d : jo 0x44300f ; jmp rax
0x0000000000443ef0 : jo 0x443f20 ; std ; call qword ptr [rax]
0x000000000044304d : jp 0x44304f ; jmp rax
0x0000000000413eff : js 0x413f08 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000414320 : js 0x414380 ; pop rbp ; ret
0x0000000000417762 : lahf ; ret 0xc8b
0x0000000000418a79 : lea ebx, dword ptr [rax + 0xffffffa] ; xchg eax, edx ; ret 0x348b
0x0000000000402fad : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000425d20 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040de86 : lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000402fac : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040de85 : lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x00000000004430bf : ljmp ptr [rax + 0x1d] ; jae 0x4430ce ; call rax
0x0000000000442f98 : lock sbb byte ptr [rax], al ; add al, dh ; xor bh, dh ; call qword ptr [rax]
0x000000000043fe5a : lodsd eax, dword ptr [rsi] ; sar edi, -1 ; jmp 0x43c09c
0x000000000040e5da : loopne 0x40e640 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041475f : loopne 0x4147b0 ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000041475e : loopne 0x4147b1 ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x00000000004229a5 : loopne 0x4229f5 ; add esp, 0x20 ; pop rbp ; ret
0x00000000004229a4 : loopne 0x4229f6 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000423edc : loopne 0x423f2c ; add esp, 0x20 ; pop rbp ; ret
0x0000000000423edb : loopne 0x423f2d ; add esp, 0x20 ; pop rbp ; ret
0x0000000000428da2 : loopne 0x428daa ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000439b80 : loopne 0x439be6 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000442ce4 : loopne 0x442d0b ; std ; call qword ptr [rax]
0x00000000004434d0 : loopne 0x44352f ; cld ; call qword ptr [rax]
0x0000000000421b1e : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000442b34 : mov al, 0 ; cld ; jmp qword ptr [rax]
0x0000000000442cd0 : mov al, 0xd ; add byte ptr [rax], al ; nop ; sbb edi, ebp ; call rax
0x0000000000442d10 : mov al, 0xe ; add byte ptr [rax], al ; shl byte ptr [rsi], 1 ; std ; call rax
0x000000000040f6c1 : mov al, byte ptr [rbp - 0xa] ; movsx eax, al ; pop rbp ; ret
0x0000000000429939 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042a7d4 : mov al, byte ptr [rbp - 6] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004167b5 : mov bh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000442c2d : mov bl, -4 ; jmp qword ptr [rax]
0x000000000040dc01 : mov byte ptr [0x645438], al ; pop rbp ; ret
0x0000000000402c91 : mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x000000000041f083 : mov byte ptr [rax - 0x3f], cl ; call 0x20479b1
0x000000000041f0c7 : mov byte ptr [rax - 0x3f], cl ; call 0x20479f5
0x000000000041f110 : mov byte ptr [rax - 0x3f], cl ; call 0x2047a3e
0x0000000000408fb7 : mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000434ef1 : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; jmp qword ptr [rdi]
0x000000000040894e : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret
0x0000000000412c9c : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x00000000004114ae : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x0000000000416d7c : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 0x92
0x0000000000414486 : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 1
0x000000000041d2a5 : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; sysenter
0x0000000000444618 : mov byte ptr [rdi - 2], dl ; call rax
0x0000000000401f53 : mov byte ptr [rip + 0x24343e], 1 ; ret
0x0000000000442c1d : mov cl, -4 ; jmp rax
0x0000000000408311 : mov dh, -0x40 ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000429b97 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000042993f : mov dh, -0x40 ; pop rbp ; ret
0x0000000000420b29 : mov dh, 0x3c ; add eax, ebp ; mov edi, 0x88fffe0e ; ret 0x8b48
0x0000000000443681 : mov dl, -4 ; call qword ptr [rax]
0x000000000040dbdd : mov dword ptr [0x645430], edi ; pop rbp ; ret
0x000000000041f080 : mov dword ptr [rax - 0x3eb77778], ecx ; call 0x20479b4
0x000000000041f0c4 : mov dword ptr [rax - 0x3eb77778], ecx ; call 0x20479f8
0x000000000041f10d : mov dword ptr [rax - 0x3eb77778], ecx ; call 0x2047a41
0x000000000043fe75 : mov dword ptr [rax], ecx ; jmp 0x43c156
0x00000000004102ea : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000410438 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004023d4 : mov dword ptr [rbp - 0x18], eax ; call 0x40e6a5
0x000000000042aecc : mov dword ptr [rbp - 0x18], eax ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000405bd3 : mov dword ptr [rbp - 0x1c], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402403 : mov dword ptr [rbp - 0x28], eax ; call 0x40e6a5
0x0000000000402419 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000409320 : mov dword ptr [rbp - 0x44], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000402307 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042abc7 : mov dword ptr [rbp - 0xc], eax ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000402335 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000415f35 : mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x0000000000423ccc : mov dword ptr [rdi], 0xffffff9c ; pop rbp ; ret
0x0000000000426122 : mov eax, 0x5b000001 ; pop rbp ; ret
0x000000000041431c : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x00000000004223e5 : mov eax, 0xf0658d48 ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000416020 : mov eax, 0xffffffff ; mov rsp, rbp ; pop rbp ; ret
0x000000000040de83 : mov eax, dword ptr [rax] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000428fa1 : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000410218 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000421f11 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040e9f4 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000428f9e : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000410215 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000416a31 : mov eax, dword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000414eca : mov eax, dword ptr [rbp - 0x10] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040e8e3 : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004105a4 : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000415e62 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040e1c2 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004102e4 : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000415494 : mov eax, dword ptr [rbp - 0x18] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040fcb7 : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004229a3 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041475d : mov eax, dword ptr [rbp - 0x20] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000420c18 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041043a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000425802 : mov eax, dword ptr [rbp - 0x30] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000409931 : mov eax, dword ptr [rbp - 0x30] ; mov rdx, qword ptr [rax + 0x28] ; call 0x405be9
0x0000000000415d18 : mov eax, dword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041431a : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000042aaed : mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000415eb0 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004259eb : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000420a06 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004067a4 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000427986 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000042523a : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040d57e : mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004168fd : mov eax, dword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000041691d : mov eax, dword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000415f1c : mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041643f : mov eax, edi ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000420ca1 : mov eax, esi ; pop rbp ; ret
0x0000000000401f7b : mov ebp, esp ; call rax
0x0000000000401ee1 : mov ebp, esp ; ja 0x401eec ; pop rbp ; ret
0x0000000000415f32 : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000404792 : mov ecx, dword ptr [rax*8 + 0x4403d0] ; jmp rcx
0x000000000040907b : mov ecx, dword ptr [rax*8 + 0x4405a0] ; jmp rcx
0x0000000000409055 : mov ecx, dword ptr [rax*8 + 0x4405e8] ; jmp rcx
0x0000000000409407 : mov ecx, dword ptr [rax*8 + 0x440618] ; jmp rcx
0x000000000040aa14 : mov ecx, dword ptr [rax*8 + 0x4406b8] ; jmp rcx
0x0000000000410c67 : mov ecx, dword ptr [rax*8 + 0x441be0] ; jmp rcx
0x0000000000411781 : mov ecx, dword ptr [rax*8 + 0x441c28] ; jmp rcx
0x0000000000417a90 : mov ecx, dword ptr [rax*8 + 0x4420e8] ; jmp rcx
0x000000000041f158 : mov ecx, dword ptr [rax*8 + 0x442398] ; jmp rcx
0x0000000000420fa2 : mov ecx, dword ptr [rax*8 + 0x4423e0] ; jmp rcx
0x0000000000431ddf : mov ecx, dword ptr [rax*8 + 0x442858] ; jmp rcx
0x000000000042cd3d : mov ecx, dword ptr [rax*8 + 0x4428e0] ; jmp rcx
0x0000000000437eec : mov ecx, dword ptr [rax*8 + 0x442910] ; jmp rcx
0x000000000043de8c : mov ecx, dword ptr [rax*8 + 0x4429e8] ; jmp rcx
0x00000000004102e7 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000403bce : mov ecx, dword ptr [rbp - 0x98] ; call rax
0x0000000000401f75 : mov edi, 0x644e20 ; mov rbp, rsp ; call rax
0x0000000000401ef2 : mov edi, 0x645340 ; jmp rax
0x0000000000401f32 : mov edi, 0x645340 ; jmp rdx
0x0000000000420b2d : mov edi, 0x88fffe0e ; ret 0x8b48
0x0000000000437717 : mov edi, 0xe9ffffdc ; ret
0x00000000004168f9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000416919 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000440327 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000440326 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000409935 : mov edx, dword ptr [rax + 0x28] ; call 0x405be5
0x0000000000416b36 : mov edx, dword ptr [rbp - 0x18] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000407f61 : mov edx, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406680 : mov edx, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000416a35 : mov edx, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000401f30 : mov esi, eax ; mov edi, 0x645340 ; jmp rdx
0x0000000000403bcc : mov esi, ecx ; mov ecx, dword ptr [rbp - 0x98] ; call rax
0x0000000000409322 : mov esp, 0x50c48348 ; pop rbp ; ret
0x0000000000443eec : mov esp, 0x7000000d ; sub edi, ebp ; call qword ptr [rax]
0x0000000000405efb : mov esp, ebp ; pop rbp ; ret
0x000000000040dbdc : mov qword ptr [0x645430], rdi ; pop rbp ; ret
0x000000000043fe74 : mov qword ptr [rax], rcx ; jmp 0x43c157
0x00000000004023d3 : mov qword ptr [rbp - 0x18], rax ; call 0x40e6a6
0x000000000042aecb : mov qword ptr [rbp - 0x18], rax ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000402402 : mov qword ptr [rbp - 0x28], rax ; call 0x40e6a6
0x0000000000415f34 : mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000409321 : mov r12d, 0x50c48348 ; pop rbp ; ret
0x000000000041431b : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x000000000040de82 : mov rax, qword ptr [rax] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000421f10 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040e9f3 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000410214 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000416a30 : mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000414ec9 : mov rax, qword ptr [rbp - 0x10] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040e8e2 : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000421e1e : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040e1c1 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000415493 : mov rax, qword ptr [rbp - 0x18] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040fcb6 : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004229a2 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000420c17 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000415d17 : mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000420a05 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004067a3 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000427985 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000425239 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040d57d : mov rax, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004168fc : mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000041691c : mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000401f7a : mov rbp, rsp ; call rax
0x0000000000401ee0 : mov rbp, rsp ; ja 0x401eed ; pop rbp ; ret
0x0000000000415f31 : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000404791 : mov rcx, qword ptr [rax*8 + 0x4403d0] ; jmp rcx
0x000000000040907a : mov rcx, qword ptr [rax*8 + 0x4405a0] ; jmp rcx
0x0000000000409054 : mov rcx, qword ptr [rax*8 + 0x4405e8] ; jmp rcx
0x0000000000409406 : mov rcx, qword ptr [rax*8 + 0x440618] ; jmp rcx
0x000000000040aa13 : mov rcx, qword ptr [rax*8 + 0x4406b8] ; jmp rcx
0x0000000000410c66 : mov rcx, qword ptr [rax*8 + 0x441be0] ; jmp rcx
0x0000000000411780 : mov rcx, qword ptr [rax*8 + 0x441c28] ; jmp rcx
0x0000000000417a8f : mov rcx, qword ptr [rax*8 + 0x4420e8] ; jmp rcx
0x000000000041f157 : mov rcx, qword ptr [rax*8 + 0x442398] ; jmp rcx
0x0000000000420fa1 : mov rcx, qword ptr [rax*8 + 0x4423e0] ; jmp rcx
0x0000000000431dde : mov rcx, qword ptr [rax*8 + 0x442858] ; jmp rcx
0x000000000042cd3c : mov rcx, qword ptr [rax*8 + 0x4428e0] ; jmp rcx
0x0000000000437eeb : mov rcx, qword ptr [rax*8 + 0x442910] ; jmp rcx
0x000000000043de8b : mov rcx, qword ptr [rax*8 + 0x4429e8] ; jmp rcx
0x00000000004168f8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000416918 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000409934 : mov rdx, qword ptr [rax + 0x28] ; call 0x405be6
0x0000000000416b35 : mov rdx, qword ptr [rbp - 0x18] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000407f60 : mov rdx, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040667f : mov rdx, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000416a34 : mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000401f2f : mov rsi, rax ; mov edi, 0x645340 ; jmp rdx
0x0000000000403bcb : mov rsi, rcx ; mov ecx, dword ptr [rbp - 0x98] ; call rax
0x0000000000405efa : mov rsp, rbp ; pop rbp ; ret
0x00000000004431d4 : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0xf], ch ; sti ; jmp rdx
0x00000000004440d4 : movsb byte ptr [rdi], byte ptr [rsi] ; sldt word ptr [rax] ; test al, -0x22 ; std ; jmp rcx
0x000000000043748c : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x000000000040f6c4 : movsx eax, al ; pop rbp ; ret
0x0000000000437afe : movsx eax, cl ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000444759 : movsxd rdi, esi ; call rsp
0x0000000000408310 : movzx eax, al ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000429b96 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000042993e : movzx eax, al ; pop rbp ; ret
0x00000000004167b4 : movzx eax, ax ; mov rsp, rbp ; pop rbp ; ret
0x0000000000408fba : movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000442ed4 : nop ; hlt ; std ; jmp rax
0x0000000000442cd4 : nop ; sbb edi, ebp ; call rax
0x0000000000442b74 : nop ; xor esp, edi ; jmp qword ptr [rax]
0x0000000000440348 : nop dword ptr [rax + rax] ; ret
0x0000000000443e2d : or al, 0 ; add al, al ; sub bh, ch ; call qword ptr [rdx]
0x0000000000443d4d : or al, 0 ; add al, dl ; std ; jmp qword ptr [rdi]
0x0000000000409056 : or al, 0xffffffffffffffc5 ; call 0xffffffffff40d468
0x0000000000417a91 : or al, 0xffffffffffffffc5 ; call 0xffffffffff41bebe
0x000000000043de8d : or al, 0xffffffffffffffc5 ; call 0xffffffffff4422c3
0x0000000000442c19 : or al, byte ptr [rax] ; add byte ptr [rax], ah ; mov cl, -4 ; jmp rax
0x0000000000420035 : or al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000425612 : or al, ch ; ret
0x00000000004144e9 : or byte ptr [r15], cl ; xchg eax, ebp ; ret 0x348b
0x00000000004128b3 : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000043ba9c : or byte ptr [r8 - 0x75], cl ; adc byte ptr [rax - 0x7f], cl ; ret 0x10
0x000000000043f6db : or byte ptr [r8 - 0x75], cl ; adc byte ptr [rax - 0x7f], cl ; ret 0x20
0x00000000004128b4 : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000043ba9d : or byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7f], cl ; ret 0x10
0x000000000043f6dc : or byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7f], cl ; ret 0x20
0x0000000000408590 : or byte ptr [rax - 0x75], cl ; fmul dword ptr [r8 - 0x77] ; ret 0x8148
0x0000000000438d38 : or byte ptr [rax - 0x75], cl ; push rcx ; or byte ptr [rax - 0x7d], cl ; ret 0x480f
0x0000000000438d3c : or byte ptr [rax - 0x7d], cl ; ret 0x480f
0x0000000000416be4 : or byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000429c5c : or byte ptr [rcx + 0x2038], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x000000000042a09c : or byte ptr [rcx + 0x2138], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x00000000004218cd : or byte ptr [rcx + 0x28f9], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x00000000004038fb : or byte ptr [rcx + 0x2ef9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x00000000004299ac : or byte ptr [rcx + 0x3038], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x0000000000401fec : or byte ptr [rcx + 0x38], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x00000000004040ca : or byte ptr [rcx + 0x41f9], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x0000000000429f9c : or byte ptr [rcx + 0x6138], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x0000000000403ffb : or byte ptr [rcx + 0x66f9], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x00000000004277a3 : or byte ptr [rcx + 0x73f9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x0000000000416e71 : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x0000000000437c67 : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x00000000004144ea : or byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x000000000041585d : or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x00000000004158ff : or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x000000000043fe76 : or cl, ch ; salc ; ret 0xffff
0x00000000004437a0 : or dl, 0xfc ; call rbx
0x0000000000443a65 : or dword ptr [rax], eax ; add byte ptr [rax + 0x19], bl ; std ; call qword ptr [rdi]
0x0000000000442cd1 : or eax, 0x1b900000 ; std ; call rax
0x0000000000442ce1 : or eax, 0x22e00000 ; std ; call qword ptr [rax]
0x0000000000443e4d : or eax, 0x2ac00000 ; std ; call qword ptr [rdx]
0x0000000000443eed : or eax, 0x2b700000 ; std ; call qword ptr [rax]
0x000000000042266f : or eax, 0x48fffff9 ; add esp, 0x30 ; pop rbp ; ret
0x0000000000442c29 : or eax, dword ptr [rax] ; add al, dl ; mov bl, -4 ; jmp qword ptr [rax]
0x000000000041076d : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040f38c : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040924f : or ecx, ebp ; ret 0
0x0000000000444179 : out -3, eax ; call rcx
0x0000000000420c9c : out dx, al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, esi ; pop rbp ; ret
0x0000000000405da3 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000044033c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040e5dc : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405da5 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000044033e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405da7 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000440340 : pop r14 ; pop r15 ; ret
0x0000000000402fb1 : pop r14 ; pop rbp ; ret
0x0000000000405da9 : pop r15 ; pop rbp ; ret
0x0000000000440342 : pop r15 ; ret
0x000000000043777d : pop rax ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; xor cl, ch ; jmp rax
0x0000000000425604 : pop rax ; ret
0x0000000000443a68 : pop rax ; sbb ebp, edi ; call qword ptr [rdi]
0x0000000000401f52 : pop rbp ; mov byte ptr [rip + 0x24343e], 1 ; ret
0x0000000000401ef1 : pop rbp ; mov edi, 0x645340 ; jmp rax
0x0000000000401f2e : pop rbp ; mov rsi, rax ; mov edi, 0x645340 ; jmp rdx
0x000000000044033b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405da6 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000044033f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401ee5 : pop rbp ; ret
0x000000000040e5db : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000414cdb : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000402fb0 : pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040de89 : pop rbx ; pop rbp ; ret
0x0000000000405daa : pop rdi ; pop rbp ; ret
0x0000000000440343 : pop rdi ; ret
0x000000000042a471 : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x0000000000429b31 : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x00000000004434d1 : pop rdx ; cld ; call qword ptr [rax]
0x0000000000405da8 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000440341 : pop rsi ; pop r15 ; ret
0x0000000000402fb2 : pop rsi ; pop rbp ; ret
0x000000000044348c : pop rsp ; add eax, dword ptr [rax] ; add byte ptr [rax + 0x53], al ; cld ; jmp qword ptr [rbx]
0x0000000000405da4 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000044033d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040e5dd : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004299b4 : popfq ; ret 0x348b
0x0000000000403e34 : popfq ; ret 0xc8b
0x0000000000420034 : push 0x5b00000a ; pop rbp ; ret
0x0000000000442d0f : push qword ptr [rax - 0x2ffffff2] ; std ; call rax
0x0000000000442b97 : push qword ptr [rax - 0x5ffffff8] ; cmp edi, esp ; call rax
0x0000000000442ccf : push qword ptr [rax - 0x6ffffff3] ; sbb edi, ebp ; call rax
0x00000000004168fe : push r8 ; pop rbp ; ret
0x000000000041e251 : push rax ; adc al, -0x7f ; ret 0x76c
0x0000000000427303 : push rax ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000442b24 : push rax ; clc ; sti ; jmp rax
0x0000000000442cdf : push rax ; or eax, 0x22e00000 ; std ; call qword ptr [rax]
0x000000000040876f : push rax ; pop rbp ; ret
0x000000000040988c : push rax ; ret
0x000000000041c398 : push rax ; sbb al, -0x7f ; ret 1
0x0000000000442f97 : push rax ; sbb byte ptr [rax], al ; add al, dh ; xor bh, dh ; call qword ptr [rax]
0x000000000042e646 : push rbp ; add byte ptr fs:[rbp - 0x77], al ; ret
0x0000000000402f5c : push rbp ; add byte ptr fs:[rbp - 0x77], al ; ret 0x8141
0x0000000000420cd0 : push rbp ; add byte ptr fs:[rcx - 0x77], al ; ret
0x00000000004067f0 : push rbp ; add byte ptr fs:[rcx - 0x77], al ; ret 0x8141
0x0000000000407f62 : push rbp ; clc ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406681 : push rbp ; clc ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000416a36 : push rbp ; clc ; pop rbp ; ret
0x00000000004128b7 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000401f74 : push rbp ; mov edi, 0x644e20 ; mov rbp, rsp ; call rax
0x0000000000415f30 : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000041424e : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000405ef7 : push rbx ; add byte ptr fs:[rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000443491 : push rbx ; cld ; jmp qword ptr [rbx]
0x0000000000438d3b : push rcx ; or byte ptr [rax - 0x7d], cl ; ret 0x480f
0x00000000004023d0 : push rsp ; add byte ptr fs:[rax - 0x77], cl ; call 0x102e8cc
0x00000000004023ff : push rsp ; add byte ptr fs:[rax - 0x77], cl ; fsubr st(0) ; xchg eax, ebp ; ret 0
0x00000000004434cc : pushfq ; add eax, dword ptr [rax] ; add al, ah ; pop rdx ; cld ; call qword ptr [rax]
0x0000000000402c90 : pushfq ; mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x0000000000402f87 : pushfq ; ret
0x000000000042e7a3 : pushfq ; ret 0x348b
0x000000000040fb58 : pushfq ; ret 0x844
0x000000000040202a : pushfq ; ret 0x845
0x000000000042e865 : pushfq ; ret 0xc8b
0x0000000000406aac : pushfq ; ret 0xd108
0x0000000000420b6f : pushfq ; rol dword ptr [rax + rcx - 0x36], -0xa ; ret 0xf01
0x0000000000442ed0 : rcl byte ptr [rip - 0xb700000], -3 ; jmp rax
0x0000000000442f10 : rcl byte ptr [rsi], 0 ; add byte ptr [rax], dh ; add dh, bh ; jmp rax
0x0000000000443008 : rcr byte ptr [rdx], 0 ; add al, dl ; jo 0x443014 ; jmp rax
0x00000000004009e8 : ret
0x00000000004023d9 : ret 0
0x0000000000438c43 : ret 0x10
0x0000000000401fb0 : ret 0x125
0x0000000000412ca5 : ret 0x13
0x0000000000404b77 : ret 0x13e8
0x000000000043daf2 : ret 0x1689
0x000000000040486c : ret 0x1ee8
0x0000000000439b60 : ret 0x20
0x000000000040542a : ret 0x20e8
0x0000000000405567 : ret 0x23e8
0x0000000000401d52 : ret 0x2434
0x0000000000401b52 : ret 0x2435
0x0000000000401942 : ret 0x2436
0x00000000004114b7 : ret 0x2a
0x0000000000405c5e : ret 0x2ce8
0x0000000000434864 : ret 0x2d
0x000000000040fbdf : ret 0x30
0x0000000000401ff5 : ret 0x348b
0x00000000004071c3 : ret 0x4001
0x0000000000403a4a : ret 0x40e8
0x0000000000442311 : ret 0x41
0x0000000000442890 : ret 0x432e
0x0000000000424dce : ret 0x4401
0x0000000000402187 : ret 0x440d
0x0000000000410de2 : ret 0x4420
0x0000000000405296 : ret 0x44e8
0x0000000000404944 : ret 0x46e8
0x0000000000404cf3 : ret 0x4801
0x0000000000438d3f : ret 0x480f
0x00000000004247f0 : ret 0x48b
0x0000000000428323 : ret 0x48e0
0x0000000000402c1b : ret 0x48f0
0x00000000004155d7 : ret 0x4cc0
0x000000000040688a : ret 0x4cf0
0x00000000004092c5 : ret 0x4d8b
0x000000000042f8ad : ret 0x50
0x0000000000424f9e : ret 0x5588
0x000000000041a2d1 : ret 0x5c
0x00000000004165db : ret 0x6601
0x000000000041f098 : ret 0x6948
0x0000000000404f1f : ret 0x6be8
0x000000000043687d : ret 0x6de8
0x0000000000409616 : ret 0x74e8
0x000000000041e254 : ret 0x76c
0x00000000004128d0 : ret 0x7ae8
0x0000000000405c0e : ret 0x7ce8
0x0000000000425ae5 : ret 0x8041
0x0000000000405b0a : ret 0x80e8
0x0000000000402f61 : ret 0x8141
0x0000000000408597 : ret 0x8148
0x000000000040fb59 : ret 0x844
0x000000000040202b : ret 0x845
0x0000000000405705 : ret 0x85e8
0x0000000000403942 : ret 0x8801
0x00000000004045b7 : ret 0x8901
0x00000000004173e4 : ret 0x8948
0x0000000000407629 : ret 0x8949
0x0000000000412c2c : ret 0x89a5
0x000000000040e2df : ret 0x8b44
0x0000000000404f53 : ret 0x8b48
0x000000000042e62a : ret 0x8b4c
0x000000000041dd1a : ret 0x8d0f
0x0000000000416d85 : ret 0x92
0x0000000000417837 : ret 0x9589
0x0000000000430ff2 : ret 0x98e8
0x0000000000404e81 : ret 0x9e8
0x000000000042677e : ret 0xb
0x0000000000402858 : ret 0xb0
0x0000000000404ad5 : ret 0xb5e8
0x00000000004057cb : ret 0xbfe8
0x0000000000401f15 : ret 0xc148
0x0000000000419be8 : ret 0xc2f6
0x0000000000403904 : ret 0xc8b
0x000000000041f089 : ret 0xca01
0x000000000042ebae : ret 0xca20
0x0000000000405bbe : ret 0xcce8
0x0000000000406aad : ret 0xd108
0x0000000000415c7c : ret 0xd284
0x0000000000409ab3 : ret 0xd7e8
0x0000000000415902 : ret 0xd8e8
0x00000000004053a9 : ret 0xe1e8
0x0000000000424061 : ret 0xe280
0x0000000000401fa7 : ret 0xea81
0x000000000041419c : ret 0xee8
0x0000000000405a5b : ret 0xefe8
0x000000000043f20e : ret 0xf
0x0000000000402b1b : ret 0xf01
0x0000000000405999 : ret 0xf1e8
0x000000000041dea0 : ret 0xf40
0x0000000000402b0c : ret 0xf981
0x0000000000402a6b : ret 0xfa81
0x000000000043316a : ret 0xfce9
0x0000000000430f7b : ret 0xfe8
0x0000000000419bdb : ret 0xfe81
0x00000000004150ca : ret 0xfec8
0x000000000043694a : ret 0xff42
0x0000000000420b66 : ret 0xff81
0x0000000000420735 : ret 0xffd3
0x0000000000428369 : ret 0xfff6
0x0000000000443721 : ret 0xfffc
0x000000000042067e : ret 0xffff
0x000000000040859a : ret 1
0x0000000000401fda : ret 2
0x0000000000438b5c : ret 4
0x000000000041d7e0 : ret 7
0x0000000000414252 : ret 8
0x0000000000406243 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x0000000000442b60 : rol byte ptr [rdi], 0 ; add al, dh ; xor ah, bh ; jmp rax
0x0000000000442b20 : rol byte ptr [rsi], 0 ; add byte ptr [rax - 8], dl ; sti ; jmp rax
0x0000000000420b70 : rol dword ptr [rax + rcx - 0x36], -0xa ; ret 0xf01
0x0000000000421ad3 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000401f1c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401f2b ; pop rbp ; ret
0x00000000004167b6 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x0000000000421ad4 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000408312 : ror byte ptr [rax - 0x7d], -0x3c ; jo 0x40837b ; ret
0x00000000004045da : ror byte ptr [rax - 0x7f], -0x3c ; add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041424f : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000040858e : ror byte ptr [rdx + 0x458b4808], 1 ; fmul dword ptr [rax - 0x77] ; ret 0x8148
0x0000000000442c18 : ror byte ptr [rdx], 0 ; add byte ptr [rax], ah ; mov cl, -4 ; jmp rax
0x0000000000434e30 : ror dword ptr [rdi], -0x6b ; ret 0x348b
0x000000000042ebab : ror dword ptr [rdi], -0x6c ; ret 0xca20
0x000000000042a476 : sahf ; ret 0x5588
0x0000000000404003 : sahf ; ret 0xc8b
0x000000000044300c : sal byte ptr [rax - 2], 1 ; jmp rax
0x0000000000411744 : sal dh, cl ; ret 0x8901
0x0000000000442308 : sal esp, 0x41 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, al ; ret 0x41
0x000000000043fe8b : salc ; ret
0x000000000043fe78 : salc ; ret 0xffff
0x00000000004048b0 : sar bh, 1 ; dec dword ptr [rax - 0x73] ; cmp al, 0x25 ; ret
0x0000000000442ee4 : sar bl, 1 ; std ; jmp qword ptr [rax]
0x000000000040493e : sar dh, -1 ; dec dword ptr [rax - 0x77] ; ret 0x46e8
0x0000000000401f1e : sar eax, 1 ; jne 0x401f29 ; pop rbp ; ret
0x0000000000420679 : sar edi, -1 ; jmp 0x41c959
0x000000000043fe5b : sar edi, -1 ; jmp 0x43c09b
0x0000000000401f1d : sar rax, 1 ; jne 0x401f2a ; pop rbp ; ret
0x000000000041c399 : sbb al, -0x7f ; ret 1
0x0000000000443059 : sbb al, 0 ; add byte ptr [rax], al ; jge 0x443063 ; jmp qword ptr [rax]
0x000000000040aaa1 : sbb al, 0 ; add cl, ch ; ret
0x0000000000443d4c : sbb al, 0xc ; add byte ptr [rax], al ; shl byte ptr [rsi], 1 ; std ; jmp qword ptr [rdi]
0x0000000000443e4c : sbb al, 0xd ; add byte ptr [rax], al ; shr byte ptr [rdx], -3 ; call qword ptr [rdx]
0x0000000000443009 : sbb al, byte ptr [rax] ; add al, dl ; jo 0x443013 ; jmp rax
0x0000000000442f99 : sbb byte ptr [rax], al ; add al, dh ; xor bh, dh ; call qword ptr [rax]
0x00000000004109e0 : sbb cl, byte ptr [rcx - 0x7f] ; ret
0x0000000000429157 : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000443a69 : sbb ebp, edi ; call qword ptr [rdi]
0x0000000000442cd5 : sbb edi, ebp ; call rax
0x0000000000414c7d : scasd eax, dword ptr [rdi] ; ret
0x0000000000401faf : scasd eax, dword ptr [rdi] ; ret 0x125
0x0000000000402f6b : scasd eax, dword ptr [rdi] ; ret 0x8141
0x0000000000442d14 : shl byte ptr [rsi], 1 ; std ; call rax
0x0000000000443d50 : shl byte ptr [rsi], 1 ; std ; jmp qword ptr [rdi]
0x0000000000402a69 : shl dword ptr [rcx], 1 ; ret 0xfa81
0x0000000000443e30 : shr byte ptr [rdx], -3 ; call qword ptr [rdx]
0x00000000004440d5 : sldt word ptr [rax] ; test al, -0x22 ; std ; jmp rcx
0x00000000004040cc : stc ; add byte ptr [r8], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x0000000000405fca : stc ; add byte ptr [rax - 0x6bf10000], ah ; ret 0xc8b
0x0000000000403ffd : stc ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x00000000004038fd : stc ; add byte ptr cs:[rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x000000000042a470 : stc ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x0000000000429b30 : stc ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x0000000000405ef6 : stc ; push rbx ; add byte ptr fs:[rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000442ce6 : std ; call qword ptr [rax]
0x0000000000443a6a : std ; call qword ptr [rdi]
0x0000000000443e32 : std ; call qword ptr [rdx]
0x0000000000442cd6 : std ; call rax
0x000000000044417a : std ; call rcx
0x000000000044409a : std ; call rsp
0x00000000004255df : std ; dec dword ptr [rax - 0x73] ; clc ; pop rbx ; pop rbp ; ret
0x0000000000442e9e : std ; inc dword ptr [rax] ; adc eax, 0xed600000 ; std ; jmp qword ptr [rax]
0x0000000000442ece : std ; inc eax ; adc eax, 0xf4900000 ; std ; jmp rax
0x0000000000442ea6 : std ; jmp qword ptr [rax]
0x0000000000443d52 : std ; jmp qword ptr [rdi]
0x0000000000442ed6 : std ; jmp rax
0x00000000004440da : std ; jmp rcx
0x0000000000442d0e : std ; push qword ptr [rax - 0x2ffffff2] ; std ; call rax
0x0000000000442cce : std ; push qword ptr [rax - 0x6ffffff3] ; sbb edi, ebp ; call rax
0x0000000000442cde : std ; push rax ; or eax, 0x22e00000 ; std ; call qword ptr [rax]
0x000000000042993b : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000442b26 : sti ; jmp rax
0x00000000004431da : sti ; jmp rdx
0x0000000000442ee5 : sti ; std ; jmp qword ptr [rax]
0x0000000000443e31 : sub bh, ch ; call qword ptr [rdx]
0x0000000000443ef1 : sub edi, ebp ; call qword ptr [rax]
0x0000000000420c9b : sub esi, 1 ; mov eax, esi ; pop rbp ; ret
0x00000000004403b1 : sub esp, 8 ; add rsp, 8 ; ret
0x00000000004403b0 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000041d2ae : sysenter
0x00000000004440d8 : test al, -0x22 ; std ; jmp rcx
0x00000000004430c0 : test al, 0x1d ; add byte ptr [rax], al ; add byte ptr [rbx - 1], dh ; call rax
0x000000000044034a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000434ef4 : test dword ptr [rip - 0x17000000], eax ; jmp qword ptr [rdi]
0x0000000000408951 : test dword ptr [rip - 0x17000000], eax ; ret
0x0000000000412c9f : test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x00000000004114b1 : test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x000000000043485e : test dword ptr [rip - 0x17000000], eax ; ret 0x2d
0x0000000000416d7f : test dword ptr [rip - 0x17000000], eax ; ret 0x92
0x0000000000426778 : test dword ptr [rip - 0x17000000], eax ; ret 0xb
0x000000000043f208 : test dword ptr [rip - 0x17000000], eax ; ret 0xf
0x000000000041259c : test dword ptr [rip - 0x17000000], eax ; ret 1
0x0000000000401fd4 : test dword ptr [rip - 0x17000000], eax ; ret 2
0x000000000041d2a8 : test dword ptr [rip - 0x17000000], eax ; sysenter
0x00000000004227c3 : test eax, 0x48fffffc ; add esp, 0x10 ; pop rbp ; ret
0x00000000004150c5 : test eax, 0xe8000000 ; ret 0xfec8
0x000000000042ebaa : wait ; ror dword ptr [rdi], -0x6c ; ret 0xca20
0x00000000004075f8 : xchg eax, ebp ; ret
0x0000000000402407 : xchg eax, ebp ; ret 0
0x0000000000401ff4 : xchg eax, ebp ; ret 0x348b
0x0000000000425ae4 : xchg eax, ebp ; ret 0x8041
0x00000000004221a2 : xchg eax, ebp ; ret 0x8b44
0x0000000000416e79 : xchg eax, ebp ; ret 0xc8b
0x0000000000424060 : xchg eax, ebp ; ret 0xe280
0x0000000000420a80 : xchg eax, edi ; ret 0x348b
0x0000000000430366 : xchg eax, edi ; ret 0x8b44
0x0000000000416fc9 : xchg eax, edx ; ret 0x348b
0x000000000040515c : xchg eax, esi ; ret 0x348b
0x0000000000402c85 : xchg eax, esp ; ret
0x000000000040eb49 : xchg eax, esp ; ret 0x348b
0x00000000004247ef : xchg eax, esp ; ret 0x48b
0x0000000000424f9d : xchg eax, esp ; ret 0x5588
0x0000000000403930 : xchg eax, esp ; ret 0x8141
0x000000000040e2de : xchg eax, esp ; ret 0x8b44
0x0000000000403903 : xchg eax, esp ; ret 0xc8b
0x000000000042ebad : xchg eax, esp ; ret 0xca20
0x0000000000415c7b : xchg eax, esp ; ret 0xd284
0x0000000000402b0b : xchg eax, esp ; ret 0xf981
0x0000000000419bda : xchg eax, esp ; ret 0xfe81
0x0000000000420b65 : xchg eax, esp ; ret 0xff81
0x0000000000442b65 : xor ah, bh ; jmp rax
0x0000000000401f56 : xor al, 0x24 ; add byte ptr [rcx], al ; ret
0x0000000000443a64 : xor al, 9 ; add byte ptr [rax], al ; pop rax ; sbb ebp, edi ; call qword ptr [rdi]
0x0000000000444881 : xor bh, bh ; call rbx
0x0000000000442f9d : xor bh, dh ; call qword ptr [rax]
0x0000000000415857 : xor byte ptr [rax - 0x75], cl ; add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x00000000004158f9 : xor byte ptr [rax - 0x75], cl ; add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x000000000040eb43 : xor byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x0000000000442d24 : xor byte ptr [rdi], ah ; std ; call qword ptr [rax]
0x000000000040cbd3 : xor byte ptr [rsi], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040dbe0 : xor byte ptr [rsp], dl ; pop rbp ; ret
0x0000000000437783 : xor cl, ch ; jmp rax
0x0000000000410436 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000442b75 : xor esp, edi ; jmp qword ptr [rax]
