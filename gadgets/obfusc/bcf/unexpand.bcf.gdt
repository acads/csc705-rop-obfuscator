0x000000000040da87 : adc byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; jmp qword ptr [rbx]
0x0000000000402d6d : add al, ch ; mov ebp, 0xe9ffffe8 ; ret
0x00000000004051e8 : add al, ch ; ret
0x0000000000401c28 : add al, ch ; ret 0xfff7
0x0000000000405348 : add al, ch ; xchg eax, edx ; ret 0xffff
0x000000000041158f : add bl, dh ; ret
0x00000000004053a5 : add byte ptr [r8 - 0x75], cl ; jge 0x40539b ; call 0x401618
0x00000000004103bb : add byte ptr [r8], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x0000000000401c9c : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x00000000004053a6 : add byte ptr [rax - 0x75], cl ; jge 0x40539a ; call 0x401617
0x000000000040ca30 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000040df72 : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000402647 : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000041158d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000401c9a : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x000000000040e128 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000402645 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000041158b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004120db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000411429 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x000000000041158c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000405b35 : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x8141
0x000000000040abb8 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000404bf1 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000401b89 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret
0x000000000040761b : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x844
0x00000000004017f5 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x000000000040bc3a : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x0000000000401fac : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x125
0x000000000040eb2f : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x0000000000401fba : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000401b7e : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x000000000040ab58 : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x51], al ; ret
0x00000000004102f0 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x00000000004103bc : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x0000000000401fc4 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret
0x000000000040b566 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x0000000000410db2 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x0000000000410472 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x000000000040eb9c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret
0x000000000040177b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x125
0x00000000004017c0 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x000000000040d0fe : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x000000000040eeb6 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x000000000040c831 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x0000000000404999 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004105a0 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x0000000000407611 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x0000000000402171 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x000000000040bb57 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004017a6 : add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000408b81 : add byte ptr [rax], al ; add cl, ch ; ret 0x13
0x0000000000407393 : add byte ptr [rax], al ; add cl, ch ; ret 0x2a
0x000000000040f43a : add byte ptr [rax], al ; add cl, ch ; ret 0xb
0x000000000040847e : add byte ptr [rax], al ; add cl, ch ; ret 1
0x000000000040558f : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403d68 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403a85 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004012bb : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004013b9 : add byte ptr [rax], al ; jmp 0x4012d9
0x0000000000406482 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000041142b : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000412d6a : add byte ptr [rax], al ; mov esp, 0x30000005 ; test edi, edi ; call qword ptr [rdi]
0x00000000004060f2 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040e129 : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004133e6 : add byte ptr [rax], al ; pop rax ; loopne 0x4133ef ; call rsp
0x000000000040ca80 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040abb9 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000404bf2 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000409de1 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000041158e : add byte ptr [rax], al ; ret
0x00000000004133e2 : add byte ptr [rax], al ; xor al, 0xc ; add byte ptr [rax], al ; pop rax ; loopne 0x4133f3 ; call rsp
0x0000000000412532 : add byte ptr [rax], al ; xor byte ptr [rdx - 1], al ; call rax
0x000000000041247b : add byte ptr [rax], dh ; idiv dh ; jmp rax
0x000000000041272b : add byte ptr [rax], dh ; out -1, al ; call rax
0x0000000000412d6f : add byte ptr [rax], dh ; test edi, edi ; call qword ptr [rdi]
0x0000000000405b37 : add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x8141
0x0000000000405b2d : add byte ptr [rbp - 0x77], al ; ret 0x8141
0x000000000040abba : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000404bf3 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000409de2 : add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004049ed : add byte ptr [rbx - 0x834b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000404bc5 : add byte ptr [rbx - 0x8b4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004049a5 : add byte ptr [rcx + 0xf], al ; pushfq ; mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x0000000000401b8b : add byte ptr [rcx + 0xf], al ; pushfq ; ret
0x000000000040761d : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x844
0x00000000004017f7 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x000000000040bc3c : add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x0000000000401fae : add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x125
0x000000000040eb31 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x0000000000401fbc : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000401b80 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x000000000040af2c : add byte ptr [rcx + 0xfe], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040b768 : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040760d : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x000000000040216d : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x000000000040bc32 : add byte ptr [rcx - 0x77], al ; ret
0x0000000000401fa4 : add byte ptr [rcx - 0x77], al ; ret 0x8141
0x0000000000401728 : add byte ptr [rcx], al ; ret
0x000000000040ab5a : add byte ptr [rdi + rcx - 0x51], al ; ret
0x00000000004102f2 : add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x00000000004103be : add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x0000000000401fc6 : add byte ptr [rdi], cl ; pushfq ; ret
0x000000000040b568 : add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x0000000000410db4 : add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x0000000000410474 : add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x000000000040eb9e : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret
0x000000000040177d : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x125
0x00000000004017c2 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x000000000040d100 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x000000000040eeb8 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x000000000040c833 : add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x000000000040499b : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004105a2 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x0000000000407613 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x0000000000402173 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x000000000040bb59 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004133e3 : add byte ptr [rsp + rcx], dh ; add byte ptr [rax], al ; pop rax ; loopne 0x4133f2 ; call rsp
0x00000000004017a8 : add cl, ch ; ret
0x0000000000408b83 : add cl, ch ; ret 0x13
0x0000000000407395 : add cl, ch ; ret 0x2a
0x000000000040f43c : add cl, ch ; ret 0xb
0x0000000000408480 : add cl, ch ; ret 1
0x000000000040b73a : add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x000000000040b7dc : add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x000000000040ffc4 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000409de0 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004104d5 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000041027d : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000405619 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret
0x0000000000408b7d : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x000000000040738f : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x000000000040f436 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0xb
0x000000000040847a : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 1
0x0000000000403219 : add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0x348b
0x0000000000401724 : add eax, 0x212bae ; add ebx, esi ; ret
0x00000000004017a5 : add eax, 0xe9000000 ; ret
0x0000000000408b80 : add eax, 0xe9000000 ; ret 0x13
0x0000000000407392 : add eax, 0xe9000000 ; ret 0x2a
0x000000000040f439 : add eax, 0xe9000000 ; ret 0xb
0x000000000040847d : add eax, 0xe9000000 ; ret 1
0x0000000000412479 : add eax, dword ptr [rax] ; add byte ptr [rax], dh ; idiv dh ; jmp rax
0x00000000004016eb : add eax, edx ; sar rax, 1 ; jne 0x4016fc ; pop rbp ; ret
0x0000000000401729 : add ebx, esi ; ret
0x00000000004029f9 : add ecx, dword ptr [rax + 1] ; ret 0x8948
0x0000000000401a7b : add esp, 0x10 ; pop rbp ; ret
0x0000000000409ddd : add esp, 0x178 ; pop rbx ; pop rbp ; ret
0x000000000040cc1c : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000403d6b : add esp, 0x20 ; pop rbp ; ret
0x0000000000403a88 : add esp, 0x30 ; pop rbp ; ret
0x0000000000405f71 : add esp, 0x40 ; pop rbp ; ret
0x000000000040c75f : add esp, 0x40 ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040ae4c : add esp, 0x50 ; pop rbp ; ret
0x000000000040b172 : add esp, 0x70 ; pop rbp ; ret
0x000000000040a1fe : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040ca7c : add esp, 0xb0 ; pop rbp ; ret
0x00000000004012be : add esp, 8 ; ret
0x0000000000401c27 : add r8b, bpl ; ret 0xfff7
0x00000000004016ea : add rax, rdx ; sar rax, 1 ; jne 0x4016fd ; pop rbp ; ret
0x0000000000401a7a : add rsp, 0x10 ; pop rbp ; ret
0x0000000000409ddc : add rsp, 0x178 ; pop rbx ; pop rbp ; ret
0x000000000040cc1b : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000403d6a : add rsp, 0x20 ; pop rbp ; ret
0x0000000000403a87 : add rsp, 0x30 ; pop rbp ; ret
0x0000000000405f70 : add rsp, 0x40 ; pop rbp ; ret
0x000000000040c75e : add rsp, 0x40 ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040ae4b : add rsp, 0x50 ; pop rbp ; ret
0x000000000040b171 : add rsp, 0x70 ; pop rbp ; ret
0x000000000040a1fd : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040ca7b : add rsp, 0xb0 ; pop rbp ; ret
0x00000000004012bd : add rsp, 8 ; ret
0x00000000004104d4 : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000041027c : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040e1ca : and byte ptr [r15], cl ; xchg eax, esp ; ret 0x348b
0x000000000040bf06 : and byte ptr [rcx], al ; jmp rcx
0x000000000040e1cb : and byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x0000000000401727 : and dword ptr [rax], eax ; add ebx, esi ; ret
0x000000000040b867 : and eax, 0x48ffffee ; add esp, 0x20 ; pop rbp ; ret
0x0000000000405342 : and eax, 0x614318 ; mov al, 0 ; call 0x4015e9
0x00000000004053ef : and eax, 0x614328 ; pop rbp ; ret
0x0000000000405413 : and eax, 0x614330 ; pop rbp ; ret
0x00000000004053aa : call 0x2b49a
0x000000000040be4c : call 0x401509
0x0000000000405349 : call 0x4015e2
0x00000000004053ab : call 0x401612
0x0000000000402d6e : call 0x401636
0x0000000000402d70 : call 0xffffffffc42a2d78
0x000000000040a079 : call 0xffffffffe90329c9
0x000000000040a078 : call 0xffffffffe90329ca
0x0000000000411569 : call qword ptr [r12 + rbx*8]
0x00000000004124c7 : call qword ptr [rax]
0x00000000004128cb : call qword ptr [rcx]
0x0000000000412d73 : call qword ptr [rdi]
0x000000000041296b : call qword ptr [rsi]
0x000000000041156a : call qword ptr [rsp + rbx*8]
0x000000000040174d : call rax
0x0000000000412aab : call rbx
0x0000000000413063 : call rcx
0x00000000004127fb : call rsi
0x0000000000412f83 : call rsp
0x000000000040f074 : clc ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004016ef : clc ; jne 0x4016f8 ; pop rbp ; ret
0x00000000004053d6 : clc ; mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000405bb8 : clc ; pop rbx ; pop rbp ; ret
0x0000000000401aa7 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000411506 : cld ; mov dword ptr [rbp - 0xc], eax ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000411116 : cli ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401c23 : cmp al, 0x25 ; jle 0x401c47 ; add r8b, bpl ; ret 0xfff7
0x000000000040be53 : cmp al, 0x25 ; jmp qword ptr [rax]
0x000000000040da8a : cmp al, 0x25 ; jmp qword ptr [rbx]
0x0000000000401c9f : cmp al, 0x25 ; ret
0x000000000040e559 : cmp al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000041059e : cmp byte ptr [rax], ah ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x00000000004017be : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x00000000004102ee : cmp byte ptr [rax], dh ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x00000000004109de : cmp byte ptr [rcx], ah ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000040d0fc : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x000000000040a50d : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004016ad : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4016c0 ; pop rbp ; ret
0x0000000000412505 : cmp edi, edi ; call qword ptr [rax]
0x000000000040bf05 : cwde ; and byte ptr [rcx], al ; jmp rcx
0x0000000000403fc9 : dec byte ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x000000000040679f : dec byte ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret
0x0000000000405bb4 : dec dword ptr [rax - 0x73] ; clc ; pop rbx ; pop rbp ; ret
0x000000000040be50 : dec dword ptr [rax - 0x73] ; cmp al, 0x25 ; jmp qword ptr [rax]
0x000000000040bf00 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; cwde ; and byte ptr [rcx], al ; jmp rcx
0x0000000000406b45 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; nop ; sbb eax, dword ptr [rcx] ; jmp rcx
0x00000000004049f3 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040fd34 : dec dword ptr [rax - 0x7f] ; ret 1
0x0000000000401cc8 : dec dword ptr [rcx - 0x76b72bbb] ; in al, dx ; pop rbp ; ret
0x00000000004017f3 : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x0000000000401fc2 : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret
0x000000000040a12b : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000040bbfa : enter -0x7cb8, -0x3c ; pop rbp ; ret
0x0000000000405f6c : enter 0x6142, 0 ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040390f : fiadd dword ptr [rcx - 0xa] ; ret 0x4001
0x0000000000405955 : fiadd dword ptr [rcx - 0xa] ; ret 0x4801
0x0000000000401b92 : fiadd dword ptr [rcx - 0xa] ; ret 0x8801
0x000000000040beb7 : fiadd dword ptr [rcx - 0xa] ; ret 0x8901
0x0000000000403843 : fiadd dword ptr [rcx - 0xa] ; ret 0xf01
0x0000000000401fcc : fild dword ptr [rcx - 0xa] ; ret
0x0000000000408798 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000041156c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000401a79 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000411509 : hlt ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x00000000004016c0 : hlt ; pop rbp ; mov edi, 0x614268 ; jmp rax
0x000000000041142f : hlt ; pop rbp ; ret
0x000000000041247d : idiv dh ; jmp rax
0x000000000040da86 : in al, dx ; adc byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; jmp qword ptr [rbx]
0x0000000000401cce : in al, dx ; pop rbp ; ret
0x000000000040d7d8 : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x000000000040af2e : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040a613 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000401b7c : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x000000000040b76a : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040760f : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x000000000040216f : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x00000000004103b8 : inc dword ptr [rcx + 0x41f9] ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x0000000000410dae : inc dword ptr [rcx + 0x5af9] ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x000000000041046e : inc dword ptr [rcx + 0x5af9] ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x0000000000412477 : inc eax ; add eax, dword ptr [rax] ; add byte ptr [rax], dh ; idiv dh ; jmp rax
0x000000000040ca38 : int 0x80
0x00000000004016b3 : ja 0x4016ba ; pop rbp ; ret
0x00000000004016bf : je 0x4016bd ; pop rbp ; mov edi, 0x614268 ; jmp rax
0x00000000004053a9 : jge 0x405397 ; call 0x401614
0x0000000000401c25 : jle 0x401c45 ; add r8b, bpl ; ret 0xfff7
0x00000000004013bb : jmp 0x4012d7
0x0000000000401c98 : jmp 0x401ca6
0x000000000040be55 : jmp qword ptr [rax]
0x000000000040da8c : jmp qword ptr [rbx]
0x00000000004016c7 : jmp rax
0x0000000000406b4e : jmp rcx
0x0000000000401707 : jmp rdx
0x00000000004016f0 : jne 0x4016f7 ; pop rbp ; ret
0x0000000000403a83 : jne 0x403a8e ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040b174 : jo 0x40b1d5 ; ret
0x0000000000409ddf : js 0x409de8 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040a200 : js 0x40a260 ; pop rbp ; ret
0x000000000040b015 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000405a23 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405bb6 : lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040b014 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000405bb5 : lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000403650 : loopne 0x4036b6 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040a63f : loopne 0x40a690 ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040a63e : loopne 0x40a691 ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040d905 : loopne 0x40d955 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040d904 : loopne 0x40d956 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040eff7 : loopne 0x40efe3 ; ret
0x000000000040eff6 : loopne 0x40efe4 ; ret
0x00000000004126fd : loopne 0x412700 ; call qword ptr [rax]
0x00000000004133e9 : loopne 0x4133ec ; call rsp
0x000000000040ca7e : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000405347 : mov al, 0 ; call 0x4015e4
0x0000000000412530 : mov al, 6 ; add byte ptr [rax], al ; xor byte ptr [rdx - 1], al ; call rax
0x0000000000410279 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000411114 : mov al, byte ptr [rbp - 6] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000405411 : mov byte ptr [0x614330], al ; pop rbp ; ret
0x00000000004049a9 : mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x00000000004053d7 : mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000405618 : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret
0x0000000000408b7c : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x000000000040738e : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x000000000040a366 : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 1
0x0000000000401723 : mov byte ptr [rip + 0x212bae], 1 ; ret
0x00000000004104d7 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000041027f : mov dh, -0x40 ; pop rbp ; ret
0x00000000004053ed : mov dword ptr [0x614328], edi ; pop rbp ; ret
0x00000000004061ca : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000406318 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000401cc9 : mov dword ptr [rbp - 0x2c], eax ; mov rsp, rbp ; pop rbp ; ret
0x0000000000401a77 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000411507 : mov dword ptr [rbp - 0xc], eax ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000401aa5 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040a1fc : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x000000000040d345 : mov eax, 0xf0658d48 ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040df71 : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004060f8 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040ce71 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004058f4 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040df6e : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004060f5 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040adaa : mov eax, dword ptr [rbp - 0x10] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004057e3 : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000406484 : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000040cd7f : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004060ad : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004061c4 : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040b374 : mov eax, dword ptr [rbp - 0x18] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040d903 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040a63d : mov eax, dword ptr [rbp - 0x20] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000405322 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040631a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040e45b : mov eax, dword ptr [rbp - 0x30] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040bbf8 : mov eax, dword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040a1fa : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000041142d : mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x000000000040f072 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402d6f : mov ebp, 0xe9ffffe8 ; ret
0x000000000040174b : mov ebp, esp ; call rax
0x00000000004016b1 : mov ebp, esp ; ja 0x4016bc ; pop rbp ; ret
0x0000000000406b47 : mov ecx, dword ptr [rax*8 + 0x411b90] ; jmp rcx
0x0000000000407661 : mov ecx, dword ptr [rax*8 + 0x411bd8] ; jmp rcx
0x000000000040bf02 : mov ecx, dword ptr [rax*8 + 0x412098] ; jmp rcx
0x00000000004061c7 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401745 : mov edi, 0x613e20 ; mov rbp, rsp ; call rax
0x00000000004016c2 : mov edi, 0x614268 ; jmp rax
0x0000000000401702 : mov edi, 0x614268 ; jmp rdx
0x00000000004053a8 : mov edi, dword ptr [rbp - 0x18] ; call 0x401615
0x0000000000411567 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000411566 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000401700 : mov esi, eax ; mov edi, 0x614268 ; jmp rdx
0x0000000000412d6c : mov esp, 0x30000005 ; test edi, edi ; call qword ptr [rdi]
0x0000000000401ccd : mov esp, ebp ; pop rbp ; ret
0x00000000004053ec : mov qword ptr [0x614328], rdi ; pop rbp ; ret
0x000000000040a1fb : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x000000000040ce70 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004058f3 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004060f4 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040ada9 : mov rax, qword ptr [rbp - 0x10] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004057e2 : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040cd7e : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004060ac : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040b373 : mov rax, qword ptr [rbp - 0x18] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040d902 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405321 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040bbf7 : mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040f071 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040174a : mov rbp, rsp ; call rax
0x00000000004016b0 : mov rbp, rsp ; ja 0x4016bd ; pop rbp ; ret
0x0000000000406b46 : mov rcx, qword ptr [rax*8 + 0x411b90] ; jmp rcx
0x0000000000407660 : mov rcx, qword ptr [rax*8 + 0x411bd8] ; jmp rcx
0x000000000040bf01 : mov rcx, qword ptr [rax*8 + 0x412098] ; jmp rcx
0x00000000004053a7 : mov rdi, qword ptr [rbp - 0x18] ; call 0x401616
0x00000000004016ff : mov rsi, rax ; mov edi, 0x614268 ; jmp rdx
0x0000000000401ccc : mov rsp, rbp ; pop rbp ; ret
0x00000000004104d6 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000041027e : movzx eax, al ; pop rbp ; ret
0x00000000004053da : movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000404bf0 : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000406b4a : nop ; sbb eax, dword ptr [rcx] ; jmp rcx
0x0000000000411588 : nop dword ptr [rax + rax] ; ret
0x000000000040bf03 : or al, 0xffffffffffffffc5 ; cwde ; and byte ptr [rcx], al ; jmp rcx
0x0000000000406b48 : or al, 0xffffffffffffffc5 ; nop ; sbb eax, dword ptr [rcx] ; jmp rcx
0x000000000040a3c9 : or byte ptr [r15], cl ; xchg eax, ebp ; ret 0x348b
0x0000000000408793 : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000402ede : or byte ptr [rax - 0x6af0ffc7], al ; ret 0x348b
0x0000000000408794 : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000041059c : or byte ptr [rcx + 0x2038], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x00000000004109dc : or byte ptr [rcx + 0x2138], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000040c82d : or byte ptr [rcx + 0x28f9], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x00000000004102ec : or byte ptr [rcx + 0x3038], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x00000000004017bc : or byte ptr [rcx + 0x38], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x00000000004108dc : or byte ptr [rcx + 0x6138], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000040eeb2 : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x000000000040a3ca : or byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x000000000040b73d : or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x000000000040b7df : or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x000000000040d5cf : or eax, 0x48fffff9 ; add esp, 0x30 ; pop rbp ; ret
0x000000000040664d : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041272d : out -1, al ; call rax
0x0000000000406984 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041157c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000403652 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406986 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041157e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000403654 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000411580 : pop r14 ; pop r15 ; ret
0x0000000000404bf5 : pop r14 ; pop rbp ; ret
0x0000000000403656 : pop r15 ; pop rbp ; ret
0x0000000000411582 : pop r15 ; ret
0x00000000004133e8 : pop rax ; loopne 0x4133ed ; call rsp
0x0000000000401722 : pop rbp ; mov byte ptr [rip + 0x212bae], 1 ; ret
0x00000000004016c1 : pop rbp ; mov edi, 0x614268 ; jmp rax
0x00000000004016fe : pop rbp ; mov rsi, rax ; mov edi, 0x614268 ; jmp rdx
0x000000000041157b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000406987 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041157f : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004016b5 : pop rbp ; ret
0x0000000000403651 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405a26 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000404bf4 : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000405bb9 : pop rbx ; pop rbp ; ret
0x0000000000403657 : pop rdi ; pop rbp ; ret
0x0000000000411583 : pop rdi ; ret
0x0000000000410db1 : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x0000000000410471 : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x0000000000403655 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000411581 : pop rsi ; pop r15 ; ret
0x0000000000404bf6 : pop rsi ; pop rbp ; ret
0x0000000000406985 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041157d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000403653 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004102f4 : popfq ; ret 0x348b
0x00000000004103c0 : popfq ; ret 0xc8b
0x0000000000412727 : push qword ptr [rax + 0x3000000e] ; out -1, al ; call rax
0x00000000004124af : push qword ptr [rax - 0x5ffffffc] ; sub bh, bh ; call rax
0x000000000040ffc3 : push rax ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040ae4e : push rax ; pop rbp ; ret
0x0000000000408797 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000401744 : push rbp ; mov edi, 0x613e20 ; mov rbp, rsp ; call rax
0x000000000040a12e : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x00000000004049a8 : pushfq ; mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x0000000000401b8e : pushfq ; ret
0x0000000000407620 : pushfq ; ret 0x844
0x00000000004017fa : pushfq ; ret 0x845
0x000000000040b56a : pushfq ; ret 0xd108
0x00000000004012c1 : ret
0x00000000004051cb : ret 0
0x0000000000401780 : ret 0x125
0x0000000000408b85 : ret 0x13
0x00000000004015c2 : ret 0x212b
0x00000000004013c2 : ret 0x212c
0x0000000000407397 : ret 0x2a
0x00000000004017c5 : ret 0x348b
0x00000000004120d9 : ret 0x40
0x0000000000403912 : ret 0x4001
0x0000000000405958 : ret 0x4801
0x0000000000401dd5 : ret 0x48f0
0x000000000040b4b7 : ret 0x4cc0
0x000000000040673a : ret 0x4cf0
0x0000000000410db7 : ret 0x5588
0x000000000040b740 : ret 0x7ae8
0x000000000040eb35 : ret 0x8041
0x0000000000401b84 : ret 0x8141
0x0000000000407621 : ret 0x844
0x00000000004017fb : ret 0x845
0x0000000000401b95 : ret 0x8801
0x0000000000407626 : ret 0x8901
0x000000000040256a : ret 0x8948
0x0000000000408b0c : ret 0x89a5
0x000000000040d103 : ret 0x8b44
0x000000000040879b : ret 0x8b48
0x0000000000402176 : ret 0xa3d
0x000000000040f43e : ret 0xb
0x000000000040264a : ret 0xb0
0x00000000004016e5 : ret 0xc148
0x000000000040eebb : ret 0xc8b
0x000000000040b56b : ret 0xd108
0x000000000040bb5c : ret 0xd284
0x000000000040b7e2 : ret 0xd8e8
0x0000000000401777 : ret 0xea81
0x00000000004087b0 : ret 0xeae8
0x000000000040a07c : ret 0xee8
0x0000000000402184 : ret 0xf01
0x0000000000401c2a : ret 0xfff7
0x000000000040534b : ret 0xffff
0x00000000004038ac : ret 1
0x000000000040a132 : ret 8
0x0000000000412478 : rol byte ptr [rbx], 0 ; add byte ptr [rax], dh ; idiv dh ; jmp rax
0x000000000040ca33 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x00000000004016ec : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4016fb ; pop rbp ; ret
0x0000000000402edb : ror byte ptr [rax - 0x75], 1 ; or byte ptr [rax - 0x6af0ffc7], al ; ret 0x348b
0x00000000004104d8 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x000000000040ca34 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x000000000040a12f : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000410db6 : sahf ; ret 0x5588
0x0000000000410476 : sahf ; ret 0xc8b
0x0000000000407624 : sal dh, cl ; ret 0x8901
0x00000000004016ee : sar eax, 1 ; jne 0x4016f9 ; pop rbp ; ret
0x00000000004016ed : sar rax, 1 ; jne 0x4016fa ; pop rbp ; ret
0x00000000004053a4 : sbb byte ptr [rcx], al ; mov rdi, qword ptr [rbp - 0x18] ; call 0x401619
0x00000000004068c0 : sbb cl, byte ptr [rcx - 0x7f] ; ret
0x000000000040e127 : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000406b4b : sbb eax, dword ptr [rcx] ; jmp rcx
0x0000000000401725 : scasb al, byte ptr [rdi] ; sub esp, dword ptr [rcx] ; add byte ptr [rcx], al ; ret
0x000000000040ab5d : scasd eax, dword ptr [rdi] ; ret
0x000000000040177f : scasd eax, dword ptr [rdi] ; ret 0x125
0x0000000000405b3a : scasd eax, dword ptr [rdi] ; ret 0x8141
0x00000000004103ba : stc ; add byte ptr [r8], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x0000000000410db0 : stc ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x0000000000410470 : stc ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x000000000041027b : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000412949 : sub bh, bh ; call qword ptr [rax]
0x0000000000412969 : sub bh, bh ; call qword ptr [rsi]
0x00000000004124b5 : sub bh, bh ; call rax
0x00000000004115bd : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000401726 : sub esp, dword ptr [rcx] ; add byte ptr [rcx], al ; ret
0x00000000004115bc : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000041158a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004017a4 : test dword ptr [rip - 0x17000000], eax ; ret
0x0000000000408b7f : test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x0000000000407391 : test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x000000000040f438 : test dword ptr [rip - 0x17000000], eax ; ret 0xb
0x000000000040847c : test dword ptr [rip - 0x17000000], eax ; ret 1
0x000000000040d723 : test eax, 0x48fffffc ; add esp, 0x10 ; pop rbp ; ret
0x0000000000412d71 : test edi, edi ; call qword ptr [rdi]
0x00000000004017c4 : xchg eax, ebp ; ret 0x348b
0x000000000040eb34 : xchg eax, ebp ; ret 0x8041
0x000000000040d102 : xchg eax, ebp ; ret 0x8b44
0x000000000040eeba : xchg eax, ebp ; ret 0xc8b
0x000000000040321b : xchg eax, edx ; ret 0x348b
0x000000000040534a : xchg eax, edx ; ret 0xffff
0x0000000000407477 : xchg eax, esi ; ret 0x348b
0x0000000000401fbf : xchg eax, esp ; ret
0x000000000040e1cd : xchg eax, esp ; ret 0x348b
0x0000000000401b83 : xchg eax, esp ; ret 0x8141
0x0000000000402175 : xchg eax, esp ; ret 0xa3d
0x000000000040bb5b : xchg eax, esp ; ret 0xd284
0x00000000004133e4 : xor al, 0xc ; add byte ptr [rax], al ; pop rax ; loopne 0x4133f1 ; call rsp
0x000000000040b737 : xor byte ptr [rax - 0x75], cl ; add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x000000000040b7d9 : xor byte ptr [rax - 0x75], cl ; add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x0000000000412534 : xor byte ptr [rdx - 1], al ; call rax
0x0000000000406316 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
