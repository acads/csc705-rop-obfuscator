0x000000000040370d : adc ah, byte ptr [rcx] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004014c4 : adc ah, byte ptr [rcx] ; jmp rax
0x0000000000401504 : adc ah, byte ptr [rcx] ; jmp rdx
0x0000000000402e71 : adc ah, byte ptr [rcx] ; pop rbp ; ret
0x0000000000410b63 : add ah, ah ; or dword ptr [rax], eax ; add al, bl ; sar bh, cl ; call rax
0x000000000040fed9 : add al, 0 ; add al, dh ; cmp bh, bh ; jmp rax
0x000000000040fea9 : add al, 0 ; add byte ptr [rax], al ; xor bh, bh ; jmp qword ptr [rax]
0x00000000004100a3 : add al, ah ; sar edi, cl ; jmp qword ptr [rax]
0x0000000000410ca7 : add al, bh ; fdivp st(7) ; call rsp
0x0000000000410b67 : add al, bl ; sar bh, cl ; call rax
0x0000000000410287 : add al, bl ; sub edi, edi ; call qword ptr [rsi]
0x0000000000402c66 : add al, bpl ; ret
0x0000000000403d4b : add al, ch ; call rbx
0x0000000000402c67 : add al, ch ; ret
0x000000000040fedb : add al, dh ; cmp bh, bh ; jmp rax
0x000000000040ecef : add bl, dh ; ret
0x000000000040db1b : add byte ptr [r8], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x000000000040fea8 : add byte ptr [rax + rax], al ; add byte ptr [rax], al ; xor bh, bh ; jmp qword ptr [rax]
0x00000000004100a0 : add byte ptr [rax + rax], cl ; add al, ah ; sar edi, cl ; jmp qword ptr [rax]
0x0000000000402b06 : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x0000000000401f3d : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 + 5], 1 ; ret
0x000000000040a1d0 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000040d3f2 : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000403d49 : add byte ptr [rax], al ; add al, ch ; call rbx
0x000000000040eced : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000401f3b : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 + 5], 1 ; ret
0x000000000040d5a8 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000040eceb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000400420 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000400422 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000040eb89 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x000000000040ecec : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400424 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000040802c : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x8141
0x0000000000408358 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000401d7c : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b77b8b], cl ; ret 0xb0
0x00000000004019a9 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret
0x0000000000404dbb : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x844
0x00000000004015f5 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x00000000004093da : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x0000000000401ce9 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x125
0x000000000040b8ef : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x0000000000402558 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000040199e : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x000000000040260c : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x00000000004082f8 : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x51], al ; ret
0x000000000040da50 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000040db1c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x0000000000402562 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret
0x0000000000408d06 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x000000000040e512 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x000000000040dbd2 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x000000000040b95c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret
0x000000000040157b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x125
0x00000000004015c0 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x000000000040a89e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x0000000000401dde : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x0000000000409fd1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x0000000000401cce : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040dd00 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x0000000000404db1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x00000000004026b9 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x00000000004092f7 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040309d : add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000406321 : add byte ptr [rax], al ; add cl, ch ; ret 0x13
0x0000000000404b33 : add byte ptr [rax], al ; add cl, ch ; ret 0x2a
0x000000000040c1fa : add byte ptr [rax], al ; add cl, ch ; ret 0xb
0x0000000000405c1e : add byte ptr [rax], al ; add cl, ch ; ret 1
0x000000000040300f : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403def : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040110b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000410ca2 : add byte ptr [rax], al ; and al, 0xb ; add byte ptr [rax], al ; clc ; fdivp st(7) ; call rsp
0x0000000000410ca6 : add byte ptr [rax], al ; clc ; fdivp st(7) ; call rsp
0x000000000040feea : add byte ptr [rax], al ; cmp dil, dil ; jmp qword ptr [rax]
0x00000000004100d2 : add byte ptr [rax], al ; fdivp st(7) ; jmp rax
0x0000000000401169 : add byte ptr [rax], al ; jmp 0x401129
0x0000000000403d45 : add byte ptr [rax], al ; jmp 0x403d54
0x0000000000403c22 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000040eb8b : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000403892 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040d5a9 : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040a220 : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000408359 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040cd85 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000407581 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040ecee : add byte ptr [rax], al ; ret
0x0000000000400426 : add byte ptr [rax], al ; ret 0
0x000000000040feab : add byte ptr [rax], al ; xor bh, bh ; jmp qword ptr [rax]
0x000000000040802e : add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x8141
0x0000000000408024 : add byte ptr [rbp - 0x77], al ; ret 0x8141
0x000000000040835a : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040cd86 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000407582 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000410ca3 : add byte ptr [rbx + rcx], ah ; add byte ptr [rax], al ; clc ; fdivp st(7) ; call rsp
0x0000000000401d7e : add byte ptr [rbx - 0x76b77b8b], cl ; ret 0xb0
0x0000000000401dda : add byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x00000000004086dc : add byte ptr [rcx + 0xf], al ; pushfq ; mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x00000000004019ab : add byte ptr [rcx + 0xf], al ; pushfq ; ret
0x0000000000404dbd : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x844
0x00000000004015f7 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x00000000004093dc : add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x0000000000401ceb : add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x125
0x000000000040b8f1 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x000000000040255a : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x00000000004019a0 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x000000000040260e : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x00000000004086cc : add byte ptr [rcx + 0xfe], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000408f08 : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000404dad : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x00000000004026b5 : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x00000000004093d2 : add byte ptr [rcx - 0x77], al ; ret
0x0000000000401ce1 : add byte ptr [rcx - 0x77], al ; ret 0x8141
0x000000000040260a : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000401528 : add byte ptr [rcx], al ; ret
0x00000000004082fa : add byte ptr [rdi + rcx - 0x51], al ; ret
0x000000000040da52 : add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000040db1e : add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x0000000000402564 : add byte ptr [rdi], cl ; pushfq ; ret
0x0000000000408d08 : add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x000000000040e514 : add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x000000000040dbd4 : add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x000000000040b95e : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret
0x000000000040157d : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x125
0x00000000004015c2 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x000000000040a8a0 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x0000000000401de0 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x0000000000409fd3 : add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x0000000000401cd0 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040dd02 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x0000000000404db3 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x00000000004026bb : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x00000000004092f9 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040309f : add cl, ch ; ret
0x0000000000406323 : add cl, ch ; ret 0x13
0x0000000000404b35 : add cl, ch ; ret 0x2a
0x000000000040c1fc : add cl, ch ; ret 0xb
0x0000000000405c20 : add cl, ch ; ret 1
0x0000000000408eda : add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x0000000000408f7c : add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x0000000000410285 : add dword ptr [rax], eax ; add al, bl ; sub edi, edi ; call qword ptr [rsi]
0x0000000000402b04 : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x000000000040cd84 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000407580 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000401cca : add dword ptr [rcx + 0x39], eax ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040dc35 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000040d9dd : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000403099 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret
0x000000000040631d : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x0000000000404b2f : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x000000000040c1f6 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0xb
0x0000000000405c1a : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 1
0x00000000004020a2 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x348b
0x0000000000401524 : add eax, 0x20fd4e ; add ebx, esi ; ret
0x000000000040309c : add eax, 0xe9000000 ; ret
0x0000000000406320 : add eax, 0xe9000000 ; ret 0x13
0x0000000000404b32 : add eax, 0xe9000000 ; ret 0x2a
0x000000000040c1f9 : add eax, 0xe9000000 ; ret 0xb
0x0000000000405c1d : add eax, 0xe9000000 ; ret 1
0x00000000004014eb : add eax, edx ; sar rax, 1 ; jne 0x4014fc ; pop rbp ; ret
0x0000000000401529 : add ebx, esi ; ret
0x00000000004018cb : add esp, 0x10 ; pop rbp ; ret
0x000000000040757d : add esp, 0x178 ; pop rbx ; pop rbp ; ret
0x000000000040a3bc : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000403378 : add esp, 0x20 ; pop rbp ; ret
0x0000000000403851 : add esp, 0x30 ; pop rbp ; ret
0x0000000000403711 : add esp, 0x40 ; pop rbp ; ret
0x0000000000409eff : add esp, 0x40 ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004085ec : add esp, 0x50 ; pop rbp ; ret
0x0000000000408912 : add esp, 0x70 ; pop rbp ; ret
0x0000000000402b97 : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040a21c : add esp, 0xb0 ; pop rbp ; ret
0x000000000040110e : add esp, 8 ; ret
0x00000000004014ea : add rax, rdx ; sar rax, 1 ; jne 0x4014fd ; pop rbp ; ret
0x00000000004018ca : add rsp, 0x10 ; pop rbp ; ret
0x000000000040757c : add rsp, 0x178 ; pop rbx ; pop rbp ; ret
0x000000000040a3bb : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000403377 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000403850 : add rsp, 0x30 ; pop rbp ; ret
0x0000000000403710 : add rsp, 0x40 ; pop rbp ; ret
0x0000000000409efe : add rsp, 0x40 ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004085eb : add rsp, 0x50 ; pop rbp ; ret
0x0000000000408911 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000402b96 : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040a21b : add rsp, 0xb0 ; pop rbp ; ret
0x000000000040110d : add rsp, 8 ; ret
0x0000000000410ca4 : and al, 0xb ; add byte ptr [rax], al ; clc ; fdivp st(7) ; call rsp
0x000000000040dc34 : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040d9dc : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040d64a : and byte ptr [r15], cl ; xchg eax, esp ; ret 0x348b
0x0000000000401527 : and byte ptr [rax], al ; add ebx, esi ; ret
0x000000000040d64b : and byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x0000000000409007 : and eax, 0x48ffffee ; add esp, 0x20 ; pop rbp ; ret
0x0000000000402e6f : and eax, 0x611280 ; pop rbp ; ret
0x0000000000402e93 : and eax, 0x611288 ; pop rbp ; ret
0x0000000000401109 : and eax, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000407819 : call 0xffffffffe9030169
0x0000000000407818 : call 0xffffffffe903016a
0x0000000000404e04 : call 0xffffffffff408f02
0x000000000040ecc9 : call qword ptr [r12 + rbx*8]
0x000000000040ffe7 : call qword ptr [rax]
0x0000000000410653 : call qword ptr [rdi]
0x000000000041028b : call qword ptr [rsi]
0x000000000040ecca : call qword ptr [rsp + rbx*8]
0x000000000040154d : call rax
0x0000000000403d4d : call rbx
0x0000000000410943 : call rcx
0x0000000000410863 : call rsp
0x000000000040be34 : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000410ca8 : clc ; fdivp st(7) ; call rsp
0x00000000004014ef : clc ; jne 0x4014f8 ; pop rbp ; ret
0x0000000000407de3 : clc ; pop rbx ; pop rbp ; ret
0x000000000040ec66 : cld ; mov dword ptr [rbp - 0xc], eax ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x000000000040e876 : cli ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000402b09 : cmp al, 0x25 ; ret
0x000000000040b319 : cmp al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040feed : cmp bh, bh ; jmp qword ptr [rax]
0x000000000040fedd : cmp bh, bh ; jmp rax
0x000000000040dcfe : cmp byte ptr [rax], ah ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x00000000004015be : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x000000000040da4e : cmp byte ptr [rax], dh ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000040e13e : cmp byte ptr [rcx], ah ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000040feec : cmp dil, dil ; jmp qword ptr [rax]
0x000000000040a89c : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x0000000000401ccc : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000407cad : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004014ad : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4014c0 ; pop rbp ; ret
0x0000000000407a62 : dec byte ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x0000000000403f3f : dec byte ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret
0x0000000000402c5f : dec dword ptr [rax - 0x73] ; cmp al, 0x25 ; ret
0x0000000000404dff : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; call 0xffffffffff408f07
0x00000000004095e6 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040caf4 : dec dword ptr [rax - 0x7f] ; ret 1
0x0000000000402e2b : dec dword ptr [rcx - 0x76b71bbb] ; in al, dx ; pop rbp ; ret
0x0000000000401ae8 : dec dword ptr [rcx - 0x76b72bbb] ; in al, dx ; pop rbp ; ret
0x0000000000401ff2 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0x348b
0x00000000004015f3 : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x0000000000402560 : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret
0x00000000004078cb : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000040939a : enter -0x7cb8, -0x3c ; pop rbp ; ret
0x0000000000410ca9 : fdivp st(7) ; call rsp
0x00000000004100d5 : fdivp st(7) ; jmp rax
0x00000000004035d2 : fiadd dword ptr [rcx - 0xa] ; ret 0x4001
0x0000000000408aff : fiadd dword ptr [rcx - 0xa] ; ret 0x4801
0x00000000004019b2 : fiadd dword ptr [rcx - 0xa] ; ret 0x8801
0x0000000000409657 : fiadd dword ptr [rcx - 0xa] ; ret 0x8901
0x000000000040af8e : fiadd dword ptr [rcx - 0xa] ; ret 0xf01
0x000000000040256a : fild dword ptr [rcx - 0xa] ; ret
0x0000000000405f38 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040eccc : fmul qword ptr [rax - 0x7d] ; ret
0x00000000004018c9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040ec69 : hlt ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x00000000004014c0 : hlt ; pop rbp ; mov edi, 0x611238 ; jmp rax
0x000000000040eb8f : hlt ; pop rbp ; ret
0x0000000000402e2e : in al, 0x48 ; mov esp, ebp ; pop rbp ; ret
0x0000000000401aee : in al, dx ; pop rbp ; ret
0x000000000040af78 : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x00000000004086ce : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040fea7 : inc dword ptr [rax] ; add al, 0 ; add byte ptr [rax], al ; xor bh, bh ; jmp qword ptr [rax]
0x0000000000407db3 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000040199c : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x0000000000408f0a : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000404daf : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x00000000004026b7 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x000000000041009f : inc dword ptr [rax] ; or al, 0 ; add al, ah ; sar edi, cl ; jmp qword ptr [rax]
0x000000000040db18 : inc dword ptr [rcx + 0x41f9] ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x000000000040e50e : inc dword ptr [rcx + 0x5af9] ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x000000000040dbce : inc dword ptr [rcx + 0x5af9] ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x000000000040fed7 : inc eax ; add al, 0 ; add al, dh ; cmp bh, bh ; jmp rax
0x000000000040a1d8 : int 0x80
0x00000000004014b3 : ja 0x4014ba ; pop rbp ; ret
0x00000000004014bf : je 0x4014bd ; pop rbp ; mov edi, 0x611238 ; jmp rax
0x000000000040116b : jmp 0x401127
0x0000000000402c5b : jmp 0x402a70
0x0000000000402b02 : jmp 0x402c69
0x0000000000403d47 : jmp 0x403d52
0x000000000040feaf : jmp qword ptr [rax]
0x00000000004014c7 : jmp rax
0x0000000000402810 : jmp rcx
0x0000000000401507 : jmp rdx
0x00000000004014f0 : jne 0x4014f7 ; pop rbp ; ret
0x0000000000408914 : jo 0x408975 ; ret
0x0000000000402b99 : js 0x402bf9 ; pop rbp ; ret
0x000000000040757f : js 0x407588 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004079a0 : js 0x407a00 ; pop rbp ; ret
0x00000000004087b5 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040bb30 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000407de1 : lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x00000000004087b4 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000407de0 : lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000402b95 : loopne 0x402be6 ; add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000402b94 : loopne 0x402be7 ; add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000407ddf : loopne 0x407e30 ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000407dde : loopne 0x407e31 ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040b0a5 : loopne 0x40b0f5 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040b0a4 : loopne 0x40b0f6 ; add esp, 0x20 ; pop rbp ; ret
0x00000000004100e5 : loopne 0x4100e8 ; jmp qword ptr [rax]
0x000000000040a21e : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040d9d9 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040e874 : mov al, byte ptr [rbp - 6] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000402e91 : mov byte ptr [0x611288], al ; pop rbp ; ret
0x00000000004086e0 : mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x0000000000403098 : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret
0x000000000040631c : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x0000000000404b2e : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x0000000000407b06 : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 1
0x0000000000401523 : mov byte ptr [rip + 0x20fd4e], 1 ; ret
0x000000000040dc37 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000040d9df : mov dh, -0x40 ; pop rbp ; ret
0x0000000000402e6d : mov dword ptr [0x611280], edi ; pop rbp ; ret
0x000000000040396a : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000403ab8 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000402e2c : mov dword ptr [rbp - 0x1c], eax ; mov rsp, rbp ; pop rbp ; ret
0x0000000000401ae9 : mov dword ptr [rbp - 0x2c], eax ; mov rsp, rbp ; pop rbp ; ret
0x00000000004018c7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040ec67 : mov dword ptr [rbp - 0xc], eax ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x000000000040799c : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x000000000040aae5 : mov eax, 0xf0658d48 ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040d3f1 : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000403898 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040a611 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403374 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d3ee : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000403895 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040854a : mov eax, dword ptr [rbp - 0x10] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000403263 : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000403c24 : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000040a51f : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040384d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403964 : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000408b14 : mov eax, dword ptr [rbp - 0x18] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040b0a3 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000402b93 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000407ddd : mov eax, dword ptr [rbp - 0x20] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040d208 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000403aba : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040b822 : mov eax, dword ptr [rbp - 0x30] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000409398 : mov eax, dword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040799a : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040eb8d : mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x000000000040be32 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040154b : mov ebp, esp ; call rax
0x00000000004014b1 : mov ebp, esp ; ja 0x4014bc ; pop rbp ; ret
0x0000000000402809 : mov ecx, dword ptr [rax*8 + 0x40ed40] ; jmp rcx
0x00000000004042e7 : mov ecx, dword ptr [rax*8 + 0x40f5a0] ; jmp rcx
0x0000000000404e01 : mov ecx, dword ptr [rax*8 + 0x40f5e8] ; jmp rcx
0x00000000004096a2 : mov ecx, dword ptr [rax*8 + 0x40faa8] ; jmp rcx
0x0000000000403967 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401545 : mov edi, 0x610e20 ; mov rbp, rsp ; call rax
0x00000000004014c2 : mov edi, 0x611238 ; jmp rax
0x0000000000401502 : mov edi, 0x611238 ; jmp rdx
0x000000000040ecc7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000040ecc6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000401500 : mov esi, eax ; mov edi, 0x611238 ; jmp rdx
0x0000000000401aed : mov esp, ebp ; pop rbp ; ret
0x0000000000402e6c : mov qword ptr [0x611280], rdi ; pop rbp ; ret
0x000000000040799b : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x000000000040a610 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403373 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403894 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000408549 : mov rax, qword ptr [rbp - 0x10] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000403262 : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040a51e : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040384c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000408b13 : mov rax, qword ptr [rbp - 0x18] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040b0a2 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000409397 : mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040be31 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040154a : mov rbp, rsp ; call rax
0x00000000004014b0 : mov rbp, rsp ; ja 0x4014bd ; pop rbp ; ret
0x0000000000402808 : mov rcx, qword ptr [rax*8 + 0x40ed40] ; jmp rcx
0x00000000004042e6 : mov rcx, qword ptr [rax*8 + 0x40f5a0] ; jmp rcx
0x0000000000404e00 : mov rcx, qword ptr [rax*8 + 0x40f5e8] ; jmp rcx
0x00000000004096a1 : mov rcx, qword ptr [rax*8 + 0x40faa8] ; jmp rcx
0x00000000004014ff : mov rsi, rax ; mov edi, 0x611238 ; jmp rdx
0x0000000000401aec : mov rsp, rbp ; pop rbp ; ret
0x000000000040dc36 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040d9de : movzx eax, al ; pop rbp ; ret
0x000000000040ece8 : nop dword ptr [rax + rax] ; ret
0x00000000004100a1 : or al, 0 ; add al, ah ; sar edi, cl ; jmp qword ptr [rax]
0x0000000000404e02 : or al, 0xffffffffffffffc5 ; call 0xffffffffff408f04
0x0000000000407b69 : or byte ptr [r15], cl ; xchg eax, ebp ; ret 0x348b
0x0000000000405f33 : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000405f34 : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000040dcfc : or byte ptr [rcx + 0x2038], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x000000000040e13c : or byte ptr [rcx + 0x2138], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x0000000000409fcd : or byte ptr [rcx + 0x28f9], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x000000000040da4c : or byte ptr [rcx + 0x3038], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x00000000004015bc : or byte ptr [rcx + 0x38], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x000000000040e03c : or byte ptr [rcx + 0x6138], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000040bc72 : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x0000000000407b6a : or byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x0000000000408edd : or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x0000000000408f7f : or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x0000000000410b65 : or dword ptr [rax], eax ; add al, bl ; sar bh, cl ; call rax
0x000000000040ad6f : or eax, 0x48fffff9 ; add esp, 0x30 ; pop rbp ; ret
0x0000000000410ca5 : or eax, dword ptr [rax] ; add al, bh ; fdivp st(7) ; call rsp
0x0000000000403ded : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404124 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040ecdc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000404126 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040ecde : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000404128 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040ece0 : pop r14 ; pop r15 ; ret
0x00000000004087b9 : pop r14 ; pop rbp ; ret
0x000000000040412a : pop r15 ; pop rbp ; ret
0x000000000040ece2 : pop r15 ; ret
0x0000000000401522 : pop rbp ; mov byte ptr [rip + 0x20fd4e], 1 ; ret
0x00000000004014c1 : pop rbp ; mov edi, 0x611238 ; jmp rax
0x00000000004014fe : pop rbp ; mov rsi, rax ; mov edi, 0x611238 ; jmp rdx
0x000000000040ecdb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000404127 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040ecdf : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004014b5 : pop rbp ; ret
0x000000000040835b : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004087b8 : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000402b9a : pop rbx ; pop rbp ; ret
0x0000000000402b03 : pop rcx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret
0x000000000040412b : pop rdi ; pop rbp ; ret
0x000000000040ece3 : pop rdi ; ret
0x000000000040e511 : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x000000000040dbd1 : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x0000000000404129 : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040ece1 : pop rsi ; pop r15 ; ret
0x00000000004087ba : pop rsi ; pop rbp ; ret
0x0000000000404125 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040ecdd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040da54 : popfq ; ret 0x348b
0x000000000040db20 : popfq ; ret 0xc8b
0x000000000040370c : push 0x48006112 ; add esp, 0x40 ; pop rbp ; ret
0x000000000040cd83 : push rax ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x00000000004085ee : push rax ; pop rbp ; ret
0x0000000000405f37 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000401544 : push rbp ; mov edi, 0x610e20 ; mov rbp, rsp ; call rax
0x00000000004078ce : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x00000000004086df : pushfq ; mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x00000000004019ae : pushfq ; ret
0x0000000000404dc0 : pushfq ; ret 0x844
0x00000000004015fa : pushfq ; ret 0x845
0x0000000000408d0a : pushfq ; ret 0xd108
0x0000000000401111 : ret
0x0000000000400428 : ret 0
0x0000000000401580 : ret 0x125
0x0000000000406325 : ret 0x13
0x0000000000401372 : ret 0x20fd
0x0000000000401172 : ret 0x20fe
0x0000000000404b37 : ret 0x2a
0x00000000004015c5 : ret 0x348b
0x00000000004035d5 : ret 0x4001
0x0000000000408b02 : ret 0x4801
0x0000000000401bf3 : ret 0x48f0
0x0000000000408c57 : ret 0x4cc0
0x0000000000403eda : ret 0x4cf0
0x000000000040e517 : ret 0x5588
0x0000000000408ee0 : ret 0x7ae8
0x000000000040b8f5 : ret 0x8041
0x00000000004019a4 : ret 0x8141
0x0000000000404dc1 : ret 0x844
0x0000000000402612 : ret 0x8445
0x00000000004015fb : ret 0x845
0x00000000004019b5 : ret 0x8801
0x0000000000404dc6 : ret 0x8901
0x000000000040ac25 : ret 0x8948
0x00000000004062ac : ret 0x89a5
0x000000000040a8a3 : ret 0x8b44
0x0000000000405f3b : ret 0x8b48
0x00000000004026be : ret 0xa3d
0x0000000000405f50 : ret 0xae8
0x000000000040c1fe : ret 0xb
0x0000000000401d84 : ret 0xb0
0x00000000004014e5 : ret 0xc148
0x0000000000401de3 : ret 0xc8b
0x0000000000408d0b : ret 0xd108
0x00000000004092fc : ret 0xd284
0x0000000000408f82 : ret 0xd8e8
0x0000000000401577 : ret 0xea81
0x000000000040781c : ret 0xee8
0x00000000004026cc : ret 0xf01
0x0000000000405c22 : ret 1
0x00000000004078d2 : ret 8
0x0000000000401f40 : ror byte ptr [r8 + 5], 1 ; ret
0x000000000040a1d3 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000401f41 : ror byte ptr [rax + 5], 1 ; ret
0x00000000004100d0 : ror byte ptr [rax + rax], 0 ; fdivp st(7) ; jmp rax
0x00000000004014ec : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4014fb ; pop rbp ; ret
0x000000000040dc38 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x000000000040a1d4 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x00000000004078cf : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000410110 : ror byte ptr [rip - 0x16a00000], -1 ; jmp rax
0x000000000040e516 : sahf ; ret 0x5588
0x000000000040dbd6 : sahf ; ret 0xc8b
0x0000000000404dc4 : sal dh, cl ; ret 0x8901
0x0000000000410b69 : sar bh, cl ; call rax
0x00000000004014ee : sar eax, 1 ; jne 0x4014f9 ; pop rbp ; ret
0x00000000004100a5 : sar edi, cl ; jmp qword ptr [rax]
0x00000000004014ed : sar rax, 1 ; jne 0x4014fa ; pop rbp ; ret
0x0000000000404060 : sbb cl, byte ptr [rcx - 0x7f] ; ret
0x000000000040d5a7 : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004082fd : scasd eax, dword ptr [rdi] ; ret
0x000000000040157f : scasd eax, dword ptr [rdi] ; ret 0x125
0x0000000000408031 : scasd eax, dword ptr [rdi] ; ret 0x8141
0x000000000040db1a : stc ; add byte ptr [r8], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x000000000040e510 : stc ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x000000000040dbd0 : stc ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x0000000000401526 : std ; and byte ptr [rax], al ; add ebx, esi ; ret
0x000000000040d9db : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000410289 : sub edi, edi ; call qword ptr [rsi]
0x000000000040ed1d : sub esp, 8 ; add rsp, 8 ; ret
0x000000000040ed1c : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000402807 : test al, 0x48 ; mov ecx, dword ptr [rax*8 + 0x40ed40] ; jmp rcx
0x0000000000401d81 : test byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000040ecea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040309b : test dword ptr [rip - 0x17000000], eax ; ret
0x000000000040631f : test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x0000000000404b31 : test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x000000000040c1f8 : test dword ptr [rip - 0x17000000], eax ; ret 0xb
0x0000000000405c1c : test dword ptr [rip - 0x17000000], eax ; ret 1
0x000000000040aec3 : test eax, 0x48fffffc ; add esp, 0x10 ; pop rbp ; ret
0x00000000004015c4 : xchg eax, ebp ; ret 0x348b
0x000000000040b8f4 : xchg eax, ebp ; ret 0x8041
0x000000000040a8a2 : xchg eax, ebp ; ret 0x8b44
0x0000000000401de2 : xchg eax, ebp ; ret 0xc8b
0x0000000000404c17 : xchg eax, esi ; ret 0x348b
0x0000000000401cd2 : xchg eax, esp ; ret
0x0000000000401ff4 : xchg eax, esp ; ret 0x348b
0x00000000004019a3 : xchg eax, esp ; ret 0x8141
0x0000000000402611 : xchg eax, esp ; ret 0x8445
0x00000000004026bd : xchg eax, esp ; ret 0xa3d
0x00000000004092fb : xchg eax, esp ; ret 0xd284
0x000000000040fead : xor bh, bh ; jmp qword ptr [rax]
0x0000000000408ed7 : xor byte ptr [rax - 0x75], cl ; add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x0000000000408f79 : xor byte ptr [rax - 0x75], cl ; add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x0000000000403ab6 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
