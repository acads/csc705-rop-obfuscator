0x000000000042b389 : adc al, byte ptr [rax] ; add byte ptr [rax], al ; jno 0x42b393 ; jmp qword ptr [rax]
0x0000000000425090 : adc byte ptr [rax - 0x7f], cl ; ret 0x10
0x0000000000428ccf : adc byte ptr [rax - 0x7f], cl ; ret 0x20
0x000000000042314d : adc dword ptr [rax - 0x7f], ecx ; ret 0x20
0x000000000041f46d : adc dword ptr [rax - 0x7f], ecx ; ret 1
0x0000000000404f98 : adc dword ptr [rax - 0x7f], ecx ; ret 8
0x0000000000407b19 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000400dd8 : adc ebp, dword ptr [rcx + 0x69] ; or eax, 0x40000 ; ret
0x000000000042ba4b : add ah, ah ; add eax, 0xc9200000 ; std ; call qword ptr [rax]
0x0000000000400dde : add al, 0 ; ret
0x000000000042b08b : add al, ah ; popfq ; std ; call rax
0x000000000042b09b : add al, al ; sahf ; std ; call qword ptr [rax]
0x000000000042b705 : add al, byte ptr [rax] ; add byte ptr [rax - 0x55], bl ; std ; jmp qword ptr [rbx]
0x000000000042bb0f : add al, dl ; sar ch, cl ; call rbx
0x000000000042993f : add bl, dh ; ret
0x000000000040699b : add byte ptr [r8], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x000000000041e14d : add byte ptr [rax + 0x39], cl ; ror dword ptr [rdi], -0x6b ; ret 0x348b
0x000000000042b4eb : add byte ptr [rax + rax + 0x67a00000], al ; std ; jmp rdx
0x0000000000400ddd : add byte ptr [rax + rax], al ; ret
0x000000000042b96b : add byte ptr [rax - 0x3e700000], al ; std ; jmp qword ptr [rbx]
0x000000000042b0cb : add byte ptr [rax - 0x4e], al ; std ; jmp rax
0x000000000042b707 : add byte ptr [rax - 0x55], bl ; std ; jmp qword ptr [rbx]
0x00000000004110c2 : add byte ptr [rax - 0x73], cl ; clc ; pop rbx ; pop rbp ; ret
0x000000000040e713 : add byte ptr [rax - 0x73], cl ; or al, 0x25 ; ret 0x42a9
0x000000000040f710 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000413cd2 : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000429463 : add byte ptr [rax - 0x77], cl ; or cl, ch ; salc ; ret 0xffff
0x0000000000420aa0 : add byte ptr [rax - 0x77], cl ; xor cl, ch ; jmp rax
0x000000000042b213 : add byte ptr [rax], ah ; and bh, dh ; call qword ptr [rax]
0x000000000042ba4f : add byte ptr [rax], ah ; leave ; std ; call qword ptr [rax]
0x000000000042b243 : add byte ptr [rax], ah ; sub edi, esi ; call rax
0x0000000000400ddc : add byte ptr [rax], al ; add al, 0 ; ret
0x000000000042993d : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000041e14b : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ror dword ptr [rdi], -0x6b ; ret 0x348b
0x0000000000413e88 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000429461 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; or cl, ch ; salc ; ret 0xffff
0x0000000000420a9e : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; xor cl, ch ; jmp rax
0x000000000042993b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000042a4c8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x409d
0x0000000000400330 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x000000000042a4ca : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x409d
0x0000000000400332 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x0000000000407a09 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000408872 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000042993c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000042a4cc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x409d
0x0000000000400334 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x0000000000417970 : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x000000000040d56c : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x8141
0x000000000042c40e : add byte ptr [rax], al ; add byte ptr [rbp - 1], cl ; call rbx
0x000000000040d898 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000403cd5 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret
0x0000000000408713 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x844
0x000000000040276f : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x000000000040e91a : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x000000000040938a : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x125
0x000000000041164b : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x00000000004121cf : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x0000000000409398 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000403e3b : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x000000000041b7aa : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xf981
0x0000000000404cd6 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xff81
0x000000000042b38a : add byte ptr [rax], al ; add byte ptr [rcx - 2], dh ; jmp qword ptr [rax]
0x000000000040d838 : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x51], al ; ret
0x00000000004068d0 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000040699c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x00000000004093a3 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret
0x0000000000417abf : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0x348b
0x0000000000405687 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0x841
0x0000000000417b81 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xc8b
0x0000000000405805 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd008
0x000000000040e246 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x0000000000407392 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x0000000000406a52 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x000000000041223c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret
0x0000000000401efe : add byte ptr [rax], al ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x125
0x0000000000402b5c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x00000000004062c9 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5588
0x000000000040fdde : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x00000000004118b2 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x000000000042125b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000040f511 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x000000000040dc10 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000406b80 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x000000000040a2f1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x0000000000403022 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x000000000040e837 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000403b8c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xff81
0x000000000042b2d2 : add byte ptr [rax], al ; add byte ptr [rdx - 2], al ; jmp qword ptr [rax]
0x000000000042b9ae : add byte ptr [rax], al ; add ch, -3 ; call qword ptr [rdx]
0x000000000042b9ce : add byte ptr [rax], al ; add ch, -3 ; call qword ptr [rsi]
0x000000000041e216 : add byte ptr [rax], al ; add cl, ch ; jmp qword ptr [rdi]
0x000000000040818d : add byte ptr [rax], al ; add cl, ch ; ret
0x000000000040b861 : add byte ptr [rax], al ; add cl, ch ; ret 0x13
0x000000000040a073 : add byte ptr [rax], al ; add cl, ch ; ret 0x2a
0x000000000041db80 : add byte ptr [rax], al ; add cl, ch ; ret 0x2d
0x0000000000412ada : add byte ptr [rax], al ; add cl, ch ; ret 0xb
0x00000000004287fa : add byte ptr [rax], al ; add cl, ch ; ret 0xf
0x000000000040b15e : add byte ptr [rax], al ; add cl, ch ; ret 1
0x0000000000405c4a : add byte ptr [rax], al ; add cl, ch ; ret 4
0x0000000000429477 : add byte ptr [rax], al ; add cl, ch ; salc ; ret
0x000000000042b9aa : add byte ptr [rax], al ; add eax, 0xc5800000 ; std ; call qword ptr [rdx]
0x000000000042b9ca : add byte ptr [rax], al ; add eax, 0xc5800000 ; std ; call qword ptr [rsi]
0x000000000040627b : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402ab5 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404e66 : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000403a06 : add byte ptr [rax], al ; add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x0000000000401553 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000042b342 : add byte ptr [rax], al ; and byte ptr [rsi - 2], dl ; jmp rax
0x000000000042ba4e : add byte ptr [rax], al ; and cl, cl ; std ; call qword ptr [rax]
0x000000000042c026 : add byte ptr [rax], al ; cwde ; cmp edi, esi ; jmp rcx
0x000000000042c1d6 : add byte ptr [rax], al ; fcom dword ptr [rbx - 2] ; jmp rax
0x000000000042b94a : add byte ptr [rax], al ; in al, 4 ; add byte ptr [rax], al ; rol al, 1 ; std ; call rsp
0x000000000042ba4a : add byte ptr [rax], al ; in al, 5 ; add byte ptr [rax], al ; and cl, cl ; std ; call qword ptr [rax]
0x0000000000401729 : add byte ptr [rax], al ; jmp 0x401569
0x000000000041cbe0 : add byte ptr [rax], al ; jmp 0x420768
0x000000000042b38b : add byte ptr [rax], al ; jno 0x42b391 ; jmp qword ptr [rax]
0x000000000042b08a : add byte ptr [rax], al ; loopne 0x42b030 ; std ; call rax
0x000000000042b80e : add byte ptr [rax], al ; mov al, -0x4c ; std ; call rax
0x000000000042b0ca : add byte ptr [rax], al ; mov dl, -3 ; jmp rax
0x0000000000409162 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000407a0b : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x000000000042c022 : add byte ptr [rax], al ; mov esp, 0x9800000b ; cmp edi, esi ; jmp rcx
0x0000000000429462 : add byte ptr [rax], al ; mov qword ptr [rax], rcx ; jmp 0x425749
0x0000000000408dd2 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000408874 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004063a4 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x30] ; pop rbp ; ret
0x0000000000413e89 : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000042c40a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; sldt word ptr [rax] ; add byte ptr [rbp - 1], cl ; call rbx
0x000000000042b3ba : add byte ptr [rax], al ; nop ; mov dr1, esi ; jmp rax
0x000000000042b706 : add byte ptr [rax], al ; pop rax ; stosd dword ptr [rdi], eax ; std ; jmp qword ptr [rbx]
0x0000000000404d80 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040d899 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000413665 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040cac1 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000042b702 : add byte ptr [rax], al ; pushfq ; add al, byte ptr [rax] ; add byte ptr [rax - 0x55], bl ; std ; jmp qword ptr [rbx]
0x000000000042bb0e : add byte ptr [rax], al ; rcl dl ; std ; call rbx
0x000000000042993e : add byte ptr [rax], al ; ret
0x000000000042a4ce : add byte ptr [rax], al ; ret 0x409d
0x0000000000400336 : add byte ptr [rax], al ; ret 1
0x000000000042b94e : add byte ptr [rax], al ; rol al, 1 ; std ; call rsp
0x000000000042b282 : add byte ptr [rax], al ; xor byte ptr [rax], 0xfe ; call rax
0x0000000000404bad : add byte ptr [rax], r8b ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x0000000000417972 : add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x000000000040d56e : add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x8141
0x0000000000417968 : add byte ptr [rbp - 0x77], al ; ret
0x000000000040d564 : add byte ptr [rbp - 0x77], al ; ret 0x8141
0x000000000042c410 : add byte ptr [rbp - 1], cl ; call rbx
0x000000000040d89a : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000413666 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040cac2 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000042b80b : add byte ptr [rbx + rax - 0x4b500000], ah ; std ; call rax
0x0000000000400dd7 : add byte ptr [rbx], dl ; imul ebp, dword ptr [rcx + 0xd], 0x40000 ; ret
0x00000000004118ae : add byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x000000000040dc1c : add byte ptr [rcx + 0xf], al ; pushfq ; mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x0000000000403cd7 : add byte ptr [rcx + 0xf], al ; pushfq ; ret
0x0000000000408715 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x844
0x0000000000402771 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x000000000040e91c : add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x000000000040938c : add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x125
0x000000000041164d : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x00000000004121d1 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x000000000040939a : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000403e3d : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x0000000000406491 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8b44
0x000000000041b7ac : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xf981
0x0000000000404cd8 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xff81
0x000000000040dc0c : add byte ptr [rcx + 0xfe], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000403b88 : add byte ptr [rcx + 0xfe], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xff81
0x000000000040e448 : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040a2ed : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x000000000040e912 : add byte ptr [rcx - 0x77], al ; ret
0x0000000000409382 : add byte ptr [rcx - 0x77], al ; ret 0x8141
0x000000000042b38c : add byte ptr [rcx - 2], dh ; jmp qword ptr [rax]
0x0000000000401a98 : add byte ptr [rcx], al ; ret
0x000000000040d83a : add byte ptr [rdi + rcx - 0x51], al ; ret
0x00000000004068d2 : add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000040699e : add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x00000000004093a5 : add byte ptr [rdi], cl ; pushfq ; ret
0x0000000000417ac1 : add byte ptr [rdi], cl ; pushfq ; ret 0x348b
0x0000000000405689 : add byte ptr [rdi], cl ; pushfq ; ret 0x841
0x0000000000417b83 : add byte ptr [rdi], cl ; pushfq ; ret 0xc8b
0x0000000000405807 : add byte ptr [rdi], cl ; pushfq ; ret 0xd008
0x000000000040e248 : add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x0000000000406623 : add byte ptr [rdi], cl ; sahf ; ret 0x348b
0x0000000000407394 : add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x0000000000406a54 : add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x000000000041223e : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret
0x0000000000401f00 : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x125
0x0000000000402b5e : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x00000000004062cb : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5588
0x000000000040fde0 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x00000000004118b4 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x000000000042125d : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000040f513 : add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x000000000040dc12 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000406b82 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x000000000040a2f3 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x0000000000403024 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x000000000040e839 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000403b8e : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xff81
0x000000000042b703 : add byte ptr [rdx + rax - 0x54a80000], bl ; std ; jmp qword ptr [rbx]
0x000000000042b2d4 : add byte ptr [rdx - 2], al ; jmp qword ptr [rax]
0x0000000000429475 : add byte ptr [rdx], al ; add byte ptr [rax], al ; add cl, ch ; salc ; ret
0x000000000042b388 : add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rcx - 2], dh ; jmp qword ptr [rax]
0x000000000042bb0b : add byte ptr [rsi + rax - 0x2d300000], ah ; std ; call rbx
0x000000000042b9b0 : add ch, -3 ; call qword ptr [rdx]
0x000000000042b9d0 : add ch, -3 ; call qword ptr [rsi]
0x000000000041e218 : add cl, ch ; jmp qword ptr [rdi]
0x000000000040818f : add cl, ch ; ret
0x000000000040b863 : add cl, ch ; ret 0x13
0x000000000040a075 : add cl, ch ; ret 0x2a
0x000000000041db82 : add cl, ch ; ret 0x2d
0x0000000000412adc : add cl, ch ; ret 0xb
0x00000000004287fc : add cl, ch ; ret 0xf
0x000000000040b160 : add cl, ch ; ret 1
0x0000000000405c4c : add cl, ch ; ret 4
0x0000000000429479 : add cl, ch ; salc ; ret
0x000000000040e41a : add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x000000000040e4bc : add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x0000000000429460 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rax], rcx ; jmp 0x42574b
0x0000000000413664 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040cac0 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000402616 : add dword ptr [rcx - 0x7bf07bbb], ecx ; ret
0x00000000004063de : add dword ptr [rdi], ecx ; mov dh, -0x3f ; pop rbp ; ret
0x0000000000408581 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406ab5 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000040685d : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x000000000041e212 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; jmp qword ptr [rdi]
0x0000000000408189 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret
0x000000000040b85d : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x000000000040a06f : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x000000000041db7c : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0x2d
0x0000000000412ad6 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0xb
0x00000000004287f6 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0xf
0x000000000040b15a : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 1
0x0000000000415184 : add dword ptr [rdi], ecx ; xchg eax, esi ; ret 0x348b
0x0000000000401a94 : add eax, 0x22b87e ; add ebx, esi ; ret
0x000000000042b089 : add eax, 0x9de00000 ; std ; call rax
0x000000000042b099 : add eax, 0x9ec00000 ; std ; call qword ptr [rax]
0x000000000042b96d : add eax, 0xc1900000 ; std ; jmp qword ptr [rbx]
0x000000000042b9ad : add eax, 0xc5800000 ; std ; call qword ptr [rdx]
0x000000000042b9cd : add eax, 0xc5800000 ; std ; call qword ptr [rsi]
0x000000000042ba4d : add eax, 0xc9200000 ; std ; call qword ptr [rax]
0x000000000041e215 : add eax, 0xe9000000 ; jmp qword ptr [rdi]
0x000000000040818c : add eax, 0xe9000000 ; ret
0x000000000040b860 : add eax, 0xe9000000 ; ret 0x13
0x000000000040a072 : add eax, 0xe9000000 ; ret 0x2a
0x000000000041db7f : add eax, 0xe9000000 ; ret 0x2d
0x0000000000412ad9 : add eax, 0xe9000000 ; ret 0xb
0x00000000004287f9 : add eax, 0xe9000000 ; ret 0xf
0x000000000040b15d : add eax, 0xe9000000 ; ret 1
0x0000000000405c49 : add eax, 0xe9000000 ; ret 4
0x00000000004034ef : add eax, 0xf000000 ; xchg eax, esp ; ret 0xc8b
0x0000000000401a5b : add eax, edx ; sar rax, 1 ; jne 0x401a6c ; pop rbp ; ret
0x0000000000401a99 : add ebx, esi ; ret
0x00000000004207aa : add ecx, ebp ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000401c8b : add esp, 0x10 ; pop rbp ; ret
0x000000000040cabd : add esp, 0x178 ; pop rbx ; pop rbp ; ret
0x000000000040f8fc : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000402ab8 : add esp, 0x20 ; pop rbp ; ret
0x0000000000401d6d : add esp, 0x30 ; pop rbp ; ret
0x0000000000402ce9 : add esp, 0x40 ; pop rbp ; ret
0x000000000040f43f : add esp, 0x40 ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040db2c : add esp, 0x50 ; pop rbp ; ret
0x0000000000403a09 : add esp, 0x58 ; pop rbx ; pop rbp ; ret
0x0000000000405228 : add esp, 0x68 ; pop rbx ; pop rbp ; ret
0x000000000040de52 : add esp, 0x70 ; pop rbp ; ret
0x000000000040cede : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000404d7c : add esp, 0xb0 ; pop rbp ; ret
0x0000000000401556 : add esp, 8 ; ret
0x0000000000401a5a : add rax, rdx ; sar rax, 1 ; jne 0x401a6d ; pop rbp ; ret
0x0000000000401c8a : add rsp, 0x10 ; pop rbp ; ret
0x000000000040cabc : add rsp, 0x178 ; pop rbx ; pop rbp ; ret
0x000000000040f8fb : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000402ab7 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000401d6c : add rsp, 0x30 ; pop rbp ; ret
0x0000000000402ce8 : add rsp, 0x40 ; pop rbp ; ret
0x000000000040f43e : add rsp, 0x40 ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040db2b : add rsp, 0x50 ; pop rbp ; ret
0x0000000000403a08 : add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x0000000000405227 : add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x000000000040de51 : add rsp, 0x70 ; pop rbp ; ret
0x000000000040cedd : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000404d7b : add rsp, 0xb0 ; pop rbp ; ret
0x0000000000401555 : add rsp, 8 ; ret
0x0000000000406ab4 : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040685c : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401a97 : and al, byte ptr [rax] ; add ebx, esi ; ret
0x000000000042b215 : and bh, dh ; call qword ptr [rax]
0x0000000000413f2a : and byte ptr [r15], cl ; xchg eax, esp ; ret 0x348b
0x0000000000413f2b : and byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x000000000042b344 : and byte ptr [rsi - 2], dl ; jmp rax
0x00000000004063dc : and cl, 1 ; movzx eax, cl ; pop rbp ; ret
0x000000000042ba50 : and cl, cl ; std ; call qword ptr [rax]
0x000000000040e547 : and eax, 0x48ffffee ; add esp, 0x20 ; pop rbp ; ret
0x0000000000407f5f : and eax, 0x62d3d8 ; pop rbp ; ret
0x0000000000407f83 : and eax, 0x62d3e0 ; pop rbp ; ret
0x000000000042bdd9 : and esi, edi ; call qword ptr [rdi]
0x0000000000406279 : and esp, dword ptr [rbx] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402c23 : call 0x202ad73
0x000000000040548f : call 0x4016d2
0x0000000000415619 : call 0x401822
0x00000000004087aa : call 0x490310fa
0x00000000004087a9 : call 0x490310fb
0x00000000004087aa : call 0x490310fd
0x00000000004087a9 : call 0x490310fe
0x0000000000402615 : call 0xffffffff8485af22
0x0000000000404b00 : call 0xffffffffb102d450
0x000000000040cd59 : call 0xffffffffe90356a9
0x000000000040cd58 : call 0xffffffffe90356aa
0x0000000000429919 : call qword ptr [r12 + rbx*8]
0x000000000042b09f : call qword ptr [rax]
0x000000000042bddb : call qword ptr [rdi]
0x000000000042b9b3 : call qword ptr [rdx]
0x000000000042b9d3 : call qword ptr [rsi]
0x000000000042991a : call qword ptr [rsp + rbx*8]
0x0000000000401abd : call rax
0x000000000042bb13 : call rbx
0x000000000042c0cb : call rcx
0x000000000042b953 : call rsp
0x0000000000412714 : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401a5f : clc ; jne 0x401a68 ; pop rbp ; ret
0x000000000040d323 : clc ; pop rbx ; pop rbp ; ret
0x0000000000407ae6 : cld ; mov dword ptr [rbp - 0xc], eax ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x00000000004076f6 : cli ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004052a2 : cli ; ret
0x0000000000410b69 : cmp al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000041e0c7 : cmp al, ch ; ret
0x000000000042bfe9 : cmp bh, dh ; call rsp
0x0000000000406b7e : cmp byte ptr [rax], ah ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x00000000004068ce : cmp byte ptr [rax], dh ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x0000000000406fbe : cmp byte ptr [rcx], ah ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000040fddc : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x0000000000425140 : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x000000000040d1ed : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401a1d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401a30 ; pop rbp ; ret
0x000000000041cbe4 : cmp eax, dword ptr [rax] ; add cl, ch ; ret
0x000000000042c029 : cmp edi, esi ; jmp rcx
0x000000000042c028 : cwde ; cmp edi, esi ; jmp rcx
0x00000000004214da : cwde ; mov rcx, qword ptr [rax*8 + 0x42ae40] ; jmp rcx
0x0000000000404be1 : dec byte ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x000000000040947f : dec byte ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret
0x0000000000425db1 : dec dword ptr [rax + 0x39] ; add dword ptr [rdi], ecx ; xchg eax, esi ; ret 0x348b
0x0000000000405bfb : dec dword ptr [rax + 0x39] ; ror dword ptr [rdi], -0x69 ; ret 0x348b
0x000000000041e0c4 : dec dword ptr [rax - 0x75] ; cmp al, ch ; ret
0x000000000040538c : dec dword ptr [rax - 0x75] ; push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 8
0x000000000040eb26 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004133d4 : dec dword ptr [rax - 0x7f] ; ret 1
0x0000000000405c46 : dec dword ptr [rdi] ; test dword ptr [rip - 0x17000000], eax ; ret 4
0x0000000000415f96 : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0x348b
0x000000000041a473 : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0x8b44
0x0000000000414dbc : dec dword ptr [rdi] ; xchg eax, esp ; ret 0x348b
0x0000000000404cde : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret
0x0000000000402b8f : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x0000000000405685 : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0x841
0x00000000004148e2 : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x000000000040ce0b : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000040e8da : enter -0x7cb8, -0x3c ; pop rbp ; ret
0x0000000000404e64 : enter 7, 0 ; add rsp, 0x40 ; pop rbp ; ret
0x000000000042c1d8 : fcom dword ptr [rbx - 2] ; jmp rax
0x0000000000408b12 : fiadd dword ptr [rcx - 0xa] ; ret 0x4001
0x000000000040e03f : fiadd dword ptr [rcx - 0xa] ; ret 0x4801
0x0000000000404ce9 : fiadd dword ptr [rcx - 0xa] ; ret 0x8801
0x0000000000403e4f : fiadd dword ptr [rcx - 0xa] ; ret 0x8901
0x00000000004104ce : fiadd dword ptr [rcx - 0xa] ; ret 0xf01
0x00000000004093ab : fild dword ptr [rcx - 0xa] ; ret
0x0000000000404f94 : fmul dword ptr [r8 - 0x75] ; adc dword ptr [rax - 0x7f], ecx ; ret 8
0x000000000040b478 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000404f95 : fmul dword ptr [rax - 0x75] ; adc dword ptr [rax - 0x7f], ecx ; ret 8
0x0000000000417ec8 : fmul dword ptr [rdi] ; wait ; ror dword ptr [rdi], -0x6c ; ret 0xca20
0x000000000042991c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000401c89 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407ae9 : hlt ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000401a30 : hlt ; pop rbp ; mov edi, 0x62d2d8 ; jmp rax
0x0000000000407a0f : hlt ; pop rbp ; ret
0x0000000000400dd9 : imul ebp, dword ptr [rcx + 0xd], 0x40000 ; ret
0x000000000042b94c : in al, 4 ; add byte ptr [rax], al ; rol al, 1 ; std ; call rsp
0x000000000042ba4c : in al, 5 ; add byte ptr [rax], al ; and cl, cl ; std ; call qword ptr [rax]
0x0000000000406abb : in al, dx ; pop rbp ; ret
0x0000000000405c26 : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x000000000040dc0e : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000403b8a : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xff81
0x000000000042b387 : inc dword ptr [rax] ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; jno 0x42b395 ; jmp qword ptr [rax]
0x000000000040d2f3 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000408afc : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x000000000040e44a : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040a2ef : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x0000000000406998 : inc dword ptr [rcx + 0x41f9] ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x000000000040738e : inc dword ptr [rcx + 0x5af9] ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x0000000000406a4e : inc dword ptr [rcx + 0x5af9] ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x0000000000405360 : insb byte ptr [rdi], dx ; ret
0x000000000040f718 : int 0x80
0x0000000000401a23 : ja 0x401a2a ; pop rbp ; ret
0x0000000000401a2f : je 0x401a2d ; pop rbp ; mov edi, 0x62d2d8 ; jmp rax
0x0000000000401a95 : jle 0x401a55 ; and al, byte ptr [rax] ; add ebx, esi ; ret
0x000000000040172b : jmp 0x401567
0x0000000000420756 : jmp 0x41c9be
0x000000000042075b : jmp 0x41ca49
0x0000000000420a36 : jmp 0x41e700
0x000000000041cbe2 : jmp 0x420766
0x000000000042944e : jmp 0x425688
0x0000000000429467 : jmp 0x425744
0x000000000042b0df : jmp qword ptr [rax]
0x000000000042b70b : jmp qword ptr [rbx]
0x000000000041e21a : jmp qword ptr [rdi]
0x0000000000401a37 : jmp rax
0x0000000000401ee9 : jmp rcx
0x0000000000401a77 : jmp rdx
0x0000000000401a60 : jne 0x401a67 ; pop rbp ; ret
0x000000000042b38d : jno 0x42b38f ; jmp qword ptr [rax]
0x000000000040de54 : jo 0x40deb5 ; ret
0x000000000040cabf : js 0x40cac8 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040cee0 : js 0x40cf40 ; pop rbp ; ret
0x000000000040dcf5 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040505f : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040d321 : lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040dcf4 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040d320 : lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000042ba51 : leave ; std ; call qword ptr [rax]
0x000000000042944a : lodsd eax, dword ptr [rsi] ; sar edi, -1 ; jmp 0x42568c
0x00000000004063dd : loope 0x4063e6 ; movzx eax, cl ; pop rbp ; ret
0x000000000040673b : loopne 0x4067a1 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040d31f : loopne 0x40d370 ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040d31e : loopne 0x40d371 ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x00000000004105e5 : loopne 0x410635 ; add esp, 0x20 ; pop rbp ; ret
0x00000000004105e4 : loopne 0x410636 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000410a09 : loopne 0x410a6f ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000411b32 : loopne 0x411b98 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000423170 : loopne 0x4231d6 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042b08c : loopne 0x42b02e ; std ; call rax
0x000000000042b811 : mov ah, -3 ; call rax
0x000000000042b810 : mov al, -0x4c ; std ; call rax
0x0000000000404d7e : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042b280 : mov al, 0xd ; add byte ptr [rax], al ; xor byte ptr [rax], 0xfe ; call rax
0x000000000042b088 : mov al, 5 ; add byte ptr [rax], al ; loopne 0x42b032 ; std ; call rax
0x0000000000406859 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004076f4 : mov al, byte ptr [rbp - 6] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042b0dd : mov bl, -3 ; jmp qword ptr [rax]
0x0000000000407f81 : mov byte ptr [0x62d3e0], al ; pop rbp ; ret
0x000000000040dc20 : mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x000000000041e211 : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; jmp qword ptr [rdi]
0x0000000000408188 : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret
0x000000000040b85c : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x000000000040a06e : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x000000000040d046 : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 1
0x0000000000401a93 : mov byte ptr [rip + 0x22b87e], 1 ; ret
0x00000000004063e0 : mov dh, -0x3f ; pop rbp ; ret
0x0000000000408583 : mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406ab7 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000040685f : mov dh, -0x40 ; pop rbp ; ret
0x0000000000404afa : mov dh, 0x4d ; test byte ptr [rax - 0x75], 0x7d ; call 0xffffffffb102d456
0x000000000042b0cd : mov dl, -3 ; jmp rax
0x000000000042b3bd : mov dr1, esi ; jmp rax
0x0000000000407f5d : mov dword ptr [0x62d3d8], edi ; pop rbp ; ret
0x0000000000429465 : mov dword ptr [rax], ecx ; jmp 0x425746
0x0000000000408eaa : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000408ff8 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004210fc : mov dword ptr [rbp - 0x18], eax ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000401d69 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402ce5 : mov dword ptr [rbp - 0x34], eax ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000405489 : mov dword ptr [rbp - 0x98], eax ; call 0x4016d8
0x00000000004054ae : mov dword ptr [rbp - 0xa4], ecx ; call 0x4016d8
0x0000000000401c87 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407ae7 : mov dword ptr [rbp - 0xc], eax ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x000000000041154c : mov dword ptr [rdx], ecx ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040cedc : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000410025 : mov eax, 0xf0658d48 ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000401a96 : mov eax, 0xf3010022 ; ret
0x00000000004110c1 : mov eax, dword ptr [rax] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000413cd1 : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000408dd8 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040fb51 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408464 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000413cce : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000408dd5 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040da8a : mov eax, dword ptr [rbp - 0x10] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000408353 : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000409164 : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000040fa5f : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000408d8d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000408ea4 : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040e054 : mov eax, dword ptr [rbp - 0x18] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000408877 : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004105e3 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d31d : mov eax, dword ptr [rbp - 0x20] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000413ae8 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000408ffa : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000406247 : mov eax, dword ptr [rbp - 0x30] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004063a7 : mov eax, dword ptr [rbp - 0x30] ; pop rbp ; ret
0x000000000040e8d8 : mov eax, dword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000407efc : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040ceda : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000407a0d : mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000412712 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405623 : mov eax, edx ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401abb : mov ebp, esp ; call rax
0x0000000000401a21 : mov ebp, esp ; ja 0x401a2c ; pop rbp ; ret
0x0000000000401551 : mov ebx, 0x48000002 ; add esp, 8 ; ret
0x0000000000401ee2 : mov ecx, dword ptr [rax*8 + 0x4299a0] ; jmp rcx
0x0000000000409827 : mov ecx, dword ptr [rax*8 + 0x42a4d0] ; jmp rcx
0x000000000040a341 : mov ecx, dword ptr [rax*8 + 0x42a518] ; jmp rcx
0x000000000040ebe2 : mov ecx, dword ptr [rax*8 + 0x42a9d8] ; jmp rcx
0x000000000041b0ff : mov ecx, dword ptr [rax*8 + 0x42ad90] ; jmp rcx
0x000000000041605d : mov ecx, dword ptr [rax*8 + 0x42ae18] ; jmp rcx
0x00000000004214dc : mov ecx, dword ptr [rax*8 + 0x42ae40] ; jmp rcx
0x000000000042747c : mov ecx, dword ptr [rax*8 + 0x42af18] ; jmp rcx
0x0000000000408ea7 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401ab5 : mov edi, 0x62ce20 ; mov rbp, rsp ; call rax
0x0000000000401a32 : mov edi, 0x62d2d8 ; jmp rax
0x0000000000401a72 : mov edi, 0x62d2d8 ; jmp rdx
0x0000000000420a37 : mov edi, 0xe9ffffdc ; ret
0x0000000000429917 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000429916 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000415613 : mov edx, dword ptr [rbp - 0x70] ; mov rdx, qword ptr [rdx] ; call 0x401828
0x0000000000415617 : mov edx, dword ptr [rdx] ; call 0x401824
0x0000000000401a70 : mov esi, eax ; mov edi, 0x62d2d8 ; jmp rdx
0x000000000042c024 : mov esp, 0x9800000b ; cmp edi, esi ; jmp rcx
0x0000000000406aba : mov esp, ebp ; pop rbp ; ret
0x0000000000407f5c : mov qword ptr [0x62d3d8], rdi ; pop rbp ; ret
0x0000000000429464 : mov qword ptr [rax], rcx ; jmp 0x425747
0x00000000004210fb : mov qword ptr [rbp - 0x18], rax ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000405488 : mov qword ptr [rbp - 0x98], rax ; call 0x4016d9
0x000000000041154b : mov qword ptr [rdx], rcx ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040cedb : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x00000000004110c0 : mov rax, qword ptr [rax] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040fb50 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408463 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000408dd4 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040da89 : mov rax, qword ptr [rbp - 0x10] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000408352 : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040fa5e : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000408d8c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040e053 : mov rax, qword ptr [rbp - 0x18] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000408876 : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004105e2 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406246 : mov rax, qword ptr [rbp - 0x30] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004063a6 : mov rax, qword ptr [rbp - 0x30] ; pop rbp ; ret
0x000000000040e8d7 : mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000407efb : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000412711 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000405622 : mov rax, rdx ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401aba : mov rbp, rsp ; call rax
0x0000000000401a20 : mov rbp, rsp ; ja 0x401a2d ; pop rbp ; ret
0x0000000000401ee1 : mov rcx, qword ptr [rax*8 + 0x4299a0] ; jmp rcx
0x0000000000409826 : mov rcx, qword ptr [rax*8 + 0x42a4d0] ; jmp rcx
0x000000000040a340 : mov rcx, qword ptr [rax*8 + 0x42a518] ; jmp rcx
0x000000000040ebe1 : mov rcx, qword ptr [rax*8 + 0x42a9d8] ; jmp rcx
0x000000000041b0fe : mov rcx, qword ptr [rax*8 + 0x42ad90] ; jmp rcx
0x000000000041605c : mov rcx, qword ptr [rax*8 + 0x42ae18] ; jmp rcx
0x00000000004214db : mov rcx, qword ptr [rax*8 + 0x42ae40] ; jmp rcx
0x000000000042747b : mov rcx, qword ptr [rax*8 + 0x42af18] ; jmp rcx
0x0000000000415612 : mov rdx, qword ptr [rbp - 0x70] ; mov rdx, qword ptr [rdx] ; call 0x401829
0x0000000000415616 : mov rdx, qword ptr [rdx] ; call 0x401825
0x0000000000401a6f : mov rsi, rax ; mov edi, 0x62d2d8 ; jmp rdx
0x0000000000406ab9 : mov rsp, rbp ; pop rbp ; ret
0x0000000000401ee0 : movabs al, byte ptr [0x4299a0c50c8b48] ; jmp rcx
0x000000000042c40c : movsb byte ptr [rdi], byte ptr [rsi] ; sldt word ptr [rax] ; add byte ptr [rbp - 1], cl ; call rbx
0x00000000004207ac : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000420e1e : movsx eax, cl ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408582 : movzx eax, al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406ab6 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040685e : movzx eax, al ; pop rbp ; ret
0x00000000004063df : movzx eax, cl ; pop rbp ; ret
0x000000000042b3bc : nop ; mov dr1, esi ; jmp rax
0x0000000000415615 : nop ; mov rdx, qword ptr [rdx] ; call 0x401826
0x0000000000429938 : nop dword ptr [rax + rax] ; ret
0x000000000042b241 : or al, 0 ; add byte ptr [rax], ah ; sub edi, esi ; call rax
0x000000000040661e : or al, 0x25 ; push 0xf0062d2 ; sahf ; ret 0x348b
0x000000000040e716 : or al, 0x25 ; ret 0x42a9
0x000000000040d0a9 : or byte ptr [r15], cl ; xchg eax, ebp ; ret 0x348b
0x000000000040b473 : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000042508c : or byte ptr [r8 - 0x75], cl ; adc byte ptr [rax - 0x7f], cl ; ret 0x10
0x0000000000428ccb : or byte ptr [r8 - 0x75], cl ; adc byte ptr [rax - 0x7f], cl ; ret 0x20
0x000000000040b474 : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000042508d : or byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7f], cl ; ret 0x10
0x0000000000428ccc : or byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7f], cl ; ret 0x20
0x0000000000422328 : or byte ptr [rax - 0x75], cl ; push rcx ; or byte ptr [rax - 0x7d], cl ; ret 0x480f
0x000000000042232c : or byte ptr [rax - 0x7d], cl ; ret 0x480f
0x00000000004030e9 : or byte ptr [rcx + 0x1f9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x0000000000406b7c : or byte ptr [rcx + 0x2038], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x0000000000406fbc : or byte ptr [rcx + 0x2138], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000040f50d : or byte ptr [rcx + 0x28f9], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x0000000000403236 : or byte ptr [rcx + 0x2f9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x00000000004068cc : or byte ptr [rcx + 0x3038], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x0000000000403391 : or byte ptr [rcx + 0x3f9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x00000000004034ec : or byte ptr [rcx + 0x5f9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x0000000000406ebc : or byte ptr [rcx + 0x6138], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000040301e : or byte ptr [rcx + 0x7f9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x0000000000403668 : or byte ptr [rcx + 0x8f9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x00000000004062c5 : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5588
0x0000000000412552 : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x0000000000421257 : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000040d0aa : or byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x000000000040e41d : or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x000000000040e4bf : or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x0000000000429466 : or cl, ch ; salc ; ret 0xffff
0x0000000000400ddb : or eax, 0x40000 ; ret
0x00000000004102af : or eax, 0x48fffff9 ; add esp, 0x30 ; pop rbp ; ret
0x000000000042b211 : or eax, dword ptr [rax] ; add byte ptr [rax], ah ; and bh, dh ; call qword ptr [rax]
0x000000000040932d : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404778 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042992c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040673d : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040477a : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042992e : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040477c : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000429930 : pop r14 ; pop r15 ; ret
0x000000000040dcf9 : pop r14 ; pop rbp ; ret
0x000000000040477e : pop r15 ; pop rbp ; ret
0x0000000000429932 : pop r15 ; ret
0x0000000000420a9d : pop rax ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; xor cl, ch ; jmp rax
0x0000000000403a0b : pop rax ; pop rbx ; pop rbp ; ret
0x000000000042b708 : pop rax ; stosd dword ptr [rdi], eax ; std ; jmp qword ptr [rbx]
0x0000000000401a92 : pop rbp ; mov byte ptr [rip + 0x22b87e], 1 ; ret
0x0000000000401a31 : pop rbp ; mov edi, 0x62d2d8 ; jmp rax
0x0000000000401a6e : pop rbp ; mov rsi, rax ; mov edi, 0x62d2d8 ; jmp rdx
0x000000000042992b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040477b : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042992f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401a25 : pop rbp ; ret
0x000000000040673c : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405062 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040dcf8 : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000403a0c : pop rbx ; pop rbp ; ret
0x000000000040477f : pop rdi ; pop rbp ; ret
0x0000000000429933 : pop rdi ; ret
0x0000000000407391 : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x0000000000406a51 : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x000000000040477d : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000429931 : pop rsi ; pop r15 ; ret
0x000000000040dcfa : pop rsi ; pop rbp ; ret
0x0000000000404779 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042992d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040673e : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004068d4 : popfq ; ret 0x348b
0x00000000004069a0 : popfq ; ret 0xc8b
0x000000000042b08d : popfq ; std ; call rax
0x0000000000406620 : push 0xf0062d2 ; sahf ; ret 0x348b
0x000000000042b23f : push qword ptr [rax + 0x2000000c] ; sub edi, esi ; call rax
0x000000000042b087 : push qword ptr [rax - 0x1ffffffb] ; popfq ; std ; call rax
0x000000000042b27f : push qword ptr [rax - 0x7ffffff3] ; xor dh, bh ; call rax
0x0000000000413663 : push rax ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000042b097 : push rax ; add eax, 0x9ec00000 ; std ; call qword ptr [rax]
0x000000000042b20f : push rax ; or eax, dword ptr [rax] ; add byte ptr [rax], ah ; and bh, dh ; call qword ptr [rax]
0x000000000040db2e : push rax ; pop rbp ; ret
0x0000000000402c22 : push rbp ; call 0x202ad74
0x000000000040b477 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000401ab4 : push rbp ; mov edi, 0x62ce20 ; mov rbp, rsp ; call rax
0x0000000000415614 : push rbp ; nop ; mov rdx, qword ptr [rdx] ; call 0x401827
0x000000000040538f : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 8
0x000000000040ce0e : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000042232b : push rcx ; or byte ptr [rax - 0x7d], cl ; ret 0x480f
0x000000000042b704 : pushfq ; add al, byte ptr [rax] ; add byte ptr [rax - 0x55], bl ; std ; jmp qword ptr [rbx]
0x000000000040dc1f : pushfq ; mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x0000000000403cda : pushfq ; ret
0x0000000000417ac3 : pushfq ; ret 0x348b
0x000000000040568b : pushfq ; ret 0x841
0x0000000000408718 : pushfq ; ret 0x844
0x0000000000402774 : pushfq ; ret 0x845
0x0000000000417b85 : pushfq ; ret 0xc8b
0x0000000000405809 : pushfq ; ret 0xd008
0x000000000040e24a : pushfq ; ret 0xd108
0x000000000042bb10 : rcl dl ; std ; call rbx
0x0000000000400de0 : ret
0x0000000000422233 : ret 0x10
0x0000000000401f03 : ret 0x125
0x000000000040b865 : ret 0x13
0x00000000004270e2 : ret 0x1689
0x000000000040b490 : ret 0x1ae8
0x0000000000423150 : ret 0x20
0x0000000000401932 : ret 0x22b8
0x0000000000401732 : ret 0x22b9
0x0000000000405605 : ret 0x28
0x000000000040a077 : ret 0x2a
0x000000000041db84 : ret 0x2d
0x000000000040879f : ret 0x30
0x0000000000402b61 : ret 0x348b
0x000000000041fb9d : ret 0x3de8
0x0000000000408b15 : ret 0x4001
0x000000000042a4d0 : ret 0x409d
0x000000000040e718 : ret 0x42a9
0x000000000040e042 : ret 0x4801
0x000000000042232f : ret 0x480f
0x00000000004047ce : ret 0x48d0
0x0000000000410932 : ret 0x48e0
0x0000000000419dd2 : ret 0x48e8
0x00000000004047b0 : ret 0x48f0
0x000000000040e197 : ret 0x4cc0
0x0000000000403abb : ret 0x4cd0
0x000000000040570f : ret 0x4cf0
0x0000000000418bcd : ret 0x50
0x00000000004062ce : ret 0x5588
0x000000000040e420 : ret 0x7ae8
0x000000000041a29b : ret 0x7fe8
0x00000000004121d5 : ret 0x8041
0x0000000000403e41 : ret 0x8141
0x00000000004087ad : ret 0x8148
0x000000000040568c : ret 0x841
0x0000000000408719 : ret 0x844
0x0000000000402775 : ret 0x845
0x0000000000404cec : ret 0x8801
0x0000000000403ba0 : ret 0x8901
0x0000000000404fd6 : ret 0x8948
0x000000000040b7ec : ret 0x89a5
0x0000000000406495 : ret 0x8b44
0x0000000000406692 : ret 0x8b48
0x0000000000404d56 : ret 0x8b4c
0x000000000041a312 : ret 0x8e8
0x0000000000412ade : ret 0xb
0x0000000000404b03 : ret 0xb0
0x0000000000401a55 : ret 0xc148
0x0000000000403027 : ret 0xc8b
0x0000000000417ece : ret 0xca20
0x000000000040580a : ret 0xd008
0x000000000040e24b : ret 0xd108
0x000000000040e83c : ret 0xd284
0x000000000040e4c2 : ret 0xd8e8
0x0000000000421260 : ret 0xe280
0x0000000000401efa : ret 0xea81
0x000000000040cd5c : ret 0xee8
0x00000000004287fe : ret 0xf
0x00000000004104d1 : ret 0xf01
0x000000000041b7b0 : ret 0xf981
0x0000000000403a90 : ret 0xff70
0x0000000000403b91 : ret 0xff81
0x000000000041561b : ret 0xfffe
0x0000000000405491 : ret 0xffff
0x0000000000400338 : ret 1
0x000000000041e480 : ret 2
0x0000000000405c4e : ret 4
0x0000000000404f9b : ret 8
0x000000000042b950 : rol al, 1 ; std ; call rsp
0x000000000042b0c8 : rol byte ptr [rsi], 0 ; add byte ptr [rax - 0x4e], al ; std ; jmp rax
0x00000000004063db : rol dword ptr [rax - 0x49f0fe1f], -0x3f ; pop rbp ; ret
0x000000000040f713 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000407efd : ror byte ptr [r8 - 0x7d], -0x3c ; pop rbp ; ret
0x0000000000401a5c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401a6b ; pop rbp ; ret
0x0000000000406ab8 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x000000000040f714 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000407efe : ror byte ptr [rax - 0x7d], -0x3c ; pop rbp ; ret
0x0000000000405390 : ror byte ptr [rax - 0x7f], 1 ; ret 8
0x000000000040ce0f : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000405bfe : ror dword ptr [rdi], -0x69 ; ret 0x348b
0x000000000041e150 : ror dword ptr [rdi], -0x6b ; ret 0x348b
0x0000000000417ecb : ror dword ptr [rdi], -0x6c ; ret 0xca20
0x0000000000406625 : sahf ; ret 0x348b
0x0000000000407396 : sahf ; ret 0x5588
0x0000000000406a56 : sahf ; ret 0xc8b
0x000000000042b09d : sahf ; std ; call qword ptr [rax]
0x000000000040a304 : sal dh, cl ; ret 0x8901
0x000000000042947b : salc ; ret
0x0000000000429468 : salc ; ret 0xffff
0x000000000042bb11 : sar ch, cl ; call rbx
0x0000000000401a5e : sar eax, 1 ; jne 0x401a69 ; pop rbp ; ret
0x000000000042944b : sar edi, -1 ; jmp 0x42568b
0x0000000000401a5d : sar rax, 1 ; jne 0x401a6a ; pop rbp ; ret
0x0000000000402ab3 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004095a0 : sbb cl, byte ptr [rcx - 0x7f] ; ret
0x0000000000413e87 : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040d83d : scasd eax, dword ptr [rdi] ; ret
0x0000000000401f02 : scasd eax, dword ptr [rdi] ; ret 0x125
0x000000000040d571 : scasd eax, dword ptr [rdi] ; ret 0x8141
0x0000000000401a34 : shl byte ptr [rdx], cl ; jmp rax
0x0000000000401a74 : shl byte ptr [rdx], cl ; jmp rdx
0x0000000000408c4d : shl dword ptr [rdx], cl ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000407f61 : shl dword ptr [rdx], cl ; pop rbp ; ret
0x000000000042c40d : sldt word ptr [rax] ; add byte ptr [rbp - 1], cl ; call rbx
0x000000000040699a : stc ; add byte ptr [r8], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x0000000000404bac : stc ; add byte ptr [rax], r8b ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x00000000004034ee : stc ; add eax, 0xf000000 ; xchg eax, esp ; ret 0xc8b
0x0000000000407390 : stc ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x0000000000406a50 : stc ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x000000000042b09e : std ; call qword ptr [rax]
0x000000000042b9b2 : std ; call qword ptr [rdx]
0x000000000042b9d2 : std ; call qword ptr [rsi]
0x000000000042b08e : std ; call rax
0x000000000042bb12 : std ; call rbx
0x000000000042b952 : std ; call rsp
0x000000000042b0de : std ; jmp qword ptr [rax]
0x000000000042b70a : std ; jmp qword ptr [rbx]
0x000000000042b0ce : std ; jmp rax
0x000000000042b4f2 : std ; jmp rdx
0x000000000042b086 : std ; push qword ptr [rax - 0x1ffffffb] ; popfq ; std ; call rax
0x000000000042b096 : std ; push rax ; add eax, 0x9ec00000 ; std ; call qword ptr [rax]
0x000000000040685b : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042b709 : stosd dword ptr [rdi], eax ; std ; jmp qword ptr [rbx]
0x000000000042b245 : sub edi, esi ; call rax
0x0000000000429981 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000429980 : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000404afb : test byte ptr [r8 - 0x75], 0x7d ; call 0xffffffffb102d455
0x0000000000404afc : test byte ptr [rax - 0x75], 0x7d ; call 0xffffffffb102d454
0x000000000042993a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000041e214 : test dword ptr [rip - 0x17000000], eax ; jmp qword ptr [rdi]
0x000000000040818b : test dword ptr [rip - 0x17000000], eax ; ret
0x000000000040b85f : test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x000000000040a071 : test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x000000000041db7e : test dword ptr [rip - 0x17000000], eax ; ret 0x2d
0x0000000000412ad8 : test dword ptr [rip - 0x17000000], eax ; ret 0xb
0x00000000004287f8 : test dword ptr [rip - 0x17000000], eax ; ret 0xf
0x000000000040b15c : test dword ptr [rip - 0x17000000], eax ; ret 1
0x0000000000405c48 : test dword ptr [rip - 0x17000000], eax ; ret 4
0x0000000000410403 : test eax, 0x48fffffc ; add esp, 0x10 ; pop rbp ; ret
0x000000000040e711 : test eax, 0x8d480042 ; or al, 0x25 ; ret 0x42a9
0x0000000000417eca : wait ; ror dword ptr [rdi], -0x6c ; ret 0xca20
0x0000000000411650 : xchg eax, ebp ; ret
0x0000000000402b60 : xchg eax, ebp ; ret 0x348b
0x00000000004062cd : xchg eax, ebp ; ret 0x5588
0x00000000004121d4 : xchg eax, ebp ; ret 0x8041
0x000000000040fde2 : xchg eax, ebp ; ret 0x8b44
0x00000000004118b6 : xchg eax, ebp ; ret 0xc8b
0x000000000042125f : xchg eax, ebp ; ret 0xe280
0x00000000004063da : xchg eax, ebp ; rol dword ptr [rax - 0x49f0fe1f], -0x3f ; pop rbp ; ret
0x0000000000405c00 : xchg eax, edi ; ret 0x348b
0x0000000000419686 : xchg eax, edi ; ret 0x8b44
0x000000000040a157 : xchg eax, esi ; ret 0x348b
0x000000000040939d : xchg eax, esp ; ret
0x0000000000406b84 : xchg eax, esp ; ret 0x348b
0x0000000000403e40 : xchg eax, esp ; ret 0x8141
0x0000000000406494 : xchg eax, esp ; ret 0x8b44
0x0000000000403026 : xchg eax, esp ; ret 0xc8b
0x0000000000417ecd : xchg eax, esp ; ret 0xca20
0x000000000040e83b : xchg eax, esp ; ret 0xd284
0x000000000041b7af : xchg eax, esp ; ret 0xf981
0x0000000000403b90 : xchg eax, esp ; ret 0xff81
0x000000000040e417 : xor byte ptr [rax - 0x75], cl ; add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x000000000040e4b9 : xor byte ptr [rax - 0x75], cl ; add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x000000000042b284 : xor byte ptr [rax], 0xfe ; call rax
0x0000000000420aa3 : xor cl, ch ; jmp rax
0x000000000042b285 : xor dh, bh ; call rax
0x0000000000408ff6 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
