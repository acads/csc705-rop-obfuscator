0x00000000004288be : adc al, -0x75 ; hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041210b : adc al, 0x25 ; add byte ptr [rip - 0x76baff9d], dl ; ret
0x0000000000406ecd : adc al, 0x25 ; add byte ptr [rip - 0x76beff9d], dl ; ret
0x000000000040fbb7 : adc al, 0x25 ; add byte ptr [rip - 0x76beff9d], dl ; ret 0x8141
0x000000000042f4a4 : adc al, 2 ; add byte ptr [rax], al ; test al, -0x77 ; std ; call qword ptr [rsi]
0x000000000041c3ff : adc al, byte ptr [rcx + 0x4f9] ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x000000000041c2c2 : adc al, byte ptr [rcx + 0x4f9] ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf280
0x0000000000430261 : adc bh, bh ; jmp qword ptr [rcx]
0x000000000041fcb2 : adc byte ptr [rax - 0x7f], cl ; ret 0x108
0x000000000042002f : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x0000000000404ada : adc dword ptr [rax - 0x7f], ecx ; ret 0x78
0x0000000000406ed0 : adc eax, 0x89410063 ; ret
0x00000000004090a0 : adc eax, 0x89410063 ; ret 0x8141
0x000000000040d54f : adc eax, 0x89440063 ; ret
0x000000000041210e : adc eax, 0x89450063 ; ret
0x0000000000404103 : adc eax, 0x89450063 ; ret 0x8141
0x0000000000430665 : adc eax, dword ptr [rax] ; add byte ptr [rax], bh ; jno 0x430670 ; call qword ptr [rdx]
0x000000000040896d : adc esp, dword ptr [rbx] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000401ce4 : adc esp, dword ptr [rbx] ; jmp rax
0x0000000000401d24 : adc esp, dword ptr [rbx] ; jmp rdx
0x0000000000407e61 : adc esp, dword ptr [rbx] ; pop rbp ; ret
0x000000000042efe7 : add ah, bl ; sub al, -1 ; call rsp
0x000000000042f583 : add ah, dh ; add al, byte ptr [rax] ; add byte ptr [rax - 0x72], bh ; std ; jmp rbx
0x0000000000430663 : add ah, dl ; adc eax, dword ptr [rax] ; add byte ptr [rax], bh ; jno 0x430672 ; call qword ptr [rdx]
0x000000000042f607 : add al, bh ; xchg eax, esp ; std ; call rbx
0x000000000042f585 : add al, byte ptr [rax] ; add byte ptr [rax - 0x72], bh ; std ; jmp rbx
0x000000000042f525 : add al, byte ptr [rax] ; add byte ptr [rax - 0x73], cl ; std ; call qword ptr [rax]
0x0000000000405868 : add al, ch ; push rdx ; ret
0x000000000041f6c7 : add al, ch ; ret
0x0000000000405474 : add al, ch ; xchg eax, esi ; ret
0x000000000043025f : add al, dh ; adc bh, bh ; jmp qword ptr [rcx]
0x000000000042f8cf : add al, dl ; jrcxz 0x42f8d4 ; call qword ptr [rdi]
0x000000000042cd3f : add bl, dh ; ret
0x000000000042bb6b : add byte ptr [r8], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x000000000042183b : add byte ptr [rax + 0x21], cl ; ret 0x8148
0x00000000004067ee : add byte ptr [rax - 0x6bf10000], al ; ret 0xc8b
0x000000000042f587 : add byte ptr [rax - 0x72], bh ; std ; jmp rbx
0x000000000040e7cc : add byte ptr [rax - 0x73], cl ; clc ; pop rbx ; pop rbp ; ret
0x000000000040e519 : add byte ptr [rax - 0x73], cl ; or al, 0x25 ; ret 0x42e4
0x000000000042f527 : add byte ptr [rax - 0x73], cl ; std ; call qword ptr [rax]
0x0000000000423767 : add byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x0000000000410e10 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000414e32 : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000422119 : add byte ptr [rax - 0x77], cl ; or cl, ch ; ret
0x0000000000402a90 : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000042f4a2 : add byte ptr [rax], al ; adc al, 2 ; add byte ptr [rax], al ; test al, -0x77 ; std ; call qword ptr [rsi]
0x000000000042cd3d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000421839 : add byte ptr [rax], al ; add byte ptr [rax + 0x21], cl ; ret 0x8148
0x0000000000423765 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x0000000000414e30 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000422117 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; or cl, ch ; ret
0x0000000000402a8e : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000042cd3b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000402b5f : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000419e18 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000042cbd9 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x00000000004135f9 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004085be : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000423764 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040368a : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042cd3c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000412118 : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x000000000040410d : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x8141
0x000000000040d5b8 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000426e5b : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000403a64 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7478b], cl ; ret 0xb0
0x0000000000403bc1 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b74b8b], cl ; ret 0xb0
0x0000000000403cd1 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7538b], cl ; ret 0xb0
0x00000000004022ad : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret
0x0000000000402f78 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x844
0x0000000000401e15 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x0000000000406eda : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x00000000004090aa : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x125
0x000000000042124f : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x00000000004153d4 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000040411f : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x00000000004153fe : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x48b
0x00000000004022a2 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x00000000004053f5 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xf981
0x000000000041b4a2 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xfa81
0x0000000000418b5d : add byte ptr [rax], al ; add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x000000000040d558 : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x51], al ; ret
0x000000000041fe94 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000042bb6c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x000000000040412a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret
0x000000000040df66 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x000000000042c562 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x000000000042bc22 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x00000000004212bc : add byte ptr [rax], al ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret
0x0000000000401d9b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x125
0x00000000004256da : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000401de0 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x000000000040fcd7 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x48b
0x0000000000412275 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5588
0x00000000004114de : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x0000000000413fc0 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x9588
0x000000000041a00b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x0000000000402b61 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000402b42 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000410c11 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x0000000000406ee8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000404a34 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x000000000040a011 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x000000000041c403 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x000000000040f01c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x0000000000406bb9 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041c2c6 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf280
0x000000000042868e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xfe81
0x000000000041a5e1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xff81
0x000000000041ab86 : add byte ptr [rax], al ; add cl, ch ; jmp qword ptr [rdi]
0x00000000004049c9 : add byte ptr [rax], al ; add cl, ch ; ret
0x000000000041286a : add byte ptr [rax], al ; add cl, ch ; ret 0
0x000000000040b581 : add byte ptr [rax], al ; add cl, ch ; ret 0x13
0x0000000000409d93 : add byte ptr [rax], al ; add cl, ch ; ret 0x2a
0x0000000000428f0a : add byte ptr [rax], al ; add cl, ch ; ret 0xb
0x000000000040ae7e : add byte ptr [rax], al ; add cl, ch ; ret 1
0x0000000000416618 : add byte ptr [rax], al ; add cl, ch ; ret 5
0x0000000000402c21 : add byte ptr [rax], al ; add cl, ch ; ret 7
0x0000000000407fff : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040904f : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004036f1 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041de3e : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000419e1a : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004017ab : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000042fc1f : add byte ptr [rax], al ; and dh, bh ; call rcx
0x0000000000430516 : add byte ptr [rax], al ; call 0xffffffffd243045f
0x000000000042f606 : add byte ptr [rax], al ; clc ; xchg eax, esp ; std ; call rbx
0x000000000042f8ca : add byte ptr [rax], al ; cmp al, 6 ; add byte ptr [rax], al ; shl bl, 1 ; std ; call qword ptr [rdi]
0x0000000000430666 : add byte ptr [rax], al ; cmp byte ptr [rcx - 1], dh ; call qword ptr [rdx]
0x000000000042efe6 : add byte ptr [rax], al ; fsubr qword ptr [rdi + rdi*8] ; call rsp
0x000000000042f582 : add byte ptr [rax], al ; hlt ; add al, byte ptr [rax] ; add byte ptr [rax - 0x72], bh ; std ; jmp rbx
0x000000000042ecf6 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; fdivp st(5) ; jmp rsp
0x000000000042fcfa : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; or al, byte ptr [rax] ; add byte ptr [rax], dl ; cmp dh, bh ; call qword ptr [rax]
0x000000000042f602 : add byte ptr [rax], al ; je 0x42f612 ; add byte ptr [rax], al ; clc ; xchg eax, esp ; std ; call rbx
0x00000000004018c9 : add byte ptr [rax], al ; jmp 0x4017c9
0x0000000000406400 : add byte ptr [rax], al ; jmp 0x405242
0x000000000040546e : add byte ptr [rax], al ; jmp 0x406460
0x000000000041c459 : add byte ptr [rax], al ; jmp 0x41d5d4
0x000000000042f586 : add byte ptr [rax], al ; js 0x42f51d ; std ; jmp rbx
0x0000000000430742 : add byte ptr [rax], al ; mov ah, 0x14 ; add byte ptr [rax], al ; pop rax ; jle 0x430753 ; jmp rdi
0x000000000042b95c : add byte ptr [rax], al ; mov al, sil ; movzx eax, al ; pop rbp ; ret
0x000000000042b7ad : add byte ptr [rax], al ; mov ax, si ; movzx eax, ax ; pop rbp ; ret
0x0000000000408e82 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000428748 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000042cbdb : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x00000000004135fb : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x0000000000408af2 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004085c0 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000423b99 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000423766 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000414e31 : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000042ee6e : add byte ptr [rax], al ; mov word ptr [rsi + rdi*8], dr0 ; call rsp
0x0000000000430726 : add byte ptr [rax], al ; pop rax ; jle 0x43072f ; call qword ptr [rsi]
0x0000000000430746 : add byte ptr [rax], al ; pop rax ; jle 0x43074f ; jmp rdi
0x000000000040368c : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040d5b9 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000429a95 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040c7e1 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000042cd3e : add byte ptr [rax], al ; ret
0x000000000042f8ce : add byte ptr [rax], al ; shl bl, 1 ; std ; call qword ptr [rdi]
0x000000000042ed36 : add byte ptr [rax], al ; sub al, -0x14 ; std ; jmp rsp
0x000000000042f4a6 : add byte ptr [rax], al ; test al, -0x77 ; std ; call qword ptr [rsi]
0x0000000000430512 : add byte ptr [rax], al ; test byte ptr [rdx], dl ; add byte ptr [rax], al ; call 0xffffffffd2430463
0x000000000042f522 : add byte ptr [rax], al ; xchg eax, esp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x73], cl ; std ; call qword ptr [rax]
0x0000000000430667 : add byte ptr [rax], bh ; jno 0x43066e ; call qword ptr [rdx]
0x0000000000430a87 : add byte ptr [rax], cl ; mov ah, -1 ; call rax
0x000000000042fcff : add byte ptr [rax], dl ; cmp dh, bh ; call qword ptr [rax]
0x000000000041211a : add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x000000000040410f : add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x8141
0x0000000000412110 : add byte ptr [rbp - 0x77], al ; ret
0x0000000000404105 : add byte ptr [rbp - 0x77], al ; ret 0x8141
0x000000000040d5ba : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000429a96 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040c7e2 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000042f603 : add byte ptr [rbx + rax], dh ; add al, bh ; xchg eax, esp ; std ; call rbx
0x0000000000403a66 : add byte ptr [rbx - 0x76b7478b], cl ; ret 0xb0
0x0000000000403bc3 : add byte ptr [rbx - 0x76b74b8b], cl ; ret 0xb0
0x0000000000403cd3 : add byte ptr [rbx - 0x76b7538b], cl ; ret 0xb0
0x00000000004067eb : add byte ptr [rcx + 0x8000f9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x0000000000413fbc : add byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x9588
0x000000000041a007 : add byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x000000000042868a : add byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xfe81
0x0000000000406ef4 : add byte ptr [rcx + 0xf], al ; pushfq ; mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x00000000004022af : add byte ptr [rcx + 0xf], al ; pushfq ; ret
0x0000000000402f7a : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x844
0x0000000000401e17 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x0000000000406edc : add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x00000000004090ac : add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x125
0x0000000000421251 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x00000000004153d6 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000404121 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000415400 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x48b
0x00000000004022a4 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x00000000004053f7 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xf981
0x000000000041b4a4 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xfa81
0x000000000040d92c : add byte ptr [rcx + 0xfe], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040e168 : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040a00d : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x0000000000406ed2 : add byte ptr [rcx - 0x77], al ; ret
0x00000000004090a2 : add byte ptr [rcx - 0x77], al ; ret 0x8141
0x0000000000418b5f : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x0000000000401d48 : add byte ptr [rcx], al ; ret
0x000000000040d55a : add byte ptr [rdi + rcx - 0x51], al ; ret
0x000000000041fe96 : add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000042bb6e : add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x000000000040412c : add byte ptr [rdi], cl ; pushfq ; ret
0x000000000040df68 : add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x000000000042c564 : add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x000000000042bc24 : add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x00000000004212be : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret
0x0000000000401d9d : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x125
0x00000000004256dc : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000401de2 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x000000000040fcd9 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x48b
0x0000000000412277 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5588
0x00000000004114e0 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x0000000000413fc2 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x9588
0x000000000041a00d : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x0000000000402b63 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000402b44 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000410c13 : add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x0000000000406eea : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000404a36 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x000000000040a013 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x000000000041c405 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x00000000004067f1 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x0000000000406bbb : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041c2c8 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf280
0x0000000000428690 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xfe81
0x000000000041a5e3 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xff81
0x000000000042f523 : add byte ptr [rdx + rax - 0x72b80000], dl ; std ; call qword ptr [rax]
0x000000000042f4a3 : add byte ptr [rdx + rax], dl ; add byte ptr [rax], al ; test al, -0x77 ; std ; call qword ptr [rsi]
0x000000000042fcfb : add byte ptr [rdx + rcx], ch ; add byte ptr [rax], dl ; cmp dh, bh ; call qword ptr [rax]
0x000000000041210d : add byte ptr [rip - 0x76baff9d], dl ; ret
0x0000000000404102 : add byte ptr [rip - 0x76baff9d], dl ; ret 0x8141
0x000000000040d54e : add byte ptr [rip - 0x76bbff9d], dl ; ret
0x0000000000406ecf : add byte ptr [rip - 0x76beff9d], dl ; ret
0x000000000040909f : add byte ptr [rip - 0x76beff9d], dl ; ret 0x8141
0x000000000042265f : add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x000000000042f8cb : add byte ptr [rsi + rax], bh ; add byte ptr [rax], al ; shl bl, 1 ; std ; call qword ptr [rdi]
0x000000000042ecf7 : add byte ptr [rsi + rbx*8 - 3], ch ; jmp rsp
0x000000000042ed37 : add byte ptr [rsp + rbp*8], ch ; std ; jmp rsp
0x00000000004153fd : add byte ptr cs:[rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x48b
0x000000000041ab88 : add cl, ch ; jmp qword ptr [rdi]
0x00000000004049cb : add cl, ch ; ret
0x000000000041286c : add cl, ch ; ret 0
0x000000000040b583 : add cl, ch ; ret 0x13
0x0000000000409d95 : add cl, ch ; ret 0x2a
0x0000000000428f0c : add cl, ch ; ret 0xb
0x000000000040ae80 : add cl, ch ; ret 1
0x000000000041661a : add cl, ch ; ret 5
0x0000000000402c23 : add cl, ch ; ret 7
0x000000000040e13a : add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x000000000040e1dc : add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x0000000000414a15 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000429a94 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040c7e0 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040f018 : add dword ptr [rcx + 0xf9], eax ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x000000000042178d : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000414b7c : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041e6e3 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000403c67 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x000000000042189c : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x00000000004205be : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004244a8 : add dword ptr [rdi], ecx ; ror dword ptr cs:[rdi], -0x69 ; ret 0x348b
0x000000000041ab82 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; jmp qword ptr [rdi]
0x0000000000406954 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret
0x0000000000412866 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0
0x000000000040b57d : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x0000000000409d8f : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x0000000000428f06 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0xb
0x000000000040ae7a : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 1
0x0000000000402c1d : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 7
0x0000000000419d84 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x348b
0x0000000000420904 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x5588
0x0000000000401d44 : add eax, 0x22f62e ; add ebx, esi ; ret
0x000000000041ab85 : add eax, 0xe9000000 ; jmp qword ptr [rdi]
0x00000000004049c8 : add eax, 0xe9000000 ; ret
0x0000000000412869 : add eax, 0xe9000000 ; ret 0
0x000000000040b580 : add eax, 0xe9000000 ; ret 0x13
0x0000000000409d92 : add eax, 0xe9000000 ; ret 0x2a
0x0000000000428f09 : add eax, 0xe9000000 ; ret 0xb
0x000000000040ae7d : add eax, 0xe9000000 ; ret 1
0x0000000000416617 : add eax, 0xe9000000 ; ret 5
0x0000000000402c20 : add eax, 0xe9000000 ; ret 7
0x000000000041c5f8 : add eax, 0xf000000 ; xchg eax, esp ; ret 0xc8b
0x000000000042f605 : add eax, dword ptr [rax] ; add al, bh ; xchg eax, esp ; std ; call rbx
0x0000000000401d0b : add eax, edx ; sar rax, 1 ; jne 0x401d1c ; pop rbp ; ret
0x0000000000401d49 : add ebx, esi ; ret
0x00000000004021bb : add esp, 0x10 ; pop rbp ; ret
0x000000000040fee1 : add esp, 0x118 ; pop rbx ; pop rbp ; ret
0x000000000041d368 : add esp, 0x168 ; pop rbx ; pop rbp ; ret
0x000000000040c7dd : add esp, 0x178 ; pop rbx ; pop rbp ; ret
0x0000000000415efe : add esp, 0x18 ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000410ffc : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000421c00 : add esp, 0x1b8 ; pop rbx ; pop rbp ; ret
0x000000000042ad20 : add esp, 0x1e0 ; pop rbp ; ret
0x000000000042a19d : add esp, 0x1e8 ; pop rbx ; pop rbp ; ret
0x0000000000408368 : add esp, 0x20 ; pop rbp ; ret
0x00000000004036f4 : add esp, 0x30 ; pop rbp ; ret
0x00000000004023c8 : add esp, 0x40 ; pop rbp ; ret
0x0000000000410b3f : add esp, 0x40 ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040d84c : add esp, 0x50 ; pop rbp ; ret
0x0000000000415d0d : add esp, 0x58 ; pop rbx ; pop rbp ; ret
0x0000000000403c6c : add esp, 0x60 ; pop rbp ; ret
0x000000000040db72 : add esp, 0x70 ; pop rbp ; ret
0x000000000040cbfe : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000414894 : add esp, 0xa0 ; pop rbp ; ret
0x0000000000410e5c : add esp, 0xb0 ; pop rbp ; ret
0x0000000000427ff7 : add esp, 0xc0 ; pop rbp ; ret
0x0000000000426e58 : add esp, 0xd8 ; pop rbx ; pop rbp ; ret
0x0000000000406dc2 : add esp, 0xe0 ; pop rbp ; ret
0x0000000000413427 : add esp, 0xf0 ; pop rbp ; ret
0x00000000004017ae : add esp, 8 ; ret
0x0000000000401d0a : add rax, rdx ; sar rax, 1 ; jne 0x401d1d ; pop rbp ; ret
0x00000000004021ba : add rsp, 0x10 ; pop rbp ; ret
0x000000000040fee0 : add rsp, 0x118 ; pop rbx ; pop rbp ; ret
0x000000000041d367 : add rsp, 0x168 ; pop rbx ; pop rbp ; ret
0x000000000040c7dc : add rsp, 0x178 ; pop rbx ; pop rbp ; ret
0x0000000000410ffb : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000421bff : add rsp, 0x1b8 ; pop rbx ; pop rbp ; ret
0x000000000042ad1f : add rsp, 0x1e0 ; pop rbp ; ret
0x000000000042a19c : add rsp, 0x1e8 ; pop rbx ; pop rbp ; ret
0x0000000000408367 : add rsp, 0x20 ; pop rbp ; ret
0x00000000004036f3 : add rsp, 0x30 ; pop rbp ; ret
0x00000000004023c7 : add rsp, 0x40 ; pop rbp ; ret
0x0000000000410b3e : add rsp, 0x40 ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040d84b : add rsp, 0x50 ; pop rbp ; ret
0x0000000000415d0c : add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x0000000000403c6b : add rsp, 0x60 ; pop rbp ; ret
0x000000000040db71 : add rsp, 0x70 ; pop rbp ; ret
0x000000000040cbfd : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000414893 : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000410e5b : add rsp, 0xb0 ; pop rbp ; ret
0x0000000000427ff6 : add rsp, 0xc0 ; pop rbp ; ret
0x0000000000426e57 : add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x0000000000406dc1 : add rsp, 0xe0 ; pop rbp ; ret
0x0000000000413426 : add rsp, 0xf0 ; pop rbp ; ret
0x00000000004017ad : add rsp, 8 ; ret
0x000000000042189b : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004205bd : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401d47 : and al, byte ptr [rax] ; add ebx, esi ; ret
0x0000000000422371 : and byte ptr [r15], cl ; xchg eax, esp ; ret 0x348b
0x0000000000422372 : and byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x000000000042fc21 : and dh, bh ; call rcx
0x0000000000423c15 : and eax, 0x42eba0 ; mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x000000000040e267 : and eax, 0x48ffffee ; add esp, 0x20 ; pop rbp ; ret
0x0000000000407e5f : and eax, 0x631398 ; pop rbp ; ret
0x0000000000407e83 : and eax, 0x6313a0 ; pop rbp ; ret
0x000000000042fcc1 : and edi, esi ; jmp rsp
0x00000000004159d6 : call 0x3882952a
0x00000000004159d5 : call 0x3882952b
0x0000000000425504 : call 0x4017f2
0x0000000000401f17 : call 0x401a39
0x0000000000425813 : call 0x401a52
0x000000000040e936 : call 0x40e942
0x000000000040857c : call 0x49030ecc
0x000000000040857b : call 0x49030ecd
0x000000000040857c : call 0x49030ecf
0x000000000040857b : call 0x49030ed0
0x0000000000416057 : call 0xffffffff8c03fe6e
0x0000000000416056 : call 0xffffffff8c03fe6f
0x0000000000430518 : call 0xffffffffd243045d
0x0000000000412ebb : call 0xffffffffe2402f05
0x000000000040ca79 : call 0xffffffffe90353c9
0x000000000040ca78 : call 0xffffffffe90353ca
0x0000000000424a94 : call 0xffffffffff7bd5e5
0x0000000000424a93 : call 0xffffffffff7bd5e6
0x000000000042cd19 : call qword ptr [r12 + rbx*8]
0x000000000042f52b : call qword ptr [rax]
0x000000000042f8d3 : call qword ptr [rdi]
0x00000000004302e3 : call qword ptr [rdx]
0x000000000042f4ab : call qword ptr [rsi]
0x000000000042cd1a : call qword ptr [rsp + rbx*8]
0x0000000000422d9d : call r8
0x0000000000401d6d : call rax
0x000000000042f60b : call rbx
0x0000000000422b9e : call rcx
0x00000000004303f3 : call rdx
0x000000000042edf3 : call rsp
0x00000000004282c8 : clc ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000423056 : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000414c89 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000423980 : clc ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041f865 : clc ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000427492 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000414892 : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x0000000000427ff5 : clc ; add rsp, 0xc0 ; pop rbp ; ret
0x0000000000401d0f : clc ; jne 0x401d18 ; pop rbp ; ret
0x000000000042855c : clc ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x000000000041eaee : clc ; mov dword ptr [rcx + 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000421567 : clc ; mov dword ptr [rdi + 0x18], 0x95f616 ; pop rbp ; ret
0x000000000042808e : clc ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000421c5b : clc ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000421c7b : clc ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000421c9b : clc ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000403697 : clc ; pop rbp ; ret
0x000000000040d043 : clc ; pop rbx ; pop rbp ; ret
0x000000000042f608 : clc ; xchg eax, esp ; std ; call rbx
0x000000000042115d : cld ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406dc0 : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000041a6dd : cld ; add rsp, 0xf0 ; pop rbp ; ret
0x000000000042ccb6 : cld ; mov dword ptr [rbp - 0xc], eax ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x00000000004135ff : cld ; pop rbp ; ret
0x000000000042c8c6 : cli ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000407e5e : cmp al, 0x25 ; cwde ; adc esp, dword ptr [rbx] ; pop rbp ; ret
0x0000000000401f1e : cmp al, 0x25 ; ret 0x42d0
0x000000000042f8cc : cmp al, 6 ; add byte ptr [rax], al ; shl bl, 1 ; std ; call qword ptr [rdi]
0x0000000000420a69 : cmp al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000042bd4e : cmp byte ptr [rax], ah ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x0000000000401dde : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x0000000000422a4d : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000042ba9e : cmp byte ptr [rax], dh ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x0000000000430668 : cmp byte ptr [rcx - 1], dh ; call qword ptr [rdx]
0x000000000042c18e : cmp byte ptr [rcx], ah ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000042fd01 : cmp dh, bh ; call qword ptr [rax]
0x0000000000423895 : cmp dword ptr [rax - 0x75], ecx ; jne 0x42387f ; call rax
0x00000000004256d8 : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000004114dc : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x000000000040cf0d : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406fa6 : cmp dword ptr [rcx], eax ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000405947 : cmp dword ptr [rdx], eax ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x0000000000404a32 : cmp dword ptr [rdx], eax ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x0000000000401ccd : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401ce0 ; pop rbp ; ret
0x0000000000407e60 : cwde ; adc esp, dword ptr [rbx] ; pop rbp ; ret
0x0000000000403239 : dec byte ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x000000000040919f : dec byte ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret
0x0000000000401f1b : dec dword ptr [rax - 0x73] ; cmp al, 0x25 ; ret 0x42d0
0x0000000000404ad7 : dec dword ptr [rax - 0x75] ; adc dword ptr [rax - 0x7f], ecx ; ret 0x78
0x0000000000403fb9 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; push rax ; fild dword ptr [rdx] ; jmp rcx
0x0000000000416293 : dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x0000000000410226 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000429804 : dec dword ptr [rax - 0x7f] ; ret 1
0x00000000004049c5 : dec dword ptr [rdi] ; test dword ptr [rip - 0x17000000], eax ; ret
0x000000000042a01a : dec dword ptr [rdi] ; test dword ptr [rip - 0x17000000], eax ; ret 1
0x000000000040f518 : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xc8b
0x0000000000402f76 : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x844
0x0000000000401e13 : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x0000000000420580 : div dword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000042057f : div qword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000040cb2b : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000424fc4 : enter -0x74b8, 0x32 ; mov rdi, qword ptr [rsi] ; call rcx
0x0000000000423892 : enter -0x74b8, 0x39 ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x0000000000407e35 : enter -0x7cb8, -0x3c ; pop rbp ; ret
0x000000000040fcd5 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x48b
0x0000000000426e5a : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000428459 : fbld dword ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000042845a : fbld dword ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000042ecf9 : fdivp st(5) ; jmp rsp
0x0000000000404e29 : fiadd dword ptr [rcx - 0xa] ; ret 0x4001
0x0000000000405408 : fiadd dword ptr [rcx - 0xa] ; ret 0x4401
0x000000000040dd5f : fiadd dword ptr [rcx - 0xa] ; ret 0x4801
0x00000000004022b6 : fiadd dword ptr [rcx - 0xa] ; ret 0x8801
0x0000000000410297 : fiadd dword ptr [rcx - 0xa] ; ret 0x8901
0x0000000000411bce : fiadd dword ptr [rcx - 0xa] ; ret 0xf01
0x0000000000404132 : fild dword ptr [rcx - 0xa] ; ret
0x0000000000403fbf : fild dword ptr [rdx] ; jmp rcx
0x000000000040954b : fild word ptr [rdx] ; jmp rcx
0x000000000042099a : fisub word ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000042099b : fisub word ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000040b198 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000425531 : fmul dword ptr [rax - 0x75] ; or byte ptr [rax - 0x77], cl ; iretd ; call 0x4017f9
0x0000000000415998 : fmul dword ptr [rax - 0x77] ; ret 0x3948
0x000000000042cd1c : fmul qword ptr [rax - 0x7d] ; ret
0x000000000042efe8 : fsubr qword ptr [rdi + rdi*8] ; call rsp
0x000000000042f584 : hlt ; add al, byte ptr [rax] ; add byte ptr [rax - 0x72], bh ; std ; jmp rbx
0x00000000004021b9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042ccb9 : hlt ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000428558 : hlt ; mov rcx, qword ptr [rbp - 8] ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x0000000000401ce0 : hlt ; pop rbp ; mov edi, 0x631308 ; jmp rax
0x000000000042cbdf : hlt ; pop rbp ; ret
0x000000000040e517 : in al, 0x42 ; add byte ptr [rax - 0x73], cl ; or al, 0x25 ; ret 0x42e4
0x0000000000403622 : in al, dx ; pop rbp ; ret
0x000000000042ed39 : in al, dx ; std ; jmp rsp
0x0000000000403693 : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x000000000041dfc3 : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000411bb8 : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x000000000040d92e : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040d013 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000405d80 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x000000000040e16a : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040a00f : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x000000000042bb68 : inc dword ptr [rcx + 0x41f9] ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x000000000042c55e : inc dword ptr [rcx + 0x5af9] ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x000000000042bc1e : inc dword ptr [rcx + 0x5af9] ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x000000000042ecf3 : inc esp ; or al, byte ptr [rax] ; add byte ptr [rsi + rbx*8 - 3], ch ; jmp rsp
0x000000000042ed33 : inc esp ; or eax, dword ptr [rax] ; add byte ptr [rsp + rbp*8], ch ; std ; jmp rsp
0x000000000042ecf8 : insb byte ptr [rdi], dx ; fdivp st(5) ; jmp rsp
0x000000000042fcfc : insb byte ptr [rdi], dx ; or al, byte ptr [rax] ; add byte ptr [rax], dl ; cmp dh, bh ; call qword ptr [rax]
0x0000000000410e18 : int 0x80
0x0000000000425503 : iretd ; call 0x4017f3
0x0000000000401cd3 : ja 0x401cda ; pop rbp ; ret
0x0000000000428091 : ja 0x4280de ; pop rbp ; ret
0x00000000004002d6 : jbe 0x40027d ; xchg al, dh ; xchg eax, esi ; jl 0x400326 ; ret
0x0000000000402681 : jbe 0x402615 ; test dword ptr [rsi + rdi*8 - 0x7bf00001], ecx ; ret
0x0000000000401cdf : je 0x401cdd ; pop rbp ; mov edi, 0x631308 ; jmp rax
0x000000000042f604 : je 0x42f610 ; add byte ptr [rax], al ; clc ; xchg eax, esp ; std ; call rbx
0x0000000000403696 : jge 0x403693 ; pop rbp ; ret
0x0000000000421c5a : jge 0x421c5b ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000421c7a : jge 0x421c7b ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000421c9a : jge 0x421c9b ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000426fe0 : jge 0x426fd3 ; mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000042808d : jge 0x42808e ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x00000000004002db : jl 0x400321 ; ret
0x0000000000430729 : jle 0x43072c ; call qword ptr [rsi]
0x0000000000430749 : jle 0x43074c ; jmp rdi
0x00000000004018cb : jmp 0x4017c7
0x0000000000406402 : jmp 0x405240
0x0000000000405470 : jmp 0x40645e
0x000000000041d5c6 : jmp 0x41c32d
0x000000000041c45b : jmp 0x41d5d2
0x0000000000420209 : jmp 0x42002b
0x0000000000424753 : jmp 0x4904d0a3
0x0000000000424895 : jmp 0x4904d1e5
0x0000000000426890 : jmp 0x4904f1e0
0x00000000004268fd : jmp 0x4904f24d
0x0000000000427bca : jmp 0x4905051a
0x0000000000427c37 : jmp 0x49050587
0x0000000000412e3b : jmp 0xffffffffe2402e85
0x00000000004309cb : jmp qword ptr [rbx]
0x0000000000430263 : jmp qword ptr [rcx]
0x000000000041ab8a : jmp qword ptr [rdi]
0x000000000042ff13 : jmp qword ptr [rsi]
0x0000000000401ce7 : jmp rax
0x000000000042f58b : jmp rbx
0x00000000004026c3 : jmp rcx
0x000000000042fe6b : jmp rdi
0x0000000000401d27 : jmp rdx
0x000000000041a07d : jmp rsp
0x0000000000401d10 : jne 0x401d17 ; pop rbp ; ret
0x000000000041f689 : jne 0x41f66c ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x0000000000420581 : jne 0x420579 ; mov rax, rdx ; pop rbp ; ret
0x0000000000422b96 : jne 0x422b60 ; mov r8, qword ptr [rsi] ; mov rsi, qword ptr [r8] ; call rcx
0x0000000000423898 : jne 0x42387c ; call rax
0x0000000000430669 : jno 0x43066c ; call qword ptr [rdx]
0x000000000040db74 : jo 0x40dbd5 ; ret
0x000000000041c5f5 : jo 0x41c581 ; stc ; add eax, 0xf000000 ; xchg eax, esp ; ret 0xc8b
0x0000000000422e7f : jo 0x422e98 ; mov qword ptr [rbp - 0x48], rdx ; call r8
0x000000000042f8d1 : jrcxz 0x42f8d2 ; call qword ptr [rdi]
0x000000000040c7df : js 0x40c7e8 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040cc00 : js 0x40cc60 ; pop rbp ; ret
0x000000000042f588 : js 0x42f51b ; std ; jmp rbx
0x000000000040da15 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004137ff : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040d041 : lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040da14 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040d040 : lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000042b599 : loop 0x42b5eb ; or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x000000000042b771 : loop 0x42b7c3 ; or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x0000000000406dc4 : loopne 0x406dcb ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040d03f : loopne 0x40d090 ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040d03e : loopne 0x40d091 ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000411ce5 : loopne 0x411d35 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000411ce4 : loopne 0x411d36 ; add esp, 0x20 ; pop rbp ; ret
0x000000000041202b : loopne 0x41207b ; add esp, 0x20 ; pop rbp ; ret
0x000000000041202a : loopne 0x41207c ; add esp, 0x20 ; pop rbp ; ret
0x0000000000420879 : loopne 0x4208ca ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000420878 : loopne 0x4208cb ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000424689 : loopne 0x4246ef ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042ad22 : loopne 0x42ad2a ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000430a89 : mov ah, -1 ; call rax
0x000000000042ee6c : mov ah, 0x10 ; add byte ptr [rax], al ; mov word ptr [rsi + rdi*8], dr0 ; call rsp
0x0000000000430744 : mov ah, 0x14 ; add byte ptr [rax], al ; pop rax ; jle 0x430751 ; jmp rdi
0x000000000042efe4 : mov ah, 0x16 ; add byte ptr [rax], al ; fsubr qword ptr [rdi + rdi*8] ; call rsp
0x0000000000410e5e : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000428458 : mov al, byte ptr [rbp - 0x21] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000420999 : mov al, byte ptr [rbp - 0x22] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042246c : mov al, byte ptr [rbp - 0x33] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042ba29 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042c8c4 : mov al, byte ptr [rbp - 6] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042858c : mov al, byte ptr [rdi + 0x1c] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042b95f : mov al, dh ; movzx eax, al ; pop rbp ; ret
0x000000000042b95e : mov al, sil ; movzx eax, al ; pop rbp ; ret
0x000000000042b7af : mov ax, si ; movzx eax, ax ; pop rbp ; ret
0x000000000042b7b3 : mov bh, -0x40 ; pop rbp ; ret
0x0000000000407e81 : mov byte ptr [0x6313a0], al ; pop rbp ; ret
0x0000000000406ef8 : mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x00000000004063ff : mov byte ptr [rax], 0 ; jmp 0x405243
0x000000000040ef2c : mov byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x000000000041ab81 : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; jmp qword ptr [rdi]
0x0000000000406953 : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret
0x000000000040b57c : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x0000000000409d8e : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x000000000040cd66 : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 1
0x0000000000401d43 : mov byte ptr [rip + 0x22f62e], 1 ; ret
0x000000000042178f : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000414b7e : mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041e6e5 : mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000403c69 : mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x000000000042b8f7 : mov dh, -0x40 ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000042189e : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x00000000004205c0 : mov dh, -0x40 ; pop rbp ; ret
0x000000000042f589 : mov dr1, ebp ; jmp rbx
0x0000000000407e5d : mov dword ptr [0x631398], edi ; pop rbp ; ret
0x000000000041c44a : mov dword ptr [rax - 0xa], 0x858801c7 ; ret 0xfffe
0x0000000000408bca : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000408d18 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004023c4 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000422d96 : mov dword ptr [rbp - 0x30], eax ; mov qword ptr [rbp - 0x38], rdx ; call r8
0x0000000000422d9a : mov dword ptr [rbp - 0x38], edx ; call r8
0x0000000000422e82 : mov dword ptr [rbp - 0x48], edx ; call r8
0x00000000004021b7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042ccb7 : mov dword ptr [rbp - 0xc], eax ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000403695 : mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x000000000042855d : mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x000000000041eaef : mov dword ptr [rcx + 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000423c1a : mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x0000000000421568 : mov dword ptr [rdi + 0x18], 0x95f616 ; pop rbp ; ret
0x0000000000403687 : mov dword ptr [rdi + 0x20], 0 ; pop rbp ; ret
0x0000000000428090 : mov dword ptr [rdi + 0x48], esi ; pop rbp ; ret
0x000000000041f5da : mov eax, 0x50c48348 ; pop rbp ; ret
0x0000000000421c02 : mov eax, 0x5b000001 ; pop rbp ; ret
0x000000000040cbfc : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000411725 : mov eax, 0xf0658d48 ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040e7cb : mov eax, dword ptr [rax] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000042af21 : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000408af8 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000411251 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408364 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000415d09 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x000000000042af1e : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000408af5 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040361d : mov eax, dword ptr [rbp - 0x10] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000408253 : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000408e84 : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000041115f : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000408aad : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000408bc4 : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040dd74 : mov eax, dword ptr [rbp - 0x18] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004085c3 : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000411ce3 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d03d : mov eax, dword ptr [rbp - 0x20] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000042a668 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004278a4 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041f68f : mov eax, dword ptr [rbp - 0x28] ; call rax
0x0000000000408d1a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000420f72 : mov eax, dword ptr [rbp - 0x30] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000424288 : mov eax, dword ptr [rbp - 0x30] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000407e33 : mov eax, dword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000416b9d : mov eax, dword ptr [rbp - 0x44] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041f5d8 : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040cbfa : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040ec95 : mov eax, dword ptr [rbp - 0x58] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004288bf : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042cbdd : mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x000000000042115b : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004135fd : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004282c6 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000423054 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000414c87 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000042397e : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041f863 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000427490 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000423769 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000421c5d : mov eax, dword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000421c7d : mov eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000421c9d : mov eax, dword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000422b99 : mov eax, dword ptr [rsi] ; mov rsi, qword ptr [r8] ; call rcx
0x000000000042b59e : mov eax, edi ; pop rbp ; ret
0x0000000000420584 : mov eax, edx ; pop rbp ; ret
0x000000000042b7b0 : mov eax, esi ; movzx eax, ax ; pop rbp ; ret
0x000000000042b5d3 : mov eax, esi ; pop rbp ; ret
0x000000000042f4a9 : mov ebp, edi ; call qword ptr [rsi]
0x0000000000401d6b : mov ebp, esp ; call rax
0x0000000000401cd1 : mov ebp, esp ; ja 0x401cdc ; pop rbp ; ret
0x0000000000403692 : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x00000000004154d6 : mov ecx, 0x10a ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x0000000000414e2e : mov ecx, 0xa8 ; mov rsp, rbp ; pop rbp ; ret
0x00000000004026bc : mov ecx, dword ptr [rax*8 + 0x42cde0] ; jmp rcx
0x0000000000403fbb : mov ecx, dword ptr [rax*8 + 0x42db50] ; jmp rcx
0x0000000000405602 : mov ecx, dword ptr [rax*8 + 0x42dba0] ; jmp rcx
0x0000000000409547 : mov ecx, dword ptr [rax*8 + 0x42dfc0] ; jmp rcx
0x000000000040a061 : mov ecx, dword ptr [rax*8 + 0x42e008] ; jmp rcx
0x00000000004102e2 : mov ecx, dword ptr [rax*8 + 0x42e4f0] ; jmp rcx
0x0000000000412eb7 : mov ecx, dword ptr [rax*8 + 0x42e8d8] ; jmp rcx
0x0000000000412e37 : mov ecx, dword ptr [rax*8 + 0x42e938] ; jmp rcx
0x000000000041f9a5 : mov ecx, dword ptr [rax*8 + 0x42ea20] ; jmp rcx
0x00000000004254ff : mov ecx, dword ptr [rax] ; mov rdi, rcx ; call 0x4017f7
0x0000000000408bc7 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000424b82 : mov ecx, dword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000424a92 : mov ecx, dword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000426fe3 : mov ecx, dword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000042855a : mov ecx, dword ptr [rbp - 8] ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x00000000004272aa : mov ecx, dword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000042b5fd : mov ecx, eax ; shl edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000042b5cd : mov ecx, eax ; shr edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000401d65 : mov edi, 0x630e20 ; mov rbp, rsp ; call rax
0x0000000000401ce2 : mov edi, 0x631308 ; jmp rax
0x0000000000401d22 : mov edi, 0x631308 ; jmp rdx
0x000000000042808c : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000421c59 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000421c79 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000421c99 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000424a96 : mov edi, dword ptr [rcx] ; call rax
0x0000000000423894 : mov edi, dword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x0000000000425811 : mov edi, dword ptr [rdx] ; call 0x401a54
0x0000000000424fc9 : mov edi, dword ptr [rsi] ; call rcx
0x0000000000425502 : mov edi, ecx ; call 0x4017f4
0x000000000042cd17 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000042cd16 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000424fc2 : mov edx, dword ptr [rbp - 0x38] ; mov rsi, qword ptr [rdx] ; mov rdi, qword ptr [rsi] ; call rcx
0x000000000042580d : mov edx, dword ptr [rbp - 0x60] ; mov rdi, qword ptr [rdx] ; call 0x401a58
0x0000000000422e7e : mov esi, dword ptr [rax + 0x10] ; mov qword ptr [rbp - 0x48], rdx ; call r8
0x0000000000422b9c : mov esi, dword ptr [rax] ; call rcx
0x0000000000423897 : mov esi, dword ptr [rbp - 0x20] ; call rax
0x0000000000422b95 : mov esi, dword ptr [rbp - 0x40] ; mov r8, qword ptr [rsi] ; mov rsi, qword ptr [r8] ; call rcx
0x0000000000426fe7 : mov esi, dword ptr [rcx] ; call rax
0x0000000000424fc6 : mov esi, dword ptr [rdx] ; mov rdi, qword ptr [rsi] ; call rcx
0x0000000000401d20 : mov esi, eax ; mov edi, 0x631308 ; jmp rdx
0x000000000041f68c : mov esi, eax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x0000000000416b9f : mov esp, 0x50c48348 ; pop rbp ; ret
0x0000000000403621 : mov esp, ebp ; pop rbp ; ret
0x0000000000407e5c : mov qword ptr [0x631398], rdi ; pop rbp ; ret
0x0000000000422d95 : mov qword ptr [rbp - 0x30], rax ; mov qword ptr [rbp - 0x38], rdx ; call r8
0x0000000000422d99 : mov qword ptr [rbp - 0x38], rdx ; call r8
0x0000000000422e81 : mov qword ptr [rbp - 0x48], rdx ; call r8
0x0000000000403694 : mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000403686 : mov qword ptr [rdi + 0x20], 0 ; pop rbp ; ret
0x000000000042808f : mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000416b9e : mov r12d, 0x50c48348 ; pop rbp ; ret
0x0000000000422b98 : mov r8, qword ptr [rsi] ; mov rsi, qword ptr [r8] ; call rcx
0x000000000041f5d9 : mov r8d, 0x50c48348 ; pop rbp ; ret
0x000000000040cbfb : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x000000000040e7ca : mov rax, qword ptr [rax] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000411250 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408363 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000408af4 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040361c : mov rax, qword ptr [rbp - 0x10] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000408252 : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000041115e : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000408aac : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040dd73 : mov rax, qword ptr [rbp - 0x18] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004085c2 : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000411ce2 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004278a3 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041f68e : mov rax, qword ptr [rbp - 0x28] ; call rax
0x0000000000423b9b : mov rax, qword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000407e32 : mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041f5d7 : mov rax, qword ptr [rbp - 0x48] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040ec94 : mov rax, qword ptr [rbp - 0x58] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004282c5 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000423053 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000414c86 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000042397d : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041f862 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000042748f : mov rax, qword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000423768 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000421c5c : mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000421c7c : mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000421c9c : mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000042b59d : mov rax, rdi ; pop rbp ; ret
0x0000000000420583 : mov rax, rdx ; pop rbp ; ret
0x0000000000401d6a : mov rbp, rsp ; call rax
0x0000000000401cd0 : mov rbp, rsp ; ja 0x401cdd ; pop rbp ; ret
0x0000000000403691 : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x00000000004026bb : mov rcx, qword ptr [rax*8 + 0x42cde0] ; jmp rcx
0x0000000000403fba : mov rcx, qword ptr [rax*8 + 0x42db50] ; jmp rcx
0x0000000000405601 : mov rcx, qword ptr [rax*8 + 0x42dba0] ; jmp rcx
0x0000000000409546 : mov rcx, qword ptr [rax*8 + 0x42dfc0] ; jmp rcx
0x000000000040a060 : mov rcx, qword ptr [rax*8 + 0x42e008] ; jmp rcx
0x00000000004102e1 : mov rcx, qword ptr [rax*8 + 0x42e4f0] ; jmp rcx
0x0000000000412eb6 : mov rcx, qword ptr [rax*8 + 0x42e8d8] ; jmp rcx
0x0000000000412e36 : mov rcx, qword ptr [rax*8 + 0x42e938] ; jmp rcx
0x000000000041f9a4 : mov rcx, qword ptr [rax*8 + 0x42ea20] ; jmp rcx
0x00000000004254fe : mov rcx, qword ptr [rax] ; mov rdi, rcx ; call 0x4017f8
0x0000000000424b81 : mov rcx, qword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000424a91 : mov rcx, qword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000426fe2 : mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000428559 : mov rcx, qword ptr [rbp - 8] ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x00000000004272a9 : mov rcx, qword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000042808b : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000421c58 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000421c78 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000421c98 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000424a95 : mov rdi, qword ptr [rcx] ; call rax
0x0000000000423893 : mov rdi, qword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x0000000000425810 : mov rdi, qword ptr [rdx] ; call 0x401a55
0x0000000000424fc8 : mov rdi, qword ptr [rsi] ; call rcx
0x0000000000425501 : mov rdi, rcx ; call 0x4017f5
0x000000000042580c : mov rdx, qword ptr [rbp - 0x60] ; mov rdi, qword ptr [rdx] ; call 0x401a59
0x0000000000422b9b : mov rsi, qword ptr [r8] ; call rcx
0x0000000000422e7d : mov rsi, qword ptr [rax + 0x10] ; mov qword ptr [rbp - 0x48], rdx ; call r8
0x0000000000423896 : mov rsi, qword ptr [rbp - 0x20] ; call rax
0x0000000000426fe6 : mov rsi, qword ptr [rcx] ; call rax
0x0000000000424fc5 : mov rsi, qword ptr [rdx] ; mov rdi, qword ptr [rsi] ; call rcx
0x0000000000401d1f : mov rsi, rax ; mov edi, 0x631308 ; jmp rdx
0x000000000041f68b : mov rsi, rax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x0000000000403620 : mov rsp, rbp ; pop rbp ; ret
0x000000000042ee70 : mov word ptr [rsi + rdi*8], dr0 ; call rsp
0x000000000042178e : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000414b7d : movzx eax, al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041e6e4 : movzx eax, al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000403c68 : movzx eax, al ; add rsp, 0x60 ; pop rbp ; ret
0x000000000042b8f6 : movzx eax, al ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000042189d : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004205bf : movzx eax, al ; pop rbp ; ret
0x000000000042b7b2 : movzx eax, ax ; pop rbp ; ret
0x0000000000401d46 : mul byte ptr [rdx] ; add byte ptr [rcx], al ; ret
0x0000000000401d45 : mul byte ptr cs:[rdx] ; add byte ptr [rcx], al ; ret
0x000000000042cd38 : nop dword ptr [rax + rax] ; ret
0x0000000000404100 : or al, 0x25 ; add byte ptr [rip - 0x76baff9d], dl ; ret 0x8141
0x000000000040d54c : or al, 0x25 ; add byte ptr [rip - 0x76bbff9d], dl ; ret
0x000000000040909d : or al, 0x25 ; add byte ptr [rip - 0x76beff9d], dl ; ret 0x8141
0x000000000040e51c : or al, 0x25 ; ret 0x42e4
0x0000000000403fbc : or al, 0xffffffffffffffc5 ; push rax ; fild dword ptr [rdx] ; jmp rcx
0x000000000042fcfd : or al, byte ptr [rax] ; add byte ptr [rax], dl ; cmp dh, bh ; call qword ptr [rax]
0x000000000042ecf5 : or al, byte ptr [rax] ; add byte ptr [rsi + rbx*8 - 3], ch ; jmp rsp
0x00000000004154d7 : or al, byte ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x000000000040cdc9 : or byte ptr [r15], cl ; xchg eax, ebp ; ret 0x348b
0x0000000000422fb0 : or byte ptr [r15], cl ; xchg eax, edx ; ret 0x348b
0x00000000004271f3 : or byte ptr [r8 + 0x3b], cl ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x348b
0x000000000040b193 : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x00000000004271f4 : or byte ptr [rax + 0x3b], cl ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x348b
0x000000000040b194 : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000425500 : or byte ptr [rax - 0x77], cl ; iretd ; call 0x4017f6
0x000000000042bd4c : or byte ptr [rcx + 0x2038], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x000000000042c18c : or byte ptr [rcx + 0x2138], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x0000000000405945 : or byte ptr [rcx + 0x239], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x0000000000404a30 : or byte ptr [rcx + 0x239], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x0000000000410c0d : or byte ptr [rcx + 0x28f9], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x000000000040f252 : or byte ptr [rcx + 0x2bf9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x0000000000417295 : or byte ptr [rcx + 0x2f9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x000000000042ba9c : or byte ptr [rcx + 0x3038], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x0000000000401ddc : or byte ptr [rcx + 0x38], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x000000000042c08c : or byte ptr [rcx + 0x6138], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x0000000000428982 : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x000000000040cdca : or byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x0000000000422fb1 : or byte ptr [rdi], cl ; xchg eax, edx ; ret 0x348b
0x00000000004254fd : or cl, byte ptr [rax - 0x75] ; or byte ptr [rax - 0x77], cl ; iretd ; call 0x4017f9
0x000000000040e13d : or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x000000000040e1df : or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x000000000042211c : or cl, ch ; ret
0x000000000042fc1d : or dword ptr [rax], eax ; add byte ptr [rax], al ; and dh, bh ; call rcx
0x00000000004119af : or eax, 0x48fffff9 ; add esp, 0x30 ; pop rbp ; ret
0x000000000040904d : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042ed35 : or eax, dword ptr [rax] ; add byte ptr [rsp + rbp*8], ch ; std ; jmp rsp
0x000000000042b59b : or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x000000000042b5d1 : or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000042b59a : or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x000000000042b5d0 : out dx, eax ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x00000000004061e0 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042cd2c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000042468b : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004061e2 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042cd2e : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004061e4 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042cd30 : pop r14 ; pop r15 ; ret
0x000000000040da19 : pop r14 ; pop rbp ; ret
0x00000000004061e6 : pop r15 ; pop rbp ; ret
0x000000000042cd32 : pop r15 ; ret
0x0000000000430728 : pop rax ; jle 0x43072d ; call qword ptr [rsi]
0x0000000000430748 : pop rax ; jle 0x43074d ; jmp rdi
0x0000000000415d0f : pop rax ; pop rbx ; pop rbp ; ret
0x0000000000401d42 : pop rbp ; mov byte ptr [rip + 0x22f62e], 1 ; ret
0x0000000000401ce1 : pop rbp ; mov edi, 0x631308 ; jmp rax
0x0000000000401d1e : pop rbp ; mov rsi, rax ; mov edi, 0x631308 ; jmp rdx
0x000000000042cd2b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004061e3 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042cd2f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401cd5 : pop rbp ; ret
0x000000000042468a : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040d5bb : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040da18 : pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040c7e3 : pop rbx ; pop rbp ; ret
0x00000000004061e7 : pop rdi ; pop rbp ; ret
0x000000000042cd33 : pop rdi ; ret
0x000000000042c561 : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x000000000042bc21 : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x00000000004061e5 : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000042cd31 : pop rsi ; pop r15 ; ret
0x000000000040da1a : pop rsi ; pop rbp ; ret
0x00000000004244a7 : pop rsp ; add dword ptr [rdi], ecx ; ror dword ptr cs:[rdi], -0x69 ; ret 0x348b
0x00000000004061e1 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042cd2d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000042468c : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000422662 : pop rsp ; ret 0xf66
0x000000000041fe98 : popfq ; ret 0x348b
0x000000000042bb70 : popfq ; ret 0xc8b
0x000000000040896c : push 0x48006313 ; add esp, 0x40 ; pop rbp ; ret
0x000000000041d36a : push 0x5b000001 ; pop rbp ; ret
0x0000000000429a93 : push rax ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000403fbe : push rax ; fild dword ptr [rdx] ; jmp rcx
0x00000000004002d5 : push rax ; jbe 0x40027e ; xchg al, dh ; xchg eax, esi ; jl 0x400327 ; ret
0x000000000040d84e : push rax ; pop rbp ; ret
0x0000000000424fc3 : push rbp ; enter -0x74b8, 0x32 ; mov rdi, qword ptr [rsi] ; call rcx
0x000000000040b197 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000415997 : push rbp ; fmul dword ptr [rax - 0x77] ; ret 0x3948
0x0000000000401d64 : push rbp ; mov edi, 0x630e20 ; mov rbp, rsp ; call rax
0x0000000000403690 : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000040cb2e : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000040586a : push rdx ; ret
0x0000000000406ef7 : pushfq ; mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x00000000004022b2 : pushfq ; ret
0x0000000000402f7d : pushfq ; ret 0x844
0x0000000000401e1a : pushfq ; ret 0x845
0x000000000040df6a : pushfq ; ret 0xd108
0x000000000042b5ce : rcl ebx, -0x11 ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000042b5fe : rcl ebx, -0x19 ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x00000000004002dd : ret
0x000000000041286e : ret 0
0x000000000041fcb5 : ret 0x108
0x0000000000414bba : ret 0x110
0x0000000000401da0 : ret 0x125
0x000000000040b585 : ret 0x13
0x0000000000401ad2 : ret 0x22f6
0x00000000004018d2 : ret 0x22f7
0x0000000000409d97 : ret 0x2a
0x0000000000408571 : ret 0x30
0x000000000041867a : ret 0x30e8
0x0000000000401de5 : ret 0x348b
0x000000000041599b : ret 0x3948
0x0000000000404e2c : ret 0x4001
0x0000000000401f20 : ret 0x42d0
0x000000000040e51e : ret 0x42e4
0x000000000040540b : ret 0x4401
0x000000000040dd62 : ret 0x4801
0x000000000040fcdc : ret 0x48b
0x0000000000425c3c : ret 0x48b0
0x0000000000403d97 : ret 0x48f0
0x000000000040deb7 : ret 0x4cc0
0x0000000000403dc9 : ret 0x4cf0
0x000000000041227a : ret 0x5588
0x0000000000415fb6 : ret 0x5589
0x000000000041dac4 : ret 0x60
0x0000000000404add : ret 0x78
0x000000000040e140 : ret 0x7ae8
0x0000000000421255 : ret 0x8041
0x00000000004022a8 : ret 0x8141
0x000000000040857f : ret 0x8148
0x0000000000424756 : ret 0x8348
0x0000000000402f7e : ret 0x844
0x00000000004153da : ret 0x8445
0x0000000000401e1b : ret 0x845
0x00000000004022b9 : ret 0x8801
0x000000000040a026 : ret 0x8901
0x0000000000402f1a : ret 0x8948
0x000000000040b50c : ret 0x89a5
0x00000000004114e3 : ret 0x8b44
0x000000000040b19b : ret 0x8b48
0x0000000000413fc5 : ret 0x9588
0x00000000004068bd : ret 0x9e0f
0x0000000000428f0e : ret 0xb
0x0000000000402a93 : ret 0xb0
0x000000000042482e : ret 0xb948
0x00000000004199f0 : ret 0xbae8
0x0000000000401d05 : ret 0xc148
0x00000000004286a0 : ret 0xc2f6
0x00000000004067f4 : ret 0xc8b
0x000000000040df6b : ret 0xd108
0x0000000000402b66 : ret 0xd284
0x000000000040e1e2 : ret 0xd8e8
0x0000000000402b47 : ret 0xe280
0x0000000000401d97 : ret 0xea81
0x000000000040ca7c : ret 0xee8
0x0000000000411bd1 : ret 0xf01
0x000000000041c2cb : ret 0xf280
0x0000000000422663 : ret 0xf66
0x0000000000420822 : ret 0xf748
0x00000000004053fb : ret 0xf981
0x000000000041b4a8 : ret 0xfa81
0x000000000040b1b0 : ret 0xfae8
0x000000000042552a : ret 0xfdc2
0x0000000000428693 : ret 0xfe81
0x00000000004248a7 : ret 0xff3
0x000000000040e681 : ret 0xff70
0x000000000041a5e6 : ret 0xff81
0x0000000000406408 : ret 0xffee
0x0000000000425506 : ret 0xfffd
0x000000000041c451 : ret 0xfffe
0x0000000000408582 : ret 0xffff
0x000000000040ae82 : ret 1
0x000000000041661c : ret 5
0x0000000000402c25 : ret 7
0x000000000040cb32 : ret 8
0x0000000000424289 : ror byte ptr [r8 - 0x73], 1 ; clc ; pop rbx ; pop rbp ; ret
0x0000000000410e13 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000401d0c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401d1b ; pop rbp ; ret
0x000000000042b8f8 : ror byte ptr [rax - 0x73], 0x65 ; clc ; pop rbx ; pop rbp ; ret
0x000000000042428a : ror byte ptr [rax - 0x73], 1 ; clc ; pop rbx ; pop rbp ; ret
0x000000000042189f : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x0000000000410e14 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x000000000041e6e6 : ror byte ptr [rax - 0x7d], -0x3c ; pop rbp ; ret
0x0000000000422b97 : ror byte ptr [rbx + rcx*4 + 6], 0x49 ; mov esi, dword ptr [rax] ; call rcx
0x000000000040cb2f : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000042254d : ror dword ptr [rcx - 0x7d], cl ; ret
0x00000000004244ab : ror dword ptr [rdi], -0x69 ; ret 0x348b
0x00000000004244aa : ror dword ptr cs:[rdi], -0x69 ; ret 0x348b
0x0000000000416059 : sahf ; ret 0x48b
0x000000000042c566 : sahf ; ret 0x5588
0x000000000042bc26 : sahf ; ret 0xc8b
0x00000000004002d7 : sahf ; xchg al, dh ; xchg eax, esi ; jl 0x400325 ; ret
0x000000000040a024 : sal dh, cl ; ret 0x8901
0x0000000000401d0e : sar eax, 1 ; jne 0x401d19 ; pop rbp ; ret
0x0000000000401d0d : sar rax, 1 ; jne 0x401d1a ; pop rbp ; ret
0x000000000042858e : sbb al, 0x24 ; add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000415f00 : sbb byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000406fa4 : sbb byte ptr [rcx + 0x139], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040fee3 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000414f2d : sbb cl, byte ptr [rax - 0x7f] ; ret
0x00000000004092c0 : sbb cl, byte ptr [rcx - 0x7f] ; ret
0x000000000042b0d7 : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004302e1 : sbb edi, edi ; call qword ptr [rdx]
0x0000000000406edf : scasd eax, dword ptr [rdi] ; ret
0x0000000000401d9f : scasd eax, dword ptr [rdi] ; ret 0x125
0x0000000000404112 : scasd eax, dword ptr [rdi] ; ret 0x8141
0x00000000004205ba : sete al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042f8d0 : shl bl, 1 ; std ; call qword ptr [rdi]
0x00000000004205bc : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000422686 : shl dword ptr [rsi + 0xf], 0x5c ; ret 0xf66
0x000000000042b5ff : shl edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000042b598 : shl edx, cl ; or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x000000000042b5cf : shr edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000042bb6a : stc ; add byte ptr [r8], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x00000000004067ed : stc ; add byte ptr [rax - 0x6bf10000], al ; ret 0xc8b
0x000000000041c5f7 : stc ; add eax, 0xf000000 ; xchg eax, esp ; ret 0xc8b
0x000000000042c560 : stc ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x000000000042bc20 : stc ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x000000000042f52a : std ; call qword ptr [rax]
0x000000000042f8d2 : std ; call qword ptr [rdi]
0x000000000042f4aa : std ; call qword ptr [rsi]
0x000000000042f2b2 : std ; call rax
0x000000000042f60a : std ; call rbx
0x000000000042ecf2 : std ; inc esp ; or al, byte ptr [rax] ; add byte ptr [rsi + rbx*8 - 3], ch ; jmp rsp
0x000000000042ed32 : std ; inc esp ; or eax, dword ptr [rax] ; add byte ptr [rsp + rbp*8], ch ; std ; jmp rsp
0x000000000042f58a : std ; jmp rbx
0x000000000042ecfa : std ; jmp rsp
0x000000000042ba2b : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042ed38 : sub al, -0x14 ; std ; jmp rsp
0x000000000042efe9 : sub al, -1 ; call rsp
0x000000000041eaf1 : sub al, 0x48 ; add esp, 0x30 ; pop rbp ; ret
0x00000000004303f1 : sub bh, bh ; call rdx
0x000000000042cdb9 : sub esp, 8 ; add rsp, 8 ; ret
0x000000000042cdb8 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000042f4a8 : test al, -0x77 ; std ; call qword ptr [rsi]
0x0000000000414e2f : test al, 0 ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040ec97 : test al, 0x48 ; add esp, 0x60 ; pop rbp ; ret
0x000000000042cd3a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000430514 : test byte ptr [rdx], dl ; add byte ptr [rax], al ; call 0xffffffffd2430461
0x000000000041ab84 : test dword ptr [rip - 0x17000000], eax ; jmp qword ptr [rdi]
0x00000000004049c7 : test dword ptr [rip - 0x17000000], eax ; ret
0x0000000000412868 : test dword ptr [rip - 0x17000000], eax ; ret 0
0x000000000040b57f : test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x0000000000409d91 : test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x0000000000428f08 : test dword ptr [rip - 0x17000000], eax ; ret 0xb
0x000000000040ae7c : test dword ptr [rip - 0x17000000], eax ; ret 1
0x0000000000416616 : test dword ptr [rip - 0x17000000], eax ; ret 5
0x0000000000402c1f : test dword ptr [rip - 0x17000000], eax ; ret 7
0x0000000000402683 : test dword ptr [rsi + rdi*8 - 0x7bf00001], ecx ; ret
0x0000000000411b03 : test eax, 0x48fffffc ; add esp, 0x10 ; pop rbp ; ret
0x00000000004002d8 : xchg al, dh ; xchg eax, esi ; jl 0x400324 ; ret
0x000000000042118c : xchg eax, ebp ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041c40a : xchg eax, ebp ; ret
0x0000000000401de4 : xchg eax, ebp ; ret 0x348b
0x000000000040fcdb : xchg eax, ebp ; ret 0x48b
0x0000000000412279 : xchg eax, ebp ; ret 0x5588
0x0000000000421254 : xchg eax, ebp ; ret 0x8041
0x00000000004153d9 : xchg eax, ebp ; ret 0x8445
0x00000000004114e2 : xchg eax, ebp ; ret 0x8b44
0x0000000000413fc4 : xchg eax, ebp ; ret 0x9588
0x000000000040f51a : xchg eax, ebp ; ret 0xc8b
0x0000000000402b65 : xchg eax, ebp ; ret 0xd284
0x0000000000402b46 : xchg eax, ebp ; ret 0xe280
0x00000000004244ad : xchg eax, edi ; ret 0x348b
0x0000000000422fb3 : xchg eax, edx ; ret 0x348b
0x00000000004002da : xchg eax, esi ; jl 0x400322 ; ret
0x0000000000405476 : xchg eax, esi ; ret
0x0000000000409e77 : xchg eax, esi ; ret 0x348b
0x000000000042f524 : xchg eax, esp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x73], cl ; std ; call qword ptr [rax]
0x0000000000404124 : xchg eax, esp ; ret
0x0000000000404a38 : xchg eax, esp ; ret 0x348b
0x0000000000415403 : xchg eax, esp ; ret 0x48b
0x0000000000420906 : xchg eax, esp ; ret 0x5588
0x00000000004022a7 : xchg eax, esp ; ret 0x8141
0x000000000042439c : xchg eax, esp ; ret 0x8b44
0x000000000041c407 : xchg eax, esp ; ret 0x9588
0x00000000004067f3 : xchg eax, esp ; ret 0xc8b
0x0000000000406bbd : xchg eax, esp ; ret 0xd284
0x000000000041c2ca : xchg eax, esp ; ret 0xf280
0x00000000004053fa : xchg eax, esp ; ret 0xf981
0x000000000041b4a7 : xchg eax, esp ; ret 0xfa81
0x0000000000428692 : xchg eax, esp ; ret 0xfe81
0x000000000041a5e5 : xchg eax, esp ; ret 0xff81
0x00000000004205bb : xchg eax, esp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000042f609 : xchg eax, esp ; std ; call rbx
0x000000000042b59c : xlatb ; mov rax, rdi ; pop rbp ; ret
0x000000000042ee71 : xor al, 0xfffffffffffffffe ; call rsp
0x000000000041fcae : xor byte ptr [r8 - 0x75], cl ; adc byte ptr [rax - 0x7f], cl ; ret 0x108
0x000000000041fcaf : xor byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7f], cl ; ret 0x108
0x000000000040e137 : xor byte ptr [rax - 0x75], cl ; add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x000000000040e1d9 : xor byte ptr [rax - 0x75], cl ; add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x0000000000428746 : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000424fc7 : xor cl, byte ptr [rax - 0x75] ; call rcx
0x00000000004158a7 : xor eax, ebp ; ret
0x0000000000408d16 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
