0x0000000000407b08 : adc ah, 0x65 ; add byte ptr [rax + 0x39], cl ; ror dword ptr [rdi], -0x6a ; ret 0x348b
0x0000000000406136 : adc ah, dl ; add byte ptr gs:[rcx - 0x61173bbb], cl ; ret
0x000000000044cb3e : adc al, -0x75 ; hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000045a15d : adc al, -2 ; jmp rax
0x0000000000408fdd : adc al, 0x25 ; jl 0x408fc7 ; add byte ptr gs:[rcx - 0x77], al ; ret
0x000000000040ea51 : adc al, 0x25 ; jl 0x40ea3b ; add byte ptr gs:[rbp - 0x77], al ; ret
0x000000000041d0a0 : adc al, 0x25 ; jl 0x41d08a ; add byte ptr gs:[rcx - 0x77], al ; ret
0x00000000004355dd : adc al, 0x25 ; jl 0x4355c7 ; add byte ptr gs:[rcx - 0x77], al ; ret
0x00000000004360d1 : adc al, 0x25 ; jl 0x4360bb ; add byte ptr gs:[rcx - 0x77], al ; ret
0x00000000004376db : adc al, 0x25 ; jl 0x4376c5 ; add byte ptr gs:[rbp - 0x77], al ; ret
0x00000000004405c8 : adc al, 0x25 ; jl 0x4405b2 ; add byte ptr gs:[rbp - 0x77], al ; ret
0x0000000000440d55 : adc al, 0x25 ; jl 0x440d3f ; add byte ptr gs:[rcx - 0x77], al ; ret 0x8141
0x00000000004428d7 : adc al, 0x25 ; jl 0x4428c1 ; add byte ptr gs:[rcx - 0x77], al ; ret 0x8141
0x000000000045af1c : adc al, 0xa ; add byte ptr [rax], al ; cmp byte ptr [rdi], -4 ; call qword ptr [rdx]
0x000000000044588f : adc al, byte ptr [rcx + 0x4f9] ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x0000000000445752 : adc al, byte ptr [rcx + 0x4f9] ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf280
0x000000000044b317 : adc al, ch ; ret
0x0000000000449142 : adc byte ptr [rax - 0x7f], cl ; ret 0x108
0x00000000004263b8 : adc byte ptr [rax - 0x7f], cl ; ret 1
0x000000000045b5fd : adc byte ptr [rax], al ; add al, ah ; std ; call rbx
0x0000000000459c59 : adc byte ptr [rax], al ; add byte ptr [rax + 0x1b], al ; sti ; jmp qword ptr [rax]
0x0000000000459c89 : adc byte ptr [rax], al ; add byte ptr [rax + 0x29], al ; sti ; jmp rax
0x00000000004494bf : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x0000000000453740 : adc byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004340fd : adc byte ptr [rbp - 0x18], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000045a394 : adc byte ptr [rsi - 1], al ; jmp rax
0x000000000040eda6 : adc dword ptr [rax - 0x7f], ecx ; ret 1
0x0000000000459cc1 : adc dword ptr [rax], eax ; add byte ptr [rax + 0x4b], dl ; sti ; call rax
0x0000000000459cd1 : adc dword ptr [rax], eax ; add byte ptr [rax + 0x4f], dl ; sti ; call qword ptr [rax]
0x000000000041e1b7 : adc dword ptr [rbp + 1], ecx ; ret 0x8b4c
0x000000000041470c : adc dword ptr [rbp - 0x77], ecx ; ror dword ptr [rcx - 0x7f], cl ; ret
0x000000000040c7ef : adc dword ptr [rcx + rcx*4 - 0x3a], ecx ; call rcx
0x0000000000410277 : adc eax, 0x48000000 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000459db1 : adc eax, 0x73400000 ; cld ; call rax
0x0000000000459dc1 : adc eax, 0x78e00000 ; cld ; call qword ptr [rax]
0x000000000045ba0d : adc eax, 0x7de00000 ; std ; call qword ptr [rdx]
0x000000000045bacd : adc eax, 0x7e900000 ; std ; call qword ptr [rax]
0x000000000041debb : adc eax, 0xe9ffffd0 ; ret 0xffd0
0x0000000000459d39 : adc eax, dword ptr [rax] ; add byte ptr [rax], dh ; cld ; call rax
0x000000000045bacb : add ah, al ; adc eax, 0x7e900000 ; std ; call qword ptr [rax]
0x000000000045cc03 : add ah, bh ; add byte ptr es:[rax], al ; enter -0x6c, -1 ; ret
0x000000000045ab03 : add ah, bh ; add eax, 0xb180000 ; sti ; call qword ptr [rax]
0x000000000045b5fb : add ah, dh ; adc byte ptr [rax], al ; add al, ah ; std ; call rbx
0x000000000045a9b5 : add al, 0 ; add byte ptr [rax], bh ; idiv dl ; call qword ptr [rsi]
0x000000000045ba0c : add al, 0x15 ; add byte ptr [rax], al ; loopne 0x45ba96 ; std ; call qword ptr [rdx]
0x0000000000459eab : add al, ah ; add bh, ch ; call rax
0x000000000045ba0f : add al, ah ; jge 0x45ba14 ; call qword ptr [rdx]
0x000000000045ba2f : add al, ah ; jge 0x45ba34 ; call qword ptr [rdx]
0x0000000000459dc3 : add al, ah ; js 0x459dc7 ; call qword ptr [rax]
0x000000000045a2e3 : add al, ah ; sbb edi, edi ; jmp qword ptr [rax]
0x000000000045b5ff : add al, ah ; std ; call rbx
0x000000000045b00f : add al, al ; push rax ; cld ; call rdx
0x000000000045ad8f : add al, al ; push rdx ; sti ; jmp qword ptr [rbx]
0x0000000000459c4b : add al, al ; sbb bl, bh ; jmp rax
0x000000000045bc9f : add al, al ; stosb byte ptr [rdi], al ; std ; call rsp
0x000000000045b137 : add al, bh ; movsxd rdi, esp ; call rcx
0x0000000000450ba3 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040642b : add al, byte ptr [rax] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040beb1 : add al, byte ptr [rax] ; pop rbp ; ret
0x000000000040811d : add al, byte ptr [rcx + 0xf] ; xchg eax, esi ; ret 0x8b44
0x000000000040642a : add al, byte ptr ss:[rax] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405cd1 : add al, ch ; pop rcx ; ret 0xffff
0x0000000000442057 : add al, ch ; ret
0x00000000004026c8 : add al, ch ; ret 0xfff9
0x0000000000406003 : add al, ch ; ret 0xffff
0x000000000044a384 : add al, ch ; salc ; ret
0x000000000040bead : add al, ch ; sub eax, 0x5d0002b2 ; ret
0x0000000000459bcb : add al, dl ; cld ; cli ; call rax
0x0000000000459ead : add bh, ch ; call rax
0x0000000000459bdd : add bl, bh ; call qword ptr [rax]
0x0000000000456d0f : add bl, dh ; ret
0x0000000000405e09 : add byte ptr [r11 - 0x378a76d0], r9b ; call 0x402099
0x000000000045542b : add byte ptr [r8], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x000000000045abc7 : add byte ptr [rax + 0x18], bl ; sti ; jmp rdx
0x0000000000459c5b : add byte ptr [rax + 0x1b], al ; sti ; jmp qword ptr [rax]
0x000000000044c2db : add byte ptr [rax + 0x21], cl ; ret 0x8148
0x0000000000459c8b : add byte ptr [rax + 0x29], al ; sti ; jmp rax
0x0000000000407b0b : add byte ptr [rax + 0x39], cl ; ror dword ptr [rdi], -0x6a ; ret 0x348b
0x0000000000459cc3 : add byte ptr [rax + 0x4b], dl ; sti ; call rax
0x0000000000459cd3 : add byte ptr [rax + 0x4f], dl ; sti ; call qword ptr [rax]
0x0000000000459db3 : add byte ptr [rax + 0x73], al ; cld ; call rax
0x000000000045ab47 : add byte ptr [rax + 0xc], cl ; sti ; call qword ptr [rax]
0x000000000045b4ff : add byte ptr [rax + 1], ah ; std ; jmp qword ptr [rcx]
0x0000000000451551 : add byte ptr [rax + 1], cl ; ret 0x4a3b
0x000000000045bd7b : add byte ptr [rax + rbx], dh ; add byte ptr [rax - 0x4c], dh ; std ; call rcx
0x000000000045ad8b : add byte ptr [rax + rcx + 0x52c00000], al ; sti ; jmp qword ptr [rbx]
0x000000000045bf3f : add byte ptr [rax - 0x17], ah ; std ; call qword ptr [rax]
0x0000000000459b53 : add byte ptr [rax - 0x3a], dh ; cli ; call rax
0x0000000000459e43 : add byte ptr [rax - 0x46], dl ; cld ; jmp qword ptr [rax]
0x000000000045bd7f : add byte ptr [rax - 0x4c], dh ; std ; call rcx
0x000000000045b287 : add byte ptr [rax - 0x69], cl ; cld ; call qword ptr [rdx]
0x0000000000459f7b : add byte ptr [rax - 0x6f], ah ; std ; jmp qword ptr [rax]
0x000000000040e9ca : add byte ptr [rax - 0x73], cl ; clc ; pop rbx ; pop rbp ; ret
0x0000000000403b22 : add byte ptr [rax - 0x73], cl ; xor al, 0x25 ; ret
0x0000000000420997 : add byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x00000000004363e0 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000405b0b : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000043390d : add byte ptr [rax - 0x77], cl ; jge 0x433910 ; pop rbp ; ret
0x000000000041f349 : add byte ptr [rax - 0x77], cl ; or cl, ch ; ret
0x000000000040367f : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x0000000000459f2b : add byte ptr [rax - 0x7f], dl ; std ; jmp rax
0x000000000045a16b : add byte ptr [rax], ah ; sub dh, bh ; jmp qword ptr [rax]
0x0000000000459e03 : add byte ptr [rax], ah ; wait ; cld ; jmp qword ptr [rax]
0x000000000045af1a : add byte ptr [rax], al ; adc al, 0xa ; add byte ptr [rax], al ; cmp byte ptr [rdi], -4 ; call qword ptr [rdx]
0x000000000045a392 : add byte ptr [rax], al ; adc byte ptr [rsi - 1], al ; jmp rax
0x000000000045ba0a : add byte ptr [rax], al ; add al, 0x15 ; add byte ptr [rax], al ; loopne 0x45ba98 ; std ; call qword ptr [rdx]
0x0000000000405ccf : add byte ptr [rax], al ; add al, ch ; pop rcx ; ret 0xffff
0x0000000000442055 : add byte ptr [rax], al ; add al, ch ; ret
0x0000000000406001 : add byte ptr [rax], al ; add al, ch ; ret 0xffff
0x000000000044a382 : add byte ptr [rax], al ; add al, ch ; salc ; ret
0x000000000040beab : add byte ptr [rax], al ; add al, ch ; sub eax, 0x5d0002b2 ; ret
0x0000000000456d0d : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000044c2d9 : add byte ptr [rax], al ; add byte ptr [rax + 0x21], cl ; ret 0x8148
0x000000000045154f : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x4a3b
0x000000000040e9c8 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; clc ; pop rbx ; pop rbp ; ret
0x0000000000420995 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x0000000000405b09 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000043390b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jge 0x433912 ; pop rbp ; ret
0x000000000041f347 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; or cl, ch ; ret
0x000000000040367d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000044a380 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; salc ; ret
0x0000000000456d0b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000044a37e : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; salc ; ret
0x0000000000400d52 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000004162d8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add cl, ch ; ret 0x6f
0x00000000004432a8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040e561 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000456499 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x000000000043a989 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000043390a : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000429d62 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000420994 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000456d0c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400d54 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000458c3c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x42ec
0x000000000040ea5e : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x0000000000404d23 : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x8141
0x0000000000432798 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000042860f : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000042408b : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000405e17 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7378b], cl ; ret 0xb0
0x0000000000403905 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret
0x000000000040f310 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x844
0x0000000000402acb : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x0000000000408fea : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x000000000041c422 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x125
0x0000000000433b5d : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x00000000004263e9 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x000000000040e6cf : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000404d35 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000428789 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x48b
0x000000000040c7f7 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8041
0x0000000000404446 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x0000000000437d9e : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8b44
0x00000000004038fb : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xf981
0x000000000041b2a1 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xfa81
0x000000000044ee13 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xfb81
0x000000000043ad0d : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xfe81
0x0000000000441fed : add byte ptr [rax], al ; add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x0000000000432738 : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x51], al ; ret
0x0000000000449324 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000045542c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x0000000000404d40 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret
0x0000000000414af8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0x348b
0x0000000000410c0c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd008
0x0000000000402e1d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x000000000041bfcf : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xe280
0x0000000000455e22 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x0000000000428c75 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x0000000000414739 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret
0x000000000040280b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x125
0x000000000042290a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000409400 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x000000000043e4f8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x48b
0x000000000040ba92 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5588
0x0000000000404d06 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x000000000043d450 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x9588
0x00000000004267c0 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x000000000044e0a0 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040b2ea : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf280
0x00000000004361e1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x0000000000408ff8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000441c14 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x000000000044a4db : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x48b
0x000000000044ac89 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x000000000041c34f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x0000000000445893 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x0000000000402865 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x0000000000403605 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x0000000000433737 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000445756 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf280
0x000000000041e6ad : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xfe81
0x0000000000443a71 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xff81
0x0000000000444016 : add byte ptr [rax], al ; add cl, ch ; jmp qword ptr [rdi]
0x000000000040b43d : add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000439bfa : add byte ptr [rax], al ; add cl, ch ; ret 0
0x0000000000430761 : add byte ptr [rax], al ; add cl, ch ; ret 0x13
0x000000000042ef73 : add byte ptr [rax], al ; add cl, ch ; ret 0x2a
0x000000000041853b : add byte ptr [rax], al ; add cl, ch ; ret 0x56
0x00000000004162da : add byte ptr [rax], al ; add cl, ch ; ret 0x6f
0x000000000044d18a : add byte ptr [rax], al ; add cl, ch ; ret 0xb
0x0000000000405f2a : add byte ptr [rax], al ; add cl, ch ; ret 1
0x000000000040c47a : add byte ptr [rax], al ; add cl, ch ; ret 3
0x000000000043faa8 : add byte ptr [rax], al ; add cl, ch ; ret 5
0x000000000042d1f9 : add byte ptr [rax], al ; add cl, ch ; ret 8
0x0000000000409e8f : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000044e3e3 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000410279 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000421f14 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000402ae5 : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004432aa : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040e563 : add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000401eb3 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000045ba2a : add byte ptr [rax], al ; and al, 0x15 ; add byte ptr [rax], al ; loopne 0x45bab8 ; std ; call qword ptr [rdx]
0x0000000000459b92 : add byte ptr [rax], al ; and al, ch ; cli ; jmp rax
0x000000000045aa9e : add byte ptr [rax], al ; and byte ptr [rsi], al ; sti ; call rdi
0x0000000000405c6a : add byte ptr [rax], al ; call 0x401f34
0x0000000000406002 : add byte ptr [rax], al ; call 0x402274
0x000000000045b136 : add byte ptr [rax], al ; clc ; movsxd rdi, esp ; call rcx
0x000000000045ab02 : add byte ptr [rax], al ; cld ; add eax, 0xb180000 ; sti ; call qword ptr [rax]
0x000000000045ab42 : add byte ptr [rax], al ; cmp al, 6 ; add byte ptr [rax], al ; or al, 0xfffffffb ; call qword ptr [rax]
0x000000000045a7c6 : add byte ptr [rax], al ; cmp bl, bl ; cli ; call qword ptr [rax]
0x000000000045c276 : add byte ptr [rax], al ; cmp byte ptr [rbp - 2], ch ; jmp qword ptr [rsi]
0x000000000045aefe : add byte ptr [rax], al ; cmp byte ptr [rdi], -4 ; call qword ptr [rdx]
0x000000000045a9b6 : add byte ptr [rax], al ; cmp dh, dh ; cli ; call qword ptr [rsi]
0x000000000045cc06 : add byte ptr [rax], al ; enter -0x6c, -1 ; ret
0x000000000045b5fa : add byte ptr [rax], al ; hlt ; adc byte ptr [rax], al ; add al, ah ; std ; call rbx
0x0000000000459db2 : add byte ptr [rax], al ; jae 0x459db8 ; call rax
0x000000000045bd7a : add byte ptr [rax], al ; je 0x45bd9f ; add byte ptr [rax], al ; jo 0x45bd3f ; std ; call rcx
0x000000000045b282 : add byte ptr [rax], al ; jl 0x45b29c ; add byte ptr [rax], al ; xchg rax, rdi ; cld ; call qword ptr [rdx]
0x0000000000401fc9 : add byte ptr [rax], al ; jmp 0x401ec9
0x00000000004111fe : add byte ptr [rax], al ; jmp 0x41d4ab
0x00000000004197e0 : add byte ptr [rax], al ; jmp 0x41dd1b
0x0000000000442051 : add byte ptr [rax], al ; jmp 0x442060
0x00000000004458e9 : add byte ptr [rax], al ; jmp 0x446a64
0x0000000000459b52 : add byte ptr [rax], al ; jo 0x459b21 ; cli ; call rax
0x000000000045bd7e : add byte ptr [rax], al ; jo 0x45bd3b ; std ; call rcx
0x000000000040e9c9 : add byte ptr [rax], al ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000045a9b2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add al, 0 ; add byte ptr [rax], bh ; idiv dl ; call qword ptr [rsi]
0x0000000000459dc2 : add byte ptr [rax], al ; loopne 0x459e43 ; cld ; call qword ptr [rax]
0x0000000000459eaa : add byte ptr [rax], al ; loopne 0x459eb5 ; std ; call rax
0x000000000045b5fe : add byte ptr [rax], al ; loopne 0x45b62d ; std ; call rbx
0x000000000045ba0e : add byte ptr [rax], al ; loopne 0x45ba94 ; std ; call qword ptr [rdx]
0x000000000045ba2e : add byte ptr [rax], al ; loopne 0x45bab4 ; std ; call qword ptr [rdx]
0x0000000000459e32 : add byte ptr [rax], al ; mov al, -0x49 ; cld ; jmp rax
0x000000000045bcde : add byte ptr [rax], al ; mov al, -0x55 ; std ; jmp rcx
0x000000000044b83c : add byte ptr [rax], al ; mov al, sil ; movzx eax, al ; pop rbp ; ret
0x000000000044b68d : add byte ptr [rax], al ; mov ax, si ; movzx eax, ax ; pop rbp ; ret
0x000000000042e062 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000044c9c8 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000433e29 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x2c] ; pop rbp ; ret
0x000000000045649b : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x000000000043a98b : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x000000000041e3ff : add byte ptr [rax], al ; mov eax, esi ; pop rbp ; ret
0x0000000000405ffd : add byte ptr [rax], al ; mov edi, 9 ; call 0x402279
0x000000000045abc2 : add byte ptr [rax], al ; mov esp, 0x58000006 ; sbb bl, bh ; jmp rdx
0x000000000045b8c2 : add byte ptr [rax], al ; mov esp, 0xb8000013 ; jne 0x45b8d1 ; call qword ptr [rdi]
0x000000000043390c : add byte ptr [rax], al ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000042dcd2 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000429d64 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000420dc9 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000420996 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000405b0a : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000045bace : add byte ptr [rax], al ; nop ; jle 0x45bad5 ; call qword ptr [rax]
0x000000000045ab46 : add byte ptr [rax], al ; or al, 0xfffffffb ; call qword ptr [rax]
0x000000000045abc6 : add byte ptr [rax], al ; pop rax ; sbb bl, bh ; jmp rdx
0x0000000000406306 : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000432799 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000428610 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000407cbf : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000459cd2 : add byte ptr [rax], al ; push rax ; sti ; call qword ptr [rax]
0x0000000000459cc2 : add byte ptr [rax], al ; push rax ; sti ; call rax
0x0000000000459c4a : add byte ptr [rax], al ; rcr byte ptr [rax], -5 ; jmp rax
0x0000000000456d0e : add byte ptr [rax], al ; ret
0x0000000000400d56 : add byte ptr [rax], al ; ret 0
0x0000000000458c3e : add byte ptr [rax], al ; ret 0x42ec
0x0000000000459bca : add byte ptr [rax], al ; sar ah, 1 ; cli ; call rax
0x000000000045ab06 : add byte ptr [rax], al ; sbb byte ptr [rbx], cl ; sti ; call qword ptr [rax]
0x0000000000459c5a : add byte ptr [rax], al ; sbb edi, ebx ; jmp qword ptr [rax]
0x0000000000459d7a : add byte ptr [rax], al ; shl byte ptr [rax - 4], 1 ; jmp rax
0x000000000045b132 : add byte ptr [rax], al ; sub al, 0xc ; add byte ptr [rax], al ; clc ; movsxd rdi, esp ; call rcx
0x000000000045a932 : add byte ptr [rax], al ; sub al, 4 ; add byte ptr [rax], al ; test al, -0xd ; cli ; call qword ptr [rsi]
0x000000000045a352 : add byte ptr [rax], al ; sub byte ptr [rax], -1 ; jmp rax
0x0000000000459c8a : add byte ptr [rax], al ; sub ebx, edi ; jmp rax
0x000000000045a936 : add byte ptr [rax], al ; test al, -0xd ; cli ; call qword ptr [rsi]
0x0000000000459fbb : add byte ptr [rax], al ; xchg eax, ebp ; std ; jmp qword ptr [rax]
0x000000000045aa9a : add byte ptr [rax], al ; xchg eax, esp ; add eax, 0x6200000 ; sti ; call rdi
0x000000000045b286 : add byte ptr [rax], al ; xchg rax, rdi ; cld ; call qword ptr [rdx]
0x000000000045af3a : add byte ptr [rax], al ; xor al, 0xa ; add byte ptr [rax], al ; cmp byte ptr [rdi], -4 ; call qword ptr [rdx]
0x0000000000459d3a : add byte ptr [rax], al ; xor byte ptr [rcx - 4], cl ; call rax
0x0000000000459b62 : add byte ptr [rax], al ; xor cl, cl ; cli ; call qword ptr [rax]
0x0000000000459ba2 : add byte ptr [rax], al ; xor dh, ch ; cli ; jmp qword ptr [rax]
0x000000000045a9b7 : add byte ptr [rax], bh ; idiv dl ; call qword ptr [rsi]
0x000000000045ab07 : add byte ptr [rax], bl ; or edi, ebx ; call qword ptr [rax]
0x000000000045cb27 : add byte ptr [rax], ch ; mov edi, dr1 ; call rax
0x0000000000459d3b : add byte ptr [rax], dh ; cld ; call rax
0x0000000000459b63 : add byte ptr [rax], dh ; leave ; cli ; call qword ptr [rax]
0x0000000000459ba3 : add byte ptr [rax], dh ; out dx, al ; cli ; jmp qword ptr [rax]
0x0000000000459c58 : add byte ptr [rax], dl ; add byte ptr [rax], al ; sbb edi, ebx ; jmp qword ptr [rax]
0x000000000040ea60 : add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x0000000000404d25 : add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x8141
0x000000000045aa9b : add byte ptr [rbp + rax + 0x6200000], dl ; sti ; call rdi
0x000000000045b283 : add byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x69], cl ; cld ; call qword ptr [rdx]
0x000000000040ea56 : add byte ptr [rbp - 0x77], al ; ret
0x0000000000404d1b : add byte ptr [rbp - 0x77], al ; ret 0x8141
0x000000000043279a : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000428611 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000407cc0 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000045b8c3 : add byte ptr [rbx + rdx + 0x75b80000], bh ; std ; call qword ptr [rdi]
0x0000000000405e0a : add byte ptr [rbx - 0x378a76d0], cl ; call 0x402098
0x0000000000405e19 : add byte ptr [rbx - 0x76b7378b], cl ; ret 0xb0
0x000000000043d44c : add byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x9588
0x00000000004267bc : add byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x0000000000425d92 : add byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000044c90a : add byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xfe81
0x0000000000409004 : add byte ptr [rcx + 0xf], al ; pushfq ; mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x000000000041c35b : add byte ptr [rcx + 0xf], al ; pushfq ; mov byte ptr [rax + rcx - 0xe], -0xa ; ret 0xf01
0x0000000000403907 : add byte ptr [rcx + 0xf], al ; pushfq ; ret
0x000000000040f312 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x844
0x0000000000402acd : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x0000000000450046 : add byte ptr [rcx + 0xf], al ; pushfq ; rol dword ptr [rax + rcx - 0x36], -0xa ; ret 0xf01
0x0000000000408fec : add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x000000000041c424 : add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x125
0x0000000000433b5f : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x00000000004263eb : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x000000000040e6d1 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000404d37 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000042878b : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x48b
0x000000000040c7f9 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8041
0x0000000000404448 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x0000000000437da0 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8b44
0x00000000004038fd : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xf981
0x000000000041b2a3 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xfa81
0x000000000044ee15 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xfb81
0x000000000043ad0f : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xfe81
0x0000000000432b0c : add byte ptr [rcx + 0xfe], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000450037 : add byte ptr [rcx + 0xfe], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xff81
0x00000000004102c9 : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000042f1ed : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x0000000000402861 : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x0000000000406139 : add byte ptr [rcx - 0x61173bbb], cl ; ret
0x0000000000408fe2 : add byte ptr [rcx - 0x77], al ; ret
0x000000000041c41a : add byte ptr [rcx - 0x77], al ; ret 0x8141
0x0000000000441fef : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x0000000000402618 : add byte ptr [rcx], al ; ret
0x0000000000405ffe : add byte ptr [rdi + 9], bh ; call 0x402278
0x000000000043273a : add byte ptr [rdi + rcx - 0x51], al ; ret
0x000000000045bc9b : add byte ptr [rdi + rdx - 0x55400000], dl ; std ; call rsp
0x0000000000449326 : add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000045542e : add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x0000000000404d42 : add byte ptr [rdi], cl ; pushfq ; ret
0x0000000000414afa : add byte ptr [rdi], cl ; pushfq ; ret 0x348b
0x0000000000410c0e : add byte ptr [rdi], cl ; pushfq ; ret 0xd008
0x0000000000402e1f : add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x000000000041bfd1 : add byte ptr [rdi], cl ; pushfq ; ret 0xe280
0x0000000000455e24 : add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x0000000000428c77 : add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x000000000041473b : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret
0x000000000040280d : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x125
0x000000000042290c : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000409402 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x000000000043e4fa : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x48b
0x000000000040ba94 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5588
0x0000000000404d08 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x000000000043d452 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x9588
0x00000000004267c2 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x000000000044e0a2 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040b2ec : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf280
0x00000000004361e3 : add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x0000000000408ffa : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000441c16 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x000000000044a4dd : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x48b
0x000000000044ac8b : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5588
0x000000000041c351 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x0000000000445895 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x0000000000402867 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x0000000000403607 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x0000000000433739 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000445758 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf280
0x000000000041e6af : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xfe81
0x0000000000443a73 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xff81
0x000000000045ba2b : add byte ptr [rdx + 0x7de00000], ah ; std ; call qword ptr [rdx]
0x000000000045ba0b : add byte ptr [rdx + 0x7de00000], al ; std ; call qword ptr [rdx]
0x000000000045a7c3 : add byte ptr [rdx + rax - 0x24c80000], bh ; cli ; call qword ptr [rax]
0x000000000045af3b : add byte ptr [rdx + rcx], dh ; add byte ptr [rax], al ; cmp byte ptr [rdi], -4 ; call qword ptr [rdx]
0x000000000045af1b : add byte ptr [rdx + rcx], dl ; add byte ptr [rax], al ; cmp byte ptr [rdi], -4 ; call qword ptr [rdx]
0x0000000000406084 : add byte ptr [rdx + rdx*8 - 0x763ebbf1], al ; ret 0xb0
0x0000000000459ba0 : add byte ptr [rip - 0x11d00000], cl ; cli ; jmp qword ptr [rax]
0x0000000000459f78 : add byte ptr [rip - 0x6ea00000], bl ; std ; jmp qword ptr [rax]
0x000000000041f88f : add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x000000000045abc3 : add byte ptr [rsi + rax + 0x18580000], bh ; sti ; jmp rdx
0x000000000045ab43 : add byte ptr [rsi + rax], bh ; add byte ptr [rax], al ; or al, 0xfffffffb ; call qword ptr [rax]
0x000000000045a9b3 : add byte ptr [rsp + rax - 0x9c80000], ch ; cli ; call qword ptr [rsi]
0x000000000045a933 : add byte ptr [rsp + rax], ch ; add byte ptr [rax], al ; test al, -0xd ; cli ; call qword ptr [rsi]
0x000000000045b133 : add byte ptr [rsp + rcx], ch ; add byte ptr [rax], al ; clc ; movsxd rdi, esp ; call rcx
0x0000000000405b08 : add byte ptr cs:[rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000043e88d : add byte ptr cs:[rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x48b
0x000000000045cc05 : add byte ptr es:[rax], al ; enter -0x6c, -1 ; ret
0x0000000000407b0a : add byte ptr gs:[rax + 0x39], cl ; ror dword ptr [rdi], -0x6a ; ret 0x348b
0x000000000040ea55 : add byte ptr gs:[rbp - 0x77], al ; ret
0x0000000000404d1a : add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x0000000000406138 : add byte ptr gs:[rcx - 0x61173bbb], cl ; ret
0x0000000000408fe1 : add byte ptr gs:[rcx - 0x77], al ; ret
0x000000000041c419 : add byte ptr gs:[rcx - 0x77], al ; ret 0x8141
0x0000000000406083 : add byte ptr gs:[rdx + rdx*8 - 0x763ebbf1], al ; ret 0xb0
0x0000000000405ccc : add cl, ch ; add byte ptr [rax], al ; add al, ch ; pop rcx ; ret 0xffff
0x0000000000444018 : add cl, ch ; jmp qword ptr [rdi]
0x000000000040b43f : add cl, ch ; ret
0x0000000000439bfc : add cl, ch ; ret 0
0x0000000000430763 : add cl, ch ; ret 0x13
0x000000000042ef75 : add cl, ch ; ret 0x2a
0x000000000041853d : add cl, ch ; ret 0x56
0x00000000004162dc : add cl, ch ; ret 0x6f
0x000000000044d18c : add cl, ch ; ret 0xb
0x0000000000405f2c : add cl, ch ; ret 1
0x000000000040c47c : add cl, ch ; ret 3
0x000000000040cf80 : add cl, ch ; ret 4
0x000000000043faaa : add cl, ch ; ret 5
0x000000000042d1fb : add cl, ch ; ret 8
0x000000000043331a : add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x00000000004333bc : add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x000000000044a531 : add dword ptr [rax - 0x7af045bb], ecx ; ret
0x000000000043dea5 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041e3fd : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, esi ; pop rbp ; ret
0x000000000044dd14 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000407cbe : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000044ab4d : add dword ptr [rcx + 0x2ff9], eax ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x0000000000426924 : add dword ptr [rcx], eax ; ret 0x8b4c
0x000000000040b2f8 : add dword ptr [rdi + rcx - 0x4a], eax ; ret 0x8b48
0x000000000040cf3b : add dword ptr [rdi], ecx ; mov dh, -0x3f ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407ea5 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040dc05 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000405e34 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040da71 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x000000000044c33c : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000040be53 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000414028 : add dword ptr [rdi], ecx ; pushfq ; ret 0x48b
0x00000000004216d8 : add dword ptr [rdi], ecx ; ror dword ptr cs:[rdi], -0x69 ; ret 0x348b
0x000000000042ae93 : add dword ptr [rdi], ecx ; test byte ptr [rip - 0x17000000], al ; ret
0x0000000000444012 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; jmp qword ptr [rdi]
0x000000000040b439 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret
0x0000000000439bf6 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0
0x000000000043075d : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x000000000042ef6f : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x000000000044d186 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0xb
0x000000000040fe4c : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 1
0x0000000000425ef4 : add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0xe280
0x0000000000424427 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x348b
0x0000000000449d94 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x5588
0x0000000000402614 : add eax, 0x25ae3e ; add ebx, esi ; ret
0x000000000040a38a : add eax, 0x48000000 ; mov esp, ebp ; pop rbp ; ret
0x000000000045aa9d : add eax, 0x6200000 ; sti ; call rdi
0x000000000045ab05 : add eax, 0xb180000 ; sti ; call qword ptr [rax]
0x0000000000444015 : add eax, 0xe9000000 ; jmp qword ptr [rdi]
0x000000000040b43c : add eax, 0xe9000000 ; ret
0x0000000000439bf9 : add eax, 0xe9000000 ; ret 0
0x0000000000430760 : add eax, 0xe9000000 ; ret 0x13
0x000000000042ef72 : add eax, 0xe9000000 ; ret 0x2a
0x000000000041853a : add eax, 0xe9000000 ; ret 0x56
0x000000000044d189 : add eax, 0xe9000000 ; ret 0xb
0x0000000000405f29 : add eax, 0xe9000000 ; ret 1
0x000000000040c479 : add eax, 0xe9000000 ; ret 3
0x000000000043faa7 : add eax, 0xe9000000 ; ret 5
0x000000000042d1f8 : add eax, 0xe9000000 ; ret 8
0x0000000000445a88 : add eax, 0xf000000 ; xchg eax, esp ; ret 0xc8b
0x00000000004025db : add eax, edx ; sar rax, 1 ; jne 0x4025ec ; pop rbp ; ret
0x000000000042b679 : add eax, esi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x000000000045b501 : add ebp, edi ; jmp qword ptr [rcx]
0x0000000000402619 : add ebx, esi ; ret
0x000000000044ed3b : add edi, eax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x00000000004028db : add esp, 0x10 ; pop rbp ; ret
0x0000000000407cbb : add esp, 0x158 ; pop rbx ; pop rbp ; ret
0x00000000004467f8 : add esp, 0x168 ; pop rbx ; pop rbp ; ret
0x00000000004319bd : add esp, 0x178 ; pop rbx ; pop rbp ; ret
0x000000000043f38e : add esp, 0x18 ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000044e3e6 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000042cca2 : add esp, 0x198 ; pop rbx ; pop rbp ; ret
0x00000000004365cc : add esp, 0x1a0 ; pop rbp ; ret
0x000000000044c6a0 : add esp, 0x1b8 ; pop rbx ; pop rbp ; ret
0x00000000004551e0 : add esp, 0x1e0 ; pop rbp ; ret
0x0000000000452c4d : add esp, 0x1e8 ; pop rbx ; pop rbp ; ret
0x0000000000407eaa : add esp, 0x20 ; pop rbp ; ret
0x000000000044ec47 : add esp, 0x20 ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000450ba0 : add esp, 0x2a8 ; pop rbx ; pop rbp ; ret
0x0000000000406302 : add esp, 0x2d0 ; pop rbp ; ret
0x0000000000409afb : add esp, 0x30 ; pop rbp ; ret
0x00000000004299f2 : add esp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000402ae8 : add esp, 0x40 ; pop rbp ; ret
0x000000000043610f : add esp, 0x40 ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004088d3 : add esp, 0x50 ; pop rbp ; ret
0x000000000043f19d : add esp, 0x58 ; pop rbx ; pop rbp ; ret
0x00000000004063fe : add esp, 0x60 ; pop rbp ; ret
0x000000000040e566 : add esp, 0x70 ; pop rbp ; ret
0x0000000000408f23 : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000043dd24 : add esp, 0xa0 ; pop rbp ; ret
0x000000000043642c : add esp, 0xb0 ; pop rbp ; ret
0x0000000000425227 : add esp, 0xc0 ; pop rbp ; ret
0x0000000000424088 : add esp, 0xd8 ; pop rbx ; pop rbp ; ret
0x000000000043a7b7 : add esp, 0xf0 ; pop rbp ; ret
0x0000000000401eb6 : add esp, 8 ; ret
0x00000000004026c7 : add r8b, r13b ; ret 0xfff9
0x00000000004025da : add rax, rdx ; sar rax, 1 ; jne 0x4025ed ; pop rbp ; ret
0x000000000042b678 : add rax, rsi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x000000000044ed3a : add rdi, rax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x00000000004028da : add rsp, 0x10 ; pop rbp ; ret
0x0000000000407cba : add rsp, 0x158 ; pop rbx ; pop rbp ; ret
0x00000000004467f7 : add rsp, 0x168 ; pop rbx ; pop rbp ; ret
0x00000000004319bc : add rsp, 0x178 ; pop rbx ; pop rbp ; ret
0x000000000044e3e5 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000042cca1 : add rsp, 0x198 ; pop rbx ; pop rbp ; ret
0x00000000004365cb : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000044c69f : add rsp, 0x1b8 ; pop rbx ; pop rbp ; ret
0x00000000004551df : add rsp, 0x1e0 ; pop rbp ; ret
0x0000000000452c4c : add rsp, 0x1e8 ; pop rbx ; pop rbp ; ret
0x0000000000407ea9 : add rsp, 0x20 ; pop rbp ; ret
0x000000000044ec46 : add rsp, 0x20 ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000450b9f : add rsp, 0x2a8 ; pop rbx ; pop rbp ; ret
0x0000000000406301 : add rsp, 0x2d0 ; pop rbp ; ret
0x0000000000409afa : add rsp, 0x30 ; pop rbp ; ret
0x00000000004299f1 : add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000402ae7 : add rsp, 0x40 ; pop rbp ; ret
0x000000000043610e : add rsp, 0x40 ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004088d2 : add rsp, 0x50 ; pop rbp ; ret
0x000000000043f19c : add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x00000000004063fd : add rsp, 0x60 ; pop rbp ; ret
0x000000000040e565 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000408f22 : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000043dd23 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000043642b : add rsp, 0xb0 ; pop rbp ; ret
0x0000000000425226 : add rsp, 0xc0 ; pop rbp ; ret
0x0000000000424087 : add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x000000000043a7b6 : add rsp, 0xf0 ; pop rbp ; ret
0x0000000000401eb5 : add rsp, 8 ; ret
0x000000000045ba2c : and al, 0x15 ; add byte ptr [rax], al ; loopne 0x45bab6 ; std ; call qword ptr [rdx]
0x000000000044c33b : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040be52 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000459b94 : and al, ch ; cli ; jmp rax
0x000000000041f5a1 : and byte ptr [r15], cl ; xchg eax, esp ; ret 0x348b
0x000000000044ec49 : and byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000041f5a2 : and byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x000000000045aaa0 : and byte ptr [rsi], al ; sti ; call rdi
0x0000000000409cbb : and dword ptr [rdx - 0x76b70001], eax ; in al, dx ; pop rbp ; ret
0x0000000000420e45 : and eax, 0x458ac0 ; mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x0000000000433447 : and eax, 0x48ffffee ; add esp, 0x20 ; pop rbp ; ret
0x0000000000409cef : and eax, 0x65d508 ; pop rbp ; ret
0x0000000000409d13 : and eax, 0x65d510 ; pop rbp ; ret
0x000000000043ee66 : call 0x388529ba
0x000000000043ee65 : call 0x388529bb
0x0000000000405c6c : call 0x401f32
0x0000000000405e10 : call 0x402092
0x0000000000406004 : call 0x402272
0x0000000000426219 : call 0x4024b2
0x0000000000403b1e : call 0x42cd99
0x0000000000429c9a : call 0x490525ea
0x0000000000429c99 : call 0x490525eb
0x0000000000429c9a : call 0x490525ed
0x0000000000429c99 : call 0x490525ee
0x000000000044e6b9 : call 0xd076809
0x000000000044ec7c : call 0xd076dcc
0x000000000043f4e7 : call 0xffffffff8c0692fe
0x000000000043f4e6 : call 0xffffffff8c0692ff
0x0000000000431c59 : call 0xffffffffe905a5a9
0x0000000000431c58 : call 0xffffffffe905a5aa
0x00000000004025b3 : call 0xffffffffff408b8f
0x00000000004025f3 : call 0xffffffffff408bcf
0x000000000043baf0 : call 0xffffffffff440090
0x0000000000421cc4 : call 0xffffffffff7ba815
0x0000000000421cc3 : call 0xffffffffff7ba816
0x0000000000456ce9 : call qword ptr [r12 + rbx*8]
0x00000000004091fd : call qword ptr [rax]
0x000000000040551d : call qword ptr [rdi]
0x000000000045af03 : call qword ptr [rdx]
0x000000000045a71b : call qword ptr [rsi]
0x0000000000456cea : call qword ptr [rsp + rbx*8]
0x000000000041ffcd : call r8
0x000000000040263d : call rax
0x000000000040f14f : call rbx
0x000000000040c7f3 : call rcx
0x000000000045aaa3 : call rdi
0x000000000045b013 : call rdx
0x000000000045bca3 : call rsp
0x000000000042611d : cdq ; ret 0xb60f
0x000000000040c529 : cdqe ; mov qword ptr [rbp - 0x70], r8 ; call rax
0x0000000000426923 : clc ; add dword ptr [rcx], eax ; ret 0x8b4c
0x00000000004254f8 : clc ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000409833 : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000409af9 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000420bb0 : clc ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000448cf5 : clc ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004246c2 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x000000000044af2c : clc ; add rsp, 0x70 ; pop rbp ; ret
0x000000000043dd22 : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x0000000000425225 : clc ; add rsp, 0xc0 ; pop rbp ; ret
0x00000000004025df : clc ; jne 0x4025e8 ; pop rbp ; ret
0x000000000044c7dc : clc ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x0000000000447f7e : clc ; mov dword ptr [rcx + 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x000000000044c007 : clc ; mov dword ptr [rdi + 0x18], 0x95f616 ; pop rbp ; ret
0x000000000040e72a : clc ; mov qword ptr [rcx], rax ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004252be : clc ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000041ee8b : clc ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000041eeab : clc ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000041eecb : clc ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x00000000004337fb : clc ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000043381b : clc ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000040fa19 : clc ; mov rsi, qword ptr [rbp - 0x10] ; mov edx, dword ptr [rbp - 0x14] ; call rcx
0x000000000045b138 : clc ; movsxd rdi, esp ; call rcx
0x000000000042099b : clc ; pop rbp ; ret
0x000000000040e9ce : clc ; pop rbx ; pop rbp ; ret
0x000000000045cc04 : cld ; add byte ptr es:[rax], al ; enter -0x6c, -1 ; ret
0x000000000045ab04 : cld ; add eax, 0xb180000 ; sti ; call qword ptr [rax]
0x0000000000402907 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000044bbfd : cld ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000428e99 : cld ; add rsp, 0x40 ; pop rbp ; ret
0x000000000043c04d : cld ; add rsp, 0xf0 ; pop rbp ; ret
0x0000000000459dc6 : cld ; call qword ptr [rax]
0x000000000045af02 : cld ; call qword ptr [rdx]
0x0000000000459d3e : cld ; call rax
0x000000000045b13a : cld ; call rcx
0x000000000045b012 : cld ; call rdx
0x0000000000459bcd : cld ; cli ; call rax
0x0000000000459e3e : cld ; inc dword ptr [rax] ; sbb byte ptr [rax], al ; add byte ptr [rax - 0x46], dl ; cld ; jmp qword ptr [rax]
0x0000000000459e06 : cld ; jmp qword ptr [rax]
0x0000000000459d7e : cld ; jmp rax
0x0000000000456576 : cld ; mov dword ptr [rbp - 0xc], eax ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x000000000043a98f : cld ; pop rbp ; ret
0x0000000000459d36 : cld ; push qword ptr [rax + 0x30000013] ; cld ; call rax
0x0000000000459dae : cld ; push qword ptr [rax + 0x40000015] ; jae 0x459dbc ; call rax
0x0000000000459ea6 : cld ; push qword ptr [rax - 0x1fffffe7] ; add bh, ch ; call rax
0x0000000000459dbe : cld ; push rax ; adc eax, 0x78e00000 ; cld ; call qword ptr [rax]
0x0000000000456186 : cli ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000459af6 : cli ; call qword ptr [rax]
0x000000000045a71a : cli ; call qword ptr [rsi]
0x0000000000459b56 : cli ; call rax
0x0000000000459b9e : cli ; inc dword ptr [rax] ; or eax, 0xee300000 ; cli ; jmp qword ptr [rax]
0x0000000000459ba6 : cli ; jmp qword ptr [rax]
0x000000000045a6fa : cli ; jmp qword ptr [rbx]
0x0000000000459b96 : cli ; jmp rax
0x0000000000459bc6 : cli ; push qword ptr [rax - 0x2ffffff3] ; cld ; cli ; call rax
0x0000000000459bd6 : cli ; push rax ; or eax, 0xa00000 ; sti ; call qword ptr [rax]
0x0000000000459b5e : cli ; push rax ; or eax, dword ptr [rax] ; add byte ptr [rax], dh ; leave ; cli ; call qword ptr [rax]
0x0000000000428f28 : cmove ecx, edx ; movsxd rax, ecx ; pop rbp ; ret
0x00000000004026c3 : cmp al, 0x25 ; test al, 0x72 ; add r8b, r13b ; ret 0xfff9
0x000000000045ab44 : cmp al, 6 ; add byte ptr [rax], al ; or al, 0xfffffffb ; call qword ptr [rax]
0x0000000000449ef9 : cmp al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040cbe8 : cmp al, ch ; ret 0xff54
0x000000000045a7c8 : cmp bl, bl ; cli ; call qword ptr [rax]
0x000000000045560e : cmp byte ptr [rax], ah ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x000000000041fc7d : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000045535e : cmp byte ptr [rax], dh ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000045c278 : cmp byte ptr [rbp - 2], ch ; jmp qword ptr [rsi]
0x00000000004299f4 : cmp byte ptr [rbx + 0x5d], bl ; ret
0x0000000000455a4e : cmp byte ptr [rcx], ah ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000045af00 : cmp byte ptr [rdi], -4 ; call qword ptr [rdx]
0x000000000045a9b8 : cmp dh, dh ; cli ; call qword ptr [rsi]
0x0000000000420ac5 : cmp dword ptr [rax - 0x75], ecx ; jne 0x420aaf ; call rax
0x0000000000433b5b : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x0000000000437d9c : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8b44
0x0000000000414af6 : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0x348b
0x000000000041bfcd : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xe280
0x0000000000422908 : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000404d04 : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x00000000004320ed : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040259d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4025b0 ; pop rbp ; ret
0x0000000000405ce5 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x000000000042cca4 : cwde ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000456c73 : cwde ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040c52a : cwde ; mov qword ptr [rbp - 0x70], r8 ; call rax
0x000000000044aab0 : dec byte ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret
0x0000000000405926 : dec byte ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x000000000042e37f : dec byte ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret
0x0000000000425a62 : dec byte ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x0000000000425ef1 : dec dword ptr [rax + 0x3b] ; add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0xe280
0x0000000000453fc0 : dec dword ptr [rax + 0x3b] ; ror byte ptr [r15], -0x69 ; ret 0x348b
0x0000000000451ba5 : dec dword ptr [rax + 0x3b] ; ror byte ptr [r15], 1 ; xchg eax, esp ; ret 0x348b
0x000000000044b2d0 : dec dword ptr [rax - 0x73] ; clc ; pop rbx ; pop rbp ; ret
0x00000000004263b5 : dec dword ptr [rax - 0x75] ; adc byte ptr [rax - 0x7f], cl ; ret 1
0x000000000040eda3 : dec dword ptr [rax - 0x75] ; adc dword ptr [rax - 0x7f], ecx ; ret 1
0x000000000043baeb : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; call 0xffffffffff440095
0x000000000041bfab : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; enter 0x4589, 0 ; jmp rcx
0x000000000042e725 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; mov word ptr [rbp], es ; jmp rcx
0x000000000040e00d : dec dword ptr [rax - 0x75] ; push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 8
0x0000000000415da9 : dec dword ptr [rax - 0x75] ; xor al, ch ; out dx, al ; ret
0x00000000004132d5 : dec dword ptr [rax - 0x75] ; xor al, ch ; ret 0xfeee
0x00000000004167d5 : dec dword ptr [rax - 0x75] ; xor eax, ebp ; ret 0xfeb9
0x0000000000409cbe : dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000043558a : dec dword ptr [rax - 0x77] ; ret 0x6de8
0x00000000004504c8 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000043455b : dec dword ptr [rax - 0x77] ; ret 0x9ce8
0x0000000000435ea9 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000435133 : dec dword ptr [rax - 0x77] ; ret 0xc4e8
0x000000000041534c : dec dword ptr [rax - 0x7f] ; ret 0x17
0x000000000044da84 : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000041e1b4 : dec dword ptr [rbp - 0x75] ; adc dword ptr [rbp + 1], ecx ; ret 0x8b4c
0x0000000000414709 : dec dword ptr [rbp - 0x75] ; adc dword ptr [rbp - 0x77], ecx ; ror dword ptr [rcx - 0x7f], cl ; ret
0x000000000040ca63 : dec dword ptr [rdi] ; test dword ptr [rip - 0x17000000], eax ; ret
0x0000000000418537 : dec dword ptr [rdi] ; test dword ptr [rip - 0x17000000], eax ; ret 0x56
0x0000000000452aca : dec dword ptr [rdi] ; test dword ptr [rip - 0x17000000], eax ; ret 1
0x000000000042d1f5 : dec dword ptr [rdi] ; test dword ptr [rip - 0x17000000], eax ; ret 8
0x000000000040a5a9 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0x8b44
0x0000000000408bbf : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret
0x0000000000403404 : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x0000000000402e1b : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x000000000040a0ee : div dword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000040a0ed : div qword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000045cc08 : enter -0x6c, -1 ; ret
0x0000000000431d0b : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x00000000004221f4 : enter -0x74b8, 0x32 ; mov rdi, qword ptr [rsi] ; call rcx
0x0000000000420ac2 : enter -0x74b8, 0x39 ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x000000000040ad36 : enter -0x7cb8, -0x3c ; pop rbp ; ret
0x000000000041bfb0 : enter 0x4589, 0 ; jmp rcx
0x0000000000429800 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x000000000042408a : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000428242 : faddp st(1) ; fstp xword ptr [rbp - 0x20] ; fld xword ptr [rbp - 0x20] ; pop rbp ; ret
0x0000000000425689 : fbld dword ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000042568a : fbld dword ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000040494a : fiadd dword ptr [rcx - 0xa] ; ret 0x4001
0x000000000040390e : fiadd dword ptr [rcx - 0xa] ; ret 0x4401
0x0000000000407ef7 : fiadd dword ptr [rcx - 0xa] ; ret 0x4801
0x000000000040445a : fiadd dword ptr [rcx - 0xa] ; ret 0x8801
0x00000000004116ac : fiadd dword ptr [rcx - 0xa] ; ret 0x8901
0x0000000000407274 : fiadd dword ptr [rcx - 0xa] ; ret 0xf01
0x0000000000404d48 : fild dword ptr [rcx - 0xa] ; ret
0x0000000000449e2a : fisub word ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x0000000000449e2b : fisub word ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x0000000000428247 : fld xword ptr [rbp - 0x20] ; pop rbp ; ret
0x000000000040a047 : fmul dword ptr [rax + 0x31] ; ret 0x8948
0x0000000000430378 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000043ee28 : fmul dword ptr [rax - 0x77] ; ret 0x3948
0x000000000044e0af : fmul qword ptr [r8 - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000044e0b0 : fmul qword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x0000000000456cec : fmul qword ptr [rax - 0x7d] ; ret
0x000000000044e0ad : fmul qword ptr [rbx - 0x76b723bb] ; in al, dx ; pop rbp ; ret
0x0000000000428244 : fstp xword ptr [rbp - 0x20] ; fld xword ptr [rbp - 0x20] ; pop rbp ; ret
0x0000000000405ce3 : fsubr st(0) ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x000000000045b5fc : hlt ; adc byte ptr [rax], al ; add al, ah ; std ; call rbx
0x00000000004028d9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000456579 : hlt ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x000000000044c7d8 : hlt ; mov rcx, qword ptr [rbp - 8] ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x00000000004025b0 : hlt ; pop rbp ; mov edi, 0x65d3e8 ; jmp rax
0x000000000045649f : hlt ; pop rbp ; ret
0x000000000045a9b9 : idiv dl ; call qword ptr [rsi]
0x000000000043c34d : in al, dx ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040fa20 : in al, dx ; call rcx
0x0000000000405852 : in al, dx ; pop rbp ; ret
0x000000000042148e : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000408402 : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x0000000000432b0e : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000450039 : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xff81
0x0000000000426215 : inc dword ptr [rax + rcx*4 - 0x38] ; call 0x4024b6
0x0000000000459c57 : inc dword ptr [rax] ; adc byte ptr [rax], al ; add byte ptr [rax + 0x1b], al ; sti ; jmp qword ptr [rax]
0x00000000004264b6 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000409c62 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x00000000004102cb : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000042f1ef : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x0000000000402863 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x0000000000459b9f : inc dword ptr [rax] ; or eax, 0xee300000 ; cli ; jmp qword ptr [rax]
0x0000000000459e3f : inc dword ptr [rax] ; sbb byte ptr [rax], al ; add byte ptr [rax - 0x46], dl ; cld ; jmp qword ptr [rax]
0x0000000000459f77 : inc dword ptr [rax] ; sbb eax, 0x91600000 ; std ; jmp qword ptr [rax]
0x000000000045a2df : inc dword ptr [rax] ; sub eax, dword ptr [rax] ; add al, ah ; sbb edi, edi ; jmp qword ptr [rax]
0x0000000000414af4 : inc dword ptr [rcx + 0x39] ; add byte ptr [rdi], cl ; pushfq ; ret 0x348b
0x000000000041bfcb : inc dword ptr [rcx + 0x39] ; add byte ptr [rdi], cl ; pushfq ; ret 0xe280
0x0000000000455428 : inc dword ptr [rcx + 0x41f9] ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x0000000000455e1e : inc dword ptr [rcx + 0x5af9] ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x00000000004554de : inc dword ptr [rcx + 0x5af9] ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x0000000000410c08 : inc dword ptr [rcx + 0xafa] ; add byte ptr [rdi], cl ; pushfq ; ret 0xd008
0x00000000004089b7 : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x8b44
0x0000000000459c87 : inc eax ; adc byte ptr [rax], al ; add byte ptr [rax + 0x29], al ; sti ; jmp rax
0x0000000000459fa7 : inc eax ; sbb eax, 0x93a00000 ; std ; jmp rax
0x0000000000459f27 : inc eax ; sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7f], dl ; std ; jmp rax
0x000000000044b2ce : insb byte ptr [rdi], dx ; sti ; dec dword ptr [rax - 0x73] ; clc ; pop rbx ; pop rbp ; ret
0x0000000000428248 : insd dword ptr [rdi], dx ; loopne 0x4282ab ; ret
0x00000000004363e8 : int 0x80
0x000000000040c8c5 : iretd ; mov qword ptr [rbp - 0x80], r9 ; call rax
0x00000000004025a3 : ja 0x4025aa ; pop rbp ; ret
0x00000000004252c1 : ja 0x42530e ; pop rbp ; ret
0x0000000000459db5 : jae 0x459db5 ; call rax
0x0000000000459db4 : jae 0x459db6 ; call rax
0x00000000004026c6 : jb 0x402711 ; add al, ch ; ret 0xfff9
0x00000000004025af : je 0x4025ad ; pop rbp ; mov edi, 0x65d3e8 ; jmp rax
0x000000000045bd7c : je 0x45bd9d ; add byte ptr [rax], al ; jo 0x45bd3d ; std ; call rcx
0x000000000041fb0d : jg 0xfa7fb1d ; pop rsp ; ret 0xf66
0x000000000040fa18 : jge 0x40fa1b ; mov rsi, qword ptr [rbp - 0x10] ; mov edx, dword ptr [rbp - 0x14] ; call rcx
0x000000000041ee8a : jge 0x41ee8b ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000041eeaa : jge 0x41eeab ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000041eeca : jge 0x41eecb ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000424210 : jge 0x424203 ; mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x00000000004252bd : jge 0x4252be ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000428245 : jge 0x42822d ; fld xword ptr [rbp - 0x20] ; pop rbp ; ret
0x00000000004337fa : jge 0x4337fb ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000043381a : jge 0x43381b ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000433910 : jge 0x43390d ; pop rbp ; ret
0x000000000044e0ac : jge 0x44e093 ; mov eax, dword ptr [rbp - 0x24] ; mov rsp, rbp ; pop rbp ; ret
0x000000000045ba11 : jge 0x45ba12 ; call qword ptr [rdx]
0x000000000045ba31 : jge 0x45ba32 ; call qword ptr [rdx]
0x0000000000404d18 : jl 0x404cfe ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x000000000040746a : jl 0x407450 ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x0000000000408de0 : jl 0x408dc6 ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x0000000000408ead : jl 0x408e93 ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x0000000000408fdf : jl 0x408fc5 ; add byte ptr gs:[rcx - 0x77], al ; ret
0x0000000000409216 : jl 0x4091fc ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x000000000040a5b9 : jl 0x40a59f ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x000000000040e977 : jl 0x40e95d ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x000000000040ea53 : jl 0x40ea39 ; add byte ptr gs:[rbp - 0x77], al ; ret
0x000000000040f4e0 : jl 0x40f4c6 ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x00000000004100ed : jl 0x4100d3 ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x0000000000413047 : jl 0x41302d ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x0000000000413944 : jl 0x41392a ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x0000000000413c09 : jl 0x413bef ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x0000000000414f22 : jl 0x414f08 ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x0000000000415617 : jl 0x4155fd ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x0000000000416220 : jl 0x416206 ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x00000000004164e1 : jl 0x4164c7 ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x00000000004169c4 : jl 0x4169aa ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x000000000041794c : jl 0x417932 ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x0000000000418035 : jl 0x41801b ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x0000000000418ccc : jl 0x418cb2 ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x0000000000419a02 : jl 0x4199e8 ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x000000000041b1aa : jl 0x41b190 ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x000000000041b6e0 : jl 0x41b6c6 ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x000000000041c417 : jl 0x41c3fd ; add byte ptr gs:[rcx - 0x77], al ; ret 0x8141
0x000000000041d0a2 : jl 0x41d088 ; add byte ptr gs:[rcx - 0x77], al ; ret
0x000000000041ea4f : jl 0x41ea35 ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x0000000000420542 : jl 0x420528 ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x0000000000422209 : jl 0x4221ef ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x00000000004247b6 : jl 0x42479c ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x00000000004256bf : jl 0x4256a5 ; add byte ptr gs:[rcx - 0x77], al ; ret 0x8141
0x0000000000425f7e : jl 0x425f64 ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x0000000000429814 : jl 0x4297fa ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x000000000042b88c : jl 0x42b872 ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x000000000042e27f : jl 0x42e265 ; add byte ptr gs:[rcx - 0x77], al ; ret 0x8141
0x0000000000432461 : jl 0x432447 ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x0000000000432fff : jl 0x432fe5 ; add byte ptr gs:[rcx - 0x77], al ; ret 0x8141
0x0000000000435148 : jl 0x43512e ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x00000000004355df : jl 0x4355c5 ; add byte ptr gs:[rcx - 0x77], al ; ret
0x00000000004360d3 : jl 0x4360b9 ; add byte ptr gs:[rcx - 0x77], al ; ret
0x0000000000436ac0 : jl 0x436aa6 ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x00000000004376dd : jl 0x4376c3 ; add byte ptr gs:[rbp - 0x77], al ; ret
0x000000000043794c : jl 0x437932 ; add byte ptr gs:[rcx - 0x77], al ; ret 0x8141
0x0000000000437f3f : jl 0x437f25 ; add byte ptr gs:[rcx - 0x77], al ; ret 0x8141
0x000000000043ef17 : jl 0x43eefd ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x00000000004405ca : jl 0x4405b0 ; add byte ptr gs:[rbp - 0x77], al ; ret
0x0000000000440d57 : jl 0x440d3d ; add byte ptr gs:[rcx - 0x77], al ; ret 0x8141
0x00000000004428d9 : jl 0x4428bf ; add byte ptr gs:[rcx - 0x77], al ; ret 0x8141
0x00000000004451c9 : jl 0x4451af ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x00000000004455c7 : jl 0x4455ad ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x00000000004466db : jl 0x4466c1 ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x00000000004491c8 : jl 0x4491ae ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x0000000000449cc2 : jl 0x449ca8 ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x000000000044b1ce : jl 0x44b1b4 ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x000000000044c521 : jl 0x44c507 ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x000000000044d152 : jl 0x44d138 ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x000000000044e1a4 : jl 0x44e18a ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x00000000004504f2 : jl 0x4504d8 ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x0000000000451616 : jl 0x4515fc ; add byte ptr gs:[rcx - 0x77], al ; ret 0x8141
0x0000000000451ad3 : jl 0x451ab9 ; add byte ptr gs:[rcx - 0x77], al ; ret 0x8141
0x0000000000452900 : jl 0x4528e6 ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x0000000000454a88 : jl 0x454a6e ; add byte ptr gs:[rcx - 0x77], al ; ret 0x8141
0x000000000045b284 : jl 0x45b29a ; add byte ptr [rax], al ; xchg rax, rdi ; cld ; call qword ptr [rdx]
0x000000000045bad1 : jle 0x45bad2 ; call qword ptr [rax]
0x0000000000401fcb : jmp 0x401ec7
0x000000000041d780 : jmp 0x413c9e
0x000000000041d7a3 : jmp 0x4141c7
0x000000000041d860 : jmp 0x414959
0x000000000041dad1 : jmp 0x417118
0x000000000041dda4 : jmp 0x41a039
0x000000000041dda4 : jmp 0x41a03e
0x000000000041dda9 : jmp 0x41a0ce
0x000000000041deba : jmp 0x41aeda
0x0000000000411200 : jmp 0x41d4a9
0x00000000004197e2 : jmp 0x41dd19
0x0000000000442053 : jmp 0x44205e
0x0000000000446a56 : jmp 0x4457bd
0x00000000004458eb : jmp 0x446a62
0x0000000000449699 : jmp 0x4494bb
0x0000000000451ffc : jmp 0x450f32
0x0000000000421983 : jmp 0x4904a2d3
0x0000000000421ac5 : jmp 0x4904a415
0x0000000000423ac0 : jmp 0x4904c410
0x0000000000423b2d : jmp 0x4904c47d
0x0000000000424dfa : jmp 0x4904d74a
0x0000000000424e67 : jmp 0x4904d7b7
0x0000000000459ba7 : jmp qword ptr [rax]
0x000000000045a6fb : jmp qword ptr [rbx]
0x000000000045b503 : jmp qword ptr [rcx]
0x000000000044401a : jmp qword ptr [rdi]
0x000000000045c27b : jmp qword ptr [rsi]
0x00000000004025b7 : jmp rax
0x000000000045ccab : jmp rbx
0x00000000004030de : jmp rcx
0x000000000045c1d3 : jmp rdi
0x00000000004025f7 : jmp rdx
0x000000000045be23 : jmp rsp
0x00000000004025e0 : jne 0x4025e7 ; pop rbp ; ret
0x0000000000405e0e : jne 0x405ddc ; call 0x402094
0x000000000040a0ef : jne 0x40a0e7 ; mov rax, rdx ; pop rbp ; ret
0x000000000040b3b6 : jne 0x40b3ae ; mov rax, rdx ; pop rbp ; ret
0x000000000040fa1c : jne 0x40fa13 ; mov edx, dword ptr [rbp - 0x14] ; call rcx
0x00000000004111fa : jne 0x41120d ; jmp 0x41d4af
0x000000000041fdc6 : jne 0x41fd90 ; mov r8, qword ptr [rsi] ; mov rsi, qword ptr [r8] ; call rcx
0x0000000000420ac8 : jne 0x420aac ; call rax
0x0000000000448b19 : jne 0x448afc ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x0000000000449a11 : jne 0x449a09 ; mov rax, rdx ; pop rbp ; ret
0x000000000045b8c9 : jne 0x45b8ca ; call qword ptr [rdi]
0x00000000004549eb : jno 0x4549f7 ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040f661 : jns 0x40f669 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf280
0x000000000040e568 : jo 0x40e5c9 ; ret
0x00000000004200af : jo 0x4200c8 ; mov qword ptr [rbp - 0x48], rdx ; call r8
0x000000000042b5e4 : jo 0x42b5ef ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000432d54 : jo 0x432db5 ; ret
0x000000000043381f : jo 0x433880 ; ret
0x000000000043381e : jo 0x433881 ; ret
0x0000000000445a85 : jo 0x445a11 ; stc ; add eax, 0xf000000 ; xchg eax, esp ; ret 0xc8b
0x000000000044af30 : jo 0x44af91 ; ret
0x0000000000454987 : jo 0x4549e8 ; ret
0x0000000000456c77 : jo 0x456cd8 ; ret
0x0000000000459b54 : jo 0x459b1f ; cli ; call rax
0x000000000045bd80 : jo 0x45bd39 ; std ; call rcx
0x0000000000408f25 : js 0x408f85 ; pop rbp ; ret
0x00000000004319bf : js 0x4319c8 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000431de0 : js 0x431e40 ; pop rbp ; ret
0x0000000000459dc5 : js 0x459dc5 ; call qword ptr [rax]
0x000000000040975b : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040a213 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040e9cc : lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040975a : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040e9cb : lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000459b65 : leave ; cli ; call qword ptr [rax]
0x0000000000459cd0 : lock adc dword ptr [rax], eax ; add byte ptr [rax + 0x4f], dl ; sti ; call qword ptr [rax]
0x000000000045a9b4 : lodsb al, byte ptr [rsi] ; add al, 0 ; add byte ptr [rax], bh ; idiv dl ; call qword ptr [rsi]
0x000000000044b479 : loop 0x44b4cb ; or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x000000000044b651 : loop 0x44b6a3 ; or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x0000000000407fc6 : loopne 0x40802c ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004082a7 : loopne 0x40830d ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000408bdb : loopne 0x408c41 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000410134 : loopne 0x410185 ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000410133 : loopne 0x410186 ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x00000000004218b9 : loopne 0x42191f ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000428246 : loopne 0x428228 ; insd dword ptr [rdi], dx ; loopne 0x4282ad ; ret
0x0000000000428249 : loopne 0x4282aa ; ret
0x000000000043221f : loopne 0x432270 ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000043221e : loopne 0x432271 ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000433feb : loopne 0x433f80 ; loopne 0x434040 ; mov esp, ebp ; pop rbp ; ret
0x0000000000433fea : loopne 0x433f81 ; loopne 0x434041 ; mov esp, ebp ; pop rbp ; ret
0x0000000000433fee : loopne 0x43403d ; mov esp, ebp ; pop rbp ; ret
0x0000000000433fed : loopne 0x43403e ; mov esp, ebp ; pop rbp ; ret
0x00000000004372b5 : loopne 0x437305 ; add esp, 0x20 ; pop rbp ; ret
0x00000000004372b4 : loopne 0x437306 ; add esp, 0x20 ; pop rbp ; ret
0x00000000004375fb : loopne 0x43764b ; add esp, 0x20 ; pop rbp ; ret
0x00000000004375fa : loopne 0x43764c ; add esp, 0x20 ; pop rbp ; ret
0x0000000000437eaa : loopne 0x437f10 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000449d09 : loopne 0x449d5a ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000449d08 : loopne 0x449d5b ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x00000000004551e2 : loopne 0x4551ea ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000459dc4 : loopne 0x459e41 ; cld ; call qword ptr [rax]
0x0000000000459eac : loopne 0x459eb3 ; std ; call rax
0x000000000045b600 : loopne 0x45b62b ; std ; call rbx
0x000000000045ba10 : loopne 0x45ba92 ; std ; call qword ptr [rdx]
0x000000000045ba30 : loopne 0x45bab2 ; std ; call qword ptr [rdx]
0x000000000045bd81 : mov ah, -3 ; call rcx
0x0000000000459e34 : mov al, -0x49 ; cld ; jmp rax
0x000000000045bce0 : mov al, -0x55 ; std ; jmp rcx
0x000000000043642e : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042860e : mov al, 0 ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000459cc0 : mov al, 0x11 ; add byte ptr [rax], al ; push rax ; sti ; call rax
0x0000000000459d38 : mov al, 0x13 ; add byte ptr [rax], al ; xor byte ptr [rcx - 4], cl ; call rax
0x0000000000459db0 : mov al, 0x15 ; add byte ptr [rax], al ; jae 0x459dba ; call rax
0x0000000000459ea8 : mov al, 0x19 ; add byte ptr [rax], al ; loopne 0x459eb7 ; std ; call rax
0x00000000004088d1 : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000459b50 : mov al, 0xb ; add byte ptr [rax], al ; jo 0x459b23 ; cli ; call rax
0x0000000000459bc8 : mov al, 0xd ; add byte ptr [rax], al ; sar ah, 1 ; cli ; call rax
0x0000000000425688 : mov al, byte ptr [rbp - 0x21] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000449e29 : mov al, byte ptr [rbp - 0x22] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041f69c : mov al, byte ptr [rbp - 0x33] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040be4f : mov al, byte ptr [rbp - 0x40] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004552e9 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000456184 : mov al, byte ptr [rbp - 6] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000420e47 : mov al, byte ptr [rbp] ; mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x000000000044c80c : mov al, byte ptr [rdi + 0x1c] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000426217 : mov al, cl ; call 0x4024b4
0x000000000044b83f : mov al, dh ; movzx eax, al ; pop rbp ; ret
0x0000000000426216 : mov al, r9b ; call 0x4024b5
0x000000000044b83e : mov al, sil ; movzx eax, al ; pop rbp ; ret
0x000000000044b68f : mov ax, si ; movzx eax, ax ; pop rbp ; ret
0x000000000044b693 : mov bh, -0x40 ; pop rbp ; ret
0x0000000000459e35 : mov bh, -4 ; jmp rax
0x0000000000459af5 : mov bh, dl ; call qword ptr [rax]
0x0000000000409d11 : mov byte ptr [0x65d510], al ; pop rbp ; ret
0x000000000042acb3 : mov byte ptr [r8 - 0x75], r9b ; adc dword ptr [rax - 0x7f], ecx ; ret 1
0x0000000000409008 : mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x000000000041c35f : mov byte ptr [rax + rcx - 0xe], -0xa ; ret 0xf01
0x000000000042acb4 : mov byte ptr [rax - 0x75], cl ; adc dword ptr [rax - 0x7f], ecx ; ret 1
0x000000000041c006 : mov byte ptr [rbp - 0x77], al ; or ebp, ecx ; ret 0xff83
0x0000000000444011 : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; jmp qword ptr [rdi]
0x000000000040b438 : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret
0x000000000043075c : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x000000000042ef6e : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x0000000000431f46 : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 1
0x0000000000402613 : mov byte ptr [rip + 0x25ae3e], 1 ; ret
0x000000000040cf3d : mov dh, -0x3f ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407ea7 : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040dc07 : mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000405e36 : mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040da73 : mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x000000000044b7d7 : mov dh, -0x40 ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000044c33e : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000040be55 : mov dh, -0x40 ; pop rbp ; ret
0x0000000000409ced : mov dword ptr [0x65d508], edi ; pop rbp ; ret
0x0000000000408076 : mov dword ptr [rax + 0x18], 0xffffffff ; pop rbp ; ret
0x000000000040bbc2 : mov dword ptr [rax - 0xa], 0x4d8801c7 ; ret 0x850f
0x00000000004458da : mov dword ptr [rax - 0xa], 0x858801c7 ; ret 0xfffe
0x000000000042ddaa : mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000042def8 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000409bc2 : mov dword ptr [rbp - 0x10], eax ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000041ffc6 : mov dword ptr [rbp - 0x30], eax ; mov qword ptr [rbp - 0x38], rdx ; call r8
0x000000000041ffca : mov dword ptr [rbp - 0x38], edx ; call r8
0x0000000000405e0d : mov dword ptr [rbp - 0x38], esi ; call 0x402095
0x00000000004200b2 : mov dword ptr [rbp - 0x48], edx ; call r8
0x0000000000408f1f : mov dword ptr [rbp - 0x58], eax ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004063fa : mov dword ptr [rbp - 0x60], eax ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040c528 : mov dword ptr [rbp - 0x68], ecx ; mov qword ptr [rbp - 0x70], r8 ; call rax
0x000000000040c52c : mov dword ptr [rbp - 0x70], eax ; call rax
0x000000000040c8c7 : mov dword ptr [rbp - 0x80], ecx ; call rax
0x00000000004028d7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000456577 : mov dword ptr [rbp - 0xc], eax ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000402905 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000043390f : mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x000000000041bfb1 : mov dword ptr [rbp], eax ; jmp rcx
0x000000000044c7dd : mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x0000000000447f7f : mov dword ptr [rcx + 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040e72c : mov dword ptr [rcx], eax ; add rsp, 0x30 ; pop rbp ; ret
0x000000000042b67c : mov dword ptr [rdi + 0x10], eax ; pop rbp ; ret
0x0000000000420e4a : mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x000000000044c008 : mov dword ptr [rdi + 0x18], 0x95f616 ; pop rbp ; ret
0x00000000004252c0 : mov dword ptr [rdi + 0x48], esi ; pop rbp ; ret
0x000000000040b77a : mov dword ptr [rsi + 8], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000044ed3e : mov dword ptr [rsi], edi ; pop rbp ; ret
0x000000000040c7ec : mov eax, 0x4c118b41 ; mov esi, eax ; call rcx
0x0000000000448a6a : mov eax, 0x50c48348 ; pop rbp ; ret
0x000000000044c6a2 : mov eax, 0x5b000001 ; pop rbp ; ret
0x0000000000431ddc : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000459c48 : mov eax, 0xc000000f ; sbb bl, bh ; jmp rax
0x0000000000436cf5 : mov eax, 0xf0658d48 ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000424852 : mov eax, dword ptr [rax] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000043c7d1 : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042dcd8 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000436821 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040b714 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000043f199 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x000000000043c7ce : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042dcd5 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000433931 : mov eax, dword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040584d : mov eax, dword ptr [rbp - 0x10] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000409bc6 : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000043c34b : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042e064 : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000409fdc : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042dc8d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000042dda4 : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000432f54 : mov eax, dword ptr [rbp - 0x18] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000429d67 : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004372b3 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000410132 : mov eax, dword ptr [rbp - 0x20] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000433fec : mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x000000000044e0ae : mov eax, dword ptr [rbp - 0x24] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040b088 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000424ad4 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000448b1f : mov eax, dword ptr [rbp - 0x28] ; call rax
0x0000000000420dcc : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000433e2b : mov eax, dword ptr [rbp - 0x2c] ; pop rbp ; ret
0x000000000043ccbb : mov eax, dword ptr [rbp - 0x30] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004214b8 : mov eax, dword ptr [rbp - 0x30] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040ad34 : mov eax, dword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004299ee : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000004095da : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000044002d : mov eax, dword ptr [rbp - 0x44] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000448a68 : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000431dda : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004088cf : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000454981 : mov eax, dword ptr [rbp - 0x60] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000456c71 : mov eax, dword ptr [rbp - 0x68] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004091f7 : mov eax, dword ptr [rbp - 0x88] ; call qword ptr [rax]
0x000000000044cb3f : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000045649d : mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x000000000044bbfb : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000428e97 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000043a98d : mov eax, dword ptr [rbp - 4] ; pop rbp ; ret
0x00000000004254f6 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000409831 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000409af7 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000420bae : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000448cf3 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004246c0 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000044af2a : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000420999 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000041ee8d : mov eax, dword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000041eead : mov eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000041eecd : mov eax, dword ptr [rdi + 0x20] ; pop rbp ; ret
0x00000000004337fd : mov eax, dword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000043381d : mov eax, dword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000041fdc9 : mov eax, dword ptr [rsi] ; mov rsi, qword ptr [r8] ; call rcx
0x000000000044b47e : mov eax, edi ; pop rbp ; ret
0x000000000040a0f2 : mov eax, edx ; pop rbp ; ret
0x000000000044b690 : mov eax, esi ; movzx eax, ax ; pop rbp ; ret
0x000000000041e401 : mov eax, esi ; pop rbp ; ret
0x000000000040263b : mov ebp, esp ; call rax
0x00000000004025a1 : mov ebp, esp ; ja 0x4025ac ; pop rbp ; ret
0x000000000040f149 : mov ebx, dword ptr [rbp - 0x110] ; call rbx
0x000000000040f482 : mov ebx, dword ptr [rbp - 0x120] ; call rbx
0x000000000043e966 : mov ecx, 0x10a ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x000000000043e2be : mov ecx, 0xa8 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000403157 : mov ecx, dword ptr [rax*8 + 0x456db0] ; jmp rcx
0x00000000004030d7 : mov ecx, dword ptr [rax*8 + 0x456df0] ; jmp rcx
0x0000000000411f14 : mov ecx, dword ptr [rax*8 + 0x458718] ; jmp rcx
0x000000000041bfad : mov ecx, dword ptr [rax*8 + 0x4589c8] ; jmp rcx
0x000000000042e727 : mov ecx, dword ptr [rax*8 + 0x458c40] ; jmp rcx
0x000000000042f241 : mov ecx, dword ptr [rax*8 + 0x458c88] ; jmp rcx
0x00000000004358b2 : mov ecx, dword ptr [rax*8 + 0x459140] ; jmp rcx
0x0000000000438a8f : mov ecx, dword ptr [rax*8 + 0x459528] ; jmp rcx
0x0000000000438a0f : mov ecx, dword ptr [rax*8 + 0x459588] ; jmp rcx
0x000000000043a247 : mov ecx, dword ptr [rax*8 + 0x459670] ; jmp rcx
0x000000000043a1c7 : mov ecx, dword ptr [rax*8 + 0x4596d0] ; jmp rcx
0x000000000043baed : mov ecx, dword ptr [rax*8 + 0x4597e8] ; jmp rcx
0x000000000043ba6d : mov ecx, dword ptr [rax*8 + 0x459848] ; jmp rcx
0x0000000000448e35 : mov ecx, dword ptr [rax*8 + 0x4598f8] ; jmp rcx
0x000000000042dda7 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000421db2 : mov ecx, dword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000421cc2 : mov ecx, dword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000424213 : mov ecx, dword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000040c7ea : mov ecx, dword ptr [rbp - 0x48] ; mov edx, dword ptr [r9] ; mov rsi, r8 ; call rcx
0x000000000044c7da : mov ecx, dword ptr [rbp - 8] ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x00000000004244da : mov ecx, dword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000044b4dd : mov ecx, eax ; shl edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000044b4ad : mov ecx, eax ; shr edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000402635 : mov edi, 0x65ce20 ; mov rbp, rsp ; call rax
0x00000000004025b2 : mov edi, 0x65d3e8 ; jmp rax
0x00000000004025f2 : mov edi, 0x65d3e8 ; jmp rdx
0x0000000000405fff : mov edi, 9 ; call 0x402277
0x000000000045cb29 : mov edi, dr1 ; call rax
0x000000000045a3d5 : mov edi, dr1 ; jmp rax
0x00000000004252bc : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000041ee89 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000041eea9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000041eec9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x00000000004337f9 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000433819 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000421cc6 : mov edi, dword ptr [rcx] ; call rax
0x0000000000420ac4 : mov edi, dword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x000000000044ed38 : mov edi, dword ptr [rsi] ; add rdi, rax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x00000000004221f9 : mov edi, dword ptr [rsi] ; call rcx
0x000000000040c8c4 : mov edi, ecx ; mov qword ptr [rbp - 0x80], r9 ; call rax
0x0000000000456ce7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000456ce6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000040c7ed : mov edx, dword ptr [r9] ; mov rsi, r8 ; call rcx
0x000000000040fa1e : mov edx, dword ptr [rbp - 0x14] ; call rcx
0x0000000000433a36 : mov edx, dword ptr [rbp - 0x18] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004221f2 : mov edx, dword ptr [rbp - 0x38] ; mov rsi, qword ptr [rdx] ; mov rdi, qword ptr [rsi] ; call rcx
0x0000000000433935 : mov edx, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040c7ee : mov edx, dword ptr [rcx] ; mov rsi, r8 ; call rcx
0x000000000040c8c1 : mov edx, dword ptr [rdi] ; mov rdi, rcx ; mov qword ptr [rbp - 0x80], r9 ; call rax
0x000000000040f146 : mov edx, edx ; mov rbx, qword ptr [rbp - 0x110] ; call rbx
0x000000000040f47f : mov edx, edx ; mov rbx, qword ptr [rbp - 0x120] ; call rbx
0x00000000004200ae : mov esi, dword ptr [rax + 0x10] ; mov qword ptr [rbp - 0x48], rdx ; call r8
0x000000000041fdcc : mov esi, dword ptr [rax] ; call rcx
0x0000000000405e0b : mov esi, dword ptr [rax] ; mov dword ptr [rbp - 0x38], esi ; call 0x402097
0x000000000040fa1b : mov esi, dword ptr [rbp - 0x10] ; mov edx, dword ptr [rbp - 0x14] ; call rcx
0x0000000000420ac7 : mov esi, dword ptr [rbp - 0x20] ; call rax
0x000000000041fdc5 : mov esi, dword ptr [rbp - 0x40] ; mov r8, qword ptr [rsi] ; mov rsi, qword ptr [r8] ; call rcx
0x0000000000424217 : mov esi, dword ptr [rcx] ; call rax
0x00000000004221f6 : mov esi, dword ptr [rdx] ; mov rdi, qword ptr [rsi] ; call rcx
0x000000000040c7f1 : mov esi, eax ; call rcx
0x00000000004025f0 : mov esi, eax ; mov edi, 0x65d3e8 ; jmp rdx
0x0000000000448b1c : mov esi, eax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x000000000044002f : mov esp, 0x50c48348 ; pop rbp ; ret
0x000000000045abc4 : mov esp, 0x58000006 ; sbb bl, bh ; jmp rdx
0x000000000045b8c4 : mov esp, 0xb8000013 ; jne 0x45b8cf ; call qword ptr [rdi]
0x0000000000405851 : mov esp, ebp ; pop rbp ; ret
0x0000000000409cec : mov qword ptr [0x65d508], rdi ; pop rbp ; ret
0x0000000000408075 : mov qword ptr [rax + 0x18], -1 ; pop rbp ; ret
0x0000000000409bc1 : mov qword ptr [rbp - 0x10], rax ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000041ffc5 : mov qword ptr [rbp - 0x30], rax ; mov qword ptr [rbp - 0x38], rdx ; call r8
0x000000000041ffc9 : mov qword ptr [rbp - 0x38], rdx ; call r8
0x00000000004200b1 : mov qword ptr [rbp - 0x48], rdx ; call r8
0x00000000004063f9 : mov qword ptr [rbp - 0x60], rax ; add rsp, 0x60 ; pop rbp ; ret
0x000000000040c527 : mov qword ptr [rbp - 0x68], r9 ; mov qword ptr [rbp - 0x70], r8 ; call rax
0x000000000040c52b : mov qword ptr [rbp - 0x70], r8 ; call rax
0x000000000040c8c6 : mov qword ptr [rbp - 0x80], r9 ; call rax
0x000000000043390e : mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000040e72b : mov qword ptr [rcx], rax ; add rsp, 0x30 ; pop rbp ; ret
0x000000000042b67b : mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x00000000004252bf : mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040b779 : mov qword ptr [rsi + 8], rax ; add rsp, 0x20 ; pop rbp ; ret
0x000000000044ed3d : mov qword ptr [rsi], rdi ; pop rbp ; ret
0x000000000044002e : mov r12d, 0x50c48348 ; pop rbp ; ret
0x000000000041fdc8 : mov r8, qword ptr [rsi] ; mov rsi, qword ptr [r8] ; call rcx
0x00000000004088d0 : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000448a69 : mov r8d, 0x50c48348 ; pop rbp ; ret
0x0000000000431ddb : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000424851 : mov rax, qword ptr [rax] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000436820 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040b713 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042dcd4 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000433930 : mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040584c : mov rax, qword ptr [rbp - 0x10] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000409bc5 : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000409fdb : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042dc8c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000432f53 : mov rax, qword ptr [rbp - 0x18] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000429d66 : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004372b2 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040b087 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000424ad3 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000448b1e : mov rax, qword ptr [rbp - 0x28] ; call rax
0x0000000000420dcb : mov rax, qword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040ad33 : mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004095d9 : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000448a67 : mov rax, qword ptr [rbp - 0x48] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004088ce : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000454980 : mov rax, qword ptr [rbp - 0x60] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000456c70 : mov rax, qword ptr [rbp - 0x68] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004091f6 : mov rax, qword ptr [rbp - 0x88] ; call qword ptr [rax]
0x00000000004254f5 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000409830 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000409af6 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000420bad : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000448cf2 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004246bf : mov rax, qword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000044af29 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000420998 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000041ee8c : mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000041eeac : mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000041eecc : mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x00000000004337fc : mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x000000000043381c : mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x000000000044b47d : mov rax, rdi ; pop rbp ; ret
0x000000000040a0f1 : mov rax, rdx ; pop rbp ; ret
0x000000000040263a : mov rbp, rsp ; call rax
0x00000000004025a0 : mov rbp, rsp ; ja 0x4025ad ; pop rbp ; ret
0x000000000040f148 : mov rbx, qword ptr [rbp - 0x110] ; call rbx
0x000000000040f481 : mov rbx, qword ptr [rbp - 0x120] ; call rbx
0x0000000000403156 : mov rcx, qword ptr [rax*8 + 0x456db0] ; jmp rcx
0x00000000004030d6 : mov rcx, qword ptr [rax*8 + 0x456df0] ; jmp rcx
0x0000000000411f13 : mov rcx, qword ptr [rax*8 + 0x458718] ; jmp rcx
0x000000000041bfac : mov rcx, qword ptr [rax*8 + 0x4589c8] ; jmp rcx
0x000000000042e726 : mov rcx, qword ptr [rax*8 + 0x458c40] ; jmp rcx
0x000000000042f240 : mov rcx, qword ptr [rax*8 + 0x458c88] ; jmp rcx
0x00000000004358b1 : mov rcx, qword ptr [rax*8 + 0x459140] ; jmp rcx
0x0000000000438a8e : mov rcx, qword ptr [rax*8 + 0x459528] ; jmp rcx
0x0000000000438a0e : mov rcx, qword ptr [rax*8 + 0x459588] ; jmp rcx
0x000000000043a246 : mov rcx, qword ptr [rax*8 + 0x459670] ; jmp rcx
0x000000000043a1c6 : mov rcx, qword ptr [rax*8 + 0x4596d0] ; jmp rcx
0x000000000043baec : mov rcx, qword ptr [rax*8 + 0x4597e8] ; jmp rcx
0x000000000043ba6c : mov rcx, qword ptr [rax*8 + 0x459848] ; jmp rcx
0x0000000000448e34 : mov rcx, qword ptr [rax*8 + 0x4598f8] ; jmp rcx
0x0000000000421db1 : mov rcx, qword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000421cc1 : mov rcx, qword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000424212 : mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000044c7d9 : mov rcx, qword ptr [rbp - 8] ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x00000000004244d9 : mov rcx, qword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x00000000004252bb : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000041ee88 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000041eea8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000041eec8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x00000000004337f8 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0x0000000000433818 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0x0000000000421cc5 : mov rdi, qword ptr [rcx] ; call rax
0x0000000000420ac3 : mov rdi, qword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x00000000004221f8 : mov rdi, qword ptr [rsi] ; call rcx
0x000000000040c8c3 : mov rdi, rcx ; mov qword ptr [rbp - 0x80], r9 ; call rax
0x0000000000433a35 : mov rdx, qword ptr [rbp - 0x18] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000433934 : mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000041fdcb : mov rsi, qword ptr [r8] ; call rcx
0x00000000004200ad : mov rsi, qword ptr [rax + 0x10] ; mov qword ptr [rbp - 0x48], rdx ; call r8
0x000000000040fa1a : mov rsi, qword ptr [rbp - 0x10] ; mov edx, dword ptr [rbp - 0x14] ; call rcx
0x0000000000420ac6 : mov rsi, qword ptr [rbp - 0x20] ; call rax
0x0000000000424216 : mov rsi, qword ptr [rcx] ; call rax
0x00000000004221f5 : mov rsi, qword ptr [rdx] ; mov rdi, qword ptr [rsi] ; call rcx
0x000000000040c7f0 : mov rsi, r8 ; call rcx
0x00000000004025ef : mov rsi, rax ; mov edi, 0x65d3e8 ; jmp rdx
0x0000000000448b1b : mov rsi, rax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x0000000000405850 : mov rsp, rbp ; pop rbp ; ret
0x000000000042e72b : mov word ptr [rbp], es ; jmp rcx
0x000000000043af6c : movabs al, byte ptr [0x5d60c48348fffc74] ; ret
0x000000000040c526 : movabs al, byte ptr [0x9045894c984d894c] ; call rax
0x0000000000435eca : movabs al, byte ptr [0xae8c78948328b48] ; ret
0x0000000000452009 : movabs al, byte ptr [0xe9b8458948fffffe] ; ret 0xfff0
0x000000000042953a : movabs byte ptr [0x5d10c48348fffd89], al ; ret
0x0000000000440339 : movabs dword ptr [0x5d10c48348fffc1b], eax ; ret
0x00000000004340fb : movsd xmm0, qword ptr [rbp - 0x18] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000428f2c : movsxd rax, ecx ; pop rbp ; ret
0x000000000045b139 : movsxd rdi, esp ; call rcx
0x00000000004340fc : movups xmm0, xmmword ptr [rbp - 0x18] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000407ea6 : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040dc06 : movzx eax, al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000405e35 : movzx eax, al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040da72 : movzx eax, al ; add rsp, 0x60 ; pop rbp ; ret
0x000000000044b7d6 : movzx eax, al ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000044c33d : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040be54 : movzx eax, al ; pop rbp ; ret
0x000000000044b692 : movzx eax, ax ; pop rbp ; ret
0x000000000040cf3c : movzx eax, cl ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040c52e : nop ; call rax
0x000000000045bad0 : nop ; jle 0x45bad3 ; call qword ptr [rax]
0x0000000000456d08 : nop dword ptr [rax + rax] ; ret
0x000000000045b135 : or al, 0 ; add al, bh ; movsxd rdi, esp ; call rcx
0x0000000000404d16 : or al, 0x25 ; jl 0x404d00 ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x0000000000407468 : or al, 0x25 ; jl 0x407452 ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x0000000000408dde : or al, 0x25 ; jl 0x408dc8 ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x0000000000408eab : or al, 0x25 ; jl 0x408e95 ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x0000000000409214 : or al, 0x25 ; jl 0x4091fe ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x000000000040a5b7 : or al, 0x25 ; jl 0x40a5a1 ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x000000000040e975 : or al, 0x25 ; jl 0x40e95f ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x000000000040f4de : or al, 0x25 ; jl 0x40f4c8 ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x00000000004100eb : or al, 0x25 ; jl 0x4100d5 ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x0000000000413045 : or al, 0x25 ; jl 0x41302f ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x0000000000413942 : or al, 0x25 ; jl 0x41392c ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x0000000000413c07 : or al, 0x25 ; jl 0x413bf1 ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x0000000000414f20 : or al, 0x25 ; jl 0x414f0a ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x0000000000415615 : or al, 0x25 ; jl 0x4155ff ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x000000000041621e : or al, 0x25 ; jl 0x416208 ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x00000000004164df : or al, 0x25 ; jl 0x4164c9 ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x00000000004169c2 : or al, 0x25 ; jl 0x4169ac ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x000000000041794a : or al, 0x25 ; jl 0x417934 ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x0000000000418033 : or al, 0x25 ; jl 0x41801d ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x0000000000418cca : or al, 0x25 ; jl 0x418cb4 ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x0000000000419a00 : or al, 0x25 ; jl 0x4199ea ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x000000000041b1a8 : or al, 0x25 ; jl 0x41b192 ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x000000000041b6de : or al, 0x25 ; jl 0x41b6c8 ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x000000000041c415 : or al, 0x25 ; jl 0x41c3ff ; add byte ptr gs:[rcx - 0x77], al ; ret 0x8141
0x000000000041ea4d : or al, 0x25 ; jl 0x41ea37 ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x0000000000420540 : or al, 0x25 ; jl 0x42052a ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x0000000000422207 : or al, 0x25 ; jl 0x4221f1 ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x00000000004247b4 : or al, 0x25 ; jl 0x42479e ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x00000000004256bd : or al, 0x25 ; jl 0x4256a7 ; add byte ptr gs:[rcx - 0x77], al ; ret 0x8141
0x0000000000425f7c : or al, 0x25 ; jl 0x425f66 ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x0000000000429812 : or al, 0x25 ; jl 0x4297fc ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x000000000042b88a : or al, 0x25 ; jl 0x42b874 ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x000000000042e27d : or al, 0x25 ; jl 0x42e267 ; add byte ptr gs:[rcx - 0x77], al ; ret 0x8141
0x000000000043245f : or al, 0x25 ; jl 0x432449 ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x0000000000432ffd : or al, 0x25 ; jl 0x432fe7 ; add byte ptr gs:[rcx - 0x77], al ; ret 0x8141
0x0000000000435146 : or al, 0x25 ; jl 0x435130 ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x0000000000436abe : or al, 0x25 ; jl 0x436aa8 ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x000000000043794a : or al, 0x25 ; jl 0x437934 ; add byte ptr gs:[rcx - 0x77], al ; ret 0x8141
0x0000000000437f3d : or al, 0x25 ; jl 0x437f27 ; add byte ptr gs:[rcx - 0x77], al ; ret 0x8141
0x000000000043ef15 : or al, 0x25 ; jl 0x43eeff ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x00000000004451c7 : or al, 0x25 ; jl 0x4451b1 ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x00000000004455c5 : or al, 0x25 ; jl 0x4455af ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x00000000004466d9 : or al, 0x25 ; jl 0x4466c3 ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x00000000004491c6 : or al, 0x25 ; jl 0x4491b0 ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x0000000000449cc0 : or al, 0x25 ; jl 0x449caa ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x000000000044b1cc : or al, 0x25 ; jl 0x44b1b6 ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x000000000044c51f : or al, 0x25 ; jl 0x44c509 ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x000000000044d150 : or al, 0x25 ; jl 0x44d13a ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x000000000044e1a2 : or al, 0x25 ; jl 0x44e18c ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x00000000004504f0 : or al, 0x25 ; jl 0x4504da ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x0000000000451614 : or al, 0x25 ; jl 0x4515fe ; add byte ptr gs:[rcx - 0x77], al ; ret 0x8141
0x0000000000451ad1 : or al, 0x25 ; jl 0x451abb ; add byte ptr gs:[rcx - 0x77], al ; ret 0x8141
0x00000000004528fe : or al, 0x25 ; jl 0x4528e8 ; add byte ptr gs:[rbp - 0x77], al ; ret 0x8141
0x0000000000454a86 : or al, 0x25 ; jl 0x454a70 ; add byte ptr gs:[rcx - 0x77], al ; ret 0x8141
0x000000000045ab48 : or al, 0xfffffffb ; call qword ptr [rax]
0x000000000043baee : or al, 0xffffffffffffffc5 ; call 0xffffffffff440092
0x000000000041bfae : or al, 0xffffffffffffffc5 ; enter 0x4589, 0 ; jmp rcx
0x000000000042e728 : or al, 0xffffffffffffffc5 ; mov word ptr [rbp], es ; jmp rcx
0x000000000045ab49 : or al, 0xfffffffffffffffb ; call qword ptr [rax]
0x000000000043e967 : or al, byte ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x000000000044af6d : or al, ch ; popfq ; ret
0x0000000000431fa9 : or byte ptr [r15], cl ; xchg eax, ebp ; ret 0x348b
0x00000000004201e0 : or byte ptr [r15], cl ; xchg eax, edx ; ret 0x348b
0x0000000000424423 : or byte ptr [r8 + 0x3b], cl ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x348b
0x0000000000430373 : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000424424 : or byte ptr [rax + 0x3b], cl ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x348b
0x000000000040f65f : or byte ptr [rax + 0xf000179], al ; xchg eax, ebp ; ret 0xf280
0x0000000000430374 : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000045ad8d : or byte ptr [rax], al ; add al, al ; push rdx ; sti ; jmp qword ptr [rbx]
0x0000000000400d50 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000045560c : or byte ptr [rcx + 0x2038], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x0000000000455a4c : or byte ptr [rcx + 0x2138], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x00000000004361dd : or byte ptr [rcx + 0x28f9], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x000000000040bc2e : or byte ptr [rcx + 0x28f9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x0000000000403601 : or byte ptr [rcx + 0x2df9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x0000000000440725 : or byte ptr [rcx + 0x2f9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x000000000045535c : or byte ptr [rcx + 0x3038], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x0000000000428c71 : or byte ptr [rcx + 0x39f9], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x000000000045594c : or byte ptr [rcx + 0x6138], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000040ba8e : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5588
0x000000000042be55 : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x000000000042b2b0 : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x0000000000431faa : or byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x00000000004201e1 : or byte ptr [rdi], cl ; xchg eax, edx ; ret 0x348b
0x000000000043331d : or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x00000000004333bf : or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x000000000041c002 : or cl, byte ptr [rbx + rcx*4 + 0x5d] ; mov byte ptr [rbp - 0x77], al ; or ebp, ecx ; ret 0xff83
0x0000000000410c98 : or cl, ch ; ret
0x0000000000406000 : or dword ptr [rax], eax ; add byte ptr [rax], al ; call 0x402276
0x0000000000436f7f : or eax, 0x48fffff9 ; add esp, 0x30 ; pop rbp ; ret
0x000000000045b285 : or eax, 0x97480000 ; cld ; call qword ptr [rdx]
0x0000000000459bd9 : or eax, 0xa00000 ; sti ; call qword ptr [rax]
0x0000000000459ba1 : or eax, 0xee300000 ; cli ; jmp qword ptr [rax]
0x0000000000459bc9 : or eax, 0xfcd00000 ; cli ; call rax
0x000000000045b00d : or eax, dword ptr [rax] ; add al, al ; push rax ; cld ; call rdx
0x0000000000459b51 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x3a], dh ; cli ; call rax
0x000000000042e22d : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000459b61 : or eax, dword ptr [rax] ; add byte ptr [rax], dh ; leave ; cli ; call qword ptr [rax]
0x000000000041c009 : or ebp, ecx ; ret 0xff83
0x000000000045ab09 : or edi, ebx ; call qword ptr [rax]
0x000000000044b47b : or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x000000000044b4b1 : or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000044b47a : or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x000000000041e3fc : out dx, al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, esi ; pop rbp ; ret
0x0000000000459ba5 : out dx, al ; cli ; jmp qword ptr [rax]
0x0000000000415dae : out dx, al ; ret
0x000000000044b4b0 : out dx, eax ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000041fb0e : pop qword ptr [rbx] ; add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x0000000000409267 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000456cfc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000407fc8 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000409269 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000456cfe : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000407fca : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000456d00 : pop r14 ; pop r15 ; ret
0x000000000040975f : pop r14 ; pop rbp ; ret
0x0000000000407fcc : pop r15 ; pop rbp ; ret
0x0000000000456d02 : pop r15 ; ret
0x0000000000407cbd : pop rax ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000043f19f : pop rax ; pop rbx ; pop rbp ; ret
0x000000000045abc8 : pop rax ; sbb bl, bh ; jmp rdx
0x000000000041c005 : pop rbp ; mov byte ptr [rbp - 0x77], al ; or ebp, ecx ; ret 0xff83
0x0000000000402612 : pop rbp ; mov byte ptr [rip + 0x25ae3e], 1 ; ret
0x00000000004025b1 : pop rbp ; mov edi, 0x65d3e8 ; jmp rax
0x00000000004025ee : pop rbp ; mov rsi, rax ; mov edi, 0x65d3e8 ; jmp rdx
0x0000000000456cfb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040926a : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000456cff : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004025a5 : pop rbp ; ret
0x0000000000407fc7 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040a216 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040975e : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000407cc1 : pop rbx ; pop rbp ; ret
0x0000000000405cd3 : pop rcx ; ret 0xffff
0x0000000000407fcd : pop rdi ; pop rbp ; ret
0x0000000000456d03 : pop rdi ; ret
0x0000000000455e21 : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x00000000004554e1 : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x0000000000407fcb : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000456d01 : pop rsi ; pop r15 ; ret
0x0000000000409760 : pop rsi ; pop rbp ; ret
0x00000000004216d7 : pop rsp ; add dword ptr [rdi], ecx ; ror dword ptr cs:[rdi], -0x69 ; ret 0x348b
0x0000000000409268 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000456cfd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000407fc9 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041f892 : pop rsp ; ret 0xf66
0x000000000044af6f : popfq ; ret
0x0000000000449328 : popfq ; ret 0x348b
0x0000000000455430 : popfq ; ret 0xc8b
0x0000000000405518 : push -0x17000003 ; call qword ptr [rdi]
0x00000000004467fa : push 0x5b000001 ; pop rbp ; ret
0x0000000000459d37 : push qword ptr [rax + 0x30000013] ; cld ; call rax
0x0000000000459daf : push qword ptr [rax + 0x40000015] ; jae 0x459dbb ; call rax
0x0000000000459cbf : push qword ptr [rax + 0x50000011] ; sti ; call rax
0x0000000000459ea7 : push qword ptr [rax - 0x1fffffe7] ; add bh, ch ; call rax
0x0000000000459bc7 : push qword ptr [rax - 0x2ffffff3] ; cld ; cli ; call rax
0x0000000000458c3a : push r12 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x42ec
0x00000000004337fe : push r8 ; pop rbp ; ret
0x0000000000459ccf : push rax ; adc dword ptr [rax], eax ; add byte ptr [rax + 0x4f], dl ; sti ; call qword ptr [rax]
0x0000000000459dbf : push rax ; adc eax, 0x78e00000 ; cld ; call qword ptr [rax]
0x000000000044dd13 : push rax ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000045b011 : push rax ; cld ; call rdx
0x0000000000459bd7 : push rax ; or eax, 0xa00000 ; sti ; call qword ptr [rax]
0x0000000000459b5f : push rax ; or eax, dword ptr [rax] ; add byte ptr [rax], dh ; leave ; cli ; call qword ptr [rax]
0x00000000004088d5 : push rax ; pop rbp ; ret
0x0000000000459cd4 : push rax ; sti ; call qword ptr [rax]
0x0000000000459cc4 : push rax ; sti ; call rax
0x000000000044e6b8 : push rbp ; call 0xd07680a
0x000000000044ec7b : push rbp ; call 0xd076dcd
0x0000000000433936 : push rbp ; clc ; pop rbp ; ret
0x00000000004221f3 : push rbp ; enter -0x74b8, 0x32 ; mov rdi, qword ptr [rsi] ; call rcx
0x000000000040a046 : push rbp ; fmul dword ptr [rax + 0x31] ; ret 0x8948
0x0000000000430377 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000043ee27 : push rbp ; fmul dword ptr [rax - 0x77] ; ret 0x3948
0x000000000040fa1f : push rbp ; in al, dx ; call rcx
0x0000000000402634 : push rbp ; mov edi, 0x65ce20 ; mov rbp, rsp ; call rax
0x000000000040ba99 : push rbp ; ret
0x000000000040e010 : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 8
0x0000000000431d0e : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000458c38 : push rbx ; push r12 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x42ec
0x000000000045ad91 : push rdx ; sti ; jmp qword ptr [rbx]
0x0000000000458c3b : push rsp ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x42ec
0x0000000000409007 : pushfq ; mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x000000000041c35e : pushfq ; mov byte ptr [rax + rcx - 0xe], -0xa ; ret 0xf01
0x000000000040390a : pushfq ; ret
0x0000000000406798 : pushfq ; ret 0x348b
0x000000000041402a : pushfq ; ret 0x48b
0x000000000040f315 : pushfq ; ret 0x844
0x0000000000402ad0 : pushfq ; ret 0x845
0x0000000000410c10 : pushfq ; ret 0xd008
0x0000000000402e21 : pushfq ; ret 0xd108
0x000000000041bfd3 : pushfq ; ret 0xe280
0x0000000000450049 : pushfq ; rol dword ptr [rax + rcx - 0x36], -0xa ; ret 0xf01
0x0000000000459c88 : rcl byte ptr [rax], 0 ; add byte ptr [rax + 0x29], al ; sti ; jmp rax
0x000000000044b4ae : rcl ebx, -0x11 ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000044b4de : rcl ebx, -0x19 ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000459c4c : rcr byte ptr [rax], -5 ; jmp rax
0x0000000000459f28 : rcr byte ptr [rbx], 0 ; add byte ptr [rax - 0x7f], dl ; std ; jmp rax
0x0000000000459fa8 : rcr byte ptr [rip - 0x6c600000], -3 ; jmp rax
0x0000000000428243 : rcr ebx, 0x7d ; loopne 0x42822b ; insd dword ptr [rdi], dx ; loopne 0x4282b0 ; ret
0x00000000004002e5 : ret
0x0000000000400d58 : ret 0
0x000000000042b870 : ret 0x10
0x0000000000449145 : ret 0x108
0x000000000043e04a : ret 0x110
0x0000000000402810 : ret 0x125
0x0000000000430765 : ret 0x13
0x000000000041534f : ret 0x17
0x000000000040bbd7 : ret 0x1a8
0x00000000004075ee : ret 0x20
0x00000000004023d2 : ret 0x25ae
0x00000000004021d2 : ret 0x25af
0x0000000000401fd2 : ret 0x25b0
0x000000000042ef77 : ret 0x2a
0x00000000004064fa : ret 0x2cf
0x00000000004146fb : ret 0x30
0x0000000000406799 : ret 0x348b
0x000000000043ee2b : ret 0x3948
0x0000000000428b07 : ret 0x3e8
0x000000000040494d : ret 0x4001
0x000000000045384a : ret 0x40e8
0x0000000000458c40 : ret 0x42ec
0x0000000000403911 : ret 0x4401
0x0000000000407efa : ret 0x4801
0x000000000041402b : ret 0x48b
0x0000000000422e6c : ret 0x48b0
0x0000000000402baf : ret 0x48f0
0x0000000000451554 : ret 0x4a3b
0x0000000000433097 : ret 0x4cc0
0x000000000040fad2 : ret 0x4cd0
0x0000000000402bd7 : ret 0x4cf0
0x000000000040ba97 : ret 0x5588
0x000000000043f446 : ret 0x5589
0x000000000041853f : ret 0x56
0x0000000000446f54 : ret 0x60
0x00000000004263fb : ret 0x634d
0x0000000000453f27 : ret 0x63e8
0x000000000043558d : ret 0x6de8
0x00000000004162de : ret 0x6f
0x0000000000433320 : ret 0x7ae8
0x000000000040c7fd : ret 0x8041
0x000000000040444c : ret 0x8141
0x00000000004075eb : ret 0x8148
0x000000000042b0b8 : ret 0x82e8
0x0000000000421986 : ret 0x8348
0x000000000040f316 : ret 0x844
0x000000000040e6d5 : ret 0x8445
0x0000000000402ad1 : ret 0x845
0x000000000040bbc9 : ret 0x850f
0x000000000040445d : ret 0x8801
0x00000000004116af : ret 0x8901
0x00000000004075af : ret 0x8948
0x0000000000426f24 : ret 0x894c
0x000000000040f842 : ret 0x894d
0x00000000004306ec : ret 0x89a5
0x0000000000404d0b : ret 0x8b44
0x00000000004063b3 : ret 0x8b48
0x000000000041e1ba : ret 0x8b4c
0x000000000043d455 : ret 0x9588
0x000000000043455e : ret 0x9ce8
0x0000000000425e70 : ret 0xa
0x000000000040286a : ret 0xa3d
0x0000000000430390 : ret 0xaae8
0x000000000044d18e : ret 0xb
0x0000000000435eac : ret 0xb0
0x000000000042611e : ret 0xb60f
0x0000000000421a5e : ret 0xb948
0x0000000000452fce : ret 0xbce8
0x000000000044e6bc : ret 0xc
0x00000000004025d5 : ret 0xc148
0x000000000041e6bf : ret 0xc2f6
0x0000000000435136 : ret 0xc4e8
0x000000000040360a : ret 0xc8b
0x0000000000410c11 : ret 0xd008
0x00000000004044fa : ret 0xd0b8
0x0000000000402e22 : ret 0xd108
0x000000000043373c : ret 0xd284
0x0000000000433cd4 : ret 0xd6e8
0x00000000004333c2 : ret 0xd8e8
0x000000000041bfd4 : ret 0xe280
0x0000000000402807 : ret 0xea81
0x0000000000431c5c : ret 0xee8
0x0000000000402878 : ret 0xf01
0x0000000000441b0a : ret 0xf0e8
0x000000000040b2ef : ret 0xf280
0x0000000000427568 : ret 0xf2e8
0x0000000000453595 : ret 0xf5e8
0x000000000041f893 : ret 0xf66
0x0000000000449cb2 : ret 0xf748
0x0000000000403901 : ret 0xf981
0x000000000041b2a7 : ret 0xfa81
0x000000000044ee19 : ret 0xfb81
0x000000000045378e : ret 0xfce8
0x000000000044770a : ret 0xfdd2
0x000000000041e6b2 : ret 0xfe81
0x00000000004167da : ret 0xfeb9
0x00000000004132da : ret 0xfeee
0x0000000000421ad7 : ret 0xff3
0x000000000040cbea : ret 0xff54
0x000000000041d786 : ret 0xff65
0x000000000041d7a9 : ret 0xff6a
0x00000000004058d9 : ret 0xff70
0x0000000000409f1a : ret 0xff7f
0x0000000000443a76 : ret 0xff81
0x000000000041c00b : ret 0xff83
0x000000000041dad7 : ret 0xff96
0x000000000041dec0 : ret 0xffd0
0x0000000000452002 : ret 0xffef
0x0000000000452012 : ret 0xfff0
0x00000000004027ca : ret 0xfff8
0x00000000004026ca : ret 0xfff9
0x000000000040271a : ret 0xfffa
0x000000000042621b : ret 0xfffd
0x00000000004458e1 : ret 0xfffe
0x000000000041dda6 : ret 0xffff
0x00000000004048fe : ret 1
0x000000000040c47e : ret 3
0x000000000040cf82 : ret 4
0x000000000043faac : ret 5
0x0000000000409ae6 : ret 8
0x000000000042da81 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040fe4b : rol byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 1
0x0000000000406304 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000045004a : rol dword ptr [rax + rcx - 0x36], -0xa ; ret 0xf01
0x00000000004392d5 : rol dword ptr [rcx + 0xf], -0x64 ; ret
0x0000000000427118 : rol dword ptr [rcx + 0xf], -0x6e ; ret
0x000000000042611a : ror byte ptr [r15], -0x67 ; ret 0xb60f
0x0000000000453fc3 : ror byte ptr [r15], -0x69 ; ret 0x348b
0x000000000042614a : ror byte ptr [r15], 1 ; cdq ; ret 0xb60f
0x0000000000451ba8 : ror byte ptr [r15], 1 ; xchg eax, esp ; ret 0x348b
0x00000000004214b9 : ror byte ptr [r8 - 0x73], 1 ; clc ; pop rbx ; pop rbp ; ret
0x00000000004363e3 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x00000000004299ef : ror byte ptr [r8 - 0x7d], -0x3c ; cmp byte ptr [rbx + 0x5d], bl ; ret
0x00000000004095db : ror byte ptr [r8 - 0x7d], -0x3c ; pop rbp ; ret
0x00000000004025dc : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4025eb ; pop rbp ; ret
0x000000000044b7d8 : ror byte ptr [rax - 0x73], 0x65 ; clc ; pop rbx ; pop rbp ; ret
0x00000000004214ba : ror byte ptr [rax - 0x73], 1 ; clc ; pop rbx ; pop rbp ; ret
0x000000000044c33f : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x00000000004363e4 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x00000000004299f0 : ror byte ptr [rax - 0x7d], -0x3c ; cmp byte ptr [rbx + 0x5d], bl ; ret
0x0000000000405e37 : ror byte ptr [rax - 0x7d], -0x3c ; pop rbp ; ret
0x000000000040e011 : ror byte ptr [rax - 0x7f], 1 ; ret 8
0x000000000041fdc7 : ror byte ptr [rbx + rcx*4 + 6], 0x49 ; mov esi, dword ptr [rax] ; call rcx
0x0000000000431d0f : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000042611b : ror byte ptr [rdi], -0x67 ; ret 0xb60f
0x0000000000453fc4 : ror byte ptr [rdi], -0x69 ; ret 0x348b
0x000000000042614b : ror byte ptr [rdi], 1 ; cdq ; ret 0xb60f
0x0000000000451ba9 : ror byte ptr [rdi], 1 ; xchg eax, esp ; ret 0x348b
0x0000000000420e46 : ror byte ptr [rdx + 0x4f890045], 0x10 ; pop rbp ; ret
0x000000000044e6b5 : ror dword ptr [rax - 0x75], 1 ; push rbp ; call 0xd07680d
0x000000000044ec78 : ror dword ptr [rax - 0x75], 1 ; push rbp ; call 0xd076dd0
0x000000000041f77d : ror dword ptr [rcx - 0x7d], cl ; ret
0x000000000041470f : ror dword ptr [rcx - 0x7f], cl ; ret
0x00000000004216db : ror dword ptr [rdi], -0x69 ; ret 0x348b
0x0000000000407b0e : ror dword ptr [rdi], -0x6a ; ret 0x348b
0x00000000004216da : ror dword ptr cs:[rdi], -0x69 ; ret 0x348b
0x000000000040613e : sahf ; ret
0x000000000043f4e9 : sahf ; ret 0x48b
0x0000000000455e26 : sahf ; ret 0x5588
0x0000000000428c79 : sahf ; ret 0xc8b
0x00000000004025ae : sal byte ptr [rsp + rsi*8 + 0x5d], -0x41 ; call 0xffffffffff408b94
0x000000000042f204 : sal dh, cl ; ret 0x8901
0x000000000044a386 : salc ; ret
0x0000000000459bcc : sar ah, 1 ; cli ; call rax
0x00000000004025de : sar eax, 1 ; jne 0x4025e9 ; pop rbp ; ret
0x000000000041dda1 : sar edi, -1 ; jmp 0x41a03c
0x00000000004025dd : sar rax, 1 ; jne 0x4025ea ; pop rbp ; ret
0x000000000044c80e : sbb al, 0x24 ; add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x000000000045bf3d : sbb al, byte ptr [rax] ; add byte ptr [rax - 0x17], ah ; std ; call qword ptr [rax]
0x0000000000445e2f : sbb al, ch ; ret
0x0000000000459c4d : sbb bl, bh ; jmp rax
0x000000000045abc9 : sbb bl, bh ; jmp rdx
0x0000000000459e41 : sbb byte ptr [rax], al ; add byte ptr [rax - 0x46], dl ; cld ; jmp qword ptr [rax]
0x000000000045bd7d : sbb byte ptr [rax], al ; add byte ptr [rax - 0x4c], dh ; std ; call rcx
0x000000000043f390 : sbb byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000044e3e8 : sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000045ab08 : sbb byte ptr [rbx], cl ; sti ; call qword ptr [rax]
0x000000000043e3bd : sbb cl, byte ptr [rax - 0x7f] ; ret
0x000000000042e4a0 : sbb cl, byte ptr [rcx - 0x7f] ; ret
0x0000000000459ea9 : sbb dword ptr [rax], eax ; add al, ah ; add bh, ch ; call rax
0x00000000004060ea : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000459f79 : sbb eax, 0x91600000 ; std ; jmp qword ptr [rax]
0x0000000000459fa9 : sbb eax, 0x93a00000 ; std ; jmp rax
0x0000000000459f29 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7f], dl ; std ; jmp rax
0x000000000043c987 : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000459c5d : sbb edi, ebx ; jmp qword ptr [rax]
0x000000000045a2e5 : sbb edi, edi ; jmp qword ptr [rax]
0x000000000045a2d5 : sbb edi, edi ; jmp rax
0x0000000000408fef : scasd eax, dword ptr [rdi] ; ret
0x000000000040280f : scasd eax, dword ptr [rdi] ; ret 0x125
0x0000000000404d28 : scasd eax, dword ptr [rdi] ; ret 0x8141
0x0000000000421524 : sete al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040be50 : shl byte ptr [r9 + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000459d7c : shl byte ptr [rax - 4], 1 ; jmp rax
0x000000000040be51 : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000045a198 : shl byte ptr [rip + 0x43600000], -2 ; jmp rax
0x00000000004025b4 : shl dword ptr [rbp], cl ; jmp rax
0x00000000004025f4 : shl dword ptr [rbp], cl ; jmp rdx
0x000000000041f8b6 : shl dword ptr [rsi + 0xf], 0x5c ; ret 0xf66
0x000000000044b4df : shl edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000044b478 : shl edx, cl ; or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x000000000045a350 : shr byte ptr [rax + rax], 0 ; sub byte ptr [rax], -1 ; jmp rax
0x000000000045a390 : shr byte ptr [rip + 0x46100000], -1 ; jmp rax
0x000000000044b4af : shr edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000459c49 : sldt word ptr [rax] ; rcr byte ptr [rax], -5 ; jmp rax
0x000000000045542a : stc ; add byte ptr [r8], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x0000000000445a87 : stc ; add eax, 0xf000000 ; xchg eax, esp ; ret 0xc8b
0x0000000000455e20 : stc ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x00000000004554e0 : stc ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x0000000000403603 : stc ; sub eax, 0xf000000 ; xchg eax, esp ; ret 0xc8b
0x000000000045bad2 : std ; call qword ptr [rax]
0x000000000045b8ca : std ; call qword ptr [rdi]
0x000000000045ba12 : std ; call qword ptr [rdx]
0x0000000000459eae : std ; call rax
0x000000000045b602 : std ; call rbx
0x000000000045bd82 : std ; call rcx
0x000000000045bb72 : std ; call rdi
0x000000000045bca2 : std ; call rsp
0x0000000000459f76 : std ; inc dword ptr [rax] ; sbb eax, 0x91600000 ; std ; jmp qword ptr [rax]
0x0000000000459fa6 : std ; inc eax ; sbb eax, 0x93a00000 ; std ; jmp rax
0x0000000000459f26 : std ; inc eax ; sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7f], dl ; std ; jmp rax
0x0000000000459f3e : std ; jmp qword ptr [rax]
0x000000000045b502 : std ; jmp qword ptr [rcx]
0x0000000000459f2e : std ; jmp rax
0x000000000045bce2 : std ; jmp rcx
0x000000000045be22 : std ; jmp rsp
0x00000000004552eb : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000459bde : sti ; call qword ptr [rax]
0x0000000000459c0e : sti ; call rax
0x000000000045aaa2 : sti ; call rdi
0x000000000044b2cf : sti ; dec dword ptr [rax - 0x73] ; clc ; pop rbx ; pop rbp ; ret
0x0000000000459c56 : sti ; inc dword ptr [rax] ; adc byte ptr [rax], al ; add byte ptr [rax + 0x1b], al ; sti ; jmp qword ptr [rax]
0x0000000000459c86 : sti ; inc eax ; adc byte ptr [rax], al ; add byte ptr [rax + 0x29], al ; sti ; jmp rax
0x0000000000459c5e : sti ; jmp qword ptr [rax]
0x000000000045ad22 : sti ; jmp qword ptr [rbx]
0x0000000000459c4e : sti ; jmp rax
0x000000000045abca : sti ; jmp rdx
0x0000000000459cbe : sti ; push qword ptr [rax + 0x50000011] ; sti ; call rax
0x0000000000459cce : sti ; push rax ; adc dword ptr [rax], eax ; add byte ptr [rax + 0x4f], dl ; sti ; call qword ptr [rax]
0x000000000045bca1 : stosb byte ptr [rdi], al ; std ; call rsp
0x000000000045bce1 : stosd dword ptr [rdi], eax ; std ; jmp rcx
0x0000000000447f81 : sub al, 0x48 ; add esp, 0x30 ; pop rbp ; ret
0x000000000045b134 : sub al, 0xc ; add byte ptr [rax], al ; clc ; movsxd rdi, esp ; call rcx
0x000000000045a934 : sub al, 4 ; add byte ptr [rax], al ; test al, -0xd ; cli ; call qword ptr [rsi]
0x000000000045a355 : sub bh, bh ; jmp rax
0x000000000045a354 : sub byte ptr [rax], -1 ; jmp rax
0x000000000045a16d : sub dh, bh ; jmp qword ptr [rax]
0x000000000040beaf : sub eax, 0x5d0002b2 ; ret
0x000000000040f5b9 : sub eax, 0xf000000 ; xchg eax, esp ; ret
0x0000000000403604 : sub eax, 0xf000000 ; xchg eax, esp ; ret 0xc8b
0x000000000045a2e1 : sub eax, dword ptr [rax] ; add al, ah ; sbb edi, edi ; jmp qword ptr [rax]
0x0000000000459c8d : sub ebx, edi ; jmp rax
0x000000000041e3fb : sub esi, 1 ; mov eax, esi ; pop rbp ; ret
0x0000000000456d89 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000456d88 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000045a938 : test al, -0xd ; cli ; call qword ptr [rsi]
0x000000000043e2bf : test al, 0 ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000408f21 : test al, 0x48 ; add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004026c5 : test al, 0x72 ; add r8b, r13b ; ret 0xfff9
0x0000000000450ba2 : test al, 2 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000456d0a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000042ae95 : test byte ptr [rip - 0x17000000], al ; ret
0x0000000000428f26 : test dh, dh ; cmove ecx, edx ; movsxd rax, ecx ; pop rbp ; ret
0x0000000000444014 : test dword ptr [rip - 0x17000000], eax ; jmp qword ptr [rdi]
0x000000000040b43b : test dword ptr [rip - 0x17000000], eax ; ret
0x0000000000439bf8 : test dword ptr [rip - 0x17000000], eax ; ret 0
0x000000000043075f : test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x000000000042ef71 : test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x0000000000418539 : test dword ptr [rip - 0x17000000], eax ; ret 0x56
0x000000000044d188 : test dword ptr [rip - 0x17000000], eax ; ret 0xb
0x0000000000405f28 : test dword ptr [rip - 0x17000000], eax ; ret 1
0x000000000040c478 : test dword ptr [rip - 0x17000000], eax ; ret 3
0x000000000043faa6 : test dword ptr [rip - 0x17000000], eax ; ret 5
0x000000000042d1f7 : test dword ptr [rip - 0x17000000], eax ; ret 8
0x00000000004370d3 : test eax, 0x48fffffc ; add esp, 0x10 ; pop rbp ; ret
0x0000000000459e05 : wait ; cld ; jmp qword ptr [rax]
0x0000000000411f18 : xchg dword ptr [rbp], eax ; jmp rcx
0x000000000042290e : xchg eax, ebp ; ret
0x0000000000409404 : xchg eax, ebp ; ret 0x348b
0x000000000043e4fc : xchg eax, ebp ; ret 0x48b
0x000000000040ba96 : xchg eax, ebp ; ret 0x5588
0x00000000004263ee : xchg eax, ebp ; ret 0x8041
0x000000000040e6d4 : xchg eax, ebp ; ret 0x8445
0x0000000000404d0a : xchg eax, ebp ; ret 0x8b44
0x000000000043d454 : xchg eax, ebp ; ret 0x9588
0x00000000004267c4 : xchg eax, ebp ; ret 0xc8b
0x000000000044e0a4 : xchg eax, ebp ; ret 0xd284
0x000000000040b2ee : xchg eax, ebp ; ret 0xf280
0x0000000000459fbd : xchg eax, ebp ; std ; jmp qword ptr [rax]
0x0000000000450218 : xchg eax, ebx ; ret 0x348b
0x0000000000459fad : xchg eax, ebx ; std ; jmp rax
0x0000000000459f7d : xchg eax, ecx ; std ; jmp qword ptr [rax]
0x000000000045b289 : xchg eax, edi ; cld ; call qword ptr [rdx]
0x00000000004216dd : xchg eax, edi ; ret 0x348b
0x000000000042711b : xchg eax, edx ; ret
0x00000000004201e3 : xchg eax, edx ; ret 0x348b
0x0000000000425ef6 : xchg eax, edx ; ret 0xe280
0x000000000042621a : xchg eax, edx ; ret 0xfffd
0x0000000000407b10 : xchg eax, esi ; ret 0x348b
0x0000000000408120 : xchg eax, esi ; ret 0x8b44
0x000000000045aa9c : xchg eax, esp ; add eax, 0x6200000 ; sti ; call rdi
0x0000000000404d3a : xchg eax, esp ; ret
0x00000000004083dc : xchg eax, esp ; ret 0x348b
0x000000000042878e : xchg eax, esp ; ret 0x48b
0x0000000000449d96 : xchg eax, esp ; ret 0x5588
0x000000000040c7fc : xchg eax, esp ; ret 0x8041
0x000000000040444b : xchg eax, esp ; ret 0x8141
0x00000000004089ba : xchg eax, esp ; ret 0x8b44
0x0000000000445897 : xchg eax, esp ; ret 0x9588
0x0000000000402869 : xchg eax, esp ; ret 0xa3d
0x0000000000403609 : xchg eax, esp ; ret 0xc8b
0x000000000043373b : xchg eax, esp ; ret 0xd284
0x000000000044575a : xchg eax, esp ; ret 0xf280
0x0000000000403900 : xchg eax, esp ; ret 0xf981
0x000000000041b2a6 : xchg eax, esp ; ret 0xfa81
0x000000000044ee18 : xchg eax, esp ; ret 0xfb81
0x000000000041e6b1 : xchg eax, esp ; ret 0xfe81
0x0000000000443a75 : xchg eax, esp ; ret 0xff81
0x0000000000421525 : xchg eax, esp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000040c52d : xchg eax, r8d ; call rax
0x000000000045b288 : xchg rax, rdi ; cld ; call qword ptr [rdx]
0x000000000044b47c : xlatb ; mov rax, rdi ; pop rbp ; ret
0x0000000000403b25 : xor al, 0x25 ; ret
0x000000000045af3c : xor al, 0xa ; add byte ptr [rax], al ; cmp byte ptr [rdi], -4 ; call qword ptr [rdx]
0x0000000000415dac : xor al, ch ; out dx, al ; ret
0x00000000004132d8 : xor al, ch ; ret 0xfeee
0x000000000044913e : xor byte ptr [r8 - 0x75], cl ; adc byte ptr [rax - 0x7f], cl ; ret 0x108
0x000000000044913f : xor byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7f], cl ; ret 0x108
0x0000000000433317 : xor byte ptr [rax - 0x75], cl ; add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x00000000004333b9 : xor byte ptr [rax - 0x75], cl ; add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x000000000044c9c6 : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000405e0c : xor byte ptr [rcx + 0x7be8c875], cl ; ret 0xffff
0x0000000000405ce0 : xor byte ptr [rcx - 0x5817278b], cl ; ret
0x0000000000459d3c : xor byte ptr [rcx - 4], cl ; call rax
0x00000000004221f7 : xor cl, byte ptr [rax - 0x75] ; call rcx
0x0000000000459b64 : xor cl, cl ; cli ; call qword ptr [rax]
0x0000000000459ba4 : xor dh, ch ; cli ; jmp qword ptr [rax]
0x00000000004167d8 : xor eax, ebp ; ret 0xfeb9
0x00000000004395f8 : xor ecx, ebp ; ret
0x000000000045c1d1 : xor edi, esi ; jmp rdi
0x000000000042def6 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
