0x000000000041a943 : adc al, 0x25 ; nop ; and al, 0x63 ; add byte ptr [rbp - 0x77], al ; ret
0x00000000004112bd : adc al, 0x25 ; nop ; and al, 0x63 ; add byte ptr [rcx - 0x77], al ; ret
0x000000000042ffec : adc al, 3 ; add byte ptr [rax], al ; add byte ptr [rbx - 3], dl ; call qword ptr [rax]
0x00000000004156ea : adc byte ptr [rax - 0x57f40ab], cl ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x0000000000429ad0 : adc byte ptr [rax - 0x7f], cl ; ret 0x10
0x000000000042d70f : adc byte ptr [rax - 0x7f], cl ; ret 0x20
0x0000000000416574 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000427b8d : adc dword ptr [rax - 0x7f], ecx ; ret 0x20
0x000000000042244d : adc dword ptr [rax - 0x7f], ecx ; ret 1
0x000000000042faf1 : adc dword ptr [rax], eax ; add al, dh ; xor al, 0xfffffffffffffffe ; jmp rax
0x000000000042fac1 : adc dword ptr [rax], eax ; add byte ptr [rax], al ; sub edi, esi ; jmp qword ptr [rax]
0x0000000000411664 : add al, 0 ; add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x42f2
0x000000000040f04f : add al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0x348b
0x000000000043012d : add al, 0 ; add byte ptr [rax], dl ; mov ebp, edi ; call rbx
0x000000000043057f : add al, al ; loopne 0x430584 ; call rbx
0x000000000040f397 : add al, ch ; ret
0x000000000041eab8 : add al, ch ; ret 0xfe2b
0x00000000004303f7 : add al, ch ; xlatb ; std ; call qword ptr [rdi]
0x0000000000430a07 : add al, cl ; and al, 0xfffffffffffffffe ; call rcx
0x000000000042faf3 : add al, dh ; xor al, 0xfffffffffffffffe ; jmp rax
0x000000000042e37f : add bl, dh ; ret
0x000000000042401b : add byte ptr [r8], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x000000000042fd1f : add byte ptr [rax + 0x1d], al ; std ; jmp rsp
0x000000000042112d : add byte ptr [rax + 0x39], cl ; ror dword ptr [rdi], -0x6b ; ret 0x348b
0x000000000042f84b : add byte ptr [rax + 0x4a], dl ; std ; jmp qword ptr [rax]
0x000000000042f87b : add byte ptr [rax + 0x54], dl ; std ; jmp rax
0x000000000042fd1b : add byte ptr [rax + rax], al ; add byte ptr [rax + 0x1d], al ; std ; jmp rsp
0x000000000043057b : add byte ptr [rax + rcx - 0x1f400000], ah ; std ; call rbx
0x000000000042f943 : add byte ptr [rax - 0x21], ah ; std ; call qword ptr [rax]
0x0000000000404874 : add byte ptr [rax - 0x73], cl ; clc ; pop rbx ; pop rbp ; ret
0x0000000000411666 : add byte ptr [rax - 0x73], cl ; cmp al, 0x25 ; ret 0x42f2
0x00000000004120c0 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000406eb9 : add byte ptr [rax - 0x77], cl ; fsubr st(1) ; ret
0x0000000000416bd2 : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000401feb : add byte ptr [rax - 0x77], cl ; mov r8b, r13b ; wait ; ret
0x000000000042dea3 : add byte ptr [rax - 0x77], cl ; or cl, ch ; salc ; ret 0xffff
0x0000000000423a80 : add byte ptr [rax - 0x77], cl ; xor cl, ch ; jmp rax
0x000000000042f903 : add byte ptr [rax], ah ; pushfq ; std ; call qword ptr [rax]
0x000000000042ffea : add byte ptr [rax], al ; adc al, 3 ; add byte ptr [rax], al ; add byte ptr [rbx - 3], dl ; call qword ptr [rax]
0x000000000042e37d : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000042fd1d : add byte ptr [rax], al ; add byte ptr [rax + 0x1d], al ; std ; jmp rsp
0x000000000042112b : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ror dword ptr [rdi], -0x6b ; ret 0x348b
0x0000000000406eb7 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fsubr st(1) ; ret
0x0000000000416d88 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000042dea1 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; or cl, ch ; salc ; ret 0xffff
0x0000000000423a7e : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; xor cl, ch ; jmp rax
0x000000000042e37b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040e62e : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000425089 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x000000000040e55e : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042f6fc : add byte ptr [rax], al ; add byte ptr [rax], al ; push rdi ; ret
0x000000000042e37c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000042ec5c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x40ab
0x000000000042f564 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x41f1
0x000000000042fd1a : add byte ptr [rax], al ; add byte ptr [rax], r8b ; add byte ptr [rax + 0x1d], al ; std ; jmp rsp
0x000000000041a950 : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x000000000040417c : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x8141
0x000000000040d4f8 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000042ffee : add byte ptr [rax], al ; add byte ptr [rbx - 3], dl ; call qword ptr [rax]
0x0000000000401ead : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret
0x0000000000409f5b : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x844
0x0000000000402c1b : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x00000000004112ca : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x00000000004079ba : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x125
0x0000000000413c3f : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x0000000000404832 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000401ea2 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x0000000000404cc9 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8b44
0x000000000041e78a : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xf981
0x0000000000403a4b : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x51], al ; ret
0x0000000000423f50 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000042401c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x0000000000402467 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret
0x000000000040f051 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0x348b
0x0000000000406460 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0x5588
0x0000000000406d11 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0x9588
0x000000000041ab61 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xc8b
0x000000000040dea6 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x0000000000424a12 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x00000000004240d2 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x0000000000413cac : add byte ptr [rax], al ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret
0x0000000000401a95 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x125
0x0000000000411c47 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x000000000041278e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x0000000000406d85 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x0000000000425c9b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000411ec1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x0000000000402f31 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000424200 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x0000000000403720 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x48b
0x0000000000409f51 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x000000000040743a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x0000000000401c46 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x0000000000406720 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x000000000040e497 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000406678 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xff81
0x00000000004211f6 : add byte ptr [rax], al ; add cl, ch ; jmp qword ptr [rdi]
0x000000000040f390 : add byte ptr [rax], al ; add cl, ch ; or byte ptr [r8], al ; add al, ch ; ret
0x000000000040510d : add byte ptr [rax], al ; add cl, ch ; ret
0x000000000040b4c1 : add byte ptr [rax], al ; add cl, ch ; ret 0x13
0x0000000000409cd3 : add byte ptr [rax], al ; add cl, ch ; ret 0x2a
0x0000000000420b60 : add byte ptr [rax], al ; add cl, ch ; ret 0x2d
0x00000000004148da : add byte ptr [rax], al ; add cl, ch ; ret 0xb
0x000000000042d23a : add byte ptr [rax], al ; add cl, ch ; ret 0xf
0x000000000040adbe : add byte ptr [rax], al ; add cl, ch ; ret 1
0x0000000000405699 : add byte ptr [rax], al ; add cl, ch ; ret 9
0x000000000042deb7 : add byte ptr [rax], al ; add cl, ch ; salc ; ret
0x000000000040476f : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408f8f : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004040ae : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401503 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000042fbea : add byte ptr [rax], al ; and byte ptr [rbp - 1], cl ; call rax
0x000000000042fbfa : add byte ptr [rax], al ; and byte ptr [rdi - 1], cl ; call qword ptr [rax]
0x000000000042fab2 : add byte ptr [rax], al ; and byte ptr [rsi], 0xfe ; jmp rax
0x000000000042f972 : add byte ptr [rax], al ; and dl, 0xfd ; call rax
0x00000000004303f6 : add byte ptr [rax], al ; call 0x184301d9
0x0000000000430d56 : add byte ptr [rax], al ; call 0xffffffffd1430c97
0x0000000000430f76 : add byte ptr [rax], al ; fmul dword ptr [rbx - 1] ; call rbx
0x0000000000430d52 : add byte ptr [rax], al ; jl 0x430d6f ; add byte ptr [rax], al ; call 0xffffffffd1430c9b
0x0000000000401579 : add byte ptr [rax], al ; jmp 0x401519
0x000000000040f391 : add byte ptr [rax], al ; jmp 0x40fbe1
0x000000000041fbc0 : add byte ptr [rax], al ; jmp 0x423748
0x000000000042f80a : add byte ptr [rax], al ; loopne 0x42f850 ; std ; jmp qword ptr [rax]
0x000000000043002e : add byte ptr [rax], al ; mov al, 0x60 ; std ; jmp rsi
0x000000000042fe66 : add byte ptr [rax], al ; mov byte ptr [rcx - 3], al ; jmp qword ptr [rdi]
0x000000000040e630 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000408dc2 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000042508b : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000407875 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004108ca : add byte ptr [rax], al ; mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000410ded : add byte ptr [rax], al ; mov eax, edi ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040400d : add byte ptr [rax], al ; mov eax, esi ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042dea2 : add byte ptr [rax], al ; mov qword ptr [rax], rcx ; jmp 0x42a189
0x0000000000408a32 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000416d89 : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000430962 : add byte ptr [rax], al ; mov word ptr [rax + rax], cs ; add byte ptr [rax], cl ; sbb al, -2 ; jmp rcx
0x000000000042fe62 : add byte ptr [rax], al ; mov word ptr [rcx], es ; add byte ptr [rax], al ; mov byte ptr [rcx - 3], al ; jmp qword ptr [rdi]
0x000000000043057a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; or byte ptr [rax], al ; add al, al ; loopne 0x430589 ; call rbx
0x0000000000411162 : add byte ptr [rax], al ; movzx eax, ax ; mov rsp, rbp ; pop rbp ; ret
0x000000000042f83a : add byte ptr [rax], al ; nop ; std ; jmp rax
0x0000000000430922 : add byte ptr [rax], al ; or al, 0 ; add byte ptr [rax], bl ; sbb edi, esi ; call rsp
0x0000000000430e96 : add byte ptr [rax], al ; or byte ptr [rdx - 1], al ; call rsp
0x0000000000430966 : add byte ptr [rax], al ; or byte ptr [rsi + rdi*8], bl ; jmp rcx
0x000000000040768a : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000403eb2 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000406043 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040c721 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000042f87a : add byte ptr [rax], al ; push rax ; push rsp ; std ; jmp rax
0x000000000043105e : add byte ptr [rax], al ; push rax ; sar edi, cl ; call qword ptr [rax]
0x000000000042f84a : add byte ptr [rax], al ; push rax ; std ; jmp qword ptr [rax]
0x000000000042ffef : add byte ptr [rax], al ; push rbx ; std ; call qword ptr [rax]
0x000000000042f6fe : add byte ptr [rax], al ; push rdi ; ret
0x000000000043012a : add byte ptr [rax], al ; push rsp ; add al, 0 ; add byte ptr [rax], dl ; mov ebp, edi ; call rbx
0x000000000042e37e : add byte ptr [rax], al ; ret
0x000000000042ec5e : add byte ptr [rax], al ; ret 0x40ab
0x000000000042f566 : add byte ptr [rax], al ; ret 0x41f1
0x00000000004303f2 : add byte ptr [rax], al ; sbb al, 7 ; add byte ptr [rax], al ; call 0x184301dd
0x000000000043057e : add byte ptr [rax], al ; shl al, -3 ; call rbx
0x000000000042fac3 : add byte ptr [rax], al ; sub edi, esi ; jmp qword ptr [rax]
0x000000000043105a : add byte ptr [rax], al ; test byte ptr [rbx], dl ; add byte ptr [rax], al ; push rax ; sar edi, cl ; call qword ptr [rax]
0x000000000042f982 : add byte ptr [rax], al ; xor bl, ah ; std ; call qword ptr [rax]
0x000000000043004e : add byte ptr [rax], al ; xor byte ptr [rdi - 3], 0xff ; ret
0x000000000042f932 : add byte ptr [rax], al ; xor dh, bl ; std ; call rax
0x0000000000430927 : add byte ptr [rax], bl ; sbb edi, esi ; call rsp
0x0000000000430967 : add byte ptr [rax], cl ; sbb al, -2 ; jmp rcx
0x000000000042f933 : add byte ptr [rax], dh ; fdivp st(5) ; call rax
0x000000000042f983 : add byte ptr [rax], dh ; jrcxz 0x42f988 ; call qword ptr [rax]
0x000000000043012f : add byte ptr [rax], dl ; mov ebp, edi ; call rbx
0x000000000042fd1c : add byte ptr [rax], r8b ; add byte ptr [rax + 0x1d], al ; std ; jmp rsp
0x000000000041a952 : add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x000000000040417e : add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x8141
0x000000000041a948 : add byte ptr [rbp - 0x77], al ; ret
0x0000000000404174 : add byte ptr [rbp - 0x77], al ; ret 0x8141
0x0000000000403eb3 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000406044 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040c722 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000042ffeb : add byte ptr [rbx + rax], dl ; add byte ptr [rax], al ; add byte ptr [rbx - 3], dl ; call qword ptr [rax]
0x0000000000407876 : add byte ptr [rbx - 0x76b707bb], cl ; in al, dx ; pop rbp ; ret
0x000000000042fff0 : add byte ptr [rbx - 3], dl ; call qword ptr [rax]
0x000000000041cfd5 : add byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x000000000040f972 : add byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x000000000040435e : add byte ptr [rcx + 0xf], al ; pushfq ; mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x0000000000401eaf : add byte ptr [rcx + 0xf], al ; pushfq ; ret
0x0000000000409f5d : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x844
0x0000000000402c1d : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x00000000004112cc : add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x00000000004079bc : add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x125
0x0000000000413c41 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x0000000000404834 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000401ea4 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x0000000000404ccb : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8b44
0x000000000041e78c : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xf981
0x000000000040d86c : add byte ptr [rcx + 0xfe], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000406674 : add byte ptr [rcx + 0xfe], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xff81
0x000000000040e0a8 : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000409f4d : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x0000000000401c42 : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x000000000042fe63 : add byte ptr [rcx + rax + 0x41880000], cl ; std ; jmp qword ptr [rdi]
0x00000000004035a5 : add byte ptr [rcx + rax], ah ; movzx eax, al ; pop rbp ; ret
0x00000000004112c2 : add byte ptr [rcx - 0x77], al ; ret
0x00000000004079b2 : add byte ptr [rcx - 0x77], al ; ret 0x8141
0x0000000000406041 : add byte ptr [rcx], 0 ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000401a28 : add byte ptr [rcx], al ; ret
0x00000000004303f3 : add byte ptr [rdi + rax], bl ; add byte ptr [rax], al ; call 0x184301dc
0x0000000000403a4d : add byte ptr [rdi + rcx - 0x51], al ; ret
0x000000000042f848 : add byte ptr [rdi], al ; add byte ptr [rax], al ; push rax ; std ; jmp qword ptr [rax]
0x0000000000411163 : add byte ptr [rdi], cl ; mov bh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000423f52 : add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000042401e : add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x0000000000402469 : add byte ptr [rdi], cl ; pushfq ; ret
0x000000000040f053 : add byte ptr [rdi], cl ; pushfq ; ret 0x348b
0x0000000000406462 : add byte ptr [rdi], cl ; pushfq ; ret 0x5588
0x0000000000406d13 : add byte ptr [rdi], cl ; pushfq ; ret 0x9588
0x000000000041ab63 : add byte ptr [rdi], cl ; pushfq ; ret 0xc8b
0x000000000040dea8 : add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x0000000000424a14 : add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x00000000004240d4 : add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x0000000000413cae : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret
0x0000000000401a97 : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x125
0x0000000000411c49 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x0000000000412790 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x0000000000406d87 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x0000000000425c9d : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000411ec3 : add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x0000000000402f33 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000424202 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x0000000000403722 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x48b
0x0000000000409f53 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x000000000040743c : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x0000000000401c48 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x0000000000406722 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x000000000040e499 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040667a : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xff81
0x000000000042deb5 : add byte ptr [rdx], al ; add byte ptr [rax], al ; add cl, ch ; salc ; ret
0x000000000043012b : add byte ptr [rsp + rax], dl ; add byte ptr [rax], dl ; mov ebp, edi ; call rbx
0x0000000000430923 : add byte ptr [rsp + rcx], cl ; add byte ptr [rax], bl ; sbb edi, esi ; call rsp
0x0000000000415980 : add byte ptr cs:[rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x000000000042f73f : add ch, al ; mov esi, 0x42 ; add byte ptr [rax], al ; ret
0x00000000004211f8 : add cl, ch ; jmp qword ptr [rdi]
0x000000000040f392 : add cl, ch ; or byte ptr [r8], al ; add al, ch ; ret
0x000000000040510f : add cl, ch ; ret
0x000000000040b4c3 : add cl, ch ; ret 0x13
0x0000000000409cd5 : add cl, ch ; ret 0x2a
0x0000000000420b62 : add cl, ch ; ret 0x2d
0x00000000004148dc : add cl, ch ; ret 0xb
0x000000000042d23c : add cl, ch ; ret 0xf
0x000000000040adc0 : add cl, ch ; ret 1
0x000000000040569b : add cl, ch ; ret 9
0x000000000042deb9 : add cl, ch ; salc ; ret
0x000000000040e07a : add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x000000000040e11c : add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x000000000042dea0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rax], rcx ; jmp 0x42a18b
0x0000000000403eb1 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000406042 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040c720 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000415a29 : add dword ptr [rcx + 0x2ef9], eax ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x0000000000407b97 : add dword ptr [rcx + 0xf9], eax ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x00000000004041b5 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x00000000004035a7 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x00000000004211f2 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; jmp qword ptr [rdi]
0x0000000000405109 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret
0x000000000040b4bd : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x0000000000409ccf : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x0000000000420b5c : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0x2d
0x00000000004148d6 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0xb
0x000000000042d236 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0xf
0x000000000040adba : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 1
0x0000000000405695 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 9
0x0000000000418164 : add dword ptr [rdi], ecx ; xchg eax, esi ; ret 0x348b
0x0000000000401a24 : add eax, 0x2308ee ; add ebx, esi ; ret
0x000000000042f809 : add eax, 0x3de00000 ; std ; jmp qword ptr [rax]
0x000000000040feb3 : add eax, 0x48000000 ; add esp, 0x20 ; pop rbp ; ret
0x00000000004171ae : add eax, 0x48000000 ; mov esp, ebp ; pop rbp ; ret
0x00000000004211f5 : add eax, 0xe9000000 ; jmp qword ptr [rdi]
0x000000000040510c : add eax, 0xe9000000 ; ret
0x000000000040b4c0 : add eax, 0xe9000000 ; ret 0x13
0x0000000000409cd2 : add eax, 0xe9000000 ; ret 0x2a
0x0000000000420b5f : add eax, 0xe9000000 ; ret 0x2d
0x00000000004148d9 : add eax, 0xe9000000 ; ret 0xb
0x000000000042d239 : add eax, 0xe9000000 ; ret 0xf
0x000000000040adbd : add eax, 0xe9000000 ; ret 1
0x0000000000405698 : add eax, 0xe9000000 ; ret 9
0x000000000042ffed : add eax, dword ptr [rax] ; add byte ptr [rax], al ; push rbx ; std ; call qword ptr [rax]
0x00000000004019eb : add eax, edx ; sar rax, 1 ; jne 0x4019fc ; pop rbp ; ret
0x0000000000401a29 : add ebx, esi ; ret
0x000000000042378a : add ecx, ebp ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000401d8b : add esp, 0x10 ; pop rbp ; ret
0x0000000000416572 : add esp, 0x110 ; pop rbp ; ret
0x000000000040c71d : add esp, 0x178 ; pop rbx ; pop rbp ; ret
0x00000000004122ac : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000414280 : add esp, 0x1b8 ; pop rbx ; pop rbp ; ret
0x0000000000425b00 : add esp, 0x1e0 ; pop rbp ; ret
0x00000000004053e8 : add esp, 0x20 ; pop rbp ; ret
0x0000000000401f38 : add esp, 0x30 ; pop rbp ; ret
0x00000000004088b1 : add esp, 0x40 ; pop rbp ; ret
0x0000000000411def : add esp, 0x40 ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040d78c : add esp, 0x50 ; pop rbp ; ret
0x000000000040ec9a : add esp, 0x60 ; pop rbp ; ret
0x000000000040dab2 : add esp, 0x70 ; pop rbp ; ret
0x000000000040cb3e : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000041210c : add esp, 0xb0 ; pop rbp ; ret
0x0000000000407686 : add esp, 0xf0 ; pop rbp ; ret
0x0000000000401506 : add esp, 8 ; ret
0x00000000004019ea : add rax, rdx ; sar rax, 1 ; jne 0x4019fd ; pop rbp ; ret
0x0000000000401d8a : add rsp, 0x10 ; pop rbp ; ret
0x0000000000416571 : add rsp, 0x110 ; pop rbp ; ret
0x000000000040c71c : add rsp, 0x178 ; pop rbx ; pop rbp ; ret
0x00000000004122ab : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000041427f : add rsp, 0x1b8 ; pop rbx ; pop rbp ; ret
0x0000000000425aff : add rsp, 0x1e0 ; pop rbp ; ret
0x00000000004053e7 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000401f37 : add rsp, 0x30 ; pop rbp ; ret
0x00000000004088b0 : add rsp, 0x40 ; pop rbp ; ret
0x0000000000411dee : add rsp, 0x40 ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040d78b : add rsp, 0x50 ; pop rbp ; ret
0x000000000040ec99 : add rsp, 0x60 ; pop rbp ; ret
0x000000000040dab1 : add rsp, 0x70 ; pop rbp ; ret
0x000000000040cb3d : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000041210b : add rsp, 0xb0 ; pop rbp ; ret
0x0000000000407685 : add rsp, 0xf0 ; pop rbp ; ret
0x0000000000401505 : add rsp, 8 ; ret
0x00000000004019c4 : and ah, byte ptr [rbx] ; jmp rax
0x0000000000401a04 : and ah, byte ptr [rbx] ; jmp rdx
0x000000000041a946 : and al, 0x63 ; add byte ptr [rbp - 0x77], al ; ret
0x0000000000404172 : and al, 0x63 ; add byte ptr [rbp - 0x77], al ; ret 0x8141
0x00000000004112c0 : and al, 0x63 ; add byte ptr [rcx - 0x77], al ; ret
0x00000000004079b0 : and al, 0x63 ; add byte ptr [rcx - 0x77], al ; ret 0x8141
0x0000000000430a09 : and al, 0xfffffffffffffffe ; call rcx
0x00000000004041b4 : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004035a6 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000416e2a : and byte ptr [r15], cl ; xchg eax, esp ; ret 0x348b
0x000000000042fbec : and byte ptr [rbp - 1], cl ; call rax
0x000000000042fbfc : and byte ptr [rdi - 1], cl ; call qword ptr [rax]
0x0000000000416e2b : and byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x000000000042fab4 : and byte ptr [rsi], 0xfe ; jmp rax
0x000000000042f974 : and dl, 0xfd ; call rax
0x000000000040e1a7 : and eax, 0x48ffffee ; add esp, 0x20 ; pop rbp ; ret
0x00000000004045cf : and eax, 0x632320 ; pop rbp ; ret
0x00000000004045f3 : and eax, 0x632328 ; pop rbp ; ret
0x0000000000401a27 : and eax, dword ptr [rax] ; add ebx, esi ; ret
0x00000000004088ad : and esp, dword ptr [rbx] ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004045d1 : and esp, dword ptr [rbx] ; pop rbp ; ret
0x00000000004303f8 : call 0x184301d7
0x00000000004154d5 : call 0x4016f2
0x00000000004154c8 : call 0x4017a2
0x000000000041357b : call 0xffffffffd141357a
0x0000000000430d58 : call 0xffffffffd1430c95
0x000000000040c9b9 : call 0xffffffffe9035309
0x000000000040c9b8 : call 0xffffffffe903530a
0x000000000042e359 : call qword ptr [r12 + rbx*8]
0x000000000042f907 : call qword ptr [rax]
0x00000000004303fb : call qword ptr [rdi]
0x000000000042ff0b : call qword ptr [rsi]
0x000000000042e35a : call qword ptr [rsp + rbx*8]
0x00000000004058fc : call r8
0x0000000000401a4d : call rax
0x0000000000430133 : call rbx
0x0000000000430a0b : call rcx
0x000000000043092b : call rsp
0x000000000042f808 : clc ; add eax, 0x3de00000 ; std ; jmp qword ptr [rax]
0x0000000000410df0 : clc ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000414514 : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000415d65 : clc ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000407684 : clc ; add rsp, 0xf0 ; pop rbp ; ret
0x0000000000413743 : clc ; idiv edi ; dec dword ptr [rax + 0x39] ; ror dword ptr [rdi], -0x7c ; ret 0
0x00000000004019ef : clc ; jne 0x4019f8 ; pop rbp ; ret
0x000000000040e55b : clc ; mov dword ptr [rdi], 0 ; pop rbp ; ret
0x00000000004035c7 : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000407879 : clc ; mov rsp, rbp ; pop rbp ; ret
0x00000000004035bc : clc ; pop rbp ; ret
0x0000000000404878 : clc ; pop rbx ; pop rbp ; ret
0x0000000000401db7 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040fbd2 : cld ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000425166 : cld ; mov dword ptr [rbp - 0xc], eax ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x00000000004156ef : cli ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x0000000000424d76 : cli ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004101df : cmp al, -0x36 ; mov rdx, qword ptr [rbp - 0x20] ; call rax
0x0000000000411669 : cmp al, 0x25 ; ret 0x42f2
0x0000000000413209 : cmp al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004241fe : cmp byte ptr [rax], ah ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x0000000000423f4e : cmp byte ptr [rax], dh ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000042463e : cmp byte ptr [rcx], ah ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x0000000000404cc7 : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8b44
0x000000000041278c : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x0000000000429b80 : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x000000000040ce4d : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004019ad : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4019c0 ; pop rbp ; ret
0x00000000004073a7 : cmp eax, 0xf000000 ; xchg eax, esp ; ret 0xc8b
0x000000000041fbc4 : cmp eax, dword ptr [rax] ; add cl, ch ; ret
0x0000000000425f1a : cwde ; mov rcx, qword ptr [rax*8 + 0x42f5e0] ; jmp rcx
0x0000000000402c19 : dec byte ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x00000000004090df : dec byte ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret
0x000000000042a7f1 : dec dword ptr [rax + 0x39] ; add dword ptr [rdi], ecx ; xchg eax, esi ; ret 0x348b
0x0000000000413746 : dec dword ptr [rax + 0x39] ; ror dword ptr [rdi], -0x7c ; ret 0
0x00000000004109d4 : dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x00000000004035b8 : dec dword ptr [rax - 0x77] ; jge 0x4035bb ; pop rbp ; ret
0x00000000004114d6 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004151d4 : dec dword ptr [rax - 0x7f] ; ret 1
0x00000000004154d1 : dec dword ptr [rbx + 0x16e8b87d] ; ret 0xfffe
0x0000000000418f76 : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0x348b
0x000000000041d453 : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0x8b44
0x0000000000417d9c : dec dword ptr [rdi] ; xchg eax, esp ; ret 0x348b
0x0000000000409b6a : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x00000000004178c2 : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x000000000040ca6b : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000040e53a : enter -0x7cb8, -0x3c ; pop rbp ; ret
0x00000000004163e3 : fadd qword ptr [rcx - 0xa] ; jmp qword ptr [rcx]
0x0000000000402f44 : fcomi st(6) ; ret
0x000000000042f935 : fdivp st(5) ; call rax
0x000000000040314a : fiadd dword ptr [rcx - 0xa] ; ret 0x4001
0x000000000040dc9f : fiadd dword ptr [rcx - 0xa] ; ret 0x4801
0x0000000000410f88 : fiadd dword ptr [rcx - 0xa] ; ret 0x6601
0x0000000000401eb6 : fiadd dword ptr [rcx - 0xa] ; ret 0x8801
0x00000000004044a5 : fiadd dword ptr [rcx - 0xa] ; ret 0x8901
0x00000000004049ad : fiadd dword ptr [rcx - 0xa] ; ret 0xf01
0x0000000000404845 : fild dword ptr [rcx - 0xa] ; ret
0x000000000040b0d8 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x00000000004040a5 : fmul dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000430f78 : fmul dword ptr [rbx - 1] ; call rbx
0x000000000041aea8 : fmul dword ptr [rdi] ; wait ; ror dword ptr [rdi], -0x6c ; ret 0xca20
0x000000000042e35c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000406ebd : fsubr st(1) ; ret
0x0000000000401d89 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000425169 : hlt ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x00000000004019c0 : hlt ; pop rbp ; mov edi, 0x6322b8 ; jmp rax
0x000000000042508f : hlt ; pop rbp ; ret
0x000000000041357c : idiv edi ; call rax
0x0000000000413744 : idiv edi ; dec dword ptr [rax + 0x39] ; ror dword ptr [rdi], -0x7c ; ret 0
0x00000000004041bb : in al, dx ; pop rbp ; ret
0x00000000004035a3 : in eax, -0x50 ; add byte ptr [rcx + rax], ah ; movzx eax, al ; pop rbp ; ret
0x00000000004108e3 : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x0000000000403134 : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x000000000040d86e : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000406676 : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xff81
0x000000000042fabf : inc dword ptr [rax] ; adc dword ptr [rax], eax ; add byte ptr [rax], al ; sub edi, esi ; jmp qword ptr [rax]
0x000000000040cf53 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000040448f : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x000000000040e0aa : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000409f4f : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x0000000000401c44 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x0000000000424018 : inc dword ptr [rcx + 0x41f9] ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x0000000000424a0e : inc dword ptr [rcx + 0x5af9] ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x00000000004240ce : inc dword ptr [rcx + 0x5af9] ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x000000000042faef : inc eax ; adc dword ptr [rax], eax ; add al, dh ; xor al, 0xfffffffffffffffe ; jmp rax
0x00000000004120c8 : int 0x80
0x00000000004019b3 : ja 0x4019ba ; pop rbp ; ret
0x00000000004019bf : je 0x4019bd ; pop rbp ; mov edi, 0x6322b8 ; jmp rax
0x000000000043004c : je 0x430059 ; add byte ptr [rax], al ; xor byte ptr [rdi - 3], 0xff ; ret
0x00000000004035bb : jge 0x4035b8 ; pop rbp ; ret
0x00000000004035c6 : jge 0x4035c7 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040e55a : jge 0x40e55d ; mov dword ptr [rdi], 0 ; pop rbp ; ret
0x00000000004108e6 : jge 0x4108e3 ; pop rbp ; ret
0x00000000004154d3 : jge 0x415491 ; call 0x4016f4
0x0000000000430d54 : jl 0x430d6d ; add byte ptr [rax], al ; call 0xffffffffd1430c99
0x000000000040157b : jmp 0x401517
0x000000000040f393 : jmp 0x40fbdf
0x0000000000411662 : jmp 0x411aea
0x0000000000423736 : jmp 0x41f99e
0x000000000042373b : jmp 0x41fa29
0x0000000000423a16 : jmp 0x4216e0
0x000000000041fbc2 : jmp 0x423746
0x000000000042de8e : jmp 0x42a0c8
0x000000000042dea7 : jmp 0x42a184
0x000000000042f80f : jmp qword ptr [rax]
0x0000000000416365 : jmp qword ptr [rbx]
0x00000000004031cc : jmp qword ptr [rcx]
0x00000000004211fa : jmp qword ptr [rdi]
0x00000000004019c7 : jmp rax
0x0000000000406ffb : jmp rcx
0x0000000000401a07 : jmp rdx
0x0000000000430033 : jmp rsi
0x000000000042fd23 : jmp rsp
0x00000000004019f0 : jne 0x4019f7 ; pop rbp ; ret
0x0000000000415a9e : jne 0x415a6e ; mov rdx, qword ptr [rbp - 0x28] ; call rax
0x0000000000401501 : jnp 0x40150d ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000040dab4 : jo 0x40db15 ; ret
0x000000000040fbd6 : jo 0x40fc37 ; ret
0x0000000000415d69 : jo 0x415dca ; ret
0x000000000042f985 : jrcxz 0x42f986 ; call qword ptr [rax]
0x000000000040c71f : js 0x40c728 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040cb40 : js 0x40cba0 ; pop rbp ; ret
0x00000000004044bc : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000413e80 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000404876 : lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x00000000004044bb : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000404875 : lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000042de8a : lodsd eax, dword ptr [rsi] ; sar edi, -1 ; jmp 0x42a0cc
0x000000000042f975 : loop 0x42f976 ; call rax
0x000000000042519b : loope 0x4251a8 ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404fca : loopne 0x405030 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040cf7f : loopne 0x40cfd0 ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040cf7e : loopne 0x40cfd1 ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000412f95 : loopne 0x412fe5 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000412f94 : loopne 0x412fe6 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000425b02 : loopne 0x425b0a ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000427bb0 : loopne 0x427c16 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042f80c : loopne 0x42f84e ; std ; jmp qword ptr [rax]
0x0000000000430581 : loopne 0x430582 ; call rbx
0x000000000041068e : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000041210e : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004035a4 : mov al, 0 ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042fbe8 : mov al, 0x15 ; add byte ptr [rax], al ; and byte ptr [rbp - 1], cl ; call rax
0x0000000000430030 : mov al, 0x60 ; std ; jmp rsi
0x000000000042f930 : mov al, 0xa ; add byte ptr [rax], al ; xor dh, bl ; std ; call rax
0x000000000042f970 : mov al, 0xb ; add byte ptr [rax], al ; and dl, 0xfd ; call rax
0x0000000000404046 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000424d74 : mov al, byte ptr [rbp - 6] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401fef : mov al, ch ; wait ; ret
0x0000000000411165 : mov bh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x00000000004045f1 : mov byte ptr [0x632328], al ; pop rbp ; ret
0x0000000000404362 : mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x000000000042fe68 : mov byte ptr [rcx - 3], al ; jmp qword ptr [rdi]
0x00000000004211f1 : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; jmp qword ptr [rdi]
0x0000000000405108 : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret
0x000000000040b4bc : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x0000000000409cce : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x000000000040cca6 : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 1
0x0000000000405694 : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 9
0x0000000000401a23 : mov byte ptr [rip + 0x2308ee], 1 ; ret
0x00000000004041b7 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x00000000004035a9 : mov dh, -0x40 ; pop rbp ; ret
0x00000000004045cd : mov dword ptr [0x632320], edi ; pop rbp ; ret
0x000000000042dea5 : mov dword ptr [rax], ecx ; jmp 0x42a186
0x0000000000408b0a : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000408c58 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004058f6 : mov dword ptr [rbp - 0x140], ecx ; call r8
0x000000000042546c : mov dword ptr [rbp - 0x18], eax ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000401f34 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000401d87 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000425167 : mov dword ptr [rbp - 0xc], eax ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000401db5 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004035c5 : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004035ba : mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x00000000004083eb : mov dword ptr [rcx], eax ; mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x000000000040e55c : mov dword ptr [rdi], 0 ; pop rbp ; ret
0x0000000000414282 : mov eax, 0x5b000001 ; pop rbp ; ret
0x000000000040cb3c : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x00000000004129d5 : mov eax, 0xf0658d48 ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004109d0 : mov eax, 0xffffffff ; mov rsp, rbp ; pop rbp ; ret
0x0000000000404873 : mov eax, dword ptr [rax] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000416bd1 : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000408a38 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004078fb : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004053e4 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000416bce : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000408a35 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040d6ea : mov eax, dword ptr [rbp - 0x10] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004052d3 : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000408dc4 : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000041240f : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404bb2 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000408b04 : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040dcb4 : mov eax, dword ptr [rbp - 0x18] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000425470 : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000412f93 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040cf7d : mov eax, dword ptr [rbp - 0x20] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x00000000004083ed : mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x00000000004169e8 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040ec96 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000408c5a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000413b72 : mov eax, dword ptr [rbp - 0x30] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040e538 : mov eax, dword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040cb3a : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000041068c : mov eax, dword ptr [rbp - 0x4c] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000042508d : mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x000000000040fbd0 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000414512 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000415d63 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000407877 : mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004035c9 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004108cc : mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000410def : mov eax, edi ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040400f : mov eax, esi ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000430131 : mov ebp, edi ; call rbx
0x0000000000401a4b : mov ebp, esp ; call rax
0x00000000004019b1 : mov ebp, esp ; ja 0x4019bc ; pop rbp ; ret
0x00000000004108e2 : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000406ff4 : mov ecx, dword ptr [rax*8 + 0x42ea80] ; jmp rcx
0x0000000000409487 : mov ecx, dword ptr [rax*8 + 0x42eb00] ; jmp rcx
0x0000000000409fa1 : mov ecx, dword ptr [rax*8 + 0x42eb48] ; jmp rcx
0x000000000040eb40 : mov ecx, dword ptr [rax*8 + 0x42f008] ; jmp rcx
0x000000000040f321 : mov ecx, dword ptr [rax*8 + 0x42f030] ; jmp rcx
0x000000000040fd1a : mov ecx, dword ptr [rax*8 + 0x42f058] ; jmp rcx
0x0000000000411592 : mov ecx, dword ptr [rax*8 + 0x42f180] ; jmp rcx
0x000000000041e0df : mov ecx, dword ptr [rax*8 + 0x42f530] ; jmp rcx
0x000000000041903d : mov ecx, dword ptr [rax*8 + 0x42f5b8] ; jmp rcx
0x0000000000425f1c : mov ecx, dword ptr [rax*8 + 0x42f5e0] ; jmp rcx
0x000000000042bebc : mov ecx, dword ptr [rax*8 + 0x42f6b8] ; jmp rcx
0x0000000000408b07 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004083e8 : mov ecx, dword ptr [rbp - 0x20] ; mov dword ptr [rcx], eax ; mov eax, dword ptr [rbp - 0x24] ; pop rbp ; ret
0x000000000042f6b9 : mov edi, 0x42 ; add byte ptr [rax], al ; ret
0x0000000000401a45 : mov edi, 0x631e20 ; mov rbp, rsp ; call rax
0x00000000004019c2 : mov edi, 0x6322b8 ; jmp rax
0x0000000000401a02 : mov edi, 0x6322b8 ; jmp rdx
0x0000000000423a17 : mov edi, 0xe9ffffdc ; ret
0x00000000004156ed : mov edi, 0xf00fa80 ; xchg eax, ebp ; ret 0x348b
0x00000000004154d2 : mov edi, dword ptr [rbp - 0x48] ; call 0x4016f5
0x00000000004101de : mov edi, dword ptr [rdx + rcx*8] ; mov rdx, qword ptr [rbp - 0x20] ; call rax
0x00000000004154c3 : mov edi, eax ; mov rdx, rcx ; call 0x4017a7
0x000000000042e357 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000042e356 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x00000000004101e2 : mov edx, dword ptr [rbp - 0x20] ; call rax
0x0000000000415aa1 : mov edx, dword ptr [rbp - 0x28] ; call rax
0x00000000004154c6 : mov edx, ecx ; call 0x4017a4
0x000000000042f719 : mov esi, 0x42 ; add byte ptr [rax], al ; push rdi ; ret
0x000000000042f741 : mov esi, 0x42 ; add byte ptr [rax], al ; ret
0x0000000000415a9d : mov esi, dword ptr [rbp - 0x38] ; mov rdx, qword ptr [rbp - 0x28] ; call rax
0x0000000000401a00 : mov esi, eax ; mov edi, 0x6322b8 ; jmp rdx
0x00000000004041ba : mov esp, ebp ; pop rbp ; ret
0x00000000004045cc : mov qword ptr [0x632320], rdi ; pop rbp ; ret
0x000000000042dea4 : mov qword ptr [rax], rcx ; jmp 0x42a187
0x000000000042546b : mov qword ptr [rbp - 0x18], rax ; mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004035c4 : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004035b9 : mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000041068d : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000401fee : mov r8b, r13b ; wait ; ret
0x000000000040cb3b : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000404872 : mov rax, qword ptr [rax] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x00000000004078fa : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004053e3 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000408a34 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040d6e9 : mov rax, qword ptr [rbp - 0x10] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004052d2 : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000041240e : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000404bb1 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040dcb3 : mov rax, qword ptr [rbp - 0x18] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042546f : mov rax, qword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000412f92 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040e537 : mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000414511 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000415d62 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004035c8 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000401a4a : mov rbp, rsp ; call rax
0x00000000004019b0 : mov rbp, rsp ; ja 0x4019bd ; pop rbp ; ret
0x00000000004108e1 : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000406ff3 : mov rcx, qword ptr [rax*8 + 0x42ea80] ; jmp rcx
0x0000000000409486 : mov rcx, qword ptr [rax*8 + 0x42eb00] ; jmp rcx
0x0000000000409fa0 : mov rcx, qword ptr [rax*8 + 0x42eb48] ; jmp rcx
0x000000000040eb3f : mov rcx, qword ptr [rax*8 + 0x42f008] ; jmp rcx
0x000000000040f320 : mov rcx, qword ptr [rax*8 + 0x42f030] ; jmp rcx
0x000000000040fd19 : mov rcx, qword ptr [rax*8 + 0x42f058] ; jmp rcx
0x0000000000411591 : mov rcx, qword ptr [rax*8 + 0x42f180] ; jmp rcx
0x000000000041e0de : mov rcx, qword ptr [rax*8 + 0x42f530] ; jmp rcx
0x000000000041903c : mov rcx, qword ptr [rax*8 + 0x42f5b8] ; jmp rcx
0x0000000000425f1b : mov rcx, qword ptr [rax*8 + 0x42f5e0] ; jmp rcx
0x000000000042bebb : mov rcx, qword ptr [rax*8 + 0x42f6b8] ; jmp rcx
0x00000000004101dd : mov rdi, qword ptr [rdx + rcx*8] ; mov rdx, qword ptr [rbp - 0x20] ; call rax
0x00000000004154c2 : mov rdi, rax ; mov rdx, rcx ; call 0x4017a8
0x00000000004101e1 : mov rdx, qword ptr [rbp - 0x20] ; call rax
0x0000000000415aa0 : mov rdx, qword ptr [rbp - 0x28] ; call rax
0x00000000004154c5 : mov rdx, rcx ; call 0x4017a5
0x0000000000415a9c : mov rsi, qword ptr [rbp - 0x38] ; mov rdx, qword ptr [rbp - 0x28] ; call rax
0x00000000004019ff : mov rsi, rax ; mov edi, 0x6322b8 ; jmp rdx
0x00000000004041b9 : mov rsp, rbp ; pop rbp ; ret
0x0000000000430964 : mov word ptr [rax + rax], cs ; add byte ptr [rax], cl ; sbb al, -2 ; jmp rcx
0x000000000042fe64 : mov word ptr [rcx], es ; add byte ptr [rax], al ; mov byte ptr [rcx - 3], al ; jmp qword ptr [rdi]
0x000000000043057c : movsb byte ptr [rdi], byte ptr [rsi] ; or byte ptr [rax], al ; add al, al ; loopne 0x430587 ; call rbx
0x000000000042f6b8 : movsd dword ptr [rdi], dword ptr [rsi] ; mov edi, 0x42 ; add byte ptr [rax], al ; ret
0x000000000042378c : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000423dfe : movsx eax, cl ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004041b6 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004035a8 : movzx eax, al ; pop rbp ; ret
0x0000000000411164 : movzx eax, ax ; mov rsp, rbp ; pop rbp ; ret
0x000000000041a945 : nop ; and al, 0x63 ; add byte ptr [rbp - 0x77], al ; ret
0x0000000000404171 : nop ; and al, 0x63 ; add byte ptr [rbp - 0x77], al ; ret 0x8141
0x00000000004112bf : nop ; and al, 0x63 ; add byte ptr [rcx - 0x77], al ; ret
0x00000000004079af : nop ; and al, 0x63 ; add byte ptr [rcx - 0x77], al ; ret 0x8141
0x000000000042f83c : nop ; std ; jmp rax
0x000000000042e378 : nop dword ptr [rax + rax] ; ret
0x0000000000430925 : or al, 0 ; add byte ptr [rax], bl ; sbb edi, esi ; call rsp
0x0000000000430965 : or al, 0 ; add byte ptr [rax], cl ; sbb al, -2 ; jmp rcx
0x000000000040416f : or al, 0x25 ; nop ; and al, 0x63 ; add byte ptr [rbp - 0x77], al ; ret 0x8141
0x000000000041f109 : or al, 0x25 ; nop ; and al, 0x63 ; add byte ptr [rcx - 0x77], al ; ret
0x00000000004079ad : or al, 0x25 ; nop ; and al, 0x63 ; add byte ptr [rcx - 0x77], al ; ret 0x8141
0x000000000042f941 : or al, byte ptr [rax] ; add byte ptr [rax - 0x21], ah ; std ; call qword ptr [rax]
0x000000000042f931 : or al, byte ptr [rax] ; add byte ptr [rax], dh ; fdivp st(5) ; call rax
0x000000000040cd09 : or byte ptr [r15], cl ; xchg eax, ebp ; ret 0x348b
0x000000000040b0d3 : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000429acc : or byte ptr [r8 - 0x75], cl ; adc byte ptr [rax - 0x7f], cl ; ret 0x10
0x000000000042d70b : or byte ptr [r8 - 0x75], cl ; adc byte ptr [rax - 0x7f], cl ; ret 0x20
0x000000000040f394 : or byte ptr [r8], al ; add al, ch ; ret
0x000000000040b0d4 : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000429acd : or byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7f], cl ; ret 0x10
0x000000000042d70c : or byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7f], cl ; ret 0x20
0x0000000000426d68 : or byte ptr [rax - 0x75], cl ; push rcx ; or byte ptr [rax - 0x7d], cl ; ret 0x480f
0x0000000000426d6c : or byte ptr [rax - 0x7d], cl ; ret 0x480f
0x000000000043057d : or byte ptr [rax], al ; add al, al ; loopne 0x430586 ; call rbx
0x000000000040f395 : or byte ptr [rax], al ; add al, ch ; ret
0x0000000000413912 : or byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000401a26 : or byte ptr [rbx], ah ; add byte ptr [rcx], al ; ret
0x00000000004241fc : or byte ptr [rcx + 0x2038], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x000000000042463c : or byte ptr [rcx + 0x2138], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x0000000000411ebd : or byte ptr [rcx + 0x28f9], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x000000000040671c : or byte ptr [rcx + 0x2bf9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x000000000040749d : or byte ptr [rcx + 0x2cf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x0000000000407436 : or byte ptr [rcx + 0x2df9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x00000000004067cd : or byte ptr [rcx + 0x2df9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x000000000041597d : or byte ptr [rcx + 0x2ef9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x0000000000415798 : or byte ptr [rcx + 0x2ff9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x0000000000423f4c : or byte ptr [rcx + 0x3038], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000040645c : or byte ptr [rcx + 0x38f9], al ; add byte ptr [rdi], cl ; pushfq ; ret 0x5588
0x0000000000406d0d : or byte ptr [rcx + 0x38f9], al ; add byte ptr [rdi], cl ; pushfq ; ret 0x9588
0x00000000004073a4 : or byte ptr [rcx + 0x3df9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x000000000042453c : or byte ptr [rcx + 0x6138], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x0000000000406d81 : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x0000000000425c97 : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000040cd0a : or byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x0000000000430e98 : or byte ptr [rdx - 1], al ; call rsp
0x0000000000430968 : or byte ptr [rsi + rdi*8], bl ; jmp rcx
0x000000000040e07d : or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x000000000040e11f : or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x000000000042dea6 : or cl, ch ; salc ; ret 0xffff
0x000000000042f901 : or dword ptr [rax], eax ; add byte ptr [rax], ah ; pushfq ; std ; call qword ptr [rax]
0x0000000000412c5f : or eax, 0x48fffff9 ; add esp, 0x30 ; pop rbp ; ret
0x0000000000408f8d : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042f981 : or eax, dword ptr [rax] ; add byte ptr [rax], dh ; jrcxz 0x42f98a ; call qword ptr [rax]
0x0000000000401a25 : out dx, al ; or byte ptr [rbx], ah ; add byte ptr [rcx], al ; ret
0x00000000004034a8 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042e36c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000404fcc : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004034aa : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042e36e : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004034ac : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042e370 : pop r14 ; pop r15 ; ret
0x00000000004044c0 : pop r14 ; pop rbp ; ret
0x00000000004034ae : pop r15 ; pop rbp ; ret
0x000000000042e372 : pop r15 ; ret
0x0000000000423a7d : pop rax ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; xor cl, ch ; jmp rax
0x0000000000401a22 : pop rbp ; mov byte ptr [rip + 0x2308ee], 1 ; ret
0x00000000004019c1 : pop rbp ; mov edi, 0x6322b8 ; jmp rax
0x00000000004019fe : pop rbp ; mov rsi, rax ; mov edi, 0x6322b8 ; jmp rdx
0x000000000042e36b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004034ab : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042e36f : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004019b5 : pop rbp ; ret
0x0000000000404fcb : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403eb4 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004044bf : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000404879 : pop rbx ; pop rbp ; ret
0x00000000004034af : pop rdi ; pop rbp ; ret
0x000000000042e373 : pop rdi ; ret
0x0000000000424a11 : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x00000000004240d1 : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x00000000004034ad : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000042e371 : pop rsi ; pop r15 ; ret
0x00000000004044c1 : pop rsi ; pop rbp ; ret
0x00000000004034a9 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042e36d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000404fcd : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000423f54 : popfq ; ret 0x348b
0x0000000000424020 : popfq ; ret 0xc8b
0x000000000042f92f : push qword ptr [rax + 0x3000000a] ; fdivp st(5) ; call rax
0x000000000042f96f : push qword ptr [rax - 0x7ffffff5] ; loop 0x42f97c ; call rax
0x0000000000415463 : push rax ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000042f93f : push rax ; or al, byte ptr [rax] ; add byte ptr [rax - 0x21], ah ; std ; call qword ptr [rax]
0x000000000042f97f : push rax ; or eax, dword ptr [rax] ; add byte ptr [rax], dh ; jrcxz 0x42f98c ; call qword ptr [rax]
0x000000000040d78e : push rax ; pop rbp ; ret
0x000000000042f87c : push rax ; push rsp ; std ; jmp rax
0x0000000000431060 : push rax ; sar edi, cl ; call qword ptr [rax]
0x000000000042f84c : push rax ; std ; jmp qword ptr [rax]
0x000000000040b0d7 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000401a44 : push rbp ; mov edi, 0x631e20 ; mov rbp, rsp ; call rax
0x00000000004156ec : push rbp ; mov edi, 0xf00fa80 ; xchg eax, ebp ; ret 0x348b
0x00000000004108e0 : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000413576 : push rbp ; ror byte ptr [rax - 0x39], 1 ; test ebp, eax ; idiv edi ; call rax
0x000000000040ca6e : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000042fff1 : push rbx ; std ; call qword ptr [rax]
0x0000000000426d6b : push rcx ; or byte ptr [rax - 0x7d], cl ; ret 0x480f
0x000000000042f700 : push rdi ; ret
0x000000000043012c : push rsp ; add al, 0 ; add byte ptr [rax], dl ; mov ebp, edi ; call rbx
0x000000000042f87d : push rsp ; std ; jmp rax
0x0000000000404361 : pushfq ; mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x0000000000401eb2 : pushfq ; ret
0x000000000040f055 : pushfq ; ret 0x348b
0x0000000000406464 : pushfq ; ret 0x5588
0x0000000000409f60 : pushfq ; ret 0x844
0x0000000000402c20 : pushfq ; ret 0x845
0x0000000000406d15 : pushfq ; ret 0x9588
0x000000000041ab65 : pushfq ; ret 0xc8b
0x000000000040deaa : pushfq ; ret 0xd108
0x000000000042f905 : pushfq ; std ; call qword ptr [rax]
0x000000000042faf0 : rcl byte ptr [rcx], 0 ; add al, dh ; xor al, 0xfffffffffffffffe ; jmp rax
0x0000000000401509 : ret
0x00000000004058a7 : ret 0
0x0000000000426c73 : ret 0x10
0x0000000000401a9a : ret 0x125
0x000000000040b4c5 : ret 0x13
0x000000000042bb22 : ret 0x1689
0x000000000041d27b : ret 0x1fe8
0x0000000000427b90 : ret 0x20
0x0000000000401782 : ret 0x2309
0x0000000000401582 : ret 0x230a
0x0000000000409cd7 : ret 0x2a
0x0000000000420b64 : ret 0x2d
0x0000000000409db8 : ret 0x348b
0x000000000040314d : ret 0x4001
0x000000000042ec60 : ret 0x40ab
0x000000000042f568 : ret 0x41f1
0x000000000041166b : ret 0x42f2
0x000000000040dca2 : ret 0x4801
0x0000000000426d6f : ret 0x480f
0x0000000000403725 : ret 0x48b
0x000000000040439b : ret 0x48e0
0x0000000000402eaf : ret 0x48f0
0x000000000040ddf7 : ret 0x4cc0
0x0000000000402ee1 : ret 0x4cf0
0x000000000041bbad : ret 0x50
0x0000000000406465 : ret 0x5588
0x0000000000405964 : ret 0x5589
0x000000000040b0f0 : ret 0x5ae8
0x0000000000410f8b : ret 0x6601
0x000000000040e080 : ret 0x7ae8
0x0000000000413c45 : ret 0x8041
0x0000000000401ea8 : ret 0x8141
0x0000000000409f61 : ret 0x844
0x0000000000402c21 : ret 0x845
0x0000000000401eb9 : ret 0x8801
0x00000000004044a8 : ret 0x8901
0x0000000000412b15 : ret 0x8948
0x000000000040b44c : ret 0x89a5
0x0000000000404ccf : ret 0x8b44
0x000000000040b0db : ret 0x8b48
0x000000000041a92a : ret 0x8b4c
0x0000000000406d16 : ret 0x9588
0x0000000000422b7d : ret 0x9de8
0x0000000000401c4b : ret 0xa3d
0x000000000041d2f2 : ret 0xa8e8
0x00000000004148de : ret 0xb
0x00000000004022c9 : ret 0xb0
0x00000000004019e5 : ret 0xc148
0x000000000040668a : ret 0xc2f6
0x0000000000406725 : ret 0xc8b
0x000000000041aeae : ret 0xca20
0x000000000040deab : ret 0xd108
0x000000000040e49c : ret 0xd284
0x000000000040e122 : ret 0xd8e8
0x0000000000425ca0 : ret 0xe280
0x000000000041cdb2 : ret 0xe8e8
0x0000000000401a91 : ret 0xea81
0x000000000040c9bc : ret 0xee8
0x000000000042d23e : ret 0xf
0x0000000000401c59 : ret 0xf01
0x000000000041e790 : ret 0xf981
0x000000000041eaba : ret 0xfe2b
0x0000000000407979 : ret 0xff70
0x000000000040667d : ret 0xff81
0x00000000004154ca : ret 0xfffe
0x000000000041c00c : ret 0xffff
0x0000000000404eb0 : ret 1
0x0000000000421460 : ret 2
0x0000000000426b8c : ret 4
0x000000000040ca72 : ret 8
0x000000000040569d : ret 9
0x0000000000403a1c : rol byte ptr [rbp + 0xf], 0x44 ; ret
0x000000000042f878 : rol byte ptr [rdi], 0 ; add byte ptr [rax + 0x54], dl ; std ; jmp rax
0x00000000004120c3 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x00000000004019ec : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4019fb ; pop rbp ; ret
0x0000000000413577 : ror byte ptr [rax - 0x39], 1 ; test ebp, eax ; idiv edi ; call rax
0x00000000004041b8 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x00000000004120c4 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x000000000040ca6f : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000421130 : ror dword ptr [rdi], -0x6b ; ret 0x348b
0x000000000041aeab : ror dword ptr [rdi], -0x6c ; ret 0xca20
0x0000000000413749 : ror dword ptr [rdi], -0x7c ; ret 0
0x0000000000424a16 : sahf ; ret 0x5588
0x00000000004240d6 : sahf ; ret 0xc8b
0x0000000000409f64 : sal dh, cl ; ret 0x8901
0x000000000042debb : salc ; ret
0x000000000042dea8 : salc ; ret 0xffff
0x00000000004019ee : sar eax, 1 ; jne 0x4019f9 ; pop rbp ; ret
0x000000000042de8b : sar edi, -1 ; jmp 0x42a0cb
0x0000000000431061 : sar edi, cl ; call qword ptr [rax]
0x00000000004019ed : sar rax, 1 ; jne 0x4019fa ; pop rbp ; ret
0x0000000000430969 : sbb al, -2 ; jmp rcx
0x00000000004303f4 : sbb al, 7 ; add byte ptr [rax], al ; call 0x184301db
0x0000000000409200 : sbb cl, byte ptr [rcx - 0x7f] ; ret
0x0000000000416d87 : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000430929 : sbb edi, esi ; call rsp
0x0000000000403a50 : scasd eax, dword ptr [rdi] ; ret
0x0000000000401a99 : scasd eax, dword ptr [rdi] ; ret 0x125
0x0000000000404181 : scasd eax, dword ptr [rdi] ; ret 0x8141
0x0000000000430580 : shl al, -3 ; call rbx
0x000000000042401a : stc ; add byte ptr [r8], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x000000000041597f : stc ; add byte ptr cs:[rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x00000000004073a6 : stc ; cmp eax, 0xf000000 ; xchg eax, esp ; ret 0xc8b
0x0000000000424a10 : stc ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x00000000004240d0 : stc ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x0000000000407438 : stc ; sub eax, 0xf000000 ; xchg eax, esp ; ret 0x9588
0x00000000004067cf : stc ; sub eax, 0xf000000 ; xchg eax, esp ; ret 0xc8b
0x000000000042f906 : std ; call qword ptr [rax]
0x00000000004303fa : std ; call qword ptr [rdi]
0x000000000042ff0a : std ; call qword ptr [rsi]
0x000000000042f936 : std ; call rax
0x0000000000430132 : std ; call rbx
0x000000000042f80e : std ; jmp qword ptr [rax]
0x000000000042fe6a : std ; jmp qword ptr [rdi]
0x000000000042f83e : std ; jmp rax
0x0000000000430032 : std ; jmp rsi
0x000000000042fd22 : std ; jmp rsp
0x000000000042f92e : std ; push qword ptr [rax + 0x3000000a] ; fdivp st(5) ; call rax
0x000000000042f96e : std ; push qword ptr [rax - 0x7ffffff5] ; loop 0x42f97d ; call rax
0x000000000042f93e : std ; push rax ; or al, byte ptr [rax] ; add byte ptr [rax - 0x21], ah ; std ; call qword ptr [rax]
0x000000000042f97e : std ; push rax ; or eax, dword ptr [rax] ; add byte ptr [rax], dh ; jrcxz 0x42f98d ; call qword ptr [rax]
0x0000000000404048 : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000407439 : sub eax, 0xf000000 ; xchg eax, esp ; ret 0x9588
0x00000000004067d0 : sub eax, 0xf000000 ; xchg eax, esp ; ret 0xc8b
0x000000000042fac5 : sub edi, esi ; jmp qword ptr [rax]
0x000000000042e3d1 : sub esp, 8 ; add rsp, 8 ; ret
0x000000000042e3d0 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000042e37a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000043105c : test byte ptr [rbx], dl ; add byte ptr [rax], al ; push rax ; sar edi, cl ; call qword ptr [rax]
0x00000000004211f4 : test dword ptr [rip - 0x17000000], eax ; jmp qword ptr [rdi]
0x000000000040510b : test dword ptr [rip - 0x17000000], eax ; ret
0x000000000040b4bf : test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x0000000000409cd1 : test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x0000000000420b5e : test dword ptr [rip - 0x17000000], eax ; ret 0x2d
0x00000000004148d8 : test dword ptr [rip - 0x17000000], eax ; ret 0xb
0x000000000042d238 : test dword ptr [rip - 0x17000000], eax ; ret 0xf
0x000000000040adbc : test dword ptr [rip - 0x17000000], eax ; ret 1
0x0000000000405697 : test dword ptr [rip - 0x17000000], eax ; ret 9
0x0000000000412db3 : test eax, 0x48fffffc ; add esp, 0x10 ; pop rbp ; ret
0x000000000041357a : test ebp, eax ; idiv edi ; call rax
0x0000000000401ff1 : wait ; ret
0x000000000041aeaa : wait ; ror dword ptr [rdi], -0x6c ; ret 0xca20
0x000000000040cd0c : xchg eax, ebp ; ret 0x348b
0x0000000000413c44 : xchg eax, ebp ; ret 0x8041
0x0000000000412792 : xchg eax, ebp ; ret 0x8b44
0x0000000000406d89 : xchg eax, ebp ; ret 0xc8b
0x0000000000425c9f : xchg eax, ebp ; ret 0xe280
0x00000000004151fb : xchg eax, ecx ; ret
0x000000000041c666 : xchg eax, edi ; ret 0x8b44
0x0000000000409db7 : xchg eax, esi ; ret 0x348b
0x0000000000402f35 : xchg eax, esp ; ret
0x0000000000416e2d : xchg eax, esp ; ret 0x348b
0x0000000000403724 : xchg eax, esp ; ret 0x48b
0x0000000000401ea7 : xchg eax, esp ; ret 0x8141
0x0000000000404cce : xchg eax, esp ; ret 0x8b44
0x000000000040743e : xchg eax, esp ; ret 0x9588
0x0000000000401c4a : xchg eax, esp ; ret 0xa3d
0x0000000000406724 : xchg eax, esp ; ret 0xc8b
0x000000000041aead : xchg eax, esp ; ret 0xca20
0x000000000040e49b : xchg eax, esp ; ret 0xd284
0x000000000041e78f : xchg eax, esp ; ret 0xf981
0x000000000040667c : xchg eax, esp ; ret 0xff81
0x00000000004303f9 : xlatb ; std ; call qword ptr [rdi]
0x000000000042faf5 : xor al, 0xfffffffffffffffe ; jmp rax
0x000000000042f984 : xor bl, ah ; std ; call qword ptr [rax]
0x000000000040e077 : xor byte ptr [rax - 0x75], cl ; add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x000000000040e119 : xor byte ptr [rax - 0x75], cl ; add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x0000000000413911 : xor byte ptr [rax], cl ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000430050 : xor byte ptr [rdi - 3], 0xff ; ret
0x0000000000423a83 : xor cl, ch ; jmp rax
0x000000000042f934 : xor dh, bl ; std ; call rax
0x00000000004031c6 : xor dword ptr [rcx - 0xa], eax ; jmp qword ptr [rcx]
0x0000000000408c56 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
