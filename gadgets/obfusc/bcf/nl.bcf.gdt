0x0000000000402793 : adc al, 0x25 ; in al, dx ; js 0x402801 ; add byte ptr [rcx - 0x77], al ; ret 0x8141
0x0000000000402a90 : adc al, 0x25 ; in al, dx ; js 0x402afe ; add byte ptr [rcx - 0x77], al ; ret 0x8141
0x000000000040c0ed : adc al, 0x25 ; in al, dx ; js 0x40c15b ; add byte ptr [rcx - 0x77], al ; ret
0x000000000040cbe1 : adc al, 0x25 ; in al, dx ; js 0x40cc4f ; add byte ptr [rcx - 0x77], al ; ret
0x0000000000415d0d : adc byte ptr [rax], al ; add byte ptr [rbp + rbx*8 - 1], dh ; jmp rsp
0x0000000000416161 : add al, -1 ; call rbx
0x0000000000415edf : add al, ah ; out -2, eax ; call qword ptr [rdi]
0x000000000041601d : add al, byte ptr [rax] ; add al, dh ; idiv dh ; call qword ptr [rax]
0x000000000040fead : add al, byte ptr [rax] ; add cl, ch ; ret
0x00000000004053e5 : add al, ch ; cmc ; ret
0x00000000004053fe : add al, ch ; insb byte ptr [rdi], dx ; ret 0
0x0000000000416717 : add al, ch ; jne 0x41671e ; call rcx
0x0000000000405376 : add al, ch ; push rsp ; ret 0xffff
0x0000000000403517 : add al, ch ; ret
0x000000000040f158 : add al, ch ; ret 0xff24
0x000000000041601f : add al, dh ; idiv dh ; call qword ptr [rax]
0x00000000004153c7 : add bl, cl ; ret
0x000000000041417f : add bl, dh ; ret
0x0000000000403512 : add byte ptr [r11 - 0x17ff4fd0], cl ; ret
0x000000000040bfd8 : add byte ptr [r8 - 0x73], cl ; or al, 0x25 ; ret 0x4153
0x0000000000412fab : add byte ptr [r8], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x000000000040bfd9 : add byte ptr [rax - 0x73], cl ; or al, 0x25 ; ret 0x4153
0x000000000040cef0 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000410b62 : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004052cd : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x00000000004153c5 : add byte ptr [rax], al ; add bl, cl ; ret
0x000000000041417d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000410d18 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004052cb : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000041417b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004003d0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000004003d2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000414019 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x000000000041417c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004003d4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000041532c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x414a
0x0000000000405a45 : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x8141
0x000000000040b078 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000405075 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7378b], cl ; ret 0xb0
0x0000000000401b8b : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret
0x0000000000407adb : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x844
0x0000000000401d6b : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x000000000040c0fa : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x0000000000401fee : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x125
0x000000000041171f : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x0000000000401ffc : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000401b80 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x0000000000410326 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xf981
0x000000000040b018 : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x51], al ; ret
0x0000000000412ee0 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x0000000000412fac : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x0000000000402006 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret
0x000000000040ba26 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x00000000004139a2 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x0000000000413062 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x000000000041178c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret
0x0000000000401afb : add byte ptr [rax], al ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x125
0x000000000040ca77 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x000000000040d5be : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x0000000000411aa6 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x000000000040ccf1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x000000000040b3f0 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000413190 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x0000000000407ad1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x0000000000402f7a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x000000000040c017 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040ff40 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xfe81
0x000000000040552d : add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000409041 : add byte ptr [rax], al ; add cl, ch ; ret 0x13
0x0000000000407853 : add byte ptr [rax], al ; add cl, ch ; ret 0x2a
0x000000000041202a : add byte ptr [rax], al ; add cl, ch ; ret 0xb
0x000000000040893e : add byte ptr [rax], al ; add cl, ch ; ret 1
0x0000000000404bbb : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401ba5 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401d85 : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040147b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000416716 : add byte ptr [rax], al ; call 0xffffffffd2416697
0x0000000000416426 : add byte ptr [rax], al ; cmp byte ptr [rbx - 1], dl ; call qword ptr [rdi]
0x00000000004015f9 : add byte ptr [rax], al ; jmp 0x401499
0x0000000000406942 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000041401b : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x00000000004065b2 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000410d19 : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000416712 : add byte ptr [rax], al ; mov word ptr [rcx], cs ; add byte ptr [rax], al ; call 0xffffffffd241669b
0x0000000000415bd6 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; jb 0x415bdf ; jmp rsp
0x000000000040cf40 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040b079 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000412bb5 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040a2a1 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000415eda : add byte ptr [rax], al ; push rsp ; add dword ptr [rax], eax ; add al, ah ; out -2, eax ; call qword ptr [rdi]
0x00000000004159fe : add byte ptr [rax], al ; push rsp ; ret 0xfffe
0x000000000041417e : add byte ptr [rax], al ; ret
0x00000000004003d6 : add byte ptr [rax], al ; ret 0
0x000000000041532e : add byte ptr [rax], al ; ret 0x414a
0x0000000000416676 : add byte ptr [rax], al ; sub byte ptr [rbp - 1], ch ; jmp rcx
0x0000000000415b16 : add byte ptr [rax], al ; test byte ptr [rcx - 1], dl ; call rsp
0x000000000041601a : add byte ptr [rax], al ; xchg eax, esp ; add al, byte ptr [rax] ; add al, dh ; idiv dh ; call qword ptr [rax]
0x0000000000405a47 : add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x8141
0x0000000000415d0f : add byte ptr [rbp + rbx*8 - 1], dh ; jmp rsp
0x0000000000405a3d : add byte ptr [rbp - 0x77], al ; ret 0x8141
0x000000000040b07a : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000412bb6 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040a2a2 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000403513 : add byte ptr [rbx - 0x17ff4fd0], cl ; ret
0x0000000000405077 : add byte ptr [rbx - 0x76b7378b], cl ; ret 0xb0
0x00000000004153c1 : add byte ptr [rcx + 0xaf], ah ; add bl, cl ; ret
0x000000000040b3fc : add byte ptr [rcx + 0xf], al ; pushfq ; mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x0000000000401b8d : add byte ptr [rcx + 0xf], al ; pushfq ; ret
0x0000000000407add : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x844
0x0000000000401d6d : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x000000000040c0fc : add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x0000000000401ff0 : add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x125
0x0000000000411721 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x0000000000401ffe : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000401b82 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x0000000000410328 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xf981
0x000000000040b3ec : add byte ptr [rcx + 0xfe], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040bc28 : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000407acd : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x0000000000402f76 : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x0000000000415edb : add byte ptr [rcx + rax], dl ; add al, ah ; out -2, eax ; call qword ptr [rdi]
0x000000000040c0f2 : add byte ptr [rcx - 0x77], al ; ret
0x0000000000401fe6 : add byte ptr [rcx - 0x77], al ; ret 0x8141
0x0000000000401948 : add byte ptr [rcx], al ; ret
0x000000000040b01a : add byte ptr [rdi + rcx - 0x51], al ; ret
0x0000000000412ee2 : add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x0000000000412fae : add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x0000000000402008 : add byte ptr [rdi], cl ; pushfq ; ret
0x000000000040ba28 : add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x00000000004139a4 : add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x0000000000413064 : add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x000000000041178e : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret
0x0000000000401afd : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x125
0x000000000040ca79 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x000000000040d5c0 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x0000000000411aa8 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x000000000040ccf3 : add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x000000000040b3f2 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000413192 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x0000000000407ad3 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x0000000000402f7c : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x000000000040c019 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040ff42 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xfe81
0x000000000040452e : add byte ptr [rdx + 0x41], 0 ; jmp rcx
0x00000000004153c0 : add byte ptr gs:[rcx + 0xaf], ah ; add bl, cl ; ret
0x000000000040552f : add cl, ch ; ret
0x0000000000409043 : add cl, ch ; ret 0x13
0x0000000000407855 : add cl, ch ; ret 0x2a
0x000000000041202c : add cl, ch ; ret 0xb
0x0000000000408940 : add cl, ch ; ret 1
0x000000000040bbfa : add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x000000000040bc9c : add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x0000000000415edd : add dword ptr [rax], eax ; add al, ah ; out -2, eax ; call qword ptr [rdi]
0x0000000000412bb4 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040a2a0 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040432a : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004130c5 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000412e6d : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000403319 : add dword ptr [rdi], ecx ; pushfq ; ret 0x48b
0x0000000000405529 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret
0x000000000040903d : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x000000000040784f : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x0000000000412026 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0xb
0x000000000040893a : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 1
0x0000000000401944 : add eax, 0x2159ee ; add ebx, esi ; ret
0x000000000040552c : add eax, 0xe9000000 ; ret
0x0000000000409040 : add eax, 0xe9000000 ; ret 0x13
0x0000000000407852 : add eax, 0xe9000000 ; ret 0x2a
0x0000000000412029 : add eax, 0xe9000000 ; ret 0xb
0x000000000040893d : add eax, 0xe9000000 ; ret 1
0x000000000040190b : add eax, edx ; sar rax, 1 ; jne 0x40191c ; pop rbp ; ret
0x0000000000401949 : add ebx, esi ; ret
0x0000000000401c19 : add esp, 0x10 ; pop rbp ; ret
0x000000000040a29d : add esp, 0x178 ; pop rbx ; pop rbp ; ret
0x000000000040d0dc : add esp, 0x1a0 ; pop rbp ; ret
0x0000000000401ba8 : add esp, 0x20 ; pop rbp ; ret
0x0000000000406571 : add esp, 0x30 ; pop rbp ; ret
0x0000000000401d88 : add esp, 0x40 ; pop rbp ; ret
0x000000000040cc1f : add esp, 0x40 ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004051e9 : add esp, 0x50 ; pop rbp ; ret
0x000000000040b632 : add esp, 0x70 ; pop rbp ; ret
0x000000000040a6be : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040cf3c : add esp, 0xb0 ; pop rbp ; ret
0x0000000000410388 : add esp, 0xd0 ; pop rbp ; ret
0x000000000040147e : add esp, 8 ; ret
0x0000000000405375 : add r8b, bpl ; push rsp ; ret 0xffff
0x000000000040f157 : add r8b, bpl ; ret 0xff24
0x000000000040190a : add rax, rdx ; sar rax, 1 ; jne 0x40191d ; pop rbp ; ret
0x0000000000401c18 : add rsp, 0x10 ; pop rbp ; ret
0x000000000040a29c : add rsp, 0x178 ; pop rbx ; pop rbp ; ret
0x000000000040d0db : add rsp, 0x1a0 ; pop rbp ; ret
0x0000000000401ba7 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000406570 : add rsp, 0x30 ; pop rbp ; ret
0x0000000000401d87 : add rsp, 0x40 ; pop rbp ; ret
0x000000000040cc1e : add rsp, 0x40 ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004051e8 : add rsp, 0x50 ; pop rbp ; ret
0x000000000040b631 : add rsp, 0x70 ; pop rbp ; ret
0x000000000040a6bd : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040cf3b : add rsp, 0xb0 ; pop rbp ; ret
0x0000000000410387 : add rsp, 0xd0 ; pop rbp ; ret
0x000000000040147d : add rsp, 8 ; ret
0x00000000004130c4 : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000412e6c : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000410dba : and byte ptr [r15], cl ; xchg eax, esp ; ret 0x348b
0x0000000000410dbb : and byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x0000000000401947 : and dword ptr [rax], eax ; add ebx, esi ; ret
0x0000000000405372 : and eax, 0x414e5f ; call 0x4015d7
0x000000000040bd27 : and eax, 0x48ffffee ; add esp, 0x20 ; pop rbp ; ret
0x00000000004053fa : and eax, 0x617330 ; call 0x411677
0x00000000004052ff : and eax, 0x617780 ; pop rbp ; ret
0x0000000000405323 : and eax, 0x617788 ; pop rbp ; ret
0x0000000000405377 : call 0x4015d2
0x00000000004125a3 : call 0x401779
0x00000000004053ff : call 0x411672
0x0000000000416718 : call 0xffffffffd2416695
0x000000000040a539 : call 0xffffffffe9032e89
0x000000000040a538 : call 0xffffffffe9032e8a
0x000000000040fe24 : call 0xffffffffff413f85
0x0000000000414159 : call qword ptr [r12 + rbx*8]
0x0000000000416023 : call qword ptr [rax]
0x0000000000415ee3 : call qword ptr [rdi]
0x0000000000415fa3 : call qword ptr [rsi]
0x000000000041415a : call qword ptr [rsp + rbx*8]
0x000000000040196d : call rax
0x0000000000416163 : call rbx
0x000000000041671b : call rcx
0x00000000004159db : call rsp
0x0000000000404ac9 : clc ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000411c64 : clc ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040190f : clc ; jne 0x401918 ; pop rbp ; ret
0x0000000000405ac8 : clc ; pop rbx ; pop rbp ; ret
0x0000000000401c17 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004049ba : cld ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000410386 : cld ; add rsp, 0xd0 ; pop rbp ; ret
0x00000000004140f6 : cld ; mov dword ptr [rbp - 0xc], eax ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000413d06 : cli ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004053e7 : cmc ; ret
0x0000000000401fe1 : cmp al, 0x25 ; in al, dx ; js 0x40204f ; add byte ptr [rcx - 0x77], al ; ret 0x8141
0x0000000000405371 : cmp al, 0x25 ; pop rdi ; add r8b, bpl ; push rsp ; ret 0xffff
0x00000000004053f9 : cmp al, 0x25 ; xor byte ptr [rbx + 0x61], dh ; add al, ch ; insb byte ptr [rdi], dx ; ret 0
0x00000000004052fe : cmp al, 0x25 ; xor byte ptr [rdi + 0x61], 0 ; pop rbp ; ret
0x00000000004159fc : cmp al, 4 ; add byte ptr [rax], al ; push rsp ; ret 0xfffe
0x0000000000411149 : cmp al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000041318e : cmp byte ptr [rax], ah ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x0000000000412ede : cmp byte ptr [rax], dh ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x0000000000416428 : cmp byte ptr [rbx - 1], dl ; call qword ptr [rdi]
0x00000000004135ce : cmp byte ptr [rcx], ah ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000040d5bc : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x000000000040a9cd : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004018cd : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4018e0 ; pop rbp ; ret
0x000000000040a782 : dec byte ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x0000000000406c5f : dec byte ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret
0x0000000000405ac4 : dec dword ptr [rax - 0x73] ; clc ; pop rbx ; pop rbp ; ret
0x00000000004125a7 : dec dword ptr [rax - 0x73] ; xor al, 0x25 ; ret 0x4159
0x000000000040fe1f : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; call 0xffffffffff413f8a
0x000000000040c3c0 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; enter 0x4153, 0 ; jmp rcx
0x0000000000407005 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; ror byte ptr [rsi + 0x41], 0 ; jmp rcx
0x000000000040466c : dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000040c306 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000412924 : dec dword ptr [rax - 0x7f] ; ret 1
0x0000000000403be3 : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x0000000000402004 : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret
0x000000000040a5eb : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000040c0ba : enter -0x7cb8, -0x3c ; pop rbp ; ret
0x000000000040c3c5 : enter 0x4153, 0 ; jmp rcx
0x00000000004062f2 : fiadd dword ptr [rcx - 0xa] ; ret 0x4001
0x0000000000410339 : fiadd dword ptr [rcx - 0xa] ; ret 0x4401
0x0000000000405865 : fiadd dword ptr [rcx - 0xa] ; ret 0x4801
0x00000000004021e4 : fiadd dword ptr [rcx - 0xa] ; ret 0x8801
0x0000000000401b94 : fiadd dword ptr [rcx - 0xa] ; ret 0x8901
0x000000000040dcae : fiadd dword ptr [rcx - 0xa] ; ret 0xf01
0x000000000040200e : fild dword ptr [rcx - 0xa] ; ret
0x0000000000408c58 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000041415c : fmul qword ptr [rax - 0x7d] ; ret
0x000000000040d163 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004140f9 : hlt ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x00000000004018e0 : hlt ; pop rbp ; mov edi, 0x6172e0 ; jmp rax
0x000000000041401f : hlt ; pop rbp ; ret
0x0000000000416021 : idiv dh ; call qword ptr [rax]
0x00000000004106dd : in al, dx ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401fe3 : in al, dx ; js 0x40204d ; add byte ptr [rcx - 0x77], al ; ret 0x8141
0x0000000000402795 : in al, dx ; js 0x4027ff ; add byte ptr [rcx - 0x77], al ; ret 0x8141
0x0000000000402a92 : in al, dx ; js 0x402afc ; add byte ptr [rcx - 0x77], al ; ret 0x8141
0x0000000000405a3a : in al, dx ; js 0x405aa4 ; add byte ptr [rbp - 0x77], al ; ret 0x8141
0x0000000000406b5f : in al, dx ; js 0x406bc9 ; add byte ptr [rcx - 0x77], al ; ret 0x8141
0x000000000040ad41 : in al, dx ; js 0x40adab ; add byte ptr [rbp - 0x77], al ; ret 0x8141
0x000000000040b8df : in al, dx ; js 0x40b949 ; add byte ptr [rcx - 0x77], al ; ret 0x8141
0x000000000040c0ef : in al, dx ; js 0x40c159 ; add byte ptr [rcx - 0x77], al ; ret
0x000000000040cbe3 : in al, dx ; js 0x40cc4d ; add byte ptr [rcx - 0x77], al ; ret
0x000000000040d5d0 : in al, dx ; js 0x40d63a ; add byte ptr [rbp - 0x77], al ; ret 0x8141
0x000000000040df9f : in al, dx ; js 0x40e009 ; add byte ptr [rcx - 0x77], al ; ret 0x8141
0x0000000000411ff2 : in al, dx ; js 0x41205c ; add byte ptr [rbp - 0x77], al ; ret 0x8141
0x000000000040466f : in al, dx ; pop rbp ; ret
0x000000000040dc98 : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x000000000040b3ee : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040aad3 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x00000000004062dc : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x000000000040bc2a : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000407acf : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x0000000000402f78 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x0000000000412fa8 : inc dword ptr [rcx + 0x41f9] ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x000000000041399e : inc dword ptr [rcx + 0x5af9] ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x000000000041305e : inc dword ptr [rcx + 0x5af9] ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x0000000000415d0b : inc esp ; adc byte ptr [rax], al ; add byte ptr [rbp + rbx*8 - 1], dh ; jmp rsp
0x0000000000405400 : insb byte ptr [rdi], dx ; ret 0
0x000000000040cef8 : int 0x80
0x00000000004018d3 : ja 0x4018da ; pop rbp ; ret
0x0000000000401479 : jae 0x401485 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004053fc : jae 0x405464 ; add al, ch ; insb byte ptr [rdi], dx ; ret 0
0x00000000004050d5 : jb 0x40513c ; add al, ch ; ret
0x0000000000415bd9 : jb 0x415bdc ; jmp rsp
0x00000000004018df : je 0x4018dd ; pop rbp ; mov edi, 0x6172e0 ; jmp rax
0x00000000004015fb : jmp 0x401497
0x00000000004018e7 : jmp rax
0x0000000000402148 : jmp rcx
0x0000000000401927 : jmp rdx
0x0000000000415bdb : jmp rsp
0x0000000000401910 : jne 0x401917 ; pop rbp ; ret
0x0000000000416719 : jne 0x41671c ; call rcx
0x000000000040b634 : jo 0x40b695 ; ret
0x0000000000401fe4 : js 0x40204c ; add byte ptr [rcx - 0x77], al ; ret 0x8141
0x0000000000402796 : js 0x4027fe ; add byte ptr [rcx - 0x77], al ; ret 0x8141
0x0000000000402a93 : js 0x402afb ; add byte ptr [rcx - 0x77], al ; ret 0x8141
0x0000000000405a3b : js 0x405aa3 ; add byte ptr [rbp - 0x77], al ; ret 0x8141
0x0000000000406b60 : js 0x406bc8 ; add byte ptr [rcx - 0x77], al ; ret 0x8141
0x000000000040a29f : js 0x40a2a8 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040a6c0 : js 0x40a720 ; pop rbp ; ret
0x000000000040ad42 : js 0x40adaa ; add byte ptr [rbp - 0x77], al ; ret 0x8141
0x000000000040b8e0 : js 0x40b948 ; add byte ptr [rcx - 0x77], al ; ret 0x8141
0x000000000040c0f0 : js 0x40c158 ; add byte ptr [rcx - 0x77], al ; ret
0x000000000040cbe4 : js 0x40cc4c ; add byte ptr [rcx - 0x77], al ; ret
0x000000000040d5d1 : js 0x40d639 ; add byte ptr [rbp - 0x77], al ; ret 0x8141
0x000000000040dfa0 : js 0x40e008 ; add byte ptr [rcx - 0x77], al ; ret 0x8141
0x0000000000411ff3 : js 0x41205b ; add byte ptr [rbp - 0x77], al ; ret 0x8141
0x0000000000405370 : lea edi, dword ptr [0x414e5f] ; call 0x4015d9
0x000000000040b4d5 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000405933 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405ac6 : lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040b4d4 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000405ac5 : lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000404529 : loopne 0x40457c ; mov ecx, dword ptr [rax*8 + 0x414280] ; jmp rcx
0x000000000040aaff : loopne 0x40ab50 ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040aafe : loopne 0x40ab51 ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040ddc5 : loopne 0x40de15 ; add esp, 0x20 ; pop rbp ; ret
0x000000000040ddc4 : loopne 0x40de16 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000403510 : mov ah, 0x4e ; add byte ptr [r11 - 0x17ff4fd0], cl ; ret
0x0000000000415b14 : mov ah, 8 ; add byte ptr [rax], al ; test byte ptr [rcx - 1], dl ; call rsp
0x000000000040cf3e : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000406010 : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000412e69 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000413d04 : mov al, byte ptr [rbp - 6] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000405321 : mov byte ptr [0x617788], al ; pop rbp ; ret
0x000000000040b400 : mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x0000000000405528 : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret
0x000000000040903c : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x000000000040784e : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x000000000040a826 : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 1
0x0000000000401943 : mov byte ptr [rip + 0x2159ee], 1 ; ret
0x000000000040432c : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004130c7 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000412e6f : mov dh, -0x40 ; pop rbp ; ret
0x00000000004052fd : mov dword ptr [0x617780], edi ; pop rbp ; ret
0x000000000040668a : mov dword ptr [rax], ecx ; pop rbp ; ret
0x00000000004067d8 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004051e5 : mov dword ptr [rbp - 0x48], eax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040d161 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004140f7 : mov dword ptr [rbp - 0xc], eax ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000401c15 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000404ac7 : mov dword ptr [rbp - 8], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004051e7 : mov eax, 0x50c48348 ; pop rbp ; ret
0x000000000040a6bc : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000403317 : mov eax, 0x9c0f013b ; ret 0x48b
0x000000000040d805 : mov eax, 0xf0658d48 ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000410b61 : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004065b8 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040d331 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405804 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000410b5e : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004065b5 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040b26a : mov eax, dword ptr [rbp - 0x10] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004056f3 : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004106db : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406944 : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000040d23f : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040656d : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000406684 : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040b834 : mov eax, dword ptr [rbp - 0x18] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040ddc3 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040aafd : mov eax, dword ptr [rbp - 0x20] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000410978 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004067da : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000041104b : mov eax, dword ptr [rbp - 0x30] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040c0b8 : mov eax, dword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040a6ba : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040600e : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041401d : mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x00000000004049b8 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000411c62 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040196b : mov ebp, esp ; call rax
0x00000000004018d1 : mov ebp, esp ; ja 0x4018dc ; pop rbp ; ret
0x0000000000402141 : mov ecx, dword ptr [rax*8 + 0x4141d0] ; jmp rcx
0x000000000040452b : mov ecx, dword ptr [rax*8 + 0x414280] ; jmp rcx
0x0000000000407007 : mov ecx, dword ptr [rax*8 + 0x414ec0] ; jmp rcx
0x0000000000407b21 : mov ecx, dword ptr [rax*8 + 0x414f08] ; jmp rcx
0x000000000040c3c2 : mov ecx, dword ptr [rax*8 + 0x4153c8] ; jmp rcx
0x000000000040eaef : mov ecx, dword ptr [rax*8 + 0x415740] ; jmp rcx
0x000000000040ea6f : mov ecx, dword ptr [rax*8 + 0x4157a0] ; jmp rcx
0x000000000040fe95 : mov ecx, dword ptr [rax*8 + 0x415888] ; jmp rcx
0x000000000040fe21 : mov ecx, dword ptr [rax*8 + 0x4158e8] ; jmp rcx
0x0000000000406687 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401965 : mov edi, 0x616e20 ; mov rbp, rsp ; call rax
0x00000000004018e2 : mov edi, 0x6172e0 ; jmp rax
0x0000000000401922 : mov edi, 0x6172e0 ; jmp rdx
0x00000000004053f8 : mov edi, dword ptr [0x617330] ; call 0x411679
0x0000000000414157 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000414156 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000401920 : mov esi, eax ; mov edi, 0x6172e0 ; jmp rdx
0x000000000040466e : mov esp, ebp ; pop rbp ; ret
0x00000000004052fc : mov qword ptr [0x617780], rdi ; pop rbp ; ret
0x00000000004051e4 : mov qword ptr [rbp - 0x48], rax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040600f : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004051e6 : mov r8d, 0x50c48348 ; pop rbp ; ret
0x000000000040a6bb : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x000000000040d330 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000405803 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004065b4 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040b269 : mov rax, qword ptr [rbp - 0x10] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004056f2 : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040d23e : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040656c : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040b833 : mov rax, qword ptr [rbp - 0x18] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040ddc2 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040c0b7 : mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040600d : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000411c61 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040196a : mov rbp, rsp ; call rax
0x00000000004018d0 : mov rbp, rsp ; ja 0x4018dd ; pop rbp ; ret
0x0000000000402140 : mov rcx, qword ptr [rax*8 + 0x4141d0] ; jmp rcx
0x000000000040452a : mov rcx, qword ptr [rax*8 + 0x414280] ; jmp rcx
0x0000000000407006 : mov rcx, qword ptr [rax*8 + 0x414ec0] ; jmp rcx
0x0000000000407b20 : mov rcx, qword ptr [rax*8 + 0x414f08] ; jmp rcx
0x000000000040c3c1 : mov rcx, qword ptr [rax*8 + 0x4153c8] ; jmp rcx
0x000000000040eaee : mov rcx, qword ptr [rax*8 + 0x415740] ; jmp rcx
0x000000000040ea6e : mov rcx, qword ptr [rax*8 + 0x4157a0] ; jmp rcx
0x000000000040fe94 : mov rcx, qword ptr [rax*8 + 0x415888] ; jmp rcx
0x000000000040fe20 : mov rcx, qword ptr [rax*8 + 0x4158e8] ; jmp rcx
0x000000000040191f : mov rsi, rax ; mov edi, 0x6172e0 ; jmp rdx
0x000000000040466d : mov rsp, rbp ; pop rbp ; ret
0x0000000000416714 : mov word ptr [rcx], cs ; add byte ptr [rax], al ; call 0xffffffffd2416699
0x0000000000415bd8 : movsb byte ptr [rdi], byte ptr [rsi] ; jb 0x415bdd ; jmp rsp
0x000000000040432b : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004130c6 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000412e6e : movzx eax, al ; pop rbp ; ret
0x0000000000414178 : nop dword ptr [rax + rax] ; ret
0x0000000000405a38 : or al, 0x25 ; in al, dx ; js 0x405aa6 ; add byte ptr [rbp - 0x77], al ; ret 0x8141
0x0000000000406b5d : or al, 0x25 ; in al, dx ; js 0x406bcb ; add byte ptr [rcx - 0x77], al ; ret 0x8141
0x000000000040ad3f : or al, 0x25 ; in al, dx ; js 0x40adad ; add byte ptr [rbp - 0x77], al ; ret 0x8141
0x000000000040b8dd : or al, 0x25 ; in al, dx ; js 0x40b94b ; add byte ptr [rcx - 0x77], al ; ret 0x8141
0x000000000040d5ce : or al, 0x25 ; in al, dx ; js 0x40d63c ; add byte ptr [rbp - 0x77], al ; ret 0x8141
0x000000000040df9d : or al, 0x25 ; in al, dx ; js 0x40e00b ; add byte ptr [rcx - 0x77], al ; ret 0x8141
0x0000000000411ff0 : or al, 0x25 ; in al, dx ; js 0x41205e ; add byte ptr [rbp - 0x77], al ; ret 0x8141
0x000000000040f153 : or al, 0x25 ; pop rax ; add r8b, bpl ; ret 0xff24
0x000000000040bfdc : or al, 0x25 ; ret 0x4153
0x000000000040452c : or al, 0xffffffffffffffc5 ; add byte ptr [rdx + 0x41], 0 ; jmp rcx
0x000000000040fe22 : or al, 0xffffffffffffffc5 ; call 0xffffffffff413f87
0x000000000040c3c3 : or al, 0xffffffffffffffc5 ; enter 0x4153, 0 ; jmp rcx
0x0000000000407008 : or al, 0xffffffffffffffc5 ; ror byte ptr [rsi + 0x41], 0 ; jmp rcx
0x000000000040a889 : or byte ptr [r15], cl ; xchg eax, ebp ; ret 0x348b
0x0000000000408c53 : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000408c54 : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000041318c : or byte ptr [rcx + 0x2038], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x00000000004135cc : or byte ptr [rcx + 0x2138], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000040cced : or byte ptr [rcx + 0x28f9], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x0000000000412edc : or byte ptr [rcx + 0x3038], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x00000000004134cc : or byte ptr [rcx + 0x6138], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x0000000000411aa2 : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x000000000040a88a : or byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x000000000040bbfd : or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x000000000040bc9f : or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x0000000000416715 : or dword ptr [rax], eax ; add al, ch ; jne 0x416720 ; call rcx
0x000000000040da8f : or eax, 0x48fffff9 ; add esp, 0x30 ; pop rbp ; ret
0x0000000000406b0d : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000415ee1 : out -2, eax ; call qword ptr [rdi]
0x0000000000401945 : out dx, al ; pop rcx ; and dword ptr [rax], eax ; add ebx, esi ; ret
0x0000000000403e91 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041416c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000403e93 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041416e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000403e95 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000414170 : pop r14 ; pop r15 ; ret
0x000000000040b4d9 : pop r14 ; pop rbp ; ret
0x0000000000403e97 : pop r15 ; pop rbp ; ret
0x0000000000414172 : pop r15 ; ret
0x000000000040f156 : pop rax ; add r8b, bpl ; ret 0xff24
0x0000000000401942 : pop rbp ; mov byte ptr [rip + 0x2159ee], 1 ; ret
0x00000000004018e1 : pop rbp ; mov edi, 0x6172e0 ; jmp rax
0x000000000040191e : pop rbp ; mov rsi, rax ; mov edi, 0x6172e0 ; jmp rdx
0x000000000041416b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000403e94 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041416f : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004018d5 : pop rbp ; ret
0x0000000000405936 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040b4d8 : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000405ac9 : pop rbx ; pop rbp ; ret
0x0000000000401946 : pop rcx ; and dword ptr [rax], eax ; add ebx, esi ; ret
0x000000000040feac : pop rdi ; add al, byte ptr [rax] ; add cl, ch ; ret
0x0000000000405373 : pop rdi ; add r8b, bpl ; push rsp ; ret 0xffff
0x0000000000403e98 : pop rdi ; pop rbp ; ret
0x0000000000414173 : pop rdi ; ret
0x00000000004139a1 : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x0000000000413061 : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x0000000000403e96 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000414171 : pop rsi ; pop r15 ; ret
0x000000000040b4da : pop rsi ; pop rbp ; ret
0x0000000000403e92 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041416d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000412ee4 : popfq ; ret 0x348b
0x0000000000412fb0 : popfq ; ret 0xc8b
0x0000000000412bb3 : push rax ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x00000000004051eb : push rax ; pop rbp ; ret
0x0000000000408c57 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000401964 : push rbp ; mov edi, 0x616e20 ; mov rbp, rsp ; call rax
0x000000000040a5ee : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000040bfd7 : push rbx ; add byte ptr [r8 - 0x73], cl ; or al, 0x25 ; ret 0x4153
0x0000000000415edc : push rsp ; add dword ptr [rax], eax ; add al, ah ; out -2, eax ; call qword ptr [rdi]
0x0000000000415a00 : push rsp ; ret 0xfffe
0x0000000000405378 : push rsp ; ret 0xffff
0x000000000040b3ff : pushfq ; mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x0000000000401b90 : pushfq ; ret
0x000000000040331b : pushfq ; ret 0x48b
0x0000000000407ae0 : pushfq ; ret 0x844
0x0000000000401d70 : pushfq ; ret 0x845
0x000000000040ba2a : pushfq ; ret 0xd108
0x0000000000401481 : ret
0x00000000004003d8 : ret 0
0x0000000000401b00 : ret 0x125
0x0000000000409045 : ret 0x13
0x0000000000408c70 : ret 0x1ae8
0x0000000000401802 : ret 0x2159
0x0000000000401602 : ret 0x215a
0x0000000000407857 : ret 0x2a
0x0000000000407938 : ret 0x348b
0x00000000004062f5 : ret 0x4001
0x0000000000415330 : ret 0x414a
0x000000000040bfde : ret 0x4153
0x00000000004125ac : ret 0x4159
0x000000000041033c : ret 0x4401
0x0000000000405868 : ret 0x4801
0x000000000040331c : ret 0x48b
0x0000000000401e45 : ret 0x48f0
0x000000000040b977 : ret 0x4cc0
0x0000000000406bfa : ret 0x4cf0
0x0000000000404518 : ret 0x4d89
0x00000000004139a7 : ret 0x5588
0x000000000040bc00 : ret 0x7ae8
0x0000000000411725 : ret 0x8041
0x0000000000401b86 : ret 0x8141
0x0000000000407ae1 : ret 0x844
0x0000000000401d71 : ret 0x845
0x00000000004021e7 : ret 0x8801
0x0000000000401b97 : ret 0x8901
0x0000000000405029 : ret 0x8941
0x000000000040d945 : ret 0x8948
0x0000000000408fcc : ret 0x89a5
0x000000000040d5c3 : ret 0x8b44
0x0000000000408c5b : ret 0x8b48
0x000000000040338b : ret 0x8fe8
0x0000000000402f7f : ret 0xa3d
0x000000000041202e : ret 0xb
0x000000000040507d : ret 0xb0
0x0000000000401905 : ret 0xc148
0x000000000040ff52 : ret 0xc2f6
0x0000000000411aab : ret 0xc8b
0x000000000040ba2b : ret 0xd108
0x000000000040c01c : ret 0xd284
0x000000000040bca2 : ret 0xd8e8
0x0000000000401af7 : ret 0xea81
0x000000000040a53c : ret 0xee8
0x0000000000402f8d : ret 0xf01
0x0000000000403248 : ret 0xf2e8
0x000000000041032c : ret 0xf981
0x000000000040ff45 : ret 0xfe81
0x000000000040f15a : ret 0xff24
0x00000000004159f9 : ret 0xfffe
0x0000000000405379 : ret 0xffff
0x0000000000408942 : ret 1
0x000000000040a5f2 : ret 8
0x000000000041038a : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000404511 : rol dword ptr [rbx - 0x3f76fc17], -0x77 ; ret 0x4d89
0x000000000040f335 : rol dword ptr [rcx + 0xf], -0x64 ; ret
0x000000000040cef3 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000040190c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40191b ; pop rbp ; ret
0x00000000004130c8 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x000000000040cef4 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x000000000040a5ef : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000040700a : ror byte ptr [rsi + 0x41], 0 ; jmp rcx
0x00000000004139a6 : sahf ; ret 0x5588
0x0000000000413066 : sahf ; ret 0xc8b
0x0000000000407ae4 : sal dh, cl ; ret 0x8901
0x000000000040190e : sar eax, 1 ; jne 0x401919 ; pop rbp ; ret
0x000000000040190d : sar rax, 1 ; jne 0x40191a ; pop rbp ; ret
0x0000000000406d80 : sbb cl, byte ptr [rcx - 0x7f] ; ret
0x0000000000410d17 : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040b01d : scasd eax, dword ptr [rdi] ; ret
0x0000000000401aff : scasd eax, dword ptr [rdi] ; ret 0x125
0x0000000000405a4a : scasd eax, dword ptr [rdi] ; ret 0x8141
0x0000000000412faa : stc ; add byte ptr [r8], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x00000000004139a0 : stc ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x0000000000413060 : stc ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x0000000000412e6b : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000416678 : sub byte ptr [rbp - 1], ch ; jmp rcx
0x00000000004141ad : sub esp, 8 ; add rsp, 8 ; ret
0x00000000004141ac : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000041417a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000415b18 : test byte ptr [rcx - 1], dl ; call rsp
0x000000000040552b : test dword ptr [rip - 0x17000000], eax ; ret
0x000000000040903f : test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x0000000000407851 : test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x0000000000412028 : test dword ptr [rip - 0x17000000], eax ; ret 0xb
0x000000000040893c : test dword ptr [rip - 0x17000000], eax ; ret 1
0x000000000040dbe3 : test eax, 0x48fffffc ; add esp, 0x10 ; pop rbp ; ret
0x000000000040fe97 : vaddps xmm0, xmm14, xmmword ptr [rcx] ; jmp rcx
0x000000000040fe23 : vaddps xmm0, xmm2, xmmword ptr [rcx] ; jmp rcx
0x000000000040ea71 : vxorps xmm0, xmm11, xmmword ptr [rcx] ; jmp rcx
0x000000000040eaf1 : vxorps xmm8, xmm7, xmmword ptr [rcx] ; jmp rcx
0x000000000040a88c : xchg eax, ebp ; ret 0x348b
0x0000000000411724 : xchg eax, ebp ; ret 0x8041
0x000000000040d5c2 : xchg eax, ebp ; ret 0x8b44
0x0000000000411aaa : xchg eax, ebp ; ret 0xc8b
0x0000000000407937 : xchg eax, esi ; ret 0x348b
0x000000000041601c : xchg eax, esp ; add al, byte ptr [rax] ; add al, dh ; idiv dh ; call qword ptr [rax]
0x0000000000402001 : xchg eax, esp ; ret
0x0000000000410dbd : xchg eax, esp ; ret 0x348b
0x0000000000401b85 : xchg eax, esp ; ret 0x8141
0x0000000000402f7e : xchg eax, esp ; ret 0xa3d
0x000000000040c01b : xchg eax, esp ; ret 0xd284
0x000000000041032b : xchg eax, esp ; ret 0xf981
0x000000000040ff44 : xchg eax, esp ; ret 0xfe81
0x00000000004125aa : xor al, 0x25 ; ret 0x4159
0x000000000040bbf7 : xor byte ptr [rax - 0x75], cl ; add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x000000000040bc99 : xor byte ptr [rax - 0x75], cl ; add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x00000000004053fb : xor byte ptr [rbx + 0x61], dh ; add al, ch ; insb byte ptr [rdi], dx ; ret 0
0x0000000000405300 : xor byte ptr [rdi + 0x61], 0 ; pop rbp ; ret
0x000000000040f658 : xor ecx, ebp ; ret
0x00000000004067d6 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
