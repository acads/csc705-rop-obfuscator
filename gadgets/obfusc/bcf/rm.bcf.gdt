0x0000000000427e8e : adc al, -0x75 ; hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042da49 : adc al, -2 ; jmp rsp
0x000000000042f1cc : adc al, 0x12 ; add byte ptr [rax], al ; push rax ; sbb edi, edi ; jmp qword ptr [rcx]
0x000000000041b9cf : adc al, byte ptr [rcx + 0x4f9] ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x000000000041b892 : adc al, byte ptr [rcx + 0x4f9] ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf280
0x000000000041f282 : adc byte ptr [rax - 0x7f], cl ; ret 0x108
0x000000000041f5ff : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x0000000000406e59 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042e040 : adc byte ptr [rdi], bh ; std ; jmp rdx
0x0000000000404eca : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042f35d : adc eax, dword ptr [rax] ; add byte ptr [rax], dl ; xor edi, edi ; call rdx
0x000000000042de7f : add ah, bl ; ret
0x000000000042f993 : add ah, bl ; sbb dword ptr [rax], eax ; add al, ch ; mov bl, -1 ; call rax
0x0000000000401c34 : add ah, byte ptr [rbx] ; jmp rax
0x0000000000401c74 : add ah, byte ptr [rbx] ; jmp rdx
0x000000000042d8cf : add ah, ch ; pop rbx ; std ; jmp rsp
0x000000000042d90f : add ah, cl ; ja 0x42d914 ; jmp rsp
0x000000000042df67 : add ah, cl ; jrcxz 0x42df6e ; call rsp
0x000000000042dcf7 : add ah, cl ; sub al, -1 ; call rsp
0x000000000042e435 : add al, 0 ; add byte ptr [rax], ch ; mov al, -3 ; call qword ptr [rax]
0x00000000004028ca : add al, 0x25 ; ret
0x00000000004120be : add al, 0x63 ; add byte ptr [rbp - 0x77], al ; ret
0x0000000000402fbe : add al, 0x63 ; add byte ptr [rbp - 0x77], al ; ret 0x8141
0x0000000000408630 : add al, 0x63 ; add byte ptr [rcx - 0x77], al ; ret
0x000000000040a6b0 : add al, 0x63 ; add byte ptr [rcx - 0x77], al ; ret 0x8141
0x0000000000405c04 : add al, 3 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x000000000042f997 : add al, ch ; mov bl, -1 ; call rax
0x000000000041ec97 : add al, ch ; ret
0x000000000042e377 : add al, ch ; test al, -3 ; call qword ptr [rsi]
0x000000000042e7df : add al, dl ; or bh, dh ; call qword ptr [rdi]
0x000000000042cf6f : add bl, ch ; ret
0x000000000042bc2f : add bl, dh ; ret
0x000000000042aa5b : add byte ptr [r8], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x0000000000420e0b : add byte ptr [rax + 0x21], cl ; ret 0x8148
0x000000000042e03b : add byte ptr [rax + rax + 0x3f100000], al ; std ; jmp rdx
0x000000000042da87 : add byte ptr [rax + rbx - 2], bh ; jmp rsp
0x000000000042dc3f : add byte ptr [rax + rdi*4 - 2], bl ; jmp rsp
0x00000000004028c7 : add byte ptr [rax - 0x73], cl ; add al, 0x25 ; ret
0x0000000000404fe9 : add byte ptr [rax - 0x73], cl ; clc ; pop rbx ; pop rbp ; ret
0x0000000000422d37 : add byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x0000000000403ad0 : add byte ptr [rax - 0x75], cl ; loopne 0x403b27 ; mov esp, ebp ; pop rbp ; ret
0x000000000040791f : add byte ptr [rax - 0x75], cl ; loopne 0x407976 ; mov esp, ebp ; pop rbp ; ret
0x0000000000410cc0 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x000000000040900c : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004216e9 : add byte ptr [rax - 0x77], cl ; or cl, ch ; ret
0x0000000000402f22 : add byte ptr [rax - 0x77], cl ; ret 0x75e8
0x000000000040340c : add byte ptr [rax - 0x77], cl ; ret 0x8be8
0x0000000000402e9d : add byte ptr [rax - 0x77], cl ; ret 0xfae8
0x0000000000409bd9 : add byte ptr [rax - 1], bh ; pop rbp ; ret
0x000000000042f1ca : add byte ptr [rax], al ; adc al, 0x12 ; add byte ptr [rax], al ; push rax ; sbb edi, edi ; jmp qword ptr [rcx]
0x000000000042e03e : add byte ptr [rax], al ; adc byte ptr [rdi], bh ; std ; jmp rdx
0x000000000042cf6d : add byte ptr [rax], al ; add bl, ch ; ret
0x000000000042bc2d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000420e09 : add byte ptr [rax], al ; add byte ptr [rax + 0x21], cl ; ret 0x8148
0x0000000000404fe7 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; clc ; pop rbx ; pop rbp ; ret
0x0000000000422d35 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x000000000040900a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004216e7 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; or cl, ch ; ret
0x0000000000409bd7 : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; pop rbp ; ret
0x000000000042cf6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, ch ; ret
0x000000000042bc2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000042cf33 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; ret
0x00000000004193e8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000042cf6c : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x42cf3a
0x000000000042bac9 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000422d34 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000042d20c : add byte ptr [rax], al ; add byte ptr [rax], al ; push rbx ; ret 0x40
0x000000000042bc2c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000042cf4c : add byte ptr [rax], al ; add byte ptr [rax], al ; xchg eax, edx ; ret 0x40
0x000000000042cf35 : add byte ptr [rax], al ; add byte ptr [rax], dh ; ret
0x00000000004120c8 : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x0000000000402fc8 : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x8141
0x000000000040ebc8 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000042642b : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000403ba7 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b72f8b], cl ; ret 0xb0
0x0000000000403e20 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7338b], cl ; ret 0xb0
0x0000000000402ed7 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret
0x0000000000406e37 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x844
0x0000000000401d65 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x000000000040863a : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x000000000040a6ba : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x125
0x000000000042081f : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x00000000004149a4 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000402fda : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x00000000004149ce : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x48b
0x0000000000402ecc : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x0000000000406034 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xf981
0x000000000041aa72 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xfa81
0x000000000041812d : add byte ptr [rax], al ; add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x000000000040eb68 : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x51], al ; ret
0x000000000041f464 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000042aa5c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x0000000000402fe5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret
0x0000000000408784 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x000000000042b452 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x000000000042ab12 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x000000000042088c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret
0x0000000000401ceb : add byte ptr [rax], al ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x125
0x0000000000424caa : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000401d30 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x0000000000414638 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x48b
0x0000000000412225 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5588
0x000000000041148e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x0000000000413590 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x9588
0x00000000004195db : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x0000000000404c24 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000408cfa : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0x348b
0x0000000000410ac1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x000000000040524c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004096a5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x00000000004041b9 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x48b
0x000000000040b621 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x000000000040470e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x0000000000402845 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x0000000000406abd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x00000000004032c0 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041b896 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf280
0x0000000000404c50 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf981
0x0000000000427c5e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xfe81
0x0000000000419bb1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xff81
0x0000000000404ec6 : add byte ptr [rax], al ; add cl, ch ; adc eax, dword ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041a156 : add byte ptr [rax], al ; add cl, ch ; jmp qword ptr [rdi]
0x000000000040927d : add byte ptr [rax], al ; add cl, ch ; ret
0x000000000040cb91 : add byte ptr [rax], al ; add cl, ch ; ret 0x13
0x000000000040b3a3 : add byte ptr [rax], al ; add cl, ch ; ret 0x2a
0x00000000004284da : add byte ptr [rax], al ; add cl, ch ; ret 0xb
0x000000000040c48e : add byte ptr [rax], al ; add cl, ch ; ret 1
0x0000000000415be8 : add byte ptr [rax], al ; add cl, ch ; ret 5
0x00000000004091ef : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040a65f : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004242b4 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000041d40e : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004193ea : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401733 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000042e376 : add byte ptr [rax], al ; call 0x1742e12a
0x000000000042f996 : add byte ptr [rax], al ; call 0xffffffffd142f955
0x000000000042f5d6 : add byte ptr [rax], al ; cwde ; ja 0x42f5df ; call qword ptr [rdx]
0x000000000042f992 : add byte ptr [rax], al ; fcomp qword ptr [rcx] ; add byte ptr [rax], al ; call 0xffffffffd142f959
0x000000000042edd6 : add byte ptr [rax], al ; fsubr dword ptr [rax - 2] ; jmp rdi
0x000000000042d8ce : add byte ptr [rax], al ; in al, dx ; pop rbx ; std ; jmp rsp
0x000000000042d9d6 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret
0x0000000000401949 : add byte ptr [rax], al ; jmp 0x401749
0x0000000000402ffc : add byte ptr [rax], al ; jmp 0x40342a
0x00000000004031de : add byte ptr [rax], al ; jmp 0x403475
0x000000000041ba29 : add byte ptr [rax], al ; jmp 0x41cba4
0x000000000042cf6e : add byte ptr [rax], al ; jmp 0x42cf38
0x0000000000404fe8 : add byte ptr [rax], al ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000042db3e : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; cmp dh, bh ; call rsp
0x000000000042dd36 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; cmp edi, edi ; call rsp
0x000000000042a84c : add byte ptr [rax], al ; mov al, sil ; movzx eax, al ; pop rbp ; ret
0x000000000042a69d : add byte ptr [rax], al ; mov ax, si ; movzx eax, ax ; pop rbp ; ret
0x0000000000409bd8 : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbp ; ret
0x000000000040a492 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000427d18 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000042bacb : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x000000000042e372 : add byte ptr [rax], al ; mov esp, 0xe8000003 ; test al, -3 ; call qword ptr [rsi]
0x000000000040a102 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000412ac2 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000422d36 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040900b : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000042f35a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; adc eax, dword ptr [rax] ; add byte ptr [rax], dl ; xor edi, edi ; call rdx
0x00000000004049c4 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040ebc9 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000429065 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040ddf1 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000042e512 : add byte ptr [rax], al ; pop rsp ; add eax, 0xbbf80000 ; std ; call rbx
0x000000000042d9ce : add byte ptr [rax], al ; pop rsp ; ret
0x000000000042f1ce : add byte ptr [rax], al ; push rax ; sbb edi, edi ; jmp qword ptr [rcx]
0x000000000042d20e : add byte ptr [rax], al ; push rbx ; ret 0x40
0x000000000042bc2e : add byte ptr [rax], al ; ret
0x000000000042f5d2 : add byte ptr [rax], al ; sbb al, 0x16 ; add byte ptr [rax], al ; cwde ; ja 0x42f5e3 ; call qword ptr [rdx]
0x000000000042edd2 : add byte ptr [rax], al ; sbb al, 0xe ; add byte ptr [rax], al ; fsubr dword ptr [rax - 2] ; jmp rdi
0x000000000042eaae : add byte ptr [rax], al ; shl byte ptr [rdi], -2 ; jmp rcx
0x000000000042e2a6 : add byte ptr [rax], al ; test al, -0x6a ; std ; call qword ptr [rax]
0x000000000042e03a : add byte ptr [rax], al ; test byte ptr [rax], al ; add byte ptr [rax], al ; adc byte ptr [rdi], bh ; std ; jmp rdx
0x000000000042cf4e : add byte ptr [rax], al ; xchg eax, edx ; ret 0x40
0x000000000042ebea : add byte ptr [rax], al ; xor al, 0xc ; add byte ptr [rax], al ; xor byte ptr [rsi + rdi*8], dh ; jmp rsp
0x000000000042eb4e : add byte ptr [rax], al ; xor byte ptr [rax], 0xfe ; call rcx
0x000000000042ebee : add byte ptr [rax], al ; xor byte ptr [rsi + rdi*8], dh ; jmp rsp
0x000000000042e437 : add byte ptr [rax], ch ; mov al, -3 ; call qword ptr [rax]
0x000000000042cf37 : add byte ptr [rax], dh ; ret
0x000000000042ebef : add byte ptr [rax], dh ; xor al, 0xfffffffffffffffe ; jmp rsp
0x000000000042f35f : add byte ptr [rax], dl ; xor edi, edi ; call rdx
0x00000000004120ca : add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x0000000000402fca : add byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x8141
0x00000000004120c0 : add byte ptr [rbp - 0x77], al ; ret
0x0000000000402fc0 : add byte ptr [rbp - 0x77], al ; ret 0x8141
0x000000000040ebca : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000429066 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040ddf2 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000042e373 : add byte ptr [rbx + rax - 0x57180000], bh ; std ; call qword ptr [rsi]
0x0000000000403ba9 : add byte ptr [rbx - 0x76b72f8b], cl ; ret 0xb0
0x0000000000403e22 : add byte ptr [rbx - 0x76b7338b], cl ; ret 0xb0
0x000000000041358c : add byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x9588
0x00000000004195d7 : add byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x0000000000427c5a : add byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xfe81
0x0000000000405258 : add byte ptr [rcx + 0xf], al ; pushfq ; mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x0000000000402ed9 : add byte ptr [rcx + 0xf], al ; pushfq ; ret
0x0000000000406e39 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x844
0x0000000000401d67 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x000000000040863c : add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x000000000040a6bc : add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x125
0x0000000000420821 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8041
0x00000000004149a6 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000402fdc : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x00000000004149d0 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x48b
0x0000000000402ece : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x0000000000406036 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xf981
0x000000000041aa74 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xfa81
0x0000000000405248 : add byte ptr [rcx + 0xfa], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040ef3c : add byte ptr [rcx + 0xfe], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004072fe : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040b61d : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x0000000000402841 : add byte ptr [rcx + 0xff], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x0000000000408632 : add byte ptr [rcx - 0x77], al ; ret
0x000000000040a6b2 : add byte ptr [rcx - 0x77], al ; ret 0x8141
0x000000000041812f : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x0000000000401c98 : add byte ptr [rcx], al ; ret
0x000000000040eb6a : add byte ptr [rdi + rcx - 0x51], al ; ret
0x000000000041f466 : add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000042aa5e : add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x0000000000402fe7 : add byte ptr [rdi], cl ; pushfq ; ret
0x0000000000408786 : add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x000000000042b454 : add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x000000000042ab14 : add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x000000000042088e : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret
0x0000000000401ced : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x125
0x0000000000424cac : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000401d32 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x000000000041463a : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x48b
0x0000000000412227 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5588
0x0000000000411490 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x0000000000413592 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x9588
0x00000000004195dd : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x0000000000404c26 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000408cfc : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0x348b
0x0000000000410ac3 : add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x000000000040524e : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004096a7 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x00000000004041bb : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x48b
0x000000000040b623 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x0000000000404710 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9588
0x0000000000402847 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x0000000000406abf : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x00000000004032c2 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041b898 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf280
0x0000000000404c52 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf981
0x0000000000427c60 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xfe81
0x0000000000419bb3 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xff81
0x000000000042f1cb : add byte ptr [rdx + rdx], dl ; add byte ptr [rax], al ; push rax ; sbb edi, edi ; jmp qword ptr [rcx]
0x0000000000421c2f : add byte ptr [rsi + 0xf], ah ; pop rsp ; ret 0xf66
0x000000000042edd3 : add byte ptr [rsi + rcx], bl ; add byte ptr [rax], al ; fsubr dword ptr [rax - 2] ; jmp rdi
0x000000000042f5d3 : add byte ptr [rsi + rdx], bl ; add byte ptr [rax], al ; cwde ; ja 0x42f5e2 ; call qword ptr [rdx]
0x000000000042e433 : add byte ptr [rsp + rax], bh ; add byte ptr [rax], ch ; mov al, -3 ; call qword ptr [rax]
0x000000000042ebeb : add byte ptr [rsp + rcx], dh ; add byte ptr [rax], al ; xor byte ptr [rsi + rdi*8], dh ; jmp rsp
0x00000000004149cd : add byte ptr cs:[rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x48b
0x0000000000404ec8 : add cl, ch ; adc eax, dword ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041a158 : add cl, ch ; jmp qword ptr [rdi]
0x000000000040927f : add cl, ch ; ret
0x000000000040cb93 : add cl, ch ; ret 0x13
0x000000000040b3a5 : add cl, ch ; ret 0x2a
0x00000000004284dc : add cl, ch ; ret 0xb
0x000000000040c490 : add cl, ch ; ret 1
0x0000000000415bea : add cl, ch ; ret 5
0x000000000040f74a : add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x000000000040f7ec : add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x0000000000413fe5 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000429064 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000040ddf0 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040fe66 : add dword ptr [rax], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000406f90 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000420d5d : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041414c : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404d08 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004258f0 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000411031 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x00000000004051f7 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000423a78 : add dword ptr [rdi], ecx ; ror dword ptr cs:[rdi], -0x69 ; ret 0x348b
0x000000000041a152 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; jmp qword ptr [rdi]
0x0000000000409279 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret
0x000000000040cb8d : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x000000000040b39f : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x00000000004284d6 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 0xb
0x000000000040c48a : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x17000000], eax ; ret 1
0x0000000000419354 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x348b
0x000000000041fed4 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x5588
0x0000000000401c94 : add eax, 0x22e69e ; add ebx, esi ; ret
0x000000000042e515 : add eax, 0xbbf80000 ; std ; call rbx
0x000000000041a155 : add eax, 0xe9000000 ; jmp qword ptr [rdi]
0x000000000040927c : add eax, 0xe9000000 ; ret
0x000000000040cb90 : add eax, 0xe9000000 ; ret 0x13
0x000000000040b3a2 : add eax, 0xe9000000 ; ret 0x2a
0x00000000004284d9 : add eax, 0xe9000000 ; ret 0xb
0x000000000040c48d : add eax, 0xe9000000 ; ret 1
0x0000000000415be7 : add eax, 0xe9000000 ; ret 5
0x000000000041bbc8 : add eax, 0xf000000 ; xchg eax, esp ; ret 0xc8b
0x000000000042e375 : add eax, dword ptr [rax] ; add al, ch ; test al, -3 ; call qword ptr [rsi]
0x0000000000401c5b : add eax, edx ; sar rax, 1 ; jne 0x401c6c ; pop rbp ; ret
0x0000000000401c99 : add ebx, esi ; ret
0x0000000000401f4b : add esp, 0x10 ; pop rbp ; ret
0x0000000000406e57 : add esp, 0x110 ; pop rbp ; ret
0x000000000041c938 : add esp, 0x168 ; pop rbx ; pop rbp ; ret
0x000000000040dded : add esp, 0x178 ; pop rbx ; pop rbp ; ret
0x00000000004154ce : add esp, 0x18 ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000410eac : add esp, 0x1a0 ; pop rbp ; ret
0x00000000004211d0 : add esp, 0x1b8 ; pop rbx ; pop rbp ; ret
0x000000000042a2f0 : add esp, 0x1e0 ; pop rbp ; ret
0x000000000042976d : add esp, 0x1e8 ; pop rbx ; pop rbp ; ret
0x0000000000409558 : add esp, 0x20 ; pop rbp ; ret
0x000000000040202d : add esp, 0x30 ; pop rbp ; ret
0x0000000000403ec6 : add esp, 0x40 ; pop rbp ; ret
0x00000000004109ef : add esp, 0x40 ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000407f23 : add esp, 0x50 ; pop rbp ; ret
0x00000000004152dd : add esp, 0x58 ; pop rbx ; pop rbp ; ret
0x00000000004258f5 : add esp, 0x60 ; pop rbp ; ret
0x000000000040f182 : add esp, 0x70 ; pop rbp ; ret
0x0000000000408573 : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000413e64 : add esp, 0xa0 ; pop rbp ; ret
0x0000000000410d0c : add esp, 0xb0 ; pop rbp ; ret
0x00000000004275c7 : add esp, 0xc0 ; pop rbp ; ret
0x00000000004049c0 : add esp, 0xd0 ; pop rbp ; ret
0x0000000000426428 : add esp, 0xd8 ; pop rbx ; pop rbp ; ret
0x0000000000419caf : add esp, 0xf0 ; pop rbp ; ret
0x0000000000401736 : add esp, 8 ; ret
0x0000000000409f7d : add esp, dword ptr [rbx] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000408c71 : add esp, dword ptr [rbx] ; pop rbp ; ret
0x0000000000401c5a : add rax, rdx ; sar rax, 1 ; jne 0x401c6d ; pop rbp ; ret
0x0000000000401f4a : add rsp, 0x10 ; pop rbp ; ret
0x0000000000406e56 : add rsp, 0x110 ; pop rbp ; ret
0x000000000041c937 : add rsp, 0x168 ; pop rbx ; pop rbp ; ret
0x000000000040ddec : add rsp, 0x178 ; pop rbx ; pop rbp ; ret
0x0000000000410eab : add rsp, 0x1a0 ; pop rbp ; ret
0x00000000004211cf : add rsp, 0x1b8 ; pop rbx ; pop rbp ; ret
0x000000000042a2ef : add rsp, 0x1e0 ; pop rbp ; ret
0x000000000042976c : add rsp, 0x1e8 ; pop rbx ; pop rbp ; ret
0x0000000000409557 : add rsp, 0x20 ; pop rbp ; ret
0x000000000040202c : add rsp, 0x30 ; pop rbp ; ret
0x0000000000403ec5 : add rsp, 0x40 ; pop rbp ; ret
0x00000000004109ee : add rsp, 0x40 ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000407f22 : add rsp, 0x50 ; pop rbp ; ret
0x00000000004152dc : add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x00000000004258f4 : add rsp, 0x60 ; pop rbp ; ret
0x000000000040f181 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000408572 : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000413e63 : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000410d0b : add rsp, 0xb0 ; pop rbp ; ret
0x00000000004275c6 : add rsp, 0xc0 ; pop rbp ; ret
0x00000000004049bf : add rsp, 0xd0 ; pop rbp ; ret
0x0000000000426427 : add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x0000000000419cae : add rsp, 0xf0 ; pop rbp ; ret
0x0000000000401735 : add rsp, 8 ; ret
0x0000000000411030 : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004051f6 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042df65 : and al, byte ptr [rax] ; add ah, cl ; jrcxz 0x42df70 ; call rsp
0x0000000000401c97 : and al, byte ptr [rax] ; add ebx, esi ; ret
0x0000000000412b6a : and byte ptr [r15], cl ; xchg eax, esp ; ret 0x348b
0x0000000000405549 : and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x0000000000412b6b : and byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x00000000004231e5 : and eax, 0x42d850 ; mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x000000000040f877 : and eax, 0x48ffffee ; add esp, 0x20 ; pop rbp ; ret
0x0000000000408c6f : and eax, 0x630350 ; pop rbp ; ret
0x000000000040904f : and eax, 0x630358 ; pop rbp ; ret
0x0000000000409073 : and eax, 0x630360 ; pop rbp ; ret
0x000000000042e378 : call 0x1742e128
0x0000000000414fa6 : call 0x38828afa
0x0000000000414fa5 : call 0x38828afb
0x0000000000415627 : call 0xffffffff8c03f43e
0x0000000000415626 : call 0xffffffff8c03f43f
0x000000000042f998 : call 0xffffffffd142f953
0x000000000040e089 : call 0xffffffffe90369d9
0x000000000040e088 : call 0xffffffffe90369da
0x0000000000424064 : call 0xffffffffff7bcbb5
0x0000000000424063 : call 0xffffffffff7bcbb6
0x000000000042bc09 : call qword ptr [r12 + rbx*8]
0x000000000040884d : call qword ptr [rax]
0x000000000042e7e3 : call qword ptr [rdi]
0x000000000042f253 : call qword ptr [rdx]
0x000000000042e37b : call qword ptr [rsi]
0x000000000042bc0a : call qword ptr [rsp + rbx*8]
0x000000000042236d : call r8
0x0000000000401cbd : call rax
0x000000000042e51b : call rbx
0x000000000042216e : call rcx
0x000000000042f363 : call rdx
0x000000000042db43 : call rsp
0x0000000000427898 : clc ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000422626 : clc ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000414259 : clc ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000422f50 : clc ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041ee35 : clc ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000426a62 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000413e62 : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x00000000004275c5 : clc ; add rsp, 0xc0 ; pop rbp ; ret
0x0000000000401c5f : clc ; jne 0x401c68 ; pop rbp ; ret
0x0000000000427b2c : clc ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x000000000041e0be : clc ; mov dword ptr [rcx + 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000420b37 : clc ; mov dword ptr [rdi + 0x18], 0x95f616 ; pop rbp ; ret
0x000000000042765e : clc ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000042122b : clc ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000042124b : clc ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000042126b : clc ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000422d3b : clc ; pop rbp ; ret
0x0000000000404fed : clc ; pop rbx ; pop rbp ; ret
0x0000000000410195 : clc ; rol byte ptr [rdx], cl ; jmp rcx
0x0000000000406e55 : cld ; add rsp, 0x110 ; pop rbp ; ret
0x000000000042072d : cld ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407754 : cld ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000419cad : cld ; add rsp, 0xf0 ; pop rbp ; ret
0x000000000042bba6 : cld ; mov dword ptr [rbp - 0xc], eax ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x000000000042b7b6 : cli ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040904e : cmp al, 0x25 ; pop rax ; add esp, dword ptr [rbx] ; pop rbp ; ret
0x0000000000408c6e : cmp al, 0x25 ; push rax ; add esp, dword ptr [rbx] ; pop rbp ; ret
0x0000000000420039 : cmp al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000042ac3e : cmp byte ptr [rax], ah ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x0000000000401d2e : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x000000000042201d : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000042a98e : cmp byte ptr [rax], dh ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x0000000000421c2c : cmp byte ptr [rbx + 0xf660000], 0x5c ; ret 0xf66
0x000000000042b07e : cmp byte ptr [rcx], ah ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x000000000042db41 : cmp dh, bh ; call rsp
0x0000000000422e65 : cmp dword ptr [rax - 0x75], ecx ; jne 0x422e4f ; call rax
0x0000000000424ca8 : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x000000000041148c : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b44
0x000000000040e51d : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401c1d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401c30 ; pop rbp ; ret
0x000000000042dd39 : cmp edi, edi ; call rsp
0x0000000000403409 : cmp esi, eax ; add byte ptr [rax - 0x77], cl ; ret 0x8be8
0x0000000000402e9a : cmp esi, eax ; add byte ptr [rax - 0x77], cl ; ret 0xfae8
0x000000000042f5d8 : cwde ; ja 0x42f5dd ; call qword ptr [rdx]
0x000000000040e2d2 : dec byte ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x000000000040a7af : dec byte ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret
0x0000000000410190 : dec dword ptr [rax - 0x75] ; or al, 0xffffffffffffffc5 ; clc ; rol byte ptr [rdx], cl ; jmp rcx
0x0000000000415863 : dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x0000000000405df3 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000428dd4 : dec dword ptr [rax - 0x7f] ; ret 1
0x00000000004295ea : dec dword ptr [rdi] ; test dword ptr [rip - 0x17000000], eax ; ret 1
0x0000000000403996 : dec dword ptr [rdi] ; xchg eax, esi ; ret 0x348b
0x000000000040820f : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret
0x0000000000401d63 : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x845
0x0000000000408782 : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x000000000041fb50 : div dword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000041fb4f : div qword ptr [rbp - 0x10] ; mov rax, rdx ; pop rbp ; ret
0x000000000040e13b : enter -0x74b4, 0x55 ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000424594 : enter -0x74b8, 0x32 ; mov rdi, qword ptr [rsi] ; call rcx
0x0000000000422e62 : enter -0x74b8, 0x39 ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x000000000040fc0a : enter -0x7cb8, -0x3c ; pop rbp ; ret
0x000000000041ef78 : enter 0x42d6, 0 ; jmp rcx
0x000000000042642a : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004231e7 : fadd dword ptr [rdx] ; mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x0000000000404c15 : fadd qword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000427a29 : fbld dword ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x0000000000427a2a : fbld dword ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000042f994 : fcomp qword ptr [rcx] ; add byte ptr [rax], al ; call 0xffffffffd142f957
0x0000000000409e42 : fiadd dword ptr [rcx - 0xa] ; ret 0x4001
0x0000000000406047 : fiadd dword ptr [rcx - 0xa] ; ret 0x4401
0x0000000000402ee0 : fiadd dword ptr [rcx - 0xa] ; ret 0x4801
0x0000000000407a68 : fiadd dword ptr [rcx - 0xa] ; ret 0x8801
0x0000000000410147 : fiadd dword ptr [rcx - 0xa] ; ret 0x8901
0x000000000040581d : fiadd dword ptr [rcx - 0xa] ; ret 0xf01
0x0000000000402fed : fild dword ptr [rcx - 0xa] ; ret
0x0000000000401731 : fild dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000041ff6a : fisub word ptr [r9 + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000041ff6b : fisub word ptr [rcx + rax] ; movzx eax, al ; pop rbp ; ret
0x000000000040c7a8 : fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000414f68 : fmul dword ptr [rax - 0x77] ; ret 0x3948
0x000000000042bc0c : fmul qword ptr [rax - 0x7d] ; ret
0x000000000042d9cc : fmul qword ptr [rbx] ; add byte ptr [rax], al ; pop rsp ; ret
0x000000000042edd8 : fsubr dword ptr [rax - 2] ; jmp rdi
0x0000000000401f49 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042bba9 : hlt ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000427b28 : hlt ; mov rcx, qword ptr [rbp - 8] ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x0000000000401c30 : hlt ; pop rbp ; mov edi, 0x6302e0 ; jmp rax
0x000000000042bacf : hlt ; pop rbp ; ret
0x0000000000403ec4 : in al, dx ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004051f5 : in al, dx ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000403ad7 : in al, dx ; pop rbp ; ret
0x000000000042d8d0 : in al, dx ; pop rbx ; std ; jmp rsp
0x000000000041d593 : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000403a9a : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x000000000040ef3e : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000403744 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000405807 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8141
0x0000000000407300 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040b61f : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8141
0x0000000000402843 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xa3d
0x000000000042aa58 : inc dword ptr [rcx + 0x41f9] ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x000000000042b44e : inc dword ptr [rcx + 0x5af9] ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x000000000042ab0e : inc dword ptr [rcx + 0x5af9] ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x0000000000408007 : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x8b44
0x000000000042d90b : inc esp ; or byte ptr [rax], al ; add ah, cl ; ja 0x42d918 ; jmp rsp
0x000000000042d9d8 : insb byte ptr [rdi], dx ; ret
0x0000000000410cc8 : int 0x80
0x0000000000401c23 : ja 0x401c2a ; pop rbp ; ret
0x0000000000427661 : ja 0x4276ae ; pop rbp ; ret
0x000000000042d911 : ja 0x42d912 ; jmp rsp
0x000000000042f5d9 : ja 0x42f5dc ; call qword ptr [rdx]
0x0000000000401c2f : je 0x401c2d ; pop rbp ; mov edi, 0x6302e0 ; jmp rax
0x000000000042122a : jge 0x42122b ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000042124a : jge 0x42124b ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000042126a : jge 0x42126b ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x00000000004265b0 : jge 0x4265a3 ; mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000042765d : jge 0x42765e ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000040194b : jmp 0x401747
0x0000000000402ffe : jmp 0x403428
0x00000000004031e0 : jmp 0x403473
0x0000000000406eb3 : jmp 0x406935
0x000000000041cb96 : jmp 0x41b8fd
0x000000000041ba2b : jmp 0x41cba2
0x000000000041f7d9 : jmp 0x41f5fb
0x000000000042cf70 : jmp 0x42cf36
0x0000000000423d23 : jmp 0x4904c673
0x0000000000423e65 : jmp 0x4904c7b5
0x0000000000425e60 : jmp 0x4904e7b0
0x0000000000425ecd : jmp 0x4904e81d
0x000000000042719a : jmp 0x4904faea
0x0000000000427207 : jmp 0x4904fb57
0x000000000042f8db : jmp qword ptr [rbx]
0x000000000042f1d3 : jmp qword ptr [rcx]
0x000000000041a15a : jmp qword ptr [rdi]
0x000000000042ee83 : jmp qword ptr [rsi]
0x0000000000401c37 : jmp rax
0x0000000000402347 : jmp rcx
0x000000000042eddb : jmp rdi
0x0000000000401c77 : jmp rdx
0x000000000042ec13 : jmp rsi
0x000000000041964d : jmp rsp
0x0000000000401c60 : jne 0x401c67 ; pop rbp ; ret
0x000000000041ec59 : jne 0x41ec3c ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x000000000041fb51 : jne 0x41fb49 ; mov rax, rdx ; pop rbp ; ret
0x0000000000422166 : jne 0x422130 ; mov r8, qword ptr [rsi] ; mov rsi, qword ptr [r8] ; call rcx
0x0000000000422e68 : jne 0x422e4c ; call rax
0x000000000040f184 : jo 0x40f1e5 ; ret
0x000000000041bbc5 : jo 0x41bb51 ; stc ; add eax, 0xf000000 ; xchg eax, esp ; ret 0xc8b
0x000000000042244f : jo 0x422468 ; mov qword ptr [rbp - 0x48], rdx ; call r8
0x0000000000402f1f : jp 0x402eed ; add byte ptr [rax - 0x77], cl ; ret 0x75e8
0x0000000000407124 : jrcxz 0x407151 ; add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000407123 : jrcxz 0x407152 ; add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x000000000042df69 : jrcxz 0x42df6c ; call rsp
0x0000000000408575 : js 0x4085d5 ; pop rbp ; ret
0x000000000040ddef : js 0x40ddf8 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040e210 : js 0x40e270 ; pop rbp ; ret
0x000000000040751b : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004038c3 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000404feb : lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040751a : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000404fea : lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000042db40 : lodsb al, byte ptr [rsi] ; cmp dh, bh ; call rsp
0x000000000042dd38 : lodsb al, byte ptr [rsi] ; cmp edi, edi ; call rsp
0x000000000042e3b9 : lodsb al, byte ptr [rsi] ; std ; call qword ptr [rsi]
0x000000000042a489 : loop 0x42a4db ; or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x000000000042a661 : loop 0x42a6b3 ; or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x0000000000403ad4 : loopne 0x403b23 ; mov esp, ebp ; pop rbp ; ret
0x0000000000403ad3 : loopne 0x403b24 ; mov esp, ebp ; pop rbp ; ret
0x0000000000407923 : loopne 0x407972 ; mov esp, ebp ; pop rbp ; ret
0x0000000000407922 : loopne 0x407973 ; mov esp, ebp ; pop rbp ; ret
0x000000000040822b : loopne 0x408291 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040e64f : loopne 0x40e6a0 ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040e64e : loopne 0x40e6a1 ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000411c95 : loopne 0x411ce5 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000411c94 : loopne 0x411ce6 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000411fdb : loopne 0x41202b ; add esp, 0x20 ; pop rbp ; ret
0x0000000000411fda : loopne 0x41202c ; add esp, 0x20 ; pop rbp ; ret
0x000000000041fe49 : loopne 0x41fe9a ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000041fe48 : loopne 0x41fe9b ; lea esp, dword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000423c59 : loopne 0x423cbf ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042a2f2 : loopne 0x42a2fa ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042db3c : mov ah, 0x11 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; cmp dh, bh ; call rsp
0x000000000042dd34 : mov ah, 0x19 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; cmp edi, edi ; call rsp
0x000000000042e439 : mov al, -3 ; call qword ptr [rax]
0x0000000000410d0e : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000407f21 : mov al, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004051f3 : mov al, byte ptr [rbp - 0x14] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000407122 : mov al, byte ptr [rbp - 0x1d] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000427a28 : mov al, byte ptr [rbp - 0x21] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041ff69 : mov al, byte ptr [rbp - 0x22] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000421a3c : mov al, byte ptr [rbp - 0x33] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042a919 : mov al, byte ptr [rbp - 5] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042b7b4 : mov al, byte ptr [rbp - 6] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000427b5c : mov al, byte ptr [rdi + 0x1c] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042a84f : mov al, dh ; movzx eax, al ; pop rbp ; ret
0x000000000042a84e : mov al, sil ; movzx eax, al ; pop rbp ; ret
0x000000000042a69f : mov ax, si ; movzx eax, ax ; pop rbp ; ret
0x000000000042a6a3 : mov bh, -0x40 ; pop rbp ; ret
0x00000000004028c4 : mov bl, -0x3b ; add byte ptr [rax - 0x73], cl ; add al, 0x25 ; ret
0x000000000042f999 : mov bl, -1 ; call rax
0x0000000000409071 : mov byte ptr [0x630360], al ; pop rbp ; ret
0x000000000040525c : mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x000000000042cf31 : mov byte ptr [rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], dh ; ret
0x000000000041a151 : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; jmp qword ptr [rdi]
0x0000000000409278 : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret
0x000000000040cb8c : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x000000000040b39e : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x000000000040e376 : mov byte ptr [rcx], 0xf ; test dword ptr [rip - 0x17000000], eax ; ret 1
0x00000000004034ec : mov byte ptr [rdx + 0x1a], 0 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000401c93 : mov byte ptr [rip + 0x22e69e], 1 ; ret
0x0000000000406f92 : mov dh, -0x40 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000420d5f : mov dh, -0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041414e : mov dh, -0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404d0a : mov dh, -0x40 ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004258f2 : mov dh, -0x40 ; add rsp, 0x60 ; pop rbp ; ret
0x000000000042a7e7 : mov dh, -0x40 ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000411033 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x00000000004051f9 : mov dh, -0x40 ; pop rbp ; ret
0x0000000000408c6d : mov dword ptr [0x630350], edi ; pop rbp ; ret
0x000000000040904d : mov dword ptr [0x630358], edi ; pop rbp ; ret
0x00000000004031cf : mov dword ptr [rax - 0xa], 0x858801c7 ; ret 0xfffe
0x000000000040a1da : mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040a328 : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000402029 : mov dword ptr [rbp - 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000422366 : mov dword ptr [rbp - 0x30], eax ; mov qword ptr [rbp - 0x38], rdx ; call r8
0x000000000042236a : mov dword ptr [rbp - 0x38], edx ; call r8
0x0000000000422452 : mov dword ptr [rbp - 0x48], edx ; call r8
0x000000000040856f : mov dword ptr [rbp - 0x58], eax ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000401f47 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042bba7 : mov dword ptr [rbp - 0xc], eax ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x0000000000427b2d : mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x000000000041e0bf : mov dword ptr [rcx + 0x2c], eax ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004231ea : mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x0000000000420b38 : mov dword ptr [rdi + 0x18], 0x95f616 ; pop rbp ; ret
0x0000000000427660 : mov dword ptr [rdi + 0x48], esi ; pop rbp ; ret
0x000000000041ebaa : mov eax, 0x50c48348 ; pop rbp ; ret
0x00000000004211d2 : mov eax, 0x5b000001 ; pop rbp ; ret
0x000000000040e20c : mov eax, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x00000000004116d5 : mov eax, 0xf0658d48 ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000421eae : mov eax, 0xf660000 ; pop rsp ; ret 0xf66
0x0000000000409bda : mov eax, 0xffffffff ; pop rbp ; ret
0x0000000000409af2 : mov eax, dword ptr [rax] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x00000000004126b1 : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040a108 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000411201 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000409554 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004152d9 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x00000000004126ae : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040a105 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004071fb : mov eax, dword ptr [rbp - 0x10] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000409443 : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000403ec2 : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000040a494 : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000041110f : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040a0bd : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040a1d4 : mov eax, dword ptr [rbp - 0x18] ; mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000040f384 : mov eax, dword ptr [rbp - 0x18] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000427d1a : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000411c93 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040e64d : mov eax, dword ptr [rbp - 0x20] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000403ad2 : mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000429c38 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000426e74 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041ec5f : mov eax, dword ptr [rbp - 0x28] ; call rax
0x000000000040a32a : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000412dfb : mov eax, dword ptr [rbp - 0x30] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000423858 : mov eax, dword ptr [rbp - 0x30] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x000000000040fc08 : mov eax, dword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000408c2a : mov eax, dword ptr [rbp - 0x40] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041616d : mov eax, dword ptr [rbp - 0x44] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041eba8 : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040e20a : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000407f1f : mov eax, dword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000408847 : mov eax, dword ptr [rbp - 0x88] ; call qword ptr [rax]
0x0000000000427e8f : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042bacd : mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x000000000042072b : mov eax, dword ptr [rbp - 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407752 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000427896 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000422624 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000414257 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000422f4e : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041ee33 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000426a60 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000422d39 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000042122d : mov eax, dword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000042124d : mov eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000042126d : mov eax, dword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000422169 : mov eax, dword ptr [rsi] ; mov rsi, qword ptr [r8] ; call rcx
0x000000000042a48e : mov eax, edi ; pop rbp ; ret
0x000000000041fb54 : mov eax, edx ; pop rbp ; ret
0x000000000042a6a0 : mov eax, esi ; movzx eax, ax ; pop rbp ; ret
0x000000000042a4c3 : mov eax, esi ; pop rbp ; ret
0x0000000000401cbb : mov ebp, esp ; call rax
0x0000000000401c21 : mov ebp, esp ; ja 0x401c2c ; pop rbp ; ret
0x0000000000409bf2 : mov ebp, esp ; mov eax, 0xffffffff ; pop rbp ; ret
0x0000000000421c2d : mov ebx, 0xf660000 ; pop rsp ; ret 0xf66
0x0000000000414aa6 : mov ecx, 0x10a ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x00000000004143fe : mov ecx, 0xa8 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000402340 : mov ecx, dword ptr [rax*8 + 0x42bcd0] ; jmp rcx
0x0000000000403f18 : mov ecx, dword ptr [rax*8 + 0x42c890] ; jmp rcx
0x000000000040ab57 : mov ecx, dword ptr [rax*8 + 0x42cdf0] ; jmp rcx
0x000000000040b671 : mov ecx, dword ptr [rax*8 + 0x42ce38] ; jmp rcx
0x0000000000410192 : mov ecx, dword ptr [rax*8 + 0x42d2f8] ; jmp rcx
0x000000000041ef75 : mov ecx, dword ptr [rax*8 + 0x42d6c8] ; jmp rcx
0x000000000040a1d7 : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000424152 : mov ecx, dword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000424062 : mov ecx, dword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x00000000004265b3 : mov ecx, dword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000427b2a : mov ecx, dword ptr [rbp - 8] ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x000000000042687a : mov ecx, dword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000042a4ed : mov ecx, eax ; shl edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000042a4bd : mov ecx, eax ; shr edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x0000000000401cb5 : mov edi, 0x62fe20 ; mov rbp, rsp ; call rax
0x0000000000401c32 : mov edi, 0x6302e0 ; jmp rax
0x0000000000401c72 : mov edi, 0x6302e0 ; jmp rdx
0x000000000042765c : mov edi, dword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000421229 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000421249 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000421269 : mov edi, dword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000424066 : mov edi, dword ptr [rcx] ; call rax
0x0000000000422e64 : mov edi, dword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x0000000000424599 : mov edi, dword ptr [rsi] ; call rcx
0x000000000042bc07 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x000000000042bc06 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000424592 : mov edx, dword ptr [rbp - 0x38] ; mov rsi, qword ptr [rdx] ; mov rdi, qword ptr [rsi] ; call rcx
0x000000000042244e : mov esi, dword ptr [rax + 0x10] ; mov qword ptr [rbp - 0x48], rdx ; call r8
0x000000000042216c : mov esi, dword ptr [rax] ; call rcx
0x0000000000422e67 : mov esi, dword ptr [rbp - 0x20] ; call rax
0x0000000000422165 : mov esi, dword ptr [rbp - 0x40] ; mov r8, qword ptr [rsi] ; mov rsi, qword ptr [r8] ; call rcx
0x00000000004265b7 : mov esi, dword ptr [rcx] ; call rax
0x0000000000424596 : mov esi, dword ptr [rdx] ; mov rdi, qword ptr [rsi] ; call rcx
0x0000000000401c70 : mov esi, eax ; mov edi, 0x6302e0 ; jmp rdx
0x000000000041ec5c : mov esi, eax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x000000000041616f : mov esp, 0x50c48348 ; pop rbp ; ret
0x000000000042d9c4 : mov esp, 0xbc00000b ; ret 0xfffd
0x000000000042df64 : mov esp, 0xcc000022 ; jrcxz 0x42df71 ; call rsp
0x000000000042e374 : mov esp, 0xe8000003 ; test al, -3 ; call qword ptr [rsi]
0x0000000000403ad6 : mov esp, ebp ; pop rbp ; ret
0x0000000000408c6c : mov qword ptr [0x630350], rdi ; pop rbp ; ret
0x000000000040904c : mov qword ptr [0x630358], rdi ; pop rbp ; ret
0x0000000000422365 : mov qword ptr [rbp - 0x30], rax ; mov qword ptr [rbp - 0x38], rdx ; call r8
0x0000000000422369 : mov qword ptr [rbp - 0x38], rdx ; call r8
0x0000000000422451 : mov qword ptr [rbp - 0x48], rdx ; call r8
0x000000000042765f : mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x000000000041616e : mov r12d, 0x50c48348 ; pop rbp ; ret
0x0000000000422168 : mov r8, qword ptr [rsi] ; mov rsi, qword ptr [r8] ; call rcx
0x0000000000407f20 : mov r8b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000041eba9 : mov r8d, 0x50c48348 ; pop rbp ; ret
0x000000000040e20b : mov r8d, 0x78c48348 ; pop rbx ; pop rbp ; ret
0x0000000000409af1 : mov rax, qword ptr [rax] ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000411200 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000409553 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040a104 : mov rax, qword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004071fa : mov rax, qword ptr [rbp - 0x10] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000409442 : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000041110e : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040a0bc : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x30 ; pop rbp ; ret
0x000000000040f383 : mov rax, qword ptr [rbp - 0x18] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000411c92 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000403ad1 : mov rax, qword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000426e73 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041ec5e : mov rax, qword ptr [rbp - 0x28] ; call rax
0x0000000000412ac4 : mov rax, qword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040fc07 : mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000408c29 : mov rax, qword ptr [rbp - 0x40] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041eba7 : mov rax, qword ptr [rbp - 0x48] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000407f1e : mov rax, qword ptr [rbp - 0x50] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000408846 : mov rax, qword ptr [rbp - 0x88] ; call qword ptr [rax]
0x0000000000427895 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000422623 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000414256 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000422f4d : mov rax, qword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041ee32 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000426a5f : mov rax, qword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000422d38 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000042122c : mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x000000000042124c : mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x000000000042126c : mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x000000000042a48d : mov rax, rdi ; pop rbp ; ret
0x000000000041fb53 : mov rax, rdx ; pop rbp ; ret
0x0000000000401cba : mov rbp, rsp ; call rax
0x0000000000401c20 : mov rbp, rsp ; ja 0x401c2d ; pop rbp ; ret
0x0000000000409bf1 : mov rbp, rsp ; mov eax, 0xffffffff ; pop rbp ; ret
0x000000000040233f : mov rcx, qword ptr [rax*8 + 0x42bcd0] ; jmp rcx
0x0000000000403f17 : mov rcx, qword ptr [rax*8 + 0x42c890] ; jmp rcx
0x000000000040ab56 : mov rcx, qword ptr [rax*8 + 0x42cdf0] ; jmp rcx
0x000000000040b670 : mov rcx, qword ptr [rax*8 + 0x42ce38] ; jmp rcx
0x0000000000410191 : mov rcx, qword ptr [rax*8 + 0x42d2f8] ; jmp rcx
0x000000000041ef74 : mov rcx, qword ptr [rax*8 + 0x42d6c8] ; jmp rcx
0x0000000000424151 : mov rcx, qword ptr [rbp - 0x10] ; mov rdi, qword ptr [rcx] ; call rax
0x0000000000424061 : mov rcx, qword ptr [rbp - 0x18] ; mov rdi, qword ptr [rcx] ; call rax
0x00000000004265b2 : mov rcx, qword ptr [rbp - 0x30] ; mov rsi, qword ptr [rcx] ; call rax
0x0000000000427b29 : mov rcx, qword ptr [rbp - 8] ; mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0x0000000000426879 : mov rcx, qword ptr [rcx + 8] ; mov rsi, qword ptr [rcx] ; call rax
0x000000000042765b : mov rdi, qword ptr [rbp - 8] ; mov qword ptr [rdi + 0x48], rsi ; pop rbp ; ret
0x0000000000421228 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0x0000000000421248 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0x0000000000421268 : mov rdi, qword ptr [rbp - 8] ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0x0000000000424065 : mov rdi, qword ptr [rcx] ; call rax
0x0000000000422e63 : mov rdi, qword ptr [rcx] ; mov rsi, qword ptr [rbp - 0x20] ; call rax
0x0000000000424598 : mov rdi, qword ptr [rsi] ; call rcx
0x000000000042216b : mov rsi, qword ptr [r8] ; call rcx
0x000000000042244d : mov rsi, qword ptr [rax + 0x10] ; mov qword ptr [rbp - 0x48], rdx ; call r8
0x0000000000422e66 : mov rsi, qword ptr [rbp - 0x20] ; call rax
0x00000000004265b6 : mov rsi, qword ptr [rcx] ; call rax
0x0000000000424595 : mov rsi, qword ptr [rdx] ; mov rdi, qword ptr [rsi] ; call rcx
0x0000000000401c6f : mov rsi, rax ; mov edi, 0x6302e0 ; jmp rdx
0x000000000041ec5b : mov rsi, rax ; mov rax, qword ptr [rbp - 0x28] ; call rax
0x0000000000403ad5 : mov rsp, rbp ; pop rbp ; ret
0x000000000042f35c : movsb byte ptr [rdi], byte ptr [rsi] ; adc eax, dword ptr [rax] ; add byte ptr [rax], dl ; xor edi, edi ; call rdx
0x0000000000406f91 : movzx eax, al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000420d5e : movzx eax, al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041414d : movzx eax, al ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000404d09 : movzx eax, al ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004258f1 : movzx eax, al ; add rsp, 0x60 ; pop rbp ; ret
0x000000000042a7e6 : movzx eax, al ; lea rsp, qword ptr [rbp - 8] ; pop rbx ; pop rbp ; ret
0x0000000000411032 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004051f8 : movzx eax, al ; pop rbp ; ret
0x000000000042a6a2 : movzx eax, ax ; pop rbp ; ret
0x000000000042bc28 : nop dword ptr [rax + rax] ; ret
0x000000000042ebed : or al, 0 ; add byte ptr [rax], dh ; xor al, 0xfffffffffffffffe ; jmp rsp
0x0000000000410193 : or al, 0xffffffffffffffc5 ; clc ; rol byte ptr [rdx], cl ; jmp rcx
0x000000000041ef76 : or al, 0xffffffffffffffc5 ; enter 0x42d6, 0 ; jmp rcx
0x0000000000414aa7 : or al, byte ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x000000000042e7e1 : or bh, dh ; call qword ptr [rdi]
0x000000000040e3d9 : or byte ptr [r15], cl ; xchg eax, ebp ; ret 0x348b
0x0000000000422580 : or byte ptr [r15], cl ; xchg eax, edx ; ret 0x348b
0x00000000004267c3 : or byte ptr [r8 + 0x3b], cl ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x348b
0x000000000040c7a3 : or byte ptr [r8 - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x00000000004267c4 : or byte ptr [rax + 0x3b], cl ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x348b
0x000000000040c7a4 : or byte ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x000000000042d90d : or byte ptr [rax], al ; add ah, cl ; ja 0x42d916 ; jmp rsp
0x000000000042e7dd : or byte ptr [rax], al ; add al, dl ; or bh, dh ; call qword ptr [rdi]
0x000000000042ac3c : or byte ptr [rcx + 0x2038], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x000000000042b07c : or byte ptr [rcx + 0x2138], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x0000000000410abd : or byte ptr [rcx + 0x28f9], al ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x348b
0x0000000000416865 : or byte ptr [rcx + 0x2f9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc8b
0x000000000042a98c : or byte ptr [rcx + 0x3038], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x0000000000401d2c : or byte ptr [rcx + 0x38], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x000000000042af7c : or byte ptr [rcx + 0x6138], al ; add byte ptr [rdi], cl ; popfq ; ret 0x348b
0x0000000000427f52 : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc8b
0x000000000040e3da : or byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x348b
0x0000000000422581 : or byte ptr [rdi], cl ; xchg eax, edx ; ret 0x348b
0x000000000040f74d : or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x000000000040f7ef : or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x00000000004216ec : or cl, ch ; ret
0x0000000000406096 : or dword ptr [rbx - 0x1234b], ecx ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000406561 : or dword ptr [rbx - 0x15f4b], ecx ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000405ded : or dword ptr [rbx - 0xff4b], ecx ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000041195f : or eax, 0x48fffff9 ; add esp, 0x30 ; pop rbp ; ret
0x000000000040a65d : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042a48b : or edi, edx ; mov rax, rdi ; pop rbp ; ret
0x000000000042a4c1 : or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000042a48a : or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x0000000000401c96 : out 0x22, al ; add byte ptr [rcx], al ; ret
0x000000000042a4c0 : out dx, eax ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x00000000004063e3 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042bc1c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040822d : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004063e5 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042bc1e : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004038c7 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042bc20 : pop r14 ; pop r15 ; ret
0x000000000040751f : pop r14 ; pop rbp ; ret
0x00000000004038c9 : pop r15 ; pop rbp ; ret
0x000000000042bc22 : pop r15 ; ret
0x0000000000409050 : pop rax ; add esp, dword ptr [rbx] ; pop rbp ; ret
0x00000000004152df : pop rax ; pop rbx ; pop rbp ; ret
0x000000000042cf60 : pop rbp ; mov byte ptr [rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], dh ; ret
0x0000000000401c92 : pop rbp ; mov byte ptr [rip + 0x22e69e], 1 ; ret
0x0000000000401c31 : pop rbp ; mov edi, 0x6302e0 ; jmp rax
0x0000000000401c6e : pop rbp ; mov rsi, rax ; mov edi, 0x6302e0 ; jmp rdx
0x000000000042bc1b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004063e6 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042bc1f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401c25 : pop rbp ; ret
0x000000000040822c : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004038c6 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040751e : pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000404fee : pop rbx ; pop rbp ; ret
0x000000000042d8d1 : pop rbx ; std ; jmp rsp
0x00000000004038ca : pop rdi ; pop rbp ; ret
0x000000000042bc23 : pop rdi ; ret
0x000000000042b451 : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x000000000042ab11 : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x00000000004038c8 : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000042bc21 : pop rsi ; pop r15 ; ret
0x0000000000407520 : pop rsi ; pop rbp ; ret
0x0000000000423a77 : pop rsp ; add dword ptr [rdi], ecx ; ror dword ptr cs:[rdi], -0x69 ; ret 0x348b
0x000000000042e514 : pop rsp ; add eax, 0xbbf80000 ; std ; call rbx
0x00000000004063e4 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042bc1d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040822e : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042d9d0 : pop rsp ; ret
0x0000000000421c32 : pop rsp ; ret 0xf66
0x000000000041f468 : popfq ; ret 0x348b
0x000000000042aa60 : popfq ; ret 0xc8b
0x000000000041c93a : push 0x5b000001 ; pop rbp ; ret
0x0000000000429063 : push rax ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x0000000000408c70 : push rax ; add esp, dword ptr [rbx] ; pop rbp ; ret
0x00000000004231e6 : push rax ; fadd dword ptr [rdx] ; mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0x0000000000407f25 : push rax ; pop rbp ; ret
0x000000000042f1d0 : push rax ; sbb edi, edi ; jmp qword ptr [rcx]
0x0000000000424593 : push rbp ; enter -0x74b8, 0x32 ; mov rdi, qword ptr [rsi] ; call rcx
0x000000000040c7a7 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000414f67 : push rbp ; fmul dword ptr [rax - 0x77] ; ret 0x3948
0x0000000000401cb4 : push rbp ; mov edi, 0x62fe20 ; mov rbp, rsp ; call rax
0x000000000040e13e : push rbp ; ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x000000000042d210 : push rbx ; ret 0x40
0x000000000040525b : pushfq ; mov byte ptr [rax + rcx - 0xd], -0xa ; ret
0x0000000000402edc : pushfq ; ret
0x0000000000404596 : pushfq ; ret 0x348b
0x0000000000406e3c : pushfq ; ret 0x844
0x0000000000401d6a : pushfq ; ret 0x845
0x0000000000408788 : pushfq ; ret 0xd108
0x000000000042a4be : rcl ebx, -0x11 ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000042a4ee : rcl ebx, -0x19 ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x00000000004002e1 : ret
0x00000000004150a1 : ret 0
0x000000000041f285 : ret 0x108
0x000000000041418a : ret 0x110
0x0000000000401cf0 : ret 0x125
0x000000000040cb95 : ret 0x13
0x0000000000401b52 : ret 0x22e6
0x0000000000401952 : ret 0x22e7
0x0000000000401742 : ret 0x22e8
0x000000000040b3a7 : ret 0x2a
0x0000000000401d35 : ret 0x348b
0x0000000000414f6b : ret 0x3948
0x000000000042cf51 : ret 0x40
0x0000000000409e45 : ret 0x4001
0x0000000000403a71 : ret 0x4240
0x000000000040604a : ret 0x4401
0x0000000000402ee3 : ret 0x4801
0x00000000004041be : ret 0x48b
0x000000000042520c : ret 0x48b0
0x0000000000403570 : ret 0x48f0
0x0000000000418fc0 : ret 0x4ae8
0x000000000040f4c7 : ret 0x4cc0
0x00000000004052d0 : ret 0x4cf0
0x000000000041222a : ret 0x5588
0x0000000000415586 : ret 0x5589
0x000000000041d094 : ret 0x60
0x0000000000402f25 : ret 0x75e8
0x000000000040f750 : ret 0x7ae8
0x0000000000420825 : ret 0x8041
0x0000000000402ed2 : ret 0x8141
0x0000000000420e0e : ret 0x8148
0x0000000000423d26 : ret 0x8348
0x0000000000406e3d : ret 0x844
0x00000000004149aa : ret 0x8445
0x0000000000401d6b : ret 0x845
0x0000000000407a6b : ret 0x8801
0x000000000040b636 : ret 0x8901
0x00000000004037e8 : ret 0x8948
0x000000000040cb1c : ret 0x89a5
0x000000000040800b : ret 0x8b44
0x000000000040c7ab : ret 0x8b48
0x000000000040340f : ret 0x8be8
0x0000000000404713 : ret 0x9588
0x00000000004124e4 : ret 0x96e8
0x000000000040474a : ret 0xa
0x000000000040284a : ret 0xa3d
0x00000000004284de : ret 0xb
0x0000000000402aee : ret 0xb0
0x0000000000423dfe : ret 0xb948
0x000000000040c7c0 : ret 0xbae8
0x0000000000417c4a : ret 0xc0e8
0x0000000000401c55 : ret 0xc148
0x0000000000427c70 : ret 0xc2f6
0x0000000000406ac2 : ret 0xc8b
0x0000000000408789 : ret 0xd108
0x00000000004032c5 : ret 0xd284
0x000000000040f7f2 : ret 0xd8e8
0x0000000000404c29 : ret 0xe280
0x0000000000403f02 : ret 0xe883
0x0000000000401ce7 : ret 0xea81
0x000000000040e08c : ret 0xee8
0x0000000000402858 : ret 0xf01
0x000000000041b89b : ret 0xf280
0x0000000000421c33 : ret 0xf66
0x000000000041fdf2 : ret 0xf748
0x0000000000404c55 : ret 0xf981
0x000000000041aa78 : ret 0xfa81
0x0000000000402ea0 : ret 0xfae8
0x0000000000427c63 : ret 0xfe81
0x0000000000423e77 : ret 0xff3
0x000000000040fc91 : ret 0xff70
0x0000000000419bb6 : ret 0xff81
0x0000000000401dda : ret 0xfffb
0x000000000042d9c9 : ret 0xfffd
0x00000000004031d6 : ret 0xfffe
0x0000000000417fbb : ret 0xffff
0x0000000000405097 : ret 1
0x0000000000415bec : ret 5
0x000000000040e142 : ret 8
0x00000000004049c2 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042d251 : rol byte ptr [rdx], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000410196 : rol byte ptr [rdx], cl ; jmp rcx
0x0000000000423859 : ror byte ptr [r8 - 0x73], 1 ; clc ; pop rbx ; pop rbp ; ret
0x0000000000410cc3 : ror byte ptr [r8 - 0x77], 1 ; int 0x80
0x0000000000408c2b : ror byte ptr [r8 - 0x7d], -0x3c ; pop rbp ; ret
0x0000000000401c5c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401c6b ; pop rbp ; ret
0x000000000042a7e8 : ror byte ptr [rax - 0x73], 0x65 ; clc ; pop rbx ; pop rbp ; ret
0x000000000042385a : ror byte ptr [rax - 0x73], 1 ; clc ; pop rbx ; pop rbp ; ret
0x0000000000411034 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x0000000000410cc4 : ror byte ptr [rax - 0x77], 1 ; int 0x80
0x0000000000403bac : ror byte ptr [rax - 0x77], 1 ; ret 0xb0
0x0000000000404d0b : ror byte ptr [rax - 0x7d], -0x3c ; pop rbp ; ret
0x0000000000422167 : ror byte ptr [rbx + rcx*4 + 6], 0x49 ; mov esi, dword ptr [rax] ; call rcx
0x000000000040e13f : ror byte ptr [rcx - 0x7f], 1 ; ret 8
0x0000000000421b1d : ror dword ptr [rcx - 0x7d], cl ; ret
0x0000000000423a7b : ror dword ptr [rdi], -0x69 ; ret 0x348b
0x0000000000423a7a : ror dword ptr cs:[rdi], -0x69 ; ret 0x348b
0x0000000000401c95 : sahf ; out 0x22, al ; add byte ptr [rcx], al ; ret
0x0000000000415629 : sahf ; ret 0x48b
0x000000000042b456 : sahf ; ret 0x5588
0x000000000042ab16 : sahf ; ret 0xc8b
0x000000000040b634 : sal dh, cl ; ret 0x8901
0x0000000000404c21 : sar dword ptr [rip], 0xf ; xchg eax, ebp ; ret 0xe280
0x0000000000401c5e : sar eax, 1 ; jne 0x401c69 ; pop rbp ; ret
0x0000000000401c5d : sar rax, 1 ; jne 0x401c6a ; pop rbp ; ret
0x000000000042f5d4 : sbb al, 0x16 ; add byte ptr [rax], al ; cwde ; ja 0x42f5e1 ; call qword ptr [rdx]
0x0000000000427b5e : sbb al, 0x24 ; add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x000000000042edd4 : sbb al, 0xe ; add byte ptr [rax], al ; fsubr dword ptr [rax - 2] ; jmp rdi
0x00000000004034ee : sbb al, byte ptr [rax] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042dcf5 : sbb byte ptr [rax], al ; add ah, cl ; sub al, -1 ; call rsp
0x0000000000412ac0 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004154d0 : sbb byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004144fd : sbb cl, byte ptr [rax - 0x7f] ; ret
0x000000000040a8d0 : sbb cl, byte ptr [rcx - 0x7f] ; ret
0x000000000042da89 : sbb dh, bh ; jmp rsp
0x000000000042f995 : sbb dword ptr [rax], eax ; add al, ch ; mov bl, -1 ; call rax
0x0000000000412867 : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000042f1d1 : sbb edi, edi ; jmp qword ptr [rcx]
0x000000000040863f : scasd eax, dword ptr [rdi] ; ret
0x0000000000401cef : scasd eax, dword ptr [rdi] ; ret 0x125
0x0000000000402fcd : scasd eax, dword ptr [rdi] ; ret 0x8141
0x000000000041fb8a : sete al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041fb8c : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000042eab0 : shl byte ptr [rdi], -2 ; jmp rcx
0x0000000000421c56 : shl dword ptr [rsi + 0xf], 0x5c ; ret 0xf66
0x000000000042a4ef : shl edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000042a488 : shl edx, cl ; or rdi, rdx ; mov rax, rdi ; pop rbp ; ret
0x0000000000404748 : shr al, 1 ; ret 0xa
0x000000000042a4bf : shr edi, cl ; or esi, edi ; mov eax, esi ; pop rbp ; ret
0x000000000042aa5a : stc ; add byte ptr [r8], al ; add byte ptr [rdi], cl ; popfq ; ret 0xc8b
0x000000000041bbc7 : stc ; add eax, 0xf000000 ; xchg eax, esp ; ret 0xc8b
0x000000000042b450 : stc ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x5588
0x000000000042ab10 : stc ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xc8b
0x000000000042e2aa : std ; call qword ptr [rax]
0x000000000042e37a : std ; call qword ptr [rsi]
0x000000000042e51a : std ; call rbx
0x000000000042d90a : std ; inc esp ; or byte ptr [rax], al ; add ah, cl ; ja 0x42d919 ; jmp rsp
0x000000000042e042 : std ; jmp rdx
0x000000000042d8d2 : std ; jmp rsp
0x000000000042a91b : sti ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042dcf9 : sub al, -1 ; call rsp
0x000000000041e0c1 : sub al, 0x48 ; add esp, 0x30 ; pop rbp ; ret
0x0000000000409009 : sub eax, 0x48000000 ; mov esp, ebp ; pop rbp ; ret
0x000000000042bca9 : sub esp, 8 ; add rsp, 8 ; ret
0x000000000042bca8 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000042e2a8 : test al, -0x6a ; std ; call qword ptr [rax]
0x000000000042e379 : test al, -3 ; call qword ptr [rsi]
0x00000000004143ff : test al, 0 ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000408571 : test al, 0x48 ; add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000042f699 : test bh, bh ; call qword ptr [rsi]
0x000000000042f6b9 : test bh, bh ; jmp rdi
0x000000000042e03c : test byte ptr [rax], al ; add byte ptr [rax], al ; adc byte ptr [rdi], bh ; std ; jmp rdx
0x000000000042bc2a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000041a154 : test dword ptr [rip - 0x17000000], eax ; jmp qword ptr [rdi]
0x000000000040927b : test dword ptr [rip - 0x17000000], eax ; ret
0x000000000040cb8f : test dword ptr [rip - 0x17000000], eax ; ret 0x13
0x000000000040b3a1 : test dword ptr [rip - 0x17000000], eax ; ret 0x2a
0x00000000004284d8 : test dword ptr [rip - 0x17000000], eax ; ret 0xb
0x000000000040c48c : test dword ptr [rip - 0x17000000], eax ; ret 1
0x0000000000415be6 : test dword ptr [rip - 0x17000000], eax ; ret 5
0x0000000000411ab3 : test eax, 0x48fffffc ; add esp, 0x10 ; pop rbp ; ret
0x000000000042075c : xchg eax, ebp ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041b9da : xchg eax, ebp ; ret
0x0000000000401d34 : xchg eax, ebp ; ret 0x348b
0x000000000041463c : xchg eax, ebp ; ret 0x48b
0x0000000000412229 : xchg eax, ebp ; ret 0x5588
0x0000000000420824 : xchg eax, ebp ; ret 0x8041
0x00000000004149a9 : xchg eax, ebp ; ret 0x8445
0x0000000000411492 : xchg eax, ebp ; ret 0x8b44
0x0000000000413594 : xchg eax, ebp ; ret 0x9588
0x00000000004195df : xchg eax, ebp ; ret 0xc8b
0x0000000000404c28 : xchg eax, ebp ; ret 0xe280
0x0000000000408cfe : xchg eax, edi ; ret 0x348b
0x0000000000422583 : xchg eax, edx ; ret 0x348b
0x000000000042cf50 : xchg eax, edx ; ret 0x40
0x0000000000403998 : xchg eax, esi ; ret 0x348b
0x000000000042e2a9 : xchg eax, esi ; std ; call qword ptr [rax]
0x0000000000402fdf : xchg eax, esp ; ret
0x0000000000407a2c : xchg eax, esp ; ret 0x348b
0x00000000004041bd : xchg eax, esp ; ret 0x48b
0x000000000041fed6 : xchg eax, esp ; ret 0x5588
0x0000000000402ed1 : xchg eax, esp ; ret 0x8141
0x000000000040800a : xchg eax, esp ; ret 0x8b44
0x0000000000404712 : xchg eax, esp ; ret 0x9588
0x0000000000402849 : xchg eax, esp ; ret 0xa3d
0x0000000000406ac1 : xchg eax, esp ; ret 0xc8b
0x00000000004032c4 : xchg eax, esp ; ret 0xd284
0x000000000041b89a : xchg eax, esp ; ret 0xf280
0x0000000000404c54 : xchg eax, esp ; ret 0xf981
0x000000000041aa77 : xchg eax, esp ; ret 0xfa81
0x0000000000427c62 : xchg eax, esp ; ret 0xfe81
0x0000000000419bb5 : xchg eax, esp ; ret 0xff81
0x000000000041fb8b : xchg eax, esp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x000000000042a48c : xlatb ; mov rax, rdi ; pop rbp ; ret
0x0000000000403407 : xor al, 0x25 ; cmp esi, eax ; add byte ptr [rax - 0x77], cl ; ret 0x8be8
0x0000000000402e98 : xor al, 0x25 ; cmp esi, eax ; add byte ptr [rax - 0x77], cl ; ret 0xfae8
0x0000000000402f1d : xor al, 0x25 ; jp 0x402eef ; add byte ptr [rax - 0x77], cl ; ret 0x75e8
0x000000000042ebec : xor al, 0xc ; add byte ptr [rax], al ; xor byte ptr [rsi + rdi*8], dh ; jmp rsp
0x000000000042ebf1 : xor al, 0xfffffffffffffffe ; jmp rsp
0x000000000042cf68 : xor bl, al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, ch ; ret
0x000000000042cf38 : xor bl, al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; ret
0x000000000041f27e : xor byte ptr [r8 - 0x75], cl ; adc byte ptr [rax - 0x7f], cl ; ret 0x108
0x000000000041f27f : xor byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7f], cl ; ret 0x108
0x000000000040f747 : xor byte ptr [rax - 0x75], cl ; add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0x7ae8
0x000000000040f7e9 : xor byte ptr [rax - 0x75], cl ; add dword ptr [rax - 0x75], ecx ; or cl, byte ptr [rax - 0x77] ; ret 0xd8e8
0x000000000042eb50 : xor byte ptr [rax], 0xfe ; call rcx
0x00000000004096a3 : xor byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348b
0x0000000000427d16 : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000042ebf0 : xor byte ptr [rsi + rdi*8], dh ; jmp rsp
0x0000000000424597 : xor cl, byte ptr [rax - 0x75] ; call rcx
0x000000000042eb51 : xor dh, bh ; call rcx
0x000000000042f361 : xor edi, edi ; call rdx
0x000000000040a326 : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
