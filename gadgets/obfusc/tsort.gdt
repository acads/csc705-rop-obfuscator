0x000000000041770e : adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x00000000004074ba : adc cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x000000000041f2d8 : adc cl, byte ptr [rax - 1] ; ret 0x1be
0x000000000041f32d : adc cl, byte ptr [rax - 1] ; ret 0x8948
0x0000000000417081 : adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x000000000042149b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041820b : adc eax, 0x558abda1 ; ret
0x0000000000403d27 : adc eax, 0xe3b9a58a ; cmpsb byte ptr [rsi], byte ptr [rdi] ; wait ; ret
0x000000000041b7e9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000406c7d : add al, 0 ; add byte ptr [rbx - 0x30d23fbb], cl ; ret 0xd763
0x0000000000406ee9 : add al, 0 ; add cl, ch ; ret 1
0x0000000000426c3a : add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000429efc : add al, 2 ; add byte ptr [rax], al ; and dl, 0xfd ; call qword ptr [rcx]
0x000000000042a497 : add al, bl ; xor al, 0xffffffffffffffff ; jmp qword ptr [rcx]
0x000000000041c9a8 : add al, ch ; ret 0xfe48
0x000000000042a63f : add al, dh ; jno 0x42a646 ; call qword ptr [rdx]
0x0000000000406879 : add bh, al ; in al, dx ; ret
0x00000000004074df : add bh, al ; les r13d, ptr [rip - 0x16330ae4] ; ret
0x0000000000421174 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000418049 : add bh, al ; test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x00000000004290cf : add bl, dh ; ret
0x0000000000428da2 : add byte ptr [r8], al ; add byte ptr [rcx], al ; ret 0xea81
0x0000000000429004 : add byte ptr [r8], al ; add byte ptr [rcx], ch ; ret 0x5589
0x0000000000406864 : add byte ptr [rax + 0xf012400], dh ; mov dh, -0x40 ; pop rbp ; ret
0x000000000041c7ab : add byte ptr [rax - 0x75], cl ; clc ; mov rsp, rbp ; pop rbp ; ret
0x0000000000407cf2 : add byte ptr [rax - 0x75], cl ; fmul dword ptr [r8 - 0x75] ; jge 0x407ce4 ; call rax
0x000000000040802a : add byte ptr [rax - 0x75], cl ; fmul dword ptr [r8 - 0x75] ; jge 0x40801c ; call rax
0x0000000000401da6 : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000429efa : add byte ptr [rax], al ; add al, 2 ; add byte ptr [rax], al ; and dl, 0xfd ; call qword ptr [rcx]
0x000000000041c9a6 : add byte ptr [rax], al ; add al, ch ; ret 0xfe48
0x0000000000421172 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x00000000004290cd : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000401da4 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004290cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000403675 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000403632 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000040679f : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040b3fa : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x38] ; call qword ptr [rax]
0x000000000041d98b : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004290cc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000404732 : add byte ptr [rax], al ; add byte ptr [rbx + 0x1a2da445], cl ; ret 0x396c
0x00000000004080de : add byte ptr [rax], al ; add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x000000000041b252 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000404b65 : add byte ptr [rax], al ; add byte ptr [rbx + 0x722da445], cl ; ret
0x000000000041f933 : add byte ptr [rax], al ; add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x0000000000406cc8 : add byte ptr [rax], al ; add byte ptr [rbx - 0x2fd23fbb], cl ; ret 0xd763
0x0000000000406326 : add byte ptr [rax], al ; add byte ptr [rbx - 0x54d227bb], cl ; cld ; ret 0x8948
0x000000000042283c : add byte ptr [rax], al ; add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x0000000000422299 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x0000000000428da3 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xea81
0x0000000000429005 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x5589
0x00000000004210e0 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8b48
0x0000000000428171 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x000000000040563f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000427288 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000403409 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000403634 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000042106a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x00000000004056c5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000402433 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000041b7eb : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041ae70 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004064b5 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004063f0 : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000401a00 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004094e9 : add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040122b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000042a61a : add byte ptr [rax], al ; and al, 9 ; add byte ptr [rax], al ; xor byte ptr [rcx - 1], dh ; call rdx
0x0000000000429efe : add byte ptr [rax], al ; and dl, 0xfd ; call qword ptr [rcx]
0x000000000042a496 : add byte ptr [rax], al ; fdiv dword ptr [rdi + rdi*8] ; jmp qword ptr [rcx]
0x000000000042a36a : add byte ptr [rax], al ; je 0x42a37d ; add byte ptr [rax], al ; nop ; sub edi, edi ; call rdx
0x0000000000401449 : add byte ptr [rax], al ; jmp 0x401249
0x0000000000428de8 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040b3fc : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x38] ; call qword ptr [rax]
0x0000000000401da5 : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000042a36e : add byte ptr [rax], al ; nop ; sub edi, edi ; call rdx
0x000000000042a63a : add byte ptr [rax], al ; or dword ptr [rax], r8d ; add al, dh ; jno 0x42a64b ; call qword ptr [rdx]
0x00000000004023d1 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000041b253 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000042a38e : add byte ptr [rax], al ; push rax ; sub edi, edi ; call qword ptr [rbx]
0x00000000004290ce : add byte ptr [rax], al ; ret
0x000000000042a61e : add byte ptr [rax], al ; xor byte ptr [rcx - 1], dh ; call rdx
0x000000000042a457 : add byte ptr [rax], bh ; xor bh, bh ; jmp qword ptr [rbx]
0x000000000042a61f : add byte ptr [rax], dh ; jno 0x42a626 ; call rdx
0x0000000000429b23 : add byte ptr [rax], dl ; cmp edi, edi ; jmp rax
0x0000000000404734 : add byte ptr [rbx + 0x1a2da445], cl ; ret 0x396c
0x00000000004051c0 : add byte ptr [rbx + 0x1b2da445], cl ; ret 0x396c
0x00000000004080e0 : add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x000000000041b254 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000404b67 : add byte ptr [rbx + 0x722da445], cl ; ret
0x0000000000404dbf : add byte ptr [rbx + 0x732da445], cl ; ret
0x0000000000403b7f : add byte ptr [rbx - 0x1cd23bbb], cl ; cmpsb byte ptr [rsi], byte ptr [rdi] ; wait ; ret
0x0000000000403b3d : add byte ptr [rbx - 0x1dd23bbb], cl ; cmpsb byte ptr [rsi], byte ptr [rdi] ; wait ; ret
0x000000000041f935 : add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x000000000041f8ea : add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x0000000000406cca : add byte ptr [rbx - 0x2fd23fbb], cl ; ret 0xd763
0x0000000000406c7f : add byte ptr [rbx - 0x30d23fbb], cl ; ret 0xd763
0x0000000000406328 : add byte ptr [rbx - 0x54d227bb], cl ; cld ; ret 0x8948
0x000000000042283e : add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x0000000000409897 : add byte ptr [rbx - 0x6dd237bb], cl ; jge 0x40987a ; ret
0x000000000040984c : add byte ptr [rbx - 0x6ed237bb], cl ; jge 0x40982f ; ret
0x0000000000428de9 : add byte ptr [rbx - 0x76b71fbb], cl ; in al, dx ; pop rbp ; ret
0x000000000042229b : add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x000000000040650a : add byte ptr [rcx + rax], ah ; movzx eax, al ; pop rbp ; ret
0x000000000042a61b : add byte ptr [rcx + rcx], ah ; add byte ptr [rax], al ; xor byte ptr [rcx - 1], dh ; call rdx
0x000000000042a63b : add byte ptr [rcx + rcx], al ; add al, dh ; jno 0x42a64a ; call qword ptr [rdx]
0x00000000004023cf : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401678 : add byte ptr [rcx], al ; ret
0x0000000000428da5 : add byte ptr [rcx], al ; ret 0xea81
0x0000000000429007 : add byte ptr [rcx], ch ; ret 0x5589
0x00000000004210e2 : add byte ptr [rcx], ch ; ret 0x8b48
0x000000000042a453 : add byte ptr [rdi + rax], bl ; add byte ptr [rax], bh ; xor bh, bh ; jmp qword ptr [rbx]
0x0000000000428173 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000405641 : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000042728a : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000040340b : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000403636 : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000042106c : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x00000000004056c7 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000402435 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000429efb : add byte ptr [rdx + rax], al ; add byte ptr [rax], al ; and dl, 0xfd ; call qword ptr [rcx]
0x000000000041817c : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x0000000000404eff : add cl, ch ; ret
0x0000000000405300 : add cl, ch ; ret 1
0x000000000041f184 : add dword ptr [rcx + 0xf], eax ; xchg eax, ebx ; ret 0x8445
0x00000000004282f2 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x000000000041e8ee : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000040650c : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401674 : add eax, 0x229c26 ; add ebx, esi ; ret
0x000000000040a458 : add eax, 0x92b80000 ; jge 0x40a439 ; ret
0x000000000040a457 : add eax, 0x92b80000 ; jge 0x40a43a ; ret
0x00000000004051be : add eax, dword ptr [rax] ; add byte ptr [rbx + 0x1b2da445], cl ; ret 0x396c
0x0000000000407ad5 : add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x000000000040163b : add eax, edx ; sar rax, 1 ; jne 0x40164c ; pop rbp ; ret
0x0000000000401679 : add ebx, esi ; ret
0x000000000041f67e : add edi, eax ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp rsp
0x000000000041b7ee : add esp, 0x10 ; pop rbp ; ret
0x00000000004023cd : add esp, 0x100 ; pop rbp ; ret
0x0000000000407fe4 : add esp, 0x160 ; pop rbp ; ret
0x0000000000407511 : add esp, 0x190 ; pop rbp ; ret
0x000000000042134c : add esp, 0x1a0 ; pop rbp ; ret
0x000000000041e638 : add esp, 0x1e0 ; pop rbp ; ret
0x000000000040929d : add esp, 0x20 ; pop rbp ; ret
0x000000000040a8e8 : add esp, 0x280 ; pop rbp ; ret
0x00000000004039d2 : add esp, 0x2c0 ; pop rbp ; ret
0x00000000004064b8 : add esp, 0x30 ; pop rbp ; ret
0x00000000004063f3 : add esp, 0x40 ; pop rbp ; ret
0x00000000004060ba : add esp, 0x420 ; pop rbp ; ret
0x0000000000426e39 : add esp, 0x440 ; pop rbp ; ret
0x0000000000401a03 : add esp, 0x50 ; pop rbp ; ret
0x00000000004018e1 : add esp, 0x60 ; pop rbp ; ret
0x00000000004094ec : add esp, 0x70 ; pop rbp ; ret
0x000000000040924f : add esp, 0x80 ; pop rbp ; ret
0x0000000000421b1d : add esp, 0x90 ; pop rbp ; ret
0x000000000041d946 : add esp, 0xa0 ; pop rbp ; ret
0x000000000041b74b : add esp, 0xb0 ; pop rbp ; ret
0x000000000040bafa : add esp, 0xd0 ; pop rbp ; ret
0x0000000000422a8e : add esp, 0xe0 ; pop rbp ; ret
0x000000000042423f : add esp, 0xf0 ; pop rbp ; ret
0x000000000040c103 : add esp, 8 ; pop rbp ; ret
0x000000000040122e : add esp, 8 ; ret
0x000000000040163a : add rax, rdx ; sar rax, 1 ; jne 0x40164d ; pop rbp ; ret
0x000000000041b7ed : add rsp, 0x10 ; pop rbp ; ret
0x00000000004023cc : add rsp, 0x100 ; pop rbp ; ret
0x0000000000407fe3 : add rsp, 0x160 ; pop rbp ; ret
0x0000000000407510 : add rsp, 0x190 ; pop rbp ; ret
0x000000000042134b : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000041e637 : add rsp, 0x1e0 ; pop rbp ; ret
0x000000000040929c : add rsp, 0x20 ; pop rbp ; ret
0x000000000040a8e7 : add rsp, 0x280 ; pop rbp ; ret
0x00000000004039d1 : add rsp, 0x2c0 ; pop rbp ; ret
0x00000000004064b7 : add rsp, 0x30 ; pop rbp ; ret
0x00000000004063f2 : add rsp, 0x40 ; pop rbp ; ret
0x00000000004060b9 : add rsp, 0x420 ; pop rbp ; ret
0x0000000000426e38 : add rsp, 0x440 ; pop rbp ; ret
0x0000000000401a02 : add rsp, 0x50 ; pop rbp ; ret
0x00000000004018e0 : add rsp, 0x60 ; pop rbp ; ret
0x00000000004094eb : add rsp, 0x70 ; pop rbp ; ret
0x000000000040924e : add rsp, 0x80 ; pop rbp ; ret
0x0000000000421b1c : add rsp, 0x90 ; pop rbp ; ret
0x000000000041d945 : add rsp, 0xa0 ; pop rbp ; ret
0x000000000041b74a : add rsp, 0xb0 ; pop rbp ; ret
0x000000000040baf9 : add rsp, 0xd0 ; pop rbp ; ret
0x0000000000422a8d : add rsp, 0xe0 ; pop rbp ; ret
0x000000000042423e : add rsp, 0xf0 ; pop rbp ; ret
0x000000000040c102 : add rsp, 8 ; pop rbp ; ret
0x000000000040122d : add rsp, 8 ; ret
0x0000000000428dad : and al, 0xffffffffffffff81 ; ret 0x61
0x000000000042a211 : and al, 0xffffffffffffffff ; jmp qword ptr [rbx]
0x000000000041e8ed : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040650b : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042a61c : and al, 9 ; add byte ptr [rax], al ; xor byte ptr [rcx - 1], dh ; call rdx
0x0000000000401677 : and al, byte ptr [rax] ; add ebx, esi ; ret
0x0000000000421fcb : and byte ptr [rsi + 0x58], ah ; jb 0x422002 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000042a081 : and dh, bh ; call qword ptr [rdx]
0x0000000000429f00 : and dl, 0xfd ; call qword ptr [rcx]
0x00000000004173b1 : and eax, 0x75b4b9d3 ; ret
0x0000000000407f1d : call 0x4075c6
0x0000000000408004 : call 0x4075c8
0x00000000004223c5 : call 0x422489
0x0000000000422ddd : call 0xffffffffaca2f011
0x0000000000422ddc : call 0xffffffffaca2f012
0x000000000041f161 : call 0xffffffffb883f16d
0x000000000041ae69 : call 0xffffffffe90437b9
0x000000000041ae68 : call 0xffffffffe90437ba
0x000000000040668d : call 0xfffffffff6ce28c1
0x000000000040668c : call 0xfffffffff6ce28c2
0x00000000004290a9 : call qword ptr [r12 + rbx*8]
0x000000000040b402 : call qword ptr [rax]
0x000000000041c62e : call qword ptr [rbx]
0x0000000000404ee3 : call qword ptr [rcx]
0x000000000041a2f4 : call qword ptr [rdi]
0x00000000004162db : call qword ptr [rdx]
0x00000000004290aa : call qword ptr [rsp + rbx*8]
0x000000000040169d : call rax
0x000000000041855b : call rcx
0x0000000000419f34 : call rdi
0x0000000000407e6a : call rdx
0x000000000040808b : call rsp
0x000000000041c9a5 : cdq ; add byte ptr [rax], al ; add al, ch ; ret 0xfe48
0x000000000040a8e6 : clc ; add rsp, 0x280 ; pop rbp ; ret
0x0000000000426e37 : clc ; add rsp, 0x440 ; pop rbp ; ret
0x0000000000421727 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x00000000004237c9 : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x000000000040163f : clc ; jne 0x401648 ; pop rbp ; ret
0x000000000041c7af : clc ; mov rsp, rbp ; pop rbp ; ret
0x000000000040d93d : clc ; ret 0x77a8
0x000000000042341e : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000042423d : cld ; add rsp, 0xf0 ; pop rbp ; ret
0x000000000040810f : cld ; jmp 0x40817c
0x000000000040810e : cld ; jmp 0x40817d
0x000000000040632e : cld ; ret 0x8948
0x000000000040630a : cld ; ret 0x8b48
0x0000000000421fd0 : cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000041e7c6 : cli ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000407ad4 : cmc ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x0000000000428dac : cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x0000000000420eeb : cmc ; ret 0x4f0b
0x0000000000429b35 : cmp al, -1 ; jmp qword ptr [rax]
0x0000000000418ed8 : cmp al, ch ; ret 0xfe86
0x0000000000421081 : cmp cl, byte ptr [rsi - 0x946182f] ; ret 0x4f0b
0x00000000004015fd : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401610 ; pop rbp ; ret
0x0000000000429b25 : cmp edi, edi ; jmp rax
0x0000000000418207 : cmp esp, dword ptr [rbp - 0x47] ; push -0x75425eeb ; push rbp ; ret
0x0000000000403b43 : cmpsb byte ptr [rsi], byte ptr [rdi] ; wait ; ret
0x000000000041770b : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x000000000041707e : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x0000000000417883 : dec dword ptr [rax - 0x75] ; or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x00000000004220fd : dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x0000000000426996 : dec dword ptr [rax - 0x77] ; ret 0x8148
0x00000000004201bb : dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004087fb : dec dword ptr [rbx + 0x3d8b4830] ; ret
0x0000000000420ee6 : dec dword ptr [rcx - 0xa167e3f] ; ret 0x4f0b
0x0000000000406ee5 : dec dword ptr [rdi] ; test al, al ; add al, 0 ; add cl, ch ; ret 1
0x00000000004052fa : dec dword ptr [rdi] ; test byte ptr [rbp + rcx], ch ; add cl, ch ; ret 1
0x000000000040d61a : dec dword ptr [rdi] ; test byte ptr [rcx], ch ; ret 0
0x0000000000409cd8 : dec dword ptr [rdi] ; test cl, al ; or eax, dword ptr [rax] ; add cl, ch ; ret
0x0000000000404ef9 : dec dword ptr [rdi] ; test dh, bh ; or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000407ad1 : dec dword ptr [rdi] ; test dh, ch ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x00000000004267c3 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x00000000004056c3 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040a870 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042a498 : fdiv dword ptr [rdi + rdi*8] ; jmp qword ptr [rcx]
0x0000000000427368 : fld qword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x0000000000407cf5 : fmul dword ptr [r8 - 0x75] ; jge 0x407ce1 ; call rax
0x000000000040802d : fmul dword ptr [r8 - 0x75] ; jge 0x408019 ; call rax
0x0000000000422527 : fmul dword ptr [r9 - 0x57167e3f] ; ret
0x00000000004074b7 : fmul dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x0000000000407cf6 : fmul dword ptr [rax - 0x75] ; jge 0x407ce0 ; call rax
0x000000000040802e : fmul dword ptr [rax - 0x75] ; jge 0x408018 ; call rax
0x000000000040b2d2 : fmul dword ptr [rcx - 0x4efa38e6] ; jmp qword ptr [rcx]
0x0000000000422528 : fmul dword ptr [rcx - 0x57167e3f] ; ret
0x00000000004290ac : fmul qword ptr [rax - 0x7d] ; ret
0x00000000004056db : fsubr st(0) ; jmp rbx
0x00000000004213d3 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000422a8c : hlt ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000040c101 : hlt ; add rsp, 8 ; pop rbp ; ret
0x0000000000401610 : hlt ; pop rbp ; mov edi, 0x62b248 ; jmp rax
0x00000000004220fb : idiv edi ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x0000000000409318 : in al, 0x2d ; ret 0xc226
0x0000000000423b81 : in al, 0x48 ; add esp, 0xb0 ; pop rbp ; ret
0x00000000004023cb : in al, dx ; add rsp, 0x100 ; pop rbp ; ret
0x00000000004067ae : in al, dx ; jmp 0x406894
0x00000000004067ad : in al, dx ; jmp 0x406895
0x0000000000422e9c : in al, dx ; jmp 0x422f19
0x0000000000422e9b : in al, dx ; jmp 0x422f1a
0x0000000000401da9 : in al, dx ; pop rbp ; ret
0x000000000040687c : in al, dx ; ret
0x000000000040b361 : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8445
0x0000000000429b1f : inc eax ; or al, byte ptr [rax] ; add byte ptr [rax], dl ; cmp edi, edi ; jmp rax
0x000000000041d317 : int 0x5b
0x0000000000401603 : ja 0x40160a ; pop rbp ; ret
0x0000000000421fce : jb 0x421fff ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000040160f : je 0x40160d ; pop rbp ; mov edi, 0x62b248 ; jmp rax
0x000000000042a36c : je 0x42a37b ; add byte ptr [rax], al ; nop ; sub edi, edi ; call rdx
0x0000000000407cf9 : jge 0x407cdd ; call rax
0x0000000000408031 : jge 0x408015 ; call rax
0x0000000000409852 : jge 0x409829 ; ret
0x000000000040989d : jge 0x409874 ; ret
0x000000000040a45d : jge 0x40a434 ; ret
0x000000000040a910 : jge 0x40a8e7 ; ret
0x00000000004167a6 : jge 0x41672b ; ret 0xffd5
0x0000000000417270 : jge 0x417250 ; shr cl, cl ; ret 0x3b
0x000000000040144b : jmp 0x401247
0x0000000000405ea1 : jmp 0x4062dd
0x00000000004067af : jmp 0x406893
0x0000000000407d66 : jmp 0x408070
0x0000000000408110 : jmp 0x40817b
0x00000000004179c0 : jmp 0x41ae40
0x00000000004158c4 : jmp 0x41ae41
0x0000000000416c91 : jmp 0x41ae42
0x000000000041c9a4 : jmp 0x41ca48
0x000000000042030b : jmp 0x420d77
0x0000000000420248 : jmp 0x420d79
0x0000000000422373 : jmp 0x4223d8
0x0000000000422e9d : jmp 0x422f18
0x0000000000426cd6 : jmp 0x426fb8
0x0000000000420eea : jmp 0x4f4dd1e6
0x00000000004092d4 : jmp 0xffffffffb602b99d
0x000000000041a795 : jmp qword ptr [rax]
0x000000000042a213 : jmp qword ptr [rbx]
0x000000000040b2cc : jmp qword ptr [rcx]
0x0000000000418447 : jmp qword ptr [rdi]
0x000000000042117a : jmp qword ptr [rdx]
0x0000000000401617 : jmp rax
0x00000000004056dd : jmp rbx
0x00000000004177ca : jmp rcx
0x0000000000416df2 : jmp rdi
0x0000000000401657 : jmp rdx
0x00000000004045a9 : jmp rsi
0x00000000004170a8 : jmp rsp
0x0000000000401640 : jne 0x401647 ; pop rbp ; ret
0x0000000000407f1b : jne 0x407efd ; call 0x4075c8
0x000000000041ea7f : jno 0x41eace ; ret
0x000000000041ead3 : jno 0x41eb22 ; ret
0x000000000041f167 : jno 0x41f1b6 ; ret
0x000000000042a621 : jno 0x42a624 ; call rdx
0x000000000042a641 : jno 0x42a644 ; call qword ptr [rdx]
0x00000000004094ee : jo 0x40954f ; ret
0x00000000004106be : jo 0x4106ca ; ret
0x000000000041232e : jo 0x41233a ; ret
0x000000000041587d : jo 0x415889 ; ret
0x000000000041cb64 : jo 0x41cbc5 ; ret
0x0000000000403b84 : jrcxz 0x403b2f ; wait ; ret
0x0000000000403d2b : jrcxz 0x403cd6 ; wait ; ret
0x0000000000403d44 : jrcxz 0x403cef ; wait ; ret
0x000000000040a295 : js 0x40a229 ; test dword ptr [rbp + rdi*8 - 0x7bf00001], esp ; ret
0x000000000041726e : lcall ptr [rbx - 0x162d2583] ; ret 0x3b
0x000000000041836e : lcall ptr [rsi] ; pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x0000000000408916 : lea eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040b4d3 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000041ce59 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040b4d2 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004074e1 : les r13d, ptr [rip - 0x16330ae4] ; ret
0x0000000000415bce : ljmp ptr [rdi] ; ret 0x23da
0x0000000000401da3 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000403b42 : loop 0x403aed ; wait ; ret
0x0000000000429f01 : loop 0x429f02 ; call qword ptr [rcx]
0x0000000000418bd5 : loope 0x418ba3 ; jmp 0x41ae43
0x000000000040929b : loopne 0x4092eb ; add esp, 0x20 ; pop rbp ; ret
0x000000000040929a : loopne 0x4092ec ; add esp, 0x20 ; pop rbp ; ret
0x000000000040cfb3 : loopne 0x40d006 ; lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000041c55d : loopne 0x41c5c3 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041d944 : loopne 0x41d997 ; add esp, 0xa0 ; pop rbp ; ret
0x000000000041e63a : loopne 0x41e642 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000421a33 : loopne 0x421a3c ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004223be : loopne 0x42240e ; add esp, 0x60 ; pop rbp ; ret
0x00000000004223bd : loopne 0x42240f ; add esp, 0x60 ; pop rbp ; ret
0x0000000000422a90 : loopne 0x422a97 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000423422 : loopne 0x423429 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000428dec : loopne 0x428e3b ; mov esp, ebp ; pop rbp ; ret
0x0000000000428deb : loopne 0x428e3c ; mov esp, ebp ; pop rbp ; ret
0x000000000042903c : loopne 0x42908b ; mov esp, ebp ; pop rbp ; ret
0x000000000042903b : loopne 0x42908c ; mov esp, ebp ; pop rbp ; ret
0x000000000041679d : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000416877 : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000414825 : mov ah, 0x75 ; ret
0x0000000000403d28 : mov ah, byte ptr [rbp - 0x64591c47] ; ret
0x000000000041d333 : mov al, -0x47 ; ret
0x000000000042649f : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000041b74d : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000406865 : mov al, 0 ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042765d : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042732a : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042758d : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004087f9 : mov bh, bh ; dec dword ptr [rbx + 0x3d8b4830] ; ret
0x000000000040e1c5 : mov bl, 0x75 ; ret
0x0000000000404cca : mov byte ptr [rdi - 0x35], al ; ret 0x8589
0x0000000000405e3b : mov byte ptr [rdi - 0x35], al ; ret 0xfb9
0x0000000000401673 : mov byte ptr [rip + 0x229c26], 1 ; ret
0x000000000041601f : mov ch, byte ptr [rdx - 0x47] ; pop rbp ; pop rcx ; ret 0x1b2
0x00000000004282f4 : mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x000000000041e8f0 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000040650e : mov dh, -0x40 ; pop rbp ; ret
0x0000000000428daa : mov dl, -0x34 ; cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x0000000000406877 : mov dl, 0x62 ; add bh, al ; in al, dx ; ret
0x0000000000403673 : mov dl, 0x62 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000403630 : mov dl, 0x62 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000040679d : mov dl, 0x62 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000406508 : mov dl, 0x62 ; add byte ptr [rcx + rax], ah ; movzx eax, al ; pop rbp ; ret
0x0000000000428021 : mov dr1, word ptr [rcx + rcx*4 - 0x7bf05bbb] ; ret 2
0x000000000040c739 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000040c30f : mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x00000000004067ac : mov dword ptr [rbp - 0x14], eax ; jmp 0x406896
0x0000000000422e9a : mov dword ptr [rbp - 0x14], eax ; jmp 0x422f1b
0x0000000000407e64 : mov dword ptr [rbp - 0x15c], ecx ; call rdx
0x0000000000409299 : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000407d63 : mov dword ptr [rbp - 0x2c], eax ; jmp 0x408073
0x000000000041c9a1 : mov dword ptr [rbp - 0x44], eax ; jmp 0x41ca4b
0x0000000000420308 : mov dword ptr [rbp - 0x6c], eax ; jmp 0x420d7a
0x00000000004213d1 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000040ca16 : mov dword ptr [rcx + 0x30], eax ; mov rsp, rbp ; pop rbp ; ret
0x000000000041d988 : mov dword ptr [rdi + 8], 0 ; pop rbp ; ret
0x000000000041e7c4 : mov dword ptr [rdx + rdi*8], ebx ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000040c5bd : mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000403e17 : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042223b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042240e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000408f1e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000422d15 : mov eax, dword ptr [rbp - 0x18] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040c73c : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004223bc : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000428dea : mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000407cf4 : mov eax, dword ptr [rbp - 0x28] ; mov rdi, qword ptr [rbp - 0x20] ; call rax
0x000000000040b3ff : mov eax, dword ptr [rbp - 0x38] ; call qword ptr [rax]
0x000000000040c5bf : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000040c0ff : mov eax, dword ptr [rbp - 0xc] ; add rsp, 8 ; pop rbp ; ret
0x000000000041c7ad : mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040c5be : mov eax, dword ptr ds:[rbp - 0x38] ; pop rbp ; ret
0x0000000000418fd8 : mov ebp, 0xe19c53ba ; ret
0x000000000040169b : mov ebp, esp ; call rax
0x0000000000401601 : mov ebp, esp ; ja 0x40160c ; pop rbp ; ret
0x000000000040c30c : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x000000000040b3f9 : mov edi, 0 ; mov rax, qword ptr [rbp - 0x38] ; call qword ptr [rax]
0x0000000000401695 : mov edi, 0x62ae20 ; mov rbp, rsp ; call rax
0x0000000000401612 : mov edi, 0x62b248 ; jmp rax
0x0000000000401652 : mov edi, 0x62b248 ; jmp rdx
0x0000000000415877 : mov edi, 0xb8000055 ; wait ; jo 0x41588f ; ret
0x0000000000407cf8 : mov edi, dword ptr [rbp - 0x20] ; call rax
0x00000000004290a7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x00000000004290a6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000426c4e : mov edx, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000041603b : mov edx, 0x595db993 ; ret 0x8b48
0x0000000000416eb2 : mov esi, 0x39443e04 ; ret 0xf41
0x0000000000426c37 : mov esi, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000407f1a : mov esi, dword ptr [rbp - 0x28] ; call 0x4075c9
0x0000000000401650 : mov esi, eax ; mov edi, 0x62b248 ; jmp rdx
0x000000000041c9a3 : mov esp, 0x99e9 ; add al, ch ; ret 0xfe48
0x0000000000401da8 : mov esp, ebp ; pop rbp ; ret
0x000000000040ca15 : mov qword ptr [rcx + 0x30], rax ; mov rsp, rbp ; pop rbp ; ret
0x000000000041d987 : mov qword ptr [rdi + 8], 0 ; pop rbp ; ret
0x000000000041e7c3 : mov qword ptr [rdx + rdi*8], rbx ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000041c9a2 : mov r12d, 0x99e9 ; add al, ch ; ret 0xfe48
0x0000000000403e16 : mov rax, qword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042223a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042240d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000408f1d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004223bb : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000407cf3 : mov rax, qword ptr [rbp - 0x28] ; mov rdi, qword ptr [rbp - 0x20] ; call rax
0x000000000040b3fe : mov rax, qword ptr [rbp - 0x38] ; call qword ptr [rax]
0x000000000041c7ac : mov rax, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040169a : mov rbp, rsp ; call rax
0x0000000000401600 : mov rbp, rsp ; ja 0x40160d ; pop rbp ; ret
0x0000000000407cf7 : mov rdi, qword ptr [rbp - 0x20] ; call rax
0x000000000040164f : mov rsi, rax ; mov edi, 0x62b248 ; jmp rdx
0x0000000000401da7 : mov rsp, rbp ; pop rbp ; ret
0x0000000000421fd1 : mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004018dc : movabs al, byte ptr [0x5d60c48348fffffc] ; ret
0x000000000040b1f5 : movabs byte ptr [0x8348e2894853b517], al ; ret 0x48f0
0x0000000000411b18 : movabs byte ptr [0x840ffffff3c48589], al ; ret 0x4b
0x0000000000414d65 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x6a8a
0x00000000004282f3 : movzx eax, al ; add rsp, 8 ; pop rbp ; ret
0x000000000041e8ef : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040650d : movzx eax, al ; pop rbp ; ret
0x0000000000426a48 : neg byte ptr [rsi + 0x2948e012] ; ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x000000000040e005 : nop ; ret
0x000000000041c412 : nop ; ret 0x148
0x000000000041c426 : nop ; ret 0x2948
0x000000000042a370 : nop ; sub edi, edi ; call rdx
0x00000000004290c8 : nop dword ptr [rax + rax] ; ret
0x000000000041679a : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000416874 : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000429b21 : or al, byte ptr [rax] ; add byte ptr [rax], dl ; cmp edi, edi ; jmp rax
0x000000000040c310 : or byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000041f8e8 : or byte ptr [rax], al ; add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x0000000000417886 : or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x000000000040ca14 : or dword ptr [rax - 0x77], ecx ; xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000042a63d : or dword ptr [rax], eax ; add al, dh ; jno 0x42a648 ; call qword ptr [rdx]
0x000000000042a61d : or dword ptr [rax], eax ; add byte ptr [rax], dh ; jno 0x42a628 ; call rdx
0x0000000000404efd : or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000042a63c : or dword ptr [rax], r8d ; add al, dh ; jno 0x42a649 ; call qword ptr [rdx]
0x0000000000409cdc : or eax, dword ptr [rax] ; add cl, ch ; ret
0x000000000040c5bb : or edi, eax ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000041817b : out dx, al ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x000000000042732c : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042765f : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000041d332 : out dx, eax ; mov al, -0x47 ; ret
0x0000000000426c39 : outsb dx, byte ptr [rsi] ; add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000419265 : outsb dx, byte ptr [rsi] ; ret 0x4861
0x000000000040deb6 : outsb dx, byte ptr [rsi] ; ret 0x8961
0x00000000004192b0 : outsb dx, byte ptr [rsi] ; ret 0xe961
0x0000000000421171 : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000426c3c : outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000421fcc : pop ax ; jb 0x422001 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000041a119 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004290bc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041c55f : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041a11b : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004290be : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041a11d : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004290c0 : pop r14 ; pop r15 ; ret
0x000000000040b4d7 : pop r14 ; pop rbp ; ret
0x000000000041a11f : pop r15 ; pop rbp ; ret
0x00000000004290c2 : pop r15 ; ret
0x0000000000421fcd : pop rax ; jb 0x422000 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000401672 : pop rbp ; mov byte ptr [rip + 0x229c26], 1 ; ret
0x0000000000401611 : pop rbp ; mov edi, 0x62b248 ; jmp rax
0x000000000040164e : pop rbp ; mov rsi, rax ; mov edi, 0x62b248 ; jmp rdx
0x00000000004290bb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041a11c : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004290bf : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000416022 : pop rbp ; pop rcx ; ret 0x1b2
0x00000000004122f5 : pop rbp ; pop rcx ; ret 0x8589
0x000000000041603e : pop rbp ; pop rcx ; ret 0x8b48
0x0000000000401605 : pop rbp ; ret
0x000000000041c55e : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041b255 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040b4d6 : pop rbx ; pop r14 ; pop rbp ; ret
0x000000000041f8f0 : pop rbx ; ret
0x0000000000416023 : pop rcx ; ret 0x1b2
0x00000000004106f6 : pop rcx ; ret 0x8589
0x000000000041603f : pop rcx ; ret 0x8b48
0x0000000000418370 : pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x000000000041a120 : pop rdi ; pop rbp ; ret
0x00000000004290c3 : pop rdi ; ret
0x000000000041a11e : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004290c1 : pop rsi ; pop r15 ; ret
0x000000000040b4d8 : pop rsi ; pop rbp ; ret
0x000000000041a11a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004290bd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041c560 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004106f5 : pop rsp ; pop rcx ; ret 0x8589
0x0000000000428175 : popfq ; ret 0xd284
0x0000000000416020 : push -0x47 ; pop rbp ; pop rcx ; ret 0x1b2
0x000000000041820a : push -0x75425eeb ; push rbp ; ret
0x0000000000414d68 : push -0x77 ; test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x0000000000401a05 : push rax ; pop rbp ; ret
0x000000000042a390 : push rax ; sub edi, edi ; call qword ptr [rbx]
0x00000000004074b6 : push rbp ; fmul dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x000000000040b2d1 : push rbp ; fmul dword ptr [rcx - 0x4efa38e6] ; jmp qword ptr [rcx]
0x0000000000401694 : push rbp ; mov edi, 0x62ae20 ; mov rbp, rsp ; call rax
0x000000000041820f : push rbp ; ret
0x00000000004181a6 : push rbp ; ret 0xd284
0x000000000041679f : push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000416879 : push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000426c3b : push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000401676 : pushfq ; and al, byte ptr [rax] ; add ebx, esi ; ret
0x0000000000405643 : pushfq ; ret 0xd284
0x0000000000401231 : ret
0x0000000000405e55 : ret 0
0x000000000041c413 : ret 0x148
0x0000000000419374 : ret 0x1a
0x000000000040e5ed : ret 0x1add
0x0000000000416025 : ret 0x1b2
0x000000000041f2db : ret 0x1be
0x000000000040226b : ret 0x21e2
0x0000000000401452 : ret 0x229c
0x0000000000401242 : ret 0x229d
0x000000000040ef3a : ret 0x23da
0x000000000041bc38 : ret 0x279e
0x0000000000417889 : ret 0x2948
0x0000000000418374 : ret 0x2a
0x00000000004167a2 : ret 0x2d50
0x0000000000426e98 : ret 0x2e8
0x0000000000407606 : ret 0x2f24
0x000000000042679e : ret 0x3040
0x000000000040473a : ret 0x396c
0x0000000000417274 : ret 0x3b
0x00000000004142d5 : ret 0x3e
0x00000000004065b6 : ret 0x4589
0x0000000000417711 : ret 0x4802
0x00000000004074bd : ret 0x4808
0x0000000000426c3e : ret 0x4815
0x00000000004071af : ret 0x4830
0x000000000040ae02 : ret 0x485b
0x0000000000419266 : ret 0x4861
0x000000000040b26e : ret 0x48e0
0x0000000000401c0b : ret 0x48f0
0x0000000000411b21 : ret 0x4b
0x000000000041d137 : ret 0x4cc0
0x000000000041a178 : ret 0x4cf0
0x0000000000420eec : ret 0x4f0b
0x000000000040c56b : ret 0x5589
0x0000000000416a2a : ret 0x5966
0x000000000041fb47 : ret 0x5bc6
0x0000000000428daf : ret 0x61
0x000000000040dc86 : ret 0x6a8a
0x0000000000407f23 : ret 0x72e5
0x000000000040d93e : ret 0x77a8
0x000000000040eaa1 : ret 0x7a8a
0x000000000041571b : ret 0x7b7f
0x000000000041c0ca : ret 0x8041
0x000000000041c312 : ret 0x8141
0x000000000040732f : ret 0x8148
0x0000000000417634 : ret 0x822d
0x000000000040b365 : ret 0x8445
0x0000000000404c69 : ret 0x8589
0x00000000004035d1 : ret 0x858a
0x000000000040e6b3 : ret 0x8940
0x000000000040632f : ret 0x8948
0x000000000042525f : ret 0x894a
0x000000000040deb7 : ret 0x8961
0x00000000004092d7 : ret 0x89b5
0x0000000000426858 : ret 0x8a44
0x0000000000426755 : ret 0x8a4a
0x0000000000403844 : ret 0x8b48
0x000000000041687c : ret 0xa30b
0x0000000000422ddf : ret 0xac60
0x0000000000403aa0 : ret 0xb0
0x0000000000418180 : ret 0xb740
0x0000000000421fc7 : ret 0xb848
0x00000000004163b0 : ret 0xb940
0x00000000004266e2 : ret 0xb94a
0x00000000004187fc : ret 0xbf48
0x0000000000401635 : ret 0xc148
0x000000000040931a : ret 0xc226
0x0000000000405aae : ret 0xc281
0x0000000000428ff2 : ret 0xc493
0x00000000004272e9 : ret 0xca21
0x0000000000428db5 : ret 0xccb2
0x0000000000406850 : ret 0xd1b9
0x000000000040340e : ret 0xd284
0x0000000000424ea5 : ret 0xd618
0x0000000000406c85 : ret 0xd763
0x0000000000402263 : ret 0xde1e
0x0000000000402438 : ret 0xe280
0x0000000000418052 : ret 0xe940
0x00000000004192b1 : ret 0xe961
0x000000000040f0dd : ret 0xea51
0x0000000000405e5c : ret 0xea81
0x000000000041ae6c : ret 0xee8
0x000000000040c5a5 : ret 0xf281
0x0000000000416eb7 : ret 0xf41
0x000000000041d9d5 : ret 0xf5e8
0x000000000040668f : ret 0xf68d
0x0000000000418e05 : ret 0xf7f3
0x0000000000405e3e : ret 0xfb9
0x000000000041758e : ret 0xfc75
0x000000000041c9aa : ret 0xfe48
0x0000000000418eda : ret 0xfe86
0x0000000000418dff : ret 0xffa5
0x0000000000417588 : ret 0xffc4
0x00000000004167a8 : ret 0xffd5
0x0000000000416882 : ret 0xffd8
0x000000000041763a : ret 0xffd9
0x0000000000416a24 : ret 0xffe0
0x0000000000415715 : ret 0xfffa
0x000000000041e921 : ret 0xfffe
0x0000000000405302 : ret 1
0x0000000000417420 : ret 2
0x00000000004079c1 : ret 5
0x0000000000404939 : ret 6
0x000000000041a574 : ret 8
0x0000000000426c1d : rol byte ptr [rax + 0x48f22948], -0x7f ; ret 1
0x000000000042373c : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040bafc : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000426c1c : rol byte ptr ds:[rax + 0x48f22948], -0x7f ; ret 1
0x0000000000421fc4 : ror byte ptr [rax + 1], cl ; ret 0xb848
0x000000000040163c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40164b ; pop rbp ; ret
0x000000000041e8f1 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x000000000041f67b : ror byte ptr [rax - 0x77], 1 ; add edi, eax ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp rsp
0x000000000040c5ba : ror byte ptr [rcx], -0x39 ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000429b20 : ror byte ptr [rdx], 0 ; add byte ptr [rax], dl ; cmp edi, edi ; jmp rax
0x0000000000426a4e : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x000000000041cff0 : ror dword ptr [rcx - 0x7d], cl ; ret
0x000000000042728c : sahf ; ret 0xd284
0x000000000040163e : sar eax, 1 ; jne 0x401649 ; pop rbp ; ret
0x0000000000418371 : sar ebp, -0x17 ; ret 0x2a
0x000000000040163d : sar rax, 1 ; jne 0x40164a ; pop rbp ; ret
0x000000000041e7c5 : sbb al, -6 ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000041d330 : sbb al, 0x41 ; out dx, eax ; mov al, -0x47 ; ret
0x0000000000418271 : sbb cl, ch ; ret
0x0000000000403d26 : sbb dl, byte ptr [rip - 0x1c465a76] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; wait ; ret
0x0000000000421813 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041c380 : sbb ecx, dword ptr [rax - 0x7f] ; ret
0x0000000000417272 : shr cl, cl ; ret 0x3b
0x00000000004150ad : stc ; ret 0x77a8
0x0000000000429f02 : std ; call qword ptr [rcx]
0x000000000041bc37 : std ; ret 0x279e
0x000000000040632d : stosd dword ptr [rdi], eax ; cld ; ret 0x8948
0x0000000000406309 : stosd dword ptr [rdi], eax ; cld ; ret 0x8b48
0x000000000040825e : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000422ee6 : sub byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000408148 : sub byte ptr [rax], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004167a5 : sub byte ptr [rbp - 0x7f], bh ; ret 0xffd5
0x000000000041679b : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x0000000000416875 : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000417635 : sub eax, 0x81268e82 ; ret 0xffd9
0x00000000004074e3 : sub eax, 0xe9ccf51c ; ret
0x000000000042a391 : sub edi, edi ; call qword ptr [rbx]
0x000000000042a371 : sub edi, edi ; call rdx
0x0000000000421fcf : sub edx, edi ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004290fd : sub esp, 8 ; add rsp, 8 ; ret
0x00000000004290fc : sub rsp, 8 ; add rsp, 8 ; ret
0x00000000004167a0 : test al, -0x7f ; ret 0x2d50
0x000000000041687a : test al, -0x7f ; ret 0xa30b
0x00000000004264f3 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041ca0e : test al, 0x48 ; add esp, 0x80 ; pop rbp ; ret
0x0000000000418fd6 : test al, 0x48 ; mov ebp, 0xe19c53ba ; ret
0x0000000000421068 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000406ee7 : test al, al ; add al, 0 ; add cl, ch ; ret 1
0x00000000004290ca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004052fc : test byte ptr [rbp + rcx], ch ; add cl, ch ; ret 1
0x000000000040d61c : test byte ptr [rcx], ch ; ret 0
0x0000000000409cda : test cl, al ; or eax, dword ptr [rax] ; add cl, ch ; ret
0x0000000000404efb : test dh, bh ; or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000407ad3 : test dh, ch ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x000000000040d616 : test dword ptr [rax + 0xffffffd], esp ; test byte ptr [rcx], ch ; ret 0
0x000000000040a297 : test dword ptr [rbp + rdi*8 - 0x7bf00001], esp ; ret
0x0000000000421176 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000041f680 : test dword ptr [rdi + rdi*8 - 1], edi ; jmp rsp
0x000000000041c62a : test dword ptr [rdi + rdi*8 - 1], esp ; call qword ptr [rbx]
0x000000000041804b : test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x00000000004192aa : test dword ptr [rsi + rdi*8 + 0x6e94ffff], esp ; ret 0xe961
0x0000000000414d6a : test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x000000000041925f : test eax, 0xb9dd5cac ; xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x000000000041726f : wait ; jge 0x417251 ; shr cl, cl ; ret 0x3b
0x000000000041232d : wait ; jo 0x41233b ; ret
0x000000000041587c : wait ; jo 0x41588a ; ret
0x0000000000403b44 : wait ; ret
0x0000000000404c66 : xchg dword ptr [rdi - 0x35], eax ; ret 0x8589
0x0000000000426c38 : xchg dword ptr [rsi + 4], ebp ; push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000040b364 : xchg eax, ebp ; ret 0x8445
0x000000000040340d : xchg eax, ebp ; ret 0xd284
0x000000000040deb5 : xchg eax, ebx ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x00000000004147b5 : xchg eax, ebx ; ret
0x000000000041f187 : xchg eax, ebx ; ret 0x8445
0x0000000000409851 : xchg eax, ecx ; jge 0x40982a ; ret
0x00000000004149e5 : xchg eax, ecx ; ret
0x0000000000403638 : xchg eax, edi ; ret 0xd284
0x000000000040989c : xchg eax, edx ; jge 0x409875 ; ret
0x000000000040a45c : xchg eax, edx ; jge 0x40a435 ; ret
0x000000000040a90f : xchg eax, edx ; jge 0x40a8e8 ; ret
0x000000000040e235 : xchg eax, edx ; ret
0x000000000041c0df : xchg eax, edx ; ret 0x8445
0x000000000042106e : xchg eax, edx ; ret 0xd284
0x000000000042030a : xchg eax, esp ; jmp 0x420d78
0x0000000000420247 : xchg eax, esp ; jmp 0x420d7a
0x0000000000419264 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x0000000000414b35 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x00000000004192af : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0xe961
0x000000000041c0c9 : xchg eax, esp ; ret 0x8041
0x000000000041817e : xchg eax, esp ; ret 0xb740
0x00000000004056c9 : xchg eax, esp ; ret 0xd284
0x0000000000402437 : xchg eax, esp ; ret 0xe280
0x0000000000420309 : xchg eax, r12d ; jmp 0x420d79
0x000000000042a499 : xor al, 0xffffffffffffffff ; jmp qword ptr [rcx]
0x0000000000418179 : xor al, byte ptr [rbx - 0x6bf0fd12] ; ret 0xb740
0x000000000042a459 : xor bh, bh ; jmp qword ptr [rbx]
0x000000000040ca17 : xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000040ca18 : xor byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000042a620 : xor byte ptr [rcx - 1], dh ; call rdx
0x0000000000406c7c : xor eax, dword ptr [rax + rax] ; add byte ptr [rbx - 0x30d23fbb], cl ; ret 0xd763
