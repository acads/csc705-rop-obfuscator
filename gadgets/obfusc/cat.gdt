0x0000000000410e35 : adc ah, al ; ret 0x1b2
0x000000000040eb72 : adc ah, al ; ret 0x8589
0x0000000000410e51 : adc ah, al ; ret 0x958a
0x0000000000406c93 : adc al, 0x5a ; ret 0x3db9
0x000000000040680b : adc al, 0x5a ; ret 0x8589
0x00000000004477a1 : adc al, byte ptr [rax] ; add byte ptr [rax], dl ; ret
0x0000000000436e56 : adc byte ptr [rax + 1], cl ; ret 0x8948
0x00000000004106c5 : adc byte ptr [rax], al ; add al, ch ; ret
0x00000000004065cf : adc byte ptr [rbp - 0x5d], cl ; ret 0x65e9
0x00000000004059bf : adc byte ptr [rbp - 0x5d], cl ; ret 0x74b9
0x00000000004037b7 : adc byte ptr [rbp - 0x5d], cl ; ret 0x8589
0x0000000000439372 : adc byte ptr [rdi], ch ; ret
0x0000000000410cc0 : adc byte ptr [rdx], bl ; sbb ah, byte ptr [rdx - 0x47] ; and ebx, ebp ; ret 0x8bb1
0x0000000000437bac : adc cl, byte ptr [rax + 1] ; ret 0x8b48
0x0000000000445a8e : adc cl, byte ptr [rax - 0x77] ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x48f0
0x000000000041f22e : adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x000000000044535b : adc cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x0000000000433f6a : adc cl, byte ptr [rax - 0x7d] ; ret 0x4818
0x000000000043dc0b : adc cl, byte ptr [rax - 0x7f] ; ret 0x10
0x0000000000434056 : adc cl, byte ptr [rax - 0x7f] ; ret 0x18
0x000000000043358f : adc cl, byte ptr [rax - 0x7f] ; ret 0xc
0x00000000004059ed : adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x000000000042b03b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000439612 : adc dword ptr [rdi], ebp ; ret
0x000000000041fd2b : adc eax, 0x558abda1 ; ret
0x0000000000423309 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004036d8 : adc edi, ecx ; ret
0x0000000000448049 : adc esi, edi ; jmp rsi
0x0000000000447d60 : add ah, -3 ; jmp qword ptr [rbx]
0x0000000000448473 : add ah, bh ; or eax, dword ptr [rax] ; add byte ptr [rax], bl ; sub edi, edi ; call rbx
0x0000000000447b4b : add ah, dl ; add al, byte ptr [rax] ; add al, dh ; push -4 ; jmp qword ptr [rcx]
0x0000000000447bd0 : add al, -4 ; call qword ptr [rdx]
0x000000000043c171 : add al, 0 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rsi
0x0000000000447459 : add al, 0 ; add byte ptr [rax], dh ; sti ; jmp qword ptr [rax]
0x000000000043252a : add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000447a2f : add al, ah ; cld ; call qword ptr [rcx]
0x000000000044812f : add al, al ; xor esi, edi ; call rdx
0x0000000000447b4d : add al, byte ptr [rax] ; add al, dh ; push -4 ; jmp qword ptr [rcx]
0x00000000004068f8 : add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000448047 : add al, ch ; adc esi, edi ; jmp rsi
0x0000000000404e0d : add al, ch ; in eax, dx ; int 0xff
0x00000000004056ad : add al, ch ; popfq ; ret
0x00000000004065d7 : add al, ch ; ret
0x00000000004244c8 : add al, ch ; ret 0xfdd1
0x0000000000447b4f : add al, dh ; push -4 ; jmp qword ptr [rcx]
0x000000000043bf5a : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rbx
0x000000000043c173 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rsi
0x000000000042ad14 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000412c9a : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp qword ptr [rbx]
0x0000000000412bfb : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp rdi
0x00000000004282ec : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; call rax
0x00000000004285d3 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; call rsi
0x0000000000429061 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; jmp qword ptr [rcx]
0x000000000041fb69 : add bh, al ; test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x00000000004466ff : add bl, dh ; ret
0x0000000000444cc2 : add byte ptr [r8], al ; add byte ptr [rcx], al ; ret 0xea81
0x0000000000444f24 : add byte ptr [r8], al ; add byte ptr [rcx], ch ; ret 0x5589
0x0000000000406431 : add byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000447ebf : add byte ptr [rax - 0x37], ah ; std ; call rdx
0x0000000000404f7d : add byte ptr [rax - 0x6bf10000], al ; ret
0x00000000004242cb : add byte ptr [rax - 0x75], cl ; clc ; mov rsp, rbp ; pop rbp ; ret
0x0000000000446571 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; ret 0x2948
0x000000000040c2db : add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000042c816 : add byte ptr [rax - 0x77], cl ; mov r8d, 0x988c45c7 ; ret
0x000000000040a95a : add byte ptr [rax - 0x77], cl ; ret 0x8148
0x0000000000447edf : add byte ptr [rax], ah ; retf ; std ; call qword ptr [rbx]
0x0000000000447d5e : add byte ptr [rax], al ; add ah, -3 ; jmp qword ptr [rbx]
0x0000000000447bce : add byte ptr [rax], al ; add al, -4 ; call qword ptr [rdx]
0x00000000004065d5 : add byte ptr [rax], al ; add al, ch ; ret
0x00000000004244c6 : add byte ptr [rax], al ; add al, ch ; ret 0xfdd1
0x000000000043bf58 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rbx
0x000000000042ad12 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x00000000004466fd : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040642f : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8948
0x000000000044656f : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x77], 1 ; ret 0x2948
0x000000000040c2d9 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x00000000004466fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000405374 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000405665 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004466fc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000446114 : add byte ptr [rax], al ; add byte ptr [rbp + 0x21], al ; ret 0x8845
0x0000000000432cb7 : add byte ptr [rax], al ; add byte ptr [rbx + 0x1c2ddc45], cl ; ret 0xbe70
0x000000000040c26e : add byte ptr [rax], al ; add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x0000000000422d72 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000432c21 : add byte ptr [rax], al ; add byte ptr [rbx - 0x1cd223bb], cl ; ret
0x00000000004294d3 : add byte ptr [rax], al ; add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x0000000000406aa6 : add byte ptr [rax], al ; add byte ptr [rbx - 0x2ad25bbb], cl ; ret 0x7194
0x000000000044227c : add byte ptr [rax], al ; add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x000000000042d501 : add byte ptr [rax], al ; add byte ptr [rbx - 0x62d237bb], cl ; push rcx ; ret 0x8929
0x000000000042d451 : add byte ptr [rax], al ; add byte ptr [rbx - 0x63d237bb], cl ; push rcx ; ret 0x8929
0x000000000042be39 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x00000000004112ba : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000444cc3 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xea81
0x0000000000444f25 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x5589
0x000000000042ac80 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8b48
0x0000000000448791 : add byte ptr [rax], al ; add byte ptr [rdi + rcx], bl ; add byte ptr [rax], al ; ret
0x0000000000444091 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000405376 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004431a8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x00000000004052af : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040da52 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000042ac0a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000425445 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004475c2 : add byte ptr [rax], al ; add cl, bl ; std ; jmp rax
0x000000000043dab3 : add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000447dba : add byte ptr [rax], al ; add eax, 0xc5d00000 ; std ; call rdi
0x0000000000407323 : add byte ptr [rax], al ; add rsi, rax ; mov rax, rsi ; pop rbp ; ret
0x000000000042330b : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000422990 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040c1c7 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000042b03d : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000442928 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040d679 : add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x000000000040164b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000447ede : add byte ptr [rax], al ; and bl, cl ; std ; call qword ptr [rbx]
0x00000000004477fa : add byte ptr [rax], al ; and cl, 0xff ; call rax
0x0000000000448046 : add byte ptr [rax], al ; call 0xffffffffe7447e63
0x0000000000448472 : add byte ptr [rax], al ; cld ; or eax, dword ptr [rax] ; add byte ptr [rax], bl ; sub edi, edi ; call rbx
0x0000000000448516 : add byte ptr [rax], al ; cwde ; jb 0x44851f ; jmp qword ptr [rax]
0x00000000004475c3 : add byte ptr [rax], al ; fscale ; jmp rax
0x0000000000447d5a : add byte ptr [rax], al ; in al, 4 ; add byte ptr [rax], al ; add ah, -3 ; jmp qword ptr [rbx]
0x0000000000401829 : add byte ptr [rax], al ; jmp 0x401669
0x000000000043daaf : add byte ptr [rax], al ; jmp 0x43dabe
0x0000000000447a2e : add byte ptr [rax], al ; loopne 0x447a7f ; cld ; call qword ptr [rcx]
0x0000000000447a2a : add byte ptr [rax], al ; mov ah, 1 ; add byte ptr [rax], al ; loopne 0x447a83 ; cld ; call qword ptr [rcx]
0x000000000044812a : add byte ptr [rax], al ; mov ah, 8 ; add byte ptr [rax], al ; sal byte ptr [rcx], -2 ; call rdx
0x0000000000444d08 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x000000000040c2da : add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000447fa6 : add byte ptr [rax], al ; or al, dl ; std ; jmp qword ptr [rbx]
0x0000000000402192 : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000422d73 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004413a6 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004466fe : add byte ptr [rax], al ; ret
0x00000000004474ea : add byte ptr [rax], al ; ret 0xfffc
0x0000000000447dbe : add byte ptr [rax], al ; rol ch, 1 ; std ; call rdi
0x000000000044812e : add byte ptr [rax], al ; sal byte ptr [rcx], -2 ; call rdx
0x0000000000448792 : add byte ptr [rax], al ; sbb al, 0xf ; add byte ptr [rax], al ; ret
0x00000000004475d2 : add byte ptr [rax], al ; sbb cl, -3 ; jmp qword ptr [rax]
0x0000000000447fa2 : add byte ptr [rax], al ; sub al, 7 ; add byte ptr [rax], al ; or al, dl ; std ; jmp qword ptr [rbx]
0x000000000044814e : add byte ptr [rax], al ; xor byte ptr [rdx], 0xfe ; call qword ptr [rdx]
0x0000000000447602 : add byte ptr [rax], al ; xor dh, ah ; std ; jmp rax
0x000000000044745a : add byte ptr [rax], al ; xor dl, dh ; sti ; jmp qword ptr [rax]
0x0000000000448477 : add byte ptr [rax], bl ; sub edi, edi ; call rbx
0x0000000000447fa7 : add byte ptr [rax], cl ; sar ch, 1 ; jmp qword ptr [rbx]
0x0000000000447603 : add byte ptr [rax], dh ; out -3, al ; jmp rax
0x000000000044745b : add byte ptr [rax], dh ; sti ; jmp qword ptr [rax]
0x00000000004477a3 : add byte ptr [rax], dl ; ret
0x0000000000433b5a : add byte ptr [rax], r8b ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000446116 : add byte ptr [rbp + 0x21], al ; ret 0x8845
0x000000000044610c : add byte ptr [rbp - 0x77], al ; ret 0x8141
0x000000000044610b : add byte ptr [rbp - 0x77], r8b ; ret 0x8141
0x0000000000432c6e : add byte ptr [rbx + 0x1b2ddc45], cl ; ret 0xbe70
0x0000000000432cb9 : add byte ptr [rbx + 0x1c2ddc45], cl ; ret 0xbe70
0x000000000040c270 : add byte ptr [rbx + 0x2d2dec45], cl ; call rsp
0x0000000000422d74 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000406805 : add byte ptr [rbx + 0x562da445], cl ; adc al, 0x5a ; ret 0x8589
0x0000000000406850 : add byte ptr [rbx + 0x572da445], cl ; adc al, 0x5a ; ret 0x8589
0x00000000004413a7 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000432c23 : add byte ptr [rbx - 0x1cd223bb], cl ; ret
0x0000000000432bd8 : add byte ptr [rbx - 0x1dd223bb], cl ; ret
0x00000000004294d5 : add byte ptr [rbx - 0x24d26fbb], cl ; pop rbx ; ret
0x000000000042948a : add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x0000000000406aa8 : add byte ptr [rbx - 0x2ad25bbb], cl ; ret 0x7194
0x000000000044227e : add byte ptr [rbx - 0x56d22bbb], cl ; ret
0x000000000042d503 : add byte ptr [rbx - 0x62d237bb], cl ; push rcx ; ret 0x8929
0x000000000042d453 : add byte ptr [rbx - 0x63d237bb], cl ; push rcx ; ret 0x8929
0x0000000000404efc : add byte ptr [rbx - 0x66b4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000409d70 : add byte ptr [rbx - 0x6934b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000042e737 : add byte ptr [rbx - 0x6dd237bb], cl ; jge 0x42e71a ; ret
0x0000000000405e1e : add byte ptr [rbx - 0x6e34b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000042e6ec : add byte ptr [rbx - 0x6ed237bb], cl ; jge 0x42e6cf ; ret
0x0000000000444d09 : add byte ptr [rbx - 0x76b71fbb], cl ; in al, dx ; pop rbp ; ret
0x000000000042be3b : add byte ptr [rbx - 0x76d227bb], cl ; jmp rbx
0x00000000004072af : add byte ptr [rbx - 0xc34b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004475d0 : add byte ptr [rbx], cl ; add byte ptr [rax], al ; sbb cl, -3 ; jmp qword ptr [rax]
0x00000000004112bc : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000447a2b : add byte ptr [rcx + rax + 0x48e00000], dh ; cld ; call qword ptr [rcx]
0x000000000042ad7e : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401bc8 : add byte ptr [rcx], al ; ret
0x0000000000444cc5 : add byte ptr [rcx], al ; ret 0xea81
0x0000000000444f27 : add byte ptr [rcx], ch ; ret 0x5589
0x000000000042ac82 : add byte ptr [rcx], ch ; ret 0x8b48
0x0000000000447fa3 : add byte ptr [rdi + rax], ch ; add byte ptr [rax], al ; or al, dl ; std ; jmp qword ptr [rbx]
0x0000000000448793 : add byte ptr [rdi + rcx], bl ; add byte ptr [rax], al ; ret
0x0000000000444093 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000405378 : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004431aa : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x00000000004052b1 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040da54 : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000042ac0c : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000404f80 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000425447 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000447edb : add byte ptr [rsi + rax], ah ; add byte ptr [rax], ah ; retf ; std ; call qword ptr [rbx]
0x0000000000447ebb : add byte ptr [rsi + rax], al ; add byte ptr [rax - 0x37], ah ; std ; call rdx
0x0000000000405373 : add byte ptr fs:[rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000405664 : add byte ptr fs:[rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004065d4 : add byte ptr gs:[rax], al ; add al, ch ; ret
0x00000000004475c4 : add cl, bl ; std ; jmp rax
0x0000000000405a3c : add cl, byte ptr [rax - 9] ; fimul dword ptr [rax + 0x29] ; ret 0x14b9
0x000000000041fc9c : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x00000000004296dd : add cl, ch ; ret
0x00000000004068fa : add cl, ch ; ret 1
0x000000000043c7ba : add cl, ch ; ret 9
0x0000000000409c9e : add dl, byte ptr [rsi] ; ret 0x558a
0x0000000000407fa4 : add dl, byte ptr [rsi] ; ret 0x8589
0x0000000000409e58 : add dl, byte ptr [rsi] ; ret 0x8ae9
0x000000000043dc1b : add dword ptr [rax], 0xec894800 ; pop rbp ; ret
0x0000000000447a2d : add dword ptr [rax], eax ; add al, ah ; cld ; call qword ptr [rcx]
0x0000000000413523 : add dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp rdi
0x000000000042905f : add dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; jmp qword ptr [rcx]
0x000000000042cb4f : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000407250 : add dword ptr [rdi], ecx ; mov dh, -0x3f ; mov rsp, rbp ; pop rbp ; ret
0x0000000000444212 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x000000000043acf9 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x000000000044324e : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401bc4 : add eax, 0x24778e ; add ebx, esi ; ret
0x000000000042f2f8 : add eax, 0x92b80000 ; jge 0x42f2d9 ; ret
0x000000000042f2f7 : add eax, 0x92b80000 ; jge 0x42f2da ; ret
0x0000000000447dbd : add eax, 0xc5d00000 ; std ; call rdi
0x000000000042871c : add eax, 0xc700000b ; test dword ptr [rdi + rdi*8 - 1], esp ; call rsi
0x00000000004132a5 : add eax, dword ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp qword ptr [rbx]
0x00000000004413a5 : add eax, dword ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000425e45 : add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x0000000000401b8b : add eax, edx ; sar rax, 1 ; jne 0x401b9c ; pop rbp ; ret
0x000000000043d909 : add eax, esi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x0000000000401bc9 : add ebx, esi ; ret
0x0000000000407326 : add esi, eax ; mov rax, rsi ; pop rbp ; ret
0x0000000000401e4b : add esp, 0x10 ; pop rbp ; ret
0x000000000042ad7c : add esp, 0x100 ; pop rbp ; ret
0x0000000000441cca : add esp, 0x120 ; pop rbp ; ret
0x000000000043f63a : add esp, 0x1360 ; pop rbp ; ret
0x000000000042aeec : add esp, 0x1a0 ; pop rbp ; ret
0x000000000040d42d : add esp, 0x20 ; pop rbp ; ret
0x000000000042f788 : add esp, 0x280 ; pop rbp ; ret
0x000000000040c1ca : add esp, 0x30 ; pop rbp ; ret
0x00000000004413a2 : add esp, 0x3a8 ; pop rbx ; pop rbp ; ret
0x0000000000413446 : add esp, 0x3e0 ; pop rbp ; ret
0x000000000042b040 : add esp, 0x40 ; pop rbp ; ret
0x0000000000432729 : add esp, 0x440 ; pop rbp ; ret
0x0000000000401df9 : add esp, 0x50 ; pop rbp ; ret
0x0000000000428f8c : add esp, 0x5b0 ; pop rbp ; ret
0x000000000042bf60 : add esp, 0x60 ; pop rbp ; ret
0x00000000004114c4 : add esp, 0x650 ; pop rbp ; ret
0x000000000040d67c : add esp, 0x70 ; pop rbp ; ret
0x000000000040d3df : add esp, 0x80 ; pop rbp ; ret
0x000000000042b6bd : add esp, 0x90 ; pop rbp ; ret
0x0000000000425466 : add esp, 0xa0 ; pop rbp ; ret
0x0000000000406d2b : add esp, 0xa8 ; pop rbp ; ret
0x000000000040218e : add esp, 0xb0 ; pop rbp ; ret
0x000000000040bc06 : add esp, 0xd0 ; pop rbp ; ret
0x000000000040dc17 : add esp, 0xe0 ; pop rbp ; ret
0x000000000042e37f : add esp, 0xf0 ; pop rbp ; ret
0x0000000000413c23 : add esp, 8 ; pop rbp ; ret
0x000000000040164e : add esp, 8 ; ret
0x0000000000401b8a : add rax, rdx ; sar rax, 1 ; jne 0x401b9d ; pop rbp ; ret
0x000000000043d908 : add rax, rsi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x0000000000407325 : add rsi, rax ; mov rax, rsi ; pop rbp ; ret
0x0000000000401e4a : add rsp, 0x10 ; pop rbp ; ret
0x000000000042ad7b : add rsp, 0x100 ; pop rbp ; ret
0x0000000000441cc9 : add rsp, 0x120 ; pop rbp ; ret
0x000000000043f639 : add rsp, 0x1360 ; pop rbp ; ret
0x000000000042aeeb : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000040d42c : add rsp, 0x20 ; pop rbp ; ret
0x000000000042f787 : add rsp, 0x280 ; pop rbp ; ret
0x000000000040c1c9 : add rsp, 0x30 ; pop rbp ; ret
0x00000000004413a1 : add rsp, 0x3a8 ; pop rbx ; pop rbp ; ret
0x0000000000413445 : add rsp, 0x3e0 ; pop rbp ; ret
0x000000000042b03f : add rsp, 0x40 ; pop rbp ; ret
0x0000000000432728 : add rsp, 0x440 ; pop rbp ; ret
0x0000000000401df8 : add rsp, 0x50 ; pop rbp ; ret
0x0000000000428f8b : add rsp, 0x5b0 ; pop rbp ; ret
0x000000000042bf5f : add rsp, 0x60 ; pop rbp ; ret
0x00000000004114c3 : add rsp, 0x650 ; pop rbp ; ret
0x000000000040d67b : add rsp, 0x70 ; pop rbp ; ret
0x000000000040d3de : add rsp, 0x80 ; pop rbp ; ret
0x000000000042b6bc : add rsp, 0x90 ; pop rbp ; ret
0x0000000000425465 : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000406d2a : add rsp, 0xa8 ; pop rbp ; ret
0x000000000040218d : add rsp, 0xb0 ; pop rbp ; ret
0x000000000040bc05 : add rsp, 0xd0 ; pop rbp ; ret
0x000000000040dc16 : add rsp, 0xe0 ; pop rbp ; ret
0x000000000042e37e : add rsp, 0xf0 ; pop rbp ; ret
0x0000000000413c22 : add rsp, 8 ; pop rbp ; ret
0x000000000040164d : add rsp, 8 ; ret
0x0000000000401bc7 : and al, 0 ; add ebx, esi ; ret
0x0000000000444ccd : and al, 0xffffffffffffff81 ; ret 0x61
0x000000000043acf8 : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000044324d : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040e9e9 : and bl, ch ; ret 0x89b1
0x0000000000447ee0 : and bl, cl ; std ; call qword ptr [rbx]
0x0000000000441ccc : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042bb6b : and byte ptr [rsi + 0x58], ah ; jb 0x42bba2 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004477fc : and cl, 0xff ; call rax
0x000000000040a69d : and dword ptr [rdi - 0x47], esp ; std ; ret 0xb259
0x00000000004048d0 : and eax, 0x207cb9bf ; ret 0x8ba0
0x000000000040c1c5 : and eax, 0x48000000 ; add esp, 0x30 ; pop rbp ; ret
0x000000000041eed1 : and eax, 0x75b4b9d3 ; ret
0x000000000040ea3d : and ebx, ebp ; ret 0x89b1
0x0000000000410cc5 : and ebx, ebp ; ret 0x8bb1
0x0000000000410ca9 : and ebx, ebp ; ret 0xb2b1
0x00000000004053be : call 0x4016a2
0x0000000000413586 : call 0x401797
0x000000000042bf65 : call 0x42c029
0x000000000041062a : call 0x43c676
0x000000000044281d : call 0xffffffffaca4ea51
0x000000000044281c : call 0xffffffffaca4ea52
0x0000000000448048 : call 0xffffffffe7447e61
0x0000000000422989 : call 0xffffffffe904b2d9
0x0000000000422988 : call 0xffffffffe904b2da
0x000000000043f4a4 : call 0xfffffffff77cb764
0x00000000004466d9 : call qword ptr [r12 + rbx*8]
0x00000000004065ce : call qword ptr [rax]
0x000000000042414e : call qword ptr [rbx]
0x000000000043adfc : call qword ptr [rcx]
0x0000000000406357 : call qword ptr [rdi]
0x000000000041ddfb : call qword ptr [rdx]
0x000000000043f73a : call qword ptr [rsi]
0x00000000004466da : call qword ptr [rsp + rbx*8]
0x0000000000401bed : call rax
0x000000000044847b : call rbx
0x00000000004061be : call rcx
0x000000000040b77c : call rdi
0x0000000000411601 : call rdx
0x000000000040ab95 : call rsi
0x000000000040c21b : call rsp
0x00000000004244c5 : cdq ; add byte ptr [rax], al ; add al, ch ; ret 0xfdd1
0x0000000000447458 : clc ; add al, 0 ; add byte ptr [rax], dh ; sti ; jmp qword ptr [rax]
0x0000000000441cc8 : clc ; add rsp, 0x120 ; pop rbp ; ret
0x000000000042f786 : clc ; add rsp, 0x280 ; pop rbp ; ret
0x0000000000413444 : clc ; add rsp, 0x3e0 ; pop rbp ; ret
0x0000000000432727 : clc ; add rsp, 0x440 ; pop rbp ; ret
0x0000000000428f8a : clc ; add rsp, 0x5b0 ; pop rbp ; ret
0x000000000042d5c7 : clc ; add rsp, 0x70 ; pop rbp ; ret
0x000000000042b2c7 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x000000000042d909 : clc ; add rsp, 0xa0 ; pop rbp ; ret
0x000000000040dc15 : clc ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000044665b : clc ; add rsp, 0xf0 ; pop rbp ; ret
0x0000000000401b8f : clc ; jne 0x401b98 ; pop rbp ; ret
0x00000000004242cf : clc ; mov rsp, rbp ; pop rbp ; ret
0x0000000000408fd4 : clc ; ret
0x000000000041545d : clc ; ret 0x77a8
0x000000000043f638 : cld ; add rsp, 0x1360 ; pop rbp ; ret
0x0000000000442e5e : cld ; add rsp, 0xe0 ; pop rbp ; ret
0x000000000042e37d : cld ; add rsp, 0xf0 ; pop rbp ; ret
0x0000000000447a32 : cld ; call qword ptr [rcx]
0x0000000000447bd2 : cld ; call qword ptr [rdx]
0x00000000004474e6 : cld ; dec dword ptr [rax + 7] ; add byte ptr [rax], al ; ret 0xfffc
0x000000000040c29f : cld ; jmp 0x40c30c
0x000000000040c29e : cld ; jmp 0x40c30d
0x0000000000447b52 : cld ; jmp qword ptr [rcx]
0x0000000000448474 : cld ; or eax, dword ptr [rax] ; add byte ptr [rax], bl ; sub edi, edi ; call rbx
0x000000000040ebaa : cld ; stc ; ret
0x000000000042bb70 : cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000444ccc : cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x000000000042aa8b : cmc ; ret 0x4f0b
0x000000000041313a : cmp byte ptr [rsi + rdx*4 - 0x1b14630], bh ; ret
0x0000000000426e45 : cmp ch, byte ptr [rbx - 0x66] ; ret
0x000000000042ac21 : cmp cl, byte ptr [rsi - 0x946182f] ; ret 0x4f0b
0x0000000000426df1 : cmp dword ptr [rbx - 0x66], ebp ; ret
0x000000000043db3d : cmp eax, 0xb8000001 ; ret
0x0000000000401b4d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401b60 ; pop rbp ; ret
0x000000000041fd27 : cmp esp, dword ptr [rbp - 0x47] ; push -0x75425eeb ; push rbp ; ret
0x0000000000448518 : cwde ; jb 0x44851d ; jmp qword ptr [rax]
0x000000000042c578 : cwde ; ret
0x00000000004048a1 : cwde ; sbb eax, 0x7b80000 ; ret
0x00000000004459a1 : dec dword ptr [rax + 0x29] ; ret 0x8948
0x00000000004453aa : dec dword ptr [rax + 0x29] ; ret 0x8b48
0x00000000004111f4 : dec dword ptr [rax + 1] ; ret 0x8948
0x00000000004474e7 : dec dword ptr [rax + 7] ; add byte ptr [rax], al ; ret 0xfffc
0x000000000041358a : dec dword ptr [rax - 0x41] ; ret 0x7f0f
0x000000000041f22b : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x00000000004059ea : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 1] ; ret 0x8b48
0x000000000041f3a3 : dec dword ptr [rax - 0x75] ; or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x0000000000436e52 : dec dword ptr [rax - 0x75] ; push rcx ; adc byte ptr [rax + 1], cl ; ret 0x8948
0x000000000042bc9d : dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x000000000043a598 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x000000000043730b : dec dword ptr [rax - 0x77] ; ret 0x3ce8
0x0000000000437d3d : dec dword ptr [rax - 0x77] ; ret 0x4ae8
0x0000000000428cc9 : dec dword ptr [rax - 0x77] ; ret 0x6ee8
0x00000000004291c7 : dec dword ptr [rax - 0x77] ; ret 0x70e8
0x0000000000432286 : dec dword ptr [rax - 0x77] ; ret 0x8148
0x0000000000407206 : dec dword ptr [rax - 0x77] ; ret 0x858a
0x000000000043d449 : dec dword ptr [rax - 0x77] ; ret 0x8ee8
0x0000000000404f02 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000042836f : dec dword ptr [rax - 0x77] ; ret 0xc8e8
0x000000000043869e : dec dword ptr [rax - 0x77] ; ret 0xe9e8
0x0000000000405b34 : dec dword ptr [rax - 0x77] ; ret 0xf3e8
0x0000000000406529 : dec dword ptr [rax - 0x77] ; ret 0xf45
0x000000000043c30d : dec dword ptr [rax - 0x7f] ; ret 1
0x0000000000438339 : dec dword ptr [rax - 0x7f] ; ret 4
0x000000000040bb7e : dec dword ptr [rax - 0xb46b] ; dec dword ptr [rax - 0x77] ; ret 0x858a
0x0000000000407200 : dec dword ptr [rax - 0xbc6b] ; dec dword ptr [rax - 0x77] ; ret 0x858a
0x000000000043c406 : dec dword ptr [rax - 1] ; ret 0x8948
0x0000000000433869 : dec dword ptr [rbx - 0x1eb6b] ; dec dword ptr [rdi] ; ret 0x4589
0x000000000043d376 : dec dword ptr [rbx - 0x1f36b] ; dec dword ptr [rdi] ; ret 0x4589
0x000000000042aa86 : dec dword ptr [rcx - 0xa167e3f] ; ret 0x4f0b
0x000000000043386f : dec dword ptr [rdi] ; ret 0x4589
0x000000000042567e : dec dword ptr [rdi] ; test al, dl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x000000000043315e : dec dword ptr [rdi] ; test byte ptr [rax - 0x16fffff9], cl ; ret 1
0x0000000000425e41 : dec dword ptr [rdi] ; test byte ptr [rbx], dh ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x000000000041513a : dec dword ptr [rdi] ; test byte ptr [rcx], ch ; ret 0
0x000000000042eb78 : dec dword ptr [rdi] ; test cl, al ; or eax, dword ptr [rax] ; add cl, ch ; ret
0x00000000004320b3 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x0000000000429058 : dec esi ; sbb al, -0x73 ; sbb ecx, ebp ; ret
0x000000000042d506 : enter -0x62d3, 0x51 ; ret 0x8929
0x000000000042d456 : enter -0x63d3, 0x51 ; ret 0x8929
0x0000000000431d09 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040642b : enter 0x2d48, 0x14 ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8948
0x00000000004380b0 : enter 0xf41, -0x6b ; ret 0x8445
0x000000000040e029 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000405a3f : fimul dword ptr [rax + 0x29] ; ret 0x14b9
0x0000000000443288 : fld qword ptr [rcx - 9] ; jmp qword ptr [rcx]
0x000000000040e5e1 : fmul dword ptr [r8 - 0x75] ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000441f67 : fmul dword ptr [r9 - 0x57167e3f] ; ret
0x000000000040e5e2 : fmul dword ptr [rax - 0x75] ; add byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000445a92 : fmul dword ptr [rax - 0x7d] ; ret 0x48f0
0x0000000000441f68 : fmul dword ptr [rcx - 0x57167e3f] ; ret
0x00000000004466dc : fmul qword ptr [rax - 0x7d] ; ret
0x000000000042cc70 : fmul qword ptr [rbp - 3] ; inc edi ; mov r15d, dr1 ; xchg eax, edi ; ret 0xe99c
0x00000000004475d5 : fscale ; jmp qword ptr [rax]
0x00000000004475c5 : fscale ; jmp rax
0x0000000000437fd4 : fsubr st(1) ; ret
0x0000000000401e49 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004424cc : hlt ; add rsp, 0xe0 ; pop rbp ; ret
0x0000000000413c21 : hlt ; add rsp, 8 ; pop rbp ; ret
0x0000000000401b60 : hlt ; pop rbp ; mov edi, 0x649320 ; jmp rax
0x000000000042bc9b : idiv edi ; dec dword ptr [rax - 0x77] ; in al, dx ; pop rbp ; ret
0x0000000000404783 : imul eax, dword ptr [rax + rax + 0x44], -0x77 ; ret 0xb841
0x0000000000428951 : imul edi, dword ptr [rip], 0xf ; xchg eax, ebp ; ret 0xd284
0x000000000043db3b : in al, -0x17 ; cmp eax, 0xb8000001 ; ret
0x0000000000433956 : in al, 0 ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000040d4a8 : in al, 0x2d ; ret 0xc226
0x0000000000445d52 : in al, 0x48 ; add esp, 0x60 ; pop rbp ; ret
0x000000000042dcc1 : in al, 0x48 ; add esp, 0xb0 ; pop rbp ; ret
0x0000000000447d5c : in al, 4 ; add byte ptr [rax], al ; add ah, -3 ; jmp qword ptr [rbx]
0x0000000000433406 : in al, dx ; jmp 0x433a46
0x0000000000433405 : in al, dx ; jmp 0x433a47
0x00000000004428dc : in al, dx ; jmp 0x442959
0x00000000004428db : in al, dx ; jmp 0x44295a
0x0000000000407256 : in al, dx ; pop rbp ; ret
0x0000000000404e0f : in eax, dx ; int 0xff
0x0000000000428eff : in eax, dx ; jge 0x428ea6 ; sub eax, 0x9a6b3ab9 ; ret
0x000000000043aa25 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000428534 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000405996 : inc dword ptr [rbp + 0x21] ; ret 0x8141
0x00000000004131de : inc dword ptr [rbp + 0xf] ; ret 0x8944
0x00000000004047cd : inc dword ptr [rcx + 0xf] ; ret
0x000000000043ed6a : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret
0x00000000004335d5 : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x8445
0x000000000043ef27 : inc dword ptr [rcx - 0x47] ; xchg eax, esi ; mov ecx, 0xba41a9ee ; ret
0x000000000042890b : inc dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004475ff : inc eax ; or eax, dword ptr [rax] ; add byte ptr [rax], dh ; out -3, al ; jmp rax
0x000000000042cc73 : inc edi ; mov r15d, dr1 ; xchg eax, edi ; ret 0xe99c
0x000000000041362d : inc edi ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp rbx
0x0000000000424e37 : int 0x5b
0x0000000000404e10 : int 0xff
0x0000000000401b53 : ja 0x401b5a ; pop rbp ; ret
0x0000000000401bc6 : ja 0x401bf1 ; add byte ptr [rcx], al ; ret
0x0000000000411857 : ja 0x41183e ; ret 0x8974
0x00000000004113ce : jb 0x411402 ; jl 0x41138f ; ret 0x8237
0x000000000042bb6e : jb 0x42bb9f ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000448519 : jb 0x44851c ; jmp qword ptr [rax]
0x000000000043668d : jbe 0x43664c ; push rcx ; jmp rsp
0x000000000043668c : jbe 0x43664d ; push rcx ; jmp rsp
0x0000000000401b5f : je 0x401b5d ; pop rbp ; mov edi, 0x649320 ; jmp rax
0x000000000044610a : je 0x446155 ; add byte ptr [rbp - 0x77], al ; ret 0x8141
0x000000000040eba9 : jge 0x40ebaa ; stc ; ret
0x0000000000410628 : jge 0x4105b2 ; call 0x43c678
0x000000000041e2c6 : jge 0x41e24b ; ret 0xffd5
0x000000000041ed90 : jge 0x41ed70 ; shr cl, cl ; ret 0x3b
0x0000000000428f00 : jge 0x428ea5 ; sub eax, 0x9a6b3ab9 ; ret
0x000000000042e6f2 : jge 0x42e6c9 ; ret
0x000000000042e73d : jge 0x42e714 ; ret
0x000000000042f2fd : jge 0x42f2d4 ; ret
0x000000000042f7b0 : jge 0x42f787 ; ret
0x00000000004027f7 : jl 0x40281b ; ret 0x89a0
0x00000000004048d3 : jl 0x4048f7 ; ret 0x8ba0
0x00000000004113d0 : jl 0x41138d ; ret 0x8237
0x00000000004113cf : jl 0x41138e ; ret 0x8237
0x000000000043fd17 : jl 0x43fce1 ; ret
0x0000000000440ae0 : jl 0x440aaa ; ret
0x000000000040ebfd : jle 0x40ebfe ; stc ; ret
0x0000000000410f61 : jle 0x410f62 ; stc ; ret
0x000000000040182b : jmp 0x401667
0x00000000004065d3 : jmp 0x406643
0x00000000004048a0 : jmp 0x406644
0x000000000040ac17 : jmp 0x40b7f2
0x000000000040bbb5 : jmp 0x40bc86
0x000000000040bbb4 : jmp 0x40bc87
0x000000000040c2a0 : jmp 0x40c30b
0x000000000040da98 : jmp 0x40dcbe
0x00000000004106c3 : jmp 0x411762
0x000000000041dd16 : jmp 0x41dd1b
0x000000000041f4e0 : jmp 0x422960
0x000000000041d3e4 : jmp 0x422961
0x000000000041e7b1 : jmp 0x422962
0x00000000004244c4 : jmp 0x424568
0x0000000000429eab : jmp 0x42a917
0x0000000000429de8 : jmp 0x42a919
0x000000000042bf13 : jmp 0x42bf78
0x00000000004325c6 : jmp 0x4328a8
0x0000000000433407 : jmp 0x433a45
0x0000000000433983 : jmp 0x433a47
0x0000000000433e0b : jmp 0x433da1
0x000000000043dab1 : jmp 0x43dabc
0x000000000043db3c : jmp 0x43dc84
0x000000000043f018 : jmp 0x43f7a3
0x0000000000440f5e : jmp 0x4415d1
0x0000000000440ada : jmp 0x4415d3
0x00000000004428dd : jmp 0x442958
0x0000000000445ab3 : jmp 0x445b8c
0x000000000042aa8a : jmp 0x4f4e6d86
0x0000000000406678 : jmp 0x71d52953
0x000000000040d464 : jmp 0xffffffffb602fb2d
0x00000000004222b5 : jmp qword ptr [rax]
0x000000000040af0f : jmp qword ptr [rbx]
0x00000000004140b2 : jmp qword ptr [rcx]
0x000000000041ff67 : jmp qword ptr [rdi]
0x000000000040b7b9 : jmp qword ptr [rdx]
0x0000000000410ddd : jmp qword ptr [rsi]
0x0000000000401b67 : jmp rax
0x0000000000413633 : jmp rbx
0x000000000041f2ea : jmp rcx
0x0000000000412c01 : jmp rdi
0x0000000000401ba7 : jmp rdx
0x000000000040473d : jmp rsi
0x000000000040b587 : jmp rsp
0x0000000000401b90 : jne 0x401b97 ; pop rbp ; ret
0x00000000004027a3 : jnp 0x4027c7 ; ret 0x89a0
0x000000000043fcc3 : jnp 0x43fc8d ; ret
0x000000000040d67e : jo 0x40d6df ; ret
0x00000000004181de : jo 0x4181ea ; ret
0x0000000000419e4e : jo 0x419e5a ; ret
0x000000000041d39d : jo 0x41d3a9 ; ret
0x0000000000424684 : jo 0x4246e5 ; ret
0x000000000042d5cb : jo 0x42d62c ; ret
0x000000000044600c : jo 0x44606d ; ret
0x0000000000410ca7 : js 0x410c66 ; and ebx, ebp ; ret 0xb2b1
0x0000000000412967 : js 0x41294e ; ret 0x8974
0x0000000000413066 : js 0x41304d ; ret 0x8a74
0x000000000041308c : js 0x413073 ; ret 0xe974
0x000000000042f135 : js 0x42f0c9 ; test dword ptr [rbp + rdi*8 - 0x7bf00001], esp ; ret
0x000000000041ed8e : lcall ptr [rbx - 0x162d2583] ; ret 0x3b
0x0000000000437801 : lcall ptr [rsi - 7] ; ret 0xe980
0x000000000041fe8e : lcall ptr [rsi] ; pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x000000000040caa6 : lea eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000041dd14 : lea ecx, dword ptr [rax - 0x17000015] ; ret 0xfe3b
0x0000000000410627 : lea edi, dword ptr [rbp - 0x80] ; call 0x43c679
0x0000000000414ad5 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000424979 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000414ad4 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x0000000000447ec1 : leave ; std ; call rdx
0x000000000043c491 : ljmp ptr [rdi - 0x26] ; sbb al, -0x17 ; ret
0x000000000041d6ee : ljmp ptr [rdi] ; ret 0x23da
0x000000000040616c : ljmp ptr [rsi] ; ret 0x818b
0x00000000004036f5 : lodsd eax, dword ptr [rsi] ; ret
0x0000000000413588 : loop 0x41358d ; dec dword ptr [rax - 0x41] ; ret 0x7f0f
0x000000000040724f : loope 0x40725b ; movzx eax, cl ; mov rsp, rbp ; pop rbp ; ret
0x000000000040a6ba : loope 0x40a679 ; std ; ret 0x4859
0x00000000004206f5 : loope 0x4206c3 ; jmp 0x422963
0x00000000004477fd : loope 0x447800 ; call rax
0x000000000040d42b : loopne 0x40d47b ; add esp, 0x20 ; pop rbp ; ret
0x000000000040d42a : loopne 0x40d47c ; add esp, 0x20 ; pop rbp ; ret
0x000000000040da50 : loopne 0x40da59 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000040dc19 : loopne 0x40dc20 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000413448 : loopne 0x413452 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041362b : loopne 0x413633 ; inc edi ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp rbx
0x0000000000414ad3 : loopne 0x414b26 ; lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000042407d : loopne 0x4240e3 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000425464 : loopne 0x4254b7 ; add esp, 0xa0 ; pop rbp ; ret
0x0000000000425a18 : loopne 0x425a1f ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042b5d3 : loopne 0x42b5dc ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042bf5e : loopne 0x42bfae ; add esp, 0x60 ; pop rbp ; ret
0x000000000042bf5d : loopne 0x42bfaf ; add esp, 0x60 ; pop rbp ; ret
0x00000000004424d0 : loopne 0x4424d7 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000442e62 : loopne 0x442e69 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000444d0c : loopne 0x444d5b ; mov esp, ebp ; pop rbp ; ret
0x0000000000444d0b : loopne 0x444d5c ; mov esp, ebp ; pop rbp ; ret
0x0000000000444f5c : loopne 0x444fab ; mov esp, ebp ; pop rbp ; ret
0x0000000000444f5b : loopne 0x444fac ; mov esp, ebp ; pop rbp ; ret
0x0000000000445b05 : loopne 0x445b0c ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000447a30 : loopne 0x447a7d ; cld ; call qword ptr [rcx]
0x000000000041e2bd : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000041e397 : mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000041c345 : mov ah, 0x75 ; ret
0x0000000000447a2c : mov ah, 1 ; add byte ptr [rax], al ; loopne 0x447a81 ; cld ; call qword ptr [rcx]
0x000000000044812c : mov ah, 8 ; add byte ptr [rax], al ; sal byte ptr [rcx], -2 ; call rdx
0x0000000000424e53 : mov al, -0x47 ; ret
0x0000000000431d8f : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000402190 : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004477f8 : mov al, 0x13 ; add byte ptr [rax], al ; and cl, 0xff ; call rax
0x0000000000406d29 : mov al, 0x48 ; add esp, 0xa8 ; pop rbp ; ret
0x0000000000428f8e : mov al, 5 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000044357d : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000044324a : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004434ad : mov al, byte ptr [rbp - 1] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004020f8 : mov al, ch ; ret 0xfff6
0x0000000000433fb5 : mov bh, 0 ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000415ce5 : mov bl, 0x75 ; ret
0x000000000040a956 : mov byte ptr [r8 - 0x75], r9b ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000040a957 : mov byte ptr [rax - 0x75], cl ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x0000000000412d1f : mov byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000401bc3 : mov byte ptr [rip + 0x24778e], 1 ; ret
0x000000000041db3f : mov ch, byte ptr [rdx - 0x47] ; pop rbp ; pop rcx ; ret 0x1b2
0x0000000000407252 : mov dh, -0x3f ; mov rsp, rbp ; pop rbp ; ret
0x0000000000444214 : mov dh, -0x40 ; add rsp, 8 ; pop rbp ; ret
0x000000000043acfb : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x0000000000443250 : mov dh, -0x40 ; pop rbp ; ret
0x0000000000444cca : mov dl, -0x34 ; cmc ; and al, 0xffffffffffffff81 ; ret 0x61
0x0000000000401bc5 : mov dr0, word ptr [rdi + 0x24] ; add byte ptr [rcx], al ; ret
0x0000000000443f41 : mov dr1, word ptr [rcx + rcx*4 - 0x7bf05bbb] ; ret 2
0x0000000000414259 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000413e2f : mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x00000000004428da : mov dword ptr [rbp - 0x14], eax ; jmp 0x44295b
0x000000000043db39 : mov dword ptr [rbp - 0x1c], eax ; jmp 0x43dc87
0x000000000040d429 : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004244c1 : mov dword ptr [rbp - 0x44], eax ; jmp 0x42456b
0x00000000004053b8 : mov dword ptr [rbp - 0x688], ecx ; call 0x4016a8
0x0000000000429ea8 : mov dword ptr [rbp - 0x6c], eax ; jmp 0x42a91a
0x0000000000401e47 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000414536 : mov dword ptr [rcx + 0x30], eax ; mov rsp, rbp ; pop rbp ; ret
0x000000000043d90c : mov dword ptr [rdi + 0x10], eax ; pop rbp ; ret
0x000000000040b11f : mov dword ptr [rsi], 0xbcb80000 ; ret 0x9060
0x00000000004140dd : mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000401df4 : mov eax, 0x48fffffc ; add esp, 0x50 ; pop rbp ; ret
0x000000000042c81a : mov eax, 0x988c45c7 ; ret
0x00000000004475c0 : mov eax, 0xa ; fscale ; jmp rax
0x000000000040e5e4 : mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042bddb : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000441f04 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000438205 : mov eax, dword ptr [rbp - 0x10] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042bfae : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d0ae : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000442755 : mov eax, dword ptr [rbp - 0x18] ; mov eax, dword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000041425c : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000445d50 : mov eax, dword ptr [rbp - 0x1c] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000042bf5c : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000444d0a : mov eax, dword ptr [rbp - 0x20] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004140df : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000413c1f : mov eax, dword ptr [rbp - 0xc] ; add rsp, 8 ; pop rbp ; ret
0x000000000042d5c5 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004242cd : mov eax, dword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x00000000004140de : mov eax, dword ptr ds:[rbp - 0x38] ; pop rbp ; ret
0x0000000000407329 : mov eax, esi ; pop rbp ; ret
0x0000000000420af8 : mov ebp, 0xe19c53ba ; ret
0x0000000000401beb : mov ebp, esp ; call rax
0x0000000000401b51 : mov ebp, esp ; ja 0x401b5c ; pop rbp ; ret
0x0000000000412c97 : mov ebx, 0xc7000009 ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp qword ptr [rbx]
0x000000000043ef2b : mov ecx, 0xba41a9ee ; ret
0x0000000000413e2c : mov ecx, dword ptr [rbp - 0x10] ; mov dword ptr [rax], ecx ; mov rsp, rbp ; pop rbp ; ret
0x000000000043666f : mov edi, 0x51b94936 ; jmp rsp
0x0000000000401be5 : mov edi, 0x648e20 ; mov rbp, rsp ; call rax
0x0000000000401b62 : mov edi, 0x649320 ; jmp rax
0x0000000000401ba2 : mov edi, 0x649320 ; jmp rdx
0x000000000041d397 : mov edi, 0xb8000055 ; wait ; jo 0x41d3af ; ret
0x000000000042cc76 : mov edi, dr1 ; xchg eax, edi ; ret 0xe99c
0x00000000004466d7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x00000000004466d6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000043253e : mov edx, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000041db5b : mov edx, 0x595db993 ; ret 0x8b48
0x000000000041e9d2 : mov esi, 0x39443e04 ; ret 0xf41
0x0000000000432527 : mov esi, 0x57046e87 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000401ba0 : mov esi, eax ; mov edi, 0x649320 ; jmp rdx
0x0000000000439357 : mov esi, es ; ret
0x00000000004244c3 : mov esp, 0x99e9 ; add al, ch ; ret 0xfdd1
0x0000000000407255 : mov esp, ebp ; pop rbp ; ret
0x0000000000401be7 : mov fs, word ptr [rax + rax + 0x48] ; mov ebp, esp ; call rax
0x00000000004048cf : mov fs, word ptr [rip + 0x207cb9bf] ; ret 0x8ba0
0x0000000000414535 : mov qword ptr [rcx + 0x30], rax ; mov rsp, rbp ; pop rbp ; ret
0x000000000043d90b : mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x00000000004244c2 : mov r12d, 0x99e9 ; add al, ch ; ret 0xfdd1
0x000000000042cc75 : mov r15d, dr1 ; xchg eax, edi ; ret 0xe99c
0x00000000004020f7 : mov r8b, r13b ; ret 0xfff6
0x000000000042c819 : mov r8d, 0x988c45c7 ; ret
0x000000000040e5e3 : mov rax, qword ptr [rax] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042bdda : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000441f03 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000438204 : mov rax, qword ptr [rbp - 0x10] ; mov rsp, rbp ; pop rbp ; ret
0x000000000042bfad : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000040d0ad : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000042bf5b : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000042d5c4 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004242cc : mov rax, qword ptr [rbp - 8] ; mov rsp, rbp ; pop rbp ; ret
0x0000000000407328 : mov rax, rsi ; pop rbp ; ret
0x0000000000401bea : mov rbp, rsp ; call rax
0x0000000000401b50 : mov rbp, rsp ; ja 0x401b5d ; pop rbp ; ret
0x0000000000401b9f : mov rsi, rax ; mov edi, 0x649320 ; jmp rdx
0x0000000000407254 : mov rsp, rbp ; pop rbp ; ret
0x000000000042bb71 : mov word ptr [rax + 1], cs ; ret 0x8b48
0x00000000004410eb : movabs byte ptr [0x7eb8000004d9e994], al ; ret 0x1d90
0x0000000000419638 : movabs byte ptr [0x840ffffff3c48589], al ; ret 0x4b
0x000000000041c885 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x6a8a
0x000000000043668b : movsd dword ptr [rdi], dword ptr [rsi] ; jbe 0x43664e ; push rcx ; jmp rsp
0x0000000000426d82 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x000000000040f1e6 : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x89f4
0x0000000000410905 : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xb9f4
0x0000000000444213 : movzx eax, al ; add rsp, 8 ; pop rbp ; ret
0x000000000043acfa : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x000000000044324f : movzx eax, al ; pop rbp ; ret
0x0000000000407251 : movzx eax, cl ; mov rsp, rbp ; pop rbp ; ret
0x0000000000432338 : neg byte ptr [rsi + 0x2948e012] ; ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000415b25 : nop ; ret
0x0000000000423f32 : nop ; ret 0x148
0x0000000000423f46 : nop ; ret 0x2948
0x00000000004466f8 : nop dword ptr [rax + rax] ; ret
0x00000000004285d1 : or al, 0 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; call rsi
0x0000000000432d61 : or al, 0 ; add cl, ch ; ret
0x000000000041e2ba : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000041e394 : or al, 0x2a ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000412bf9 : or al, byte ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp rdi
0x0000000000428815 : or al, byte ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; call rsi
0x00000000004475c1 : or al, byte ptr [rax] ; add byte ptr [rax], al ; fscale ; jmp rax
0x00000000004380ad : or al, byte ptr [rbp + 0x39] ; enter 0xf41, -0x6b ; ret 0x8445
0x0000000000447fa8 : or al, dl ; std ; jmp qword ptr [rbx]
0x0000000000437477 : or byte ptr [r8 - 0x75], 0x51 ; adc byte ptr [rax + 1], cl ; ret 0x8948
0x000000000044539c : or byte ptr [rax + 0x69], cl ; ret 0x101
0x0000000000437478 : or byte ptr [rax - 0x75], 0x51 ; adc byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000413e30 : or byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x000000000044812d : or byte ptr [rax], al ; add al, al ; xor esi, edi ; call rdx
0x0000000000429488 : or byte ptr [rax], al ; add byte ptr [rbx - 0x25d26fbb], cl ; pop rbx ; ret
0x000000000040e3dc : or byte ptr [rsi + 0x48e28948], 0x83 ; ret 0x48f0
0x0000000000445f5c : or cl, ch ; ret 0
0x000000000041f3a6 : or dword ptr [rax - 0x77], ecx ; ret 0x2948
0x0000000000414534 : or dword ptr [rax - 0x77], ecx ; xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000412c98 : or dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp qword ptr [rbx]
0x0000000000428814 : or eax, 0xc700000a ; test dword ptr [rdi + rdi*8 - 1], esp ; call rsi
0x0000000000410a55 : or eax, 0xc8b80000 ; ret 0xdbca
0x0000000000428490 : or eax, 0xd8b80000 ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x000000000042871d : or eax, dword ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; call rsi
0x0000000000448475 : or eax, dword ptr [rax] ; add byte ptr [rax], bl ; sub edi, edi ; call rbx
0x0000000000447601 : or eax, dword ptr [rax] ; add byte ptr [rax], dh ; out -3, al ; jmp rax
0x000000000042eb7c : or eax, dword ptr [rax] ; add cl, ch ; ret
0x00000000004140db : or edi, eax ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000447605 : out -3, al ; jmp rax
0x000000000041fc9b : out dx, al ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb740
0x000000000044324c : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000044357f : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000424e52 : out dx, eax ; mov al, -0x47 ; ret
0x0000000000432529 : outsb dx, byte ptr [rsi] ; add al, 0x57 ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x0000000000420d85 : outsb dx, byte ptr [rsi] ; ret 0x4861
0x00000000004159d6 : outsb dx, byte ptr [rsi] ; ret 0x8961
0x0000000000420dd0 : outsb dx, byte ptr [rsi] ; ret 0xe961
0x000000000042ad11 : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x000000000043252c : outsd dx, dword ptr [rsi] ; ret 0x4815
0x000000000042bb6c : pop ax ; jb 0x42bba1 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000405e6d : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004466ec : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000042407f : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000405e6f : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004466ee : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405e71 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004466f0 : pop r14 ; pop r15 ; ret
0x0000000000414ad9 : pop r14 ; pop rbp ; ret
0x0000000000405e73 : pop r15 ; pop rbp ; ret
0x00000000004466f2 : pop r15 ; ret
0x000000000042bb6d : pop rax ; jb 0x42bba0 ; cli ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x000000000040921f : pop rax ; ret 0x3b62
0x0000000000401bc2 : pop rbp ; mov byte ptr [rip + 0x24778e], 1 ; ret
0x0000000000401b61 : pop rbp ; mov edi, 0x649320 ; jmp rax
0x0000000000401b9e : pop rbp ; mov rsi, rax ; mov edi, 0x649320 ; jmp rdx
0x00000000004466eb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000405e70 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004466ef : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000041db42 : pop rbp ; pop rcx ; ret 0x1b2
0x0000000000419e15 : pop rbp ; pop rcx ; ret 0x8589
0x000000000041db5e : pop rbp ; pop rcx ; ret 0x8b48
0x0000000000401b55 : pop rbp ; ret
0x0000000000434e43 : pop rbp ; stc ; ret 0x8980
0x000000000042407e : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000422d75 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000414ad8 : pop rbx ; pop r14 ; pop rbp ; ret
0x00000000004413a8 : pop rbx ; pop rbp ; ret
0x0000000000429490 : pop rbx ; ret
0x000000000041db43 : pop rcx ; ret 0x1b2
0x0000000000418216 : pop rcx ; ret 0x8589
0x000000000041db5f : pop rcx ; ret 0x8b48
0x000000000041fe90 : pop rcx ; sar ebp, -0x17 ; ret 0x2a
0x0000000000405e74 : pop rdi ; pop rbp ; ret
0x00000000004466f3 : pop rdi ; ret
0x0000000000412bf8 : pop rdx ; or al, byte ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp rdi
0x0000000000406c94 : pop rdx ; ret 0x3db9
0x000000000040680c : pop rdx ; ret 0x8589
0x0000000000405e72 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004466f1 : pop rsi ; pop r15 ; ret
0x0000000000414ada : pop rsi ; pop rbp ; ret
0x000000000043e9bd : pop rsi ; ret
0x0000000000434e97 : pop rsi ; stc ; ret 0x8980
0x0000000000437802 : pop rsi ; stc ; ret 0xe980
0x0000000000405e6e : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004466ed : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000424080 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000418215 : pop rsp ; pop rcx ; ret 0x8589
0x000000000042d508 : popfq ; push rcx ; ret 0x8929
0x000000000042d536 : popfq ; push rcx ; ret 0xb929
0x00000000004056af : popfq ; ret
0x0000000000444095 : popfq ; ret 0xd284
0x00000000004047c9 : popfq ; sar cl, -1 ; inc dword ptr [rcx + 0xf] ; ret
0x000000000041db40 : push -0x47 ; pop rbp ; pop rcx ; ret 0x1b2
0x0000000000440f5f : push -0x47fffffa ; ret
0x000000000041fd2a : push -0x75425eeb ; push rbp ; ret
0x000000000041c888 : push -0x77 ; test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x0000000000447b51 : push -4 ; jmp qword ptr [rcx]
0x00000000004477f7 : push qword ptr [rax - 0x7fffffed] ; loope 0x447806 ; call rax
0x000000000040a725 : push qword ptr [rsi] ; ret 0x13b9
0x0000000000408067 : push qword ptr [rsi] ; ret 0x8589
0x000000000040b5fb : push qword ptr [rsi] ; ret 0xe6e9
0x0000000000437fd0 : push qword ptr [rsi] ; stosd dword ptr [rdi], eax ; fsubr st(1) ; ret
0x00000000004477a0 : push rax ; adc al, byte ptr [rax] ; add byte ptr [rax], dl ; ret
0x0000000000434bf7 : push rax ; jmp rsp
0x0000000000401dfb : push rax ; pop rbp ; ret
0x0000000000445a91 : push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x48f0
0x0000000000401be4 : push rbp ; mov edi, 0x648e20 ; mov rbp, rsp ; call rax
0x000000000041fd2f : push rbp ; ret
0x000000000041fcc6 : push rbp ; ret 0xd284
0x000000000041e2bf : push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000041e399 : push rbp ; test al, -0x7f ; ret 0xa30b
0x0000000000436e55 : push rcx ; adc byte ptr [rax + 1], cl ; ret 0x8948
0x00000000004068f7 : push rcx ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000428950 : push rcx ; imul edi, dword ptr [rip], 0xf ; xchg eax, ebp ; ret 0xd284
0x0000000000435b0f : push rcx ; jmp rsp
0x00000000004285d0 : push rcx ; or al, 0 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; call rsi
0x000000000042d459 : push rcx ; ret 0x8929
0x000000000042d537 : push rcx ; ret 0xb929
0x0000000000433b33 : push rcx ; sbb byte ptr [rbp + 1], cl ; ret 0x894d
0x0000000000406c92 : push rdi ; adc al, 0x5a ; ret 0x3db9
0x0000000000406855 : push rdi ; adc al, 0x5a ; ret 0x8589
0x0000000000409e56 : push rdi ; add dl, byte ptr [rsi] ; ret 0x8ae9
0x000000000043252b : push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x00000000004091cb : push rdi ; ret 0x3b62
0x000000000043dc1a : push rdx ; add dword ptr [rax], 0xec894800 ; pop rbp ; ret
0x000000000041362a : push rdx ; loopne 0x413634 ; inc edi ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp rbx
0x000000000040680a : push rsi ; adc al, 0x5a ; ret 0x8589
0x000000000042d458 : pushfq ; push rcx ; ret 0x8929
0x000000000040537a : pushfq ; ret 0xd284
0x0000000000428f01 : pushfq ; sub eax, 0x9a6b3ab9 ; ret
0x0000000000401651 : ret
0x000000000041513e : ret 0
0x000000000043dc0e : ret 0x10
0x000000000043b6b9 : ret 0x1002
0x000000000044539f : ret 0x101
0x000000000043e0d1 : ret 0x12
0x000000000043b585 : ret 0x1252
0x000000000040a728 : ret 0x13b9
0x0000000000423f33 : ret 0x148
0x0000000000405a42 : ret 0x14b9
0x000000000040bff8 : ret 0x1688
0x0000000000434059 : ret 0x18
0x0000000000420e94 : ret 0x1a
0x000000000041610d : ret 0x1add
0x000000000040adfa : ret 0x1b2
0x0000000000441500 : ret 0x1d90
0x0000000000416a5a : ret 0x23da
0x0000000000401a32 : ret 0x2477
0x0000000000401832 : ret 0x2478
0x000000000040b9f3 : ret 0x26c1
0x0000000000423758 : ret 0x279e
0x000000000041f3a9 : ret 0x2948
0x000000000041fe94 : ret 0x2a
0x000000000041e2c2 : ret 0x2d50
0x00000000004106b3 : ret 0x3040
0x000000000041ed94 : ret 0x3b
0x00000000004091cc : ret 0x3b62
0x000000000040fecd : ret 0x3c58
0x000000000043730e : ret 0x3ce8
0x0000000000406c95 : ret 0x3db9
0x000000000041bdf5 : ret 0x3e
0x00000000004457d1 : ret 0x43dd
0x000000000043d970 : ret 0x4449
0x0000000000433872 : ret 0x4589
0x000000000040fb86 : ret 0x4777
0x000000000041f231 : ret 0x4802
0x000000000044535e : ret 0x4810
0x000000000043252e : ret 0x4815
0x0000000000433f6d : ret 0x4818
0x000000000040a6be : ret 0x4859
0x0000000000420d86 : ret 0x4861
0x000000000043e2a1 : ret 0x48c
0x00000000004366cb : ret 0x48c0
0x0000000000404490 : ret 0x48f0
0x0000000000437d40 : ret 0x4ae8
0x0000000000419641 : ret 0x4b
0x0000000000424c57 : ret 0x4cc0
0x0000000000405f1f : ret 0x4cf0
0x000000000042aa8c : ret 0x4f0b
0x0000000000440257 : ret 0x5452
0x000000000041408b : ret 0x5589
0x0000000000409ca0 : ret 0x558a
0x00000000004343c4 : ret 0x581e
0x000000000041e54a : ret 0x5966
0x0000000000426826 : ret 0x5aa2
0x00000000004296e7 : ret 0x5bc6
0x000000000040d75f : ret 0x5d68
0x000000000043ecb1 : ret 0x6044
0x0000000000444ccf : ret 0x61
0x00000000004065d2 : ret 0x65e9
0x00000000004157a6 : ret 0x6a8a
0x0000000000428ccc : ret 0x6ee8
0x00000000004401e8 : ret 0x701
0x00000000004291ca : ret 0x70e8
0x000000000040667a : ret 0x7194
0x00000000004059c2 : ret 0x74b9
0x000000000041545e : ret 0x77a8
0x00000000004165c1 : ret 0x7a8a
0x000000000041d23b : ret 0x7b7f
0x000000000041358d : ret 0x7f0f
0x0000000000423bea : ret 0x8041
0x0000000000405999 : ret 0x8141
0x000000000040a95d : ret 0x8148
0x00000000004022d4 : ret 0x818b
0x000000000041f154 : ret 0x822d
0x0000000000410311 : ret 0x8237
0x00000000004112c0 : ret 0x8445
0x0000000000403712 : ret 0x8589
0x0000000000407209 : ret 0x858a
0x000000000043c0b0 : ret 0x85c7
0x0000000000446119 : ret 0x8845
0x0000000000440205 : ret 0x8904
0x0000000000425c46 : ret 0x8912
0x000000000042d45a : ret 0x8929
0x00000000004161d3 : ret 0x8940
0x00000000004131e2 : ret 0x8944
0x0000000000406428 : ret 0x8948
0x0000000000430b4f : ret 0x894a
0x0000000000433b37 : ret 0x894d
0x0000000000409745 : ret 0x8959
0x00000000004159d7 : ret 0x8961
0x0000000000411859 : ret 0x8974
0x0000000000434e45 : ret 0x8980
0x000000000042c3f2 : ret 0x899c
0x00000000004027a5 : ret 0x89a0
0x000000000040e9eb : ret 0x89b1
0x000000000040d467 : ret 0x89b5
0x000000000040f1e7 : ret 0x89f4
0x0000000000407349 : ret 0x8a44
0x0000000000432045 : ret 0x8a4a
0x0000000000413068 : ret 0x8a74
0x0000000000409e5a : ret 0x8ae9
0x00000000004056a4 : ret 0x8b48
0x00000000004048d5 : ret 0x8ba0
0x0000000000410cc7 : ret 0x8bb1
0x000000000043d44c : ret 0x8ee8
0x0000000000422c9a : ret 0x90
0x00000000004078dc : ret 0x9060
0x0000000000440e57 : ret 0x93e8
0x0000000000410e53 : ret 0x958a
0x0000000000408243 : ret 0x969b
0x000000000040f079 : ret 0xa2bc
0x000000000041e39c : ret 0xa30b
0x00000000004028bc : ret 0xa892
0x000000000044281f : ret 0xac60
0x000000000042865f : ret 0xb
0x0000000000404f05 : ret 0xb0
0x000000000040a6a2 : ret 0xb259
0x0000000000410cab : ret 0xb2b1
0x0000000000445d22 : ret 0xb60f
0x000000000041fca0 : ret 0xb740
0x0000000000404788 : ret 0xb841
0x000000000042bb67 : ret 0xb848
0x0000000000441111 : ret 0xb904
0x00000000004262bd : ret 0xb912
0x000000000042d538 : ret 0xb929
0x000000000041ded0 : ret 0xb940
0x0000000000431fd2 : ret 0xb94a
0x000000000042ca55 : ret 0xb99c
0x0000000000410906 : ret 0xb9f4
0x0000000000432c74 : ret 0xbe70
0x000000000042031c : ret 0xbf48
0x0000000000433592 : ret 0xc
0x0000000000401b85 : ret 0xc148
0x000000000040d4aa : ret 0xc226
0x0000000000432788 : ret 0xc2e8
0x0000000000444f12 : ret 0xc493
0x0000000000428372 : ret 0xc8e8
0x0000000000443209 : ret 0xca21
0x0000000000444cd5 : ret 0xccb2
0x00000000004052b4 : ret 0xd284
0x0000000000430795 : ret 0xd618
0x000000000040ef7e : ret 0xdbca
0x000000000043f40e : ret 0xdce8
0x0000000000408473 : ret 0xde31
0x00000000004441bb : ret 0xe280
0x00000000004289b5 : ret 0xe2b9
0x000000000040b5fe : ret 0xe6e9
0x000000000042638e : ret 0xe912
0x000000000041fb72 : ret 0xe940
0x0000000000420dd1 : ret 0xe961
0x000000000041308e : ret 0xe974
0x0000000000437804 : ret 0xe980
0x000000000042cc79 : ret 0xe99c
0x00000000004386a1 : ret 0xe9e8
0x0000000000416bfd : ret 0xea51
0x0000000000444cc7 : ret 0xea81
0x000000000042298c : ret 0xee8
0x00000000004140c5 : ret 0xf281
0x0000000000405b37 : ret 0xf3e8
0x000000000042912c : ret 0xf3e9
0x000000000041e9d7 : ret 0xf41
0x000000000040652c : ret 0xf45
0x000000000043e039 : ret 0xf62a
0x000000000043e9a1 : ret 0xf738
0x0000000000438f9e : ret 0xf7c7
0x0000000000420925 : ret 0xf7f3
0x000000000041f0ae : ret 0xfc75
0x000000000043385a : ret 0xfcdf
0x00000000004244ca : ret 0xfdd1
0x000000000041dd1a : ret 0xfe3b
0x000000000040458f : ret 0xff70
0x00000000004071da : ret 0xffa4
0x000000000042091f : ret 0xffa5
0x000000000041f0a8 : ret 0xffc4
0x000000000041e2c8 : ret 0xffd5
0x000000000041e3a2 : ret 0xffd8
0x000000000041f15a : ret 0xffd9
0x000000000041e544 : ret 0xffe0
0x00000000004020fa : ret 0xfff6
0x00000000004115ad : ret 0xfff9
0x000000000041d235 : ret 0xfffa
0x00000000004474ed : ret 0xfffc
0x00000000004053c0 : ret 0xffff
0x00000000004068fc : ret 1
0x000000000041ef40 : ret 2
0x0000000000425570 : ret 4
0x000000000040af24 : ret 8
0x000000000043c7bc : ret 9
0x0000000000447ee1 : retf ; std ; call qword ptr [rbx]
0x000000000043250d : rol byte ptr [rax + 0x48f22948], -0x7f ; ret 1
0x000000000042d87c : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040bc08 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000043250c : rol byte ptr ds:[rax + 0x48f22948], -0x7f ; ret 1
0x0000000000447dc0 : rol ch, 1 ; std ; call rdi
0x00000000004115a3 : rol dword ptr [rdi - 0x78], -0x7b ; ret
0x0000000000446574 : ror byte ptr [r8 - 0x77], 1 ; ret 0x2948
0x000000000042bb64 : ror byte ptr [rax + 1], cl ; ret 0xb848
0x0000000000401b8c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x401b9b ; pop rbp ; ret
0x000000000043acfc : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x0000000000446575 : ror byte ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000447600 : ror byte ptr [rbx], 0 ; add byte ptr [rax], dh ; out -3, al ; jmp rax
0x00000000004140da : ror byte ptr [rcx], -0x39 ; mov dword ptr [rsi], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000445d1f : ror byte ptr [rdi], -0x6c ; ret 0xb60f
0x0000000000407253 : ror dword ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x000000000043233e : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000424b10 : ror dword ptr [rcx - 0x7d], cl ; ret
0x00000000004431ac : sahf ; ret 0xd284
0x0000000000448130 : sal byte ptr [rcx], -2 ; call rdx
0x0000000000410e34 : salc ; adc ah, al ; ret 0x1b2
0x000000000040ebc5 : salc ; adc ah, al ; ret 0x8589
0x0000000000410e50 : salc ; adc ah, al ; ret 0x958a
0x0000000000447fa9 : sar ch, 1 ; jmp qword ptr [rbx]
0x00000000004047ca : sar cl, -1 ; inc dword ptr [rcx + 0xf] ; ret
0x000000000041159d : sar dh, -1 ; call rdi
0x00000000004115fe : sar dh, -1 ; call rdx
0x0000000000411511 : sar dh, -1 ; call rsp
0x0000000000410dda : sar dh, -1 ; jmp qword ptr [rsi]
0x0000000000401b8e : sar eax, 1 ; jne 0x401b99 ; pop rbp ; ret
0x000000000041fe91 : sar ebp, -0x17 ; ret 0x2a
0x000000000044779d : sar edi, -1 ; push rax ; adc al, byte ptr [rax] ; add byte ptr [rax], dl ; ret
0x0000000000448819 : sar edi, cl ; jmp rax
0x0000000000401b8d : sar rax, 1 ; jne 0x401b9a ; pop rbp ; ret
0x0000000000410cc2 : sbb ah, byte ptr [rdx - 0x47] ; and ebx, ebp ; ret 0x8bb1
0x000000000043c494 : sbb al, -0x17 ; ret
0x000000000042905a : sbb al, -0x73 ; sbb ecx, ebp ; ret
0x0000000000448790 : sbb al, 0 ; add byte ptr [rax], al ; sbb al, 0xf ; add byte ptr [rax], al ; ret
0x0000000000424e50 : sbb al, 0x41 ; out dx, eax ; mov al, -0x47 ; ret
0x0000000000448794 : sbb al, 0xf ; add byte ptr [rax], al ; ret
0x000000000043d7cb : sbb al, 1 ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000433b34 : sbb byte ptr [rbp + 1], cl ; ret 0x894d
0x00000000004475d4 : sbb cl, -3 ; jmp qword ptr [rax]
0x000000000041fd91 : sbb cl, ch ; ret
0x000000000042b3b3 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004048a2 : sbb eax, 0x7b80000 ; ret
0x0000000000446005 : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000423ea0 : sbb ecx, dword ptr [rax - 0x7f] ; ret
0x000000000042905c : sbb ecx, ebp ; ret
0x00000000004132a4 : scasb al, byte ptr [rdi] ; add eax, dword ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp qword ptr [rbx]
0x000000000041ed92 : shr cl, cl ; ret 0x3b
0x0000000000448795 : sldt word ptr [rax] ; ret
0x000000000040ebab : stc ; ret
0x000000000041cbcd : stc ; ret 0x77a8
0x0000000000434e44 : stc ; ret 0x8980
0x0000000000437803 : stc ; ret 0xe980
0x0000000000410ca5 : stc ; xor eax, 0xeb21b978 ; ret 0xb2b1
0x0000000000447ee2 : std ; call qword ptr [rbx]
0x0000000000447546 : std ; call rax
0x0000000000447dc2 : std ; call rdi
0x0000000000447ec2 : std ; call rdx
0x00000000004475fe : std ; inc eax ; or eax, dword ptr [rax] ; add byte ptr [rax], dh ; out -3, al ; jmp rax
0x000000000042cc72 : std ; inc edi ; mov r15d, dr1 ; xchg eax, edi ; ret 0xe99c
0x00000000004475d6 : std ; jmp qword ptr [rax]
0x0000000000447d62 : std ; jmp qword ptr [rbx]
0x00000000004475c6 : std ; jmp rax
0x0000000000423757 : std ; ret 0x279e
0x000000000040a6bd : std ; ret 0x4859
0x0000000000409744 : std ; ret 0x8959
0x000000000040a6a1 : std ; ret 0xb259
0x0000000000404f7c : sti ; add byte ptr [rax - 0x6bf10000], al ; ret
0x000000000044745e : sti ; jmp qword ptr [rax]
0x0000000000408fd3 : stosb byte ptr [rdi], al ; clc ; ret
0x0000000000409027 : stosd dword ptr [rdi], eax ; clc ; ret
0x0000000000437fd2 : stosd dword ptr [rdi], eax ; fsubr st(1) ; ret
0x0000000000447fa4 : sub al, 7 ; add byte ptr [rax], al ; or al, dl ; std ; jmp qword ptr [rbx]
0x000000000040c3ee : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x0000000000442926 : sub byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040c2d8 : sub byte ptr [rax], al ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000041e2c5 : sub byte ptr [rbp - 0x7f], bh ; ret 0xffd5
0x000000000041e2bb : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0x2d50
0x000000000041e395 : sub dh, bl ; mov ah, -0x75 ; push rbp ; test al, -0x7f ; ret 0xa30b
0x000000000042cb4e : sub dword ptr [rcx], eax ; add byte ptr [rax], al ; mov rsp, rbp ; pop rbp ; ret
0x000000000041f155 : sub eax, 0x81268e82 ; ret 0xffd9
0x0000000000428f02 : sub eax, 0x9a6b3ab9 ; ret
0x0000000000448479 : sub edi, edi ; call rbx
0x000000000042bb6f : sub edx, edi ; mov word ptr [rax + 1], cs ; ret 0x8b48
0x0000000000446741 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000446740 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000041e2c0 : test al, -0x7f ; ret 0x2d50
0x000000000041e39a : test al, -0x7f ; ret 0xa30b
0x0000000000431de3 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000406d2d : test al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042452e : test al, 0x48 ; add esp, 0x80 ; pop rbp ; ret
0x0000000000420af6 : test al, 0x48 ; mov ebp, 0xe19c53ba ; ret
0x000000000042ac08 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x00000000004413a4 : test al, 3 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000425680 : test al, dl ; add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000433160 : test byte ptr [rax - 0x16fffff9], cl ; ret 1
0x00000000004466fa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000425e43 : test byte ptr [rbx], dh ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x000000000041513c : test byte ptr [rcx], ch ; ret 0
0x000000000043c7b6 : test byte ptr [rdi - 0x16fffff1], ah ; ret 9
0x0000000000407fa3 : test byte ptr [rdx], 0x16 ; ret 0x8589
0x000000000042eb7a : test cl, al ; or eax, dword ptr [rax] ; add cl, ch ; ret
0x0000000000415136 : test dword ptr [rax + 0xffffffd], esp ; test byte ptr [rcx], ch ; ret 0
0x000000000042f137 : test dword ptr [rbp + rdi*8 - 0x7bf00001], esp ; ret
0x000000000043bf5c : test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rbx
0x000000000043c175 : test dword ptr [rdi + rdi*8 - 1], ebp ; jmp rsi
0x000000000042ad16 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rdx]
0x0000000000412c9c : test dword ptr [rdi + rdi*8 - 1], edx ; jmp qword ptr [rbx]
0x000000000041362f : test dword ptr [rdi + rdi*8 - 1], edx ; jmp rbx
0x0000000000412bfd : test dword ptr [rdi + rdi*8 - 1], edx ; jmp rdi
0x000000000042414a : test dword ptr [rdi + rdi*8 - 1], esp ; call qword ptr [rbx]
0x00000000004282ee : test dword ptr [rdi + rdi*8 - 1], esp ; call rax
0x00000000004285d5 : test dword ptr [rdi + rdi*8 - 1], esp ; call rsi
0x0000000000429063 : test dword ptr [rdi + rdi*8 - 1], esp ; jmp qword ptr [rcx]
0x000000000041fb6b : test dword ptr [rsi + rdi*8 + 0x2465ffff], esp ; ret 0xe940
0x000000000043adf8 : test dword ptr [rsi + rdi*8 + 0x2f11ffff], edx ; ret
0x000000000040f1df : test dword ptr [rsi + rdi*8 + 0x612dffff], esi ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x89f4
0x000000000040f233 : test dword ptr [rsi + rdi*8 + 0x622dffff], esi ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x89f4
0x0000000000420dca : test dword ptr [rsi + rdi*8 + 0x6e94ffff], esp ; ret 0xe961
0x000000000040eba3 : test dword ptr [rsi + rdi*8 + 0x7d2dffff], esi ; cld ; stc ; ret
0x000000000040ebf7 : test dword ptr [rsi + rdi*8 + 0x7e2dffff], esi ; cld ; stc ; ret
0x000000000040ebbf : test dword ptr [rsi + rdi*8 - 0x29d20001], esi ; adc ah, al ; ret 0x8589
0x000000000040eb6b : test dword ptr [rsi + rdi*8 - 0x2ad20001], esi ; adc ah, al ; ret 0x8589
0x000000000040efcb : test dword ptr [rsi + rdi*8 - 0x37d20001], esi ; ret 0xdbca
0x000000000040ef77 : test dword ptr [rsi + rdi*8 - 0x38d20001], esi ; ret 0xdbca
0x000000000040fbd3 : test dword ptr [rsi + rdi*8 - 0x3ad20001], esi ; ret 0x4777
0x000000000040fb7f : test dword ptr [rsi + rdi*8 - 0x3bd20001], esi ; ret 0x4777
0x000000000043cd3f : test dword ptr [rsi + rdi*8 - 0x7bf00001], edi ; ret
0x000000000041c88a : test dword ptr [rsp + rbp*8 - 0x7bf00001], edx ; ret
0x000000000040f5be : test dword ptr [rsp + rdi*8 - 0x7bf00001], eax ; ret
0x0000000000420d7f : test eax, 0xb9dd5cac ; xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x000000000041ed8f : wait ; jge 0x41ed71 ; shr cl, cl ; ret 0x3b
0x0000000000419e4d : wait ; jo 0x419e5b ; ret
0x000000000041d39c : wait ; jo 0x41d3aa ; ret
0x0000000000432528 : xchg dword ptr [rsi + 4], ebp ; push rdi ; outsd dx, dword ptr [rsi] ; ret 0x4815
0x00000000004112bf : xchg eax, ebp ; ret 0x8445
0x00000000004052b3 : xchg eax, ebp ; ret 0xd284
0x0000000000405372 : xchg eax, ebx ; add byte ptr fs:[rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000405663 : xchg eax, ebx ; add byte ptr fs:[rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004159d5 : xchg eax, ebx ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x000000000041c2d5 : xchg eax, ebx ; ret
0x000000000042e6f1 : xchg eax, ecx ; jge 0x42e6ca ; ret
0x000000000041c505 : xchg eax, ecx ; ret
0x000000000042c2d8 : xchg eax, edi ; ret
0x000000000042c3f1 : xchg eax, edi ; ret 0x899c
0x000000000042ca54 : xchg eax, edi ; ret 0xb99c
0x000000000040da56 : xchg eax, edi ; ret 0xd284
0x000000000042cc78 : xchg eax, edi ; ret 0xe99c
0x000000000042e73c : xchg eax, edx ; jge 0x42e715 ; ret
0x000000000042f2fc : xchg eax, edx ; jge 0x42f2d5 ; ret
0x000000000042f7af : xchg eax, edx ; jge 0x42f788 ; ret
0x000000000042848f : xchg eax, edx ; or eax, 0xd8b80000 ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000415d55 : xchg eax, edx ; ret
0x0000000000423bff : xchg eax, edx ; ret 0x8445
0x000000000042ac0e : xchg eax, edx ; ret 0xd284
0x000000000043ef2a : xchg eax, esi ; mov ecx, 0xba41a9ee ; ret
0x00000000004106c4 : xchg eax, esp ; adc byte ptr [rax], al ; add al, ch ; ret
0x0000000000429eaa : xchg eax, esp ; jmp 0x42a918
0x0000000000429de7 : xchg eax, esp ; jmp 0x42a91a
0x0000000000420d84 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x4861
0x000000000041c655 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0x8961
0x0000000000420dcf : xchg eax, esp ; outsb dx, byte ptr [rsi] ; ret 0xe961
0x0000000000404f82 : xchg eax, esp ; ret
0x0000000000423be9 : xchg eax, esp ; ret 0x8041
0x00000000004335d8 : xchg eax, esp ; ret 0x8445
0x0000000000445d21 : xchg eax, esp ; ret 0xb60f
0x000000000041fc9e : xchg eax, esp ; ret 0xb740
0x0000000000425449 : xchg eax, esp ; ret 0xd284
0x0000000000429ea9 : xchg eax, r12d ; jmp 0x42a919
0x0000000000426d81 : xlatb ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000000004113cd : xor al, 0x72 ; jl 0x411390 ; ret 0x8237
0x000000000041fc99 : xor al, byte ptr [rbx - 0x6bf0fd12] ; ret 0xb740
0x0000000000448151 : xor bh, dh ; call qword ptr [rdx]
0x0000000000414537 : xor byte ptr [r8 - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000414538 : xor byte ptr [rax - 0x77], cl ; in al, dx ; pop rbp ; ret
0x0000000000448150 : xor byte ptr [rdx], 0xfe ; call qword ptr [rdx]
0x0000000000447604 : xor dh, ah ; std ; jmp rax
0x000000000044745c : xor dl, dh ; sti ; jmp qword ptr [rax]
0x0000000000410ca6 : xor eax, 0xeb21b978 ; ret 0xb2b1
0x0000000000448131 : xor esi, edi ; call rdx
