0x0000000000436ff9 : adc al, 0 ; add byte ptr [rax], al ; jo 0x437004 ; jmp qword ptr [rax]
0x0000000000436f01 : adc byte ptr [rax], al ; add al, dh ; ret 0xfffe
0x0000000000436ef9 : adc byte ptr [rax], al ; add al, dl ; ret 0xfffe
0x00000000004063c4 : adc byte ptr [rax], al ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], esi ; call rbx
0x0000000000436f09 : adc byte ptr [rax], al ; add byte ptr [rax], ah ; ret
0x0000000000406b1b : adc byte ptr [rbp - 0x3876ff9d], -0x77 ; ret 0xc189
0x000000000040e0d6 : adc byte ptr [rbx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000436f69 : adc dword ptr [rax], eax ; add al, ah ; or edi, edi ; jmp rax
0x00000000004062fe : adc dword ptr [rax], eax ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], esi ; call rax
0x0000000000432c6b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042284b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000406133 : adc eax, dword ptr [rax] ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], esi ; call rbx
0x000000000041e4e9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408c8d : adc ecx, ebp ; ret
0x0000000000437513 : add ah, al ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x57], ch ; std ; call qword ptr [rsi]
0x000000000042b283 : add al, 0 ; add cl, ch ; ret 1
0x0000000000408361 : add al, 0x26 ; ret
0x0000000000430aa8 : add al, 0x45 ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000437a54 : add al, 9 ; add byte ptr [rax], al ; call 0x234378da
0x0000000000436d3b : add al, ah ; mov dh, -3 ; jmp qword ptr [rax]
0x0000000000436f6b : add al, ah ; or edi, edi ; jmp rax
0x0000000000437d77 : add al, bh ; mov ch, -2 ; call qword ptr [rbx]
0x0000000000437937 : add al, bl ; jne 0x43793d ; jmp qword ptr [rax]
0x00000000004373d5 : add al, byte ptr [rax] ; add al, ch ; push rax ; std ; jmp qword ptr [rcx]
0x0000000000428abf : add al, byte ptr [rax] ; add bh, al ; mov r12b, 0x1b ; fidiv dword ptr [rdi] ; ret 0x91e9
0x000000000042867e : add al, byte ptr [rax] ; add byte ptr [rbx + 0x3b2db045], cl ; ret
0x0000000000422143 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004089b0 : add al, byte ptr [rax] ; add cl, ch ; ret 1
0x0000000000437a57 : add al, ch ; jbe 0x437a5d ; jmp qword ptr [rdx]
0x0000000000405a9b : add al, ch ; lahf ; ret
0x00000000004373d7 : add al, ch ; push rax ; std ; jmp qword ptr [rcx]
0x0000000000405928 : add al, ch ; push rdx ; ret 0xffff
0x0000000000422127 : add al, ch ; ret
0x00000000004076b8 : add al, ch ; ret 0xffa4
0x0000000000411a28 : add al, ch ; ret 0xffc6
0x0000000000437fb7 : add al, ch ; sbb edi, edi ; jmp rax
0x0000000000437197 : add al, ch ; scasb al, byte ptr [rdi] ; cld ; call qword ptr [rdx]
0x0000000000405fa0 : add al, ch ; stosb byte ptr [rdi], al ; mov edx, 0x60b9ffff ; ret 0xcae4
0x0000000000436dbb : add al, dh ; jb 0x436dc1 ; jmp qword ptr [rax]
0x0000000000436deb : add al, dh ; jg 0x436df1 ; jmp rax
0x0000000000436f03 : add al, dh ; ret 0xfffe
0x0000000000436dab : add al, dh ; std ; jmp rax
0x0000000000436efb : add al, dl ; ret 0xfffe
0x000000000042b6d6 : add bh, al ; in al, dx ; int1 ; ret
0x0000000000428ac1 : add bh, al ; mov r12b, 0x1b ; fidiv dword ptr [rdi] ; ret 0x91e9
0x0000000000408c86 : add bh, al ; pushfq ; mov es, word ptr [r8] ; adc ecx, ebp ; ret
0x000000000042253e : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x00000000004222a6 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000042fc48 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; call rcx
0x000000000042fe8b : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp rcx
0x000000000042fc1d : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp rsi
0x0000000000409fb2 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; call qword ptr [rdx]
0x0000000000409d38 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp qword ptr [rdx]
0x0000000000406300 : add bh, al ; test dword ptr [rsi + rdi*8 - 1], esi ; call rax
0x00000000004058dd : add bh, al ; test dword ptr [rsi + rdi*8 - 1], esi ; call rbx
0x00000000004052e2 : add bh, al ; test dword ptr [rsi + rdi*8 - 1], esi ; call rsp
0x000000000040686e : add bh, al ; test dword ptr [rsi + rdi*8 - 1], esi ; jmp qword ptr [rsi]
0x0000000000437279 : add bh, ch ; call qword ptr [rax]
0x000000000043556f : add bl, dh ; ret
0x0000000000430aa9 : add byte ptr [r8], r8b ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040f854 : add byte ptr [rax + 0x63], cl ; ret 0x8b48
0x0000000000436c7b : add byte ptr [rax + 8], ah ; std ; jmp qword ptr [rax]
0x0000000000437193 : add byte ptr [rax + rax], al ; add al, ch ; scasb al, byte ptr [rdi] ; cld ; call qword ptr [rdx]
0x0000000000436ff8 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; jo 0x437005 ; jmp qword ptr [rax]
0x0000000000436d2b : add byte ptr [rax - 0x4e], dl ; std ; jmp rax
0x0000000000437517 : add byte ptr [rax - 0x57], ch ; std ; call qword ptr [rsi]
0x0000000000436cfb : add byte ptr [rax - 0x72], al ; std ; jmp qword ptr [rax]
0x0000000000407d07 : add byte ptr [rax - 0x75], cl ; fmul dword ptr [r8 - 0x77] ; ret 0xb0
0x0000000000415739 : add byte ptr [rax - 0x75], cl ; jge 0x4156f5 ; call 0x401a27
0x000000000041579d : add byte ptr [rax - 0x75], cl ; jge 0x415751 ; call 0x401a27
0x0000000000430a95 : add byte ptr [rax - 0x75], cl ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x10
0x000000000042b9ab : add byte ptr [rax - 0x75], cl ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x18
0x0000000000405af6 : add byte ptr [rax - 0x77], cl ; ret 0xb0
0x000000000040f53e : add byte ptr [rax - 0x7f], cl ; ret 1
0x0000000000436ffc : add byte ptr [rax - 1], dh ; jmp qword ptr [rax]
0x0000000000436f0b : add byte ptr [rax], ah ; ret
0x0000000000437a52 : add byte ptr [rax], al ; add al, 9 ; add byte ptr [rax], al ; call 0x234378dc
0x0000000000437195 : add byte ptr [rax], al ; add al, ch ; scasb al, byte ptr [rdi] ; cld ; call qword ptr [rdx]
0x000000000042253c : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x00000000004222a4 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000042fc46 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; call rcx
0x000000000042fe89 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp rcx
0x0000000000409fb0 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; call qword ptr [rdx]
0x000000000043556d : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040f852 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8b48
0x0000000000407d05 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; fmul dword ptr [r8 - 0x77] ; ret 0xb0
0x0000000000415737 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jge 0x4156f7 ; call 0x401a29
0x000000000041579b : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jge 0x415753 ; call 0x401a29
0x0000000000430a93 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x10
0x000000000042b9a9 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x18
0x00000000004076d0 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb0
0x0000000000436ffa : add byte ptr [rax], al ; add byte ptr [rax - 1], dh ; jmp qword ptr [rax]
0x000000000043556b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004052a9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040f40d : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf280
0x000000000043556c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000437192 : add byte ptr [rax], al ; add byte ptr [rax], r8b ; add al, ch ; scasb al, byte ptr [rdi] ; cld ; call qword ptr [rdx]
0x0000000000407555 : add byte ptr [rax], al ; add byte ptr [rbx + 0x202dcc45], cl ; ret
0x0000000000407605 : add byte ptr [rax], al ; add byte ptr [rbx + 0x212dcc45], cl ; ret
0x000000000040f295 : add byte ptr [rax], al ; add byte ptr [rbx + 0x232dbc45], cl ; leave ; ret
0x00000000004349d4 : add byte ptr [rax], al ; add byte ptr [rbx + 0x262db845], cl ; ret
0x00000000004286c9 : add byte ptr [rax], al ; add byte ptr [rbx + 0x3c2db045], cl ; ret
0x000000000041e22e : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000408565 : add byte ptr [rax], al ; add byte ptr [rbx + 0x52da845], cl ; ret
0x00000000004020f3 : add byte ptr [rax], al ; add byte ptr [rbx + 0x72df045], cl ; int1 ; ret 0x89ec
0x0000000000428f35 : add byte ptr [rax], al ; add byte ptr [rbx + 0xd2dd445], cl ; ret 0xdd89
0x0000000000407a4b : add byte ptr [rax], al ; add byte ptr [rbx - 0x5bd243bb], cl ; ret 0xf2e8
0x0000000000407983 : add byte ptr [rax], al ; add byte ptr [rbx - 0x5cd243bb], cl ; ret 0xf2e8
0x00000000004340c9 : add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000434045 : add byte ptr [rax], al ; add byte ptr [rbx - 0x66d217bb], cl ; ret
0x000000000040ebf0 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b727b3], cl ; ret 0xb0
0x000000000042b18e : add byte ptr [rax], al ; add byte ptr [rbx - 0xfd217bb], cl ; ret
0x000000000042ab6e : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x0000000000405846 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000041d0e1 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x000000000040e953 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; lahf ; ret 0xd284
0x000000000040e7e5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000406e1e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000421105 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000041613d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000004052ab : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004064f8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000040f40f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf280
0x000000000042cf2b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x0000000000412966 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000042243a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000041611f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000409b2a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8b48
0x0000000000405a55 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000412bee : add byte ptr [rax], al ; add cl, ch ; ret
0x000000000043398d : add byte ptr [rax], al ; add cl, ch ; ret 0
0x000000000041e4eb : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041df50 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000427f38 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000000000042284d : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041e4a7 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004077e0 : add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004019e3 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000437d72 : add byte ptr [rax], al ; and al, 0xc ; add byte ptr [rax], al ; clc ; mov ch, -2 ; call qword ptr [rbx]
0x0000000000437272 : add byte ptr [rax], al ; and al, 1 ; add byte ptr [rax], al ; sub byte ptr [rdx], al ; std ; call qword ptr [rax]
0x0000000000437196 : add byte ptr [rax], al ; call 0x13436e50
0x00000000004373d6 : add byte ptr [rax], al ; call 0x22437132
0x0000000000437a56 : add byte ptr [rax], al ; call 0x234378d8
0x00000000004334ad : add byte ptr [rax], al ; call 0x401a48
0x0000000000405da0 : add byte ptr [rax], al ; call 0x402084
0x0000000000437fb6 : add byte ptr [rax], al ; call 0xffffffffe1437edd
0x0000000000437d76 : add byte ptr [rax], al ; clc ; mov ch, -2 ; call qword ptr [rbx]
0x0000000000437936 : add byte ptr [rax], al ; fdiv dword ptr [rbp - 2] ; jmp qword ptr [rax]
0x0000000000437932 : add byte ptr [rax], al ; in al, 7 ; add byte ptr [rax], al ; fdiv dword ptr [rbp - 2] ; jmp qword ptr [rax]
0x0000000000401a99 : add byte ptr [rax], al ; jmp 0x4019f9
0x0000000000412bea : add byte ptr [rax], al ; jmp 0x412bf9
0x0000000000433989 : add byte ptr [rax], al ; jmp 0x433998
0x00000000004345f9 : add byte ptr [rax], al ; jmp 0x434608
0x0000000000434a6f : add byte ptr [rax], al ; jmp 0x434b7f
0x0000000000436ffb : add byte ptr [rax], al ; jo 0x437002 ; jmp qword ptr [rax]
0x0000000000436d3a : add byte ptr [rax], al ; loopne 0x436cf9 ; std ; jmp qword ptr [rax]
0x0000000000436d7a : add byte ptr [rax], al ; mov al, -0x15 ; std ; jmp qword ptr [rax]
0x0000000000436cfa : add byte ptr [rax], al ; mov dr1, ebp ; jmp qword ptr [rax]
0x0000000000425667 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x0000000000434807 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000412189 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000415a09 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000415738 : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x50] ; call 0x401a28
0x000000000041579c : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x58] ; call 0x401a28
0x000000000043707a : add byte ptr [rax], al ; nop ; sar bh, 1 ; jmp qword ptr [rax]
0x0000000000407482 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000041e22f : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041df08 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000436eba : add byte ptr [rax], al ; push rax ; mov dh, -2 ; jmp qword ptr [rax]
0x0000000000436d2a : add byte ptr [rax], al ; push rax ; mov dl, -3 ; jmp rax
0x0000000000436faa : add byte ptr [rax], al ; rcl byte ptr [rdi], -1 ; jmp rax
0x000000000043556e : add byte ptr [rax], al ; ret
0x0000000000436cba : add byte ptr [rax], al ; sbb byte ptr [rbx], -3 ; jmp qword ptr [rax]
0x0000000000436daa : add byte ptr [rax], al ; std ; jmp rax
0x0000000000437276 : add byte ptr [rax], al ; sub byte ptr [rdx], al ; std ; call qword ptr [rax]
0x00000000004373d2 : add byte ptr [rax], al ; test byte ptr [rdx], al ; add byte ptr [rax], al ; call 0x22437136
0x0000000000436d6a : add byte ptr [rax], al ; xor bh, al ; std ; jmp rax
0x0000000000437277 : add byte ptr [rax], ch ; add bh, ch ; call qword ptr [rax]
0x0000000000436cf8 : add byte ptr [rax], cl ; add byte ptr [rax], al ; mov dr1, ebp ; jmp qword ptr [rax]
0x0000000000437817 : add byte ptr [rax], cl ; je 0x43781d ; jmp qword ptr [rdx]
0x00000000004370ab : add byte ptr [rax], dh ; fdivr st(7) ; jmp rax
0x0000000000436c6b : add byte ptr [rax], dl ; mov bh, -4 ; jmp rax
0x0000000000436e7b : add byte ptr [rax], dl ; test edi, esi ; jmp qword ptr [rax]
0x0000000000437194 : add byte ptr [rax], r8b ; add al, ch ; scasb al, byte ptr [rdi] ; cld ; call qword ptr [rdx]
0x0000000000428586 : add byte ptr [rbx + 0x1a2db045], cl ; fidiv dword ptr [rdi] ; ret 0x8589
0x00000000004285d1 : add byte ptr [rbx + 0x1b2db045], cl ; fidiv dword ptr [rdi] ; ret 0x8589
0x0000000000407557 : add byte ptr [rbx + 0x202dcc45], cl ; ret
0x0000000000407607 : add byte ptr [rbx + 0x212dcc45], cl ; ret
0x000000000040f24c : add byte ptr [rbx + 0x222dbc45], cl ; leave ; ret
0x000000000040f297 : add byte ptr [rbx + 0x232dbc45], cl ; leave ; ret
0x00000000004349d6 : add byte ptr [rbx + 0x262db845], cl ; ret
0x000000000042109f : add byte ptr [rbx + 0x2f2de845], cl ; jl 0x421087 ; ret
0x0000000000428680 : add byte ptr [rbx + 0x3b2db045], cl ; ret
0x00000000004286cb : add byte ptr [rbx + 0x3c2db045], cl ; ret
0x000000000041e230 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040e589 : add byte ptr [rbx + 0x4b2d9845], cl ; ret
0x000000000040e5bb : add byte ptr [rbx + 0x4c2d9845], cl ; ret
0x0000000000408567 : add byte ptr [rbx + 0x52da845], cl ; ret
0x000000000041df09 : add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004020f5 : add byte ptr [rbx + 0x72df045], cl ; int1 ; ret 0x89ec
0x0000000000428f37 : add byte ptr [rbx + 0xd2dd445], cl ; ret 0xdd89
0x0000000000405925 : add byte ptr [rbx + rax*2], bl ; call 0x401b86
0x000000000040e9e2 : add byte ptr [rbx - 0x1674b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040eaf7 : add byte ptr [rbx - 0x16f43], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040ebb3 : add byte ptr [rbx - 0x17343], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000411177 : add byte ptr [rbx - 0x26b4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000041125f : add byte ptr [rbx - 0x2874b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000411353 : add byte ptr [rbx - 0x28b4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004113ed : add byte ptr [rbx - 0x28f4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000411484 : add byte ptr [rbx - 0x2934b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004114ef : add byte ptr [rbx - 0x2974b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004115bb : add byte ptr [rbx - 0x2ab4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000411620 : add byte ptr [rbx - 0x2af4b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000041168b : add byte ptr [rbx - 0x2b34b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000407a4d : add byte ptr [rbx - 0x5bd243bb], cl ; ret 0xf2e8
0x0000000000407985 : add byte ptr [rbx - 0x5cd243bb], cl ; ret 0xf2e8
0x00000000004340cb : add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000434047 : add byte ptr [rbx - 0x66d217bb], cl ; ret
0x000000000040ebf2 : add byte ptr [rbx - 0x76b727b3], cl ; ret 0xb0
0x000000000042b2ee : add byte ptr [rbx - 0xed217bb], cl ; ret
0x000000000042b190 : add byte ptr [rbx - 0xfd217bb], cl ; ret
0x00000000004068ff : add byte ptr [rbx], bh ; les r9, ptr [r15] ; pushfq ; ret 0xd284
0x000000000042ab70 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x0000000000405848 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x000000000041d0e3 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000437273 : add byte ptr [rcx + rax], ah ; add byte ptr [rax], al ; sub byte ptr [rdx], al ; std ; call qword ptr [rax]
0x0000000000437a53 : add byte ptr [rcx + rcx], al ; add byte ptr [rax], al ; call 0x234378db
0x0000000000408e50 : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000402048 : add byte ptr [rcx], al ; ret
0x0000000000436d38 : add byte ptr [rcx], cl ; add byte ptr [rax], al ; loopne 0x436cfb ; std ; jmp qword ptr [rax]
0x0000000000436cb8 : add byte ptr [rdi], al ; add byte ptr [rax], al ; sbb byte ptr [rbx], -3 ; jmp qword ptr [rax]
0x0000000000436eb8 : add byte ptr [rdi], cl ; add byte ptr [rax], al ; push rax ; mov dh, -2 ; jmp qword ptr [rax]
0x000000000040e955 : add byte ptr [rdi], cl ; lahf ; ret 0xd284
0x000000000040e7e7 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x0000000000406e20 : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000421107 : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000041613f : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000004052ad : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004064fa : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000040f411 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf280
0x000000000042cf2d : add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x0000000000406a78 : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000042243c : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000416121 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000409b2c : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8b48
0x0000000000405a57 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004373d3 : add byte ptr [rdx + rax + 0x50e80000], al ; std ; jmp qword ptr [rcx]
0x000000000041268d : add byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000436d78 : add byte ptr [rdx], cl ; add byte ptr [rax], al ; mov al, -0x15 ; std ; jmp qword ptr [rax]
0x0000000000437fb3 : add byte ptr [rsi + rcx], ah ; add al, ch ; sbb edi, edi ; jmp rax
0x0000000000437078 : add byte ptr [rsi], dl ; add byte ptr [rax], al ; nop ; sar bh, 1 ; jmp qword ptr [rax]
0x0000000000437d73 : add byte ptr [rsp + rcx], ah ; add byte ptr [rax], al ; clc ; mov ch, -2 ; call qword ptr [rbx]
0x0000000000412bf0 : add cl, ch ; ret
0x0000000000407efd : add cl, ch ; ret 0
0x00000000004089b2 : add cl, ch ; ret 1
0x000000000040ecdd : add dword ptr [rax + 0x45c7ff45], ecx ; call 0xffffffffe703b196
0x0000000000409b40 : add dword ptr [rax - 0x77], ecx ; ret 0x37e8
0x000000000042b6d4 : add dword ptr [rax], eax ; add bh, al ; in al, dx ; int1 ; ret
0x000000000041e4a5 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000405d9e : add dword ptr [rax], eax ; add byte ptr [rax], al ; call 0x402086
0x0000000000437275 : add dword ptr [rax], eax ; add byte ptr [rax], ch ; add bh, ch ; call qword ptr [rax]
0x000000000040f24a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x222dbc45], cl ; leave ; ret
0x000000000040e587 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x4b2d9845], cl ; ret
0x000000000040e5b9 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x4c2d9845], cl ; ret
0x000000000041ebca : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000042b2ec : add dword ptr [rax], eax ; add byte ptr [rbx - 0xed217bb], cl ; ret
0x0000000000407efb : add dword ptr [rax], eax ; add cl, ch ; ret 0
0x0000000000430383 : add dword ptr [rax], eax ; add cl, ch ; ret 1
0x000000000040f84e : add dword ptr [rcx + 0x30ea], eax ; add byte ptr [rax + 0x63], cl ; ret 0x8b48
0x00000000004064f4 : add dword ptr [rcx + 0xf9], eax ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x000000000042f41f : add dword ptr [rdi], ecx ; mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x00000000004082b7 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000402044 : add eax, 0x23752e ; add ebx, esi ; ret
0x0000000000430011 : add eax, 0x458b0000 ; call 0xffffffffc3a42c51
0x000000000042720f : add eax, 0x53b80000 ; jrcxz 0x42727f ; ret 0x8fb9
0x0000000000425665 : add eax, 0x8b000000 ; in al, dx ; pop rbp ; ret
0x0000000000424f4f : add eax, 0xb6b80000 ; ret 0x979f
0x0000000000436c69 : add eax, 0xb7100000 ; cld ; jmp rax
0x0000000000406c7c : add eax, 0xf000000 ; xchg eax, esp ; ret 0xd284
0x0000000000409d36 : add eax, dword ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; jmp qword ptr [rdx]
0x000000000040686c : add eax, dword ptr [rax] ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], esi ; jmp qword ptr [rsi]
0x0000000000437515 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x57], ch ; std ; call qword ptr [rsi]
0x000000000040200b : add eax, edx ; sar rax, 1 ; jne 0x40201c ; pop rbp ; ret
0x0000000000430949 : add eax, esi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x0000000000402049 : add ebx, esi ; ret
0x000000000042b84b : add edi, eax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x000000000042ff55 : add edi, eax ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp rsi
0x000000000040614c : add edi, eax ; test dword ptr [rsi + rdi*8 - 1], esi ; call rbx
0x0000000000408320 : add esi, eax ; mov rax, rsi ; pop rbp ; ret
0x00000000004022db : add esp, 0x10 ; pop rbp ; ret
0x0000000000408e4e : add esp, 0x100 ; pop rbp ; ret
0x000000000041ebc7 : add esp, 0x118 ; pop rbx ; pop rbp ; ret
0x0000000000431835 : add esp, 0x11f0 ; pop rbp ; ret
0x000000000042b806 : add esp, 0x120 ; pop rbp ; ret
0x000000000043091a : add esp, 0x130 ; pop rbp ; ret
0x000000000041043d : add esp, 0x140 ; pop rbp ; ret
0x000000000040aa0f : add esp, 0x170 ; pop rbp ; ret
0x0000000000408140 : add esp, 0x18 ; pop rbp ; ret
0x000000000040ec25 : add esp, 0x180 ; pop rbp ; ret
0x00000000004226fc : add esp, 0x1a0 ; pop rbp ; ret
0x00000000004157d2 : add esp, 0x1f0 ; pop rbp ; ret
0x0000000000412db4 : add esp, 0x20 ; pop rbp ; ret
0x000000000041268b : add esp, 0x200 ; pop rbp ; ret
0x000000000040a045 : add esp, 0x230 ; pop rbp ; ret
0x0000000000411767 : add esp, 0x2c0 ; pop rbp ; ret
0x0000000000421031 : add esp, 0x2d0 ; pop rbp ; ret
0x00000000004337da : add esp, 0x2e0 ; pop rbp ; ret
0x0000000000425741 : add esp, 0x30 ; pop rbp ; ret
0x000000000040e0d4 : add esp, 0x310 ; pop rbp ; ret
0x000000000040c4a4 : add esp, 0x350 ; pop rbp ; ret
0x000000000041493c : add esp, 0x360 ; pop rbp ; ret
0x0000000000425535 : add esp, 0x380 ; pop rbp ; ret
0x00000000004122f7 : add esp, 0x40 ; pop rbp ; ret
0x00000000004024e2 : add esp, 0x50 ; pop rbp ; ret
0x000000000042dc19 : add esp, 0x520 ; pop rbp ; ret
0x0000000000402288 : add esp, 0x60 ; pop rbp ; ret
0x00000000004077e3 : add esp, 0x70 ; pop rbp ; ret
0x0000000000411b2a : add esp, 0x80 ; pop rbp ; ret
0x000000000041f750 : add esp, 0x90 ; pop rbp ; ret
0x000000000040747e : add esp, 0x980 ; pop rbp ; ret
0x000000000041315e : add esp, 0xa0 ; pop rbp ; ret
0x000000000040879a : add esp, 0xc0 ; pop rbp ; ret
0x000000000041df04 : add esp, 0xc78 ; pop rbx ; pop rbp ; ret
0x0000000000407da9 : add esp, 0xe0 ; pop rbp ; ret
0x00000000004019e6 : add esp, 8 ; ret
0x0000000000405927 : add r8b, bpl ; push rdx ; ret 0xffff
0x00000000004076b7 : add r8b, bpl ; ret 0xffa4
0x000000000040200a : add rax, rdx ; sar rax, 1 ; jne 0x40201d ; pop rbp ; ret
0x0000000000430948 : add rax, rsi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x000000000042b84a : add rdi, rax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x000000000040831f : add rsi, rax ; mov rax, rsi ; pop rbp ; ret
0x00000000004022da : add rsp, 0x10 ; pop rbp ; ret
0x0000000000408e4d : add rsp, 0x100 ; pop rbp ; ret
0x000000000041ebc6 : add rsp, 0x118 ; pop rbx ; pop rbp ; ret
0x0000000000431834 : add rsp, 0x11f0 ; pop rbp ; ret
0x000000000042b805 : add rsp, 0x120 ; pop rbp ; ret
0x0000000000430919 : add rsp, 0x130 ; pop rbp ; ret
0x000000000041043c : add rsp, 0x140 ; pop rbp ; ret
0x000000000040aa0e : add rsp, 0x170 ; pop rbp ; ret
0x000000000040813f : add rsp, 0x18 ; pop rbp ; ret
0x000000000040ec24 : add rsp, 0x180 ; pop rbp ; ret
0x00000000004226fb : add rsp, 0x1a0 ; pop rbp ; ret
0x00000000004157d1 : add rsp, 0x1f0 ; pop rbp ; ret
0x0000000000412db3 : add rsp, 0x20 ; pop rbp ; ret
0x000000000041268a : add rsp, 0x200 ; pop rbp ; ret
0x000000000040a044 : add rsp, 0x230 ; pop rbp ; ret
0x0000000000411766 : add rsp, 0x2c0 ; pop rbp ; ret
0x0000000000421030 : add rsp, 0x2d0 ; pop rbp ; ret
0x00000000004337d9 : add rsp, 0x2e0 ; pop rbp ; ret
0x0000000000425740 : add rsp, 0x30 ; pop rbp ; ret
0x000000000040e0d3 : add rsp, 0x310 ; pop rbp ; ret
0x000000000040c4a3 : add rsp, 0x350 ; pop rbp ; ret
0x000000000041493b : add rsp, 0x360 ; pop rbp ; ret
0x0000000000425534 : add rsp, 0x380 ; pop rbp ; ret
0x00000000004122f6 : add rsp, 0x40 ; pop rbp ; ret
0x00000000004024e1 : add rsp, 0x50 ; pop rbp ; ret
0x000000000042dc18 : add rsp, 0x520 ; pop rbp ; ret
0x0000000000402287 : add rsp, 0x60 ; pop rbp ; ret
0x00000000004077e2 : add rsp, 0x70 ; pop rbp ; ret
0x0000000000411b29 : add rsp, 0x80 ; pop rbp ; ret
0x000000000041f74f : add rsp, 0x90 ; pop rbp ; ret
0x000000000040747d : add rsp, 0x980 ; pop rbp ; ret
0x000000000041315d : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000408799 : add rsp, 0xc0 ; pop rbp ; ret
0x000000000041df03 : add rsp, 0xc78 ; pop rbx ; pop rbp ; ret
0x0000000000407da8 : add rsp, 0xe0 ; pop rbp ; ret
0x00000000004019e5 : add rsp, 8 ; ret
0x0000000000437d74 : and al, 0xc ; add byte ptr [rax], al ; clc ; mov ch, -2 ; call qword ptr [rbx]
0x0000000000425e3b : and al, 0xffffffffffffffac ; ret 0x89cc
0x00000000004273d4 : and al, 0xffffffffffffffac ; ret 0x8bcc
0x0000000000437274 : and al, 1 ; add byte ptr [rax], al ; sub byte ptr [rdx], al ; std ; call qword ptr [rax]
0x000000000042f41e : and al, 1 ; movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004082b6 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042b808 : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040f251 : and cl, cl ; ret
0x00000000004052e0 : and dword ptr [rax], eax ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], esi ; call rsp
0x0000000000405892 : and eax, 0x435be6 ; call 0x401b87
0x0000000000405924 : and eax, 0x435c00 ; call 0x401b87
0x0000000000411b4f : and eax, 0x6397a8 ; pop rbp ; ret
0x0000000000411b73 : and eax, 0x6397b0 ; pop rbp ; ret
0x0000000000402047 : and eax, dword ptr [rax] ; add ebx, esi ; ret
0x000000000040f29c : and ecx, ecx ; ret
0x0000000000437198 : call 0x13436e4e
0x00000000004373d8 : call 0x22437130
0x0000000000437a58 : call 0x234378d6
0x000000000041573e : call 0x401a22
0x00000000004157ec : call 0x401a42
0x00000000004334af : call 0x401a46
0x000000000043347c : call 0x401ad6
0x0000000000405897 : call 0x401b82
0x000000000042b700 : call 0x401bf9
0x0000000000405b6d : call 0x401e42
0x00000000004329d7 : call 0x401f86
0x0000000000405da2 : call 0x402082
0x000000000040d8d3 : call 0x412836
0x0000000000407734 : call 0x425757
0x00000000004306e1 : call 0x4281e9
0x0000000000430016 : call 0xffffffffc3a42c4c
0x0000000000430015 : call 0xffffffffc3a42c4d
0x0000000000430058 : call 0xffffffffc3a42d8e
0x0000000000430057 : call 0xffffffffc3a42d8f
0x0000000000437fb8 : call 0xffffffffe1437edb
0x000000000040ece3 : call 0xffffffffe703b190
0x000000000040ece2 : call 0xffffffffe703b191
0x000000000041df49 : call 0xffffffffe9046899
0x000000000041df48 : call 0xffffffffe904689a
0x000000000041998d : call 0xfffffffff73a1f24
0x0000000000406f3a : call 0xfffffffffeb4f50c
0x0000000000406f39 : call 0xfffffffffeb4f50d
0x000000000042e9a3 : call 0xfffffffffee76f75
0x000000000042e9a2 : call 0xfffffffffee76f76
0x00000000004157eb : call 0xffffffffff03a7db
0x000000000042a935 : call 0xffffffffff472f0a
0x000000000041c4b9 : call 0xffffffffff564a8b
0x000000000041c4b8 : call 0xffffffffff564a8c
0x000000000041c4b9 : call 0xffffffffff564a8d
0x000000000041c4b8 : call 0xffffffffff564a8e
0x00000000004153a8 : call 0xffffffffffadd97a
0x00000000004153a7 : call 0xffffffffffadd97b
0x000000000042f45a : call 0xffffffffffbf7a2c
0x000000000042f459 : call 0xffffffffffbf7a2d
0x0000000000435549 : call qword ptr [r12 + rbx*8]
0x000000000041b846 : call qword ptr [rax]
0x000000000042ea41 : call qword ptr [rbx]
0x0000000000406c65 : call qword ptr [rcx]
0x0000000000405c83 : call qword ptr [rdi]
0x0000000000409fb8 : call qword ptr [rdx]
0x000000000040c2ac : call qword ptr [rsi]
0x000000000043554a : call qword ptr [rsp + rbx*8]
0x000000000040206d : call rax
0x00000000004058e3 : call rbx
0x000000000040bf63 : call rcx
0x0000000000406b9d : call rdi
0x0000000000437bfb : call rdx
0x0000000000422544 : call rsi
0x00000000004052d0 : call rsp
0x000000000042c176 : cdq ; jbe 0x42c19a ; ret
0x000000000042da9d : cdq ; jbe 0x42dac1 ; ret
0x000000000043404c : cdq ; ret
0x0000000000428d55 : clc ; add rsp, 0x140 ; pop rbp ; ret
0x000000000042115c : clc ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000429782 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000427d10 : clc ; add rsp, 0x70 ; pop rbp ; ret
0x000000000041f74e : clc ; add rsp, 0x90 ; pop rbp ; ret
0x000000000040200f : clc ; jne 0x402018 ; pop rbp ; ret
0x00000000004074a6 : clc ; mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x0000000000437d78 : clc ; mov ch, -2 ; call qword ptr [rbx]
0x0000000000407497 : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040749b : clc ; pop rbp ; ret
0x0000000000402307 : cld ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000431833 : cld ; add rsp, 0x11f0 ; pop rbp ; ret
0x0000000000429243 : cld ; add rsp, 0xc0 ; pop rbp ; ret
0x000000000043719a : cld ; call qword ptr [rdx]
0x0000000000436c66 : cld ; inc eax ; add eax, 0xb7100000 ; cld ; jmp rax
0x0000000000436c6e : cld ; jmp rax
0x000000000040918f : cld ; ret
0x000000000041c10d : cld ; sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x0000000000429f3d : cmp al, -0x2a ; ret
0x0000000000405923 : cmp al, 0x25 ; add byte ptr [rbx + rax*2], bl ; call 0x401b88
0x00000000004076b3 : cmp al, 0x25 ; nop ; pop rsp ; add r8b, bpl ; ret 0xffa4
0x00000000004286d0 : cmp al, 0x42 ; ret
0x00000000004111ee : cmp ch, -1 ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x000000000040660c : cmp eax, 0x3d ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000401fcd : cmp eax, 0xe ; mov rbp, rsp ; ja 0x401fe0 ; pop rbp ; ret
0x00000000004067be : cmp ecx, ebp ; ret 0xc
0x00000000004374b9 : cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; call qword ptr [rsi]
0x000000000041e3e4 : cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp qword ptr [rdx + 0xc2e968]
0x000000000042c122 : cwde ; jbe 0x42c146 ; ret
0x0000000000433b4b : cwde ; js 0x433af5 ; ret
0x0000000000433b92 : cwde ; js 0x433b3c ; ret
0x0000000000433bcc : cwde ; js 0x433b76 ; ret
0x0000000000415684 : cwde ; ret
0x00000000004147a5 : dec dword ptr [rax + 1] ; ret 0x8948
0x000000000042d962 : dec dword ptr [rax - 0x75] ; push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0xffff
0x0000000000409ced : dec dword ptr [rax - 0x75] ; push rbp ; mov byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000420ef1 : dec dword ptr [rax - 0x77] ; ret 0x36e8
0x000000000040bf1e : dec dword ptr [rax - 0x77] ; ret 0x8148
0x000000000042d998 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000042099b : dec dword ptr [rax - 0x77] ; ret 0x8ce8
0x000000000040e9e8 : dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004306dd : dec dword ptr [rax - 0x77] ; ret 0xfae8
0x000000000041c2b2 : dec dword ptr [rax - 0x7f] ; ret 1
0x000000000041c5bd : dec dword ptr [rax - 0x7f] ; ret 2
0x000000000041dac4 : dec dword ptr [rdi] ; ret 0x8589
0x000000000042b27f : dec dword ptr [rdi] ; test ah, al ; add al, 0 ; add cl, ch ; ret 1
0x0000000000421283 : dec dword ptr [rdi] ; test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x00000000004089ac : dec dword ptr [rdi] ; test byte ptr [rip - 0x16fffffe], dh ; ret 1
0x000000000043037f : dec dword ptr [rdi] ; test dh, dl ; add dword ptr [rax], eax ; add cl, ch ; ret 1
0x00000000004115ee : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x000000000042d804 : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x0000000000421013 : dec ebx ; je 0x420fd9 ; ret 0x1ce9
0x000000000040a661 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042a6eb : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000040de9c : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000428334 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004127b1 : fadd qword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000041f3f9 : fadd qword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000042edd3 : fcmovbe st(0), st(5) ; jmp 0x42f431
0x0000000000437938 : fdiv dword ptr [rbp - 2] ; jmp qword ptr [rax]
0x00000000004370ad : fdivr st(7) ; jmp rax
0x000000000042858c : fidiv dword ptr [rdi] ; ret 0x8589
0x0000000000428ac6 : fidiv dword ptr [rdi] ; ret 0x91e9
0x0000000000407d0a : fmul dword ptr [r8 - 0x77] ; ret 0xb0
0x0000000000422e44 : fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000407d0b : fmul dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000430a99 : fmul dword ptr [rax - 0x7f] ; ret 0x10
0x000000000042b9af : fmul dword ptr [rax - 0x7f] ; ret 0x18
0x000000000042d966 : fmul dword ptr [rax - 0x7f] ; ret 0xffff
0x00000000004086ef : fmul dword ptr [rax - 0x7f] ; ret 1
0x000000000043554c : fmul qword ptr [rax - 0x7d] ; ret
0x00000000004022d9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000411765 : hlt ; add rsp, 0x2c0 ; pop rbp ; ret
0x0000000000427e6c : hlt ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041281f : hlt ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000401fe0 : hlt ; pop rbp ; mov edi, 0x639518 ; jmp rax
0x0000000000421bde : imul eax, dword ptr [rip + 0x7db80000], 0x13 ; ret
0x000000000042fe36 : imul ecx, dword ptr [rax - 0x75], 0x81489055 ; ret 1
0x000000000040807d : in al, -0x17 ; ret 0
0x000000000041ba69 : in al, -0x7f ; ret 0xff9f
0x000000000041bc4f : in al, -0x7f ; ret 0xffbf
0x000000000041bcf5 : in al, -0x7f ; ret 0xffc5
0x000000000041bd23 : in al, -0x7f ; ret 0xffd5
0x000000000041bdf1 : in al, -0x7f ; ret 0xffd8
0x000000000041bf87 : in al, -0x7f ; ret 0xffe0
0x0000000000434f9f : in al, 0x48 ; add esp, 0x40 ; pop rbp ; ret
0x0000000000407b7b : in al, 5 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000407b9c : in al, 6 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000407bbd : in al, 7 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000437934 : in al, 7 ; add byte ptr [rax], al ; fdiv dword ptr [rbp - 2] ; jmp qword ptr [rax]
0x000000000042573f : in al, dx ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004281ca : in al, dx ; add rsp, 0x80 ; pop rbp ; ret
0x000000000042b6d9 : in al, dx ; int1 ; ret
0x0000000000415b1a : in al, dx ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000042566b : in al, dx ; pop rbp ; ret
0x00000000004370ed : in eax, -1 ; jmp rax
0x000000000043424b : in eax, dx ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000436ff7 : inc dword ptr [rax] ; adc al, 0 ; add byte ptr [rax], al ; jo 0x437006 ; jmp qword ptr [rax]
0x0000000000436ef7 : inc dword ptr [rax] ; adc byte ptr [rax], al ; add al, dl ; ret 0xfffe
0x000000000041d0df : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000406e1c : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x000000000040635d : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042cfa0 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000406638 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000436cf7 : inc dword ptr [rax] ; or byte ptr [rax], al ; add byte ptr [rax - 0x72], al ; std ; jmp qword ptr [rax]
0x0000000000436d37 : inc dword ptr [rax] ; or dword ptr [rax], eax ; add al, ah ; mov dh, -3 ; jmp qword ptr [rax]
0x0000000000436db7 : inc dword ptr [rax] ; or eax, dword ptr [rax] ; add al, dh ; jb 0x436dc5 ; jmp qword ptr [rax]
0x0000000000436eb7 : inc dword ptr [rax] ; sldt word ptr [rax] ; push rax ; mov dh, -2 ; jmp qword ptr [rax]
0x0000000000431312 : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret
0x0000000000405345 : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x8445
0x0000000000436f67 : inc eax ; adc dword ptr [rax], eax ; add al, ah ; or edi, edi ; jmp rax
0x0000000000436c67 : inc eax ; add eax, 0xb7100000 ; cld ; jmp rax
0x0000000000436da7 : inc eax ; or al, byte ptr [rax] ; add al, dh ; std ; jmp rax
0x0000000000436d27 : inc eax ; or byte ptr [rax], al ; add byte ptr [rax - 0x4e], dl ; std ; jmp rax
0x0000000000436de7 : inc eax ; or eax, dword ptr [rax] ; add al, dh ; jg 0x436df5 ; jmp rax
0x000000000040ece0 : inc edi ; call 0xffffffffe703b193
0x000000000042b704 : inc edi ; in al, dx ; int1 ; ret
0x000000000041eb98 : inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x0000000000415742 : inc edi ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rsi]
0x0000000000415432 : inc edi ; test dword ptr [rdi + rdi*8 - 1], ebp ; call rbx
0x0000000000405c44 : inc edi ; test dword ptr [rsi + rdi*8 - 1], esi ; call rbx
0x0000000000406b97 : inc edi ; test dword ptr [rsi + rdi*8 - 1], esi ; call rdi
0x0000000000406e6f : inc edi ; test dword ptr [rsi + rdi*8 - 1], esi ; jmp rax
0x000000000040ecdf : inc r15d ; call 0xffffffffe703b194
0x000000000041823f : insd dword ptr [rdi], dx ; ret 0x891a
0x000000000041b87f : insd dword ptr [rdi], dx ; ret 0xb91a
0x000000000042b2f3 : int1 ; ret
0x00000000004020fb : int1 ; ret 0x89ec
0x0000000000402144 : int1 ; ret 0x8bec
0x0000000000401fd3 : ja 0x401fda ; pop rbp ; ret
0x000000000040918e : ja 0x40918e ; ret
0x00000000004091e2 : ja 0x4091e2 ; ret
0x0000000000409e19 : ja 0x409e19 ; ret
0x0000000000409e3b : ja 0x409e3b ; ret
0x0000000000436dbd : jb 0x436dbf ; jmp qword ptr [rax]
0x000000000042c123 : jbe 0x42c145 ; ret
0x000000000042c177 : jbe 0x42c199 ; ret
0x000000000042da9e : jbe 0x42dac0 ; ret
0x0000000000437a59 : jbe 0x437a5b ; jmp qword ptr [rdx]
0x0000000000401fdf : je 0x401fdd ; pop rbp ; mov edi, 0x639518 ; jmp rax
0x0000000000420242 : je 0x420204 ; ret 0x8589
0x0000000000420322 : je 0x4202e4 ; ret 0x8589
0x0000000000420f10 : je 0x420ed2 ; ret 0x7d81
0x0000000000421015 : je 0x420fd7 ; ret 0x1ce9
0x0000000000437819 : je 0x43781b ; jmp qword ptr [rdx]
0x0000000000436ded : jg 0x436def ; jmp rax
0x0000000000406c7a : jge 0x406c38 ; add eax, 0xf000000 ; xchg eax, esp ; ret 0xd284
0x0000000000407496 : jge 0x407497 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000407b7a : jge 0x407b68 ; add eax, 0xf000000 ; xchg eax, esp ; ret 0xd284
0x000000000041573c : jge 0x4156f2 ; call 0x401a24
0x00000000004157a0 : jge 0x41574e ; call 0x401a24
0x00000000004157ea : jge 0x4157d8 ; call 0x401a44
0x00000000004216f8 : jge 0x42170f ; ret
0x0000000000421be3 : jge 0x421bfa ; ret
0x00000000004289c5 : jge 0x4289af ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000042c7ea : jge 0x42c863 ; ret
0x00000000004347b9 : jge 0x4347b3 ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000421055 : jl 0x421031 ; ret
0x00000000004210a5 : jl 0x421081 ; ret
0x00000000004215cc : jl 0x4215e3 ; ret
0x000000000042c83e : jle 0x42c8b7 ; ret
0x000000000042d46c : jle 0x42d4e5 ; ret
0x0000000000401a9b : jmp 0x4019f7
0x0000000000407757 : jmp 0x4077ef
0x0000000000407c9e : jmp 0x407db7
0x0000000000408675 : jmp 0x4087aa
0x000000000040f3f7 : jmp 0x40fa68
0x000000000040f3f6 : jmp 0x40fa69
0x0000000000411e71 : jmp 0x411e77
0x0000000000412bec : jmp 0x412bf7
0x0000000000415772 : jmp 0x4157e0
0x000000000041b22d : jmp 0x41df13
0x000000000041dcc1 : jmp 0x41df15
0x0000000000421bdd : jmp 0x422155
0x00000000004274f1 : jmp 0x427803
0x00000000004289b4 : jmp 0x428d67
0x000000000042b6d2 : jmp 0x42b817
0x000000000042d7cf : jmp 0x42dc27
0x000000000042d7ce : jmp 0x42dc28
0x000000000042edd5 : jmp 0x42f42f
0x000000000042fbe3 : jmp 0x42ff7a
0x000000000043398b : jmp 0x433996
0x00000000004345fb : jmp 0x434606
0x0000000000434a71 : jmp 0x434b7d
0x000000000040b4c5 : jmp 0xffffffff89477777
0x00000000004297be : jmp 0xffffffffb7049b8a
0x0000000000433b4a : jmp 0xffffffffc3e7b3eb
0x000000000040c16d : jmp qword ptr [rax]
0x000000000041c4bf : jmp qword ptr [rbx]
0x0000000000405376 : jmp qword ptr [rcx]
0x0000000000431547 : jmp qword ptr [rdi]
0x000000000041e3e5 : jmp qword ptr [rdx + 0xc2e968]
0x0000000000409d3e : jmp qword ptr [rdx]
0x0000000000406874 : jmp qword ptr [rsi]
0x0000000000401fe7 : jmp rax
0x000000000041cfe2 : jmp rbx
0x000000000042fe91 : jmp rcx
0x0000000000406f40 : jmp rdi
0x0000000000402027 : jmp rdx
0x000000000042fc23 : jmp rsi
0x000000000041442f : jmp rsp
0x0000000000402010 : jne 0x402017 ; pop rbp ; ret
0x0000000000402046 : jne 0x402070 ; add byte ptr [rcx], al ; ret
0x0000000000402045 : jne 0x402071 ; add byte ptr [rcx], al ; ret
0x000000000041eb96 : jne 0x41eb9f ; inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x00000000004329d5 : jne 0x4329bf ; call 0x401f88
0x0000000000437939 : jne 0x43793b ; jmp qword ptr [rax]
0x00000000004091e1 : jno 0x40925d ; cld ; ret
0x0000000000409e18 : jno 0x409e94 ; cld ; ret
0x0000000000409e3a : jno 0x409eb6 ; cld ; ret
0x00000000004077e5 : jo 0x407846 ; ret
0x000000000040918d : jo 0x409209 ; cld ; ret
0x000000000040aa11 : jo 0x40aa19 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040fa5a : jo 0x40fa62 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000412a36 : jo 0x412a97 ; ret
0x0000000000413357 : jo 0x4133b8 ; ret
0x000000000041edb1 : jo 0x41ee12 ; ret
0x000000000041eed4 : jo 0x41ef35 ; ret
0x000000000041f00e : jo 0x41f06f ; ret
0x0000000000422eec : jo 0x422f4d ; ret
0x0000000000427d14 : jo 0x427d75 ; ret
0x0000000000436ffd : jo 0x437000 ; jmp qword ptr [rax]
0x0000000000425d08 : jrcxz 0x425d6e ; ret 0x8589
0x0000000000425d5c : jrcxz 0x425dc2 ; ret 0x8589
0x0000000000427214 : jrcxz 0x42727a ; ret 0x8fb9
0x000000000042743f : jrcxz 0x4274a5 ; ret 0x8fb9
0x000000000041df06 : js 0x41df1a ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000433b4c : js 0x433af4 ; ret
0x0000000000433b93 : js 0x433b3b ; ret
0x0000000000433bcd : js 0x433b75 ; ret
0x0000000000405a9d : lahf ; ret
0x000000000040e957 : lahf ; ret 0xd284
0x0000000000405890 : lea edi, dword ptr [0x435be6] ; call 0x401b89
0x0000000000405922 : lea edi, dword ptr [0x435c00] ; call 0x401b89
0x0000000000405a95 : lea edi, dword ptr [rax - 0x4f000009] ; add al, ch ; lahf ; ret
0x000000000040f252 : leave ; ret
0x0000000000406901 : les r9, ptr [r15] ; pushfq ; ret 0xd284
0x0000000000408674 : lodsb al, byte ptr [rsi] ; jmp 0x4087ab
0x0000000000425de8 : lodsb al, byte ptr [rsi] ; ret 0x89cc
0x00000000004273d5 : lodsb al, byte ptr [rsi] ; ret 0x8bcc
0x0000000000407dab : loopne 0x407db2 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000408784 : loopne 0x40878d ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040ae1a : loopne 0x40adef ; ret
0x000000000040ae6e : loopne 0x40ae43 ; ret
0x000000000040c3f6 : loopne 0x40c3cb ; ret
0x000000000040c446 : loopne 0x40c41b ; ret
0x0000000000412a32 : loopne 0x412a82 ; add esp, 0x70 ; pop rbp ; ret
0x0000000000412a31 : loopne 0x412a83 ; add esp, 0x70 ; pop rbp ; ret
0x0000000000412db2 : loopne 0x412e02 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000412db1 : loopne 0x412e03 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000415ede : loopne 0x415ee7 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042102f : loopne 0x421082 ; add esp, 0x2d0 ; pop rbp ; ret
0x0000000000422c30 : loopne 0x422c39 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042303c : loopne 0x42308c ; add esp, 0x40 ; pop rbp ; ret
0x000000000042303b : loopne 0x42308d ; add esp, 0x40 ; pop rbp ; ret
0x000000000042335f : loopne 0x4233af ; add esp, 0x40 ; pop rbp ; ret
0x000000000042335e : loopne 0x4233b0 ; add esp, 0x40 ; pop rbp ; ret
0x00000000004289c6 : loopne 0x428a0f ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x00000000004337dc : loopne 0x4337e5 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000436d3c : loopne 0x436cf7 ; std ; jmp qword ptr [rax]
0x0000000000405991 : mov ah, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000406168 : mov ah, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000428ac4 : mov ah, 0x1b ; fidiv dword ptr [rdi] ; ret 0x91e9
0x00000000004024e0 : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x00000000004061ce : mov ah, 4 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000406c7b : mov ah, 5 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000406c9f : mov ah, 6 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000436d7c : mov al, -0x15 ; std ; jmp qword ptr [rax]
0x0000000000415682 : mov al, -0x18 ; cwde ; ret
0x0000000000402248 : mov al, -0x18 ; ret 0
0x000000000040ca64 : mov al, -0x77 ; test dword ptr [rsi + rdi*8 - 0x7bf00001], ecx ; ret 0x12
0x000000000041565d : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x00000000004099e6 : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042a90a : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000043347a : mov al, 0 ; call 0x401ad8
0x0000000000405b6b : mov al, 0 ; call 0x401e44
0x00000000004286ce : mov al, 0x2d ; cmp al, 0x42 ; ret
0x0000000000432823 : mov al, 0x2d ; ret 0xa414
0x000000000041609b : mov al, 0x48 ; add esp, 0xa0 ; pop rbp ; ret
0x000000000040c435 : mov al, 0xf ; xchg eax, esi ; ret 0xe280
0x000000000043389d : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000433a4d : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000434249 : mov al, byte ptr [rbp - 0x13] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004082b3 : mov al, byte ptr [rbp - 0x15] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000040ecf5 : mov al, byte ptr [rbp - 0x19] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000436c6d : mov bh, -4 ; jmp rax
0x00000000004380b9 : mov bh, bh ; jmp qword ptr [rcx]
0x0000000000411b71 : mov byte ptr [0x6397b0], al ; pop rbp ; ret
0x000000000040c430 : mov byte ptr [r8 + 0x3b], r9b ; mov r8b, 0xf ; xchg eax, esi ; ret 0xe280
0x000000000040c431 : mov byte ptr [rax + 0x3b], cl ; mov r8b, 0xf ; xchg eax, esi ; ret 0xe280
0x0000000000409cf1 : mov byte ptr [rax + 1], cl ; ret 0x8948
0x000000000040c213 : mov byte ptr [rax - 0x7f], cl ; ret 1
0x000000000040623a : mov byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040d720 : mov byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004074a7 : mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x000000000042cf29 : mov byte ptr [rdx], cl ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x0000000000402043 : mov byte ptr [rip + 0x23752e], 1 ; ret
0x0000000000437d79 : mov ch, -2 ; call qword ptr [rbx]
0x000000000042f421 : mov dh, -0x40 ; mov rsp, rbp ; pop rbp ; ret
0x00000000004082b9 : mov dh, -0x40 ; pop rbp ; ret
0x0000000000436ebd : mov dh, -2 ; jmp qword ptr [rax]
0x0000000000436d3d : mov dh, -3 ; jmp qword ptr [rax]
0x0000000000434375 : mov dl, -0x47 ; ret
0x0000000000406b95 : mov dl, -1 ; inc edi ; test dword ptr [rsi + rdi*8 - 1], esi ; call rdi
0x0000000000436d2d : mov dl, -3 ; jmp rax
0x0000000000420c00 : mov dl, byte ptr [rbp + rdi] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000436cfd : mov dr1, ebp ; jmp qword ptr [rax]
0x0000000000411b4d : mov dword ptr [0x6397a8], edi ; pop rbp ; ret
0x0000000000415d57 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000415b1b : mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000415c8f : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x00000000004157e9 : mov dword ptr [rbp - 0x18], edi ; call 0x401a45
0x00000000004024de : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004274ee : mov dword ptr [rbp - 0x7c], eax ; jmp 0x427806
0x00000000004022d7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000402305 : mov dword ptr [rbp - 4], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000407495 : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000415f0d : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000043094c : mov dword ptr [rdi + 0x10], eax ; pop rbp ; ret
0x000000000042b84e : mov dword ptr [rsi], edi ; pop rbp ; ret
0x0000000000405a96 : mov eax, 0xb0fffff7 ; add al, ch ; lahf ; ret
0x00000000004065c4 : mov eax, 0xc7006395 ; test dword ptr [rsi + rdi*8 - 1], esi ; call rbx
0x0000000000415a0f : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000422f7b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004122f3 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000432c38 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000422c5f : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041218c : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000042573d : mov eax, dword ptr [rbp - 0x14] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000425669 : mov eax, dword ptr [rbp - 0x14] ; pop rbp ; ret
0x000000000042307e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000422950 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000413351 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000415d5a : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000434f9d : mov eax, dword ptr [rbp - 0x1c] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000412db0 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042303a : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000412a30 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000423475 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000415904 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000415a0c : mov eax, dword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000415b15 : mov eax, dword ptr [rbp - 0x30] ; mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000042324f : mov eax, dword ptr [rbp - 0x34] ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040813c : mov eax, dword ptr [rbp - 0x38] ; add rsp, 0x18 ; pop rbp ; ret
0x0000000000415c91 : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000041edab : mov eax, dword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000427e6a : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041281d : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000042115a : mov eax, dword ptr [rbp - 8] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000429780 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000427d0e : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000407499 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004283dd : mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408323 : mov eax, esi ; pop rbp ; ret
0x000000000040d87f : mov ebp, 0xb96699e4 ; pushfq ; ret
0x000000000040206b : mov ebp, esp ; call rax
0x0000000000401fd1 : mov ebp, esp ; ja 0x401fdc ; pop rbp ; ret
0x000000000040d8a6 : mov ecx, 0xb9311296 ; pushfq ; ret
0x0000000000415b18 : mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000402065 : mov edi, 0x638e20 ; mov rbp, rsp ; call rax
0x0000000000401fe2 : mov edi, 0x639518 ; jmp rax
0x0000000000402022 : mov edi, 0x639518 ; jmp rdx
0x00000000004063c3 : mov edi, 0xc7000010 ; test dword ptr [rsi + rdi*8 - 1], esi ; call rbx
0x0000000000402140 : mov edi, 0xf107b995 ; ret 0x8bec
0x0000000000405d9d : mov edi, 1 ; call 0x402087
0x000000000041573b : mov edi, dword ptr [rbp - 0x50] ; call 0x401a25
0x000000000041579f : mov edi, dword ptr [rbp - 0x58] ; call 0x401a25
0x000000000042b848 : mov edi, dword ptr [rsi] ; add rdi, rax ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0x0000000000435547 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000435546 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000405843 : mov edx, 0x3d ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8445
0x0000000000405fa3 : mov edx, 0x60b9ffff ; ret 0xcae4
0x000000000040d8d0 : mov edx, dword ptr [rbp - 0x80] ; call 0x412839
0x0000000000405b69 : mov edx, eax ; mov al, 0 ; call 0x401e46
0x0000000000408c8a : mov es, word ptr [r8] ; adc ecx, ebp ; ret
0x0000000000408c8b : mov es, word ptr [rax] ; adc ecx, ebp ; ret
0x00000000004329d4 : mov esi, dword ptr [rbp - 0x20] ; call 0x401f89
0x0000000000402020 : mov esi, eax ; mov edi, 0x639518 ; jmp rdx
0x0000000000405b66 : mov esi, ecx ; mov rdx, rax ; mov al, 0 ; call 0x401e49
0x000000000042f424 : mov esp, ebp ; pop rbp ; ret
0x0000000000402067 : mov fs, word ptr [rbx] ; mov rbp, rsp ; call rax
0x0000000000411b4c : mov qword ptr [0x6397a8], rdi ; pop rbp ; ret
0x00000000004157e8 : mov qword ptr [rbp - 0x18], rdi ; call 0x401a46
0x0000000000407494 : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000415f0c : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x50 ; pop rbp ; ret
0x000000000043094b : mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0x000000000042b84d : mov qword ptr [rsi], rdi ; pop rbp ; ret
0x0000000000428ac3 : mov r12b, 0x1b ; fidiv dword ptr [rdi] ; ret 0x91e9
0x00000000004024df : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000402247 : mov r8b, -0x18 ; ret 0
0x00000000004286cd : mov r8b, 0x2d ; cmp al, 0x42 ; ret
0x0000000000432822 : mov r8b, 0x2d ; ret 0xa414
0x000000000040c434 : mov r8b, 0xf ; xchg eax, esi ; ret 0xe280
0x0000000000422f7a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004122f2 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000432c37 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000422c5e : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041218b : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000042307d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000042294f : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000413350 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000412daf : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000423039 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000412a2f : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000423474 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000415903 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000415a0b : mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000040813b : mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x18 ; pop rbp ; ret
0x000000000041edaa : mov rax, qword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000407498 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000408322 : mov rax, rsi ; pop rbp ; ret
0x000000000040206a : mov rbp, rsp ; call rax
0x0000000000401fd0 : mov rbp, rsp ; ja 0x401fdd ; pop rbp ; ret
0x000000000041573a : mov rdi, qword ptr [rbp - 0x50] ; call 0x401a26
0x000000000041579e : mov rdi, qword ptr [rbp - 0x58] ; call 0x401a26
0x0000000000405b68 : mov rdx, rax ; mov al, 0 ; call 0x401e47
0x000000000040201f : mov rsi, rax ; mov edi, 0x639518 ; jmp rdx
0x000000000042f423 : mov rsp, rbp ; pop rbp ; ret
0x000000000041eb9a : mov word ptr [r8 + 0x3a], fs ; ret
0x000000000041eb9b : mov word ptr [rax + 0x3a], fs ; ret
0x000000000041c2ec : movabs al, byte ptr [0x3944013744be0f44] ; ret 0xf41
0x00000000004345ee : movabs al, byte ptr [0x840fc445895ff32e] ; ret 0
0x00000000004066df : movabs dword ptr [0xfffe7485c700000d], eax ; call rbx
0x00000000004052df : movabs dword ptr [0xfffe7485c7000021], eax ; call rsp
0x000000000041109b : movabs eax, dword ptr [0xffff3085c7ffff0d] ; call qword ptr [rdi]
0x0000000000421bdc : movsb byte ptr [rdi], byte ptr [rsi] ; jmp 0x422156
0x0000000000433b4d : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000407a52 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xf2e8
0x000000000042f420 : movzx eax, al ; mov rsp, rbp ; pop rbp ; ret
0x00000000004082b8 : movzx eax, al ; pop rbp ; ret
0x00000000004074aa : movzx eax, byte ptr [rbp - 1] ; pop rbp ; ret
0x00000000004076b5 : nop ; pop rsp ; add r8b, bpl ; ret 0xffa4
0x000000000043707c : nop ; sar bh, 1 ; jmp qword ptr [rax]
0x0000000000435568 : nop dword ptr [rax + rax] ; ret
0x0000000000437d75 : or al, 0 ; add al, bh ; mov ch, -2 ; call qword ptr [rbx]
0x000000000041df07 : or al, 0 ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000436da9 : or al, byte ptr [rax] ; add al, dh ; std ; jmp rax
0x0000000000436d29 : or byte ptr [rax], al ; add byte ptr [rax - 0x4e], dl ; std ; jmp rax
0x0000000000436cf9 : or byte ptr [rax], al ; add byte ptr [rax - 0x72], al ; std ; jmp qword ptr [rax]
0x0000000000436c7d : or ch, bh ; jmp qword ptr [rax]
0x00000000004086eb : or dword ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax - 0x7f] ; ret 1
0x0000000000436d39 : or dword ptr [rax], eax ; add al, ah ; mov dh, -3 ; jmp qword ptr [rax]
0x0000000000437a55 : or dword ptr [rax], eax ; add al, ch ; jbe 0x437a5f ; jmp qword ptr [rdx]
0x0000000000421287 : or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000436db9 : or eax, dword ptr [rax] ; add al, dh ; jb 0x436dc3 ; jmp qword ptr [rax]
0x0000000000436de9 : or eax, dword ptr [rax] ; add al, dh ; jg 0x436df3 ; jmp rax
0x000000000041ef91 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000436f6d : or edi, edi ; jmp rax
0x00000000004067bc : out -0x1c, al ; cmp ecx, ebp ; ret 0xc
0x00000000004153c7 : out -0x47, eax ; ret 0x614e
0x000000000040ecf7 : out 0x24, eax ; add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000433a4f : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000042b9be : out dx, al ; xchg eax, ebp ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000043389f : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x000000000043555c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000043555e : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041e232 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000435560 : pop r14 ; pop r15 ; ret
0x000000000041e234 : pop r15 ; pop rbp ; ret
0x0000000000435562 : pop r15 ; ret
0x0000000000407604 : pop rax ; add byte ptr [rax], al ; add byte ptr [rbx + 0x212dcc45], cl ; ret
0x00000000004340c8 : pop rax ; add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000402042 : pop rbp ; mov byte ptr [rip + 0x23752e], 1 ; ret
0x0000000000401fe1 : pop rbp ; mov edi, 0x639518 ; jmp rax
0x000000000040201e : pop rbp ; mov rsi, rax ; mov edi, 0x639518 ; jmp rdx
0x000000000043555b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000043555f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401fd5 : pop rbp ; ret
0x0000000000407efa : pop rbx ; add dword ptr [rax], eax ; add cl, ch ; ret 0
0x000000000041e231 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041df0a : pop rbx ; pop rbp ; ret
0x00000000004156c1 : pop rbx ; ret
0x0000000000434374 : pop rcx ; mov dl, -0x47 ; ret
0x000000000041e235 : pop rdi ; pop rbp ; ret
0x0000000000435563 : pop rdi ; ret
0x00000000004030b3 : pop rdi ; ret 0xcae4
0x00000000004347bb : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000042b2eb : pop rsi ; add dword ptr [rax], eax ; add byte ptr [rbx - 0xed217bb], cl ; ret
0x000000000041e233 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000435561 : pop rsi ; pop r15 ; ret
0x0000000000405926 : pop rsp ; add r8b, bpl ; push rdx ; ret 0xffff
0x00000000004076b6 : pop rsp ; add r8b, bpl ; ret 0xffa4
0x000000000043555d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040caef : pop rsp ; ret
0x000000000040e7e9 : popfq ; ret 0xd284
0x0000000000409e17 : push qword ptr [rcx + 0x77] ; cld ; ret
0x000000000041d92f : push qword ptr [rdx + rbx*2 + 0x1f] ; ret 0xd4e9
0x0000000000406132 : push rax ; adc eax, dword ptr [rax] ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], esi ; call rbx
0x0000000000436ebc : push rax ; mov dh, -2 ; jmp qword ptr [rax]
0x0000000000436d2c : push rax ; mov dl, -3 ; jmp rax
0x00000000004024e4 : push rax ; pop rbp ; ret
0x00000000004373d9 : push rax ; std ; jmp qword ptr [rcx]
0x000000000042253b : push rbp ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x0000000000422e43 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000430a98 : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x10
0x000000000042b9ae : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0x18
0x000000000042d965 : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 0xffff
0x00000000004086ee : push rbp ; fmul dword ptr [rax - 0x7f] ; ret 1
0x000000000041ba68 : push rbp ; in al, -0x7f ; ret 0xff9f
0x000000000041bc4e : push rbp ; in al, -0x7f ; ret 0xffbf
0x000000000041bcf4 : push rbp ; in al, -0x7f ; ret 0xffc5
0x000000000041bd22 : push rbp ; in al, -0x7f ; ret 0xffd5
0x000000000041bdf0 : push rbp ; in al, -0x7f ; ret 0xffd8
0x000000000041bf86 : push rbp ; in al, -0x7f ; ret 0xffe0
0x0000000000409cf0 : push rbp ; mov byte ptr [rax + 1], cl ; ret 0x8948
0x000000000040c212 : push rbp ; mov byte ptr [rax - 0x7f], cl ; ret 1
0x0000000000402064 : push rbp ; mov edi, 0x638e20 ; mov rbp, rsp ; call rax
0x0000000000425d5b : push rbx ; jrcxz 0x425dc3 ; ret 0x8589
0x0000000000427213 : push rbx ; jrcxz 0x42727b ; ret 0x8fb9
0x000000000042743e : push rbx ; jrcxz 0x4274a6 ; ret 0x8fb9
0x000000000040ae52 : push rdi ; ret
0x0000000000425d07 : push rdx ; jrcxz 0x425d6f ; ret 0x8589
0x000000000040592a : push rdx ; ret 0xffff
0x0000000000408c89 : pushfq ; mov es, word ptr [r8] ; adc ecx, ebp ; ret
0x000000000040c9b9 : pushfq ; ret
0x000000000042ab73 : pushfq ; ret 0x8445
0x0000000000406904 : pushfq ; ret 0xd284
0x0000000000436f68 : rcl byte ptr [rcx], 0 ; add al, ah ; or edi, edi ; jmp rax
0x0000000000436fac : rcl byte ptr [rdi], -1 ; jmp rax
0x0000000000437068 : rcl byte ptr [rip - 0x31000000], -1 ; jmp rax
0x00000000004370a8 : rcl byte ptr [rsi], 0 ; add byte ptr [rax], dh ; fdivr st(7) ; jmp rax
0x00000000004019e9 : ret
0x000000000040224a : ret 0
0x0000000000429d19 : ret 0x10
0x000000000042e2cf : ret 0x110a
0x000000000040ca6d : ret 0x12
0x000000000042b9b2 : ret 0x18
0x0000000000425977 : ret 0x1a
0x000000000041d0c0 : ret 0x1ae8
0x0000000000421017 : ret 0x1ce9
0x0000000000406dbc : ret 0x1ee8
0x000000000043427b : ret 0x2030
0x000000000042bc52 : ret 0x2106
0x0000000000401ea2 : ret 0x2373
0x0000000000401ca2 : ret 0x2374
0x0000000000401aa2 : ret 0x2375
0x000000000041b447 : ret 0x2a
0x0000000000404827 : ret 0x2b
0x000000000041e766 : ret 0x2c1
0x0000000000423ad3 : ret 0x2c22
0x0000000000412d21 : ret 0x30
0x000000000041fa51 : ret 0x31e9
0x0000000000420ef4 : ret 0x36e8
0x0000000000409b43 : ret 0x37e8
0x000000000040c341 : ret 0x39e8
0x0000000000425837 : ret 0x3bef
0x0000000000408e3b : ret 0x3fe8
0x00000000004183aa : ret 0x43fa
0x000000000041f8a8 : ret 0x4589
0x000000000040ecaf : ret 0x48e6
0x0000000000428013 : ret 0x5e5
0x000000000041516f : ret 0x614e
0x00000000004078ed : ret 0x631f
0x0000000000431426 : ret 0x64e8
0x000000000040c5e5 : ret 0x718e
0x000000000041fe52 : ret 0x7961
0x000000000040ca45 : ret 0x7980
0x0000000000431710 : ret 0x7ae8
0x0000000000420f12 : ret 0x7d81
0x000000000040bf21 : ret 0x8148
0x0000000000405349 : ret 0x8445
0x0000000000413990 : ret 0x8589
0x000000000040b4c7 : ret 0x8906
0x0000000000418240 : ret 0x891a
0x0000000000433c2c : ret 0x8934
0x0000000000406c42 : ret 0x8948
0x0000000000403ca1 : ret 0x8968
0x00000000004297c1 : ret 0x89b6
0x0000000000425de9 : ret 0x89cc
0x000000000040ec7c : ret 0x89e6
0x00000000004020fc : ret 0x89ec
0x000000000040ece6 : ret 0x8ae6
0x0000000000433c08 : ret 0x8b34
0x00000000004058b6 : ret 0x8b48
0x00000000004273d6 : ret 0x8bcc
0x0000000000402145 : ret 0x8bec
0x000000000042099e : ret 0x8ce8
0x0000000000415348 : ret 0x8ce9
0x0000000000427216 : ret 0x8fb9
0x0000000000428ac8 : ret 0x91e9
0x000000000042378c : ret 0x979f
0x000000000042e8a6 : ret 0xa
0x0000000000432825 : ret 0xa414
0x00000000004330bb : ret 0xa4be
0x000000000041c115 : ret 0xa9b9
0x0000000000417b92 : ret 0xade6
0x0000000000405af9 : ret 0xb0
0x000000000040bc09 : ret 0xb906
0x000000000041b880 : ret 0xb91a
0x0000000000429a7b : ret 0xb9b6
0x00000000004086c0 : ret 0xbae8
0x00000000004323cd : ret 0xbde8
0x0000000000414433 : ret 0xbe9
0x00000000004067c0 : ret 0xc
0x0000000000402005 : ret 0xc148
0x0000000000406b22 : ret 0xc189
0x00000000004030b4 : ret 0xcae4
0x000000000040cd0d : ret 0xd
0x00000000004052b0 : ret 0xd284
0x000000000041d933 : ret 0xd4e9
0x0000000000414a37 : ret 0xd549
0x0000000000428d8d : ret 0xdd89
0x000000000041f9a5 : ret 0xdde9
0x0000000000410e7a : ret 0xe2
0x00000000004064fd : ret 0xe280
0x00000000004073e1 : ret 0xe968
0x000000000040c48e : ret 0xece8
0x000000000041df4c : ret 0xee8
0x000000000040f414 : ret 0xf280
0x000000000040798b : ret 0xf2e8
0x000000000041c2f5 : ret 0xf41
0x00000000004306e0 : ret 0xfae8
0x0000000000414cbc : ret 0xfb94
0x000000000041ba6b : ret 0xff9f
0x00000000004076ba : ret 0xffa4
0x000000000041d40e : ret 0xffa5
0x000000000041bc51 : ret 0xffbf
0x000000000041c6bb : ret 0xffc4
0x000000000041bcf7 : ret 0xffc5
0x0000000000411a2a : ret 0xffc6
0x000000000040579e : ret 0xffd0
0x000000000041bd25 : ret 0xffd5
0x000000000041bdf3 : ret 0xffd8
0x000000000041c761 : ret 0xffd9
0x000000000041bf89 : ret 0xffe0
0x000000000041b05e : ret 0xfffa
0x0000000000407213 : ret 0xfffd
0x0000000000415740 : ret 0xfffe
0x0000000000405899 : ret 0xffff
0x00000000004074e8 : ret 1
0x000000000041c5c0 : ret 2
0x0000000000410b21 : ret 3
0x000000000041da47 : ret 4
0x00000000004212b8 : ret 5
0x000000000040bde6 : ret 6
0x000000000040fc3e : ret 7
0x000000000041e130 : ret 8
0x000000000042f4d5 : ret 9
0x0000000000405370 : rol bh, 1 ; test dword ptr [rsi + rdi*8 - 1], esi ; jmp qword ptr [rcx]
0x0000000000408dd4 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000040f927 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000421033 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000436c68 : rol byte ptr [rip - 0x48f00000], -4 ; jmp rax
0x000000000040536f : rol r15b, 1 ; test dword ptr [rsi + rdi*8 - 1], esi ; jmp qword ptr [rcx]
0x0000000000415b16 : ror byte ptr [r11 + 0x889ec4d], 1 ; pop rbp ; ret
0x000000000040200c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x40201b ; pop rbp ; ret
0x000000000042f422 : ror byte ptr [rax - 0x77], -0x14 ; pop rbp ; ret
0x0000000000436d28 : ror byte ptr [rax], 0 ; add byte ptr [rax - 0x4e], dl ; std ; jmp rax
0x0000000000415b17 : ror byte ptr [rbx + 0x889ec4d], 1 ; pop rbp ; ret
0x0000000000436de8 : ror byte ptr [rbx], 0 ; add al, dh ; jg 0x436df4 ; jmp rax
0x0000000000436da8 : ror byte ptr [rdx], 0 ; add al, dh ; std ; jmp rax
0x0000000000436e68 : ror byte ptr [rip - 0x7b500000], -2 ; jmp rax
0x0000000000422e40 : ror dword ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000421109 : sahf ; ret 0xd284
0x000000000040c160 : sahf ; ret 0xe280
0x0000000000429f3e : salc ; ret
0x000000000043707d : sar bh, 1 ; jmp qword ptr [rax]
0x0000000000410e88 : sar ch, -1 ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x00000000004153c4 : sar dl, 0x3a ; out -0x47, eax ; ret 0x614e
0x000000000040200e : sar eax, 1 ; jne 0x402019 ; pop rbp ; ret
0x000000000040200d : sar rax, 1 ; jne 0x40201a ; pop rbp ; ret
0x0000000000407ca7 : sbb al, -0x47 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xf2e8
0x0000000000436cbc : sbb byte ptr [rbx], -3 ; jmp qword ptr [rax]
0x000000000041ebc9 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000405b0d : sbb dword ptr [rax], eax ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], esi ; call rbx
0x0000000000422a23 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041c10e : sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x0000000000436cbd : sbb edi, ebp ; jmp qword ptr [rax]
0x0000000000437fb9 : sbb edi, edi ; jmp rax
0x0000000000437199 : scasb al, byte ptr [rdi] ; cld ; call qword ptr [rdx]
0x00000000004351d5 : setne al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004351d7 : shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000436eb9 : sldt word ptr [rax] ; push rax ; mov dh, -2 ; jmp qword ptr [rax]
0x000000000043727a : std ; call qword ptr [rax]
0x00000000004374ba : std ; call qword ptr [rsi]
0x0000000000436cf6 : std ; inc dword ptr [rax] ; or byte ptr [rax], al ; add byte ptr [rax - 0x72], al ; std ; jmp qword ptr [rax]
0x0000000000436d36 : std ; inc dword ptr [rax] ; or dword ptr [rax], eax ; add al, ah ; mov dh, -3 ; jmp qword ptr [rax]
0x0000000000436db6 : std ; inc dword ptr [rax] ; or eax, dword ptr [rax] ; add al, dh ; jb 0x436dc6 ; jmp qword ptr [rax]
0x0000000000436da6 : std ; inc eax ; or al, byte ptr [rax] ; add al, dh ; std ; jmp rax
0x0000000000436d26 : std ; inc eax ; or byte ptr [rax], al ; add byte ptr [rax - 0x4e], dl ; std ; jmp rax
0x000000000042b703 : std ; inc edi ; in al, dx ; int1 ; ret
0x0000000000436c7e : std ; jmp qword ptr [rax]
0x00000000004373da : std ; jmp qword ptr [rcx]
0x0000000000436cae : std ; jmp rax
0x0000000000405fa2 : stosb byte ptr [rdi], al ; mov edx, 0x60b9ffff ; ret 0xcae4
0x000000000040b4c6 : stosd dword ptr [rdi], eax ; ret 0x8906
0x000000000040bc08 : stosd dword ptr [rdi], eax ; ret 0xb906
0x0000000000419157 : sub al, 0x38 ; ret 0x8589
0x000000000041c113 : sub al, 0x38 ; ret 0xa9b9
0x0000000000430018 : sub al, 0x61 ; ret
0x0000000000437278 : sub byte ptr [rdx], al ; std ; call qword ptr [rax]
0x00000000004114b7 : sub dword ptr [rbx + 0x3d], esi ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004019e1 : sub eax, dword ptr [rbx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000040831d : sub eax, edx ; add rsi, rax ; mov rax, rsi ; pop rbp ; ret
0x00000000004157e5 : sub esp, 0x60 ; mov qword ptr [rbp - 0x18], rdi ; call 0x401a49
0x00000000004355b1 : sub esp, 8 ; add rsp, 8 ; ret
0x00000000004355b0 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000042b281 : test ah, al ; add al, 0 ; add cl, ch ; ret 1
0x00000000004156bf : test al, -0x18 ; pop rbx ; ret
0x000000000042255b : test al, -0x39 ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000042fd89 : test al, -0x39 ; test dword ptr [rdi + rdi*8 - 1], edi ; call rcx
0x0000000000406c5f : test al, -0x39 ; test dword ptr [rsi + rdi*8 - 1], esi ; call qword ptr [rcx]
0x00000000004155a6 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000406c1a : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000042d7cd : test al, 0x45 ; jmp 0x42dc29
0x000000000041edad : test al, 0x48 ; add esp, 0x70 ; pop rbp ; ret
0x0000000000422438 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000436e6d : test bh, dh ; jmp rax
0x000000000043556a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004373d4 : test byte ptr [rdx], al ; add byte ptr [rax], al ; call 0x22437134
0x0000000000421285 : test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x00000000004089ae : test byte ptr [rip - 0x16fffffe], dh ; ret 1
0x0000000000425074 : test ch, cl ; ret
0x0000000000430381 : test dh, dl ; add dword ptr [rax], eax ; add cl, ch ; ret 1
0x0000000000415744 : test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rsi]
0x00000000004153aa : test dword ptr [rdi + rdi*8 - 1], ebp ; call rbx
0x0000000000422540 : test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x00000000004222a8 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x000000000042f45c : test dword ptr [rdi + rdi*8 - 1], edi ; call rbx
0x000000000042fc4a : test dword ptr [rdi + rdi*8 - 1], edi ; call rcx
0x000000000042100f : test dword ptr [rdi + rdi*8 - 1], edi ; dec ebx ; je 0x420fdd ; ret 0x1ce9
0x000000000042fe8d : test dword ptr [rdi + rdi*8 - 1], edi ; jmp rcx
0x000000000042fc1f : test dword ptr [rdi + rdi*8 - 1], edi ; jmp rsi
0x0000000000409fb4 : test dword ptr [rdi + rdi*8 - 1], edx ; call qword ptr [rdx]
0x0000000000409d3a : test dword ptr [rdi + rdi*8 - 1], edx ; jmp qword ptr [rdx]
0x0000000000409e13 : test dword ptr [rdi + rdi*8 - 1], edx ; push qword ptr [rcx + 0x77] ; cld ; ret
0x000000000040213f : test dword ptr [rdi - 0xef8466b], edi ; ret 0x8bec
0x0000000000430f4e : test dword ptr [rsi + rbp*8 - 0x7bf00001], ebx ; ret 8
0x000000000040ca66 : test dword ptr [rsi + rdi*8 - 0x7bf00001], ecx ; ret 0x12
0x0000000000414ef0 : test dword ptr [rsi + rdi*8 - 0x7bf00001], edx ; ret
0x0000000000414e80 : test dword ptr [rsi + rdi*8 - 0x7bf00001], esp ; ret
0x0000000000406c61 : test dword ptr [rsi + rdi*8 - 1], esi ; call qword ptr [rcx]
0x0000000000406302 : test dword ptr [rsi + rdi*8 - 1], esi ; call rax
0x00000000004058df : test dword ptr [rsi + rdi*8 - 1], esi ; call rbx
0x0000000000406b99 : test dword ptr [rsi + rdi*8 - 1], esi ; call rdi
0x00000000004052cc : test dword ptr [rsi + rdi*8 - 1], esi ; call rsp
0x0000000000405372 : test dword ptr [rsi + rdi*8 - 1], esi ; jmp qword ptr [rcx]
0x0000000000406870 : test dword ptr [rsi + rdi*8 - 1], esi ; jmp qword ptr [rsi]
0x0000000000406e71 : test dword ptr [rsi + rdi*8 - 1], esi ; jmp rax
0x0000000000406f3c : test dword ptr [rsi + rdi*8 - 1], esi ; jmp rdi
0x0000000000436e7d : test edi, esi ; jmp qword ptr [rax]
0x0000000000425073 : test r13b, r9b ; ret
0x000000000040c965 : wait ; ret
0x000000000042b9bf : xchg eax, ebp ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000416141 : xchg eax, ebp ; ret
0x000000000040584b : xchg eax, ebp ; ret 0x8445
0x00000000004052af : xchg eax, ebp ; ret 0xd284
0x00000000004064fc : xchg eax, ebp ; ret 0xe280
0x000000000040f413 : xchg eax, ebp ; ret 0xf280
0x00000000004351d6 : xchg eax, ebp ; shl byte ptr [rcx + rax], 0xf ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000432deb : xchg eax, ebx ; ret
0x000000000042cf2f : xchg eax, ebx ; ret 0xd284
0x000000000041913b : xchg eax, ecx ; ret
0x0000000000406a7a : xchg eax, edi ; ret 0xd284
0x000000000041928b : xchg eax, edx ; ret
0x000000000042243e : xchg eax, edx ; ret 0xd284
0x000000000041eac2 : xchg eax, esi ; ret
0x000000000040c437 : xchg eax, esi ; ret 0xe280
0x0000000000416123 : xchg eax, esp ; ret
0x0000000000405348 : xchg eax, esp ; ret 0x8445
0x0000000000409b2e : xchg eax, esp ; ret 0x8b48
0x0000000000405a59 : xchg eax, esp ; ret 0xd284
0x0000000000406b19 : xor al, 0x25 ; adc byte ptr [rbp - 0x3876ff9d], -0x77 ; ret 0xc189
0x0000000000436d6c : xor bh, al ; std ; jmp rax
0x000000000043091c : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040a047 : xor byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041f0c7 : xor eax, 0x48fffff4 ; add esp, 0x20 ; pop rbp ; ret
0x00000000004089af : xor eax, 0xe9000002 ; ret 1
0x0000000000415c8d : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
