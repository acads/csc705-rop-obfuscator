0x000000000040374b : adc al, 0x25 ; ret
0x00000000004036e9 : adc al, 0x25 ; ret 0x6252
0x000000000041015e : adc al, 1 ; ret 0x5189
0x00000000004231d9 : adc byte ptr [rax], al ; add al, al ; ret
0x0000000000410146 : adc byte ptr [rcx], al ; ret 0x5189
0x0000000000423c00 : adc byte ptr [rdi - 1], bh ; jmp rdx
0x00000000004017a3 : adc byte ptr [rdx + 0x62], 0 ; jmp rax
0x00000000004017e3 : adc byte ptr [rdx + 0x62], 0 ; jmp rdx
0x000000000041d1eb : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004100fc : adc dword ptr [rcx], eax ; ret 0x1189
0x000000000041ab99 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042373d : add al, 0 ; add al, ah ; fdivp st(6) ; call rdx
0x0000000000405432 : add al, 0 ; add byte ptr [rax - 0x75], cl ; jge 0x40542a ; call 0x401739
0x0000000000403417 : add al, 0x25 ; ret
0x00000000004033a8 : add al, 0x25 ; ret 0x6252
0x000000000041010d : add al, 1 ; ret 0x5189
0x000000000042373f : add al, ah ; fdivp st(6) ; call rdx
0x00000000004231db : add al, al ; ret
0x000000000041cae3 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000040511c : add al, ch ; sahf ; ret
0x00000000004075e3 : add bh, al ; mov r12b, -0xf ; add byte ptr [rbx], cl ; test al, -0x17 ; ret
0x000000000041cede : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x000000000041cc46 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x0000000000421def : add bl, dh ; ret
0x0000000000408e08 : add byte ptr [rax + 0xf410000], al ; xchg eax, esp ; ret 0x8445
0x00000000004232d3 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; cwde ; loopne 0x4232e0 ; jmp rax
0x0000000000405434 : add byte ptr [rax - 0x75], cl ; jge 0x405428 ; call 0x401737
0x0000000000410987 : add byte ptr [rax - 0x75], cl ; push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 0x30
0x0000000000405684 : add byte ptr [rax - 0x77], cl ; ret 0x73e8
0x0000000000405778 : add byte ptr [rax - 0x77], cl ; ret 0x7fe8
0x00000000004056fe : add byte ptr [rax - 0x77], cl ; ret 0xf9e8
0x0000000000410992 : add byte ptr [rax - 0x7f], cl ; ret 0x40
0x0000000000423bfe : add byte ptr [rax], al ; adc byte ptr [rdi - 1], bh ; jmp rdx
0x000000000041cedc : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x000000000041cc44 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x0000000000421ded : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000410985 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 0x30
0x0000000000410990 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x40
0x0000000000421deb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000406afb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004082dd : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000421dec : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004070b9 : add byte ptr [rax], al ; add byte ptr [rbx + 0x2a2dac45], cl ; ret 0x8931
0x0000000000407375 : add byte ptr [rax], al ; add byte ptr [rbx + 0x2b2dac45], cl ; ret 0x8931
0x000000000041a8de : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004059f5 : add byte ptr [rax], al ; add byte ptr [rbx - 0x32d237bb], cl ; ret
0x00000000004059b3 : add byte ptr [rax], al ; add byte ptr [rbx - 0x33d237bb], cl ; ret
0x0000000000405f49 : add byte ptr [rax], al ; add byte ptr [rbx - 0x62d21bbb], cl ; insb byte ptr [rdi], dx ; ret
0x0000000000405e6d : add byte ptr [rax], al ; add byte ptr [rbx - 0x63d21bbb], cl ; insb byte ptr [rdi], dx ; ret
0x00000000004214d9 : add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000421455 : add byte ptr [rax], al ; add byte ptr [rbx - 0x66d217bb], cl ; ret
0x00000000004208ee : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x000000000040697f : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8041
0x0000000000419791 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000421595 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x00000000004037b3 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000411980 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x00000000004127ed : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000403517 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000406c00 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000410762 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x0000000000408f41 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x00000000004086b7 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x00000000004127cf : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004055c7 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000403d53 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000407c4b : add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000420d9d : add byte ptr [rax], al ; add cl, ch ; ret 0
0x000000000041ab9b : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041a600 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004116e5 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x00000000004088ea : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041ab57 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000040135b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000041e61d : add byte ptr [rax], al ; call 0x4013b8
0x00000000004232d6 : add byte ptr [rax], al ; cwde ; loopne 0x4232dd ; jmp rax
0x0000000000423b9a : add byte ptr [rax], al ; in al, 8 ; add byte ptr [rax], al ; push rax ; jl 0x423bab ; jmp qword ptr [rdx]
0x0000000000422ec6 : add byte ptr [rax], al ; ja 0x422ed3 ; add byte ptr [rax], al ; mov al, -0x1c ; std ; call qword ptr [rax]
0x0000000000401519 : add byte ptr [rax], al ; jmp 0x401379
0x0000000000407c47 : add byte ptr [rax], al ; jmp 0x407c56
0x0000000000410570 : add byte ptr [rax], al ; jmp 0x4109ec
0x0000000000420d99 : add byte ptr [rax], al ; jmp 0x420da8
0x0000000000421a09 : add byte ptr [rax], al ; jmp 0x421a18
0x0000000000423a7e : add byte ptr [rax], al ; jnp 0x423a87 ; jmp qword ptr [rax]
0x0000000000422eca : add byte ptr [rax], al ; mov al, -0x1c ; std ; call qword ptr [rax]
0x0000000000421c17 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x0000000000411459 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004120b9 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000406f4e : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x30] ; pop rbp ; ret
0x0000000000405433 : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x18] ; call 0x401738
0x0000000000423bfa : add byte ptr [rax], al ; or dword ptr [rax], r8d ; add byte ptr [rax], dl ; jg 0x423c0b ; jmp rdx
0x0000000000403c72 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000041a8df : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041a5b8 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000423b9e : add byte ptr [rax], al ; push rax ; jl 0x423ba7 ; jmp qword ptr [rdx]
0x0000000000421dee : add byte ptr [rax], al ; ret
0x00000000004232d2 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; cwde ; loopne 0x4232e1 ; jmp rax
0x00000000004233fe : add byte ptr [rax], al ; sub byte ptr [rcx], -2 ; jmp rsi
0x000000000042373a : add byte ptr [rax], al ; test byte ptr [rax + rax], al ; add al, ah ; fdivp st(6) ; call rdx
0x0000000000423bff : add byte ptr [rax], dl ; jg 0x423c06 ; jmp rdx
0x00000000004070bb : add byte ptr [rbx + 0x2a2dac45], cl ; ret 0x8931
0x0000000000407377 : add byte ptr [rbx + 0x2b2dac45], cl ; ret 0x8931
0x000000000041a8e0 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0x000000000041a5b9 : add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004059f7 : add byte ptr [rbx - 0x32d237bb], cl ; ret
0x00000000004059b5 : add byte ptr [rbx - 0x33d237bb], cl ; ret
0x0000000000403c34 : add byte ptr [rbx - 0x3874b], cl ; dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000405ef3 : add byte ptr [rbx - 0x3fd21bbb], cl ; sub al, 0 ; ret
0x0000000000405f4b : add byte ptr [rbx - 0x62d21bbb], cl ; insb byte ptr [rdi], dx ; ret
0x0000000000405e6f : add byte ptr [rbx - 0x63d21bbb], cl ; insb byte ptr [rdi], dx ; ret
0x00000000004214db : add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000421457 : add byte ptr [rbx - 0x66d217bb], cl ; ret
0x00000000004075e8 : add byte ptr [rbx], cl ; test al, -0x17 ; ret
0x00000000004208f0 : add byte ptr [rcx + 0xf], al ; pushfq ; ret 0x8445
0x0000000000406981 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8041
0x0000000000408e0b : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000423bfb : add byte ptr [rcx + rcx], al ; add byte ptr [rax], dl ; jg 0x423c0a ; jmp rdx
0x0000000000406b47 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041cf2e : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000401808 : add byte ptr [rcx], al ; ret
0x0000000000421597 : add byte ptr [rdi], cl ; popfq ; ret 0xd284
0x00000000004037b5 : add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000411982 : add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x00000000004127ef : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000403519 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000406c02 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe280
0x0000000000410764 : add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x0000000000408f43 : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x00000000004086b9 : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x00000000004127d1 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004055c9 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000403d55 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x0000000000422ec7 : add byte ptr [rdi], dh ; add byte ptr [rax], al ; mov al, -0x1c ; std ; call qword ptr [rax]
0x0000000000405776 : add byte ptr es:[rax - 0x77], cl ; ret 0x7fe8
0x0000000000407c4d : add cl, ch ; ret
0x0000000000420d9f : add cl, ch ; ret 0
0x0000000000406550 : add cl, ch ; ret 1
0x0000000000403415 : add dh, al ; add al, 0x25 ; ret
0x00000000004033a6 : add dh, al ; add al, 0x25 ; ret 0x6252
0x000000000041ab55 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000000000041b27a : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004036e5 : add dword ptr [rbx + 0x25148a22], eax ; ret 0x6252
0x0000000000406e2d : add dword ptr [rdi], ecx ; mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000420cb1 : add dword ptr [rdi], ecx ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000401804 : add eax, 0x223aae ; add ebx, esi ; ret
0x000000000040654e : add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x0000000000405213 : add eax, ebp ; xlatb ; ret
0x00000000004017cb : add eax, edx ; sar rax, 1 ; jne 0x4017dc ; pop rbp ; ret
0x0000000000401809 : add ebx, esi ; ret
0x00000000004033dd : add esi, eax ; add al, 0x25 ; ret 0x6252
0x0000000000403cd0 : add esi, eax ; mov rax, rsi ; pop rbp ; ret
0x0000000000401acb : add esp, 0x10 ; pop rbp ; ret
0x000000000041cf2c : add esp, 0x100 ; pop rbp ; ret
0x000000000041b277 : add esp, 0x118 ; pop rbx ; pop rbp ; ret
0x00000000004077ab : add esp, 0x120 ; pop rbp ; ret
0x00000000004109dc : add esp, 0x130 ; pop rbp ; ret
0x0000000000406c31 : add esp, 0x150 ; pop rbp ; ret
0x0000000000408fbd : add esp, 0x190 ; pop rbp ; ret
0x000000000041d09c : add esp, 0x1a0 ; pop rbp ; ret
0x000000000041160d : add esp, 0x20 ; pop rbp ; ret
0x0000000000420bf3 : add esp, 0x2d0 ; pop rbp ; ret
0x000000000041e94a : add esp, 0x2e0 ; pop rbp ; ret
0x00000000004116e8 : add esp, 0x30 ; pop rbp ; ret
0x00000000004058e9 : add esp, 0x360 ; pop rbp ; ret
0x0000000000403c6e : add esp, 0x3a0 ; pop rbp ; ret
0x00000000004084c9 : add esp, 0x40 ; pop rbp ; ret
0x00000000004101aa : add esp, 0x460 ; pop rbp ; ret
0x0000000000401a80 : add esp, 0x50 ; pop rbp ; ret
0x0000000000408256 : add esp, 0x60 ; pop rbp ; ret
0x000000000041b45f : add esp, 0x70 ; pop rbp ; ret
0x0000000000407f11 : add esp, 0x78 ; pop rbp ; ret
0x000000000041bacc : add esp, 0x80 ; pop rbp ; ret
0x0000000000406159 : add esp, 0x90 ; pop rbp ; ret
0x0000000000405d73 : add esp, 0xa0 ; pop rbp ; ret
0x0000000000411acf : add esp, 0xb0 ; pop rbp ; ret
0x000000000041a5b4 : add esp, 0xc78 ; pop rbx ; pop rbp ; ret
0x00000000004110db : add esp, 0xd0 ; pop rbp ; ret
0x000000000040135e : add esp, 8 ; ret
0x00000000004017ca : add rax, rdx ; sar rax, 1 ; jne 0x4017dd ; pop rbp ; ret
0x0000000000403ccf : add rsi, rax ; mov rax, rsi ; pop rbp ; ret
0x0000000000401aca : add rsp, 0x10 ; pop rbp ; ret
0x000000000041cf2b : add rsp, 0x100 ; pop rbp ; ret
0x000000000041b276 : add rsp, 0x118 ; pop rbx ; pop rbp ; ret
0x00000000004077aa : add rsp, 0x120 ; pop rbp ; ret
0x00000000004109db : add rsp, 0x130 ; pop rbp ; ret
0x0000000000406c30 : add rsp, 0x150 ; pop rbp ; ret
0x0000000000408fbc : add rsp, 0x190 ; pop rbp ; ret
0x000000000041d09b : add rsp, 0x1a0 ; pop rbp ; ret
0x000000000041160c : add rsp, 0x20 ; pop rbp ; ret
0x0000000000420bf2 : add rsp, 0x2d0 ; pop rbp ; ret
0x000000000041e949 : add rsp, 0x2e0 ; pop rbp ; ret
0x00000000004116e7 : add rsp, 0x30 ; pop rbp ; ret
0x00000000004058e8 : add rsp, 0x360 ; pop rbp ; ret
0x0000000000403c6d : add rsp, 0x3a0 ; pop rbp ; ret
0x00000000004084c8 : add rsp, 0x40 ; pop rbp ; ret
0x00000000004101a9 : add rsp, 0x460 ; pop rbp ; ret
0x0000000000401a7f : add rsp, 0x50 ; pop rbp ; ret
0x0000000000408255 : add rsp, 0x60 ; pop rbp ; ret
0x000000000041b45e : add rsp, 0x70 ; pop rbp ; ret
0x0000000000407f10 : add rsp, 0x78 ; pop rbp ; ret
0x000000000041bacb : add rsp, 0x80 ; pop rbp ; ret
0x0000000000406158 : add rsp, 0x90 ; pop rbp ; ret
0x0000000000405d72 : add rsp, 0xa0 ; pop rbp ; ret
0x0000000000411ace : add rsp, 0xb0 ; pop rbp ; ret
0x000000000041a5b3 : add rsp, 0xc78 ; pop rbx ; pop rbp ; ret
0x00000000004110da : add rsp, 0xd0 ; pop rbp ; ret
0x000000000040135d : add rsp, 8 ; ret
0x0000000000420cb0 : and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000401807 : and al, byte ptr [rax] ; add ebx, esi ; ret
0x000000000040585f : and byte ptr [rcx - 0x76], ch ; adc al, 0x25 ; ret
0x00000000004077ad : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004036e6 : and dword ptr [rdx], 0xffffff8a ; adc al, 0x25 ; ret 0x6252
0x00000000004033a1 : and eax, 0x6252c1 ; add dh, al ; add al, 0x25 ; ret 0x6252
0x00000000004033d8 : and eax, 0x6252c1 ; add esi, eax ; add al, 0x25 ; ret 0x6252
0x0000000000407f2f : and eax, 0x6252e0 ; pop rbp ; ret
0x0000000000407f53 : and eax, 0x6252e8 ; pop rbp ; ret
0x0000000000405682 : and eax, 0x89480042 ; ret 0x73e8
0x00000000004056fc : and eax, 0x89480042 ; ret 0xf9e8
0x0000000000405438 : call 0x34728
0x000000000041e61f : call 0x4013b6
0x000000000041e5ec : call 0x401416
0x0000000000405439 : call 0x401732
0x000000000041a5f9 : call 0xffffffffe9042f49
0x000000000041a5f8 : call 0xffffffffe9042f4a
0x000000000041603d : call 0xfffffffff739e5d4
0x00000000004206b5 : call 0xffffffffff468c8a
0x0000000000418b69 : call 0xffffffffff56113b
0x0000000000418b68 : call 0xffffffffff56113c
0x0000000000418b69 : call 0xffffffffff56113d
0x0000000000418b68 : call 0xffffffffff56113e
0x0000000000404cf8 : call 0xffffffffff7cd2ca
0x0000000000404cf7 : call 0xffffffffff7cd2cb
0x0000000000421dc9 : call qword ptr [r12 + rbx*8]
0x000000000040ae5e : call qword ptr [rax]
0x0000000000419b85 : call qword ptr [rcx]
0x0000000000417b23 : call qword ptr [rdx]
0x0000000000405731 : call qword ptr [rsi]
0x0000000000421dca : call qword ptr [rsp + rbx*8]
0x000000000040182d : call rax
0x00000000004162da : call rbx
0x0000000000423743 : call rdx
0x000000000041cee4 : call rsi
0x0000000000404cfe : call rsp
0x000000000042145c : cdq ; ret
0x000000000041f502 : clc ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041dde0 : clc ; add rsp, 0x70 ; pop rbp ; ret
0x00000000004017cf : clc ; jne 0x4017d8 ; pop rbp ; ret
0x00000000004084ee : clc ; mov esi, dword ptr [rbp - 0xc] ; mov dword ptr [rdi], esi ; pop rbp ; ret
0x0000000000403ce7 : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000403ceb : clc ; pop rbp ; ret
0x00000000004187bd : cld ; sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x0000000000404ff0 : cmovs ecx, dword ptr [rbx - 0x7eb71fab] ; ret 1
0x0000000000401806 : cmp ah, byte ptr [rdx] ; add byte ptr [rcx], al ; ret
0x000000000041fcbd : cmp al, -0x2a ; ret
0x0000000000403744 : cmp byte ptr [rcx - 0x4d81f5a5], -0x76 ; adc al, 0x25 ; ret
0x0000000000408dc3 : cmp dh, -1 ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000040178d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4017a0 ; pop rbp ; ret
0x000000000041aa94 : cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp qword ptr [rdx + 0xc2e968]
0x0000000000410fbb : cvtps2pd xmm2, qword ptr [rbx - 0x17] ; ret 0
0x0000000000420f5b : cwde ; js 0x420f05 ; ret
0x0000000000420fa2 : cwde ; js 0x420f4c ; ret
0x0000000000420fdc : cwde ; js 0x420f86 ; ret
0x00000000004232d8 : cwde ; loopne 0x4232db ; jmp rax
0x00000000004106fb : dec dword ptr [rax - 0x75] ; push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 0x30
0x00000000004056a0 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000403c3a : dec dword ptr [rax - 0x77] ; ret 0xb0
0x0000000000418962 : dec dword ptr [rax - 0x7f] ; ret 1
0x0000000000418c6d : dec dword ptr [rax - 0x7f] ; ret 2
0x000000000041a174 : dec dword ptr [rdi] ; ret 0x8589
0x0000000000407a80 : dec dword ptr [rdi] ; test ah, dl ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x000000000041bc23 : dec dword ptr [rdi] ; test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000040654a : dec dword ptr [rdi] ; test dh, bh ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x0000000000417ca8 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x00000000004059fa : enter -0x32d3, 0x4a ; ret
0x00000000004059b8 : enter -0x33d3, 0x4a ; ret
0x0000000000405748 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000042046b : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000040580c : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004057e0 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004108b1 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x00000000004055c5 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041baa9 : fadd qword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000423741 : fdivp st(6) ; call rdx
0x000000000041d7e4 : fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000421dcc : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000401ac9 : hlt ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000408fbb : hlt ; add rsp, 0x190 ; pop rbp ; ret
0x0000000000403c6c : hlt ; add rsp, 0x3a0 ; pop rbp ; ret
0x000000000041eaac : hlt ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004084f1 : hlt ; mov dword ptr [rdi], esi ; pop rbp ; ret
0x00000000004017a0 : hlt ; pop rbp ; mov edi, 0x625280 ; jmp rax
0x000000000041c57e : imul eax, dword ptr [rip + 0x7db80000], 0x13 ; ret
0x0000000000418119 : in al, -0x7f ; ret 0xff9f
0x00000000004182ff : in al, -0x7f ; ret 0xffbf
0x00000000004183a5 : in al, -0x7f ; ret 0xffc5
0x00000000004183d3 : in al, -0x7f ; ret 0xffd5
0x00000000004184a1 : in al, -0x7f ; ret 0xffd8
0x0000000000418637 : in al, -0x7f ; ret 0xffe0
0x0000000000422ecd : in al, -3 ; call qword ptr [rax]
0x0000000000405f4e : in al, 0x2d ; popfq ; insb byte ptr [rdi], dx ; ret
0x0000000000405e72 : in al, 0x2d ; pushfq ; insb byte ptr [rdi], dx ; ret
0x00000000004088e8 : in al, 6 ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000423b9c : in al, 8 ; add byte ptr [rax], al ; push rax ; jl 0x423ba9 ; jmp qword ptr [rdx]
0x000000000041ee0a : in al, dx ; add rsp, 0x80 ; pop rbp ; ret
0x00000000004121ca : in al, dx ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000042165b : in eax, dx ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000403766 : inc byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000403764 : inc byte ptr [rcx + 0xfe] ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041978f : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8445
0x0000000000417d51 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000408f3f : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x0000000000408e42 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040308f : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8445
0x000000000041b248 : inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x0000000000405e75 : insb byte ptr [rdi], dx ; ret
0x0000000000405681 : insd dword ptr [rdi], dx ; and eax, 0x89480042 ; ret 0x73e8
0x00000000004148ef : insd dword ptr [rdi], dx ; ret 0x891a
0x0000000000417f2f : insd dword ptr [rdi], dx ; ret 0xb91a
0x00000000004075e7 : int1 ; add byte ptr [rbx], cl ; test al, -0x17 ; ret
0x0000000000401793 : ja 0x40179a ; pop rbp ; ret
0x0000000000422ec8 : ja 0x422ed1 ; add byte ptr [rax], al ; mov al, -0x1c ; std ; call qword ptr [rax]
0x00000000004229a1 : jae 0x4229b6 ; mov ebx, 0x2e766a0a ; leave ; ret 0x8581
0x00000000004229a7 : jbe 0x4229da ; leave ; ret 0x8581
0x000000000040179f : je 0x40179d ; pop rbp ; mov edi, 0x625280 ; jmp rax
0x0000000000423c01 : jg 0x423c04 ; jmp rdx
0x0000000000403ce6 : jge 0x403ce7 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000405437 : jge 0x405425 ; call 0x401734
0x00000000004084ed : jge 0x4084ef ; mov esi, dword ptr [rbp - 0xc] ; mov dword ptr [rdi], esi ; pop rbp ; ret
0x000000000041075f : jge 0x410741 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd284
0x00000000004107bb : jge 0x41079d ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000041c098 : jge 0x41c0af ; ret
0x000000000041c583 : jge 0x41c59a ; ret
0x0000000000421bc9 : jge 0x421bc3 ; pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x0000000000405211 : jl 0x405219 ; add eax, ebp ; xlatb ; ret
0x000000000041bf6c : jl 0x41bf83 ; ret
0x0000000000423ba1 : jl 0x423ba4 ; jmp qword ptr [rdx]
0x000000000042291f : jmp 0x3998eb81
0x000000000040151b : jmp 0x401377
0x0000000000403411 : jmp 0x403c7e
0x00000000004053d1 : jmp 0x40539c
0x0000000000405b83 : jmp 0x405d83
0x0000000000407c49 : jmp 0x407c54
0x0000000000410572 : jmp 0x4109ea
0x000000000041083d : jmp 0x4109ec
0x00000000004178dd : jmp 0x41a5c3
0x000000000041a371 : jmp 0x41a5c5
0x000000000041c57d : jmp 0x41caf5
0x0000000000420d9b : jmp 0x420da6
0x0000000000421a0b : jmp 0x421a16
0x000000000041f53e : jmp 0xffffffffb703f90a
0x0000000000420f5a : jmp 0xffffffffc3e687fb
0x0000000000404e5f : jmp qword ptr [rax]
0x000000000040b045 : jmp qword ptr [rbx]
0x000000000040afab : jmp qword ptr [rcx]
0x000000000041aa95 : jmp qword ptr [rdx + 0xc2e968]
0x000000000040de7f : jmp qword ptr [rdx]
0x0000000000408f76 : jmp qword ptr [rsi]
0x00000000004017a7 : jmp rax
0x000000000040b7db : jmp rbx
0x0000000000419d2e : jmp rdi
0x00000000004017e7 : jmp rdx
0x0000000000423403 : jmp rsi
0x0000000000419729 : jmp rsp
0x00000000004017d0 : jne 0x4017d7 ; pop rbp ; ret
0x0000000000405389 : jne 0x405319 ; adc al, 0x25 ; ret 0x6252
0x00000000004084f0 : jne 0x4084eb ; mov dword ptr [rdi], esi ; pop rbp ; ret
0x000000000041b246 : jne 0x41b24f ; inc edi ; mov word ptr [r8 + 0x3a], fs ; ret
0x0000000000423a81 : jnp 0x423a84 ; jmp qword ptr [rax]
0x0000000000423a80 : jnp 0x423a85 ; jmp qword ptr [rax]
0x0000000000423961 : jns 0x423964 ; jmp qword ptr [rdx]
0x000000000041b461 : jo 0x41b4c2 ; ret
0x000000000041b584 : jo 0x41b5e5 ; ret
0x000000000041b6be : jo 0x41b71f ; ret
0x000000000041d88c : jo 0x41d8ed ; ret
0x000000000041dde4 : jo 0x41de45 ; ret
0x00000000004229b8 : jo 0x422948 ; ret 0x51a3
0x0000000000407f13 : js 0x407f74 ; ret
0x000000000041a5b6 : js 0x41a5ca ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000420f5c : js 0x420f04 ; ret
0x0000000000420fa3 : js 0x420f4b ; ret
0x0000000000420fdd : js 0x420f85 ; ret
0x00000000004231d7 : lcall ptr [rax] ; adc byte ptr [rax], al ; add al, al ; ret
0x000000000040b344 : lea edi, dword ptr [rdi + rdi*8 - 1] ; jmp qword ptr [rbx]
0x000000000040b141 : lea esi, dword ptr [rdi + rdi*8 - 1] ; jmp qword ptr [rbx]
0x00000000004229a9 : leave ; ret 0x8581
0x0000000000405654 : loopne 0x40565d ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x00000000004086b5 : loopne 0x4086f6 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000041160b : loopne 0x41165b ; add esp, 0x20 ; pop rbp ; ret
0x000000000041160a : loopne 0x41165c ; add esp, 0x20 ; pop rbp ; ret
0x000000000041258e : loopne 0x412597 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041d5d0 : loopne 0x41d5d9 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x000000000041d9dc : loopne 0x41da2c ; add esp, 0x40 ; pop rbp ; ret
0x000000000041d9db : loopne 0x41da2d ; add esp, 0x40 ; pop rbp ; ret
0x000000000041e94c : loopne 0x41e955 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004232d9 : loopne 0x4232da ; jmp rax
0x00000000004075e6 : mov ah, -0xf ; add byte ptr [rbx], cl ; test al, -0x17 ; ret
0x0000000000401c70 : mov ah, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x0000000000422ecc : mov al, -0x1c ; std ; call qword ptr [rax]
0x000000000042068a : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000411ad1 : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041e5ea : mov al, 0 ; call 0x401418
0x000000000041274b : mov al, 0x48 ; add esp, 0xa0 ; pop rbp ; ret
0x0000000000420cad : mov al, byte ptr [rbp - 0x11] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000420e5d : mov al, byte ptr [rbp - 0x12] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000421659 : mov al, byte ptr [rbp - 0x13] ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000404fee : mov bl, -1 ; cmovs ecx, dword ptr [rbx - 0x7eb71fab] ; ret 1
0x0000000000407f51 : mov byte ptr [0x6252e8], al ; pop rbp ; ret
0x000000000041a108 : mov byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000401803 : mov byte ptr [rip + 0x223aae], 1 ; ret
0x000000000042291e : mov ch, -0x17 ; pop rbx ; ret 0x3956
0x0000000000406e2f : mov dh, -0x40 ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000420cb3 : mov dh, -0x40 ; pop rbp ; ret
0x0000000000421785 : mov dl, -0x47 ; ret
0x0000000000403749 : mov dl, -0x76 ; adc al, 0x25 ; ret
0x0000000000407f2d : mov dword ptr [0x6252e0], edi ; pop rbp ; ret
0x0000000000412407 : mov dword ptr [rax + 4], ecx ; mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x00000000004121cb : mov dword ptr [rax], ecx ; pop rbp ; ret
0x000000000041233f : mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x0000000000411609 : mov dword ptr [rbp - 0x20], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000401c6e : mov dword ptr [rbp - 0x4c], eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000401ac7 : mov dword ptr [rbp - 0xc], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000403ce5 : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004125bd : mov dword ptr [rcx + 0x30], eax ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004082da : mov dword ptr [rdi + 0x28], 0 ; pop rbp ; ret
0x00000000004084f2 : mov dword ptr [rdi], esi ; pop rbp ; ret
0x00000000004030b9 : mov eax, 0x116e7bb9 ; ret 0x558b
0x00000000004120bf : mov eax, dword ptr [rax] ; pop rbp ; ret
0x000000000041d91b : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004084c5 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041d5ff : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000407f0d : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x78 ; pop rbp ; ret
0x000000000041145c : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000041da1e : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041d2f0 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041240a : mov eax, dword ptr [rbp - 0x18] ; pop rbp ; ret
0x000000000041d9da : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000411fb4 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004120bc : mov eax, dword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004121c5 : mov eax, dword ptr [rbp - 0x30] ; mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000406f51 : mov eax, dword ptr [rbp - 0x30] ; pop rbp ; ret
0x0000000000412341 : mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
0x000000000041b45b : mov eax, dword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x000000000041eaaa : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041f500 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x60 ; pop rbp ; ret
0x000000000041ddde : mov eax, dword ptr [rbp - 8] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000403ce9 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000403cd3 : mov eax, esi ; pop rbp ; ret
0x000000000040759b : mov ebp, 0x662bba2d ; ret 0x4831
0x000000000040182b : mov ebp, esp ; call rax
0x0000000000401791 : mov ebp, esp ; ja 0x40179c ; pop rbp ; ret
0x00000000004229a4 : mov ebx, 0x2e766a0a ; leave ; ret 0x8581
0x00000000004121c8 : mov ecx, dword ptr [rbp - 0x14] ; mov dword ptr [rax], ecx ; pop rbp ; ret
0x0000000000401825 : mov edi, 0x624e20 ; mov rbp, rsp ; call rax
0x00000000004017a2 : mov edi, 0x625280 ; jmp rax
0x00000000004017e2 : mov edi, 0x625280 ; jmp rdx
0x0000000000405436 : mov edi, dword ptr [rbp - 0x18] ; call 0x401735
0x00000000004084ec : mov edi, dword ptr [rbp - 8] ; mov esi, dword ptr [rbp - 0xc] ; mov dword ptr [rdi], esi ; pop rbp ; ret
0x0000000000421dc7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000421dc6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x00000000004084ef : mov esi, dword ptr [rbp - 0xc] ; mov dword ptr [rdi], esi ; pop rbp ; ret
0x00000000004017e0 : mov esi, eax ; mov edi, 0x625280 ; jmp rdx
0x0000000000407f2c : mov qword ptr [0x6252e0], rdi ; pop rbp ; ret
0x0000000000403ce4 : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004125bc : mov qword ptr [rcx + 0x30], rax ; add rsp, 0x50 ; pop rbp ; ret
0x00000000004082d9 : mov qword ptr [rdi + 0x28], 0 ; pop rbp ; ret
0x00000000004075e5 : mov r12b, -0xf ; add byte ptr [rbx], cl ; test al, -0x17 ; ret
0x0000000000401c6f : mov r12b, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000000000041d91a : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004084c4 : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041d5fe : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000407f0c : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x78 ; pop rbp ; ret
0x000000000041145b : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000041da1d : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000041d2ef : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x40 ; pop rbp ; ret
0x000000000041d9d9 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000411fb3 : mov rax, qword ptr [rbp - 0x28] ; add rsp, 0x60 ; pop rbp ; ret
0x00000000004120bb : mov rax, qword ptr [rbp - 0x28] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000406f50 : mov rax, qword ptr [rbp - 0x30] ; pop rbp ; ret
0x000000000041b45a : mov rax, qword ptr [rbp - 0x58] ; add rsp, 0x70 ; pop rbp ; ret
0x0000000000403ce8 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000403cd2 : mov rax, rsi ; pop rbp ; ret
0x000000000040182a : mov rbp, rsp ; call rax
0x0000000000401790 : mov rbp, rsp ; ja 0x40179d ; pop rbp ; ret
0x0000000000405435 : mov rdi, qword ptr [rbp - 0x18] ; call 0x401736
0x00000000004017df : mov rsi, rax ; mov edi, 0x625280 ; jmp rdx
0x000000000041b24a : mov word ptr [r8 + 0x3a], fs ; ret
0x000000000041b24b : mov word ptr [rax + 0x3a], fs ; ret
0x000000000041899c : movabs al, byte ptr [0x3944013744be0f44] ; ret 0xf41
0x00000000004219fe : movabs al, byte ptr [0x840fc445895ff32e] ; ret 0
0x000000000041c57c : movsb byte ptr [rdi], byte ptr [rsi] ; jmp 0x41caf6
0x0000000000420f5d : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000406e2e : movzx eax, al ; add rsp, 0x50 ; pop rbp ; ret
0x0000000000420cb2 : movzx eax, al ; pop rbp ; ret
0x0000000000421de8 : nop dword ptr [rax + rax] ; ret
0x00000000004229a2 : or ah, byte ptr [rbp - 0x45] ; or ch, byte ptr [rdx + 0x76] ; leave ; ret 0x8581
0x000000000041a5b7 : or al, 0 ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000410131 : or al, 1 ; ret 0x5189
0x0000000000403413 : or byte ptr [rax], al ; add dh, al ; add al, 0x25 ; ret
0x0000000000406e0d : or byte ptr [rcx + 0xf9], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe280
0x000000000041011f : or byte ptr [rcx], al ; ret 0x5189
0x00000000004229a5 : or ch, byte ptr [rdx + 0x76] ; leave ; ret 0x8581
0x0000000000423bfd : or dword ptr [rax], eax ; add byte ptr [rax], dl ; jg 0x423c08 ; jmp rdx
0x000000000041bc27 : or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000423bfc : or dword ptr [rax], r8d ; add byte ptr [rax], dl ; jg 0x423c09 ; jmp rdx
0x000000000041b641 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000004107b3 : out -0x47, al ; ret
0x0000000000420e5f : out dx, al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x00000000004107b0 : out dx, al ; test dword ptr [rcx], edi ; out -0x47, al ; ret
0x0000000000420caf : out dx, eax ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0x0000000000421ddc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000421dde : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041a8e2 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000421de0 : pop r14 ; pop r15 ; ret
0x000000000041a8e4 : pop r15 ; pop rbp ; ret
0x0000000000421de2 : pop r15 ; ret
0x00000000004214d8 : pop rax ; add byte ptr [rax], al ; add byte ptr [rbx - 0x65d217bb], cl ; ret
0x0000000000401802 : pop rbp ; mov byte ptr [rip + 0x223aae], 1 ; ret
0x00000000004030b8 : pop rbp ; mov eax, 0x116e7bb9 ; ret 0x558b
0x00000000004017a1 : pop rbp ; mov edi, 0x625280 ; jmp rax
0x00000000004017de : pop rbp ; mov rsi, rax ; mov edi, 0x625280 ; jmp rdx
0x0000000000421ddb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000421ddf : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401795 : pop rbp ; ret
0x000000000041a8e1 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000041a5ba : pop rbx ; pop rbp ; ret
0x0000000000422920 : pop rbx ; ret 0x3956
0x0000000000421784 : pop rcx ; mov dl, -0x47 ; ret
0x000000000041a8e5 : pop rdi ; pop rbp ; ret
0x0000000000421de3 : pop rdi ; ret
0x0000000000421bcb : pop rdx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0xd284
0x000000000041a8e3 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000421de1 : pop rsi ; pop r15 ; ret
0x000000000040697e : pop rsp ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8041
0x0000000000421ddd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004147f2 : pop rsp ; ret
0x0000000000405f50 : popfq ; insb byte ptr [rdi], dx ; ret
0x0000000000421599 : popfq ; ret 0xd284
0x000000000040c9e6 : push -0x16464455 ; ret
0x00000000004229a6 : push 0x76 ; leave ; ret 0x8581
0x0000000000419fdf : push qword ptr [rdx + rbx*2 + 0x1f] ; ret 0xd4e9
0x0000000000423ba0 : push rax ; jl 0x423ba5 ; jmp qword ptr [rdx]
0x0000000000401a82 : push rax ; pop rbp ; ret
0x000000000041cedb : push rbp ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x000000000041d7e3 : push rbp ; fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000418118 : push rbp ; in al, -0x7f ; ret 0xff9f
0x00000000004182fe : push rbp ; in al, -0x7f ; ret 0xffbf
0x00000000004183a4 : push rbp ; in al, -0x7f ; ret 0xffc5
0x00000000004183d2 : push rbp ; in al, -0x7f ; ret 0xffd5
0x00000000004184a0 : push rbp ; in al, -0x7f ; ret 0xffd8
0x0000000000418636 : push rbp ; in al, -0x7f ; ret 0xffe0
0x0000000000401824 : push rbp ; mov edi, 0x624e20 ; mov rbp, rsp ; call rax
0x00000000004106fe : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 0x30
0x000000000041015d : push rcx ; adc al, 1 ; ret 0x5189
0x0000000000410145 : push rcx ; adc byte ptr [rcx], al ; ret 0x5189
0x000000000041010c : push rcx ; add al, 1 ; ret 0x5189
0x0000000000410130 : push rcx ; or al, 1 ; ret 0x5189
0x000000000041011e : push rcx ; or byte ptr [rcx], al ; ret 0x5189
0x000000000041018d : push rcx ; sbb al, 1 ; ret 0x5189
0x0000000000410175 : push rcx ; sbb byte ptr [rcx], al ; ret 0x5189
0x0000000000410fb9 : push rdi ; cvtps2pd xmm2, qword ptr [rbx - 0x17] ; ret 0
0x00000000004098bf : push rdx ; ret 0x8589
0x000000000040f5f8 : push rdx ; ret 0xb3e9
0x0000000000405e74 : pushfq ; insb byte ptr [rdi], dx ; ret
0x0000000000403410 : pushfq ; jmp 0x403c7f
0x00000000004208f3 : pushfq ; ret 0x8445
0x00000000004037b7 : pushfq ; ret 0xd284
0x00000000004033a2 : rcl dword ptr [rdx + 0x62], 0 ; add dh, al ; add al, 0x25 ; ret 0x6252
0x00000000004033d9 : rcl dword ptr [rdx + 0x62], 0 ; add esi, eax ; add al, 0x25 ; ret 0x6252
0x0000000000401361 : ret
0x0000000000408eff : ret 0
0x000000000041fa99 : ret 0x10
0x00000000004100fe : ret 0x1189
0x00000000004092f1 : ret 0x12a0
0x0000000000403e71 : ret 0x14
0x000000000042168b : ret 0x2030
0x0000000000401722 : ret 0x223a
0x0000000000401522 : ret 0x223b
0x0000000000408a45 : ret 0x2286
0x0000000000417af7 : ret 0x2a
0x000000000041ae16 : ret 0x2c1
0x0000000000410702 : ret 0x30
0x0000000000422921 : ret 0x3956
0x0000000000410995 : ret 0x40
0x0000000000406f33 : ret 0x4240
0x0000000000414a5a : ret 0x43fa
0x000000000040756c : ret 0x4831
0x0000000000409f6a : ret 0x4cbc
0x000000000041010f : ret 0x5189
0x00000000004229bb : ret 0x51a3
0x00000000004030be : ret 0x558b
0x000000000041ec53 : ret 0x5e5
0x00000000004104ae : ret 0x619
0x00000000004033aa : ret 0x6252
0x000000000040a241 : ret 0x64c5
0x0000000000405687 : ret 0x73e8
0x000000000040577b : ret 0x7fe8
0x0000000000406985 : ret 0x8041
0x0000000000403093 : ret 0x8445
0x00000000004229aa : ret 0x8581
0x00000000004022e5 : ret 0x8589
0x00000000004148f0 : ret 0x891a
0x00000000004070c2 : ret 0x8931
0x000000000042103c : ret 0x8934
0x00000000004107ef : ret 0x8948
0x000000000041f541 : ret 0x89b6
0x0000000000421018 : ret 0x8b34
0x0000000000405048 : ret 0x8b48
0x0000000000410463 : ret 0x960f
0x000000000041e22b : ret 0xa4be
0x00000000004187c5 : ret 0xa9b9
0x0000000000419770 : ret 0xaae8
0x0000000000414242 : ret 0xade6
0x000000000040f5ec : ret 0xb
0x0000000000403542 : ret 0xb0
0x000000000040f5f9 : ret 0xb3e9
0x0000000000417f30 : ret 0xb91a
0x000000000041f7fb : ret 0xb9b6
0x00000000004017c5 : ret 0xc148
0x000000000040351c : ret 0xd284
0x0000000000419fe3 : ret 0xd4e9
0x0000000000403d58 : ret 0xe280
0x000000000041a5fc : ret 0xee8
0x00000000004189a5 : ret 0xf41
0x00000000004088c5 : ret 0xf5e8
0x0000000000405701 : ret 0xf9e8
0x000000000041811b : ret 0xff9f
0x0000000000419abe : ret 0xffa5
0x0000000000418301 : ret 0xffbf
0x0000000000418d6b : ret 0xffc4
0x00000000004183a7 : ret 0xffc5
0x00000000004183d5 : ret 0xffd5
0x00000000004184a3 : ret 0xffd8
0x0000000000418e11 : ret 0xffd9
0x0000000000418639 : ret 0xffe0
0x000000000041770e : ret 0xfffa
0x0000000000405d7c : ret 0xfffb
0x000000000040543b : ret 0xffff
0x0000000000403812 : ret 1
0x0000000000418c70 : ret 2
0x000000000041a0f7 : ret 4
0x00000000004036b0 : ret 5
0x000000000041a7e0 : ret 8
0x00000000004119aa : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x00000000004205e4 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004110dd : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000420bf5 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004121c6 : ror byte ptr [r11 + 0x889ec4d], 1 ; pop rbp ; ret
0x00000000004017cc : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4017db ; pop rbp ; ret
0x0000000000406e30 : ror byte ptr [rax - 0x7d], -0x3c ; push rax ; pop rbp ; ret
0x00000000004077a9 : ror byte ptr [rax - 0x7f], -0x3c ; and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004106ff : ror byte ptr [rax - 0x7f], 1 ; ret 0x30
0x00000000004121c7 : ror byte ptr [rbx + 0x889ec4d], 1 ; pop rbp ; ret
0x000000000041d7e0 : ror dword ptr [rax - 0x75], 0x55 ; fmul dword ptr [rax + 1] ; ret 0x8948
0x000000000040511e : sahf ; ret
0x0000000000411984 : sahf ; ret 0xd284
0x000000000042291a : sal byte ptr [rbp - 0x164a245b], 0x5b ; ret 0x3956
0x000000000040179e : sal byte ptr [rsp + rsi*8 + 0x5d], -0x41 ; adc byte ptr [rdx + 0x62], 0 ; jmp rax
0x000000000041fcbe : salc ; ret
0x00000000004017ce : sar eax, 1 ; jne 0x4017d9 ; pop rbp ; ret
0x00000000004017cd : sar rax, 1 ; jne 0x4017da ; pop rbp ; ret
0x00000000004232d4 : sbb al, 0 ; add byte ptr [rax], al ; cwde ; loopne 0x4232df ; jmp rax
0x000000000041018e : sbb al, 1 ; ret 0x5189
0x000000000041b279 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000410176 : sbb byte ptr [rcx], al ; ret 0x5189
0x000000000041d3c3 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004187be : sbb eax, 0x3db80000 ; sub al, 0x38 ; ret 0xa9b9
0x0000000000401805 : scasb al, byte ptr [rdi] ; cmp ah, byte ptr [rdx] ; add byte ptr [rcx], al ; ret
0x000000000040697d : stc ; pop rsp ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8041
0x0000000000422ece : std ; call qword ptr [rax]
0x0000000000422ed6 : std ; jmp rax
0x0000000000422919 : sti ; sal byte ptr [rbp - 0x164a245b], 0x5b ; ret 0x3956
0x00000000004030b6 : stosd dword ptr [rdi], eax ; pop rbp ; mov eax, 0x116e7bb9 ; ret 0x558b
0x0000000000405ef9 : sub al, 0 ; ret
0x0000000000415807 : sub al, 0x38 ; ret 0x8589
0x00000000004187c3 : sub al, 0x38 ; ret 0xa9b9
0x0000000000423400 : sub byte ptr [rcx], -2 ; jmp rsi
0x0000000000403ccd : sub eax, edx ; add rsi, rax ; mov rax, rsi ; pop rbp ; ret
0x0000000000423401 : sub esi, edi ; jmp rsi
0x0000000000421e1d : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000421e1c : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000407a82 : test ah, dl ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x00000000004075ea : test al, -0x17 ; ret
0x000000000041cefb : test al, -0x39 ; test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x00000000004037b1 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd284
0x0000000000403515 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd284
0x0000000000420a38 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000041b45d : test al, 0x48 ; add esp, 0x70 ; pop rbp ; ret
0x000000000041cdd8 : test al, 0xa ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000042373c : test byte ptr [rax + rax], al ; add al, ah ; fdivp st(6) ; call rdx
0x0000000000421dea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000041bc25 : test byte ptr [rdx], cl ; or dword ptr [rax], eax ; add cl, ch ; ret
0x00000000004036ae : test ch, cl ; ret 5
0x000000000040654c : test dh, bh ; add eax, dword ptr [rax] ; add cl, ch ; ret 1
0x00000000004107b1 : test dword ptr [rcx], edi ; out -0x47, al ; ret
0x000000000041cee0 : test dword ptr [rdi + rdi*8 - 1], ecx ; call rsi
0x000000000041cc48 : test dword ptr [rdi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0x00000000004036ad : test r13b, r9b ; ret 5
0x0000000000408dc2 : xchg eax, ebp ; cmp dh, -1 ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x00000000004127f1 : xchg eax, ebp ; ret
0x0000000000403092 : xchg eax, ebp ; ret 0x8445
0x000000000040351b : xchg eax, ebp ; ret 0xd284
0x0000000000406c04 : xchg eax, ebp ; ret 0xe280
0x000000000041df5b : xchg eax, ebx ; ret
0x0000000000410766 : xchg eax, ebx ; ret 0xd284
0x00000000004157eb : xchg eax, ecx ; ret
0x0000000000408f45 : xchg eax, edi ; ret 0xd284
0x000000000041593b : xchg eax, edx ; ret
0x0000000000406999 : xchg eax, edx ; ret 0x8445
0x00000000004086bb : xchg eax, edx ; ret 0xd284
0x000000000041b172 : xchg eax, esi ; ret
0x00000000004127d3 : xchg eax, esp ; ret
0x0000000000406984 : xchg eax, esp ; ret 0x8041
0x0000000000408e0e : xchg eax, esp ; ret 0x8445
0x00000000004055cb : xchg eax, esp ; ret 0xd284
0x0000000000403d57 : xchg eax, esp ; ret 0xe280
0x0000000000405215 : xlatb ; ret
0x000000000040567f : xor al, 0x25 ; insd dword ptr [rdi], dx ; and eax, 0x89480042 ; ret 0x73e8
0x00000000004109de : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041b777 : xor eax, 0x48fffff4 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000408efd : xor ecx, ebp ; ret 0
0x000000000041233d : xor edi, esi ; mov dword ptr [rax], edi ; mov eax, dword ptr [rbp - 0x38] ; pop rbp ; ret
